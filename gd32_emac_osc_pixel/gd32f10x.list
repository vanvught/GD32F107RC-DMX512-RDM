
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08008565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, pc}
 8007008:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800700c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007010:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007014:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007018:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 800702c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007030:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800703c:	080113d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, ip}
 8007040:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007044:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007048:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800704c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007050:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007054:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007058:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800705c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007060:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007064:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007068:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800706c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007070:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007074:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007078:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800707c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007080:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007084:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007088:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800708c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007090:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007094:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007098:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800709c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070a8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ac:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070b8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070bc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070c8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070cc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070d8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070dc:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070e8:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070ec:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f0:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 80070f4:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
	...
 8007100:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800710c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007110:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007114:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007118:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800711c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007120:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007124:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007128:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800712c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007130:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007134:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007138:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800713c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007140:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007144:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 8007148:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}
 800714c:	080085b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f008 fd9f 	bl	800fce4 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f007 f8be 	bl	800e330 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f008 ffb0 	bl	8010124 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001d54 	andcs	r1, r0, r4, asr sp
 80071e8:	20001d48 	andcs	r1, r0, r8, asr #26
 80071ec:	20001d5a 	andcs	r1, r0, sl, asr sp

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f008 be78 	b.w	800fef4 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001d5a 	andcs	r1, r0, sl, asr sp

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001d64 	andcs	r1, r0, r4, ror #26

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f007 f8d9 	bl	800e3e4 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f007 f8cd 	bl	800e3e4 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	2000292c 	andcs	r2, r0, ip, lsr #18
 800725c:	20001d54 	andcs	r1, r0, r4, asr sp
 8007260:	20001d48 	andcs	r1, r0, r8, asr #26
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f007 fa2c 	bl	800e6ec <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f007 fa4d 	bl	800e73c <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20002f48 	andcs	r2, r0, r8, asr #30
 80072ac:	20002f28 	andcs	r2, r0, r8, lsr #30
 80072b0:	20008be8 	andcs	r8, r0, r8, ror #23
 80072b4:	20002f24 	andcs	r2, r0, r4, lsr #30
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f008 fb86 	bl	800f9e8 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f008 fb73 	bl	800f9e8 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f008 fb67 	bl	800f9e8 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f008 fb56 	bl	800f9e8 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f008 fb4a 	bl	800f9e8 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f008 fb3e 	bl	800f9e8 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f008 bb43 	b.w	800f9fc <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	2000961e 	andcs	r9, r0, lr, lsl r6
 8007394:	20009618 	andcs	r9, r0, r8, lsl r6
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	2000962e 	andcs	r9, r0, lr, lsr #12
 80073a4:	20009638 	andcs	r9, r0, r8, lsr r6
 80073a8:	20009676 	andcs	r9, r0, r6, ror r6
 80073ac:	20009670 	andcs	r9, r0, r0, ror r6
 80073b0:	20009686 	andcs	r9, r0, r6, lsl #13
 80073b4:	20009690 	mulcs	r0, r0, r6
 80073b8:	20009644 	andcs	r9, r0, r4, asr #12

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	2000981c 	andcs	r9, r0, ip, lsl r8
 80073ec:	200096a0 	andcs	r9, r0, r0, lsr #13

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f008 fde2 	bl	800ffe4 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f008 fd8e 	bl	800ff50 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f008 fd74 	bl	800ff50 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20009a54 	andcs	r9, r0, r4, asr sl
 8007490:	20009b78 	andcs	r9, r0, r8, ror fp
 8007494:	20009bb4 			; <UNDEFINED> instruction: 0x20009bb4
 8007498:	20009b74 	andcs	r9, r0, r4, ror fp
 800749c:	20009bac 	andcs	r9, r0, ip, lsr #23
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009b7c 	andcs	r9, r0, ip, ror fp
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f008 fdec 	bl	801009c <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20009a54 	andcs	r9, r0, r4, asr sl

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f009 ff07 	bl	8011314 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f009 ff34 	bl	8011374 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f009 ff31 	bl	8011374 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	080132e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, ip, sp}
 800751c:	080159c0 	stmdaeq	r1, {r6, r7, r8, fp, ip, lr}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f00a fbdf 	bl	8011ce8 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f00a fbe9 	bl	8011d10 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f006 bee5 	b.w	800e310 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20001d5c 	andcs	r1, r0, ip, asr sp

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f006 ff41 	bl	800e3f8 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f006 ff22 	bl	800e3e4 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f006 ff13 	bl	800e3e4 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f006 ff0b 	bl	800e3e4 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f006 ffb4 	bl	800e590 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f006 fecc 	bl	800e3e4 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f006 fec5 	bl	800e3e4 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f006 fee4 	bl	800e444 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f006 fe7f 	bl	800e3b0 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f006 fe60 	bl	800e3b0 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f006 fe9d 	bl	800e444 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f006 ff3a 	bl	800e590 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f006 ff18 	bl	800e590 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f006 fe27 	bl	800e3e4 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f006 fe43 	bl	800e444 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f006 fe25 	bl	800e444 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	200028e8 	andcs	r2, r0, r8, ror #17
 8007814:	200028f0 	strdcs	r2, [r0], -r0
 8007818:	20001d78 	andcs	r1, r0, r8, ror sp
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f006 fd9b 	bl	800e3b0 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f006 fdd6 	bl	800e444 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	200028e8 	andcs	r2, r0, r8, ror #17

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f006 fee4 	bl	800e6ec <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f006 fedd 	bl	800e6ec <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20002f28 	andcs	r2, r0, r8, lsr #30
 800795c:	20002f48 	andcs	r2, r0, r8, asr #30

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f008 b84e 	b.w	800fa10 <arp_handle_request>
 8007974:	f008 b874 	b.w	800fa60 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009b78 	andcs	r9, r0, r8, ror fp
 8007a14:	20009a54 	andcs	r9, r0, r4, asr sl

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f008 fb7f 	bl	8010168 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f008 fb7a 	bl	8010168 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f008 fb6f 	bl	8010168 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f008 fb64 	bl	8010168 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f008 fb45 	bl	8010136 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f008 fb38 	bl	8010136 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f00a f921 	bl	8011d18 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20001d54 	andcs	r1, r0, r4, asr sp
 8007ae0:	20001d48 	andcs	r1, r0, r8, asr #26

08007ae4 <__aeabi_d2f>:
 8007ae4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ae8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007aec:	bf24      	itt	cs
 8007aee:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007af2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007af6:	d90d      	bls.n	8007b14 <__aeabi_d2f+0x30>
 8007af8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007afc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b00:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b04:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b08:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b0c:	bf08      	it	eq
 8007b0e:	f020 0001 	biceq.w	r0, r0, #1
 8007b12:	4770      	bx	lr
 8007b14:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b18:	d121      	bne.n	8007b5e <__aeabi_d2f+0x7a>
 8007b1a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b1e:	bfbc      	itt	lt
 8007b20:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b24:	4770      	bxlt	lr
 8007b26:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b2a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b2e:	f1c2 0218 	rsb	r2, r2, #24
 8007b32:	f1c2 0c20 	rsb	ip, r2, #32
 8007b36:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b3a:	fa20 f002 	lsr.w	r0, r0, r2
 8007b3e:	bf18      	it	ne
 8007b40:	f040 0001 	orrne.w	r0, r0, #1
 8007b44:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b48:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b4c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b50:	ea40 000c 	orr.w	r0, r0, ip
 8007b54:	fa23 f302 	lsr.w	r3, r3, r2
 8007b58:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b5c:	e7cc      	b.n	8007af8 <__aeabi_d2f+0x14>
 8007b5e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b62:	d107      	bne.n	8007b74 <__aeabi_d2f+0x90>
 8007b64:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b68:	bf1e      	ittt	ne
 8007b6a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b6e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b72:	4770      	bxne	lr
 8007b74:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b78:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b7c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b80:	4770      	bx	lr
 8007b82:	bf00      	nop

08007b84 <__aeabi_frsub>:
 8007b84:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b88:	e002      	b.n	8007b90 <__addsf3>
 8007b8a:	bf00      	nop

08007b8c <__aeabi_fsub>:
 8007b8c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b90 <__addsf3>:
 8007b90:	0042      	lsls	r2, r0, #1
 8007b92:	bf1f      	itttt	ne
 8007b94:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007b98:	ea92 0f03 	teqne	r2, r3
 8007b9c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007ba0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ba4:	d06a      	beq.n	8007c7c <__addsf3+0xec>
 8007ba6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007baa:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bae:	bfc1      	itttt	gt
 8007bb0:	18d2      	addgt	r2, r2, r3
 8007bb2:	4041      	eorgt	r1, r0
 8007bb4:	4048      	eorgt	r0, r1
 8007bb6:	4041      	eorgt	r1, r0
 8007bb8:	bfb8      	it	lt
 8007bba:	425b      	neglt	r3, r3
 8007bbc:	2b19      	cmp	r3, #25
 8007bbe:	bf88      	it	hi
 8007bc0:	4770      	bxhi	lr
 8007bc2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bc6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bca:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bce:	bf18      	it	ne
 8007bd0:	4240      	negne	r0, r0
 8007bd2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bd6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007bda:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bde:	bf18      	it	ne
 8007be0:	4249      	negne	r1, r1
 8007be2:	ea92 0f03 	teq	r2, r3
 8007be6:	d03f      	beq.n	8007c68 <__addsf3+0xd8>
 8007be8:	f1a2 0201 	sub.w	r2, r2, #1
 8007bec:	fa41 fc03 	asr.w	ip, r1, r3
 8007bf0:	eb10 000c 	adds.w	r0, r0, ip
 8007bf4:	f1c3 0320 	rsb	r3, r3, #32
 8007bf8:	fa01 f103 	lsl.w	r1, r1, r3
 8007bfc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c00:	d502      	bpl.n	8007c08 <__addsf3+0x78>
 8007c02:	4249      	negs	r1, r1
 8007c04:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c08:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c0c:	d313      	bcc.n	8007c36 <__addsf3+0xa6>
 8007c0e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c12:	d306      	bcc.n	8007c22 <__addsf3+0x92>
 8007c14:	0840      	lsrs	r0, r0, #1
 8007c16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c1a:	f102 0201 	add.w	r2, r2, #1
 8007c1e:	2afe      	cmp	r2, #254	; 0xfe
 8007c20:	d251      	bcs.n	8007cc6 <__addsf3+0x136>
 8007c22:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c26:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c2a:	bf08      	it	eq
 8007c2c:	f020 0001 	biceq.w	r0, r0, #1
 8007c30:	ea40 0003 	orr.w	r0, r0, r3
 8007c34:	4770      	bx	lr
 8007c36:	0049      	lsls	r1, r1, #1
 8007c38:	eb40 0000 	adc.w	r0, r0, r0
 8007c3c:	3a01      	subs	r2, #1
 8007c3e:	bf28      	it	cs
 8007c40:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c44:	d2ed      	bcs.n	8007c22 <__addsf3+0x92>
 8007c46:	fab0 fc80 	clz	ip, r0
 8007c4a:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c4e:	ebb2 020c 	subs.w	r2, r2, ip
 8007c52:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c56:	bfaa      	itet	ge
 8007c58:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c5c:	4252      	neglt	r2, r2
 8007c5e:	4318      	orrge	r0, r3
 8007c60:	bfbc      	itt	lt
 8007c62:	40d0      	lsrlt	r0, r2
 8007c64:	4318      	orrlt	r0, r3
 8007c66:	4770      	bx	lr
 8007c68:	f092 0f00 	teq	r2, #0
 8007c6c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c70:	bf06      	itte	eq
 8007c72:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c76:	3201      	addeq	r2, #1
 8007c78:	3b01      	subne	r3, #1
 8007c7a:	e7b5      	b.n	8007be8 <__addsf3+0x58>
 8007c7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c84:	bf18      	it	ne
 8007c86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c8a:	d021      	beq.n	8007cd0 <__addsf3+0x140>
 8007c8c:	ea92 0f03 	teq	r2, r3
 8007c90:	d004      	beq.n	8007c9c <__addsf3+0x10c>
 8007c92:	f092 0f00 	teq	r2, #0
 8007c96:	bf08      	it	eq
 8007c98:	4608      	moveq	r0, r1
 8007c9a:	4770      	bx	lr
 8007c9c:	ea90 0f01 	teq	r0, r1
 8007ca0:	bf1c      	itt	ne
 8007ca2:	2000      	movne	r0, #0
 8007ca4:	4770      	bxne	lr
 8007ca6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007caa:	d104      	bne.n	8007cb6 <__addsf3+0x126>
 8007cac:	0040      	lsls	r0, r0, #1
 8007cae:	bf28      	it	cs
 8007cb0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cb4:	4770      	bx	lr
 8007cb6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cba:	bf3c      	itt	cc
 8007cbc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007cc0:	4770      	bxcc	lr
 8007cc2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cc6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007cd4:	bf16      	itet	ne
 8007cd6:	4608      	movne	r0, r1
 8007cd8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007cdc:	4601      	movne	r1, r0
 8007cde:	0242      	lsls	r2, r0, #9
 8007ce0:	bf06      	itte	eq
 8007ce2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007ce6:	ea90 0f01 	teqeq	r0, r1
 8007cea:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cee:	4770      	bx	lr

08007cf0 <__aeabi_ui2f>:
 8007cf0:	f04f 0300 	mov.w	r3, #0
 8007cf4:	e004      	b.n	8007d00 <__aeabi_i2f+0x8>
 8007cf6:	bf00      	nop

08007cf8 <__aeabi_i2f>:
 8007cf8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007cfc:	bf48      	it	mi
 8007cfe:	4240      	negmi	r0, r0
 8007d00:	ea5f 0c00 	movs.w	ip, r0
 8007d04:	bf08      	it	eq
 8007d06:	4770      	bxeq	lr
 8007d08:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d0c:	4601      	mov	r1, r0
 8007d0e:	f04f 0000 	mov.w	r0, #0
 8007d12:	e01c      	b.n	8007d4e <__aeabi_l2f+0x2a>

08007d14 <__aeabi_ul2f>:
 8007d14:	ea50 0201 	orrs.w	r2, r0, r1
 8007d18:	bf08      	it	eq
 8007d1a:	4770      	bxeq	lr
 8007d1c:	f04f 0300 	mov.w	r3, #0
 8007d20:	e00a      	b.n	8007d38 <__aeabi_l2f+0x14>
 8007d22:	bf00      	nop

08007d24 <__aeabi_l2f>:
 8007d24:	ea50 0201 	orrs.w	r2, r0, r1
 8007d28:	bf08      	it	eq
 8007d2a:	4770      	bxeq	lr
 8007d2c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d30:	d502      	bpl.n	8007d38 <__aeabi_l2f+0x14>
 8007d32:	4240      	negs	r0, r0
 8007d34:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d38:	ea5f 0c01 	movs.w	ip, r1
 8007d3c:	bf02      	ittt	eq
 8007d3e:	4684      	moveq	ip, r0
 8007d40:	4601      	moveq	r1, r0
 8007d42:	2000      	moveq	r0, #0
 8007d44:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d48:	bf08      	it	eq
 8007d4a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d4e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d52:	fabc f28c 	clz	r2, ip
 8007d56:	3a08      	subs	r2, #8
 8007d58:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d5c:	db10      	blt.n	8007d80 <__aeabi_l2f+0x5c>
 8007d5e:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d62:	4463      	add	r3, ip
 8007d64:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d68:	f1c2 0220 	rsb	r2, r2, #32
 8007d6c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d70:	fa20 f202 	lsr.w	r2, r0, r2
 8007d74:	eb43 0002 	adc.w	r0, r3, r2
 8007d78:	bf08      	it	eq
 8007d7a:	f020 0001 	biceq.w	r0, r0, #1
 8007d7e:	4770      	bx	lr
 8007d80:	f102 0220 	add.w	r2, r2, #32
 8007d84:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d88:	f1c2 0220 	rsb	r2, r2, #32
 8007d8c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d90:	fa21 f202 	lsr.w	r2, r1, r2
 8007d94:	eb43 0002 	adc.w	r0, r3, r2
 8007d98:	bf08      	it	eq
 8007d9a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007d9e:	4770      	bx	lr

08007da0 <__gesf2>:
 8007da0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007da4:	e006      	b.n	8007db4 <__cmpsf2+0x4>
 8007da6:	bf00      	nop

08007da8 <__lesf2>:
 8007da8:	f04f 0c01 	mov.w	ip, #1
 8007dac:	e002      	b.n	8007db4 <__cmpsf2+0x4>
 8007dae:	bf00      	nop

08007db0 <__cmpsf2>:
 8007db0:	f04f 0c01 	mov.w	ip, #1
 8007db4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007db8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dbc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dc0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dc4:	bf18      	it	ne
 8007dc6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dca:	d011      	beq.n	8007df0 <__cmpsf2+0x40>
 8007dcc:	b001      	add	sp, #4
 8007dce:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dd2:	bf18      	it	ne
 8007dd4:	ea90 0f01 	teqne	r0, r1
 8007dd8:	bf58      	it	pl
 8007dda:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dde:	bf88      	it	hi
 8007de0:	17c8      	asrhi	r0, r1, #31
 8007de2:	bf38      	it	cc
 8007de4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007de8:	bf18      	it	ne
 8007dea:	f040 0001 	orrne.w	r0, r0, #1
 8007dee:	4770      	bx	lr
 8007df0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007df4:	d102      	bne.n	8007dfc <__cmpsf2+0x4c>
 8007df6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007dfa:	d105      	bne.n	8007e08 <__cmpsf2+0x58>
 8007dfc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e00:	d1e4      	bne.n	8007dcc <__cmpsf2+0x1c>
 8007e02:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e06:	d0e1      	beq.n	8007dcc <__cmpsf2+0x1c>
 8007e08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e0c:	4770      	bx	lr
 8007e0e:	bf00      	nop

08007e10 <__aeabi_cfrcmple>:
 8007e10:	4684      	mov	ip, r0
 8007e12:	4608      	mov	r0, r1
 8007e14:	4661      	mov	r1, ip
 8007e16:	e7ff      	b.n	8007e18 <__aeabi_cfcmpeq>

08007e18 <__aeabi_cfcmpeq>:
 8007e18:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e1a:	f7ff ffc9 	bl	8007db0 <__cmpsf2>
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	bf48      	it	mi
 8007e22:	f110 0f00 	cmnmi.w	r0, #0
 8007e26:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e28 <__aeabi_fcmpeq>:
 8007e28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e2c:	f7ff fff4 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e30:	bf0c      	ite	eq
 8007e32:	2001      	moveq	r0, #1
 8007e34:	2000      	movne	r0, #0
 8007e36:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e3a:	bf00      	nop

08007e3c <__aeabi_fcmplt>:
 8007e3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e40:	f7ff ffea 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e44:	bf34      	ite	cc
 8007e46:	2001      	movcc	r0, #1
 8007e48:	2000      	movcs	r0, #0
 8007e4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e4e:	bf00      	nop

08007e50 <__aeabi_fcmple>:
 8007e50:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e54:	f7ff ffe0 	bl	8007e18 <__aeabi_cfcmpeq>
 8007e58:	bf94      	ite	ls
 8007e5a:	2001      	movls	r0, #1
 8007e5c:	2000      	movhi	r0, #0
 8007e5e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e62:	bf00      	nop

08007e64 <__aeabi_fcmpge>:
 8007e64:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e68:	f7ff ffd2 	bl	8007e10 <__aeabi_cfrcmple>
 8007e6c:	bf94      	ite	ls
 8007e6e:	2001      	movls	r0, #1
 8007e70:	2000      	movhi	r0, #0
 8007e72:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e76:	bf00      	nop

08007e78 <__aeabi_fcmpgt>:
 8007e78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e7c:	f7ff ffc8 	bl	8007e10 <__aeabi_cfrcmple>
 8007e80:	bf34      	ite	cc
 8007e82:	2001      	movcc	r0, #1
 8007e84:	2000      	movcs	r0, #0
 8007e86:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e8a:	bf00      	nop

08007e8c <__aeabi_f2iz>:
 8007e8c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e90:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007e94:	d30f      	bcc.n	8007eb6 <__aeabi_f2iz+0x2a>
 8007e96:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007e9a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007e9e:	d90d      	bls.n	8007ebc <__aeabi_f2iz+0x30>
 8007ea0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007ea8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eac:	fa23 f002 	lsr.w	r0, r3, r2
 8007eb0:	bf18      	it	ne
 8007eb2:	4240      	negne	r0, r0
 8007eb4:	4770      	bx	lr
 8007eb6:	f04f 0000 	mov.w	r0, #0
 8007eba:	4770      	bx	lr
 8007ebc:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ec0:	d101      	bne.n	8007ec6 <__aeabi_f2iz+0x3a>
 8007ec2:	0242      	lsls	r2, r0, #9
 8007ec4:	d105      	bne.n	8007ed2 <__aeabi_f2iz+0x46>
 8007ec6:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007eca:	bf08      	it	eq
 8007ecc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007ed0:	4770      	bx	lr
 8007ed2:	f04f 0000 	mov.w	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <__aeabi_uldivmod>:
 8007ed8:	b953      	cbnz	r3, 8007ef0 <__aeabi_uldivmod+0x18>
 8007eda:	b94a      	cbnz	r2, 8007ef0 <__aeabi_uldivmod+0x18>
 8007edc:	2900      	cmp	r1, #0
 8007ede:	bf08      	it	eq
 8007ee0:	2800      	cmpeq	r0, #0
 8007ee2:	bf1c      	itt	ne
 8007ee4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ee8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007eec:	f000 b80c 	b.w	8007f08 <__aeabi_idiv0>
 8007ef0:	f1ad 0c08 	sub.w	ip, sp, #8
 8007ef4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007ef8:	f001 fa24 	bl	8009344 <__udivmoddi4>
 8007efc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f04:	b004      	add	sp, #16
 8007f06:	4770      	bx	lr

08007f08 <__aeabi_idiv0>:
 8007f08:	4770      	bx	lr
 8007f0a:	bf00      	nop

08007f0c <__aeabi_drsub>:
 8007f0c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f10:	e002      	b.n	8007f18 <__adddf3>
 8007f12:	bf00      	nop

08007f14 <__aeabi_dsub>:
 8007f14:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f18 <__adddf3>:
 8007f18:	b530      	push	{r4, r5, lr}
 8007f1a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f1e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f22:	ea94 0f05 	teq	r4, r5
 8007f26:	bf08      	it	eq
 8007f28:	ea90 0f02 	teqeq	r0, r2
 8007f2c:	bf1f      	itttt	ne
 8007f2e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f32:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f36:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f3a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f3e:	f000 80e2 	beq.w	8008106 <__adddf3+0x1ee>
 8007f42:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f46:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007f4a:	bfb8      	it	lt
 8007f4c:	426d      	neglt	r5, r5
 8007f4e:	dd0c      	ble.n	8007f6a <__adddf3+0x52>
 8007f50:	442c      	add	r4, r5
 8007f52:	ea80 0202 	eor.w	r2, r0, r2
 8007f56:	ea81 0303 	eor.w	r3, r1, r3
 8007f5a:	ea82 0000 	eor.w	r0, r2, r0
 8007f5e:	ea83 0101 	eor.w	r1, r3, r1
 8007f62:	ea80 0202 	eor.w	r2, r0, r2
 8007f66:	ea81 0303 	eor.w	r3, r1, r3
 8007f6a:	2d36      	cmp	r5, #54	; 0x36
 8007f6c:	bf88      	it	hi
 8007f6e:	bd30      	pophi	{r4, r5, pc}
 8007f70:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007f74:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007f78:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007f7c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007f80:	d002      	beq.n	8007f88 <__adddf3+0x70>
 8007f82:	4240      	negs	r0, r0
 8007f84:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007f88:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007f8c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007f90:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007f94:	d002      	beq.n	8007f9c <__adddf3+0x84>
 8007f96:	4252      	negs	r2, r2
 8007f98:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007f9c:	ea94 0f05 	teq	r4, r5
 8007fa0:	f000 80a7 	beq.w	80080f2 <__adddf3+0x1da>
 8007fa4:	f1a4 0401 	sub.w	r4, r4, #1
 8007fa8:	f1d5 0e20 	rsbs	lr, r5, #32
 8007fac:	db0d      	blt.n	8007fca <__adddf3+0xb2>
 8007fae:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007fb2:	fa22 f205 	lsr.w	r2, r2, r5
 8007fb6:	1880      	adds	r0, r0, r2
 8007fb8:	f141 0100 	adc.w	r1, r1, #0
 8007fbc:	fa03 f20e 	lsl.w	r2, r3, lr
 8007fc0:	1880      	adds	r0, r0, r2
 8007fc2:	fa43 f305 	asr.w	r3, r3, r5
 8007fc6:	4159      	adcs	r1, r3
 8007fc8:	e00e      	b.n	8007fe8 <__adddf3+0xd0>
 8007fca:	f1a5 0520 	sub.w	r5, r5, #32
 8007fce:	f10e 0e20 	add.w	lr, lr, #32
 8007fd2:	2a01      	cmp	r2, #1
 8007fd4:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007fd8:	bf28      	it	cs
 8007fda:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007fde:	fa43 f305 	asr.w	r3, r3, r5
 8007fe2:	18c0      	adds	r0, r0, r3
 8007fe4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007fe8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007fec:	d507      	bpl.n	8007ffe <__adddf3+0xe6>
 8007fee:	f04f 0e00 	mov.w	lr, #0
 8007ff2:	f1dc 0c00 	rsbs	ip, ip, #0
 8007ff6:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007ffa:	eb6e 0101 	sbc.w	r1, lr, r1
 8007ffe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8008002:	d31b      	bcc.n	800803c <__adddf3+0x124>
 8008004:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008008:	d30c      	bcc.n	8008024 <__adddf3+0x10c>
 800800a:	0849      	lsrs	r1, r1, #1
 800800c:	ea5f 0030 	movs.w	r0, r0, rrx
 8008010:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8008014:	f104 0401 	add.w	r4, r4, #1
 8008018:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800801c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008020:	f080 809a 	bcs.w	8008158 <__adddf3+0x240>
 8008024:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008028:	bf08      	it	eq
 800802a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800802e:	f150 0000 	adcs.w	r0, r0, #0
 8008032:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008036:	ea41 0105 	orr.w	r1, r1, r5
 800803a:	bd30      	pop	{r4, r5, pc}
 800803c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008040:	4140      	adcs	r0, r0
 8008042:	eb41 0101 	adc.w	r1, r1, r1
 8008046:	3c01      	subs	r4, #1
 8008048:	bf28      	it	cs
 800804a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800804e:	d2e9      	bcs.n	8008024 <__adddf3+0x10c>
 8008050:	f091 0f00 	teq	r1, #0
 8008054:	bf04      	itt	eq
 8008056:	4601      	moveq	r1, r0
 8008058:	2000      	moveq	r0, #0
 800805a:	fab1 f381 	clz	r3, r1
 800805e:	bf08      	it	eq
 8008060:	3320      	addeq	r3, #32
 8008062:	f1a3 030b 	sub.w	r3, r3, #11
 8008066:	f1b3 0220 	subs.w	r2, r3, #32
 800806a:	da0c      	bge.n	8008086 <__adddf3+0x16e>
 800806c:	320c      	adds	r2, #12
 800806e:	dd08      	ble.n	8008082 <__adddf3+0x16a>
 8008070:	f102 0c14 	add.w	ip, r2, #20
 8008074:	f1c2 020c 	rsb	r2, r2, #12
 8008078:	fa01 f00c 	lsl.w	r0, r1, ip
 800807c:	fa21 f102 	lsr.w	r1, r1, r2
 8008080:	e00c      	b.n	800809c <__adddf3+0x184>
 8008082:	f102 0214 	add.w	r2, r2, #20
 8008086:	bfd8      	it	le
 8008088:	f1c2 0c20 	rsble	ip, r2, #32
 800808c:	fa01 f102 	lsl.w	r1, r1, r2
 8008090:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008094:	bfdc      	itt	le
 8008096:	ea41 010c 	orrle.w	r1, r1, ip
 800809a:	4090      	lslle	r0, r2
 800809c:	1ae4      	subs	r4, r4, r3
 800809e:	bfa2      	ittt	ge
 80080a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080a4:	4329      	orrge	r1, r5
 80080a6:	bd30      	popge	{r4, r5, pc}
 80080a8:	ea6f 0404 	mvn.w	r4, r4
 80080ac:	3c1f      	subs	r4, #31
 80080ae:	da1c      	bge.n	80080ea <__adddf3+0x1d2>
 80080b0:	340c      	adds	r4, #12
 80080b2:	dc0e      	bgt.n	80080d2 <__adddf3+0x1ba>
 80080b4:	f104 0414 	add.w	r4, r4, #20
 80080b8:	f1c4 0220 	rsb	r2, r4, #32
 80080bc:	fa20 f004 	lsr.w	r0, r0, r4
 80080c0:	fa01 f302 	lsl.w	r3, r1, r2
 80080c4:	ea40 0003 	orr.w	r0, r0, r3
 80080c8:	fa21 f304 	lsr.w	r3, r1, r4
 80080cc:	ea45 0103 	orr.w	r1, r5, r3
 80080d0:	bd30      	pop	{r4, r5, pc}
 80080d2:	f1c4 040c 	rsb	r4, r4, #12
 80080d6:	f1c4 0220 	rsb	r2, r4, #32
 80080da:	fa20 f002 	lsr.w	r0, r0, r2
 80080de:	fa01 f304 	lsl.w	r3, r1, r4
 80080e2:	ea40 0003 	orr.w	r0, r0, r3
 80080e6:	4629      	mov	r1, r5
 80080e8:	bd30      	pop	{r4, r5, pc}
 80080ea:	fa21 f004 	lsr.w	r0, r1, r4
 80080ee:	4629      	mov	r1, r5
 80080f0:	bd30      	pop	{r4, r5, pc}
 80080f2:	f094 0f00 	teq	r4, #0
 80080f6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80080fa:	bf06      	itte	eq
 80080fc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008100:	3401      	addeq	r4, #1
 8008102:	3d01      	subne	r5, #1
 8008104:	e74e      	b.n	8007fa4 <__adddf3+0x8c>
 8008106:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800810a:	bf18      	it	ne
 800810c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008110:	d029      	beq.n	8008166 <__adddf3+0x24e>
 8008112:	ea94 0f05 	teq	r4, r5
 8008116:	bf08      	it	eq
 8008118:	ea90 0f02 	teqeq	r0, r2
 800811c:	d005      	beq.n	800812a <__adddf3+0x212>
 800811e:	ea54 0c00 	orrs.w	ip, r4, r0
 8008122:	bf04      	itt	eq
 8008124:	4619      	moveq	r1, r3
 8008126:	4610      	moveq	r0, r2
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	ea91 0f03 	teq	r1, r3
 800812e:	bf1e      	ittt	ne
 8008130:	2100      	movne	r1, #0
 8008132:	2000      	movne	r0, #0
 8008134:	bd30      	popne	{r4, r5, pc}
 8008136:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800813a:	d105      	bne.n	8008148 <__adddf3+0x230>
 800813c:	0040      	lsls	r0, r0, #1
 800813e:	4149      	adcs	r1, r1
 8008140:	bf28      	it	cs
 8008142:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008146:	bd30      	pop	{r4, r5, pc}
 8008148:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800814c:	bf3c      	itt	cc
 800814e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008152:	bd30      	popcc	{r4, r5, pc}
 8008154:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008158:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800815c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008160:	f04f 0000 	mov.w	r0, #0
 8008164:	bd30      	pop	{r4, r5, pc}
 8008166:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800816a:	bf1a      	itte	ne
 800816c:	4619      	movne	r1, r3
 800816e:	4610      	movne	r0, r2
 8008170:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008174:	bf1c      	itt	ne
 8008176:	460b      	movne	r3, r1
 8008178:	4602      	movne	r2, r0
 800817a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800817e:	bf06      	itte	eq
 8008180:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008184:	ea91 0f03 	teqeq	r1, r3
 8008188:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800818c:	bd30      	pop	{r4, r5, pc}
 800818e:	bf00      	nop

08008190 <__aeabi_ui2d>:
 8008190:	f090 0f00 	teq	r0, #0
 8008194:	bf04      	itt	eq
 8008196:	2100      	moveq	r1, #0
 8008198:	4770      	bxeq	lr
 800819a:	b530      	push	{r4, r5, lr}
 800819c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081a4:	f04f 0500 	mov.w	r5, #0
 80081a8:	f04f 0100 	mov.w	r1, #0
 80081ac:	e750      	b.n	8008050 <__adddf3+0x138>
 80081ae:	bf00      	nop

080081b0 <__aeabi_i2d>:
 80081b0:	f090 0f00 	teq	r0, #0
 80081b4:	bf04      	itt	eq
 80081b6:	2100      	moveq	r1, #0
 80081b8:	4770      	bxeq	lr
 80081ba:	b530      	push	{r4, r5, lr}
 80081bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081c4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80081c8:	bf48      	it	mi
 80081ca:	4240      	negmi	r0, r0
 80081cc:	f04f 0100 	mov.w	r1, #0
 80081d0:	e73e      	b.n	8008050 <__adddf3+0x138>
 80081d2:	bf00      	nop

080081d4 <__aeabi_f2d>:
 80081d4:	0042      	lsls	r2, r0, #1
 80081d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80081da:	ea4f 0131 	mov.w	r1, r1, rrx
 80081de:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80081e2:	bf1f      	itttt	ne
 80081e4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80081e8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80081ec:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80081f0:	4770      	bxne	lr
 80081f2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80081f6:	bf08      	it	eq
 80081f8:	4770      	bxeq	lr
 80081fa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80081fe:	bf04      	itt	eq
 8008200:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8008204:	4770      	bxeq	lr
 8008206:	b530      	push	{r4, r5, lr}
 8008208:	f44f 7460 	mov.w	r4, #896	; 0x380
 800820c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008210:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8008214:	e71c      	b.n	8008050 <__adddf3+0x138>
 8008216:	bf00      	nop

08008218 <__aeabi_ul2d>:
 8008218:	ea50 0201 	orrs.w	r2, r0, r1
 800821c:	bf08      	it	eq
 800821e:	4770      	bxeq	lr
 8008220:	b530      	push	{r4, r5, lr}
 8008222:	f04f 0500 	mov.w	r5, #0
 8008226:	e00a      	b.n	800823e <__aeabi_l2d+0x16>

08008228 <__aeabi_l2d>:
 8008228:	ea50 0201 	orrs.w	r2, r0, r1
 800822c:	bf08      	it	eq
 800822e:	4770      	bxeq	lr
 8008230:	b530      	push	{r4, r5, lr}
 8008232:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008236:	d502      	bpl.n	800823e <__aeabi_l2d+0x16>
 8008238:	4240      	negs	r0, r0
 800823a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800823e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008242:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008246:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800824a:	f43f aed8 	beq.w	8007ffe <__adddf3+0xe6>
 800824e:	f04f 0203 	mov.w	r2, #3
 8008252:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008256:	bf18      	it	ne
 8008258:	3203      	addne	r2, #3
 800825a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800825e:	bf18      	it	ne
 8008260:	3203      	addne	r2, #3
 8008262:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008266:	f1c2 0320 	rsb	r3, r2, #32
 800826a:	fa00 fc03 	lsl.w	ip, r0, r3
 800826e:	fa20 f002 	lsr.w	r0, r0, r2
 8008272:	fa01 fe03 	lsl.w	lr, r1, r3
 8008276:	ea40 000e 	orr.w	r0, r0, lr
 800827a:	fa21 f102 	lsr.w	r1, r1, r2
 800827e:	4414      	add	r4, r2
 8008280:	e6bd      	b.n	8007ffe <__adddf3+0xe6>
 8008282:	bf00      	nop

08008284 <__aeabi_fmul>:
 8008284:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008288:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800828c:	bf1e      	ittt	ne
 800828e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008292:	ea92 0f0c 	teqne	r2, ip
 8008296:	ea93 0f0c 	teqne	r3, ip
 800829a:	d06f      	beq.n	800837c <__aeabi_fmul+0xf8>
 800829c:	441a      	add	r2, r3
 800829e:	ea80 0c01 	eor.w	ip, r0, r1
 80082a2:	0240      	lsls	r0, r0, #9
 80082a4:	bf18      	it	ne
 80082a6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80082aa:	d01e      	beq.n	80082ea <__aeabi_fmul+0x66>
 80082ac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80082b0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80082b4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80082b8:	fba0 3101 	umull	r3, r1, r0, r1
 80082bc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80082c0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80082c4:	bf3e      	ittt	cc
 80082c6:	0049      	lslcc	r1, r1, #1
 80082c8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80082cc:	005b      	lslcc	r3, r3, #1
 80082ce:	ea40 0001 	orr.w	r0, r0, r1
 80082d2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80082d6:	2afd      	cmp	r2, #253	; 0xfd
 80082d8:	d81d      	bhi.n	8008316 <__aeabi_fmul+0x92>
 80082da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80082de:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80082e2:	bf08      	it	eq
 80082e4:	f020 0001 	biceq.w	r0, r0, #1
 80082e8:	4770      	bx	lr
 80082ea:	f090 0f00 	teq	r0, #0
 80082ee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80082f2:	bf08      	it	eq
 80082f4:	0249      	lsleq	r1, r1, #9
 80082f6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80082fa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80082fe:	3a7f      	subs	r2, #127	; 0x7f
 8008300:	bfc2      	ittt	gt
 8008302:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008306:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800830a:	4770      	bxgt	lr
 800830c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008310:	f04f 0300 	mov.w	r3, #0
 8008314:	3a01      	subs	r2, #1
 8008316:	dc5d      	bgt.n	80083d4 <__aeabi_fmul+0x150>
 8008318:	f112 0f19 	cmn.w	r2, #25
 800831c:	bfdc      	itt	le
 800831e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008322:	4770      	bxle	lr
 8008324:	f1c2 0200 	rsb	r2, r2, #0
 8008328:	0041      	lsls	r1, r0, #1
 800832a:	fa21 f102 	lsr.w	r1, r1, r2
 800832e:	f1c2 0220 	rsb	r2, r2, #32
 8008332:	fa00 fc02 	lsl.w	ip, r0, r2
 8008336:	ea5f 0031 	movs.w	r0, r1, rrx
 800833a:	f140 0000 	adc.w	r0, r0, #0
 800833e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008342:	bf08      	it	eq
 8008344:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008348:	4770      	bx	lr
 800834a:	f092 0f00 	teq	r2, #0
 800834e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008352:	bf02      	ittt	eq
 8008354:	0040      	lsleq	r0, r0, #1
 8008356:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800835a:	3a01      	subeq	r2, #1
 800835c:	d0f9      	beq.n	8008352 <__aeabi_fmul+0xce>
 800835e:	ea40 000c 	orr.w	r0, r0, ip
 8008362:	f093 0f00 	teq	r3, #0
 8008366:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800836a:	bf02      	ittt	eq
 800836c:	0049      	lsleq	r1, r1, #1
 800836e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008372:	3b01      	subeq	r3, #1
 8008374:	d0f9      	beq.n	800836a <__aeabi_fmul+0xe6>
 8008376:	ea41 010c 	orr.w	r1, r1, ip
 800837a:	e78f      	b.n	800829c <__aeabi_fmul+0x18>
 800837c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008380:	ea92 0f0c 	teq	r2, ip
 8008384:	bf18      	it	ne
 8008386:	ea93 0f0c 	teqne	r3, ip
 800838a:	d00a      	beq.n	80083a2 <__aeabi_fmul+0x11e>
 800838c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008390:	bf18      	it	ne
 8008392:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008396:	d1d8      	bne.n	800834a <__aeabi_fmul+0xc6>
 8008398:	ea80 0001 	eor.w	r0, r0, r1
 800839c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083a0:	4770      	bx	lr
 80083a2:	f090 0f00 	teq	r0, #0
 80083a6:	bf17      	itett	ne
 80083a8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80083ac:	4608      	moveq	r0, r1
 80083ae:	f091 0f00 	teqne	r1, #0
 80083b2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80083b6:	d014      	beq.n	80083e2 <__aeabi_fmul+0x15e>
 80083b8:	ea92 0f0c 	teq	r2, ip
 80083bc:	d101      	bne.n	80083c2 <__aeabi_fmul+0x13e>
 80083be:	0242      	lsls	r2, r0, #9
 80083c0:	d10f      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083c2:	ea93 0f0c 	teq	r3, ip
 80083c6:	d103      	bne.n	80083d0 <__aeabi_fmul+0x14c>
 80083c8:	024b      	lsls	r3, r1, #9
 80083ca:	bf18      	it	ne
 80083cc:	4608      	movne	r0, r1
 80083ce:	d108      	bne.n	80083e2 <__aeabi_fmul+0x15e>
 80083d0:	ea80 0001 	eor.w	r0, r0, r1
 80083d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80083e0:	4770      	bx	lr
 80083e2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80083e6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80083ea:	4770      	bx	lr

080083ec <__aeabi_fdiv>:
 80083ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80083f0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80083f4:	bf1e      	ittt	ne
 80083f6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80083fa:	ea92 0f0c 	teqne	r2, ip
 80083fe:	ea93 0f0c 	teqne	r3, ip
 8008402:	d069      	beq.n	80084d8 <__aeabi_fdiv+0xec>
 8008404:	eba2 0203 	sub.w	r2, r2, r3
 8008408:	ea80 0c01 	eor.w	ip, r0, r1
 800840c:	0249      	lsls	r1, r1, #9
 800840e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8008412:	d037      	beq.n	8008484 <__aeabi_fdiv+0x98>
 8008414:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008418:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800841c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008420:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008424:	428b      	cmp	r3, r1
 8008426:	bf38      	it	cc
 8008428:	005b      	lslcc	r3, r3, #1
 800842a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800842e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008432:	428b      	cmp	r3, r1
 8008434:	bf24      	itt	cs
 8008436:	1a5b      	subcs	r3, r3, r1
 8008438:	ea40 000c 	orrcs.w	r0, r0, ip
 800843c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008440:	bf24      	itt	cs
 8008442:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008446:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800844a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800844e:	bf24      	itt	cs
 8008450:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008454:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008458:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800845c:	bf24      	itt	cs
 800845e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008462:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008466:	011b      	lsls	r3, r3, #4
 8008468:	bf18      	it	ne
 800846a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800846e:	d1e0      	bne.n	8008432 <__aeabi_fdiv+0x46>
 8008470:	2afd      	cmp	r2, #253	; 0xfd
 8008472:	f63f af50 	bhi.w	8008316 <__aeabi_fmul+0x92>
 8008476:	428b      	cmp	r3, r1
 8008478:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800847c:	bf08      	it	eq
 800847e:	f020 0001 	biceq.w	r0, r0, #1
 8008482:	4770      	bx	lr
 8008484:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008488:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800848c:	327f      	adds	r2, #127	; 0x7f
 800848e:	bfc2      	ittt	gt
 8008490:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008494:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008498:	4770      	bxgt	lr
 800849a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800849e:	f04f 0300 	mov.w	r3, #0
 80084a2:	3a01      	subs	r2, #1
 80084a4:	e737      	b.n	8008316 <__aeabi_fmul+0x92>
 80084a6:	f092 0f00 	teq	r2, #0
 80084aa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80084ae:	bf02      	ittt	eq
 80084b0:	0040      	lsleq	r0, r0, #1
 80084b2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80084b6:	3a01      	subeq	r2, #1
 80084b8:	d0f9      	beq.n	80084ae <__aeabi_fdiv+0xc2>
 80084ba:	ea40 000c 	orr.w	r0, r0, ip
 80084be:	f093 0f00 	teq	r3, #0
 80084c2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80084c6:	bf02      	ittt	eq
 80084c8:	0049      	lsleq	r1, r1, #1
 80084ca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80084ce:	3b01      	subeq	r3, #1
 80084d0:	d0f9      	beq.n	80084c6 <__aeabi_fdiv+0xda>
 80084d2:	ea41 010c 	orr.w	r1, r1, ip
 80084d6:	e795      	b.n	8008404 <__aeabi_fdiv+0x18>
 80084d8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80084dc:	ea92 0f0c 	teq	r2, ip
 80084e0:	d108      	bne.n	80084f4 <__aeabi_fdiv+0x108>
 80084e2:	0242      	lsls	r2, r0, #9
 80084e4:	f47f af7d 	bne.w	80083e2 <__aeabi_fmul+0x15e>
 80084e8:	ea93 0f0c 	teq	r3, ip
 80084ec:	f47f af70 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 80084f0:	4608      	mov	r0, r1
 80084f2:	e776      	b.n	80083e2 <__aeabi_fmul+0x15e>
 80084f4:	ea93 0f0c 	teq	r3, ip
 80084f8:	d104      	bne.n	8008504 <__aeabi_fdiv+0x118>
 80084fa:	024b      	lsls	r3, r1, #9
 80084fc:	f43f af4c 	beq.w	8008398 <__aeabi_fmul+0x114>
 8008500:	4608      	mov	r0, r1
 8008502:	e76e      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008504:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008508:	bf18      	it	ne
 800850a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800850e:	d1ca      	bne.n	80084a6 <__aeabi_fdiv+0xba>
 8008510:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8008514:	f47f af5c 	bne.w	80083d0 <__aeabi_fmul+0x14c>
 8008518:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800851c:	f47f af3c 	bne.w	8008398 <__aeabi_fmul+0x114>
 8008520:	e75f      	b.n	80083e2 <__aeabi_fmul+0x15e>
 8008522:	bf00      	nop

08008524 <__aeabi_f2uiz>:
 8008524:	0042      	lsls	r2, r0, #1
 8008526:	d20e      	bcs.n	8008546 <__aeabi_f2uiz+0x22>
 8008528:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800852c:	d30b      	bcc.n	8008546 <__aeabi_f2uiz+0x22>
 800852e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008532:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8008536:	d409      	bmi.n	800854c <__aeabi_f2uiz+0x28>
 8008538:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800853c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008540:	fa23 f002 	lsr.w	r0, r3, r2
 8008544:	4770      	bx	lr
 8008546:	f04f 0000 	mov.w	r0, #0
 800854a:	4770      	bx	lr
 800854c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008550:	d101      	bne.n	8008556 <__aeabi_f2uiz+0x32>
 8008552:	0242      	lsls	r2, r0, #9
 8008554:	d102      	bne.n	800855c <__aeabi_f2uiz+0x38>
 8008556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800855a:	4770      	bx	lr
 800855c:	f04f 0000 	mov.w	r0, #0
 8008560:	4770      	bx	lr
 8008562:	bf00      	nop

08008564 <Reset_Handler>:
 8008564:	480c      	ldr	r0, [pc, #48]	; (8008598 <Zerobss+0x10>)
 8008566:	4685      	mov	sp, r0
 8008568:	2100      	movs	r1, #0
 800856a:	e003      	b.n	8008574 <DataInit>

0800856c <CopyData>:
 800856c:	4b0b      	ldr	r3, [pc, #44]	; (800859c <Zerobss+0x14>)
 800856e:	585b      	ldr	r3, [r3, r1]
 8008570:	5043      	str	r3, [r0, r1]
 8008572:	3104      	adds	r1, #4

08008574 <DataInit>:
 8008574:	480a      	ldr	r0, [pc, #40]	; (80085a0 <Zerobss+0x18>)
 8008576:	4b0b      	ldr	r3, [pc, #44]	; (80085a4 <Zerobss+0x1c>)
 8008578:	1842      	adds	r2, r0, r1
 800857a:	429a      	cmp	r2, r3
 800857c:	d3f6      	bcc.n	800856c <CopyData>
 800857e:	4a0a      	ldr	r2, [pc, #40]	; (80085a8 <Zerobss+0x20>)
 8008580:	e002      	b.n	8008588 <Zerobss>

08008582 <FillZerobss>:
 8008582:	2300      	movs	r3, #0
 8008584:	f842 3b04 	str.w	r3, [r2], #4

08008588 <Zerobss>:
 8008588:	4b08      	ldr	r3, [pc, #32]	; (80085ac <Zerobss+0x24>)
 800858a:	429a      	cmp	r2, r3
 800858c:	d3f9      	bcc.n	8008582 <FillZerobss>
 800858e:	f008 ff27 	bl	80113e0 <SystemInit>
 8008592:	f000 f935 	bl	8008800 <main>
 8008596:	4770      	bx	lr
 8008598:	20018000 	andcs	r8, r1, r0
 800859c:	08015abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, lr}
 80085a0:	20000000 	andcs	r0, r0, r0
 80085a4:	200000e4 	andcs	r0, r0, r4, ror #1
 80085a8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085ac:	20013968 	andcs	r3, r1, r8, ror #18

080085b0 <ADC0_1_IRQHandler>:
 80085b0:	e7fe      	b.n	80085b0 <ADC0_1_IRQHandler>

080085b2 <DisplayHandler::~DisplayHandler()>:
 80085b2:	4770      	bx	lr

080085b4 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085b4:	4770      	bx	lr
	...

080085b8 <PixelDmxStartStop::Start()>:
 80085b8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085bc:	4b01      	ldr	r3, [pc, #4]	; (80085c4 <PixelDmxStartStop::Start()+0xc>)
 80085be:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80085c2:	4770      	bx	lr
 80085c4:	40010000 	andmi	r0, r1, r0

080085c8 <PixelDmxStartStop::Stop()>:
 80085c8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085cc:	4b01      	ldr	r3, [pc, #4]	; (80085d4 <PixelDmxStartStop::Stop()+0xc>)
 80085ce:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80085d2:	4770      	bx	lr
 80085d4:	40010000 	andmi	r0, r1, r0

080085d8 <Handler::~Handler()>:
 80085d8:	4770      	bx	lr

080085da <DisplayHandler::~DisplayHandler()>:
 80085da:	b510      	push	{r4, lr}
 80085dc:	4604      	mov	r4, r0
 80085de:	f008 fcab 	bl	8010f38 <operator delete(void*)>
 80085e2:	4620      	mov	r0, r4
 80085e4:	bd10      	pop	{r4, pc}

080085e6 <Handler::~Handler()>:
 80085e6:	b510      	push	{r4, lr}
 80085e8:	4604      	mov	r4, r0
 80085ea:	f008 fca5 	bl	8010f38 <operator delete(void*)>
 80085ee:	4620      	mov	r0, r4
 80085f0:	bd10      	pop	{r4, pc}

080085f2 <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085f2:	b510      	push	{r4, lr}
 80085f4:	4604      	mov	r4, r0
 80085f6:	f008 fc9f 	bl	8010f38 <operator delete(void*)>
 80085fa:	4620      	mov	r0, r4
 80085fc:	bd10      	pop	{r4, pc}
	...

08008600 <Handler::Info(int, unsigned int, unsigned short)>:
 8008600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008604:	461e      	mov	r6, r3
 8008606:	6843      	ldr	r3, [r0, #4]
 8008608:	b088      	sub	sp, #32
 800860a:	4607      	mov	r7, r0
 800860c:	6858      	ldr	r0, [r3, #4]
 800860e:	460c      	mov	r4, r1
 8008610:	4615      	mov	r5, r2
 8008612:	f003 ff9b 	bl	800c54c <PixelType::GetType(pixel::Type)>
 8008616:	4b14      	ldr	r3, [pc, #80]	; (8008668 <Handler::Info(int, unsigned int, unsigned short)+0x68>)
 8008618:	462a      	mov	r2, r5
 800861a:	9301      	str	r3, [sp, #4]
 800861c:	4b13      	ldr	r3, [pc, #76]	; (800866c <Handler::Info(int, unsigned int, unsigned short)+0x6c>)
 800861e:	4621      	mov	r1, r4
 8008620:	9002      	str	r0, [sp, #8]
 8008622:	9300      	str	r3, [sp, #0]
 8008624:	a805      	add	r0, sp, #20
 8008626:	4633      	mov	r3, r6
 8008628:	f003 f870 	bl	800b70c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	f8df 8040 	ldr.w	r8, [pc, #64]	; 8008670 <Handler::Info(int, unsigned int, unsigned short)+0x70>
 8008632:	689b      	ldr	r3, [r3, #8]
 8008634:	462a      	mov	r2, r5
 8008636:	9302      	str	r3, [sp, #8]
 8008638:	4b0e      	ldr	r3, [pc, #56]	; (8008674 <Handler::Info(int, unsigned int, unsigned short)+0x74>)
 800863a:	4621      	mov	r1, r4
 800863c:	9300      	str	r3, [sp, #0]
 800863e:	f8cd 8004 	str.w	r8, [sp, #4]
 8008642:	4633      	mov	r3, r6
 8008644:	a806      	add	r0, sp, #24
 8008646:	f003 f89f 	bl	800b788 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	462a      	mov	r2, r5
 800864e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008650:	4621      	mov	r1, r4
 8008652:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8008656:	4b08      	ldr	r3, [pc, #32]	; (8008678 <Handler::Info(int, unsigned int, unsigned short)+0x78>)
 8008658:	a807      	add	r0, sp, #28
 800865a:	9300      	str	r3, [sp, #0]
 800865c:	4633      	mov	r3, r6
 800865e:	f003 f893 	bl	800b788 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8008662:	b008      	add	sp, #32
 8008664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008668:	08014509 	stmdaeq	r1, {r0, r3, r8, sl, lr}
 800866c:	08013274 	stmdaeq	r1, {r2, r4, r5, r6, r9, ip, sp}
 8008670:	08013282 	stmdaeq	r1, {r1, r7, r9, ip, sp}
 8008674:	08013284 	stmdaeq	r1, {r2, r7, r9, ip, sp}
 8008678:	08013293 	stmdaeq	r1, {r0, r1, r4, r7, r9, ip, sp}

0800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 800867c:	b110      	cbz	r0, 8008684 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 800867e:	6803      	ldr	r3, [r0, #0]
 8008680:	6a1b      	ldr	r3, [r3, #32]
 8008682:	4718      	bx	r3
 8008684:	4770      	bx	lr

08008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8008686:	b430      	push	{r4, r5}
 8008688:	b168      	cbz	r0, 80086a6 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800868a:	2300      	movs	r3, #0
 800868c:	7905      	ldrb	r5, [r0, #4]
 800868e:	5cd4      	ldrb	r4, [r2, r3]
 8008690:	b11c      	cbz	r4, 800869a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8008692:	1c5c      	adds	r4, r3, #1
 8008694:	429d      	cmp	r5, r3
 8008696:	4623      	mov	r3, r4
 8008698:	dcf9      	bgt.n	800868e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800869a:	6804      	ldr	r4, [r0, #0]
 800869c:	b2db      	uxtb	r3, r3
 800869e:	69e4      	ldr	r4, [r4, #28]
 80086a0:	46a4      	mov	ip, r4
 80086a2:	bc30      	pop	{r4, r5}
 80086a4:	4760      	bx	ip
 80086a6:	bc30      	pop	{r4, r5}
 80086a8:	4770      	bx	lr

080086aa <Display::PutChar(int) [clone .isra.0]>:
 80086aa:	b110      	cbz	r0, 80086b2 <Display::PutChar(int) [clone .isra.0]+0x8>
 80086ac:	6803      	ldr	r3, [r0, #0]
 80086ae:	695b      	ldr	r3, [r3, #20]
 80086b0:	4718      	bx	r3
 80086b2:	4770      	bx	lr

080086b4 <DisplayHandler::Print(unsigned int)>:
 80086b4:	b538      	push	{r3, r4, r5, lr}
 80086b6:	7903      	ldrb	r3, [r0, #4]
 80086b8:	b1f3      	cbz	r3, 80086f8 <DisplayHandler::Print(unsigned int)+0x44>
 80086ba:	2904      	cmp	r1, #4
 80086bc:	bf98      	it	ls
 80086be:	4b0f      	ldrls	r3, [pc, #60]	; (80086fc <DisplayHandler::Print(unsigned int)+0x48>)
 80086c0:	4d0f      	ldr	r5, [pc, #60]	; (8008700 <DisplayHandler::Print(unsigned int)+0x4c>)
 80086c2:	bf98      	it	ls
 80086c4:	5c5c      	ldrbls	r4, [r3, r1]
 80086c6:	682b      	ldr	r3, [r5, #0]
 80086c8:	bf88      	it	hi
 80086ca:	2455      	movhi	r4, #85	; 0x55
 80086cc:	6998      	ldr	r0, [r3, #24]
 80086ce:	b178      	cbz	r0, 80086f0 <DisplayHandler::Print(unsigned int)+0x3c>
 80086d0:	7901      	ldrb	r1, [r0, #4]
 80086d2:	3901      	subs	r1, #1
 80086d4:	b2c9      	uxtb	r1, r1
 80086d6:	b168      	cbz	r0, 80086f4 <DisplayHandler::Print(unsigned int)+0x40>
 80086d8:	7942      	ldrb	r2, [r0, #5]
 80086da:	3a01      	subs	r2, #1
 80086dc:	b2d2      	uxtb	r2, r2
 80086de:	f7ff ffcd 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086e2:	682b      	ldr	r3, [r5, #0]
 80086e4:	4621      	mov	r1, r4
 80086e6:	6998      	ldr	r0, [r3, #24]
 80086e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086ec:	f7ff bfdd 	b.w	80086aa <Display::PutChar(int) [clone .isra.0]>
 80086f0:	4601      	mov	r1, r0
 80086f2:	e7ee      	b.n	80086d2 <DisplayHandler::Print(unsigned int)+0x1e>
 80086f4:	4602      	mov	r2, r0
 80086f6:	e7f0      	b.n	80086da <DisplayHandler::Print(unsigned int)+0x26>
 80086f8:	bd38      	pop	{r3, r4, r5, pc}
 80086fa:	bf00      	nop
 80086fc:	080133a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip, sp}
 8008700:	20009be4 	andcs	r9, r0, r4, ror #23

08008704 <Display::Printf(unsigned char, char const*, ...)>:
 8008704:	b40c      	push	{r2, r3}
 8008706:	b570      	push	{r4, r5, r6, lr}
 8008708:	6984      	ldr	r4, [r0, #24]
 800870a:	4605      	mov	r5, r0
 800870c:	460e      	mov	r6, r1
 800870e:	b08a      	sub	sp, #40	; 0x28
 8008710:	b174      	cbz	r4, 8008730 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8008712:	ab0f      	add	r3, sp, #60	; 0x3c
 8008714:	2120      	movs	r1, #32
 8008716:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008718:	a802      	add	r0, sp, #8
 800871a:	9301      	str	r3, [sp, #4]
 800871c:	f000 fe02 	bl	8009324 <vsnprintf>
 8008720:	4604      	mov	r4, r0
 8008722:	69a8      	ldr	r0, [r5, #24]
 8008724:	4631      	mov	r1, r6
 8008726:	6803      	ldr	r3, [r0, #0]
 8008728:	aa02      	add	r2, sp, #8
 800872a:	69dd      	ldr	r5, [r3, #28]
 800872c:	b2a3      	uxth	r3, r4
 800872e:	47a8      	blx	r5
 8008730:	4620      	mov	r0, r4
 8008732:	b00a      	add	sp, #40	; 0x28
 8008734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008738:	b002      	add	sp, #8
 800873a:	4770      	bx	lr

0800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 800873c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008740:	4604      	mov	r4, r0
 8008742:	6980      	ldr	r0, [r0, #24]
 8008744:	460f      	mov	r7, r1
 8008746:	4615      	mov	r5, r2
 8008748:	461e      	mov	r6, r3
 800874a:	b1d8      	cbz	r0, 8008784 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x48>
 800874c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8008750:	2100      	movs	r1, #0
 8008752:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8008756:	fa5f f888 	uxtb.w	r8, r8
 800875a:	4642      	mov	r2, r8
 800875c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008760:	f04f 0b00 	mov.w	fp, #0
 8008764:	f7ff ff8a 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008768:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800876c:	45cb      	cmp	fp, r9
 800876e:	69a0      	ldr	r0, [r4, #24]
 8008770:	d327      	bcc.n	80087c2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x86>
 8008772:	4642      	mov	r2, r8
 8008774:	2100      	movs	r1, #0
 8008776:	f7ff ff81 	bl	800867c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800877a:	463a      	mov	r2, r7
 800877c:	4651      	mov	r1, sl
 800877e:	69a0      	ldr	r0, [r4, #24]
 8008780:	f7ff ff81 	bl	8008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008784:	7c63      	ldrb	r3, [r4, #17]
 8008786:	b19b      	cbz	r3, 80087b0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x74>
 8008788:	43ea      	mvns	r2, r5
 800878a:	2312      	movs	r3, #18
 800878c:	7a20      	ldrb	r0, [r4, #8]
 800878e:	f88d 3004 	strb.w	r3, [sp, #4]
 8008792:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008796:	f88d 3005 	strb.w	r3, [sp, #5]
 800879a:	f88d 2006 	strb.w	r2, [sp, #6]
 800879e:	f009 fb53 	bl	8011e48 <gd32_i2c_set_address>
 80087a2:	68e0      	ldr	r0, [r4, #12]
 80087a4:	f009 fb48 	bl	8011e38 <gd32_i2c_set_baudrate>
 80087a8:	2103      	movs	r1, #3
 80087aa:	a801      	add	r0, sp, #4
 80087ac:	f009 fb52 	bl	8011e54 <gd32_i2c_write>
 80087b0:	1c73      	adds	r3, r6, #1
 80087b2:	d00c      	beq.n	80087ce <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 80087b4:	4639      	mov	r1, r7
 80087b6:	4630      	mov	r0, r6
 80087b8:	b003      	add	sp, #12
 80087ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087be:	f008 ba7b 	b.w	8010cb8 <console_status>
 80087c2:	2120      	movs	r1, #32
 80087c4:	f7ff ff71 	bl	80086aa <Display::PutChar(int) [clone .isra.0]>
 80087c8:	f10b 0b01 	add.w	fp, fp, #1
 80087cc:	e7ce      	b.n	800876c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 80087ce:	b003      	add	sp, #12
 80087d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080087d4 <Display::SetSleep(bool)>:
 80087d4:	b538      	push	{r3, r4, r5, lr}
 80087d6:	4604      	mov	r4, r0
 80087d8:	6980      	ldr	r0, [r0, #24]
 80087da:	460d      	mov	r5, r1
 80087dc:	b138      	cbz	r0, 80087ee <Display::SetSleep(bool)+0x1a>
 80087de:	6803      	ldr	r3, [r0, #0]
 80087e0:	7421      	strb	r1, [r4, #16]
 80087e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087e4:	4798      	blx	r3
 80087e6:	b915      	cbnz	r5, 80087ee <Display::SetSleep(bool)+0x1a>
 80087e8:	4b01      	ldr	r3, [pc, #4]	; (80087f0 <Display::SetSleep(bool)+0x1c>)
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	6063      	str	r3, [r4, #4]
 80087ee:	bd38      	pop	{r3, r4, r5, pc}
 80087f0:	20009cec 	andcs	r9, r0, ip, ror #25

080087f4 <Hardware::RebootHandler()>:
 80087f4:	4b01      	ldr	r3, [pc, #4]	; (80087fc <Hardware::RebootHandler()+0x8>)
 80087f6:	6818      	ldr	r0, [r3, #0]
 80087f8:	f004 bfda 	b.w	800d7b0 <WS28xx::Blackout()>
 80087fc:	20000cfc 	strdcs	r0, [r0], -ip

08008800 <main>:
 8008800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008804:	f5ad 6d88 	sub.w	sp, sp, #1088	; 0x440
 8008808:	a804      	add	r0, sp, #16
 800880a:	f008 fb09 	bl	8010e20 <Hardware::Hardware()>
 800880e:	a879      	add	r0, sp, #484	; 0x1e4
 8008810:	f006 fce0 	bl	800f1d4 <Network::Network()>
 8008814:	a816      	add	r0, sp, #88	; 0x58
 8008816:	f008 faad 	bl	8010d74 <LedBlink::LedBlink()>
 800881a:	a81c      	add	r0, sp, #112	; 0x70
 800881c:	f007 fff2 	bl	8010804 <Display::Display()>
 8008820:	4ab0      	ldr	r2, [pc, #704]	; (8008ae4 <main+0x2e4>)
 8008822:	4bb1      	ldr	r3, [pc, #708]	; (8008ae8 <main+0x2e8>)
 8008824:	49b1      	ldr	r1, [pc, #708]	; (8008aec <main+0x2ec>)
 8008826:	a805      	add	r0, sp, #20
 8008828:	f008 fa5e 	bl	8010ce8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800882c:	a806      	add	r0, sp, #24
 800882e:	f005 fbf7 	bl	800e020 <FlashRom::FlashRom()>
 8008832:	a807      	add	r0, sp, #28
 8008834:	f005 f8f6 	bl	800da24 <SpiFlashStore::SpiFlashStore()>
 8008838:	49ad      	ldr	r1, [pc, #692]	; (8008af0 <main+0x2f0>)
 800883a:	a805      	add	r0, sp, #20
 800883c:	f008 fa8c 	bl	8010d58 <FirmwareVersion::Print(char const*)>
 8008840:	2301      	movs	r3, #1
 8008842:	4dac      	ldr	r5, [pc, #688]	; (8008af4 <main+0x2f4>)
 8008844:	2008      	movs	r0, #8
 8008846:	612b      	str	r3, [r5, #16]
 8008848:	f008 fb7a 	bl	8010f40 <operator new(unsigned int)>
 800884c:	4baa      	ldr	r3, [pc, #680]	; (8008af8 <main+0x2f8>)
 800884e:	9018      	str	r0, [sp, #96]	; 0x60
 8008850:	6003      	str	r3, [r0, #0]
 8008852:	4baa      	ldr	r3, [pc, #680]	; (8008afc <main+0x2fc>)
 8008854:	681b      	ldr	r3, [r3, #0]
 8008856:	3b00      	subs	r3, #0
 8008858:	bf18      	it	ne
 800885a:	2301      	movne	r3, #1
 800885c:	7103      	strb	r3, [r0, #4]
 800885e:	a80a      	add	r0, sp, #40	; 0x28
 8008860:	f005 fac0 	bl	800dde4 <StoreOscServer::StoreOscServer()>
 8008864:	a90a      	add	r1, sp, #40	; 0x28
 8008866:	a8ac      	add	r0, sp, #688	; 0x2b0
 8008868:	f002 fc10 	bl	800b08c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800886c:	a852      	add	r0, sp, #328	; 0x148
 800886e:	f002 f913 	bl	800aa98 <OscServer::OscServer()>
 8008872:	a8ac      	add	r0, sp, #688	; 0x2b0
 8008874:	f002 fc1a 	bl	800b0ac <OSCServerParams::Load()>
 8008878:	b130      	cbz	r0, 8008888 <main+0x88>
 800887a:	a8ac      	add	r0, sp, #688	; 0x2b0
 800887c:	f002 fdad 	bl	800b3da <OSCServerParams::Dump()>
 8008880:	a952      	add	r1, sp, #328	; 0x148
 8008882:	a8ac      	add	r0, sp, #688	; 0x2b0
 8008884:	f002 fcbc 	bl	800b200 <OSCServerParams::Set(OscServer*)>
 8008888:	2600      	movs	r6, #0
 800888a:	2401      	movs	r4, #1
 800888c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008890:	2303      	movs	r3, #3
 8008892:	499b      	ldr	r1, [pc, #620]	; (8008b00 <main+0x300>)
 8008894:	a81c      	add	r0, sp, #112	; 0x70
 8008896:	f7ff ff51 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800889a:	a80e      	add	r0, sp, #56	; 0x38
 800889c:	f005 fa6a 	bl	800dd74 <StoreNetwork::StoreNetwork()>
 80088a0:	ab0f      	add	r3, sp, #60	; 0x3c
 80088a2:	a90e      	add	r1, sp, #56	; 0x38
 80088a4:	a879      	add	r0, sp, #484	; 0x1e4
 80088a6:	93a7      	str	r3, [sp, #668]	; 0x29c
 80088a8:	f006 fcec 	bl	800f284 <Network::Init(NetworkParamsStore*)>
 80088ac:	a879      	add	r0, sp, #484	; 0x1e4
 80088ae:	f006 fe2f 	bl	800f510 <Network::Print()>
 80088b2:	2303      	movs	r3, #3
 80088b4:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80088b8:	4992      	ldr	r1, [pc, #584]	; (8008b04 <main+0x304>)
 80088ba:	a81c      	add	r0, sp, #112	; 0x70
 80088bc:	f7ff ff3e 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80088c0:	a808      	add	r0, sp, #32
 80088c2:	f006 f8c9 	bl	800ea58 <MDNS::MDNS()>
 80088c6:	a808      	add	r0, sp, #32
 80088c8:	f006 f986 	bl	800ebd8 <MDNS::Start()>
 80088cc:	4b8e      	ldr	r3, [pc, #568]	; (8008b08 <main+0x308>)
 80088ce:	4631      	mov	r1, r6
 80088d0:	4a8e      	ldr	r2, [pc, #568]	; (8008b0c <main+0x30c>)
 80088d2:	9301      	str	r3, [sp, #4]
 80088d4:	9600      	str	r6, [sp, #0]
 80088d6:	f8bd 3148 	ldrh.w	r3, [sp, #328]	; 0x148
 80088da:	a808      	add	r0, sp, #32
 80088dc:	f006 fae6 	bl	800eeac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80088e0:	4b8b      	ldr	r3, [pc, #556]	; (8008b10 <main+0x310>)
 80088e2:	4631      	mov	r1, r6
 80088e4:	4a8b      	ldr	r2, [pc, #556]	; (8008b14 <main+0x314>)
 80088e6:	9301      	str	r3, [sp, #4]
 80088e8:	9400      	str	r4, [sp, #0]
 80088ea:	2350      	movs	r3, #80	; 0x50
 80088ec:	a808      	add	r0, sp, #32
 80088ee:	f006 fadd 	bl	800eeac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80088f2:	a808      	add	r0, sp, #32
 80088f4:	f006 fc20 	bl	800f138 <MDNS::Print()>
 80088f8:	a83c      	add	r0, sp, #240	; 0xf0
 80088fa:	f001 fce3 	bl	800a2c4 <HttpDaemon::HttpDaemon()>
 80088fe:	a83c      	add	r0, sp, #240	; 0xf0
 8008900:	f001 fcf4 	bl	800a2ec <HttpDaemon::Start()>
 8008904:	4984      	ldr	r1, [pc, #528]	; (8008b18 <main+0x318>)
 8008906:	2303      	movs	r3, #3
 8008908:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 800890c:	a81c      	add	r0, sp, #112	; 0x70
 800890e:	f7ff ff15 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008912:	23aa      	movs	r3, #170	; 0xaa
 8008914:	2203      	movs	r2, #3
 8008916:	e9cd 2346 	strd	r2, r3, [sp, #280]	; 0x118
 800891a:	2206      	movs	r2, #6
 800891c:	e9cd 2648 	strd	r2, r6, [sp, #288]	; 0x120
 8008920:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8008924:	924a      	str	r2, [sp, #296]	; 0x128
 8008926:	f44f 7280 	mov.w	r2, #256	; 0x100
 800892a:	f8ad 212c 	strh.w	r2, [sp, #300]	; 0x12c
 800892e:	4a7b      	ldr	r2, [pc, #492]	; (8008b1c <main+0x31c>)
 8008930:	a810      	add	r0, sp, #64	; 0x40
 8008932:	e9cd 244c 	strd	r2, r4, [sp, #304]	; 0x130
 8008936:	e9cd 434e 	strd	r4, r3, [sp, #312]	; 0x138
 800893a:	f8ad 4144 	strh.w	r4, [sp, #324]	; 0x144
 800893e:	f005 fb63 	bl	800e008 <StorePixelDmx::StorePixelDmx()>
 8008942:	a910      	add	r1, sp, #64	; 0x40
 8008944:	a823      	add	r0, sp, #140	; 0x8c
 8008946:	f003 f9ad 	bl	800bca4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800894a:	a823      	add	r0, sp, #140	; 0x8c
 800894c:	f003 f9c0 	bl	800bcd0 <PixelDmxParams::Load()>
 8008950:	b130      	cbz	r0, 8008960 <main+0x160>
 8008952:	a823      	add	r0, sp, #140	; 0x8c
 8008954:	a946      	add	r1, sp, #280	; 0x118
 8008956:	f003 fcb4 	bl	800c2c2 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 800895a:	a823      	add	r0, sp, #140	; 0x8c
 800895c:	f003 fcee 	bl	800c33c <PixelDmxParams::Dump()>
 8008960:	ab12      	add	r3, sp, #72	; 0x48
 8008962:	2101      	movs	r1, #1
 8008964:	aa0b      	add	r2, sp, #44	; 0x2c
 8008966:	a846      	add	r0, sp, #280	; 0x118
 8008968:	f002 ff3a 	bl	800b7e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800896c:	9b50      	ldr	r3, [sp, #320]	; 0x140
 800896e:	2b01      	cmp	r3, #1
 8008970:	d909      	bls.n	8008986 <main+0x186>
 8008972:	994e      	ldr	r1, [sp, #312]	; 0x138
 8008974:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008976:	024b      	lsls	r3, r1, #9
 8008978:	ebb2 2f41 	cmp.w	r2, r1, lsl #9
 800897c:	bf94      	ite	ls
 800897e:	fbb3 f3f2 	udivls	r3, r3, r2
 8008982:	23aa      	movhi	r3, #170	; 0xaa
 8008984:	9347      	str	r3, [sp, #284]	; 0x11c
 8008986:	a946      	add	r1, sp, #280	; 0x118
 8008988:	a862      	add	r0, sp, #392	; 0x188
 800898a:	f003 f897 	bl	800babc <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 800898e:	f89d 40a0 	ldrb.w	r4, [sp, #160]	; 0xa0
 8008992:	ab11      	add	r3, sp, #68	; 0x44
 8008994:	2101      	movs	r1, #1
 8008996:	a809      	add	r0, sp, #36	; 0x24
 8008998:	9376      	str	r3, [sp, #472]	; 0x1d8
 800899a:	f003 fef5 	bl	800c788 <PixelPatterns::PixelPatterns(unsigned int)>
 800899e:	4b60      	ldr	r3, [pc, #384]	; (8008b20 <main+0x320>)
 80089a0:	2c05      	cmp	r4, #5
 80089a2:	601c      	str	r4, [r3, #0]
 80089a4:	f340 8170 	ble.w	8008c88 <main+0x488>
 80089a8:	4b5e      	ldr	r3, [pc, #376]	; (8008b24 <main+0x324>)
 80089aa:	2110      	movs	r1, #16
 80089ac:	2203      	movs	r2, #3
 80089ae:	485e      	ldr	r0, [pc, #376]	; (8008b28 <main+0x328>)
 80089b0:	930c      	str	r3, [sp, #48]	; 0x30
 80089b2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80089b6:	f008 fe43 	bl	8011640 <gpio_init>
 80089ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80089be:	4b5b      	ldr	r3, [pc, #364]	; (8008b2c <main+0x32c>)
 80089c0:	9846      	ldr	r0, [sp, #280]	; 0x118
 80089c2:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80089c6:	ae0c      	add	r6, sp, #48	; 0x30
 80089c8:	9677      	str	r6, [sp, #476]	; 0x1dc
 80089ca:	f003 fdbf 	bl	800c54c <PixelType::GetType(pixel::Type)>
 80089ce:	9a4e      	ldr	r2, [sp, #312]	; 0x138
 80089d0:	4603      	mov	r3, r0
 80089d2:	9201      	str	r2, [sp, #4]
 80089d4:	9a47      	ldr	r2, [sp, #284]	; 0x11c
 80089d6:	2107      	movs	r1, #7
 80089d8:	9200      	str	r2, [sp, #0]
 80089da:	a81c      	add	r0, sp, #112	; 0x70
 80089dc:	4a54      	ldr	r2, [pc, #336]	; (8008b30 <main+0x330>)
 80089de:	f7ff fe91 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 80089e2:	ac62      	add	r4, sp, #392	; 0x188
 80089e4:	2008      	movs	r0, #8
 80089e6:	945f      	str	r4, [sp, #380]	; 0x17c
 80089e8:	f008 faaa 	bl	8010f40 <operator new(unsigned int)>
 80089ec:	4b51      	ldr	r3, [pc, #324]	; (8008b34 <main+0x334>)
 80089ee:	905e      	str	r0, [sp, #376]	; 0x178
 80089f0:	e9c0 3400 	strd	r3, r4, [r0]
 80089f4:	a852      	add	r0, sp, #328	; 0x148
 80089f6:	f002 fab5 	bl	800af64 <OscServer::Print()>
 80089fa:	a863      	add	r0, sp, #396	; 0x18c
 80089fc:	f002 ff30 	bl	800b860 <PixelDmxConfiguration::Print()>
 8008a00:	2401      	movs	r4, #1
 8008a02:	9822      	ldr	r0, [sp, #136]	; 0x88
 8008a04:	b2e1      	uxtb	r1, r4
 8008a06:	b110      	cbz	r0, 8008a0e <main+0x20e>
 8008a08:	6803      	ldr	r3, [r0, #0]
 8008a0a:	691b      	ldr	r3, [r3, #16]
 8008a0c:	4798      	blx	r3
 8008a0e:	3401      	adds	r4, #1
 8008a10:	2c07      	cmp	r4, #7
 8008a12:	d1f6      	bne.n	8008a02 <main+0x202>
 8008a14:	2101      	movs	r1, #1
 8008a16:	4a48      	ldr	r2, [pc, #288]	; (8008b38 <main+0x338>)
 8008a18:	a81c      	add	r0, sp, #112	; 0x70
 8008a1a:	f7ff fe73 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a1e:	2102      	movs	r1, #2
 8008a20:	4a46      	ldr	r2, [pc, #280]	; (8008b3c <main+0x33c>)
 8008a22:	9822      	ldr	r0, [sp, #136]	; 0x88
 8008a24:	f7ff fe2f 	bl	8008686 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008a28:	f89d 41e9 	ldrb.w	r4, [sp, #489]	; 0x1e9
 8008a2c:	4b44      	ldr	r3, [pc, #272]	; (8008b40 <main+0x340>)
 8008a2e:	2c00      	cmp	r4, #0
 8008a30:	bf14      	ite	ne
 8008a32:	2444      	movne	r4, #68	; 0x44
 8008a34:	2453      	moveq	r4, #83	; 0x53
 8008a36:	681b      	ldr	r3, [r3, #0]
 8008a38:	695b      	ldr	r3, [r3, #20]
 8008a3a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8008a3e:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008a42:	0e18      	lsrs	r0, r3, #24
 8008a44:	e9cd 2100 	strd	r2, r1, [sp]
 8008a48:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008a4c:	2103      	movs	r1, #3
 8008a4e:	4a3d      	ldr	r2, [pc, #244]	; (8008b44 <main+0x344>)
 8008a50:	b2db      	uxtb	r3, r3
 8008a52:	a81c      	add	r0, sp, #112	; 0x70
 8008a54:	f7ff fe56 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a58:	2104      	movs	r1, #4
 8008a5a:	f8bd 3148 	ldrh.w	r3, [sp, #328]	; 0x148
 8008a5e:	4a3a      	ldr	r2, [pc, #232]	; (8008b48 <main+0x348>)
 8008a60:	a81c      	add	r0, sp, #112	; 0x70
 8008a62:	f7ff fe4f 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a66:	2105      	movs	r1, #5
 8008a68:	f8bd 314a 	ldrh.w	r3, [sp, #330]	; 0x14a
 8008a6c:	4a37      	ldr	r2, [pc, #220]	; (8008b4c <main+0x34c>)
 8008a6e:	a81c      	add	r0, sp, #112	; 0x70
 8008a70:	f7ff fe48 	bl	8008704 <Display::Printf(unsigned char, char const*, ...)>
 8008a74:	2301      	movs	r3, #1
 8008a76:	2203      	movs	r2, #3
 8008a78:	2102      	movs	r1, #2
 8008a7a:	a82a      	add	r0, sp, #168	; 0xa8
 8008a7c:	f000 ff66 	bl	800994c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008a80:	a80d      	add	r0, sp, #52	; 0x34
 8008a82:	f005 f9e5 	bl	800de50 <StoreRemoteConfig::StoreRemoteConfig()>
 8008a86:	a90d      	add	r1, sp, #52	; 0x34
 8008a88:	a833      	add	r0, sp, #204	; 0xcc
 8008a8a:	f001 fa05 	bl	8009e98 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008a8e:	a833      	add	r0, sp, #204	; 0xcc
 8008a90:	f001 fa0c 	bl	8009eac <RemoteConfigParams::Load()>
 8008a94:	b130      	cbz	r0, 8008aa4 <main+0x2a4>
 8008a96:	a833      	add	r0, sp, #204	; 0xcc
 8008a98:	f001 fb4f 	bl	800a13a <RemoteConfigParams::Dump()>
 8008a9c:	a92a      	add	r1, sp, #168	; 0xa8
 8008a9e:	a833      	add	r0, sp, #204	; 0xcc
 8008aa0:	f001 fb2b 	bl	800a0fa <RemoteConfigParams::Set(RemoteConfig*)>
 8008aa4:	a807      	add	r0, sp, #28
 8008aa6:	f005 f867 	bl	800db78 <SpiFlashStore::Flash()>
 8008aaa:	2800      	cmp	r0, #0
 8008aac:	d1fa      	bne.n	8008aa4 <main+0x2a4>
 8008aae:	2303      	movs	r3, #3
 8008ab0:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008ab4:	4926      	ldr	r1, [pc, #152]	; (8008b50 <main+0x350>)
 8008ab6:	a81c      	add	r0, sp, #112	; 0x70
 8008ab8:	f7ff fe40 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008abc:	a852      	add	r0, sp, #328	; 0x148
 8008abe:	f002 f855 	bl	800ab6c <OscServer::Start()>
 8008ac2:	2302      	movs	r3, #2
 8008ac4:	f248 0280 	movw	r2, #32896	; 0x8080
 8008ac8:	4922      	ldr	r1, [pc, #136]	; (8008b54 <main+0x354>)
 8008aca:	a81c      	add	r0, sp, #112	; 0x70
 8008acc:	f7ff fe36 	bl	800873c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ad0:	2102      	movs	r1, #2
 8008ad2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008ad6:	f008 fd89 	bl	80115ec <fwdgt_config>
 8008ada:	2801      	cmp	r0, #1
 8008adc:	bf0c      	ite	eq
 8008ade:	2301      	moveq	r3, #1
 8008ae0:	2300      	movne	r3, #0
 8008ae2:	e039      	b.n	8008b58 <main+0x358>
 8008ae4:	080132ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, ip, sp}
 8008ae8:	080132a4 	stmdaeq	r1, {r2, r5, r7, r9, ip, sp}
 8008aec:	080133a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, ip, sp}
 8008af0:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 8008af4:	40011000 	andmi	r1, r1, r0
 8008af8:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 8008afc:	20009be4 	andcs	r9, r0, r4, ror #23
 8008b00:	080153e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, ip, lr}
 8008b04:	080153d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, ip, lr}
 8008b08:	080132f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, ip, sp}
 8008b0c:	080132ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, ip, sp}
 8008b10:	08013306 	stmdaeq	r1, {r1, r2, r8, r9, ip, sp}
 8008b14:	080132ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 8008b18:	080145fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, lr}
 8008b1c:	080133ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8008b20:	20000cf4 	strdcs	r0, [r0], -r4
 8008b24:	08013378 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, ip, sp}
 8008b28:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008b2c:	40010000 	andmi	r0, r1, r0
 8008b30:	08013316 	stmdaeq	r1, {r1, r2, r4, r8, r9, ip, sp}
 8008b34:	08013390 	stmdaeq	r1, {r4, r7, r8, r9, ip, sp}
 8008b38:	08013320 	stmdaeq	r1, {r5, r8, r9, ip, sp}
 8008b3c:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 8008b40:	20009614 	andcs	r9, r0, r4, lsl r6
 8008b44:	08013337 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, ip, sp}
 8008b48:	0801334a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp}
 8008b4c:	08013351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip, sp}
 8008b50:	080145e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, lr}
 8008b54:	08014612 	stmdaeq	r1, {r1, r4, r9, sl, lr}
 8008b58:	f88d 3010 	strb.w	r3, [sp, #16]
 8008b5c:	d101      	bne.n	8008b62 <main+0x362>
 8008b5e:	f008 fd35 	bl	80115cc <fwdgt_enable>
 8008b62:	4e52      	ldr	r6, [pc, #328]	; (8008cac <main+0x4ac>)
 8008b64:	4c52      	ldr	r4, [pc, #328]	; (8008cb0 <main+0x4b0>)
 8008b66:	f008 fd39 	bl	80115dc <fwdgt_counter_reload>
 8008b6a:	f7fe fcd9 	bl	8007520 <net_handle>
 8008b6e:	a852      	add	r0, sp, #328	; 0x148
 8008b70:	f002 f8ac 	bl	800accc <OscServer::Run()>
 8008b74:	a82a      	add	r0, sp, #168	; 0xa8
 8008b76:	f001 f867 	bl	8009c48 <RemoteConfig::Run()>
 8008b7a:	a807      	add	r0, sp, #28
 8008b7c:	f004 fffc 	bl	800db78 <SpiFlashStore::Flash()>
 8008b80:	6833      	ldr	r3, [r6, #0]
 8008b82:	b113      	cbz	r3, 8008b8a <main+0x38a>
 8008b84:	a809      	add	r0, sp, #36	; 0x24
 8008b86:	f004 f82d 	bl	800cbe4 <PixelPatterns::Run()>
 8008b8a:	a808      	add	r0, sp, #32
 8008b8c:	f006 fab0 	bl	800f0f0 <MDNS::Run()>
 8008b90:	a83c      	add	r0, sp, #240	; 0xf0
 8008b92:	f001 fe17 	bl	800a7c4 <HttpDaemon::Run()>
 8008b96:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8008b98:	b162      	cbz	r2, 8008bb4 <main+0x3b4>
 8008b9a:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
 8008b9e:	2b00      	cmp	r3, #0
 8008ba0:	d16c      	bne.n	8008c7c <main+0x47c>
 8008ba2:	6823      	ldr	r3, [r4, #0]
 8008ba4:	991d      	ldr	r1, [sp, #116]	; 0x74
 8008ba6:	1a5b      	subs	r3, r3, r1
 8008ba8:	429a      	cmp	r2, r3
 8008baa:	d203      	bcs.n	8008bb4 <main+0x3b4>
 8008bac:	2101      	movs	r1, #1
 8008bae:	a81c      	add	r0, sp, #112	; 0x70
 8008bb0:	f7ff fe10 	bl	80087d4 <Display::SetSleep(bool)>
 8008bb4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008bb6:	2a00      	cmp	r2, #0
 8008bb8:	d0d5      	beq.n	8008b66 <main+0x366>
 8008bba:	6823      	ldr	r3, [r4, #0]
 8008bbc:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8008bbe:	1a5b      	subs	r3, r3, r1
 8008bc0:	429a      	cmp	r2, r3
 8008bc2:	d8d0      	bhi.n	8008b66 <main+0x366>
 8008bc4:	6823      	ldr	r3, [r4, #0]
 8008bc6:	931b      	str	r3, [sp, #108]	; 0x6c
 8008bc8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008bca:	2b01      	cmp	r3, #1
 8008bcc:	f083 0201 	eor.w	r2, r3, #1
 8008bd0:	bf18      	it	ne
 8008bd2:	2301      	movne	r3, #1
 8008bd4:	921a      	str	r2, [sp, #104]	; 0x68
 8008bd6:	bf14      	ite	ne
 8008bd8:	612b      	strne	r3, [r5, #16]
 8008bda:	616b      	streq	r3, [r5, #20]
 8008bdc:	e7c3      	b.n	8008b66 <main+0x366>
 8008bde:	2300      	movs	r3, #0
 8008be0:	2264      	movs	r2, #100	; 0x64
 8008be2:	4619      	mov	r1, r3
 8008be4:	a809      	add	r0, sp, #36	; 0x24
 8008be6:	f003 fdef 	bl	800c7c8 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bea:	e6dd      	b.n	80089a8 <main+0x1a8>
 8008bec:	2200      	movs	r2, #0
 8008bee:	2364      	movs	r3, #100	; 0x64
 8008bf0:	4611      	mov	r1, r2
 8008bf2:	e9cd 3200 	strd	r3, r2, [sp]
 8008bf6:	a809      	add	r0, sp, #36	; 0x24
 8008bf8:	4b2e      	ldr	r3, [pc, #184]	; (8008cb4 <main+0x4b4>)
 8008bfa:	f003 fdf9 	bl	800c7f0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008bfe:	e6d3      	b.n	80089a8 <main+0x1a8>
 8008c00:	2100      	movs	r1, #0
 8008c02:	2364      	movs	r3, #100	; 0x64
 8008c04:	4a2b      	ldr	r2, [pc, #172]	; (8008cb4 <main+0x4b4>)
 8008c06:	9100      	str	r1, [sp, #0]
 8008c08:	a809      	add	r0, sp, #36	; 0x24
 8008c0a:	f003 fe0d 	bl	800c828 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c0e:	e6cb      	b.n	80089a8 <main+0x1a8>
 8008c10:	2364      	movs	r3, #100	; 0x64
 8008c12:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008c16:	2100      	movs	r1, #0
 8008c18:	a809      	add	r0, sp, #36	; 0x24
 8008c1a:	f003 fe1f 	bl	800c85c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008c1e:	e6c3      	b.n	80089a8 <main+0x1a8>
 8008c20:	2200      	movs	r2, #0
 8008c22:	2364      	movs	r3, #100	; 0x64
 8008c24:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008c28:	230a      	movs	r3, #10
 8008c2a:	4611      	mov	r1, r2
 8008c2c:	9300      	str	r3, [sp, #0]
 8008c2e:	a809      	add	r0, sp, #36	; 0x24
 8008c30:	4b20      	ldr	r3, [pc, #128]	; (8008cb4 <main+0x4b4>)
 8008c32:	f003 fe45 	bl	800c8c0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008c36:	e6b7      	b.n	80089a8 <main+0x1a8>
 8008c38:	2400      	movs	r4, #0
 8008c3a:	4626      	mov	r6, r4
 8008c3c:	4b1e      	ldr	r3, [pc, #120]	; (8008cb8 <main+0x4b8>)
 8008c3e:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8008cbc <main+0x4bc>
 8008c42:	4f1f      	ldr	r7, [pc, #124]	; (8008cc0 <main+0x4c0>)
 8008c44:	61dc      	str	r4, [r3, #28]
 8008c46:	683b      	ldr	r3, [r7, #0]
 8008c48:	f8d8 0000 	ldr.w	r0, [r8]
 8008c4c:	429c      	cmp	r4, r3
 8008c4e:	d302      	bcc.n	8008c56 <main+0x456>
 8008c50:	f004 fd92 	bl	800d778 <WS28xx::Update()>
 8008c54:	e6a8      	b.n	80089a8 <main+0x1a8>
 8008c56:	6803      	ldr	r3, [r0, #0]
 8008c58:	2b07      	cmp	r3, #7
 8008c5a:	d007      	beq.n	8008c6c <main+0x46c>
 8008c5c:	2300      	movs	r3, #0
 8008c5e:	4621      	mov	r1, r4
 8008c60:	461a      	mov	r2, r3
 8008c62:	9600      	str	r6, [sp, #0]
 8008c64:	f003 ffe6 	bl	800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008c68:	3401      	adds	r4, #1
 8008c6a:	e7ec      	b.n	8008c46 <main+0x446>
 8008c6c:	2300      	movs	r3, #0
 8008c6e:	4621      	mov	r1, r4
 8008c70:	461a      	mov	r2, r3
 8008c72:	e9cd 6600 	strd	r6, r6, [sp]
 8008c76:	f004 fc0f 	bl	800d498 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008c7a:	e7f5      	b.n	8008c68 <main+0x468>
 8008c7c:	f007 fd40 	bl	8010700 <display::timeout::gpio_renew()>
 8008c80:	2800      	cmp	r0, #0
 8008c82:	d097      	beq.n	8008bb4 <main+0x3b4>
 8008c84:	2100      	movs	r1, #0
 8008c86:	e792      	b.n	8008bae <main+0x3ae>
 8008c88:	2c05      	cmp	r4, #5
 8008c8a:	f63f ae8d 	bhi.w	80089a8 <main+0x1a8>
 8008c8e:	a301      	add	r3, pc, #4	; (adr r3, 8008c94 <main+0x494>)
 8008c90:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 8008c94:	08008c39 	stmdaeq	r0, {r0, r3, r4, r5, sl, fp, pc}
 8008c98:	08008bdf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, fp, pc}
 8008c9c:	08008bed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, fp, pc}
 8008ca0:	08008c01 	stmdaeq	r0, {r0, sl, fp, pc}
 8008ca4:	08008c11 	stmdaeq	r0, {r0, r4, sl, fp, pc}
 8008ca8:	08008c21 	stmdaeq	r0, {r0, r5, sl, fp, pc}
 8008cac:	20000cf4 	strdcs	r0, [r0], -r4
 8008cb0:	20009cec 	andcs	r9, r0, ip, ror #25
 8008cb4:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008cb8:	20000cc4 	andcs	r0, r0, r4, asr #25
 8008cbc:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8008cc0:	20000cec 	andcs	r0, r0, ip, ror #25

08008cc4 <Handler::Update()>:
 8008cc4:	2100      	movs	r1, #0
 8008cc6:	6840      	ldr	r0, [r0, #4]
 8008cc8:	f002 be01 	b.w	800b8ce <WS28xxDmx::Blackout(bool)>

08008ccc <Handler::Blackout()>:
 8008ccc:	2101      	movs	r1, #1
 8008cce:	6840      	ldr	r0, [r0, #4]
 8008cd0:	f002 bdfd 	b.w	800b8ce <WS28xxDmx::Blackout(bool)>

08008cd4 <NetworkDisplay::ShowEmacStart()>:
 8008cd4:	4770      	bx	lr

08008cd6 <NetworkDisplay::ShowIp()>:
 8008cd6:	4770      	bx	lr

08008cd8 <NetworkDisplay::ShowShutdown()>:
 8008cd8:	4770      	bx	lr

08008cda <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8008cda:	4770      	bx	lr

08008cdc <_itostr>:
 8008cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008cde:	0fc7      	lsrs	r7, r0, #31
 8008ce0:	b091      	sub	sp, #68	; 0x44
 8008ce2:	bf18      	it	ne
 8008ce4:	4240      	negne	r0, r0
 8008ce6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008cea:	b9c8      	cbnz	r0, 8008d20 <_itostr+0x44>
 8008cec:	2330      	movs	r3, #48	; 0x30
 8008cee:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008cf2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008cf6:	b132      	cbz	r2, 8008d06 <_itostr+0x2a>
 8008cf8:	4668      	mov	r0, sp
 8008cfa:	2530      	movs	r5, #48	; 0x30
 8008cfc:	1ae6      	subs	r6, r4, r3
 8008cfe:	4296      	cmp	r6, r2
 8008d00:	da01      	bge.n	8008d06 <_itostr+0x2a>
 8008d02:	4283      	cmp	r3, r0
 8008d04:	d81c      	bhi.n	8008d40 <_itostr+0x64>
 8008d06:	b117      	cbz	r7, 8008d0e <_itostr+0x32>
 8008d08:	222d      	movs	r2, #45	; 0x2d
 8008d0a:	f803 2901 	strb.w	r2, [r3], #-1
 8008d0e:	3301      	adds	r3, #1
 8008d10:	1ae0      	subs	r0, r4, r3
 8008d12:	3901      	subs	r1, #1
 8008d14:	aa10      	add	r2, sp, #64	; 0x40
 8008d16:	4293      	cmp	r3, r2
 8008d18:	d315      	bcc.n	8008d46 <_itostr+0x6a>
 8008d1a:	3001      	adds	r0, #1
 8008d1c:	b011      	add	sp, #68	; 0x44
 8008d1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d20:	4623      	mov	r3, r4
 8008d22:	250a      	movs	r5, #10
 8008d24:	46ec      	mov	ip, sp
 8008d26:	fb90 f6f5 	sdiv	r6, r0, r5
 8008d2a:	fb05 0016 	mls	r0, r5, r6, r0
 8008d2e:	3030      	adds	r0, #48	; 0x30
 8008d30:	f803 0901 	strb.w	r0, [r3], #-1
 8008d34:	4630      	mov	r0, r6
 8008d36:	2e00      	cmp	r6, #0
 8008d38:	d0dd      	beq.n	8008cf6 <_itostr+0x1a>
 8008d3a:	4563      	cmp	r3, ip
 8008d3c:	d1f3      	bne.n	8008d26 <_itostr+0x4a>
 8008d3e:	e7da      	b.n	8008cf6 <_itostr+0x1a>
 8008d40:	f803 5901 	strb.w	r5, [r3], #-1
 8008d44:	e7da      	b.n	8008cfc <_itostr+0x20>
 8008d46:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008d4a:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008d4e:	e7e1      	b.n	8008d14 <_itostr+0x38>

08008d50 <_xputch>:
 8008d50:	4603      	mov	r3, r0
 8008d52:	b410      	push	{r4}
 8008d54:	4c08      	ldr	r4, [pc, #32]	; (8008d78 <_xputch+0x28>)
 8008d56:	68da      	ldr	r2, [r3, #12]
 8008d58:	4608      	mov	r0, r1
 8008d5a:	6821      	ldr	r1, [r4, #0]
 8008d5c:	3201      	adds	r2, #1
 8008d5e:	60da      	str	r2, [r3, #12]
 8008d60:	b139      	cbz	r1, 8008d72 <_xputch+0x22>
 8008d62:	691b      	ldr	r3, [r3, #16]
 8008d64:	429a      	cmp	r2, r3
 8008d66:	da02      	bge.n	8008d6e <_xputch+0x1e>
 8008d68:	1c4b      	adds	r3, r1, #1
 8008d6a:	6023      	str	r3, [r4, #0]
 8008d6c:	7008      	strb	r0, [r1, #0]
 8008d6e:	bc10      	pop	{r4}
 8008d70:	4770      	bx	lr
 8008d72:	bc10      	pop	{r4}
 8008d74:	f007 bf68 	b.w	8010c48 <console_putc>
 8008d78:	200000e8 	andcs	r0, r0, r8, ror #1

08008d7c <_format_int>:
 8008d7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008d80:	4698      	mov	r8, r3
 8008d82:	b091      	sub	sp, #68	; 0x44
 8008d84:	ea52 0308 	orrs.w	r3, r2, r8
 8008d88:	4606      	mov	r6, r0
 8008d8a:	4617      	mov	r7, r2
 8008d8c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008d90:	d133      	bne.n	8008dfa <_format_int+0x7e>
 8008d92:	2330      	movs	r3, #48	; 0x30
 8008d94:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008d98:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008d9c:	6833      	ldr	r3, [r6, #0]
 8008d9e:	07d8      	lsls	r0, r3, #31
 8008da0:	d507      	bpl.n	8008db2 <_format_int+0x36>
 8008da2:	466a      	mov	r2, sp
 8008da4:	2030      	movs	r0, #48	; 0x30
 8008da6:	6871      	ldr	r1, [r6, #4]
 8008da8:	1b2f      	subs	r7, r5, r4
 8008daa:	428f      	cmp	r7, r1
 8008dac:	da01      	bge.n	8008db2 <_format_int+0x36>
 8008dae:	4294      	cmp	r4, r2
 8008db0:	d839      	bhi.n	8008e26 <_format_int+0xaa>
 8008db2:	0699      	lsls	r1, r3, #26
 8008db4:	d507      	bpl.n	8008dc6 <_format_int+0x4a>
 8008db6:	466a      	mov	r2, sp
 8008db8:	2030      	movs	r0, #48	; 0x30
 8008dba:	68b1      	ldr	r1, [r6, #8]
 8008dbc:	1b2f      	subs	r7, r5, r4
 8008dbe:	428f      	cmp	r7, r1
 8008dc0:	da01      	bge.n	8008dc6 <_format_int+0x4a>
 8008dc2:	4294      	cmp	r4, r2
 8008dc4:	d832      	bhi.n	8008e2c <_format_int+0xb0>
 8008dc6:	071a      	lsls	r2, r3, #28
 8008dc8:	bf44      	itt	mi
 8008dca:	222d      	movmi	r2, #45	; 0x2d
 8008dcc:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008dd0:	065b      	lsls	r3, r3, #25
 8008dd2:	d407      	bmi.n	8008de4 <_format_int+0x68>
 8008dd4:	466b      	mov	r3, sp
 8008dd6:	2120      	movs	r1, #32
 8008dd8:	68b2      	ldr	r2, [r6, #8]
 8008dda:	1b28      	subs	r0, r5, r4
 8008ddc:	4290      	cmp	r0, r2
 8008dde:	da01      	bge.n	8008de4 <_format_int+0x68>
 8008de0:	429c      	cmp	r4, r3
 8008de2:	d826      	bhi.n	8008e32 <_format_int+0xb6>
 8008de4:	1b2d      	subs	r5, r5, r4
 8008de6:	3401      	adds	r4, #1
 8008de8:	ab10      	add	r3, sp, #64	; 0x40
 8008dea:	429c      	cmp	r4, r3
 8008dec:	d324      	bcc.n	8008e38 <_format_int+0xbc>
 8008dee:	68b3      	ldr	r3, [r6, #8]
 8008df0:	42ab      	cmp	r3, r5
 8008df2:	dc27      	bgt.n	8008e44 <_format_int+0xc8>
 8008df4:	b011      	add	sp, #68	; 0x44
 8008df6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008dfa:	462c      	mov	r4, r5
 8008dfc:	46e9      	mov	r9, sp
 8008dfe:	4638      	mov	r0, r7
 8008e00:	4641      	mov	r1, r8
 8008e02:	220a      	movs	r2, #10
 8008e04:	2300      	movs	r3, #0
 8008e06:	f7ff f867 	bl	8007ed8 <__aeabi_uldivmod>
 8008e0a:	3230      	adds	r2, #48	; 0x30
 8008e0c:	f804 2901 	strb.w	r2, [r4], #-1
 8008e10:	463a      	mov	r2, r7
 8008e12:	4643      	mov	r3, r8
 8008e14:	2a0a      	cmp	r2, #10
 8008e16:	f173 0300 	sbcs.w	r3, r3, #0
 8008e1a:	4607      	mov	r7, r0
 8008e1c:	4688      	mov	r8, r1
 8008e1e:	d3bd      	bcc.n	8008d9c <_format_int+0x20>
 8008e20:	454c      	cmp	r4, r9
 8008e22:	d1ec      	bne.n	8008dfe <_format_int+0x82>
 8008e24:	e7ba      	b.n	8008d9c <_format_int+0x20>
 8008e26:	f804 0901 	strb.w	r0, [r4], #-1
 8008e2a:	e7bd      	b.n	8008da8 <_format_int+0x2c>
 8008e2c:	f804 0901 	strb.w	r0, [r4], #-1
 8008e30:	e7c4      	b.n	8008dbc <_format_int+0x40>
 8008e32:	f804 1901 	strb.w	r1, [r4], #-1
 8008e36:	e7d0      	b.n	8008dda <_format_int+0x5e>
 8008e38:	4630      	mov	r0, r6
 8008e3a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008e3e:	f7ff ff87 	bl	8008d50 <_xputch>
 8008e42:	e7d1      	b.n	8008de8 <_format_int+0x6c>
 8008e44:	2120      	movs	r1, #32
 8008e46:	4630      	mov	r0, r6
 8008e48:	f7ff ff82 	bl	8008d50 <_xputch>
 8008e4c:	3501      	adds	r5, #1
 8008e4e:	e7ce      	b.n	8008dee <_format_int+0x72>

08008e50 <_format_hex>:
 8008e50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e52:	b091      	sub	sp, #68	; 0x44
 8008e54:	4606      	mov	r6, r0
 8008e56:	6804      	ldr	r4, [r0, #0]
 8008e58:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008e5c:	bb61      	cbnz	r1, 8008eb8 <_format_hex+0x68>
 8008e5e:	2330      	movs	r3, #48	; 0x30
 8008e60:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008e64:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008e68:	07e5      	lsls	r5, r4, #31
 8008e6a:	d507      	bpl.n	8008e7c <_format_hex+0x2c>
 8008e6c:	4669      	mov	r1, sp
 8008e6e:	2530      	movs	r5, #48	; 0x30
 8008e70:	6870      	ldr	r0, [r6, #4]
 8008e72:	1ad7      	subs	r7, r2, r3
 8008e74:	4287      	cmp	r7, r0
 8008e76:	da01      	bge.n	8008e7c <_format_hex+0x2c>
 8008e78:	428b      	cmp	r3, r1
 8008e7a:	d831      	bhi.n	8008ee0 <_format_hex+0x90>
 8008e7c:	06a0      	lsls	r0, r4, #26
 8008e7e:	d507      	bpl.n	8008e90 <_format_hex+0x40>
 8008e80:	4669      	mov	r1, sp
 8008e82:	2530      	movs	r5, #48	; 0x30
 8008e84:	68b0      	ldr	r0, [r6, #8]
 8008e86:	1ad7      	subs	r7, r2, r3
 8008e88:	4287      	cmp	r7, r0
 8008e8a:	da01      	bge.n	8008e90 <_format_hex+0x40>
 8008e8c:	428b      	cmp	r3, r1
 8008e8e:	d82a      	bhi.n	8008ee6 <_format_hex+0x96>
 8008e90:	0661      	lsls	r1, r4, #25
 8008e92:	d407      	bmi.n	8008ea4 <_format_hex+0x54>
 8008e94:	4669      	mov	r1, sp
 8008e96:	2420      	movs	r4, #32
 8008e98:	68b0      	ldr	r0, [r6, #8]
 8008e9a:	1ad5      	subs	r5, r2, r3
 8008e9c:	4285      	cmp	r5, r0
 8008e9e:	da01      	bge.n	8008ea4 <_format_hex+0x54>
 8008ea0:	428b      	cmp	r3, r1
 8008ea2:	d823      	bhi.n	8008eec <_format_hex+0x9c>
 8008ea4:	1ad5      	subs	r5, r2, r3
 8008ea6:	1c5c      	adds	r4, r3, #1
 8008ea8:	ab10      	add	r3, sp, #64	; 0x40
 8008eaa:	429c      	cmp	r4, r3
 8008eac:	d321      	bcc.n	8008ef2 <_format_hex+0xa2>
 8008eae:	68b3      	ldr	r3, [r6, #8]
 8008eb0:	429d      	cmp	r5, r3
 8008eb2:	db24      	blt.n	8008efe <_format_hex+0xae>
 8008eb4:	b011      	add	sp, #68	; 0x44
 8008eb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008eb8:	f014 0f02 	tst.w	r4, #2
 8008ebc:	bf0c      	ite	eq
 8008ebe:	2757      	moveq	r7, #87	; 0x57
 8008ec0:	2737      	movne	r7, #55	; 0x37
 8008ec2:	4613      	mov	r3, r2
 8008ec4:	466d      	mov	r5, sp
 8008ec6:	f001 000f 	and.w	r0, r1, #15
 8008eca:	2809      	cmp	r0, #9
 8008ecc:	bf94      	ite	ls
 8008ece:	3030      	addls	r0, #48	; 0x30
 8008ed0:	19c0      	addhi	r0, r0, r7
 8008ed2:	0909      	lsrs	r1, r1, #4
 8008ed4:	f803 0901 	strb.w	r0, [r3], #-1
 8008ed8:	d0c6      	beq.n	8008e68 <_format_hex+0x18>
 8008eda:	42ab      	cmp	r3, r5
 8008edc:	d1f3      	bne.n	8008ec6 <_format_hex+0x76>
 8008ede:	e7c3      	b.n	8008e68 <_format_hex+0x18>
 8008ee0:	f803 5901 	strb.w	r5, [r3], #-1
 8008ee4:	e7c5      	b.n	8008e72 <_format_hex+0x22>
 8008ee6:	f803 5901 	strb.w	r5, [r3], #-1
 8008eea:	e7cc      	b.n	8008e86 <_format_hex+0x36>
 8008eec:	f803 4901 	strb.w	r4, [r3], #-1
 8008ef0:	e7d3      	b.n	8008e9a <_format_hex+0x4a>
 8008ef2:	4630      	mov	r0, r6
 8008ef4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008ef8:	f7ff ff2a 	bl	8008d50 <_xputch>
 8008efc:	e7d4      	b.n	8008ea8 <_format_hex+0x58>
 8008efe:	2120      	movs	r1, #32
 8008f00:	4630      	mov	r0, r6
 8008f02:	f7ff ff25 	bl	8008d50 <_xputch>
 8008f06:	3501      	adds	r5, #1
 8008f08:	e7d1      	b.n	8008eae <_format_hex+0x5e>
	...

08008f0c <_vprintf>:
 8008f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f10:	4614      	mov	r4, r2
 8008f12:	2200      	movs	r2, #0
 8008f14:	460b      	mov	r3, r1
 8008f16:	f04f 0800 	mov.w	r8, #0
 8008f1a:	b099      	sub	sp, #100	; 0x64
 8008f1c:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008f20:	af08      	add	r7, sp, #32
 8008f22:	7819      	ldrb	r1, [r3, #0]
 8008f24:	b919      	cbnz	r1, 8008f2e <_vprintf+0x22>
 8008f26:	9806      	ldr	r0, [sp, #24]
 8008f28:	b019      	add	sp, #100	; 0x64
 8008f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f2e:	2925      	cmp	r1, #37	; 0x25
 8008f30:	f103 0601 	add.w	r6, r3, #1
 8008f34:	d004      	beq.n	8008f40 <_vprintf+0x34>
 8008f36:	a803      	add	r0, sp, #12
 8008f38:	f7ff ff0a 	bl	8008d50 <_xputch>
 8008f3c:	4633      	mov	r3, r6
 8008f3e:	e7f0      	b.n	8008f22 <_vprintf+0x16>
 8008f40:	2200      	movs	r2, #0
 8008f42:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008f46:	9205      	str	r2, [sp, #20]
 8008f48:	785a      	ldrb	r2, [r3, #1]
 8008f4a:	2a30      	cmp	r2, #48	; 0x30
 8008f4c:	d129      	bne.n	8008fa2 <_vprintf+0x96>
 8008f4e:	2220      	movs	r2, #32
 8008f50:	9203      	str	r2, [sp, #12]
 8008f52:	1c9e      	adds	r6, r3, #2
 8008f54:	2200      	movs	r2, #0
 8008f56:	4635      	mov	r5, r6
 8008f58:	4613      	mov	r3, r2
 8008f5a:	f04f 0c0a 	mov.w	ip, #10
 8008f5e:	7829      	ldrb	r1, [r5, #0]
 8008f60:	462e      	mov	r6, r5
 8008f62:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008f66:	2809      	cmp	r0, #9
 8008f68:	f105 0501 	add.w	r5, r5, #1
 8008f6c:	d91d      	bls.n	8008faa <_vprintf+0x9e>
 8008f6e:	b12a      	cbz	r2, 8008f7c <_vprintf+0x70>
 8008f70:	9305      	str	r3, [sp, #20]
 8008f72:	b11b      	cbz	r3, 8008f7c <_vprintf+0x70>
 8008f74:	9b03      	ldr	r3, [sp, #12]
 8008f76:	f043 0310 	orr.w	r3, r3, #16
 8008f7a:	9303      	str	r3, [sp, #12]
 8008f7c:	292e      	cmp	r1, #46	; 0x2e
 8008f7e:	d123      	bne.n	8008fc8 <_vprintf+0xbc>
 8008f80:	7873      	ldrb	r3, [r6, #1]
 8008f82:	2b2a      	cmp	r3, #42	; 0x2a
 8008f84:	d015      	beq.n	8008fb2 <_vprintf+0xa6>
 8008f86:	2100      	movs	r1, #0
 8008f88:	250a      	movs	r5, #10
 8008f8a:	460a      	mov	r2, r1
 8008f8c:	1c70      	adds	r0, r6, #1
 8008f8e:	7803      	ldrb	r3, [r0, #0]
 8008f90:	4606      	mov	r6, r0
 8008f92:	3b30      	subs	r3, #48	; 0x30
 8008f94:	2b09      	cmp	r3, #9
 8008f96:	f100 0001 	add.w	r0, r0, #1
 8008f9a:	d959      	bls.n	8009050 <_vprintf+0x144>
 8008f9c:	b181      	cbz	r1, 8008fc0 <_vprintf+0xb4>
 8008f9e:	9204      	str	r2, [sp, #16]
 8008fa0:	e00e      	b.n	8008fc0 <_vprintf+0xb4>
 8008fa2:	2a2d      	cmp	r2, #45	; 0x2d
 8008fa4:	d1d6      	bne.n	8008f54 <_vprintf+0x48>
 8008fa6:	2240      	movs	r2, #64	; 0x40
 8008fa8:	e7d2      	b.n	8008f50 <_vprintf+0x44>
 8008faa:	2201      	movs	r2, #1
 8008fac:	fb0c 0303 	mla	r3, ip, r3, r0
 8008fb0:	e7d5      	b.n	8008f5e <_vprintf+0x52>
 8008fb2:	f854 3b04 	ldr.w	r3, [r4], #4
 8008fb6:	3602      	adds	r6, #2
 8008fb8:	2b00      	cmp	r3, #0
 8008fba:	bfb8      	it	lt
 8008fbc:	425b      	neglt	r3, r3
 8008fbe:	9304      	str	r3, [sp, #16]
 8008fc0:	9b03      	ldr	r3, [sp, #12]
 8008fc2:	f043 0301 	orr.w	r3, r3, #1
 8008fc6:	9303      	str	r3, [sp, #12]
 8008fc8:	7833      	ldrb	r3, [r6, #0]
 8008fca:	2b6c      	cmp	r3, #108	; 0x6c
 8008fcc:	bf04      	itt	eq
 8008fce:	9b03      	ldreq	r3, [sp, #12]
 8008fd0:	3601      	addeq	r6, #1
 8008fd2:	7831      	ldrb	r1, [r6, #0]
 8008fd4:	bf04      	itt	eq
 8008fd6:	f043 0304 	orreq.w	r3, r3, #4
 8008fda:	9303      	streq	r3, [sp, #12]
 8008fdc:	2958      	cmp	r1, #88	; 0x58
 8008fde:	f000 8171 	beq.w	80092c4 <_vprintf+0x3b8>
 8008fe2:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008fe6:	b2da      	uxtb	r2, r3
 8008fe8:	2a15      	cmp	r2, #21
 8008fea:	d8a4      	bhi.n	8008f36 <_vprintf+0x2a>
 8008fec:	2b15      	cmp	r3, #21
 8008fee:	d8a2      	bhi.n	8008f36 <_vprintf+0x2a>
 8008ff0:	a201      	add	r2, pc, #4	; (adr r2, 8008ff8 <_vprintf+0xec>)
 8008ff2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ff6:	bf00      	nop
 8008ff8:	08009059 	stmdaeq	r0, {r0, r3, r4, r6, ip, pc}
 8008ffc:	0800906b 	stmdaeq	r0, {r0, r1, r3, r5, r6, ip, pc}
 8009000:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009004:	080090a1 	stmdaeq	r0, {r0, r5, r7, ip, pc}
 8009008:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 800900c:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009010:	0800906b 	stmdaeq	r0, {r0, r1, r3, r5, r6, ip, pc}
 8009014:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009018:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 800901c:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009020:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009024:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009028:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 800902c:	08009207 	stmdaeq	r0, {r0, r1, r2, r9, ip, pc}
 8009030:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009034:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009038:	0800922f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r9, ip, pc}
 800903c:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009040:	080092a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, ip, pc}
 8009044:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 8009048:	08008f37 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, fp, pc}
 800904c:	080092cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, ip, pc}
 8009050:	2101      	movs	r1, #1
 8009052:	fb05 3202 	mla	r2, r5, r2, r3
 8009056:	e79a      	b.n	8008f8e <_vprintf+0x82>
 8009058:	4625      	mov	r5, r4
 800905a:	a803      	add	r0, sp, #12
 800905c:	f855 1b04 	ldr.w	r1, [r5], #4
 8009060:	f7ff fe76 	bl	8008d50 <_xputch>
 8009064:	462c      	mov	r4, r5
 8009066:	3601      	adds	r6, #1
 8009068:	e768      	b.n	8008f3c <_vprintf+0x30>
 800906a:	9903      	ldr	r1, [sp, #12]
 800906c:	074d      	lsls	r5, r1, #29
 800906e:	bf51      	iteee	pl
 8009070:	4625      	movpl	r5, r4
 8009072:	3407      	addmi	r4, #7
 8009074:	f024 0407 	bicmi.w	r4, r4, #7
 8009078:	4625      	movmi	r5, r4
 800907a:	bf55      	itete	pl
 800907c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8009080:	6863      	ldrmi	r3, [r4, #4]
 8009082:	17d3      	asrpl	r3, r2, #31
 8009084:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009088:	2b00      	cmp	r3, #0
 800908a:	da05      	bge.n	8009098 <_vprintf+0x18c>
 800908c:	f041 0108 	orr.w	r1, r1, #8
 8009090:	4252      	negs	r2, r2
 8009092:	9103      	str	r1, [sp, #12]
 8009094:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009098:	a803      	add	r0, sp, #12
 800909a:	f7ff fe6f 	bl	8008d7c <_format_int>
 800909e:	e7e1      	b.n	8009064 <_vprintf+0x158>
 80090a0:	3407      	adds	r4, #7
 80090a2:	f024 0507 	bic.w	r5, r4, #7
 80090a6:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80090aa:	f7fe fd1b 	bl	8007ae4 <__aeabi_d2f>
 80090ae:	9b03      	ldr	r3, [sp, #12]
 80090b0:	4641      	mov	r1, r8
 80090b2:	07dc      	lsls	r4, r3, #31
 80090b4:	bf54      	ite	pl
 80090b6:	f04f 0a06 	movpl.w	sl, #6
 80090ba:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80090be:	4681      	mov	r9, r0
 80090c0:	f7fe febc 	bl	8007e3c <__aeabi_fcmplt>
 80090c4:	2800      	cmp	r0, #0
 80090c6:	d063      	beq.n	8009190 <_vprintf+0x284>
 80090c8:	232d      	movs	r3, #45	; 0x2d
 80090ca:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 80090ce:	f88d 3020 	strb.w	r3, [sp, #32]
 80090d2:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 80090d6:	4648      	mov	r0, r9
 80090d8:	f7fe fed8 	bl	8007e8c <__aeabi_f2iz>
 80090dc:	4659      	mov	r1, fp
 80090de:	2200      	movs	r2, #0
 80090e0:	4604      	mov	r4, r0
 80090e2:	f7ff fdfb 	bl	8008cdc <_itostr>
 80090e6:	eb0b 0200 	add.w	r2, fp, r0
 80090ea:	e9cd 2000 	strd	r2, r0, [sp]
 80090ee:	4620      	mov	r0, r4
 80090f0:	f7fe fe02 	bl	8007cf8 <__aeabi_i2f>
 80090f4:	4601      	mov	r1, r0
 80090f6:	4648      	mov	r0, r9
 80090f8:	f7fe fd48 	bl	8007b8c <__aeabi_fsub>
 80090fc:	222e      	movs	r2, #46	; 0x2e
 80090fe:	4601      	mov	r1, r0
 8009100:	200a      	movs	r0, #10
 8009102:	9b00      	ldr	r3, [sp, #0]
 8009104:	f10a 0901 	add.w	r9, sl, #1
 8009108:	1c5c      	adds	r4, r3, #1
 800910a:	9b01      	ldr	r3, [sp, #4]
 800910c:	f80b 2003 	strb.w	r2, [fp, r3]
 8009110:	4603      	mov	r3, r0
 8009112:	f1ba 0f00 	cmp.w	sl, #0
 8009116:	dc3d      	bgt.n	8009194 <_vprintf+0x288>
 8009118:	9100      	str	r1, [sp, #0]
 800911a:	f7fe fded 	bl	8007cf8 <__aeabi_i2f>
 800911e:	9900      	ldr	r1, [sp, #0]
 8009120:	f7ff f8b0 	bl	8008284 <__aeabi_fmul>
 8009124:	f7fe feb2 	bl	8007e8c <__aeabi_f2iz>
 8009128:	464a      	mov	r2, r9
 800912a:	4621      	mov	r1, r4
 800912c:	f7ff fdd6 	bl	8008cdc <_itostr>
 8009130:	4404      	add	r4, r0
 8009132:	1be0      	subs	r0, r4, r7
 8009134:	1e44      	subs	r4, r0, #1
 8009136:	5d3b      	ldrb	r3, [r7, r4]
 8009138:	193a      	adds	r2, r7, r4
 800913a:	2b34      	cmp	r3, #52	; 0x34
 800913c:	d910      	bls.n	8009160 <_vprintf+0x254>
 800913e:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8009142:	1e53      	subs	r3, r2, #1
 8009144:	292e      	cmp	r1, #46	; 0x2e
 8009146:	d02c      	beq.n	80091a2 <_vprintf+0x296>
 8009148:	469c      	mov	ip, r3
 800914a:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800914e:	4663      	mov	r3, ip
 8009150:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8009154:	2939      	cmp	r1, #57	; 0x39
 8009156:	d021      	beq.n	800919c <_vprintf+0x290>
 8009158:	292e      	cmp	r1, #46	; 0x2e
 800915a:	d022      	beq.n	80091a2 <_vprintf+0x296>
 800915c:	3101      	adds	r1, #1
 800915e:	7019      	strb	r1, [r3, #0]
 8009160:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8009164:	446b      	add	r3, sp
 8009166:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 800916a:	2b2e      	cmp	r3, #46	; 0x2e
 800916c:	bf08      	it	eq
 800916e:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8009172:	46a1      	mov	r9, r4
 8009174:	9b05      	ldr	r3, [sp, #20]
 8009176:	4599      	cmp	r9, r3
 8009178:	db3e      	blt.n	80091f8 <_vprintf+0x2ec>
 800917a:	46b9      	mov	r9, r7
 800917c:	2c00      	cmp	r4, #0
 800917e:	f77f af71 	ble.w	8009064 <_vprintf+0x158>
 8009182:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009186:	a803      	add	r0, sp, #12
 8009188:	f7ff fde2 	bl	8008d50 <_xputch>
 800918c:	3c01      	subs	r4, #1
 800918e:	e7f5      	b.n	800917c <_vprintf+0x270>
 8009190:	46bb      	mov	fp, r7
 8009192:	e7a0      	b.n	80090d6 <_vprintf+0x1ca>
 8009194:	4358      	muls	r0, r3
 8009196:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800919a:	e7ba      	b.n	8009112 <_vprintf+0x206>
 800919c:	f88c e001 	strb.w	lr, [ip, #1]
 80091a0:	e7d5      	b.n	800914e <_vprintf+0x242>
 80091a2:	f04f 0c30 	mov.w	ip, #48	; 0x30
 80091a6:	3b01      	subs	r3, #1
 80091a8:	7819      	ldrb	r1, [r3, #0]
 80091aa:	2939      	cmp	r1, #57	; 0x39
 80091ac:	d112      	bne.n	80091d4 <_vprintf+0x2c8>
 80091ae:	42bb      	cmp	r3, r7
 80091b0:	d20d      	bcs.n	80091ce <_vprintf+0x2c2>
 80091b2:	1c5c      	adds	r4, r3, #1
 80091b4:	1c99      	adds	r1, r3, #2
 80091b6:	428c      	cmp	r4, r1
 80091b8:	eba2 0203 	sub.w	r2, r2, r3
 80091bc:	d913      	bls.n	80091e6 <_vprintf+0x2da>
 80091be:	4619      	mov	r1, r3
 80091c0:	441a      	add	r2, r3
 80091c2:	428a      	cmp	r2, r1
 80091c4:	d10b      	bne.n	80091de <_vprintf+0x2d2>
 80091c6:	2231      	movs	r2, #49	; 0x31
 80091c8:	4604      	mov	r4, r0
 80091ca:	705a      	strb	r2, [r3, #1]
 80091cc:	e7c8      	b.n	8009160 <_vprintf+0x254>
 80091ce:	f803 c901 	strb.w	ip, [r3], #-1
 80091d2:	e7e9      	b.n	80091a8 <_vprintf+0x29c>
 80091d4:	42bb      	cmp	r3, r7
 80091d6:	d3ec      	bcc.n	80091b2 <_vprintf+0x2a6>
 80091d8:	292d      	cmp	r1, #45	; 0x2d
 80091da:	d0ea      	beq.n	80091b2 <_vprintf+0x2a6>
 80091dc:	e7be      	b.n	800915c <_vprintf+0x250>
 80091de:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80091e2:	704c      	strb	r4, [r1, #1]
 80091e4:	e7ed      	b.n	80091c2 <_vprintf+0x2b6>
 80091e6:	4414      	add	r4, r2
 80091e8:	440a      	add	r2, r1
 80091ea:	428a      	cmp	r2, r1
 80091ec:	d0eb      	beq.n	80091c6 <_vprintf+0x2ba>
 80091ee:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 80091f2:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80091f6:	e7f8      	b.n	80091ea <_vprintf+0x2de>
 80091f8:	2120      	movs	r1, #32
 80091fa:	a803      	add	r0, sp, #12
 80091fc:	f7ff fda8 	bl	8008d50 <_xputch>
 8009200:	f109 0901 	add.w	r9, r9, #1
 8009204:	e7b6      	b.n	8009174 <_vprintf+0x268>
 8009206:	2308      	movs	r3, #8
 8009208:	4625      	mov	r5, r4
 800920a:	9305      	str	r3, [sp, #20]
 800920c:	2320      	movs	r3, #32
 800920e:	2130      	movs	r1, #48	; 0x30
 8009210:	f855 4b04 	ldr.w	r4, [r5], #4
 8009214:	a803      	add	r0, sp, #12
 8009216:	9303      	str	r3, [sp, #12]
 8009218:	f7ff fd9a 	bl	8008d50 <_xputch>
 800921c:	2178      	movs	r1, #120	; 0x78
 800921e:	a803      	add	r0, sp, #12
 8009220:	f7ff fd96 	bl	8008d50 <_xputch>
 8009224:	4621      	mov	r1, r4
 8009226:	a803      	add	r0, sp, #12
 8009228:	f7ff fe12 	bl	8008e50 <_format_hex>
 800922c:	e71a      	b.n	8009064 <_vprintf+0x158>
 800922e:	4625      	mov	r5, r4
 8009230:	2400      	movs	r4, #0
 8009232:	f855 9b04 	ldr.w	r9, [r5], #4
 8009236:	f819 3004 	ldrb.w	r3, [r9, r4]
 800923a:	b993      	cbnz	r3, 8009262 <_vprintf+0x356>
 800923c:	9b03      	ldr	r3, [sp, #12]
 800923e:	07d9      	lsls	r1, r3, #31
 8009240:	d503      	bpl.n	800924a <_vprintf+0x33e>
 8009242:	9b04      	ldr	r3, [sp, #16]
 8009244:	429c      	cmp	r4, r3
 8009246:	bfa8      	it	ge
 8009248:	461c      	movge	r4, r3
 800924a:	9b03      	ldr	r3, [sp, #12]
 800924c:	f104 0a01 	add.w	sl, r4, #1
 8009250:	065a      	lsls	r2, r3, #25
 8009252:	d403      	bmi.n	800925c <_vprintf+0x350>
 8009254:	9b05      	ldr	r3, [sp, #20]
 8009256:	429c      	cmp	r4, r3
 8009258:	db05      	blt.n	8009266 <_vprintf+0x35a>
 800925a:	4654      	mov	r4, sl
 800925c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009260:	e00d      	b.n	800927e <_vprintf+0x372>
 8009262:	3401      	adds	r4, #1
 8009264:	e7e7      	b.n	8009236 <_vprintf+0x32a>
 8009266:	2120      	movs	r1, #32
 8009268:	a803      	add	r0, sp, #12
 800926a:	f7ff fd71 	bl	8008d50 <_xputch>
 800926e:	4654      	mov	r4, sl
 8009270:	e7eb      	b.n	800924a <_vprintf+0x33e>
 8009272:	a803      	add	r0, sp, #12
 8009274:	f7ff fd6c 	bl	8008d50 <_xputch>
 8009278:	9b04      	ldr	r3, [sp, #16]
 800927a:	3b01      	subs	r3, #1
 800927c:	9304      	str	r3, [sp, #16]
 800927e:	9b03      	ldr	r3, [sp, #12]
 8009280:	07db      	lsls	r3, r3, #31
 8009282:	d501      	bpl.n	8009288 <_vprintf+0x37c>
 8009284:	9b04      	ldr	r3, [sp, #16]
 8009286:	b11b      	cbz	r3, 8009290 <_vprintf+0x384>
 8009288:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800928c:	2900      	cmp	r1, #0
 800928e:	d1f0      	bne.n	8009272 <_vprintf+0x366>
 8009290:	9b05      	ldr	r3, [sp, #20]
 8009292:	429c      	cmp	r4, r3
 8009294:	f6bf aee6 	bge.w	8009064 <_vprintf+0x158>
 8009298:	2120      	movs	r1, #32
 800929a:	a803      	add	r0, sp, #12
 800929c:	f7ff fd58 	bl	8008d50 <_xputch>
 80092a0:	3401      	adds	r4, #1
 80092a2:	e7f5      	b.n	8009290 <_vprintf+0x384>
 80092a4:	9b03      	ldr	r3, [sp, #12]
 80092a6:	f013 0304 	ands.w	r3, r3, #4
 80092aa:	bf1d      	ittte	ne
 80092ac:	3407      	addne	r4, #7
 80092ae:	f024 0407 	bicne.w	r4, r4, #7
 80092b2:	4625      	movne	r5, r4
 80092b4:	4625      	moveq	r5, r4
 80092b6:	bf1a      	itte	ne
 80092b8:	f855 2b08 	ldrne.w	r2, [r5], #8
 80092bc:	6863      	ldrne	r3, [r4, #4]
 80092be:	f855 2b04 	ldreq.w	r2, [r5], #4
 80092c2:	e6e9      	b.n	8009098 <_vprintf+0x18c>
 80092c4:	9b03      	ldr	r3, [sp, #12]
 80092c6:	f043 0302 	orr.w	r3, r3, #2
 80092ca:	9303      	str	r3, [sp, #12]
 80092cc:	4625      	mov	r5, r4
 80092ce:	f855 1b04 	ldr.w	r1, [r5], #4
 80092d2:	e7a8      	b.n	8009226 <_vprintf+0x31a>

080092d4 <printf>:
 80092d4:	b40f      	push	{r0, r1, r2, r3}
 80092d6:	b507      	push	{r0, r1, r2, lr}
 80092d8:	aa04      	add	r2, sp, #16
 80092da:	f852 1b04 	ldr.w	r1, [r2], #4
 80092de:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80092e2:	9201      	str	r2, [sp, #4]
 80092e4:	f7ff fe12 	bl	8008f0c <_vprintf>
 80092e8:	b003      	add	sp, #12
 80092ea:	f85d eb04 	ldr.w	lr, [sp], #4
 80092ee:	b004      	add	sp, #16
 80092f0:	4770      	bx	lr
	...

080092f4 <snprintf>:
 80092f4:	b40c      	push	{r2, r3}
 80092f6:	460b      	mov	r3, r1
 80092f8:	b513      	push	{r0, r1, r4, lr}
 80092fa:	4c09      	ldr	r4, [pc, #36]	; (8009320 <snprintf+0x2c>)
 80092fc:	aa04      	add	r2, sp, #16
 80092fe:	f852 1b04 	ldr.w	r1, [r2], #4
 8009302:	6020      	str	r0, [r4, #0]
 8009304:	4618      	mov	r0, r3
 8009306:	9201      	str	r2, [sp, #4]
 8009308:	f7ff fe00 	bl	8008f0c <_vprintf>
 800930c:	2300      	movs	r3, #0
 800930e:	6822      	ldr	r2, [r4, #0]
 8009310:	6023      	str	r3, [r4, #0]
 8009312:	7013      	strb	r3, [r2, #0]
 8009314:	b002      	add	sp, #8
 8009316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800931a:	b002      	add	sp, #8
 800931c:	4770      	bx	lr
 800931e:	bf00      	nop
 8009320:	200000e8 	andcs	r0, r0, r8, ror #1

08009324 <vsnprintf>:
 8009324:	b538      	push	{r3, r4, r5, lr}
 8009326:	4605      	mov	r5, r0
 8009328:	4c05      	ldr	r4, [pc, #20]	; (8009340 <vsnprintf+0x1c>)
 800932a:	4608      	mov	r0, r1
 800932c:	4611      	mov	r1, r2
 800932e:	461a      	mov	r2, r3
 8009330:	6025      	str	r5, [r4, #0]
 8009332:	f7ff fdeb 	bl	8008f0c <_vprintf>
 8009336:	2300      	movs	r3, #0
 8009338:	6822      	ldr	r2, [r4, #0]
 800933a:	6023      	str	r3, [r4, #0]
 800933c:	7013      	strb	r3, [r2, #0]
 800933e:	bd38      	pop	{r3, r4, r5, pc}
 8009340:	200000e8 	andcs	r0, r0, r8, ror #1

08009344 <__udivmoddi4>:
 8009344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009348:	9e08      	ldr	r6, [sp, #32]
 800934a:	460d      	mov	r5, r1
 800934c:	4604      	mov	r4, r0
 800934e:	468e      	mov	lr, r1
 8009350:	2b00      	cmp	r3, #0
 8009352:	d14c      	bne.n	80093ee <__udivmoddi4+0xaa>
 8009354:	428a      	cmp	r2, r1
 8009356:	4694      	mov	ip, r2
 8009358:	d967      	bls.n	800942a <__udivmoddi4+0xe6>
 800935a:	fab2 f382 	clz	r3, r2
 800935e:	b153      	cbz	r3, 8009376 <__udivmoddi4+0x32>
 8009360:	fa02 fc03 	lsl.w	ip, r2, r3
 8009364:	f1c3 0220 	rsb	r2, r3, #32
 8009368:	fa01 fe03 	lsl.w	lr, r1, r3
 800936c:	fa20 f202 	lsr.w	r2, r0, r2
 8009370:	ea42 0e0e 	orr.w	lr, r2, lr
 8009374:	409c      	lsls	r4, r3
 8009376:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800937a:	fbbe f1f7 	udiv	r1, lr, r7
 800937e:	fa1f f58c 	uxth.w	r5, ip
 8009382:	fb07 ee11 	mls	lr, r7, r1, lr
 8009386:	fb01 f005 	mul.w	r0, r1, r5
 800938a:	0c22      	lsrs	r2, r4, #16
 800938c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8009390:	4290      	cmp	r0, r2
 8009392:	d90a      	bls.n	80093aa <__udivmoddi4+0x66>
 8009394:	eb1c 0202 	adds.w	r2, ip, r2
 8009398:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 800939c:	f080 8119 	bcs.w	80095d2 <__udivmoddi4+0x28e>
 80093a0:	4290      	cmp	r0, r2
 80093a2:	f240 8116 	bls.w	80095d2 <__udivmoddi4+0x28e>
 80093a6:	3902      	subs	r1, #2
 80093a8:	4462      	add	r2, ip
 80093aa:	1a12      	subs	r2, r2, r0
 80093ac:	fbb2 f0f7 	udiv	r0, r2, r7
 80093b0:	fb07 2210 	mls	r2, r7, r0, r2
 80093b4:	fb00 f505 	mul.w	r5, r0, r5
 80093b8:	b2a4      	uxth	r4, r4
 80093ba:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80093be:	42a5      	cmp	r5, r4
 80093c0:	d90a      	bls.n	80093d8 <__udivmoddi4+0x94>
 80093c2:	eb1c 0404 	adds.w	r4, ip, r4
 80093c6:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80093ca:	f080 8104 	bcs.w	80095d6 <__udivmoddi4+0x292>
 80093ce:	42a5      	cmp	r5, r4
 80093d0:	f240 8101 	bls.w	80095d6 <__udivmoddi4+0x292>
 80093d4:	4464      	add	r4, ip
 80093d6:	3802      	subs	r0, #2
 80093d8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80093dc:	2100      	movs	r1, #0
 80093de:	1b64      	subs	r4, r4, r5
 80093e0:	b11e      	cbz	r6, 80093ea <__udivmoddi4+0xa6>
 80093e2:	40dc      	lsrs	r4, r3
 80093e4:	2300      	movs	r3, #0
 80093e6:	e9c6 4300 	strd	r4, r3, [r6]
 80093ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093ee:	428b      	cmp	r3, r1
 80093f0:	d908      	bls.n	8009404 <__udivmoddi4+0xc0>
 80093f2:	2e00      	cmp	r6, #0
 80093f4:	f000 80ea 	beq.w	80095cc <__udivmoddi4+0x288>
 80093f8:	2100      	movs	r1, #0
 80093fa:	e9c6 0500 	strd	r0, r5, [r6]
 80093fe:	4608      	mov	r0, r1
 8009400:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009404:	fab3 f183 	clz	r1, r3
 8009408:	2900      	cmp	r1, #0
 800940a:	d148      	bne.n	800949e <__udivmoddi4+0x15a>
 800940c:	42ab      	cmp	r3, r5
 800940e:	d302      	bcc.n	8009416 <__udivmoddi4+0xd2>
 8009410:	4282      	cmp	r2, r0
 8009412:	f200 80f8 	bhi.w	8009606 <__udivmoddi4+0x2c2>
 8009416:	1a84      	subs	r4, r0, r2
 8009418:	eb65 0203 	sbc.w	r2, r5, r3
 800941c:	2001      	movs	r0, #1
 800941e:	4696      	mov	lr, r2
 8009420:	2e00      	cmp	r6, #0
 8009422:	d0e2      	beq.n	80093ea <__udivmoddi4+0xa6>
 8009424:	e9c6 4e00 	strd	r4, lr, [r6]
 8009428:	e7df      	b.n	80093ea <__udivmoddi4+0xa6>
 800942a:	b902      	cbnz	r2, 800942e <__udivmoddi4+0xea>
 800942c:	deff      	udf	#255	; 0xff
 800942e:	fab2 f382 	clz	r3, r2
 8009432:	2b00      	cmp	r3, #0
 8009434:	f040 808e 	bne.w	8009554 <__udivmoddi4+0x210>
 8009438:	1a88      	subs	r0, r1, r2
 800943a:	2101      	movs	r1, #1
 800943c:	0c17      	lsrs	r7, r2, #16
 800943e:	fa1f fe82 	uxth.w	lr, r2
 8009442:	fbb0 f5f7 	udiv	r5, r0, r7
 8009446:	fb07 0015 	mls	r0, r7, r5, r0
 800944a:	0c22      	lsrs	r2, r4, #16
 800944c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009450:	fb0e f005 	mul.w	r0, lr, r5
 8009454:	4290      	cmp	r0, r2
 8009456:	d908      	bls.n	800946a <__udivmoddi4+0x126>
 8009458:	eb1c 0202 	adds.w	r2, ip, r2
 800945c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009460:	d202      	bcs.n	8009468 <__udivmoddi4+0x124>
 8009462:	4290      	cmp	r0, r2
 8009464:	f200 80cc 	bhi.w	8009600 <__udivmoddi4+0x2bc>
 8009468:	4645      	mov	r5, r8
 800946a:	1a12      	subs	r2, r2, r0
 800946c:	fbb2 f0f7 	udiv	r0, r2, r7
 8009470:	fb07 2210 	mls	r2, r7, r0, r2
 8009474:	fb0e fe00 	mul.w	lr, lr, r0
 8009478:	b2a4      	uxth	r4, r4
 800947a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800947e:	45a6      	cmp	lr, r4
 8009480:	d908      	bls.n	8009494 <__udivmoddi4+0x150>
 8009482:	eb1c 0404 	adds.w	r4, ip, r4
 8009486:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800948a:	d202      	bcs.n	8009492 <__udivmoddi4+0x14e>
 800948c:	45a6      	cmp	lr, r4
 800948e:	f200 80b4 	bhi.w	80095fa <__udivmoddi4+0x2b6>
 8009492:	4610      	mov	r0, r2
 8009494:	eba4 040e 	sub.w	r4, r4, lr
 8009498:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800949c:	e7a0      	b.n	80093e0 <__udivmoddi4+0x9c>
 800949e:	f1c1 0720 	rsb	r7, r1, #32
 80094a2:	408b      	lsls	r3, r1
 80094a4:	fa22 fc07 	lsr.w	ip, r2, r7
 80094a8:	ea4c 0c03 	orr.w	ip, ip, r3
 80094ac:	fa25 fa07 	lsr.w	sl, r5, r7
 80094b0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80094b4:	fbba f8f9 	udiv	r8, sl, r9
 80094b8:	408d      	lsls	r5, r1
 80094ba:	fa20 f307 	lsr.w	r3, r0, r7
 80094be:	fb09 aa18 	mls	sl, r9, r8, sl
 80094c2:	fa1f fe8c 	uxth.w	lr, ip
 80094c6:	432b      	orrs	r3, r5
 80094c8:	fa00 f501 	lsl.w	r5, r0, r1
 80094cc:	fb08 f00e 	mul.w	r0, r8, lr
 80094d0:	0c1c      	lsrs	r4, r3, #16
 80094d2:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80094d6:	42a0      	cmp	r0, r4
 80094d8:	fa02 f201 	lsl.w	r2, r2, r1
 80094dc:	d90b      	bls.n	80094f6 <__udivmoddi4+0x1b2>
 80094de:	eb1c 0404 	adds.w	r4, ip, r4
 80094e2:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80094e6:	f080 8086 	bcs.w	80095f6 <__udivmoddi4+0x2b2>
 80094ea:	42a0      	cmp	r0, r4
 80094ec:	f240 8083 	bls.w	80095f6 <__udivmoddi4+0x2b2>
 80094f0:	f1a8 0802 	sub.w	r8, r8, #2
 80094f4:	4464      	add	r4, ip
 80094f6:	1a24      	subs	r4, r4, r0
 80094f8:	b298      	uxth	r0, r3
 80094fa:	fbb4 f3f9 	udiv	r3, r4, r9
 80094fe:	fb09 4413 	mls	r4, r9, r3, r4
 8009502:	fb03 fe0e 	mul.w	lr, r3, lr
 8009506:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 800950a:	45a6      	cmp	lr, r4
 800950c:	d908      	bls.n	8009520 <__udivmoddi4+0x1dc>
 800950e:	eb1c 0404 	adds.w	r4, ip, r4
 8009512:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8009516:	d26a      	bcs.n	80095ee <__udivmoddi4+0x2aa>
 8009518:	45a6      	cmp	lr, r4
 800951a:	d968      	bls.n	80095ee <__udivmoddi4+0x2aa>
 800951c:	3b02      	subs	r3, #2
 800951e:	4464      	add	r4, ip
 8009520:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8009524:	fba0 9302 	umull	r9, r3, r0, r2
 8009528:	eba4 040e 	sub.w	r4, r4, lr
 800952c:	429c      	cmp	r4, r3
 800952e:	46c8      	mov	r8, r9
 8009530:	469e      	mov	lr, r3
 8009532:	d354      	bcc.n	80095de <__udivmoddi4+0x29a>
 8009534:	d051      	beq.n	80095da <__udivmoddi4+0x296>
 8009536:	2e00      	cmp	r6, #0
 8009538:	d067      	beq.n	800960a <__udivmoddi4+0x2c6>
 800953a:	ebb5 0308 	subs.w	r3, r5, r8
 800953e:	eb64 040e 	sbc.w	r4, r4, lr
 8009542:	40cb      	lsrs	r3, r1
 8009544:	fa04 f707 	lsl.w	r7, r4, r7
 8009548:	431f      	orrs	r7, r3
 800954a:	40cc      	lsrs	r4, r1
 800954c:	e9c6 7400 	strd	r7, r4, [r6]
 8009550:	2100      	movs	r1, #0
 8009552:	e74a      	b.n	80093ea <__udivmoddi4+0xa6>
 8009554:	fa02 fc03 	lsl.w	ip, r2, r3
 8009558:	f1c3 0020 	rsb	r0, r3, #32
 800955c:	40c1      	lsrs	r1, r0
 800955e:	409d      	lsls	r5, r3
 8009560:	fa24 f000 	lsr.w	r0, r4, r0
 8009564:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009568:	4328      	orrs	r0, r5
 800956a:	fbb1 f5f7 	udiv	r5, r1, r7
 800956e:	fb07 1115 	mls	r1, r7, r5, r1
 8009572:	fa1f fe8c 	uxth.w	lr, ip
 8009576:	0c02      	lsrs	r2, r0, #16
 8009578:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800957c:	fb05 f10e 	mul.w	r1, r5, lr
 8009580:	4291      	cmp	r1, r2
 8009582:	fa04 f403 	lsl.w	r4, r4, r3
 8009586:	d908      	bls.n	800959a <__udivmoddi4+0x256>
 8009588:	eb1c 0202 	adds.w	r2, ip, r2
 800958c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009590:	d22f      	bcs.n	80095f2 <__udivmoddi4+0x2ae>
 8009592:	4291      	cmp	r1, r2
 8009594:	d92d      	bls.n	80095f2 <__udivmoddi4+0x2ae>
 8009596:	3d02      	subs	r5, #2
 8009598:	4462      	add	r2, ip
 800959a:	1a52      	subs	r2, r2, r1
 800959c:	fbb2 f1f7 	udiv	r1, r2, r7
 80095a0:	fb07 2211 	mls	r2, r7, r1, r2
 80095a4:	b280      	uxth	r0, r0
 80095a6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80095aa:	fb01 f20e 	mul.w	r2, r1, lr
 80095ae:	4282      	cmp	r2, r0
 80095b0:	d908      	bls.n	80095c4 <__udivmoddi4+0x280>
 80095b2:	eb1c 0000 	adds.w	r0, ip, r0
 80095b6:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80095ba:	d216      	bcs.n	80095ea <__udivmoddi4+0x2a6>
 80095bc:	4282      	cmp	r2, r0
 80095be:	d914      	bls.n	80095ea <__udivmoddi4+0x2a6>
 80095c0:	3902      	subs	r1, #2
 80095c2:	4460      	add	r0, ip
 80095c4:	1a80      	subs	r0, r0, r2
 80095c6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80095ca:	e73a      	b.n	8009442 <__udivmoddi4+0xfe>
 80095cc:	4631      	mov	r1, r6
 80095ce:	4630      	mov	r0, r6
 80095d0:	e70b      	b.n	80093ea <__udivmoddi4+0xa6>
 80095d2:	4671      	mov	r1, lr
 80095d4:	e6e9      	b.n	80093aa <__udivmoddi4+0x66>
 80095d6:	4610      	mov	r0, r2
 80095d8:	e6fe      	b.n	80093d8 <__udivmoddi4+0x94>
 80095da:	454d      	cmp	r5, r9
 80095dc:	d2ab      	bcs.n	8009536 <__udivmoddi4+0x1f2>
 80095de:	ebb9 0802 	subs.w	r8, r9, r2
 80095e2:	eb63 0e0c 	sbc.w	lr, r3, ip
 80095e6:	3801      	subs	r0, #1
 80095e8:	e7a5      	b.n	8009536 <__udivmoddi4+0x1f2>
 80095ea:	4641      	mov	r1, r8
 80095ec:	e7ea      	b.n	80095c4 <__udivmoddi4+0x280>
 80095ee:	4603      	mov	r3, r0
 80095f0:	e796      	b.n	8009520 <__udivmoddi4+0x1dc>
 80095f2:	4645      	mov	r5, r8
 80095f4:	e7d1      	b.n	800959a <__udivmoddi4+0x256>
 80095f6:	46d0      	mov	r8, sl
 80095f8:	e77d      	b.n	80094f6 <__udivmoddi4+0x1b2>
 80095fa:	4464      	add	r4, ip
 80095fc:	3802      	subs	r0, #2
 80095fe:	e749      	b.n	8009494 <__udivmoddi4+0x150>
 8009600:	3d02      	subs	r5, #2
 8009602:	4462      	add	r2, ip
 8009604:	e731      	b.n	800946a <__udivmoddi4+0x126>
 8009606:	4608      	mov	r0, r1
 8009608:	e70a      	b.n	8009420 <__udivmoddi4+0xdc>
 800960a:	4631      	mov	r1, r6
 800960c:	e6ed      	b.n	80093ea <__udivmoddi4+0xa6>
 800960e:	bf00      	nop

08009610 <RemoteConfig::HandleList()>:
 8009610:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009614:	6801      	ldr	r1, [r0, #0]
 8009616:	4604      	mov	r4, r0
 8009618:	2012      	movs	r0, #18
 800961a:	f04f 080c 	mov.w	r8, #12
 800961e:	4a29      	ldr	r2, [pc, #164]	; (80096c4 <RemoteConfig::HandleList()+0xb4>)
 8009620:	4b29      	ldr	r3, [pc, #164]	; (80096c8 <RemoteConfig::HandleList()+0xb8>)
 8009622:	fb00 2201 	mla	r2, r0, r1, r2
 8009626:	6860      	ldr	r0, [r4, #4]
 8009628:	4928      	ldr	r1, [pc, #160]	; (80096cc <RemoteConfig::HandleList()+0xbc>)
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	fb08 1100 	mla	r1, r8, r0, r1
 8009630:	4e27      	ldr	r6, [pc, #156]	; (80096d0 <RemoteConfig::HandleList()+0xc0>)
 8009632:	4828      	ldr	r0, [pc, #160]	; (80096d4 <RemoteConfig::HandleList()+0xc4>)
 8009634:	695f      	ldr	r7, [r3, #20]
 8009636:	6835      	ldr	r5, [r6, #0]
 8009638:	f890 9009 	ldrb.w	r9, [r0, #9]
 800963c:	b2fb      	uxtb	r3, r7
 800963e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8009642:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8009646:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800964a:	b089      	sub	sp, #36	; 0x24
 800964c:	3507      	adds	r5, #7
 800964e:	0e3f      	lsrs	r7, r7, #24
 8009650:	f1b9 0f00 	cmp.w	r9, #0
 8009654:	d01d      	beq.n	8009692 <RemoteConfig::HandleList()+0x82>
 8009656:	3009      	adds	r0, #9
 8009658:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800965c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8009660:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009664:	4628      	mov	r0, r5
 8009666:	e9cd e701 	strd	lr, r7, [sp, #4]
 800966a:	4a1b      	ldr	r2, [pc, #108]	; (80096d8 <RemoteConfig::HandleList()+0xc8>)
 800966c:	f8cd c000 	str.w	ip, [sp]
 8009670:	f7ff fe40 	bl	80092f4 <snprintf>
 8009674:	69e3      	ldr	r3, [r4, #28]
 8009676:	2b05      	cmp	r3, #5
 8009678:	d118      	bne.n	80096ac <RemoteConfig::HandleList()+0x9c>
 800967a:	f642 1305 	movw	r3, #10501	; 0x2905
 800967e:	9300      	str	r3, [sp, #0]
 8009680:	69a3      	ldr	r3, [r4, #24]
 8009682:	b282      	uxth	r2, r0
 8009684:	4629      	mov	r1, r5
 8009686:	7d20      	ldrb	r0, [r4, #20]
 8009688:	f005 f90e 	bl	800e8a8 <udp_send>
 800968c:	b009      	add	sp, #36	; 0x24
 800968e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009692:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8009696:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800969a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800969e:	4628      	mov	r0, r5
 80096a0:	e9cd ce00 	strd	ip, lr, [sp]
 80096a4:	4a0d      	ldr	r2, [pc, #52]	; (80096dc <RemoteConfig::HandleList()+0xcc>)
 80096a6:	f7ff fe25 	bl	80092f4 <snprintf>
 80096aa:	e7e3      	b.n	8009674 <RemoteConfig::HandleList()+0x64>
 80096ac:	2b06      	cmp	r3, #6
 80096ae:	d1ed      	bne.n	800968c <RemoteConfig::HandleList()+0x7c>
 80096b0:	6833      	ldr	r3, [r6, #0]
 80096b2:	799b      	ldrb	r3, [r3, #6]
 80096b4:	2b2a      	cmp	r3, #42	; 0x2a
 80096b6:	d1e9      	bne.n	800968c <RemoteConfig::HandleList()+0x7c>
 80096b8:	f642 1305 	movw	r3, #10501	; 0x2905
 80096bc:	9300      	str	r3, [sp, #0]
 80096be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80096c2:	e7de      	b.n	8009682 <RemoteConfig::HandleList()+0x72>
 80096c4:	08013598 	stmdaeq	r1, {r3, r4, r7, r8, sl, ip, sp}
 80096c8:	20009614 	andcs	r9, r0, r4, lsl r6
 80096cc:	0801365e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, ip, sp}
 80096d0:	200000ec 	andcs	r0, r0, ip, ror #1
 80096d4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80096d8:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 80096dc:	080134c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, ip, sp}

080096e0 <RemoteConfig::HandleDisplayGet()>:
 80096e0:	69c3      	ldr	r3, [r0, #28]
 80096e2:	2b08      	cmp	r3, #8
 80096e4:	d11b      	bne.n	800971e <RemoteConfig::HandleDisplayGet()+0x3e>
 80096e6:	4b0e      	ldr	r3, [pc, #56]	; (8009720 <RemoteConfig::HandleDisplayGet()+0x40>)
 80096e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096ea:	681b      	ldr	r3, [r3, #0]
 80096ec:	4d0d      	ldr	r5, [pc, #52]	; (8009724 <RemoteConfig::HandleDisplayGet()+0x44>)
 80096ee:	7c19      	ldrb	r1, [r3, #16]
 80096f0:	4a0d      	ldr	r2, [pc, #52]	; (8009728 <RemoteConfig::HandleDisplayGet()+0x48>)
 80096f2:	4b0e      	ldr	r3, [pc, #56]	; (800972c <RemoteConfig::HandleDisplayGet()+0x4c>)
 80096f4:	4604      	mov	r4, r0
 80096f6:	2900      	cmp	r1, #0
 80096f8:	bf18      	it	ne
 80096fa:	4613      	movne	r3, r2
 80096fc:	6828      	ldr	r0, [r5, #0]
 80096fe:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009702:	4a0b      	ldr	r2, [pc, #44]	; (8009730 <RemoteConfig::HandleDisplayGet()+0x50>)
 8009704:	f7ff fdf6 	bl	80092f4 <snprintf>
 8009708:	f642 1305 	movw	r3, #10501	; 0x2905
 800970c:	9300      	str	r3, [sp, #0]
 800970e:	b282      	uxth	r2, r0
 8009710:	69a3      	ldr	r3, [r4, #24]
 8009712:	6829      	ldr	r1, [r5, #0]
 8009714:	7d20      	ldrb	r0, [r4, #20]
 8009716:	f005 f8c7 	bl	800e8a8 <udp_send>
 800971a:	b003      	add	sp, #12
 800971c:	bd30      	pop	{r4, r5, pc}
 800971e:	4770      	bx	lr
 8009720:	20009be4 	andcs	r9, r0, r4, ror #23
 8009724:	200000ec 	andcs	r0, r0, ip, ror #1
 8009728:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}
 800972c:	080134dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp}
 8009730:	080134e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, ip, sp}

08009734 <RemoteConfig::HandleTftpGet()>:
 8009734:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009736:	4604      	mov	r4, r0
 8009738:	f000 fd84 	bl	800a244 <RemoteConfig::PlatformHandleTftpGet()>
 800973c:	69e3      	ldr	r3, [r4, #28]
 800973e:	2b05      	cmp	r3, #5
 8009740:	d116      	bne.n	8009770 <RemoteConfig::HandleTftpGet()+0x3c>
 8009742:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009746:	4d0b      	ldr	r5, [pc, #44]	; (8009774 <RemoteConfig::HandleTftpGet()+0x40>)
 8009748:	4a0b      	ldr	r2, [pc, #44]	; (8009778 <RemoteConfig::HandleTftpGet()+0x44>)
 800974a:	4b0c      	ldr	r3, [pc, #48]	; (800977c <RemoteConfig::HandleTftpGet()+0x48>)
 800974c:	6828      	ldr	r0, [r5, #0]
 800974e:	2900      	cmp	r1, #0
 8009750:	bf08      	it	eq
 8009752:	4613      	moveq	r3, r2
 8009754:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009758:	4a09      	ldr	r2, [pc, #36]	; (8009780 <RemoteConfig::HandleTftpGet()+0x4c>)
 800975a:	f7ff fdcb 	bl	80092f4 <snprintf>
 800975e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009762:	b282      	uxth	r2, r0
 8009764:	9300      	str	r3, [sp, #0]
 8009766:	6829      	ldr	r1, [r5, #0]
 8009768:	69a3      	ldr	r3, [r4, #24]
 800976a:	7d20      	ldrb	r0, [r4, #20]
 800976c:	f005 f89c 	bl	800e8a8 <udp_send>
 8009770:	b003      	add	sp, #12
 8009772:	bd30      	pop	{r4, r5, pc}
 8009774:	200000ec 	andcs	r0, r0, ip, ror #1
 8009778:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}
 800977c:	080134dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp}
 8009780:	080134ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sl, ip, sp}

08009784 <RemoteConfig::HandleVersion()>:
 8009784:	69c3      	ldr	r3, [r0, #28]
 8009786:	2b08      	cmp	r3, #8
 8009788:	d114      	bne.n	80097b4 <RemoteConfig::HandleVersion()+0x30>
 800978a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800978c:	4d0a      	ldr	r5, [pc, #40]	; (80097b8 <RemoteConfig::HandleVersion()+0x34>)
 800978e:	4604      	mov	r4, r0
 8009790:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009794:	4b09      	ldr	r3, [pc, #36]	; (80097bc <RemoteConfig::HandleVersion()+0x38>)
 8009796:	4a0a      	ldr	r2, [pc, #40]	; (80097c0 <RemoteConfig::HandleVersion()+0x3c>)
 8009798:	6828      	ldr	r0, [r5, #0]
 800979a:	f7ff fdab 	bl	80092f4 <snprintf>
 800979e:	f642 1305 	movw	r3, #10501	; 0x2905
 80097a2:	9300      	str	r3, [sp, #0]
 80097a4:	b282      	uxth	r2, r0
 80097a6:	69a3      	ldr	r3, [r4, #24]
 80097a8:	6829      	ldr	r1, [r5, #0]
 80097aa:	7d20      	ldrb	r0, [r4, #20]
 80097ac:	f005 f87c 	bl	800e8a8 <udp_send>
 80097b0:	b003      	add	sp, #12
 80097b2:	bd30      	pop	{r4, r5, pc}
 80097b4:	4770      	bx	lr
 80097b6:	bf00      	nop
 80097b8:	200000ec 	andcs	r0, r0, ip, ror #1
 80097bc:	20009c8a 	andcs	r9, r0, sl, lsl #25
 80097c0:	080134f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, ip, sp}

080097c4 <RemoteConfig::HandleUptime()>:
 80097c4:	7bc3      	ldrb	r3, [r0, #15]
 80097c6:	b1e3      	cbz	r3, 8009802 <RemoteConfig::HandleUptime()+0x3e>
 80097c8:	4b0e      	ldr	r3, [pc, #56]	; (8009804 <RemoteConfig::HandleUptime()+0x40>)
 80097ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80097cc:	681a      	ldr	r2, [r3, #0]
 80097ce:	69c3      	ldr	r3, [r0, #28]
 80097d0:	4604      	mov	r4, r0
 80097d2:	2b07      	cmp	r3, #7
 80097d4:	d113      	bne.n	80097fe <RemoteConfig::HandleUptime()+0x3a>
 80097d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80097da:	4d0b      	ldr	r5, [pc, #44]	; (8009808 <RemoteConfig::HandleUptime()+0x44>)
 80097dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80097e0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80097e4:	4a09      	ldr	r2, [pc, #36]	; (800980c <RemoteConfig::HandleUptime()+0x48>)
 80097e6:	6828      	ldr	r0, [r5, #0]
 80097e8:	f7ff fd84 	bl	80092f4 <snprintf>
 80097ec:	f642 1305 	movw	r3, #10501	; 0x2905
 80097f0:	9300      	str	r3, [sp, #0]
 80097f2:	b282      	uxth	r2, r0
 80097f4:	69a3      	ldr	r3, [r4, #24]
 80097f6:	6829      	ldr	r1, [r5, #0]
 80097f8:	7d20      	ldrb	r0, [r4, #20]
 80097fa:	f005 f855 	bl	800e8a8 <udp_send>
 80097fe:	b003      	add	sp, #12
 8009800:	bd30      	pop	{r4, r5, pc}
 8009802:	4770      	bx	lr
 8009804:	20009cec 	andcs	r9, r0, ip, ror #25
 8009808:	200000ec 	andcs	r0, r0, ip, ror #1
 800980c:	08013503 	stmdaeq	r1, {r0, r1, r8, sl, ip, sp}

08009810 <Display::TextStatus(char const*)>:
 8009810:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009814:	4604      	mov	r4, r0
 8009816:	6980      	ldr	r0, [r0, #24]
 8009818:	2800      	cmp	r0, #0
 800981a:	d032      	beq.n	8009882 <Display::TextStatus(char const*)+0x72>
 800981c:	7947      	ldrb	r7, [r0, #5]
 800981e:	6803      	ldr	r3, [r0, #0]
 8009820:	1e7e      	subs	r6, r7, #1
 8009822:	b2f6      	uxtb	r6, r6
 8009824:	460d      	mov	r5, r1
 8009826:	4632      	mov	r2, r6
 8009828:	2100      	movs	r1, #0
 800982a:	6a1b      	ldr	r3, [r3, #32]
 800982c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8009830:	f04f 0800 	mov.w	r8, #0
 8009834:	4798      	blx	r3
 8009836:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800983a:	45c1      	cmp	r9, r8
 800983c:	69a0      	ldr	r0, [r4, #24]
 800983e:	d818      	bhi.n	8009872 <Display::TextStatus(char const*)+0x62>
 8009840:	b120      	cbz	r0, 800984c <Display::TextStatus(char const*)+0x3c>
 8009842:	6803      	ldr	r3, [r0, #0]
 8009844:	4632      	mov	r2, r6
 8009846:	2100      	movs	r1, #0
 8009848:	6a1b      	ldr	r3, [r3, #32]
 800984a:	4798      	blx	r3
 800984c:	69a0      	ldr	r0, [r4, #24]
 800984e:	b1c0      	cbz	r0, 8009882 <Display::TextStatus(char const*)+0x72>
 8009850:	2300      	movs	r3, #0
 8009852:	7901      	ldrb	r1, [r0, #4]
 8009854:	5cea      	ldrb	r2, [r5, r3]
 8009856:	b11a      	cbz	r2, 8009860 <Display::TextStatus(char const*)+0x50>
 8009858:	1c5a      	adds	r2, r3, #1
 800985a:	4299      	cmp	r1, r3
 800985c:	4613      	mov	r3, r2
 800985e:	dcf9      	bgt.n	8009854 <Display::TextStatus(char const*)+0x44>
 8009860:	6802      	ldr	r2, [r0, #0]
 8009862:	4639      	mov	r1, r7
 8009864:	69d4      	ldr	r4, [r2, #28]
 8009866:	b2db      	uxtb	r3, r3
 8009868:	462a      	mov	r2, r5
 800986a:	46a4      	mov	ip, r4
 800986c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009870:	4760      	bx	ip
 8009872:	b118      	cbz	r0, 800987c <Display::TextStatus(char const*)+0x6c>
 8009874:	6803      	ldr	r3, [r0, #0]
 8009876:	2120      	movs	r1, #32
 8009878:	695b      	ldr	r3, [r3, #20]
 800987a:	4798      	blx	r3
 800987c:	f108 0801 	add.w	r8, r8, #1
 8009880:	e7db      	b.n	800983a <Display::TextStatus(char const*)+0x2a>
 8009882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009886 <Display::Status(Display7SegmentMessage)>:
 8009886:	7c43      	ldrb	r3, [r0, #17]
 8009888:	b1bb      	cbz	r3, 80098ba <Display::Status(Display7SegmentMessage)+0x34>
 800988a:	b513      	push	{r0, r1, r4, lr}
 800988c:	2312      	movs	r3, #18
 800988e:	43c9      	mvns	r1, r1
 8009890:	4604      	mov	r4, r0
 8009892:	f88d 3004 	strb.w	r3, [sp, #4]
 8009896:	7a00      	ldrb	r0, [r0, #8]
 8009898:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800989c:	f88d 3005 	strb.w	r3, [sp, #5]
 80098a0:	f88d 1006 	strb.w	r1, [sp, #6]
 80098a4:	f008 fad0 	bl	8011e48 <gd32_i2c_set_address>
 80098a8:	68e0      	ldr	r0, [r4, #12]
 80098aa:	f008 fac5 	bl	8011e38 <gd32_i2c_set_baudrate>
 80098ae:	2103      	movs	r1, #3
 80098b0:	a801      	add	r0, sp, #4
 80098b2:	f008 facf 	bl	8011e54 <gd32_i2c_write>
 80098b6:	b002      	add	sp, #8
 80098b8:	bd10      	pop	{r4, pc}
 80098ba:	4770      	bx	lr

080098bc <RemoteConfig::HandleDisplaySet()>:
 80098bc:	b508      	push	{r3, lr}
 80098be:	69c3      	ldr	r3, [r0, #28]
 80098c0:	2b09      	cmp	r3, #9
 80098c2:	d10a      	bne.n	80098da <RemoteConfig::HandleDisplaySet()+0x1e>
 80098c4:	4b05      	ldr	r3, [pc, #20]	; (80098dc <RemoteConfig::HandleDisplaySet()+0x20>)
 80098c6:	681b      	ldr	r3, [r3, #0]
 80098c8:	7a59      	ldrb	r1, [r3, #9]
 80098ca:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80098ce:	4259      	negs	r1, r3
 80098d0:	4159      	adcs	r1, r3
 80098d2:	4b03      	ldr	r3, [pc, #12]	; (80098e0 <RemoteConfig::HandleDisplaySet()+0x24>)
 80098d4:	6818      	ldr	r0, [r3, #0]
 80098d6:	f7fe ff7d 	bl	80087d4 <Display::SetSleep(bool)>
 80098da:	bd08      	pop	{r3, pc}
 80098dc:	200000ec 	andcs	r0, r0, ip, ror #1
 80098e0:	20009be4 	andcs	r9, r0, r4, ror #23

080098e4 <RemoteConfig::HandleTftpSet()>:
 80098e4:	69c3      	ldr	r3, [r0, #28]
 80098e6:	2b06      	cmp	r3, #6
 80098e8:	d127      	bne.n	800993a <RemoteConfig::HandleTftpSet()+0x56>
 80098ea:	b570      	push	{r4, r5, r6, lr}
 80098ec:	4b13      	ldr	r3, [pc, #76]	; (800993c <RemoteConfig::HandleTftpSet()+0x58>)
 80098ee:	4e14      	ldr	r6, [pc, #80]	; (8009940 <RemoteConfig::HandleTftpSet()+0x5c>)
 80098f0:	681b      	ldr	r3, [r3, #0]
 80098f2:	4604      	mov	r4, r0
 80098f4:	799b      	ldrb	r3, [r3, #6]
 80098f6:	6835      	ldr	r5, [r6, #0]
 80098f8:	2b30      	cmp	r3, #48	; 0x30
 80098fa:	bf14      	ite	ne
 80098fc:	2301      	movne	r3, #1
 80098fe:	2300      	moveq	r3, #0
 8009900:	f880 3020 	strb.w	r3, [r0, #32]
 8009904:	d012      	beq.n	800992c <RemoteConfig::HandleTftpSet()+0x48>
 8009906:	4628      	mov	r0, r5
 8009908:	2100      	movs	r1, #0
 800990a:	f7fe ff63 	bl	80087d4 <Display::SetSleep(bool)>
 800990e:	6835      	ldr	r5, [r6, #0]
 8009910:	490c      	ldr	r1, [pc, #48]	; (8009944 <RemoteConfig::HandleTftpSet()+0x60>)
 8009912:	4628      	mov	r0, r5
 8009914:	f7ff ff7c 	bl	8009810 <Display::TextStatus(char const*)>
 8009918:	f244 0171 	movw	r1, #16497	; 0x4071
 800991c:	4628      	mov	r0, r5
 800991e:	f7ff ffb2 	bl	8009886 <Display::Status(Display7SegmentMessage)>
 8009922:	4620      	mov	r0, r4
 8009924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009928:	f000 bc84 	b.w	800a234 <RemoteConfig::PlatformHandleTftpSet()>
 800992c:	4906      	ldr	r1, [pc, #24]	; (8009948 <RemoteConfig::HandleTftpSet()+0x64>)
 800992e:	4628      	mov	r0, r5
 8009930:	f7ff ff6e 	bl	8009810 <Display::TextStatus(char const*)>
 8009934:	f248 0171 	movw	r1, #32881	; 0x8071
 8009938:	e7f0      	b.n	800991c <RemoteConfig::HandleTftpSet()+0x38>
 800993a:	4770      	bx	lr
 800993c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009940:	20009be4 	andcs	r9, r0, r4, ror #23
 8009944:	08013510 	stmdaeq	r1, {r4, r8, sl, ip, sp}
 8009948:	08013522 	stmdaeq	r1, {r1, r5, r8, sl, ip, sp}

0800994c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800994c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009950:	2500      	movs	r5, #0
 8009952:	461f      	mov	r7, r3
 8009954:	6083      	str	r3, [r0, #8]
 8009956:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800995a:	4690      	mov	r8, r2
 800995c:	4689      	mov	r9, r1
 800995e:	4e12      	ldr	r6, [pc, #72]	; (80099a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009960:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009964:	f8df a044 	ldr.w	sl, [pc, #68]	; 80099ac <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009968:	4b11      	ldr	r3, [pc, #68]	; (80099b0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 800996a:	e9c0 1200 	strd	r1, r2, [r0]
 800996e:	4604      	mov	r4, r0
 8009970:	6018      	str	r0, [r3, #0]
 8009972:	4631      	mov	r1, r6
 8009974:	60c5      	str	r5, [r0, #12]
 8009976:	8205      	strh	r5, [r0, #16]
 8009978:	61c5      	str	r5, [r0, #28]
 800997a:	f880 5020 	strb.w	r5, [r0, #32]
 800997e:	f8da 0000 	ldr.w	r0, [sl]
 8009982:	f005 fc5f 	bl	800f244 <Network::MacAddressCopyTo(unsigned char*)>
 8009986:	f642 1105 	movw	r1, #10501	; 0x2905
 800998a:	f8da 0000 	ldr.w	r0, [sl]
 800998e:	f886 9006 	strb.w	r9, [r6, #6]
 8009992:	f886 8007 	strb.w	r8, [r6, #7]
 8009996:	7237      	strb	r7, [r6, #8]
 8009998:	7275      	strb	r5, [r6, #9]
 800999a:	f005 fc4d 	bl	800f238 <Network::Begin(unsigned short)>
 800999e:	6160      	str	r0, [r4, #20]
 80099a0:	4620      	mov	r0, r4
 80099a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80099a6:	bf00      	nop
 80099a8:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80099ac:	20009614 	andcs	r9, r0, r4, lsl r6
 80099b0:	20000114 	andcs	r0, r0, r4, lsl r1

080099b4 <RemoteConfig::GetStringNode() const>:
 80099b4:	2012      	movs	r0, #18
 80099b6:	4b03      	ldr	r3, [pc, #12]	; (80099c4 <RemoteConfig::GetStringNode() const+0x10>)
 80099b8:	799a      	ldrb	r2, [r3, #6]
 80099ba:	4b03      	ldr	r3, [pc, #12]	; (80099c8 <RemoteConfig::GetStringNode() const+0x14>)
 80099bc:	fb00 3002 	mla	r0, r0, r2, r3
 80099c0:	4770      	bx	lr
 80099c2:	bf00      	nop
 80099c4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80099c8:	08013598 	stmdaeq	r1, {r3, r4, r7, r8, sl, ip, sp}

080099cc <RemoteConfig::GetStringOutput() const>:
 80099cc:	200c      	movs	r0, #12
 80099ce:	4b03      	ldr	r3, [pc, #12]	; (80099dc <RemoteConfig::GetStringOutput() const+0x10>)
 80099d0:	79da      	ldrb	r2, [r3, #7]
 80099d2:	4b03      	ldr	r3, [pc, #12]	; (80099e0 <RemoteConfig::GetStringOutput() const+0x14>)
 80099d4:	fb00 3002 	mla	r0, r0, r2, r3
 80099d8:	4770      	bx	lr
 80099da:	bf00      	nop
 80099dc:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80099e0:	0801365e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, ip, sp}

080099e4 <RemoteConfig::SetDisable(bool)>:
 80099e4:	b538      	push	{r3, r4, r5, lr}
 80099e6:	4604      	mov	r4, r0
 80099e8:	7b03      	ldrb	r3, [r0, #12]
 80099ea:	b161      	cbz	r1, 8009a06 <RemoteConfig::SetDisable(bool)+0x22>
 80099ec:	b953      	cbnz	r3, 8009a04 <RemoteConfig::SetDisable(bool)+0x20>
 80099ee:	4b0c      	ldr	r3, [pc, #48]	; (8009a20 <RemoteConfig::SetDisable(bool)+0x3c>)
 80099f0:	f642 1105 	movw	r1, #10501	; 0x2905
 80099f4:	6818      	ldr	r0, [r3, #0]
 80099f6:	f005 fc22 	bl	800f23e <Network::End(unsigned short)>
 80099fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80099fe:	6163      	str	r3, [r4, #20]
 8009a00:	2301      	movs	r3, #1
 8009a02:	7323      	strb	r3, [r4, #12]
 8009a04:	bd38      	pop	{r3, r4, r5, pc}
 8009a06:	2b00      	cmp	r3, #0
 8009a08:	d0fc      	beq.n	8009a04 <RemoteConfig::SetDisable(bool)+0x20>
 8009a0a:	4b05      	ldr	r3, [pc, #20]	; (8009a20 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009a0c:	460d      	mov	r5, r1
 8009a0e:	6818      	ldr	r0, [r3, #0]
 8009a10:	f642 1105 	movw	r1, #10501	; 0x2905
 8009a14:	f005 fc10 	bl	800f238 <Network::Begin(unsigned short)>
 8009a18:	7325      	strb	r5, [r4, #12]
 8009a1a:	6160      	str	r0, [r4, #20]
 8009a1c:	e7f2      	b.n	8009a04 <RemoteConfig::SetDisable(bool)+0x20>
 8009a1e:	bf00      	nop
 8009a20:	20009614 	andcs	r9, r0, r4, lsl r6

08009a24 <RemoteConfig::SetDisplayName(char const*)>:
 8009a24:	2217      	movs	r2, #23
 8009a26:	4809      	ldr	r0, [pc, #36]	; (8009a4c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009a28:	b508      	push	{r3, lr}
 8009a2a:	1e4b      	subs	r3, r1, #1
 8009a2c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009a30:	b911      	cbnz	r1, 8009a38 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009a32:	f007 fb5b 	bl	80110ec <memset>
 8009a36:	e003      	b.n	8009a40 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009a38:	3a01      	subs	r2, #1
 8009a3a:	f800 1b01 	strb.w	r1, [r0], #1
 8009a3e:	d1f5      	bne.n	8009a2c <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009a40:	2200      	movs	r2, #0
 8009a42:	4b03      	ldr	r3, [pc, #12]	; (8009a50 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009a44:	f883 2020 	strb.w	r2, [r3, #32]
 8009a48:	bd08      	pop	{r3, pc}
 8009a4a:	bf00      	nop
 8009a4c:	200000f9 	strdcs	r0, [r0], -r9
 8009a50:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009a54 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009a54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a56:	4604      	mov	r4, r0
 8009a58:	4616      	mov	r6, r2
 8009a5a:	460d      	mov	r5, r1
 8009a5c:	4f28      	ldr	r7, [pc, #160]	; (8009b00 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009a5e:	b085      	sub	sp, #20
 8009a60:	b9a9      	cbnz	r1, 8009a8e <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009a62:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009a66:	6839      	ldr	r1, [r7, #0]
 8009a68:	aa03      	add	r2, sp, #12
 8009a6a:	3105      	adds	r1, #5
 8009a6c:	9303      	str	r3, [sp, #12]
 8009a6e:	f000 fbb7 	bl	800a1e0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009a72:	1e03      	subs	r3, r0, #0
 8009a74:	da1b      	bge.n	8009aae <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009a76:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a7a:	220b      	movs	r2, #11
 8009a7c:	9300      	str	r3, [sp, #0]
 8009a7e:	4921      	ldr	r1, [pc, #132]	; (8009b04 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009a80:	69a3      	ldr	r3, [r4, #24]
 8009a82:	7d20      	ldrb	r0, [r4, #20]
 8009a84:	f004 ff10 	bl	800e8a8 <udp_send>
 8009a88:	200c      	movs	r0, #12
 8009a8a:	b005      	add	sp, #20
 8009a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a8e:	9203      	str	r2, [sp, #12]
 8009a90:	aa03      	add	r2, sp, #12
 8009a92:	6039      	str	r1, [r7, #0]
 8009a94:	f000 fba4 	bl	800a1e0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009a98:	1e03      	subs	r3, r0, #0
 8009a9a:	da08      	bge.n	8009aae <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009a9c:	2e0b      	cmp	r6, #11
 8009a9e:	4632      	mov	r2, r6
 8009aa0:	4628      	mov	r0, r5
 8009aa2:	bf28      	it	cs
 8009aa4:	220b      	movcs	r2, #11
 8009aa6:	4917      	ldr	r1, [pc, #92]	; (8009b04 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009aa8:	f007 fafe 	bl	80110a8 <memcpy>
 8009aac:	e7ec      	b.n	8009a88 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009aae:	221c      	movs	r2, #28
 8009ab0:	4353      	muls	r3, r2
 8009ab2:	4915      	ldr	r1, [pc, #84]	; (8009b08 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009ab4:	18ca      	adds	r2, r1, r3
 8009ab6:	6852      	ldr	r2, [r2, #4]
 8009ab8:	58cb      	ldr	r3, [r1, r3]
 8009aba:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009abe:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009ac2:	07d2      	lsls	r2, r2, #31
 8009ac4:	bf48      	it	mi
 8009ac6:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009aca:	a903      	add	r1, sp, #12
 8009acc:	bf48      	it	mi
 8009ace:	58d3      	ldrmi	r3, [r2, r3]
 8009ad0:	4798      	blx	r3
 8009ad2:	b95d      	cbnz	r5, 8009aec <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009ad4:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ad8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009adc:	9300      	str	r3, [sp, #0]
 8009ade:	6839      	ldr	r1, [r7, #0]
 8009ae0:	69a3      	ldr	r3, [r4, #24]
 8009ae2:	7d20      	ldrb	r0, [r4, #20]
 8009ae4:	f004 fee0 	bl	800e8a8 <udp_send>
 8009ae8:	9803      	ldr	r0, [sp, #12]
 8009aea:	e7ce      	b.n	8009a8a <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009aec:	9a03      	ldr	r2, [sp, #12]
 8009aee:	4628      	mov	r0, r5
 8009af0:	42b2      	cmp	r2, r6
 8009af2:	bf28      	it	cs
 8009af4:	4632      	movcs	r2, r6
 8009af6:	6839      	ldr	r1, [r7, #0]
 8009af8:	f007 fae1 	bl	80110be <memmove>
 8009afc:	e7f4      	b.n	8009ae8 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009afe:	bf00      	nop
 8009b00:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b04:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8009b08:	08013810 	stmdaeq	r1, {r4, fp, ip, sp}

08009b0c <RemoteConfig::HandleGetNoParams()>:
 8009b0c:	2200      	movs	r2, #0
 8009b0e:	4611      	mov	r1, r2
 8009b10:	f7ff bfa0 	b.w	8009a54 <RemoteConfig::HandleGet(void*, unsigned int)>

08009b14 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009b14:	b510      	push	{r4, lr}
 8009b16:	460c      	mov	r4, r1
 8009b18:	4b07      	ldr	r3, [pc, #28]	; (8009b38 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009b1a:	b08a      	sub	sp, #40	; 0x28
 8009b1c:	6819      	ldr	r1, [r3, #0]
 8009b1e:	a801      	add	r0, sp, #4
 8009b20:	f000 f9ba 	bl	8009e98 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009b24:	4905      	ldr	r1, [pc, #20]	; (8009b3c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009b26:	4623      	mov	r3, r4
 8009b28:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b2c:	6809      	ldr	r1, [r1, #0]
 8009b2e:	a801      	add	r0, sp, #4
 8009b30:	f000 fad6 	bl	800a0e0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009b34:	b00a      	add	sp, #40	; 0x28
 8009b36:	bd10      	pop	{r4, pc}
 8009b38:	20001d24 	andcs	r1, r0, r4, lsr #26
 8009b3c:	200000ec 	andcs	r0, r0, ip, ror #1

08009b40 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009b40:	b510      	push	{r4, lr}
 8009b42:	460c      	mov	r4, r1
 8009b44:	4b07      	ldr	r3, [pc, #28]	; (8009b64 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009b46:	b09a      	sub	sp, #104	; 0x68
 8009b48:	6819      	ldr	r1, [r3, #0]
 8009b4a:	a801      	add	r0, sp, #4
 8009b4c:	f005 fd68 	bl	800f620 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009b50:	4905      	ldr	r1, [pc, #20]	; (8009b68 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009b52:	4623      	mov	r3, r4
 8009b54:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b58:	6809      	ldr	r1, [r1, #0]
 8009b5a:	a801      	add	r0, sp, #4
 8009b5c:	f005 ff36 	bl	800f9cc <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009b60:	b01a      	add	sp, #104	; 0x68
 8009b62:	bd10      	pop	{r4, pc}
 8009b64:	20001d1c 	andcs	r1, r0, ip, lsl sp
 8009b68:	200000ec 	andcs	r0, r0, ip, ror #1

08009b6c <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 8009b6c:	b510      	push	{r4, lr}
 8009b6e:	460c      	mov	r4, r1
 8009b70:	4b07      	ldr	r3, [pc, #28]	; (8009b90 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 8009b72:	b0e4      	sub	sp, #400	; 0x190
 8009b74:	6819      	ldr	r1, [r3, #0]
 8009b76:	4668      	mov	r0, sp
 8009b78:	f001 fa88 	bl	800b08c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009b7c:	4905      	ldr	r1, [pc, #20]	; (8009b94 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 8009b7e:	4623      	mov	r3, r4
 8009b80:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009b84:	4668      	mov	r0, sp
 8009b86:	6809      	ldr	r1, [r1, #0]
 8009b88:	f001 fc1a 	bl	800b3c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 8009b8c:	b064      	add	sp, #400	; 0x190
 8009b8e:	bd10      	pop	{r4, pc}
 8009b90:	20001d20 	andcs	r1, r0, r0, lsr #26
 8009b94:	200000ec 	andcs	r0, r0, ip, ror #1

08009b98 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009b98:	b510      	push	{r4, lr}
 8009b9a:	460c      	mov	r4, r1
 8009b9c:	4b07      	ldr	r3, [pc, #28]	; (8009bbc <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009b9e:	b088      	sub	sp, #32
 8009ba0:	6819      	ldr	r1, [r3, #0]
 8009ba2:	a801      	add	r0, sp, #4
 8009ba4:	f002 f87e 	bl	800bca4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009ba8:	4905      	ldr	r1, [pc, #20]	; (8009bc0 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009baa:	4623      	mov	r3, r4
 8009bac:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009bb0:	6809      	ldr	r1, [r1, #0]
 8009bb2:	a801      	add	r0, sp, #4
 8009bb4:	f002 fb78 	bl	800c2a8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009bb8:	b008      	add	sp, #32
 8009bba:	bd10      	pop	{r4, pc}
 8009bbc:	20001d28 	andcs	r1, r0, r8, lsr #26
 8009bc0:	200000ec 	andcs	r0, r0, ip, ror #1

08009bc4 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009bc4:	b530      	push	{r4, r5, lr}
 8009bc6:	b085      	sub	sp, #20
 8009bc8:	4604      	mov	r4, r0
 8009bca:	9201      	str	r2, [sp, #4]
 8009bcc:	b9d1      	cbnz	r1, 8009c04 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009bce:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009bd2:	9303      	str	r3, [sp, #12]
 8009bd4:	4b19      	ldr	r3, [pc, #100]	; (8009c3c <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009bd6:	aa03      	add	r2, sp, #12
 8009bd8:	6819      	ldr	r1, [r3, #0]
 8009bda:	3101      	adds	r1, #1
 8009bdc:	f000 fb00 	bl	800a1e0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009be0:	2800      	cmp	r0, #0
 8009be2:	db0d      	blt.n	8009c00 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009be4:	221c      	movs	r2, #28
 8009be6:	4b16      	ldr	r3, [pc, #88]	; (8009c40 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009be8:	fb02 3300 	mla	r3, r2, r0, r3
 8009bec:	68da      	ldr	r2, [r3, #12]
 8009bee:	689b      	ldr	r3, [r3, #8]
 8009bf0:	1051      	asrs	r1, r2, #1
 8009bf2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009bf6:	07d2      	lsls	r2, r2, #31
 8009bf8:	bf44      	itt	mi
 8009bfa:	5862      	ldrmi	r2, [r4, r1]
 8009bfc:	58d3      	ldrmi	r3, [r2, r3]
 8009bfe:	4798      	blx	r3
 8009c00:	b005      	add	sp, #20
 8009c02:	bd30      	pop	{r4, r5, pc}
 8009c04:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009c08:	d8fa      	bhi.n	8009c00 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009c0a:	4b0e      	ldr	r3, [pc, #56]	; (8009c44 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009c0c:	460d      	mov	r5, r1
 8009c0e:	781b      	ldrb	r3, [r3, #0]
 8009c10:	07d9      	lsls	r1, r3, #31
 8009c12:	d50b      	bpl.n	8009c2c <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009c14:	782b      	ldrb	r3, [r5, #0]
 8009c16:	2b7b      	cmp	r3, #123	; 0x7b
 8009c18:	d108      	bne.n	8009c2c <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009c1a:	1e51      	subs	r1, r2, #1
 8009c1c:	4628      	mov	r0, r5
 8009c1e:	2200      	movs	r2, #0
 8009c20:	b289      	uxth	r1, r1
 8009c22:	f006 faab 	bl	801017c <properties::convert_json_file(char*, unsigned short, bool)>
 8009c26:	1e02      	subs	r2, r0, #0
 8009c28:	ddea      	ble.n	8009c00 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009c2a:	b292      	uxth	r2, r2
 8009c2c:	4b03      	ldr	r3, [pc, #12]	; (8009c3c <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009c2e:	61e2      	str	r2, [r4, #28]
 8009c30:	4620      	mov	r0, r4
 8009c32:	601d      	str	r5, [r3, #0]
 8009c34:	aa01      	add	r2, sp, #4
 8009c36:	1c69      	adds	r1, r5, #1
 8009c38:	e7d0      	b.n	8009bdc <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009c3a:	bf00      	nop
 8009c3c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009c40:	08013810 	stmdaeq	r1, {r4, fp, ip, sp}
 8009c44:	20009be2 	andcs	r9, r0, r2, ror #23

08009c48 <RemoteConfig::Run()>:
 8009c48:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009c4c:	7b05      	ldrb	r5, [r0, #12]
 8009c4e:	2d00      	cmp	r5, #0
 8009c50:	d156      	bne.n	8009d00 <RemoteConfig::Run()+0xb8>
 8009c52:	4e45      	ldr	r6, [pc, #276]	; (8009d68 <RemoteConfig::Run()+0x120>)
 8009c54:	4604      	mov	r4, r0
 8009c56:	f100 0218 	add.w	r2, r0, #24
 8009c5a:	4631      	mov	r1, r6
 8009c5c:	7d00      	ldrb	r0, [r0, #20]
 8009c5e:	f10d 030e 	add.w	r3, sp, #14
 8009c62:	f004 fdfb 	bl	800e85c <udp_recv2>
 8009c66:	2803      	cmp	r0, #3
 8009c68:	61e0      	str	r0, [r4, #28]
 8009c6a:	d949      	bls.n	8009d00 <RemoteConfig::Run()+0xb8>
 8009c6c:	6831      	ldr	r1, [r6, #0]
 8009c6e:	1e43      	subs	r3, r0, #1
 8009c70:	5cca      	ldrb	r2, [r1, r3]
 8009c72:	2a0a      	cmp	r2, #10
 8009c74:	bf18      	it	ne
 8009c76:	4603      	movne	r3, r0
 8009c78:	61e3      	str	r3, [r4, #28]
 8009c7a:	7808      	ldrb	r0, [r1, #0]
 8009c7c:	283f      	cmp	r0, #63	; 0x3f
 8009c7e:	d137      	bne.n	8009cf0 <RemoteConfig::Run()+0xa8>
 8009c80:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009d6c <RemoteConfig::Run()+0x124>
 8009c84:	462a      	mov	r2, r5
 8009c86:	4667      	mov	r7, ip
 8009c88:	3b01      	subs	r3, #1
 8009c8a:	61e3      	str	r3, [r4, #28]
 8009c8c:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009c90:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009c94:	b16d      	cbz	r5, 8009cb2 <RemoteConfig::Run()+0x6a>
 8009c96:	4283      	cmp	r3, r0
 8009c98:	d80d      	bhi.n	8009cb6 <RemoteConfig::Run()+0x6e>
 8009c9a:	3201      	adds	r2, #1
 8009c9c:	2a09      	cmp	r2, #9
 8009c9e:	f10c 0c10 	add.w	ip, ip, #16
 8009ca2:	d1f3      	bne.n	8009c8c <RemoteConfig::Run()+0x44>
 8009ca4:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ca8:	9300      	str	r3, [sp, #0]
 8009caa:	2208      	movs	r2, #8
 8009cac:	69a3      	ldr	r3, [r4, #24]
 8009cae:	4930      	ldr	r1, [pc, #192]	; (8009d70 <RemoteConfig::Run()+0x128>)
 8009cb0:	e04e      	b.n	8009d50 <RemoteConfig::Run()+0x108>
 8009cb2:	4283      	cmp	r3, r0
 8009cb4:	d1f1      	bne.n	8009c9a <RemoteConfig::Run()+0x52>
 8009cb6:	460e      	mov	r6, r1
 8009cb8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009cbc:	4408      	add	r0, r1
 8009cbe:	3d01      	subs	r5, #1
 8009cc0:	4286      	cmp	r6, r0
 8009cc2:	d10b      	bne.n	8009cdc <RemoteConfig::Run()+0x94>
 8009cc4:	0113      	lsls	r3, r2, #4
 8009cc6:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009cca:	6852      	ldr	r2, [r2, #4]
 8009ccc:	58fb      	ldr	r3, [r7, r3]
 8009cce:	1051      	asrs	r1, r2, #1
 8009cd0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009cd4:	07d2      	lsls	r2, r2, #31
 8009cd6:	d408      	bmi.n	8009cea <RemoteConfig::Run()+0xa2>
 8009cd8:	4798      	blx	r3
 8009cda:	e011      	b.n	8009d00 <RemoteConfig::Run()+0xb8>
 8009cdc:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009ce0:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009ce4:	45f0      	cmp	r8, lr
 8009ce6:	d0eb      	beq.n	8009cc0 <RemoteConfig::Run()+0x78>
 8009ce8:	e7d7      	b.n	8009c9a <RemoteConfig::Run()+0x52>
 8009cea:	5862      	ldr	r2, [r4, r1]
 8009cec:	58d3      	ldr	r3, [r2, r3]
 8009cee:	e7f3      	b.n	8009cd8 <RemoteConfig::Run()+0x90>
 8009cf0:	7b62      	ldrb	r2, [r4, #13]
 8009cf2:	b92a      	cbnz	r2, 8009d00 <RemoteConfig::Run()+0xb8>
 8009cf4:	2823      	cmp	r0, #35	; 0x23
 8009cf6:	d106      	bne.n	8009d06 <RemoteConfig::Run()+0xbe>
 8009cf8:	4611      	mov	r1, r2
 8009cfa:	4620      	mov	r0, r4
 8009cfc:	f7ff ff62 	bl	8009bc4 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009d00:	b004      	add	sp, #16
 8009d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d06:	2821      	cmp	r0, #33	; 0x21
 8009d08:	d1fa      	bne.n	8009d00 <RemoteConfig::Run()+0xb8>
 8009d0a:	3b01      	subs	r3, #1
 8009d0c:	2b05      	cmp	r3, #5
 8009d0e:	61e3      	str	r3, [r4, #28]
 8009d10:	d918      	bls.n	8009d44 <RemoteConfig::Run()+0xfc>
 8009d12:	460a      	mov	r2, r1
 8009d14:	4608      	mov	r0, r1
 8009d16:	4d17      	ldr	r5, [pc, #92]	; (8009d74 <RemoteConfig::Run()+0x12c>)
 8009d18:	f101 0c05 	add.w	ip, r1, #5
 8009d1c:	4560      	cmp	r0, ip
 8009d1e:	d01b      	beq.n	8009d58 <RemoteConfig::Run()+0x110>
 8009d20:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009d24:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009d28:	42b7      	cmp	r7, r6
 8009d2a:	d0f7      	beq.n	8009d1c <RemoteConfig::Run()+0xd4>
 8009d2c:	2b08      	cmp	r3, #8
 8009d2e:	d909      	bls.n	8009d44 <RemoteConfig::Run()+0xfc>
 8009d30:	4b11      	ldr	r3, [pc, #68]	; (8009d78 <RemoteConfig::Run()+0x130>)
 8009d32:	3108      	adds	r1, #8
 8009d34:	428a      	cmp	r2, r1
 8009d36:	d015      	beq.n	8009d64 <RemoteConfig::Run()+0x11c>
 8009d38:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009d3c:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009d40:	4285      	cmp	r5, r0
 8009d42:	d0f7      	beq.n	8009d34 <RemoteConfig::Run()+0xec>
 8009d44:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d48:	2208      	movs	r2, #8
 8009d4a:	9300      	str	r3, [sp, #0]
 8009d4c:	69a3      	ldr	r3, [r4, #24]
 8009d4e:	490b      	ldr	r1, [pc, #44]	; (8009d7c <RemoteConfig::Run()+0x134>)
 8009d50:	7d20      	ldrb	r0, [r4, #20]
 8009d52:	f004 fda9 	bl	800e8a8 <udp_send>
 8009d56:	e7d3      	b.n	8009d00 <RemoteConfig::Run()+0xb8>
 8009d58:	2300      	movs	r3, #0
 8009d5a:	4a09      	ldr	r2, [pc, #36]	; (8009d80 <RemoteConfig::Run()+0x138>)
 8009d5c:	011b      	lsls	r3, r3, #4
 8009d5e:	4620      	mov	r0, r4
 8009d60:	58d3      	ldr	r3, [r2, r3]
 8009d62:	e7b9      	b.n	8009cd8 <RemoteConfig::Run()+0x90>
 8009d64:	2301      	movs	r3, #1
 8009d66:	e7f8      	b.n	8009d5a <RemoteConfig::Run()+0x112>
 8009d68:	200000ec 	andcs	r0, r0, ip, ror #1
 8009d6c:	080136f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, ip, sp}
 8009d70:	08013559 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, ip, sp}
 8009d74:	08013541 	stmdaeq	r1, {r0, r6, r8, sl, ip, sp}
 8009d78:	08013547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp}
 8009d7c:	08013550 	stmdaeq	r1, {r4, r6, r8, sl, ip, sp}
 8009d80:	08013780 	stmdaeq	r1, {r7, r8, r9, sl, ip, sp}

08009d84 <RemoteConfig::HandleSetRconfig()>:
 8009d84:	b510      	push	{r4, lr}
 8009d86:	4604      	mov	r4, r0
 8009d88:	4b08      	ldr	r3, [pc, #32]	; (8009dac <RemoteConfig::HandleSetRconfig()+0x28>)
 8009d8a:	b08a      	sub	sp, #40	; 0x28
 8009d8c:	6819      	ldr	r1, [r3, #0]
 8009d8e:	a801      	add	r0, sp, #4
 8009d90:	f000 f882 	bl	8009e98 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d94:	4b06      	ldr	r3, [pc, #24]	; (8009db0 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009d96:	69e2      	ldr	r2, [r4, #28]
 8009d98:	6819      	ldr	r1, [r3, #0]
 8009d9a:	a801      	add	r0, sp, #4
 8009d9c:	f000 f892 	bl	8009ec4 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009da0:	4621      	mov	r1, r4
 8009da2:	a801      	add	r0, sp, #4
 8009da4:	f000 f9a9 	bl	800a0fa <RemoteConfigParams::Set(RemoteConfig*)>
 8009da8:	b00a      	add	sp, #40	; 0x28
 8009daa:	bd10      	pop	{r4, pc}
 8009dac:	20001d24 	andcs	r1, r0, r4, lsr #26
 8009db0:	200000ec 	andcs	r0, r0, ip, ror #1

08009db4 <RemoteConfig::HandleSetNetworkTxt()>:
 8009db4:	b510      	push	{r4, lr}
 8009db6:	4604      	mov	r4, r0
 8009db8:	4b06      	ldr	r3, [pc, #24]	; (8009dd4 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009dba:	b09a      	sub	sp, #104	; 0x68
 8009dbc:	6819      	ldr	r1, [r3, #0]
 8009dbe:	a801      	add	r0, sp, #4
 8009dc0:	f005 fc2e 	bl	800f620 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009dc4:	4b04      	ldr	r3, [pc, #16]	; (8009dd8 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009dc6:	69e2      	ldr	r2, [r4, #28]
 8009dc8:	6819      	ldr	r1, [r3, #0]
 8009dca:	a801      	add	r0, sp, #4
 8009dcc:	f005 fc40 	bl	800f650 <NetworkParams::Load(char const*, unsigned int)>
 8009dd0:	b01a      	add	sp, #104	; 0x68
 8009dd2:	bd10      	pop	{r4, pc}
 8009dd4:	20001d1c 	andcs	r1, r0, ip, lsl sp
 8009dd8:	200000ec 	andcs	r0, r0, ip, ror #1

08009ddc <RemoteConfig::HandleSetOscTxt()>:
 8009ddc:	b510      	push	{r4, lr}
 8009dde:	4604      	mov	r4, r0
 8009de0:	4b06      	ldr	r3, [pc, #24]	; (8009dfc <RemoteConfig::HandleSetOscTxt()+0x20>)
 8009de2:	b0e4      	sub	sp, #400	; 0x190
 8009de4:	6819      	ldr	r1, [r3, #0]
 8009de6:	4668      	mov	r0, sp
 8009de8:	f001 f950 	bl	800b08c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009dec:	4b04      	ldr	r3, [pc, #16]	; (8009e00 <RemoteConfig::HandleSetOscTxt()+0x24>)
 8009dee:	4668      	mov	r0, sp
 8009df0:	69e2      	ldr	r2, [r4, #28]
 8009df2:	6819      	ldr	r1, [r3, #0]
 8009df4:	f001 f966 	bl	800b0c4 <OSCServerParams::Load(char const*, unsigned int)>
 8009df8:	b064      	add	sp, #400	; 0x190
 8009dfa:	bd10      	pop	{r4, pc}
 8009dfc:	20001d20 	andcs	r1, r0, r0, lsr #26
 8009e00:	200000ec 	andcs	r0, r0, ip, ror #1

08009e04 <RemoteConfig::HandleSetDevicesTxt()>:
 8009e04:	b510      	push	{r4, lr}
 8009e06:	4604      	mov	r4, r0
 8009e08:	4b06      	ldr	r3, [pc, #24]	; (8009e24 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 8009e0a:	b088      	sub	sp, #32
 8009e0c:	6819      	ldr	r1, [r3, #0]
 8009e0e:	a801      	add	r0, sp, #4
 8009e10:	f001 ff48 	bl	800bca4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009e14:	4b04      	ldr	r3, [pc, #16]	; (8009e28 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 8009e16:	69e2      	ldr	r2, [r4, #28]
 8009e18:	6819      	ldr	r1, [r3, #0]
 8009e1a:	a801      	add	r0, sp, #4
 8009e1c:	f001 ff64 	bl	800bce8 <PixelDmxParams::Load(char const*, unsigned int)>
 8009e20:	b008      	add	sp, #32
 8009e22:	bd10      	pop	{r4, pc}
 8009e24:	20001d28 	andcs	r1, r0, r8, lsr #26
 8009e28:	200000ec 	andcs	r0, r0, ip, ror #1

08009e2c <RemoteConfig::HandleFactory()>:
 8009e2c:	b538      	push	{r3, r4, r5, lr}
 8009e2e:	2400      	movs	r4, #0
 8009e30:	4d04      	ldr	r5, [pc, #16]	; (8009e44 <RemoteConfig::HandleFactory()+0x18>)
 8009e32:	4621      	mov	r1, r4
 8009e34:	6828      	ldr	r0, [r5, #0]
 8009e36:	3401      	adds	r4, #1
 8009e38:	f003 fe1a 	bl	800da70 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009e3c:	2c1c      	cmp	r4, #28
 8009e3e:	d1f8      	bne.n	8009e32 <RemoteConfig::HandleFactory()+0x6>
 8009e40:	bd38      	pop	{r3, r4, r5, pc}
 8009e42:	bf00      	nop
 8009e44:	20001d14 	andcs	r1, r0, r4, lsl sp

08009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009e48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e4a:	460b      	mov	r3, r1
 8009e4c:	8885      	ldrh	r5, [r0, #4]
 8009e4e:	88c1      	ldrh	r1, [r0, #6]
 8009e50:	42a9      	cmp	r1, r5
 8009e52:	d214      	bcs.n	8009e7e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009e54:	4604      	mov	r4, r0
 8009e56:	6800      	ldr	r0, [r0, #0]
 8009e58:	1a6d      	subs	r5, r5, r1
 8009e5a:	4408      	add	r0, r1
 8009e5c:	7a21      	ldrb	r1, [r4, #8]
 8009e5e:	b91a      	cbnz	r2, 8009e68 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009e60:	b919      	cbnz	r1, 8009e6a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009e62:	4a0a      	ldr	r2, [pc, #40]	; (8009e8c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009e64:	9100      	str	r1, [sp, #0]
 8009e66:	e002      	b.n	8009e6e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e68:	b159      	cbz	r1, 8009e82 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009e6a:	9200      	str	r2, [sp, #0]
 8009e6c:	4a08      	ldr	r2, [pc, #32]	; (8009e90 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009e6e:	4629      	mov	r1, r5
 8009e70:	f7ff fa40 	bl	80092f4 <snprintf>
 8009e74:	4285      	cmp	r5, r0
 8009e76:	bfa2      	ittt	ge
 8009e78:	88e3      	ldrhge	r3, [r4, #6]
 8009e7a:	181b      	addge	r3, r3, r0
 8009e7c:	80e3      	strhge	r3, [r4, #6]
 8009e7e:	b003      	add	sp, #12
 8009e80:	bd30      	pop	{r4, r5, pc}
 8009e82:	2201      	movs	r2, #1
 8009e84:	9200      	str	r2, [sp, #0]
 8009e86:	4a03      	ldr	r2, [pc, #12]	; (8009e94 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009e88:	e7f1      	b.n	8009e6e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009e8a:	bf00      	nop
 8009e8c:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 8009e90:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 8009e94:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}

08009e98 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009e98:	b510      	push	{r4, lr}
 8009e9a:	4604      	mov	r4, r0
 8009e9c:	2220      	movs	r2, #32
 8009e9e:	f840 1b04 	str.w	r1, [r0], #4
 8009ea2:	2100      	movs	r1, #0
 8009ea4:	f007 f922 	bl	80110ec <memset>
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	bd10      	pop	{r4, pc}

08009eac <RemoteConfigParams::Load()>:
 8009eac:	b508      	push	{r3, lr}
 8009eae:	2300      	movs	r3, #0
 8009eb0:	4601      	mov	r1, r0
 8009eb2:	6043      	str	r3, [r0, #4]
 8009eb4:	6800      	ldr	r0, [r0, #0]
 8009eb6:	b120      	cbz	r0, 8009ec2 <RemoteConfigParams::Load()+0x16>
 8009eb8:	6803      	ldr	r3, [r0, #0]
 8009eba:	3104      	adds	r1, #4
 8009ebc:	68db      	ldr	r3, [r3, #12]
 8009ebe:	4798      	blx	r3
 8009ec0:	2001      	movs	r0, #1
 8009ec2:	bd08      	pop	{r3, pc}

08009ec4 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009ec4:	2300      	movs	r3, #0
 8009ec6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009ec8:	460d      	mov	r5, r1
 8009eca:	4616      	mov	r6, r2
 8009ecc:	4604      	mov	r4, r0
 8009ece:	6043      	str	r3, [r0, #4]
 8009ed0:	4602      	mov	r2, r0
 8009ed2:	490a      	ldr	r1, [pc, #40]	; (8009efc <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009ed4:	4668      	mov	r0, sp
 8009ed6:	f006 faa3 	bl	8010420 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009eda:	4632      	mov	r2, r6
 8009edc:	4629      	mov	r1, r5
 8009ede:	4668      	mov	r0, sp
 8009ee0:	f006 faa2 	bl	8010428 <ReadConfigFile::Read(char const*, unsigned int)>
 8009ee4:	4621      	mov	r1, r4
 8009ee6:	f851 0b04 	ldr.w	r0, [r1], #4
 8009eea:	6803      	ldr	r3, [r0, #0]
 8009eec:	689b      	ldr	r3, [r3, #8]
 8009eee:	4798      	blx	r3
 8009ef0:	4668      	mov	r0, sp
 8009ef2:	f006 fa98 	bl	8010426 <ReadConfigFile::~ReadConfigFile()>
 8009ef6:	b002      	add	sp, #8
 8009ef8:	bd70      	pop	{r4, r5, r6, pc}
 8009efa:	bf00      	nop
 8009efc:	08009fbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, pc}

08009f00 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009f00:	6843      	ldr	r3, [r0, #4]
 8009f02:	b111      	cbz	r1, 8009f0a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009f04:	4313      	orrs	r3, r2
 8009f06:	6043      	str	r3, [r0, #4]
 8009f08:	4770      	bx	lr
 8009f0a:	ea23 0302 	bic.w	r3, r3, r2
 8009f0e:	e7fa      	b.n	8009f06 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009f10 <RemoteConfigParams::callbackFunction(char const*)>:
 8009f10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f12:	460d      	mov	r5, r1
 8009f14:	4604      	mov	r4, r0
 8009f16:	4923      	ldr	r1, [pc, #140]	; (8009fa4 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009f18:	4628      	mov	r0, r5
 8009f1a:	f10d 0203 	add.w	r2, sp, #3
 8009f1e:	f006 fbbb 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f22:	b940      	cbnz	r0, 8009f36 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009f24:	2201      	movs	r2, #1
 8009f26:	4620      	mov	r0, r4
 8009f28:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009f2c:	b003      	add	sp, #12
 8009f2e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009f32:	f7ff bfe5 	b.w	8009f00 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009f36:	4628      	mov	r0, r5
 8009f38:	491b      	ldr	r1, [pc, #108]	; (8009fa8 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009f3a:	f10d 0203 	add.w	r2, sp, #3
 8009f3e:	f006 fbab 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f42:	b908      	cbnz	r0, 8009f48 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8009f44:	2202      	movs	r2, #2
 8009f46:	e7ee      	b.n	8009f26 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f48:	4628      	mov	r0, r5
 8009f4a:	4918      	ldr	r1, [pc, #96]	; (8009fac <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009f4c:	f10d 0203 	add.w	r2, sp, #3
 8009f50:	f006 fba2 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f54:	b908      	cbnz	r0, 8009f5a <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8009f56:	2204      	movs	r2, #4
 8009f58:	e7e5      	b.n	8009f26 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f5a:	4628      	mov	r0, r5
 8009f5c:	4914      	ldr	r1, [pc, #80]	; (8009fb0 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009f5e:	f10d 0203 	add.w	r2, sp, #3
 8009f62:	f006 fb99 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f66:	b908      	cbnz	r0, 8009f6c <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8009f68:	2208      	movs	r2, #8
 8009f6a:	e7dc      	b.n	8009f26 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f6c:	4628      	mov	r0, r5
 8009f6e:	4911      	ldr	r1, [pc, #68]	; (8009fb4 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009f70:	f10d 0203 	add.w	r2, sp, #3
 8009f74:	f006 fb90 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009f78:	b908      	cbnz	r0, 8009f7e <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8009f7a:	2220      	movs	r2, #32
 8009f7c:	e7d3      	b.n	8009f26 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009f7e:	2317      	movs	r3, #23
 8009f80:	4628      	mov	r0, r5
 8009f82:	9301      	str	r3, [sp, #4]
 8009f84:	490c      	ldr	r1, [pc, #48]	; (8009fb8 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009f86:	ab01      	add	r3, sp, #4
 8009f88:	f104 020c 	add.w	r2, r4, #12
 8009f8c:	f006 fa80 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009f90:	b930      	cbnz	r0, 8009fa0 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8009f92:	9b01      	ldr	r3, [sp, #4]
 8009f94:	4423      	add	r3, r4
 8009f96:	7318      	strb	r0, [r3, #12]
 8009f98:	6863      	ldr	r3, [r4, #4]
 8009f9a:	f043 0310 	orr.w	r3, r3, #16
 8009f9e:	6063      	str	r3, [r4, #4]
 8009fa0:	b003      	add	sp, #12
 8009fa2:	bd30      	pop	{r4, r5, pc}
 8009fa4:	08013b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, ip, sp}
 8009fa8:	08013b7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, fp, ip, sp}
 8009fac:	08013b89 	stmdaeq	r1, {r0, r3, r7, r8, r9, fp, ip, sp}
 8009fb0:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8009fb4:	08013ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp, ip, sp}
 8009fb8:	08013b6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, fp, ip, sp}

08009fbc <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009fbc:	f7ff bfa8 	b.w	8009f10 <RemoteConfigParams::callbackFunction(char const*)>

08009fc0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009fc0:	b570      	push	{r4, r5, r6, lr}
 8009fc2:	4604      	mov	r4, r0
 8009fc4:	4615      	mov	r5, r2
 8009fc6:	461e      	mov	r6, r3
 8009fc8:	b086      	sub	sp, #24
 8009fca:	3004      	adds	r0, #4
 8009fcc:	2900      	cmp	r1, #0
 8009fce:	d041      	beq.n	800a054 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009fd0:	2220      	movs	r2, #32
 8009fd2:	f007 f874 	bl	80110be <memmove>
 8009fd6:	4633      	mov	r3, r6
 8009fd8:	462a      	mov	r2, r5
 8009fda:	4937      	ldr	r1, [pc, #220]	; (800a0b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009fdc:	a803      	add	r0, sp, #12
 8009fde:	f006 f97f 	bl	80102e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009fe2:	6862      	ldr	r2, [r4, #4]
 8009fe4:	4935      	ldr	r1, [pc, #212]	; (800a0bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009fe6:	f002 0201 	and.w	r2, r2, #1
 8009fea:	a803      	add	r0, sp, #12
 8009fec:	f7ff ff2c 	bl	8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009ff0:	6862      	ldr	r2, [r4, #4]
 8009ff2:	4933      	ldr	r1, [pc, #204]	; (800a0c0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009ff4:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009ff8:	a803      	add	r0, sp, #12
 8009ffa:	f7ff ff25 	bl	8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009ffe:	6862      	ldr	r2, [r4, #4]
 800a000:	4930      	ldr	r1, [pc, #192]	; (800a0c4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a002:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a006:	a803      	add	r0, sp, #12
 800a008:	f7ff ff1e 	bl	8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a00c:	6862      	ldr	r2, [r4, #4]
 800a00e:	492e      	ldr	r1, [pc, #184]	; (800a0c8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a010:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a014:	a803      	add	r0, sp, #12
 800a016:	f7ff ff17 	bl	8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a01a:	6862      	ldr	r2, [r4, #4]
 800a01c:	492b      	ldr	r1, [pc, #172]	; (800a0cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a01e:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a022:	a803      	add	r0, sp, #12
 800a024:	f7ff ff10 	bl	8009e48 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a028:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a02c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a030:	6862      	ldr	r2, [r4, #4]
 800a032:	42ab      	cmp	r3, r5
 800a034:	d223      	bcs.n	800a07e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800a036:	9803      	ldr	r0, [sp, #12]
 800a038:	06d2      	lsls	r2, r2, #27
 800a03a:	4418      	add	r0, r3
 800a03c:	eba5 0503 	sub.w	r5, r5, r3
 800a040:	f104 040c 	add.w	r4, r4, #12
 800a044:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a048:	d40b      	bmi.n	800a062 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a04a:	b95b      	cbnz	r3, 800a064 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a04c:	4b20      	ldr	r3, [pc, #128]	; (800a0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a04e:	4a21      	ldr	r2, [pc, #132]	; (800a0d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a050:	9400      	str	r4, [sp, #0]
 800a052:	e00a      	b.n	800a06a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a054:	6823      	ldr	r3, [r4, #0]
 800a056:	4601      	mov	r1, r0
 800a058:	681a      	ldr	r2, [r3, #0]
 800a05a:	4618      	mov	r0, r3
 800a05c:	68d2      	ldr	r2, [r2, #12]
 800a05e:	4790      	blx	r2
 800a060:	e7b9      	b.n	8009fd6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a062:	b32b      	cbz	r3, 800a0b0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a064:	4b1a      	ldr	r3, [pc, #104]	; (800a0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a066:	4a1c      	ldr	r2, [pc, #112]	; (800a0d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a068:	9400      	str	r4, [sp, #0]
 800a06a:	4629      	mov	r1, r5
 800a06c:	f7ff f942 	bl	80092f4 <snprintf>
 800a070:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a074:	4285      	cmp	r5, r0
 800a076:	bfa4      	itt	ge
 800a078:	181b      	addge	r3, r3, r0
 800a07a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a07e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a082:	b17b      	cbz	r3, 800a0a4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a084:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a088:	9b03      	ldr	r3, [sp, #12]
 800a08a:	4413      	add	r3, r2
 800a08c:	227d      	movs	r2, #125	; 0x7d
 800a08e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a092:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a096:	9903      	ldr	r1, [sp, #12]
 800a098:	54ca      	strb	r2, [r1, r3]
 800a09a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a09e:	3301      	adds	r3, #1
 800a0a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a0a4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a0a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a0aa:	601a      	str	r2, [r3, #0]
 800a0ac:	b006      	add	sp, #24
 800a0ae:	bd70      	pop	{r4, r5, r6, pc}
 800a0b0:	4b07      	ldr	r3, [pc, #28]	; (800a0d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a0b2:	4a0a      	ldr	r2, [pc, #40]	; (800a0dc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a0b4:	9400      	str	r4, [sp, #0]
 800a0b6:	e7d8      	b.n	800a06a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a0b8:	08013b62 	stmdaeq	r1, {r1, r5, r6, r8, r9, fp, ip, sp}
 800a0bc:	08013b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, ip, sp}
 800a0c0:	08013b7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, fp, ip, sp}
 800a0c4:	08013b89 	stmdaeq	r1, {r0, r3, r7, r8, r9, fp, ip, sp}
 800a0c8:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 800a0cc:	08013ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp, ip, sp}
 800a0d0:	08013b6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, fp, ip, sp}
 800a0d4:	080137bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800a0d8:	080137b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, ip, sp}
 800a0dc:	080137bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}

0800a0e0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a0e0:	b513      	push	{r0, r1, r4, lr}
 800a0e2:	6804      	ldr	r4, [r0, #0]
 800a0e4:	b914      	cbnz	r4, 800a0ec <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a0e6:	601c      	str	r4, [r3, #0]
 800a0e8:	b002      	add	sp, #8
 800a0ea:	bd10      	pop	{r4, pc}
 800a0ec:	9300      	str	r3, [sp, #0]
 800a0ee:	4613      	mov	r3, r2
 800a0f0:	460a      	mov	r2, r1
 800a0f2:	2100      	movs	r1, #0
 800a0f4:	f7ff ff64 	bl	8009fc0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a0f8:	e7f6      	b.n	800a0e8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a0fa <RemoteConfigParams::Set(RemoteConfig*)>:
 800a0fa:	b538      	push	{r3, r4, r5, lr}
 800a0fc:	460c      	mov	r4, r1
 800a0fe:	4605      	mov	r5, r0
 800a100:	6841      	ldr	r1, [r0, #4]
 800a102:	4620      	mov	r0, r4
 800a104:	f001 0101 	and.w	r1, r1, #1
 800a108:	f7ff fc6c 	bl	80099e4 <RemoteConfig::SetDisable(bool)>
 800a10c:	686b      	ldr	r3, [r5, #4]
 800a10e:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a112:	7362      	strb	r2, [r4, #13]
 800a114:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a118:	73a2      	strb	r2, [r4, #14]
 800a11a:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a11e:	73e2      	strb	r2, [r4, #15]
 800a120:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a124:	06db      	lsls	r3, r3, #27
 800a126:	7422      	strb	r2, [r4, #16]
 800a128:	d506      	bpl.n	800a138 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a12a:	4620      	mov	r0, r4
 800a12c:	f105 010c 	add.w	r1, r5, #12
 800a130:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a134:	f7ff bc76 	b.w	8009a24 <RemoteConfig::SetDisplayName(char const*)>
 800a138:	bd38      	pop	{r3, r4, r5, pc}

0800a13a <RemoteConfigParams::Dump()>:
 800a13a:	4770      	bx	lr

0800a13c <RemoteConfig::HandleReboot()>:
 800a13c:	7b83      	ldrb	r3, [r0, #14]
 800a13e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a140:	2b00      	cmp	r3, #0
 800a142:	d03c      	beq.n	800a1be <RemoteConfig::HandleReboot()+0x82>
 800a144:	2301      	movs	r3, #1
 800a146:	4c1f      	ldr	r4, [pc, #124]	; (800a1c4 <RemoteConfig::HandleReboot()+0x88>)
 800a148:	7443      	strb	r3, [r0, #17]
 800a14a:	6825      	ldr	r5, [r4, #0]
 800a14c:	69a8      	ldr	r0, [r5, #24]
 800a14e:	b138      	cbz	r0, 800a160 <RemoteConfig::HandleReboot()+0x24>
 800a150:	2100      	movs	r1, #0
 800a152:	6803      	ldr	r3, [r0, #0]
 800a154:	7429      	strb	r1, [r5, #16]
 800a156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a158:	4798      	blx	r3
 800a15a:	4b1b      	ldr	r3, [pc, #108]	; (800a1c8 <RemoteConfig::HandleReboot()+0x8c>)
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	606b      	str	r3, [r5, #4]
 800a160:	4d1a      	ldr	r5, [pc, #104]	; (800a1cc <RemoteConfig::HandleReboot()+0x90>)
 800a162:	6828      	ldr	r0, [r5, #0]
 800a164:	f003 fd08 	bl	800db78 <SpiFlashStore::Flash()>
 800a168:	2800      	cmp	r0, #0
 800a16a:	d1fa      	bne.n	800a162 <RemoteConfig::HandleReboot()+0x26>
 800a16c:	4b18      	ldr	r3, [pc, #96]	; (800a1d0 <RemoteConfig::HandleReboot()+0x94>)
 800a16e:	6818      	ldr	r0, [r3, #0]
 800a170:	f005 f85a 	bl	800f228 <Network::Shutdown()>
 800a174:	4817      	ldr	r0, [pc, #92]	; (800a1d4 <RemoteConfig::HandleReboot()+0x98>)
 800a176:	f7ff f8ad 	bl	80092d4 <printf>
 800a17a:	6823      	ldr	r3, [r4, #0]
 800a17c:	6998      	ldr	r0, [r3, #24]
 800a17e:	b110      	cbz	r0, 800a186 <RemoteConfig::HandleReboot()+0x4a>
 800a180:	6803      	ldr	r3, [r0, #0]
 800a182:	68db      	ldr	r3, [r3, #12]
 800a184:	4798      	blx	r3
 800a186:	6824      	ldr	r4, [r4, #0]
 800a188:	4913      	ldr	r1, [pc, #76]	; (800a1d8 <RemoteConfig::HandleReboot()+0x9c>)
 800a18a:	4620      	mov	r0, r4
 800a18c:	f7ff fb40 	bl	8009810 <Display::TextStatus(char const*)>
 800a190:	7c63      	ldrb	r3, [r4, #17]
 800a192:	b183      	cbz	r3, 800a1b6 <RemoteConfig::HandleReboot()+0x7a>
 800a194:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a198:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a19c:	23bf      	movs	r3, #191	; 0xbf
 800a19e:	7a20      	ldrb	r0, [r4, #8]
 800a1a0:	f88d 3006 	strb.w	r3, [sp, #6]
 800a1a4:	f007 fe50 	bl	8011e48 <gd32_i2c_set_address>
 800a1a8:	68e0      	ldr	r0, [r4, #12]
 800a1aa:	f007 fe45 	bl	8011e38 <gd32_i2c_set_baudrate>
 800a1ae:	2103      	movs	r1, #3
 800a1b0:	a801      	add	r0, sp, #4
 800a1b2:	f007 fe4f 	bl	8011e54 <gd32_i2c_write>
 800a1b6:	4b09      	ldr	r3, [pc, #36]	; (800a1dc <RemoteConfig::HandleReboot()+0xa0>)
 800a1b8:	6818      	ldr	r0, [r3, #0]
 800a1ba:	f006 fe81 	bl	8010ec0 <Hardware::Reboot()>
 800a1be:	b003      	add	sp, #12
 800a1c0:	bd30      	pop	{r4, r5, pc}
 800a1c2:	bf00      	nop
 800a1c4:	20009be4 	andcs	r9, r0, r4, ror #23
 800a1c8:	20009cec 	andcs	r9, r0, ip, ror #25
 800a1cc:	20001d14 	andcs	r1, r0, r4, lsl sp
 800a1d0:	20009614 	andcs	r9, r0, r4, lsl r6
 800a1d4:	080137c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, ip, sp}
 800a1d8:	080137d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sl, ip, sp}
 800a1dc:	20009cd4 	ldrdcs	r9, [r0], -r4

0800a1e0 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a1e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a1e4:	2000      	movs	r0, #0
 800a1e6:	4d12      	ldr	r5, [pc, #72]	; (800a230 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a1e8:	f10d 0c04 	add.w	ip, sp, #4
 800a1ec:	6814      	ldr	r4, [r2, #0]
 800a1ee:	7d2b      	ldrb	r3, [r5, #20]
 800a1f0:	692e      	ldr	r6, [r5, #16]
 800a1f2:	42a3      	cmp	r3, r4
 800a1f4:	bf34      	ite	cc
 800a1f6:	4664      	movcc	r4, ip
 800a1f8:	4614      	movcs	r4, r2
 800a1fa:	9301      	str	r3, [sp, #4]
 800a1fc:	6827      	ldr	r7, [r4, #0]
 800a1fe:	460c      	mov	r4, r1
 800a200:	3e01      	subs	r6, #1
 800a202:	440f      	add	r7, r1
 800a204:	42bc      	cmp	r4, r7
 800a206:	d101      	bne.n	800a20c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a208:	6013      	str	r3, [r2, #0]
 800a20a:	e00c      	b.n	800a226 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a20c:	f894 8000 	ldrb.w	r8, [r4]
 800a210:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a214:	45f0      	cmp	r8, lr
 800a216:	d009      	beq.n	800a22c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a218:	3001      	adds	r0, #1
 800a21a:	2804      	cmp	r0, #4
 800a21c:	f105 051c 	add.w	r5, r5, #28
 800a220:	d1e4      	bne.n	800a1ec <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a222:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a226:	b002      	add	sp, #8
 800a228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a22c:	3401      	adds	r4, #1
 800a22e:	e7e9      	b.n	800a204 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a230:	08013810 	stmdaeq	r1, {r4, fp, ip, sp}

0800a234 <RemoteConfig::PlatformHandleTftpSet()>:
 800a234:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a238:	b109      	cbz	r1, 800a23e <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a23a:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a23e:	2002      	movs	r0, #2
 800a240:	f007 b946 	b.w	80114d0 <bkp_data_write>

0800a244 <RemoteConfig::PlatformHandleTftpGet()>:
 800a244:	b510      	push	{r4, lr}
 800a246:	4604      	mov	r4, r0
 800a248:	2002      	movs	r0, #2
 800a24a:	f007 f957 	bl	80114fc <bkp_data_read>
 800a24e:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a252:	1ac3      	subs	r3, r0, r3
 800a254:	4258      	negs	r0, r3
 800a256:	4158      	adcs	r0, r3
 800a258:	f884 0020 	strb.w	r0, [r4, #32]
 800a25c:	bd10      	pop	{r4, pc}

0800a25e <strcmp>:
 800a25e:	1e43      	subs	r3, r0, #1
 800a260:	3901      	subs	r1, #1
 800a262:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a266:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a26a:	4290      	cmp	r0, r2
 800a26c:	d001      	beq.n	800a272 <strcmp+0x14>
 800a26e:	1a80      	subs	r0, r0, r2
 800a270:	e001      	b.n	800a276 <strcmp+0x18>
 800a272:	2800      	cmp	r0, #0
 800a274:	d1f5      	bne.n	800a262 <strcmp+0x4>
 800a276:	4770      	bx	lr

0800a278 <strcasecmp>:
 800a278:	b530      	push	{r4, r5, lr}
 800a27a:	1e42      	subs	r2, r0, #1
 800a27c:	3901      	subs	r1, #1
 800a27e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a282:	4604      	mov	r4, r0
 800a284:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a288:	2b19      	cmp	r3, #25
 800a28a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a28e:	bf98      	it	ls
 800a290:	f100 0420 	addls.w	r4, r0, #32
 800a294:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a298:	2d19      	cmp	r5, #25
 800a29a:	bf98      	it	ls
 800a29c:	3320      	addls	r3, #32
 800a29e:	42a3      	cmp	r3, r4
 800a2a0:	d001      	beq.n	800a2a6 <strcasecmp+0x2e>
 800a2a2:	1ae0      	subs	r0, r4, r3
 800a2a4:	e001      	b.n	800a2aa <strcasecmp+0x32>
 800a2a6:	2800      	cmp	r0, #0
 800a2a8:	d1e9      	bne.n	800a27e <strcasecmp+0x6>
 800a2aa:	bd30      	pop	{r4, r5, pc}

0800a2ac <PropertiesConfig::EnableJSON(bool)>:
 800a2ac:	4a04      	ldr	r2, [pc, #16]	; (800a2c0 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a2ae:	7813      	ldrb	r3, [r2, #0]
 800a2b0:	b118      	cbz	r0, 800a2ba <PropertiesConfig::EnableJSON(bool)+0xe>
 800a2b2:	f043 0301 	orr.w	r3, r3, #1
 800a2b6:	7013      	strb	r3, [r2, #0]
 800a2b8:	4770      	bx	lr
 800a2ba:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a2be:	e7fa      	b.n	800a2b6 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a2c0:	20009be2 	andcs	r9, r0, r2, ror #23

0800a2c4 <HttpDaemon::HttpDaemon()>:
 800a2c4:	4a08      	ldr	r2, [pc, #32]	; (800a2e8 <HttpDaemon::HttpDaemon()+0x24>)
 800a2c6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a2ca:	6002      	str	r2, [r0, #0]
 800a2cc:	2200      	movs	r2, #0
 800a2ce:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a2d2:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a2d6:	2102      	movs	r1, #2
 800a2d8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a2dc:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a2e0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a2e4:	60c2      	str	r2, [r0, #12]
 800a2e6:	4770      	bx	lr
 800a2e8:	08013ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, sp}

0800a2ec <HttpDaemon::Start()>:
 800a2ec:	4b04      	ldr	r3, [pc, #16]	; (800a300 <HttpDaemon::Start()+0x14>)
 800a2ee:	b510      	push	{r4, lr}
 800a2f0:	2150      	movs	r1, #80	; 0x50
 800a2f2:	4604      	mov	r4, r0
 800a2f4:	6818      	ldr	r0, [r3, #0]
 800a2f6:	f005 f987 	bl	800f608 <Network::TcpBegin(unsigned short)>
 800a2fa:	6120      	str	r0, [r4, #16]
 800a2fc:	bd10      	pop	{r4, pc}
 800a2fe:	bf00      	nop
 800a300:	20009614 	andcs	r9, r0, r4, lsl r6

0800a304 <HttpDaemon::ParseMethod(char*)>:
 800a304:	b538      	push	{r3, r4, r5, lr}
 800a306:	4604      	mov	r4, r0
 800a308:	4608      	mov	r0, r1
 800a30a:	491a      	ldr	r1, [pc, #104]	; (800a374 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a30c:	f006 ff18 	bl	8011140 <strtok>
 800a310:	4605      	mov	r5, r0
 800a312:	b360      	cbz	r0, 800a36e <HttpDaemon::ParseMethod(char*)+0x6a>
 800a314:	4918      	ldr	r1, [pc, #96]	; (800a378 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a316:	f7ff ffa2 	bl	800a25e <strcmp>
 800a31a:	b128      	cbz	r0, 800a328 <HttpDaemon::ParseMethod(char*)+0x24>
 800a31c:	4628      	mov	r0, r5
 800a31e:	4917      	ldr	r1, [pc, #92]	; (800a37c <HttpDaemon::ParseMethod(char*)+0x78>)
 800a320:	f7ff ff9d 	bl	800a25e <strcmp>
 800a324:	bb18      	cbnz	r0, 800a36e <HttpDaemon::ParseMethod(char*)+0x6a>
 800a326:	2001      	movs	r0, #1
 800a328:	61e0      	str	r0, [r4, #28]
 800a32a:	4912      	ldr	r1, [pc, #72]	; (800a374 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a32c:	2000      	movs	r0, #0
 800a32e:	f006 ff07 	bl	8011140 <strtok>
 800a332:	b910      	cbnz	r0, 800a33a <HttpDaemon::ParseMethod(char*)+0x36>
 800a334:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a338:	bd38      	pop	{r3, r4, r5, pc}
 800a33a:	6060      	str	r0, [r4, #4]
 800a33c:	4910      	ldr	r1, [pc, #64]	; (800a380 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a33e:	2000      	movs	r0, #0
 800a340:	f006 fefe 	bl	8011140 <strtok>
 800a344:	2800      	cmp	r0, #0
 800a346:	d0f5      	beq.n	800a334 <HttpDaemon::ParseMethod(char*)+0x30>
 800a348:	490e      	ldr	r1, [pc, #56]	; (800a384 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a34a:	f7ff ff88 	bl	800a25e <strcmp>
 800a34e:	2800      	cmp	r0, #0
 800a350:	d1f0      	bne.n	800a334 <HttpDaemon::ParseMethod(char*)+0x30>
 800a352:	490d      	ldr	r1, [pc, #52]	; (800a388 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a354:	f006 fef4 	bl	8011140 <strtok>
 800a358:	2800      	cmp	r0, #0
 800a35a:	d0eb      	beq.n	800a334 <HttpDaemon::ParseMethod(char*)+0x30>
 800a35c:	490b      	ldr	r1, [pc, #44]	; (800a38c <HttpDaemon::ParseMethod(char*)+0x88>)
 800a35e:	f7ff ff7e 	bl	800a25e <strcmp>
 800a362:	2800      	cmp	r0, #0
 800a364:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a368:	bf08      	it	eq
 800a36a:	20c8      	moveq	r0, #200	; 0xc8
 800a36c:	e7e4      	b.n	800a338 <HttpDaemon::ParseMethod(char*)+0x34>
 800a36e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a372:	e7e1      	b.n	800a338 <HttpDaemon::ParseMethod(char*)+0x34>
 800a374:	08013533 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, ip, sp}
 800a378:	08013880 	stmdaeq	r1, {r7, fp, ip, sp}
 800a37c:	08013884 	stmdaeq	r1, {r2, r7, fp, ip, sp}
 800a380:	080138ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, fp, ip, sp}
 800a384:	08013889 	stmdaeq	r1, {r0, r3, r7, fp, ip, sp}
 800a388:	0801388e 	stmdaeq	r1, {r1, r2, r3, r7, fp, ip, sp}
 800a38c:	08013891 	stmdaeq	r1, {r0, r4, r7, fp, ip, sp}

0800a390 <HttpDaemon::ParseHeaderField(char*)>:
 800a390:	b538      	push	{r3, r4, r5, lr}
 800a392:	4605      	mov	r5, r0
 800a394:	4608      	mov	r0, r1
 800a396:	491d      	ldr	r1, [pc, #116]	; (800a40c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a398:	f006 fed2 	bl	8011140 <strtok>
 800a39c:	4604      	mov	r4, r0
 800a39e:	b910      	cbnz	r0, 800a3a6 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a3a0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a3a4:	bd38      	pop	{r3, r4, r5, pc}
 800a3a6:	491a      	ldr	r1, [pc, #104]	; (800a410 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a3a8:	f7ff ff66 	bl	800a278 <strcasecmp>
 800a3ac:	b970      	cbnz	r0, 800a3cc <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a3ae:	4919      	ldr	r1, [pc, #100]	; (800a414 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a3b0:	f006 fec6 	bl	8011140 <strtok>
 800a3b4:	2800      	cmp	r0, #0
 800a3b6:	d0f3      	beq.n	800a3a0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3b8:	4917      	ldr	r1, [pc, #92]	; (800a418 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a3ba:	f7ff ff50 	bl	800a25e <strcmp>
 800a3be:	b108      	cbz	r0, 800a3c4 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a3c0:	20c8      	movs	r0, #200	; 0xc8
 800a3c2:	e7ef      	b.n	800a3a4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a3c4:	2301      	movs	r3, #1
 800a3c6:	f885 3020 	strb.w	r3, [r5, #32]
 800a3ca:	e7f9      	b.n	800a3c0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3cc:	4620      	mov	r0, r4
 800a3ce:	4913      	ldr	r1, [pc, #76]	; (800a41c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a3d0:	f7ff ff52 	bl	800a278 <strcasecmp>
 800a3d4:	4604      	mov	r4, r0
 800a3d6:	2800      	cmp	r0, #0
 800a3d8:	d1f2      	bne.n	800a3c0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3da:	4911      	ldr	r1, [pc, #68]	; (800a420 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a3dc:	f006 feb0 	bl	8011140 <strtok>
 800a3e0:	2800      	cmp	r0, #0
 800a3e2:	d0dd      	beq.n	800a3a0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3e4:	1e42      	subs	r2, r0, #1
 800a3e6:	4623      	mov	r3, r4
 800a3e8:	200a      	movs	r0, #10
 800a3ea:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a3ee:	b909      	cbnz	r1, 800a3f4 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a3f0:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a3f2:	e7e5      	b.n	800a3c0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a3f4:	3930      	subs	r1, #48	; 0x30
 800a3f6:	2909      	cmp	r1, #9
 800a3f8:	d8d2      	bhi.n	800a3a0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a3fa:	fb00 1303 	mla	r3, r0, r3, r1
 800a3fe:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a402:	d9f2      	bls.n	800a3ea <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a404:	f240 109d 	movw	r0, #413	; 0x19d
 800a408:	e7cc      	b.n	800a3a4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a40a:	bf00      	nop
 800a40c:	08013895 	stmdaeq	r1, {r0, r2, r4, r7, fp, ip, sp}
 800a410:	08013897 	stmdaeq	r1, {r0, r1, r2, r4, r7, fp, ip, sp}
 800a414:	080138a4 	stmdaeq	r1, {r2, r5, r7, fp, ip, sp}
 800a418:	080138a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, fp, ip, sp}
 800a41c:	080138b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, ip, sp}
 800a420:	08013533 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, ip, sp}

0800a424 <HttpDaemon::ParseRequest()>:
 800a424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a426:	2400      	movs	r4, #0
 800a428:	4605      	mov	r5, r0
 800a42a:	4622      	mov	r2, r4
 800a42c:	4626      	mov	r6, r4
 800a42e:	68c1      	ldr	r1, [r0, #12]
 800a430:	f880 4020 	strb.w	r4, [r0, #32]
 800a434:	6244      	str	r4, [r0, #36]	; 0x24
 800a436:	8aab      	ldrh	r3, [r5, #20]
 800a438:	42a3      	cmp	r3, r4
 800a43a:	d91d      	bls.n	800a478 <HttpDaemon::ParseRequest()+0x54>
 800a43c:	68eb      	ldr	r3, [r5, #12]
 800a43e:	5d18      	ldrb	r0, [r3, r4]
 800a440:	280a      	cmp	r0, #10
 800a442:	d10e      	bne.n	800a462 <HttpDaemon::ParseRequest()+0x3e>
 800a444:	4423      	add	r3, r4
 800a446:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a44a:	1c57      	adds	r7, r2, #1
 800a44c:	b962      	cbnz	r2, 800a468 <HttpDaemon::ParseRequest()+0x44>
 800a44e:	4628      	mov	r0, r5
 800a450:	f7ff ff58 	bl	800a304 <HttpDaemon::ParseMethod(char*)>
 800a454:	28c8      	cmp	r0, #200	; 0xc8
 800a456:	d110      	bne.n	800a47a <HttpDaemon::ParseRequest()+0x56>
 800a458:	463a      	mov	r2, r7
 800a45a:	68e9      	ldr	r1, [r5, #12]
 800a45c:	3401      	adds	r4, #1
 800a45e:	b2a4      	uxth	r4, r4
 800a460:	4421      	add	r1, r4
 800a462:	3401      	adds	r4, #1
 800a464:	b2a4      	uxth	r4, r4
 800a466:	e7e6      	b.n	800a436 <HttpDaemon::ParseRequest()+0x12>
 800a468:	7808      	ldrb	r0, [r1, #0]
 800a46a:	b968      	cbnz	r0, 800a488 <HttpDaemon::ParseRequest()+0x64>
 800a46c:	696b      	ldr	r3, [r5, #20]
 800a46e:	3b01      	subs	r3, #1
 800a470:	1b1b      	subs	r3, r3, r4
 800a472:	b29b      	uxth	r3, r3
 800a474:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a476:	b90b      	cbnz	r3, 800a47c <HttpDaemon::ParseRequest()+0x58>
 800a478:	20c8      	movs	r0, #200	; 0xc8
 800a47a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a47c:	68ea      	ldr	r2, [r5, #12]
 800a47e:	3401      	adds	r4, #1
 800a480:	4414      	add	r4, r2
 800a482:	60ac      	str	r4, [r5, #8]
 800a484:	54e0      	strb	r0, [r4, r3]
 800a486:	e7f7      	b.n	800a478 <HttpDaemon::ParseRequest()+0x54>
 800a488:	4628      	mov	r0, r5
 800a48a:	f7ff ff81 	bl	800a390 <HttpDaemon::ParseHeaderField(char*)>
 800a48e:	e7e1      	b.n	800a454 <HttpDaemon::ParseRequest()+0x30>

0800a490 <HttpDaemon::HandleGetTxt()>:
 800a490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a494:	6846      	ldr	r6, [r0, #4]
 800a496:	4607      	mov	r7, r0
 800a498:	1db4      	adds	r4, r6, #6
 800a49a:	4622      	mov	r2, r4
 800a49c:	4613      	mov	r3, r2
 800a49e:	7819      	ldrb	r1, [r3, #0]
 800a4a0:	3201      	adds	r2, #1
 800a4a2:	2900      	cmp	r1, #0
 800a4a4:	d1fa      	bne.n	800a49c <HttpDaemon::HandleGetTxt()+0xc>
 800a4a6:	1b1b      	subs	r3, r3, r4
 800a4a8:	2b04      	cmp	r3, #4
 800a4aa:	d803      	bhi.n	800a4b4 <HttpDaemon::HandleGetTxt()+0x24>
 800a4ac:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a4b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a4b4:	3b04      	subs	r3, #4
 800a4b6:	4914      	ldr	r1, [pc, #80]	; (800a508 <HttpDaemon::HandleGetTxt()+0x78>)
 800a4b8:	18e0      	adds	r0, r4, r3
 800a4ba:	f7ff fed0 	bl	800a25e <strcmp>
 800a4be:	2800      	cmp	r0, #0
 800a4c0:	d1f4      	bne.n	800a4ac <HttpDaemon::HandleGetTxt()+0x1c>
 800a4c2:	4b12      	ldr	r3, [pc, #72]	; (800a50c <HttpDaemon::HandleGetTxt()+0x7c>)
 800a4c4:	2001      	movs	r0, #1
 800a4c6:	f893 8000 	ldrb.w	r8, [r3]
 800a4ca:	f7ff feef 	bl	800a2ac <PropertiesConfig::EnableJSON(bool)>
 800a4ce:	4b10      	ldr	r3, [pc, #64]	; (800a510 <HttpDaemon::HandleGetTxt()+0x80>)
 800a4d0:	f240 529b 	movw	r2, #1435	; 0x59b
 800a4d4:	4621      	mov	r1, r4
 800a4d6:	6818      	ldr	r0, [r3, #0]
 800a4d8:	f7ff fabc 	bl	8009a54 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a4dc:	4605      	mov	r5, r0
 800a4de:	f008 0801 	and.w	r8, r8, #1
 800a4e2:	4640      	mov	r0, r8
 800a4e4:	f7ff fee2 	bl	800a2ac <PropertiesConfig::EnableJSON(bool)>
 800a4e8:	2d00      	cmp	r5, #0
 800a4ea:	d0df      	beq.n	800a4ac <HttpDaemon::HandleGetTxt()+0x1c>
 800a4ec:	847d      	strh	r5, [r7, #34]	; 0x22
 800a4ee:	4b09      	ldr	r3, [pc, #36]	; (800a514 <HttpDaemon::HandleGetTxt()+0x84>)
 800a4f0:	3506      	adds	r5, #6
 800a4f2:	442e      	add	r6, r5
 800a4f4:	42b4      	cmp	r4, r6
 800a4f6:	d101      	bne.n	800a4fc <HttpDaemon::HandleGetTxt()+0x6c>
 800a4f8:	20c8      	movs	r0, #200	; 0xc8
 800a4fa:	e7d9      	b.n	800a4b0 <HttpDaemon::HandleGetTxt()+0x20>
 800a4fc:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a500:	f803 2b01 	strb.w	r2, [r3], #1
 800a504:	e7f6      	b.n	800a4f4 <HttpDaemon::HandleGetTxt()+0x64>
 800a506:	bf00      	nop
 800a508:	080137fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 800a50c:	20009be2 	andcs	r9, r0, r2, ror #23
 800a510:	20000114 	andcs	r0, r0, r4, lsl r1
 800a514:	20000118 	andcs	r0, r0, r8, lsl r1

0800a518 <HttpDaemon::HandleGet()>:
 800a518:	b570      	push	{r4, r5, r6, lr}
 800a51a:	6845      	ldr	r5, [r0, #4]
 800a51c:	4604      	mov	r4, r0
 800a51e:	493e      	ldr	r1, [pc, #248]	; (800a618 <HttpDaemon::HandleGet()+0x100>)
 800a520:	4628      	mov	r0, r5
 800a522:	f7ff fe9c 	bl	800a25e <strcmp>
 800a526:	b120      	cbz	r0, 800a532 <HttpDaemon::HandleGet()+0x1a>
 800a528:	4628      	mov	r0, r5
 800a52a:	493c      	ldr	r1, [pc, #240]	; (800a61c <HttpDaemon::HandleGet()+0x104>)
 800a52c:	f7ff fe97 	bl	800a25e <strcmp>
 800a530:	b950      	cbnz	r0, 800a548 <HttpDaemon::HandleGet()+0x30>
 800a532:	4b3b      	ldr	r3, [pc, #236]	; (800a620 <HttpDaemon::HandleGet()+0x108>)
 800a534:	493b      	ldr	r1, [pc, #236]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a536:	483c      	ldr	r0, [pc, #240]	; (800a628 <HttpDaemon::HandleGet()+0x110>)
 800a538:	6023      	str	r3, [r4, #0]
 800a53a:	f000 fa67 	bl	800aa0c <get_file_content(char const*, char*)>
 800a53e:	2800      	cmp	r0, #0
 800a540:	dd2f      	ble.n	800a5a2 <HttpDaemon::HandleGet()+0x8a>
 800a542:	8460      	strh	r0, [r4, #34]	; 0x22
 800a544:	20c8      	movs	r0, #200	; 0xc8
 800a546:	bd70      	pop	{r4, r5, r6, pc}
 800a548:	4628      	mov	r0, r5
 800a54a:	4938      	ldr	r1, [pc, #224]	; (800a62c <HttpDaemon::HandleGet()+0x114>)
 800a54c:	f7ff fe87 	bl	800a25e <strcmp>
 800a550:	b920      	cbnz	r0, 800a55c <HttpDaemon::HandleGet()+0x44>
 800a552:	4b37      	ldr	r3, [pc, #220]	; (800a630 <HttpDaemon::HandleGet()+0x118>)
 800a554:	4933      	ldr	r1, [pc, #204]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a556:	4837      	ldr	r0, [pc, #220]	; (800a634 <HttpDaemon::HandleGet()+0x11c>)
 800a558:	6023      	str	r3, [r4, #0]
 800a55a:	e7ee      	b.n	800a53a <HttpDaemon::HandleGet()+0x22>
 800a55c:	4628      	mov	r0, r5
 800a55e:	4936      	ldr	r1, [pc, #216]	; (800a638 <HttpDaemon::HandleGet()+0x120>)
 800a560:	f7ff fe7d 	bl	800a25e <strcmp>
 800a564:	b190      	cbz	r0, 800a58c <HttpDaemon::HandleGet()+0x74>
 800a566:	4a35      	ldr	r2, [pc, #212]	; (800a63c <HttpDaemon::HandleGet()+0x124>)
 800a568:	1e6b      	subs	r3, r5, #1
 800a56a:	1d69      	adds	r1, r5, #5
 800a56c:	428b      	cmp	r3, r1
 800a56e:	d112      	bne.n	800a596 <HttpDaemon::HandleGet()+0x7e>
 800a570:	4b33      	ldr	r3, [pc, #204]	; (800a640 <HttpDaemon::HandleGet()+0x128>)
 800a572:	3506      	adds	r5, #6
 800a574:	4628      	mov	r0, r5
 800a576:	4933      	ldr	r1, [pc, #204]	; (800a644 <HttpDaemon::HandleGet()+0x12c>)
 800a578:	6023      	str	r3, [r4, #0]
 800a57a:	f7ff fe70 	bl	800a25e <strcmp>
 800a57e:	b998      	cbnz	r0, 800a5a8 <HttpDaemon::HandleGet()+0x90>
 800a580:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a584:	4827      	ldr	r0, [pc, #156]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a586:	f000 f9c9 	bl	800a91c <remoteconfig::json_get_list(char*, unsigned short)>
 800a58a:	e7d8      	b.n	800a53e <HttpDaemon::HandleGet()+0x26>
 800a58c:	4b2e      	ldr	r3, [pc, #184]	; (800a648 <HttpDaemon::HandleGet()+0x130>)
 800a58e:	4925      	ldr	r1, [pc, #148]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a590:	482e      	ldr	r0, [pc, #184]	; (800a64c <HttpDaemon::HandleGet()+0x134>)
 800a592:	6023      	str	r3, [r4, #0]
 800a594:	e7d1      	b.n	800a53a <HttpDaemon::HandleGet()+0x22>
 800a596:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a59a:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a59e:	4286      	cmp	r6, r0
 800a5a0:	d0e4      	beq.n	800a56c <HttpDaemon::HandleGet()+0x54>
 800a5a2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a5a6:	e7ce      	b.n	800a546 <HttpDaemon::HandleGet()+0x2e>
 800a5a8:	4628      	mov	r0, r5
 800a5aa:	4929      	ldr	r1, [pc, #164]	; (800a650 <HttpDaemon::HandleGet()+0x138>)
 800a5ac:	f7ff fe57 	bl	800a25e <strcmp>
 800a5b0:	b928      	cbnz	r0, 800a5be <HttpDaemon::HandleGet()+0xa6>
 800a5b2:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5b6:	481b      	ldr	r0, [pc, #108]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a5b8:	f000 f9e4 	bl	800a984 <remoteconfig::json_get_version(char*, unsigned short)>
 800a5bc:	e7bf      	b.n	800a53e <HttpDaemon::HandleGet()+0x26>
 800a5be:	4628      	mov	r0, r5
 800a5c0:	4924      	ldr	r1, [pc, #144]	; (800a654 <HttpDaemon::HandleGet()+0x13c>)
 800a5c2:	f7ff fe4c 	bl	800a25e <strcmp>
 800a5c6:	b948      	cbnz	r0, 800a5dc <HttpDaemon::HandleGet()+0xc4>
 800a5c8:	4b23      	ldr	r3, [pc, #140]	; (800a658 <HttpDaemon::HandleGet()+0x140>)
 800a5ca:	681b      	ldr	r3, [r3, #0]
 800a5cc:	7bdb      	ldrb	r3, [r3, #15]
 800a5ce:	b303      	cbz	r3, 800a612 <HttpDaemon::HandleGet()+0xfa>
 800a5d0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5d4:	4813      	ldr	r0, [pc, #76]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a5d6:	f000 f9f1 	bl	800a9bc <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a5da:	e7b0      	b.n	800a53e <HttpDaemon::HandleGet()+0x26>
 800a5dc:	4628      	mov	r0, r5
 800a5de:	491f      	ldr	r1, [pc, #124]	; (800a65c <HttpDaemon::HandleGet()+0x144>)
 800a5e0:	f7ff fe3d 	bl	800a25e <strcmp>
 800a5e4:	b928      	cbnz	r0, 800a5f2 <HttpDaemon::HandleGet()+0xda>
 800a5e6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a5ea:	480e      	ldr	r0, [pc, #56]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a5ec:	f000 f9f6 	bl	800a9dc <remoteconfig::json_get_display(char*, unsigned short)>
 800a5f0:	e7a5      	b.n	800a53e <HttpDaemon::HandleGet()+0x26>
 800a5f2:	4628      	mov	r0, r5
 800a5f4:	491a      	ldr	r1, [pc, #104]	; (800a660 <HttpDaemon::HandleGet()+0x148>)
 800a5f6:	f7ff fe32 	bl	800a25e <strcmp>
 800a5fa:	b928      	cbnz	r0, 800a608 <HttpDaemon::HandleGet()+0xf0>
 800a5fc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a600:	4808      	ldr	r0, [pc, #32]	; (800a624 <HttpDaemon::HandleGet()+0x10c>)
 800a602:	f000 f9fb 	bl	800a9fc <remoteconfig::json_get_directory(char*, unsigned short)>
 800a606:	e79a      	b.n	800a53e <HttpDaemon::HandleGet()+0x26>
 800a608:	4620      	mov	r0, r4
 800a60a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a60e:	f7ff bf3f 	b.w	800a490 <HttpDaemon::HandleGetTxt()>
 800a612:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a616:	e796      	b.n	800a546 <HttpDaemon::HandleGet()+0x2e>
 800a618:	080138ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, fp, ip, sp}
 800a61c:	080138c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, fp, ip, sp}
 800a620:	08013ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, sp}
 800a624:	20000118 	andcs	r0, r0, r8, lsl r1
 800a628:	080138c8 	stmdaeq	r1, {r3, r6, r7, fp, ip, sp}
 800a62c:	080138d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, fp, ip, sp}
 800a630:	08013afa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, fp, ip, sp}
 800a634:	080138d4 	stmdaeq	r1, {r2, r4, r6, r7, fp, ip, sp}
 800a638:	080138df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp}
 800a63c:	080138e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, fp, ip, sp}
 800a640:	08013b3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, fp, ip, sp}
 800a644:	080138f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, sp}
 800a648:	08013b1a 	stmdaeq	r1, {r1, r3, r4, r8, r9, fp, ip, sp}
 800a64c:	080138e0 	stmdaeq	r1, {r5, r6, r7, fp, ip, sp}
 800a650:	080138f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, fp, ip, sp}
 800a654:	080138fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, fp, ip, sp}
 800a658:	20000114 	andcs	r0, r0, r4, lsl r1
 800a65c:	08013904 	stmdaeq	r1, {r2, r8, fp, ip, sp}
 800a660:	0801390c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp}

0800a664 <HttpDaemon::HandlePost(bool)>:
 800a664:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a666:	4604      	mov	r4, r0
 800a668:	2900      	cmp	r1, #0
 800a66a:	f040 808a 	bne.w	800a782 <HttpDaemon::HandlePost(bool)+0x11e>
 800a66e:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a672:	2b00      	cmp	r3, #0
 800a674:	d05a      	beq.n	800a72c <HttpDaemon::HandlePost(bool)+0xc8>
 800a676:	6845      	ldr	r5, [r0, #4]
 800a678:	4944      	ldr	r1, [pc, #272]	; (800a78c <HttpDaemon::HandlePost(bool)+0x128>)
 800a67a:	4628      	mov	r0, r5
 800a67c:	f7ff fdef 	bl	800a25e <strcmp>
 800a680:	2800      	cmp	r0, #0
 800a682:	bf0c      	ite	eq
 800a684:	2301      	moveq	r3, #1
 800a686:	2300      	movne	r3, #0
 800a688:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a68c:	d052      	beq.n	800a734 <HttpDaemon::HandlePost(bool)+0xd0>
 800a68e:	4628      	mov	r0, r5
 800a690:	493f      	ldr	r1, [pc, #252]	; (800a790 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a692:	f7ff fde4 	bl	800a25e <strcmp>
 800a696:	2800      	cmp	r0, #0
 800a698:	d04c      	beq.n	800a734 <HttpDaemon::HandlePost(bool)+0xd0>
 800a69a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a69e:	e047      	b.n	800a730 <HttpDaemon::HandlePost(bool)+0xcc>
 800a6a0:	493c      	ldr	r1, [pc, #240]	; (800a794 <HttpDaemon::HandlePost(bool)+0x130>)
 800a6a2:	68a0      	ldr	r0, [r4, #8]
 800a6a4:	f10d 0207 	add.w	r2, sp, #7
 800a6a8:	f005 fff6 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6ac:	b9d8      	cbnz	r0, 800a6e6 <HttpDaemon::HandlePost(bool)+0x82>
 800a6ae:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a6b2:	4b39      	ldr	r3, [pc, #228]	; (800a798 <HttpDaemon::HandlePost(bool)+0x134>)
 800a6b4:	fab6 f186 	clz	r1, r6
 800a6b8:	681d      	ldr	r5, [r3, #0]
 800a6ba:	0949      	lsrs	r1, r1, #5
 800a6bc:	69a8      	ldr	r0, [r5, #24]
 800a6be:	b138      	cbz	r0, 800a6d0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6c0:	6803      	ldr	r3, [r0, #0]
 800a6c2:	7429      	strb	r1, [r5, #16]
 800a6c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a6c6:	4798      	blx	r3
 800a6c8:	b116      	cbz	r6, 800a6d0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a6ca:	4b34      	ldr	r3, [pc, #208]	; (800a79c <HttpDaemon::HandlePost(bool)+0x138>)
 800a6cc:	681b      	ldr	r3, [r3, #0]
 800a6ce:	606b      	str	r3, [r5, #4]
 800a6d0:	4b33      	ldr	r3, [pc, #204]	; (800a7a0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a6d2:	f240 519f 	movw	r1, #1439	; 0x59f
 800a6d6:	4a33      	ldr	r2, [pc, #204]	; (800a7a4 <HttpDaemon::HandlePost(bool)+0x140>)
 800a6d8:	4833      	ldr	r0, [pc, #204]	; (800a7a8 <HttpDaemon::HandlePost(bool)+0x144>)
 800a6da:	6023      	str	r3, [r4, #0]
 800a6dc:	f7fe fe0a 	bl	80092f4 <snprintf>
 800a6e0:	8460      	strh	r0, [r4, #34]	; 0x22
 800a6e2:	20c8      	movs	r0, #200	; 0xc8
 800a6e4:	e024      	b.n	800a730 <HttpDaemon::HandlePost(bool)+0xcc>
 800a6e6:	4931      	ldr	r1, [pc, #196]	; (800a7ac <HttpDaemon::HandlePost(bool)+0x148>)
 800a6e8:	68a0      	ldr	r0, [r4, #8]
 800a6ea:	f10d 0207 	add.w	r2, sp, #7
 800a6ee:	f005 ffd3 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6f2:	b9d8      	cbnz	r0, 800a72c <HttpDaemon::HandlePost(bool)+0xc8>
 800a6f4:	4b2e      	ldr	r3, [pc, #184]	; (800a7b0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a6f6:	6818      	ldr	r0, [r3, #0]
 800a6f8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a6fc:	b11b      	cbz	r3, 800a706 <HttpDaemon::HandlePost(bool)+0xa2>
 800a6fe:	2104      	movs	r1, #4
 800a700:	f006 fb5a 	bl	8010db8 <LedBlink::SetMode(ledblink::Mode)>
 800a704:	e7e4      	b.n	800a6d0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a706:	2102      	movs	r1, #2
 800a708:	e7fa      	b.n	800a700 <HttpDaemon::HandlePost(bool)+0x9c>
 800a70a:	4b2a      	ldr	r3, [pc, #168]	; (800a7b4 <HttpDaemon::HandlePost(bool)+0x150>)
 800a70c:	2001      	movs	r0, #1
 800a70e:	781d      	ldrb	r5, [r3, #0]
 800a710:	f7ff fdcc 	bl	800a2ac <PropertiesConfig::EnableJSON(bool)>
 800a714:	4b28      	ldr	r3, [pc, #160]	; (800a7b8 <HttpDaemon::HandlePost(bool)+0x154>)
 800a716:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a718:	6818      	ldr	r0, [r3, #0]
 800a71a:	68a1      	ldr	r1, [r4, #8]
 800a71c:	f005 0501 	and.w	r5, r5, #1
 800a720:	f7ff fa50 	bl	8009bc4 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a724:	4628      	mov	r0, r5
 800a726:	f7ff fdc1 	bl	800a2ac <PropertiesConfig::EnableJSON(bool)>
 800a72a:	e7d1      	b.n	800a6d0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a72c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a730:	b002      	add	sp, #8
 800a732:	bd70      	pop	{r4, r5, r6, pc}
 800a734:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a736:	6962      	ldr	r2, [r4, #20]
 800a738:	429a      	cmp	r2, r3
 800a73a:	dbd2      	blt.n	800a6e2 <HttpDaemon::HandlePost(bool)+0x7e>
 800a73c:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a73e:	2b00      	cmp	r3, #0
 800a740:	d0cf      	beq.n	800a6e2 <HttpDaemon::HandlePost(bool)+0x7e>
 800a742:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a746:	2b00      	cmp	r3, #0
 800a748:	d0df      	beq.n	800a70a <HttpDaemon::HandlePost(bool)+0xa6>
 800a74a:	2201      	movs	r2, #1
 800a74c:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a74e:	68a0      	ldr	r0, [r4, #8]
 800a750:	f005 fd14 	bl	801017c <properties::convert_json_file(char*, unsigned short, bool)>
 800a754:	2800      	cmp	r0, #0
 800a756:	dde9      	ble.n	800a72c <HttpDaemon::HandlePost(bool)+0xc8>
 800a758:	4918      	ldr	r1, [pc, #96]	; (800a7bc <HttpDaemon::HandlePost(bool)+0x158>)
 800a75a:	68a0      	ldr	r0, [r4, #8]
 800a75c:	f10d 0207 	add.w	r2, sp, #7
 800a760:	f005 ff9a 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a764:	2800      	cmp	r0, #0
 800a766:	d19b      	bne.n	800a6a0 <HttpDaemon::HandlePost(bool)+0x3c>
 800a768:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a76c:	2b00      	cmp	r3, #0
 800a76e:	d0af      	beq.n	800a6d0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a770:	4b11      	ldr	r3, [pc, #68]	; (800a7b8 <HttpDaemon::HandlePost(bool)+0x154>)
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	7b9b      	ldrb	r3, [r3, #14]
 800a776:	2b00      	cmp	r3, #0
 800a778:	d0d8      	beq.n	800a72c <HttpDaemon::HandlePost(bool)+0xc8>
 800a77a:	4b11      	ldr	r3, [pc, #68]	; (800a7c0 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a77c:	6818      	ldr	r0, [r3, #0]
 800a77e:	f006 fb9f 	bl	8010ec0 <Hardware::Reboot()>
 800a782:	68c3      	ldr	r3, [r0, #12]
 800a784:	6083      	str	r3, [r0, #8]
 800a786:	6943      	ldr	r3, [r0, #20]
 800a788:	8483      	strh	r3, [r0, #36]	; 0x24
 800a78a:	e7da      	b.n	800a742 <HttpDaemon::HandlePost(bool)+0xde>
 800a78c:	08013916 	stmdaeq	r1, {r1, r2, r4, r8, fp, ip, sp}
 800a790:	080138b2 	stmdaeq	r1, {r1, r4, r5, r7, fp, ip, sp}
 800a794:	08013904 	stmdaeq	r1, {r2, r8, fp, ip, sp}
 800a798:	20009be4 	andcs	r9, r0, r4, ror #23
 800a79c:	20009cec 	andcs	r9, r0, ip, ror #25
 800a7a0:	08013ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, sp}
 800a7a4:	08013933 	stmdaeq	r1, {r0, r1, r4, r5, r8, fp, ip, sp}
 800a7a8:	20000118 	andcs	r0, r0, r8, lsl r1
 800a7ac:	0801392a 	stmdaeq	r1, {r1, r3, r5, r8, fp, ip, sp}
 800a7b0:	20009cd0 	ldrdcs	r9, [r0], -r0
 800a7b4:	20009be2 	andcs	r9, r0, r2, ror #23
 800a7b8:	20000114 	andcs	r0, r0, r4, lsl r1
 800a7bc:	08013923 	stmdaeq	r1, {r0, r1, r5, r8, fp, ip, sp}
 800a7c0:	20009cd4 	ldrdcs	r9, [r0], -r4

0800a7c4 <HttpDaemon::Run()>:
 800a7c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7c6:	4e46      	ldr	r6, [pc, #280]	; (800a8e0 <HttpDaemon::Run()+0x11c>)
 800a7c8:	4604      	mov	r4, r0
 800a7ca:	6901      	ldr	r1, [r0, #16]
 800a7cc:	f100 020c 	add.w	r2, r0, #12
 800a7d0:	6830      	ldr	r0, [r6, #0]
 800a7d2:	f004 ff1c 	bl	800f60e <Network::TcpRead(int, unsigned char const**)>
 800a7d6:	6160      	str	r0, [r4, #20]
 800a7d8:	2800      	cmp	r0, #0
 800a7da:	d05b      	beq.n	800a894 <HttpDaemon::Run()+0xd0>
 800a7dc:	69a3      	ldr	r3, [r4, #24]
 800a7de:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a7e2:	d159      	bne.n	800a898 <HttpDaemon::Run()+0xd4>
 800a7e4:	4620      	mov	r0, r4
 800a7e6:	f7ff fe1d 	bl	800a424 <HttpDaemon::ParseRequest()>
 800a7ea:	28c8      	cmp	r0, #200	; 0xc8
 800a7ec:	61a0      	str	r0, [r4, #24]
 800a7ee:	d106      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a7f0:	69e3      	ldr	r3, [r4, #28]
 800a7f2:	2b00      	cmp	r3, #0
 800a7f4:	d142      	bne.n	800a87c <HttpDaemon::Run()+0xb8>
 800a7f6:	4620      	mov	r0, r4
 800a7f8:	f7ff fe8e 	bl	800a518 <HttpDaemon::HandleGet()>
 800a7fc:	61a0      	str	r0, [r4, #24]
 800a7fe:	69a3      	ldr	r3, [r4, #24]
 800a800:	2bc8      	cmp	r3, #200	; 0xc8
 800a802:	d06b      	beq.n	800a8dc <HttpDaemon::Run()+0x118>
 800a804:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a808:	d05e      	beq.n	800a8c8 <HttpDaemon::Run()+0x104>
 800a80a:	dc4e      	bgt.n	800a8aa <HttpDaemon::Run()+0xe6>
 800a80c:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a810:	d05c      	beq.n	800a8cc <HttpDaemon::Run()+0x108>
 800a812:	f240 129d 	movw	r2, #413	; 0x19d
 800a816:	4293      	cmp	r3, r2
 800a818:	d05a      	beq.n	800a8d0 <HttpDaemon::Run()+0x10c>
 800a81a:	4d32      	ldr	r5, [pc, #200]	; (800a8e4 <HttpDaemon::Run()+0x120>)
 800a81c:	4a32      	ldr	r2, [pc, #200]	; (800a8e8 <HttpDaemon::Run()+0x124>)
 800a81e:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a822:	bf18      	it	ne
 800a824:	4615      	movne	r5, r2
 800a826:	4a31      	ldr	r2, [pc, #196]	; (800a8ec <HttpDaemon::Run()+0x128>)
 800a828:	f240 519f 	movw	r1, #1439	; 0x59f
 800a82c:	6022      	str	r2, [r4, #0]
 800a82e:	e9cd 5500 	strd	r5, r5, [sp]
 800a832:	4a2f      	ldr	r2, [pc, #188]	; (800a8f0 <HttpDaemon::Run()+0x12c>)
 800a834:	482f      	ldr	r0, [pc, #188]	; (800a8f4 <HttpDaemon::Run()+0x130>)
 800a836:	f7fe fd5d 	bl	80092f4 <snprintf>
 800a83a:	8460      	strh	r0, [r4, #34]	; 0x22
 800a83c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a83e:	f240 519f 	movw	r1, #1439	; 0x59f
 800a842:	9303      	str	r3, [sp, #12]
 800a844:	6823      	ldr	r3, [r4, #0]
 800a846:	4a2c      	ldr	r2, [pc, #176]	; (800a8f8 <HttpDaemon::Run()+0x134>)
 800a848:	9302      	str	r3, [sp, #8]
 800a84a:	4b2c      	ldr	r3, [pc, #176]	; (800a8fc <HttpDaemon::Run()+0x138>)
 800a84c:	68e0      	ldr	r0, [r4, #12]
 800a84e:	e9cd 5300 	strd	r5, r3, [sp]
 800a852:	69a3      	ldr	r3, [r4, #24]
 800a854:	f7fe fd4e 	bl	80092f4 <snprintf>
 800a858:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a85c:	b283      	uxth	r3, r0
 800a85e:	6830      	ldr	r0, [r6, #0]
 800a860:	f004 fed9 	bl	800f616 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a864:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a866:	4a23      	ldr	r2, [pc, #140]	; (800a8f4 <HttpDaemon::Run()+0x130>)
 800a868:	6921      	ldr	r1, [r4, #16]
 800a86a:	6830      	ldr	r0, [r6, #0]
 800a86c:	f004 fed3 	bl	800f616 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a870:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a874:	2302      	movs	r3, #2
 800a876:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a87a:	e00b      	b.n	800a894 <HttpDaemon::Run()+0xd0>
 800a87c:	2b01      	cmp	r3, #1
 800a87e:	d1be      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a880:	2100      	movs	r1, #0
 800a882:	4620      	mov	r0, r4
 800a884:	f7ff feee 	bl	800a664 <HttpDaemon::HandlePost(bool)>
 800a888:	28c8      	cmp	r0, #200	; 0xc8
 800a88a:	61a0      	str	r0, [r4, #24]
 800a88c:	d1b7      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a88e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a890:	2b00      	cmp	r3, #0
 800a892:	d1b4      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a894:	b004      	add	sp, #16
 800a896:	bd70      	pop	{r4, r5, r6, pc}
 800a898:	2bc8      	cmp	r3, #200	; 0xc8
 800a89a:	d1b0      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a89c:	69e1      	ldr	r1, [r4, #28]
 800a89e:	2901      	cmp	r1, #1
 800a8a0:	d1ad      	bne.n	800a7fe <HttpDaemon::Run()+0x3a>
 800a8a2:	4620      	mov	r0, r4
 800a8a4:	f7ff fede 	bl	800a664 <HttpDaemon::HandlePost(bool)>
 800a8a8:	e7a8      	b.n	800a7fc <HttpDaemon::Run()+0x38>
 800a8aa:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a8ae:	4293      	cmp	r3, r2
 800a8b0:	d010      	beq.n	800a8d4 <HttpDaemon::Run()+0x110>
 800a8b2:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a8b6:	4293      	cmp	r3, r2
 800a8b8:	d00e      	beq.n	800a8d8 <HttpDaemon::Run()+0x114>
 800a8ba:	4d11      	ldr	r5, [pc, #68]	; (800a900 <HttpDaemon::Run()+0x13c>)
 800a8bc:	4a0a      	ldr	r2, [pc, #40]	; (800a8e8 <HttpDaemon::Run()+0x124>)
 800a8be:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a8c2:	bf18      	it	ne
 800a8c4:	4615      	movne	r5, r2
 800a8c6:	e7ae      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8c8:	4d0e      	ldr	r5, [pc, #56]	; (800a904 <HttpDaemon::Run()+0x140>)
 800a8ca:	e7ac      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8cc:	4d0e      	ldr	r5, [pc, #56]	; (800a908 <HttpDaemon::Run()+0x144>)
 800a8ce:	e7aa      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8d0:	4d0e      	ldr	r5, [pc, #56]	; (800a90c <HttpDaemon::Run()+0x148>)
 800a8d2:	e7a8      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8d4:	4d0e      	ldr	r5, [pc, #56]	; (800a910 <HttpDaemon::Run()+0x14c>)
 800a8d6:	e7a6      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8d8:	4d0e      	ldr	r5, [pc, #56]	; (800a914 <HttpDaemon::Run()+0x150>)
 800a8da:	e7a4      	b.n	800a826 <HttpDaemon::Run()+0x62>
 800a8dc:	4d0e      	ldr	r5, [pc, #56]	; (800a918 <HttpDaemon::Run()+0x154>)
 800a8de:	e7ad      	b.n	800a83c <HttpDaemon::Run()+0x78>
 800a8e0:	20009614 	andcs	r9, r0, r4, lsl r6
 800a8e4:	0801398f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, fp, ip, sp}
 800a8e8:	08013a16 	stmdaeq	r1, {r1, r2, r4, r9, fp, ip, sp}
 800a8ec:	08013ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, ip, sp}
 800a8f0:	08013a27 	stmdaeq	r1, {r0, r1, r2, r5, r9, fp, ip, sp}
 800a8f4:	20000118 	andcs	r0, r0, r8, lsl r1
 800a8f8:	08013a82 	stmdaeq	r1, {r1, r7, r9, fp, ip, sp}
 800a8fc:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 800a900:	080139d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, fp, ip, sp}
 800a904:	080139be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, fp, ip, sp}
 800a908:	0801399b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, fp, ip, sp}
 800a90c:	080139a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, fp, ip, sp}
 800a910:	080139e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, ip, sp}
 800a914:	08013a00 	stmdaeq	r1, {r9, fp, ip, sp}
 800a918:	08013a24 	stmdaeq	r1, {r2, r5, r9, fp, ip, sp}

0800a91c <remoteconfig::json_get_list(char*, unsigned short)>:
 800a91c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a920:	4b14      	ldr	r3, [pc, #80]	; (800a974 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a922:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a978 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	b088      	sub	sp, #32
 800a92a:	4605      	mov	r5, r0
 800a92c:	f8d8 0000 	ldr.w	r0, [r8]
 800a930:	695c      	ldr	r4, [r3, #20]
 800a932:	460e      	mov	r6, r1
 800a934:	f7ff f83e 	bl	80099b4 <RemoteConfig::GetStringNode() const>
 800a938:	4607      	mov	r7, r0
 800a93a:	f8d8 0000 	ldr.w	r0, [r8]
 800a93e:	f7ff f845 	bl	80099cc <RemoteConfig::GetStringOutput() const>
 800a942:	4b0e      	ldr	r3, [pc, #56]	; (800a97c <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a944:	4631      	mov	r1, r6
 800a946:	7a1a      	ldrb	r2, [r3, #8]
 800a948:	3309      	adds	r3, #9
 800a94a:	9303      	str	r3, [sp, #12]
 800a94c:	0e23      	lsrs	r3, r4, #24
 800a94e:	9302      	str	r3, [sp, #8]
 800a950:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a954:	9301      	str	r3, [sp, #4]
 800a956:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a95a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a95e:	9300      	str	r3, [sp, #0]
 800a960:	4628      	mov	r0, r5
 800a962:	4a07      	ldr	r2, [pc, #28]	; (800a980 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a964:	9704      	str	r7, [sp, #16]
 800a966:	b2e3      	uxtb	r3, r4
 800a968:	f7fe fcc4 	bl	80092f4 <snprintf>
 800a96c:	b280      	uxth	r0, r0
 800a96e:	b008      	add	sp, #32
 800a970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a974:	20009614 	andcs	r9, r0, r4, lsl r6
 800a978:	20000114 	andcs	r0, r0, r4, lsl r1
 800a97c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a980:	08013bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, sp}

0800a984 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a984:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a986:	2208      	movs	r2, #8
 800a988:	4b09      	ldr	r3, [pc, #36]	; (800a9b0 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a98a:	9204      	str	r2, [sp, #16]
 800a98c:	f1a3 020b 	sub.w	r2, r3, #11
 800a990:	9203      	str	r2, [sp, #12]
 800a992:	220b      	movs	r2, #11
 800a994:	9202      	str	r2, [sp, #8]
 800a996:	4a07      	ldr	r2, [pc, #28]	; (800a9b4 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a998:	9305      	str	r3, [sp, #20]
 800a99a:	3b0e      	subs	r3, #14
 800a99c:	9201      	str	r2, [sp, #4]
 800a99e:	9300      	str	r3, [sp, #0]
 800a9a0:	4a05      	ldr	r2, [pc, #20]	; (800a9b8 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a9a2:	2303      	movs	r3, #3
 800a9a4:	f7fe fca6 	bl	80092f4 <snprintf>
 800a9a8:	b280      	uxth	r0, r0
 800a9aa:	b007      	add	sp, #28
 800a9ac:	f85d fb04 	ldr.w	pc, [sp], #4
 800a9b0:	20009c82 	andcs	r9, r0, r2, lsl #25
 800a9b4:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 800a9b8:	08013c13 	stmdaeq	r1, {r0, r1, r4, sl, fp, ip, sp}

0800a9bc <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a9bc:	b508      	push	{r3, lr}
 800a9be:	4b05      	ldr	r3, [pc, #20]	; (800a9d4 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a9c0:	681a      	ldr	r2, [r3, #0]
 800a9c2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a9c6:	fbb2 f3f3 	udiv	r3, r2, r3
 800a9ca:	4a03      	ldr	r2, [pc, #12]	; (800a9d8 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a9cc:	f7fe fc92 	bl	80092f4 <snprintf>
 800a9d0:	b280      	uxth	r0, r0
 800a9d2:	bd08      	pop	{r3, pc}
 800a9d4:	20009cec 	andcs	r9, r0, ip, ror #25
 800a9d8:	08013c59 	stmdaeq	r1, {r0, r3, r4, r6, sl, fp, ip, sp}

0800a9dc <remoteconfig::json_get_display(char*, unsigned short)>:
 800a9dc:	b508      	push	{r3, lr}
 800a9de:	4b05      	ldr	r3, [pc, #20]	; (800a9f4 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a9e0:	4a05      	ldr	r2, [pc, #20]	; (800a9f8 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	7c1b      	ldrb	r3, [r3, #16]
 800a9e6:	f083 0301 	eor.w	r3, r3, #1
 800a9ea:	f7fe fc83 	bl	80092f4 <snprintf>
 800a9ee:	b280      	uxth	r0, r0
 800a9f0:	bd08      	pop	{r3, pc}
 800a9f2:	bf00      	nop
 800a9f4:	20009be4 	andcs	r9, r0, r4, ror #23
 800a9f8:	08013c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, ip, sp}

0800a9fc <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a9fc:	b508      	push	{r3, lr}
 800a9fe:	4a02      	ldr	r2, [pc, #8]	; (800aa08 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800aa00:	f7fe fc78 	bl	80092f4 <snprintf>
 800aa04:	b280      	uxth	r0, r0
 800aa06:	bd08      	pop	{r3, pc}
 800aa08:	08013c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, ip, sp}

0800aa0c <get_file_content(char const*, char*)>:
 800aa0c:	2300      	movs	r3, #0
 800aa0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa10:	4a10      	ldr	r2, [pc, #64]	; (800aa54 <get_file_content(char const*, char*)+0x48>)
 800aa12:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800aa16:	1e46      	subs	r6, r0, #1
 800aa18:	3c01      	subs	r4, #1
 800aa1a:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800aa1e:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800aa22:	42bd      	cmp	r5, r7
 800aa24:	d005      	beq.n	800aa32 <get_file_content(char const*, char*)+0x26>
 800aa26:	3301      	adds	r3, #1
 800aa28:	2b03      	cmp	r3, #3
 800aa2a:	d1f2      	bne.n	800aa12 <get_file_content(char const*, char*)+0x6>
 800aa2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800aa30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa32:	2d00      	cmp	r5, #0
 800aa34:	d1f1      	bne.n	800aa1a <get_file_content(char const*, char*)+0xe>
 800aa36:	4608      	mov	r0, r1
 800aa38:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800aa3c:	6853      	ldr	r3, [r2, #4]
 800aa3e:	3b01      	subs	r3, #1
 800aa40:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800aa44:	f800 2b01 	strb.w	r2, [r0], #1
 800aa48:	2a00      	cmp	r2, #0
 800aa4a:	d1f9      	bne.n	800aa40 <get_file_content(char const*, char*)+0x34>
 800aa4c:	1a40      	subs	r0, r0, r1
 800aa4e:	3801      	subs	r0, #1
 800aa50:	e7ee      	b.n	800aa30 <get_file_content(char const*, char*)+0x24>
 800aa52:	bf00      	nop
 800aa54:	08013f9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, fp, ip, sp}

0800aa58 <strlen>:
 800aa58:	4603      	mov	r3, r0
 800aa5a:	461a      	mov	r2, r3
 800aa5c:	7811      	ldrb	r1, [r2, #0]
 800aa5e:	3301      	adds	r3, #1
 800aa60:	2900      	cmp	r1, #0
 800aa62:	d1fa      	bne.n	800aa5a <strlen+0x2>
 800aa64:	1a10      	subs	r0, r2, r0
 800aa66:	4770      	bx	lr

0800aa68 <strncpy.isra.0>:
 800aa68:	3901      	subs	r1, #1
 800aa6a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800aa6e:	b92b      	cbnz	r3, 800aa7c <strncpy.isra.0+0x14>
 800aa70:	4402      	add	r2, r0
 800aa72:	4290      	cmp	r0, r2
 800aa74:	d006      	beq.n	800aa84 <strncpy.isra.0+0x1c>
 800aa76:	f800 3b01 	strb.w	r3, [r0], #1
 800aa7a:	e7fa      	b.n	800aa72 <strncpy.isra.0+0xa>
 800aa7c:	3a01      	subs	r2, #1
 800aa7e:	f800 3b01 	strb.w	r3, [r0], #1
 800aa82:	d1f2      	bne.n	800aa6a <strncpy.isra.0+0x2>
 800aa84:	4770      	bx	lr

0800aa86 <strcpy.isra.0>:
 800aa86:	3801      	subs	r0, #1
 800aa88:	f811 3b01 	ldrb.w	r3, [r1], #1
 800aa8c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800aa90:	2b00      	cmp	r3, #0
 800aa92:	d1f9      	bne.n	800aa88 <strcpy.isra.0+0x2>
 800aa94:	4770      	bx	lr
	...

0800aa98 <OscServer::OscServer()>:
 800aa98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aa9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa9e:	4a24      	ldr	r2, [pc, #144]	; (800ab30 <OscServer::OscServer()+0x98>)
 800aaa0:	4604      	mov	r4, r0
 800aaa2:	e9c0 2300 	strd	r2, r3, [r0]
 800aaa6:	2300      	movs	r3, #0
 800aaa8:	2581      	movs	r5, #129	; 0x81
 800aaaa:	4a22      	ldr	r2, [pc, #136]	; (800ab34 <OscServer::OscServer()+0x9c>)
 800aaac:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800aab0:	6010      	str	r0, [r2, #0]
 800aab2:	4a21      	ldr	r2, [pc, #132]	; (800ab38 <OscServer::OscServer()+0xa0>)
 800aab4:	6083      	str	r3, [r0, #8]
 800aab6:	7303      	strb	r3, [r0, #12]
 800aab8:	3d01      	subs	r5, #1
 800aaba:	d12c      	bne.n	800ab16 <OscServer::OscServer()+0x7e>
 800aabc:	2281      	movs	r2, #129	; 0x81
 800aabe:	491f      	ldr	r1, [pc, #124]	; (800ab3c <OscServer::OscServer()+0xa4>)
 800aac0:	481d      	ldr	r0, [pc, #116]	; (800ab38 <OscServer::OscServer()+0xa0>)
 800aac2:	f7ff ffe0 	bl	800aa86 <strcpy.isra.0>
 800aac6:	4b1e      	ldr	r3, [pc, #120]	; (800ab40 <OscServer::OscServer()+0xa8>)
 800aac8:	3a01      	subs	r2, #1
 800aaca:	d127      	bne.n	800ab1c <OscServer::OscServer()+0x84>
 800aacc:	491d      	ldr	r1, [pc, #116]	; (800ab44 <OscServer::OscServer()+0xac>)
 800aace:	481c      	ldr	r0, [pc, #112]	; (800ab40 <OscServer::OscServer()+0xa8>)
 800aad0:	f7ff ffd9 	bl	800aa86 <strcpy.isra.0>
 800aad4:	2380      	movs	r3, #128	; 0x80
 800aad6:	491c      	ldr	r1, [pc, #112]	; (800ab48 <OscServer::OscServer()+0xb0>)
 800aad8:	3b01      	subs	r3, #1
 800aada:	d222      	bcs.n	800ab22 <OscServer::OscServer()+0x8a>
 800aadc:	491b      	ldr	r1, [pc, #108]	; (800ab4c <OscServer::OscServer()+0xb4>)
 800aade:	481a      	ldr	r0, [pc, #104]	; (800ab48 <OscServer::OscServer()+0xb0>)
 800aae0:	f7ff ffd1 	bl	800aa86 <strcpy.isra.0>
 800aae4:	2380      	movs	r3, #128	; 0x80
 800aae6:	2100      	movs	r1, #0
 800aae8:	4a19      	ldr	r2, [pc, #100]	; (800ab50 <OscServer::OscServer()+0xb8>)
 800aaea:	3b01      	subs	r3, #1
 800aaec:	d21c      	bcs.n	800ab28 <OscServer::OscServer()+0x90>
 800aaee:	4919      	ldr	r1, [pc, #100]	; (800ab54 <OscServer::OscServer()+0xbc>)
 800aaf0:	4817      	ldr	r0, [pc, #92]	; (800ab50 <OscServer::OscServer()+0xb8>)
 800aaf2:	f7ff ffc8 	bl	800aa86 <strcpy.isra.0>
 800aaf6:	4b18      	ldr	r3, [pc, #96]	; (800ab58 <OscServer::OscServer()+0xc0>)
 800aaf8:	211f      	movs	r1, #31
 800aafa:	9300      	str	r3, [sp, #0]
 800aafc:	4a17      	ldr	r2, [pc, #92]	; (800ab5c <OscServer::OscServer()+0xc4>)
 800aafe:	4b18      	ldr	r3, [pc, #96]	; (800ab60 <OscServer::OscServer()+0xc8>)
 800ab00:	f104 000d 	add.w	r0, r4, #13
 800ab04:	f7fe fbf6 	bl	80092f4 <snprintf>
 800ab08:	4620      	mov	r0, r4
 800ab0a:	4b16      	ldr	r3, [pc, #88]	; (800ab64 <OscServer::OscServer()+0xcc>)
 800ab0c:	63a3      	str	r3, [r4, #56]	; 0x38
 800ab0e:	4b16      	ldr	r3, [pc, #88]	; (800ab68 <OscServer::OscServer()+0xd0>)
 800ab10:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ab12:	b003      	add	sp, #12
 800ab14:	bd30      	pop	{r4, r5, pc}
 800ab16:	f802 3b01 	strb.w	r3, [r2], #1
 800ab1a:	e7cd      	b.n	800aab8 <OscServer::OscServer()+0x20>
 800ab1c:	f803 5b01 	strb.w	r5, [r3], #1
 800ab20:	e7d2      	b.n	800aac8 <OscServer::OscServer()+0x30>
 800ab22:	f801 2b01 	strb.w	r2, [r1], #1
 800ab26:	e7d7      	b.n	800aad8 <OscServer::OscServer()+0x40>
 800ab28:	f802 1b01 	strb.w	r1, [r2], #1
 800ab2c:	e7dd      	b.n	800aaea <OscServer::OscServer()+0x52>
 800ab2e:	bf00      	nop
 800ab30:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 800ab34:	20000abc 			; <UNDEFINED> instruction: 0x20000abc
 800ab38:	2000083c 	andcs	r0, r0, ip, lsr r8
 800ab3c:	080144de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, lr}
 800ab40:	2000073c 	andcs	r0, r0, ip, lsr r7
 800ab44:	080144e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, lr}
 800ab48:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800ab4c:	080144ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, lr}
 800ab50:	200007bc 			; <UNDEFINED> instruction: 0x200007bc
 800ab54:	080144ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sl, lr}
 800ab58:	080132ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, ip, sp}
 800ab5c:	08014502 	stmdaeq	r1, {r1, r8, sl, lr}
 800ab60:	080144fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, lr}
 800ab64:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 800ab68:	0801450b 	stmdaeq	r1, {r0, r1, r3, r8, sl, lr}

0800ab6c <OscServer::Start()>:
 800ab6c:	b530      	push	{r4, r5, lr}
 800ab6e:	4d0e      	ldr	r5, [pc, #56]	; (800aba8 <OscServer::Start()+0x3c>)
 800ab70:	b085      	sub	sp, #20
 800ab72:	4604      	mov	r4, r0
 800ab74:	8801      	ldrh	r1, [r0, #0]
 800ab76:	6828      	ldr	r0, [r5, #0]
 800ab78:	f004 fb5e 	bl	800f238 <Network::Begin(unsigned short)>
 800ab7c:	682b      	ldr	r3, [r5, #0]
 800ab7e:	6060      	str	r0, [r4, #4]
 800ab80:	695a      	ldr	r2, [r3, #20]
 800ab82:	4601      	mov	r1, r0
 800ab84:	69d8      	ldr	r0, [r3, #28]
 800ab86:	2300      	movs	r3, #0
 800ab88:	9301      	str	r3, [sp, #4]
 800ab8a:	4b08      	ldr	r3, [pc, #32]	; (800abac <OscServer::Start()+0x40>)
 800ab8c:	ea62 0200 	orn	r2, r2, r0
 800ab90:	9300      	str	r3, [sp, #0]
 800ab92:	a803      	add	r0, sp, #12
 800ab94:	8823      	ldrh	r3, [r4, #0]
 800ab96:	f000 fd95 	bl	800b6c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800ab9a:	4b05      	ldr	r3, [pc, #20]	; (800abb0 <OscServer::Start()+0x44>)
 800ab9c:	2102      	movs	r1, #2
 800ab9e:	6818      	ldr	r0, [r3, #0]
 800aba0:	f006 f90a 	bl	8010db8 <LedBlink::SetMode(ledblink::Mode)>
 800aba4:	b005      	add	sp, #20
 800aba6:	bd30      	pop	{r4, r5, pc}
 800aba8:	20009614 	andcs	r9, r0, r4, lsl r6
 800abac:	08014511 	stmdaeq	r1, {r0, r4, r8, sl, lr}
 800abb0:	20009cd0 	ldrdcs	r9, [r0], -r0

0800abb4 <OscServer::SetPath(char const*)>:
 800abb4:	b510      	push	{r4, lr}
 800abb6:	780b      	ldrb	r3, [r1, #0]
 800abb8:	2b2f      	cmp	r3, #47	; 0x2f
 800abba:	d11c      	bne.n	800abf6 <OscServer::SetPath(char const*)+0x42>
 800abbc:	4c0e      	ldr	r4, [pc, #56]	; (800abf8 <OscServer::SetPath(char const*)+0x44>)
 800abbe:	227d      	movs	r2, #125	; 0x7d
 800abc0:	4620      	mov	r0, r4
 800abc2:	f7ff ff51 	bl	800aa68 <strncpy.isra.0>
 800abc6:	4620      	mov	r0, r4
 800abc8:	f7ff ff46 	bl	800aa58 <strlen>
 800abcc:	3801      	subs	r0, #1
 800abce:	5c23      	ldrb	r3, [r4, r0]
 800abd0:	4909      	ldr	r1, [pc, #36]	; (800abf8 <OscServer::SetPath(char const*)+0x44>)
 800abd2:	2b2f      	cmp	r3, #47	; 0x2f
 800abd4:	bf04      	itt	eq
 800abd6:	2300      	moveq	r3, #0
 800abd8:	5423      	strbeq	r3, [r4, r0]
 800abda:	4c08      	ldr	r4, [pc, #32]	; (800abfc <OscServer::SetPath(char const*)+0x48>)
 800abdc:	4620      	mov	r0, r4
 800abde:	f7ff ff52 	bl	800aa86 <strcpy.isra.0>
 800abe2:	4620      	mov	r0, r4
 800abe4:	f7ff ff38 	bl	800aa58 <strlen>
 800abe8:	232f      	movs	r3, #47	; 0x2f
 800abea:	5423      	strb	r3, [r4, r0]
 800abec:	232a      	movs	r3, #42	; 0x2a
 800abee:	4404      	add	r4, r0
 800abf0:	7063      	strb	r3, [r4, #1]
 800abf2:	2300      	movs	r3, #0
 800abf4:	70a3      	strb	r3, [r4, #2]
 800abf6:	bd10      	pop	{r4, pc}
 800abf8:	2000083c 	andcs	r0, r0, ip, lsr r8
 800abfc:	2000073c 	andcs	r0, r0, ip, lsr r7

0800ac00 <OscServer::SetPathInfo(char const*)>:
 800ac00:	780b      	ldrb	r3, [r1, #0]
 800ac02:	b510      	push	{r4, lr}
 800ac04:	2b2f      	cmp	r3, #47	; 0x2f
 800ac06:	d10d      	bne.n	800ac24 <OscServer::SetPathInfo(char const*)+0x24>
 800ac08:	4c07      	ldr	r4, [pc, #28]	; (800ac28 <OscServer::SetPathInfo(char const*)+0x28>)
 800ac0a:	227f      	movs	r2, #127	; 0x7f
 800ac0c:	4620      	mov	r0, r4
 800ac0e:	f7ff ff2b 	bl	800aa68 <strncpy.isra.0>
 800ac12:	4620      	mov	r0, r4
 800ac14:	f7ff ff20 	bl	800aa58 <strlen>
 800ac18:	3801      	subs	r0, #1
 800ac1a:	5c23      	ldrb	r3, [r4, r0]
 800ac1c:	2b2f      	cmp	r3, #47	; 0x2f
 800ac1e:	bf04      	itt	eq
 800ac20:	2300      	moveq	r3, #0
 800ac22:	5423      	strbeq	r3, [r4, r0]
 800ac24:	bd10      	pop	{r4, pc}
 800ac26:	bf00      	nop
 800ac28:	200006b8 			; <UNDEFINED> instruction: 0x200006b8

0800ac2c <OscServer::SetPathBlackOut(char const*)>:
 800ac2c:	780b      	ldrb	r3, [r1, #0]
 800ac2e:	b510      	push	{r4, lr}
 800ac30:	2b2f      	cmp	r3, #47	; 0x2f
 800ac32:	d10d      	bne.n	800ac50 <OscServer::SetPathBlackOut(char const*)+0x24>
 800ac34:	4c07      	ldr	r4, [pc, #28]	; (800ac54 <OscServer::SetPathBlackOut(char const*)+0x28>)
 800ac36:	227f      	movs	r2, #127	; 0x7f
 800ac38:	4620      	mov	r0, r4
 800ac3a:	f7ff ff15 	bl	800aa68 <strncpy.isra.0>
 800ac3e:	4620      	mov	r0, r4
 800ac40:	f7ff ff0a 	bl	800aa58 <strlen>
 800ac44:	3801      	subs	r0, #1
 800ac46:	5c23      	ldrb	r3, [r4, r0]
 800ac48:	2b2f      	cmp	r3, #47	; 0x2f
 800ac4a:	bf04      	itt	eq
 800ac4c:	2300      	moveq	r3, #0
 800ac4e:	5423      	strbeq	r3, [r4, r0]
 800ac50:	bd10      	pop	{r4, pc}
 800ac52:	bf00      	nop
 800ac54:	200007bc 			; <UNDEFINED> instruction: 0x200007bc

0800ac58 <OscServer::GetChannel(char const*)>:
 800ac58:	b538      	push	{r3, r4, r5, lr}
 800ac5a:	480f      	ldr	r0, [pc, #60]	; (800ac98 <OscServer::GetChannel(char const*)+0x40>)
 800ac5c:	460c      	mov	r4, r1
 800ac5e:	f7ff fefb 	bl	800aa58 <strlen>
 800ac62:	1822      	adds	r2, r4, r0
 800ac64:	4614      	mov	r4, r2
 800ac66:	2000      	movs	r0, #0
 800ac68:	210a      	movs	r1, #10
 800ac6a:	3403      	adds	r4, #3
 800ac6c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ac70:	b14b      	cbz	r3, 800ac86 <OscServer::GetChannel(char const*)+0x2e>
 800ac72:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 800ac76:	2d09      	cmp	r5, #9
 800ac78:	d80b      	bhi.n	800ac92 <OscServer::GetChannel(char const*)+0x3a>
 800ac7a:	fb01 3000 	mla	r0, r1, r0, r3
 800ac7e:	4294      	cmp	r4, r2
 800ac80:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800ac84:	d1f2      	bne.n	800ac6c <OscServer::GetChannel(char const*)+0x14>
 800ac86:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800ac8a:	bfc8      	it	gt
 800ac8c:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 800ac90:	bd38      	pop	{r3, r4, r5, pc}
 800ac92:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ac96:	e7fb      	b.n	800ac90 <OscServer::GetChannel(char const*)+0x38>
 800ac98:	2000083c 	andcs	r0, r0, ip, lsr r8

0800ac9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 800ac9c:	2000      	movs	r0, #0
 800ac9e:	b570      	push	{r4, r5, r6, lr}
 800aca0:	3a01      	subs	r2, #1
 800aca2:	4c09      	ldr	r4, [pc, #36]	; (800acc8 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800aca4:	b292      	uxth	r2, r2
 800aca6:	4414      	add	r4, r2
 800aca8:	4413      	add	r3, r2
 800acaa:	3901      	subs	r1, #1
 800acac:	429a      	cmp	r2, r3
 800acae:	d300      	bcc.n	800acb2 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x16>
 800acb0:	bd70      	pop	{r4, r5, r6, pc}
 800acb2:	7826      	ldrb	r6, [r4, #0]
 800acb4:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800acb8:	3201      	adds	r2, #1
 800acba:	42ae      	cmp	r6, r5
 800acbc:	bf1c      	itt	ne
 800acbe:	7025      	strbne	r5, [r4, #0]
 800acc0:	2001      	movne	r0, #1
 800acc2:	3401      	adds	r4, #1
 800acc4:	b292      	uxth	r2, r2
 800acc6:	e7f1      	b.n	800acac <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800acc8:	200008bc 			; <UNDEFINED> instruction: 0x200008bc

0800accc <OscServer::Run()>:
 800accc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acce:	4d98      	ldr	r5, [pc, #608]	; (800af30 <OscServer::Run()+0x264>)
 800acd0:	b097      	sub	sp, #92	; 0x5c
 800acd2:	4604      	mov	r4, r0
 800acd4:	4629      	mov	r1, r5
 800acd6:	7900      	ldrb	r0, [r0, #4]
 800acd8:	f10d 031a 	add.w	r3, sp, #26
 800acdc:	aa07      	add	r2, sp, #28
 800acde:	f003 fdbd 	bl	800e85c <udp_recv2>
 800ace2:	4606      	mov	r6, r0
 800ace4:	b1a8      	cbz	r0, 800ad12 <OscServer::Run()+0x46>
 800ace6:	4602      	mov	r2, r0
 800ace8:	6829      	ldr	r1, [r5, #0]
 800acea:	a808      	add	r0, sp, #32
 800acec:	f000 fc4d 	bl	800b58a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800acf0:	4990      	ldr	r1, [pc, #576]	; (800af34 <OscServer::Run()+0x268>)
 800acf2:	6828      	ldr	r0, [r5, #0]
 800acf4:	f000 fb72 	bl	800b3dc <lo_pattern_match>
 800acf8:	4607      	mov	r7, r0
 800acfa:	2800      	cmp	r0, #0
 800acfc:	d075      	beq.n	800adea <OscServer::Run()+0x11e>
 800acfe:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ad02:	b133      	cbz	r3, 800ad12 <OscServer::Run()+0x46>
 800ad04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800ad06:	2e01      	cmp	r6, #1
 800ad08:	d105      	bne.n	800ad16 <OscServer::Run()+0x4a>
 800ad0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad0c:	781b      	ldrb	r3, [r3, #0]
 800ad0e:	2b62      	cmp	r3, #98	; 0x62
 800ad10:	d03e      	beq.n	800ad90 <OscServer::Run()+0xc4>
 800ad12:	b017      	add	sp, #92	; 0x5c
 800ad14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad16:	2e02      	cmp	r6, #2
 800ad18:	d1fb      	bne.n	800ad12 <OscServer::Run()+0x46>
 800ad1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad1c:	781b      	ldrb	r3, [r3, #0]
 800ad1e:	2b69      	cmp	r3, #105	; 0x69
 800ad20:	d1f7      	bne.n	800ad12 <OscServer::Run()+0x46>
 800ad22:	2100      	movs	r1, #0
 800ad24:	a808      	add	r0, sp, #32
 800ad26:	f000 fc80 	bl	800b62a <OscSimpleMessage::GetInt(unsigned int)>
 800ad2a:	b285      	uxth	r5, r0
 800ad2c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800ad30:	d2ef      	bcs.n	800ad12 <OscServer::Run()+0x46>
 800ad32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ad34:	2b01      	cmp	r3, #1
 800ad36:	d9ec      	bls.n	800ad12 <OscServer::Run()+0x46>
 800ad38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad3a:	785b      	ldrb	r3, [r3, #1]
 800ad3c:	2b69      	cmp	r3, #105	; 0x69
 800ad3e:	d148      	bne.n	800add2 <OscServer::Run()+0x106>
 800ad40:	2101      	movs	r1, #1
 800ad42:	a808      	add	r0, sp, #32
 800ad44:	f000 fc71 	bl	800b62a <OscSimpleMessage::GetInt(unsigned int)>
 800ad48:	3501      	adds	r5, #1
 800ad4a:	b2c0      	uxtb	r0, r0
 800ad4c:	b2ad      	uxth	r5, r5
 800ad4e:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 800ad52:	2301      	movs	r3, #1
 800ad54:	462a      	mov	r2, r5
 800ad56:	4620      	mov	r0, r4
 800ad58:	a90f      	add	r1, sp, #60	; 0x3c
 800ad5a:	f7ff ff9f 	bl	800ac9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800ad5e:	b910      	cbnz	r0, 800ad66 <OscServer::Run()+0x9a>
 800ad60:	7ae3      	ldrb	r3, [r4, #11]
 800ad62:	2b00      	cmp	r3, #0
 800ad64:	d0d5      	beq.n	800ad12 <OscServer::Run()+0x46>
 800ad66:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ad68:	7aa1      	ldrb	r1, [r4, #10]
 800ad6a:	6803      	ldr	r3, [r0, #0]
 800ad6c:	691e      	ldr	r6, [r3, #16]
 800ad6e:	2900      	cmp	r1, #0
 800ad70:	f040 80a3 	bne.w	800aeba <OscServer::Run()+0x1ee>
 800ad74:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ad78:	4a6f      	ldr	r2, [pc, #444]	; (800af38 <OscServer::Run()+0x26c>)
 800ad7a:	47b0      	blx	r6
 800ad7c:	7b21      	ldrb	r1, [r4, #12]
 800ad7e:	2900      	cmp	r1, #0
 800ad80:	d1c7      	bne.n	800ad12 <OscServer::Run()+0x46>
 800ad82:	2301      	movs	r3, #1
 800ad84:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ad86:	7323      	strb	r3, [r4, #12]
 800ad88:	6803      	ldr	r3, [r0, #0]
 800ad8a:	689b      	ldr	r3, [r3, #8]
 800ad8c:	4798      	blx	r3
 800ad8e:	e7c0      	b.n	800ad12 <OscServer::Run()+0x46>
 800ad90:	2200      	movs	r2, #0
 800ad92:	a908      	add	r1, sp, #32
 800ad94:	a80f      	add	r0, sp, #60	; 0x3c
 800ad96:	f000 fc5c 	bl	800b652 <OscSimpleMessage::GetBlob(unsigned int)>
 800ad9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ad9c:	b29d      	uxth	r5, r3
 800ad9e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800ada2:	d8b6      	bhi.n	800ad12 <OscServer::Run()+0x46>
 800ada4:	462b      	mov	r3, r5
 800ada6:	4632      	mov	r2, r6
 800ada8:	4620      	mov	r0, r4
 800adaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800adac:	f7ff ff76 	bl	800ac9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800adb0:	b910      	cbnz	r0, 800adb8 <OscServer::Run()+0xec>
 800adb2:	7ae3      	ldrb	r3, [r4, #11]
 800adb4:	2b00      	cmp	r3, #0
 800adb6:	d0ac      	beq.n	800ad12 <OscServer::Run()+0x46>
 800adb8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800adba:	6803      	ldr	r3, [r0, #0]
 800adbc:	691e      	ldr	r6, [r3, #16]
 800adbe:	7aa3      	ldrb	r3, [r4, #10]
 800adc0:	b113      	cbz	r3, 800adc8 <OscServer::Run()+0xfc>
 800adc2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800adc6:	d178      	bne.n	800aeba <OscServer::Run()+0x1ee>
 800adc8:	f44f 7300 	mov.w	r3, #512	; 0x200
 800adcc:	2100      	movs	r1, #0
 800adce:	4a5a      	ldr	r2, [pc, #360]	; (800af38 <OscServer::Run()+0x26c>)
 800add0:	e7d3      	b.n	800ad7a <OscServer::Run()+0xae>
 800add2:	2b66      	cmp	r3, #102	; 0x66
 800add4:	d19d      	bne.n	800ad12 <OscServer::Run()+0x46>
 800add6:	2101      	movs	r1, #1
 800add8:	a808      	add	r0, sp, #32
 800adda:	f000 fc12 	bl	800b602 <OscSimpleMessage::GetFloat(unsigned int)>
 800adde:	4957      	ldr	r1, [pc, #348]	; (800af3c <OscServer::Run()+0x270>)
 800ade0:	f7fd fa50 	bl	8008284 <__aeabi_fmul>
 800ade4:	f7fd fb9e 	bl	8008524 <__aeabi_f2uiz>
 800ade8:	e7ae      	b.n	800ad48 <OscServer::Run()+0x7c>
 800adea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800adec:	6828      	ldr	r0, [r5, #0]
 800adee:	b9b3      	cbnz	r3, 800ae1e <OscServer::Run()+0x152>
 800adf0:	4953      	ldr	r1, [pc, #332]	; (800af40 <OscServer::Run()+0x274>)
 800adf2:	6828      	ldr	r0, [r5, #0]
 800adf4:	f000 faf2 	bl	800b3dc <lo_pattern_match>
 800adf8:	4606      	mov	r6, r0
 800adfa:	2800      	cmp	r0, #0
 800adfc:	d133      	bne.n	800ae66 <OscServer::Run()+0x19a>
 800adfe:	4951      	ldr	r1, [pc, #324]	; (800af44 <OscServer::Run()+0x278>)
 800ae00:	6828      	ldr	r0, [r5, #0]
 800ae02:	f000 faeb 	bl	800b3dc <lo_pattern_match>
 800ae06:	2800      	cmp	r0, #0
 800ae08:	d05d      	beq.n	800aec6 <OscServer::Run()+0x1fa>
 800ae0a:	4b4f      	ldr	r3, [pc, #316]	; (800af48 <OscServer::Run()+0x27c>)
 800ae0c:	9a07      	ldr	r2, [sp, #28]
 800ae0e:	9300      	str	r3, [sp, #0]
 800ae10:	6861      	ldr	r1, [r4, #4]
 800ae12:	8863      	ldrh	r3, [r4, #2]
 800ae14:	9601      	str	r6, [sp, #4]
 800ae16:	a80f      	add	r0, sp, #60	; 0x3c
 800ae18:	f000 fc54 	bl	800b6c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800ae1c:	e779      	b.n	800ad12 <OscServer::Run()+0x46>
 800ae1e:	494b      	ldr	r1, [pc, #300]	; (800af4c <OscServer::Run()+0x280>)
 800ae20:	f000 fadc 	bl	800b3dc <lo_pattern_match>
 800ae24:	2800      	cmp	r0, #0
 800ae26:	d0e3      	beq.n	800adf0 <OscServer::Run()+0x124>
 800ae28:	4632      	mov	r2, r6
 800ae2a:	6829      	ldr	r1, [r5, #0]
 800ae2c:	a80f      	add	r0, sp, #60	; 0x3c
 800ae2e:	f000 fbac 	bl	800b58a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800ae32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ae34:	2b00      	cmp	r3, #0
 800ae36:	f43f af6c 	beq.w	800ad12 <OscServer::Run()+0x46>
 800ae3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ae3c:	781b      	ldrb	r3, [r3, #0]
 800ae3e:	2b66      	cmp	r3, #102	; 0x66
 800ae40:	f47f af67 	bne.w	800ad12 <OscServer::Run()+0x46>
 800ae44:	4639      	mov	r1, r7
 800ae46:	a80f      	add	r0, sp, #60	; 0x3c
 800ae48:	f000 fbdb 	bl	800b602 <OscSimpleMessage::GetFloat(unsigned int)>
 800ae4c:	2100      	movs	r1, #0
 800ae4e:	f7fc ffeb 	bl	8007e28 <__aeabi_fcmpeq>
 800ae52:	4603      	mov	r3, r0
 800ae54:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ae56:	b91b      	cbnz	r3, 800ae60 <OscServer::Run()+0x194>
 800ae58:	6803      	ldr	r3, [r0, #0]
 800ae5a:	689b      	ldr	r3, [r3, #8]
 800ae5c:	4798      	blx	r3
 800ae5e:	e758      	b.n	800ad12 <OscServer::Run()+0x46>
 800ae60:	6803      	ldr	r3, [r0, #0]
 800ae62:	68db      	ldr	r3, [r3, #12]
 800ae64:	e7fa      	b.n	800ae5c <OscServer::Run()+0x190>
 800ae66:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ae6a:	2b00      	cmp	r3, #0
 800ae6c:	f43f af51 	beq.w	800ad12 <OscServer::Run()+0x46>
 800ae70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae72:	2b01      	cmp	r3, #1
 800ae74:	f47f af4d 	bne.w	800ad12 <OscServer::Run()+0x46>
 800ae78:	6829      	ldr	r1, [r5, #0]
 800ae7a:	4620      	mov	r0, r4
 800ae7c:	f7ff feec 	bl	800ac58 <OscServer::GetChannel(char const*)>
 800ae80:	b285      	uxth	r5, r0
 800ae82:	1e6b      	subs	r3, r5, #1
 800ae84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ae88:	f4bf af43 	bcs.w	800ad12 <OscServer::Run()+0x46>
 800ae8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ae8e:	781b      	ldrb	r3, [r3, #0]
 800ae90:	2b69      	cmp	r3, #105	; 0x69
 800ae92:	d105      	bne.n	800aea0 <OscServer::Run()+0x1d4>
 800ae94:	2100      	movs	r1, #0
 800ae96:	a808      	add	r0, sp, #32
 800ae98:	f000 fbc7 	bl	800b62a <OscSimpleMessage::GetInt(unsigned int)>
 800ae9c:	b2c0      	uxtb	r0, r0
 800ae9e:	e756      	b.n	800ad4e <OscServer::Run()+0x82>
 800aea0:	2b66      	cmp	r3, #102	; 0x66
 800aea2:	f47f af36 	bne.w	800ad12 <OscServer::Run()+0x46>
 800aea6:	2100      	movs	r1, #0
 800aea8:	a808      	add	r0, sp, #32
 800aeaa:	f000 fbaa 	bl	800b602 <OscSimpleMessage::GetFloat(unsigned int)>
 800aeae:	4923      	ldr	r1, [pc, #140]	; (800af3c <OscServer::Run()+0x270>)
 800aeb0:	f7fd f9e8 	bl	8008284 <__aeabi_fmul>
 800aeb4:	f7fd fb36 	bl	8008524 <__aeabi_f2uiz>
 800aeb8:	e7f0      	b.n	800ae9c <OscServer::Run()+0x1d0>
 800aeba:	8923      	ldrh	r3, [r4, #8]
 800aebc:	42ab      	cmp	r3, r5
 800aebe:	bf38      	it	cc
 800aec0:	462b      	movcc	r3, r5
 800aec2:	8123      	strh	r3, [r4, #8]
 800aec4:	e782      	b.n	800adcc <OscServer::Run()+0x100>
 800aec6:	4922      	ldr	r1, [pc, #136]	; (800af50 <OscServer::Run()+0x284>)
 800aec8:	6828      	ldr	r0, [r5, #0]
 800aeca:	f000 fa87 	bl	800b3dc <lo_pattern_match>
 800aece:	2800      	cmp	r0, #0
 800aed0:	f43f af1f 	beq.w	800ad12 <OscServer::Run()+0x46>
 800aed4:	f104 030d 	add.w	r3, r4, #13
 800aed8:	4d1e      	ldr	r5, [pc, #120]	; (800af54 <OscServer::Run()+0x288>)
 800aeda:	9302      	str	r3, [sp, #8]
 800aedc:	4b1e      	ldr	r3, [pc, #120]	; (800af58 <OscServer::Run()+0x28c>)
 800aede:	9a07      	ldr	r2, [sp, #28]
 800aee0:	6861      	ldr	r1, [r4, #4]
 800aee2:	9300      	str	r3, [sp, #0]
 800aee4:	9501      	str	r5, [sp, #4]
 800aee6:	8863      	ldrh	r3, [r4, #2]
 800aee8:	a805      	add	r0, sp, #20
 800aeea:	f000 fc0f 	bl	800b70c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800aeee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800aef0:	9a07      	ldr	r2, [sp, #28]
 800aef2:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800aef6:	4b19      	ldr	r3, [pc, #100]	; (800af5c <OscServer::Run()+0x290>)
 800aef8:	6861      	ldr	r1, [r4, #4]
 800aefa:	9300      	str	r3, [sp, #0]
 800aefc:	a806      	add	r0, sp, #24
 800aefe:	8863      	ldrh	r3, [r4, #2]
 800af00:	f000 fc04 	bl	800b70c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800af04:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800af06:	9a07      	ldr	r2, [sp, #28]
 800af08:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800af0c:	4b14      	ldr	r3, [pc, #80]	; (800af60 <OscServer::Run()+0x294>)
 800af0e:	6861      	ldr	r1, [r4, #4]
 800af10:	9300      	str	r3, [sp, #0]
 800af12:	a80f      	add	r0, sp, #60	; 0x3c
 800af14:	8863      	ldrh	r3, [r4, #2]
 800af16:	f000 fbf9 	bl	800b70c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800af1a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800af1c:	2800      	cmp	r0, #0
 800af1e:	f43f aef8 	beq.w	800ad12 <OscServer::Run()+0x46>
 800af22:	6803      	ldr	r3, [r0, #0]
 800af24:	9a07      	ldr	r2, [sp, #28]
 800af26:	691d      	ldr	r5, [r3, #16]
 800af28:	6861      	ldr	r1, [r4, #4]
 800af2a:	8863      	ldrh	r3, [r4, #2]
 800af2c:	47a8      	blx	r5
 800af2e:	e6f0      	b.n	800ad12 <OscServer::Run()+0x46>
 800af30:	20000738 	andcs	r0, r0, r8, lsr r7
 800af34:	2000083c 	andcs	r0, r0, ip, lsr r8
 800af38:	200008bc 			; <UNDEFINED> instruction: 0x200008bc
 800af3c:	437f0000 	cmnmi	pc, #0
 800af40:	2000073c 	andcs	r0, r0, ip, lsr r7
 800af44:	08014511 	stmdaeq	r1, {r0, r4, r8, sl, lr}
 800af48:	08014517 	stmdaeq	r1, {r0, r1, r2, r4, r8, sl, lr}
 800af4c:	200007bc 			; <UNDEFINED> instruction: 0x200007bc
 800af50:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800af54:	08014509 	stmdaeq	r1, {r0, r3, r8, sl, lr}
 800af58:	0801451d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, lr}
 800af5c:	08014526 	stmdaeq	r1, {r1, r2, r5, r8, sl, lr}
 800af60:	08014532 	stmdaeq	r1, {r1, r4, r5, r8, sl, lr}

0800af64 <OscServer::Print()>:
 800af64:	b510      	push	{r4, lr}
 800af66:	4604      	mov	r4, r0
 800af68:	480f      	ldr	r0, [pc, #60]	; (800afa8 <OscServer::Print()+0x44>)
 800af6a:	f7fe f9b3 	bl	80092d4 <printf>
 800af6e:	8821      	ldrh	r1, [r4, #0]
 800af70:	480e      	ldr	r0, [pc, #56]	; (800afac <OscServer::Print()+0x48>)
 800af72:	f7fe f9af 	bl	80092d4 <printf>
 800af76:	8861      	ldrh	r1, [r4, #2]
 800af78:	480d      	ldr	r0, [pc, #52]	; (800afb0 <OscServer::Print()+0x4c>)
 800af7a:	f7fe f9ab 	bl	80092d4 <printf>
 800af7e:	4a0d      	ldr	r2, [pc, #52]	; (800afb4 <OscServer::Print()+0x50>)
 800af80:	490d      	ldr	r1, [pc, #52]	; (800afb8 <OscServer::Print()+0x54>)
 800af82:	480e      	ldr	r0, [pc, #56]	; (800afbc <OscServer::Print()+0x58>)
 800af84:	f7fe f9a6 	bl	80092d4 <printf>
 800af88:	490d      	ldr	r1, [pc, #52]	; (800afc0 <OscServer::Print()+0x5c>)
 800af8a:	480e      	ldr	r0, [pc, #56]	; (800afc4 <OscServer::Print()+0x60>)
 800af8c:	f7fe f9a2 	bl	80092d4 <printf>
 800af90:	7aa1      	ldrb	r1, [r4, #10]
 800af92:	4a0d      	ldr	r2, [pc, #52]	; (800afc8 <OscServer::Print()+0x64>)
 800af94:	4b0d      	ldr	r3, [pc, #52]	; (800afcc <OscServer::Print()+0x68>)
 800af96:	480e      	ldr	r0, [pc, #56]	; (800afd0 <OscServer::Print()+0x6c>)
 800af98:	2900      	cmp	r1, #0
 800af9a:	bf14      	ite	ne
 800af9c:	4611      	movne	r1, r2
 800af9e:	4619      	moveq	r1, r3
 800afa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afa4:	f7fe b996 	b.w	80092d4 <printf>
 800afa8:	08014543 	stmdaeq	r1, {r0, r1, r6, r8, sl, lr}
 800afac:	0801454f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sl, lr}
 800afb0:	0801456b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, lr}
 800afb4:	2000073c 	andcs	r0, r0, ip, lsr r7
 800afb8:	2000083c 	andcs	r0, r0, ip, lsr r8
 800afbc:	08014587 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, lr}
 800afc0:	200007bc 			; <UNDEFINED> instruction: 0x200007bc
 800afc4:	080145a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, lr}
 800afc8:	0801453c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, lr}
 800afcc:	08014540 	stmdaeq	r1, {r6, r8, sl, lr}
 800afd0:	080145c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sl, lr}

0800afd4 <strncpy.constprop.0.isra.0>:
 800afd4:	227f      	movs	r2, #127	; 0x7f
 800afd6:	1e4b      	subs	r3, r1, #1
 800afd8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800afdc:	b909      	cbnz	r1, 800afe2 <strncpy.constprop.0.isra.0+0xe>
 800afde:	f006 b885 	b.w	80110ec <memset>
 800afe2:	3a01      	subs	r2, #1
 800afe4:	f800 1b01 	strb.w	r1, [r0], #1
 800afe8:	d1f6      	bne.n	800afd8 <strncpy.constprop.0.isra.0+0x4>
 800afea:	4770      	bx	lr

0800afec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800afec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800afee:	88c6      	ldrh	r6, [r0, #6]
 800aff0:	8885      	ldrh	r5, [r0, #4]
 800aff2:	42ae      	cmp	r6, r5
 800aff4:	d216      	bcs.n	800b024 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800aff6:	4604      	mov	r4, r0
 800aff8:	6800      	ldr	r0, [r0, #0]
 800affa:	1bad      	subs	r5, r5, r6
 800affc:	4430      	add	r0, r6
 800affe:	7a26      	ldrb	r6, [r4, #8]
 800b000:	b923      	cbnz	r3, 800b00c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800b002:	b926      	cbnz	r6, 800b00e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800b004:	9200      	str	r2, [sp, #0]
 800b006:	460b      	mov	r3, r1
 800b008:	4a09      	ldr	r2, [pc, #36]	; (800b030 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800b00a:	e003      	b.n	800b014 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800b00c:	b166      	cbz	r6, 800b028 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800b00e:	460b      	mov	r3, r1
 800b010:	9200      	str	r2, [sp, #0]
 800b012:	4a08      	ldr	r2, [pc, #32]	; (800b034 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800b014:	4629      	mov	r1, r5
 800b016:	f7fe f96d 	bl	80092f4 <snprintf>
 800b01a:	4285      	cmp	r5, r0
 800b01c:	bfa2      	ittt	ge
 800b01e:	88e3      	ldrhge	r3, [r4, #6]
 800b020:	181b      	addge	r3, r3, r0
 800b022:	80e3      	strhge	r3, [r4, #6]
 800b024:	b002      	add	sp, #8
 800b026:	bd70      	pop	{r4, r5, r6, pc}
 800b028:	9200      	str	r2, [sp, #0]
 800b02a:	460b      	mov	r3, r1
 800b02c:	4a02      	ldr	r2, [pc, #8]	; (800b038 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b02e:	e7f1      	b.n	800b014 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800b030:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800b034:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800b038:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}

0800b03c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800b03c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b03e:	88c6      	ldrh	r6, [r0, #6]
 800b040:	8885      	ldrh	r5, [r0, #4]
 800b042:	42ae      	cmp	r6, r5
 800b044:	d216      	bcs.n	800b074 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 800b046:	4604      	mov	r4, r0
 800b048:	6800      	ldr	r0, [r0, #0]
 800b04a:	1bad      	subs	r5, r5, r6
 800b04c:	4430      	add	r0, r6
 800b04e:	7a26      	ldrb	r6, [r4, #8]
 800b050:	b923      	cbnz	r3, 800b05c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 800b052:	b926      	cbnz	r6, 800b05e <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 800b054:	9200      	str	r2, [sp, #0]
 800b056:	460b      	mov	r3, r1
 800b058:	4a09      	ldr	r2, [pc, #36]	; (800b080 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800b05a:	e003      	b.n	800b064 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800b05c:	b166      	cbz	r6, 800b078 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800b05e:	460b      	mov	r3, r1
 800b060:	9200      	str	r2, [sp, #0]
 800b062:	4a08      	ldr	r2, [pc, #32]	; (800b084 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 800b064:	4629      	mov	r1, r5
 800b066:	f7fe f945 	bl	80092f4 <snprintf>
 800b06a:	4285      	cmp	r5, r0
 800b06c:	bfa2      	ittt	ge
 800b06e:	88e3      	ldrhge	r3, [r4, #6]
 800b070:	181b      	addge	r3, r3, r0
 800b072:	80e3      	strhge	r3, [r4, #6]
 800b074:	b002      	add	sp, #8
 800b076:	bd70      	pop	{r4, r5, r6, pc}
 800b078:	9200      	str	r2, [sp, #0]
 800b07a:	460b      	mov	r3, r1
 800b07c:	4a02      	ldr	r2, [pc, #8]	; (800b088 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b07e:	e7f1      	b.n	800b064 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800b080:	080137bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800b084:	080137b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, ip, sp}
 800b088:	080137bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}

0800b08c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800b08c:	b510      	push	{r4, lr}
 800b08e:	4604      	mov	r4, r0
 800b090:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800b094:	f840 1b04 	str.w	r1, [r0], #4
 800b098:	2100      	movs	r1, #0
 800b09a:	f006 f827 	bl	80110ec <memset>
 800b09e:	4b02      	ldr	r3, [pc, #8]	; (800b0a8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	60a3      	str	r3, [r4, #8]
 800b0a4:	bd10      	pop	{r4, pc}
 800b0a6:	bf00      	nop
 800b0a8:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

0800b0ac <OSCServerParams::Load()>:
 800b0ac:	b508      	push	{r3, lr}
 800b0ae:	2300      	movs	r3, #0
 800b0b0:	4601      	mov	r1, r0
 800b0b2:	6043      	str	r3, [r0, #4]
 800b0b4:	6800      	ldr	r0, [r0, #0]
 800b0b6:	b120      	cbz	r0, 800b0c2 <OSCServerParams::Load()+0x16>
 800b0b8:	6803      	ldr	r3, [r0, #0]
 800b0ba:	3104      	adds	r1, #4
 800b0bc:	68db      	ldr	r3, [r3, #12]
 800b0be:	4798      	blx	r3
 800b0c0:	2001      	movs	r0, #1
 800b0c2:	bd08      	pop	{r3, pc}

0800b0c4 <OSCServerParams::Load(char const*, unsigned int)>:
 800b0c4:	6803      	ldr	r3, [r0, #0]
 800b0c6:	b1d3      	cbz	r3, 800b0fe <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 800b0c8:	2300      	movs	r3, #0
 800b0ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0cc:	460d      	mov	r5, r1
 800b0ce:	4616      	mov	r6, r2
 800b0d0:	4604      	mov	r4, r0
 800b0d2:	6043      	str	r3, [r0, #4]
 800b0d4:	4602      	mov	r2, r0
 800b0d6:	490a      	ldr	r1, [pc, #40]	; (800b100 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 800b0d8:	4668      	mov	r0, sp
 800b0da:	f005 f9a1 	bl	8010420 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b0de:	4632      	mov	r2, r6
 800b0e0:	4629      	mov	r1, r5
 800b0e2:	4668      	mov	r0, sp
 800b0e4:	f005 f9a0 	bl	8010428 <ReadConfigFile::Read(char const*, unsigned int)>
 800b0e8:	4621      	mov	r1, r4
 800b0ea:	f851 0b04 	ldr.w	r0, [r1], #4
 800b0ee:	6803      	ldr	r3, [r0, #0]
 800b0f0:	689b      	ldr	r3, [r3, #8]
 800b0f2:	4798      	blx	r3
 800b0f4:	4668      	mov	r0, sp
 800b0f6:	f005 f996 	bl	8010426 <ReadConfigFile::~ReadConfigFile()>
 800b0fa:	b002      	add	sp, #8
 800b0fc:	bd70      	pop	{r4, r5, r6, pc}
 800b0fe:	4770      	bx	lr
 800b100:	0800b1fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, ip, sp, pc}

0800b104 <OSCServerParams::callbackFunction(char const*)>:
 800b104:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b106:	460d      	mov	r5, r1
 800b108:	4604      	mov	r4, r0
 800b10a:	4937      	ldr	r1, [pc, #220]	; (800b1e8 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800b10c:	4628      	mov	r0, r5
 800b10e:	f10d 0202 	add.w	r2, sp, #2
 800b112:	f005 fa7a 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b116:	b980      	cbnz	r0, 800b13a <OSCServerParams::callbackFunction(char const*)+0x36>
 800b118:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b11c:	6863      	ldr	r3, [r4, #4]
 800b11e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b122:	bf33      	iteet	cc
 800b124:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 800b128:	8122      	strhcs	r2, [r4, #8]
 800b12a:	f043 0301 	orrcs.w	r3, r3, #1
 800b12e:	8122      	strhcc	r2, [r4, #8]
 800b130:	bf38      	it	cc
 800b132:	f023 0301 	biccc.w	r3, r3, #1
 800b136:	6063      	str	r3, [r4, #4]
 800b138:	e028      	b.n	800b18c <OSCServerParams::callbackFunction(char const*)+0x88>
 800b13a:	4628      	mov	r0, r5
 800b13c:	492b      	ldr	r1, [pc, #172]	; (800b1ec <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800b13e:	f10d 0202 	add.w	r2, sp, #2
 800b142:	f005 fa62 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b146:	b978      	cbnz	r0, 800b168 <OSCServerParams::callbackFunction(char const*)+0x64>
 800b148:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b14c:	6863      	ldr	r3, [r4, #4]
 800b14e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b152:	bf33      	iteet	cc
 800b154:	f242 3228 	movwcc	r2, #9000	; 0x2328
 800b158:	8162      	strhcs	r2, [r4, #10]
 800b15a:	f043 0302 	orrcs.w	r3, r3, #2
 800b15e:	8162      	strhcc	r2, [r4, #10]
 800b160:	bf38      	it	cc
 800b162:	f023 0302 	biccc.w	r3, r3, #2
 800b166:	e7e6      	b.n	800b136 <OSCServerParams::callbackFunction(char const*)+0x32>
 800b168:	4628      	mov	r0, r5
 800b16a:	4921      	ldr	r1, [pc, #132]	; (800b1f0 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800b16c:	f10d 0201 	add.w	r2, sp, #1
 800b170:	f005 fa92 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b174:	b978      	cbnz	r0, 800b196 <OSCServerParams::callbackFunction(char const*)+0x92>
 800b176:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b17a:	6863      	ldr	r3, [r4, #4]
 800b17c:	b142      	cbz	r2, 800b190 <OSCServerParams::callbackFunction(char const*)+0x8c>
 800b17e:	f043 0308 	orr.w	r3, r3, #8
 800b182:	3a00      	subs	r2, #0
 800b184:	bf18      	it	ne
 800b186:	2201      	movne	r2, #1
 800b188:	6063      	str	r3, [r4, #4]
 800b18a:	7362      	strb	r2, [r4, #13]
 800b18c:	b002      	add	sp, #8
 800b18e:	bd70      	pop	{r4, r5, r6, pc}
 800b190:	f023 0308 	bic.w	r3, r3, #8
 800b194:	e7f5      	b.n	800b182 <OSCServerParams::callbackFunction(char const*)+0x7e>
 800b196:	267f      	movs	r6, #127	; 0x7f
 800b198:	4628      	mov	r0, r5
 800b19a:	4916      	ldr	r1, [pc, #88]	; (800b1f4 <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800b19c:	ab01      	add	r3, sp, #4
 800b19e:	f104 020e 	add.w	r2, r4, #14
 800b1a2:	9601      	str	r6, [sp, #4]
 800b1a4:	f005 f974 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1a8:	b918      	cbnz	r0, 800b1b2 <OSCServerParams::callbackFunction(char const*)+0xae>
 800b1aa:	6863      	ldr	r3, [r4, #4]
 800b1ac:	f043 0304 	orr.w	r3, r3, #4
 800b1b0:	e7c1      	b.n	800b136 <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1b2:	4628      	mov	r0, r5
 800b1b4:	4910      	ldr	r1, [pc, #64]	; (800b1f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800b1b6:	ab01      	add	r3, sp, #4
 800b1b8:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 800b1bc:	9601      	str	r6, [sp, #4]
 800b1be:	f005 f967 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1c2:	b918      	cbnz	r0, 800b1cc <OSCServerParams::callbackFunction(char const*)+0xc8>
 800b1c4:	6863      	ldr	r3, [r4, #4]
 800b1c6:	f043 0320 	orr.w	r3, r3, #32
 800b1ca:	e7b4      	b.n	800b136 <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1cc:	4628      	mov	r0, r5
 800b1ce:	490a      	ldr	r1, [pc, #40]	; (800b1f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800b1d0:	ab01      	add	r3, sp, #4
 800b1d2:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 800b1d6:	9601      	str	r6, [sp, #4]
 800b1d8:	f005 f95a 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b1dc:	2800      	cmp	r0, #0
 800b1de:	d1d5      	bne.n	800b18c <OSCServerParams::callbackFunction(char const*)+0x88>
 800b1e0:	6863      	ldr	r3, [r4, #4]
 800b1e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b1e6:	e7a6      	b.n	800b136 <OSCServerParams::callbackFunction(char const*)+0x32>
 800b1e8:	0801465f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, lr}
 800b1ec:	0801466d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sl, lr}
 800b1f0:	08014625 	stmdaeq	r1, {r0, r2, r5, r9, sl, lr}
 800b1f4:	08014648 	stmdaeq	r1, {r3, r6, r9, sl, lr}
 800b1f8:	08014655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, lr}

0800b1fc <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 800b1fc:	f7ff bf82 	b.w	800b104 <OSCServerParams::callbackFunction(char const*)>

0800b200 <OSCServerParams::Set(OscServer*)>:
 800b200:	b538      	push	{r3, r4, r5, lr}
 800b202:	460d      	mov	r5, r1
 800b204:	6843      	ldr	r3, [r0, #4]
 800b206:	4604      	mov	r4, r0
 800b208:	07d9      	lsls	r1, r3, #31
 800b20a:	bf44      	itt	mi
 800b20c:	8902      	ldrhmi	r2, [r0, #8]
 800b20e:	802a      	strhmi	r2, [r5, #0]
 800b210:	079a      	lsls	r2, r3, #30
 800b212:	bf44      	itt	mi
 800b214:	8942      	ldrhmi	r2, [r0, #10]
 800b216:	806a      	strhmi	r2, [r5, #2]
 800b218:	0758      	lsls	r0, r3, #29
 800b21a:	d504      	bpl.n	800b226 <OSCServerParams::Set(OscServer*)+0x26>
 800b21c:	4628      	mov	r0, r5
 800b21e:	f104 010e 	add.w	r1, r4, #14
 800b222:	f7ff fcc7 	bl	800abb4 <OscServer::SetPath(char const*)>
 800b226:	6863      	ldr	r3, [r4, #4]
 800b228:	0699      	lsls	r1, r3, #26
 800b22a:	d504      	bpl.n	800b236 <OSCServerParams::Set(OscServer*)+0x36>
 800b22c:	4628      	mov	r0, r5
 800b22e:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 800b232:	f7ff fce5 	bl	800ac00 <OscServer::SetPathInfo(char const*)>
 800b236:	6863      	ldr	r3, [r4, #4]
 800b238:	065a      	lsls	r2, r3, #25
 800b23a:	d504      	bpl.n	800b246 <OSCServerParams::Set(OscServer*)+0x46>
 800b23c:	4628      	mov	r0, r5
 800b23e:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 800b242:	f7ff fcf3 	bl	800ac2c <OscServer::SetPathBlackOut(char const*)>
 800b246:	6863      	ldr	r3, [r4, #4]
 800b248:	071b      	lsls	r3, r3, #28
 800b24a:	bf44      	itt	mi
 800b24c:	7b63      	ldrbmi	r3, [r4, #13]
 800b24e:	72ab      	strbmi	r3, [r5, #10]
 800b250:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b254 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 800b254:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b256:	4604      	mov	r4, r0
 800b258:	4615      	mov	r5, r2
 800b25a:	461e      	mov	r6, r3
 800b25c:	b087      	sub	sp, #28
 800b25e:	3004      	adds	r0, #4
 800b260:	2900      	cmp	r1, #0
 800b262:	d061      	beq.n	800b328 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd4>
 800b264:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800b268:	f005 ff29 	bl	80110be <memmove>
 800b26c:	4633      	mov	r3, r6
 800b26e:	462a      	mov	r2, r5
 800b270:	4946      	ldr	r1, [pc, #280]	; (800b38c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 800b272:	a803      	add	r0, sp, #12
 800b274:	f005 f834 	bl	80102e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b278:	6863      	ldr	r3, [r4, #4]
 800b27a:	f104 070e 	add.w	r7, r4, #14
 800b27e:	075e      	lsls	r6, r3, #29
 800b280:	d403      	bmi.n	800b28a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 800b282:	4638      	mov	r0, r7
 800b284:	4942      	ldr	r1, [pc, #264]	; (800b390 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 800b286:	f7ff fea5 	bl	800afd4 <strncpy.constprop.0.isra.0>
 800b28a:	6863      	ldr	r3, [r4, #4]
 800b28c:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 800b290:	069d      	lsls	r5, r3, #26
 800b292:	d403      	bmi.n	800b29c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 800b294:	4630      	mov	r0, r6
 800b296:	493f      	ldr	r1, [pc, #252]	; (800b394 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 800b298:	f7ff fe9c 	bl	800afd4 <strncpy.constprop.0.isra.0>
 800b29c:	6863      	ldr	r3, [r4, #4]
 800b29e:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 800b2a2:	0658      	lsls	r0, r3, #25
 800b2a4:	d403      	bmi.n	800b2ae <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 800b2a6:	4628      	mov	r0, r5
 800b2a8:	493b      	ldr	r1, [pc, #236]	; (800b398 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 800b2aa:	f7ff fe93 	bl	800afd4 <strncpy.constprop.0.isra.0>
 800b2ae:	6863      	ldr	r3, [r4, #4]
 800b2b0:	8922      	ldrh	r2, [r4, #8]
 800b2b2:	493a      	ldr	r1, [pc, #232]	; (800b39c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 800b2b4:	f003 0301 	and.w	r3, r3, #1
 800b2b8:	a803      	add	r0, sp, #12
 800b2ba:	f7ff fe97 	bl	800afec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b2be:	6863      	ldr	r3, [r4, #4]
 800b2c0:	8962      	ldrh	r2, [r4, #10]
 800b2c2:	4937      	ldr	r1, [pc, #220]	; (800b3a0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 800b2c4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800b2c8:	a803      	add	r0, sp, #12
 800b2ca:	f7ff fe8f 	bl	800afec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b2ce:	6863      	ldr	r3, [r4, #4]
 800b2d0:	463a      	mov	r2, r7
 800b2d2:	4934      	ldr	r1, [pc, #208]	; (800b3a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 800b2d4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800b2d8:	a803      	add	r0, sp, #12
 800b2da:	f7ff feaf 	bl	800b03c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b2de:	6863      	ldr	r3, [r4, #4]
 800b2e0:	4632      	mov	r2, r6
 800b2e2:	4931      	ldr	r1, [pc, #196]	; (800b3a8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 800b2e4:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800b2e8:	a803      	add	r0, sp, #12
 800b2ea:	f7ff fea7 	bl	800b03c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b2ee:	6863      	ldr	r3, [r4, #4]
 800b2f0:	462a      	mov	r2, r5
 800b2f2:	492e      	ldr	r1, [pc, #184]	; (800b3ac <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 800b2f4:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800b2f8:	a803      	add	r0, sp, #12
 800b2fa:	f7ff fe9f 	bl	800b03c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800b2fe:	7b63      	ldrb	r3, [r4, #13]
 800b300:	6861      	ldr	r1, [r4, #4]
 800b302:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b306:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800b30a:	42a2      	cmp	r2, r4
 800b30c:	d221      	bcs.n	800b352 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800b30e:	9803      	ldr	r0, [sp, #12]
 800b310:	0709      	lsls	r1, r1, #28
 800b312:	4410      	add	r0, r2
 800b314:	eba4 0402 	sub.w	r4, r4, r2
 800b318:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800b31c:	d40b      	bmi.n	800b336 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800b31e:	b95a      	cbnz	r2, 800b338 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 800b320:	9300      	str	r3, [sp, #0]
 800b322:	4a23      	ldr	r2, [pc, #140]	; (800b3b0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 800b324:	4b23      	ldr	r3, [pc, #140]	; (800b3b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b326:	e00a      	b.n	800b33e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800b328:	6823      	ldr	r3, [r4, #0]
 800b32a:	4601      	mov	r1, r0
 800b32c:	681a      	ldr	r2, [r3, #0]
 800b32e:	4618      	mov	r0, r3
 800b330:	68d2      	ldr	r2, [r2, #12]
 800b332:	4790      	blx	r2
 800b334:	e79a      	b.n	800b26c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800b336:	b32a      	cbz	r2, 800b384 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x130>
 800b338:	9300      	str	r3, [sp, #0]
 800b33a:	4a1f      	ldr	r2, [pc, #124]	; (800b3b8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800b33c:	4b1d      	ldr	r3, [pc, #116]	; (800b3b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b33e:	4621      	mov	r1, r4
 800b340:	f7fd ffd8 	bl	80092f4 <snprintf>
 800b344:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b348:	4284      	cmp	r4, r0
 800b34a:	bfa4      	itt	ge
 800b34c:	181b      	addge	r3, r3, r0
 800b34e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800b352:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b356:	b17b      	cbz	r3, 800b378 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x124>
 800b358:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b35c:	9b03      	ldr	r3, [sp, #12]
 800b35e:	4413      	add	r3, r2
 800b360:	227d      	movs	r2, #125	; 0x7d
 800b362:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b366:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b36a:	9903      	ldr	r1, [sp, #12]
 800b36c:	54ca      	strb	r2, [r1, r3]
 800b36e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b372:	3301      	adds	r3, #1
 800b374:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b378:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b37c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b37e:	601a      	str	r2, [r3, #0]
 800b380:	b007      	add	sp, #28
 800b382:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b384:	9300      	str	r3, [sp, #0]
 800b386:	4a0d      	ldr	r2, [pc, #52]	; (800b3bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 800b388:	4b0a      	ldr	r3, [pc, #40]	; (800b3b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800b38a:	e7d8      	b.n	800b33e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800b38c:	0801464d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, lr}
 800b390:	2000083c 	andcs	r0, r0, ip, lsr r8
 800b394:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800b398:	200007bc 			; <UNDEFINED> instruction: 0x200007bc
 800b39c:	0801465f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, lr}
 800b3a0:	0801466d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sl, lr}
 800b3a4:	08014648 	stmdaeq	r1, {r3, r6, r9, sl, lr}
 800b3a8:	08014655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, lr}
 800b3ac:	0801463a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, lr}
 800b3b0:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800b3b4:	08014625 	stmdaeq	r1, {r0, r2, r5, r9, sl, lr}
 800b3b8:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800b3bc:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}

0800b3c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 800b3c0:	b513      	push	{r0, r1, r4, lr}
 800b3c2:	6804      	ldr	r4, [r0, #0]
 800b3c4:	b914      	cbnz	r4, 800b3cc <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b3c6:	601c      	str	r4, [r3, #0]
 800b3c8:	b002      	add	sp, #8
 800b3ca:	bd10      	pop	{r4, pc}
 800b3cc:	9300      	str	r3, [sp, #0]
 800b3ce:	4613      	mov	r3, r2
 800b3d0:	460a      	mov	r2, r1
 800b3d2:	2100      	movs	r1, #0
 800b3d4:	f7ff ff3e 	bl	800b254 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 800b3d8:	e7f6      	b.n	800b3c8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800b3da <OSCServerParams::Dump()>:
 800b3da:	4770      	bx	lr

0800b3dc <lo_pattern_match>:
 800b3dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3de:	4605      	mov	r5, r0
 800b3e0:	460b      	mov	r3, r1
 800b3e2:	7819      	ldrb	r1, [r3, #0]
 800b3e4:	782a      	ldrb	r2, [r5, #0]
 800b3e6:	b919      	cbnz	r1, 800b3f0 <lo_pattern_match+0x14>
 800b3e8:	fab2 f082 	clz	r0, r2
 800b3ec:	0940      	lsrs	r0, r0, #5
 800b3ee:	e09f      	b.n	800b530 <lo_pattern_match+0x154>
 800b3f0:	b90a      	cbnz	r2, 800b3f6 <lo_pattern_match+0x1a>
 800b3f2:	292a      	cmp	r1, #42	; 0x2a
 800b3f4:	d132      	bne.n	800b45c <lo_pattern_match+0x80>
 800b3f6:	295b      	cmp	r1, #91	; 0x5b
 800b3f8:	f103 0401 	add.w	r4, r3, #1
 800b3fc:	d03c      	beq.n	800b478 <lo_pattern_match+0x9c>
 800b3fe:	d806      	bhi.n	800b40e <lo_pattern_match+0x32>
 800b400:	292a      	cmp	r1, #42	; 0x2a
 800b402:	d012      	beq.n	800b42a <lo_pattern_match+0x4e>
 800b404:	293f      	cmp	r1, #63	; 0x3f
 800b406:	d032      	beq.n	800b46e <lo_pattern_match+0x92>
 800b408:	4291      	cmp	r1, r2
 800b40a:	d032      	beq.n	800b472 <lo_pattern_match+0x96>
 800b40c:	e026      	b.n	800b45c <lo_pattern_match+0x80>
 800b40e:	297b      	cmp	r1, #123	; 0x7b
 800b410:	d1fa      	bne.n	800b408 <lo_pattern_match+0x2c>
 800b412:	7820      	ldrb	r0, [r4, #0]
 800b414:	4626      	mov	r6, r4
 800b416:	1c67      	adds	r7, r4, #1
 800b418:	2800      	cmp	r0, #0
 800b41a:	f000 8089 	beq.w	800b530 <lo_pattern_match+0x154>
 800b41e:	287d      	cmp	r0, #125	; 0x7d
 800b420:	d161      	bne.n	800b4e6 <lo_pattern_match+0x10a>
 800b422:	1c9c      	adds	r4, r3, #2
 800b424:	4628      	mov	r0, r5
 800b426:	785b      	ldrb	r3, [r3, #1]
 800b428:	e06d      	b.n	800b506 <lo_pattern_match+0x12a>
 800b42a:	7823      	ldrb	r3, [r4, #0]
 800b42c:	4626      	mov	r6, r4
 800b42e:	2b2a      	cmp	r3, #42	; 0x2a
 800b430:	f104 0401 	add.w	r4, r4, #1
 800b434:	d0f9      	beq.n	800b42a <lo_pattern_match+0x4e>
 800b436:	b1c3      	cbz	r3, 800b46a <lo_pattern_match+0x8e>
 800b438:	2b3f      	cmp	r3, #63	; 0x3f
 800b43a:	d00b      	beq.n	800b454 <lo_pattern_match+0x78>
 800b43c:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 800b440:	2a5b      	cmp	r2, #91	; 0x5b
 800b442:	d007      	beq.n	800b454 <lo_pattern_match+0x78>
 800b444:	462a      	mov	r2, r5
 800b446:	4615      	mov	r5, r2
 800b448:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b44c:	2800      	cmp	r0, #0
 800b44e:	d06f      	beq.n	800b530 <lo_pattern_match+0x154>
 800b450:	4283      	cmp	r3, r0
 800b452:	d1f8      	bne.n	800b446 <lo_pattern_match+0x6a>
 800b454:	4628      	mov	r0, r5
 800b456:	7803      	ldrb	r3, [r0, #0]
 800b458:	3501      	adds	r5, #1
 800b45a:	b90b      	cbnz	r3, 800b460 <lo_pattern_match+0x84>
 800b45c:	2000      	movs	r0, #0
 800b45e:	e067      	b.n	800b530 <lo_pattern_match+0x154>
 800b460:	4631      	mov	r1, r6
 800b462:	f7ff ffbb 	bl	800b3dc <lo_pattern_match>
 800b466:	2800      	cmp	r0, #0
 800b468:	d0f4      	beq.n	800b454 <lo_pattern_match+0x78>
 800b46a:	2001      	movs	r0, #1
 800b46c:	e060      	b.n	800b530 <lo_pattern_match+0x154>
 800b46e:	2a00      	cmp	r2, #0
 800b470:	d0f4      	beq.n	800b45c <lo_pattern_match+0x80>
 800b472:	4623      	mov	r3, r4
 800b474:	3501      	adds	r5, #1
 800b476:	e7b4      	b.n	800b3e2 <lo_pattern_match+0x6>
 800b478:	7859      	ldrb	r1, [r3, #1]
 800b47a:	2921      	cmp	r1, #33	; 0x21
 800b47c:	bf0a      	itet	eq
 800b47e:	2601      	moveq	r6, #1
 800b480:	2600      	movne	r6, #0
 800b482:	1c9c      	addeq	r4, r3, #2
 800b484:	4621      	mov	r1, r4
 800b486:	780b      	ldrb	r3, [r1, #0]
 800b488:	3401      	adds	r4, #1
 800b48a:	b1c3      	cbz	r3, 800b4be <lo_pattern_match+0xe2>
 800b48c:	7848      	ldrb	r0, [r1, #1]
 800b48e:	2800      	cmp	r0, #0
 800b490:	d04e      	beq.n	800b530 <lo_pattern_match+0x154>
 800b492:	282d      	cmp	r0, #45	; 0x2d
 800b494:	d11c      	bne.n	800b4d0 <lo_pattern_match+0xf4>
 800b496:	7888      	ldrb	r0, [r1, #2]
 800b498:	1c8c      	adds	r4, r1, #2
 800b49a:	2800      	cmp	r0, #0
 800b49c:	d048      	beq.n	800b530 <lo_pattern_match+0x154>
 800b49e:	285d      	cmp	r0, #93	; 0x5d
 800b4a0:	d009      	beq.n	800b4b6 <lo_pattern_match+0xda>
 800b4a2:	429a      	cmp	r2, r3
 800b4a4:	d005      	beq.n	800b4b2 <lo_pattern_match+0xd6>
 800b4a6:	4290      	cmp	r0, r2
 800b4a8:	d003      	beq.n	800b4b2 <lo_pattern_match+0xd6>
 800b4aa:	429a      	cmp	r2, r3
 800b4ac:	d9ea      	bls.n	800b484 <lo_pattern_match+0xa8>
 800b4ae:	4290      	cmp	r0, r2
 800b4b0:	d9e8      	bls.n	800b484 <lo_pattern_match+0xa8>
 800b4b2:	2301      	movs	r3, #1
 800b4b4:	e003      	b.n	800b4be <lo_pattern_match+0xe2>
 800b4b6:	429a      	cmp	r2, r3
 800b4b8:	bf34      	ite	cc
 800b4ba:	2300      	movcc	r3, #0
 800b4bc:	2301      	movcs	r3, #1
 800b4be:	429e      	cmp	r6, r3
 800b4c0:	d0cc      	beq.n	800b45c <lo_pattern_match+0x80>
 800b4c2:	f814 0b01 	ldrb.w	r0, [r4], #1
 800b4c6:	2800      	cmp	r0, #0
 800b4c8:	d032      	beq.n	800b530 <lo_pattern_match+0x154>
 800b4ca:	285d      	cmp	r0, #93	; 0x5d
 800b4cc:	d1f9      	bne.n	800b4c2 <lo_pattern_match+0xe6>
 800b4ce:	e7d0      	b.n	800b472 <lo_pattern_match+0x96>
 800b4d0:	285d      	cmp	r0, #93	; 0x5d
 800b4d2:	d103      	bne.n	800b4dc <lo_pattern_match+0x100>
 800b4d4:	1ad2      	subs	r2, r2, r3
 800b4d6:	4253      	negs	r3, r2
 800b4d8:	4153      	adcs	r3, r2
 800b4da:	e7f0      	b.n	800b4be <lo_pattern_match+0xe2>
 800b4dc:	4290      	cmp	r0, r2
 800b4de:	d0e8      	beq.n	800b4b2 <lo_pattern_match+0xd6>
 800b4e0:	429a      	cmp	r2, r3
 800b4e2:	d1cf      	bne.n	800b484 <lo_pattern_match+0xa8>
 800b4e4:	e7e5      	b.n	800b4b2 <lo_pattern_match+0xd6>
 800b4e6:	463c      	mov	r4, r7
 800b4e8:	e793      	b.n	800b412 <lo_pattern_match+0x36>
 800b4ea:	2b2c      	cmp	r3, #44	; 0x2c
 800b4ec:	d10f      	bne.n	800b50e <lo_pattern_match+0x132>
 800b4ee:	4639      	mov	r1, r7
 800b4f0:	f7ff ff74 	bl	800b3dc <lo_pattern_match>
 800b4f4:	2800      	cmp	r0, #0
 800b4f6:	d1b8      	bne.n	800b46a <lo_pattern_match+0x8e>
 800b4f8:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b4fc:	b1c3      	cbz	r3, 800b530 <lo_pattern_match+0x154>
 800b4fe:	462a      	mov	r2, r5
 800b500:	4610      	mov	r0, r2
 800b502:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b506:	2b00      	cmp	r3, #0
 800b508:	d1ef      	bne.n	800b4ea <lo_pattern_match+0x10e>
 800b50a:	4605      	mov	r5, r0
 800b50c:	e7b1      	b.n	800b472 <lo_pattern_match+0x96>
 800b50e:	2b7d      	cmp	r3, #125	; 0x7d
 800b510:	7802      	ldrb	r2, [r0, #0]
 800b512:	d104      	bne.n	800b51e <lo_pattern_match+0x142>
 800b514:	7823      	ldrb	r3, [r4, #0]
 800b516:	431a      	orrs	r2, r3
 800b518:	d0a7      	beq.n	800b46a <lo_pattern_match+0x8e>
 800b51a:	1e45      	subs	r5, r0, #1
 800b51c:	e7a9      	b.n	800b472 <lo_pattern_match+0x96>
 800b51e:	4293      	cmp	r3, r2
 800b520:	d107      	bne.n	800b532 <lo_pattern_match+0x156>
 800b522:	1c42      	adds	r2, r0, #1
 800b524:	7840      	ldrb	r0, [r0, #1]
 800b526:	2800      	cmp	r0, #0
 800b528:	d1ea      	bne.n	800b500 <lo_pattern_match+0x124>
 800b52a:	7873      	ldrb	r3, [r6, #1]
 800b52c:	2b00      	cmp	r3, #0
 800b52e:	d0e7      	beq.n	800b500 <lo_pattern_match+0x124>
 800b530:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b532:	4623      	mov	r3, r4
 800b534:	781a      	ldrb	r2, [r3, #0]
 800b536:	461c      	mov	r4, r3
 800b538:	2a2c      	cmp	r2, #44	; 0x2c
 800b53a:	f103 0301 	add.w	r3, r3, #1
 800b53e:	d004      	beq.n	800b54a <lo_pattern_match+0x16e>
 800b540:	2a7d      	cmp	r2, #125	; 0x7d
 800b542:	d08b      	beq.n	800b45c <lo_pattern_match+0x80>
 800b544:	2a00      	cmp	r2, #0
 800b546:	d1f5      	bne.n	800b534 <lo_pattern_match+0x158>
 800b548:	e7d9      	b.n	800b4fe <lo_pattern_match+0x122>
 800b54a:	461c      	mov	r4, r3
 800b54c:	e7d7      	b.n	800b4fe <lo_pattern_match+0x122>

0800b54e <osc::string_validate(void*, unsigned int)>:
 800b54e:	b510      	push	{r4, lr}
 800b550:	2200      	movs	r2, #0
 800b552:	4604      	mov	r4, r0
 800b554:	428a      	cmp	r2, r1
 800b556:	d005      	beq.n	800b564 <osc::string_validate(void*, unsigned int)+0x16>
 800b558:	5ca3      	ldrb	r3, [r4, r2]
 800b55a:	b933      	cbnz	r3, 800b56a <osc::string_validate(void*, unsigned int)+0x1c>
 800b55c:	f022 0303 	bic.w	r3, r2, #3
 800b560:	1d18      	adds	r0, r3, #4
 800b562:	d104      	bne.n	800b56e <osc::string_validate(void*, unsigned int)+0x20>
 800b564:	f06f 0001 	mvn.w	r0, #1
 800b568:	e00b      	b.n	800b582 <osc::string_validate(void*, unsigned int)+0x34>
 800b56a:	3201      	adds	r2, #1
 800b56c:	e7f2      	b.n	800b554 <osc::string_validate(void*, unsigned int)+0x6>
 800b56e:	4281      	cmp	r1, r0
 800b570:	d205      	bcs.n	800b57e <osc::string_validate(void*, unsigned int)+0x30>
 800b572:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b576:	e004      	b.n	800b582 <osc::string_validate(void*, unsigned int)+0x34>
 800b578:	5ca3      	ldrb	r3, [r4, r2]
 800b57a:	b91b      	cbnz	r3, 800b584 <osc::string_validate(void*, unsigned int)+0x36>
 800b57c:	3201      	adds	r2, #1
 800b57e:	4282      	cmp	r2, r0
 800b580:	d3fa      	bcc.n	800b578 <osc::string_validate(void*, unsigned int)+0x2a>
 800b582:	bd10      	pop	{r4, pc}
 800b584:	f06f 0002 	mvn.w	r0, #2
 800b588:	e7fb      	b.n	800b582 <osc::string_validate(void*, unsigned int)+0x34>

0800b58a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800b58a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b58e:	2300      	movs	r3, #0
 800b590:	460d      	mov	r5, r1
 800b592:	e9c0 1200 	strd	r1, r2, [r0]
 800b596:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b59a:	7203      	strb	r3, [r0, #8]
 800b59c:	6183      	str	r3, [r0, #24]
 800b59e:	4604      	mov	r4, r0
 800b5a0:	4611      	mov	r1, r2
 800b5a2:	4628      	mov	r0, r5
 800b5a4:	4617      	mov	r7, r2
 800b5a6:	f7ff ffd2 	bl	800b54e <osc::string_validate(void*, unsigned int)>
 800b5aa:	f1b0 0800 	subs.w	r8, r0, #0
 800b5ae:	db25      	blt.n	800b5fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5b0:	eb05 0608 	add.w	r6, r5, r8
 800b5b4:	4630      	mov	r0, r6
 800b5b6:	60e6      	str	r6, [r4, #12]
 800b5b8:	eba7 0108 	sub.w	r1, r7, r8
 800b5bc:	f7ff ffc7 	bl	800b54e <osc::string_validate(void*, unsigned int)>
 800b5c0:	2800      	cmp	r0, #0
 800b5c2:	db1b      	blt.n	800b5fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5c4:	f815 3008 	ldrb.w	r3, [r5, r8]
 800b5c8:	2b2c      	cmp	r3, #44	; 0x2c
 800b5ca:	d117      	bne.n	800b5fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5cc:	7873      	ldrb	r3, [r6, #1]
 800b5ce:	2b73      	cmp	r3, #115	; 0x73
 800b5d0:	d001      	beq.n	800b5d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 800b5d2:	2b62      	cmp	r3, #98	; 0x62
 800b5d4:	d101      	bne.n	800b5da <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 800b5d6:	78b3      	ldrb	r3, [r6, #2]
 800b5d8:	b983      	cbnz	r3, 800b5fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800b5da:	3601      	adds	r6, #1
 800b5dc:	4632      	mov	r2, r6
 800b5de:	60e6      	str	r6, [r4, #12]
 800b5e0:	4613      	mov	r3, r2
 800b5e2:	7819      	ldrb	r1, [r3, #0]
 800b5e4:	3201      	adds	r2, #1
 800b5e6:	2900      	cmp	r1, #0
 800b5e8:	d1fa      	bne.n	800b5e0 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800b5ea:	1b9b      	subs	r3, r3, r6
 800b5ec:	6123      	str	r3, [r4, #16]
 800b5ee:	2301      	movs	r3, #1
 800b5f0:	4440      	add	r0, r8
 800b5f2:	4405      	add	r5, r0
 800b5f4:	1a3f      	subs	r7, r7, r0
 800b5f6:	6165      	str	r5, [r4, #20]
 800b5f8:	61a7      	str	r7, [r4, #24]
 800b5fa:	7223      	strb	r3, [r4, #8]
 800b5fc:	4620      	mov	r0, r4
 800b5fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b602 <OscSimpleMessage::GetFloat(unsigned int)>:
 800b602:	b510      	push	{r4, lr}
 800b604:	6984      	ldr	r4, [r0, #24]
 800b606:	1c4b      	adds	r3, r1, #1
 800b608:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800b60c:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800b610:	d309      	bcc.n	800b626 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800b612:	68c3      	ldr	r3, [r0, #12]
 800b614:	5c5b      	ldrb	r3, [r3, r1]
 800b616:	2b66      	cmp	r3, #102	; 0x66
 800b618:	d105      	bne.n	800b626 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800b61a:	6943      	ldr	r3, [r0, #20]
 800b61c:	4413      	add	r3, r2
 800b61e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800b622:	ba00      	rev	r0, r0
 800b624:	bd10      	pop	{r4, pc}
 800b626:	2000      	movs	r0, #0
 800b628:	e7fc      	b.n	800b624 <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800b62a <OscSimpleMessage::GetInt(unsigned int)>:
 800b62a:	b510      	push	{r4, lr}
 800b62c:	6984      	ldr	r4, [r0, #24]
 800b62e:	1c4b      	adds	r3, r1, #1
 800b630:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800b634:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800b638:	d309      	bcc.n	800b64e <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800b63a:	68c3      	ldr	r3, [r0, #12]
 800b63c:	5c5b      	ldrb	r3, [r3, r1]
 800b63e:	2b69      	cmp	r3, #105	; 0x69
 800b640:	d105      	bne.n	800b64e <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800b642:	6943      	ldr	r3, [r0, #20]
 800b644:	4413      	add	r3, r2
 800b646:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800b64a:	ba00      	rev	r0, r0
 800b64c:	bd10      	pop	{r4, pc}
 800b64e:	2000      	movs	r0, #0
 800b650:	e7fc      	b.n	800b64c <OscSimpleMessage::GetInt(unsigned int)+0x22>

0800b652 <OscSimpleMessage::GetBlob(unsigned int)>:
 800b652:	b510      	push	{r4, lr}
 800b654:	68cb      	ldr	r3, [r1, #12]
 800b656:	781b      	ldrb	r3, [r3, #0]
 800b658:	2b62      	cmp	r3, #98	; 0x62
 800b65a:	d10a      	bne.n	800b672 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800b65c:	694a      	ldr	r2, [r1, #20]
 800b65e:	6989      	ldr	r1, [r1, #24]
 800b660:	6813      	ldr	r3, [r2, #0]
 800b662:	ba1b      	rev	r3, r3
 800b664:	1d1c      	adds	r4, r3, #4
 800b666:	428c      	cmp	r4, r1
 800b668:	d803      	bhi.n	800b672 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800b66a:	3204      	adds	r2, #4
 800b66c:	6002      	str	r2, [r0, #0]
 800b66e:	6043      	str	r3, [r0, #4]
 800b670:	bd10      	pop	{r4, pc}
 800b672:	2300      	movs	r3, #0
 800b674:	6003      	str	r3, [r0, #0]
 800b676:	e7fa      	b.n	800b66e <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800b678 <osc::string_size(char const*)>:
 800b678:	4602      	mov	r2, r0
 800b67a:	4613      	mov	r3, r2
 800b67c:	7819      	ldrb	r1, [r3, #0]
 800b67e:	3201      	adds	r2, #1
 800b680:	2900      	cmp	r1, #0
 800b682:	d1fa      	bne.n	800b67a <osc::string_size(char const*)+0x2>
 800b684:	1a18      	subs	r0, r3, r0
 800b686:	f020 0003 	bic.w	r0, r0, #3
 800b68a:	3004      	adds	r0, #4
 800b68c:	4770      	bx	lr
	...

0800b690 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 800b690:	b570      	push	{r4, r5, r6, lr}
 800b692:	2400      	movs	r4, #0
 800b694:	480a      	ldr	r0, [pc, #40]	; (800b6c0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 800b696:	1f16      	subs	r6, r2, #4
 800b698:	1985      	adds	r5, r0, r6
 800b69a:	5584      	strb	r4, [r0, r6]
 800b69c:	706c      	strb	r4, [r5, #1]
 800b69e:	70ac      	strb	r4, [r5, #2]
 800b6a0:	70ec      	strb	r4, [r5, #3]
 800b6a2:	4604      	mov	r4, r0
 800b6a4:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b6a8:	f800 5b01 	strb.w	r5, [r0], #1
 800b6ac:	2d00      	cmp	r5, #0
 800b6ae:	d1f9      	bne.n	800b6a4 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 800b6b0:	212c      	movs	r1, #44	; 0x2c
 800b6b2:	54a1      	strb	r1, [r4, r2]
 800b6b4:	4422      	add	r2, r4
 800b6b6:	7053      	strb	r3, [r2, #1]
 800b6b8:	7095      	strb	r5, [r2, #2]
 800b6ba:	70d5      	strb	r5, [r2, #3]
 800b6bc:	bd70      	pop	{r4, r5, r6, pc}
 800b6be:	bf00      	nop
 800b6c0:	20000ac0 	andcs	r0, r0, r0, asr #21

0800b6c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 800b6c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b6c8:	4605      	mov	r5, r0
 800b6ca:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800b6ce:	460e      	mov	r6, r1
 800b6d0:	4617      	mov	r7, r2
 800b6d2:	4698      	mov	r8, r3
 800b6d4:	f1ba 0f00 	cmp.w	sl, #0
 800b6d8:	d112      	bne.n	800b700 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800b6da:	4648      	mov	r0, r9
 800b6dc:	f7ff ffcc 	bl	800b678 <osc::string_size(char const*)>
 800b6e0:	4604      	mov	r4, r0
 800b6e2:	4602      	mov	r2, r0
 800b6e4:	4653      	mov	r3, sl
 800b6e6:	4649      	mov	r1, r9
 800b6e8:	4628      	mov	r0, r5
 800b6ea:	3404      	adds	r4, #4
 800b6ec:	f7ff ffd0 	bl	800b690 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b6f0:	463b      	mov	r3, r7
 800b6f2:	4905      	ldr	r1, [pc, #20]	; (800b708 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 800b6f4:	f8cd 8000 	str.w	r8, [sp]
 800b6f8:	b2a2      	uxth	r2, r4
 800b6fa:	b2f0      	uxtb	r0, r6
 800b6fc:	f003 f8d4 	bl	800e8a8 <udp_send>
 800b700:	4628      	mov	r0, r5
 800b702:	b002      	add	sp, #8
 800b704:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b708:	20000ac0 	andcs	r0, r0, r0, asr #21

0800b70c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800b70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b710:	b085      	sub	sp, #20
 800b712:	460f      	mov	r7, r1
 800b714:	4699      	mov	r9, r3
 800b716:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800b71a:	4606      	mov	r6, r0
 800b71c:	4690      	mov	r8, r2
 800b71e:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800b722:	b35b      	cbz	r3, 800b77c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800b724:	781b      	ldrb	r3, [r3, #0]
 800b726:	2b73      	cmp	r3, #115	; 0x73
 800b728:	d128      	bne.n	800b77c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800b72a:	4608      	mov	r0, r1
 800b72c:	9303      	str	r3, [sp, #12]
 800b72e:	f7ff ffa3 	bl	800b678 <osc::string_size(char const*)>
 800b732:	4604      	mov	r4, r0
 800b734:	4650      	mov	r0, sl
 800b736:	f7ff ff9f 	bl	800b678 <osc::string_size(char const*)>
 800b73a:	4622      	mov	r2, r4
 800b73c:	1825      	adds	r5, r4, r0
 800b73e:	9b03      	ldr	r3, [sp, #12]
 800b740:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b742:	4630      	mov	r0, r6
 800b744:	f7ff ffa4 	bl	800b690 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b748:	2200      	movs	r2, #0
 800b74a:	4b0e      	ldr	r3, [pc, #56]	; (800b784 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800b74c:	3403      	adds	r4, #3
 800b74e:	1959      	adds	r1, r3, r5
 800b750:	555a      	strb	r2, [r3, r5]
 800b752:	f105 0b04 	add.w	fp, r5, #4
 800b756:	704a      	strb	r2, [r1, #1]
 800b758:	708a      	strb	r2, [r1, #2]
 800b75a:	70ca      	strb	r2, [r1, #3]
 800b75c:	4423      	add	r3, r4
 800b75e:	f81a 2b01 	ldrb.w	r2, [sl], #1
 800b762:	f803 2f01 	strb.w	r2, [r3, #1]!
 800b766:	2a00      	cmp	r2, #0
 800b768:	d1f9      	bne.n	800b75e <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800b76a:	4643      	mov	r3, r8
 800b76c:	4905      	ldr	r1, [pc, #20]	; (800b784 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800b76e:	f8cd 9000 	str.w	r9, [sp]
 800b772:	fa1f f28b 	uxth.w	r2, fp
 800b776:	b2f8      	uxtb	r0, r7
 800b778:	f003 f896 	bl	800e8a8 <udp_send>
 800b77c:	4630      	mov	r0, r6
 800b77e:	b005      	add	sp, #20
 800b780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b784:	20000ac0 	andcs	r0, r0, r0, asr #21

0800b788 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>:
 800b788:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b78c:	4698      	mov	r8, r3
 800b78e:	e9dd 930a 	ldrd	r9, r3, [sp, #40]	; 0x28
 800b792:	4605      	mov	r5, r0
 800b794:	460e      	mov	r6, r1
 800b796:	4617      	mov	r7, r2
 800b798:	b1db      	cbz	r3, 800b7d2 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800b79a:	f893 a000 	ldrb.w	sl, [r3]
 800b79e:	f1ba 0f69 	cmp.w	sl, #105	; 0x69
 800b7a2:	d116      	bne.n	800b7d2 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800b7a4:	4648      	mov	r0, r9
 800b7a6:	f7ff ff67 	bl	800b678 <osc::string_size(char const*)>
 800b7aa:	4604      	mov	r4, r0
 800b7ac:	4602      	mov	r2, r0
 800b7ae:	4653      	mov	r3, sl
 800b7b0:	4649      	mov	r1, r9
 800b7b2:	4628      	mov	r0, r5
 800b7b4:	f7ff ff6c 	bl	800b690 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800b7b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b7ba:	4908      	ldr	r1, [pc, #32]	; (800b7dc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x54>)
 800b7bc:	ba1b      	rev	r3, r3
 800b7be:	190a      	adds	r2, r1, r4
 800b7c0:	3408      	adds	r4, #8
 800b7c2:	6053      	str	r3, [r2, #4]
 800b7c4:	b2f0      	uxtb	r0, r6
 800b7c6:	463b      	mov	r3, r7
 800b7c8:	f8cd 8000 	str.w	r8, [sp]
 800b7cc:	b2a2      	uxth	r2, r4
 800b7ce:	f003 f86b 	bl	800e8a8 <udp_send>
 800b7d2:	4628      	mov	r0, r5
 800b7d4:	b002      	add	sp, #8
 800b7d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b7da:	bf00      	nop
 800b7dc:	20000ac0 	andcs	r0, r0, r0, asr #21

0800b7e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800b7e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b7e2:	4604      	mov	r4, r0
 800b7e4:	460e      	mov	r6, r1
 800b7e6:	4611      	mov	r1, r2
 800b7e8:	4617      	mov	r7, r2
 800b7ea:	461d      	mov	r5, r3
 800b7ec:	f000 fdb4 	bl	800c358 <PixelConfiguration::Validate(unsigned int&)>
 800b7f0:	7d62      	ldrb	r2, [r4, #21]
 800b7f2:	b94a      	cbnz	r2, 800b808 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800b7f4:	6823      	ldr	r3, [r4, #0]
 800b7f6:	b11b      	cbz	r3, 800b800 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800b7f8:	3b0b      	subs	r3, #11
 800b7fa:	2b01      	cmp	r3, #1
 800b7fc:	bf88      	it	hi
 800b7fe:	6022      	strhi	r2, [r4, #0]
 800b800:	4639      	mov	r1, r7
 800b802:	4620      	mov	r0, r4
 800b804:	f000 fda8 	bl	800c358 <PixelConfiguration::Validate(unsigned int&)>
 800b808:	6823      	ldr	r3, [r4, #0]
 800b80a:	2b07      	cmp	r3, #7
 800b80c:	bf15      	itete	ne
 800b80e:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800b812:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800b816:	23aa      	movne	r3, #170	; 0xaa
 800b818:	2380      	moveq	r3, #128	; 0x80
 800b81a:	bf14      	ite	ne
 800b81c:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800b820:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800b824:	e9c5 3100 	strd	r3, r1, [r5]
 800b828:	6a21      	ldr	r1, [r4, #32]
 800b82a:	60aa      	str	r2, [r5, #8]
 800b82c:	6862      	ldr	r2, [r4, #4]
 800b82e:	b109      	cbz	r1, 800b834 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800b830:	4291      	cmp	r1, r2
 800b832:	d900      	bls.n	800b836 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800b834:	6222      	str	r2, [r4, #32]
 800b836:	6a21      	ldr	r1, [r4, #32]
 800b838:	69e0      	ldr	r0, [r4, #28]
 800b83a:	fbb2 f2f1 	udiv	r2, r2, r1
 800b83e:	3301      	adds	r3, #1
 800b840:	6262      	str	r2, [r4, #36]	; 0x24
 800b842:	42b0      	cmp	r0, r6
 800b844:	fbb2 f2f3 	udiv	r2, r2, r3
 800b848:	bf28      	it	cs
 800b84a:	4630      	movcs	r0, r6
 800b84c:	1c53      	adds	r3, r2, #1
 800b84e:	2e01      	cmp	r6, #1
 800b850:	62a3      	str	r3, [r4, #40]	; 0x28
 800b852:	bf1c      	itt	ne
 800b854:	4343      	mulne	r3, r0
 800b856:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800b85a:	61e0      	str	r0, [r4, #28]
 800b85c:	60ea      	str	r2, [r5, #12]
 800b85e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b860 <PixelDmxConfiguration::Print()>:
 800b860:	b510      	push	{r4, lr}
 800b862:	4604      	mov	r4, r0
 800b864:	f000 fe0e 	bl	800c484 <PixelConfiguration::Print()>
 800b868:	4806      	ldr	r0, [pc, #24]	; (800b884 <PixelDmxConfiguration::Print()+0x24>)
 800b86a:	f7fd fd33 	bl	80092d4 <printf>
 800b86e:	69e1      	ldr	r1, [r4, #28]
 800b870:	4805      	ldr	r0, [pc, #20]	; (800b888 <PixelDmxConfiguration::Print()+0x28>)
 800b872:	f7fd fd2f 	bl	80092d4 <printf>
 800b876:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800b87a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b87e:	4803      	ldr	r0, [pc, #12]	; (800b88c <PixelDmxConfiguration::Print()+0x2c>)
 800b880:	f7fd bd28 	b.w	80092d4 <printf>
 800b884:	0801467b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, lr}
 800b888:	08014694 	stmdaeq	r1, {r2, r4, r7, r9, sl, lr}
 800b88c:	080146a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, lr}

0800b890 <WS28xxDmx::GetDmxStartAddress()>:
 800b890:	f8b0 0048 	ldrh.w	r0, [r0, #72]	; 0x48
 800b894:	4770      	bx	lr

0800b896 <WS28xxDmx::GetDmxFootprint()>:
 800b896:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800b89a:	4770      	bx	lr

0800b89c <WS28xxDmx::~WS28xxDmx()>:
 800b89c:	b538      	push	{r3, r4, r5, lr}
 800b89e:	4b06      	ldr	r3, [pc, #24]	; (800b8b8 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800b8a0:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800b8a2:	4604      	mov	r4, r0
 800b8a4:	6003      	str	r3, [r0, #0]
 800b8a6:	b12d      	cbz	r5, 800b8b4 <WS28xxDmx::~WS28xxDmx()+0x18>
 800b8a8:	4628      	mov	r0, r5
 800b8aa:	f001 ff03 	bl	800d6b4 <WS28xx::~WS28xx()>
 800b8ae:	4628      	mov	r0, r5
 800b8b0:	f005 fb42 	bl	8010f38 <operator delete(void*)>
 800b8b4:	4620      	mov	r0, r4
 800b8b6:	bd38      	pop	{r3, r4, r5, pc}
 800b8b8:	080146d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, lr}

0800b8bc <WS28xxDmx::~WS28xxDmx()>:
 800b8bc:	b510      	push	{r4, lr}
 800b8be:	4604      	mov	r4, r0
 800b8c0:	f7ff ffec 	bl	800b89c <WS28xxDmx::~WS28xxDmx()>
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	f005 fb37 	bl	8010f38 <operator delete(void*)>
 800b8ca:	4620      	mov	r0, r4
 800b8cc:	bd10      	pop	{r4, pc}

0800b8ce <WS28xxDmx::Blackout(bool)>:
 800b8ce:	b538      	push	{r3, r4, r5, lr}
 800b8d0:	4605      	mov	r5, r0
 800b8d2:	460c      	mov	r4, r1
 800b8d4:	f880 1059 	strb.w	r1, [r0, #89]	; 0x59
 800b8d8:	f006 fc86 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800b8dc:	2800      	cmp	r0, #0
 800b8de:	d1fb      	bne.n	800b8d8 <WS28xxDmx::Blackout(bool)+0xa>
 800b8e0:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 800b8e2:	b11c      	cbz	r4, 800b8ec <WS28xxDmx::Blackout(bool)+0x1e>
 800b8e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b8e8:	f001 bf62 	b.w	800d7b0 <WS28xx::Blackout()>
 800b8ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b8f0:	f001 bf42 	b.w	800d778 <WS28xx::Update()>

0800b8f4 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800b8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8f8:	b087      	sub	sp, #28
 800b8fa:	4607      	mov	r7, r0
 800b8fc:	4692      	mov	sl, r2
 800b8fe:	9104      	str	r1, [sp, #16]
 800b900:	9303      	str	r3, [sp, #12]
 800b902:	f006 fc71 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800b906:	2800      	cmp	r0, #0
 800b908:	d171      	bne.n	800b9ee <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b90a:	9b04      	ldr	r3, [sp, #16]
 800b90c:	9c03      	ldr	r4, [sp, #12]
 800b90e:	f003 0103 	and.w	r1, r3, #3
 800b912:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b914:	2902      	cmp	r1, #2
 800b916:	fbb4 f6f3 	udiv	r6, r4, r3
 800b91a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b91c:	d026      	beq.n	800b96c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x78>
 800b91e:	2903      	cmp	r1, #3
 800b920:	d02b      	beq.n	800b97a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800b922:	2901      	cmp	r1, #1
 800b924:	6b7d      	ldr	r5, [r7, #52]	; 0x34
 800b926:	d022      	beq.n	800b96e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800b928:	4296      	cmp	r6, r2
 800b92a:	bf28      	it	cs
 800b92c:	4616      	movcs	r6, r2
 800b92e:	4295      	cmp	r5, r2
 800b930:	d925      	bls.n	800b97e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800b932:	4605      	mov	r5, r0
 800b934:	8e3c      	ldrh	r4, [r7, #48]	; 0x30
 800b936:	3c01      	subs	r4, #1
 800b938:	f8d7 9024 	ldr.w	r9, [r7, #36]	; 0x24
 800b93c:	2b03      	cmp	r3, #3
 800b93e:	fb09 f805 	mul.w	r8, r9, r5
 800b942:	4454      	add	r4, sl
 800b944:	eb08 0b09 	add.w	fp, r8, r9
 800b948:	d035      	beq.n	800b9b6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800b94a:	42ae      	cmp	r6, r5
 800b94c:	d935      	bls.n	800b9ba <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b94e:	9a03      	ldr	r2, [sp, #12]
 800b950:	eba4 030a 	sub.w	r3, r4, sl
 800b954:	429a      	cmp	r2, r3
 800b956:	d930      	bls.n	800b9ba <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b958:	4641      	mov	r1, r8
 800b95a:	f894 f000 	pld	[r4]
 800b95e:	458b      	cmp	fp, r1
 800b960:	d138      	bne.n	800b9d4 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xe0>
 800b962:	3501      	adds	r5, #1
 800b964:	44c8      	add	r8, r9
 800b966:	44cb      	add	fp, r9
 800b968:	3404      	adds	r4, #4
 800b96a:	e7ee      	b.n	800b94a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x56>
 800b96c:	6bbd      	ldr	r5, [r7, #56]	; 0x38
 800b96e:	442e      	add	r6, r5
 800b970:	4296      	cmp	r6, r2
 800b972:	bf28      	it	cs
 800b974:	4616      	movcs	r6, r2
 800b976:	4604      	mov	r4, r0
 800b978:	e7de      	b.n	800b938 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800b97a:	6bfd      	ldr	r5, [r7, #60]	; 0x3c
 800b97c:	e7f7      	b.n	800b96e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800b97e:	4605      	mov	r5, r0
 800b980:	4604      	mov	r4, r0
 800b982:	e7d9      	b.n	800b938 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800b984:	78a2      	ldrb	r2, [r4, #2]
 800b986:	7863      	ldrb	r3, [r4, #1]
 800b988:	9200      	str	r2, [sp, #0]
 800b98a:	7822      	ldrb	r2, [r4, #0]
 800b98c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b98e:	9105      	str	r1, [sp, #20]
 800b990:	f001 f950 	bl	800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800b994:	9905      	ldr	r1, [sp, #20]
 800b996:	3101      	adds	r1, #1
 800b998:	e007      	b.n	800b9aa <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xb6>
 800b99a:	9a03      	ldr	r2, [sp, #12]
 800b99c:	eba4 030a 	sub.w	r3, r4, sl
 800b9a0:	429a      	cmp	r2, r3
 800b9a2:	d90a      	bls.n	800b9ba <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xc6>
 800b9a4:	4641      	mov	r1, r8
 800b9a6:	f894 f000 	pld	[r4]
 800b9aa:	458b      	cmp	fp, r1
 800b9ac:	d1ea      	bne.n	800b984 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x90>
 800b9ae:	3501      	adds	r5, #1
 800b9b0:	44c8      	add	r8, r9
 800b9b2:	44cb      	add	fp, r9
 800b9b4:	3403      	adds	r4, #3
 800b9b6:	42ae      	cmp	r6, r5
 800b9b8:	d8ef      	bhi.n	800b99a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa6>
 800b9ba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b9bc:	9a04      	ldr	r2, [sp, #16]
 800b9be:	4293      	cmp	r3, r2
 800b9c0:	d115      	bne.n	800b9ee <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b9c2:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 800b9c6:	b993      	cbnz	r3, 800b9ee <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800b9c8:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b9ca:	b007      	add	sp, #28
 800b9cc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9d0:	f001 bed2 	b.w	800d778 <WS28xx::Update()>
 800b9d4:	78e2      	ldrb	r2, [r4, #3]
 800b9d6:	7863      	ldrb	r3, [r4, #1]
 800b9d8:	9201      	str	r2, [sp, #4]
 800b9da:	78a2      	ldrb	r2, [r4, #2]
 800b9dc:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 800b9de:	9200      	str	r2, [sp, #0]
 800b9e0:	7822      	ldrb	r2, [r4, #0]
 800b9e2:	9105      	str	r1, [sp, #20]
 800b9e4:	f001 fd58 	bl	800d498 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800b9e8:	9905      	ldr	r1, [sp, #20]
 800b9ea:	3101      	adds	r1, #1
 800b9ec:	e7b7      	b.n	800b95e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800b9ee:	b007      	add	sp, #28
 800b9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b9f4 <WS28xxDmx::FullOn()>:
 800b9f4:	b510      	push	{r4, lr}
 800b9f6:	4604      	mov	r4, r0
 800b9f8:	f006 fbf6 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800b9fc:	2800      	cmp	r0, #0
 800b9fe:	d1fb      	bne.n	800b9f8 <WS28xxDmx::FullOn()+0x4>
 800ba00:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ba02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba06:	f001 bf1a 	b.w	800d83e <WS28xx::FullOn()>

0800ba0a <WS28xxDmx::Print()>:
 800ba0a:	3004      	adds	r0, #4
 800ba0c:	f7ff bf28 	b.w	800b860 <PixelDmxConfiguration::Print()>

0800ba10 <WS28xxDmx::Start(unsigned int)>:
 800ba10:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800ba14:	b93b      	cbnz	r3, 800ba26 <WS28xxDmx::Start(unsigned int)+0x16>
 800ba16:	2301      	movs	r3, #1
 800ba18:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800ba1c:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ba1e:	b110      	cbz	r0, 800ba26 <WS28xxDmx::Start(unsigned int)+0x16>
 800ba20:	6803      	ldr	r3, [r0, #0]
 800ba22:	689b      	ldr	r3, [r3, #8]
 800ba24:	4718      	bx	r3
 800ba26:	4770      	bx	lr

0800ba28 <WS28xxDmx::Stop(unsigned int)>:
 800ba28:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 800ba2c:	b13b      	cbz	r3, 800ba3e <WS28xxDmx::Stop(unsigned int)+0x16>
 800ba2e:	2300      	movs	r3, #0
 800ba30:	f880 3058 	strb.w	r3, [r0, #88]	; 0x58
 800ba34:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ba36:	b110      	cbz	r0, 800ba3e <WS28xxDmx::Stop(unsigned int)+0x16>
 800ba38:	6803      	ldr	r3, [r0, #0]
 800ba3a:	68db      	ldr	r3, [r3, #12]
 800ba3c:	4718      	bx	r3
 800ba3e:	4770      	bx	lr

0800ba40 <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800ba40:	f8b0 2048 	ldrh.w	r2, [r0, #72]	; 0x48
 800ba44:	b508      	push	{r3, lr}
 800ba46:	428a      	cmp	r2, r1
 800ba48:	d101      	bne.n	800ba4e <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xe>
 800ba4a:	2001      	movs	r0, #1
 800ba4c:	bd08      	pop	{r3, pc}
 800ba4e:	f8b0 204a 	ldrh.w	r2, [r0, #74]	; 0x4a
 800ba52:	440a      	add	r2, r1
 800ba54:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800ba58:	dc0c      	bgt.n	800ba74 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800ba5a:	1e4a      	subs	r2, r1, #1
 800ba5c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800ba60:	d208      	bcs.n	800ba74 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x34>
 800ba62:	f8a0 1048 	strh.w	r1, [r0, #72]	; 0x48
 800ba66:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ba68:	2800      	cmp	r0, #0
 800ba6a:	d0ee      	beq.n	800ba4a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800ba6c:	6803      	ldr	r3, [r0, #0]
 800ba6e:	69db      	ldr	r3, [r3, #28]
 800ba70:	4798      	blx	r3
 800ba72:	e7ea      	b.n	800ba4a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>
 800ba74:	2000      	movs	r0, #0
 800ba76:	e7e9      	b.n	800ba4c <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>

0800ba78 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800ba78:	4603      	mov	r3, r0
 800ba7a:	f8b0 004a 	ldrh.w	r0, [r0, #74]	; 0x4a
 800ba7e:	4288      	cmp	r0, r1
 800ba80:	f04f 0000 	mov.w	r0, #0
 800ba84:	d30f      	bcc.n	800baa6 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2e>
 800ba86:	7090      	strb	r0, [r2, #2]
 800ba88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ba8a:	fbb1 f0f3 	udiv	r0, r1, r3
 800ba8e:	fb03 1110 	mls	r1, r3, r0, r1
 800ba92:	2903      	cmp	r1, #3
 800ba94:	d80e      	bhi.n	800bab4 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3c>
 800ba96:	e8df f001 	tbb	[pc, r1]
 800ba9a:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800ba9e:	f240 2305 	movw	r3, #517	; 0x205
 800baa2:	2001      	movs	r0, #1
 800baa4:	8013      	strh	r3, [r2, #0]
 800baa6:	4770      	bx	lr
 800baa8:	f240 2306 	movw	r3, #518	; 0x206
 800baac:	e7f9      	b.n	800baa2 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800baae:	f240 2307 	movw	r3, #519	; 0x207
 800bab2:	e7f6      	b.n	800baa2 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
 800bab4:	f240 2312 	movw	r3, #530	; 0x212
 800bab8:	e7f3      	b.n	800baa2 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2a>
	...

0800babc <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800babc:	b570      	push	{r4, r5, r6, lr}
 800babe:	4605      	mov	r5, r0
 800bac0:	460e      	mov	r6, r1
 800bac2:	4b19      	ldr	r3, [pc, #100]	; (800bb28 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x6c>)
 800bac4:	4604      	mov	r4, r0
 800bac6:	f845 3b04 	str.w	r3, [r5], #4
 800baca:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800bacc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800bace:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800bad0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800bad2:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800bad6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800bada:	2300      	movs	r3, #0
 800badc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800bae0:	6563      	str	r3, [r4, #84]	; 0x54
 800bae2:	f8a4 3058 	strh.w	r3, [r4, #88]	; 0x58
 800bae6:	4b11      	ldr	r3, [pc, #68]	; (800bb2c <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x70>)
 800bae8:	1d26      	adds	r6, r4, #4
 800baea:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800baee:	2101      	movs	r1, #1
 800baf0:	4630      	mov	r0, r6
 800baf2:	601c      	str	r4, [r3, #0]
 800baf4:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800baf8:	f7ff fe72 	bl	800b7e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800bafc:	2028      	movs	r0, #40	; 0x28
 800bafe:	f005 fa1f 	bl	8010f40 <operator new(unsigned int)>
 800bb02:	4605      	mov	r5, r0
 800bb04:	4631      	mov	r1, r6
 800bb06:	f001 fdf3 	bl	800d6f0 <WS28xx::WS28xx(PixelConfiguration&)>
 800bb0a:	4628      	mov	r0, r5
 800bb0c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800bb0e:	f001 fe4f 	bl	800d7b0 <WS28xx::Blackout()>
 800bb12:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bb14:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bb16:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800bb1a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bb1c:	4620      	mov	r0, r4
 800bb1e:	4353      	muls	r3, r2
 800bb20:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800bb24:	bd70      	pop	{r4, r5, r6, pc}
 800bb26:	bf00      	nop
 800bb28:	080146d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, lr}
 800bb2c:	20000cc0 	andcs	r0, r0, r0, asr #25

0800bb30 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800bb30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb32:	88c6      	ldrh	r6, [r0, #6]
 800bb34:	8885      	ldrh	r5, [r0, #4]
 800bb36:	42ae      	cmp	r6, r5
 800bb38:	d216      	bcs.n	800bb68 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800bb3a:	4604      	mov	r4, r0
 800bb3c:	6800      	ldr	r0, [r0, #0]
 800bb3e:	1bad      	subs	r5, r5, r6
 800bb40:	4430      	add	r0, r6
 800bb42:	7a26      	ldrb	r6, [r4, #8]
 800bb44:	b923      	cbnz	r3, 800bb50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800bb46:	b926      	cbnz	r6, 800bb52 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800bb48:	9200      	str	r2, [sp, #0]
 800bb4a:	460b      	mov	r3, r1
 800bb4c:	4a09      	ldr	r2, [pc, #36]	; (800bb74 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800bb4e:	e003      	b.n	800bb58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800bb50:	b166      	cbz	r6, 800bb6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800bb52:	460b      	mov	r3, r1
 800bb54:	9200      	str	r2, [sp, #0]
 800bb56:	4a08      	ldr	r2, [pc, #32]	; (800bb78 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800bb58:	4629      	mov	r1, r5
 800bb5a:	f7fd fbcb 	bl	80092f4 <snprintf>
 800bb5e:	4285      	cmp	r5, r0
 800bb60:	bfa2      	ittt	ge
 800bb62:	88e3      	ldrhge	r3, [r4, #6]
 800bb64:	181b      	addge	r3, r3, r0
 800bb66:	80e3      	strhge	r3, [r4, #6]
 800bb68:	b002      	add	sp, #8
 800bb6a:	bd70      	pop	{r4, r5, r6, pc}
 800bb6c:	9200      	str	r2, [sp, #0]
 800bb6e:	460b      	mov	r3, r1
 800bb70:	4a02      	ldr	r2, [pc, #8]	; (800bb7c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bb72:	e7f1      	b.n	800bb58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800bb74:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800bb78:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800bb7c:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}

0800bb80 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800bb80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb82:	88c6      	ldrh	r6, [r0, #6]
 800bb84:	8885      	ldrh	r5, [r0, #4]
 800bb86:	42ae      	cmp	r6, r5
 800bb88:	d216      	bcs.n	800bbb8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800bb8a:	4604      	mov	r4, r0
 800bb8c:	6800      	ldr	r0, [r0, #0]
 800bb8e:	1bad      	subs	r5, r5, r6
 800bb90:	4430      	add	r0, r6
 800bb92:	7a26      	ldrb	r6, [r4, #8]
 800bb94:	b923      	cbnz	r3, 800bba0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800bb96:	b926      	cbnz	r6, 800bba2 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800bb98:	9200      	str	r2, [sp, #0]
 800bb9a:	460b      	mov	r3, r1
 800bb9c:	4a09      	ldr	r2, [pc, #36]	; (800bbc4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800bb9e:	e003      	b.n	800bba8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bba0:	b166      	cbz	r6, 800bbbc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800bba2:	460b      	mov	r3, r1
 800bba4:	9200      	str	r2, [sp, #0]
 800bba6:	4a08      	ldr	r2, [pc, #32]	; (800bbc8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800bba8:	4629      	mov	r1, r5
 800bbaa:	f7fd fba3 	bl	80092f4 <snprintf>
 800bbae:	4285      	cmp	r5, r0
 800bbb0:	bfa2      	ittt	ge
 800bbb2:	88e3      	ldrhge	r3, [r4, #6]
 800bbb4:	181b      	addge	r3, r3, r0
 800bbb6:	80e3      	strhge	r3, [r4, #6]
 800bbb8:	b002      	add	sp, #8
 800bbba:	bd70      	pop	{r4, r5, r6, pc}
 800bbbc:	9200      	str	r2, [sp, #0]
 800bbbe:	460b      	mov	r3, r1
 800bbc0:	4a02      	ldr	r2, [pc, #8]	; (800bbcc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bbc2:	e7f1      	b.n	800bba8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bbc4:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800bbc8:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800bbcc:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}

0800bbd0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800bbd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbd2:	88c6      	ldrh	r6, [r0, #6]
 800bbd4:	8885      	ldrh	r5, [r0, #4]
 800bbd6:	42ae      	cmp	r6, r5
 800bbd8:	d216      	bcs.n	800bc08 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800bbda:	4604      	mov	r4, r0
 800bbdc:	6800      	ldr	r0, [r0, #0]
 800bbde:	1bad      	subs	r5, r5, r6
 800bbe0:	4430      	add	r0, r6
 800bbe2:	7a26      	ldrb	r6, [r4, #8]
 800bbe4:	b923      	cbnz	r3, 800bbf0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800bbe6:	b926      	cbnz	r6, 800bbf2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800bbe8:	9200      	str	r2, [sp, #0]
 800bbea:	460b      	mov	r3, r1
 800bbec:	4a09      	ldr	r2, [pc, #36]	; (800bc14 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800bbee:	e003      	b.n	800bbf8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800bbf0:	b166      	cbz	r6, 800bc0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800bbf2:	460b      	mov	r3, r1
 800bbf4:	9200      	str	r2, [sp, #0]
 800bbf6:	4a08      	ldr	r2, [pc, #32]	; (800bc18 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800bbf8:	4629      	mov	r1, r5
 800bbfa:	f7fd fb7b 	bl	80092f4 <snprintf>
 800bbfe:	4285      	cmp	r5, r0
 800bc00:	bfa2      	ittt	ge
 800bc02:	88e3      	ldrhge	r3, [r4, #6]
 800bc04:	181b      	addge	r3, r3, r0
 800bc06:	80e3      	strhge	r3, [r4, #6]
 800bc08:	b002      	add	sp, #8
 800bc0a:	bd70      	pop	{r4, r5, r6, pc}
 800bc0c:	9200      	str	r2, [sp, #0]
 800bc0e:	460b      	mov	r3, r1
 800bc10:	4a02      	ldr	r2, [pc, #8]	; (800bc1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bc12:	e7f1      	b.n	800bbf8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800bc14:	080137bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800bc18:	080137b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, ip, sp}
 800bc1c:	080137bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}

0800bc20 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800bc20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bc24:	4699      	mov	r9, r3
 800bc26:	8885      	ldrh	r5, [r0, #4]
 800bc28:	88c3      	ldrh	r3, [r0, #6]
 800bc2a:	4604      	mov	r4, r0
 800bc2c:	42ab      	cmp	r3, r5
 800bc2e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800bc32:	d227      	bcs.n	800bc84 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800bc34:	6826      	ldr	r6, [r4, #0]
 800bc36:	4610      	mov	r0, r2
 800bc38:	460f      	mov	r7, r1
 800bc3a:	f894 a008 	ldrb.w	sl, [r4, #8]
 800bc3e:	441e      	add	r6, r3
 800bc40:	1aed      	subs	r5, r5, r3
 800bc42:	f7fc fac7 	bl	80081d4 <__aeabi_f2d>
 800bc46:	f1b9 0f00 	cmp.w	r9, #0
 800bc4a:	d109      	bne.n	800bc60 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800bc4c:	f1ba 0f00 	cmp.w	sl, #0
 800bc50:	d109      	bne.n	800bc66 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800bc52:	463b      	mov	r3, r7
 800bc54:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc58:	4a0f      	ldr	r2, [pc, #60]	; (800bc98 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800bc5a:	f8cd 8000 	str.w	r8, [sp]
 800bc5e:	e008      	b.n	800bc72 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800bc60:	f1ba 0f00 	cmp.w	sl, #0
 800bc64:	d011      	beq.n	800bc8a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800bc66:	463b      	mov	r3, r7
 800bc68:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc6c:	4a0b      	ldr	r2, [pc, #44]	; (800bc9c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800bc6e:	f8cd 8000 	str.w	r8, [sp]
 800bc72:	4629      	mov	r1, r5
 800bc74:	4630      	mov	r0, r6
 800bc76:	f7fd fb3d 	bl	80092f4 <snprintf>
 800bc7a:	4285      	cmp	r5, r0
 800bc7c:	bfa2      	ittt	ge
 800bc7e:	88e3      	ldrhge	r3, [r4, #6]
 800bc80:	181b      	addge	r3, r3, r0
 800bc82:	80e3      	strhge	r3, [r4, #6]
 800bc84:	b004      	add	sp, #16
 800bc86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bc8a:	463b      	mov	r3, r7
 800bc8c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bc90:	4a03      	ldr	r2, [pc, #12]	; (800bca0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800bc92:	f8cd 8000 	str.w	r8, [sp]
 800bc96:	e7ec      	b.n	800bc72 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800bc98:	0801470b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, lr}
 800bc9c:	08014700 	stmdaeq	r1, {r8, r9, sl, lr}
 800bca0:	0801470c 	stmdaeq	r1, {r2, r3, r8, r9, sl, lr}

0800bca4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800bca4:	6001      	str	r1, [r0, #0]
 800bca6:	2100      	movs	r1, #0
 800bca8:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800bcac:	4a05      	ldr	r2, [pc, #20]	; (800bcc4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x20>)
 800bcae:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bcb2:	4a05      	ldr	r2, [pc, #20]	; (800bcc8 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x24>)
 800bcb4:	4905      	ldr	r1, [pc, #20]	; (800bccc <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x28>)
 800bcb6:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800bcba:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bcbe:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800bcc2:	4770      	bx	lr
 800bcc4:	0100aa03 	tsteq	r0, r3, lsl #20
 800bcc8:	01ff003d 	mvnseq	r0, sp, lsr r0
 800bccc:	06000100 	streq	r0, [r0], -r0, lsl #2

0800bcd0 <PixelDmxParams::Load()>:
 800bcd0:	b508      	push	{r3, lr}
 800bcd2:	2300      	movs	r3, #0
 800bcd4:	4601      	mov	r1, r0
 800bcd6:	6043      	str	r3, [r0, #4]
 800bcd8:	6800      	ldr	r0, [r0, #0]
 800bcda:	b120      	cbz	r0, 800bce6 <PixelDmxParams::Load()+0x16>
 800bcdc:	6803      	ldr	r3, [r0, #0]
 800bcde:	3104      	adds	r1, #4
 800bce0:	68db      	ldr	r3, [r3, #12]
 800bce2:	4798      	blx	r3
 800bce4:	2001      	movs	r0, #1
 800bce6:	bd08      	pop	{r3, pc}

0800bce8 <PixelDmxParams::Load(char const*, unsigned int)>:
 800bce8:	6803      	ldr	r3, [r0, #0]
 800bcea:	b1d3      	cbz	r3, 800bd22 <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800bcec:	2300      	movs	r3, #0
 800bcee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bcf0:	460d      	mov	r5, r1
 800bcf2:	4616      	mov	r6, r2
 800bcf4:	4604      	mov	r4, r0
 800bcf6:	6043      	str	r3, [r0, #4]
 800bcf8:	4602      	mov	r2, r0
 800bcfa:	490a      	ldr	r1, [pc, #40]	; (800bd24 <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800bcfc:	4668      	mov	r0, sp
 800bcfe:	f004 fb8f 	bl	8010420 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bd02:	4632      	mov	r2, r6
 800bd04:	4629      	mov	r1, r5
 800bd06:	4668      	mov	r0, sp
 800bd08:	f004 fb8e 	bl	8010428 <ReadConfigFile::Read(char const*, unsigned int)>
 800bd0c:	4621      	mov	r1, r4
 800bd0e:	f851 0b04 	ldr.w	r0, [r1], #4
 800bd12:	6803      	ldr	r3, [r0, #0]
 800bd14:	689b      	ldr	r3, [r3, #8]
 800bd16:	4798      	blx	r3
 800bd18:	4668      	mov	r0, sp
 800bd1a:	f004 fb84 	bl	8010426 <ReadConfigFile::~ReadConfigFile()>
 800bd1e:	b002      	add	sp, #8
 800bd20:	bd70      	pop	{r4, r5, r6, pc}
 800bd22:	4770      	bx	lr
 800bd24:	0800bfc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, sp, pc}

0800bd28 <PixelDmxParams::callbackFunction(char const*)>:
 800bd28:	b530      	push	{r4, r5, lr}
 800bd2a:	2308      	movs	r3, #8
 800bd2c:	460d      	mov	r5, r1
 800bd2e:	b089      	sub	sp, #36	; 0x24
 800bd30:	4604      	mov	r4, r0
 800bd32:	9302      	str	r3, [sp, #8]
 800bd34:	4628      	mov	r0, r5
 800bd36:	4995      	ldr	r1, [pc, #596]	; (800bf8c <PixelDmxParams::callbackFunction(char const*)+0x264>)
 800bd38:	446b      	add	r3, sp
 800bd3a:	aa04      	add	r2, sp, #16
 800bd3c:	f004 fba8 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bd40:	b9a0      	cbnz	r0, 800bd6c <PixelDmxParams::callbackFunction(char const*)+0x44>
 800bd42:	9b02      	ldr	r3, [sp, #8]
 800bd44:	3320      	adds	r3, #32
 800bd46:	446b      	add	r3, sp
 800bd48:	f803 0c10 	strb.w	r0, [r3, #-16]
 800bd4c:	a804      	add	r0, sp, #16
 800bd4e:	f000 fc09 	bl	800c564 <PixelType::GetType(char const*)>
 800bd52:	280e      	cmp	r0, #14
 800bd54:	bf08      	it	eq
 800bd56:	2203      	moveq	r2, #3
 800bd58:	6863      	ldr	r3, [r4, #4]
 800bd5a:	bf19      	ittee	ne
 800bd5c:	7220      	strbne	r0, [r4, #8]
 800bd5e:	f043 0301 	orrne.w	r3, r3, #1
 800bd62:	7222      	strbeq	r2, [r4, #8]
 800bd64:	f023 0301 	biceq.w	r3, r3, #1
 800bd68:	6063      	str	r3, [r4, #4]
 800bd6a:	e033      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bd6c:	4628      	mov	r0, r5
 800bd6e:	4988      	ldr	r1, [pc, #544]	; (800bf90 <PixelDmxParams::callbackFunction(char const*)+0x268>)
 800bd70:	f10d 0202 	add.w	r2, sp, #2
 800bd74:	f004 fc49 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bd78:	b990      	cbnz	r0, 800bda0 <PixelDmxParams::callbackFunction(char const*)+0x78>
 800bd7a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bd7e:	6863      	ldr	r3, [r4, #4]
 800bd80:	1e51      	subs	r1, r2, #1
 800bd82:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800bd86:	bf2d      	iteet	cs
 800bd88:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800bd8c:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800bd90:	f043 0302 	orrcc.w	r3, r3, #2
 800bd94:	7262      	strbcs	r2, [r4, #9]
 800bd96:	bf24      	itt	cs
 800bd98:	72a0      	strbcs	r0, [r4, #10]
 800bd9a:	f023 0302 	biccs.w	r3, r3, #2
 800bd9e:	e7e3      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bda0:	2303      	movs	r3, #3
 800bda2:	4628      	mov	r0, r5
 800bda4:	9302      	str	r3, [sp, #8]
 800bda6:	497b      	ldr	r1, [pc, #492]	; (800bf94 <PixelDmxParams::callbackFunction(char const*)+0x26c>)
 800bda8:	ab02      	add	r3, sp, #8
 800bdaa:	aa04      	add	r2, sp, #16
 800bdac:	f004 fb70 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bdb0:	b990      	cbnz	r0, 800bdd8 <PixelDmxParams::callbackFunction(char const*)+0xb0>
 800bdb2:	9b02      	ldr	r3, [sp, #8]
 800bdb4:	3320      	adds	r3, #32
 800bdb6:	446b      	add	r3, sp
 800bdb8:	f803 0c10 	strb.w	r0, [r3, #-16]
 800bdbc:	a804      	add	r0, sp, #16
 800bdbe:	f000 fbf5 	bl	800c5ac <PixelType::GetMap(char const*)>
 800bdc2:	6863      	ldr	r3, [r4, #4]
 800bdc4:	2806      	cmp	r0, #6
 800bdc6:	bf14      	ite	ne
 800bdc8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800bdcc:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800bdd0:	6063      	str	r3, [r4, #4]
 800bdd2:	75e0      	strb	r0, [r4, #23]
 800bdd4:	b009      	add	sp, #36	; 0x24
 800bdd6:	bd30      	pop	{r4, r5, pc}
 800bdd8:	4628      	mov	r0, r5
 800bdda:	496f      	ldr	r1, [pc, #444]	; (800bf98 <PixelDmxParams::callbackFunction(char const*)+0x270>)
 800bddc:	aa01      	add	r2, sp, #4
 800bdde:	f004 fb70 	bl	80104c2 <Sscan::Float(char const*, char const*, float&)>
 800bde2:	b960      	cbnz	r0, 800bdfe <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800bde4:	9801      	ldr	r0, [sp, #4]
 800bde6:	f000 fc4d 	bl	800c684 <PixelType::ConvertTxH(float)>
 800bdea:	6863      	ldr	r3, [r4, #4]
 800bdec:	b120      	cbz	r0, 800bdf8 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800bdee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bdf2:	6063      	str	r3, [r4, #4]
 800bdf4:	7620      	strb	r0, [r4, #24]
 800bdf6:	e7ed      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bdf8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800bdfc:	e7f9      	b.n	800bdf2 <PixelDmxParams::callbackFunction(char const*)+0xca>
 800bdfe:	4628      	mov	r0, r5
 800be00:	4966      	ldr	r1, [pc, #408]	; (800bf9c <PixelDmxParams::callbackFunction(char const*)+0x274>)
 800be02:	aa01      	add	r2, sp, #4
 800be04:	f004 fb5d 	bl	80104c2 <Sscan::Float(char const*, char const*, float&)>
 800be08:	b960      	cbnz	r0, 800be24 <PixelDmxParams::callbackFunction(char const*)+0xfc>
 800be0a:	9801      	ldr	r0, [sp, #4]
 800be0c:	f000 fc3a 	bl	800c684 <PixelType::ConvertTxH(float)>
 800be10:	6863      	ldr	r3, [r4, #4]
 800be12:	b120      	cbz	r0, 800be1e <PixelDmxParams::callbackFunction(char const*)+0xf6>
 800be14:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800be18:	6063      	str	r3, [r4, #4]
 800be1a:	7660      	strb	r0, [r4, #25]
 800be1c:	e7da      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800be1e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800be22:	e7f9      	b.n	800be18 <PixelDmxParams::callbackFunction(char const*)+0xf0>
 800be24:	4628      	mov	r0, r5
 800be26:	495e      	ldr	r1, [pc, #376]	; (800bfa0 <PixelDmxParams::callbackFunction(char const*)+0x278>)
 800be28:	f10d 0202 	add.w	r2, sp, #2
 800be2c:	f004 fbed 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800be30:	b998      	cbnz	r0, 800be5a <PixelDmxParams::callbackFunction(char const*)+0x132>
 800be32:	f240 25a6 	movw	r5, #678	; 0x2a6
 800be36:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800be3a:	6863      	ldr	r3, [r4, #4]
 800be3c:	1e8a      	subs	r2, r1, #2
 800be3e:	b292      	uxth	r2, r2
 800be40:	42aa      	cmp	r2, r5
 800be42:	bf81      	itttt	hi
 800be44:	2201      	movhi	r2, #1
 800be46:	75a0      	strbhi	r0, [r4, #22]
 800be48:	7562      	strbhi	r2, [r4, #21]
 800be4a:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800be4e:	bf9c      	itt	ls
 800be50:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800be54:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800be58:	e786      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800be5a:	4628      	mov	r0, r5
 800be5c:	4951      	ldr	r1, [pc, #324]	; (800bfa4 <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800be5e:	aa03      	add	r2, sp, #12
 800be60:	f004 fbf1 	bl	8010646 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800be64:	b960      	cbnz	r0, 800be80 <PixelDmxParams::callbackFunction(char const*)+0x158>
 800be66:	9a03      	ldr	r2, [sp, #12]
 800be68:	494f      	ldr	r1, [pc, #316]	; (800bfa8 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800be6a:	6863      	ldr	r3, [r4, #4]
 800be6c:	428a      	cmp	r2, r1
 800be6e:	bf14      	ite	ne
 800be70:	f043 0310 	orrne.w	r3, r3, #16
 800be74:	f023 0310 	biceq.w	r3, r3, #16
 800be78:	6063      	str	r3, [r4, #4]
 800be7a:	f8c4 200e 	str.w	r2, [r4, #14]
 800be7e:	e7a9      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800be80:	4628      	mov	r0, r5
 800be82:	494a      	ldr	r1, [pc, #296]	; (800bfac <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800be84:	f10d 0201 	add.w	r2, sp, #1
 800be88:	f004 fc06 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800be8c:	b988      	cbnz	r0, 800beb2 <PixelDmxParams::callbackFunction(char const*)+0x18a>
 800be8e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800be92:	6863      	ldr	r3, [r4, #4]
 800be94:	1e4a      	subs	r2, r1, #1
 800be96:	b2d2      	uxtb	r2, r2
 800be98:	2afd      	cmp	r2, #253	; 0xfd
 800be9a:	bf83      	ittte	hi
 800be9c:	f023 0320 	bichi.w	r3, r3, #32
 800bea0:	6063      	strhi	r3, [r4, #4]
 800bea2:	23ff      	movhi	r3, #255	; 0xff
 800bea4:	f043 0320 	orrls.w	r3, r3, #32
 800bea8:	bf9a      	itte	ls
 800beaa:	6063      	strls	r3, [r4, #4]
 800beac:	74a1      	strbls	r1, [r4, #18]
 800beae:	74a3      	strbhi	r3, [r4, #18]
 800beb0:	e790      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800beb2:	4628      	mov	r0, r5
 800beb4:	493e      	ldr	r1, [pc, #248]	; (800bfb0 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800beb6:	f10d 0202 	add.w	r2, sp, #2
 800beba:	f004 fba6 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bebe:	2800      	cmp	r0, #0
 800bec0:	d13f      	bne.n	800bf42 <PixelDmxParams::callbackFunction(char const*)+0x21a>
 800bec2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bec6:	6863      	ldr	r3, [r4, #4]
 800bec8:	1e91      	subs	r1, r2, #2
 800beca:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800bece:	bf83      	ittte	hi
 800bed0:	2201      	movhi	r2, #1
 800bed2:	72e2      	strbhi	r2, [r4, #11]
 800bed4:	2200      	movhi	r2, #0
 800bed6:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800beda:	bf92      	itee	ls
 800bedc:	f043 0304 	orrls.w	r3, r3, #4
 800bee0:	7322      	strbhi	r2, [r4, #12]
 800bee2:	f023 0304 	bichi.w	r3, r3, #4
 800bee6:	e73f      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bee8:	2201      	movs	r2, #1
 800beea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800beee:	8362      	strh	r2, [r4, #26]
 800bef0:	e036      	b.n	800bf60 <PixelDmxParams::callbackFunction(char const*)+0x238>
 800bef2:	4628      	mov	r0, r5
 800bef4:	492f      	ldr	r1, [pc, #188]	; (800bfb4 <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800bef6:	f10d 0201 	add.w	r2, sp, #1
 800befa:	f004 fbcd 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800befe:	b948      	cbnz	r0, 800bf14 <PixelDmxParams::callbackFunction(char const*)+0x1ec>
 800bf00:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bf04:	6863      	ldr	r3, [r4, #4]
 800bf06:	b112      	cbz	r2, 800bf0e <PixelDmxParams::callbackFunction(char const*)+0x1e6>
 800bf08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800bf0c:	e72c      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf0e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bf12:	e729      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf14:	4628      	mov	r0, r5
 800bf16:	4928      	ldr	r1, [pc, #160]	; (800bfb8 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800bf18:	aa01      	add	r2, sp, #4
 800bf1a:	f004 fad2 	bl	80104c2 <Sscan::Float(char const*, char const*, float&)>
 800bf1e:	4605      	mov	r5, r0
 800bf20:	2800      	cmp	r0, #0
 800bf22:	f47f af57 	bne.w	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bf26:	4925      	ldr	r1, [pc, #148]	; (800bfbc <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800bf28:	9801      	ldr	r0, [sp, #4]
 800bf2a:	f7fc f9ab 	bl	8008284 <__aeabi_fmul>
 800bf2e:	f7fc faf9 	bl	8008524 <__aeabi_f2uiz>
 800bf32:	b2c3      	uxtb	r3, r0
 800bf34:	f1a3 0214 	sub.w	r2, r3, #20
 800bf38:	2a05      	cmp	r2, #5
 800bf3a:	bf8c      	ite	hi
 800bf3c:	7365      	strbhi	r5, [r4, #13]
 800bf3e:	7363      	strbls	r3, [r4, #13]
 800bf40:	e748      	b.n	800bdd4 <PixelDmxParams::callbackFunction(char const*)+0xac>
 800bf42:	4628      	mov	r0, r5
 800bf44:	491e      	ldr	r1, [pc, #120]	; (800bfc0 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800bf46:	f10d 0202 	add.w	r2, sp, #2
 800bf4a:	f004 fb5e 	bl	801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bf4e:	b940      	cbnz	r0, 800bf62 <PixelDmxParams::callbackFunction(char const*)+0x23a>
 800bf50:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800bf54:	6863      	ldr	r3, [r4, #4]
 800bf56:	2a00      	cmp	r2, #0
 800bf58:	d0c6      	beq.n	800bee8 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800bf5a:	8362      	strh	r2, [r4, #26]
 800bf5c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800bf60:	6063      	str	r3, [r4, #4]
 800bf62:	4628      	mov	r0, r5
 800bf64:	4917      	ldr	r1, [pc, #92]	; (800bfc4 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800bf66:	f10d 0201 	add.w	r2, sp, #1
 800bf6a:	f004 fb95 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bf6e:	2800      	cmp	r0, #0
 800bf70:	d1bf      	bne.n	800bef2 <PixelDmxParams::callbackFunction(char const*)+0x1ca>
 800bf72:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bf76:	6863      	ldr	r3, [r4, #4]
 800bf78:	1e51      	subs	r1, r2, #1
 800bf7a:	2904      	cmp	r1, #4
 800bf7c:	bf99      	ittee	ls
 800bf7e:	7522      	strbls	r2, [r4, #20]
 800bf80:	f043 0308 	orrls.w	r3, r3, #8
 800bf84:	7520      	strbhi	r0, [r4, #20]
 800bf86:	f023 0308 	bichi.w	r3, r3, #8
 800bf8a:	e6ed      	b.n	800bd68 <PixelDmxParams::callbackFunction(char const*)+0x40>
 800bf8c:	080155fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, ip, lr}
 800bf90:	08015605 	stmdaeq	r1, {r0, r2, r9, sl, ip, lr}
 800bf94:	080155ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, ip, lr}
 800bf98:	0801560f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, ip, lr}
 800bf9c:	08015617 	stmdaeq	r1, {r0, r1, r2, r4, r9, sl, ip, lr}
 800bfa0:	080155b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, ip, lr}
 800bfa4:	0801559d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, ip, lr}
 800bfa8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800bfac:	080155da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, ip, lr}
 800bfb0:	0801566c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, ip, lr}
 800bfb4:	080155c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, ip, lr}
 800bfb8:	08015591 	stmdaeq	r1, {r0, r4, r7, r8, sl, ip, lr}
 800bfbc:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800bfc0:	08015658 	stmdaeq	r1, {r3, r4, r6, r9, sl, ip, lr}
 800bfc4:	080155ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, lr}

0800bfc8 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800bfc8:	f7ff beae 	b.w	800bd28 <PixelDmxParams::callbackFunction(char const*)>

0800bfcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800bfcc:	b570      	push	{r4, r5, r6, lr}
 800bfce:	4604      	mov	r4, r0
 800bfd0:	4615      	mov	r5, r2
 800bfd2:	461e      	mov	r6, r3
 800bfd4:	b086      	sub	sp, #24
 800bfd6:	3004      	adds	r0, #4
 800bfd8:	b389      	cbz	r1, 800c03e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x72>
 800bfda:	2218      	movs	r2, #24
 800bfdc:	f005 f86f 	bl	80110be <memmove>
 800bfe0:	462a      	mov	r2, r5
 800bfe2:	4633      	mov	r3, r6
 800bfe4:	4996      	ldr	r1, [pc, #600]	; (800c240 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800bfe6:	a803      	add	r0, sp, #12
 800bfe8:	f004 f97a 	bl	80102e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bfec:	7a20      	ldrb	r0, [r4, #8]
 800bfee:	f000 faad 	bl	800c54c <PixelType::GetType(pixel::Type)>
 800bff2:	6863      	ldr	r3, [r4, #4]
 800bff4:	4602      	mov	r2, r0
 800bff6:	4993      	ldr	r1, [pc, #588]	; (800c244 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800bff8:	f003 0301 	and.w	r3, r3, #1
 800bffc:	a803      	add	r0, sp, #12
 800bffe:	f7ff fde7 	bl	800bbd0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c002:	6863      	ldr	r3, [r4, #4]
 800c004:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800c008:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c00c:	498e      	ldr	r1, [pc, #568]	; (800c248 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800c00e:	a803      	add	r0, sp, #12
 800c010:	f7ff fdb6 	bl	800bb80 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c014:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c018:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c01c:	6863      	ldr	r3, [r4, #4]
 800c01e:	42aa      	cmp	r2, r5
 800c020:	d227      	bcs.n	800c072 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa6>
 800c022:	9803      	ldr	r0, [sp, #12]
 800c024:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800c028:	4410      	add	r0, r2
 800c02a:	eba5 0502 	sub.w	r5, r5, r2
 800c02e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c032:	d10b      	bne.n	800c04c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x80>
 800c034:	b96a      	cbnz	r2, 800c052 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x86>
 800c036:	9200      	str	r2, [sp, #0]
 800c038:	4b84      	ldr	r3, [pc, #528]	; (800c24c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c03a:	4a85      	ldr	r2, [pc, #532]	; (800c250 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800c03c:	e00f      	b.n	800c05e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800c03e:	6823      	ldr	r3, [r4, #0]
 800c040:	4601      	mov	r1, r0
 800c042:	681a      	ldr	r2, [r3, #0]
 800c044:	4618      	mov	r0, r3
 800c046:	68d2      	ldr	r2, [r2, #12]
 800c048:	4790      	blx	r2
 800c04a:	e7c9      	b.n	800bfe0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x14>
 800c04c:	2a00      	cmp	r2, #0
 800c04e:	f000 808a 	beq.w	800c166 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19a>
 800c052:	3b00      	subs	r3, #0
 800c054:	bf18      	it	ne
 800c056:	2301      	movne	r3, #1
 800c058:	4a7e      	ldr	r2, [pc, #504]	; (800c254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800c05a:	9300      	str	r3, [sp, #0]
 800c05c:	4b7b      	ldr	r3, [pc, #492]	; (800c24c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c05e:	4629      	mov	r1, r5
 800c060:	f7fd f948 	bl	80092f4 <snprintf>
 800c064:	4285      	cmp	r5, r0
 800c066:	bfa2      	ittt	ge
 800c068:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c06c:	18c0      	addge	r0, r0, r3
 800c06e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c072:	7b63      	ldrb	r3, [r4, #13]
 800c074:	2b00      	cmp	r3, #0
 800c076:	d17b      	bne.n	800c170 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a4>
 800c078:	4a77      	ldr	r2, [pc, #476]	; (800c258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800c07a:	4978      	ldr	r1, [pc, #480]	; (800c25c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800c07c:	a803      	add	r0, sp, #12
 800c07e:	f7ff fda7 	bl	800bbd0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c082:	4977      	ldr	r1, [pc, #476]	; (800c260 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c084:	a803      	add	r0, sp, #12
 800c086:	f004 f9b1 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c08a:	6863      	ldr	r3, [r4, #4]
 800c08c:	059e      	lsls	r6, r3, #22
 800c08e:	d403      	bmi.n	800c098 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800c090:	7a20      	ldrb	r0, [r4, #8]
 800c092:	f000 fabf 	bl	800c614 <PixelType::GetMap(pixel::Type)>
 800c096:	75e0      	strb	r0, [r4, #23]
 800c098:	7de0      	ldrb	r0, [r4, #23]
 800c09a:	f000 faaf 	bl	800c5fc <PixelType::GetMap(pixel::Map)>
 800c09e:	6863      	ldr	r3, [r4, #4]
 800c0a0:	4602      	mov	r2, r0
 800c0a2:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800c0a6:	496f      	ldr	r1, [pc, #444]	; (800c264 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800c0a8:	a803      	add	r0, sp, #12
 800c0aa:	f7ff fd91 	bl	800bbd0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c0ae:	6863      	ldr	r3, [r4, #4]
 800c0b0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800c0b4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c0b8:	d011      	beq.n	800c0de <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x112>
 800c0ba:	f10d 020b 	add.w	r2, sp, #11
 800c0be:	7a20      	ldrb	r0, [r4, #8]
 800c0c0:	f10d 010a 	add.w	r1, sp, #10
 800c0c4:	f000 f93b 	bl	800c33e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800c0c8:	6863      	ldr	r3, [r4, #4]
 800c0ca:	055d      	lsls	r5, r3, #21
 800c0cc:	bf5c      	itt	pl
 800c0ce:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800c0d2:	7622      	strbpl	r2, [r4, #24]
 800c0d4:	0518      	lsls	r0, r3, #20
 800c0d6:	bf5c      	itt	pl
 800c0d8:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800c0dc:	7663      	strbpl	r3, [r4, #25]
 800c0de:	4962      	ldr	r1, [pc, #392]	; (800c268 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800c0e0:	a803      	add	r0, sp, #12
 800c0e2:	f004 f983 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c0e6:	7e20      	ldrb	r0, [r4, #24]
 800c0e8:	f000 fa9e 	bl	800c628 <PixelType::ConvertTxH(unsigned char)>
 800c0ec:	2502      	movs	r5, #2
 800c0ee:	6863      	ldr	r3, [r4, #4]
 800c0f0:	4602      	mov	r2, r0
 800c0f2:	495e      	ldr	r1, [pc, #376]	; (800c26c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c0f4:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800c0f8:	9500      	str	r5, [sp, #0]
 800c0fa:	a803      	add	r0, sp, #12
 800c0fc:	f7ff fd90 	bl	800bc20 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c100:	7e60      	ldrb	r0, [r4, #25]
 800c102:	f000 fa91 	bl	800c628 <PixelType::ConvertTxH(unsigned char)>
 800c106:	6863      	ldr	r3, [r4, #4]
 800c108:	4602      	mov	r2, r0
 800c10a:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800c10e:	4958      	ldr	r1, [pc, #352]	; (800c270 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800c110:	9500      	str	r5, [sp, #0]
 800c112:	a803      	add	r0, sp, #12
 800c114:	f7ff fd84 	bl	800bc20 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c118:	4956      	ldr	r1, [pc, #344]	; (800c274 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800c11a:	a803      	add	r0, sp, #12
 800c11c:	f004 f966 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c120:	6863      	ldr	r3, [r4, #4]
 800c122:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800c126:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800c12a:	4953      	ldr	r1, [pc, #332]	; (800c278 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800c12c:	a803      	add	r0, sp, #12
 800c12e:	f7ff fd27 	bl	800bb80 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c132:	4952      	ldr	r1, [pc, #328]	; (800c27c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800c134:	a803      	add	r0, sp, #12
 800c136:	f004 f959 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c13a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c13e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c142:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800c146:	42aa      	cmp	r2, r5
 800c148:	6861      	ldr	r1, [r4, #4]
 800c14a:	d22e      	bcs.n	800c1aa <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1de>
 800c14c:	9803      	ldr	r0, [sp, #12]
 800c14e:	06c9      	lsls	r1, r1, #27
 800c150:	4410      	add	r0, r2
 800c152:	eba5 0502 	sub.w	r5, r5, r2
 800c156:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c15a:	d417      	bmi.n	800c18c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c0>
 800c15c:	b9c2      	cbnz	r2, 800c190 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c4>
 800c15e:	9300      	str	r3, [sp, #0]
 800c160:	4a3b      	ldr	r2, [pc, #236]	; (800c250 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>)
 800c162:	4b47      	ldr	r3, [pc, #284]	; (800c280 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c164:	e017      	b.n	800c196 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800c166:	2301      	movs	r3, #1
 800c168:	4a46      	ldr	r2, [pc, #280]	; (800c284 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800c16a:	9300      	str	r3, [sp, #0]
 800c16c:	4b37      	ldr	r3, [pc, #220]	; (800c24c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c16e:	e776      	b.n	800c05e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x92>
 800c170:	4618      	mov	r0, r3
 800c172:	f7fb fdbd 	bl	8007cf0 <__aeabi_ui2f>
 800c176:	4944      	ldr	r1, [pc, #272]	; (800c288 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800c178:	f7fc f938 	bl	80083ec <__aeabi_fdiv>
 800c17c:	2301      	movs	r3, #1
 800c17e:	4602      	mov	r2, r0
 800c180:	4936      	ldr	r1, [pc, #216]	; (800c25c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800c182:	9300      	str	r3, [sp, #0]
 800c184:	a803      	add	r0, sp, #12
 800c186:	f7ff fd4b 	bl	800bc20 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800c18a:	e77a      	b.n	800c082 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800c18c:	2a00      	cmp	r2, #0
 800c18e:	d052      	beq.n	800c236 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x26a>
 800c190:	9300      	str	r3, [sp, #0]
 800c192:	4a30      	ldr	r2, [pc, #192]	; (800c254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x288>)
 800c194:	4b3a      	ldr	r3, [pc, #232]	; (800c280 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c196:	4629      	mov	r1, r5
 800c198:	f7fd f8ac 	bl	80092f4 <snprintf>
 800c19c:	4285      	cmp	r5, r0
 800c19e:	bfa2      	ittt	ge
 800c1a0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c1a4:	18c0      	addge	r0, r0, r3
 800c1a6:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c1aa:	4938      	ldr	r1, [pc, #224]	; (800c28c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800c1ac:	a803      	add	r0, sp, #12
 800c1ae:	f004 f91d 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c1b2:	6863      	ldr	r3, [r4, #4]
 800c1b4:	7ca2      	ldrb	r2, [r4, #18]
 800c1b6:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800c1ba:	4935      	ldr	r1, [pc, #212]	; (800c290 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800c1bc:	a803      	add	r0, sp, #12
 800c1be:	f7ff fcb7 	bl	800bb30 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c1c2:	4934      	ldr	r1, [pc, #208]	; (800c294 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800c1c4:	a803      	add	r0, sp, #12
 800c1c6:	f004 f911 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c1ca:	6863      	ldr	r3, [r4, #4]
 800c1cc:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800c1d0:	4931      	ldr	r1, [pc, #196]	; (800c298 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800c1d2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800c1d6:	a803      	add	r0, sp, #12
 800c1d8:	f7ff fcd2 	bl	800bb80 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c1dc:	6863      	ldr	r3, [r4, #4]
 800c1de:	8b62      	ldrh	r2, [r4, #26]
 800c1e0:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800c1e4:	492d      	ldr	r1, [pc, #180]	; (800c29c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800c1e6:	a803      	add	r0, sp, #12
 800c1e8:	f7ff fcca 	bl	800bb80 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c1ec:	492c      	ldr	r1, [pc, #176]	; (800c2a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800c1ee:	a803      	add	r0, sp, #12
 800c1f0:	f004 f8fc 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800c1f4:	6863      	ldr	r3, [r4, #4]
 800c1f6:	7d22      	ldrb	r2, [r4, #20]
 800c1f8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800c1fc:	4929      	ldr	r1, [pc, #164]	; (800c2a4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800c1fe:	a803      	add	r0, sp, #12
 800c200:	f7ff fc96 	bl	800bb30 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c204:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c208:	b17b      	cbz	r3, 800c22a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x25e>
 800c20a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c20e:	9b03      	ldr	r3, [sp, #12]
 800c210:	4413      	add	r3, r2
 800c212:	227d      	movs	r2, #125	; 0x7d
 800c214:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c218:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c21c:	9903      	ldr	r1, [sp, #12]
 800c21e:	54ca      	strb	r2, [r1, r3]
 800c220:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c224:	3301      	adds	r3, #1
 800c226:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c22a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c22e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c230:	601a      	str	r2, [r3, #0]
 800c232:	b006      	add	sp, #24
 800c234:	bd70      	pop	{r4, r5, r6, pc}
 800c236:	9300      	str	r3, [sp, #0]
 800c238:	4a12      	ldr	r2, [pc, #72]	; (800c284 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800c23a:	4b11      	ldr	r3, [pc, #68]	; (800c280 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800c23c:	e7ab      	b.n	800c196 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1ca>
 800c23e:	bf00      	nop
 800c240:	0801561f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sl, ip, lr}
 800c244:	080155fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, ip, lr}
 800c248:	08015605 	stmdaeq	r1, {r0, r2, r9, sl, ip, lr}
 800c24c:	080155c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, ip, lr}
 800c250:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800c254:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800c258:	08014715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, lr}
 800c25c:	08015591 	stmdaeq	r1, {r0, r4, r7, r8, sl, ip, lr}
 800c260:	0801471f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, lr}
 800c264:	080155ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, ip, lr}
 800c268:	08014733 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, sl, lr}
 800c26c:	0801560f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, ip, lr}
 800c270:	08015617 	stmdaeq	r1, {r0, r1, r2, r4, r9, sl, ip, lr}
 800c274:	08014749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, lr}
 800c278:	080155b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, ip, lr}
 800c27c:	08014752 	stmdaeq	r1, {r1, r4, r6, r8, r9, sl, lr}
 800c280:	0801559d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, ip, lr}
 800c284:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}
 800c288:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800c28c:	08014764 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, lr}
 800c290:	080155da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, ip, lr}
 800c294:	08014772 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, lr}
 800c298:	0801566c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, ip, lr}
 800c29c:	08015658 	stmdaeq	r1, {r3, r4, r6, r9, sl, ip, lr}
 800c2a0:	08014776 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, lr}
 800c2a4:	080155ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, lr}

0800c2a8 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800c2a8:	b513      	push	{r0, r1, r4, lr}
 800c2aa:	6804      	ldr	r4, [r0, #0]
 800c2ac:	b914      	cbnz	r4, 800c2b4 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800c2ae:	601c      	str	r4, [r3, #0]
 800c2b0:	b002      	add	sp, #8
 800c2b2:	bd10      	pop	{r4, pc}
 800c2b4:	9300      	str	r3, [sp, #0]
 800c2b6:	4613      	mov	r3, r2
 800c2b8:	460a      	mov	r2, r1
 800c2ba:	2100      	movs	r1, #0
 800c2bc:	f7ff fe86 	bl	800bfcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800c2c0:	e7f6      	b.n	800c2b0 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800c2c2 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800c2c2:	6843      	ldr	r3, [r0, #4]
 800c2c4:	07da      	lsls	r2, r3, #31
 800c2c6:	bf44      	itt	mi
 800c2c8:	7a02      	ldrbmi	r2, [r0, #8]
 800c2ca:	600a      	strmi	r2, [r1, #0]
 800c2cc:	079a      	lsls	r2, r3, #30
 800c2ce:	d505      	bpl.n	800c2dc <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800c2d0:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800c2d4:	2a00      	cmp	r2, #0
 800c2d6:	bf08      	it	eq
 800c2d8:	22aa      	moveq	r2, #170	; 0xaa
 800c2da:	604a      	str	r2, [r1, #4]
 800c2dc:	059a      	lsls	r2, r3, #22
 800c2de:	bf44      	itt	mi
 800c2e0:	7dc2      	ldrbmi	r2, [r0, #23]
 800c2e2:	608a      	strmi	r2, [r1, #8]
 800c2e4:	055a      	lsls	r2, r3, #21
 800c2e6:	bf44      	itt	mi
 800c2e8:	7e02      	ldrbmi	r2, [r0, #24]
 800c2ea:	740a      	strbmi	r2, [r1, #16]
 800c2ec:	051a      	lsls	r2, r3, #20
 800c2ee:	bf44      	itt	mi
 800c2f0:	7e42      	ldrbmi	r2, [r0, #25]
 800c2f2:	744a      	strbmi	r2, [r1, #17]
 800c2f4:	06da      	lsls	r2, r3, #27
 800c2f6:	bf44      	itt	mi
 800c2f8:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800c2fc:	60ca      	strmi	r2, [r1, #12]
 800c2fe:	069a      	lsls	r2, r3, #26
 800c300:	bf44      	itt	mi
 800c302:	7c82      	ldrbmi	r2, [r0, #18]
 800c304:	748a      	strbmi	r2, [r1, #18]
 800c306:	061a      	lsls	r2, r3, #24
 800c308:	d504      	bpl.n	800c314 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800c30a:	2201      	movs	r2, #1
 800c30c:	750a      	strb	r2, [r1, #20]
 800c30e:	7b42      	ldrb	r2, [r0, #13]
 800c310:	b102      	cbz	r2, 800c314 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800c312:	74ca      	strb	r2, [r1, #19]
 800c314:	075a      	lsls	r2, r3, #29
 800c316:	d50b      	bpl.n	800c330 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x6e>
 800c318:	7ac2      	ldrb	r2, [r0, #11]
 800c31a:	b510      	push	{r4, lr}
 800c31c:	7b04      	ldrb	r4, [r0, #12]
 800c31e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800c322:	858a      	strh	r2, [r1, #44]	; 0x2c
 800c324:	05da      	lsls	r2, r3, #23
 800c326:	bf44      	itt	mi
 800c328:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800c32c:	620b      	strmi	r3, [r1, #32]
 800c32e:	bd10      	pop	{r4, pc}
 800c330:	05db      	lsls	r3, r3, #23
 800c332:	bf44      	itt	mi
 800c334:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800c338:	620b      	strmi	r3, [r1, #32]
 800c33a:	4770      	bx	lr

0800c33c <PixelDmxParams::Dump()>:
 800c33c:	4770      	bx	lr

0800c33e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800c33e:	23c0      	movs	r3, #192	; 0xc0
 800c340:	2803      	cmp	r0, #3
 800c342:	700b      	strb	r3, [r1, #0]
 800c344:	d006      	beq.n	800c354 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800c346:	3808      	subs	r0, #8
 800c348:	2803      	cmp	r0, #3
 800c34a:	bf34      	ite	cc
 800c34c:	23fc      	movcc	r3, #252	; 0xfc
 800c34e:	23f0      	movcs	r3, #240	; 0xf0
 800c350:	7013      	strb	r3, [r2, #0]
 800c352:	4770      	bx	lr
 800c354:	23f8      	movs	r3, #248	; 0xf8
 800c356:	e7fb      	b.n	800c350 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800c358 <PixelConfiguration::Validate(unsigned int&)>:
 800c358:	b513      	push	{r0, r1, r4, lr}
 800c35a:	4604      	mov	r4, r0
 800c35c:	6800      	ldr	r0, [r0, #0]
 800c35e:	6863      	ldr	r3, [r4, #4]
 800c360:	2807      	cmp	r0, #7
 800c362:	68a2      	ldr	r2, [r4, #8]
 800c364:	d128      	bne.n	800c3b8 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800c366:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c36a:	bf28      	it	cs
 800c36c:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800c370:	6063      	str	r3, [r4, #4]
 800c372:	2304      	movs	r3, #4
 800c374:	600b      	str	r3, [r1, #0]
 800c376:	2301      	movs	r3, #1
 800c378:	2a06      	cmp	r2, #6
 800c37a:	7563      	strb	r3, [r4, #21]
 800c37c:	d102      	bne.n	800c384 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800c37e:	f000 f949 	bl	800c614 <PixelType::GetMap(pixel::Type)>
 800c382:	60a0      	str	r0, [r4, #8]
 800c384:	7c63      	ldrb	r3, [r4, #17]
 800c386:	7c22      	ldrb	r2, [r4, #16]
 800c388:	6820      	ldr	r0, [r4, #0]
 800c38a:	429a      	cmp	r2, r3
 800c38c:	bf28      	it	cs
 800c38e:	2300      	movcs	r3, #0
 800c390:	f10d 0207 	add.w	r2, sp, #7
 800c394:	bf28      	it	cs
 800c396:	8223      	strhcs	r3, [r4, #16]
 800c398:	f10d 0106 	add.w	r1, sp, #6
 800c39c:	f7ff ffcf 	bl	800c33e <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800c3a0:	7c23      	ldrb	r3, [r4, #16]
 800c3a2:	b913      	cbnz	r3, 800c3aa <PixelConfiguration::Validate(unsigned int&)+0x52>
 800c3a4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800c3a8:	7423      	strb	r3, [r4, #16]
 800c3aa:	7c63      	ldrb	r3, [r4, #17]
 800c3ac:	b913      	cbnz	r3, 800c3b4 <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800c3ae:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c3b2:	7463      	strb	r3, [r4, #17]
 800c3b4:	4b29      	ldr	r3, [pc, #164]	; (800c45c <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800c3b6:	e01e      	b.n	800c3f6 <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800c3b8:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800c3bc:	bf28      	it	cs
 800c3be:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800c3c2:	6063      	str	r3, [r4, #4]
 800c3c4:	2303      	movs	r3, #3
 800c3c6:	600b      	str	r3, [r1, #0]
 800c3c8:	f1a0 030b 	sub.w	r3, r0, #11
 800c3cc:	2b01      	cmp	r3, #1
 800c3ce:	d806      	bhi.n	800c3de <PixelConfiguration::Validate(unsigned int&)+0x86>
 800c3d0:	7ca3      	ldrb	r3, [r4, #18]
 800c3d2:	2b1f      	cmp	r3, #31
 800c3d4:	d83d      	bhi.n	800c452 <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800c3d6:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800c3da:	74a3      	strb	r3, [r4, #18]
 800c3dc:	e001      	b.n	800c3e2 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800c3de:	2800      	cmp	r0, #0
 800c3e0:	d139      	bne.n	800c456 <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800c3e2:	2300      	movs	r3, #0
 800c3e4:	2a06      	cmp	r2, #6
 800c3e6:	bf08      	it	eq
 800c3e8:	60a3      	streq	r3, [r4, #8]
 800c3ea:	280d      	cmp	r0, #13
 800c3ec:	7563      	strb	r3, [r4, #21]
 800c3ee:	68e3      	ldr	r3, [r4, #12]
 800c3f0:	d119      	bne.n	800c426 <PixelConfiguration::Validate(unsigned int&)+0xce>
 800c3f2:	b913      	cbnz	r3, 800c3fa <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800c3f4:	4b1a      	ldr	r3, [pc, #104]	; (800c460 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800c3f6:	60e3      	str	r3, [r4, #12]
 800c3f8:	e003      	b.n	800c402 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800c3fa:	4a1a      	ldr	r2, [pc, #104]	; (800c464 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800c3fc:	4293      	cmp	r3, r2
 800c3fe:	d900      	bls.n	800c402 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800c400:	60e2      	str	r2, [r4, #12]
 800c402:	7d23      	ldrb	r3, [r4, #20]
 800c404:	b31b      	cbz	r3, 800c44e <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800c406:	7ce3      	ldrb	r3, [r4, #19]
 800c408:	b9ab      	cbnz	r3, 800c436 <PixelConfiguration::Validate(unsigned int&)+0xde>
 800c40a:	6822      	ldr	r2, [r4, #0]
 800c40c:	b17a      	cbz	r2, 800c42e <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800c40e:	f1a2 030b 	sub.w	r3, r2, #11
 800c412:	2b01      	cmp	r3, #1
 800c414:	d90d      	bls.n	800c432 <PixelConfiguration::Validate(unsigned int&)+0xda>
 800c416:	4b14      	ldr	r3, [pc, #80]	; (800c468 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800c418:	4914      	ldr	r1, [pc, #80]	; (800c46c <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800c41a:	2a0d      	cmp	r2, #13
 800c41c:	bf08      	it	eq
 800c41e:	460b      	moveq	r3, r1
 800c420:	61a3      	str	r3, [r4, #24]
 800c422:	b002      	add	sp, #8
 800c424:	bd10      	pop	{r4, pc}
 800c426:	2b00      	cmp	r3, #0
 800c428:	d0e4      	beq.n	800c3f4 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800c42a:	4a11      	ldr	r2, [pc, #68]	; (800c470 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800c42c:	e7e6      	b.n	800c3fc <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800c42e:	4b11      	ldr	r3, [pc, #68]	; (800c474 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800c430:	e7f6      	b.n	800c420 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c432:	4b11      	ldr	r3, [pc, #68]	; (800c478 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800c434:	e7f4      	b.n	800c420 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c436:	f1a3 0214 	sub.w	r2, r3, #20
 800c43a:	2a05      	cmp	r2, #5
 800c43c:	d807      	bhi.n	800c44e <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800c43e:	3b15      	subs	r3, #21
 800c440:	2b04      	cmp	r3, #4
 800c442:	bf96      	itet	ls
 800c444:	4a0d      	ldrls	r2, [pc, #52]	; (800c47c <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800c446:	4b0e      	ldrhi	r3, [pc, #56]	; (800c480 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800c448:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800c44c:	e7e8      	b.n	800c420 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c44e:	4b07      	ldr	r3, [pc, #28]	; (800c46c <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800c450:	e7e6      	b.n	800c420 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800c452:	23ff      	movs	r3, #255	; 0xff
 800c454:	e7c1      	b.n	800c3da <PixelConfiguration::Validate(unsigned int&)+0x82>
 800c456:	280d      	cmp	r0, #13
 800c458:	d18d      	bne.n	800c376 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800c45a:	e7c2      	b.n	800c3e2 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800c45c:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800c460:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800c464:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800c468:	08014b50 	stmdaeq	r1, {r4, r6, r8, r9, fp, lr}
 800c46c:	08014850 	stmdaeq	r1, {r4, r6, fp, lr}
 800c470:	017d7840 	cmneq	sp, r0, asr #16
 800c474:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}
 800c478:	08014f50 	stmdaeq	r1, {r4, r6, r8, r9, sl, fp, lr}
 800c47c:	0801483c 	stmdaeq	r1, {r2, r3, r4, r5, fp, lr}
 800c480:	08014950 	stmdaeq	r1, {r4, r6, r8, fp, lr}

0800c484 <PixelConfiguration::Print()>:
 800c484:	b513      	push	{r0, r1, r4, lr}
 800c486:	4604      	mov	r4, r0
 800c488:	4825      	ldr	r0, [pc, #148]	; (800c520 <PixelConfiguration::Print()+0x9c>)
 800c48a:	f7fc ff23 	bl	80092d4 <printf>
 800c48e:	6820      	ldr	r0, [r4, #0]
 800c490:	f000 f85c 	bl	800c54c <PixelType::GetType(pixel::Type)>
 800c494:	6822      	ldr	r2, [r4, #0]
 800c496:	4601      	mov	r1, r0
 800c498:	4822      	ldr	r0, [pc, #136]	; (800c524 <PixelConfiguration::Print()+0xa0>)
 800c49a:	f7fc ff1b 	bl	80092d4 <printf>
 800c49e:	6861      	ldr	r1, [r4, #4]
 800c4a0:	4821      	ldr	r0, [pc, #132]	; (800c528 <PixelConfiguration::Print()+0xa4>)
 800c4a2:	f7fc ff17 	bl	80092d4 <printf>
 800c4a6:	7d63      	ldrb	r3, [r4, #21]
 800c4a8:	2b00      	cmp	r3, #0
 800c4aa:	d030      	beq.n	800c50e <PixelConfiguration::Print()+0x8a>
 800c4ac:	68a0      	ldr	r0, [r4, #8]
 800c4ae:	f000 f8a5 	bl	800c5fc <PixelType::GetMap(pixel::Map)>
 800c4b2:	68a2      	ldr	r2, [r4, #8]
 800c4b4:	4601      	mov	r1, r0
 800c4b6:	481d      	ldr	r0, [pc, #116]	; (800c52c <PixelConfiguration::Print()+0xa8>)
 800c4b8:	f7fc ff0c 	bl	80092d4 <printf>
 800c4bc:	7c20      	ldrb	r0, [r4, #16]
 800c4be:	f000 f8b3 	bl	800c628 <PixelType::ConvertTxH(unsigned char)>
 800c4c2:	f7fb fe87 	bl	80081d4 <__aeabi_f2d>
 800c4c6:	460b      	mov	r3, r1
 800c4c8:	7c21      	ldrb	r1, [r4, #16]
 800c4ca:	4602      	mov	r2, r0
 800c4cc:	9100      	str	r1, [sp, #0]
 800c4ce:	4818      	ldr	r0, [pc, #96]	; (800c530 <PixelConfiguration::Print()+0xac>)
 800c4d0:	f7fc ff00 	bl	80092d4 <printf>
 800c4d4:	7c60      	ldrb	r0, [r4, #17]
 800c4d6:	f000 f8a7 	bl	800c628 <PixelType::ConvertTxH(unsigned char)>
 800c4da:	f7fb fe7b 	bl	80081d4 <__aeabi_f2d>
 800c4de:	460b      	mov	r3, r1
 800c4e0:	7c61      	ldrb	r1, [r4, #17]
 800c4e2:	4602      	mov	r2, r0
 800c4e4:	9100      	str	r1, [sp, #0]
 800c4e6:	4813      	ldr	r0, [pc, #76]	; (800c534 <PixelConfiguration::Print()+0xb0>)
 800c4e8:	f7fc fef4 	bl	80092d4 <printf>
 800c4ec:	7d21      	ldrb	r1, [r4, #20]
 800c4ee:	4a12      	ldr	r2, [pc, #72]	; (800c538 <PixelConfiguration::Print()+0xb4>)
 800c4f0:	4b12      	ldr	r3, [pc, #72]	; (800c53c <PixelConfiguration::Print()+0xb8>)
 800c4f2:	4813      	ldr	r0, [pc, #76]	; (800c540 <PixelConfiguration::Print()+0xbc>)
 800c4f4:	2900      	cmp	r1, #0
 800c4f6:	bf14      	ite	ne
 800c4f8:	4611      	movne	r1, r2
 800c4fa:	4619      	moveq	r1, r3
 800c4fc:	f7fc feea 	bl	80092d4 <printf>
 800c500:	68e1      	ldr	r1, [r4, #12]
 800c502:	4810      	ldr	r0, [pc, #64]	; (800c544 <PixelConfiguration::Print()+0xc0>)
 800c504:	b002      	add	sp, #8
 800c506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c50a:	f7fc bee3 	b.w	80092d4 <printf>
 800c50e:	6823      	ldr	r3, [r4, #0]
 800c510:	3b0b      	subs	r3, #11
 800c512:	2b01      	cmp	r3, #1
 800c514:	d8ea      	bhi.n	800c4ec <PixelConfiguration::Print()+0x68>
 800c516:	7ca1      	ldrb	r1, [r4, #18]
 800c518:	480b      	ldr	r0, [pc, #44]	; (800c548 <PixelConfiguration::Print()+0xc4>)
 800c51a:	f7fc fedb 	bl	80092d4 <printf>
 800c51e:	e7e5      	b.n	800c4ec <PixelConfiguration::Print()+0x68>
 800c520:	08014783 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, lr}
 800c524:	08014798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, lr}
 800c528:	080147ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, lr}
 800c52c:	080147bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, lr}
 800c530:	080147cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, lr}
 800c534:	080147e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, lr}
 800c538:	0801453c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, lr}
 800c53c:	08014540 	stmdaeq	r1, {r6, r8, sl, lr}
 800c540:	08014816 	stmdaeq	r1, {r1, r2, r4, fp, lr}
 800c544:	0801482c 	stmdaeq	r1, {r2, r3, r5, fp, lr}
 800c548:	080147ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}

0800c54c <PixelType::GetType(pixel::Type)>:
 800c54c:	280d      	cmp	r0, #13
 800c54e:	bfda      	itte	le
 800c550:	4b02      	ldrle	r3, [pc, #8]	; (800c55c <PixelType::GetType(pixel::Type)+0x10>)
 800c552:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800c556:	4802      	ldrgt	r0, [pc, #8]	; (800c560 <PixelType::GetType(pixel::Type)+0x14>)
 800c558:	4770      	bx	lr
 800c55a:	bf00      	nop
 800c55c:	08015084 	stmdaeq	r1, {r2, r7, ip, lr}
 800c560:	08015050 	stmdaeq	r1, {r4, r6, ip, lr}

0800c564 <PixelType::GetType(char const*)>:
 800c564:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c566:	4604      	mov	r4, r0
 800c568:	2000      	movs	r0, #0
 800c56a:	490f      	ldr	r1, [pc, #60]	; (800c5a8 <PixelType::GetType(char const*)+0x44>)
 800c56c:	1e67      	subs	r7, r4, #1
 800c56e:	1e4e      	subs	r6, r1, #1
 800c570:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800c574:	4615      	mov	r5, r2
 800c576:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800c57a:	2b19      	cmp	r3, #25
 800c57c:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800c580:	bf98      	it	ls
 800c582:	f102 0520 	addls.w	r5, r2, #32
 800c586:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800c58a:	f1bc 0f19 	cmp.w	ip, #25
 800c58e:	bf98      	it	ls
 800c590:	3320      	addls	r3, #32
 800c592:	42ab      	cmp	r3, r5
 800c594:	d005      	beq.n	800c5a2 <PixelType::GetType(char const*)+0x3e>
 800c596:	3001      	adds	r0, #1
 800c598:	280e      	cmp	r0, #14
 800c59a:	f101 0108 	add.w	r1, r1, #8
 800c59e:	d1e5      	bne.n	800c56c <PixelType::GetType(char const*)+0x8>
 800c5a0:	e001      	b.n	800c5a6 <PixelType::GetType(char const*)+0x42>
 800c5a2:	2a00      	cmp	r2, #0
 800c5a4:	d1e4      	bne.n	800c570 <PixelType::GetType(char const*)+0xc>
 800c5a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5a8:	08015084 	stmdaeq	r1, {r2, r7, ip, lr}

0800c5ac <PixelType::GetMap(char const*)>:
 800c5ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c5ae:	4605      	mov	r5, r0
 800c5b0:	2000      	movs	r0, #0
 800c5b2:	4b11      	ldr	r3, [pc, #68]	; (800c5f8 <PixelType::GetMap(char const*)+0x4c>)
 800c5b4:	1e5c      	subs	r4, r3, #1
 800c5b6:	1e6e      	subs	r6, r5, #1
 800c5b8:	f103 0c02 	add.w	ip, r3, #2
 800c5bc:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800c5c0:	4617      	mov	r7, r2
 800c5c2:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800c5c6:	2919      	cmp	r1, #25
 800c5c8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800c5cc:	bf98      	it	ls
 800c5ce:	f102 0720 	addls.w	r7, r2, #32
 800c5d2:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800c5d6:	f1be 0f19 	cmp.w	lr, #25
 800c5da:	bf98      	it	ls
 800c5dc:	3120      	addls	r1, #32
 800c5de:	42b9      	cmp	r1, r7
 800c5e0:	d005      	beq.n	800c5ee <PixelType::GetMap(char const*)+0x42>
 800c5e2:	3001      	adds	r0, #1
 800c5e4:	2806      	cmp	r0, #6
 800c5e6:	f103 0304 	add.w	r3, r3, #4
 800c5ea:	d1e3      	bne.n	800c5b4 <PixelType::GetMap(char const*)+0x8>
 800c5ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5ee:	2a00      	cmp	r2, #0
 800c5f0:	d0fc      	beq.n	800c5ec <PixelType::GetMap(char const*)+0x40>
 800c5f2:	4564      	cmp	r4, ip
 800c5f4:	d1e2      	bne.n	800c5bc <PixelType::GetMap(char const*)+0x10>
 800c5f6:	e7f9      	b.n	800c5ec <PixelType::GetMap(char const*)+0x40>
 800c5f8:	0801506c 	stmdaeq	r1, {r2, r3, r5, r6, ip, lr}

0800c5fc <PixelType::GetMap(pixel::Map)>:
 800c5fc:	2805      	cmp	r0, #5
 800c5fe:	bfda      	itte	le
 800c600:	4b02      	ldrle	r3, [pc, #8]	; (800c60c <PixelType::GetMap(pixel::Map)+0x10>)
 800c602:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800c606:	4802      	ldrgt	r0, [pc, #8]	; (800c610 <PixelType::GetMap(pixel::Map)+0x14>)
 800c608:	4770      	bx	lr
 800c60a:	bf00      	nop
 800c60c:	0801506c 	stmdaeq	r1, {r2, r3, r5, r6, ip, lr}
 800c610:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}

0800c614 <PixelType::GetMap(pixel::Type)>:
 800c614:	3801      	subs	r0, #1
 800c616:	2809      	cmp	r0, #9
 800c618:	bf9a      	itte	ls
 800c61a:	4b02      	ldrls	r3, [pc, #8]	; (800c624 <PixelType::GetMap(pixel::Type)+0x10>)
 800c61c:	5618      	ldrsbls	r0, [r3, r0]
 800c61e:	2002      	movhi	r0, #2
 800c620:	4770      	bx	lr
 800c622:	bf00      	nop
 800c624:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

0800c628 <PixelType::ConvertTxH(unsigned char)>:
 800c628:	28f0      	cmp	r0, #240	; 0xf0
 800c62a:	d010      	beq.n	800c64e <PixelType::ConvertTxH(unsigned char)+0x26>
 800c62c:	d807      	bhi.n	800c63e <PixelType::ConvertTxH(unsigned char)+0x16>
 800c62e:	28c0      	cmp	r0, #192	; 0xc0
 800c630:	d00f      	beq.n	800c652 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800c632:	28e0      	cmp	r0, #224	; 0xe0
 800c634:	d00f      	beq.n	800c656 <PixelType::ConvertTxH(unsigned char)+0x2e>
 800c636:	2880      	cmp	r0, #128	; 0x80
 800c638:	d113      	bne.n	800c662 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800c63a:	480b      	ldr	r0, [pc, #44]	; (800c668 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800c63c:	4770      	bx	lr
 800c63e:	28fc      	cmp	r0, #252	; 0xfc
 800c640:	d00b      	beq.n	800c65a <PixelType::ConvertTxH(unsigned char)+0x32>
 800c642:	28fe      	cmp	r0, #254	; 0xfe
 800c644:	d00b      	beq.n	800c65e <PixelType::ConvertTxH(unsigned char)+0x36>
 800c646:	28f8      	cmp	r0, #248	; 0xf8
 800c648:	d10b      	bne.n	800c662 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800c64a:	4808      	ldr	r0, [pc, #32]	; (800c66c <PixelType::ConvertTxH(unsigned char)+0x44>)
 800c64c:	4770      	bx	lr
 800c64e:	4808      	ldr	r0, [pc, #32]	; (800c670 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800c650:	4770      	bx	lr
 800c652:	4808      	ldr	r0, [pc, #32]	; (800c674 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800c654:	4770      	bx	lr
 800c656:	4808      	ldr	r0, [pc, #32]	; (800c678 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800c658:	4770      	bx	lr
 800c65a:	4808      	ldr	r0, [pc, #32]	; (800c67c <PixelType::ConvertTxH(unsigned char)+0x54>)
 800c65c:	4770      	bx	lr
 800c65e:	4808      	ldr	r0, [pc, #32]	; (800c680 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800c660:	4770      	bx	lr
 800c662:	2000      	movs	r0, #0
 800c664:	4770      	bx	lr
 800c666:	bf00      	nop
 800c668:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800c66c:	3f480000 	svccc	0x00480000
 800c670:	3f200000 	svccc	0x00200000
 800c674:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800c678:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800c67c:	3f700000 	svccc	0x00700000
 800c680:	3f8c0000 	svccc	0x008c0000

0800c684 <PixelType::ConvertTxH(float)>:
 800c684:	b510      	push	{r4, lr}
 800c686:	491d      	ldr	r1, [pc, #116]	; (800c6fc <PixelType::ConvertTxH(float)+0x78>)
 800c688:	4604      	mov	r4, r0
 800c68a:	f7fb fbd7 	bl	8007e3c <__aeabi_fcmplt>
 800c68e:	bb30      	cbnz	r0, 800c6de <PixelType::ConvertTxH(float)+0x5a>
 800c690:	4620      	mov	r0, r4
 800c692:	491b      	ldr	r1, [pc, #108]	; (800c700 <PixelType::ConvertTxH(float)+0x7c>)
 800c694:	f7fb fbd2 	bl	8007e3c <__aeabi_fcmplt>
 800c698:	bb18      	cbnz	r0, 800c6e2 <PixelType::ConvertTxH(float)+0x5e>
 800c69a:	4620      	mov	r0, r4
 800c69c:	4919      	ldr	r1, [pc, #100]	; (800c704 <PixelType::ConvertTxH(float)+0x80>)
 800c69e:	f7fb fbcd 	bl	8007e3c <__aeabi_fcmplt>
 800c6a2:	bb00      	cbnz	r0, 800c6e6 <PixelType::ConvertTxH(float)+0x62>
 800c6a4:	4620      	mov	r0, r4
 800c6a6:	4918      	ldr	r1, [pc, #96]	; (800c708 <PixelType::ConvertTxH(float)+0x84>)
 800c6a8:	f7fb fbc8 	bl	8007e3c <__aeabi_fcmplt>
 800c6ac:	b9e8      	cbnz	r0, 800c6ea <PixelType::ConvertTxH(float)+0x66>
 800c6ae:	4620      	mov	r0, r4
 800c6b0:	4916      	ldr	r1, [pc, #88]	; (800c70c <PixelType::ConvertTxH(float)+0x88>)
 800c6b2:	f7fb fbc3 	bl	8007e3c <__aeabi_fcmplt>
 800c6b6:	b9d0      	cbnz	r0, 800c6ee <PixelType::ConvertTxH(float)+0x6a>
 800c6b8:	4620      	mov	r0, r4
 800c6ba:	4915      	ldr	r1, [pc, #84]	; (800c710 <PixelType::ConvertTxH(float)+0x8c>)
 800c6bc:	f7fb fbbe 	bl	8007e3c <__aeabi_fcmplt>
 800c6c0:	b9b8      	cbnz	r0, 800c6f2 <PixelType::ConvertTxH(float)+0x6e>
 800c6c2:	4620      	mov	r0, r4
 800c6c4:	4913      	ldr	r1, [pc, #76]	; (800c714 <PixelType::ConvertTxH(float)+0x90>)
 800c6c6:	f7fb fbb9 	bl	8007e3c <__aeabi_fcmplt>
 800c6ca:	b9a0      	cbnz	r0, 800c6f6 <PixelType::ConvertTxH(float)+0x72>
 800c6cc:	4620      	mov	r0, r4
 800c6ce:	4912      	ldr	r1, [pc, #72]	; (800c718 <PixelType::ConvertTxH(float)+0x94>)
 800c6d0:	f7fb fbb4 	bl	8007e3c <__aeabi_fcmplt>
 800c6d4:	2800      	cmp	r0, #0
 800c6d6:	bf14      	ite	ne
 800c6d8:	20fe      	movne	r0, #254	; 0xfe
 800c6da:	2000      	moveq	r0, #0
 800c6dc:	bd10      	pop	{r4, pc}
 800c6de:	2000      	movs	r0, #0
 800c6e0:	e7fc      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6e2:	2080      	movs	r0, #128	; 0x80
 800c6e4:	e7fa      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6e6:	20c0      	movs	r0, #192	; 0xc0
 800c6e8:	e7f8      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6ea:	20e0      	movs	r0, #224	; 0xe0
 800c6ec:	e7f6      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6ee:	20f0      	movs	r0, #240	; 0xf0
 800c6f0:	e7f4      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6f2:	20f8      	movs	r0, #248	; 0xf8
 800c6f4:	e7f2      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6f6:	20fc      	movs	r0, #252	; 0xfc
 800c6f8:	e7f0      	b.n	800c6dc <PixelType::ConvertTxH(float)+0x58>
 800c6fa:	bf00      	nop
 800c6fc:	3da00000 	stccc	0, cr0, [r0]
 800c700:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800c704:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800c708:	3f0c0000 	svccc	0x000c0000
 800c70c:	3f340000 	svccc	0x00340000
 800c710:	3f5c0000 	svccc	0x005c0000
 800c714:	3f820000 	svccc	0x00820000
 800c718:	3f960000 	svccc	0x00960000

0800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800c71c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c71e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800c722:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800c726:	b2cc      	uxtb	r4, r1
 800c728:	490e      	ldr	r1, [pc, #56]	; (800c764 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x48>)
 800c72a:	4605      	mov	r5, r0
 800c72c:	6808      	ldr	r0, [r1, #0]
 800c72e:	6801      	ldr	r1, [r0, #0]
 800c730:	2907      	cmp	r1, #7
 800c732:	d005      	beq.n	800c740 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800c734:	4629      	mov	r1, r5
 800c736:	9400      	str	r4, [sp, #0]
 800c738:	f000 fa7c 	bl	800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800c73c:	b003      	add	sp, #12
 800c73e:	bd30      	pop	{r4, r5, pc}
 800c740:	429a      	cmp	r2, r3
 800c742:	f04f 0100 	mov.w	r1, #0
 800c746:	d109      	bne.n	800c75c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800c748:	42a2      	cmp	r2, r4
 800c74a:	d107      	bne.n	800c75c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x40>
 800c74c:	e9cd 1200 	strd	r1, r2, [sp]
 800c750:	460b      	mov	r3, r1
 800c752:	460a      	mov	r2, r1
 800c754:	4629      	mov	r1, r5
 800c756:	f000 fe9f 	bl	800d498 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c75a:	e7ef      	b.n	800c73c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x20>
 800c75c:	e9cd 4100 	strd	r4, r1, [sp]
 800c760:	e7f8      	b.n	800c754 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x38>
 800c762:	bf00      	nop
 800c764:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800c768:	b538      	push	{r3, r4, r5, lr}
 800c76a:	2400      	movs	r4, #0
 800c76c:	4d05      	ldr	r5, [pc, #20]	; (800c784 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800c76e:	682b      	ldr	r3, [r5, #0]
 800c770:	429c      	cmp	r4, r3
 800c772:	d300      	bcc.n	800c776 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0xe>
 800c774:	bd38      	pop	{r3, r4, r5, pc}
 800c776:	4620      	mov	r0, r4
 800c778:	2100      	movs	r1, #0
 800c77a:	f7ff ffcf 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800c77e:	3401      	adds	r4, #1
 800c780:	e7f5      	b.n	800c76e <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800c782:	bf00      	nop
 800c784:	20000cec 	andcs	r0, r0, ip, ror #25

0800c788 <PixelPatterns::PixelPatterns(unsigned int)>:
 800c788:	2901      	cmp	r1, #1
 800c78a:	bf28      	it	cs
 800c78c:	2101      	movcs	r1, #1
 800c78e:	4b08      	ldr	r3, [pc, #32]	; (800c7b0 <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800c790:	4a08      	ldr	r2, [pc, #32]	; (800c7b4 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800c792:	681b      	ldr	r3, [r3, #0]
 800c794:	6013      	str	r3, [r2, #0]
 800c796:	4a08      	ldr	r2, [pc, #32]	; (800c7b8 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800c798:	6011      	str	r1, [r2, #0]
 800c79a:	685a      	ldr	r2, [r3, #4]
 800c79c:	4b07      	ldr	r3, [pc, #28]	; (800c7bc <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800c79e:	601a      	str	r2, [r3, #0]
 800c7a0:	2200      	movs	r2, #0
 800c7a2:	4b07      	ldr	r3, [pc, #28]	; (800c7c0 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800c7a4:	6819      	ldr	r1, [r3, #0]
 800c7a6:	4b07      	ldr	r3, [pc, #28]	; (800c7c4 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800c7a8:	61da      	str	r2, [r3, #28]
 800c7aa:	6019      	str	r1, [r3, #0]
 800c7ac:	619a      	str	r2, [r3, #24]
 800c7ae:	4770      	bx	lr
 800c7b0:	20000cfc 	strdcs	r0, [r0], -ip
 800c7b4:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800c7b8:	20000ce4 	andcs	r0, r0, r4, ror #25
 800c7bc:	20000cec 	andcs	r0, r0, ip, ror #25
 800c7c0:	20009cec 	andcs	r9, r0, ip, ror #25
 800c7c4:	20000cc4 	andcs	r0, r0, r4, asr #25

0800c7c8 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c7c8:	b570      	push	{r4, r5, r6, lr}
 800c7ca:	460e      	mov	r6, r1
 800c7cc:	4615      	mov	r5, r2
 800c7ce:	461c      	mov	r4, r3
 800c7d0:	f7ff ffca 	bl	800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c7d4:	2301      	movs	r3, #1
 800c7d6:	4905      	ldr	r1, [pc, #20]	; (800c7ec <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800c7d8:	22ff      	movs	r2, #255	; 0xff
 800c7da:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c7de:	61cb      	str	r3, [r1, #28]
 800c7e0:	2300      	movs	r3, #0
 800c7e2:	604d      	str	r5, [r1, #4]
 800c7e4:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800c7e8:	618c      	str	r4, [r1, #24]
 800c7ea:	bd70      	pop	{r4, r5, r6, pc}
 800c7ec:	20000cc4 	andcs	r0, r0, r4, asr #25

0800c7f0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c7f0:	b570      	push	{r4, r5, r6, lr}
 800c7f2:	460e      	mov	r6, r1
 800c7f4:	461c      	mov	r4, r3
 800c7f6:	4615      	mov	r5, r2
 800c7f8:	f7ff ffb6 	bl	800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c7fc:	2302      	movs	r3, #2
 800c7fe:	4908      	ldr	r1, [pc, #32]	; (800c820 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800c800:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c804:	61cb      	str	r3, [r1, #28]
 800c806:	9b04      	ldr	r3, [sp, #16]
 800c808:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800c80c:	604b      	str	r3, [r1, #4]
 800c80e:	4b05      	ldr	r3, [pc, #20]	; (800c824 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800c810:	681b      	ldr	r3, [r3, #0]
 800c812:	610b      	str	r3, [r1, #16]
 800c814:	2300      	movs	r3, #0
 800c816:	614b      	str	r3, [r1, #20]
 800c818:	9b05      	ldr	r3, [sp, #20]
 800c81a:	618b      	str	r3, [r1, #24]
 800c81c:	bd70      	pop	{r4, r5, r6, pc}
 800c81e:	bf00      	nop
 800c820:	20000cc4 	andcs	r0, r0, r4, asr #25
 800c824:	20000cec 	andcs	r0, r0, ip, ror #25

0800c828 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c828:	b570      	push	{r4, r5, r6, lr}
 800c82a:	460e      	mov	r6, r1
 800c82c:	461d      	mov	r5, r3
 800c82e:	4614      	mov	r4, r2
 800c830:	f7ff ff9a 	bl	800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c834:	2303      	movs	r3, #3
 800c836:	4907      	ldr	r1, [pc, #28]	; (800c854 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800c838:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c83c:	61cb      	str	r3, [r1, #28]
 800c83e:	4b06      	ldr	r3, [pc, #24]	; (800c858 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800c840:	604d      	str	r5, [r1, #4]
 800c842:	681b      	ldr	r3, [r3, #0]
 800c844:	608c      	str	r4, [r1, #8]
 800c846:	610b      	str	r3, [r1, #16]
 800c848:	2300      	movs	r3, #0
 800c84a:	614b      	str	r3, [r1, #20]
 800c84c:	9b04      	ldr	r3, [sp, #16]
 800c84e:	618b      	str	r3, [r1, #24]
 800c850:	bd70      	pop	{r4, r5, r6, pc}
 800c852:	bf00      	nop
 800c854:	20000cc4 	andcs	r0, r0, r4, asr #25
 800c858:	20000cec 	andcs	r0, r0, ip, ror #25

0800c85c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800c85c:	b570      	push	{r4, r5, r6, lr}
 800c85e:	460e      	mov	r6, r1
 800c860:	461d      	mov	r5, r3
 800c862:	4614      	mov	r4, r2
 800c864:	f7ff ff80 	bl	800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c868:	2304      	movs	r3, #4
 800c86a:	4912      	ldr	r1, [pc, #72]	; (800c8b4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800c86c:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c870:	604d      	str	r5, [r1, #4]
 800c872:	4d11      	ldr	r5, [pc, #68]	; (800c8b8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800c874:	61cb      	str	r3, [r1, #28]
 800c876:	6828      	ldr	r0, [r5, #0]
 800c878:	608c      	str	r4, [r1, #8]
 800c87a:	1e43      	subs	r3, r0, #1
 800c87c:	005b      	lsls	r3, r3, #1
 800c87e:	b29b      	uxth	r3, r3
 800c880:	610b      	str	r3, [r1, #16]
 800c882:	2300      	movs	r3, #0
 800c884:	4c0d      	ldr	r4, [pc, #52]	; (800c8bc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800c886:	614b      	str	r3, [r1, #20]
 800c888:	6823      	ldr	r3, [r4, #0]
 800c88a:	b97b      	cbnz	r3, 800c8ac <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x50>
 800c88c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800c890:	4298      	cmp	r0, r3
 800c892:	bf2c      	ite	cs
 800c894:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800c898:	0080      	lslcc	r0, r0, #2
 800c89a:	f004 fb53 	bl	8010f44 <operator new[](unsigned int)>
 800c89e:	2200      	movs	r2, #0
 800c8a0:	682b      	ldr	r3, [r5, #0]
 800c8a2:	6020      	str	r0, [r4, #0]
 800c8a4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c8a8:	4298      	cmp	r0, r3
 800c8aa:	d100      	bne.n	800c8ae <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800c8ac:	bd70      	pop	{r4, r5, r6, pc}
 800c8ae:	f840 2b04 	str.w	r2, [r0], #4
 800c8b2:	e7f9      	b.n	800c8a8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800c8b4:	20000cc4 	andcs	r0, r0, r4, asr #25
 800c8b8:	20000cec 	andcs	r0, r0, ip, ror #25
 800c8bc:	20000ce8 	andcs	r0, r0, r8, ror #25

0800c8c0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800c8c0:	b570      	push	{r4, r5, r6, lr}
 800c8c2:	460e      	mov	r6, r1
 800c8c4:	461c      	mov	r4, r3
 800c8c6:	4615      	mov	r5, r2
 800c8c8:	f7ff ff4e 	bl	800c768 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800c8cc:	2305      	movs	r3, #5
 800c8ce:	4907      	ldr	r1, [pc, #28]	; (800c8ec <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800c8d0:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800c8d4:	61cb      	str	r3, [r1, #28]
 800c8d6:	9b05      	ldr	r3, [sp, #20]
 800c8d8:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800c8dc:	604b      	str	r3, [r1, #4]
 800c8de:	9b04      	ldr	r3, [sp, #16]
 800c8e0:	610b      	str	r3, [r1, #16]
 800c8e2:	2300      	movs	r3, #0
 800c8e4:	614b      	str	r3, [r1, #20]
 800c8e6:	9b06      	ldr	r3, [sp, #24]
 800c8e8:	618b      	str	r3, [r1, #24]
 800c8ea:	bd70      	pop	{r4, r5, r6, pc}
 800c8ec:	20000cc4 	andcs	r0, r0, r4, asr #25

0800c8f0 <PixelPatterns::Wheel(unsigned char)>:
 800c8f0:	43cb      	mvns	r3, r1
 800c8f2:	b2db      	uxtb	r3, r3
 800c8f4:	2b54      	cmp	r3, #84	; 0x54
 800c8f6:	d809      	bhi.n	800c90c <PixelPatterns::Wheel(unsigned char)+0x1c>
 800c8f8:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800c8fc:	b2db      	uxtb	r3, r3
 800c8fe:	1e5a      	subs	r2, r3, #1
 800c900:	4258      	negs	r0, r3
 800c902:	b2d2      	uxtb	r2, r2
 800c904:	b2c0      	uxtb	r0, r0
 800c906:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800c90a:	4770      	bx	lr
 800c90c:	2ba9      	cmp	r3, #169	; 0xa9
 800c90e:	d809      	bhi.n	800c924 <PixelPatterns::Wheel(unsigned char)+0x34>
 800c910:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800c914:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800c918:	b2c9      	uxtb	r1, r1
 800c91a:	43c8      	mvns	r0, r1
 800c91c:	b2c0      	uxtb	r0, r0
 800c91e:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800c922:	4770      	bx	lr
 800c924:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800c928:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800c92c:	b2c9      	uxtb	r1, r1
 800c92e:	0208      	lsls	r0, r1, #8
 800c930:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800c934:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800c938:	4770      	bx	lr
	...

0800c93c <PixelPatterns::Increment(unsigned int)>:
 800c93c:	4a0d      	ldr	r2, [pc, #52]	; (800c974 <PixelPatterns::Increment(unsigned int)+0x38>)
 800c93e:	b510      	push	{r4, lr}
 800c940:	014c      	lsls	r4, r1, #5
 800c942:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800c946:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800c94a:	b930      	cbnz	r0, 800c95a <PixelPatterns::Increment(unsigned int)+0x1e>
 800c94c:	690a      	ldr	r2, [r1, #16]
 800c94e:	3301      	adds	r3, #1
 800c950:	4293      	cmp	r3, r2
 800c952:	bf18      	it	ne
 800c954:	4618      	movne	r0, r3
 800c956:	6148      	str	r0, [r1, #20]
 800c958:	bd10      	pop	{r4, pc}
 800c95a:	b92b      	cbnz	r3, 800c968 <PixelPatterns::Increment(unsigned int)+0x2c>
 800c95c:	4422      	add	r2, r4
 800c95e:	6913      	ldr	r3, [r2, #16]
 800c960:	3b01      	subs	r3, #1
 800c962:	b29b      	uxth	r3, r3
 800c964:	6153      	str	r3, [r2, #20]
 800c966:	e7f7      	b.n	800c958 <PixelPatterns::Increment(unsigned int)+0x1c>
 800c968:	3b01      	subs	r3, #1
 800c96a:	614b      	str	r3, [r1, #20]
 800c96c:	2b00      	cmp	r3, #0
 800c96e:	d1f3      	bne.n	800c958 <PixelPatterns::Increment(unsigned int)+0x1c>
 800c970:	e7f4      	b.n	800c95c <PixelPatterns::Increment(unsigned int)+0x20>
 800c972:	bf00      	nop
 800c974:	20000cc4 	andcs	r0, r0, r4, asr #25

0800c978 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800c978:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c97c:	4604      	mov	r4, r0
 800c97e:	460d      	mov	r5, r1
 800c980:	2700      	movs	r7, #0
 800c982:	4b10      	ldr	r3, [pc, #64]	; (800c9c4 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800c984:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800c9c8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800c988:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800c98c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800c990:	f8d8 2000 	ldr.w	r2, [r8]
 800c994:	b2be      	uxth	r6, r7
 800c996:	42b2      	cmp	r2, r6
 800c998:	f107 0701 	add.w	r7, r7, #1
 800c99c:	d805      	bhi.n	800c9aa <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800c99e:	4629      	mov	r1, r5
 800c9a0:	4620      	mov	r0, r4
 800c9a2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c9a6:	f7ff bfc9 	b.w	800c93c <PixelPatterns::Increment(unsigned int)>
 800c9aa:	0233      	lsls	r3, r6, #8
 800c9ac:	fbb3 f3f2 	udiv	r3, r3, r2
 800c9b0:	444b      	add	r3, r9
 800c9b2:	b2d9      	uxtb	r1, r3
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	f7ff ff9b 	bl	800c8f0 <PixelPatterns::Wheel(unsigned char)>
 800c9ba:	4601      	mov	r1, r0
 800c9bc:	4630      	mov	r0, r6
 800c9be:	f7ff fead 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800c9c2:	e7e5      	b.n	800c990 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800c9c4:	20000cc4 	andcs	r0, r0, r4, asr #25
 800c9c8:	20000cec 	andcs	r0, r0, ip, ror #25

0800c9cc <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800c9cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9d0:	4605      	mov	r5, r0
 800c9d2:	460c      	mov	r4, r1
 800c9d4:	f04f 0b00 	mov.w	fp, #0
 800c9d8:	4b11      	ldr	r3, [pc, #68]	; (800ca20 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800c9da:	4e12      	ldr	r6, [pc, #72]	; (800ca24 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800c9dc:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800c9e0:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800c9e4:	f8df a040 	ldr.w	sl, [pc, #64]	; 800ca28 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800c9e8:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800c9ec:	6833      	ldr	r3, [r6, #0]
 800c9ee:	fa1f f08b 	uxth.w	r0, fp
 800c9f2:	4283      	cmp	r3, r0
 800c9f4:	d805      	bhi.n	800ca02 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800c9f6:	4621      	mov	r1, r4
 800c9f8:	4628      	mov	r0, r5
 800c9fa:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9fe:	f7ff bf9d 	b.w	800c93c <PixelPatterns::Increment(unsigned int)>
 800ca02:	eb09 0300 	add.w	r3, r9, r0
 800ca06:	fb0a f303 	mul.w	r3, sl, r3
 800ca0a:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800ca0e:	bf94      	ite	ls
 800ca10:	4639      	movls	r1, r7
 800ca12:	4641      	movhi	r1, r8
 800ca14:	f7ff fe82 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ca18:	f10b 0b01 	add.w	fp, fp, #1
 800ca1c:	e7e6      	b.n	800c9ec <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800ca1e:	bf00      	nop
 800ca20:	20000cc4 	andcs	r0, r0, r4, asr #25
 800ca24:	20000cec 	andcs	r0, r0, ip, ror #25
 800ca28:	aaaaaaab 	bge	6ab74dc <__stack_size+0x6ab54dc>

0800ca2c <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800ca2c:	b538      	push	{r3, r4, r5, lr}
 800ca2e:	4605      	mov	r5, r0
 800ca30:	460c      	mov	r4, r1
 800ca32:	4b06      	ldr	r3, [pc, #24]	; (800ca4c <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800ca34:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ca38:	6899      	ldr	r1, [r3, #8]
 800ca3a:	6958      	ldr	r0, [r3, #20]
 800ca3c:	f7ff fe6e 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ca40:	4621      	mov	r1, r4
 800ca42:	4628      	mov	r0, r5
 800ca44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca48:	f7ff bf78 	b.w	800c93c <PixelPatterns::Increment(unsigned int)>
 800ca4c:	20000cc4 	andcs	r0, r0, r4, asr #25

0800ca50 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800ca50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca54:	460d      	mov	r5, r1
 800ca56:	f04f 0900 	mov.w	r9, #0
 800ca5a:	4a27      	ldr	r2, [pc, #156]	; (800caf8 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800ca5c:	b085      	sub	sp, #20
 800ca5e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800ca62:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800ca66:	f8d2 b008 	ldr.w	fp, [r2, #8]
 800ca6a:	00b3      	lsls	r3, r6, #2
 800ca6c:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800cafc <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800ca70:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800cb00 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800ca74:	9002      	str	r0, [sp, #8]
 800ca76:	9301      	str	r3, [sp, #4]
 800ca78:	1bbf      	subs	r7, r7, r6
 800ca7a:	f8da 1000 	ldr.w	r1, [sl]
 800ca7e:	fa1f f489 	uxth.w	r4, r9
 800ca82:	42a1      	cmp	r1, r4
 800ca84:	d806      	bhi.n	800ca94 <PixelPatterns::ScannerUpdate(unsigned int)+0x44>
 800ca86:	4629      	mov	r1, r5
 800ca88:	9802      	ldr	r0, [sp, #8]
 800ca8a:	b005      	add	sp, #20
 800ca8c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca90:	f7ff bf54 	b.w	800c93c <PixelPatterns::Increment(unsigned int)>
 800ca94:	42a6      	cmp	r6, r4
 800ca96:	d10b      	bne.n	800cab0 <PixelPatterns::ScannerUpdate(unsigned int)+0x60>
 800ca98:	4659      	mov	r1, fp
 800ca9a:	4630      	mov	r0, r6
 800ca9c:	f7ff fe3e 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800caa0:	f8d8 1000 	ldr.w	r1, [r8]
 800caa4:	9b01      	ldr	r3, [sp, #4]
 800caa6:	f841 b003 	str.w	fp, [r1, r3]
 800caaa:	f109 0901 	add.w	r9, r9, #1
 800caae:	e7e4      	b.n	800ca7a <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800cab0:	42a7      	cmp	r7, r4
 800cab2:	d108      	bne.n	800cac6 <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800cab4:	4659      	mov	r1, fp
 800cab6:	4638      	mov	r0, r7
 800cab8:	f7ff fe30 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800cabc:	f8d8 1000 	ldr.w	r1, [r8]
 800cac0:	f841 b024 	str.w	fp, [r1, r4, lsl #2]
 800cac4:	e7f1      	b.n	800caaa <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800cac6:	f8d8 1000 	ldr.w	r1, [r8]
 800caca:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800cace:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800cad2:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800cad6:	0209      	lsls	r1, r1, #8
 800cad8:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800cadc:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800cae0:	4301      	orrs	r1, r0
 800cae2:	4620      	mov	r0, r4
 800cae4:	9103      	str	r1, [sp, #12]
 800cae6:	f7ff fe19 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800caea:	f8d8 0000 	ldr.w	r0, [r8]
 800caee:	9903      	ldr	r1, [sp, #12]
 800caf0:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800caf4:	e7d9      	b.n	800caaa <PixelPatterns::ScannerUpdate(unsigned int)+0x5a>
 800caf6:	bf00      	nop
 800caf8:	20000cc4 	andcs	r0, r0, r4, asr #25
 800cafc:	20000cec 	andcs	r0, r0, ip, ror #25
 800cb00:	20000ce8 	andcs	r0, r0, r8, ror #25

0800cb04 <PixelPatterns::FadeUpdate(unsigned int)>:
 800cb04:	4a21      	ldr	r2, [pc, #132]	; (800cb8c <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800cb06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb0a:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800cb0e:	4605      	mov	r5, r0
 800cb10:	e9d2 0704 	ldrd	r0, r7, [r2, #16]
 800cb14:	460c      	mov	r4, r1
 800cb16:	e9d2 1302 	ldrd	r1, r3, [r2, #8]
 800cb1a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800cb1e:	437a      	muls	r2, r7
 800cb20:	1bc6      	subs	r6, r0, r7
 800cb22:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 800cb26:	fb06 220c 	mla	r2, r6, ip, r2
 800cb2a:	fbb2 f2f0 	udiv	r2, r2, r0
 800cb2e:	0212      	lsls	r2, r2, #8
 800cb30:	fa1f fc82 	uxth.w	ip, r2
 800cb34:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800cb38:	437a      	muls	r2, r7
 800cb3a:	b2db      	uxtb	r3, r3
 800cb3c:	437b      	muls	r3, r7
 800cb3e:	f3c1 4e07 	ubfx	lr, r1, #16, #8
 800cb42:	fb06 220e 	mla	r2, r6, lr, r2
 800cb46:	b2c9      	uxtb	r1, r1
 800cb48:	fb06 3301 	mla	r3, r6, r1, r3
 800cb4c:	fbb2 f2f0 	udiv	r2, r2, r0
 800cb50:	fbb3 f3f0 	udiv	r3, r3, r0
 800cb54:	2700      	movs	r7, #0
 800cb56:	0412      	lsls	r2, r2, #16
 800cb58:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800cb5c:	ea4c 0202 	orr.w	r2, ip, r2
 800cb60:	b2db      	uxtb	r3, r3
 800cb62:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800cb90 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800cb66:	ea42 0603 	orr.w	r6, r2, r3
 800cb6a:	f8d8 3000 	ldr.w	r3, [r8]
 800cb6e:	429f      	cmp	r7, r3
 800cb70:	d305      	bcc.n	800cb7e <PixelPatterns::FadeUpdate(unsigned int)+0x7a>
 800cb72:	4621      	mov	r1, r4
 800cb74:	4628      	mov	r0, r5
 800cb76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cb7a:	f7ff bedf 	b.w	800c93c <PixelPatterns::Increment(unsigned int)>
 800cb7e:	4638      	mov	r0, r7
 800cb80:	4631      	mov	r1, r6
 800cb82:	f7ff fdcb 	bl	800c71c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800cb86:	3701      	adds	r7, #1
 800cb88:	e7ef      	b.n	800cb6a <PixelPatterns::FadeUpdate(unsigned int)+0x66>
 800cb8a:	bf00      	nop
 800cb8c:	20000cc4 	andcs	r0, r0, r4, asr #25
 800cb90:	20000cec 	andcs	r0, r0, ip, ror #25

0800cb94 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800cb94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb96:	4b12      	ldr	r3, [pc, #72]	; (800cbe0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800cb98:	014e      	lsls	r6, r1, #5
 800cb9a:	599c      	ldr	r4, [r3, r6]
 800cb9c:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800cba0:	686f      	ldr	r7, [r5, #4]
 800cba2:	1b14      	subs	r4, r2, r4
 800cba4:	42bc      	cmp	r4, r7
 800cba6:	d319      	bcc.n	800cbdc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800cba8:	519a      	str	r2, [r3, r6]
 800cbaa:	69eb      	ldr	r3, [r5, #28]
 800cbac:	3b01      	subs	r3, #1
 800cbae:	2b04      	cmp	r3, #4
 800cbb0:	d814      	bhi.n	800cbdc <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800cbb2:	e8df f003 	tbb	[pc, r3]
 800cbb6:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800cbba:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800cbbe:	fedc 2001 	cdp2	0, 13, cr2, cr12, cr1, {0}
 800cbc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbc4:	f7ff ff02 	bl	800c9cc <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800cbc8:	e7fa      	b.n	800cbc0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbca:	f7ff ff2f 	bl	800ca2c <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800cbce:	e7f7      	b.n	800cbc0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbd0:	f7ff ff3e 	bl	800ca50 <PixelPatterns::ScannerUpdate(unsigned int)>
 800cbd4:	e7f4      	b.n	800cbc0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbd6:	f7ff ff95 	bl	800cb04 <PixelPatterns::FadeUpdate(unsigned int)>
 800cbda:	e7f1      	b.n	800cbc0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800cbdc:	2000      	movs	r0, #0
 800cbde:	e7f0      	b.n	800cbc2 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800cbe0:	20000cc4 	andcs	r0, r0, r4, asr #25

0800cbe4 <PixelPatterns::Run()>:
 800cbe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbe8:	4606      	mov	r6, r0
 800cbea:	f005 fafd 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800cbee:	4604      	mov	r4, r0
 800cbf0:	b9c0      	cbnz	r0, 800cc24 <PixelPatterns::Run()+0x40>
 800cbf2:	4605      	mov	r5, r0
 800cbf4:	4b0c      	ldr	r3, [pc, #48]	; (800cc28 <PixelPatterns::Run()+0x44>)
 800cbf6:	4f0d      	ldr	r7, [pc, #52]	; (800cc2c <PixelPatterns::Run()+0x48>)
 800cbf8:	f8d3 8000 	ldr.w	r8, [r3]
 800cbfc:	683b      	ldr	r3, [r7, #0]
 800cbfe:	b2e9      	uxtb	r1, r5
 800cc00:	428b      	cmp	r3, r1
 800cc02:	f105 0501 	add.w	r5, r5, #1
 800cc06:	d806      	bhi.n	800cc16 <PixelPatterns::Run()+0x32>
 800cc08:	b164      	cbz	r4, 800cc24 <PixelPatterns::Run()+0x40>
 800cc0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cc0e:	4b08      	ldr	r3, [pc, #32]	; (800cc30 <PixelPatterns::Run()+0x4c>)
 800cc10:	6818      	ldr	r0, [r3, #0]
 800cc12:	f000 bdb1 	b.w	800d778 <WS28xx::Update()>
 800cc16:	4642      	mov	r2, r8
 800cc18:	4630      	mov	r0, r6
 800cc1a:	f7ff ffbb 	bl	800cb94 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800cc1e:	4304      	orrs	r4, r0
 800cc20:	b2e4      	uxtb	r4, r4
 800cc22:	e7eb      	b.n	800cbfc <PixelPatterns::Run()+0x18>
 800cc24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc28:	20009cec 	andcs	r9, r0, ip, ror #25
 800cc2c:	20000ce4 	andcs	r0, r0, r4, ror #25
 800cc30:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800cc34:	b570      	push	{r4, r5, r6, lr}
 800cc36:	6984      	ldr	r4, [r0, #24]
 800cc38:	f89d e010 	ldrb.w	lr, [sp, #16]
 800cc3c:	f814 c003 	ldrb.w	ip, [r4, r3]
 800cc40:	7d43      	ldrb	r3, [r0, #21]
 800cc42:	5ca2      	ldrb	r2, [r4, r2]
 800cc44:	f814 e00e 	ldrb.w	lr, [r4, lr]
 800cc48:	b993      	cbnz	r3, 800cc70 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3c>
 800cc4a:	6803      	ldr	r3, [r0, #0]
 800cc4c:	f1a3 040b 	sub.w	r4, r3, #11
 800cc50:	2c01      	cmp	r4, #1
 800cc52:	d93e      	bls.n	800ccd2 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x9e>
 800cc54:	b9db      	cbnz	r3, 800cc8e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a>
 800cc56:	6a03      	ldr	r3, [r0, #32]
 800cc58:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800cc5c:	545a      	strb	r2, [r3, r1]
 800cc5e:	6a03      	ldr	r3, [r0, #32]
 800cc60:	440b      	add	r3, r1
 800cc62:	f883 c001 	strb.w	ip, [r3, #1]
 800cc66:	6a03      	ldr	r3, [r0, #32]
 800cc68:	440b      	add	r3, r1
 800cc6a:	f883 e002 	strb.w	lr, [r3, #2]
 800cc6e:	bd70      	pop	{r4, r5, r6, pc}
 800cc70:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800cc74:	00cb      	lsls	r3, r1, #3
 800cc76:	6881      	ldr	r1, [r0, #8]
 800cc78:	2905      	cmp	r1, #5
 800cc7a:	f200 80ff 	bhi.w	800ce7c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x248>
 800cc7e:	e8df f011 	tbh	[pc, r1, lsl #1]
 800cc82:	028400fd 	addeq	r0, r4, #253	; 0xfd
 800cc86:	038b030b 	orreq	r0, fp, #738197504	; 0x2c000000
 800cc8a:	01c1003c 	biceq	r0, r1, ip, lsr r0
 800cc8e:	ea6f 039e 	mvn.w	r3, lr, lsr #2
 800cc92:	ea6f 151c 	mvn.w	r5, ip, lsr #4
 800cc96:	f082 06c0 	eor.w	r6, r2, #192	; 0xc0
 800cc9a:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800cc9e:	ea43 1396 	orr.w	r3, r3, r6, lsr #6
 800cca2:	f005 050c 	and.w	r5, r5, #12
 800cca6:	6a04      	ldr	r4, [r0, #32]
 800cca8:	432b      	orrs	r3, r5
 800ccaa:	3101      	adds	r1, #1
 800ccac:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800ccb0:	f804 3021 	strb.w	r3, [r4, r1, lsl #2]
 800ccb4:	6a03      	ldr	r3, [r0, #32]
 800ccb6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccba:	f883 e001 	strb.w	lr, [r3, #1]
 800ccbe:	6a03      	ldr	r3, [r0, #32]
 800ccc0:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccc4:	f883 c002 	strb.w	ip, [r3, #2]
 800ccc8:	6a03      	ldr	r3, [r0, #32]
 800ccca:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccce:	70da      	strb	r2, [r3, #3]
 800ccd0:	bd70      	pop	{r4, r5, r6, pc}
 800ccd2:	6a03      	ldr	r3, [r0, #32]
 800ccd4:	7c84      	ldrb	r4, [r0, #18]
 800ccd6:	3101      	adds	r1, #1
 800ccd8:	f803 4021 	strb.w	r4, [r3, r1, lsl #2]
 800ccdc:	6a03      	ldr	r3, [r0, #32]
 800ccde:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800cce2:	705a      	strb	r2, [r3, #1]
 800cce4:	6a03      	ldr	r3, [r0, #32]
 800cce6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccea:	f883 c002 	strb.w	ip, [r3, #2]
 800ccee:	6a03      	ldr	r3, [r0, #32]
 800ccf0:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ccf4:	f883 e003 	strb.w	lr, [r3, #3]
 800ccf8:	bd70      	pop	{r4, r5, r6, pc}
 800ccfa:	7c01      	ldrb	r1, [r0, #16]
 800ccfc:	7c44      	ldrb	r4, [r0, #17]
 800ccfe:	6a05      	ldr	r5, [r0, #32]
 800cd00:	1c5e      	adds	r6, r3, #1
 800cd02:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800cd06:	bf0c      	ite	eq
 800cd08:	55a9      	strbeq	r1, [r5, r6]
 800cd0a:	55ac      	strbne	r4, [r5, r6]
 800cd0c:	6a05      	ldr	r5, [r0, #32]
 800cd0e:	1c9e      	adds	r6, r3, #2
 800cd10:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800cd14:	bf0c      	ite	eq
 800cd16:	55a9      	strbeq	r1, [r5, r6]
 800cd18:	55ac      	strbne	r4, [r5, r6]
 800cd1a:	6a05      	ldr	r5, [r0, #32]
 800cd1c:	1cde      	adds	r6, r3, #3
 800cd1e:	f01e 0f20 	tst.w	lr, #32
 800cd22:	bf0c      	ite	eq
 800cd24:	55a9      	strbeq	r1, [r5, r6]
 800cd26:	55ac      	strbne	r4, [r5, r6]
 800cd28:	6a05      	ldr	r5, [r0, #32]
 800cd2a:	1d1e      	adds	r6, r3, #4
 800cd2c:	f01e 0f10 	tst.w	lr, #16
 800cd30:	bf0c      	ite	eq
 800cd32:	55a9      	strbeq	r1, [r5, r6]
 800cd34:	55ac      	strbne	r4, [r5, r6]
 800cd36:	6a05      	ldr	r5, [r0, #32]
 800cd38:	1d5e      	adds	r6, r3, #5
 800cd3a:	f01e 0f08 	tst.w	lr, #8
 800cd3e:	bf0c      	ite	eq
 800cd40:	55a9      	strbeq	r1, [r5, r6]
 800cd42:	55ac      	strbne	r4, [r5, r6]
 800cd44:	6a05      	ldr	r5, [r0, #32]
 800cd46:	1d9e      	adds	r6, r3, #6
 800cd48:	f01e 0f04 	tst.w	lr, #4
 800cd4c:	bf0c      	ite	eq
 800cd4e:	55a9      	strbeq	r1, [r5, r6]
 800cd50:	55ac      	strbne	r4, [r5, r6]
 800cd52:	6a05      	ldr	r5, [r0, #32]
 800cd54:	1dde      	adds	r6, r3, #7
 800cd56:	f01e 0f02 	tst.w	lr, #2
 800cd5a:	bf0c      	ite	eq
 800cd5c:	55a9      	strbeq	r1, [r5, r6]
 800cd5e:	55ac      	strbne	r4, [r5, r6]
 800cd60:	f01e 0f01 	tst.w	lr, #1
 800cd64:	bf14      	ite	ne
 800cd66:	6a01      	ldrne	r1, [r0, #32]
 800cd68:	6a04      	ldreq	r4, [r0, #32]
 800cd6a:	f103 0508 	add.w	r5, r3, #8
 800cd6e:	bf14      	ite	ne
 800cd70:	554c      	strbne	r4, [r1, r5]
 800cd72:	5561      	strbeq	r1, [r4, r5]
 800cd74:	7c01      	ldrb	r1, [r0, #16]
 800cd76:	7c44      	ldrb	r4, [r0, #17]
 800cd78:	6a06      	ldr	r6, [r0, #32]
 800cd7a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800cd7e:	f103 0509 	add.w	r5, r3, #9
 800cd82:	bf0c      	ite	eq
 800cd84:	5571      	strbeq	r1, [r6, r5]
 800cd86:	5574      	strbne	r4, [r6, r5]
 800cd88:	6a06      	ldr	r6, [r0, #32]
 800cd8a:	f012 0f40 	tst.w	r2, #64	; 0x40
 800cd8e:	f103 050a 	add.w	r5, r3, #10
 800cd92:	bf0c      	ite	eq
 800cd94:	5571      	strbeq	r1, [r6, r5]
 800cd96:	5574      	strbne	r4, [r6, r5]
 800cd98:	6a06      	ldr	r6, [r0, #32]
 800cd9a:	f012 0f20 	tst.w	r2, #32
 800cd9e:	f103 050b 	add.w	r5, r3, #11
 800cda2:	bf0c      	ite	eq
 800cda4:	5571      	strbeq	r1, [r6, r5]
 800cda6:	5574      	strbne	r4, [r6, r5]
 800cda8:	6a06      	ldr	r6, [r0, #32]
 800cdaa:	f012 0f10 	tst.w	r2, #16
 800cdae:	f103 050c 	add.w	r5, r3, #12
 800cdb2:	bf0c      	ite	eq
 800cdb4:	5571      	strbeq	r1, [r6, r5]
 800cdb6:	5574      	strbne	r4, [r6, r5]
 800cdb8:	6a06      	ldr	r6, [r0, #32]
 800cdba:	f012 0f08 	tst.w	r2, #8
 800cdbe:	f103 050d 	add.w	r5, r3, #13
 800cdc2:	bf0c      	ite	eq
 800cdc4:	5571      	strbeq	r1, [r6, r5]
 800cdc6:	5574      	strbne	r4, [r6, r5]
 800cdc8:	6a06      	ldr	r6, [r0, #32]
 800cdca:	f012 0f04 	tst.w	r2, #4
 800cdce:	f103 050e 	add.w	r5, r3, #14
 800cdd2:	bf0c      	ite	eq
 800cdd4:	5571      	strbeq	r1, [r6, r5]
 800cdd6:	5574      	strbne	r4, [r6, r5]
 800cdd8:	6a06      	ldr	r6, [r0, #32]
 800cdda:	f012 0f02 	tst.w	r2, #2
 800cdde:	f103 050f 	add.w	r5, r3, #15
 800cde2:	bf0c      	ite	eq
 800cde4:	5571      	strbeq	r1, [r6, r5]
 800cde6:	5574      	strbne	r4, [r6, r5]
 800cde8:	f012 0f01 	tst.w	r2, #1
 800cdec:	6a02      	ldr	r2, [r0, #32]
 800cdee:	f103 0510 	add.w	r5, r3, #16
 800cdf2:	bf14      	ite	ne
 800cdf4:	5554      	strbne	r4, [r2, r5]
 800cdf6:	5551      	strbeq	r1, [r2, r5]
 800cdf8:	6a05      	ldr	r5, [r0, #32]
 800cdfa:	7c02      	ldrb	r2, [r0, #16]
 800cdfc:	7c41      	ldrb	r1, [r0, #17]
 800cdfe:	f103 0411 	add.w	r4, r3, #17
 800ce02:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ce06:	bf0c      	ite	eq
 800ce08:	552a      	strbeq	r2, [r5, r4]
 800ce0a:	5529      	strbne	r1, [r5, r4]
 800ce0c:	6a05      	ldr	r5, [r0, #32]
 800ce0e:	f103 0412 	add.w	r4, r3, #18
 800ce12:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ce16:	bf0c      	ite	eq
 800ce18:	552a      	strbeq	r2, [r5, r4]
 800ce1a:	5529      	strbne	r1, [r5, r4]
 800ce1c:	6a05      	ldr	r5, [r0, #32]
 800ce1e:	f103 0413 	add.w	r4, r3, #19
 800ce22:	f01c 0f20 	tst.w	ip, #32
 800ce26:	bf0c      	ite	eq
 800ce28:	552a      	strbeq	r2, [r5, r4]
 800ce2a:	5529      	strbne	r1, [r5, r4]
 800ce2c:	6a05      	ldr	r5, [r0, #32]
 800ce2e:	f103 0414 	add.w	r4, r3, #20
 800ce32:	f01c 0f10 	tst.w	ip, #16
 800ce36:	bf0c      	ite	eq
 800ce38:	552a      	strbeq	r2, [r5, r4]
 800ce3a:	5529      	strbne	r1, [r5, r4]
 800ce3c:	6a05      	ldr	r5, [r0, #32]
 800ce3e:	f103 0415 	add.w	r4, r3, #21
 800ce42:	f01c 0f08 	tst.w	ip, #8
 800ce46:	bf0c      	ite	eq
 800ce48:	552a      	strbeq	r2, [r5, r4]
 800ce4a:	5529      	strbne	r1, [r5, r4]
 800ce4c:	6a05      	ldr	r5, [r0, #32]
 800ce4e:	f103 0416 	add.w	r4, r3, #22
 800ce52:	f01c 0f04 	tst.w	ip, #4
 800ce56:	bf0c      	ite	eq
 800ce58:	552a      	strbeq	r2, [r5, r4]
 800ce5a:	5529      	strbne	r1, [r5, r4]
 800ce5c:	6a05      	ldr	r5, [r0, #32]
 800ce5e:	f103 0417 	add.w	r4, r3, #23
 800ce62:	f01c 0f02 	tst.w	ip, #2
 800ce66:	bf0c      	ite	eq
 800ce68:	552a      	strbeq	r2, [r5, r4]
 800ce6a:	5529      	strbne	r1, [r5, r4]
 800ce6c:	3318      	adds	r3, #24
 800ce6e:	f01c 0f01 	tst.w	ip, #1
 800ce72:	f000 830d 	beq.w	800d490 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x85c>
 800ce76:	6a02      	ldr	r2, [r0, #32]
 800ce78:	54d1      	strb	r1, [r2, r3]
 800ce7a:	bd70      	pop	{r4, r5, r6, pc}
 800ce7c:	7c01      	ldrb	r1, [r0, #16]
 800ce7e:	7c44      	ldrb	r4, [r0, #17]
 800ce80:	6a05      	ldr	r5, [r0, #32]
 800ce82:	f012 0f80 	tst.w	r2, #128	; 0x80
 800ce86:	f103 0601 	add.w	r6, r3, #1
 800ce8a:	bf14      	ite	ne
 800ce8c:	55ac      	strbne	r4, [r5, r6]
 800ce8e:	55a9      	strbeq	r1, [r5, r6]
 800ce90:	6a05      	ldr	r5, [r0, #32]
 800ce92:	f012 0f40 	tst.w	r2, #64	; 0x40
 800ce96:	f103 0602 	add.w	r6, r3, #2
 800ce9a:	bf14      	ite	ne
 800ce9c:	55ac      	strbne	r4, [r5, r6]
 800ce9e:	55a9      	strbeq	r1, [r5, r6]
 800cea0:	6a05      	ldr	r5, [r0, #32]
 800cea2:	f012 0f20 	tst.w	r2, #32
 800cea6:	f103 0603 	add.w	r6, r3, #3
 800ceaa:	bf14      	ite	ne
 800ceac:	55ac      	strbne	r4, [r5, r6]
 800ceae:	55a9      	strbeq	r1, [r5, r6]
 800ceb0:	6a05      	ldr	r5, [r0, #32]
 800ceb2:	f012 0f10 	tst.w	r2, #16
 800ceb6:	f103 0604 	add.w	r6, r3, #4
 800ceba:	bf14      	ite	ne
 800cebc:	55ac      	strbne	r4, [r5, r6]
 800cebe:	55a9      	strbeq	r1, [r5, r6]
 800cec0:	6a05      	ldr	r5, [r0, #32]
 800cec2:	f012 0f08 	tst.w	r2, #8
 800cec6:	f103 0605 	add.w	r6, r3, #5
 800ceca:	bf14      	ite	ne
 800cecc:	55ac      	strbne	r4, [r5, r6]
 800cece:	55a9      	strbeq	r1, [r5, r6]
 800ced0:	6a05      	ldr	r5, [r0, #32]
 800ced2:	f012 0f04 	tst.w	r2, #4
 800ced6:	f103 0606 	add.w	r6, r3, #6
 800ceda:	bf14      	ite	ne
 800cedc:	55ac      	strbne	r4, [r5, r6]
 800cede:	55a9      	strbeq	r1, [r5, r6]
 800cee0:	6a05      	ldr	r5, [r0, #32]
 800cee2:	f012 0f02 	tst.w	r2, #2
 800cee6:	f103 0607 	add.w	r6, r3, #7
 800ceea:	bf14      	ite	ne
 800ceec:	55ac      	strbne	r4, [r5, r6]
 800ceee:	55a9      	strbeq	r1, [r5, r6]
 800cef0:	f012 0f01 	tst.w	r2, #1
 800cef4:	6a02      	ldr	r2, [r0, #32]
 800cef6:	f103 0508 	add.w	r5, r3, #8
 800cefa:	bf14      	ite	ne
 800cefc:	5554      	strbne	r4, [r2, r5]
 800cefe:	5551      	strbeq	r1, [r2, r5]
 800cf00:	7c41      	ldrb	r1, [r0, #17]
 800cf02:	7c02      	ldrb	r2, [r0, #16]
 800cf04:	6a05      	ldr	r5, [r0, #32]
 800cf06:	f103 0409 	add.w	r4, r3, #9
 800cf0a:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cf0e:	bf0c      	ite	eq
 800cf10:	552a      	strbeq	r2, [r5, r4]
 800cf12:	5529      	strbne	r1, [r5, r4]
 800cf14:	6a05      	ldr	r5, [r0, #32]
 800cf16:	f103 040a 	add.w	r4, r3, #10
 800cf1a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800cf1e:	bf0c      	ite	eq
 800cf20:	552a      	strbeq	r2, [r5, r4]
 800cf22:	5529      	strbne	r1, [r5, r4]
 800cf24:	6a05      	ldr	r5, [r0, #32]
 800cf26:	f103 040b 	add.w	r4, r3, #11
 800cf2a:	f01c 0f20 	tst.w	ip, #32
 800cf2e:	bf0c      	ite	eq
 800cf30:	552a      	strbeq	r2, [r5, r4]
 800cf32:	5529      	strbne	r1, [r5, r4]
 800cf34:	6a05      	ldr	r5, [r0, #32]
 800cf36:	f103 040c 	add.w	r4, r3, #12
 800cf3a:	f01c 0f10 	tst.w	ip, #16
 800cf3e:	bf0c      	ite	eq
 800cf40:	552a      	strbeq	r2, [r5, r4]
 800cf42:	5529      	strbne	r1, [r5, r4]
 800cf44:	6a05      	ldr	r5, [r0, #32]
 800cf46:	f103 040d 	add.w	r4, r3, #13
 800cf4a:	f01c 0f08 	tst.w	ip, #8
 800cf4e:	bf0c      	ite	eq
 800cf50:	552a      	strbeq	r2, [r5, r4]
 800cf52:	5529      	strbne	r1, [r5, r4]
 800cf54:	6a05      	ldr	r5, [r0, #32]
 800cf56:	f103 040e 	add.w	r4, r3, #14
 800cf5a:	f01c 0f04 	tst.w	ip, #4
 800cf5e:	bf0c      	ite	eq
 800cf60:	552a      	strbeq	r2, [r5, r4]
 800cf62:	5529      	strbne	r1, [r5, r4]
 800cf64:	6a05      	ldr	r5, [r0, #32]
 800cf66:	f103 040f 	add.w	r4, r3, #15
 800cf6a:	f01c 0f02 	tst.w	ip, #2
 800cf6e:	bf0c      	ite	eq
 800cf70:	552a      	strbeq	r2, [r5, r4]
 800cf72:	5529      	strbne	r1, [r5, r4]
 800cf74:	f01c 0f01 	tst.w	ip, #1
 800cf78:	bf14      	ite	ne
 800cf7a:	6a02      	ldrne	r2, [r0, #32]
 800cf7c:	6a01      	ldreq	r1, [r0, #32]
 800cf7e:	f103 0410 	add.w	r4, r3, #16
 800cf82:	bf14      	ite	ne
 800cf84:	5511      	strbne	r1, [r2, r4]
 800cf86:	550a      	strbeq	r2, [r1, r4]
 800cf88:	6a05      	ldr	r5, [r0, #32]
 800cf8a:	7c02      	ldrb	r2, [r0, #16]
 800cf8c:	7c41      	ldrb	r1, [r0, #17]
 800cf8e:	f103 0411 	add.w	r4, r3, #17
 800cf92:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800cf96:	bf0c      	ite	eq
 800cf98:	552a      	strbeq	r2, [r5, r4]
 800cf9a:	5529      	strbne	r1, [r5, r4]
 800cf9c:	6a05      	ldr	r5, [r0, #32]
 800cf9e:	f103 0412 	add.w	r4, r3, #18
 800cfa2:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800cfa6:	bf0c      	ite	eq
 800cfa8:	552a      	strbeq	r2, [r5, r4]
 800cfaa:	5529      	strbne	r1, [r5, r4]
 800cfac:	6a05      	ldr	r5, [r0, #32]
 800cfae:	f103 0413 	add.w	r4, r3, #19
 800cfb2:	f01e 0f20 	tst.w	lr, #32
 800cfb6:	bf0c      	ite	eq
 800cfb8:	552a      	strbeq	r2, [r5, r4]
 800cfba:	5529      	strbne	r1, [r5, r4]
 800cfbc:	6a05      	ldr	r5, [r0, #32]
 800cfbe:	f103 0414 	add.w	r4, r3, #20
 800cfc2:	f01e 0f10 	tst.w	lr, #16
 800cfc6:	bf0c      	ite	eq
 800cfc8:	552a      	strbeq	r2, [r5, r4]
 800cfca:	5529      	strbne	r1, [r5, r4]
 800cfcc:	6a05      	ldr	r5, [r0, #32]
 800cfce:	f103 0415 	add.w	r4, r3, #21
 800cfd2:	f01e 0f08 	tst.w	lr, #8
 800cfd6:	bf0c      	ite	eq
 800cfd8:	552a      	strbeq	r2, [r5, r4]
 800cfda:	5529      	strbne	r1, [r5, r4]
 800cfdc:	6a05      	ldr	r5, [r0, #32]
 800cfde:	f103 0416 	add.w	r4, r3, #22
 800cfe2:	f01e 0f04 	tst.w	lr, #4
 800cfe6:	bf0c      	ite	eq
 800cfe8:	552a      	strbeq	r2, [r5, r4]
 800cfea:	5529      	strbne	r1, [r5, r4]
 800cfec:	6a05      	ldr	r5, [r0, #32]
 800cfee:	f103 0417 	add.w	r4, r3, #23
 800cff2:	f01e 0f02 	tst.w	lr, #2
 800cff6:	bf0c      	ite	eq
 800cff8:	552a      	strbeq	r2, [r5, r4]
 800cffa:	5529      	strbne	r1, [r5, r4]
 800cffc:	3318      	adds	r3, #24
 800cffe:	f01e 0f01 	tst.w	lr, #1
 800d002:	e736      	b.n	800ce72 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x23e>
 800d004:	7c01      	ldrb	r1, [r0, #16]
 800d006:	7c44      	ldrb	r4, [r0, #17]
 800d008:	6a05      	ldr	r5, [r0, #32]
 800d00a:	1c5e      	adds	r6, r3, #1
 800d00c:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d010:	bf0c      	ite	eq
 800d012:	55a9      	strbeq	r1, [r5, r6]
 800d014:	55ac      	strbne	r4, [r5, r6]
 800d016:	6a05      	ldr	r5, [r0, #32]
 800d018:	1c9e      	adds	r6, r3, #2
 800d01a:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d01e:	bf0c      	ite	eq
 800d020:	55a9      	strbeq	r1, [r5, r6]
 800d022:	55ac      	strbne	r4, [r5, r6]
 800d024:	6a05      	ldr	r5, [r0, #32]
 800d026:	1cde      	adds	r6, r3, #3
 800d028:	f01e 0f20 	tst.w	lr, #32
 800d02c:	bf0c      	ite	eq
 800d02e:	55a9      	strbeq	r1, [r5, r6]
 800d030:	55ac      	strbne	r4, [r5, r6]
 800d032:	6a05      	ldr	r5, [r0, #32]
 800d034:	1d1e      	adds	r6, r3, #4
 800d036:	f01e 0f10 	tst.w	lr, #16
 800d03a:	bf0c      	ite	eq
 800d03c:	55a9      	strbeq	r1, [r5, r6]
 800d03e:	55ac      	strbne	r4, [r5, r6]
 800d040:	6a05      	ldr	r5, [r0, #32]
 800d042:	1d5e      	adds	r6, r3, #5
 800d044:	f01e 0f08 	tst.w	lr, #8
 800d048:	bf0c      	ite	eq
 800d04a:	55a9      	strbeq	r1, [r5, r6]
 800d04c:	55ac      	strbne	r4, [r5, r6]
 800d04e:	6a05      	ldr	r5, [r0, #32]
 800d050:	1d9e      	adds	r6, r3, #6
 800d052:	f01e 0f04 	tst.w	lr, #4
 800d056:	bf0c      	ite	eq
 800d058:	55a9      	strbeq	r1, [r5, r6]
 800d05a:	55ac      	strbne	r4, [r5, r6]
 800d05c:	6a05      	ldr	r5, [r0, #32]
 800d05e:	1dde      	adds	r6, r3, #7
 800d060:	f01e 0f02 	tst.w	lr, #2
 800d064:	bf0c      	ite	eq
 800d066:	55a9      	strbeq	r1, [r5, r6]
 800d068:	55ac      	strbne	r4, [r5, r6]
 800d06a:	f01e 0f01 	tst.w	lr, #1
 800d06e:	bf14      	ite	ne
 800d070:	6a01      	ldrne	r1, [r0, #32]
 800d072:	6a04      	ldreq	r4, [r0, #32]
 800d074:	f103 0508 	add.w	r5, r3, #8
 800d078:	bf14      	ite	ne
 800d07a:	554c      	strbne	r4, [r1, r5]
 800d07c:	5561      	strbeq	r1, [r4, r5]
 800d07e:	7c01      	ldrb	r1, [r0, #16]
 800d080:	7c44      	ldrb	r4, [r0, #17]
 800d082:	6a06      	ldr	r6, [r0, #32]
 800d084:	f103 0509 	add.w	r5, r3, #9
 800d088:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d08c:	bf0c      	ite	eq
 800d08e:	5571      	strbeq	r1, [r6, r5]
 800d090:	5574      	strbne	r4, [r6, r5]
 800d092:	6a06      	ldr	r6, [r0, #32]
 800d094:	f103 050a 	add.w	r5, r3, #10
 800d098:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d09c:	bf0c      	ite	eq
 800d09e:	5571      	strbeq	r1, [r6, r5]
 800d0a0:	5574      	strbne	r4, [r6, r5]
 800d0a2:	6a06      	ldr	r6, [r0, #32]
 800d0a4:	f103 050b 	add.w	r5, r3, #11
 800d0a8:	f01c 0f20 	tst.w	ip, #32
 800d0ac:	bf0c      	ite	eq
 800d0ae:	5571      	strbeq	r1, [r6, r5]
 800d0b0:	5574      	strbne	r4, [r6, r5]
 800d0b2:	6a06      	ldr	r6, [r0, #32]
 800d0b4:	f103 050c 	add.w	r5, r3, #12
 800d0b8:	f01c 0f10 	tst.w	ip, #16
 800d0bc:	bf0c      	ite	eq
 800d0be:	5571      	strbeq	r1, [r6, r5]
 800d0c0:	5574      	strbne	r4, [r6, r5]
 800d0c2:	6a06      	ldr	r6, [r0, #32]
 800d0c4:	f103 050d 	add.w	r5, r3, #13
 800d0c8:	f01c 0f08 	tst.w	ip, #8
 800d0cc:	bf0c      	ite	eq
 800d0ce:	5571      	strbeq	r1, [r6, r5]
 800d0d0:	5574      	strbne	r4, [r6, r5]
 800d0d2:	6a06      	ldr	r6, [r0, #32]
 800d0d4:	f103 050e 	add.w	r5, r3, #14
 800d0d8:	f01c 0f04 	tst.w	ip, #4
 800d0dc:	bf0c      	ite	eq
 800d0de:	5571      	strbeq	r1, [r6, r5]
 800d0e0:	5574      	strbne	r4, [r6, r5]
 800d0e2:	6a06      	ldr	r6, [r0, #32]
 800d0e4:	f103 050f 	add.w	r5, r3, #15
 800d0e8:	f01c 0f02 	tst.w	ip, #2
 800d0ec:	bf0c      	ite	eq
 800d0ee:	5571      	strbeq	r1, [r6, r5]
 800d0f0:	5574      	strbne	r4, [r6, r5]
 800d0f2:	f103 0510 	add.w	r5, r3, #16
 800d0f6:	f01c 0f01 	tst.w	ip, #1
 800d0fa:	bf15      	itete	ne
 800d0fc:	6a01      	ldrne	r1, [r0, #32]
 800d0fe:	6a04      	ldreq	r4, [r0, #32]
 800d100:	554c      	strbne	r4, [r1, r5]
 800d102:	5561      	strbeq	r1, [r4, r5]
 800d104:	6a06      	ldr	r6, [r0, #32]
 800d106:	7c01      	ldrb	r1, [r0, #16]
 800d108:	7c44      	ldrb	r4, [r0, #17]
 800d10a:	f103 0511 	add.w	r5, r3, #17
 800d10e:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d112:	bf0c      	ite	eq
 800d114:	5571      	strbeq	r1, [r6, r5]
 800d116:	5574      	strbne	r4, [r6, r5]
 800d118:	6a06      	ldr	r6, [r0, #32]
 800d11a:	f103 0512 	add.w	r5, r3, #18
 800d11e:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d122:	bf0c      	ite	eq
 800d124:	5571      	strbeq	r1, [r6, r5]
 800d126:	5574      	strbne	r4, [r6, r5]
 800d128:	6a06      	ldr	r6, [r0, #32]
 800d12a:	f103 0513 	add.w	r5, r3, #19
 800d12e:	f012 0f20 	tst.w	r2, #32
 800d132:	bf0c      	ite	eq
 800d134:	5571      	strbeq	r1, [r6, r5]
 800d136:	5574      	strbne	r4, [r6, r5]
 800d138:	6a06      	ldr	r6, [r0, #32]
 800d13a:	f103 0514 	add.w	r5, r3, #20
 800d13e:	f012 0f10 	tst.w	r2, #16
 800d142:	bf0c      	ite	eq
 800d144:	5571      	strbeq	r1, [r6, r5]
 800d146:	5574      	strbne	r4, [r6, r5]
 800d148:	6a06      	ldr	r6, [r0, #32]
 800d14a:	f103 0515 	add.w	r5, r3, #21
 800d14e:	f012 0f08 	tst.w	r2, #8
 800d152:	bf0c      	ite	eq
 800d154:	5571      	strbeq	r1, [r6, r5]
 800d156:	5574      	strbne	r4, [r6, r5]
 800d158:	6a06      	ldr	r6, [r0, #32]
 800d15a:	f103 0516 	add.w	r5, r3, #22
 800d15e:	f012 0f04 	tst.w	r2, #4
 800d162:	bf0c      	ite	eq
 800d164:	5571      	strbeq	r1, [r6, r5]
 800d166:	5574      	strbne	r4, [r6, r5]
 800d168:	6a06      	ldr	r6, [r0, #32]
 800d16a:	f012 0f02 	tst.w	r2, #2
 800d16e:	f103 0517 	add.w	r5, r3, #23
 800d172:	bf0c      	ite	eq
 800d174:	5571      	strbeq	r1, [r6, r5]
 800d176:	5574      	strbne	r4, [r6, r5]
 800d178:	f012 0f01 	tst.w	r2, #1
 800d17c:	f103 0318 	add.w	r3, r3, #24
 800d180:	6a02      	ldr	r2, [r0, #32]
 800d182:	f43f ae79 	beq.w	800ce78 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x244>
 800d186:	54d4      	strb	r4, [r2, r3]
 800d188:	bd70      	pop	{r4, r5, r6, pc}
 800d18a:	7c01      	ldrb	r1, [r0, #16]
 800d18c:	7c44      	ldrb	r4, [r0, #17]
 800d18e:	6a05      	ldr	r5, [r0, #32]
 800d190:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d194:	f103 0601 	add.w	r6, r3, #1
 800d198:	bf14      	ite	ne
 800d19a:	55ac      	strbne	r4, [r5, r6]
 800d19c:	55a9      	strbeq	r1, [r5, r6]
 800d19e:	6a05      	ldr	r5, [r0, #32]
 800d1a0:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d1a4:	f103 0602 	add.w	r6, r3, #2
 800d1a8:	bf14      	ite	ne
 800d1aa:	55ac      	strbne	r4, [r5, r6]
 800d1ac:	55a9      	strbeq	r1, [r5, r6]
 800d1ae:	6a05      	ldr	r5, [r0, #32]
 800d1b0:	f012 0f20 	tst.w	r2, #32
 800d1b4:	f103 0603 	add.w	r6, r3, #3
 800d1b8:	bf14      	ite	ne
 800d1ba:	55ac      	strbne	r4, [r5, r6]
 800d1bc:	55a9      	strbeq	r1, [r5, r6]
 800d1be:	6a05      	ldr	r5, [r0, #32]
 800d1c0:	f012 0f10 	tst.w	r2, #16
 800d1c4:	f103 0604 	add.w	r6, r3, #4
 800d1c8:	bf14      	ite	ne
 800d1ca:	55ac      	strbne	r4, [r5, r6]
 800d1cc:	55a9      	strbeq	r1, [r5, r6]
 800d1ce:	6a05      	ldr	r5, [r0, #32]
 800d1d0:	f012 0f08 	tst.w	r2, #8
 800d1d4:	f103 0605 	add.w	r6, r3, #5
 800d1d8:	bf14      	ite	ne
 800d1da:	55ac      	strbne	r4, [r5, r6]
 800d1dc:	55a9      	strbeq	r1, [r5, r6]
 800d1de:	6a05      	ldr	r5, [r0, #32]
 800d1e0:	f012 0f04 	tst.w	r2, #4
 800d1e4:	f103 0606 	add.w	r6, r3, #6
 800d1e8:	bf14      	ite	ne
 800d1ea:	55ac      	strbne	r4, [r5, r6]
 800d1ec:	55a9      	strbeq	r1, [r5, r6]
 800d1ee:	6a05      	ldr	r5, [r0, #32]
 800d1f0:	f012 0f02 	tst.w	r2, #2
 800d1f4:	f103 0607 	add.w	r6, r3, #7
 800d1f8:	bf14      	ite	ne
 800d1fa:	55ac      	strbne	r4, [r5, r6]
 800d1fc:	55a9      	strbeq	r1, [r5, r6]
 800d1fe:	f012 0f01 	tst.w	r2, #1
 800d202:	6a02      	ldr	r2, [r0, #32]
 800d204:	f103 0508 	add.w	r5, r3, #8
 800d208:	bf14      	ite	ne
 800d20a:	5554      	strbne	r4, [r2, r5]
 800d20c:	5551      	strbeq	r1, [r2, r5]
 800d20e:	7c41      	ldrb	r1, [r0, #17]
 800d210:	7c02      	ldrb	r2, [r0, #16]
 800d212:	6a05      	ldr	r5, [r0, #32]
 800d214:	f103 0409 	add.w	r4, r3, #9
 800d218:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d21c:	bf0c      	ite	eq
 800d21e:	552a      	strbeq	r2, [r5, r4]
 800d220:	5529      	strbne	r1, [r5, r4]
 800d222:	6a05      	ldr	r5, [r0, #32]
 800d224:	f103 040a 	add.w	r4, r3, #10
 800d228:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d22c:	bf0c      	ite	eq
 800d22e:	552a      	strbeq	r2, [r5, r4]
 800d230:	5529      	strbne	r1, [r5, r4]
 800d232:	6a05      	ldr	r5, [r0, #32]
 800d234:	f103 040b 	add.w	r4, r3, #11
 800d238:	f01e 0f20 	tst.w	lr, #32
 800d23c:	bf0c      	ite	eq
 800d23e:	552a      	strbeq	r2, [r5, r4]
 800d240:	5529      	strbne	r1, [r5, r4]
 800d242:	6a05      	ldr	r5, [r0, #32]
 800d244:	f103 040c 	add.w	r4, r3, #12
 800d248:	f01e 0f10 	tst.w	lr, #16
 800d24c:	bf0c      	ite	eq
 800d24e:	552a      	strbeq	r2, [r5, r4]
 800d250:	5529      	strbne	r1, [r5, r4]
 800d252:	6a05      	ldr	r5, [r0, #32]
 800d254:	f103 040d 	add.w	r4, r3, #13
 800d258:	f01e 0f08 	tst.w	lr, #8
 800d25c:	bf0c      	ite	eq
 800d25e:	552a      	strbeq	r2, [r5, r4]
 800d260:	5529      	strbne	r1, [r5, r4]
 800d262:	6a05      	ldr	r5, [r0, #32]
 800d264:	f103 040e 	add.w	r4, r3, #14
 800d268:	f01e 0f04 	tst.w	lr, #4
 800d26c:	bf0c      	ite	eq
 800d26e:	552a      	strbeq	r2, [r5, r4]
 800d270:	5529      	strbne	r1, [r5, r4]
 800d272:	6a05      	ldr	r5, [r0, #32]
 800d274:	f103 040f 	add.w	r4, r3, #15
 800d278:	f01e 0f02 	tst.w	lr, #2
 800d27c:	bf0c      	ite	eq
 800d27e:	552a      	strbeq	r2, [r5, r4]
 800d280:	5529      	strbne	r1, [r5, r4]
 800d282:	f01e 0f01 	tst.w	lr, #1
 800d286:	bf14      	ite	ne
 800d288:	6a02      	ldrne	r2, [r0, #32]
 800d28a:	6a01      	ldreq	r1, [r0, #32]
 800d28c:	f103 0410 	add.w	r4, r3, #16
 800d290:	bf14      	ite	ne
 800d292:	5511      	strbne	r1, [r2, r4]
 800d294:	550a      	strbeq	r2, [r1, r4]
 800d296:	e5af      	b.n	800cdf8 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1c4>
 800d298:	7c01      	ldrb	r1, [r0, #16]
 800d29a:	7c44      	ldrb	r4, [r0, #17]
 800d29c:	6a05      	ldr	r5, [r0, #32]
 800d29e:	1c5e      	adds	r6, r3, #1
 800d2a0:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d2a4:	bf0c      	ite	eq
 800d2a6:	55a9      	strbeq	r1, [r5, r6]
 800d2a8:	55ac      	strbne	r4, [r5, r6]
 800d2aa:	6a05      	ldr	r5, [r0, #32]
 800d2ac:	1c9e      	adds	r6, r3, #2
 800d2ae:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d2b2:	bf0c      	ite	eq
 800d2b4:	55a9      	strbeq	r1, [r5, r6]
 800d2b6:	55ac      	strbne	r4, [r5, r6]
 800d2b8:	6a05      	ldr	r5, [r0, #32]
 800d2ba:	1cde      	adds	r6, r3, #3
 800d2bc:	f01c 0f20 	tst.w	ip, #32
 800d2c0:	bf0c      	ite	eq
 800d2c2:	55a9      	strbeq	r1, [r5, r6]
 800d2c4:	55ac      	strbne	r4, [r5, r6]
 800d2c6:	6a05      	ldr	r5, [r0, #32]
 800d2c8:	1d1e      	adds	r6, r3, #4
 800d2ca:	f01c 0f10 	tst.w	ip, #16
 800d2ce:	bf0c      	ite	eq
 800d2d0:	55a9      	strbeq	r1, [r5, r6]
 800d2d2:	55ac      	strbne	r4, [r5, r6]
 800d2d4:	6a05      	ldr	r5, [r0, #32]
 800d2d6:	1d5e      	adds	r6, r3, #5
 800d2d8:	f01c 0f08 	tst.w	ip, #8
 800d2dc:	bf0c      	ite	eq
 800d2de:	55a9      	strbeq	r1, [r5, r6]
 800d2e0:	55ac      	strbne	r4, [r5, r6]
 800d2e2:	6a05      	ldr	r5, [r0, #32]
 800d2e4:	1d9e      	adds	r6, r3, #6
 800d2e6:	f01c 0f04 	tst.w	ip, #4
 800d2ea:	bf0c      	ite	eq
 800d2ec:	55a9      	strbeq	r1, [r5, r6]
 800d2ee:	55ac      	strbne	r4, [r5, r6]
 800d2f0:	6a05      	ldr	r5, [r0, #32]
 800d2f2:	1dde      	adds	r6, r3, #7
 800d2f4:	f01c 0f02 	tst.w	ip, #2
 800d2f8:	bf0c      	ite	eq
 800d2fa:	55a9      	strbeq	r1, [r5, r6]
 800d2fc:	55ac      	strbne	r4, [r5, r6]
 800d2fe:	f01c 0f01 	tst.w	ip, #1
 800d302:	bf14      	ite	ne
 800d304:	6a01      	ldrne	r1, [r0, #32]
 800d306:	6a04      	ldreq	r4, [r0, #32]
 800d308:	f103 0508 	add.w	r5, r3, #8
 800d30c:	bf14      	ite	ne
 800d30e:	554c      	strbne	r4, [r1, r5]
 800d310:	5561      	strbeq	r1, [r4, r5]
 800d312:	7c01      	ldrb	r1, [r0, #16]
 800d314:	7c44      	ldrb	r4, [r0, #17]
 800d316:	6a06      	ldr	r6, [r0, #32]
 800d318:	f012 0f80 	tst.w	r2, #128	; 0x80
 800d31c:	f103 0509 	add.w	r5, r3, #9
 800d320:	bf0c      	ite	eq
 800d322:	5571      	strbeq	r1, [r6, r5]
 800d324:	5574      	strbne	r4, [r6, r5]
 800d326:	6a06      	ldr	r6, [r0, #32]
 800d328:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d32c:	f103 050a 	add.w	r5, r3, #10
 800d330:	bf0c      	ite	eq
 800d332:	5571      	strbeq	r1, [r6, r5]
 800d334:	5574      	strbne	r4, [r6, r5]
 800d336:	6a06      	ldr	r6, [r0, #32]
 800d338:	f012 0f20 	tst.w	r2, #32
 800d33c:	f103 050b 	add.w	r5, r3, #11
 800d340:	bf0c      	ite	eq
 800d342:	5571      	strbeq	r1, [r6, r5]
 800d344:	5574      	strbne	r4, [r6, r5]
 800d346:	6a06      	ldr	r6, [r0, #32]
 800d348:	f012 0f10 	tst.w	r2, #16
 800d34c:	f103 050c 	add.w	r5, r3, #12
 800d350:	bf0c      	ite	eq
 800d352:	5571      	strbeq	r1, [r6, r5]
 800d354:	5574      	strbne	r4, [r6, r5]
 800d356:	6a06      	ldr	r6, [r0, #32]
 800d358:	f012 0f08 	tst.w	r2, #8
 800d35c:	f103 050d 	add.w	r5, r3, #13
 800d360:	bf0c      	ite	eq
 800d362:	5571      	strbeq	r1, [r6, r5]
 800d364:	5574      	strbne	r4, [r6, r5]
 800d366:	6a06      	ldr	r6, [r0, #32]
 800d368:	f012 0f04 	tst.w	r2, #4
 800d36c:	f103 050e 	add.w	r5, r3, #14
 800d370:	bf0c      	ite	eq
 800d372:	5571      	strbeq	r1, [r6, r5]
 800d374:	5574      	strbne	r4, [r6, r5]
 800d376:	6a06      	ldr	r6, [r0, #32]
 800d378:	f012 0f02 	tst.w	r2, #2
 800d37c:	f103 050f 	add.w	r5, r3, #15
 800d380:	bf0c      	ite	eq
 800d382:	5571      	strbeq	r1, [r6, r5]
 800d384:	5574      	strbne	r4, [r6, r5]
 800d386:	f012 0f01 	tst.w	r2, #1
 800d38a:	6a02      	ldr	r2, [r0, #32]
 800d38c:	f103 0510 	add.w	r5, r3, #16
 800d390:	bf14      	ite	ne
 800d392:	5554      	strbne	r4, [r2, r5]
 800d394:	5551      	strbeq	r1, [r2, r5]
 800d396:	e5f7      	b.n	800cf88 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x354>
 800d398:	7c01      	ldrb	r1, [r0, #16]
 800d39a:	7c44      	ldrb	r4, [r0, #17]
 800d39c:	6a05      	ldr	r5, [r0, #32]
 800d39e:	1c5e      	adds	r6, r3, #1
 800d3a0:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d3a4:	bf0c      	ite	eq
 800d3a6:	55a9      	strbeq	r1, [r5, r6]
 800d3a8:	55ac      	strbne	r4, [r5, r6]
 800d3aa:	6a05      	ldr	r5, [r0, #32]
 800d3ac:	1c9e      	adds	r6, r3, #2
 800d3ae:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d3b2:	bf0c      	ite	eq
 800d3b4:	55a9      	strbeq	r1, [r5, r6]
 800d3b6:	55ac      	strbne	r4, [r5, r6]
 800d3b8:	6a05      	ldr	r5, [r0, #32]
 800d3ba:	1cde      	adds	r6, r3, #3
 800d3bc:	f01c 0f20 	tst.w	ip, #32
 800d3c0:	bf0c      	ite	eq
 800d3c2:	55a9      	strbeq	r1, [r5, r6]
 800d3c4:	55ac      	strbne	r4, [r5, r6]
 800d3c6:	6a05      	ldr	r5, [r0, #32]
 800d3c8:	1d1e      	adds	r6, r3, #4
 800d3ca:	f01c 0f10 	tst.w	ip, #16
 800d3ce:	bf0c      	ite	eq
 800d3d0:	55a9      	strbeq	r1, [r5, r6]
 800d3d2:	55ac      	strbne	r4, [r5, r6]
 800d3d4:	6a05      	ldr	r5, [r0, #32]
 800d3d6:	1d5e      	adds	r6, r3, #5
 800d3d8:	f01c 0f08 	tst.w	ip, #8
 800d3dc:	bf0c      	ite	eq
 800d3de:	55a9      	strbeq	r1, [r5, r6]
 800d3e0:	55ac      	strbne	r4, [r5, r6]
 800d3e2:	6a05      	ldr	r5, [r0, #32]
 800d3e4:	1d9e      	adds	r6, r3, #6
 800d3e6:	f01c 0f04 	tst.w	ip, #4
 800d3ea:	bf0c      	ite	eq
 800d3ec:	55a9      	strbeq	r1, [r5, r6]
 800d3ee:	55ac      	strbne	r4, [r5, r6]
 800d3f0:	6a05      	ldr	r5, [r0, #32]
 800d3f2:	1dde      	adds	r6, r3, #7
 800d3f4:	f01c 0f02 	tst.w	ip, #2
 800d3f8:	bf0c      	ite	eq
 800d3fa:	55a9      	strbeq	r1, [r5, r6]
 800d3fc:	55ac      	strbne	r4, [r5, r6]
 800d3fe:	f01c 0f01 	tst.w	ip, #1
 800d402:	bf14      	ite	ne
 800d404:	6a01      	ldrne	r1, [r0, #32]
 800d406:	6a04      	ldreq	r4, [r0, #32]
 800d408:	f103 0508 	add.w	r5, r3, #8
 800d40c:	bf14      	ite	ne
 800d40e:	554c      	strbne	r4, [r1, r5]
 800d410:	5561      	strbeq	r1, [r4, r5]
 800d412:	7c01      	ldrb	r1, [r0, #16]
 800d414:	7c44      	ldrb	r4, [r0, #17]
 800d416:	6a06      	ldr	r6, [r0, #32]
 800d418:	f103 0509 	add.w	r5, r3, #9
 800d41c:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d420:	bf0c      	ite	eq
 800d422:	5571      	strbeq	r1, [r6, r5]
 800d424:	5574      	strbne	r4, [r6, r5]
 800d426:	6a06      	ldr	r6, [r0, #32]
 800d428:	f103 050a 	add.w	r5, r3, #10
 800d42c:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d430:	bf0c      	ite	eq
 800d432:	5571      	strbeq	r1, [r6, r5]
 800d434:	5574      	strbne	r4, [r6, r5]
 800d436:	6a06      	ldr	r6, [r0, #32]
 800d438:	f103 050b 	add.w	r5, r3, #11
 800d43c:	f01e 0f20 	tst.w	lr, #32
 800d440:	bf0c      	ite	eq
 800d442:	5571      	strbeq	r1, [r6, r5]
 800d444:	5574      	strbne	r4, [r6, r5]
 800d446:	6a06      	ldr	r6, [r0, #32]
 800d448:	f103 050c 	add.w	r5, r3, #12
 800d44c:	f01e 0f10 	tst.w	lr, #16
 800d450:	bf0c      	ite	eq
 800d452:	5571      	strbeq	r1, [r6, r5]
 800d454:	5574      	strbne	r4, [r6, r5]
 800d456:	6a06      	ldr	r6, [r0, #32]
 800d458:	f103 050d 	add.w	r5, r3, #13
 800d45c:	f01e 0f08 	tst.w	lr, #8
 800d460:	bf0c      	ite	eq
 800d462:	5571      	strbeq	r1, [r6, r5]
 800d464:	5574      	strbne	r4, [r6, r5]
 800d466:	6a06      	ldr	r6, [r0, #32]
 800d468:	f103 050e 	add.w	r5, r3, #14
 800d46c:	f01e 0f04 	tst.w	lr, #4
 800d470:	bf0c      	ite	eq
 800d472:	5571      	strbeq	r1, [r6, r5]
 800d474:	5574      	strbne	r4, [r6, r5]
 800d476:	6a06      	ldr	r6, [r0, #32]
 800d478:	f103 050f 	add.w	r5, r3, #15
 800d47c:	f01e 0f02 	tst.w	lr, #2
 800d480:	bf0c      	ite	eq
 800d482:	5571      	strbeq	r1, [r6, r5]
 800d484:	5574      	strbne	r4, [r6, r5]
 800d486:	f103 0510 	add.w	r5, r3, #16
 800d48a:	f01e 0f01 	tst.w	lr, #1
 800d48e:	e634      	b.n	800d0fa <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4c6>
 800d490:	6a01      	ldr	r1, [r0, #32]
 800d492:	54ca      	strb	r2, [r1, r3]
 800d494:	bd70      	pop	{r4, r5, r6, pc}
 800d496:	bf00      	nop

0800d498 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800d498:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d49a:	6984      	ldr	r4, [r0, #24]
 800d49c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800d4a0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800d4a4:	f814 c006 	ldrb.w	ip, [r4, r6]
 800d4a8:	56e6      	ldrsb	r6, [r4, r3]
 800d4aa:	0149      	lsls	r1, r1, #5
 800d4ac:	f814 e002 	ldrb.w	lr, [r4, r2]
 800d4b0:	5ce3      	ldrb	r3, [r4, r3]
 800d4b2:	5d62      	ldrb	r2, [r4, r5]
 800d4b4:	2e00      	cmp	r6, #0
 800d4b6:	7c05      	ldrb	r5, [r0, #16]
 800d4b8:	7c44      	ldrb	r4, [r0, #17]
 800d4ba:	6a06      	ldr	r6, [r0, #32]
 800d4bc:	f101 0701 	add.w	r7, r1, #1
 800d4c0:	bfac      	ite	ge
 800d4c2:	55f5      	strbge	r5, [r6, r7]
 800d4c4:	55f4      	strblt	r4, [r6, r7]
 800d4c6:	6a07      	ldr	r7, [r0, #32]
 800d4c8:	1c8e      	adds	r6, r1, #2
 800d4ca:	f013 0f40 	tst.w	r3, #64	; 0x40
 800d4ce:	bf0c      	ite	eq
 800d4d0:	55bd      	strbeq	r5, [r7, r6]
 800d4d2:	55bc      	strbne	r4, [r7, r6]
 800d4d4:	6a07      	ldr	r7, [r0, #32]
 800d4d6:	1cce      	adds	r6, r1, #3
 800d4d8:	f013 0f20 	tst.w	r3, #32
 800d4dc:	bf0c      	ite	eq
 800d4de:	55bd      	strbeq	r5, [r7, r6]
 800d4e0:	55bc      	strbne	r4, [r7, r6]
 800d4e2:	6a07      	ldr	r7, [r0, #32]
 800d4e4:	1d0e      	adds	r6, r1, #4
 800d4e6:	f013 0f10 	tst.w	r3, #16
 800d4ea:	bf0c      	ite	eq
 800d4ec:	55bd      	strbeq	r5, [r7, r6]
 800d4ee:	55bc      	strbne	r4, [r7, r6]
 800d4f0:	6a07      	ldr	r7, [r0, #32]
 800d4f2:	1d4e      	adds	r6, r1, #5
 800d4f4:	f013 0f08 	tst.w	r3, #8
 800d4f8:	bf0c      	ite	eq
 800d4fa:	55bd      	strbeq	r5, [r7, r6]
 800d4fc:	55bc      	strbne	r4, [r7, r6]
 800d4fe:	6a07      	ldr	r7, [r0, #32]
 800d500:	1d8e      	adds	r6, r1, #6
 800d502:	f013 0f04 	tst.w	r3, #4
 800d506:	bf0c      	ite	eq
 800d508:	55bd      	strbeq	r5, [r7, r6]
 800d50a:	55bc      	strbne	r4, [r7, r6]
 800d50c:	6a07      	ldr	r7, [r0, #32]
 800d50e:	1dce      	adds	r6, r1, #7
 800d510:	f013 0f02 	tst.w	r3, #2
 800d514:	bf0c      	ite	eq
 800d516:	55bd      	strbeq	r5, [r7, r6]
 800d518:	55bc      	strbne	r4, [r7, r6]
 800d51a:	f013 0f01 	tst.w	r3, #1
 800d51e:	6a03      	ldr	r3, [r0, #32]
 800d520:	f101 0608 	add.w	r6, r1, #8
 800d524:	bf14      	ite	ne
 800d526:	559c      	strbne	r4, [r3, r6]
 800d528:	559d      	strbeq	r5, [r3, r6]
 800d52a:	7c03      	ldrb	r3, [r0, #16]
 800d52c:	7c44      	ldrb	r4, [r0, #17]
 800d52e:	6a05      	ldr	r5, [r0, #32]
 800d530:	f101 0609 	add.w	r6, r1, #9
 800d534:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800d538:	bf0c      	ite	eq
 800d53a:	55ab      	strbeq	r3, [r5, r6]
 800d53c:	55ac      	strbne	r4, [r5, r6]
 800d53e:	6a05      	ldr	r5, [r0, #32]
 800d540:	f101 060a 	add.w	r6, r1, #10
 800d544:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800d548:	bf0c      	ite	eq
 800d54a:	55ab      	strbeq	r3, [r5, r6]
 800d54c:	55ac      	strbne	r4, [r5, r6]
 800d54e:	6a05      	ldr	r5, [r0, #32]
 800d550:	f101 060b 	add.w	r6, r1, #11
 800d554:	f01e 0f20 	tst.w	lr, #32
 800d558:	bf0c      	ite	eq
 800d55a:	55ab      	strbeq	r3, [r5, r6]
 800d55c:	55ac      	strbne	r4, [r5, r6]
 800d55e:	6a05      	ldr	r5, [r0, #32]
 800d560:	f101 060c 	add.w	r6, r1, #12
 800d564:	f01e 0f10 	tst.w	lr, #16
 800d568:	bf0c      	ite	eq
 800d56a:	55ab      	strbeq	r3, [r5, r6]
 800d56c:	55ac      	strbne	r4, [r5, r6]
 800d56e:	6a05      	ldr	r5, [r0, #32]
 800d570:	f101 060d 	add.w	r6, r1, #13
 800d574:	f01e 0f08 	tst.w	lr, #8
 800d578:	bf0c      	ite	eq
 800d57a:	55ab      	strbeq	r3, [r5, r6]
 800d57c:	55ac      	strbne	r4, [r5, r6]
 800d57e:	6a05      	ldr	r5, [r0, #32]
 800d580:	f101 060e 	add.w	r6, r1, #14
 800d584:	f01e 0f04 	tst.w	lr, #4
 800d588:	bf0c      	ite	eq
 800d58a:	55ab      	strbeq	r3, [r5, r6]
 800d58c:	55ac      	strbne	r4, [r5, r6]
 800d58e:	6a05      	ldr	r5, [r0, #32]
 800d590:	f101 060f 	add.w	r6, r1, #15
 800d594:	f01e 0f02 	tst.w	lr, #2
 800d598:	bf0c      	ite	eq
 800d59a:	55ab      	strbeq	r3, [r5, r6]
 800d59c:	55ac      	strbne	r4, [r5, r6]
 800d59e:	f01e 0f01 	tst.w	lr, #1
 800d5a2:	bf14      	ite	ne
 800d5a4:	6a03      	ldrne	r3, [r0, #32]
 800d5a6:	6a04      	ldreq	r4, [r0, #32]
 800d5a8:	f101 0510 	add.w	r5, r1, #16
 800d5ac:	bf14      	ite	ne
 800d5ae:	555c      	strbne	r4, [r3, r5]
 800d5b0:	5563      	strbeq	r3, [r4, r5]
 800d5b2:	7c03      	ldrb	r3, [r0, #16]
 800d5b4:	7c44      	ldrb	r4, [r0, #17]
 800d5b6:	6a06      	ldr	r6, [r0, #32]
 800d5b8:	f101 0511 	add.w	r5, r1, #17
 800d5bc:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800d5c0:	bf0c      	ite	eq
 800d5c2:	5573      	strbeq	r3, [r6, r5]
 800d5c4:	5574      	strbne	r4, [r6, r5]
 800d5c6:	6a06      	ldr	r6, [r0, #32]
 800d5c8:	f101 0512 	add.w	r5, r1, #18
 800d5cc:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d5d0:	bf0c      	ite	eq
 800d5d2:	5573      	strbeq	r3, [r6, r5]
 800d5d4:	5574      	strbne	r4, [r6, r5]
 800d5d6:	6a06      	ldr	r6, [r0, #32]
 800d5d8:	f101 0513 	add.w	r5, r1, #19
 800d5dc:	f01c 0f20 	tst.w	ip, #32
 800d5e0:	bf0c      	ite	eq
 800d5e2:	5573      	strbeq	r3, [r6, r5]
 800d5e4:	5574      	strbne	r4, [r6, r5]
 800d5e6:	6a06      	ldr	r6, [r0, #32]
 800d5e8:	f101 0514 	add.w	r5, r1, #20
 800d5ec:	f01c 0f10 	tst.w	ip, #16
 800d5f0:	bf0c      	ite	eq
 800d5f2:	5573      	strbeq	r3, [r6, r5]
 800d5f4:	5574      	strbne	r4, [r6, r5]
 800d5f6:	6a06      	ldr	r6, [r0, #32]
 800d5f8:	f101 0515 	add.w	r5, r1, #21
 800d5fc:	f01c 0f08 	tst.w	ip, #8
 800d600:	bf0c      	ite	eq
 800d602:	5573      	strbeq	r3, [r6, r5]
 800d604:	5574      	strbne	r4, [r6, r5]
 800d606:	6a06      	ldr	r6, [r0, #32]
 800d608:	f101 0516 	add.w	r5, r1, #22
 800d60c:	f01c 0f04 	tst.w	ip, #4
 800d610:	bf0c      	ite	eq
 800d612:	5573      	strbeq	r3, [r6, r5]
 800d614:	5574      	strbne	r4, [r6, r5]
 800d616:	6a06      	ldr	r6, [r0, #32]
 800d618:	f101 0517 	add.w	r5, r1, #23
 800d61c:	f01c 0f02 	tst.w	ip, #2
 800d620:	bf0c      	ite	eq
 800d622:	5573      	strbeq	r3, [r6, r5]
 800d624:	5574      	strbne	r4, [r6, r5]
 800d626:	f01c 0f01 	tst.w	ip, #1
 800d62a:	bf14      	ite	ne
 800d62c:	6a03      	ldrne	r3, [r0, #32]
 800d62e:	6a04      	ldreq	r4, [r0, #32]
 800d630:	f101 0518 	add.w	r5, r1, #24
 800d634:	bf14      	ite	ne
 800d636:	555c      	strbne	r4, [r3, r5]
 800d638:	5563      	strbeq	r3, [r4, r5]
 800d63a:	7c03      	ldrb	r3, [r0, #16]
 800d63c:	7c44      	ldrb	r4, [r0, #17]
 800d63e:	6a06      	ldr	r6, [r0, #32]
 800d640:	0617      	lsls	r7, r2, #24
 800d642:	f101 0519 	add.w	r5, r1, #25
 800d646:	bf54      	ite	pl
 800d648:	5573      	strbpl	r3, [r6, r5]
 800d64a:	5574      	strbmi	r4, [r6, r5]
 800d64c:	6a06      	ldr	r6, [r0, #32]
 800d64e:	0657      	lsls	r7, r2, #25
 800d650:	f101 051a 	add.w	r5, r1, #26
 800d654:	bf54      	ite	pl
 800d656:	5573      	strbpl	r3, [r6, r5]
 800d658:	5574      	strbmi	r4, [r6, r5]
 800d65a:	6a06      	ldr	r6, [r0, #32]
 800d65c:	0697      	lsls	r7, r2, #26
 800d65e:	f101 051b 	add.w	r5, r1, #27
 800d662:	bf54      	ite	pl
 800d664:	5573      	strbpl	r3, [r6, r5]
 800d666:	5574      	strbmi	r4, [r6, r5]
 800d668:	6a06      	ldr	r6, [r0, #32]
 800d66a:	06d7      	lsls	r7, r2, #27
 800d66c:	f101 051c 	add.w	r5, r1, #28
 800d670:	bf54      	ite	pl
 800d672:	5573      	strbpl	r3, [r6, r5]
 800d674:	5574      	strbmi	r4, [r6, r5]
 800d676:	6a06      	ldr	r6, [r0, #32]
 800d678:	0717      	lsls	r7, r2, #28
 800d67a:	f101 051d 	add.w	r5, r1, #29
 800d67e:	bf54      	ite	pl
 800d680:	5573      	strbpl	r3, [r6, r5]
 800d682:	5574      	strbmi	r4, [r6, r5]
 800d684:	6a06      	ldr	r6, [r0, #32]
 800d686:	0757      	lsls	r7, r2, #29
 800d688:	f101 051e 	add.w	r5, r1, #30
 800d68c:	bf54      	ite	pl
 800d68e:	5573      	strbpl	r3, [r6, r5]
 800d690:	5574      	strbmi	r4, [r6, r5]
 800d692:	6a06      	ldr	r6, [r0, #32]
 800d694:	0797      	lsls	r7, r2, #30
 800d696:	f101 051f 	add.w	r5, r1, #31
 800d69a:	bf54      	ite	pl
 800d69c:	5573      	strbpl	r3, [r6, r5]
 800d69e:	5574      	strbmi	r4, [r6, r5]
 800d6a0:	07d2      	lsls	r2, r2, #31
 800d6a2:	bf4c      	ite	mi
 800d6a4:	6a03      	ldrmi	r3, [r0, #32]
 800d6a6:	6a02      	ldrpl	r2, [r0, #32]
 800d6a8:	f101 0120 	add.w	r1, r1, #32
 800d6ac:	bf4c      	ite	mi
 800d6ae:	545c      	strbmi	r4, [r3, r1]
 800d6b0:	5453      	strbpl	r3, [r2, r1]
 800d6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d6b4 <WS28xx::~WS28xx()>:
 800d6b4:	2200      	movs	r2, #0
 800d6b6:	4b01      	ldr	r3, [pc, #4]	; (800d6bc <WS28xx::~WS28xx()+0x8>)
 800d6b8:	601a      	str	r2, [r3, #0]
 800d6ba:	4770      	bx	lr
 800d6bc:	20000cfc 	strdcs	r0, [r0], -ip

0800d6c0 <WS28xx::SetupBuffers()>:
 800d6c0:	b513      	push	{r0, r1, r4, lr}
 800d6c2:	4604      	mov	r4, r0
 800d6c4:	a801      	add	r0, sp, #4
 800d6c6:	f004 fd6d 	bl	80121a4 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800d6ca:	9b01      	ldr	r3, [sp, #4]
 800d6cc:	4a07      	ldr	r2, [pc, #28]	; (800d6ec <WS28xx::SetupBuffers()+0x2c>)
 800d6ce:	085b      	lsrs	r3, r3, #1
 800d6d0:	f023 0303 	bic.w	r3, r3, #3
 800d6d4:	6220      	str	r0, [r4, #32]
 800d6d6:	4418      	add	r0, r3
 800d6d8:	69e3      	ldr	r3, [r4, #28]
 800d6da:	6260      	str	r0, [r4, #36]	; 0x24
 800d6dc:	6013      	str	r3, [r2, #0]
 800d6de:	3303      	adds	r3, #3
 800d6e0:	f023 0303 	bic.w	r3, r3, #3
 800d6e4:	61e3      	str	r3, [r4, #28]
 800d6e6:	b002      	add	sp, #8
 800d6e8:	bd10      	pop	{r4, pc}
 800d6ea:	bf00      	nop
 800d6ec:	20000cf8 	strdcs	r0, [r0], -r8

0800d6f0 <WS28xx::WS28xx(PixelConfiguration&)>:
 800d6f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d6f2:	23aa      	movs	r3, #170	; 0xaa
 800d6f4:	2203      	movs	r2, #3
 800d6f6:	e9c0 2300 	strd	r2, r3, [r0]
 800d6fa:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800d6fe:	460f      	mov	r7, r1
 800d700:	6102      	str	r2, [r0, #16]
 800d702:	2300      	movs	r3, #0
 800d704:	2106      	movs	r1, #6
 800d706:	f44f 7280 	mov.w	r2, #256	; 0x100
 800d70a:	4605      	mov	r5, r0
 800d70c:	463e      	mov	r6, r7
 800d70e:	4604      	mov	r4, r0
 800d710:	8282      	strh	r2, [r0, #20]
 800d712:	e9c0 1302 	strd	r1, r3, [r0, #8]
 800d716:	4a16      	ldr	r2, [pc, #88]	; (800d770 <WS28xx::WS28xx(PixelConfiguration&)+0x80>)
 800d718:	e9c0 3308 	strd	r3, r3, [r0, #32]
 800d71c:	4b15      	ldr	r3, [pc, #84]	; (800d774 <WS28xx::WS28xx(PixelConfiguration&)+0x84>)
 800d71e:	6182      	str	r2, [r0, #24]
 800d720:	6018      	str	r0, [r3, #0]
 800d722:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800d724:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800d726:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800d72a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800d72e:	a901      	add	r1, sp, #4
 800d730:	4638      	mov	r0, r7
 800d732:	f7fe fe11 	bl	800c358 <PixelConfiguration::Validate(unsigned int&)>
 800d736:	6862      	ldr	r2, [r4, #4]
 800d738:	9b01      	ldr	r3, [sp, #4]
 800d73a:	7d61      	ldrb	r1, [r4, #21]
 800d73c:	4353      	muls	r3, r2
 800d73e:	61e3      	str	r3, [r4, #28]
 800d740:	b111      	cbz	r1, 800d748 <WS28xx::WS28xx(PixelConfiguration&)+0x58>
 800d742:	00db      	lsls	r3, r3, #3
 800d744:	3301      	adds	r3, #1
 800d746:	61e3      	str	r3, [r4, #28]
 800d748:	6823      	ldr	r3, [r4, #0]
 800d74a:	4620      	mov	r0, r4
 800d74c:	3b0b      	subs	r3, #11
 800d74e:	2b02      	cmp	r3, #2
 800d750:	bf9f      	itttt	ls
 800d752:	69e3      	ldrls	r3, [r4, #28]
 800d754:	18d2      	addls	r2, r2, r3
 800d756:	3208      	addls	r2, #8
 800d758:	61e2      	strls	r2, [r4, #28]
 800d75a:	f7ff ffb1 	bl	800d6c0 <WS28xx::SetupBuffers()>
 800d75e:	f004 fc83 	bl	8012068 <gd32_spi_dma_begin()>
 800d762:	68f8      	ldr	r0, [r7, #12]
 800d764:	f004 fd0a 	bl	801217c <gd32_spi_dma_set_speed_hz(unsigned int)>
 800d768:	4620      	mov	r0, r4
 800d76a:	b003      	add	sp, #12
 800d76c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d76e:	bf00      	nop
 800d770:	080150f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, ip, lr}
 800d774:	20000cfc 	strdcs	r0, [r0], -ip

0800d778 <WS28xx::Update()>:
 800d778:	2200      	movs	r2, #0
 800d77a:	b430      	push	{r4, r5}
 800d77c:	4b0b      	ldr	r3, [pc, #44]	; (800d7ac <WS28xx::Update()+0x34>)
 800d77e:	681b      	ldr	r3, [r3, #0]
 800d780:	e9d0 1407 	ldrd	r1, r4, [r0, #28]
 800d784:	4299      	cmp	r1, r3
 800d786:	d807      	bhi.n	800d798 <WS28xx::Update()+0x20>
 800d788:	2300      	movs	r3, #0
 800d78a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d78c:	084d      	lsrs	r5, r1, #1
 800d78e:	42ab      	cmp	r3, r5
 800d790:	d105      	bne.n	800d79e <WS28xx::Update()+0x26>
 800d792:	bc30      	pop	{r4, r5}
 800d794:	f004 bd0e 	b.w	80121b4 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800d798:	54e2      	strb	r2, [r4, r3]
 800d79a:	3301      	adds	r3, #1
 800d79c:	e7f0      	b.n	800d780 <WS28xx::Update()+0x8>
 800d79e:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800d7a2:	ba52      	rev16	r2, r2
 800d7a4:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800d7a8:	3301      	adds	r3, #1
 800d7aa:	e7f0      	b.n	800d78e <WS28xx::Update()+0x16>
 800d7ac:	20000cf8 	strdcs	r0, [r0], -r8

0800d7b0 <WS28xx::Blackout()>:
 800d7b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d7b4:	4604      	mov	r4, r0
 800d7b6:	f3bf 8f6f 	isb	sy
 800d7ba:	f004 fd15 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800d7be:	2800      	cmp	r0, #0
 800d7c0:	d1f9      	bne.n	800d7b6 <WS28xx::Blackout()+0x6>
 800d7c2:	e9d4 2800 	ldrd	r2, r8, [r4]
 800d7c6:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800d7ca:	f1a2 070b 	sub.w	r7, r2, #11
 800d7ce:	2f02      	cmp	r7, #2
 800d7d0:	6223      	str	r3, [r4, #32]
 800d7d2:	7018      	strb	r0, [r3, #0]
 800d7d4:	d829      	bhi.n	800d82a <WS28xx::Blackout()+0x7a>
 800d7d6:	4605      	mov	r5, r0
 800d7d8:	4681      	mov	r9, r0
 800d7da:	7058      	strb	r0, [r3, #1]
 800d7dc:	7098      	strb	r0, [r3, #2]
 800d7de:	70d8      	strb	r0, [r3, #3]
 800d7e0:	4545      	cmp	r5, r8
 800d7e2:	d118      	bne.n	800d816 <WS28xx::Blackout()+0x66>
 800d7e4:	2f02      	cmp	r7, #2
 800d7e6:	bf14      	ite	ne
 800d7e8:	21ff      	movne	r1, #255	; 0xff
 800d7ea:	2100      	moveq	r1, #0
 800d7ec:	69e2      	ldr	r2, [r4, #28]
 800d7ee:	6a20      	ldr	r0, [r4, #32]
 800d7f0:	3a04      	subs	r2, #4
 800d7f2:	1883      	adds	r3, r0, r2
 800d7f4:	5481      	strb	r1, [r0, r2]
 800d7f6:	7059      	strb	r1, [r3, #1]
 800d7f8:	7099      	strb	r1, [r3, #2]
 800d7fa:	70d9      	strb	r1, [r3, #3]
 800d7fc:	4620      	mov	r0, r4
 800d7fe:	f7ff ffbb 	bl	800d778 <WS28xx::Update()>
 800d802:	f3bf 8f6f 	isb	sy
 800d806:	f004 fcef 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800d80a:	2800      	cmp	r0, #0
 800d80c:	d1f9      	bne.n	800d802 <WS28xx::Blackout()+0x52>
 800d80e:	6226      	str	r6, [r4, #32]
 800d810:	b003      	add	sp, #12
 800d812:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d816:	2300      	movs	r3, #0
 800d818:	4629      	mov	r1, r5
 800d81a:	461a      	mov	r2, r3
 800d81c:	4620      	mov	r0, r4
 800d81e:	f8cd 9000 	str.w	r9, [sp]
 800d822:	f7ff fa07 	bl	800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d826:	3501      	adds	r5, #1
 800d828:	e7da      	b.n	800d7e0 <WS28xx::Blackout()+0x30>
 800d82a:	6a23      	ldr	r3, [r4, #32]
 800d82c:	b102      	cbz	r2, 800d830 <WS28xx::Blackout()+0x80>
 800d82e:	7c22      	ldrb	r2, [r4, #16]
 800d830:	69e1      	ldr	r1, [r4, #28]
 800d832:	4419      	add	r1, r3
 800d834:	4299      	cmp	r1, r3
 800d836:	d0e1      	beq.n	800d7fc <WS28xx::Blackout()+0x4c>
 800d838:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d83c:	e7fa      	b.n	800d834 <WS28xx::Blackout()+0x84>

0800d83e <WS28xx::FullOn()>:
 800d83e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d842:	4604      	mov	r4, r0
 800d844:	f3bf 8f6f 	isb	sy
 800d848:	f004 fcce 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800d84c:	2800      	cmp	r0, #0
 800d84e:	d1f9      	bne.n	800d844 <WS28xx::FullOn()+0x6>
 800d850:	e9d4 2800 	ldrd	r2, r8, [r4]
 800d854:	e9d4 6308 	ldrd	r6, r3, [r4, #32]
 800d858:	f1a2 070b 	sub.w	r7, r2, #11
 800d85c:	2f02      	cmp	r7, #2
 800d85e:	6223      	str	r3, [r4, #32]
 800d860:	7018      	strb	r0, [r3, #0]
 800d862:	d82a      	bhi.n	800d8ba <WS28xx::FullOn()+0x7c>
 800d864:	4605      	mov	r5, r0
 800d866:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d86a:	7058      	strb	r0, [r3, #1]
 800d86c:	7098      	strb	r0, [r3, #2]
 800d86e:	70d8      	strb	r0, [r3, #3]
 800d870:	4545      	cmp	r5, r8
 800d872:	d118      	bne.n	800d8a6 <WS28xx::FullOn()+0x68>
 800d874:	2f02      	cmp	r7, #2
 800d876:	bf14      	ite	ne
 800d878:	21ff      	movne	r1, #255	; 0xff
 800d87a:	2100      	moveq	r1, #0
 800d87c:	69e2      	ldr	r2, [r4, #28]
 800d87e:	6a20      	ldr	r0, [r4, #32]
 800d880:	3a04      	subs	r2, #4
 800d882:	1883      	adds	r3, r0, r2
 800d884:	5481      	strb	r1, [r0, r2]
 800d886:	7059      	strb	r1, [r3, #1]
 800d888:	7099      	strb	r1, [r3, #2]
 800d88a:	70d9      	strb	r1, [r3, #3]
 800d88c:	4620      	mov	r0, r4
 800d88e:	f7ff ff73 	bl	800d778 <WS28xx::Update()>
 800d892:	f3bf 8f6f 	isb	sy
 800d896:	f004 fca7 	bl	80121e8 <gd32_spi_dma_tx_is_active()>
 800d89a:	2800      	cmp	r0, #0
 800d89c:	d1f9      	bne.n	800d892 <WS28xx::FullOn()+0x54>
 800d89e:	6226      	str	r6, [r4, #32]
 800d8a0:	b003      	add	sp, #12
 800d8a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8a6:	23ff      	movs	r3, #255	; 0xff
 800d8a8:	4629      	mov	r1, r5
 800d8aa:	461a      	mov	r2, r3
 800d8ac:	4620      	mov	r0, r4
 800d8ae:	f8cd 9000 	str.w	r9, [sp]
 800d8b2:	f7ff f9bf 	bl	800cc34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800d8b6:	3501      	adds	r5, #1
 800d8b8:	e7da      	b.n	800d870 <WS28xx::FullOn()+0x32>
 800d8ba:	6a23      	ldr	r3, [r4, #32]
 800d8bc:	b13a      	cbz	r2, 800d8ce <WS28xx::FullOn()+0x90>
 800d8be:	7c61      	ldrb	r1, [r4, #17]
 800d8c0:	69e2      	ldr	r2, [r4, #28]
 800d8c2:	441a      	add	r2, r3
 800d8c4:	429a      	cmp	r2, r3
 800d8c6:	d0e1      	beq.n	800d88c <WS28xx::FullOn()+0x4e>
 800d8c8:	f803 1f01 	strb.w	r1, [r3, #1]!
 800d8cc:	e7fa      	b.n	800d8c4 <WS28xx::FullOn()+0x86>
 800d8ce:	21ff      	movs	r1, #255	; 0xff
 800d8d0:	e7f6      	b.n	800d8c0 <WS28xx::FullOn()+0x82>
	...

0800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800d8d4:	2300      	movs	r3, #0
 800d8d6:	2020      	movs	r0, #32
 800d8d8:	b510      	push	{r4, lr}
 800d8da:	4a04      	ldr	r2, [pc, #16]	; (800d8ec <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800d8dc:	428b      	cmp	r3, r1
 800d8de:	d100      	bne.n	800d8e2 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800d8e0:	bd10      	pop	{r4, pc}
 800d8e2:	f852 4b04 	ldr.w	r4, [r2], #4
 800d8e6:	3301      	adds	r3, #1
 800d8e8:	4420      	add	r0, r4
 800d8ea:	e7f7      	b.n	800d8dc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800d8ec:	080151f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, ip, lr}

0800d8f0 <SpiFlashStore::Init()>:
 800d8f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8f4:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800da0c <SpiFlashStore::Init()+0x11c>
 800d8f8:	4607      	mov	r7, r0
 800d8fa:	b085      	sub	sp, #20
 800d8fc:	f8d8 0000 	ldr.w	r0, [r8]
 800d900:	f000 fbae 	bl	800e060 <FlashRom::GetSectorSize() const>
 800d904:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800d908:	4605      	mov	r5, r0
 800d90a:	d17d      	bne.n	800da08 <SpiFlashStore::Init()+0x118>
 800d90c:	f8d8 0000 	ldr.w	r0, [r8]
 800d910:	f000 fb9e 	bl	800e050 <FlashRom::GetSize() const>
 800d914:	4b3e      	ldr	r3, [pc, #248]	; (800da10 <SpiFlashStore::Init()+0x120>)
 800d916:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800d91a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800d91e:	6019      	str	r1, [r3, #0]
 800d920:	2e00      	cmp	r6, #0
 800d922:	d171      	bne.n	800da08 <SpiFlashStore::Init()+0x118>
 800d924:	4c3b      	ldr	r4, [pc, #236]	; (800da14 <SpiFlashStore::Init()+0x124>)
 800d926:	ab03      	add	r3, sp, #12
 800d928:	9300      	str	r3, [sp, #0]
 800d92a:	462a      	mov	r2, r5
 800d92c:	4623      	mov	r3, r4
 800d92e:	f8d8 0000 	ldr.w	r0, [r8]
 800d932:	f000 fb98 	bl	800e066 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800d936:	7823      	ldrb	r3, [r4, #0]
 800d938:	2b41      	cmp	r3, #65	; 0x41
 800d93a:	bf1c      	itt	ne
 800d93c:	2341      	movne	r3, #65	; 0x41
 800d93e:	7023      	strbne	r3, [r4, #0]
 800d940:	7863      	ldrb	r3, [r4, #1]
 800d942:	bf14      	ite	ne
 800d944:	4635      	movne	r5, r6
 800d946:	2501      	moveq	r5, #1
 800d948:	2b76      	cmp	r3, #118	; 0x76
 800d94a:	bf1c      	itt	ne
 800d94c:	2376      	movne	r3, #118	; 0x76
 800d94e:	7063      	strbne	r3, [r4, #1]
 800d950:	78a3      	ldrb	r3, [r4, #2]
 800d952:	bf18      	it	ne
 800d954:	2500      	movne	r5, #0
 800d956:	2b56      	cmp	r3, #86	; 0x56
 800d958:	bf1c      	itt	ne
 800d95a:	2356      	movne	r3, #86	; 0x56
 800d95c:	70a3      	strbne	r3, [r4, #2]
 800d95e:	78e3      	ldrb	r3, [r4, #3]
 800d960:	bf18      	it	ne
 800d962:	2500      	movne	r5, #0
 800d964:	2b10      	cmp	r3, #16
 800d966:	d022      	beq.n	800d9ae <SpiFlashStore::Init()+0xbe>
 800d968:	2310      	movs	r3, #16
 800d96a:	70e3      	strb	r3, [r4, #3]
 800d96c:	2201      	movs	r2, #1
 800d96e:	2500      	movs	r5, #0
 800d970:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d974:	4b28      	ldr	r3, [pc, #160]	; (800da18 <SpiFlashStore::Init()+0x128>)
 800d976:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800da1c <SpiFlashStore::Init()+0x12c>
 800d97a:	701a      	strb	r2, [r3, #0]
 800d97c:	4631      	mov	r1, r6
 800d97e:	4638      	mov	r0, r7
 800d980:	f7ff ffa8 	bl	800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800d984:	1823      	adds	r3, r4, r0
 800d986:	5425      	strb	r5, [r4, r0]
 800d988:	705d      	strb	r5, [r3, #1]
 800d98a:	709d      	strb	r5, [r3, #2]
 800d98c:	70dd      	strb	r5, [r3, #3]
 800d98e:	f858 3b04 	ldr.w	r3, [r8], #4
 800d992:	1d02      	adds	r2, r0, #4
 800d994:	4403      	add	r3, r0
 800d996:	429a      	cmp	r2, r3
 800d998:	d332      	bcc.n	800da00 <SpiFlashStore::Init()+0x110>
 800d99a:	3601      	adds	r6, #1
 800d99c:	2e1c      	cmp	r6, #28
 800d99e:	d1ed      	bne.n	800d97c <SpiFlashStore::Init()+0x8c>
 800d9a0:	2501      	movs	r5, #1
 800d9a2:	4b1f      	ldr	r3, [pc, #124]	; (800da20 <SpiFlashStore::Init()+0x130>)
 800d9a4:	601d      	str	r5, [r3, #0]
 800d9a6:	4628      	mov	r0, r5
 800d9a8:	b005      	add	sp, #20
 800d9aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d9ae:	2d00      	cmp	r5, #0
 800d9b0:	d0dc      	beq.n	800d96c <SpiFlashStore::Init()+0x7c>
 800d9b2:	f04f 0900 	mov.w	r9, #0
 800d9b6:	46c8      	mov	r8, r9
 800d9b8:	4631      	mov	r1, r6
 800d9ba:	4638      	mov	r0, r7
 800d9bc:	f7ff ff8a 	bl	800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800d9c0:	5c23      	ldrb	r3, [r4, r0]
 800d9c2:	2bff      	cmp	r3, #255	; 0xff
 800d9c4:	d112      	bne.n	800d9ec <SpiFlashStore::Init()+0xfc>
 800d9c6:	1823      	adds	r3, r4, r0
 800d9c8:	785a      	ldrb	r2, [r3, #1]
 800d9ca:	2aff      	cmp	r2, #255	; 0xff
 800d9cc:	d10e      	bne.n	800d9ec <SpiFlashStore::Init()+0xfc>
 800d9ce:	789a      	ldrb	r2, [r3, #2]
 800d9d0:	2aff      	cmp	r2, #255	; 0xff
 800d9d2:	d10b      	bne.n	800d9ec <SpiFlashStore::Init()+0xfc>
 800d9d4:	78da      	ldrb	r2, [r3, #3]
 800d9d6:	2aff      	cmp	r2, #255	; 0xff
 800d9d8:	d108      	bne.n	800d9ec <SpiFlashStore::Init()+0xfc>
 800d9da:	46a9      	mov	r9, r5
 800d9dc:	f804 8000 	strb.w	r8, [r4, r0]
 800d9e0:	f883 8001 	strb.w	r8, [r3, #1]
 800d9e4:	f883 8002 	strb.w	r8, [r3, #2]
 800d9e8:	f883 8003 	strb.w	r8, [r3, #3]
 800d9ec:	3601      	adds	r6, #1
 800d9ee:	2e1c      	cmp	r6, #28
 800d9f0:	d1e2      	bne.n	800d9b8 <SpiFlashStore::Init()+0xc8>
 800d9f2:	f1b9 0f00 	cmp.w	r9, #0
 800d9f6:	d0d6      	beq.n	800d9a6 <SpiFlashStore::Init()+0xb6>
 800d9f8:	2201      	movs	r2, #1
 800d9fa:	4b09      	ldr	r3, [pc, #36]	; (800da20 <SpiFlashStore::Init()+0x130>)
 800d9fc:	601a      	str	r2, [r3, #0]
 800d9fe:	e7d2      	b.n	800d9a6 <SpiFlashStore::Init()+0xb6>
 800da00:	f804 9002 	strb.w	r9, [r4, r2]
 800da04:	3201      	adds	r2, #1
 800da06:	e7c6      	b.n	800d996 <SpiFlashStore::Init()+0xa6>
 800da08:	2500      	movs	r5, #0
 800da0a:	e7cc      	b.n	800d9a6 <SpiFlashStore::Init()+0xb6>
 800da0c:	20001d2c 	andcs	r1, r0, ip, lsr #26
 800da10:	20001d04 	andcs	r1, r0, r4, lsl #26
 800da14:	20000d04 	andcs	r0, r0, r4, lsl #26
 800da18:	20001d18 	andcs	r1, r0, r8, lsl sp
 800da1c:	080151f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, ip, lr}
 800da20:	20001d10 	andcs	r1, r0, r0, lsl sp

0800da24 <SpiFlashStore::SpiFlashStore()>:
 800da24:	b538      	push	{r3, r4, r5, lr}
 800da26:	4b0d      	ldr	r3, [pc, #52]	; (800da5c <SpiFlashStore::SpiFlashStore()+0x38>)
 800da28:	4604      	mov	r4, r0
 800da2a:	6018      	str	r0, [r3, #0]
 800da2c:	4b0c      	ldr	r3, [pc, #48]	; (800da60 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800da2e:	4d0d      	ldr	r5, [pc, #52]	; (800da64 <SpiFlashStore::SpiFlashStore()+0x40>)
 800da30:	681b      	ldr	r3, [r3, #0]
 800da32:	781b      	ldrb	r3, [r3, #0]
 800da34:	b113      	cbz	r3, 800da3c <SpiFlashStore::SpiFlashStore()+0x18>
 800da36:	f7ff ff5b 	bl	800d8f0 <SpiFlashStore::Init()>
 800da3a:	7028      	strb	r0, [r5, #0]
 800da3c:	782b      	ldrb	r3, [r5, #0]
 800da3e:	b153      	cbz	r3, 800da56 <SpiFlashStore::SpiFlashStore()+0x32>
 800da40:	2320      	movs	r3, #32
 800da42:	2200      	movs	r2, #0
 800da44:	4908      	ldr	r1, [pc, #32]	; (800da68 <SpiFlashStore::SpiFlashStore()+0x44>)
 800da46:	f851 0b04 	ldr.w	r0, [r1], #4
 800da4a:	3201      	adds	r2, #1
 800da4c:	2a1c      	cmp	r2, #28
 800da4e:	4403      	add	r3, r0
 800da50:	d1f9      	bne.n	800da46 <SpiFlashStore::SpiFlashStore()+0x22>
 800da52:	4a06      	ldr	r2, [pc, #24]	; (800da6c <SpiFlashStore::SpiFlashStore()+0x48>)
 800da54:	6013      	str	r3, [r2, #0]
 800da56:	4620      	mov	r0, r4
 800da58:	bd38      	pop	{r3, r4, r5, pc}
 800da5a:	bf00      	nop
 800da5c:	20001d14 	andcs	r1, r0, r4, lsl sp
 800da60:	20001d2c 	andcs	r1, r0, ip, lsr #26
 800da64:	20001d08 	andcs	r1, r0, r8, lsl #26
 800da68:	080151f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, ip, lr}
 800da6c:	20001d0c 	andcs	r1, r0, ip, lsl #26

0800da70 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800da70:	b508      	push	{r3, lr}
 800da72:	f7ff ff2f 	bl	800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800da76:	2300      	movs	r3, #0
 800da78:	4904      	ldr	r1, [pc, #16]	; (800da8c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800da7a:	1842      	adds	r2, r0, r1
 800da7c:	540b      	strb	r3, [r1, r0]
 800da7e:	7053      	strb	r3, [r2, #1]
 800da80:	7093      	strb	r3, [r2, #2]
 800da82:	70d3      	strb	r3, [r2, #3]
 800da84:	2201      	movs	r2, #1
 800da86:	4b02      	ldr	r3, [pc, #8]	; (800da90 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800da88:	601a      	str	r2, [r3, #0]
 800da8a:	bd08      	pop	{r3, pc}
 800da8c:	20000d04 	andcs	r0, r0, r4, lsl #26
 800da90:	20001d10 	andcs	r1, r0, r0, lsl sp

0800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800da94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da98:	461c      	mov	r4, r3
 800da9a:	4b19      	ldr	r3, [pc, #100]	; (800db00 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800da9c:	4616      	mov	r6, r2
 800da9e:	781f      	ldrb	r7, [r3, #0]
 800daa0:	9d07      	ldr	r5, [sp, #28]
 800daa2:	b307      	cbz	r7, 800dae6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800daa4:	f7ff ff16 	bl	800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800daa8:	f04f 0c00 	mov.w	ip, #0
 800daac:	4a15      	ldr	r2, [pc, #84]	; (800db04 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800daae:	1831      	adds	r1, r6, r0
 800dab0:	1e63      	subs	r3, r4, #1
 800dab2:	9c06      	ldr	r4, [sp, #24]
 800dab4:	4411      	add	r1, r2
 800dab6:	440c      	add	r4, r1
 800dab8:	42a1      	cmp	r1, r4
 800daba:	d116      	bne.n	800daea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800dabc:	f1bc 0f00 	cmp.w	ip, #0
 800dac0:	d011      	beq.n	800dae6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800dac2:	4b11      	ldr	r3, [pc, #68]	; (800db08 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800dac4:	6819      	ldr	r1, [r3, #0]
 800dac6:	b109      	cbz	r1, 800dacc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800dac8:	2906      	cmp	r1, #6
 800daca:	d101      	bne.n	800dad0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800dacc:	2101      	movs	r1, #1
 800dace:	6019      	str	r1, [r3, #0]
 800dad0:	4b0e      	ldr	r3, [pc, #56]	; (800db0c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800dad2:	6819      	ldr	r1, [r3, #0]
 800dad4:	4b0e      	ldr	r3, [pc, #56]	; (800db10 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800dad6:	6019      	str	r1, [r3, #0]
 800dad8:	b12e      	cbz	r6, 800dae6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800dada:	b125      	cbz	r5, 800dae6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800dadc:	9b08      	ldr	r3, [sp, #32]
 800dade:	4418      	add	r0, r3
 800dae0:	5813      	ldr	r3, [r2, r0]
 800dae2:	432b      	orrs	r3, r5
 800dae4:	5013      	str	r3, [r2, r0]
 800dae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800daea:	f891 8000 	ldrb.w	r8, [r1]
 800daee:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800daf2:	3101      	adds	r1, #1
 800daf4:	45f0      	cmp	r8, lr
 800daf6:	bf1c      	itt	ne
 800daf8:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800dafc:	46bc      	movne	ip, r7
 800dafe:	e7db      	b.n	800dab8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800db00:	20001d08 	andcs	r1, r0, r8, lsl #26
 800db04:	20000d04 	andcs	r0, r0, r4, lsl #26
 800db08:	20001d10 	andcs	r1, r0, r0, lsl sp
 800db0c:	20009cec 	andcs	r9, r0, ip, ror #25
 800db10:	20000d00 	andcs	r0, r0, r0, lsl #26

0800db14 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800db14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db18:	461d      	mov	r5, r3
 800db1a:	4b15      	ldr	r3, [pc, #84]	; (800db70 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800db1c:	b085      	sub	sp, #20
 800db1e:	781b      	ldrb	r3, [r3, #0]
 800db20:	4607      	mov	r7, r0
 800db22:	4614      	mov	r4, r2
 800db24:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800db28:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800db2c:	b193      	cbz	r3, 800db54 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800db2e:	f7ff fed1 	bl	800d8d4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800db32:	4a10      	ldr	r2, [pc, #64]	; (800db74 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800db34:	eb08 0600 	add.w	r6, r8, r0
 800db38:	18b3      	adds	r3, r6, r2
 800db3a:	f1b9 0f00 	cmp.w	r9, #0
 800db3e:	d013      	beq.n	800db68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800db40:	5990      	ldr	r0, [r2, r6]
 800db42:	b988      	cbnz	r0, 800db68 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800db44:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800db48:	4623      	mov	r3, r4
 800db4a:	4642      	mov	r2, r8
 800db4c:	4638      	mov	r0, r7
 800db4e:	9500      	str	r5, [sp, #0]
 800db50:	f7ff ffa0 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800db54:	b005      	add	sp, #20
 800db56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db5a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800db5e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800db62:	429d      	cmp	r5, r3
 800db64:	d1f9      	bne.n	800db5a <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800db66:	e7f5      	b.n	800db54 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800db68:	3c01      	subs	r4, #1
 800db6a:	441d      	add	r5, r3
 800db6c:	e7f9      	b.n	800db62 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800db6e:	bf00      	nop
 800db70:	20001d08 	andcs	r1, r0, r8, lsl #26
 800db74:	20000d04 	andcs	r0, r0, r4, lsl #26

0800db78 <SpiFlashStore::Flash()>:
 800db78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800db7a:	4c25      	ldr	r4, [pc, #148]	; (800dc10 <SpiFlashStore::Flash()+0x98>)
 800db7c:	6820      	ldr	r0, [r4, #0]
 800db7e:	2800      	cmp	r0, #0
 800db80:	d043      	beq.n	800dc0a <SpiFlashStore::Flash()+0x92>
 800db82:	3801      	subs	r0, #1
 800db84:	2805      	cmp	r0, #5
 800db86:	d831      	bhi.n	800dbec <SpiFlashStore::Flash()+0x74>
 800db88:	e8df f000 	tbb	[pc, r0]
 800db8c:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800db90:	4b203025 	blmi	8819c2c <__exidx_end+0x804170>
 800db94:	681a      	ldr	r2, [r3, #0]
 800db96:	4b20      	ldr	r3, [pc, #128]	; (800dc18 <SpiFlashStore::Flash()+0xa0>)
 800db98:	601a      	str	r2, [r3, #0]
 800db9a:	2302      	movs	r3, #2
 800db9c:	6023      	str	r3, [r4, #0]
 800db9e:	2001      	movs	r0, #1
 800dba0:	e033      	b.n	800dc0a <SpiFlashStore::Flash()+0x92>
 800dba2:	4b1c      	ldr	r3, [pc, #112]	; (800dc14 <SpiFlashStore::Flash()+0x9c>)
 800dba4:	4a1c      	ldr	r2, [pc, #112]	; (800dc18 <SpiFlashStore::Flash()+0xa0>)
 800dba6:	681b      	ldr	r3, [r3, #0]
 800dba8:	6812      	ldr	r2, [r2, #0]
 800dbaa:	1a9b      	subs	r3, r3, r2
 800dbac:	2b63      	cmp	r3, #99	; 0x63
 800dbae:	d9f6      	bls.n	800db9e <SpiFlashStore::Flash()+0x26>
 800dbb0:	2303      	movs	r3, #3
 800dbb2:	e7f3      	b.n	800db9c <SpiFlashStore::Flash()+0x24>
 800dbb4:	4919      	ldr	r1, [pc, #100]	; (800dc1c <SpiFlashStore::Flash()+0xa4>)
 800dbb6:	481a      	ldr	r0, [pc, #104]	; (800dc20 <SpiFlashStore::Flash()+0xa8>)
 800dbb8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800dbbc:	6809      	ldr	r1, [r1, #0]
 800dbbe:	6800      	ldr	r0, [r0, #0]
 800dbc0:	ab03      	add	r3, sp, #12
 800dbc2:	f000 fa5f 	bl	800e084 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800dbc6:	2800      	cmp	r0, #0
 800dbc8:	d0e9      	beq.n	800db9e <SpiFlashStore::Flash()+0x26>
 800dbca:	4b12      	ldr	r3, [pc, #72]	; (800dc14 <SpiFlashStore::Flash()+0x9c>)
 800dbcc:	681a      	ldr	r2, [r3, #0]
 800dbce:	4b12      	ldr	r3, [pc, #72]	; (800dc18 <SpiFlashStore::Flash()+0xa0>)
 800dbd0:	601a      	str	r2, [r3, #0]
 800dbd2:	2305      	movs	r3, #5
 800dbd4:	e7e2      	b.n	800db9c <SpiFlashStore::Flash()+0x24>
 800dbd6:	4b0f      	ldr	r3, [pc, #60]	; (800dc14 <SpiFlashStore::Flash()+0x9c>)
 800dbd8:	4a0f      	ldr	r2, [pc, #60]	; (800dc18 <SpiFlashStore::Flash()+0xa0>)
 800dbda:	681b      	ldr	r3, [r3, #0]
 800dbdc:	6812      	ldr	r2, [r2, #0]
 800dbde:	1a9b      	subs	r3, r3, r2
 800dbe0:	2b63      	cmp	r3, #99	; 0x63
 800dbe2:	d9dc      	bls.n	800db9e <SpiFlashStore::Flash()+0x26>
 800dbe4:	2304      	movs	r3, #4
 800dbe6:	e7d9      	b.n	800db9c <SpiFlashStore::Flash()+0x24>
 800dbe8:	2306      	movs	r3, #6
 800dbea:	e7d7      	b.n	800db9c <SpiFlashStore::Flash()+0x24>
 800dbec:	ab03      	add	r3, sp, #12
 800dbee:	4a0d      	ldr	r2, [pc, #52]	; (800dc24 <SpiFlashStore::Flash()+0xac>)
 800dbf0:	490a      	ldr	r1, [pc, #40]	; (800dc1c <SpiFlashStore::Flash()+0xa4>)
 800dbf2:	480b      	ldr	r0, [pc, #44]	; (800dc20 <SpiFlashStore::Flash()+0xa8>)
 800dbf4:	9300      	str	r3, [sp, #0]
 800dbf6:	6812      	ldr	r2, [r2, #0]
 800dbf8:	4b0b      	ldr	r3, [pc, #44]	; (800dc28 <SpiFlashStore::Flash()+0xb0>)
 800dbfa:	6809      	ldr	r1, [r1, #0]
 800dbfc:	6800      	ldr	r0, [r0, #0]
 800dbfe:	f000 fae1 	bl	800e1c4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800dc02:	2800      	cmp	r0, #0
 800dc04:	d0cb      	beq.n	800db9e <SpiFlashStore::Flash()+0x26>
 800dc06:	2000      	movs	r0, #0
 800dc08:	6020      	str	r0, [r4, #0]
 800dc0a:	b004      	add	sp, #16
 800dc0c:	bd10      	pop	{r4, pc}
 800dc0e:	bf00      	nop
 800dc10:	20001d10 	andcs	r1, r0, r0, lsl sp
 800dc14:	20009cec 	andcs	r9, r0, ip, ror #25
 800dc18:	20000d00 	andcs	r0, r0, r0, lsl #26
 800dc1c:	20001d04 	andcs	r1, r0, r4, lsl #26
 800dc20:	20001d2c 	andcs	r1, r0, ip, lsr #26
 800dc24:	20001d0c 	andcs	r1, r0, ip, lsl #26
 800dc28:	20000d04 	andcs	r0, r0, r4, lsl #26

0800dc2c <StoreNetwork::~StoreNetwork()>:
 800dc2c:	4770      	bx	lr

0800dc2e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dc2e:	3804      	subs	r0, #4
 800dc30:	4770      	bx	lr
	...

0800dc34 <StoreNetwork::Update(networkparams::Params const*)>:
 800dc34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dc36:	2200      	movs	r2, #0
 800dc38:	460b      	mov	r3, r1
 800dc3a:	215e      	movs	r1, #94	; 0x5e
 800dc3c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800dc40:	4804      	ldr	r0, [pc, #16]	; (800dc54 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800dc42:	9100      	str	r1, [sp, #0]
 800dc44:	6800      	ldr	r0, [r0, #0]
 800dc46:	4611      	mov	r1, r2
 800dc48:	f7ff ff24 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc4c:	b005      	add	sp, #20
 800dc4e:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc52:	bf00      	nop
 800dc54:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dc58 <StoreNetwork::SaveDhcp(bool)>:
 800dc58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dc5a:	2301      	movs	r3, #1
 800dc5c:	f88d 1017 	strb.w	r1, [sp, #23]
 800dc60:	2100      	movs	r1, #0
 800dc62:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc66:	4805      	ldr	r0, [pc, #20]	; (800dc7c <StoreNetwork::SaveDhcp(bool)+0x24>)
 800dc68:	9300      	str	r3, [sp, #0]
 800dc6a:	2214      	movs	r2, #20
 800dc6c:	6800      	ldr	r0, [r0, #0]
 800dc6e:	f10d 0317 	add.w	r3, sp, #23
 800dc72:	f7ff ff0f 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc76:	b007      	add	sp, #28
 800dc78:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc7c:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dc80 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800dc80:	f1a0 0004 	sub.w	r0, r0, #4
 800dc84:	e7e8      	b.n	800dc58 <StoreNetwork::SaveDhcp(bool)>
 800dc86:	bf00      	nop

0800dc88 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dc88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dc8a:	2308      	movs	r3, #8
 800dc8c:	9105      	str	r1, [sp, #20]
 800dc8e:	2100      	movs	r1, #0
 800dc90:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc94:	2304      	movs	r3, #4
 800dc96:	4805      	ldr	r0, [pc, #20]	; (800dcac <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800dc98:	9300      	str	r3, [sp, #0]
 800dc9a:	220c      	movs	r2, #12
 800dc9c:	6800      	ldr	r0, [r0, #0]
 800dc9e:	ab05      	add	r3, sp, #20
 800dca0:	f7ff fef8 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dca4:	b007      	add	sp, #28
 800dca6:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcaa:	bf00      	nop
 800dcac:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dcb0 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dcb0:	f1a0 0004 	sub.w	r0, r0, #4
 800dcb4:	e7e8      	b.n	800dc88 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800dcb6:	bf00      	nop

0800dcb8 <StoreNetwork::SaveNetMask(unsigned int)>:
 800dcb8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dcba:	2304      	movs	r3, #4
 800dcbc:	9105      	str	r1, [sp, #20]
 800dcbe:	2100      	movs	r1, #0
 800dcc0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcc4:	4804      	ldr	r0, [pc, #16]	; (800dcd8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800dcc6:	9300      	str	r3, [sp, #0]
 800dcc8:	2208      	movs	r2, #8
 800dcca:	6800      	ldr	r0, [r0, #0]
 800dccc:	ab05      	add	r3, sp, #20
 800dcce:	f7ff fee1 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcd2:	b007      	add	sp, #28
 800dcd4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcd8:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dcdc <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800dcdc:	f1a0 0004 	sub.w	r0, r0, #4
 800dce0:	e7ea      	b.n	800dcb8 <StoreNetwork::SaveNetMask(unsigned int)>
 800dce2:	bf00      	nop

0800dce4 <StoreNetwork::SaveIp(unsigned int)>:
 800dce4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dce6:	2302      	movs	r3, #2
 800dce8:	9105      	str	r1, [sp, #20]
 800dcea:	2100      	movs	r1, #0
 800dcec:	2204      	movs	r2, #4
 800dcee:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcf2:	4804      	ldr	r0, [pc, #16]	; (800dd04 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800dcf4:	9200      	str	r2, [sp, #0]
 800dcf6:	6800      	ldr	r0, [r0, #0]
 800dcf8:	ab05      	add	r3, sp, #20
 800dcfa:	f7ff fecb 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcfe:	b007      	add	sp, #28
 800dd00:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd04:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dd08 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800dd08:	f1a0 0004 	sub.w	r0, r0, #4
 800dd0c:	e7ea      	b.n	800dce4 <StoreNetwork::SaveIp(unsigned int)>
 800dd0e:	bf00      	nop

0800dd10 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dd10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dd12:	460b      	mov	r3, r1
 800dd14:	2020      	movs	r0, #32
 800dd16:	2100      	movs	r1, #0
 800dd18:	2a40      	cmp	r2, #64	; 0x40
 800dd1a:	bf28      	it	cs
 800dd1c:	2240      	movcs	r2, #64	; 0x40
 800dd1e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800dd22:	4804      	ldr	r0, [pc, #16]	; (800dd34 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800dd24:	9200      	str	r2, [sp, #0]
 800dd26:	6800      	ldr	r0, [r0, #0]
 800dd28:	2215      	movs	r2, #21
 800dd2a:	f7ff feb3 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dd2e:	b005      	add	sp, #20
 800dd30:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd34:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dd38 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dd38:	f1a0 0004 	sub.w	r0, r0, #4
 800dd3c:	e7e8      	b.n	800dd10 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800dd3e:	bf00      	nop

0800dd40 <StoreNetwork::~StoreNetwork()>:
 800dd40:	b510      	push	{r4, lr}
 800dd42:	4604      	mov	r4, r0
 800dd44:	f003 f8f8 	bl	8010f38 <operator delete(void*)>
 800dd48:	4620      	mov	r0, r4
 800dd4a:	bd10      	pop	{r4, pc}

0800dd4c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dd4c:	f1a0 0004 	sub.w	r0, r0, #4
 800dd50:	e7f6      	b.n	800dd40 <StoreNetwork::~StoreNetwork()>
	...

0800dd54 <StoreNetwork::Copy(networkparams::Params*)>:
 800dd54:	b507      	push	{r0, r1, r2, lr}
 800dd56:	2301      	movs	r3, #1
 800dd58:	460a      	mov	r2, r1
 800dd5a:	2100      	movs	r1, #0
 800dd5c:	e9cd 1300 	strd	r1, r3, [sp]
 800dd60:	4803      	ldr	r0, [pc, #12]	; (800dd70 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800dd62:	235e      	movs	r3, #94	; 0x5e
 800dd64:	6800      	ldr	r0, [r0, #0]
 800dd66:	f7ff fed5 	bl	800db14 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800dd6a:	b003      	add	sp, #12
 800dd6c:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd70:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dd74 <StoreNetwork::StoreNetwork()>:
 800dd74:	4a03      	ldr	r2, [pc, #12]	; (800dd84 <StoreNetwork::StoreNetwork()+0x10>)
 800dd76:	6002      	str	r2, [r0, #0]
 800dd78:	322c      	adds	r2, #44	; 0x2c
 800dd7a:	6042      	str	r2, [r0, #4]
 800dd7c:	4a02      	ldr	r2, [pc, #8]	; (800dd88 <StoreNetwork::StoreNetwork()+0x14>)
 800dd7e:	6010      	str	r0, [r2, #0]
 800dd80:	4770      	bx	lr
 800dd82:	bf00      	nop
 800dd84:	0801526c 	stmdaeq	r1, {r2, r3, r5, r6, r9, ip, lr}
 800dd88:	20001d1c 	andcs	r1, r0, ip, lsl sp

0800dd8c <StoreOscServer::~StoreOscServer()>:
 800dd8c:	4770      	bx	lr
	...

0800dd90 <StoreOscServer::Copy(osc::server::Params*)>:
 800dd90:	b507      	push	{r0, r1, r2, lr}
 800dd92:	2300      	movs	r3, #0
 800dd94:	460a      	mov	r2, r1
 800dd96:	2101      	movs	r1, #1
 800dd98:	e9cd 3100 	strd	r3, r1, [sp]
 800dd9c:	4804      	ldr	r0, [pc, #16]	; (800ddb0 <StoreOscServer::Copy(osc::server::Params*)+0x20>)
 800dd9e:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800dda2:	2108      	movs	r1, #8
 800dda4:	6800      	ldr	r0, [r0, #0]
 800dda6:	f7ff feb5 	bl	800db14 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ddaa:	b003      	add	sp, #12
 800ddac:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddb0:	20001d14 	andcs	r1, r0, r4, lsl sp

0800ddb4 <StoreOscServer::Update(osc::server::Params const*)>:
 800ddb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ddb6:	2200      	movs	r2, #0
 800ddb8:	460b      	mov	r3, r1
 800ddba:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800ddbe:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ddc2:	4804      	ldr	r0, [pc, #16]	; (800ddd4 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800ddc4:	9100      	str	r1, [sp, #0]
 800ddc6:	6800      	ldr	r0, [r0, #0]
 800ddc8:	2108      	movs	r1, #8
 800ddca:	f7ff fe63 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ddce:	b005      	add	sp, #20
 800ddd0:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddd4:	20001d14 	andcs	r1, r0, r4, lsl sp

0800ddd8 <StoreOscServer::~StoreOscServer()>:
 800ddd8:	b510      	push	{r4, lr}
 800ddda:	4604      	mov	r4, r0
 800dddc:	f003 f8ac 	bl	8010f38 <operator delete(void*)>
 800dde0:	4620      	mov	r0, r4
 800dde2:	bd10      	pop	{r4, pc}

0800dde4 <StoreOscServer::StoreOscServer()>:
 800dde4:	4a02      	ldr	r2, [pc, #8]	; (800ddf0 <StoreOscServer::StoreOscServer()+0xc>)
 800dde6:	6002      	str	r2, [r0, #0]
 800dde8:	4a02      	ldr	r2, [pc, #8]	; (800ddf4 <StoreOscServer::StoreOscServer()+0x10>)
 800ddea:	6010      	str	r0, [r2, #0]
 800ddec:	4770      	bx	lr
 800ddee:	bf00      	nop
 800ddf0:	080152bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, ip, lr}
 800ddf4:	20001d20 	andcs	r1, r0, r0, lsr #26

0800ddf8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ddf8:	4770      	bx	lr
	...

0800ddfc <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800ddfc:	b507      	push	{r0, r1, r2, lr}
 800ddfe:	2300      	movs	r3, #0
 800de00:	460a      	mov	r2, r1
 800de02:	2101      	movs	r1, #1
 800de04:	e9cd 3100 	strd	r3, r1, [sp]
 800de08:	4804      	ldr	r0, [pc, #16]	; (800de1c <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800de0a:	2320      	movs	r3, #32
 800de0c:	210c      	movs	r1, #12
 800de0e:	6800      	ldr	r0, [r0, #0]
 800de10:	f7ff fe80 	bl	800db14 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800de14:	b003      	add	sp, #12
 800de16:	f85d fb04 	ldr.w	pc, [sp], #4
 800de1a:	bf00      	nop
 800de1c:	20001d14 	andcs	r1, r0, r4, lsl sp

0800de20 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800de20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de22:	2200      	movs	r2, #0
 800de24:	460b      	mov	r3, r1
 800de26:	2120      	movs	r1, #32
 800de28:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800de2c:	4804      	ldr	r0, [pc, #16]	; (800de40 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800de2e:	9100      	str	r1, [sp, #0]
 800de30:	6800      	ldr	r0, [r0, #0]
 800de32:	210c      	movs	r1, #12
 800de34:	f7ff fe2e 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800de38:	b005      	add	sp, #20
 800de3a:	f85d fb04 	ldr.w	pc, [sp], #4
 800de3e:	bf00      	nop
 800de40:	20001d14 	andcs	r1, r0, r4, lsl sp

0800de44 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800de44:	b510      	push	{r4, lr}
 800de46:	4604      	mov	r4, r0
 800de48:	f003 f876 	bl	8010f38 <operator delete(void*)>
 800de4c:	4620      	mov	r0, r4
 800de4e:	bd10      	pop	{r4, pc}

0800de50 <StoreRemoteConfig::StoreRemoteConfig()>:
 800de50:	4a02      	ldr	r2, [pc, #8]	; (800de5c <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800de52:	6002      	str	r2, [r0, #0]
 800de54:	4a02      	ldr	r2, [pc, #8]	; (800de60 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800de56:	6010      	str	r0, [r2, #0]
 800de58:	4770      	bx	lr
 800de5a:	bf00      	nop
 800de5c:	080152d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, ip, lr}
 800de60:	20001d24 	andcs	r1, r0, r4, lsr #26

0800de64 <StorePixelDmx::~StorePixelDmx()>:
 800de64:	4770      	bx	lr

0800de66 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800de66:	3804      	subs	r0, #4
 800de68:	4770      	bx	lr
	...

0800de6c <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 800de6c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de6e:	2200      	movs	r2, #0
 800de70:	460b      	mov	r3, r1
 800de72:	2118      	movs	r1, #24
 800de74:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800de78:	4804      	ldr	r0, [pc, #16]	; (800de8c <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 800de7a:	9100      	str	r1, [sp, #0]
 800de7c:	6800      	ldr	r0, [r0, #0]
 800de7e:	2103      	movs	r1, #3
 800de80:	f7ff fe08 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800de84:	b005      	add	sp, #20
 800de86:	f85d fb04 	ldr.w	pc, [sp], #4
 800de8a:	bf00      	nop
 800de8c:	20001d14 	andcs	r1, r0, r4, lsl sp

0800de90 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800de90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800de92:	2304      	movs	r3, #4
 800de94:	2200      	movs	r2, #0
 800de96:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800de9a:	2302      	movs	r3, #2
 800de9c:	4806      	ldr	r0, [pc, #24]	; (800deb8 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800de9e:	9300      	str	r3, [sp, #0]
 800dea0:	f8ad 1016 	strh.w	r1, [sp, #22]
 800dea4:	2207      	movs	r2, #7
 800dea6:	2103      	movs	r1, #3
 800dea8:	6800      	ldr	r0, [r0, #0]
 800deaa:	f10d 0316 	add.w	r3, sp, #22
 800deae:	f7ff fdf1 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800deb2:	b007      	add	sp, #28
 800deb4:	f85d fb04 	ldr.w	pc, [sp], #4
 800deb8:	20001d14 	andcs	r1, r0, r4, lsl sp

0800debc <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800debc:	f1a0 0004 	sub.w	r0, r0, #4
 800dec0:	e7e6      	b.n	800de90 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 800dec2:	bf00      	nop

0800dec4 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 800dec4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dec6:	2308      	movs	r3, #8
 800dec8:	2200      	movs	r2, #0
 800deca:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800dece:	2301      	movs	r3, #1
 800ded0:	4806      	ldr	r0, [pc, #24]	; (800deec <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 800ded2:	9300      	str	r3, [sp, #0]
 800ded4:	f88d 1017 	strb.w	r1, [sp, #23]
 800ded8:	2210      	movs	r2, #16
 800deda:	2103      	movs	r1, #3
 800dedc:	6800      	ldr	r0, [r0, #0]
 800dede:	f10d 0317 	add.w	r3, sp, #23
 800dee2:	f7ff fdd7 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dee6:	b007      	add	sp, #28
 800dee8:	f85d fb04 	ldr.w	pc, [sp], #4
 800deec:	20001d14 	andcs	r1, r0, r4, lsl sp

0800def0 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 800def0:	f1a0 0004 	sub.w	r0, r0, #4
 800def4:	e7e6      	b.n	800dec4 <StorePixelDmx::SaveTestPattern(unsigned char)>
 800def6:	bf00      	nop

0800def8 <StorePixelDmx::SaveMap(unsigned char)>:
 800def8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800defa:	f44f 7300 	mov.w	r3, #512	; 0x200
 800defe:	2200      	movs	r2, #0
 800df00:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df04:	2301      	movs	r3, #1
 800df06:	4807      	ldr	r0, [pc, #28]	; (800df24 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 800df08:	9300      	str	r3, [sp, #0]
 800df0a:	f88d 1017 	strb.w	r1, [sp, #23]
 800df0e:	2213      	movs	r2, #19
 800df10:	2103      	movs	r1, #3
 800df12:	6800      	ldr	r0, [r0, #0]
 800df14:	f10d 0317 	add.w	r3, sp, #23
 800df18:	f7ff fdbc 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800df1c:	b007      	add	sp, #28
 800df1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800df22:	bf00      	nop
 800df24:	20001d14 	andcs	r1, r0, r4, lsl sp

0800df28 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 800df28:	f1a0 0004 	sub.w	r0, r0, #4
 800df2c:	e7e4      	b.n	800def8 <StorePixelDmx::SaveMap(unsigned char)>
 800df2e:	bf00      	nop

0800df30 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800df30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df32:	f44f 7380 	mov.w	r3, #256	; 0x100
 800df36:	2200      	movs	r2, #0
 800df38:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df3c:	2302      	movs	r3, #2
 800df3e:	4807      	ldr	r0, [pc, #28]	; (800df5c <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800df40:	9300      	str	r3, [sp, #0]
 800df42:	f8ad 1016 	strh.w	r1, [sp, #22]
 800df46:	2211      	movs	r2, #17
 800df48:	2103      	movs	r1, #3
 800df4a:	6800      	ldr	r0, [r0, #0]
 800df4c:	f10d 0316 	add.w	r3, sp, #22
 800df50:	f7ff fda0 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800df54:	b007      	add	sp, #28
 800df56:	f85d fb04 	ldr.w	pc, [sp], #4
 800df5a:	bf00      	nop
 800df5c:	20001d14 	andcs	r1, r0, r4, lsl sp

0800df60 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800df60:	f1a0 0004 	sub.w	r0, r0, #4
 800df64:	e7e4      	b.n	800df30 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 800df66:	bf00      	nop

0800df68 <StorePixelDmx::SaveCount(unsigned short)>:
 800df68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df6a:	2302      	movs	r3, #2
 800df6c:	2200      	movs	r2, #0
 800df6e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df72:	4807      	ldr	r0, [pc, #28]	; (800df90 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 800df74:	9300      	str	r3, [sp, #0]
 800df76:	f8ad 1016 	strh.w	r1, [sp, #22]
 800df7a:	2205      	movs	r2, #5
 800df7c:	2103      	movs	r1, #3
 800df7e:	6800      	ldr	r0, [r0, #0]
 800df80:	f10d 0316 	add.w	r3, sp, #22
 800df84:	f7ff fd86 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800df88:	b007      	add	sp, #28
 800df8a:	f85d fb04 	ldr.w	pc, [sp], #4
 800df8e:	bf00      	nop
 800df90:	20001d14 	andcs	r1, r0, r4, lsl sp

0800df94 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 800df94:	f1a0 0004 	sub.w	r0, r0, #4
 800df98:	e7e6      	b.n	800df68 <StorePixelDmx::SaveCount(unsigned short)>
 800df9a:	bf00      	nop

0800df9c <StorePixelDmx::SaveType(unsigned char)>:
 800df9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df9e:	2301      	movs	r3, #1
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800dfa6:	4807      	ldr	r0, [pc, #28]	; (800dfc4 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 800dfa8:	9300      	str	r3, [sp, #0]
 800dfaa:	f88d 1017 	strb.w	r1, [sp, #23]
 800dfae:	2204      	movs	r2, #4
 800dfb0:	2103      	movs	r1, #3
 800dfb2:	6800      	ldr	r0, [r0, #0]
 800dfb4:	f10d 0317 	add.w	r3, sp, #23
 800dfb8:	f7ff fd6c 	bl	800da94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dfbc:	b007      	add	sp, #28
 800dfbe:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfc2:	bf00      	nop
 800dfc4:	20001d14 	andcs	r1, r0, r4, lsl sp

0800dfc8 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 800dfc8:	f1a0 0004 	sub.w	r0, r0, #4
 800dfcc:	e7e6      	b.n	800df9c <StorePixelDmx::SaveType(unsigned char)>
 800dfce:	bf00      	nop

0800dfd0 <StorePixelDmx::~StorePixelDmx()>:
 800dfd0:	b510      	push	{r4, lr}
 800dfd2:	4604      	mov	r4, r0
 800dfd4:	f002 ffb0 	bl	8010f38 <operator delete(void*)>
 800dfd8:	4620      	mov	r0, r4
 800dfda:	bd10      	pop	{r4, pc}

0800dfdc <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800dfdc:	f1a0 0004 	sub.w	r0, r0, #4
 800dfe0:	e7f6      	b.n	800dfd0 <StorePixelDmx::~StorePixelDmx()>
	...

0800dfe4 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 800dfe4:	b507      	push	{r0, r1, r2, lr}
 800dfe6:	2300      	movs	r3, #0
 800dfe8:	460a      	mov	r2, r1
 800dfea:	2101      	movs	r1, #1
 800dfec:	e9cd 3100 	strd	r3, r1, [sp]
 800dff0:	4804      	ldr	r0, [pc, #16]	; (800e004 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 800dff2:	2318      	movs	r3, #24
 800dff4:	2103      	movs	r1, #3
 800dff6:	6800      	ldr	r0, [r0, #0]
 800dff8:	f7ff fd8c 	bl	800db14 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800dffc:	b003      	add	sp, #12
 800dffe:	f85d fb04 	ldr.w	pc, [sp], #4
 800e002:	bf00      	nop
 800e004:	20001d14 	andcs	r1, r0, r4, lsl sp

0800e008 <StorePixelDmx::StorePixelDmx()>:
 800e008:	4a03      	ldr	r2, [pc, #12]	; (800e018 <StorePixelDmx::StorePixelDmx()+0x10>)
 800e00a:	6002      	str	r2, [r0, #0]
 800e00c:	3230      	adds	r2, #48	; 0x30
 800e00e:	6042      	str	r2, [r0, #4]
 800e010:	4a02      	ldr	r2, [pc, #8]	; (800e01c <StorePixelDmx::StorePixelDmx()+0x14>)
 800e012:	6010      	str	r0, [r2, #0]
 800e014:	4770      	bx	lr
 800e016:	bf00      	nop
 800e018:	080152ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, ip, lr}
 800e01c:	20001d28 	andcs	r1, r0, r8, lsr #26

0800e020 <FlashRom::FlashRom()>:
 800e020:	4b07      	ldr	r3, [pc, #28]	; (800e040 <FlashRom::FlashRom()+0x20>)
 800e022:	b510      	push	{r4, lr}
 800e024:	6018      	str	r0, [r3, #0]
 800e026:	2301      	movs	r3, #1
 800e028:	4604      	mov	r4, r0
 800e02a:	7003      	strb	r3, [r0, #0]
 800e02c:	4b05      	ldr	r3, [pc, #20]	; (800e044 <FlashRom::FlashRom()+0x24>)
 800e02e:	4906      	ldr	r1, [pc, #24]	; (800e048 <FlashRom::FlashRom()+0x28>)
 800e030:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e034:	4805      	ldr	r0, [pc, #20]	; (800e04c <FlashRom::FlashRom()+0x2c>)
 800e036:	029a      	lsls	r2, r3, #10
 800e038:	f7fb f94c 	bl	80092d4 <printf>
 800e03c:	4620      	mov	r0, r4
 800e03e:	bd10      	pop	{r4, pc}
 800e040:	20001d2c 	andcs	r1, r0, ip, lsr #26
 800e044:	1ffff700 	svcne	0x00fff700
 800e048:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 800e04c:	0801533c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, lr}

0800e050 <FlashRom::GetSize() const>:
 800e050:	4b02      	ldr	r3, [pc, #8]	; (800e05c <FlashRom::GetSize() const+0xc>)
 800e052:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800e056:	0280      	lsls	r0, r0, #10
 800e058:	4770      	bx	lr
 800e05a:	bf00      	nop
 800e05c:	1ffff700 	svcne	0x00fff700

0800e060 <FlashRom::GetSectorSize() const>:
 800e060:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800e064:	4770      	bx	lr

0800e066 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800e066:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e06a:	441a      	add	r2, r3
 800e06c:	4293      	cmp	r3, r2
 800e06e:	d104      	bne.n	800e07a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800e070:	2200      	movs	r2, #0
 800e072:	9b00      	ldr	r3, [sp, #0]
 800e074:	2001      	movs	r0, #1
 800e076:	601a      	str	r2, [r3, #0]
 800e078:	4770      	bx	lr
 800e07a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e07e:	f843 0b04 	str.w	r0, [r3], #4
 800e082:	e7f3      	b.n	800e06c <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800e084 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800e084:	2000      	movs	r0, #0
 800e086:	b538      	push	{r3, r4, r5, lr}
 800e088:	4c47      	ldr	r4, [pc, #284]	; (800e1a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800e08a:	6018      	str	r0, [r3, #0]
 800e08c:	6823      	ldr	r3, [r4, #0]
 800e08e:	2b04      	cmp	r3, #4
 800e090:	f200 8082 	bhi.w	800e198 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e094:	e8df f003 	tbb	[pc, r3]
 800e098:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800e09c:	4b430080 	blmi	90ce2a4 <__exidx_end+0x10b87e8>
 800e0a0:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e0a4:	6019      	str	r1, [r3, #0]
 800e0a6:	4b42      	ldr	r3, [pc, #264]	; (800e1b0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e0a8:	601a      	str	r2, [r3, #0]
 800e0aa:	4b42      	ldr	r3, [pc, #264]	; (800e1b4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800e0ac:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e0b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e0b4:	4b40      	ldr	r3, [pc, #256]	; (800e1b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e0b6:	d807      	bhi.n	800e0c8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800e0b8:	2201      	movs	r2, #1
 800e0ba:	701a      	strb	r2, [r3, #0]
 800e0bc:	f003 fa36 	bl	801152c <fmc_bank0_unlock>
 800e0c0:	2301      	movs	r3, #1
 800e0c2:	6023      	str	r3, [r4, #0]
 800e0c4:	2000      	movs	r0, #0
 800e0c6:	e026      	b.n	800e116 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e0c8:	4a3c      	ldr	r2, [pc, #240]	; (800e1bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800e0ca:	4291      	cmp	r1, r2
 800e0cc:	d3f4      	bcc.n	800e0b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800e0ce:	2200      	movs	r2, #0
 800e0d0:	701a      	strb	r2, [r3, #0]
 800e0d2:	f003 fa39 	bl	8011548 <fmc_bank1_unlock>
 800e0d6:	e7f3      	b.n	800e0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e0d8:	4d37      	ldr	r5, [pc, #220]	; (800e1b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e0da:	782b      	ldrb	r3, [r5, #0]
 800e0dc:	b15b      	cbz	r3, 800e0f6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800e0de:	f003 fa51 	bl	8011584 <fmc_bank0_state_get>
 800e0e2:	2801      	cmp	r0, #1
 800e0e4:	d0ee      	beq.n	800e0c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800e0e6:	7829      	ldrb	r1, [r5, #0]
 800e0e8:	4b35      	ldr	r3, [pc, #212]	; (800e1c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e0ea:	b939      	cbnz	r1, 800e0fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800e0ec:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e0ee:	f022 0202 	bic.w	r2, r2, #2
 800e0f2:	651a      	str	r2, [r3, #80]	; 0x50
 800e0f4:	e006      	b.n	800e104 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800e0f6:	f003 fa57 	bl	80115a8 <fmc_bank1_state_get>
 800e0fa:	e7f2      	b.n	800e0e2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800e0fc:	691a      	ldr	r2, [r3, #16]
 800e0fe:	f022 0202 	bic.w	r2, r2, #2
 800e102:	611a      	str	r2, [r3, #16]
 800e104:	4b2a      	ldr	r3, [pc, #168]	; (800e1b0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e106:	681b      	ldr	r3, [r3, #0]
 800e108:	b94b      	cbnz	r3, 800e11e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800e10a:	b129      	cbz	r1, 800e118 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800e10c:	f003 fa2a 	bl	8011564 <fmc_bank0_lock>
 800e110:	2300      	movs	r3, #0
 800e112:	2001      	movs	r0, #1
 800e114:	6023      	str	r3, [r4, #0]
 800e116:	bd38      	pop	{r3, r4, r5, pc}
 800e118:	f003 fa2c 	bl	8011574 <fmc_bank1_lock>
 800e11c:	e7f8      	b.n	800e110 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800e11e:	2302      	movs	r3, #2
 800e120:	e7cf      	b.n	800e0c2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800e122:	4923      	ldr	r1, [pc, #140]	; (800e1b0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e124:	680b      	ldr	r3, [r1, #0]
 800e126:	2b00      	cmp	r3, #0
 800e128:	d0ca      	beq.n	800e0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e12a:	4b23      	ldr	r3, [pc, #140]	; (800e1b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e12c:	4a1f      	ldr	r2, [pc, #124]	; (800e1ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800e12e:	7818      	ldrb	r0, [r3, #0]
 800e130:	4b23      	ldr	r3, [pc, #140]	; (800e1c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e132:	b190      	cbz	r0, 800e15a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800e134:	6918      	ldr	r0, [r3, #16]
 800e136:	f040 0002 	orr.w	r0, r0, #2
 800e13a:	6118      	str	r0, [r3, #16]
 800e13c:	6810      	ldr	r0, [r2, #0]
 800e13e:	6158      	str	r0, [r3, #20]
 800e140:	6918      	ldr	r0, [r3, #16]
 800e142:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800e146:	6118      	str	r0, [r3, #16]
 800e148:	680b      	ldr	r3, [r1, #0]
 800e14a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800e14e:	600b      	str	r3, [r1, #0]
 800e150:	6813      	ldr	r3, [r2, #0]
 800e152:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800e156:	6013      	str	r3, [r2, #0]
 800e158:	e7b2      	b.n	800e0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e15a:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800e15c:	f040 0002 	orr.w	r0, r0, #2
 800e160:	6518      	str	r0, [r3, #80]	; 0x50
 800e162:	6810      	ldr	r0, [r2, #0]
 800e164:	6558      	str	r0, [r3, #84]	; 0x54
 800e166:	69dd      	ldr	r5, [r3, #28]
 800e168:	07ad      	lsls	r5, r5, #30
 800e16a:	bf48      	it	mi
 800e16c:	6158      	strmi	r0, [r3, #20]
 800e16e:	4814      	ldr	r0, [pc, #80]	; (800e1c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e170:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e172:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e176:	6503      	str	r3, [r0, #80]	; 0x50
 800e178:	680b      	ldr	r3, [r1, #0]
 800e17a:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800e17e:	600b      	str	r3, [r1, #0]
 800e180:	6813      	ldr	r3, [r2, #0]
 800e182:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e186:	e7e6      	b.n	800e156 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800e188:	4b0b      	ldr	r3, [pc, #44]	; (800e1b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e18a:	781a      	ldrb	r2, [r3, #0]
 800e18c:	4b0c      	ldr	r3, [pc, #48]	; (800e1c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e18e:	b132      	cbz	r2, 800e19e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800e190:	691a      	ldr	r2, [r3, #16]
 800e192:	f022 0201 	bic.w	r2, r2, #1
 800e196:	611a      	str	r2, [r3, #16]
 800e198:	2000      	movs	r0, #0
 800e19a:	6020      	str	r0, [r4, #0]
 800e19c:	e7bb      	b.n	800e116 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e19e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e1a0:	f022 0201 	bic.w	r2, r2, #1
 800e1a4:	651a      	str	r2, [r3, #80]	; 0x50
 800e1a6:	e7f7      	b.n	800e198 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e1a8:	20001d34 	andcs	r1, r0, r4, lsr sp
 800e1ac:	20001d38 	andcs	r1, r0, r8, lsr sp
 800e1b0:	20001d44 	andcs	r1, r0, r4, asr #26
 800e1b4:	1ffff700 	svcne	0x00fff700
 800e1b8:	20001d40 	andcs	r1, r0, r0, asr #26
 800e1bc:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e1c0:	40022000 	andmi	r2, r2, r0

0800e1c4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800e1c4:	b570      	push	{r4, r5, r6, lr}
 800e1c6:	2400      	movs	r4, #0
 800e1c8:	9804      	ldr	r0, [sp, #16]
 800e1ca:	6004      	str	r4, [r0, #0]
 800e1cc:	4c48      	ldr	r4, [pc, #288]	; (800e2f0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800e1ce:	6820      	ldr	r0, [r4, #0]
 800e1d0:	2804      	cmp	r0, #4
 800e1d2:	d848      	bhi.n	800e266 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800e1d4:	e8df f000 	tbb	[pc, r0]
 800e1d8:	22847c03 	addcs	r7, r4, #768	; 0x300
 800e1dc:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800e1e0:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e1e4:	6001      	str	r1, [r0, #0]
 800e1e6:	4844      	ldr	r0, [pc, #272]	; (800e2f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e1e8:	6003      	str	r3, [r0, #0]
 800e1ea:	4b44      	ldr	r3, [pc, #272]	; (800e2fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e1ec:	601a      	str	r2, [r3, #0]
 800e1ee:	4b44      	ldr	r3, [pc, #272]	; (800e300 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800e1f0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e1f4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e1f8:	4b42      	ldr	r3, [pc, #264]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e1fa:	d807      	bhi.n	800e20c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800e1fc:	2201      	movs	r2, #1
 800e1fe:	701a      	strb	r2, [r3, #0]
 800e200:	f003 f994 	bl	801152c <fmc_bank0_unlock>
 800e204:	2303      	movs	r3, #3
 800e206:	6023      	str	r3, [r4, #0]
 800e208:	2000      	movs	r0, #0
 800e20a:	e026      	b.n	800e25a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800e20c:	4a3e      	ldr	r2, [pc, #248]	; (800e308 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800e20e:	4291      	cmp	r1, r2
 800e210:	d3f4      	bcc.n	800e1fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800e212:	2200      	movs	r2, #0
 800e214:	701a      	strb	r2, [r3, #0]
 800e216:	f003 f997 	bl	8011548 <fmc_bank1_unlock>
 800e21a:	e7f3      	b.n	800e204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e21c:	4d39      	ldr	r5, [pc, #228]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e21e:	782b      	ldrb	r3, [r5, #0]
 800e220:	b15b      	cbz	r3, 800e23a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800e222:	f003 f9af 	bl	8011584 <fmc_bank0_state_get>
 800e226:	2801      	cmp	r0, #1
 800e228:	d0ee      	beq.n	800e208 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800e22a:	7829      	ldrb	r1, [r5, #0]
 800e22c:	4b37      	ldr	r3, [pc, #220]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e22e:	b939      	cbnz	r1, 800e240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800e230:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e232:	f022 0201 	bic.w	r2, r2, #1
 800e236:	651a      	str	r2, [r3, #80]	; 0x50
 800e238:	e006      	b.n	800e248 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800e23a:	f003 f9b5 	bl	80115a8 <fmc_bank1_state_get>
 800e23e:	e7f2      	b.n	800e226 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800e240:	691a      	ldr	r2, [r3, #16]
 800e242:	f022 0201 	bic.w	r2, r2, #1
 800e246:	611a      	str	r2, [r3, #16]
 800e248:	4b2c      	ldr	r3, [pc, #176]	; (800e2fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e24a:	681b      	ldr	r3, [r3, #0]
 800e24c:	b94b      	cbnz	r3, 800e262 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800e24e:	b129      	cbz	r1, 800e25c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800e250:	f003 f988 	bl	8011564 <fmc_bank0_lock>
 800e254:	2300      	movs	r3, #0
 800e256:	2001      	movs	r0, #1
 800e258:	6023      	str	r3, [r4, #0]
 800e25a:	bd70      	pop	{r4, r5, r6, pc}
 800e25c:	f003 f98a 	bl	8011574 <fmc_bank1_lock>
 800e260:	e7f8      	b.n	800e254 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800e262:	2304      	movs	r3, #4
 800e264:	e7cf      	b.n	800e206 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800e266:	4a25      	ldr	r2, [pc, #148]	; (800e2fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e268:	6813      	ldr	r3, [r2, #0]
 800e26a:	2b03      	cmp	r3, #3
 800e26c:	d91a      	bls.n	800e2a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800e26e:	4b25      	ldr	r3, [pc, #148]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e270:	7819      	ldrb	r1, [r3, #0]
 800e272:	4b26      	ldr	r3, [pc, #152]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e274:	b189      	cbz	r1, 800e29a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800e276:	6919      	ldr	r1, [r3, #16]
 800e278:	f041 0101 	orr.w	r1, r1, #1
 800e27c:	6119      	str	r1, [r3, #16]
 800e27e:	4d1e      	ldr	r5, [pc, #120]	; (800e2f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e280:	481c      	ldr	r0, [pc, #112]	; (800e2f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800e282:	6829      	ldr	r1, [r5, #0]
 800e284:	6803      	ldr	r3, [r0, #0]
 800e286:	f851 6b04 	ldr.w	r6, [r1], #4
 800e28a:	f843 6b04 	str.w	r6, [r3], #4
 800e28e:	6003      	str	r3, [r0, #0]
 800e290:	6813      	ldr	r3, [r2, #0]
 800e292:	6029      	str	r1, [r5, #0]
 800e294:	3b04      	subs	r3, #4
 800e296:	6013      	str	r3, [r2, #0]
 800e298:	e7b4      	b.n	800e204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e29a:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800e29c:	f041 0101 	orr.w	r1, r1, #1
 800e2a0:	6519      	str	r1, [r3, #80]	; 0x50
 800e2a2:	e7ec      	b.n	800e27e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800e2a4:	2b00      	cmp	r3, #0
 800e2a6:	d0ad      	beq.n	800e204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e2a8:	4b16      	ldr	r3, [pc, #88]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e2aa:	781a      	ldrb	r2, [r3, #0]
 800e2ac:	4b17      	ldr	r3, [pc, #92]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e2ae:	b152      	cbz	r2, 800e2c6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800e2b0:	691a      	ldr	r2, [r3, #16]
 800e2b2:	f042 0201 	orr.w	r2, r2, #1
 800e2b6:	611a      	str	r2, [r3, #16]
 800e2b8:	4a0f      	ldr	r2, [pc, #60]	; (800e2f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e2ba:	4b0e      	ldr	r3, [pc, #56]	; (800e2f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800e2bc:	6812      	ldr	r2, [r2, #0]
 800e2be:	681b      	ldr	r3, [r3, #0]
 800e2c0:	6812      	ldr	r2, [r2, #0]
 800e2c2:	601a      	str	r2, [r3, #0]
 800e2c4:	e79e      	b.n	800e204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e2c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e2c8:	f042 0201 	orr.w	r2, r2, #1
 800e2cc:	651a      	str	r2, [r3, #80]	; 0x50
 800e2ce:	e7f3      	b.n	800e2b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800e2d0:	4b0c      	ldr	r3, [pc, #48]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e2d2:	781a      	ldrb	r2, [r3, #0]
 800e2d4:	4b0d      	ldr	r3, [pc, #52]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e2d6:	b132      	cbz	r2, 800e2e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800e2d8:	691a      	ldr	r2, [r3, #16]
 800e2da:	f022 0202 	bic.w	r2, r2, #2
 800e2de:	611a      	str	r2, [r3, #16]
 800e2e0:	2000      	movs	r0, #0
 800e2e2:	6020      	str	r0, [r4, #0]
 800e2e4:	e7b9      	b.n	800e25a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800e2e6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e2e8:	f022 0202 	bic.w	r2, r2, #2
 800e2ec:	651a      	str	r2, [r3, #80]	; 0x50
 800e2ee:	e7f7      	b.n	800e2e0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800e2f0:	20001d34 	andcs	r1, r0, r4, lsr sp
 800e2f4:	20001d30 	andcs	r1, r0, r0, lsr sp
 800e2f8:	20001d3c 	andcs	r1, r0, ip, lsr sp
 800e2fc:	20001d44 	andcs	r1, r0, r4, asr #26
 800e300:	1ffff700 	svcne	0x00fff700
 800e304:	20001d40 	andcs	r1, r0, r0, asr #26
 800e308:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e30c:	40022000 	andmi	r2, r2, r0

0800e310 <net_timers_run>:
 800e310:	4b05      	ldr	r3, [pc, #20]	; (800e328 <net_timers_run+0x18>)
 800e312:	4a06      	ldr	r2, [pc, #24]	; (800e32c <net_timers_run+0x1c>)
 800e314:	681b      	ldr	r3, [r3, #0]
 800e316:	6811      	ldr	r1, [r2, #0]
 800e318:	4299      	cmp	r1, r3
 800e31a:	d803      	bhi.n	800e324 <net_timers_run+0x14>
 800e31c:	3364      	adds	r3, #100	; 0x64
 800e31e:	6013      	str	r3, [r2, #0]
 800e320:	f001 be76 	b.w	8010010 <igmp_timer>
 800e324:	4770      	bx	lr
 800e326:	bf00      	nop
 800e328:	20009cec 	andcs	r9, r0, ip, ror #25
 800e32c:	20001d60 	andcs	r1, r0, r0, ror #26

0800e330 <rfc3927>:
 800e330:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e334:	4606      	mov	r6, r0
 800e336:	25ff      	movs	r5, #255	; 0xff
 800e338:	4b18      	ldr	r3, [pc, #96]	; (800e39c <rfc3927+0x6c>)
 800e33a:	4f19      	ldr	r7, [pc, #100]	; (800e3a0 <rfc3927+0x70>)
 800e33c:	791a      	ldrb	r2, [r3, #4]
 800e33e:	78dc      	ldrb	r4, [r3, #3]
 800e340:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e3a4 <rfc3927+0x74>
 800e344:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800e348:	f8d7 9000 	ldr.w	r9, [r7]
 800e34c:	f8df b058 	ldr.w	fp, [pc, #88]	; 800e3a8 <rfc3927+0x78>
 800e350:	f8df a058 	ldr.w	sl, [pc, #88]	; 800e3ac <rfc3927+0x7c>
 800e354:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800e358:	4659      	mov	r1, fp
 800e35a:	4620      	mov	r0, r4
 800e35c:	f001 fbb6 	bl	800facc <arp_cache_lookup>
 800e360:	b190      	cbz	r0, 800e388 <rfc3927+0x58>
 800e362:	ba24      	rev	r4, r4
 800e364:	3401      	adds	r4, #1
 800e366:	3d01      	subs	r5, #1
 800e368:	ba24      	rev	r4, r4
 800e36a:	b2ad      	uxth	r5, r5
 800e36c:	4554      	cmp	r4, sl
 800e36e:	bf08      	it	eq
 800e370:	4644      	moveq	r4, r8
 800e372:	b18d      	cbz	r5, 800e398 <rfc3927+0x68>
 800e374:	683b      	ldr	r3, [r7, #0]
 800e376:	eba3 0309 	sub.w	r3, r3, r9
 800e37a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800e37e:	d3eb      	bcc.n	800e358 <rfc3927+0x28>
 800e380:	2400      	movs	r4, #0
 800e382:	4623      	mov	r3, r4
 800e384:	4620      	mov	r0, r4
 800e386:	e002      	b.n	800e38e <rfc3927+0x5e>
 800e388:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e38c:	2001      	movs	r0, #1
 800e38e:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800e392:	6034      	str	r4, [r6, #0]
 800e394:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e398:	462c      	mov	r4, r5
 800e39a:	e7f2      	b.n	800e382 <rfc3927+0x52>
 800e39c:	20001d64 	andcs	r1, r0, r4, ror #26
 800e3a0:	20009cec 	andcs	r9, r0, ip, ror #25
 800e3a4:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800e3a8:	20001d6c 	andcs	r1, r0, ip, ror #26
 800e3ac:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800e3b0 <_init_tcb>:
 800e3b0:	b510      	push	{r4, lr}
 800e3b2:	4603      	mov	r3, r0
 800e3b4:	2400      	movs	r4, #0
 800e3b6:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800e3ba:	4293      	cmp	r3, r2
 800e3bc:	d10d      	bne.n	800e3da <_init_tcb+0x2a>
 800e3be:	4b08      	ldr	r3, [pc, #32]	; (800e3e0 <_init_tcb+0x30>)
 800e3c0:	f640 3268 	movw	r2, #2920	; 0xb68
 800e3c4:	681b      	ldr	r3, [r3, #0]
 800e3c6:	8702      	strh	r2, [r0, #56]	; 0x38
 800e3c8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e3cc:	6283      	str	r3, [r0, #40]	; 0x28
 800e3ce:	6243      	str	r3, [r0, #36]	; 0x24
 800e3d0:	2301      	movs	r3, #1
 800e3d2:	8001      	strh	r1, [r0, #0]
 800e3d4:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800e3d8:	bd10      	pop	{r4, pc}
 800e3da:	f803 4b01 	strb.w	r4, [r3], #1
 800e3de:	e7ec      	b.n	800e3ba <_init_tcb+0xa>
 800e3e0:	20009cec 	andcs	r9, r0, ip, ror #25

0800e3e4 <memcpy.isra.0>:
 800e3e4:	3801      	subs	r0, #1
 800e3e6:	440a      	add	r2, r1
 800e3e8:	4291      	cmp	r1, r2
 800e3ea:	d100      	bne.n	800e3ee <memcpy.isra.0+0xa>
 800e3ec:	4770      	bx	lr
 800e3ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e3f2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e3f6:	e7f7      	b.n	800e3e8 <memcpy.isra.0+0x4>

0800e3f8 <_bswap32>:
 800e3f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e3fa:	2204      	movs	r2, #4
 800e3fc:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800e400:	4629      	mov	r1, r5
 800e402:	4604      	mov	r4, r0
 800e404:	eb0d 0002 	add.w	r0, sp, r2
 800e408:	f7ff ffec 	bl	800e3e4 <memcpy.isra.0>
 800e40c:	2204      	movs	r2, #4
 800e40e:	9b01      	ldr	r3, [sp, #4]
 800e410:	eb0d 0102 	add.w	r1, sp, r2
 800e414:	ba1b      	rev	r3, r3
 800e416:	4628      	mov	r0, r5
 800e418:	9301      	str	r3, [sp, #4]
 800e41a:	f7ff ffe3 	bl	800e3e4 <memcpy.isra.0>
 800e41e:	2204      	movs	r2, #4
 800e420:	3426      	adds	r4, #38	; 0x26
 800e422:	eb0d 0002 	add.w	r0, sp, r2
 800e426:	4621      	mov	r1, r4
 800e428:	f7ff ffdc 	bl	800e3e4 <memcpy.isra.0>
 800e42c:	2204      	movs	r2, #4
 800e42e:	9b01      	ldr	r3, [sp, #4]
 800e430:	4620      	mov	r0, r4
 800e432:	ba1b      	rev	r3, r3
 800e434:	eb0d 0102 	add.w	r1, sp, r2
 800e438:	9301      	str	r3, [sp, #4]
 800e43a:	f7ff ffd3 	bl	800e3e4 <memcpy.isra.0>
 800e43e:	b003      	add	sp, #12
 800e440:	bd30      	pop	{r4, r5, pc}
	...

0800e444 <_tcp_send_package>:
 800e444:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e448:	7a0b      	ldrb	r3, [r1, #8]
 800e44a:	4605      	mov	r5, r0
 800e44c:	f013 0f02 	tst.w	r3, #2
 800e450:	bf0c      	ite	eq
 800e452:	f04f 0805 	moveq.w	r8, #5
 800e456:	f04f 0806 	movne.w	r8, #6
 800e45a:	f04f 0a00 	mov.w	sl, #0
 800e45e:	4c47      	ldr	r4, [pc, #284]	; (800e57c <_tcp_send_package+0x138>)
 800e460:	460f      	mov	r7, r1
 800e462:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800e464:	f100 0108 	add.w	r1, r0, #8
 800e468:	2206      	movs	r2, #6
 800e46a:	4620      	mov	r0, r4
 800e46c:	f7ff ffba 	bl	800e3e4 <memcpy.isra.0>
 800e470:	4a43      	ldr	r2, [pc, #268]	; (800e580 <_tcp_send_package+0x13c>)
 800e472:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800e476:	8813      	ldrh	r3, [r2, #0]
 800e478:	b2b6      	uxth	r6, r6
 800e47a:	1c59      	adds	r1, r3, #1
 800e47c:	8263      	strh	r3, [r4, #18]
 800e47e:	f105 0904 	add.w	r9, r5, #4
 800e482:	f106 0314 	add.w	r3, r6, #20
 800e486:	ba5b      	rev16	r3, r3
 800e488:	8011      	strh	r1, [r2, #0]
 800e48a:	f104 001e 	add.w	r0, r4, #30
 800e48e:	2204      	movs	r2, #4
 800e490:	4649      	mov	r1, r9
 800e492:	8223      	strh	r3, [r4, #16]
 800e494:	f7ff ffa6 	bl	800e3e4 <memcpy.isra.0>
 800e498:	2114      	movs	r1, #20
 800e49a:	f104 000e 	add.w	r0, r4, #14
 800e49e:	f8a4 a018 	strh.w	sl, [r4, #24]
 800e4a2:	f001 fe48 	bl	8010136 <net_chksum>
 800e4a6:	882b      	ldrh	r3, [r5, #0]
 800e4a8:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800e4ac:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4ae:	886b      	ldrh	r3, [r5, #2]
 800e4b0:	8320      	strh	r0, [r4, #24]
 800e4b2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e4b4:	683b      	ldr	r3, [r7, #0]
 800e4b6:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800e4b8:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800e4bc:	687b      	ldr	r3, [r7, #4]
 800e4be:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800e4c2:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800e4c6:	7a3b      	ldrb	r3, [r7, #8]
 800e4c8:	8622      	strh	r2, [r4, #48]	; 0x30
 800e4ca:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800e4ce:	079b      	lsls	r3, r3, #30
 800e4d0:	bf48      	it	mi
 800e4d2:	f240 4302 	movwmi	r3, #1026	; 0x402
 800e4d6:	8baa      	ldrh	r2, [r5, #28]
 800e4d8:	bf48      	it	mi
 800e4da:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800e4dc:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e4de:	bf42      	ittt	mi
 800e4e0:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800e4e4:	4622      	movmi	r2, r4
 800e4e6:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800e4ea:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e4ec:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800e4f0:	bf58      	it	pl
 800e4f2:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800e4f6:	2b00      	cmp	r3, #0
 800e4f8:	d13e      	bne.n	800e578 <_tcp_send_package+0x134>
 800e4fa:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800e4fc:	481f      	ldr	r0, [pc, #124]	; (800e57c <_tcp_send_package+0x138>)
 800e4fe:	ba5b      	rev16	r3, r3
 800e500:	8463      	strh	r3, [r4, #34]	; 0x22
 800e502:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800e504:	ba5b      	rev16	r3, r3
 800e506:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e508:	f7ff ff76 	bl	800e3f8 <_bswap32>
 800e50c:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e50e:	a801      	add	r0, sp, #4
 800e510:	ba5b      	rev16	r3, r3
 800e512:	8623      	strh	r3, [r4, #48]	; 0x30
 800e514:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e516:	220c      	movs	r2, #12
 800e518:	ba5b      	rev16	r3, r3
 800e51a:	491a      	ldr	r1, [pc, #104]	; (800e584 <_tcp_send_package+0x140>)
 800e51c:	86a3      	strh	r3, [r4, #52]	; 0x34
 800e51e:	f7ff ff61 	bl	800e3e4 <memcpy.isra.0>
 800e522:	2204      	movs	r2, #4
 800e524:	4918      	ldr	r1, [pc, #96]	; (800e588 <_tcp_send_package+0x144>)
 800e526:	4817      	ldr	r0, [pc, #92]	; (800e584 <_tcp_send_package+0x140>)
 800e528:	f7ff ff5c 	bl	800e3e4 <memcpy.isra.0>
 800e52c:	2204      	movs	r2, #4
 800e52e:	4649      	mov	r1, r9
 800e530:	4816      	ldr	r0, [pc, #88]	; (800e58c <_tcp_send_package+0x148>)
 800e532:	f7ff ff57 	bl	800e3e4 <memcpy.isra.0>
 800e536:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800e53a:	f106 010c 	add.w	r1, r6, #12
 800e53e:	83e3      	strh	r3, [r4, #30]
 800e540:	4810      	ldr	r0, [pc, #64]	; (800e584 <_tcp_send_package+0x140>)
 800e542:	ba73      	rev16	r3, r6
 800e544:	8423      	strh	r3, [r4, #32]
 800e546:	f001 fdf6 	bl	8010136 <net_chksum>
 800e54a:	a901      	add	r1, sp, #4
 800e54c:	4605      	mov	r5, r0
 800e54e:	220c      	movs	r2, #12
 800e550:	480c      	ldr	r0, [pc, #48]	; (800e584 <_tcp_send_package+0x140>)
 800e552:	f7ff ff47 	bl	800e3e4 <memcpy.isra.0>
 800e556:	4809      	ldr	r0, [pc, #36]	; (800e57c <_tcp_send_package+0x138>)
 800e558:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800e55c:	8665      	strh	r5, [r4, #50]	; 0x32
 800e55e:	b004      	add	sp, #16
 800e560:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e564:	f003 bbd8 	b.w	8011d18 <emac_eth_send>
 800e568:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800e56a:	5cc9      	ldrb	r1, [r1, r3]
 800e56c:	54d1      	strb	r1, [r2, r3]
 800e56e:	3301      	adds	r3, #1
 800e570:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800e572:	4299      	cmp	r1, r3
 800e574:	d8f8      	bhi.n	800e568 <_tcp_send_package+0x124>
 800e576:	e7c0      	b.n	800e4fa <_tcp_send_package+0xb6>
 800e578:	2300      	movs	r3, #0
 800e57a:	e7f9      	b.n	800e570 <_tcp_send_package+0x12c>
 800e57c:	2000292c 	andcs	r2, r0, ip, lsr #18
 800e580:	20001d74 	andcs	r1, r0, r4, ror sp
 800e584:	20002942 	andcs	r2, r0, r2, asr #18
 800e588:	20001d48 	andcs	r1, r0, r8, asr #26
 800e58c:	20002946 	andcs	r2, r0, r6, asr #18

0800e590 <_send_reset>:
 800e590:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e592:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800e596:	4604      	mov	r4, r0
 800e598:	075a      	lsls	r2, r3, #29
 800e59a:	460e      	mov	r6, r1
 800e59c:	d421      	bmi.n	800e5e2 <_send_reset+0x52>
 800e59e:	2204      	movs	r2, #4
 800e5a0:	f013 0310 	ands.w	r3, r3, #16
 800e5a4:	f88d 200c 	strb.w	r2, [sp, #12]
 800e5a8:	d01d      	beq.n	800e5e6 <_send_reset+0x56>
 800e5aa:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800e5ae:	4668      	mov	r0, sp
 800e5b0:	f7ff ff18 	bl	800e3e4 <memcpy.isra.0>
 800e5b4:	9b00      	ldr	r3, [sp, #0]
 800e5b6:	9301      	str	r3, [sp, #4]
 800e5b8:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800e5bc:	4668      	mov	r0, sp
 800e5be:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800e5c2:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800e5c6:	07db      	lsls	r3, r3, #31
 800e5c8:	f04f 0204 	mov.w	r2, #4
 800e5cc:	bf48      	it	mi
 800e5ce:	3501      	addmi	r5, #1
 800e5d0:	f7ff ff08 	bl	800e3e4 <memcpy.isra.0>
 800e5d4:	9b00      	ldr	r3, [sp, #0]
 800e5d6:	4630      	mov	r0, r6
 800e5d8:	441d      	add	r5, r3
 800e5da:	a901      	add	r1, sp, #4
 800e5dc:	9502      	str	r5, [sp, #8]
 800e5de:	f7ff ff31 	bl	800e444 <_tcp_send_package>
 800e5e2:	b004      	add	sp, #16
 800e5e4:	bd70      	pop	{r4, r5, r6, pc}
 800e5e6:	9301      	str	r3, [sp, #4]
 800e5e8:	2314      	movs	r3, #20
 800e5ea:	f88d 300c 	strb.w	r3, [sp, #12]
 800e5ee:	e7e3      	b.n	800e5b8 <_send_reset+0x28>

0800e5f0 <tcp_begin>:
 800e5f0:	b508      	push	{r3, lr}
 800e5f2:	4b0a      	ldr	r3, [pc, #40]	; (800e61c <tcp_begin+0x2c>)
 800e5f4:	4601      	mov	r1, r0
 800e5f6:	881a      	ldrh	r2, [r3, #0]
 800e5f8:	4282      	cmp	r2, r0
 800e5fa:	d102      	bne.n	800e602 <tcp_begin+0x12>
 800e5fc:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800e600:	b130      	cbz	r0, 800e610 <tcp_begin+0x20>
 800e602:	b12a      	cbz	r2, 800e610 <tcp_begin+0x20>
 800e604:	4806      	ldr	r0, [pc, #24]	; (800e620 <tcp_begin+0x30>)
 800e606:	f002 fb45 	bl	8010c94 <console_error>
 800e60a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e60e:	bd08      	pop	{r3, pc}
 800e610:	4802      	ldr	r0, [pc, #8]	; (800e61c <tcp_begin+0x2c>)
 800e612:	8019      	strh	r1, [r3, #0]
 800e614:	f7ff fecc 	bl	800e3b0 <_init_tcb>
 800e618:	2000      	movs	r0, #0
 800e61a:	e7f8      	b.n	800e60e <tcp_begin+0x1e>
 800e61c:	200028e8 	andcs	r2, r0, r8, ror #17
 800e620:	0801536a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, ip, lr}

0800e624 <tcp_write>:
 800e624:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800e628:	429a      	cmp	r2, r3
 800e62a:	bf28      	it	cs
 800e62c:	461a      	movcs	r2, r3
 800e62e:	2344      	movs	r3, #68	; 0x44
 800e630:	b530      	push	{r4, r5, lr}
 800e632:	4c0d      	ldr	r4, [pc, #52]	; (800e668 <tcp_write+0x44>)
 800e634:	b085      	sub	sp, #20
 800e636:	fb03 4400 	mla	r4, r3, r0, r4
 800e63a:	6963      	ldr	r3, [r4, #20]
 800e63c:	62e1      	str	r1, [r4, #44]	; 0x2c
 800e63e:	9301      	str	r3, [sp, #4]
 800e640:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e642:	4620      	mov	r0, r4
 800e644:	9302      	str	r3, [sp, #8]
 800e646:	2318      	movs	r3, #24
 800e648:	8622      	strh	r2, [r4, #48]	; 0x30
 800e64a:	a901      	add	r1, sp, #4
 800e64c:	4615      	mov	r5, r2
 800e64e:	f88d 300c 	strb.w	r3, [sp, #12]
 800e652:	f7ff fef7 	bl	800e444 <_tcp_send_package>
 800e656:	2300      	movs	r3, #0
 800e658:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e65a:	8623      	strh	r3, [r4, #48]	; 0x30
 800e65c:	6963      	ldr	r3, [r4, #20]
 800e65e:	442b      	add	r3, r5
 800e660:	6163      	str	r3, [r4, #20]
 800e662:	b005      	add	sp, #20
 800e664:	bd30      	pop	{r4, r5, pc}
 800e666:	bf00      	nop
 800e668:	200028e8 	andcs	r2, r0, r8, ror #17

0800e66c <tcp_read>:
 800e66c:	2344      	movs	r3, #68	; 0x44
 800e66e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e670:	4c1c      	ldr	r4, [pc, #112]	; (800e6e4 <tcp_read+0x78>)
 800e672:	b085      	sub	sp, #20
 800e674:	fb03 4400 	mla	r4, r3, r0, r4
 800e678:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e67c:	2b07      	cmp	r3, #7
 800e67e:	d112      	bne.n	800e6a6 <tcp_read+0x3a>
 800e680:	6963      	ldr	r3, [r4, #20]
 800e682:	4620      	mov	r0, r4
 800e684:	9301      	str	r3, [sp, #4]
 800e686:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e688:	a901      	add	r1, sp, #4
 800e68a:	9302      	str	r3, [sp, #8]
 800e68c:	2311      	movs	r3, #17
 800e68e:	f88d 300c 	strb.w	r3, [sp, #12]
 800e692:	f7ff fed7 	bl	800e444 <_tcp_send_package>
 800e696:	2309      	movs	r3, #9
 800e698:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800e69c:	6963      	ldr	r3, [r4, #20]
 800e69e:	3301      	adds	r3, #1
 800e6a0:	6163      	str	r3, [r4, #20]
 800e6a2:	2000      	movs	r0, #0
 800e6a4:	e01b      	b.n	800e6de <tcp_read+0x72>
 800e6a6:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800e6aa:	4358      	muls	r0, r3
 800e6ac:	4a0e      	ldr	r2, [pc, #56]	; (800e6e8 <tcp_read+0x7c>)
 800e6ae:	1817      	adds	r7, r2, r0
 800e6b0:	887b      	ldrh	r3, [r7, #2]
 800e6b2:	5a15      	ldrh	r5, [r2, r0]
 800e6b4:	429d      	cmp	r5, r3
 800e6b6:	d0f4      	beq.n	800e6a2 <tcp_read+0x36>
 800e6b8:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800e6bc:	435d      	muls	r5, r3
 800e6be:	1d06      	adds	r6, r0, #4
 800e6c0:	442e      	add	r6, r5
 800e6c2:	4416      	add	r6, r2
 800e6c4:	4405      	add	r5, r0
 800e6c6:	600e      	str	r6, [r1, #0]
 800e6c8:	442a      	add	r2, r5
 800e6ca:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800e6ce:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e6d0:	3301      	adds	r3, #1
 800e6d2:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800e6d6:	f003 0301 	and.w	r3, r3, #1
 800e6da:	8722      	strh	r2, [r4, #56]	; 0x38
 800e6dc:	807b      	strh	r3, [r7, #2]
 800e6de:	b005      	add	sp, #20
 800e6e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6e2:	bf00      	nop
 800e6e4:	200028e8 	andcs	r2, r0, r8, ror #17
 800e6e8:	20001d78 	andcs	r1, r0, r8, ror sp

0800e6ec <memcpy.isra.0>:
 800e6ec:	3801      	subs	r0, #1
 800e6ee:	440a      	add	r2, r1
 800e6f0:	4291      	cmp	r1, r2
 800e6f2:	d100      	bne.n	800e6f6 <memcpy.isra.0+0xa>
 800e6f4:	4770      	bx	lr
 800e6f6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e6fa:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e6fe:	e7f7      	b.n	800e6f0 <memcpy.isra.0+0x4>

0800e700 <net_memcpy>:
 800e700:	ea40 0301 	orr.w	r3, r0, r1
 800e704:	079b      	lsls	r3, r3, #30
 800e706:	b570      	push	{r4, r5, r6, lr}
 800e708:	d108      	bne.n	800e71c <net_memcpy+0x1c>
 800e70a:	f022 0303 	bic.w	r3, r2, #3
 800e70e:	1f04      	subs	r4, r0, #4
 800e710:	18cd      	adds	r5, r1, r3
 800e712:	42a9      	cmp	r1, r5
 800e714:	d108      	bne.n	800e728 <net_memcpy+0x28>
 800e716:	1ad2      	subs	r2, r2, r3
 800e718:	4403      	add	r3, r0
 800e71a:	e000      	b.n	800e71e <net_memcpy+0x1e>
 800e71c:	4603      	mov	r3, r0
 800e71e:	3b01      	subs	r3, #1
 800e720:	440a      	add	r2, r1
 800e722:	4291      	cmp	r1, r2
 800e724:	d105      	bne.n	800e732 <net_memcpy+0x32>
 800e726:	bd70      	pop	{r4, r5, r6, pc}
 800e728:	f851 6b04 	ldr.w	r6, [r1], #4
 800e72c:	f844 6f04 	str.w	r6, [r4, #4]!
 800e730:	e7ef      	b.n	800e712 <net_memcpy+0x12>
 800e732:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e736:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e73a:	e7f2      	b.n	800e722 <net_memcpy+0x22>

0800e73c <udp_set_ip>:
 800e73c:	2204      	movs	r2, #4
 800e73e:	b513      	push	{r0, r1, r4, lr}
 800e740:	4604      	mov	r4, r0
 800e742:	6803      	ldr	r3, [r0, #0]
 800e744:	eb0d 0102 	add.w	r1, sp, r2
 800e748:	4808      	ldr	r0, [pc, #32]	; (800e76c <udp_set_ip+0x30>)
 800e74a:	9301      	str	r3, [sp, #4]
 800e74c:	f7ff ffce 	bl	800e6ec <memcpy.isra.0>
 800e750:	6862      	ldr	r2, [r4, #4]
 800e752:	4b07      	ldr	r3, [pc, #28]	; (800e770 <udp_set_ip+0x34>)
 800e754:	43d1      	mvns	r1, r2
 800e756:	6019      	str	r1, [r3, #0]
 800e758:	6823      	ldr	r3, [r4, #0]
 800e75a:	4013      	ands	r3, r2
 800e75c:	4a05      	ldr	r2, [pc, #20]	; (800e774 <udp_set_ip+0x38>)
 800e75e:	6013      	str	r3, [r2, #0]
 800e760:	68a2      	ldr	r2, [r4, #8]
 800e762:	4b05      	ldr	r3, [pc, #20]	; (800e778 <udp_set_ip+0x3c>)
 800e764:	601a      	str	r2, [r3, #0]
 800e766:	b002      	add	sp, #8
 800e768:	bd10      	pop	{r4, pc}
 800e76a:	bf00      	nop
 800e76c:	20008c02 	andcs	r8, r0, r2, lsl #24
 800e770:	20002f18 	andcs	r2, r0, r8, lsl pc
 800e774:	20002f20 	andcs	r2, r0, r0, lsr #30
 800e778:	20002f1c 	andcs	r2, r0, ip, lsl pc

0800e77c <udp_bind>:
 800e77c:	4a0a      	ldr	r2, [pc, #40]	; (800e7a8 <udp_bind+0x2c>)
 800e77e:	4603      	mov	r3, r0
 800e780:	b510      	push	{r4, lr}
 800e782:	2000      	movs	r0, #0
 800e784:	4614      	mov	r4, r2
 800e786:	f852 1b04 	ldr.w	r1, [r2], #4
 800e78a:	4299      	cmp	r1, r3
 800e78c:	d008      	beq.n	800e7a0 <udp_bind+0x24>
 800e78e:	b141      	cbz	r1, 800e7a2 <udp_bind+0x26>
 800e790:	3001      	adds	r0, #1
 800e792:	2808      	cmp	r0, #8
 800e794:	d1f7      	bne.n	800e786 <udp_bind+0xa>
 800e796:	4805      	ldr	r0, [pc, #20]	; (800e7ac <udp_bind+0x30>)
 800e798:	f002 fa7c 	bl	8010c94 <console_error>
 800e79c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e7a0:	bd10      	pop	{r4, pc}
 800e7a2:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800e7a6:	e7fb      	b.n	800e7a0 <udp_bind+0x24>
 800e7a8:	20002f28 	andcs	r2, r0, r8, lsr #30
 800e7ac:	0801538a 	stmdaeq	r1, {r1, r3, r7, r8, r9, ip, lr}

0800e7b0 <udp_unbind>:
 800e7b0:	4a0c      	ldr	r2, [pc, #48]	; (800e7e4 <udp_unbind+0x34>)
 800e7b2:	2300      	movs	r3, #0
 800e7b4:	4611      	mov	r1, r2
 800e7b6:	b510      	push	{r4, lr}
 800e7b8:	f852 4b04 	ldr.w	r4, [r2], #4
 800e7bc:	4284      	cmp	r4, r0
 800e7be:	d108      	bne.n	800e7d2 <udp_unbind+0x22>
 800e7c0:	2000      	movs	r0, #0
 800e7c2:	f640 3294 	movw	r2, #2964	; 0xb94
 800e7c6:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800e7ca:	4353      	muls	r3, r2
 800e7cc:	4a06      	ldr	r2, [pc, #24]	; (800e7e8 <udp_unbind+0x38>)
 800e7ce:	50d0      	str	r0, [r2, r3]
 800e7d0:	bd10      	pop	{r4, pc}
 800e7d2:	3301      	adds	r3, #1
 800e7d4:	2b08      	cmp	r3, #8
 800e7d6:	d1ef      	bne.n	800e7b8 <udp_unbind+0x8>
 800e7d8:	4804      	ldr	r0, [pc, #16]	; (800e7ec <udp_unbind+0x3c>)
 800e7da:	f002 fa5b 	bl	8010c94 <console_error>
 800e7de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e7e2:	e7f5      	b.n	800e7d0 <udp_unbind+0x20>
 800e7e4:	20002f28 	andcs	r2, r0, r8, lsr #30
 800e7e8:	20002f48 	andcs	r2, r0, r8, asr #30
 800e7ec:	0801538f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, ip, lr}

0800e7f0 <udp_recv>:
 800e7f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7f4:	4604      	mov	r4, r0
 800e7f6:	4698      	mov	r8, r3
 800e7f8:	f640 3394 	movw	r3, #2964	; 0xb94
 800e7fc:	435c      	muls	r4, r3
 800e7fe:	4608      	mov	r0, r1
 800e800:	4915      	ldr	r1, [pc, #84]	; (800e858 <udp_recv+0x68>)
 800e802:	190f      	adds	r7, r1, r4
 800e804:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800e808:	5b0b      	ldrh	r3, [r1, r4]
 800e80a:	4563      	cmp	r3, ip
 800e80c:	d021      	beq.n	800e852 <udp_recv+0x62>
 800e80e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800e812:	fb03 fc0c 	mul.w	ip, r3, ip
 800e816:	eb0c 0604 	add.w	r6, ip, r4
 800e81a:	440e      	add	r6, r1
 800e81c:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800e820:	3404      	adds	r4, #4
 800e822:	4295      	cmp	r5, r2
 800e824:	bf28      	it	cs
 800e826:	4615      	movcs	r5, r2
 800e828:	4464      	add	r4, ip
 800e82a:	462a      	mov	r2, r5
 800e82c:	4421      	add	r1, r4
 800e82e:	f7ff ff67 	bl	800e700 <net_memcpy>
 800e832:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800e836:	f8c8 3000 	str.w	r3, [r8]
 800e83a:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800e83e:	9b06      	ldr	r3, [sp, #24]
 800e840:	801a      	strh	r2, [r3, #0]
 800e842:	887b      	ldrh	r3, [r7, #2]
 800e844:	3301      	adds	r3, #1
 800e846:	f003 0301 	and.w	r3, r3, #1
 800e84a:	807b      	strh	r3, [r7, #2]
 800e84c:	4628      	mov	r0, r5
 800e84e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e852:	2500      	movs	r5, #0
 800e854:	e7fa      	b.n	800e84c <udp_recv+0x5c>
 800e856:	bf00      	nop
 800e858:	20002f48 	andcs	r2, r0, r8, asr #30

0800e85c <udp_recv2>:
 800e85c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e85e:	f640 3594 	movw	r5, #2964	; 0xb94
 800e862:	4368      	muls	r0, r5
 800e864:	4c0f      	ldr	r4, [pc, #60]	; (800e8a4 <udp_recv2+0x48>)
 800e866:	1827      	adds	r7, r4, r0
 800e868:	887d      	ldrh	r5, [r7, #2]
 800e86a:	5a26      	ldrh	r6, [r4, r0]
 800e86c:	42ae      	cmp	r6, r5
 800e86e:	d017      	beq.n	800e8a0 <udp_recv2+0x44>
 800e870:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800e874:	fb0c f505 	mul.w	r5, ip, r5
 800e878:	1d06      	adds	r6, r0, #4
 800e87a:	442e      	add	r6, r5
 800e87c:	4405      	add	r5, r0
 800e87e:	4426      	add	r6, r4
 800e880:	442c      	add	r4, r5
 800e882:	600e      	str	r6, [r1, #0]
 800e884:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800e888:	6011      	str	r1, [r2, #0]
 800e88a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800e88e:	801a      	strh	r2, [r3, #0]
 800e890:	887b      	ldrh	r3, [r7, #2]
 800e892:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800e896:	3301      	adds	r3, #1
 800e898:	f003 0301 	and.w	r3, r3, #1
 800e89c:	807b      	strh	r3, [r7, #2]
 800e89e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8a0:	2000      	movs	r0, #0
 800e8a2:	e7fc      	b.n	800e89e <udp_recv2+0x42>
 800e8a4:	20002f48 	andcs	r2, r0, r8, asr #30

0800e8a8 <udp_send>:
 800e8a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e8ac:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800e9e0 <udp_send+0x138>
 800e8b0:	461c      	mov	r4, r3
 800e8b2:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800e8b6:	4607      	mov	r7, r0
 800e8b8:	4688      	mov	r8, r1
 800e8ba:	4616      	mov	r6, r2
 800e8bc:	2b00      	cmp	r3, #0
 800e8be:	f000 808b 	beq.w	800e9d8 <udp_send+0x130>
 800e8c2:	1c63      	adds	r3, r4, #1
 800e8c4:	d141      	bne.n	800e94a <udp_send+0xa2>
 800e8c6:	4a47      	ldr	r2, [pc, #284]	; (800e9e4 <udp_send+0x13c>)
 800e8c8:	2307      	movs	r3, #7
 800e8ca:	4611      	mov	r1, r2
 800e8cc:	20ff      	movs	r0, #255	; 0xff
 800e8ce:	e001      	b.n	800e8d4 <udp_send+0x2c>
 800e8d0:	f802 0b01 	strb.w	r0, [r2], #1
 800e8d4:	3b01      	subs	r3, #1
 800e8d6:	d1fb      	bne.n	800e8d0 <udp_send+0x28>
 800e8d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e8dc:	83cb      	strh	r3, [r1, #30]
 800e8de:	840b      	strh	r3, [r1, #32]
 800e8e0:	2500      	movs	r5, #0
 800e8e2:	f8df a104 	ldr.w	sl, [pc, #260]	; 800e9e8 <udp_send+0x140>
 800e8e6:	4c3f      	ldr	r4, [pc, #252]	; (800e9e4 <udp_send+0x13c>)
 800e8e8:	f8ba 3000 	ldrh.w	r3, [sl]
 800e8ec:	2114      	movs	r1, #20
 800e8ee:	8263      	strh	r3, [r4, #18]
 800e8f0:	f106 031c 	add.w	r3, r6, #28
 800e8f4:	ba5b      	rev16	r3, r3
 800e8f6:	f104 000e 	add.w	r0, r4, #14
 800e8fa:	8223      	strh	r3, [r4, #16]
 800e8fc:	8325      	strh	r5, [r4, #24]
 800e8fe:	f001 fc1a 	bl	8010136 <net_chksum>
 800e902:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800e906:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800e90a:	ba5b      	rev16	r3, r3
 800e90c:	8463      	strh	r3, [r4, #34]	; 0x22
 800e90e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800e912:	4632      	mov	r2, r6
 800e914:	ba5b      	rev16	r3, r3
 800e916:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e918:	f106 0308 	add.w	r3, r6, #8
 800e91c:	ba5b      	rev16	r3, r3
 800e91e:	bf28      	it	cs
 800e920:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800e924:	4641      	mov	r1, r8
 800e926:	8320      	strh	r0, [r4, #24]
 800e928:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e92c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800e92e:	f7ff fee7 	bl	800e700 <net_memcpy>
 800e932:	4620      	mov	r0, r4
 800e934:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800e938:	f003 f9ee 	bl	8011d18 <emac_eth_send>
 800e93c:	f8ba 3000 	ldrh.w	r3, [sl]
 800e940:	4628      	mov	r0, r5
 800e942:	3301      	adds	r3, #1
 800e944:	f8aa 3000 	strh.w	r3, [sl]
 800e948:	e037      	b.n	800e9ba <udp_send+0x112>
 800e94a:	4b28      	ldr	r3, [pc, #160]	; (800e9ec <udp_send+0x144>)
 800e94c:	681b      	ldr	r3, [r3, #0]
 800e94e:	43a3      	bics	r3, r4
 800e950:	d10f      	bne.n	800e972 <udp_send+0xca>
 800e952:	2307      	movs	r3, #7
 800e954:	21ff      	movs	r1, #255	; 0xff
 800e956:	4a23      	ldr	r2, [pc, #140]	; (800e9e4 <udp_send+0x13c>)
 800e958:	e001      	b.n	800e95e <udp_send+0xb6>
 800e95a:	f802 1b01 	strb.w	r1, [r2], #1
 800e95e:	3b01      	subs	r3, #1
 800e960:	d1fb      	bne.n	800e95a <udp_send+0xb2>
 800e962:	2204      	movs	r2, #4
 800e964:	4822      	ldr	r0, [pc, #136]	; (800e9f0 <udp_send+0x148>)
 800e966:	eb0d 0102 	add.w	r1, sp, r2
 800e96a:	9401      	str	r4, [sp, #4]
 800e96c:	f7ff febe 	bl	800e6ec <memcpy.isra.0>
 800e970:	e7b6      	b.n	800e8e0 <udp_send+0x38>
 800e972:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800e976:	2be0      	cmp	r3, #224	; 0xe0
 800e978:	d10e      	bne.n	800e998 <udp_send+0xf0>
 800e97a:	491e      	ldr	r1, [pc, #120]	; (800e9f4 <udp_send+0x14c>)
 800e97c:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800e980:	70cb      	strb	r3, [r1, #3]
 800e982:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e986:	710b      	strb	r3, [r1, #4]
 800e988:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800e98c:	2206      	movs	r2, #6
 800e98e:	4815      	ldr	r0, [pc, #84]	; (800e9e4 <udp_send+0x13c>)
 800e990:	714b      	strb	r3, [r1, #5]
 800e992:	f7ff feab 	bl	800e6ec <memcpy.isra.0>
 800e996:	e7e4      	b.n	800e962 <udp_send+0xba>
 800e998:	4b17      	ldr	r3, [pc, #92]	; (800e9f8 <udp_send+0x150>)
 800e99a:	681b      	ldr	r3, [r3, #0]
 800e99c:	43a3      	bics	r3, r4
 800e99e:	d00f      	beq.n	800e9c0 <udp_send+0x118>
 800e9a0:	4d16      	ldr	r5, [pc, #88]	; (800e9fc <udp_send+0x154>)
 800e9a2:	4910      	ldr	r1, [pc, #64]	; (800e9e4 <udp_send+0x13c>)
 800e9a4:	6828      	ldr	r0, [r5, #0]
 800e9a6:	f001 f891 	bl	800facc <arp_cache_lookup>
 800e9aa:	682b      	ldr	r3, [r5, #0]
 800e9ac:	4298      	cmp	r0, r3
 800e9ae:	d0d8      	beq.n	800e962 <udp_send+0xba>
 800e9b0:	4813      	ldr	r0, [pc, #76]	; (800ea00 <udp_send+0x158>)
 800e9b2:	f002 f96f 	bl	8010c94 <console_error>
 800e9b6:	f06f 0002 	mvn.w	r0, #2
 800e9ba:	b002      	add	sp, #8
 800e9bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e9c0:	4620      	mov	r0, r4
 800e9c2:	4908      	ldr	r1, [pc, #32]	; (800e9e4 <udp_send+0x13c>)
 800e9c4:	f001 f882 	bl	800facc <arp_cache_lookup>
 800e9c8:	42a0      	cmp	r0, r4
 800e9ca:	d0ca      	beq.n	800e962 <udp_send+0xba>
 800e9cc:	480d      	ldr	r0, [pc, #52]	; (800ea04 <udp_send+0x15c>)
 800e9ce:	f002 f961 	bl	8010c94 <console_error>
 800e9d2:	f06f 0001 	mvn.w	r0, #1
 800e9d6:	e7f0      	b.n	800e9ba <udp_send+0x112>
 800e9d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e9dc:	e7ed      	b.n	800e9ba <udp_send+0x112>
 800e9de:	bf00      	nop
 800e9e0:	20002f28 	andcs	r2, r0, r8, lsr #30
 800e9e4:	20008be8 	andcs	r8, r0, r8, ror #23
 800e9e8:	20002f24 	andcs	r2, r0, r4, lsr #30
 800e9ec:	20002f18 	andcs	r2, r0, r8, lsl pc
 800e9f0:	20008c06 	andcs	r8, r0, r6, lsl #24
 800e9f4:	20000000 	andcs	r0, r0, r0
 800e9f8:	20002f20 	andcs	r2, r0, r0, lsr #30
 800e9fc:	20002f1c 	andcs	r2, r0, ip, lsl pc
 800ea00:	08015397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, ip, lr}
 800ea04:	080153bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, ip, lr}

0800ea08 <strlen>:
 800ea08:	4603      	mov	r3, r0
 800ea0a:	461a      	mov	r2, r3
 800ea0c:	7811      	ldrb	r1, [r2, #0]
 800ea0e:	3301      	adds	r3, #1
 800ea10:	2900      	cmp	r1, #0
 800ea12:	d1fa      	bne.n	800ea0a <strlen+0x2>
 800ea14:	1a10      	subs	r0, r2, r0
 800ea16:	4770      	bx	lr

0800ea18 <strcmp>:
 800ea18:	1e43      	subs	r3, r0, #1
 800ea1a:	3901      	subs	r1, #1
 800ea1c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ea20:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ea24:	4290      	cmp	r0, r2
 800ea26:	d001      	beq.n	800ea2c <strcmp+0x14>
 800ea28:	1a80      	subs	r0, r0, r2
 800ea2a:	e001      	b.n	800ea30 <strcmp+0x18>
 800ea2c:	2800      	cmp	r0, #0
 800ea2e:	d1f5      	bne.n	800ea1c <strcmp+0x4>
 800ea30:	4770      	bx	lr

0800ea32 <strcpy.isra.0>:
 800ea32:	3801      	subs	r0, #1
 800ea34:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ea38:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ea3c:	2b00      	cmp	r3, #0
 800ea3e:	d1f9      	bne.n	800ea34 <strcpy.isra.0+0x2>
 800ea40:	4770      	bx	lr

0800ea42 <strcat.isra.0>:
 800ea42:	b538      	push	{r3, r4, r5, lr}
 800ea44:	4604      	mov	r4, r0
 800ea46:	460d      	mov	r5, r1
 800ea48:	f7ff ffde 	bl	800ea08 <strlen>
 800ea4c:	4629      	mov	r1, r5
 800ea4e:	4420      	add	r0, r4
 800ea50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea54:	f7ff bfed 	b.w	800ea32 <strcpy.isra.0>

0800ea58 <MDNS::MDNS()>:
 800ea58:	b513      	push	{r0, r1, r4, lr}
 800ea5a:	4604      	mov	r4, r0
 800ea5c:	a901      	add	r1, sp, #4
 800ea5e:	4804      	ldr	r0, [pc, #16]	; (800ea70 <MDNS::MDNS()+0x18>)
 800ea60:	f002 fa72 	bl	8010f48 <inet_aton>
 800ea64:	4620      	mov	r0, r4
 800ea66:	4b03      	ldr	r3, [pc, #12]	; (800ea74 <MDNS::MDNS()+0x1c>)
 800ea68:	9a01      	ldr	r2, [sp, #4]
 800ea6a:	601a      	str	r2, [r3, #0]
 800ea6c:	b002      	add	sp, #8
 800ea6e:	bd10      	pop	{r4, pc}
 800ea70:	080153ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, ip, lr}
 800ea74:	200091dc 	ldrdcs	r9, [r0], -ip

0800ea78 <MDNS::SetName(char const*)>:
 800ea78:	b538      	push	{r3, r4, r5, lr}
 800ea7a:	4d0b      	ldr	r5, [pc, #44]	; (800eaa8 <MDNS::SetName(char const*)+0x30>)
 800ea7c:	460c      	mov	r4, r1
 800ea7e:	6828      	ldr	r0, [r5, #0]
 800ea80:	b108      	cbz	r0, 800ea86 <MDNS::SetName(char const*)+0xe>
 800ea82:	f002 fa5b 	bl	8010f3c <operator delete[](void*)>
 800ea86:	4620      	mov	r0, r4
 800ea88:	f7ff ffbe 	bl	800ea08 <strlen>
 800ea8c:	3007      	adds	r0, #7
 800ea8e:	f002 fa59 	bl	8010f44 <operator new[](unsigned int)>
 800ea92:	4621      	mov	r1, r4
 800ea94:	6028      	str	r0, [r5, #0]
 800ea96:	f7ff ffcc 	bl	800ea32 <strcpy.isra.0>
 800ea9a:	6828      	ldr	r0, [r5, #0]
 800ea9c:	4903      	ldr	r1, [pc, #12]	; (800eaac <MDNS::SetName(char const*)+0x34>)
 800ea9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eaa2:	f7ff bfce 	b.w	800ea42 <strcat.isra.0>
 800eaa6:	bf00      	nop
 800eaa8:	2000960c 	andcs	r9, r0, ip, lsl #12
 800eaac:	080153fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, lr}

0800eab0 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800eab0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eab4:	f04f 0e00 	mov.w	lr, #0
 800eab8:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800eabc:	4675      	mov	r5, lr
 800eabe:	4e1b      	ldr	r6, [pc, #108]	; (800eb2c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800eac0:	4f1b      	ldr	r7, [pc, #108]	; (800eb30 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800eac2:	780b      	ldrb	r3, [r1, #0]
 800eac4:	1c68      	adds	r0, r5, #1
 800eac6:	b913      	cbnz	r3, 800eace <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800eac8:	7013      	strb	r3, [r2, #0]
 800eaca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eace:	2b3f      	cmp	r3, #63	; 0x3f
 800ead0:	d91c      	bls.n	800eb0c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800ead2:	7849      	ldrb	r1, [r1, #1]
 800ead4:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800ead8:	430b      	orrs	r3, r1
 800eada:	6839      	ldr	r1, [r7, #0]
 800eadc:	f1be 0f00 	cmp.w	lr, #0
 800eae0:	bf08      	it	eq
 800eae2:	4605      	moveq	r5, r0
 800eae4:	5ccc      	ldrb	r4, [r1, r3]
 800eae6:	3301      	adds	r3, #1
 800eae8:	4419      	add	r1, r3
 800eaea:	2300      	movs	r3, #0
 800eaec:	42a3      	cmp	r3, r4
 800eaee:	5cc8      	ldrb	r0, [r1, r3]
 800eaf0:	d309      	bcc.n	800eb06 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800eaf2:	f04f 0e01 	mov.w	lr, #1
 800eaf6:	4421      	add	r1, r4
 800eaf8:	4414      	add	r4, r2
 800eafa:	780b      	ldrb	r3, [r1, #0]
 800eafc:	b10b      	cbz	r3, 800eb02 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800eafe:	f804 cb01 	strb.w	ip, [r4], #1
 800eb02:	4622      	mov	r2, r4
 800eb04:	e7dd      	b.n	800eac2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800eb06:	54d0      	strb	r0, [r2, r3]
 800eb08:	3301      	adds	r3, #1
 800eb0a:	e7ef      	b.n	800eaec <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800eb0c:	4688      	mov	r8, r1
 800eb0e:	18d4      	adds	r4, r2, r3
 800eb10:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800eb14:	f802 9b01 	strb.w	r9, [r2], #1
 800eb18:	4294      	cmp	r4, r2
 800eb1a:	d1f9      	bne.n	800eb10 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800eb1c:	1c5a      	adds	r2, r3, #1
 800eb1e:	4411      	add	r1, r2
 800eb20:	f1be 0f00 	cmp.w	lr, #0
 800eb24:	d1e9      	bne.n	800eafa <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800eb26:	181d      	adds	r5, r3, r0
 800eb28:	e7e7      	b.n	800eafa <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800eb2a:	bf00      	nop
 800eb2c:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800eb30:	20009610 	andcs	r9, r0, r0, lsl r6

0800eb34 <MDNS::FindFirstDotFromRight(char const*) const>:
 800eb34:	b510      	push	{r4, lr}
 800eb36:	4608      	mov	r0, r1
 800eb38:	460c      	mov	r4, r1
 800eb3a:	f7ff ff65 	bl	800ea08 <strlen>
 800eb3e:	4420      	add	r0, r4
 800eb40:	42a0      	cmp	r0, r4
 800eb42:	d903      	bls.n	800eb4c <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800eb44:	f810 3901 	ldrb.w	r3, [r0], #-1
 800eb48:	2b2e      	cmp	r3, #46	; 0x2e
 800eb4a:	d1f9      	bne.n	800eb40 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800eb4c:	3001      	adds	r0, #1
 800eb4e:	bd10      	pop	{r4, pc}

0800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800eb50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb52:	4614      	mov	r4, r2
 800eb54:	460f      	mov	r7, r1
 800eb56:	1c60      	adds	r0, r4, #1
 800eb58:	463d      	mov	r5, r7
 800eb5a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800eb5e:	b946      	cbnz	r6, 800eb72 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800eb60:	1a69      	subs	r1, r5, r1
 800eb62:	7021      	strb	r1, [r4, #0]
 800eb64:	7829      	ldrb	r1, [r5, #0]
 800eb66:	b949      	cbnz	r1, 800eb7c <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800eb68:	b10b      	cbz	r3, 800eb6e <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800eb6a:	f800 1b01 	strb.w	r1, [r0], #1
 800eb6e:	1a80      	subs	r0, r0, r2
 800eb70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb72:	2e2e      	cmp	r6, #46	; 0x2e
 800eb74:	d0f4      	beq.n	800eb60 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800eb76:	f800 6b01 	strb.w	r6, [r0], #1
 800eb7a:	e7ed      	b.n	800eb58 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800eb7c:	4604      	mov	r4, r0
 800eb7e:	1c69      	adds	r1, r5, #1
 800eb80:	e7e8      	b.n	800eb54 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800eb84 <MDNS::CreateAnswerLocalIpAddress()>:
 800eb84:	2384      	movs	r3, #132	; 0x84
 800eb86:	b510      	push	{r4, lr}
 800eb88:	4c0f      	ldr	r4, [pc, #60]	; (800ebc8 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800eb8a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800eb8e:	80e3      	strh	r3, [r4, #6]
 800eb90:	2300      	movs	r3, #0
 800eb92:	490e      	ldr	r1, [pc, #56]	; (800ebcc <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800eb94:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800eb98:	6809      	ldr	r1, [r1, #0]
 800eb9a:	f104 0210 	add.w	r2, r4, #16
 800eb9e:	2301      	movs	r3, #1
 800eba0:	f7ff ffd6 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800eba4:	490a      	ldr	r1, [pc, #40]	; (800ebd0 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800eba6:	1813      	adds	r3, r2, r0
 800eba8:	5011      	str	r1, [r2, r0]
 800ebaa:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800ebae:	605a      	str	r2, [r3, #4]
 800ebb0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ebb4:	811a      	strh	r2, [r3, #8]
 800ebb6:	4a07      	ldr	r2, [pc, #28]	; (800ebd4 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800ebb8:	6812      	ldr	r2, [r2, #0]
 800ebba:	6952      	ldr	r2, [r2, #20]
 800ebbc:	f8c3 200a 	str.w	r2, [r3, #10]
 800ebc0:	1b1b      	subs	r3, r3, r4
 800ebc2:	330a      	adds	r3, #10
 800ebc4:	6023      	str	r3, [r4, #0]
 800ebc6:	bd10      	pop	{r4, pc}
 800ebc8:	200091e0 	andcs	r9, r0, r0, ror #3
 800ebcc:	2000960c 	andcs	r9, r0, ip, lsl #12
 800ebd0:	01800100 	orreq	r0, r0, r0, lsl #2
 800ebd4:	20009614 	andcs	r9, r0, r4, lsl r6

0800ebd8 <MDNS::Start()>:
 800ebd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ebda:	4c1d      	ldr	r4, [pc, #116]	; (800ec50 <MDNS::Start()+0x78>)
 800ebdc:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800ebe0:	4605      	mov	r5, r0
 800ebe2:	6820      	ldr	r0, [r4, #0]
 800ebe4:	f000 fb28 	bl	800f238 <Network::Begin(unsigned short)>
 800ebe8:	4e1a      	ldr	r6, [pc, #104]	; (800ec54 <MDNS::Start()+0x7c>)
 800ebea:	4f1b      	ldr	r7, [pc, #108]	; (800ec58 <MDNS::Start()+0x80>)
 800ebec:	4601      	mov	r1, r0
 800ebee:	6030      	str	r0, [r6, #0]
 800ebf0:	683a      	ldr	r2, [r7, #0]
 800ebf2:	6820      	ldr	r0, [r4, #0]
 800ebf4:	f000 fb31 	bl	800f25a <Network::JoinGroup(int, unsigned int)>
 800ebf8:	4b18      	ldr	r3, [pc, #96]	; (800ec5c <MDNS::Start()+0x84>)
 800ebfa:	681b      	ldr	r3, [r3, #0]
 800ebfc:	b923      	cbnz	r3, 800ec08 <MDNS::Start()+0x30>
 800ebfe:	6821      	ldr	r1, [r4, #0]
 800ec00:	4628      	mov	r0, r5
 800ec02:	3120      	adds	r1, #32
 800ec04:	f7ff ff38 	bl	800ea78 <MDNS::SetName(char const*)>
 800ec08:	4628      	mov	r0, r5
 800ec0a:	f7ff ffbb 	bl	800eb84 <MDNS::CreateAnswerLocalIpAddress()>
 800ec0e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ec12:	4913      	ldr	r1, [pc, #76]	; (800ec60 <MDNS::Start()+0x88>)
 800ec14:	7830      	ldrb	r0, [r6, #0]
 800ec16:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ec1a:	9300      	str	r3, [sp, #0]
 800ec1c:	683b      	ldr	r3, [r7, #0]
 800ec1e:	f7ff fe43 	bl	800e8a8 <udp_send>
 800ec22:	233f      	movs	r3, #63	; 0x3f
 800ec24:	6820      	ldr	r0, [r4, #0]
 800ec26:	4c0f      	ldr	r4, [pc, #60]	; (800ec64 <MDNS::Start()+0x8c>)
 800ec28:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800ec2c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ec30:	b929      	cbnz	r1, 800ec3e <MDNS::Start()+0x66>
 800ec32:	4413      	add	r3, r2
 800ec34:	429a      	cmp	r2, r3
 800ec36:	d006      	beq.n	800ec46 <MDNS::Start()+0x6e>
 800ec38:	f802 1b01 	strb.w	r1, [r2], #1
 800ec3c:	e7fa      	b.n	800ec34 <MDNS::Start()+0x5c>
 800ec3e:	3b01      	subs	r3, #1
 800ec40:	f802 1b01 	strb.w	r1, [r2], #1
 800ec44:	d1f2      	bne.n	800ec2c <MDNS::Start()+0x54>
 800ec46:	2300      	movs	r3, #0
 800ec48:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800ec4c:	b003      	add	sp, #12
 800ec4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec50:	20009614 	andcs	r9, r0, r4, lsl r6
 800ec54:	20000008 	andcs	r0, r0, r8
 800ec58:	200091dc 	ldrdcs	r9, [r0], -ip
 800ec5c:	2000960c 	andcs	r9, r0, ip, lsl #12
 800ec60:	200091e0 	andcs	r9, r0, r0, ror #3
 800ec64:	080153fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, lr}

0800ec68 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800ec68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec6c:	4c1b      	ldr	r4, [pc, #108]	; (800ecdc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800ec6e:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ec72:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ec76:	2300      	movs	r3, #0
 800ec78:	f854 100c 	ldr.w	r1, [r4, ip]
 800ec7c:	4607      	mov	r7, r0
 800ec7e:	f7ff ff67 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ec82:	2301      	movs	r3, #1
 800ec84:	7bac      	ldrb	r4, [r5, #14]
 800ec86:	4616      	mov	r6, r2
 800ec88:	4915      	ldr	r1, [pc, #84]	; (800ece0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ec8a:	4402      	add	r2, r0
 800ec8c:	4815      	ldr	r0, [pc, #84]	; (800ece4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800ec8e:	429c      	cmp	r4, r3
 800ec90:	bf18      	it	ne
 800ec92:	4601      	movne	r1, r0
 800ec94:	4638      	mov	r0, r7
 800ec96:	f7ff ff5b 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ec9a:	4b13      	ldr	r3, [pc, #76]	; (800ece8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800ec9c:	1814      	adds	r4, r2, r0
 800ec9e:	5013      	str	r3, [r2, r0]
 800eca0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800eca4:	6063      	str	r3, [r4, #4]
 800eca6:	4b11      	ldr	r3, [pc, #68]	; (800ecec <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800eca8:	f8d3 8000 	ldr.w	r8, [r3]
 800ecac:	4640      	mov	r0, r8
 800ecae:	f7ff feab 	bl	800ea08 <strlen>
 800ecb2:	f100 0308 	add.w	r3, r0, #8
 800ecb6:	ba5b      	rev16	r3, r3
 800ecb8:	8123      	strh	r3, [r4, #8]
 800ecba:	2300      	movs	r3, #0
 800ecbc:	f8c4 300a 	str.w	r3, [r4, #10]
 800ecc0:	89ab      	ldrh	r3, [r5, #12]
 800ecc2:	f104 0210 	add.w	r2, r4, #16
 800ecc6:	ba5b      	rev16	r3, r3
 800ecc8:	81e3      	strh	r3, [r4, #14]
 800ecca:	4641      	mov	r1, r8
 800eccc:	2301      	movs	r3, #1
 800ecce:	4638      	mov	r0, r7
 800ecd0:	f7ff ff3e 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecd4:	4410      	add	r0, r2
 800ecd6:	1b80      	subs	r0, r0, r6
 800ecd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecdc:	200093e4 	andcs	r9, r0, r4, ror #7
 800ece0:	080153fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 800ece4:	08015417 	stmdaeq	r1, {r0, r1, r2, r4, sl, ip, lr}
 800ece8:	01802100 	orreq	r2, r0, r0, lsl #2
 800ecec:	2000960c 	andcs	r9, r0, ip, lsl #12

0800ecf0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800ecf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ecf4:	4e19      	ldr	r6, [pc, #100]	; (800ed5c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800ecf6:	010f      	lsls	r7, r1, #4
 800ecf8:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800ecfc:	2300      	movs	r3, #0
 800ecfe:	59f1      	ldr	r1, [r6, r7]
 800ed00:	4604      	mov	r4, r0
 800ed02:	f7ff ff25 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed06:	2301      	movs	r3, #1
 800ed08:	7bae      	ldrb	r6, [r5, #14]
 800ed0a:	4690      	mov	r8, r2
 800ed0c:	4914      	ldr	r1, [pc, #80]	; (800ed60 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800ed0e:	4402      	add	r2, r0
 800ed10:	4814      	ldr	r0, [pc, #80]	; (800ed64 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800ed12:	429e      	cmp	r6, r3
 800ed14:	bf18      	it	ne
 800ed16:	4601      	movne	r1, r0
 800ed18:	4620      	mov	r0, r4
 800ed1a:	f7ff ff19 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed1e:	4b12      	ldr	r3, [pc, #72]	; (800ed68 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800ed20:	1816      	adds	r6, r2, r0
 800ed22:	5013      	str	r3, [r2, r0]
 800ed24:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ed28:	68a8      	ldr	r0, [r5, #8]
 800ed2a:	6073      	str	r3, [r6, #4]
 800ed2c:	f106 040b 	add.w	r4, r6, #11
 800ed30:	b938      	cbnz	r0, 800ed42 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800ed32:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ed36:	72b0      	strb	r0, [r6, #10]
 800ed38:	8133      	strh	r3, [r6, #8]
 800ed3a:	eba4 0008 	sub.w	r0, r4, r8
 800ed3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed42:	f7ff fe61 	bl	800ea08 <strlen>
 800ed46:	4607      	mov	r7, r0
 800ed48:	1c43      	adds	r3, r0, #1
 800ed4a:	72b0      	strb	r0, [r6, #10]
 800ed4c:	ba5b      	rev16	r3, r3
 800ed4e:	4620      	mov	r0, r4
 800ed50:	68a9      	ldr	r1, [r5, #8]
 800ed52:	8133      	strh	r3, [r6, #8]
 800ed54:	f7ff fe6d 	bl	800ea32 <strcpy.isra.0>
 800ed58:	443c      	add	r4, r7
 800ed5a:	e7ee      	b.n	800ed3a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800ed5c:	200093e4 	andcs	r9, r0, r4, ror #7
 800ed60:	080153fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 800ed64:	08015417 	stmdaeq	r1, {r0, r1, r2, r4, sl, ip, lr}
 800ed68:	01801000 	orreq	r1, r0, r0

0800ed6c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800ed6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed70:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800edd4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800ed74:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800ed78:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800ed7c:	6869      	ldr	r1, [r5, #4]
 800ed7e:	2301      	movs	r3, #1
 800ed80:	4607      	mov	r7, r0
 800ed82:	f7ff fee5 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed86:	4b14      	ldr	r3, [pc, #80]	; (800edd8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800ed88:	f858 8009 	ldr.w	r8, [r8, r9]
 800ed8c:	5013      	str	r3, [r2, r0]
 800ed8e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ed92:	1816      	adds	r6, r2, r0
 800ed94:	6073      	str	r3, [r6, #4]
 800ed96:	4640      	mov	r0, r8
 800ed98:	4614      	mov	r4, r2
 800ed9a:	f7ff fe35 	bl	800ea08 <strlen>
 800ed9e:	f100 030d 	add.w	r3, r0, #13
 800eda2:	ba5b      	rev16	r3, r3
 800eda4:	4641      	mov	r1, r8
 800eda6:	8133      	strh	r3, [r6, #8]
 800eda8:	f106 020a 	add.w	r2, r6, #10
 800edac:	2300      	movs	r3, #0
 800edae:	4638      	mov	r0, r7
 800edb0:	f7ff fece 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edb4:	2301      	movs	r3, #1
 800edb6:	4402      	add	r2, r0
 800edb8:	7bad      	ldrb	r5, [r5, #14]
 800edba:	4808      	ldr	r0, [pc, #32]	; (800eddc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800edbc:	4908      	ldr	r1, [pc, #32]	; (800ede0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800edbe:	429d      	cmp	r5, r3
 800edc0:	bf18      	it	ne
 800edc2:	4601      	movne	r1, r0
 800edc4:	4638      	mov	r0, r7
 800edc6:	f7ff fec3 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edca:	4410      	add	r0, r2
 800edcc:	1b00      	subs	r0, r0, r4
 800edce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edd2:	bf00      	nop
 800edd4:	200093e4 	andcs	r9, r0, r4, ror #7
 800edd8:	01000c00 	tsteq	r0, r0, lsl #24
 800eddc:	08015417 	stmdaeq	r1, {r0, r1, r2, r4, sl, ip, lr}
 800ede0:	080153fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, lr}

0800ede4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800ede4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ede6:	460f      	mov	r7, r1
 800ede8:	2301      	movs	r3, #1
 800edea:	490f      	ldr	r1, [pc, #60]	; (800ee28 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800edec:	4606      	mov	r6, r0
 800edee:	f7ff feaf 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edf2:	4b0e      	ldr	r3, [pc, #56]	; (800ee2c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800edf4:	490e      	ldr	r1, [pc, #56]	; (800ee30 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800edf6:	5013      	str	r3, [r2, r0]
 800edf8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800edfc:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800ee00:	684f      	ldr	r7, [r1, #4]
 800ee02:	1815      	adds	r5, r2, r0
 800ee04:	606b      	str	r3, [r5, #4]
 800ee06:	4638      	mov	r0, r7
 800ee08:	4614      	mov	r4, r2
 800ee0a:	f7ff fdfd 	bl	800ea08 <strlen>
 800ee0e:	1c83      	adds	r3, r0, #2
 800ee10:	ba5b      	rev16	r3, r3
 800ee12:	812b      	strh	r3, [r5, #8]
 800ee14:	f105 020a 	add.w	r2, r5, #10
 800ee18:	2301      	movs	r3, #1
 800ee1a:	4639      	mov	r1, r7
 800ee1c:	4630      	mov	r0, r6
 800ee1e:	f7ff fe97 	bl	800eb50 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ee22:	4410      	add	r0, r2
 800ee24:	1b00      	subs	r0, r0, r4
 800ee26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee28:	08015405 	stmdaeq	r1, {r0, r2, sl, ip, lr}
 800ee2c:	01000c00 	tsteq	r0, r0, lsl #24
 800ee30:	200093e4 	andcs	r9, r0, r4, ror #7

0800ee34 <MDNS::CreateMDNSMessage(unsigned int)>:
 800ee34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee36:	2384      	movs	r3, #132	; 0x84
 800ee38:	4d19      	ldr	r5, [pc, #100]	; (800eea0 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800ee3a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800ee3e:	80eb      	strh	r3, [r5, #6]
 800ee40:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ee44:	f105 0410 	add.w	r4, r5, #16
 800ee48:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800ee4c:	4622      	mov	r2, r4
 800ee4e:	4606      	mov	r6, r0
 800ee50:	460f      	mov	r7, r1
 800ee52:	f7ff ff09 	bl	800ec68 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ee56:	4404      	add	r4, r0
 800ee58:	4622      	mov	r2, r4
 800ee5a:	4639      	mov	r1, r7
 800ee5c:	4630      	mov	r0, r6
 800ee5e:	f7ff ff47 	bl	800ecf0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ee62:	4404      	add	r4, r0
 800ee64:	4622      	mov	r2, r4
 800ee66:	4639      	mov	r1, r7
 800ee68:	4630      	mov	r0, r6
 800ee6a:	f7ff ffbb 	bl	800ede4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ee6e:	4404      	add	r4, r0
 800ee70:	4622      	mov	r2, r4
 800ee72:	4639      	mov	r1, r7
 800ee74:	4630      	mov	r0, r6
 800ee76:	f7ff ff79 	bl	800ed6c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800ee7a:	4a0a      	ldr	r2, [pc, #40]	; (800eea4 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800ee7c:	4404      	add	r4, r0
 800ee7e:	f852 3b10 	ldr.w	r3, [r2], #16
 800ee82:	1e60      	subs	r0, r4, #1
 800ee84:	3b0c      	subs	r3, #12
 800ee86:	4619      	mov	r1, r3
 800ee88:	3901      	subs	r1, #1
 800ee8a:	d204      	bcs.n	800ee96 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800ee8c:	441c      	add	r4, r3
 800ee8e:	4b06      	ldr	r3, [pc, #24]	; (800eea8 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800ee90:	1ae4      	subs	r4, r4, r3
 800ee92:	602c      	str	r4, [r5, #0]
 800ee94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee96:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ee9a:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ee9e:	e7f3      	b.n	800ee88 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800eea0:	20009408 	andcs	r9, r0, r8, lsl #8
 800eea4:	200091e0 	andcs	r9, r0, r0, ror #3
 800eea8:	2000940c 	andcs	r9, r0, ip, lsl #8

0800eeac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800eeac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb0:	4d40      	ldr	r5, [pc, #256]	; (800efb4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800eeb2:	b085      	sub	sp, #20
 800eeb4:	682c      	ldr	r4, [r5, #0]
 800eeb6:	4680      	mov	r8, r0
 800eeb8:	460f      	mov	r7, r1
 800eeba:	4616      	mov	r6, r2
 800eebc:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800eec0:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800eec4:	b11c      	cbz	r4, 800eece <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800eec6:	692a      	ldr	r2, [r5, #16]
 800eec8:	2a00      	cmp	r2, #0
 800eeca:	d16e      	bne.n	800efaa <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800eecc:	2401      	movs	r4, #1
 800eece:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800eed2:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800eed6:	8193      	strh	r3, [r2, #12]
 800eed8:	f882 b00e 	strb.w	fp, [r2, #14]
 800eedc:	2f00      	cmp	r7, #0
 800eede:	d154      	bne.n	800ef8a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800eee0:	4b35      	ldr	r3, [pc, #212]	; (800efb8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800eee2:	6818      	ldr	r0, [r3, #0]
 800eee4:	3020      	adds	r0, #32
 800eee6:	f7ff fd8f 	bl	800ea08 <strlen>
 800eeea:	4607      	mov	r7, r0
 800eeec:	4630      	mov	r0, r6
 800eeee:	f7ff fd8b 	bl	800ea08 <strlen>
 800eef2:	4438      	add	r0, r7
 800eef4:	3001      	adds	r0, #1
 800eef6:	f002 f825 	bl	8010f44 <operator new[](unsigned int)>
 800eefa:	4b2f      	ldr	r3, [pc, #188]	; (800efb8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800eefc:	f845 0009 	str.w	r0, [r5, r9]
 800ef00:	6819      	ldr	r1, [r3, #0]
 800ef02:	3120      	adds	r1, #32
 800ef04:	f7ff fd95 	bl	800ea32 <strcpy.isra.0>
 800ef08:	f855 0009 	ldr.w	r0, [r5, r9]
 800ef0c:	4631      	mov	r1, r6
 800ef0e:	f7ff fd98 	bl	800ea42 <strcat.isra.0>
 800ef12:	4631      	mov	r1, r6
 800ef14:	4640      	mov	r0, r8
 800ef16:	f7ff fe0d 	bl	800eb34 <MDNS::FindFirstDotFromRight(char const*) const>
 800ef1a:	eb05 0709 	add.w	r7, r5, r9
 800ef1e:	4605      	mov	r5, r0
 800ef20:	f7ff fd72 	bl	800ea08 <strlen>
 800ef24:	300d      	adds	r0, #13
 800ef26:	f002 f80d 	bl	8010f44 <operator new[](unsigned int)>
 800ef2a:	4629      	mov	r1, r5
 800ef2c:	6078      	str	r0, [r7, #4]
 800ef2e:	f7ff fd80 	bl	800ea32 <strcpy.isra.0>
 800ef32:	4922      	ldr	r1, [pc, #136]	; (800efbc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ef34:	6878      	ldr	r0, [r7, #4]
 800ef36:	f7ff fd84 	bl	800ea42 <strcat.isra.0>
 800ef3a:	4921      	ldr	r1, [pc, #132]	; (800efc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ef3c:	4b21      	ldr	r3, [pc, #132]	; (800efc4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800ef3e:	6878      	ldr	r0, [r7, #4]
 800ef40:	f1bb 0f01 	cmp.w	fp, #1
 800ef44:	bf18      	it	ne
 800ef46:	4619      	movne	r1, r3
 800ef48:	f7ff fd7b 	bl	800ea42 <strcat.isra.0>
 800ef4c:	f1ba 0f00 	cmp.w	sl, #0
 800ef50:	d009      	beq.n	800ef66 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800ef52:	4650      	mov	r0, sl
 800ef54:	f7ff fd58 	bl	800ea08 <strlen>
 800ef58:	3001      	adds	r0, #1
 800ef5a:	f001 fff3 	bl	8010f44 <operator new[](unsigned int)>
 800ef5e:	4651      	mov	r1, sl
 800ef60:	60b8      	str	r0, [r7, #8]
 800ef62:	f7ff fd66 	bl	800ea32 <strcpy.isra.0>
 800ef66:	4621      	mov	r1, r4
 800ef68:	4640      	mov	r0, r8
 800ef6a:	f7ff ff63 	bl	800ee34 <MDNS::CreateMDNSMessage(unsigned int)>
 800ef6e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ef72:	4915      	ldr	r1, [pc, #84]	; (800efc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800ef74:	4815      	ldr	r0, [pc, #84]	; (800efcc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800ef76:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ef7a:	9300      	str	r3, [sp, #0]
 800ef7c:	4b14      	ldr	r3, [pc, #80]	; (800efd0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800ef7e:	7800      	ldrb	r0, [r0, #0]
 800ef80:	681b      	ldr	r3, [r3, #0]
 800ef82:	f7ff fc91 	bl	800e8a8 <udp_send>
 800ef86:	2001      	movs	r0, #1
 800ef88:	e010      	b.n	800efac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800ef8a:	4638      	mov	r0, r7
 800ef8c:	f7ff fd3c 	bl	800ea08 <strlen>
 800ef90:	9003      	str	r0, [sp, #12]
 800ef92:	4630      	mov	r0, r6
 800ef94:	f7ff fd38 	bl	800ea08 <strlen>
 800ef98:	9b03      	ldr	r3, [sp, #12]
 800ef9a:	4418      	add	r0, r3
 800ef9c:	3001      	adds	r0, #1
 800ef9e:	f001 ffd1 	bl	8010f44 <operator new[](unsigned int)>
 800efa2:	4639      	mov	r1, r7
 800efa4:	f845 0009 	str.w	r0, [r5, r9]
 800efa8:	e7ac      	b.n	800ef04 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800efaa:	2000      	movs	r0, #0
 800efac:	b005      	add	sp, #20
 800efae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efb2:	bf00      	nop
 800efb4:	200093e4 	andcs	r9, r0, r4, ror #7
 800efb8:	20009614 	andcs	r9, r0, r4, lsl r6
 800efbc:	080137df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, ip, sp}
 800efc0:	080153fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 800efc4:	08015417 	stmdaeq	r1, {r0, r1, r2, r4, sl, ip, lr}
 800efc8:	20009408 	andcs	r9, r0, r8, lsl #8
 800efcc:	20000008 	andcs	r0, r0, r8
 800efd0:	200091dc 	ldrdcs	r9, [r0], -ip

0800efd4 <MDNS::HandleRequest(unsigned short)>:
 800efd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efd8:	4605      	mov	r5, r0
 800efda:	2700      	movs	r7, #0
 800efdc:	f04f 080c 	mov.w	r8, #12
 800efe0:	b0c5      	sub	sp, #276	; 0x114
 800efe2:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800f0a4 <MDNS::HandleRequest(unsigned short)+0xd0>
 800efe6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800f0a8 <MDNS::HandleRequest(unsigned short)+0xd4>
 800efea:	9103      	str	r1, [sp, #12]
 800efec:	9b03      	ldr	r3, [sp, #12]
 800efee:	42bb      	cmp	r3, r7
 800eff0:	d802      	bhi.n	800eff8 <MDNS::HandleRequest(unsigned short)+0x24>
 800eff2:	b045      	add	sp, #276	; 0x114
 800eff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eff8:	f8da 1000 	ldr.w	r1, [sl]
 800effc:	aa04      	add	r2, sp, #16
 800effe:	4441      	add	r1, r8
 800f000:	4628      	mov	r0, r5
 800f002:	f7ff fd55 	bl	800eab0 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800f006:	f8da 2000 	ldr.w	r2, [sl]
 800f00a:	4440      	add	r0, r8
 800f00c:	1813      	adds	r3, r2, r0
 800f00e:	885b      	ldrh	r3, [r3, #2]
 800f010:	f100 0804 	add.w	r8, r0, #4
 800f014:	ba5b      	rev16	r3, r3
 800f016:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800f01a:	2b01      	cmp	r3, #1
 800f01c:	d13d      	bne.n	800f09a <MDNS::HandleRequest(unsigned short)+0xc6>
 800f01e:	5a14      	ldrh	r4, [r2, r0]
 800f020:	4b22      	ldr	r3, [pc, #136]	; (800f0ac <MDNS::HandleRequest(unsigned short)+0xd8>)
 800f022:	ba64      	rev16	r4, r4
 800f024:	6818      	ldr	r0, [r3, #0]
 800f026:	a904      	add	r1, sp, #16
 800f028:	b2a4      	uxth	r4, r4
 800f02a:	f7ff fcf5 	bl	800ea18 <strcmp>
 800f02e:	b968      	cbnz	r0, 800f04c <MDNS::HandleRequest(unsigned short)+0x78>
 800f030:	2c01      	cmp	r4, #1
 800f032:	d10b      	bne.n	800f04c <MDNS::HandleRequest(unsigned short)+0x78>
 800f034:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f038:	491d      	ldr	r1, [pc, #116]	; (800f0b0 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800f03a:	481e      	ldr	r0, [pc, #120]	; (800f0b4 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f03c:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f040:	9300      	str	r3, [sp, #0]
 800f042:	4b1d      	ldr	r3, [pc, #116]	; (800f0b8 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f044:	7800      	ldrb	r0, [r0, #0]
 800f046:	681b      	ldr	r3, [r3, #0]
 800f048:	f7ff fc2e 	bl	800e8a8 <udp_send>
 800f04c:	481b      	ldr	r0, [pc, #108]	; (800f0bc <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f04e:	a904      	add	r1, sp, #16
 800f050:	f7ff fce2 	bl	800ea18 <strcmp>
 800f054:	f04f 0900 	mov.w	r9, #0
 800f058:	4e19      	ldr	r6, [pc, #100]	; (800f0c0 <MDNS::HandleRequest(unsigned short)+0xec>)
 800f05a:	9002      	str	r0, [sp, #8]
 800f05c:	6833      	ldr	r3, [r6, #0]
 800f05e:	b1c3      	cbz	r3, 800f092 <MDNS::HandleRequest(unsigned short)+0xbe>
 800f060:	9b02      	ldr	r3, [sp, #8]
 800f062:	b123      	cbz	r3, 800f06e <MDNS::HandleRequest(unsigned short)+0x9a>
 800f064:	6870      	ldr	r0, [r6, #4]
 800f066:	a904      	add	r1, sp, #16
 800f068:	f7ff fcd6 	bl	800ea18 <strcmp>
 800f06c:	b988      	cbnz	r0, 800f092 <MDNS::HandleRequest(unsigned short)+0xbe>
 800f06e:	2c0c      	cmp	r4, #12
 800f070:	d10f      	bne.n	800f092 <MDNS::HandleRequest(unsigned short)+0xbe>
 800f072:	4649      	mov	r1, r9
 800f074:	4628      	mov	r0, r5
 800f076:	f7ff fedd 	bl	800ee34 <MDNS::CreateMDNSMessage(unsigned int)>
 800f07a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f07e:	480d      	ldr	r0, [pc, #52]	; (800f0b4 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f080:	9300      	str	r3, [sp, #0]
 800f082:	4b0d      	ldr	r3, [pc, #52]	; (800f0b8 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f084:	f8bb 2000 	ldrh.w	r2, [fp]
 800f088:	681b      	ldr	r3, [r3, #0]
 800f08a:	490e      	ldr	r1, [pc, #56]	; (800f0c4 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800f08c:	7800      	ldrb	r0, [r0, #0]
 800f08e:	f7ff fc0b 	bl	800e8a8 <udp_send>
 800f092:	3610      	adds	r6, #16
 800f094:	f1b9 0f00 	cmp.w	r9, #0
 800f098:	d001      	beq.n	800f09e <MDNS::HandleRequest(unsigned short)+0xca>
 800f09a:	3701      	adds	r7, #1
 800f09c:	e7a6      	b.n	800efec <MDNS::HandleRequest(unsigned short)+0x18>
 800f09e:	f04f 0901 	mov.w	r9, #1
 800f0a2:	e7db      	b.n	800f05c <MDNS::HandleRequest(unsigned short)+0x88>
 800f0a4:	20009610 	andcs	r9, r0, r0, lsl r6
 800f0a8:	20009408 	andcs	r9, r0, r8, lsl #8
 800f0ac:	2000960c 	andcs	r9, r0, ip, lsl #12
 800f0b0:	200091e0 	andcs	r9, r0, r0, ror #3
 800f0b4:	20000008 	andcs	r0, r0, r8
 800f0b8:	200091dc 	ldrdcs	r9, [r0], -ip
 800f0bc:	08015405 	stmdaeq	r1, {r0, r2, sl, ip, lr}
 800f0c0:	200093e4 	andcs	r9, r0, r4, ror #7
 800f0c4:	2000940c 	andcs	r9, r0, ip, lsl #8

0800f0c8 <MDNS::Parse()>:
 800f0c8:	4b08      	ldr	r3, [pc, #32]	; (800f0ec <MDNS::Parse()+0x24>)
 800f0ca:	681a      	ldr	r2, [r3, #0]
 800f0cc:	8853      	ldrh	r3, [r2, #2]
 800f0ce:	ba5b      	rev16	r3, r3
 800f0d0:	b299      	uxth	r1, r3
 800f0d2:	041b      	lsls	r3, r3, #16
 800f0d4:	d408      	bmi.n	800f0e8 <MDNS::Parse()+0x20>
 800f0d6:	0b89      	lsrs	r1, r1, #14
 800f0d8:	d106      	bne.n	800f0e8 <MDNS::Parse()+0x20>
 800f0da:	8891      	ldrh	r1, [r2, #4]
 800f0dc:	b28b      	uxth	r3, r1
 800f0de:	b11b      	cbz	r3, 800f0e8 <MDNS::Parse()+0x20>
 800f0e0:	ba49      	rev16	r1, r1
 800f0e2:	b289      	uxth	r1, r1
 800f0e4:	f7ff bf76 	b.w	800efd4 <MDNS::HandleRequest(unsigned short)>
 800f0e8:	4770      	bx	lr
 800f0ea:	bf00      	nop
 800f0ec:	20009610 	andcs	r9, r0, r0, lsl r6

0800f0f0 <MDNS::Run()>:
 800f0f0:	b538      	push	{r3, r4, r5, lr}
 800f0f2:	4d0c      	ldr	r5, [pc, #48]	; (800f124 <MDNS::Run()+0x34>)
 800f0f4:	4604      	mov	r4, r0
 800f0f6:	480c      	ldr	r0, [pc, #48]	; (800f128 <MDNS::Run()+0x38>)
 800f0f8:	462b      	mov	r3, r5
 800f0fa:	4a0c      	ldr	r2, [pc, #48]	; (800f12c <MDNS::Run()+0x3c>)
 800f0fc:	490c      	ldr	r1, [pc, #48]	; (800f130 <MDNS::Run()+0x40>)
 800f0fe:	7800      	ldrb	r0, [r0, #0]
 800f100:	f7ff fbac 	bl	800e85c <udp_recv2>
 800f104:	4b0b      	ldr	r3, [pc, #44]	; (800f134 <MDNS::Run()+0x44>)
 800f106:	882a      	ldrh	r2, [r5, #0]
 800f108:	8018      	strh	r0, [r3, #0]
 800f10a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f10e:	429a      	cmp	r2, r3
 800f110:	d106      	bne.n	800f120 <MDNS::Run()+0x30>
 800f112:	280c      	cmp	r0, #12
 800f114:	d904      	bls.n	800f120 <MDNS::Run()+0x30>
 800f116:	4620      	mov	r0, r4
 800f118:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f11c:	f7ff bfd4 	b.w	800f0c8 <MDNS::Parse()>
 800f120:	bd38      	pop	{r3, r4, r5, pc}
 800f122:	bf00      	nop
 800f124:	200091d8 	ldrdcs	r9, [r0], -r8
 800f128:	20000008 	andcs	r0, r0, r8
 800f12c:	200091d4 	ldrdcs	r9, [r0], -r4
 800f130:	20009610 	andcs	r9, r0, r0, lsl r6
 800f134:	20009404 	andcs	r9, r0, r4, lsl #8

0800f138 <MDNS::Print()>:
 800f138:	b510      	push	{r4, lr}
 800f13a:	4816      	ldr	r0, [pc, #88]	; (800f194 <MDNS::Print()+0x5c>)
 800f13c:	f7fa f8ca 	bl	80092d4 <printf>
 800f140:	4b15      	ldr	r3, [pc, #84]	; (800f198 <MDNS::Print()+0x60>)
 800f142:	681b      	ldr	r3, [r3, #0]
 800f144:	3301      	adds	r3, #1
 800f146:	d104      	bne.n	800f152 <MDNS::Print()+0x1a>
 800f148:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f14c:	4813      	ldr	r0, [pc, #76]	; (800f19c <MDNS::Print()+0x64>)
 800f14e:	f7fa b8c1 	b.w	80092d4 <printf>
 800f152:	4b13      	ldr	r3, [pc, #76]	; (800f1a0 <MDNS::Print()+0x68>)
 800f154:	4c13      	ldr	r4, [pc, #76]	; (800f1a4 <MDNS::Print()+0x6c>)
 800f156:	6819      	ldr	r1, [r3, #0]
 800f158:	4813      	ldr	r0, [pc, #76]	; (800f1a8 <MDNS::Print()+0x70>)
 800f15a:	f7fa f8bb 	bl	80092d4 <printf>
 800f15e:	6823      	ldr	r3, [r4, #0]
 800f160:	b14b      	cbz	r3, 800f176 <MDNS::Print()+0x3e>
 800f162:	4a12      	ldr	r2, [pc, #72]	; (800f1ac <MDNS::Print()+0x74>)
 800f164:	68a3      	ldr	r3, [r4, #8]
 800f166:	6861      	ldr	r1, [r4, #4]
 800f168:	2b00      	cmp	r3, #0
 800f16a:	bf08      	it	eq
 800f16c:	4613      	moveq	r3, r2
 800f16e:	4810      	ldr	r0, [pc, #64]	; (800f1b0 <MDNS::Print()+0x78>)
 800f170:	89a2      	ldrh	r2, [r4, #12]
 800f172:	f7fa f8af 	bl	80092d4 <printf>
 800f176:	6923      	ldr	r3, [r4, #16]
 800f178:	b15b      	cbz	r3, 800f192 <MDNS::Print()+0x5a>
 800f17a:	69a3      	ldr	r3, [r4, #24]
 800f17c:	4a0b      	ldr	r2, [pc, #44]	; (800f1ac <MDNS::Print()+0x74>)
 800f17e:	6961      	ldr	r1, [r4, #20]
 800f180:	2b00      	cmp	r3, #0
 800f182:	bf08      	it	eq
 800f184:	4613      	moveq	r3, r2
 800f186:	480a      	ldr	r0, [pc, #40]	; (800f1b0 <MDNS::Print()+0x78>)
 800f188:	8ba2      	ldrh	r2, [r4, #28]
 800f18a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f18e:	f7fa b8a1 	b.w	80092d4 <printf>
 800f192:	bd10      	pop	{r4, pc}
 800f194:	08015422 	stmdaeq	r1, {r1, r5, sl, ip, lr}
 800f198:	20000008 	andcs	r0, r0, r8
 800f19c:	08015428 	stmdaeq	r1, {r3, r5, sl, ip, lr}
 800f1a0:	2000960c 	andcs	r9, r0, ip, lsl #12
 800f1a4:	200093e4 	andcs	r9, r0, r4, ror #7
 800f1a8:	08015436 	stmdaeq	r1, {r1, r2, r4, r5, sl, ip, lr}
 800f1ac:	08013ad9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, fp, ip, sp}
 800f1b0:	08015442 	stmdaeq	r1, {r1, r6, sl, ip, lr}

0800f1b4 <strncpy.constprop.0.isra.0>:
 800f1b4:	233f      	movs	r3, #63	; 0x3f
 800f1b6:	3901      	subs	r1, #1
 800f1b8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f1bc:	b92a      	cbnz	r2, 800f1ca <strncpy.constprop.0.isra.0+0x16>
 800f1be:	4403      	add	r3, r0
 800f1c0:	4298      	cmp	r0, r3
 800f1c2:	d006      	beq.n	800f1d2 <strncpy.constprop.0.isra.0+0x1e>
 800f1c4:	f800 2b01 	strb.w	r2, [r0], #1
 800f1c8:	e7fa      	b.n	800f1c0 <strncpy.constprop.0.isra.0+0xc>
 800f1ca:	3b01      	subs	r3, #1
 800f1cc:	f800 2b01 	strb.w	r2, [r0], #1
 800f1d0:	d1f2      	bne.n	800f1b8 <strncpy.constprop.0.isra.0+0x4>
 800f1d2:	4770      	bx	lr

0800f1d4 <Network::Network()>:
 800f1d4:	4a12      	ldr	r2, [pc, #72]	; (800f220 <Network::Network()+0x4c>)
 800f1d6:	2300      	movs	r3, #0
 800f1d8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800f1dc:	6010      	str	r0, [r2, #0]
 800f1de:	2201      	movs	r2, #1
 800f1e0:	e9c0 2100 	strd	r2, r1, [r0]
 800f1e4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800f1e8:	2200      	movs	r2, #0
 800f1ea:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800f1ee:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800f1f2:	490c      	ldr	r1, [pc, #48]	; (800f224 <Network::Network()+0x50>)
 800f1f4:	6102      	str	r2, [r0, #16]
 800f1f6:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800f1fa:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800f1fe:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800f202:	61c3      	str	r3, [r0, #28]
 800f204:	f880 3020 	strb.w	r3, [r0, #32]
 800f208:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800f20c:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800f210:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f214:	f802 3f01 	strb.w	r3, [r2, #1]!
 800f218:	2b00      	cmp	r3, #0
 800f21a:	d1f9      	bne.n	800f210 <Network::Network()+0x3c>
 800f21c:	4770      	bx	lr
 800f21e:	bf00      	nop
 800f220:	20009614 	andcs	r9, r0, r4, lsl r6
 800f224:	0801544d 	stmdaeq	r1, {r0, r2, r3, r6, sl, ip, lr}

0800f228 <Network::Shutdown()>:
 800f228:	b508      	push	{r3, lr}
 800f22a:	30bc      	adds	r0, #188	; 0xbc
 800f22c:	f7f9 fd54 	bl	8008cd8 <NetworkDisplay::ShowShutdown()>
 800f230:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f234:	f7f7 bfdc 	b.w	80071f0 <net_shutdown>

0800f238 <Network::Begin(unsigned short)>:
 800f238:	4608      	mov	r0, r1
 800f23a:	f7ff ba9f 	b.w	800e77c <udp_bind>

0800f23e <Network::End(unsigned short)>:
 800f23e:	4608      	mov	r0, r1
 800f240:	f7ff bab6 	b.w	800e7b0 <udp_unbind>

0800f244 <Network::MacAddressCopyTo(unsigned char*)>:
 800f244:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800f248:	3901      	subs	r1, #1
 800f24a:	30a5      	adds	r0, #165	; 0xa5
 800f24c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800f250:	4283      	cmp	r3, r0
 800f252:	f801 2f01 	strb.w	r2, [r1, #1]!
 800f256:	d1f9      	bne.n	800f24c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800f258:	4770      	bx	lr

0800f25a <Network::JoinGroup(int, unsigned int)>:
 800f25a:	4610      	mov	r0, r2
 800f25c:	f000 bef2 	b.w	8010044 <igmp_join>

0800f260 <Network::SetDefaultIp()>:
 800f260:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800f264:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800f268:	041b      	lsls	r3, r3, #16
 800f26a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800f26e:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800f272:	3302      	adds	r3, #2
 800f274:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800f278:	22ff      	movs	r2, #255	; 0xff
 800f27a:	6143      	str	r3, [r0, #20]
 800f27c:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800f280:	4770      	bx	lr
	...

0800f284 <Network::Init(NetworkParamsStore*)>:
 800f284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f288:	b0a5      	sub	sp, #148	; 0x94
 800f28a:	4604      	mov	r4, r0
 800f28c:	a80b      	add	r0, sp, #44	; 0x2c
 800f28e:	f000 f9c7 	bl	800f620 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800f292:	a80b      	add	r0, sp, #44	; 0x2c
 800f294:	f000 f9d0 	bl	800f638 <NetworkParams::Load()>
 800f298:	b110      	cbz	r0, 800f2a0 <Network::Init(NetworkParamsStore*)+0x1c>
 800f29a:	a80b      	add	r0, sp, #44	; 0x2c
 800f29c:	f000 fba3 	bl	800f9e6 <NetworkParams::Dump()>
 800f2a0:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800f2a4:	4628      	mov	r0, r5
 800f2a6:	f7f9 fd15 	bl	8008cd4 <NetworkDisplay::ShowEmacStart()>
 800f2aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f2ac:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800f2b0:	9308      	str	r3, [sp, #32]
 800f2b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2b4:	4630      	mov	r0, r6
 800f2b6:	9309      	str	r3, [sp, #36]	; 0x24
 800f2b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f2ba:	f104 0720 	add.w	r7, r4, #32
 800f2be:	930a      	str	r3, [sp, #40]	; 0x28
 800f2c0:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f2c4:	7163      	strb	r3, [r4, #5]
 800f2c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f2c8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800f2cc:	bf18      	it	ne
 800f2ce:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800f2d2:	061b      	lsls	r3, r3, #24
 800f2d4:	bf54      	ite	pl
 800f2d6:	2300      	movpl	r3, #0
 800f2d8:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800f2dc:	60e2      	str	r2, [r4, #12]
 800f2de:	6123      	str	r3, [r4, #16]
 800f2e0:	f003 f892 	bl	8012408 <emac_start(unsigned char*)>
 800f2e4:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800f2e8:	2b00      	cmp	r3, #0
 800f2ea:	f040 80c7 	bne.w	800f47c <Network::Init(NetworkParamsStore*)+0x1f8>
 800f2ee:	4984      	ldr	r1, [pc, #528]	; (800f500 <Network::Init(NetworkParamsStore*)+0x27c>)
 800f2f0:	f104 001f 	add.w	r0, r4, #31
 800f2f4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f2f8:	f103 0c01 	add.w	ip, r3, #1
 800f2fc:	2a00      	cmp	r2, #0
 800f2fe:	f040 80b9 	bne.w	800f474 <Network::Init(NetworkParamsStore*)+0x1f0>
 800f302:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800f306:	18e1      	adds	r1, r4, r3
 800f308:	0910      	lsrs	r0, r2, #4
 800f30a:	2a9f      	cmp	r2, #159	; 0x9f
 800f30c:	f002 020f 	and.w	r2, r2, #15
 800f310:	bf94      	ite	ls
 800f312:	3030      	addls	r0, #48	; 0x30
 800f314:	3037      	addhi	r0, #55	; 0x37
 800f316:	2a09      	cmp	r2, #9
 800f318:	bf94      	ite	ls
 800f31a:	3230      	addls	r2, #48	; 0x30
 800f31c:	3237      	addhi	r2, #55	; 0x37
 800f31e:	44a4      	add	ip, r4
 800f320:	f881 0020 	strb.w	r0, [r1, #32]
 800f324:	f88c 2020 	strb.w	r2, [ip, #32]
 800f328:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800f32c:	f103 0802 	add.w	r8, r3, #2
 800f330:	0910      	lsrs	r0, r2, #4
 800f332:	2a9f      	cmp	r2, #159	; 0x9f
 800f334:	f002 020f 	and.w	r2, r2, #15
 800f338:	bf94      	ite	ls
 800f33a:	3030      	addls	r0, #48	; 0x30
 800f33c:	3037      	addhi	r0, #55	; 0x37
 800f33e:	f103 0e03 	add.w	lr, r3, #3
 800f342:	2a09      	cmp	r2, #9
 800f344:	eb04 0c08 	add.w	ip, r4, r8
 800f348:	f88c 0020 	strb.w	r0, [ip, #32]
 800f34c:	bf94      	ite	ls
 800f34e:	3230      	addls	r2, #48	; 0x30
 800f350:	3237      	addhi	r2, #55	; 0x37
 800f352:	eb04 000e 	add.w	r0, r4, lr
 800f356:	f880 2020 	strb.w	r2, [r0, #32]
 800f35a:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800f35e:	f103 0c04 	add.w	ip, r3, #4
 800f362:	0910      	lsrs	r0, r2, #4
 800f364:	2a9f      	cmp	r2, #159	; 0x9f
 800f366:	f002 020f 	and.w	r2, r2, #15
 800f36a:	bf94      	ite	ls
 800f36c:	3030      	addls	r0, #48	; 0x30
 800f36e:	3037      	addhi	r0, #55	; 0x37
 800f370:	3305      	adds	r3, #5
 800f372:	2a09      	cmp	r2, #9
 800f374:	4423      	add	r3, r4
 800f376:	44a4      	add	ip, r4
 800f378:	bf94      	ite	ls
 800f37a:	3230      	addls	r2, #48	; 0x30
 800f37c:	3237      	addhi	r2, #55	; 0x37
 800f37e:	f88c 0020 	strb.w	r0, [ip, #32]
 800f382:	f883 2020 	strb.w	r2, [r3, #32]
 800f386:	2300      	movs	r3, #0
 800f388:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800f38c:	f003 f8e4 	bl	8012558 <net::link_register_read()>
 800f390:	7963      	ldrb	r3, [r4, #5]
 800f392:	6020      	str	r0, [r4, #0]
 800f394:	2800      	cmp	r0, #0
 800f396:	f040 809c 	bne.w	800f4d2 <Network::Init(NetworkParamsStore*)+0x24e>
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	f040 80aa 	bne.w	800f4f4 <Network::Init(NetworkParamsStore*)+0x270>
 800f3a0:	9b08      	ldr	r3, [sp, #32]
 800f3a2:	2b00      	cmp	r3, #0
 800f3a4:	d173      	bne.n	800f48e <Network::Init(NetworkParamsStore*)+0x20a>
 800f3a6:	4620      	mov	r0, r4
 800f3a8:	f7ff ff5a 	bl	800f260 <Network::SetDefaultIp()>
 800f3ac:	6963      	ldr	r3, [r4, #20]
 800f3ae:	69e2      	ldr	r2, [r4, #28]
 800f3b0:	9308      	str	r3, [sp, #32]
 800f3b2:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800f3b6:	1de3      	adds	r3, r4, #7
 800f3b8:	f104 0905 	add.w	r9, r4, #5
 800f3bc:	9302      	str	r3, [sp, #8]
 800f3be:	9300      	str	r3, [sp, #0]
 800f3c0:	463a      	mov	r2, r7
 800f3c2:	464b      	mov	r3, r9
 800f3c4:	4630      	mov	r0, r6
 800f3c6:	a908      	add	r1, sp, #32
 800f3c8:	f7f7 fec2 	bl	8007150 <net_init>
 800f3cc:	79e3      	ldrb	r3, [r4, #7]
 800f3ce:	b11b      	cbz	r3, 800f3d8 <Network::Init(NetworkParamsStore*)+0x154>
 800f3d0:	2104      	movs	r1, #4
 800f3d2:	4628      	mov	r0, r5
 800f3d4:	f7f9 fc81 	bl	8008cda <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f3d8:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f3dc:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800f3e0:	9304      	str	r3, [sp, #16]
 800f3e2:	233c      	movs	r3, #60	; 0x3c
 800f3e4:	fb03 f30a 	mul.w	r3, r3, sl
 800f3e8:	f8df 8118 	ldr.w	r8, [pc, #280]	; 800f504 <Network::Init(NetworkParamsStore*)+0x280>
 800f3ec:	f8df b118 	ldr.w	fp, [pc, #280]	; 800f508 <Network::Init(NetworkParamsStore*)+0x284>
 800f3f0:	9303      	str	r3, [sp, #12]
 800f3f2:	79e3      	ldrb	r3, [r4, #7]
 800f3f4:	b393      	cbz	r3, 800f45c <Network::Init(NetworkParamsStore*)+0x1d8>
 800f3f6:	f1ba 0f00 	cmp.w	sl, #0
 800f3fa:	d02f      	beq.n	800f45c <Network::Init(NetworkParamsStore*)+0x1d8>
 800f3fc:	9b04      	ldr	r3, [sp, #16]
 800f3fe:	b36b      	cbz	r3, 800f45c <Network::Init(NetworkParamsStore*)+0x1d8>
 800f400:	2104      	movs	r1, #4
 800f402:	f8d8 0000 	ldr.w	r0, [r8]
 800f406:	f001 fcd7 	bl	8010db8 <LedBlink::SetMode(ledblink::Mode)>
 800f40a:	2103      	movs	r1, #3
 800f40c:	4628      	mov	r0, r5
 800f40e:	f7f9 fc64 	bl	8008cda <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f412:	2000      	movs	r0, #0
 800f414:	f001 ff72 	bl	80112fc <time>
 800f418:	9005      	str	r0, [sp, #20]
 800f41a:	2000      	movs	r0, #0
 800f41c:	f001 ff6e 	bl	80112fc <time>
 800f420:	9b05      	ldr	r3, [sp, #20]
 800f422:	493a      	ldr	r1, [pc, #232]	; (800f50c <Network::Init(NetworkParamsStore*)+0x288>)
 800f424:	1ac0      	subs	r0, r0, r3
 800f426:	9b03      	ldr	r3, [sp, #12]
 800f428:	4298      	cmp	r0, r3
 800f42a:	db38      	blt.n	800f49e <Network::Init(NetworkParamsStore*)+0x21a>
 800f42c:	2101      	movs	r1, #1
 800f42e:	4628      	mov	r0, r5
 800f430:	f7f9 fc53 	bl	8008cda <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f434:	2101      	movs	r1, #1
 800f436:	f8d8 0000 	ldr.w	r0, [r8]
 800f43a:	f001 fcbd 	bl	8010db8 <LedBlink::SetMode(ledblink::Mode)>
 800f43e:	2301      	movs	r3, #1
 800f440:	7163      	strb	r3, [r4, #5]
 800f442:	2300      	movs	r3, #0
 800f444:	71e3      	strb	r3, [r4, #7]
 800f446:	9b02      	ldr	r3, [sp, #8]
 800f448:	463a      	mov	r2, r7
 800f44a:	9300      	str	r3, [sp, #0]
 800f44c:	4630      	mov	r0, r6
 800f44e:	464b      	mov	r3, r9
 800f450:	a908      	add	r1, sp, #32
 800f452:	f7f7 fe7d 	bl	8007150 <net_init>
 800f456:	7963      	ldrb	r3, [r4, #5]
 800f458:	2b00      	cmp	r3, #0
 800f45a:	d0ca      	beq.n	800f3f2 <Network::Init(NetworkParamsStore*)+0x16e>
 800f45c:	9b08      	ldr	r3, [sp, #32]
 800f45e:	4628      	mov	r0, r5
 800f460:	6163      	str	r3, [r4, #20]
 800f462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f464:	61e3      	str	r3, [r4, #28]
 800f466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f468:	61a3      	str	r3, [r4, #24]
 800f46a:	f7f9 fc34 	bl	8008cd6 <NetworkDisplay::ShowIp()>
 800f46e:	b025      	add	sp, #148	; 0x94
 800f470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f474:	4663      	mov	r3, ip
 800f476:	f800 2f01 	strb.w	r2, [r0, #1]!
 800f47a:	e73b      	b.n	800f2f4 <Network::Init(NetworkParamsStore*)+0x70>
 800f47c:	4638      	mov	r0, r7
 800f47e:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800f482:	f7ff fe97 	bl	800f1b4 <strncpy.constprop.0.isra.0>
 800f486:	2300      	movs	r3, #0
 800f488:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800f48c:	e77e      	b.n	800f38c <Network::Init(NetworkParamsStore*)+0x108>
 800f48e:	69e1      	ldr	r1, [r4, #28]
 800f490:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800f494:	4053      	eors	r3, r2
 800f496:	420b      	tst	r3, r1
 800f498:	bf18      	it	ne
 800f49a:	920a      	strne	r2, [sp, #40]	; 0x28
 800f49c:	e78b      	b.n	800f3b6 <Network::Init(NetworkParamsStore*)+0x132>
 800f49e:	f8d8 3000 	ldr.w	r3, [r8]
 800f4a2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800f4a6:	f1bc 0f00 	cmp.w	ip, #0
 800f4aa:	d0b6      	beq.n	800f41a <Network::Init(NetworkParamsStore*)+0x196>
 800f4ac:	6808      	ldr	r0, [r1, #0]
 800f4ae:	695a      	ldr	r2, [r3, #20]
 800f4b0:	1a80      	subs	r0, r0, r2
 800f4b2:	4584      	cmp	ip, r0
 800f4b4:	d8b1      	bhi.n	800f41a <Network::Init(NetworkParamsStore*)+0x196>
 800f4b6:	6808      	ldr	r0, [r1, #0]
 800f4b8:	6158      	str	r0, [r3, #20]
 800f4ba:	6918      	ldr	r0, [r3, #16]
 800f4bc:	2801      	cmp	r0, #1
 800f4be:	f080 0201 	eor.w	r2, r0, #1
 800f4c2:	611a      	str	r2, [r3, #16]
 800f4c4:	bf16      	itet	ne
 800f4c6:	2301      	movne	r3, #1
 800f4c8:	f8cb 0014 	streq.w	r0, [fp, #20]
 800f4cc:	f8cb 3010 	strne.w	r3, [fp, #16]
 800f4d0:	e7a3      	b.n	800f41a <Network::Init(NetworkParamsStore*)+0x196>
 800f4d2:	b11b      	cbz	r3, 800f4dc <Network::Init(NetworkParamsStore*)+0x258>
 800f4d4:	2300      	movs	r3, #0
 800f4d6:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800f4da:	9308      	str	r3, [sp, #32]
 800f4dc:	2300      	movs	r3, #0
 800f4de:	f88d 301f 	strb.w	r3, [sp, #31]
 800f4e2:	f10d 031f 	add.w	r3, sp, #31
 800f4e6:	463a      	mov	r2, r7
 800f4e8:	4630      	mov	r0, r6
 800f4ea:	9300      	str	r3, [sp, #0]
 800f4ec:	a908      	add	r1, sp, #32
 800f4ee:	f7f7 fe2f 	bl	8007150 <net_init>
 800f4f2:	e7b3      	b.n	800f45c <Network::Init(NetworkParamsStore*)+0x1d8>
 800f4f4:	2101      	movs	r1, #1
 800f4f6:	4628      	mov	r0, r5
 800f4f8:	f7f9 fbef 	bl	8008cda <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f4fc:	e75b      	b.n	800f3b6 <Network::Init(NetworkParamsStore*)+0x132>
 800f4fe:	bf00      	nop
 800f500:	08015452 	stmdaeq	r1, {r1, r4, r6, sl, ip, lr}
 800f504:	20009cd0 	ldrdcs	r9, [r0], -r0
 800f508:	40011000 	andmi	r1, r1, r0
 800f50c:	20009cec 	andcs	r9, r0, ip, ror #25

0800f510 <Network::Print()>:
 800f510:	b530      	push	{r4, r5, lr}
 800f512:	4604      	mov	r4, r0
 800f514:	b085      	sub	sp, #20
 800f516:	4832      	ldr	r0, [pc, #200]	; (800f5e0 <Network::Print()+0xd0>)
 800f518:	f7f9 fedc 	bl	80092d4 <printf>
 800f51c:	f104 0120 	add.w	r1, r4, #32
 800f520:	4830      	ldr	r0, [pc, #192]	; (800f5e4 <Network::Print()+0xd4>)
 800f522:	f7f9 fed7 	bl	80092d4 <printf>
 800f526:	68a1      	ldr	r1, [r4, #8]
 800f528:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800f52c:	482e      	ldr	r0, [pc, #184]	; (800f5e8 <Network::Print()+0xd8>)
 800f52e:	f7f9 fed1 	bl	80092d4 <printf>
 800f532:	69e0      	ldr	r0, [r4, #28]
 800f534:	f003 fe7e 	bl	8013234 <__popcountsi2>
 800f538:	6965      	ldr	r5, [r4, #20]
 800f53a:	9001      	str	r0, [sp, #4]
 800f53c:	0e2b      	lsrs	r3, r5, #24
 800f53e:	9300      	str	r3, [sp, #0]
 800f540:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800f544:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800f548:	b2e9      	uxtb	r1, r5
 800f54a:	4828      	ldr	r0, [pc, #160]	; (800f5ec <Network::Print()+0xdc>)
 800f54c:	f7f9 fec2 	bl	80092d4 <printf>
 800f550:	69e1      	ldr	r1, [r4, #28]
 800f552:	4827      	ldr	r0, [pc, #156]	; (800f5f0 <Network::Print()+0xe0>)
 800f554:	0e0b      	lsrs	r3, r1, #24
 800f556:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f55a:	9300      	str	r3, [sp, #0]
 800f55c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f560:	b2c9      	uxtb	r1, r1
 800f562:	f7f9 feb7 	bl	80092d4 <printf>
 800f566:	69a1      	ldr	r1, [r4, #24]
 800f568:	4822      	ldr	r0, [pc, #136]	; (800f5f4 <Network::Print()+0xe4>)
 800f56a:	0e0b      	lsrs	r3, r1, #24
 800f56c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f570:	9300      	str	r3, [sp, #0]
 800f572:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f576:	b2c9      	uxtb	r1, r1
 800f578:	f7f9 feac 	bl	80092d4 <printf>
 800f57c:	69e3      	ldr	r3, [r4, #28]
 800f57e:	6961      	ldr	r1, [r4, #20]
 800f580:	481d      	ldr	r0, [pc, #116]	; (800f5f8 <Network::Print()+0xe8>)
 800f582:	ea61 0103 	orn	r1, r1, r3
 800f586:	0e0b      	lsrs	r3, r1, #24
 800f588:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f58c:	9300      	str	r3, [sp, #0]
 800f58e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f592:	b2c9      	uxtb	r1, r1
 800f594:	f7f9 fe9e 	bl	80092d4 <printf>
 800f598:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800f59c:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800f5a0:	9302      	str	r3, [sp, #8]
 800f5a2:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800f5a6:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800f5aa:	9301      	str	r3, [sp, #4]
 800f5ac:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800f5b0:	4812      	ldr	r0, [pc, #72]	; (800f5fc <Network::Print()+0xec>)
 800f5b2:	9300      	str	r3, [sp, #0]
 800f5b4:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800f5b8:	f7f9 fe8c 	bl	80092d4 <printf>
 800f5bc:	4b10      	ldr	r3, [pc, #64]	; (800f600 <Network::Print()+0xf0>)
 800f5be:	681b      	ldr	r3, [r3, #0]
 800f5c0:	79da      	ldrb	r2, [r3, #7]
 800f5c2:	b952      	cbnz	r2, 800f5da <Network::Print()+0xca>
 800f5c4:	795b      	ldrb	r3, [r3, #5]
 800f5c6:	2b00      	cmp	r3, #0
 800f5c8:	bf14      	ite	ne
 800f5ca:	2144      	movne	r1, #68	; 0x44
 800f5cc:	2153      	moveq	r1, #83	; 0x53
 800f5ce:	480d      	ldr	r0, [pc, #52]	; (800f604 <Network::Print()+0xf4>)
 800f5d0:	b005      	add	sp, #20
 800f5d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f5d6:	f7f9 be7d 	b.w	80092d4 <printf>
 800f5da:	215a      	movs	r1, #90	; 0x5a
 800f5dc:	e7f7      	b.n	800f5ce <Network::Print()+0xbe>
 800f5de:	bf00      	nop
 800f5e0:	0801545e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sl, ip, lr}
 800f5e4:	08015467 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, ip, lr}
 800f5e8:	08015478 	stmdaeq	r1, {r3, r4, r5, r6, sl, ip, lr}
 800f5ec:	0801548d 	stmdaeq	r1, {r0, r2, r3, r7, sl, ip, lr}
 800f5f0:	080154aa 	stmdaeq	r1, {r1, r3, r5, r7, sl, ip, lr}
 800f5f4:	080154c4 	stmdaeq	r1, {r2, r6, r7, sl, ip, lr}
 800f5f8:	080154de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, ip, lr}
 800f5fc:	080154f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, ip, lr}
 800f600:	20009614 	andcs	r9, r0, r4, lsl r6
 800f604:	08015524 	stmdaeq	r1, {r2, r5, r8, sl, ip, lr}

0800f608 <Network::TcpBegin(unsigned short)>:
 800f608:	4608      	mov	r0, r1
 800f60a:	f7fe bff1 	b.w	800e5f0 <tcp_begin>

0800f60e <Network::TcpRead(int, unsigned char const**)>:
 800f60e:	4608      	mov	r0, r1
 800f610:	4611      	mov	r1, r2
 800f612:	f7ff b82b 	b.w	800e66c <tcp_read>

0800f616 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800f616:	4608      	mov	r0, r1
 800f618:	4611      	mov	r1, r2
 800f61a:	461a      	mov	r2, r3
 800f61c:	f7ff b802 	b.w	800e624 <tcp_write>

0800f620 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800f620:	b510      	push	{r4, lr}
 800f622:	225e      	movs	r2, #94	; 0x5e
 800f624:	4604      	mov	r4, r0
 800f626:	f840 1b04 	str.w	r1, [r0], #4
 800f62a:	2100      	movs	r1, #0
 800f62c:	f001 fd5e 	bl	80110ec <memset>
 800f630:	2301      	movs	r3, #1
 800f632:	4620      	mov	r0, r4
 800f634:	7623      	strb	r3, [r4, #24]
 800f636:	bd10      	pop	{r4, pc}

0800f638 <NetworkParams::Load()>:
 800f638:	b508      	push	{r3, lr}
 800f63a:	2300      	movs	r3, #0
 800f63c:	4601      	mov	r1, r0
 800f63e:	6043      	str	r3, [r0, #4]
 800f640:	6800      	ldr	r0, [r0, #0]
 800f642:	b120      	cbz	r0, 800f64e <NetworkParams::Load()+0x16>
 800f644:	6803      	ldr	r3, [r0, #0]
 800f646:	3104      	adds	r1, #4
 800f648:	68db      	ldr	r3, [r3, #12]
 800f64a:	4798      	blx	r3
 800f64c:	2001      	movs	r0, #1
 800f64e:	bd08      	pop	{r3, pc}

0800f650 <NetworkParams::Load(char const*, unsigned int)>:
 800f650:	6803      	ldr	r3, [r0, #0]
 800f652:	b1d3      	cbz	r3, 800f68a <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800f654:	2300      	movs	r3, #0
 800f656:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f658:	460d      	mov	r5, r1
 800f65a:	4616      	mov	r6, r2
 800f65c:	4604      	mov	r4, r0
 800f65e:	6043      	str	r3, [r0, #4]
 800f660:	4602      	mov	r2, r0
 800f662:	490a      	ldr	r1, [pc, #40]	; (800f68c <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800f664:	4668      	mov	r0, sp
 800f666:	f000 fedb 	bl	8010420 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f66a:	4632      	mov	r2, r6
 800f66c:	4629      	mov	r1, r5
 800f66e:	4668      	mov	r0, sp
 800f670:	f000 feda 	bl	8010428 <ReadConfigFile::Read(char const*, unsigned int)>
 800f674:	4621      	mov	r1, r4
 800f676:	f851 0b04 	ldr.w	r0, [r1], #4
 800f67a:	6803      	ldr	r3, [r0, #0]
 800f67c:	689b      	ldr	r3, [r3, #8]
 800f67e:	4798      	blx	r3
 800f680:	4668      	mov	r0, sp
 800f682:	f000 fed0 	bl	8010426 <ReadConfigFile::~ReadConfigFile()>
 800f686:	b002      	add	sp, #8
 800f688:	bd70      	pop	{r4, r5, r6, pc}
 800f68a:	4770      	bx	lr
 800f68c:	0800f7b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sl, ip, sp, lr, pc}

0800f690 <NetworkParams::callbackFunction(char const*)>:
 800f690:	b530      	push	{r4, r5, lr}
 800f692:	460d      	mov	r5, r1
 800f694:	b085      	sub	sp, #20
 800f696:	4604      	mov	r4, r0
 800f698:	493f      	ldr	r1, [pc, #252]	; (800f798 <NetworkParams::callbackFunction(char const*)+0x108>)
 800f69a:	4628      	mov	r0, r5
 800f69c:	f10d 0207 	add.w	r2, sp, #7
 800f6a0:	f000 fffa 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f6a4:	b978      	cbnz	r0, 800f6c6 <NetworkParams::callbackFunction(char const*)+0x36>
 800f6a6:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f6aa:	6863      	ldr	r3, [r4, #4]
 800f6ac:	b142      	cbz	r2, 800f6c0 <NetworkParams::callbackFunction(char const*)+0x30>
 800f6ae:	f023 0301 	bic.w	r3, r3, #1
 800f6b2:	3a00      	subs	r2, #0
 800f6b4:	bf18      	it	ne
 800f6b6:	2201      	movne	r2, #1
 800f6b8:	6063      	str	r3, [r4, #4]
 800f6ba:	7622      	strb	r2, [r4, #24]
 800f6bc:	b005      	add	sp, #20
 800f6be:	bd30      	pop	{r4, r5, pc}
 800f6c0:	f043 0301 	orr.w	r3, r3, #1
 800f6c4:	e7f5      	b.n	800f6b2 <NetworkParams::callbackFunction(char const*)+0x22>
 800f6c6:	4628      	mov	r0, r5
 800f6c8:	4934      	ldr	r1, [pc, #208]	; (800f79c <NetworkParams::callbackFunction(char const*)+0x10c>)
 800f6ca:	f10d 0207 	add.w	r2, sp, #7
 800f6ce:	f000 ffe3 	bl	8010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f6d2:	b980      	cbnz	r0, 800f6f6 <NetworkParams::callbackFunction(char const*)+0x66>
 800f6d4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f6d8:	6863      	ldr	r3, [r4, #4]
 800f6da:	1e51      	subs	r1, r2, #1
 800f6dc:	2904      	cmp	r1, #4
 800f6de:	bf97      	itett	ls
 800f6e0:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f6e4:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f6e8:	6063      	strls	r3, [r4, #4]
 800f6ea:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800f6ee:	bf84      	itt	hi
 800f6f0:	6063      	strhi	r3, [r4, #4]
 800f6f2:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800f6f6:	4628      	mov	r0, r5
 800f6f8:	4929      	ldr	r1, [pc, #164]	; (800f7a0 <NetworkParams::callbackFunction(char const*)+0x110>)
 800f6fa:	aa02      	add	r2, sp, #8
 800f6fc:	f000 ff44 	bl	8010588 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f700:	b9c8      	cbnz	r0, 800f736 <NetworkParams::callbackFunction(char const*)+0xa6>
 800f702:	9b02      	ldr	r3, [sp, #8]
 800f704:	b2d9      	uxtb	r1, r3
 800f706:	29ac      	cmp	r1, #172	; 0xac
 800f708:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f70c:	d009      	beq.n	800f722 <NetworkParams::callbackFunction(char const*)+0x92>
 800f70e:	29c0      	cmp	r1, #192	; 0xc0
 800f710:	d00b      	beq.n	800f72a <NetworkParams::callbackFunction(char const*)+0x9a>
 800f712:	290a      	cmp	r1, #10
 800f714:	d10c      	bne.n	800f730 <NetworkParams::callbackFunction(char const*)+0xa0>
 800f716:	60a3      	str	r3, [r4, #8]
 800f718:	6863      	ldr	r3, [r4, #4]
 800f71a:	f043 0302 	orr.w	r3, r3, #2
 800f71e:	6063      	str	r3, [r4, #4]
 800f720:	e7cc      	b.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f722:	3a10      	subs	r2, #16
 800f724:	2a0f      	cmp	r2, #15
 800f726:	d8c9      	bhi.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f728:	e7f5      	b.n	800f716 <NetworkParams::callbackFunction(char const*)+0x86>
 800f72a:	2aa8      	cmp	r2, #168	; 0xa8
 800f72c:	d1c6      	bne.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f72e:	e7f2      	b.n	800f716 <NetworkParams::callbackFunction(char const*)+0x86>
 800f730:	2b00      	cmp	r3, #0
 800f732:	d0f0      	beq.n	800f716 <NetworkParams::callbackFunction(char const*)+0x86>
 800f734:	e7c2      	b.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f736:	4628      	mov	r0, r5
 800f738:	491a      	ldr	r1, [pc, #104]	; (800f7a4 <NetworkParams::callbackFunction(char const*)+0x114>)
 800f73a:	aa02      	add	r2, sp, #8
 800f73c:	f000 ff24 	bl	8010588 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f740:	b960      	cbnz	r0, 800f75c <NetworkParams::callbackFunction(char const*)+0xcc>
 800f742:	9b02      	ldr	r3, [sp, #8]
 800f744:	2b00      	cmp	r3, #0
 800f746:	d0b9      	beq.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f748:	ba1a      	rev	r2, r3
 800f74a:	43d1      	mvns	r1, r2
 800f74c:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 800f750:	d1b4      	bne.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f752:	60e3      	str	r3, [r4, #12]
 800f754:	6863      	ldr	r3, [r4, #4]
 800f756:	f043 0304 	orr.w	r3, r3, #4
 800f75a:	e7e0      	b.n	800f71e <NetworkParams::callbackFunction(char const*)+0x8e>
 800f75c:	4628      	mov	r0, r5
 800f75e:	4912      	ldr	r1, [pc, #72]	; (800f7a8 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f760:	aa02      	add	r2, sp, #8
 800f762:	f000 ff11 	bl	8010588 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f766:	b928      	cbnz	r0, 800f774 <NetworkParams::callbackFunction(char const*)+0xe4>
 800f768:	9b02      	ldr	r3, [sp, #8]
 800f76a:	6123      	str	r3, [r4, #16]
 800f76c:	6863      	ldr	r3, [r4, #4]
 800f76e:	f043 0308 	orr.w	r3, r3, #8
 800f772:	e7d4      	b.n	800f71e <NetworkParams::callbackFunction(char const*)+0x8e>
 800f774:	233f      	movs	r3, #63	; 0x3f
 800f776:	4628      	mov	r0, r5
 800f778:	9303      	str	r3, [sp, #12]
 800f77a:	490c      	ldr	r1, [pc, #48]	; (800f7ac <NetworkParams::callbackFunction(char const*)+0x11c>)
 800f77c:	ab03      	add	r3, sp, #12
 800f77e:	f104 0219 	add.w	r2, r4, #25
 800f782:	f000 fe85 	bl	8010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f786:	2800      	cmp	r0, #0
 800f788:	d198      	bne.n	800f6bc <NetworkParams::callbackFunction(char const*)+0x2c>
 800f78a:	9b03      	ldr	r3, [sp, #12]
 800f78c:	4423      	add	r3, r4
 800f78e:	7658      	strb	r0, [r3, #25]
 800f790:	6863      	ldr	r3, [r4, #4]
 800f792:	f043 0320 	orr.w	r3, r3, #32
 800f796:	e7c2      	b.n	800f71e <NetworkParams::callbackFunction(char const*)+0x8e>
 800f798:	0801557c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, lr}
 800f79c:	0801555a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sl, ip, lr}
 800f7a0:	0801553f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, ip, lr}
 800f7a4:	08015573 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, ip, lr}
 800f7a8:	0801554a 	stmdaeq	r1, {r1, r3, r6, r8, sl, ip, lr}
 800f7ac:	0801556a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, lr}

0800f7b0 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800f7b0:	f7ff bf6e 	b.w	800f690 <NetworkParams::callbackFunction(char const*)>

0800f7b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800f7b4:	b570      	push	{r4, r5, r6, lr}
 800f7b6:	4604      	mov	r4, r0
 800f7b8:	4615      	mov	r5, r2
 800f7ba:	461e      	mov	r6, r3
 800f7bc:	b086      	sub	sp, #24
 800f7be:	3004      	adds	r0, #4
 800f7c0:	2900      	cmp	r1, #0
 800f7c2:	d02b      	beq.n	800f81c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800f7c4:	225e      	movs	r2, #94	; 0x5e
 800f7c6:	f001 fc7a 	bl	80110be <memmove>
 800f7ca:	462a      	mov	r2, r5
 800f7cc:	4633      	mov	r3, r6
 800f7ce:	4970      	ldr	r1, [pc, #448]	; (800f990 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f7d0:	a803      	add	r0, sp, #12
 800f7d2:	f000 fd85 	bl	80102e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f7d6:	6863      	ldr	r3, [r4, #4]
 800f7d8:	079a      	lsls	r2, r3, #30
 800f7da:	bf5f      	itttt	pl
 800f7dc:	4a6d      	ldrpl	r2, [pc, #436]	; (800f994 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7de:	6812      	ldrpl	r2, [r2, #0]
 800f7e0:	6952      	ldrpl	r2, [r2, #20]
 800f7e2:	60a2      	strpl	r2, [r4, #8]
 800f7e4:	075e      	lsls	r6, r3, #29
 800f7e6:	bf5f      	itttt	pl
 800f7e8:	4a6a      	ldrpl	r2, [pc, #424]	; (800f994 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7ea:	6812      	ldrpl	r2, [r2, #0]
 800f7ec:	69d2      	ldrpl	r2, [r2, #28]
 800f7ee:	60e2      	strpl	r2, [r4, #12]
 800f7f0:	071d      	lsls	r5, r3, #28
 800f7f2:	bf58      	it	pl
 800f7f4:	4a67      	ldrpl	r2, [pc, #412]	; (800f994 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f7f6:	f104 0519 	add.w	r5, r4, #25
 800f7fa:	bf5e      	ittt	pl
 800f7fc:	6812      	ldrpl	r2, [r2, #0]
 800f7fe:	6992      	ldrpl	r2, [r2, #24]
 800f800:	6122      	strpl	r2, [r4, #16]
 800f802:	0698      	lsls	r0, r3, #26
 800f804:	d418      	bmi.n	800f838 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800f806:	4628      	mov	r0, r5
 800f808:	223f      	movs	r2, #63	; 0x3f
 800f80a:	4b62      	ldr	r3, [pc, #392]	; (800f994 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f80c:	681b      	ldr	r3, [r3, #0]
 800f80e:	331f      	adds	r3, #31
 800f810:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f814:	b949      	cbnz	r1, 800f82a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800f816:	f001 fc69 	bl	80110ec <memset>
 800f81a:	e00a      	b.n	800f832 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800f81c:	6823      	ldr	r3, [r4, #0]
 800f81e:	4601      	mov	r1, r0
 800f820:	681a      	ldr	r2, [r3, #0]
 800f822:	4618      	mov	r0, r3
 800f824:	68d2      	ldr	r2, [r2, #12]
 800f826:	4790      	blx	r2
 800f828:	e7cf      	b.n	800f7ca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800f82a:	3a01      	subs	r2, #1
 800f82c:	f800 1b01 	strb.w	r1, [r0], #1
 800f830:	d1ee      	bne.n	800f810 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800f832:	2300      	movs	r3, #0
 800f834:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800f838:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f83c:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800f840:	7e23      	ldrb	r3, [r4, #24]
 800f842:	42b2      	cmp	r2, r6
 800f844:	6861      	ldr	r1, [r4, #4]
 800f846:	d21a      	bcs.n	800f87e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800f848:	9803      	ldr	r0, [sp, #12]
 800f84a:	07c9      	lsls	r1, r1, #31
 800f84c:	4410      	add	r0, r2
 800f84e:	eba6 0602 	sub.w	r6, r6, r2
 800f852:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f856:	d404      	bmi.n	800f862 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800f858:	b922      	cbnz	r2, 800f864 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800f85a:	9300      	str	r3, [sp, #0]
 800f85c:	4a4e      	ldr	r2, [pc, #312]	; (800f998 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f85e:	4b4f      	ldr	r3, [pc, #316]	; (800f99c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f860:	e003      	b.n	800f86a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800f862:	b312      	cbz	r2, 800f8aa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800f864:	9300      	str	r3, [sp, #0]
 800f866:	4a4e      	ldr	r2, [pc, #312]	; (800f9a0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f868:	4b4c      	ldr	r3, [pc, #304]	; (800f99c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f86a:	4631      	mov	r1, r6
 800f86c:	f7f9 fd42 	bl	80092f4 <snprintf>
 800f870:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f874:	4286      	cmp	r6, r0
 800f876:	bfa4      	itt	ge
 800f878:	181b      	addge	r3, r3, r0
 800f87a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800f87e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f882:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800f886:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800f88a:	42b2      	cmp	r2, r6
 800f88c:	6861      	ldr	r1, [r4, #4]
 800f88e:	d21f      	bcs.n	800f8d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800f890:	9803      	ldr	r0, [sp, #12]
 800f892:	05c9      	lsls	r1, r1, #23
 800f894:	4410      	add	r0, r2
 800f896:	eba6 0602 	sub.w	r6, r6, r2
 800f89a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f89e:	d408      	bmi.n	800f8b2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800f8a0:	b94a      	cbnz	r2, 800f8b6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800f8a2:	9300      	str	r3, [sp, #0]
 800f8a4:	4a3c      	ldr	r2, [pc, #240]	; (800f998 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f8a6:	4b3f      	ldr	r3, [pc, #252]	; (800f9a4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f8a8:	e008      	b.n	800f8bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800f8aa:	9300      	str	r3, [sp, #0]
 800f8ac:	4a3e      	ldr	r2, [pc, #248]	; (800f9a8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f8ae:	4b3b      	ldr	r3, [pc, #236]	; (800f99c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f8b0:	e7db      	b.n	800f86a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800f8b2:	2a00      	cmp	r2, #0
 800f8b4:	d03c      	beq.n	800f930 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800f8b6:	9300      	str	r3, [sp, #0]
 800f8b8:	4a39      	ldr	r2, [pc, #228]	; (800f9a0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f8ba:	4b3a      	ldr	r3, [pc, #232]	; (800f9a4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f8bc:	4631      	mov	r1, r6
 800f8be:	f7f9 fd19 	bl	80092f4 <snprintf>
 800f8c2:	4286      	cmp	r6, r0
 800f8c4:	bfa2      	ittt	ge
 800f8c6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f8ca:	18c0      	addge	r0, r0, r3
 800f8cc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f8d0:	4936      	ldr	r1, [pc, #216]	; (800f9ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800f8d2:	a803      	add	r0, sp, #12
 800f8d4:	f000 fd8a 	bl	80103ec <PropertiesBuilder::AddComment(char const*)>
 800f8d8:	6863      	ldr	r3, [r4, #4]
 800f8da:	68a2      	ldr	r2, [r4, #8]
 800f8dc:	4934      	ldr	r1, [pc, #208]	; (800f9b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800f8de:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800f8e2:	a803      	add	r0, sp, #12
 800f8e4:	f000 fd3e 	bl	8010364 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f8e8:	6863      	ldr	r3, [r4, #4]
 800f8ea:	68e2      	ldr	r2, [r4, #12]
 800f8ec:	4931      	ldr	r1, [pc, #196]	; (800f9b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800f8ee:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800f8f2:	a803      	add	r0, sp, #12
 800f8f4:	f000 fd36 	bl	8010364 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f8f8:	6863      	ldr	r3, [r4, #4]
 800f8fa:	6922      	ldr	r2, [r4, #16]
 800f8fc:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800f900:	492d      	ldr	r1, [pc, #180]	; (800f9b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800f902:	a803      	add	r0, sp, #12
 800f904:	f000 fd2e 	bl	8010364 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f908:	6862      	ldr	r2, [r4, #4]
 800f90a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f90e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800f912:	42a3      	cmp	r3, r4
 800f914:	d21e      	bcs.n	800f954 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800f916:	9803      	ldr	r0, [sp, #12]
 800f918:	0692      	lsls	r2, r2, #26
 800f91a:	4418      	add	r0, r3
 800f91c:	eba4 0403 	sub.w	r4, r4, r3
 800f920:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f924:	d408      	bmi.n	800f938 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800f926:	b943      	cbnz	r3, 800f93a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800f928:	4b24      	ldr	r3, [pc, #144]	; (800f9bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f92a:	4a25      	ldr	r2, [pc, #148]	; (800f9c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f92c:	9500      	str	r5, [sp, #0]
 800f92e:	e007      	b.n	800f940 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800f930:	9300      	str	r3, [sp, #0]
 800f932:	4a1d      	ldr	r2, [pc, #116]	; (800f9a8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f934:	4b1b      	ldr	r3, [pc, #108]	; (800f9a4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f936:	e7c1      	b.n	800f8bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800f938:	b32b      	cbz	r3, 800f986 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800f93a:	4b20      	ldr	r3, [pc, #128]	; (800f9bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f93c:	4a21      	ldr	r2, [pc, #132]	; (800f9c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800f93e:	9500      	str	r5, [sp, #0]
 800f940:	4621      	mov	r1, r4
 800f942:	f7f9 fcd7 	bl	80092f4 <snprintf>
 800f946:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f94a:	4284      	cmp	r4, r0
 800f94c:	bfa4      	itt	ge
 800f94e:	181b      	addge	r3, r3, r0
 800f950:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800f954:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f958:	b17b      	cbz	r3, 800f97a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800f95a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f95e:	9b03      	ldr	r3, [sp, #12]
 800f960:	4413      	add	r3, r2
 800f962:	227d      	movs	r2, #125	; 0x7d
 800f964:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f968:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f96c:	9903      	ldr	r1, [sp, #12]
 800f96e:	54ca      	strb	r2, [r1, r3]
 800f970:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f974:	3301      	adds	r3, #1
 800f976:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f97a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f97e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f980:	601a      	str	r2, [r3, #0]
 800f982:	b006      	add	sp, #24
 800f984:	bd70      	pop	{r4, r5, r6, pc}
 800f986:	4b0d      	ldr	r3, [pc, #52]	; (800f9bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800f988:	4a0f      	ldr	r2, [pc, #60]	; (800f9c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800f98a:	9500      	str	r5, [sp, #0]
 800f98c:	e7d8      	b.n	800f940 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800f98e:	bf00      	nop
 800f990:	08015585 	stmdaeq	r1, {r0, r2, r7, r8, sl, ip, lr}
 800f994:	20009614 	andcs	r9, r0, r4, lsl r6
 800f998:	080137a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp}
 800f99c:	0801557c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, lr}
 800f9a0:	080137a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp}
 800f9a4:	0801555a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sl, ip, lr}
 800f9a8:	080137aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp}
 800f9ac:	08015535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, lr}
 800f9b0:	0801553f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, ip, lr}
 800f9b4:	08015573 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, ip, lr}
 800f9b8:	0801554a 	stmdaeq	r1, {r1, r3, r6, r8, sl, ip, lr}
 800f9bc:	0801556a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, lr}
 800f9c0:	080137bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 800f9c4:	080137b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, ip, sp}
 800f9c8:	080137bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}

0800f9cc <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800f9cc:	b513      	push	{r0, r1, r4, lr}
 800f9ce:	6804      	ldr	r4, [r0, #0]
 800f9d0:	b914      	cbnz	r4, 800f9d8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800f9d2:	601c      	str	r4, [r3, #0]
 800f9d4:	b002      	add	sp, #8
 800f9d6:	bd10      	pop	{r4, pc}
 800f9d8:	9300      	str	r3, [sp, #0]
 800f9da:	4613      	mov	r3, r2
 800f9dc:	460a      	mov	r2, r1
 800f9de:	2100      	movs	r1, #0
 800f9e0:	f7ff fee8 	bl	800f7b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800f9e4:	e7f6      	b.n	800f9d4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800f9e6 <NetworkParams::Dump()>:
 800f9e6:	4770      	bx	lr

0800f9e8 <memcpy.isra.0>:
 800f9e8:	3801      	subs	r0, #1
 800f9ea:	440a      	add	r2, r1
 800f9ec:	4291      	cmp	r1, r2
 800f9ee:	d100      	bne.n	800f9f2 <memcpy.isra.0+0xa>
 800f9f0:	4770      	bx	lr
 800f9f2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f9f6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f9fa:	e7f7      	b.n	800f9ec <memcpy.isra.0+0x4>

0800f9fc <arp_announce>:
 800f9fc:	4803      	ldr	r0, [pc, #12]	; (800fa0c <arp_announce+0x10>)
 800f9fe:	69c3      	ldr	r3, [r0, #28]
 800fa00:	b113      	cbz	r3, 800fa08 <arp_announce+0xc>
 800fa02:	212a      	movs	r1, #42	; 0x2a
 800fa04:	f002 b988 	b.w	8011d18 <emac_eth_send>
 800fa08:	4770      	bx	lr
 800fa0a:	bf00      	nop
 800fa0c:	20009618 	andcs	r9, r0, r8, lsl r6

0800fa10 <arp_handle_request>:
 800fa10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fa12:	2204      	movs	r2, #4
 800fa14:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800fa18:	4604      	mov	r4, r0
 800fa1a:	eb0d 0002 	add.w	r0, sp, r2
 800fa1e:	f7ff ffe3 	bl	800f9e8 <memcpy.isra.0>
 800fa22:	4b0d      	ldr	r3, [pc, #52]	; (800fa58 <arp_handle_request+0x48>)
 800fa24:	9a01      	ldr	r2, [sp, #4]
 800fa26:	69db      	ldr	r3, [r3, #28]
 800fa28:	429a      	cmp	r2, r3
 800fa2a:	d113      	bne.n	800fa54 <arp_handle_request+0x44>
 800fa2c:	2206      	movs	r2, #6
 800fa2e:	4d0b      	ldr	r5, [pc, #44]	; (800fa5c <arp_handle_request+0x4c>)
 800fa30:	18a1      	adds	r1, r4, r2
 800fa32:	4628      	mov	r0, r5
 800fa34:	f7ff ffd8 	bl	800f9e8 <memcpy.isra.0>
 800fa38:	f104 0116 	add.w	r1, r4, #22
 800fa3c:	f105 0020 	add.w	r0, r5, #32
 800fa40:	2206      	movs	r2, #6
 800fa42:	f7ff ffd1 	bl	800f9e8 <memcpy.isra.0>
 800fa46:	69e3      	ldr	r3, [r4, #28]
 800fa48:	212a      	movs	r1, #42	; 0x2a
 800fa4a:	4628      	mov	r0, r5
 800fa4c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800fa50:	f002 f962 	bl	8011d18 <emac_eth_send>
 800fa54:	b003      	add	sp, #12
 800fa56:	bd30      	pop	{r4, r5, pc}
 800fa58:	20009618 	andcs	r9, r0, r8, lsl r6
 800fa5c:	20009644 	andcs	r9, r0, r4, asr #12

0800fa60 <arp_handle_reply>:
 800fa60:	69c1      	ldr	r1, [r0, #28]
 800fa62:	3016      	adds	r0, #22
 800fa64:	f000 b80a 	b.w	800fa7c <arp_cache_update>

0800fa68 <arp_send_request>:
 800fa68:	4b03      	ldr	r3, [pc, #12]	; (800fa78 <arp_send_request+0x10>)
 800fa6a:	212a      	movs	r1, #42	; 0x2a
 800fa6c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800fa70:	4618      	mov	r0, r3
 800fa72:	f002 b951 	b.w	8011d18 <emac_eth_send>
 800fa76:	bf00      	nop
 800fa78:	20009670 	andcs	r9, r0, r0, ror r6

0800fa7c <arp_cache_update>:
 800fa7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa7e:	4e11      	ldr	r6, [pc, #68]	; (800fac4 <arp_cache_update+0x48>)
 800fa80:	8833      	ldrh	r3, [r6, #0]
 800fa82:	2b20      	cmp	r3, #32
 800fa84:	d018      	beq.n	800fab8 <arp_cache_update+0x3c>
 800fa86:	2400      	movs	r4, #0
 800fa88:	220c      	movs	r2, #12
 800fa8a:	4d0f      	ldr	r5, [pc, #60]	; (800fac8 <arp_cache_update+0x4c>)
 800fa8c:	b2a7      	uxth	r7, r4
 800fa8e:	42bb      	cmp	r3, r7
 800fa90:	d80b      	bhi.n	800faaa <arp_cache_update+0x2e>
 800fa92:	fb02 5203 	mla	r2, r2, r3, r5
 800fa96:	1d84      	adds	r4, r0, #6
 800fa98:	3203      	adds	r2, #3
 800fa9a:	42a0      	cmp	r0, r4
 800fa9c:	d10d      	bne.n	800faba <arp_cache_update+0x3e>
 800fa9e:	220c      	movs	r2, #12
 800faa0:	435a      	muls	r2, r3
 800faa2:	3301      	adds	r3, #1
 800faa4:	50a9      	str	r1, [r5, r2]
 800faa6:	8033      	strh	r3, [r6, #0]
 800faa8:	e006      	b.n	800fab8 <arp_cache_update+0x3c>
 800faaa:	3401      	adds	r4, #1
 800faac:	fb02 5704 	mla	r7, r2, r4, r5
 800fab0:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800fab4:	428f      	cmp	r7, r1
 800fab6:	d1e9      	bne.n	800fa8c <arp_cache_update+0x10>
 800fab8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800faba:	f810 7b01 	ldrb.w	r7, [r0], #1
 800fabe:	f802 7f01 	strb.w	r7, [r2, #1]!
 800fac2:	e7ea      	b.n	800fa9a <arp_cache_update+0x1e>
 800fac4:	2000981c 	andcs	r9, r0, ip, lsl r8
 800fac8:	2000969c 	mulcs	r0, ip, r6

0800facc <arp_cache_lookup>:
 800facc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fad0:	2200      	movs	r2, #0
 800fad2:	4606      	mov	r6, r0
 800fad4:	460c      	mov	r4, r1
 800fad6:	200c      	movs	r0, #12
 800fad8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800fb60 <arp_cache_lookup+0x94>
 800fadc:	fb00 f302 	mul.w	r3, r0, r2
 800fae0:	f853 1008 	ldr.w	r1, [r3, r8]
 800fae4:	42b1      	cmp	r1, r6
 800fae6:	d10d      	bne.n	800fb04 <arp_cache_lookup+0x38>
 800fae8:	3304      	adds	r3, #4
 800faea:	4443      	add	r3, r8
 800faec:	3c01      	subs	r4, #1
 800faee:	1d9a      	adds	r2, r3, #6
 800faf0:	4293      	cmp	r3, r2
 800faf2:	d102      	bne.n	800fafa <arp_cache_lookup+0x2e>
 800faf4:	4630      	mov	r0, r6
 800faf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fafa:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fafe:	f804 1f01 	strb.w	r1, [r4, #1]!
 800fb02:	e7f5      	b.n	800faf0 <arp_cache_lookup+0x24>
 800fb04:	b111      	cbz	r1, 800fb0c <arp_cache_lookup+0x40>
 800fb06:	3201      	adds	r2, #1
 800fb08:	2a20      	cmp	r2, #32
 800fb0a:	d1e7      	bne.n	800fadc <arp_cache_lookup+0x10>
 800fb0c:	2704      	movs	r7, #4
 800fb0e:	f8df a054 	ldr.w	sl, [pc, #84]	; 800fb64 <arp_cache_lookup+0x98>
 800fb12:	f8ba 5000 	ldrh.w	r5, [sl]
 800fb16:	3f01      	subs	r7, #1
 800fb18:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800fb1c:	d101      	bne.n	800fb22 <arp_cache_lookup+0x56>
 800fb1e:	463e      	mov	r6, r7
 800fb20:	e7e8      	b.n	800faf4 <arp_cache_lookup+0x28>
 800fb22:	4630      	mov	r0, r6
 800fb24:	f7ff ffa0 	bl	800fa68 <arp_send_request>
 800fb28:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800fb2c:	f1b9 0901 	subs.w	r9, r9, #1
 800fb30:	f8ba 3000 	ldrh.w	r3, [sl]
 800fb34:	d011      	beq.n	800fb5a <arp_cache_lookup+0x8e>
 800fb36:	429d      	cmp	r5, r3
 800fb38:	d00c      	beq.n	800fb54 <arp_cache_lookup+0x88>
 800fb3a:	230c      	movs	r3, #12
 800fb3c:	fb03 8505 	mla	r5, r3, r5, r8
 800fb40:	3c01      	subs	r4, #1
 800fb42:	1d2b      	adds	r3, r5, #4
 800fb44:	350a      	adds	r5, #10
 800fb46:	42ab      	cmp	r3, r5
 800fb48:	d0d4      	beq.n	800faf4 <arp_cache_lookup+0x28>
 800fb4a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb4e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800fb52:	e7f8      	b.n	800fb46 <arp_cache_lookup+0x7a>
 800fb54:	f7f7 fce4 	bl	8007520 <net_handle>
 800fb58:	e7e8      	b.n	800fb2c <arp_cache_lookup+0x60>
 800fb5a:	429d      	cmp	r5, r3
 800fb5c:	d0db      	beq.n	800fb16 <arp_cache_lookup+0x4a>
 800fb5e:	e7ec      	b.n	800fb3a <arp_cache_lookup+0x6e>
 800fb60:	2000969c 	mulcs	r0, ip, r6
 800fb64:	2000981c 	andcs	r9, r0, ip, lsl r8

0800fb68 <_parse_response>:
 800fb68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb6c:	2400      	movs	r4, #0
 800fb6e:	460d      	mov	r5, r1
 800fb70:	46a3      	mov	fp, r4
 800fb72:	4627      	mov	r7, r4
 800fb74:	46a2      	mov	sl, r4
 800fb76:	46a1      	mov	r9, r4
 800fb78:	46a0      	mov	r8, r4
 800fb7a:	4e50      	ldr	r6, [pc, #320]	; (800fcbc <_parse_response+0x154>)
 800fb7c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800fb80:	6833      	ldr	r3, [r6, #0]
 800fb82:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800fb86:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800fb8a:	9009      	str	r0, [sp, #36]	; 0x24
 800fb8c:	9402      	str	r4, [sp, #8]
 800fb8e:	9407      	str	r4, [sp, #28]
 800fb90:	9308      	str	r3, [sp, #32]
 800fb92:	f7f7 fcc5 	bl	8007520 <net_handle>
 800fb96:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800fb9a:	9300      	str	r3, [sp, #0]
 800fb9c:	f44f 7209 	mov.w	r2, #548	; 0x224
 800fba0:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800fba4:	ab0c      	add	r3, sp, #48	; 0x30
 800fba6:	a90d      	add	r1, sp, #52	; 0x34
 800fba8:	f7fe fe22 	bl	800e7f0 <udp_recv>
 800fbac:	2800      	cmp	r0, #0
 800fbae:	d03f      	beq.n	800fc30 <_parse_response+0xc8>
 800fbb0:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800fbb4:	2b43      	cmp	r3, #67	; 0x43
 800fbb6:	d13b      	bne.n	800fc30 <_parse_response+0xc8>
 800fbb8:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800fbbc:	1e6b      	subs	r3, r5, #1
 800fbbe:	1d69      	adds	r1, r5, #5
 800fbc0:	4299      	cmp	r1, r3
 800fbc2:	d12f      	bne.n	800fc24 <_parse_response+0xbc>
 800fbc4:	2100      	movs	r1, #0
 800fbc6:	ab0d      	add	r3, sp, #52	; 0x34
 800fbc8:	181d      	adds	r5, r3, r0
 800fbca:	468c      	mov	ip, r1
 800fbcc:	460e      	mov	r6, r1
 800fbce:	4608      	mov	r0, r1
 800fbd0:	ab49      	add	r3, sp, #292	; 0x124
 800fbd2:	42ab      	cmp	r3, r5
 800fbd4:	d337      	bcc.n	800fc46 <_parse_response+0xde>
 800fbd6:	b141      	cbz	r1, 800fbea <_parse_response+0x82>
 800fbd8:	4b39      	ldr	r3, [pc, #228]	; (800fcc0 <_parse_response+0x158>)
 800fbda:	9a07      	ldr	r2, [sp, #28]
 800fbdc:	f883 8003 	strb.w	r8, [r3, #3]
 800fbe0:	709a      	strb	r2, [r3, #2]
 800fbe2:	9a06      	ldr	r2, [sp, #24]
 800fbe4:	705a      	strb	r2, [r3, #1]
 800fbe6:	9a05      	ldr	r2, [sp, #20]
 800fbe8:	701a      	strb	r2, [r3, #0]
 800fbea:	f1bc 0f00 	cmp.w	ip, #0
 800fbee:	d007      	beq.n	800fc00 <_parse_response+0x98>
 800fbf0:	4b34      	ldr	r3, [pc, #208]	; (800fcc4 <_parse_response+0x15c>)
 800fbf2:	9a04      	ldr	r2, [sp, #16]
 800fbf4:	705c      	strb	r4, [r3, #1]
 800fbf6:	70da      	strb	r2, [r3, #3]
 800fbf8:	9a03      	ldr	r2, [sp, #12]
 800fbfa:	709a      	strb	r2, [r3, #2]
 800fbfc:	9a02      	ldr	r2, [sp, #8]
 800fbfe:	701a      	strb	r2, [r3, #0]
 800fc00:	b13e      	cbz	r6, 800fc12 <_parse_response+0xaa>
 800fc02:	4b31      	ldr	r3, [pc, #196]	; (800fcc8 <_parse_response+0x160>)
 800fc04:	70df      	strb	r7, [r3, #3]
 800fc06:	f883 a002 	strb.w	sl, [r3, #2]
 800fc0a:	f883 9001 	strb.w	r9, [r3, #1]
 800fc0e:	f883 b000 	strb.w	fp, [r3]
 800fc12:	2802      	cmp	r0, #2
 800fc14:	d102      	bne.n	800fc1c <_parse_response+0xb4>
 800fc16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fc18:	4b2c      	ldr	r3, [pc, #176]	; (800fccc <_parse_response+0x164>)
 800fc1a:	601a      	str	r2, [r3, #0]
 800fc1c:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800fc20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc24:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800fc28:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800fc2c:	45e6      	cmp	lr, ip
 800fc2e:	d0c7      	beq.n	800fbc0 <_parse_response+0x58>
 800fc30:	6833      	ldr	r3, [r6, #0]
 800fc32:	9a08      	ldr	r2, [sp, #32]
 800fc34:	1a9b      	subs	r3, r3, r2
 800fc36:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800fc3a:	d3aa      	bcc.n	800fb92 <_parse_response+0x2a>
 800fc3c:	2800      	cmp	r0, #0
 800fc3e:	d1c1      	bne.n	800fbc4 <_parse_response+0x5c>
 800fc40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fc44:	e7ea      	b.n	800fc1c <_parse_response+0xb4>
 800fc46:	781a      	ldrb	r2, [r3, #0]
 800fc48:	2a35      	cmp	r2, #53	; 0x35
 800fc4a:	d011      	beq.n	800fc70 <_parse_response+0x108>
 800fc4c:	d808      	bhi.n	800fc60 <_parse_response+0xf8>
 800fc4e:	2a01      	cmp	r2, #1
 800fc50:	d011      	beq.n	800fc76 <_parse_response+0x10e>
 800fc52:	2a03      	cmp	r2, #3
 800fc54:	d019      	beq.n	800fc8a <_parse_response+0x122>
 800fc56:	b14a      	cbz	r2, 800fc6c <_parse_response+0x104>
 800fc58:	1c9a      	adds	r2, r3, #2
 800fc5a:	785b      	ldrb	r3, [r3, #1]
 800fc5c:	4413      	add	r3, r2
 800fc5e:	e7b8      	b.n	800fbd2 <_parse_response+0x6a>
 800fc60:	2a36      	cmp	r2, #54	; 0x36
 800fc62:	d01f      	beq.n	800fca4 <_parse_response+0x13c>
 800fc64:	2aff      	cmp	r2, #255	; 0xff
 800fc66:	d1f7      	bne.n	800fc58 <_parse_response+0xf0>
 800fc68:	462b      	mov	r3, r5
 800fc6a:	e7b2      	b.n	800fbd2 <_parse_response+0x6a>
 800fc6c:	3301      	adds	r3, #1
 800fc6e:	e7b0      	b.n	800fbd2 <_parse_response+0x6a>
 800fc70:	7898      	ldrb	r0, [r3, #2]
 800fc72:	3303      	adds	r3, #3
 800fc74:	e7ad      	b.n	800fbd2 <_parse_response+0x6a>
 800fc76:	f893 b002 	ldrb.w	fp, [r3, #2]
 800fc7a:	f893 9003 	ldrb.w	r9, [r3, #3]
 800fc7e:	f893 a004 	ldrb.w	sl, [r3, #4]
 800fc82:	795f      	ldrb	r7, [r3, #5]
 800fc84:	4616      	mov	r6, r2
 800fc86:	3306      	adds	r3, #6
 800fc88:	e7a3      	b.n	800fbd2 <_parse_response+0x6a>
 800fc8a:	789a      	ldrb	r2, [r3, #2]
 800fc8c:	78dc      	ldrb	r4, [r3, #3]
 800fc8e:	9202      	str	r2, [sp, #8]
 800fc90:	791a      	ldrb	r2, [r3, #4]
 800fc92:	f04f 0c01 	mov.w	ip, #1
 800fc96:	9203      	str	r2, [sp, #12]
 800fc98:	795a      	ldrb	r2, [r3, #5]
 800fc9a:	9204      	str	r2, [sp, #16]
 800fc9c:	785a      	ldrb	r2, [r3, #1]
 800fc9e:	4413      	add	r3, r2
 800fca0:	3302      	adds	r3, #2
 800fca2:	e796      	b.n	800fbd2 <_parse_response+0x6a>
 800fca4:	789a      	ldrb	r2, [r3, #2]
 800fca6:	f893 8005 	ldrb.w	r8, [r3, #5]
 800fcaa:	9205      	str	r2, [sp, #20]
 800fcac:	78da      	ldrb	r2, [r3, #3]
 800fcae:	2101      	movs	r1, #1
 800fcb0:	9206      	str	r2, [sp, #24]
 800fcb2:	791a      	ldrb	r2, [r3, #4]
 800fcb4:	3306      	adds	r3, #6
 800fcb6:	9207      	str	r2, [sp, #28]
 800fcb8:	e78b      	b.n	800fbd2 <_parse_response+0x6a>
 800fcba:	bf00      	nop
 800fcbc:	20009cec 	andcs	r9, r0, ip, ror #25
 800fcc0:	20009a50 	andcs	r9, r0, r0, asr sl
 800fcc4:	20009820 	andcs	r9, r0, r0, lsr #16
 800fcc8:	20009828 	andcs	r9, r0, r8, lsr #16
 800fccc:	20009824 	andcs	r9, r0, r4, lsr #16

0800fcd0 <memcpy.isra.0>:
 800fcd0:	3801      	subs	r0, #1
 800fcd2:	440a      	add	r2, r1
 800fcd4:	4291      	cmp	r1, r2
 800fcd6:	d100      	bne.n	800fcda <memcpy.isra.0+0xa>
 800fcd8:	4770      	bx	lr
 800fcda:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fcde:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fce2:	e7f7      	b.n	800fcd4 <memcpy.isra.0+0x4>

0800fce4 <dhcp_client>:
 800fce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fce8:	b087      	sub	sp, #28
 800fcea:	9203      	str	r2, [sp, #12]
 800fcec:	4a77      	ldr	r2, [pc, #476]	; (800fecc <dhcp_client+0x1e8>)
 800fcee:	460f      	mov	r7, r1
 800fcf0:	4605      	mov	r5, r0
 800fcf2:	f44f 7309 	mov.w	r3, #548	; 0x224
 800fcf6:	4614      	mov	r4, r2
 800fcf8:	2100      	movs	r1, #0
 800fcfa:	3b01      	subs	r3, #1
 800fcfc:	f802 1b01 	strb.w	r1, [r2], #1
 800fd00:	d1fb      	bne.n	800fcfa <dhcp_client+0x16>
 800fd02:	f240 1301 	movw	r3, #257	; 0x101
 800fd06:	2206      	movs	r2, #6
 800fd08:	4629      	mov	r1, r5
 800fd0a:	4871      	ldr	r0, [pc, #452]	; (800fed0 <dhcp_client+0x1ec>)
 800fd0c:	8023      	strh	r3, [r4, #0]
 800fd0e:	70a2      	strb	r2, [r4, #2]
 800fd10:	f7ff ffde 	bl	800fcd0 <memcpy.isra.0>
 800fd14:	4b6f      	ldr	r3, [pc, #444]	; (800fed4 <dhcp_client+0x1f0>)
 800fd16:	2044      	movs	r0, #68	; 0x44
 800fd18:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800fd1c:	f240 1335 	movw	r3, #309	; 0x135
 800fd20:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800fd24:	f7fe fd2a 	bl	800e77c <udp_bind>
 800fd28:	1e06      	subs	r6, r0, #0
 800fd2a:	f2c0 80c9 	blt.w	800fec0 <dhcp_client+0x1dc>
 800fd2e:	f04f 0915 	mov.w	r9, #21
 800fd32:	f8df a198 	ldr.w	sl, [pc, #408]	; 800fecc <dhcp_client+0x1e8>
 800fd36:	f1b9 0901 	subs.w	r9, r9, #1
 800fd3a:	d11f      	bne.n	800fd7c <dhcp_client+0x98>
 800fd3c:	464c      	mov	r4, r9
 800fd3e:	2044      	movs	r0, #68	; 0x44
 800fd40:	f7fe fd36 	bl	800e7b0 <udp_unbind>
 800fd44:	2c00      	cmp	r4, #0
 800fd46:	f000 80be 	beq.w	800fec6 <dhcp_client+0x1e2>
 800fd4a:	2204      	movs	r2, #4
 800fd4c:	4962      	ldr	r1, [pc, #392]	; (800fed8 <dhcp_client+0x1f4>)
 800fd4e:	a805      	add	r0, sp, #20
 800fd50:	f7ff ffbe 	bl	800fcd0 <memcpy.isra.0>
 800fd54:	9b05      	ldr	r3, [sp, #20]
 800fd56:	2204      	movs	r2, #4
 800fd58:	4960      	ldr	r1, [pc, #384]	; (800fedc <dhcp_client+0x1f8>)
 800fd5a:	603b      	str	r3, [r7, #0]
 800fd5c:	a805      	add	r0, sp, #20
 800fd5e:	f7ff ffb7 	bl	800fcd0 <memcpy.isra.0>
 800fd62:	9b05      	ldr	r3, [sp, #20]
 800fd64:	a805      	add	r0, sp, #20
 800fd66:	60bb      	str	r3, [r7, #8]
 800fd68:	2204      	movs	r2, #4
 800fd6a:	495d      	ldr	r1, [pc, #372]	; (800fee0 <dhcp_client+0x1fc>)
 800fd6c:	f7ff ffb0 	bl	800fcd0 <memcpy.isra.0>
 800fd70:	2000      	movs	r0, #0
 800fd72:	9b05      	ldr	r3, [sp, #20]
 800fd74:	607b      	str	r3, [r7, #4]
 800fd76:	b007      	add	sp, #28
 800fd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd7c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800fd80:	f240 1807 	movw	r8, #263	; 0x107
 800fd84:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fd88:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fd8c:	782b      	ldrb	r3, [r5, #0]
 800fd8e:	4a55      	ldr	r2, [pc, #340]	; (800fee4 <dhcp_client+0x200>)
 800fd90:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fd94:	786b      	ldrb	r3, [r5, #1]
 800fd96:	fa5f fb86 	uxtb.w	fp, r6
 800fd9a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fd9e:	78ab      	ldrb	r3, [r5, #2]
 800fda0:	4651      	mov	r1, sl
 800fda2:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fda6:	78eb      	ldrb	r3, [r5, #3]
 800fda8:	4658      	mov	r0, fp
 800fdaa:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fdae:	792b      	ldrb	r3, [r5, #4]
 800fdb0:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fdb4:	796b      	ldrb	r3, [r5, #5]
 800fdb6:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fdba:	4b4b      	ldr	r3, [pc, #300]	; (800fee8 <dhcp_client+0x204>)
 800fdbc:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800fdc0:	23ff      	movs	r3, #255	; 0xff
 800fdc2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800fdc6:	2343      	movs	r3, #67	; 0x43
 800fdc8:	f240 1205 	movw	r2, #261	; 0x105
 800fdcc:	9300      	str	r3, [sp, #0]
 800fdce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fdd2:	f7fe fd69 	bl	800e8a8 <udp_send>
 800fdd6:	4629      	mov	r1, r5
 800fdd8:	4630      	mov	r0, r6
 800fdda:	f7ff fec5 	bl	800fb68 <_parse_response>
 800fdde:	2802      	cmp	r0, #2
 800fde0:	d1a9      	bne.n	800fd36 <dhcp_client+0x52>
 800fde2:	f643 5303 	movw	r3, #15619	; 0x3d03
 800fde6:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fdea:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fdee:	782b      	ldrb	r3, [r5, #0]
 800fdf0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800feec <dhcp_client+0x208>
 800fdf4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fdf8:	786b      	ldrb	r3, [r5, #1]
 800fdfa:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fdfe:	78ab      	ldrb	r3, [r5, #2]
 800fe00:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fe04:	78eb      	ldrb	r3, [r5, #3]
 800fe06:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fe0a:	792b      	ldrb	r3, [r5, #4]
 800fe0c:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fe10:	796b      	ldrb	r3, [r5, #5]
 800fe12:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fe16:	f240 4332 	movw	r3, #1074	; 0x432
 800fe1a:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800fe1e:	4b2e      	ldr	r3, [pc, #184]	; (800fed8 <dhcp_client+0x1f4>)
 800fe20:	881a      	ldrh	r2, [r3, #0]
 800fe22:	885b      	ldrh	r3, [r3, #2]
 800fe24:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800fe28:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800fe2c:	f240 4336 	movw	r3, #1078	; 0x436
 800fe30:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800fe34:	4b2e      	ldr	r3, [pc, #184]	; (800fef0 <dhcp_client+0x20c>)
 800fe36:	221e      	movs	r2, #30
 800fe38:	681b      	ldr	r3, [r3, #0]
 800fe3a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800fe3e:	230c      	movs	r3, #12
 800fe40:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800fe44:	9b03      	ldr	r3, [sp, #12]
 800fe46:	1e58      	subs	r0, r3, #1
 800fe48:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800fe4c:	f1a2 0e1e 	sub.w	lr, r2, #30
 800fe50:	1c51      	adds	r1, r2, #1
 800fe52:	bb8b      	cbnz	r3, 800feb8 <dhcp_client+0x1d4>
 800fe54:	2037      	movs	r0, #55	; 0x37
 800fe56:	18a3      	adds	r3, r4, r2
 800fe58:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800fe5c:	2006      	movs	r0, #6
 800fe5e:	4421      	add	r1, r4
 800fe60:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800fe64:	2103      	movs	r1, #3
 800fe66:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800fe6a:	210f      	movs	r1, #15
 800fe6c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800fe70:	213a      	movs	r1, #58	; 0x3a
 800fe72:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800fe76:	213b      	movs	r1, #59	; 0x3b
 800fe78:	f04f 0801 	mov.w	r8, #1
 800fe7c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800fe80:	21ff      	movs	r1, #255	; 0xff
 800fe82:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800fe86:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800fe8a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800fe8e:	2343      	movs	r3, #67	; 0x43
 800fe90:	32f5      	adds	r2, #245	; 0xf5
 800fe92:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800fe96:	4651      	mov	r1, sl
 800fe98:	9300      	str	r3, [sp, #0]
 800fe9a:	b292      	uxth	r2, r2
 800fe9c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fea0:	4658      	mov	r0, fp
 800fea2:	f7fe fd01 	bl	800e8a8 <udp_send>
 800fea6:	4629      	mov	r1, r5
 800fea8:	4630      	mov	r0, r6
 800feaa:	f7ff fe5d 	bl	800fb68 <_parse_response>
 800feae:	2805      	cmp	r0, #5
 800feb0:	f47f af41 	bne.w	800fd36 <dhcp_client+0x52>
 800feb4:	4644      	mov	r4, r8
 800feb6:	e742      	b.n	800fd3e <dhcp_client+0x5a>
 800feb8:	460a      	mov	r2, r1
 800feba:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800febe:	e7c3      	b.n	800fe48 <dhcp_client+0x164>
 800fec0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fec4:	e757      	b.n	800fd76 <dhcp_client+0x92>
 800fec6:	f06f 0001 	mvn.w	r0, #1
 800feca:	e754      	b.n	800fd76 <dhcp_client+0x92>
 800fecc:	2000982c 	andcs	r9, r0, ip, lsr #16
 800fed0:	20009848 	andcs	r9, r0, r8, asr #16
 800fed4:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800fed8:	20009824 	andcs	r9, r0, r4, lsr #16
 800fedc:	20009820 	andcs	r9, r0, r0, lsr #16
 800fee0:	20009828 	andcs	r9, r0, r8, lsr #16
 800fee4:	03010637 	movweq	r0, #5687	; 0x1637
 800fee8:	3b3a0f06 	blcc	8e93b08 <__exidx_end+0xe7e04c>
 800feec:	20009935 	andcs	r9, r0, r5, lsr r9
 800fef0:	20009a50 	andcs	r9, r0, r0, asr sl

0800fef4 <dhcp_client_release>:
 800fef4:	b507      	push	{r0, r1, r2, lr}
 800fef6:	2044      	movs	r0, #68	; 0x44
 800fef8:	f7fe fc40 	bl	800e77c <udp_bind>
 800fefc:	f243 6307 	movw	r3, #13831	; 0x3607
 800ff00:	4911      	ldr	r1, [pc, #68]	; (800ff48 <dhcp_client_release+0x54>)
 800ff02:	b2c0      	uxtb	r0, r0
 800ff04:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800ff08:	2304      	movs	r3, #4
 800ff0a:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800ff0e:	4b0f      	ldr	r3, [pc, #60]	; (800ff4c <dhcp_client_release+0x58>)
 800ff10:	781a      	ldrb	r2, [r3, #0]
 800ff12:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800ff16:	785a      	ldrb	r2, [r3, #1]
 800ff18:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800ff1c:	789a      	ldrb	r2, [r3, #2]
 800ff1e:	78db      	ldrb	r3, [r3, #3]
 800ff20:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800ff24:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800ff28:	23ff      	movs	r3, #255	; 0xff
 800ff2a:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800ff2e:	2343      	movs	r3, #67	; 0x43
 800ff30:	22fa      	movs	r2, #250	; 0xfa
 800ff32:	9300      	str	r3, [sp, #0]
 800ff34:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ff38:	f7fe fcb6 	bl	800e8a8 <udp_send>
 800ff3c:	2044      	movs	r0, #68	; 0x44
 800ff3e:	b003      	add	sp, #12
 800ff40:	f85d eb04 	ldr.w	lr, [sp], #4
 800ff44:	f7fe bc34 	b.w	800e7b0 <udp_unbind>
 800ff48:	2000982c 	andcs	r9, r0, ip, lsr #16
 800ff4c:	20009a50 	andcs	r9, r0, r0, asr sl

0800ff50 <memcpy.isra.0>:
 800ff50:	3801      	subs	r0, #1
 800ff52:	440a      	add	r2, r1
 800ff54:	4291      	cmp	r1, r2
 800ff56:	d100      	bne.n	800ff5a <memcpy.isra.0+0xa>
 800ff58:	4770      	bx	lr
 800ff5a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ff5e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ff62:	e7f7      	b.n	800ff54 <memcpy.isra.0+0x4>

0800ff64 <_send_report>:
 800ff64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ff66:	491c      	ldr	r1, [pc, #112]	; (800ffd8 <_send_report+0x74>)
 800ff68:	4c1c      	ldr	r4, [pc, #112]	; (800ffdc <_send_report+0x78>)
 800ff6a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800ff6e:	9001      	str	r0, [sp, #4]
 800ff70:	70cb      	strb	r3, [r1, #3]
 800ff72:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800ff76:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800ff7a:	710b      	strb	r3, [r1, #4]
 800ff7c:	7148      	strb	r0, [r1, #5]
 800ff7e:	2206      	movs	r2, #6
 800ff80:	4620      	mov	r0, r4
 800ff82:	f7ff ffe5 	bl	800ff50 <memcpy.isra.0>
 800ff86:	2204      	movs	r2, #4
 800ff88:	2700      	movs	r7, #0
 800ff8a:	4d15      	ldr	r5, [pc, #84]	; (800ffe0 <_send_report+0x7c>)
 800ff8c:	eb0d 0102 	add.w	r1, sp, r2
 800ff90:	882b      	ldrh	r3, [r5, #0]
 800ff92:	f104 001e 	add.w	r0, r4, #30
 800ff96:	f104 060e 	add.w	r6, r4, #14
 800ff9a:	8263      	strh	r3, [r4, #18]
 800ff9c:	f7ff ffd8 	bl	800ff50 <memcpy.isra.0>
 800ffa0:	2118      	movs	r1, #24
 800ffa2:	4630      	mov	r0, r6
 800ffa4:	8327      	strh	r7, [r4, #24]
 800ffa6:	f000 f8c6 	bl	8010136 <net_chksum>
 800ffaa:	2204      	movs	r2, #4
 800ffac:	8320      	strh	r0, [r4, #24]
 800ffae:	eb0d 0102 	add.w	r1, sp, r2
 800ffb2:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800ffb6:	f7ff ffcb 	bl	800ff50 <memcpy.isra.0>
 800ffba:	2120      	movs	r1, #32
 800ffbc:	4630      	mov	r0, r6
 800ffbe:	8527      	strh	r7, [r4, #40]	; 0x28
 800ffc0:	f000 f8b9 	bl	8010136 <net_chksum>
 800ffc4:	212e      	movs	r1, #46	; 0x2e
 800ffc6:	8520      	strh	r0, [r4, #40]	; 0x28
 800ffc8:	4620      	mov	r0, r4
 800ffca:	f001 fea5 	bl	8011d18 <emac_eth_send>
 800ffce:	882b      	ldrh	r3, [r5, #0]
 800ffd0:	3301      	adds	r3, #1
 800ffd2:	802b      	strh	r3, [r5, #0]
 800ffd4:	b003      	add	sp, #12
 800ffd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffd8:	20009bac 	andcs	r9, r0, ip, lsr #23
 800ffdc:	20009bb4 			; <UNDEFINED> instruction: 0x20009bb4
 800ffe0:	20009b74 	andcs	r9, r0, r4, ror fp

0800ffe4 <igmp_set_ip>:
 800ffe4:	b507      	push	{r0, r1, r2, lr}
 800ffe6:	2204      	movs	r2, #4
 800ffe8:	6803      	ldr	r3, [r0, #0]
 800ffea:	eb0d 0102 	add.w	r1, sp, r2
 800ffee:	4806      	ldr	r0, [pc, #24]	; (8010008 <igmp_set_ip+0x24>)
 800fff0:	9301      	str	r3, [sp, #4]
 800fff2:	f7ff ffad 	bl	800ff50 <memcpy.isra.0>
 800fff6:	2204      	movs	r2, #4
 800fff8:	4804      	ldr	r0, [pc, #16]	; (801000c <igmp_set_ip+0x28>)
 800fffa:	eb0d 0102 	add.w	r1, sp, r2
 800fffe:	f7ff ffa7 	bl	800ff50 <memcpy.isra.0>
 8010002:	b003      	add	sp, #12
 8010004:	f85d fb04 	ldr.w	pc, [sp], #4
 8010008:	20009bce 	andcs	r9, r0, lr, asr #23
 801000c:	20009b96 	mulcs	r0, r6, fp

08010010 <igmp_timer>:
 8010010:	b570      	push	{r4, r5, r6, lr}
 8010012:	2500      	movs	r5, #0
 8010014:	2602      	movs	r6, #2
 8010016:	4c0a      	ldr	r4, [pc, #40]	; (8010040 <igmp_timer+0x30>)
 8010018:	7963      	ldrb	r3, [r4, #5]
 801001a:	2b01      	cmp	r3, #1
 801001c:	d109      	bne.n	8010032 <igmp_timer+0x22>
 801001e:	7923      	ldrb	r3, [r4, #4]
 8010020:	b13b      	cbz	r3, 8010032 <igmp_timer+0x22>
 8010022:	3b01      	subs	r3, #1
 8010024:	b2db      	uxtb	r3, r3
 8010026:	7123      	strb	r3, [r4, #4]
 8010028:	b91b      	cbnz	r3, 8010032 <igmp_timer+0x22>
 801002a:	6820      	ldr	r0, [r4, #0]
 801002c:	f7ff ff9a 	bl	800ff64 <_send_report>
 8010030:	7166      	strb	r6, [r4, #5]
 8010032:	3501      	adds	r5, #1
 8010034:	2d24      	cmp	r5, #36	; 0x24
 8010036:	f104 0408 	add.w	r4, r4, #8
 801003a:	d1ed      	bne.n	8010018 <igmp_timer+0x8>
 801003c:	bd70      	pop	{r4, r5, r6, pc}
 801003e:	bf00      	nop
 8010040:	20009a54 	andcs	r9, r0, r4, asr sl

08010044 <igmp_join>:
 8010044:	b538      	push	{r3, r4, r5, lr}
 8010046:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 801004a:	2be0      	cmp	r3, #224	; 0xe0
 801004c:	d11b      	bne.n	8010086 <igmp_join+0x42>
 801004e:	4911      	ldr	r1, [pc, #68]	; (8010094 <igmp_join+0x50>)
 8010050:	680c      	ldr	r4, [r1, #0]
 8010052:	2c24      	cmp	r4, #36	; 0x24
 8010054:	d01a      	beq.n	801008c <igmp_join+0x48>
 8010056:	2300      	movs	r3, #0
 8010058:	4a0f      	ldr	r2, [pc, #60]	; (8010098 <igmp_join+0x54>)
 801005a:	429c      	cmp	r4, r3
 801005c:	dc0d      	bgt.n	801007a <igmp_join+0x36>
 801005e:	f44f 7381 	mov.w	r3, #258	; 0x102
 8010062:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8010066:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 801006a:	8093      	strh	r3, [r2, #4]
 801006c:	1c63      	adds	r3, r4, #1
 801006e:	600b      	str	r3, [r1, #0]
 8010070:	f7ff ff78 	bl	800ff64 <_send_report>
 8010074:	4623      	mov	r3, r4
 8010076:	4618      	mov	r0, r3
 8010078:	bd38      	pop	{r3, r4, r5, pc}
 801007a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 801007e:	4285      	cmp	r5, r0
 8010080:	d0f9      	beq.n	8010076 <igmp_join+0x32>
 8010082:	3301      	adds	r3, #1
 8010084:	e7e9      	b.n	801005a <igmp_join+0x16>
 8010086:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801008a:	e7f4      	b.n	8010076 <igmp_join+0x32>
 801008c:	f06f 0301 	mvn.w	r3, #1
 8010090:	e7f1      	b.n	8010076 <igmp_join+0x32>
 8010092:	bf00      	nop
 8010094:	20009b78 	andcs	r9, r0, r8, ror fp
 8010098:	20009a54 	andcs	r9, r0, r4, asr sl

0801009c <igmp_leave>:
 801009c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80100a0:	2600      	movs	r6, #0
 80100a2:	4f1c      	ldr	r7, [pc, #112]	; (8010114 <igmp_leave+0x78>)
 80100a4:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 80100a8:	4283      	cmp	r3, r0
 80100aa:	d007      	beq.n	80100bc <igmp_leave+0x20>
 80100ac:	3601      	adds	r6, #1
 80100ae:	2e24      	cmp	r6, #36	; 0x24
 80100b0:	d1f8      	bne.n	80100a4 <igmp_leave+0x8>
 80100b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80100b6:	b002      	add	sp, #8
 80100b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80100bc:	2400      	movs	r4, #0
 80100be:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8010118 <igmp_leave+0x7c>
 80100c2:	4d16      	ldr	r5, [pc, #88]	; (801011c <igmp_leave+0x80>)
 80100c4:	f8b8 3000 	ldrh.w	r3, [r8]
 80100c8:	2118      	movs	r1, #24
 80100ca:	9001      	str	r0, [sp, #4]
 80100cc:	4814      	ldr	r0, [pc, #80]	; (8010120 <igmp_leave+0x84>)
 80100ce:	826b      	strh	r3, [r5, #18]
 80100d0:	832c      	strh	r4, [r5, #24]
 80100d2:	f000 f830 	bl	8010136 <net_chksum>
 80100d6:	2204      	movs	r2, #4
 80100d8:	8328      	strh	r0, [r5, #24]
 80100da:	eb0d 0102 	add.w	r1, sp, r2
 80100de:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80100e2:	f7ff ff35 	bl	800ff50 <memcpy.isra.0>
 80100e6:	2120      	movs	r1, #32
 80100e8:	f105 000e 	add.w	r0, r5, #14
 80100ec:	852c      	strh	r4, [r5, #40]	; 0x28
 80100ee:	f000 f822 	bl	8010136 <net_chksum>
 80100f2:	212e      	movs	r1, #46	; 0x2e
 80100f4:	8528      	strh	r0, [r5, #40]	; 0x28
 80100f6:	4628      	mov	r0, r5
 80100f8:	f001 fe0e 	bl	8011d18 <emac_eth_send>
 80100fc:	f8b8 3000 	ldrh.w	r3, [r8]
 8010100:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8010104:	3301      	adds	r3, #1
 8010106:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 801010a:	4620      	mov	r0, r4
 801010c:	f8a8 3000 	strh.w	r3, [r8]
 8010110:	80bc      	strh	r4, [r7, #4]
 8010112:	e7d0      	b.n	80100b6 <igmp_leave+0x1a>
 8010114:	20009a54 	andcs	r9, r0, r4, asr sl
 8010118:	20009b74 	andcs	r9, r0, r4, ror fp
 801011c:	20009b7c 	andcs	r9, r0, ip, ror fp
 8010120:	20009bc2 	andcs	r9, r0, r2, asr #23

08010124 <ip_set_ip>:
 8010124:	b510      	push	{r4, lr}
 8010126:	4604      	mov	r4, r0
 8010128:	f7fe fb08 	bl	800e73c <udp_set_ip>
 801012c:	4620      	mov	r0, r4
 801012e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010132:	f7ff bf57 	b.w	800ffe4 <igmp_set_ip>

08010136 <net_chksum>:
 8010136:	2300      	movs	r3, #0
 8010138:	f021 0201 	bic.w	r2, r1, #1
 801013c:	b530      	push	{r4, r5, lr}
 801013e:	1884      	adds	r4, r0, r2
 8010140:	42a0      	cmp	r0, r4
 8010142:	d10b      	bne.n	801015c <net_chksum+0x26>
 8010144:	4291      	cmp	r1, r2
 8010146:	d004      	beq.n	8010152 <net_chksum+0x1c>
 8010148:	7802      	ldrb	r2, [r0, #0]
 801014a:	0212      	lsls	r2, r2, #8
 801014c:	ba52      	rev16	r2, r2
 801014e:	b292      	uxth	r2, r2
 8010150:	4413      	add	r3, r2
 8010152:	0c1a      	lsrs	r2, r3, #16
 8010154:	d106      	bne.n	8010164 <net_chksum+0x2e>
 8010156:	43d8      	mvns	r0, r3
 8010158:	b280      	uxth	r0, r0
 801015a:	bd30      	pop	{r4, r5, pc}
 801015c:	f830 5b02 	ldrh.w	r5, [r0], #2
 8010160:	442b      	add	r3, r5
 8010162:	e7ed      	b.n	8010140 <net_chksum+0xa>
 8010164:	b29b      	uxth	r3, r3
 8010166:	e7f3      	b.n	8010150 <net_chksum+0x1a>

08010168 <memcpy.isra.0>:
 8010168:	3801      	subs	r0, #1
 801016a:	440a      	add	r2, r1
 801016c:	4291      	cmp	r1, r2
 801016e:	d100      	bne.n	8010172 <memcpy.isra.0+0xa>
 8010170:	4770      	bx	lr
 8010172:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010176:	f800 3f01 	strb.w	r3, [r0, #1]!
 801017a:	e7f7      	b.n	801016c <memcpy.isra.0+0x4>

0801017c <properties::convert_json_file(char*, unsigned short, bool)>:
 801017c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010180:	4603      	mov	r3, r0
 8010182:	7800      	ldrb	r0, [r0, #0]
 8010184:	287b      	cmp	r0, #123	; 0x7b
 8010186:	f040 80a2 	bne.w	80102ce <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 801018a:	b17a      	cbz	r2, 80101ac <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 801018c:	2401      	movs	r4, #1
 801018e:	461e      	mov	r6, r3
 8010190:	4620      	mov	r0, r4
 8010192:	2a00      	cmp	r2, #0
 8010194:	bf0c      	ite	eq
 8010196:	f04f 0c0a 	moveq.w	ip, #10
 801019a:	f04f 0c00 	movne.w	ip, #0
 801019e:	273d      	movs	r7, #61	; 0x3d
 80101a0:	42a1      	cmp	r1, r4
 80101a2:	d850      	bhi.n	8010246 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 80101a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80101a8:	463c      	mov	r4, r7
 80101aa:	e7f2      	b.n	8010192 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80101ac:	2023      	movs	r0, #35	; 0x23
 80101ae:	f803 0b01 	strb.w	r0, [r3], #1
 80101b2:	461c      	mov	r4, r3
 80101b4:	2701      	movs	r7, #1
 80101b6:	42b9      	cmp	r1, r7
 80101b8:	d811      	bhi.n	80101de <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 80101ba:	2001      	movs	r0, #1
 80101bc:	461e      	mov	r6, r3
 80101be:	230a      	movs	r3, #10
 80101c0:	4625      	mov	r5, r4
 80101c2:	f806 3b01 	strb.w	r3, [r6], #1
 80101c6:	3001      	adds	r0, #1
 80101c8:	462b      	mov	r3, r5
 80101ca:	781c      	ldrb	r4, [r3, #0]
 80101cc:	3501      	adds	r5, #1
 80101ce:	2c7b      	cmp	r4, #123	; 0x7b
 80101d0:	d0ea      	beq.n	80101a8 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 80101d2:	42b9      	cmp	r1, r7
 80101d4:	f107 0401 	add.w	r4, r7, #1
 80101d8:	d9db      	bls.n	8010192 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80101da:	4627      	mov	r7, r4
 80101dc:	e7f4      	b.n	80101c8 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 80101de:	f814 0b01 	ldrb.w	r0, [r4], #1
 80101e2:	2822      	cmp	r0, #34	; 0x22
 80101e4:	d119      	bne.n	801021a <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 80101e6:	46a4      	mov	ip, r4
 80101e8:	461d      	mov	r5, r3
 80101ea:	2601      	movs	r6, #1
 80101ec:	f89c e000 	ldrb.w	lr, [ip]
 80101f0:	4664      	mov	r4, ip
 80101f2:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80101f6:	462b      	mov	r3, r5
 80101f8:	4630      	mov	r0, r6
 80101fa:	f10c 0c01 	add.w	ip, ip, #1
 80101fe:	f105 0501 	add.w	r5, r5, #1
 8010202:	f106 0601 	add.w	r6, r6, #1
 8010206:	d0d9      	beq.n	80101bc <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8010208:	3701      	adds	r7, #1
 801020a:	42b9      	cmp	r1, r7
 801020c:	4664      	mov	r4, ip
 801020e:	f805 ec01 	strb.w	lr, [r5, #-1]
 8010212:	d8eb      	bhi.n	80101ec <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8010214:	4630      	mov	r0, r6
 8010216:	462b      	mov	r3, r5
 8010218:	e7d0      	b.n	80101bc <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 801021a:	3701      	adds	r7, #1
 801021c:	e7cb      	b.n	80101b6 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801021e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8010222:	d110      	bne.n	8010246 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8010224:	eba0 0803 	sub.w	r8, r0, r3
 8010228:	461a      	mov	r2, r3
 801022a:	eb08 0003 	add.w	r0, r8, r3
 801022e:	f813 eb01 	ldrb.w	lr, [r3], #1
 8010232:	1c65      	adds	r5, r4, #1
 8010234:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8010238:	d04c      	beq.n	80102d4 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 801023a:	42a1      	cmp	r1, r4
 801023c:	d911      	bls.n	8010262 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 801023e:	462c      	mov	r4, r5
 8010240:	f806 eb01 	strb.w	lr, [r6], #1
 8010244:	e7f0      	b.n	8010228 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8010246:	42a1      	cmp	r1, r4
 8010248:	461d      	mov	r5, r3
 801024a:	f893 e000 	ldrb.w	lr, [r3]
 801024e:	f104 0401 	add.w	r4, r4, #1
 8010252:	f103 0301 	add.w	r3, r3, #1
 8010256:	d8e2      	bhi.n	801021e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8010258:	462b      	mov	r3, r5
 801025a:	e7e3      	b.n	8010224 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 801025c:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8010260:	d009      	beq.n	8010276 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8010262:	42a9      	cmp	r1, r5
 8010264:	4614      	mov	r4, r2
 8010266:	f892 e000 	ldrb.w	lr, [r2]
 801026a:	f105 0501 	add.w	r5, r5, #1
 801026e:	f102 0201 	add.w	r2, r2, #1
 8010272:	d8f3      	bhi.n	801025c <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8010274:	4622      	mov	r2, r4
 8010276:	7814      	ldrb	r4, [r2, #0]
 8010278:	4696      	mov	lr, r2
 801027a:	2c2f      	cmp	r4, #47	; 0x2f
 801027c:	462b      	mov	r3, r5
 801027e:	f102 0201 	add.w	r2, r2, #1
 8010282:	f105 0501 	add.w	r5, r5, #1
 8010286:	d81a      	bhi.n	80102be <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 8010288:	4299      	cmp	r1, r3
 801028a:	d8f4      	bhi.n	8010276 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 801028c:	2c22      	cmp	r4, #34	; 0x22
 801028e:	bf08      	it	eq
 8010290:	4696      	moveq	lr, r2
 8010292:	4673      	mov	r3, lr
 8010294:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010298:	1c6c      	adds	r4, r5, #1
 801029a:	2a22      	cmp	r2, #34	; 0x22
 801029c:	d011      	beq.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801029e:	2a2c      	cmp	r2, #44	; 0x2c
 80102a0:	d00f      	beq.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80102a2:	2a7d      	cmp	r2, #125	; 0x7d
 80102a4:	d00d      	beq.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 80102a6:	42a9      	cmp	r1, r5
 80102a8:	d90f      	bls.n	80102ca <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 80102aa:	f1a2 0520 	sub.w	r5, r2, #32
 80102ae:	2d5a      	cmp	r5, #90	; 0x5a
 80102b0:	d803      	bhi.n	80102ba <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 80102b2:	469e      	mov	lr, r3
 80102b4:	f806 2b01 	strb.w	r2, [r6], #1
 80102b8:	3001      	adds	r0, #1
 80102ba:	4625      	mov	r5, r4
 80102bc:	e7e9      	b.n	8010292 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80102be:	461d      	mov	r5, r3
 80102c0:	e7e7      	b.n	8010292 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 80102c2:	462c      	mov	r4, r5
 80102c4:	f806 cb01 	strb.w	ip, [r6], #1
 80102c8:	3001      	adds	r0, #1
 80102ca:	3401      	adds	r4, #1
 80102cc:	e768      	b.n	80101a0 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 80102ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80102d2:	e767      	b.n	80101a4 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 80102d4:	4625      	mov	r5, r4
 80102d6:	f806 7b01 	strb.w	r7, [r6], #1
 80102da:	3001      	adds	r0, #1
 80102dc:	e7c1      	b.n	8010262 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

080102e0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 80102e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80102e4:	6002      	str	r2, [r0, #0]
 80102e6:	4614      	mov	r4, r2
 80102e8:	2200      	movs	r2, #0
 80102ea:	80c2      	strh	r2, [r0, #6]
 80102ec:	4a1c      	ldr	r2, [pc, #112]	; (8010360 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80102ee:	4606      	mov	r6, r0
 80102f0:	7812      	ldrb	r2, [r2, #0]
 80102f2:	8083      	strh	r3, [r0, #4]
 80102f4:	f002 0201 	and.w	r2, r2, #1
 80102f8:	7202      	strb	r2, [r0, #8]
 80102fa:	4608      	mov	r0, r1
 80102fc:	4605      	mov	r5, r0
 80102fe:	782f      	ldrb	r7, [r5, #0]
 8010300:	3001      	adds	r0, #1
 8010302:	2f00      	cmp	r7, #0
 8010304:	d1fa      	bne.n	80102fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8010306:	1a6d      	subs	r5, r5, r1
 8010308:	b29b      	uxth	r3, r3
 801030a:	b1d2      	cbz	r2, 8010342 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 801030c:	1d2f      	adds	r7, r5, #4
 801030e:	429f      	cmp	r7, r3
 8010310:	d814      	bhi.n	801033c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8010312:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8010316:	f04f 0922 	mov.w	r9, #34	; 0x22
 801031a:	462a      	mov	r2, r5
 801031c:	f884 8000 	strb.w	r8, [r4]
 8010320:	f884 9001 	strb.w	r9, [r4, #1]
 8010324:	1ca0      	adds	r0, r4, #2
 8010326:	f000 feca 	bl	80110be <memmove>
 801032a:	223a      	movs	r2, #58	; 0x3a
 801032c:	1963      	adds	r3, r4, r5
 801032e:	3505      	adds	r5, #5
 8010330:	f883 9002 	strb.w	r9, [r3, #2]
 8010334:	70da      	strb	r2, [r3, #3]
 8010336:	80f5      	strh	r5, [r6, #6]
 8010338:	f804 8007 	strb.w	r8, [r4, r7]
 801033c:	4630      	mov	r0, r6
 801033e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010342:	1caf      	adds	r7, r5, #2
 8010344:	429f      	cmp	r7, r3
 8010346:	d8f9      	bhi.n	801033c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8010348:	4620      	mov	r0, r4
 801034a:	2323      	movs	r3, #35	; 0x23
 801034c:	462a      	mov	r2, r5
 801034e:	f800 3b01 	strb.w	r3, [r0], #1
 8010352:	f000 feb4 	bl	80110be <memmove>
 8010356:	230a      	movs	r3, #10
 8010358:	442c      	add	r4, r5
 801035a:	7063      	strb	r3, [r4, #1]
 801035c:	80f7      	strh	r7, [r6, #6]
 801035e:	e7ed      	b.n	801033c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8010360:	20009be2 	andcs	r9, r0, r2, ror #23

08010364 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8010364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010366:	469c      	mov	ip, r3
 8010368:	8885      	ldrh	r5, [r0, #4]
 801036a:	88c3      	ldrh	r3, [r0, #6]
 801036c:	b085      	sub	sp, #20
 801036e:	42ab      	cmp	r3, r5
 8010370:	d302      	bcc.n	8010378 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8010372:	2000      	movs	r0, #0
 8010374:	b005      	add	sp, #20
 8010376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010378:	4604      	mov	r4, r0
 801037a:	6800      	ldr	r0, [r0, #0]
 801037c:	1aed      	subs	r5, r5, r3
 801037e:	4418      	add	r0, r3
 8010380:	b2d6      	uxtb	r6, r2
 8010382:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8010386:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801038a:	f894 e008 	ldrb.w	lr, [r4, #8]
 801038e:	0e12      	lsrs	r2, r2, #24
 8010390:	f1bc 0f00 	cmp.w	ip, #0
 8010394:	d109      	bne.n	80103aa <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8010396:	f1be 0f00 	cmp.w	lr, #0
 801039a:	d109      	bne.n	80103b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 801039c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80103a0:	e9cd 6700 	strd	r6, r7, [sp]
 80103a4:	460b      	mov	r3, r1
 80103a6:	4a0e      	ldr	r2, [pc, #56]	; (80103e0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80103a8:	e008      	b.n	80103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80103aa:	f1be 0f00 	cmp.w	lr, #0
 80103ae:	d00f      	beq.n	80103d0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80103b0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80103b4:	460b      	mov	r3, r1
 80103b6:	e9cd 6700 	strd	r6, r7, [sp]
 80103ba:	4a0a      	ldr	r2, [pc, #40]	; (80103e4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80103bc:	4629      	mov	r1, r5
 80103be:	f7f8 ff99 	bl	80092f4 <snprintf>
 80103c2:	4285      	cmp	r5, r0
 80103c4:	dbd5      	blt.n	8010372 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80103c6:	88e3      	ldrh	r3, [r4, #6]
 80103c8:	4403      	add	r3, r0
 80103ca:	80e3      	strh	r3, [r4, #6]
 80103cc:	2001      	movs	r0, #1
 80103ce:	e7d1      	b.n	8010374 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80103d0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80103d4:	e9cd 6700 	strd	r6, r7, [sp]
 80103d8:	460b      	mov	r3, r1
 80103da:	4a03      	ldr	r2, [pc, #12]	; (80103e8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80103dc:	e7ee      	b.n	80103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80103de:	bf00      	nop
 80103e0:	0801563f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, ip, lr}
 80103e4:	0801562b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, ip, lr}
 80103e8:	08015640 	stmdaeq	r1, {r6, r9, sl, ip, lr}

080103ec <PropertiesBuilder::AddComment(char const*)>:
 80103ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103ee:	7a06      	ldrb	r6, [r0, #8]
 80103f0:	b996      	cbnz	r6, 8010418 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80103f2:	4604      	mov	r4, r0
 80103f4:	88c0      	ldrh	r0, [r0, #6]
 80103f6:	88a5      	ldrh	r5, [r4, #4]
 80103f8:	42a8      	cmp	r0, r5
 80103fa:	d20d      	bcs.n	8010418 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80103fc:	6827      	ldr	r7, [r4, #0]
 80103fe:	1a2d      	subs	r5, r5, r0
 8010400:	460b      	mov	r3, r1
 8010402:	4a06      	ldr	r2, [pc, #24]	; (801041c <PropertiesBuilder::AddComment(char const*)+0x30>)
 8010404:	4629      	mov	r1, r5
 8010406:	4438      	add	r0, r7
 8010408:	f7f8 ff74 	bl	80092f4 <snprintf>
 801040c:	4285      	cmp	r5, r0
 801040e:	bfa1      	itttt	ge
 8010410:	2601      	movge	r6, #1
 8010412:	88e3      	ldrhge	r3, [r4, #6]
 8010414:	18c0      	addge	r0, r0, r3
 8010416:	80e0      	strhge	r0, [r4, #6]
 8010418:	4630      	mov	r0, r6
 801041a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801041c:	08015650 	stmdaeq	r1, {r4, r6, r9, sl, ip, lr}

08010420 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8010420:	e9c0 1200 	strd	r1, r2, [r0]
 8010424:	4770      	bx	lr

08010426 <ReadConfigFile::~ReadConfigFile()>:
 8010426:	4770      	bx	lr

08010428 <ReadConfigFile::Read(char const*, unsigned int)>:
 8010428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801042c:	4606      	mov	r6, r0
 801042e:	460d      	mov	r5, r1
 8010430:	4614      	mov	r4, r2
 8010432:	f04f 0800 	mov.w	r8, #0
 8010436:	b0a0      	sub	sp, #128	; 0x80
 8010438:	b33c      	cbz	r4, 801048a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801043a:	466b      	mov	r3, sp
 801043c:	462a      	mov	r2, r5
 801043e:	4619      	mov	r1, r3
 8010440:	e007      	b.n	8010452 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8010442:	f803 7b01 	strb.w	r7, [r3], #1
 8010446:	1a58      	subs	r0, r3, r1
 8010448:	287f      	cmp	r0, #127	; 0x7f
 801044a:	4615      	mov	r5, r2
 801044c:	dc1d      	bgt.n	801048a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801044e:	3c01      	subs	r4, #1
 8010450:	d00f      	beq.n	8010472 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8010452:	7817      	ldrb	r7, [r2, #0]
 8010454:	4610      	mov	r0, r2
 8010456:	2f0d      	cmp	r7, #13
 8010458:	f102 0201 	add.w	r2, r2, #1
 801045c:	d001      	beq.n	8010462 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801045e:	2f0a      	cmp	r7, #10
 8010460:	d1ef      	bne.n	8010442 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8010462:	4605      	mov	r5, r0
 8010464:	b12c      	cbz	r4, 8010472 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8010466:	f810 2b01 	ldrb.w	r2, [r0], #1
 801046a:	2a0d      	cmp	r2, #13
 801046c:	d00b      	beq.n	8010486 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 801046e:	2a0a      	cmp	r2, #10
 8010470:	d009      	beq.n	8010486 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8010472:	f89d 2000 	ldrb.w	r2, [sp]
 8010476:	2a60      	cmp	r2, #96	; 0x60
 8010478:	d9de      	bls.n	8010438 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801047a:	f883 8000 	strb.w	r8, [r3]
 801047e:	e9d6 3000 	ldrd	r3, r0, [r6]
 8010482:	4798      	blx	r3
 8010484:	e7d8      	b.n	8010438 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8010486:	3c01      	subs	r4, #1
 8010488:	e7eb      	b.n	8010462 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801048a:	b020      	add	sp, #128	; 0x80
 801048c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010490 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8010490:	b570      	push	{r4, r5, r6, lr}
 8010492:	4615      	mov	r5, r2
 8010494:	461c      	mov	r4, r3
 8010496:	f000 f91c 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 801049a:	b180      	cbz	r0, 80104be <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 801049c:	2100      	movs	r1, #0
 801049e:	5c43      	ldrb	r3, [r0, r1]
 80104a0:	6826      	ldr	r6, [r4, #0]
 80104a2:	b28a      	uxth	r2, r1
 80104a4:	b143      	cbz	r3, 80104b8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80104a6:	42b2      	cmp	r2, r6
 80104a8:	d303      	bcc.n	80104b2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80104aa:	2b0a      	cmp	r3, #10
 80104ac:	d004      	beq.n	80104b8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80104ae:	2002      	movs	r0, #2
 80104b0:	e004      	b.n	80104bc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 80104b2:	546b      	strb	r3, [r5, r1]
 80104b4:	3101      	adds	r1, #1
 80104b6:	e7f2      	b.n	801049e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80104b8:	2000      	movs	r0, #0
 80104ba:	6022      	str	r2, [r4, #0]
 80104bc:	bd70      	pop	{r4, r5, r6, pc}
 80104be:	2001      	movs	r0, #1
 80104c0:	e7fc      	b.n	80104bc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

080104c2 <Sscan::Float(char const*, char const*, float&)>:
 80104c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80104c6:	4616      	mov	r6, r2
 80104c8:	f000 f903 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 80104cc:	2800      	cmp	r0, #0
 80104ce:	d059      	beq.n	8010584 <Sscan::Float(char const*, char const*, float&)+0xc2>
 80104d0:	4604      	mov	r4, r0
 80104d2:	7803      	ldrb	r3, [r0, #0]
 80104d4:	2b2d      	cmp	r3, #45	; 0x2d
 80104d6:	bf08      	it	eq
 80104d8:	3401      	addeq	r4, #1
 80104da:	7823      	ldrb	r3, [r4, #0]
 80104dc:	bf0c      	ite	eq
 80104de:	f04f 0801 	moveq.w	r8, #1
 80104e2:	f04f 0800 	movne.w	r8, #0
 80104e6:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80104ea:	d103      	bne.n	80104f4 <Sscan::Float(char const*, char const*, float&)+0x32>
 80104ec:	2702      	movs	r7, #2
 80104ee:	4638      	mov	r0, r7
 80104f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80104f4:	2000      	movs	r0, #0
 80104f6:	220a      	movs	r2, #10
 80104f8:	7823      	ldrb	r3, [r4, #0]
 80104fa:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80104fe:	2909      	cmp	r1, #9
 8010500:	d8f4      	bhi.n	80104ec <Sscan::Float(char const*, char const*, float&)+0x2a>
 8010502:	fb02 3000 	mla	r0, r2, r0, r3
 8010506:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801050a:	3830      	subs	r0, #48	; 0x30
 801050c:	2b2e      	cmp	r3, #46	; 0x2e
 801050e:	d002      	beq.n	8010516 <Sscan::Float(char const*, char const*, float&)+0x54>
 8010510:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8010514:	d1f0      	bne.n	80104f8 <Sscan::Float(char const*, char const*, float&)+0x36>
 8010516:	f7f7 fbeb 	bl	8007cf0 <__aeabi_ui2f>
 801051a:	6030      	str	r0, [r6, #0]
 801051c:	7823      	ldrb	r3, [r4, #0]
 801051e:	4605      	mov	r5, r0
 8010520:	2b2e      	cmp	r3, #46	; 0x2e
 8010522:	d008      	beq.n	8010536 <Sscan::Float(char const*, char const*, float&)+0x74>
 8010524:	f1b8 0f00 	cmp.w	r8, #0
 8010528:	d101      	bne.n	801052e <Sscan::Float(char const*, char const*, float&)+0x6c>
 801052a:	2700      	movs	r7, #0
 801052c:	e7df      	b.n	80104ee <Sscan::Float(char const*, char const*, float&)+0x2c>
 801052e:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8010532:	6035      	str	r5, [r6, #0]
 8010534:	e7f9      	b.n	801052a <Sscan::Float(char const*, char const*, float&)+0x68>
 8010536:	f04f 0901 	mov.w	r9, #1
 801053a:	2000      	movs	r0, #0
 801053c:	220a      	movs	r2, #10
 801053e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010542:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8010546:	d111      	bne.n	801056c <Sscan::Float(char const*, char const*, float&)+0xaa>
 8010548:	f7f7 fbd2 	bl	8007cf0 <__aeabi_ui2f>
 801054c:	4604      	mov	r4, r0
 801054e:	4648      	mov	r0, r9
 8010550:	f7f7 fbce 	bl	8007cf0 <__aeabi_ui2f>
 8010554:	4601      	mov	r1, r0
 8010556:	4620      	mov	r0, r4
 8010558:	f7f7 ff48 	bl	80083ec <__aeabi_fdiv>
 801055c:	4629      	mov	r1, r5
 801055e:	f7f7 fb17 	bl	8007b90 <__addsf3>
 8010562:	f1b8 0f00 	cmp.w	r8, #0
 8010566:	d109      	bne.n	801057c <Sscan::Float(char const*, char const*, float&)+0xba>
 8010568:	6030      	str	r0, [r6, #0]
 801056a:	e7de      	b.n	801052a <Sscan::Float(char const*, char const*, float&)+0x68>
 801056c:	3b30      	subs	r3, #48	; 0x30
 801056e:	2b09      	cmp	r3, #9
 8010570:	d8bc      	bhi.n	80104ec <Sscan::Float(char const*, char const*, float&)+0x2a>
 8010572:	fb02 3000 	mla	r0, r2, r0, r3
 8010576:	fb02 f909 	mul.w	r9, r2, r9
 801057a:	e7e0      	b.n	801053e <Sscan::Float(char const*, char const*, float&)+0x7c>
 801057c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8010580:	6030      	str	r0, [r6, #0]
 8010582:	e7b4      	b.n	80104ee <Sscan::Float(char const*, char const*, float&)+0x2c>
 8010584:	2701      	movs	r7, #1
 8010586:	e7b2      	b.n	80104ee <Sscan::Float(char const*, char const*, float&)+0x2c>

08010588 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8010588:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801058a:	4615      	mov	r5, r2
 801058c:	f000 f8a1 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 8010590:	bb58      	cbnz	r0, 80105ea <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8010592:	2001      	movs	r0, #1
 8010594:	e027      	b.n	80105e6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8010596:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 801059a:	2b09      	cmp	r3, #9
 801059c:	d822      	bhi.n	80105e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 801059e:	4603      	mov	r3, r0
 80105a0:	fb0c 2101 	mla	r1, ip, r1, r2
 80105a4:	3930      	subs	r1, #48	; 0x30
 80105a6:	4618      	mov	r0, r3
 80105a8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80105ac:	2a2e      	cmp	r2, #46	; 0x2e
 80105ae:	d115      	bne.n	80105dc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80105b0:	29ff      	cmp	r1, #255	; 0xff
 80105b2:	d817      	bhi.n	80105e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80105b4:	3401      	adds	r4, #1
 80105b6:	2c03      	cmp	r4, #3
 80105b8:	f806 1b01 	strb.w	r1, [r6], #1
 80105bc:	d119      	bne.n	80105f2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 80105be:	2400      	movs	r4, #0
 80105c0:	260a      	movs	r6, #10
 80105c2:	1d1a      	adds	r2, r3, #4
 80105c4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80105c8:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80105cc:	d115      	bne.n	80105fa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 80105ce:	2cff      	cmp	r4, #255	; 0xff
 80105d0:	d808      	bhi.n	80105e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80105d2:	f88d 4007 	strb.w	r4, [sp, #7]
 80105d6:	9b01      	ldr	r3, [sp, #4]
 80105d8:	602b      	str	r3, [r5, #0]
 80105da:	e004      	b.n	80105e6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80105dc:	2a00      	cmp	r2, #0
 80105de:	d0e7      	beq.n	80105b0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80105e0:	42b8      	cmp	r0, r7
 80105e2:	d1d8      	bne.n	8010596 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 80105e4:	2002      	movs	r0, #2
 80105e6:	b003      	add	sp, #12
 80105e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105ea:	2400      	movs	r4, #0
 80105ec:	f04f 0c0a 	mov.w	ip, #10
 80105f0:	ae01      	add	r6, sp, #4
 80105f2:	4603      	mov	r3, r0
 80105f4:	2100      	movs	r1, #0
 80105f6:	1d07      	adds	r7, r0, #4
 80105f8:	e7d5      	b.n	80105a6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 80105fa:	4293      	cmp	r3, r2
 80105fc:	d0f2      	beq.n	80105e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80105fe:	3930      	subs	r1, #48	; 0x30
 8010600:	2909      	cmp	r1, #9
 8010602:	d8ef      	bhi.n	80105e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8010604:	fb06 1404 	mla	r4, r6, r4, r1
 8010608:	e7dc      	b.n	80105c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0801060a <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 801060a:	b538      	push	{r3, r4, r5, lr}
 801060c:	4615      	mov	r5, r2
 801060e:	f000 f860 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 8010612:	b1a0      	cbz	r0, 801063e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8010614:	4604      	mov	r4, r0
 8010616:	2100      	movs	r1, #0
 8010618:	220a      	movs	r2, #10
 801061a:	7823      	ldrb	r3, [r4, #0]
 801061c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8010620:	2809      	cmp	r0, #9
 8010622:	d80e      	bhi.n	8010642 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010624:	fb02 3101 	mla	r1, r2, r1, r3
 8010628:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801062c:	3930      	subs	r1, #48	; 0x30
 801062e:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8010632:	d1f2      	bne.n	801061a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8010634:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8010638:	d203      	bcs.n	8010642 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801063a:	8029      	strh	r1, [r5, #0]
 801063c:	bd38      	pop	{r3, r4, r5, pc}
 801063e:	2001      	movs	r0, #1
 8010640:	e7fc      	b.n	801063c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8010642:	2002      	movs	r0, #2
 8010644:	e7fa      	b.n	801063c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08010646 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8010646:	b570      	push	{r4, r5, r6, lr}
 8010648:	4615      	mov	r5, r2
 801064a:	f000 f842 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 801064e:	b1f8      	cbz	r0, 8010690 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8010650:	2300      	movs	r3, #0
 8010652:	4604      	mov	r4, r0
 8010654:	461a      	mov	r2, r3
 8010656:	260a      	movs	r6, #10
 8010658:	7820      	ldrb	r0, [r4, #0]
 801065a:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 801065e:	2909      	cmp	r1, #9
 8010660:	d818      	bhi.n	8010694 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8010662:	fba3 3106 	umull	r3, r1, r3, r6
 8010666:	fb06 1102 	mla	r1, r6, r2, r1
 801066a:	3b30      	subs	r3, #48	; 0x30
 801066c:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8010670:	18c3      	adds	r3, r0, r3
 8010672:	f141 0200 	adc.w	r2, r1, #0
 8010676:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801067a:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 801067e:	d1eb      	bne.n	8010658 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8010680:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010684:	4299      	cmp	r1, r3
 8010686:	eb70 0202 	sbcs.w	r2, r0, r2
 801068a:	d303      	bcc.n	8010694 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801068c:	602b      	str	r3, [r5, #0]
 801068e:	bd70      	pop	{r4, r5, r6, pc}
 8010690:	2001      	movs	r0, #1
 8010692:	e7fc      	b.n	801068e <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8010694:	2002      	movs	r0, #2
 8010696:	e7fa      	b.n	801068e <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08010698 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8010698:	b538      	push	{r3, r4, r5, lr}
 801069a:	4615      	mov	r5, r2
 801069c:	f000 f819 	bl	80106d2 <Sscan::checkName(char const*, char const*)>
 80106a0:	b198      	cbz	r0, 80106ca <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80106a2:	4604      	mov	r4, r0
 80106a4:	2100      	movs	r1, #0
 80106a6:	220a      	movs	r2, #10
 80106a8:	7823      	ldrb	r3, [r4, #0]
 80106aa:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80106ae:	2809      	cmp	r0, #9
 80106b0:	d80d      	bhi.n	80106ce <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80106b2:	fb02 3101 	mla	r1, r2, r1, r3
 80106b6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80106ba:	3930      	subs	r1, #48	; 0x30
 80106bc:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80106c0:	d1f2      	bne.n	80106a8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80106c2:	29ff      	cmp	r1, #255	; 0xff
 80106c4:	d803      	bhi.n	80106ce <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80106c6:	7029      	strb	r1, [r5, #0]
 80106c8:	bd38      	pop	{r3, r4, r5, pc}
 80106ca:	2001      	movs	r0, #1
 80106cc:	e7fc      	b.n	80106c8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80106ce:	2002      	movs	r0, #2
 80106d0:	e7fa      	b.n	80106c8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080106d2 <Sscan::checkName(char const*, char const*)>:
 80106d2:	4603      	mov	r3, r0
 80106d4:	b510      	push	{r4, lr}
 80106d6:	3901      	subs	r1, #1
 80106d8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80106dc:	461c      	mov	r4, r3
 80106de:	f813 2b01 	ldrb.w	r2, [r3], #1
 80106e2:	b120      	cbz	r0, 80106ee <Sscan::checkName(char const*, char const*)+0x1c>
 80106e4:	b10a      	cbz	r2, 80106ea <Sscan::checkName(char const*, char const*)+0x18>
 80106e6:	4290      	cmp	r0, r2
 80106e8:	d0f6      	beq.n	80106d8 <Sscan::checkName(char const*, char const*)+0x6>
 80106ea:	2000      	movs	r0, #0
 80106ec:	e006      	b.n	80106fc <Sscan::checkName(char const*, char const*)+0x2a>
 80106ee:	2a3d      	cmp	r2, #61	; 0x3d
 80106f0:	d104      	bne.n	80106fc <Sscan::checkName(char const*, char const*)+0x2a>
 80106f2:	7860      	ldrb	r0, [r4, #1]
 80106f4:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80106f8:	d000      	beq.n	80106fc <Sscan::checkName(char const*, char const*)+0x2a>
 80106fa:	1c60      	adds	r0, r4, #1
 80106fc:	bd10      	pop	{r4, pc}

080106fe <display::timeout::gpio_init()>:
 80106fe:	4770      	bx	lr

08010700 <display::timeout::gpio_renew()>:
 8010700:	2000      	movs	r0, #0
 8010702:	4770      	bx	lr

08010704 <Display::PrintInfo() [clone .isra.0]>:
 8010704:	b910      	cbnz	r0, 801070c <Display::PrintInfo() [clone .isra.0]+0x8>
 8010706:	4803      	ldr	r0, [pc, #12]	; (8010714 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8010708:	f000 bd11 	b.w	801112e <puts>
 801070c:	6803      	ldr	r3, [r0, #0]
 801070e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010710:	4718      	bx	r3
 8010712:	bf00      	nop
 8010714:	0801567e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, ip, lr}

08010718 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8010718:	b513      	push	{r0, r1, r4, lr}
 801071a:	4604      	mov	r4, r0
 801071c:	0a13      	lsrs	r3, r2, #8
 801071e:	7800      	ldrb	r0, [r0, #0]
 8010720:	f88d 1004 	strb.w	r1, [sp, #4]
 8010724:	f88d 3005 	strb.w	r3, [sp, #5]
 8010728:	f88d 2006 	strb.w	r2, [sp, #6]
 801072c:	f001 fb8c 	bl	8011e48 <gd32_i2c_set_address>
 8010730:	6860      	ldr	r0, [r4, #4]
 8010732:	f001 fb81 	bl	8011e38 <gd32_i2c_set_baudrate>
 8010736:	2103      	movs	r1, #3
 8010738:	a801      	add	r0, sp, #4
 801073a:	f001 fb8b 	bl	8011e54 <gd32_i2c_write>
 801073e:	b002      	add	sp, #8
 8010740:	bd10      	pop	{r4, pc}

08010742 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8010742:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010744:	460d      	mov	r5, r1
 8010746:	4604      	mov	r4, r0
 8010748:	f001 fb7e 	bl	8011e48 <gd32_i2c_set_address>
 801074c:	4628      	mov	r0, r5
 801074e:	f001 fb73 	bl	8011e38 <gd32_i2c_set_baudrate>
 8010752:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010756:	2b07      	cmp	r3, #7
 8010758:	d902      	bls.n	8010760 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801075a:	3c50      	subs	r4, #80	; 0x50
 801075c:	2c0f      	cmp	r4, #15
 801075e:	d809      	bhi.n	8010774 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8010760:	2101      	movs	r1, #1
 8010762:	f10d 0007 	add.w	r0, sp, #7
 8010766:	f001 fbdb 	bl	8011f20 <gd32_i2c_read>
 801076a:	fab0 f080 	clz	r0, r0
 801076e:	0940      	lsrs	r0, r0, #5
 8010770:	b003      	add	sp, #12
 8010772:	bd30      	pop	{r4, r5, pc}
 8010774:	2100      	movs	r1, #0
 8010776:	4608      	mov	r0, r1
 8010778:	f001 fb6c 	bl	8011e54 <gd32_i2c_write>
 801077c:	e7f5      	b.n	801076a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801077e <Display::Detect7Segment()>:
 801077e:	b538      	push	{r3, r4, r5, lr}
 8010780:	68c1      	ldr	r1, [r0, #12]
 8010782:	4604      	mov	r4, r0
 8010784:	7a00      	ldrb	r0, [r0, #8]
 8010786:	f7ff ffdc 	bl	8010742 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 801078a:	7460      	strb	r0, [r4, #17]
 801078c:	b170      	cbz	r0, 80107ac <Display::Detect7Segment()+0x2e>
 801078e:	2200      	movs	r2, #0
 8010790:	f104 0508 	add.w	r5, r4, #8
 8010794:	4611      	mov	r1, r2
 8010796:	4628      	mov	r0, r5
 8010798:	f7ff ffbe 	bl	8010718 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801079c:	7c63      	ldrb	r3, [r4, #17]
 801079e:	b12b      	cbz	r3, 80107ac <Display::Detect7Segment()+0x2e>
 80107a0:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80107a4:	2112      	movs	r1, #18
 80107a6:	4628      	mov	r0, r5
 80107a8:	f7ff ffb6 	bl	8010718 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80107ac:	bd38      	pop	{r3, r4, r5, pc}

080107ae <Display::Detect(display::Type)>:
 80107ae:	2902      	cmp	r1, #2
 80107b0:	b538      	push	{r3, r4, r5, lr}
 80107b2:	4604      	mov	r4, r0
 80107b4:	d014      	beq.n	80107e0 <Display::Detect(display::Type)+0x32>
 80107b6:	2904      	cmp	r1, #4
 80107b8:	d01b      	beq.n	80107f2 <Display::Detect(display::Type)+0x44>
 80107ba:	69a0      	ldr	r0, [r4, #24]
 80107bc:	b168      	cbz	r0, 80107da <Display::Detect(display::Type)+0x2c>
 80107be:	6803      	ldr	r3, [r0, #0]
 80107c0:	689b      	ldr	r3, [r3, #8]
 80107c2:	4798      	blx	r3
 80107c4:	4603      	mov	r3, r0
 80107c6:	69a0      	ldr	r0, [r4, #24]
 80107c8:	b9ab      	cbnz	r3, 80107f6 <Display::Detect(display::Type)+0x48>
 80107ca:	b110      	cbz	r0, 80107d2 <Display::Detect(display::Type)+0x24>
 80107cc:	6803      	ldr	r3, [r0, #0]
 80107ce:	685b      	ldr	r3, [r3, #4]
 80107d0:	4798      	blx	r3
 80107d2:	2300      	movs	r3, #0
 80107d4:	61a3      	str	r3, [r4, #24]
 80107d6:	2304      	movs	r3, #4
 80107d8:	6023      	str	r3, [r4, #0]
 80107da:	2300      	movs	r3, #0
 80107dc:	6163      	str	r3, [r4, #20]
 80107de:	e010      	b.n	8010802 <Display::Detect(display::Type)+0x54>
 80107e0:	2018      	movs	r0, #24
 80107e2:	f000 fbad 	bl	8010f40 <operator new(unsigned int)>
 80107e6:	4605      	mov	r5, r0
 80107e8:	2100      	movs	r1, #0
 80107ea:	f000 f89d 	bl	8010928 <Ssd1306::Ssd1306(TOledPanel)>
 80107ee:	61a5      	str	r5, [r4, #24]
 80107f0:	e7e3      	b.n	80107ba <Display::Detect(display::Type)+0xc>
 80107f2:	6001      	str	r1, [r0, #0]
 80107f4:	e7e1      	b.n	80107ba <Display::Detect(display::Type)+0xc>
 80107f6:	6803      	ldr	r3, [r0, #0]
 80107f8:	68db      	ldr	r3, [r3, #12]
 80107fa:	4798      	blx	r3
 80107fc:	69a3      	ldr	r3, [r4, #24]
 80107fe:	2b00      	cmp	r3, #0
 8010800:	d0eb      	beq.n	80107da <Display::Detect(display::Type)+0x2c>
 8010802:	bd38      	pop	{r3, r4, r5, pc}

08010804 <Display::Display()>:
 8010804:	2304      	movs	r3, #4
 8010806:	b510      	push	{r4, lr}
 8010808:	6003      	str	r3, [r0, #0]
 801080a:	4b0f      	ldr	r3, [pc, #60]	; (8010848 <Display::Display()+0x44>)
 801080c:	4604      	mov	r4, r0
 801080e:	681b      	ldr	r3, [r3, #0]
 8010810:	4a0e      	ldr	r2, [pc, #56]	; (801084c <Display::Display()+0x48>)
 8010812:	6043      	str	r3, [r0, #4]
 8010814:	2321      	movs	r3, #33	; 0x21
 8010816:	7203      	strb	r3, [r0, #8]
 8010818:	4b0d      	ldr	r3, [pc, #52]	; (8010850 <Display::Display()+0x4c>)
 801081a:	2102      	movs	r1, #2
 801081c:	60c3      	str	r3, [r0, #12]
 801081e:	2300      	movs	r3, #0
 8010820:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8010824:	8203      	strh	r3, [r0, #16]
 8010826:	4b0b      	ldr	r3, [pc, #44]	; (8010854 <Display::Display()+0x50>)
 8010828:	6018      	str	r0, [r3, #0]
 801082a:	f7ff ffc0 	bl	80107ae <Display::Detect(display::Type)>
 801082e:	4620      	mov	r0, r4
 8010830:	f7ff ffa5 	bl	801077e <Display::Detect7Segment()>
 8010834:	69a3      	ldr	r3, [r4, #24]
 8010836:	b10b      	cbz	r3, 801083c <Display::Display()+0x38>
 8010838:	f7ff ff61 	bl	80106fe <display::timeout::gpio_init()>
 801083c:	69a0      	ldr	r0, [r4, #24]
 801083e:	f7ff ff61 	bl	8010704 <Display::PrintInfo() [clone .isra.0]>
 8010842:	4620      	mov	r0, r4
 8010844:	bd10      	pop	{r4, pc}
 8010846:	bf00      	nop
 8010848:	20009cec 	andcs	r9, r0, ip, ror #25
 801084c:	000493e0 	andeq	r9, r4, r0, ror #7
 8010850:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010854:	20009be4 	andcs	r9, r0, r4, ror #23

08010858 <Ssd1306::~Ssd1306()>:
 8010858:	4770      	bx	lr

0801085a <Ssd1306::SetCursor(unsigned int)>:
 801085a:	4770      	bx	lr

0801085c <Ssd1306::PrintInfo()>:
 801085c:	b410      	push	{r4}
 801085e:	4906      	ldr	r1, [pc, #24]	; (8010878 <Ssd1306::PrintInfo()+0x1c>)
 8010860:	7c44      	ldrb	r4, [r0, #17]
 8010862:	7903      	ldrb	r3, [r0, #4]
 8010864:	7942      	ldrb	r2, [r0, #5]
 8010866:	4805      	ldr	r0, [pc, #20]	; (801087c <Ssd1306::PrintInfo()+0x20>)
 8010868:	2c00      	cmp	r4, #0
 801086a:	bf08      	it	eq
 801086c:	4601      	moveq	r1, r0
 801086e:	4804      	ldr	r0, [pc, #16]	; (8010880 <Ssd1306::PrintInfo()+0x24>)
 8010870:	bc10      	pop	{r4}
 8010872:	f7f8 bd2f 	b.w	80092d4 <printf>
 8010876:	bf00      	nop
 8010878:	0801568f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, ip, lr}
 801087c:	08015696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, ip, lr}
 8010880:	0801569e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, sl, ip, lr}

08010884 <Ssd1306::~Ssd1306()>:
 8010884:	b510      	push	{r4, lr}
 8010886:	4604      	mov	r4, r0
 8010888:	f000 fb56 	bl	8010f38 <operator delete(void*)>
 801088c:	4620      	mov	r0, r4
 801088e:	bd10      	pop	{r4, pc}

08010890 <HAL_I2C::Setup()>:
 8010890:	b510      	push	{r4, lr}
 8010892:	4604      	mov	r4, r0
 8010894:	7800      	ldrb	r0, [r0, #0]
 8010896:	f001 fad7 	bl	8011e48 <gd32_i2c_set_address>
 801089a:	6860      	ldr	r0, [r4, #4]
 801089c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108a0:	f001 baca 	b.w	8011e38 <gd32_i2c_set_baudrate>

080108a4 <Ssd1306::PutChar(int)>:
 80108a4:	b510      	push	{r4, lr}
 80108a6:	f1a1 0420 	sub.w	r4, r1, #32
 80108aa:	2c5f      	cmp	r4, #95	; 0x5f
 80108ac:	bf88      	it	hi
 80108ae:	2400      	movhi	r4, #0
 80108b0:	3008      	adds	r0, #8
 80108b2:	f7ff ffed 	bl	8010890 <HAL_I2C::Setup()>
 80108b6:	4804      	ldr	r0, [pc, #16]	; (80108c8 <Ssd1306::PutChar(int)+0x24>)
 80108b8:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80108bc:	4420      	add	r0, r4
 80108be:	2107      	movs	r1, #7
 80108c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108c4:	f001 bac6 	b.w	8011e54 <gd32_i2c_write>
 80108c8:	080156b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, ip, lr}

080108cc <Ssd1306::PutString(char const*)>:
 80108cc:	b538      	push	{r3, r4, r5, lr}
 80108ce:	4605      	mov	r5, r0
 80108d0:	1e4c      	subs	r4, r1, #1
 80108d2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80108d6:	b901      	cbnz	r1, 80108da <Ssd1306::PutString(char const*)+0xe>
 80108d8:	bd38      	pop	{r3, r4, r5, pc}
 80108da:	4628      	mov	r0, r5
 80108dc:	f7ff ffe2 	bl	80108a4 <Ssd1306::PutChar(int)>
 80108e0:	e7f7      	b.n	80108d2 <Ssd1306::PutString(char const*)+0x6>

080108e2 <Ssd1306::Text(char const*, unsigned int)>:
 80108e2:	b570      	push	{r4, r5, r6, lr}
 80108e4:	7903      	ldrb	r3, [r0, #4]
 80108e6:	4605      	mov	r5, r0
 80108e8:	460c      	mov	r4, r1
 80108ea:	4293      	cmp	r3, r2
 80108ec:	bf94      	ite	ls
 80108ee:	18ce      	addls	r6, r1, r3
 80108f0:	188e      	addhi	r6, r1, r2
 80108f2:	42b4      	cmp	r4, r6
 80108f4:	d100      	bne.n	80108f8 <Ssd1306::Text(char const*, unsigned int)+0x16>
 80108f6:	bd70      	pop	{r4, r5, r6, pc}
 80108f8:	4628      	mov	r0, r5
 80108fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80108fe:	f7ff ffd1 	bl	80108a4 <Ssd1306::PutChar(int)>
 8010902:	e7f6      	b.n	80108f2 <Ssd1306::Text(char const*, unsigned int)+0x10>

08010904 <Ssd1306::InitMembers()>:
 8010904:	7c03      	ldrb	r3, [r0, #16]
 8010906:	b14b      	cbz	r3, 801091c <Ssd1306::InitMembers()+0x18>
 8010908:	3b01      	subs	r3, #1
 801090a:	2b01      	cmp	r3, #1
 801090c:	d909      	bls.n	8010922 <Ssd1306::InitMembers()+0x1e>
 801090e:	2308      	movs	r3, #8
 8010910:	2204      	movs	r2, #4
 8010912:	2115      	movs	r1, #21
 8010914:	7143      	strb	r3, [r0, #5]
 8010916:	7101      	strb	r1, [r0, #4]
 8010918:	6142      	str	r2, [r0, #20]
 801091a:	4770      	bx	lr
 801091c:	2308      	movs	r3, #8
 801091e:	461a      	mov	r2, r3
 8010920:	e7f7      	b.n	8010912 <Ssd1306::InitMembers()+0xe>
 8010922:	2304      	movs	r3, #4
 8010924:	e7fb      	b.n	801091e <Ssd1306::InitMembers()+0x1a>
	...

08010928 <Ssd1306::Ssd1306(TOledPanel)>:
 8010928:	4a08      	ldr	r2, [pc, #32]	; (801094c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 801092a:	b508      	push	{r3, lr}
 801092c:	6002      	str	r2, [r0, #0]
 801092e:	227f      	movs	r2, #127	; 0x7f
 8010930:	80c2      	strh	r2, [r0, #6]
 8010932:	223c      	movs	r2, #60	; 0x3c
 8010934:	7202      	strb	r2, [r0, #8]
 8010936:	4a06      	ldr	r2, [pc, #24]	; (8010950 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8010938:	7401      	strb	r1, [r0, #16]
 801093a:	60c2      	str	r2, [r0, #12]
 801093c:	2200      	movs	r2, #0
 801093e:	7442      	strb	r2, [r0, #17]
 8010940:	4a04      	ldr	r2, [pc, #16]	; (8010954 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8010942:	6010      	str	r0, [r2, #0]
 8010944:	f7ff ffde 	bl	8010904 <Ssd1306::InitMembers()>
 8010948:	bd08      	pop	{r3, pc}
 801094a:	bf00      	nop
 801094c:	08015988 	stmdaeq	r1, {r3, r7, r8, fp, ip, lr}
 8010950:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010954:	20009c70 	andcs	r9, r0, r0, ror ip

08010958 <Ssd1306::SendCommand(unsigned char)>:
 8010958:	2300      	movs	r3, #0
 801095a:	b507      	push	{r0, r1, r2, lr}
 801095c:	3008      	adds	r0, #8
 801095e:	f88d 3004 	strb.w	r3, [sp, #4]
 8010962:	f88d 1005 	strb.w	r1, [sp, #5]
 8010966:	f7ff ff93 	bl	8010890 <HAL_I2C::Setup()>
 801096a:	2102      	movs	r1, #2
 801096c:	a801      	add	r0, sp, #4
 801096e:	f001 fa71 	bl	8011e54 <gd32_i2c_write>
 8010972:	b003      	add	sp, #12
 8010974:	f85d fb04 	ldr.w	pc, [sp], #4

08010978 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8010978:	2914      	cmp	r1, #20
 801097a:	b570      	push	{r4, r5, r6, lr}
 801097c:	4605      	mov	r5, r0
 801097e:	4616      	mov	r6, r2
 8010980:	d81c      	bhi.n	80109bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8010982:	7943      	ldrb	r3, [r0, #5]
 8010984:	4293      	cmp	r3, r2
 8010986:	d919      	bls.n	80109bc <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8010988:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801098c:	7c43      	ldrb	r3, [r0, #17]
 801098e:	004c      	lsls	r4, r1, #1
 8010990:	b2e4      	uxtb	r4, r4
 8010992:	b10b      	cbz	r3, 8010998 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8010994:	3404      	adds	r4, #4
 8010996:	b2e4      	uxtb	r4, r4
 8010998:	4628      	mov	r0, r5
 801099a:	f004 010e 	and.w	r1, r4, #14
 801099e:	f7ff ffdb 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 80109a2:	0921      	lsrs	r1, r4, #4
 80109a4:	4628      	mov	r0, r5
 80109a6:	f041 0110 	orr.w	r1, r1, #16
 80109aa:	f7ff ffd5 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 80109ae:	4628      	mov	r0, r5
 80109b0:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 80109b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109b8:	f7ff bfce 	b.w	8010958 <Ssd1306::SendCommand(unsigned char)>
 80109bc:	bd70      	pop	{r4, r5, r6, pc}

080109be <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 80109be:	b570      	push	{r4, r5, r6, lr}
 80109c0:	461e      	mov	r6, r3
 80109c2:	7943      	ldrb	r3, [r0, #5]
 80109c4:	4604      	mov	r4, r0
 80109c6:	428b      	cmp	r3, r1
 80109c8:	4615      	mov	r5, r2
 80109ca:	d30b      	bcc.n	80109e4 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 80109cc:	3901      	subs	r1, #1
 80109ce:	b2ca      	uxtb	r2, r1
 80109d0:	2100      	movs	r1, #0
 80109d2:	f7ff ffd1 	bl	8010978 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80109d6:	4632      	mov	r2, r6
 80109d8:	4629      	mov	r1, r5
 80109da:	4620      	mov	r0, r4
 80109dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109e0:	f7ff bf7f 	b.w	80108e2 <Ssd1306::Text(char const*, unsigned int)>
 80109e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080109e8 <Ssd1306::ClearLine(unsigned char)>:
 80109e8:	b538      	push	{r3, r4, r5, lr}
 80109ea:	7943      	ldrb	r3, [r0, #5]
 80109ec:	4605      	mov	r5, r0
 80109ee:	428b      	cmp	r3, r1
 80109f0:	d314      	bcc.n	8010a1c <Ssd1306::ClearLine(unsigned char)+0x34>
 80109f2:	3901      	subs	r1, #1
 80109f4:	b2cc      	uxtb	r4, r1
 80109f6:	4622      	mov	r2, r4
 80109f8:	2100      	movs	r1, #0
 80109fa:	f7ff ffbd 	bl	8010978 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80109fe:	f105 0008 	add.w	r0, r5, #8
 8010a02:	f7ff ff45 	bl	8010890 <HAL_I2C::Setup()>
 8010a06:	2181      	movs	r1, #129	; 0x81
 8010a08:	4805      	ldr	r0, [pc, #20]	; (8010a20 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8010a0a:	f001 fa23 	bl	8011e54 <gd32_i2c_write>
 8010a0e:	4622      	mov	r2, r4
 8010a10:	4628      	mov	r0, r5
 8010a12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a16:	2100      	movs	r1, #0
 8010a18:	f7ff bfae 	b.w	8010978 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a1c:	bd38      	pop	{r3, r4, r5, pc}
 8010a1e:	bf00      	nop
 8010a20:	20009be8 	andcs	r9, r0, r8, ror #23

08010a24 <Ssd1306::SetSleep(bool)>:
 8010a24:	b111      	cbz	r1, 8010a2c <Ssd1306::SetSleep(bool)+0x8>
 8010a26:	21ae      	movs	r1, #174	; 0xae
 8010a28:	f7ff bf96 	b.w	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a2c:	21af      	movs	r1, #175	; 0xaf
 8010a2e:	e7fb      	b.n	8010a28 <Ssd1306::SetSleep(bool)+0x4>

08010a30 <Ssd1306::SetContrast(unsigned char)>:
 8010a30:	b538      	push	{r3, r4, r5, lr}
 8010a32:	4604      	mov	r4, r0
 8010a34:	460d      	mov	r5, r1
 8010a36:	7181      	strb	r1, [r0, #6]
 8010a38:	2181      	movs	r1, #129	; 0x81
 8010a3a:	f7ff ff8d 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a3e:	4629      	mov	r1, r5
 8010a40:	4620      	mov	r0, r4
 8010a42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a46:	f7ff bf87 	b.w	8010958 <Ssd1306::SendCommand(unsigned char)>

08010a4a <Ssd1306::SetFlipVertically(bool)>:
 8010a4a:	b510      	push	{r4, lr}
 8010a4c:	4604      	mov	r4, r0
 8010a4e:	71c1      	strb	r1, [r0, #7]
 8010a50:	b141      	cbz	r1, 8010a64 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8010a52:	21c0      	movs	r1, #192	; 0xc0
 8010a54:	f7ff ff80 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a58:	21a0      	movs	r1, #160	; 0xa0
 8010a5a:	4620      	mov	r0, r4
 8010a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a60:	f7ff bf7a 	b.w	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a64:	21c8      	movs	r1, #200	; 0xc8
 8010a66:	f7ff ff77 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a6a:	21a1      	movs	r1, #161	; 0xa1
 8010a6c:	e7f5      	b.n	8010a5a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08010a70 <Ssd1306::CheckSH1106()>:
 8010a70:	b530      	push	{r4, r5, lr}
 8010a72:	4604      	mov	r4, r0
 8010a74:	b087      	sub	sp, #28
 8010a76:	2100      	movs	r1, #0
 8010a78:	f7ff ff6e 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a7c:	2190      	movs	r1, #144	; 0x90
 8010a7e:	4620      	mov	r0, r4
 8010a80:	f7ff ff6a 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a84:	21b0      	movs	r1, #176	; 0xb0
 8010a86:	4620      	mov	r0, r4
 8010a88:	f7ff ff66 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010a8c:	4b22      	ldr	r3, [pc, #136]	; (8010b18 <Ssd1306::CheckSH1106()+0xa8>)
 8010a8e:	f104 0508 	add.w	r5, r4, #8
 8010a92:	6818      	ldr	r0, [r3, #0]
 8010a94:	791b      	ldrb	r3, [r3, #4]
 8010a96:	9002      	str	r0, [sp, #8]
 8010a98:	4628      	mov	r0, r5
 8010a9a:	f88d 300c 	strb.w	r3, [sp, #12]
 8010a9e:	f7ff fef7 	bl	8010890 <HAL_I2C::Setup()>
 8010aa2:	2105      	movs	r1, #5
 8010aa4:	a802      	add	r0, sp, #8
 8010aa6:	f001 f9d5 	bl	8011e54 <gd32_i2c_write>
 8010aaa:	2100      	movs	r1, #0
 8010aac:	4620      	mov	r0, r4
 8010aae:	f7ff ff53 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010ab2:	2190      	movs	r1, #144	; 0x90
 8010ab4:	4620      	mov	r0, r4
 8010ab6:	f7ff ff4f 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010aba:	21b0      	movs	r1, #176	; 0xb0
 8010abc:	4620      	mov	r0, r4
 8010abe:	f7ff ff4b 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010ac2:	2300      	movs	r3, #0
 8010ac4:	9304      	str	r3, [sp, #16]
 8010ac6:	f88d 3014 	strb.w	r3, [sp, #20]
 8010aca:	2340      	movs	r3, #64	; 0x40
 8010acc:	4628      	mov	r0, r5
 8010ace:	f88d 3007 	strb.w	r3, [sp, #7]
 8010ad2:	f7ff fedd 	bl	8010890 <HAL_I2C::Setup()>
 8010ad6:	2101      	movs	r1, #1
 8010ad8:	f10d 0007 	add.w	r0, sp, #7
 8010adc:	f001 f9ba 	bl	8011e54 <gd32_i2c_write>
 8010ae0:	4628      	mov	r0, r5
 8010ae2:	f7ff fed5 	bl	8010890 <HAL_I2C::Setup()>
 8010ae6:	2105      	movs	r1, #5
 8010ae8:	a804      	add	r0, sp, #16
 8010aea:	f001 fa19 	bl	8011f20 <gd32_i2c_read>
 8010aee:	2004      	movs	r0, #4
 8010af0:	aa02      	add	r2, sp, #8
 8010af2:	a904      	add	r1, sp, #16
 8010af4:	3801      	subs	r0, #1
 8010af6:	d201      	bcs.n	8010afc <Ssd1306::CheckSH1106()+0x8c>
 8010af8:	2300      	movs	r3, #0
 8010afa:	e006      	b.n	8010b0a <Ssd1306::CheckSH1106()+0x9a>
 8010afc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8010b00:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8010b04:	42ab      	cmp	r3, r5
 8010b06:	d0f5      	beq.n	8010af4 <Ssd1306::CheckSH1106()+0x84>
 8010b08:	1b5b      	subs	r3, r3, r5
 8010b0a:	fab3 f383 	clz	r3, r3
 8010b0e:	095b      	lsrs	r3, r3, #5
 8010b10:	7463      	strb	r3, [r4, #17]
 8010b12:	b007      	add	sp, #28
 8010b14:	bd30      	pop	{r4, r5, pc}
 8010b16:	bf00      	nop
 8010b18:	080156aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, sl, ip, lr}

08010b1c <Ssd1306::Cls()>:
 8010b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b20:	4604      	mov	r4, r0
 8010b22:	2600      	movs	r6, #0
 8010b24:	7c45      	ldrb	r5, [r0, #17]
 8010b26:	00ad      	lsls	r5, r5, #2
 8010b28:	b2ed      	uxtb	r5, r5
 8010b2a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8010b2e:	f045 0810 	orr.w	r8, r5, #16
 8010b32:	b2ff      	uxtb	r7, r7
 8010b34:	6963      	ldr	r3, [r4, #20]
 8010b36:	4629      	mov	r1, r5
 8010b38:	42b3      	cmp	r3, r6
 8010b3a:	4620      	mov	r0, r4
 8010b3c:	d80b      	bhi.n	8010b56 <Ssd1306::Cls()+0x3a>
 8010b3e:	f7ff ff0b 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b42:	4641      	mov	r1, r8
 8010b44:	4620      	mov	r0, r4
 8010b46:	f7ff ff07 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b4a:	4620      	mov	r0, r4
 8010b4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010b50:	21b0      	movs	r1, #176	; 0xb0
 8010b52:	f7ff bf01 	b.w	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b56:	f7ff feff 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b5a:	4641      	mov	r1, r8
 8010b5c:	4620      	mov	r0, r4
 8010b5e:	f7ff fefb 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b62:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8010b66:	4620      	mov	r0, r4
 8010b68:	b2c9      	uxtb	r1, r1
 8010b6a:	f7ff fef5 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010b6e:	7c23      	ldrb	r3, [r4, #16]
 8010b70:	b123      	cbz	r3, 8010b7c <Ssd1306::Cls()+0x60>
 8010b72:	3b01      	subs	r3, #1
 8010b74:	2b01      	cmp	r3, #1
 8010b76:	d901      	bls.n	8010b7c <Ssd1306::Cls()+0x60>
 8010b78:	3601      	adds	r6, #1
 8010b7a:	e7db      	b.n	8010b34 <Ssd1306::Cls()+0x18>
 8010b7c:	f104 0008 	add.w	r0, r4, #8
 8010b80:	f7ff fe86 	bl	8010890 <HAL_I2C::Setup()>
 8010b84:	4639      	mov	r1, r7
 8010b86:	4802      	ldr	r0, [pc, #8]	; (8010b90 <Ssd1306::Cls()+0x74>)
 8010b88:	f001 f964 	bl	8011e54 <gd32_i2c_write>
 8010b8c:	e7f4      	b.n	8010b78 <Ssd1306::Cls()+0x5c>
 8010b8e:	bf00      	nop
 8010b90:	20009be8 	andcs	r9, r0, r8, ror #23

08010b94 <Ssd1306::Start()>:
 8010b94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010b96:	7a04      	ldrb	r4, [r0, #8]
 8010b98:	68c6      	ldr	r6, [r0, #12]
 8010b9a:	4605      	mov	r5, r0
 8010b9c:	4620      	mov	r0, r4
 8010b9e:	f001 f953 	bl	8011e48 <gd32_i2c_set_address>
 8010ba2:	4630      	mov	r0, r6
 8010ba4:	f001 f948 	bl	8011e38 <gd32_i2c_set_baudrate>
 8010ba8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010bac:	2b07      	cmp	r3, #7
 8010bae:	d902      	bls.n	8010bb6 <Ssd1306::Start()+0x22>
 8010bb0:	3c50      	subs	r4, #80	; 0x50
 8010bb2:	2c0f      	cmp	r4, #15
 8010bb4:	d80f      	bhi.n	8010bd6 <Ssd1306::Start()+0x42>
 8010bb6:	2101      	movs	r1, #1
 8010bb8:	f10d 0007 	add.w	r0, sp, #7
 8010bbc:	f001 f9b0 	bl	8011f20 <gd32_i2c_read>
 8010bc0:	fab0 f480 	clz	r4, r0
 8010bc4:	0964      	lsrs	r4, r4, #5
 8010bc6:	b35c      	cbz	r4, 8010c20 <Ssd1306::Start()+0x8c>
 8010bc8:	7c2e      	ldrb	r6, [r5, #16]
 8010bca:	b14e      	cbz	r6, 8010be0 <Ssd1306::Start()+0x4c>
 8010bcc:	3e01      	subs	r6, #1
 8010bce:	2e01      	cmp	r6, #1
 8010bd0:	d929      	bls.n	8010c26 <Ssd1306::Start()+0x92>
 8010bd2:	2400      	movs	r4, #0
 8010bd4:	e024      	b.n	8010c20 <Ssd1306::Start()+0x8c>
 8010bd6:	2100      	movs	r1, #0
 8010bd8:	4608      	mov	r0, r1
 8010bda:	f001 f93b 	bl	8011e54 <gd32_i2c_write>
 8010bde:	e7ef      	b.n	8010bc0 <Ssd1306::Start()+0x2c>
 8010be0:	4f16      	ldr	r7, [pc, #88]	; (8010c3c <Ssd1306::Start()+0xa8>)
 8010be2:	4628      	mov	r0, r5
 8010be4:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010be8:	3601      	adds	r6, #1
 8010bea:	f7ff feb5 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010bee:	2e18      	cmp	r6, #24
 8010bf0:	d1f7      	bne.n	8010be2 <Ssd1306::Start()+0x4e>
 8010bf2:	2300      	movs	r3, #0
 8010bf4:	4a12      	ldr	r2, [pc, #72]	; (8010c40 <Ssd1306::Start()+0xac>)
 8010bf6:	4618      	mov	r0, r3
 8010bf8:	4611      	mov	r1, r2
 8010bfa:	3301      	adds	r3, #1
 8010bfc:	2b86      	cmp	r3, #134	; 0x86
 8010bfe:	f802 0b01 	strb.w	r0, [r2], #1
 8010c02:	d1fa      	bne.n	8010bfa <Ssd1306::Start()+0x66>
 8010c04:	2340      	movs	r3, #64	; 0x40
 8010c06:	4628      	mov	r0, r5
 8010c08:	700b      	strb	r3, [r1, #0]
 8010c0a:	f7ff ff31 	bl	8010a70 <Ssd1306::CheckSH1106()>
 8010c0e:	4628      	mov	r0, r5
 8010c10:	f7ff ff84 	bl	8010b1c <Ssd1306::Cls()>
 8010c14:	21af      	movs	r1, #175	; 0xaf
 8010c16:	4628      	mov	r0, r5
 8010c18:	f7ff fe9e 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010c1c:	2301      	movs	r3, #1
 8010c1e:	71eb      	strb	r3, [r5, #7]
 8010c20:	4620      	mov	r0, r4
 8010c22:	b003      	add	sp, #12
 8010c24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c26:	2600      	movs	r6, #0
 8010c28:	4f06      	ldr	r7, [pc, #24]	; (8010c44 <Ssd1306::Start()+0xb0>)
 8010c2a:	4628      	mov	r0, r5
 8010c2c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010c30:	3601      	adds	r6, #1
 8010c32:	f7ff fe91 	bl	8010958 <Ssd1306::SendCommand(unsigned char)>
 8010c36:	2e18      	cmp	r6, #24
 8010c38:	d1f7      	bne.n	8010c2a <Ssd1306::Start()+0x96>
 8010c3a:	e7da      	b.n	8010bf2 <Ssd1306::Start()+0x5e>
 8010c3c:	08015968 	stmdaeq	r1, {r3, r5, r6, r8, fp, ip, lr}
 8010c40:	20009be8 	andcs	r9, r0, r8, ror #23
 8010c44:	08015950 	stmdaeq	r1, {r4, r6, r8, fp, ip, lr}

08010c48 <console_putc>:
 8010c48:	f000 bb74 	b.w	8011334 <uart0_putc>

08010c4c <console_puts>:
 8010c4c:	f000 bb92 	b.w	8011374 <uart0_puts>

08010c50 <console_set_fg_color>:
 8010c50:	2807      	cmp	r0, #7
 8010c52:	d810      	bhi.n	8010c76 <console_set_fg_color+0x26>
 8010c54:	e8df f000 	tbb	[pc, r0]
 8010c58:	0b090704 	bleq	8252870 <__exidx_end+0x23cdb4>
 8010c5c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8010c28 <Ssd1306::Start()+0x94>
 8010c60:	4806      	ldr	r0, [pc, #24]	; (8010c7c <console_set_fg_color+0x2c>)
 8010c62:	f000 bb87 	b.w	8011374 <uart0_puts>
 8010c66:	4806      	ldr	r0, [pc, #24]	; (8010c80 <console_set_fg_color+0x30>)
 8010c68:	e7fb      	b.n	8010c62 <console_set_fg_color+0x12>
 8010c6a:	4806      	ldr	r0, [pc, #24]	; (8010c84 <console_set_fg_color+0x34>)
 8010c6c:	e7f9      	b.n	8010c62 <console_set_fg_color+0x12>
 8010c6e:	4806      	ldr	r0, [pc, #24]	; (8010c88 <console_set_fg_color+0x38>)
 8010c70:	e7f7      	b.n	8010c62 <console_set_fg_color+0x12>
 8010c72:	4806      	ldr	r0, [pc, #24]	; (8010c8c <console_set_fg_color+0x3c>)
 8010c74:	e7f5      	b.n	8010c62 <console_set_fg_color+0x12>
 8010c76:	4806      	ldr	r0, [pc, #24]	; (8010c90 <console_set_fg_color+0x40>)
 8010c78:	e7f3      	b.n	8010c62 <console_set_fg_color+0x12>
 8010c7a:	bf00      	nop
 8010c7c:	080159c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, ip, lr}
 8010c80:	080159cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, ip, lr}
 8010c84:	080159d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, fp, ip, lr}
 8010c88:	080159d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, ip, lr}
 8010c8c:	080132e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, ip, sp}
 8010c90:	080159de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, fp, ip, lr}

08010c94 <console_error>:
 8010c94:	b510      	push	{r4, lr}
 8010c96:	4604      	mov	r4, r0
 8010c98:	4805      	ldr	r0, [pc, #20]	; (8010cb0 <console_error+0x1c>)
 8010c9a:	f000 fb6b 	bl	8011374 <uart0_puts>
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	f000 fb68 	bl	8011374 <uart0_puts>
 8010ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ca8:	4802      	ldr	r0, [pc, #8]	; (8010cb4 <console_error+0x20>)
 8010caa:	f000 bb63 	b.w	8011374 <uart0_puts>
 8010cae:	bf00      	nop
 8010cb0:	080159cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, ip, lr}
 8010cb4:	080132e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, ip, sp}

08010cb8 <console_status>:
 8010cb8:	b510      	push	{r4, lr}
 8010cba:	460c      	mov	r4, r1
 8010cbc:	b280      	uxth	r0, r0
 8010cbe:	f7ff ffc7 	bl	8010c50 <console_set_fg_color>
 8010cc2:	4807      	ldr	r0, [pc, #28]	; (8010ce0 <console_status+0x28>)
 8010cc4:	f000 fb56 	bl	8011374 <uart0_puts>
 8010cc8:	4620      	mov	r0, r4
 8010cca:	f000 fb53 	bl	8011374 <uart0_puts>
 8010cce:	200a      	movs	r0, #10
 8010cd0:	f000 fb30 	bl	8011334 <uart0_putc>
 8010cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cd8:	4802      	ldr	r0, [pc, #8]	; (8010ce4 <console_status+0x2c>)
 8010cda:	f000 bb4b 	b.w	8011374 <uart0_puts>
 8010cde:	bf00      	nop
 8010ce0:	080159c0 	stmdaeq	r1, {r6, r7, r8, fp, ip, lr}
 8010ce4:	080132e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, ip, sp}

08010ce8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8010ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cec:	4617      	mov	r7, r2
 8010cee:	461e      	mov	r6, r3
 8010cf0:	4d14      	ldr	r5, [pc, #80]	; (8010d44 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8010cf2:	4b15      	ldr	r3, [pc, #84]	; (8010d48 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8010cf4:	b086      	sub	sp, #24
 8010cf6:	6018      	str	r0, [r3, #0]
 8010cf8:	4604      	mov	r4, r0
 8010cfa:	f105 0803 	add.w	r8, r5, #3
 8010cfe:	2203      	movs	r2, #3
 8010d00:	4628      	mov	r0, r5
 8010d02:	f000 f9dc 	bl	80110be <memmove>
 8010d06:	4639      	mov	r1, r7
 8010d08:	220b      	movs	r2, #11
 8010d0a:	4640      	mov	r0, r8
 8010d0c:	f000 f9d7 	bl	80110be <memmove>
 8010d10:	f105 030e 	add.w	r3, r5, #14
 8010d14:	4631      	mov	r1, r6
 8010d16:	2208      	movs	r2, #8
 8010d18:	4618      	mov	r0, r3
 8010d1a:	f000 f9d0 	bl	80110be <memmove>
 8010d1e:	2308      	movs	r3, #8
 8010d20:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8010d24:	230b      	movs	r3, #11
 8010d26:	9302      	str	r3, [sp, #8]
 8010d28:	4b08      	ldr	r3, [pc, #32]	; (8010d4c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8010d2a:	9005      	str	r0, [sp, #20]
 8010d2c:	e9cd 5300 	strd	r5, r3, [sp]
 8010d30:	213f      	movs	r1, #63	; 0x3f
 8010d32:	2303      	movs	r3, #3
 8010d34:	4a06      	ldr	r2, [pc, #24]	; (8010d50 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8010d36:	4807      	ldr	r0, [pc, #28]	; (8010d54 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8010d38:	f7f8 fadc 	bl	80092f4 <snprintf>
 8010d3c:	4620      	mov	r0, r4
 8010d3e:	b006      	add	sp, #24
 8010d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d44:	20009c74 	andcs	r9, r0, r4, ror ip
 8010d48:	20009ccc 	andcs	r9, r0, ip, asr #25
 8010d4c:	0801332c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip, sp}
 8010d50:	080159e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, fp, ip, lr}
 8010d54:	20009c8a 	andcs	r9, r0, sl, lsl #25

08010d58 <FirmwareVersion::Print(char const*)>:
 8010d58:	b510      	push	{r4, lr}
 8010d5a:	460c      	mov	r4, r1
 8010d5c:	4804      	ldr	r0, [pc, #16]	; (8010d70 <FirmwareVersion::Print(char const*)+0x18>)
 8010d5e:	f000 f9e6 	bl	801112e <puts>
 8010d62:	b124      	cbz	r4, 8010d6e <FirmwareVersion::Print(char const*)+0x16>
 8010d64:	4620      	mov	r0, r4
 8010d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d6a:	f000 b9e0 	b.w	801112e <puts>
 8010d6e:	bd10      	pop	{r4, pc}
 8010d70:	20009c8a 	andcs	r9, r0, sl, lsl #25

08010d74 <LedBlink::LedBlink()>:
 8010d74:	b538      	push	{r3, r4, r5, lr}
 8010d76:	2205      	movs	r2, #5
 8010d78:	2300      	movs	r3, #0
 8010d7a:	e9c0 3200 	strd	r3, r2, [r0]
 8010d7e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8010d82:	6083      	str	r3, [r0, #8]
 8010d84:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010d88:	6143      	str	r3, [r0, #20]
 8010d8a:	4b09      	ldr	r3, [pc, #36]	; (8010db0 <LedBlink::LedBlink()+0x3c>)
 8010d8c:	4d09      	ldr	r5, [pc, #36]	; (8010db4 <LedBlink::LedBlink()+0x40>)
 8010d8e:	4604      	mov	r4, r0
 8010d90:	6018      	str	r0, [r3, #0]
 8010d92:	f240 6004 	movw	r0, #1540	; 0x604
 8010d96:	f000 fceb 	bl	8011770 <rcu_periph_clock_enable>
 8010d9a:	4628      	mov	r0, r5
 8010d9c:	2301      	movs	r3, #1
 8010d9e:	2203      	movs	r2, #3
 8010da0:	2110      	movs	r1, #16
 8010da2:	f000 fc4d 	bl	8011640 <gpio_init>
 8010da6:	2301      	movs	r3, #1
 8010da8:	4620      	mov	r0, r4
 8010daa:	616b      	str	r3, [r5, #20]
 8010dac:	bd38      	pop	{r3, r4, r5, pc}
 8010dae:	bf00      	nop
 8010db0:	20009cd0 	ldrdcs	r9, [r0], -r0
 8010db4:	40011000 	andmi	r1, r1, r0

08010db8 <LedBlink::SetMode(ledblink::Mode)>:
 8010db8:	6843      	ldr	r3, [r0, #4]
 8010dba:	428b      	cmp	r3, r1
 8010dbc:	d02f      	beq.n	8010e1e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010dbe:	6041      	str	r1, [r0, #4]
 8010dc0:	2904      	cmp	r1, #4
 8010dc2:	d822      	bhi.n	8010e0a <LedBlink::SetMode(ledblink::Mode)+0x52>
 8010dc4:	e8df f001 	tbb	[pc, r1]
 8010dc8:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8010dcc:	23ff001d 	mvnscs	r0, #29
 8010dd0:	6003      	str	r3, [r0, #0]
 8010dd2:	2300      	movs	r3, #0
 8010dd4:	2201      	movs	r2, #1
 8010dd6:	60c3      	str	r3, [r0, #12]
 8010dd8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010ddc:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010de0:	611a      	str	r2, [r3, #16]
 8010de2:	6880      	ldr	r0, [r0, #8]
 8010de4:	b1d8      	cbz	r0, 8010e1e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010de6:	6803      	ldr	r3, [r0, #0]
 8010de8:	689b      	ldr	r3, [r3, #8]
 8010dea:	4718      	bx	r3
 8010dec:	2301      	movs	r3, #1
 8010dee:	6003      	str	r3, [r0, #0]
 8010df0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8010df4:	60c3      	str	r3, [r0, #12]
 8010df6:	e7f4      	b.n	8010de2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010df8:	2303      	movs	r3, #3
 8010dfa:	6003      	str	r3, [r0, #0]
 8010dfc:	f240 134d 	movw	r3, #333	; 0x14d
 8010e00:	e7f8      	b.n	8010df4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e02:	2305      	movs	r3, #5
 8010e04:	6003      	str	r3, [r0, #0]
 8010e06:	23c8      	movs	r3, #200	; 0xc8
 8010e08:	e7f4      	b.n	8010df4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e0a:	2300      	movs	r3, #0
 8010e0c:	2201      	movs	r2, #1
 8010e0e:	6003      	str	r3, [r0, #0]
 8010e10:	60c3      	str	r3, [r0, #12]
 8010e12:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010e16:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010e1a:	615a      	str	r2, [r3, #20]
 8010e1c:	e7e1      	b.n	8010de2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010e1e:	4770      	bx	lr

08010e20 <Hardware::Hardware()>:
 8010e20:	b570      	push	{r4, r5, r6, lr}
 8010e22:	2400      	movs	r4, #0
 8010e24:	4b24      	ldr	r3, [pc, #144]	; (8010eb8 <Hardware::Hardware()+0x98>)
 8010e26:	b090      	sub	sp, #64	; 0x40
 8010e28:	7004      	strb	r4, [r0, #0]
 8010e2a:	6018      	str	r0, [r3, #0]
 8010e2c:	4605      	mov	r5, r0
 8010e2e:	f7f6 fb67 	bl	8007500 <console_init>
 8010e32:	f000 faaf 	bl	8011394 <systick_config>
 8010e36:	f001 fabb 	bl	80123b0 <udelay_init()>
 8010e3a:	f001 fab7 	bl	80123ac <micros_init()>
 8010e3e:	f240 701b 	movw	r0, #1819	; 0x71b
 8010e42:	f000 fc95 	bl	8011770 <rcu_periph_clock_enable>
 8010e46:	f240 701c 	movw	r0, #1820	; 0x71c
 8010e4a:	f000 fc91 	bl	8011770 <rcu_periph_clock_enable>
 8010e4e:	4e1b      	ldr	r6, [pc, #108]	; (8010ebc <Hardware::Hardware()+0x9c>)
 8010e50:	f000 fc86 	bl	8011760 <pmu_backup_write_enable>
 8010e54:	4621      	mov	r1, r4
 8010e56:	2002      	movs	r0, #2
 8010e58:	f000 fb3a 	bl	80114d0 <bkp_data_write>
 8010e5c:	f240 7004 	movw	r0, #1796	; 0x704
 8010e60:	f000 fc86 	bl	8011770 <rcu_periph_clock_enable>
 8010e64:	4630      	mov	r0, r6
 8010e66:	f000 fddb 	bl	8011a20 <timer_deinit>
 8010e6a:	236b      	movs	r3, #107	; 0x6b
 8010e6c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010e70:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010e74:	a903      	add	r1, sp, #12
 8010e76:	4630      	mov	r0, r6
 8010e78:	9305      	str	r3, [sp, #20]
 8010e7a:	f000 fe33 	bl	8011ae4 <timer_init>
 8010e7e:	4630      	mov	r0, r6
 8010e80:	f000 fe88 	bl	8011b94 <timer_enable>
 8010e84:	f000 ff4a 	bl	8011d1c <gd32_adc_init()>
 8010e88:	220b      	movs	r2, #11
 8010e8a:	2309      	movs	r3, #9
 8010e8c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8010e90:	237a      	movs	r3, #122	; 0x7a
 8010e92:	a807      	add	r0, sp, #28
 8010e94:	930c      	str	r3, [sp, #48]	; 0x30
 8010e96:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8010e9a:	9407      	str	r4, [sp, #28]
 8010e9c:	940f      	str	r4, [sp, #60]	; 0x3c
 8010e9e:	f000 f99f 	bl	80111e0 <mktime>
 8010ea2:	4621      	mov	r1, r4
 8010ea4:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8010ea8:	a801      	add	r0, sp, #4
 8010eaa:	f000 fa0f 	bl	80112cc <settimeofday>
 8010eae:	f000 ff8f 	bl	8011dd0 <gd32_i2c_begin>
 8010eb2:	4628      	mov	r0, r5
 8010eb4:	b010      	add	sp, #64	; 0x40
 8010eb6:	bd70      	pop	{r4, r5, r6, pc}
 8010eb8:	20009cd4 	ldrdcs	r9, [r0], -r4
 8010ebc:	40001000 	andmi	r1, r0, r0

08010ec0 <Hardware::Reboot()>:
 8010ec0:	b508      	push	{r3, lr}
 8010ec2:	2300      	movs	r3, #0
 8010ec4:	4604      	mov	r4, r0
 8010ec6:	7003      	strb	r3, [r0, #0]
 8010ec8:	2104      	movs	r1, #4
 8010eca:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010ece:	f000 fb8d 	bl	80115ec <fwdgt_config>
 8010ed2:	4620      	mov	r0, r4
 8010ed4:	f7f7 fc8e 	bl	80087f4 <Hardware::RebootHandler()>
 8010ed8:	2102      	movs	r1, #2
 8010eda:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010ede:	f000 fb85 	bl	80115ec <fwdgt_config>
 8010ee2:	2801      	cmp	r0, #1
 8010ee4:	bf0c      	ite	eq
 8010ee6:	2301      	moveq	r3, #1
 8010ee8:	2300      	movne	r3, #0
 8010eea:	7023      	strb	r3, [r4, #0]
 8010eec:	d101      	bne.n	8010ef2 <Hardware::Reboot()+0x32>
 8010eee:	f000 fb6d 	bl	80115cc <fwdgt_enable>
 8010ef2:	2208      	movs	r2, #8
 8010ef4:	4b0d      	ldr	r3, [pc, #52]	; (8010f2c <Hardware::Reboot()+0x6c>)
 8010ef6:	2501      	movs	r5, #1
 8010ef8:	681b      	ldr	r3, [r3, #0]
 8010efa:	480d      	ldr	r0, [pc, #52]	; (8010f30 <Hardware::Reboot()+0x70>)
 8010efc:	601a      	str	r2, [r3, #0]
 8010efe:	227d      	movs	r2, #125	; 0x7d
 8010f00:	490c      	ldr	r1, [pc, #48]	; (8010f34 <Hardware::Reboot()+0x74>)
 8010f02:	60da      	str	r2, [r3, #12]
 8010f04:	68dc      	ldr	r4, [r3, #12]
 8010f06:	b904      	cbnz	r4, 8010f0a <Hardware::Reboot()+0x4a>
 8010f08:	e7fe      	b.n	8010f08 <Hardware::Reboot()+0x48>
 8010f0a:	6802      	ldr	r2, [r0, #0]
 8010f0c:	695e      	ldr	r6, [r3, #20]
 8010f0e:	1b92      	subs	r2, r2, r6
 8010f10:	4294      	cmp	r4, r2
 8010f12:	d8f8      	bhi.n	8010f06 <Hardware::Reboot()+0x46>
 8010f14:	6802      	ldr	r2, [r0, #0]
 8010f16:	615a      	str	r2, [r3, #20]
 8010f18:	691a      	ldr	r2, [r3, #16]
 8010f1a:	2a01      	cmp	r2, #1
 8010f1c:	f082 0401 	eor.w	r4, r2, #1
 8010f20:	611c      	str	r4, [r3, #16]
 8010f22:	bf14      	ite	ne
 8010f24:	610d      	strne	r5, [r1, #16]
 8010f26:	614a      	streq	r2, [r1, #20]
 8010f28:	e7ec      	b.n	8010f04 <Hardware::Reboot()+0x44>
 8010f2a:	bf00      	nop
 8010f2c:	20009cd0 	ldrdcs	r9, [r0], -r0
 8010f30:	20009cec 	andcs	r9, r0, ip, ror #25
 8010f34:	40011000 	andmi	r1, r1, r0

08010f38 <operator delete(void*)>:
 8010f38:	f000 b890 	b.w	801105c <free>

08010f3c <operator delete[](void*)>:
 8010f3c:	f000 b88e 	b.w	801105c <free>

08010f40 <operator new(unsigned int)>:
 8010f40:	f000 b842 	b.w	8010fc8 <malloc>

08010f44 <operator new[](unsigned int)>:
 8010f44:	f000 b840 	b.w	8010fc8 <malloc>

08010f48 <inet_aton>:
 8010f48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010f4a:	f04f 0c0a 	mov.w	ip, #10
 8010f4e:	2500      	movs	r5, #0
 8010f50:	ae01      	add	r6, sp, #4
 8010f52:	4603      	mov	r3, r0
 8010f54:	2200      	movs	r2, #0
 8010f56:	1d07      	adds	r7, r0, #4
 8010f58:	e007      	b.n	8010f6a <inet_aton+0x22>
 8010f5a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010f5e:	2b09      	cmp	r3, #9
 8010f60:	d820      	bhi.n	8010fa4 <inet_aton+0x5c>
 8010f62:	4603      	mov	r3, r0
 8010f64:	fb0c 4202 	mla	r2, ip, r2, r4
 8010f68:	3a30      	subs	r2, #48	; 0x30
 8010f6a:	4618      	mov	r0, r3
 8010f6c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010f70:	2c2e      	cmp	r4, #46	; 0x2e
 8010f72:	d111      	bne.n	8010f98 <inet_aton+0x50>
 8010f74:	3501      	adds	r5, #1
 8010f76:	2d03      	cmp	r5, #3
 8010f78:	f806 2b01 	strb.w	r2, [r6], #1
 8010f7c:	d1e9      	bne.n	8010f52 <inet_aton+0xa>
 8010f7e:	2200      	movs	r2, #0
 8010f80:	250a      	movs	r5, #10
 8010f82:	1d1c      	adds	r4, r3, #4
 8010f84:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010f88:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8010f8c:	d10d      	bne.n	8010faa <inet_aton+0x62>
 8010f8e:	f88d 2007 	strb.w	r2, [sp, #7]
 8010f92:	b9b1      	cbnz	r1, 8010fc2 <inet_aton+0x7a>
 8010f94:	2001      	movs	r0, #1
 8010f96:	e006      	b.n	8010fa6 <inet_aton+0x5e>
 8010f98:	2c00      	cmp	r4, #0
 8010f9a:	d0eb      	beq.n	8010f74 <inet_aton+0x2c>
 8010f9c:	2c0a      	cmp	r4, #10
 8010f9e:	d0e9      	beq.n	8010f74 <inet_aton+0x2c>
 8010fa0:	42b8      	cmp	r0, r7
 8010fa2:	d1da      	bne.n	8010f5a <inet_aton+0x12>
 8010fa4:	2000      	movs	r0, #0
 8010fa6:	b003      	add	sp, #12
 8010fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010faa:	280a      	cmp	r0, #10
 8010fac:	d0ef      	beq.n	8010f8e <inet_aton+0x46>
 8010fae:	42a3      	cmp	r3, r4
 8010fb0:	d0f8      	beq.n	8010fa4 <inet_aton+0x5c>
 8010fb2:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8010fb6:	2e09      	cmp	r6, #9
 8010fb8:	d8f4      	bhi.n	8010fa4 <inet_aton+0x5c>
 8010fba:	fb05 0202 	mla	r2, r5, r2, r0
 8010fbe:	3a30      	subs	r2, #48	; 0x30
 8010fc0:	e7e0      	b.n	8010f84 <inet_aton+0x3c>
 8010fc2:	9b01      	ldr	r3, [sp, #4]
 8010fc4:	600b      	str	r3, [r1, #0]
 8010fc6:	e7e5      	b.n	8010f94 <inet_aton+0x4c>

08010fc8 <malloc>:
 8010fc8:	b538      	push	{r3, r4, r5, lr}
 8010fca:	4604      	mov	r4, r0
 8010fcc:	4601      	mov	r1, r0
 8010fce:	481c      	ldr	r0, [pc, #112]	; (8011040 <malloc+0x78>)
 8010fd0:	f7f8 f980 	bl	80092d4 <printf>
 8010fd4:	b17c      	cbz	r4, 8010ff6 <malloc+0x2e>
 8010fd6:	4b1b      	ldr	r3, [pc, #108]	; (8011044 <malloc+0x7c>)
 8010fd8:	6818      	ldr	r0, [r3, #0]
 8010fda:	b978      	cbnz	r0, 8010ffc <malloc+0x34>
 8010fdc:	4a1a      	ldr	r2, [pc, #104]	; (8011048 <malloc+0x80>)
 8010fde:	f104 031b 	add.w	r3, r4, #27
 8010fe2:	6811      	ldr	r1, [r2, #0]
 8010fe4:	4819      	ldr	r0, [pc, #100]	; (801104c <malloc+0x84>)
 8010fe6:	f023 030f 	bic.w	r3, r3, #15
 8010fea:	440b      	add	r3, r1
 8010fec:	4283      	cmp	r3, r0
 8010fee:	d921      	bls.n	8011034 <malloc+0x6c>
 8010ff0:	4817      	ldr	r0, [pc, #92]	; (8011050 <malloc+0x88>)
 8010ff2:	f7f8 f96f 	bl	80092d4 <printf>
 8010ff6:	2500      	movs	r5, #0
 8010ff8:	4628      	mov	r0, r5
 8010ffa:	bd38      	pop	{r3, r4, r5, pc}
 8010ffc:	4284      	cmp	r4, r0
 8010ffe:	d80a      	bhi.n	8011016 <malloc+0x4e>
 8011000:	685a      	ldr	r2, [r3, #4]
 8011002:	6899      	ldr	r1, [r3, #8]
 8011004:	3201      	adds	r2, #1
 8011006:	428a      	cmp	r2, r1
 8011008:	605a      	str	r2, [r3, #4]
 801100a:	d900      	bls.n	801100e <malloc+0x46>
 801100c:	609a      	str	r2, [r3, #8]
 801100e:	68d9      	ldr	r1, [r3, #12]
 8011010:	b919      	cbnz	r1, 801101a <malloc+0x52>
 8011012:	4604      	mov	r4, r0
 8011014:	e7e2      	b.n	8010fdc <malloc+0x14>
 8011016:	3310      	adds	r3, #16
 8011018:	e7de      	b.n	8010fd8 <malloc+0x10>
 801101a:	4604      	mov	r4, r0
 801101c:	688a      	ldr	r2, [r1, #8]
 801101e:	60da      	str	r2, [r3, #12]
 8011020:	2300      	movs	r3, #0
 8011022:	f101 050c 	add.w	r5, r1, #12
 8011026:	608b      	str	r3, [r1, #8]
 8011028:	4622      	mov	r2, r4
 801102a:	462b      	mov	r3, r5
 801102c:	4809      	ldr	r0, [pc, #36]	; (8011054 <malloc+0x8c>)
 801102e:	f7f8 f951 	bl	80092d4 <printf>
 8011032:	e7e1      	b.n	8010ff8 <malloc+0x30>
 8011034:	6013      	str	r3, [r2, #0]
 8011036:	4b08      	ldr	r3, [pc, #32]	; (8011058 <malloc+0x90>)
 8011038:	e9c1 3400 	strd	r3, r4, [r1]
 801103c:	e7f0      	b.n	8011020 <malloc+0x58>
 801103e:	bf00      	nop
 8011040:	08015a08 	stmdaeq	r1, {r3, r9, fp, ip, lr}
 8011044:	20000010 	andcs	r0, r0, r0, lsl r0
 8011048:	2000000c 	andcs	r0, r0, ip
 801104c:	20016000 	andcs	r6, r1, r0
 8011050:	08015a14 	stmdaeq	r1, {r2, r4, r9, fp, ip, lr}
 8011054:	08015a30 	stmdaeq	r1, {r4, r5, r9, fp, ip, lr}
 8011058:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0801105c <free>:
 801105c:	b538      	push	{r3, r4, r5, lr}
 801105e:	4604      	mov	r4, r0
 8011060:	b1c8      	cbz	r0, 8011096 <free+0x3a>
 8011062:	f1a0 050c 	sub.w	r5, r0, #12
 8011066:	4602      	mov	r2, r0
 8011068:	4629      	mov	r1, r5
 801106a:	480c      	ldr	r0, [pc, #48]	; (801109c <free+0x40>)
 801106c:	f7f8 f932 	bl	80092d4 <printf>
 8011070:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8011074:	4b0a      	ldr	r3, [pc, #40]	; (80110a0 <free+0x44>)
 8011076:	429a      	cmp	r2, r3
 8011078:	d10d      	bne.n	8011096 <free+0x3a>
 801107a:	4b0a      	ldr	r3, [pc, #40]	; (80110a4 <free+0x48>)
 801107c:	681a      	ldr	r2, [r3, #0]
 801107e:	b152      	cbz	r2, 8011096 <free+0x3a>
 8011080:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8011084:	4291      	cmp	r1, r2
 8011086:	d107      	bne.n	8011098 <free+0x3c>
 8011088:	68da      	ldr	r2, [r3, #12]
 801108a:	f844 2c04 	str.w	r2, [r4, #-4]
 801108e:	685a      	ldr	r2, [r3, #4]
 8011090:	60dd      	str	r5, [r3, #12]
 8011092:	3a01      	subs	r2, #1
 8011094:	605a      	str	r2, [r3, #4]
 8011096:	bd38      	pop	{r3, r4, r5, pc}
 8011098:	3310      	adds	r3, #16
 801109a:	e7ef      	b.n	801107c <free+0x20>
 801109c:	08015a5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, fp, ip, lr}
 80110a0:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80110a4:	20000010 	andcs	r0, r0, r0, lsl r0

080110a8 <memcpy>:
 80110a8:	b510      	push	{r4, lr}
 80110aa:	1e43      	subs	r3, r0, #1
 80110ac:	440a      	add	r2, r1
 80110ae:	4291      	cmp	r1, r2
 80110b0:	d100      	bne.n	80110b4 <memcpy+0xc>
 80110b2:	bd10      	pop	{r4, pc}
 80110b4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110b8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80110bc:	e7f7      	b.n	80110ae <memcpy+0x6>

080110be <memmove>:
 80110be:	4288      	cmp	r0, r1
 80110c0:	b510      	push	{r4, lr}
 80110c2:	eb01 0302 	add.w	r3, r1, r2
 80110c6:	d208      	bcs.n	80110da <memmove+0x1c>
 80110c8:	1e42      	subs	r2, r0, #1
 80110ca:	4299      	cmp	r1, r3
 80110cc:	d100      	bne.n	80110d0 <memmove+0x12>
 80110ce:	bd10      	pop	{r4, pc}
 80110d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110d4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80110d8:	e7f7      	b.n	80110ca <memmove+0xc>
 80110da:	4601      	mov	r1, r0
 80110dc:	4402      	add	r2, r0
 80110de:	428a      	cmp	r2, r1
 80110e0:	d0f5      	beq.n	80110ce <memmove+0x10>
 80110e2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80110e6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80110ea:	e7f8      	b.n	80110de <memmove+0x20>

080110ec <memset>:
 80110ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110ee:	b1c2      	cbz	r2, 8011122 <memset+0x36>
 80110f0:	4603      	mov	r3, r0
 80110f2:	b2c9      	uxtb	r1, r1
 80110f4:	075c      	lsls	r4, r3, #29
 80110f6:	d110      	bne.n	801111a <memset+0x2e>
 80110f8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80110fc:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8011100:	463d      	mov	r5, r7
 8011102:	461e      	mov	r6, r3
 8011104:	f022 0407 	bic.w	r4, r2, #7
 8011108:	441c      	add	r4, r3
 801110a:	42a6      	cmp	r6, r4
 801110c:	d10a      	bne.n	8011124 <memset+0x38>
 801110e:	4413      	add	r3, r2
 8011110:	429c      	cmp	r4, r3
 8011112:	d006      	beq.n	8011122 <memset+0x36>
 8011114:	f804 1b01 	strb.w	r1, [r4], #1
 8011118:	e7fa      	b.n	8011110 <memset+0x24>
 801111a:	3a01      	subs	r2, #1
 801111c:	f803 1b01 	strb.w	r1, [r3], #1
 8011120:	d1e8      	bne.n	80110f4 <memset+0x8>
 8011122:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011124:	f846 7b08 	str.w	r7, [r6], #8
 8011128:	f846 5c04 	str.w	r5, [r6, #-4]
 801112c:	e7ed      	b.n	801110a <memset+0x1e>

0801112e <puts>:
 801112e:	b508      	push	{r3, lr}
 8011130:	f7ff fd8c 	bl	8010c4c <console_puts>
 8011134:	200a      	movs	r0, #10
 8011136:	f7ff fd87 	bl	8010c48 <console_putc>
 801113a:	2001      	movs	r0, #1
 801113c:	bd08      	pop	{r3, pc}
	...

08011140 <strtok>:
 8011140:	b530      	push	{r4, r5, lr}
 8011142:	b910      	cbnz	r0, 801114a <strtok+0xa>
 8011144:	4b12      	ldr	r3, [pc, #72]	; (8011190 <strtok+0x50>)
 8011146:	6818      	ldr	r0, [r3, #0]
 8011148:	b158      	cbz	r0, 8011162 <strtok+0x22>
 801114a:	4603      	mov	r3, r0
 801114c:	460d      	mov	r5, r1
 801114e:	4618      	mov	r0, r3
 8011150:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011154:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011158:	b924      	cbnz	r4, 8011164 <strtok+0x24>
 801115a:	b94a      	cbnz	r2, 8011170 <strtok+0x30>
 801115c:	4610      	mov	r0, r2
 801115e:	4b0c      	ldr	r3, [pc, #48]	; (8011190 <strtok+0x50>)
 8011160:	601a      	str	r2, [r3, #0]
 8011162:	bd30      	pop	{r4, r5, pc}
 8011164:	42a2      	cmp	r2, r4
 8011166:	d1f5      	bne.n	8011154 <strtok+0x14>
 8011168:	e7f0      	b.n	801114c <strtok+0xc>
 801116a:	4613      	mov	r3, r2
 801116c:	e00c      	b.n	8011188 <strtok+0x48>
 801116e:	b914      	cbnz	r4, 8011176 <strtok+0x36>
 8011170:	460d      	mov	r5, r1
 8011172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011176:	f815 4b01 	ldrb.w	r4, [r5], #1
 801117a:	42a2      	cmp	r2, r4
 801117c:	d1f7      	bne.n	801116e <strtok+0x2e>
 801117e:	2a00      	cmp	r2, #0
 8011180:	d0f3      	beq.n	801116a <strtok+0x2a>
 8011182:	2200      	movs	r2, #0
 8011184:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011188:	4a01      	ldr	r2, [pc, #4]	; (8011190 <strtok+0x50>)
 801118a:	6013      	str	r3, [r2, #0]
 801118c:	e7e9      	b.n	8011162 <strtok+0x22>
 801118e:	bf00      	nop
 8011190:	20009cd8 	ldrdcs	r9, [r0], -r8

08011194 <isleapyear>:
 8011194:	2264      	movs	r2, #100	; 0x64
 8011196:	fb90 f3f2 	sdiv	r3, r0, r2
 801119a:	fb02 0313 	mls	r3, r2, r3, r0
 801119e:	b94b      	cbnz	r3, 80111b4 <isleapyear+0x20>
 80111a0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80111a4:	fb90 f2f3 	sdiv	r2, r0, r3
 80111a8:	fb03 0012 	mls	r0, r3, r2, r0
 80111ac:	fab0 f080 	clz	r0, r0
 80111b0:	0940      	lsrs	r0, r0, #5
 80111b2:	4770      	bx	lr
 80111b4:	f010 0f03 	tst.w	r0, #3
 80111b8:	bf0c      	ite	eq
 80111ba:	2001      	moveq	r0, #1
 80111bc:	2000      	movne	r0, #0
 80111be:	4770      	bx	lr

080111c0 <getdaysofmonth>:
 80111c0:	b510      	push	{r4, lr}
 80111c2:	4604      	mov	r4, r0
 80111c4:	2c01      	cmp	r4, #1
 80111c6:	4608      	mov	r0, r1
 80111c8:	d102      	bne.n	80111d0 <getdaysofmonth+0x10>
 80111ca:	f7ff ffe3 	bl	8011194 <isleapyear>
 80111ce:	b918      	cbnz	r0, 80111d8 <getdaysofmonth+0x18>
 80111d0:	4b02      	ldr	r3, [pc, #8]	; (80111dc <getdaysofmonth+0x1c>)
 80111d2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80111d6:	bd10      	pop	{r4, pc}
 80111d8:	201d      	movs	r0, #29
 80111da:	e7fc      	b.n	80111d6 <getdaysofmonth+0x16>
 80111dc:	08015a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, lr}

080111e0 <mktime>:
 80111e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111e4:	4604      	mov	r4, r0
 80111e6:	2800      	cmp	r0, #0
 80111e8:	d043      	beq.n	8011272 <mktime+0x92>
 80111ea:	6941      	ldr	r1, [r0, #20]
 80111ec:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80111f0:	2b45      	cmp	r3, #69	; 0x45
 80111f2:	d83e      	bhi.n	8011272 <mktime+0x92>
 80111f4:	2600      	movs	r6, #0
 80111f6:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80111fa:	f240 186d 	movw	r8, #365	; 0x16d
 80111fe:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8011202:	42af      	cmp	r7, r5
 8011204:	da24      	bge.n	8011250 <mktime+0x70>
 8011206:	6927      	ldr	r7, [r4, #16]
 8011208:	2f0b      	cmp	r7, #11
 801120a:	d832      	bhi.n	8011272 <mktime+0x92>
 801120c:	2500      	movs	r5, #0
 801120e:	42af      	cmp	r7, r5
 8011210:	d129      	bne.n	8011266 <mktime+0x86>
 8011212:	68e5      	ldr	r5, [r4, #12]
 8011214:	2d00      	cmp	r5, #0
 8011216:	dd2c      	ble.n	8011272 <mktime+0x92>
 8011218:	4638      	mov	r0, r7
 801121a:	f7ff ffd1 	bl	80111c0 <getdaysofmonth>
 801121e:	4285      	cmp	r5, r0
 8011220:	dc27      	bgt.n	8011272 <mktime+0x92>
 8011222:	2318      	movs	r3, #24
 8011224:	3d01      	subs	r5, #1
 8011226:	4435      	add	r5, r6
 8011228:	435d      	muls	r5, r3
 801122a:	68a3      	ldr	r3, [r4, #8]
 801122c:	2b17      	cmp	r3, #23
 801122e:	d820      	bhi.n	8011272 <mktime+0x92>
 8011230:	213c      	movs	r1, #60	; 0x3c
 8011232:	442b      	add	r3, r5
 8011234:	fb01 f203 	mul.w	r2, r1, r3
 8011238:	6863      	ldr	r3, [r4, #4]
 801123a:	2b3b      	cmp	r3, #59	; 0x3b
 801123c:	d819      	bhi.n	8011272 <mktime+0x92>
 801123e:	6820      	ldr	r0, [r4, #0]
 8011240:	4413      	add	r3, r2
 8011242:	283b      	cmp	r0, #59	; 0x3b
 8011244:	fb01 f303 	mul.w	r3, r1, r3
 8011248:	d813      	bhi.n	8011272 <mktime+0x92>
 801124a:	4418      	add	r0, r3
 801124c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011250:	4628      	mov	r0, r5
 8011252:	f7ff ff9f 	bl	8011194 <isleapyear>
 8011256:	2800      	cmp	r0, #0
 8011258:	bf14      	ite	ne
 801125a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801125e:	4643      	moveq	r3, r8
 8011260:	3501      	adds	r5, #1
 8011262:	441e      	add	r6, r3
 8011264:	e7cd      	b.n	8011202 <mktime+0x22>
 8011266:	4628      	mov	r0, r5
 8011268:	f7ff ffaa 	bl	80111c0 <getdaysofmonth>
 801126c:	3501      	adds	r5, #1
 801126e:	4406      	add	r6, r0
 8011270:	e7cd      	b.n	801120e <mktime+0x2e>
 8011272:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011276:	e7e9      	b.n	801124c <mktime+0x6c>

08011278 <gettimeofday>:
 8011278:	b538      	push	{r3, r4, r5, lr}
 801127a:	4b10      	ldr	r3, [pc, #64]	; (80112bc <gettimeofday+0x44>)
 801127c:	4a10      	ldr	r2, [pc, #64]	; (80112c0 <gettimeofday+0x48>)
 801127e:	681b      	ldr	r3, [r3, #0]
 8011280:	6814      	ldr	r4, [r2, #0]
 8011282:	6013      	str	r3, [r2, #0]
 8011284:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011288:	429c      	cmp	r4, r3
 801128a:	bf2c      	ite	cs
 801128c:	1ae4      	subcs	r4, r4, r3
 801128e:	1b1c      	subcc	r4, r3, r4
 8011290:	4354      	muls	r4, r2
 8011292:	4b0c      	ldr	r3, [pc, #48]	; (80112c4 <gettimeofday+0x4c>)
 8011294:	4605      	mov	r5, r0
 8011296:	e9d3 2100 	ldrd	r2, r1, [r3]
 801129a:	18a4      	adds	r4, r4, r2
 801129c:	f141 0100 	adc.w	r1, r1, #0
 80112a0:	e9c3 4100 	strd	r4, r1, [r3]
 80112a4:	4620      	mov	r0, r4
 80112a6:	2300      	movs	r3, #0
 80112a8:	4a07      	ldr	r2, [pc, #28]	; (80112c8 <gettimeofday+0x50>)
 80112aa:	f7f6 fe15 	bl	8007ed8 <__aeabi_uldivmod>
 80112ae:	4b06      	ldr	r3, [pc, #24]	; (80112c8 <gettimeofday+0x50>)
 80112b0:	6028      	str	r0, [r5, #0]
 80112b2:	fb03 4410 	mls	r4, r3, r0, r4
 80112b6:	2000      	movs	r0, #0
 80112b8:	606c      	str	r4, [r5, #4]
 80112ba:	bd38      	pop	{r3, r4, r5, pc}
 80112bc:	20009cec 	andcs	r9, r0, ip, ror #25
 80112c0:	20009ce8 	andcs	r9, r0, r8, ror #25
 80112c4:	20009ce0 	andcs	r9, r0, r0, ror #25
 80112c8:	000f4240 	andeq	r4, pc, r0, asr #4

080112cc <settimeofday>:
 80112cc:	4b07      	ldr	r3, [pc, #28]	; (80112ec <settimeofday+0x20>)
 80112ce:	b510      	push	{r4, lr}
 80112d0:	681a      	ldr	r2, [r3, #0]
 80112d2:	4b07      	ldr	r3, [pc, #28]	; (80112f0 <settimeofday+0x24>)
 80112d4:	6804      	ldr	r4, [r0, #0]
 80112d6:	601a      	str	r2, [r3, #0]
 80112d8:	6843      	ldr	r3, [r0, #4]
 80112da:	4806      	ldr	r0, [pc, #24]	; (80112f4 <settimeofday+0x28>)
 80112dc:	17da      	asrs	r2, r3, #31
 80112de:	fbc4 3200 	smlal	r3, r2, r4, r0
 80112e2:	4905      	ldr	r1, [pc, #20]	; (80112f8 <settimeofday+0x2c>)
 80112e4:	2000      	movs	r0, #0
 80112e6:	e9c1 3200 	strd	r3, r2, [r1]
 80112ea:	bd10      	pop	{r4, pc}
 80112ec:	20009cec 	andcs	r9, r0, ip, ror #25
 80112f0:	20009ce8 	andcs	r9, r0, r8, ror #25
 80112f4:	000f4240 	andeq	r4, pc, r0, asr #4
 80112f8:	20009ce0 	andcs	r9, r0, r0, ror #25

080112fc <time>:
 80112fc:	b513      	push	{r0, r1, r4, lr}
 80112fe:	4604      	mov	r4, r0
 8011300:	2100      	movs	r1, #0
 8011302:	4668      	mov	r0, sp
 8011304:	f7ff ffb8 	bl	8011278 <gettimeofday>
 8011308:	9800      	ldr	r0, [sp, #0]
 801130a:	b104      	cbz	r4, 801130e <time+0x12>
 801130c:	6020      	str	r0, [r4, #0]
 801130e:	b002      	add	sp, #8
 8011310:	bd10      	pop	{r4, pc}
	...

08011314 <uart0_init>:
 8011314:	2301      	movs	r3, #1
 8011316:	b507      	push	{r0, r1, r2, lr}
 8011318:	2208      	movs	r2, #8
 801131a:	9300      	str	r3, [sp, #0]
 801131c:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8011320:	2300      	movs	r3, #0
 8011322:	4803      	ldr	r0, [pc, #12]	; (8011330 <uart0_init+0x1c>)
 8011324:	f000 ff6a 	bl	80121fc <gd32_uart_begin>
 8011328:	b003      	add	sp, #12
 801132a:	f85d fb04 	ldr.w	pc, [sp], #4
 801132e:	bf00      	nop
 8011330:	40013800 	andmi	r3, r1, r0, lsl #16

08011334 <uart0_putc>:
 8011334:	280a      	cmp	r0, #10
 8011336:	b538      	push	{r3, r4, r5, lr}
 8011338:	4604      	mov	r4, r0
 801133a:	d10a      	bne.n	8011352 <uart0_putc+0x1e>
 801133c:	4d0b      	ldr	r5, [pc, #44]	; (801136c <uart0_putc+0x38>)
 801133e:	2107      	movs	r1, #7
 8011340:	4628      	mov	r0, r5
 8011342:	f000 fcc5 	bl	8011cd0 <usart_flag_get>
 8011346:	2800      	cmp	r0, #0
 8011348:	d0f9      	beq.n	801133e <uart0_putc+0xa>
 801134a:	220d      	movs	r2, #13
 801134c:	4b08      	ldr	r3, [pc, #32]	; (8011370 <uart0_putc+0x3c>)
 801134e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8011352:	4d06      	ldr	r5, [pc, #24]	; (801136c <uart0_putc+0x38>)
 8011354:	2107      	movs	r1, #7
 8011356:	4628      	mov	r0, r5
 8011358:	f000 fcba 	bl	8011cd0 <usart_flag_get>
 801135c:	2800      	cmp	r0, #0
 801135e:	d0f9      	beq.n	8011354 <uart0_putc+0x20>
 8011360:	4b03      	ldr	r3, [pc, #12]	; (8011370 <uart0_putc+0x3c>)
 8011362:	b2e4      	uxtb	r4, r4
 8011364:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8011368:	bd38      	pop	{r3, r4, r5, pc}
 801136a:	bf00      	nop
 801136c:	40013800 	andmi	r3, r1, r0, lsl #16
 8011370:	40013000 	andmi	r3, r1, r0

08011374 <uart0_puts>:
 8011374:	b510      	push	{r4, lr}
 8011376:	1e44      	subs	r4, r0, #1
 8011378:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801137c:	b903      	cbnz	r3, 8011380 <uart0_puts+0xc>
 801137e:	bd10      	pop	{r4, pc}
 8011380:	2b0a      	cmp	r3, #10
 8011382:	d102      	bne.n	801138a <uart0_puts+0x16>
 8011384:	200d      	movs	r0, #13
 8011386:	f7ff ffd5 	bl	8011334 <uart0_putc>
 801138a:	7820      	ldrb	r0, [r4, #0]
 801138c:	f7ff ffd2 	bl	8011334 <uart0_putc>
 8011390:	e7f2      	b.n	8011378 <uart0_puts+0x4>
	...

08011394 <systick_config>:
 8011394:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011398:	4b0b      	ldr	r3, [pc, #44]	; (80113c8 <systick_config+0x34>)
 801139a:	681b      	ldr	r3, [r3, #0]
 801139c:	fbb3 f3f2 	udiv	r3, r3, r2
 80113a0:	3b01      	subs	r3, #1
 80113a2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80113a6:	d20d      	bcs.n	80113c4 <systick_config+0x30>
 80113a8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80113ac:	21f0      	movs	r1, #240	; 0xf0
 80113ae:	6153      	str	r3, [r2, #20]
 80113b0:	4b06      	ldr	r3, [pc, #24]	; (80113cc <systick_config+0x38>)
 80113b2:	2007      	movs	r0, #7
 80113b4:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80113b8:	2100      	movs	r1, #0
 80113ba:	6191      	str	r1, [r2, #24]
 80113bc:	6110      	str	r0, [r2, #16]
 80113be:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80113c2:	4770      	bx	lr
 80113c4:	e7fe      	b.n	80113c4 <systick_config+0x30>
 80113c6:	bf00      	nop
 80113c8:	200000e0 	andcs	r0, r0, r0, ror #1
 80113cc:	e000ed00 	and	lr, r0, r0, lsl #26

080113d0 <SysTick_Handler>:
 80113d0:	4a02      	ldr	r2, [pc, #8]	; (80113dc <SysTick_Handler+0xc>)
 80113d2:	6813      	ldr	r3, [r2, #0]
 80113d4:	3301      	adds	r3, #1
 80113d6:	6013      	str	r3, [r2, #0]
 80113d8:	4770      	bx	lr
 80113da:	bf00      	nop
 80113dc:	20009cec 	andcs	r9, r0, ip, ror #25

080113e0 <SystemInit>:
 80113e0:	4b37      	ldr	r3, [pc, #220]	; (80114c0 <SystemInit+0xe0>)
 80113e2:	4938      	ldr	r1, [pc, #224]	; (80114c4 <SystemInit+0xe4>)
 80113e4:	681a      	ldr	r2, [r3, #0]
 80113e6:	f042 0201 	orr.w	r2, r2, #1
 80113ea:	601a      	str	r2, [r3, #0]
 80113ec:	685a      	ldr	r2, [r3, #4]
 80113ee:	f022 0203 	bic.w	r2, r2, #3
 80113f2:	605a      	str	r2, [r3, #4]
 80113f4:	681a      	ldr	r2, [r3, #0]
 80113f6:	400a      	ands	r2, r1
 80113f8:	601a      	str	r2, [r3, #0]
 80113fa:	6858      	ldr	r0, [r3, #4]
 80113fc:	4a32      	ldr	r2, [pc, #200]	; (80114c8 <SystemInit+0xe8>)
 80113fe:	4002      	ands	r2, r0
 8011400:	605a      	str	r2, [r3, #4]
 8011402:	681a      	ldr	r2, [r3, #0]
 8011404:	400a      	ands	r2, r1
 8011406:	601a      	str	r2, [r3, #0]
 8011408:	681a      	ldr	r2, [r3, #0]
 801140a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 801140e:	601a      	str	r2, [r3, #0]
 8011410:	685a      	ldr	r2, [r3, #4]
 8011412:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8011416:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 801141a:	605a      	str	r2, [r3, #4]
 801141c:	2200      	movs	r2, #0
 801141e:	62da      	str	r2, [r3, #44]	; 0x2c
 8011420:	681a      	ldr	r2, [r3, #0]
 8011422:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 8011426:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 801142a:	601a      	str	r2, [r3, #0]
 801142c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8011430:	609a      	str	r2, [r3, #8]
 8011432:	681a      	ldr	r2, [r3, #0]
 8011434:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8011438:	601a      	str	r2, [r3, #0]
 801143a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801143e:	6819      	ldr	r1, [r3, #0]
 8011440:	0389      	lsls	r1, r1, #14
 8011442:	d401      	bmi.n	8011448 <SystemInit+0x68>
 8011444:	3a01      	subs	r2, #1
 8011446:	d1fa      	bne.n	801143e <SystemInit+0x5e>
 8011448:	681a      	ldr	r2, [r3, #0]
 801144a:	0392      	lsls	r2, r2, #14
 801144c:	d400      	bmi.n	8011450 <SystemInit+0x70>
 801144e:	e7fe      	b.n	801144e <SystemInit+0x6e>
 8011450:	685a      	ldr	r2, [r3, #4]
 8011452:	605a      	str	r2, [r3, #4]
 8011454:	685a      	ldr	r2, [r3, #4]
 8011456:	605a      	str	r2, [r3, #4]
 8011458:	685a      	ldr	r2, [r3, #4]
 801145a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801145e:	605a      	str	r2, [r3, #4]
 8011460:	685a      	ldr	r2, [r3, #4]
 8011462:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8011466:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 801146a:	605a      	str	r2, [r3, #4]
 801146c:	685a      	ldr	r2, [r3, #4]
 801146e:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8011472:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 8011476:	605a      	str	r2, [r3, #4]
 8011478:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801147a:	4a14      	ldr	r2, [pc, #80]	; (80114cc <SystemInit+0xec>)
 801147c:	400a      	ands	r2, r1
 801147e:	62da      	str	r2, [r3, #44]	; 0x2c
 8011480:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011482:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 8011486:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 801148a:	62da      	str	r2, [r3, #44]	; 0x2c
 801148c:	681a      	ldr	r2, [r3, #0]
 801148e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8011492:	601a      	str	r2, [r3, #0]
 8011494:	681a      	ldr	r2, [r3, #0]
 8011496:	0110      	lsls	r0, r2, #4
 8011498:	d5fc      	bpl.n	8011494 <SystemInit+0xb4>
 801149a:	681a      	ldr	r2, [r3, #0]
 801149c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80114a0:	601a      	str	r2, [r3, #0]
 80114a2:	681a      	ldr	r2, [r3, #0]
 80114a4:	0191      	lsls	r1, r2, #6
 80114a6:	d5fc      	bpl.n	80114a2 <SystemInit+0xc2>
 80114a8:	685a      	ldr	r2, [r3, #4]
 80114aa:	f022 0203 	bic.w	r2, r2, #3
 80114ae:	605a      	str	r2, [r3, #4]
 80114b0:	685a      	ldr	r2, [r3, #4]
 80114b2:	f042 0202 	orr.w	r2, r2, #2
 80114b6:	605a      	str	r2, [r3, #4]
 80114b8:	685a      	ldr	r2, [r3, #4]
 80114ba:	0712      	lsls	r2, r2, #28
 80114bc:	d5fc      	bpl.n	80114b8 <SystemInit+0xd8>
 80114be:	4770      	bx	lr
 80114c0:	40021000 	andmi	r1, r2, r0
 80114c4:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 80114c8:	e0ff000c 	rscs	r0, pc, ip
 80114cc:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080114d0 <bkp_data_write>:
 80114d0:	f1a0 030b 	sub.w	r3, r0, #11
 80114d4:	2b1f      	cmp	r3, #31
 80114d6:	d804      	bhi.n	80114e2 <bkp_data_write+0x12>
 80114d8:	4b07      	ldr	r3, [pc, #28]	; (80114f8 <bkp_data_write+0x28>)
 80114da:	4403      	add	r3, r0
 80114dc:	009b      	lsls	r3, r3, #2
 80114de:	8019      	strh	r1, [r3, #0]
 80114e0:	4770      	bx	lr
 80114e2:	1e43      	subs	r3, r0, #1
 80114e4:	2b09      	cmp	r3, #9
 80114e6:	bf9f      	itttt	ls
 80114e8:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80114ec:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80114f0:	0080      	lslls	r0, r0, #2
 80114f2:	8001      	strhls	r1, [r0, #0]
 80114f4:	4770      	bx	lr
 80114f6:	bf00      	nop
 80114f8:	10001b05 	andne	r1, r0, r5, lsl #22

080114fc <bkp_data_read>:
 80114fc:	f1a0 030b 	sub.w	r3, r0, #11
 8011500:	2b1f      	cmp	r3, #31
 8011502:	d805      	bhi.n	8011510 <bkp_data_read+0x14>
 8011504:	4b08      	ldr	r3, [pc, #32]	; (8011528 <bkp_data_read+0x2c>)
 8011506:	4403      	add	r3, r0
 8011508:	009b      	lsls	r3, r3, #2
 801150a:	8818      	ldrh	r0, [r3, #0]
 801150c:	b280      	uxth	r0, r0
 801150e:	4770      	bx	lr
 8011510:	1e43      	subs	r3, r0, #1
 8011512:	2b09      	cmp	r3, #9
 8011514:	d806      	bhi.n	8011524 <bkp_data_read+0x28>
 8011516:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 801151a:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 801151e:	0080      	lsls	r0, r0, #2
 8011520:	8800      	ldrh	r0, [r0, #0]
 8011522:	e7f3      	b.n	801150c <bkp_data_read+0x10>
 8011524:	2000      	movs	r0, #0
 8011526:	4770      	bx	lr
 8011528:	10001b05 	andne	r1, r0, r5, lsl #22

0801152c <fmc_bank0_unlock>:
 801152c:	4b04      	ldr	r3, [pc, #16]	; (8011540 <fmc_bank0_unlock+0x14>)
 801152e:	691a      	ldr	r2, [r3, #16]
 8011530:	0612      	lsls	r2, r2, #24
 8011532:	bf41      	itttt	mi
 8011534:	4a03      	ldrmi	r2, [pc, #12]	; (8011544 <fmc_bank0_unlock+0x18>)
 8011536:	605a      	strmi	r2, [r3, #4]
 8011538:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 801153c:	605a      	strmi	r2, [r3, #4]
 801153e:	4770      	bx	lr
 8011540:	40022000 	andmi	r2, r2, r0
 8011544:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08011548 <fmc_bank1_unlock>:
 8011548:	4b04      	ldr	r3, [pc, #16]	; (801155c <fmc_bank1_unlock+0x14>)
 801154a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801154c:	0612      	lsls	r2, r2, #24
 801154e:	bf41      	itttt	mi
 8011550:	4a03      	ldrmi	r2, [pc, #12]	; (8011560 <fmc_bank1_unlock+0x18>)
 8011552:	645a      	strmi	r2, [r3, #68]	; 0x44
 8011554:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8011558:	645a      	strmi	r2, [r3, #68]	; 0x44
 801155a:	4770      	bx	lr
 801155c:	40022000 	andmi	r2, r2, r0
 8011560:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08011564 <fmc_bank0_lock>:
 8011564:	4a02      	ldr	r2, [pc, #8]	; (8011570 <fmc_bank0_lock+0xc>)
 8011566:	6913      	ldr	r3, [r2, #16]
 8011568:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801156c:	6113      	str	r3, [r2, #16]
 801156e:	4770      	bx	lr
 8011570:	40022000 	andmi	r2, r2, r0

08011574 <fmc_bank1_lock>:
 8011574:	4a02      	ldr	r2, [pc, #8]	; (8011580 <fmc_bank1_lock+0xc>)
 8011576:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8011578:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801157c:	6513      	str	r3, [r2, #80]	; 0x50
 801157e:	4770      	bx	lr
 8011580:	40022000 	andmi	r2, r2, r0

08011584 <fmc_bank0_state_get>:
 8011584:	4b07      	ldr	r3, [pc, #28]	; (80115a4 <fmc_bank0_state_get+0x20>)
 8011586:	68da      	ldr	r2, [r3, #12]
 8011588:	07d1      	lsls	r1, r2, #31
 801158a:	d407      	bmi.n	801159c <fmc_bank0_state_get+0x18>
 801158c:	68da      	ldr	r2, [r3, #12]
 801158e:	06d2      	lsls	r2, r2, #27
 8011590:	d406      	bmi.n	80115a0 <fmc_bank0_state_get+0x1c>
 8011592:	68d8      	ldr	r0, [r3, #12]
 8011594:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8011598:	0040      	lsls	r0, r0, #1
 801159a:	4770      	bx	lr
 801159c:	2001      	movs	r0, #1
 801159e:	4770      	bx	lr
 80115a0:	2003      	movs	r0, #3
 80115a2:	4770      	bx	lr
 80115a4:	40022000 	andmi	r2, r2, r0

080115a8 <fmc_bank1_state_get>:
 80115a8:	4b07      	ldr	r3, [pc, #28]	; (80115c8 <fmc_bank1_state_get+0x20>)
 80115aa:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80115ac:	07d1      	lsls	r1, r2, #31
 80115ae:	d407      	bmi.n	80115c0 <fmc_bank1_state_get+0x18>
 80115b0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80115b2:	06d2      	lsls	r2, r2, #27
 80115b4:	d406      	bmi.n	80115c4 <fmc_bank1_state_get+0x1c>
 80115b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80115b8:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80115bc:	0040      	lsls	r0, r0, #1
 80115be:	4770      	bx	lr
 80115c0:	2001      	movs	r0, #1
 80115c2:	4770      	bx	lr
 80115c4:	2003      	movs	r0, #3
 80115c6:	4770      	bx	lr
 80115c8:	40022000 	andmi	r2, r2, r0

080115cc <fwdgt_enable>:
 80115cc:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 80115d0:	4b01      	ldr	r3, [pc, #4]	; (80115d8 <fwdgt_enable+0xc>)
 80115d2:	601a      	str	r2, [r3, #0]
 80115d4:	4770      	bx	lr
 80115d6:	bf00      	nop
 80115d8:	40003000 	andmi	r3, r0, r0

080115dc <fwdgt_counter_reload>:
 80115dc:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80115e0:	4b01      	ldr	r3, [pc, #4]	; (80115e8 <fwdgt_counter_reload+0xc>)
 80115e2:	601a      	str	r2, [r3, #0]
 80115e4:	4770      	bx	lr
 80115e6:	bf00      	nop
 80115e8:	40003000 	andmi	r3, r0, r0

080115ec <fwdgt_config>:
 80115ec:	f245 5355 	movw	r3, #21845	; 0x5555
 80115f0:	4a11      	ldr	r2, [pc, #68]	; (8011638 <fwdgt_config+0x4c>)
 80115f2:	b510      	push	{r4, lr}
 80115f4:	4c11      	ldr	r4, [pc, #68]	; (801163c <fwdgt_config+0x50>)
 80115f6:	6013      	str	r3, [r2, #0]
 80115f8:	68d3      	ldr	r3, [r2, #12]
 80115fa:	3c01      	subs	r4, #1
 80115fc:	f003 0301 	and.w	r3, r3, #1
 8011600:	d013      	beq.n	801162a <fwdgt_config+0x3e>
 8011602:	2b00      	cmp	r3, #0
 8011604:	d1f8      	bne.n	80115f8 <fwdgt_config+0xc>
 8011606:	6051      	str	r1, [r2, #4]
 8011608:	490c      	ldr	r1, [pc, #48]	; (801163c <fwdgt_config+0x50>)
 801160a:	4a0b      	ldr	r2, [pc, #44]	; (8011638 <fwdgt_config+0x4c>)
 801160c:	68d3      	ldr	r3, [r2, #12]
 801160e:	3901      	subs	r1, #1
 8011610:	f003 0302 	and.w	r3, r3, #2
 8011614:	d00d      	beq.n	8011632 <fwdgt_config+0x46>
 8011616:	2b00      	cmp	r3, #0
 8011618:	d1f8      	bne.n	801160c <fwdgt_config+0x20>
 801161a:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 801161e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8011622:	6090      	str	r0, [r2, #8]
 8011624:	2001      	movs	r0, #1
 8011626:	6013      	str	r3, [r2, #0]
 8011628:	e002      	b.n	8011630 <fwdgt_config+0x44>
 801162a:	2b00      	cmp	r3, #0
 801162c:	d0eb      	beq.n	8011606 <fwdgt_config+0x1a>
 801162e:	2000      	movs	r0, #0
 8011630:	bd10      	pop	{r4, pc}
 8011632:	2b00      	cmp	r3, #0
 8011634:	d1fb      	bne.n	801162e <fwdgt_config+0x42>
 8011636:	e7f0      	b.n	801161a <fwdgt_config+0x2e>
 8011638:	40003000 	andmi	r3, r0, r0
 801163c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08011640 <gpio_init>:
 8011640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011644:	f04f 0c0f 	mov.w	ip, #15
 8011648:	06cf      	lsls	r7, r1, #27
 801164a:	f04f 0400 	mov.w	r4, #0
 801164e:	f04f 0701 	mov.w	r7, #1
 8011652:	f001 050f 	and.w	r5, r1, #15
 8011656:	bf48      	it	mi
 8011658:	4315      	orrmi	r5, r2
 801165a:	fa23 f204 	lsr.w	r2, r3, r4
 801165e:	07d6      	lsls	r6, r2, #31
 8011660:	d510      	bpl.n	8011684 <gpio_init+0x44>
 8011662:	00a2      	lsls	r2, r4, #2
 8011664:	6806      	ldr	r6, [r0, #0]
 8011666:	fa0c fe02 	lsl.w	lr, ip, r2
 801166a:	ea26 060e 	bic.w	r6, r6, lr
 801166e:	fa05 f202 	lsl.w	r2, r5, r2
 8011672:	2928      	cmp	r1, #40	; 0x28
 8011674:	ea42 0206 	orr.w	r2, r2, r6
 8011678:	d128      	bne.n	80116cc <gpio_init+0x8c>
 801167a:	fa07 f604 	lsl.w	r6, r7, r4
 801167e:	401e      	ands	r6, r3
 8011680:	6146      	str	r6, [r0, #20]
 8011682:	6002      	str	r2, [r0, #0]
 8011684:	3401      	adds	r4, #1
 8011686:	2c08      	cmp	r4, #8
 8011688:	d1e7      	bne.n	801165a <gpio_init+0x1a>
 801168a:	2600      	movs	r6, #0
 801168c:	f04f 0c0f 	mov.w	ip, #15
 8011690:	2701      	movs	r7, #1
 8011692:	f106 0208 	add.w	r2, r6, #8
 8011696:	fa23 f402 	lsr.w	r4, r3, r2
 801169a:	07e4      	lsls	r4, r4, #31
 801169c:	d511      	bpl.n	80116c2 <gpio_init+0x82>
 801169e:	00b4      	lsls	r4, r6, #2
 80116a0:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80116a4:	fa0c f804 	lsl.w	r8, ip, r4
 80116a8:	ea2e 0e08 	bic.w	lr, lr, r8
 80116ac:	fa05 f404 	lsl.w	r4, r5, r4
 80116b0:	2928      	cmp	r1, #40	; 0x28
 80116b2:	ea44 040e 	orr.w	r4, r4, lr
 80116b6:	d110      	bne.n	80116da <gpio_init+0x9a>
 80116b8:	fa07 f202 	lsl.w	r2, r7, r2
 80116bc:	401a      	ands	r2, r3
 80116be:	6142      	str	r2, [r0, #20]
 80116c0:	6044      	str	r4, [r0, #4]
 80116c2:	3601      	adds	r6, #1
 80116c4:	2e08      	cmp	r6, #8
 80116c6:	d1e4      	bne.n	8011692 <gpio_init+0x52>
 80116c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116cc:	2948      	cmp	r1, #72	; 0x48
 80116ce:	bf02      	ittt	eq
 80116d0:	fa07 f604 	lsleq.w	r6, r7, r4
 80116d4:	401e      	andeq	r6, r3
 80116d6:	6106      	streq	r6, [r0, #16]
 80116d8:	e7d3      	b.n	8011682 <gpio_init+0x42>
 80116da:	2948      	cmp	r1, #72	; 0x48
 80116dc:	bf02      	ittt	eq
 80116de:	fa07 f202 	lsleq.w	r2, r7, r2
 80116e2:	401a      	andeq	r2, r3
 80116e4:	6102      	streq	r2, [r0, #16]
 80116e6:	e7eb      	b.n	80116c0 <gpio_init+0x80>

080116e8 <gpio_pin_remap_config>:
 80116e8:	2800      	cmp	r0, #0
 80116ea:	4a16      	ldr	r2, [pc, #88]	; (8011744 <gpio_pin_remap_config+0x5c>)
 80116ec:	b530      	push	{r4, r5, lr}
 80116ee:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80116f2:	bfb4      	ite	lt
 80116f4:	69d3      	ldrlt	r3, [r2, #28]
 80116f6:	6853      	ldrge	r3, [r2, #4]
 80116f8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80116fc:	b284      	uxth	r4, r0
 80116fe:	d110      	bne.n	8011722 <gpio_pin_remap_config+0x3a>
 8011700:	6855      	ldr	r5, [r2, #4]
 8011702:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011706:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801170a:	6055      	str	r5, [r2, #4]
 801170c:	b119      	cbz	r1, 8011716 <gpio_pin_remap_config+0x2e>
 801170e:	0d42      	lsrs	r2, r0, #21
 8011710:	0112      	lsls	r2, r2, #4
 8011712:	4094      	lsls	r4, r2
 8011714:	4323      	orrs	r3, r4
 8011716:	4a0b      	ldr	r2, [pc, #44]	; (8011744 <gpio_pin_remap_config+0x5c>)
 8011718:	2800      	cmp	r0, #0
 801171a:	bfb4      	ite	lt
 801171c:	61d3      	strlt	r3, [r2, #28]
 801171e:	6053      	strge	r3, [r2, #4]
 8011720:	bd30      	pop	{r4, r5, pc}
 8011722:	02c2      	lsls	r2, r0, #11
 8011724:	bf4d      	iteet	mi
 8011726:	2203      	movmi	r2, #3
 8011728:	0d42      	lsrpl	r2, r0, #21
 801172a:	0112      	lslpl	r2, r2, #4
 801172c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8011730:	bf4c      	ite	mi
 8011732:	40aa      	lslmi	r2, r5
 8011734:	fa04 f202 	lslpl.w	r2, r4, r2
 8011738:	ea23 0302 	bic.w	r3, r3, r2
 801173c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8011740:	e7e4      	b.n	801170c <gpio_pin_remap_config+0x24>
 8011742:	bf00      	nop
 8011744:	40010000 	andmi	r0, r1, r0

08011748 <gpio_ethernet_phy_select>:
 8011748:	4b04      	ldr	r3, [pc, #16]	; (801175c <gpio_ethernet_phy_select+0x14>)
 801174a:	685a      	ldr	r2, [r3, #4]
 801174c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8011750:	605a      	str	r2, [r3, #4]
 8011752:	685a      	ldr	r2, [r3, #4]
 8011754:	4302      	orrs	r2, r0
 8011756:	605a      	str	r2, [r3, #4]
 8011758:	4770      	bx	lr
 801175a:	bf00      	nop
 801175c:	40010000 	andmi	r0, r1, r0

08011760 <pmu_backup_write_enable>:
 8011760:	4a02      	ldr	r2, [pc, #8]	; (801176c <pmu_backup_write_enable+0xc>)
 8011762:	6813      	ldr	r3, [r2, #0]
 8011764:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011768:	6013      	str	r3, [r2, #0]
 801176a:	4770      	bx	lr
 801176c:	40007000 	andmi	r7, r0, r0

08011770 <rcu_periph_clock_enable>:
 8011770:	2201      	movs	r2, #1
 8011772:	0983      	lsrs	r3, r0, #6
 8011774:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011778:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801177c:	6819      	ldr	r1, [r3, #0]
 801177e:	f000 001f 	and.w	r0, r0, #31
 8011782:	4082      	lsls	r2, r0
 8011784:	430a      	orrs	r2, r1
 8011786:	601a      	str	r2, [r3, #0]
 8011788:	4770      	bx	lr

0801178a <rcu_periph_clock_disable>:
 801178a:	2101      	movs	r1, #1
 801178c:	0983      	lsrs	r3, r0, #6
 801178e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011792:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011796:	681a      	ldr	r2, [r3, #0]
 8011798:	f000 001f 	and.w	r0, r0, #31
 801179c:	4081      	lsls	r1, r0
 801179e:	ea22 0201 	bic.w	r2, r2, r1
 80117a2:	601a      	str	r2, [r3, #0]
 80117a4:	4770      	bx	lr

080117a6 <rcu_periph_reset_enable>:
 80117a6:	f7ff bfe3 	b.w	8011770 <rcu_periph_clock_enable>

080117aa <rcu_periph_reset_disable>:
 80117aa:	f7ff bfee 	b.w	801178a <rcu_periph_clock_disable>
	...

080117b0 <rcu_ckout0_config>:
 80117b0:	4a03      	ldr	r2, [pc, #12]	; (80117c0 <rcu_ckout0_config+0x10>)
 80117b2:	6853      	ldr	r3, [r2, #4]
 80117b4:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80117b8:	4303      	orrs	r3, r0
 80117ba:	6053      	str	r3, [r2, #4]
 80117bc:	4770      	bx	lr
 80117be:	bf00      	nop
 80117c0:	40021000 	andmi	r1, r2, r0

080117c4 <rcu_pll2_config>:
 80117c4:	4b04      	ldr	r3, [pc, #16]	; (80117d8 <rcu_pll2_config+0x14>)
 80117c6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80117c8:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80117cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80117ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80117d0:	4302      	orrs	r2, r0
 80117d2:	62da      	str	r2, [r3, #44]	; 0x2c
 80117d4:	4770      	bx	lr
 80117d6:	bf00      	nop
 80117d8:	40021000 	andmi	r1, r2, r0

080117dc <rcu_adc_clock_config>:
 80117dc:	490c      	ldr	r1, [pc, #48]	; (8011810 <rcu_adc_clock_config+0x34>)
 80117de:	2805      	cmp	r0, #5
 80117e0:	684b      	ldr	r3, [r1, #4]
 80117e2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80117e6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80117ea:	d006      	beq.n	80117fa <rcu_adc_clock_config+0x1e>
 80117ec:	d803      	bhi.n	80117f6 <rcu_adc_clock_config+0x1a>
 80117ee:	2804      	cmp	r0, #4
 80117f0:	d10a      	bne.n	8011808 <rcu_adc_clock_config+0x2c>
 80117f2:	604b      	str	r3, [r1, #4]
 80117f4:	4770      	bx	lr
 80117f6:	2807      	cmp	r0, #7
 80117f8:	d1fb      	bne.n	80117f2 <rcu_adc_clock_config+0x16>
 80117fa:	4a06      	ldr	r2, [pc, #24]	; (8011814 <rcu_adc_clock_config+0x38>)
 80117fc:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8011800:	4313      	orrs	r3, r2
 8011802:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8011806:	e7f4      	b.n	80117f2 <rcu_adc_clock_config+0x16>
 8011808:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801180c:	e7f1      	b.n	80117f2 <rcu_adc_clock_config+0x16>
 801180e:	bf00      	nop
 8011810:	40021000 	andmi	r1, r2, r0
 8011814:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08011818 <rcu_i2s2_clock_config>:
 8011818:	4a03      	ldr	r2, [pc, #12]	; (8011828 <rcu_i2s2_clock_config+0x10>)
 801181a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 801181c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8011820:	4303      	orrs	r3, r0
 8011822:	62d3      	str	r3, [r2, #44]	; 0x2c
 8011824:	4770      	bx	lr
 8011826:	bf00      	nop
 8011828:	40021000 	andmi	r1, r2, r0

0801182c <rcu_flag_get>:
 801182c:	0983      	lsrs	r3, r0, #6
 801182e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011832:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011836:	681a      	ldr	r2, [r3, #0]
 8011838:	2301      	movs	r3, #1
 801183a:	f000 001f 	and.w	r0, r0, #31
 801183e:	4083      	lsls	r3, r0
 8011840:	4213      	tst	r3, r2
 8011842:	bf14      	ite	ne
 8011844:	2001      	movne	r0, #1
 8011846:	2000      	moveq	r0, #0
 8011848:	4770      	bx	lr
	...

0801184c <rcu_osci_stab_wait>:
 801184c:	281a      	cmp	r0, #26
 801184e:	b508      	push	{r3, lr}
 8011850:	d051      	beq.n	80118f6 <rcu_osci_stab_wait+0xaa>
 8011852:	d806      	bhi.n	8011862 <rcu_osci_stab_wait+0x16>
 8011854:	2810      	cmp	r0, #16
 8011856:	d015      	beq.n	8011884 <rcu_osci_stab_wait+0x38>
 8011858:	2818      	cmp	r0, #24
 801185a:	d043      	beq.n	80118e4 <rcu_osci_stab_wait+0x98>
 801185c:	b368      	cbz	r0, 80118ba <rcu_osci_stab_wait+0x6e>
 801185e:	2000      	movs	r0, #0
 8011860:	bd08      	pop	{r3, pc}
 8011862:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8011866:	d01c      	beq.n	80118a2 <rcu_osci_stab_wait+0x56>
 8011868:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 801186c:	d02f      	beq.n	80118ce <rcu_osci_stab_wait+0x82>
 801186e:	281c      	cmp	r0, #28
 8011870:	d1f5      	bne.n	801185e <rcu_osci_stab_wait+0x12>
 8011872:	4925      	ldr	r1, [pc, #148]	; (8011908 <rcu_osci_stab_wait+0xbc>)
 8011874:	201d      	movs	r0, #29
 8011876:	f7ff ffd9 	bl	801182c <rcu_flag_get>
 801187a:	b908      	cbnz	r0, 8011880 <rcu_osci_stab_wait+0x34>
 801187c:	3901      	subs	r1, #1
 801187e:	d1f9      	bne.n	8011874 <rcu_osci_stab_wait+0x28>
 8011880:	201d      	movs	r0, #29
 8011882:	e008      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 8011884:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011888:	2011      	movs	r0, #17
 801188a:	f7ff ffcf 	bl	801182c <rcu_flag_get>
 801188e:	b908      	cbnz	r0, 8011894 <rcu_osci_stab_wait+0x48>
 8011890:	3901      	subs	r1, #1
 8011892:	d1f9      	bne.n	8011888 <rcu_osci_stab_wait+0x3c>
 8011894:	2011      	movs	r0, #17
 8011896:	f7ff ffc9 	bl	801182c <rcu_flag_get>
 801189a:	3800      	subs	r0, #0
 801189c:	bf18      	it	ne
 801189e:	2001      	movne	r0, #1
 80118a0:	e7de      	b.n	8011860 <rcu_osci_stab_wait+0x14>
 80118a2:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 80118a6:	f640 0001 	movw	r0, #2049	; 0x801
 80118aa:	f7ff ffbf 	bl	801182c <rcu_flag_get>
 80118ae:	b908      	cbnz	r0, 80118b4 <rcu_osci_stab_wait+0x68>
 80118b0:	3901      	subs	r1, #1
 80118b2:	d1f8      	bne.n	80118a6 <rcu_osci_stab_wait+0x5a>
 80118b4:	f640 0001 	movw	r0, #2049	; 0x801
 80118b8:	e7ed      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 80118ba:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80118be:	2001      	movs	r0, #1
 80118c0:	f7ff ffb4 	bl	801182c <rcu_flag_get>
 80118c4:	b908      	cbnz	r0, 80118ca <rcu_osci_stab_wait+0x7e>
 80118c6:	3901      	subs	r1, #1
 80118c8:	d1f9      	bne.n	80118be <rcu_osci_stab_wait+0x72>
 80118ca:	2001      	movs	r0, #1
 80118cc:	e7e3      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 80118ce:	490e      	ldr	r1, [pc, #56]	; (8011908 <rcu_osci_stab_wait+0xbc>)
 80118d0:	f640 1001 	movw	r0, #2305	; 0x901
 80118d4:	f7ff ffaa 	bl	801182c <rcu_flag_get>
 80118d8:	b908      	cbnz	r0, 80118de <rcu_osci_stab_wait+0x92>
 80118da:	3901      	subs	r1, #1
 80118dc:	d1f8      	bne.n	80118d0 <rcu_osci_stab_wait+0x84>
 80118de:	f640 1001 	movw	r0, #2305	; 0x901
 80118e2:	e7d8      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 80118e4:	4908      	ldr	r1, [pc, #32]	; (8011908 <rcu_osci_stab_wait+0xbc>)
 80118e6:	2019      	movs	r0, #25
 80118e8:	f7ff ffa0 	bl	801182c <rcu_flag_get>
 80118ec:	b908      	cbnz	r0, 80118f2 <rcu_osci_stab_wait+0xa6>
 80118ee:	3901      	subs	r1, #1
 80118f0:	d1f9      	bne.n	80118e6 <rcu_osci_stab_wait+0x9a>
 80118f2:	2019      	movs	r0, #25
 80118f4:	e7cf      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 80118f6:	4904      	ldr	r1, [pc, #16]	; (8011908 <rcu_osci_stab_wait+0xbc>)
 80118f8:	201b      	movs	r0, #27
 80118fa:	f7ff ff97 	bl	801182c <rcu_flag_get>
 80118fe:	b908      	cbnz	r0, 8011904 <rcu_osci_stab_wait+0xb8>
 8011900:	3901      	subs	r1, #1
 8011902:	d1f9      	bne.n	80118f8 <rcu_osci_stab_wait+0xac>
 8011904:	201b      	movs	r0, #27
 8011906:	e7c6      	b.n	8011896 <rcu_osci_stab_wait+0x4a>
 8011908:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801190c <rcu_osci_on>:
 801190c:	f7ff bf30 	b.w	8011770 <rcu_periph_clock_enable>

08011910 <rcu_clock_freq_get>:
 8011910:	4b3e      	ldr	r3, [pc, #248]	; (8011a0c <rcu_clock_freq_get+0xfc>)
 8011912:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011914:	4604      	mov	r4, r0
 8011916:	461f      	mov	r7, r3
 8011918:	b089      	sub	sp, #36	; 0x24
 801191a:	ad04      	add	r5, sp, #16
 801191c:	f103 0610 	add.w	r6, r3, #16
 8011920:	462a      	mov	r2, r5
 8011922:	6818      	ldr	r0, [r3, #0]
 8011924:	6859      	ldr	r1, [r3, #4]
 8011926:	3308      	adds	r3, #8
 8011928:	c203      	stmia	r2!, {r0, r1}
 801192a:	42b3      	cmp	r3, r6
 801192c:	4615      	mov	r5, r2
 801192e:	d1f7      	bne.n	8011920 <rcu_clock_freq_get+0x10>
 8011930:	466b      	mov	r3, sp
 8011932:	6938      	ldr	r0, [r7, #16]
 8011934:	6871      	ldr	r1, [r6, #4]
 8011936:	4a36      	ldr	r2, [pc, #216]	; (8011a10 <rcu_clock_freq_get+0x100>)
 8011938:	c303      	stmia	r3!, {r0, r1}
 801193a:	c303      	stmia	r3!, {r0, r1}
 801193c:	6853      	ldr	r3, [r2, #4]
 801193e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011942:	2b01      	cmp	r3, #1
 8011944:	d053      	beq.n	80119ee <rcu_clock_freq_get+0xde>
 8011946:	2b02      	cmp	r3, #2
 8011948:	d153      	bne.n	80119f2 <rcu_clock_freq_get+0xe2>
 801194a:	6853      	ldr	r3, [r2, #4]
 801194c:	03dd      	lsls	r5, r3, #15
 801194e:	d523      	bpl.n	8011998 <rcu_clock_freq_get+0x88>
 8011950:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8011952:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8011956:	4b2f      	ldr	r3, [pc, #188]	; (8011a14 <rcu_clock_freq_get+0x104>)
 8011958:	d00e      	beq.n	8011978 <rcu_clock_freq_get+0x68>
 801195a:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801195c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 801195e:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8011962:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8011966:	3101      	adds	r1, #1
 8011968:	280f      	cmp	r0, #15
 801196a:	f100 0502 	add.w	r5, r0, #2
 801196e:	fbb3 f3f1 	udiv	r3, r3, r1
 8011972:	bf08      	it	eq
 8011974:	2514      	moveq	r5, #20
 8011976:	436b      	muls	r3, r5
 8011978:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801197a:	f001 010f 	and.w	r1, r1, #15
 801197e:	3101      	adds	r1, #1
 8011980:	fbb3 f3f1 	udiv	r3, r3, r1
 8011984:	6851      	ldr	r1, [r2, #4]
 8011986:	6850      	ldr	r0, [r2, #4]
 8011988:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801198c:	0080      	lsls	r0, r0, #2
 801198e:	d505      	bpl.n	801199c <rcu_clock_freq_get+0x8c>
 8011990:	f041 0110 	orr.w	r1, r1, #16
 8011994:	1c48      	adds	r0, r1, #1
 8011996:	e007      	b.n	80119a8 <rcu_clock_freq_get+0x98>
 8011998:	4b1f      	ldr	r3, [pc, #124]	; (8011a18 <rcu_clock_freq_get+0x108>)
 801199a:	e7f3      	b.n	8011984 <rcu_clock_freq_get+0x74>
 801199c:	290f      	cmp	r1, #15
 801199e:	d0f9      	beq.n	8011994 <rcu_clock_freq_get+0x84>
 80119a0:	290d      	cmp	r1, #13
 80119a2:	f101 0002 	add.w	r0, r1, #2
 80119a6:	d01d      	beq.n	80119e4 <rcu_clock_freq_get+0xd4>
 80119a8:	4358      	muls	r0, r3
 80119aa:	6853      	ldr	r3, [r2, #4]
 80119ac:	6851      	ldr	r1, [r2, #4]
 80119ae:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80119b2:	6852      	ldr	r2, [r2, #4]
 80119b4:	3320      	adds	r3, #32
 80119b6:	446b      	add	r3, sp
 80119b8:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80119bc:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80119c0:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80119c4:	3120      	adds	r1, #32
 80119c6:	3220      	adds	r2, #32
 80119c8:	4469      	add	r1, sp
 80119ca:	446a      	add	r2, sp
 80119cc:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80119d0:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80119d4:	fa20 f303 	lsr.w	r3, r0, r3
 80119d8:	2c03      	cmp	r4, #3
 80119da:	d815      	bhi.n	8011a08 <rcu_clock_freq_get+0xf8>
 80119dc:	e8df f004 	tbb	[pc, r4]
 80119e0:	110e0b0c 	tstne	lr, ip, lsl #22
 80119e4:	2006      	movs	r0, #6
 80119e6:	0859      	lsrs	r1, r3, #1
 80119e8:	fb00 1003 	mla	r0, r0, r3, r1
 80119ec:	e7dd      	b.n	80119aa <rcu_clock_freq_get+0x9a>
 80119ee:	4809      	ldr	r0, [pc, #36]	; (8011a14 <rcu_clock_freq_get+0x104>)
 80119f0:	e7db      	b.n	80119aa <rcu_clock_freq_get+0x9a>
 80119f2:	480a      	ldr	r0, [pc, #40]	; (8011a1c <rcu_clock_freq_get+0x10c>)
 80119f4:	e7d9      	b.n	80119aa <rcu_clock_freq_get+0x9a>
 80119f6:	4618      	mov	r0, r3
 80119f8:	b009      	add	sp, #36	; 0x24
 80119fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119fc:	fa23 f001 	lsr.w	r0, r3, r1
 8011a00:	e7fa      	b.n	80119f8 <rcu_clock_freq_get+0xe8>
 8011a02:	fa23 f002 	lsr.w	r0, r3, r2
 8011a06:	e7f7      	b.n	80119f8 <rcu_clock_freq_get+0xe8>
 8011a08:	2000      	movs	r0, #0
 8011a0a:	e7f5      	b.n	80119f8 <rcu_clock_freq_get+0xe8>
 8011a0c:	0801325c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip, sp}
 8011a10:	40021000 	andmi	r1, r2, r0
 8011a14:	017d7840 	cmneq	sp, r0, asr #16
 8011a18:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8011a1c:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08011a20 <timer_deinit>:
 8011a20:	b508      	push	{r3, lr}
 8011a22:	4b2d      	ldr	r3, [pc, #180]	; (8011ad8 <timer_deinit+0xb8>)
 8011a24:	4298      	cmp	r0, r3
 8011a26:	d048      	beq.n	8011aba <timer_deinit+0x9a>
 8011a28:	d816      	bhi.n	8011a58 <timer_deinit+0x38>
 8011a2a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011a2e:	4298      	cmp	r0, r3
 8011a30:	d03c      	beq.n	8011aac <timer_deinit+0x8c>
 8011a32:	d807      	bhi.n	8011a44 <timer_deinit+0x24>
 8011a34:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8011a38:	d02a      	beq.n	8011a90 <timer_deinit+0x70>
 8011a3a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8011a3e:	4298      	cmp	r0, r3
 8011a40:	d02d      	beq.n	8011a9e <timer_deinit+0x7e>
 8011a42:	bd08      	pop	{r3, pc}
 8011a44:	4b25      	ldr	r3, [pc, #148]	; (8011adc <timer_deinit+0xbc>)
 8011a46:	4298      	cmp	r0, r3
 8011a48:	d1fb      	bne.n	8011a42 <timer_deinit+0x22>
 8011a4a:	f240 4003 	movw	r0, #1027	; 0x403
 8011a4e:	f7ff feaa 	bl	80117a6 <rcu_periph_reset_enable>
 8011a52:	f240 4003 	movw	r0, #1027	; 0x403
 8011a56:	e017      	b.n	8011a88 <timer_deinit+0x68>
 8011a58:	4b21      	ldr	r3, [pc, #132]	; (8011ae0 <timer_deinit+0xc0>)
 8011a5a:	4298      	cmp	r0, r3
 8011a5c:	d00e      	beq.n	8011a7c <timer_deinit+0x5c>
 8011a5e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8011a62:	4298      	cmp	r0, r3
 8011a64:	d030      	beq.n	8011ac8 <timer_deinit+0xa8>
 8011a66:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8011a6a:	4298      	cmp	r0, r3
 8011a6c:	d1e9      	bne.n	8011a42 <timer_deinit+0x22>
 8011a6e:	f240 4005 	movw	r0, #1029	; 0x405
 8011a72:	f7ff fe98 	bl	80117a6 <rcu_periph_reset_enable>
 8011a76:	f240 4005 	movw	r0, #1029	; 0x405
 8011a7a:	e005      	b.n	8011a88 <timer_deinit+0x68>
 8011a7c:	f240 300b 	movw	r0, #779	; 0x30b
 8011a80:	f7ff fe91 	bl	80117a6 <rcu_periph_reset_enable>
 8011a84:	f240 300b 	movw	r0, #779	; 0x30b
 8011a88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a8c:	f7ff be8d 	b.w	80117aa <rcu_periph_reset_disable>
 8011a90:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011a94:	f7ff fe87 	bl	80117a6 <rcu_periph_reset_enable>
 8011a98:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011a9c:	e7f4      	b.n	8011a88 <timer_deinit+0x68>
 8011a9e:	f240 4001 	movw	r0, #1025	; 0x401
 8011aa2:	f7ff fe80 	bl	80117a6 <rcu_periph_reset_enable>
 8011aa6:	f240 4001 	movw	r0, #1025	; 0x401
 8011aaa:	e7ed      	b.n	8011a88 <timer_deinit+0x68>
 8011aac:	f240 4002 	movw	r0, #1026	; 0x402
 8011ab0:	f7ff fe79 	bl	80117a6 <rcu_periph_reset_enable>
 8011ab4:	f240 4002 	movw	r0, #1026	; 0x402
 8011ab8:	e7e6      	b.n	8011a88 <timer_deinit+0x68>
 8011aba:	f240 4004 	movw	r0, #1028	; 0x404
 8011abe:	f7ff fe72 	bl	80117a6 <rcu_periph_reset_enable>
 8011ac2:	f240 4004 	movw	r0, #1028	; 0x404
 8011ac6:	e7df      	b.n	8011a88 <timer_deinit+0x68>
 8011ac8:	f240 300d 	movw	r0, #781	; 0x30d
 8011acc:	f7ff fe6b 	bl	80117a6 <rcu_periph_reset_enable>
 8011ad0:	f240 300d 	movw	r0, #781	; 0x30d
 8011ad4:	e7d8      	b.n	8011a88 <timer_deinit+0x68>
 8011ad6:	bf00      	nop
 8011ad8:	40001000 	andmi	r1, r0, r0
 8011adc:	40000c00 	andmi	r0, r0, r0, lsl #24
 8011ae0:	40012c00 	andmi	r2, r1, r0, lsl #24

08011ae4 <timer_init>:
 8011ae4:	880b      	ldrh	r3, [r1, #0]
 8011ae6:	6283      	str	r3, [r0, #40]	; 0x28
 8011ae8:	4b26      	ldr	r3, [pc, #152]	; (8011b84 <timer_init+0xa0>)
 8011aea:	4298      	cmp	r0, r3
 8011aec:	d018      	beq.n	8011b20 <timer_init+0x3c>
 8011aee:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8011af2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8011af6:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8011afa:	d011      	beq.n	8011b20 <timer_init+0x3c>
 8011afc:	4a22      	ldr	r2, [pc, #136]	; (8011b88 <timer_init+0xa4>)
 8011afe:	4290      	cmp	r0, r2
 8011b00:	d00e      	beq.n	8011b20 <timer_init+0x3c>
 8011b02:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8011b06:	4290      	cmp	r0, r2
 8011b08:	d00a      	beq.n	8011b20 <timer_init+0x3c>
 8011b0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8011b0e:	4293      	cmp	r3, r2
 8011b10:	d006      	beq.n	8011b20 <timer_init+0x3c>
 8011b12:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8011b16:	4293      	cmp	r3, r2
 8011b18:	d002      	beq.n	8011b20 <timer_init+0x3c>
 8011b1a:	4b1c      	ldr	r3, [pc, #112]	; (8011b8c <timer_init+0xa8>)
 8011b1c:	4298      	cmp	r0, r3
 8011b1e:	d10f      	bne.n	8011b40 <timer_init+0x5c>
 8011b20:	6803      	ldr	r3, [r0, #0]
 8011b22:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011b26:	6003      	str	r3, [r0, #0]
 8011b28:	884b      	ldrh	r3, [r1, #2]
 8011b2a:	6802      	ldr	r2, [r0, #0]
 8011b2c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011b30:	4313      	orrs	r3, r2
 8011b32:	6003      	str	r3, [r0, #0]
 8011b34:	888b      	ldrh	r3, [r1, #4]
 8011b36:	6802      	ldr	r2, [r0, #0]
 8011b38:	f003 0310 	and.w	r3, r3, #16
 8011b3c:	4313      	orrs	r3, r2
 8011b3e:	6003      	str	r3, [r0, #0]
 8011b40:	688b      	ldr	r3, [r1, #8]
 8011b42:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011b44:	4b12      	ldr	r3, [pc, #72]	; (8011b90 <timer_init+0xac>)
 8011b46:	4298      	cmp	r0, r3
 8011b48:	d003      	beq.n	8011b52 <timer_init+0x6e>
 8011b4a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011b4e:	4298      	cmp	r0, r3
 8011b50:	d104      	bne.n	8011b5c <timer_init+0x78>
 8011b52:	6943      	ldr	r3, [r0, #20]
 8011b54:	f043 0301 	orr.w	r3, r3, #1
 8011b58:	6143      	str	r3, [r0, #20]
 8011b5a:	4770      	bx	lr
 8011b5c:	6803      	ldr	r3, [r0, #0]
 8011b5e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8011b62:	6003      	str	r3, [r0, #0]
 8011b64:	898b      	ldrh	r3, [r1, #12]
 8011b66:	6802      	ldr	r2, [r0, #0]
 8011b68:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8011b6c:	4313      	orrs	r3, r2
 8011b6e:	6003      	str	r3, [r0, #0]
 8011b70:	4b04      	ldr	r3, [pc, #16]	; (8011b84 <timer_init+0xa0>)
 8011b72:	4298      	cmp	r0, r3
 8011b74:	d002      	beq.n	8011b7c <timer_init+0x98>
 8011b76:	4b04      	ldr	r3, [pc, #16]	; (8011b88 <timer_init+0xa4>)
 8011b78:	4298      	cmp	r0, r3
 8011b7a:	d1ea      	bne.n	8011b52 <timer_init+0x6e>
 8011b7c:	7b8b      	ldrb	r3, [r1, #14]
 8011b7e:	6303      	str	r3, [r0, #48]	; 0x30
 8011b80:	e7e7      	b.n	8011b52 <timer_init+0x6e>
 8011b82:	bf00      	nop
 8011b84:	40012c00 	andmi	r2, r1, r0, lsl #24
 8011b88:	40013400 	andmi	r3, r1, r0, lsl #8
 8011b8c:	40002000 	andmi	r2, r0, r0
 8011b90:	40001000 	andmi	r1, r0, r0

08011b94 <timer_enable>:
 8011b94:	6803      	ldr	r3, [r0, #0]
 8011b96:	f043 0301 	orr.w	r3, r3, #1
 8011b9a:	6003      	str	r3, [r0, #0]
 8011b9c:	4770      	bx	lr
	...

08011ba0 <usart_deinit>:
 8011ba0:	b508      	push	{r3, lr}
 8011ba2:	4b1d      	ldr	r3, [pc, #116]	; (8011c18 <usart_deinit+0x78>)
 8011ba4:	4298      	cmp	r0, r3
 8011ba6:	d028      	beq.n	8011bfa <usart_deinit+0x5a>
 8011ba8:	d808      	bhi.n	8011bbc <usart_deinit+0x1c>
 8011baa:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011bae:	4298      	cmp	r0, r3
 8011bb0:	d015      	beq.n	8011bde <usart_deinit+0x3e>
 8011bb2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011bb6:	4298      	cmp	r0, r3
 8011bb8:	d018      	beq.n	8011bec <usart_deinit+0x4c>
 8011bba:	bd08      	pop	{r3, pc}
 8011bbc:	4b17      	ldr	r3, [pc, #92]	; (8011c1c <usart_deinit+0x7c>)
 8011bbe:	4298      	cmp	r0, r3
 8011bc0:	d022      	beq.n	8011c08 <usart_deinit+0x68>
 8011bc2:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011bc6:	4298      	cmp	r0, r3
 8011bc8:	d1f7      	bne.n	8011bba <usart_deinit+0x1a>
 8011bca:	f240 300e 	movw	r0, #782	; 0x30e
 8011bce:	f7ff fdea 	bl	80117a6 <rcu_periph_reset_enable>
 8011bd2:	f240 300e 	movw	r0, #782	; 0x30e
 8011bd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011bda:	f7ff bde6 	b.w	80117aa <rcu_periph_reset_disable>
 8011bde:	f240 4011 	movw	r0, #1041	; 0x411
 8011be2:	f7ff fde0 	bl	80117a6 <rcu_periph_reset_enable>
 8011be6:	f240 4011 	movw	r0, #1041	; 0x411
 8011bea:	e7f4      	b.n	8011bd6 <usart_deinit+0x36>
 8011bec:	f240 4012 	movw	r0, #1042	; 0x412
 8011bf0:	f7ff fdd9 	bl	80117a6 <rcu_periph_reset_enable>
 8011bf4:	f240 4012 	movw	r0, #1042	; 0x412
 8011bf8:	e7ed      	b.n	8011bd6 <usart_deinit+0x36>
 8011bfa:	f240 4013 	movw	r0, #1043	; 0x413
 8011bfe:	f7ff fdd2 	bl	80117a6 <rcu_periph_reset_enable>
 8011c02:	f240 4013 	movw	r0, #1043	; 0x413
 8011c06:	e7e6      	b.n	8011bd6 <usart_deinit+0x36>
 8011c08:	f240 4014 	movw	r0, #1044	; 0x414
 8011c0c:	f7ff fdcb 	bl	80117a6 <rcu_periph_reset_enable>
 8011c10:	f240 4014 	movw	r0, #1044	; 0x414
 8011c14:	e7df      	b.n	8011bd6 <usart_deinit+0x36>
 8011c16:	bf00      	nop
 8011c18:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011c1c:	40005000 	andmi	r5, r0, r0

08011c20 <usart_baudrate_set>:
 8011c20:	b538      	push	{r3, r4, r5, lr}
 8011c22:	4b11      	ldr	r3, [pc, #68]	; (8011c68 <usart_baudrate_set+0x48>)
 8011c24:	4604      	mov	r4, r0
 8011c26:	4298      	cmp	r0, r3
 8011c28:	460d      	mov	r5, r1
 8011c2a:	d01b      	beq.n	8011c64 <usart_baudrate_set+0x44>
 8011c2c:	d809      	bhi.n	8011c42 <usart_baudrate_set+0x22>
 8011c2e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011c32:	4298      	cmp	r0, r3
 8011c34:	d016      	beq.n	8011c64 <usart_baudrate_set+0x44>
 8011c36:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011c3a:	4298      	cmp	r0, r3
 8011c3c:	d012      	beq.n	8011c64 <usart_baudrate_set+0x44>
 8011c3e:	2000      	movs	r0, #0
 8011c40:	e009      	b.n	8011c56 <usart_baudrate_set+0x36>
 8011c42:	4b0a      	ldr	r3, [pc, #40]	; (8011c6c <usart_baudrate_set+0x4c>)
 8011c44:	4298      	cmp	r0, r3
 8011c46:	d00d      	beq.n	8011c64 <usart_baudrate_set+0x44>
 8011c48:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011c4c:	4298      	cmp	r0, r3
 8011c4e:	d1f6      	bne.n	8011c3e <usart_baudrate_set+0x1e>
 8011c50:	2003      	movs	r0, #3
 8011c52:	f7ff fe5d 	bl	8011910 <rcu_clock_freq_get>
 8011c56:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8011c5a:	fbb1 f1f5 	udiv	r1, r1, r5
 8011c5e:	b289      	uxth	r1, r1
 8011c60:	60a1      	str	r1, [r4, #8]
 8011c62:	bd38      	pop	{r3, r4, r5, pc}
 8011c64:	2002      	movs	r0, #2
 8011c66:	e7f4      	b.n	8011c52 <usart_baudrate_set+0x32>
 8011c68:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011c6c:	40005000 	andmi	r5, r0, r0

08011c70 <usart_parity_config>:
 8011c70:	68c3      	ldr	r3, [r0, #12]
 8011c72:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8011c76:	60c3      	str	r3, [r0, #12]
 8011c78:	68c3      	ldr	r3, [r0, #12]
 8011c7a:	430b      	orrs	r3, r1
 8011c7c:	60c3      	str	r3, [r0, #12]
 8011c7e:	4770      	bx	lr

08011c80 <usart_word_length_set>:
 8011c80:	68c3      	ldr	r3, [r0, #12]
 8011c82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8011c86:	60c3      	str	r3, [r0, #12]
 8011c88:	68c3      	ldr	r3, [r0, #12]
 8011c8a:	430b      	orrs	r3, r1
 8011c8c:	60c3      	str	r3, [r0, #12]
 8011c8e:	4770      	bx	lr

08011c90 <usart_stop_bit_set>:
 8011c90:	6903      	ldr	r3, [r0, #16]
 8011c92:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8011c96:	6103      	str	r3, [r0, #16]
 8011c98:	6903      	ldr	r3, [r0, #16]
 8011c9a:	430b      	orrs	r3, r1
 8011c9c:	6103      	str	r3, [r0, #16]
 8011c9e:	4770      	bx	lr

08011ca0 <usart_transmit_config>:
 8011ca0:	68c3      	ldr	r3, [r0, #12]
 8011ca2:	f023 0308 	bic.w	r3, r3, #8
 8011ca6:	430b      	orrs	r3, r1
 8011ca8:	60c3      	str	r3, [r0, #12]
 8011caa:	4770      	bx	lr

08011cac <usart_receive_config>:
 8011cac:	68c3      	ldr	r3, [r0, #12]
 8011cae:	f023 0304 	bic.w	r3, r3, #4
 8011cb2:	430b      	orrs	r3, r1
 8011cb4:	60c3      	str	r3, [r0, #12]
 8011cb6:	4770      	bx	lr

08011cb8 <usart_hardware_flow_rts_config>:
 8011cb8:	6943      	ldr	r3, [r0, #20]
 8011cba:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8011cbe:	430b      	orrs	r3, r1
 8011cc0:	6143      	str	r3, [r0, #20]
 8011cc2:	4770      	bx	lr

08011cc4 <usart_hardware_flow_cts_config>:
 8011cc4:	6943      	ldr	r3, [r0, #20]
 8011cc6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8011cca:	430b      	orrs	r3, r1
 8011ccc:	6143      	str	r3, [r0, #20]
 8011cce:	4770      	bx	lr

08011cd0 <usart_flag_get>:
 8011cd0:	098b      	lsrs	r3, r1, #6
 8011cd2:	581a      	ldr	r2, [r3, r0]
 8011cd4:	2301      	movs	r3, #1
 8011cd6:	f001 011f 	and.w	r1, r1, #31
 8011cda:	408b      	lsls	r3, r1
 8011cdc:	4213      	tst	r3, r2
 8011cde:	bf14      	ite	ne
 8011ce0:	2001      	movne	r0, #1
 8011ce2:	2000      	moveq	r0, #0
 8011ce4:	4770      	bx	lr
	...

08011ce8 <emac_eth_recv>:
 8011ce8:	b538      	push	{r3, r4, r5, lr}
 8011cea:	4605      	mov	r5, r0
 8011cec:	f001 f92a 	bl	8012f44 <enet_rxframe_size_get>
 8011cf0:	4604      	mov	r4, r0
 8011cf2:	b138      	cbz	r0, 8011d04 <emac_eth_recv+0x1c>
 8011cf4:	4b05      	ldr	r3, [pc, #20]	; (8011d0c <emac_eth_recv+0x24>)
 8011cf6:	2105      	movs	r1, #5
 8011cf8:	6818      	ldr	r0, [r3, #0]
 8011cfa:	f001 f8d2 	bl	8012ea2 <enet_desc_information_get>
 8011cfe:	6028      	str	r0, [r5, #0]
 8011d00:	4620      	mov	r0, r4
 8011d02:	bd38      	pop	{r3, r4, r5, pc}
 8011d04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011d08:	e7fb      	b.n	8011d02 <emac_eth_recv+0x1a>
 8011d0a:	bf00      	nop
 8011d0c:	2000fcfc 	strdcs	pc, [r0], -ip

08011d10 <emac_free_pkt>:
 8011d10:	2100      	movs	r1, #0
 8011d12:	4608      	mov	r0, r1
 8011d14:	f000 be02 	b.w	801291c <enet_frame_receive>

08011d18 <emac_eth_send>:
 8011d18:	f000 be40 	b.w	801299c <enet_frame_transmit>

08011d1c <gd32_adc_init()>:
 8011d1c:	b510      	push	{r4, lr}
 8011d1e:	f240 6009 	movw	r0, #1545	; 0x609
 8011d22:	4c21      	ldr	r4, [pc, #132]	; (8011da8 <gd32_adc_init()+0x8c>)
 8011d24:	f7ff fd24 	bl	8011770 <rcu_periph_clock_enable>
 8011d28:	2005      	movs	r0, #5
 8011d2a:	f7ff fd57 	bl	80117dc <rcu_adc_clock_config>
 8011d2e:	4620      	mov	r0, r4
 8011d30:	2201      	movs	r2, #1
 8011d32:	f44f 7180 	mov.w	r1, #256	; 0x100
 8011d36:	f000 fc31 	bl	801259c <adc_special_function_config>
 8011d3a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8011d3e:	4620      	mov	r0, r4
 8011d40:	2102      	movs	r1, #2
 8011d42:	f000 fcca 	bl	80126da <adc_external_trigger_source_config>
 8011d46:	2100      	movs	r1, #0
 8011d48:	4620      	mov	r0, r4
 8011d4a:	f000 fc4f 	bl	80125ec <adc_data_alignment_config>
 8011d4e:	2000      	movs	r0, #0
 8011d50:	f000 fc14 	bl	801257c <adc_mode_config>
 8011d54:	2202      	movs	r2, #2
 8011d56:	4620      	mov	r0, r4
 8011d58:	4611      	mov	r1, r2
 8011d5a:	f000 fc73 	bl	8012644 <adc_channel_length_config>
 8011d5e:	4620      	mov	r0, r4
 8011d60:	2307      	movs	r3, #7
 8011d62:	2210      	movs	r2, #16
 8011d64:	2100      	movs	r1, #0
 8011d66:	f000 fc8a 	bl	801267e <adc_inserted_channel_config>
 8011d6a:	2307      	movs	r3, #7
 8011d6c:	4620      	mov	r0, r4
 8011d6e:	2211      	movs	r2, #17
 8011d70:	2101      	movs	r1, #1
 8011d72:	f000 fc84 	bl	801267e <adc_inserted_channel_config>
 8011d76:	2201      	movs	r2, #1
 8011d78:	2102      	movs	r1, #2
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	f000 fcbe 	bl	80126fc <adc_external_trigger_config>
 8011d80:	f000 fc56 	bl	8012630 <adc_tempsensor_vrefint_enable>
 8011d84:	4620      	mov	r0, r4
 8011d86:	f000 fc3a 	bl	80125fe <adc_enable>
 8011d8a:	2100      	movs	r1, #0
 8011d8c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8011d90:	f000 fb22 	bl	80123d8 <udelay(unsigned int, unsigned int)>
 8011d94:	4620      	mov	r0, r4
 8011d96:	f000 fc3a 	bl	801260e <adc_calibration_enable>
 8011d9a:	4620      	mov	r0, r4
 8011d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011da0:	2102      	movs	r1, #2
 8011da2:	f000 bcc6 	b.w	8012732 <adc_software_trigger_enable>
 8011da6:	bf00      	nop
 8011da8:	40012400 	andmi	r2, r1, r0, lsl #8

08011dac <_stop() [clone .isra.0]>:
 8011dac:	b508      	push	{r3, lr}
 8011dae:	4806      	ldr	r0, [pc, #24]	; (8011dc8 <_stop() [clone .isra.0]+0x1c>)
 8011db0:	f001 f98c 	bl	80130cc <i2c_stop_on_bus>
 8011db4:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011db8:	4904      	ldr	r1, [pc, #16]	; (8011dcc <_stop() [clone .isra.0]+0x20>)
 8011dba:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8011dbe:	0592      	lsls	r2, r2, #22
 8011dc0:	d501      	bpl.n	8011dc6 <_stop() [clone .isra.0]+0x1a>
 8011dc2:	3b01      	subs	r3, #1
 8011dc4:	d1f9      	bne.n	8011dba <_stop() [clone .isra.0]+0xe>
 8011dc6:	bd08      	pop	{r3, pc}
 8011dc8:	40005400 	andmi	r5, r0, r0, lsl #8
 8011dcc:	40005000 	andmi	r5, r0, r0

08011dd0 <gd32_i2c_begin>:
 8011dd0:	b510      	push	{r4, lr}
 8011dd2:	f240 7015 	movw	r0, #1813	; 0x715
 8011dd6:	f7ff fccb 	bl	8011770 <rcu_periph_clock_enable>
 8011dda:	4c15      	ldr	r4, [pc, #84]	; (8011e30 <gd32_i2c_begin+0x60>)
 8011ddc:	f240 6003 	movw	r0, #1539	; 0x603
 8011de0:	f7ff fcc6 	bl	8011770 <rcu_periph_clock_enable>
 8011de4:	f240 6003 	movw	r0, #1539	; 0x603
 8011de8:	f7ff fcc2 	bl	8011770 <rcu_periph_clock_enable>
 8011dec:	4620      	mov	r0, r4
 8011dee:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011df2:	2203      	movs	r2, #3
 8011df4:	211c      	movs	r1, #28
 8011df6:	f7ff fc23 	bl	8011640 <gpio_init>
 8011dfa:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011dfe:	2203      	movs	r2, #3
 8011e00:	4620      	mov	r0, r4
 8011e02:	211c      	movs	r1, #28
 8011e04:	f7ff fc1c 	bl	8011640 <gpio_init>
 8011e08:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8011e0c:	2101      	movs	r1, #1
 8011e0e:	2002      	movs	r0, #2
 8011e10:	f7ff fc6a 	bl	80116e8 <gpio_pin_remap_config>
 8011e14:	4620      	mov	r0, r4
 8011e16:	4907      	ldr	r1, [pc, #28]	; (8011e34 <gd32_i2c_begin+0x64>)
 8011e18:	2200      	movs	r2, #0
 8011e1a:	f001 f8d1 	bl	8012fc0 <i2c_clock_config>
 8011e1e:	4620      	mov	r0, r4
 8011e20:	f001 f94a 	bl	80130b8 <i2c_enable>
 8011e24:	4620      	mov	r0, r4
 8011e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e2a:	2101      	movs	r1, #1
 8011e2c:	f001 b92a 	b.w	8013084 <i2c_ack_config>
 8011e30:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011e34:	00061a80 	andeq	r1, r6, r0, lsl #21

08011e38 <gd32_i2c_set_baudrate>:
 8011e38:	4601      	mov	r1, r0
 8011e3a:	2200      	movs	r2, #0
 8011e3c:	4801      	ldr	r0, [pc, #4]	; (8011e44 <gd32_i2c_set_baudrate+0xc>)
 8011e3e:	f001 b8bf 	b.w	8012fc0 <i2c_clock_config>
 8011e42:	bf00      	nop
 8011e44:	40005400 	andmi	r5, r0, r0, lsl #8

08011e48 <gd32_i2c_set_address>:
 8011e48:	4b01      	ldr	r3, [pc, #4]	; (8011e50 <gd32_i2c_set_address+0x8>)
 8011e4a:	0040      	lsls	r0, r0, #1
 8011e4c:	7018      	strb	r0, [r3, #0]
 8011e4e:	4770      	bx	lr
 8011e50:	20009cf0 	strdcs	r9, [r0], -r0

08011e54 <gd32_i2c_write>:
 8011e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e56:	4604      	mov	r4, r0
 8011e58:	460f      	mov	r7, r1
 8011e5a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e5e:	4e2e      	ldr	r6, [pc, #184]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011e60:	f240 6101 	movw	r1, #1537	; 0x601
 8011e64:	4630      	mov	r0, r6
 8011e66:	f001 f93b 	bl	80130e0 <i2c_flag_get>
 8011e6a:	b9b0      	cbnz	r0, 8011e9a <gd32_i2c_write+0x46>
 8011e6c:	482a      	ldr	r0, [pc, #168]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011e6e:	f001 f928 	bl	80130c2 <i2c_start_on_bus>
 8011e72:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e76:	4e28      	ldr	r6, [pc, #160]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011e78:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8011e7c:	4630      	mov	r0, r6
 8011e7e:	f001 f92f 	bl	80130e0 <i2c_flag_get>
 8011e82:	b190      	cbz	r0, 8011eaa <gd32_i2c_write+0x56>
 8011e84:	4b25      	ldr	r3, [pc, #148]	; (8011f1c <gd32_i2c_write+0xc8>)
 8011e86:	f06f 0201 	mvn.w	r2, #1
 8011e8a:	7819      	ldrb	r1, [r3, #0]
 8011e8c:	4822      	ldr	r0, [pc, #136]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011e8e:	f001 f90b 	bl	80130a8 <i2c_master_addressing>
 8011e92:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e96:	4e20      	ldr	r6, [pc, #128]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011e98:	e00c      	b.n	8011eb4 <gd32_i2c_write+0x60>
 8011e9a:	3d01      	subs	r5, #1
 8011e9c:	d1e0      	bne.n	8011e60 <gd32_i2c_write+0xc>
 8011e9e:	f7ff ff85 	bl	8011dac <_stop() [clone .isra.0]>
 8011ea2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011ea6:	4240      	negs	r0, r0
 8011ea8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011eaa:	3d01      	subs	r5, #1
 8011eac:	d1e4      	bne.n	8011e78 <gd32_i2c_write+0x24>
 8011eae:	e7f6      	b.n	8011e9e <gd32_i2c_write+0x4a>
 8011eb0:	3d01      	subs	r5, #1
 8011eb2:	d0f4      	beq.n	8011e9e <gd32_i2c_write+0x4a>
 8011eb4:	f240 5101 	movw	r1, #1281	; 0x501
 8011eb8:	4630      	mov	r0, r6
 8011eba:	f001 f911 	bl	80130e0 <i2c_flag_get>
 8011ebe:	2800      	cmp	r0, #0
 8011ec0:	d0f6      	beq.n	8011eb0 <gd32_i2c_write+0x5c>
 8011ec2:	f240 5101 	movw	r1, #1281	; 0x501
 8011ec6:	4814      	ldr	r0, [pc, #80]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011ec8:	f001 f915 	bl	80130f6 <i2c_flag_clear>
 8011ecc:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011ed0:	4e11      	ldr	r6, [pc, #68]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011ed2:	f240 5107 	movw	r1, #1287	; 0x507
 8011ed6:	4630      	mov	r0, r6
 8011ed8:	f001 f902 	bl	80130e0 <i2c_flag_get>
 8011edc:	2801      	cmp	r0, #1
 8011ede:	d107      	bne.n	8011ef0 <gd32_i2c_write+0x9c>
 8011ee0:	4e0d      	ldr	r6, [pc, #52]	; (8011f18 <gd32_i2c_write+0xc4>)
 8011ee2:	4427      	add	r7, r4
 8011ee4:	42a7      	cmp	r7, r4
 8011ee6:	d106      	bne.n	8011ef6 <gd32_i2c_write+0xa2>
 8011ee8:	f7ff ff60 	bl	8011dac <_stop() [clone .isra.0]>
 8011eec:	2000      	movs	r0, #0
 8011eee:	e7da      	b.n	8011ea6 <gd32_i2c_write+0x52>
 8011ef0:	3d01      	subs	r5, #1
 8011ef2:	d1ee      	bne.n	8011ed2 <gd32_i2c_write+0x7e>
 8011ef4:	e7d3      	b.n	8011e9e <gd32_i2c_write+0x4a>
 8011ef6:	4630      	mov	r0, r6
 8011ef8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011efc:	f001 f8eb 	bl	80130d6 <i2c_data_transmit>
 8011f00:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011f04:	f240 5102 	movw	r1, #1282	; 0x502
 8011f08:	4630      	mov	r0, r6
 8011f0a:	f001 f8e9 	bl	80130e0 <i2c_flag_get>
 8011f0e:	2800      	cmp	r0, #0
 8011f10:	d1e8      	bne.n	8011ee4 <gd32_i2c_write+0x90>
 8011f12:	3d01      	subs	r5, #1
 8011f14:	d1f6      	bne.n	8011f04 <gd32_i2c_write+0xb0>
 8011f16:	e7c2      	b.n	8011e9e <gd32_i2c_write+0x4a>
 8011f18:	40005400 	andmi	r5, r0, r0, lsl #8
 8011f1c:	20009cf0 	strdcs	r9, [r0], -r0

08011f20 <gd32_i2c_read>:
 8011f20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011f24:	4680      	mov	r8, r0
 8011f26:	460c      	mov	r4, r1
 8011f28:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011f2c:	4f4b      	ldr	r7, [pc, #300]	; (801205c <gd32_i2c_read+0x13c>)
 8011f2e:	f240 6101 	movw	r1, #1537	; 0x601
 8011f32:	4638      	mov	r0, r7
 8011f34:	f001 f8d4 	bl	80130e0 <i2c_flag_get>
 8011f38:	4605      	mov	r5, r0
 8011f3a:	bb08      	cbnz	r0, 8011f80 <gd32_i2c_read+0x60>
 8011f3c:	2c02      	cmp	r4, #2
 8011f3e:	d103      	bne.n	8011f48 <gd32_i2c_read+0x28>
 8011f40:	4601      	mov	r1, r0
 8011f42:	4846      	ldr	r0, [pc, #280]	; (801205c <gd32_i2c_read+0x13c>)
 8011f44:	f001 f8a7 	bl	8013096 <i2c_ackpos_config>
 8011f48:	4844      	ldr	r0, [pc, #272]	; (801205c <gd32_i2c_read+0x13c>)
 8011f4a:	f001 f8ba 	bl	80130c2 <i2c_start_on_bus>
 8011f4e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011f52:	4f42      	ldr	r7, [pc, #264]	; (801205c <gd32_i2c_read+0x13c>)
 8011f54:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8011f58:	4638      	mov	r0, r7
 8011f5a:	f001 f8c1 	bl	80130e0 <i2c_flag_get>
 8011f5e:	b1a8      	cbz	r0, 8011f8c <gd32_i2c_read+0x6c>
 8011f60:	4b3f      	ldr	r3, [pc, #252]	; (8012060 <gd32_i2c_read+0x140>)
 8011f62:	2201      	movs	r2, #1
 8011f64:	7819      	ldrb	r1, [r3, #0]
 8011f66:	483d      	ldr	r0, [pc, #244]	; (801205c <gd32_i2c_read+0x13c>)
 8011f68:	f001 f89e 	bl	80130a8 <i2c_master_addressing>
 8011f6c:	2c02      	cmp	r4, #2
 8011f6e:	d803      	bhi.n	8011f78 <gd32_i2c_read+0x58>
 8011f70:	2100      	movs	r1, #0
 8011f72:	483a      	ldr	r0, [pc, #232]	; (801205c <gd32_i2c_read+0x13c>)
 8011f74:	f001 f886 	bl	8013084 <i2c_ack_config>
 8011f78:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011f7c:	4f37      	ldr	r7, [pc, #220]	; (801205c <gd32_i2c_read+0x13c>)
 8011f7e:	e00a      	b.n	8011f96 <gd32_i2c_read+0x76>
 8011f80:	3e01      	subs	r6, #1
 8011f82:	d1d4      	bne.n	8011f2e <gd32_i2c_read+0xe>
 8011f84:	f7ff ff12 	bl	8011dac <_stop() [clone .isra.0]>
 8011f88:	2504      	movs	r5, #4
 8011f8a:	e04d      	b.n	8012028 <gd32_i2c_read+0x108>
 8011f8c:	3e01      	subs	r6, #1
 8011f8e:	d1e1      	bne.n	8011f54 <gd32_i2c_read+0x34>
 8011f90:	e7f8      	b.n	8011f84 <gd32_i2c_read+0x64>
 8011f92:	3e01      	subs	r6, #1
 8011f94:	d0f6      	beq.n	8011f84 <gd32_i2c_read+0x64>
 8011f96:	f240 5101 	movw	r1, #1281	; 0x501
 8011f9a:	4638      	mov	r0, r7
 8011f9c:	f001 f8a0 	bl	80130e0 <i2c_flag_get>
 8011fa0:	2800      	cmp	r0, #0
 8011fa2:	d0f6      	beq.n	8011f92 <gd32_i2c_read+0x72>
 8011fa4:	f240 5101 	movw	r1, #1281	; 0x501
 8011fa8:	482c      	ldr	r0, [pc, #176]	; (801205c <gd32_i2c_read+0x13c>)
 8011faa:	f001 f8a4 	bl	80130f6 <i2c_flag_clear>
 8011fae:	2c01      	cmp	r4, #1
 8011fb0:	d102      	bne.n	8011fb8 <gd32_i2c_read+0x98>
 8011fb2:	482a      	ldr	r0, [pc, #168]	; (801205c <gd32_i2c_read+0x13c>)
 8011fb4:	f001 f88a 	bl	80130cc <i2c_stop_on_bus>
 8011fb8:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011fbc:	4e27      	ldr	r6, [pc, #156]	; (801205c <gd32_i2c_read+0x13c>)
 8011fbe:	e022      	b.n	8012006 <gd32_i2c_read+0xe6>
 8011fc0:	2c03      	cmp	r4, #3
 8011fc2:	d134      	bne.n	801202e <gd32_i2c_read+0x10e>
 8011fc4:	f640 79ff 	movw	r9, #4095	; 0xfff
 8011fc8:	e002      	b.n	8011fd0 <gd32_i2c_read+0xb0>
 8011fca:	f1b9 0901 	subs.w	r9, r9, #1
 8011fce:	d0d9      	beq.n	8011f84 <gd32_i2c_read+0x64>
 8011fd0:	f240 5102 	movw	r1, #1282	; 0x502
 8011fd4:	4630      	mov	r0, r6
 8011fd6:	f001 f883 	bl	80130e0 <i2c_flag_get>
 8011fda:	2800      	cmp	r0, #0
 8011fdc:	d0f5      	beq.n	8011fca <gd32_i2c_read+0xaa>
 8011fde:	2100      	movs	r1, #0
 8011fe0:	4630      	mov	r0, r6
 8011fe2:	f001 f84f 	bl	8013084 <i2c_ack_config>
 8011fe6:	f240 5106 	movw	r1, #1286	; 0x506
 8011fea:	4630      	mov	r0, r6
 8011fec:	f001 f878 	bl	80130e0 <i2c_flag_get>
 8011ff0:	b138      	cbz	r0, 8012002 <gd32_i2c_read+0xe2>
 8011ff2:	4630      	mov	r0, r6
 8011ff4:	f001 f871 	bl	80130da <i2c_data_receive>
 8011ff8:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011ffc:	f808 0b01 	strb.w	r0, [r8], #1
 8012000:	3c01      	subs	r4, #1
 8012002:	3f01      	subs	r7, #1
 8012004:	d0be      	beq.n	8011f84 <gd32_i2c_read+0x64>
 8012006:	2c00      	cmp	r4, #0
 8012008:	d1da      	bne.n	8011fc0 <gd32_i2c_read+0xa0>
 801200a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801200e:	4915      	ldr	r1, [pc, #84]	; (8012064 <gd32_i2c_read+0x144>)
 8012010:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8012014:	0592      	lsls	r2, r2, #22
 8012016:	d41d      	bmi.n	8012054 <gd32_i2c_read+0x134>
 8012018:	2101      	movs	r1, #1
 801201a:	4810      	ldr	r0, [pc, #64]	; (801205c <gd32_i2c_read+0x13c>)
 801201c:	f001 f832 	bl	8013084 <i2c_ack_config>
 8012020:	2101      	movs	r1, #1
 8012022:	480e      	ldr	r0, [pc, #56]	; (801205c <gd32_i2c_read+0x13c>)
 8012024:	f001 f837 	bl	8013096 <i2c_ackpos_config>
 8012028:	4628      	mov	r0, r5
 801202a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801202e:	2c02      	cmp	r4, #2
 8012030:	d1d9      	bne.n	8011fe6 <gd32_i2c_read+0xc6>
 8012032:	f640 79ff 	movw	r9, #4095	; 0xfff
 8012036:	e002      	b.n	801203e <gd32_i2c_read+0x11e>
 8012038:	f1b9 0901 	subs.w	r9, r9, #1
 801203c:	d0a2      	beq.n	8011f84 <gd32_i2c_read+0x64>
 801203e:	f240 5102 	movw	r1, #1282	; 0x502
 8012042:	4630      	mov	r0, r6
 8012044:	f001 f84c 	bl	80130e0 <i2c_flag_get>
 8012048:	2800      	cmp	r0, #0
 801204a:	d0f5      	beq.n	8012038 <gd32_i2c_read+0x118>
 801204c:	4630      	mov	r0, r6
 801204e:	f001 f83d 	bl	80130cc <i2c_stop_on_bus>
 8012052:	e7c8      	b.n	8011fe6 <gd32_i2c_read+0xc6>
 8012054:	3b01      	subs	r3, #1
 8012056:	d1db      	bne.n	8012010 <gd32_i2c_read+0xf0>
 8012058:	e796      	b.n	8011f88 <gd32_i2c_read+0x68>
 801205a:	bf00      	nop
 801205c:	40005400 	andmi	r5, r0, r0, lsl #8
 8012060:	20009cf0 	strdcs	r9, [r0], -r0
 8012064:	40005000 	andmi	r5, r0, r0

08012068 <gd32_spi_dma_begin()>:
 8012068:	b510      	push	{r4, lr}
 801206a:	f240 6002 	movw	r0, #1538	; 0x602
 801206e:	b088      	sub	sp, #32
 8012070:	f7ff fb7e 	bl	8011770 <rcu_periph_clock_enable>
 8012074:	f240 6003 	movw	r0, #1539	; 0x603
 8012078:	f7ff fb7a 	bl	8011770 <rcu_periph_clock_enable>
 801207c:	f240 700f 	movw	r0, #1807	; 0x70f
 8012080:	f7ff fb76 	bl	8011770 <rcu_periph_clock_enable>
 8012084:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012088:	f7ff fb72 	bl	8011770 <rcu_periph_clock_enable>
 801208c:	2338      	movs	r3, #56	; 0x38
 801208e:	2203      	movs	r2, #3
 8012090:	2118      	movs	r1, #24
 8012092:	4831      	ldr	r0, [pc, #196]	; (8012158 <gd32_spi_dma_begin()+0xf0>)
 8012094:	f7ff fad4 	bl	8011640 <gpio_init>
 8012098:	4c30      	ldr	r4, [pc, #192]	; (801215c <gd32_spi_dma_begin()+0xf4>)
 801209a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801209e:	2203      	movs	r2, #3
 80120a0:	2118      	movs	r1, #24
 80120a2:	482f      	ldr	r0, [pc, #188]	; (8012160 <gd32_spi_dma_begin()+0xf8>)
 80120a4:	f7ff facc 	bl	8011640 <gpio_init>
 80120a8:	2101      	movs	r1, #1
 80120aa:	482e      	ldr	r0, [pc, #184]	; (8012164 <gd32_spi_dma_begin()+0xfc>)
 80120ac:	f7ff fb1c 	bl	80116e8 <gpio_pin_remap_config>
 80120b0:	6823      	ldr	r3, [r4, #0]
 80120b2:	f44f 4060 	mov.w	r0, #57344	; 0xe000
 80120b6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80120ba:	6023      	str	r3, [r4, #0]
 80120bc:	f7ff fb82 	bl	80117c4 <rcu_pll2_config>
 80120c0:	6823      	ldr	r3, [r4, #0]
 80120c2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80120c6:	6023      	str	r3, [r4, #0]
 80120c8:	6823      	ldr	r3, [r4, #0]
 80120ca:	0098      	lsls	r0, r3, #2
 80120cc:	d5fc      	bpl.n	80120c8 <gd32_spi_dma_begin()+0x60>
 80120ce:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80120d2:	f7ff fba1 	bl	8011818 <rcu_i2s2_clock_config>
 80120d6:	4824      	ldr	r0, [pc, #144]	; (8012168 <gd32_spi_dma_begin()+0x100>)
 80120d8:	f001 f88b 	bl	80131f2 <i2s_disable>
 80120dc:	2300      	movs	r3, #0
 80120de:	4923      	ldr	r1, [pc, #140]	; (801216c <gd32_spi_dma_begin()+0x104>)
 80120e0:	461a      	mov	r2, r3
 80120e2:	4821      	ldr	r0, [pc, #132]	; (8012168 <gd32_spi_dma_begin()+0x100>)
 80120e4:	f001 f828 	bl	8013138 <i2s_psc_config>
 80120e8:	2300      	movs	r3, #0
 80120ea:	2210      	movs	r2, #16
 80120ec:	f44f 7100 	mov.w	r1, #512	; 0x200
 80120f0:	481d      	ldr	r0, [pc, #116]	; (8012168 <gd32_spi_dma_begin()+0x100>)
 80120f2:	f001 f812 	bl	801311a <i2s_init>
 80120f6:	481c      	ldr	r0, [pc, #112]	; (8012168 <gd32_spi_dma_begin()+0x100>)
 80120f8:	f001 f876 	bl	80131e8 <i2s_enable>
 80120fc:	f240 5001 	movw	r0, #1281	; 0x501
 8012100:	f7ff fb36 	bl	8011770 <rcu_periph_clock_enable>
 8012104:	2101      	movs	r1, #1
 8012106:	481a      	ldr	r0, [pc, #104]	; (8012170 <gd32_spi_dma_begin()+0x108>)
 8012108:	f000 fb20 	bl	801274c <dma_deinit>
 801210c:	a801      	add	r0, sp, #4
 801210e:	f000 fb39 	bl	8012784 <dma_struct_para_init>
 8012112:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012116:	2401      	movs	r4, #1
 8012118:	9304      	str	r3, [sp, #16]
 801211a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801211e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012122:	4914      	ldr	r1, [pc, #80]	; (8012174 <gd32_spi_dma_begin()+0x10c>)
 8012124:	9206      	str	r2, [sp, #24]
 8012126:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801212a:	aa01      	add	r2, sp, #4
 801212c:	4621      	mov	r1, r4
 801212e:	4810      	ldr	r0, [pc, #64]	; (8012170 <gd32_spi_dma_begin()+0x108>)
 8012130:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012134:	f88d 401e 	strb.w	r4, [sp, #30]
 8012138:	f000 fb2e 	bl	8012798 <dma_init>
 801213c:	4621      	mov	r1, r4
 801213e:	480c      	ldr	r0, [pc, #48]	; (8012170 <gd32_spi_dma_begin()+0x108>)
 8012140:	f000 fb64 	bl	801280c <dma_circulation_disable>
 8012144:	4621      	mov	r1, r4
 8012146:	480a      	ldr	r0, [pc, #40]	; (8012170 <gd32_spi_dma_begin()+0x108>)
 8012148:	f000 fb70 	bl	801282c <dma_memory_to_memory_disable>
 801214c:	2200      	movs	r2, #0
 801214e:	4b0a      	ldr	r3, [pc, #40]	; (8012178 <gd32_spi_dma_begin()+0x110>)
 8012150:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 8012154:	b008      	add	sp, #32
 8012156:	bd10      	pop	{r4, pc}
 8012158:	40010c00 	andmi	r0, r1, r0, lsl #24
 801215c:	40021000 	andmi	r1, r2, r0
 8012160:	40010800 	andmi	r0, r1, r0, lsl #16
 8012164:	00300400 	eorseq	r0, r0, r0, lsl #8
 8012168:	40003c00 	andmi	r3, r0, r0, lsl #24
 801216c:	00030d40 	andeq	r0, r3, r0, asr #26
 8012170:	40020400 	andmi	r0, r2, r0, lsl #8
 8012174:	40003c0c 	andmi	r3, r0, ip, lsl #24
 8012178:	40020000 	andmi	r0, r2, r0

0801217c <gd32_spi_dma_set_speed_hz(unsigned int)>:
 801217c:	b538      	push	{r3, r4, r5, lr}
 801217e:	4c08      	ldr	r4, [pc, #32]	; (80121a0 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 8012180:	4605      	mov	r5, r0
 8012182:	4620      	mov	r0, r4
 8012184:	f001 f835 	bl	80131f2 <i2s_disable>
 8012188:	2300      	movs	r3, #0
 801218a:	4620      	mov	r0, r4
 801218c:	461a      	mov	r2, r3
 801218e:	0969      	lsrs	r1, r5, #5
 8012190:	f000 ffd2 	bl	8013138 <i2s_psc_config>
 8012194:	4620      	mov	r0, r4
 8012196:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801219a:	f001 b825 	b.w	80131e8 <i2s_enable>
 801219e:	bf00      	nop
 80121a0:	40003c00 	andmi	r3, r0, r0, lsl #24

080121a4 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 80121a4:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 80121a8:	6003      	str	r3, [r0, #0]
 80121aa:	4801      	ldr	r0, [pc, #4]	; (80121b0 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 80121ac:	4770      	bx	lr
 80121ae:	bf00      	nop
 80121b0:	20009cf4 	strdcs	r9, [r0], -r4

080121b4 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 80121b4:	4a0a      	ldr	r2, [pc, #40]	; (80121e0 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 80121b6:	3101      	adds	r1, #1
 80121b8:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 80121bc:	f3c1 014f 	ubfx	r1, r1, #1, #16
 80121c0:	f023 0301 	bic.w	r3, r3, #1
 80121c4:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 80121c8:	f043 0301 	orr.w	r3, r3, #1
 80121cc:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 80121d0:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 80121d4:	4803      	ldr	r0, [pc, #12]	; (80121e4 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 80121d6:	2100      	movs	r1, #0
 80121d8:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 80121dc:	f001 b80e 	b.w	80131fc <spi_dma_enable>
 80121e0:	40020000 	andmi	r0, r2, r0
 80121e4:	40003c00 	andmi	r3, r0, r0, lsl #24

080121e8 <gd32_spi_dma_tx_is_active()>:
 80121e8:	4b03      	ldr	r3, [pc, #12]	; (80121f8 <gd32_spi_dma_tx_is_active()+0x10>)
 80121ea:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 80121ee:	3800      	subs	r0, #0
 80121f0:	bf18      	it	ne
 80121f2:	2001      	movne	r0, #1
 80121f4:	4770      	bx	lr
 80121f6:	bf00      	nop
 80121f8:	40020000 	andmi	r0, r2, r0

080121fc <gd32_uart_begin>:
 80121fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121fe:	461e      	mov	r6, r3
 8012200:	4b63      	ldr	r3, [pc, #396]	; (8012390 <gd32_uart_begin+0x194>)
 8012202:	4604      	mov	r4, r0
 8012204:	4298      	cmp	r0, r3
 8012206:	460f      	mov	r7, r1
 8012208:	4615      	mov	r5, r2
 801220a:	d03b      	beq.n	8012284 <gd32_uart_begin+0x88>
 801220c:	d80a      	bhi.n	8012224 <gd32_uart_begin+0x28>
 801220e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012212:	4298      	cmp	r0, r3
 8012214:	d02f      	beq.n	8012276 <gd32_uart_begin+0x7a>
 8012216:	f240 7012 	movw	r0, #1810	; 0x712
 801221a:	f7ff faa9 	bl	8011770 <rcu_periph_clock_enable>
 801221e:	f240 6004 	movw	r0, #1540	; 0x604
 8012222:	e008      	b.n	8012236 <gd32_uart_begin+0x3a>
 8012224:	4b5b      	ldr	r3, [pc, #364]	; (8012394 <gd32_uart_begin+0x198>)
 8012226:	4298      	cmp	r0, r3
 8012228:	d02f      	beq.n	801228a <gd32_uart_begin+0x8e>
 801222a:	f240 600e 	movw	r0, #1550	; 0x60e
 801222e:	f7ff fa9f 	bl	8011770 <rcu_periph_clock_enable>
 8012232:	f240 6003 	movw	r0, #1539	; 0x603
 8012236:	f7ff fa9b 	bl	8011770 <rcu_periph_clock_enable>
 801223a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801223e:	f7ff fa97 	bl	8011770 <rcu_periph_clock_enable>
 8012242:	4b53      	ldr	r3, [pc, #332]	; (8012390 <gd32_uart_begin+0x194>)
 8012244:	429c      	cmp	r4, r3
 8012246:	f000 8084 	beq.w	8012352 <gd32_uart_begin+0x156>
 801224a:	d829      	bhi.n	80122a0 <gd32_uart_begin+0xa4>
 801224c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012250:	429c      	cmp	r4, r3
 8012252:	d071      	beq.n	8012338 <gd32_uart_begin+0x13c>
 8012254:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012258:	2203      	movs	r2, #3
 801225a:	2118      	movs	r1, #24
 801225c:	484e      	ldr	r0, [pc, #312]	; (8012398 <gd32_uart_begin+0x19c>)
 801225e:	f7ff f9ef 	bl	8011640 <gpio_init>
 8012262:	2104      	movs	r1, #4
 8012264:	484c      	ldr	r0, [pc, #304]	; (8012398 <gd32_uart_begin+0x19c>)
 8012266:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801226a:	2203      	movs	r2, #3
 801226c:	f7ff f9e8 	bl	8011640 <gpio_init>
 8012270:	2101      	movs	r1, #1
 8012272:	484a      	ldr	r0, [pc, #296]	; (801239c <gd32_uart_begin+0x1a0>)
 8012274:	e025      	b.n	80122c2 <gd32_uart_begin+0xc6>
 8012276:	f240 7011 	movw	r0, #1809	; 0x711
 801227a:	f7ff fa79 	bl	8011770 <rcu_periph_clock_enable>
 801227e:	f240 6002 	movw	r0, #1538	; 0x602
 8012282:	e7d8      	b.n	8012236 <gd32_uart_begin+0x3a>
 8012284:	f240 7013 	movw	r0, #1811	; 0x713
 8012288:	e7c7      	b.n	801221a <gd32_uart_begin+0x1e>
 801228a:	f240 7014 	movw	r0, #1812	; 0x714
 801228e:	f7ff fa6f 	bl	8011770 <rcu_periph_clock_enable>
 8012292:	f240 6004 	movw	r0, #1540	; 0x604
 8012296:	f7ff fa6b 	bl	8011770 <rcu_periph_clock_enable>
 801229a:	f240 6005 	movw	r0, #1541	; 0x605
 801229e:	e7ca      	b.n	8012236 <gd32_uart_begin+0x3a>
 80122a0:	4b3c      	ldr	r3, [pc, #240]	; (8012394 <gd32_uart_begin+0x198>)
 80122a2:	429c      	cmp	r4, r3
 80122a4:	d062      	beq.n	801236c <gd32_uart_begin+0x170>
 80122a6:	2340      	movs	r3, #64	; 0x40
 80122a8:	2203      	movs	r2, #3
 80122aa:	2118      	movs	r1, #24
 80122ac:	483c      	ldr	r0, [pc, #240]	; (80123a0 <gd32_uart_begin+0x1a4>)
 80122ae:	f7ff f9c7 	bl	8011640 <gpio_init>
 80122b2:	2104      	movs	r1, #4
 80122b4:	483a      	ldr	r0, [pc, #232]	; (80123a0 <gd32_uart_begin+0x1a4>)
 80122b6:	2380      	movs	r3, #128	; 0x80
 80122b8:	2203      	movs	r2, #3
 80122ba:	f7ff f9c1 	bl	8011640 <gpio_init>
 80122be:	2101      	movs	r1, #1
 80122c0:	2004      	movs	r0, #4
 80122c2:	f7ff fa11 	bl	80116e8 <gpio_pin_remap_config>
 80122c6:	4620      	mov	r0, r4
 80122c8:	f7ff fc6a 	bl	8011ba0 <usart_deinit>
 80122cc:	68e3      	ldr	r3, [r4, #12]
 80122ce:	4639      	mov	r1, r7
 80122d0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80122d4:	4620      	mov	r0, r4
 80122d6:	60e3      	str	r3, [r4, #12]
 80122d8:	f7ff fca2 	bl	8011c20 <usart_baudrate_set>
 80122dc:	f1a5 0309 	sub.w	r3, r5, #9
 80122e0:	4259      	negs	r1, r3
 80122e2:	4159      	adcs	r1, r3
 80122e4:	4620      	mov	r0, r4
 80122e6:	0309      	lsls	r1, r1, #12
 80122e8:	f7ff fcca 	bl	8011c80 <usart_word_length_set>
 80122ec:	9906      	ldr	r1, [sp, #24]
 80122ee:	4620      	mov	r0, r4
 80122f0:	1e8a      	subs	r2, r1, #2
 80122f2:	4251      	negs	r1, r2
 80122f4:	4151      	adcs	r1, r2
 80122f6:	0349      	lsls	r1, r1, #13
 80122f8:	f7ff fcca 	bl	8011c90 <usart_stop_bit_set>
 80122fc:	2e01      	cmp	r6, #1
 80122fe:	d041      	beq.n	8012384 <gd32_uart_begin+0x188>
 8012300:	2e02      	cmp	r6, #2
 8012302:	d142      	bne.n	801238a <gd32_uart_begin+0x18e>
 8012304:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012308:	4620      	mov	r0, r4
 801230a:	f7ff fcb1 	bl	8011c70 <usart_parity_config>
 801230e:	2100      	movs	r1, #0
 8012310:	4620      	mov	r0, r4
 8012312:	f7ff fcd1 	bl	8011cb8 <usart_hardware_flow_rts_config>
 8012316:	2100      	movs	r1, #0
 8012318:	4620      	mov	r0, r4
 801231a:	f7ff fcd3 	bl	8011cc4 <usart_hardware_flow_cts_config>
 801231e:	2104      	movs	r1, #4
 8012320:	4620      	mov	r0, r4
 8012322:	f7ff fcc3 	bl	8011cac <usart_receive_config>
 8012326:	2108      	movs	r1, #8
 8012328:	4620      	mov	r0, r4
 801232a:	f7ff fcb9 	bl	8011ca0 <usart_transmit_config>
 801232e:	68e3      	ldr	r3, [r4, #12]
 8012330:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012334:	60e3      	str	r3, [r4, #12]
 8012336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012338:	2304      	movs	r3, #4
 801233a:	2203      	movs	r2, #3
 801233c:	2118      	movs	r1, #24
 801233e:	4819      	ldr	r0, [pc, #100]	; (80123a4 <gd32_uart_begin+0x1a8>)
 8012340:	f7ff f97e 	bl	8011640 <gpio_init>
 8012344:	2308      	movs	r3, #8
 8012346:	2203      	movs	r2, #3
 8012348:	2104      	movs	r1, #4
 801234a:	4816      	ldr	r0, [pc, #88]	; (80123a4 <gd32_uart_begin+0x1a8>)
 801234c:	f7ff f978 	bl	8011640 <gpio_init>
 8012350:	e7b9      	b.n	80122c6 <gd32_uart_begin+0xca>
 8012352:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012356:	2203      	movs	r2, #3
 8012358:	2118      	movs	r1, #24
 801235a:	480f      	ldr	r0, [pc, #60]	; (8012398 <gd32_uart_begin+0x19c>)
 801235c:	f7ff f970 	bl	8011640 <gpio_init>
 8012360:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012364:	2203      	movs	r2, #3
 8012366:	2104      	movs	r1, #4
 8012368:	480b      	ldr	r0, [pc, #44]	; (8012398 <gd32_uart_begin+0x19c>)
 801236a:	e7ef      	b.n	801234c <gd32_uart_begin+0x150>
 801236c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8012370:	2203      	movs	r2, #3
 8012372:	2118      	movs	r1, #24
 8012374:	4808      	ldr	r0, [pc, #32]	; (8012398 <gd32_uart_begin+0x19c>)
 8012376:	f7ff f963 	bl	8011640 <gpio_init>
 801237a:	2304      	movs	r3, #4
 801237c:	2203      	movs	r2, #3
 801237e:	4619      	mov	r1, r3
 8012380:	4809      	ldr	r0, [pc, #36]	; (80123a8 <gd32_uart_begin+0x1ac>)
 8012382:	e7e3      	b.n	801234c <gd32_uart_begin+0x150>
 8012384:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8012388:	e7be      	b.n	8012308 <gd32_uart_begin+0x10c>
 801238a:	2100      	movs	r1, #0
 801238c:	e7bc      	b.n	8012308 <gd32_uart_begin+0x10c>
 801238e:	bf00      	nop
 8012390:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012394:	40005000 	andmi	r5, r0, r0
 8012398:	40011000 	andmi	r1, r1, r0
 801239c:	00140010 	andseq	r0, r4, r0, lsl r0
 80123a0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80123a4:	40010800 	andmi	r0, r1, r0, lsl #16
 80123a8:	40011400 	andmi	r1, r1, r0, lsl #8

080123ac <micros_init()>:
 80123ac:	4770      	bx	lr
	...

080123b0 <udelay_init()>:
 80123b0:	4a07      	ldr	r2, [pc, #28]	; (80123d0 <udelay_init()+0x20>)
 80123b2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80123b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80123ba:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80123be:	2200      	movs	r2, #0
 80123c0:	4b04      	ldr	r3, [pc, #16]	; (80123d4 <udelay_init()+0x24>)
 80123c2:	605a      	str	r2, [r3, #4]
 80123c4:	681a      	ldr	r2, [r3, #0]
 80123c6:	f042 0201 	orr.w	r2, r2, #1
 80123ca:	601a      	str	r2, [r3, #0]
 80123cc:	4770      	bx	lr
 80123ce:	bf00      	nop
 80123d0:	e000ed00 	and	lr, r0, r0, lsl #26
 80123d4:	e0001000 	and	r1, r0, r0

080123d8 <udelay(unsigned int, unsigned int)>:
 80123d8:	236c      	movs	r3, #108	; 0x6c
 80123da:	b530      	push	{r4, r5, lr}
 80123dc:	4358      	muls	r0, r3
 80123de:	b909      	cbnz	r1, 80123e4 <udelay(unsigned int, unsigned int)+0xc>
 80123e0:	4b08      	ldr	r3, [pc, #32]	; (8012404 <udelay(unsigned int, unsigned int)+0x2c>)
 80123e2:	6859      	ldr	r1, [r3, #4]
 80123e4:	2300      	movs	r3, #0
 80123e6:	4c07      	ldr	r4, [pc, #28]	; (8012404 <udelay(unsigned int, unsigned int)+0x2c>)
 80123e8:	6862      	ldr	r2, [r4, #4]
 80123ea:	4291      	cmp	r1, r2
 80123ec:	d0fc      	beq.n	80123e8 <udelay(unsigned int, unsigned int)+0x10>
 80123ee:	bf2a      	itet	cs
 80123f0:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80123f4:	189b      	addcc	r3, r3, r2
 80123f6:	195b      	addcs	r3, r3, r5
 80123f8:	1a5b      	subs	r3, r3, r1
 80123fa:	4283      	cmp	r3, r0
 80123fc:	d300      	bcc.n	8012400 <udelay(unsigned int, unsigned int)+0x28>
 80123fe:	bd30      	pop	{r4, r5, pc}
 8012400:	4611      	mov	r1, r2
 8012402:	e7f1      	b.n	80123e8 <udelay(unsigned int, unsigned int)+0x10>
 8012404:	e0001000 	and	r1, r0, r0

08012408 <emac_start(unsigned char*)>:
 8012408:	b538      	push	{r3, r4, r5, lr}
 801240a:	4605      	mov	r5, r0
 801240c:	f240 6002 	movw	r0, #1538	; 0x602
 8012410:	f7ff f9ae 	bl	8011770 <rcu_periph_clock_enable>
 8012414:	f240 6003 	movw	r0, #1539	; 0x603
 8012418:	f7ff f9aa 	bl	8011770 <rcu_periph_clock_enable>
 801241c:	f240 6004 	movw	r0, #1540	; 0x604
 8012420:	f7ff f9a6 	bl	8011770 <rcu_periph_clock_enable>
 8012424:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012428:	f7ff f9a2 	bl	8011770 <rcu_periph_clock_enable>
 801242c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012430:	2203      	movs	r2, #3
 8012432:	2118      	movs	r1, #24
 8012434:	4843      	ldr	r0, [pc, #268]	; (8012544 <emac_start(unsigned char*)+0x13c>)
 8012436:	f7ff f903 	bl	8011640 <gpio_init>
 801243a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 801243e:	f7ff f9c1 	bl	80117c4 <rcu_pll2_config>
 8012442:	201c      	movs	r0, #28
 8012444:	f7ff fa62 	bl	801190c <rcu_osci_on>
 8012448:	201c      	movs	r0, #28
 801244a:	f7ff f9ff 	bl	801184c <rcu_osci_stab_wait>
 801244e:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8012452:	f7ff f9ad 	bl	80117b0 <rcu_ckout0_config>
 8012456:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801245a:	f7ff f975 	bl	8011748 <gpio_ethernet_phy_select>
 801245e:	2302      	movs	r3, #2
 8012460:	2203      	movs	r2, #3
 8012462:	2104      	movs	r1, #4
 8012464:	4837      	ldr	r0, [pc, #220]	; (8012544 <emac_start(unsigned char*)+0x13c>)
 8012466:	f7ff f8eb 	bl	8011640 <gpio_init>
 801246a:	2304      	movs	r3, #4
 801246c:	2203      	movs	r2, #3
 801246e:	2118      	movs	r1, #24
 8012470:	4834      	ldr	r0, [pc, #208]	; (8012544 <emac_start(unsigned char*)+0x13c>)
 8012472:	f7ff f8e5 	bl	8011640 <gpio_init>
 8012476:	2380      	movs	r3, #128	; 0x80
 8012478:	2203      	movs	r2, #3
 801247a:	2104      	movs	r1, #4
 801247c:	4831      	ldr	r0, [pc, #196]	; (8012544 <emac_start(unsigned char*)+0x13c>)
 801247e:	f7ff f8df 	bl	8011640 <gpio_init>
 8012482:	2302      	movs	r3, #2
 8012484:	2203      	movs	r2, #3
 8012486:	2118      	movs	r1, #24
 8012488:	482f      	ldr	r0, [pc, #188]	; (8012548 <emac_start(unsigned char*)+0x140>)
 801248a:	f7ff f8d9 	bl	8011640 <gpio_init>
 801248e:	2310      	movs	r3, #16
 8012490:	2203      	movs	r2, #3
 8012492:	2104      	movs	r1, #4
 8012494:	482c      	ldr	r0, [pc, #176]	; (8012548 <emac_start(unsigned char*)+0x140>)
 8012496:	f7ff f8d3 	bl	8011640 <gpio_init>
 801249a:	2320      	movs	r3, #32
 801249c:	2203      	movs	r2, #3
 801249e:	2104      	movs	r1, #4
 80124a0:	4829      	ldr	r0, [pc, #164]	; (8012548 <emac_start(unsigned char*)+0x140>)
 80124a2:	f7ff f8cd 	bl	8011640 <gpio_init>
 80124a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80124aa:	2203      	movs	r2, #3
 80124ac:	2118      	movs	r1, #24
 80124ae:	4827      	ldr	r0, [pc, #156]	; (801254c <emac_start(unsigned char*)+0x144>)
 80124b0:	f7ff f8c6 	bl	8011640 <gpio_init>
 80124b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80124b8:	2203      	movs	r2, #3
 80124ba:	2118      	movs	r1, #24
 80124bc:	4823      	ldr	r0, [pc, #140]	; (801254c <emac_start(unsigned char*)+0x144>)
 80124be:	f7ff f8bf 	bl	8011640 <gpio_init>
 80124c2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80124c6:	2203      	movs	r2, #3
 80124c8:	2118      	movs	r1, #24
 80124ca:	4820      	ldr	r0, [pc, #128]	; (801254c <emac_start(unsigned char*)+0x144>)
 80124cc:	f7ff f8b8 	bl	8011640 <gpio_init>
 80124d0:	f240 500e 	movw	r0, #1294	; 0x50e
 80124d4:	f7ff f94c 	bl	8011770 <rcu_periph_clock_enable>
 80124d8:	f240 500f 	movw	r0, #1295	; 0x50f
 80124dc:	f7ff f948 	bl	8011770 <rcu_periph_clock_enable>
 80124e0:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80124e4:	f7ff f944 	bl	8011770 <rcu_periph_clock_enable>
 80124e8:	f000 fd5c 	bl	8012fa4 <enet_deinit>
 80124ec:	f000 f9ba 	bl	8012864 <enet_software_reset>
 80124f0:	4604      	mov	r4, r0
 80124f2:	b138      	cbz	r0, 8012504 <emac_start(unsigned char*)+0xfc>
 80124f4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80124f8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80124fc:	2001      	movs	r0, #1
 80124fe:	f000 fb35 	bl	8012b6c <enet_init>
 8012502:	4604      	mov	r4, r0
 8012504:	4628      	mov	r0, r5
 8012506:	f000 fe83 	bl	8013210 <mac_address_get(unsigned char*)>
 801250a:	4629      	mov	r1, r5
 801250c:	2000      	movs	r0, #0
 801250e:	f000 fa8d 	bl	8012a2c <enet_mac_address_set>
 8012512:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8012516:	f000 f9b9 	bl	801288c <enet_descriptors_chain_init>
 801251a:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 801251e:	f000 f9b5 	bl	801288c <enet_descriptors_chain_init>
 8012522:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012526:	480a      	ldr	r0, [pc, #40]	; (8012550 <emac_start(unsigned char*)+0x148>)
 8012528:	f000 fa7a 	bl	8012a20 <enet_transmit_checksum_config>
 801252c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012530:	4808      	ldr	r0, [pc, #32]	; (8012554 <emac_start(unsigned char*)+0x14c>)
 8012532:	f000 fa75 	bl	8012a20 <enet_transmit_checksum_config>
 8012536:	f000 fcad 	bl	8012e94 <enet_enable>
 801253a:	fab4 f084 	clz	r0, r4
 801253e:	0940      	lsrs	r0, r0, #5
 8012540:	4240      	negs	r0, r0
 8012542:	bd38      	pop	{r3, r4, r5, pc}
 8012544:	40010800 	andmi	r0, r1, r0, lsl #16
 8012548:	40011000 	andmi	r1, r1, r0
 801254c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012550:	20013948 	andcs	r3, r1, r8, asr #18
 8012554:	20013958 	andcs	r3, r1, r8, asr r9

08012558 <net::link_register_read()>:
 8012558:	b507      	push	{r0, r1, r2, lr}
 801255a:	2201      	movs	r2, #1
 801255c:	f10d 0306 	add.w	r3, sp, #6
 8012560:	4611      	mov	r1, r2
 8012562:	2000      	movs	r0, #0
 8012564:	f000 fa7a 	bl	8012a5c <enet_phy_write_read>
 8012568:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801256c:	f080 0004 	eor.w	r0, r0, #4
 8012570:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012574:	b003      	add	sp, #12
 8012576:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801257c <adc_mode_config>:
 801257c:	4b06      	ldr	r3, [pc, #24]	; (8012598 <adc_mode_config+0x1c>)
 801257e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8012582:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8012586:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801258a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801258e:	4302      	orrs	r2, r0
 8012590:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8012594:	4770      	bx	lr
 8012596:	bf00      	nop
 8012598:	40012000 	andmi	r2, r1, r0

0801259c <adc_special_function_config>:
 801259c:	b510      	push	{r4, lr}
 801259e:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80125a2:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80125a6:	f001 0102 	and.w	r1, r1, #2
 80125aa:	b17a      	cbz	r2, 80125cc <adc_special_function_config+0x30>
 80125ac:	b11b      	cbz	r3, 80125b6 <adc_special_function_config+0x1a>
 80125ae:	6843      	ldr	r3, [r0, #4]
 80125b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80125b4:	6043      	str	r3, [r0, #4]
 80125b6:	b11c      	cbz	r4, 80125c0 <adc_special_function_config+0x24>
 80125b8:	6843      	ldr	r3, [r0, #4]
 80125ba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80125be:	6043      	str	r3, [r0, #4]
 80125c0:	b119      	cbz	r1, 80125ca <adc_special_function_config+0x2e>
 80125c2:	6883      	ldr	r3, [r0, #8]
 80125c4:	f043 0302 	orr.w	r3, r3, #2
 80125c8:	6083      	str	r3, [r0, #8]
 80125ca:	bd10      	pop	{r4, pc}
 80125cc:	b11b      	cbz	r3, 80125d6 <adc_special_function_config+0x3a>
 80125ce:	6843      	ldr	r3, [r0, #4]
 80125d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80125d4:	6043      	str	r3, [r0, #4]
 80125d6:	b11c      	cbz	r4, 80125e0 <adc_special_function_config+0x44>
 80125d8:	6843      	ldr	r3, [r0, #4]
 80125da:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80125de:	6043      	str	r3, [r0, #4]
 80125e0:	2900      	cmp	r1, #0
 80125e2:	d0f2      	beq.n	80125ca <adc_special_function_config+0x2e>
 80125e4:	6883      	ldr	r3, [r0, #8]
 80125e6:	f023 0302 	bic.w	r3, r3, #2
 80125ea:	e7ed      	b.n	80125c8 <adc_special_function_config+0x2c>

080125ec <adc_data_alignment_config>:
 80125ec:	6883      	ldr	r3, [r0, #8]
 80125ee:	b119      	cbz	r1, 80125f8 <adc_data_alignment_config+0xc>
 80125f0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80125f4:	6083      	str	r3, [r0, #8]
 80125f6:	4770      	bx	lr
 80125f8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80125fc:	e7fa      	b.n	80125f4 <adc_data_alignment_config+0x8>

080125fe <adc_enable>:
 80125fe:	6883      	ldr	r3, [r0, #8]
 8012600:	07db      	lsls	r3, r3, #31
 8012602:	bf5e      	ittt	pl
 8012604:	6883      	ldrpl	r3, [r0, #8]
 8012606:	f043 0301 	orrpl.w	r3, r3, #1
 801260a:	6083      	strpl	r3, [r0, #8]
 801260c:	4770      	bx	lr

0801260e <adc_calibration_enable>:
 801260e:	6883      	ldr	r3, [r0, #8]
 8012610:	f100 0208 	add.w	r2, r0, #8
 8012614:	f043 0308 	orr.w	r3, r3, #8
 8012618:	6083      	str	r3, [r0, #8]
 801261a:	6813      	ldr	r3, [r2, #0]
 801261c:	0719      	lsls	r1, r3, #28
 801261e:	d4fc      	bmi.n	801261a <adc_calibration_enable+0xc>
 8012620:	6883      	ldr	r3, [r0, #8]
 8012622:	f043 0304 	orr.w	r3, r3, #4
 8012626:	6083      	str	r3, [r0, #8]
 8012628:	6813      	ldr	r3, [r2, #0]
 801262a:	075b      	lsls	r3, r3, #29
 801262c:	d4fc      	bmi.n	8012628 <adc_calibration_enable+0x1a>
 801262e:	4770      	bx	lr

08012630 <adc_tempsensor_vrefint_enable>:
 8012630:	4a03      	ldr	r2, [pc, #12]	; (8012640 <adc_tempsensor_vrefint_enable+0x10>)
 8012632:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8012636:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801263a:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 801263e:	4770      	bx	lr
 8012640:	40012000 	andmi	r2, r1, r0

08012644 <adc_channel_length_config>:
 8012644:	2901      	cmp	r1, #1
 8012646:	d002      	beq.n	801264e <adc_channel_length_config+0xa>
 8012648:	2902      	cmp	r1, #2
 801264a:	d00c      	beq.n	8012666 <adc_channel_length_config+0x22>
 801264c:	4770      	bx	lr
 801264e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012650:	3a01      	subs	r2, #1
 8012652:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8012656:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012658:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801265a:	0512      	lsls	r2, r2, #20
 801265c:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8012660:	431a      	orrs	r2, r3
 8012662:	62c2      	str	r2, [r0, #44]	; 0x2c
 8012664:	4770      	bx	lr
 8012666:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012668:	3a01      	subs	r2, #1
 801266a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801266e:	6383      	str	r3, [r0, #56]	; 0x38
 8012670:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012672:	0512      	lsls	r2, r2, #20
 8012674:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8012678:	431a      	orrs	r2, r3
 801267a:	6382      	str	r2, [r0, #56]	; 0x38
 801267c:	4770      	bx	lr

0801267e <adc_inserted_channel_config>:
 801267e:	b530      	push	{r4, r5, lr}
 8012680:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8012682:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012684:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8012688:	1a61      	subs	r1, r4, r1
 801268a:	f06f 0404 	mvn.w	r4, #4
 801268e:	4361      	muls	r1, r4
 8012690:	241f      	movs	r4, #31
 8012692:	310f      	adds	r1, #15
 8012694:	408c      	lsls	r4, r1
 8012696:	ea25 0504 	bic.w	r5, r5, r4
 801269a:	fa02 f101 	lsl.w	r1, r2, r1
 801269e:	4329      	orrs	r1, r5
 80126a0:	2a09      	cmp	r2, #9
 80126a2:	6381      	str	r1, [r0, #56]	; 0x38
 80126a4:	d80b      	bhi.n	80126be <adc_inserted_channel_config+0x40>
 80126a6:	2407      	movs	r4, #7
 80126a8:	6901      	ldr	r1, [r0, #16]
 80126aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80126ae:	4094      	lsls	r4, r2
 80126b0:	ea21 0104 	bic.w	r1, r1, r4
 80126b4:	fa03 f202 	lsl.w	r2, r3, r2
 80126b8:	430a      	orrs	r2, r1
 80126ba:	6102      	str	r2, [r0, #16]
 80126bc:	bd30      	pop	{r4, r5, pc}
 80126be:	2a11      	cmp	r2, #17
 80126c0:	d8fc      	bhi.n	80126bc <adc_inserted_channel_config+0x3e>
 80126c2:	2407      	movs	r4, #7
 80126c4:	3a0a      	subs	r2, #10
 80126c6:	68c1      	ldr	r1, [r0, #12]
 80126c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80126cc:	4094      	lsls	r4, r2
 80126ce:	ea21 0104 	bic.w	r1, r1, r4
 80126d2:	4093      	lsls	r3, r2
 80126d4:	430b      	orrs	r3, r1
 80126d6:	60c3      	str	r3, [r0, #12]
 80126d8:	e7f0      	b.n	80126bc <adc_inserted_channel_config+0x3e>

080126da <adc_external_trigger_source_config>:
 80126da:	2901      	cmp	r1, #1
 80126dc:	d002      	beq.n	80126e4 <adc_external_trigger_source_config+0xa>
 80126de:	2902      	cmp	r1, #2
 80126e0:	d008      	beq.n	80126f4 <adc_external_trigger_source_config+0x1a>
 80126e2:	4770      	bx	lr
 80126e4:	6883      	ldr	r3, [r0, #8]
 80126e6:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80126ea:	6083      	str	r3, [r0, #8]
 80126ec:	6883      	ldr	r3, [r0, #8]
 80126ee:	4313      	orrs	r3, r2
 80126f0:	6083      	str	r3, [r0, #8]
 80126f2:	4770      	bx	lr
 80126f4:	6883      	ldr	r3, [r0, #8]
 80126f6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80126fa:	e7f6      	b.n	80126ea <adc_external_trigger_source_config+0x10>

080126fc <adc_external_trigger_config>:
 80126fc:	f001 0301 	and.w	r3, r1, #1
 8012700:	f001 0102 	and.w	r1, r1, #2
 8012704:	b152      	cbz	r2, 801271c <adc_external_trigger_config+0x20>
 8012706:	b11b      	cbz	r3, 8012710 <adc_external_trigger_config+0x14>
 8012708:	6883      	ldr	r3, [r0, #8]
 801270a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801270e:	6083      	str	r3, [r0, #8]
 8012710:	b119      	cbz	r1, 801271a <adc_external_trigger_config+0x1e>
 8012712:	6883      	ldr	r3, [r0, #8]
 8012714:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8012718:	6083      	str	r3, [r0, #8]
 801271a:	4770      	bx	lr
 801271c:	b11b      	cbz	r3, 8012726 <adc_external_trigger_config+0x2a>
 801271e:	6883      	ldr	r3, [r0, #8]
 8012720:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8012724:	6083      	str	r3, [r0, #8]
 8012726:	2900      	cmp	r1, #0
 8012728:	d0f7      	beq.n	801271a <adc_external_trigger_config+0x1e>
 801272a:	6883      	ldr	r3, [r0, #8]
 801272c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8012730:	e7f2      	b.n	8012718 <adc_external_trigger_config+0x1c>

08012732 <adc_software_trigger_enable>:
 8012732:	07ca      	lsls	r2, r1, #31
 8012734:	bf42      	ittt	mi
 8012736:	6883      	ldrmi	r3, [r0, #8]
 8012738:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 801273c:	6083      	strmi	r3, [r0, #8]
 801273e:	078b      	lsls	r3, r1, #30
 8012740:	bf42      	ittt	mi
 8012742:	6883      	ldrmi	r3, [r0, #8]
 8012744:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8012748:	6083      	strmi	r3, [r0, #8]
 801274a:	4770      	bx	lr

0801274c <dma_deinit>:
 801274c:	4b0c      	ldr	r3, [pc, #48]	; (8012780 <dma_deinit+0x34>)
 801274e:	4298      	cmp	r0, r3
 8012750:	d102      	bne.n	8012758 <dma_deinit+0xc>
 8012752:	2904      	cmp	r1, #4
 8012754:	d900      	bls.n	8012758 <dma_deinit+0xc>
 8012756:	e7fe      	b.n	8012756 <dma_deinit+0xa>
 8012758:	2314      	movs	r3, #20
 801275a:	fb03 0301 	mla	r3, r3, r1, r0
 801275e:	689a      	ldr	r2, [r3, #8]
 8012760:	0089      	lsls	r1, r1, #2
 8012762:	f022 0201 	bic.w	r2, r2, #1
 8012766:	609a      	str	r2, [r3, #8]
 8012768:	2200      	movs	r2, #0
 801276a:	609a      	str	r2, [r3, #8]
 801276c:	60da      	str	r2, [r3, #12]
 801276e:	611a      	str	r2, [r3, #16]
 8012770:	615a      	str	r2, [r3, #20]
 8012772:	230f      	movs	r3, #15
 8012774:	6842      	ldr	r2, [r0, #4]
 8012776:	408b      	lsls	r3, r1
 8012778:	4313      	orrs	r3, r2
 801277a:	6043      	str	r3, [r0, #4]
 801277c:	4770      	bx	lr
 801277e:	bf00      	nop
 8012780:	40020400 	andmi	r0, r2, r0, lsl #8

08012784 <dma_struct_para_init>:
 8012784:	2300      	movs	r3, #0
 8012786:	e9c0 3300 	strd	r3, r3, [r0]
 801278a:	e9c0 3302 	strd	r3, r3, [r0, #8]
 801278e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012792:	8303      	strh	r3, [r0, #24]
 8012794:	7683      	strb	r3, [r0, #26]
 8012796:	4770      	bx	lr

08012798 <dma_init>:
 8012798:	4b1b      	ldr	r3, [pc, #108]	; (8012808 <dma_init+0x70>)
 801279a:	b510      	push	{r4, lr}
 801279c:	4298      	cmp	r0, r3
 801279e:	d102      	bne.n	80127a6 <dma_init+0xe>
 80127a0:	2904      	cmp	r1, #4
 80127a2:	d900      	bls.n	80127a6 <dma_init+0xe>
 80127a4:	e7fe      	b.n	80127a4 <dma_init+0xc>
 80127a6:	2314      	movs	r3, #20
 80127a8:	fb03 0101 	mla	r1, r3, r1, r0
 80127ac:	6813      	ldr	r3, [r2, #0]
 80127ae:	610b      	str	r3, [r1, #16]
 80127b0:	6893      	ldr	r3, [r2, #8]
 80127b2:	614b      	str	r3, [r1, #20]
 80127b4:	8a13      	ldrh	r3, [r2, #16]
 80127b6:	60cb      	str	r3, [r1, #12]
 80127b8:	68d4      	ldr	r4, [r2, #12]
 80127ba:	6853      	ldr	r3, [r2, #4]
 80127bc:	6888      	ldr	r0, [r1, #8]
 80127be:	4323      	orrs	r3, r4
 80127c0:	6954      	ldr	r4, [r2, #20]
 80127c2:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80127c6:	4323      	orrs	r3, r4
 80127c8:	4303      	orrs	r3, r0
 80127ca:	608b      	str	r3, [r1, #8]
 80127cc:	7e13      	ldrb	r3, [r2, #24]
 80127ce:	2b01      	cmp	r3, #1
 80127d0:	688b      	ldr	r3, [r1, #8]
 80127d2:	bf0c      	ite	eq
 80127d4:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 80127d8:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 80127dc:	608b      	str	r3, [r1, #8]
 80127de:	7e53      	ldrb	r3, [r2, #25]
 80127e0:	2b01      	cmp	r3, #1
 80127e2:	688b      	ldr	r3, [r1, #8]
 80127e4:	bf0c      	ite	eq
 80127e6:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 80127ea:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 80127ee:	608b      	str	r3, [r1, #8]
 80127f0:	7e93      	ldrb	r3, [r2, #26]
 80127f2:	b923      	cbnz	r3, 80127fe <dma_init+0x66>
 80127f4:	688b      	ldr	r3, [r1, #8]
 80127f6:	f023 0310 	bic.w	r3, r3, #16
 80127fa:	608b      	str	r3, [r1, #8]
 80127fc:	bd10      	pop	{r4, pc}
 80127fe:	688b      	ldr	r3, [r1, #8]
 8012800:	f043 0310 	orr.w	r3, r3, #16
 8012804:	e7f9      	b.n	80127fa <dma_init+0x62>
 8012806:	bf00      	nop
 8012808:	40020400 	andmi	r0, r2, r0, lsl #8

0801280c <dma_circulation_disable>:
 801280c:	4b06      	ldr	r3, [pc, #24]	; (8012828 <dma_circulation_disable+0x1c>)
 801280e:	4298      	cmp	r0, r3
 8012810:	d102      	bne.n	8012818 <dma_circulation_disable+0xc>
 8012812:	2904      	cmp	r1, #4
 8012814:	d900      	bls.n	8012818 <dma_circulation_disable+0xc>
 8012816:	e7fe      	b.n	8012816 <dma_circulation_disable+0xa>
 8012818:	2314      	movs	r3, #20
 801281a:	4359      	muls	r1, r3
 801281c:	3008      	adds	r0, #8
 801281e:	580b      	ldr	r3, [r1, r0]
 8012820:	f023 0320 	bic.w	r3, r3, #32
 8012824:	500b      	str	r3, [r1, r0]
 8012826:	4770      	bx	lr
 8012828:	40020400 	andmi	r0, r2, r0, lsl #8

0801282c <dma_memory_to_memory_disable>:
 801282c:	4b06      	ldr	r3, [pc, #24]	; (8012848 <dma_memory_to_memory_disable+0x1c>)
 801282e:	4298      	cmp	r0, r3
 8012830:	d102      	bne.n	8012838 <dma_memory_to_memory_disable+0xc>
 8012832:	2904      	cmp	r1, #4
 8012834:	d900      	bls.n	8012838 <dma_memory_to_memory_disable+0xc>
 8012836:	e7fe      	b.n	8012836 <dma_memory_to_memory_disable+0xa>
 8012838:	2314      	movs	r3, #20
 801283a:	4359      	muls	r1, r3
 801283c:	3008      	adds	r0, #8
 801283e:	580b      	ldr	r3, [r1, r0]
 8012840:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012844:	500b      	str	r3, [r1, r0]
 8012846:	4770      	bx	lr
 8012848:	40020400 	andmi	r0, r2, r0, lsl #8

0801284c <enet_delay>:
 801284c:	2300      	movs	r3, #0
 801284e:	b082      	sub	sp, #8
 8012850:	9301      	str	r3, [sp, #4]
 8012852:	9001      	str	r0, [sp, #4]
 8012854:	9b01      	ldr	r3, [sp, #4]
 8012856:	b90b      	cbnz	r3, 801285c <enet_delay+0x10>
 8012858:	b002      	add	sp, #8
 801285a:	4770      	bx	lr
 801285c:	9b01      	ldr	r3, [sp, #4]
 801285e:	3b01      	subs	r3, #1
 8012860:	9301      	str	r3, [sp, #4]
 8012862:	e7f7      	b.n	8012854 <enet_delay+0x8>

08012864 <enet_software_reset>:
 8012864:	4b07      	ldr	r3, [pc, #28]	; (8012884 <enet_software_reset+0x20>)
 8012866:	681a      	ldr	r2, [r3, #0]
 8012868:	f042 0201 	orr.w	r2, r2, #1
 801286c:	601a      	str	r2, [r3, #0]
 801286e:	4a06      	ldr	r2, [pc, #24]	; (8012888 <enet_software_reset+0x24>)
 8012870:	6819      	ldr	r1, [r3, #0]
 8012872:	07c9      	lsls	r1, r1, #31
 8012874:	d501      	bpl.n	801287a <enet_software_reset+0x16>
 8012876:	3a01      	subs	r2, #1
 8012878:	d1fa      	bne.n	8012870 <enet_software_reset+0xc>
 801287a:	6818      	ldr	r0, [r3, #0]
 801287c:	43c0      	mvns	r0, r0
 801287e:	f000 0001 	and.w	r0, r0, #1
 8012882:	4770      	bx	lr
 8012884:	40029000 	andmi	r9, r2, r0
 8012888:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801288c <enet_descriptors_chain_init>:
 801288c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8012890:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012892:	4a19      	ldr	r2, [pc, #100]	; (80128f8 <enet_descriptors_chain_init+0x6c>)
 8012894:	d125      	bne.n	80128e2 <enet_descriptors_chain_init+0x56>
 8012896:	2500      	movs	r5, #0
 8012898:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801289c:	2002      	movs	r0, #2
 801289e:	4b17      	ldr	r3, [pc, #92]	; (80128fc <enet_descriptors_chain_init+0x70>)
 80128a0:	4c17      	ldr	r4, [pc, #92]	; (8012900 <enet_descriptors_chain_init+0x74>)
 80128a2:	6113      	str	r3, [r2, #16]
 80128a4:	4a17      	ldr	r2, [pc, #92]	; (8012904 <enet_descriptors_chain_init+0x78>)
 80128a6:	6013      	str	r3, [r2, #0]
 80128a8:	2200      	movs	r2, #0
 80128aa:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80128ae:	4916      	ldr	r1, [pc, #88]	; (8012908 <enet_descriptors_chain_init+0x7c>)
 80128b0:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80128b4:	600a      	str	r2, [r1, #0]
 80128b6:	4915      	ldr	r1, [pc, #84]	; (801290c <enet_descriptors_chain_init+0x80>)
 80128b8:	600a      	str	r2, [r1, #0]
 80128ba:	f103 0110 	add.w	r1, r3, #16
 80128be:	fb0e 4702 	mla	r7, lr, r2, r4
 80128c2:	f841 7c08 	str.w	r7, [r1, #-8]
 80128c6:	4594      	cmp	ip, r2
 80128c8:	bf94      	ite	ls
 80128ca:	461f      	movls	r7, r3
 80128cc:	460f      	movhi	r7, r1
 80128ce:	3201      	adds	r2, #1
 80128d0:	4290      	cmp	r0, r2
 80128d2:	e941 6504 	strd	r6, r5, [r1, #-16]
 80128d6:	f841 7c04 	str.w	r7, [r1, #-4]
 80128da:	f101 0110 	add.w	r1, r1, #16
 80128de:	d1ee      	bne.n	80128be <enet_descriptors_chain_init+0x32>
 80128e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128e2:	4b0b      	ldr	r3, [pc, #44]	; (8012910 <enet_descriptors_chain_init+0x84>)
 80128e4:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80128e8:	60d3      	str	r3, [r2, #12]
 80128ea:	4a0a      	ldr	r2, [pc, #40]	; (8012914 <enet_descriptors_chain_init+0x88>)
 80128ec:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80128f0:	2008      	movs	r0, #8
 80128f2:	4c09      	ldr	r4, [pc, #36]	; (8012918 <enet_descriptors_chain_init+0x8c>)
 80128f4:	6013      	str	r3, [r2, #0]
 80128f6:	e7d7      	b.n	80128a8 <enet_descriptors_chain_init+0x1c>
 80128f8:	40029000 	andmi	r9, r2, r0
 80128fc:	20013948 	andcs	r3, r1, r8, asr #18
 8012900:	20012d60 	andcs	r2, r1, r0, ror #26
 8012904:	2000fd00 	andcs	pc, r0, r0, lsl #26
 8012908:	2000fcf4 	strdcs	pc, [r0], -r4
 801290c:	2000fcf8 	strdcs	pc, [r0], -r8
 8012910:	20012ce0 	andcs	r2, r1, r0, ror #25
 8012914:	2000fcfc 	strdcs	pc, [r0], -ip
 8012918:	2000fd40 	andcs	pc, r0, r0, asr #26

0801291c <enet_frame_receive>:
 801291c:	4a1d      	ldr	r2, [pc, #116]	; (8012994 <enet_frame_receive+0x78>)
 801291e:	b510      	push	{r4, lr}
 8012920:	6813      	ldr	r3, [r2, #0]
 8012922:	681b      	ldr	r3, [r3, #0]
 8012924:	2b00      	cmp	r3, #0
 8012926:	db33      	blt.n	8012990 <enet_frame_receive+0x74>
 8012928:	b970      	cbnz	r0, 8012948 <enet_frame_receive+0x2c>
 801292a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801292e:	6813      	ldr	r3, [r2, #0]
 8012930:	6019      	str	r1, [r3, #0]
 8012932:	4919      	ldr	r1, [pc, #100]	; (8012998 <enet_frame_receive+0x7c>)
 8012934:	6948      	ldr	r0, [r1, #20]
 8012936:	0604      	lsls	r4, r0, #24
 8012938:	d419      	bmi.n	801296e <enet_frame_receive+0x52>
 801293a:	6859      	ldr	r1, [r3, #4]
 801293c:	0448      	lsls	r0, r1, #17
 801293e:	d51b      	bpl.n	8012978 <enet_frame_receive+0x5c>
 8012940:	68db      	ldr	r3, [r3, #12]
 8012942:	2001      	movs	r0, #1
 8012944:	6013      	str	r3, [r2, #0]
 8012946:	bd10      	pop	{r4, pc}
 8012948:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 801294c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8012950:	d11e      	bne.n	8012990 <enet_frame_receive+0x74>
 8012952:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8012956:	3b04      	subs	r3, #4
 8012958:	428b      	cmp	r3, r1
 801295a:	d819      	bhi.n	8012990 <enet_frame_receive+0x74>
 801295c:	2100      	movs	r1, #0
 801295e:	4299      	cmp	r1, r3
 8012960:	6814      	ldr	r4, [r2, #0]
 8012962:	d2e2      	bcs.n	801292a <enet_frame_receive+0xe>
 8012964:	68a4      	ldr	r4, [r4, #8]
 8012966:	5d0c      	ldrb	r4, [r1, r4]
 8012968:	5444      	strb	r4, [r0, r1]
 801296a:	3101      	adds	r1, #1
 801296c:	e7f7      	b.n	801295e <enet_frame_receive+0x42>
 801296e:	2080      	movs	r0, #128	; 0x80
 8012970:	6148      	str	r0, [r1, #20]
 8012972:	2000      	movs	r0, #0
 8012974:	6088      	str	r0, [r1, #8]
 8012976:	e7e0      	b.n	801293a <enet_frame_receive+0x1e>
 8012978:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801297c:	4906      	ldr	r1, [pc, #24]	; (8012998 <enet_frame_receive+0x7c>)
 801297e:	bf05      	ittet	eq
 8012980:	3310      	addeq	r3, #16
 8012982:	6809      	ldreq	r1, [r1, #0]
 8012984:	68cb      	ldrne	r3, [r1, #12]
 8012986:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801298a:	bf08      	it	eq
 801298c:	185b      	addeq	r3, r3, r1
 801298e:	e7d8      	b.n	8012942 <enet_frame_receive+0x26>
 8012990:	2000      	movs	r0, #0
 8012992:	e7d8      	b.n	8012946 <enet_frame_receive+0x2a>
 8012994:	2000fcfc 	strdcs	pc, [r0], -ip
 8012998:	40029000 	andmi	r9, r2, r0

0801299c <enet_frame_transmit>:
 801299c:	4a1e      	ldr	r2, [pc, #120]	; (8012a18 <enet_frame_transmit+0x7c>)
 801299e:	b530      	push	{r4, r5, lr}
 80129a0:	6813      	ldr	r3, [r2, #0]
 80129a2:	681b      	ldr	r3, [r3, #0]
 80129a4:	2b00      	cmp	r3, #0
 80129a6:	db34      	blt.n	8012a12 <enet_frame_transmit+0x76>
 80129a8:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80129ac:	4299      	cmp	r1, r3
 80129ae:	d830      	bhi.n	8012a12 <enet_frame_transmit+0x76>
 80129b0:	b9e8      	cbnz	r0, 80129ee <enet_frame_transmit+0x52>
 80129b2:	6813      	ldr	r3, [r2, #0]
 80129b4:	4819      	ldr	r0, [pc, #100]	; (8012a1c <enet_frame_transmit+0x80>)
 80129b6:	6059      	str	r1, [r3, #4]
 80129b8:	6819      	ldr	r1, [r3, #0]
 80129ba:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80129be:	6019      	str	r1, [r3, #0]
 80129c0:	6941      	ldr	r1, [r0, #20]
 80129c2:	6944      	ldr	r4, [r0, #20]
 80129c4:	f001 0104 	and.w	r1, r1, #4
 80129c8:	f004 0420 	and.w	r4, r4, #32
 80129cc:	4321      	orrs	r1, r4
 80129ce:	d110      	bne.n	80129f2 <enet_frame_transmit+0x56>
 80129d0:	6819      	ldr	r1, [r3, #0]
 80129d2:	02c8      	lsls	r0, r1, #11
 80129d4:	d511      	bpl.n	80129fa <enet_frame_transmit+0x5e>
 80129d6:	68db      	ldr	r3, [r3, #12]
 80129d8:	2001      	movs	r0, #1
 80129da:	6013      	str	r3, [r2, #0]
 80129dc:	bd30      	pop	{r4, r5, pc}
 80129de:	5cc5      	ldrb	r5, [r0, r3]
 80129e0:	68a4      	ldr	r4, [r4, #8]
 80129e2:	551d      	strb	r5, [r3, r4]
 80129e4:	3301      	adds	r3, #1
 80129e6:	428b      	cmp	r3, r1
 80129e8:	6814      	ldr	r4, [r2, #0]
 80129ea:	d1f8      	bne.n	80129de <enet_frame_transmit+0x42>
 80129ec:	e7e1      	b.n	80129b2 <enet_frame_transmit+0x16>
 80129ee:	2300      	movs	r3, #0
 80129f0:	e7f9      	b.n	80129e6 <enet_frame_transmit+0x4a>
 80129f2:	6141      	str	r1, [r0, #20]
 80129f4:	2100      	movs	r1, #0
 80129f6:	6041      	str	r1, [r0, #4]
 80129f8:	e7ea      	b.n	80129d0 <enet_frame_transmit+0x34>
 80129fa:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80129fe:	4907      	ldr	r1, [pc, #28]	; (8012a1c <enet_frame_transmit+0x80>)
 8012a00:	bf05      	ittet	eq
 8012a02:	3310      	addeq	r3, #16
 8012a04:	6809      	ldreq	r1, [r1, #0]
 8012a06:	690b      	ldrne	r3, [r1, #16]
 8012a08:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012a0c:	bf08      	it	eq
 8012a0e:	185b      	addeq	r3, r3, r1
 8012a10:	e7e2      	b.n	80129d8 <enet_frame_transmit+0x3c>
 8012a12:	2000      	movs	r0, #0
 8012a14:	e7e2      	b.n	80129dc <enet_frame_transmit+0x40>
 8012a16:	bf00      	nop
 8012a18:	2000fd00 	andcs	pc, r0, r0, lsl #26
 8012a1c:	40029000 	andmi	r9, r2, r0

08012a20 <enet_transmit_checksum_config>:
 8012a20:	6803      	ldr	r3, [r0, #0]
 8012a22:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8012a26:	430b      	orrs	r3, r1
 8012a28:	6003      	str	r3, [r0, #0]
 8012a2a:	4770      	bx	lr

08012a2c <enet_mac_address_set>:
 8012a2c:	888a      	ldrh	r2, [r1, #4]
 8012a2e:	4b03      	ldr	r3, [pc, #12]	; (8012a3c <enet_mac_address_set+0x10>)
 8012a30:	50c2      	str	r2, [r0, r3]
 8012a32:	680a      	ldr	r2, [r1, #0]
 8012a34:	3304      	adds	r3, #4
 8012a36:	50c2      	str	r2, [r0, r3]
 8012a38:	4770      	bx	lr
 8012a3a:	bf00      	nop
 8012a3c:	40028040 	andmi	r8, r2, r0, asr #32

08012a40 <enet_rx_enable>:
 8012a40:	4a05      	ldr	r2, [pc, #20]	; (8012a58 <enet_rx_enable+0x18>)
 8012a42:	6813      	ldr	r3, [r2, #0]
 8012a44:	f043 0304 	orr.w	r3, r3, #4
 8012a48:	6013      	str	r3, [r2, #0]
 8012a4a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012a4e:	6993      	ldr	r3, [r2, #24]
 8012a50:	f043 0302 	orr.w	r3, r3, #2
 8012a54:	6193      	str	r3, [r2, #24]
 8012a56:	4770      	bx	lr
 8012a58:	40028000 	andmi	r8, r2, r0

08012a5c <enet_phy_write_read>:
 8012a5c:	b530      	push	{r4, r5, lr}
 8012a5e:	4604      	mov	r4, r0
 8012a60:	4d13      	ldr	r5, [pc, #76]	; (8012ab0 <enet_phy_write_read+0x54>)
 8012a62:	0192      	lsls	r2, r2, #6
 8012a64:	6928      	ldr	r0, [r5, #16]
 8012a66:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8012a6a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8012a6e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8012a72:	4302      	orrs	r2, r0
 8012a74:	02c9      	lsls	r1, r1, #11
 8012a76:	b289      	uxth	r1, r1
 8012a78:	2c02      	cmp	r4, #2
 8012a7a:	ea42 0204 	orr.w	r2, r2, r4
 8012a7e:	ea42 0201 	orr.w	r2, r2, r1
 8012a82:	bf08      	it	eq
 8012a84:	8819      	ldrheq	r1, [r3, #0]
 8012a86:	f042 0201 	orr.w	r2, r2, #1
 8012a8a:	bf08      	it	eq
 8012a8c:	6169      	streq	r1, [r5, #20]
 8012a8e:	612a      	str	r2, [r5, #16]
 8012a90:	4907      	ldr	r1, [pc, #28]	; (8012ab0 <enet_phy_write_read+0x54>)
 8012a92:	4a08      	ldr	r2, [pc, #32]	; (8012ab4 <enet_phy_write_read+0x58>)
 8012a94:	6908      	ldr	r0, [r1, #16]
 8012a96:	07c0      	lsls	r0, r0, #31
 8012a98:	d501      	bpl.n	8012a9e <enet_phy_write_read+0x42>
 8012a9a:	3a01      	subs	r2, #1
 8012a9c:	d1fa      	bne.n	8012a94 <enet_phy_write_read+0x38>
 8012a9e:	690a      	ldr	r2, [r1, #16]
 8012aa0:	43d2      	mvns	r2, r2
 8012aa2:	f002 0001 	and.w	r0, r2, #1
 8012aa6:	b90c      	cbnz	r4, 8012aac <enet_phy_write_read+0x50>
 8012aa8:	694a      	ldr	r2, [r1, #20]
 8012aaa:	801a      	strh	r2, [r3, #0]
 8012aac:	bd30      	pop	{r4, r5, pc}
 8012aae:	bf00      	nop
 8012ab0:	40028000 	andmi	r8, r2, r0
 8012ab4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012ab8 <enet_phy_config>:
 8012ab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012aba:	4d22      	ldr	r5, [pc, #136]	; (8012b44 <enet_phy_config+0x8c>)
 8012abc:	2001      	movs	r0, #1
 8012abe:	692c      	ldr	r4, [r5, #16]
 8012ac0:	f7fe ff26 	bl	8011910 <rcu_clock_freq_get>
 8012ac4:	4b20      	ldr	r3, [pc, #128]	; (8012b48 <enet_phy_config+0x90>)
 8012ac6:	4a21      	ldr	r2, [pc, #132]	; (8012b4c <enet_phy_config+0x94>)
 8012ac8:	4403      	add	r3, r0
 8012aca:	4293      	cmp	r3, r2
 8012acc:	f024 041c 	bic.w	r4, r4, #28
 8012ad0:	d21f      	bcs.n	8012b12 <enet_phy_config+0x5a>
 8012ad2:	f044 0408 	orr.w	r4, r4, #8
 8012ad6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012ada:	612c      	str	r4, [r5, #16]
 8012adc:	2200      	movs	r2, #0
 8012ade:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012ae2:	2101      	movs	r1, #1
 8012ae4:	2002      	movs	r0, #2
 8012ae6:	f10d 0306 	add.w	r3, sp, #6
 8012aea:	f7ff ffb7 	bl	8012a5c <enet_phy_write_read>
 8012aee:	b310      	cbz	r0, 8012b36 <enet_phy_config+0x7e>
 8012af0:	2200      	movs	r2, #0
 8012af2:	4817      	ldr	r0, [pc, #92]	; (8012b50 <enet_phy_config+0x98>)
 8012af4:	f7ff feaa 	bl	801284c <enet_delay>
 8012af8:	2101      	movs	r1, #1
 8012afa:	4610      	mov	r0, r2
 8012afc:	f10d 0306 	add.w	r3, sp, #6
 8012b00:	f7ff ffac 	bl	8012a5c <enet_phy_write_read>
 8012b04:	b1b8      	cbz	r0, 8012b36 <enet_phy_config+0x7e>
 8012b06:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012b0a:	43c0      	mvns	r0, r0
 8012b0c:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012b10:	e012      	b.n	8012b38 <enet_phy_config+0x80>
 8012b12:	4b10      	ldr	r3, [pc, #64]	; (8012b54 <enet_phy_config+0x9c>)
 8012b14:	4a10      	ldr	r2, [pc, #64]	; (8012b58 <enet_phy_config+0xa0>)
 8012b16:	4403      	add	r3, r0
 8012b18:	4293      	cmp	r3, r2
 8012b1a:	d802      	bhi.n	8012b22 <enet_phy_config+0x6a>
 8012b1c:	f044 040c 	orr.w	r4, r4, #12
 8012b20:	e7d9      	b.n	8012ad6 <enet_phy_config+0x1e>
 8012b22:	4b0e      	ldr	r3, [pc, #56]	; (8012b5c <enet_phy_config+0xa4>)
 8012b24:	4a0e      	ldr	r2, [pc, #56]	; (8012b60 <enet_phy_config+0xa8>)
 8012b26:	4403      	add	r3, r0
 8012b28:	4293      	cmp	r3, r2
 8012b2a:	d9d4      	bls.n	8012ad6 <enet_phy_config+0x1e>
 8012b2c:	4b0d      	ldr	r3, [pc, #52]	; (8012b64 <enet_phy_config+0xac>)
 8012b2e:	4a0e      	ldr	r2, [pc, #56]	; (8012b68 <enet_phy_config+0xb0>)
 8012b30:	4403      	add	r3, r0
 8012b32:	4293      	cmp	r3, r2
 8012b34:	d902      	bls.n	8012b3c <enet_phy_config+0x84>
 8012b36:	2000      	movs	r0, #0
 8012b38:	b003      	add	sp, #12
 8012b3a:	bd30      	pop	{r4, r5, pc}
 8012b3c:	f044 0404 	orr.w	r4, r4, #4
 8012b40:	e7c9      	b.n	8012ad6 <enet_phy_config+0x1e>
 8012b42:	bf00      	nop
 8012b44:	40028000 	andmi	r8, r2, r0
 8012b48:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8012b4c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8012b50:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012b54:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8012b58:	017d783f 	cmneq	sp, pc, lsr r8
 8012b5c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8012b60:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8012b64:	faa2b580 	blx	68c016c <__stack_size+0x68be16c>
 8012b68:	0112a880 	tsteq	r2, r0, lsl #17

08012b6c <enet_init>:
 8012b6c:	2300      	movs	r3, #0
 8012b6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012b70:	4604      	mov	r4, r0
 8012b72:	460d      	mov	r5, r1
 8012b74:	4616      	mov	r6, r2
 8012b76:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012b7a:	f7ff ff9d 	bl	8012ab8 <enet_phy_config>
 8012b7e:	2800      	cmp	r0, #0
 8012b80:	d037      	beq.n	8012bf2 <enet_init+0x86>
 8012b82:	4b3b      	ldr	r3, [pc, #236]	; (8012c70 <enet_init+0x104>)
 8012b84:	4a3b      	ldr	r2, [pc, #236]	; (8012c74 <enet_init+0x108>)
 8012b86:	6819      	ldr	r1, [r3, #0]
 8012b88:	2c01      	cmp	r4, #1
 8012b8a:	ea02 0201 	and.w	r2, r2, r1
 8012b8e:	601a      	str	r2, [r3, #0]
 8012b90:	f04f 0200 	mov.w	r2, #0
 8012b94:	605a      	str	r2, [r3, #4]
 8012b96:	609a      	str	r2, [r3, #8]
 8012b98:	60da      	str	r2, [r3, #12]
 8012b9a:	6999      	ldr	r1, [r3, #24]
 8012b9c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8012ba0:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8012ba4:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8012ba8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8012bac:	6199      	str	r1, [r3, #24]
 8012bae:	4932      	ldr	r1, [pc, #200]	; (8012c78 <enet_init+0x10c>)
 8012bb0:	61da      	str	r2, [r3, #28]
 8012bb2:	6988      	ldr	r0, [r1, #24]
 8012bb4:	4b31      	ldr	r3, [pc, #196]	; (8012c7c <enet_init+0x110>)
 8012bb6:	ea03 0300 	and.w	r3, r3, r0
 8012bba:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8012bbe:	618b      	str	r3, [r1, #24]
 8012bc0:	680b      	ldr	r3, [r1, #0]
 8012bc2:	4b2f      	ldr	r3, [pc, #188]	; (8012c80 <enet_init+0x114>)
 8012bc4:	600b      	str	r3, [r1, #0]
 8012bc6:	d01e      	beq.n	8012c06 <enet_init+0x9a>
 8012bc8:	08e3      	lsrs	r3, r4, #3
 8012bca:	0861      	lsrs	r1, r4, #1
 8012bcc:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8012bd0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012bd4:	430b      	orrs	r3, r1
 8012bd6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012bda:	2101      	movs	r1, #1
 8012bdc:	2002      	movs	r0, #2
 8012bde:	f10d 0306 	add.w	r3, sp, #6
 8012be2:	f7ff ff3b 	bl	8012a5c <enet_phy_write_read>
 8012be6:	b158      	cbz	r0, 8012c00 <enet_init+0x94>
 8012be8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8012bec:	f7ff fe2e 	bl	801284c <enet_delay>
 8012bf0:	e05d      	b.n	8012cae <enet_init+0x142>
 8012bf2:	4824      	ldr	r0, [pc, #144]	; (8012c84 <enet_init+0x118>)
 8012bf4:	f7ff fe2a 	bl	801284c <enet_delay>
 8012bf8:	f7ff ff5e 	bl	8012ab8 <enet_phy_config>
 8012bfc:	2800      	cmp	r0, #0
 8012bfe:	d1c0      	bne.n	8012b82 <enet_init+0x16>
 8012c00:	2000      	movs	r0, #0
 8012c02:	b003      	add	sp, #12
 8012c04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c06:	4614      	mov	r4, r2
 8012c08:	4f1f      	ldr	r7, [pc, #124]	; (8012c88 <enet_init+0x11c>)
 8012c0a:	2201      	movs	r2, #1
 8012c0c:	2000      	movs	r0, #0
 8012c0e:	4611      	mov	r1, r2
 8012c10:	f10d 0306 	add.w	r3, sp, #6
 8012c14:	f7ff ff22 	bl	8012a5c <enet_phy_write_read>
 8012c18:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012c1c:	3401      	adds	r4, #1
 8012c1e:	f002 0204 	and.w	r2, r2, #4
 8012c22:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012c26:	b912      	cbnz	r2, 8012c2e <enet_init+0xc2>
 8012c28:	42bc      	cmp	r4, r7
 8012c2a:	d1ee      	bne.n	8012c0a <enet_init+0x9e>
 8012c2c:	e7e8      	b.n	8012c00 <enet_init+0x94>
 8012c2e:	42bc      	cmp	r4, r7
 8012c30:	d0e6      	beq.n	8012c00 <enet_init+0x94>
 8012c32:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012c36:	2101      	movs	r1, #1
 8012c38:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012c3c:	2002      	movs	r0, #2
 8012c3e:	2200      	movs	r2, #0
 8012c40:	f7ff ff0c 	bl	8012a5c <enet_phy_write_read>
 8012c44:	2800      	cmp	r0, #0
 8012c46:	d0db      	beq.n	8012c00 <enet_init+0x94>
 8012c48:	2400      	movs	r4, #0
 8012c4a:	4f0f      	ldr	r7, [pc, #60]	; (8012c88 <enet_init+0x11c>)
 8012c4c:	2201      	movs	r2, #1
 8012c4e:	2000      	movs	r0, #0
 8012c50:	4611      	mov	r1, r2
 8012c52:	f10d 0306 	add.w	r3, sp, #6
 8012c56:	f7ff ff01 	bl	8012a5c <enet_phy_write_read>
 8012c5a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012c5e:	3401      	adds	r4, #1
 8012c60:	f002 0220 	and.w	r2, r2, #32
 8012c64:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012c68:	b982      	cbnz	r2, 8012c8c <enet_init+0x120>
 8012c6a:	42bc      	cmp	r4, r7
 8012c6c:	d1ee      	bne.n	8012c4c <enet_init+0xe0>
 8012c6e:	e7c7      	b.n	8012c00 <enet_init+0x94>
 8012c70:	40028000 	andmi	r8, r2, r0
 8012c74:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8012c78:	40029000 	andmi	r9, r2, r0
 8012c7c:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8012c80:	02c16000 	sbceq	r6, r1, #0
 8012c84:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8012c88:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012c8c:	42bc      	cmp	r4, r7
 8012c8e:	d0b7      	beq.n	8012c00 <enet_init+0x94>
 8012c90:	2101      	movs	r1, #1
 8012c92:	2210      	movs	r2, #16
 8012c94:	2000      	movs	r0, #0
 8012c96:	f7ff fee1 	bl	8012a5c <enet_phy_write_read>
 8012c9a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012c9e:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8012ca2:	0799      	lsls	r1, r3, #30
 8012ca4:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8012ca8:	d401      	bmi.n	8012cae <enet_init+0x142>
 8012caa:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8012cae:	4b63      	ldr	r3, [pc, #396]	; (8012e3c <enet_init+0x2d0>)
 8012cb0:	681a      	ldr	r2, [r3, #0]
 8012cb2:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8012cb6:	4314      	orrs	r4, r2
 8012cb8:	056a      	lsls	r2, r5, #21
 8012cba:	601c      	str	r4, [r3, #0]
 8012cbc:	d50b      	bpl.n	8012cd6 <enet_init+0x16a>
 8012cbe:	681a      	ldr	r2, [r3, #0]
 8012cc0:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8012cc4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012cc8:	601a      	str	r2, [r3, #0]
 8012cca:	4a5d      	ldr	r2, [pc, #372]	; (8012e40 <enet_init+0x2d4>)
 8012ccc:	6993      	ldr	r3, [r2, #24]
 8012cce:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8012cd2:	431d      	orrs	r5, r3
 8012cd4:	6195      	str	r5, [r2, #24]
 8012cd6:	4959      	ldr	r1, [pc, #356]	; (8012e3c <enet_init+0x2d0>)
 8012cd8:	684b      	ldr	r3, [r1, #4]
 8012cda:	431e      	orrs	r6, r3
 8012cdc:	4b59      	ldr	r3, [pc, #356]	; (8012e44 <enet_init+0x2d8>)
 8012cde:	604e      	str	r6, [r1, #4]
 8012ce0:	681a      	ldr	r2, [r3, #0]
 8012ce2:	07d7      	lsls	r7, r2, #31
 8012ce4:	d510      	bpl.n	8012d08 <enet_init+0x19c>
 8012ce6:	685a      	ldr	r2, [r3, #4]
 8012ce8:	680c      	ldr	r4, [r1, #0]
 8012cea:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8012cee:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8012cf2:	4320      	orrs	r0, r4
 8012cf4:	6008      	str	r0, [r1, #0]
 8012cf6:	4852      	ldr	r0, [pc, #328]	; (8012e40 <enet_init+0x2d4>)
 8012cf8:	0892      	lsrs	r2, r2, #2
 8012cfa:	6981      	ldr	r1, [r0, #24]
 8012cfc:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8012d00:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8012d04:	430a      	orrs	r2, r1
 8012d06:	6182      	str	r2, [r0, #24]
 8012d08:	681a      	ldr	r2, [r3, #0]
 8012d0a:	0796      	lsls	r6, r2, #30
 8012d0c:	d508      	bpl.n	8012d20 <enet_init+0x1b4>
 8012d0e:	494c      	ldr	r1, [pc, #304]	; (8012e40 <enet_init+0x2d4>)
 8012d10:	6898      	ldr	r0, [r3, #8]
 8012d12:	680a      	ldr	r2, [r1, #0]
 8012d14:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8012d18:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012d1c:	4302      	orrs	r2, r0
 8012d1e:	600a      	str	r2, [r1, #0]
 8012d20:	681a      	ldr	r2, [r3, #0]
 8012d22:	0755      	lsls	r5, r2, #29
 8012d24:	d508      	bpl.n	8012d38 <enet_init+0x1cc>
 8012d26:	4946      	ldr	r1, [pc, #280]	; (8012e40 <enet_init+0x2d4>)
 8012d28:	68d8      	ldr	r0, [r3, #12]
 8012d2a:	680a      	ldr	r2, [r1, #0]
 8012d2c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8012d30:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8012d34:	4302      	orrs	r2, r0
 8012d36:	600a      	str	r2, [r1, #0]
 8012d38:	681a      	ldr	r2, [r3, #0]
 8012d3a:	0714      	lsls	r4, r2, #28
 8012d3c:	d508      	bpl.n	8012d50 <enet_init+0x1e4>
 8012d3e:	4940      	ldr	r1, [pc, #256]	; (8012e40 <enet_init+0x2d4>)
 8012d40:	6918      	ldr	r0, [r3, #16]
 8012d42:	680a      	ldr	r2, [r1, #0]
 8012d44:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012d48:	f022 0202 	bic.w	r2, r2, #2
 8012d4c:	4302      	orrs	r2, r0
 8012d4e:	600a      	str	r2, [r1, #0]
 8012d50:	681a      	ldr	r2, [r3, #0]
 8012d52:	06d0      	lsls	r0, r2, #27
 8012d54:	d506      	bpl.n	8012d64 <enet_init+0x1f8>
 8012d56:	493a      	ldr	r1, [pc, #232]	; (8012e40 <enet_init+0x2d4>)
 8012d58:	4a3b      	ldr	r2, [pc, #236]	; (8012e48 <enet_init+0x2dc>)
 8012d5a:	6988      	ldr	r0, [r1, #24]
 8012d5c:	4002      	ands	r2, r0
 8012d5e:	6958      	ldr	r0, [r3, #20]
 8012d60:	4302      	orrs	r2, r0
 8012d62:	618a      	str	r2, [r1, #24]
 8012d64:	681a      	ldr	r2, [r3, #0]
 8012d66:	0691      	lsls	r1, r2, #26
 8012d68:	d508      	bpl.n	8012d7c <enet_init+0x210>
 8012d6a:	4935      	ldr	r1, [pc, #212]	; (8012e40 <enet_init+0x2d4>)
 8012d6c:	6998      	ldr	r0, [r3, #24]
 8012d6e:	698a      	ldr	r2, [r1, #24]
 8012d70:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8012d74:	f022 0204 	bic.w	r2, r2, #4
 8012d78:	4302      	orrs	r2, r0
 8012d7a:	618a      	str	r2, [r1, #24]
 8012d7c:	681a      	ldr	r2, [r3, #0]
 8012d7e:	0652      	lsls	r2, r2, #25
 8012d80:	d506      	bpl.n	8012d90 <enet_init+0x224>
 8012d82:	492e      	ldr	r1, [pc, #184]	; (8012e3c <enet_init+0x2d0>)
 8012d84:	69d8      	ldr	r0, [r3, #28]
 8012d86:	69ca      	ldr	r2, [r1, #28]
 8012d88:	0c52      	lsrs	r2, r2, #17
 8012d8a:	0452      	lsls	r2, r2, #17
 8012d8c:	4302      	orrs	r2, r0
 8012d8e:	61ca      	str	r2, [r1, #28]
 8012d90:	681a      	ldr	r2, [r3, #0]
 8012d92:	0617      	lsls	r7, r2, #24
 8012d94:	d517      	bpl.n	8012dc6 <enet_init+0x25a>
 8012d96:	4c29      	ldr	r4, [pc, #164]	; (8012e3c <enet_init+0x2d0>)
 8012d98:	6a1a      	ldr	r2, [r3, #32]
 8012d9a:	69a0      	ldr	r0, [r4, #24]
 8012d9c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8012da0:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8012da4:	0400      	lsls	r0, r0, #16
 8012da6:	0c00      	lsrs	r0, r0, #16
 8012da8:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8012dac:	4301      	orrs	r1, r0
 8012dae:	4824      	ldr	r0, [pc, #144]	; (8012e40 <enet_init+0x2d4>)
 8012db0:	61a1      	str	r1, [r4, #24]
 8012db2:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8012db6:	0a12      	lsrs	r2, r2, #8
 8012db8:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8012dbc:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8012dc0:	430a      	orrs	r2, r1
 8012dc2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8012dc6:	681a      	ldr	r2, [r3, #0]
 8012dc8:	05d6      	lsls	r6, r2, #23
 8012dca:	bf42      	ittt	mi
 8012dcc:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8012dce:	4a1b      	ldrmi	r2, [pc, #108]	; (8012e3c <enet_init+0x2d0>)
 8012dd0:	6091      	strmi	r1, [r2, #8]
 8012dd2:	681a      	ldr	r2, [r3, #0]
 8012dd4:	0595      	lsls	r5, r2, #22
 8012dd6:	bf42      	ittt	mi
 8012dd8:	4a18      	ldrmi	r2, [pc, #96]	; (8012e3c <enet_init+0x2d0>)
 8012dda:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8012ddc:	60d1      	strmi	r1, [r2, #12]
 8012dde:	681a      	ldr	r2, [r3, #0]
 8012de0:	0554      	lsls	r4, r2, #21
 8012de2:	d508      	bpl.n	8012df6 <enet_init+0x28a>
 8012de4:	4915      	ldr	r1, [pc, #84]	; (8012e3c <enet_init+0x2d0>)
 8012de6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8012de8:	684a      	ldr	r2, [r1, #4]
 8012dea:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8012dee:	f022 0206 	bic.w	r2, r2, #6
 8012df2:	4302      	orrs	r2, r0
 8012df4:	604a      	str	r2, [r1, #4]
 8012df6:	681a      	ldr	r2, [r3, #0]
 8012df8:	0510      	lsls	r0, r2, #20
 8012dfa:	d508      	bpl.n	8012e0e <enet_init+0x2a2>
 8012dfc:	490f      	ldr	r1, [pc, #60]	; (8012e3c <enet_init+0x2d0>)
 8012dfe:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8012e00:	680a      	ldr	r2, [r1, #0]
 8012e02:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8012e06:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8012e0a:	4302      	orrs	r2, r0
 8012e0c:	600a      	str	r2, [r1, #0]
 8012e0e:	681a      	ldr	r2, [r3, #0]
 8012e10:	04d1      	lsls	r1, r2, #19
 8012e12:	d506      	bpl.n	8012e22 <enet_init+0x2b6>
 8012e14:	4909      	ldr	r1, [pc, #36]	; (8012e3c <enet_init+0x2d0>)
 8012e16:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8012e18:	680a      	ldr	r2, [r1, #0]
 8012e1a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8012e1e:	4302      	orrs	r2, r0
 8012e20:	600a      	str	r2, [r1, #0]
 8012e22:	681a      	ldr	r2, [r3, #0]
 8012e24:	0492      	lsls	r2, r2, #18
 8012e26:	d506      	bpl.n	8012e36 <enet_init+0x2ca>
 8012e28:	4904      	ldr	r1, [pc, #16]	; (8012e3c <enet_init+0x2d0>)
 8012e2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e2c:	680a      	ldr	r2, [r1, #0]
 8012e2e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8012e32:	4313      	orrs	r3, r2
 8012e34:	600b      	str	r3, [r1, #0]
 8012e36:	2001      	movs	r0, #1
 8012e38:	e6e3      	b.n	8012c02 <enet_init+0x96>
 8012e3a:	bf00      	nop
 8012e3c:	40028000 	andmi	r8, r2, r0
 8012e40:	40029000 	andmi	r9, r2, r0
 8012e44:	2000fd04 	andcs	pc, r0, r4, lsl #26
 8012e48:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08012e4c <enet_txfifo_flush>:
 8012e4c:	4b06      	ldr	r3, [pc, #24]	; (8012e68 <enet_txfifo_flush+0x1c>)
 8012e4e:	4807      	ldr	r0, [pc, #28]	; (8012e6c <enet_txfifo_flush+0x20>)
 8012e50:	699a      	ldr	r2, [r3, #24]
 8012e52:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8012e56:	619a      	str	r2, [r3, #24]
 8012e58:	699a      	ldr	r2, [r3, #24]
 8012e5a:	02d2      	lsls	r2, r2, #11
 8012e5c:	d502      	bpl.n	8012e64 <enet_txfifo_flush+0x18>
 8012e5e:	3801      	subs	r0, #1
 8012e60:	d1fa      	bne.n	8012e58 <enet_txfifo_flush+0xc>
 8012e62:	4770      	bx	lr
 8012e64:	2001      	movs	r0, #1
 8012e66:	4770      	bx	lr
 8012e68:	40029000 	andmi	r9, r2, r0
 8012e6c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012e70 <enet_tx_enable>:
 8012e70:	4a06      	ldr	r2, [pc, #24]	; (8012e8c <enet_tx_enable+0x1c>)
 8012e72:	b508      	push	{r3, lr}
 8012e74:	6813      	ldr	r3, [r2, #0]
 8012e76:	f043 0308 	orr.w	r3, r3, #8
 8012e7a:	6013      	str	r3, [r2, #0]
 8012e7c:	f7ff ffe6 	bl	8012e4c <enet_txfifo_flush>
 8012e80:	4a03      	ldr	r2, [pc, #12]	; (8012e90 <enet_tx_enable+0x20>)
 8012e82:	6993      	ldr	r3, [r2, #24]
 8012e84:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012e88:	6193      	str	r3, [r2, #24]
 8012e8a:	bd08      	pop	{r3, pc}
 8012e8c:	40028000 	andmi	r8, r2, r0
 8012e90:	40029000 	andmi	r9, r2, r0

08012e94 <enet_enable>:
 8012e94:	b508      	push	{r3, lr}
 8012e96:	f7ff ffeb 	bl	8012e70 <enet_tx_enable>
 8012e9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012e9e:	f7ff bdcf 	b.w	8012a40 <enet_rx_enable>

08012ea2 <enet_desc_information_get>:
 8012ea2:	2905      	cmp	r1, #5
 8012ea4:	d817      	bhi.n	8012ed6 <enet_desc_information_get+0x34>
 8012ea6:	e8df f001 	tbb	[pc, r1]
 8012eaa:	03091012 	movweq	r1, #36882	; 0x9012
 8012eae:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8012eb2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012eb6:	4770      	bx	lr
 8012eb8:	88c0      	ldrh	r0, [r0, #6]
 8012eba:	e7fa      	b.n	8012eb2 <enet_desc_information_get+0x10>
 8012ebc:	8840      	ldrh	r0, [r0, #2]
 8012ebe:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8012ec2:	2804      	cmp	r0, #4
 8012ec4:	d90a      	bls.n	8012edc <enet_desc_information_get+0x3a>
 8012ec6:	3804      	subs	r0, #4
 8012ec8:	4770      	bx	lr
 8012eca:	6880      	ldr	r0, [r0, #8]
 8012ecc:	4770      	bx	lr
 8012ece:	6800      	ldr	r0, [r0, #0]
 8012ed0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8012ed4:	4770      	bx	lr
 8012ed6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012eda:	4770      	bx	lr
 8012edc:	2000      	movs	r0, #0
 8012ede:	4770      	bx	lr

08012ee0 <enet_rxframe_drop>:
 8012ee0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8012ee4:	4814      	ldr	r0, [pc, #80]	; (8012f38 <enet_rxframe_drop+0x58>)
 8012ee6:	b510      	push	{r4, lr}
 8012ee8:	6802      	ldr	r2, [r0, #0]
 8012eea:	4914      	ldr	r1, [pc, #80]	; (8012f3c <enet_rxframe_drop+0x5c>)
 8012eec:	6854      	ldr	r4, [r2, #4]
 8012eee:	6013      	str	r3, [r2, #0]
 8012ef0:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8012ef4:	680b      	ldr	r3, [r1, #0]
 8012ef6:	d009      	beq.n	8012f0c <enet_rxframe_drop+0x2c>
 8012ef8:	b12b      	cbz	r3, 8012f06 <enet_rxframe_drop+0x26>
 8012efa:	68da      	ldr	r2, [r3, #12]
 8012efc:	6002      	str	r2, [r0, #0]
 8012efe:	681a      	ldr	r2, [r3, #0]
 8012f00:	b1ba      	cbz	r2, 8012f32 <enet_rxframe_drop+0x52>
 8012f02:	600a      	str	r2, [r1, #0]
 8012f04:	bd10      	pop	{r4, pc}
 8012f06:	68d3      	ldr	r3, [r2, #12]
 8012f08:	6003      	str	r3, [r0, #0]
 8012f0a:	e7fb      	b.n	8012f04 <enet_rxframe_drop+0x24>
 8012f0c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8012f10:	4c0b      	ldr	r4, [pc, #44]	; (8012f40 <enet_rxframe_drop+0x60>)
 8012f12:	d006      	beq.n	8012f22 <enet_rxframe_drop+0x42>
 8012f14:	68e2      	ldr	r2, [r4, #12]
 8012f16:	6002      	str	r2, [r0, #0]
 8012f18:	2b00      	cmp	r3, #0
 8012f1a:	d0f3      	beq.n	8012f04 <enet_rxframe_drop+0x24>
 8012f1c:	681b      	ldr	r3, [r3, #0]
 8012f1e:	600b      	str	r3, [r1, #0]
 8012f20:	e7f0      	b.n	8012f04 <enet_rxframe_drop+0x24>
 8012f22:	6824      	ldr	r4, [r4, #0]
 8012f24:	3210      	adds	r2, #16
 8012f26:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8012f2a:	4422      	add	r2, r4
 8012f2c:	6002      	str	r2, [r0, #0]
 8012f2e:	2b00      	cmp	r3, #0
 8012f30:	d0e8      	beq.n	8012f04 <enet_rxframe_drop+0x24>
 8012f32:	3310      	adds	r3, #16
 8012f34:	e7f3      	b.n	8012f1e <enet_rxframe_drop+0x3e>
 8012f36:	bf00      	nop
 8012f38:	2000fcfc 	strdcs	pc, [r0], -ip
 8012f3c:	2000fcf4 	strdcs	pc, [r0], -r4
 8012f40:	40029000 	andmi	r9, r2, r0

08012f44 <enet_rxframe_size_get>:
 8012f44:	b508      	push	{r3, lr}
 8012f46:	4b0c      	ldr	r3, [pc, #48]	; (8012f78 <enet_rxframe_size_get+0x34>)
 8012f48:	681b      	ldr	r3, [r3, #0]
 8012f4a:	6818      	ldr	r0, [r3, #0]
 8012f4c:	2800      	cmp	r0, #0
 8012f4e:	db10      	blt.n	8012f72 <enet_rxframe_size_get+0x2e>
 8012f50:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8012f54:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012f58:	d003      	beq.n	8012f62 <enet_rxframe_size_get+0x1e>
 8012f5a:	f7ff ffc1 	bl	8012ee0 <enet_rxframe_drop>
 8012f5e:	2001      	movs	r0, #1
 8012f60:	bd08      	pop	{r3, pc}
 8012f62:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8012f66:	2b21      	cmp	r3, #33	; 0x21
 8012f68:	d0f7      	beq.n	8012f5a <enet_rxframe_size_get+0x16>
 8012f6a:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8012f6e:	3804      	subs	r0, #4
 8012f70:	e7f6      	b.n	8012f60 <enet_rxframe_size_get+0x1c>
 8012f72:	2000      	movs	r0, #0
 8012f74:	e7f4      	b.n	8012f60 <enet_rxframe_size_get+0x1c>
 8012f76:	bf00      	nop
 8012f78:	2000fcfc 	strdcs	pc, [r0], -ip

08012f7c <enet_initpara_reset>:
 8012f7c:	2200      	movs	r2, #0
 8012f7e:	4b08      	ldr	r3, [pc, #32]	; (8012fa0 <enet_initpara_reset+0x24>)
 8012f80:	e9c3 2200 	strd	r2, r2, [r3]
 8012f84:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8012f88:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8012f8c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8012f90:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8012f94:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8012f98:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8012f9c:	639a      	str	r2, [r3, #56]	; 0x38
 8012f9e:	4770      	bx	lr
 8012fa0:	2000fd04 	andcs	pc, r0, r4, lsl #26

08012fa4 <enet_deinit>:
 8012fa4:	b508      	push	{r3, lr}
 8012fa6:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012faa:	f7fe fbfc 	bl	80117a6 <rcu_periph_reset_enable>
 8012fae:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012fb2:	f7fe fbfa 	bl	80117aa <rcu_periph_reset_disable>
 8012fb6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012fba:	f7ff bfdf 	b.w	8012f7c <enet_initpara_reset>
	...

08012fc0 <i2c_clock_config>:
 8012fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012fc2:	4605      	mov	r5, r0
 8012fc4:	2002      	movs	r0, #2
 8012fc6:	460c      	mov	r4, r1
 8012fc8:	4617      	mov	r7, r2
 8012fca:	f7fe fca1 	bl	8011910 <rcu_clock_freq_get>
 8012fce:	4603      	mov	r3, r0
 8012fd0:	4828      	ldr	r0, [pc, #160]	; (8013074 <i2c_clock_config+0xb4>)
 8012fd2:	4a29      	ldr	r2, [pc, #164]	; (8013078 <i2c_clock_config+0xb8>)
 8012fd4:	fbb3 f0f0 	udiv	r0, r3, r0
 8012fd8:	4293      	cmp	r3, r2
 8012fda:	bf34      	ite	cc
 8012fdc:	4601      	movcc	r1, r0
 8012fde:	2136      	movcs	r1, #54	; 0x36
 8012fe0:	686e      	ldr	r6, [r5, #4]
 8012fe2:	4a26      	ldr	r2, [pc, #152]	; (801307c <i2c_clock_config+0xbc>)
 8012fe4:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8012fe8:	430e      	orrs	r6, r1
 8012fea:	4294      	cmp	r4, r2
 8012fec:	606e      	str	r6, [r5, #4]
 8012fee:	d816      	bhi.n	801301e <i2c_clock_config+0x5e>
 8012ff0:	3001      	adds	r0, #1
 8012ff2:	2835      	cmp	r0, #53	; 0x35
 8012ff4:	d90d      	bls.n	8013012 <i2c_clock_config+0x52>
 8012ff6:	2236      	movs	r2, #54	; 0x36
 8012ff8:	622a      	str	r2, [r5, #32]
 8012ffa:	0064      	lsls	r4, r4, #1
 8012ffc:	fbb3 f4f4 	udiv	r4, r3, r4
 8013000:	2c04      	cmp	r4, #4
 8013002:	bf38      	it	cc
 8013004:	2404      	movcc	r4, #4
 8013006:	69ea      	ldr	r2, [r5, #28]
 8013008:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801300c:	4314      	orrs	r4, r2
 801300e:	61ec      	str	r4, [r5, #28]
 8013010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013012:	2802      	cmp	r0, #2
 8013014:	d801      	bhi.n	801301a <i2c_clock_config+0x5a>
 8013016:	2202      	movs	r2, #2
 8013018:	e7ee      	b.n	8012ff8 <i2c_clock_config+0x38>
 801301a:	6228      	str	r0, [r5, #32]
 801301c:	e7ed      	b.n	8012ffa <i2c_clock_config+0x3a>
 801301e:	4a18      	ldr	r2, [pc, #96]	; (8013080 <i2c_clock_config+0xc0>)
 8013020:	4294      	cmp	r4, r2
 8013022:	d8f5      	bhi.n	8013010 <i2c_clock_config+0x50>
 8013024:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8013028:	4351      	muls	r1, r2
 801302a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801302e:	fbb1 f1f2 	udiv	r1, r1, r2
 8013032:	3101      	adds	r1, #1
 8013034:	6229      	str	r1, [r5, #32]
 8013036:	b9a7      	cbnz	r7, 8013062 <i2c_clock_config+0xa2>
 8013038:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801303c:	fbb3 f4f4 	udiv	r4, r3, r4
 8013040:	69eb      	ldr	r3, [r5, #28]
 8013042:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8013046:	61eb      	str	r3, [r5, #28]
 8013048:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801304c:	b90b      	cbnz	r3, 8013052 <i2c_clock_config+0x92>
 801304e:	f044 0401 	orr.w	r4, r4, #1
 8013052:	69eb      	ldr	r3, [r5, #28]
 8013054:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8013058:	61eb      	str	r3, [r5, #28]
 801305a:	69eb      	ldr	r3, [r5, #28]
 801305c:	4323      	orrs	r3, r4
 801305e:	61eb      	str	r3, [r5, #28]
 8013060:	e7d6      	b.n	8013010 <i2c_clock_config+0x50>
 8013062:	2219      	movs	r2, #25
 8013064:	4354      	muls	r4, r2
 8013066:	fbb3 f4f4 	udiv	r4, r3, r4
 801306a:	69eb      	ldr	r3, [r5, #28]
 801306c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8013070:	e7e9      	b.n	8013046 <i2c_clock_config+0x86>
 8013072:	bf00      	nop
 8013074:	000f4240 	andeq	r4, pc, r0, asr #4
 8013078:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 801307c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8013080:	00061a80 	andeq	r1, r6, r0, lsl #21

08013084 <i2c_ack_config>:
 8013084:	6803      	ldr	r3, [r0, #0]
 8013086:	2901      	cmp	r1, #1
 8013088:	bf0c      	ite	eq
 801308a:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 801308e:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8013092:	6003      	str	r3, [r0, #0]
 8013094:	4770      	bx	lr

08013096 <i2c_ackpos_config>:
 8013096:	6803      	ldr	r3, [r0, #0]
 8013098:	b919      	cbnz	r1, 80130a2 <i2c_ackpos_config+0xc>
 801309a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801309e:	6003      	str	r3, [r0, #0]
 80130a0:	4770      	bx	lr
 80130a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80130a6:	e7fa      	b.n	801309e <i2c_ackpos_config+0x8>

080130a8 <i2c_master_addressing>:
 80130a8:	3202      	adds	r2, #2
 80130aa:	bf0c      	ite	eq
 80130ac:	f021 0101 	biceq.w	r1, r1, #1
 80130b0:	f041 0101 	orrne.w	r1, r1, #1
 80130b4:	6101      	str	r1, [r0, #16]
 80130b6:	4770      	bx	lr

080130b8 <i2c_enable>:
 80130b8:	6803      	ldr	r3, [r0, #0]
 80130ba:	f043 0301 	orr.w	r3, r3, #1
 80130be:	6003      	str	r3, [r0, #0]
 80130c0:	4770      	bx	lr

080130c2 <i2c_start_on_bus>:
 80130c2:	6803      	ldr	r3, [r0, #0]
 80130c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80130c8:	6003      	str	r3, [r0, #0]
 80130ca:	4770      	bx	lr

080130cc <i2c_stop_on_bus>:
 80130cc:	6803      	ldr	r3, [r0, #0]
 80130ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80130d2:	6003      	str	r3, [r0, #0]
 80130d4:	4770      	bx	lr

080130d6 <i2c_data_transmit>:
 80130d6:	6101      	str	r1, [r0, #16]
 80130d8:	4770      	bx	lr

080130da <i2c_data_receive>:
 80130da:	6900      	ldr	r0, [r0, #16]
 80130dc:	b2c0      	uxtb	r0, r0
 80130de:	4770      	bx	lr

080130e0 <i2c_flag_get>:
 80130e0:	098b      	lsrs	r3, r1, #6
 80130e2:	581a      	ldr	r2, [r3, r0]
 80130e4:	2301      	movs	r3, #1
 80130e6:	f001 011f 	and.w	r1, r1, #31
 80130ea:	408b      	lsls	r3, r1
 80130ec:	4213      	tst	r3, r2
 80130ee:	bf14      	ite	ne
 80130f0:	2001      	movne	r0, #1
 80130f2:	2000      	moveq	r0, #0
 80130f4:	4770      	bx	lr

080130f6 <i2c_flag_clear>:
 80130f6:	f240 5301 	movw	r3, #1281	; 0x501
 80130fa:	4299      	cmp	r1, r3
 80130fc:	b510      	push	{r4, lr}
 80130fe:	d102      	bne.n	8013106 <i2c_flag_clear+0x10>
 8013100:	6943      	ldr	r3, [r0, #20]
 8013102:	6983      	ldr	r3, [r0, #24]
 8013104:	bd10      	pop	{r4, pc}
 8013106:	2201      	movs	r2, #1
 8013108:	098c      	lsrs	r4, r1, #6
 801310a:	5823      	ldr	r3, [r4, r0]
 801310c:	f001 011f 	and.w	r1, r1, #31
 8013110:	408a      	lsls	r2, r1
 8013112:	ea23 0302 	bic.w	r3, r3, r2
 8013116:	5023      	str	r3, [r4, r0]
 8013118:	e7f4      	b.n	8013104 <i2c_flag_clear+0xe>

0801311a <i2s_init>:
 801311a:	b510      	push	{r4, lr}
 801311c:	69c4      	ldr	r4, [r0, #28]
 801311e:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 8013122:	f024 0408 	bic.w	r4, r4, #8
 8013126:	0424      	lsls	r4, r4, #16
 8013128:	0c24      	lsrs	r4, r4, #16
 801312a:	431c      	orrs	r4, r3
 801312c:	4314      	orrs	r4, r2
 801312e:	430c      	orrs	r4, r1
 8013130:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8013134:	61c4      	str	r4, [r0, #28]
 8013136:	bd10      	pop	{r4, pc}

08013138 <i2s_psc_config>:
 8013138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801313c:	4698      	mov	r8, r3
 801313e:	2302      	movs	r3, #2
 8013140:	6203      	str	r3, [r0, #32]
 8013142:	4b26      	ldr	r3, [pc, #152]	; (80131dc <i2s_psc_config+0xa4>)
 8013144:	4617      	mov	r7, r2
 8013146:	4298      	cmp	r0, r3
 8013148:	bf0c      	ite	eq
 801314a:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 801314e:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 8013152:	4a23      	ldr	r2, [pc, #140]	; (80131e0 <i2s_psc_config+0xa8>)
 8013154:	4605      	mov	r5, r0
 8013156:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8013158:	460e      	mov	r6, r1
 801315a:	4018      	ands	r0, r3
 801315c:	d036      	beq.n	80131cc <i2s_psc_config+0x94>
 801315e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8013160:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013164:	1f99      	subs	r1, r3, #6
 8013166:	2908      	cmp	r1, #8
 8013168:	d82c      	bhi.n	80131c4 <i2s_psc_config+0x8c>
 801316a:	3302      	adds	r3, #2
 801316c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 801316e:	481d      	ldr	r0, [pc, #116]	; (80131e4 <i2s_psc_config+0xac>)
 8013170:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8013174:	3201      	adds	r2, #1
 8013176:	fbb0 f0f2 	udiv	r0, r0, r2
 801317a:	4358      	muls	r0, r3
 801317c:	0040      	lsls	r0, r0, #1
 801317e:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 8013182:	f04f 030a 	mov.w	r3, #10
 8013186:	d124      	bne.n	80131d2 <i2s_psc_config+0x9a>
 8013188:	0a04      	lsrs	r4, r0, #8
 801318a:	435c      	muls	r4, r3
 801318c:	fbb4 f6f6 	udiv	r6, r4, r6
 8013190:	230a      	movs	r3, #10
 8013192:	3605      	adds	r6, #5
 8013194:	fbb6 f6f3 	udiv	r6, r6, r3
 8013198:	f006 0301 	and.w	r3, r6, #1
 801319c:	0876      	lsrs	r6, r6, #1
 801319e:	1eb2      	subs	r2, r6, #2
 80131a0:	2afd      	cmp	r2, #253	; 0xfd
 80131a2:	bf86      	itte	hi
 80131a4:	2300      	movhi	r3, #0
 80131a6:	2602      	movhi	r6, #2
 80131a8:	021b      	lslls	r3, r3, #8
 80131aa:	431e      	orrs	r6, r3
 80131ac:	ea46 0608 	orr.w	r6, r6, r8
 80131b0:	622e      	str	r6, [r5, #32]
 80131b2:	69eb      	ldr	r3, [r5, #28]
 80131b4:	f023 0307 	bic.w	r3, r3, #7
 80131b8:	61eb      	str	r3, [r5, #28]
 80131ba:	69eb      	ldr	r3, [r5, #28]
 80131bc:	433b      	orrs	r3, r7
 80131be:	61eb      	str	r3, [r5, #28]
 80131c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80131c4:	2b0f      	cmp	r3, #15
 80131c6:	bf08      	it	eq
 80131c8:	2314      	moveq	r3, #20
 80131ca:	e7cf      	b.n	801316c <i2s_psc_config+0x34>
 80131cc:	f7fe fba0 	bl	8011910 <rcu_clock_freq_get>
 80131d0:	e7d5      	b.n	801317e <i2s_psc_config+0x46>
 80131d2:	b90f      	cbnz	r7, 80131d8 <i2s_psc_config+0xa0>
 80131d4:	0944      	lsrs	r4, r0, #5
 80131d6:	e7d8      	b.n	801318a <i2s_psc_config+0x52>
 80131d8:	0984      	lsrs	r4, r0, #6
 80131da:	e7d6      	b.n	801318a <i2s_psc_config+0x52>
 80131dc:	40003800 	andmi	r3, r0, r0, lsl #16
 80131e0:	40021000 	andmi	r1, r2, r0
 80131e4:	017d7840 	cmneq	sp, r0, asr #16

080131e8 <i2s_enable>:
 80131e8:	69c3      	ldr	r3, [r0, #28]
 80131ea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80131ee:	61c3      	str	r3, [r0, #28]
 80131f0:	4770      	bx	lr

080131f2 <i2s_disable>:
 80131f2:	69c3      	ldr	r3, [r0, #28]
 80131f4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80131f8:	61c3      	str	r3, [r0, #28]
 80131fa:	4770      	bx	lr

080131fc <spi_dma_enable>:
 80131fc:	6843      	ldr	r3, [r0, #4]
 80131fe:	b919      	cbnz	r1, 8013208 <spi_dma_enable+0xc>
 8013200:	f043 0302 	orr.w	r3, r3, #2
 8013204:	6043      	str	r3, [r0, #4]
 8013206:	4770      	bx	lr
 8013208:	f043 0301 	orr.w	r3, r3, #1
 801320c:	e7fa      	b.n	8013204 <spi_dma_enable+0x8>
	...

08013210 <mac_address_get(unsigned char*)>:
 8013210:	2102      	movs	r1, #2
 8013212:	4a07      	ldr	r2, [pc, #28]	; (8013230 <mac_address_get(unsigned char*)+0x20>)
 8013214:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8013218:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 801321c:	7001      	strb	r1, [r0, #0]
 801321e:	7042      	strb	r2, [r0, #1]
 8013220:	0e1a      	lsrs	r2, r3, #24
 8013222:	7082      	strb	r2, [r0, #2]
 8013224:	0c1a      	lsrs	r2, r3, #16
 8013226:	70c2      	strb	r2, [r0, #3]
 8013228:	0a1a      	lsrs	r2, r3, #8
 801322a:	7102      	strb	r2, [r0, #4]
 801322c:	7143      	strb	r3, [r0, #5]
 801322e:	4770      	bx	lr
 8013230:	1ffff000 	svcne	0x00fff000

08013234 <__popcountsi2>:
 8013234:	0843      	lsrs	r3, r0, #1
 8013236:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 801323a:	1ac0      	subs	r0, r0, r3
 801323c:	0883      	lsrs	r3, r0, #2
 801323e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8013242:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8013246:	4418      	add	r0, r3
 8013248:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 801324c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8013250:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8013254:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8013258:	0e00      	lsrs	r0, r0, #24
 801325a:	4770      	bx	lr

Disassembly of section .rodata:

0801325c <vtable for DisplayHandler-0x100>:
	...
 8013264:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013268:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801326c:	00000000 	andeq	r0, r0, r0
 8013270:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013274:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013278:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 801327c:	70797464 	rsbsvc	r7, r9, r4, ror #8
 8013280:	00690065 	rsbeq	r0, r9, r5, rrx
 8013284:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013288:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 801328c:	756f6364 	strbvc	r6, [pc, #-868]!	; 8012f30 <enet_rxframe_drop+0x50>
 8013290:	2f00746e 	svccs	0x0000746e
 8013294:	6f666e69 	svcvs	0x00666e69
 8013298:	6f72672f 	svcvs	0x0072672f
 801329c:	6f637075 	svcvs	0x00637075
 80132a0:	00746e75 	rsbseq	r6, r4, r5, ror lr
 80132a4:	323a3131 	eorscc	r3, sl, #1073741836	; 0x4000000c
 80132a8:	31343a37 	teqcc	r4, r7, lsr sl
 80132ac:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 80132b0:	20313120 	eorscs	r3, r1, r0, lsr #2
 80132b4:	32323032 	eorscc	r3, r2, #50	; 0x32
 80132b8:	335b1b00 	cmpcc	fp, #0, 22
 80132bc:	534f6d32 	movtpl	r6, #64818	; 0xfd32
 80132c0:	65532043 	ldrbvs	r2, [r3, #-67]	; 0xffffffbd
 80132c4:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 80132c8:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 80132cc:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 80132d0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 80132d4:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 80132d8:	317b2072 	cmncc	fp, r2, ror r0
 80132dc:	6e552078 	mrcvs	0, 2, r2, cr5, cr8, {3}
 80132e0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80132e4:	1b7d6573 	blne	9f6c8b8 <__exidx_end+0x1f56dfc>
 80132e8:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 80132ec:	6f5f2e00 	svcvs	0x005f2e00
 80132f0:	74006373 	strvc	r6, [r0], #-883	; 0xfffffc8d
 80132f4:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
 80132f8:	76726573 			; <UNDEFINED> instruction: 0x76726573
 80132fc:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
 8013300:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8013304:	6f6e0070 	svcvs	0x006e0070
 8013308:	4f3d6564 	svcmi	0x003d6564
 801330c:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013310:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8013314:	73250072 			; <UNDEFINED> instruction: 0x73250072
 8013318:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 801331c:	00642547 	rsbeq	r2, r4, r7, asr #10
 8013320:	2043534f 	subcs	r5, r3, pc, asr #6
 8013324:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8013328:	0031206c 	eorseq	r2, r1, ip, rrx
 801332c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8013330:	37303146 	ldrcc	r3, [r0, -r6, asr #2]!
 8013334:	49004352 	stmdbmi	r0, {r1, r4, r6, r8, r9, lr}
 8013338:	25203a50 	strcs	r3, [r0, #-2640]!	; 0xfffff5b0
 801333c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013340:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013344:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 8013348:	6e490063 	cdpvs	0, 4, cr0, cr9, cr3, {3}
 801334c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013350:	74754f00 	ldrbtvc	r4, [r5], #-3840	; 0xfffff100
 8013354:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013358:	00000000 	andeq	r0, r0, r0

0801335c <vtable for DisplayHandler>:
	...
 8013364:	080085b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, sl, pc}
 8013368:	080085db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, sl, pc}
 801336c:	080086b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, pc}

08013370 <vtable for PixelDmxStartStop>:
	...
 8013378:	080085b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, pc}
 801337c:	080085f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, sl, pc}
 8013380:	080085b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, pc}
 8013384:	080085c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, pc}

08013388 <vtable for Handler>:
	...
 8013390:	080085d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, pc}
 8013394:	080085e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, sl, pc}
 8013398:	08008ccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, pc}
 801339c:	08008cc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, pc}
 80133a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}

080133a4 <CSWTCH.71>:
 80133a4:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80133a8:	 			; <UNDEFINED> instruction: 0x332e3146

080133a9 <SOFTWARE_VERSION>:
 80133a9:	00332e31 	eorseq	r2, r3, r1, lsr lr

080133ad <gamma10_0>:
 80133ad:	03020100 	movweq	r0, #8448	; 0x2100
 80133b1:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80133b5:	0b0a0908 	bleq	82957dd <__exidx_end+0x27fd21>
 80133b9:	0f0e0d0c 	svceq	0x000e0d0c
 80133bd:	13121110 	tstne	r2, #16, 2
 80133c1:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80133c5:	1b1a1918 	blne	869982d <__exidx_end+0x683d71>
 80133c9:	1f1e1d1c 	svcne	0x001e1d1c
 80133cd:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80133d1:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80133d5:	2b2a2928 	blcs	8a9d87d <__exidx_end+0xa87dc1>
 80133d9:	2f2e2d2c 	svccs	0x002e2d2c
 80133dd:	33323130 	teqcc	r2, #48, 2
 80133e1:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80133e5:	3b3a3938 	blcc	8ea18cd <__exidx_end+0xe8be11>
 80133e9:	3f3e3d3c 	svccc	0x003e3d3c
 80133ed:	43424140 	movtmi	r4, #8512	; 0x2140
 80133f1:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80133f5:	4b4a4948 	blmi	92a591d <__exidx_end+0x128fe61>
 80133f9:	4f4e4d4c 	svcmi	0x004e4d4c
 80133fd:	53525150 	cmppl	r2, #80, 2
 8013401:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8013405:	5b5a5958 	blpl	96a996d <__exidx_end+0x1693eb1>
 8013409:	5f5e5d5c 	svcpl	0x005e5d5c
 801340d:	63626160 	cmnvs	r2, #96, 2
 8013411:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8013415:	6b6a6968 	blvs	9aad9bd <__exidx_end+0x1a97f01>
 8013419:	6f6e6d6c 	svcvs	0x006e6d6c
 801341d:	73727170 	cmnvc	r2, #112, 2
 8013421:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8013425:	7b7a7978 	blvc	9eb1a0d <__exidx_end+0x1e9bf51>
 8013429:	7f7e7d7c 	svcvc	0x007e7d7c
 801342d:	83828180 	orrhi	r8, r2, #128, 2
 8013431:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8013435:	8b8a8988 	blhi	62b5a5d <__stack_size+0x62b3a5d>
 8013439:	8f8e8d8c 	svchi	0x008e8d8c
 801343d:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8013441:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8013445:	9b9a9998 	blls	66b9aad <__stack_size+0x66b7aad>
 8013449:	9f9e9d9c 	svcls	0x009e9d9c
 801344d:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8013451:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8013455:	abaaa9a8 	blge	6abdafd <__stack_size+0x6abbafd>
 8013459:	afaeadac 	svcge	0x00aeadac
 801345d:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8013461:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8013465:	bbbab9b8 	bllt	6ec1b4d <__stack_size+0x6ebfb4d>
 8013469:	bfbebdbc 	svclt	0x00bebdbc
 801346d:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8013471:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8013475:	cbcac9c8 	blgt	72c5b9d <__stack_size+0x72c3b9d>
 8013479:	cfcecdcc 	svcgt	0x00cecdcc
 801347d:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8013481:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8013485:	dbdad9d8 	blle	76c9bed <__stack_size+0x76c7bed>
 8013489:	dfdedddc 	svcle	0x00dedddc
 801348d:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8013491:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8013495:	ebeae9e8 	bl	7acdc3d <__stack_size+0x7acbc3d>
 8013499:	efeeedec 	svc	0x00eeedec
 801349d:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80134a1:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80134a5:	fbfaf9f8 	blx	7ed1c8f <__stack_size+0x7ecfc8f>
 80134a9:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc
 80134ad:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80134b1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134b5:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80134b9:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80134bd:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80134c1:	0a73252c 	beq	9cdc979 <__exidx_end+0x1cc6ebd>
 80134c5:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80134c9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80134cd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80134d1:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80134d5:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80134d9:	4f000a64 	svcmi	0x00000a64
 80134dd:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80134e1:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80134e5:	616c7073 	smcvs	50947	; 0xc703
 80134e9:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80134ed:	6674000a 	ldrbtvs	r0, [r4], -sl
 80134f1:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80134f5:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80134f9:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80134fd:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8013501:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8013505:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013509:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 801350d:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8013511:	20505446 	subscs	r5, r0, r6, asr #8
 8013515:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8013519:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 801351d:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8013521:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8013525:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8013529:	525b2066 	subspl	r2, fp, #102	; 0x66
 801352d:	6f6f6265 	svcvs	0x006f6265
 8013531:	00205d74 	eoreq	r5, r0, r4, ror sp
 8013535:	4f525245 	svcmi	0x00525245
 8013539:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 801353d:	000a7465 	andeq	r7, sl, r5, ror #8
 8013541:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8013545:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8013549:	616c7073 	smcvs	50947	; 0xc703
 801354d:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8013551:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8013555:	000a2123 	andeq	r2, sl, r3, lsr #2
 8013559:	4f525245 	svcmi	0x00525245
 801355d:	0a3f2352 	beq	8fdc2ad <__exidx_end+0xfc67f1>
 8013561:	62657200 	rsbvs	r7, r5, #0, 4
 8013565:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8013569:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 801356d:	00237473 	eoreq	r7, r3, r3, ror r4
 8013571:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8013575:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8013579:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801357d:	76002365 	strvc	r2, [r0], -r5, ror #6
 8013581:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013585:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8013589:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 801358d:	63616600 	cmnvs	r1, #0, 12
 8013591:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013595:	 	tstmi	r0, r3, lsr #6

08013598 <s_Node>:
 8013598:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801359c:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80135a8:	41730000 	cmnmi	r3, r0
 80135ac:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80135b0:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80135bc:	2043534f 	subcs	r5, r3, pc, asr #6
 80135c0:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80135c4:	00007265 	andeq	r7, r0, r5, ror #4
 80135c8:	00000000 	andeq	r0, r0, r0
 80135cc:	544c0000 	strbpl	r0, [ip], #-0
 80135d0:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80135e0:	2043534f 	subcs	r5, r3, pc, asr #6
 80135e4:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80135e8:	0000746e 	andeq	r7, r0, lr, ror #8
 80135ec:	00000000 	andeq	r0, r0, r0
 80135f0:	44520000 	ldrbmi	r0, [r2], #-0
 80135f4:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80135f8:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80135fc:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8013600:	0000796c 	andeq	r7, r0, ip, ror #18
 8013604:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8013608:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8013614:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8013618:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8013628:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8013638:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 801363c:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8013640:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8013644:	00000072 	andeq	r0, r0, r2, ror r0
 8013648:	00000000 	andeq	r0, r0, r0
 801364c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

0801365e <s_Output>:
 801365e:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801366a:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8013676:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801367a:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801367e:	00000000 	andeq	r0, r0, r0
 8013682:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8013686:	0000006c 	andeq	r0, r0, ip, rrx
 801368a:	00000000 	andeq	r0, r0, r0
 801368e:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8013692:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8013696:	00000000 	andeq	r0, r0, r0
 801369a:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80136a6:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80136aa:	00006769 	andeq	r6, r0, r9, ror #14
 80136ae:	00000000 	andeq	r0, r0, r0
 80136b2:	70657453 	rsbvc	r7, r5, r3, asr r4
 80136b6:	00726570 	rsbseq	r6, r2, r0, ror r5
 80136ba:	00000000 	andeq	r0, r0, r0
 80136be:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80136c2:	00007265 	andeq	r7, r0, r5, ror #4
 80136c6:	00000000 	andeq	r0, r0, r0
 80136ca:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80136ce:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80136d2:	00000000 	andeq	r0, r0, r0
 80136d6:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80136da:	00006c61 	andeq	r6, r0, r1, ror #24
 80136de:	00000000 	andeq	r0, r0, r0
 80136e2:	20424752 	subcs	r4, r2, r2, asr r7
 80136e6:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80136ea:	0000006c 	andeq	r0, r0, ip, rrx
	...

080136f0 <RemoteConfig::s_GET>:
 80136f0:	0800a13d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sp, pc}
 80136f4:	00000000 	andeq	r0, r0, r0
 80136f8:	08013562 	stmdaeq	r1, {r1, r5, r6, r8, sl, ip, sp}
 80136fc:	00000008 	andeq	r0, r0, r8
 8013700:	08009611 	stmdaeq	r0, {r0, r4, r9, sl, ip, pc}
 8013704:	00000000 	andeq	r0, r0, r0
 8013708:	0801356b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, ip, sp}
 801370c:	00000005 	andeq	r0, r0, r5
 8013710:	08009611 	stmdaeq	r0, {r0, r4, r9, sl, ip, pc}
 8013714:	00000000 	andeq	r0, r0, r0
 8013718:	08013571 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, ip, sp}
 801371c:	00000006 	andeq	r0, r0, r6
 8013720:	080097c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl, ip, pc}
 8013724:	00000000 	andeq	r0, r0, r0
 8013728:	08013578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, sp}
 801372c:	00000007 	andeq	r0, r0, r7
 8013730:	08009785 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, ip, pc}
 8013734:	00000000 	andeq	r0, r0, r0
 8013738:	08013580 	stmdaeq	r1, {r7, r8, sl, ip, sp}
 801373c:	00000008 	andeq	r0, r0, r8
 8013740:	080096e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, ip, pc}
 8013744:	00000000 	andeq	r0, r0, r0
 8013748:	08013547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp}
 801374c:	00000008 	andeq	r0, r0, r8
 8013750:	08009b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp, ip, pc}
 8013754:	00000000 	andeq	r0, r0, r0
 8013758:	08013589 	stmdaeq	r1, {r0, r3, r7, r8, sl, ip, sp}
 801375c:	00010004 	andeq	r0, r1, r4
 8013760:	08009735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, ip, pc}
 8013764:	00000000 	andeq	r0, r0, r0
 8013768:	08013541 	stmdaeq	r1, {r0, r6, r8, sl, ip, sp}
 801376c:	00000005 	andeq	r0, r0, r5
 8013770:	08009e2d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, fp, ip, pc}
 8013774:	00000000 	andeq	r0, r0, r0
 8013778:	0801358e 	stmdaeq	r1, {r1, r2, r3, r7, r8, sl, ip, sp}
 801377c:	00000009 	andeq	r0, r0, r9

08013780 <RemoteConfig::s_SET>:
 8013780:	080098e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, fp, ip, pc}
 8013784:	00000000 	andeq	r0, r0, r0
 8013788:	08013541 	stmdaeq	r1, {r0, r6, r8, sl, ip, sp}
 801378c:	00010005 	andeq	r0, r1, r5
 8013790:	080098bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, ip, pc}
 8013794:	00000000 	andeq	r0, r0, r0
 8013798:	08013547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, sp}
 801379c:	00010008 	andeq	r0, r1, r8
 80137a0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80137a4:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80137a8:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80137ac:	0a64253d 	beq	991cca8 <__exidx_end+0x19071ec>
 80137b0:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80137b4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80137b8:	002c2273 	eoreq	r2, ip, r3, ror r2
 80137bc:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80137c0:	000a7325 	andeq	r7, sl, r5, lsr #6
 80137c4:	6f626552 	svcvs	0x00626552
 80137c8:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80137cc:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80137d0:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80137d4:	6f6f6265 	svcvs	0x006f6265
 80137d8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80137dc:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80137e0:	6f637200 	svcvs	0x00637200
 80137e4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80137e8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137ec:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80137f0:	6b726f77 	blvs	9caf5d4 <__exidx_end+0x1c99b18>
 80137f4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137f8:	63736f00 	cmnvs	r3, #0, 30
 80137fc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013800:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 8013804:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8013808:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801380c:	00000000 	andeq	r0, r0, r0

08013810 <RemoteConfig::s_TXT>:
 8013810:	08009b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, pc}
 8013814:	00000000 	andeq	r0, r0, r0
 8013818:	08009d85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, ip, pc}
 801381c:	00000000 	andeq	r0, r0, r0
 8013820:	080137e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, ip, sp}
 8013824:	0000000b 	andeq	r0, r0, fp
 8013828:	0000000c 	andeq	r0, r0, ip
 801382c:	08009b41 	stmdaeq	r0, {r0, r6, r8, r9, fp, ip, pc}
 8013830:	00000000 	andeq	r0, r0, r0
 8013834:	08009db5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, ip, pc}
 8013838:	00000000 	andeq	r0, r0, r0
 801383c:	080137ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, ip, sp}
 8013840:	0000000b 	andeq	r0, r0, fp
 8013844:	00000000 	andeq	r0, r0, r0
 8013848:	08009b6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp, ip, pc}
 801384c:	00000000 	andeq	r0, r0, r0
 8013850:	08009ddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, pc}
 8013854:	00000000 	andeq	r0, r0, r0
 8013858:	080137f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
 801385c:	00000007 	andeq	r0, r0, r7
 8013860:	00000008 	andeq	r0, r0, r8
 8013864:	08009b99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, ip, pc}
 8013868:	00000000 	andeq	r0, r0, r0
 801386c:	08009e05 	stmdaeq	r0, {r0, r2, r9, sl, fp, ip, pc}
 8013870:	00000000 	andeq	r0, r0, r0
 8013874:	08013801 	stmdaeq	r1, {r0, fp, ip, sp}
 8013878:	0000000b 	andeq	r0, r0, fp
 801387c:	00000003 	andeq	r0, r0, r3
 8013880:	00544547 	subseq	r4, r4, r7, asr #10
 8013884:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8013888:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 801388c:	0a200050 	beq	88139d4 <__exidx_end+0x7fdf18>
 8013890:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8013894:	43003a00 	movwmi	r3, #2560	; 0xa00
 8013898:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801389c:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 80138a0:	00657079 	rsbeq	r7, r5, r9, ror r0
 80138a4:	61003b20 	tstvs	r0, r0, lsr #22
 80138a8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80138ac:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80138b0:	6a2f6e6f 	bvs	8bef274 <__exidx_end+0xbd97b8>
 80138b4:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80138b8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80138bc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80138c0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80138c4:	2f006874 	svccs	0x00006874
 80138c8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80138cc:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80138d0:	2f006c6d 	svccs	0x00006c6d
 80138d4:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80138d8:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80138dc:	2f007373 	svccs	0x00007373
 80138e0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80138e4:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80138e8:	736a2f00 	cmnvc	sl, #0, 30
 80138ec:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80138f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80138f4:	72657600 	rsbvc	r7, r5, #0, 12
 80138f8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80138fc:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8013900:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8013904:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013908:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801390c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8013910:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8013914:	6a2f0079 	bvs	8bd3b00 <__exidx_end+0xbbe044>
 8013918:	2f6e6f73 	svccs	0x006e6f73
 801391c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8013920:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8013924:	6f6f6265 	svcvs	0x006f6265
 8013928:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 801392c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8013930:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8013934:	434f4421 	movtmi	r4, #62497	; 0xf421
 8013938:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801393c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8013940:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013944:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013948:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 801394c:	3e646165 	powccsz	f6, f4, f5
 8013950:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013954:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8013958:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 801395c:	742f3c74 	strtvc	r3, [pc], #-3188	; 8013964 <RemoteConfig::s_TXT+0x154>
 8013960:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013964:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013968:	3e646165 	powccsz	f6, f4, f5
 801396c:	6f623c0a 	svcvs	0x00623c0a
 8013970:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8013974:	4f3e3168 	svcmi	0x003e3168
 8013978:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801397c:	2f3c3e31 	svccs	0x003c3e31
 8013980:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013984:	2f3c0a3e 	svccs	0x003c0a3e
 8013988:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801398c:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8013990:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8013994:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8013998:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 801399c:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 80139a0:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80139a4:	71655200 	cmnvc	r5, r0, lsl #4
 80139a8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80139ac:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80139b0:	20797469 	rsbscs	r7, r9, r9, ror #8
 80139b4:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80139b8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80139bc:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 80139c0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80139c4:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80139c8:	6f542049 	svcvs	0x00542049
 80139cc:	6f4c206f 	svcvs	0x004c206f
 80139d0:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 80139d4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 80139d8:	206c616e 	rsbcs	r6, ip, lr, ror #2
 80139dc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80139e0:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 80139e4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80139e8:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80139ec:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80139f0:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80139f4:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80139f8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80139fc:	00646574 	rsbeq	r6, r4, r4, ror r5
 8013a00:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8013a04:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8013a08:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8013a0c:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8013a10:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8013a14:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8013a18:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8013a1c:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8013a20:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8013a24:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8013a28:	434f4421 	movtmi	r4, #62497	; 0xf421
 8013a2c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8013a30:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8013a34:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013a38:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013a3c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8013a40:	3e646165 	powccsz	f6, f4, f5
 8013a44:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013a48:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8013a4c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8013a50:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8013a54:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8013a58:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013a5c:	0a3e6461 	beq	8facbe8 <__exidx_end+0xf9712c>
 8013a60:	646f623c 	strbtvs	r6, [pc], #-572	; 8013a68 <RemoteConfig::s_TXT+0x258>
 8013a64:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013a68:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8013a6c:	31682f3c 	cmncc	r8, ip, lsr pc
 8013a70:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8013a74:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013a78:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013a7c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013a80:	5448000a 	strbpl	r0, [r8], #-10
 8013a84:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8013a88:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8013a8c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8013a90:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8013a94:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8013a98:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013a9c:	6f430a0d 	svcvs	0x00430a0d
 8013aa0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013aa4:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8013aa8:	203a6570 	eorscs	r6, sl, r0, ror r5
 8013aac:	0a0d7325 	beq	8370748 <__exidx_end+0x35ac8c>
 8013ab0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013ab4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013ab8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8013abc:	203a6874 	eorscs	r6, sl, r4, ror r8
 8013ac0:	0a0d7525 	beq	8370f5c <__exidx_end+0x35b4a0>
 8013ac4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8013ac8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8013acc:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8013ad0:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8013ad4:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8013ad8:	 	ldrbvs	r0, [r4, #-10]!

08013ada <contentType>:
 8013ada:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013ade:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013ae2:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8013afa:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013afe:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8013b1a:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013b1e:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8013b22:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8013b26:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8013b3a:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8013b3e:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8013b42:	2f6e6f69 	svccs	0x006e6f69
 8013b46:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08013b5a <RemoteConfigConst::PARAMS_DISABLE>:
 8013b5a:	61736964 	cmnvs	r3, r4, ror #18
 8013b5e:	00656c62 	rsbeq	r6, r5, r2, ror #24

08013b62 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8013b62:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8013b66:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8013b6a:	00747874 	rsbseq	r7, r4, r4, ror r8

08013b6e <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8013b6e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013b72:	5f79616c 	svcpl	0x0079616c
 8013b76:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013b7b <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8013b7b:	61736964 	cmnvs	r3, r4, ror #18
 8013b7f:	5f656c62 	svcpl	0x00656c62
 8013b83:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8013b87:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013b89 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8013b89:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b8d:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8013b91:	6f6f6265 	svcvs	0x006f6265
 8013b95:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08013b97 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8013b97:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b9b:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8013637 <s_Node+0x9f>
 8013b9f:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013ba3:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013ba5 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8013ba5:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013ba9:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8013bad:	6f746361 	svcvs	0x00746361
 8013bb1:	7b007972 	blvc	8032181 <__exidx_end+0x1c6c5>
 8013bb5:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8013bb9:	7b3a2274 	blvc	8e9c591 <__exidx_end+0xe86ad5>
 8013bbd:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8013bc1:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8013bc5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013bc9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013bcd:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8013bd1:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8013bd5:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bd9:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bdd:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8013be1:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013be5:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013be9:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bed:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bf1:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013bf5:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013bf9:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013bfd:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013c01:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013c05:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8013c09:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8013c0d:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8013c11:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013c15:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013c19:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013c1d:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013c21:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013c25:	616f6222 	cmnvs	pc, r2, lsr #4
 8013c29:	3a226472 	bcc	88acdf9 <__exidx_end+0x89733d>
 8013c2d:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013c31:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8013c35:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8013c39:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8013c3d:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8013c41:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013c45:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013c49:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8013c4d:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8013c51:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8013c55:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013c59:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8013c5d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013c61:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8013c65:	7b000a7d 	blvc	8016661 <__exidx_end+0xba5>
 8013c69:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013c6d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013c71:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8013c75:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013c79:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8013c7d:	7b3a2273 	blvc	8e9c651 <__exidx_end+0xe86b95>
 8013c81:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8013c85:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013c89:	4f223a22 	svcmi	0x00223a22
 8013c8d:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013c91:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8013c95:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8013c99:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8013c9d:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8013ca1:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8013ca5:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8013ca9:	69502058 	ldmdbvs	r0, {r3, r4, r6, sp}^
 8013cad:	226c6578 	rsbcs	r6, ip, #120, 10	; 0x1e000000
 8013cb1:	656e222c 	strbvs	r2, [lr, #-556]!	; 0xfffffdd4
 8013cb5:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013cb9:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 8013cbd:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013cc1:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8013cc5:	226b726f 	rsbcs	r7, fp, #-268435450	; 0xf0000006
 8013cc9:	6372222c 	cmnvs	r2, #44, 4	; 0xc0000002
 8013ccd:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013cd1:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 8013cd5:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013cd9:	6f6d6552 	svcvs	0x006d6552
 8013cdd:	63206574 			; <UNDEFINED> instruction: 0x63206574
 8013ce1:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013ce5:	61727567 	cmnvs	r2, r7, ror #10
 8013ce9:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013ced:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

08013cf1 <index_html>:
 8013cf1:	4f44213c 	svcmi	0x0044213c
 8013cf5:	50595443 	subspl	r5, r9, r3, asr #8
 8013cf9:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8013cfd:	0a3e6c6d 	beq	8faeeb9 <__exidx_end+0xf993fd>
 8013d01:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8013d05:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013d09:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013d0d:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8013d11:	6b6e696c 	blvs	9bae2c9 <__exidx_end+0x1b9880d>
 8013d15:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8013d19:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8013d1d:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013d21:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013d25:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8013d29:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8013d2d:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8013d31:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8013d35:	20227373 	eorcs	r7, r2, r3, ror r3
 8013d39:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8013d3d:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013d41:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013d45:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013d49:	0a3e656c 	beq	8fad301 <__exidx_end+0xf97845>
 8013d4d:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013d51:	0a3e6461 	beq	8facedd <__exidx_end+0xf97421>
 8013d55:	646f623c 	strbtvs	r6, [pc], #-572	; 8013d5d <index_html+0x6c>
 8013d59:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d5d:	6165683c 	cmnvs	r5, ip, lsr r8
 8013d61:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8013d65:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8013d69:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8013d6d:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8013d71:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8013d75:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013d79:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013d7d:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013d81:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d85:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8013d89:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8013d8d:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8013d91:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8013d95:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8013d99:	6f746365 	svcvs	0x00746365
 8013d9d:	20227972 	eorcs	r7, r2, r2, ror r9
 8013da1:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013da5:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8013da9:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8013dad:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013db1:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8013db5:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8013db9:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8013dbd:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8013dc1:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8013dc5:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8013dc9:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8013dcd:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8013dd1:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8013dd5:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013dd9:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8013ddd:	20227478 	eorcs	r7, r2, r8, ror r4
 8013de1:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013de5:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8013de9:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8013ded:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8013df1:	0a3e656c 	beq	8fad3a9 <__exidx_end+0xf978ed>
 8013df5:	6f663c09 	svcvs	0x00663c09
 8013df9:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8013dfd:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8013e01:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013e05:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8013e09:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013e0d:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8013e11:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013e15:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8013e19:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013e1d:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013e21:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8013e25:	20747069 	rsbscs	r7, r4, r9, rrx
 8013e29:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8013e2d:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8013e31:	6a2e7865 	bvs	8bb1fcd <__exidx_end+0xb9c511>
 8013e35:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8013e39:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8013e3d:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8013e41:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8013e45:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013e49:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013e4d:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013e51:	 	svcvs	0x0062000a

08013e53 <styles_css>:
 8013e53:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013e57:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013e5b:	63616220 	cmnvs	r1, #32, 4
 8013e5f:	6f72676b 	svcvs	0x0072676b
 8013e63:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8013e67:	6f6c6f63 	svcvs	0x006c6f63
 8013e6b:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e6f:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e73:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8013e77:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8013e7b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013e7f:	6f6c6f63 	svcvs	0x006c6f63
 8013e83:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e87:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e8b:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8013e8f:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8013e93:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8013e97:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8013e9b:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8013e9f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013ea3:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013ea7:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013eab:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013eaf:	0a3b7865 	beq	8ef204b <__exidx_end+0xedc58f>
 8013eb3:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8013eb7:	0a7b2069 	beq	9edc063 <__exidx_end+0x1ec65a7>
 8013ebb:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8013ebf:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8013ec3:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8013ec7:	6f6e203a 	svcvs	0x006e203a
 8013ecb:	0a3b656e 	beq	8eed48b <__exidx_end+0xed79cf>
 8013ecf:	616d2020 	cmnvs	sp, r0, lsr #32
 8013ed3:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8013ed7:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8013edb:	70352078 	eorsvc	r2, r5, r8, ror r0
 8013edf:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8013ee3:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8013ee7:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013eeb:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013eef:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013ef3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013ef7:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013efb:	0a3b7865 	beq	8ef2097 <__exidx_end+0xedc5db>
 8013eff:	6f622020 	svcvs	0x00622020
 8013f03:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013f07:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013f0b:	3a737569 	bcc	9cf14b7 <__exidx_end+0x1cdb9fb>
 8013f0f:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013f13:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013f17:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013f1b:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013f1f:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f23:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013f27:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013f2b:	0a3b7870 	beq	8ef20f3 <__exidx_end+0xedc637>
 8013f2f:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8013f33:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013f37:	0a7b2072 	beq	9edc107 <__exidx_end+0x1ec664b>
 8013f3b:	69642020 	stmdbvs	r4!, {r5, sp}^
 8013f3f:	616c7073 	smcvs	50947	; 0xc703
 8013f43:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8013f47:	3b78656c 	blcc	9e2d4ff <__exidx_end+0x1e17a43>
 8013f4b:	6a20200a 	bvs	881bf7b <__exidx_end+0x8064bf>
 8013f4f:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8013f53:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8013f57:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013f5b:	203a746e 	eorscs	r7, sl, lr, ror #8
 8013f5f:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8013f63:	0a3b7265 	beq	8ef08ff <__exidx_end+0xedae43>
 8013f67:	6f622020 	svcvs	0x00622020
 8013f6b:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013f6f:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013f73:	3a737569 	bcc	9cf151f <__exidx_end+0x1cdba63>
 8013f77:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013f7b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013f7f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013f83:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013f87:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f8b:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013f8f:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013f93:	0a3b7870 	beq	8ef215b <__exidx_end+0xedc69f>
 8013f97:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08013f9c <HttpContent>:
 8013f9c:	080138d4 	stmdaeq	r1, {r2, r4, r6, r7, fp, ip, sp}
 8013fa0:	08013e53 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, fp, ip, sp}
 8013fa4:	080138e0 	stmdaeq	r1, {r5, r6, r7, fp, ip, sp}
 8013fa8:	08013fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 8013fac:	080138c8 	stmdaeq	r1, {r3, r6, r7, fp, ip, sp}
 8013fb0:	08013cf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, fp, ip, sp}

08013fb4 <index_js>:
 8013fb4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8013fb8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8013fbc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013fc0:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8013fc4:	534a7465 	movtpl	r7, #42085	; 0xa465
 8013fc8:	6a284e4f 	bvs	8a2790c <__exidx_end+0xa11e50>
 8013fcc:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013fd0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8013fd4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8013fd8:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8013fdc:	6a2f273d 	bvs	8bddcd8 <__exidx_end+0xbc821c>
 8013fe0:	2f6e6f73 	svccs	0x006e6f73
 8013fe4:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8013fe8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8013fec:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8013ff0:	20797274 	rsbscs	r7, r9, r4, ror r2
 8013ff4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8013ff8:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8013ffc:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8014000:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8014004:	20746961 	rsbscs	r6, r4, r1, ror #18
 8014008:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 801400c:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8014010:	0a3b296c 	beq	8ede5c8 <__exidx_end+0xec8b0c>
 8014014:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8014018:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 801401c:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8014020:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8014024:	73657220 	cmnvc	r5, #32, 4
 8014028:	6f736a2e 	svcvs	0x00736a2e
 801402c:	3b29286e 	blcc	8a5e1ec <__exidx_end+0xa48730>
 8014030:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014034:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8014038:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 801403c:	6f727265 	svcvs	0x00727265
 8014040:	7b202972 	blvc	881e610 <__exidx_end+0x808b54>
 8014044:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014048:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 801404c:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8014050:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8014054:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8014058:	3b29726f 	blcc	8a70a1c <__exidx_end+0xa5af60>
 801405c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014060:	0a0a7d0a 	beq	82b3490 <__exidx_end+0x29d9d4>
 8014064:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014068:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801406c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014070:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8014074:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014078:	73694c72 	cmnvc	r9, #29184	; 0x7200
 801407c:	20292874 	eorcs	r2, r9, r4, ror r8
 8014080:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8014084:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014088:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801408c:	6177613d 	cmnvs	r7, sp, lsr r1
 8014090:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014094:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014098:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801409c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140a0:	0a3b2927 	beq	8ede544 <__exidx_end+0xec8a88>
 80140a4:	6f640909 	svcvs	0x00640909
 80140a8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80140ac:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80140b0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80140b4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80140b8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80140bc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80140c0:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80140c4:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80140c8:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80140cc:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80140d0:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80140d4:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80140d8:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80140dc:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80140e0:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80140e4:	2b656d61 	blcs	996f670 <__exidx_end+0x1959bb4>
 80140e8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014068 <index_js+0xb4>
 80140ec:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80140f0:	2b223e69 	blcs	88a3a9c <__exidx_end+0x88dfe0>
 80140f4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140f8:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80140fc:	6f6e2e74 	svcvs	0x006e2e74
 8014100:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8014104:	2b657079 	blcs	99702f0 <__exidx_end+0x195a834>
 8014108:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014088 <index_js+0xd4>
 801410c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014110:	2b223e69 	blcs	88a3abc <__exidx_end+0x88e000>
 8014114:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014118:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 801411c:	6f6e2e74 	svcvs	0x006e2e74
 8014120:	702e6564 	eorvc	r6, lr, r4, ror #10
 8014124:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8014128:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801412c:	2f3c222b 	svccs	0x003c222b
 8014130:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8014134:	0a7d0a3b 	beq	9f56a28 <__exidx_end+0x1f40f6c>
 8014138:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 801413c:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8014140:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8014144:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014148:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801414c:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014150:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014154:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8014158:	0a7b2029 	beq	9edc204 <__exidx_end+0x1ec6748>
 801415c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8014160:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8014164:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014168:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801416c:	6177613d 	cmnvs	r7, sp, lsr r1
 8014170:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014174:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014178:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801417c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014180:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014184:	3b292779 	blcc	8a5df70 <__exidx_end+0xa484b4>
 8014188:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801418c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014190:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014194:	0a22223d 	beq	889ca90 <__exidx_end+0x886fd4>
 8014198:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801419c:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80141a0:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80141a4:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80141a8:	6a624f3d 	bvs	98a7ea4 <__exidx_end+0x18923e8>
 80141ac:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80141b0:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80141b4:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80141b8:	6f746365 	svcvs	0x00746365
 80141bc:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80141c0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80141c4:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80141c8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80141cc:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80141d0:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80141d4:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80141d8:	6145726f 	cmpvs	r5, pc, ror #4
 80141dc:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80141e0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80141e4:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80141e8:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80141ec:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80141f0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80141f4:	20726176 	rsbscs	r6, r2, r6, ror r1
 80141f8:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80141fc:	203d2065 	eorscs	r2, sp, r5, rrx
 8014200:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014204:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014208:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 801420c:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8014210:	6b5b5d22 	blvs	96eb6a0 <__exidx_end+0x16d5be4>
 8014214:	3b5d7965 	blcc	97727b0 <__exidx_end+0x175ccf4>
 8014218:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801421c:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8014220:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8014224:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8014228:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801422c:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8014230:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8014234:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014238:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 801423c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014240:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014244:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8014248:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801424c:	0a3b223e 	beq	8edcb4c <__exidx_end+0xec7090>
 8014250:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8014254:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8014258:	6f640909 	svcvs	0x00640909
 801425c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8014260:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8014264:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014268:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801426c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014270:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8014274:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014278:	6f746365 	svcvs	0x00746365
 801427c:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8014280:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8014284:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8014288:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 801428c:	3b6c6d74 	blcc	9b2f864 <__exidx_end+0x1b19da8>
 8014290:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014294:	5f746567 	svcpl	0x00746567
 8014298:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 801429c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80142a0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80142a4:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80142a8:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80142ac:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80142b0:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80142b4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80142b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80142bc:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80142c0:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80142c4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80142c8:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80142cc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80142d0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80142d4:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80142d8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80142dc:	6177613d 	cmnvs	r7, sp, lsr r1
 80142e0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80142e4:	534a7465 	movtpl	r7, #42085	; 0xa465
 80142e8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80142ec:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80142f0:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80142f4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80142f8:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80142fc:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8014300:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8014304:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8014308:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 801430c:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8014310:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8014314:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8014318:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801431c:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8014320:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8014324:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8014328:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 801432c:	2b22563e 	blcs	88a9c2c <__exidx_end+0x894170>
 8014330:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014334:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014338:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801433c:	2b6e6f69 	blcs	9bb00e8 <__exidx_end+0x1b9a62c>
 8014340:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80142c0 <index_js+0x30c>
 8014344:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014348:	2b223e69 	blcs	88a3cf4 <__exidx_end+0x88e238>
 801434c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014350:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014354:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8014358:	61642e64 	cmnvs	r4, r4, ror #28
 801435c:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8014360:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014364:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014368:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 801436c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014370:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8014374:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8014378:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 801437c:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8014380:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8014384:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8014388:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 801438c:	6f697372 	svcvs	0x00697372
 8014390:	6f622e6e 	svcvs	0x00622e6e
 8014394:	2b647261 	blcs	9930d20 <__exidx_end+0x191b264>
 8014398:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014318 <index_js+0x364>
 801439c:	3b223e69 	blcc	88a3d48 <__exidx_end+0x88e28c>
 80143a0:	0a0a7d0a 	beq	82b37d0 <__exidx_end+0x29dd14>
 80143a4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80143a8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80143ac:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80143b0:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80143b4:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80143bc <index_js+0x408>
 80143b8:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80143bc:	20296c65 	eorcs	r6, r9, r5, ror #24
 80143c0:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80143c4:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80143c8:	613d7478 	teqvs	sp, r8, ror r4
 80143cc:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80143d0:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80143d4:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80143d8:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80143dc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80143e0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80143e4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80143e8:	3b22223d 	blcc	889cce4 <__exidx_end+0x887228>
 80143ec:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80143f0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80143f4:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80143f8:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80143fc:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014400:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8014404:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8014408:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801440c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8014410:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014414:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8014418:	0a7b2029 	beq	9edc4c4 <__exidx_end+0x1ec6a08>
 801441c:	61760909 	cmnvs	r6, r9, lsl #18
 8014420:	61762072 	cmnvs	r6, r2, ror r0
 8014424:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8014428:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 801442c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014430:	6b5b5d6c 	blvs	96eb9e8 <__exidx_end+0x16d5f2c>
 8014434:	3b5d7965 	blcc	97729d0 <__exidx_end+0x175cf14>
 8014438:	2009090a 	andcs	r0, r9, sl, lsl #18
 801443c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014440:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8014444:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8014448:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801444c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014450:	2f3c222b 	svccs	0x003c222b
 8014454:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8014458:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801445c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014460:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014464:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8014468:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8014470 <index_js+0x4bc>
 801446c:	3b223e72 	blcc	88a3e3c <__exidx_end+0x88e380>
 8014470:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8014474:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8014478:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 801447c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8014480:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8014484:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8014488:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801448c:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8014490:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8014494:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8014498:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 801449c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80144a0:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80144a4:	0a3b6c6d 	beq	8eef660 <__exidx_end+0xed9ba4>
 80144a8:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80144ac:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80144b0:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80144b4:	3b292874 	blcc	8a5e68c <__exidx_end+0xa48bd0>
 80144b8:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80144bc:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80144c0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80144c4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80144c8:	0a3b2928 	beq	8ede970 <__exidx_end+0xec8eb4>
 80144cc:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80144d0:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80144d4:	6f697372 	svcvs	0x00697372
 80144d8:	3b29286e 	blcc	8a5e698 <__exidx_end+0xa48bdc>
 80144dc:	642f000a 	strtvs	r0, [pc], #-10	; 80144e4 <index_js+0x530>
 80144e0:	0031786d 	eorseq	r7, r1, sp, ror #16
 80144e4:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 80144e8:	002a2f31 	eoreq	r2, sl, r1, lsr pc
 80144ec:	2f00322f 	svccs	0x0000322f
 80144f0:	31786d64 	cmncc	r8, r4, ror #26
 80144f4:	616c622f 	cmnvs	ip, pc, lsr #4
 80144f8:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 801399d <RemoteConfig::s_TXT+0x18d>
 80144fc:	2e310074 	mrccs	0, 1, r0, cr1, cr4, {3}
 8014500:	565b0030 			; <UNDEFINED> instruction: 0x565b0030
 8014504:	205d7325 	subscs	r7, sp, r5, lsr #6
 8014508:	47007325 	strmi	r7, [r0, -r5, lsr #6]
 801450c:	46323344 	ldrtmi	r3, [r2], -r4, asr #6
 8014510:	69702f00 	ldmdbvs	r0!, {r8, r9, sl, fp, sp}^
 8014514:	2f00676e 	svccs	0x0000676e
 8014518:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 801451c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8014520:	6f2f6f66 	svcvs	0x002f6f66
 8014524:	692f0073 	stmdbvs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
 8014528:	2f6f666e 	svccs	0x006f666e
 801452c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8014530:	692f006c 	stmdbvs	pc!, {r2, r3, r5, r6}	; <UNPREDICTABLE>
 8014534:	2f6f666e 	svccs	0x006f666e
 8014538:	00636f73 	rsbeq	r6, r3, r3, ror pc
 801453c:	00736559 	rsbseq	r6, r3, r9, asr r5
 8014540:	4f006f4e 	svcmi	0x00006f4e
 8014544:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8014548:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 801454c:	20000a72 	andcs	r0, r0, r2, ror sl
 8014550:	6f636e49 	svcvs	0x00636e49
 8014554:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8014558:	726f5020 	rsbvc	r5, pc, #32
 801455c:	20202074 	eorcs	r2, r0, r4, ror r0
 8014560:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014564:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014568:	20000a64 	andcs	r0, r0, r4, ror #20
 801456c:	6774754f 	ldrbvs	r7, [r4, -pc, asr #10]!
 8014570:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8014574:	726f5020 	rsbvc	r5, pc, #32
 8014578:	20202074 	eorcs	r2, r0, r4, ror r0
 801457c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014580:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014584:	20000a64 	andcs	r0, r0, r4, ror #20
 8014588:	20584d44 	subscs	r4, r8, r4, asr #26
 801458c:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 8014590:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014594:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014598:	20202020 	eorcs	r2, r0, r0, lsr #32
 801459c:	5b203a20 	blpl	8822e24 <__exidx_end+0x80d368>
 80145a0:	5b5d7325 	blpl	977123c <__exidx_end+0x175b780>
 80145a4:	0a5d7325 	beq	9771240 <__exidx_end+0x175b784>
 80145a8:	42202000 	eormi	r2, r0, #0
 80145ac:	6b63616c 	blvs	98ecb64 <__exidx_end+0x18d70a8>
 80145b0:	2074756f 	rsbscs	r7, r4, pc, ror #10
 80145b4:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 80145b8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80145bc:	3a202020 	bcc	881c644 <__exidx_end+0x806b88>
 80145c0:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80145c4:	20000a5d 	andcs	r0, r0, sp, asr sl
 80145c8:	74726150 	ldrbtvc	r6, [r2], #-336	; 0xfffffeb0
 80145cc:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80145d0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
 80145d4:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80145d8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80145dc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80145e0:	 	movwpl	r0, #2675	; 0xa73

080145e3 <OscServerMsgConst::START>:
 80145e3:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80145e7:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80145eb:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 80145ef:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 80145f3:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80145f7:	00726576 	rsbseq	r6, r2, r6, ror r5

080145fb <OscServerMsgConst::PARAMS>:
 80145fb:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80145ff:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8014603:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014607:	2043534f 	subcs	r5, r3, pc, asr #6
 801460b:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801460f:	 	svcmi	0x00007265

08014612 <OscServerMsgConst::STARTED>:
 8014612:	2043534f 	subcs	r5, r3, pc, asr #6
 8014616:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801461a:	73207265 			; <UNDEFINED> instruction: 0x73207265
 801461e:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8014622:	 	andvc	r6, r0, r5, ror #8

08014625 <OscServerParamsConst::TRANSMISSION>:
 8014625:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8014629:	5f6c6169 	svcpl	0x006c6169
 801462d:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 8014631:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 8014635:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

0801463a <OscServerParamsConst::PATH_BLACKOUT>:
 801463a:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 801463e:	616c625f 	cmnvs	ip, pc, asr r2
 8014642:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8013ae7 <contentType+0xd>
 8014646:	 	cmnvs	r0, r4, ror r0

08014648 <OscServerParamsConst::PATH>:
 8014648:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

0801464d <OscServerParamsConst::FILE_NAME>:
 801464d:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8014651:	00747874 	rsbseq	r7, r4, r4, ror r8

08014655 <OscServerParamsConst::PATH_INFO>:
 8014655:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8014659:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 801465d:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

0801465f <OscParamsConst::INCOMING_PORT>:
 801465f:	6f636e69 	svcvs	0x00636e69
 8014663:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8014667:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801466b:	 	strbvc	r0, [pc, #-116]!	; 80145ff <OscServerMsgConst::PARAMS+0x4>

0801466d <OscParamsConst::OUTGOING_PORT>:
 801466d:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8014671:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8014675:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014679:	69500074 	ldmdbvs	r0, {r2, r4, r5, r6}^
 801467d:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8014681:	20584d44 	subscs	r4, r8, r4, asr #26
 8014685:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014689:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801468d:	6f697461 	svcvs	0x00697461
 8014691:	20000a6e 	andcs	r0, r0, lr, ror #20
 8014695:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8014699:	20737475 	rsbscs	r7, r3, r5, ror r4
 801469d:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80146a1:	4720000a 	strmi	r0, [r0, -sl]!
 80146a5:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 80146a9:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80146ad:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80146b1:	203a2074 	eorscs	r2, sl, r4, ror r0
 80146b5:	5b206425 	blpl	882d751 <__exidx_end+0x817c95>
 80146b9:	756f7247 	strbvc	r7, [pc, #-583]!	; 801447a <index_js+0x4c6>
 80146bd:	3a207370 	bcc	8831485 <__exidx_end+0x81b9c9>
 80146c1:	5d642520 	cfstr64pl	mvdx2, [r4, #-128]!	; 0xffffff80
 80146c5:	 	andeq	r0, r0, sl

080146c8 <vtable for WS28xxDmx>:
	...
 80146d0:	0800b89d 	stmdaeq	r0, {r0, r2, r3, r4, r7, fp, ip, sp, pc}
 80146d4:	0800b8bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, ip, sp, pc}
 80146d8:	0800ba11 	stmdaeq	r0, {r0, r4, r9, fp, ip, sp, pc}
 80146dc:	0800ba29 	stmdaeq	r0, {r0, r3, r5, r9, fp, ip, sp, pc}
 80146e0:	0800b8f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, fp, ip, sp, pc}
 80146e4:	0800b8cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, fp, ip, sp, pc}
 80146e8:	0800b9f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, fp, ip, sp, pc}
 80146ec:	0800ba0b 	stmdaeq	r0, {r0, r1, r3, r9, fp, ip, sp, pc}
 80146f0:	0800ba41 	stmdaeq	r0, {r0, r6, r9, fp, ip, sp, pc}
 80146f4:	0800b891 	stmdaeq	r0, {r0, r4, r7, fp, ip, sp, pc}
 80146f8:	0800b897 	stmdaeq	r0, {r0, r1, r2, r4, r7, fp, ip, sp, pc}
 80146fc:	0800ba79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, ip, sp, pc}
 8014700:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014704:	2a2e253a 	bcs	8b9dbf4 <__exidx_end+0xb88138>
 8014708:	23002c66 	movwcs	r2, #3174	; 0xc66
 801470c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8014710:	0a662a2e 	beq	999efd0 <__exidx_end+0x1989514>
 8014714:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 8014718:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 801471c:	4f003e74 	svcmi	0x00003e74
 8014720:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8014724:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8014728:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 801472c:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8014730:	4f007465 	svcmi	0x00007465
 8014734:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8014738:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801473c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8014740:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014744:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8014748:	6f724700 	svcvs	0x00724700
 801474c:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8014750:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8014754:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8014758:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 801475c:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8014760:	00737069 	rsbseq	r7, r3, r9, rrx
 8014764:	31415041 	cmpcc	r1, r1, asr #32
 8014768:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 801476c:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8014770:	4d440032 	stclmi	0, cr0, [r4, #-200]	; 0xffffff38
 8014774:	65540058 	ldrbvs	r0, [r4, #-88]	; 0xffffffa8
 8014778:	70207473 	eorvc	r7, r0, r3, ror r4
 801477c:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8014780:	50006e72 	andpl	r6, r0, r2, ror lr
 8014784:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014788:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801478c:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8014790:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8014794:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8014798:	70795420 	rsbsvc	r5, r9, r0, lsr #8
 801479c:	20202065 	eorcs	r2, r0, r5, rrx
 80147a0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80147a4:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
 80147a8:	000a5d64 	andeq	r5, sl, r4, ror #26
 80147ac:	756f4320 	strbvc	r4, [pc, #-800]!	; 8014494 <index_js+0x4e0>
 80147b0:	2020746e 	eorcs	r7, r0, lr, ror #8
 80147b4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80147b8:	20000a64 	andcs	r0, r0, r4, ror #20
 80147bc:	7070614d 	rsbsvc	r6, r0, sp, asr #2
 80147c0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80147c4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80147c8:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80147cc:	20000a5d 	andcs	r0, r0, sp, asr sl
 80147d0:	20483054 	subcs	r3, r8, r4, asr r0
 80147d4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147d8:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80147dc:	5b206632 	blpl	882e0ac <__exidx_end+0x8185f0>
 80147e0:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
 80147e4:	20000a5d 	andcs	r0, r0, sp, asr sl
 80147e8:	20483154 	subcs	r3, r8, r4, asr r1
 80147ec:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147f0:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80147f4:	5b206632 	blpl	882e0c4 <__exidx_end+0x818608>
 80147f8:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
 80147fc:	20000a5d 	andcs	r0, r0, sp, asr sl
 8014800:	626f6c47 	rsbvs	r6, pc, #18176	; 0x4700
 8014804:	72426c61 	subvc	r6, r2, #24832	; 0x6100
 8014808:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 801480c:	7373656e 	cmnvc	r3, #461373440	; 0x1b800000
 8014810:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014814:	4720000a 	strmi	r0, [r0, -sl]!
 8014818:	616d6d61 	cmnvs	sp, r1, ror #26
 801481c:	726f6320 	rsbvc	r6, pc, #32, 6	; 0x80000000
 8014820:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014824:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014828:	000a7325 	andeq	r7, sl, r5, lsr #6
 801482c:	6f6c4320 	svcvs	0x006c4320
 8014830:	203a6b63 	eorscs	r6, sl, r3, ror #22
 8014834:	48207525 	stmdami	r0!, {r0, r2, r5, r8, sl, ip, sp, lr}
 8014838:	00000a7a 	andeq	r0, r0, sl, ror sl

0801483c <CSWTCH.9>:
 801483c:	08014a50 	stmdaeq	r1, {r4, r6, r9, fp, lr}
 8014840:	08014b50 	stmdaeq	r1, {r4, r6, r8, r9, fp, lr}
 8014844:	08014c50 	stmdaeq	r1, {r4, r6, sl, fp, lr}
 8014848:	08014d50 	stmdaeq	r1, {r4, r6, r8, sl, fp, lr}
 801484c:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}

08014850 <gamma10_0>:
 8014850:	03020100 	movweq	r0, #8448	; 0x2100
 8014854:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014858:	0b0a0908 	bleq	8296c80 <__exidx_end+0x2811c4>
 801485c:	0f0e0d0c 	svceq	0x000e0d0c
 8014860:	13121110 	tstne	r2, #16, 2
 8014864:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014868:	1b1a1918 	blne	869acd0 <__exidx_end+0x685214>
 801486c:	1f1e1d1c 	svcne	0x001e1d1c
 8014870:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014874:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014878:	2b2a2928 	blcs	8a9ed20 <__exidx_end+0xa89264>
 801487c:	2f2e2d2c 	svccs	0x002e2d2c
 8014880:	33323130 	teqcc	r2, #48, 2
 8014884:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014888:	3b3a3938 	blcc	8ea2d70 <__exidx_end+0xe8d2b4>
 801488c:	3f3e3d3c 	svccc	0x003e3d3c
 8014890:	43424140 	movtmi	r4, #8512	; 0x2140
 8014894:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014898:	4b4a4948 	blmi	92a6dc0 <__exidx_end+0x1291304>
 801489c:	4f4e4d4c 	svcmi	0x004e4d4c
 80148a0:	53525150 	cmppl	r2, #80, 2
 80148a4:	57565554 			; <UNDEFINED> instruction: 0x57565554
 80148a8:	5b5a5958 	blpl	96aae10 <__exidx_end+0x1695354>
 80148ac:	5f5e5d5c 	svcpl	0x005e5d5c
 80148b0:	63626160 	cmnvs	r2, #96, 2
 80148b4:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 80148b8:	6b6a6968 	blvs	9aaee60 <__exidx_end+0x1a993a4>
 80148bc:	6f6e6d6c 	svcvs	0x006e6d6c
 80148c0:	73727170 	cmnvc	r2, #112, 2
 80148c4:	77767574 			; <UNDEFINED> instruction: 0x77767574
 80148c8:	7b7a7978 	blvc	9eb2eb0 <__exidx_end+0x1e9d3f4>
 80148cc:	7f7e7d7c 	svcvc	0x007e7d7c
 80148d0:	83828180 	orrhi	r8, r2, #128, 2
 80148d4:	87868584 	strhi	r8, [r6, r4, lsl #11]
 80148d8:	8b8a8988 	blhi	62b6f00 <__stack_size+0x62b4f00>
 80148dc:	8f8e8d8c 	svchi	0x008e8d8c
 80148e0:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 80148e4:	97969594 			; <UNDEFINED> instruction: 0x97969594
 80148e8:	9b9a9998 	blls	66baf50 <__stack_size+0x66b8f50>
 80148ec:	9f9e9d9c 	svcls	0x009e9d9c
 80148f0:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80148f4:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 80148f8:	abaaa9a8 	blge	6abefa0 <__stack_size+0x6abcfa0>
 80148fc:	afaeadac 	svcge	0x00aeadac
 8014900:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8014904:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8014908:	bbbab9b8 	bllt	6ec2ff0 <__stack_size+0x6ec0ff0>
 801490c:	bfbebdbc 	svclt	0x00bebdbc
 8014910:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8014914:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8014918:	cbcac9c8 	blgt	72c7040 <__stack_size+0x72c5040>
 801491c:	cfcecdcc 	svcgt	0x00cecdcc
 8014920:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8014924:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014928:	dbdad9d8 	blle	76cb090 <__stack_size+0x76c9090>
 801492c:	dfdedddc 	svcle	0x00dedddc
 8014930:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8014934:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014938:	ebeae9e8 	bl	7acf0e0 <__stack_size+0x7acd0e0>
 801493c:	efeeedec 	svc	0x00eeedec
 8014940:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8014944:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014948:	fbfaf9f8 	blx	7ed3132 <__stack_size+0x7ed1132>
 801494c:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08014950 <gamma20_0>:
	...
 801495c:	01010101 	tsteq	r1, r1, lsl #2
 8014960:	01010101 	tsteq	r1, r1, lsl #2
 8014964:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014968:	03030202 	movweq	r0, #12802	; 0x3202
 801496c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014970:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8014974:	06060505 	streq	r0, [r6], -r5, lsl #10
 8014978:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801497c:	09080808 	stmdbeq	r8, {r3, fp}
 8014980:	0a0a0909 	beq	8296dac <__exidx_end+0x2812f0>
 8014984:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014988:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801498c:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8014990:	12111110 	andsne	r1, r1, #16, 2
 8014994:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8014998:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801499c:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 80149a0:	1b1a1a19 	blne	869b20c <__exidx_end+0x685750>
 80149a4:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 80149a8:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 80149ac:	23232221 			; <UNDEFINED> instruction: 0x23232221
 80149b0:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 80149b4:	2a292827 	bcs	8a5ea58 <__exidx_end+0xa48f9c>
 80149b8:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 80149bc:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 80149c0:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 80149c4:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 80149c8:	3b3a3938 	blcc	8ea2eb0 <__exidx_end+0xe8d3f4>
 80149cc:	3f3e3d3c 	svccc	0x003e3d3c
 80149d0:	43424140 	movtmi	r4, #8512	; 0x2140
 80149d4:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80149d8:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 80149dc:	504f4e4d 	subpl	r4, pc, sp, asr #28
 80149e0:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 80149e4:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 80149e8:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 80149ec:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 80149f0:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 80149f4:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 80149f8:	7371706f 	cmnvc	r1, #111	; 0x6f
 80149fc:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8014a00:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8014a04:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8014a08:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8014a0c:	8f8e8c8b 	svchi	0x008e8c8b
 8014a10:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8014a14:	9b9a9897 	blls	66bac78 <__stack_size+0x66b8c78>
 8014a18:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8014a1c:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8014a20:	afadabaa 	svcge	0x00adabaa
 8014a24:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8014a28:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8014a2c:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8014a30:	cac8c7c5 	bgt	724694c <__stack_size+0x724494c>
 8014a34:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8014a38:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8014a3c:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8014a40:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8014a44:	efedebe9 	svc	0x00edebe9
 8014a48:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8014a4c:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08014a50 <gamma21_0>:
	...
 8014a5c:	01010000 	mrseq	r0, (UNDEF: 1)
 8014a60:	01010101 	tsteq	r1, r1, lsl #2
 8014a64:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8014a68:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014a6c:	03030302 	movweq	r0, #13058	; 0x3302
 8014a70:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014a74:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8014a78:	06060505 	streq	r0, [r6], -r5, lsl #10
 8014a7c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014a80:	09080808 	stmdbeq	r8, {r3, fp}
 8014a84:	0a0a0909 	beq	8296eb0 <__exidx_end+0x2813f4>
 8014a88:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014a8c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014a90:	0f0f0e0e 	svceq	0x000f0e0e
 8014a94:	11111010 	tstne	r1, r0, lsl r0
 8014a98:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8014a9c:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8014aa0:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8014aa4:	1b1a1919 	blne	869af10 <__exidx_end+0x685454>
 8014aa8:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8014aac:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8014ab0:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014ab4:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8014ab8:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8014abc:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8014ac0:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014ac4:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8014ac8:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014acc:	3b3a3938 	blcc	8ea2fb4 <__exidx_end+0xe8d4f8>
 8014ad0:	3f3e3d3c 	svccc	0x003e3d3c
 8014ad4:	43424140 	movtmi	r4, #8512	; 0x2140
 8014ad8:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014adc:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8014ae0:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8014ae4:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8014ae8:	5a585756 	bpl	962a848 <__exidx_end+0x1614d8c>
 8014aec:	5f5d5c5b 	svcpl	0x005d5c5b
 8014af0:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8014af4:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8014af8:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8014afc:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8014b00:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8014b04:	7f7e7c7b 	svcvc	0x007e7c7b
 8014b08:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8014b0c:	8b898886 	blhi	6276d2c <__stack_size+0x6274d2c>
 8014b10:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8014b14:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8014b18:	9e9c9b99 	vmovls.32	r9, d28[0]
 8014b1c:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8014b20:	abaaa8a6 	blge	6abedc0 <__stack_size+0x6abcdc0>
 8014b24:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8014b28:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8014b2c:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8014b30:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8014b34:	cfcdcbca 	svcgt	0x00cdcbca
 8014b38:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8014b3c:	dfdddbd9 	svcle	0x00dddbd9
 8014b40:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8014b44:	eeeceae8 	vfms.f32	s29, s25, s17
 8014b48:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8014b4c:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08014b50 <gamma22_0>:
	...
 8014b5c:	01000000 	mrseq	r0, (UNDEF: 0)
 8014b60:	01010101 	tsteq	r1, r1, lsl #2
 8014b64:	01010101 	tsteq	r1, r1, lsl #2
 8014b68:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8014b6c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014b70:	03030303 	movweq	r0, #13059	; 0x3303
 8014b74:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8014b78:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014b7c:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014b80:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014b84:	09080808 	stmdbeq	r8, {r3, fp}
 8014b88:	0a0a0909 	beq	8296fb4 <__exidx_end+0x2814f8>
 8014b8c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014b90:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8014b94:	0f0f0e0e 	svceq	0x000f0e0e
 8014b98:	11111010 	tstne	r1, r0, lsl r0
 8014b9c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014ba0:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014ba4:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014ba8:	1a1a1919 	bne	869b014 <__exidx_end+0x685558>
 8014bac:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014bb0:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014bb4:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014bb8:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014bbc:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8014bc0:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8014bc4:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014bc8:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8014bcc:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014bd0:	3b3a3938 	blcc	8ea30b8 <__exidx_end+0xe8d5fc>
 8014bd4:	3f3e3d3c 	svccc	0x003e3d3c
 8014bd8:	43424140 	movtmi	r4, #8512	; 0x2140
 8014bdc:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014be0:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8014be4:	514f4e4d 	cmppl	pc, sp, asr #28
 8014be8:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8014bec:	5a595857 	bpl	966ad50 <__exidx_end+0x1655294>
 8014bf0:	5f5e5d5b 	svcpl	0x005e5d5b
 8014bf4:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8014bf8:	6a696766 	bvs	9a6e998 <__exidx_end+0x1a58edc>
 8014bfc:	6f6e6d6b 	svcvs	0x006e6d6b
 8014c00:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8014c04:	7b797877 	blvc	9e72de8 <__exidx_end+0x1e5d32c>
 8014c08:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8014c0c:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8014c10:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8014c14:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8014c18:	9a999795 	bls	667aa74 <__stack_size+0x6678a74>
 8014c1c:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8014c20:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8014c24:	afadacaa 	svcge	0x00adacaa
 8014c28:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8014c2c:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8014c30:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8014c34:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8014c38:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8014c3c:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8014c40:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8014c44:	eeeceae7 	vfms.f32	s29, s25, s15
 8014c48:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8014c4c:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08014c50 <gamma23_0>:
	...
 8014c60:	01010100 	mrseq	r0, (UNDEF: 17)
 8014c64:	01010101 	tsteq	r1, r1, lsl #2
 8014c68:	01010101 	tsteq	r1, r1, lsl #2
 8014c6c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014c70:	03020202 	movweq	r0, #8706	; 0x2202
 8014c74:	03030303 	movweq	r0, #13059	; 0x3303
 8014c78:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014c7c:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014c80:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014c84:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8014c88:	09080808 	stmdbeq	r8, {r3, fp}
 8014c8c:	0a0a0a09 	beq	82974b8 <__exidx_end+0x2819fc>
 8014c90:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014c94:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8014c98:	0f0f0e0e 	svceq	0x000f0e0e
 8014c9c:	11111010 	tstne	r1, r0, lsl r0
 8014ca0:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014ca4:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8014ca8:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014cac:	1a1a1918 	bne	869b114 <__exidx_end+0x685658>
 8014cb0:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014cb4:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014cb8:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014cbc:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014cc0:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8014cc4:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8014cc8:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014ccc:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8014cd0:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014cd4:	3b3a3938 	blcc	8ea31bc <__exidx_end+0xe8d700>
 8014cd8:	3f3e3d3c 	svccc	0x003e3d3c
 8014cdc:	43424140 	movtmi	r4, #8512	; 0x2140
 8014ce0:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8014ce4:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8014ce8:	51504f4e 	cmppl	r0, lr, asr #30
 8014cec:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8014cf0:	5b5a5957 	blpl	96ab254 <__exidx_end+0x1695798>
 8014cf4:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8014cf8:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8014cfc:	6b6a6867 	blvs	9aaeea0 <__exidx_end+0x1a993e4>
 8014d00:	71706e6d 	cmnvc	r0, sp, ror #28
 8014d04:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8014d08:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8014d0c:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8014d10:	8a888685 	bhi	623672c <__stack_size+0x623472c>
 8014d14:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8014d18:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8014d1c:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8014d20:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8014d24:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8014d28:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8014d2c:	bbb9b7b6 	bllt	6e82c0c <__stack_size+0x6e80c0c>
 8014d30:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8014d34:	cbc9c7c5 	blgt	7286c50 <__stack_size+0x7284c50>
 8014d38:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8014d3c:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8014d40:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8014d44:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8014d48:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8014d4c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014d50 <gamma24_0>:
	...
 8014d60:	01000000 	mrseq	r0, (UNDEF: 0)
 8014d64:	01010101 	tsteq	r1, r1, lsl #2
 8014d68:	01010101 	tsteq	r1, r1, lsl #2
 8014d6c:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8014d70:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014d74:	03030202 	movweq	r0, #12802	; 0x3202
 8014d78:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8014d7c:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014d80:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8014d84:	06060606 	streq	r0, [r6], -r6, lsl #12
 8014d88:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8014d8c:	09090808 	stmdbeq	r9, {r3, fp}
 8014d90:	0a0a0a09 	beq	82975bc <__exidx_end+0x281b00>
 8014d94:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8014d98:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014d9c:	0f0f0e0e 	svceq	0x000f0e0e
 8014da0:	11111010 	tstne	r1, r0, lsl r0
 8014da4:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014da8:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014dac:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014db0:	1a1a1918 	bne	869b218 <__exidx_end+0x68575c>
 8014db4:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014db8:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014dbc:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014dc0:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8014dc4:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8014dc8:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8014dcc:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8014dd0:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8014dd4:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8014dd8:	3b3a3938 	blcc	8ea32c0 <__exidx_end+0xe8d804>
 8014ddc:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8014de0:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8014de4:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8014de8:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8014dec:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8014df0:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8014df4:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8014df8:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8014dfc:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8014e00:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8014e04:	7372706f 	cmnvc	r2, #111	; 0x6f
 8014e08:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8014e0c:	7f7e7c7b 	svcvc	0x007e7c7b
 8014e10:	86848381 	strhi	r8, [r4], r1, lsl #7
 8014e14:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8014e18:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8014e1c:	9b999795 	blls	667ac78 <__stack_size+0x6678c78>
 8014e20:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8014e24:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8014e28:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8014e2c:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8014e30:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8014e34:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8014e38:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8014e3c:	dad8d6d4 	ble	764a994 <__stack_size+0x7648994>
 8014e40:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8014e44:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8014e48:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8014e4c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014e50 <gamma25_0>:
	...
 8014e64:	01010000 	mrseq	r0, (UNDEF: 1)
 8014e68:	01010101 	tsteq	r1, r1, lsl #2
 8014e6c:	01010101 	tsteq	r1, r1, lsl #2
 8014e70:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8014e74:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014e78:	03030302 	movweq	r0, #13058	; 0x3302
 8014e7c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8014e80:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8014e84:	06050505 	streq	r0, [r5], -r5, lsl #10
 8014e88:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8014e8c:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8014e90:	09090808 	stmdbeq	r9, {r3, fp}
 8014e94:	0a0a0a09 	beq	82976c0 <__exidx_end+0x281c04>
 8014e98:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8014e9c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8014ea0:	0f0f0f0e 	svceq	0x000f0f0e
 8014ea4:	11111010 	tstne	r1, r0, lsl r0
 8014ea8:	13131212 	tstne	r3, #536870913	; 0x20000001
 8014eac:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8014eb0:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8014eb4:	1a1a1919 	bne	869b320 <__exidx_end+0x685864>
 8014eb8:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8014ebc:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8014ec0:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8014ec4:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8014ec8:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8014ecc:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8014ed0:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8014ed4:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8014ed8:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8014edc:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8014ee0:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8014ee4:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8014ee8:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8014eec:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8014ef0:	53525150 	cmppl	r2, #80, 2
 8014ef4:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8014ef8:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8014efc:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8014f00:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8014f04:	6f6e6c6b 	svcvs	0x006e6c6b
 8014f08:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8014f0c:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8014f10:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8014f14:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8014f18:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8014f1c:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8014f20:	9f9d9b99 	svcls	0x009d9b99
 8014f24:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8014f28:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8014f2c:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8014f30:	bfbdbab8 	svclt	0x00bdbab8
 8014f34:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8014f38:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8014f3c:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8014f40:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8014f44:	ebe9e7e4 	bl	7a8eedc <__stack_size+0x7a8cedc>
 8014f48:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8014f4c:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08014f50 <gamma25_5>:
 8014f50:	01010100 	mrseq	r0, (UNDEF: 17)
 8014f54:	01010101 	tsteq	r1, r1, lsl #2
 8014f58:	01010101 	tsteq	r1, r1, lsl #2
 8014f5c:	01010101 	tsteq	r1, r1, lsl #2
 8014f60:	01010101 	tsteq	r1, r1, lsl #2
 8014f64:	01010101 	tsteq	r1, r1, lsl #2
 8014f68:	01010101 	tsteq	r1, r1, lsl #2
 8014f6c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014f70:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8014f74:	03030302 	movweq	r0, #13058	; 0x3302
 8014f78:	03030303 	movweq	r0, #13059	; 0x3303
 8014f7c:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8014f80:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8014f84:	06060605 	streq	r0, [r6], -r5, lsl #12
 8014f88:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8014f8c:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8014f90:	0a090909 	beq	82573bc <__exidx_end+0x241900>
 8014f94:	0b0b0a0a 	bleq	82d77c4 <__exidx_end+0x2c1d08>
 8014f98:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8014f9c:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8014fa0:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8014fa4:	12111110 	andsne	r1, r1, #16, 2
 8014fa8:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8014fac:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8014fb0:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8014fb4:	1b1a1a19 	blne	869b820 <__exidx_end+0x685d64>
 8014fb8:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8014fbc:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8014fc0:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8014fc4:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8014fc8:	2a292827 	bcs	8a5f06c <__exidx_end+0xa495b0>
 8014fcc:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8014fd0:	31302f2e 	teqcc	r0, lr, lsr #30
 8014fd4:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8014fd8:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8014fdc:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8014fe0:	41403f3e 	cmpmi	r0, lr, lsr pc
 8014fe4:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8014fe8:	4a494846 	bmi	9267108 <__exidx_end+0x125164c>
 8014fec:	4f4e4c4b 	svcmi	0x004e4c4b
 8014ff0:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8014ff4:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8014ff8:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8014ffc:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8015000:	6a686765 	bvs	9a2ed9c <__exidx_end+0x1a192e0>
 8015004:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 8015008:	76747371 			; <UNDEFINED> instruction: 0x76747371
 801500c:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8015010:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8015014:	8a888685 	bhi	6236a30 <__stack_size+0x6234a30>
 8015018:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 801501c:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8015020:	9f9d9c9a 	svcls	0x009d9c9a
 8015024:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 8015028:	afadaba9 	svcge	0x00adaba9
 801502c:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8015030:	bfbdbbb9 	svclt	0x00bdbbb9
 8015034:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 8015038:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 801503c:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8015040:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 8015044:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 8015048:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 801504c:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 8015050:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8015054:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8015058:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 801505c:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 8015060:	 	andeq	r0, r0, #100	; 0x64

08015062 <CSWTCH.18>:
 8015062:	02020200 	andeq	r0, r2, #0, 4
 8015066:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 801506a:	 	ldrbmi	r0, [r2, -r0, lsl #10]

0801506c <PixelType::MAPS>:
 801506c:	00424752 	subeq	r4, r2, r2, asr r7
 8015070:	00474252 	subeq	r4, r7, r2, asr r2
 8015074:	00425247 	subeq	r5, r2, r7, asr #4
 8015078:	00524247 	subseq	r4, r2, r7, asr #4
 801507c:	00475242 	subeq	r5, r7, r2, asr #4
 8015080:	00524742 	subseq	r4, r2, r2, asr #14

08015084 <PixelType::TYPES>:
 8015084:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015088:	00003130 	andeq	r3, r0, r0, lsr r1
 801508c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015090:	00003131 	andeq	r3, r0, r1, lsr r1
 8015094:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8015098:	00003231 	andeq	r3, r0, r1, lsr r2
 801509c:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80150a0:	00423231 	subeq	r3, r2, r1, lsr r2
 80150a4:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80150a8:	00003331 	andeq	r3, r0, r1, lsr r3
 80150ac:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80150b0:	00003531 	andeq	r3, r0, r1, lsr r5
 80150b4:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80150b8:	00003231 	andeq	r3, r0, r1, lsr r2
 80150bc:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80150c0:	00573231 	subseq	r3, r7, r1, lsr r2
 80150c4:	31534355 	cmpcc	r3, r5, asr r3
 80150c8:	00333039 	eorseq	r3, r3, r9, lsr r0
 80150cc:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 80150d0:	00333039 	eorseq	r3, r3, r9, lsr r0
 80150d4:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 80150d8:	00003231 	andeq	r3, r0, r1, lsr r2
 80150dc:	31415041 	cmpcc	r1, r1, asr #32
 80150e0:	00003230 	andeq	r3, r0, r0, lsr r2
 80150e4:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80150e8:	00003232 	andeq	r3, r0, r2, lsr r2
 80150ec:	31383950 	teqcc	r8, r0, asr r9
 80150f0:	00000033 	andeq	r0, r0, r3, lsr r0

080150f4 <gamma10_0>:
 80150f4:	03020100 	movweq	r0, #8448	; 0x2100
 80150f8:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80150fc:	0b0a0908 	bleq	8297524 <__exidx_end+0x281a68>
 8015100:	0f0e0d0c 	svceq	0x000e0d0c
 8015104:	13121110 	tstne	r2, #16, 2
 8015108:	17161514 			; <UNDEFINED> instruction: 0x17161514
 801510c:	1b1a1918 	blne	869b574 <__exidx_end+0x685ab8>
 8015110:	1f1e1d1c 	svcne	0x001e1d1c
 8015114:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8015118:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 801511c:	2b2a2928 	blcs	8a9f5c4 <__exidx_end+0xa89b08>
 8015120:	2f2e2d2c 	svccs	0x002e2d2c
 8015124:	33323130 	teqcc	r2, #48, 2
 8015128:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801512c:	3b3a3938 	blcc	8ea3614 <__exidx_end+0xe8db58>
 8015130:	3f3e3d3c 	svccc	0x003e3d3c
 8015134:	43424140 	movtmi	r4, #8512	; 0x2140
 8015138:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801513c:	4b4a4948 	blmi	92a7664 <__exidx_end+0x1291ba8>
 8015140:	4f4e4d4c 	svcmi	0x004e4d4c
 8015144:	53525150 	cmppl	r2, #80, 2
 8015148:	57565554 			; <UNDEFINED> instruction: 0x57565554
 801514c:	5b5a5958 	blpl	96ab6b4 <__exidx_end+0x1695bf8>
 8015150:	5f5e5d5c 	svcpl	0x005e5d5c
 8015154:	63626160 	cmnvs	r2, #96, 2
 8015158:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 801515c:	6b6a6968 	blvs	9aaf704 <__exidx_end+0x1a99c48>
 8015160:	6f6e6d6c 	svcvs	0x006e6d6c
 8015164:	73727170 	cmnvc	r2, #112, 2
 8015168:	77767574 			; <UNDEFINED> instruction: 0x77767574
 801516c:	7b7a7978 	blvc	9eb3754 <__exidx_end+0x1e9dc98>
 8015170:	7f7e7d7c 	svcvc	0x007e7d7c
 8015174:	83828180 	orrhi	r8, r2, #128, 2
 8015178:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801517c:	8b8a8988 	blhi	62b77a4 <__stack_size+0x62b57a4>
 8015180:	8f8e8d8c 	svchi	0x008e8d8c
 8015184:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8015188:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801518c:	9b9a9998 	blls	66bb7f4 <__stack_size+0x66b97f4>
 8015190:	9f9e9d9c 	svcls	0x009e9d9c
 8015194:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8015198:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801519c:	abaaa9a8 	blge	6abf844 <__stack_size+0x6abd844>
 80151a0:	afaeadac 	svcge	0x00aeadac
 80151a4:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 80151a8:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 80151ac:	bbbab9b8 	bllt	6ec3894 <__stack_size+0x6ec1894>
 80151b0:	bfbebdbc 	svclt	0x00bebdbc
 80151b4:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 80151b8:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 80151bc:	cbcac9c8 	blgt	72c78e4 <__stack_size+0x72c58e4>
 80151c0:	cfcecdcc 	svcgt	0x00cecdcc
 80151c4:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80151c8:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 80151cc:	dbdad9d8 	blle	76cb934 <__stack_size+0x76c9934>
 80151d0:	dfdedddc 	svcle	0x00dedddc
 80151d4:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 80151d8:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 80151dc:	ebeae9e8 	bl	7acf984 <__stack_size+0x7acd984>
 80151e0:	efeeedec 	svc	0x00eeedec
 80151e4:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80151e8:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80151ec:	fbfaf9f8 	blx	7ed39d6 <__stack_size+0x7ed19d6>
 80151f0:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080151f4 <s_aStorSize>:
 80151f4:	00000060 	andeq	r0, r0, r0, rrx
 80151f8:	00000090 	muleq	r0, r0, r0
 80151fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8015200:	00000040 	andeq	r0, r0, r0, asr #32
 8015204:	00000060 	andeq	r0, r0, r0, rrx
 8015208:	00000040 	andeq	r0, r0, r0, asr #32
 801520c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015210:	00000020 	andeq	r0, r0, r0, lsr #32
 8015214:	000001e0 	andeq	r0, r0, r0, ror #3
 8015218:	00000040 	andeq	r0, r0, r0, asr #32
 801521c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015220:	00000060 	andeq	r0, r0, r0, rrx
 8015224:	00000030 	andeq	r0, r0, r0, lsr r0
 8015228:	00000020 	andeq	r0, r0, r0, lsr #32
 801522c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8015230:	00000030 	andeq	r0, r0, r0, lsr r0
 8015234:	00000040 	andeq	r0, r0, r0, asr #32
 8015238:	00000020 	andeq	r0, r0, r0, lsr #32
 801523c:	00000060 	andeq	r0, r0, r0, rrx
 8015240:	00000020 	andeq	r0, r0, r0, lsr #32
 8015244:	00000400 	andeq	r0, r0, r0, lsl #8
 8015248:	00000020 	andeq	r0, r0, r0, lsr #32
 801524c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015250:	00000040 	andeq	r0, r0, r0, asr #32
 8015254:	00000060 	andeq	r0, r0, r0, rrx
 8015258:	00000020 	andeq	r0, r0, r0, lsr #32
 801525c:	00000020 	andeq	r0, r0, r0, lsr #32
 8015260:	000000c0 	andeq	r0, r0, r0, asr #1

08015264 <vtable for StoreNetwork>:
	...
 801526c:	0800dc2d 	stmdaeq	r0, {r0, r2, r3, r5, sl, fp, ip, lr, pc}
 8015270:	0800dd41 	stmdaeq	r0, {r0, r6, r8, sl, fp, ip, lr, pc}
 8015274:	0800dc35 	stmdaeq	r0, {r0, r2, r4, r5, sl, fp, ip, lr, pc}
 8015278:	0800dd55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, ip, lr, pc}
 801527c:	0800dce5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, fp, ip, lr, pc}
 8015280:	0800dcb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, fp, ip, lr, pc}
 8015284:	0800dc89 	stmdaeq	r0, {r0, r3, r7, sl, fp, ip, lr, pc}
 8015288:	0800dd11 	stmdaeq	r0, {r0, r4, r8, sl, fp, ip, lr, pc}
 801528c:	0800dc59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, ip, lr, pc}
 8015290:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8015294:	00000000 	andeq	r0, r0, r0
 8015298:	0800dc2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, sl, fp, ip, lr, pc}
 801529c:	0800dd4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, fp, ip, lr, pc}
 80152a0:	0800dd09 	stmdaeq	r0, {r0, r3, r8, sl, fp, ip, lr, pc}
 80152a4:	0800dcdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, ip, lr, pc}
 80152a8:	0800dcb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, ip, lr, pc}
 80152ac:	0800dd39 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, fp, ip, lr, pc}
 80152b0:	0800dc81 	stmdaeq	r0, {r0, r7, sl, fp, ip, lr, pc}

080152b4 <vtable for StoreOscServer>:
	...
 80152bc:	0800dd8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, lr, pc}
 80152c0:	0800ddd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, fp, ip, lr, pc}
 80152c4:	0800ddb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, ip, lr, pc}
 80152c8:	0800dd91 	stmdaeq	r0, {r0, r4, r7, r8, sl, fp, ip, lr, pc}

080152cc <vtable for StoreRemoteConfig>:
	...
 80152d4:	0800ddf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 80152d8:	0800de45 	stmdaeq	r0, {r0, r2, r6, r9, sl, fp, ip, lr, pc}
 80152dc:	0800de21 	stmdaeq	r0, {r0, r5, r9, sl, fp, ip, lr, pc}
 80152e0:	0800ddfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}

080152e4 <vtable for StorePixelDmx>:
	...
 80152ec:	0800de65 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, fp, ip, lr, pc}
 80152f0:	0800dfd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80152f4:	0800de6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, lr, pc}
 80152f8:	0800dfe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80152fc:	0800df9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, lr, pc}
 8015300:	0800df69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 8015304:	0800df31 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, fp, ip, lr, pc}
 8015308:	0800def9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, fp, ip, lr, pc}
 801530c:	0800dec5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, fp, ip, lr, pc}
 8015310:	0800de91 	stmdaeq	r0, {r0, r4, r7, r9, sl, fp, ip, lr, pc}
 8015314:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8015318:	00000000 	andeq	r0, r0, r0
 801531c:	0800de67 	stmdaeq	r0, {r0, r1, r2, r5, r6, r9, sl, fp, ip, lr, pc}
 8015320:	0800dfdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8015324:	0800dfc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8015328:	0800df95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, lr, pc}
 801532c:	0800df61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 8015330:	0800df29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, lr, pc}
 8015334:	0800def1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, fp, ip, lr, pc}
 8015338:	0800debd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip, lr, pc}
 801533c:	3a434d46 	bcc	90e885c <__exidx_end+0x10d2da0>
 8015340:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8015344:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8015348:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801534c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8015350:	6f742068 	svcvs	0x00742068
 8015354:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8015358:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801535c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8015360:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8015364:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8015368:	6374000a 	cmnvs	r4, #10
 801536c:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8015370:	3a6e6967 	bcc	9baf914 <__exidx_end+0x1b99e58>
 8015374:	6f6f7420 	svcvs	0x006f7420
 8015378:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801537c:	6f632079 	svcvs	0x00632079
 8015380:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8015384:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015388:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 801538c:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8015390:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8015394:	41000a64 	tstmi	r0, r4, ror #20
 8015398:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 801539c:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80153a0:	61662070 	smcvs	25088	; 0x6200
 80153a4:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80153a8:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80153ac:	61666564 	cmnvs	r6, r4, ror #10
 80153b0:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80153b4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80153b8:	0a796177 	beq	9e6d99c <__exidx_end+0x1e57ee0>
 80153bc:	50524100 	subspl	r4, r2, r0, lsl #2
 80153c0:	6f6f6c20 	svcvs	0x006f6c20
 80153c4:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80153c8:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80153cc:	000a6465 	andeq	r6, sl, r5, ror #8

080153d0 <NetworkConst::MSG_MDNS_CONFIG>:
 80153d0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80153d4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80153d8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80153dc:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080153e1 <NetworkConst::MSG_NETWORK_INIT>:
 80153e1:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80153e5:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80153e9:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80153ed:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80153f1:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80153f5:	3135322e 	teqcc	r5, lr, lsr #4
 80153f9:	63745f00 	cmnvs	r4, #0, 30
 80153fd:	6f6c2e70 	svcvs	0x006c2e70
 8015401:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8015405:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8015409:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801540d:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8015415 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8015411:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8015415:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80145b9 <index_js+0x605>
 8015419:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801541d:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8015421:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8015425:	20000a53 	andcs	r0, r0, r3, asr sl
 8015429:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801542d:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8015431:	0a676e69 	beq	99f0ddd <__exidx_end+0x19db321>
 8015435:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8015439:	3a20656d 	bcc	882e9f5 <__exidx_end+0x818f39>
 801543d:	0a732520 	beq	9cde8c5 <__exidx_end+0x1cc8e09>
 8015441:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8015445:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8015449:	000a7325 	andeq	r7, sl, r5, lsr #6
 801544d:	30687465 	rsbcc	r7, r8, r5, ror #8
 8015451:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8015455:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8015459:	5f656369 	svcpl	0x00656369
 801545d:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8015461:	6b726f77 	blvs	9cb1245 <__exidx_end+0x1c9b789>
 8015465:	4820000a 	stmdami	r0!, {r1, r3}
 8015469:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801546d:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8015471:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015475:	20000a73 	andcs	r0, r0, r3, ror sl
 8015479:	614e6649 	cmpvs	lr, r9, asr #12
 801547d:	2020656d 	eorcs	r6, r0, sp, ror #10
 8015481:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015485:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8015489:	000a7325 	andeq	r7, sl, r5, lsr #6
 801548d:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8015491:	20202074 	eorcs	r2, r0, r4, ror r0
 8015495:	3a202020 	bcc	881d51d <__exidx_end+0x807a61>
 8015499:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801549d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80154a1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80154a5:	0a64252f 	beq	991e969 <__exidx_end+0x1908ead>
 80154a9:	654e2000 	strbvs	r2, [lr, #-0]
 80154ad:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80154b1:	2020206b 	eorcs	r2, r0, fp, rrx
 80154b5:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80154b9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80154bd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80154c1:	20000a64 	andcs	r0, r0, r4, ror #20
 80154c5:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80154c9:	20796177 	rsbscs	r6, r9, r7, ror r1
 80154cd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80154d1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80154d5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80154d9:	0a64252e 	beq	991e999 <__exidx_end+0x1908edd>
 80154dd:	72422000 	subvc	r2, r2, #0
 80154e1:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80154e5:	20747361 	rsbscs	r7, r4, r1, ror #6
 80154e9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80154ed:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80154f1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80154f5:	20000a64 	andcs	r0, r0, r4, ror #20
 80154f9:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80154fd:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015501:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015505:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8015509:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801550d:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8015511:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8015515:	3a78322e 	bcc	9e21dd5 <__exidx_end+0x1e0c319>
 8015519:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801551d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8015521:	20000a78 	andcs	r0, r0, r8, ror sl
 8015525:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8015529:	20202020 	eorcs	r2, r0, r0, lsr #32
 801552d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015531:	000a6325 	andeq	r6, sl, r5, lsr #6
 8015535:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8015539:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801553d:	 	rsbvc	r0, r9, r0, asr r0

0801553f <NetworkParamsConst::IP_ADDRESS>:
 801553f:	615f7069 	cmpvs	pc, r9, rrx
 8015543:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8015547:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801554a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801554a:	61666564 	cmnvs	r6, r4, ror #10
 801554e:	5f746c75 	svcpl	0x00746c75
 8015552:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8015556:	00796177 	rsbseq	r6, r9, r7, ror r1

0801555a <NetworkParamsConst::DHCP_RETRY_TIME>:
 801555a:	70636864 	rsbvc	r6, r3, r4, ror #16
 801555e:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8015562:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801556a <NetworkParamsConst::HOSTNAME>
 8015566:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801556a <NetworkParamsConst::HOSTNAME>:
 801556a:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801556e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08015573 <NetworkParamsConst::NET_MASK>:
 8015573:	5f74656e 	svcpl	0x0074656e
 8015577:	6b73616d 	blvs	9cedb33 <__exidx_end+0x1cd8077>
	...

0801557c <NetworkParamsConst::USE_DHCP>:
 801557c:	5f657375 	svcpl	0x00657375
 8015580:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08015585 <NetworkParamsConst::FILE_NAME>:
 8015585:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8015589:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801558d:	00747874 	rsbseq	r7, r4, r4, ror r8

08015591 <DevicesParamsConst::GAMMA_VALUE>:
 8015591:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 8015595:	61765f61 	cmnvs	r6, r1, ror #30
 8015599:	0065756c 	rsbeq	r7, r5, ip, ror #10

0801559d <DevicesParamsConst::SPI_SPEED_HZ>:
 801559d:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 80155a1:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 80155a5:	5f646565 	svcpl	0x00646565
 80155a9:	 	strvc	r7, [r0], #-2664	; 0xfffff598

080155ac <DevicesParamsConst::TEST_PATTERN>:
 80155ac:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80155b0:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80155b4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080155b9 <DevicesParamsConst::GROUPING_COUNT>:
 80155b9:	5f64656c 	svcpl	0x0064656c
 80155bd:	756f7267 	strbvc	r7, [pc, #-615]!	; 801535e <vtable for StorePixelDmx+0x7a>
 80155c1:	6f635f70 	svcvs	0x00635f70
 80155c5:	00746e75 	rsbseq	r6, r4, r5, ror lr

080155c9 <DevicesParamsConst::GAMMA_CORRECTION>:
 80155c9:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80155cd:	6f635f61 	svcvs	0x00635f61
 80155d1:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 80155d5:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

080155da <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 80155da:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 80155de:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 80155e2:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80155e6:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 80155ea:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

080155ec <DevicesParamsConst::MAP>:
 80155ec:	5f64656c 	svcpl	0x0064656c
 80155f0:	5f626772 	svcpl	0x00626772
 80155f4:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 80155f8:	00676e69 	rsbeq	r6, r7, r9, ror #28

080155fc <DevicesParamsConst::TYPE>:
 80155fc:	5f64656c 	svcpl	0x0064656c
 8015600:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08015605 <DevicesParamsConst::COUNT>:
 8015605:	5f64656c 	svcpl	0x0064656c
 8015609:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801560d:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801560f <DevicesParamsConst::LED_T0H>:
 801560f:	5f64656c 	svcpl	0x0064656c
 8015613:	00683074 	rsbeq	r3, r8, r4, ror r0

08015617 <DevicesParamsConst::LED_T1H>:
 8015617:	5f64656c 	svcpl	0x0064656c
 801561b:	00683174 	rsbeq	r3, r8, r4, ror r1

0801561f <DevicesParamsConst::FILE_NAME>:
 801561f:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8015623:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8015627:	00747874 	rsbseq	r7, r4, r4, ror r8
 801562b:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801562f:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8015633:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015637:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801563b:	002c2264 	eoreq	r2, ip, r4, ror #4
 801563f:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015643:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015647:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801564b:	0a64252e 	beq	991eb0b <__exidx_end+0x190904f>
 801564f:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8015653:	0a232073 	beq	88dd827 <__exidx_end+0x8c7d6b>
	...

08015658 <LightSetParamsConst::START_UNI_PORT>:
 8015658:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801565c:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8015660:	6f705f69 	svcvs	0x00705f69
 8015664:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8015668:	00000000 	andeq	r0, r0, r0

0801566c <LightSetParamsConst::DMX_START_ADDRESS>:
 801566c:	5f786d64 	svcpl	0x00786d64
 8015670:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8015674:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8015678:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801567c:	6f4e0073 	svcvs	0x004e0073
 8015680:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015684:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015688:	756f6620 	strbvc	r6, [pc, #-1568]!	; 8015070 <PixelType::MAPS+0x4>
 801568c:	5300646e 	movwpl	r6, #1134	; 0x46e
 8015690:	30313148 	eorscc	r3, r1, r8, asr #2
 8015694:	53530036 	cmppl	r3, #54	; 0x36
 8015698:	30333144 	eorscc	r3, r3, r4, asr #2
 801569c:	73250036 			; <UNDEFINED> instruction: 0x73250036
 80156a0:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 80156a4:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 80156a8:	aa40000a 	bge	90156d8 <__exidx_end+0xfffc1c>
 80156ac:	00eeaaee 	rsceq	sl, lr, lr, ror #21

080156b0 <_OledFont8x6>:
 80156b0:	00000040 	andeq	r0, r0, r0, asr #32
 80156b4:	40000000 	andmi	r0, r0, r0
 80156b8:	005f0000 	subseq	r0, pc, r0
 80156bc:	00400000 	subeq	r0, r0, r0
 80156c0:	00070007 	andeq	r0, r7, r7
 80156c4:	7f144000 	svcvc	0x00144000
 80156c8:	00147f14 	andseq	r7, r4, r4, lsl pc
 80156cc:	7f2a2440 	svcvc	0x002a2440
 80156d0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80156d4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80156d8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80156dc:	50205649 	eorpl	r5, r0, r9, asr #12
 80156e0:	08004000 	stmdaeq	r0, {lr}
 80156e4:	00000307 	andeq	r0, r0, r7, lsl #6
 80156e8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80156ec:	40000041 	andmi	r0, r0, r1, asr #32
 80156f0:	1c224100 	stfnes	f4, [r2], #-0
 80156f4:	2a400000 	bcs	90156fc <__exidx_end+0xfffc40>
 80156f8:	2a1c7f1c 	bcs	8735370 <__exidx_end+0x71f8b4>
 80156fc:	08084000 	stmdaeq	r8, {lr}
 8015700:	0008083e 	andeq	r0, r8, lr, lsr r8
 8015704:	70800040 	addvc	r0, r0, r0, asr #32
 8015708:	40000030 	andmi	r0, r0, r0, lsr r0
 801570c:	08080808 	stmdaeq	r8, {r3, fp}
 8015710:	00400008 	subeq	r0, r0, r8
 8015714:	00606000 	rsbeq	r6, r0, r0
 8015718:	10204000 	eorne	r4, r0, r0
 801571c:	00020408 	andeq	r0, r2, r8, lsl #8
 8015720:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8015724:	40003e45 	andmi	r3, r0, r5, asr #28
 8015728:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801572c:	72400000 	subvc	r0, r0, #0
 8015730:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8015734:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8015738:	00334d49 	eorseq	r4, r3, r9, asr #26
 801573c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8015740:	4000107f 	andmi	r1, r0, pc, ror r0
 8015744:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8015748:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801574c:	3149494a 	cmpcc	r9, sl, asr #18
 8015750:	21414000 	mrscs	r4, (UNDEF: 65)
 8015754:	00070911 	andeq	r0, r7, r1, lsl r9
 8015758:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801575c:	40003649 	andmi	r3, r0, r9, asr #12
 8015760:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8015764:	0040001e 	subeq	r0, r0, lr, lsl r0
 8015768:	00001400 	andeq	r1, r0, r0, lsl #8
 801576c:	40004000 	andmi	r4, r0, r0
 8015770:	00000034 	andeq	r0, r0, r4, lsr r0
 8015774:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8015778:	40004122 	andmi	r4, r0, r2, lsr #2
 801577c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8015780:	00400014 	subeq	r0, r0, r4, lsl r0
 8015784:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8015788:	01024000 	mrseq	r4, (UNDEF: 2)
 801578c:	00060959 	andeq	r0, r6, r9, asr r9
 8015790:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8015794:	40004e59 	andmi	r4, r0, r9, asr lr
 8015798:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801579c:	7f40007c 	svcvc	0x0040007c
 80157a0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80157a4:	413e4000 	teqmi	lr, r0
 80157a8:	00224141 	eoreq	r4, r2, r1, asr #2
 80157ac:	41417f40 	cmpmi	r1, r0, asr #30
 80157b0:	40003e41 	andmi	r3, r0, r1, asr #28
 80157b4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80157b8:	7f400041 	svcvc	0x00400041
 80157bc:	01090909 	tsteq	r9, r9, lsl #18
 80157c0:	413e4000 	teqmi	lr, r0
 80157c4:	00735141 	rsbseq	r5, r3, r1, asr #2
 80157c8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80157cc:	40007f08 	andmi	r7, r0, r8, lsl #30
 80157d0:	417f4100 	cmnmi	pc, r0, lsl #2
 80157d4:	20400000 	subcs	r0, r0, r0
 80157d8:	013f4140 	teqeq	pc, r0, asr #2
 80157dc:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80157e0:	00412214 	subeq	r2, r1, r4, lsl r2
 80157e4:	40407f40 	submi	r7, r0, r0, asr #30
 80157e8:	40004040 	andmi	r4, r0, r0, asr #32
 80157ec:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80157f0:	7f40007f 	svcvc	0x0040007f
 80157f4:	7f100804 	svcvc	0x00100804
 80157f8:	413e4000 	teqmi	lr, r0
 80157fc:	003e4141 	eorseq	r4, lr, r1, asr #2
 8015800:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8015804:	40000609 	andmi	r0, r0, r9, lsl #12
 8015808:	2151413e 	cmpcs	r1, lr, lsr r1
 801580c:	7f40005e 	svcvc	0x0040005e
 8015810:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8015814:	49264000 	stmdbmi	r6!, {lr}
 8015818:	00324949 	eorseq	r4, r2, r9, asr #18
 801581c:	7f010340 	svcvc	0x00010340
 8015820:	40000301 	andmi	r0, r0, r1, lsl #6
 8015824:	4040403f 	submi	r4, r0, pc, lsr r0
 8015828:	1f40003f 	svcne	0x0040003f
 801582c:	1f204020 	svcne	0x00204020
 8015830:	403f4000 	eorsmi	r4, pc, r0
 8015834:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8015838:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801583c:	40006314 	andmi	r6, r0, r4, lsl r3
 8015840:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8015844:	61400003 	cmpvs	r0, r3
 8015848:	434d4959 	movtmi	r4, #55641	; 0xd959
 801584c:	7f004000 	svcvc	0x00004000
 8015850:	00414141 	subeq	r4, r1, r1, asr #2
 8015854:	08040240 	stmdaeq	r4, {r6, r9}
 8015858:	40002010 	andmi	r2, r0, r0, lsl r0
 801585c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8015860:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8015864:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8015868:	40404000 	submi	r4, r0, r0
 801586c:	00404040 	subeq	r4, r0, r0, asr #32
 8015870:	07030040 	streq	r0, [r3, -r0, asr #32]
 8015874:	40000008 	andmi	r0, r0, r8
 8015878:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801587c:	7f400040 	svcvc	0x00400040
 8015880:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8015884:	44384000 	ldrtmi	r4, [r8], #-0
 8015888:	00284444 	eoreq	r4, r8, r4, asr #8
 801588c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8015890:	40007f28 	andmi	r7, r0, r8, lsr #30
 8015894:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8015898:	00400018 	subeq	r0, r0, r8, lsl r0
 801589c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 80158a0:	a4184000 	ldrge	r4, [r8], #-0
 80158a4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80158a8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80158ac:	40007804 	andmi	r7, r0, r4, lsl #16
 80158b0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80158b4:	20400000 	subcs	r0, r0, r0
 80158b8:	003d4040 	eorseq	r4, sp, r0, asr #32
 80158bc:	107f4000 	rsbsne	r4, pc, r0
 80158c0:	00004428 	andeq	r4, r0, r8, lsr #8
 80158c4:	7f410040 	svcvc	0x00410040
 80158c8:	40000040 	andmi	r0, r0, r0, asr #32
 80158cc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80158d0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80158d4:	78040408 	stmdavc	r4, {r3, sl}
 80158d8:	44384000 	ldrtmi	r4, [r8], #-0
 80158dc:	00384444 	eorseq	r4, r8, r4, asr #8
 80158e0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80158e4:	40001824 	andmi	r1, r0, r4, lsr #16
 80158e8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80158ec:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80158f0:	08040408 	stmdaeq	r4, {r3, sl}
 80158f4:	54484000 	strbpl	r4, [r8], #-0
 80158f8:	00245454 	eoreq	r5, r4, r4, asr r4
 80158fc:	3f040440 	svccc	0x00040440
 8015900:	40002444 	andmi	r2, r0, r4, asr #8
 8015904:	2040403c 	subcs	r4, r0, ip, lsr r0
 8015908:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801590c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8015910:	403c4000 	eorsmi	r4, ip, r0
 8015914:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8015918:	10284440 	eorne	r4, r8, r0, asr #8
 801591c:	40004428 	andmi	r4, r0, r8, lsr #8
 8015920:	9090904c 	addsls	r9, r0, ip, asr #32
 8015924:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8015928:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801592c:	08004000 	stmdaeq	r0, {lr}
 8015930:	00004136 	andeq	r4, r0, r6, lsr r1
 8015934:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8015938:	40000000 	andmi	r0, r0, r0
 801593c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8015940:	02400000 	subeq	r0, r0, #0
 8015944:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8015948:	263c4000 	ldrtcs	r4, [ip], -r0
 801594c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08015950 <oled_128x32_init>:
 8015950:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8015954:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8015958:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801595c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8015960:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8015964:	a6a440db 	ssatge	r4, #5, fp, asr #1

08015968 <oled_128x64_init>:
 8015968:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801596c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8015970:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8015974:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8015978:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801597c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08015980 <vtable for Ssd1306>:
	...
 8015988:	08010859 	stmdaeq	r1, {r0, r3, r4, r6, fp}
 801598c:	08010885 	stmdaeq	r1, {r0, r2, r7, fp}
 8015990:	08010b95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, fp}
 8015994:	08010b1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, fp}
 8015998:	080109e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp}
 801599c:	080108a5 	stmdaeq	r1, {r0, r2, r5, r7, fp}
 80159a0:	080108cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, fp}
 80159a4:	080109bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, fp}
 80159a8:	08010979 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, fp}
 80159ac:	0801085b 	stmdaeq	r1, {r0, r1, r3, r4, r6, fp}
 80159b0:	08010a25 	stmdaeq	r1, {r0, r2, r5, r9, fp}
 80159b4:	08010a31 	stmdaeq	r1, {r0, r4, r5, r9, fp}
 80159b8:	08010a4b 	stmdaeq	r1, {r0, r1, r3, r6, r9, fp}
 80159bc:	0801085d 	stmdaeq	r1, {r0, r2, r3, r4, r6, fp}
 80159c0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80159c4:	5b1b006d 	blpl	86d5b80 <__exidx_end+0x6c00c4>
 80159c8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80159cc:	31335b1b 	teqcc	r3, fp, lsl fp
 80159d0:	5b1b006d 	blpl	86d5b8c <__exidx_end+0x6c00d0>
 80159d4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80159d8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80159dc:	5b1b006d 	blpl	86d5b98 <__exidx_end+0x6c00dc>
 80159e0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80159e4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80159e8:	205d732a 	subscs	r7, sp, sl, lsr #6
 80159ec:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80159f0:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80159f4:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80159f8:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80159fc:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8015a00:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8015a04:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8015a08:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8015a0c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015a10:	000a7525 	andeq	r7, sl, r5, lsr #10
 8015a14:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8015a18:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015a1c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8015a20:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8015a24:	6b636f6c 	blvs	98f17dc <__exidx_end+0x18dbd20>
 8015a28:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8015a2c:	000a7469 	andeq	r7, sl, r9, ror #8
 8015a30:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8015a34:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015a38:	6f6c4270 	svcvs	0x006c4270
 8015a3c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8015a40:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8015a44:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8015a48:	7a697320 	bvc	9a726d0 <__exidx_end+0x1a5cc14>
 8015a4c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8015a50:	6164202c 	cmnvs	r4, ip, lsr #32
 8015a54:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8015a58:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8015a5c:	3a656572 	bcc	996f02c <__exidx_end+0x1959570>
 8015a60:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8015a64:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015a68:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8015a6c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8015a70:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8015a74:	6f6c4270 	svcvs	0x006c4270
 8015a78:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8015a7c:	0a702520 	beq	9c1ef04 <__exidx_end+0x1c09448>
 8015a80:	00000000 	andeq	r0, r0, r0

08015a84 <days_of_month>:
 8015a84:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a88:	0000001c 	andeq	r0, r0, ip, lsl r0
 8015a8c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a90:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015a94:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015a98:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015a9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015aa0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015aa4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015aa8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015aac:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015ab0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08015ab4 <__exidx_start>:
 8015ab4:	7fff3890 	svcvc	0x00ff3890
 8015ab8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08015abc <.ARM.attributes>:
 8015abc:	00002e41 	andeq	r2, r0, r1, asr #28
 8015ac0:	61656100 	cmnvs	r5, r0, lsl #2
 8015ac4:	01006962 	tsteq	r0, r2, ror #18
 8015ac8:	00000024 	andeq	r0, r0, r4, lsr #32
 8015acc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8015ad0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8015ad4:	0600334d 	streq	r3, [r0], -sp, asr #6
 8015ad8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8015adc:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8015ae0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8015ae4:	1a011803 	bne	805baf8 <__exidx_end+0x4603c>
 8015ae8:	Address 0x0000000008015ae8 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20015800 	andcs	r5, r1, r0, lsl #16

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000030:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000040:	00000060 	andeq	r0, r0, r0, rrx
	...
20000050:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000060:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000070:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000080:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000090:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e0 <SystemCoreClock>:
200000e0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <HttpDaemon::m_Content>:
	...

200006b8 <OscServer::s_aPathInfo>:
	...

20000738 <OscServer::s_pUdpBuffer>:
20000738:	00000000 	andeq	r0, r0, r0

2000073c <OscServer::s_aPathSecond>:
	...

200007bc <OscServer::s_aPathBlackOut>:
	...

2000083c <OscServer::s_aPath>:
	...

200008bc <OscServer::s_pData>:
	...

20000abc <OscServer::s_pThis>:
20000abc:	00000000 	andeq	r0, r0, r0

20000ac0 <OscSimpleSend::s_Message>:
	...

20000cc0 <WS28xxDmx::s_pThis>:
20000cc0:	00000000 	andeq	r0, r0, r0

20000cc4 <PixelPatterns::m_PortConfig>:
	...

20000ce4 <PixelPatterns::m_nActivePorts>:
20000ce4:	00000000 	andeq	r0, r0, r0

20000ce8 <PixelPatterns::m_pScannerColours>:
20000ce8:	00000000 	andeq	r0, r0, r0

20000cec <PixelPatterns::m_nCount>:
20000cec:	00000000 	andeq	r0, r0, r0

20000cf0 <PixelPatterns::m_pOutput>:
20000cf0:	00000000 	andeq	r0, r0, r0

20000cf4 <PixelTestPattern::s_Pattern>:
20000cf4:	00000000 	andeq	r0, r0, r0

20000cf8 <s_tmp>:
20000cf8:	00000000 	andeq	r0, r0, r0

20000cfc <WS28xx::s_pThis>:
20000cfc:	00000000 	andeq	r0, r0, r0

20000d00 <SpiFlashStore::s_nWaitMillis>:
20000d00:	00000000 	andeq	r0, r0, r0

20000d04 <SpiFlashStore::s_SpiFlashData>:
	...

20001d04 <SpiFlashStore::s_nStartAddress>:
20001d04:	00000000 	andeq	r0, r0, r0

20001d08 <SpiFlashStore::s_bHaveFlashChip>:
20001d08:	00000000 	andeq	r0, r0, r0

20001d0c <SpiFlashStore::s_nSpiFlashStoreSize>:
20001d0c:	00000000 	andeq	r0, r0, r0

20001d10 <SpiFlashStore::s_State>:
20001d10:	00000000 	andeq	r0, r0, r0

20001d14 <SpiFlashStore::s_pThis>:
20001d14:	00000000 	andeq	r0, r0, r0

20001d18 <SpiFlashStore::s_bIsNew>:
20001d18:	00000000 	andeq	r0, r0, r0

20001d1c <StoreNetwork::s_pThis>:
20001d1c:	00000000 	andeq	r0, r0, r0

20001d20 <StoreOscServer::s_pThis>:
20001d20:	00000000 	andeq	r0, r0, r0

20001d24 <StoreRemoteConfig::s_pThis>:
20001d24:	00000000 	andeq	r0, r0, r0

20001d28 <StorePixelDmx::s_pThis>:
20001d28:	00000000 	andeq	r0, r0, r0

20001d2c <FlashRom::s_pThis>:
20001d2c:	00000000 	andeq	r0, r0, r0

20001d30 <flashrom::s_nAddress>:
20001d30:	00000000 	andeq	r0, r0, r0

20001d34 <flashrom::s_State>:
20001d34:	00000000 	andeq	r0, r0, r0

20001d38 <flashrom::s_nPage>:
20001d38:	00000000 	andeq	r0, r0, r0

20001d3c <flashrom::s_pData>:
20001d3c:	00000000 	andeq	r0, r0, r0

20001d40 <flashrom::s_isBank0>:
20001d40:	00000000 	andeq	r0, r0, r0

20001d44 <flashrom::s_nLength>:
20001d44:	00000000 	andeq	r0, r0, r0

20001d48 <g_ip_info>:
	...

20001d54 <g_mac_address>:
20001d54:	00000000 	andeq	r0, r0, r0
	...

20001d5a <s_is_dhcp>:
	...

20001d5c <s_p>:
20001d5c:	00000000 	andeq	r0, r0, r0

20001d60 <s_ticker>:
20001d60:	00000000 	andeq	r0, r0, r0

20001d64 <s_mac_address>:
	...

20001d6c <s_mac_address_arp_reply>:
	...

20001d74 <s_id>:
20001d74:	00000000 	andeq	r0, r0, r0

20001d78 <s_recv_queue>:
	...

200028e8 <s_tcb>:
	...

2000292c <s_tcp>:
	...

20002f18 <broadcast_mask>:
20002f18:	00000000 	andeq	r0, r0, r0

20002f1c <gw_ip>:
20002f1c:	00000000 	andeq	r0, r0, r0

20002f20 <on_network_mask>:
20002f20:	00000000 	andeq	r0, r0, r0

20002f24 <s_id>:
20002f24:	00000000 	andeq	r0, r0, r0

20002f28 <s_ports_allowed>:
	...

20002f48 <s_recv_queue>:
	...

20008be8 <s_send_packet>:
	...

200091d4 <MDNS::s_nRemoteIp>:
200091d4:	00000000 	andeq	r0, r0, r0

200091d8 <MDNS::s_nRemotePort>:
200091d8:	00000000 	andeq	r0, r0, r0

200091dc <MDNS::s_nMulticastIp>:
200091dc:	00000000 	andeq	r0, r0, r0

200091e0 <MDNS::s_AnswerLocalIp>:
	...

200093e4 <MDNS::s_ServiceRecords>:
	...

20009404 <MDNS::s_nBytesReceived>:
20009404:	00000000 	andeq	r0, r0, r0

20009408 <MDNS::s_ServiceRecordsData>:
	...

2000960c <MDNS::s_pName>:
2000960c:	00000000 	andeq	r0, r0, r0

20009610 <MDNS::s_pBuffer>:
20009610:	00000000 	andeq	r0, r0, r0

20009614 <Network::s_pThis>:
20009614:	00000000 	andeq	r0, r0, r0

20009618 <s_arp_announce>:
	...

20009644 <s_arp_reply>:
	...

20009670 <s_arp_request>:
	...

2000969c <s_arp_records>:
	...

2000981c <s_entry_current>:
2000981c:	00000000 	andeq	r0, r0, r0

20009820 <s_dhcp_allocated_gw>:
20009820:	00000000 	andeq	r0, r0, r0

20009824 <s_dhcp_allocated_ip>:
20009824:	00000000 	andeq	r0, r0, r0

20009828 <s_dhcp_allocated_netmask>:
20009828:	00000000 	andeq	r0, r0, r0

2000982c <s_dhcp_message>:
	...

20009a50 <s_dhcp_server_ip>:
20009a50:	00000000 	andeq	r0, r0, r0

20009a54 <s_groups>:
	...

20009b74 <s_id>:
20009b74:	00000000 	andeq	r0, r0, r0

20009b78 <s_joins_allowed_index>:
20009b78:	00000000 	andeq	r0, r0, r0

20009b7c <s_leave>:
	...

20009bac <s_multicast_mac>:
	...

20009bb4 <s_report>:
	...

20009be2 <PropertiesConfig::s_Config>:
	...

20009be4 <Display::s_pThis>:
20009be4:	00000000 	andeq	r0, r0, r0

20009be8 <_ClearBuffer>:
	...

20009c70 <Ssd1306::s_pThis>:
20009c70:	00000000 	andeq	r0, r0, r0

20009c74 <FirmwareVersion::s_FirmwareVersion>:
	...

20009c8a <FirmwareVersion::s_Print>:
	...

20009ccc <FirmwareVersion::s_pThis>:
20009ccc:	00000000 	andeq	r0, r0, r0

20009cd0 <LedBlink::s_pThis>:
20009cd0:	00000000 	andeq	r0, r0, r0

20009cd4 <Hardware::s_pThis>:
20009cd4:	00000000 	andeq	r0, r0, r0

20009cd8 <last.0>:
	...

20009ce0 <s_micros>:
	...

20009ce8 <set_timer>:
20009ce8:	00000000 	andeq	r0, r0, r0

20009cec <s_nSysTickMillis>:
20009cec:	00000000 	andeq	r0, r0, r0

20009cf0 <s_nAddress>:
20009cf0:	00000000 	andeq	r0, r0, r0

20009cf4 <s_TxBuffer>:
	...

2000fcf4 <dma_current_ptp_rxdesc>:
2000fcf4:	00000000 	andeq	r0, r0, r0

2000fcf8 <dma_current_ptp_txdesc>:
2000fcf8:	00000000 	andeq	r0, r0, r0

2000fcfc <dma_current_rxdesc>:
2000fcfc:	00000000 	andeq	r0, r0, r0

2000fd00 <dma_current_txdesc>:
2000fd00:	00000000 	andeq	r0, r0, r0

2000fd04 <enet_initpara>:
	...

2000fd40 <rx_buff>:
	...

20012ce0 <rxdesc_tab>:
	...

20012d60 <tx_buff>:
	...

20013948 <txdesc_tab>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
