
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007ecd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, fp, ip, sp, lr}
 8007008:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800700c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007010:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007014:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007018:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
	...
 800702c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007030:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800703c:	08011299 	stmdaeq	r1, {r0, r3, r4, r7, r9, ip}
 8007040:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007044:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007048:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800704c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007050:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007054:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007058:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800705c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007060:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007064:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007068:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800706c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007070:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007074:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007078:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800707c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007080:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007084:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007088:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800708c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007090:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007094:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007098:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800709c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070a0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070a4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070a8:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070ac:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070b0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070b4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070b8:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070bc:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070c0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070c4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070c8:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070cc:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070d0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070d4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070d8:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070dc:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070e0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070e4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070e8:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070ec:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070f0:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 80070f4:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
	...
 8007100:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800710c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007110:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007114:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007118:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800711c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007120:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007124:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007128:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800712c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007130:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007134:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007138:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800713c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007140:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007144:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8007148:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800714c:	08007f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <__aeabi_d2f>:
 8007150:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007154:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007158:	bf24      	itt	cs
 800715a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800715e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007162:	d90d      	bls.n	8007180 <__aeabi_d2f+0x30>
 8007164:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007168:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 800716c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007170:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007174:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007178:	bf08      	it	eq
 800717a:	f020 0001 	biceq.w	r0, r0, #1
 800717e:	4770      	bx	lr
 8007180:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007184:	d121      	bne.n	80071ca <__aeabi_d2f+0x7a>
 8007186:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800718a:	bfbc      	itt	lt
 800718c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007190:	4770      	bxlt	lr
 8007192:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007196:	ea4f 5252 	mov.w	r2, r2, lsr #21
 800719a:	f1c2 0218 	rsb	r2, r2, #24
 800719e:	f1c2 0c20 	rsb	ip, r2, #32
 80071a2:	fa10 f30c 	lsls.w	r3, r0, ip
 80071a6:	fa20 f002 	lsr.w	r0, r0, r2
 80071aa:	bf18      	it	ne
 80071ac:	f040 0001 	orrne.w	r0, r0, #1
 80071b0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80071b4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80071b8:	fa03 fc0c 	lsl.w	ip, r3, ip
 80071bc:	ea40 000c 	orr.w	r0, r0, ip
 80071c0:	fa23 f302 	lsr.w	r3, r3, r2
 80071c4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80071c8:	e7cc      	b.n	8007164 <__aeabi_d2f+0x14>
 80071ca:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80071ce:	d107      	bne.n	80071e0 <__aeabi_d2f+0x90>
 80071d0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80071d4:	bf1e      	ittt	ne
 80071d6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80071da:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80071de:	4770      	bxne	lr
 80071e0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80071e4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80071e8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80071ec:	4770      	bx	lr
 80071ee:	bf00      	nop

080071f0 <__aeabi_frsub>:
 80071f0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80071f4:	e002      	b.n	80071fc <__addsf3>
 80071f6:	bf00      	nop

080071f8 <__aeabi_fsub>:
 80071f8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080071fc <__addsf3>:
 80071fc:	0042      	lsls	r2, r0, #1
 80071fe:	bf1f      	itttt	ne
 8007200:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007204:	ea92 0f03 	teqne	r2, r3
 8007208:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 800720c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007210:	d06a      	beq.n	80072e8 <__addsf3+0xec>
 8007212:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007216:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800721a:	bfc1      	itttt	gt
 800721c:	18d2      	addgt	r2, r2, r3
 800721e:	4041      	eorgt	r1, r0
 8007220:	4048      	eorgt	r0, r1
 8007222:	4041      	eorgt	r1, r0
 8007224:	bfb8      	it	lt
 8007226:	425b      	neglt	r3, r3
 8007228:	2b19      	cmp	r3, #25
 800722a:	bf88      	it	hi
 800722c:	4770      	bxhi	lr
 800722e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007232:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007236:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800723a:	bf18      	it	ne
 800723c:	4240      	negne	r0, r0
 800723e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007242:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007246:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800724a:	bf18      	it	ne
 800724c:	4249      	negne	r1, r1
 800724e:	ea92 0f03 	teq	r2, r3
 8007252:	d03f      	beq.n	80072d4 <__addsf3+0xd8>
 8007254:	f1a2 0201 	sub.w	r2, r2, #1
 8007258:	fa41 fc03 	asr.w	ip, r1, r3
 800725c:	eb10 000c 	adds.w	r0, r0, ip
 8007260:	f1c3 0320 	rsb	r3, r3, #32
 8007264:	fa01 f103 	lsl.w	r1, r1, r3
 8007268:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800726c:	d502      	bpl.n	8007274 <__addsf3+0x78>
 800726e:	4249      	negs	r1, r1
 8007270:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007274:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007278:	d313      	bcc.n	80072a2 <__addsf3+0xa6>
 800727a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800727e:	d306      	bcc.n	800728e <__addsf3+0x92>
 8007280:	0840      	lsrs	r0, r0, #1
 8007282:	ea4f 0131 	mov.w	r1, r1, rrx
 8007286:	f102 0201 	add.w	r2, r2, #1
 800728a:	2afe      	cmp	r2, #254	; 0xfe
 800728c:	d251      	bcs.n	8007332 <__addsf3+0x136>
 800728e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007292:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007296:	bf08      	it	eq
 8007298:	f020 0001 	biceq.w	r0, r0, #1
 800729c:	ea40 0003 	orr.w	r0, r0, r3
 80072a0:	4770      	bx	lr
 80072a2:	0049      	lsls	r1, r1, #1
 80072a4:	eb40 0000 	adc.w	r0, r0, r0
 80072a8:	3a01      	subs	r2, #1
 80072aa:	bf28      	it	cs
 80072ac:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 80072b0:	d2ed      	bcs.n	800728e <__addsf3+0x92>
 80072b2:	fab0 fc80 	clz	ip, r0
 80072b6:	f1ac 0c08 	sub.w	ip, ip, #8
 80072ba:	ebb2 020c 	subs.w	r2, r2, ip
 80072be:	fa00 f00c 	lsl.w	r0, r0, ip
 80072c2:	bfaa      	itet	ge
 80072c4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 80072c8:	4252      	neglt	r2, r2
 80072ca:	4318      	orrge	r0, r3
 80072cc:	bfbc      	itt	lt
 80072ce:	40d0      	lsrlt	r0, r2
 80072d0:	4318      	orrlt	r0, r3
 80072d2:	4770      	bx	lr
 80072d4:	f092 0f00 	teq	r2, #0
 80072d8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 80072dc:	bf06      	itte	eq
 80072de:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 80072e2:	3201      	addeq	r2, #1
 80072e4:	3b01      	subne	r3, #1
 80072e6:	e7b5      	b.n	8007254 <__addsf3+0x58>
 80072e8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80072ec:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80072f0:	bf18      	it	ne
 80072f2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80072f6:	d021      	beq.n	800733c <__addsf3+0x140>
 80072f8:	ea92 0f03 	teq	r2, r3
 80072fc:	d004      	beq.n	8007308 <__addsf3+0x10c>
 80072fe:	f092 0f00 	teq	r2, #0
 8007302:	bf08      	it	eq
 8007304:	4608      	moveq	r0, r1
 8007306:	4770      	bx	lr
 8007308:	ea90 0f01 	teq	r0, r1
 800730c:	bf1c      	itt	ne
 800730e:	2000      	movne	r0, #0
 8007310:	4770      	bxne	lr
 8007312:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007316:	d104      	bne.n	8007322 <__addsf3+0x126>
 8007318:	0040      	lsls	r0, r0, #1
 800731a:	bf28      	it	cs
 800731c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007320:	4770      	bx	lr
 8007322:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007326:	bf3c      	itt	cc
 8007328:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 800732c:	4770      	bxcc	lr
 800732e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007332:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007336:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800733a:	4770      	bx	lr
 800733c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007340:	bf16      	itet	ne
 8007342:	4608      	movne	r0, r1
 8007344:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007348:	4601      	movne	r1, r0
 800734a:	0242      	lsls	r2, r0, #9
 800734c:	bf06      	itte	eq
 800734e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007352:	ea90 0f01 	teqeq	r0, r1
 8007356:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 800735a:	4770      	bx	lr

0800735c <__aeabi_ui2f>:
 800735c:	f04f 0300 	mov.w	r3, #0
 8007360:	e004      	b.n	800736c <__aeabi_i2f+0x8>
 8007362:	bf00      	nop

08007364 <__aeabi_i2f>:
 8007364:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007368:	bf48      	it	mi
 800736a:	4240      	negmi	r0, r0
 800736c:	ea5f 0c00 	movs.w	ip, r0
 8007370:	bf08      	it	eq
 8007372:	4770      	bxeq	lr
 8007374:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007378:	4601      	mov	r1, r0
 800737a:	f04f 0000 	mov.w	r0, #0
 800737e:	e01c      	b.n	80073ba <__aeabi_l2f+0x2a>

08007380 <__aeabi_ul2f>:
 8007380:	ea50 0201 	orrs.w	r2, r0, r1
 8007384:	bf08      	it	eq
 8007386:	4770      	bxeq	lr
 8007388:	f04f 0300 	mov.w	r3, #0
 800738c:	e00a      	b.n	80073a4 <__aeabi_l2f+0x14>
 800738e:	bf00      	nop

08007390 <__aeabi_l2f>:
 8007390:	ea50 0201 	orrs.w	r2, r0, r1
 8007394:	bf08      	it	eq
 8007396:	4770      	bxeq	lr
 8007398:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800739c:	d502      	bpl.n	80073a4 <__aeabi_l2f+0x14>
 800739e:	4240      	negs	r0, r0
 80073a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80073a4:	ea5f 0c01 	movs.w	ip, r1
 80073a8:	bf02      	ittt	eq
 80073aa:	4684      	moveq	ip, r0
 80073ac:	4601      	moveq	r1, r0
 80073ae:	2000      	moveq	r0, #0
 80073b0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 80073b4:	bf08      	it	eq
 80073b6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 80073ba:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 80073be:	fabc f28c 	clz	r2, ip
 80073c2:	3a08      	subs	r2, #8
 80073c4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 80073c8:	db10      	blt.n	80073ec <__aeabi_l2f+0x5c>
 80073ca:	fa01 fc02 	lsl.w	ip, r1, r2
 80073ce:	4463      	add	r3, ip
 80073d0:	fa00 fc02 	lsl.w	ip, r0, r2
 80073d4:	f1c2 0220 	rsb	r2, r2, #32
 80073d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80073dc:	fa20 f202 	lsr.w	r2, r0, r2
 80073e0:	eb43 0002 	adc.w	r0, r3, r2
 80073e4:	bf08      	it	eq
 80073e6:	f020 0001 	biceq.w	r0, r0, #1
 80073ea:	4770      	bx	lr
 80073ec:	f102 0220 	add.w	r2, r2, #32
 80073f0:	fa01 fc02 	lsl.w	ip, r1, r2
 80073f4:	f1c2 0220 	rsb	r2, r2, #32
 80073f8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80073fc:	fa21 f202 	lsr.w	r2, r1, r2
 8007400:	eb43 0002 	adc.w	r0, r3, r2
 8007404:	bf08      	it	eq
 8007406:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800740a:	4770      	bx	lr

0800740c <__gesf2>:
 800740c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007410:	e006      	b.n	8007420 <__cmpsf2+0x4>
 8007412:	bf00      	nop

08007414 <__lesf2>:
 8007414:	f04f 0c01 	mov.w	ip, #1
 8007418:	e002      	b.n	8007420 <__cmpsf2+0x4>
 800741a:	bf00      	nop

0800741c <__cmpsf2>:
 800741c:	f04f 0c01 	mov.w	ip, #1
 8007420:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007424:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007428:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800742c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007430:	bf18      	it	ne
 8007432:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007436:	d011      	beq.n	800745c <__cmpsf2+0x40>
 8007438:	b001      	add	sp, #4
 800743a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800743e:	bf18      	it	ne
 8007440:	ea90 0f01 	teqne	r0, r1
 8007444:	bf58      	it	pl
 8007446:	ebb2 0003 	subspl.w	r0, r2, r3
 800744a:	bf88      	it	hi
 800744c:	17c8      	asrhi	r0, r1, #31
 800744e:	bf38      	it	cc
 8007450:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007454:	bf18      	it	ne
 8007456:	f040 0001 	orrne.w	r0, r0, #1
 800745a:	4770      	bx	lr
 800745c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007460:	d102      	bne.n	8007468 <__cmpsf2+0x4c>
 8007462:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007466:	d105      	bne.n	8007474 <__cmpsf2+0x58>
 8007468:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800746c:	d1e4      	bne.n	8007438 <__cmpsf2+0x1c>
 800746e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007472:	d0e1      	beq.n	8007438 <__cmpsf2+0x1c>
 8007474:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007478:	4770      	bx	lr
 800747a:	bf00      	nop

0800747c <__aeabi_cfrcmple>:
 800747c:	4684      	mov	ip, r0
 800747e:	4608      	mov	r0, r1
 8007480:	4661      	mov	r1, ip
 8007482:	e7ff      	b.n	8007484 <__aeabi_cfcmpeq>

08007484 <__aeabi_cfcmpeq>:
 8007484:	b50f      	push	{r0, r1, r2, r3, lr}
 8007486:	f7ff ffc9 	bl	800741c <__cmpsf2>
 800748a:	2800      	cmp	r0, #0
 800748c:	bf48      	it	mi
 800748e:	f110 0f00 	cmnmi.w	r0, #0
 8007492:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007494 <__aeabi_fcmpeq>:
 8007494:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007498:	f7ff fff4 	bl	8007484 <__aeabi_cfcmpeq>
 800749c:	bf0c      	ite	eq
 800749e:	2001      	moveq	r0, #1
 80074a0:	2000      	movne	r0, #0
 80074a2:	f85d fb08 	ldr.w	pc, [sp], #8
 80074a6:	bf00      	nop

080074a8 <__aeabi_fcmplt>:
 80074a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074ac:	f7ff ffea 	bl	8007484 <__aeabi_cfcmpeq>
 80074b0:	bf34      	ite	cc
 80074b2:	2001      	movcc	r0, #1
 80074b4:	2000      	movcs	r0, #0
 80074b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80074ba:	bf00      	nop

080074bc <__aeabi_fcmple>:
 80074bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074c0:	f7ff ffe0 	bl	8007484 <__aeabi_cfcmpeq>
 80074c4:	bf94      	ite	ls
 80074c6:	2001      	movls	r0, #1
 80074c8:	2000      	movhi	r0, #0
 80074ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80074ce:	bf00      	nop

080074d0 <__aeabi_fcmpge>:
 80074d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074d4:	f7ff ffd2 	bl	800747c <__aeabi_cfrcmple>
 80074d8:	bf94      	ite	ls
 80074da:	2001      	movls	r0, #1
 80074dc:	2000      	movhi	r0, #0
 80074de:	f85d fb08 	ldr.w	pc, [sp], #8
 80074e2:	bf00      	nop

080074e4 <__aeabi_fcmpgt>:
 80074e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074e8:	f7ff ffc8 	bl	800747c <__aeabi_cfrcmple>
 80074ec:	bf34      	ite	cc
 80074ee:	2001      	movcc	r0, #1
 80074f0:	2000      	movcs	r0, #0
 80074f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80074f6:	bf00      	nop

080074f8 <__aeabi_f2iz>:
 80074f8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80074fc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007500:	d30f      	bcc.n	8007522 <__aeabi_f2iz+0x2a>
 8007502:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007506:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800750a:	d90d      	bls.n	8007528 <__aeabi_f2iz+0x30>
 800750c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007510:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007514:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007518:	fa23 f002 	lsr.w	r0, r3, r2
 800751c:	bf18      	it	ne
 800751e:	4240      	negne	r0, r0
 8007520:	4770      	bx	lr
 8007522:	f04f 0000 	mov.w	r0, #0
 8007526:	4770      	bx	lr
 8007528:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800752c:	d101      	bne.n	8007532 <__aeabi_f2iz+0x3a>
 800752e:	0242      	lsls	r2, r0, #9
 8007530:	d105      	bne.n	800753e <__aeabi_f2iz+0x46>
 8007532:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007536:	bf08      	it	eq
 8007538:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800753c:	4770      	bx	lr
 800753e:	f04f 0000 	mov.w	r0, #0
 8007542:	4770      	bx	lr

08007544 <__aeabi_uldivmod>:
 8007544:	b953      	cbnz	r3, 800755c <__aeabi_uldivmod+0x18>
 8007546:	b94a      	cbnz	r2, 800755c <__aeabi_uldivmod+0x18>
 8007548:	2900      	cmp	r1, #0
 800754a:	bf08      	it	eq
 800754c:	2800      	cmpeq	r0, #0
 800754e:	bf1c      	itt	ne
 8007550:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007554:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007558:	f000 b976 	b.w	8007848 <__aeabi_idiv0>
 800755c:	f1ad 0c08 	sub.w	ip, sp, #8
 8007560:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007564:	f000 f806 	bl	8007574 <__udivmoddi4>
 8007568:	f8dd e004 	ldr.w	lr, [sp, #4]
 800756c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007570:	b004      	add	sp, #16
 8007572:	4770      	bx	lr

08007574 <__udivmoddi4>:
 8007574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007578:	9e08      	ldr	r6, [sp, #32]
 800757a:	460d      	mov	r5, r1
 800757c:	4604      	mov	r4, r0
 800757e:	4688      	mov	r8, r1
 8007580:	2b00      	cmp	r3, #0
 8007582:	d14d      	bne.n	8007620 <__udivmoddi4+0xac>
 8007584:	428a      	cmp	r2, r1
 8007586:	4694      	mov	ip, r2
 8007588:	d968      	bls.n	800765c <__udivmoddi4+0xe8>
 800758a:	fab2 f282 	clz	r2, r2
 800758e:	b152      	cbz	r2, 80075a6 <__udivmoddi4+0x32>
 8007590:	fa01 f302 	lsl.w	r3, r1, r2
 8007594:	f1c2 0120 	rsb	r1, r2, #32
 8007598:	fa20 f101 	lsr.w	r1, r0, r1
 800759c:	fa0c fc02 	lsl.w	ip, ip, r2
 80075a0:	ea41 0803 	orr.w	r8, r1, r3
 80075a4:	4094      	lsls	r4, r2
 80075a6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80075aa:	fbb8 f7f1 	udiv	r7, r8, r1
 80075ae:	fa1f fe8c 	uxth.w	lr, ip
 80075b2:	fb01 8817 	mls	r8, r1, r7, r8
 80075b6:	fb07 f00e 	mul.w	r0, r7, lr
 80075ba:	0c23      	lsrs	r3, r4, #16
 80075bc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80075c0:	4298      	cmp	r0, r3
 80075c2:	d90a      	bls.n	80075da <__udivmoddi4+0x66>
 80075c4:	eb1c 0303 	adds.w	r3, ip, r3
 80075c8:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 80075cc:	f080 811e 	bcs.w	800780c <__udivmoddi4+0x298>
 80075d0:	4298      	cmp	r0, r3
 80075d2:	f240 811b 	bls.w	800780c <__udivmoddi4+0x298>
 80075d6:	3f02      	subs	r7, #2
 80075d8:	4463      	add	r3, ip
 80075da:	1a1b      	subs	r3, r3, r0
 80075dc:	fbb3 f0f1 	udiv	r0, r3, r1
 80075e0:	fb01 3310 	mls	r3, r1, r0, r3
 80075e4:	fb00 fe0e 	mul.w	lr, r0, lr
 80075e8:	b2a4      	uxth	r4, r4
 80075ea:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80075ee:	45a6      	cmp	lr, r4
 80075f0:	d90a      	bls.n	8007608 <__udivmoddi4+0x94>
 80075f2:	eb1c 0404 	adds.w	r4, ip, r4
 80075f6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80075fa:	f080 8109 	bcs.w	8007810 <__udivmoddi4+0x29c>
 80075fe:	45a6      	cmp	lr, r4
 8007600:	f240 8106 	bls.w	8007810 <__udivmoddi4+0x29c>
 8007604:	4464      	add	r4, ip
 8007606:	3802      	subs	r0, #2
 8007608:	2100      	movs	r1, #0
 800760a:	eba4 040e 	sub.w	r4, r4, lr
 800760e:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007612:	b11e      	cbz	r6, 800761c <__udivmoddi4+0xa8>
 8007614:	2300      	movs	r3, #0
 8007616:	40d4      	lsrs	r4, r2
 8007618:	e9c6 4300 	strd	r4, r3, [r6]
 800761c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007620:	428b      	cmp	r3, r1
 8007622:	d908      	bls.n	8007636 <__udivmoddi4+0xc2>
 8007624:	2e00      	cmp	r6, #0
 8007626:	f000 80ee 	beq.w	8007806 <__udivmoddi4+0x292>
 800762a:	2100      	movs	r1, #0
 800762c:	e9c6 0500 	strd	r0, r5, [r6]
 8007630:	4608      	mov	r0, r1
 8007632:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007636:	fab3 f183 	clz	r1, r3
 800763a:	2900      	cmp	r1, #0
 800763c:	d14a      	bne.n	80076d4 <__udivmoddi4+0x160>
 800763e:	42ab      	cmp	r3, r5
 8007640:	d302      	bcc.n	8007648 <__udivmoddi4+0xd4>
 8007642:	4282      	cmp	r2, r0
 8007644:	f200 80fc 	bhi.w	8007840 <__udivmoddi4+0x2cc>
 8007648:	1a84      	subs	r4, r0, r2
 800764a:	eb65 0303 	sbc.w	r3, r5, r3
 800764e:	2001      	movs	r0, #1
 8007650:	4698      	mov	r8, r3
 8007652:	2e00      	cmp	r6, #0
 8007654:	d0e2      	beq.n	800761c <__udivmoddi4+0xa8>
 8007656:	e9c6 4800 	strd	r4, r8, [r6]
 800765a:	e7df      	b.n	800761c <__udivmoddi4+0xa8>
 800765c:	b902      	cbnz	r2, 8007660 <__udivmoddi4+0xec>
 800765e:	deff      	udf	#255	; 0xff
 8007660:	fab2 f282 	clz	r2, r2
 8007664:	2a00      	cmp	r2, #0
 8007666:	f040 8091 	bne.w	800778c <__udivmoddi4+0x218>
 800766a:	eba1 000c 	sub.w	r0, r1, ip
 800766e:	2101      	movs	r1, #1
 8007670:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007674:	fa1f fe8c 	uxth.w	lr, ip
 8007678:	fbb0 f3f7 	udiv	r3, r0, r7
 800767c:	fb07 0013 	mls	r0, r7, r3, r0
 8007680:	0c25      	lsrs	r5, r4, #16
 8007682:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007686:	fb0e f003 	mul.w	r0, lr, r3
 800768a:	42a8      	cmp	r0, r5
 800768c:	d908      	bls.n	80076a0 <__udivmoddi4+0x12c>
 800768e:	eb1c 0505 	adds.w	r5, ip, r5
 8007692:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007696:	d202      	bcs.n	800769e <__udivmoddi4+0x12a>
 8007698:	42a8      	cmp	r0, r5
 800769a:	f200 80ce 	bhi.w	800783a <__udivmoddi4+0x2c6>
 800769e:	4643      	mov	r3, r8
 80076a0:	1a2d      	subs	r5, r5, r0
 80076a2:	fbb5 f0f7 	udiv	r0, r5, r7
 80076a6:	fb07 5510 	mls	r5, r7, r0, r5
 80076aa:	fb0e fe00 	mul.w	lr, lr, r0
 80076ae:	b2a4      	uxth	r4, r4
 80076b0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80076b4:	45a6      	cmp	lr, r4
 80076b6:	d908      	bls.n	80076ca <__udivmoddi4+0x156>
 80076b8:	eb1c 0404 	adds.w	r4, ip, r4
 80076bc:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80076c0:	d202      	bcs.n	80076c8 <__udivmoddi4+0x154>
 80076c2:	45a6      	cmp	lr, r4
 80076c4:	f200 80b6 	bhi.w	8007834 <__udivmoddi4+0x2c0>
 80076c8:	4628      	mov	r0, r5
 80076ca:	eba4 040e 	sub.w	r4, r4, lr
 80076ce:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80076d2:	e79e      	b.n	8007612 <__udivmoddi4+0x9e>
 80076d4:	f1c1 0720 	rsb	r7, r1, #32
 80076d8:	408b      	lsls	r3, r1
 80076da:	fa22 fc07 	lsr.w	ip, r2, r7
 80076de:	ea4c 0c03 	orr.w	ip, ip, r3
 80076e2:	fa25 fa07 	lsr.w	sl, r5, r7
 80076e6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80076ea:	fbba f8f9 	udiv	r8, sl, r9
 80076ee:	fa20 f307 	lsr.w	r3, r0, r7
 80076f2:	fb09 aa18 	mls	sl, r9, r8, sl
 80076f6:	408d      	lsls	r5, r1
 80076f8:	fa1f fe8c 	uxth.w	lr, ip
 80076fc:	431d      	orrs	r5, r3
 80076fe:	fa00 f301 	lsl.w	r3, r0, r1
 8007702:	fb08 f00e 	mul.w	r0, r8, lr
 8007706:	0c2c      	lsrs	r4, r5, #16
 8007708:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800770c:	42a0      	cmp	r0, r4
 800770e:	fa02 f201 	lsl.w	r2, r2, r1
 8007712:	d90b      	bls.n	800772c <__udivmoddi4+0x1b8>
 8007714:	eb1c 0404 	adds.w	r4, ip, r4
 8007718:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800771c:	f080 8088 	bcs.w	8007830 <__udivmoddi4+0x2bc>
 8007720:	42a0      	cmp	r0, r4
 8007722:	f240 8085 	bls.w	8007830 <__udivmoddi4+0x2bc>
 8007726:	f1a8 0802 	sub.w	r8, r8, #2
 800772a:	4464      	add	r4, ip
 800772c:	1a24      	subs	r4, r4, r0
 800772e:	fbb4 f0f9 	udiv	r0, r4, r9
 8007732:	fb09 4410 	mls	r4, r9, r0, r4
 8007736:	fb00 fe0e 	mul.w	lr, r0, lr
 800773a:	b2ad      	uxth	r5, r5
 800773c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007740:	45a6      	cmp	lr, r4
 8007742:	d908      	bls.n	8007756 <__udivmoddi4+0x1e2>
 8007744:	eb1c 0404 	adds.w	r4, ip, r4
 8007748:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 800774c:	d26c      	bcs.n	8007828 <__udivmoddi4+0x2b4>
 800774e:	45a6      	cmp	lr, r4
 8007750:	d96a      	bls.n	8007828 <__udivmoddi4+0x2b4>
 8007752:	3802      	subs	r0, #2
 8007754:	4464      	add	r4, ip
 8007756:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800775a:	fba0 9502 	umull	r9, r5, r0, r2
 800775e:	eba4 040e 	sub.w	r4, r4, lr
 8007762:	42ac      	cmp	r4, r5
 8007764:	46c8      	mov	r8, r9
 8007766:	46ae      	mov	lr, r5
 8007768:	d356      	bcc.n	8007818 <__udivmoddi4+0x2a4>
 800776a:	d053      	beq.n	8007814 <__udivmoddi4+0x2a0>
 800776c:	2e00      	cmp	r6, #0
 800776e:	d069      	beq.n	8007844 <__udivmoddi4+0x2d0>
 8007770:	ebb3 0208 	subs.w	r2, r3, r8
 8007774:	eb64 040e 	sbc.w	r4, r4, lr
 8007778:	fa22 f301 	lsr.w	r3, r2, r1
 800777c:	fa04 f707 	lsl.w	r7, r4, r7
 8007780:	431f      	orrs	r7, r3
 8007782:	40cc      	lsrs	r4, r1
 8007784:	e9c6 7400 	strd	r7, r4, [r6]
 8007788:	2100      	movs	r1, #0
 800778a:	e747      	b.n	800761c <__udivmoddi4+0xa8>
 800778c:	fa0c fc02 	lsl.w	ip, ip, r2
 8007790:	f1c2 0120 	rsb	r1, r2, #32
 8007794:	fa25 f301 	lsr.w	r3, r5, r1
 8007798:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800779c:	fa20 f101 	lsr.w	r1, r0, r1
 80077a0:	4095      	lsls	r5, r2
 80077a2:	430d      	orrs	r5, r1
 80077a4:	fbb3 f1f7 	udiv	r1, r3, r7
 80077a8:	fb07 3311 	mls	r3, r7, r1, r3
 80077ac:	fa1f fe8c 	uxth.w	lr, ip
 80077b0:	0c28      	lsrs	r0, r5, #16
 80077b2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80077b6:	fb01 f30e 	mul.w	r3, r1, lr
 80077ba:	4283      	cmp	r3, r0
 80077bc:	fa04 f402 	lsl.w	r4, r4, r2
 80077c0:	d908      	bls.n	80077d4 <__udivmoddi4+0x260>
 80077c2:	eb1c 0000 	adds.w	r0, ip, r0
 80077c6:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80077ca:	d22f      	bcs.n	800782c <__udivmoddi4+0x2b8>
 80077cc:	4283      	cmp	r3, r0
 80077ce:	d92d      	bls.n	800782c <__udivmoddi4+0x2b8>
 80077d0:	3902      	subs	r1, #2
 80077d2:	4460      	add	r0, ip
 80077d4:	1ac0      	subs	r0, r0, r3
 80077d6:	fbb0 f3f7 	udiv	r3, r0, r7
 80077da:	fb07 0013 	mls	r0, r7, r3, r0
 80077de:	b2ad      	uxth	r5, r5
 80077e0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80077e4:	fb03 f00e 	mul.w	r0, r3, lr
 80077e8:	42a8      	cmp	r0, r5
 80077ea:	d908      	bls.n	80077fe <__udivmoddi4+0x28a>
 80077ec:	eb1c 0505 	adds.w	r5, ip, r5
 80077f0:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80077f4:	d216      	bcs.n	8007824 <__udivmoddi4+0x2b0>
 80077f6:	42a8      	cmp	r0, r5
 80077f8:	d914      	bls.n	8007824 <__udivmoddi4+0x2b0>
 80077fa:	3b02      	subs	r3, #2
 80077fc:	4465      	add	r5, ip
 80077fe:	1a28      	subs	r0, r5, r0
 8007800:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007804:	e738      	b.n	8007678 <__udivmoddi4+0x104>
 8007806:	4631      	mov	r1, r6
 8007808:	4630      	mov	r0, r6
 800780a:	e707      	b.n	800761c <__udivmoddi4+0xa8>
 800780c:	462f      	mov	r7, r5
 800780e:	e6e4      	b.n	80075da <__udivmoddi4+0x66>
 8007810:	4618      	mov	r0, r3
 8007812:	e6f9      	b.n	8007608 <__udivmoddi4+0x94>
 8007814:	454b      	cmp	r3, r9
 8007816:	d2a9      	bcs.n	800776c <__udivmoddi4+0x1f8>
 8007818:	ebb9 0802 	subs.w	r8, r9, r2
 800781c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007820:	3801      	subs	r0, #1
 8007822:	e7a3      	b.n	800776c <__udivmoddi4+0x1f8>
 8007824:	4643      	mov	r3, r8
 8007826:	e7ea      	b.n	80077fe <__udivmoddi4+0x28a>
 8007828:	4628      	mov	r0, r5
 800782a:	e794      	b.n	8007756 <__udivmoddi4+0x1e2>
 800782c:	4641      	mov	r1, r8
 800782e:	e7d1      	b.n	80077d4 <__udivmoddi4+0x260>
 8007830:	46d0      	mov	r8, sl
 8007832:	e77b      	b.n	800772c <__udivmoddi4+0x1b8>
 8007834:	4464      	add	r4, ip
 8007836:	3802      	subs	r0, #2
 8007838:	e747      	b.n	80076ca <__udivmoddi4+0x156>
 800783a:	3b02      	subs	r3, #2
 800783c:	4465      	add	r5, ip
 800783e:	e72f      	b.n	80076a0 <__udivmoddi4+0x12c>
 8007840:	4608      	mov	r0, r1
 8007842:	e706      	b.n	8007652 <__udivmoddi4+0xde>
 8007844:	4631      	mov	r1, r6
 8007846:	e6e9      	b.n	800761c <__udivmoddi4+0xa8>

08007848 <__aeabi_idiv0>:
 8007848:	4770      	bx	lr
 800784a:	bf00      	nop

0800784c <__aeabi_drsub>:
 800784c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007850:	e002      	b.n	8007858 <__adddf3>
 8007852:	bf00      	nop

08007854 <__aeabi_dsub>:
 8007854:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007858 <__adddf3>:
 8007858:	b530      	push	{r4, r5, lr}
 800785a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800785e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007862:	ea94 0f05 	teq	r4, r5
 8007866:	bf08      	it	eq
 8007868:	ea90 0f02 	teqeq	r0, r2
 800786c:	bf1f      	itttt	ne
 800786e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007872:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007876:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800787a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800787e:	f000 80e2 	beq.w	8007a46 <__adddf3+0x1ee>
 8007882:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007886:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800788a:	bfb8      	it	lt
 800788c:	426d      	neglt	r5, r5
 800788e:	dd0c      	ble.n	80078aa <__adddf3+0x52>
 8007890:	442c      	add	r4, r5
 8007892:	ea80 0202 	eor.w	r2, r0, r2
 8007896:	ea81 0303 	eor.w	r3, r1, r3
 800789a:	ea82 0000 	eor.w	r0, r2, r0
 800789e:	ea83 0101 	eor.w	r1, r3, r1
 80078a2:	ea80 0202 	eor.w	r2, r0, r2
 80078a6:	ea81 0303 	eor.w	r3, r1, r3
 80078aa:	2d36      	cmp	r5, #54	; 0x36
 80078ac:	bf88      	it	hi
 80078ae:	bd30      	pophi	{r4, r5, pc}
 80078b0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80078b4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80078b8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80078bc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80078c0:	d002      	beq.n	80078c8 <__adddf3+0x70>
 80078c2:	4240      	negs	r0, r0
 80078c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80078c8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80078cc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80078d0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80078d4:	d002      	beq.n	80078dc <__adddf3+0x84>
 80078d6:	4252      	negs	r2, r2
 80078d8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80078dc:	ea94 0f05 	teq	r4, r5
 80078e0:	f000 80a7 	beq.w	8007a32 <__adddf3+0x1da>
 80078e4:	f1a4 0401 	sub.w	r4, r4, #1
 80078e8:	f1d5 0e20 	rsbs	lr, r5, #32
 80078ec:	db0d      	blt.n	800790a <__adddf3+0xb2>
 80078ee:	fa02 fc0e 	lsl.w	ip, r2, lr
 80078f2:	fa22 f205 	lsr.w	r2, r2, r5
 80078f6:	1880      	adds	r0, r0, r2
 80078f8:	f141 0100 	adc.w	r1, r1, #0
 80078fc:	fa03 f20e 	lsl.w	r2, r3, lr
 8007900:	1880      	adds	r0, r0, r2
 8007902:	fa43 f305 	asr.w	r3, r3, r5
 8007906:	4159      	adcs	r1, r3
 8007908:	e00e      	b.n	8007928 <__adddf3+0xd0>
 800790a:	f1a5 0520 	sub.w	r5, r5, #32
 800790e:	f10e 0e20 	add.w	lr, lr, #32
 8007912:	2a01      	cmp	r2, #1
 8007914:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007918:	bf28      	it	cs
 800791a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800791e:	fa43 f305 	asr.w	r3, r3, r5
 8007922:	18c0      	adds	r0, r0, r3
 8007924:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007928:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800792c:	d507      	bpl.n	800793e <__adddf3+0xe6>
 800792e:	f04f 0e00 	mov.w	lr, #0
 8007932:	f1dc 0c00 	rsbs	ip, ip, #0
 8007936:	eb7e 0000 	sbcs.w	r0, lr, r0
 800793a:	eb6e 0101 	sbc.w	r1, lr, r1
 800793e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007942:	d31b      	bcc.n	800797c <__adddf3+0x124>
 8007944:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8007948:	d30c      	bcc.n	8007964 <__adddf3+0x10c>
 800794a:	0849      	lsrs	r1, r1, #1
 800794c:	ea5f 0030 	movs.w	r0, r0, rrx
 8007950:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8007954:	f104 0401 	add.w	r4, r4, #1
 8007958:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800795c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8007960:	f080 809a 	bcs.w	8007a98 <__adddf3+0x240>
 8007964:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007968:	bf08      	it	eq
 800796a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800796e:	f150 0000 	adcs.w	r0, r0, #0
 8007972:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8007976:	ea41 0105 	orr.w	r1, r1, r5
 800797a:	bd30      	pop	{r4, r5, pc}
 800797c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8007980:	4140      	adcs	r0, r0
 8007982:	eb41 0101 	adc.w	r1, r1, r1
 8007986:	3c01      	subs	r4, #1
 8007988:	bf28      	it	cs
 800798a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800798e:	d2e9      	bcs.n	8007964 <__adddf3+0x10c>
 8007990:	f091 0f00 	teq	r1, #0
 8007994:	bf04      	itt	eq
 8007996:	4601      	moveq	r1, r0
 8007998:	2000      	moveq	r0, #0
 800799a:	fab1 f381 	clz	r3, r1
 800799e:	bf08      	it	eq
 80079a0:	3320      	addeq	r3, #32
 80079a2:	f1a3 030b 	sub.w	r3, r3, #11
 80079a6:	f1b3 0220 	subs.w	r2, r3, #32
 80079aa:	da0c      	bge.n	80079c6 <__adddf3+0x16e>
 80079ac:	320c      	adds	r2, #12
 80079ae:	dd08      	ble.n	80079c2 <__adddf3+0x16a>
 80079b0:	f102 0c14 	add.w	ip, r2, #20
 80079b4:	f1c2 020c 	rsb	r2, r2, #12
 80079b8:	fa01 f00c 	lsl.w	r0, r1, ip
 80079bc:	fa21 f102 	lsr.w	r1, r1, r2
 80079c0:	e00c      	b.n	80079dc <__adddf3+0x184>
 80079c2:	f102 0214 	add.w	r2, r2, #20
 80079c6:	bfd8      	it	le
 80079c8:	f1c2 0c20 	rsble	ip, r2, #32
 80079cc:	fa01 f102 	lsl.w	r1, r1, r2
 80079d0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80079d4:	bfdc      	itt	le
 80079d6:	ea41 010c 	orrle.w	r1, r1, ip
 80079da:	4090      	lslle	r0, r2
 80079dc:	1ae4      	subs	r4, r4, r3
 80079de:	bfa2      	ittt	ge
 80079e0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80079e4:	4329      	orrge	r1, r5
 80079e6:	bd30      	popge	{r4, r5, pc}
 80079e8:	ea6f 0404 	mvn.w	r4, r4
 80079ec:	3c1f      	subs	r4, #31
 80079ee:	da1c      	bge.n	8007a2a <__adddf3+0x1d2>
 80079f0:	340c      	adds	r4, #12
 80079f2:	dc0e      	bgt.n	8007a12 <__adddf3+0x1ba>
 80079f4:	f104 0414 	add.w	r4, r4, #20
 80079f8:	f1c4 0220 	rsb	r2, r4, #32
 80079fc:	fa20 f004 	lsr.w	r0, r0, r4
 8007a00:	fa01 f302 	lsl.w	r3, r1, r2
 8007a04:	ea40 0003 	orr.w	r0, r0, r3
 8007a08:	fa21 f304 	lsr.w	r3, r1, r4
 8007a0c:	ea45 0103 	orr.w	r1, r5, r3
 8007a10:	bd30      	pop	{r4, r5, pc}
 8007a12:	f1c4 040c 	rsb	r4, r4, #12
 8007a16:	f1c4 0220 	rsb	r2, r4, #32
 8007a1a:	fa20 f002 	lsr.w	r0, r0, r2
 8007a1e:	fa01 f304 	lsl.w	r3, r1, r4
 8007a22:	ea40 0003 	orr.w	r0, r0, r3
 8007a26:	4629      	mov	r1, r5
 8007a28:	bd30      	pop	{r4, r5, pc}
 8007a2a:	fa21 f004 	lsr.w	r0, r1, r4
 8007a2e:	4629      	mov	r1, r5
 8007a30:	bd30      	pop	{r4, r5, pc}
 8007a32:	f094 0f00 	teq	r4, #0
 8007a36:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007a3a:	bf06      	itte	eq
 8007a3c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007a40:	3401      	addeq	r4, #1
 8007a42:	3d01      	subne	r5, #1
 8007a44:	e74e      	b.n	80078e4 <__adddf3+0x8c>
 8007a46:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007a4a:	bf18      	it	ne
 8007a4c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007a50:	d029      	beq.n	8007aa6 <__adddf3+0x24e>
 8007a52:	ea94 0f05 	teq	r4, r5
 8007a56:	bf08      	it	eq
 8007a58:	ea90 0f02 	teqeq	r0, r2
 8007a5c:	d005      	beq.n	8007a6a <__adddf3+0x212>
 8007a5e:	ea54 0c00 	orrs.w	ip, r4, r0
 8007a62:	bf04      	itt	eq
 8007a64:	4619      	moveq	r1, r3
 8007a66:	4610      	moveq	r0, r2
 8007a68:	bd30      	pop	{r4, r5, pc}
 8007a6a:	ea91 0f03 	teq	r1, r3
 8007a6e:	bf1e      	ittt	ne
 8007a70:	2100      	movne	r1, #0
 8007a72:	2000      	movne	r0, #0
 8007a74:	bd30      	popne	{r4, r5, pc}
 8007a76:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007a7a:	d105      	bne.n	8007a88 <__adddf3+0x230>
 8007a7c:	0040      	lsls	r0, r0, #1
 8007a7e:	4149      	adcs	r1, r1
 8007a80:	bf28      	it	cs
 8007a82:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8007a86:	bd30      	pop	{r4, r5, pc}
 8007a88:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007a8c:	bf3c      	itt	cc
 8007a8e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007a92:	bd30      	popcc	{r4, r5, pc}
 8007a94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007a98:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007a9c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007aa0:	f04f 0000 	mov.w	r0, #0
 8007aa4:	bd30      	pop	{r4, r5, pc}
 8007aa6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007aaa:	bf1a      	itte	ne
 8007aac:	4619      	movne	r1, r3
 8007aae:	4610      	movne	r0, r2
 8007ab0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007ab4:	bf1c      	itt	ne
 8007ab6:	460b      	movne	r3, r1
 8007ab8:	4602      	movne	r2, r0
 8007aba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007abe:	bf06      	itte	eq
 8007ac0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007ac4:	ea91 0f03 	teqeq	r1, r3
 8007ac8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007acc:	bd30      	pop	{r4, r5, pc}
 8007ace:	bf00      	nop

08007ad0 <__aeabi_ui2d>:
 8007ad0:	f090 0f00 	teq	r0, #0
 8007ad4:	bf04      	itt	eq
 8007ad6:	2100      	moveq	r1, #0
 8007ad8:	4770      	bxeq	lr
 8007ada:	b530      	push	{r4, r5, lr}
 8007adc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007ae0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007ae4:	f04f 0500 	mov.w	r5, #0
 8007ae8:	f04f 0100 	mov.w	r1, #0
 8007aec:	e750      	b.n	8007990 <__adddf3+0x138>
 8007aee:	bf00      	nop

08007af0 <__aeabi_i2d>:
 8007af0:	f090 0f00 	teq	r0, #0
 8007af4:	bf04      	itt	eq
 8007af6:	2100      	moveq	r1, #0
 8007af8:	4770      	bxeq	lr
 8007afa:	b530      	push	{r4, r5, lr}
 8007afc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b00:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b04:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007b08:	bf48      	it	mi
 8007b0a:	4240      	negmi	r0, r0
 8007b0c:	f04f 0100 	mov.w	r1, #0
 8007b10:	e73e      	b.n	8007990 <__adddf3+0x138>
 8007b12:	bf00      	nop

08007b14 <__aeabi_f2d>:
 8007b14:	0042      	lsls	r2, r0, #1
 8007b16:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007b1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8007b1e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8007b22:	bf1f      	itttt	ne
 8007b24:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007b28:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007b2c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007b30:	4770      	bxne	lr
 8007b32:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007b36:	bf08      	it	eq
 8007b38:	4770      	bxeq	lr
 8007b3a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007b3e:	bf04      	itt	eq
 8007b40:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007b44:	4770      	bxeq	lr
 8007b46:	b530      	push	{r4, r5, lr}
 8007b48:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007b4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007b50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007b54:	e71c      	b.n	8007990 <__adddf3+0x138>
 8007b56:	bf00      	nop

08007b58 <__aeabi_ul2d>:
 8007b58:	ea50 0201 	orrs.w	r2, r0, r1
 8007b5c:	bf08      	it	eq
 8007b5e:	4770      	bxeq	lr
 8007b60:	b530      	push	{r4, r5, lr}
 8007b62:	f04f 0500 	mov.w	r5, #0
 8007b66:	e00a      	b.n	8007b7e <__aeabi_l2d+0x16>

08007b68 <__aeabi_l2d>:
 8007b68:	ea50 0201 	orrs.w	r2, r0, r1
 8007b6c:	bf08      	it	eq
 8007b6e:	4770      	bxeq	lr
 8007b70:	b530      	push	{r4, r5, lr}
 8007b72:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007b76:	d502      	bpl.n	8007b7e <__aeabi_l2d+0x16>
 8007b78:	4240      	negs	r0, r0
 8007b7a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007b7e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b82:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b86:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007b8a:	f43f aed8 	beq.w	800793e <__adddf3+0xe6>
 8007b8e:	f04f 0203 	mov.w	r2, #3
 8007b92:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007b96:	bf18      	it	ne
 8007b98:	3203      	addne	r2, #3
 8007b9a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007b9e:	bf18      	it	ne
 8007ba0:	3203      	addne	r2, #3
 8007ba2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007ba6:	f1c2 0320 	rsb	r3, r2, #32
 8007baa:	fa00 fc03 	lsl.w	ip, r0, r3
 8007bae:	fa20 f002 	lsr.w	r0, r0, r2
 8007bb2:	fa01 fe03 	lsl.w	lr, r1, r3
 8007bb6:	ea40 000e 	orr.w	r0, r0, lr
 8007bba:	fa21 f102 	lsr.w	r1, r1, r2
 8007bbe:	4414      	add	r4, r2
 8007bc0:	e6bd      	b.n	800793e <__adddf3+0xe6>
 8007bc2:	bf00      	nop

08007bc4 <__aeabi_fmul>:
 8007bc4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007bc8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007bcc:	bf1e      	ittt	ne
 8007bce:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007bd2:	ea92 0f0c 	teqne	r2, ip
 8007bd6:	ea93 0f0c 	teqne	r3, ip
 8007bda:	d06f      	beq.n	8007cbc <__aeabi_fmul+0xf8>
 8007bdc:	441a      	add	r2, r3
 8007bde:	ea80 0c01 	eor.w	ip, r0, r1
 8007be2:	0240      	lsls	r0, r0, #9
 8007be4:	bf18      	it	ne
 8007be6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007bea:	d01e      	beq.n	8007c2a <__aeabi_fmul+0x66>
 8007bec:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007bf0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007bf4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007bf8:	fba0 3101 	umull	r3, r1, r0, r1
 8007bfc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007c00:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007c04:	bf3e      	ittt	cc
 8007c06:	0049      	lslcc	r1, r1, #1
 8007c08:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007c0c:	005b      	lslcc	r3, r3, #1
 8007c0e:	ea40 0001 	orr.w	r0, r0, r1
 8007c12:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007c16:	2afd      	cmp	r2, #253	; 0xfd
 8007c18:	d81d      	bhi.n	8007c56 <__aeabi_fmul+0x92>
 8007c1a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007c1e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c22:	bf08      	it	eq
 8007c24:	f020 0001 	biceq.w	r0, r0, #1
 8007c28:	4770      	bx	lr
 8007c2a:	f090 0f00 	teq	r0, #0
 8007c2e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007c32:	bf08      	it	eq
 8007c34:	0249      	lsleq	r1, r1, #9
 8007c36:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007c3a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007c3e:	3a7f      	subs	r2, #127	; 0x7f
 8007c40:	bfc2      	ittt	gt
 8007c42:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007c46:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007c4a:	4770      	bxgt	lr
 8007c4c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c50:	f04f 0300 	mov.w	r3, #0
 8007c54:	3a01      	subs	r2, #1
 8007c56:	dc5d      	bgt.n	8007d14 <__aeabi_fmul+0x150>
 8007c58:	f112 0f19 	cmn.w	r2, #25
 8007c5c:	bfdc      	itt	le
 8007c5e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007c62:	4770      	bxle	lr
 8007c64:	f1c2 0200 	rsb	r2, r2, #0
 8007c68:	0041      	lsls	r1, r0, #1
 8007c6a:	fa21 f102 	lsr.w	r1, r1, r2
 8007c6e:	f1c2 0220 	rsb	r2, r2, #32
 8007c72:	fa00 fc02 	lsl.w	ip, r0, r2
 8007c76:	ea5f 0031 	movs.w	r0, r1, rrx
 8007c7a:	f140 0000 	adc.w	r0, r0, #0
 8007c7e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007c82:	bf08      	it	eq
 8007c84:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007c88:	4770      	bx	lr
 8007c8a:	f092 0f00 	teq	r2, #0
 8007c8e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007c92:	bf02      	ittt	eq
 8007c94:	0040      	lsleq	r0, r0, #1
 8007c96:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007c9a:	3a01      	subeq	r2, #1
 8007c9c:	d0f9      	beq.n	8007c92 <__aeabi_fmul+0xce>
 8007c9e:	ea40 000c 	orr.w	r0, r0, ip
 8007ca2:	f093 0f00 	teq	r3, #0
 8007ca6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007caa:	bf02      	ittt	eq
 8007cac:	0049      	lsleq	r1, r1, #1
 8007cae:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007cb2:	3b01      	subeq	r3, #1
 8007cb4:	d0f9      	beq.n	8007caa <__aeabi_fmul+0xe6>
 8007cb6:	ea41 010c 	orr.w	r1, r1, ip
 8007cba:	e78f      	b.n	8007bdc <__aeabi_fmul+0x18>
 8007cbc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007cc0:	ea92 0f0c 	teq	r2, ip
 8007cc4:	bf18      	it	ne
 8007cc6:	ea93 0f0c 	teqne	r3, ip
 8007cca:	d00a      	beq.n	8007ce2 <__aeabi_fmul+0x11e>
 8007ccc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007cd0:	bf18      	it	ne
 8007cd2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007cd6:	d1d8      	bne.n	8007c8a <__aeabi_fmul+0xc6>
 8007cd8:	ea80 0001 	eor.w	r0, r0, r1
 8007cdc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007ce0:	4770      	bx	lr
 8007ce2:	f090 0f00 	teq	r0, #0
 8007ce6:	bf17      	itett	ne
 8007ce8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007cec:	4608      	moveq	r0, r1
 8007cee:	f091 0f00 	teqne	r1, #0
 8007cf2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007cf6:	d014      	beq.n	8007d22 <__aeabi_fmul+0x15e>
 8007cf8:	ea92 0f0c 	teq	r2, ip
 8007cfc:	d101      	bne.n	8007d02 <__aeabi_fmul+0x13e>
 8007cfe:	0242      	lsls	r2, r0, #9
 8007d00:	d10f      	bne.n	8007d22 <__aeabi_fmul+0x15e>
 8007d02:	ea93 0f0c 	teq	r3, ip
 8007d06:	d103      	bne.n	8007d10 <__aeabi_fmul+0x14c>
 8007d08:	024b      	lsls	r3, r1, #9
 8007d0a:	bf18      	it	ne
 8007d0c:	4608      	movne	r0, r1
 8007d0e:	d108      	bne.n	8007d22 <__aeabi_fmul+0x15e>
 8007d10:	ea80 0001 	eor.w	r0, r0, r1
 8007d14:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007d18:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d1c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d20:	4770      	bx	lr
 8007d22:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d26:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007d2a:	4770      	bx	lr

08007d2c <__aeabi_fdiv>:
 8007d2c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007d30:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007d34:	bf1e      	ittt	ne
 8007d36:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007d3a:	ea92 0f0c 	teqne	r2, ip
 8007d3e:	ea93 0f0c 	teqne	r3, ip
 8007d42:	d069      	beq.n	8007e18 <__aeabi_fdiv+0xec>
 8007d44:	eba2 0203 	sub.w	r2, r2, r3
 8007d48:	ea80 0c01 	eor.w	ip, r0, r1
 8007d4c:	0249      	lsls	r1, r1, #9
 8007d4e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8007d52:	d037      	beq.n	8007dc4 <__aeabi_fdiv+0x98>
 8007d54:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007d58:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8007d5c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8007d60:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007d64:	428b      	cmp	r3, r1
 8007d66:	bf38      	it	cc
 8007d68:	005b      	lslcc	r3, r3, #1
 8007d6a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8007d6e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8007d72:	428b      	cmp	r3, r1
 8007d74:	bf24      	itt	cs
 8007d76:	1a5b      	subcs	r3, r3, r1
 8007d78:	ea40 000c 	orrcs.w	r0, r0, ip
 8007d7c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8007d80:	bf24      	itt	cs
 8007d82:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8007d86:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8007d8a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8007d8e:	bf24      	itt	cs
 8007d90:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8007d94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8007d98:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8007d9c:	bf24      	itt	cs
 8007d9e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8007da2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8007da6:	011b      	lsls	r3, r3, #4
 8007da8:	bf18      	it	ne
 8007daa:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8007dae:	d1e0      	bne.n	8007d72 <__aeabi_fdiv+0x46>
 8007db0:	2afd      	cmp	r2, #253	; 0xfd
 8007db2:	f63f af50 	bhi.w	8007c56 <__aeabi_fmul+0x92>
 8007db6:	428b      	cmp	r3, r1
 8007db8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007dbc:	bf08      	it	eq
 8007dbe:	f020 0001 	biceq.w	r0, r0, #1
 8007dc2:	4770      	bx	lr
 8007dc4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007dc8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007dcc:	327f      	adds	r2, #127	; 0x7f
 8007dce:	bfc2      	ittt	gt
 8007dd0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007dd4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007dd8:	4770      	bxgt	lr
 8007dda:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007dde:	f04f 0300 	mov.w	r3, #0
 8007de2:	3a01      	subs	r2, #1
 8007de4:	e737      	b.n	8007c56 <__aeabi_fmul+0x92>
 8007de6:	f092 0f00 	teq	r2, #0
 8007dea:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007dee:	bf02      	ittt	eq
 8007df0:	0040      	lsleq	r0, r0, #1
 8007df2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007df6:	3a01      	subeq	r2, #1
 8007df8:	d0f9      	beq.n	8007dee <__aeabi_fdiv+0xc2>
 8007dfa:	ea40 000c 	orr.w	r0, r0, ip
 8007dfe:	f093 0f00 	teq	r3, #0
 8007e02:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007e06:	bf02      	ittt	eq
 8007e08:	0049      	lsleq	r1, r1, #1
 8007e0a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007e0e:	3b01      	subeq	r3, #1
 8007e10:	d0f9      	beq.n	8007e06 <__aeabi_fdiv+0xda>
 8007e12:	ea41 010c 	orr.w	r1, r1, ip
 8007e16:	e795      	b.n	8007d44 <__aeabi_fdiv+0x18>
 8007e18:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007e1c:	ea92 0f0c 	teq	r2, ip
 8007e20:	d108      	bne.n	8007e34 <__aeabi_fdiv+0x108>
 8007e22:	0242      	lsls	r2, r0, #9
 8007e24:	f47f af7d 	bne.w	8007d22 <__aeabi_fmul+0x15e>
 8007e28:	ea93 0f0c 	teq	r3, ip
 8007e2c:	f47f af70 	bne.w	8007d10 <__aeabi_fmul+0x14c>
 8007e30:	4608      	mov	r0, r1
 8007e32:	e776      	b.n	8007d22 <__aeabi_fmul+0x15e>
 8007e34:	ea93 0f0c 	teq	r3, ip
 8007e38:	d104      	bne.n	8007e44 <__aeabi_fdiv+0x118>
 8007e3a:	024b      	lsls	r3, r1, #9
 8007e3c:	f43f af4c 	beq.w	8007cd8 <__aeabi_fmul+0x114>
 8007e40:	4608      	mov	r0, r1
 8007e42:	e76e      	b.n	8007d22 <__aeabi_fmul+0x15e>
 8007e44:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007e48:	bf18      	it	ne
 8007e4a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007e4e:	d1ca      	bne.n	8007de6 <__aeabi_fdiv+0xba>
 8007e50:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8007e54:	f47f af5c 	bne.w	8007d10 <__aeabi_fmul+0x14c>
 8007e58:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8007e5c:	f47f af3c 	bne.w	8007cd8 <__aeabi_fmul+0x114>
 8007e60:	e75f      	b.n	8007d22 <__aeabi_fmul+0x15e>
 8007e62:	bf00      	nop

08007e64 <__aeabi_f2uiz>:
 8007e64:	0042      	lsls	r2, r0, #1
 8007e66:	d20e      	bcs.n	8007e86 <__aeabi_f2uiz+0x22>
 8007e68:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007e6c:	d30b      	bcc.n	8007e86 <__aeabi_f2uiz+0x22>
 8007e6e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007e72:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007e76:	d409      	bmi.n	8007e8c <__aeabi_f2uiz+0x28>
 8007e78:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007e7c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007e80:	fa23 f002 	lsr.w	r0, r3, r2
 8007e84:	4770      	bx	lr
 8007e86:	f04f 0000 	mov.w	r0, #0
 8007e8a:	4770      	bx	lr
 8007e8c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007e90:	d101      	bne.n	8007e96 <__aeabi_f2uiz+0x32>
 8007e92:	0242      	lsls	r2, r0, #9
 8007e94:	d102      	bne.n	8007e9c <__aeabi_f2uiz+0x38>
 8007e96:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007e9a:	4770      	bx	lr
 8007e9c:	f04f 0000 	mov.w	r0, #0
 8007ea0:	4770      	bx	lr
 8007ea2:	bf00      	nop

08007ea4 <__popcountsi2>:
 8007ea4:	0843      	lsrs	r3, r0, #1
 8007ea6:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007eaa:	1ac0      	subs	r0, r0, r3
 8007eac:	0883      	lsrs	r3, r0, #2
 8007eae:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8007eb2:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007eb6:	4418      	add	r0, r3
 8007eb8:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007ebc:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007ec0:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8007ec4:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007ec8:	0e00      	lsrs	r0, r0, #24
 8007eca:	4770      	bx	lr

08007ecc <Reset_Handler>:
 8007ecc:	480c      	ldr	r0, [pc, #48]	; (8007f00 <Zerobss+0x10>)
 8007ece:	4685      	mov	sp, r0
 8007ed0:	2100      	movs	r1, #0
 8007ed2:	e003      	b.n	8007edc <DataInit>

08007ed4 <CopyData>:
 8007ed4:	4b0b      	ldr	r3, [pc, #44]	; (8007f04 <Zerobss+0x14>)
 8007ed6:	585b      	ldr	r3, [r3, r1]
 8007ed8:	5043      	str	r3, [r0, r1]
 8007eda:	3104      	adds	r1, #4

08007edc <DataInit>:
 8007edc:	480a      	ldr	r0, [pc, #40]	; (8007f08 <Zerobss+0x18>)
 8007ede:	4b0b      	ldr	r3, [pc, #44]	; (8007f0c <Zerobss+0x1c>)
 8007ee0:	1842      	adds	r2, r0, r1
 8007ee2:	429a      	cmp	r2, r3
 8007ee4:	d3f6      	bcc.n	8007ed4 <CopyData>
 8007ee6:	4a0a      	ldr	r2, [pc, #40]	; (8007f10 <Zerobss+0x20>)
 8007ee8:	e002      	b.n	8007ef0 <Zerobss>

08007eea <FillZerobss>:
 8007eea:	2300      	movs	r3, #0
 8007eec:	f842 3b04 	str.w	r3, [r2], #4

08007ef0 <Zerobss>:
 8007ef0:	4b08      	ldr	r3, [pc, #32]	; (8007f14 <Zerobss+0x24>)
 8007ef2:	429a      	cmp	r2, r3
 8007ef4:	d3f9      	bcc.n	8007eea <FillZerobss>
 8007ef6:	f009 f9d7 	bl	80112a8 <SystemInit>
 8007efa:	f000 f923 	bl	8008144 <main>
 8007efe:	4770      	bx	lr
 8007f00:	20018000 	andcs	r8, r1, r0
 8007f04:	08014dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, lr}
 8007f08:	20000000 	andcs	r0, r0, r0
 8007f0c:	200000e4 	andcs	r0, r0, r4, ror #1
 8007f10:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f14:	20013c14 	andcs	r3, r1, r4, lsl ip

08007f18 <ADC0_1_IRQHandler>:
 8007f18:	e7fe      	b.n	8007f18 <ADC0_1_IRQHandler>

08007f1a <DisplayHandler::~DisplayHandler()>:
 8007f1a:	4770      	bx	lr

08007f1c <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007f1c:	4770      	bx	lr
	...

08007f20 <PixelDmxStartStop::Start()>:
 8007f20:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f24:	4b01      	ldr	r3, [pc, #4]	; (8007f2c <PixelDmxStartStop::Start()+0xc>)
 8007f26:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8007f2a:	4770      	bx	lr
 8007f2c:	40010000 	andmi	r0, r1, r0

08007f30 <PixelDmxStartStop::Stop()>:
 8007f30:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f34:	4b01      	ldr	r3, [pc, #4]	; (8007f3c <PixelDmxStartStop::Stop()+0xc>)
 8007f36:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8007f3a:	4770      	bx	lr
 8007f3c:	40010000 	andmi	r0, r1, r0

08007f40 <Handler::~Handler()>:
 8007f40:	4770      	bx	lr

08007f42 <DisplayHandler::~DisplayHandler()>:
 8007f42:	b510      	push	{r4, lr}
 8007f44:	4604      	mov	r4, r0
 8007f46:	f008 ff57 	bl	8010df8 <operator delete(void*)>
 8007f4a:	4620      	mov	r0, r4
 8007f4c:	bd10      	pop	{r4, pc}

08007f4e <Handler::~Handler()>:
 8007f4e:	b510      	push	{r4, lr}
 8007f50:	4604      	mov	r4, r0
 8007f52:	f008 ff51 	bl	8010df8 <operator delete(void*)>
 8007f56:	4620      	mov	r0, r4
 8007f58:	bd10      	pop	{r4, pc}

08007f5a <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007f5a:	b510      	push	{r4, lr}
 8007f5c:	4604      	mov	r4, r0
 8007f5e:	f008 ff4b 	bl	8010df8 <operator delete(void*)>
 8007f62:	4620      	mov	r0, r4
 8007f64:	bd10      	pop	{r4, pc}
	...

08007f68 <Handler::Info(int, unsigned int, unsigned short)>:
 8007f68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f6c:	461e      	mov	r6, r3
 8007f6e:	6843      	ldr	r3, [r0, #4]
 8007f70:	b088      	sub	sp, #32
 8007f72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007f74:	4607      	mov	r7, r0
 8007f76:	6818      	ldr	r0, [r3, #0]
 8007f78:	460c      	mov	r4, r1
 8007f7a:	4615      	mov	r5, r2
 8007f7c:	f002 fd92 	bl	800aaa4 <PixelType::GetType(pixel::Type)>
 8007f80:	4b15      	ldr	r3, [pc, #84]	; (8007fd8 <Handler::Info(int, unsigned int, unsigned short)+0x70>)
 8007f82:	462a      	mov	r2, r5
 8007f84:	9301      	str	r3, [sp, #4]
 8007f86:	4b15      	ldr	r3, [pc, #84]	; (8007fdc <Handler::Info(int, unsigned int, unsigned short)+0x74>)
 8007f88:	4621      	mov	r1, r4
 8007f8a:	9002      	str	r0, [sp, #8]
 8007f8c:	9300      	str	r3, [sp, #0]
 8007f8e:	a805      	add	r0, sp, #20
 8007f90:	4633      	mov	r3, r6
 8007f92:	f001 fcc3 	bl	800991c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8007f96:	687a      	ldr	r2, [r7, #4]
 8007f98:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8007fe0 <Handler::Info(int, unsigned int, unsigned short)+0x78>
 8007f9c:	6993      	ldr	r3, [r2, #24]
 8007f9e:	6952      	ldr	r2, [r2, #20]
 8007fa0:	4621      	mov	r1, r4
 8007fa2:	4353      	muls	r3, r2
 8007fa4:	9302      	str	r3, [sp, #8]
 8007fa6:	4b0f      	ldr	r3, [pc, #60]	; (8007fe4 <Handler::Info(int, unsigned int, unsigned short)+0x7c>)
 8007fa8:	462a      	mov	r2, r5
 8007faa:	9300      	str	r3, [sp, #0]
 8007fac:	f8cd 8004 	str.w	r8, [sp, #4]
 8007fb0:	4633      	mov	r3, r6
 8007fb2:	a806      	add	r0, sp, #24
 8007fb4:	f001 fcf0 	bl	8009998 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	462a      	mov	r2, r5
 8007fbc:	699b      	ldr	r3, [r3, #24]
 8007fbe:	4621      	mov	r1, r4
 8007fc0:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8007fc4:	4b08      	ldr	r3, [pc, #32]	; (8007fe8 <Handler::Info(int, unsigned int, unsigned short)+0x80>)
 8007fc6:	a807      	add	r0, sp, #28
 8007fc8:	9300      	str	r3, [sp, #0]
 8007fca:	4633      	mov	r3, r6
 8007fcc:	f001 fce4 	bl	8009998 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8007fd0:	b008      	add	sp, #32
 8007fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007fd6:	bf00      	nop
 8007fd8:	08013194 	stmdaeq	r1, {r2, r4, r7, r8, ip, sp}
 8007fdc:	08013034 	stmdaeq	r1, {r2, r4, r5, ip, sp}
 8007fe0:	08013042 	stmdaeq	r1, {r1, r6, ip, sp}
 8007fe4:	08013044 	stmdaeq	r1, {r2, r6, ip, sp}
 8007fe8:	08013053 	stmdaeq	r1, {r0, r1, r4, r6, ip, sp}

08007fec <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007fec:	b110      	cbz	r0, 8007ff4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007fee:	6803      	ldr	r3, [r0, #0]
 8007ff0:	6a1b      	ldr	r3, [r3, #32]
 8007ff2:	4718      	bx	r3
 8007ff4:	4770      	bx	lr

08007ff6 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8007ff6:	b430      	push	{r4, r5}
 8007ff8:	b168      	cbz	r0, 8008016 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8007ffa:	2300      	movs	r3, #0
 8007ffc:	7905      	ldrb	r5, [r0, #4]
 8007ffe:	5cd4      	ldrb	r4, [r2, r3]
 8008000:	b11c      	cbz	r4, 800800a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8008002:	1c5c      	adds	r4, r3, #1
 8008004:	429d      	cmp	r5, r3
 8008006:	4623      	mov	r3, r4
 8008008:	dcf9      	bgt.n	8007ffe <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800800a:	6804      	ldr	r4, [r0, #0]
 800800c:	b2db      	uxtb	r3, r3
 800800e:	69e4      	ldr	r4, [r4, #28]
 8008010:	46a4      	mov	ip, r4
 8008012:	bc30      	pop	{r4, r5}
 8008014:	4760      	bx	ip
 8008016:	bc30      	pop	{r4, r5}
 8008018:	4770      	bx	lr

0800801a <Display::PutChar(int) [clone .isra.0]>:
 800801a:	b110      	cbz	r0, 8008022 <Display::PutChar(int) [clone .isra.0]+0x8>
 800801c:	6803      	ldr	r3, [r0, #0]
 800801e:	695b      	ldr	r3, [r3, #20]
 8008020:	4718      	bx	r3
 8008022:	4770      	bx	lr

08008024 <DisplayHandler::Print(unsigned int)>:
 8008024:	b538      	push	{r3, r4, r5, lr}
 8008026:	7903      	ldrb	r3, [r0, #4]
 8008028:	b1f3      	cbz	r3, 8008068 <DisplayHandler::Print(unsigned int)+0x44>
 800802a:	2904      	cmp	r1, #4
 800802c:	bf98      	it	ls
 800802e:	4b0f      	ldrls	r3, [pc, #60]	; (800806c <DisplayHandler::Print(unsigned int)+0x48>)
 8008030:	4d0f      	ldr	r5, [pc, #60]	; (8008070 <DisplayHandler::Print(unsigned int)+0x4c>)
 8008032:	bf98      	it	ls
 8008034:	5c5c      	ldrbls	r4, [r3, r1]
 8008036:	682b      	ldr	r3, [r5, #0]
 8008038:	bf88      	it	hi
 800803a:	2455      	movhi	r4, #85	; 0x55
 800803c:	6998      	ldr	r0, [r3, #24]
 800803e:	b178      	cbz	r0, 8008060 <DisplayHandler::Print(unsigned int)+0x3c>
 8008040:	7901      	ldrb	r1, [r0, #4]
 8008042:	3901      	subs	r1, #1
 8008044:	b2c9      	uxtb	r1, r1
 8008046:	b168      	cbz	r0, 8008064 <DisplayHandler::Print(unsigned int)+0x40>
 8008048:	7942      	ldrb	r2, [r0, #5]
 800804a:	3a01      	subs	r2, #1
 800804c:	b2d2      	uxtb	r2, r2
 800804e:	f7ff ffcd 	bl	8007fec <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008052:	682b      	ldr	r3, [r5, #0]
 8008054:	4621      	mov	r1, r4
 8008056:	6998      	ldr	r0, [r3, #24]
 8008058:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800805c:	f7ff bfdd 	b.w	800801a <Display::PutChar(int) [clone .isra.0]>
 8008060:	4601      	mov	r1, r0
 8008062:	e7ee      	b.n	8008042 <DisplayHandler::Print(unsigned int)+0x1e>
 8008064:	4602      	mov	r2, r0
 8008066:	e7f0      	b.n	800804a <DisplayHandler::Print(unsigned int)+0x26>
 8008068:	bd38      	pop	{r3, r4, r5, pc}
 800806a:	bf00      	nop
 800806c:	08013160 	stmdaeq	r1, {r5, r6, r8, ip, sp}
 8008070:	200096a0 	andcs	r9, r0, r0, lsr #13

08008074 <Display::Printf(unsigned char, char const*, ...)>:
 8008074:	b40c      	push	{r2, r3}
 8008076:	b570      	push	{r4, r5, r6, lr}
 8008078:	6984      	ldr	r4, [r0, #24]
 800807a:	4605      	mov	r5, r0
 800807c:	460e      	mov	r6, r1
 800807e:	b08a      	sub	sp, #40	; 0x28
 8008080:	b174      	cbz	r4, 80080a0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8008082:	ab0f      	add	r3, sp, #60	; 0x3c
 8008084:	2120      	movs	r1, #32
 8008086:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008088:	a802      	add	r0, sp, #8
 800808a:	9301      	str	r3, [sp, #4]
 800808c:	f000 fdd4 	bl	8008c38 <vsnprintf>
 8008090:	4604      	mov	r4, r0
 8008092:	69a8      	ldr	r0, [r5, #24]
 8008094:	4631      	mov	r1, r6
 8008096:	6803      	ldr	r3, [r0, #0]
 8008098:	aa02      	add	r2, sp, #8
 800809a:	69dd      	ldr	r5, [r3, #28]
 800809c:	b2a3      	uxth	r3, r4
 800809e:	47a8      	blx	r5
 80080a0:	4620      	mov	r0, r4
 80080a2:	b00a      	add	sp, #40	; 0x28
 80080a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80080a8:	b002      	add	sp, #8
 80080aa:	4770      	bx	lr

080080ac <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80080ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080b0:	4604      	mov	r4, r0
 80080b2:	6980      	ldr	r0, [r0, #24]
 80080b4:	460f      	mov	r7, r1
 80080b6:	4615      	mov	r5, r2
 80080b8:	461e      	mov	r6, r3
 80080ba:	b308      	cbz	r0, 8008100 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x54>
 80080bc:	f890 a005 	ldrb.w	sl, [r0, #5]
 80080c0:	2100      	movs	r1, #0
 80080c2:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 80080c6:	fa5f f888 	uxtb.w	r8, r8
 80080ca:	4642      	mov	r2, r8
 80080cc:	f890 b004 	ldrb.w	fp, [r0, #4]
 80080d0:	f04f 0900 	mov.w	r9, #0
 80080d4:	f7ff ff8a 	bl	8007fec <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80080d8:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80080dc:	45cb      	cmp	fp, r9
 80080de:	69a0      	ldr	r0, [r4, #24]
 80080e0:	d905      	bls.n	80080ee <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x42>
 80080e2:	2120      	movs	r1, #32
 80080e4:	f7ff ff99 	bl	800801a <Display::PutChar(int) [clone .isra.0]>
 80080e8:	f109 0901 	add.w	r9, r9, #1
 80080ec:	e7f6      	b.n	80080dc <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 80080ee:	4642      	mov	r2, r8
 80080f0:	2100      	movs	r1, #0
 80080f2:	f7ff ff7b 	bl	8007fec <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80080f6:	463a      	mov	r2, r7
 80080f8:	4651      	mov	r1, sl
 80080fa:	69a0      	ldr	r0, [r4, #24]
 80080fc:	f7ff ff7b 	bl	8007ff6 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008100:	7c63      	ldrb	r3, [r4, #17]
 8008102:	b19b      	cbz	r3, 800812c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x80>
 8008104:	43ed      	mvns	r5, r5
 8008106:	2312      	movs	r3, #18
 8008108:	7a20      	ldrb	r0, [r4, #8]
 800810a:	f88d 3004 	strb.w	r3, [sp, #4]
 800810e:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8008112:	f88d 3005 	strb.w	r3, [sp, #5]
 8008116:	f88d 5006 	strb.w	r5, [sp, #6]
 800811a:	f009 fe63 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 800811e:	68e0      	ldr	r0, [r4, #12]
 8008120:	f009 fe58 	bl	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>
 8008124:	2103      	movs	r1, #3
 8008126:	a801      	add	r0, sp, #4
 8008128:	f009 fe62 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 800812c:	1c73      	adds	r3, r6, #1
 800812e:	d006      	beq.n	800813e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 8008130:	4639      	mov	r1, r7
 8008132:	4630      	mov	r0, r6
 8008134:	b003      	add	sp, #12
 8008136:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800813a:	f008 bd2d 	b.w	8010b98 <console_status>
 800813e:	b003      	add	sp, #12
 8008140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08008144 <main>:
 8008144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008148:	f5ad 6d1d 	sub.w	sp, sp, #2512	; 0x9d0
 800814c:	a80f      	add	r0, sp, #60	; 0x3c
 800814e:	f008 fdc5 	bl	8010cdc <Hardware::Hardware()>
 8008152:	a863      	add	r0, sp, #396	; 0x18c
 8008154:	f006 fdaa 	bl	800ecac <Network::Network()>
 8008158:	a819      	add	r0, sp, #100	; 0x64
 800815a:	f008 fd7b 	bl	8010c54 <LedBlink::LedBlink()>
 800815e:	a81f      	add	r0, sp, #124	; 0x7c
 8008160:	f008 faa6 	bl	80106b0 <Display::Display()>
 8008164:	4aab      	ldr	r2, [pc, #684]	; (8008414 <main+0x2d0>)
 8008166:	4bac      	ldr	r3, [pc, #688]	; (8008418 <main+0x2d4>)
 8008168:	49ac      	ldr	r1, [pc, #688]	; (800841c <main+0x2d8>)
 800816a:	a804      	add	r0, sp, #16
 800816c:	f008 fd2c 	bl	8010bc8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008170:	a805      	add	r0, sp, #20
 8008172:	f005 f9c3 	bl	800d4fc <FlashRom::FlashRom()>
 8008176:	a806      	add	r0, sp, #24
 8008178:	f004 fec6 	bl	800cf08 <SpiFlashStore::SpiFlashStore()>
 800817c:	49a8      	ldr	r1, [pc, #672]	; (8008420 <main+0x2dc>)
 800817e:	a804      	add	r0, sp, #16
 8008180:	f008 fd5a 	bl	8010c38 <FirmwareVersion::Print(char const*)>
 8008184:	2301      	movs	r3, #1
 8008186:	4ea7      	ldr	r6, [pc, #668]	; (8008424 <main+0x2e0>)
 8008188:	2008      	movs	r0, #8
 800818a:	6133      	str	r3, [r6, #16]
 800818c:	f008 fe38 	bl	8010e00 <operator new(unsigned int)>
 8008190:	4ba5      	ldr	r3, [pc, #660]	; (8008428 <main+0x2e4>)
 8008192:	901b      	str	r0, [sp, #108]	; 0x6c
 8008194:	6003      	str	r3, [r0, #0]
 8008196:	4ba5      	ldr	r3, [pc, #660]	; (800842c <main+0x2e8>)
 8008198:	681b      	ldr	r3, [r3, #0]
 800819a:	3b00      	subs	r3, #0
 800819c:	bf18      	it	ne
 800819e:	2301      	movne	r3, #1
 80081a0:	7103      	strb	r3, [r0, #4]
 80081a2:	a809      	add	r0, sp, #36	; 0x24
 80081a4:	f005 f88e 	bl	800d2c4 <StoreOscServer::StoreOscServer()>
 80081a8:	a909      	add	r1, sp, #36	; 0x24
 80081aa:	a895      	add	r0, sp, #596	; 0x254
 80081ac:	f001 f86e 	bl	800928c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 80081b0:	a842      	add	r0, sp, #264	; 0x108
 80081b2:	f000 fd71 	bl	8008c98 <OscServer::OscServer()>
 80081b6:	a895      	add	r0, sp, #596	; 0x254
 80081b8:	f001 f878 	bl	80092ac <OSCServerParams::Load()>
 80081bc:	b130      	cbz	r0, 80081cc <main+0x88>
 80081be:	a895      	add	r0, sp, #596	; 0x254
 80081c0:	f001 fa0b 	bl	80095da <OSCServerParams::Dump()>
 80081c4:	a942      	add	r1, sp, #264	; 0x108
 80081c6:	a895      	add	r0, sp, #596	; 0x254
 80081c8:	f001 f91a 	bl	8009400 <OSCServerParams::Set(OscServer*)>
 80081cc:	2400      	movs	r4, #0
 80081ce:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80081d2:	2303      	movs	r3, #3
 80081d4:	4996      	ldr	r1, [pc, #600]	; (8008430 <main+0x2ec>)
 80081d6:	a81f      	add	r0, sp, #124	; 0x7c
 80081d8:	f7ff ff68 	bl	80080ac <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081dc:	a811      	add	r0, sp, #68	; 0x44
 80081de:	f005 f83b 	bl	800d258 <StoreNetwork::StoreNetwork()>
 80081e2:	ab12      	add	r3, sp, #72	; 0x48
 80081e4:	a911      	add	r1, sp, #68	; 0x44
 80081e6:	a863      	add	r0, sp, #396	; 0x18c
 80081e8:	9390      	str	r3, [sp, #576]	; 0x240
 80081ea:	f006 fdb5 	bl	800ed58 <Network::Init(NetworkParamsStore*)>
 80081ee:	a863      	add	r0, sp, #396	; 0x18c
 80081f0:	f006 fee2 	bl	800efb8 <Network::Print()>
 80081f4:	a807      	add	r0, sp, #28
 80081f6:	f006 f993 	bl	800e520 <MDNS::MDNS()>
 80081fa:	a807      	add	r0, sp, #28
 80081fc:	f006 fa54 	bl	800e6a8 <MDNS::Start()>
 8008200:	4b8c      	ldr	r3, [pc, #560]	; (8008434 <main+0x2f0>)
 8008202:	4621      	mov	r1, r4
 8008204:	4a8c      	ldr	r2, [pc, #560]	; (8008438 <main+0x2f4>)
 8008206:	9301      	str	r3, [sp, #4]
 8008208:	9400      	str	r4, [sp, #0]
 800820a:	f8bd 3108 	ldrh.w	r3, [sp, #264]	; 0x108
 800820e:	a807      	add	r0, sp, #28
 8008210:	f006 fbb6 	bl	800e980 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008214:	4b89      	ldr	r3, [pc, #548]	; (800843c <main+0x2f8>)
 8008216:	4621      	mov	r1, r4
 8008218:	9301      	str	r3, [sp, #4]
 800821a:	2301      	movs	r3, #1
 800821c:	4a88      	ldr	r2, [pc, #544]	; (8008440 <main+0x2fc>)
 800821e:	9300      	str	r3, [sp, #0]
 8008220:	a807      	add	r0, sp, #28
 8008222:	2350      	movs	r3, #80	; 0x50
 8008224:	f006 fbac 	bl	800e980 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008228:	4d86      	ldr	r5, [pc, #536]	; (8008444 <main+0x300>)
 800822a:	a807      	add	r0, sp, #28
 800822c:	f006 fcee 	bl	800ec0c <MDNS::Print()>
 8008230:	ac26      	add	r4, sp, #152	; 0x98
 8008232:	2303      	movs	r3, #3
 8008234:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008238:	4983      	ldr	r1, [pc, #524]	; (8008448 <main+0x304>)
 800823a:	a81f      	add	r0, sp, #124	; 0x7c
 800823c:	f7ff ff36 	bl	80080ac <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008240:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008242:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008244:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008248:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800824c:	a813      	add	r0, sp, #76	; 0x4c
 800824e:	f005 f949 	bl	800d4e4 <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008252:	a913      	add	r1, sp, #76	; 0x4c
 8008254:	a837      	add	r0, sp, #220	; 0xdc
 8008256:	f001 fe27 	bl	8009ea8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800825a:	a837      	add	r0, sp, #220	; 0xdc
 800825c:	f001 fe4c 	bl	8009ef8 <WS28xxDmxParams::Load()>
 8008260:	b130      	cbz	r0, 8008270 <main+0x12c>
 8008262:	a837      	add	r0, sp, #220	; 0xdc
 8008264:	a926      	add	r1, sp, #152	; 0x98
 8008266:	f002 f8ca 	bl	800a3fe <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 800826a:	a837      	add	r0, sp, #220	; 0xdc
 800826c:	f002 f8fd 	bl	800a46a <WS28xxDmxParams::Dump()>
 8008270:	ab0b      	add	r3, sp, #44	; 0x2c
 8008272:	ac0c      	add	r4, sp, #48	; 0x30
 8008274:	2101      	movs	r1, #1
 8008276:	9300      	str	r3, [sp, #0]
 8008278:	aa0a      	add	r2, sp, #40	; 0x28
 800827a:	ab15      	add	r3, sp, #84	; 0x54
 800827c:	a826      	add	r0, sp, #152	; 0x98
 800827e:	9401      	str	r4, [sp, #4]
 8008280:	f001 fbb6 	bl	80099f0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 8008284:	a826      	add	r0, sp, #152	; 0x98
 8008286:	f001 fc0b 	bl	8009aa0 <PixelDmxConfiguration::Dump()>
 800828a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800828c:	2b01      	cmp	r3, #1
 800828e:	d909      	bls.n	80082a4 <main+0x160>
 8008290:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8008292:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008294:	024b      	lsls	r3, r1, #9
 8008296:	ebb2 2f41 	cmp.w	r2, r1, lsl #9
 800829a:	bf94      	ite	ls
 800829c:	fbb3 f3f2 	udivls	r3, r3, r2
 80082a0:	23aa      	movhi	r3, #170	; 0xaa
 80082a2:	9327      	str	r3, [sp, #156]	; 0x9c
 80082a4:	a926      	add	r1, sp, #152	; 0x98
 80082a6:	a852      	add	r0, sp, #328	; 0x148
 80082a8:	f001 fd04 	bl	8009cb4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 80082ac:	f89d 4106 	ldrb.w	r4, [sp, #262]	; 0x106
 80082b0:	ab14      	add	r3, sp, #80	; 0x50
 80082b2:	2101      	movs	r1, #1
 80082b4:	a808      	add	r0, sp, #32
 80082b6:	9360      	str	r3, [sp, #384]	; 0x180
 80082b8:	f002 f998 	bl	800a5ec <PixelPatterns::PixelPatterns(unsigned int)>
 80082bc:	4b63      	ldr	r3, [pc, #396]	; (800844c <main+0x308>)
 80082be:	2c05      	cmp	r4, #5
 80082c0:	601c      	str	r4, [r3, #0]
 80082c2:	f340 815f 	ble.w	8008584 <main+0x440>
 80082c6:	4b62      	ldr	r3, [pc, #392]	; (8008450 <main+0x30c>)
 80082c8:	2110      	movs	r1, #16
 80082ca:	2203      	movs	r2, #3
 80082cc:	4861      	ldr	r0, [pc, #388]	; (8008454 <main+0x310>)
 80082ce:	930d      	str	r3, [sp, #52]	; 0x34
 80082d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80082d4:	f009 f8ee 	bl	80114b4 <gpio_init>
 80082d8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80082dc:	4b5e      	ldr	r3, [pc, #376]	; (8008458 <main+0x314>)
 80082de:	ac0d      	add	r4, sp, #52	; 0x34
 80082e0:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80082e4:	9826      	ldr	r0, [sp, #152]	; 0x98
 80082e6:	9461      	str	r4, [sp, #388]	; 0x184
 80082e8:	f002 fbdc 	bl	800aaa4 <PixelType::GetType(pixel::Type)>
 80082ec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80082ee:	2107      	movs	r1, #7
 80082f0:	9201      	str	r2, [sp, #4]
 80082f2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80082f4:	4603      	mov	r3, r0
 80082f6:	9200      	str	r2, [sp, #0]
 80082f8:	a81f      	add	r0, sp, #124	; 0x7c
 80082fa:	4a58      	ldr	r2, [pc, #352]	; (800845c <main+0x318>)
 80082fc:	f7ff feba 	bl	8008074 <Display::Printf(unsigned char, char const*, ...)>
 8008300:	ab52      	add	r3, sp, #328	; 0x148
 8008302:	2008      	movs	r0, #8
 8008304:	934f      	str	r3, [sp, #316]	; 0x13c
 8008306:	f008 fd7b 	bl	8010e00 <operator new(unsigned int)>
 800830a:	4b55      	ldr	r3, [pc, #340]	; (8008460 <main+0x31c>)
 800830c:	904e      	str	r0, [sp, #312]	; 0x138
 800830e:	6003      	str	r3, [r0, #0]
 8008310:	ab52      	add	r3, sp, #328	; 0x148
 8008312:	6043      	str	r3, [r0, #4]
 8008314:	a842      	add	r0, sp, #264	; 0x108
 8008316:	f000 ff25 	bl	8009164 <OscServer::Print()>
 800831a:	a852      	add	r0, sp, #328	; 0x148
 800831c:	f002 f8a6 	bl	800a46c <WS28xxDmx::Print()>
 8008320:	2401      	movs	r4, #1
 8008322:	9825      	ldr	r0, [sp, #148]	; 0x94
 8008324:	b2e1      	uxtb	r1, r4
 8008326:	b110      	cbz	r0, 800832e <main+0x1ea>
 8008328:	6803      	ldr	r3, [r0, #0]
 800832a:	691b      	ldr	r3, [r3, #16]
 800832c:	4798      	blx	r3
 800832e:	3401      	adds	r4, #1
 8008330:	2c07      	cmp	r4, #7
 8008332:	d1f6      	bne.n	8008322 <main+0x1de>
 8008334:	2101      	movs	r1, #1
 8008336:	4a4b      	ldr	r2, [pc, #300]	; (8008464 <main+0x320>)
 8008338:	a81f      	add	r0, sp, #124	; 0x7c
 800833a:	f7ff fe9b 	bl	8008074 <Display::Printf(unsigned char, char const*, ...)>
 800833e:	2102      	movs	r1, #2
 8008340:	4a49      	ldr	r2, [pc, #292]	; (8008468 <main+0x324>)
 8008342:	9825      	ldr	r0, [sp, #148]	; 0x94
 8008344:	f7ff fe57 	bl	8007ff6 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008348:	f89d 418d 	ldrb.w	r4, [sp, #397]	; 0x18d
 800834c:	4b47      	ldr	r3, [pc, #284]	; (800846c <main+0x328>)
 800834e:	2c00      	cmp	r4, #0
 8008350:	bf14      	ite	ne
 8008352:	2444      	movne	r4, #68	; 0x44
 8008354:	2453      	moveq	r4, #83	; 0x53
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	691b      	ldr	r3, [r3, #16]
 800835a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800835e:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008362:	0e18      	lsrs	r0, r3, #24
 8008364:	e9cd 2100 	strd	r2, r1, [sp]
 8008368:	e9cd 0402 	strd	r0, r4, [sp, #8]
 800836c:	2103      	movs	r1, #3
 800836e:	4a40      	ldr	r2, [pc, #256]	; (8008470 <main+0x32c>)
 8008370:	b2db      	uxtb	r3, r3
 8008372:	a81f      	add	r0, sp, #124	; 0x7c
 8008374:	f7ff fe7e 	bl	8008074 <Display::Printf(unsigned char, char const*, ...)>
 8008378:	2104      	movs	r1, #4
 800837a:	f8bd 3108 	ldrh.w	r3, [sp, #264]	; 0x108
 800837e:	4a3d      	ldr	r2, [pc, #244]	; (8008474 <main+0x330>)
 8008380:	a81f      	add	r0, sp, #124	; 0x7c
 8008382:	f7ff fe77 	bl	8008074 <Display::Printf(unsigned char, char const*, ...)>
 8008386:	2105      	movs	r1, #5
 8008388:	f8bd 310a 	ldrh.w	r3, [sp, #266]	; 0x10a
 800838c:	4a3a      	ldr	r2, [pc, #232]	; (8008478 <main+0x334>)
 800838e:	a81f      	add	r0, sp, #124	; 0x7c
 8008390:	f7ff fe70 	bl	8008074 <Display::Printf(unsigned char, char const*, ...)>
 8008394:	2301      	movs	r3, #1
 8008396:	2203      	movs	r2, #3
 8008398:	2102      	movs	r1, #2
 800839a:	a8f9      	add	r0, sp, #996	; 0x3e4
 800839c:	f003 fc48 	bl	800bc30 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 80083a0:	a80e      	add	r0, sp, #56	; 0x38
 80083a2:	f004 ffc3 	bl	800d32c <StoreRemoteConfig::StoreRemoteConfig()>
 80083a6:	a90e      	add	r1, sp, #56	; 0x38
 80083a8:	a82e      	add	r0, sp, #184	; 0xb8
 80083aa:	f003 fedf 	bl	800c16c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80083ae:	a82e      	add	r0, sp, #184	; 0xb8
 80083b0:	f003 fee6 	bl	800c180 <RemoteConfigParams::Load()>
 80083b4:	b130      	cbz	r0, 80083c4 <main+0x280>
 80083b6:	a82e      	add	r0, sp, #184	; 0xb8
 80083b8:	a9f9      	add	r1, sp, #996	; 0x3e4
 80083ba:	f004 f808 	bl	800c3ce <RemoteConfigParams::Set(RemoteConfig*)>
 80083be:	a82e      	add	r0, sp, #184	; 0xb8
 80083c0:	f004 f825 	bl	800c40e <RemoteConfigParams::Dump()>
 80083c4:	a806      	add	r0, sp, #24
 80083c6:	f004 fe4b 	bl	800d060 <SpiFlashStore::Flash()>
 80083ca:	2800      	cmp	r0, #0
 80083cc:	d1fa      	bne.n	80083c4 <main+0x280>
 80083ce:	2303      	movs	r3, #3
 80083d0:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80083d4:	4929      	ldr	r1, [pc, #164]	; (800847c <main+0x338>)
 80083d6:	a81f      	add	r0, sp, #124	; 0x7c
 80083d8:	f7ff fe68 	bl	80080ac <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80083dc:	a842      	add	r0, sp, #264	; 0x108
 80083de:	f000 fcc5 	bl	8008d6c <OscServer::Start()>
 80083e2:	2302      	movs	r3, #2
 80083e4:	f248 0280 	movw	r2, #32896	; 0x8080
 80083e8:	4925      	ldr	r1, [pc, #148]	; (8008480 <main+0x33c>)
 80083ea:	a81f      	add	r0, sp, #124	; 0x7c
 80083ec:	f7ff fe5e 	bl	80080ac <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80083f0:	2102      	movs	r1, #2
 80083f2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80083f6:	f009 f833 	bl	8011460 <fwdgt_config>
 80083fa:	2801      	cmp	r0, #1
 80083fc:	bf0c      	ite	eq
 80083fe:	2301      	moveq	r3, #1
 8008400:	2300      	movne	r3, #0
 8008402:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
 8008406:	d101      	bne.n	800840c <main+0x2c8>
 8008408:	f009 f81a 	bl	8011440 <fwdgt_enable>
 800840c:	2501      	movs	r5, #1
 800840e:	4c1d      	ldr	r4, [pc, #116]	; (8008484 <main+0x340>)
 8008410:	e03a      	b.n	8008488 <main+0x344>
 8008412:	bf00      	nop
 8008414:	0801306d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip, sp}
 8008418:	08013064 	stmdaeq	r1, {r2, r5, r6, ip, sp}
 800841c:	08013165 	stmdaeq	r1, {r0, r2, r5, r6, r8, ip, sp}
 8008420:	08013079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, sp}
 8008424:	40011000 	andmi	r1, r1, r0
 8008428:	08013120 	stmdaeq	r1, {r5, r8, ip, sp}
 800842c:	200096a0 	andcs	r9, r0, r0, lsr #13
 8008430:	0801468f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, lr}
 8008434:	080130b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, ip, sp}
 8008438:	080130ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, ip, sp}
 800843c:	080130c6 	stmdaeq	r1, {r1, r2, r6, r7, ip, sp}
 8008440:	080130bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, ip, sp}
 8008444:	08012ffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 8008448:	08013286 	stmdaeq	r1, {r1, r2, r7, r9, ip, sp}
 800844c:	20000728 	andcs	r0, r0, r8, lsr #14
 8008450:	08013134 	stmdaeq	r1, {r2, r4, r5, r8, ip, sp}
 8008454:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008458:	40010000 	andmi	r0, r1, r0
 800845c:	080130d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, ip, sp}
 8008460:	0801314c 	stmdaeq	r1, {r2, r3, r6, r8, ip, sp}
 8008464:	080130e0 	stmdaeq	r1, {r5, r6, r7, ip, sp}
 8008468:	080130ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp}
 800846c:	20009070 	andcs	r9, r0, r0, ror r0
 8008470:	080130f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, ip, sp}
 8008474:	08013109 	stmdaeq	r1, {r0, r3, r8, ip, sp}
 8008478:	08013110 	stmdaeq	r1, {r4, r8, ip, sp}
 800847c:	0801326e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, ip, sp}
 8008480:	0801329d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, ip, sp}
 8008484:	200097a4 	andcs	r9, r0, r4, lsr #15
 8008488:	4f47      	ldr	r7, [pc, #284]	; (80085a8 <main+0x464>)
 800848a:	f008 ffe1 	bl	8011450 <fwdgt_counter_reload>
 800848e:	f005 fa0d 	bl	800d8ac <net_handle>
 8008492:	a842      	add	r0, sp, #264	; 0x108
 8008494:	f000 fd1a 	bl	8008ecc <OscServer::Run()>
 8008498:	a8f9      	add	r0, sp, #996	; 0x3e4
 800849a:	f003 fd4f 	bl	800bf3c <RemoteConfig::Run()>
 800849e:	a806      	add	r0, sp, #24
 80084a0:	f004 fdde 	bl	800d060 <SpiFlashStore::Flash()>
 80084a4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80084a6:	b172      	cbz	r2, 80084c6 <main+0x382>
 80084a8:	6823      	ldr	r3, [r4, #0]
 80084aa:	991e      	ldr	r1, [sp, #120]	; 0x78
 80084ac:	1a5b      	subs	r3, r3, r1
 80084ae:	429a      	cmp	r2, r3
 80084b0:	d809      	bhi.n	80084c6 <main+0x382>
 80084b2:	6823      	ldr	r3, [r4, #0]
 80084b4:	931e      	str	r3, [sp, #120]	; 0x78
 80084b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80084b8:	2b01      	cmp	r3, #1
 80084ba:	f083 0201 	eor.w	r2, r3, #1
 80084be:	921d      	str	r2, [sp, #116]	; 0x74
 80084c0:	bf14      	ite	ne
 80084c2:	6135      	strne	r5, [r6, #16]
 80084c4:	6173      	streq	r3, [r6, #20]
 80084c6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80084c8:	b17a      	cbz	r2, 80084ea <main+0x3a6>
 80084ca:	f89d 308c 	ldrb.w	r3, [sp, #140]	; 0x8c
 80084ce:	b963      	cbnz	r3, 80084ea <main+0x3a6>
 80084d0:	6823      	ldr	r3, [r4, #0]
 80084d2:	9920      	ldr	r1, [sp, #128]	; 0x80
 80084d4:	1a5b      	subs	r3, r3, r1
 80084d6:	429a      	cmp	r2, r3
 80084d8:	d207      	bcs.n	80084ea <main+0x3a6>
 80084da:	9825      	ldr	r0, [sp, #148]	; 0x94
 80084dc:	b128      	cbz	r0, 80084ea <main+0x3a6>
 80084de:	6803      	ldr	r3, [r0, #0]
 80084e0:	2101      	movs	r1, #1
 80084e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80084e4:	f88d 508c 	strb.w	r5, [sp, #140]	; 0x8c
 80084e8:	4798      	blx	r3
 80084ea:	683b      	ldr	r3, [r7, #0]
 80084ec:	b113      	cbz	r3, 80084f4 <main+0x3b0>
 80084ee:	a808      	add	r0, sp, #32
 80084f0:	f002 faae 	bl	800aa50 <PixelPatterns::Run()>
 80084f4:	a807      	add	r0, sp, #28
 80084f6:	f006 fb65 	bl	800ebc4 <MDNS::Run()>
 80084fa:	e7c6      	b.n	800848a <main+0x346>
 80084fc:	2300      	movs	r3, #0
 80084fe:	2264      	movs	r2, #100	; 0x64
 8008500:	4619      	mov	r1, r3
 8008502:	a808      	add	r0, sp, #32
 8008504:	f002 f892 	bl	800a62c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008508:	e6dd      	b.n	80082c6 <main+0x182>
 800850a:	2200      	movs	r2, #0
 800850c:	2364      	movs	r3, #100	; 0x64
 800850e:	4611      	mov	r1, r2
 8008510:	e9cd 3200 	strd	r3, r2, [sp]
 8008514:	a808      	add	r0, sp, #32
 8008516:	4b25      	ldr	r3, [pc, #148]	; (80085ac <main+0x468>)
 8008518:	f002 f89c 	bl	800a654 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 800851c:	e6d3      	b.n	80082c6 <main+0x182>
 800851e:	2100      	movs	r1, #0
 8008520:	2364      	movs	r3, #100	; 0x64
 8008522:	4a22      	ldr	r2, [pc, #136]	; (80085ac <main+0x468>)
 8008524:	9100      	str	r1, [sp, #0]
 8008526:	a808      	add	r0, sp, #32
 8008528:	f002 f8b0 	bl	800a68c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 800852c:	e6cb      	b.n	80082c6 <main+0x182>
 800852e:	2364      	movs	r3, #100	; 0x64
 8008530:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008534:	2100      	movs	r1, #0
 8008536:	a808      	add	r0, sp, #32
 8008538:	f002 f8c2 	bl	800a6c0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 800853c:	e6c3      	b.n	80082c6 <main+0x182>
 800853e:	2200      	movs	r2, #0
 8008540:	2364      	movs	r3, #100	; 0x64
 8008542:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008546:	230a      	movs	r3, #10
 8008548:	4611      	mov	r1, r2
 800854a:	9300      	str	r3, [sp, #0]
 800854c:	a808      	add	r0, sp, #32
 800854e:	4b17      	ldr	r3, [pc, #92]	; (80085ac <main+0x468>)
 8008550:	f002 f8e8 	bl	800a724 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008554:	e6b7      	b.n	80082c6 <main+0x182>
 8008556:	2400      	movs	r4, #0
 8008558:	4625      	mov	r5, r4
 800855a:	4b15      	ldr	r3, [pc, #84]	; (80085b0 <main+0x46c>)
 800855c:	4f15      	ldr	r7, [pc, #84]	; (80085b4 <main+0x470>)
 800855e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80085b8 <main+0x474>
 8008562:	61dc      	str	r4, [r3, #28]
 8008564:	f8d8 3000 	ldr.w	r3, [r8]
 8008568:	6838      	ldr	r0, [r7, #0]
 800856a:	42a3      	cmp	r3, r4
 800856c:	d907      	bls.n	800857e <main+0x43a>
 800856e:	2300      	movs	r3, #0
 8008570:	4621      	mov	r1, r4
 8008572:	461a      	mov	r2, r3
 8008574:	9500      	str	r5, [sp, #0]
 8008576:	f002 fbb5 	bl	800ace4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800857a:	3401      	adds	r4, #1
 800857c:	e7f2      	b.n	8008564 <main+0x420>
 800857e:	f003 f9f1 	bl	800b964 <WS28xx::Update()>
 8008582:	e6a0      	b.n	80082c6 <main+0x182>
 8008584:	2c05      	cmp	r4, #5
 8008586:	f63f ae9e 	bhi.w	80082c6 <main+0x182>
 800858a:	a301      	add	r3, pc, #4	; (adr r3, 8008590 <main+0x44c>)
 800858c:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 8008590:	08008557 	stmdaeq	r0, {r0, r1, r2, r4, r6, r8, sl, pc}
 8008594:	080084fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, pc}
 8008598:	0800850b 	stmdaeq	r0, {r0, r1, r3, r8, sl, pc}
 800859c:	0800851f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, sl, pc}
 80085a0:	0800852f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, sl, pc}
 80085a4:	0800853f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, sl, pc}
 80085a8:	20000728 	andcs	r0, r0, r8, lsr #14
 80085ac:	00646464 	rsbeq	r6, r4, r4, ror #8
 80085b0:	200006f8 	strdcs	r0, [r0], -r8
 80085b4:	20000724 	andcs	r0, r0, r4, lsr #14
 80085b8:	20000720 	andcs	r0, r0, r0, lsr #14

080085bc <Handler::Update()>:
 80085bc:	2100      	movs	r1, #0
 80085be:	6840      	ldr	r0, [r0, #4]
 80085c0:	f001 ba8d 	b.w	8009ade <WS28xxDmx::Blackout(bool)>

080085c4 <Handler::Blackout()>:
 80085c4:	2101      	movs	r1, #1
 80085c6:	6840      	ldr	r0, [r0, #4]
 80085c8:	f001 ba89 	b.w	8009ade <WS28xxDmx::Blackout(bool)>

080085cc <NetworkDisplay::ShowEmacStart()>:
 80085cc:	4770      	bx	lr

080085ce <NetworkDisplay::ShowIp()>:
 80085ce:	4770      	bx	lr

080085d0 <NetworkDisplay::ShowShutdown()>:
 80085d0:	4770      	bx	lr

080085d2 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80085d2:	4770      	bx	lr

080085d4 <_itostr>:
 80085d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085d6:	0fc7      	lsrs	r7, r0, #31
 80085d8:	b091      	sub	sp, #68	; 0x44
 80085da:	bf18      	it	ne
 80085dc:	4240      	negne	r0, r0
 80085de:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 80085e2:	b9c8      	cbnz	r0, 8008618 <_itostr+0x44>
 80085e4:	2330      	movs	r3, #48	; 0x30
 80085e6:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80085ea:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80085ee:	b132      	cbz	r2, 80085fe <_itostr+0x2a>
 80085f0:	4668      	mov	r0, sp
 80085f2:	2530      	movs	r5, #48	; 0x30
 80085f4:	1ae6      	subs	r6, r4, r3
 80085f6:	4296      	cmp	r6, r2
 80085f8:	da01      	bge.n	80085fe <_itostr+0x2a>
 80085fa:	4283      	cmp	r3, r0
 80085fc:	d81c      	bhi.n	8008638 <_itostr+0x64>
 80085fe:	b117      	cbz	r7, 8008606 <_itostr+0x32>
 8008600:	222d      	movs	r2, #45	; 0x2d
 8008602:	f803 2901 	strb.w	r2, [r3], #-1
 8008606:	3301      	adds	r3, #1
 8008608:	1ae0      	subs	r0, r4, r3
 800860a:	3901      	subs	r1, #1
 800860c:	aa10      	add	r2, sp, #64	; 0x40
 800860e:	4293      	cmp	r3, r2
 8008610:	d315      	bcc.n	800863e <_itostr+0x6a>
 8008612:	3001      	adds	r0, #1
 8008614:	b011      	add	sp, #68	; 0x44
 8008616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008618:	4623      	mov	r3, r4
 800861a:	250a      	movs	r5, #10
 800861c:	46ec      	mov	ip, sp
 800861e:	fb90 f6f5 	sdiv	r6, r0, r5
 8008622:	fb05 0016 	mls	r0, r5, r6, r0
 8008626:	3030      	adds	r0, #48	; 0x30
 8008628:	f803 0901 	strb.w	r0, [r3], #-1
 800862c:	4630      	mov	r0, r6
 800862e:	2e00      	cmp	r6, #0
 8008630:	d0dd      	beq.n	80085ee <_itostr+0x1a>
 8008632:	4563      	cmp	r3, ip
 8008634:	d1f3      	bne.n	800861e <_itostr+0x4a>
 8008636:	e7da      	b.n	80085ee <_itostr+0x1a>
 8008638:	f803 5901 	strb.w	r5, [r3], #-1
 800863c:	e7da      	b.n	80085f4 <_itostr+0x20>
 800863e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008642:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008646:	e7e1      	b.n	800860c <_itostr+0x38>

08008648 <_xputch>:
 8008648:	4603      	mov	r3, r0
 800864a:	b410      	push	{r4}
 800864c:	4c08      	ldr	r4, [pc, #32]	; (8008670 <_xputch+0x28>)
 800864e:	68da      	ldr	r2, [r3, #12]
 8008650:	4608      	mov	r0, r1
 8008652:	6821      	ldr	r1, [r4, #0]
 8008654:	3201      	adds	r2, #1
 8008656:	60da      	str	r2, [r3, #12]
 8008658:	b139      	cbz	r1, 800866a <_xputch+0x22>
 800865a:	691b      	ldr	r3, [r3, #16]
 800865c:	429a      	cmp	r2, r3
 800865e:	da02      	bge.n	8008666 <_xputch+0x1e>
 8008660:	1c4b      	adds	r3, r1, #1
 8008662:	6023      	str	r3, [r4, #0]
 8008664:	7008      	strb	r0, [r1, #0]
 8008666:	bc10      	pop	{r4}
 8008668:	4770      	bx	lr
 800866a:	bc10      	pop	{r4}
 800866c:	f008 ba52 	b.w	8010b14 <console_putc>
 8008670:	200000e8 	andcs	r0, r0, r8, ror #1

08008674 <_format_int>:
 8008674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008678:	461f      	mov	r7, r3
 800867a:	b091      	sub	sp, #68	; 0x44
 800867c:	ea52 0307 	orrs.w	r3, r2, r7
 8008680:	4680      	mov	r8, r0
 8008682:	4616      	mov	r6, r2
 8008684:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008688:	d138      	bne.n	80086fc <_format_int+0x88>
 800868a:	2330      	movs	r3, #48	; 0x30
 800868c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008690:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008694:	f8d8 3000 	ldr.w	r3, [r8]
 8008698:	07d8      	lsls	r0, r3, #31
 800869a:	d508      	bpl.n	80086ae <_format_int+0x3a>
 800869c:	466a      	mov	r2, sp
 800869e:	2030      	movs	r0, #48	; 0x30
 80086a0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80086a4:	1b2e      	subs	r6, r5, r4
 80086a6:	428e      	cmp	r6, r1
 80086a8:	da01      	bge.n	80086ae <_format_int+0x3a>
 80086aa:	4294      	cmp	r4, r2
 80086ac:	d843      	bhi.n	8008736 <_format_int+0xc2>
 80086ae:	0699      	lsls	r1, r3, #26
 80086b0:	d508      	bpl.n	80086c4 <_format_int+0x50>
 80086b2:	466a      	mov	r2, sp
 80086b4:	2030      	movs	r0, #48	; 0x30
 80086b6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80086ba:	1b2e      	subs	r6, r5, r4
 80086bc:	428e      	cmp	r6, r1
 80086be:	da01      	bge.n	80086c4 <_format_int+0x50>
 80086c0:	4294      	cmp	r4, r2
 80086c2:	d83b      	bhi.n	800873c <_format_int+0xc8>
 80086c4:	071a      	lsls	r2, r3, #28
 80086c6:	bf44      	itt	mi
 80086c8:	222d      	movmi	r2, #45	; 0x2d
 80086ca:	f804 2901 	strbmi.w	r2, [r4], #-1
 80086ce:	065b      	lsls	r3, r3, #25
 80086d0:	d408      	bmi.n	80086e4 <_format_int+0x70>
 80086d2:	466b      	mov	r3, sp
 80086d4:	2120      	movs	r1, #32
 80086d6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80086da:	1b28      	subs	r0, r5, r4
 80086dc:	4290      	cmp	r0, r2
 80086de:	da01      	bge.n	80086e4 <_format_int+0x70>
 80086e0:	429c      	cmp	r4, r3
 80086e2:	d82e      	bhi.n	8008742 <_format_int+0xce>
 80086e4:	1b2d      	subs	r5, r5, r4
 80086e6:	3401      	adds	r4, #1
 80086e8:	ab10      	add	r3, sp, #64	; 0x40
 80086ea:	429c      	cmp	r4, r3
 80086ec:	d32c      	bcc.n	8008748 <_format_int+0xd4>
 80086ee:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80086f2:	42ab      	cmp	r3, r5
 80086f4:	dc2e      	bgt.n	8008754 <_format_int+0xe0>
 80086f6:	b011      	add	sp, #68	; 0x44
 80086f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086fc:	462c      	mov	r4, r5
 80086fe:	46eb      	mov	fp, sp
 8008700:	4630      	mov	r0, r6
 8008702:	4639      	mov	r1, r7
 8008704:	220a      	movs	r2, #10
 8008706:	2300      	movs	r3, #0
 8008708:	f7fe ff1c 	bl	8007544 <__aeabi_uldivmod>
 800870c:	46b2      	mov	sl, r6
 800870e:	3230      	adds	r2, #48	; 0x30
 8008710:	46b9      	mov	r9, r7
 8008712:	2300      	movs	r3, #0
 8008714:	4630      	mov	r0, r6
 8008716:	4639      	mov	r1, r7
 8008718:	f804 2901 	strb.w	r2, [r4], #-1
 800871c:	220a      	movs	r2, #10
 800871e:	f7fe ff11 	bl	8007544 <__aeabi_uldivmod>
 8008722:	f1ba 0f0a 	cmp.w	sl, #10
 8008726:	f179 0300 	sbcs.w	r3, r9, #0
 800872a:	4606      	mov	r6, r0
 800872c:	460f      	mov	r7, r1
 800872e:	d3b1      	bcc.n	8008694 <_format_int+0x20>
 8008730:	455c      	cmp	r4, fp
 8008732:	d1e5      	bne.n	8008700 <_format_int+0x8c>
 8008734:	e7ae      	b.n	8008694 <_format_int+0x20>
 8008736:	f804 0901 	strb.w	r0, [r4], #-1
 800873a:	e7b3      	b.n	80086a4 <_format_int+0x30>
 800873c:	f804 0901 	strb.w	r0, [r4], #-1
 8008740:	e7bb      	b.n	80086ba <_format_int+0x46>
 8008742:	f804 1901 	strb.w	r1, [r4], #-1
 8008746:	e7c8      	b.n	80086da <_format_int+0x66>
 8008748:	4640      	mov	r0, r8
 800874a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800874e:	f7ff ff7b 	bl	8008648 <_xputch>
 8008752:	e7c9      	b.n	80086e8 <_format_int+0x74>
 8008754:	2120      	movs	r1, #32
 8008756:	4640      	mov	r0, r8
 8008758:	f7ff ff76 	bl	8008648 <_xputch>
 800875c:	3501      	adds	r5, #1
 800875e:	e7c6      	b.n	80086ee <_format_int+0x7a>

08008760 <_format_hex>:
 8008760:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008762:	b091      	sub	sp, #68	; 0x44
 8008764:	4606      	mov	r6, r0
 8008766:	6804      	ldr	r4, [r0, #0]
 8008768:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800876c:	bb61      	cbnz	r1, 80087c8 <_format_hex+0x68>
 800876e:	2330      	movs	r3, #48	; 0x30
 8008770:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008774:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008778:	07e5      	lsls	r5, r4, #31
 800877a:	d507      	bpl.n	800878c <_format_hex+0x2c>
 800877c:	4669      	mov	r1, sp
 800877e:	2530      	movs	r5, #48	; 0x30
 8008780:	6870      	ldr	r0, [r6, #4]
 8008782:	1ad7      	subs	r7, r2, r3
 8008784:	4287      	cmp	r7, r0
 8008786:	da01      	bge.n	800878c <_format_hex+0x2c>
 8008788:	428b      	cmp	r3, r1
 800878a:	d831      	bhi.n	80087f0 <_format_hex+0x90>
 800878c:	06a0      	lsls	r0, r4, #26
 800878e:	d507      	bpl.n	80087a0 <_format_hex+0x40>
 8008790:	4669      	mov	r1, sp
 8008792:	2530      	movs	r5, #48	; 0x30
 8008794:	68b0      	ldr	r0, [r6, #8]
 8008796:	1ad7      	subs	r7, r2, r3
 8008798:	4287      	cmp	r7, r0
 800879a:	da01      	bge.n	80087a0 <_format_hex+0x40>
 800879c:	428b      	cmp	r3, r1
 800879e:	d82a      	bhi.n	80087f6 <_format_hex+0x96>
 80087a0:	0661      	lsls	r1, r4, #25
 80087a2:	d407      	bmi.n	80087b4 <_format_hex+0x54>
 80087a4:	4669      	mov	r1, sp
 80087a6:	2420      	movs	r4, #32
 80087a8:	68b0      	ldr	r0, [r6, #8]
 80087aa:	1ad5      	subs	r5, r2, r3
 80087ac:	4285      	cmp	r5, r0
 80087ae:	da01      	bge.n	80087b4 <_format_hex+0x54>
 80087b0:	428b      	cmp	r3, r1
 80087b2:	d823      	bhi.n	80087fc <_format_hex+0x9c>
 80087b4:	1ad5      	subs	r5, r2, r3
 80087b6:	1c5c      	adds	r4, r3, #1
 80087b8:	ab10      	add	r3, sp, #64	; 0x40
 80087ba:	429c      	cmp	r4, r3
 80087bc:	d321      	bcc.n	8008802 <_format_hex+0xa2>
 80087be:	68b3      	ldr	r3, [r6, #8]
 80087c0:	429d      	cmp	r5, r3
 80087c2:	db24      	blt.n	800880e <_format_hex+0xae>
 80087c4:	b011      	add	sp, #68	; 0x44
 80087c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80087c8:	f014 0f02 	tst.w	r4, #2
 80087cc:	bf0c      	ite	eq
 80087ce:	2757      	moveq	r7, #87	; 0x57
 80087d0:	2737      	movne	r7, #55	; 0x37
 80087d2:	4613      	mov	r3, r2
 80087d4:	466d      	mov	r5, sp
 80087d6:	f001 000f 	and.w	r0, r1, #15
 80087da:	2809      	cmp	r0, #9
 80087dc:	bf94      	ite	ls
 80087de:	3030      	addls	r0, #48	; 0x30
 80087e0:	19c0      	addhi	r0, r0, r7
 80087e2:	0909      	lsrs	r1, r1, #4
 80087e4:	f803 0901 	strb.w	r0, [r3], #-1
 80087e8:	d0c6      	beq.n	8008778 <_format_hex+0x18>
 80087ea:	42ab      	cmp	r3, r5
 80087ec:	d1f3      	bne.n	80087d6 <_format_hex+0x76>
 80087ee:	e7c3      	b.n	8008778 <_format_hex+0x18>
 80087f0:	f803 5901 	strb.w	r5, [r3], #-1
 80087f4:	e7c5      	b.n	8008782 <_format_hex+0x22>
 80087f6:	f803 5901 	strb.w	r5, [r3], #-1
 80087fa:	e7cc      	b.n	8008796 <_format_hex+0x36>
 80087fc:	f803 4901 	strb.w	r4, [r3], #-1
 8008800:	e7d3      	b.n	80087aa <_format_hex+0x4a>
 8008802:	4630      	mov	r0, r6
 8008804:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008808:	f7ff ff1e 	bl	8008648 <_xputch>
 800880c:	e7d4      	b.n	80087b8 <_format_hex+0x58>
 800880e:	2120      	movs	r1, #32
 8008810:	4630      	mov	r0, r6
 8008812:	f7ff ff19 	bl	8008648 <_xputch>
 8008816:	3501      	adds	r5, #1
 8008818:	e7d1      	b.n	80087be <_format_hex+0x5e>
	...

0800881c <_vprintf>:
 800881c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008820:	4614      	mov	r4, r2
 8008822:	2200      	movs	r2, #0
 8008824:	460b      	mov	r3, r1
 8008826:	2700      	movs	r7, #0
 8008828:	b099      	sub	sp, #100	; 0x64
 800882a:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800882e:	ae08      	add	r6, sp, #32
 8008830:	7819      	ldrb	r1, [r3, #0]
 8008832:	b919      	cbnz	r1, 800883c <_vprintf+0x20>
 8008834:	9806      	ldr	r0, [sp, #24]
 8008836:	b019      	add	sp, #100	; 0x64
 8008838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800883c:	2925      	cmp	r1, #37	; 0x25
 800883e:	f103 0501 	add.w	r5, r3, #1
 8008842:	d004      	beq.n	800884e <_vprintf+0x32>
 8008844:	a803      	add	r0, sp, #12
 8008846:	f7ff feff 	bl	8008648 <_xputch>
 800884a:	462b      	mov	r3, r5
 800884c:	e7f0      	b.n	8008830 <_vprintf+0x14>
 800884e:	2200      	movs	r2, #0
 8008850:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008854:	9205      	str	r2, [sp, #20]
 8008856:	785a      	ldrb	r2, [r3, #1]
 8008858:	2a30      	cmp	r2, #48	; 0x30
 800885a:	d12b      	bne.n	80088b4 <_vprintf+0x98>
 800885c:	2220      	movs	r2, #32
 800885e:	9203      	str	r2, [sp, #12]
 8008860:	1c9d      	adds	r5, r3, #2
 8008862:	2200      	movs	r2, #0
 8008864:	46ac      	mov	ip, r5
 8008866:	4613      	mov	r3, r2
 8008868:	f04f 0e0a 	mov.w	lr, #10
 800886c:	f89c 1000 	ldrb.w	r1, [ip]
 8008870:	4665      	mov	r5, ip
 8008872:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008876:	2809      	cmp	r0, #9
 8008878:	f10c 0c01 	add.w	ip, ip, #1
 800887c:	d91e      	bls.n	80088bc <_vprintf+0xa0>
 800887e:	b12a      	cbz	r2, 800888c <_vprintf+0x70>
 8008880:	9305      	str	r3, [sp, #20]
 8008882:	b11b      	cbz	r3, 800888c <_vprintf+0x70>
 8008884:	9b03      	ldr	r3, [sp, #12]
 8008886:	f043 0310 	orr.w	r3, r3, #16
 800888a:	9303      	str	r3, [sp, #12]
 800888c:	292e      	cmp	r1, #46	; 0x2e
 800888e:	d124      	bne.n	80088da <_vprintf+0xbe>
 8008890:	786b      	ldrb	r3, [r5, #1]
 8008892:	2b2a      	cmp	r3, #42	; 0x2a
 8008894:	d016      	beq.n	80088c4 <_vprintf+0xa8>
 8008896:	2100      	movs	r1, #0
 8008898:	f04f 0c0a 	mov.w	ip, #10
 800889c:	460a      	mov	r2, r1
 800889e:	1c68      	adds	r0, r5, #1
 80088a0:	7803      	ldrb	r3, [r0, #0]
 80088a2:	4605      	mov	r5, r0
 80088a4:	3b30      	subs	r3, #48	; 0x30
 80088a6:	2b09      	cmp	r3, #9
 80088a8:	f100 0001 	add.w	r0, r0, #1
 80088ac:	d958      	bls.n	8008960 <_vprintf+0x144>
 80088ae:	b181      	cbz	r1, 80088d2 <_vprintf+0xb6>
 80088b0:	9204      	str	r2, [sp, #16]
 80088b2:	e00e      	b.n	80088d2 <_vprintf+0xb6>
 80088b4:	2a2d      	cmp	r2, #45	; 0x2d
 80088b6:	d1d4      	bne.n	8008862 <_vprintf+0x46>
 80088b8:	2240      	movs	r2, #64	; 0x40
 80088ba:	e7d0      	b.n	800885e <_vprintf+0x42>
 80088bc:	2201      	movs	r2, #1
 80088be:	fb0e 0303 	mla	r3, lr, r3, r0
 80088c2:	e7d3      	b.n	800886c <_vprintf+0x50>
 80088c4:	f854 3b04 	ldr.w	r3, [r4], #4
 80088c8:	3502      	adds	r5, #2
 80088ca:	2b00      	cmp	r3, #0
 80088cc:	bfb8      	it	lt
 80088ce:	425b      	neglt	r3, r3
 80088d0:	9304      	str	r3, [sp, #16]
 80088d2:	9b03      	ldr	r3, [sp, #12]
 80088d4:	f043 0301 	orr.w	r3, r3, #1
 80088d8:	9303      	str	r3, [sp, #12]
 80088da:	782b      	ldrb	r3, [r5, #0]
 80088dc:	2b6c      	cmp	r3, #108	; 0x6c
 80088de:	bf04      	itt	eq
 80088e0:	9b03      	ldreq	r3, [sp, #12]
 80088e2:	3501      	addeq	r5, #1
 80088e4:	7829      	ldrb	r1, [r5, #0]
 80088e6:	bf04      	itt	eq
 80088e8:	f043 0304 	orreq.w	r3, r3, #4
 80088ec:	9303      	streq	r3, [sp, #12]
 80088ee:	2958      	cmp	r1, #88	; 0x58
 80088f0:	f000 8173 	beq.w	8008bda <_vprintf+0x3be>
 80088f4:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 80088f8:	b2da      	uxtb	r2, r3
 80088fa:	2a15      	cmp	r2, #21
 80088fc:	d8a2      	bhi.n	8008844 <_vprintf+0x28>
 80088fe:	2b15      	cmp	r3, #21
 8008900:	d8a0      	bhi.n	8008844 <_vprintf+0x28>
 8008902:	a201      	add	r2, pc, #4	; (adr r2, 8008908 <_vprintf+0xec>)
 8008904:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008908:	08008969 	stmdaeq	r0, {r0, r3, r5, r6, r8, fp, pc}
 800890c:	08008977 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, fp, pc}
 8008910:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008914:	080089ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r8, fp, pc}
 8008918:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 800891c:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008920:	08008977 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, fp, pc}
 8008924:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008928:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 800892c:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008930:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008934:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008938:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 800893c:	08008b1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp, pc}
 8008940:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008944:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008948:	08008b43 	stmdaeq	r0, {r0, r1, r6, r8, r9, fp, pc}
 800894c:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008950:	08008bbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, pc}
 8008954:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 8008958:	08008845 	stmdaeq	r0, {r0, r2, r6, fp, pc}
 800895c:	08008be3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, fp, pc}
 8008960:	2101      	movs	r1, #1
 8008962:	fb0c 3202 	mla	r2, ip, r2, r3
 8008966:	e79b      	b.n	80088a0 <_vprintf+0x84>
 8008968:	f854 1b04 	ldr.w	r1, [r4], #4
 800896c:	a803      	add	r0, sp, #12
 800896e:	f7ff fe6b 	bl	8008648 <_xputch>
 8008972:	3501      	adds	r5, #1
 8008974:	e769      	b.n	800884a <_vprintf+0x2e>
 8008976:	9903      	ldr	r1, [sp, #12]
 8008978:	074a      	lsls	r2, r1, #29
 800897a:	bf43      	ittte	mi
 800897c:	3407      	addmi	r4, #7
 800897e:	f024 0307 	bicmi.w	r3, r4, #7
 8008982:	461c      	movmi	r4, r3
 8008984:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8008988:	bf4a      	itet	mi
 800898a:	685b      	ldrmi	r3, [r3, #4]
 800898c:	17d3      	asrpl	r3, r2, #31
 800898e:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8008992:	2b00      	cmp	r3, #0
 8008994:	da05      	bge.n	80089a2 <_vprintf+0x186>
 8008996:	f041 0108 	orr.w	r1, r1, #8
 800899a:	4252      	negs	r2, r2
 800899c:	9103      	str	r1, [sp, #12]
 800899e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80089a2:	a803      	add	r0, sp, #12
 80089a4:	f7ff fe66 	bl	8008674 <_format_int>
 80089a8:	e7e3      	b.n	8008972 <_vprintf+0x156>
 80089aa:	3407      	adds	r4, #7
 80089ac:	f024 0407 	bic.w	r4, r4, #7
 80089b0:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80089b4:	f7fe fbcc 	bl	8007150 <__aeabi_d2f>
 80089b8:	9b03      	ldr	r3, [sp, #12]
 80089ba:	4639      	mov	r1, r7
 80089bc:	07db      	lsls	r3, r3, #31
 80089be:	bf54      	ite	pl
 80089c0:	f04f 0a06 	movpl.w	sl, #6
 80089c4:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80089c8:	4681      	mov	r9, r0
 80089ca:	f7fe fd6d 	bl	80074a8 <__aeabi_fcmplt>
 80089ce:	2800      	cmp	r0, #0
 80089d0:	d069      	beq.n	8008aa6 <_vprintf+0x28a>
 80089d2:	232d      	movs	r3, #45	; 0x2d
 80089d4:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 80089d8:	f88d 3020 	strb.w	r3, [sp, #32]
 80089dc:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 80089e0:	4648      	mov	r0, r9
 80089e2:	f7fe fd89 	bl	80074f8 <__aeabi_f2iz>
 80089e6:	4659      	mov	r1, fp
 80089e8:	2200      	movs	r2, #0
 80089ea:	4680      	mov	r8, r0
 80089ec:	f7ff fdf2 	bl	80085d4 <_itostr>
 80089f0:	eb0b 0200 	add.w	r2, fp, r0
 80089f4:	e9cd 2000 	strd	r2, r0, [sp]
 80089f8:	4640      	mov	r0, r8
 80089fa:	f7fe fcb3 	bl	8007364 <__aeabi_i2f>
 80089fe:	4601      	mov	r1, r0
 8008a00:	4648      	mov	r0, r9
 8008a02:	f7fe fbf9 	bl	80071f8 <__aeabi_fsub>
 8008a06:	222e      	movs	r2, #46	; 0x2e
 8008a08:	4601      	mov	r1, r0
 8008a0a:	200a      	movs	r0, #10
 8008a0c:	9b00      	ldr	r3, [sp, #0]
 8008a0e:	f10a 0901 	add.w	r9, sl, #1
 8008a12:	f103 0801 	add.w	r8, r3, #1
 8008a16:	9b01      	ldr	r3, [sp, #4]
 8008a18:	f80b 2003 	strb.w	r2, [fp, r3]
 8008a1c:	4603      	mov	r3, r0
 8008a1e:	f1ba 0f00 	cmp.w	sl, #0
 8008a22:	dc42      	bgt.n	8008aaa <_vprintf+0x28e>
 8008a24:	9100      	str	r1, [sp, #0]
 8008a26:	f7fe fc9d 	bl	8007364 <__aeabi_i2f>
 8008a2a:	9900      	ldr	r1, [sp, #0]
 8008a2c:	f7ff f8ca 	bl	8007bc4 <__aeabi_fmul>
 8008a30:	f7fe fd62 	bl	80074f8 <__aeabi_f2iz>
 8008a34:	4641      	mov	r1, r8
 8008a36:	464a      	mov	r2, r9
 8008a38:	f7ff fdcc 	bl	80085d4 <_itostr>
 8008a3c:	4480      	add	r8, r0
 8008a3e:	eba8 0806 	sub.w	r8, r8, r6
 8008a42:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 8008a46:	5c73      	ldrb	r3, [r6, r1]
 8008a48:	1872      	adds	r2, r6, r1
 8008a4a:	2b34      	cmp	r3, #52	; 0x34
 8008a4c:	d910      	bls.n	8008a70 <_vprintf+0x254>
 8008a4e:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8008a52:	1e53      	subs	r3, r2, #1
 8008a54:	282e      	cmp	r0, #46	; 0x2e
 8008a56:	d02f      	beq.n	8008ab8 <_vprintf+0x29c>
 8008a58:	469c      	mov	ip, r3
 8008a5a:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8008a5e:	4663      	mov	r3, ip
 8008a60:	f81c 0901 	ldrb.w	r0, [ip], #-1
 8008a64:	2839      	cmp	r0, #57	; 0x39
 8008a66:	d024      	beq.n	8008ab2 <_vprintf+0x296>
 8008a68:	282e      	cmp	r0, #46	; 0x2e
 8008a6a:	d025      	beq.n	8008ab8 <_vprintf+0x29c>
 8008a6c:	3001      	adds	r0, #1
 8008a6e:	7018      	strb	r0, [r3, #0]
 8008a70:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8008a74:	446b      	add	r3, sp
 8008a76:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8008a7a:	2b2e      	cmp	r3, #46	; 0x2e
 8008a7c:	bf08      	it	eq
 8008a7e:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 8008a82:	4688      	mov	r8, r1
 8008a84:	4689      	mov	r9, r1
 8008a86:	9b05      	ldr	r3, [sp, #20]
 8008a88:	454b      	cmp	r3, r9
 8008a8a:	dc40      	bgt.n	8008b0e <_vprintf+0x2f2>
 8008a8c:	46b1      	mov	r9, r6
 8008a8e:	f1b8 0f00 	cmp.w	r8, #0
 8008a92:	f77f af6e 	ble.w	8008972 <_vprintf+0x156>
 8008a96:	f819 1b01 	ldrb.w	r1, [r9], #1
 8008a9a:	a803      	add	r0, sp, #12
 8008a9c:	f7ff fdd4 	bl	8008648 <_xputch>
 8008aa0:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8008aa4:	e7f3      	b.n	8008a8e <_vprintf+0x272>
 8008aa6:	46b3      	mov	fp, r6
 8008aa8:	e79a      	b.n	80089e0 <_vprintf+0x1c4>
 8008aaa:	4358      	muls	r0, r3
 8008aac:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8008ab0:	e7b5      	b.n	8008a1e <_vprintf+0x202>
 8008ab2:	f88c e001 	strb.w	lr, [ip, #1]
 8008ab6:	e7d2      	b.n	8008a5e <_vprintf+0x242>
 8008ab8:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8008abc:	3b01      	subs	r3, #1
 8008abe:	7818      	ldrb	r0, [r3, #0]
 8008ac0:	2839      	cmp	r0, #57	; 0x39
 8008ac2:	d112      	bne.n	8008aea <_vprintf+0x2ce>
 8008ac4:	42b3      	cmp	r3, r6
 8008ac6:	d20d      	bcs.n	8008ae4 <_vprintf+0x2c8>
 8008ac8:	1c98      	adds	r0, r3, #2
 8008aca:	1c59      	adds	r1, r3, #1
 8008acc:	4281      	cmp	r1, r0
 8008ace:	eba2 0203 	sub.w	r2, r2, r3
 8008ad2:	d913      	bls.n	8008afc <_vprintf+0x2e0>
 8008ad4:	3201      	adds	r2, #1
 8008ad6:	441a      	add	r2, r3
 8008ad8:	428a      	cmp	r2, r1
 8008ada:	d10b      	bne.n	8008af4 <_vprintf+0x2d8>
 8008adc:	2231      	movs	r2, #49	; 0x31
 8008ade:	4641      	mov	r1, r8
 8008ae0:	705a      	strb	r2, [r3, #1]
 8008ae2:	e7c5      	b.n	8008a70 <_vprintf+0x254>
 8008ae4:	f803 c901 	strb.w	ip, [r3], #-1
 8008ae8:	e7e9      	b.n	8008abe <_vprintf+0x2a2>
 8008aea:	42b3      	cmp	r3, r6
 8008aec:	d3ec      	bcc.n	8008ac8 <_vprintf+0x2ac>
 8008aee:	282d      	cmp	r0, #45	; 0x2d
 8008af0:	d0ea      	beq.n	8008ac8 <_vprintf+0x2ac>
 8008af2:	e7bb      	b.n	8008a6c <_vprintf+0x250>
 8008af4:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008af8:	7008      	strb	r0, [r1, #0]
 8008afa:	e7ed      	b.n	8008ad8 <_vprintf+0x2bc>
 8008afc:	4411      	add	r1, r2
 8008afe:	4402      	add	r2, r0
 8008b00:	4290      	cmp	r0, r2
 8008b02:	d0eb      	beq.n	8008adc <_vprintf+0x2c0>
 8008b04:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8008b08:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8008b0c:	e7f8      	b.n	8008b00 <_vprintf+0x2e4>
 8008b0e:	2120      	movs	r1, #32
 8008b10:	a803      	add	r0, sp, #12
 8008b12:	f7ff fd99 	bl	8008648 <_xputch>
 8008b16:	f109 0901 	add.w	r9, r9, #1
 8008b1a:	e7b4      	b.n	8008a86 <_vprintf+0x26a>
 8008b1c:	2308      	movs	r3, #8
 8008b1e:	9305      	str	r3, [sp, #20]
 8008b20:	2320      	movs	r3, #32
 8008b22:	2130      	movs	r1, #48	; 0x30
 8008b24:	f854 8b04 	ldr.w	r8, [r4], #4
 8008b28:	a803      	add	r0, sp, #12
 8008b2a:	9303      	str	r3, [sp, #12]
 8008b2c:	f7ff fd8c 	bl	8008648 <_xputch>
 8008b30:	2178      	movs	r1, #120	; 0x78
 8008b32:	a803      	add	r0, sp, #12
 8008b34:	f7ff fd88 	bl	8008648 <_xputch>
 8008b38:	4641      	mov	r1, r8
 8008b3a:	a803      	add	r0, sp, #12
 8008b3c:	f7ff fe10 	bl	8008760 <_format_hex>
 8008b40:	e717      	b.n	8008972 <_vprintf+0x156>
 8008b42:	f04f 0800 	mov.w	r8, #0
 8008b46:	f854 9b04 	ldr.w	r9, [r4], #4
 8008b4a:	f819 3008 	ldrb.w	r3, [r9, r8]
 8008b4e:	b993      	cbnz	r3, 8008b76 <_vprintf+0x35a>
 8008b50:	9b03      	ldr	r3, [sp, #12]
 8008b52:	07d9      	lsls	r1, r3, #31
 8008b54:	d503      	bpl.n	8008b5e <_vprintf+0x342>
 8008b56:	9b04      	ldr	r3, [sp, #16]
 8008b58:	4598      	cmp	r8, r3
 8008b5a:	bfa8      	it	ge
 8008b5c:	4698      	movge	r8, r3
 8008b5e:	9b03      	ldr	r3, [sp, #12]
 8008b60:	f108 0a01 	add.w	sl, r8, #1
 8008b64:	065a      	lsls	r2, r3, #25
 8008b66:	d403      	bmi.n	8008b70 <_vprintf+0x354>
 8008b68:	9b05      	ldr	r3, [sp, #20]
 8008b6a:	4598      	cmp	r8, r3
 8008b6c:	db06      	blt.n	8008b7c <_vprintf+0x360>
 8008b6e:	46d0      	mov	r8, sl
 8008b70:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008b74:	e00e      	b.n	8008b94 <_vprintf+0x378>
 8008b76:	f108 0801 	add.w	r8, r8, #1
 8008b7a:	e7e6      	b.n	8008b4a <_vprintf+0x32e>
 8008b7c:	2120      	movs	r1, #32
 8008b7e:	a803      	add	r0, sp, #12
 8008b80:	f7ff fd62 	bl	8008648 <_xputch>
 8008b84:	46d0      	mov	r8, sl
 8008b86:	e7ea      	b.n	8008b5e <_vprintf+0x342>
 8008b88:	a803      	add	r0, sp, #12
 8008b8a:	f7ff fd5d 	bl	8008648 <_xputch>
 8008b8e:	9b04      	ldr	r3, [sp, #16]
 8008b90:	3b01      	subs	r3, #1
 8008b92:	9304      	str	r3, [sp, #16]
 8008b94:	9b03      	ldr	r3, [sp, #12]
 8008b96:	07db      	lsls	r3, r3, #31
 8008b98:	d501      	bpl.n	8008b9e <_vprintf+0x382>
 8008b9a:	9b04      	ldr	r3, [sp, #16]
 8008b9c:	b11b      	cbz	r3, 8008ba6 <_vprintf+0x38a>
 8008b9e:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008ba2:	2900      	cmp	r1, #0
 8008ba4:	d1f0      	bne.n	8008b88 <_vprintf+0x36c>
 8008ba6:	9b05      	ldr	r3, [sp, #20]
 8008ba8:	4543      	cmp	r3, r8
 8008baa:	f77f aee2 	ble.w	8008972 <_vprintf+0x156>
 8008bae:	2120      	movs	r1, #32
 8008bb0:	a803      	add	r0, sp, #12
 8008bb2:	f7ff fd49 	bl	8008648 <_xputch>
 8008bb6:	f108 0801 	add.w	r8, r8, #1
 8008bba:	e7f4      	b.n	8008ba6 <_vprintf+0x38a>
 8008bbc:	9b03      	ldr	r3, [sp, #12]
 8008bbe:	f013 0304 	ands.w	r3, r3, #4
 8008bc2:	bf1d      	ittte	ne
 8008bc4:	3407      	addne	r4, #7
 8008bc6:	f024 0307 	bicne.w	r3, r4, #7
 8008bca:	461c      	movne	r4, r3
 8008bcc:	f854 2b04 	ldreq.w	r2, [r4], #4
 8008bd0:	bf1c      	itt	ne
 8008bd2:	f854 2b08 	ldrne.w	r2, [r4], #8
 8008bd6:	685b      	ldrne	r3, [r3, #4]
 8008bd8:	e6e3      	b.n	80089a2 <_vprintf+0x186>
 8008bda:	9b03      	ldr	r3, [sp, #12]
 8008bdc:	f043 0302 	orr.w	r3, r3, #2
 8008be0:	9303      	str	r3, [sp, #12]
 8008be2:	f854 1b04 	ldr.w	r1, [r4], #4
 8008be6:	e7a8      	b.n	8008b3a <_vprintf+0x31e>

08008be8 <printf>:
 8008be8:	b40f      	push	{r0, r1, r2, r3}
 8008bea:	b507      	push	{r0, r1, r2, lr}
 8008bec:	aa04      	add	r2, sp, #16
 8008bee:	f852 1b04 	ldr.w	r1, [r2], #4
 8008bf2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008bf6:	9201      	str	r2, [sp, #4]
 8008bf8:	f7ff fe10 	bl	800881c <_vprintf>
 8008bfc:	b003      	add	sp, #12
 8008bfe:	f85d eb04 	ldr.w	lr, [sp], #4
 8008c02:	b004      	add	sp, #16
 8008c04:	4770      	bx	lr
	...

08008c08 <snprintf>:
 8008c08:	b40c      	push	{r2, r3}
 8008c0a:	460b      	mov	r3, r1
 8008c0c:	b513      	push	{r0, r1, r4, lr}
 8008c0e:	4c09      	ldr	r4, [pc, #36]	; (8008c34 <snprintf+0x2c>)
 8008c10:	aa04      	add	r2, sp, #16
 8008c12:	f852 1b04 	ldr.w	r1, [r2], #4
 8008c16:	6020      	str	r0, [r4, #0]
 8008c18:	4618      	mov	r0, r3
 8008c1a:	9201      	str	r2, [sp, #4]
 8008c1c:	f7ff fdfe 	bl	800881c <_vprintf>
 8008c20:	2300      	movs	r3, #0
 8008c22:	6822      	ldr	r2, [r4, #0]
 8008c24:	6023      	str	r3, [r4, #0]
 8008c26:	7013      	strb	r3, [r2, #0]
 8008c28:	b002      	add	sp, #8
 8008c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008c2e:	b002      	add	sp, #8
 8008c30:	4770      	bx	lr
 8008c32:	bf00      	nop
 8008c34:	200000e8 	andcs	r0, r0, r8, ror #1

08008c38 <vsnprintf>:
 8008c38:	b538      	push	{r3, r4, r5, lr}
 8008c3a:	4605      	mov	r5, r0
 8008c3c:	4c05      	ldr	r4, [pc, #20]	; (8008c54 <vsnprintf+0x1c>)
 8008c3e:	4608      	mov	r0, r1
 8008c40:	4611      	mov	r1, r2
 8008c42:	461a      	mov	r2, r3
 8008c44:	6025      	str	r5, [r4, #0]
 8008c46:	f7ff fde9 	bl	800881c <_vprintf>
 8008c4a:	2300      	movs	r3, #0
 8008c4c:	6822      	ldr	r2, [r4, #0]
 8008c4e:	6023      	str	r3, [r4, #0]
 8008c50:	7013      	strb	r3, [r2, #0]
 8008c52:	bd38      	pop	{r3, r4, r5, pc}
 8008c54:	200000e8 	andcs	r0, r0, r8, ror #1

08008c58 <strlen>:
 8008c58:	4603      	mov	r3, r0
 8008c5a:	461a      	mov	r2, r3
 8008c5c:	7811      	ldrb	r1, [r2, #0]
 8008c5e:	3301      	adds	r3, #1
 8008c60:	2900      	cmp	r1, #0
 8008c62:	d1fa      	bne.n	8008c5a <strlen+0x2>
 8008c64:	1a10      	subs	r0, r2, r0
 8008c66:	4770      	bx	lr

08008c68 <strncpy.isra.0>:
 8008c68:	3901      	subs	r1, #1
 8008c6a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008c6e:	b92b      	cbnz	r3, 8008c7c <strncpy.isra.0+0x14>
 8008c70:	4402      	add	r2, r0
 8008c72:	4290      	cmp	r0, r2
 8008c74:	d007      	beq.n	8008c86 <strncpy.isra.0+0x1e>
 8008c76:	f800 3b01 	strb.w	r3, [r0], #1
 8008c7a:	e7fa      	b.n	8008c72 <strncpy.isra.0+0xa>
 8008c7c:	3a01      	subs	r2, #1
 8008c7e:	f800 3b01 	strb.w	r3, [r0], #1
 8008c82:	d1f2      	bne.n	8008c6a <strncpy.isra.0+0x2>
 8008c84:	4770      	bx	lr
 8008c86:	4770      	bx	lr

08008c88 <strcpy.isra.0>:
 8008c88:	3801      	subs	r0, #1
 8008c8a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008c8e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8008c92:	2b00      	cmp	r3, #0
 8008c94:	d1f9      	bne.n	8008c8a <strcpy.isra.0+0x2>
 8008c96:	4770      	bx	lr

08008c98 <OscServer::OscServer()>:
 8008c98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008c9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c9e:	4a24      	ldr	r2, [pc, #144]	; (8008d30 <OscServer::OscServer()+0x98>)
 8008ca0:	4604      	mov	r4, r0
 8008ca2:	e9c0 2300 	strd	r2, r3, [r0]
 8008ca6:	2300      	movs	r3, #0
 8008ca8:	2581      	movs	r5, #129	; 0x81
 8008caa:	4a22      	ldr	r2, [pc, #136]	; (8008d34 <OscServer::OscServer()+0x9c>)
 8008cac:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 8008cb0:	6010      	str	r0, [r2, #0]
 8008cb2:	4a21      	ldr	r2, [pc, #132]	; (8008d38 <OscServer::OscServer()+0xa0>)
 8008cb4:	6083      	str	r3, [r0, #8]
 8008cb6:	7303      	strb	r3, [r0, #12]
 8008cb8:	3d01      	subs	r5, #1
 8008cba:	d002      	beq.n	8008cc2 <OscServer::OscServer()+0x2a>
 8008cbc:	f802 3b01 	strb.w	r3, [r2], #1
 8008cc0:	e7fa      	b.n	8008cb8 <OscServer::OscServer()+0x20>
 8008cc2:	2281      	movs	r2, #129	; 0x81
 8008cc4:	491d      	ldr	r1, [pc, #116]	; (8008d3c <OscServer::OscServer()+0xa4>)
 8008cc6:	481c      	ldr	r0, [pc, #112]	; (8008d38 <OscServer::OscServer()+0xa0>)
 8008cc8:	f7ff ffde 	bl	8008c88 <strcpy.isra.0>
 8008ccc:	4b1c      	ldr	r3, [pc, #112]	; (8008d40 <OscServer::OscServer()+0xa8>)
 8008cce:	3a01      	subs	r2, #1
 8008cd0:	d002      	beq.n	8008cd8 <OscServer::OscServer()+0x40>
 8008cd2:	f803 5b01 	strb.w	r5, [r3], #1
 8008cd6:	e7fa      	b.n	8008cce <OscServer::OscServer()+0x36>
 8008cd8:	491a      	ldr	r1, [pc, #104]	; (8008d44 <OscServer::OscServer()+0xac>)
 8008cda:	4819      	ldr	r0, [pc, #100]	; (8008d40 <OscServer::OscServer()+0xa8>)
 8008cdc:	f7ff ffd4 	bl	8008c88 <strcpy.isra.0>
 8008ce0:	2380      	movs	r3, #128	; 0x80
 8008ce2:	4919      	ldr	r1, [pc, #100]	; (8008d48 <OscServer::OscServer()+0xb0>)
 8008ce4:	3b01      	subs	r3, #1
 8008ce6:	d302      	bcc.n	8008cee <OscServer::OscServer()+0x56>
 8008ce8:	f801 2b01 	strb.w	r2, [r1], #1
 8008cec:	e7fa      	b.n	8008ce4 <OscServer::OscServer()+0x4c>
 8008cee:	4917      	ldr	r1, [pc, #92]	; (8008d4c <OscServer::OscServer()+0xb4>)
 8008cf0:	4815      	ldr	r0, [pc, #84]	; (8008d48 <OscServer::OscServer()+0xb0>)
 8008cf2:	f7ff ffc9 	bl	8008c88 <strcpy.isra.0>
 8008cf6:	2380      	movs	r3, #128	; 0x80
 8008cf8:	2100      	movs	r1, #0
 8008cfa:	4a15      	ldr	r2, [pc, #84]	; (8008d50 <OscServer::OscServer()+0xb8>)
 8008cfc:	3b01      	subs	r3, #1
 8008cfe:	d302      	bcc.n	8008d06 <OscServer::OscServer()+0x6e>
 8008d00:	f802 1b01 	strb.w	r1, [r2], #1
 8008d04:	e7fa      	b.n	8008cfc <OscServer::OscServer()+0x64>
 8008d06:	4913      	ldr	r1, [pc, #76]	; (8008d54 <OscServer::OscServer()+0xbc>)
 8008d08:	4811      	ldr	r0, [pc, #68]	; (8008d50 <OscServer::OscServer()+0xb8>)
 8008d0a:	f7ff ffbd 	bl	8008c88 <strcpy.isra.0>
 8008d0e:	4b12      	ldr	r3, [pc, #72]	; (8008d58 <OscServer::OscServer()+0xc0>)
 8008d10:	211f      	movs	r1, #31
 8008d12:	9300      	str	r3, [sp, #0]
 8008d14:	4a11      	ldr	r2, [pc, #68]	; (8008d5c <OscServer::OscServer()+0xc4>)
 8008d16:	4b12      	ldr	r3, [pc, #72]	; (8008d60 <OscServer::OscServer()+0xc8>)
 8008d18:	f104 000d 	add.w	r0, r4, #13
 8008d1c:	f7ff ff74 	bl	8008c08 <snprintf>
 8008d20:	4620      	mov	r0, r4
 8008d22:	4b10      	ldr	r3, [pc, #64]	; (8008d64 <OscServer::OscServer()+0xcc>)
 8008d24:	63a3      	str	r3, [r4, #56]	; 0x38
 8008d26:	4b10      	ldr	r3, [pc, #64]	; (8008d68 <OscServer::OscServer()+0xd0>)
 8008d28:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008d2a:	b003      	add	sp, #12
 8008d2c:	bd30      	pop	{r4, r5, pc}
 8008d2e:	bf00      	nop
 8008d30:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 8008d34:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8008d38:	20000270 	andcs	r0, r0, r0, ror r2
 8008d3c:	08013169 	stmdaeq	r1, {r0, r3, r5, r6, r8, ip, sp}
 8008d40:	20000170 	andcs	r0, r0, r0, ror r1
 8008d44:	0801316f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, ip, sp}
 8008d48:	200000ec 	andcs	r0, r0, ip, ror #1
 8008d4c:	08013177 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, ip, sp}
 8008d50:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8008d54:	0801317a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp}
 8008d58:	0801306d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip, sp}
 8008d5c:	0801318d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, sp}
 8008d60:	08013189 	stmdaeq	r1, {r0, r3, r7, r8, ip, sp}
 8008d64:	080130ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp}
 8008d68:	08013196 	stmdaeq	r1, {r1, r2, r4, r7, r8, ip, sp}

08008d6c <OscServer::Start()>:
 8008d6c:	b530      	push	{r4, r5, lr}
 8008d6e:	4d0e      	ldr	r5, [pc, #56]	; (8008da8 <OscServer::Start()+0x3c>)
 8008d70:	b085      	sub	sp, #20
 8008d72:	4604      	mov	r4, r0
 8008d74:	8801      	ldrh	r1, [r0, #0]
 8008d76:	6828      	ldr	r0, [r5, #0]
 8008d78:	f005 ffc8 	bl	800ed0c <Network::Begin(unsigned short)>
 8008d7c:	682b      	ldr	r3, [r5, #0]
 8008d7e:	6060      	str	r0, [r4, #4]
 8008d80:	691a      	ldr	r2, [r3, #16]
 8008d82:	4601      	mov	r1, r0
 8008d84:	6998      	ldr	r0, [r3, #24]
 8008d86:	2300      	movs	r3, #0
 8008d88:	9301      	str	r3, [sp, #4]
 8008d8a:	4b08      	ldr	r3, [pc, #32]	; (8008dac <OscServer::Start()+0x40>)
 8008d8c:	ea62 0200 	orn	r2, r2, r0
 8008d90:	9300      	str	r3, [sp, #0]
 8008d92:	a803      	add	r0, sp, #12
 8008d94:	8823      	ldrh	r3, [r4, #0]
 8008d96:	f000 fd9d 	bl	80098d4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008d9a:	4b05      	ldr	r3, [pc, #20]	; (8008db0 <OscServer::Start()+0x44>)
 8008d9c:	2102      	movs	r1, #2
 8008d9e:	6818      	ldr	r0, [r3, #0]
 8008da0:	f007 ff68 	bl	8010c74 <LedBlink::SetMode(ledblink::Mode)>
 8008da4:	b005      	add	sp, #20
 8008da6:	bd30      	pop	{r4, r5, pc}
 8008da8:	20009070 	andcs	r9, r0, r0, ror r0
 8008dac:	0801319c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip, sp}
 8008db0:	2000978c 	andcs	r9, r0, ip, lsl #15

08008db4 <OscServer::SetPath(char const*)>:
 8008db4:	b510      	push	{r4, lr}
 8008db6:	780b      	ldrb	r3, [r1, #0]
 8008db8:	2b2f      	cmp	r3, #47	; 0x2f
 8008dba:	d11c      	bne.n	8008df6 <OscServer::SetPath(char const*)+0x42>
 8008dbc:	4c0e      	ldr	r4, [pc, #56]	; (8008df8 <OscServer::SetPath(char const*)+0x44>)
 8008dbe:	227d      	movs	r2, #125	; 0x7d
 8008dc0:	4620      	mov	r0, r4
 8008dc2:	f7ff ff51 	bl	8008c68 <strncpy.isra.0>
 8008dc6:	4620      	mov	r0, r4
 8008dc8:	f7ff ff46 	bl	8008c58 <strlen>
 8008dcc:	3801      	subs	r0, #1
 8008dce:	5c23      	ldrb	r3, [r4, r0]
 8008dd0:	4909      	ldr	r1, [pc, #36]	; (8008df8 <OscServer::SetPath(char const*)+0x44>)
 8008dd2:	2b2f      	cmp	r3, #47	; 0x2f
 8008dd4:	bf04      	itt	eq
 8008dd6:	2300      	moveq	r3, #0
 8008dd8:	5423      	strbeq	r3, [r4, r0]
 8008dda:	4c08      	ldr	r4, [pc, #32]	; (8008dfc <OscServer::SetPath(char const*)+0x48>)
 8008ddc:	4620      	mov	r0, r4
 8008dde:	f7ff ff53 	bl	8008c88 <strcpy.isra.0>
 8008de2:	4620      	mov	r0, r4
 8008de4:	f7ff ff38 	bl	8008c58 <strlen>
 8008de8:	232f      	movs	r3, #47	; 0x2f
 8008dea:	5423      	strb	r3, [r4, r0]
 8008dec:	232a      	movs	r3, #42	; 0x2a
 8008dee:	4404      	add	r4, r0
 8008df0:	7063      	strb	r3, [r4, #1]
 8008df2:	2300      	movs	r3, #0
 8008df4:	70a3      	strb	r3, [r4, #2]
 8008df6:	bd10      	pop	{r4, pc}
 8008df8:	20000270 	andcs	r0, r0, r0, ror r2
 8008dfc:	20000170 	andcs	r0, r0, r0, ror r1

08008e00 <OscServer::SetPathInfo(char const*)>:
 8008e00:	780b      	ldrb	r3, [r1, #0]
 8008e02:	b510      	push	{r4, lr}
 8008e04:	2b2f      	cmp	r3, #47	; 0x2f
 8008e06:	d10d      	bne.n	8008e24 <OscServer::SetPathInfo(char const*)+0x24>
 8008e08:	4c07      	ldr	r4, [pc, #28]	; (8008e28 <OscServer::SetPathInfo(char const*)+0x28>)
 8008e0a:	227f      	movs	r2, #127	; 0x7f
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	f7ff ff2b 	bl	8008c68 <strncpy.isra.0>
 8008e12:	4620      	mov	r0, r4
 8008e14:	f7ff ff20 	bl	8008c58 <strlen>
 8008e18:	3801      	subs	r0, #1
 8008e1a:	5c23      	ldrb	r3, [r4, r0]
 8008e1c:	2b2f      	cmp	r3, #47	; 0x2f
 8008e1e:	bf04      	itt	eq
 8008e20:	2300      	moveq	r3, #0
 8008e22:	5423      	strbeq	r3, [r4, r0]
 8008e24:	bd10      	pop	{r4, pc}
 8008e26:	bf00      	nop
 8008e28:	200000ec 	andcs	r0, r0, ip, ror #1

08008e2c <OscServer::SetPathBlackOut(char const*)>:
 8008e2c:	780b      	ldrb	r3, [r1, #0]
 8008e2e:	b510      	push	{r4, lr}
 8008e30:	2b2f      	cmp	r3, #47	; 0x2f
 8008e32:	d10d      	bne.n	8008e50 <OscServer::SetPathBlackOut(char const*)+0x24>
 8008e34:	4c07      	ldr	r4, [pc, #28]	; (8008e54 <OscServer::SetPathBlackOut(char const*)+0x28>)
 8008e36:	227f      	movs	r2, #127	; 0x7f
 8008e38:	4620      	mov	r0, r4
 8008e3a:	f7ff ff15 	bl	8008c68 <strncpy.isra.0>
 8008e3e:	4620      	mov	r0, r4
 8008e40:	f7ff ff0a 	bl	8008c58 <strlen>
 8008e44:	3801      	subs	r0, #1
 8008e46:	5c23      	ldrb	r3, [r4, r0]
 8008e48:	2b2f      	cmp	r3, #47	; 0x2f
 8008e4a:	bf04      	itt	eq
 8008e4c:	2300      	moveq	r3, #0
 8008e4e:	5423      	strbeq	r3, [r4, r0]
 8008e50:	bd10      	pop	{r4, pc}
 8008e52:	bf00      	nop
 8008e54:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08008e58 <OscServer::GetChannel(char const*)>:
 8008e58:	b538      	push	{r3, r4, r5, lr}
 8008e5a:	480f      	ldr	r0, [pc, #60]	; (8008e98 <OscServer::GetChannel(char const*)+0x40>)
 8008e5c:	460c      	mov	r4, r1
 8008e5e:	f7ff fefb 	bl	8008c58 <strlen>
 8008e62:	1823      	adds	r3, r4, r0
 8008e64:	461c      	mov	r4, r3
 8008e66:	2000      	movs	r0, #0
 8008e68:	210a      	movs	r1, #10
 8008e6a:	3403      	adds	r4, #3
 8008e6c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8008e70:	b14a      	cbz	r2, 8008e86 <OscServer::GetChannel(char const*)+0x2e>
 8008e72:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8008e76:	2d09      	cmp	r5, #9
 8008e78:	d80b      	bhi.n	8008e92 <OscServer::GetChannel(char const*)+0x3a>
 8008e7a:	fb01 2000 	mla	r0, r1, r0, r2
 8008e7e:	429c      	cmp	r4, r3
 8008e80:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8008e84:	d1f2      	bne.n	8008e6c <OscServer::GetChannel(char const*)+0x14>
 8008e86:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8008e8a:	bfc8      	it	gt
 8008e8c:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 8008e90:	bd38      	pop	{r3, r4, r5, pc}
 8008e92:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008e96:	e7fb      	b.n	8008e90 <OscServer::GetChannel(char const*)+0x38>
 8008e98:	20000270 	andcs	r0, r0, r0, ror r2

08008e9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 8008e9c:	2000      	movs	r0, #0
 8008e9e:	b570      	push	{r4, r5, r6, lr}
 8008ea0:	3a01      	subs	r2, #1
 8008ea2:	4c09      	ldr	r4, [pc, #36]	; (8008ec8 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 8008ea4:	b292      	uxth	r2, r2
 8008ea6:	4414      	add	r4, r2
 8008ea8:	4413      	add	r3, r2
 8008eaa:	3901      	subs	r1, #1
 8008eac:	429a      	cmp	r2, r3
 8008eae:	d20a      	bcs.n	8008ec6 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2a>
 8008eb0:	7826      	ldrb	r6, [r4, #0]
 8008eb2:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8008eb6:	3201      	adds	r2, #1
 8008eb8:	42ae      	cmp	r6, r5
 8008eba:	bf1c      	itt	ne
 8008ebc:	7025      	strbne	r5, [r4, #0]
 8008ebe:	2001      	movne	r0, #1
 8008ec0:	3401      	adds	r4, #1
 8008ec2:	b292      	uxth	r2, r2
 8008ec4:	e7f2      	b.n	8008eac <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 8008ec6:	bd70      	pop	{r4, r5, r6, pc}
 8008ec8:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08008ecc <OscServer::Run()>:
 8008ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ece:	4d98      	ldr	r5, [pc, #608]	; (8009130 <OscServer::Run()+0x264>)
 8008ed0:	b097      	sub	sp, #92	; 0x5c
 8008ed2:	4604      	mov	r4, r0
 8008ed4:	4629      	mov	r1, r5
 8008ed6:	7900      	ldrb	r0, [r0, #4]
 8008ed8:	f10d 031a 	add.w	r3, sp, #26
 8008edc:	aa07      	add	r2, sp, #28
 8008ede:	f005 fa1f 	bl	800e320 <udp_recv2>
 8008ee2:	4606      	mov	r6, r0
 8008ee4:	b1a8      	cbz	r0, 8008f12 <OscServer::Run()+0x46>
 8008ee6:	4602      	mov	r2, r0
 8008ee8:	6829      	ldr	r1, [r5, #0]
 8008eea:	a808      	add	r0, sp, #32
 8008eec:	f000 fc56 	bl	800979c <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008ef0:	4990      	ldr	r1, [pc, #576]	; (8009134 <OscServer::Run()+0x268>)
 8008ef2:	6828      	ldr	r0, [r5, #0]
 8008ef4:	f000 fb72 	bl	80095dc <lo_pattern_match>
 8008ef8:	4607      	mov	r7, r0
 8008efa:	2800      	cmp	r0, #0
 8008efc:	d074      	beq.n	8008fe8 <OscServer::Run()+0x11c>
 8008efe:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8008f02:	b133      	cbz	r3, 8008f12 <OscServer::Run()+0x46>
 8008f04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008f06:	2e01      	cmp	r6, #1
 8008f08:	d105      	bne.n	8008f16 <OscServer::Run()+0x4a>
 8008f0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f0c:	781b      	ldrb	r3, [r3, #0]
 8008f0e:	2b62      	cmp	r3, #98	; 0x62
 8008f10:	d03d      	beq.n	8008f8e <OscServer::Run()+0xc2>
 8008f12:	b017      	add	sp, #92	; 0x5c
 8008f14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f16:	2e02      	cmp	r6, #2
 8008f18:	d1fb      	bne.n	8008f12 <OscServer::Run()+0x46>
 8008f1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f1c:	781b      	ldrb	r3, [r3, #0]
 8008f1e:	2b69      	cmp	r3, #105	; 0x69
 8008f20:	d1f7      	bne.n	8008f12 <OscServer::Run()+0x46>
 8008f22:	2100      	movs	r1, #0
 8008f24:	a808      	add	r0, sp, #32
 8008f26:	f000 fc89 	bl	800983c <OscSimpleMessage::GetInt(unsigned int)>
 8008f2a:	b285      	uxth	r5, r0
 8008f2c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008f30:	d2ef      	bcs.n	8008f12 <OscServer::Run()+0x46>
 8008f32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008f34:	2b01      	cmp	r3, #1
 8008f36:	d9ec      	bls.n	8008f12 <OscServer::Run()+0x46>
 8008f38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f3a:	785b      	ldrb	r3, [r3, #1]
 8008f3c:	2b69      	cmp	r3, #105	; 0x69
 8008f3e:	d147      	bne.n	8008fd0 <OscServer::Run()+0x104>
 8008f40:	2101      	movs	r1, #1
 8008f42:	a808      	add	r0, sp, #32
 8008f44:	f000 fc7a 	bl	800983c <OscSimpleMessage::GetInt(unsigned int)>
 8008f48:	3501      	adds	r5, #1
 8008f4a:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8008f4e:	b2ad      	uxth	r5, r5
 8008f50:	2301      	movs	r3, #1
 8008f52:	462a      	mov	r2, r5
 8008f54:	4620      	mov	r0, r4
 8008f56:	a90f      	add	r1, sp, #60	; 0x3c
 8008f58:	f7ff ffa0 	bl	8008e9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008f5c:	b910      	cbnz	r0, 8008f64 <OscServer::Run()+0x98>
 8008f5e:	7ae3      	ldrb	r3, [r4, #11]
 8008f60:	2b00      	cmp	r3, #0
 8008f62:	d0d6      	beq.n	8008f12 <OscServer::Run()+0x46>
 8008f64:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008f66:	7aa1      	ldrb	r1, [r4, #10]
 8008f68:	6803      	ldr	r3, [r0, #0]
 8008f6a:	691e      	ldr	r6, [r3, #16]
 8008f6c:	2900      	cmp	r1, #0
 8008f6e:	f040 80a4 	bne.w	80090ba <OscServer::Run()+0x1ee>
 8008f72:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008f76:	4a70      	ldr	r2, [pc, #448]	; (8009138 <OscServer::Run()+0x26c>)
 8008f78:	47b0      	blx	r6
 8008f7a:	7b21      	ldrb	r1, [r4, #12]
 8008f7c:	2900      	cmp	r1, #0
 8008f7e:	d1c8      	bne.n	8008f12 <OscServer::Run()+0x46>
 8008f80:	2301      	movs	r3, #1
 8008f82:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008f84:	7323      	strb	r3, [r4, #12]
 8008f86:	6803      	ldr	r3, [r0, #0]
 8008f88:	689b      	ldr	r3, [r3, #8]
 8008f8a:	4798      	blx	r3
 8008f8c:	e7c1      	b.n	8008f12 <OscServer::Run()+0x46>
 8008f8e:	2200      	movs	r2, #0
 8008f90:	a908      	add	r1, sp, #32
 8008f92:	a80f      	add	r0, sp, #60	; 0x3c
 8008f94:	f000 fc66 	bl	8009864 <OscSimpleMessage::GetBlob(unsigned int)>
 8008f98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008f9a:	b29d      	uxth	r5, r3
 8008f9c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008fa0:	d8b7      	bhi.n	8008f12 <OscServer::Run()+0x46>
 8008fa2:	462b      	mov	r3, r5
 8008fa4:	4632      	mov	r2, r6
 8008fa6:	4620      	mov	r0, r4
 8008fa8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008faa:	f7ff ff77 	bl	8008e9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008fae:	b910      	cbnz	r0, 8008fb6 <OscServer::Run()+0xea>
 8008fb0:	7ae3      	ldrb	r3, [r4, #11]
 8008fb2:	2b00      	cmp	r3, #0
 8008fb4:	d0ad      	beq.n	8008f12 <OscServer::Run()+0x46>
 8008fb6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008fb8:	6803      	ldr	r3, [r0, #0]
 8008fba:	691e      	ldr	r6, [r3, #16]
 8008fbc:	7aa3      	ldrb	r3, [r4, #10]
 8008fbe:	b113      	cbz	r3, 8008fc6 <OscServer::Run()+0xfa>
 8008fc0:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008fc4:	d179      	bne.n	80090ba <OscServer::Run()+0x1ee>
 8008fc6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008fca:	2100      	movs	r1, #0
 8008fcc:	4a5a      	ldr	r2, [pc, #360]	; (8009138 <OscServer::Run()+0x26c>)
 8008fce:	e7d3      	b.n	8008f78 <OscServer::Run()+0xac>
 8008fd0:	2b66      	cmp	r3, #102	; 0x66
 8008fd2:	d19e      	bne.n	8008f12 <OscServer::Run()+0x46>
 8008fd4:	2101      	movs	r1, #1
 8008fd6:	a808      	add	r0, sp, #32
 8008fd8:	f000 fc1c 	bl	8009814 <OscSimpleMessage::GetFloat(unsigned int)>
 8008fdc:	4957      	ldr	r1, [pc, #348]	; (800913c <OscServer::Run()+0x270>)
 8008fde:	f7fe fdf1 	bl	8007bc4 <__aeabi_fmul>
 8008fe2:	f7fe ff3f 	bl	8007e64 <__aeabi_f2uiz>
 8008fe6:	e7af      	b.n	8008f48 <OscServer::Run()+0x7c>
 8008fe8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008fea:	b9b3      	cbnz	r3, 800901a <OscServer::Run()+0x14e>
 8008fec:	4954      	ldr	r1, [pc, #336]	; (8009140 <OscServer::Run()+0x274>)
 8008fee:	6828      	ldr	r0, [r5, #0]
 8008ff0:	f000 faf4 	bl	80095dc <lo_pattern_match>
 8008ff4:	4606      	mov	r6, r0
 8008ff6:	2800      	cmp	r0, #0
 8008ff8:	d134      	bne.n	8009064 <OscServer::Run()+0x198>
 8008ffa:	4952      	ldr	r1, [pc, #328]	; (8009144 <OscServer::Run()+0x278>)
 8008ffc:	6828      	ldr	r0, [r5, #0]
 8008ffe:	f000 faed 	bl	80095dc <lo_pattern_match>
 8009002:	2800      	cmp	r0, #0
 8009004:	d05f      	beq.n	80090c6 <OscServer::Run()+0x1fa>
 8009006:	4b50      	ldr	r3, [pc, #320]	; (8009148 <OscServer::Run()+0x27c>)
 8009008:	9a07      	ldr	r2, [sp, #28]
 800900a:	9300      	str	r3, [sp, #0]
 800900c:	6861      	ldr	r1, [r4, #4]
 800900e:	8863      	ldrh	r3, [r4, #2]
 8009010:	9601      	str	r6, [sp, #4]
 8009012:	a80f      	add	r0, sp, #60	; 0x3c
 8009014:	f000 fc5e 	bl	80098d4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8009018:	e77b      	b.n	8008f12 <OscServer::Run()+0x46>
 800901a:	494c      	ldr	r1, [pc, #304]	; (800914c <OscServer::Run()+0x280>)
 800901c:	6828      	ldr	r0, [r5, #0]
 800901e:	f000 fadd 	bl	80095dc <lo_pattern_match>
 8009022:	2800      	cmp	r0, #0
 8009024:	d0e2      	beq.n	8008fec <OscServer::Run()+0x120>
 8009026:	4632      	mov	r2, r6
 8009028:	6829      	ldr	r1, [r5, #0]
 800902a:	a80f      	add	r0, sp, #60	; 0x3c
 800902c:	f000 fbb6 	bl	800979c <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8009030:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8009032:	2b00      	cmp	r3, #0
 8009034:	f43f af6d 	beq.w	8008f12 <OscServer::Run()+0x46>
 8009038:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800903a:	781b      	ldrb	r3, [r3, #0]
 800903c:	2b66      	cmp	r3, #102	; 0x66
 800903e:	f47f af68 	bne.w	8008f12 <OscServer::Run()+0x46>
 8009042:	4639      	mov	r1, r7
 8009044:	a80f      	add	r0, sp, #60	; 0x3c
 8009046:	f000 fbe5 	bl	8009814 <OscSimpleMessage::GetFloat(unsigned int)>
 800904a:	2100      	movs	r1, #0
 800904c:	f7fe fa22 	bl	8007494 <__aeabi_fcmpeq>
 8009050:	4603      	mov	r3, r0
 8009052:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009054:	b91b      	cbnz	r3, 800905e <OscServer::Run()+0x192>
 8009056:	6803      	ldr	r3, [r0, #0]
 8009058:	689b      	ldr	r3, [r3, #8]
 800905a:	4798      	blx	r3
 800905c:	e759      	b.n	8008f12 <OscServer::Run()+0x46>
 800905e:	6803      	ldr	r3, [r0, #0]
 8009060:	68db      	ldr	r3, [r3, #12]
 8009062:	e7fa      	b.n	800905a <OscServer::Run()+0x18e>
 8009064:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8009068:	2b00      	cmp	r3, #0
 800906a:	f43f af52 	beq.w	8008f12 <OscServer::Run()+0x46>
 800906e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009070:	2b01      	cmp	r3, #1
 8009072:	f47f af4e 	bne.w	8008f12 <OscServer::Run()+0x46>
 8009076:	6829      	ldr	r1, [r5, #0]
 8009078:	4620      	mov	r0, r4
 800907a:	f7ff feed 	bl	8008e58 <OscServer::GetChannel(char const*)>
 800907e:	b285      	uxth	r5, r0
 8009080:	1e6b      	subs	r3, r5, #1
 8009082:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009086:	f4bf af44 	bcs.w	8008f12 <OscServer::Run()+0x46>
 800908a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800908c:	781b      	ldrb	r3, [r3, #0]
 800908e:	2b69      	cmp	r3, #105	; 0x69
 8009090:	d106      	bne.n	80090a0 <OscServer::Run()+0x1d4>
 8009092:	2100      	movs	r1, #0
 8009094:	a808      	add	r0, sp, #32
 8009096:	f000 fbd1 	bl	800983c <OscSimpleMessage::GetInt(unsigned int)>
 800909a:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 800909e:	e757      	b.n	8008f50 <OscServer::Run()+0x84>
 80090a0:	2b66      	cmp	r3, #102	; 0x66
 80090a2:	f47f af36 	bne.w	8008f12 <OscServer::Run()+0x46>
 80090a6:	2100      	movs	r1, #0
 80090a8:	a808      	add	r0, sp, #32
 80090aa:	f000 fbb3 	bl	8009814 <OscSimpleMessage::GetFloat(unsigned int)>
 80090ae:	4923      	ldr	r1, [pc, #140]	; (800913c <OscServer::Run()+0x270>)
 80090b0:	f7fe fd88 	bl	8007bc4 <__aeabi_fmul>
 80090b4:	f7fe fed6 	bl	8007e64 <__aeabi_f2uiz>
 80090b8:	e7ef      	b.n	800909a <OscServer::Run()+0x1ce>
 80090ba:	8923      	ldrh	r3, [r4, #8]
 80090bc:	42ab      	cmp	r3, r5
 80090be:	bf38      	it	cc
 80090c0:	462b      	movcc	r3, r5
 80090c2:	8123      	strh	r3, [r4, #8]
 80090c4:	e781      	b.n	8008fca <OscServer::Run()+0xfe>
 80090c6:	4922      	ldr	r1, [pc, #136]	; (8009150 <OscServer::Run()+0x284>)
 80090c8:	6828      	ldr	r0, [r5, #0]
 80090ca:	f000 fa87 	bl	80095dc <lo_pattern_match>
 80090ce:	2800      	cmp	r0, #0
 80090d0:	f43f af1f 	beq.w	8008f12 <OscServer::Run()+0x46>
 80090d4:	f104 030d 	add.w	r3, r4, #13
 80090d8:	4d1e      	ldr	r5, [pc, #120]	; (8009154 <OscServer::Run()+0x288>)
 80090da:	9302      	str	r3, [sp, #8]
 80090dc:	4b1e      	ldr	r3, [pc, #120]	; (8009158 <OscServer::Run()+0x28c>)
 80090de:	9a07      	ldr	r2, [sp, #28]
 80090e0:	6861      	ldr	r1, [r4, #4]
 80090e2:	9300      	str	r3, [sp, #0]
 80090e4:	9501      	str	r5, [sp, #4]
 80090e6:	8863      	ldrh	r3, [r4, #2]
 80090e8:	a805      	add	r0, sp, #20
 80090ea:	f000 fc17 	bl	800991c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 80090ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80090f0:	9a07      	ldr	r2, [sp, #28]
 80090f2:	e9cd 5301 	strd	r5, r3, [sp, #4]
 80090f6:	4b19      	ldr	r3, [pc, #100]	; (800915c <OscServer::Run()+0x290>)
 80090f8:	6861      	ldr	r1, [r4, #4]
 80090fa:	9300      	str	r3, [sp, #0]
 80090fc:	a806      	add	r0, sp, #24
 80090fe:	8863      	ldrh	r3, [r4, #2]
 8009100:	f000 fc0c 	bl	800991c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009104:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009106:	9a07      	ldr	r2, [sp, #28]
 8009108:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800910c:	4b14      	ldr	r3, [pc, #80]	; (8009160 <OscServer::Run()+0x294>)
 800910e:	6861      	ldr	r1, [r4, #4]
 8009110:	9300      	str	r3, [sp, #0]
 8009112:	a80f      	add	r0, sp, #60	; 0x3c
 8009114:	8863      	ldrh	r3, [r4, #2]
 8009116:	f000 fc01 	bl	800991c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800911a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800911c:	2800      	cmp	r0, #0
 800911e:	f43f aef8 	beq.w	8008f12 <OscServer::Run()+0x46>
 8009122:	6803      	ldr	r3, [r0, #0]
 8009124:	9a07      	ldr	r2, [sp, #28]
 8009126:	691d      	ldr	r5, [r3, #16]
 8009128:	6861      	ldr	r1, [r4, #4]
 800912a:	8863      	ldrh	r3, [r4, #2]
 800912c:	47a8      	blx	r5
 800912e:	e6f0      	b.n	8008f12 <OscServer::Run()+0x46>
 8009130:	2000016c 	andcs	r0, r0, ip, ror #2
 8009134:	20000270 	andcs	r0, r0, r0, ror r2
 8009138:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800913c:	437f0000 	cmnmi	pc, #0
 8009140:	20000170 	andcs	r0, r0, r0, ror r1
 8009144:	0801319c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip, sp}
 8009148:	080131a2 	stmdaeq	r1, {r1, r5, r7, r8, ip, sp}
 800914c:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009150:	200000ec 	andcs	r0, r0, ip, ror #1
 8009154:	08013194 	stmdaeq	r1, {r2, r4, r7, r8, ip, sp}
 8009158:	080131a8 	stmdaeq	r1, {r3, r5, r7, r8, ip, sp}
 800915c:	080131b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, ip, sp}
 8009160:	080131bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, ip, sp}

08009164 <OscServer::Print()>:
 8009164:	b510      	push	{r4, lr}
 8009166:	4604      	mov	r4, r0
 8009168:	480f      	ldr	r0, [pc, #60]	; (80091a8 <OscServer::Print()+0x44>)
 800916a:	f7ff fd3d 	bl	8008be8 <printf>
 800916e:	8821      	ldrh	r1, [r4, #0]
 8009170:	480e      	ldr	r0, [pc, #56]	; (80091ac <OscServer::Print()+0x48>)
 8009172:	f7ff fd39 	bl	8008be8 <printf>
 8009176:	8861      	ldrh	r1, [r4, #2]
 8009178:	480d      	ldr	r0, [pc, #52]	; (80091b0 <OscServer::Print()+0x4c>)
 800917a:	f7ff fd35 	bl	8008be8 <printf>
 800917e:	4a0d      	ldr	r2, [pc, #52]	; (80091b4 <OscServer::Print()+0x50>)
 8009180:	490d      	ldr	r1, [pc, #52]	; (80091b8 <OscServer::Print()+0x54>)
 8009182:	480e      	ldr	r0, [pc, #56]	; (80091bc <OscServer::Print()+0x58>)
 8009184:	f7ff fd30 	bl	8008be8 <printf>
 8009188:	490d      	ldr	r1, [pc, #52]	; (80091c0 <OscServer::Print()+0x5c>)
 800918a:	480e      	ldr	r0, [pc, #56]	; (80091c4 <OscServer::Print()+0x60>)
 800918c:	f7ff fd2c 	bl	8008be8 <printf>
 8009190:	7aa1      	ldrb	r1, [r4, #10]
 8009192:	4a0d      	ldr	r2, [pc, #52]	; (80091c8 <OscServer::Print()+0x64>)
 8009194:	4b0d      	ldr	r3, [pc, #52]	; (80091cc <OscServer::Print()+0x68>)
 8009196:	480e      	ldr	r0, [pc, #56]	; (80091d0 <OscServer::Print()+0x6c>)
 8009198:	2900      	cmp	r1, #0
 800919a:	bf14      	ite	ne
 800919c:	4611      	movne	r1, r2
 800919e:	4619      	moveq	r1, r3
 80091a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80091a4:	f7ff bd20 	b.w	8008be8 <printf>
 80091a8:	080131ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, ip, sp}
 80091ac:	080131da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, ip, sp}
 80091b0:	080131f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, ip, sp}
 80091b4:	20000170 	andcs	r0, r0, r0, ror r1
 80091b8:	20000270 	andcs	r0, r0, r0, ror r2
 80091bc:	08013212 	stmdaeq	r1, {r1, r4, r9, ip, sp}
 80091c0:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80091c4:	08013234 	stmdaeq	r1, {r2, r4, r5, r9, ip, sp}
 80091c8:	080131c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, ip, sp}
 80091cc:	080131cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, ip, sp}
 80091d0:	08013252 	stmdaeq	r1, {r1, r4, r6, r9, ip, sp}

080091d4 <strncpy.constprop.0.isra.0>:
 80091d4:	227f      	movs	r2, #127	; 0x7f
 80091d6:	1e4b      	subs	r3, r1, #1
 80091d8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80091dc:	b909      	cbnz	r1, 80091e2 <strncpy.constprop.0.isra.0+0xe>
 80091de:	f007 bee5 	b.w	8010fac <memset>
 80091e2:	3a01      	subs	r2, #1
 80091e4:	f800 1b01 	strb.w	r1, [r0], #1
 80091e8:	d1f6      	bne.n	80091d8 <strncpy.constprop.0.isra.0+0x4>
 80091ea:	4770      	bx	lr

080091ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 80091ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091ee:	88c5      	ldrh	r5, [r0, #6]
 80091f0:	8886      	ldrh	r6, [r0, #4]
 80091f2:	42b5      	cmp	r5, r6
 80091f4:	d216      	bcs.n	8009224 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 80091f6:	4604      	mov	r4, r0
 80091f8:	6800      	ldr	r0, [r0, #0]
 80091fa:	4428      	add	r0, r5
 80091fc:	1b75      	subs	r5, r6, r5
 80091fe:	7a26      	ldrb	r6, [r4, #8]
 8009200:	b923      	cbnz	r3, 800920c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009202:	b926      	cbnz	r6, 800920e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009204:	9200      	str	r2, [sp, #0]
 8009206:	460b      	mov	r3, r1
 8009208:	4a09      	ldr	r2, [pc, #36]	; (8009230 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800920a:	e003      	b.n	8009214 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800920c:	b166      	cbz	r6, 8009228 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800920e:	460b      	mov	r3, r1
 8009210:	9200      	str	r2, [sp, #0]
 8009212:	4a08      	ldr	r2, [pc, #32]	; (8009234 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009214:	4629      	mov	r1, r5
 8009216:	f7ff fcf7 	bl	8008c08 <snprintf>
 800921a:	4285      	cmp	r5, r0
 800921c:	bfa2      	ittt	ge
 800921e:	88e3      	ldrhge	r3, [r4, #6]
 8009220:	181b      	addge	r3, r3, r0
 8009222:	80e3      	strhge	r3, [r4, #6]
 8009224:	b002      	add	sp, #8
 8009226:	bd70      	pop	{r4, r5, r6, pc}
 8009228:	9200      	str	r2, [sp, #0]
 800922a:	460b      	mov	r3, r1
 800922c:	4a02      	ldr	r2, [pc, #8]	; (8009238 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800922e:	e7f1      	b.n	8009214 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009230:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 8009234:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 8009238:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

0800923c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800923c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800923e:	88c5      	ldrh	r5, [r0, #6]
 8009240:	8886      	ldrh	r6, [r0, #4]
 8009242:	42b5      	cmp	r5, r6
 8009244:	d216      	bcs.n	8009274 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 8009246:	4604      	mov	r4, r0
 8009248:	6800      	ldr	r0, [r0, #0]
 800924a:	4428      	add	r0, r5
 800924c:	1b75      	subs	r5, r6, r5
 800924e:	7a26      	ldrb	r6, [r4, #8]
 8009250:	b923      	cbnz	r3, 800925c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 8009252:	b926      	cbnz	r6, 800925e <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 8009254:	9200      	str	r2, [sp, #0]
 8009256:	460b      	mov	r3, r1
 8009258:	4a09      	ldr	r2, [pc, #36]	; (8009280 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800925a:	e003      	b.n	8009264 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800925c:	b166      	cbz	r6, 8009278 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800925e:	460b      	mov	r3, r1
 8009260:	9200      	str	r2, [sp, #0]
 8009262:	4a08      	ldr	r2, [pc, #32]	; (8009284 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009264:	4629      	mov	r1, r5
 8009266:	f7ff fccf 	bl	8008c08 <snprintf>
 800926a:	4285      	cmp	r5, r0
 800926c:	bfa2      	ittt	ge
 800926e:	88e3      	ldrhge	r3, [r4, #6]
 8009270:	181b      	addge	r3, r3, r0
 8009272:	80e3      	strhge	r3, [r4, #6]
 8009274:	b002      	add	sp, #8
 8009276:	bd70      	pop	{r4, r5, r6, pc}
 8009278:	9200      	str	r2, [sp, #0]
 800927a:	460b      	mov	r3, r1
 800927c:	4a02      	ldr	r2, [pc, #8]	; (8009288 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800927e:	e7f1      	b.n	8009264 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 8009280:	080132cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, ip, sp}
 8009284:	080132c1 	stmdaeq	r1, {r0, r6, r7, r9, ip, sp}
 8009288:	080132cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, ip, sp}

0800928c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800928c:	b510      	push	{r4, lr}
 800928e:	4604      	mov	r4, r0
 8009290:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009294:	f840 1b04 	str.w	r1, [r0], #4
 8009298:	2100      	movs	r1, #0
 800929a:	f007 fe87 	bl	8010fac <memset>
 800929e:	4b02      	ldr	r3, [pc, #8]	; (80092a8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 80092a0:	4620      	mov	r0, r4
 80092a2:	60a3      	str	r3, [r4, #8]
 80092a4:	bd10      	pop	{r4, pc}
 80092a6:	bf00      	nop
 80092a8:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

080092ac <OSCServerParams::Load()>:
 80092ac:	b508      	push	{r3, lr}
 80092ae:	2300      	movs	r3, #0
 80092b0:	4601      	mov	r1, r0
 80092b2:	6043      	str	r3, [r0, #4]
 80092b4:	6800      	ldr	r0, [r0, #0]
 80092b6:	b120      	cbz	r0, 80092c2 <OSCServerParams::Load()+0x16>
 80092b8:	6803      	ldr	r3, [r0, #0]
 80092ba:	3104      	adds	r1, #4
 80092bc:	68db      	ldr	r3, [r3, #12]
 80092be:	4798      	blx	r3
 80092c0:	2001      	movs	r0, #1
 80092c2:	bd08      	pop	{r3, pc}

080092c4 <OSCServerParams::Load(char const*, unsigned int)>:
 80092c4:	6803      	ldr	r3, [r0, #0]
 80092c6:	b1d3      	cbz	r3, 80092fe <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 80092c8:	2300      	movs	r3, #0
 80092ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092cc:	460d      	mov	r5, r1
 80092ce:	4616      	mov	r6, r2
 80092d0:	4604      	mov	r4, r0
 80092d2:	6043      	str	r3, [r0, #4]
 80092d4:	4602      	mov	r2, r0
 80092d6:	490a      	ldr	r1, [pc, #40]	; (8009300 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 80092d8:	4668      	mov	r0, sp
 80092da:	f006 fffb 	bl	80102d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80092de:	4632      	mov	r2, r6
 80092e0:	4629      	mov	r1, r5
 80092e2:	4668      	mov	r0, sp
 80092e4:	f006 fffa 	bl	80102dc <ReadConfigFile::Read(char const*, unsigned int)>
 80092e8:	4621      	mov	r1, r4
 80092ea:	f851 0b04 	ldr.w	r0, [r1], #4
 80092ee:	6803      	ldr	r3, [r0, #0]
 80092f0:	689b      	ldr	r3, [r3, #8]
 80092f2:	4798      	blx	r3
 80092f4:	4668      	mov	r0, sp
 80092f6:	f006 fff0 	bl	80102da <ReadConfigFile::~ReadConfigFile()>
 80092fa:	b002      	add	sp, #8
 80092fc:	bd70      	pop	{r4, r5, r6, pc}
 80092fe:	4770      	bx	lr
 8009300:	080093fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, pc}

08009304 <OSCServerParams::callbackFunction(char const*)>:
 8009304:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009306:	460d      	mov	r5, r1
 8009308:	4604      	mov	r4, r0
 800930a:	4937      	ldr	r1, [pc, #220]	; (80093e8 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800930c:	4628      	mov	r0, r5
 800930e:	f10d 0202 	add.w	r2, sp, #2
 8009312:	f007 f8d3 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009316:	b980      	cbnz	r0, 800933a <OSCServerParams::callbackFunction(char const*)+0x36>
 8009318:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800931c:	6863      	ldr	r3, [r4, #4]
 800931e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009322:	bf33      	iteet	cc
 8009324:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 8009328:	8122      	strhcs	r2, [r4, #8]
 800932a:	f043 0301 	orrcs.w	r3, r3, #1
 800932e:	8122      	strhcc	r2, [r4, #8]
 8009330:	bf38      	it	cc
 8009332:	f023 0301 	biccc.w	r3, r3, #1
 8009336:	6063      	str	r3, [r4, #4]
 8009338:	e028      	b.n	800938c <OSCServerParams::callbackFunction(char const*)+0x88>
 800933a:	4628      	mov	r0, r5
 800933c:	492b      	ldr	r1, [pc, #172]	; (80093ec <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800933e:	f10d 0202 	add.w	r2, sp, #2
 8009342:	f007 f8bb 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009346:	b978      	cbnz	r0, 8009368 <OSCServerParams::callbackFunction(char const*)+0x64>
 8009348:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800934c:	6863      	ldr	r3, [r4, #4]
 800934e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009352:	bf33      	iteet	cc
 8009354:	f242 3228 	movwcc	r2, #9000	; 0x2328
 8009358:	8162      	strhcs	r2, [r4, #10]
 800935a:	f043 0302 	orrcs.w	r3, r3, #2
 800935e:	8162      	strhcc	r2, [r4, #10]
 8009360:	bf38      	it	cc
 8009362:	f023 0302 	biccc.w	r3, r3, #2
 8009366:	e7e6      	b.n	8009336 <OSCServerParams::callbackFunction(char const*)+0x32>
 8009368:	4628      	mov	r0, r5
 800936a:	4921      	ldr	r1, [pc, #132]	; (80093f0 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800936c:	f10d 0201 	add.w	r2, sp, #1
 8009370:	f007 f8eb 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009374:	b978      	cbnz	r0, 8009396 <OSCServerParams::callbackFunction(char const*)+0x92>
 8009376:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800937a:	6863      	ldr	r3, [r4, #4]
 800937c:	b142      	cbz	r2, 8009390 <OSCServerParams::callbackFunction(char const*)+0x8c>
 800937e:	f043 0308 	orr.w	r3, r3, #8
 8009382:	3a00      	subs	r2, #0
 8009384:	bf18      	it	ne
 8009386:	2201      	movne	r2, #1
 8009388:	6063      	str	r3, [r4, #4]
 800938a:	7362      	strb	r2, [r4, #13]
 800938c:	b002      	add	sp, #8
 800938e:	bd70      	pop	{r4, r5, r6, pc}
 8009390:	f023 0308 	bic.w	r3, r3, #8
 8009394:	e7f5      	b.n	8009382 <OSCServerParams::callbackFunction(char const*)+0x7e>
 8009396:	267f      	movs	r6, #127	; 0x7f
 8009398:	4628      	mov	r0, r5
 800939a:	4916      	ldr	r1, [pc, #88]	; (80093f4 <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800939c:	ab01      	add	r3, sp, #4
 800939e:	f104 020e 	add.w	r2, r4, #14
 80093a2:	9601      	str	r6, [sp, #4]
 80093a4:	f006 ffce 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80093a8:	b918      	cbnz	r0, 80093b2 <OSCServerParams::callbackFunction(char const*)+0xae>
 80093aa:	6863      	ldr	r3, [r4, #4]
 80093ac:	f043 0304 	orr.w	r3, r3, #4
 80093b0:	e7c1      	b.n	8009336 <OSCServerParams::callbackFunction(char const*)+0x32>
 80093b2:	4628      	mov	r0, r5
 80093b4:	4910      	ldr	r1, [pc, #64]	; (80093f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 80093b6:	ab01      	add	r3, sp, #4
 80093b8:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 80093bc:	9601      	str	r6, [sp, #4]
 80093be:	f006 ffc1 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80093c2:	b918      	cbnz	r0, 80093cc <OSCServerParams::callbackFunction(char const*)+0xc8>
 80093c4:	6863      	ldr	r3, [r4, #4]
 80093c6:	f043 0320 	orr.w	r3, r3, #32
 80093ca:	e7b4      	b.n	8009336 <OSCServerParams::callbackFunction(char const*)+0x32>
 80093cc:	4628      	mov	r0, r5
 80093ce:	490a      	ldr	r1, [pc, #40]	; (80093f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 80093d0:	ab01      	add	r3, sp, #4
 80093d2:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 80093d6:	9601      	str	r6, [sp, #4]
 80093d8:	f006 ffb4 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80093dc:	2800      	cmp	r0, #0
 80093de:	d1d5      	bne.n	800938c <OSCServerParams::callbackFunction(char const*)+0x88>
 80093e0:	6863      	ldr	r3, [r4, #4]
 80093e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80093e6:	e7a6      	b.n	8009336 <OSCServerParams::callbackFunction(char const*)+0x32>
 80093e8:	0801330e 	stmdaeq	r1, {r1, r2, r3, r8, r9, ip, sp}
 80093ec:	0801331c 	stmdaeq	r1, {r2, r3, r4, r8, r9, ip, sp}
 80093f0:	080132d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, ip, sp}
 80093f4:	080132f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, ip, sp}
 80093f8:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}

080093fc <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 80093fc:	f7ff bf82 	b.w	8009304 <OSCServerParams::callbackFunction(char const*)>

08009400 <OSCServerParams::Set(OscServer*)>:
 8009400:	b538      	push	{r3, r4, r5, lr}
 8009402:	460d      	mov	r5, r1
 8009404:	6843      	ldr	r3, [r0, #4]
 8009406:	4604      	mov	r4, r0
 8009408:	07d9      	lsls	r1, r3, #31
 800940a:	bf44      	itt	mi
 800940c:	8902      	ldrhmi	r2, [r0, #8]
 800940e:	802a      	strhmi	r2, [r5, #0]
 8009410:	079a      	lsls	r2, r3, #30
 8009412:	bf44      	itt	mi
 8009414:	8942      	ldrhmi	r2, [r0, #10]
 8009416:	806a      	strhmi	r2, [r5, #2]
 8009418:	0758      	lsls	r0, r3, #29
 800941a:	d504      	bpl.n	8009426 <OSCServerParams::Set(OscServer*)+0x26>
 800941c:	4628      	mov	r0, r5
 800941e:	f104 010e 	add.w	r1, r4, #14
 8009422:	f7ff fcc7 	bl	8008db4 <OscServer::SetPath(char const*)>
 8009426:	6863      	ldr	r3, [r4, #4]
 8009428:	0699      	lsls	r1, r3, #26
 800942a:	d504      	bpl.n	8009436 <OSCServerParams::Set(OscServer*)+0x36>
 800942c:	4628      	mov	r0, r5
 800942e:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 8009432:	f7ff fce5 	bl	8008e00 <OscServer::SetPathInfo(char const*)>
 8009436:	6863      	ldr	r3, [r4, #4]
 8009438:	065a      	lsls	r2, r3, #25
 800943a:	d504      	bpl.n	8009446 <OSCServerParams::Set(OscServer*)+0x46>
 800943c:	4628      	mov	r0, r5
 800943e:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 8009442:	f7ff fcf3 	bl	8008e2c <OscServer::SetPathBlackOut(char const*)>
 8009446:	6863      	ldr	r3, [r4, #4]
 8009448:	071b      	lsls	r3, r3, #28
 800944a:	bf44      	itt	mi
 800944c:	7b63      	ldrbmi	r3, [r4, #13]
 800944e:	72ab      	strbmi	r3, [r5, #10]
 8009450:	bd38      	pop	{r3, r4, r5, pc}
	...

08009454 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 8009454:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009456:	4604      	mov	r4, r0
 8009458:	4615      	mov	r5, r2
 800945a:	461e      	mov	r6, r3
 800945c:	b087      	sub	sp, #28
 800945e:	3004      	adds	r0, #4
 8009460:	2900      	cmp	r1, #0
 8009462:	d060      	beq.n	8009526 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 8009464:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009468:	f007 fd89 	bl	8010f7e <memmove>
 800946c:	4633      	mov	r3, r6
 800946e:	462a      	mov	r2, r5
 8009470:	4946      	ldr	r1, [pc, #280]	; (800958c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 8009472:	a803      	add	r0, sp, #12
 8009474:	f006 fe8e 	bl	8010194 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009478:	6863      	ldr	r3, [r4, #4]
 800947a:	f104 070e 	add.w	r7, r4, #14
 800947e:	075e      	lsls	r6, r3, #29
 8009480:	d403      	bmi.n	800948a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 8009482:	4638      	mov	r0, r7
 8009484:	4942      	ldr	r1, [pc, #264]	; (8009590 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 8009486:	f7ff fea5 	bl	80091d4 <strncpy.constprop.0.isra.0>
 800948a:	6863      	ldr	r3, [r4, #4]
 800948c:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 8009490:	069d      	lsls	r5, r3, #26
 8009492:	d403      	bmi.n	800949c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 8009494:	4630      	mov	r0, r6
 8009496:	493f      	ldr	r1, [pc, #252]	; (8009594 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 8009498:	f7ff fe9c 	bl	80091d4 <strncpy.constprop.0.isra.0>
 800949c:	6863      	ldr	r3, [r4, #4]
 800949e:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 80094a2:	0658      	lsls	r0, r3, #25
 80094a4:	d403      	bmi.n	80094ae <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 80094a6:	4628      	mov	r0, r5
 80094a8:	493b      	ldr	r1, [pc, #236]	; (8009598 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 80094aa:	f7ff fe93 	bl	80091d4 <strncpy.constprop.0.isra.0>
 80094ae:	6863      	ldr	r3, [r4, #4]
 80094b0:	8922      	ldrh	r2, [r4, #8]
 80094b2:	493a      	ldr	r1, [pc, #232]	; (800959c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 80094b4:	f003 0301 	and.w	r3, r3, #1
 80094b8:	a803      	add	r0, sp, #12
 80094ba:	f7ff fe97 	bl	80091ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80094be:	6863      	ldr	r3, [r4, #4]
 80094c0:	8962      	ldrh	r2, [r4, #10]
 80094c2:	4937      	ldr	r1, [pc, #220]	; (80095a0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 80094c4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80094c8:	a803      	add	r0, sp, #12
 80094ca:	f7ff fe8f 	bl	80091ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80094ce:	6863      	ldr	r3, [r4, #4]
 80094d0:	463a      	mov	r2, r7
 80094d2:	4934      	ldr	r1, [pc, #208]	; (80095a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 80094d4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80094d8:	a803      	add	r0, sp, #12
 80094da:	f7ff feaf 	bl	800923c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80094de:	6863      	ldr	r3, [r4, #4]
 80094e0:	4632      	mov	r2, r6
 80094e2:	4931      	ldr	r1, [pc, #196]	; (80095a8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 80094e4:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80094e8:	a803      	add	r0, sp, #12
 80094ea:	f7ff fea7 	bl	800923c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80094ee:	6863      	ldr	r3, [r4, #4]
 80094f0:	462a      	mov	r2, r5
 80094f2:	492e      	ldr	r1, [pc, #184]	; (80095ac <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 80094f4:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80094f8:	a803      	add	r0, sp, #12
 80094fa:	f7ff fe9f 	bl	800923c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80094fe:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009502:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009506:	42a9      	cmp	r1, r5
 8009508:	d222      	bcs.n	8009550 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 800950a:	9803      	ldr	r0, [sp, #12]
 800950c:	1a6d      	subs	r5, r5, r1
 800950e:	4408      	add	r0, r1
 8009510:	6861      	ldr	r1, [r4, #4]
 8009512:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009516:	0709      	lsls	r1, r1, #28
 8009518:	7b63      	ldrb	r3, [r4, #13]
 800951a:	d40b      	bmi.n	8009534 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800951c:	b95a      	cbnz	r2, 8009536 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800951e:	9300      	str	r3, [sp, #0]
 8009520:	4a23      	ldr	r2, [pc, #140]	; (80095b0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 8009522:	4b24      	ldr	r3, [pc, #144]	; (80095b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009524:	e00a      	b.n	800953c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8009526:	6823      	ldr	r3, [r4, #0]
 8009528:	4601      	mov	r1, r0
 800952a:	681a      	ldr	r2, [r3, #0]
 800952c:	4618      	mov	r0, r3
 800952e:	68d2      	ldr	r2, [r2, #12]
 8009530:	4790      	blx	r2
 8009532:	e79b      	b.n	800946c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 8009534:	b32a      	cbz	r2, 8009582 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x12e>
 8009536:	9300      	str	r3, [sp, #0]
 8009538:	4a1f      	ldr	r2, [pc, #124]	; (80095b8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800953a:	4b1e      	ldr	r3, [pc, #120]	; (80095b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800953c:	4629      	mov	r1, r5
 800953e:	f7ff fb63 	bl	8008c08 <snprintf>
 8009542:	4285      	cmp	r5, r0
 8009544:	bfa2      	ittt	ge
 8009546:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800954a:	18c0      	addge	r0, r0, r3
 800954c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009550:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009554:	b17b      	cbz	r3, 8009576 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x122>
 8009556:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800955a:	9b03      	ldr	r3, [sp, #12]
 800955c:	4413      	add	r3, r2
 800955e:	227d      	movs	r2, #125	; 0x7d
 8009560:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009564:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009568:	9903      	ldr	r1, [sp, #12]
 800956a:	54ca      	strb	r2, [r1, r3]
 800956c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009570:	3301      	adds	r3, #1
 8009572:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009576:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800957a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800957c:	601a      	str	r2, [r3, #0]
 800957e:	b007      	add	sp, #28
 8009580:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009582:	9300      	str	r3, [sp, #0]
 8009584:	4a0d      	ldr	r2, [pc, #52]	; (80095bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 8009586:	4b0b      	ldr	r3, [pc, #44]	; (80095b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009588:	e7d8      	b.n	800953c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 800958a:	bf00      	nop
 800958c:	080132fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, ip, sp}
 8009590:	20000270 	andcs	r0, r0, r0, ror r2
 8009594:	200000ec 	andcs	r0, r0, ip, ror #1
 8009598:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800959c:	0801330e 	stmdaeq	r1, {r1, r2, r3, r8, r9, ip, sp}
 80095a0:	0801331c 	stmdaeq	r1, {r2, r3, r4, r8, r9, ip, sp}
 80095a4:	080132f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, ip, sp}
 80095a8:	08013304 	stmdaeq	r1, {r2, r8, r9, ip, sp}
 80095ac:	080132e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, ip, sp}
 80095b0:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 80095b4:	080132d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, ip, sp}
 80095b8:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 80095bc:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

080095c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 80095c0:	b513      	push	{r0, r1, r4, lr}
 80095c2:	6804      	ldr	r4, [r0, #0]
 80095c4:	b914      	cbnz	r4, 80095cc <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80095c6:	601c      	str	r4, [r3, #0]
 80095c8:	b002      	add	sp, #8
 80095ca:	bd10      	pop	{r4, pc}
 80095cc:	9300      	str	r3, [sp, #0]
 80095ce:	4613      	mov	r3, r2
 80095d0:	460a      	mov	r2, r1
 80095d2:	2100      	movs	r1, #0
 80095d4:	f7ff ff3e 	bl	8009454 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 80095d8:	e7f6      	b.n	80095c8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

080095da <OSCServerParams::Dump()>:
 80095da:	4770      	bx	lr

080095dc <lo_pattern_match>:
 80095dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80095de:	4605      	mov	r5, r0
 80095e0:	460b      	mov	r3, r1
 80095e2:	7819      	ldrb	r1, [r3, #0]
 80095e4:	782a      	ldrb	r2, [r5, #0]
 80095e6:	b919      	cbnz	r1, 80095f0 <lo_pattern_match+0x14>
 80095e8:	fab2 f082 	clz	r0, r2
 80095ec:	0940      	lsrs	r0, r0, #5
 80095ee:	e0a9      	b.n	8009744 <lo_pattern_match+0x168>
 80095f0:	b90a      	cbnz	r2, 80095f6 <lo_pattern_match+0x1a>
 80095f2:	292a      	cmp	r1, #42	; 0x2a
 80095f4:	d132      	bne.n	800965c <lo_pattern_match+0x80>
 80095f6:	295b      	cmp	r1, #91	; 0x5b
 80095f8:	f103 0401 	add.w	r4, r3, #1
 80095fc:	d03c      	beq.n	8009678 <lo_pattern_match+0x9c>
 80095fe:	d806      	bhi.n	800960e <lo_pattern_match+0x32>
 8009600:	292a      	cmp	r1, #42	; 0x2a
 8009602:	d012      	beq.n	800962a <lo_pattern_match+0x4e>
 8009604:	293f      	cmp	r1, #63	; 0x3f
 8009606:	d032      	beq.n	800966e <lo_pattern_match+0x92>
 8009608:	4291      	cmp	r1, r2
 800960a:	d032      	beq.n	8009672 <lo_pattern_match+0x96>
 800960c:	e026      	b.n	800965c <lo_pattern_match+0x80>
 800960e:	297b      	cmp	r1, #123	; 0x7b
 8009610:	d1fa      	bne.n	8009608 <lo_pattern_match+0x2c>
 8009612:	7820      	ldrb	r0, [r4, #0]
 8009614:	4626      	mov	r6, r4
 8009616:	1c67      	adds	r7, r4, #1
 8009618:	2800      	cmp	r0, #0
 800961a:	f000 8093 	beq.w	8009744 <lo_pattern_match+0x168>
 800961e:	287d      	cmp	r0, #125	; 0x7d
 8009620:	d16b      	bne.n	80096fa <lo_pattern_match+0x11e>
 8009622:	1c9c      	adds	r4, r3, #2
 8009624:	4628      	mov	r0, r5
 8009626:	785b      	ldrb	r3, [r3, #1]
 8009628:	e077      	b.n	800971a <lo_pattern_match+0x13e>
 800962a:	7823      	ldrb	r3, [r4, #0]
 800962c:	4626      	mov	r6, r4
 800962e:	2b2a      	cmp	r3, #42	; 0x2a
 8009630:	f104 0401 	add.w	r4, r4, #1
 8009634:	d0f9      	beq.n	800962a <lo_pattern_match+0x4e>
 8009636:	b1c3      	cbz	r3, 800966a <lo_pattern_match+0x8e>
 8009638:	2b3f      	cmp	r3, #63	; 0x3f
 800963a:	d00b      	beq.n	8009654 <lo_pattern_match+0x78>
 800963c:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8009640:	2a5b      	cmp	r2, #91	; 0x5b
 8009642:	d007      	beq.n	8009654 <lo_pattern_match+0x78>
 8009644:	462a      	mov	r2, r5
 8009646:	4615      	mov	r5, r2
 8009648:	f812 0b01 	ldrb.w	r0, [r2], #1
 800964c:	2800      	cmp	r0, #0
 800964e:	d079      	beq.n	8009744 <lo_pattern_match+0x168>
 8009650:	4283      	cmp	r3, r0
 8009652:	d1f8      	bne.n	8009646 <lo_pattern_match+0x6a>
 8009654:	4628      	mov	r0, r5
 8009656:	7803      	ldrb	r3, [r0, #0]
 8009658:	3501      	adds	r5, #1
 800965a:	b90b      	cbnz	r3, 8009660 <lo_pattern_match+0x84>
 800965c:	2000      	movs	r0, #0
 800965e:	e071      	b.n	8009744 <lo_pattern_match+0x168>
 8009660:	4631      	mov	r1, r6
 8009662:	f7ff ffbb 	bl	80095dc <lo_pattern_match>
 8009666:	2800      	cmp	r0, #0
 8009668:	d0f4      	beq.n	8009654 <lo_pattern_match+0x78>
 800966a:	2001      	movs	r0, #1
 800966c:	e06a      	b.n	8009744 <lo_pattern_match+0x168>
 800966e:	2a00      	cmp	r2, #0
 8009670:	d0f4      	beq.n	800965c <lo_pattern_match+0x80>
 8009672:	4623      	mov	r3, r4
 8009674:	3501      	adds	r5, #1
 8009676:	e7b4      	b.n	80095e2 <lo_pattern_match+0x6>
 8009678:	7859      	ldrb	r1, [r3, #1]
 800967a:	2921      	cmp	r1, #33	; 0x21
 800967c:	bf06      	itte	eq
 800967e:	1c9c      	addeq	r4, r3, #2
 8009680:	2701      	moveq	r7, #1
 8009682:	2700      	movne	r7, #0
 8009684:	4621      	mov	r1, r4
 8009686:	1c8e      	adds	r6, r1, #2
 8009688:	f816 3c02 	ldrb.w	r3, [r6, #-2]
 800968c:	4634      	mov	r4, r6
 800968e:	1e71      	subs	r1, r6, #1
 8009690:	b913      	cbnz	r3, 8009698 <lo_pattern_match+0xbc>
 8009692:	460c      	mov	r4, r1
 8009694:	4618      	mov	r0, r3
 8009696:	e018      	b.n	80096ca <lo_pattern_match+0xee>
 8009698:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800969c:	2800      	cmp	r0, #0
 800969e:	d051      	beq.n	8009744 <lo_pattern_match+0x168>
 80096a0:	282d      	cmp	r0, #45	; 0x2d
 80096a2:	d11b      	bne.n	80096dc <lo_pattern_match+0x100>
 80096a4:	7820      	ldrb	r0, [r4, #0]
 80096a6:	2800      	cmp	r0, #0
 80096a8:	d04c      	beq.n	8009744 <lo_pattern_match+0x168>
 80096aa:	285d      	cmp	r0, #93	; 0x5d
 80096ac:	d009      	beq.n	80096c2 <lo_pattern_match+0xe6>
 80096ae:	429a      	cmp	r2, r3
 80096b0:	d005      	beq.n	80096be <lo_pattern_match+0xe2>
 80096b2:	4290      	cmp	r0, r2
 80096b4:	d003      	beq.n	80096be <lo_pattern_match+0xe2>
 80096b6:	429a      	cmp	r2, r3
 80096b8:	d91d      	bls.n	80096f6 <lo_pattern_match+0x11a>
 80096ba:	4290      	cmp	r0, r2
 80096bc:	d91b      	bls.n	80096f6 <lo_pattern_match+0x11a>
 80096be:	2001      	movs	r0, #1
 80096c0:	e003      	b.n	80096ca <lo_pattern_match+0xee>
 80096c2:	429a      	cmp	r2, r3
 80096c4:	bf34      	ite	cc
 80096c6:	2000      	movcc	r0, #0
 80096c8:	2001      	movcs	r0, #1
 80096ca:	4287      	cmp	r7, r0
 80096cc:	d0c6      	beq.n	800965c <lo_pattern_match+0x80>
 80096ce:	f814 0b01 	ldrb.w	r0, [r4], #1
 80096d2:	2800      	cmp	r0, #0
 80096d4:	d036      	beq.n	8009744 <lo_pattern_match+0x168>
 80096d6:	285d      	cmp	r0, #93	; 0x5d
 80096d8:	d1f9      	bne.n	80096ce <lo_pattern_match+0xf2>
 80096da:	e7ca      	b.n	8009672 <lo_pattern_match+0x96>
 80096dc:	285d      	cmp	r0, #93	; 0x5d
 80096de:	d104      	bne.n	80096ea <lo_pattern_match+0x10e>
 80096e0:	1ad3      	subs	r3, r2, r3
 80096e2:	4258      	negs	r0, r3
 80096e4:	460c      	mov	r4, r1
 80096e6:	4158      	adcs	r0, r3
 80096e8:	e7ef      	b.n	80096ca <lo_pattern_match+0xee>
 80096ea:	4290      	cmp	r0, r2
 80096ec:	d001      	beq.n	80096f2 <lo_pattern_match+0x116>
 80096ee:	429a      	cmp	r2, r3
 80096f0:	d1c9      	bne.n	8009686 <lo_pattern_match+0xaa>
 80096f2:	460c      	mov	r4, r1
 80096f4:	e7e3      	b.n	80096be <lo_pattern_match+0xe2>
 80096f6:	3602      	adds	r6, #2
 80096f8:	e7c6      	b.n	8009688 <lo_pattern_match+0xac>
 80096fa:	463c      	mov	r4, r7
 80096fc:	e789      	b.n	8009612 <lo_pattern_match+0x36>
 80096fe:	2b2c      	cmp	r3, #44	; 0x2c
 8009700:	d10f      	bne.n	8009722 <lo_pattern_match+0x146>
 8009702:	4639      	mov	r1, r7
 8009704:	f7ff ff6a 	bl	80095dc <lo_pattern_match>
 8009708:	2800      	cmp	r0, #0
 800970a:	d1ae      	bne.n	800966a <lo_pattern_match+0x8e>
 800970c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8009710:	b1c3      	cbz	r3, 8009744 <lo_pattern_match+0x168>
 8009712:	462a      	mov	r2, r5
 8009714:	4610      	mov	r0, r2
 8009716:	f814 3b01 	ldrb.w	r3, [r4], #1
 800971a:	2b00      	cmp	r3, #0
 800971c:	d1ef      	bne.n	80096fe <lo_pattern_match+0x122>
 800971e:	4605      	mov	r5, r0
 8009720:	e7a7      	b.n	8009672 <lo_pattern_match+0x96>
 8009722:	2b7d      	cmp	r3, #125	; 0x7d
 8009724:	7802      	ldrb	r2, [r0, #0]
 8009726:	d104      	bne.n	8009732 <lo_pattern_match+0x156>
 8009728:	7823      	ldrb	r3, [r4, #0]
 800972a:	4313      	orrs	r3, r2
 800972c:	d09d      	beq.n	800966a <lo_pattern_match+0x8e>
 800972e:	1e45      	subs	r5, r0, #1
 8009730:	e79f      	b.n	8009672 <lo_pattern_match+0x96>
 8009732:	4293      	cmp	r3, r2
 8009734:	d107      	bne.n	8009746 <lo_pattern_match+0x16a>
 8009736:	1c42      	adds	r2, r0, #1
 8009738:	7840      	ldrb	r0, [r0, #1]
 800973a:	2800      	cmp	r0, #0
 800973c:	d1ea      	bne.n	8009714 <lo_pattern_match+0x138>
 800973e:	7873      	ldrb	r3, [r6, #1]
 8009740:	2b00      	cmp	r3, #0
 8009742:	d0e7      	beq.n	8009714 <lo_pattern_match+0x138>
 8009744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009746:	4623      	mov	r3, r4
 8009748:	781a      	ldrb	r2, [r3, #0]
 800974a:	461c      	mov	r4, r3
 800974c:	2a2c      	cmp	r2, #44	; 0x2c
 800974e:	f103 0301 	add.w	r3, r3, #1
 8009752:	d004      	beq.n	800975e <lo_pattern_match+0x182>
 8009754:	2a7d      	cmp	r2, #125	; 0x7d
 8009756:	d081      	beq.n	800965c <lo_pattern_match+0x80>
 8009758:	2a00      	cmp	r2, #0
 800975a:	d1f5      	bne.n	8009748 <lo_pattern_match+0x16c>
 800975c:	e7d9      	b.n	8009712 <lo_pattern_match+0x136>
 800975e:	461c      	mov	r4, r3
 8009760:	e7d7      	b.n	8009712 <lo_pattern_match+0x136>

08009762 <osc::string_validate(void*, unsigned int)>:
 8009762:	4602      	mov	r2, r0
 8009764:	2300      	movs	r3, #0
 8009766:	428b      	cmp	r3, r1
 8009768:	d005      	beq.n	8009776 <osc::string_validate(void*, unsigned int)+0x14>
 800976a:	5cd0      	ldrb	r0, [r2, r3]
 800976c:	b930      	cbnz	r0, 800977c <osc::string_validate(void*, unsigned int)+0x1a>
 800976e:	f023 0003 	bic.w	r0, r3, #3
 8009772:	3004      	adds	r0, #4
 8009774:	d104      	bne.n	8009780 <osc::string_validate(void*, unsigned int)+0x1e>
 8009776:	f06f 0001 	mvn.w	r0, #1
 800977a:	4770      	bx	lr
 800977c:	3301      	adds	r3, #1
 800977e:	e7f2      	b.n	8009766 <osc::string_validate(void*, unsigned int)+0x4>
 8009780:	4281      	cmp	r1, r0
 8009782:	d305      	bcc.n	8009790 <osc::string_validate(void*, unsigned int)+0x2e>
 8009784:	4283      	cmp	r3, r0
 8009786:	d208      	bcs.n	800979a <osc::string_validate(void*, unsigned int)+0x38>
 8009788:	5cd1      	ldrb	r1, [r2, r3]
 800978a:	b921      	cbnz	r1, 8009796 <osc::string_validate(void*, unsigned int)+0x34>
 800978c:	3301      	adds	r3, #1
 800978e:	e7f9      	b.n	8009784 <osc::string_validate(void*, unsigned int)+0x22>
 8009790:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009794:	4770      	bx	lr
 8009796:	f06f 0002 	mvn.w	r0, #2
 800979a:	4770      	bx	lr

0800979c <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800979c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097a0:	2300      	movs	r3, #0
 80097a2:	460d      	mov	r5, r1
 80097a4:	e9c0 1200 	strd	r1, r2, [r0]
 80097a8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80097ac:	7203      	strb	r3, [r0, #8]
 80097ae:	6183      	str	r3, [r0, #24]
 80097b0:	4604      	mov	r4, r0
 80097b2:	4611      	mov	r1, r2
 80097b4:	4628      	mov	r0, r5
 80097b6:	4617      	mov	r7, r2
 80097b8:	f7ff ffd3 	bl	8009762 <osc::string_validate(void*, unsigned int)>
 80097bc:	f1b0 0800 	subs.w	r8, r0, #0
 80097c0:	db25      	blt.n	800980e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80097c2:	eb05 0608 	add.w	r6, r5, r8
 80097c6:	4630      	mov	r0, r6
 80097c8:	60e6      	str	r6, [r4, #12]
 80097ca:	eba7 0108 	sub.w	r1, r7, r8
 80097ce:	f7ff ffc8 	bl	8009762 <osc::string_validate(void*, unsigned int)>
 80097d2:	2800      	cmp	r0, #0
 80097d4:	db1b      	blt.n	800980e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80097d6:	f815 3008 	ldrb.w	r3, [r5, r8]
 80097da:	2b2c      	cmp	r3, #44	; 0x2c
 80097dc:	d117      	bne.n	800980e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80097de:	7873      	ldrb	r3, [r6, #1]
 80097e0:	2b73      	cmp	r3, #115	; 0x73
 80097e2:	d001      	beq.n	80097e8 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 80097e4:	2b62      	cmp	r3, #98	; 0x62
 80097e6:	d101      	bne.n	80097ec <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 80097e8:	78b3      	ldrb	r3, [r6, #2]
 80097ea:	b983      	cbnz	r3, 800980e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80097ec:	3601      	adds	r6, #1
 80097ee:	4632      	mov	r2, r6
 80097f0:	60e6      	str	r6, [r4, #12]
 80097f2:	4613      	mov	r3, r2
 80097f4:	7819      	ldrb	r1, [r3, #0]
 80097f6:	3201      	adds	r2, #1
 80097f8:	2900      	cmp	r1, #0
 80097fa:	d1fa      	bne.n	80097f2 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 80097fc:	1b9e      	subs	r6, r3, r6
 80097fe:	2301      	movs	r3, #1
 8009800:	4440      	add	r0, r8
 8009802:	4405      	add	r5, r0
 8009804:	1a38      	subs	r0, r7, r0
 8009806:	6126      	str	r6, [r4, #16]
 8009808:	6165      	str	r5, [r4, #20]
 800980a:	61a0      	str	r0, [r4, #24]
 800980c:	7223      	strb	r3, [r4, #8]
 800980e:	4620      	mov	r0, r4
 8009810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009814 <OscSimpleMessage::GetFloat(unsigned int)>:
 8009814:	6983      	ldr	r3, [r0, #24]
 8009816:	1c4a      	adds	r2, r1, #1
 8009818:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800981c:	b510      	push	{r4, lr}
 800981e:	ea4f 0482 	mov.w	r4, r2, lsl #2
 8009822:	d309      	bcc.n	8009838 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 8009824:	68c3      	ldr	r3, [r0, #12]
 8009826:	5c5b      	ldrb	r3, [r3, r1]
 8009828:	2b66      	cmp	r3, #102	; 0x66
 800982a:	d105      	bne.n	8009838 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800982c:	6943      	ldr	r3, [r0, #20]
 800982e:	4423      	add	r3, r4
 8009830:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8009834:	ba00      	rev	r0, r0
 8009836:	bd10      	pop	{r4, pc}
 8009838:	2000      	movs	r0, #0
 800983a:	e7fc      	b.n	8009836 <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800983c <OscSimpleMessage::GetInt(unsigned int)>:
 800983c:	6983      	ldr	r3, [r0, #24]
 800983e:	1c4a      	adds	r2, r1, #1
 8009840:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8009844:	b510      	push	{r4, lr}
 8009846:	ea4f 0482 	mov.w	r4, r2, lsl #2
 800984a:	d309      	bcc.n	8009860 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800984c:	68c3      	ldr	r3, [r0, #12]
 800984e:	5c5b      	ldrb	r3, [r3, r1]
 8009850:	2b69      	cmp	r3, #105	; 0x69
 8009852:	d105      	bne.n	8009860 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 8009854:	6943      	ldr	r3, [r0, #20]
 8009856:	4423      	add	r3, r4
 8009858:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800985c:	ba00      	rev	r0, r0
 800985e:	bd10      	pop	{r4, pc}
 8009860:	2000      	movs	r0, #0
 8009862:	e7fc      	b.n	800985e <OscSimpleMessage::GetInt(unsigned int)+0x22>

08009864 <OscSimpleMessage::GetBlob(unsigned int)>:
 8009864:	b510      	push	{r4, lr}
 8009866:	68cb      	ldr	r3, [r1, #12]
 8009868:	781b      	ldrb	r3, [r3, #0]
 800986a:	2b62      	cmp	r3, #98	; 0x62
 800986c:	d10a      	bne.n	8009884 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800986e:	694a      	ldr	r2, [r1, #20]
 8009870:	6989      	ldr	r1, [r1, #24]
 8009872:	6813      	ldr	r3, [r2, #0]
 8009874:	ba1b      	rev	r3, r3
 8009876:	1d1c      	adds	r4, r3, #4
 8009878:	428c      	cmp	r4, r1
 800987a:	d803      	bhi.n	8009884 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800987c:	3204      	adds	r2, #4
 800987e:	6002      	str	r2, [r0, #0]
 8009880:	6043      	str	r3, [r0, #4]
 8009882:	bd10      	pop	{r4, pc}
 8009884:	2300      	movs	r3, #0
 8009886:	6003      	str	r3, [r0, #0]
 8009888:	e7fa      	b.n	8009880 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800988a <osc::string_size(char const*)>:
 800988a:	4602      	mov	r2, r0
 800988c:	4613      	mov	r3, r2
 800988e:	7819      	ldrb	r1, [r3, #0]
 8009890:	3201      	adds	r2, #1
 8009892:	2900      	cmp	r1, #0
 8009894:	d1fa      	bne.n	800988c <osc::string_size(char const*)+0x2>
 8009896:	1a18      	subs	r0, r3, r0
 8009898:	f020 0003 	bic.w	r0, r0, #3
 800989c:	3004      	adds	r0, #4
 800989e:	4770      	bx	lr

080098a0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 80098a0:	b570      	push	{r4, r5, r6, lr}
 80098a2:	2400      	movs	r4, #0
 80098a4:	480a      	ldr	r0, [pc, #40]	; (80098d0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 80098a6:	1f16      	subs	r6, r2, #4
 80098a8:	1985      	adds	r5, r0, r6
 80098aa:	5584      	strb	r4, [r0, r6]
 80098ac:	706c      	strb	r4, [r5, #1]
 80098ae:	70ac      	strb	r4, [r5, #2]
 80098b0:	70ec      	strb	r4, [r5, #3]
 80098b2:	4604      	mov	r4, r0
 80098b4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80098b8:	f800 5b01 	strb.w	r5, [r0], #1
 80098bc:	2d00      	cmp	r5, #0
 80098be:	d1f9      	bne.n	80098b4 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 80098c0:	212c      	movs	r1, #44	; 0x2c
 80098c2:	54a1      	strb	r1, [r4, r2]
 80098c4:	4422      	add	r2, r4
 80098c6:	7053      	strb	r3, [r2, #1]
 80098c8:	7095      	strb	r5, [r2, #2]
 80098ca:	70d5      	strb	r5, [r2, #3]
 80098cc:	bd70      	pop	{r4, r5, r6, pc}
 80098ce:	bf00      	nop
 80098d0:	200004f4 	strdcs	r0, [r0], -r4

080098d4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 80098d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80098d8:	4605      	mov	r5, r0
 80098da:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 80098de:	460e      	mov	r6, r1
 80098e0:	4617      	mov	r7, r2
 80098e2:	4698      	mov	r8, r3
 80098e4:	f1ba 0f00 	cmp.w	sl, #0
 80098e8:	d112      	bne.n	8009910 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 80098ea:	4648      	mov	r0, r9
 80098ec:	f7ff ffcd 	bl	800988a <osc::string_size(char const*)>
 80098f0:	4604      	mov	r4, r0
 80098f2:	4602      	mov	r2, r0
 80098f4:	4653      	mov	r3, sl
 80098f6:	4649      	mov	r1, r9
 80098f8:	4628      	mov	r0, r5
 80098fa:	3404      	adds	r4, #4
 80098fc:	f7ff ffd0 	bl	80098a0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8009900:	463b      	mov	r3, r7
 8009902:	4905      	ldr	r1, [pc, #20]	; (8009918 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 8009904:	f8cd 8000 	str.w	r8, [sp]
 8009908:	b2a2      	uxth	r2, r4
 800990a:	b2f0      	uxtb	r0, r6
 800990c:	f004 fd2e 	bl	800e36c <udp_send>
 8009910:	4628      	mov	r0, r5
 8009912:	b002      	add	sp, #8
 8009914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009918:	200004f4 	strdcs	r0, [r0], -r4

0800991c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800991c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009920:	b085      	sub	sp, #20
 8009922:	460f      	mov	r7, r1
 8009924:	4699      	mov	r9, r3
 8009926:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800992a:	4606      	mov	r6, r0
 800992c:	4690      	mov	r8, r2
 800992e:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8009932:	b35b      	cbz	r3, 800998c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 8009934:	781b      	ldrb	r3, [r3, #0]
 8009936:	2b73      	cmp	r3, #115	; 0x73
 8009938:	d128      	bne.n	800998c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800993a:	4608      	mov	r0, r1
 800993c:	9303      	str	r3, [sp, #12]
 800993e:	f7ff ffa4 	bl	800988a <osc::string_size(char const*)>
 8009942:	4604      	mov	r4, r0
 8009944:	4650      	mov	r0, sl
 8009946:	f7ff ffa0 	bl	800988a <osc::string_size(char const*)>
 800994a:	4622      	mov	r2, r4
 800994c:	1825      	adds	r5, r4, r0
 800994e:	9b03      	ldr	r3, [sp, #12]
 8009950:	990e      	ldr	r1, [sp, #56]	; 0x38
 8009952:	4630      	mov	r0, r6
 8009954:	f7ff ffa4 	bl	80098a0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8009958:	2200      	movs	r2, #0
 800995a:	4b0e      	ldr	r3, [pc, #56]	; (8009994 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800995c:	3403      	adds	r4, #3
 800995e:	1959      	adds	r1, r3, r5
 8009960:	555a      	strb	r2, [r3, r5]
 8009962:	f105 0b04 	add.w	fp, r5, #4
 8009966:	704a      	strb	r2, [r1, #1]
 8009968:	708a      	strb	r2, [r1, #2]
 800996a:	70ca      	strb	r2, [r1, #3]
 800996c:	4423      	add	r3, r4
 800996e:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8009972:	f803 2f01 	strb.w	r2, [r3, #1]!
 8009976:	2a00      	cmp	r2, #0
 8009978:	d1f9      	bne.n	800996e <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800997a:	4643      	mov	r3, r8
 800997c:	4905      	ldr	r1, [pc, #20]	; (8009994 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800997e:	f8cd 9000 	str.w	r9, [sp]
 8009982:	fa1f f28b 	uxth.w	r2, fp
 8009986:	b2f8      	uxtb	r0, r7
 8009988:	f004 fcf0 	bl	800e36c <udp_send>
 800998c:	4630      	mov	r0, r6
 800998e:	b005      	add	sp, #20
 8009990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009994:	200004f4 	strdcs	r0, [r0], -r4

08009998 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>:
 8009998:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800999c:	4698      	mov	r8, r3
 800999e:	e9dd 930a 	ldrd	r9, r3, [sp, #40]	; 0x28
 80099a2:	4605      	mov	r5, r0
 80099a4:	460e      	mov	r6, r1
 80099a6:	4617      	mov	r7, r2
 80099a8:	b1db      	cbz	r3, 80099e2 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 80099aa:	f893 a000 	ldrb.w	sl, [r3]
 80099ae:	f1ba 0f69 	cmp.w	sl, #105	; 0x69
 80099b2:	d116      	bne.n	80099e2 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 80099b4:	4648      	mov	r0, r9
 80099b6:	f7ff ff68 	bl	800988a <osc::string_size(char const*)>
 80099ba:	4604      	mov	r4, r0
 80099bc:	4602      	mov	r2, r0
 80099be:	4653      	mov	r3, sl
 80099c0:	4649      	mov	r1, r9
 80099c2:	4628      	mov	r0, r5
 80099c4:	f7ff ff6c 	bl	80098a0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 80099c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80099ca:	4908      	ldr	r1, [pc, #32]	; (80099ec <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x54>)
 80099cc:	ba1b      	rev	r3, r3
 80099ce:	190a      	adds	r2, r1, r4
 80099d0:	3408      	adds	r4, #8
 80099d2:	6053      	str	r3, [r2, #4]
 80099d4:	b2f0      	uxtb	r0, r6
 80099d6:	463b      	mov	r3, r7
 80099d8:	f8cd 8000 	str.w	r8, [sp]
 80099dc:	b2a2      	uxth	r2, r4
 80099de:	f004 fcc5 	bl	800e36c <udp_send>
 80099e2:	4628      	mov	r0, r5
 80099e4:	b002      	add	sp, #8
 80099e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80099ea:	bf00      	nop
 80099ec:	200004f4 	strdcs	r0, [r0], -r4

080099f0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 80099f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099f4:	460e      	mov	r6, r1
 80099f6:	4611      	mov	r1, r2
 80099f8:	4604      	mov	r4, r0
 80099fa:	4690      	mov	r8, r2
 80099fc:	461d      	mov	r5, r3
 80099fe:	9f06      	ldr	r7, [sp, #24]
 8009a00:	f000 fd64 	bl	800a4cc <PixelConfiguration::Validate(unsigned int&)>
 8009a04:	2e01      	cmp	r6, #1
 8009a06:	d009      	beq.n	8009a1c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 8009a08:	7ce2      	ldrb	r2, [r4, #19]
 8009a0a:	b93a      	cbnz	r2, 8009a1c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 8009a0c:	2e04      	cmp	r6, #4
 8009a0e:	d13f      	bne.n	8009a90 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa0>
 8009a10:	2303      	movs	r3, #3
 8009a12:	6023      	str	r3, [r4, #0]
 8009a14:	4641      	mov	r1, r8
 8009a16:	4620      	mov	r0, r4
 8009a18:	f000 fd58 	bl	800a4cc <PixelConfiguration::Validate(unsigned int&)>
 8009a1c:	6823      	ldr	r3, [r4, #0]
 8009a1e:	2b07      	cmp	r3, #7
 8009a20:	bf0d      	iteet	eq
 8009a22:	f44f 7380 	moveq.w	r3, #256	; 0x100
 8009a26:	f44f 73aa 	movne.w	r3, #340	; 0x154
 8009a2a:	22aa      	movne	r2, #170	; 0xaa
 8009a2c:	2180      	moveq	r1, #128	; 0x80
 8009a2e:	bf15      	itete	ne
 8009a30:	e9c5 2300 	strdne	r2, r3, [r5]
 8009a34:	e9c5 1300 	strdeq	r1, r3, [r5]
 8009a38:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 8009a3c:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 8009a40:	69a2      	ldr	r2, [r4, #24]
 8009a42:	60ab      	str	r3, [r5, #8]
 8009a44:	6863      	ldr	r3, [r4, #4]
 8009a46:	b10a      	cbz	r2, 8009a4c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 8009a48:	429a      	cmp	r2, r3
 8009a4a:	d900      	bls.n	8009a4e <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 8009a4c:	61a3      	str	r3, [r4, #24]
 8009a4e:	69a2      	ldr	r2, [r4, #24]
 8009a50:	fbb3 f3f2 	udiv	r3, r3, r2
 8009a54:	603b      	str	r3, [r7, #0]
 8009a56:	6963      	ldr	r3, [r4, #20]
 8009a58:	682a      	ldr	r2, [r5, #0]
 8009a5a:	42b3      	cmp	r3, r6
 8009a5c:	bf94      	ite	ls
 8009a5e:	6163      	strls	r3, [r4, #20]
 8009a60:	6166      	strhi	r6, [r4, #20]
 8009a62:	1c53      	adds	r3, r2, #1
 8009a64:	683a      	ldr	r2, [r7, #0]
 8009a66:	2e01      	cmp	r6, #1
 8009a68:	fbb2 f2f3 	udiv	r2, r2, r3
 8009a6c:	9b07      	ldr	r3, [sp, #28]
 8009a6e:	f102 0201 	add.w	r2, r2, #1
 8009a72:	601a      	str	r2, [r3, #0]
 8009a74:	bf09      	itett	eq
 8009a76:	682a      	ldreq	r2, [r5, #0]
 8009a78:	6963      	ldrne	r3, [r4, #20]
 8009a7a:	1c53      	addeq	r3, r2, #1
 8009a7c:	683a      	ldreq	r2, [r7, #0]
 8009a7e:	bf16      	itet	ne
 8009a80:	435a      	mulne	r2, r3
 8009a82:	fbb2 f2f3 	udiveq	r2, r2, r3
 8009a86:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 8009a8a:	60ea      	str	r2, [r5, #12]
 8009a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a90:	6823      	ldr	r3, [r4, #0]
 8009a92:	2b00      	cmp	r3, #0
 8009a94:	d0be      	beq.n	8009a14 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 8009a96:	3b0b      	subs	r3, #11
 8009a98:	2b01      	cmp	r3, #1
 8009a9a:	bf88      	it	hi
 8009a9c:	6022      	strhi	r2, [r4, #0]
 8009a9e:	e7b9      	b.n	8009a14 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

08009aa0 <PixelDmxConfiguration::Dump()>:
 8009aa0:	4770      	bx	lr

08009aa2 <WS28xxDmx::GetDmxStartAddress()>:
 8009aa2:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 8009aa4:	4770      	bx	lr

08009aa6 <WS28xxDmx::GetDmxFootprint()>:
 8009aa6:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 8009aa8:	4770      	bx	lr
	...

08009aac <WS28xxDmx::~WS28xxDmx()>:
 8009aac:	b538      	push	{r3, r4, r5, lr}
 8009aae:	4b06      	ldr	r3, [pc, #24]	; (8009ac8 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 8009ab0:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8009ab2:	4604      	mov	r4, r0
 8009ab4:	6003      	str	r3, [r0, #0]
 8009ab6:	b12d      	cbz	r5, 8009ac4 <WS28xxDmx::~WS28xxDmx()+0x18>
 8009ab8:	4628      	mov	r0, r5
 8009aba:	f001 fef5 	bl	800b8a8 <WS28xx::~WS28xx()>
 8009abe:	4628      	mov	r0, r5
 8009ac0:	f007 f99a 	bl	8010df8 <operator delete(void*)>
 8009ac4:	4620      	mov	r0, r4
 8009ac6:	bd38      	pop	{r3, r4, r5, pc}
 8009ac8:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}

08009acc <WS28xxDmx::~WS28xxDmx()>:
 8009acc:	b510      	push	{r4, lr}
 8009ace:	4604      	mov	r4, r0
 8009ad0:	f7ff ffec 	bl	8009aac <WS28xxDmx::~WS28xxDmx()>
 8009ad4:	4620      	mov	r0, r4
 8009ad6:	f007 f98f 	bl	8010df8 <operator delete(void*)>
 8009ada:	4620      	mov	r0, r4
 8009adc:	bd10      	pop	{r4, pc}

08009ade <WS28xxDmx::Blackout(bool)>:
 8009ade:	b538      	push	{r3, r4, r5, lr}
 8009ae0:	4605      	mov	r5, r0
 8009ae2:	460c      	mov	r4, r1
 8009ae4:	f880 1041 	strb.w	r1, [r0, #65]	; 0x41
 8009ae8:	f008 fb30 	bl	801214c <gd32_spi_dma_tx_is_active()>
 8009aec:	2800      	cmp	r0, #0
 8009aee:	d1fb      	bne.n	8009ae8 <WS28xxDmx::Blackout(bool)+0xa>
 8009af0:	6b68      	ldr	r0, [r5, #52]	; 0x34
 8009af2:	b11c      	cbz	r4, 8009afc <WS28xxDmx::Blackout(bool)+0x1e>
 8009af4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009af8:	f001 bf50 	b.w	800b99c <WS28xx::Blackout()>
 8009afc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009b00:	f001 bf30 	b.w	800b964 <WS28xx::Update()>

08009b04 <WS28xxDmx::Start(unsigned int)>:
 8009b04:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8009b08:	b93b      	cbnz	r3, 8009b1a <WS28xxDmx::Start(unsigned int)+0x16>
 8009b0a:	2301      	movs	r3, #1
 8009b0c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8009b10:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8009b12:	b110      	cbz	r0, 8009b1a <WS28xxDmx::Start(unsigned int)+0x16>
 8009b14:	6803      	ldr	r3, [r0, #0]
 8009b16:	689b      	ldr	r3, [r3, #8]
 8009b18:	4718      	bx	r3
 8009b1a:	4770      	bx	lr

08009b1c <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 8009b1c:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8009b1e:	b508      	push	{r3, lr}
 8009b20:	428a      	cmp	r2, r1
 8009b22:	d101      	bne.n	8009b28 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>
 8009b24:	2001      	movs	r0, #1
 8009b26:	bd08      	pop	{r3, pc}
 8009b28:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8009b2a:	440a      	add	r2, r1
 8009b2c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009b30:	dc0b      	bgt.n	8009b4a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 8009b32:	1e4a      	subs	r2, r1, #1
 8009b34:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009b38:	d207      	bcs.n	8009b4a <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 8009b3a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8009b3c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8009b3e:	2800      	cmp	r0, #0
 8009b40:	d0f0      	beq.n	8009b24 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 8009b42:	6803      	ldr	r3, [r0, #0]
 8009b44:	69db      	ldr	r3, [r3, #28]
 8009b46:	4798      	blx	r3
 8009b48:	e7ec      	b.n	8009b24 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 8009b4a:	2000      	movs	r0, #0
 8009b4c:	e7eb      	b.n	8009b26 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>

08009b4e <WS28xxDmx::Stop(unsigned int)>:
 8009b4e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8009b52:	b510      	push	{r4, lr}
 8009b54:	4604      	mov	r4, r0
 8009b56:	b16b      	cbz	r3, 8009b74 <WS28xxDmx::Stop(unsigned int)+0x26>
 8009b58:	2300      	movs	r3, #0
 8009b5a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8009b5e:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009b60:	b108      	cbz	r0, 8009b66 <WS28xxDmx::Stop(unsigned int)+0x18>
 8009b62:	f001 ff1b 	bl	800b99c <WS28xx::Blackout()>
 8009b66:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009b68:	b120      	cbz	r0, 8009b74 <WS28xxDmx::Stop(unsigned int)+0x26>
 8009b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b6e:	6803      	ldr	r3, [r0, #0]
 8009b70:	68db      	ldr	r3, [r3, #12]
 8009b72:	4718      	bx	r3
 8009b74:	bd10      	pop	{r4, pc}

08009b76 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8009b76:	4603      	mov	r3, r0
 8009b78:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 8009b7a:	4288      	cmp	r0, r1
 8009b7c:	f04f 0000 	mov.w	r0, #0
 8009b80:	d30f      	bcc.n	8009ba2 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2c>
 8009b82:	7090      	strb	r0, [r2, #2]
 8009b84:	6a1b      	ldr	r3, [r3, #32]
 8009b86:	fbb1 f0f3 	udiv	r0, r1, r3
 8009b8a:	fb03 1110 	mls	r1, r3, r0, r1
 8009b8e:	2903      	cmp	r1, #3
 8009b90:	d80e      	bhi.n	8009bb0 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3a>
 8009b92:	e8df f001 	tbb	[pc, r1]
 8009b96:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 8009b9a:	f240 2305 	movw	r3, #517	; 0x205
 8009b9e:	2001      	movs	r0, #1
 8009ba0:	8013      	strh	r3, [r2, #0]
 8009ba2:	4770      	bx	lr
 8009ba4:	f240 2306 	movw	r3, #518	; 0x206
 8009ba8:	e7f9      	b.n	8009b9e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 8009baa:	f240 2307 	movw	r3, #519	; 0x207
 8009bae:	e7f6      	b.n	8009b9e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 8009bb0:	f240 2312 	movw	r3, #530	; 0x212
 8009bb4:	e7f3      	b.n	8009b9e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>

08009bb6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 8009bb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bba:	b085      	sub	sp, #20
 8009bbc:	4606      	mov	r6, r0
 8009bbe:	4690      	mov	r8, r2
 8009bc0:	4699      	mov	r9, r3
 8009bc2:	9103      	str	r1, [sp, #12]
 8009bc4:	f008 fac2 	bl	801214c <gd32_spi_dma_tx_is_active()>
 8009bc8:	2800      	cmp	r0, #0
 8009bca:	d170      	bne.n	8009cae <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 8009bcc:	9b03      	ldr	r3, [sp, #12]
 8009bce:	6972      	ldr	r2, [r6, #20]
 8009bd0:	f003 0103 	and.w	r1, r3, #3
 8009bd4:	6a33      	ldr	r3, [r6, #32]
 8009bd6:	2902      	cmp	r1, #2
 8009bd8:	fbb9 f7f3 	udiv	r7, r9, r3
 8009bdc:	d02b      	beq.n	8009c36 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x80>
 8009bde:	2903      	cmp	r1, #3
 8009be0:	d030      	beq.n	8009c44 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 8009be2:	2901      	cmp	r1, #1
 8009be4:	6875      	ldr	r5, [r6, #4]
 8009be6:	d027      	beq.n	8009c38 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 8009be8:	4297      	cmp	r7, r2
 8009bea:	bf28      	it	cs
 8009bec:	4617      	movcs	r7, r2
 8009bee:	4295      	cmp	r5, r2
 8009bf0:	d92a      	bls.n	8009c48 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 8009bf2:	4605      	mov	r5, r0
 8009bf4:	8df4      	ldrh	r4, [r6, #46]	; 0x2e
 8009bf6:	3c01      	subs	r4, #1
 8009bf8:	2b03      	cmp	r3, #3
 8009bfa:	4444      	add	r4, r8
 8009bfc:	d12c      	bne.n	8009c58 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa2>
 8009bfe:	42af      	cmp	r7, r5
 8009c00:	d948      	bls.n	8009c94 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 8009c02:	eba4 0308 	sub.w	r3, r4, r8
 8009c06:	4599      	cmp	r9, r3
 8009c08:	d944      	bls.n	8009c94 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 8009c0a:	f04f 0a00 	mov.w	sl, #0
 8009c0e:	69b3      	ldr	r3, [r6, #24]
 8009c10:	f894 f000 	pld	[r4]
 8009c14:	fb03 fb05 	mul.w	fp, r3, r5
 8009c18:	69b3      	ldr	r3, [r6, #24]
 8009c1a:	4553      	cmp	r3, sl
 8009c1c:	d917      	bls.n	8009c4e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x98>
 8009c1e:	78a2      	ldrb	r2, [r4, #2]
 8009c20:	7863      	ldrb	r3, [r4, #1]
 8009c22:	9200      	str	r2, [sp, #0]
 8009c24:	eb0b 010a 	add.w	r1, fp, sl
 8009c28:	7822      	ldrb	r2, [r4, #0]
 8009c2a:	6b70      	ldr	r0, [r6, #52]	; 0x34
 8009c2c:	f001 f85a 	bl	800ace4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8009c30:	f10a 0a01 	add.w	sl, sl, #1
 8009c34:	e7f0      	b.n	8009c18 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x62>
 8009c36:	68b5      	ldr	r5, [r6, #8]
 8009c38:	442f      	add	r7, r5
 8009c3a:	4297      	cmp	r7, r2
 8009c3c:	bf28      	it	cs
 8009c3e:	4617      	movcs	r7, r2
 8009c40:	4604      	mov	r4, r0
 8009c42:	e7d9      	b.n	8009bf8 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 8009c44:	68f5      	ldr	r5, [r6, #12]
 8009c46:	e7f7      	b.n	8009c38 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 8009c48:	4605      	mov	r5, r0
 8009c4a:	4604      	mov	r4, r0
 8009c4c:	e7d4      	b.n	8009bf8 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 8009c4e:	3501      	adds	r5, #1
 8009c50:	3403      	adds	r4, #3
 8009c52:	e7d4      	b.n	8009bfe <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x48>
 8009c54:	3501      	adds	r5, #1
 8009c56:	3404      	adds	r4, #4
 8009c58:	42af      	cmp	r7, r5
 8009c5a:	d91b      	bls.n	8009c94 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 8009c5c:	eba4 0308 	sub.w	r3, r4, r8
 8009c60:	4599      	cmp	r9, r3
 8009c62:	d917      	bls.n	8009c94 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 8009c64:	f04f 0a00 	mov.w	sl, #0
 8009c68:	69b3      	ldr	r3, [r6, #24]
 8009c6a:	f894 f000 	pld	[r4]
 8009c6e:	fb03 fb05 	mul.w	fp, r3, r5
 8009c72:	69b3      	ldr	r3, [r6, #24]
 8009c74:	4553      	cmp	r3, sl
 8009c76:	d9ed      	bls.n	8009c54 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x9e>
 8009c78:	78e2      	ldrb	r2, [r4, #3]
 8009c7a:	7863      	ldrb	r3, [r4, #1]
 8009c7c:	9201      	str	r2, [sp, #4]
 8009c7e:	78a2      	ldrb	r2, [r4, #2]
 8009c80:	eb0b 010a 	add.w	r1, fp, sl
 8009c84:	9200      	str	r2, [sp, #0]
 8009c86:	7822      	ldrb	r2, [r4, #0]
 8009c88:	6b70      	ldr	r0, [r6, #52]	; 0x34
 8009c8a:	f001 fcf7 	bl	800b67c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009c8e:	f10a 0a01 	add.w	sl, sl, #1
 8009c92:	e7ee      	b.n	8009c72 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xbc>
 8009c94:	6933      	ldr	r3, [r6, #16]
 8009c96:	9a03      	ldr	r2, [sp, #12]
 8009c98:	429a      	cmp	r2, r3
 8009c9a:	d108      	bne.n	8009cae <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 8009c9c:	f896 3041 	ldrb.w	r3, [r6, #65]	; 0x41
 8009ca0:	b92b      	cbnz	r3, 8009cae <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 8009ca2:	6b70      	ldr	r0, [r6, #52]	; 0x34
 8009ca4:	b005      	add	sp, #20
 8009ca6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009caa:	f001 be5b 	b.w	800b964 <WS28xx::Update()>
 8009cae:	b005      	add	sp, #20
 8009cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009cb4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 8009cb4:	22ff      	movs	r2, #255	; 0xff
 8009cb6:	4b1d      	ldr	r3, [pc, #116]	; (8009d2c <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x78>)
 8009cb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009cba:	6003      	str	r3, [r0, #0]
 8009cbc:	2300      	movs	r3, #0
 8009cbe:	460d      	mov	r5, r1
 8009cc0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8009cc4:	2101      	movs	r1, #1
 8009cc6:	f44f 72ff 	mov.w	r2, #510	; 0x1fe
 8009cca:	e9c0 330d 	strd	r3, r3, [r0, #52]	; 0x34
 8009cce:	8483      	strh	r3, [r0, #36]	; 0x24
 8009cd0:	6283      	str	r3, [r0, #40]	; 0x28
 8009cd2:	63c3      	str	r3, [r0, #60]	; 0x3c
 8009cd4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8009cd8:	4b15      	ldr	r3, [pc, #84]	; (8009d30 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x7c>)
 8009cda:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8009cdc:	6018      	str	r0, [r3, #0]
 8009cde:	f100 031c 	add.w	r3, r0, #28
 8009ce2:	8602      	strh	r2, [r0, #48]	; 0x30
 8009ce4:	9301      	str	r3, [sp, #4]
 8009ce6:	f100 0314 	add.w	r3, r0, #20
 8009cea:	4604      	mov	r4, r0
 8009cec:	f100 0220 	add.w	r2, r0, #32
 8009cf0:	9300      	str	r3, [sp, #0]
 8009cf2:	1d03      	adds	r3, r0, #4
 8009cf4:	4628      	mov	r0, r5
 8009cf6:	f7ff fe7b 	bl	80099f0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 8009cfa:	201c      	movs	r0, #28
 8009cfc:	f007 f880 	bl	8010e00 <operator new(unsigned int)>
 8009d00:	4606      	mov	r6, r0
 8009d02:	4629      	mov	r1, r5
 8009d04:	f001 fdee 	bl	800b8e4 <WS28xx::WS28xx(PixelConfiguration&)>
 8009d08:	4630      	mov	r0, r6
 8009d0a:	6366      	str	r6, [r4, #52]	; 0x34
 8009d0c:	f001 fe46 	bl	800b99c <WS28xx::Blackout()>
 8009d10:	69ab      	ldr	r3, [r5, #24]
 8009d12:	6a22      	ldr	r2, [r4, #32]
 8009d14:	61a3      	str	r3, [r4, #24]
 8009d16:	8bab      	ldrh	r3, [r5, #28]
 8009d18:	4628      	mov	r0, r5
 8009d1a:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8009d1c:	6963      	ldr	r3, [r4, #20]
 8009d1e:	4353      	muls	r3, r2
 8009d20:	8623      	strh	r3, [r4, #48]	; 0x30
 8009d22:	f7ff febd 	bl	8009aa0 <PixelDmxConfiguration::Dump()>
 8009d26:	4620      	mov	r0, r4
 8009d28:	b002      	add	sp, #8
 8009d2a:	bd70      	pop	{r4, r5, r6, pc}
 8009d2c:	08013334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp}
 8009d30:	200006f4 	strdcs	r0, [r0], -r4

08009d34 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8009d34:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d36:	88c5      	ldrh	r5, [r0, #6]
 8009d38:	8886      	ldrh	r6, [r0, #4]
 8009d3a:	42b5      	cmp	r5, r6
 8009d3c:	d216      	bcs.n	8009d6c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8009d3e:	4604      	mov	r4, r0
 8009d40:	6800      	ldr	r0, [r0, #0]
 8009d42:	4428      	add	r0, r5
 8009d44:	1b75      	subs	r5, r6, r5
 8009d46:	7a26      	ldrb	r6, [r4, #8]
 8009d48:	b923      	cbnz	r3, 8009d54 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8009d4a:	b926      	cbnz	r6, 8009d56 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8009d4c:	9200      	str	r2, [sp, #0]
 8009d4e:	460b      	mov	r3, r1
 8009d50:	4a09      	ldr	r2, [pc, #36]	; (8009d78 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8009d52:	e003      	b.n	8009d5c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8009d54:	b166      	cbz	r6, 8009d70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8009d56:	460b      	mov	r3, r1
 8009d58:	9200      	str	r2, [sp, #0]
 8009d5a:	4a08      	ldr	r2, [pc, #32]	; (8009d7c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8009d5c:	4629      	mov	r1, r5
 8009d5e:	f7fe ff53 	bl	8008c08 <snprintf>
 8009d62:	4285      	cmp	r5, r0
 8009d64:	bfa2      	ittt	ge
 8009d66:	88e3      	ldrhge	r3, [r4, #6]
 8009d68:	181b      	addge	r3, r3, r0
 8009d6a:	80e3      	strhge	r3, [r4, #6]
 8009d6c:	b002      	add	sp, #8
 8009d6e:	bd70      	pop	{r4, r5, r6, pc}
 8009d70:	9200      	str	r2, [sp, #0]
 8009d72:	460b      	mov	r3, r1
 8009d74:	4a02      	ldr	r2, [pc, #8]	; (8009d80 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009d76:	e7f1      	b.n	8009d5c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8009d78:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 8009d7c:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 8009d80:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

08009d84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8009d84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d86:	88c5      	ldrh	r5, [r0, #6]
 8009d88:	8886      	ldrh	r6, [r0, #4]
 8009d8a:	42b5      	cmp	r5, r6
 8009d8c:	d216      	bcs.n	8009dbc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8009d8e:	4604      	mov	r4, r0
 8009d90:	6800      	ldr	r0, [r0, #0]
 8009d92:	4428      	add	r0, r5
 8009d94:	1b75      	subs	r5, r6, r5
 8009d96:	7a26      	ldrb	r6, [r4, #8]
 8009d98:	b923      	cbnz	r3, 8009da4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009d9a:	b926      	cbnz	r6, 8009da6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009d9c:	9200      	str	r2, [sp, #0]
 8009d9e:	460b      	mov	r3, r1
 8009da0:	4a09      	ldr	r2, [pc, #36]	; (8009dc8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8009da2:	e003      	b.n	8009dac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009da4:	b166      	cbz	r6, 8009dc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8009da6:	460b      	mov	r3, r1
 8009da8:	9200      	str	r2, [sp, #0]
 8009daa:	4a08      	ldr	r2, [pc, #32]	; (8009dcc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009dac:	4629      	mov	r1, r5
 8009dae:	f7fe ff2b 	bl	8008c08 <snprintf>
 8009db2:	4285      	cmp	r5, r0
 8009db4:	bfa2      	ittt	ge
 8009db6:	88e3      	ldrhge	r3, [r4, #6]
 8009db8:	181b      	addge	r3, r3, r0
 8009dba:	80e3      	strhge	r3, [r4, #6]
 8009dbc:	b002      	add	sp, #8
 8009dbe:	bd70      	pop	{r4, r5, r6, pc}
 8009dc0:	9200      	str	r2, [sp, #0]
 8009dc2:	460b      	mov	r3, r1
 8009dc4:	4a02      	ldr	r2, [pc, #8]	; (8009dd0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009dc6:	e7f1      	b.n	8009dac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009dc8:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 8009dcc:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 8009dd0:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

08009dd4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 8009dd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009dd6:	88c5      	ldrh	r5, [r0, #6]
 8009dd8:	8886      	ldrh	r6, [r0, #4]
 8009dda:	42b5      	cmp	r5, r6
 8009ddc:	d216      	bcs.n	8009e0c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 8009dde:	4604      	mov	r4, r0
 8009de0:	6800      	ldr	r0, [r0, #0]
 8009de2:	4428      	add	r0, r5
 8009de4:	1b75      	subs	r5, r6, r5
 8009de6:	7a26      	ldrb	r6, [r4, #8]
 8009de8:	b923      	cbnz	r3, 8009df4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 8009dea:	b926      	cbnz	r6, 8009df6 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 8009dec:	9200      	str	r2, [sp, #0]
 8009dee:	460b      	mov	r3, r1
 8009df0:	4a09      	ldr	r2, [pc, #36]	; (8009e18 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 8009df2:	e003      	b.n	8009dfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8009df4:	b166      	cbz	r6, 8009e10 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 8009df6:	460b      	mov	r3, r1
 8009df8:	9200      	str	r2, [sp, #0]
 8009dfa:	4a08      	ldr	r2, [pc, #32]	; (8009e1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009dfc:	4629      	mov	r1, r5
 8009dfe:	f7fe ff03 	bl	8008c08 <snprintf>
 8009e02:	4285      	cmp	r5, r0
 8009e04:	bfa2      	ittt	ge
 8009e06:	88e3      	ldrhge	r3, [r4, #6]
 8009e08:	181b      	addge	r3, r3, r0
 8009e0a:	80e3      	strhge	r3, [r4, #6]
 8009e0c:	b002      	add	sp, #8
 8009e0e:	bd70      	pop	{r4, r5, r6, pc}
 8009e10:	9200      	str	r2, [sp, #0]
 8009e12:	460b      	mov	r3, r1
 8009e14:	4a02      	ldr	r2, [pc, #8]	; (8009e20 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009e16:	e7f1      	b.n	8009dfc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 8009e18:	080132cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, ip, sp}
 8009e1c:	080132c1 	stmdaeq	r1, {r0, r6, r7, r9, ip, sp}
 8009e20:	080132cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, ip, sp}

08009e24 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 8009e24:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009e28:	4699      	mov	r9, r3
 8009e2a:	8885      	ldrh	r5, [r0, #4]
 8009e2c:	88c3      	ldrh	r3, [r0, #6]
 8009e2e:	4604      	mov	r4, r0
 8009e30:	42ab      	cmp	r3, r5
 8009e32:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8009e36:	d227      	bcs.n	8009e88 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 8009e38:	6826      	ldr	r6, [r4, #0]
 8009e3a:	4610      	mov	r0, r2
 8009e3c:	460f      	mov	r7, r1
 8009e3e:	f894 a008 	ldrb.w	sl, [r4, #8]
 8009e42:	441e      	add	r6, r3
 8009e44:	1aed      	subs	r5, r5, r3
 8009e46:	f7fd fe65 	bl	8007b14 <__aeabi_f2d>
 8009e4a:	f1b9 0f00 	cmp.w	r9, #0
 8009e4e:	d109      	bne.n	8009e64 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 8009e50:	f1ba 0f00 	cmp.w	sl, #0
 8009e54:	d109      	bne.n	8009e6a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 8009e56:	463b      	mov	r3, r7
 8009e58:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009e5c:	4a0f      	ldr	r2, [pc, #60]	; (8009e9c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 8009e5e:	f8cd 8000 	str.w	r8, [sp]
 8009e62:	e008      	b.n	8009e76 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 8009e64:	f1ba 0f00 	cmp.w	sl, #0
 8009e68:	d011      	beq.n	8009e8e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 8009e6a:	463b      	mov	r3, r7
 8009e6c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009e70:	4a0b      	ldr	r2, [pc, #44]	; (8009ea0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 8009e72:	f8cd 8000 	str.w	r8, [sp]
 8009e76:	4629      	mov	r1, r5
 8009e78:	4630      	mov	r0, r6
 8009e7a:	f7fe fec5 	bl	8008c08 <snprintf>
 8009e7e:	4285      	cmp	r5, r0
 8009e80:	bfa2      	ittt	ge
 8009e82:	88e3      	ldrhge	r3, [r4, #6]
 8009e84:	181b      	addge	r3, r3, r0
 8009e86:	80e3      	strhge	r3, [r4, #6]
 8009e88:	b004      	add	sp, #16
 8009e8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009e8e:	463b      	mov	r3, r7
 8009e90:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009e94:	4a03      	ldr	r2, [pc, #12]	; (8009ea4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 8009e96:	f8cd 8000 	str.w	r8, [sp]
 8009e9a:	e7ec      	b.n	8009e76 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 8009e9c:	0801336b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, ip, sp}
 8009ea0:	08013360 	stmdaeq	r1, {r5, r6, r8, r9, ip, sp}
 8009ea4:	0801336c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp}

08009ea8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 8009ea8:	2200      	movs	r2, #0
 8009eaa:	6001      	str	r1, [r0, #0]
 8009eac:	4910      	ldr	r1, [pc, #64]	; (8009ef0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 8009eae:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 8009eb2:	e9c0 2101 	strd	r2, r1, [r0, #4]
 8009eb6:	f44f 6110 	mov.w	r1, #2304	; 0x900
 8009eba:	81c1      	strh	r1, [r0, #14]
 8009ebc:	213d      	movs	r1, #61	; 0x3d
 8009ebe:	8201      	strh	r1, [r0, #16]
 8009ec0:	f240 11ff 	movw	r1, #511	; 0x1ff
 8009ec4:	8241      	strh	r1, [r0, #18]
 8009ec6:	2101      	movs	r1, #1
 8009ec8:	7541      	strb	r1, [r0, #21]
 8009eca:	2106      	movs	r1, #6
 8009ecc:	75c1      	strb	r1, [r0, #23]
 8009ece:	4909      	ldr	r1, [pc, #36]	; (8009ef4 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 8009ed0:	7302      	strb	r2, [r0, #12]
 8009ed2:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009ed6:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 8009eda:	6201      	str	r1, [r0, #32]
 8009edc:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 8009ee0:	6241      	str	r1, [r0, #36]	; 0x24
 8009ee2:	211d      	movs	r1, #29
 8009ee4:	7582      	strb	r2, [r0, #22]
 8009ee6:	8501      	strh	r1, [r0, #40]	; 0x28
 8009ee8:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8009eec:	4770      	bx	lr
 8009eee:	bf00      	nop
 8009ef0:	0100aa03 	tsteq	r0, r3, lsl #20
 8009ef4:	00090005 	andeq	r0, r9, r5

08009ef8 <WS28xxDmxParams::Load()>:
 8009ef8:	b508      	push	{r3, lr}
 8009efa:	2300      	movs	r3, #0
 8009efc:	4601      	mov	r1, r0
 8009efe:	6043      	str	r3, [r0, #4]
 8009f00:	6800      	ldr	r0, [r0, #0]
 8009f02:	b120      	cbz	r0, 8009f0e <WS28xxDmxParams::Load()+0x16>
 8009f04:	6803      	ldr	r3, [r0, #0]
 8009f06:	3104      	adds	r1, #4
 8009f08:	68db      	ldr	r3, [r3, #12]
 8009f0a:	4798      	blx	r3
 8009f0c:	2001      	movs	r0, #1
 8009f0e:	bd08      	pop	{r3, pc}

08009f10 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 8009f10:	6803      	ldr	r3, [r0, #0]
 8009f12:	b1d3      	cbz	r3, 8009f4a <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 8009f14:	2300      	movs	r3, #0
 8009f16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f18:	460d      	mov	r5, r1
 8009f1a:	4616      	mov	r6, r2
 8009f1c:	4604      	mov	r4, r0
 8009f1e:	6043      	str	r3, [r0, #4]
 8009f20:	4602      	mov	r2, r0
 8009f22:	490a      	ldr	r1, [pc, #40]	; (8009f4c <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 8009f24:	4668      	mov	r0, sp
 8009f26:	f006 f9d5 	bl	80102d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009f2a:	4632      	mov	r2, r6
 8009f2c:	4629      	mov	r1, r5
 8009f2e:	4668      	mov	r0, sp
 8009f30:	f006 f9d4 	bl	80102dc <ReadConfigFile::Read(char const*, unsigned int)>
 8009f34:	4621      	mov	r1, r4
 8009f36:	f851 0b04 	ldr.w	r0, [r1], #4
 8009f3a:	6803      	ldr	r3, [r0, #0]
 8009f3c:	689b      	ldr	r3, [r3, #8]
 8009f3e:	4798      	blx	r3
 8009f40:	4668      	mov	r0, sp
 8009f42:	f006 f9ca 	bl	80102da <ReadConfigFile::~ReadConfigFile()>
 8009f46:	b002      	add	sp, #8
 8009f48:	bd70      	pop	{r4, r5, r6, pc}
 8009f4a:	4770      	bx	lr
 8009f4c:	0800a199 	stmdaeq	r0, {r0, r3, r4, r7, r8, sp, pc}

08009f50 <WS28xxDmxParams::callbackFunction(char const*)>:
 8009f50:	b530      	push	{r4, r5, lr}
 8009f52:	2308      	movs	r3, #8
 8009f54:	460d      	mov	r5, r1
 8009f56:	b089      	sub	sp, #36	; 0x24
 8009f58:	4604      	mov	r4, r0
 8009f5a:	9302      	str	r3, [sp, #8]
 8009f5c:	4628      	mov	r0, r5
 8009f5e:	4982      	ldr	r1, [pc, #520]	; (800a168 <WS28xxDmxParams::callbackFunction(char const*)+0x218>)
 8009f60:	446b      	add	r3, sp
 8009f62:	aa04      	add	r2, sp, #16
 8009f64:	f006 f9ee 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009f68:	b9a0      	cbnz	r0, 8009f94 <WS28xxDmxParams::callbackFunction(char const*)+0x44>
 8009f6a:	9b02      	ldr	r3, [sp, #8]
 8009f6c:	3320      	adds	r3, #32
 8009f6e:	446b      	add	r3, sp
 8009f70:	f803 0c10 	strb.w	r0, [r3, #-16]
 8009f74:	a804      	add	r0, sp, #16
 8009f76:	f000 fda1 	bl	800aabc <PixelType::GetType(char const*)>
 8009f7a:	280e      	cmp	r0, #14
 8009f7c:	bf08      	it	eq
 8009f7e:	2203      	moveq	r2, #3
 8009f80:	6863      	ldr	r3, [r4, #4]
 8009f82:	bf19      	ittee	ne
 8009f84:	7220      	strbne	r0, [r4, #8]
 8009f86:	f043 0301 	orrne.w	r3, r3, #1
 8009f8a:	7222      	strbeq	r2, [r4, #8]
 8009f8c:	f023 0301 	biceq.w	r3, r3, #1
 8009f90:	6063      	str	r3, [r4, #4]
 8009f92:	e033      	b.n	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 8009f94:	4628      	mov	r0, r5
 8009f96:	4975      	ldr	r1, [pc, #468]	; (800a16c <WS28xxDmxParams::callbackFunction(char const*)+0x21c>)
 8009f98:	f10d 0202 	add.w	r2, sp, #2
 8009f9c:	f006 fa8e 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009fa0:	b990      	cbnz	r0, 8009fc8 <WS28xxDmxParams::callbackFunction(char const*)+0x78>
 8009fa2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8009fa6:	6863      	ldr	r3, [r4, #4]
 8009fa8:	1e51      	subs	r1, r2, #1
 8009faa:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 8009fae:	bf2d      	iteet	cs
 8009fb0:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 8009fb4:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 8009fb8:	f043 0302 	orrcc.w	r3, r3, #2
 8009fbc:	7262      	strbcs	r2, [r4, #9]
 8009fbe:	bf24      	itt	cs
 8009fc0:	72a0      	strbcs	r0, [r4, #10]
 8009fc2:	f023 0302 	biccs.w	r3, r3, #2
 8009fc6:	e7e3      	b.n	8009f90 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 8009fc8:	2303      	movs	r3, #3
 8009fca:	4628      	mov	r0, r5
 8009fcc:	9302      	str	r3, [sp, #8]
 8009fce:	4968      	ldr	r1, [pc, #416]	; (800a170 <WS28xxDmxParams::callbackFunction(char const*)+0x220>)
 8009fd0:	ab02      	add	r3, sp, #8
 8009fd2:	aa04      	add	r2, sp, #16
 8009fd4:	f006 f9b6 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009fd8:	b990      	cbnz	r0, 800a000 <WS28xxDmxParams::callbackFunction(char const*)+0xb0>
 8009fda:	9b02      	ldr	r3, [sp, #8]
 8009fdc:	3320      	adds	r3, #32
 8009fde:	446b      	add	r3, sp
 8009fe0:	f803 0c10 	strb.w	r0, [r3, #-16]
 8009fe4:	a804      	add	r0, sp, #16
 8009fe6:	f000 fd8d 	bl	800ab04 <PixelType::GetMap(char const*)>
 8009fea:	6863      	ldr	r3, [r4, #4]
 8009fec:	2806      	cmp	r0, #6
 8009fee:	bf14      	ite	ne
 8009ff0:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8009ff4:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 8009ff8:	6063      	str	r3, [r4, #4]
 8009ffa:	75e0      	strb	r0, [r4, #23]
 8009ffc:	b009      	add	sp, #36	; 0x24
 8009ffe:	bd30      	pop	{r4, r5, pc}
 800a000:	4628      	mov	r0, r5
 800a002:	495c      	ldr	r1, [pc, #368]	; (800a174 <WS28xxDmxParams::callbackFunction(char const*)+0x224>)
 800a004:	aa01      	add	r2, sp, #4
 800a006:	f006 f9b6 	bl	8010376 <Sscan::Float(char const*, char const*, float&)>
 800a00a:	b960      	cbnz	r0, 800a026 <WS28xxDmxParams::callbackFunction(char const*)+0xd6>
 800a00c:	9801      	ldr	r0, [sp, #4]
 800a00e:	f000 fddb 	bl	800abc8 <PixelType::ConvertTxH(float)>
 800a012:	6863      	ldr	r3, [r4, #4]
 800a014:	b120      	cbz	r0, 800a020 <WS28xxDmxParams::callbackFunction(char const*)+0xd0>
 800a016:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a01a:	6063      	str	r3, [r4, #4]
 800a01c:	7620      	strb	r0, [r4, #24]
 800a01e:	e7ed      	b.n	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a020:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a024:	e7f9      	b.n	800a01a <WS28xxDmxParams::callbackFunction(char const*)+0xca>
 800a026:	4628      	mov	r0, r5
 800a028:	4953      	ldr	r1, [pc, #332]	; (800a178 <WS28xxDmxParams::callbackFunction(char const*)+0x228>)
 800a02a:	aa01      	add	r2, sp, #4
 800a02c:	f006 f9a3 	bl	8010376 <Sscan::Float(char const*, char const*, float&)>
 800a030:	b960      	cbnz	r0, 800a04c <WS28xxDmxParams::callbackFunction(char const*)+0xfc>
 800a032:	9801      	ldr	r0, [sp, #4]
 800a034:	f000 fdc8 	bl	800abc8 <PixelType::ConvertTxH(float)>
 800a038:	6863      	ldr	r3, [r4, #4]
 800a03a:	b120      	cbz	r0, 800a046 <WS28xxDmxParams::callbackFunction(char const*)+0xf6>
 800a03c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800a040:	6063      	str	r3, [r4, #4]
 800a042:	7660      	strb	r0, [r4, #25]
 800a044:	e7da      	b.n	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a046:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a04a:	e7f9      	b.n	800a040 <WS28xxDmxParams::callbackFunction(char const*)+0xf0>
 800a04c:	4628      	mov	r0, r5
 800a04e:	494b      	ldr	r1, [pc, #300]	; (800a17c <WS28xxDmxParams::callbackFunction(char const*)+0x22c>)
 800a050:	f10d 0202 	add.w	r2, sp, #2
 800a054:	f006 fa32 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a058:	b998      	cbnz	r0, 800a082 <WS28xxDmxParams::callbackFunction(char const*)+0x132>
 800a05a:	f240 25a6 	movw	r5, #678	; 0x2a6
 800a05e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800a062:	6863      	ldr	r3, [r4, #4]
 800a064:	1e8a      	subs	r2, r1, #2
 800a066:	b292      	uxth	r2, r2
 800a068:	42aa      	cmp	r2, r5
 800a06a:	bf81      	itttt	hi
 800a06c:	2201      	movhi	r2, #1
 800a06e:	75a0      	strbhi	r0, [r4, #22]
 800a070:	7562      	strbhi	r2, [r4, #21]
 800a072:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800a076:	bf9c      	itt	ls
 800a078:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800a07c:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800a080:	e786      	b.n	8009f90 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800a082:	4628      	mov	r0, r5
 800a084:	493e      	ldr	r1, [pc, #248]	; (800a180 <WS28xxDmxParams::callbackFunction(char const*)+0x230>)
 800a086:	aa03      	add	r2, sp, #12
 800a088:	f006 fa36 	bl	80104f8 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800a08c:	b960      	cbnz	r0, 800a0a8 <WS28xxDmxParams::callbackFunction(char const*)+0x158>
 800a08e:	9a03      	ldr	r2, [sp, #12]
 800a090:	493c      	ldr	r1, [pc, #240]	; (800a184 <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800a092:	6863      	ldr	r3, [r4, #4]
 800a094:	428a      	cmp	r2, r1
 800a096:	bf14      	ite	ne
 800a098:	f043 0310 	orrne.w	r3, r3, #16
 800a09c:	f023 0310 	biceq.w	r3, r3, #16
 800a0a0:	6063      	str	r3, [r4, #4]
 800a0a2:	f8c4 200e 	str.w	r2, [r4, #14]
 800a0a6:	e7a9      	b.n	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a0a8:	4628      	mov	r0, r5
 800a0aa:	4937      	ldr	r1, [pc, #220]	; (800a188 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800a0ac:	f10d 0201 	add.w	r2, sp, #1
 800a0b0:	f006 fa4b 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a0b4:	b988      	cbnz	r0, 800a0da <WS28xxDmxParams::callbackFunction(char const*)+0x18a>
 800a0b6:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800a0ba:	6863      	ldr	r3, [r4, #4]
 800a0bc:	1e4a      	subs	r2, r1, #1
 800a0be:	b2d2      	uxtb	r2, r2
 800a0c0:	2afd      	cmp	r2, #253	; 0xfd
 800a0c2:	bf83      	ittte	hi
 800a0c4:	f023 0320 	bichi.w	r3, r3, #32
 800a0c8:	6063      	strhi	r3, [r4, #4]
 800a0ca:	23ff      	movhi	r3, #255	; 0xff
 800a0cc:	f043 0320 	orrls.w	r3, r3, #32
 800a0d0:	bf9a      	itte	ls
 800a0d2:	6063      	strls	r3, [r4, #4]
 800a0d4:	74a1      	strbls	r1, [r4, #18]
 800a0d6:	74a3      	strbhi	r3, [r4, #18]
 800a0d8:	e790      	b.n	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a0da:	4628      	mov	r0, r5
 800a0dc:	492b      	ldr	r1, [pc, #172]	; (800a18c <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800a0de:	f10d 0202 	add.w	r2, sp, #2
 800a0e2:	f006 f9eb 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a0e6:	b9b8      	cbnz	r0, 800a118 <WS28xxDmxParams::callbackFunction(char const*)+0x1c8>
 800a0e8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a0ec:	6863      	ldr	r3, [r4, #4]
 800a0ee:	1e91      	subs	r1, r2, #2
 800a0f0:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800a0f4:	bf83      	ittte	hi
 800a0f6:	2201      	movhi	r2, #1
 800a0f8:	72e2      	strbhi	r2, [r4, #11]
 800a0fa:	2200      	movhi	r2, #0
 800a0fc:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800a100:	bf92      	itee	ls
 800a102:	f043 0304 	orrls.w	r3, r3, #4
 800a106:	7322      	strbhi	r2, [r4, #12]
 800a108:	f023 0304 	bichi.w	r3, r3, #4
 800a10c:	e740      	b.n	8009f90 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800a10e:	2201      	movs	r2, #1
 800a110:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a114:	8362      	strh	r2, [r4, #26]
 800a116:	e00e      	b.n	800a136 <WS28xxDmxParams::callbackFunction(char const*)+0x1e6>
 800a118:	4628      	mov	r0, r5
 800a11a:	491d      	ldr	r1, [pc, #116]	; (800a190 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800a11c:	f10d 0202 	add.w	r2, sp, #2
 800a120:	f006 f9cc 	bl	80104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a124:	b940      	cbnz	r0, 800a138 <WS28xxDmxParams::callbackFunction(char const*)+0x1e8>
 800a126:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a12a:	6863      	ldr	r3, [r4, #4]
 800a12c:	2a00      	cmp	r2, #0
 800a12e:	d0ee      	beq.n	800a10e <WS28xxDmxParams::callbackFunction(char const*)+0x1be>
 800a130:	8362      	strh	r2, [r4, #26]
 800a132:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800a136:	6063      	str	r3, [r4, #4]
 800a138:	4628      	mov	r0, r5
 800a13a:	4916      	ldr	r1, [pc, #88]	; (800a194 <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800a13c:	f10d 0201 	add.w	r2, sp, #1
 800a140:	f006 fa03 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a144:	2800      	cmp	r0, #0
 800a146:	f47f af59 	bne.w	8009ffc <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a14a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a14e:	6863      	ldr	r3, [r4, #4]
 800a150:	1e51      	subs	r1, r2, #1
 800a152:	2904      	cmp	r1, #4
 800a154:	bf99      	ittee	ls
 800a156:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800a15a:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800a15e:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800a162:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800a166:	e713      	b.n	8009f90 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800a168:	08014880 	stmdaeq	r1, {r7, fp, lr}
 800a16c:	08014889 	stmdaeq	r1, {r0, r3, r7, fp, lr}
 800a170:	08014870 	stmdaeq	r1, {r4, r5, r6, fp, lr}
 800a174:	08014893 	stmdaeq	r1, {r0, r1, r4, r7, fp, lr}
 800a178:	0801489b 	stmdaeq	r1, {r0, r1, r3, r4, r7, fp, lr}
 800a17c:	0801484e 	stmdaeq	r1, {r1, r2, r3, r6, fp, lr}
 800a180:	0801483f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, fp, lr}
 800a184:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800a188:	0801485e 	stmdaeq	r1, {r1, r2, r3, r4, r6, fp, lr}
 800a18c:	08014979 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, fp, lr}
 800a190:	080148e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, fp, lr}
 800a194:	080148dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, lr}

0800a198 <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800a198:	f7ff beda 	b.w	8009f50 <WS28xxDmxParams::callbackFunction(char const*)>

0800a19c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800a19c:	b570      	push	{r4, r5, r6, lr}
 800a19e:	4604      	mov	r4, r0
 800a1a0:	4615      	mov	r5, r2
 800a1a2:	461e      	mov	r6, r3
 800a1a4:	b086      	sub	sp, #24
 800a1a6:	3004      	adds	r0, #4
 800a1a8:	2900      	cmp	r1, #0
 800a1aa:	f000 808e 	beq.w	800a2ca <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x12e>
 800a1ae:	2227      	movs	r2, #39	; 0x27
 800a1b0:	f006 fee5 	bl	8010f7e <memmove>
 800a1b4:	4633      	mov	r3, r6
 800a1b6:	462a      	mov	r2, r5
 800a1b8:	4974      	ldr	r1, [pc, #464]	; (800a38c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800a1ba:	a803      	add	r0, sp, #12
 800a1bc:	f005 ffea 	bl	8010194 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a1c0:	7a20      	ldrb	r0, [r4, #8]
 800a1c2:	f000 fc6f 	bl	800aaa4 <PixelType::GetType(pixel::Type)>
 800a1c6:	6863      	ldr	r3, [r4, #4]
 800a1c8:	4602      	mov	r2, r0
 800a1ca:	4971      	ldr	r1, [pc, #452]	; (800a390 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800a1cc:	f003 0301 	and.w	r3, r3, #1
 800a1d0:	a803      	add	r0, sp, #12
 800a1d2:	f7ff fdff 	bl	8009dd4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a1d6:	6863      	ldr	r3, [r4, #4]
 800a1d8:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800a1dc:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800a1e0:	496c      	ldr	r1, [pc, #432]	; (800a394 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800a1e2:	a803      	add	r0, sp, #12
 800a1e4:	f7ff fdce 	bl	8009d84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a1e8:	496b      	ldr	r1, [pc, #428]	; (800a398 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800a1ea:	a803      	add	r0, sp, #12
 800a1ec:	f006 f858 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a1f0:	6863      	ldr	r3, [r4, #4]
 800a1f2:	059e      	lsls	r6, r3, #22
 800a1f4:	d403      	bmi.n	800a1fe <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x62>
 800a1f6:	7a20      	ldrb	r0, [r4, #8]
 800a1f8:	f000 f94c 	bl	800a494 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800a1fc:	75e0      	strb	r0, [r4, #23]
 800a1fe:	7de0      	ldrb	r0, [r4, #23]
 800a200:	f000 fca8 	bl	800ab54 <PixelType::GetMap(pixel::Map)>
 800a204:	6863      	ldr	r3, [r4, #4]
 800a206:	4602      	mov	r2, r0
 800a208:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800a20c:	4963      	ldr	r1, [pc, #396]	; (800a39c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800a20e:	a803      	add	r0, sp, #12
 800a210:	f7ff fde0 	bl	8009dd4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800a214:	6863      	ldr	r3, [r4, #4]
 800a216:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800a21a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800a21e:	d011      	beq.n	800a244 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800a220:	f10d 020b 	add.w	r2, sp, #11
 800a224:	7a20      	ldrb	r0, [r4, #8]
 800a226:	f10d 010a 	add.w	r1, sp, #10
 800a22a:	f000 f942 	bl	800a4b2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800a22e:	6863      	ldr	r3, [r4, #4]
 800a230:	055d      	lsls	r5, r3, #21
 800a232:	bf5c      	itt	pl
 800a234:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800a238:	7622      	strbpl	r2, [r4, #24]
 800a23a:	0518      	lsls	r0, r3, #20
 800a23c:	bf5c      	itt	pl
 800a23e:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800a242:	7663      	strbpl	r3, [r4, #25]
 800a244:	4956      	ldr	r1, [pc, #344]	; (800a3a0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800a246:	a803      	add	r0, sp, #12
 800a248:	f006 f82a 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a24c:	7e20      	ldrb	r0, [r4, #24]
 800a24e:	f000 fc8d 	bl	800ab6c <PixelType::ConvertTxH(unsigned char)>
 800a252:	2502      	movs	r5, #2
 800a254:	6863      	ldr	r3, [r4, #4]
 800a256:	4602      	mov	r2, r0
 800a258:	4952      	ldr	r1, [pc, #328]	; (800a3a4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800a25a:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800a25e:	9500      	str	r5, [sp, #0]
 800a260:	a803      	add	r0, sp, #12
 800a262:	f7ff fddf 	bl	8009e24 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800a266:	7e60      	ldrb	r0, [r4, #25]
 800a268:	f000 fc80 	bl	800ab6c <PixelType::ConvertTxH(unsigned char)>
 800a26c:	6863      	ldr	r3, [r4, #4]
 800a26e:	4602      	mov	r2, r0
 800a270:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800a274:	494c      	ldr	r1, [pc, #304]	; (800a3a8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800a276:	9500      	str	r5, [sp, #0]
 800a278:	a803      	add	r0, sp, #12
 800a27a:	f7ff fdd3 	bl	8009e24 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800a27e:	494b      	ldr	r1, [pc, #300]	; (800a3ac <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800a280:	a803      	add	r0, sp, #12
 800a282:	f006 f80d 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a286:	6863      	ldr	r3, [r4, #4]
 800a288:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800a28c:	4948      	ldr	r1, [pc, #288]	; (800a3b0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800a28e:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800a292:	a803      	add	r0, sp, #12
 800a294:	f7ff fd76 	bl	8009d84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a298:	4946      	ldr	r1, [pc, #280]	; (800a3b4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800a29a:	a803      	add	r0, sp, #12
 800a29c:	f006 f800 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a2a0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800a2a4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a2a8:	42a9      	cmp	r1, r5
 800a2aa:	d224      	bcs.n	800a2f6 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15a>
 800a2ac:	9803      	ldr	r0, [sp, #12]
 800a2ae:	1a6d      	subs	r5, r5, r1
 800a2b0:	4408      	add	r0, r1
 800a2b2:	6861      	ldr	r1, [r4, #4]
 800a2b4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a2b8:	06c9      	lsls	r1, r1, #27
 800a2ba:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800a2be:	d40b      	bmi.n	800a2d8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13c>
 800a2c0:	b962      	cbnz	r2, 800a2dc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x140>
 800a2c2:	9300      	str	r3, [sp, #0]
 800a2c4:	4a3c      	ldr	r2, [pc, #240]	; (800a3b8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800a2c6:	4b3d      	ldr	r3, [pc, #244]	; (800a3bc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800a2c8:	e00b      	b.n	800a2e2 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800a2ca:	6823      	ldr	r3, [r4, #0]
 800a2cc:	4601      	mov	r1, r0
 800a2ce:	681a      	ldr	r2, [r3, #0]
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	68d2      	ldr	r2, [r2, #12]
 800a2d4:	4790      	blx	r2
 800a2d6:	e76d      	b.n	800a1b4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x18>
 800a2d8:	2a00      	cmp	r2, #0
 800a2da:	d053      	beq.n	800a384 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1e8>
 800a2dc:	9300      	str	r3, [sp, #0]
 800a2de:	4a38      	ldr	r2, [pc, #224]	; (800a3c0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800a2e0:	4b36      	ldr	r3, [pc, #216]	; (800a3bc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800a2e2:	4629      	mov	r1, r5
 800a2e4:	f7fe fc90 	bl	8008c08 <snprintf>
 800a2e8:	4285      	cmp	r5, r0
 800a2ea:	bfa2      	ittt	ge
 800a2ec:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a2f0:	18c0      	addge	r0, r0, r3
 800a2f2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a2f6:	4933      	ldr	r1, [pc, #204]	; (800a3c4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800a2f8:	a803      	add	r0, sp, #12
 800a2fa:	f005 ffd1 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a2fe:	6863      	ldr	r3, [r4, #4]
 800a300:	7ca2      	ldrb	r2, [r4, #18]
 800a302:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800a306:	4930      	ldr	r1, [pc, #192]	; (800a3c8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800a308:	a803      	add	r0, sp, #12
 800a30a:	f7ff fd13 	bl	8009d34 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800a30e:	492f      	ldr	r1, [pc, #188]	; (800a3cc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800a310:	a803      	add	r0, sp, #12
 800a312:	f005 ffc5 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a316:	6863      	ldr	r3, [r4, #4]
 800a318:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800a31c:	492c      	ldr	r1, [pc, #176]	; (800a3d0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800a31e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800a322:	a803      	add	r0, sp, #12
 800a324:	f7ff fd2e 	bl	8009d84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a328:	6863      	ldr	r3, [r4, #4]
 800a32a:	8b62      	ldrh	r2, [r4, #26]
 800a32c:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800a330:	4928      	ldr	r1, [pc, #160]	; (800a3d4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800a332:	a803      	add	r0, sp, #12
 800a334:	f7ff fd26 	bl	8009d84 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a338:	4927      	ldr	r1, [pc, #156]	; (800a3d8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800a33a:	a803      	add	r0, sp, #12
 800a33c:	f005 ffb0 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800a340:	6863      	ldr	r3, [r4, #4]
 800a342:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800a346:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800a34a:	4924      	ldr	r1, [pc, #144]	; (800a3dc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800a34c:	a803      	add	r0, sp, #12
 800a34e:	f7ff fcf1 	bl	8009d34 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800a352:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a356:	b17b      	cbz	r3, 800a378 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1dc>
 800a358:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a35c:	9b03      	ldr	r3, [sp, #12]
 800a35e:	4413      	add	r3, r2
 800a360:	227d      	movs	r2, #125	; 0x7d
 800a362:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a366:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a36a:	9903      	ldr	r1, [sp, #12]
 800a36c:	54ca      	strb	r2, [r1, r3]
 800a36e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a372:	3301      	adds	r3, #1
 800a374:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a378:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a37c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a37e:	601a      	str	r2, [r3, #0]
 800a380:	b006      	add	sp, #24
 800a382:	bd70      	pop	{r4, r5, r6, pc}
 800a384:	9300      	str	r3, [sp, #0]
 800a386:	4a16      	ldr	r2, [pc, #88]	; (800a3e0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800a388:	4b0c      	ldr	r3, [pc, #48]	; (800a3bc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800a38a:	e7aa      	b.n	800a2e2 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800a38c:	080148a3 	stmdaeq	r1, {r0, r1, r5, r7, fp, lr}
 800a390:	08014880 	stmdaeq	r1, {r7, fp, lr}
 800a394:	08014889 	stmdaeq	r1, {r0, r3, r7, fp, lr}
 800a398:	08013375 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, ip, sp}
 800a39c:	08014870 	stmdaeq	r1, {r4, r5, r6, fp, lr}
 800a3a0:	08013389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp}
 800a3a4:	08014893 	stmdaeq	r1, {r0, r1, r4, r7, fp, lr}
 800a3a8:	0801489b 	stmdaeq	r1, {r0, r1, r3, r4, r7, fp, lr}
 800a3ac:	0801339f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, ip, sp}
 800a3b0:	0801484e 	stmdaeq	r1, {r1, r2, r3, r6, fp, lr}
 800a3b4:	080133a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, ip, sp}
 800a3b8:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 800a3bc:	0801483f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, fp, lr}
 800a3c0:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 800a3c4:	080133ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, ip, sp}
 800a3c8:	0801485e 	stmdaeq	r1, {r1, r2, r3, r4, r6, fp, lr}
 800a3cc:	080133c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, ip, sp}
 800a3d0:	08014979 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, fp, lr}
 800a3d4:	080148e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, fp, lr}
 800a3d8:	080133cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, ip, sp}
 800a3dc:	080148dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, lr}
 800a3e0:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

0800a3e4 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800a3e4:	b513      	push	{r0, r1, r4, lr}
 800a3e6:	6804      	ldr	r4, [r0, #0]
 800a3e8:	b914      	cbnz	r4, 800a3f0 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a3ea:	601c      	str	r4, [r3, #0]
 800a3ec:	b002      	add	sp, #8
 800a3ee:	bd10      	pop	{r4, pc}
 800a3f0:	9300      	str	r3, [sp, #0]
 800a3f2:	4613      	mov	r3, r2
 800a3f4:	460a      	mov	r2, r1
 800a3f6:	2100      	movs	r1, #0
 800a3f8:	f7ff fed0 	bl	800a19c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800a3fc:	e7f6      	b.n	800a3ec <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a3fe <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800a3fe:	6843      	ldr	r3, [r0, #4]
 800a400:	07da      	lsls	r2, r3, #31
 800a402:	bf44      	itt	mi
 800a404:	7a02      	ldrbmi	r2, [r0, #8]
 800a406:	600a      	strmi	r2, [r1, #0]
 800a408:	079a      	lsls	r2, r3, #30
 800a40a:	d505      	bpl.n	800a418 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800a40c:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800a410:	2a00      	cmp	r2, #0
 800a412:	bf08      	it	eq
 800a414:	22aa      	moveq	r2, #170	; 0xaa
 800a416:	604a      	str	r2, [r1, #4]
 800a418:	059a      	lsls	r2, r3, #22
 800a41a:	bf44      	itt	mi
 800a41c:	7dc2      	ldrbmi	r2, [r0, #23]
 800a41e:	608a      	strmi	r2, [r1, #8]
 800a420:	055a      	lsls	r2, r3, #21
 800a422:	bf44      	itt	mi
 800a424:	7e02      	ldrbmi	r2, [r0, #24]
 800a426:	740a      	strbmi	r2, [r1, #16]
 800a428:	051a      	lsls	r2, r3, #20
 800a42a:	bf44      	itt	mi
 800a42c:	7e42      	ldrbmi	r2, [r0, #25]
 800a42e:	744a      	strbmi	r2, [r1, #17]
 800a430:	06da      	lsls	r2, r3, #27
 800a432:	bf44      	itt	mi
 800a434:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800a438:	60ca      	strmi	r2, [r1, #12]
 800a43a:	069a      	lsls	r2, r3, #26
 800a43c:	bf44      	itt	mi
 800a43e:	7c82      	ldrbmi	r2, [r0, #18]
 800a440:	748a      	strbmi	r2, [r1, #18]
 800a442:	075a      	lsls	r2, r3, #29
 800a444:	d50b      	bpl.n	800a45e <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x60>
 800a446:	7ac2      	ldrb	r2, [r0, #11]
 800a448:	b510      	push	{r4, lr}
 800a44a:	7b04      	ldrb	r4, [r0, #12]
 800a44c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800a450:	838a      	strh	r2, [r1, #28]
 800a452:	05da      	lsls	r2, r3, #23
 800a454:	bf44      	itt	mi
 800a456:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800a45a:	618b      	strmi	r3, [r1, #24]
 800a45c:	bd10      	pop	{r4, pc}
 800a45e:	05db      	lsls	r3, r3, #23
 800a460:	bf44      	itt	mi
 800a462:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800a466:	618b      	strmi	r3, [r1, #24]
 800a468:	4770      	bx	lr

0800a46a <WS28xxDmxParams::Dump()>:
 800a46a:	4770      	bx	lr

0800a46c <WS28xxDmx::Print()>:
 800a46c:	b510      	push	{r4, lr}
 800a46e:	4604      	mov	r4, r0
 800a470:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800a472:	f000 fbf5 	bl	800ac60 <WS28xx::Print()>
 800a476:	4805      	ldr	r0, [pc, #20]	; (800a48c <WS28xxDmx::Print()+0x20>)
 800a478:	f7fe fbb6 	bl	8008be8 <printf>
 800a47c:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800a480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a484:	4802      	ldr	r0, [pc, #8]	; (800a490 <WS28xxDmx::Print()+0x24>)
 800a486:	f7fe bbaf 	b.w	8008be8 <printf>
 800a48a:	bf00      	nop
 800a48c:	080133d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, sp}
 800a490:	080133ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, ip, sp}

0800a494 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800a494:	f020 0308 	bic.w	r3, r0, #8
 800a498:	2b01      	cmp	r3, #1
 800a49a:	d006      	beq.n	800a4aa <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800a49c:	2808      	cmp	r0, #8
 800a49e:	d006      	beq.n	800a4ae <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800a4a0:	280a      	cmp	r0, #10
 800a4a2:	bf14      	ite	ne
 800a4a4:	2002      	movne	r0, #2
 800a4a6:	2005      	moveq	r0, #5
 800a4a8:	4770      	bx	lr
 800a4aa:	2000      	movs	r0, #0
 800a4ac:	4770      	bx	lr
 800a4ae:	2004      	movs	r0, #4
 800a4b0:	4770      	bx	lr

0800a4b2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800a4b2:	23c0      	movs	r3, #192	; 0xc0
 800a4b4:	2803      	cmp	r0, #3
 800a4b6:	700b      	strb	r3, [r1, #0]
 800a4b8:	d006      	beq.n	800a4c8 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800a4ba:	3808      	subs	r0, #8
 800a4bc:	2803      	cmp	r0, #3
 800a4be:	bf34      	ite	cc
 800a4c0:	23fc      	movcc	r3, #252	; 0xfc
 800a4c2:	23f0      	movcs	r3, #240	; 0xf0
 800a4c4:	7013      	strb	r3, [r2, #0]
 800a4c6:	4770      	bx	lr
 800a4c8:	23f8      	movs	r3, #248	; 0xf8
 800a4ca:	e7fb      	b.n	800a4c4 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800a4cc <PixelConfiguration::Validate(unsigned int&)>:
 800a4cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a4ce:	e9d0 5300 	ldrd	r5, r3, [r0]
 800a4d2:	2d07      	cmp	r5, #7
 800a4d4:	4604      	mov	r4, r0
 800a4d6:	6882      	ldr	r2, [r0, #8]
 800a4d8:	d129      	bne.n	800a52e <PixelConfiguration::Validate(unsigned int&)+0x62>
 800a4da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a4de:	bf28      	it	cs
 800a4e0:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800a4e4:	6043      	str	r3, [r0, #4]
 800a4e6:	2304      	movs	r3, #4
 800a4e8:	600b      	str	r3, [r1, #0]
 800a4ea:	2301      	movs	r3, #1
 800a4ec:	2a06      	cmp	r2, #6
 800a4ee:	74e3      	strb	r3, [r4, #19]
 800a4f0:	d103      	bne.n	800a4fa <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800a4f2:	4628      	mov	r0, r5
 800a4f4:	f7ff ffce 	bl	800a494 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800a4f8:	60a0      	str	r0, [r4, #8]
 800a4fa:	7c63      	ldrb	r3, [r4, #17]
 800a4fc:	7c22      	ldrb	r2, [r4, #16]
 800a4fe:	4628      	mov	r0, r5
 800a500:	429a      	cmp	r2, r3
 800a502:	bf28      	it	cs
 800a504:	2300      	movcs	r3, #0
 800a506:	f10d 0207 	add.w	r2, sp, #7
 800a50a:	bf28      	it	cs
 800a50c:	8223      	strhcs	r3, [r4, #16]
 800a50e:	f10d 0106 	add.w	r1, sp, #6
 800a512:	f7ff ffce 	bl	800a4b2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800a516:	7c23      	ldrb	r3, [r4, #16]
 800a518:	b913      	cbnz	r3, 800a520 <PixelConfiguration::Validate(unsigned int&)+0x54>
 800a51a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800a51e:	7423      	strb	r3, [r4, #16]
 800a520:	7c63      	ldrb	r3, [r4, #17]
 800a522:	b913      	cbnz	r3, 800a52a <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800a524:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a528:	7463      	strb	r3, [r4, #17]
 800a52a:	4b1a      	ldr	r3, [pc, #104]	; (800a594 <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800a52c:	e020      	b.n	800a570 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800a52e:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800a532:	bf28      	it	cs
 800a534:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800a538:	6043      	str	r3, [r0, #4]
 800a53a:	2303      	movs	r3, #3
 800a53c:	600b      	str	r3, [r1, #0]
 800a53e:	f1a5 030b 	sub.w	r3, r5, #11
 800a542:	2b01      	cmp	r3, #1
 800a544:	d806      	bhi.n	800a554 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800a546:	7c83      	ldrb	r3, [r0, #18]
 800a548:	2b1f      	cmp	r3, #31
 800a54a:	d81d      	bhi.n	800a588 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800a54c:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800a550:	74a3      	strb	r3, [r4, #18]
 800a552:	e000      	b.n	800a556 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800a554:	b9d5      	cbnz	r5, 800a58c <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800a556:	2300      	movs	r3, #0
 800a558:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800a55c:	2a06      	cmp	r2, #6
 800a55e:	bf08      	it	eq
 800a560:	60a3      	streq	r3, [r4, #8]
 800a562:	2d0d      	cmp	r5, #13
 800a564:	74e3      	strb	r3, [r4, #19]
 800a566:	8221      	strh	r1, [r4, #16]
 800a568:	68e3      	ldr	r3, [r4, #12]
 800a56a:	d109      	bne.n	800a580 <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800a56c:	b913      	cbnz	r3, 800a574 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800a56e:	4b0a      	ldr	r3, [pc, #40]	; (800a598 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800a570:	60e3      	str	r3, [r4, #12]
 800a572:	e003      	b.n	800a57c <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800a574:	4a09      	ldr	r2, [pc, #36]	; (800a59c <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800a576:	4293      	cmp	r3, r2
 800a578:	d900      	bls.n	800a57c <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800a57a:	60e2      	str	r2, [r4, #12]
 800a57c:	b003      	add	sp, #12
 800a57e:	bd30      	pop	{r4, r5, pc}
 800a580:	2b00      	cmp	r3, #0
 800a582:	d0f4      	beq.n	800a56e <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800a584:	4a06      	ldr	r2, [pc, #24]	; (800a5a0 <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800a586:	e7f6      	b.n	800a576 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800a588:	23ff      	movs	r3, #255	; 0xff
 800a58a:	e7e1      	b.n	800a550 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800a58c:	2d0d      	cmp	r5, #13
 800a58e:	d0e2      	beq.n	800a556 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800a590:	e7ab      	b.n	800a4ea <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800a592:	bf00      	nop
 800a594:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800a598:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800a59c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800a5a0:	017d7840 	cmneq	sp, r0, asr #16

0800a5a4 <PixelConfiguration::Dump()>:
 800a5a4:	4770      	bx	lr
	...

0800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>:
 800a5a8:	b507      	push	{r0, r1, r2, lr}
 800a5aa:	b2cb      	uxtb	r3, r1
 800a5ac:	9300      	str	r3, [sp, #0]
 800a5ae:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800a5b2:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800a5b6:	4601      	mov	r1, r0
 800a5b8:	4803      	ldr	r0, [pc, #12]	; (800a5c8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]+0x20>)
 800a5ba:	6800      	ldr	r0, [r0, #0]
 800a5bc:	f000 fb92 	bl	800ace4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800a5c0:	b003      	add	sp, #12
 800a5c2:	f85d fb04 	ldr.w	pc, [sp], #4
 800a5c6:	bf00      	nop
 800a5c8:	20000724 	andcs	r0, r0, r4, lsr #14

0800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800a5cc:	b538      	push	{r3, r4, r5, lr}
 800a5ce:	2400      	movs	r4, #0
 800a5d0:	4d05      	ldr	r5, [pc, #20]	; (800a5e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800a5d2:	682b      	ldr	r3, [r5, #0]
 800a5d4:	42a3      	cmp	r3, r4
 800a5d6:	d905      	bls.n	800a5e4 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x18>
 800a5d8:	4620      	mov	r0, r4
 800a5da:	2100      	movs	r1, #0
 800a5dc:	f7ff ffe4 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a5e0:	3401      	adds	r4, #1
 800a5e2:	e7f6      	b.n	800a5d2 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800a5e4:	bd38      	pop	{r3, r4, r5, pc}
 800a5e6:	bf00      	nop
 800a5e8:	20000720 	andcs	r0, r0, r0, lsr #14

0800a5ec <PixelPatterns::PixelPatterns(unsigned int)>:
 800a5ec:	2901      	cmp	r1, #1
 800a5ee:	bf28      	it	cs
 800a5f0:	2101      	movcs	r1, #1
 800a5f2:	4b08      	ldr	r3, [pc, #32]	; (800a614 <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800a5f4:	4a08      	ldr	r2, [pc, #32]	; (800a618 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800a5f6:	681b      	ldr	r3, [r3, #0]
 800a5f8:	6013      	str	r3, [r2, #0]
 800a5fa:	4a08      	ldr	r2, [pc, #32]	; (800a61c <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800a5fc:	6011      	str	r1, [r2, #0]
 800a5fe:	685a      	ldr	r2, [r3, #4]
 800a600:	4b07      	ldr	r3, [pc, #28]	; (800a620 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800a602:	601a      	str	r2, [r3, #0]
 800a604:	2200      	movs	r2, #0
 800a606:	4b07      	ldr	r3, [pc, #28]	; (800a624 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800a608:	6819      	ldr	r1, [r3, #0]
 800a60a:	4b07      	ldr	r3, [pc, #28]	; (800a628 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800a60c:	61da      	str	r2, [r3, #28]
 800a60e:	6019      	str	r1, [r3, #0]
 800a610:	619a      	str	r2, [r3, #24]
 800a612:	4770      	bx	lr
 800a614:	20000730 	andcs	r0, r0, r0, lsr r7
 800a618:	20000724 	andcs	r0, r0, r4, lsr #14
 800a61c:	20000718 	andcs	r0, r0, r8, lsl r7
 800a620:	20000720 	andcs	r0, r0, r0, lsr #14
 800a624:	200097a4 	andcs	r9, r0, r4, lsr #15
 800a628:	200006f8 	strdcs	r0, [r0], -r8

0800a62c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800a62c:	b570      	push	{r4, r5, r6, lr}
 800a62e:	460e      	mov	r6, r1
 800a630:	4615      	mov	r5, r2
 800a632:	461c      	mov	r4, r3
 800a634:	f7ff ffca 	bl	800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800a638:	2301      	movs	r3, #1
 800a63a:	4905      	ldr	r1, [pc, #20]	; (800a650 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800a63c:	22ff      	movs	r2, #255	; 0xff
 800a63e:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800a642:	61cb      	str	r3, [r1, #28]
 800a644:	2300      	movs	r3, #0
 800a646:	604d      	str	r5, [r1, #4]
 800a648:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800a64c:	618c      	str	r4, [r1, #24]
 800a64e:	bd70      	pop	{r4, r5, r6, pc}
 800a650:	200006f8 	strdcs	r0, [r0], -r8

0800a654 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800a654:	b570      	push	{r4, r5, r6, lr}
 800a656:	460e      	mov	r6, r1
 800a658:	461c      	mov	r4, r3
 800a65a:	4615      	mov	r5, r2
 800a65c:	f7ff ffb6 	bl	800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800a660:	2302      	movs	r3, #2
 800a662:	4908      	ldr	r1, [pc, #32]	; (800a684 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800a664:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800a668:	61cb      	str	r3, [r1, #28]
 800a66a:	9b04      	ldr	r3, [sp, #16]
 800a66c:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800a670:	604b      	str	r3, [r1, #4]
 800a672:	4b05      	ldr	r3, [pc, #20]	; (800a688 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	610b      	str	r3, [r1, #16]
 800a678:	2300      	movs	r3, #0
 800a67a:	614b      	str	r3, [r1, #20]
 800a67c:	9b05      	ldr	r3, [sp, #20]
 800a67e:	618b      	str	r3, [r1, #24]
 800a680:	bd70      	pop	{r4, r5, r6, pc}
 800a682:	bf00      	nop
 800a684:	200006f8 	strdcs	r0, [r0], -r8
 800a688:	20000720 	andcs	r0, r0, r0, lsr #14

0800a68c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800a68c:	b570      	push	{r4, r5, r6, lr}
 800a68e:	460e      	mov	r6, r1
 800a690:	461d      	mov	r5, r3
 800a692:	4614      	mov	r4, r2
 800a694:	f7ff ff9a 	bl	800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800a698:	2303      	movs	r3, #3
 800a69a:	4907      	ldr	r1, [pc, #28]	; (800a6b8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800a69c:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800a6a0:	61cb      	str	r3, [r1, #28]
 800a6a2:	4b06      	ldr	r3, [pc, #24]	; (800a6bc <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800a6a4:	604d      	str	r5, [r1, #4]
 800a6a6:	681b      	ldr	r3, [r3, #0]
 800a6a8:	608c      	str	r4, [r1, #8]
 800a6aa:	610b      	str	r3, [r1, #16]
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	614b      	str	r3, [r1, #20]
 800a6b0:	9b04      	ldr	r3, [sp, #16]
 800a6b2:	618b      	str	r3, [r1, #24]
 800a6b4:	bd70      	pop	{r4, r5, r6, pc}
 800a6b6:	bf00      	nop
 800a6b8:	200006f8 	strdcs	r0, [r0], -r8
 800a6bc:	20000720 	andcs	r0, r0, r0, lsr #14

0800a6c0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800a6c0:	b570      	push	{r4, r5, r6, lr}
 800a6c2:	460e      	mov	r6, r1
 800a6c4:	461d      	mov	r5, r3
 800a6c6:	4614      	mov	r4, r2
 800a6c8:	f7ff ff80 	bl	800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800a6cc:	2304      	movs	r3, #4
 800a6ce:	4912      	ldr	r1, [pc, #72]	; (800a718 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800a6d0:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800a6d4:	604d      	str	r5, [r1, #4]
 800a6d6:	4d11      	ldr	r5, [pc, #68]	; (800a71c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800a6d8:	61cb      	str	r3, [r1, #28]
 800a6da:	6828      	ldr	r0, [r5, #0]
 800a6dc:	608c      	str	r4, [r1, #8]
 800a6de:	1e43      	subs	r3, r0, #1
 800a6e0:	005b      	lsls	r3, r3, #1
 800a6e2:	b29b      	uxth	r3, r3
 800a6e4:	610b      	str	r3, [r1, #16]
 800a6e6:	2300      	movs	r3, #0
 800a6e8:	4c0d      	ldr	r4, [pc, #52]	; (800a720 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800a6ea:	614b      	str	r3, [r1, #20]
 800a6ec:	6823      	ldr	r3, [r4, #0]
 800a6ee:	b993      	cbnz	r3, 800a716 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800a6f0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800a6f4:	4298      	cmp	r0, r3
 800a6f6:	bf2c      	ite	cs
 800a6f8:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800a6fc:	0080      	lslcc	r0, r0, #2
 800a6fe:	f006 fb81 	bl	8010e04 <operator new[](unsigned int)>
 800a702:	2200      	movs	r2, #0
 800a704:	682b      	ldr	r3, [r5, #0]
 800a706:	6020      	str	r0, [r4, #0]
 800a708:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800a70c:	4298      	cmp	r0, r3
 800a70e:	d002      	beq.n	800a716 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800a710:	f840 2b04 	str.w	r2, [r0], #4
 800a714:	e7fa      	b.n	800a70c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800a716:	bd70      	pop	{r4, r5, r6, pc}
 800a718:	200006f8 	strdcs	r0, [r0], -r8
 800a71c:	20000720 	andcs	r0, r0, r0, lsr #14
 800a720:	2000071c 	andcs	r0, r0, ip, lsl r7

0800a724 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800a724:	b570      	push	{r4, r5, r6, lr}
 800a726:	460e      	mov	r6, r1
 800a728:	461c      	mov	r4, r3
 800a72a:	4615      	mov	r5, r2
 800a72c:	f7ff ff4e 	bl	800a5cc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800a730:	2305      	movs	r3, #5
 800a732:	4907      	ldr	r1, [pc, #28]	; (800a750 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800a734:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800a738:	61cb      	str	r3, [r1, #28]
 800a73a:	9b05      	ldr	r3, [sp, #20]
 800a73c:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800a740:	604b      	str	r3, [r1, #4]
 800a742:	9b04      	ldr	r3, [sp, #16]
 800a744:	610b      	str	r3, [r1, #16]
 800a746:	2300      	movs	r3, #0
 800a748:	614b      	str	r3, [r1, #20]
 800a74a:	9b06      	ldr	r3, [sp, #24]
 800a74c:	618b      	str	r3, [r1, #24]
 800a74e:	bd70      	pop	{r4, r5, r6, pc}
 800a750:	200006f8 	strdcs	r0, [r0], -r8

0800a754 <PixelPatterns::Wheel(unsigned char)>:
 800a754:	43c9      	mvns	r1, r1
 800a756:	b2c9      	uxtb	r1, r1
 800a758:	2954      	cmp	r1, #84	; 0x54
 800a75a:	d809      	bhi.n	800a770 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800a75c:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800a760:	3801      	subs	r0, #1
 800a762:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800a766:	b2c3      	uxtb	r3, r0
 800a768:	b2c8      	uxtb	r0, r1
 800a76a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800a76e:	4770      	bx	lr
 800a770:	29a9      	cmp	r1, #169	; 0xa9
 800a772:	d80b      	bhi.n	800a78c <PixelPatterns::Wheel(unsigned char)+0x38>
 800a774:	3955      	subs	r1, #85	; 0x55
 800a776:	b2c9      	uxtb	r1, r1
 800a778:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800a77c:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800a780:	b2c3      	uxtb	r3, r0
 800a782:	1e48      	subs	r0, r1, #1
 800a784:	b2c0      	uxtb	r0, r0
 800a786:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800a78a:	4770      	bx	lr
 800a78c:	3156      	adds	r1, #86	; 0x56
 800a78e:	b2c9      	uxtb	r1, r1
 800a790:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800a794:	3801      	subs	r0, #1
 800a796:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800a79a:	b2c3      	uxtb	r3, r0
 800a79c:	b2c8      	uxtb	r0, r1
 800a79e:	0400      	lsls	r0, r0, #16
 800a7a0:	e7f1      	b.n	800a786 <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800a7a4 <PixelPatterns::Increment(unsigned int)>:
 800a7a4:	4a0d      	ldr	r2, [pc, #52]	; (800a7dc <PixelPatterns::Increment(unsigned int)+0x38>)
 800a7a6:	b510      	push	{r4, lr}
 800a7a8:	014c      	lsls	r4, r1, #5
 800a7aa:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800a7ae:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800a7b2:	b930      	cbnz	r0, 800a7c2 <PixelPatterns::Increment(unsigned int)+0x1e>
 800a7b4:	690a      	ldr	r2, [r1, #16]
 800a7b6:	3301      	adds	r3, #1
 800a7b8:	4293      	cmp	r3, r2
 800a7ba:	bf18      	it	ne
 800a7bc:	4618      	movne	r0, r3
 800a7be:	6148      	str	r0, [r1, #20]
 800a7c0:	bd10      	pop	{r4, pc}
 800a7c2:	b92b      	cbnz	r3, 800a7d0 <PixelPatterns::Increment(unsigned int)+0x2c>
 800a7c4:	4422      	add	r2, r4
 800a7c6:	6913      	ldr	r3, [r2, #16]
 800a7c8:	3b01      	subs	r3, #1
 800a7ca:	b29b      	uxth	r3, r3
 800a7cc:	6153      	str	r3, [r2, #20]
 800a7ce:	e7f7      	b.n	800a7c0 <PixelPatterns::Increment(unsigned int)+0x1c>
 800a7d0:	3b01      	subs	r3, #1
 800a7d2:	614b      	str	r3, [r1, #20]
 800a7d4:	2b00      	cmp	r3, #0
 800a7d6:	d1f3      	bne.n	800a7c0 <PixelPatterns::Increment(unsigned int)+0x1c>
 800a7d8:	e7f4      	b.n	800a7c4 <PixelPatterns::Increment(unsigned int)+0x20>
 800a7da:	bf00      	nop
 800a7dc:	200006f8 	strdcs	r0, [r0], -r8

0800a7e0 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800a7e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7e4:	4604      	mov	r4, r0
 800a7e6:	460d      	mov	r5, r1
 800a7e8:	2600      	movs	r6, #0
 800a7ea:	4b10      	ldr	r3, [pc, #64]	; (800a82c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800a7ec:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800a830 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800a7f0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a7f4:	695f      	ldr	r7, [r3, #20]
 800a7f6:	f8d8 1000 	ldr.w	r1, [r8]
 800a7fa:	b2b2      	uxth	r2, r6
 800a7fc:	4291      	cmp	r1, r2
 800a7fe:	f106 0601 	add.w	r6, r6, #1
 800a802:	d90c      	bls.n	800a81e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x3e>
 800a804:	0213      	lsls	r3, r2, #8
 800a806:	fbb3 f3f1 	udiv	r3, r3, r1
 800a80a:	443b      	add	r3, r7
 800a80c:	b2d9      	uxtb	r1, r3
 800a80e:	4620      	mov	r0, r4
 800a810:	f7ff ffa0 	bl	800a754 <PixelPatterns::Wheel(unsigned char)>
 800a814:	4601      	mov	r1, r0
 800a816:	4610      	mov	r0, r2
 800a818:	f7ff fec6 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a81c:	e7eb      	b.n	800a7f6 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x16>
 800a81e:	4629      	mov	r1, r5
 800a820:	4620      	mov	r0, r4
 800a822:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a826:	f7ff bfbd 	b.w	800a7a4 <PixelPatterns::Increment(unsigned int)>
 800a82a:	bf00      	nop
 800a82c:	200006f8 	strdcs	r0, [r0], -r8
 800a830:	20000720 	andcs	r0, r0, r0, lsr #14

0800a834 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800a834:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a838:	4605      	mov	r5, r0
 800a83a:	460c      	mov	r4, r1
 800a83c:	f04f 0b00 	mov.w	fp, #0
 800a840:	4b12      	ldr	r3, [pc, #72]	; (800a88c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800a842:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800a890 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800a846:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a84a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800a84e:	f8df a044 	ldr.w	sl, [pc, #68]	; 800a894 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800a852:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800a856:	f8d9 3000 	ldr.w	r3, [r9]
 800a85a:	fa1f f08b 	uxth.w	r0, fp
 800a85e:	4283      	cmp	r3, r0
 800a860:	d90d      	bls.n	800a87e <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4a>
 800a862:	eb08 0300 	add.w	r3, r8, r0
 800a866:	fb0a f303 	mul.w	r3, sl, r3
 800a86a:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800a86e:	bf94      	ite	ls
 800a870:	4631      	movls	r1, r6
 800a872:	4639      	movhi	r1, r7
 800a874:	f7ff fe98 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a878:	f10b 0b01 	add.w	fp, fp, #1
 800a87c:	e7eb      	b.n	800a856 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800a87e:	4621      	mov	r1, r4
 800a880:	4628      	mov	r0, r5
 800a882:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a886:	f7ff bf8d 	b.w	800a7a4 <PixelPatterns::Increment(unsigned int)>
 800a88a:	bf00      	nop
 800a88c:	200006f8 	strdcs	r0, [r0], -r8
 800a890:	20000720 	andcs	r0, r0, r0, lsr #14
 800a894:	aaaaaaab 	bge	6ab5348 <__stack_size+0x6ab3b48>

0800a898 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800a898:	b538      	push	{r3, r4, r5, lr}
 800a89a:	4605      	mov	r5, r0
 800a89c:	460c      	mov	r4, r1
 800a89e:	4b06      	ldr	r3, [pc, #24]	; (800a8b8 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800a8a0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a8a4:	6899      	ldr	r1, [r3, #8]
 800a8a6:	6958      	ldr	r0, [r3, #20]
 800a8a8:	f7ff fe7e 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a8ac:	4621      	mov	r1, r4
 800a8ae:	4628      	mov	r0, r5
 800a8b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a8b4:	f7ff bf76 	b.w	800a7a4 <PixelPatterns::Increment(unsigned int)>
 800a8b8:	200006f8 	strdcs	r0, [r0], -r8

0800a8bc <PixelPatterns::ScannerUpdate(unsigned int)>:
 800a8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8c0:	460d      	mov	r5, r1
 800a8c2:	f04f 0900 	mov.w	r9, #0
 800a8c6:	4a27      	ldr	r2, [pc, #156]	; (800a964 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800a8c8:	b085      	sub	sp, #20
 800a8ca:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800a8ce:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800a8d2:	f8d2 a008 	ldr.w	sl, [r2, #8]
 800a8d6:	00b3      	lsls	r3, r6, #2
 800a8d8:	f8df b08c 	ldr.w	fp, [pc, #140]	; 800a968 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800a8dc:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800a96c <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800a8e0:	9002      	str	r0, [sp, #8]
 800a8e2:	9301      	str	r3, [sp, #4]
 800a8e4:	1bbf      	subs	r7, r7, r6
 800a8e6:	f8db 1000 	ldr.w	r1, [fp]
 800a8ea:	fa1f f489 	uxth.w	r4, r9
 800a8ee:	42a1      	cmp	r1, r4
 800a8f0:	d930      	bls.n	800a954 <PixelPatterns::ScannerUpdate(unsigned int)+0x98>
 800a8f2:	42a6      	cmp	r6, r4
 800a8f4:	d10b      	bne.n	800a90e <PixelPatterns::ScannerUpdate(unsigned int)+0x52>
 800a8f6:	4651      	mov	r1, sl
 800a8f8:	4630      	mov	r0, r6
 800a8fa:	f7ff fe55 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a8fe:	f8d8 1000 	ldr.w	r1, [r8]
 800a902:	9b01      	ldr	r3, [sp, #4]
 800a904:	f841 a003 	str.w	sl, [r1, r3]
 800a908:	f109 0901 	add.w	r9, r9, #1
 800a90c:	e7eb      	b.n	800a8e6 <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800a90e:	42a7      	cmp	r7, r4
 800a910:	d108      	bne.n	800a924 <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800a912:	4651      	mov	r1, sl
 800a914:	4638      	mov	r0, r7
 800a916:	f7ff fe47 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a91a:	f8d8 1000 	ldr.w	r1, [r8]
 800a91e:	f841 a024 	str.w	sl, [r1, r4, lsl #2]
 800a922:	e7f1      	b.n	800a908 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800a924:	f8d8 1000 	ldr.w	r1, [r8]
 800a928:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800a92c:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800a930:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800a934:	0209      	lsls	r1, r1, #8
 800a936:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800a93a:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800a93e:	4301      	orrs	r1, r0
 800a940:	4620      	mov	r0, r4
 800a942:	9103      	str	r1, [sp, #12]
 800a944:	f7ff fe30 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a948:	f8d8 0000 	ldr.w	r0, [r8]
 800a94c:	9903      	ldr	r1, [sp, #12]
 800a94e:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800a952:	e7d9      	b.n	800a908 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800a954:	4629      	mov	r1, r5
 800a956:	9802      	ldr	r0, [sp, #8]
 800a958:	b005      	add	sp, #20
 800a95a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a95e:	f7ff bf21 	b.w	800a7a4 <PixelPatterns::Increment(unsigned int)>
 800a962:	bf00      	nop
 800a964:	200006f8 	strdcs	r0, [r0], -r8
 800a968:	20000720 	andcs	r0, r0, r0, lsr #14
 800a96c:	2000071c 	andcs	r0, r0, ip, lsl r7

0800a970 <PixelPatterns::FadeUpdate(unsigned int)>:
 800a970:	4a21      	ldr	r2, [pc, #132]	; (800a9f8 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800a972:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a976:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800a97a:	4605      	mov	r5, r0
 800a97c:	e9d2 3002 	ldrd	r3, r0, [r2, #8]
 800a980:	460c      	mov	r4, r1
 800a982:	e9d2 6104 	ldrd	r6, r1, [r2, #16]
 800a986:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800a98a:	434a      	muls	r2, r1
 800a98c:	1a77      	subs	r7, r6, r1
 800a98e:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 800a992:	fb07 220c 	mla	r2, r7, ip, r2
 800a996:	fbb2 f2f6 	udiv	r2, r2, r6
 800a99a:	0212      	lsls	r2, r2, #8
 800a99c:	fa1f fc82 	uxth.w	ip, r2
 800a9a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800a9a4:	434a      	muls	r2, r1
 800a9a6:	f3c3 4e07 	ubfx	lr, r3, #16, #8
 800a9aa:	fb07 220e 	mla	r2, r7, lr, r2
 800a9ae:	fbb2 f2f6 	udiv	r2, r2, r6
 800a9b2:	0412      	lsls	r2, r2, #16
 800a9b4:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800a9b8:	ea4c 0202 	orr.w	r2, ip, r2
 800a9bc:	fa5f fc83 	uxtb.w	ip, r3
 800a9c0:	b2c3      	uxtb	r3, r0
 800a9c2:	434b      	muls	r3, r1
 800a9c4:	fb07 330c 	mla	r3, r7, ip, r3
 800a9c8:	fbb3 f3f6 	udiv	r3, r3, r6
 800a9cc:	2700      	movs	r7, #0
 800a9ce:	b2db      	uxtb	r3, r3
 800a9d0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800a9fc <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800a9d4:	ea42 0603 	orr.w	r6, r2, r3
 800a9d8:	f8d8 3000 	ldr.w	r3, [r8]
 800a9dc:	42bb      	cmp	r3, r7
 800a9de:	d905      	bls.n	800a9ec <PixelPatterns::FadeUpdate(unsigned int)+0x7c>
 800a9e0:	4638      	mov	r0, r7
 800a9e2:	4631      	mov	r1, r6
 800a9e4:	f7ff fde0 	bl	800a5a8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800a9e8:	3701      	adds	r7, #1
 800a9ea:	e7f5      	b.n	800a9d8 <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 800a9ec:	4621      	mov	r1, r4
 800a9ee:	4628      	mov	r0, r5
 800a9f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a9f4:	f7ff bed6 	b.w	800a7a4 <PixelPatterns::Increment(unsigned int)>
 800a9f8:	200006f8 	strdcs	r0, [r0], -r8
 800a9fc:	20000720 	andcs	r0, r0, r0, lsr #14

0800aa00 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800aa00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aa02:	4b12      	ldr	r3, [pc, #72]	; (800aa4c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800aa04:	014e      	lsls	r6, r1, #5
 800aa06:	599c      	ldr	r4, [r3, r6]
 800aa08:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800aa0c:	686f      	ldr	r7, [r5, #4]
 800aa0e:	1b14      	subs	r4, r2, r4
 800aa10:	42bc      	cmp	r4, r7
 800aa12:	d319      	bcc.n	800aa48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800aa14:	519a      	str	r2, [r3, r6]
 800aa16:	69eb      	ldr	r3, [r5, #28]
 800aa18:	3b01      	subs	r3, #1
 800aa1a:	2b04      	cmp	r3, #4
 800aa1c:	d814      	bhi.n	800aa48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800aa1e:	e8df f003 	tbb	[pc, r3]
 800aa22:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800aa26:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800aa2a:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800aa2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aa30:	f7ff ff00 	bl	800a834 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800aa34:	e7fa      	b.n	800aa2c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800aa36:	f7ff ff2f 	bl	800a898 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800aa3a:	e7f7      	b.n	800aa2c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800aa3c:	f7ff ff3e 	bl	800a8bc <PixelPatterns::ScannerUpdate(unsigned int)>
 800aa40:	e7f4      	b.n	800aa2c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800aa42:	f7ff ff95 	bl	800a970 <PixelPatterns::FadeUpdate(unsigned int)>
 800aa46:	e7f1      	b.n	800aa2c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800aa48:	2000      	movs	r0, #0
 800aa4a:	e7f0      	b.n	800aa2e <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800aa4c:	200006f8 	strdcs	r0, [r0], -r8

0800aa50 <PixelPatterns::Run()>:
 800aa50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa54:	4605      	mov	r5, r0
 800aa56:	f007 fb79 	bl	801214c <gd32_spi_dma_tx_is_active()>
 800aa5a:	4604      	mov	r4, r0
 800aa5c:	b9c8      	cbnz	r0, 800aa92 <PixelPatterns::Run()+0x42>
 800aa5e:	4606      	mov	r6, r0
 800aa60:	4b0d      	ldr	r3, [pc, #52]	; (800aa98 <PixelPatterns::Run()+0x48>)
 800aa62:	f8df 8038 	ldr.w	r8, [pc, #56]	; 800aa9c <PixelPatterns::Run()+0x4c>
 800aa66:	681f      	ldr	r7, [r3, #0]
 800aa68:	f8d8 3000 	ldr.w	r3, [r8]
 800aa6c:	b2f1      	uxtb	r1, r6
 800aa6e:	428b      	cmp	r3, r1
 800aa70:	f106 0601 	add.w	r6, r6, #1
 800aa74:	d906      	bls.n	800aa84 <PixelPatterns::Run()+0x34>
 800aa76:	463a      	mov	r2, r7
 800aa78:	4628      	mov	r0, r5
 800aa7a:	f7ff ffc1 	bl	800aa00 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800aa7e:	4304      	orrs	r4, r0
 800aa80:	b2e4      	uxtb	r4, r4
 800aa82:	e7f1      	b.n	800aa68 <PixelPatterns::Run()+0x18>
 800aa84:	b12c      	cbz	r4, 800aa92 <PixelPatterns::Run()+0x42>
 800aa86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800aa8a:	4b05      	ldr	r3, [pc, #20]	; (800aaa0 <PixelPatterns::Run()+0x50>)
 800aa8c:	6818      	ldr	r0, [r3, #0]
 800aa8e:	f000 bf69 	b.w	800b964 <WS28xx::Update()>
 800aa92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa96:	bf00      	nop
 800aa98:	200097a4 	andcs	r9, r0, r4, lsr #15
 800aa9c:	20000718 	andcs	r0, r0, r8, lsl r7
 800aaa0:	20000724 	andcs	r0, r0, r4, lsr #14

0800aaa4 <PixelType::GetType(pixel::Type)>:
 800aaa4:	280d      	cmp	r0, #13
 800aaa6:	bfda      	itte	le
 800aaa8:	4b02      	ldrle	r3, [pc, #8]	; (800aab4 <PixelType::GetType(pixel::Type)+0x10>)
 800aaaa:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800aaae:	4802      	ldrgt	r0, [pc, #8]	; (800aab8 <PixelType::GetType(pixel::Type)+0x14>)
 800aab0:	4770      	bx	lr
 800aab2:	bf00      	nop
 800aab4:	0801343d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, ip, sp}
 800aab8:	08013413 	stmdaeq	r1, {r0, r1, r4, sl, ip, sp}

0800aabc <PixelType::GetType(char const*)>:
 800aabc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aabe:	4604      	mov	r4, r0
 800aac0:	2000      	movs	r0, #0
 800aac2:	490f      	ldr	r1, [pc, #60]	; (800ab00 <PixelType::GetType(char const*)+0x44>)
 800aac4:	1e66      	subs	r6, r4, #1
 800aac6:	1e4d      	subs	r5, r1, #1
 800aac8:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800aacc:	461f      	mov	r7, r3
 800aace:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800aad2:	2a19      	cmp	r2, #25
 800aad4:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800aad8:	bf98      	it	ls
 800aada:	f103 0720 	addls.w	r7, r3, #32
 800aade:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800aae2:	f1bc 0f19 	cmp.w	ip, #25
 800aae6:	bf98      	it	ls
 800aae8:	3220      	addls	r2, #32
 800aaea:	42ba      	cmp	r2, r7
 800aaec:	d102      	bne.n	800aaf4 <PixelType::GetType(char const*)+0x38>
 800aaee:	2b00      	cmp	r3, #0
 800aaf0:	d1ea      	bne.n	800aac8 <PixelType::GetType(char const*)+0xc>
 800aaf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aaf4:	3001      	adds	r0, #1
 800aaf6:	280e      	cmp	r0, #14
 800aaf8:	f101 0108 	add.w	r1, r1, #8
 800aafc:	d1e2      	bne.n	800aac4 <PixelType::GetType(char const*)+0x8>
 800aafe:	e7f8      	b.n	800aaf2 <PixelType::GetType(char const*)+0x36>
 800ab00:	0801343d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, ip, sp}

0800ab04 <PixelType::GetMap(char const*)>:
 800ab04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab06:	4605      	mov	r5, r0
 800ab08:	2000      	movs	r0, #0
 800ab0a:	4b11      	ldr	r3, [pc, #68]	; (800ab50 <PixelType::GetMap(char const*)+0x4c>)
 800ab0c:	1e5c      	subs	r4, r3, #1
 800ab0e:	1e6e      	subs	r6, r5, #1
 800ab10:	f103 0c02 	add.w	ip, r3, #2
 800ab14:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800ab18:	4617      	mov	r7, r2
 800ab1a:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800ab1e:	2919      	cmp	r1, #25
 800ab20:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800ab24:	bf98      	it	ls
 800ab26:	f102 0720 	addls.w	r7, r2, #32
 800ab2a:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800ab2e:	f1be 0f19 	cmp.w	lr, #25
 800ab32:	bf98      	it	ls
 800ab34:	3120      	addls	r1, #32
 800ab36:	42b9      	cmp	r1, r7
 800ab38:	d005      	beq.n	800ab46 <PixelType::GetMap(char const*)+0x42>
 800ab3a:	3001      	adds	r0, #1
 800ab3c:	2806      	cmp	r0, #6
 800ab3e:	f103 0304 	add.w	r3, r3, #4
 800ab42:	d1e3      	bne.n	800ab0c <PixelType::GetMap(char const*)+0x8>
 800ab44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab46:	2a00      	cmp	r2, #0
 800ab48:	d0fc      	beq.n	800ab44 <PixelType::GetMap(char const*)+0x40>
 800ab4a:	4564      	cmp	r4, ip
 800ab4c:	d1e2      	bne.n	800ab14 <PixelType::GetMap(char const*)+0x10>
 800ab4e:	e7f9      	b.n	800ab44 <PixelType::GetMap(char const*)+0x40>
 800ab50:	08013425 	stmdaeq	r1, {r0, r2, r5, sl, ip, sp}

0800ab54 <PixelType::GetMap(pixel::Map)>:
 800ab54:	2805      	cmp	r0, #5
 800ab56:	bfda      	itte	le
 800ab58:	4b02      	ldrle	r3, [pc, #8]	; (800ab64 <PixelType::GetMap(pixel::Map)+0x10>)
 800ab5a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800ab5e:	4802      	ldrgt	r0, [pc, #8]	; (800ab68 <PixelType::GetMap(pixel::Map)+0x14>)
 800ab60:	4770      	bx	lr
 800ab62:	bf00      	nop
 800ab64:	08013425 	stmdaeq	r1, {r0, r2, r5, sl, ip, sp}
 800ab68:	0801341b 	stmdaeq	r1, {r0, r1, r3, r4, sl, ip, sp}

0800ab6c <PixelType::ConvertTxH(unsigned char)>:
 800ab6c:	28f0      	cmp	r0, #240	; 0xf0
 800ab6e:	d010      	beq.n	800ab92 <PixelType::ConvertTxH(unsigned char)+0x26>
 800ab70:	d807      	bhi.n	800ab82 <PixelType::ConvertTxH(unsigned char)+0x16>
 800ab72:	28c0      	cmp	r0, #192	; 0xc0
 800ab74:	d00f      	beq.n	800ab96 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800ab76:	28e0      	cmp	r0, #224	; 0xe0
 800ab78:	d00f      	beq.n	800ab9a <PixelType::ConvertTxH(unsigned char)+0x2e>
 800ab7a:	2880      	cmp	r0, #128	; 0x80
 800ab7c:	d113      	bne.n	800aba6 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800ab7e:	480b      	ldr	r0, [pc, #44]	; (800abac <PixelType::ConvertTxH(unsigned char)+0x40>)
 800ab80:	4770      	bx	lr
 800ab82:	28fc      	cmp	r0, #252	; 0xfc
 800ab84:	d00b      	beq.n	800ab9e <PixelType::ConvertTxH(unsigned char)+0x32>
 800ab86:	28fe      	cmp	r0, #254	; 0xfe
 800ab88:	d00b      	beq.n	800aba2 <PixelType::ConvertTxH(unsigned char)+0x36>
 800ab8a:	28f8      	cmp	r0, #248	; 0xf8
 800ab8c:	d10b      	bne.n	800aba6 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800ab8e:	4808      	ldr	r0, [pc, #32]	; (800abb0 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800ab90:	4770      	bx	lr
 800ab92:	4808      	ldr	r0, [pc, #32]	; (800abb4 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800ab94:	4770      	bx	lr
 800ab96:	4808      	ldr	r0, [pc, #32]	; (800abb8 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800ab98:	4770      	bx	lr
 800ab9a:	4808      	ldr	r0, [pc, #32]	; (800abbc <PixelType::ConvertTxH(unsigned char)+0x50>)
 800ab9c:	4770      	bx	lr
 800ab9e:	4808      	ldr	r0, [pc, #32]	; (800abc0 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800aba0:	4770      	bx	lr
 800aba2:	4808      	ldr	r0, [pc, #32]	; (800abc4 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800aba4:	4770      	bx	lr
 800aba6:	2000      	movs	r0, #0
 800aba8:	4770      	bx	lr
 800abaa:	bf00      	nop
 800abac:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800abb0:	3f480000 	svccc	0x00480000
 800abb4:	3f200000 	svccc	0x00200000
 800abb8:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800abbc:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800abc0:	3f700000 	svccc	0x00700000
 800abc4:	3f8c0000 	svccc	0x008c0000

0800abc8 <PixelType::ConvertTxH(float)>:
 800abc8:	b510      	push	{r4, lr}
 800abca:	491d      	ldr	r1, [pc, #116]	; (800ac40 <PixelType::ConvertTxH(float)+0x78>)
 800abcc:	4604      	mov	r4, r0
 800abce:	f7fc fc6b 	bl	80074a8 <__aeabi_fcmplt>
 800abd2:	bb30      	cbnz	r0, 800ac22 <PixelType::ConvertTxH(float)+0x5a>
 800abd4:	4620      	mov	r0, r4
 800abd6:	491b      	ldr	r1, [pc, #108]	; (800ac44 <PixelType::ConvertTxH(float)+0x7c>)
 800abd8:	f7fc fc66 	bl	80074a8 <__aeabi_fcmplt>
 800abdc:	bb18      	cbnz	r0, 800ac26 <PixelType::ConvertTxH(float)+0x5e>
 800abde:	4620      	mov	r0, r4
 800abe0:	4919      	ldr	r1, [pc, #100]	; (800ac48 <PixelType::ConvertTxH(float)+0x80>)
 800abe2:	f7fc fc61 	bl	80074a8 <__aeabi_fcmplt>
 800abe6:	bb00      	cbnz	r0, 800ac2a <PixelType::ConvertTxH(float)+0x62>
 800abe8:	4620      	mov	r0, r4
 800abea:	4918      	ldr	r1, [pc, #96]	; (800ac4c <PixelType::ConvertTxH(float)+0x84>)
 800abec:	f7fc fc5c 	bl	80074a8 <__aeabi_fcmplt>
 800abf0:	b9e8      	cbnz	r0, 800ac2e <PixelType::ConvertTxH(float)+0x66>
 800abf2:	4620      	mov	r0, r4
 800abf4:	4916      	ldr	r1, [pc, #88]	; (800ac50 <PixelType::ConvertTxH(float)+0x88>)
 800abf6:	f7fc fc57 	bl	80074a8 <__aeabi_fcmplt>
 800abfa:	b9d0      	cbnz	r0, 800ac32 <PixelType::ConvertTxH(float)+0x6a>
 800abfc:	4620      	mov	r0, r4
 800abfe:	4915      	ldr	r1, [pc, #84]	; (800ac54 <PixelType::ConvertTxH(float)+0x8c>)
 800ac00:	f7fc fc52 	bl	80074a8 <__aeabi_fcmplt>
 800ac04:	b9b8      	cbnz	r0, 800ac36 <PixelType::ConvertTxH(float)+0x6e>
 800ac06:	4620      	mov	r0, r4
 800ac08:	4913      	ldr	r1, [pc, #76]	; (800ac58 <PixelType::ConvertTxH(float)+0x90>)
 800ac0a:	f7fc fc4d 	bl	80074a8 <__aeabi_fcmplt>
 800ac0e:	b9a0      	cbnz	r0, 800ac3a <PixelType::ConvertTxH(float)+0x72>
 800ac10:	4620      	mov	r0, r4
 800ac12:	4912      	ldr	r1, [pc, #72]	; (800ac5c <PixelType::ConvertTxH(float)+0x94>)
 800ac14:	f7fc fc48 	bl	80074a8 <__aeabi_fcmplt>
 800ac18:	2800      	cmp	r0, #0
 800ac1a:	bf14      	ite	ne
 800ac1c:	20fe      	movne	r0, #254	; 0xfe
 800ac1e:	2000      	moveq	r0, #0
 800ac20:	bd10      	pop	{r4, pc}
 800ac22:	2000      	movs	r0, #0
 800ac24:	e7fc      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac26:	2080      	movs	r0, #128	; 0x80
 800ac28:	e7fa      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac2a:	20c0      	movs	r0, #192	; 0xc0
 800ac2c:	e7f8      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac2e:	20e0      	movs	r0, #224	; 0xe0
 800ac30:	e7f6      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac32:	20f0      	movs	r0, #240	; 0xf0
 800ac34:	e7f4      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac36:	20f8      	movs	r0, #248	; 0xf8
 800ac38:	e7f2      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac3a:	20fc      	movs	r0, #252	; 0xfc
 800ac3c:	e7f0      	b.n	800ac20 <PixelType::ConvertTxH(float)+0x58>
 800ac3e:	bf00      	nop
 800ac40:	3da00000 	stccc	0, cr0, [r0]
 800ac44:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800ac48:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800ac4c:	3f0c0000 	svccc	0x000c0000
 800ac50:	3f340000 	svccc	0x00340000
 800ac54:	3f5c0000 	svccc	0x005c0000
 800ac58:	3f820000 	svccc	0x00820000
 800ac5c:	3f960000 	svccc	0x00960000

0800ac60 <WS28xx::Print()>:
 800ac60:	b513      	push	{r0, r1, r4, lr}
 800ac62:	4604      	mov	r4, r0
 800ac64:	4819      	ldr	r0, [pc, #100]	; (800accc <WS28xx::Print()+0x6c>)
 800ac66:	f7fd ffbf 	bl	8008be8 <printf>
 800ac6a:	6820      	ldr	r0, [r4, #0]
 800ac6c:	f7ff ff1a 	bl	800aaa4 <PixelType::GetType(pixel::Type)>
 800ac70:	6822      	ldr	r2, [r4, #0]
 800ac72:	4601      	mov	r1, r0
 800ac74:	4816      	ldr	r0, [pc, #88]	; (800acd0 <WS28xx::Print()+0x70>)
 800ac76:	f7fd ffb7 	bl	8008be8 <printf>
 800ac7a:	6861      	ldr	r1, [r4, #4]
 800ac7c:	4815      	ldr	r0, [pc, #84]	; (800acd4 <WS28xx::Print()+0x74>)
 800ac7e:	f7fd ffb3 	bl	8008be8 <printf>
 800ac82:	7ca3      	ldrb	r3, [r4, #18]
 800ac84:	b1fb      	cbz	r3, 800acc6 <WS28xx::Print()+0x66>
 800ac86:	68a0      	ldr	r0, [r4, #8]
 800ac88:	f7ff ff64 	bl	800ab54 <PixelType::GetMap(pixel::Map)>
 800ac8c:	68a2      	ldr	r2, [r4, #8]
 800ac8e:	4601      	mov	r1, r0
 800ac90:	4811      	ldr	r0, [pc, #68]	; (800acd8 <WS28xx::Print()+0x78>)
 800ac92:	f7fd ffa9 	bl	8008be8 <printf>
 800ac96:	7c20      	ldrb	r0, [r4, #16]
 800ac98:	f7ff ff68 	bl	800ab6c <PixelType::ConvertTxH(unsigned char)>
 800ac9c:	f7fc ff3a 	bl	8007b14 <__aeabi_f2d>
 800aca0:	460b      	mov	r3, r1
 800aca2:	7c21      	ldrb	r1, [r4, #16]
 800aca4:	4602      	mov	r2, r0
 800aca6:	9100      	str	r1, [sp, #0]
 800aca8:	480c      	ldr	r0, [pc, #48]	; (800acdc <WS28xx::Print()+0x7c>)
 800acaa:	f7fd ff9d 	bl	8008be8 <printf>
 800acae:	7c60      	ldrb	r0, [r4, #17]
 800acb0:	f7ff ff5c 	bl	800ab6c <PixelType::ConvertTxH(unsigned char)>
 800acb4:	f7fc ff2e 	bl	8007b14 <__aeabi_f2d>
 800acb8:	460b      	mov	r3, r1
 800acba:	7c61      	ldrb	r1, [r4, #17]
 800acbc:	4602      	mov	r2, r0
 800acbe:	9100      	str	r1, [sp, #0]
 800acc0:	4807      	ldr	r0, [pc, #28]	; (800ace0 <WS28xx::Print()+0x80>)
 800acc2:	f7fd ff91 	bl	8008be8 <printf>
 800acc6:	b002      	add	sp, #8
 800acc8:	bd10      	pop	{r4, pc}
 800acca:	bf00      	nop
 800accc:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 800acd0:	080134bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, ip, sp}
 800acd4:	080134d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, ip, sp}
 800acd8:	080134e2 	stmdaeq	r1, {r1, r5, r6, r7, sl, ip, sp}
 800acdc:	080134f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, sl, ip, sp}
 800ace0:	0801350e 	stmdaeq	r1, {r1, r2, r3, r8, sl, ip, sp}

0800ace4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800ace4:	b530      	push	{r4, r5, lr}
 800ace6:	7c84      	ldrb	r4, [r0, #18]
 800ace8:	f89d c00c 	ldrb.w	ip, [sp, #12]
 800acec:	b994      	cbnz	r4, 800ad14 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 800acee:	6804      	ldr	r4, [r0, #0]
 800acf0:	f1a4 0e0b 	sub.w	lr, r4, #11
 800acf4:	f1be 0f01 	cmp.w	lr, #1
 800acf8:	d93d      	bls.n	800ad76 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x92>
 800acfa:	b9d4      	cbnz	r4, 800ad32 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4e>
 800acfc:	6944      	ldr	r4, [r0, #20]
 800acfe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800ad02:	5462      	strb	r2, [r4, r1]
 800ad04:	6942      	ldr	r2, [r0, #20]
 800ad06:	440a      	add	r2, r1
 800ad08:	7053      	strb	r3, [r2, #1]
 800ad0a:	6943      	ldr	r3, [r0, #20]
 800ad0c:	4419      	add	r1, r3
 800ad0e:	f881 c002 	strb.w	ip, [r1, #2]
 800ad12:	bd30      	pop	{r4, r5, pc}
 800ad14:	6884      	ldr	r4, [r0, #8]
 800ad16:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800ad1a:	00c9      	lsls	r1, r1, #3
 800ad1c:	2c05      	cmp	r4, #5
 800ad1e:	f200 812d 	bhi.w	800af7c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x298>
 800ad22:	e8df f014 	tbh	[pc, r4, lsl #1]
 800ad26:	02ed012b 	rsceq	r0, sp, #-1073741814	; 0xc000000a
 800ad2a:	04140384 	ldreq	r0, [r4], #-900	; 0xfffffc7c
 800ad2e:	0202003b 	andeq	r0, r2, #59	; 0x3b
 800ad32:	ea6f 0e9c 	mvn.w	lr, ip, lsr #2
 800ad36:	ea6f 1413 	mvn.w	r4, r3, lsr #4
 800ad3a:	f082 05c0 	eor.w	r5, r2, #192	; 0xc0
 800ad3e:	f00e 0e30 	and.w	lr, lr, #48	; 0x30
 800ad42:	f004 040c 	and.w	r4, r4, #12
 800ad46:	ea4e 1e95 	orr.w	lr, lr, r5, lsr #6
 800ad4a:	ea4e 0e04 	orr.w	lr, lr, r4
 800ad4e:	6944      	ldr	r4, [r0, #20]
 800ad50:	3101      	adds	r1, #1
 800ad52:	f06e 0e3f 	orn	lr, lr, #63	; 0x3f
 800ad56:	f804 e021 	strb.w	lr, [r4, r1, lsl #2]
 800ad5a:	6944      	ldr	r4, [r0, #20]
 800ad5c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800ad60:	f884 c001 	strb.w	ip, [r4, #1]
 800ad64:	6944      	ldr	r4, [r0, #20]
 800ad66:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800ad6a:	70a3      	strb	r3, [r4, #2]
 800ad6c:	6943      	ldr	r3, [r0, #20]
 800ad6e:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800ad72:	70ca      	strb	r2, [r1, #3]
 800ad74:	bd30      	pop	{r4, r5, pc}
 800ad76:	6944      	ldr	r4, [r0, #20]
 800ad78:	7cc5      	ldrb	r5, [r0, #19]
 800ad7a:	3101      	adds	r1, #1
 800ad7c:	f804 5021 	strb.w	r5, [r4, r1, lsl #2]
 800ad80:	6944      	ldr	r4, [r0, #20]
 800ad82:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800ad86:	7062      	strb	r2, [r4, #1]
 800ad88:	6942      	ldr	r2, [r0, #20]
 800ad8a:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800ad8e:	7093      	strb	r3, [r2, #2]
 800ad90:	6943      	ldr	r3, [r0, #20]
 800ad92:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800ad96:	f881 c003 	strb.w	ip, [r1, #3]
 800ad9a:	bd30      	pop	{r4, r5, pc}
 800ad9c:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ada0:	bf0c      	ite	eq
 800ada2:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800ada6:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800adaa:	6945      	ldr	r5, [r0, #20]
 800adac:	1c4c      	adds	r4, r1, #1
 800adae:	f805 e004 	strb.w	lr, [r5, r4]
 800adb2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800adb6:	bf0c      	ite	eq
 800adb8:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800adbc:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800adc0:	6945      	ldr	r5, [r0, #20]
 800adc2:	1c8c      	adds	r4, r1, #2
 800adc4:	f805 e004 	strb.w	lr, [r5, r4]
 800adc8:	f01c 0f20 	tst.w	ip, #32
 800adcc:	bf0c      	ite	eq
 800adce:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800add2:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800add6:	6945      	ldr	r5, [r0, #20]
 800add8:	1ccc      	adds	r4, r1, #3
 800adda:	f805 e004 	strb.w	lr, [r5, r4]
 800adde:	f01c 0f10 	tst.w	ip, #16
 800ade2:	bf0c      	ite	eq
 800ade4:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800ade8:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800adec:	6945      	ldr	r5, [r0, #20]
 800adee:	1d0c      	adds	r4, r1, #4
 800adf0:	f01c 0f08 	tst.w	ip, #8
 800adf4:	f805 e004 	strb.w	lr, [r5, r4]
 800adf8:	bf0c      	ite	eq
 800adfa:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800adfe:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800ae02:	6945      	ldr	r5, [r0, #20]
 800ae04:	1d4c      	adds	r4, r1, #5
 800ae06:	f01c 0f04 	tst.w	ip, #4
 800ae0a:	f805 e004 	strb.w	lr, [r5, r4]
 800ae0e:	bf0c      	ite	eq
 800ae10:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800ae14:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800ae18:	6945      	ldr	r5, [r0, #20]
 800ae1a:	1d8c      	adds	r4, r1, #6
 800ae1c:	f01c 0f02 	tst.w	ip, #2
 800ae20:	f805 e004 	strb.w	lr, [r5, r4]
 800ae24:	bf0c      	ite	eq
 800ae26:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800ae2a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800ae2e:	6945      	ldr	r5, [r0, #20]
 800ae30:	1dcc      	adds	r4, r1, #7
 800ae32:	f01c 0f01 	tst.w	ip, #1
 800ae36:	f805 e004 	strb.w	lr, [r5, r4]
 800ae3a:	bf14      	ite	ne
 800ae3c:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800ae40:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800ae44:	6945      	ldr	r5, [r0, #20]
 800ae46:	f101 0408 	add.w	r4, r1, #8
 800ae4a:	f805 c004 	strb.w	ip, [r5, r4]
 800ae4e:	0615      	lsls	r5, r2, #24
 800ae50:	bf54      	ite	pl
 800ae52:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800ae56:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800ae5a:	6945      	ldr	r5, [r0, #20]
 800ae5c:	f101 0409 	add.w	r4, r1, #9
 800ae60:	f805 c004 	strb.w	ip, [r5, r4]
 800ae64:	0655      	lsls	r5, r2, #25
 800ae66:	bf54      	ite	pl
 800ae68:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800ae6c:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800ae70:	6945      	ldr	r5, [r0, #20]
 800ae72:	f101 040a 	add.w	r4, r1, #10
 800ae76:	f805 c004 	strb.w	ip, [r5, r4]
 800ae7a:	0695      	lsls	r5, r2, #26
 800ae7c:	bf54      	ite	pl
 800ae7e:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800ae82:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800ae86:	6945      	ldr	r5, [r0, #20]
 800ae88:	f101 040b 	add.w	r4, r1, #11
 800ae8c:	f805 c004 	strb.w	ip, [r5, r4]
 800ae90:	06d5      	lsls	r5, r2, #27
 800ae92:	bf54      	ite	pl
 800ae94:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800ae98:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800ae9c:	6945      	ldr	r5, [r0, #20]
 800ae9e:	f101 040c 	add.w	r4, r1, #12
 800aea2:	f805 c004 	strb.w	ip, [r5, r4]
 800aea6:	0715      	lsls	r5, r2, #28
 800aea8:	bf54      	ite	pl
 800aeaa:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800aeae:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800aeb2:	6945      	ldr	r5, [r0, #20]
 800aeb4:	f101 040d 	add.w	r4, r1, #13
 800aeb8:	f805 c004 	strb.w	ip, [r5, r4]
 800aebc:	0755      	lsls	r5, r2, #29
 800aebe:	bf54      	ite	pl
 800aec0:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800aec4:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800aec8:	6945      	ldr	r5, [r0, #20]
 800aeca:	f101 040e 	add.w	r4, r1, #14
 800aece:	f805 c004 	strb.w	ip, [r5, r4]
 800aed2:	0795      	lsls	r5, r2, #30
 800aed4:	bf58      	it	pl
 800aed6:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800aeda:	6945      	ldr	r5, [r0, #20]
 800aedc:	bf48      	it	mi
 800aede:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800aee2:	f101 040f 	add.w	r4, r1, #15
 800aee6:	f805 c004 	strb.w	ip, [r5, r4]
 800aeea:	07d5      	lsls	r5, r2, #31
 800aeec:	bf4c      	ite	mi
 800aeee:	7c45      	ldrbmi	r5, [r0, #17]
 800aef0:	7c05      	ldrbpl	r5, [r0, #16]
 800aef2:	6942      	ldr	r2, [r0, #20]
 800aef4:	f101 0410 	add.w	r4, r1, #16
 800aef8:	5515      	strb	r5, [r2, r4]
 800aefa:	061c      	lsls	r4, r3, #24
 800aefc:	bf54      	ite	pl
 800aefe:	7c05      	ldrbpl	r5, [r0, #16]
 800af00:	7c45      	ldrbmi	r5, [r0, #17]
 800af02:	6944      	ldr	r4, [r0, #20]
 800af04:	f101 0211 	add.w	r2, r1, #17
 800af08:	54a5      	strb	r5, [r4, r2]
 800af0a:	065d      	lsls	r5, r3, #25
 800af0c:	bf54      	ite	pl
 800af0e:	7c05      	ldrbpl	r5, [r0, #16]
 800af10:	7c45      	ldrbmi	r5, [r0, #17]
 800af12:	6944      	ldr	r4, [r0, #20]
 800af14:	f101 0212 	add.w	r2, r1, #18
 800af18:	54a5      	strb	r5, [r4, r2]
 800af1a:	069c      	lsls	r4, r3, #26
 800af1c:	bf54      	ite	pl
 800af1e:	7c05      	ldrbpl	r5, [r0, #16]
 800af20:	7c45      	ldrbmi	r5, [r0, #17]
 800af22:	6944      	ldr	r4, [r0, #20]
 800af24:	f101 0213 	add.w	r2, r1, #19
 800af28:	54a5      	strb	r5, [r4, r2]
 800af2a:	06dd      	lsls	r5, r3, #27
 800af2c:	bf54      	ite	pl
 800af2e:	7c05      	ldrbpl	r5, [r0, #16]
 800af30:	7c45      	ldrbmi	r5, [r0, #17]
 800af32:	6944      	ldr	r4, [r0, #20]
 800af34:	f101 0214 	add.w	r2, r1, #20
 800af38:	54a5      	strb	r5, [r4, r2]
 800af3a:	071c      	lsls	r4, r3, #28
 800af3c:	bf54      	ite	pl
 800af3e:	7c05      	ldrbpl	r5, [r0, #16]
 800af40:	7c45      	ldrbmi	r5, [r0, #17]
 800af42:	6944      	ldr	r4, [r0, #20]
 800af44:	f101 0215 	add.w	r2, r1, #21
 800af48:	54a5      	strb	r5, [r4, r2]
 800af4a:	075d      	lsls	r5, r3, #29
 800af4c:	bf54      	ite	pl
 800af4e:	7c05      	ldrbpl	r5, [r0, #16]
 800af50:	7c45      	ldrbmi	r5, [r0, #17]
 800af52:	6944      	ldr	r4, [r0, #20]
 800af54:	f101 0216 	add.w	r2, r1, #22
 800af58:	54a5      	strb	r5, [r4, r2]
 800af5a:	079c      	lsls	r4, r3, #30
 800af5c:	bf54      	ite	pl
 800af5e:	7c05      	ldrbpl	r5, [r0, #16]
 800af60:	7c45      	ldrbmi	r5, [r0, #17]
 800af62:	6944      	ldr	r4, [r0, #20]
 800af64:	f101 0217 	add.w	r2, r1, #23
 800af68:	54a5      	strb	r5, [r4, r2]
 800af6a:	3118      	adds	r1, #24
 800af6c:	f013 0f01 	tst.w	r3, #1
 800af70:	f000 80d9 	beq.w	800b126 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x442>
 800af74:	7c42      	ldrb	r2, [r0, #17]
 800af76:	6943      	ldr	r3, [r0, #20]
 800af78:	545a      	strb	r2, [r3, r1]
 800af7a:	bd30      	pop	{r4, r5, pc}
 800af7c:	0615      	lsls	r5, r2, #24
 800af7e:	bf54      	ite	pl
 800af80:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800af84:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800af88:	6945      	ldr	r5, [r0, #20]
 800af8a:	1c4c      	adds	r4, r1, #1
 800af8c:	f805 e004 	strb.w	lr, [r5, r4]
 800af90:	0655      	lsls	r5, r2, #25
 800af92:	bf54      	ite	pl
 800af94:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800af98:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800af9c:	6945      	ldr	r5, [r0, #20]
 800af9e:	1c8c      	adds	r4, r1, #2
 800afa0:	f805 e004 	strb.w	lr, [r5, r4]
 800afa4:	0695      	lsls	r5, r2, #26
 800afa6:	bf54      	ite	pl
 800afa8:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800afac:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800afb0:	6945      	ldr	r5, [r0, #20]
 800afb2:	1ccc      	adds	r4, r1, #3
 800afb4:	f805 e004 	strb.w	lr, [r5, r4]
 800afb8:	06d5      	lsls	r5, r2, #27
 800afba:	bf54      	ite	pl
 800afbc:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800afc0:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800afc4:	6945      	ldr	r5, [r0, #20]
 800afc6:	1d0c      	adds	r4, r1, #4
 800afc8:	f805 e004 	strb.w	lr, [r5, r4]
 800afcc:	0715      	lsls	r5, r2, #28
 800afce:	bf54      	ite	pl
 800afd0:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800afd4:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800afd8:	6945      	ldr	r5, [r0, #20]
 800afda:	1d4c      	adds	r4, r1, #5
 800afdc:	f805 e004 	strb.w	lr, [r5, r4]
 800afe0:	0755      	lsls	r5, r2, #29
 800afe2:	bf54      	ite	pl
 800afe4:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800afe8:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800afec:	6945      	ldr	r5, [r0, #20]
 800afee:	1d8c      	adds	r4, r1, #6
 800aff0:	f805 e004 	strb.w	lr, [r5, r4]
 800aff4:	0795      	lsls	r5, r2, #30
 800aff6:	bf58      	it	pl
 800aff8:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800affc:	6945      	ldr	r5, [r0, #20]
 800affe:	bf48      	it	mi
 800b000:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b004:	1dcc      	adds	r4, r1, #7
 800b006:	f805 e004 	strb.w	lr, [r5, r4]
 800b00a:	07d5      	lsls	r5, r2, #31
 800b00c:	bf4c      	ite	mi
 800b00e:	7c45      	ldrbmi	r5, [r0, #17]
 800b010:	7c05      	ldrbpl	r5, [r0, #16]
 800b012:	6942      	ldr	r2, [r0, #20]
 800b014:	f101 0408 	add.w	r4, r1, #8
 800b018:	5515      	strb	r5, [r2, r4]
 800b01a:	061c      	lsls	r4, r3, #24
 800b01c:	bf54      	ite	pl
 800b01e:	7c05      	ldrbpl	r5, [r0, #16]
 800b020:	7c45      	ldrbmi	r5, [r0, #17]
 800b022:	6944      	ldr	r4, [r0, #20]
 800b024:	f101 0209 	add.w	r2, r1, #9
 800b028:	54a5      	strb	r5, [r4, r2]
 800b02a:	065d      	lsls	r5, r3, #25
 800b02c:	bf54      	ite	pl
 800b02e:	7c05      	ldrbpl	r5, [r0, #16]
 800b030:	7c45      	ldrbmi	r5, [r0, #17]
 800b032:	6944      	ldr	r4, [r0, #20]
 800b034:	f101 020a 	add.w	r2, r1, #10
 800b038:	54a5      	strb	r5, [r4, r2]
 800b03a:	069c      	lsls	r4, r3, #26
 800b03c:	bf54      	ite	pl
 800b03e:	7c05      	ldrbpl	r5, [r0, #16]
 800b040:	7c45      	ldrbmi	r5, [r0, #17]
 800b042:	6944      	ldr	r4, [r0, #20]
 800b044:	f101 020b 	add.w	r2, r1, #11
 800b048:	54a5      	strb	r5, [r4, r2]
 800b04a:	06dd      	lsls	r5, r3, #27
 800b04c:	bf54      	ite	pl
 800b04e:	7c05      	ldrbpl	r5, [r0, #16]
 800b050:	7c45      	ldrbmi	r5, [r0, #17]
 800b052:	6944      	ldr	r4, [r0, #20]
 800b054:	f101 020c 	add.w	r2, r1, #12
 800b058:	54a5      	strb	r5, [r4, r2]
 800b05a:	071c      	lsls	r4, r3, #28
 800b05c:	bf54      	ite	pl
 800b05e:	7c05      	ldrbpl	r5, [r0, #16]
 800b060:	7c45      	ldrbmi	r5, [r0, #17]
 800b062:	6944      	ldr	r4, [r0, #20]
 800b064:	f101 020d 	add.w	r2, r1, #13
 800b068:	54a5      	strb	r5, [r4, r2]
 800b06a:	075d      	lsls	r5, r3, #29
 800b06c:	bf54      	ite	pl
 800b06e:	7c05      	ldrbpl	r5, [r0, #16]
 800b070:	7c45      	ldrbmi	r5, [r0, #17]
 800b072:	6944      	ldr	r4, [r0, #20]
 800b074:	f101 020e 	add.w	r2, r1, #14
 800b078:	54a5      	strb	r5, [r4, r2]
 800b07a:	079c      	lsls	r4, r3, #30
 800b07c:	bf58      	it	pl
 800b07e:	7c05      	ldrbpl	r5, [r0, #16]
 800b080:	6944      	ldr	r4, [r0, #20]
 800b082:	bf48      	it	mi
 800b084:	7c45      	ldrbmi	r5, [r0, #17]
 800b086:	f101 020f 	add.w	r2, r1, #15
 800b08a:	54a5      	strb	r5, [r4, r2]
 800b08c:	07db      	lsls	r3, r3, #31
 800b08e:	bf4c      	ite	mi
 800b090:	7c44      	ldrbmi	r4, [r0, #17]
 800b092:	7c04      	ldrbpl	r4, [r0, #16]
 800b094:	6943      	ldr	r3, [r0, #20]
 800b096:	f101 0210 	add.w	r2, r1, #16
 800b09a:	549c      	strb	r4, [r3, r2]
 800b09c:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b0a0:	bf0c      	ite	eq
 800b0a2:	7c04      	ldrbeq	r4, [r0, #16]
 800b0a4:	7c44      	ldrbne	r4, [r0, #17]
 800b0a6:	6942      	ldr	r2, [r0, #20]
 800b0a8:	f101 0311 	add.w	r3, r1, #17
 800b0ac:	54d4      	strb	r4, [r2, r3]
 800b0ae:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b0b2:	bf0c      	ite	eq
 800b0b4:	7c04      	ldrbeq	r4, [r0, #16]
 800b0b6:	7c44      	ldrbne	r4, [r0, #17]
 800b0b8:	6942      	ldr	r2, [r0, #20]
 800b0ba:	f101 0312 	add.w	r3, r1, #18
 800b0be:	54d4      	strb	r4, [r2, r3]
 800b0c0:	f01c 0f20 	tst.w	ip, #32
 800b0c4:	bf0c      	ite	eq
 800b0c6:	7c04      	ldrbeq	r4, [r0, #16]
 800b0c8:	7c44      	ldrbne	r4, [r0, #17]
 800b0ca:	6942      	ldr	r2, [r0, #20]
 800b0cc:	f101 0313 	add.w	r3, r1, #19
 800b0d0:	54d4      	strb	r4, [r2, r3]
 800b0d2:	f01c 0f10 	tst.w	ip, #16
 800b0d6:	bf0c      	ite	eq
 800b0d8:	7c04      	ldrbeq	r4, [r0, #16]
 800b0da:	7c44      	ldrbne	r4, [r0, #17]
 800b0dc:	6942      	ldr	r2, [r0, #20]
 800b0de:	f101 0314 	add.w	r3, r1, #20
 800b0e2:	54d4      	strb	r4, [r2, r3]
 800b0e4:	f01c 0f08 	tst.w	ip, #8
 800b0e8:	bf0c      	ite	eq
 800b0ea:	7c04      	ldrbeq	r4, [r0, #16]
 800b0ec:	7c44      	ldrbne	r4, [r0, #17]
 800b0ee:	6942      	ldr	r2, [r0, #20]
 800b0f0:	f101 0315 	add.w	r3, r1, #21
 800b0f4:	54d4      	strb	r4, [r2, r3]
 800b0f6:	f01c 0f04 	tst.w	ip, #4
 800b0fa:	bf0c      	ite	eq
 800b0fc:	7c04      	ldrbeq	r4, [r0, #16]
 800b0fe:	7c44      	ldrbne	r4, [r0, #17]
 800b100:	6942      	ldr	r2, [r0, #20]
 800b102:	f101 0316 	add.w	r3, r1, #22
 800b106:	54d4      	strb	r4, [r2, r3]
 800b108:	f01c 0f02 	tst.w	ip, #2
 800b10c:	bf0c      	ite	eq
 800b10e:	7c04      	ldrbeq	r4, [r0, #16]
 800b110:	7c44      	ldrbne	r4, [r0, #17]
 800b112:	6942      	ldr	r2, [r0, #20]
 800b114:	f101 0317 	add.w	r3, r1, #23
 800b118:	f01c 0f01 	tst.w	ip, #1
 800b11c:	54d4      	strb	r4, [r2, r3]
 800b11e:	f101 0118 	add.w	r1, r1, #24
 800b122:	f47f af27 	bne.w	800af74 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x290>
 800b126:	7c02      	ldrb	r2, [r0, #16]
 800b128:	e725      	b.n	800af76 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x292>
 800b12a:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b12e:	bf0c      	ite	eq
 800b130:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b134:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b138:	6945      	ldr	r5, [r0, #20]
 800b13a:	1c4c      	adds	r4, r1, #1
 800b13c:	f805 e004 	strb.w	lr, [r5, r4]
 800b140:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b144:	bf0c      	ite	eq
 800b146:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b14a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b14e:	6945      	ldr	r5, [r0, #20]
 800b150:	1c8c      	adds	r4, r1, #2
 800b152:	f805 e004 	strb.w	lr, [r5, r4]
 800b156:	f01c 0f20 	tst.w	ip, #32
 800b15a:	bf0c      	ite	eq
 800b15c:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b160:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b164:	6945      	ldr	r5, [r0, #20]
 800b166:	1ccc      	adds	r4, r1, #3
 800b168:	f805 e004 	strb.w	lr, [r5, r4]
 800b16c:	f01c 0f10 	tst.w	ip, #16
 800b170:	bf0c      	ite	eq
 800b172:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b176:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b17a:	6945      	ldr	r5, [r0, #20]
 800b17c:	1d0c      	adds	r4, r1, #4
 800b17e:	f01c 0f08 	tst.w	ip, #8
 800b182:	f805 e004 	strb.w	lr, [r5, r4]
 800b186:	bf0c      	ite	eq
 800b188:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b18c:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b190:	6945      	ldr	r5, [r0, #20]
 800b192:	1d4c      	adds	r4, r1, #5
 800b194:	f01c 0f04 	tst.w	ip, #4
 800b198:	f805 e004 	strb.w	lr, [r5, r4]
 800b19c:	bf0c      	ite	eq
 800b19e:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b1a2:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b1a6:	6945      	ldr	r5, [r0, #20]
 800b1a8:	1d8c      	adds	r4, r1, #6
 800b1aa:	f01c 0f02 	tst.w	ip, #2
 800b1ae:	f805 e004 	strb.w	lr, [r5, r4]
 800b1b2:	bf0c      	ite	eq
 800b1b4:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b1b8:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b1bc:	6945      	ldr	r5, [r0, #20]
 800b1be:	1dcc      	adds	r4, r1, #7
 800b1c0:	f01c 0f01 	tst.w	ip, #1
 800b1c4:	f805 e004 	strb.w	lr, [r5, r4]
 800b1c8:	bf14      	ite	ne
 800b1ca:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800b1ce:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800b1d2:	6945      	ldr	r5, [r0, #20]
 800b1d4:	f101 0408 	add.w	r4, r1, #8
 800b1d8:	f805 c004 	strb.w	ip, [r5, r4]
 800b1dc:	061d      	lsls	r5, r3, #24
 800b1de:	bf54      	ite	pl
 800b1e0:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b1e4:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b1e8:	6945      	ldr	r5, [r0, #20]
 800b1ea:	f101 0409 	add.w	r4, r1, #9
 800b1ee:	f805 c004 	strb.w	ip, [r5, r4]
 800b1f2:	065d      	lsls	r5, r3, #25
 800b1f4:	bf54      	ite	pl
 800b1f6:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b1fa:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b1fe:	6945      	ldr	r5, [r0, #20]
 800b200:	f101 040a 	add.w	r4, r1, #10
 800b204:	f805 c004 	strb.w	ip, [r5, r4]
 800b208:	069d      	lsls	r5, r3, #26
 800b20a:	bf54      	ite	pl
 800b20c:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b210:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b214:	6945      	ldr	r5, [r0, #20]
 800b216:	f101 040b 	add.w	r4, r1, #11
 800b21a:	f805 c004 	strb.w	ip, [r5, r4]
 800b21e:	06dd      	lsls	r5, r3, #27
 800b220:	bf54      	ite	pl
 800b222:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b226:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b22a:	6945      	ldr	r5, [r0, #20]
 800b22c:	f101 040c 	add.w	r4, r1, #12
 800b230:	f805 c004 	strb.w	ip, [r5, r4]
 800b234:	071d      	lsls	r5, r3, #28
 800b236:	bf54      	ite	pl
 800b238:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b23c:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b240:	6945      	ldr	r5, [r0, #20]
 800b242:	f101 040d 	add.w	r4, r1, #13
 800b246:	f805 c004 	strb.w	ip, [r5, r4]
 800b24a:	075d      	lsls	r5, r3, #29
 800b24c:	bf54      	ite	pl
 800b24e:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b252:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b256:	6945      	ldr	r5, [r0, #20]
 800b258:	f101 040e 	add.w	r4, r1, #14
 800b25c:	f805 c004 	strb.w	ip, [r5, r4]
 800b260:	079d      	lsls	r5, r3, #30
 800b262:	bf58      	it	pl
 800b264:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b268:	6945      	ldr	r5, [r0, #20]
 800b26a:	bf48      	it	mi
 800b26c:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b270:	f101 040f 	add.w	r4, r1, #15
 800b274:	f805 c004 	strb.w	ip, [r5, r4]
 800b278:	07dd      	lsls	r5, r3, #31
 800b27a:	bf4c      	ite	mi
 800b27c:	7c45      	ldrbmi	r5, [r0, #17]
 800b27e:	7c05      	ldrbpl	r5, [r0, #16]
 800b280:	6943      	ldr	r3, [r0, #20]
 800b282:	f101 0410 	add.w	r4, r1, #16
 800b286:	551d      	strb	r5, [r3, r4]
 800b288:	0614      	lsls	r4, r2, #24
 800b28a:	bf54      	ite	pl
 800b28c:	7c05      	ldrbpl	r5, [r0, #16]
 800b28e:	7c45      	ldrbmi	r5, [r0, #17]
 800b290:	6944      	ldr	r4, [r0, #20]
 800b292:	f101 0311 	add.w	r3, r1, #17
 800b296:	54e5      	strb	r5, [r4, r3]
 800b298:	0655      	lsls	r5, r2, #25
 800b29a:	bf54      	ite	pl
 800b29c:	7c05      	ldrbpl	r5, [r0, #16]
 800b29e:	7c45      	ldrbmi	r5, [r0, #17]
 800b2a0:	6944      	ldr	r4, [r0, #20]
 800b2a2:	f101 0312 	add.w	r3, r1, #18
 800b2a6:	54e5      	strb	r5, [r4, r3]
 800b2a8:	0694      	lsls	r4, r2, #26
 800b2aa:	bf54      	ite	pl
 800b2ac:	7c05      	ldrbpl	r5, [r0, #16]
 800b2ae:	7c45      	ldrbmi	r5, [r0, #17]
 800b2b0:	6944      	ldr	r4, [r0, #20]
 800b2b2:	f101 0313 	add.w	r3, r1, #19
 800b2b6:	54e5      	strb	r5, [r4, r3]
 800b2b8:	06d5      	lsls	r5, r2, #27
 800b2ba:	bf54      	ite	pl
 800b2bc:	7c05      	ldrbpl	r5, [r0, #16]
 800b2be:	7c45      	ldrbmi	r5, [r0, #17]
 800b2c0:	6944      	ldr	r4, [r0, #20]
 800b2c2:	f101 0314 	add.w	r3, r1, #20
 800b2c6:	54e5      	strb	r5, [r4, r3]
 800b2c8:	0714      	lsls	r4, r2, #28
 800b2ca:	bf54      	ite	pl
 800b2cc:	7c05      	ldrbpl	r5, [r0, #16]
 800b2ce:	7c45      	ldrbmi	r5, [r0, #17]
 800b2d0:	6944      	ldr	r4, [r0, #20]
 800b2d2:	f101 0315 	add.w	r3, r1, #21
 800b2d6:	54e5      	strb	r5, [r4, r3]
 800b2d8:	0755      	lsls	r5, r2, #29
 800b2da:	bf54      	ite	pl
 800b2dc:	7c05      	ldrbpl	r5, [r0, #16]
 800b2de:	7c45      	ldrbmi	r5, [r0, #17]
 800b2e0:	6944      	ldr	r4, [r0, #20]
 800b2e2:	f101 0316 	add.w	r3, r1, #22
 800b2e6:	54e5      	strb	r5, [r4, r3]
 800b2e8:	0794      	lsls	r4, r2, #30
 800b2ea:	bf54      	ite	pl
 800b2ec:	7c05      	ldrbpl	r5, [r0, #16]
 800b2ee:	7c45      	ldrbmi	r5, [r0, #17]
 800b2f0:	6944      	ldr	r4, [r0, #20]
 800b2f2:	f101 0317 	add.w	r3, r1, #23
 800b2f6:	54e5      	strb	r5, [r4, r3]
 800b2f8:	3118      	adds	r1, #24
 800b2fa:	f012 0f01 	tst.w	r2, #1
 800b2fe:	e637      	b.n	800af70 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x28c>
 800b300:	0615      	lsls	r5, r2, #24
 800b302:	bf54      	ite	pl
 800b304:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b308:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b30c:	6945      	ldr	r5, [r0, #20]
 800b30e:	1c4c      	adds	r4, r1, #1
 800b310:	f805 e004 	strb.w	lr, [r5, r4]
 800b314:	0655      	lsls	r5, r2, #25
 800b316:	bf54      	ite	pl
 800b318:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b31c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b320:	6945      	ldr	r5, [r0, #20]
 800b322:	1c8c      	adds	r4, r1, #2
 800b324:	f805 e004 	strb.w	lr, [r5, r4]
 800b328:	0695      	lsls	r5, r2, #26
 800b32a:	bf54      	ite	pl
 800b32c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b330:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b334:	6945      	ldr	r5, [r0, #20]
 800b336:	1ccc      	adds	r4, r1, #3
 800b338:	f805 e004 	strb.w	lr, [r5, r4]
 800b33c:	06d5      	lsls	r5, r2, #27
 800b33e:	bf54      	ite	pl
 800b340:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b344:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b348:	6945      	ldr	r5, [r0, #20]
 800b34a:	1d0c      	adds	r4, r1, #4
 800b34c:	f805 e004 	strb.w	lr, [r5, r4]
 800b350:	0715      	lsls	r5, r2, #28
 800b352:	bf54      	ite	pl
 800b354:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b358:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b35c:	6945      	ldr	r5, [r0, #20]
 800b35e:	1d4c      	adds	r4, r1, #5
 800b360:	f805 e004 	strb.w	lr, [r5, r4]
 800b364:	0755      	lsls	r5, r2, #29
 800b366:	bf54      	ite	pl
 800b368:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b36c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b370:	6945      	ldr	r5, [r0, #20]
 800b372:	1d8c      	adds	r4, r1, #6
 800b374:	f805 e004 	strb.w	lr, [r5, r4]
 800b378:	0795      	lsls	r5, r2, #30
 800b37a:	bf58      	it	pl
 800b37c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b380:	6945      	ldr	r5, [r0, #20]
 800b382:	bf48      	it	mi
 800b384:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b388:	1dcc      	adds	r4, r1, #7
 800b38a:	f805 e004 	strb.w	lr, [r5, r4]
 800b38e:	07d2      	lsls	r2, r2, #31
 800b390:	bf4c      	ite	mi
 800b392:	7c45      	ldrbmi	r5, [r0, #17]
 800b394:	7c05      	ldrbpl	r5, [r0, #16]
 800b396:	6942      	ldr	r2, [r0, #20]
 800b398:	f101 0408 	add.w	r4, r1, #8
 800b39c:	5515      	strb	r5, [r2, r4]
 800b39e:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b3a2:	bf0c      	ite	eq
 800b3a4:	7c05      	ldrbeq	r5, [r0, #16]
 800b3a6:	7c45      	ldrbne	r5, [r0, #17]
 800b3a8:	6944      	ldr	r4, [r0, #20]
 800b3aa:	f101 0209 	add.w	r2, r1, #9
 800b3ae:	54a5      	strb	r5, [r4, r2]
 800b3b0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b3b4:	bf0c      	ite	eq
 800b3b6:	7c05      	ldrbeq	r5, [r0, #16]
 800b3b8:	7c45      	ldrbne	r5, [r0, #17]
 800b3ba:	6944      	ldr	r4, [r0, #20]
 800b3bc:	f101 020a 	add.w	r2, r1, #10
 800b3c0:	54a5      	strb	r5, [r4, r2]
 800b3c2:	f01c 0f20 	tst.w	ip, #32
 800b3c6:	bf0c      	ite	eq
 800b3c8:	7c05      	ldrbeq	r5, [r0, #16]
 800b3ca:	7c45      	ldrbne	r5, [r0, #17]
 800b3cc:	6944      	ldr	r4, [r0, #20]
 800b3ce:	f101 020b 	add.w	r2, r1, #11
 800b3d2:	54a5      	strb	r5, [r4, r2]
 800b3d4:	f01c 0f10 	tst.w	ip, #16
 800b3d8:	bf0c      	ite	eq
 800b3da:	7c05      	ldrbeq	r5, [r0, #16]
 800b3dc:	7c45      	ldrbne	r5, [r0, #17]
 800b3de:	6944      	ldr	r4, [r0, #20]
 800b3e0:	f101 020c 	add.w	r2, r1, #12
 800b3e4:	54a5      	strb	r5, [r4, r2]
 800b3e6:	f01c 0f08 	tst.w	ip, #8
 800b3ea:	bf0c      	ite	eq
 800b3ec:	7c05      	ldrbeq	r5, [r0, #16]
 800b3ee:	7c45      	ldrbne	r5, [r0, #17]
 800b3f0:	6944      	ldr	r4, [r0, #20]
 800b3f2:	f101 020d 	add.w	r2, r1, #13
 800b3f6:	54a5      	strb	r5, [r4, r2]
 800b3f8:	f01c 0f04 	tst.w	ip, #4
 800b3fc:	bf0c      	ite	eq
 800b3fe:	7c05      	ldrbeq	r5, [r0, #16]
 800b400:	7c45      	ldrbne	r5, [r0, #17]
 800b402:	6944      	ldr	r4, [r0, #20]
 800b404:	f101 020e 	add.w	r2, r1, #14
 800b408:	54a5      	strb	r5, [r4, r2]
 800b40a:	f01c 0f02 	tst.w	ip, #2
 800b40e:	bf0c      	ite	eq
 800b410:	7c05      	ldrbeq	r5, [r0, #16]
 800b412:	7c45      	ldrbne	r5, [r0, #17]
 800b414:	6944      	ldr	r4, [r0, #20]
 800b416:	f101 020f 	add.w	r2, r1, #15
 800b41a:	54a5      	strb	r5, [r4, r2]
 800b41c:	f01c 0f01 	tst.w	ip, #1
 800b420:	bf14      	ite	ne
 800b422:	7c45      	ldrbne	r5, [r0, #17]
 800b424:	7c05      	ldrbeq	r5, [r0, #16]
 800b426:	6944      	ldr	r4, [r0, #20]
 800b428:	f101 0210 	add.w	r2, r1, #16
 800b42c:	e564      	b.n	800aef8 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x214>
 800b42e:	061d      	lsls	r5, r3, #24
 800b430:	bf54      	ite	pl
 800b432:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b436:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b43a:	6945      	ldr	r5, [r0, #20]
 800b43c:	1c4c      	adds	r4, r1, #1
 800b43e:	f805 e004 	strb.w	lr, [r5, r4]
 800b442:	065d      	lsls	r5, r3, #25
 800b444:	bf54      	ite	pl
 800b446:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b44a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b44e:	6945      	ldr	r5, [r0, #20]
 800b450:	1c8c      	adds	r4, r1, #2
 800b452:	f805 e004 	strb.w	lr, [r5, r4]
 800b456:	069d      	lsls	r5, r3, #26
 800b458:	bf54      	ite	pl
 800b45a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b45e:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b462:	6945      	ldr	r5, [r0, #20]
 800b464:	1ccc      	adds	r4, r1, #3
 800b466:	f805 e004 	strb.w	lr, [r5, r4]
 800b46a:	06dd      	lsls	r5, r3, #27
 800b46c:	bf54      	ite	pl
 800b46e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b472:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b476:	6945      	ldr	r5, [r0, #20]
 800b478:	1d0c      	adds	r4, r1, #4
 800b47a:	f805 e004 	strb.w	lr, [r5, r4]
 800b47e:	071d      	lsls	r5, r3, #28
 800b480:	bf54      	ite	pl
 800b482:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b486:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b48a:	6945      	ldr	r5, [r0, #20]
 800b48c:	1d4c      	adds	r4, r1, #5
 800b48e:	f805 e004 	strb.w	lr, [r5, r4]
 800b492:	075d      	lsls	r5, r3, #29
 800b494:	bf54      	ite	pl
 800b496:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b49a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b49e:	6945      	ldr	r5, [r0, #20]
 800b4a0:	1d8c      	adds	r4, r1, #6
 800b4a2:	f805 e004 	strb.w	lr, [r5, r4]
 800b4a6:	079d      	lsls	r5, r3, #30
 800b4a8:	bf58      	it	pl
 800b4aa:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b4ae:	6945      	ldr	r5, [r0, #20]
 800b4b0:	bf48      	it	mi
 800b4b2:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b4b6:	1dcc      	adds	r4, r1, #7
 800b4b8:	f805 e004 	strb.w	lr, [r5, r4]
 800b4bc:	07dd      	lsls	r5, r3, #31
 800b4be:	bf4c      	ite	mi
 800b4c0:	7c45      	ldrbmi	r5, [r0, #17]
 800b4c2:	7c05      	ldrbpl	r5, [r0, #16]
 800b4c4:	6943      	ldr	r3, [r0, #20]
 800b4c6:	f101 0408 	add.w	r4, r1, #8
 800b4ca:	551d      	strb	r5, [r3, r4]
 800b4cc:	0614      	lsls	r4, r2, #24
 800b4ce:	bf54      	ite	pl
 800b4d0:	7c05      	ldrbpl	r5, [r0, #16]
 800b4d2:	7c45      	ldrbmi	r5, [r0, #17]
 800b4d4:	6944      	ldr	r4, [r0, #20]
 800b4d6:	f101 0309 	add.w	r3, r1, #9
 800b4da:	54e5      	strb	r5, [r4, r3]
 800b4dc:	0655      	lsls	r5, r2, #25
 800b4de:	bf54      	ite	pl
 800b4e0:	7c05      	ldrbpl	r5, [r0, #16]
 800b4e2:	7c45      	ldrbmi	r5, [r0, #17]
 800b4e4:	6944      	ldr	r4, [r0, #20]
 800b4e6:	f101 030a 	add.w	r3, r1, #10
 800b4ea:	54e5      	strb	r5, [r4, r3]
 800b4ec:	0694      	lsls	r4, r2, #26
 800b4ee:	bf54      	ite	pl
 800b4f0:	7c05      	ldrbpl	r5, [r0, #16]
 800b4f2:	7c45      	ldrbmi	r5, [r0, #17]
 800b4f4:	6944      	ldr	r4, [r0, #20]
 800b4f6:	f101 030b 	add.w	r3, r1, #11
 800b4fa:	54e5      	strb	r5, [r4, r3]
 800b4fc:	06d5      	lsls	r5, r2, #27
 800b4fe:	bf54      	ite	pl
 800b500:	7c05      	ldrbpl	r5, [r0, #16]
 800b502:	7c45      	ldrbmi	r5, [r0, #17]
 800b504:	6944      	ldr	r4, [r0, #20]
 800b506:	f101 030c 	add.w	r3, r1, #12
 800b50a:	54e5      	strb	r5, [r4, r3]
 800b50c:	0714      	lsls	r4, r2, #28
 800b50e:	bf54      	ite	pl
 800b510:	7c05      	ldrbpl	r5, [r0, #16]
 800b512:	7c45      	ldrbmi	r5, [r0, #17]
 800b514:	6944      	ldr	r4, [r0, #20]
 800b516:	f101 030d 	add.w	r3, r1, #13
 800b51a:	54e5      	strb	r5, [r4, r3]
 800b51c:	0755      	lsls	r5, r2, #29
 800b51e:	bf54      	ite	pl
 800b520:	7c05      	ldrbpl	r5, [r0, #16]
 800b522:	7c45      	ldrbmi	r5, [r0, #17]
 800b524:	6944      	ldr	r4, [r0, #20]
 800b526:	f101 030e 	add.w	r3, r1, #14
 800b52a:	54e5      	strb	r5, [r4, r3]
 800b52c:	0794      	lsls	r4, r2, #30
 800b52e:	bf58      	it	pl
 800b530:	7c05      	ldrbpl	r5, [r0, #16]
 800b532:	6944      	ldr	r4, [r0, #20]
 800b534:	bf48      	it	mi
 800b536:	7c45      	ldrbmi	r5, [r0, #17]
 800b538:	f101 030f 	add.w	r3, r1, #15
 800b53c:	54e5      	strb	r5, [r4, r3]
 800b53e:	07d2      	lsls	r2, r2, #31
 800b540:	bf4c      	ite	mi
 800b542:	7c44      	ldrbmi	r4, [r0, #17]
 800b544:	7c04      	ldrbpl	r4, [r0, #16]
 800b546:	6942      	ldr	r2, [r0, #20]
 800b548:	f101 0310 	add.w	r3, r1, #16
 800b54c:	e5a5      	b.n	800b09a <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3b6>
 800b54e:	061d      	lsls	r5, r3, #24
 800b550:	bf54      	ite	pl
 800b552:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b556:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b55a:	6945      	ldr	r5, [r0, #20]
 800b55c:	1c4c      	adds	r4, r1, #1
 800b55e:	f805 e004 	strb.w	lr, [r5, r4]
 800b562:	065d      	lsls	r5, r3, #25
 800b564:	bf54      	ite	pl
 800b566:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b56a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b56e:	6945      	ldr	r5, [r0, #20]
 800b570:	1c8c      	adds	r4, r1, #2
 800b572:	f805 e004 	strb.w	lr, [r5, r4]
 800b576:	069d      	lsls	r5, r3, #26
 800b578:	bf54      	ite	pl
 800b57a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b57e:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b582:	6945      	ldr	r5, [r0, #20]
 800b584:	1ccc      	adds	r4, r1, #3
 800b586:	f805 e004 	strb.w	lr, [r5, r4]
 800b58a:	06dd      	lsls	r5, r3, #27
 800b58c:	bf54      	ite	pl
 800b58e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b592:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b596:	6945      	ldr	r5, [r0, #20]
 800b598:	1d0c      	adds	r4, r1, #4
 800b59a:	f805 e004 	strb.w	lr, [r5, r4]
 800b59e:	071d      	lsls	r5, r3, #28
 800b5a0:	bf54      	ite	pl
 800b5a2:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b5a6:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b5aa:	6945      	ldr	r5, [r0, #20]
 800b5ac:	1d4c      	adds	r4, r1, #5
 800b5ae:	f805 e004 	strb.w	lr, [r5, r4]
 800b5b2:	075d      	lsls	r5, r3, #29
 800b5b4:	bf54      	ite	pl
 800b5b6:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b5ba:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b5be:	6945      	ldr	r5, [r0, #20]
 800b5c0:	1d8c      	adds	r4, r1, #6
 800b5c2:	f805 e004 	strb.w	lr, [r5, r4]
 800b5c6:	079d      	lsls	r5, r3, #30
 800b5c8:	bf58      	it	pl
 800b5ca:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b5ce:	6945      	ldr	r5, [r0, #20]
 800b5d0:	bf48      	it	mi
 800b5d2:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b5d6:	1dcc      	adds	r4, r1, #7
 800b5d8:	f805 e004 	strb.w	lr, [r5, r4]
 800b5dc:	07db      	lsls	r3, r3, #31
 800b5de:	bf4c      	ite	mi
 800b5e0:	7c45      	ldrbmi	r5, [r0, #17]
 800b5e2:	7c05      	ldrbpl	r5, [r0, #16]
 800b5e4:	6943      	ldr	r3, [r0, #20]
 800b5e6:	f101 0408 	add.w	r4, r1, #8
 800b5ea:	551d      	strb	r5, [r3, r4]
 800b5ec:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b5f0:	bf0c      	ite	eq
 800b5f2:	7c05      	ldrbeq	r5, [r0, #16]
 800b5f4:	7c45      	ldrbne	r5, [r0, #17]
 800b5f6:	6944      	ldr	r4, [r0, #20]
 800b5f8:	f101 0309 	add.w	r3, r1, #9
 800b5fc:	54e5      	strb	r5, [r4, r3]
 800b5fe:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b602:	bf0c      	ite	eq
 800b604:	7c05      	ldrbeq	r5, [r0, #16]
 800b606:	7c45      	ldrbne	r5, [r0, #17]
 800b608:	6944      	ldr	r4, [r0, #20]
 800b60a:	f101 030a 	add.w	r3, r1, #10
 800b60e:	54e5      	strb	r5, [r4, r3]
 800b610:	f01c 0f20 	tst.w	ip, #32
 800b614:	bf0c      	ite	eq
 800b616:	7c05      	ldrbeq	r5, [r0, #16]
 800b618:	7c45      	ldrbne	r5, [r0, #17]
 800b61a:	6944      	ldr	r4, [r0, #20]
 800b61c:	f101 030b 	add.w	r3, r1, #11
 800b620:	54e5      	strb	r5, [r4, r3]
 800b622:	f01c 0f10 	tst.w	ip, #16
 800b626:	bf0c      	ite	eq
 800b628:	7c05      	ldrbeq	r5, [r0, #16]
 800b62a:	7c45      	ldrbne	r5, [r0, #17]
 800b62c:	6944      	ldr	r4, [r0, #20]
 800b62e:	f101 030c 	add.w	r3, r1, #12
 800b632:	54e5      	strb	r5, [r4, r3]
 800b634:	f01c 0f08 	tst.w	ip, #8
 800b638:	bf0c      	ite	eq
 800b63a:	7c05      	ldrbeq	r5, [r0, #16]
 800b63c:	7c45      	ldrbne	r5, [r0, #17]
 800b63e:	6944      	ldr	r4, [r0, #20]
 800b640:	f101 030d 	add.w	r3, r1, #13
 800b644:	54e5      	strb	r5, [r4, r3]
 800b646:	f01c 0f04 	tst.w	ip, #4
 800b64a:	bf0c      	ite	eq
 800b64c:	7c05      	ldrbeq	r5, [r0, #16]
 800b64e:	7c45      	ldrbne	r5, [r0, #17]
 800b650:	6944      	ldr	r4, [r0, #20]
 800b652:	f101 030e 	add.w	r3, r1, #14
 800b656:	54e5      	strb	r5, [r4, r3]
 800b658:	f01c 0f02 	tst.w	ip, #2
 800b65c:	bf0c      	ite	eq
 800b65e:	7c05      	ldrbeq	r5, [r0, #16]
 800b660:	7c45      	ldrbne	r5, [r0, #17]
 800b662:	6944      	ldr	r4, [r0, #20]
 800b664:	f101 030f 	add.w	r3, r1, #15
 800b668:	54e5      	strb	r5, [r4, r3]
 800b66a:	f01c 0f01 	tst.w	ip, #1
 800b66e:	bf14      	ite	ne
 800b670:	7c45      	ldrbne	r5, [r0, #17]
 800b672:	7c05      	ldrbeq	r5, [r0, #16]
 800b674:	6944      	ldr	r4, [r0, #20]
 800b676:	f101 0310 	add.w	r3, r1, #16
 800b67a:	e604      	b.n	800b286 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a2>

0800b67c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800b67c:	b570      	push	{r4, r5, r6, lr}
 800b67e:	6804      	ldr	r4, [r0, #0]
 800b680:	f89d c010 	ldrb.w	ip, [sp, #16]
 800b684:	2c07      	cmp	r4, #7
 800b686:	f89d e014 	ldrb.w	lr, [sp, #20]
 800b68a:	d000      	beq.n	800b68e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x12>
 800b68c:	bd70      	pop	{r4, r5, r6, pc}
 800b68e:	061e      	lsls	r6, r3, #24
 800b690:	ea4f 1141 	mov.w	r1, r1, lsl #5
 800b694:	bf54      	ite	pl
 800b696:	7c06      	ldrbpl	r6, [r0, #16]
 800b698:	7c46      	ldrbmi	r6, [r0, #17]
 800b69a:	6945      	ldr	r5, [r0, #20]
 800b69c:	1c4c      	adds	r4, r1, #1
 800b69e:	552e      	strb	r6, [r5, r4]
 800b6a0:	065d      	lsls	r5, r3, #25
 800b6a2:	bf54      	ite	pl
 800b6a4:	7c06      	ldrbpl	r6, [r0, #16]
 800b6a6:	7c46      	ldrbmi	r6, [r0, #17]
 800b6a8:	6945      	ldr	r5, [r0, #20]
 800b6aa:	1c8c      	adds	r4, r1, #2
 800b6ac:	552e      	strb	r6, [r5, r4]
 800b6ae:	069e      	lsls	r6, r3, #26
 800b6b0:	bf54      	ite	pl
 800b6b2:	7c06      	ldrbpl	r6, [r0, #16]
 800b6b4:	7c46      	ldrbmi	r6, [r0, #17]
 800b6b6:	6945      	ldr	r5, [r0, #20]
 800b6b8:	1ccc      	adds	r4, r1, #3
 800b6ba:	552e      	strb	r6, [r5, r4]
 800b6bc:	06dd      	lsls	r5, r3, #27
 800b6be:	bf54      	ite	pl
 800b6c0:	7c06      	ldrbpl	r6, [r0, #16]
 800b6c2:	7c46      	ldrbmi	r6, [r0, #17]
 800b6c4:	6945      	ldr	r5, [r0, #20]
 800b6c6:	1d0c      	adds	r4, r1, #4
 800b6c8:	552e      	strb	r6, [r5, r4]
 800b6ca:	071e      	lsls	r6, r3, #28
 800b6cc:	bf54      	ite	pl
 800b6ce:	7c06      	ldrbpl	r6, [r0, #16]
 800b6d0:	7c46      	ldrbmi	r6, [r0, #17]
 800b6d2:	6945      	ldr	r5, [r0, #20]
 800b6d4:	1d4c      	adds	r4, r1, #5
 800b6d6:	552e      	strb	r6, [r5, r4]
 800b6d8:	075d      	lsls	r5, r3, #29
 800b6da:	bf54      	ite	pl
 800b6dc:	7c06      	ldrbpl	r6, [r0, #16]
 800b6de:	7c46      	ldrbmi	r6, [r0, #17]
 800b6e0:	6945      	ldr	r5, [r0, #20]
 800b6e2:	1d8c      	adds	r4, r1, #6
 800b6e4:	552e      	strb	r6, [r5, r4]
 800b6e6:	079e      	lsls	r6, r3, #30
 800b6e8:	6945      	ldr	r5, [r0, #20]
 800b6ea:	bf54      	ite	pl
 800b6ec:	7c06      	ldrbpl	r6, [r0, #16]
 800b6ee:	7c46      	ldrbmi	r6, [r0, #17]
 800b6f0:	1dcc      	adds	r4, r1, #7
 800b6f2:	552e      	strb	r6, [r5, r4]
 800b6f4:	07dd      	lsls	r5, r3, #31
 800b6f6:	bf4c      	ite	mi
 800b6f8:	7c45      	ldrbmi	r5, [r0, #17]
 800b6fa:	7c05      	ldrbpl	r5, [r0, #16]
 800b6fc:	6943      	ldr	r3, [r0, #20]
 800b6fe:	f101 0408 	add.w	r4, r1, #8
 800b702:	551d      	strb	r5, [r3, r4]
 800b704:	0614      	lsls	r4, r2, #24
 800b706:	bf54      	ite	pl
 800b708:	7c05      	ldrbpl	r5, [r0, #16]
 800b70a:	7c45      	ldrbmi	r5, [r0, #17]
 800b70c:	6944      	ldr	r4, [r0, #20]
 800b70e:	f101 0309 	add.w	r3, r1, #9
 800b712:	54e5      	strb	r5, [r4, r3]
 800b714:	0656      	lsls	r6, r2, #25
 800b716:	bf54      	ite	pl
 800b718:	7c05      	ldrbpl	r5, [r0, #16]
 800b71a:	7c45      	ldrbmi	r5, [r0, #17]
 800b71c:	6944      	ldr	r4, [r0, #20]
 800b71e:	f101 030a 	add.w	r3, r1, #10
 800b722:	54e5      	strb	r5, [r4, r3]
 800b724:	0695      	lsls	r5, r2, #26
 800b726:	bf54      	ite	pl
 800b728:	7c05      	ldrbpl	r5, [r0, #16]
 800b72a:	7c45      	ldrbmi	r5, [r0, #17]
 800b72c:	6944      	ldr	r4, [r0, #20]
 800b72e:	f101 030b 	add.w	r3, r1, #11
 800b732:	54e5      	strb	r5, [r4, r3]
 800b734:	06d4      	lsls	r4, r2, #27
 800b736:	bf54      	ite	pl
 800b738:	7c05      	ldrbpl	r5, [r0, #16]
 800b73a:	7c45      	ldrbmi	r5, [r0, #17]
 800b73c:	6944      	ldr	r4, [r0, #20]
 800b73e:	f101 030c 	add.w	r3, r1, #12
 800b742:	54e5      	strb	r5, [r4, r3]
 800b744:	0716      	lsls	r6, r2, #28
 800b746:	bf54      	ite	pl
 800b748:	7c05      	ldrbpl	r5, [r0, #16]
 800b74a:	7c45      	ldrbmi	r5, [r0, #17]
 800b74c:	6944      	ldr	r4, [r0, #20]
 800b74e:	f101 030d 	add.w	r3, r1, #13
 800b752:	54e5      	strb	r5, [r4, r3]
 800b754:	0755      	lsls	r5, r2, #29
 800b756:	bf54      	ite	pl
 800b758:	7c05      	ldrbpl	r5, [r0, #16]
 800b75a:	7c45      	ldrbmi	r5, [r0, #17]
 800b75c:	6944      	ldr	r4, [r0, #20]
 800b75e:	f101 030e 	add.w	r3, r1, #14
 800b762:	54e5      	strb	r5, [r4, r3]
 800b764:	0794      	lsls	r4, r2, #30
 800b766:	bf58      	it	pl
 800b768:	7c05      	ldrbpl	r5, [r0, #16]
 800b76a:	6944      	ldr	r4, [r0, #20]
 800b76c:	bf48      	it	mi
 800b76e:	7c45      	ldrbmi	r5, [r0, #17]
 800b770:	f101 030f 	add.w	r3, r1, #15
 800b774:	54e5      	strb	r5, [r4, r3]
 800b776:	07d2      	lsls	r2, r2, #31
 800b778:	bf4c      	ite	mi
 800b77a:	7c44      	ldrbmi	r4, [r0, #17]
 800b77c:	7c04      	ldrbpl	r4, [r0, #16]
 800b77e:	6942      	ldr	r2, [r0, #20]
 800b780:	f101 0310 	add.w	r3, r1, #16
 800b784:	54d4      	strb	r4, [r2, r3]
 800b786:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b78a:	bf0c      	ite	eq
 800b78c:	7c04      	ldrbeq	r4, [r0, #16]
 800b78e:	7c44      	ldrbne	r4, [r0, #17]
 800b790:	6942      	ldr	r2, [r0, #20]
 800b792:	f101 0311 	add.w	r3, r1, #17
 800b796:	54d4      	strb	r4, [r2, r3]
 800b798:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b79c:	bf14      	ite	ne
 800b79e:	7c44      	ldrbne	r4, [r0, #17]
 800b7a0:	7c04      	ldrbeq	r4, [r0, #16]
 800b7a2:	6942      	ldr	r2, [r0, #20]
 800b7a4:	f101 0312 	add.w	r3, r1, #18
 800b7a8:	54d4      	strb	r4, [r2, r3]
 800b7aa:	f01c 0f20 	tst.w	ip, #32
 800b7ae:	bf14      	ite	ne
 800b7b0:	7c44      	ldrbne	r4, [r0, #17]
 800b7b2:	7c04      	ldrbeq	r4, [r0, #16]
 800b7b4:	6942      	ldr	r2, [r0, #20]
 800b7b6:	f101 0313 	add.w	r3, r1, #19
 800b7ba:	54d4      	strb	r4, [r2, r3]
 800b7bc:	f01c 0f10 	tst.w	ip, #16
 800b7c0:	bf14      	ite	ne
 800b7c2:	7c44      	ldrbne	r4, [r0, #17]
 800b7c4:	7c04      	ldrbeq	r4, [r0, #16]
 800b7c6:	6942      	ldr	r2, [r0, #20]
 800b7c8:	f101 0314 	add.w	r3, r1, #20
 800b7cc:	54d4      	strb	r4, [r2, r3]
 800b7ce:	f01c 0f08 	tst.w	ip, #8
 800b7d2:	bf14      	ite	ne
 800b7d4:	7c44      	ldrbne	r4, [r0, #17]
 800b7d6:	7c04      	ldrbeq	r4, [r0, #16]
 800b7d8:	6942      	ldr	r2, [r0, #20]
 800b7da:	f101 0315 	add.w	r3, r1, #21
 800b7de:	54d4      	strb	r4, [r2, r3]
 800b7e0:	f01c 0f04 	tst.w	ip, #4
 800b7e4:	bf14      	ite	ne
 800b7e6:	7c44      	ldrbne	r4, [r0, #17]
 800b7e8:	7c04      	ldrbeq	r4, [r0, #16]
 800b7ea:	6942      	ldr	r2, [r0, #20]
 800b7ec:	f101 0316 	add.w	r3, r1, #22
 800b7f0:	54d4      	strb	r4, [r2, r3]
 800b7f2:	f01c 0f02 	tst.w	ip, #2
 800b7f6:	bf14      	ite	ne
 800b7f8:	7c44      	ldrbne	r4, [r0, #17]
 800b7fa:	7c04      	ldrbeq	r4, [r0, #16]
 800b7fc:	6942      	ldr	r2, [r0, #20]
 800b7fe:	f101 0317 	add.w	r3, r1, #23
 800b802:	54d4      	strb	r4, [r2, r3]
 800b804:	f01c 0f01 	tst.w	ip, #1
 800b808:	bf14      	ite	ne
 800b80a:	7c44      	ldrbne	r4, [r0, #17]
 800b80c:	7c04      	ldrbeq	r4, [r0, #16]
 800b80e:	6942      	ldr	r2, [r0, #20]
 800b810:	f101 0318 	add.w	r3, r1, #24
 800b814:	54d4      	strb	r4, [r2, r3]
 800b816:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800b81a:	bf0c      	ite	eq
 800b81c:	7c04      	ldrbeq	r4, [r0, #16]
 800b81e:	7c44      	ldrbne	r4, [r0, #17]
 800b820:	6942      	ldr	r2, [r0, #20]
 800b822:	f101 0319 	add.w	r3, r1, #25
 800b826:	54d4      	strb	r4, [r2, r3]
 800b828:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800b82c:	bf0c      	ite	eq
 800b82e:	7c04      	ldrbeq	r4, [r0, #16]
 800b830:	7c44      	ldrbne	r4, [r0, #17]
 800b832:	6942      	ldr	r2, [r0, #20]
 800b834:	f101 031a 	add.w	r3, r1, #26
 800b838:	54d4      	strb	r4, [r2, r3]
 800b83a:	f01e 0f20 	tst.w	lr, #32
 800b83e:	bf0c      	ite	eq
 800b840:	7c04      	ldrbeq	r4, [r0, #16]
 800b842:	7c44      	ldrbne	r4, [r0, #17]
 800b844:	6942      	ldr	r2, [r0, #20]
 800b846:	f101 031b 	add.w	r3, r1, #27
 800b84a:	54d4      	strb	r4, [r2, r3]
 800b84c:	f01e 0f10 	tst.w	lr, #16
 800b850:	bf0c      	ite	eq
 800b852:	7c04      	ldrbeq	r4, [r0, #16]
 800b854:	7c44      	ldrbne	r4, [r0, #17]
 800b856:	6942      	ldr	r2, [r0, #20]
 800b858:	f101 031c 	add.w	r3, r1, #28
 800b85c:	54d4      	strb	r4, [r2, r3]
 800b85e:	f01e 0f08 	tst.w	lr, #8
 800b862:	bf0c      	ite	eq
 800b864:	7c04      	ldrbeq	r4, [r0, #16]
 800b866:	7c44      	ldrbne	r4, [r0, #17]
 800b868:	6942      	ldr	r2, [r0, #20]
 800b86a:	f101 031d 	add.w	r3, r1, #29
 800b86e:	54d4      	strb	r4, [r2, r3]
 800b870:	f01e 0f04 	tst.w	lr, #4
 800b874:	bf0c      	ite	eq
 800b876:	7c04      	ldrbeq	r4, [r0, #16]
 800b878:	7c44      	ldrbne	r4, [r0, #17]
 800b87a:	6942      	ldr	r2, [r0, #20]
 800b87c:	f101 031e 	add.w	r3, r1, #30
 800b880:	54d4      	strb	r4, [r2, r3]
 800b882:	f01e 0f02 	tst.w	lr, #2
 800b886:	6942      	ldr	r2, [r0, #20]
 800b888:	bf0c      	ite	eq
 800b88a:	7c04      	ldrbeq	r4, [r0, #16]
 800b88c:	7c44      	ldrbne	r4, [r0, #17]
 800b88e:	f101 031f 	add.w	r3, r1, #31
 800b892:	54d4      	strb	r4, [r2, r3]
 800b894:	f01e 0f01 	tst.w	lr, #1
 800b898:	bf14      	ite	ne
 800b89a:	7c42      	ldrbne	r2, [r0, #17]
 800b89c:	7c02      	ldrbeq	r2, [r0, #16]
 800b89e:	6943      	ldr	r3, [r0, #20]
 800b8a0:	3120      	adds	r1, #32
 800b8a2:	545a      	strb	r2, [r3, r1]
 800b8a4:	bd70      	pop	{r4, r5, r6, pc}
 800b8a6:	bf00      	nop

0800b8a8 <WS28xx::~WS28xx()>:
 800b8a8:	2200      	movs	r2, #0
 800b8aa:	4b01      	ldr	r3, [pc, #4]	; (800b8b0 <WS28xx::~WS28xx()+0x8>)
 800b8ac:	601a      	str	r2, [r3, #0]
 800b8ae:	4770      	bx	lr
 800b8b0:	20000730 	andcs	r0, r0, r0, lsr r7

0800b8b4 <WS28xx::SetupBuffers()>:
 800b8b4:	b513      	push	{r0, r1, r4, lr}
 800b8b6:	4604      	mov	r4, r0
 800b8b8:	a801      	add	r0, sp, #4
 800b8ba:	f006 fc25 	bl	8012108 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800b8be:	9b01      	ldr	r3, [sp, #4]
 800b8c0:	4a07      	ldr	r2, [pc, #28]	; (800b8e0 <WS28xx::SetupBuffers()+0x2c>)
 800b8c2:	085b      	lsrs	r3, r3, #1
 800b8c4:	f023 0303 	bic.w	r3, r3, #3
 800b8c8:	6160      	str	r0, [r4, #20]
 800b8ca:	4418      	add	r0, r3
 800b8cc:	68e3      	ldr	r3, [r4, #12]
 800b8ce:	61a0      	str	r0, [r4, #24]
 800b8d0:	6013      	str	r3, [r2, #0]
 800b8d2:	3303      	adds	r3, #3
 800b8d4:	f023 0303 	bic.w	r3, r3, #3
 800b8d8:	60e3      	str	r3, [r4, #12]
 800b8da:	b002      	add	sp, #8
 800b8dc:	bd10      	pop	{r4, pc}
 800b8de:	bf00      	nop
 800b8e0:	2000072c 	andcs	r0, r0, ip, lsr #14

0800b8e4 <WS28xx::WS28xx(PixelConfiguration&)>:
 800b8e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b8e6:	23aa      	movs	r3, #170	; 0xaa
 800b8e8:	2203      	movs	r2, #3
 800b8ea:	e9c0 2300 	strd	r2, r3, [r0]
 800b8ee:	2306      	movs	r3, #6
 800b8f0:	6083      	str	r3, [r0, #8]
 800b8f2:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 800b8f6:	8243      	strh	r3, [r0, #18]
 800b8f8:	2300      	movs	r3, #0
 800b8fa:	460d      	mov	r5, r1
 800b8fc:	4604      	mov	r4, r0
 800b8fe:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800b902:	4b17      	ldr	r3, [pc, #92]	; (800b960 <WS28xx::WS28xx(PixelConfiguration&)+0x7c>)
 800b904:	a901      	add	r1, sp, #4
 800b906:	6018      	str	r0, [r3, #0]
 800b908:	4628      	mov	r0, r5
 800b90a:	f7fe fddf 	bl	800a4cc <PixelConfiguration::Validate(unsigned int&)>
 800b90e:	4628      	mov	r0, r5
 800b910:	f7fe fe48 	bl	800a5a4 <PixelConfiguration::Dump()>
 800b914:	68ab      	ldr	r3, [r5, #8]
 800b916:	686a      	ldr	r2, [r5, #4]
 800b918:	60a3      	str	r3, [r4, #8]
 800b91a:	8a2b      	ldrh	r3, [r5, #16]
 800b91c:	6829      	ldr	r1, [r5, #0]
 800b91e:	8223      	strh	r3, [r4, #16]
 800b920:	7cab      	ldrb	r3, [r5, #18]
 800b922:	7ce8      	ldrb	r0, [r5, #19]
 800b924:	74e3      	strb	r3, [r4, #19]
 800b926:	9b01      	ldr	r3, [sp, #4]
 800b928:	6021      	str	r1, [r4, #0]
 800b92a:	4353      	muls	r3, r2
 800b92c:	6062      	str	r2, [r4, #4]
 800b92e:	74a0      	strb	r0, [r4, #18]
 800b930:	b998      	cbnz	r0, 800b95a <WS28xx::WS28xx(PixelConfiguration&)+0x76>
 800b932:	390b      	subs	r1, #11
 800b934:	2902      	cmp	r1, #2
 800b936:	60e3      	str	r3, [r4, #12]
 800b938:	bf9e      	ittt	ls
 800b93a:	68e3      	ldrls	r3, [r4, #12]
 800b93c:	3208      	addls	r2, #8
 800b93e:	18d2      	addls	r2, r2, r3
 800b940:	4620      	mov	r0, r4
 800b942:	bf98      	it	ls
 800b944:	60e2      	strls	r2, [r4, #12]
 800b946:	f7ff ffb5 	bl	800b8b4 <WS28xx::SetupBuffers()>
 800b94a:	f006 fb57 	bl	8011ffc <gd32_spi_dma_begin()>
 800b94e:	68e8      	ldr	r0, [r5, #12]
 800b950:	f006 fbc6 	bl	80120e0 <gd32_spi_dma_set_speed_hz(unsigned int)>
 800b954:	4620      	mov	r0, r4
 800b956:	b003      	add	sp, #12
 800b958:	bd30      	pop	{r4, r5, pc}
 800b95a:	00db      	lsls	r3, r3, #3
 800b95c:	3301      	adds	r3, #1
 800b95e:	e7e8      	b.n	800b932 <WS28xx::WS28xx(PixelConfiguration&)+0x4e>
 800b960:	20000730 	andcs	r0, r0, r0, lsr r7

0800b964 <WS28xx::Update()>:
 800b964:	2200      	movs	r2, #0
 800b966:	b430      	push	{r4, r5}
 800b968:	4b0b      	ldr	r3, [pc, #44]	; (800b998 <WS28xx::Update()+0x34>)
 800b96a:	681b      	ldr	r3, [r3, #0]
 800b96c:	68c1      	ldr	r1, [r0, #12]
 800b96e:	6944      	ldr	r4, [r0, #20]
 800b970:	4299      	cmp	r1, r3
 800b972:	d902      	bls.n	800b97a <WS28xx::Update()+0x16>
 800b974:	54e2      	strb	r2, [r4, r3]
 800b976:	3301      	adds	r3, #1
 800b978:	e7f8      	b.n	800b96c <WS28xx::Update()+0x8>
 800b97a:	2300      	movs	r3, #0
 800b97c:	6980      	ldr	r0, [r0, #24]
 800b97e:	084d      	lsrs	r5, r1, #1
 800b980:	429d      	cmp	r5, r3
 800b982:	d006      	beq.n	800b992 <WS28xx::Update()+0x2e>
 800b984:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800b988:	ba52      	rev16	r2, r2
 800b98a:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800b98e:	3301      	adds	r3, #1
 800b990:	e7f6      	b.n	800b980 <WS28xx::Update()+0x1c>
 800b992:	bc30      	pop	{r4, r5}
 800b994:	f006 bbc0 	b.w	8012118 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800b998:	2000072c 	andcs	r0, r0, ip, lsr #14

0800b99c <WS28xx::Blackout()>:
 800b99c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b99e:	e9d0 6305 	ldrd	r6, r3, [r0, #20]
 800b9a2:	4604      	mov	r4, r0
 800b9a4:	6143      	str	r3, [r0, #20]
 800b9a6:	f3bf 8f6f 	isb	sy
 800b9aa:	f006 fbcf 	bl	801214c <gd32_spi_dma_tx_is_active()>
 800b9ae:	2800      	cmp	r0, #0
 800b9b0:	d1f9      	bne.n	800b9a6 <WS28xx::Blackout()+0xa>
 800b9b2:	6822      	ldr	r2, [r4, #0]
 800b9b4:	6963      	ldr	r3, [r4, #20]
 800b9b6:	3a0b      	subs	r2, #11
 800b9b8:	2a02      	cmp	r2, #2
 800b9ba:	7018      	strb	r0, [r3, #0]
 800b9bc:	d82a      	bhi.n	800ba14 <WS28xx::Blackout()+0x78>
 800b9be:	4605      	mov	r5, r0
 800b9c0:	4607      	mov	r7, r0
 800b9c2:	7058      	strb	r0, [r3, #1]
 800b9c4:	7098      	strb	r0, [r3, #2]
 800b9c6:	70d8      	strb	r0, [r3, #3]
 800b9c8:	6863      	ldr	r3, [r4, #4]
 800b9ca:	42ab      	cmp	r3, r5
 800b9cc:	d908      	bls.n	800b9e0 <WS28xx::Blackout()+0x44>
 800b9ce:	2300      	movs	r3, #0
 800b9d0:	4629      	mov	r1, r5
 800b9d2:	461a      	mov	r2, r3
 800b9d4:	4620      	mov	r0, r4
 800b9d6:	9700      	str	r7, [sp, #0]
 800b9d8:	f7ff f984 	bl	800ace4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800b9dc:	3501      	adds	r5, #1
 800b9de:	e7f3      	b.n	800b9c8 <WS28xx::Blackout()+0x2c>
 800b9e0:	6821      	ldr	r1, [r4, #0]
 800b9e2:	68e2      	ldr	r2, [r4, #12]
 800b9e4:	390b      	subs	r1, #11
 800b9e6:	2901      	cmp	r1, #1
 800b9e8:	bf94      	ite	ls
 800b9ea:	21ff      	movls	r1, #255	; 0xff
 800b9ec:	2100      	movhi	r1, #0
 800b9ee:	6960      	ldr	r0, [r4, #20]
 800b9f0:	3a04      	subs	r2, #4
 800b9f2:	1883      	adds	r3, r0, r2
 800b9f4:	5481      	strb	r1, [r0, r2]
 800b9f6:	7059      	strb	r1, [r3, #1]
 800b9f8:	7099      	strb	r1, [r3, #2]
 800b9fa:	70d9      	strb	r1, [r3, #3]
 800b9fc:	4620      	mov	r0, r4
 800b9fe:	f7ff ffb1 	bl	800b964 <WS28xx::Update()>
 800ba02:	f3bf 8f6f 	isb	sy
 800ba06:	f006 fba1 	bl	801214c <gd32_spi_dma_tx_is_active()>
 800ba0a:	2800      	cmp	r0, #0
 800ba0c:	d1f9      	bne.n	800ba02 <WS28xx::Blackout()+0x66>
 800ba0e:	6166      	str	r6, [r4, #20]
 800ba10:	b003      	add	sp, #12
 800ba12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba14:	6963      	ldr	r3, [r4, #20]
 800ba16:	6821      	ldr	r1, [r4, #0]
 800ba18:	1c5a      	adds	r2, r3, #1
 800ba1a:	b101      	cbz	r1, 800ba1e <WS28xx::Blackout()+0x82>
 800ba1c:	7c21      	ldrb	r1, [r4, #16]
 800ba1e:	68e0      	ldr	r0, [r4, #12]
 800ba20:	3001      	adds	r0, #1
 800ba22:	4403      	add	r3, r0
 800ba24:	429a      	cmp	r2, r3
 800ba26:	d0e9      	beq.n	800b9fc <WS28xx::Blackout()+0x60>
 800ba28:	f802 1b01 	strb.w	r1, [r2], #1
 800ba2c:	e7fa      	b.n	800ba24 <WS28xx::Blackout()+0x88>
	...

0800ba30 <RemoteConfig::HandleList()>:
 800ba30:	2212      	movs	r2, #18
 800ba32:	6803      	ldr	r3, [r0, #0]
 800ba34:	492f      	ldr	r1, [pc, #188]	; (800baf4 <RemoteConfig::HandleList()+0xc4>)
 800ba36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba3a:	fb02 1103 	mla	r1, r2, r3, r1
 800ba3e:	220c      	movs	r2, #12
 800ba40:	4604      	mov	r4, r0
 800ba42:	6843      	ldr	r3, [r0, #4]
 800ba44:	482c      	ldr	r0, [pc, #176]	; (800baf8 <RemoteConfig::HandleList()+0xc8>)
 800ba46:	4e2d      	ldr	r6, [pc, #180]	; (800bafc <RemoteConfig::HandleList()+0xcc>)
 800ba48:	fb02 0003 	mla	r0, r2, r3, r0
 800ba4c:	4b2c      	ldr	r3, [pc, #176]	; (800bb00 <RemoteConfig::HandleList()+0xd0>)
 800ba4e:	4f2d      	ldr	r7, [pc, #180]	; (800bb04 <RemoteConfig::HandleList()+0xd4>)
 800ba50:	681b      	ldr	r3, [r3, #0]
 800ba52:	6835      	ldr	r5, [r6, #0]
 800ba54:	f8d3 c010 	ldr.w	ip, [r3, #16]
 800ba58:	f897 9009 	ldrb.w	r9, [r7, #9]
 800ba5c:	fa5f f38c 	uxtb.w	r3, ip
 800ba60:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 800ba64:	ea4f 421c 	mov.w	r2, ip, lsr #16
 800ba68:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800ba6c:	b089      	sub	sp, #36	; 0x24
 800ba6e:	3507      	adds	r5, #7
 800ba70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 800ba74:	f1b9 0f00 	cmp.w	r9, #0
 800ba78:	d020      	beq.n	800babc <RemoteConfig::HandleList()+0x8c>
 800ba7a:	b2d2      	uxtb	r2, r2
 800ba7c:	3709      	adds	r7, #9
 800ba7e:	9201      	str	r2, [sp, #4]
 800ba80:	fa5f f28c 	uxtb.w	r2, ip
 800ba84:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800ba88:	9200      	str	r2, [sp, #0]
 800ba8a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800ba8e:	4628      	mov	r0, r5
 800ba90:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800ba94:	4a1c      	ldr	r2, [pc, #112]	; (800bb08 <RemoteConfig::HandleList()+0xd8>)
 800ba96:	f8cd e008 	str.w	lr, [sp, #8]
 800ba9a:	f7fd f8b5 	bl	8008c08 <snprintf>
 800ba9e:	8ba3      	ldrh	r3, [r4, #28]
 800baa0:	2b05      	cmp	r3, #5
 800baa2:	d11b      	bne.n	800badc <RemoteConfig::HandleList()+0xac>
 800baa4:	f642 1305 	movw	r3, #10501	; 0x2905
 800baa8:	9300      	str	r3, [sp, #0]
 800baaa:	69a3      	ldr	r3, [r4, #24]
 800baac:	b282      	uxth	r2, r0
 800baae:	4629      	mov	r1, r5
 800bab0:	7d20      	ldrb	r0, [r4, #20]
 800bab2:	f002 fc5b 	bl	800e36c <udp_send>
 800bab6:	b009      	add	sp, #36	; 0x24
 800bab8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800babc:	b2d2      	uxtb	r2, r2
 800babe:	9201      	str	r2, [sp, #4]
 800bac0:	fa5f f28c 	uxtb.w	r2, ip
 800bac4:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800bac8:	e9cd e102 	strd	lr, r1, [sp, #8]
 800bacc:	9200      	str	r2, [sp, #0]
 800bace:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800bad2:	4628      	mov	r0, r5
 800bad4:	4a0d      	ldr	r2, [pc, #52]	; (800bb0c <RemoteConfig::HandleList()+0xdc>)
 800bad6:	f7fd f897 	bl	8008c08 <snprintf>
 800bada:	e7e0      	b.n	800ba9e <RemoteConfig::HandleList()+0x6e>
 800badc:	2b06      	cmp	r3, #6
 800bade:	d1ea      	bne.n	800bab6 <RemoteConfig::HandleList()+0x86>
 800bae0:	6833      	ldr	r3, [r6, #0]
 800bae2:	799b      	ldrb	r3, [r3, #6]
 800bae4:	2b2a      	cmp	r3, #42	; 0x2a
 800bae6:	d1e6      	bne.n	800bab6 <RemoteConfig::HandleList()+0x86>
 800bae8:	f642 1305 	movw	r3, #10501	; 0x2905
 800baec:	9300      	str	r3, [sp, #0]
 800baee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800baf2:	e7db      	b.n	800baac <RemoteConfig::HandleList()+0x7c>
 800baf4:	080135dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, ip, sp}
 800baf8:	0801367f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, sp}
 800bafc:	20000734 	andcs	r0, r0, r4, lsr r7
 800bb00:	20009070 	andcs	r9, r0, r0, ror r0
 800bb04:	20000738 	andcs	r0, r0, r8, lsr r7
 800bb08:	08013526 	stmdaeq	r1, {r1, r2, r5, r8, sl, ip, sp}
 800bb0c:	0801353f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, ip, sp}

0800bb10 <RemoteConfig::HandleDisplayGet()>:
 800bb10:	8b83      	ldrh	r3, [r0, #28]
 800bb12:	2b08      	cmp	r3, #8
 800bb14:	d11b      	bne.n	800bb4e <RemoteConfig::HandleDisplayGet()+0x3e>
 800bb16:	4b0e      	ldr	r3, [pc, #56]	; (800bb50 <RemoteConfig::HandleDisplayGet()+0x40>)
 800bb18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb1a:	681b      	ldr	r3, [r3, #0]
 800bb1c:	4d0d      	ldr	r5, [pc, #52]	; (800bb54 <RemoteConfig::HandleDisplayGet()+0x44>)
 800bb1e:	7c19      	ldrb	r1, [r3, #16]
 800bb20:	4a0d      	ldr	r2, [pc, #52]	; (800bb58 <RemoteConfig::HandleDisplayGet()+0x48>)
 800bb22:	4b0e      	ldr	r3, [pc, #56]	; (800bb5c <RemoteConfig::HandleDisplayGet()+0x4c>)
 800bb24:	4604      	mov	r4, r0
 800bb26:	2900      	cmp	r1, #0
 800bb28:	bf18      	it	ne
 800bb2a:	4613      	movne	r3, r2
 800bb2c:	6828      	ldr	r0, [r5, #0]
 800bb2e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800bb32:	4a0b      	ldr	r2, [pc, #44]	; (800bb60 <RemoteConfig::HandleDisplayGet()+0x50>)
 800bb34:	f7fd f868 	bl	8008c08 <snprintf>
 800bb38:	f642 1305 	movw	r3, #10501	; 0x2905
 800bb3c:	9300      	str	r3, [sp, #0]
 800bb3e:	b282      	uxth	r2, r0
 800bb40:	69a3      	ldr	r3, [r4, #24]
 800bb42:	6829      	ldr	r1, [r5, #0]
 800bb44:	7d20      	ldrb	r0, [r4, #20]
 800bb46:	f002 fc11 	bl	800e36c <udp_send>
 800bb4a:	b003      	add	sp, #12
 800bb4c:	bd30      	pop	{r4, r5, pc}
 800bb4e:	4770      	bx	lr
 800bb50:	200096a0 	andcs	r9, r0, r0, lsr #13
 800bb54:	20000734 	andcs	r0, r0, r4, lsr r7
 800bb58:	08013558 	stmdaeq	r1, {r3, r4, r6, r8, sl, ip, sp}
 800bb5c:	08013555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip, sp}
 800bb60:	0801355c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, ip, sp}

0800bb64 <RemoteConfig::HandleVersion()>:
 800bb64:	8b83      	ldrh	r3, [r0, #28]
 800bb66:	2b08      	cmp	r3, #8
 800bb68:	d114      	bne.n	800bb94 <RemoteConfig::HandleVersion()+0x30>
 800bb6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb6c:	4d0a      	ldr	r5, [pc, #40]	; (800bb98 <RemoteConfig::HandleVersion()+0x34>)
 800bb6e:	4604      	mov	r4, r0
 800bb70:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800bb74:	4b09      	ldr	r3, [pc, #36]	; (800bb9c <RemoteConfig::HandleVersion()+0x38>)
 800bb76:	4a0a      	ldr	r2, [pc, #40]	; (800bba0 <RemoteConfig::HandleVersion()+0x3c>)
 800bb78:	6828      	ldr	r0, [r5, #0]
 800bb7a:	f7fd f845 	bl	8008c08 <snprintf>
 800bb7e:	f642 1305 	movw	r3, #10501	; 0x2905
 800bb82:	9300      	str	r3, [sp, #0]
 800bb84:	b282      	uxth	r2, r0
 800bb86:	69a3      	ldr	r3, [r4, #24]
 800bb88:	6829      	ldr	r1, [r5, #0]
 800bb8a:	7d20      	ldrb	r0, [r4, #20]
 800bb8c:	f002 fbee 	bl	800e36c <udp_send>
 800bb90:	b003      	add	sp, #12
 800bb92:	bd30      	pop	{r4, r5, pc}
 800bb94:	4770      	bx	lr
 800bb96:	bf00      	nop
 800bb98:	20000734 	andcs	r0, r0, r4, lsr r7
 800bb9c:	20009746 	andcs	r9, r0, r6, asr #14
 800bba0:	08013568 	stmdaeq	r1, {r3, r5, r6, r8, sl, ip, sp}

0800bba4 <RemoteConfig::HandleUptime()>:
 800bba4:	7bc3      	ldrb	r3, [r0, #15]
 800bba6:	b1e3      	cbz	r3, 800bbe2 <RemoteConfig::HandleUptime()+0x3e>
 800bba8:	4b0e      	ldr	r3, [pc, #56]	; (800bbe4 <RemoteConfig::HandleUptime()+0x40>)
 800bbaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbac:	681a      	ldr	r2, [r3, #0]
 800bbae:	8b83      	ldrh	r3, [r0, #28]
 800bbb0:	4604      	mov	r4, r0
 800bbb2:	2b07      	cmp	r3, #7
 800bbb4:	d113      	bne.n	800bbde <RemoteConfig::HandleUptime()+0x3a>
 800bbb6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800bbba:	4d0b      	ldr	r5, [pc, #44]	; (800bbe8 <RemoteConfig::HandleUptime()+0x44>)
 800bbbc:	fbb2 f3f3 	udiv	r3, r2, r3
 800bbc0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800bbc4:	4a09      	ldr	r2, [pc, #36]	; (800bbec <RemoteConfig::HandleUptime()+0x48>)
 800bbc6:	6828      	ldr	r0, [r5, #0]
 800bbc8:	f7fd f81e 	bl	8008c08 <snprintf>
 800bbcc:	f642 1305 	movw	r3, #10501	; 0x2905
 800bbd0:	9300      	str	r3, [sp, #0]
 800bbd2:	b282      	uxth	r2, r0
 800bbd4:	69a3      	ldr	r3, [r4, #24]
 800bbd6:	6829      	ldr	r1, [r5, #0]
 800bbd8:	7d20      	ldrb	r0, [r4, #20]
 800bbda:	f002 fbc7 	bl	800e36c <udp_send>
 800bbde:	b003      	add	sp, #12
 800bbe0:	bd30      	pop	{r4, r5, pc}
 800bbe2:	4770      	bx	lr
 800bbe4:	200097a4 	andcs	r9, r0, r4, lsr #15
 800bbe8:	20000734 	andcs	r0, r0, r4, lsr r7
 800bbec:	08013573 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, ip, sp}

0800bbf0 <RemoteConfig::HandleDisplaySet()>:
 800bbf0:	b538      	push	{r3, r4, r5, lr}
 800bbf2:	8b83      	ldrh	r3, [r0, #28]
 800bbf4:	2b09      	cmp	r3, #9
 800bbf6:	d113      	bne.n	800bc20 <RemoteConfig::HandleDisplaySet()+0x30>
 800bbf8:	4b0a      	ldr	r3, [pc, #40]	; (800bc24 <RemoteConfig::HandleDisplaySet()+0x34>)
 800bbfa:	681c      	ldr	r4, [r3, #0]
 800bbfc:	4b0a      	ldr	r3, [pc, #40]	; (800bc28 <RemoteConfig::HandleDisplaySet()+0x38>)
 800bbfe:	69a0      	ldr	r0, [r4, #24]
 800bc00:	681b      	ldr	r3, [r3, #0]
 800bc02:	7a5d      	ldrb	r5, [r3, #9]
 800bc04:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800bc08:	4259      	negs	r1, r3
 800bc0a:	4159      	adcs	r1, r3
 800bc0c:	b140      	cbz	r0, 800bc20 <RemoteConfig::HandleDisplaySet()+0x30>
 800bc0e:	6803      	ldr	r3, [r0, #0]
 800bc10:	7421      	strb	r1, [r4, #16]
 800bc12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc14:	4798      	blx	r3
 800bc16:	2d30      	cmp	r5, #48	; 0x30
 800bc18:	bf1e      	ittt	ne
 800bc1a:	4b04      	ldrne	r3, [pc, #16]	; (800bc2c <RemoteConfig::HandleDisplaySet()+0x3c>)
 800bc1c:	681b      	ldrne	r3, [r3, #0]
 800bc1e:	6063      	strne	r3, [r4, #4]
 800bc20:	bd38      	pop	{r3, r4, r5, pc}
 800bc22:	bf00      	nop
 800bc24:	200096a0 	andcs	r9, r0, r0, lsr #13
 800bc28:	20000734 	andcs	r0, r0, r4, lsr r7
 800bc2c:	200097a4 	andcs	r9, r0, r4, lsr #15

0800bc30 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800bc30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc34:	2500      	movs	r5, #0
 800bc36:	461f      	mov	r7, r3
 800bc38:	6083      	str	r3, [r0, #8]
 800bc3a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bc3e:	4604      	mov	r4, r0
 800bc40:	4690      	mov	r8, r2
 800bc42:	4689      	mov	r9, r1
 800bc44:	f100 0a24 	add.w	sl, r0, #36	; 0x24
 800bc48:	e9c0 1200 	strd	r1, r2, [r0]
 800bc4c:	4e12      	ldr	r6, [pc, #72]	; (800bc98 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>)
 800bc4e:	e9c0 3505 	strd	r3, r5, [r0, #20]
 800bc52:	f8df b048 	ldr.w	fp, [pc, #72]	; 800bc9c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>
 800bc56:	60c5      	str	r5, [r0, #12]
 800bc58:	8205      	strh	r5, [r0, #16]
 800bc5a:	8385      	strh	r5, [r0, #28]
 800bc5c:	6205      	str	r5, [r0, #32]
 800bc5e:	4650      	mov	r0, sl
 800bc60:	f000 fcc2 	bl	800c5e8 <HttpDaemon::HttpDaemon()>
 800bc64:	4b0e      	ldr	r3, [pc, #56]	; (800bca0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>)
 800bc66:	4631      	mov	r1, r6
 800bc68:	f8db 0000 	ldr.w	r0, [fp]
 800bc6c:	601c      	str	r4, [r3, #0]
 800bc6e:	f003 f853 	bl	800ed18 <Network::MacAddressCopyTo(unsigned char*)>
 800bc72:	f642 1105 	movw	r1, #10501	; 0x2905
 800bc76:	f8db 0000 	ldr.w	r0, [fp]
 800bc7a:	f886 9006 	strb.w	r9, [r6, #6]
 800bc7e:	f886 8007 	strb.w	r8, [r6, #7]
 800bc82:	7237      	strb	r7, [r6, #8]
 800bc84:	7275      	strb	r5, [r6, #9]
 800bc86:	f003 f841 	bl	800ed0c <Network::Begin(unsigned short)>
 800bc8a:	6160      	str	r0, [r4, #20]
 800bc8c:	4650      	mov	r0, sl
 800bc8e:	f000 fcc3 	bl	800c618 <HttpDaemon::Start()>
 800bc92:	4620      	mov	r0, r4
 800bc94:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc98:	20000738 	andcs	r0, r0, r8, lsr r7
 800bc9c:	20009070 	andcs	r9, r0, r0, ror r0
 800bca0:	2000075c 	andcs	r0, r0, ip, asr r7

0800bca4 <RemoteConfig::GetStringNode() const>:
 800bca4:	2012      	movs	r0, #18
 800bca6:	4b03      	ldr	r3, [pc, #12]	; (800bcb4 <RemoteConfig::GetStringNode() const+0x10>)
 800bca8:	799a      	ldrb	r2, [r3, #6]
 800bcaa:	4b03      	ldr	r3, [pc, #12]	; (800bcb8 <RemoteConfig::GetStringNode() const+0x14>)
 800bcac:	fb00 3002 	mla	r0, r0, r2, r3
 800bcb0:	4770      	bx	lr
 800bcb2:	bf00      	nop
 800bcb4:	20000738 	andcs	r0, r0, r8, lsr r7
 800bcb8:	080135dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, ip, sp}

0800bcbc <RemoteConfig::GetStringOutput() const>:
 800bcbc:	200c      	movs	r0, #12
 800bcbe:	4b03      	ldr	r3, [pc, #12]	; (800bccc <RemoteConfig::GetStringOutput() const+0x10>)
 800bcc0:	79da      	ldrb	r2, [r3, #7]
 800bcc2:	4b03      	ldr	r3, [pc, #12]	; (800bcd0 <RemoteConfig::GetStringOutput() const+0x14>)
 800bcc4:	fb00 3002 	mla	r0, r0, r2, r3
 800bcc8:	4770      	bx	lr
 800bcca:	bf00      	nop
 800bccc:	20000738 	andcs	r0, r0, r8, lsr r7
 800bcd0:	0801367f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, sp}

0800bcd4 <RemoteConfig::SetDisable(bool)>:
 800bcd4:	b538      	push	{r3, r4, r5, lr}
 800bcd6:	4604      	mov	r4, r0
 800bcd8:	7b03      	ldrb	r3, [r0, #12]
 800bcda:	b161      	cbz	r1, 800bcf6 <RemoteConfig::SetDisable(bool)+0x22>
 800bcdc:	b953      	cbnz	r3, 800bcf4 <RemoteConfig::SetDisable(bool)+0x20>
 800bcde:	4b0c      	ldr	r3, [pc, #48]	; (800bd10 <RemoteConfig::SetDisable(bool)+0x3c>)
 800bce0:	f642 1105 	movw	r1, #10501	; 0x2905
 800bce4:	6818      	ldr	r0, [r3, #0]
 800bce6:	f003 f814 	bl	800ed12 <Network::End(unsigned short)>
 800bcea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800bcee:	6163      	str	r3, [r4, #20]
 800bcf0:	2301      	movs	r3, #1
 800bcf2:	7323      	strb	r3, [r4, #12]
 800bcf4:	bd38      	pop	{r3, r4, r5, pc}
 800bcf6:	2b00      	cmp	r3, #0
 800bcf8:	d0fc      	beq.n	800bcf4 <RemoteConfig::SetDisable(bool)+0x20>
 800bcfa:	4b05      	ldr	r3, [pc, #20]	; (800bd10 <RemoteConfig::SetDisable(bool)+0x3c>)
 800bcfc:	460d      	mov	r5, r1
 800bcfe:	6818      	ldr	r0, [r3, #0]
 800bd00:	f642 1105 	movw	r1, #10501	; 0x2905
 800bd04:	f003 f802 	bl	800ed0c <Network::Begin(unsigned short)>
 800bd08:	7325      	strb	r5, [r4, #12]
 800bd0a:	6160      	str	r0, [r4, #20]
 800bd0c:	e7f2      	b.n	800bcf4 <RemoteConfig::SetDisable(bool)+0x20>
 800bd0e:	bf00      	nop
 800bd10:	20009070 	andcs	r9, r0, r0, ror r0

0800bd14 <RemoteConfig::SetDisplayName(char const*)>:
 800bd14:	2217      	movs	r2, #23
 800bd16:	4809      	ldr	r0, [pc, #36]	; (800bd3c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800bd18:	b508      	push	{r3, lr}
 800bd1a:	1e4b      	subs	r3, r1, #1
 800bd1c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800bd20:	b931      	cbnz	r1, 800bd30 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800bd22:	f005 f943 	bl	8010fac <memset>
 800bd26:	2200      	movs	r2, #0
 800bd28:	4b05      	ldr	r3, [pc, #20]	; (800bd40 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800bd2a:	f883 2020 	strb.w	r2, [r3, #32]
 800bd2e:	bd08      	pop	{r3, pc}
 800bd30:	3a01      	subs	r2, #1
 800bd32:	f800 1b01 	strb.w	r1, [r0], #1
 800bd36:	d1f1      	bne.n	800bd1c <RemoteConfig::SetDisplayName(char const*)+0x8>
 800bd38:	e7f5      	b.n	800bd26 <RemoteConfig::SetDisplayName(char const*)+0x12>
 800bd3a:	bf00      	nop
 800bd3c:	20000741 	andcs	r0, r0, r1, asr #14
 800bd40:	20000738 	andcs	r0, r0, r8, lsr r7

0800bd44 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800bd44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd46:	4604      	mov	r4, r0
 800bd48:	4616      	mov	r6, r2
 800bd4a:	460d      	mov	r5, r1
 800bd4c:	4f27      	ldr	r7, [pc, #156]	; (800bdec <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 800bd4e:	b085      	sub	sp, #20
 800bd50:	b9a9      	cbnz	r1, 800bd7e <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800bd52:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800bd56:	6839      	ldr	r1, [r7, #0]
 800bd58:	aa03      	add	r2, sp, #12
 800bd5a:	3105      	adds	r1, #5
 800bd5c:	9303      	str	r3, [sp, #12]
 800bd5e:	f000 fbe5 	bl	800c52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800bd62:	1e03      	subs	r3, r0, #0
 800bd64:	da1b      	bge.n	800bd9e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800bd66:	f642 1305 	movw	r3, #10501	; 0x2905
 800bd6a:	220b      	movs	r2, #11
 800bd6c:	9300      	str	r3, [sp, #0]
 800bd6e:	4920      	ldr	r1, [pc, #128]	; (800bdf0 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800bd70:	69a3      	ldr	r3, [r4, #24]
 800bd72:	7d20      	ldrb	r0, [r4, #20]
 800bd74:	f002 fafa 	bl	800e36c <udp_send>
 800bd78:	200c      	movs	r0, #12
 800bd7a:	b005      	add	sp, #20
 800bd7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd7e:	9203      	str	r2, [sp, #12]
 800bd80:	aa03      	add	r2, sp, #12
 800bd82:	6039      	str	r1, [r7, #0]
 800bd84:	f000 fbd2 	bl	800c52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800bd88:	1e03      	subs	r3, r0, #0
 800bd8a:	da08      	bge.n	800bd9e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800bd8c:	2e0b      	cmp	r6, #11
 800bd8e:	4632      	mov	r2, r6
 800bd90:	4628      	mov	r0, r5
 800bd92:	bf28      	it	cs
 800bd94:	220b      	movcs	r2, #11
 800bd96:	4916      	ldr	r1, [pc, #88]	; (800bdf0 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800bd98:	f005 f8e6 	bl	8010f68 <memcpy>
 800bd9c:	e7ec      	b.n	800bd78 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800bd9e:	201c      	movs	r0, #28
 800bda0:	4343      	muls	r3, r0
 800bda2:	4914      	ldr	r1, [pc, #80]	; (800bdf4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800bda4:	18ca      	adds	r2, r1, r3
 800bda6:	6852      	ldr	r2, [r2, #4]
 800bda8:	58cb      	ldr	r3, [r1, r3]
 800bdaa:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800bdae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800bdb2:	07d2      	lsls	r2, r2, #31
 800bdb4:	bf48      	it	mi
 800bdb6:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800bdba:	a903      	add	r1, sp, #12
 800bdbc:	bf48      	it	mi
 800bdbe:	58d3      	ldrmi	r3, [r2, r3]
 800bdc0:	4798      	blx	r3
 800bdc2:	9a03      	ldr	r2, [sp, #12]
 800bdc4:	b955      	cbnz	r5, 800bddc <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800bdc6:	f642 1305 	movw	r3, #10501	; 0x2905
 800bdca:	6839      	ldr	r1, [r7, #0]
 800bdcc:	9300      	str	r3, [sp, #0]
 800bdce:	7d20      	ldrb	r0, [r4, #20]
 800bdd0:	69a3      	ldr	r3, [r4, #24]
 800bdd2:	b292      	uxth	r2, r2
 800bdd4:	f002 faca 	bl	800e36c <udp_send>
 800bdd8:	9803      	ldr	r0, [sp, #12]
 800bdda:	e7ce      	b.n	800bd7a <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800bddc:	42b2      	cmp	r2, r6
 800bdde:	bf28      	it	cs
 800bde0:	4632      	movcs	r2, r6
 800bde2:	4628      	mov	r0, r5
 800bde4:	6839      	ldr	r1, [r7, #0]
 800bde6:	f005 f8ca 	bl	8010f7e <memmove>
 800bdea:	e7f5      	b.n	800bdd8 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800bdec:	20000734 	andcs	r0, r0, r4, lsr r7
 800bdf0:	08013580 	stmdaeq	r1, {r7, r8, sl, ip, sp}
 800bdf4:	080137dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, ip, sp}

0800bdf8 <RemoteConfig::HandleGetNoParams()>:
 800bdf8:	2200      	movs	r2, #0
 800bdfa:	4611      	mov	r1, r2
 800bdfc:	f7ff bfa2 	b.w	800bd44 <RemoteConfig::HandleGet(void*, unsigned int)>

0800be00 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800be00:	b510      	push	{r4, lr}
 800be02:	460c      	mov	r4, r1
 800be04:	4b07      	ldr	r3, [pc, #28]	; (800be24 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800be06:	b08a      	sub	sp, #40	; 0x28
 800be08:	6819      	ldr	r1, [r3, #0]
 800be0a:	a801      	add	r0, sp, #4
 800be0c:	f000 f9ae 	bl	800c16c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800be10:	4905      	ldr	r1, [pc, #20]	; (800be28 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800be12:	4623      	mov	r3, r4
 800be14:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800be18:	6809      	ldr	r1, [r1, #0]
 800be1a:	a801      	add	r0, sp, #4
 800be1c:	f000 faca 	bl	800c3b4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800be20:	b00a      	add	sp, #40	; 0x28
 800be22:	bd10      	pop	{r4, pc}
 800be24:	20001784 	andcs	r1, r0, r4, lsl #15
 800be28:	20000734 	andcs	r0, r0, r4, lsr r7

0800be2c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800be2c:	b513      	push	{r0, r1, r4, lr}
 800be2e:	460c      	mov	r4, r1
 800be30:	4b07      	ldr	r3, [pc, #28]	; (800be50 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800be32:	a801      	add	r0, sp, #4
 800be34:	6819      	ldr	r1, [r3, #0]
 800be36:	f003 f947 	bl	800f0c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800be3a:	4906      	ldr	r1, [pc, #24]	; (800be54 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800be3c:	4623      	mov	r3, r4
 800be3e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800be42:	6809      	ldr	r1, [r1, #0]
 800be44:	a801      	add	r0, sp, #4
 800be46:	f003 fb2b 	bl	800f4a0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800be4a:	b002      	add	sp, #8
 800be4c:	bd10      	pop	{r4, pc}
 800be4e:	bf00      	nop
 800be50:	2000177c 	andcs	r1, r0, ip, ror r7
 800be54:	20000734 	andcs	r0, r0, r4, lsr r7

0800be58 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 800be58:	b510      	push	{r4, lr}
 800be5a:	460c      	mov	r4, r1
 800be5c:	4b07      	ldr	r3, [pc, #28]	; (800be7c <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 800be5e:	b0e4      	sub	sp, #400	; 0x190
 800be60:	6819      	ldr	r1, [r3, #0]
 800be62:	4668      	mov	r0, sp
 800be64:	f7fd fa12 	bl	800928c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800be68:	4905      	ldr	r1, [pc, #20]	; (800be80 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 800be6a:	4623      	mov	r3, r4
 800be6c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800be70:	4668      	mov	r0, sp
 800be72:	6809      	ldr	r1, [r1, #0]
 800be74:	f7fd fba4 	bl	80095c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 800be78:	b064      	add	sp, #400	; 0x190
 800be7a:	bd10      	pop	{r4, pc}
 800be7c:	20001780 	andcs	r1, r0, r0, lsl #15
 800be80:	20000734 	andcs	r0, r0, r4, lsr r7

0800be84 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800be84:	b510      	push	{r4, lr}
 800be86:	460c      	mov	r4, r1
 800be88:	4b07      	ldr	r3, [pc, #28]	; (800bea8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800be8a:	b08c      	sub	sp, #48	; 0x30
 800be8c:	6819      	ldr	r1, [r3, #0]
 800be8e:	a801      	add	r0, sp, #4
 800be90:	f7fe f80a 	bl	8009ea8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800be94:	4905      	ldr	r1, [pc, #20]	; (800beac <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800be96:	4623      	mov	r3, r4
 800be98:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800be9c:	6809      	ldr	r1, [r1, #0]
 800be9e:	a801      	add	r0, sp, #4
 800bea0:	f7fe faa0 	bl	800a3e4 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 800bea4:	b00c      	add	sp, #48	; 0x30
 800bea6:	bd10      	pop	{r4, pc}
 800bea8:	20001788 	andcs	r1, r0, r8, lsl #15
 800beac:	20000734 	andcs	r0, r0, r4, lsr r7

0800beb0 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800beb0:	b530      	push	{r4, r5, lr}
 800beb2:	b085      	sub	sp, #20
 800beb4:	4604      	mov	r4, r0
 800beb6:	9201      	str	r2, [sp, #4]
 800beb8:	b9c9      	cbnz	r1, 800beee <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800beba:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800bebe:	9303      	str	r3, [sp, #12]
 800bec0:	4b1b      	ldr	r3, [pc, #108]	; (800bf30 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800bec2:	aa03      	add	r2, sp, #12
 800bec4:	6819      	ldr	r1, [r3, #0]
 800bec6:	3101      	adds	r1, #1
 800bec8:	f000 fb30 	bl	800c52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800becc:	2800      	cmp	r0, #0
 800bece:	db24      	blt.n	800bf1a <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800bed0:	221c      	movs	r2, #28
 800bed2:	4b18      	ldr	r3, [pc, #96]	; (800bf34 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800bed4:	fb02 3300 	mla	r3, r2, r0, r3
 800bed8:	68da      	ldr	r2, [r3, #12]
 800beda:	689b      	ldr	r3, [r3, #8]
 800bedc:	1051      	asrs	r1, r2, #1
 800bede:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800bee2:	07d2      	lsls	r2, r2, #31
 800bee4:	bf44      	itt	mi
 800bee6:	5862      	ldrmi	r2, [r4, r1]
 800bee8:	58d3      	ldrmi	r3, [r2, r3]
 800beea:	4798      	blx	r3
 800beec:	e015      	b.n	800bf1a <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800beee:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bef2:	4613      	mov	r3, r2
 800bef4:	d811      	bhi.n	800bf1a <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800bef6:	2200      	movs	r2, #0
 800bef8:	460d      	mov	r5, r1
 800befa:	490f      	ldr	r1, [pc, #60]	; (800bf38 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800befc:	6202      	str	r2, [r0, #32]
 800befe:	7809      	ldrb	r1, [r1, #0]
 800bf00:	b29b      	uxth	r3, r3
 800bf02:	07c9      	lsls	r1, r1, #31
 800bf04:	d50b      	bpl.n	800bf1e <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800bf06:	7829      	ldrb	r1, [r5, #0]
 800bf08:	297b      	cmp	r1, #123	; 0x7b
 800bf0a:	d108      	bne.n	800bf1e <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800bf0c:	3b01      	subs	r3, #1
 800bf0e:	4628      	mov	r0, r5
 800bf10:	b299      	uxth	r1, r3
 800bf12:	f004 f891 	bl	8010038 <properties::convert_json_file(char*, unsigned short, bool)>
 800bf16:	2800      	cmp	r0, #0
 800bf18:	dc08      	bgt.n	800bf2c <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 800bf1a:	b005      	add	sp, #20
 800bf1c:	bd30      	pop	{r4, r5, pc}
 800bf1e:	83a3      	strh	r3, [r4, #28]
 800bf20:	4b03      	ldr	r3, [pc, #12]	; (800bf30 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800bf22:	4620      	mov	r0, r4
 800bf24:	601d      	str	r5, [r3, #0]
 800bf26:	aa01      	add	r2, sp, #4
 800bf28:	1c69      	adds	r1, r5, #1
 800bf2a:	e7cd      	b.n	800bec8 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800bf2c:	83a0      	strh	r0, [r4, #28]
 800bf2e:	e7f7      	b.n	800bf20 <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 800bf30:	20000734 	andcs	r0, r0, r4, lsr r7
 800bf34:	080137dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, ip, sp}
 800bf38:	2000969e 	mulcs	r0, lr, r6

0800bf3c <RemoteConfig::Run()>:
 800bf3c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bf40:	7b03      	ldrb	r3, [r0, #12]
 800bf42:	2b00      	cmp	r3, #0
 800bf44:	d14f      	bne.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800bf46:	4604      	mov	r4, r0
 800bf48:	4d3e      	ldr	r5, [pc, #248]	; (800c044 <RemoteConfig::Run()+0x108>)
 800bf4a:	3024      	adds	r0, #36	; 0x24
 800bf4c:	f000 fdde 	bl	800cb0c <HttpDaemon::Run()>
 800bf50:	4629      	mov	r1, r5
 800bf52:	7d20      	ldrb	r0, [r4, #20]
 800bf54:	f10d 030e 	add.w	r3, sp, #14
 800bf58:	f104 0218 	add.w	r2, r4, #24
 800bf5c:	f002 f9e0 	bl	800e320 <udp_recv2>
 800bf60:	2803      	cmp	r0, #3
 800bf62:	83a0      	strh	r0, [r4, #28]
 800bf64:	d93f      	bls.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800bf66:	682b      	ldr	r3, [r5, #0]
 800bf68:	181a      	adds	r2, r3, r0
 800bf6a:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800bf6e:	2a0a      	cmp	r2, #10
 800bf70:	bf04      	itt	eq
 800bf72:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 800bf76:	83a0      	strheq	r0, [r4, #28]
 800bf78:	7819      	ldrb	r1, [r3, #0]
 800bf7a:	293f      	cmp	r1, #63	; 0x3f
 800bf7c:	d139      	bne.n	800bff2 <RemoteConfig::Run()+0xb6>
 800bf7e:	4832      	ldr	r0, [pc, #200]	; (800c048 <RemoteConfig::Run()+0x10c>)
 800bf80:	2200      	movs	r2, #0
 800bf82:	4607      	mov	r7, r0
 800bf84:	8ba1      	ldrh	r1, [r4, #28]
 800bf86:	3901      	subs	r1, #1
 800bf88:	b289      	uxth	r1, r1
 800bf8a:	83a1      	strh	r1, [r4, #28]
 800bf8c:	7b86      	ldrb	r6, [r0, #14]
 800bf8e:	8985      	ldrh	r5, [r0, #12]
 800bf90:	b17e      	cbz	r6, 800bfb2 <RemoteConfig::Run()+0x76>
 800bf92:	42a9      	cmp	r1, r5
 800bf94:	d80f      	bhi.n	800bfb6 <RemoteConfig::Run()+0x7a>
 800bf96:	3201      	adds	r2, #1
 800bf98:	2a08      	cmp	r2, #8
 800bf9a:	f100 0010 	add.w	r0, r0, #16
 800bf9e:	d1f5      	bne.n	800bf8c <RemoteConfig::Run()+0x50>
 800bfa0:	f642 1305 	movw	r3, #10501	; 0x2905
 800bfa4:	9300      	str	r3, [sp, #0]
 800bfa6:	69a3      	ldr	r3, [r4, #24]
 800bfa8:	4928      	ldr	r1, [pc, #160]	; (800c04c <RemoteConfig::Run()+0x110>)
 800bfaa:	7d20      	ldrb	r0, [r4, #20]
 800bfac:	f002 f9de 	bl	800e36c <udp_send>
 800bfb0:	e019      	b.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800bfb2:	42a9      	cmp	r1, r5
 800bfb4:	d1ef      	bne.n	800bf96 <RemoteConfig::Run()+0x5a>
 800bfb6:	6886      	ldr	r6, [r0, #8]
 800bfb8:	f103 0c01 	add.w	ip, r3, #1
 800bfbc:	4435      	add	r5, r6
 800bfbe:	42b5      	cmp	r5, r6
 800bfc0:	d006      	beq.n	800bfd0 <RemoteConfig::Run()+0x94>
 800bfc2:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800bfc6:	f816 eb01 	ldrb.w	lr, [r6], #1
 800bfca:	45f0      	cmp	r8, lr
 800bfcc:	d0f7      	beq.n	800bfbe <RemoteConfig::Run()+0x82>
 800bfce:	e7e2      	b.n	800bf96 <RemoteConfig::Run()+0x5a>
 800bfd0:	0113      	lsls	r3, r2, #4
 800bfd2:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800bfd6:	6852      	ldr	r2, [r2, #4]
 800bfd8:	58fb      	ldr	r3, [r7, r3]
 800bfda:	1051      	asrs	r1, r2, #1
 800bfdc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800bfe0:	07d2      	lsls	r2, r2, #31
 800bfe2:	d403      	bmi.n	800bfec <RemoteConfig::Run()+0xb0>
 800bfe4:	4798      	blx	r3
 800bfe6:	b004      	add	sp, #16
 800bfe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfec:	5862      	ldr	r2, [r4, r1]
 800bfee:	58d3      	ldr	r3, [r2, r3]
 800bff0:	e7f8      	b.n	800bfe4 <RemoteConfig::Run()+0xa8>
 800bff2:	7b62      	ldrb	r2, [r4, #13]
 800bff4:	2a00      	cmp	r2, #0
 800bff6:	d1f6      	bne.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800bff8:	2923      	cmp	r1, #35	; 0x23
 800bffa:	d105      	bne.n	800c008 <RemoteConfig::Run()+0xcc>
 800bffc:	4611      	mov	r1, r2
 800bffe:	4620      	mov	r0, r4
 800c000:	6222      	str	r2, [r4, #32]
 800c002:	f7ff ff55 	bl	800beb0 <RemoteConfig::HandleSet(void*, unsigned int)>
 800c006:	e7ee      	b.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800c008:	2921      	cmp	r1, #33	; 0x21
 800c00a:	d1ec      	bne.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800c00c:	8ba2      	ldrh	r2, [r4, #28]
 800c00e:	3a01      	subs	r2, #1
 800c010:	b292      	uxth	r2, r2
 800c012:	2a08      	cmp	r2, #8
 800c014:	83a2      	strh	r2, [r4, #28]
 800c016:	d90a      	bls.n	800c02e <RemoteConfig::Run()+0xf2>
 800c018:	490d      	ldr	r1, [pc, #52]	; (800c050 <RemoteConfig::Run()+0x114>)
 800c01a:	1c5a      	adds	r2, r3, #1
 800c01c:	3309      	adds	r3, #9
 800c01e:	4293      	cmp	r3, r2
 800c020:	d00c      	beq.n	800c03c <RemoteConfig::Run()+0x100>
 800c022:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c026:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c02a:	4285      	cmp	r5, r0
 800c02c:	d0f7      	beq.n	800c01e <RemoteConfig::Run()+0xe2>
 800c02e:	f642 1305 	movw	r3, #10501	; 0x2905
 800c032:	9300      	str	r3, [sp, #0]
 800c034:	2208      	movs	r2, #8
 800c036:	69a3      	ldr	r3, [r4, #24]
 800c038:	4906      	ldr	r1, [pc, #24]	; (800c054 <RemoteConfig::Run()+0x118>)
 800c03a:	e7b6      	b.n	800bfaa <RemoteConfig::Run()+0x6e>
 800c03c:	4620      	mov	r0, r4
 800c03e:	f7ff fdd7 	bl	800bbf0 <RemoteConfig::HandleDisplaySet()>
 800c042:	e7d0      	b.n	800bfe6 <RemoteConfig::Run()+0xaa>
 800c044:	20000734 	andcs	r0, r0, r4, lsr r7
 800c048:	08013710 	stmdaeq	r1, {r4, r8, r9, sl, ip, sp}
 800c04c:	08013595 	stmdaeq	r1, {r0, r2, r4, r7, r8, sl, ip, sp}
 800c050:	0801358c 	stmdaeq	r1, {r2, r3, r7, r8, sl, ip, sp}
 800c054:	0801359e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, sl, ip, sp}

0800c058 <RemoteConfig::HandleSetRconfig()>:
 800c058:	b510      	push	{r4, lr}
 800c05a:	4604      	mov	r4, r0
 800c05c:	4b08      	ldr	r3, [pc, #32]	; (800c080 <RemoteConfig::HandleSetRconfig()+0x28>)
 800c05e:	b08a      	sub	sp, #40	; 0x28
 800c060:	6819      	ldr	r1, [r3, #0]
 800c062:	a801      	add	r0, sp, #4
 800c064:	f000 f882 	bl	800c16c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800c068:	4b06      	ldr	r3, [pc, #24]	; (800c084 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800c06a:	8ba2      	ldrh	r2, [r4, #28]
 800c06c:	6819      	ldr	r1, [r3, #0]
 800c06e:	a801      	add	r0, sp, #4
 800c070:	f000 f892 	bl	800c198 <RemoteConfigParams::Load(char const*, unsigned int)>
 800c074:	4621      	mov	r1, r4
 800c076:	a801      	add	r0, sp, #4
 800c078:	f000 f9a9 	bl	800c3ce <RemoteConfigParams::Set(RemoteConfig*)>
 800c07c:	b00a      	add	sp, #40	; 0x28
 800c07e:	bd10      	pop	{r4, pc}
 800c080:	20001784 	andcs	r1, r0, r4, lsl #15
 800c084:	20000734 	andcs	r0, r0, r4, lsr r7

0800c088 <RemoteConfig::HandleSetNetworkTxt()>:
 800c088:	b513      	push	{r0, r1, r4, lr}
 800c08a:	4604      	mov	r4, r0
 800c08c:	4b06      	ldr	r3, [pc, #24]	; (800c0a8 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800c08e:	a801      	add	r0, sp, #4
 800c090:	6819      	ldr	r1, [r3, #0]
 800c092:	f003 f819 	bl	800f0c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800c096:	4b05      	ldr	r3, [pc, #20]	; (800c0ac <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800c098:	8ba2      	ldrh	r2, [r4, #28]
 800c09a:	6819      	ldr	r1, [r3, #0]
 800c09c:	a801      	add	r0, sp, #4
 800c09e:	f003 f833 	bl	800f108 <NetworkParams::Load(char const*, unsigned int)>
 800c0a2:	b002      	add	sp, #8
 800c0a4:	bd10      	pop	{r4, pc}
 800c0a6:	bf00      	nop
 800c0a8:	2000177c 	andcs	r1, r0, ip, ror r7
 800c0ac:	20000734 	andcs	r0, r0, r4, lsr r7

0800c0b0 <RemoteConfig::HandleSetOscTxt()>:
 800c0b0:	b510      	push	{r4, lr}
 800c0b2:	4604      	mov	r4, r0
 800c0b4:	4b06      	ldr	r3, [pc, #24]	; (800c0d0 <RemoteConfig::HandleSetOscTxt()+0x20>)
 800c0b6:	b0e4      	sub	sp, #400	; 0x190
 800c0b8:	6819      	ldr	r1, [r3, #0]
 800c0ba:	4668      	mov	r0, sp
 800c0bc:	f7fd f8e6 	bl	800928c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800c0c0:	4b04      	ldr	r3, [pc, #16]	; (800c0d4 <RemoteConfig::HandleSetOscTxt()+0x24>)
 800c0c2:	4668      	mov	r0, sp
 800c0c4:	8ba2      	ldrh	r2, [r4, #28]
 800c0c6:	6819      	ldr	r1, [r3, #0]
 800c0c8:	f7fd f8fc 	bl	80092c4 <OSCServerParams::Load(char const*, unsigned int)>
 800c0cc:	b064      	add	sp, #400	; 0x190
 800c0ce:	bd10      	pop	{r4, pc}
 800c0d0:	20001780 	andcs	r1, r0, r0, lsl #15
 800c0d4:	20000734 	andcs	r0, r0, r4, lsr r7

0800c0d8 <RemoteConfig::HandleSetDevicesTxt()>:
 800c0d8:	b510      	push	{r4, lr}
 800c0da:	4604      	mov	r4, r0
 800c0dc:	4b06      	ldr	r3, [pc, #24]	; (800c0f8 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800c0de:	b08c      	sub	sp, #48	; 0x30
 800c0e0:	6819      	ldr	r1, [r3, #0]
 800c0e2:	a801      	add	r0, sp, #4
 800c0e4:	f7fd fee0 	bl	8009ea8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800c0e8:	4b04      	ldr	r3, [pc, #16]	; (800c0fc <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800c0ea:	8ba2      	ldrh	r2, [r4, #28]
 800c0ec:	6819      	ldr	r1, [r3, #0]
 800c0ee:	a801      	add	r0, sp, #4
 800c0f0:	f7fd ff0e 	bl	8009f10 <WS28xxDmxParams::Load(char const*, unsigned int)>
 800c0f4:	b00c      	add	sp, #48	; 0x30
 800c0f6:	bd10      	pop	{r4, pc}
 800c0f8:	20001788 	andcs	r1, r0, r8, lsl #15
 800c0fc:	20000734 	andcs	r0, r0, r4, lsr r7

0800c100 <RemoteConfig::HandleFactory()>:
 800c100:	b538      	push	{r3, r4, r5, lr}
 800c102:	2400      	movs	r4, #0
 800c104:	4d04      	ldr	r5, [pc, #16]	; (800c118 <RemoteConfig::HandleFactory()+0x18>)
 800c106:	4621      	mov	r1, r4
 800c108:	6828      	ldr	r0, [r5, #0]
 800c10a:	3401      	adds	r4, #1
 800c10c:	f000 ff22 	bl	800cf54 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800c110:	2c1c      	cmp	r4, #28
 800c112:	d1f8      	bne.n	800c106 <RemoteConfig::HandleFactory()+0x6>
 800c114:	bd38      	pop	{r3, r4, r5, pc}
 800c116:	bf00      	nop
 800c118:	20001774 	andcs	r1, r0, r4, ror r7

0800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800c11c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c11e:	460b      	mov	r3, r1
 800c120:	8885      	ldrh	r5, [r0, #4]
 800c122:	88c1      	ldrh	r1, [r0, #6]
 800c124:	42a9      	cmp	r1, r5
 800c126:	d214      	bcs.n	800c152 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800c128:	4604      	mov	r4, r0
 800c12a:	6800      	ldr	r0, [r0, #0]
 800c12c:	1a6d      	subs	r5, r5, r1
 800c12e:	4408      	add	r0, r1
 800c130:	7a21      	ldrb	r1, [r4, #8]
 800c132:	b91a      	cbnz	r2, 800c13c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800c134:	b919      	cbnz	r1, 800c13e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800c136:	4a0a      	ldr	r2, [pc, #40]	; (800c160 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800c138:	9100      	str	r1, [sp, #0]
 800c13a:	e002      	b.n	800c142 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800c13c:	b159      	cbz	r1, 800c156 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800c13e:	9200      	str	r2, [sp, #0]
 800c140:	4a08      	ldr	r2, [pc, #32]	; (800c164 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800c142:	4629      	mov	r1, r5
 800c144:	f7fc fd60 	bl	8008c08 <snprintf>
 800c148:	4285      	cmp	r5, r0
 800c14a:	bfa2      	ittt	ge
 800c14c:	88e3      	ldrhge	r3, [r4, #6]
 800c14e:	181b      	addge	r3, r3, r0
 800c150:	80e3      	strhge	r3, [r4, #6]
 800c152:	b003      	add	sp, #12
 800c154:	bd30      	pop	{r4, r5, pc}
 800c156:	2201      	movs	r2, #1
 800c158:	9200      	str	r2, [sp, #0]
 800c15a:	4a03      	ldr	r2, [pc, #12]	; (800c168 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800c15c:	e7f1      	b.n	800c142 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800c15e:	bf00      	nop
 800c160:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 800c164:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 800c168:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}

0800c16c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800c16c:	b510      	push	{r4, lr}
 800c16e:	4604      	mov	r4, r0
 800c170:	2220      	movs	r2, #32
 800c172:	f840 1b04 	str.w	r1, [r0], #4
 800c176:	2100      	movs	r1, #0
 800c178:	f004 ff18 	bl	8010fac <memset>
 800c17c:	4620      	mov	r0, r4
 800c17e:	bd10      	pop	{r4, pc}

0800c180 <RemoteConfigParams::Load()>:
 800c180:	b508      	push	{r3, lr}
 800c182:	2300      	movs	r3, #0
 800c184:	4601      	mov	r1, r0
 800c186:	6043      	str	r3, [r0, #4]
 800c188:	6800      	ldr	r0, [r0, #0]
 800c18a:	b120      	cbz	r0, 800c196 <RemoteConfigParams::Load()+0x16>
 800c18c:	6803      	ldr	r3, [r0, #0]
 800c18e:	3104      	adds	r1, #4
 800c190:	68db      	ldr	r3, [r3, #12]
 800c192:	4798      	blx	r3
 800c194:	2001      	movs	r0, #1
 800c196:	bd08      	pop	{r3, pc}

0800c198 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800c198:	2300      	movs	r3, #0
 800c19a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c19c:	460d      	mov	r5, r1
 800c19e:	4616      	mov	r6, r2
 800c1a0:	4604      	mov	r4, r0
 800c1a2:	6043      	str	r3, [r0, #4]
 800c1a4:	4602      	mov	r2, r0
 800c1a6:	490a      	ldr	r1, [pc, #40]	; (800c1d0 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800c1a8:	4668      	mov	r0, sp
 800c1aa:	f004 f893 	bl	80102d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c1ae:	4632      	mov	r2, r6
 800c1b0:	4629      	mov	r1, r5
 800c1b2:	4668      	mov	r0, sp
 800c1b4:	f004 f892 	bl	80102dc <ReadConfigFile::Read(char const*, unsigned int)>
 800c1b8:	4621      	mov	r1, r4
 800c1ba:	f851 0b04 	ldr.w	r0, [r1], #4
 800c1be:	6803      	ldr	r3, [r0, #0]
 800c1c0:	689b      	ldr	r3, [r3, #8]
 800c1c2:	4798      	blx	r3
 800c1c4:	4668      	mov	r0, sp
 800c1c6:	f004 f888 	bl	80102da <ReadConfigFile::~ReadConfigFile()>
 800c1ca:	b002      	add	sp, #8
 800c1cc:	bd70      	pop	{r4, r5, r6, pc}
 800c1ce:	bf00      	nop
 800c1d0:	0800c291 	stmdaeq	r0, {r0, r4, r7, r9, lr, pc}

0800c1d4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800c1d4:	6843      	ldr	r3, [r0, #4]
 800c1d6:	b111      	cbz	r1, 800c1de <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800c1d8:	4313      	orrs	r3, r2
 800c1da:	6043      	str	r3, [r0, #4]
 800c1dc:	4770      	bx	lr
 800c1de:	ea23 0302 	bic.w	r3, r3, r2
 800c1e2:	e7fa      	b.n	800c1da <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800c1e4 <RemoteConfigParams::callbackFunction(char const*)>:
 800c1e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1e6:	460d      	mov	r5, r1
 800c1e8:	4604      	mov	r4, r0
 800c1ea:	4923      	ldr	r1, [pc, #140]	; (800c278 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800c1ec:	4628      	mov	r0, r5
 800c1ee:	f10d 0203 	add.w	r2, sp, #3
 800c1f2:	f004 f9aa 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c1f6:	b938      	cbnz	r0, 800c208 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800c1f8:	2201      	movs	r2, #1
 800c1fa:	4620      	mov	r0, r4
 800c1fc:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800c200:	f7ff ffe8 	bl	800c1d4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800c204:	b003      	add	sp, #12
 800c206:	bd30      	pop	{r4, r5, pc}
 800c208:	4628      	mov	r0, r5
 800c20a:	491c      	ldr	r1, [pc, #112]	; (800c27c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800c20c:	f10d 0203 	add.w	r2, sp, #3
 800c210:	f004 f99b 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c214:	b908      	cbnz	r0, 800c21a <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800c216:	2202      	movs	r2, #2
 800c218:	e7ef      	b.n	800c1fa <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800c21a:	4628      	mov	r0, r5
 800c21c:	4918      	ldr	r1, [pc, #96]	; (800c280 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800c21e:	f10d 0203 	add.w	r2, sp, #3
 800c222:	f004 f992 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c226:	b908      	cbnz	r0, 800c22c <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800c228:	2204      	movs	r2, #4
 800c22a:	e7e6      	b.n	800c1fa <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800c22c:	4628      	mov	r0, r5
 800c22e:	4915      	ldr	r1, [pc, #84]	; (800c284 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800c230:	f10d 0203 	add.w	r2, sp, #3
 800c234:	f004 f989 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c238:	b908      	cbnz	r0, 800c23e <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800c23a:	2208      	movs	r2, #8
 800c23c:	e7dd      	b.n	800c1fa <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800c23e:	4628      	mov	r0, r5
 800c240:	4911      	ldr	r1, [pc, #68]	; (800c288 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800c242:	f10d 0203 	add.w	r2, sp, #3
 800c246:	f004 f980 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c24a:	b908      	cbnz	r0, 800c250 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800c24c:	2220      	movs	r2, #32
 800c24e:	e7d4      	b.n	800c1fa <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800c250:	2317      	movs	r3, #23
 800c252:	4628      	mov	r0, r5
 800c254:	9301      	str	r3, [sp, #4]
 800c256:	490d      	ldr	r1, [pc, #52]	; (800c28c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800c258:	ab01      	add	r3, sp, #4
 800c25a:	f104 020c 	add.w	r2, r4, #12
 800c25e:	f004 f871 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c262:	2800      	cmp	r0, #0
 800c264:	d1ce      	bne.n	800c204 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800c266:	9b01      	ldr	r3, [sp, #4]
 800c268:	4423      	add	r3, r4
 800c26a:	7318      	strb	r0, [r3, #12]
 800c26c:	6863      	ldr	r3, [r4, #4]
 800c26e:	f043 0310 	orr.w	r3, r3, #16
 800c272:	6063      	str	r3, [r4, #4]
 800c274:	e7c6      	b.n	800c204 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800c276:	bf00      	nop
 800c278:	08013b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, ip, sp}
 800c27c:	08013b49 	stmdaeq	r1, {r0, r3, r6, r8, r9, fp, ip, sp}
 800c280:	08013b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800c284:	08013b65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, fp, ip, sp}
 800c288:	08013b73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, fp, ip, sp}
 800c28c:	08013b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, ip, sp}

0800c290 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800c290:	f7ff bfa8 	b.w	800c1e4 <RemoteConfigParams::callbackFunction(char const*)>

0800c294 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800c294:	b570      	push	{r4, r5, r6, lr}
 800c296:	4604      	mov	r4, r0
 800c298:	4615      	mov	r5, r2
 800c29a:	461e      	mov	r6, r3
 800c29c:	b086      	sub	sp, #24
 800c29e:	3004      	adds	r0, #4
 800c2a0:	2900      	cmp	r1, #0
 800c2a2:	d040      	beq.n	800c326 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800c2a4:	2220      	movs	r2, #32
 800c2a6:	f004 fe6a 	bl	8010f7e <memmove>
 800c2aa:	4633      	mov	r3, r6
 800c2ac:	462a      	mov	r2, r5
 800c2ae:	4937      	ldr	r1, [pc, #220]	; (800c38c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800c2b0:	a803      	add	r0, sp, #12
 800c2b2:	f003 ff6f 	bl	8010194 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c2b6:	6862      	ldr	r2, [r4, #4]
 800c2b8:	4935      	ldr	r1, [pc, #212]	; (800c390 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800c2ba:	f002 0201 	and.w	r2, r2, #1
 800c2be:	a803      	add	r0, sp, #12
 800c2c0:	f7ff ff2c 	bl	800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c2c4:	6862      	ldr	r2, [r4, #4]
 800c2c6:	4933      	ldr	r1, [pc, #204]	; (800c394 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800c2c8:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800c2cc:	a803      	add	r0, sp, #12
 800c2ce:	f7ff ff25 	bl	800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c2d2:	6862      	ldr	r2, [r4, #4]
 800c2d4:	4930      	ldr	r1, [pc, #192]	; (800c398 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800c2d6:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800c2da:	a803      	add	r0, sp, #12
 800c2dc:	f7ff ff1e 	bl	800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c2e0:	6862      	ldr	r2, [r4, #4]
 800c2e2:	492e      	ldr	r1, [pc, #184]	; (800c39c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800c2e4:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800c2e8:	a803      	add	r0, sp, #12
 800c2ea:	f7ff ff17 	bl	800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c2ee:	6862      	ldr	r2, [r4, #4]
 800c2f0:	492b      	ldr	r1, [pc, #172]	; (800c3a0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800c2f2:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800c2f6:	a803      	add	r0, sp, #12
 800c2f8:	f7ff ff10 	bl	800c11c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c2fc:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800c300:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c304:	42a9      	cmp	r1, r5
 800c306:	d223      	bcs.n	800c350 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800c308:	9803      	ldr	r0, [sp, #12]
 800c30a:	1a6d      	subs	r5, r5, r1
 800c30c:	4408      	add	r0, r1
 800c30e:	6861      	ldr	r1, [r4, #4]
 800c310:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c314:	06c9      	lsls	r1, r1, #27
 800c316:	f104 030c 	add.w	r3, r4, #12
 800c31a:	d40b      	bmi.n	800c334 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800c31c:	b95a      	cbnz	r2, 800c336 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800c31e:	9300      	str	r3, [sp, #0]
 800c320:	4a20      	ldr	r2, [pc, #128]	; (800c3a4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800c322:	4b21      	ldr	r3, [pc, #132]	; (800c3a8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800c324:	e00a      	b.n	800c33c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800c326:	6823      	ldr	r3, [r4, #0]
 800c328:	4601      	mov	r1, r0
 800c32a:	681a      	ldr	r2, [r3, #0]
 800c32c:	4618      	mov	r0, r3
 800c32e:	68d2      	ldr	r2, [r2, #12]
 800c330:	4790      	blx	r2
 800c332:	e7ba      	b.n	800c2aa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800c334:	b32a      	cbz	r2, 800c382 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800c336:	9300      	str	r3, [sp, #0]
 800c338:	4a1c      	ldr	r2, [pc, #112]	; (800c3ac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800c33a:	4b1b      	ldr	r3, [pc, #108]	; (800c3a8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800c33c:	4629      	mov	r1, r5
 800c33e:	f7fc fc63 	bl	8008c08 <snprintf>
 800c342:	4285      	cmp	r5, r0
 800c344:	bfa2      	ittt	ge
 800c346:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c34a:	18c0      	addge	r0, r0, r3
 800c34c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c350:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c354:	b17b      	cbz	r3, 800c376 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800c356:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c35a:	9b03      	ldr	r3, [sp, #12]
 800c35c:	4413      	add	r3, r2
 800c35e:	227d      	movs	r2, #125	; 0x7d
 800c360:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c364:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c368:	9903      	ldr	r1, [sp, #12]
 800c36a:	54ca      	strb	r2, [r1, r3]
 800c36c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c370:	3301      	adds	r3, #1
 800c372:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c376:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c37a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c37c:	601a      	str	r2, [r3, #0]
 800c37e:	b006      	add	sp, #24
 800c380:	bd70      	pop	{r4, r5, r6, pc}
 800c382:	9300      	str	r3, [sp, #0]
 800c384:	4a0a      	ldr	r2, [pc, #40]	; (800c3b0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800c386:	4b08      	ldr	r3, [pc, #32]	; (800c3a8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800c388:	e7d8      	b.n	800c33c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800c38a:	bf00      	nop
 800c38c:	08013b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, sp}
 800c390:	08013b28 	stmdaeq	r1, {r3, r5, r8, r9, fp, ip, sp}
 800c394:	08013b49 	stmdaeq	r1, {r0, r3, r6, r8, r9, fp, ip, sp}
 800c398:	08013b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800c39c:	08013b65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, fp, ip, sp}
 800c3a0:	08013b73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, fp, ip, sp}
 800c3a4:	080132cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, ip, sp}
 800c3a8:	08013b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, ip, sp}
 800c3ac:	080132c1 	stmdaeq	r1, {r0, r6, r7, r9, ip, sp}
 800c3b0:	080132cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, ip, sp}

0800c3b4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800c3b4:	b513      	push	{r0, r1, r4, lr}
 800c3b6:	6804      	ldr	r4, [r0, #0]
 800c3b8:	b914      	cbnz	r4, 800c3c0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800c3ba:	601c      	str	r4, [r3, #0]
 800c3bc:	b002      	add	sp, #8
 800c3be:	bd10      	pop	{r4, pc}
 800c3c0:	9300      	str	r3, [sp, #0]
 800c3c2:	4613      	mov	r3, r2
 800c3c4:	460a      	mov	r2, r1
 800c3c6:	2100      	movs	r1, #0
 800c3c8:	f7ff ff64 	bl	800c294 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800c3cc:	e7f6      	b.n	800c3bc <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800c3ce <RemoteConfigParams::Set(RemoteConfig*)>:
 800c3ce:	b538      	push	{r3, r4, r5, lr}
 800c3d0:	460c      	mov	r4, r1
 800c3d2:	4605      	mov	r5, r0
 800c3d4:	6841      	ldr	r1, [r0, #4]
 800c3d6:	4620      	mov	r0, r4
 800c3d8:	f001 0101 	and.w	r1, r1, #1
 800c3dc:	f7ff fc7a 	bl	800bcd4 <RemoteConfig::SetDisable(bool)>
 800c3e0:	686b      	ldr	r3, [r5, #4]
 800c3e2:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800c3e6:	7362      	strb	r2, [r4, #13]
 800c3e8:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800c3ec:	73a2      	strb	r2, [r4, #14]
 800c3ee:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800c3f2:	73e2      	strb	r2, [r4, #15]
 800c3f4:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800c3f8:	06db      	lsls	r3, r3, #27
 800c3fa:	7422      	strb	r2, [r4, #16]
 800c3fc:	d506      	bpl.n	800c40c <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800c3fe:	4620      	mov	r0, r4
 800c400:	f105 010c 	add.w	r1, r5, #12
 800c404:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c408:	f7ff bc84 	b.w	800bd14 <RemoteConfig::SetDisplayName(char const*)>
 800c40c:	bd38      	pop	{r3, r4, r5, pc}

0800c40e <RemoteConfigParams::Dump()>:
 800c40e:	4770      	bx	lr

0800c410 <Display::TextStatus(char const*)>:
 800c410:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c414:	4604      	mov	r4, r0
 800c416:	6980      	ldr	r0, [r0, #24]
 800c418:	460d      	mov	r5, r1
 800c41a:	2800      	cmp	r0, #0
 800c41c:	d031      	beq.n	800c482 <Display::TextStatus(char const*)+0x72>
 800c41e:	7947      	ldrb	r7, [r0, #5]
 800c420:	6803      	ldr	r3, [r0, #0]
 800c422:	1e7e      	subs	r6, r7, #1
 800c424:	b2f6      	uxtb	r6, r6
 800c426:	4632      	mov	r2, r6
 800c428:	2100      	movs	r1, #0
 800c42a:	6a1b      	ldr	r3, [r3, #32]
 800c42c:	f890 9004 	ldrb.w	r9, [r0, #4]
 800c430:	f04f 0800 	mov.w	r8, #0
 800c434:	4798      	blx	r3
 800c436:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800c43a:	45c1      	cmp	r9, r8
 800c43c:	69a0      	ldr	r0, [r4, #24]
 800c43e:	d907      	bls.n	800c450 <Display::TextStatus(char const*)+0x40>
 800c440:	b118      	cbz	r0, 800c44a <Display::TextStatus(char const*)+0x3a>
 800c442:	6803      	ldr	r3, [r0, #0]
 800c444:	2120      	movs	r1, #32
 800c446:	695b      	ldr	r3, [r3, #20]
 800c448:	4798      	blx	r3
 800c44a:	f108 0801 	add.w	r8, r8, #1
 800c44e:	e7f4      	b.n	800c43a <Display::TextStatus(char const*)+0x2a>
 800c450:	b120      	cbz	r0, 800c45c <Display::TextStatus(char const*)+0x4c>
 800c452:	6803      	ldr	r3, [r0, #0]
 800c454:	4632      	mov	r2, r6
 800c456:	2100      	movs	r1, #0
 800c458:	6a1b      	ldr	r3, [r3, #32]
 800c45a:	4798      	blx	r3
 800c45c:	69a0      	ldr	r0, [r4, #24]
 800c45e:	b180      	cbz	r0, 800c482 <Display::TextStatus(char const*)+0x72>
 800c460:	2300      	movs	r3, #0
 800c462:	7901      	ldrb	r1, [r0, #4]
 800c464:	5cea      	ldrb	r2, [r5, r3]
 800c466:	b11a      	cbz	r2, 800c470 <Display::TextStatus(char const*)+0x60>
 800c468:	1c5a      	adds	r2, r3, #1
 800c46a:	4299      	cmp	r1, r3
 800c46c:	4613      	mov	r3, r2
 800c46e:	dcf9      	bgt.n	800c464 <Display::TextStatus(char const*)+0x54>
 800c470:	6802      	ldr	r2, [r0, #0]
 800c472:	4639      	mov	r1, r7
 800c474:	69d4      	ldr	r4, [r2, #28]
 800c476:	b2db      	uxtb	r3, r3
 800c478:	462a      	mov	r2, r5
 800c47a:	46a4      	mov	ip, r4
 800c47c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c480:	4760      	bx	ip
 800c482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800c488 <RemoteConfig::HandleReboot()>:
 800c488:	7b83      	ldrb	r3, [r0, #14]
 800c48a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c48c:	2b00      	cmp	r3, #0
 800c48e:	d03d      	beq.n	800c50c <RemoteConfig::HandleReboot()+0x84>
 800c490:	2301      	movs	r3, #1
 800c492:	4c1f      	ldr	r4, [pc, #124]	; (800c510 <RemoteConfig::HandleReboot()+0x88>)
 800c494:	7443      	strb	r3, [r0, #17]
 800c496:	6825      	ldr	r5, [r4, #0]
 800c498:	69a8      	ldr	r0, [r5, #24]
 800c49a:	b138      	cbz	r0, 800c4ac <RemoteConfig::HandleReboot()+0x24>
 800c49c:	2100      	movs	r1, #0
 800c49e:	6803      	ldr	r3, [r0, #0]
 800c4a0:	7429      	strb	r1, [r5, #16]
 800c4a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c4a4:	4798      	blx	r3
 800c4a6:	4b1b      	ldr	r3, [pc, #108]	; (800c514 <RemoteConfig::HandleReboot()+0x8c>)
 800c4a8:	681b      	ldr	r3, [r3, #0]
 800c4aa:	606b      	str	r3, [r5, #4]
 800c4ac:	4d1a      	ldr	r5, [pc, #104]	; (800c518 <RemoteConfig::HandleReboot()+0x90>)
 800c4ae:	6828      	ldr	r0, [r5, #0]
 800c4b0:	f000 fdd6 	bl	800d060 <SpiFlashStore::Flash()>
 800c4b4:	2800      	cmp	r0, #0
 800c4b6:	d1fa      	bne.n	800c4ae <RemoteConfig::HandleReboot()+0x26>
 800c4b8:	4b18      	ldr	r3, [pc, #96]	; (800c51c <RemoteConfig::HandleReboot()+0x94>)
 800c4ba:	6818      	ldr	r0, [r3, #0]
 800c4bc:	f002 fc1e 	bl	800ecfc <Network::Shutdown()>
 800c4c0:	4817      	ldr	r0, [pc, #92]	; (800c520 <RemoteConfig::HandleReboot()+0x98>)
 800c4c2:	f7fc fb91 	bl	8008be8 <printf>
 800c4c6:	6823      	ldr	r3, [r4, #0]
 800c4c8:	6998      	ldr	r0, [r3, #24]
 800c4ca:	b110      	cbz	r0, 800c4d2 <RemoteConfig::HandleReboot()+0x4a>
 800c4cc:	6803      	ldr	r3, [r0, #0]
 800c4ce:	68db      	ldr	r3, [r3, #12]
 800c4d0:	4798      	blx	r3
 800c4d2:	6824      	ldr	r4, [r4, #0]
 800c4d4:	4913      	ldr	r1, [pc, #76]	; (800c524 <RemoteConfig::HandleReboot()+0x9c>)
 800c4d6:	4620      	mov	r0, r4
 800c4d8:	f7ff ff9a 	bl	800c410 <Display::TextStatus(char const*)>
 800c4dc:	7c63      	ldrb	r3, [r4, #17]
 800c4de:	b18b      	cbz	r3, 800c504 <RemoteConfig::HandleReboot()+0x7c>
 800c4e0:	2312      	movs	r3, #18
 800c4e2:	f88d 3004 	strb.w	r3, [sp, #4]
 800c4e6:	23bf      	movs	r3, #191	; 0xbf
 800c4e8:	7a20      	ldrb	r0, [r4, #8]
 800c4ea:	f88d 3005 	strb.w	r3, [sp, #5]
 800c4ee:	f88d 3006 	strb.w	r3, [sp, #6]
 800c4f2:	f005 fc77 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 800c4f6:	68e0      	ldr	r0, [r4, #12]
 800c4f8:	f005 fc6c 	bl	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>
 800c4fc:	2103      	movs	r1, #3
 800c4fe:	a801      	add	r0, sp, #4
 800c500:	f005 fc76 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 800c504:	4b08      	ldr	r3, [pc, #32]	; (800c528 <RemoteConfig::HandleReboot()+0xa0>)
 800c506:	6818      	ldr	r0, [r3, #0]
 800c508:	f004 fc38 	bl	8010d7c <Hardware::Reboot()>
 800c50c:	b003      	add	sp, #12
 800c50e:	bd30      	pop	{r4, r5, pc}
 800c510:	200096a0 	andcs	r9, r0, r0, lsr #13
 800c514:	200097a4 	andcs	r9, r0, r4, lsr #15
 800c518:	20001774 	andcs	r1, r0, r4, ror r7
 800c51c:	20009070 	andcs	r9, r0, r0, ror r0
 800c520:	08013790 	stmdaeq	r1, {r4, r7, r8, r9, sl, ip, sp}
 800c524:	0801379f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, ip, sp}
 800c528:	20009790 	mulcs	r0, r0, r7

0800c52c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800c52c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c530:	2000      	movs	r0, #0
 800c532:	4d12      	ldr	r5, [pc, #72]	; (800c57c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800c534:	f10d 0c04 	add.w	ip, sp, #4
 800c538:	6814      	ldr	r4, [r2, #0]
 800c53a:	7d2b      	ldrb	r3, [r5, #20]
 800c53c:	692e      	ldr	r6, [r5, #16]
 800c53e:	42a3      	cmp	r3, r4
 800c540:	bf34      	ite	cc
 800c542:	4664      	movcc	r4, ip
 800c544:	4614      	movcs	r4, r2
 800c546:	9301      	str	r3, [sp, #4]
 800c548:	6827      	ldr	r7, [r4, #0]
 800c54a:	460c      	mov	r4, r1
 800c54c:	3e01      	subs	r6, #1
 800c54e:	440f      	add	r7, r1
 800c550:	42bc      	cmp	r4, r7
 800c552:	d011      	beq.n	800c578 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800c554:	f894 8000 	ldrb.w	r8, [r4]
 800c558:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800c55c:	45f0      	cmp	r8, lr
 800c55e:	d009      	beq.n	800c574 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800c560:	3001      	adds	r0, #1
 800c562:	2804      	cmp	r0, #4
 800c564:	f105 051c 	add.w	r5, r5, #28
 800c568:	d1e6      	bne.n	800c538 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800c56a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c56e:	b002      	add	sp, #8
 800c570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c574:	3401      	adds	r4, #1
 800c576:	e7eb      	b.n	800c550 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800c578:	6013      	str	r3, [r2, #0]
 800c57a:	e7f8      	b.n	800c56e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800c57c:	080137dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, ip, sp}

0800c580 <strcmp>:
 800c580:	1e43      	subs	r3, r0, #1
 800c582:	3901      	subs	r1, #1
 800c584:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c588:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c58c:	4290      	cmp	r0, r2
 800c58e:	d102      	bne.n	800c596 <strcmp+0x16>
 800c590:	2800      	cmp	r0, #0
 800c592:	d1f7      	bne.n	800c584 <strcmp+0x4>
 800c594:	4770      	bx	lr
 800c596:	1a80      	subs	r0, r0, r2
 800c598:	4770      	bx	lr

0800c59a <strcasecmp>:
 800c59a:	b530      	push	{r4, r5, lr}
 800c59c:	1e42      	subs	r2, r0, #1
 800c59e:	3901      	subs	r1, #1
 800c5a0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c5a4:	4604      	mov	r4, r0
 800c5a6:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800c5aa:	2b19      	cmp	r3, #25
 800c5ac:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800c5b0:	bf98      	it	ls
 800c5b2:	f100 0420 	addls.w	r4, r0, #32
 800c5b6:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800c5ba:	2d19      	cmp	r5, #25
 800c5bc:	bf98      	it	ls
 800c5be:	3320      	addls	r3, #32
 800c5c0:	42a3      	cmp	r3, r4
 800c5c2:	d102      	bne.n	800c5ca <strcasecmp+0x30>
 800c5c4:	2800      	cmp	r0, #0
 800c5c6:	d1eb      	bne.n	800c5a0 <strcasecmp+0x6>
 800c5c8:	bd30      	pop	{r4, r5, pc}
 800c5ca:	1ae0      	subs	r0, r4, r3
 800c5cc:	e7fc      	b.n	800c5c8 <strcasecmp+0x2e>
	...

0800c5d0 <PropertiesConfig::EnableJSON(bool)>:
 800c5d0:	4a04      	ldr	r2, [pc, #16]	; (800c5e4 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800c5d2:	7813      	ldrb	r3, [r2, #0]
 800c5d4:	b118      	cbz	r0, 800c5de <PropertiesConfig::EnableJSON(bool)+0xe>
 800c5d6:	f043 0301 	orr.w	r3, r3, #1
 800c5da:	7013      	strb	r3, [r2, #0]
 800c5dc:	4770      	bx	lr
 800c5de:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800c5e2:	e7fa      	b.n	800c5da <PropertiesConfig::EnableJSON(bool)+0xa>
 800c5e4:	2000969e 	mulcs	r0, lr, r6

0800c5e8 <HttpDaemon::HttpDaemon()>:
 800c5e8:	4a0a      	ldr	r2, [pc, #40]	; (800c614 <HttpDaemon::HttpDaemon()+0x2c>)
 800c5ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c5ee:	6002      	str	r2, [r0, #0]
 800c5f0:	2200      	movs	r2, #0
 800c5f2:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800c5f6:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800c5fa:	2102      	movs	r1, #2
 800c5fc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800c600:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800c604:	60c2      	str	r2, [r0, #12]
 800c606:	8402      	strh	r2, [r0, #32]
 800c608:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800c60c:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800c610:	4770      	bx	lr
 800c612:	bf00      	nop
 800c614:	08013aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp}

0800c618 <HttpDaemon::Start()>:
 800c618:	4b04      	ldr	r3, [pc, #16]	; (800c62c <HttpDaemon::Start()+0x14>)
 800c61a:	b510      	push	{r4, lr}
 800c61c:	2150      	movs	r1, #80	; 0x50
 800c61e:	4604      	mov	r4, r0
 800c620:	6818      	ldr	r0, [r3, #0]
 800c622:	f002 fd45 	bl	800f0b0 <Network::TcpBegin(unsigned short)>
 800c626:	6120      	str	r0, [r4, #16]
 800c628:	bd10      	pop	{r4, pc}
 800c62a:	bf00      	nop
 800c62c:	20009070 	andcs	r9, r0, r0, ror r0

0800c630 <HttpDaemon::ParseMethod(char*)>:
 800c630:	b538      	push	{r3, r4, r5, lr}
 800c632:	4604      	mov	r4, r0
 800c634:	4608      	mov	r0, r1
 800c636:	491b      	ldr	r1, [pc, #108]	; (800c6a4 <HttpDaemon::ParseMethod(char*)+0x74>)
 800c638:	f004 fce6 	bl	8011008 <strtok>
 800c63c:	4605      	mov	r5, r0
 800c63e:	b370      	cbz	r0, 800c69e <HttpDaemon::ParseMethod(char*)+0x6e>
 800c640:	4919      	ldr	r1, [pc, #100]	; (800c6a8 <HttpDaemon::ParseMethod(char*)+0x78>)
 800c642:	f7ff ff9d 	bl	800c580 <strcmp>
 800c646:	b940      	cbnz	r0, 800c65a <HttpDaemon::ParseMethod(char*)+0x2a>
 800c648:	61e0      	str	r0, [r4, #28]
 800c64a:	2000      	movs	r0, #0
 800c64c:	4915      	ldr	r1, [pc, #84]	; (800c6a4 <HttpDaemon::ParseMethod(char*)+0x74>)
 800c64e:	f004 fcdb 	bl	8011008 <strtok>
 800c652:	b950      	cbnz	r0, 800c66a <HttpDaemon::ParseMethod(char*)+0x3a>
 800c654:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800c658:	bd38      	pop	{r3, r4, r5, pc}
 800c65a:	4628      	mov	r0, r5
 800c65c:	4913      	ldr	r1, [pc, #76]	; (800c6ac <HttpDaemon::ParseMethod(char*)+0x7c>)
 800c65e:	f7ff ff8f 	bl	800c580 <strcmp>
 800c662:	b9e0      	cbnz	r0, 800c69e <HttpDaemon::ParseMethod(char*)+0x6e>
 800c664:	2301      	movs	r3, #1
 800c666:	61e3      	str	r3, [r4, #28]
 800c668:	e7ef      	b.n	800c64a <HttpDaemon::ParseMethod(char*)+0x1a>
 800c66a:	6060      	str	r0, [r4, #4]
 800c66c:	4910      	ldr	r1, [pc, #64]	; (800c6b0 <HttpDaemon::ParseMethod(char*)+0x80>)
 800c66e:	2000      	movs	r0, #0
 800c670:	f004 fcca 	bl	8011008 <strtok>
 800c674:	2800      	cmp	r0, #0
 800c676:	d0ed      	beq.n	800c654 <HttpDaemon::ParseMethod(char*)+0x24>
 800c678:	490e      	ldr	r1, [pc, #56]	; (800c6b4 <HttpDaemon::ParseMethod(char*)+0x84>)
 800c67a:	f7ff ff81 	bl	800c580 <strcmp>
 800c67e:	2800      	cmp	r0, #0
 800c680:	d1e8      	bne.n	800c654 <HttpDaemon::ParseMethod(char*)+0x24>
 800c682:	490d      	ldr	r1, [pc, #52]	; (800c6b8 <HttpDaemon::ParseMethod(char*)+0x88>)
 800c684:	f004 fcc0 	bl	8011008 <strtok>
 800c688:	2800      	cmp	r0, #0
 800c68a:	d0e3      	beq.n	800c654 <HttpDaemon::ParseMethod(char*)+0x24>
 800c68c:	490b      	ldr	r1, [pc, #44]	; (800c6bc <HttpDaemon::ParseMethod(char*)+0x8c>)
 800c68e:	f7ff ff77 	bl	800c580 <strcmp>
 800c692:	2800      	cmp	r0, #0
 800c694:	f240 10f9 	movw	r0, #505	; 0x1f9
 800c698:	bf08      	it	eq
 800c69a:	20c8      	moveq	r0, #200	; 0xc8
 800c69c:	e7dc      	b.n	800c658 <HttpDaemon::ParseMethod(char*)+0x28>
 800c69e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800c6a2:	e7d9      	b.n	800c658 <HttpDaemon::ParseMethod(char*)+0x28>
 800c6a4:	0801384c 	stmdaeq	r1, {r2, r3, r6, fp, ip, sp}
 800c6a8:	0801384e 	stmdaeq	r1, {r1, r2, r3, r6, fp, ip, sp}
 800c6ac:	08013852 	stmdaeq	r1, {r1, r4, r6, fp, ip, sp}
 800c6b0:	080138bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, ip, sp}
 800c6b4:	08013857 	stmdaeq	r1, {r0, r1, r2, r4, r6, fp, ip, sp}
 800c6b8:	0801385c 	stmdaeq	r1, {r2, r3, r4, r6, fp, ip, sp}
 800c6bc:	0801385f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp}

0800c6c0 <HttpDaemon::ParseHeaderField(char*)>:
 800c6c0:	b538      	push	{r3, r4, r5, lr}
 800c6c2:	4605      	mov	r5, r0
 800c6c4:	4608      	mov	r0, r1
 800c6c6:	491d      	ldr	r1, [pc, #116]	; (800c73c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800c6c8:	f004 fc9e 	bl	8011008 <strtok>
 800c6cc:	4604      	mov	r4, r0
 800c6ce:	b910      	cbnz	r0, 800c6d6 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800c6d0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800c6d4:	bd38      	pop	{r3, r4, r5, pc}
 800c6d6:	491a      	ldr	r1, [pc, #104]	; (800c740 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800c6d8:	f7ff ff5f 	bl	800c59a <strcasecmp>
 800c6dc:	b970      	cbnz	r0, 800c6fc <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800c6de:	4919      	ldr	r1, [pc, #100]	; (800c744 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800c6e0:	f004 fc92 	bl	8011008 <strtok>
 800c6e4:	2800      	cmp	r0, #0
 800c6e6:	d0f3      	beq.n	800c6d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800c6e8:	4917      	ldr	r1, [pc, #92]	; (800c748 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800c6ea:	f7ff ff49 	bl	800c580 <strcmp>
 800c6ee:	b108      	cbz	r0, 800c6f4 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800c6f0:	20c8      	movs	r0, #200	; 0xc8
 800c6f2:	e7ef      	b.n	800c6d4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800c6f4:	2301      	movs	r3, #1
 800c6f6:	f885 3020 	strb.w	r3, [r5, #32]
 800c6fa:	e7f9      	b.n	800c6f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	4913      	ldr	r1, [pc, #76]	; (800c74c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800c700:	f7ff ff4b 	bl	800c59a <strcasecmp>
 800c704:	4604      	mov	r4, r0
 800c706:	2800      	cmp	r0, #0
 800c708:	d1f2      	bne.n	800c6f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800c70a:	4911      	ldr	r1, [pc, #68]	; (800c750 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800c70c:	f004 fc7c 	bl	8011008 <strtok>
 800c710:	2800      	cmp	r0, #0
 800c712:	d0dd      	beq.n	800c6d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800c714:	1e42      	subs	r2, r0, #1
 800c716:	4623      	mov	r3, r4
 800c718:	200a      	movs	r0, #10
 800c71a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c71e:	b151      	cbz	r1, 800c736 <HttpDaemon::ParseHeaderField(char*)+0x76>
 800c720:	3930      	subs	r1, #48	; 0x30
 800c722:	2909      	cmp	r1, #9
 800c724:	d8d4      	bhi.n	800c6d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800c726:	fb00 1303 	mla	r3, r0, r3, r1
 800c72a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800c72e:	d9f4      	bls.n	800c71a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800c730:	f240 109d 	movw	r0, #413	; 0x19d
 800c734:	e7ce      	b.n	800c6d4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800c736:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800c73a:	e7d9      	b.n	800c6f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800c73c:	08013863 	stmdaeq	r1, {r0, r1, r5, r6, fp, ip, sp}
 800c740:	08013865 	stmdaeq	r1, {r0, r2, r5, r6, fp, ip, sp}
 800c744:	08013872 	stmdaeq	r1, {r1, r4, r5, r6, fp, ip, sp}
 800c748:	08013875 	stmdaeq	r1, {r0, r2, r4, r5, r6, fp, ip, sp}
 800c74c:	08013886 	stmdaeq	r1, {r1, r2, r7, fp, ip, sp}
 800c750:	0801384c 	stmdaeq	r1, {r2, r3, r6, fp, ip, sp}

0800c754 <HttpDaemon::ParseRequest()>:
 800c754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c756:	2400      	movs	r4, #0
 800c758:	4605      	mov	r5, r0
 800c75a:	4622      	mov	r2, r4
 800c75c:	4626      	mov	r6, r4
 800c75e:	68c1      	ldr	r1, [r0, #12]
 800c760:	f880 4020 	strb.w	r4, [r0, #32]
 800c764:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800c768:	8aab      	ldrh	r3, [r5, #20]
 800c76a:	42a3      	cmp	r3, r4
 800c76c:	d923      	bls.n	800c7b6 <HttpDaemon::ParseRequest()+0x62>
 800c76e:	68eb      	ldr	r3, [r5, #12]
 800c770:	5d18      	ldrb	r0, [r3, r4]
 800c772:	280a      	cmp	r0, #10
 800c774:	d10e      	bne.n	800c794 <HttpDaemon::ParseRequest()+0x40>
 800c776:	4423      	add	r3, r4
 800c778:	f803 6c01 	strb.w	r6, [r3, #-1]
 800c77c:	1c57      	adds	r7, r2, #1
 800c77e:	b962      	cbnz	r2, 800c79a <HttpDaemon::ParseRequest()+0x46>
 800c780:	4628      	mov	r0, r5
 800c782:	f7ff ff55 	bl	800c630 <HttpDaemon::ParseMethod(char*)>
 800c786:	28c8      	cmp	r0, #200	; 0xc8
 800c788:	d116      	bne.n	800c7b8 <HttpDaemon::ParseRequest()+0x64>
 800c78a:	463a      	mov	r2, r7
 800c78c:	68e9      	ldr	r1, [r5, #12]
 800c78e:	3401      	adds	r4, #1
 800c790:	b2a4      	uxth	r4, r4
 800c792:	4421      	add	r1, r4
 800c794:	3401      	adds	r4, #1
 800c796:	b2a4      	uxth	r4, r4
 800c798:	e7e6      	b.n	800c768 <HttpDaemon::ParseRequest()+0x14>
 800c79a:	7808      	ldrb	r0, [r1, #0]
 800c79c:	b968      	cbnz	r0, 800c7ba <HttpDaemon::ParseRequest()+0x66>
 800c79e:	696b      	ldr	r3, [r5, #20]
 800c7a0:	3b01      	subs	r3, #1
 800c7a2:	1b1b      	subs	r3, r3, r4
 800c7a4:	b29b      	uxth	r3, r3
 800c7a6:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800c7aa:	b123      	cbz	r3, 800c7b6 <HttpDaemon::ParseRequest()+0x62>
 800c7ac:	68ea      	ldr	r2, [r5, #12]
 800c7ae:	3401      	adds	r4, #1
 800c7b0:	4414      	add	r4, r2
 800c7b2:	60ac      	str	r4, [r5, #8]
 800c7b4:	54e0      	strb	r0, [r4, r3]
 800c7b6:	20c8      	movs	r0, #200	; 0xc8
 800c7b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c7ba:	4628      	mov	r0, r5
 800c7bc:	f7ff ff80 	bl	800c6c0 <HttpDaemon::ParseHeaderField(char*)>
 800c7c0:	e7e1      	b.n	800c786 <HttpDaemon::ParseRequest()+0x32>
	...

0800c7c4 <HttpDaemon::HandleGetTxt()>:
 800c7c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7c8:	6847      	ldr	r7, [r0, #4]
 800c7ca:	4604      	mov	r4, r0
 800c7cc:	1dbd      	adds	r5, r7, #6
 800c7ce:	462b      	mov	r3, r5
 800c7d0:	4618      	mov	r0, r3
 800c7d2:	7802      	ldrb	r2, [r0, #0]
 800c7d4:	3301      	adds	r3, #1
 800c7d6:	2a00      	cmp	r2, #0
 800c7d8:	d1fa      	bne.n	800c7d0 <HttpDaemon::HandleGetTxt()+0xc>
 800c7da:	1b40      	subs	r0, r0, r5
 800c7dc:	2804      	cmp	r0, #4
 800c7de:	d925      	bls.n	800c82c <HttpDaemon::HandleGetTxt()+0x68>
 800c7e0:	3804      	subs	r0, #4
 800c7e2:	4915      	ldr	r1, [pc, #84]	; (800c838 <HttpDaemon::HandleGetTxt()+0x74>)
 800c7e4:	4428      	add	r0, r5
 800c7e6:	f7ff fecb 	bl	800c580 <strcmp>
 800c7ea:	b9f8      	cbnz	r0, 800c82c <HttpDaemon::HandleGetTxt()+0x68>
 800c7ec:	4b13      	ldr	r3, [pc, #76]	; (800c83c <HttpDaemon::HandleGetTxt()+0x78>)
 800c7ee:	2001      	movs	r0, #1
 800c7f0:	f893 8000 	ldrb.w	r8, [r3]
 800c7f4:	f7ff feec 	bl	800c5d0 <PropertiesConfig::EnableJSON(bool)>
 800c7f8:	4b11      	ldr	r3, [pc, #68]	; (800c840 <HttpDaemon::HandleGetTxt()+0x7c>)
 800c7fa:	f240 529b 	movw	r2, #1435	; 0x59b
 800c7fe:	4629      	mov	r1, r5
 800c800:	6818      	ldr	r0, [r3, #0]
 800c802:	f7ff fa9f 	bl	800bd44 <RemoteConfig::HandleGet(void*, unsigned int)>
 800c806:	4606      	mov	r6, r0
 800c808:	f008 0801 	and.w	r8, r8, #1
 800c80c:	4640      	mov	r0, r8
 800c80e:	f7ff fedf 	bl	800c5d0 <PropertiesConfig::EnableJSON(bool)>
 800c812:	b15e      	cbz	r6, 800c82c <HttpDaemon::HandleGetTxt()+0x68>
 800c814:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800c818:	3606      	adds	r6, #6
 800c81a:	3422      	adds	r4, #34	; 0x22
 800c81c:	443e      	add	r6, r7
 800c81e:	42b5      	cmp	r5, r6
 800c820:	d008      	beq.n	800c834 <HttpDaemon::HandleGetTxt()+0x70>
 800c822:	f815 3b01 	ldrb.w	r3, [r5], #1
 800c826:	f804 3b01 	strb.w	r3, [r4], #1
 800c82a:	e7f8      	b.n	800c81e <HttpDaemon::HandleGetTxt()+0x5a>
 800c82c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800c830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c834:	20c8      	movs	r0, #200	; 0xc8
 800c836:	e7fb      	b.n	800c830 <HttpDaemon::HandleGetTxt()+0x6c>
 800c838:	080137c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sl, ip, sp}
 800c83c:	2000969e 	mulcs	r0, lr, r6
 800c840:	2000075c 	andcs	r0, r0, ip, asr r7

0800c844 <HttpDaemon::HandleGet()>:
 800c844:	b570      	push	{r4, r5, r6, lr}
 800c846:	6845      	ldr	r5, [r0, #4]
 800c848:	4604      	mov	r4, r0
 800c84a:	4943      	ldr	r1, [pc, #268]	; (800c958 <HttpDaemon::HandleGet()+0x114>)
 800c84c:	4628      	mov	r0, r5
 800c84e:	f7ff fe97 	bl	800c580 <strcmp>
 800c852:	b120      	cbz	r0, 800c85e <HttpDaemon::HandleGet()+0x1a>
 800c854:	4628      	mov	r0, r5
 800c856:	4941      	ldr	r1, [pc, #260]	; (800c95c <HttpDaemon::HandleGet()+0x118>)
 800c858:	f7ff fe92 	bl	800c580 <strcmp>
 800c85c:	b960      	cbnz	r0, 800c878 <HttpDaemon::HandleGet()+0x34>
 800c85e:	4621      	mov	r1, r4
 800c860:	4b3f      	ldr	r3, [pc, #252]	; (800c960 <HttpDaemon::HandleGet()+0x11c>)
 800c862:	4840      	ldr	r0, [pc, #256]	; (800c964 <HttpDaemon::HandleGet()+0x120>)
 800c864:	f841 3b22 	str.w	r3, [r1], #34
 800c868:	f000 fa7a 	bl	800cd60 <get_file_content(char const*, char*)>
 800c86c:	2800      	cmp	r0, #0
 800c86e:	dd1e      	ble.n	800c8ae <HttpDaemon::HandleGet()+0x6a>
 800c870:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800c874:	20c8      	movs	r0, #200	; 0xc8
 800c876:	bd70      	pop	{r4, r5, r6, pc}
 800c878:	4628      	mov	r0, r5
 800c87a:	493b      	ldr	r1, [pc, #236]	; (800c968 <HttpDaemon::HandleGet()+0x124>)
 800c87c:	f7ff fe80 	bl	800c580 <strcmp>
 800c880:	b928      	cbnz	r0, 800c88e <HttpDaemon::HandleGet()+0x4a>
 800c882:	4621      	mov	r1, r4
 800c884:	4b39      	ldr	r3, [pc, #228]	; (800c96c <HttpDaemon::HandleGet()+0x128>)
 800c886:	483a      	ldr	r0, [pc, #232]	; (800c970 <HttpDaemon::HandleGet()+0x12c>)
 800c888:	f841 3b22 	str.w	r3, [r1], #34
 800c88c:	e7ec      	b.n	800c868 <HttpDaemon::HandleGet()+0x24>
 800c88e:	4628      	mov	r0, r5
 800c890:	4938      	ldr	r1, [pc, #224]	; (800c974 <HttpDaemon::HandleGet()+0x130>)
 800c892:	f7ff fe75 	bl	800c580 <strcmp>
 800c896:	b168      	cbz	r0, 800c8b4 <HttpDaemon::HandleGet()+0x70>
 800c898:	4a37      	ldr	r2, [pc, #220]	; (800c978 <HttpDaemon::HandleGet()+0x134>)
 800c89a:	1e6b      	subs	r3, r5, #1
 800c89c:	1d6e      	adds	r6, r5, #5
 800c89e:	42b3      	cmp	r3, r6
 800c8a0:	d00e      	beq.n	800c8c0 <HttpDaemon::HandleGet()+0x7c>
 800c8a2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c8a6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c8aa:	4288      	cmp	r0, r1
 800c8ac:	d0f7      	beq.n	800c89e <HttpDaemon::HandleGet()+0x5a>
 800c8ae:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800c8b2:	e7e0      	b.n	800c876 <HttpDaemon::HandleGet()+0x32>
 800c8b4:	4621      	mov	r1, r4
 800c8b6:	4b31      	ldr	r3, [pc, #196]	; (800c97c <HttpDaemon::HandleGet()+0x138>)
 800c8b8:	4831      	ldr	r0, [pc, #196]	; (800c980 <HttpDaemon::HandleGet()+0x13c>)
 800c8ba:	f841 3b22 	str.w	r3, [r1], #34
 800c8be:	e7d3      	b.n	800c868 <HttpDaemon::HandleGet()+0x24>
 800c8c0:	4b30      	ldr	r3, [pc, #192]	; (800c984 <HttpDaemon::HandleGet()+0x140>)
 800c8c2:	3506      	adds	r5, #6
 800c8c4:	4628      	mov	r0, r5
 800c8c6:	4930      	ldr	r1, [pc, #192]	; (800c988 <HttpDaemon::HandleGet()+0x144>)
 800c8c8:	6023      	str	r3, [r4, #0]
 800c8ca:	f7ff fe59 	bl	800c580 <strcmp>
 800c8ce:	b930      	cbnz	r0, 800c8de <HttpDaemon::HandleGet()+0x9a>
 800c8d0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800c8d4:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800c8d8:	f000 f9ca 	bl	800cc70 <remoteconfig::json_get_list(char*, unsigned short)>
 800c8dc:	e7c6      	b.n	800c86c <HttpDaemon::HandleGet()+0x28>
 800c8de:	4628      	mov	r0, r5
 800c8e0:	492a      	ldr	r1, [pc, #168]	; (800c98c <HttpDaemon::HandleGet()+0x148>)
 800c8e2:	f7ff fe4d 	bl	800c580 <strcmp>
 800c8e6:	b930      	cbnz	r0, 800c8f6 <HttpDaemon::HandleGet()+0xb2>
 800c8e8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800c8ec:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800c8f0:	f000 f9f2 	bl	800ccd8 <remoteconfig::json_get_version(char*, unsigned short)>
 800c8f4:	e7ba      	b.n	800c86c <HttpDaemon::HandleGet()+0x28>
 800c8f6:	4628      	mov	r0, r5
 800c8f8:	4925      	ldr	r1, [pc, #148]	; (800c990 <HttpDaemon::HandleGet()+0x14c>)
 800c8fa:	f7ff fe41 	bl	800c580 <strcmp>
 800c8fe:	b950      	cbnz	r0, 800c916 <HttpDaemon::HandleGet()+0xd2>
 800c900:	4b24      	ldr	r3, [pc, #144]	; (800c994 <HttpDaemon::HandleGet()+0x150>)
 800c902:	681b      	ldr	r3, [r3, #0]
 800c904:	7bdb      	ldrb	r3, [r3, #15]
 800c906:	b31b      	cbz	r3, 800c950 <HttpDaemon::HandleGet()+0x10c>
 800c908:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800c90c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800c910:	f000 f9fe 	bl	800cd10 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800c914:	e7aa      	b.n	800c86c <HttpDaemon::HandleGet()+0x28>
 800c916:	4628      	mov	r0, r5
 800c918:	491f      	ldr	r1, [pc, #124]	; (800c998 <HttpDaemon::HandleGet()+0x154>)
 800c91a:	f7ff fe31 	bl	800c580 <strcmp>
 800c91e:	b930      	cbnz	r0, 800c92e <HttpDaemon::HandleGet()+0xea>
 800c920:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800c924:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800c928:	f000 fa02 	bl	800cd30 <remoteconfig::json_get_display(char*, unsigned short)>
 800c92c:	e79e      	b.n	800c86c <HttpDaemon::HandleGet()+0x28>
 800c92e:	4628      	mov	r0, r5
 800c930:	491a      	ldr	r1, [pc, #104]	; (800c99c <HttpDaemon::HandleGet()+0x158>)
 800c932:	f7ff fe25 	bl	800c580 <strcmp>
 800c936:	b930      	cbnz	r0, 800c946 <HttpDaemon::HandleGet()+0x102>
 800c938:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800c93c:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800c940:	f000 fa06 	bl	800cd50 <remoteconfig::json_get_directory(char*, unsigned short)>
 800c944:	e792      	b.n	800c86c <HttpDaemon::HandleGet()+0x28>
 800c946:	4620      	mov	r0, r4
 800c948:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c94c:	f7ff bf3a 	b.w	800c7c4 <HttpDaemon::HandleGetTxt()>
 800c950:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800c954:	e78f      	b.n	800c876 <HttpDaemon::HandleGet()+0x32>
 800c956:	bf00      	nop
 800c958:	080138bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, ip, sp}
 800c95c:	08013895 	stmdaeq	r1, {r0, r2, r4, r7, fp, ip, sp}
 800c960:	08013aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp}
 800c964:	08013896 	stmdaeq	r1, {r1, r2, r4, r7, fp, ip, sp}
 800c968:	080138a1 	stmdaeq	r1, {r0, r5, r7, fp, ip, sp}
 800c96c:	08013ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip, sp}
 800c970:	080138a2 	stmdaeq	r1, {r1, r5, r7, fp, ip, sp}
 800c974:	080138ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, fp, ip, sp}
 800c978:	080138b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, fp, ip, sp}
 800c97c:	08013ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, sp}
 800c980:	080138ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, fp, ip, sp}
 800c984:	08013b08 	stmdaeq	r1, {r3, r8, r9, fp, ip, sp}
 800c988:	080138be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, ip, sp}
 800c98c:	080138c3 	stmdaeq	r1, {r0, r1, r6, r7, fp, ip, sp}
 800c990:	080138cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, fp, ip, sp}
 800c994:	2000075c 	andcs	r0, r0, ip, asr r7
 800c998:	080138d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, ip, sp}
 800c99c:	080138da 	stmdaeq	r1, {r1, r3, r4, r6, r7, fp, ip, sp}

0800c9a0 <HttpDaemon::HandlePost(bool)>:
 800c9a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c9a2:	4604      	mov	r4, r0
 800c9a4:	2900      	cmp	r1, #0
 800c9a6:	f040 8090 	bne.w	800caca <HttpDaemon::HandlePost(bool)+0x12a>
 800c9aa:	f890 3020 	ldrb.w	r3, [r0, #32]
 800c9ae:	2b00      	cmp	r3, #0
 800c9b0:	d05d      	beq.n	800ca6e <HttpDaemon::HandlePost(bool)+0xce>
 800c9b2:	6845      	ldr	r5, [r0, #4]
 800c9b4:	4948      	ldr	r1, [pc, #288]	; (800cad8 <HttpDaemon::HandlePost(bool)+0x138>)
 800c9b6:	4628      	mov	r0, r5
 800c9b8:	f7ff fde2 	bl	800c580 <strcmp>
 800c9bc:	2800      	cmp	r0, #0
 800c9be:	bf0c      	ite	eq
 800c9c0:	2301      	moveq	r3, #1
 800c9c2:	2300      	movne	r3, #0
 800c9c4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800c9c8:	d055      	beq.n	800ca76 <HttpDaemon::HandlePost(bool)+0xd6>
 800c9ca:	4628      	mov	r0, r5
 800c9cc:	4943      	ldr	r1, [pc, #268]	; (800cadc <HttpDaemon::HandlePost(bool)+0x13c>)
 800c9ce:	f7ff fdd7 	bl	800c580 <strcmp>
 800c9d2:	2800      	cmp	r0, #0
 800c9d4:	d04f      	beq.n	800ca76 <HttpDaemon::HandlePost(bool)+0xd6>
 800c9d6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800c9da:	e04a      	b.n	800ca72 <HttpDaemon::HandlePost(bool)+0xd2>
 800c9dc:	4940      	ldr	r1, [pc, #256]	; (800cae0 <HttpDaemon::HandlePost(bool)+0x140>)
 800c9de:	68a0      	ldr	r0, [r4, #8]
 800c9e0:	f10d 0207 	add.w	r2, sp, #7
 800c9e4:	f003 fdb1 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c9e8:	b9e8      	cbnz	r0, 800ca26 <HttpDaemon::HandlePost(bool)+0x86>
 800c9ea:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800c9ee:	4b3d      	ldr	r3, [pc, #244]	; (800cae4 <HttpDaemon::HandlePost(bool)+0x144>)
 800c9f0:	fab6 f186 	clz	r1, r6
 800c9f4:	681d      	ldr	r5, [r3, #0]
 800c9f6:	0949      	lsrs	r1, r1, #5
 800c9f8:	69a8      	ldr	r0, [r5, #24]
 800c9fa:	b138      	cbz	r0, 800ca0c <HttpDaemon::HandlePost(bool)+0x6c>
 800c9fc:	6803      	ldr	r3, [r0, #0]
 800c9fe:	7429      	strb	r1, [r5, #16]
 800ca00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca02:	4798      	blx	r3
 800ca04:	b116      	cbz	r6, 800ca0c <HttpDaemon::HandlePost(bool)+0x6c>
 800ca06:	4b38      	ldr	r3, [pc, #224]	; (800cae8 <HttpDaemon::HandlePost(bool)+0x148>)
 800ca08:	681b      	ldr	r3, [r3, #0]
 800ca0a:	606b      	str	r3, [r5, #4]
 800ca0c:	4620      	mov	r0, r4
 800ca0e:	4b37      	ldr	r3, [pc, #220]	; (800caec <HttpDaemon::HandlePost(bool)+0x14c>)
 800ca10:	f240 519f 	movw	r1, #1439	; 0x59f
 800ca14:	4a36      	ldr	r2, [pc, #216]	; (800caf0 <HttpDaemon::HandlePost(bool)+0x150>)
 800ca16:	f840 3b22 	str.w	r3, [r0], #34
 800ca1a:	f7fc f8f5 	bl	8008c08 <snprintf>
 800ca1e:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800ca22:	20c8      	movs	r0, #200	; 0xc8
 800ca24:	e025      	b.n	800ca72 <HttpDaemon::HandlePost(bool)+0xd2>
 800ca26:	4933      	ldr	r1, [pc, #204]	; (800caf4 <HttpDaemon::HandlePost(bool)+0x154>)
 800ca28:	68a0      	ldr	r0, [r4, #8]
 800ca2a:	f10d 0207 	add.w	r2, sp, #7
 800ca2e:	f003 fd8c 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ca32:	b9e0      	cbnz	r0, 800ca6e <HttpDaemon::HandlePost(bool)+0xce>
 800ca34:	4b30      	ldr	r3, [pc, #192]	; (800caf8 <HttpDaemon::HandlePost(bool)+0x158>)
 800ca36:	6818      	ldr	r0, [r3, #0]
 800ca38:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ca3c:	b11b      	cbz	r3, 800ca46 <HttpDaemon::HandlePost(bool)+0xa6>
 800ca3e:	2104      	movs	r1, #4
 800ca40:	f004 f918 	bl	8010c74 <LedBlink::SetMode(ledblink::Mode)>
 800ca44:	e7e2      	b.n	800ca0c <HttpDaemon::HandlePost(bool)+0x6c>
 800ca46:	2102      	movs	r1, #2
 800ca48:	e7fa      	b.n	800ca40 <HttpDaemon::HandlePost(bool)+0xa0>
 800ca4a:	4b2c      	ldr	r3, [pc, #176]	; (800cafc <HttpDaemon::HandlePost(bool)+0x15c>)
 800ca4c:	2001      	movs	r0, #1
 800ca4e:	781d      	ldrb	r5, [r3, #0]
 800ca50:	f7ff fdbe 	bl	800c5d0 <PropertiesConfig::EnableJSON(bool)>
 800ca54:	4b2a      	ldr	r3, [pc, #168]	; (800cb00 <HttpDaemon::HandlePost(bool)+0x160>)
 800ca56:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800ca5a:	6818      	ldr	r0, [r3, #0]
 800ca5c:	68a1      	ldr	r1, [r4, #8]
 800ca5e:	f005 0501 	and.w	r5, r5, #1
 800ca62:	f7ff fa25 	bl	800beb0 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ca66:	4628      	mov	r0, r5
 800ca68:	f7ff fdb2 	bl	800c5d0 <PropertiesConfig::EnableJSON(bool)>
 800ca6c:	e7ce      	b.n	800ca0c <HttpDaemon::HandlePost(bool)+0x6c>
 800ca6e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800ca72:	b002      	add	sp, #8
 800ca74:	bd70      	pop	{r4, r5, r6, pc}
 800ca76:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800ca7a:	6962      	ldr	r2, [r4, #20]
 800ca7c:	429a      	cmp	r2, r3
 800ca7e:	dbd0      	blt.n	800ca22 <HttpDaemon::HandlePost(bool)+0x82>
 800ca80:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800ca84:	2b00      	cmp	r3, #0
 800ca86:	d0cc      	beq.n	800ca22 <HttpDaemon::HandlePost(bool)+0x82>
 800ca88:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800ca8c:	2b00      	cmp	r3, #0
 800ca8e:	d0dc      	beq.n	800ca4a <HttpDaemon::HandlePost(bool)+0xaa>
 800ca90:	2201      	movs	r2, #1
 800ca92:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800ca96:	68a0      	ldr	r0, [r4, #8]
 800ca98:	f003 face 	bl	8010038 <properties::convert_json_file(char*, unsigned short, bool)>
 800ca9c:	2800      	cmp	r0, #0
 800ca9e:	dde6      	ble.n	800ca6e <HttpDaemon::HandlePost(bool)+0xce>
 800caa0:	4918      	ldr	r1, [pc, #96]	; (800cb04 <HttpDaemon::HandlePost(bool)+0x164>)
 800caa2:	68a0      	ldr	r0, [r4, #8]
 800caa4:	f10d 0207 	add.w	r2, sp, #7
 800caa8:	f003 fd4f 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800caac:	2800      	cmp	r0, #0
 800caae:	d195      	bne.n	800c9dc <HttpDaemon::HandlePost(bool)+0x3c>
 800cab0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cab4:	2b00      	cmp	r3, #0
 800cab6:	d0a9      	beq.n	800ca0c <HttpDaemon::HandlePost(bool)+0x6c>
 800cab8:	4b11      	ldr	r3, [pc, #68]	; (800cb00 <HttpDaemon::HandlePost(bool)+0x160>)
 800caba:	681b      	ldr	r3, [r3, #0]
 800cabc:	7b9b      	ldrb	r3, [r3, #14]
 800cabe:	2b00      	cmp	r3, #0
 800cac0:	d0d5      	beq.n	800ca6e <HttpDaemon::HandlePost(bool)+0xce>
 800cac2:	4b11      	ldr	r3, [pc, #68]	; (800cb08 <HttpDaemon::HandlePost(bool)+0x168>)
 800cac4:	6818      	ldr	r0, [r3, #0]
 800cac6:	f004 f959 	bl	8010d7c <Hardware::Reboot()>
 800caca:	68c3      	ldr	r3, [r0, #12]
 800cacc:	6083      	str	r3, [r0, #8]
 800cace:	6943      	ldr	r3, [r0, #20]
 800cad0:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800cad4:	e7d8      	b.n	800ca88 <HttpDaemon::HandlePost(bool)+0xe8>
 800cad6:	bf00      	nop
 800cad8:	080138e4 	stmdaeq	r1, {r2, r5, r6, r7, fp, ip, sp}
 800cadc:	08013880 	stmdaeq	r1, {r7, fp, ip, sp}
 800cae0:	080138d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, ip, sp}
 800cae4:	200096a0 	andcs	r9, r0, r0, lsr #13
 800cae8:	200097a4 	andcs	r9, r0, r4, lsr #15
 800caec:	08013aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp}
 800caf0:	08013901 	stmdaeq	r1, {r0, r8, fp, ip, sp}
 800caf4:	080138f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, ip, sp}
 800caf8:	2000978c 	andcs	r9, r0, ip, lsl #15
 800cafc:	2000969e 	mulcs	r0, lr, r6
 800cb00:	2000075c 	andcs	r0, r0, ip, asr r7
 800cb04:	080138f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, fp, ip, sp}
 800cb08:	20009790 	mulcs	r0, r0, r7

0800cb0c <HttpDaemon::Run()>:
 800cb0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb0e:	4e4a      	ldr	r6, [pc, #296]	; (800cc38 <HttpDaemon::Run()+0x12c>)
 800cb10:	4604      	mov	r4, r0
 800cb12:	6901      	ldr	r1, [r0, #16]
 800cb14:	f100 020c 	add.w	r2, r0, #12
 800cb18:	b085      	sub	sp, #20
 800cb1a:	6830      	ldr	r0, [r6, #0]
 800cb1c:	f002 facb 	bl	800f0b6 <Network::TcpRead(int, unsigned char const**)>
 800cb20:	6160      	str	r0, [r4, #20]
 800cb22:	2800      	cmp	r0, #0
 800cb24:	d061      	beq.n	800cbea <HttpDaemon::Run()+0xde>
 800cb26:	69a3      	ldr	r3, [r4, #24]
 800cb28:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800cb2c:	d15f      	bne.n	800cbee <HttpDaemon::Run()+0xe2>
 800cb2e:	4620      	mov	r0, r4
 800cb30:	f7ff fe10 	bl	800c754 <HttpDaemon::ParseRequest()>
 800cb34:	28c8      	cmp	r0, #200	; 0xc8
 800cb36:	61a0      	str	r0, [r4, #24]
 800cb38:	d106      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cb3a:	69e3      	ldr	r3, [r4, #28]
 800cb3c:	2b00      	cmp	r3, #0
 800cb3e:	d147      	bne.n	800cbd0 <HttpDaemon::Run()+0xc4>
 800cb40:	4620      	mov	r0, r4
 800cb42:	f7ff fe7f 	bl	800c844 <HttpDaemon::HandleGet()>
 800cb46:	61a0      	str	r0, [r4, #24]
 800cb48:	69a3      	ldr	r3, [r4, #24]
 800cb4a:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800cb4e:	2bc8      	cmp	r3, #200	; 0xc8
 800cb50:	d06f      	beq.n	800cc32 <HttpDaemon::Run()+0x126>
 800cb52:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800cb56:	d062      	beq.n	800cc1e <HttpDaemon::Run()+0x112>
 800cb58:	dc52      	bgt.n	800cc00 <HttpDaemon::Run()+0xf4>
 800cb5a:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800cb5e:	d060      	beq.n	800cc22 <HttpDaemon::Run()+0x116>
 800cb60:	f240 129d 	movw	r2, #413	; 0x19d
 800cb64:	4293      	cmp	r3, r2
 800cb66:	d05e      	beq.n	800cc26 <HttpDaemon::Run()+0x11a>
 800cb68:	4d34      	ldr	r5, [pc, #208]	; (800cc3c <HttpDaemon::Run()+0x130>)
 800cb6a:	4a35      	ldr	r2, [pc, #212]	; (800cc40 <HttpDaemon::Run()+0x134>)
 800cb6c:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800cb70:	bf18      	it	ne
 800cb72:	4615      	movne	r5, r2
 800cb74:	4a33      	ldr	r2, [pc, #204]	; (800cc44 <HttpDaemon::Run()+0x138>)
 800cb76:	f240 519f 	movw	r1, #1439	; 0x59f
 800cb7a:	6022      	str	r2, [r4, #0]
 800cb7c:	4638      	mov	r0, r7
 800cb7e:	e9cd 5500 	strd	r5, r5, [sp]
 800cb82:	4a31      	ldr	r2, [pc, #196]	; (800cc48 <HttpDaemon::Run()+0x13c>)
 800cb84:	f7fc f840 	bl	8008c08 <snprintf>
 800cb88:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800cb8c:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800cb90:	f240 519f 	movw	r1, #1439	; 0x59f
 800cb94:	9303      	str	r3, [sp, #12]
 800cb96:	6823      	ldr	r3, [r4, #0]
 800cb98:	4a2c      	ldr	r2, [pc, #176]	; (800cc4c <HttpDaemon::Run()+0x140>)
 800cb9a:	9302      	str	r3, [sp, #8]
 800cb9c:	4b2c      	ldr	r3, [pc, #176]	; (800cc50 <HttpDaemon::Run()+0x144>)
 800cb9e:	68e0      	ldr	r0, [r4, #12]
 800cba0:	e9cd 5300 	strd	r5, r3, [sp]
 800cba4:	69a3      	ldr	r3, [r4, #24]
 800cba6:	f7fc f82f 	bl	8008c08 <snprintf>
 800cbaa:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800cbae:	b283      	uxth	r3, r0
 800cbb0:	6830      	ldr	r0, [r6, #0]
 800cbb2:	f002 fa84 	bl	800f0be <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800cbb6:	463a      	mov	r2, r7
 800cbb8:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800cbbc:	6921      	ldr	r1, [r4, #16]
 800cbbe:	6830      	ldr	r0, [r6, #0]
 800cbc0:	f002 fa7d 	bl	800f0be <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800cbc4:	f44f 7202 	mov.w	r2, #520	; 0x208
 800cbc8:	2302      	movs	r3, #2
 800cbca:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800cbce:	e00c      	b.n	800cbea <HttpDaemon::Run()+0xde>
 800cbd0:	2b01      	cmp	r3, #1
 800cbd2:	d1b9      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cbd4:	2100      	movs	r1, #0
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	f7ff fee2 	bl	800c9a0 <HttpDaemon::HandlePost(bool)>
 800cbdc:	28c8      	cmp	r0, #200	; 0xc8
 800cbde:	61a0      	str	r0, [r4, #24]
 800cbe0:	d1b2      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cbe2:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800cbe6:	2b00      	cmp	r3, #0
 800cbe8:	d1ae      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cbea:	b005      	add	sp, #20
 800cbec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbee:	2bc8      	cmp	r3, #200	; 0xc8
 800cbf0:	d1aa      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cbf2:	69e1      	ldr	r1, [r4, #28]
 800cbf4:	2901      	cmp	r1, #1
 800cbf6:	d1a7      	bne.n	800cb48 <HttpDaemon::Run()+0x3c>
 800cbf8:	4620      	mov	r0, r4
 800cbfa:	f7ff fed1 	bl	800c9a0 <HttpDaemon::HandlePost(bool)>
 800cbfe:	e7a2      	b.n	800cb46 <HttpDaemon::Run()+0x3a>
 800cc00:	f240 12f5 	movw	r2, #501	; 0x1f5
 800cc04:	4293      	cmp	r3, r2
 800cc06:	d010      	beq.n	800cc2a <HttpDaemon::Run()+0x11e>
 800cc08:	f240 12f9 	movw	r2, #505	; 0x1f9
 800cc0c:	4293      	cmp	r3, r2
 800cc0e:	d00e      	beq.n	800cc2e <HttpDaemon::Run()+0x122>
 800cc10:	4d10      	ldr	r5, [pc, #64]	; (800cc54 <HttpDaemon::Run()+0x148>)
 800cc12:	4a0b      	ldr	r2, [pc, #44]	; (800cc40 <HttpDaemon::Run()+0x134>)
 800cc14:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800cc18:	bf18      	it	ne
 800cc1a:	4615      	movne	r5, r2
 800cc1c:	e7aa      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc1e:	4d0e      	ldr	r5, [pc, #56]	; (800cc58 <HttpDaemon::Run()+0x14c>)
 800cc20:	e7a8      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc22:	4d0e      	ldr	r5, [pc, #56]	; (800cc5c <HttpDaemon::Run()+0x150>)
 800cc24:	e7a6      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc26:	4d0e      	ldr	r5, [pc, #56]	; (800cc60 <HttpDaemon::Run()+0x154>)
 800cc28:	e7a4      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc2a:	4d0e      	ldr	r5, [pc, #56]	; (800cc64 <HttpDaemon::Run()+0x158>)
 800cc2c:	e7a2      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc2e:	4d0e      	ldr	r5, [pc, #56]	; (800cc68 <HttpDaemon::Run()+0x15c>)
 800cc30:	e7a0      	b.n	800cb74 <HttpDaemon::Run()+0x68>
 800cc32:	4d0e      	ldr	r5, [pc, #56]	; (800cc6c <HttpDaemon::Run()+0x160>)
 800cc34:	e7aa      	b.n	800cb8c <HttpDaemon::Run()+0x80>
 800cc36:	bf00      	nop
 800cc38:	20009070 	andcs	r9, r0, r0, ror r0
 800cc3c:	080139c2 	stmdaeq	r1, {r1, r6, r7, r8, fp, ip, sp}
 800cc40:	080139ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, fp, ip, sp}
 800cc44:	08013aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp}
 800cc48:	080139f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, fp, ip, sp}
 800cc4c:	08013a50 	stmdaeq	r1, {r4, r6, r9, fp, ip, sp}
 800cc50:	080130ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp}
 800cc54:	080139dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
 800cc58:	08013980 	stmdaeq	r1, {r7, r8, fp, ip, sp}
 800cc5c:	08013976 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, fp, ip, sp}
 800cc60:	0801395d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, ip, sp}
 800cc64:	080139ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, fp, ip, sp}
 800cc68:	08013995 	stmdaeq	r1, {r0, r2, r4, r7, r8, fp, ip, sp}
 800cc6c:	080139f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, fp, ip, sp}

0800cc70 <remoteconfig::json_get_list(char*, unsigned short)>:
 800cc70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc74:	4b14      	ldr	r3, [pc, #80]	; (800ccc8 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800cc76:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800cccc <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800cc7a:	681b      	ldr	r3, [r3, #0]
 800cc7c:	b088      	sub	sp, #32
 800cc7e:	4605      	mov	r5, r0
 800cc80:	f8d8 0000 	ldr.w	r0, [r8]
 800cc84:	691c      	ldr	r4, [r3, #16]
 800cc86:	460e      	mov	r6, r1
 800cc88:	f7ff f80c 	bl	800bca4 <RemoteConfig::GetStringNode() const>
 800cc8c:	4607      	mov	r7, r0
 800cc8e:	f8d8 0000 	ldr.w	r0, [r8]
 800cc92:	f7ff f813 	bl	800bcbc <RemoteConfig::GetStringOutput() const>
 800cc96:	4b0e      	ldr	r3, [pc, #56]	; (800ccd0 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800cc98:	4631      	mov	r1, r6
 800cc9a:	7a1a      	ldrb	r2, [r3, #8]
 800cc9c:	3309      	adds	r3, #9
 800cc9e:	9303      	str	r3, [sp, #12]
 800cca0:	0e23      	lsrs	r3, r4, #24
 800cca2:	9302      	str	r3, [sp, #8]
 800cca4:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800cca8:	9301      	str	r3, [sp, #4]
 800ccaa:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800ccae:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800ccb2:	9300      	str	r3, [sp, #0]
 800ccb4:	4628      	mov	r0, r5
 800ccb6:	4a07      	ldr	r2, [pc, #28]	; (800ccd4 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800ccb8:	9704      	str	r7, [sp, #16]
 800ccba:	b2e3      	uxtb	r3, r4
 800ccbc:	f7fb ffa4 	bl	8008c08 <snprintf>
 800ccc0:	b280      	uxth	r0, r0
 800ccc2:	b008      	add	sp, #32
 800ccc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccc8:	20009070 	andcs	r9, r0, r0, ror r0
 800cccc:	2000075c 	andcs	r0, r0, ip, asr r7
 800ccd0:	20000738 	andcs	r0, r0, r8, lsr r7
 800ccd4:	08013b82 	stmdaeq	r1, {r1, r7, r8, r9, fp, ip, sp}

0800ccd8 <remoteconfig::json_get_version(char*, unsigned short)>:
 800ccd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ccda:	2208      	movs	r2, #8
 800ccdc:	4b09      	ldr	r3, [pc, #36]	; (800cd04 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800ccde:	9204      	str	r2, [sp, #16]
 800cce0:	f1a3 020b 	sub.w	r2, r3, #11
 800cce4:	9203      	str	r2, [sp, #12]
 800cce6:	220b      	movs	r2, #11
 800cce8:	9202      	str	r2, [sp, #8]
 800ccea:	4a07      	ldr	r2, [pc, #28]	; (800cd08 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800ccec:	9305      	str	r3, [sp, #20]
 800ccee:	3b0e      	subs	r3, #14
 800ccf0:	9201      	str	r2, [sp, #4]
 800ccf2:	9300      	str	r3, [sp, #0]
 800ccf4:	4a05      	ldr	r2, [pc, #20]	; (800cd0c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800ccf6:	2303      	movs	r3, #3
 800ccf8:	f7fb ff86 	bl	8008c08 <snprintf>
 800ccfc:	b280      	uxth	r0, r0
 800ccfe:	b007      	add	sp, #28
 800cd00:	f85d fb04 	ldr.w	pc, [sp], #4
 800cd04:	2000973e 	andcs	r9, r0, lr, lsr r7
 800cd08:	080130ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp}
 800cd0c:	08013be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, ip, sp}

0800cd10 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800cd10:	b508      	push	{r3, lr}
 800cd12:	4b05      	ldr	r3, [pc, #20]	; (800cd28 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800cd14:	681a      	ldr	r2, [r3, #0]
 800cd16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800cd1a:	fbb2 f3f3 	udiv	r3, r2, r3
 800cd1e:	4a03      	ldr	r2, [pc, #12]	; (800cd2c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800cd20:	f7fb ff72 	bl	8008c08 <snprintf>
 800cd24:	b280      	uxth	r0, r0
 800cd26:	bd08      	pop	{r3, pc}
 800cd28:	200097a4 	andcs	r9, r0, r4, lsr #15
 800cd2c:	08013c27 	stmdaeq	r1, {r0, r1, r2, r5, sl, fp, ip, sp}

0800cd30 <remoteconfig::json_get_display(char*, unsigned short)>:
 800cd30:	b508      	push	{r3, lr}
 800cd32:	4b05      	ldr	r3, [pc, #20]	; (800cd48 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800cd34:	4a05      	ldr	r2, [pc, #20]	; (800cd4c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800cd36:	681b      	ldr	r3, [r3, #0]
 800cd38:	7c1b      	ldrb	r3, [r3, #16]
 800cd3a:	f083 0301 	eor.w	r3, r3, #1
 800cd3e:	f7fb ff63 	bl	8008c08 <snprintf>
 800cd42:	b280      	uxth	r0, r0
 800cd44:	bd08      	pop	{r3, pc}
 800cd46:	bf00      	nop
 800cd48:	200096a0 	andcs	r9, r0, r0, lsr #13
 800cd4c:	08013c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp}

0800cd50 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800cd50:	b508      	push	{r3, lr}
 800cd52:	4a02      	ldr	r2, [pc, #8]	; (800cd5c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800cd54:	f7fb ff58 	bl	8008c08 <snprintf>
 800cd58:	b280      	uxth	r0, r0
 800cd5a:	bd08      	pop	{r3, pc}
 800cd5c:	08013c45 	stmdaeq	r1, {r0, r2, r6, sl, fp, ip, sp}

0800cd60 <get_file_content(char const*, char*)>:
 800cd60:	2300      	movs	r3, #0
 800cd62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd64:	4a10      	ldr	r2, [pc, #64]	; (800cda8 <get_file_content(char const*, char*)+0x48>)
 800cd66:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800cd6a:	1e46      	subs	r6, r0, #1
 800cd6c:	3c01      	subs	r4, #1
 800cd6e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800cd72:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800cd76:	42bd      	cmp	r5, r7
 800cd78:	d10f      	bne.n	800cd9a <get_file_content(char const*, char*)+0x3a>
 800cd7a:	2d00      	cmp	r5, #0
 800cd7c:	d1f7      	bne.n	800cd6e <get_file_content(char const*, char*)+0xe>
 800cd7e:	4608      	mov	r0, r1
 800cd80:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800cd84:	685b      	ldr	r3, [r3, #4]
 800cd86:	3b01      	subs	r3, #1
 800cd88:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800cd8c:	f800 2b01 	strb.w	r2, [r0], #1
 800cd90:	2a00      	cmp	r2, #0
 800cd92:	d1f9      	bne.n	800cd88 <get_file_content(char const*, char*)+0x28>
 800cd94:	1a40      	subs	r0, r0, r1
 800cd96:	3801      	subs	r0, #1
 800cd98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd9a:	3301      	adds	r3, #1
 800cd9c:	2b03      	cmp	r3, #3
 800cd9e:	d1e2      	bne.n	800cd66 <get_file_content(char const*, char*)+0x6>
 800cda0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800cda4:	e7f8      	b.n	800cd98 <get_file_content(char const*, char*)+0x38>
 800cda6:	bf00      	nop
 800cda8:	08013f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, sp}

0800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800cdac:	2300      	movs	r3, #0
 800cdae:	2020      	movs	r0, #32
 800cdb0:	b510      	push	{r4, lr}
 800cdb2:	4a04      	ldr	r2, [pc, #16]	; (800cdc4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800cdb4:	428b      	cmp	r3, r1
 800cdb6:	d004      	beq.n	800cdc2 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800cdb8:	f852 4b04 	ldr.w	r4, [r2], #4
 800cdbc:	3301      	adds	r3, #1
 800cdbe:	4420      	add	r0, r4
 800cdc0:	e7f8      	b.n	800cdb4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800cdc2:	bd10      	pop	{r4, pc}
 800cdc4:	080144ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, lr}

0800cdc8 <SpiFlashStore::Init()>:
 800cdc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdcc:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800cef0 <SpiFlashStore::Init()+0x128>
 800cdd0:	4607      	mov	r7, r0
 800cdd2:	b085      	sub	sp, #20
 800cdd4:	f8d8 0000 	ldr.w	r0, [r8]
 800cdd8:	f000 fbb2 	bl	800d540 <FlashRom::GetSectorSize()>
 800cddc:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800cde0:	4605      	mov	r5, r0
 800cde2:	f040 8083 	bne.w	800ceec <SpiFlashStore::Init()+0x124>
 800cde6:	f8d8 0000 	ldr.w	r0, [r8]
 800cdea:	f000 fba1 	bl	800d530 <FlashRom::GetSize()>
 800cdee:	4b41      	ldr	r3, [pc, #260]	; (800cef4 <SpiFlashStore::Init()+0x12c>)
 800cdf0:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800cdf4:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800cdf8:	6019      	str	r1, [r3, #0]
 800cdfa:	2e00      	cmp	r6, #0
 800cdfc:	d176      	bne.n	800ceec <SpiFlashStore::Init()+0x124>
 800cdfe:	4c3e      	ldr	r4, [pc, #248]	; (800cef8 <SpiFlashStore::Init()+0x130>)
 800ce00:	ab03      	add	r3, sp, #12
 800ce02:	9300      	str	r3, [sp, #0]
 800ce04:	462a      	mov	r2, r5
 800ce06:	4623      	mov	r3, r4
 800ce08:	f8d8 0000 	ldr.w	r0, [r8]
 800ce0c:	f000 fb9b 	bl	800d546 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800ce10:	7823      	ldrb	r3, [r4, #0]
 800ce12:	2b41      	cmp	r3, #65	; 0x41
 800ce14:	bf1c      	itt	ne
 800ce16:	2341      	movne	r3, #65	; 0x41
 800ce18:	7023      	strbne	r3, [r4, #0]
 800ce1a:	7863      	ldrb	r3, [r4, #1]
 800ce1c:	bf14      	ite	ne
 800ce1e:	4635      	movne	r5, r6
 800ce20:	2501      	moveq	r5, #1
 800ce22:	2b76      	cmp	r3, #118	; 0x76
 800ce24:	bf1c      	itt	ne
 800ce26:	2376      	movne	r3, #118	; 0x76
 800ce28:	7063      	strbne	r3, [r4, #1]
 800ce2a:	78a3      	ldrb	r3, [r4, #2]
 800ce2c:	bf18      	it	ne
 800ce2e:	2500      	movne	r5, #0
 800ce30:	2b56      	cmp	r3, #86	; 0x56
 800ce32:	bf1c      	itt	ne
 800ce34:	2356      	movne	r3, #86	; 0x56
 800ce36:	70a3      	strbne	r3, [r4, #2]
 800ce38:	78e3      	ldrb	r3, [r4, #3]
 800ce3a:	bf18      	it	ne
 800ce3c:	2500      	movne	r5, #0
 800ce3e:	2b10      	cmp	r3, #16
 800ce40:	d01c      	beq.n	800ce7c <SpiFlashStore::Init()+0xb4>
 800ce42:	2310      	movs	r3, #16
 800ce44:	70e3      	strb	r3, [r4, #3]
 800ce46:	2201      	movs	r2, #1
 800ce48:	2500      	movs	r5, #0
 800ce4a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800ce4e:	4b2b      	ldr	r3, [pc, #172]	; (800cefc <SpiFlashStore::Init()+0x134>)
 800ce50:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800cf00 <SpiFlashStore::Init()+0x138>
 800ce54:	701a      	strb	r2, [r3, #0]
 800ce56:	4631      	mov	r1, r6
 800ce58:	4638      	mov	r0, r7
 800ce5a:	f7ff ffa7 	bl	800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ce5e:	1823      	adds	r3, r4, r0
 800ce60:	5425      	strb	r5, [r4, r0]
 800ce62:	705d      	strb	r5, [r3, #1]
 800ce64:	709d      	strb	r5, [r3, #2]
 800ce66:	70dd      	strb	r5, [r3, #3]
 800ce68:	f858 3b04 	ldr.w	r3, [r8], #4
 800ce6c:	1d02      	adds	r2, r0, #4
 800ce6e:	4403      	add	r3, r0
 800ce70:	4293      	cmp	r3, r2
 800ce72:	d931      	bls.n	800ced8 <SpiFlashStore::Init()+0x110>
 800ce74:	f804 9002 	strb.w	r9, [r4, r2]
 800ce78:	3201      	adds	r2, #1
 800ce7a:	e7f9      	b.n	800ce70 <SpiFlashStore::Init()+0xa8>
 800ce7c:	2d00      	cmp	r5, #0
 800ce7e:	d0e2      	beq.n	800ce46 <SpiFlashStore::Init()+0x7e>
 800ce80:	f04f 0900 	mov.w	r9, #0
 800ce84:	46c8      	mov	r8, r9
 800ce86:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800cf04 <SpiFlashStore::Init()+0x13c>
 800ce8a:	f8da b000 	ldr.w	fp, [sl]
 800ce8e:	4631      	mov	r1, r6
 800ce90:	4638      	mov	r0, r7
 800ce92:	f7ff ff8b 	bl	800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ce96:	5c23      	ldrb	r3, [r4, r0]
 800ce98:	2bff      	cmp	r3, #255	; 0xff
 800ce9a:	d114      	bne.n	800cec6 <SpiFlashStore::Init()+0xfe>
 800ce9c:	1823      	adds	r3, r4, r0
 800ce9e:	785a      	ldrb	r2, [r3, #1]
 800cea0:	2aff      	cmp	r2, #255	; 0xff
 800cea2:	d110      	bne.n	800cec6 <SpiFlashStore::Init()+0xfe>
 800cea4:	789a      	ldrb	r2, [r3, #2]
 800cea6:	2aff      	cmp	r2, #255	; 0xff
 800cea8:	d10d      	bne.n	800cec6 <SpiFlashStore::Init()+0xfe>
 800ceaa:	78da      	ldrb	r2, [r3, #3]
 800ceac:	2aff      	cmp	r2, #255	; 0xff
 800ceae:	d10a      	bne.n	800cec6 <SpiFlashStore::Init()+0xfe>
 800ceb0:	46a9      	mov	r9, r5
 800ceb2:	f04f 0b01 	mov.w	fp, #1
 800ceb6:	f804 8000 	strb.w	r8, [r4, r0]
 800ceba:	f883 8001 	strb.w	r8, [r3, #1]
 800cebe:	f883 8002 	strb.w	r8, [r3, #2]
 800cec2:	f883 8003 	strb.w	r8, [r3, #3]
 800cec6:	3601      	adds	r6, #1
 800cec8:	2e1c      	cmp	r6, #28
 800ceca:	d1e0      	bne.n	800ce8e <SpiFlashStore::Init()+0xc6>
 800cecc:	f1b9 0f00 	cmp.w	r9, #0
 800ced0:	d008      	beq.n	800cee4 <SpiFlashStore::Init()+0x11c>
 800ced2:	f8ca b000 	str.w	fp, [sl]
 800ced6:	e005      	b.n	800cee4 <SpiFlashStore::Init()+0x11c>
 800ced8:	3601      	adds	r6, #1
 800ceda:	2e1c      	cmp	r6, #28
 800cedc:	d1bb      	bne.n	800ce56 <SpiFlashStore::Init()+0x8e>
 800cede:	2501      	movs	r5, #1
 800cee0:	4b08      	ldr	r3, [pc, #32]	; (800cf04 <SpiFlashStore::Init()+0x13c>)
 800cee2:	601d      	str	r5, [r3, #0]
 800cee4:	4628      	mov	r0, r5
 800cee6:	b005      	add	sp, #20
 800cee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ceec:	2500      	movs	r5, #0
 800ceee:	e7f9      	b.n	800cee4 <SpiFlashStore::Init()+0x11c>
 800cef0:	2000178c 	andcs	r1, r0, ip, lsl #15
 800cef4:	20001764 	andcs	r1, r0, r4, ror #14
 800cef8:	20000764 	andcs	r0, r0, r4, ror #14
 800cefc:	20001778 	andcs	r1, r0, r8, ror r7
 800cf00:	080144ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, lr}
 800cf04:	20001770 	andcs	r1, r0, r0, ror r7

0800cf08 <SpiFlashStore::SpiFlashStore()>:
 800cf08:	b538      	push	{r3, r4, r5, lr}
 800cf0a:	4b0d      	ldr	r3, [pc, #52]	; (800cf40 <SpiFlashStore::SpiFlashStore()+0x38>)
 800cf0c:	4604      	mov	r4, r0
 800cf0e:	6018      	str	r0, [r3, #0]
 800cf10:	4b0c      	ldr	r3, [pc, #48]	; (800cf44 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800cf12:	4d0d      	ldr	r5, [pc, #52]	; (800cf48 <SpiFlashStore::SpiFlashStore()+0x40>)
 800cf14:	681b      	ldr	r3, [r3, #0]
 800cf16:	781b      	ldrb	r3, [r3, #0]
 800cf18:	b113      	cbz	r3, 800cf20 <SpiFlashStore::SpiFlashStore()+0x18>
 800cf1a:	f7ff ff55 	bl	800cdc8 <SpiFlashStore::Init()>
 800cf1e:	7028      	strb	r0, [r5, #0]
 800cf20:	782b      	ldrb	r3, [r5, #0]
 800cf22:	b153      	cbz	r3, 800cf3a <SpiFlashStore::SpiFlashStore()+0x32>
 800cf24:	2320      	movs	r3, #32
 800cf26:	2200      	movs	r2, #0
 800cf28:	4908      	ldr	r1, [pc, #32]	; (800cf4c <SpiFlashStore::SpiFlashStore()+0x44>)
 800cf2a:	f851 0b04 	ldr.w	r0, [r1], #4
 800cf2e:	3201      	adds	r2, #1
 800cf30:	2a1c      	cmp	r2, #28
 800cf32:	4403      	add	r3, r0
 800cf34:	d1f9      	bne.n	800cf2a <SpiFlashStore::SpiFlashStore()+0x22>
 800cf36:	4a06      	ldr	r2, [pc, #24]	; (800cf50 <SpiFlashStore::SpiFlashStore()+0x48>)
 800cf38:	6013      	str	r3, [r2, #0]
 800cf3a:	4620      	mov	r0, r4
 800cf3c:	bd38      	pop	{r3, r4, r5, pc}
 800cf3e:	bf00      	nop
 800cf40:	20001774 	andcs	r1, r0, r4, ror r7
 800cf44:	2000178c 	andcs	r1, r0, ip, lsl #15
 800cf48:	20001768 	andcs	r1, r0, r8, ror #14
 800cf4c:	080144ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, lr}
 800cf50:	2000176c 	andcs	r1, r0, ip, ror #14

0800cf54 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800cf54:	b508      	push	{r3, lr}
 800cf56:	f7ff ff29 	bl	800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cf5a:	2300      	movs	r3, #0
 800cf5c:	4904      	ldr	r1, [pc, #16]	; (800cf70 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800cf5e:	1842      	adds	r2, r0, r1
 800cf60:	540b      	strb	r3, [r1, r0]
 800cf62:	7053      	strb	r3, [r2, #1]
 800cf64:	7093      	strb	r3, [r2, #2]
 800cf66:	70d3      	strb	r3, [r2, #3]
 800cf68:	2201      	movs	r2, #1
 800cf6a:	4b02      	ldr	r3, [pc, #8]	; (800cf74 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800cf6c:	601a      	str	r2, [r3, #0]
 800cf6e:	bd08      	pop	{r3, pc}
 800cf70:	20000764 	andcs	r0, r0, r4, ror #14
 800cf74:	20001770 	andcs	r1, r0, r0, ror r7

0800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800cf78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf7c:	461c      	mov	r4, r3
 800cf7e:	4b19      	ldr	r3, [pc, #100]	; (800cfe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800cf80:	4615      	mov	r5, r2
 800cf82:	781f      	ldrb	r7, [r3, #0]
 800cf84:	9e07      	ldr	r6, [sp, #28]
 800cf86:	b35f      	cbz	r7, 800cfe0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cf88:	f7ff ff10 	bl	800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cf8c:	f04f 0c00 	mov.w	ip, #0
 800cf90:	4a15      	ldr	r2, [pc, #84]	; (800cfe8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800cf92:	1941      	adds	r1, r0, r5
 800cf94:	1e63      	subs	r3, r4, #1
 800cf96:	9c06      	ldr	r4, [sp, #24]
 800cf98:	4411      	add	r1, r2
 800cf9a:	440c      	add	r4, r1
 800cf9c:	42a1      	cmp	r1, r4
 800cf9e:	d00a      	beq.n	800cfb6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800cfa0:	f891 8000 	ldrb.w	r8, [r1]
 800cfa4:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800cfa8:	3101      	adds	r1, #1
 800cfaa:	45f0      	cmp	r8, lr
 800cfac:	bf1c      	itt	ne
 800cfae:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800cfb2:	46bc      	movne	ip, r7
 800cfb4:	e7f2      	b.n	800cf9c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800cfb6:	f1bc 0f00 	cmp.w	ip, #0
 800cfba:	d011      	beq.n	800cfe0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cfbc:	4b0b      	ldr	r3, [pc, #44]	; (800cfec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800cfbe:	6819      	ldr	r1, [r3, #0]
 800cfc0:	b109      	cbz	r1, 800cfc6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800cfc2:	2906      	cmp	r1, #6
 800cfc4:	d101      	bne.n	800cfca <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800cfc6:	2101      	movs	r1, #1
 800cfc8:	6019      	str	r1, [r3, #0]
 800cfca:	4b09      	ldr	r3, [pc, #36]	; (800cff0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800cfcc:	6819      	ldr	r1, [r3, #0]
 800cfce:	4b09      	ldr	r3, [pc, #36]	; (800cff4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800cfd0:	6019      	str	r1, [r3, #0]
 800cfd2:	b12d      	cbz	r5, 800cfe0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cfd4:	b126      	cbz	r6, 800cfe0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cfd6:	9b08      	ldr	r3, [sp, #32]
 800cfd8:	4418      	add	r0, r3
 800cfda:	5813      	ldr	r3, [r2, r0]
 800cfdc:	4333      	orrs	r3, r6
 800cfde:	5013      	str	r3, [r2, r0]
 800cfe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfe4:	20001768 	andcs	r1, r0, r8, ror #14
 800cfe8:	20000764 	andcs	r0, r0, r4, ror #14
 800cfec:	20001770 	andcs	r1, r0, r0, ror r7
 800cff0:	200097a4 	andcs	r9, r0, r4, lsr #15
 800cff4:	20000760 	andcs	r0, r0, r0, ror #14

0800cff8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800cff8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cffc:	461d      	mov	r5, r3
 800cffe:	4b15      	ldr	r3, [pc, #84]	; (800d054 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800d000:	b085      	sub	sp, #20
 800d002:	781b      	ldrb	r3, [r3, #0]
 800d004:	4607      	mov	r7, r0
 800d006:	4688      	mov	r8, r1
 800d008:	4614      	mov	r4, r2
 800d00a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800d00e:	b1eb      	cbz	r3, 800d04c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800d010:	f7ff fecc 	bl	800cdac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800d014:	4910      	ldr	r1, [pc, #64]	; (800d058 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800d016:	4a11      	ldr	r2, [pc, #68]	; (800d05c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800d018:	7809      	ldrb	r1, [r1, #0]
 800d01a:	eb00 0309 	add.w	r3, r0, r9
 800d01e:	189e      	adds	r6, r3, r2
 800d020:	b951      	cbnz	r1, 800d038 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800d022:	589b      	ldr	r3, [r3, r2]
 800d024:	b143      	cbz	r3, 800d038 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800d026:	3c01      	subs	r4, #1
 800d028:	4435      	add	r5, r6
 800d02a:	42b5      	cmp	r5, r6
 800d02c:	d00e      	beq.n	800d04c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800d02e:	f816 3b01 	ldrb.w	r3, [r6], #1
 800d032:	f804 3f01 	strb.w	r3, [r4, #1]!
 800d036:	e7f8      	b.n	800d02a <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800d038:	2300      	movs	r3, #0
 800d03a:	464a      	mov	r2, r9
 800d03c:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d040:	4641      	mov	r1, r8
 800d042:	4623      	mov	r3, r4
 800d044:	4638      	mov	r0, r7
 800d046:	9500      	str	r5, [sp, #0]
 800d048:	f7ff ff96 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d04c:	b005      	add	sp, #20
 800d04e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d052:	bf00      	nop
 800d054:	20001768 	andcs	r1, r0, r8, ror #14
 800d058:	20001778 	andcs	r1, r0, r8, ror r7
 800d05c:	20000764 	andcs	r0, r0, r4, ror #14

0800d060 <SpiFlashStore::Flash()>:
 800d060:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d062:	4c25      	ldr	r4, [pc, #148]	; (800d0f8 <SpiFlashStore::Flash()+0x98>)
 800d064:	6820      	ldr	r0, [r4, #0]
 800d066:	2800      	cmp	r0, #0
 800d068:	d043      	beq.n	800d0f2 <SpiFlashStore::Flash()+0x92>
 800d06a:	3801      	subs	r0, #1
 800d06c:	2805      	cmp	r0, #5
 800d06e:	d831      	bhi.n	800d0d4 <SpiFlashStore::Flash()+0x74>
 800d070:	e8df f000 	tbb	[pc, r0]
 800d074:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800d078:	4b203025 	blmi	8819114 <__exidx_end+0x804348>
 800d07c:	681a      	ldr	r2, [r3, #0]
 800d07e:	4b20      	ldr	r3, [pc, #128]	; (800d100 <SpiFlashStore::Flash()+0xa0>)
 800d080:	601a      	str	r2, [r3, #0]
 800d082:	2302      	movs	r3, #2
 800d084:	6023      	str	r3, [r4, #0]
 800d086:	2001      	movs	r0, #1
 800d088:	e033      	b.n	800d0f2 <SpiFlashStore::Flash()+0x92>
 800d08a:	4b1c      	ldr	r3, [pc, #112]	; (800d0fc <SpiFlashStore::Flash()+0x9c>)
 800d08c:	4a1c      	ldr	r2, [pc, #112]	; (800d100 <SpiFlashStore::Flash()+0xa0>)
 800d08e:	681b      	ldr	r3, [r3, #0]
 800d090:	6812      	ldr	r2, [r2, #0]
 800d092:	1a9b      	subs	r3, r3, r2
 800d094:	2b63      	cmp	r3, #99	; 0x63
 800d096:	d9f6      	bls.n	800d086 <SpiFlashStore::Flash()+0x26>
 800d098:	2303      	movs	r3, #3
 800d09a:	e7f3      	b.n	800d084 <SpiFlashStore::Flash()+0x24>
 800d09c:	4919      	ldr	r1, [pc, #100]	; (800d104 <SpiFlashStore::Flash()+0xa4>)
 800d09e:	481a      	ldr	r0, [pc, #104]	; (800d108 <SpiFlashStore::Flash()+0xa8>)
 800d0a0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800d0a4:	6809      	ldr	r1, [r1, #0]
 800d0a6:	6800      	ldr	r0, [r0, #0]
 800d0a8:	ab03      	add	r3, sp, #12
 800d0aa:	f000 fa5b 	bl	800d564 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800d0ae:	2800      	cmp	r0, #0
 800d0b0:	d0e9      	beq.n	800d086 <SpiFlashStore::Flash()+0x26>
 800d0b2:	4b12      	ldr	r3, [pc, #72]	; (800d0fc <SpiFlashStore::Flash()+0x9c>)
 800d0b4:	681a      	ldr	r2, [r3, #0]
 800d0b6:	4b12      	ldr	r3, [pc, #72]	; (800d100 <SpiFlashStore::Flash()+0xa0>)
 800d0b8:	601a      	str	r2, [r3, #0]
 800d0ba:	2305      	movs	r3, #5
 800d0bc:	e7e2      	b.n	800d084 <SpiFlashStore::Flash()+0x24>
 800d0be:	4b0f      	ldr	r3, [pc, #60]	; (800d0fc <SpiFlashStore::Flash()+0x9c>)
 800d0c0:	4a0f      	ldr	r2, [pc, #60]	; (800d100 <SpiFlashStore::Flash()+0xa0>)
 800d0c2:	681b      	ldr	r3, [r3, #0]
 800d0c4:	6812      	ldr	r2, [r2, #0]
 800d0c6:	1a9b      	subs	r3, r3, r2
 800d0c8:	2b63      	cmp	r3, #99	; 0x63
 800d0ca:	d9dc      	bls.n	800d086 <SpiFlashStore::Flash()+0x26>
 800d0cc:	2304      	movs	r3, #4
 800d0ce:	e7d9      	b.n	800d084 <SpiFlashStore::Flash()+0x24>
 800d0d0:	2306      	movs	r3, #6
 800d0d2:	e7d7      	b.n	800d084 <SpiFlashStore::Flash()+0x24>
 800d0d4:	ab03      	add	r3, sp, #12
 800d0d6:	4a0d      	ldr	r2, [pc, #52]	; (800d10c <SpiFlashStore::Flash()+0xac>)
 800d0d8:	490a      	ldr	r1, [pc, #40]	; (800d104 <SpiFlashStore::Flash()+0xa4>)
 800d0da:	480b      	ldr	r0, [pc, #44]	; (800d108 <SpiFlashStore::Flash()+0xa8>)
 800d0dc:	9300      	str	r3, [sp, #0]
 800d0de:	6812      	ldr	r2, [r2, #0]
 800d0e0:	4b0b      	ldr	r3, [pc, #44]	; (800d110 <SpiFlashStore::Flash()+0xb0>)
 800d0e2:	6809      	ldr	r1, [r1, #0]
 800d0e4:	6800      	ldr	r0, [r0, #0]
 800d0e6:	f000 fadd 	bl	800d6a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800d0ea:	2800      	cmp	r0, #0
 800d0ec:	d0cb      	beq.n	800d086 <SpiFlashStore::Flash()+0x26>
 800d0ee:	2000      	movs	r0, #0
 800d0f0:	6020      	str	r0, [r4, #0]
 800d0f2:	b004      	add	sp, #16
 800d0f4:	bd10      	pop	{r4, pc}
 800d0f6:	bf00      	nop
 800d0f8:	20001770 	andcs	r1, r0, r0, ror r7
 800d0fc:	200097a4 	andcs	r9, r0, r4, lsr #15
 800d100:	20000760 	andcs	r0, r0, r0, ror #14
 800d104:	20001764 	andcs	r1, r0, r4, ror #14
 800d108:	2000178c 	andcs	r1, r0, ip, lsl #15
 800d10c:	2000176c 	andcs	r1, r0, ip, ror #14
 800d110:	20000764 	andcs	r0, r0, r4, ror #14

0800d114 <StoreNetwork::~StoreNetwork()>:
 800d114:	4770      	bx	lr

0800d116 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800d116:	3804      	subs	r0, #4
 800d118:	4770      	bx	lr
	...

0800d11c <StoreNetwork::Update(TNetworkParams const*)>:
 800d11c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d11e:	2200      	movs	r2, #0
 800d120:	460b      	mov	r3, r1
 800d122:	215e      	movs	r1, #94	; 0x5e
 800d124:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d128:	4804      	ldr	r0, [pc, #16]	; (800d13c <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800d12a:	9100      	str	r1, [sp, #0]
 800d12c:	6800      	ldr	r0, [r0, #0]
 800d12e:	4611      	mov	r1, r2
 800d130:	f7ff ff22 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d134:	b005      	add	sp, #20
 800d136:	f85d fb04 	ldr.w	pc, [sp], #4
 800d13a:	bf00      	nop
 800d13c:	20001774 	andcs	r1, r0, r4, ror r7

0800d140 <StoreNetwork::SaveDhcp(bool)>:
 800d140:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d142:	2301      	movs	r3, #1
 800d144:	f88d 1017 	strb.w	r1, [sp, #23]
 800d148:	2100      	movs	r1, #0
 800d14a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d14e:	4805      	ldr	r0, [pc, #20]	; (800d164 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800d150:	9300      	str	r3, [sp, #0]
 800d152:	2214      	movs	r2, #20
 800d154:	6800      	ldr	r0, [r0, #0]
 800d156:	f10d 0317 	add.w	r3, sp, #23
 800d15a:	f7ff ff0d 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d15e:	b007      	add	sp, #28
 800d160:	f85d fb04 	ldr.w	pc, [sp], #4
 800d164:	20001774 	andcs	r1, r0, r4, ror r7

0800d168 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800d168:	f1a0 0004 	sub.w	r0, r0, #4
 800d16c:	e7e8      	b.n	800d140 <StoreNetwork::SaveDhcp(bool)>
 800d16e:	bf00      	nop

0800d170 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800d170:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d172:	2308      	movs	r3, #8
 800d174:	9105      	str	r1, [sp, #20]
 800d176:	2100      	movs	r1, #0
 800d178:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d17c:	2304      	movs	r3, #4
 800d17e:	4805      	ldr	r0, [pc, #20]	; (800d194 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800d180:	9300      	str	r3, [sp, #0]
 800d182:	220c      	movs	r2, #12
 800d184:	6800      	ldr	r0, [r0, #0]
 800d186:	ab05      	add	r3, sp, #20
 800d188:	f7ff fef6 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d18c:	b007      	add	sp, #28
 800d18e:	f85d fb04 	ldr.w	pc, [sp], #4
 800d192:	bf00      	nop
 800d194:	20001774 	andcs	r1, r0, r4, ror r7

0800d198 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800d198:	f1a0 0004 	sub.w	r0, r0, #4
 800d19c:	e7e8      	b.n	800d170 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800d19e:	bf00      	nop

0800d1a0 <StoreNetwork::SaveNetMask(unsigned int)>:
 800d1a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d1a2:	2304      	movs	r3, #4
 800d1a4:	9105      	str	r1, [sp, #20]
 800d1a6:	2100      	movs	r1, #0
 800d1a8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d1ac:	4804      	ldr	r0, [pc, #16]	; (800d1c0 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800d1ae:	9300      	str	r3, [sp, #0]
 800d1b0:	2208      	movs	r2, #8
 800d1b2:	6800      	ldr	r0, [r0, #0]
 800d1b4:	ab05      	add	r3, sp, #20
 800d1b6:	f7ff fedf 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d1ba:	b007      	add	sp, #28
 800d1bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800d1c0:	20001774 	andcs	r1, r0, r4, ror r7

0800d1c4 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800d1c4:	f1a0 0004 	sub.w	r0, r0, #4
 800d1c8:	e7ea      	b.n	800d1a0 <StoreNetwork::SaveNetMask(unsigned int)>
 800d1ca:	bf00      	nop

0800d1cc <StoreNetwork::SaveIp(unsigned int)>:
 800d1cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d1ce:	2302      	movs	r3, #2
 800d1d0:	9105      	str	r1, [sp, #20]
 800d1d2:	2100      	movs	r1, #0
 800d1d4:	2204      	movs	r2, #4
 800d1d6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d1da:	4804      	ldr	r0, [pc, #16]	; (800d1ec <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800d1dc:	9200      	str	r2, [sp, #0]
 800d1de:	6800      	ldr	r0, [r0, #0]
 800d1e0:	ab05      	add	r3, sp, #20
 800d1e2:	f7ff fec9 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d1e6:	b007      	add	sp, #28
 800d1e8:	f85d fb04 	ldr.w	pc, [sp], #4
 800d1ec:	20001774 	andcs	r1, r0, r4, ror r7

0800d1f0 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800d1f0:	f1a0 0004 	sub.w	r0, r0, #4
 800d1f4:	e7ea      	b.n	800d1cc <StoreNetwork::SaveIp(unsigned int)>
 800d1f6:	bf00      	nop

0800d1f8 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800d1f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d1fa:	460b      	mov	r3, r1
 800d1fc:	2020      	movs	r0, #32
 800d1fe:	2100      	movs	r1, #0
 800d200:	2a40      	cmp	r2, #64	; 0x40
 800d202:	bf28      	it	cs
 800d204:	2240      	movcs	r2, #64	; 0x40
 800d206:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800d20a:	4804      	ldr	r0, [pc, #16]	; (800d21c <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800d20c:	9200      	str	r2, [sp, #0]
 800d20e:	6800      	ldr	r0, [r0, #0]
 800d210:	2215      	movs	r2, #21
 800d212:	f7ff feb1 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d216:	b005      	add	sp, #20
 800d218:	f85d fb04 	ldr.w	pc, [sp], #4
 800d21c:	20001774 	andcs	r1, r0, r4, ror r7

0800d220 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800d220:	f1a0 0004 	sub.w	r0, r0, #4
 800d224:	e7e8      	b.n	800d1f8 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800d226:	bf00      	nop

0800d228 <StoreNetwork::~StoreNetwork()>:
 800d228:	b510      	push	{r4, lr}
 800d22a:	4604      	mov	r4, r0
 800d22c:	f003 fde4 	bl	8010df8 <operator delete(void*)>
 800d230:	4620      	mov	r0, r4
 800d232:	bd10      	pop	{r4, pc}

0800d234 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800d234:	f1a0 0004 	sub.w	r0, r0, #4
 800d238:	e7f6      	b.n	800d228 <StoreNetwork::~StoreNetwork()>
	...

0800d23c <StoreNetwork::Copy(TNetworkParams*)>:
 800d23c:	b507      	push	{r0, r1, r2, lr}
 800d23e:	460a      	mov	r2, r1
 800d240:	2100      	movs	r1, #0
 800d242:	4804      	ldr	r0, [pc, #16]	; (800d254 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800d244:	9100      	str	r1, [sp, #0]
 800d246:	235e      	movs	r3, #94	; 0x5e
 800d248:	6800      	ldr	r0, [r0, #0]
 800d24a:	f7ff fed5 	bl	800cff8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d24e:	b003      	add	sp, #12
 800d250:	f85d fb04 	ldr.w	pc, [sp], #4
 800d254:	20001774 	andcs	r1, r0, r4, ror r7

0800d258 <StoreNetwork::StoreNetwork()>:
 800d258:	4a03      	ldr	r2, [pc, #12]	; (800d268 <StoreNetwork::StoreNetwork()+0x10>)
 800d25a:	6002      	str	r2, [r0, #0]
 800d25c:	322c      	adds	r2, #44	; 0x2c
 800d25e:	6042      	str	r2, [r0, #4]
 800d260:	4a02      	ldr	r2, [pc, #8]	; (800d26c <StoreNetwork::StoreNetwork()+0x14>)
 800d262:	6010      	str	r0, [r2, #0]
 800d264:	4770      	bx	lr
 800d266:	bf00      	nop
 800d268:	08014524 	stmdaeq	r1, {r2, r5, r8, sl, lr}
 800d26c:	2000177c 	andcs	r1, r0, ip, ror r7

0800d270 <StoreOscServer::~StoreOscServer()>:
 800d270:	4770      	bx	lr
	...

0800d274 <StoreOscServer::Copy(osc::server::Params*)>:
 800d274:	2300      	movs	r3, #0
 800d276:	b507      	push	{r0, r1, r2, lr}
 800d278:	4805      	ldr	r0, [pc, #20]	; (800d290 <StoreOscServer::Copy(osc::server::Params*)+0x1c>)
 800d27a:	9300      	str	r3, [sp, #0]
 800d27c:	460a      	mov	r2, r1
 800d27e:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800d282:	2108      	movs	r1, #8
 800d284:	6800      	ldr	r0, [r0, #0]
 800d286:	f7ff feb7 	bl	800cff8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d28a:	b003      	add	sp, #12
 800d28c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d290:	20001774 	andcs	r1, r0, r4, ror r7

0800d294 <StoreOscServer::Update(osc::server::Params const*)>:
 800d294:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d296:	2200      	movs	r2, #0
 800d298:	460b      	mov	r3, r1
 800d29a:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800d29e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d2a2:	4804      	ldr	r0, [pc, #16]	; (800d2b4 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800d2a4:	9100      	str	r1, [sp, #0]
 800d2a6:	6800      	ldr	r0, [r0, #0]
 800d2a8:	2108      	movs	r1, #8
 800d2aa:	f7ff fe65 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d2ae:	b005      	add	sp, #20
 800d2b0:	f85d fb04 	ldr.w	pc, [sp], #4
 800d2b4:	20001774 	andcs	r1, r0, r4, ror r7

0800d2b8 <StoreOscServer::~StoreOscServer()>:
 800d2b8:	b510      	push	{r4, lr}
 800d2ba:	4604      	mov	r4, r0
 800d2bc:	f003 fd9c 	bl	8010df8 <operator delete(void*)>
 800d2c0:	4620      	mov	r0, r4
 800d2c2:	bd10      	pop	{r4, pc}

0800d2c4 <StoreOscServer::StoreOscServer()>:
 800d2c4:	4a02      	ldr	r2, [pc, #8]	; (800d2d0 <StoreOscServer::StoreOscServer()+0xc>)
 800d2c6:	6002      	str	r2, [r0, #0]
 800d2c8:	4a02      	ldr	r2, [pc, #8]	; (800d2d4 <StoreOscServer::StoreOscServer()+0x10>)
 800d2ca:	6010      	str	r0, [r2, #0]
 800d2cc:	4770      	bx	lr
 800d2ce:	bf00      	nop
 800d2d0:	08014574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, lr}
 800d2d4:	20001780 	andcs	r1, r0, r0, lsl #15

0800d2d8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800d2d8:	4770      	bx	lr
	...

0800d2dc <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800d2dc:	2300      	movs	r3, #0
 800d2de:	b507      	push	{r0, r1, r2, lr}
 800d2e0:	4805      	ldr	r0, [pc, #20]	; (800d2f8 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800d2e2:	9300      	str	r3, [sp, #0]
 800d2e4:	460a      	mov	r2, r1
 800d2e6:	2320      	movs	r3, #32
 800d2e8:	210c      	movs	r1, #12
 800d2ea:	6800      	ldr	r0, [r0, #0]
 800d2ec:	f7ff fe84 	bl	800cff8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d2f0:	b003      	add	sp, #12
 800d2f2:	f85d fb04 	ldr.w	pc, [sp], #4
 800d2f6:	bf00      	nop
 800d2f8:	20001774 	andcs	r1, r0, r4, ror r7

0800d2fc <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800d2fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d2fe:	2200      	movs	r2, #0
 800d300:	460b      	mov	r3, r1
 800d302:	2120      	movs	r1, #32
 800d304:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d308:	4804      	ldr	r0, [pc, #16]	; (800d31c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800d30a:	9100      	str	r1, [sp, #0]
 800d30c:	6800      	ldr	r0, [r0, #0]
 800d30e:	210c      	movs	r1, #12
 800d310:	f7ff fe32 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d314:	b005      	add	sp, #20
 800d316:	f85d fb04 	ldr.w	pc, [sp], #4
 800d31a:	bf00      	nop
 800d31c:	20001774 	andcs	r1, r0, r4, ror r7

0800d320 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800d320:	b510      	push	{r4, lr}
 800d322:	4604      	mov	r4, r0
 800d324:	f003 fd68 	bl	8010df8 <operator delete(void*)>
 800d328:	4620      	mov	r0, r4
 800d32a:	bd10      	pop	{r4, pc}

0800d32c <StoreRemoteConfig::StoreRemoteConfig()>:
 800d32c:	4a02      	ldr	r2, [pc, #8]	; (800d338 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800d32e:	6002      	str	r2, [r0, #0]
 800d330:	4a02      	ldr	r2, [pc, #8]	; (800d33c <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800d332:	6010      	str	r0, [r2, #0]
 800d334:	4770      	bx	lr
 800d336:	bf00      	nop
 800d338:	0801458c 	stmdaeq	r1, {r2, r3, r7, r8, sl, lr}
 800d33c:	20001784 	andcs	r1, r0, r4, lsl #15

0800d340 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800d340:	4770      	bx	lr

0800d342 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800d342:	3804      	subs	r0, #4
 800d344:	4770      	bx	lr
	...

0800d348 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800d348:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d34a:	2200      	movs	r2, #0
 800d34c:	460b      	mov	r3, r1
 800d34e:	2127      	movs	r1, #39	; 0x27
 800d350:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d354:	4804      	ldr	r0, [pc, #16]	; (800d368 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800d356:	9100      	str	r1, [sp, #0]
 800d358:	6800      	ldr	r0, [r0, #0]
 800d35a:	2103      	movs	r1, #3
 800d35c:	f7ff fe0c 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d360:	b005      	add	sp, #20
 800d362:	f85d fb04 	ldr.w	pc, [sp], #4
 800d366:	bf00      	nop
 800d368:	20001774 	andcs	r1, r0, r4, ror r7

0800d36c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800d36c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d36e:	2304      	movs	r3, #4
 800d370:	2200      	movs	r2, #0
 800d372:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d376:	2302      	movs	r3, #2
 800d378:	4806      	ldr	r0, [pc, #24]	; (800d394 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800d37a:	9300      	str	r3, [sp, #0]
 800d37c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d380:	2207      	movs	r2, #7
 800d382:	2103      	movs	r1, #3
 800d384:	6800      	ldr	r0, [r0, #0]
 800d386:	f10d 0316 	add.w	r3, sp, #22
 800d38a:	f7ff fdf5 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d38e:	b007      	add	sp, #28
 800d390:	f85d fb04 	ldr.w	pc, [sp], #4
 800d394:	20001774 	andcs	r1, r0, r4, ror r7

0800d398 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800d398:	f1a0 0004 	sub.w	r0, r0, #4
 800d39c:	e7e6      	b.n	800d36c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800d39e:	bf00      	nop

0800d3a0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800d3a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d3a2:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800d3a6:	2200      	movs	r2, #0
 800d3a8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d3ac:	2301      	movs	r3, #1
 800d3ae:	4807      	ldr	r0, [pc, #28]	; (800d3cc <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800d3b0:	9300      	str	r3, [sp, #0]
 800d3b2:	f88d 1017 	strb.w	r1, [sp, #23]
 800d3b6:	2226      	movs	r2, #38	; 0x26
 800d3b8:	2103      	movs	r1, #3
 800d3ba:	6800      	ldr	r0, [r0, #0]
 800d3bc:	f10d 0317 	add.w	r3, sp, #23
 800d3c0:	f7ff fdda 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d3c4:	b007      	add	sp, #28
 800d3c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d3ca:	bf00      	nop
 800d3cc:	20001774 	andcs	r1, r0, r4, ror r7

0800d3d0 <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800d3d0:	f1a0 0004 	sub.w	r0, r0, #4
 800d3d4:	e7e4      	b.n	800d3a0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800d3d6:	bf00      	nop

0800d3d8 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800d3d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d3da:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d3de:	2200      	movs	r2, #0
 800d3e0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d3e4:	2301      	movs	r3, #1
 800d3e6:	4807      	ldr	r0, [pc, #28]	; (800d404 <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800d3e8:	9300      	str	r3, [sp, #0]
 800d3ea:	f88d 1017 	strb.w	r1, [sp, #23]
 800d3ee:	2213      	movs	r2, #19
 800d3f0:	2103      	movs	r1, #3
 800d3f2:	6800      	ldr	r0, [r0, #0]
 800d3f4:	f10d 0317 	add.w	r3, sp, #23
 800d3f8:	f7ff fdbe 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d3fc:	b007      	add	sp, #28
 800d3fe:	f85d fb04 	ldr.w	pc, [sp], #4
 800d402:	bf00      	nop
 800d404:	20001774 	andcs	r1, r0, r4, ror r7

0800d408 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800d408:	f1a0 0004 	sub.w	r0, r0, #4
 800d40c:	e7e4      	b.n	800d3d8 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800d40e:	bf00      	nop

0800d410 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800d410:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d412:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d416:	2200      	movs	r2, #0
 800d418:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d41c:	2302      	movs	r3, #2
 800d41e:	4807      	ldr	r0, [pc, #28]	; (800d43c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800d420:	9300      	str	r3, [sp, #0]
 800d422:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d426:	2211      	movs	r2, #17
 800d428:	2103      	movs	r1, #3
 800d42a:	6800      	ldr	r0, [r0, #0]
 800d42c:	f10d 0316 	add.w	r3, sp, #22
 800d430:	f7ff fda2 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d434:	b007      	add	sp, #28
 800d436:	f85d fb04 	ldr.w	pc, [sp], #4
 800d43a:	bf00      	nop
 800d43c:	20001774 	andcs	r1, r0, r4, ror r7

0800d440 <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800d440:	f1a0 0004 	sub.w	r0, r0, #4
 800d444:	e7e4      	b.n	800d410 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800d446:	bf00      	nop

0800d448 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800d448:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d44a:	2302      	movs	r3, #2
 800d44c:	2200      	movs	r2, #0
 800d44e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d452:	4807      	ldr	r0, [pc, #28]	; (800d470 <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800d454:	9300      	str	r3, [sp, #0]
 800d456:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d45a:	2205      	movs	r2, #5
 800d45c:	2103      	movs	r1, #3
 800d45e:	6800      	ldr	r0, [r0, #0]
 800d460:	f10d 0316 	add.w	r3, sp, #22
 800d464:	f7ff fd88 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d468:	b007      	add	sp, #28
 800d46a:	f85d fb04 	ldr.w	pc, [sp], #4
 800d46e:	bf00      	nop
 800d470:	20001774 	andcs	r1, r0, r4, ror r7

0800d474 <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800d474:	f1a0 0004 	sub.w	r0, r0, #4
 800d478:	e7e6      	b.n	800d448 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800d47a:	bf00      	nop

0800d47c <StoreWS28xxDmx::SaveType(unsigned char)>:
 800d47c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d47e:	2301      	movs	r3, #1
 800d480:	2200      	movs	r2, #0
 800d482:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800d486:	4807      	ldr	r0, [pc, #28]	; (800d4a4 <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800d488:	9300      	str	r3, [sp, #0]
 800d48a:	f88d 1017 	strb.w	r1, [sp, #23]
 800d48e:	2204      	movs	r2, #4
 800d490:	2103      	movs	r1, #3
 800d492:	6800      	ldr	r0, [r0, #0]
 800d494:	f10d 0317 	add.w	r3, sp, #23
 800d498:	f7ff fd6e 	bl	800cf78 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d49c:	b007      	add	sp, #28
 800d49e:	f85d fb04 	ldr.w	pc, [sp], #4
 800d4a2:	bf00      	nop
 800d4a4:	20001774 	andcs	r1, r0, r4, ror r7

0800d4a8 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800d4a8:	f1a0 0004 	sub.w	r0, r0, #4
 800d4ac:	e7e6      	b.n	800d47c <StoreWS28xxDmx::SaveType(unsigned char)>
 800d4ae:	bf00      	nop

0800d4b0 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800d4b0:	b510      	push	{r4, lr}
 800d4b2:	4604      	mov	r4, r0
 800d4b4:	f003 fca0 	bl	8010df8 <operator delete(void*)>
 800d4b8:	4620      	mov	r0, r4
 800d4ba:	bd10      	pop	{r4, pc}

0800d4bc <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800d4bc:	f1a0 0004 	sub.w	r0, r0, #4
 800d4c0:	e7f6      	b.n	800d4b0 <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800d4c4 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800d4c4:	2300      	movs	r3, #0
 800d4c6:	b507      	push	{r0, r1, r2, lr}
 800d4c8:	4805      	ldr	r0, [pc, #20]	; (800d4e0 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800d4ca:	9300      	str	r3, [sp, #0]
 800d4cc:	460a      	mov	r2, r1
 800d4ce:	2327      	movs	r3, #39	; 0x27
 800d4d0:	2103      	movs	r1, #3
 800d4d2:	6800      	ldr	r0, [r0, #0]
 800d4d4:	f7ff fd90 	bl	800cff8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d4d8:	b003      	add	sp, #12
 800d4da:	f85d fb04 	ldr.w	pc, [sp], #4
 800d4de:	bf00      	nop
 800d4e0:	20001774 	andcs	r1, r0, r4, ror r7

0800d4e4 <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800d4e4:	4a03      	ldr	r2, [pc, #12]	; (800d4f4 <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800d4e6:	6002      	str	r2, [r0, #0]
 800d4e8:	3230      	adds	r2, #48	; 0x30
 800d4ea:	6042      	str	r2, [r0, #4]
 800d4ec:	4a02      	ldr	r2, [pc, #8]	; (800d4f8 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800d4ee:	6010      	str	r0, [r2, #0]
 800d4f0:	4770      	bx	lr
 800d4f2:	bf00      	nop
 800d4f4:	080145a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, lr}
 800d4f8:	20001788 	andcs	r1, r0, r8, lsl #15

0800d4fc <FlashRom::FlashRom()>:
 800d4fc:	4b08      	ldr	r3, [pc, #32]	; (800d520 <FlashRom::FlashRom()+0x24>)
 800d4fe:	b510      	push	{r4, lr}
 800d500:	6018      	str	r0, [r3, #0]
 800d502:	2301      	movs	r3, #1
 800d504:	4604      	mov	r4, r0
 800d506:	7003      	strb	r3, [r0, #0]
 800d508:	4b06      	ldr	r3, [pc, #24]	; (800d524 <FlashRom::FlashRom()+0x28>)
 800d50a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800d50e:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d512:	4905      	ldr	r1, [pc, #20]	; (800d528 <FlashRom::FlashRom()+0x2c>)
 800d514:	029b      	lsls	r3, r3, #10
 800d516:	4805      	ldr	r0, [pc, #20]	; (800d52c <FlashRom::FlashRom()+0x30>)
 800d518:	f7fb fb66 	bl	8008be8 <printf>
 800d51c:	4620      	mov	r0, r4
 800d51e:	bd10      	pop	{r4, pc}
 800d520:	2000178c 	andcs	r1, r0, ip, lsl #15
 800d524:	1ffff700 	svcne	0x00fff700
 800d528:	080145f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, lr}
 800d52c:	080145f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, lr}

0800d530 <FlashRom::GetSize()>:
 800d530:	4b02      	ldr	r3, [pc, #8]	; (800d53c <FlashRom::GetSize()+0xc>)
 800d532:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800d536:	0280      	lsls	r0, r0, #10
 800d538:	4770      	bx	lr
 800d53a:	bf00      	nop
 800d53c:	1ffff700 	svcne	0x00fff700

0800d540 <FlashRom::GetSectorSize()>:
 800d540:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800d544:	4770      	bx	lr

0800d546 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800d546:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d54a:	441a      	add	r2, r3
 800d54c:	4293      	cmp	r3, r2
 800d54e:	d004      	beq.n	800d55a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800d550:	f851 0b04 	ldr.w	r0, [r1], #4
 800d554:	f843 0b04 	str.w	r0, [r3], #4
 800d558:	e7f8      	b.n	800d54c <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800d55a:	2200      	movs	r2, #0
 800d55c:	9b00      	ldr	r3, [sp, #0]
 800d55e:	2001      	movs	r0, #1
 800d560:	601a      	str	r2, [r3, #0]
 800d562:	4770      	bx	lr

0800d564 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800d564:	2000      	movs	r0, #0
 800d566:	b538      	push	{r3, r4, r5, lr}
 800d568:	4c47      	ldr	r4, [pc, #284]	; (800d688 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800d56a:	6018      	str	r0, [r3, #0]
 800d56c:	6823      	ldr	r3, [r4, #0]
 800d56e:	2b04      	cmp	r3, #4
 800d570:	f200 8082 	bhi.w	800d678 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800d574:	e8df f003 	tbb	[pc, r3]
 800d578:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800d57c:	4b430080 	blmi	90cd784 <__exidx_end+0x10b89b8>
 800d580:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d584:	6019      	str	r1, [r3, #0]
 800d586:	4b42      	ldr	r3, [pc, #264]	; (800d690 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d588:	601a      	str	r2, [r3, #0]
 800d58a:	4b42      	ldr	r3, [pc, #264]	; (800d694 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800d58c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d590:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d594:	4b40      	ldr	r3, [pc, #256]	; (800d698 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d596:	d807      	bhi.n	800d5a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800d598:	2201      	movs	r2, #1
 800d59a:	701a      	strb	r2, [r3, #0]
 800d59c:	f003 fefc 	bl	8011398 <fmc_bank0_unlock>
 800d5a0:	2301      	movs	r3, #1
 800d5a2:	6023      	str	r3, [r4, #0]
 800d5a4:	2000      	movs	r0, #0
 800d5a6:	e026      	b.n	800d5f6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800d5a8:	4a3c      	ldr	r2, [pc, #240]	; (800d69c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800d5aa:	4291      	cmp	r1, r2
 800d5ac:	d3f4      	bcc.n	800d598 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800d5ae:	2200      	movs	r2, #0
 800d5b0:	701a      	strb	r2, [r3, #0]
 800d5b2:	f003 feff 	bl	80113b4 <fmc_bank1_unlock>
 800d5b6:	e7f3      	b.n	800d5a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d5b8:	4d37      	ldr	r5, [pc, #220]	; (800d698 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d5ba:	782b      	ldrb	r3, [r5, #0]
 800d5bc:	b15b      	cbz	r3, 800d5d6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800d5be:	f003 ff17 	bl	80113f0 <fmc_bank0_state_get>
 800d5c2:	2801      	cmp	r0, #1
 800d5c4:	d0ee      	beq.n	800d5a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800d5c6:	7829      	ldrb	r1, [r5, #0]
 800d5c8:	4b35      	ldr	r3, [pc, #212]	; (800d6a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d5ca:	b939      	cbnz	r1, 800d5dc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800d5cc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d5ce:	f022 0202 	bic.w	r2, r2, #2
 800d5d2:	651a      	str	r2, [r3, #80]	; 0x50
 800d5d4:	e006      	b.n	800d5e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800d5d6:	f003 ff1f 	bl	8011418 <fmc_bank1_state_get>
 800d5da:	e7f2      	b.n	800d5c2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800d5dc:	691a      	ldr	r2, [r3, #16]
 800d5de:	f022 0202 	bic.w	r2, r2, #2
 800d5e2:	611a      	str	r2, [r3, #16]
 800d5e4:	4b2a      	ldr	r3, [pc, #168]	; (800d690 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d5e6:	681b      	ldr	r3, [r3, #0]
 800d5e8:	b94b      	cbnz	r3, 800d5fe <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800d5ea:	b129      	cbz	r1, 800d5f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800d5ec:	f003 fef0 	bl	80113d0 <fmc_bank0_lock>
 800d5f0:	2300      	movs	r3, #0
 800d5f2:	2001      	movs	r0, #1
 800d5f4:	6023      	str	r3, [r4, #0]
 800d5f6:	bd38      	pop	{r3, r4, r5, pc}
 800d5f8:	f003 fef2 	bl	80113e0 <fmc_bank1_lock>
 800d5fc:	e7f8      	b.n	800d5f0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800d5fe:	2302      	movs	r3, #2
 800d600:	e7cf      	b.n	800d5a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800d602:	4923      	ldr	r1, [pc, #140]	; (800d690 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d604:	680b      	ldr	r3, [r1, #0]
 800d606:	2b00      	cmp	r3, #0
 800d608:	d0ca      	beq.n	800d5a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d60a:	4b23      	ldr	r3, [pc, #140]	; (800d698 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d60c:	4a1f      	ldr	r2, [pc, #124]	; (800d68c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800d60e:	7818      	ldrb	r0, [r3, #0]
 800d610:	4b23      	ldr	r3, [pc, #140]	; (800d6a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d612:	b190      	cbz	r0, 800d63a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800d614:	6918      	ldr	r0, [r3, #16]
 800d616:	f040 0002 	orr.w	r0, r0, #2
 800d61a:	6118      	str	r0, [r3, #16]
 800d61c:	6810      	ldr	r0, [r2, #0]
 800d61e:	6158      	str	r0, [r3, #20]
 800d620:	6918      	ldr	r0, [r3, #16]
 800d622:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800d626:	6118      	str	r0, [r3, #16]
 800d628:	680b      	ldr	r3, [r1, #0]
 800d62a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800d62e:	600b      	str	r3, [r1, #0]
 800d630:	6813      	ldr	r3, [r2, #0]
 800d632:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d636:	6013      	str	r3, [r2, #0]
 800d638:	e7b2      	b.n	800d5a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d63a:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800d63c:	f040 0002 	orr.w	r0, r0, #2
 800d640:	6518      	str	r0, [r3, #80]	; 0x50
 800d642:	6810      	ldr	r0, [r2, #0]
 800d644:	6558      	str	r0, [r3, #84]	; 0x54
 800d646:	69dd      	ldr	r5, [r3, #28]
 800d648:	07ad      	lsls	r5, r5, #30
 800d64a:	bf48      	it	mi
 800d64c:	6158      	strmi	r0, [r3, #20]
 800d64e:	4814      	ldr	r0, [pc, #80]	; (800d6a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d650:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d652:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d656:	6503      	str	r3, [r0, #80]	; 0x50
 800d658:	680b      	ldr	r3, [r1, #0]
 800d65a:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800d65e:	600b      	str	r3, [r1, #0]
 800d660:	6813      	ldr	r3, [r2, #0]
 800d662:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800d666:	e7e6      	b.n	800d636 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800d668:	4b0b      	ldr	r3, [pc, #44]	; (800d698 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d66a:	781a      	ldrb	r2, [r3, #0]
 800d66c:	4b0c      	ldr	r3, [pc, #48]	; (800d6a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d66e:	b132      	cbz	r2, 800d67e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800d670:	691a      	ldr	r2, [r3, #16]
 800d672:	f022 0201 	bic.w	r2, r2, #1
 800d676:	611a      	str	r2, [r3, #16]
 800d678:	2000      	movs	r0, #0
 800d67a:	6020      	str	r0, [r4, #0]
 800d67c:	e7bb      	b.n	800d5f6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800d67e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d680:	f022 0201 	bic.w	r2, r2, #1
 800d684:	651a      	str	r2, [r3, #80]	; 0x50
 800d686:	e7f7      	b.n	800d678 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800d688:	20001794 	mulcs	r0, r4, r7
 800d68c:	20001798 	mulcs	r0, r8, r7
 800d690:	200017a4 	andcs	r1, r0, r4, lsr #15
 800d694:	1ffff700 	svcne	0x00fff700
 800d698:	200017a0 	andcs	r1, r0, r0, lsr #15
 800d69c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800d6a0:	40022000 	andmi	r2, r2, r0

0800d6a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800d6a4:	b570      	push	{r4, r5, r6, lr}
 800d6a6:	2400      	movs	r4, #0
 800d6a8:	9804      	ldr	r0, [sp, #16]
 800d6aa:	6004      	str	r4, [r0, #0]
 800d6ac:	4c48      	ldr	r4, [pc, #288]	; (800d7d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800d6ae:	6820      	ldr	r0, [r4, #0]
 800d6b0:	2804      	cmp	r0, #4
 800d6b2:	d848      	bhi.n	800d746 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800d6b4:	e8df f000 	tbb	[pc, r0]
 800d6b8:	22847c03 	addcs	r7, r4, #768	; 0x300
 800d6bc:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800d6c0:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d6c4:	6001      	str	r1, [r0, #0]
 800d6c6:	4844      	ldr	r0, [pc, #272]	; (800d7d8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d6c8:	6003      	str	r3, [r0, #0]
 800d6ca:	4b44      	ldr	r3, [pc, #272]	; (800d7dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d6cc:	601a      	str	r2, [r3, #0]
 800d6ce:	4b44      	ldr	r3, [pc, #272]	; (800d7e0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800d6d0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d6d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d6d8:	4b42      	ldr	r3, [pc, #264]	; (800d7e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d6da:	d807      	bhi.n	800d6ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800d6dc:	2201      	movs	r2, #1
 800d6de:	701a      	strb	r2, [r3, #0]
 800d6e0:	f003 fe5a 	bl	8011398 <fmc_bank0_unlock>
 800d6e4:	2303      	movs	r3, #3
 800d6e6:	6023      	str	r3, [r4, #0]
 800d6e8:	2000      	movs	r0, #0
 800d6ea:	e026      	b.n	800d73a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800d6ec:	4a3e      	ldr	r2, [pc, #248]	; (800d7e8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800d6ee:	4291      	cmp	r1, r2
 800d6f0:	d3f4      	bcc.n	800d6dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800d6f2:	2200      	movs	r2, #0
 800d6f4:	701a      	strb	r2, [r3, #0]
 800d6f6:	f003 fe5d 	bl	80113b4 <fmc_bank1_unlock>
 800d6fa:	e7f3      	b.n	800d6e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d6fc:	4d39      	ldr	r5, [pc, #228]	; (800d7e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d6fe:	782b      	ldrb	r3, [r5, #0]
 800d700:	b15b      	cbz	r3, 800d71a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800d702:	f003 fe75 	bl	80113f0 <fmc_bank0_state_get>
 800d706:	2801      	cmp	r0, #1
 800d708:	d0ee      	beq.n	800d6e8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800d70a:	7829      	ldrb	r1, [r5, #0]
 800d70c:	4b37      	ldr	r3, [pc, #220]	; (800d7ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d70e:	b939      	cbnz	r1, 800d720 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800d710:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d712:	f022 0201 	bic.w	r2, r2, #1
 800d716:	651a      	str	r2, [r3, #80]	; 0x50
 800d718:	e006      	b.n	800d728 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800d71a:	f003 fe7d 	bl	8011418 <fmc_bank1_state_get>
 800d71e:	e7f2      	b.n	800d706 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800d720:	691a      	ldr	r2, [r3, #16]
 800d722:	f022 0201 	bic.w	r2, r2, #1
 800d726:	611a      	str	r2, [r3, #16]
 800d728:	4b2c      	ldr	r3, [pc, #176]	; (800d7dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d72a:	681b      	ldr	r3, [r3, #0]
 800d72c:	b94b      	cbnz	r3, 800d742 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800d72e:	b129      	cbz	r1, 800d73c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800d730:	f003 fe4e 	bl	80113d0 <fmc_bank0_lock>
 800d734:	2300      	movs	r3, #0
 800d736:	2001      	movs	r0, #1
 800d738:	6023      	str	r3, [r4, #0]
 800d73a:	bd70      	pop	{r4, r5, r6, pc}
 800d73c:	f003 fe50 	bl	80113e0 <fmc_bank1_lock>
 800d740:	e7f8      	b.n	800d734 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800d742:	2304      	movs	r3, #4
 800d744:	e7cf      	b.n	800d6e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800d746:	4a25      	ldr	r2, [pc, #148]	; (800d7dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d748:	6813      	ldr	r3, [r2, #0]
 800d74a:	2b03      	cmp	r3, #3
 800d74c:	d91a      	bls.n	800d784 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800d74e:	4b25      	ldr	r3, [pc, #148]	; (800d7e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d750:	7819      	ldrb	r1, [r3, #0]
 800d752:	4b26      	ldr	r3, [pc, #152]	; (800d7ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d754:	b189      	cbz	r1, 800d77a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800d756:	6919      	ldr	r1, [r3, #16]
 800d758:	f041 0101 	orr.w	r1, r1, #1
 800d75c:	6119      	str	r1, [r3, #16]
 800d75e:	4d1e      	ldr	r5, [pc, #120]	; (800d7d8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d760:	481c      	ldr	r0, [pc, #112]	; (800d7d4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800d762:	6829      	ldr	r1, [r5, #0]
 800d764:	6803      	ldr	r3, [r0, #0]
 800d766:	f851 6b04 	ldr.w	r6, [r1], #4
 800d76a:	f843 6b04 	str.w	r6, [r3], #4
 800d76e:	6003      	str	r3, [r0, #0]
 800d770:	6813      	ldr	r3, [r2, #0]
 800d772:	6029      	str	r1, [r5, #0]
 800d774:	3b04      	subs	r3, #4
 800d776:	6013      	str	r3, [r2, #0]
 800d778:	e7b4      	b.n	800d6e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d77a:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800d77c:	f041 0101 	orr.w	r1, r1, #1
 800d780:	6519      	str	r1, [r3, #80]	; 0x50
 800d782:	e7ec      	b.n	800d75e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800d784:	2b00      	cmp	r3, #0
 800d786:	d0ad      	beq.n	800d6e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d788:	4b16      	ldr	r3, [pc, #88]	; (800d7e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d78a:	781a      	ldrb	r2, [r3, #0]
 800d78c:	4b17      	ldr	r3, [pc, #92]	; (800d7ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d78e:	b152      	cbz	r2, 800d7a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800d790:	691a      	ldr	r2, [r3, #16]
 800d792:	f042 0201 	orr.w	r2, r2, #1
 800d796:	611a      	str	r2, [r3, #16]
 800d798:	4a0f      	ldr	r2, [pc, #60]	; (800d7d8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d79a:	4b0e      	ldr	r3, [pc, #56]	; (800d7d4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800d79c:	6812      	ldr	r2, [r2, #0]
 800d79e:	681b      	ldr	r3, [r3, #0]
 800d7a0:	6812      	ldr	r2, [r2, #0]
 800d7a2:	601a      	str	r2, [r3, #0]
 800d7a4:	e79e      	b.n	800d6e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d7a6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d7a8:	f042 0201 	orr.w	r2, r2, #1
 800d7ac:	651a      	str	r2, [r3, #80]	; 0x50
 800d7ae:	e7f3      	b.n	800d798 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800d7b0:	4b0c      	ldr	r3, [pc, #48]	; (800d7e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d7b2:	781a      	ldrb	r2, [r3, #0]
 800d7b4:	4b0d      	ldr	r3, [pc, #52]	; (800d7ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d7b6:	b132      	cbz	r2, 800d7c6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800d7b8:	691a      	ldr	r2, [r3, #16]
 800d7ba:	f022 0202 	bic.w	r2, r2, #2
 800d7be:	611a      	str	r2, [r3, #16]
 800d7c0:	2000      	movs	r0, #0
 800d7c2:	6020      	str	r0, [r4, #0]
 800d7c4:	e7b9      	b.n	800d73a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800d7c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d7c8:	f022 0202 	bic.w	r2, r2, #2
 800d7cc:	651a      	str	r2, [r3, #80]	; 0x50
 800d7ce:	e7f7      	b.n	800d7c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800d7d0:	20001794 	mulcs	r0, r4, r7
 800d7d4:	20001790 	mulcs	r0, r0, r7
 800d7d8:	2000179c 	mulcs	r0, ip, r7
 800d7dc:	200017a4 	andcs	r1, r0, r4, lsr #15
 800d7e0:	1ffff700 	svcne	0x00fff700
 800d7e4:	200017a0 	andcs	r1, r0, r0, lsr #15
 800d7e8:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800d7ec:	40022000 	andmi	r2, r2, r0

0800d7f0 <net_init>:
 800d7f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7f4:	460c      	mov	r4, r1
 800d7f6:	4616      	mov	r6, r2
 800d7f8:	9f06      	ldr	r7, [sp, #24]
 800d7fa:	4a22      	ldr	r2, [pc, #136]	; (800d884 <net_init+0x94>)
 800d7fc:	461d      	mov	r5, r3
 800d7fe:	1e43      	subs	r3, r0, #1
 800d800:	3005      	adds	r0, #5
 800d802:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d806:	4283      	cmp	r3, r0
 800d808:	f802 1b01 	strb.w	r1, [r2], #1
 800d80c:	d1f9      	bne.n	800d802 <net_init+0x12>
 800d80e:	4623      	mov	r3, r4
 800d810:	4a1d      	ldr	r2, [pc, #116]	; (800d888 <net_init+0x98>)
 800d812:	f104 010c 	add.w	r1, r4, #12
 800d816:	f813 0b01 	ldrb.w	r0, [r3], #1
 800d81a:	428b      	cmp	r3, r1
 800d81c:	f802 0b01 	strb.w	r0, [r2], #1
 800d820:	d1f9      	bne.n	800d816 <net_init+0x26>
 800d822:	f04f 0800 	mov.w	r8, #0
 800d826:	4918      	ldr	r1, [pc, #96]	; (800d888 <net_init+0x98>)
 800d828:	4816      	ldr	r0, [pc, #88]	; (800d884 <net_init+0x94>)
 800d82a:	f002 fb66 	bl	800fefa <ip_init>
 800d82e:	4815      	ldr	r0, [pc, #84]	; (800d884 <net_init+0x94>)
 800d830:	f000 f868 	bl	800d904 <rfc3927_init>
 800d834:	f887 8000 	strb.w	r8, [r7]
 800d838:	782b      	ldrb	r3, [r5, #0]
 800d83a:	b163      	cbz	r3, 800d856 <net_init+0x66>
 800d83c:	4632      	mov	r2, r6
 800d83e:	4912      	ldr	r1, [pc, #72]	; (800d888 <net_init+0x98>)
 800d840:	4810      	ldr	r0, [pc, #64]	; (800d884 <net_init+0x94>)
 800d842:	f002 f86b 	bl	800f91c <dhcp_client>
 800d846:	4540      	cmp	r0, r8
 800d848:	da05      	bge.n	800d856 <net_init+0x66>
 800d84a:	480f      	ldr	r0, [pc, #60]	; (800d888 <net_init+0x98>)
 800d84c:	f885 8000 	strb.w	r8, [r5]
 800d850:	f000 f864 	bl	800d91c <rfc3927>
 800d854:	7038      	strb	r0, [r7, #0]
 800d856:	490c      	ldr	r1, [pc, #48]	; (800d888 <net_init+0x98>)
 800d858:	480a      	ldr	r0, [pc, #40]	; (800d884 <net_init+0x94>)
 800d85a:	f001 fe6f 	bl	800f53c <arp_init>
 800d85e:	480a      	ldr	r0, [pc, #40]	; (800d888 <net_init+0x98>)
 800d860:	f002 fb42 	bl	800fee8 <ip_set_ip>
 800d864:	f000 f9c2 	bl	800dbec <tcp_init>
 800d868:	4a07      	ldr	r2, [pc, #28]	; (800d888 <net_init+0x98>)
 800d86a:	1e63      	subs	r3, r4, #1
 800d86c:	340b      	adds	r4, #11
 800d86e:	f812 1b01 	ldrb.w	r1, [r2], #1
 800d872:	f803 1f01 	strb.w	r1, [r3, #1]!
 800d876:	429c      	cmp	r4, r3
 800d878:	d1f9      	bne.n	800d86e <net_init+0x7e>
 800d87a:	782a      	ldrb	r2, [r5, #0]
 800d87c:	4b03      	ldr	r3, [pc, #12]	; (800d88c <net_init+0x9c>)
 800d87e:	701a      	strb	r2, [r3, #0]
 800d880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d884:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 800d888:	200017a8 	andcs	r1, r0, r8, lsr #15
 800d88c:	200017ba 			; <UNDEFINED> instruction: 0x200017ba

0800d890 <net_shutdown>:
 800d890:	b508      	push	{r3, lr}
 800d892:	f002 fb3d 	bl	800ff10 <ip_shutdown>
 800d896:	4b04      	ldr	r3, [pc, #16]	; (800d8a8 <net_shutdown+0x18>)
 800d898:	781b      	ldrb	r3, [r3, #0]
 800d89a:	b11b      	cbz	r3, 800d8a4 <net_shutdown+0x14>
 800d89c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d8a0:	f002 b944 	b.w	800fb2c <dhcp_client_release>
 800d8a4:	bd08      	pop	{r3, pc}
 800d8a6:	bf00      	nop
 800d8a8:	200017ba 			; <UNDEFINED> instruction: 0x200017ba

0800d8ac <net_handle>:
 800d8ac:	b510      	push	{r4, lr}
 800d8ae:	4c0c      	ldr	r4, [pc, #48]	; (800d8e0 <net_handle+0x34>)
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	f004 f9e7 	bl	8011c84 <emac_eth_recv>
 800d8b6:	2800      	cmp	r0, #0
 800d8b8:	dd07      	ble.n	800d8ca <net_handle+0x1e>
 800d8ba:	6820      	ldr	r0, [r4, #0]
 800d8bc:	8983      	ldrh	r3, [r0, #12]
 800d8be:	2b08      	cmp	r3, #8
 800d8c0:	d107      	bne.n	800d8d2 <net_handle+0x26>
 800d8c2:	f002 fb2c 	bl	800ff1e <ip_handle>
 800d8c6:	f004 f9f1 	bl	8011cac <emac_free_pkt>
 800d8ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d8ce:	f000 b809 	b.w	800d8e4 <net_timers_run>
 800d8d2:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800d8d6:	d1f6      	bne.n	800d8c6 <net_handle+0x1a>
 800d8d8:	f001 feb6 	bl	800f648 <arp_handle>
 800d8dc:	e7f3      	b.n	800d8c6 <net_handle+0x1a>
 800d8de:	bf00      	nop
 800d8e0:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

0800d8e4 <net_timers_run>:
 800d8e4:	4b05      	ldr	r3, [pc, #20]	; (800d8fc <net_timers_run+0x18>)
 800d8e6:	4a06      	ldr	r2, [pc, #24]	; (800d900 <net_timers_run+0x1c>)
 800d8e8:	681b      	ldr	r3, [r3, #0]
 800d8ea:	6811      	ldr	r1, [r2, #0]
 800d8ec:	4299      	cmp	r1, r3
 800d8ee:	d803      	bhi.n	800d8f8 <net_timers_run+0x14>
 800d8f0:	3364      	adds	r3, #100	; 0x64
 800d8f2:	6013      	str	r3, [r2, #0]
 800d8f4:	f002 ba5a 	b.w	800fdac <igmp_timer>
 800d8f8:	4770      	bx	lr
 800d8fa:	bf00      	nop
 800d8fc:	200097a4 	andcs	r9, r0, r4, lsr #15
 800d900:	200017c0 	andcs	r1, r0, r0, asr #15

0800d904 <rfc3927_init>:
 800d904:	4b04      	ldr	r3, [pc, #16]	; (800d918 <rfc3927_init+0x14>)
 800d906:	1d82      	adds	r2, r0, #6
 800d908:	4290      	cmp	r0, r2
 800d90a:	d100      	bne.n	800d90e <rfc3927_init+0xa>
 800d90c:	4770      	bx	lr
 800d90e:	f810 1b01 	ldrb.w	r1, [r0], #1
 800d912:	f803 1b01 	strb.w	r1, [r3], #1
 800d916:	e7f7      	b.n	800d908 <rfc3927_init+0x4>
 800d918:	200017c4 	andcs	r1, r0, r4, asr #15

0800d91c <rfc3927>:
 800d91c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d920:	4605      	mov	r5, r0
 800d922:	26ff      	movs	r6, #255	; 0xff
 800d924:	4b18      	ldr	r3, [pc, #96]	; (800d988 <rfc3927+0x6c>)
 800d926:	4f19      	ldr	r7, [pc, #100]	; (800d98c <rfc3927+0x70>)
 800d928:	791a      	ldrb	r2, [r3, #4]
 800d92a:	78dc      	ldrb	r4, [r3, #3]
 800d92c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d990 <rfc3927+0x74>
 800d930:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800d934:	f8d7 9000 	ldr.w	r9, [r7]
 800d938:	f8df b058 	ldr.w	fp, [pc, #88]	; 800d994 <rfc3927+0x78>
 800d93c:	f8df a058 	ldr.w	sl, [pc, #88]	; 800d998 <rfc3927+0x7c>
 800d940:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800d944:	4659      	mov	r1, fp
 800d946:	4620      	mov	r0, r4
 800d948:	f001 fecc 	bl	800f6e4 <arp_cache_lookup>
 800d94c:	b938      	cbnz	r0, 800d95e <rfc3927+0x42>
 800d94e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d952:	2001      	movs	r0, #1
 800d954:	602c      	str	r4, [r5, #0]
 800d956:	60ac      	str	r4, [r5, #8]
 800d958:	606b      	str	r3, [r5, #4]
 800d95a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d95e:	ba24      	rev	r4, r4
 800d960:	3401      	adds	r4, #1
 800d962:	3e01      	subs	r6, #1
 800d964:	ba24      	rev	r4, r4
 800d966:	b2b6      	uxth	r6, r6
 800d968:	4554      	cmp	r4, sl
 800d96a:	bf08      	it	eq
 800d96c:	4644      	moveq	r4, r8
 800d96e:	b12e      	cbz	r6, 800d97c <rfc3927+0x60>
 800d970:	683b      	ldr	r3, [r7, #0]
 800d972:	eba3 0309 	sub.w	r3, r3, r9
 800d976:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d97a:	d3e3      	bcc.n	800d944 <rfc3927+0x28>
 800d97c:	2000      	movs	r0, #0
 800d97e:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800d982:	6028      	str	r0, [r5, #0]
 800d984:	e7e9      	b.n	800d95a <rfc3927+0x3e>
 800d986:	bf00      	nop
 800d988:	200017c4 	andcs	r1, r0, r4, asr #15
 800d98c:	200097a4 	andcs	r9, r0, r4, lsr #15
 800d990:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800d994:	200017cc 	andcs	r1, r0, ip, asr #15
 800d998:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800d99c <_init_tcb>:
 800d99c:	b510      	push	{r4, lr}
 800d99e:	4603      	mov	r3, r0
 800d9a0:	2400      	movs	r4, #0
 800d9a2:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800d9a6:	4293      	cmp	r3, r2
 800d9a8:	d10d      	bne.n	800d9c6 <_init_tcb+0x2a>
 800d9aa:	4b08      	ldr	r3, [pc, #32]	; (800d9cc <_init_tcb+0x30>)
 800d9ac:	f640 3268 	movw	r2, #2920	; 0xb68
 800d9b0:	681b      	ldr	r3, [r3, #0]
 800d9b2:	8702      	strh	r2, [r0, #56]	; 0x38
 800d9b4:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d9b8:	6283      	str	r3, [r0, #40]	; 0x28
 800d9ba:	6243      	str	r3, [r0, #36]	; 0x24
 800d9bc:	2301      	movs	r3, #1
 800d9be:	8001      	strh	r1, [r0, #0]
 800d9c0:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d9c4:	bd10      	pop	{r4, pc}
 800d9c6:	f803 4b01 	strb.w	r4, [r3], #1
 800d9ca:	e7ec      	b.n	800d9a6 <_init_tcb+0xa>
 800d9cc:	200097a4 	andcs	r9, r0, r4, lsr #15

0800d9d0 <memcpy.isra.0>:
 800d9d0:	3801      	subs	r0, #1
 800d9d2:	440a      	add	r2, r1
 800d9d4:	4291      	cmp	r1, r2
 800d9d6:	d100      	bne.n	800d9da <memcpy.isra.0+0xa>
 800d9d8:	4770      	bx	lr
 800d9da:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d9de:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d9e2:	e7f7      	b.n	800d9d4 <memcpy.isra.0+0x4>

0800d9e4 <_bswap32>:
 800d9e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9e6:	2204      	movs	r2, #4
 800d9e8:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800d9ec:	4629      	mov	r1, r5
 800d9ee:	4604      	mov	r4, r0
 800d9f0:	eb0d 0002 	add.w	r0, sp, r2
 800d9f4:	f7ff ffec 	bl	800d9d0 <memcpy.isra.0>
 800d9f8:	2204      	movs	r2, #4
 800d9fa:	9b01      	ldr	r3, [sp, #4]
 800d9fc:	eb0d 0102 	add.w	r1, sp, r2
 800da00:	ba1b      	rev	r3, r3
 800da02:	4628      	mov	r0, r5
 800da04:	9301      	str	r3, [sp, #4]
 800da06:	f7ff ffe3 	bl	800d9d0 <memcpy.isra.0>
 800da0a:	2204      	movs	r2, #4
 800da0c:	3426      	adds	r4, #38	; 0x26
 800da0e:	eb0d 0002 	add.w	r0, sp, r2
 800da12:	4621      	mov	r1, r4
 800da14:	f7ff ffdc 	bl	800d9d0 <memcpy.isra.0>
 800da18:	2204      	movs	r2, #4
 800da1a:	9b01      	ldr	r3, [sp, #4]
 800da1c:	4620      	mov	r0, r4
 800da1e:	ba1b      	rev	r3, r3
 800da20:	eb0d 0102 	add.w	r1, sp, r2
 800da24:	9301      	str	r3, [sp, #4]
 800da26:	f7ff ffd3 	bl	800d9d0 <memcpy.isra.0>
 800da2a:	b003      	add	sp, #12
 800da2c:	bd30      	pop	{r4, r5, pc}
	...

0800da30 <_tcp_send_package>:
 800da30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800da34:	7a0b      	ldrb	r3, [r1, #8]
 800da36:	4605      	mov	r5, r0
 800da38:	f013 0f02 	tst.w	r3, #2
 800da3c:	bf0c      	ite	eq
 800da3e:	f04f 0905 	moveq.w	r9, #5
 800da42:	f04f 0906 	movne.w	r9, #6
 800da46:	f04f 0800 	mov.w	r8, #0
 800da4a:	4c4b      	ldr	r4, [pc, #300]	; (800db78 <_tcp_send_package+0x148>)
 800da4c:	460f      	mov	r7, r1
 800da4e:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800da50:	f100 0108 	add.w	r1, r0, #8
 800da54:	2206      	movs	r2, #6
 800da56:	4620      	mov	r0, r4
 800da58:	f7ff ffba 	bl	800d9d0 <memcpy.isra.0>
 800da5c:	4a47      	ldr	r2, [pc, #284]	; (800db7c <_tcp_send_package+0x14c>)
 800da5e:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800da62:	8813      	ldrh	r3, [r2, #0]
 800da64:	b2b6      	uxth	r6, r6
 800da66:	1c59      	adds	r1, r3, #1
 800da68:	8263      	strh	r3, [r4, #18]
 800da6a:	f105 0a04 	add.w	sl, r5, #4
 800da6e:	f106 0314 	add.w	r3, r6, #20
 800da72:	ba5b      	rev16	r3, r3
 800da74:	8011      	strh	r1, [r2, #0]
 800da76:	f104 001e 	add.w	r0, r4, #30
 800da7a:	2204      	movs	r2, #4
 800da7c:	4651      	mov	r1, sl
 800da7e:	8223      	strh	r3, [r4, #16]
 800da80:	f7ff ffa6 	bl	800d9d0 <memcpy.isra.0>
 800da84:	2114      	movs	r1, #20
 800da86:	f104 000e 	add.w	r0, r4, #14
 800da8a:	f884 8018 	strb.w	r8, [r4, #24]
 800da8e:	f884 8019 	strb.w	r8, [r4, #25]
 800da92:	f002 fa5d 	bl	800ff50 <net_chksum>
 800da96:	882b      	ldrh	r3, [r5, #0]
 800da98:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800da9c:	8463      	strh	r3, [r4, #34]	; 0x22
 800da9e:	886b      	ldrh	r3, [r5, #2]
 800daa0:	8320      	strh	r0, [r4, #24]
 800daa2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800daa4:	683b      	ldr	r3, [r7, #0]
 800daa6:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800daa8:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800daac:	687b      	ldr	r3, [r7, #4]
 800daae:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800dab2:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800dab6:	7a3b      	ldrb	r3, [r7, #8]
 800dab8:	8622      	strh	r2, [r4, #48]	; 0x30
 800daba:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800dabe:	079b      	lsls	r3, r3, #30
 800dac0:	bf48      	it	mi
 800dac2:	2302      	movmi	r3, #2
 800dac4:	8baa      	ldrh	r2, [r5, #28]
 800dac6:	bf44      	itt	mi
 800dac8:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800dacc:	2304      	movmi	r3, #4
 800dace:	86a2      	strh	r2, [r4, #52]	; 0x34
 800dad0:	bf41      	itttt	mi
 800dad2:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800dad6:	4622      	movmi	r2, r4
 800dad8:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800dadc:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800dae0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800dae2:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800dae6:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800daea:	bf58      	it	pl
 800daec:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	d13f      	bne.n	800db74 <_tcp_send_package+0x144>
 800daf4:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800daf6:	4820      	ldr	r0, [pc, #128]	; (800db78 <_tcp_send_package+0x148>)
 800daf8:	ba5b      	rev16	r3, r3
 800dafa:	8463      	strh	r3, [r4, #34]	; 0x22
 800dafc:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800dafe:	ba5b      	rev16	r3, r3
 800db00:	84a3      	strh	r3, [r4, #36]	; 0x24
 800db02:	f7ff ff6f 	bl	800d9e4 <_bswap32>
 800db06:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800db08:	a801      	add	r0, sp, #4
 800db0a:	ba5b      	rev16	r3, r3
 800db0c:	8623      	strh	r3, [r4, #48]	; 0x30
 800db0e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800db10:	220c      	movs	r2, #12
 800db12:	ba5b      	rev16	r3, r3
 800db14:	491a      	ldr	r1, [pc, #104]	; (800db80 <_tcp_send_package+0x150>)
 800db16:	86a3      	strh	r3, [r4, #52]	; 0x34
 800db18:	f7ff ff5a 	bl	800d9d0 <memcpy.isra.0>
 800db1c:	2204      	movs	r2, #4
 800db1e:	4919      	ldr	r1, [pc, #100]	; (800db84 <_tcp_send_package+0x154>)
 800db20:	4817      	ldr	r0, [pc, #92]	; (800db80 <_tcp_send_package+0x150>)
 800db22:	f7ff ff55 	bl	800d9d0 <memcpy.isra.0>
 800db26:	2204      	movs	r2, #4
 800db28:	4651      	mov	r1, sl
 800db2a:	4817      	ldr	r0, [pc, #92]	; (800db88 <_tcp_send_package+0x158>)
 800db2c:	f7ff ff50 	bl	800d9d0 <memcpy.isra.0>
 800db30:	2300      	movs	r3, #0
 800db32:	77a3      	strb	r3, [r4, #30]
 800db34:	2306      	movs	r3, #6
 800db36:	f106 010c 	add.w	r1, r6, #12
 800db3a:	77e3      	strb	r3, [r4, #31]
 800db3c:	4810      	ldr	r0, [pc, #64]	; (800db80 <_tcp_send_package+0x150>)
 800db3e:	ba73      	rev16	r3, r6
 800db40:	8423      	strh	r3, [r4, #32]
 800db42:	f002 fa05 	bl	800ff50 <net_chksum>
 800db46:	a901      	add	r1, sp, #4
 800db48:	4605      	mov	r5, r0
 800db4a:	220c      	movs	r2, #12
 800db4c:	480c      	ldr	r0, [pc, #48]	; (800db80 <_tcp_send_package+0x150>)
 800db4e:	f7ff ff3f 	bl	800d9d0 <memcpy.isra.0>
 800db52:	4809      	ldr	r0, [pc, #36]	; (800db78 <_tcp_send_package+0x148>)
 800db54:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800db58:	8665      	strh	r5, [r4, #50]	; 0x32
 800db5a:	b004      	add	sp, #16
 800db5c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db60:	f004 b8a8 	b.w	8011cb4 <emac_eth_send>
 800db64:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800db66:	5cc9      	ldrb	r1, [r1, r3]
 800db68:	54d1      	strb	r1, [r2, r3]
 800db6a:	3301      	adds	r3, #1
 800db6c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800db6e:	4299      	cmp	r1, r3
 800db70:	d8f8      	bhi.n	800db64 <_tcp_send_package+0x134>
 800db72:	e7bf      	b.n	800daf4 <_tcp_send_package+0xc4>
 800db74:	2300      	movs	r3, #0
 800db76:	e7f9      	b.n	800db6c <_tcp_send_package+0x13c>
 800db78:	20002388 	andcs	r2, r0, r8, lsl #7
 800db7c:	200017d2 	ldrdcs	r1, [r0], -r2
 800db80:	2000239e 	mulcs	r0, lr, r3
 800db84:	200017a8 	andcs	r1, r0, r8, lsr #15
 800db88:	200023a2 	andcs	r2, r0, r2, lsr #7

0800db8c <_send_reset>:
 800db8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800db8e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800db92:	4604      	mov	r4, r0
 800db94:	075a      	lsls	r2, r3, #29
 800db96:	460e      	mov	r6, r1
 800db98:	d421      	bmi.n	800dbde <_send_reset+0x52>
 800db9a:	2204      	movs	r2, #4
 800db9c:	f013 0310 	ands.w	r3, r3, #16
 800dba0:	f88d 200c 	strb.w	r2, [sp, #12]
 800dba4:	d01d      	beq.n	800dbe2 <_send_reset+0x56>
 800dba6:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800dbaa:	4668      	mov	r0, sp
 800dbac:	f7ff ff10 	bl	800d9d0 <memcpy.isra.0>
 800dbb0:	9b00      	ldr	r3, [sp, #0]
 800dbb2:	9301      	str	r3, [sp, #4]
 800dbb4:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800dbb8:	4668      	mov	r0, sp
 800dbba:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800dbbe:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800dbc2:	07db      	lsls	r3, r3, #31
 800dbc4:	f04f 0204 	mov.w	r2, #4
 800dbc8:	bf48      	it	mi
 800dbca:	3501      	addmi	r5, #1
 800dbcc:	f7ff ff00 	bl	800d9d0 <memcpy.isra.0>
 800dbd0:	9b00      	ldr	r3, [sp, #0]
 800dbd2:	4630      	mov	r0, r6
 800dbd4:	441d      	add	r5, r3
 800dbd6:	a901      	add	r1, sp, #4
 800dbd8:	9502      	str	r5, [sp, #8]
 800dbda:	f7ff ff29 	bl	800da30 <_tcp_send_package>
 800dbde:	b004      	add	sp, #16
 800dbe0:	bd70      	pop	{r4, r5, r6, pc}
 800dbe2:	9301      	str	r3, [sp, #4]
 800dbe4:	2314      	movs	r3, #20
 800dbe6:	f88d 300c 	strb.w	r3, [sp, #12]
 800dbea:	e7e3      	b.n	800dbb4 <_send_reset+0x28>

0800dbec <tcp_init>:
 800dbec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dbee:	2206      	movs	r2, #6
 800dbf0:	4c0e      	ldr	r4, [pc, #56]	; (800dc2c <tcp_init+0x40>)
 800dbf2:	490f      	ldr	r1, [pc, #60]	; (800dc30 <tcp_init+0x44>)
 800dbf4:	18a0      	adds	r0, r4, r2
 800dbf6:	f7ff feeb 	bl	800d9d0 <memcpy.isra.0>
 800dbfa:	2308      	movs	r3, #8
 800dbfc:	2204      	movs	r2, #4
 800dbfe:	2500      	movs	r5, #0
 800dc00:	7323      	strb	r3, [r4, #12]
 800dc02:	4b0c      	ldr	r3, [pc, #48]	; (800dc34 <tcp_init+0x48>)
 800dc04:	eb0d 0102 	add.w	r1, sp, r2
 800dc08:	681b      	ldr	r3, [r3, #0]
 800dc0a:	f104 001a 	add.w	r0, r4, #26
 800dc0e:	9301      	str	r3, [sp, #4]
 800dc10:	7365      	strb	r5, [r4, #13]
 800dc12:	f7ff fedd 	bl	800d9d0 <memcpy.isra.0>
 800dc16:	2345      	movs	r3, #69	; 0x45
 800dc18:	73a3      	strb	r3, [r4, #14]
 800dc1a:	2340      	movs	r3, #64	; 0x40
 800dc1c:	7523      	strb	r3, [r4, #20]
 800dc1e:	75a3      	strb	r3, [r4, #22]
 800dc20:	2306      	movs	r3, #6
 800dc22:	73e5      	strb	r5, [r4, #15]
 800dc24:	7565      	strb	r5, [r4, #21]
 800dc26:	75e3      	strb	r3, [r4, #23]
 800dc28:	b003      	add	sp, #12
 800dc2a:	bd30      	pop	{r4, r5, pc}
 800dc2c:	20002388 	andcs	r2, r0, r8, lsl #7
 800dc30:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 800dc34:	200017a8 	andcs	r1, r0, r8, lsr #15

0800dc38 <tcp_handle>:
 800dc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc3c:	4605      	mov	r5, r0
 800dc3e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 800dc40:	b085      	sub	sp, #20
 800dc42:	ba5b      	rev16	r3, r3
 800dc44:	8443      	strh	r3, [r0, #34]	; 0x22
 800dc46:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800dc48:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 800dc4c:	ba5b      	rev16	r3, r3
 800dc4e:	8483      	strh	r3, [r0, #36]	; 0x24
 800dc50:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800dc54:	f7ff fec6 	bl	800d9e4 <_bswap32>
 800dc58:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 800dc5a:	4ca6      	ldr	r4, [pc, #664]	; (800def4 <tcp_handle+0x2bc>)
 800dc5c:	ba5b      	rev16	r3, r3
 800dc5e:	862b      	strh	r3, [r5, #48]	; 0x30
 800dc60:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800dc62:	8822      	ldrh	r2, [r4, #0]
 800dc64:	ba5b      	rev16	r3, r3
 800dc66:	86ab      	strh	r3, [r5, #52]	; 0x34
 800dc68:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 800dc6a:	429a      	cmp	r2, r3
 800dc6c:	d14d      	bne.n	800dd0a <tcp_handle+0xd2>
 800dc6e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dc72:	2b01      	cmp	r3, #1
 800dc74:	d00d      	beq.n	800dc92 <tcp_handle+0x5a>
 800dc76:	2204      	movs	r2, #4
 800dc78:	4668      	mov	r0, sp
 800dc7a:	f105 011a 	add.w	r1, r5, #26
 800dc7e:	f7ff fea7 	bl	800d9d0 <memcpy.isra.0>
 800dc82:	8862      	ldrh	r2, [r4, #2]
 800dc84:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800dc86:	429a      	cmp	r2, r3
 800dc88:	d13f      	bne.n	800dd0a <tcp_handle+0xd2>
 800dc8a:	6862      	ldr	r2, [r4, #4]
 800dc8c:	9b00      	ldr	r3, [sp, #0]
 800dc8e:	429a      	cmp	r2, r3
 800dc90:	d13b      	bne.n	800dd0a <tcp_handle+0xd2>
 800dc92:	2204      	movs	r2, #4
 800dc94:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800dc98:	eb0d 0002 	add.w	r0, sp, r2
 800dc9c:	f7ff fe98 	bl	800d9d0 <memcpy.isra.0>
 800dca0:	2204      	movs	r2, #4
 800dca2:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800dca6:	eb0d 0002 	add.w	r0, sp, r2
 800dcaa:	9e01      	ldr	r6, [sp, #4]
 800dcac:	f7ff fe90 	bl	800d9d0 <memcpy.isra.0>
 800dcb0:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800dcb4:	9f01      	ldr	r7, [sp, #4]
 800dcb6:	2a01      	cmp	r2, #1
 800dcb8:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800dcbc:	d01b      	beq.n	800dcf6 <tcp_handle+0xbe>
 800dcbe:	1ed3      	subs	r3, r2, #3
 800dcc0:	2b07      	cmp	r3, #7
 800dcc2:	d822      	bhi.n	800dd0a <tcp_handle+0xd2>
 800dcc4:	ea4f 1318 	mov.w	r3, r8, lsr #4
 800dcc8:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800dccc:	fa9b fb9b 	rev16.w	fp, fp
 800dcd0:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800dcd4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800dcd6:	44d8      	add	r8, fp
 800dcd8:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800dcdc:	ea4f 0983 	mov.w	r9, r3, lsl #2
 800dce0:	fa1f f888 	uxth.w	r8, r8
 800dce4:	2900      	cmp	r1, #0
 800dce6:	d142      	bne.n	800dd6e <tcp_handle+0x136>
 800dce8:	f1b8 0f00 	cmp.w	r8, #0
 800dcec:	d16b      	bne.n	800ddc6 <tcp_handle+0x18e>
 800dcee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dcf0:	42bb      	cmp	r3, r7
 800dcf2:	d168      	bne.n	800ddc6 <tcp_handle+0x18e>
 800dcf4:	e048      	b.n	800dd88 <tcp_handle+0x150>
 800dcf6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800dcfa:	075a      	lsls	r2, r3, #29
 800dcfc:	d405      	bmi.n	800dd0a <tcp_handle+0xd2>
 800dcfe:	06d8      	lsls	r0, r3, #27
 800dd00:	d506      	bpl.n	800dd10 <tcp_handle+0xd8>
 800dd02:	4628      	mov	r0, r5
 800dd04:	497b      	ldr	r1, [pc, #492]	; (800def4 <tcp_handle+0x2bc>)
 800dd06:	f7ff ff41 	bl	800db8c <_send_reset>
 800dd0a:	b005      	add	sp, #20
 800dd0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd10:	0799      	lsls	r1, r3, #30
 800dd12:	d5fa      	bpl.n	800dd0a <tcp_handle+0xd2>
 800dd14:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800dd18:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800dd1c:	4668      	mov	r0, sp
 800dd1e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800dd22:	f105 011a 	add.w	r1, r5, #26
 800dd26:	2204      	movs	r2, #4
 800dd28:	8063      	strh	r3, [r4, #2]
 800dd2a:	f7ff fe51 	bl	800d9d0 <memcpy.isra.0>
 800dd2e:	2206      	movs	r2, #6
 800dd30:	9b00      	ldr	r3, [sp, #0]
 800dd32:	18a9      	adds	r1, r5, r2
 800dd34:	4870      	ldr	r0, [pc, #448]	; (800def8 <tcp_handle+0x2c0>)
 800dd36:	6063      	str	r3, [r4, #4]
 800dd38:	f7ff fe4a 	bl	800d9d0 <memcpy.isra.0>
 800dd3c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dd3e:	1c7b      	adds	r3, r7, #1
 800dd40:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800dd44:	6363      	str	r3, [r4, #52]	; 0x34
 800dd46:	2312      	movs	r3, #18
 800dd48:	486a      	ldr	r0, [pc, #424]	; (800def4 <tcp_handle+0x2bc>)
 800dd4a:	a901      	add	r1, sp, #4
 800dd4c:	f88d 300c 	strb.w	r3, [sp, #12]
 800dd50:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800dd54:	63e7      	str	r7, [r4, #60]	; 0x3c
 800dd56:	f8c4 a018 	str.w	sl, [r4, #24]
 800dd5a:	f7ff fe69 	bl	800da30 <_tcp_send_package>
 800dd5e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800dd60:	1c5a      	adds	r2, r3, #1
 800dd62:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800dd66:	2303      	movs	r3, #3
 800dd68:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800dd6c:	e7cd      	b.n	800dd0a <tcp_handle+0xd2>
 800dd6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dd70:	eba3 0c07 	sub.w	ip, r3, r7
 800dd74:	f1b8 0f00 	cmp.w	r8, #0
 800dd78:	d10d      	bne.n	800dd96 <tcp_handle+0x15e>
 800dd7a:	f1bc 0f00 	cmp.w	ip, #0
 800dd7e:	dc22      	bgt.n	800ddc6 <tcp_handle+0x18e>
 800dd80:	1afb      	subs	r3, r7, r3
 800dd82:	1a5b      	subs	r3, r3, r1
 800dd84:	2b00      	cmp	r3, #0
 800dd86:	da1e      	bge.n	800ddc6 <tcp_handle+0x18e>
 800dd88:	0743      	lsls	r3, r0, #29
 800dd8a:	d530      	bpl.n	800ddee <tcp_handle+0x1b6>
 800dd8c:	8821      	ldrh	r1, [r4, #0]
 800dd8e:	4859      	ldr	r0, [pc, #356]	; (800def4 <tcp_handle+0x2bc>)
 800dd90:	f7ff fe04 	bl	800d99c <_init_tcb>
 800dd94:	e7b9      	b.n	800dd0a <tcp_handle+0xd2>
 800dd96:	f1bc 0f00 	cmp.w	ip, #0
 800dd9a:	dc06      	bgt.n	800ddaa <tcp_handle+0x172>
 800dd9c:	eba7 0c03 	sub.w	ip, r7, r3
 800dda0:	ebac 0c01 	sub.w	ip, ip, r1
 800dda4:	f1bc 0f00 	cmp.w	ip, #0
 800dda8:	dbee      	blt.n	800dd88 <tcp_handle+0x150>
 800ddaa:	eb08 0c07 	add.w	ip, r8, r7
 800ddae:	f103 0e01 	add.w	lr, r3, #1
 800ddb2:	ebae 0e0c 	sub.w	lr, lr, ip
 800ddb6:	f1be 0f00 	cmp.w	lr, #0
 800ddba:	dc04      	bgt.n	800ddc6 <tcp_handle+0x18e>
 800ddbc:	43db      	mvns	r3, r3
 800ddbe:	1a5b      	subs	r3, r3, r1
 800ddc0:	eb13 0f0c 	cmn.w	r3, ip
 800ddc4:	d4e0      	bmi.n	800dd88 <tcp_handle+0x150>
 800ddc6:	0742      	lsls	r2, r0, #29
 800ddc8:	d505      	bpl.n	800ddd6 <tcp_handle+0x19e>
 800ddca:	8821      	ldrh	r1, [r4, #0]
 800ddcc:	4849      	ldr	r0, [pc, #292]	; (800def4 <tcp_handle+0x2bc>)
 800ddce:	f7ff fde5 	bl	800d99c <_init_tcb>
 800ddd2:	2301      	movs	r3, #1
 800ddd4:	e7c8      	b.n	800dd68 <tcp_handle+0x130>
 800ddd6:	6963      	ldr	r3, [r4, #20]
 800ddd8:	9301      	str	r3, [sp, #4]
 800ddda:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dddc:	9302      	str	r3, [sp, #8]
 800ddde:	2310      	movs	r3, #16
 800dde0:	4844      	ldr	r0, [pc, #272]	; (800def4 <tcp_handle+0x2bc>)
 800dde2:	a901      	add	r1, sp, #4
 800dde4:	f88d 300c 	strb.w	r3, [sp, #12]
 800dde8:	f7ff fe22 	bl	800da30 <_tcp_send_package>
 800ddec:	e78d      	b.n	800dd0a <tcp_handle+0xd2>
 800ddee:	0781      	lsls	r1, r0, #30
 800ddf0:	d505      	bpl.n	800ddfe <tcp_handle+0x1c6>
 800ddf2:	2a03      	cmp	r2, #3
 800ddf4:	d0ed      	beq.n	800ddd2 <tcp_handle+0x19a>
 800ddf6:	4628      	mov	r0, r5
 800ddf8:	493e      	ldr	r1, [pc, #248]	; (800def4 <tcp_handle+0x2bc>)
 800ddfa:	f7ff fec7 	bl	800db8c <_send_reset>
 800ddfe:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800de02:	06da      	lsls	r2, r3, #27
 800de04:	d581      	bpl.n	800dd0a <tcp_handle+0xd2>
 800de06:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800de0a:	3b03      	subs	r3, #3
 800de0c:	2b07      	cmp	r3, #7
 800de0e:	d818      	bhi.n	800de42 <tcp_handle+0x20a>
 800de10:	e8df f003 	tbb	[pc, r3]
 800de14:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 800de18:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800de1c:	6923      	ldr	r3, [r4, #16]
 800de1e:	1b9b      	subs	r3, r3, r6
 800de20:	2b00      	cmp	r3, #0
 800de22:	dc0a      	bgt.n	800de3a <tcp_handle+0x202>
 800de24:	6963      	ldr	r3, [r4, #20]
 800de26:	1af3      	subs	r3, r6, r3
 800de28:	2b00      	cmp	r3, #0
 800de2a:	dc06      	bgt.n	800de3a <tcp_handle+0x202>
 800de2c:	2304      	movs	r3, #4
 800de2e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800de32:	f8c4 a018 	str.w	sl, [r4, #24]
 800de36:	6126      	str	r6, [r4, #16]
 800de38:	e796      	b.n	800dd68 <tcp_handle+0x130>
 800de3a:	4628      	mov	r0, r5
 800de3c:	492d      	ldr	r1, [pc, #180]	; (800def4 <tcp_handle+0x2bc>)
 800de3e:	f7ff fea5 	bl	800db8c <_send_reset>
 800de42:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800de46:	3b04      	subs	r3, #4
 800de48:	2b02      	cmp	r3, #2
 800de4a:	d830      	bhi.n	800deae <tcp_handle+0x276>
 800de4c:	f1b8 0f00 	cmp.w	r8, #0
 800de50:	d02d      	beq.n	800deae <tcp_handle+0x276>
 800de52:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800de54:	42bb      	cmp	r3, r7
 800de56:	f040 8092 	bne.w	800df7e <tcp_handle+0x346>
 800de5a:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800de5e:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800defc <tcp_handle+0x2c4>
 800de62:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800de66:	f8ba 7000 	ldrh.w	r7, [sl]
 800de6a:	4642      	mov	r2, r8
 800de6c:	435f      	muls	r7, r3
 800de6e:	1d38      	adds	r0, r7, #4
 800de70:	4449      	add	r1, r9
 800de72:	4450      	add	r0, sl
 800de74:	f7ff fdac 	bl	800d9d0 <memcpy.isra.0>
 800de78:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800de7a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800de7c:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800de80:	8722      	strh	r2, [r4, #56]	; 0x38
 800de82:	6962      	ldr	r2, [r4, #20]
 800de84:	4443      	add	r3, r8
 800de86:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800de8a:	6363      	str	r3, [r4, #52]	; 0x34
 800de8c:	2310      	movs	r3, #16
 800de8e:	4457      	add	r7, sl
 800de90:	4818      	ldr	r0, [pc, #96]	; (800def4 <tcp_handle+0x2bc>)
 800de92:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800de96:	a901      	add	r1, sp, #4
 800de98:	f88d 300c 	strb.w	r3, [sp, #12]
 800de9c:	f7ff fdc8 	bl	800da30 <_tcp_send_package>
 800dea0:	f8ba 3000 	ldrh.w	r3, [sl]
 800dea4:	3301      	adds	r3, #1
 800dea6:	f003 0301 	and.w	r3, r3, #1
 800deaa:	f8aa 3000 	strh.w	r3, [sl]
 800deae:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800deb2:	2b02      	cmp	r3, #2
 800deb4:	f67f af29 	bls.w	800dd0a <tcp_handle+0xd2>
 800deb8:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800debc:	07db      	lsls	r3, r3, #31
 800debe:	f57f af24 	bpl.w	800dd0a <tcp_handle+0xd2>
 800dec2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dec4:	6962      	ldr	r2, [r4, #20]
 800dec6:	3301      	adds	r3, #1
 800dec8:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800decc:	6363      	str	r3, [r4, #52]	; 0x34
 800dece:	2310      	movs	r3, #16
 800ded0:	4808      	ldr	r0, [pc, #32]	; (800def4 <tcp_handle+0x2bc>)
 800ded2:	a901      	add	r1, sp, #4
 800ded4:	f88d 300c 	strb.w	r3, [sp, #12]
 800ded8:	f7ff fdaa 	bl	800da30 <_tcp_send_package>
 800dedc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dee0:	2b05      	cmp	r3, #5
 800dee2:	d054      	beq.n	800df8e <tcp_handle+0x356>
 800dee4:	d84e      	bhi.n	800df84 <tcp_handle+0x34c>
 800dee6:	3b03      	subs	r3, #3
 800dee8:	2b01      	cmp	r3, #1
 800deea:	f63f af0e 	bhi.w	800dd0a <tcp_handle+0xd2>
 800deee:	2307      	movs	r3, #7
 800def0:	e73a      	b.n	800dd68 <tcp_handle+0x130>
 800def2:	bf00      	nop
 800def4:	20002344 	andcs	r2, r0, r4, asr #6
 800def8:	2000234c 	andcs	r2, r0, ip, asr #6
 800defc:	200017d4 	ldrdcs	r1, [r0], -r4
 800df00:	6923      	ldr	r3, [r4, #16]
 800df02:	1b99      	subs	r1, r3, r6
 800df04:	d513      	bpl.n	800df2e <tcp_handle+0x2f6>
 800df06:	6962      	ldr	r2, [r4, #20]
 800df08:	1ab2      	subs	r2, r6, r2
 800df0a:	2a00      	cmp	r2, #0
 800df0c:	dc0f      	bgt.n	800df2e <tcp_handle+0x2f6>
 800df0e:	6126      	str	r6, [r4, #16]
 800df10:	6a23      	ldr	r3, [r4, #32]
 800df12:	1bda      	subs	r2, r3, r7
 800df14:	2a00      	cmp	r2, #0
 800df16:	db05      	blt.n	800df24 <tcp_handle+0x2ec>
 800df18:	42bb      	cmp	r3, r7
 800df1a:	d192      	bne.n	800de42 <tcp_handle+0x20a>
 800df1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800df1e:	1b9b      	subs	r3, r3, r6
 800df20:	2b00      	cmp	r3, #0
 800df22:	dc8e      	bgt.n	800de42 <tcp_handle+0x20a>
 800df24:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800df28:	f8c4 a018 	str.w	sl, [r4, #24]
 800df2c:	e789      	b.n	800de42 <tcp_handle+0x20a>
 800df2e:	1af3      	subs	r3, r6, r3
 800df30:	2b00      	cmp	r3, #0
 800df32:	dc06      	bgt.n	800df42 <tcp_handle+0x30a>
 800df34:	2900      	cmp	r1, #0
 800df36:	dc84      	bgt.n	800de42 <tcp_handle+0x20a>
 800df38:	6963      	ldr	r3, [r4, #20]
 800df3a:	1af3      	subs	r3, r6, r3
 800df3c:	2b00      	cmp	r3, #0
 800df3e:	dc80      	bgt.n	800de42 <tcp_handle+0x20a>
 800df40:	e7e6      	b.n	800df10 <tcp_handle+0x2d8>
 800df42:	6963      	ldr	r3, [r4, #20]
 800df44:	1b9a      	subs	r2, r3, r6
 800df46:	2a00      	cmp	r2, #0
 800df48:	f6bf af7b 	bge.w	800de42 <tcp_handle+0x20a>
 800df4c:	e744      	b.n	800ddd8 <tcp_handle+0x1a0>
 800df4e:	6963      	ldr	r3, [r4, #20]
 800df50:	42b3      	cmp	r3, r6
 800df52:	f47f af76 	bne.w	800de42 <tcp_handle+0x20a>
 800df56:	8821      	ldrh	r1, [r4, #0]
 800df58:	480f      	ldr	r0, [pc, #60]	; (800df98 <tcp_handle+0x360>)
 800df5a:	f7ff fd1f 	bl	800d99c <_init_tcb>
 800df5e:	e770      	b.n	800de42 <tcp_handle+0x20a>
 800df60:	6963      	ldr	r3, [r4, #20]
 800df62:	42b3      	cmp	r3, r6
 800df64:	f47f af6d 	bne.w	800de42 <tcp_handle+0x20a>
 800df68:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800df6a:	480b      	ldr	r0, [pc, #44]	; (800df98 <tcp_handle+0x360>)
 800df6c:	9302      	str	r3, [sp, #8]
 800df6e:	2310      	movs	r3, #16
 800df70:	a901      	add	r1, sp, #4
 800df72:	9601      	str	r6, [sp, #4]
 800df74:	f88d 300c 	strb.w	r3, [sp, #12]
 800df78:	f7ff fd5a 	bl	800da30 <_tcp_send_package>
 800df7c:	e761      	b.n	800de42 <tcp_handle+0x20a>
 800df7e:	6962      	ldr	r2, [r4, #20]
 800df80:	9201      	str	r2, [sp, #4]
 800df82:	e72b      	b.n	800dddc <tcp_handle+0x1a4>
 800df84:	2b06      	cmp	r3, #6
 800df86:	f47f aec0 	bne.w	800dd0a <tcp_handle+0xd2>
 800df8a:	230a      	movs	r3, #10
 800df8c:	e6ec      	b.n	800dd68 <tcp_handle+0x130>
 800df8e:	6963      	ldr	r3, [r4, #20]
 800df90:	42b3      	cmp	r3, r6
 800df92:	d0fa      	beq.n	800df8a <tcp_handle+0x352>
 800df94:	2308      	movs	r3, #8
 800df96:	e6e7      	b.n	800dd68 <tcp_handle+0x130>
 800df98:	20002344 	andcs	r2, r0, r4, asr #6

0800df9c <tcp_begin>:
 800df9c:	b508      	push	{r3, lr}
 800df9e:	4b0a      	ldr	r3, [pc, #40]	; (800dfc8 <tcp_begin+0x2c>)
 800dfa0:	4601      	mov	r1, r0
 800dfa2:	881a      	ldrh	r2, [r3, #0]
 800dfa4:	4282      	cmp	r2, r0
 800dfa6:	d102      	bne.n	800dfae <tcp_begin+0x12>
 800dfa8:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800dfac:	b130      	cbz	r0, 800dfbc <tcp_begin+0x20>
 800dfae:	b12a      	cbz	r2, 800dfbc <tcp_begin+0x20>
 800dfb0:	4806      	ldr	r0, [pc, #24]	; (800dfcc <tcp_begin+0x30>)
 800dfb2:	f002 fddf 	bl	8010b74 <console_error>
 800dfb6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dfba:	bd08      	pop	{r3, pc}
 800dfbc:	4802      	ldr	r0, [pc, #8]	; (800dfc8 <tcp_begin+0x2c>)
 800dfbe:	8019      	strh	r1, [r3, #0]
 800dfc0:	f7ff fcec 	bl	800d99c <_init_tcb>
 800dfc4:	2000      	movs	r0, #0
 800dfc6:	e7f8      	b.n	800dfba <tcp_begin+0x1e>
 800dfc8:	20002344 	andcs	r2, r0, r4, asr #6
 800dfcc:	08014629 	stmdaeq	r1, {r0, r3, r5, r9, sl, lr}

0800dfd0 <tcp_write>:
 800dfd0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800dfd4:	429a      	cmp	r2, r3
 800dfd6:	bf28      	it	cs
 800dfd8:	461a      	movcs	r2, r3
 800dfda:	2344      	movs	r3, #68	; 0x44
 800dfdc:	b530      	push	{r4, r5, lr}
 800dfde:	4c0d      	ldr	r4, [pc, #52]	; (800e014 <tcp_write+0x44>)
 800dfe0:	b085      	sub	sp, #20
 800dfe2:	fb03 4400 	mla	r4, r3, r0, r4
 800dfe6:	6963      	ldr	r3, [r4, #20]
 800dfe8:	4615      	mov	r5, r2
 800dfea:	9301      	str	r3, [sp, #4]
 800dfec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dfee:	62e1      	str	r1, [r4, #44]	; 0x2c
 800dff0:	9302      	str	r3, [sp, #8]
 800dff2:	2318      	movs	r3, #24
 800dff4:	8622      	strh	r2, [r4, #48]	; 0x30
 800dff6:	4620      	mov	r0, r4
 800dff8:	a901      	add	r1, sp, #4
 800dffa:	f88d 300c 	strb.w	r3, [sp, #12]
 800dffe:	f7ff fd17 	bl	800da30 <_tcp_send_package>
 800e002:	2300      	movs	r3, #0
 800e004:	6962      	ldr	r2, [r4, #20]
 800e006:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e008:	442a      	add	r2, r5
 800e00a:	8623      	strh	r3, [r4, #48]	; 0x30
 800e00c:	6162      	str	r2, [r4, #20]
 800e00e:	b005      	add	sp, #20
 800e010:	bd30      	pop	{r4, r5, pc}
 800e012:	bf00      	nop
 800e014:	20002344 	andcs	r2, r0, r4, asr #6

0800e018 <tcp_read>:
 800e018:	2344      	movs	r3, #68	; 0x44
 800e01a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e01c:	4c1c      	ldr	r4, [pc, #112]	; (800e090 <tcp_read+0x78>)
 800e01e:	b085      	sub	sp, #20
 800e020:	fb03 4400 	mla	r4, r3, r0, r4
 800e024:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e028:	2b07      	cmp	r3, #7
 800e02a:	d112      	bne.n	800e052 <tcp_read+0x3a>
 800e02c:	6963      	ldr	r3, [r4, #20]
 800e02e:	4620      	mov	r0, r4
 800e030:	9301      	str	r3, [sp, #4]
 800e032:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e034:	a901      	add	r1, sp, #4
 800e036:	9302      	str	r3, [sp, #8]
 800e038:	2311      	movs	r3, #17
 800e03a:	f88d 300c 	strb.w	r3, [sp, #12]
 800e03e:	f7ff fcf7 	bl	800da30 <_tcp_send_package>
 800e042:	2309      	movs	r3, #9
 800e044:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800e048:	6963      	ldr	r3, [r4, #20]
 800e04a:	3301      	adds	r3, #1
 800e04c:	6163      	str	r3, [r4, #20]
 800e04e:	2000      	movs	r0, #0
 800e050:	e01b      	b.n	800e08a <tcp_read+0x72>
 800e052:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800e056:	4358      	muls	r0, r3
 800e058:	4a0e      	ldr	r2, [pc, #56]	; (800e094 <tcp_read+0x7c>)
 800e05a:	1817      	adds	r7, r2, r0
 800e05c:	887b      	ldrh	r3, [r7, #2]
 800e05e:	5a15      	ldrh	r5, [r2, r0]
 800e060:	429d      	cmp	r5, r3
 800e062:	d0f4      	beq.n	800e04e <tcp_read+0x36>
 800e064:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800e068:	435d      	muls	r5, r3
 800e06a:	1d06      	adds	r6, r0, #4
 800e06c:	442e      	add	r6, r5
 800e06e:	4416      	add	r6, r2
 800e070:	4428      	add	r0, r5
 800e072:	600e      	str	r6, [r1, #0]
 800e074:	4402      	add	r2, r0
 800e076:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800e07a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e07c:	3301      	adds	r3, #1
 800e07e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800e082:	f003 0301 	and.w	r3, r3, #1
 800e086:	8722      	strh	r2, [r4, #56]	; 0x38
 800e088:	807b      	strh	r3, [r7, #2]
 800e08a:	b005      	add	sp, #20
 800e08c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e08e:	bf00      	nop
 800e090:	20002344 	andcs	r2, r0, r4, asr #6
 800e094:	200017d4 	ldrdcs	r1, [r0], -r4

0800e098 <memcpy.isra.0>:
 800e098:	3801      	subs	r0, #1
 800e09a:	440a      	add	r2, r1
 800e09c:	4291      	cmp	r1, r2
 800e09e:	d100      	bne.n	800e0a2 <memcpy.isra.0+0xa>
 800e0a0:	4770      	bx	lr
 800e0a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e0a6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e0aa:	e7f7      	b.n	800e09c <memcpy.isra.0+0x4>

0800e0ac <net_memcpy>:
 800e0ac:	ea41 0300 	orr.w	r3, r1, r0
 800e0b0:	079b      	lsls	r3, r3, #30
 800e0b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0b4:	d115      	bne.n	800e0e2 <net_memcpy+0x36>
 800e0b6:	f022 0303 	bic.w	r3, r2, #3
 800e0ba:	1f04      	subs	r4, r0, #4
 800e0bc:	0895      	lsrs	r5, r2, #2
 800e0be:	18ce      	adds	r6, r1, r3
 800e0c0:	42b1      	cmp	r1, r6
 800e0c2:	d109      	bne.n	800e0d8 <net_memcpy+0x2c>
 800e0c4:	f06f 0403 	mvn.w	r4, #3
 800e0c8:	fb04 2205 	mla	r2, r4, r5, r2
 800e0cc:	4403      	add	r3, r0
 800e0ce:	3b01      	subs	r3, #1
 800e0d0:	440a      	add	r2, r1
 800e0d2:	4291      	cmp	r1, r2
 800e0d4:	d107      	bne.n	800e0e6 <net_memcpy+0x3a>
 800e0d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0d8:	f851 7b04 	ldr.w	r7, [r1], #4
 800e0dc:	f844 7f04 	str.w	r7, [r4, #4]!
 800e0e0:	e7ee      	b.n	800e0c0 <net_memcpy+0x14>
 800e0e2:	4603      	mov	r3, r0
 800e0e4:	e7f3      	b.n	800e0ce <net_memcpy+0x22>
 800e0e6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e0ea:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e0ee:	e7f0      	b.n	800e0d2 <net_memcpy+0x26>

0800e0f0 <udp_set_ip>:
 800e0f0:	2204      	movs	r2, #4
 800e0f2:	b513      	push	{r0, r1, r4, lr}
 800e0f4:	4604      	mov	r4, r0
 800e0f6:	6803      	ldr	r3, [r0, #0]
 800e0f8:	eb0d 0102 	add.w	r1, sp, r2
 800e0fc:	4808      	ldr	r0, [pc, #32]	; (800e120 <udp_set_ip+0x30>)
 800e0fe:	9301      	str	r3, [sp, #4]
 800e100:	f7ff ffca 	bl	800e098 <memcpy.isra.0>
 800e104:	6862      	ldr	r2, [r4, #4]
 800e106:	4b07      	ldr	r3, [pc, #28]	; (800e124 <udp_set_ip+0x34>)
 800e108:	43d1      	mvns	r1, r2
 800e10a:	6019      	str	r1, [r3, #0]
 800e10c:	6823      	ldr	r3, [r4, #0]
 800e10e:	4013      	ands	r3, r2
 800e110:	4a05      	ldr	r2, [pc, #20]	; (800e128 <udp_set_ip+0x38>)
 800e112:	6013      	str	r3, [r2, #0]
 800e114:	68a2      	ldr	r2, [r4, #8]
 800e116:	4b05      	ldr	r3, [pc, #20]	; (800e12c <udp_set_ip+0x3c>)
 800e118:	601a      	str	r2, [r3, #0]
 800e11a:	b002      	add	sp, #8
 800e11c:	bd10      	pop	{r4, pc}
 800e11e:	bf00      	nop
 800e120:	2000865e 	andcs	r8, r0, lr, asr r6
 800e124:	20002974 	andcs	r2, r0, r4, ror r9
 800e128:	2000297c 	andcs	r2, r0, ip, ror r9
 800e12c:	20002978 	andcs	r2, r0, r8, ror r9

0800e130 <udp_init>:
 800e130:	b570      	push	{r4, r5, r6, lr}
 800e132:	2200      	movs	r2, #0
 800e134:	2508      	movs	r5, #8
 800e136:	460e      	mov	r6, r1
 800e138:	4b12      	ldr	r3, [pc, #72]	; (800e184 <udp_init+0x54>)
 800e13a:	4913      	ldr	r1, [pc, #76]	; (800e188 <udp_init+0x58>)
 800e13c:	3d01      	subs	r5, #1
 800e13e:	801a      	strh	r2, [r3, #0]
 800e140:	805a      	strh	r2, [r3, #2]
 800e142:	f841 2b04 	str.w	r2, [r1], #4
 800e146:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800e14a:	d1f7      	bne.n	800e13c <udp_init+0xc>
 800e14c:	2206      	movs	r2, #6
 800e14e:	4c0f      	ldr	r4, [pc, #60]	; (800e18c <udp_init+0x5c>)
 800e150:	4b0f      	ldr	r3, [pc, #60]	; (800e190 <udp_init+0x60>)
 800e152:	4601      	mov	r1, r0
 800e154:	18a0      	adds	r0, r4, r2
 800e156:	801d      	strh	r5, [r3, #0]
 800e158:	f7ff ff9e 	bl	800e098 <memcpy.isra.0>
 800e15c:	2308      	movs	r3, #8
 800e15e:	7323      	strb	r3, [r4, #12]
 800e160:	2345      	movs	r3, #69	; 0x45
 800e162:	73a3      	strb	r3, [r4, #14]
 800e164:	2340      	movs	r3, #64	; 0x40
 800e166:	7523      	strb	r3, [r4, #20]
 800e168:	75a3      	strb	r3, [r4, #22]
 800e16a:	2311      	movs	r3, #17
 800e16c:	4630      	mov	r0, r6
 800e16e:	7365      	strb	r5, [r4, #13]
 800e170:	73e5      	strb	r5, [r4, #15]
 800e172:	7565      	strb	r5, [r4, #21]
 800e174:	75e3      	strb	r3, [r4, #23]
 800e176:	f7ff ffbb 	bl	800e0f0 <udp_set_ip>
 800e17a:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 800e17e:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800e182:	bd70      	pop	{r4, r5, r6, pc}
 800e184:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e188:	20002984 	andcs	r2, r0, r4, lsl #19
 800e18c:	20008644 	andcs	r8, r0, r4, asr #12
 800e190:	20002980 	andcs	r2, r0, r0, lsl #19

0800e194 <udp_shutdown>:
 800e194:	4770      	bx	lr
	...

0800e198 <udp_handle>:
 800e198:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e19c:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800e19e:	4607      	mov	r7, r0
 800e1a0:	ba5b      	rev16	r3, r3
 800e1a2:	b29b      	uxth	r3, r3
 800e1a4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800e1a8:	2a01      	cmp	r2, #1
 800e1aa:	d904      	bls.n	800e1b6 <udp_handle+0x1e>
 800e1ac:	2b7b      	cmp	r3, #123	; 0x7b
 800e1ae:	d002      	beq.n	800e1b6 <udp_handle+0x1e>
 800e1b0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e1b4:	d308      	bcc.n	800e1c8 <udp_handle+0x30>
 800e1b6:	2400      	movs	r4, #0
 800e1b8:	4a1f      	ldr	r2, [pc, #124]	; (800e238 <udp_handle+0xa0>)
 800e1ba:	f852 1b04 	ldr.w	r1, [r2], #4
 800e1be:	4299      	cmp	r1, r3
 800e1c0:	d005      	beq.n	800e1ce <udp_handle+0x36>
 800e1c2:	3401      	adds	r4, #1
 800e1c4:	2c08      	cmp	r4, #8
 800e1c6:	d1f8      	bne.n	800e1ba <udp_handle+0x22>
 800e1c8:	b002      	add	sp, #8
 800e1ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1ce:	f640 3394 	movw	r3, #2964	; 0xb94
 800e1d2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800e1d4:	435c      	muls	r4, r3
 800e1d6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800e1da:	ba76      	rev16	r6, r6
 800e1dc:	3e08      	subs	r6, #8
 800e1de:	b2b6      	uxth	r6, r6
 800e1e0:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800e1e4:	bf28      	it	cs
 800e1e6:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800e1ea:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800e23c <udp_handle+0xa4>
 800e1ee:	1d20      	adds	r0, r4, #4
 800e1f0:	f838 5004 	ldrh.w	r5, [r8, r4]
 800e1f4:	4632      	mov	r2, r6
 800e1f6:	435d      	muls	r5, r3
 800e1f8:	4428      	add	r0, r5
 800e1fa:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800e1fe:	4440      	add	r0, r8
 800e200:	f7ff ff4a 	bl	800e098 <memcpy.isra.0>
 800e204:	2204      	movs	r2, #4
 800e206:	f107 011a 	add.w	r1, r7, #26
 800e20a:	eb0d 0002 	add.w	r0, sp, r2
 800e20e:	f7ff ff43 	bl	800e098 <memcpy.isra.0>
 800e212:	9a01      	ldr	r2, [sp, #4]
 800e214:	192b      	adds	r3, r5, r4
 800e216:	4443      	add	r3, r8
 800e218:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800e21c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800e21e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800e222:	ba52      	rev16	r2, r2
 800e224:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800e228:	f838 3004 	ldrh.w	r3, [r8, r4]
 800e22c:	3301      	adds	r3, #1
 800e22e:	f003 0301 	and.w	r3, r3, #1
 800e232:	f828 3004 	strh.w	r3, [r8, r4]
 800e236:	e7c7      	b.n	800e1c8 <udp_handle+0x30>
 800e238:	20002984 	andcs	r2, r0, r4, lsl #19
 800e23c:	200029a4 	andcs	r2, r0, r4, lsr #19

0800e240 <udp_bind>:
 800e240:	4a0a      	ldr	r2, [pc, #40]	; (800e26c <udp_bind+0x2c>)
 800e242:	4603      	mov	r3, r0
 800e244:	b510      	push	{r4, lr}
 800e246:	2000      	movs	r0, #0
 800e248:	4614      	mov	r4, r2
 800e24a:	f852 1b04 	ldr.w	r1, [r2], #4
 800e24e:	4299      	cmp	r1, r3
 800e250:	d008      	beq.n	800e264 <udp_bind+0x24>
 800e252:	b141      	cbz	r1, 800e266 <udp_bind+0x26>
 800e254:	3001      	adds	r0, #1
 800e256:	2808      	cmp	r0, #8
 800e258:	d1f7      	bne.n	800e24a <udp_bind+0xa>
 800e25a:	4805      	ldr	r0, [pc, #20]	; (800e270 <udp_bind+0x30>)
 800e25c:	f002 fc8a 	bl	8010b74 <console_error>
 800e260:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e264:	bd10      	pop	{r4, pc}
 800e266:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800e26a:	e7fb      	b.n	800e264 <udp_bind+0x24>
 800e26c:	20002984 	andcs	r2, r0, r4, lsl #19
 800e270:	08014649 	stmdaeq	r1, {r0, r3, r6, r9, sl, lr}

0800e274 <udp_unbind>:
 800e274:	4a0c      	ldr	r2, [pc, #48]	; (800e2a8 <udp_unbind+0x34>)
 800e276:	2300      	movs	r3, #0
 800e278:	4611      	mov	r1, r2
 800e27a:	b510      	push	{r4, lr}
 800e27c:	f852 4b04 	ldr.w	r4, [r2], #4
 800e280:	4284      	cmp	r4, r0
 800e282:	d108      	bne.n	800e296 <udp_unbind+0x22>
 800e284:	2000      	movs	r0, #0
 800e286:	f640 3294 	movw	r2, #2964	; 0xb94
 800e28a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800e28e:	4353      	muls	r3, r2
 800e290:	4a06      	ldr	r2, [pc, #24]	; (800e2ac <udp_unbind+0x38>)
 800e292:	5098      	str	r0, [r3, r2]
 800e294:	bd10      	pop	{r4, pc}
 800e296:	3301      	adds	r3, #1
 800e298:	2b08      	cmp	r3, #8
 800e29a:	d1ef      	bne.n	800e27c <udp_unbind+0x8>
 800e29c:	4804      	ldr	r0, [pc, #16]	; (800e2b0 <udp_unbind+0x3c>)
 800e29e:	f002 fc69 	bl	8010b74 <console_error>
 800e2a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e2a6:	e7f5      	b.n	800e294 <udp_unbind+0x20>
 800e2a8:	20002984 	andcs	r2, r0, r4, lsl #19
 800e2ac:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e2b0:	0801464e 	stmdaeq	r1, {r1, r2, r3, r6, r9, sl, lr}

0800e2b4 <udp_recv>:
 800e2b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2b8:	4604      	mov	r4, r0
 800e2ba:	4698      	mov	r8, r3
 800e2bc:	f640 3394 	movw	r3, #2964	; 0xb94
 800e2c0:	435c      	muls	r4, r3
 800e2c2:	4608      	mov	r0, r1
 800e2c4:	4915      	ldr	r1, [pc, #84]	; (800e31c <udp_recv+0x68>)
 800e2c6:	190f      	adds	r7, r1, r4
 800e2c8:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800e2cc:	5b0b      	ldrh	r3, [r1, r4]
 800e2ce:	4563      	cmp	r3, ip
 800e2d0:	d021      	beq.n	800e316 <udp_recv+0x62>
 800e2d2:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800e2d6:	fb03 fc0c 	mul.w	ip, r3, ip
 800e2da:	eb0c 0604 	add.w	r6, ip, r4
 800e2de:	440e      	add	r6, r1
 800e2e0:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800e2e4:	3404      	adds	r4, #4
 800e2e6:	4295      	cmp	r5, r2
 800e2e8:	bf28      	it	cs
 800e2ea:	4615      	movcs	r5, r2
 800e2ec:	4464      	add	r4, ip
 800e2ee:	462a      	mov	r2, r5
 800e2f0:	4421      	add	r1, r4
 800e2f2:	f7ff fedb 	bl	800e0ac <net_memcpy>
 800e2f6:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800e2fa:	f8c8 3000 	str.w	r3, [r8]
 800e2fe:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800e302:	9b06      	ldr	r3, [sp, #24]
 800e304:	801a      	strh	r2, [r3, #0]
 800e306:	887b      	ldrh	r3, [r7, #2]
 800e308:	3301      	adds	r3, #1
 800e30a:	f003 0301 	and.w	r3, r3, #1
 800e30e:	807b      	strh	r3, [r7, #2]
 800e310:	4628      	mov	r0, r5
 800e312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e316:	2500      	movs	r5, #0
 800e318:	e7fa      	b.n	800e310 <udp_recv+0x5c>
 800e31a:	bf00      	nop
 800e31c:	200029a4 	andcs	r2, r0, r4, lsr #19

0800e320 <udp_recv2>:
 800e320:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e322:	f640 3594 	movw	r5, #2964	; 0xb94
 800e326:	4368      	muls	r0, r5
 800e328:	4c0f      	ldr	r4, [pc, #60]	; (800e368 <udp_recv2+0x48>)
 800e32a:	1827      	adds	r7, r4, r0
 800e32c:	887d      	ldrh	r5, [r7, #2]
 800e32e:	5a26      	ldrh	r6, [r4, r0]
 800e330:	42ae      	cmp	r6, r5
 800e332:	d017      	beq.n	800e364 <udp_recv2+0x44>
 800e334:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800e338:	fb0c f505 	mul.w	r5, ip, r5
 800e33c:	1d06      	adds	r6, r0, #4
 800e33e:	442e      	add	r6, r5
 800e340:	4405      	add	r5, r0
 800e342:	4426      	add	r6, r4
 800e344:	442c      	add	r4, r5
 800e346:	600e      	str	r6, [r1, #0]
 800e348:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800e34c:	6011      	str	r1, [r2, #0]
 800e34e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800e352:	801a      	strh	r2, [r3, #0]
 800e354:	887b      	ldrh	r3, [r7, #2]
 800e356:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800e35a:	3301      	adds	r3, #1
 800e35c:	f003 0301 	and.w	r3, r3, #1
 800e360:	807b      	strh	r3, [r7, #2]
 800e362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e364:	2000      	movs	r0, #0
 800e366:	e7fc      	b.n	800e362 <udp_recv2+0x42>
 800e368:	200029a4 	andcs	r2, r0, r4, lsr #19

0800e36c <udp_send>:
 800e36c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e370:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800e4a8 <udp_send+0x13c>
 800e374:	461c      	mov	r4, r3
 800e376:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800e37a:	4607      	mov	r7, r0
 800e37c:	4688      	mov	r8, r1
 800e37e:	4616      	mov	r6, r2
 800e380:	2b00      	cmp	r3, #0
 800e382:	f000 808e 	beq.w	800e4a2 <udp_send+0x136>
 800e386:	1c63      	adds	r3, r4, #1
 800e388:	d144      	bne.n	800e414 <udp_send+0xa8>
 800e38a:	4848      	ldr	r0, [pc, #288]	; (800e4ac <udp_send+0x140>)
 800e38c:	2107      	movs	r1, #7
 800e38e:	4602      	mov	r2, r0
 800e390:	23ff      	movs	r3, #255	; 0xff
 800e392:	e001      	b.n	800e398 <udp_send+0x2c>
 800e394:	f800 3b01 	strb.w	r3, [r0], #1
 800e398:	3901      	subs	r1, #1
 800e39a:	d1fb      	bne.n	800e394 <udp_send+0x28>
 800e39c:	7793      	strb	r3, [r2, #30]
 800e39e:	77d3      	strb	r3, [r2, #31]
 800e3a0:	f882 3020 	strb.w	r3, [r2, #32]
 800e3a4:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 800e3a8:	2500      	movs	r5, #0
 800e3aa:	f8df a104 	ldr.w	sl, [pc, #260]	; 800e4b0 <udp_send+0x144>
 800e3ae:	4c3f      	ldr	r4, [pc, #252]	; (800e4ac <udp_send+0x140>)
 800e3b0:	f8ba 3000 	ldrh.w	r3, [sl]
 800e3b4:	2114      	movs	r1, #20
 800e3b6:	8263      	strh	r3, [r4, #18]
 800e3b8:	f106 031c 	add.w	r3, r6, #28
 800e3bc:	ba5b      	rev16	r3, r3
 800e3be:	f104 000e 	add.w	r0, r4, #14
 800e3c2:	8223      	strh	r3, [r4, #16]
 800e3c4:	7625      	strb	r5, [r4, #24]
 800e3c6:	7665      	strb	r5, [r4, #25]
 800e3c8:	f001 fdc2 	bl	800ff50 <net_chksum>
 800e3cc:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800e3d0:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800e3d4:	ba5b      	rev16	r3, r3
 800e3d6:	8463      	strh	r3, [r4, #34]	; 0x22
 800e3d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800e3dc:	4632      	mov	r2, r6
 800e3de:	ba5b      	rev16	r3, r3
 800e3e0:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e3e2:	f106 0308 	add.w	r3, r6, #8
 800e3e6:	ba5b      	rev16	r3, r3
 800e3e8:	bf28      	it	cs
 800e3ea:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800e3ee:	4641      	mov	r1, r8
 800e3f0:	8320      	strh	r0, [r4, #24]
 800e3f2:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e3f6:	84e3      	strh	r3, [r4, #38]	; 0x26
 800e3f8:	f7ff fe58 	bl	800e0ac <net_memcpy>
 800e3fc:	4620      	mov	r0, r4
 800e3fe:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800e402:	f003 fc57 	bl	8011cb4 <emac_eth_send>
 800e406:	f8ba 3000 	ldrh.w	r3, [sl]
 800e40a:	4628      	mov	r0, r5
 800e40c:	3301      	adds	r3, #1
 800e40e:	f8aa 3000 	strh.w	r3, [sl]
 800e412:	e037      	b.n	800e484 <udp_send+0x118>
 800e414:	4b27      	ldr	r3, [pc, #156]	; (800e4b4 <udp_send+0x148>)
 800e416:	681b      	ldr	r3, [r3, #0]
 800e418:	43a3      	bics	r3, r4
 800e41a:	d10f      	bne.n	800e43c <udp_send+0xd0>
 800e41c:	2307      	movs	r3, #7
 800e41e:	21ff      	movs	r1, #255	; 0xff
 800e420:	4a22      	ldr	r2, [pc, #136]	; (800e4ac <udp_send+0x140>)
 800e422:	e001      	b.n	800e428 <udp_send+0xbc>
 800e424:	f802 1b01 	strb.w	r1, [r2], #1
 800e428:	3b01      	subs	r3, #1
 800e42a:	d1fb      	bne.n	800e424 <udp_send+0xb8>
 800e42c:	2204      	movs	r2, #4
 800e42e:	4822      	ldr	r0, [pc, #136]	; (800e4b8 <udp_send+0x14c>)
 800e430:	eb0d 0102 	add.w	r1, sp, r2
 800e434:	9401      	str	r4, [sp, #4]
 800e436:	f7ff fe2f 	bl	800e098 <memcpy.isra.0>
 800e43a:	e7b5      	b.n	800e3a8 <udp_send+0x3c>
 800e43c:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800e440:	2be0      	cmp	r3, #224	; 0xe0
 800e442:	d10e      	bne.n	800e462 <udp_send+0xf6>
 800e444:	491d      	ldr	r1, [pc, #116]	; (800e4bc <udp_send+0x150>)
 800e446:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800e44a:	70cb      	strb	r3, [r1, #3]
 800e44c:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e450:	710b      	strb	r3, [r1, #4]
 800e452:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800e456:	2206      	movs	r2, #6
 800e458:	4814      	ldr	r0, [pc, #80]	; (800e4ac <udp_send+0x140>)
 800e45a:	714b      	strb	r3, [r1, #5]
 800e45c:	f7ff fe1c 	bl	800e098 <memcpy.isra.0>
 800e460:	e7e4      	b.n	800e42c <udp_send+0xc0>
 800e462:	4b17      	ldr	r3, [pc, #92]	; (800e4c0 <udp_send+0x154>)
 800e464:	681b      	ldr	r3, [r3, #0]
 800e466:	43a3      	bics	r3, r4
 800e468:	d00f      	beq.n	800e48a <udp_send+0x11e>
 800e46a:	4d16      	ldr	r5, [pc, #88]	; (800e4c4 <udp_send+0x158>)
 800e46c:	490f      	ldr	r1, [pc, #60]	; (800e4ac <udp_send+0x140>)
 800e46e:	6828      	ldr	r0, [r5, #0]
 800e470:	f001 f938 	bl	800f6e4 <arp_cache_lookup>
 800e474:	682b      	ldr	r3, [r5, #0]
 800e476:	4298      	cmp	r0, r3
 800e478:	d0d8      	beq.n	800e42c <udp_send+0xc0>
 800e47a:	4813      	ldr	r0, [pc, #76]	; (800e4c8 <udp_send+0x15c>)
 800e47c:	f002 fb7a 	bl	8010b74 <console_error>
 800e480:	f06f 0002 	mvn.w	r0, #2
 800e484:	b002      	add	sp, #8
 800e486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e48a:	4620      	mov	r0, r4
 800e48c:	4907      	ldr	r1, [pc, #28]	; (800e4ac <udp_send+0x140>)
 800e48e:	f001 f929 	bl	800f6e4 <arp_cache_lookup>
 800e492:	42a0      	cmp	r0, r4
 800e494:	d0ca      	beq.n	800e42c <udp_send+0xc0>
 800e496:	480d      	ldr	r0, [pc, #52]	; (800e4cc <udp_send+0x160>)
 800e498:	f002 fb6c 	bl	8010b74 <console_error>
 800e49c:	f06f 0001 	mvn.w	r0, #1
 800e4a0:	e7f0      	b.n	800e484 <udp_send+0x118>
 800e4a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e4a6:	e7ed      	b.n	800e484 <udp_send+0x118>
 800e4a8:	20002984 	andcs	r2, r0, r4, lsl #19
 800e4ac:	20008644 	andcs	r8, r0, r4, asr #12
 800e4b0:	20002980 	andcs	r2, r0, r0, lsl #19
 800e4b4:	20002974 	andcs	r2, r0, r4, ror r9
 800e4b8:	20008662 	andcs	r8, r0, r2, ror #12
 800e4bc:	20000000 	andcs	r0, r0, r0
 800e4c0:	2000297c 	andcs	r2, r0, ip, ror r9
 800e4c4:	20002978 	andcs	r2, r0, r8, ror r9
 800e4c8:	08014656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, lr}
 800e4cc:	0801467c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, lr}

0800e4d0 <strlen>:
 800e4d0:	4603      	mov	r3, r0
 800e4d2:	461a      	mov	r2, r3
 800e4d4:	7811      	ldrb	r1, [r2, #0]
 800e4d6:	3301      	adds	r3, #1
 800e4d8:	2900      	cmp	r1, #0
 800e4da:	d1fa      	bne.n	800e4d2 <strlen+0x2>
 800e4dc:	1a10      	subs	r0, r2, r0
 800e4de:	4770      	bx	lr

0800e4e0 <strcmp>:
 800e4e0:	1e43      	subs	r3, r0, #1
 800e4e2:	3901      	subs	r1, #1
 800e4e4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e4e8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e4ec:	4290      	cmp	r0, r2
 800e4ee:	d102      	bne.n	800e4f6 <strcmp+0x16>
 800e4f0:	2800      	cmp	r0, #0
 800e4f2:	d1f7      	bne.n	800e4e4 <strcmp+0x4>
 800e4f4:	4770      	bx	lr
 800e4f6:	1a80      	subs	r0, r0, r2
 800e4f8:	4770      	bx	lr

0800e4fa <strcpy.isra.0>:
 800e4fa:	3801      	subs	r0, #1
 800e4fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e500:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e504:	2b00      	cmp	r3, #0
 800e506:	d1f9      	bne.n	800e4fc <strcpy.isra.0+0x2>
 800e508:	4770      	bx	lr

0800e50a <strcat.isra.0>:
 800e50a:	b538      	push	{r3, r4, r5, lr}
 800e50c:	4604      	mov	r4, r0
 800e50e:	460d      	mov	r5, r1
 800e510:	f7ff ffde 	bl	800e4d0 <strlen>
 800e514:	4629      	mov	r1, r5
 800e516:	4420      	add	r0, r4
 800e518:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e51c:	f7ff bfed 	b.w	800e4fa <strcpy.isra.0>

0800e520 <MDNS::MDNS()>:
 800e520:	b513      	push	{r0, r1, r4, lr}
 800e522:	4604      	mov	r4, r0
 800e524:	a901      	add	r1, sp, #4
 800e526:	4804      	ldr	r0, [pc, #16]	; (800e538 <MDNS::MDNS()+0x18>)
 800e528:	f002 fc6e 	bl	8010e08 <inet_aton>
 800e52c:	4620      	mov	r0, r4
 800e52e:	4b03      	ldr	r3, [pc, #12]	; (800e53c <MDNS::MDNS()+0x1c>)
 800e530:	9a01      	ldr	r2, [sp, #4]
 800e532:	601a      	str	r2, [r3, #0]
 800e534:	b002      	add	sp, #8
 800e536:	bd10      	pop	{r4, pc}
 800e538:	0801469c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, lr}
 800e53c:	20008c38 	andcs	r8, r0, r8, lsr ip

0800e540 <MDNS::SetName(char const*)>:
 800e540:	b538      	push	{r3, r4, r5, lr}
 800e542:	4d0b      	ldr	r5, [pc, #44]	; (800e570 <MDNS::SetName(char const*)+0x30>)
 800e544:	460c      	mov	r4, r1
 800e546:	6828      	ldr	r0, [r5, #0]
 800e548:	b108      	cbz	r0, 800e54e <MDNS::SetName(char const*)+0xe>
 800e54a:	f002 fc57 	bl	8010dfc <operator delete[](void*)>
 800e54e:	4620      	mov	r0, r4
 800e550:	f7ff ffbe 	bl	800e4d0 <strlen>
 800e554:	3007      	adds	r0, #7
 800e556:	f002 fc55 	bl	8010e04 <operator new[](unsigned int)>
 800e55a:	4621      	mov	r1, r4
 800e55c:	6028      	str	r0, [r5, #0]
 800e55e:	f7ff ffcc 	bl	800e4fa <strcpy.isra.0>
 800e562:	6828      	ldr	r0, [r5, #0]
 800e564:	4903      	ldr	r1, [pc, #12]	; (800e574 <MDNS::SetName(char const*)+0x34>)
 800e566:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e56a:	f7ff bfce 	b.w	800e50a <strcat.isra.0>
 800e56e:	bf00      	nop
 800e570:	20009068 	andcs	r9, r0, r8, rrx
 800e574:	080146ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, lr}

0800e578 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800e578:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e57c:	f04f 0e00 	mov.w	lr, #0
 800e580:	262e      	movs	r6, #46	; 0x2e
 800e582:	4675      	mov	r5, lr
 800e584:	4694      	mov	ip, r2
 800e586:	4f1d      	ldr	r7, [pc, #116]	; (800e5fc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800e588:	4a1d      	ldr	r2, [pc, #116]	; (800e600 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800e58a:	780b      	ldrb	r3, [r1, #0]
 800e58c:	1c68      	adds	r0, r5, #1
 800e58e:	b383      	cbz	r3, 800e5f2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800e590:	2b3f      	cmp	r3, #63	; 0x3f
 800e592:	d91d      	bls.n	800e5d0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800e594:	f1be 0f00 	cmp.w	lr, #0
 800e598:	bf08      	it	eq
 800e59a:	4605      	moveq	r5, r0
 800e59c:	2000      	movs	r0, #0
 800e59e:	7849      	ldrb	r1, [r1, #1]
 800e5a0:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800e5a4:	430b      	orrs	r3, r1
 800e5a6:	6811      	ldr	r1, [r2, #0]
 800e5a8:	5ccc      	ldrb	r4, [r1, r3]
 800e5aa:	3301      	adds	r3, #1
 800e5ac:	440b      	add	r3, r1
 800e5ae:	42a0      	cmp	r0, r4
 800e5b0:	5c19      	ldrb	r1, [r3, r0]
 800e5b2:	d309      	bcc.n	800e5c8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800e5b4:	f04f 0e01 	mov.w	lr, #1
 800e5b8:	1919      	adds	r1, r3, r4
 800e5ba:	4464      	add	r4, ip
 800e5bc:	780b      	ldrb	r3, [r1, #0]
 800e5be:	b10b      	cbz	r3, 800e5c4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800e5c0:	f804 6b01 	strb.w	r6, [r4], #1
 800e5c4:	46a4      	mov	ip, r4
 800e5c6:	e7e0      	b.n	800e58a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800e5c8:	f80c 1000 	strb.w	r1, [ip, r0]
 800e5cc:	3001      	adds	r0, #1
 800e5ce:	e7ee      	b.n	800e5ae <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800e5d0:	4688      	mov	r8, r1
 800e5d2:	eb0c 0403 	add.w	r4, ip, r3
 800e5d6:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800e5da:	f80c 9b01 	strb.w	r9, [ip], #1
 800e5de:	4564      	cmp	r4, ip
 800e5e0:	d1f9      	bne.n	800e5d6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800e5e2:	f103 0c01 	add.w	ip, r3, #1
 800e5e6:	4461      	add	r1, ip
 800e5e8:	f1be 0f00 	cmp.w	lr, #0
 800e5ec:	d1e6      	bne.n	800e5bc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800e5ee:	18c5      	adds	r5, r0, r3
 800e5f0:	e7e4      	b.n	800e5bc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800e5f2:	f88c 3000 	strb.w	r3, [ip]
 800e5f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5fa:	bf00      	nop
 800e5fc:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800e600:	2000906c 	andcs	r9, r0, ip, rrx

0800e604 <MDNS::FindFirstDotFromRight(char const*) const>:
 800e604:	b510      	push	{r4, lr}
 800e606:	4608      	mov	r0, r1
 800e608:	460c      	mov	r4, r1
 800e60a:	f7ff ff61 	bl	800e4d0 <strlen>
 800e60e:	4420      	add	r0, r4
 800e610:	42a0      	cmp	r0, r4
 800e612:	d903      	bls.n	800e61c <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800e614:	f810 3901 	ldrb.w	r3, [r0], #-1
 800e618:	2b2e      	cmp	r3, #46	; 0x2e
 800e61a:	d1f9      	bne.n	800e610 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800e61c:	3001      	adds	r0, #1
 800e61e:	bd10      	pop	{r4, pc}

0800e620 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800e620:	4610      	mov	r0, r2
 800e622:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e624:	460f      	mov	r7, r1
 800e626:	1c44      	adds	r4, r0, #1
 800e628:	463d      	mov	r5, r7
 800e62a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800e62e:	b126      	cbz	r6, 800e63a <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800e630:	2e2e      	cmp	r6, #46	; 0x2e
 800e632:	d002      	beq.n	800e63a <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800e634:	f804 6b01 	strb.w	r6, [r4], #1
 800e638:	e7f6      	b.n	800e628 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800e63a:	1a69      	subs	r1, r5, r1
 800e63c:	7001      	strb	r1, [r0, #0]
 800e63e:	7829      	ldrb	r1, [r5, #0]
 800e640:	b921      	cbnz	r1, 800e64c <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800e642:	b10b      	cbz	r3, 800e648 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800e644:	f804 1b01 	strb.w	r1, [r4], #1
 800e648:	1aa0      	subs	r0, r4, r2
 800e64a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e64c:	4620      	mov	r0, r4
 800e64e:	1c69      	adds	r1, r5, #1
 800e650:	e7e8      	b.n	800e624 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800e654 <MDNS::CreateAnswerLocalIpAddress()>:
 800e654:	2384      	movs	r3, #132	; 0x84
 800e656:	b510      	push	{r4, lr}
 800e658:	4c0f      	ldr	r4, [pc, #60]	; (800e698 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800e65a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800e65e:	80e3      	strh	r3, [r4, #6]
 800e660:	2300      	movs	r3, #0
 800e662:	490e      	ldr	r1, [pc, #56]	; (800e69c <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800e664:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800e668:	6809      	ldr	r1, [r1, #0]
 800e66a:	f104 0210 	add.w	r2, r4, #16
 800e66e:	2301      	movs	r3, #1
 800e670:	f7ff ffd6 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e674:	490a      	ldr	r1, [pc, #40]	; (800e6a0 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800e676:	1813      	adds	r3, r2, r0
 800e678:	5011      	str	r1, [r2, r0]
 800e67a:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800e67e:	605a      	str	r2, [r3, #4]
 800e680:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e684:	811a      	strh	r2, [r3, #8]
 800e686:	4a07      	ldr	r2, [pc, #28]	; (800e6a4 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800e688:	6812      	ldr	r2, [r2, #0]
 800e68a:	6912      	ldr	r2, [r2, #16]
 800e68c:	f8c3 200a 	str.w	r2, [r3, #10]
 800e690:	1b1b      	subs	r3, r3, r4
 800e692:	330a      	adds	r3, #10
 800e694:	6023      	str	r3, [r4, #0]
 800e696:	bd10      	pop	{r4, pc}
 800e698:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800e69c:	20009068 	andcs	r9, r0, r8, rrx
 800e6a0:	01800100 	orreq	r0, r0, r0, lsl #2
 800e6a4:	20009070 	andcs	r9, r0, r0, ror r0

0800e6a8 <MDNS::Start()>:
 800e6a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e6aa:	4c1e      	ldr	r4, [pc, #120]	; (800e724 <MDNS::Start()+0x7c>)
 800e6ac:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800e6b0:	4605      	mov	r5, r0
 800e6b2:	6820      	ldr	r0, [r4, #0]
 800e6b4:	f000 fb2a 	bl	800ed0c <Network::Begin(unsigned short)>
 800e6b8:	4e1b      	ldr	r6, [pc, #108]	; (800e728 <MDNS::Start()+0x80>)
 800e6ba:	4f1c      	ldr	r7, [pc, #112]	; (800e72c <MDNS::Start()+0x84>)
 800e6bc:	4601      	mov	r1, r0
 800e6be:	6030      	str	r0, [r6, #0]
 800e6c0:	683a      	ldr	r2, [r7, #0]
 800e6c2:	6820      	ldr	r0, [r4, #0]
 800e6c4:	f000 fb33 	bl	800ed2e <Network::JoinGroup(int, unsigned int)>
 800e6c8:	4b19      	ldr	r3, [pc, #100]	; (800e730 <MDNS::Start()+0x88>)
 800e6ca:	681b      	ldr	r3, [r3, #0]
 800e6cc:	b923      	cbnz	r3, 800e6d8 <MDNS::Start()+0x30>
 800e6ce:	6821      	ldr	r1, [r4, #0]
 800e6d0:	4628      	mov	r0, r5
 800e6d2:	311c      	adds	r1, #28
 800e6d4:	f7ff ff34 	bl	800e540 <MDNS::SetName(char const*)>
 800e6d8:	4628      	mov	r0, r5
 800e6da:	f7ff ffbb 	bl	800e654 <MDNS::CreateAnswerLocalIpAddress()>
 800e6de:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e6e2:	4914      	ldr	r1, [pc, #80]	; (800e734 <MDNS::Start()+0x8c>)
 800e6e4:	7830      	ldrb	r0, [r6, #0]
 800e6e6:	f851 2b04 	ldr.w	r2, [r1], #4
 800e6ea:	9300      	str	r3, [sp, #0]
 800e6ec:	b292      	uxth	r2, r2
 800e6ee:	683b      	ldr	r3, [r7, #0]
 800e6f0:	f7ff fe3c 	bl	800e36c <udp_send>
 800e6f4:	223f      	movs	r2, #63	; 0x3f
 800e6f6:	6820      	ldr	r0, [r4, #0]
 800e6f8:	4c0f      	ldr	r4, [pc, #60]	; (800e738 <MDNS::Start()+0x90>)
 800e6fa:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800e6fe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e702:	b929      	cbnz	r1, 800e710 <MDNS::Start()+0x68>
 800e704:	441a      	add	r2, r3
 800e706:	4293      	cmp	r3, r2
 800e708:	d006      	beq.n	800e718 <MDNS::Start()+0x70>
 800e70a:	f803 1b01 	strb.w	r1, [r3], #1
 800e70e:	e7fa      	b.n	800e706 <MDNS::Start()+0x5e>
 800e710:	3a01      	subs	r2, #1
 800e712:	f803 1b01 	strb.w	r1, [r3], #1
 800e716:	d1f2      	bne.n	800e6fe <MDNS::Start()+0x56>
 800e718:	2300      	movs	r3, #0
 800e71a:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800e71e:	b003      	add	sp, #12
 800e720:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e722:	bf00      	nop
 800e724:	20009070 	andcs	r9, r0, r0, ror r0
 800e728:	20000008 	andcs	r0, r0, r8
 800e72c:	20008c38 	andcs	r8, r0, r8, lsr ip
 800e730:	20009068 	andcs	r9, r0, r8, rrx
 800e734:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800e738:	080146ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, lr}

0800e73c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800e73c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e740:	4c1b      	ldr	r4, [pc, #108]	; (800e7b0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800e742:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800e746:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800e74a:	2300      	movs	r3, #0
 800e74c:	f854 100c 	ldr.w	r1, [r4, ip]
 800e750:	4607      	mov	r7, r0
 800e752:	f7ff ff65 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e756:	2301      	movs	r3, #1
 800e758:	7bac      	ldrb	r4, [r5, #14]
 800e75a:	4616      	mov	r6, r2
 800e75c:	4915      	ldr	r1, [pc, #84]	; (800e7b4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800e75e:	4402      	add	r2, r0
 800e760:	4815      	ldr	r0, [pc, #84]	; (800e7b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800e762:	429c      	cmp	r4, r3
 800e764:	bf18      	it	ne
 800e766:	4601      	movne	r1, r0
 800e768:	4638      	mov	r0, r7
 800e76a:	f7ff ff59 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e76e:	4b13      	ldr	r3, [pc, #76]	; (800e7bc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800e770:	1814      	adds	r4, r2, r0
 800e772:	5013      	str	r3, [r2, r0]
 800e774:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e778:	6063      	str	r3, [r4, #4]
 800e77a:	4b11      	ldr	r3, [pc, #68]	; (800e7c0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800e77c:	f8d3 8000 	ldr.w	r8, [r3]
 800e780:	4640      	mov	r0, r8
 800e782:	f7ff fea5 	bl	800e4d0 <strlen>
 800e786:	f100 0308 	add.w	r3, r0, #8
 800e78a:	ba5b      	rev16	r3, r3
 800e78c:	8123      	strh	r3, [r4, #8]
 800e78e:	2300      	movs	r3, #0
 800e790:	f8c4 300a 	str.w	r3, [r4, #10]
 800e794:	89ab      	ldrh	r3, [r5, #12]
 800e796:	f104 0210 	add.w	r2, r4, #16
 800e79a:	ba5b      	rev16	r3, r3
 800e79c:	81e3      	strh	r3, [r4, #14]
 800e79e:	4641      	mov	r1, r8
 800e7a0:	2301      	movs	r3, #1
 800e7a2:	4638      	mov	r0, r7
 800e7a4:	f7ff ff3c 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e7a8:	4410      	add	r0, r2
 800e7aa:	1b80      	subs	r0, r0, r6
 800e7ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7b0:	20008e40 	andcs	r8, r0, r0, asr #28
 800e7b4:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}
 800e7b8:	080146c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, lr}
 800e7bc:	01802100 	orreq	r2, r0, r0, lsl #2
 800e7c0:	20009068 	andcs	r9, r0, r8, rrx

0800e7c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800e7c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7c8:	4e19      	ldr	r6, [pc, #100]	; (800e830 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800e7ca:	010f      	lsls	r7, r1, #4
 800e7cc:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800e7d0:	2300      	movs	r3, #0
 800e7d2:	59f1      	ldr	r1, [r6, r7]
 800e7d4:	4604      	mov	r4, r0
 800e7d6:	f7ff ff23 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e7da:	2301      	movs	r3, #1
 800e7dc:	7bae      	ldrb	r6, [r5, #14]
 800e7de:	4690      	mov	r8, r2
 800e7e0:	4914      	ldr	r1, [pc, #80]	; (800e834 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800e7e2:	4402      	add	r2, r0
 800e7e4:	4814      	ldr	r0, [pc, #80]	; (800e838 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800e7e6:	429e      	cmp	r6, r3
 800e7e8:	bf18      	it	ne
 800e7ea:	4601      	movne	r1, r0
 800e7ec:	4620      	mov	r0, r4
 800e7ee:	f7ff ff17 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e7f2:	4b12      	ldr	r3, [pc, #72]	; (800e83c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800e7f4:	1816      	adds	r6, r2, r0
 800e7f6:	5013      	str	r3, [r2, r0]
 800e7f8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e7fc:	68a8      	ldr	r0, [r5, #8]
 800e7fe:	6073      	str	r3, [r6, #4]
 800e800:	f106 040b 	add.w	r4, r6, #11
 800e804:	b938      	cbnz	r0, 800e816 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800e806:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e80a:	72b0      	strb	r0, [r6, #10]
 800e80c:	8133      	strh	r3, [r6, #8]
 800e80e:	eba4 0008 	sub.w	r0, r4, r8
 800e812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e816:	f7ff fe5b 	bl	800e4d0 <strlen>
 800e81a:	4607      	mov	r7, r0
 800e81c:	1c43      	adds	r3, r0, #1
 800e81e:	72b0      	strb	r0, [r6, #10]
 800e820:	ba5b      	rev16	r3, r3
 800e822:	4620      	mov	r0, r4
 800e824:	68a9      	ldr	r1, [r5, #8]
 800e826:	8133      	strh	r3, [r6, #8]
 800e828:	f7ff fe67 	bl	800e4fa <strcpy.isra.0>
 800e82c:	443c      	add	r4, r7
 800e82e:	e7ee      	b.n	800e80e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800e830:	20008e40 	andcs	r8, r0, r0, asr #28
 800e834:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}
 800e838:	080146c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, lr}
 800e83c:	01801000 	orreq	r1, r0, r0

0800e840 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800e840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e844:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e8a8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800e848:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800e84c:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800e850:	6869      	ldr	r1, [r5, #4]
 800e852:	2301      	movs	r3, #1
 800e854:	4607      	mov	r7, r0
 800e856:	f7ff fee3 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e85a:	4b14      	ldr	r3, [pc, #80]	; (800e8ac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800e85c:	f858 8009 	ldr.w	r8, [r8, r9]
 800e860:	5013      	str	r3, [r2, r0]
 800e862:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e866:	1816      	adds	r6, r2, r0
 800e868:	6073      	str	r3, [r6, #4]
 800e86a:	4640      	mov	r0, r8
 800e86c:	4614      	mov	r4, r2
 800e86e:	f7ff fe2f 	bl	800e4d0 <strlen>
 800e872:	f100 030d 	add.w	r3, r0, #13
 800e876:	ba5b      	rev16	r3, r3
 800e878:	4641      	mov	r1, r8
 800e87a:	8133      	strh	r3, [r6, #8]
 800e87c:	f106 020a 	add.w	r2, r6, #10
 800e880:	2300      	movs	r3, #0
 800e882:	4638      	mov	r0, r7
 800e884:	f7ff fecc 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e888:	2301      	movs	r3, #1
 800e88a:	4402      	add	r2, r0
 800e88c:	7bad      	ldrb	r5, [r5, #14]
 800e88e:	4808      	ldr	r0, [pc, #32]	; (800e8b0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800e890:	4908      	ldr	r1, [pc, #32]	; (800e8b4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800e892:	429d      	cmp	r5, r3
 800e894:	bf18      	it	ne
 800e896:	4601      	movne	r1, r0
 800e898:	4638      	mov	r0, r7
 800e89a:	f7ff fec1 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e89e:	4410      	add	r0, r2
 800e8a0:	1b00      	subs	r0, r0, r4
 800e8a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e8a6:	bf00      	nop
 800e8a8:	20008e40 	andcs	r8, r0, r0, asr #28
 800e8ac:	01000c00 	tsteq	r0, r0, lsl #24
 800e8b0:	080146c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, lr}
 800e8b4:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}

0800e8b8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800e8b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e8ba:	460f      	mov	r7, r1
 800e8bc:	2301      	movs	r3, #1
 800e8be:	490f      	ldr	r1, [pc, #60]	; (800e8fc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800e8c0:	4606      	mov	r6, r0
 800e8c2:	f7ff fead 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e8c6:	4b0e      	ldr	r3, [pc, #56]	; (800e900 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800e8c8:	490e      	ldr	r1, [pc, #56]	; (800e904 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800e8ca:	5013      	str	r3, [r2, r0]
 800e8cc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800e8d0:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800e8d4:	684f      	ldr	r7, [r1, #4]
 800e8d6:	1815      	adds	r5, r2, r0
 800e8d8:	606b      	str	r3, [r5, #4]
 800e8da:	4638      	mov	r0, r7
 800e8dc:	4614      	mov	r4, r2
 800e8de:	f7ff fdf7 	bl	800e4d0 <strlen>
 800e8e2:	1c83      	adds	r3, r0, #2
 800e8e4:	ba5b      	rev16	r3, r3
 800e8e6:	812b      	strh	r3, [r5, #8]
 800e8e8:	f105 020a 	add.w	r2, r5, #10
 800e8ec:	2301      	movs	r3, #1
 800e8ee:	4639      	mov	r1, r7
 800e8f0:	4630      	mov	r0, r6
 800e8f2:	f7ff fe95 	bl	800e620 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e8f6:	4410      	add	r0, r2
 800e8f8:	1b00      	subs	r0, r0, r4
 800e8fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e8fc:	080146b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, lr}
 800e900:	01000c00 	tsteq	r0, r0, lsl #24
 800e904:	20008e40 	andcs	r8, r0, r0, asr #28

0800e908 <MDNS::CreateMDNSMessage(unsigned int)>:
 800e908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e90a:	2384      	movs	r3, #132	; 0x84
 800e90c:	4d19      	ldr	r5, [pc, #100]	; (800e974 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800e90e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800e912:	80eb      	strh	r3, [r5, #6]
 800e914:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e918:	f105 0410 	add.w	r4, r5, #16
 800e91c:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800e920:	4622      	mov	r2, r4
 800e922:	4606      	mov	r6, r0
 800e924:	460f      	mov	r7, r1
 800e926:	f7ff ff09 	bl	800e73c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800e92a:	4404      	add	r4, r0
 800e92c:	4622      	mov	r2, r4
 800e92e:	4639      	mov	r1, r7
 800e930:	4630      	mov	r0, r6
 800e932:	f7ff ff47 	bl	800e7c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800e936:	4404      	add	r4, r0
 800e938:	4622      	mov	r2, r4
 800e93a:	4639      	mov	r1, r7
 800e93c:	4630      	mov	r0, r6
 800e93e:	f7ff ffbb 	bl	800e8b8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800e942:	4404      	add	r4, r0
 800e944:	4622      	mov	r2, r4
 800e946:	4639      	mov	r1, r7
 800e948:	4630      	mov	r0, r6
 800e94a:	f7ff ff79 	bl	800e840 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800e94e:	4b0a      	ldr	r3, [pc, #40]	; (800e978 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800e950:	4404      	add	r4, r0
 800e952:	f853 2b10 	ldr.w	r2, [r3], #16
 800e956:	1e60      	subs	r0, r4, #1
 800e958:	3a0c      	subs	r2, #12
 800e95a:	4611      	mov	r1, r2
 800e95c:	3901      	subs	r1, #1
 800e95e:	d304      	bcc.n	800e96a <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800e960:	f813 6b01 	ldrb.w	r6, [r3], #1
 800e964:	f800 6f01 	strb.w	r6, [r0, #1]!
 800e968:	e7f8      	b.n	800e95c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800e96a:	4414      	add	r4, r2
 800e96c:	4a03      	ldr	r2, [pc, #12]	; (800e97c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800e96e:	1aa4      	subs	r4, r4, r2
 800e970:	602c      	str	r4, [r5, #0]
 800e972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e974:	20008e64 	andcs	r8, r0, r4, ror #28
 800e978:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800e97c:	20008e68 	andcs	r8, r0, r8, ror #28

0800e980 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800e980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e984:	4d3f      	ldr	r5, [pc, #252]	; (800ea84 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800e986:	b085      	sub	sp, #20
 800e988:	682c      	ldr	r4, [r5, #0]
 800e98a:	4680      	mov	r8, r0
 800e98c:	460f      	mov	r7, r1
 800e98e:	4616      	mov	r6, r2
 800e990:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800e994:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800e998:	b11c      	cbz	r4, 800e9a2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800e99a:	692a      	ldr	r2, [r5, #16]
 800e99c:	2a00      	cmp	r2, #0
 800e99e:	d16d      	bne.n	800ea7c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800e9a0:	2401      	movs	r4, #1
 800e9a2:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800e9a6:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800e9aa:	8193      	strh	r3, [r2, #12]
 800e9ac:	f882 b00e 	strb.w	fp, [r2, #14]
 800e9b0:	2f00      	cmp	r7, #0
 800e9b2:	d153      	bne.n	800ea5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800e9b4:	4630      	mov	r0, r6
 800e9b6:	f7ff fd8b 	bl	800e4d0 <strlen>
 800e9ba:	4f33      	ldr	r7, [pc, #204]	; (800ea88 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800e9bc:	683b      	ldr	r3, [r7, #0]
 800e9be:	331c      	adds	r3, #28
 800e9c0:	4418      	add	r0, r3
 800e9c2:	f7ff fd85 	bl	800e4d0 <strlen>
 800e9c6:	3001      	adds	r0, #1
 800e9c8:	f002 fa1c 	bl	8010e04 <operator new[](unsigned int)>
 800e9cc:	6839      	ldr	r1, [r7, #0]
 800e9ce:	f845 0009 	str.w	r0, [r5, r9]
 800e9d2:	311c      	adds	r1, #28
 800e9d4:	f7ff fd91 	bl	800e4fa <strcpy.isra.0>
 800e9d8:	f855 0009 	ldr.w	r0, [r5, r9]
 800e9dc:	4631      	mov	r1, r6
 800e9de:	f7ff fd94 	bl	800e50a <strcat.isra.0>
 800e9e2:	4631      	mov	r1, r6
 800e9e4:	4640      	mov	r0, r8
 800e9e6:	f7ff fe0d 	bl	800e604 <MDNS::FindFirstDotFromRight(char const*) const>
 800e9ea:	eb05 0709 	add.w	r7, r5, r9
 800e9ee:	4605      	mov	r5, r0
 800e9f0:	f7ff fd6e 	bl	800e4d0 <strlen>
 800e9f4:	300d      	adds	r0, #13
 800e9f6:	f002 fa05 	bl	8010e04 <operator new[](unsigned int)>
 800e9fa:	4629      	mov	r1, r5
 800e9fc:	6078      	str	r0, [r7, #4]
 800e9fe:	f7ff fd7c 	bl	800e4fa <strcpy.isra.0>
 800ea02:	4922      	ldr	r1, [pc, #136]	; (800ea8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ea04:	6878      	ldr	r0, [r7, #4]
 800ea06:	f7ff fd80 	bl	800e50a <strcat.isra.0>
 800ea0a:	4921      	ldr	r1, [pc, #132]	; (800ea90 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ea0c:	4b21      	ldr	r3, [pc, #132]	; (800ea94 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ea0e:	6878      	ldr	r0, [r7, #4]
 800ea10:	f1bb 0f01 	cmp.w	fp, #1
 800ea14:	bf18      	it	ne
 800ea16:	4619      	movne	r1, r3
 800ea18:	f7ff fd77 	bl	800e50a <strcat.isra.0>
 800ea1c:	f1ba 0f00 	cmp.w	sl, #0
 800ea20:	d009      	beq.n	800ea36 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800ea22:	4650      	mov	r0, sl
 800ea24:	f7ff fd54 	bl	800e4d0 <strlen>
 800ea28:	3001      	adds	r0, #1
 800ea2a:	f002 f9eb 	bl	8010e04 <operator new[](unsigned int)>
 800ea2e:	4651      	mov	r1, sl
 800ea30:	60b8      	str	r0, [r7, #8]
 800ea32:	f7ff fd62 	bl	800e4fa <strcpy.isra.0>
 800ea36:	4621      	mov	r1, r4
 800ea38:	4640      	mov	r0, r8
 800ea3a:	f7ff ff65 	bl	800e908 <MDNS::CreateMDNSMessage(unsigned int)>
 800ea3e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ea42:	4915      	ldr	r1, [pc, #84]	; (800ea98 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800ea44:	4815      	ldr	r0, [pc, #84]	; (800ea9c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800ea46:	f851 2b04 	ldr.w	r2, [r1], #4
 800ea4a:	9300      	str	r3, [sp, #0]
 800ea4c:	4b14      	ldr	r3, [pc, #80]	; (800eaa0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800ea4e:	7800      	ldrb	r0, [r0, #0]
 800ea50:	681b      	ldr	r3, [r3, #0]
 800ea52:	b292      	uxth	r2, r2
 800ea54:	f7ff fc8a 	bl	800e36c <udp_send>
 800ea58:	2001      	movs	r0, #1
 800ea5a:	e010      	b.n	800ea7e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800ea5c:	4638      	mov	r0, r7
 800ea5e:	f7ff fd37 	bl	800e4d0 <strlen>
 800ea62:	9003      	str	r0, [sp, #12]
 800ea64:	4630      	mov	r0, r6
 800ea66:	f7ff fd33 	bl	800e4d0 <strlen>
 800ea6a:	9b03      	ldr	r3, [sp, #12]
 800ea6c:	4418      	add	r0, r3
 800ea6e:	3001      	adds	r0, #1
 800ea70:	f002 f9c8 	bl	8010e04 <operator new[](unsigned int)>
 800ea74:	4639      	mov	r1, r7
 800ea76:	f845 0009 	str.w	r0, [r5, r9]
 800ea7a:	e7ab      	b.n	800e9d4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800ea7c:	2000      	movs	r0, #0
 800ea7e:	b005      	add	sp, #20
 800ea80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea84:	20008e40 	andcs	r8, r0, r0, asr #28
 800ea88:	20009070 	andcs	r9, r0, r0, ror r0
 800ea8c:	080137ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, ip, sp}
 800ea90:	080146a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, lr}
 800ea94:	080146c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, lr}
 800ea98:	20008e64 	andcs	r8, r0, r4, ror #28
 800ea9c:	20000008 	andcs	r0, r0, r8
 800eaa0:	20008c38 	andcs	r8, r0, r8, lsr ip

0800eaa4 <MDNS::HandleRequest(unsigned short)>:
 800eaa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eaa8:	4605      	mov	r5, r0
 800eaaa:	2700      	movs	r7, #0
 800eaac:	f04f 080c 	mov.w	r8, #12
 800eab0:	b0c5      	sub	sp, #276	; 0x114
 800eab2:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800eb78 <MDNS::HandleRequest(unsigned short)+0xd4>
 800eab6:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800eb7c <MDNS::HandleRequest(unsigned short)+0xd8>
 800eaba:	9103      	str	r1, [sp, #12]
 800eabc:	9b03      	ldr	r3, [sp, #12]
 800eabe:	42bb      	cmp	r3, r7
 800eac0:	d956      	bls.n	800eb70 <MDNS::HandleRequest(unsigned short)+0xcc>
 800eac2:	f8da 1000 	ldr.w	r1, [sl]
 800eac6:	aa04      	add	r2, sp, #16
 800eac8:	4441      	add	r1, r8
 800eaca:	4628      	mov	r0, r5
 800eacc:	f7ff fd54 	bl	800e578 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800ead0:	f8da 2000 	ldr.w	r2, [sl]
 800ead4:	4440      	add	r0, r8
 800ead6:	1813      	adds	r3, r2, r0
 800ead8:	885b      	ldrh	r3, [r3, #2]
 800eada:	f100 0804 	add.w	r8, r0, #4
 800eade:	ba5b      	rev16	r3, r3
 800eae0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800eae4:	2b01      	cmp	r3, #1
 800eae6:	d13e      	bne.n	800eb66 <MDNS::HandleRequest(unsigned short)+0xc2>
 800eae8:	5a14      	ldrh	r4, [r2, r0]
 800eaea:	4b25      	ldr	r3, [pc, #148]	; (800eb80 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800eaec:	ba64      	rev16	r4, r4
 800eaee:	6818      	ldr	r0, [r3, #0]
 800eaf0:	a904      	add	r1, sp, #16
 800eaf2:	b2a4      	uxth	r4, r4
 800eaf4:	f7ff fcf4 	bl	800e4e0 <strcmp>
 800eaf8:	b970      	cbnz	r0, 800eb18 <MDNS::HandleRequest(unsigned short)+0x74>
 800eafa:	2c01      	cmp	r4, #1
 800eafc:	d10c      	bne.n	800eb18 <MDNS::HandleRequest(unsigned short)+0x74>
 800eafe:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800eb02:	4920      	ldr	r1, [pc, #128]	; (800eb84 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800eb04:	4820      	ldr	r0, [pc, #128]	; (800eb88 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800eb06:	f851 2b04 	ldr.w	r2, [r1], #4
 800eb0a:	9300      	str	r3, [sp, #0]
 800eb0c:	4b1f      	ldr	r3, [pc, #124]	; (800eb8c <MDNS::HandleRequest(unsigned short)+0xe8>)
 800eb0e:	7800      	ldrb	r0, [r0, #0]
 800eb10:	681b      	ldr	r3, [r3, #0]
 800eb12:	b292      	uxth	r2, r2
 800eb14:	f7ff fc2a 	bl	800e36c <udp_send>
 800eb18:	481d      	ldr	r0, [pc, #116]	; (800eb90 <MDNS::HandleRequest(unsigned short)+0xec>)
 800eb1a:	a904      	add	r1, sp, #16
 800eb1c:	f7ff fce0 	bl	800e4e0 <strcmp>
 800eb20:	f04f 0900 	mov.w	r9, #0
 800eb24:	4e1b      	ldr	r6, [pc, #108]	; (800eb94 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800eb26:	9002      	str	r0, [sp, #8]
 800eb28:	6833      	ldr	r3, [r6, #0]
 800eb2a:	b1c3      	cbz	r3, 800eb5e <MDNS::HandleRequest(unsigned short)+0xba>
 800eb2c:	9b02      	ldr	r3, [sp, #8]
 800eb2e:	b123      	cbz	r3, 800eb3a <MDNS::HandleRequest(unsigned short)+0x96>
 800eb30:	6870      	ldr	r0, [r6, #4]
 800eb32:	a904      	add	r1, sp, #16
 800eb34:	f7ff fcd4 	bl	800e4e0 <strcmp>
 800eb38:	b988      	cbnz	r0, 800eb5e <MDNS::HandleRequest(unsigned short)+0xba>
 800eb3a:	2c0c      	cmp	r4, #12
 800eb3c:	d10f      	bne.n	800eb5e <MDNS::HandleRequest(unsigned short)+0xba>
 800eb3e:	4649      	mov	r1, r9
 800eb40:	4628      	mov	r0, r5
 800eb42:	f7ff fee1 	bl	800e908 <MDNS::CreateMDNSMessage(unsigned int)>
 800eb46:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800eb4a:	480f      	ldr	r0, [pc, #60]	; (800eb88 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800eb4c:	9300      	str	r3, [sp, #0]
 800eb4e:	4b0f      	ldr	r3, [pc, #60]	; (800eb8c <MDNS::HandleRequest(unsigned short)+0xe8>)
 800eb50:	f8bb 2000 	ldrh.w	r2, [fp]
 800eb54:	681b      	ldr	r3, [r3, #0]
 800eb56:	4910      	ldr	r1, [pc, #64]	; (800eb98 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800eb58:	7800      	ldrb	r0, [r0, #0]
 800eb5a:	f7ff fc07 	bl	800e36c <udp_send>
 800eb5e:	3610      	adds	r6, #16
 800eb60:	f1b9 0f00 	cmp.w	r9, #0
 800eb64:	d001      	beq.n	800eb6a <MDNS::HandleRequest(unsigned short)+0xc6>
 800eb66:	3701      	adds	r7, #1
 800eb68:	e7a8      	b.n	800eabc <MDNS::HandleRequest(unsigned short)+0x18>
 800eb6a:	f04f 0901 	mov.w	r9, #1
 800eb6e:	e7db      	b.n	800eb28 <MDNS::HandleRequest(unsigned short)+0x84>
 800eb70:	b045      	add	sp, #276	; 0x114
 800eb72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb76:	bf00      	nop
 800eb78:	2000906c 	andcs	r9, r0, ip, rrx
 800eb7c:	20008e64 	andcs	r8, r0, r4, ror #28
 800eb80:	20009068 	andcs	r9, r0, r8, rrx
 800eb84:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800eb88:	20000008 	andcs	r0, r0, r8
 800eb8c:	20008c38 	andcs	r8, r0, r8, lsr ip
 800eb90:	080146b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, lr}
 800eb94:	20008e40 	andcs	r8, r0, r0, asr #28
 800eb98:	20008e68 	andcs	r8, r0, r8, ror #28

0800eb9c <MDNS::Parse()>:
 800eb9c:	4b08      	ldr	r3, [pc, #32]	; (800ebc0 <MDNS::Parse()+0x24>)
 800eb9e:	681a      	ldr	r2, [r3, #0]
 800eba0:	8853      	ldrh	r3, [r2, #2]
 800eba2:	ba5b      	rev16	r3, r3
 800eba4:	b299      	uxth	r1, r3
 800eba6:	041b      	lsls	r3, r3, #16
 800eba8:	d408      	bmi.n	800ebbc <MDNS::Parse()+0x20>
 800ebaa:	0b8b      	lsrs	r3, r1, #14
 800ebac:	d106      	bne.n	800ebbc <MDNS::Parse()+0x20>
 800ebae:	8891      	ldrh	r1, [r2, #4]
 800ebb0:	b28b      	uxth	r3, r1
 800ebb2:	b11b      	cbz	r3, 800ebbc <MDNS::Parse()+0x20>
 800ebb4:	ba49      	rev16	r1, r1
 800ebb6:	b289      	uxth	r1, r1
 800ebb8:	f7ff bf74 	b.w	800eaa4 <MDNS::HandleRequest(unsigned short)>
 800ebbc:	4770      	bx	lr
 800ebbe:	bf00      	nop
 800ebc0:	2000906c 	andcs	r9, r0, ip, rrx

0800ebc4 <MDNS::Run()>:
 800ebc4:	b538      	push	{r3, r4, r5, lr}
 800ebc6:	4d0c      	ldr	r5, [pc, #48]	; (800ebf8 <MDNS::Run()+0x34>)
 800ebc8:	4604      	mov	r4, r0
 800ebca:	480c      	ldr	r0, [pc, #48]	; (800ebfc <MDNS::Run()+0x38>)
 800ebcc:	462b      	mov	r3, r5
 800ebce:	4a0c      	ldr	r2, [pc, #48]	; (800ec00 <MDNS::Run()+0x3c>)
 800ebd0:	490c      	ldr	r1, [pc, #48]	; (800ec04 <MDNS::Run()+0x40>)
 800ebd2:	7800      	ldrb	r0, [r0, #0]
 800ebd4:	f7ff fba4 	bl	800e320 <udp_recv2>
 800ebd8:	4b0b      	ldr	r3, [pc, #44]	; (800ec08 <MDNS::Run()+0x44>)
 800ebda:	882a      	ldrh	r2, [r5, #0]
 800ebdc:	8018      	strh	r0, [r3, #0]
 800ebde:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ebe2:	429a      	cmp	r2, r3
 800ebe4:	d106      	bne.n	800ebf4 <MDNS::Run()+0x30>
 800ebe6:	280c      	cmp	r0, #12
 800ebe8:	d904      	bls.n	800ebf4 <MDNS::Run()+0x30>
 800ebea:	4620      	mov	r0, r4
 800ebec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ebf0:	f7ff bfd4 	b.w	800eb9c <MDNS::Parse()>
 800ebf4:	bd38      	pop	{r3, r4, r5, pc}
 800ebf6:	bf00      	nop
 800ebf8:	20008c34 	andcs	r8, r0, r4, lsr ip
 800ebfc:	20000008 	andcs	r0, r0, r8
 800ec00:	20008c30 	andcs	r8, r0, r0, lsr ip
 800ec04:	2000906c 	andcs	r9, r0, ip, rrx
 800ec08:	20008e60 	andcs	r8, r0, r0, ror #28

0800ec0c <MDNS::Print()>:
 800ec0c:	b510      	push	{r4, lr}
 800ec0e:	4816      	ldr	r0, [pc, #88]	; (800ec68 <MDNS::Print()+0x5c>)
 800ec10:	f7f9 ffea 	bl	8008be8 <printf>
 800ec14:	4b15      	ldr	r3, [pc, #84]	; (800ec6c <MDNS::Print()+0x60>)
 800ec16:	681b      	ldr	r3, [r3, #0]
 800ec18:	3301      	adds	r3, #1
 800ec1a:	d104      	bne.n	800ec26 <MDNS::Print()+0x1a>
 800ec1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec20:	4813      	ldr	r0, [pc, #76]	; (800ec70 <MDNS::Print()+0x64>)
 800ec22:	f7f9 bfe1 	b.w	8008be8 <printf>
 800ec26:	4b13      	ldr	r3, [pc, #76]	; (800ec74 <MDNS::Print()+0x68>)
 800ec28:	4c13      	ldr	r4, [pc, #76]	; (800ec78 <MDNS::Print()+0x6c>)
 800ec2a:	6819      	ldr	r1, [r3, #0]
 800ec2c:	4813      	ldr	r0, [pc, #76]	; (800ec7c <MDNS::Print()+0x70>)
 800ec2e:	f7f9 ffdb 	bl	8008be8 <printf>
 800ec32:	6823      	ldr	r3, [r4, #0]
 800ec34:	b14b      	cbz	r3, 800ec4a <MDNS::Print()+0x3e>
 800ec36:	4a12      	ldr	r2, [pc, #72]	; (800ec80 <MDNS::Print()+0x74>)
 800ec38:	68a3      	ldr	r3, [r4, #8]
 800ec3a:	6861      	ldr	r1, [r4, #4]
 800ec3c:	2b00      	cmp	r3, #0
 800ec3e:	bf08      	it	eq
 800ec40:	4613      	moveq	r3, r2
 800ec42:	4810      	ldr	r0, [pc, #64]	; (800ec84 <MDNS::Print()+0x78>)
 800ec44:	89a2      	ldrh	r2, [r4, #12]
 800ec46:	f7f9 ffcf 	bl	8008be8 <printf>
 800ec4a:	6923      	ldr	r3, [r4, #16]
 800ec4c:	b15b      	cbz	r3, 800ec66 <MDNS::Print()+0x5a>
 800ec4e:	69a3      	ldr	r3, [r4, #24]
 800ec50:	4a0b      	ldr	r2, [pc, #44]	; (800ec80 <MDNS::Print()+0x74>)
 800ec52:	6961      	ldr	r1, [r4, #20]
 800ec54:	2b00      	cmp	r3, #0
 800ec56:	bf08      	it	eq
 800ec58:	4613      	moveq	r3, r2
 800ec5a:	480a      	ldr	r0, [pc, #40]	; (800ec84 <MDNS::Print()+0x78>)
 800ec5c:	8ba2      	ldrh	r2, [r4, #28]
 800ec5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec62:	f7f9 bfc1 	b.w	8008be8 <printf>
 800ec66:	bd10      	pop	{r4, pc}
 800ec68:	080146d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, lr}
 800ec6c:	20000008 	andcs	r0, r0, r8
 800ec70:	080146d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, sl, lr}
 800ec74:	20009068 	andcs	r9, r0, r8, rrx
 800ec78:	20008e40 	andcs	r8, r0, r0, asr #28
 800ec7c:	080146e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, lr}
 800ec80:	08013aa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, fp, ip, sp}
 800ec84:	080146f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, lr}

0800ec88 <strncpy.constprop.0.isra.0>:
 800ec88:	233f      	movs	r3, #63	; 0x3f
 800ec8a:	3901      	subs	r1, #1
 800ec8c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ec90:	b92a      	cbnz	r2, 800ec9e <strncpy.constprop.0.isra.0+0x16>
 800ec92:	4403      	add	r3, r0
 800ec94:	4298      	cmp	r0, r3
 800ec96:	d007      	beq.n	800eca8 <strncpy.constprop.0.isra.0+0x20>
 800ec98:	f800 2b01 	strb.w	r2, [r0], #1
 800ec9c:	e7fa      	b.n	800ec94 <strncpy.constprop.0.isra.0+0xc>
 800ec9e:	3b01      	subs	r3, #1
 800eca0:	f800 2b01 	strb.w	r2, [r0], #1
 800eca4:	d1f2      	bne.n	800ec8c <strncpy.constprop.0.isra.0+0x4>
 800eca6:	4770      	bx	lr
 800eca8:	4770      	bx	lr
	...

0800ecac <Network::Network()>:
 800ecac:	4a11      	ldr	r2, [pc, #68]	; (800ecf4 <Network::Network()+0x48>)
 800ecae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800ecb2:	6010      	str	r0, [r2, #0]
 800ecb4:	2201      	movs	r2, #1
 800ecb6:	2300      	movs	r3, #0
 800ecb8:	e9c0 1200 	strd	r1, r2, [r0]
 800ecbc:	2200      	movs	r2, #0
 800ecbe:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800ecc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ecc6:	490c      	ldr	r1, [pc, #48]	; (800ecf8 <Network::Network()+0x4c>)
 800ecc8:	60c2      	str	r2, [r0, #12]
 800ecca:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800ecce:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800ecd2:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800ecd6:	6083      	str	r3, [r0, #8]
 800ecd8:	6183      	str	r3, [r0, #24]
 800ecda:	7703      	strb	r3, [r0, #28]
 800ecdc:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800ece0:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800ece4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ece8:	f802 3b01 	strb.w	r3, [r2], #1
 800ecec:	2b00      	cmp	r3, #0
 800ecee:	d1f9      	bne.n	800ece4 <Network::Network()+0x38>
 800ecf0:	4770      	bx	lr
 800ecf2:	bf00      	nop
 800ecf4:	20009070 	andcs	r9, r0, r0, ror r0
 800ecf8:	080146fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, lr}

0800ecfc <Network::Shutdown()>:
 800ecfc:	b508      	push	{r3, lr}
 800ecfe:	30b8      	adds	r0, #184	; 0xb8
 800ed00:	f7f9 fc66 	bl	80085d0 <NetworkDisplay::ShowShutdown()>
 800ed04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ed08:	f7fe bdc2 	b.w	800d890 <net_shutdown>

0800ed0c <Network::Begin(unsigned short)>:
 800ed0c:	4608      	mov	r0, r1
 800ed0e:	f7ff ba97 	b.w	800e240 <udp_bind>

0800ed12 <Network::End(unsigned short)>:
 800ed12:	4608      	mov	r0, r1
 800ed14:	f7ff baae 	b.w	800e274 <udp_unbind>

0800ed18 <Network::MacAddressCopyTo(unsigned char*)>:
 800ed18:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800ed1c:	3901      	subs	r1, #1
 800ed1e:	30a2      	adds	r0, #162	; 0xa2
 800ed20:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ed24:	4283      	cmp	r3, r0
 800ed26:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ed2a:	d1f9      	bne.n	800ed20 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800ed2c:	4770      	bx	lr

0800ed2e <Network::JoinGroup(int, unsigned int)>:
 800ed2e:	4610      	mov	r0, r2
 800ed30:	f001 b856 	b.w	800fde0 <igmp_join>

0800ed34 <Network::SetDefaultIp()>:
 800ed34:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ed38:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800ed3c:	041b      	lsls	r3, r3, #16
 800ed3e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ed42:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800ed46:	3302      	adds	r3, #2
 800ed48:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800ed4c:	22ff      	movs	r2, #255	; 0xff
 800ed4e:	6103      	str	r3, [r0, #16]
 800ed50:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800ed54:	4770      	bx	lr
	...

0800ed58 <Network::Init(NetworkParamsStore*)>:
 800ed58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed5c:	b08b      	sub	sp, #44	; 0x2c
 800ed5e:	4604      	mov	r4, r0
 800ed60:	a806      	add	r0, sp, #24
 800ed62:	f000 f9b1 	bl	800f0c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ed66:	a806      	add	r0, sp, #24
 800ed68:	f000 f9be 	bl	800f0e8 <NetworkParams::Load()>
 800ed6c:	b110      	cbz	r0, 800ed74 <Network::Init(NetworkParamsStore*)+0x1c>
 800ed6e:	a806      	add	r0, sp, #24
 800ed70:	f000 fba3 	bl	800f4ba <NetworkParams::Dump()>
 800ed74:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800ed78:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800efa0 <Network::Init(NetworkParamsStore*)+0x248>
 800ed7c:	4628      	mov	r0, r5
 800ed7e:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800ed82:	f7f9 fc23 	bl	80085cc <NetworkDisplay::ShowEmacStart()>
 800ed86:	4638      	mov	r0, r7
 800ed88:	f002 fed0 	bl	8011b2c <emac_start>
 800ed8c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800ed90:	f104 061c 	add.w	r6, r4, #28
 800ed94:	9307      	str	r3, [sp, #28]
 800ed96:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ed9a:	9308      	str	r3, [sp, #32]
 800ed9c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800eda0:	9309      	str	r3, [sp, #36]	; 0x24
 800eda2:	f898 3014 	ldrb.w	r3, [r8, #20]
 800eda6:	7063      	strb	r3, [r4, #1]
 800eda8:	f8d8 3000 	ldr.w	r3, [r8]
 800edac:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800edb0:	bf18      	it	ne
 800edb2:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800edb6:	061b      	lsls	r3, r3, #24
 800edb8:	bf58      	it	pl
 800edba:	2300      	movpl	r3, #0
 800edbc:	60a2      	str	r2, [r4, #8]
 800edbe:	bf48      	it	mi
 800edc0:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800edc4:	60e3      	str	r3, [r4, #12]
 800edc6:	f898 3015 	ldrb.w	r3, [r8, #21]
 800edca:	2b00      	cmp	r3, #0
 800edcc:	d15e      	bne.n	800ee8c <Network::Init(NetworkParamsStore*)+0x134>
 800edce:	4632      	mov	r2, r6
 800edd0:	4874      	ldr	r0, [pc, #464]	; (800efa4 <Network::Init(NetworkParamsStore*)+0x24c>)
 800edd2:	f810 1b01 	ldrb.w	r1, [r0], #1
 800edd6:	f103 0c01 	add.w	ip, r3, #1
 800edda:	b119      	cbz	r1, 800ede4 <Network::Init(NetworkParamsStore*)+0x8c>
 800eddc:	4663      	mov	r3, ip
 800edde:	f802 1b01 	strb.w	r1, [r2], #1
 800ede2:	e7f6      	b.n	800edd2 <Network::Init(NetworkParamsStore*)+0x7a>
 800ede4:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800ede8:	18e1      	adds	r1, r4, r3
 800edea:	0910      	lsrs	r0, r2, #4
 800edec:	2a9f      	cmp	r2, #159	; 0x9f
 800edee:	f002 020f 	and.w	r2, r2, #15
 800edf2:	bf94      	ite	ls
 800edf4:	3030      	addls	r0, #48	; 0x30
 800edf6:	3037      	addhi	r0, #55	; 0x37
 800edf8:	2a09      	cmp	r2, #9
 800edfa:	bf94      	ite	ls
 800edfc:	3230      	addls	r2, #48	; 0x30
 800edfe:	3237      	addhi	r2, #55	; 0x37
 800ee00:	44a4      	add	ip, r4
 800ee02:	7708      	strb	r0, [r1, #28]
 800ee04:	f88c 201c 	strb.w	r2, [ip, #28]
 800ee08:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800ee0c:	f103 0e02 	add.w	lr, r3, #2
 800ee10:	0910      	lsrs	r0, r2, #4
 800ee12:	2a9f      	cmp	r2, #159	; 0x9f
 800ee14:	f002 020f 	and.w	r2, r2, #15
 800ee18:	bf94      	ite	ls
 800ee1a:	3030      	addls	r0, #48	; 0x30
 800ee1c:	3037      	addhi	r0, #55	; 0x37
 800ee1e:	f103 0903 	add.w	r9, r3, #3
 800ee22:	2a09      	cmp	r2, #9
 800ee24:	44a6      	add	lr, r4
 800ee26:	f88e 001c 	strb.w	r0, [lr, #28]
 800ee2a:	bf94      	ite	ls
 800ee2c:	3230      	addls	r2, #48	; 0x30
 800ee2e:	3237      	addhi	r2, #55	; 0x37
 800ee30:	eb04 0009 	add.w	r0, r4, r9
 800ee34:	7702      	strb	r2, [r0, #28]
 800ee36:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800ee3a:	f103 0c04 	add.w	ip, r3, #4
 800ee3e:	0910      	lsrs	r0, r2, #4
 800ee40:	2a9f      	cmp	r2, #159	; 0x9f
 800ee42:	f002 020f 	and.w	r2, r2, #15
 800ee46:	bf94      	ite	ls
 800ee48:	3030      	addls	r0, #48	; 0x30
 800ee4a:	3037      	addhi	r0, #55	; 0x37
 800ee4c:	3305      	adds	r3, #5
 800ee4e:	2a09      	cmp	r2, #9
 800ee50:	4423      	add	r3, r4
 800ee52:	44a4      	add	ip, r4
 800ee54:	bf94      	ite	ls
 800ee56:	3230      	addls	r2, #48	; 0x30
 800ee58:	3237      	addhi	r2, #55	; 0x37
 800ee5a:	f88c 001c 	strb.w	r0, [ip, #28]
 800ee5e:	771a      	strb	r2, [r3, #28]
 800ee60:	2300      	movs	r3, #0
 800ee62:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800ee66:	7863      	ldrb	r3, [r4, #1]
 800ee68:	b95b      	cbnz	r3, 800ee82 <Network::Init(NetworkParamsStore*)+0x12a>
 800ee6a:	9b07      	ldr	r3, [sp, #28]
 800ee6c:	b9b3      	cbnz	r3, 800ee9c <Network::Init(NetworkParamsStore*)+0x144>
 800ee6e:	4620      	mov	r0, r4
 800ee70:	f7ff ff60 	bl	800ed34 <Network::SetDefaultIp()>
 800ee74:	6923      	ldr	r3, [r4, #16]
 800ee76:	69a2      	ldr	r2, [r4, #24]
 800ee78:	9307      	str	r3, [sp, #28]
 800ee7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800ee7e:	7863      	ldrb	r3, [r4, #1]
 800ee80:	b19b      	cbz	r3, 800eeaa <Network::Init(NetworkParamsStore*)+0x152>
 800ee82:	2101      	movs	r1, #1
 800ee84:	4628      	mov	r0, r5
 800ee86:	f7f9 fba4 	bl	80085d2 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ee8a:	e00e      	b.n	800eeaa <Network::Init(NetworkParamsStore*)+0x152>
 800ee8c:	4630      	mov	r0, r6
 800ee8e:	4946      	ldr	r1, [pc, #280]	; (800efa8 <Network::Init(NetworkParamsStore*)+0x250>)
 800ee90:	f7ff fefa 	bl	800ec88 <strncpy.constprop.0.isra.0>
 800ee94:	2300      	movs	r3, #0
 800ee96:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800ee9a:	e7e4      	b.n	800ee66 <Network::Init(NetworkParamsStore*)+0x10e>
 800ee9c:	69a1      	ldr	r1, [r4, #24]
 800ee9e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800eea2:	4053      	eors	r3, r2
 800eea4:	420b      	tst	r3, r1
 800eea6:	d000      	beq.n	800eeaa <Network::Init(NetworkParamsStore*)+0x152>
 800eea8:	9209      	str	r2, [sp, #36]	; 0x24
 800eeaa:	1ce3      	adds	r3, r4, #3
 800eeac:	f104 0901 	add.w	r9, r4, #1
 800eeb0:	9302      	str	r3, [sp, #8]
 800eeb2:	9300      	str	r3, [sp, #0]
 800eeb4:	4632      	mov	r2, r6
 800eeb6:	464b      	mov	r3, r9
 800eeb8:	4638      	mov	r0, r7
 800eeba:	a907      	add	r1, sp, #28
 800eebc:	f7fe fc98 	bl	800d7f0 <net_init>
 800eec0:	78e3      	ldrb	r3, [r4, #3]
 800eec2:	b11b      	cbz	r3, 800eecc <Network::Init(NetworkParamsStore*)+0x174>
 800eec4:	2104      	movs	r1, #4
 800eec6:	4628      	mov	r0, r5
 800eec8:	f7f9 fb83 	bl	80085d2 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800eecc:	f898 3014 	ldrb.w	r3, [r8, #20]
 800eed0:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800eed4:	9304      	str	r3, [sp, #16]
 800eed6:	233c      	movs	r3, #60	; 0x3c
 800eed8:	fb03 f30a 	mul.w	r3, r3, sl
 800eedc:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800efac <Network::Init(NetworkParamsStore*)+0x254>
 800eee0:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800efb0 <Network::Init(NetworkParamsStore*)+0x258>
 800eee4:	9303      	str	r3, [sp, #12]
 800eee6:	78e3      	ldrb	r3, [r4, #3]
 800eee8:	b95b      	cbnz	r3, 800ef02 <Network::Init(NetworkParamsStore*)+0x1aa>
 800eeea:	9b07      	ldr	r3, [sp, #28]
 800eeec:	4628      	mov	r0, r5
 800eeee:	6123      	str	r3, [r4, #16]
 800eef0:	9b08      	ldr	r3, [sp, #32]
 800eef2:	61a3      	str	r3, [r4, #24]
 800eef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eef6:	6163      	str	r3, [r4, #20]
 800eef8:	f7f9 fb69 	bl	80085ce <NetworkDisplay::ShowIp()>
 800eefc:	b00b      	add	sp, #44	; 0x2c
 800eefe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef02:	f1ba 0f00 	cmp.w	sl, #0
 800ef06:	d0f0      	beq.n	800eeea <Network::Init(NetworkParamsStore*)+0x192>
 800ef08:	9b04      	ldr	r3, [sp, #16]
 800ef0a:	2b00      	cmp	r3, #0
 800ef0c:	d0ed      	beq.n	800eeea <Network::Init(NetworkParamsStore*)+0x192>
 800ef0e:	2104      	movs	r1, #4
 800ef10:	f8d8 0000 	ldr.w	r0, [r8]
 800ef14:	f001 feae 	bl	8010c74 <LedBlink::SetMode(ledblink::Mode)>
 800ef18:	2103      	movs	r1, #3
 800ef1a:	4628      	mov	r0, r5
 800ef1c:	f7f9 fb59 	bl	80085d2 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ef20:	2000      	movs	r0, #0
 800ef22:	f002 f94f 	bl	80111c4 <time>
 800ef26:	9005      	str	r0, [sp, #20]
 800ef28:	2000      	movs	r0, #0
 800ef2a:	f002 f94b 	bl	80111c4 <time>
 800ef2e:	9b05      	ldr	r3, [sp, #20]
 800ef30:	1ac0      	subs	r0, r0, r3
 800ef32:	9b03      	ldr	r3, [sp, #12]
 800ef34:	4298      	cmp	r0, r3
 800ef36:	da1a      	bge.n	800ef6e <Network::Init(NetworkParamsStore*)+0x216>
 800ef38:	f8d8 3000 	ldr.w	r3, [r8]
 800ef3c:	491d      	ldr	r1, [pc, #116]	; (800efb4 <Network::Init(NetworkParamsStore*)+0x25c>)
 800ef3e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800ef42:	f1bc 0f00 	cmp.w	ip, #0
 800ef46:	d0ef      	beq.n	800ef28 <Network::Init(NetworkParamsStore*)+0x1d0>
 800ef48:	6808      	ldr	r0, [r1, #0]
 800ef4a:	695a      	ldr	r2, [r3, #20]
 800ef4c:	1a80      	subs	r0, r0, r2
 800ef4e:	4584      	cmp	ip, r0
 800ef50:	d8ea      	bhi.n	800ef28 <Network::Init(NetworkParamsStore*)+0x1d0>
 800ef52:	6808      	ldr	r0, [r1, #0]
 800ef54:	6158      	str	r0, [r3, #20]
 800ef56:	6918      	ldr	r0, [r3, #16]
 800ef58:	2801      	cmp	r0, #1
 800ef5a:	f080 0201 	eor.w	r2, r0, #1
 800ef5e:	611a      	str	r2, [r3, #16]
 800ef60:	bf16      	itet	ne
 800ef62:	2301      	movne	r3, #1
 800ef64:	f8cb 0014 	streq.w	r0, [fp, #20]
 800ef68:	f8cb 3010 	strne.w	r3, [fp, #16]
 800ef6c:	e7dc      	b.n	800ef28 <Network::Init(NetworkParamsStore*)+0x1d0>
 800ef6e:	2101      	movs	r1, #1
 800ef70:	4628      	mov	r0, r5
 800ef72:	f7f9 fb2e 	bl	80085d2 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ef76:	2101      	movs	r1, #1
 800ef78:	f8d8 0000 	ldr.w	r0, [r8]
 800ef7c:	f001 fe7a 	bl	8010c74 <LedBlink::SetMode(ledblink::Mode)>
 800ef80:	2301      	movs	r3, #1
 800ef82:	7063      	strb	r3, [r4, #1]
 800ef84:	2300      	movs	r3, #0
 800ef86:	70e3      	strb	r3, [r4, #3]
 800ef88:	9b02      	ldr	r3, [sp, #8]
 800ef8a:	4632      	mov	r2, r6
 800ef8c:	9300      	str	r3, [sp, #0]
 800ef8e:	4638      	mov	r0, r7
 800ef90:	464b      	mov	r3, r9
 800ef92:	a907      	add	r1, sp, #28
 800ef94:	f7fe fc2c 	bl	800d7f0 <net_init>
 800ef98:	7863      	ldrb	r3, [r4, #1]
 800ef9a:	2b00      	cmp	r3, #0
 800ef9c:	d0a3      	beq.n	800eee6 <Network::Init(NetworkParamsStore*)+0x18e>
 800ef9e:	e7a4      	b.n	800eeea <Network::Init(NetworkParamsStore*)+0x192>
 800efa0:	20009074 	andcs	r9, r0, r4, ror r0
 800efa4:	08014700 	stmdaeq	r1, {r8, r9, sl, lr}
 800efa8:	20009089 	andcs	r9, r0, r9, lsl #1
 800efac:	2000978c 	andcs	r9, r0, ip, lsl #15
 800efb0:	40011000 	andmi	r1, r1, r0
 800efb4:	200097a4 	andcs	r9, r0, r4, lsr #15

0800efb8 <Network::Print()>:
 800efb8:	b530      	push	{r4, r5, lr}
 800efba:	4604      	mov	r4, r0
 800efbc:	b085      	sub	sp, #20
 800efbe:	4832      	ldr	r0, [pc, #200]	; (800f088 <Network::Print()+0xd0>)
 800efc0:	f7f9 fe12 	bl	8008be8 <printf>
 800efc4:	f104 011c 	add.w	r1, r4, #28
 800efc8:	4830      	ldr	r0, [pc, #192]	; (800f08c <Network::Print()+0xd4>)
 800efca:	f7f9 fe0d 	bl	8008be8 <printf>
 800efce:	6861      	ldr	r1, [r4, #4]
 800efd0:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800efd4:	482e      	ldr	r0, [pc, #184]	; (800f090 <Network::Print()+0xd8>)
 800efd6:	f7f9 fe07 	bl	8008be8 <printf>
 800efda:	69a0      	ldr	r0, [r4, #24]
 800efdc:	f7f8 ff62 	bl	8007ea4 <__popcountsi2>
 800efe0:	6925      	ldr	r5, [r4, #16]
 800efe2:	9001      	str	r0, [sp, #4]
 800efe4:	0e2b      	lsrs	r3, r5, #24
 800efe6:	9300      	str	r3, [sp, #0]
 800efe8:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800efec:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800eff0:	b2e9      	uxtb	r1, r5
 800eff2:	4828      	ldr	r0, [pc, #160]	; (800f094 <Network::Print()+0xdc>)
 800eff4:	f7f9 fdf8 	bl	8008be8 <printf>
 800eff8:	69a1      	ldr	r1, [r4, #24]
 800effa:	4827      	ldr	r0, [pc, #156]	; (800f098 <Network::Print()+0xe0>)
 800effc:	0e0b      	lsrs	r3, r1, #24
 800effe:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f002:	9300      	str	r3, [sp, #0]
 800f004:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f008:	b2c9      	uxtb	r1, r1
 800f00a:	f7f9 fded 	bl	8008be8 <printf>
 800f00e:	6961      	ldr	r1, [r4, #20]
 800f010:	4822      	ldr	r0, [pc, #136]	; (800f09c <Network::Print()+0xe4>)
 800f012:	0e0b      	lsrs	r3, r1, #24
 800f014:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f018:	9300      	str	r3, [sp, #0]
 800f01a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f01e:	b2c9      	uxtb	r1, r1
 800f020:	f7f9 fde2 	bl	8008be8 <printf>
 800f024:	69a3      	ldr	r3, [r4, #24]
 800f026:	6921      	ldr	r1, [r4, #16]
 800f028:	481d      	ldr	r0, [pc, #116]	; (800f0a0 <Network::Print()+0xe8>)
 800f02a:	ea61 0103 	orn	r1, r1, r3
 800f02e:	0e0b      	lsrs	r3, r1, #24
 800f030:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f034:	9300      	str	r3, [sp, #0]
 800f036:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f03a:	b2c9      	uxtb	r1, r1
 800f03c:	f7f9 fdd4 	bl	8008be8 <printf>
 800f040:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800f044:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800f048:	9302      	str	r3, [sp, #8]
 800f04a:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800f04e:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800f052:	9301      	str	r3, [sp, #4]
 800f054:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800f058:	4812      	ldr	r0, [pc, #72]	; (800f0a4 <Network::Print()+0xec>)
 800f05a:	9300      	str	r3, [sp, #0]
 800f05c:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800f060:	f7f9 fdc2 	bl	8008be8 <printf>
 800f064:	4b10      	ldr	r3, [pc, #64]	; (800f0a8 <Network::Print()+0xf0>)
 800f066:	681b      	ldr	r3, [r3, #0]
 800f068:	78da      	ldrb	r2, [r3, #3]
 800f06a:	b952      	cbnz	r2, 800f082 <Network::Print()+0xca>
 800f06c:	785b      	ldrb	r3, [r3, #1]
 800f06e:	2b00      	cmp	r3, #0
 800f070:	bf14      	ite	ne
 800f072:	2144      	movne	r1, #68	; 0x44
 800f074:	2153      	moveq	r1, #83	; 0x53
 800f076:	480d      	ldr	r0, [pc, #52]	; (800f0ac <Network::Print()+0xf4>)
 800f078:	b005      	add	sp, #20
 800f07a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f07e:	f7f9 bdb3 	b.w	8008be8 <printf>
 800f082:	215a      	movs	r1, #90	; 0x5a
 800f084:	e7f7      	b.n	800f076 <Network::Print()+0xbe>
 800f086:	bf00      	nop
 800f088:	0801470c 	stmdaeq	r1, {r2, r3, r8, r9, sl, lr}
 800f08c:	08014715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, lr}
 800f090:	08014726 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, lr}
 800f094:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}
 800f098:	08014758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, lr}
 800f09c:	08014772 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, lr}
 800f0a0:	0801478c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, lr}
 800f0a4:	080147a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, lr}
 800f0a8:	20009070 	andcs	r9, r0, r0, ror r0
 800f0ac:	080147d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, lr}

0800f0b0 <Network::TcpBegin(unsigned short)>:
 800f0b0:	4608      	mov	r0, r1
 800f0b2:	f7fe bf73 	b.w	800df9c <tcp_begin>

0800f0b6 <Network::TcpRead(int, unsigned char const**)>:
 800f0b6:	4608      	mov	r0, r1
 800f0b8:	4611      	mov	r1, r2
 800f0ba:	f7fe bfad 	b.w	800e018 <tcp_read>

0800f0be <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800f0be:	4608      	mov	r0, r1
 800f0c0:	4611      	mov	r1, r2
 800f0c2:	461a      	mov	r2, r3
 800f0c4:	f7fe bf84 	b.w	800dfd0 <tcp_write>

0800f0c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800f0c8:	4b06      	ldr	r3, [pc, #24]	; (800f0e4 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800f0ca:	b510      	push	{r4, lr}
 800f0cc:	225e      	movs	r2, #94	; 0x5e
 800f0ce:	4604      	mov	r4, r0
 800f0d0:	6001      	str	r1, [r0, #0]
 800f0d2:	2100      	movs	r1, #0
 800f0d4:	4618      	mov	r0, r3
 800f0d6:	f001 ff69 	bl	8010fac <memset>
 800f0da:	2201      	movs	r2, #1
 800f0dc:	7502      	strb	r2, [r0, #20]
 800f0de:	4620      	mov	r0, r4
 800f0e0:	bd10      	pop	{r4, pc}
 800f0e2:	bf00      	nop
 800f0e4:	20009074 	andcs	r9, r0, r4, ror r0

0800f0e8 <NetworkParams::Load()>:
 800f0e8:	b508      	push	{r3, lr}
 800f0ea:	2300      	movs	r3, #0
 800f0ec:	4905      	ldr	r1, [pc, #20]	; (800f104 <NetworkParams::Load()+0x1c>)
 800f0ee:	6800      	ldr	r0, [r0, #0]
 800f0f0:	700b      	strb	r3, [r1, #0]
 800f0f2:	704b      	strb	r3, [r1, #1]
 800f0f4:	708b      	strb	r3, [r1, #2]
 800f0f6:	70cb      	strb	r3, [r1, #3]
 800f0f8:	b118      	cbz	r0, 800f102 <NetworkParams::Load()+0x1a>
 800f0fa:	6803      	ldr	r3, [r0, #0]
 800f0fc:	68db      	ldr	r3, [r3, #12]
 800f0fe:	4798      	blx	r3
 800f100:	2001      	movs	r0, #1
 800f102:	bd08      	pop	{r3, pc}
 800f104:	20009074 	andcs	r9, r0, r4, ror r0

0800f108 <NetworkParams::Load(char const*, unsigned int)>:
 800f108:	6803      	ldr	r3, [r0, #0]
 800f10a:	b1eb      	cbz	r3, 800f148 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800f10c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f10e:	2300      	movs	r3, #0
 800f110:	460e      	mov	r6, r1
 800f112:	4617      	mov	r7, r2
 800f114:	4605      	mov	r5, r0
 800f116:	4c0d      	ldr	r4, [pc, #52]	; (800f14c <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800f118:	4602      	mov	r2, r0
 800f11a:	490d      	ldr	r1, [pc, #52]	; (800f150 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800f11c:	4668      	mov	r0, sp
 800f11e:	7023      	strb	r3, [r4, #0]
 800f120:	7063      	strb	r3, [r4, #1]
 800f122:	70a3      	strb	r3, [r4, #2]
 800f124:	70e3      	strb	r3, [r4, #3]
 800f126:	f001 f8d5 	bl	80102d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f12a:	463a      	mov	r2, r7
 800f12c:	4631      	mov	r1, r6
 800f12e:	4668      	mov	r0, sp
 800f130:	f001 f8d4 	bl	80102dc <ReadConfigFile::Read(char const*, unsigned int)>
 800f134:	6828      	ldr	r0, [r5, #0]
 800f136:	4621      	mov	r1, r4
 800f138:	6803      	ldr	r3, [r0, #0]
 800f13a:	689b      	ldr	r3, [r3, #8]
 800f13c:	4798      	blx	r3
 800f13e:	4668      	mov	r0, sp
 800f140:	f001 f8cb 	bl	80102da <ReadConfigFile::~ReadConfigFile()>
 800f144:	b003      	add	sp, #12
 800f146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f148:	4770      	bx	lr
 800f14a:	bf00      	nop
 800f14c:	20009074 	andcs	r9, r0, r4, ror r0
 800f150:	0800f285 	stmdaeq	r0, {r0, r2, r7, r9, ip, sp, lr, pc}

0800f154 <NetworkParams::callbackFunction(char const*)>:
 800f154:	b530      	push	{r4, r5, lr}
 800f156:	460c      	mov	r4, r1
 800f158:	b085      	sub	sp, #20
 800f15a:	4620      	mov	r0, r4
 800f15c:	4942      	ldr	r1, [pc, #264]	; (800f268 <NetworkParams::callbackFunction(char const*)+0x114>)
 800f15e:	f10d 0207 	add.w	r2, sp, #7
 800f162:	f001 f9f2 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f166:	b980      	cbnz	r0, 800f18a <NetworkParams::callbackFunction(char const*)+0x36>
 800f168:	4940      	ldr	r1, [pc, #256]	; (800f26c <NetworkParams::callbackFunction(char const*)+0x118>)
 800f16a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f16e:	680b      	ldr	r3, [r1, #0]
 800f170:	b142      	cbz	r2, 800f184 <NetworkParams::callbackFunction(char const*)+0x30>
 800f172:	f023 0301 	bic.w	r3, r3, #1
 800f176:	3a00      	subs	r2, #0
 800f178:	bf18      	it	ne
 800f17a:	2201      	movne	r2, #1
 800f17c:	600b      	str	r3, [r1, #0]
 800f17e:	750a      	strb	r2, [r1, #20]
 800f180:	b005      	add	sp, #20
 800f182:	bd30      	pop	{r4, r5, pc}
 800f184:	f043 0301 	orr.w	r3, r3, #1
 800f188:	e7f5      	b.n	800f176 <NetworkParams::callbackFunction(char const*)+0x22>
 800f18a:	4620      	mov	r0, r4
 800f18c:	4938      	ldr	r1, [pc, #224]	; (800f270 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800f18e:	f10d 0207 	add.w	r2, sp, #7
 800f192:	f001 f9da 	bl	801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f196:	b988      	cbnz	r0, 800f1bc <NetworkParams::callbackFunction(char const*)+0x68>
 800f198:	4a34      	ldr	r2, [pc, #208]	; (800f26c <NetworkParams::callbackFunction(char const*)+0x118>)
 800f19a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f19e:	6813      	ldr	r3, [r2, #0]
 800f1a0:	1e4d      	subs	r5, r1, #1
 800f1a2:	2d04      	cmp	r5, #4
 800f1a4:	bf97      	itett	ls
 800f1a6:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f1aa:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f1ae:	6013      	strls	r3, [r2, #0]
 800f1b0:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800f1b4:	bf84      	itt	hi
 800f1b6:	6013      	strhi	r3, [r2, #0]
 800f1b8:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800f1bc:	4620      	mov	r0, r4
 800f1be:	492d      	ldr	r1, [pc, #180]	; (800f274 <NetworkParams::callbackFunction(char const*)+0x120>)
 800f1c0:	aa02      	add	r2, sp, #8
 800f1c2:	f001 f93b 	bl	801043c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f1c6:	b9d0      	cbnz	r0, 800f1fe <NetworkParams::callbackFunction(char const*)+0xaa>
 800f1c8:	9b02      	ldr	r3, [sp, #8]
 800f1ca:	b2d9      	uxtb	r1, r3
 800f1cc:	29ac      	cmp	r1, #172	; 0xac
 800f1ce:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f1d2:	d00a      	beq.n	800f1ea <NetworkParams::callbackFunction(char const*)+0x96>
 800f1d4:	29c0      	cmp	r1, #192	; 0xc0
 800f1d6:	d00c      	beq.n	800f1f2 <NetworkParams::callbackFunction(char const*)+0x9e>
 800f1d8:	290a      	cmp	r1, #10
 800f1da:	d10d      	bne.n	800f1f8 <NetworkParams::callbackFunction(char const*)+0xa4>
 800f1dc:	4a23      	ldr	r2, [pc, #140]	; (800f26c <NetworkParams::callbackFunction(char const*)+0x118>)
 800f1de:	6053      	str	r3, [r2, #4]
 800f1e0:	6813      	ldr	r3, [r2, #0]
 800f1e2:	f043 0302 	orr.w	r3, r3, #2
 800f1e6:	6013      	str	r3, [r2, #0]
 800f1e8:	e7ca      	b.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f1ea:	3a10      	subs	r2, #16
 800f1ec:	2a0f      	cmp	r2, #15
 800f1ee:	d8c7      	bhi.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f1f0:	e7f4      	b.n	800f1dc <NetworkParams::callbackFunction(char const*)+0x88>
 800f1f2:	2aa8      	cmp	r2, #168	; 0xa8
 800f1f4:	d1c4      	bne.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f1f6:	e7f1      	b.n	800f1dc <NetworkParams::callbackFunction(char const*)+0x88>
 800f1f8:	2b00      	cmp	r3, #0
 800f1fa:	d0ef      	beq.n	800f1dc <NetworkParams::callbackFunction(char const*)+0x88>
 800f1fc:	e7c0      	b.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f1fe:	4620      	mov	r0, r4
 800f200:	491d      	ldr	r1, [pc, #116]	; (800f278 <NetworkParams::callbackFunction(char const*)+0x124>)
 800f202:	aa02      	add	r2, sp, #8
 800f204:	f001 f91a 	bl	801043c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f208:	b970      	cbnz	r0, 800f228 <NetworkParams::callbackFunction(char const*)+0xd4>
 800f20a:	9a02      	ldr	r2, [sp, #8]
 800f20c:	2a00      	cmp	r2, #0
 800f20e:	d0b7      	beq.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f210:	ba13      	rev	r3, r2
 800f212:	43d9      	mvns	r1, r3
 800f214:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800f218:	d1b2      	bne.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f21a:	4b14      	ldr	r3, [pc, #80]	; (800f26c <NetworkParams::callbackFunction(char const*)+0x118>)
 800f21c:	609a      	str	r2, [r3, #8]
 800f21e:	681a      	ldr	r2, [r3, #0]
 800f220:	f042 0204 	orr.w	r2, r2, #4
 800f224:	601a      	str	r2, [r3, #0]
 800f226:	e7ab      	b.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f228:	4620      	mov	r0, r4
 800f22a:	4914      	ldr	r1, [pc, #80]	; (800f27c <NetworkParams::callbackFunction(char const*)+0x128>)
 800f22c:	aa02      	add	r2, sp, #8
 800f22e:	f001 f905 	bl	801043c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f232:	4d0e      	ldr	r5, [pc, #56]	; (800f26c <NetworkParams::callbackFunction(char const*)+0x118>)
 800f234:	b930      	cbnz	r0, 800f244 <NetworkParams::callbackFunction(char const*)+0xf0>
 800f236:	9b02      	ldr	r3, [sp, #8]
 800f238:	60eb      	str	r3, [r5, #12]
 800f23a:	682b      	ldr	r3, [r5, #0]
 800f23c:	f043 0308 	orr.w	r3, r3, #8
 800f240:	602b      	str	r3, [r5, #0]
 800f242:	e79d      	b.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f244:	233f      	movs	r3, #63	; 0x3f
 800f246:	4620      	mov	r0, r4
 800f248:	9303      	str	r3, [sp, #12]
 800f24a:	490d      	ldr	r1, [pc, #52]	; (800f280 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800f24c:	ab03      	add	r3, sp, #12
 800f24e:	f105 0215 	add.w	r2, r5, #21
 800f252:	f001 f877 	bl	8010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f256:	2800      	cmp	r0, #0
 800f258:	d192      	bne.n	800f180 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f25a:	9b03      	ldr	r3, [sp, #12]
 800f25c:	442b      	add	r3, r5
 800f25e:	7558      	strb	r0, [r3, #21]
 800f260:	682b      	ldr	r3, [r5, #0]
 800f262:	f043 0320 	orr.w	r3, r3, #32
 800f266:	e7eb      	b.n	800f240 <NetworkParams::callbackFunction(char const*)+0xec>
 800f268:	0801482a 	stmdaeq	r1, {r1, r3, r5, fp, lr}
 800f26c:	20009074 	andcs	r9, r0, r4, ror r0
 800f270:	08014808 	stmdaeq	r1, {r3, fp, lr}
 800f274:	080147ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, lr}
 800f278:	08014821 	stmdaeq	r1, {r0, r5, fp, lr}
 800f27c:	080147f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f280:	08014818 	stmdaeq	r1, {r3, r4, fp, lr}

0800f284 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800f284:	f7ff bf66 	b.w	800f154 <NetworkParams::callbackFunction(char const*)>

0800f288 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800f288:	b530      	push	{r4, r5, lr}
 800f28a:	4614      	mov	r4, r2
 800f28c:	461d      	mov	r5, r3
 800f28e:	b087      	sub	sp, #28
 800f290:	2900      	cmp	r1, #0
 800f292:	d040      	beq.n	800f316 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800f294:	225e      	movs	r2, #94	; 0x5e
 800f296:	4871      	ldr	r0, [pc, #452]	; (800f45c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f298:	f001 fe71 	bl	8010f7e <memmove>
 800f29c:	4622      	mov	r2, r4
 800f29e:	462b      	mov	r3, r5
 800f2a0:	496f      	ldr	r1, [pc, #444]	; (800f460 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800f2a2:	a803      	add	r0, sp, #12
 800f2a4:	f000 ff76 	bl	8010194 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f2a8:	4c6c      	ldr	r4, [pc, #432]	; (800f45c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f2aa:	6823      	ldr	r3, [r4, #0]
 800f2ac:	0799      	lsls	r1, r3, #30
 800f2ae:	bf5f      	itttt	pl
 800f2b0:	4a6c      	ldrpl	r2, [pc, #432]	; (800f464 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f2b2:	6812      	ldrpl	r2, [r2, #0]
 800f2b4:	6912      	ldrpl	r2, [r2, #16]
 800f2b6:	6062      	strpl	r2, [r4, #4]
 800f2b8:	075a      	lsls	r2, r3, #29
 800f2ba:	bf5f      	itttt	pl
 800f2bc:	4a69      	ldrpl	r2, [pc, #420]	; (800f464 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f2be:	6812      	ldrpl	r2, [r2, #0]
 800f2c0:	6992      	ldrpl	r2, [r2, #24]
 800f2c2:	60a2      	strpl	r2, [r4, #8]
 800f2c4:	071d      	lsls	r5, r3, #28
 800f2c6:	bf5f      	itttt	pl
 800f2c8:	4a66      	ldrpl	r2, [pc, #408]	; (800f464 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f2ca:	6812      	ldrpl	r2, [r2, #0]
 800f2cc:	6952      	ldrpl	r2, [r2, #20]
 800f2ce:	60e2      	strpl	r2, [r4, #12]
 800f2d0:	0698      	lsls	r0, r3, #26
 800f2d2:	d40c      	bmi.n	800f2ee <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800f2d4:	223f      	movs	r2, #63	; 0x3f
 800f2d6:	4b63      	ldr	r3, [pc, #396]	; (800f464 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f2d8:	4863      	ldr	r0, [pc, #396]	; (800f468 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f2da:	681b      	ldr	r3, [r3, #0]
 800f2dc:	331b      	adds	r3, #27
 800f2de:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f2e2:	b9f1      	cbnz	r1, 800f322 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800f2e4:	f001 fe62 	bl	8010fac <memset>
 800f2e8:	2300      	movs	r3, #0
 800f2ea:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800f2ee:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f2f2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f2f6:	42a9      	cmp	r1, r5
 800f2f8:	d226      	bcs.n	800f348 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800f2fa:	9803      	ldr	r0, [sp, #12]
 800f2fc:	1a6d      	subs	r5, r5, r1
 800f2fe:	4408      	add	r0, r1
 800f300:	6821      	ldr	r1, [r4, #0]
 800f302:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f306:	07c9      	lsls	r1, r1, #31
 800f308:	7d23      	ldrb	r3, [r4, #20]
 800f30a:	d40f      	bmi.n	800f32c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800f30c:	b97a      	cbnz	r2, 800f32e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800f30e:	9300      	str	r3, [sp, #0]
 800f310:	4a56      	ldr	r2, [pc, #344]	; (800f46c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f312:	4b57      	ldr	r3, [pc, #348]	; (800f470 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f314:	e00e      	b.n	800f334 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800f316:	6800      	ldr	r0, [r0, #0]
 800f318:	4950      	ldr	r1, [pc, #320]	; (800f45c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f31a:	6803      	ldr	r3, [r0, #0]
 800f31c:	68db      	ldr	r3, [r3, #12]
 800f31e:	4798      	blx	r3
 800f320:	e7bc      	b.n	800f29c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800f322:	3a01      	subs	r2, #1
 800f324:	f800 1b01 	strb.w	r1, [r0], #1
 800f328:	d1d9      	bne.n	800f2de <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800f32a:	e7dd      	b.n	800f2e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800f32c:	b30a      	cbz	r2, 800f372 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800f32e:	9300      	str	r3, [sp, #0]
 800f330:	4a50      	ldr	r2, [pc, #320]	; (800f474 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f332:	4b4f      	ldr	r3, [pc, #316]	; (800f470 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f334:	4629      	mov	r1, r5
 800f336:	f7f9 fc67 	bl	8008c08 <snprintf>
 800f33a:	4285      	cmp	r5, r0
 800f33c:	bfa2      	ittt	ge
 800f33e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f342:	18c0      	addge	r0, r0, r3
 800f344:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f348:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f34c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f350:	42a9      	cmp	r1, r5
 800f352:	d221      	bcs.n	800f398 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800f354:	9803      	ldr	r0, [sp, #12]
 800f356:	1a6d      	subs	r5, r5, r1
 800f358:	4408      	add	r0, r1
 800f35a:	6821      	ldr	r1, [r4, #0]
 800f35c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f360:	05c9      	lsls	r1, r1, #23
 800f362:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800f366:	d408      	bmi.n	800f37a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800f368:	b94a      	cbnz	r2, 800f37e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800f36a:	9300      	str	r3, [sp, #0]
 800f36c:	4a3f      	ldr	r2, [pc, #252]	; (800f46c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f36e:	4b42      	ldr	r3, [pc, #264]	; (800f478 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f370:	e008      	b.n	800f384 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800f372:	9300      	str	r3, [sp, #0]
 800f374:	4a41      	ldr	r2, [pc, #260]	; (800f47c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f376:	4b3e      	ldr	r3, [pc, #248]	; (800f470 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f378:	e7dc      	b.n	800f334 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800f37a:	2a00      	cmp	r2, #0
 800f37c:	d03e      	beq.n	800f3fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800f37e:	9300      	str	r3, [sp, #0]
 800f380:	4a3c      	ldr	r2, [pc, #240]	; (800f474 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f382:	4b3d      	ldr	r3, [pc, #244]	; (800f478 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f384:	4629      	mov	r1, r5
 800f386:	f7f9 fc3f 	bl	8008c08 <snprintf>
 800f38a:	4285      	cmp	r5, r0
 800f38c:	bfa2      	ittt	ge
 800f38e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f392:	18c0      	addge	r0, r0, r3
 800f394:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f398:	4939      	ldr	r1, [pc, #228]	; (800f480 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800f39a:	a803      	add	r0, sp, #12
 800f39c:	f000 ff80 	bl	80102a0 <PropertiesBuilder::AddComment(char const*)>
 800f3a0:	6823      	ldr	r3, [r4, #0]
 800f3a2:	6862      	ldr	r2, [r4, #4]
 800f3a4:	4937      	ldr	r1, [pc, #220]	; (800f484 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800f3a6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800f3aa:	a803      	add	r0, sp, #12
 800f3ac:	f000 ff34 	bl	8010218 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f3b0:	6823      	ldr	r3, [r4, #0]
 800f3b2:	68a2      	ldr	r2, [r4, #8]
 800f3b4:	4934      	ldr	r1, [pc, #208]	; (800f488 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800f3b6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800f3ba:	a803      	add	r0, sp, #12
 800f3bc:	f000 ff2c 	bl	8010218 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f3c0:	6823      	ldr	r3, [r4, #0]
 800f3c2:	4932      	ldr	r1, [pc, #200]	; (800f48c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800f3c4:	68e2      	ldr	r2, [r4, #12]
 800f3c6:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800f3ca:	a803      	add	r0, sp, #12
 800f3cc:	f000 ff24 	bl	8010218 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f3d0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f3d4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f3d8:	42a9      	cmp	r1, r5
 800f3da:	d221      	bcs.n	800f420 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800f3dc:	6823      	ldr	r3, [r4, #0]
 800f3de:	9803      	ldr	r0, [sp, #12]
 800f3e0:	f013 0f20 	tst.w	r3, #32
 800f3e4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f3e8:	4b1f      	ldr	r3, [pc, #124]	; (800f468 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f3ea:	4408      	add	r0, r1
 800f3ec:	eba5 0501 	sub.w	r5, r5, r1
 800f3f0:	d108      	bne.n	800f404 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800f3f2:	b942      	cbnz	r2, 800f406 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800f3f4:	9300      	str	r3, [sp, #0]
 800f3f6:	4a26      	ldr	r2, [pc, #152]	; (800f490 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800f3f8:	4b26      	ldr	r3, [pc, #152]	; (800f494 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f3fa:	e007      	b.n	800f40c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800f3fc:	9300      	str	r3, [sp, #0]
 800f3fe:	4a1f      	ldr	r2, [pc, #124]	; (800f47c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f400:	4b1d      	ldr	r3, [pc, #116]	; (800f478 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f402:	e7bf      	b.n	800f384 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800f404:	b32a      	cbz	r2, 800f452 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800f406:	9300      	str	r3, [sp, #0]
 800f408:	4a23      	ldr	r2, [pc, #140]	; (800f498 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800f40a:	4b22      	ldr	r3, [pc, #136]	; (800f494 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f40c:	4629      	mov	r1, r5
 800f40e:	f7f9 fbfb 	bl	8008c08 <snprintf>
 800f412:	4285      	cmp	r5, r0
 800f414:	bfa2      	ittt	ge
 800f416:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f41a:	18c0      	addge	r0, r0, r3
 800f41c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f420:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f424:	b17b      	cbz	r3, 800f446 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800f426:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f42a:	9b03      	ldr	r3, [sp, #12]
 800f42c:	4413      	add	r3, r2
 800f42e:	227d      	movs	r2, #125	; 0x7d
 800f430:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f434:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f438:	9903      	ldr	r1, [sp, #12]
 800f43a:	54ca      	strb	r2, [r1, r3]
 800f43c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f440:	3301      	adds	r3, #1
 800f442:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f446:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f44a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f44c:	601a      	str	r2, [r3, #0]
 800f44e:	b007      	add	sp, #28
 800f450:	bd30      	pop	{r4, r5, pc}
 800f452:	9300      	str	r3, [sp, #0]
 800f454:	4a11      	ldr	r2, [pc, #68]	; (800f49c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800f456:	4b0f      	ldr	r3, [pc, #60]	; (800f494 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f458:	e7d8      	b.n	800f40c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800f45a:	bf00      	nop
 800f45c:	20009074 	andcs	r9, r0, r4, ror r0
 800f460:	08014833 	stmdaeq	r1, {r0, r1, r4, r5, fp, lr}
 800f464:	20009070 	andcs	r9, r0, r0, ror r0
 800f468:	20009089 	andcs	r9, r0, r9, lsl #1
 800f46c:	080132b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp}
 800f470:	0801482a 	stmdaeq	r1, {r1, r3, r5, fp, lr}
 800f474:	080132b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp}
 800f478:	08014808 	stmdaeq	r1, {r3, fp, lr}
 800f47c:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}
 800f480:	080147e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, sl, lr}
 800f484:	080147ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, lr}
 800f488:	08014821 	stmdaeq	r1, {r0, r5, fp, lr}
 800f48c:	080147f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f490:	080132cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, ip, sp}
 800f494:	08014818 	stmdaeq	r1, {r3, r4, fp, lr}
 800f498:	080132c1 	stmdaeq	r1, {r0, r6, r7, r9, ip, sp}
 800f49c:	080132cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, ip, sp}

0800f4a0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800f4a0:	b513      	push	{r0, r1, r4, lr}
 800f4a2:	6804      	ldr	r4, [r0, #0]
 800f4a4:	b914      	cbnz	r4, 800f4ac <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800f4a6:	601c      	str	r4, [r3, #0]
 800f4a8:	b002      	add	sp, #8
 800f4aa:	bd10      	pop	{r4, pc}
 800f4ac:	9300      	str	r3, [sp, #0]
 800f4ae:	4613      	mov	r3, r2
 800f4b0:	460a      	mov	r2, r1
 800f4b2:	2100      	movs	r1, #0
 800f4b4:	f7ff fee8 	bl	800f288 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800f4b8:	e7f6      	b.n	800f4a8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800f4ba <NetworkParams::Dump()>:
 800f4ba:	4770      	bx	lr

0800f4bc <memcpy.isra.0>:
 800f4bc:	3801      	subs	r0, #1
 800f4be:	440a      	add	r2, r1
 800f4c0:	4291      	cmp	r1, r2
 800f4c2:	d100      	bne.n	800f4c6 <memcpy.isra.0+0xa>
 800f4c4:	4770      	bx	lr
 800f4c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f4ca:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f4ce:	e7f7      	b.n	800f4c0 <memcpy.isra.0+0x4>

0800f4d0 <arp_announce>:
 800f4d0:	4803      	ldr	r0, [pc, #12]	; (800f4e0 <arp_announce+0x10>)
 800f4d2:	69c3      	ldr	r3, [r0, #28]
 800f4d4:	b113      	cbz	r3, 800f4dc <arp_announce+0xc>
 800f4d6:	212a      	movs	r1, #42	; 0x2a
 800f4d8:	f002 bbec 	b.w	8011cb4 <emac_eth_send>
 800f4dc:	4770      	bx	lr
 800f4de:	bf00      	nop
 800f4e0:	200090d4 	ldrdcs	r9, [r0], -r4

0800f4e4 <arp_handle_request>:
 800f4e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f4e6:	2204      	movs	r2, #4
 800f4e8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800f4ec:	4604      	mov	r4, r0
 800f4ee:	eb0d 0002 	add.w	r0, sp, r2
 800f4f2:	f7ff ffe3 	bl	800f4bc <memcpy.isra.0>
 800f4f6:	4b0d      	ldr	r3, [pc, #52]	; (800f52c <arp_handle_request+0x48>)
 800f4f8:	9a01      	ldr	r2, [sp, #4]
 800f4fa:	69db      	ldr	r3, [r3, #28]
 800f4fc:	429a      	cmp	r2, r3
 800f4fe:	d113      	bne.n	800f528 <arp_handle_request+0x44>
 800f500:	2206      	movs	r2, #6
 800f502:	4d0b      	ldr	r5, [pc, #44]	; (800f530 <arp_handle_request+0x4c>)
 800f504:	18a1      	adds	r1, r4, r2
 800f506:	4628      	mov	r0, r5
 800f508:	f7ff ffd8 	bl	800f4bc <memcpy.isra.0>
 800f50c:	f104 0116 	add.w	r1, r4, #22
 800f510:	f105 0020 	add.w	r0, r5, #32
 800f514:	2206      	movs	r2, #6
 800f516:	f7ff ffd1 	bl	800f4bc <memcpy.isra.0>
 800f51a:	69e3      	ldr	r3, [r4, #28]
 800f51c:	212a      	movs	r1, #42	; 0x2a
 800f51e:	4628      	mov	r0, r5
 800f520:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800f524:	f002 fbc6 	bl	8011cb4 <emac_eth_send>
 800f528:	b003      	add	sp, #12
 800f52a:	bd30      	pop	{r4, r5, pc}
 800f52c:	200090d4 	ldrdcs	r9, [r0], -r4
 800f530:	20009100 	andcs	r9, r0, r0, lsl #2

0800f534 <arp_handle_reply>:
 800f534:	69c1      	ldr	r1, [r0, #28]
 800f536:	3016      	adds	r0, #22
 800f538:	f000 b8ac 	b.w	800f694 <arp_cache_update>

0800f53c <arp_init>:
 800f53c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f540:	4604      	mov	r4, r0
 800f542:	460d      	mov	r5, r1
 800f544:	f000 f88c 	bl	800f660 <arp_cache_init>
 800f548:	2206      	movs	r2, #6
 800f54a:	4621      	mov	r1, r4
 800f54c:	482e      	ldr	r0, [pc, #184]	; (800f608 <arp_init+0xcc>)
 800f54e:	682f      	ldr	r7, [r5, #0]
 800f550:	f7ff ffb4 	bl	800f4bc <memcpy.isra.0>
 800f554:	4b2d      	ldr	r3, [pc, #180]	; (800f60c <arp_init+0xd0>)
 800f556:	2507      	movs	r5, #7
 800f558:	461e      	mov	r6, r3
 800f55a:	22ff      	movs	r2, #255	; 0xff
 800f55c:	3d01      	subs	r5, #1
 800f55e:	d146      	bne.n	800f5ee <arp_init+0xb2>
 800f560:	4b2b      	ldr	r3, [pc, #172]	; (800f610 <arp_init+0xd4>)
 800f562:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800f614 <arp_init+0xd8>
 800f566:	2206      	movs	r2, #6
 800f568:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800f56c:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f570:	4621      	mov	r1, r4
 800f572:	4829      	ldr	r0, [pc, #164]	; (800f618 <arp_init+0xdc>)
 800f574:	82b3      	strh	r3, [r6, #20]
 800f576:	f7ff ffa1 	bl	800f4bc <memcpy.isra.0>
 800f57a:	2307      	movs	r3, #7
 800f57c:	4a27      	ldr	r2, [pc, #156]	; (800f61c <arp_init+0xe0>)
 800f57e:	61f7      	str	r7, [r6, #28]
 800f580:	3b01      	subs	r3, #1
 800f582:	d137      	bne.n	800f5f4 <arp_init+0xb8>
 800f584:	2206      	movs	r2, #6
 800f586:	4621      	mov	r1, r4
 800f588:	4825      	ldr	r0, [pc, #148]	; (800f620 <arp_init+0xe4>)
 800f58a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800f58e:	f7ff ff95 	bl	800f4bc <memcpy.isra.0>
 800f592:	4a24      	ldr	r2, [pc, #144]	; (800f624 <arp_init+0xe8>)
 800f594:	2306      	movs	r3, #6
 800f596:	4615      	mov	r5, r2
 800f598:	21ff      	movs	r1, #255	; 0xff
 800f59a:	3b01      	subs	r3, #1
 800f59c:	d22d      	bcs.n	800f5fa <arp_init+0xbe>
 800f59e:	4b1c      	ldr	r3, [pc, #112]	; (800f610 <arp_init+0xd4>)
 800f5a0:	2206      	movs	r2, #6
 800f5a2:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800f5a6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f5aa:	4621      	mov	r1, r4
 800f5ac:	481e      	ldr	r0, [pc, #120]	; (800f628 <arp_init+0xec>)
 800f5ae:	82ab      	strh	r3, [r5, #20]
 800f5b0:	f7ff ff84 	bl	800f4bc <memcpy.isra.0>
 800f5b4:	2307      	movs	r3, #7
 800f5b6:	2100      	movs	r1, #0
 800f5b8:	4a1c      	ldr	r2, [pc, #112]	; (800f62c <arp_init+0xf0>)
 800f5ba:	61ef      	str	r7, [r5, #28]
 800f5bc:	3b01      	subs	r3, #1
 800f5be:	d11f      	bne.n	800f600 <arp_init+0xc4>
 800f5c0:	2206      	movs	r2, #6
 800f5c2:	4d1b      	ldr	r5, [pc, #108]	; (800f630 <arp_init+0xf4>)
 800f5c4:	4621      	mov	r1, r4
 800f5c6:	18a8      	adds	r0, r5, r2
 800f5c8:	f7ff ff78 	bl	800f4bc <memcpy.isra.0>
 800f5cc:	4b10      	ldr	r3, [pc, #64]	; (800f610 <arp_init+0xd4>)
 800f5ce:	4621      	mov	r1, r4
 800f5d0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800f5d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 800f5d8:	f105 0016 	add.w	r0, r5, #22
 800f5dc:	2206      	movs	r2, #6
 800f5de:	82ab      	strh	r3, [r5, #20]
 800f5e0:	f7ff ff6c 	bl	800f4bc <memcpy.isra.0>
 800f5e4:	61ef      	str	r7, [r5, #28]
 800f5e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f5ea:	f7ff bf71 	b.w	800f4d0 <arp_announce>
 800f5ee:	f803 2b01 	strb.w	r2, [r3], #1
 800f5f2:	e7b3      	b.n	800f55c <arp_init+0x20>
 800f5f4:	f802 5b01 	strb.w	r5, [r2], #1
 800f5f8:	e7c2      	b.n	800f580 <arp_init+0x44>
 800f5fa:	f802 1b01 	strb.w	r1, [r2], #1
 800f5fe:	e7cc      	b.n	800f59a <arp_init+0x5e>
 800f600:	f802 1b01 	strb.w	r1, [r2], #1
 800f604:	e7da      	b.n	800f5bc <arp_init+0x80>
 800f606:	bf00      	nop
 800f608:	200090da 	ldrdcs	r9, [r0], -sl
 800f60c:	200090d4 	ldrdcs	r9, [r0], -r4
 800f610:	01000608 	tsteq	r0, r8, lsl #12
 800f614:	04060008 	streq	r0, [r6], #-8
 800f618:	200090ea 	andcs	r9, r0, sl, ror #1
 800f61c:	200090f4 	strdcs	r9, [r0], -r4
 800f620:	20009132 	andcs	r9, r0, r2, lsr r1
 800f624:	2000912c 	andcs	r9, r0, ip, lsr #2
 800f628:	20009142 	andcs	r9, r0, r2, asr #2
 800f62c:	2000914c 	andcs	r9, r0, ip, asr #2
 800f630:	20009100 	andcs	r9, r0, r0, lsl #2

0800f634 <arp_send_request>:
 800f634:	4b03      	ldr	r3, [pc, #12]	; (800f644 <arp_send_request+0x10>)
 800f636:	212a      	movs	r1, #42	; 0x2a
 800f638:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800f63c:	4618      	mov	r0, r3
 800f63e:	f002 bb39 	b.w	8011cb4 <emac_eth_send>
 800f642:	bf00      	nop
 800f644:	2000912c 	andcs	r9, r0, ip, lsr #2

0800f648 <arp_handle>:
 800f648:	8a83      	ldrh	r3, [r0, #20]
 800f64a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f64e:	d003      	beq.n	800f658 <arp_handle+0x10>
 800f650:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f654:	d002      	beq.n	800f65c <arp_handle+0x14>
 800f656:	4770      	bx	lr
 800f658:	f7ff bf44 	b.w	800f4e4 <arp_handle_request>
 800f65c:	f7ff bf6a 	b.w	800f534 <arp_handle_reply>

0800f660 <arp_cache_init>:
 800f660:	2300      	movs	r3, #0
 800f662:	4618      	mov	r0, r3
 800f664:	4a09      	ldr	r2, [pc, #36]	; (800f68c <arp_cache_init+0x2c>)
 800f666:	b510      	push	{r4, lr}
 800f668:	8013      	strh	r3, [r2, #0]
 800f66a:	4a09      	ldr	r2, [pc, #36]	; (800f690 <arp_cache_init+0x30>)
 800f66c:	4611      	mov	r1, r2
 800f66e:	f842 0c04 	str.w	r0, [r2, #-4]
 800f672:	1d94      	adds	r4, r2, #6
 800f674:	42a1      	cmp	r1, r4
 800f676:	d105      	bne.n	800f684 <arp_cache_init+0x24>
 800f678:	3303      	adds	r3, #3
 800f67a:	2b60      	cmp	r3, #96	; 0x60
 800f67c:	f102 020c 	add.w	r2, r2, #12
 800f680:	d1f4      	bne.n	800f66c <arp_cache_init+0xc>
 800f682:	bd10      	pop	{r4, pc}
 800f684:	f801 0b01 	strb.w	r0, [r1], #1
 800f688:	e7f4      	b.n	800f674 <arp_cache_init+0x14>
 800f68a:	bf00      	nop
 800f68c:	200092d8 	ldrdcs	r9, [r0], -r8
 800f690:	2000915c 	andcs	r9, r0, ip, asr r1

0800f694 <arp_cache_update>:
 800f694:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f696:	4e11      	ldr	r6, [pc, #68]	; (800f6dc <arp_cache_update+0x48>)
 800f698:	8833      	ldrh	r3, [r6, #0]
 800f69a:	2b20      	cmp	r3, #32
 800f69c:	d018      	beq.n	800f6d0 <arp_cache_update+0x3c>
 800f69e:	2400      	movs	r4, #0
 800f6a0:	220c      	movs	r2, #12
 800f6a2:	4d0f      	ldr	r5, [pc, #60]	; (800f6e0 <arp_cache_update+0x4c>)
 800f6a4:	b2a7      	uxth	r7, r4
 800f6a6:	42bb      	cmp	r3, r7
 800f6a8:	d80b      	bhi.n	800f6c2 <arp_cache_update+0x2e>
 800f6aa:	fb02 5203 	mla	r2, r2, r3, r5
 800f6ae:	1d84      	adds	r4, r0, #6
 800f6b0:	3203      	adds	r2, #3
 800f6b2:	42a0      	cmp	r0, r4
 800f6b4:	d10d      	bne.n	800f6d2 <arp_cache_update+0x3e>
 800f6b6:	220c      	movs	r2, #12
 800f6b8:	435a      	muls	r2, r3
 800f6ba:	3301      	adds	r3, #1
 800f6bc:	50a9      	str	r1, [r5, r2]
 800f6be:	8033      	strh	r3, [r6, #0]
 800f6c0:	e006      	b.n	800f6d0 <arp_cache_update+0x3c>
 800f6c2:	3401      	adds	r4, #1
 800f6c4:	fb02 5704 	mla	r7, r2, r4, r5
 800f6c8:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800f6cc:	428f      	cmp	r7, r1
 800f6ce:	d1e9      	bne.n	800f6a4 <arp_cache_update+0x10>
 800f6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6d2:	f810 7b01 	ldrb.w	r7, [r0], #1
 800f6d6:	f802 7f01 	strb.w	r7, [r2, #1]!
 800f6da:	e7ea      	b.n	800f6b2 <arp_cache_update+0x1e>
 800f6dc:	200092d8 	ldrdcs	r9, [r0], -r8
 800f6e0:	20009158 	andcs	r9, r0, r8, asr r1

0800f6e4 <arp_cache_lookup>:
 800f6e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f6e8:	2200      	movs	r2, #0
 800f6ea:	4606      	mov	r6, r0
 800f6ec:	460c      	mov	r4, r1
 800f6ee:	200c      	movs	r0, #12
 800f6f0:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800f778 <arp_cache_lookup+0x94>
 800f6f4:	fb00 f302 	mul.w	r3, r0, r2
 800f6f8:	f853 1008 	ldr.w	r1, [r3, r8]
 800f6fc:	42b1      	cmp	r1, r6
 800f6fe:	d10d      	bne.n	800f71c <arp_cache_lookup+0x38>
 800f700:	3304      	adds	r3, #4
 800f702:	4443      	add	r3, r8
 800f704:	3c01      	subs	r4, #1
 800f706:	1d9a      	adds	r2, r3, #6
 800f708:	4293      	cmp	r3, r2
 800f70a:	d102      	bne.n	800f712 <arp_cache_lookup+0x2e>
 800f70c:	4630      	mov	r0, r6
 800f70e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f712:	f813 1b01 	ldrb.w	r1, [r3], #1
 800f716:	f804 1f01 	strb.w	r1, [r4, #1]!
 800f71a:	e7f5      	b.n	800f708 <arp_cache_lookup+0x24>
 800f71c:	b111      	cbz	r1, 800f724 <arp_cache_lookup+0x40>
 800f71e:	3201      	adds	r2, #1
 800f720:	2a20      	cmp	r2, #32
 800f722:	d1e7      	bne.n	800f6f4 <arp_cache_lookup+0x10>
 800f724:	2704      	movs	r7, #4
 800f726:	f8df a054 	ldr.w	sl, [pc, #84]	; 800f77c <arp_cache_lookup+0x98>
 800f72a:	f8ba 5000 	ldrh.w	r5, [sl]
 800f72e:	3f01      	subs	r7, #1
 800f730:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800f734:	d101      	bne.n	800f73a <arp_cache_lookup+0x56>
 800f736:	463e      	mov	r6, r7
 800f738:	e7e8      	b.n	800f70c <arp_cache_lookup+0x28>
 800f73a:	4630      	mov	r0, r6
 800f73c:	f7ff ff7a 	bl	800f634 <arp_send_request>
 800f740:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800f744:	f1b9 0901 	subs.w	r9, r9, #1
 800f748:	f8ba 3000 	ldrh.w	r3, [sl]
 800f74c:	d011      	beq.n	800f772 <arp_cache_lookup+0x8e>
 800f74e:	429d      	cmp	r5, r3
 800f750:	d00c      	beq.n	800f76c <arp_cache_lookup+0x88>
 800f752:	230c      	movs	r3, #12
 800f754:	fb03 8505 	mla	r5, r3, r5, r8
 800f758:	3c01      	subs	r4, #1
 800f75a:	1d2b      	adds	r3, r5, #4
 800f75c:	350a      	adds	r5, #10
 800f75e:	42ab      	cmp	r3, r5
 800f760:	d0d4      	beq.n	800f70c <arp_cache_lookup+0x28>
 800f762:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f766:	f804 2f01 	strb.w	r2, [r4, #1]!
 800f76a:	e7f8      	b.n	800f75e <arp_cache_lookup+0x7a>
 800f76c:	f7fe f89e 	bl	800d8ac <net_handle>
 800f770:	e7e8      	b.n	800f744 <arp_cache_lookup+0x60>
 800f772:	429d      	cmp	r5, r3
 800f774:	d0db      	beq.n	800f72e <arp_cache_lookup+0x4a>
 800f776:	e7ec      	b.n	800f752 <arp_cache_lookup+0x6e>
 800f778:	20009158 	andcs	r9, r0, r8, asr r1
 800f77c:	200092d8 	ldrdcs	r9, [r0], -r8

0800f780 <_parse_response>:
 800f780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f784:	460c      	mov	r4, r1
 800f786:	4e5b      	ldr	r6, [pc, #364]	; (800f8f4 <_parse_response+0x174>)
 800f788:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800f78c:	6837      	ldr	r7, [r6, #0]
 800f78e:	b2c5      	uxtb	r5, r0
 800f790:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800f794:	f7fe f88a 	bl	800d8ac <net_handle>
 800f798:	f44f 7209 	mov.w	r2, #548	; 0x224
 800f79c:	4628      	mov	r0, r5
 800f79e:	f8cd 8000 	str.w	r8, [sp]
 800f7a2:	ab0a      	add	r3, sp, #40	; 0x28
 800f7a4:	a90b      	add	r1, sp, #44	; 0x2c
 800f7a6:	f7fe fd85 	bl	800e2b4 <udp_recv>
 800f7aa:	2800      	cmp	r0, #0
 800f7ac:	d05f      	beq.n	800f86e <_parse_response+0xee>
 800f7ae:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800f7b2:	2b43      	cmp	r3, #67	; 0x43
 800f7b4:	d15b      	bne.n	800f86e <_parse_response+0xee>
 800f7b6:	aa12      	add	r2, sp, #72	; 0x48
 800f7b8:	1e63      	subs	r3, r4, #1
 800f7ba:	1d61      	adds	r1, r4, #5
 800f7bc:	428b      	cmp	r3, r1
 800f7be:	d150      	bne.n	800f862 <_parse_response+0xe2>
 800f7c0:	2100      	movs	r1, #0
 800f7c2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f7c4:	181c      	adds	r4, r3, r0
 800f7c6:	4608      	mov	r0, r1
 800f7c8:	4b4b      	ldr	r3, [pc, #300]	; (800f8f8 <_parse_response+0x178>)
 800f7ca:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800f7ce:	781a      	ldrb	r2, [r3, #0]
 800f7d0:	f893 b001 	ldrb.w	fp, [r3, #1]
 800f7d4:	f893 c002 	ldrb.w	ip, [r3, #2]
 800f7d8:	78dd      	ldrb	r5, [r3, #3]
 800f7da:	4b48      	ldr	r3, [pc, #288]	; (800f8fc <_parse_response+0x17c>)
 800f7dc:	9207      	str	r2, [sp, #28]
 800f7de:	781a      	ldrb	r2, [r3, #0]
 800f7e0:	789f      	ldrb	r7, [r3, #2]
 800f7e2:	78de      	ldrb	r6, [r3, #3]
 800f7e4:	9206      	str	r2, [sp, #24]
 800f7e6:	785a      	ldrb	r2, [r3, #1]
 800f7e8:	4b45      	ldr	r3, [pc, #276]	; (800f900 <_parse_response+0x180>)
 800f7ea:	9203      	str	r2, [sp, #12]
 800f7ec:	f893 a000 	ldrb.w	sl, [r3]
 800f7f0:	f893 9001 	ldrb.w	r9, [r3, #1]
 800f7f4:	f893 8002 	ldrb.w	r8, [r3, #2]
 800f7f8:	f893 e003 	ldrb.w	lr, [r3, #3]
 800f7fc:	ab47      	add	r3, sp, #284	; 0x11c
 800f7fe:	42a3      	cmp	r3, r4
 800f800:	d33f      	bcc.n	800f882 <_parse_response+0x102>
 800f802:	9b04      	ldr	r3, [sp, #16]
 800f804:	b143      	cbz	r3, 800f818 <_parse_response+0x98>
 800f806:	4b3e      	ldr	r3, [pc, #248]	; (800f900 <_parse_response+0x180>)
 800f808:	f883 a000 	strb.w	sl, [r3]
 800f80c:	f883 9001 	strb.w	r9, [r3, #1]
 800f810:	f883 8002 	strb.w	r8, [r3, #2]
 800f814:	f883 e003 	strb.w	lr, [r3, #3]
 800f818:	9b05      	ldr	r3, [sp, #20]
 800f81a:	b133      	cbz	r3, 800f82a <_parse_response+0xaa>
 800f81c:	4b37      	ldr	r3, [pc, #220]	; (800f8fc <_parse_response+0x17c>)
 800f81e:	9a06      	ldr	r2, [sp, #24]
 800f820:	709f      	strb	r7, [r3, #2]
 800f822:	701a      	strb	r2, [r3, #0]
 800f824:	9a03      	ldr	r2, [sp, #12]
 800f826:	70de      	strb	r6, [r3, #3]
 800f828:	705a      	strb	r2, [r3, #1]
 800f82a:	b139      	cbz	r1, 800f83c <_parse_response+0xbc>
 800f82c:	4b32      	ldr	r3, [pc, #200]	; (800f8f8 <_parse_response+0x178>)
 800f82e:	9a07      	ldr	r2, [sp, #28]
 800f830:	f883 b001 	strb.w	fp, [r3, #1]
 800f834:	701a      	strb	r2, [r3, #0]
 800f836:	f883 c002 	strb.w	ip, [r3, #2]
 800f83a:	70dd      	strb	r5, [r3, #3]
 800f83c:	2802      	cmp	r0, #2
 800f83e:	d10c      	bne.n	800f85a <_parse_response+0xda>
 800f840:	4b30      	ldr	r3, [pc, #192]	; (800f904 <_parse_response+0x184>)
 800f842:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800f846:	701a      	strb	r2, [r3, #0]
 800f848:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800f84c:	705a      	strb	r2, [r3, #1]
 800f84e:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800f852:	709a      	strb	r2, [r3, #2]
 800f854:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800f858:	70da      	strb	r2, [r3, #3]
 800f85a:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800f85e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f862:	f812 cb01 	ldrb.w	ip, [r2], #1
 800f866:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800f86a:	45e6      	cmp	lr, ip
 800f86c:	d0a6      	beq.n	800f7bc <_parse_response+0x3c>
 800f86e:	6833      	ldr	r3, [r6, #0]
 800f870:	1bdb      	subs	r3, r3, r7
 800f872:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f876:	d38b      	bcc.n	800f790 <_parse_response+0x10>
 800f878:	2800      	cmp	r0, #0
 800f87a:	d1a1      	bne.n	800f7c0 <_parse_response+0x40>
 800f87c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f880:	e7eb      	b.n	800f85a <_parse_response+0xda>
 800f882:	781a      	ldrb	r2, [r3, #0]
 800f884:	2a35      	cmp	r2, #53	; 0x35
 800f886:	d011      	beq.n	800f8ac <_parse_response+0x12c>
 800f888:	d808      	bhi.n	800f89c <_parse_response+0x11c>
 800f88a:	2a01      	cmp	r2, #1
 800f88c:	d011      	beq.n	800f8b2 <_parse_response+0x132>
 800f88e:	2a03      	cmp	r2, #3
 800f890:	d01a      	beq.n	800f8c8 <_parse_response+0x148>
 800f892:	b14a      	cbz	r2, 800f8a8 <_parse_response+0x128>
 800f894:	1c9a      	adds	r2, r3, #2
 800f896:	785b      	ldrb	r3, [r3, #1]
 800f898:	4413      	add	r3, r2
 800f89a:	e7b0      	b.n	800f7fe <_parse_response+0x7e>
 800f89c:	2a36      	cmp	r2, #54	; 0x36
 800f89e:	d01f      	beq.n	800f8e0 <_parse_response+0x160>
 800f8a0:	2aff      	cmp	r2, #255	; 0xff
 800f8a2:	d1f7      	bne.n	800f894 <_parse_response+0x114>
 800f8a4:	4623      	mov	r3, r4
 800f8a6:	e7aa      	b.n	800f7fe <_parse_response+0x7e>
 800f8a8:	3301      	adds	r3, #1
 800f8aa:	e7a8      	b.n	800f7fe <_parse_response+0x7e>
 800f8ac:	7898      	ldrb	r0, [r3, #2]
 800f8ae:	3303      	adds	r3, #3
 800f8b0:	e7a5      	b.n	800f7fe <_parse_response+0x7e>
 800f8b2:	f893 a002 	ldrb.w	sl, [r3, #2]
 800f8b6:	f893 9003 	ldrb.w	r9, [r3, #3]
 800f8ba:	f893 8004 	ldrb.w	r8, [r3, #4]
 800f8be:	f893 e005 	ldrb.w	lr, [r3, #5]
 800f8c2:	9204      	str	r2, [sp, #16]
 800f8c4:	3306      	adds	r3, #6
 800f8c6:	e79a      	b.n	800f7fe <_parse_response+0x7e>
 800f8c8:	789a      	ldrb	r2, [r3, #2]
 800f8ca:	791f      	ldrb	r7, [r3, #4]
 800f8cc:	9206      	str	r2, [sp, #24]
 800f8ce:	78da      	ldrb	r2, [r3, #3]
 800f8d0:	795e      	ldrb	r6, [r3, #5]
 800f8d2:	9203      	str	r2, [sp, #12]
 800f8d4:	785a      	ldrb	r2, [r3, #1]
 800f8d6:	4413      	add	r3, r2
 800f8d8:	2201      	movs	r2, #1
 800f8da:	3302      	adds	r3, #2
 800f8dc:	9205      	str	r2, [sp, #20]
 800f8de:	e78e      	b.n	800f7fe <_parse_response+0x7e>
 800f8e0:	789a      	ldrb	r2, [r3, #2]
 800f8e2:	f893 b003 	ldrb.w	fp, [r3, #3]
 800f8e6:	f893 c004 	ldrb.w	ip, [r3, #4]
 800f8ea:	795d      	ldrb	r5, [r3, #5]
 800f8ec:	2101      	movs	r1, #1
 800f8ee:	9207      	str	r2, [sp, #28]
 800f8f0:	3306      	adds	r3, #6
 800f8f2:	e784      	b.n	800f7fe <_parse_response+0x7e>
 800f8f4:	200097a4 	andcs	r9, r0, r4, lsr #15
 800f8f8:	2000950c 	andcs	r9, r0, ip, lsl #10
 800f8fc:	200092dc 	ldrdcs	r9, [r0], -ip
 800f900:	200092e4 	andcs	r9, r0, r4, ror #5
 800f904:	200092e0 	andcs	r9, r0, r0, ror #5

0800f908 <memcpy.isra.0>:
 800f908:	3801      	subs	r0, #1
 800f90a:	440a      	add	r2, r1
 800f90c:	4291      	cmp	r1, r2
 800f90e:	d100      	bne.n	800f912 <memcpy.isra.0+0xa>
 800f910:	4770      	bx	lr
 800f912:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f916:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f91a:	e7f7      	b.n	800f90c <memcpy.isra.0+0x4>

0800f91c <dhcp_client>:
 800f91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f920:	b087      	sub	sp, #28
 800f922:	9203      	str	r2, [sp, #12]
 800f924:	4a77      	ldr	r2, [pc, #476]	; (800fb04 <dhcp_client+0x1e8>)
 800f926:	460f      	mov	r7, r1
 800f928:	4605      	mov	r5, r0
 800f92a:	f44f 7309 	mov.w	r3, #548	; 0x224
 800f92e:	4614      	mov	r4, r2
 800f930:	2100      	movs	r1, #0
 800f932:	3b01      	subs	r3, #1
 800f934:	f802 1b01 	strb.w	r1, [r2], #1
 800f938:	d1fb      	bne.n	800f932 <dhcp_client+0x16>
 800f93a:	f240 1301 	movw	r3, #257	; 0x101
 800f93e:	2206      	movs	r2, #6
 800f940:	4629      	mov	r1, r5
 800f942:	4871      	ldr	r0, [pc, #452]	; (800fb08 <dhcp_client+0x1ec>)
 800f944:	8023      	strh	r3, [r4, #0]
 800f946:	70a2      	strb	r2, [r4, #2]
 800f948:	f7ff ffde 	bl	800f908 <memcpy.isra.0>
 800f94c:	4b6f      	ldr	r3, [pc, #444]	; (800fb0c <dhcp_client+0x1f0>)
 800f94e:	2044      	movs	r0, #68	; 0x44
 800f950:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800f954:	f240 1335 	movw	r3, #309	; 0x135
 800f958:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800f95c:	f7fe fc70 	bl	800e240 <udp_bind>
 800f960:	1e06      	subs	r6, r0, #0
 800f962:	f2c0 80c9 	blt.w	800faf8 <dhcp_client+0x1dc>
 800f966:	f04f 0915 	mov.w	r9, #21
 800f96a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800fb04 <dhcp_client+0x1e8>
 800f96e:	f1b9 0901 	subs.w	r9, r9, #1
 800f972:	d11f      	bne.n	800f9b4 <dhcp_client+0x98>
 800f974:	464c      	mov	r4, r9
 800f976:	2044      	movs	r0, #68	; 0x44
 800f978:	f7fe fc7c 	bl	800e274 <udp_unbind>
 800f97c:	2c00      	cmp	r4, #0
 800f97e:	f000 80be 	beq.w	800fafe <dhcp_client+0x1e2>
 800f982:	2204      	movs	r2, #4
 800f984:	4962      	ldr	r1, [pc, #392]	; (800fb10 <dhcp_client+0x1f4>)
 800f986:	a805      	add	r0, sp, #20
 800f988:	f7ff ffbe 	bl	800f908 <memcpy.isra.0>
 800f98c:	9b05      	ldr	r3, [sp, #20]
 800f98e:	2204      	movs	r2, #4
 800f990:	4960      	ldr	r1, [pc, #384]	; (800fb14 <dhcp_client+0x1f8>)
 800f992:	603b      	str	r3, [r7, #0]
 800f994:	a805      	add	r0, sp, #20
 800f996:	f7ff ffb7 	bl	800f908 <memcpy.isra.0>
 800f99a:	9b05      	ldr	r3, [sp, #20]
 800f99c:	a805      	add	r0, sp, #20
 800f99e:	60bb      	str	r3, [r7, #8]
 800f9a0:	2204      	movs	r2, #4
 800f9a2:	495d      	ldr	r1, [pc, #372]	; (800fb18 <dhcp_client+0x1fc>)
 800f9a4:	f7ff ffb0 	bl	800f908 <memcpy.isra.0>
 800f9a8:	2000      	movs	r0, #0
 800f9aa:	9b05      	ldr	r3, [sp, #20]
 800f9ac:	607b      	str	r3, [r7, #4]
 800f9ae:	b007      	add	sp, #28
 800f9b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9b4:	f643 5301 	movw	r3, #15617	; 0x3d01
 800f9b8:	f240 1807 	movw	r8, #263	; 0x107
 800f9bc:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800f9c0:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800f9c4:	782b      	ldrb	r3, [r5, #0]
 800f9c6:	4a55      	ldr	r2, [pc, #340]	; (800fb1c <dhcp_client+0x200>)
 800f9c8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800f9cc:	786b      	ldrb	r3, [r5, #1]
 800f9ce:	fa5f fb86 	uxtb.w	fp, r6
 800f9d2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800f9d6:	78ab      	ldrb	r3, [r5, #2]
 800f9d8:	4651      	mov	r1, sl
 800f9da:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800f9de:	78eb      	ldrb	r3, [r5, #3]
 800f9e0:	4658      	mov	r0, fp
 800f9e2:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800f9e6:	792b      	ldrb	r3, [r5, #4]
 800f9e8:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800f9ec:	796b      	ldrb	r3, [r5, #5]
 800f9ee:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800f9f2:	4b4b      	ldr	r3, [pc, #300]	; (800fb20 <dhcp_client+0x204>)
 800f9f4:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800f9f8:	23ff      	movs	r3, #255	; 0xff
 800f9fa:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800f9fe:	2343      	movs	r3, #67	; 0x43
 800fa00:	f240 1205 	movw	r2, #261	; 0x105
 800fa04:	9300      	str	r3, [sp, #0]
 800fa06:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fa0a:	f7fe fcaf 	bl	800e36c <udp_send>
 800fa0e:	4629      	mov	r1, r5
 800fa10:	4630      	mov	r0, r6
 800fa12:	f7ff feb5 	bl	800f780 <_parse_response>
 800fa16:	2802      	cmp	r0, #2
 800fa18:	d1a9      	bne.n	800f96e <dhcp_client+0x52>
 800fa1a:	f643 5303 	movw	r3, #15619	; 0x3d03
 800fa1e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fa22:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fa26:	782b      	ldrb	r3, [r5, #0]
 800fa28:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800fb24 <dhcp_client+0x208>
 800fa2c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fa30:	786b      	ldrb	r3, [r5, #1]
 800fa32:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fa36:	78ab      	ldrb	r3, [r5, #2]
 800fa38:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fa3c:	78eb      	ldrb	r3, [r5, #3]
 800fa3e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fa42:	792b      	ldrb	r3, [r5, #4]
 800fa44:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fa48:	796b      	ldrb	r3, [r5, #5]
 800fa4a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fa4e:	f240 4332 	movw	r3, #1074	; 0x432
 800fa52:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800fa56:	4b2e      	ldr	r3, [pc, #184]	; (800fb10 <dhcp_client+0x1f4>)
 800fa58:	881a      	ldrh	r2, [r3, #0]
 800fa5a:	885b      	ldrh	r3, [r3, #2]
 800fa5c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800fa60:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800fa64:	f240 4336 	movw	r3, #1078	; 0x436
 800fa68:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800fa6c:	4b2e      	ldr	r3, [pc, #184]	; (800fb28 <dhcp_client+0x20c>)
 800fa6e:	221e      	movs	r2, #30
 800fa70:	681b      	ldr	r3, [r3, #0]
 800fa72:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800fa76:	230c      	movs	r3, #12
 800fa78:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800fa7c:	9b03      	ldr	r3, [sp, #12]
 800fa7e:	1e58      	subs	r0, r3, #1
 800fa80:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800fa84:	f1a2 0e1e 	sub.w	lr, r2, #30
 800fa88:	1c51      	adds	r1, r2, #1
 800fa8a:	bb8b      	cbnz	r3, 800faf0 <dhcp_client+0x1d4>
 800fa8c:	2037      	movs	r0, #55	; 0x37
 800fa8e:	18a3      	adds	r3, r4, r2
 800fa90:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800fa94:	2006      	movs	r0, #6
 800fa96:	4421      	add	r1, r4
 800fa98:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800fa9c:	2103      	movs	r1, #3
 800fa9e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800faa2:	210f      	movs	r1, #15
 800faa4:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800faa8:	213a      	movs	r1, #58	; 0x3a
 800faaa:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800faae:	213b      	movs	r1, #59	; 0x3b
 800fab0:	f04f 0801 	mov.w	r8, #1
 800fab4:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800fab8:	21ff      	movs	r1, #255	; 0xff
 800faba:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800fabe:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800fac2:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800fac6:	2343      	movs	r3, #67	; 0x43
 800fac8:	32f5      	adds	r2, #245	; 0xf5
 800faca:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800face:	4651      	mov	r1, sl
 800fad0:	9300      	str	r3, [sp, #0]
 800fad2:	b292      	uxth	r2, r2
 800fad4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fad8:	4658      	mov	r0, fp
 800fada:	f7fe fc47 	bl	800e36c <udp_send>
 800fade:	4629      	mov	r1, r5
 800fae0:	4630      	mov	r0, r6
 800fae2:	f7ff fe4d 	bl	800f780 <_parse_response>
 800fae6:	2805      	cmp	r0, #5
 800fae8:	f47f af41 	bne.w	800f96e <dhcp_client+0x52>
 800faec:	4644      	mov	r4, r8
 800faee:	e742      	b.n	800f976 <dhcp_client+0x5a>
 800faf0:	460a      	mov	r2, r1
 800faf2:	f80c 3b01 	strb.w	r3, [ip], #1
 800faf6:	e7c3      	b.n	800fa80 <dhcp_client+0x164>
 800faf8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fafc:	e757      	b.n	800f9ae <dhcp_client+0x92>
 800fafe:	f06f 0001 	mvn.w	r0, #1
 800fb02:	e754      	b.n	800f9ae <dhcp_client+0x92>
 800fb04:	200092e8 	andcs	r9, r0, r8, ror #5
 800fb08:	20009304 	andcs	r9, r0, r4, lsl #6
 800fb0c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800fb10:	200092e0 	andcs	r9, r0, r0, ror #5
 800fb14:	200092dc 	ldrdcs	r9, [r0], -ip
 800fb18:	200092e4 	andcs	r9, r0, r4, ror #5
 800fb1c:	03010637 	movweq	r0, #5687	; 0x1637
 800fb20:	3b3a0f06 	blcc	8e93740 <__exidx_end+0xe7e974>
 800fb24:	200093f2 	strdcs	r9, [r0], -r2
 800fb28:	2000950c 	andcs	r9, r0, ip, lsl #10

0800fb2c <dhcp_client_release>:
 800fb2c:	b507      	push	{r0, r1, r2, lr}
 800fb2e:	2044      	movs	r0, #68	; 0x44
 800fb30:	f7fe fb86 	bl	800e240 <udp_bind>
 800fb34:	f243 6307 	movw	r3, #13831	; 0x3607
 800fb38:	4911      	ldr	r1, [pc, #68]	; (800fb80 <dhcp_client_release+0x54>)
 800fb3a:	b2c0      	uxtb	r0, r0
 800fb3c:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800fb40:	2304      	movs	r3, #4
 800fb42:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800fb46:	4b0f      	ldr	r3, [pc, #60]	; (800fb84 <dhcp_client_release+0x58>)
 800fb48:	781a      	ldrb	r2, [r3, #0]
 800fb4a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800fb4e:	785a      	ldrb	r2, [r3, #1]
 800fb50:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800fb54:	789a      	ldrb	r2, [r3, #2]
 800fb56:	78db      	ldrb	r3, [r3, #3]
 800fb58:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800fb5c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800fb60:	23ff      	movs	r3, #255	; 0xff
 800fb62:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800fb66:	2343      	movs	r3, #67	; 0x43
 800fb68:	22fa      	movs	r2, #250	; 0xfa
 800fb6a:	9300      	str	r3, [sp, #0]
 800fb6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fb70:	f7fe fbfc 	bl	800e36c <udp_send>
 800fb74:	2044      	movs	r0, #68	; 0x44
 800fb76:	b003      	add	sp, #12
 800fb78:	f85d eb04 	ldr.w	lr, [sp], #4
 800fb7c:	f7fe bb7a 	b.w	800e274 <udp_unbind>
 800fb80:	200092e8 	andcs	r9, r0, r8, ror #5
 800fb84:	2000950c 	andcs	r9, r0, ip, lsl #10

0800fb88 <memcpy.isra.0>:
 800fb88:	3801      	subs	r0, #1
 800fb8a:	440a      	add	r2, r1
 800fb8c:	4291      	cmp	r1, r2
 800fb8e:	d100      	bne.n	800fb92 <memcpy.isra.0+0xa>
 800fb90:	4770      	bx	lr
 800fb92:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fb96:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fb9a:	e7f7      	b.n	800fb8c <memcpy.isra.0+0x4>

0800fb9c <_send_report>:
 800fb9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fb9e:	491c      	ldr	r1, [pc, #112]	; (800fc10 <_send_report+0x74>)
 800fba0:	4c1c      	ldr	r4, [pc, #112]	; (800fc14 <_send_report+0x78>)
 800fba2:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800fba6:	9001      	str	r0, [sp, #4]
 800fba8:	70cb      	strb	r3, [r1, #3]
 800fbaa:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800fbae:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800fbb2:	710b      	strb	r3, [r1, #4]
 800fbb4:	7148      	strb	r0, [r1, #5]
 800fbb6:	2206      	movs	r2, #6
 800fbb8:	4620      	mov	r0, r4
 800fbba:	f7ff ffe5 	bl	800fb88 <memcpy.isra.0>
 800fbbe:	2204      	movs	r2, #4
 800fbc0:	2700      	movs	r7, #0
 800fbc2:	4d15      	ldr	r5, [pc, #84]	; (800fc18 <_send_report+0x7c>)
 800fbc4:	eb0d 0102 	add.w	r1, sp, r2
 800fbc8:	882b      	ldrh	r3, [r5, #0]
 800fbca:	f104 001e 	add.w	r0, r4, #30
 800fbce:	f104 060e 	add.w	r6, r4, #14
 800fbd2:	8263      	strh	r3, [r4, #18]
 800fbd4:	f7ff ffd8 	bl	800fb88 <memcpy.isra.0>
 800fbd8:	2118      	movs	r1, #24
 800fbda:	4630      	mov	r0, r6
 800fbdc:	8327      	strh	r7, [r4, #24]
 800fbde:	f000 f9b7 	bl	800ff50 <net_chksum>
 800fbe2:	2204      	movs	r2, #4
 800fbe4:	8320      	strh	r0, [r4, #24]
 800fbe6:	eb0d 0102 	add.w	r1, sp, r2
 800fbea:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800fbee:	f7ff ffcb 	bl	800fb88 <memcpy.isra.0>
 800fbf2:	2120      	movs	r1, #32
 800fbf4:	4630      	mov	r0, r6
 800fbf6:	8527      	strh	r7, [r4, #40]	; 0x28
 800fbf8:	f000 f9aa 	bl	800ff50 <net_chksum>
 800fbfc:	212e      	movs	r1, #46	; 0x2e
 800fbfe:	8520      	strh	r0, [r4, #40]	; 0x28
 800fc00:	4620      	mov	r0, r4
 800fc02:	f002 f857 	bl	8011cb4 <emac_eth_send>
 800fc06:	882b      	ldrh	r3, [r5, #0]
 800fc08:	3301      	adds	r3, #1
 800fc0a:	802b      	strh	r3, [r5, #0]
 800fc0c:	b003      	add	sp, #12
 800fc0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc10:	20009668 	andcs	r9, r0, r8, ror #12
 800fc14:	20009670 	andcs	r9, r0, r0, ror r6
 800fc18:	20009630 	andcs	r9, r0, r0, lsr r6

0800fc1c <igmp_set_ip>:
 800fc1c:	b507      	push	{r0, r1, r2, lr}
 800fc1e:	2204      	movs	r2, #4
 800fc20:	6803      	ldr	r3, [r0, #0]
 800fc22:	eb0d 0102 	add.w	r1, sp, r2
 800fc26:	4806      	ldr	r0, [pc, #24]	; (800fc40 <igmp_set_ip+0x24>)
 800fc28:	9301      	str	r3, [sp, #4]
 800fc2a:	f7ff ffad 	bl	800fb88 <memcpy.isra.0>
 800fc2e:	2204      	movs	r2, #4
 800fc30:	4804      	ldr	r0, [pc, #16]	; (800fc44 <igmp_set_ip+0x28>)
 800fc32:	eb0d 0102 	add.w	r1, sp, r2
 800fc36:	f7ff ffa7 	bl	800fb88 <memcpy.isra.0>
 800fc3a:	b003      	add	sp, #12
 800fc3c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc40:	2000968a 	andcs	r9, r0, sl, lsl #13
 800fc44:	20009652 	andcs	r9, r0, r2, asr r6

0800fc48 <igmp_init>:
 800fc48:	2200      	movs	r2, #0
 800fc4a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fc4e:	4605      	mov	r5, r0
 800fc50:	4608      	mov	r0, r1
 800fc52:	4611      	mov	r1, r2
 800fc54:	4b23      	ldr	r3, [pc, #140]	; (800fce4 <igmp_init+0x9c>)
 800fc56:	f103 0408 	add.w	r4, r3, #8
 800fc5a:	42a3      	cmp	r3, r4
 800fc5c:	d13e      	bne.n	800fcdc <igmp_init+0x94>
 800fc5e:	3201      	adds	r2, #1
 800fc60:	2a24      	cmp	r2, #36	; 0x24
 800fc62:	d1f8      	bne.n	800fc56 <igmp_init+0xe>
 800fc64:	2600      	movs	r6, #0
 800fc66:	4b20      	ldr	r3, [pc, #128]	; (800fce8 <igmp_init+0xa0>)
 800fc68:	4c20      	ldr	r4, [pc, #128]	; (800fcec <igmp_init+0xa4>)
 800fc6a:	601e      	str	r6, [r3, #0]
 800fc6c:	4b20      	ldr	r3, [pc, #128]	; (800fcf0 <igmp_init+0xa8>)
 800fc6e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800fc72:	801e      	strh	r6, [r3, #0]
 800fc74:	f7ff ffd2 	bl	800fc1c <igmp_set_ip>
 800fc78:	2201      	movs	r2, #1
 800fc7a:	4b1e      	ldr	r3, [pc, #120]	; (800fcf4 <igmp_init+0xac>)
 800fc7c:	4629      	mov	r1, r5
 800fc7e:	801a      	strh	r2, [r3, #0]
 800fc80:	225e      	movs	r2, #94	; 0x5e
 800fc82:	709a      	strb	r2, [r3, #2]
 800fc84:	2206      	movs	r2, #6
 800fc86:	18a0      	adds	r0, r4, r2
 800fc88:	f7ff ff7e 	bl	800fb88 <memcpy.isra.0>
 800fc8c:	f240 4394 	movw	r3, #1172	; 0x494
 800fc90:	8463      	strh	r3, [r4, #34]	; 0x22
 800fc92:	2316      	movs	r3, #22
 800fc94:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800fcf8 <igmp_init+0xb0>
 800fc98:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fcfc <igmp_init+0xb4>
 800fc9c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800fc9e:	f8c4 9014 	str.w	r9, [r4, #20]
 800fca2:	4b17      	ldr	r3, [pc, #92]	; (800fd00 <igmp_init+0xb8>)
 800fca4:	f8c4 800c 	str.w	r8, [r4, #12]
 800fca8:	8227      	strh	r7, [r4, #16]
 800fcaa:	84a6      	strh	r6, [r4, #36]	; 0x24
 800fcac:	4c15      	ldr	r4, [pc, #84]	; (800fd04 <igmp_init+0xbc>)
 800fcae:	2206      	movs	r2, #6
 800fcb0:	6023      	str	r3, [r4, #0]
 800fcb2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800fcb6:	18a0      	adds	r0, r4, r2
 800fcb8:	80a3      	strh	r3, [r4, #4]
 800fcba:	4629      	mov	r1, r5
 800fcbc:	f7ff ff64 	bl	800fb88 <memcpy.isra.0>
 800fcc0:	23e0      	movs	r3, #224	; 0xe0
 800fcc2:	83e3      	strh	r3, [r4, #30]
 800fcc4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 800fcc8:	4a0f      	ldr	r2, [pc, #60]	; (800fd08 <igmp_init+0xc0>)
 800fcca:	f8c4 9014 	str.w	r9, [r4, #20]
 800fcce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800fcd2:	f8c4 800c 	str.w	r8, [r4, #12]
 800fcd6:	8227      	strh	r7, [r4, #16]
 800fcd8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fcdc:	f803 1b01 	strb.w	r1, [r3], #1
 800fce0:	e7bb      	b.n	800fc5a <igmp_init+0x12>
 800fce2:	bf00      	nop
 800fce4:	20009510 	andcs	r9, r0, r0, lsl r5
 800fce8:	20009634 	andcs	r9, r0, r4, lsr r6
 800fcec:	20009670 	andcs	r9, r0, r0, ror r6
 800fcf0:	20009630 	andcs	r9, r0, r0, lsr r6
 800fcf4:	20009668 	andcs	r9, r0, r8, ror #12
 800fcf8:	02010040 	andeq	r0, r1, #64	; 0x40
 800fcfc:	00460008 	subeq	r0, r6, r8
 800fd00:	005e0001 	subseq	r0, lr, r1
 800fd04:	20009638 	andcs	r9, r0, r8, lsr r6
 800fd08:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800fd0c <igmp_handle>:
 800fd0c:	7b83      	ldrb	r3, [r0, #14]
 800fd0e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fd12:	2b45      	cmp	r3, #69	; 0x45
 800fd14:	d116      	bne.n	800fd44 <igmp_handle+0x38>
 800fd16:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800fd1a:	2b11      	cmp	r3, #17
 800fd1c:	d112      	bne.n	800fd44 <igmp_handle+0x38>
 800fd1e:	4b20      	ldr	r3, [pc, #128]	; (800fda0 <igmp_handle+0x94>)
 800fd20:	f100 051e 	add.w	r5, r0, #30
 800fd24:	9300      	str	r3, [sp, #0]
 800fd26:	466a      	mov	r2, sp
 800fd28:	462b      	mov	r3, r5
 800fd2a:	f100 0622 	add.w	r6, r0, #34	; 0x22
 800fd2e:	42b3      	cmp	r3, r6
 800fd30:	d10b      	bne.n	800fd4a <igmp_handle+0x3e>
 800fd32:	2401      	movs	r4, #1
 800fd34:	2100      	movs	r1, #0
 800fd36:	f04f 0c01 	mov.w	ip, #1
 800fd3a:	4b1a      	ldr	r3, [pc, #104]	; (800fda4 <igmp_handle+0x98>)
 800fd3c:	4a1a      	ldr	r2, [pc, #104]	; (800fda8 <igmp_handle+0x9c>)
 800fd3e:	681f      	ldr	r7, [r3, #0]
 800fd40:	428f      	cmp	r7, r1
 800fd42:	d10a      	bne.n	800fd5a <igmp_handle+0x4e>
 800fd44:	b003      	add	sp, #12
 800fd46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fd4a:	f813 4b01 	ldrb.w	r4, [r3], #1
 800fd4e:	f812 1b01 	ldrb.w	r1, [r2], #1
 800fd52:	428c      	cmp	r4, r1
 800fd54:	d0eb      	beq.n	800fd2e <igmp_handle+0x22>
 800fd56:	2400      	movs	r4, #0
 800fd58:	e7ec      	b.n	800fd34 <igmp_handle+0x28>
 800fd5a:	6813      	ldr	r3, [r2, #0]
 800fd5c:	9301      	str	r3, [sp, #4]
 800fd5e:	b924      	cbnz	r4, 800fd6a <igmp_handle+0x5e>
 800fd60:	462b      	mov	r3, r5
 800fd62:	f10d 0e04 	add.w	lr, sp, #4
 800fd66:	42b3      	cmp	r3, r6
 800fd68:	d10e      	bne.n	800fd88 <igmp_handle+0x7c>
 800fd6a:	f892 e005 	ldrb.w	lr, [r2, #5]
 800fd6e:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800fd72:	f1be 0f01 	cmp.w	lr, #1
 800fd76:	d110      	bne.n	800fd9a <igmp_handle+0x8e>
 800fd78:	f892 e004 	ldrb.w	lr, [r2, #4]
 800fd7c:	459e      	cmp	lr, r3
 800fd7e:	d909      	bls.n	800fd94 <igmp_handle+0x88>
 800fd80:	085b      	lsrs	r3, r3, #1
 800fd82:	3301      	adds	r3, #1
 800fd84:	7113      	strb	r3, [r2, #4]
 800fd86:	e005      	b.n	800fd94 <igmp_handle+0x88>
 800fd88:	f813 9b01 	ldrb.w	r9, [r3], #1
 800fd8c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 800fd90:	45c1      	cmp	r9, r8
 800fd92:	d0e8      	beq.n	800fd66 <igmp_handle+0x5a>
 800fd94:	3101      	adds	r1, #1
 800fd96:	3208      	adds	r2, #8
 800fd98:	e7d2      	b.n	800fd40 <igmp_handle+0x34>
 800fd9a:	f882 c005 	strb.w	ip, [r2, #5]
 800fd9e:	e7ef      	b.n	800fd80 <igmp_handle+0x74>
 800fda0:	010000e0 	smlatteq	r0, r0, r0, r0
 800fda4:	20009634 	andcs	r9, r0, r4, lsr r6
 800fda8:	20009510 	andcs	r9, r0, r0, lsl r5

0800fdac <igmp_timer>:
 800fdac:	b570      	push	{r4, r5, r6, lr}
 800fdae:	2500      	movs	r5, #0
 800fdb0:	2602      	movs	r6, #2
 800fdb2:	4c0a      	ldr	r4, [pc, #40]	; (800fddc <igmp_timer+0x30>)
 800fdb4:	7963      	ldrb	r3, [r4, #5]
 800fdb6:	2b01      	cmp	r3, #1
 800fdb8:	d109      	bne.n	800fdce <igmp_timer+0x22>
 800fdba:	7923      	ldrb	r3, [r4, #4]
 800fdbc:	b13b      	cbz	r3, 800fdce <igmp_timer+0x22>
 800fdbe:	3b01      	subs	r3, #1
 800fdc0:	b2db      	uxtb	r3, r3
 800fdc2:	7123      	strb	r3, [r4, #4]
 800fdc4:	b91b      	cbnz	r3, 800fdce <igmp_timer+0x22>
 800fdc6:	6820      	ldr	r0, [r4, #0]
 800fdc8:	f7ff fee8 	bl	800fb9c <_send_report>
 800fdcc:	7166      	strb	r6, [r4, #5]
 800fdce:	3501      	adds	r5, #1
 800fdd0:	2d24      	cmp	r5, #36	; 0x24
 800fdd2:	f104 0408 	add.w	r4, r4, #8
 800fdd6:	d1ed      	bne.n	800fdb4 <igmp_timer+0x8>
 800fdd8:	bd70      	pop	{r4, r5, r6, pc}
 800fdda:	bf00      	nop
 800fddc:	20009510 	andcs	r9, r0, r0, lsl r5

0800fde0 <igmp_join>:
 800fde0:	b538      	push	{r3, r4, r5, lr}
 800fde2:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800fde6:	2be0      	cmp	r3, #224	; 0xe0
 800fde8:	d11b      	bne.n	800fe22 <igmp_join+0x42>
 800fdea:	4911      	ldr	r1, [pc, #68]	; (800fe30 <igmp_join+0x50>)
 800fdec:	680c      	ldr	r4, [r1, #0]
 800fdee:	2c24      	cmp	r4, #36	; 0x24
 800fdf0:	d01a      	beq.n	800fe28 <igmp_join+0x48>
 800fdf2:	2300      	movs	r3, #0
 800fdf4:	4a0f      	ldr	r2, [pc, #60]	; (800fe34 <igmp_join+0x54>)
 800fdf6:	429c      	cmp	r4, r3
 800fdf8:	dc0d      	bgt.n	800fe16 <igmp_join+0x36>
 800fdfa:	f44f 7381 	mov.w	r3, #258	; 0x102
 800fdfe:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800fe02:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800fe06:	8093      	strh	r3, [r2, #4]
 800fe08:	1c63      	adds	r3, r4, #1
 800fe0a:	600b      	str	r3, [r1, #0]
 800fe0c:	f7ff fec6 	bl	800fb9c <_send_report>
 800fe10:	4623      	mov	r3, r4
 800fe12:	4618      	mov	r0, r3
 800fe14:	bd38      	pop	{r3, r4, r5, pc}
 800fe16:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800fe1a:	4285      	cmp	r5, r0
 800fe1c:	d0f9      	beq.n	800fe12 <igmp_join+0x32>
 800fe1e:	3301      	adds	r3, #1
 800fe20:	e7e9      	b.n	800fdf6 <igmp_join+0x16>
 800fe22:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fe26:	e7f4      	b.n	800fe12 <igmp_join+0x32>
 800fe28:	f06f 0301 	mvn.w	r3, #1
 800fe2c:	e7f1      	b.n	800fe12 <igmp_join+0x32>
 800fe2e:	bf00      	nop
 800fe30:	20009634 	andcs	r9, r0, r4, lsr r6
 800fe34:	20009510 	andcs	r9, r0, r0, lsl r5

0800fe38 <igmp_leave>:
 800fe38:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fe3c:	2600      	movs	r6, #0
 800fe3e:	4f1c      	ldr	r7, [pc, #112]	; (800feb0 <igmp_leave+0x78>)
 800fe40:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800fe44:	4283      	cmp	r3, r0
 800fe46:	d007      	beq.n	800fe58 <igmp_leave+0x20>
 800fe48:	3601      	adds	r6, #1
 800fe4a:	2e24      	cmp	r6, #36	; 0x24
 800fe4c:	d1f8      	bne.n	800fe40 <igmp_leave+0x8>
 800fe4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fe52:	b002      	add	sp, #8
 800fe54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe58:	2400      	movs	r4, #0
 800fe5a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800feb4 <igmp_leave+0x7c>
 800fe5e:	4d16      	ldr	r5, [pc, #88]	; (800feb8 <igmp_leave+0x80>)
 800fe60:	f8b8 3000 	ldrh.w	r3, [r8]
 800fe64:	2118      	movs	r1, #24
 800fe66:	9001      	str	r0, [sp, #4]
 800fe68:	4814      	ldr	r0, [pc, #80]	; (800febc <igmp_leave+0x84>)
 800fe6a:	826b      	strh	r3, [r5, #18]
 800fe6c:	832c      	strh	r4, [r5, #24]
 800fe6e:	f000 f86f 	bl	800ff50 <net_chksum>
 800fe72:	2204      	movs	r2, #4
 800fe74:	8328      	strh	r0, [r5, #24]
 800fe76:	eb0d 0102 	add.w	r1, sp, r2
 800fe7a:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800fe7e:	f7ff fe83 	bl	800fb88 <memcpy.isra.0>
 800fe82:	2120      	movs	r1, #32
 800fe84:	f105 000e 	add.w	r0, r5, #14
 800fe88:	852c      	strh	r4, [r5, #40]	; 0x28
 800fe8a:	f000 f861 	bl	800ff50 <net_chksum>
 800fe8e:	212e      	movs	r1, #46	; 0x2e
 800fe90:	8528      	strh	r0, [r5, #40]	; 0x28
 800fe92:	4628      	mov	r0, r5
 800fe94:	f001 ff0e 	bl	8011cb4 <emac_eth_send>
 800fe98:	f8b8 3000 	ldrh.w	r3, [r8]
 800fe9c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800fea0:	3301      	adds	r3, #1
 800fea2:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800fea6:	4620      	mov	r0, r4
 800fea8:	f8a8 3000 	strh.w	r3, [r8]
 800feac:	80b4      	strh	r4, [r6, #4]
 800feae:	e7d0      	b.n	800fe52 <igmp_leave+0x1a>
 800feb0:	20009510 	andcs	r9, r0, r0, lsl r5
 800feb4:	20009630 	andcs	r9, r0, r0, lsr r6
 800feb8:	20009638 	andcs	r9, r0, r8, lsr r6
 800febc:	2000967e 	andcs	r9, r0, lr, ror r6

0800fec0 <igmp_shutdown>:
 800fec0:	b570      	push	{r4, r5, r6, lr}
 800fec2:	2500      	movs	r5, #0
 800fec4:	462e      	mov	r6, r5
 800fec6:	4c07      	ldr	r4, [pc, #28]	; (800fee4 <igmp_shutdown+0x24>)
 800fec8:	6820      	ldr	r0, [r4, #0]
 800feca:	b120      	cbz	r0, 800fed6 <igmp_shutdown+0x16>
 800fecc:	f7ff ffb4 	bl	800fe38 <igmp_leave>
 800fed0:	6026      	str	r6, [r4, #0]
 800fed2:	7166      	strb	r6, [r4, #5]
 800fed4:	7126      	strb	r6, [r4, #4]
 800fed6:	3501      	adds	r5, #1
 800fed8:	2d24      	cmp	r5, #36	; 0x24
 800feda:	f104 0408 	add.w	r4, r4, #8
 800fede:	d1f3      	bne.n	800fec8 <igmp_shutdown+0x8>
 800fee0:	bd70      	pop	{r4, r5, r6, pc}
 800fee2:	bf00      	nop
 800fee4:	20009510 	andcs	r9, r0, r0, lsl r5

0800fee8 <ip_set_ip>:
 800fee8:	b510      	push	{r4, lr}
 800feea:	4604      	mov	r4, r0
 800feec:	f7fe f900 	bl	800e0f0 <udp_set_ip>
 800fef0:	4620      	mov	r0, r4
 800fef2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fef6:	f7ff be91 	b.w	800fc1c <igmp_set_ip>

0800fefa <ip_init>:
 800fefa:	b538      	push	{r3, r4, r5, lr}
 800fefc:	4604      	mov	r4, r0
 800fefe:	460d      	mov	r5, r1
 800ff00:	f7fe f916 	bl	800e130 <udp_init>
 800ff04:	4629      	mov	r1, r5
 800ff06:	4620      	mov	r0, r4
 800ff08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ff0c:	f7ff be9c 	b.w	800fc48 <igmp_init>

0800ff10 <ip_shutdown>:
 800ff10:	b508      	push	{r3, lr}
 800ff12:	f7ff ffd5 	bl	800fec0 <igmp_shutdown>
 800ff16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ff1a:	f7fe b93b 	b.w	800e194 <udp_shutdown>

0800ff1e <ip_handle>:
 800ff1e:	7b82      	ldrb	r2, [r0, #14]
 800ff20:	7dc3      	ldrb	r3, [r0, #23]
 800ff22:	2a45      	cmp	r2, #69	; 0x45
 800ff24:	d003      	beq.n	800ff2e <ip_handle+0x10>
 800ff26:	2b02      	cmp	r3, #2
 800ff28:	d111      	bne.n	800ff4e <ip_handle+0x30>
 800ff2a:	f7ff beef 	b.w	800fd0c <igmp_handle>
 800ff2e:	2b06      	cmp	r3, #6
 800ff30:	d00b      	beq.n	800ff4a <ip_handle+0x2c>
 800ff32:	d804      	bhi.n	800ff3e <ip_handle+0x20>
 800ff34:	2b01      	cmp	r3, #1
 800ff36:	d006      	beq.n	800ff46 <ip_handle+0x28>
 800ff38:	2b02      	cmp	r3, #2
 800ff3a:	d0f6      	beq.n	800ff2a <ip_handle+0xc>
 800ff3c:	4770      	bx	lr
 800ff3e:	2b11      	cmp	r3, #17
 800ff40:	d105      	bne.n	800ff4e <ip_handle+0x30>
 800ff42:	f7fe b929 	b.w	800e198 <udp_handle>
 800ff46:	f000 b82b 	b.w	800ffa0 <icmp_handle>
 800ff4a:	f7fd be75 	b.w	800dc38 <tcp_handle>
 800ff4e:	4770      	bx	lr

0800ff50 <net_chksum>:
 800ff50:	2300      	movs	r3, #0
 800ff52:	f021 0201 	bic.w	r2, r1, #1
 800ff56:	b530      	push	{r4, r5, lr}
 800ff58:	4402      	add	r2, r0
 800ff5a:	084c      	lsrs	r4, r1, #1
 800ff5c:	4290      	cmp	r0, r2
 800ff5e:	d10e      	bne.n	800ff7e <net_chksum+0x2e>
 800ff60:	f06f 0201 	mvn.w	r2, #1
 800ff64:	fb02 1104 	mla	r1, r2, r4, r1
 800ff68:	b121      	cbz	r1, 800ff74 <net_chksum+0x24>
 800ff6a:	7802      	ldrb	r2, [r0, #0]
 800ff6c:	0212      	lsls	r2, r2, #8
 800ff6e:	ba52      	rev16	r2, r2
 800ff70:	b292      	uxth	r2, r2
 800ff72:	4413      	add	r3, r2
 800ff74:	0c1a      	lsrs	r2, r3, #16
 800ff76:	d106      	bne.n	800ff86 <net_chksum+0x36>
 800ff78:	43d8      	mvns	r0, r3
 800ff7a:	b280      	uxth	r0, r0
 800ff7c:	bd30      	pop	{r4, r5, pc}
 800ff7e:	f830 5b02 	ldrh.w	r5, [r0], #2
 800ff82:	442b      	add	r3, r5
 800ff84:	e7ea      	b.n	800ff5c <net_chksum+0xc>
 800ff86:	b29b      	uxth	r3, r3
 800ff88:	e7f3      	b.n	800ff72 <net_chksum+0x22>

0800ff8a <memcpy.isra.0>:
 800ff8a:	3801      	subs	r0, #1
 800ff8c:	440a      	add	r2, r1
 800ff8e:	4291      	cmp	r1, r2
 800ff90:	d100      	bne.n	800ff94 <memcpy.isra.0+0xa>
 800ff92:	4770      	bx	lr
 800ff94:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ff98:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ff9c:	e7f7      	b.n	800ff8e <memcpy.isra.0+0x4>
	...

0800ffa0 <icmp_handle>:
 800ffa0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ffa2:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800ffa6:	4604      	mov	r4, r0
 800ffa8:	2b08      	cmp	r3, #8
 800ffaa:	d13e      	bne.n	801002a <icmp_handle+0x8a>
 800ffac:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 800ffb0:	2d00      	cmp	r5, #0
 800ffb2:	d13a      	bne.n	801002a <icmp_handle+0x8a>
 800ffb4:	1d86      	adds	r6, r0, #6
 800ffb6:	4631      	mov	r1, r6
 800ffb8:	2206      	movs	r2, #6
 800ffba:	f7ff ffe6 	bl	800ff8a <memcpy.isra.0>
 800ffbe:	4630      	mov	r0, r6
 800ffc0:	2206      	movs	r2, #6
 800ffc2:	491b      	ldr	r1, [pc, #108]	; (8010030 <icmp_handle+0x90>)
 800ffc4:	f7ff ffe1 	bl	800ff8a <memcpy.isra.0>
 800ffc8:	8a63      	ldrh	r3, [r4, #18]
 800ffca:	f104 061a 	add.w	r6, r4, #26
 800ffce:	43db      	mvns	r3, r3
 800ffd0:	4631      	mov	r1, r6
 800ffd2:	2204      	movs	r2, #4
 800ffd4:	8263      	strh	r3, [r4, #18]
 800ffd6:	f104 001e 	add.w	r0, r4, #30
 800ffda:	f7ff ffd6 	bl	800ff8a <memcpy.isra.0>
 800ffde:	2204      	movs	r2, #4
 800ffe0:	4b14      	ldr	r3, [pc, #80]	; (8010034 <icmp_handle+0x94>)
 800ffe2:	eb0d 0102 	add.w	r1, sp, r2
 800ffe6:	681b      	ldr	r3, [r3, #0]
 800ffe8:	4630      	mov	r0, r6
 800ffea:	f104 060e 	add.w	r6, r4, #14
 800ffee:	9301      	str	r3, [sp, #4]
 800fff0:	f7ff ffcb 	bl	800ff8a <memcpy.isra.0>
 800fff4:	2114      	movs	r1, #20
 800fff6:	4630      	mov	r0, r6
 800fff8:	7625      	strb	r5, [r4, #24]
 800fffa:	7665      	strb	r5, [r4, #25]
 800fffc:	f7ff ffa8 	bl	800ff50 <net_chksum>
 8010000:	8a21      	ldrh	r1, [r4, #16]
 8010002:	8320      	strh	r0, [r4, #24]
 8010004:	ba49      	rev16	r1, r1
 8010006:	b289      	uxth	r1, r1
 8010008:	4630      	mov	r0, r6
 801000a:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 801000e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8010012:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8010016:	f7ff ff9b 	bl	800ff50 <net_chksum>
 801001a:	8a21      	ldrh	r1, [r4, #16]
 801001c:	84a0      	strh	r0, [r4, #36]	; 0x24
 801001e:	ba49      	rev16	r1, r1
 8010020:	b289      	uxth	r1, r1
 8010022:	4620      	mov	r0, r4
 8010024:	310e      	adds	r1, #14
 8010026:	f001 fe45 	bl	8011cb4 <emac_eth_send>
 801002a:	b002      	add	sp, #8
 801002c:	bd70      	pop	{r4, r5, r6, pc}
 801002e:	bf00      	nop
 8010030:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 8010034:	200017a8 	andcs	r1, r0, r8, lsr #15

08010038 <properties::convert_json_file(char*, unsigned short, bool)>:
 8010038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801003c:	7803      	ldrb	r3, [r0, #0]
 801003e:	2b7b      	cmp	r3, #123	; 0x7b
 8010040:	d170      	bne.n	8010124 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 8010042:	b322      	cbz	r2, 801008e <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 8010044:	2301      	movs	r3, #1
 8010046:	4606      	mov	r6, r0
 8010048:	461c      	mov	r4, r3
 801004a:	2a00      	cmp	r2, #0
 801004c:	bf0c      	ite	eq
 801004e:	f04f 0c0a 	moveq.w	ip, #10
 8010052:	f04f 0c00 	movne.w	ip, #0
 8010056:	273d      	movs	r7, #61	; 0x3d
 8010058:	4299      	cmp	r1, r3
 801005a:	d960      	bls.n	801011e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 801005c:	4299      	cmp	r1, r3
 801005e:	4602      	mov	r2, r0
 8010060:	f890 e000 	ldrb.w	lr, [r0]
 8010064:	f103 0301 	add.w	r3, r3, #1
 8010068:	f100 0001 	add.w	r0, r0, #1
 801006c:	d846      	bhi.n	80100fc <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 801006e:	1aa0      	subs	r0, r4, r2
 8010070:	4615      	mov	r5, r2
 8010072:	1884      	adds	r4, r0, r2
 8010074:	f812 8b01 	ldrb.w	r8, [r2], #1
 8010078:	f103 0e01 	add.w	lr, r3, #1
 801007c:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 8010080:	d053      	beq.n	801012a <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 8010082:	4299      	cmp	r1, r3
 8010084:	d957      	bls.n	8010136 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8010086:	4673      	mov	r3, lr
 8010088:	f806 8b01 	strb.w	r8, [r6], #1
 801008c:	e7f0      	b.n	8010070 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 801008e:	2323      	movs	r3, #35	; 0x23
 8010090:	f800 3b01 	strb.w	r3, [r0], #1
 8010094:	4605      	mov	r5, r0
 8010096:	2301      	movs	r3, #1
 8010098:	4299      	cmp	r1, r3
 801009a:	d92d      	bls.n	80100f8 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 801009c:	f815 4b01 	ldrb.w	r4, [r5], #1
 80100a0:	2c22      	cmp	r4, #34	; 0x22
 80100a2:	d001      	beq.n	80100a8 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 80100a4:	3301      	adds	r3, #1
 80100a6:	e7f7      	b.n	8010098 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 80100a8:	46ac      	mov	ip, r5
 80100aa:	4606      	mov	r6, r0
 80100ac:	2701      	movs	r7, #1
 80100ae:	f89c e000 	ldrb.w	lr, [ip]
 80100b2:	4665      	mov	r5, ip
 80100b4:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80100b8:	4630      	mov	r0, r6
 80100ba:	463c      	mov	r4, r7
 80100bc:	f10c 0c01 	add.w	ip, ip, #1
 80100c0:	f106 0601 	add.w	r6, r6, #1
 80100c4:	f107 0701 	add.w	r7, r7, #1
 80100c8:	d007      	beq.n	80100da <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80100ca:	3301      	adds	r3, #1
 80100cc:	4299      	cmp	r1, r3
 80100ce:	4665      	mov	r5, ip
 80100d0:	f806 ec01 	strb.w	lr, [r6, #-1]
 80100d4:	d8eb      	bhi.n	80100ae <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 80100d6:	463c      	mov	r4, r7
 80100d8:	4630      	mov	r0, r6
 80100da:	4606      	mov	r6, r0
 80100dc:	200a      	movs	r0, #10
 80100de:	3401      	adds	r4, #1
 80100e0:	f806 0b01 	strb.w	r0, [r6], #1
 80100e4:	4628      	mov	r0, r5
 80100e6:	f815 7b01 	ldrb.w	r7, [r5], #1
 80100ea:	2f7b      	cmp	r7, #123	; 0x7b
 80100ec:	d0ad      	beq.n	801004a <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 80100ee:	1c5f      	adds	r7, r3, #1
 80100f0:	4299      	cmp	r1, r3
 80100f2:	463b      	mov	r3, r7
 80100f4:	d8f6      	bhi.n	80100e4 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 80100f6:	e7a8      	b.n	801004a <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 80100f8:	2401      	movs	r4, #1
 80100fa:	e7ee      	b.n	80100da <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80100fc:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8010100:	d1ac      	bne.n	801005c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8010102:	4602      	mov	r2, r0
 8010104:	e7b3      	b.n	801006e <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8010106:	283a      	cmp	r0, #58	; 0x3a
 8010108:	d115      	bne.n	8010136 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 801010a:	462b      	mov	r3, r5
 801010c:	e01b      	b.n	8010146 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 801010e:	4686      	mov	lr, r0
 8010110:	e027      	b.n	8010162 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 8010112:	4673      	mov	r3, lr
 8010114:	f806 cb01 	strb.w	ip, [r6], #1
 8010118:	3401      	adds	r4, #1
 801011a:	3301      	adds	r3, #1
 801011c:	e79c      	b.n	8010058 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 801011e:	4620      	mov	r0, r4
 8010120:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010124:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010128:	e7fa      	b.n	8010120 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 801012a:	4630      	mov	r0, r6
 801012c:	f800 7b01 	strb.w	r7, [r0], #1
 8010130:	469e      	mov	lr, r3
 8010132:	4606      	mov	r6, r0
 8010134:	3401      	adds	r4, #1
 8010136:	4571      	cmp	r1, lr
 8010138:	462b      	mov	r3, r5
 801013a:	7828      	ldrb	r0, [r5, #0]
 801013c:	f10e 0e01 	add.w	lr, lr, #1
 8010140:	f105 0501 	add.w	r5, r5, #1
 8010144:	d8df      	bhi.n	8010106 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 8010146:	781d      	ldrb	r5, [r3, #0]
 8010148:	461a      	mov	r2, r3
 801014a:	2d2f      	cmp	r5, #47	; 0x2f
 801014c:	4670      	mov	r0, lr
 801014e:	f103 0301 	add.w	r3, r3, #1
 8010152:	f10e 0e01 	add.w	lr, lr, #1
 8010156:	d8da      	bhi.n	801010e <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 8010158:	4281      	cmp	r1, r0
 801015a:	d8f4      	bhi.n	8010146 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 801015c:	2d22      	cmp	r5, #34	; 0x22
 801015e:	bf08      	it	eq
 8010160:	461a      	moveq	r2, r3
 8010162:	4610      	mov	r0, r2
 8010164:	f810 5b01 	ldrb.w	r5, [r0], #1
 8010168:	f10e 0301 	add.w	r3, lr, #1
 801016c:	2d22      	cmp	r5, #34	; 0x22
 801016e:	d0d0      	beq.n	8010112 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8010170:	2d2c      	cmp	r5, #44	; 0x2c
 8010172:	d0ce      	beq.n	8010112 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8010174:	2d7d      	cmp	r5, #125	; 0x7d
 8010176:	d0cc      	beq.n	8010112 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8010178:	4571      	cmp	r1, lr
 801017a:	d9ce      	bls.n	801011a <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 801017c:	f1a5 0e20 	sub.w	lr, r5, #32
 8010180:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8010184:	d803      	bhi.n	801018e <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 8010186:	4602      	mov	r2, r0
 8010188:	f806 5b01 	strb.w	r5, [r6], #1
 801018c:	3401      	adds	r4, #1
 801018e:	469e      	mov	lr, r3
 8010190:	e7e7      	b.n	8010162 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08010194 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8010194:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010198:	6002      	str	r2, [r0, #0]
 801019a:	4614      	mov	r4, r2
 801019c:	2200      	movs	r2, #0
 801019e:	4606      	mov	r6, r0
 80101a0:	460f      	mov	r7, r1
 80101a2:	80c2      	strh	r2, [r0, #6]
 80101a4:	4a1b      	ldr	r2, [pc, #108]	; (8010214 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80101a6:	8083      	strh	r3, [r0, #4]
 80101a8:	7810      	ldrb	r0, [r2, #0]
 80101aa:	f000 0001 	and.w	r0, r0, #1
 80101ae:	7230      	strb	r0, [r6, #8]
 80101b0:	463d      	mov	r5, r7
 80101b2:	782a      	ldrb	r2, [r5, #0]
 80101b4:	3701      	adds	r7, #1
 80101b6:	2a00      	cmp	r2, #0
 80101b8:	d1fa      	bne.n	80101b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 80101ba:	1a6d      	subs	r5, r5, r1
 80101bc:	b29b      	uxth	r3, r3
 80101be:	b1d0      	cbz	r0, 80101f6 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 80101c0:	1d2f      	adds	r7, r5, #4
 80101c2:	429f      	cmp	r7, r3
 80101c4:	d814      	bhi.n	80101f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80101c6:	f04f 087b 	mov.w	r8, #123	; 0x7b
 80101ca:	f04f 0922 	mov.w	r9, #34	; 0x22
 80101ce:	462a      	mov	r2, r5
 80101d0:	f884 8000 	strb.w	r8, [r4]
 80101d4:	f884 9001 	strb.w	r9, [r4, #1]
 80101d8:	1ca0      	adds	r0, r4, #2
 80101da:	f000 fed0 	bl	8010f7e <memmove>
 80101de:	223a      	movs	r2, #58	; 0x3a
 80101e0:	1963      	adds	r3, r4, r5
 80101e2:	3505      	adds	r5, #5
 80101e4:	f883 9002 	strb.w	r9, [r3, #2]
 80101e8:	70da      	strb	r2, [r3, #3]
 80101ea:	80f5      	strh	r5, [r6, #6]
 80101ec:	f804 8007 	strb.w	r8, [r4, r7]
 80101f0:	4630      	mov	r0, r6
 80101f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80101f6:	1caf      	adds	r7, r5, #2
 80101f8:	429f      	cmp	r7, r3
 80101fa:	d8f9      	bhi.n	80101f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80101fc:	4620      	mov	r0, r4
 80101fe:	2323      	movs	r3, #35	; 0x23
 8010200:	462a      	mov	r2, r5
 8010202:	f800 3b01 	strb.w	r3, [r0], #1
 8010206:	f000 feba 	bl	8010f7e <memmove>
 801020a:	230a      	movs	r3, #10
 801020c:	442c      	add	r4, r5
 801020e:	7063      	strb	r3, [r4, #1]
 8010210:	80f7      	strh	r7, [r6, #6]
 8010212:	e7ed      	b.n	80101f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8010214:	2000969e 	mulcs	r0, lr, r6

08010218 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8010218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801021a:	469c      	mov	ip, r3
 801021c:	8885      	ldrh	r5, [r0, #4]
 801021e:	88c3      	ldrh	r3, [r0, #6]
 8010220:	b085      	sub	sp, #20
 8010222:	42ab      	cmp	r3, r5
 8010224:	d302      	bcc.n	801022c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8010226:	2000      	movs	r0, #0
 8010228:	b005      	add	sp, #20
 801022a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801022c:	4604      	mov	r4, r0
 801022e:	6800      	ldr	r0, [r0, #0]
 8010230:	1aed      	subs	r5, r5, r3
 8010232:	4418      	add	r0, r3
 8010234:	b2d6      	uxtb	r6, r2
 8010236:	f3c2 2707 	ubfx	r7, r2, #8, #8
 801023a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801023e:	f894 e008 	ldrb.w	lr, [r4, #8]
 8010242:	0e12      	lsrs	r2, r2, #24
 8010244:	f1bc 0f00 	cmp.w	ip, #0
 8010248:	d109      	bne.n	801025e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 801024a:	f1be 0f00 	cmp.w	lr, #0
 801024e:	d109      	bne.n	8010264 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8010250:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8010254:	e9cd 6700 	strd	r6, r7, [sp]
 8010258:	460b      	mov	r3, r1
 801025a:	4a0e      	ldr	r2, [pc, #56]	; (8010294 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 801025c:	e008      	b.n	8010270 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801025e:	f1be 0f00 	cmp.w	lr, #0
 8010262:	d00f      	beq.n	8010284 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8010264:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8010268:	460b      	mov	r3, r1
 801026a:	e9cd 6700 	strd	r6, r7, [sp]
 801026e:	4a0a      	ldr	r2, [pc, #40]	; (8010298 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8010270:	4629      	mov	r1, r5
 8010272:	f7f8 fcc9 	bl	8008c08 <snprintf>
 8010276:	4285      	cmp	r5, r0
 8010278:	dbd5      	blt.n	8010226 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 801027a:	88e3      	ldrh	r3, [r4, #6]
 801027c:	4403      	add	r3, r0
 801027e:	80e3      	strh	r3, [r4, #6]
 8010280:	2001      	movs	r0, #1
 8010282:	e7d1      	b.n	8010228 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8010284:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8010288:	e9cd 6700 	strd	r6, r7, [sp]
 801028c:	460b      	mov	r3, r1
 801028e:	4a03      	ldr	r2, [pc, #12]	; (801029c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8010290:	e7ee      	b.n	8010270 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8010292:	bf00      	nop
 8010294:	080148c3 	stmdaeq	r1, {r0, r1, r6, r7, fp, lr}
 8010298:	080148af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, fp, lr}
 801029c:	080148c4 	stmdaeq	r1, {r2, r6, r7, fp, lr}

080102a0 <PropertiesBuilder::AddComment(char const*)>:
 80102a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102a2:	7a06      	ldrb	r6, [r0, #8]
 80102a4:	b996      	cbnz	r6, 80102cc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80102a6:	4604      	mov	r4, r0
 80102a8:	88c0      	ldrh	r0, [r0, #6]
 80102aa:	88a5      	ldrh	r5, [r4, #4]
 80102ac:	42a8      	cmp	r0, r5
 80102ae:	d20d      	bcs.n	80102cc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80102b0:	6827      	ldr	r7, [r4, #0]
 80102b2:	1a2d      	subs	r5, r5, r0
 80102b4:	460b      	mov	r3, r1
 80102b6:	4a06      	ldr	r2, [pc, #24]	; (80102d0 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80102b8:	4629      	mov	r1, r5
 80102ba:	4438      	add	r0, r7
 80102bc:	f7f8 fca4 	bl	8008c08 <snprintf>
 80102c0:	4285      	cmp	r5, r0
 80102c2:	bfa1      	itttt	ge
 80102c4:	2601      	movge	r6, #1
 80102c6:	88e3      	ldrhge	r3, [r4, #6]
 80102c8:	18c0      	addge	r0, r0, r3
 80102ca:	80e0      	strhge	r0, [r4, #6]
 80102cc:	4630      	mov	r0, r6
 80102ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102d0:	080148d4 	stmdaeq	r1, {r2, r4, r6, r7, fp, lr}

080102d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80102d4:	e9c0 1200 	strd	r1, r2, [r0]
 80102d8:	4770      	bx	lr

080102da <ReadConfigFile::~ReadConfigFile()>:
 80102da:	4770      	bx	lr

080102dc <ReadConfigFile::Read(char const*, unsigned int)>:
 80102dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102e0:	4606      	mov	r6, r0
 80102e2:	460d      	mov	r5, r1
 80102e4:	4614      	mov	r4, r2
 80102e6:	f04f 0800 	mov.w	r8, #0
 80102ea:	b090      	sub	sp, #64	; 0x40
 80102ec:	b33c      	cbz	r4, 801033e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80102ee:	466b      	mov	r3, sp
 80102f0:	462a      	mov	r2, r5
 80102f2:	4619      	mov	r1, r3
 80102f4:	7817      	ldrb	r7, [r2, #0]
 80102f6:	4610      	mov	r0, r2
 80102f8:	2f0d      	cmp	r7, #13
 80102fa:	f102 0201 	add.w	r2, r2, #1
 80102fe:	d013      	beq.n	8010328 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8010300:	2f0a      	cmp	r7, #10
 8010302:	d011      	beq.n	8010328 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8010304:	f803 7b01 	strb.w	r7, [r3], #1
 8010308:	1a58      	subs	r0, r3, r1
 801030a:	283f      	cmp	r0, #63	; 0x3f
 801030c:	4615      	mov	r5, r2
 801030e:	dc16      	bgt.n	801033e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8010310:	3c01      	subs	r4, #1
 8010312:	d1ef      	bne.n	80102f4 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 8010314:	f89d 2000 	ldrb.w	r2, [sp]
 8010318:	2a60      	cmp	r2, #96	; 0x60
 801031a:	d9e7      	bls.n	80102ec <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801031c:	f883 8000 	strb.w	r8, [r3]
 8010320:	e9d6 3000 	ldrd	r3, r0, [r6]
 8010324:	4798      	blx	r3
 8010326:	e7e1      	b.n	80102ec <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8010328:	4605      	mov	r5, r0
 801032a:	2c00      	cmp	r4, #0
 801032c:	d0f2      	beq.n	8010314 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 801032e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010332:	2a0d      	cmp	r2, #13
 8010334:	d001      	beq.n	801033a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8010336:	2a0a      	cmp	r2, #10
 8010338:	d1ec      	bne.n	8010314 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 801033a:	3c01      	subs	r4, #1
 801033c:	e7f4      	b.n	8010328 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 801033e:	b010      	add	sp, #64	; 0x40
 8010340:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010344 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8010344:	b570      	push	{r4, r5, r6, lr}
 8010346:	4615      	mov	r5, r2
 8010348:	461c      	mov	r4, r3
 801034a:	f000 f91b 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 801034e:	b160      	cbz	r0, 801036a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 8010350:	2100      	movs	r1, #0
 8010352:	5c43      	ldrb	r3, [r0, r1]
 8010354:	6826      	ldr	r6, [r4, #0]
 8010356:	b28a      	uxth	r2, r1
 8010358:	b123      	cbz	r3, 8010364 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 801035a:	42b2      	cmp	r2, r6
 801035c:	d207      	bcs.n	801036e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 801035e:	546b      	strb	r3, [r5, r1]
 8010360:	3101      	adds	r1, #1
 8010362:	e7f6      	b.n	8010352 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8010364:	2000      	movs	r0, #0
 8010366:	6022      	str	r2, [r4, #0]
 8010368:	bd70      	pop	{r4, r5, r6, pc}
 801036a:	2001      	movs	r0, #1
 801036c:	e7fc      	b.n	8010368 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 801036e:	2b0a      	cmp	r3, #10
 8010370:	d0f8      	beq.n	8010364 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8010372:	2002      	movs	r0, #2
 8010374:	e7f8      	b.n	8010368 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

08010376 <Sscan::Float(char const*, char const*, float&)>:
 8010376:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801037a:	4616      	mov	r6, r2
 801037c:	f000 f902 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 8010380:	2800      	cmp	r0, #0
 8010382:	d059      	beq.n	8010438 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8010384:	4604      	mov	r4, r0
 8010386:	7803      	ldrb	r3, [r0, #0]
 8010388:	2b2d      	cmp	r3, #45	; 0x2d
 801038a:	bf08      	it	eq
 801038c:	3401      	addeq	r4, #1
 801038e:	7823      	ldrb	r3, [r4, #0]
 8010390:	bf0c      	ite	eq
 8010392:	f04f 0801 	moveq.w	r8, #1
 8010396:	f04f 0800 	movne.w	r8, #0
 801039a:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801039e:	d103      	bne.n	80103a8 <Sscan::Float(char const*, char const*, float&)+0x32>
 80103a0:	2702      	movs	r7, #2
 80103a2:	4638      	mov	r0, r7
 80103a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80103a8:	2000      	movs	r0, #0
 80103aa:	220a      	movs	r2, #10
 80103ac:	7823      	ldrb	r3, [r4, #0]
 80103ae:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80103b2:	2909      	cmp	r1, #9
 80103b4:	d8f4      	bhi.n	80103a0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80103b6:	fb02 3000 	mla	r0, r2, r0, r3
 80103ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80103be:	3830      	subs	r0, #48	; 0x30
 80103c0:	2b2e      	cmp	r3, #46	; 0x2e
 80103c2:	d002      	beq.n	80103ca <Sscan::Float(char const*, char const*, float&)+0x54>
 80103c4:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80103c8:	d1f0      	bne.n	80103ac <Sscan::Float(char const*, char const*, float&)+0x36>
 80103ca:	f7f6 ffc7 	bl	800735c <__aeabi_ui2f>
 80103ce:	6030      	str	r0, [r6, #0]
 80103d0:	7823      	ldrb	r3, [r4, #0]
 80103d2:	4605      	mov	r5, r0
 80103d4:	2b2e      	cmp	r3, #46	; 0x2e
 80103d6:	d008      	beq.n	80103ea <Sscan::Float(char const*, char const*, float&)+0x74>
 80103d8:	f1b8 0f00 	cmp.w	r8, #0
 80103dc:	d101      	bne.n	80103e2 <Sscan::Float(char const*, char const*, float&)+0x6c>
 80103de:	2700      	movs	r7, #0
 80103e0:	e7df      	b.n	80103a2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 80103e2:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 80103e6:	6035      	str	r5, [r6, #0]
 80103e8:	e7f9      	b.n	80103de <Sscan::Float(char const*, char const*, float&)+0x68>
 80103ea:	f04f 0901 	mov.w	r9, #1
 80103ee:	2000      	movs	r0, #0
 80103f0:	220a      	movs	r2, #10
 80103f2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80103f6:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 80103fa:	d007      	beq.n	801040c <Sscan::Float(char const*, char const*, float&)+0x96>
 80103fc:	3b30      	subs	r3, #48	; 0x30
 80103fe:	2b09      	cmp	r3, #9
 8010400:	d8ce      	bhi.n	80103a0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8010402:	fb02 3000 	mla	r0, r2, r0, r3
 8010406:	fb02 f909 	mul.w	r9, r2, r9
 801040a:	e7f2      	b.n	80103f2 <Sscan::Float(char const*, char const*, float&)+0x7c>
 801040c:	f7f6 ffa6 	bl	800735c <__aeabi_ui2f>
 8010410:	4604      	mov	r4, r0
 8010412:	4648      	mov	r0, r9
 8010414:	f7f6 ffa2 	bl	800735c <__aeabi_ui2f>
 8010418:	4601      	mov	r1, r0
 801041a:	4620      	mov	r0, r4
 801041c:	f7f7 fc86 	bl	8007d2c <__aeabi_fdiv>
 8010420:	4629      	mov	r1, r5
 8010422:	f7f6 feeb 	bl	80071fc <__addsf3>
 8010426:	f1b8 0f00 	cmp.w	r8, #0
 801042a:	d101      	bne.n	8010430 <Sscan::Float(char const*, char const*, float&)+0xba>
 801042c:	6030      	str	r0, [r6, #0]
 801042e:	e7d6      	b.n	80103de <Sscan::Float(char const*, char const*, float&)+0x68>
 8010430:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8010434:	6030      	str	r0, [r6, #0]
 8010436:	e7b4      	b.n	80103a2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8010438:	2701      	movs	r7, #1
 801043a:	e7b2      	b.n	80103a2 <Sscan::Float(char const*, char const*, float&)+0x2c>

0801043c <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 801043c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801043e:	4615      	mov	r5, r2
 8010440:	f000 f8a0 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 8010444:	b3c0      	cbz	r0, 80104b8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 8010446:	2400      	movs	r4, #0
 8010448:	270a      	movs	r7, #10
 801044a:	ae01      	add	r6, sp, #4
 801044c:	4603      	mov	r3, r0
 801044e:	2100      	movs	r1, #0
 8010450:	f100 0c04 	add.w	ip, r0, #4
 8010454:	4618      	mov	r0, r3
 8010456:	f810 2b01 	ldrb.w	r2, [r0], #1
 801045a:	2a2e      	cmp	r2, #46	; 0x2e
 801045c:	d00e      	beq.n	801047c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801045e:	b16a      	cbz	r2, 801047c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8010460:	4560      	cmp	r0, ip
 8010462:	d102      	bne.n	801046a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 8010464:	2002      	movs	r0, #2
 8010466:	b003      	add	sp, #12
 8010468:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801046a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 801046e:	2b09      	cmp	r3, #9
 8010470:	d8f8      	bhi.n	8010464 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010472:	fb07 2101 	mla	r1, r7, r1, r2
 8010476:	4603      	mov	r3, r0
 8010478:	3930      	subs	r1, #48	; 0x30
 801047a:	e7eb      	b.n	8010454 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 801047c:	29ff      	cmp	r1, #255	; 0xff
 801047e:	d8f1      	bhi.n	8010464 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010480:	3401      	adds	r4, #1
 8010482:	2c03      	cmp	r4, #3
 8010484:	f806 1b01 	strb.w	r1, [r6], #1
 8010488:	d1e0      	bne.n	801044c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 801048a:	2400      	movs	r4, #0
 801048c:	220a      	movs	r2, #10
 801048e:	1d1e      	adds	r6, r3, #4
 8010490:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8010494:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8010498:	d007      	beq.n	80104aa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 801049a:	429e      	cmp	r6, r3
 801049c:	d0e2      	beq.n	8010464 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801049e:	3930      	subs	r1, #48	; 0x30
 80104a0:	2909      	cmp	r1, #9
 80104a2:	d8df      	bhi.n	8010464 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80104a4:	fb02 1404 	mla	r4, r2, r4, r1
 80104a8:	e7f2      	b.n	8010490 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80104aa:	2cff      	cmp	r4, #255	; 0xff
 80104ac:	d8da      	bhi.n	8010464 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80104ae:	f88d 4007 	strb.w	r4, [sp, #7]
 80104b2:	9b01      	ldr	r3, [sp, #4]
 80104b4:	602b      	str	r3, [r5, #0]
 80104b6:	e7d6      	b.n	8010466 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 80104b8:	2001      	movs	r0, #1
 80104ba:	e7d4      	b.n	8010466 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

080104bc <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80104bc:	b538      	push	{r3, r4, r5, lr}
 80104be:	4615      	mov	r5, r2
 80104c0:	f000 f860 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 80104c4:	b1a0      	cbz	r0, 80104f0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80104c6:	4604      	mov	r4, r0
 80104c8:	2100      	movs	r1, #0
 80104ca:	220a      	movs	r2, #10
 80104cc:	7823      	ldrb	r3, [r4, #0]
 80104ce:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80104d2:	2809      	cmp	r0, #9
 80104d4:	d80e      	bhi.n	80104f4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80104d6:	fb02 3101 	mla	r1, r2, r1, r3
 80104da:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80104de:	3930      	subs	r1, #48	; 0x30
 80104e0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80104e4:	d1f2      	bne.n	80104cc <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 80104e6:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80104ea:	d203      	bcs.n	80104f4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80104ec:	8029      	strh	r1, [r5, #0]
 80104ee:	bd38      	pop	{r3, r4, r5, pc}
 80104f0:	2001      	movs	r0, #1
 80104f2:	e7fc      	b.n	80104ee <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 80104f4:	2002      	movs	r0, #2
 80104f6:	e7fa      	b.n	80104ee <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

080104f8 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 80104f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104fa:	4615      	mov	r5, r2
 80104fc:	f000 f842 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 8010500:	b1f8      	cbz	r0, 8010542 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8010502:	2300      	movs	r3, #0
 8010504:	4604      	mov	r4, r0
 8010506:	461e      	mov	r6, r3
 8010508:	270a      	movs	r7, #10
 801050a:	7822      	ldrb	r2, [r4, #0]
 801050c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8010510:	2909      	cmp	r1, #9
 8010512:	d818      	bhi.n	8010546 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8010514:	fba3 3107 	umull	r3, r1, r3, r7
 8010518:	fb07 1106 	mla	r1, r7, r6, r1
 801051c:	3b30      	subs	r3, #48	; 0x30
 801051e:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8010522:	18d3      	adds	r3, r2, r3
 8010524:	f141 0600 	adc.w	r6, r1, #0
 8010528:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801052c:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8010530:	d1eb      	bne.n	801050a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8010532:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8010536:	429a      	cmp	r2, r3
 8010538:	eb70 0206 	sbcs.w	r2, r0, r6
 801053c:	d303      	bcc.n	8010546 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801053e:	602b      	str	r3, [r5, #0]
 8010540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010542:	2001      	movs	r0, #1
 8010544:	e7fc      	b.n	8010540 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8010546:	2002      	movs	r0, #2
 8010548:	e7fa      	b.n	8010540 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

0801054a <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 801054a:	b538      	push	{r3, r4, r5, lr}
 801054c:	4615      	mov	r5, r2
 801054e:	f000 f819 	bl	8010584 <Sscan::checkName(char const*, char const*)>
 8010552:	b198      	cbz	r0, 801057c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8010554:	4604      	mov	r4, r0
 8010556:	2100      	movs	r1, #0
 8010558:	220a      	movs	r2, #10
 801055a:	7823      	ldrb	r3, [r4, #0]
 801055c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8010560:	2809      	cmp	r0, #9
 8010562:	d80d      	bhi.n	8010580 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8010564:	fb02 3101 	mla	r1, r2, r1, r3
 8010568:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801056c:	3930      	subs	r1, #48	; 0x30
 801056e:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8010572:	d1f2      	bne.n	801055a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8010574:	29ff      	cmp	r1, #255	; 0xff
 8010576:	d803      	bhi.n	8010580 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8010578:	7029      	strb	r1, [r5, #0]
 801057a:	bd38      	pop	{r3, r4, r5, pc}
 801057c:	2001      	movs	r0, #1
 801057e:	e7fc      	b.n	801057a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8010580:	2002      	movs	r0, #2
 8010582:	e7fa      	b.n	801057a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08010584 <Sscan::checkName(char const*, char const*)>:
 8010584:	4603      	mov	r3, r0
 8010586:	b510      	push	{r4, lr}
 8010588:	3901      	subs	r1, #1
 801058a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 801058e:	461c      	mov	r4, r3
 8010590:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010594:	b120      	cbz	r0, 80105a0 <Sscan::checkName(char const*, char const*)+0x1c>
 8010596:	b10a      	cbz	r2, 801059c <Sscan::checkName(char const*, char const*)+0x18>
 8010598:	4290      	cmp	r0, r2
 801059a:	d0f6      	beq.n	801058a <Sscan::checkName(char const*, char const*)+0x6>
 801059c:	2000      	movs	r0, #0
 801059e:	e006      	b.n	80105ae <Sscan::checkName(char const*, char const*)+0x2a>
 80105a0:	2a3d      	cmp	r2, #61	; 0x3d
 80105a2:	d104      	bne.n	80105ae <Sscan::checkName(char const*, char const*)+0x2a>
 80105a4:	7860      	ldrb	r0, [r4, #1]
 80105a6:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80105aa:	d000      	beq.n	80105ae <Sscan::checkName(char const*, char const*)+0x2a>
 80105ac:	1c60      	adds	r0, r4, #1
 80105ae:	bd10      	pop	{r4, pc}

080105b0 <Display::PrintInfo() [clone .isra.0]>:
 80105b0:	b910      	cbnz	r0, 80105b8 <Display::PrintInfo() [clone .isra.0]+0x8>
 80105b2:	4803      	ldr	r0, [pc, #12]	; (80105c0 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80105b4:	f000 bd1f 	b.w	8010ff6 <puts>
 80105b8:	6803      	ldr	r3, [r0, #0]
 80105ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80105bc:	4718      	bx	r3
 80105be:	bf00      	nop
 80105c0:	0801498b 	stmdaeq	r1, {r0, r1, r3, r7, r8, fp, lr}

080105c4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80105c4:	b513      	push	{r0, r1, r4, lr}
 80105c6:	4604      	mov	r4, r0
 80105c8:	0a13      	lsrs	r3, r2, #8
 80105ca:	7800      	ldrb	r0, [r0, #0]
 80105cc:	f88d 1004 	strb.w	r1, [sp, #4]
 80105d0:	f88d 3005 	strb.w	r3, [sp, #5]
 80105d4:	f88d 2006 	strb.w	r2, [sp, #6]
 80105d8:	f001 fc04 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 80105dc:	6860      	ldr	r0, [r4, #4]
 80105de:	f001 fbf9 	bl	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>
 80105e2:	2103      	movs	r1, #3
 80105e4:	a801      	add	r0, sp, #4
 80105e6:	f001 fc03 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 80105ea:	b002      	add	sp, #8
 80105ec:	bd10      	pop	{r4, pc}

080105ee <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 80105ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80105f0:	460d      	mov	r5, r1
 80105f2:	4604      	mov	r4, r0
 80105f4:	f001 fbf6 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 80105f8:	4628      	mov	r0, r5
 80105fa:	f001 fbeb 	bl	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>
 80105fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010602:	2b07      	cmp	r3, #7
 8010604:	d902      	bls.n	801060c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8010606:	3c50      	subs	r4, #80	; 0x50
 8010608:	2c0f      	cmp	r4, #15
 801060a:	d809      	bhi.n	8010620 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 801060c:	2101      	movs	r1, #1
 801060e:	f10d 0007 	add.w	r0, sp, #7
 8010612:	f001 fc53 	bl	8011ebc <gd32_i2c_read(char*, unsigned int)>
 8010616:	fab0 f080 	clz	r0, r0
 801061a:	0940      	lsrs	r0, r0, #5
 801061c:	b003      	add	sp, #12
 801061e:	bd30      	pop	{r4, r5, pc}
 8010620:	2100      	movs	r1, #0
 8010622:	4608      	mov	r0, r1
 8010624:	f001 fbe4 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 8010628:	e7f5      	b.n	8010616 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801062a <Display::Detect7Segment()>:
 801062a:	b538      	push	{r3, r4, r5, lr}
 801062c:	68c1      	ldr	r1, [r0, #12]
 801062e:	4604      	mov	r4, r0
 8010630:	7a00      	ldrb	r0, [r0, #8]
 8010632:	f7ff ffdc 	bl	80105ee <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8010636:	7460      	strb	r0, [r4, #17]
 8010638:	b170      	cbz	r0, 8010658 <Display::Detect7Segment()+0x2e>
 801063a:	2200      	movs	r2, #0
 801063c:	f104 0508 	add.w	r5, r4, #8
 8010640:	4611      	mov	r1, r2
 8010642:	4628      	mov	r0, r5
 8010644:	f7ff ffbe 	bl	80105c4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8010648:	7c63      	ldrb	r3, [r4, #17]
 801064a:	b12b      	cbz	r3, 8010658 <Display::Detect7Segment()+0x2e>
 801064c:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8010650:	2112      	movs	r1, #18
 8010652:	4628      	mov	r0, r5
 8010654:	f7ff ffb6 	bl	80105c4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8010658:	bd38      	pop	{r3, r4, r5, pc}

0801065a <Display::Detect(display::Type)>:
 801065a:	2902      	cmp	r1, #2
 801065c:	b538      	push	{r3, r4, r5, lr}
 801065e:	4604      	mov	r4, r0
 8010660:	d014      	beq.n	801068c <Display::Detect(display::Type)+0x32>
 8010662:	2904      	cmp	r1, #4
 8010664:	d01b      	beq.n	801069e <Display::Detect(display::Type)+0x44>
 8010666:	69a0      	ldr	r0, [r4, #24]
 8010668:	b168      	cbz	r0, 8010686 <Display::Detect(display::Type)+0x2c>
 801066a:	6803      	ldr	r3, [r0, #0]
 801066c:	689b      	ldr	r3, [r3, #8]
 801066e:	4798      	blx	r3
 8010670:	4603      	mov	r3, r0
 8010672:	69a0      	ldr	r0, [r4, #24]
 8010674:	b9ab      	cbnz	r3, 80106a2 <Display::Detect(display::Type)+0x48>
 8010676:	b110      	cbz	r0, 801067e <Display::Detect(display::Type)+0x24>
 8010678:	6803      	ldr	r3, [r0, #0]
 801067a:	685b      	ldr	r3, [r3, #4]
 801067c:	4798      	blx	r3
 801067e:	2300      	movs	r3, #0
 8010680:	61a3      	str	r3, [r4, #24]
 8010682:	2304      	movs	r3, #4
 8010684:	6023      	str	r3, [r4, #0]
 8010686:	2300      	movs	r3, #0
 8010688:	6163      	str	r3, [r4, #20]
 801068a:	e010      	b.n	80106ae <Display::Detect(display::Type)+0x54>
 801068c:	2018      	movs	r0, #24
 801068e:	f000 fbb7 	bl	8010e00 <operator new(unsigned int)>
 8010692:	4605      	mov	r5, r0
 8010694:	2100      	movs	r1, #0
 8010696:	f000 f89b 	bl	80107d0 <Ssd1306::Ssd1306(TOledPanel)>
 801069a:	61a5      	str	r5, [r4, #24]
 801069c:	e7e3      	b.n	8010666 <Display::Detect(display::Type)+0xc>
 801069e:	6001      	str	r1, [r0, #0]
 80106a0:	e7e1      	b.n	8010666 <Display::Detect(display::Type)+0xc>
 80106a2:	6803      	ldr	r3, [r0, #0]
 80106a4:	68db      	ldr	r3, [r3, #12]
 80106a6:	4798      	blx	r3
 80106a8:	69a3      	ldr	r3, [r4, #24]
 80106aa:	2b00      	cmp	r3, #0
 80106ac:	d0eb      	beq.n	8010686 <Display::Detect(display::Type)+0x2c>
 80106ae:	bd38      	pop	{r3, r4, r5, pc}

080106b0 <Display::Display()>:
 80106b0:	2304      	movs	r3, #4
 80106b2:	b510      	push	{r4, lr}
 80106b4:	6003      	str	r3, [r0, #0]
 80106b6:	4b0d      	ldr	r3, [pc, #52]	; (80106ec <Display::Display()+0x3c>)
 80106b8:	4604      	mov	r4, r0
 80106ba:	681b      	ldr	r3, [r3, #0]
 80106bc:	4a0c      	ldr	r2, [pc, #48]	; (80106f0 <Display::Display()+0x40>)
 80106be:	6043      	str	r3, [r0, #4]
 80106c0:	2321      	movs	r3, #33	; 0x21
 80106c2:	7203      	strb	r3, [r0, #8]
 80106c4:	4b0b      	ldr	r3, [pc, #44]	; (80106f4 <Display::Display()+0x44>)
 80106c6:	2102      	movs	r1, #2
 80106c8:	60c3      	str	r3, [r0, #12]
 80106ca:	2300      	movs	r3, #0
 80106cc:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80106d0:	8203      	strh	r3, [r0, #16]
 80106d2:	4b09      	ldr	r3, [pc, #36]	; (80106f8 <Display::Display()+0x48>)
 80106d4:	6018      	str	r0, [r3, #0]
 80106d6:	f7ff ffc0 	bl	801065a <Display::Detect(display::Type)>
 80106da:	4620      	mov	r0, r4
 80106dc:	f7ff ffa5 	bl	801062a <Display::Detect7Segment()>
 80106e0:	69a0      	ldr	r0, [r4, #24]
 80106e2:	f7ff ff65 	bl	80105b0 <Display::PrintInfo() [clone .isra.0]>
 80106e6:	4620      	mov	r0, r4
 80106e8:	bd10      	pop	{r4, pc}
 80106ea:	bf00      	nop
 80106ec:	200097a4 	andcs	r9, r0, r4, lsr #15
 80106f0:	000493e0 	andeq	r9, r4, r0, ror #7
 80106f4:	00061a80 	andeq	r1, r6, r0, lsl #21
 80106f8:	200096a0 	andcs	r9, r0, r0, lsr #13

080106fc <Ssd1306::~Ssd1306()>:
 80106fc:	4770      	bx	lr

080106fe <Ssd1306::SetCursor(unsigned int)>:
 80106fe:	4770      	bx	lr

08010700 <Ssd1306::PrintInfo()>:
 8010700:	b410      	push	{r4}
 8010702:	4906      	ldr	r1, [pc, #24]	; (801071c <Ssd1306::PrintInfo()+0x1c>)
 8010704:	7c44      	ldrb	r4, [r0, #17]
 8010706:	7903      	ldrb	r3, [r0, #4]
 8010708:	7942      	ldrb	r2, [r0, #5]
 801070a:	4805      	ldr	r0, [pc, #20]	; (8010720 <Ssd1306::PrintInfo()+0x20>)
 801070c:	2c00      	cmp	r4, #0
 801070e:	bf08      	it	eq
 8010710:	4601      	moveq	r1, r0
 8010712:	4804      	ldr	r0, [pc, #16]	; (8010724 <Ssd1306::PrintInfo()+0x24>)
 8010714:	bc10      	pop	{r4}
 8010716:	f7f8 ba67 	b.w	8008be8 <printf>
 801071a:	bf00      	nop
 801071c:	0801499c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, lr}
 8010720:	080149a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, fp, lr}
 8010724:	080149ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, fp, lr}

08010728 <Ssd1306::~Ssd1306()>:
 8010728:	b510      	push	{r4, lr}
 801072a:	4604      	mov	r4, r0
 801072c:	f000 fb64 	bl	8010df8 <operator delete(void*)>
 8010730:	4620      	mov	r0, r4
 8010732:	bd10      	pop	{r4, pc}

08010734 <HAL_I2C::Setup()>:
 8010734:	b510      	push	{r4, lr}
 8010736:	4604      	mov	r4, r0
 8010738:	7800      	ldrb	r0, [r0, #0]
 801073a:	f001 fb53 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 801073e:	6860      	ldr	r0, [r4, #4]
 8010740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010744:	f001 bb46 	b.w	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>

08010748 <Ssd1306::PutChar(int)>:
 8010748:	b510      	push	{r4, lr}
 801074a:	f1a1 0420 	sub.w	r4, r1, #32
 801074e:	2c5f      	cmp	r4, #95	; 0x5f
 8010750:	bf88      	it	hi
 8010752:	2400      	movhi	r4, #0
 8010754:	3008      	adds	r0, #8
 8010756:	f7ff ffed 	bl	8010734 <HAL_I2C::Setup()>
 801075a:	4804      	ldr	r0, [pc, #16]	; (801076c <Ssd1306::PutChar(int)+0x24>)
 801075c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8010760:	4420      	add	r0, r4
 8010762:	2107      	movs	r1, #7
 8010764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010768:	f001 bb42 	b.w	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 801076c:	080149c0 	stmdaeq	r1, {r6, r7, r8, fp, lr}

08010770 <Ssd1306::PutString(char const*)>:
 8010770:	b538      	push	{r3, r4, r5, lr}
 8010772:	4605      	mov	r5, r0
 8010774:	1e4c      	subs	r4, r1, #1
 8010776:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801077a:	b119      	cbz	r1, 8010784 <Ssd1306::PutString(char const*)+0x14>
 801077c:	4628      	mov	r0, r5
 801077e:	f7ff ffe3 	bl	8010748 <Ssd1306::PutChar(int)>
 8010782:	e7f8      	b.n	8010776 <Ssd1306::PutString(char const*)+0x6>
 8010784:	bd38      	pop	{r3, r4, r5, pc}

08010786 <Ssd1306::Text(char const*, unsigned int)>:
 8010786:	b570      	push	{r4, r5, r6, lr}
 8010788:	7903      	ldrb	r3, [r0, #4]
 801078a:	4605      	mov	r5, r0
 801078c:	460c      	mov	r4, r1
 801078e:	4293      	cmp	r3, r2
 8010790:	bf94      	ite	ls
 8010792:	18ce      	addls	r6, r1, r3
 8010794:	188e      	addhi	r6, r1, r2
 8010796:	42b4      	cmp	r4, r6
 8010798:	d005      	beq.n	80107a6 <Ssd1306::Text(char const*, unsigned int)+0x20>
 801079a:	4628      	mov	r0, r5
 801079c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80107a0:	f7ff ffd2 	bl	8010748 <Ssd1306::PutChar(int)>
 80107a4:	e7f7      	b.n	8010796 <Ssd1306::Text(char const*, unsigned int)+0x10>
 80107a6:	bd70      	pop	{r4, r5, r6, pc}

080107a8 <Ssd1306::InitMembers()>:
 80107a8:	7c03      	ldrb	r3, [r0, #16]
 80107aa:	b12b      	cbz	r3, 80107b8 <Ssd1306::InitMembers()+0x10>
 80107ac:	3b01      	subs	r3, #1
 80107ae:	2b01      	cmp	r3, #1
 80107b0:	d908      	bls.n	80107c4 <Ssd1306::InitMembers()+0x1c>
 80107b2:	f640 0315 	movw	r3, #2069	; 0x815
 80107b6:	e007      	b.n	80107c8 <Ssd1306::InitMembers()+0x20>
 80107b8:	f640 0315 	movw	r3, #2069	; 0x815
 80107bc:	8083      	strh	r3, [r0, #4]
 80107be:	2308      	movs	r3, #8
 80107c0:	6143      	str	r3, [r0, #20]
 80107c2:	4770      	bx	lr
 80107c4:	f240 4315 	movw	r3, #1045	; 0x415
 80107c8:	8083      	strh	r3, [r0, #4]
 80107ca:	2304      	movs	r3, #4
 80107cc:	e7f8      	b.n	80107c0 <Ssd1306::InitMembers()+0x18>
	...

080107d0 <Ssd1306::Ssd1306(TOledPanel)>:
 80107d0:	4a08      	ldr	r2, [pc, #32]	; (80107f4 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80107d2:	b508      	push	{r3, lr}
 80107d4:	6002      	str	r2, [r0, #0]
 80107d6:	227f      	movs	r2, #127	; 0x7f
 80107d8:	80c2      	strh	r2, [r0, #6]
 80107da:	223c      	movs	r2, #60	; 0x3c
 80107dc:	7202      	strb	r2, [r0, #8]
 80107de:	4a06      	ldr	r2, [pc, #24]	; (80107f8 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 80107e0:	7401      	strb	r1, [r0, #16]
 80107e2:	60c2      	str	r2, [r0, #12]
 80107e4:	2200      	movs	r2, #0
 80107e6:	7442      	strb	r2, [r0, #17]
 80107e8:	4a04      	ldr	r2, [pc, #16]	; (80107fc <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80107ea:	6010      	str	r0, [r2, #0]
 80107ec:	f7ff ffdc 	bl	80107a8 <Ssd1306::InitMembers()>
 80107f0:	bd08      	pop	{r3, pc}
 80107f2:	bf00      	nop
 80107f4:	08014c98 	stmdaeq	r1, {r3, r4, r7, sl, fp, lr}
 80107f8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80107fc:	2000972c 	andcs	r9, r0, ip, lsr #14

08010800 <Ssd1306::SendCommand(unsigned char)>:
 8010800:	2300      	movs	r3, #0
 8010802:	b507      	push	{r0, r1, r2, lr}
 8010804:	3008      	adds	r0, #8
 8010806:	f88d 3004 	strb.w	r3, [sp, #4]
 801080a:	f88d 1005 	strb.w	r1, [sp, #5]
 801080e:	f7ff ff91 	bl	8010734 <HAL_I2C::Setup()>
 8010812:	2102      	movs	r1, #2
 8010814:	a801      	add	r0, sp, #4
 8010816:	f001 faeb 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 801081a:	b003      	add	sp, #12
 801081c:	f85d fb04 	ldr.w	pc, [sp], #4

08010820 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8010820:	2914      	cmp	r1, #20
 8010822:	b570      	push	{r4, r5, r6, lr}
 8010824:	4605      	mov	r5, r0
 8010826:	4616      	mov	r6, r2
 8010828:	d81c      	bhi.n	8010864 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801082a:	7943      	ldrb	r3, [r0, #5]
 801082c:	4293      	cmp	r3, r2
 801082e:	d919      	bls.n	8010864 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8010830:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8010834:	7c43      	ldrb	r3, [r0, #17]
 8010836:	004c      	lsls	r4, r1, #1
 8010838:	b2e4      	uxtb	r4, r4
 801083a:	b10b      	cbz	r3, 8010840 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 801083c:	3404      	adds	r4, #4
 801083e:	b2e4      	uxtb	r4, r4
 8010840:	4628      	mov	r0, r5
 8010842:	f004 010e 	and.w	r1, r4, #14
 8010846:	f7ff ffdb 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 801084a:	0921      	lsrs	r1, r4, #4
 801084c:	4628      	mov	r0, r5
 801084e:	f041 0110 	orr.w	r1, r1, #16
 8010852:	f7ff ffd5 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010856:	4628      	mov	r0, r5
 8010858:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 801085c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010860:	f7ff bfce 	b.w	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010864:	bd70      	pop	{r4, r5, r6, pc}

08010866 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8010866:	b570      	push	{r4, r5, r6, lr}
 8010868:	4604      	mov	r4, r0
 801086a:	4615      	mov	r5, r2
 801086c:	461e      	mov	r6, r3
 801086e:	b171      	cbz	r1, 801088e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8010870:	7943      	ldrb	r3, [r0, #5]
 8010872:	428b      	cmp	r3, r1
 8010874:	d30b      	bcc.n	801088e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8010876:	3901      	subs	r1, #1
 8010878:	b2ca      	uxtb	r2, r1
 801087a:	2100      	movs	r1, #0
 801087c:	f7ff ffd0 	bl	8010820 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010880:	4632      	mov	r2, r6
 8010882:	4629      	mov	r1, r5
 8010884:	4620      	mov	r0, r4
 8010886:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801088a:	f7ff bf7c 	b.w	8010786 <Ssd1306::Text(char const*, unsigned int)>
 801088e:	bd70      	pop	{r4, r5, r6, pc}

08010890 <Ssd1306::ClearLine(unsigned char)>:
 8010890:	b538      	push	{r3, r4, r5, lr}
 8010892:	4605      	mov	r5, r0
 8010894:	b1b9      	cbz	r1, 80108c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 8010896:	7943      	ldrb	r3, [r0, #5]
 8010898:	428b      	cmp	r3, r1
 801089a:	d314      	bcc.n	80108c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 801089c:	3901      	subs	r1, #1
 801089e:	b2cc      	uxtb	r4, r1
 80108a0:	4622      	mov	r2, r4
 80108a2:	2100      	movs	r1, #0
 80108a4:	f7ff ffbc 	bl	8010820 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80108a8:	f105 0008 	add.w	r0, r5, #8
 80108ac:	f7ff ff42 	bl	8010734 <HAL_I2C::Setup()>
 80108b0:	2181      	movs	r1, #129	; 0x81
 80108b2:	4805      	ldr	r0, [pc, #20]	; (80108c8 <Ssd1306::ClearLine(unsigned char)+0x38>)
 80108b4:	f001 fa9c 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 80108b8:	4622      	mov	r2, r4
 80108ba:	4628      	mov	r0, r5
 80108bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80108c0:	2100      	movs	r1, #0
 80108c2:	f7ff bfad 	b.w	8010820 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80108c6:	bd38      	pop	{r3, r4, r5, pc}
 80108c8:	200096a4 	andcs	r9, r0, r4, lsr #13

080108cc <Ssd1306::SetSleep(bool)>:
 80108cc:	b111      	cbz	r1, 80108d4 <Ssd1306::SetSleep(bool)+0x8>
 80108ce:	21ae      	movs	r1, #174	; 0xae
 80108d0:	f7ff bf96 	b.w	8010800 <Ssd1306::SendCommand(unsigned char)>
 80108d4:	21af      	movs	r1, #175	; 0xaf
 80108d6:	e7fb      	b.n	80108d0 <Ssd1306::SetSleep(bool)+0x4>

080108d8 <Ssd1306::SetContrast(unsigned char)>:
 80108d8:	b538      	push	{r3, r4, r5, lr}
 80108da:	4604      	mov	r4, r0
 80108dc:	460d      	mov	r5, r1
 80108de:	7181      	strb	r1, [r0, #6]
 80108e0:	2181      	movs	r1, #129	; 0x81
 80108e2:	f7ff ff8d 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 80108e6:	4629      	mov	r1, r5
 80108e8:	4620      	mov	r0, r4
 80108ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80108ee:	f7ff bf87 	b.w	8010800 <Ssd1306::SendCommand(unsigned char)>

080108f2 <Ssd1306::SetFlipVertically(bool)>:
 80108f2:	b510      	push	{r4, lr}
 80108f4:	4604      	mov	r4, r0
 80108f6:	71c1      	strb	r1, [r0, #7]
 80108f8:	b141      	cbz	r1, 801090c <Ssd1306::SetFlipVertically(bool)+0x1a>
 80108fa:	21c0      	movs	r1, #192	; 0xc0
 80108fc:	f7ff ff80 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010900:	21a0      	movs	r1, #160	; 0xa0
 8010902:	4620      	mov	r0, r4
 8010904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010908:	f7ff bf7a 	b.w	8010800 <Ssd1306::SendCommand(unsigned char)>
 801090c:	21c8      	movs	r1, #200	; 0xc8
 801090e:	f7ff ff77 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010912:	21a1      	movs	r1, #161	; 0xa1
 8010914:	e7f5      	b.n	8010902 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08010918 <Ssd1306::CheckSH1106()>:
 8010918:	b570      	push	{r4, r5, r6, lr}
 801091a:	4604      	mov	r4, r0
 801091c:	b086      	sub	sp, #24
 801091e:	2100      	movs	r1, #0
 8010920:	f7ff ff6e 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010924:	2190      	movs	r1, #144	; 0x90
 8010926:	4620      	mov	r0, r4
 8010928:	f7ff ff6a 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 801092c:	21b0      	movs	r1, #176	; 0xb0
 801092e:	4620      	mov	r0, r4
 8010930:	f7ff ff66 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010934:	4b22      	ldr	r3, [pc, #136]	; (80109c0 <Ssd1306::CheckSH1106()+0xa8>)
 8010936:	f104 0608 	add.w	r6, r4, #8
 801093a:	6818      	ldr	r0, [r3, #0]
 801093c:	791b      	ldrb	r3, [r3, #4]
 801093e:	ad02      	add	r5, sp, #8
 8010940:	9002      	str	r0, [sp, #8]
 8010942:	4630      	mov	r0, r6
 8010944:	712b      	strb	r3, [r5, #4]
 8010946:	f7ff fef5 	bl	8010734 <HAL_I2C::Setup()>
 801094a:	2105      	movs	r1, #5
 801094c:	4628      	mov	r0, r5
 801094e:	f001 fa4f 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 8010952:	2100      	movs	r1, #0
 8010954:	4620      	mov	r0, r4
 8010956:	f7ff ff53 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 801095a:	2190      	movs	r1, #144	; 0x90
 801095c:	4620      	mov	r0, r4
 801095e:	f7ff ff4f 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010962:	21b0      	movs	r1, #176	; 0xb0
 8010964:	4620      	mov	r0, r4
 8010966:	f7ff ff4b 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 801096a:	2300      	movs	r3, #0
 801096c:	9304      	str	r3, [sp, #16]
 801096e:	f88d 3014 	strb.w	r3, [sp, #20]
 8010972:	2340      	movs	r3, #64	; 0x40
 8010974:	4630      	mov	r0, r6
 8010976:	f88d 3007 	strb.w	r3, [sp, #7]
 801097a:	f7ff fedb 	bl	8010734 <HAL_I2C::Setup()>
 801097e:	2101      	movs	r1, #1
 8010980:	f10d 0007 	add.w	r0, sp, #7
 8010984:	f001 fa34 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 8010988:	4630      	mov	r0, r6
 801098a:	f7ff fed3 	bl	8010734 <HAL_I2C::Setup()>
 801098e:	2105      	movs	r1, #5
 8010990:	a804      	add	r0, sp, #16
 8010992:	f001 fa93 	bl	8011ebc <gd32_i2c_read(char*, unsigned int)>
 8010996:	2201      	movs	r2, #1
 8010998:	5cab      	ldrb	r3, [r5, r2]
 801099a:	a904      	add	r1, sp, #16
 801099c:	3201      	adds	r2, #1
 801099e:	4411      	add	r1, r2
 80109a0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 80109a4:	428b      	cmp	r3, r1
 80109a6:	d006      	beq.n	80109b6 <Ssd1306::CheckSH1106()+0x9e>
 80109a8:	1a5b      	subs	r3, r3, r1
 80109aa:	fab3 f383 	clz	r3, r3
 80109ae:	095b      	lsrs	r3, r3, #5
 80109b0:	7463      	strb	r3, [r4, #17]
 80109b2:	b006      	add	sp, #24
 80109b4:	bd70      	pop	{r4, r5, r6, pc}
 80109b6:	2a05      	cmp	r2, #5
 80109b8:	d1ee      	bne.n	8010998 <Ssd1306::CheckSH1106()+0x80>
 80109ba:	2300      	movs	r3, #0
 80109bc:	e7f5      	b.n	80109aa <Ssd1306::CheckSH1106()+0x92>
 80109be:	bf00      	nop
 80109c0:	080149b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, lr}

080109c4 <Ssd1306::Cls()>:
 80109c4:	7c43      	ldrb	r3, [r0, #17]
 80109c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109ca:	2b00      	cmp	r3, #0
 80109cc:	bf0c      	ite	eq
 80109ce:	2500      	moveq	r5, #0
 80109d0:	2504      	movne	r5, #4
 80109d2:	4604      	mov	r4, r0
 80109d4:	2600      	movs	r6, #0
 80109d6:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 80109da:	f045 0810 	orr.w	r8, r5, #16
 80109de:	b2ff      	uxtb	r7, r7
 80109e0:	6963      	ldr	r3, [r4, #20]
 80109e2:	4629      	mov	r1, r5
 80109e4:	42b3      	cmp	r3, r6
 80109e6:	4620      	mov	r0, r4
 80109e8:	d91b      	bls.n	8010a22 <Ssd1306::Cls()+0x5e>
 80109ea:	f7ff ff09 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 80109ee:	4641      	mov	r1, r8
 80109f0:	4620      	mov	r0, r4
 80109f2:	f7ff ff05 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 80109f6:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80109fa:	4620      	mov	r0, r4
 80109fc:	b2c9      	uxtb	r1, r1
 80109fe:	f7ff feff 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010a02:	7c23      	ldrb	r3, [r4, #16]
 8010a04:	b123      	cbz	r3, 8010a10 <Ssd1306::Cls()+0x4c>
 8010a06:	3b01      	subs	r3, #1
 8010a08:	2b01      	cmp	r3, #1
 8010a0a:	d901      	bls.n	8010a10 <Ssd1306::Cls()+0x4c>
 8010a0c:	3601      	adds	r6, #1
 8010a0e:	e7e7      	b.n	80109e0 <Ssd1306::Cls()+0x1c>
 8010a10:	f104 0008 	add.w	r0, r4, #8
 8010a14:	f7ff fe8e 	bl	8010734 <HAL_I2C::Setup()>
 8010a18:	4639      	mov	r1, r7
 8010a1a:	4808      	ldr	r0, [pc, #32]	; (8010a3c <Ssd1306::Cls()+0x78>)
 8010a1c:	f001 f9e8 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 8010a20:	e7f4      	b.n	8010a0c <Ssd1306::Cls()+0x48>
 8010a22:	f7ff feed 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010a26:	4641      	mov	r1, r8
 8010a28:	4620      	mov	r0, r4
 8010a2a:	f7ff fee9 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010a2e:	4620      	mov	r0, r4
 8010a30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010a34:	21b0      	movs	r1, #176	; 0xb0
 8010a36:	f7ff bee3 	b.w	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010a3a:	bf00      	nop
 8010a3c:	200096a4 	andcs	r9, r0, r4, lsr #13

08010a40 <Ssd1306::Start()>:
 8010a40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a42:	7a04      	ldrb	r4, [r0, #8]
 8010a44:	68c6      	ldr	r6, [r0, #12]
 8010a46:	4605      	mov	r5, r0
 8010a48:	4620      	mov	r0, r4
 8010a4a:	f001 f9cb 	bl	8011de4 <gd32_i2c_set_address(unsigned char)>
 8010a4e:	4630      	mov	r0, r6
 8010a50:	f001 f9c0 	bl	8011dd4 <gd32_i2c_set_baudrate(unsigned int)>
 8010a54:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010a58:	2b07      	cmp	r3, #7
 8010a5a:	d902      	bls.n	8010a62 <Ssd1306::Start()+0x22>
 8010a5c:	3c50      	subs	r4, #80	; 0x50
 8010a5e:	2c0f      	cmp	r4, #15
 8010a60:	d80f      	bhi.n	8010a82 <Ssd1306::Start()+0x42>
 8010a62:	2101      	movs	r1, #1
 8010a64:	f10d 0007 	add.w	r0, sp, #7
 8010a68:	f001 fa28 	bl	8011ebc <gd32_i2c_read(char*, unsigned int)>
 8010a6c:	fab0 f480 	clz	r4, r0
 8010a70:	0964      	lsrs	r4, r4, #5
 8010a72:	b35c      	cbz	r4, 8010acc <Ssd1306::Start()+0x8c>
 8010a74:	7c2e      	ldrb	r6, [r5, #16]
 8010a76:	b14e      	cbz	r6, 8010a8c <Ssd1306::Start()+0x4c>
 8010a78:	3e01      	subs	r6, #1
 8010a7a:	2e01      	cmp	r6, #1
 8010a7c:	d929      	bls.n	8010ad2 <Ssd1306::Start()+0x92>
 8010a7e:	2400      	movs	r4, #0
 8010a80:	e024      	b.n	8010acc <Ssd1306::Start()+0x8c>
 8010a82:	2100      	movs	r1, #0
 8010a84:	4608      	mov	r0, r1
 8010a86:	f001 f9b3 	bl	8011df0 <gd32_i2c_write(char const*, unsigned int)>
 8010a8a:	e7ef      	b.n	8010a6c <Ssd1306::Start()+0x2c>
 8010a8c:	4f16      	ldr	r7, [pc, #88]	; (8010ae8 <Ssd1306::Start()+0xa8>)
 8010a8e:	4628      	mov	r0, r5
 8010a90:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010a94:	3601      	adds	r6, #1
 8010a96:	f7ff feb3 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010a9a:	2e18      	cmp	r6, #24
 8010a9c:	d1f7      	bne.n	8010a8e <Ssd1306::Start()+0x4e>
 8010a9e:	2300      	movs	r3, #0
 8010aa0:	4a12      	ldr	r2, [pc, #72]	; (8010aec <Ssd1306::Start()+0xac>)
 8010aa2:	4618      	mov	r0, r3
 8010aa4:	4611      	mov	r1, r2
 8010aa6:	3301      	adds	r3, #1
 8010aa8:	2b86      	cmp	r3, #134	; 0x86
 8010aaa:	f802 0b01 	strb.w	r0, [r2], #1
 8010aae:	d1fa      	bne.n	8010aa6 <Ssd1306::Start()+0x66>
 8010ab0:	2340      	movs	r3, #64	; 0x40
 8010ab2:	4628      	mov	r0, r5
 8010ab4:	700b      	strb	r3, [r1, #0]
 8010ab6:	f7ff ff2f 	bl	8010918 <Ssd1306::CheckSH1106()>
 8010aba:	4628      	mov	r0, r5
 8010abc:	f7ff ff82 	bl	80109c4 <Ssd1306::Cls()>
 8010ac0:	21af      	movs	r1, #175	; 0xaf
 8010ac2:	4628      	mov	r0, r5
 8010ac4:	f7ff fe9c 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010ac8:	2301      	movs	r3, #1
 8010aca:	71eb      	strb	r3, [r5, #7]
 8010acc:	4620      	mov	r0, r4
 8010ace:	b003      	add	sp, #12
 8010ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ad2:	2600      	movs	r6, #0
 8010ad4:	4f06      	ldr	r7, [pc, #24]	; (8010af0 <Ssd1306::Start()+0xb0>)
 8010ad6:	4628      	mov	r0, r5
 8010ad8:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010adc:	3601      	adds	r6, #1
 8010ade:	f7ff fe8f 	bl	8010800 <Ssd1306::SendCommand(unsigned char)>
 8010ae2:	2e18      	cmp	r6, #24
 8010ae4:	d1f7      	bne.n	8010ad6 <Ssd1306::Start()+0x96>
 8010ae6:	e7da      	b.n	8010a9e <Ssd1306::Start()+0x5e>
 8010ae8:	08014c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, lr}
 8010aec:	200096a4 	andcs	r9, r0, r4, lsr #13
 8010af0:	08014c60 	stmdaeq	r1, {r5, r6, sl, fp, lr}

08010af4 <console_init>:
 8010af4:	b508      	push	{r3, lr}
 8010af6:	f000 fb71 	bl	80111dc <uart0_init>
 8010afa:	4804      	ldr	r0, [pc, #16]	; (8010b0c <console_init+0x18>)
 8010afc:	f000 fb9e 	bl	801123c <uart0_puts>
 8010b00:	4803      	ldr	r0, [pc, #12]	; (8010b10 <console_init+0x1c>)
 8010b02:	f000 fb9b 	bl	801123c <uart0_puts>
 8010b06:	2000      	movs	r0, #0
 8010b08:	bd08      	pop	{r3, pc}
 8010b0a:	bf00      	nop
 8010b0c:	080130a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip, sp}
 8010b10:	08014cd0 	stmdaeq	r1, {r4, r6, r7, sl, fp, lr}

08010b14 <console_putc>:
 8010b14:	280a      	cmp	r0, #10
 8010b16:	b510      	push	{r4, lr}
 8010b18:	4604      	mov	r4, r0
 8010b1a:	d102      	bne.n	8010b22 <console_putc+0xe>
 8010b1c:	200d      	movs	r0, #13
 8010b1e:	f000 fb6d 	bl	80111fc <uart0_putc>
 8010b22:	4620      	mov	r0, r4
 8010b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b28:	f000 bb68 	b.w	80111fc <uart0_putc>

08010b2c <console_puts>:
 8010b2c:	f000 bb86 	b.w	801123c <uart0_puts>

08010b30 <console_set_fg_color>:
 8010b30:	2807      	cmp	r0, #7
 8010b32:	d810      	bhi.n	8010b56 <console_set_fg_color+0x26>
 8010b34:	e8df f000 	tbb	[pc, r0]
 8010b38:	0b090704 	bleq	8252750 <__exidx_end+0x23d984>
 8010b3c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8010b08 <console_init+0x14>
 8010b40:	4806      	ldr	r0, [pc, #24]	; (8010b5c <console_set_fg_color+0x2c>)
 8010b42:	f000 bb7b 	b.w	801123c <uart0_puts>
 8010b46:	4806      	ldr	r0, [pc, #24]	; (8010b60 <console_set_fg_color+0x30>)
 8010b48:	e7fb      	b.n	8010b42 <console_set_fg_color+0x12>
 8010b4a:	4806      	ldr	r0, [pc, #24]	; (8010b64 <console_set_fg_color+0x34>)
 8010b4c:	e7f9      	b.n	8010b42 <console_set_fg_color+0x12>
 8010b4e:	4806      	ldr	r0, [pc, #24]	; (8010b68 <console_set_fg_color+0x38>)
 8010b50:	e7f7      	b.n	8010b42 <console_set_fg_color+0x12>
 8010b52:	4806      	ldr	r0, [pc, #24]	; (8010b6c <console_set_fg_color+0x3c>)
 8010b54:	e7f5      	b.n	8010b42 <console_set_fg_color+0x12>
 8010b56:	4806      	ldr	r0, [pc, #24]	; (8010b70 <console_set_fg_color+0x40>)
 8010b58:	e7f3      	b.n	8010b42 <console_set_fg_color+0x12>
 8010b5a:	bf00      	nop
 8010b5c:	08014cd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, fp, lr}
 8010b60:	08014cdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, fp, lr}
 8010b64:	08014ce2 	stmdaeq	r1, {r1, r5, r6, r7, sl, fp, lr}
 8010b68:	08014ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, lr}
 8010b6c:	080130a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip, sp}
 8010b70:	08014cee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, fp, lr}

08010b74 <console_error>:
 8010b74:	b510      	push	{r4, lr}
 8010b76:	4604      	mov	r4, r0
 8010b78:	4805      	ldr	r0, [pc, #20]	; (8010b90 <console_error+0x1c>)
 8010b7a:	f000 fb5f 	bl	801123c <uart0_puts>
 8010b7e:	4620      	mov	r0, r4
 8010b80:	f000 fb5c 	bl	801123c <uart0_puts>
 8010b84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b88:	4802      	ldr	r0, [pc, #8]	; (8010b94 <console_error+0x20>)
 8010b8a:	f000 bb57 	b.w	801123c <uart0_puts>
 8010b8e:	bf00      	nop
 8010b90:	08014cdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, fp, lr}
 8010b94:	080130a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip, sp}

08010b98 <console_status>:
 8010b98:	b510      	push	{r4, lr}
 8010b9a:	460c      	mov	r4, r1
 8010b9c:	b280      	uxth	r0, r0
 8010b9e:	f7ff ffc7 	bl	8010b30 <console_set_fg_color>
 8010ba2:	4807      	ldr	r0, [pc, #28]	; (8010bc0 <console_status+0x28>)
 8010ba4:	f000 fb4a 	bl	801123c <uart0_puts>
 8010ba8:	4620      	mov	r0, r4
 8010baa:	f000 fb47 	bl	801123c <uart0_puts>
 8010bae:	200a      	movs	r0, #10
 8010bb0:	f7ff ffb0 	bl	8010b14 <console_putc>
 8010bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bb8:	4802      	ldr	r0, [pc, #8]	; (8010bc4 <console_status+0x2c>)
 8010bba:	f000 bb3f 	b.w	801123c <uart0_puts>
 8010bbe:	bf00      	nop
 8010bc0:	08014cd0 	stmdaeq	r1, {r4, r6, r7, sl, fp, lr}
 8010bc4:	080130a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip, sp}

08010bc8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8010bc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bcc:	4617      	mov	r7, r2
 8010bce:	461e      	mov	r6, r3
 8010bd0:	4d14      	ldr	r5, [pc, #80]	; (8010c24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8010bd2:	4b15      	ldr	r3, [pc, #84]	; (8010c28 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8010bd4:	b086      	sub	sp, #24
 8010bd6:	6018      	str	r0, [r3, #0]
 8010bd8:	4604      	mov	r4, r0
 8010bda:	f105 0803 	add.w	r8, r5, #3
 8010bde:	2203      	movs	r2, #3
 8010be0:	4628      	mov	r0, r5
 8010be2:	f000 f9cc 	bl	8010f7e <memmove>
 8010be6:	4639      	mov	r1, r7
 8010be8:	220b      	movs	r2, #11
 8010bea:	4640      	mov	r0, r8
 8010bec:	f000 f9c7 	bl	8010f7e <memmove>
 8010bf0:	f105 030e 	add.w	r3, r5, #14
 8010bf4:	4631      	mov	r1, r6
 8010bf6:	2208      	movs	r2, #8
 8010bf8:	4618      	mov	r0, r3
 8010bfa:	f000 f9c0 	bl	8010f7e <memmove>
 8010bfe:	2308      	movs	r3, #8
 8010c00:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8010c04:	230b      	movs	r3, #11
 8010c06:	9302      	str	r3, [sp, #8]
 8010c08:	4b08      	ldr	r3, [pc, #32]	; (8010c2c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8010c0a:	9005      	str	r0, [sp, #20]
 8010c0c:	e9cd 5300 	strd	r5, r3, [sp]
 8010c10:	213f      	movs	r1, #63	; 0x3f
 8010c12:	2303      	movs	r3, #3
 8010c14:	4a06      	ldr	r2, [pc, #24]	; (8010c30 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8010c16:	4807      	ldr	r0, [pc, #28]	; (8010c34 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8010c18:	f7f7 fff6 	bl	8008c08 <snprintf>
 8010c1c:	4620      	mov	r0, r4
 8010c1e:	b006      	add	sp, #24
 8010c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c24:	20009730 	andcs	r9, r0, r0, lsr r7
 8010c28:	20009788 	andcs	r9, r0, r8, lsl #15
 8010c2c:	080130ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp}
 8010c30:	08014cf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, fp, lr}
 8010c34:	20009746 	andcs	r9, r0, r6, asr #14

08010c38 <FirmwareVersion::Print(char const*)>:
 8010c38:	b510      	push	{r4, lr}
 8010c3a:	460c      	mov	r4, r1
 8010c3c:	4804      	ldr	r0, [pc, #16]	; (8010c50 <FirmwareVersion::Print(char const*)+0x18>)
 8010c3e:	f000 f9da 	bl	8010ff6 <puts>
 8010c42:	b124      	cbz	r4, 8010c4e <FirmwareVersion::Print(char const*)+0x16>
 8010c44:	4620      	mov	r0, r4
 8010c46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c4a:	f000 b9d4 	b.w	8010ff6 <puts>
 8010c4e:	bd10      	pop	{r4, pc}
 8010c50:	20009746 	andcs	r9, r0, r6, asr #14

08010c54 <LedBlink::LedBlink()>:
 8010c54:	2200      	movs	r2, #0
 8010c56:	2105      	movs	r1, #5
 8010c58:	e9c0 2100 	strd	r2, r1, [r0]
 8010c5c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8010c60:	6082      	str	r2, [r0, #8]
 8010c62:	e9c0 1203 	strd	r1, r2, [r0, #12]
 8010c66:	6142      	str	r2, [r0, #20]
 8010c68:	4a01      	ldr	r2, [pc, #4]	; (8010c70 <LedBlink::LedBlink()+0x1c>)
 8010c6a:	6010      	str	r0, [r2, #0]
 8010c6c:	4770      	bx	lr
 8010c6e:	bf00      	nop
 8010c70:	2000978c 	andcs	r9, r0, ip, lsl #15

08010c74 <LedBlink::SetMode(ledblink::Mode)>:
 8010c74:	6843      	ldr	r3, [r0, #4]
 8010c76:	428b      	cmp	r3, r1
 8010c78:	d02f      	beq.n	8010cda <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010c7a:	6041      	str	r1, [r0, #4]
 8010c7c:	2904      	cmp	r1, #4
 8010c7e:	d822      	bhi.n	8010cc6 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8010c80:	e8df f001 	tbb	[pc, r1]
 8010c84:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8010c88:	23ff001d 	mvnscs	r0, #29
 8010c8c:	6003      	str	r3, [r0, #0]
 8010c8e:	2300      	movs	r3, #0
 8010c90:	2201      	movs	r2, #1
 8010c92:	60c3      	str	r3, [r0, #12]
 8010c94:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010c98:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010c9c:	611a      	str	r2, [r3, #16]
 8010c9e:	6880      	ldr	r0, [r0, #8]
 8010ca0:	b1d8      	cbz	r0, 8010cda <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010ca2:	6803      	ldr	r3, [r0, #0]
 8010ca4:	689b      	ldr	r3, [r3, #8]
 8010ca6:	4718      	bx	r3
 8010ca8:	2301      	movs	r3, #1
 8010caa:	6003      	str	r3, [r0, #0]
 8010cac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8010cb0:	60c3      	str	r3, [r0, #12]
 8010cb2:	e7f4      	b.n	8010c9e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010cb4:	2303      	movs	r3, #3
 8010cb6:	6003      	str	r3, [r0, #0]
 8010cb8:	f240 134d 	movw	r3, #333	; 0x14d
 8010cbc:	e7f8      	b.n	8010cb0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010cbe:	2305      	movs	r3, #5
 8010cc0:	6003      	str	r3, [r0, #0]
 8010cc2:	23c8      	movs	r3, #200	; 0xc8
 8010cc4:	e7f4      	b.n	8010cb0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010cc6:	2300      	movs	r3, #0
 8010cc8:	2201      	movs	r2, #1
 8010cca:	6003      	str	r3, [r0, #0]
 8010ccc:	60c3      	str	r3, [r0, #12]
 8010cce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010cd2:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010cd6:	615a      	str	r2, [r3, #20]
 8010cd8:	e7e1      	b.n	8010c9e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010cda:	4770      	bx	lr

08010cdc <Hardware::Hardware()>:
 8010cdc:	b570      	push	{r4, r5, r6, lr}
 8010cde:	2400      	movs	r4, #0
 8010ce0:	4b24      	ldr	r3, [pc, #144]	; (8010d74 <Hardware::Hardware()+0x98>)
 8010ce2:	4e25      	ldr	r6, [pc, #148]	; (8010d78 <Hardware::Hardware()+0x9c>)
 8010ce4:	b090      	sub	sp, #64	; 0x40
 8010ce6:	4605      	mov	r5, r0
 8010ce8:	6004      	str	r4, [r0, #0]
 8010cea:	7104      	strb	r4, [r0, #4]
 8010cec:	6018      	str	r0, [r3, #0]
 8010cee:	f240 6004 	movw	r0, #1540	; 0x604
 8010cf2:	f000 fc6f 	bl	80115d4 <rcu_periph_clock_enable>
 8010cf6:	2203      	movs	r2, #3
 8010cf8:	2110      	movs	r1, #16
 8010cfa:	4630      	mov	r0, r6
 8010cfc:	2301      	movs	r3, #1
 8010cfe:	f000 fbd9 	bl	80114b4 <gpio_init>
 8010d02:	2301      	movs	r3, #1
 8010d04:	6173      	str	r3, [r6, #20]
 8010d06:	f7ff fef5 	bl	8010af4 <console_init>
 8010d0a:	f5a6 3680 	sub.w	r6, r6, #65536	; 0x10000
 8010d0e:	f000 faa5 	bl	801125c <systick_config>
 8010d12:	f001 faf5 	bl	8012300 <udelay_init()>
 8010d16:	f001 faf1 	bl	80122fc <micros_init()>
 8010d1a:	f240 7004 	movw	r0, #1796	; 0x704
 8010d1e:	f000 fc59 	bl	80115d4 <rcu_periph_clock_enable>
 8010d22:	4630      	mov	r0, r6
 8010d24:	f000 fda2 	bl	801186c <timer_deinit>
 8010d28:	236b      	movs	r3, #107	; 0x6b
 8010d2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010d2e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010d32:	a903      	add	r1, sp, #12
 8010d34:	4630      	mov	r0, r6
 8010d36:	9305      	str	r3, [sp, #20]
 8010d38:	f000 fdfa 	bl	8011930 <timer_init>
 8010d3c:	4630      	mov	r0, r6
 8010d3e:	f000 fe4f 	bl	80119e0 <timer_enable>
 8010d42:	f000 ffb9 	bl	8011cb8 <gd32_adc_init()>
 8010d46:	230e      	movs	r3, #14
 8010d48:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 8010d4c:	237a      	movs	r3, #122	; 0x7a
 8010d4e:	a807      	add	r0, sp, #28
 8010d50:	930c      	str	r3, [sp, #48]	; 0x30
 8010d52:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8010d56:	9407      	str	r4, [sp, #28]
 8010d58:	940f      	str	r4, [sp, #60]	; 0x3c
 8010d5a:	f000 f9a5 	bl	80110a8 <mktime>
 8010d5e:	4621      	mov	r1, r4
 8010d60:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8010d64:	a801      	add	r0, sp, #4
 8010d66:	f000 fa15 	bl	8011194 <settimeofday>
 8010d6a:	f000 ffff 	bl	8011d6c <gd32_i2c_begin()>
 8010d6e:	4628      	mov	r0, r5
 8010d70:	b010      	add	sp, #64	; 0x40
 8010d72:	bd70      	pop	{r4, r5, r6, pc}
 8010d74:	20009790 	mulcs	r0, r0, r7
 8010d78:	40011000 	andmi	r1, r1, r0

08010d7c <Hardware::Reboot()>:
 8010d7c:	b508      	push	{r3, lr}
 8010d7e:	6803      	ldr	r3, [r0, #0]
 8010d80:	4604      	mov	r4, r0
 8010d82:	b153      	cbz	r3, 8010d9a <Hardware::Reboot()+0x1e>
 8010d84:	2300      	movs	r3, #0
 8010d86:	2104      	movs	r1, #4
 8010d88:	7103      	strb	r3, [r0, #4]
 8010d8a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010d8e:	f000 fb67 	bl	8011460 <fwdgt_config>
 8010d92:	6820      	ldr	r0, [r4, #0]
 8010d94:	6803      	ldr	r3, [r0, #0]
 8010d96:	689b      	ldr	r3, [r3, #8]
 8010d98:	4798      	blx	r3
 8010d9a:	2102      	movs	r1, #2
 8010d9c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010da0:	f000 fb5e 	bl	8011460 <fwdgt_config>
 8010da4:	2801      	cmp	r0, #1
 8010da6:	bf0c      	ite	eq
 8010da8:	2301      	moveq	r3, #1
 8010daa:	2300      	movne	r3, #0
 8010dac:	7123      	strb	r3, [r4, #4]
 8010dae:	d101      	bne.n	8010db4 <Hardware::Reboot()+0x38>
 8010db0:	f000 fb46 	bl	8011440 <fwdgt_enable>
 8010db4:	2208      	movs	r2, #8
 8010db6:	4b0d      	ldr	r3, [pc, #52]	; (8010dec <Hardware::Reboot()+0x70>)
 8010db8:	2501      	movs	r5, #1
 8010dba:	681b      	ldr	r3, [r3, #0]
 8010dbc:	480c      	ldr	r0, [pc, #48]	; (8010df0 <Hardware::Reboot()+0x74>)
 8010dbe:	601a      	str	r2, [r3, #0]
 8010dc0:	227d      	movs	r2, #125	; 0x7d
 8010dc2:	490c      	ldr	r1, [pc, #48]	; (8010df4 <Hardware::Reboot()+0x78>)
 8010dc4:	60da      	str	r2, [r3, #12]
 8010dc6:	68dc      	ldr	r4, [r3, #12]
 8010dc8:	b904      	cbnz	r4, 8010dcc <Hardware::Reboot()+0x50>
 8010dca:	e7fe      	b.n	8010dca <Hardware::Reboot()+0x4e>
 8010dcc:	6802      	ldr	r2, [r0, #0]
 8010dce:	695e      	ldr	r6, [r3, #20]
 8010dd0:	1b92      	subs	r2, r2, r6
 8010dd2:	4294      	cmp	r4, r2
 8010dd4:	d8f8      	bhi.n	8010dc8 <Hardware::Reboot()+0x4c>
 8010dd6:	6802      	ldr	r2, [r0, #0]
 8010dd8:	615a      	str	r2, [r3, #20]
 8010dda:	691a      	ldr	r2, [r3, #16]
 8010ddc:	2a01      	cmp	r2, #1
 8010dde:	f082 0401 	eor.w	r4, r2, #1
 8010de2:	611c      	str	r4, [r3, #16]
 8010de4:	bf14      	ite	ne
 8010de6:	610d      	strne	r5, [r1, #16]
 8010de8:	614a      	streq	r2, [r1, #20]
 8010dea:	e7ec      	b.n	8010dc6 <Hardware::Reboot()+0x4a>
 8010dec:	2000978c 	andcs	r9, r0, ip, lsl #15
 8010df0:	200097a4 	andcs	r9, r0, r4, lsr #15
 8010df4:	40011000 	andmi	r1, r1, r0

08010df8 <operator delete(void*)>:
 8010df8:	f000 b890 	b.w	8010f1c <free>

08010dfc <operator delete[](void*)>:
 8010dfc:	f000 b88e 	b.w	8010f1c <free>

08010e00 <operator new(unsigned int)>:
 8010e00:	f000 b842 	b.w	8010e88 <malloc>

08010e04 <operator new[](unsigned int)>:
 8010e04:	f000 b840 	b.w	8010e88 <malloc>

08010e08 <inet_aton>:
 8010e08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e0a:	f04f 0c0a 	mov.w	ip, #10
 8010e0e:	2500      	movs	r5, #0
 8010e10:	ae01      	add	r6, sp, #4
 8010e12:	4603      	mov	r3, r0
 8010e14:	2200      	movs	r2, #0
 8010e16:	1d07      	adds	r7, r0, #4
 8010e18:	e007      	b.n	8010e2a <inet_aton+0x22>
 8010e1a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010e1e:	2b09      	cmp	r3, #9
 8010e20:	d820      	bhi.n	8010e64 <inet_aton+0x5c>
 8010e22:	4603      	mov	r3, r0
 8010e24:	fb0c 4202 	mla	r2, ip, r2, r4
 8010e28:	3a30      	subs	r2, #48	; 0x30
 8010e2a:	4618      	mov	r0, r3
 8010e2c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010e30:	2c2e      	cmp	r4, #46	; 0x2e
 8010e32:	d111      	bne.n	8010e58 <inet_aton+0x50>
 8010e34:	3501      	adds	r5, #1
 8010e36:	2d03      	cmp	r5, #3
 8010e38:	f806 2b01 	strb.w	r2, [r6], #1
 8010e3c:	d1e9      	bne.n	8010e12 <inet_aton+0xa>
 8010e3e:	2200      	movs	r2, #0
 8010e40:	250a      	movs	r5, #10
 8010e42:	1d1c      	adds	r4, r3, #4
 8010e44:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010e48:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8010e4c:	d10d      	bne.n	8010e6a <inet_aton+0x62>
 8010e4e:	f88d 2007 	strb.w	r2, [sp, #7]
 8010e52:	b9b1      	cbnz	r1, 8010e82 <inet_aton+0x7a>
 8010e54:	2001      	movs	r0, #1
 8010e56:	e006      	b.n	8010e66 <inet_aton+0x5e>
 8010e58:	2c00      	cmp	r4, #0
 8010e5a:	d0eb      	beq.n	8010e34 <inet_aton+0x2c>
 8010e5c:	2c0a      	cmp	r4, #10
 8010e5e:	d0e9      	beq.n	8010e34 <inet_aton+0x2c>
 8010e60:	42b8      	cmp	r0, r7
 8010e62:	d1da      	bne.n	8010e1a <inet_aton+0x12>
 8010e64:	2000      	movs	r0, #0
 8010e66:	b003      	add	sp, #12
 8010e68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e6a:	280a      	cmp	r0, #10
 8010e6c:	d0ef      	beq.n	8010e4e <inet_aton+0x46>
 8010e6e:	42a3      	cmp	r3, r4
 8010e70:	d0f8      	beq.n	8010e64 <inet_aton+0x5c>
 8010e72:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8010e76:	2e09      	cmp	r6, #9
 8010e78:	d8f4      	bhi.n	8010e64 <inet_aton+0x5c>
 8010e7a:	fb05 0202 	mla	r2, r5, r2, r0
 8010e7e:	3a30      	subs	r2, #48	; 0x30
 8010e80:	e7e0      	b.n	8010e44 <inet_aton+0x3c>
 8010e82:	9b01      	ldr	r3, [sp, #4]
 8010e84:	600b      	str	r3, [r1, #0]
 8010e86:	e7e5      	b.n	8010e54 <inet_aton+0x4c>

08010e88 <malloc>:
 8010e88:	b538      	push	{r3, r4, r5, lr}
 8010e8a:	4604      	mov	r4, r0
 8010e8c:	4601      	mov	r1, r0
 8010e8e:	481c      	ldr	r0, [pc, #112]	; (8010f00 <malloc+0x78>)
 8010e90:	f7f7 feaa 	bl	8008be8 <printf>
 8010e94:	b17c      	cbz	r4, 8010eb6 <malloc+0x2e>
 8010e96:	4b1b      	ldr	r3, [pc, #108]	; (8010f04 <malloc+0x7c>)
 8010e98:	6818      	ldr	r0, [r3, #0]
 8010e9a:	b978      	cbnz	r0, 8010ebc <malloc+0x34>
 8010e9c:	4a1a      	ldr	r2, [pc, #104]	; (8010f08 <malloc+0x80>)
 8010e9e:	f104 031b 	add.w	r3, r4, #27
 8010ea2:	6811      	ldr	r1, [r2, #0]
 8010ea4:	4819      	ldr	r0, [pc, #100]	; (8010f0c <malloc+0x84>)
 8010ea6:	f023 030f 	bic.w	r3, r3, #15
 8010eaa:	440b      	add	r3, r1
 8010eac:	4283      	cmp	r3, r0
 8010eae:	d921      	bls.n	8010ef4 <malloc+0x6c>
 8010eb0:	4817      	ldr	r0, [pc, #92]	; (8010f10 <malloc+0x88>)
 8010eb2:	f7f7 fe99 	bl	8008be8 <printf>
 8010eb6:	2500      	movs	r5, #0
 8010eb8:	4628      	mov	r0, r5
 8010eba:	bd38      	pop	{r3, r4, r5, pc}
 8010ebc:	4284      	cmp	r4, r0
 8010ebe:	d80a      	bhi.n	8010ed6 <malloc+0x4e>
 8010ec0:	685a      	ldr	r2, [r3, #4]
 8010ec2:	6899      	ldr	r1, [r3, #8]
 8010ec4:	3201      	adds	r2, #1
 8010ec6:	428a      	cmp	r2, r1
 8010ec8:	605a      	str	r2, [r3, #4]
 8010eca:	d900      	bls.n	8010ece <malloc+0x46>
 8010ecc:	609a      	str	r2, [r3, #8]
 8010ece:	68d9      	ldr	r1, [r3, #12]
 8010ed0:	b919      	cbnz	r1, 8010eda <malloc+0x52>
 8010ed2:	4604      	mov	r4, r0
 8010ed4:	e7e2      	b.n	8010e9c <malloc+0x14>
 8010ed6:	3310      	adds	r3, #16
 8010ed8:	e7de      	b.n	8010e98 <malloc+0x10>
 8010eda:	4604      	mov	r4, r0
 8010edc:	688a      	ldr	r2, [r1, #8]
 8010ede:	60da      	str	r2, [r3, #12]
 8010ee0:	2300      	movs	r3, #0
 8010ee2:	f101 050c 	add.w	r5, r1, #12
 8010ee6:	608b      	str	r3, [r1, #8]
 8010ee8:	4622      	mov	r2, r4
 8010eea:	462b      	mov	r3, r5
 8010eec:	4809      	ldr	r0, [pc, #36]	; (8010f14 <malloc+0x8c>)
 8010eee:	f7f7 fe7b 	bl	8008be8 <printf>
 8010ef2:	e7e1      	b.n	8010eb8 <malloc+0x30>
 8010ef4:	6013      	str	r3, [r2, #0]
 8010ef6:	4b08      	ldr	r3, [pc, #32]	; (8010f18 <malloc+0x90>)
 8010ef8:	e9c1 3400 	strd	r3, r4, [r1]
 8010efc:	e7f0      	b.n	8010ee0 <malloc+0x58>
 8010efe:	bf00      	nop
 8010f00:	08014d18 	stmdaeq	r1, {r3, r4, r8, sl, fp, lr}
 8010f04:	20000010 	andcs	r0, r0, r0, lsl r0
 8010f08:	2000000c 	andcs	r0, r0, ip
 8010f0c:	20016800 	andcs	r6, r1, r0, lsl #16
 8010f10:	08014d24 	stmdaeq	r1, {r2, r5, r8, sl, fp, lr}
 8010f14:	08014d40 	stmdaeq	r1, {r6, r8, sl, fp, lr}
 8010f18:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08010f1c <free>:
 8010f1c:	b538      	push	{r3, r4, r5, lr}
 8010f1e:	4604      	mov	r4, r0
 8010f20:	b1c8      	cbz	r0, 8010f56 <free+0x3a>
 8010f22:	f1a0 050c 	sub.w	r5, r0, #12
 8010f26:	4602      	mov	r2, r0
 8010f28:	4629      	mov	r1, r5
 8010f2a:	480c      	ldr	r0, [pc, #48]	; (8010f5c <free+0x40>)
 8010f2c:	f7f7 fe5c 	bl	8008be8 <printf>
 8010f30:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8010f34:	4b0a      	ldr	r3, [pc, #40]	; (8010f60 <free+0x44>)
 8010f36:	429a      	cmp	r2, r3
 8010f38:	d10d      	bne.n	8010f56 <free+0x3a>
 8010f3a:	4b0a      	ldr	r3, [pc, #40]	; (8010f64 <free+0x48>)
 8010f3c:	681a      	ldr	r2, [r3, #0]
 8010f3e:	b152      	cbz	r2, 8010f56 <free+0x3a>
 8010f40:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8010f44:	4291      	cmp	r1, r2
 8010f46:	d107      	bne.n	8010f58 <free+0x3c>
 8010f48:	68da      	ldr	r2, [r3, #12]
 8010f4a:	f844 2c04 	str.w	r2, [r4, #-4]
 8010f4e:	685a      	ldr	r2, [r3, #4]
 8010f50:	60dd      	str	r5, [r3, #12]
 8010f52:	3a01      	subs	r2, #1
 8010f54:	605a      	str	r2, [r3, #4]
 8010f56:	bd38      	pop	{r3, r4, r5, pc}
 8010f58:	3310      	adds	r3, #16
 8010f5a:	e7ef      	b.n	8010f3c <free+0x20>
 8010f5c:	08014d6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sl, fp, lr}
 8010f60:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8010f64:	20000010 	andcs	r0, r0, r0, lsl r0

08010f68 <memcpy>:
 8010f68:	b510      	push	{r4, lr}
 8010f6a:	1e43      	subs	r3, r0, #1
 8010f6c:	440a      	add	r2, r1
 8010f6e:	4291      	cmp	r1, r2
 8010f70:	d100      	bne.n	8010f74 <memcpy+0xc>
 8010f72:	bd10      	pop	{r4, pc}
 8010f74:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010f78:	f803 4f01 	strb.w	r4, [r3, #1]!
 8010f7c:	e7f7      	b.n	8010f6e <memcpy+0x6>

08010f7e <memmove>:
 8010f7e:	4288      	cmp	r0, r1
 8010f80:	b510      	push	{r4, lr}
 8010f82:	eb01 0302 	add.w	r3, r1, r2
 8010f86:	d208      	bcs.n	8010f9a <memmove+0x1c>
 8010f88:	1e42      	subs	r2, r0, #1
 8010f8a:	4299      	cmp	r1, r3
 8010f8c:	d100      	bne.n	8010f90 <memmove+0x12>
 8010f8e:	bd10      	pop	{r4, pc}
 8010f90:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010f94:	f802 4f01 	strb.w	r4, [r2, #1]!
 8010f98:	e7f7      	b.n	8010f8a <memmove+0xc>
 8010f9a:	4601      	mov	r1, r0
 8010f9c:	4402      	add	r2, r0
 8010f9e:	428a      	cmp	r2, r1
 8010fa0:	d0f5      	beq.n	8010f8e <memmove+0x10>
 8010fa2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8010fa6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8010faa:	e7f8      	b.n	8010f9e <memmove+0x20>

08010fac <memset>:
 8010fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fae:	b1e2      	cbz	r2, 8010fea <memset+0x3e>
 8010fb0:	4603      	mov	r3, r0
 8010fb2:	b2c9      	uxtb	r1, r1
 8010fb4:	075c      	lsls	r4, r3, #29
 8010fb6:	d114      	bne.n	8010fe2 <memset+0x36>
 8010fb8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8010fbc:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8010fc0:	463d      	mov	r5, r7
 8010fc2:	f022 0407 	bic.w	r4, r2, #7
 8010fc6:	08d6      	lsrs	r6, r2, #3
 8010fc8:	441c      	add	r4, r3
 8010fca:	42a3      	cmp	r3, r4
 8010fcc:	d10e      	bne.n	8010fec <memset+0x40>
 8010fce:	f06f 0307 	mvn.w	r3, #7
 8010fd2:	fb03 2206 	mla	r2, r3, r6, r2
 8010fd6:	4422      	add	r2, r4
 8010fd8:	4294      	cmp	r4, r2
 8010fda:	d006      	beq.n	8010fea <memset+0x3e>
 8010fdc:	f804 1b01 	strb.w	r1, [r4], #1
 8010fe0:	e7fa      	b.n	8010fd8 <memset+0x2c>
 8010fe2:	3a01      	subs	r2, #1
 8010fe4:	f803 1b01 	strb.w	r1, [r3], #1
 8010fe8:	d1e4      	bne.n	8010fb4 <memset+0x8>
 8010fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010fec:	f843 7b08 	str.w	r7, [r3], #8
 8010ff0:	f843 5c04 	str.w	r5, [r3, #-4]
 8010ff4:	e7e9      	b.n	8010fca <memset+0x1e>

08010ff6 <puts>:
 8010ff6:	b508      	push	{r3, lr}
 8010ff8:	f7ff fd98 	bl	8010b2c <console_puts>
 8010ffc:	200a      	movs	r0, #10
 8010ffe:	f7ff fd89 	bl	8010b14 <console_putc>
 8011002:	2001      	movs	r0, #1
 8011004:	bd08      	pop	{r3, pc}
	...

08011008 <strtok>:
 8011008:	b530      	push	{r4, r5, lr}
 801100a:	b910      	cbnz	r0, 8011012 <strtok+0xa>
 801100c:	4b12      	ldr	r3, [pc, #72]	; (8011058 <strtok+0x50>)
 801100e:	6818      	ldr	r0, [r3, #0]
 8011010:	b158      	cbz	r0, 801102a <strtok+0x22>
 8011012:	4603      	mov	r3, r0
 8011014:	460d      	mov	r5, r1
 8011016:	4618      	mov	r0, r3
 8011018:	f813 2b01 	ldrb.w	r2, [r3], #1
 801101c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011020:	b924      	cbnz	r4, 801102c <strtok+0x24>
 8011022:	b94a      	cbnz	r2, 8011038 <strtok+0x30>
 8011024:	4610      	mov	r0, r2
 8011026:	4b0c      	ldr	r3, [pc, #48]	; (8011058 <strtok+0x50>)
 8011028:	601a      	str	r2, [r3, #0]
 801102a:	bd30      	pop	{r4, r5, pc}
 801102c:	42a2      	cmp	r2, r4
 801102e:	d1f5      	bne.n	801101c <strtok+0x14>
 8011030:	e7f0      	b.n	8011014 <strtok+0xc>
 8011032:	4613      	mov	r3, r2
 8011034:	e00c      	b.n	8011050 <strtok+0x48>
 8011036:	b914      	cbnz	r4, 801103e <strtok+0x36>
 8011038:	460d      	mov	r5, r1
 801103a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801103e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011042:	42a2      	cmp	r2, r4
 8011044:	d1f7      	bne.n	8011036 <strtok+0x2e>
 8011046:	2a00      	cmp	r2, #0
 8011048:	d0f3      	beq.n	8011032 <strtok+0x2a>
 801104a:	2200      	movs	r2, #0
 801104c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011050:	4a01      	ldr	r2, [pc, #4]	; (8011058 <strtok+0x50>)
 8011052:	6013      	str	r3, [r2, #0]
 8011054:	e7e9      	b.n	801102a <strtok+0x22>
 8011056:	bf00      	nop
 8011058:	20009794 	mulcs	r0, r4, r7

0801105c <isleapyear>:
 801105c:	2264      	movs	r2, #100	; 0x64
 801105e:	fb90 f3f2 	sdiv	r3, r0, r2
 8011062:	fb02 0313 	mls	r3, r2, r3, r0
 8011066:	b94b      	cbnz	r3, 801107c <isleapyear+0x20>
 8011068:	f44f 73c8 	mov.w	r3, #400	; 0x190
 801106c:	fb90 f2f3 	sdiv	r2, r0, r3
 8011070:	fb03 0012 	mls	r0, r3, r2, r0
 8011074:	fab0 f080 	clz	r0, r0
 8011078:	0940      	lsrs	r0, r0, #5
 801107a:	4770      	bx	lr
 801107c:	f010 0f03 	tst.w	r0, #3
 8011080:	bf0c      	ite	eq
 8011082:	2001      	moveq	r0, #1
 8011084:	2000      	movne	r0, #0
 8011086:	4770      	bx	lr

08011088 <getdaysofmonth>:
 8011088:	b510      	push	{r4, lr}
 801108a:	4604      	mov	r4, r0
 801108c:	2c01      	cmp	r4, #1
 801108e:	4608      	mov	r0, r1
 8011090:	d102      	bne.n	8011098 <getdaysofmonth+0x10>
 8011092:	f7ff ffe3 	bl	801105c <isleapyear>
 8011096:	b918      	cbnz	r0, 80110a0 <getdaysofmonth+0x18>
 8011098:	4b02      	ldr	r3, [pc, #8]	; (80110a4 <getdaysofmonth+0x1c>)
 801109a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801109e:	bd10      	pop	{r4, pc}
 80110a0:	201d      	movs	r0, #29
 80110a2:	e7fc      	b.n	801109e <getdaysofmonth+0x16>
 80110a4:	08014d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, lr}

080110a8 <mktime>:
 80110a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110ac:	4604      	mov	r4, r0
 80110ae:	2800      	cmp	r0, #0
 80110b0:	d042      	beq.n	8011138 <mktime+0x90>
 80110b2:	6941      	ldr	r1, [r0, #20]
 80110b4:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80110b8:	2b45      	cmp	r3, #69	; 0x45
 80110ba:	d83d      	bhi.n	8011138 <mktime+0x90>
 80110bc:	2600      	movs	r6, #0
 80110be:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80110c2:	f240 186d 	movw	r8, #365	; 0x16d
 80110c6:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80110ca:	42af      	cmp	r7, r5
 80110cc:	da23      	bge.n	8011116 <mktime+0x6e>
 80110ce:	6927      	ldr	r7, [r4, #16]
 80110d0:	2f0b      	cmp	r7, #11
 80110d2:	d831      	bhi.n	8011138 <mktime+0x90>
 80110d4:	2500      	movs	r5, #0
 80110d6:	42af      	cmp	r7, r5
 80110d8:	d128      	bne.n	801112c <mktime+0x84>
 80110da:	68e5      	ldr	r5, [r4, #12]
 80110dc:	2d00      	cmp	r5, #0
 80110de:	dd2b      	ble.n	8011138 <mktime+0x90>
 80110e0:	4638      	mov	r0, r7
 80110e2:	f7ff ffd1 	bl	8011088 <getdaysofmonth>
 80110e6:	4285      	cmp	r5, r0
 80110e8:	dc26      	bgt.n	8011138 <mktime+0x90>
 80110ea:	2318      	movs	r3, #24
 80110ec:	3d01      	subs	r5, #1
 80110ee:	4435      	add	r5, r6
 80110f0:	435d      	muls	r5, r3
 80110f2:	68a3      	ldr	r3, [r4, #8]
 80110f4:	2b17      	cmp	r3, #23
 80110f6:	d81f      	bhi.n	8011138 <mktime+0x90>
 80110f8:	203c      	movs	r0, #60	; 0x3c
 80110fa:	442b      	add	r3, r5
 80110fc:	fb00 f503 	mul.w	r5, r0, r3
 8011100:	6863      	ldr	r3, [r4, #4]
 8011102:	2b3b      	cmp	r3, #59	; 0x3b
 8011104:	d818      	bhi.n	8011138 <mktime+0x90>
 8011106:	442b      	add	r3, r5
 8011108:	4343      	muls	r3, r0
 801110a:	6820      	ldr	r0, [r4, #0]
 801110c:	283b      	cmp	r0, #59	; 0x3b
 801110e:	d813      	bhi.n	8011138 <mktime+0x90>
 8011110:	4418      	add	r0, r3
 8011112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011116:	4628      	mov	r0, r5
 8011118:	f7ff ffa0 	bl	801105c <isleapyear>
 801111c:	2800      	cmp	r0, #0
 801111e:	bf14      	ite	ne
 8011120:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8011124:	4643      	moveq	r3, r8
 8011126:	3501      	adds	r5, #1
 8011128:	441e      	add	r6, r3
 801112a:	e7ce      	b.n	80110ca <mktime+0x22>
 801112c:	4628      	mov	r0, r5
 801112e:	f7ff ffab 	bl	8011088 <getdaysofmonth>
 8011132:	3501      	adds	r5, #1
 8011134:	4406      	add	r6, r0
 8011136:	e7ce      	b.n	80110d6 <mktime+0x2e>
 8011138:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801113c:	e7e9      	b.n	8011112 <mktime+0x6a>
	...

08011140 <gettimeofday>:
 8011140:	b538      	push	{r3, r4, r5, lr}
 8011142:	4b10      	ldr	r3, [pc, #64]	; (8011184 <gettimeofday+0x44>)
 8011144:	4a10      	ldr	r2, [pc, #64]	; (8011188 <gettimeofday+0x48>)
 8011146:	681b      	ldr	r3, [r3, #0]
 8011148:	6814      	ldr	r4, [r2, #0]
 801114a:	6013      	str	r3, [r2, #0]
 801114c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011150:	429c      	cmp	r4, r3
 8011152:	bf2c      	ite	cs
 8011154:	1ae4      	subcs	r4, r4, r3
 8011156:	1b1c      	subcc	r4, r3, r4
 8011158:	4354      	muls	r4, r2
 801115a:	4b0c      	ldr	r3, [pc, #48]	; (801118c <gettimeofday+0x4c>)
 801115c:	4605      	mov	r5, r0
 801115e:	e9d3 2100 	ldrd	r2, r1, [r3]
 8011162:	18a4      	adds	r4, r4, r2
 8011164:	f141 0100 	adc.w	r1, r1, #0
 8011168:	e9c3 4100 	strd	r4, r1, [r3]
 801116c:	4620      	mov	r0, r4
 801116e:	2300      	movs	r3, #0
 8011170:	4a07      	ldr	r2, [pc, #28]	; (8011190 <gettimeofday+0x50>)
 8011172:	f7f6 f9e7 	bl	8007544 <__aeabi_uldivmod>
 8011176:	4b06      	ldr	r3, [pc, #24]	; (8011190 <gettimeofday+0x50>)
 8011178:	6028      	str	r0, [r5, #0]
 801117a:	fb03 4410 	mls	r4, r3, r0, r4
 801117e:	2000      	movs	r0, #0
 8011180:	606c      	str	r4, [r5, #4]
 8011182:	bd38      	pop	{r3, r4, r5, pc}
 8011184:	200097a4 	andcs	r9, r0, r4, lsr #15
 8011188:	200097a0 	andcs	r9, r0, r0, lsr #15
 801118c:	20009798 	mulcs	r0, r8, r7
 8011190:	000f4240 	andeq	r4, pc, r0, asr #4

08011194 <settimeofday>:
 8011194:	4b07      	ldr	r3, [pc, #28]	; (80111b4 <settimeofday+0x20>)
 8011196:	b510      	push	{r4, lr}
 8011198:	681a      	ldr	r2, [r3, #0]
 801119a:	4b07      	ldr	r3, [pc, #28]	; (80111b8 <settimeofday+0x24>)
 801119c:	6804      	ldr	r4, [r0, #0]
 801119e:	601a      	str	r2, [r3, #0]
 80111a0:	6843      	ldr	r3, [r0, #4]
 80111a2:	4806      	ldr	r0, [pc, #24]	; (80111bc <settimeofday+0x28>)
 80111a4:	17da      	asrs	r2, r3, #31
 80111a6:	fbc4 3200 	smlal	r3, r2, r4, r0
 80111aa:	4905      	ldr	r1, [pc, #20]	; (80111c0 <settimeofday+0x2c>)
 80111ac:	2000      	movs	r0, #0
 80111ae:	e9c1 3200 	strd	r3, r2, [r1]
 80111b2:	bd10      	pop	{r4, pc}
 80111b4:	200097a4 	andcs	r9, r0, r4, lsr #15
 80111b8:	200097a0 	andcs	r9, r0, r0, lsr #15
 80111bc:	000f4240 	andeq	r4, pc, r0, asr #4
 80111c0:	20009798 	mulcs	r0, r8, r7

080111c4 <time>:
 80111c4:	b513      	push	{r0, r1, r4, lr}
 80111c6:	4604      	mov	r4, r0
 80111c8:	2100      	movs	r1, #0
 80111ca:	4668      	mov	r0, sp
 80111cc:	f7ff ffb8 	bl	8011140 <gettimeofday>
 80111d0:	9800      	ldr	r0, [sp, #0]
 80111d2:	b104      	cbz	r4, 80111d6 <time+0x12>
 80111d4:	6020      	str	r0, [r4, #0]
 80111d6:	b002      	add	sp, #8
 80111d8:	bd10      	pop	{r4, pc}
	...

080111dc <uart0_init>:
 80111dc:	2301      	movs	r3, #1
 80111de:	b507      	push	{r0, r1, r2, lr}
 80111e0:	2208      	movs	r2, #8
 80111e2:	9300      	str	r3, [sp, #0]
 80111e4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80111e8:	2300      	movs	r3, #0
 80111ea:	4803      	ldr	r0, [pc, #12]	; (80111f8 <uart0_init+0x1c>)
 80111ec:	f000 ffb8 	bl	8012160 <gd32_uart_begin>
 80111f0:	b003      	add	sp, #12
 80111f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80111f6:	bf00      	nop
 80111f8:	40013800 	andmi	r3, r1, r0, lsl #16

080111fc <uart0_putc>:
 80111fc:	280a      	cmp	r0, #10
 80111fe:	b538      	push	{r3, r4, r5, lr}
 8011200:	4604      	mov	r4, r0
 8011202:	d10a      	bne.n	801121a <uart0_putc+0x1e>
 8011204:	4d0b      	ldr	r5, [pc, #44]	; (8011234 <uart0_putc+0x38>)
 8011206:	2107      	movs	r1, #7
 8011208:	4628      	mov	r0, r5
 801120a:	f000 fc87 	bl	8011b1c <usart_flag_get>
 801120e:	2800      	cmp	r0, #0
 8011210:	d0f9      	beq.n	8011206 <uart0_putc+0xa>
 8011212:	220d      	movs	r2, #13
 8011214:	4b08      	ldr	r3, [pc, #32]	; (8011238 <uart0_putc+0x3c>)
 8011216:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801121a:	4d06      	ldr	r5, [pc, #24]	; (8011234 <uart0_putc+0x38>)
 801121c:	2107      	movs	r1, #7
 801121e:	4628      	mov	r0, r5
 8011220:	f000 fc7c 	bl	8011b1c <usart_flag_get>
 8011224:	2800      	cmp	r0, #0
 8011226:	d0f9      	beq.n	801121c <uart0_putc+0x20>
 8011228:	4b03      	ldr	r3, [pc, #12]	; (8011238 <uart0_putc+0x3c>)
 801122a:	b2e4      	uxtb	r4, r4
 801122c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8011230:	bd38      	pop	{r3, r4, r5, pc}
 8011232:	bf00      	nop
 8011234:	40013800 	andmi	r3, r1, r0, lsl #16
 8011238:	40013000 	andmi	r3, r1, r0

0801123c <uart0_puts>:
 801123c:	b510      	push	{r4, lr}
 801123e:	1e44      	subs	r4, r0, #1
 8011240:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011244:	b903      	cbnz	r3, 8011248 <uart0_puts+0xc>
 8011246:	bd10      	pop	{r4, pc}
 8011248:	2b0a      	cmp	r3, #10
 801124a:	d102      	bne.n	8011252 <uart0_puts+0x16>
 801124c:	200d      	movs	r0, #13
 801124e:	f7ff ffd5 	bl	80111fc <uart0_putc>
 8011252:	7820      	ldrb	r0, [r4, #0]
 8011254:	f7ff ffd2 	bl	80111fc <uart0_putc>
 8011258:	e7f2      	b.n	8011240 <uart0_puts+0x4>
	...

0801125c <systick_config>:
 801125c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011260:	4b0b      	ldr	r3, [pc, #44]	; (8011290 <systick_config+0x34>)
 8011262:	681b      	ldr	r3, [r3, #0]
 8011264:	fbb3 f3f2 	udiv	r3, r3, r2
 8011268:	3b01      	subs	r3, #1
 801126a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801126e:	d20d      	bcs.n	801128c <systick_config+0x30>
 8011270:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8011274:	21f0      	movs	r1, #240	; 0xf0
 8011276:	6153      	str	r3, [r2, #20]
 8011278:	4b06      	ldr	r3, [pc, #24]	; (8011294 <systick_config+0x38>)
 801127a:	2007      	movs	r0, #7
 801127c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8011280:	2100      	movs	r1, #0
 8011282:	6191      	str	r1, [r2, #24]
 8011284:	6110      	str	r0, [r2, #16]
 8011286:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801128a:	4770      	bx	lr
 801128c:	e7fe      	b.n	801128c <systick_config+0x30>
 801128e:	bf00      	nop
 8011290:	200000e0 	andcs	r0, r0, r0, ror #1
 8011294:	e000ed00 	and	lr, r0, r0, lsl #26

08011298 <SysTick_Handler>:
 8011298:	4a02      	ldr	r2, [pc, #8]	; (80112a4 <SysTick_Handler+0xc>)
 801129a:	6813      	ldr	r3, [r2, #0]
 801129c:	3301      	adds	r3, #1
 801129e:	6013      	str	r3, [r2, #0]
 80112a0:	4770      	bx	lr
 80112a2:	bf00      	nop
 80112a4:	200097a4 	andcs	r9, r0, r4, lsr #15

080112a8 <SystemInit>:
 80112a8:	4b37      	ldr	r3, [pc, #220]	; (8011388 <SystemInit+0xe0>)
 80112aa:	4838      	ldr	r0, [pc, #224]	; (801138c <SystemInit+0xe4>)
 80112ac:	681a      	ldr	r2, [r3, #0]
 80112ae:	f042 0201 	orr.w	r2, r2, #1
 80112b2:	601a      	str	r2, [r3, #0]
 80112b4:	685a      	ldr	r2, [r3, #4]
 80112b6:	f022 0203 	bic.w	r2, r2, #3
 80112ba:	605a      	str	r2, [r3, #4]
 80112bc:	6819      	ldr	r1, [r3, #0]
 80112be:	4001      	ands	r1, r0
 80112c0:	6019      	str	r1, [r3, #0]
 80112c2:	685a      	ldr	r2, [r3, #4]
 80112c4:	4932      	ldr	r1, [pc, #200]	; (8011390 <SystemInit+0xe8>)
 80112c6:	4011      	ands	r1, r2
 80112c8:	6059      	str	r1, [r3, #4]
 80112ca:	681a      	ldr	r2, [r3, #0]
 80112cc:	4002      	ands	r2, r0
 80112ce:	601a      	str	r2, [r3, #0]
 80112d0:	681a      	ldr	r2, [r3, #0]
 80112d2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80112d6:	601a      	str	r2, [r3, #0]
 80112d8:	685a      	ldr	r2, [r3, #4]
 80112da:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80112de:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80112e2:	605a      	str	r2, [r3, #4]
 80112e4:	2200      	movs	r2, #0
 80112e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80112e8:	681a      	ldr	r2, [r3, #0]
 80112ea:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 80112ee:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 80112f2:	601a      	str	r2, [r3, #0]
 80112f4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80112f8:	609a      	str	r2, [r3, #8]
 80112fa:	681a      	ldr	r2, [r3, #0]
 80112fc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8011300:	601a      	str	r2, [r3, #0]
 8011302:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011306:	6819      	ldr	r1, [r3, #0]
 8011308:	0389      	lsls	r1, r1, #14
 801130a:	d401      	bmi.n	8011310 <SystemInit+0x68>
 801130c:	3a01      	subs	r2, #1
 801130e:	d1fa      	bne.n	8011306 <SystemInit+0x5e>
 8011310:	681a      	ldr	r2, [r3, #0]
 8011312:	0392      	lsls	r2, r2, #14
 8011314:	d400      	bmi.n	8011318 <SystemInit+0x70>
 8011316:	e7fe      	b.n	8011316 <SystemInit+0x6e>
 8011318:	685a      	ldr	r2, [r3, #4]
 801131a:	605a      	str	r2, [r3, #4]
 801131c:	685a      	ldr	r2, [r3, #4]
 801131e:	605a      	str	r2, [r3, #4]
 8011320:	685a      	ldr	r2, [r3, #4]
 8011322:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8011326:	605a      	str	r2, [r3, #4]
 8011328:	685a      	ldr	r2, [r3, #4]
 801132a:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 801132e:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8011332:	605a      	str	r2, [r3, #4]
 8011334:	685a      	ldr	r2, [r3, #4]
 8011336:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 801133a:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 801133e:	605a      	str	r2, [r3, #4]
 8011340:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011342:	4a14      	ldr	r2, [pc, #80]	; (8011394 <SystemInit+0xec>)
 8011344:	400a      	ands	r2, r1
 8011346:	62da      	str	r2, [r3, #44]	; 0x2c
 8011348:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801134a:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 801134e:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 8011352:	62da      	str	r2, [r3, #44]	; 0x2c
 8011354:	681a      	ldr	r2, [r3, #0]
 8011356:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801135a:	601a      	str	r2, [r3, #0]
 801135c:	681a      	ldr	r2, [r3, #0]
 801135e:	0110      	lsls	r0, r2, #4
 8011360:	d5fc      	bpl.n	801135c <SystemInit+0xb4>
 8011362:	681a      	ldr	r2, [r3, #0]
 8011364:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8011368:	601a      	str	r2, [r3, #0]
 801136a:	681a      	ldr	r2, [r3, #0]
 801136c:	0191      	lsls	r1, r2, #6
 801136e:	d5fc      	bpl.n	801136a <SystemInit+0xc2>
 8011370:	685a      	ldr	r2, [r3, #4]
 8011372:	f022 0203 	bic.w	r2, r2, #3
 8011376:	605a      	str	r2, [r3, #4]
 8011378:	685a      	ldr	r2, [r3, #4]
 801137a:	f042 0202 	orr.w	r2, r2, #2
 801137e:	605a      	str	r2, [r3, #4]
 8011380:	685a      	ldr	r2, [r3, #4]
 8011382:	0712      	lsls	r2, r2, #28
 8011384:	d5fc      	bpl.n	8011380 <SystemInit+0xd8>
 8011386:	4770      	bx	lr
 8011388:	40021000 	andmi	r1, r2, r0
 801138c:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 8011390:	e0ff000c 	rscs	r0, pc, ip
 8011394:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08011398 <fmc_bank0_unlock>:
 8011398:	4b04      	ldr	r3, [pc, #16]	; (80113ac <fmc_bank0_unlock+0x14>)
 801139a:	691a      	ldr	r2, [r3, #16]
 801139c:	0612      	lsls	r2, r2, #24
 801139e:	bf41      	itttt	mi
 80113a0:	4a03      	ldrmi	r2, [pc, #12]	; (80113b0 <fmc_bank0_unlock+0x18>)
 80113a2:	605a      	strmi	r2, [r3, #4]
 80113a4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80113a8:	605a      	strmi	r2, [r3, #4]
 80113aa:	4770      	bx	lr
 80113ac:	40022000 	andmi	r2, r2, r0
 80113b0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080113b4 <fmc_bank1_unlock>:
 80113b4:	4b04      	ldr	r3, [pc, #16]	; (80113c8 <fmc_bank1_unlock+0x14>)
 80113b6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80113b8:	0612      	lsls	r2, r2, #24
 80113ba:	bf41      	itttt	mi
 80113bc:	4a03      	ldrmi	r2, [pc, #12]	; (80113cc <fmc_bank1_unlock+0x18>)
 80113be:	645a      	strmi	r2, [r3, #68]	; 0x44
 80113c0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80113c4:	645a      	strmi	r2, [r3, #68]	; 0x44
 80113c6:	4770      	bx	lr
 80113c8:	40022000 	andmi	r2, r2, r0
 80113cc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080113d0 <fmc_bank0_lock>:
 80113d0:	4a02      	ldr	r2, [pc, #8]	; (80113dc <fmc_bank0_lock+0xc>)
 80113d2:	6913      	ldr	r3, [r2, #16]
 80113d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80113d8:	6113      	str	r3, [r2, #16]
 80113da:	4770      	bx	lr
 80113dc:	40022000 	andmi	r2, r2, r0

080113e0 <fmc_bank1_lock>:
 80113e0:	4a02      	ldr	r2, [pc, #8]	; (80113ec <fmc_bank1_lock+0xc>)
 80113e2:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80113e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80113e8:	6513      	str	r3, [r2, #80]	; 0x50
 80113ea:	4770      	bx	lr
 80113ec:	40022000 	andmi	r2, r2, r0

080113f0 <fmc_bank0_state_get>:
 80113f0:	4b08      	ldr	r3, [pc, #32]	; (8011414 <fmc_bank0_state_get+0x24>)
 80113f2:	68da      	ldr	r2, [r3, #12]
 80113f4:	07d1      	lsls	r1, r2, #31
 80113f6:	d409      	bmi.n	801140c <fmc_bank0_state_get+0x1c>
 80113f8:	68da      	ldr	r2, [r3, #12]
 80113fa:	06d2      	lsls	r2, r2, #27
 80113fc:	d408      	bmi.n	8011410 <fmc_bank0_state_get+0x20>
 80113fe:	68db      	ldr	r3, [r3, #12]
 8011400:	f013 0f04 	tst.w	r3, #4
 8011404:	bf0c      	ite	eq
 8011406:	2000      	moveq	r0, #0
 8011408:	2002      	movne	r0, #2
 801140a:	4770      	bx	lr
 801140c:	2001      	movs	r0, #1
 801140e:	4770      	bx	lr
 8011410:	2003      	movs	r0, #3
 8011412:	4770      	bx	lr
 8011414:	40022000 	andmi	r2, r2, r0

08011418 <fmc_bank1_state_get>:
 8011418:	4b08      	ldr	r3, [pc, #32]	; (801143c <fmc_bank1_state_get+0x24>)
 801141a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801141c:	07d1      	lsls	r1, r2, #31
 801141e:	d409      	bmi.n	8011434 <fmc_bank1_state_get+0x1c>
 8011420:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011422:	06d2      	lsls	r2, r2, #27
 8011424:	d408      	bmi.n	8011438 <fmc_bank1_state_get+0x20>
 8011426:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011428:	f013 0f04 	tst.w	r3, #4
 801142c:	bf0c      	ite	eq
 801142e:	2000      	moveq	r0, #0
 8011430:	2002      	movne	r0, #2
 8011432:	4770      	bx	lr
 8011434:	2001      	movs	r0, #1
 8011436:	4770      	bx	lr
 8011438:	2003      	movs	r0, #3
 801143a:	4770      	bx	lr
 801143c:	40022000 	andmi	r2, r2, r0

08011440 <fwdgt_enable>:
 8011440:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8011444:	4b01      	ldr	r3, [pc, #4]	; (801144c <fwdgt_enable+0xc>)
 8011446:	601a      	str	r2, [r3, #0]
 8011448:	4770      	bx	lr
 801144a:	bf00      	nop
 801144c:	40003000 	andmi	r3, r0, r0

08011450 <fwdgt_counter_reload>:
 8011450:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8011454:	4b01      	ldr	r3, [pc, #4]	; (801145c <fwdgt_counter_reload+0xc>)
 8011456:	601a      	str	r2, [r3, #0]
 8011458:	4770      	bx	lr
 801145a:	bf00      	nop
 801145c:	40003000 	andmi	r3, r0, r0

08011460 <fwdgt_config>:
 8011460:	f245 5355 	movw	r3, #21845	; 0x5555
 8011464:	4a11      	ldr	r2, [pc, #68]	; (80114ac <fwdgt_config+0x4c>)
 8011466:	b510      	push	{r4, lr}
 8011468:	4c11      	ldr	r4, [pc, #68]	; (80114b0 <fwdgt_config+0x50>)
 801146a:	6013      	str	r3, [r2, #0]
 801146c:	68d3      	ldr	r3, [r2, #12]
 801146e:	3c01      	subs	r4, #1
 8011470:	f003 0301 	and.w	r3, r3, #1
 8011474:	d013      	beq.n	801149e <fwdgt_config+0x3e>
 8011476:	2b00      	cmp	r3, #0
 8011478:	d1f8      	bne.n	801146c <fwdgt_config+0xc>
 801147a:	6051      	str	r1, [r2, #4]
 801147c:	490c      	ldr	r1, [pc, #48]	; (80114b0 <fwdgt_config+0x50>)
 801147e:	4a0b      	ldr	r2, [pc, #44]	; (80114ac <fwdgt_config+0x4c>)
 8011480:	68d3      	ldr	r3, [r2, #12]
 8011482:	3901      	subs	r1, #1
 8011484:	f003 0302 	and.w	r3, r3, #2
 8011488:	d00d      	beq.n	80114a6 <fwdgt_config+0x46>
 801148a:	2b00      	cmp	r3, #0
 801148c:	d1f8      	bne.n	8011480 <fwdgt_config+0x20>
 801148e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8011492:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8011496:	6090      	str	r0, [r2, #8]
 8011498:	2001      	movs	r0, #1
 801149a:	6013      	str	r3, [r2, #0]
 801149c:	e002      	b.n	80114a4 <fwdgt_config+0x44>
 801149e:	2b00      	cmp	r3, #0
 80114a0:	d0eb      	beq.n	801147a <fwdgt_config+0x1a>
 80114a2:	2000      	movs	r0, #0
 80114a4:	bd10      	pop	{r4, pc}
 80114a6:	2b00      	cmp	r3, #0
 80114a8:	d1fb      	bne.n	80114a2 <fwdgt_config+0x42>
 80114aa:	e7f0      	b.n	801148e <fwdgt_config+0x2e>
 80114ac:	40003000 	andmi	r3, r0, r0
 80114b0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080114b4 <gpio_init>:
 80114b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114b8:	f04f 0c0f 	mov.w	ip, #15
 80114bc:	06cf      	lsls	r7, r1, #27
 80114be:	f04f 0400 	mov.w	r4, #0
 80114c2:	f04f 0701 	mov.w	r7, #1
 80114c6:	f001 050f 	and.w	r5, r1, #15
 80114ca:	bf48      	it	mi
 80114cc:	4315      	orrmi	r5, r2
 80114ce:	fa23 f204 	lsr.w	r2, r3, r4
 80114d2:	07d6      	lsls	r6, r2, #31
 80114d4:	d510      	bpl.n	80114f8 <gpio_init+0x44>
 80114d6:	00a2      	lsls	r2, r4, #2
 80114d8:	6806      	ldr	r6, [r0, #0]
 80114da:	fa0c fe02 	lsl.w	lr, ip, r2
 80114de:	ea26 060e 	bic.w	r6, r6, lr
 80114e2:	fa05 f202 	lsl.w	r2, r5, r2
 80114e6:	2928      	cmp	r1, #40	; 0x28
 80114e8:	ea42 0206 	orr.w	r2, r2, r6
 80114ec:	d128      	bne.n	8011540 <gpio_init+0x8c>
 80114ee:	fa07 f604 	lsl.w	r6, r7, r4
 80114f2:	401e      	ands	r6, r3
 80114f4:	6146      	str	r6, [r0, #20]
 80114f6:	6002      	str	r2, [r0, #0]
 80114f8:	3401      	adds	r4, #1
 80114fa:	2c08      	cmp	r4, #8
 80114fc:	d1e7      	bne.n	80114ce <gpio_init+0x1a>
 80114fe:	2600      	movs	r6, #0
 8011500:	f04f 0c0f 	mov.w	ip, #15
 8011504:	2701      	movs	r7, #1
 8011506:	f106 0208 	add.w	r2, r6, #8
 801150a:	fa23 f402 	lsr.w	r4, r3, r2
 801150e:	07e4      	lsls	r4, r4, #31
 8011510:	d511      	bpl.n	8011536 <gpio_init+0x82>
 8011512:	00b4      	lsls	r4, r6, #2
 8011514:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8011518:	fa0c f804 	lsl.w	r8, ip, r4
 801151c:	ea2e 0e08 	bic.w	lr, lr, r8
 8011520:	fa05 f404 	lsl.w	r4, r5, r4
 8011524:	2928      	cmp	r1, #40	; 0x28
 8011526:	ea44 040e 	orr.w	r4, r4, lr
 801152a:	d110      	bne.n	801154e <gpio_init+0x9a>
 801152c:	fa07 f202 	lsl.w	r2, r7, r2
 8011530:	401a      	ands	r2, r3
 8011532:	6142      	str	r2, [r0, #20]
 8011534:	6044      	str	r4, [r0, #4]
 8011536:	3601      	adds	r6, #1
 8011538:	2e08      	cmp	r6, #8
 801153a:	d1e4      	bne.n	8011506 <gpio_init+0x52>
 801153c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011540:	2948      	cmp	r1, #72	; 0x48
 8011542:	bf02      	ittt	eq
 8011544:	fa07 f604 	lsleq.w	r6, r7, r4
 8011548:	401e      	andeq	r6, r3
 801154a:	6106      	streq	r6, [r0, #16]
 801154c:	e7d3      	b.n	80114f6 <gpio_init+0x42>
 801154e:	2948      	cmp	r1, #72	; 0x48
 8011550:	bf02      	ittt	eq
 8011552:	fa07 f202 	lsleq.w	r2, r7, r2
 8011556:	401a      	andeq	r2, r3
 8011558:	6102      	streq	r2, [r0, #16]
 801155a:	e7eb      	b.n	8011534 <gpio_init+0x80>

0801155c <gpio_pin_remap_config>:
 801155c:	2800      	cmp	r0, #0
 801155e:	4a16      	ldr	r2, [pc, #88]	; (80115b8 <gpio_pin_remap_config+0x5c>)
 8011560:	b530      	push	{r4, r5, lr}
 8011562:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8011566:	bfb4      	ite	lt
 8011568:	69d3      	ldrlt	r3, [r2, #28]
 801156a:	6853      	ldrge	r3, [r2, #4]
 801156c:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8011570:	b284      	uxth	r4, r0
 8011572:	d110      	bne.n	8011596 <gpio_pin_remap_config+0x3a>
 8011574:	6855      	ldr	r5, [r2, #4]
 8011576:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 801157a:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801157e:	6055      	str	r5, [r2, #4]
 8011580:	b119      	cbz	r1, 801158a <gpio_pin_remap_config+0x2e>
 8011582:	0d42      	lsrs	r2, r0, #21
 8011584:	0112      	lsls	r2, r2, #4
 8011586:	4094      	lsls	r4, r2
 8011588:	4323      	orrs	r3, r4
 801158a:	4a0b      	ldr	r2, [pc, #44]	; (80115b8 <gpio_pin_remap_config+0x5c>)
 801158c:	2800      	cmp	r0, #0
 801158e:	bfb4      	ite	lt
 8011590:	61d3      	strlt	r3, [r2, #28]
 8011592:	6053      	strge	r3, [r2, #4]
 8011594:	bd30      	pop	{r4, r5, pc}
 8011596:	02c2      	lsls	r2, r0, #11
 8011598:	bf4d      	iteet	mi
 801159a:	2203      	movmi	r2, #3
 801159c:	0d42      	lsrpl	r2, r0, #21
 801159e:	0112      	lslpl	r2, r2, #4
 80115a0:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80115a4:	bf4c      	ite	mi
 80115a6:	40aa      	lslmi	r2, r5
 80115a8:	fa04 f202 	lslpl.w	r2, r4, r2
 80115ac:	ea23 0302 	bic.w	r3, r3, r2
 80115b0:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80115b4:	e7e4      	b.n	8011580 <gpio_pin_remap_config+0x24>
 80115b6:	bf00      	nop
 80115b8:	40010000 	andmi	r0, r1, r0

080115bc <gpio_ethernet_phy_select>:
 80115bc:	4b04      	ldr	r3, [pc, #16]	; (80115d0 <gpio_ethernet_phy_select+0x14>)
 80115be:	6859      	ldr	r1, [r3, #4]
 80115c0:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 80115c4:	6059      	str	r1, [r3, #4]
 80115c6:	685a      	ldr	r2, [r3, #4]
 80115c8:	4302      	orrs	r2, r0
 80115ca:	605a      	str	r2, [r3, #4]
 80115cc:	4770      	bx	lr
 80115ce:	bf00      	nop
 80115d0:	40010000 	andmi	r0, r1, r0

080115d4 <rcu_periph_clock_enable>:
 80115d4:	2201      	movs	r2, #1
 80115d6:	0983      	lsrs	r3, r0, #6
 80115d8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80115dc:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80115e0:	6819      	ldr	r1, [r3, #0]
 80115e2:	f000 001f 	and.w	r0, r0, #31
 80115e6:	fa02 f000 	lsl.w	r0, r2, r0
 80115ea:	4308      	orrs	r0, r1
 80115ec:	6018      	str	r0, [r3, #0]
 80115ee:	4770      	bx	lr

080115f0 <rcu_periph_clock_disable>:
 80115f0:	2101      	movs	r1, #1
 80115f2:	0983      	lsrs	r3, r0, #6
 80115f4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80115f8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80115fc:	681a      	ldr	r2, [r3, #0]
 80115fe:	f000 001f 	and.w	r0, r0, #31
 8011602:	fa01 f000 	lsl.w	r0, r1, r0
 8011606:	ea22 0000 	bic.w	r0, r2, r0
 801160a:	6018      	str	r0, [r3, #0]
 801160c:	4770      	bx	lr

0801160e <rcu_periph_reset_enable>:
 801160e:	f7ff bfe1 	b.w	80115d4 <rcu_periph_clock_enable>

08011612 <rcu_periph_reset_disable>:
 8011612:	f7ff bfed 	b.w	80115f0 <rcu_periph_clock_disable>
	...

08011618 <rcu_ckout0_config>:
 8011618:	4a03      	ldr	r2, [pc, #12]	; (8011628 <rcu_ckout0_config+0x10>)
 801161a:	6853      	ldr	r3, [r2, #4]
 801161c:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011620:	4303      	orrs	r3, r0
 8011622:	6053      	str	r3, [r2, #4]
 8011624:	4770      	bx	lr
 8011626:	bf00      	nop
 8011628:	40021000 	andmi	r1, r2, r0

0801162c <rcu_pll2_config>:
 801162c:	4b04      	ldr	r3, [pc, #16]	; (8011640 <rcu_pll2_config+0x14>)
 801162e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011630:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8011634:	62d9      	str	r1, [r3, #44]	; 0x2c
 8011636:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011638:	4302      	orrs	r2, r0
 801163a:	62da      	str	r2, [r3, #44]	; 0x2c
 801163c:	4770      	bx	lr
 801163e:	bf00      	nop
 8011640:	40021000 	andmi	r1, r2, r0

08011644 <rcu_adc_clock_config>:
 8011644:	490c      	ldr	r1, [pc, #48]	; (8011678 <rcu_adc_clock_config+0x34>)
 8011646:	2805      	cmp	r0, #5
 8011648:	684b      	ldr	r3, [r1, #4]
 801164a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801164e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8011652:	d006      	beq.n	8011662 <rcu_adc_clock_config+0x1e>
 8011654:	d803      	bhi.n	801165e <rcu_adc_clock_config+0x1a>
 8011656:	2804      	cmp	r0, #4
 8011658:	d10a      	bne.n	8011670 <rcu_adc_clock_config+0x2c>
 801165a:	604b      	str	r3, [r1, #4]
 801165c:	4770      	bx	lr
 801165e:	2807      	cmp	r0, #7
 8011660:	d1fb      	bne.n	801165a <rcu_adc_clock_config+0x16>
 8011662:	4a06      	ldr	r2, [pc, #24]	; (801167c <rcu_adc_clock_config+0x38>)
 8011664:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8011668:	4303      	orrs	r3, r0
 801166a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801166e:	e7f4      	b.n	801165a <rcu_adc_clock_config+0x16>
 8011670:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8011674:	e7f1      	b.n	801165a <rcu_adc_clock_config+0x16>
 8011676:	bf00      	nop
 8011678:	40021000 	andmi	r1, r2, r0
 801167c:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08011680 <rcu_flag_get>:
 8011680:	0983      	lsrs	r3, r0, #6
 8011682:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011686:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801168a:	681b      	ldr	r3, [r3, #0]
 801168c:	f000 001f 	and.w	r0, r0, #31
 8011690:	fa23 f000 	lsr.w	r0, r3, r0
 8011694:	f000 0001 	and.w	r0, r0, #1
 8011698:	4770      	bx	lr
	...

0801169c <rcu_osci_stab_wait>:
 801169c:	281a      	cmp	r0, #26
 801169e:	b508      	push	{r3, lr}
 80116a0:	d051      	beq.n	8011746 <rcu_osci_stab_wait+0xaa>
 80116a2:	d806      	bhi.n	80116b2 <rcu_osci_stab_wait+0x16>
 80116a4:	2810      	cmp	r0, #16
 80116a6:	d015      	beq.n	80116d4 <rcu_osci_stab_wait+0x38>
 80116a8:	2818      	cmp	r0, #24
 80116aa:	d043      	beq.n	8011734 <rcu_osci_stab_wait+0x98>
 80116ac:	b368      	cbz	r0, 801170a <rcu_osci_stab_wait+0x6e>
 80116ae:	2000      	movs	r0, #0
 80116b0:	bd08      	pop	{r3, pc}
 80116b2:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80116b6:	d01c      	beq.n	80116f2 <rcu_osci_stab_wait+0x56>
 80116b8:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80116bc:	d02f      	beq.n	801171e <rcu_osci_stab_wait+0x82>
 80116be:	281c      	cmp	r0, #28
 80116c0:	d1f5      	bne.n	80116ae <rcu_osci_stab_wait+0x12>
 80116c2:	4a25      	ldr	r2, [pc, #148]	; (8011758 <rcu_osci_stab_wait+0xbc>)
 80116c4:	201d      	movs	r0, #29
 80116c6:	f7ff ffdb 	bl	8011680 <rcu_flag_get>
 80116ca:	b908      	cbnz	r0, 80116d0 <rcu_osci_stab_wait+0x34>
 80116cc:	3a01      	subs	r2, #1
 80116ce:	d1f9      	bne.n	80116c4 <rcu_osci_stab_wait+0x28>
 80116d0:	201d      	movs	r0, #29
 80116d2:	e008      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 80116d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80116d8:	2011      	movs	r0, #17
 80116da:	f7ff ffd1 	bl	8011680 <rcu_flag_get>
 80116de:	b908      	cbnz	r0, 80116e4 <rcu_osci_stab_wait+0x48>
 80116e0:	3a01      	subs	r2, #1
 80116e2:	d1f9      	bne.n	80116d8 <rcu_osci_stab_wait+0x3c>
 80116e4:	2011      	movs	r0, #17
 80116e6:	f7ff ffcb 	bl	8011680 <rcu_flag_get>
 80116ea:	3800      	subs	r0, #0
 80116ec:	bf18      	it	ne
 80116ee:	2001      	movne	r0, #1
 80116f0:	e7de      	b.n	80116b0 <rcu_osci_stab_wait+0x14>
 80116f2:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 80116f6:	f640 0001 	movw	r0, #2049	; 0x801
 80116fa:	f7ff ffc1 	bl	8011680 <rcu_flag_get>
 80116fe:	b908      	cbnz	r0, 8011704 <rcu_osci_stab_wait+0x68>
 8011700:	3a01      	subs	r2, #1
 8011702:	d1f8      	bne.n	80116f6 <rcu_osci_stab_wait+0x5a>
 8011704:	f640 0001 	movw	r0, #2049	; 0x801
 8011708:	e7ed      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 801170a:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 801170e:	2001      	movs	r0, #1
 8011710:	f7ff ffb6 	bl	8011680 <rcu_flag_get>
 8011714:	b908      	cbnz	r0, 801171a <rcu_osci_stab_wait+0x7e>
 8011716:	3a01      	subs	r2, #1
 8011718:	d1f9      	bne.n	801170e <rcu_osci_stab_wait+0x72>
 801171a:	2001      	movs	r0, #1
 801171c:	e7e3      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 801171e:	4a0e      	ldr	r2, [pc, #56]	; (8011758 <rcu_osci_stab_wait+0xbc>)
 8011720:	f640 1001 	movw	r0, #2305	; 0x901
 8011724:	f7ff ffac 	bl	8011680 <rcu_flag_get>
 8011728:	b908      	cbnz	r0, 801172e <rcu_osci_stab_wait+0x92>
 801172a:	3a01      	subs	r2, #1
 801172c:	d1f8      	bne.n	8011720 <rcu_osci_stab_wait+0x84>
 801172e:	f640 1001 	movw	r0, #2305	; 0x901
 8011732:	e7d8      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 8011734:	4a08      	ldr	r2, [pc, #32]	; (8011758 <rcu_osci_stab_wait+0xbc>)
 8011736:	2019      	movs	r0, #25
 8011738:	f7ff ffa2 	bl	8011680 <rcu_flag_get>
 801173c:	b908      	cbnz	r0, 8011742 <rcu_osci_stab_wait+0xa6>
 801173e:	3a01      	subs	r2, #1
 8011740:	d1f9      	bne.n	8011736 <rcu_osci_stab_wait+0x9a>
 8011742:	2019      	movs	r0, #25
 8011744:	e7cf      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 8011746:	4a04      	ldr	r2, [pc, #16]	; (8011758 <rcu_osci_stab_wait+0xbc>)
 8011748:	201b      	movs	r0, #27
 801174a:	f7ff ff99 	bl	8011680 <rcu_flag_get>
 801174e:	b908      	cbnz	r0, 8011754 <rcu_osci_stab_wait+0xb8>
 8011750:	3a01      	subs	r2, #1
 8011752:	d1f9      	bne.n	8011748 <rcu_osci_stab_wait+0xac>
 8011754:	201b      	movs	r0, #27
 8011756:	e7c6      	b.n	80116e6 <rcu_osci_stab_wait+0x4a>
 8011758:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801175c <rcu_osci_on>:
 801175c:	f7ff bf3a 	b.w	80115d4 <rcu_periph_clock_enable>

08011760 <rcu_clock_freq_get>:
 8011760:	4b3d      	ldr	r3, [pc, #244]	; (8011858 <rcu_clock_freq_get+0xf8>)
 8011762:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011764:	4604      	mov	r4, r0
 8011766:	461f      	mov	r7, r3
 8011768:	b089      	sub	sp, #36	; 0x24
 801176a:	ad04      	add	r5, sp, #16
 801176c:	f103 0610 	add.w	r6, r3, #16
 8011770:	462a      	mov	r2, r5
 8011772:	6818      	ldr	r0, [r3, #0]
 8011774:	6859      	ldr	r1, [r3, #4]
 8011776:	3308      	adds	r3, #8
 8011778:	c203      	stmia	r2!, {r0, r1}
 801177a:	42b3      	cmp	r3, r6
 801177c:	4615      	mov	r5, r2
 801177e:	d1f7      	bne.n	8011770 <rcu_clock_freq_get+0x10>
 8011780:	466b      	mov	r3, sp
 8011782:	6938      	ldr	r0, [r7, #16]
 8011784:	6871      	ldr	r1, [r6, #4]
 8011786:	4a35      	ldr	r2, [pc, #212]	; (801185c <rcu_clock_freq_get+0xfc>)
 8011788:	c303      	stmia	r3!, {r0, r1}
 801178a:	c303      	stmia	r3!, {r0, r1}
 801178c:	6853      	ldr	r3, [r2, #4]
 801178e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011792:	2b01      	cmp	r3, #1
 8011794:	d053      	beq.n	801183e <rcu_clock_freq_get+0xde>
 8011796:	2b02      	cmp	r3, #2
 8011798:	d153      	bne.n	8011842 <rcu_clock_freq_get+0xe2>
 801179a:	6853      	ldr	r3, [r2, #4]
 801179c:	03dd      	lsls	r5, r3, #15
 801179e:	d523      	bpl.n	80117e8 <rcu_clock_freq_get+0x88>
 80117a0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80117a2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80117a6:	4b2e      	ldr	r3, [pc, #184]	; (8011860 <rcu_clock_freq_get+0x100>)
 80117a8:	d00e      	beq.n	80117c8 <rcu_clock_freq_get+0x68>
 80117aa:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80117ac:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80117ae:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80117b2:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80117b6:	3101      	adds	r1, #1
 80117b8:	280f      	cmp	r0, #15
 80117ba:	f100 0502 	add.w	r5, r0, #2
 80117be:	fbb3 f3f1 	udiv	r3, r3, r1
 80117c2:	bf08      	it	eq
 80117c4:	2514      	moveq	r5, #20
 80117c6:	436b      	muls	r3, r5
 80117c8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80117ca:	f001 010f 	and.w	r1, r1, #15
 80117ce:	3101      	adds	r1, #1
 80117d0:	fbb3 f3f1 	udiv	r3, r3, r1
 80117d4:	6851      	ldr	r1, [r2, #4]
 80117d6:	6850      	ldr	r0, [r2, #4]
 80117d8:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80117dc:	0080      	lsls	r0, r0, #2
 80117de:	d505      	bpl.n	80117ec <rcu_clock_freq_get+0x8c>
 80117e0:	f041 0110 	orr.w	r1, r1, #16
 80117e4:	1c48      	adds	r0, r1, #1
 80117e6:	e007      	b.n	80117f8 <rcu_clock_freq_get+0x98>
 80117e8:	4b1e      	ldr	r3, [pc, #120]	; (8011864 <rcu_clock_freq_get+0x104>)
 80117ea:	e7f3      	b.n	80117d4 <rcu_clock_freq_get+0x74>
 80117ec:	290f      	cmp	r1, #15
 80117ee:	d0f9      	beq.n	80117e4 <rcu_clock_freq_get+0x84>
 80117f0:	290d      	cmp	r1, #13
 80117f2:	f101 0002 	add.w	r0, r1, #2
 80117f6:	d01d      	beq.n	8011834 <rcu_clock_freq_get+0xd4>
 80117f8:	4343      	muls	r3, r0
 80117fa:	6851      	ldr	r1, [r2, #4]
 80117fc:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8011800:	3120      	adds	r1, #32
 8011802:	4469      	add	r1, sp
 8011804:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8011808:	fa23 f001 	lsr.w	r0, r3, r1
 801180c:	6851      	ldr	r1, [r2, #4]
 801180e:	6852      	ldr	r2, [r2, #4]
 8011810:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8011814:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8011818:	3120      	adds	r1, #32
 801181a:	3220      	adds	r2, #32
 801181c:	4469      	add	r1, sp
 801181e:	446a      	add	r2, sp
 8011820:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8011824:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8011828:	2c03      	cmp	r4, #3
 801182a:	d813      	bhi.n	8011854 <rcu_clock_freq_get+0xf4>
 801182c:	e8df f004 	tbb	[pc, r4]
 8011830:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8011834:	2006      	movs	r0, #6
 8011836:	0859      	lsrs	r1, r3, #1
 8011838:	fb00 1303 	mla	r3, r0, r3, r1
 801183c:	e7dd      	b.n	80117fa <rcu_clock_freq_get+0x9a>
 801183e:	4b08      	ldr	r3, [pc, #32]	; (8011860 <rcu_clock_freq_get+0x100>)
 8011840:	e7db      	b.n	80117fa <rcu_clock_freq_get+0x9a>
 8011842:	4b09      	ldr	r3, [pc, #36]	; (8011868 <rcu_clock_freq_get+0x108>)
 8011844:	e7d9      	b.n	80117fa <rcu_clock_freq_get+0x9a>
 8011846:	4618      	mov	r0, r3
 8011848:	b009      	add	sp, #36	; 0x24
 801184a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801184c:	40c8      	lsrs	r0, r1
 801184e:	e7fb      	b.n	8011848 <rcu_clock_freq_get+0xe8>
 8011850:	40d0      	lsrs	r0, r2
 8011852:	e7f9      	b.n	8011848 <rcu_clock_freq_get+0xe8>
 8011854:	2000      	movs	r0, #0
 8011856:	e7f7      	b.n	8011848 <rcu_clock_freq_get+0xe8>
 8011858:	0801301c 	stmdaeq	r1, {r2, r3, r4, ip, sp}
 801185c:	40021000 	andmi	r1, r2, r0
 8011860:	017d7840 	cmneq	sp, r0, asr #16
 8011864:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8011868:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0801186c <timer_deinit>:
 801186c:	b508      	push	{r3, lr}
 801186e:	4b2d      	ldr	r3, [pc, #180]	; (8011924 <timer_deinit+0xb8>)
 8011870:	4298      	cmp	r0, r3
 8011872:	d048      	beq.n	8011906 <timer_deinit+0x9a>
 8011874:	d816      	bhi.n	80118a4 <timer_deinit+0x38>
 8011876:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801187a:	4298      	cmp	r0, r3
 801187c:	d03c      	beq.n	80118f8 <timer_deinit+0x8c>
 801187e:	d807      	bhi.n	8011890 <timer_deinit+0x24>
 8011880:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8011884:	d02a      	beq.n	80118dc <timer_deinit+0x70>
 8011886:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 801188a:	4298      	cmp	r0, r3
 801188c:	d02d      	beq.n	80118ea <timer_deinit+0x7e>
 801188e:	bd08      	pop	{r3, pc}
 8011890:	4b25      	ldr	r3, [pc, #148]	; (8011928 <timer_deinit+0xbc>)
 8011892:	4298      	cmp	r0, r3
 8011894:	d1fb      	bne.n	801188e <timer_deinit+0x22>
 8011896:	f240 4003 	movw	r0, #1027	; 0x403
 801189a:	f7ff feb8 	bl	801160e <rcu_periph_reset_enable>
 801189e:	f240 4003 	movw	r0, #1027	; 0x403
 80118a2:	e017      	b.n	80118d4 <timer_deinit+0x68>
 80118a4:	4b21      	ldr	r3, [pc, #132]	; (801192c <timer_deinit+0xc0>)
 80118a6:	4298      	cmp	r0, r3
 80118a8:	d00e      	beq.n	80118c8 <timer_deinit+0x5c>
 80118aa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80118ae:	4298      	cmp	r0, r3
 80118b0:	d030      	beq.n	8011914 <timer_deinit+0xa8>
 80118b2:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80118b6:	4298      	cmp	r0, r3
 80118b8:	d1e9      	bne.n	801188e <timer_deinit+0x22>
 80118ba:	f240 4005 	movw	r0, #1029	; 0x405
 80118be:	f7ff fea6 	bl	801160e <rcu_periph_reset_enable>
 80118c2:	f240 4005 	movw	r0, #1029	; 0x405
 80118c6:	e005      	b.n	80118d4 <timer_deinit+0x68>
 80118c8:	f240 300b 	movw	r0, #779	; 0x30b
 80118cc:	f7ff fe9f 	bl	801160e <rcu_periph_reset_enable>
 80118d0:	f240 300b 	movw	r0, #779	; 0x30b
 80118d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80118d8:	f7ff be9b 	b.w	8011612 <rcu_periph_reset_disable>
 80118dc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80118e0:	f7ff fe95 	bl	801160e <rcu_periph_reset_enable>
 80118e4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80118e8:	e7f4      	b.n	80118d4 <timer_deinit+0x68>
 80118ea:	f240 4001 	movw	r0, #1025	; 0x401
 80118ee:	f7ff fe8e 	bl	801160e <rcu_periph_reset_enable>
 80118f2:	f240 4001 	movw	r0, #1025	; 0x401
 80118f6:	e7ed      	b.n	80118d4 <timer_deinit+0x68>
 80118f8:	f240 4002 	movw	r0, #1026	; 0x402
 80118fc:	f7ff fe87 	bl	801160e <rcu_periph_reset_enable>
 8011900:	f240 4002 	movw	r0, #1026	; 0x402
 8011904:	e7e6      	b.n	80118d4 <timer_deinit+0x68>
 8011906:	f240 4004 	movw	r0, #1028	; 0x404
 801190a:	f7ff fe80 	bl	801160e <rcu_periph_reset_enable>
 801190e:	f240 4004 	movw	r0, #1028	; 0x404
 8011912:	e7df      	b.n	80118d4 <timer_deinit+0x68>
 8011914:	f240 300d 	movw	r0, #781	; 0x30d
 8011918:	f7ff fe79 	bl	801160e <rcu_periph_reset_enable>
 801191c:	f240 300d 	movw	r0, #781	; 0x30d
 8011920:	e7d8      	b.n	80118d4 <timer_deinit+0x68>
 8011922:	bf00      	nop
 8011924:	40001000 	andmi	r1, r0, r0
 8011928:	40000c00 	andmi	r0, r0, r0, lsl #24
 801192c:	40012c00 	andmi	r2, r1, r0, lsl #24

08011930 <timer_init>:
 8011930:	880b      	ldrh	r3, [r1, #0]
 8011932:	6283      	str	r3, [r0, #40]	; 0x28
 8011934:	4b26      	ldr	r3, [pc, #152]	; (80119d0 <timer_init+0xa0>)
 8011936:	4298      	cmp	r0, r3
 8011938:	d018      	beq.n	801196c <timer_init+0x3c>
 801193a:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801193e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8011942:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8011946:	d011      	beq.n	801196c <timer_init+0x3c>
 8011948:	4a22      	ldr	r2, [pc, #136]	; (80119d4 <timer_init+0xa4>)
 801194a:	4290      	cmp	r0, r2
 801194c:	d00e      	beq.n	801196c <timer_init+0x3c>
 801194e:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8011952:	4290      	cmp	r0, r2
 8011954:	d00a      	beq.n	801196c <timer_init+0x3c>
 8011956:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801195a:	4293      	cmp	r3, r2
 801195c:	d006      	beq.n	801196c <timer_init+0x3c>
 801195e:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8011962:	4293      	cmp	r3, r2
 8011964:	d002      	beq.n	801196c <timer_init+0x3c>
 8011966:	4b1c      	ldr	r3, [pc, #112]	; (80119d8 <timer_init+0xa8>)
 8011968:	4298      	cmp	r0, r3
 801196a:	d10f      	bne.n	801198c <timer_init+0x5c>
 801196c:	6803      	ldr	r3, [r0, #0]
 801196e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011972:	6003      	str	r3, [r0, #0]
 8011974:	884b      	ldrh	r3, [r1, #2]
 8011976:	6802      	ldr	r2, [r0, #0]
 8011978:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801197c:	4313      	orrs	r3, r2
 801197e:	6003      	str	r3, [r0, #0]
 8011980:	888b      	ldrh	r3, [r1, #4]
 8011982:	6802      	ldr	r2, [r0, #0]
 8011984:	f003 0310 	and.w	r3, r3, #16
 8011988:	4313      	orrs	r3, r2
 801198a:	6003      	str	r3, [r0, #0]
 801198c:	688b      	ldr	r3, [r1, #8]
 801198e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011990:	4b12      	ldr	r3, [pc, #72]	; (80119dc <timer_init+0xac>)
 8011992:	4298      	cmp	r0, r3
 8011994:	d003      	beq.n	801199e <timer_init+0x6e>
 8011996:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801199a:	4298      	cmp	r0, r3
 801199c:	d104      	bne.n	80119a8 <timer_init+0x78>
 801199e:	6943      	ldr	r3, [r0, #20]
 80119a0:	f043 0301 	orr.w	r3, r3, #1
 80119a4:	6143      	str	r3, [r0, #20]
 80119a6:	4770      	bx	lr
 80119a8:	6803      	ldr	r3, [r0, #0]
 80119aa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80119ae:	6003      	str	r3, [r0, #0]
 80119b0:	898b      	ldrh	r3, [r1, #12]
 80119b2:	6802      	ldr	r2, [r0, #0]
 80119b4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80119b8:	4313      	orrs	r3, r2
 80119ba:	6003      	str	r3, [r0, #0]
 80119bc:	4b04      	ldr	r3, [pc, #16]	; (80119d0 <timer_init+0xa0>)
 80119be:	4298      	cmp	r0, r3
 80119c0:	d002      	beq.n	80119c8 <timer_init+0x98>
 80119c2:	4b04      	ldr	r3, [pc, #16]	; (80119d4 <timer_init+0xa4>)
 80119c4:	4298      	cmp	r0, r3
 80119c6:	d1ea      	bne.n	801199e <timer_init+0x6e>
 80119c8:	7b8b      	ldrb	r3, [r1, #14]
 80119ca:	6303      	str	r3, [r0, #48]	; 0x30
 80119cc:	e7e7      	b.n	801199e <timer_init+0x6e>
 80119ce:	bf00      	nop
 80119d0:	40012c00 	andmi	r2, r1, r0, lsl #24
 80119d4:	40013400 	andmi	r3, r1, r0, lsl #8
 80119d8:	40002000 	andmi	r2, r0, r0
 80119dc:	40001000 	andmi	r1, r0, r0

080119e0 <timer_enable>:
 80119e0:	6803      	ldr	r3, [r0, #0]
 80119e2:	f043 0301 	orr.w	r3, r3, #1
 80119e6:	6003      	str	r3, [r0, #0]
 80119e8:	4770      	bx	lr
	...

080119ec <usart_deinit>:
 80119ec:	b508      	push	{r3, lr}
 80119ee:	4b1d      	ldr	r3, [pc, #116]	; (8011a64 <usart_deinit+0x78>)
 80119f0:	4298      	cmp	r0, r3
 80119f2:	d028      	beq.n	8011a46 <usart_deinit+0x5a>
 80119f4:	d808      	bhi.n	8011a08 <usart_deinit+0x1c>
 80119f6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80119fa:	4298      	cmp	r0, r3
 80119fc:	d015      	beq.n	8011a2a <usart_deinit+0x3e>
 80119fe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011a02:	4298      	cmp	r0, r3
 8011a04:	d018      	beq.n	8011a38 <usart_deinit+0x4c>
 8011a06:	bd08      	pop	{r3, pc}
 8011a08:	4b17      	ldr	r3, [pc, #92]	; (8011a68 <usart_deinit+0x7c>)
 8011a0a:	4298      	cmp	r0, r3
 8011a0c:	d022      	beq.n	8011a54 <usart_deinit+0x68>
 8011a0e:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011a12:	4298      	cmp	r0, r3
 8011a14:	d1f7      	bne.n	8011a06 <usart_deinit+0x1a>
 8011a16:	f240 300e 	movw	r0, #782	; 0x30e
 8011a1a:	f7ff fdf8 	bl	801160e <rcu_periph_reset_enable>
 8011a1e:	f240 300e 	movw	r0, #782	; 0x30e
 8011a22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a26:	f7ff bdf4 	b.w	8011612 <rcu_periph_reset_disable>
 8011a2a:	f240 4011 	movw	r0, #1041	; 0x411
 8011a2e:	f7ff fdee 	bl	801160e <rcu_periph_reset_enable>
 8011a32:	f240 4011 	movw	r0, #1041	; 0x411
 8011a36:	e7f4      	b.n	8011a22 <usart_deinit+0x36>
 8011a38:	f240 4012 	movw	r0, #1042	; 0x412
 8011a3c:	f7ff fde7 	bl	801160e <rcu_periph_reset_enable>
 8011a40:	f240 4012 	movw	r0, #1042	; 0x412
 8011a44:	e7ed      	b.n	8011a22 <usart_deinit+0x36>
 8011a46:	f240 4013 	movw	r0, #1043	; 0x413
 8011a4a:	f7ff fde0 	bl	801160e <rcu_periph_reset_enable>
 8011a4e:	f240 4013 	movw	r0, #1043	; 0x413
 8011a52:	e7e6      	b.n	8011a22 <usart_deinit+0x36>
 8011a54:	f240 4014 	movw	r0, #1044	; 0x414
 8011a58:	f7ff fdd9 	bl	801160e <rcu_periph_reset_enable>
 8011a5c:	f240 4014 	movw	r0, #1044	; 0x414
 8011a60:	e7df      	b.n	8011a22 <usart_deinit+0x36>
 8011a62:	bf00      	nop
 8011a64:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011a68:	40005000 	andmi	r5, r0, r0

08011a6c <usart_baudrate_set>:
 8011a6c:	b538      	push	{r3, r4, r5, lr}
 8011a6e:	4b11      	ldr	r3, [pc, #68]	; (8011ab4 <usart_baudrate_set+0x48>)
 8011a70:	4604      	mov	r4, r0
 8011a72:	4298      	cmp	r0, r3
 8011a74:	460d      	mov	r5, r1
 8011a76:	d01b      	beq.n	8011ab0 <usart_baudrate_set+0x44>
 8011a78:	d809      	bhi.n	8011a8e <usart_baudrate_set+0x22>
 8011a7a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011a7e:	4298      	cmp	r0, r3
 8011a80:	d016      	beq.n	8011ab0 <usart_baudrate_set+0x44>
 8011a82:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011a86:	4298      	cmp	r0, r3
 8011a88:	d012      	beq.n	8011ab0 <usart_baudrate_set+0x44>
 8011a8a:	2000      	movs	r0, #0
 8011a8c:	e009      	b.n	8011aa2 <usart_baudrate_set+0x36>
 8011a8e:	4b0a      	ldr	r3, [pc, #40]	; (8011ab8 <usart_baudrate_set+0x4c>)
 8011a90:	4298      	cmp	r0, r3
 8011a92:	d00d      	beq.n	8011ab0 <usart_baudrate_set+0x44>
 8011a94:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011a98:	4298      	cmp	r0, r3
 8011a9a:	d1f6      	bne.n	8011a8a <usart_baudrate_set+0x1e>
 8011a9c:	2003      	movs	r0, #3
 8011a9e:	f7ff fe5f 	bl	8011760 <rcu_clock_freq_get>
 8011aa2:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8011aa6:	fbb3 f1f5 	udiv	r1, r3, r5
 8011aaa:	b289      	uxth	r1, r1
 8011aac:	60a1      	str	r1, [r4, #8]
 8011aae:	bd38      	pop	{r3, r4, r5, pc}
 8011ab0:	2002      	movs	r0, #2
 8011ab2:	e7f4      	b.n	8011a9e <usart_baudrate_set+0x32>
 8011ab4:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011ab8:	40005000 	andmi	r5, r0, r0

08011abc <usart_parity_config>:
 8011abc:	68c2      	ldr	r2, [r0, #12]
 8011abe:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8011ac2:	60c2      	str	r2, [r0, #12]
 8011ac4:	68c3      	ldr	r3, [r0, #12]
 8011ac6:	430b      	orrs	r3, r1
 8011ac8:	60c3      	str	r3, [r0, #12]
 8011aca:	4770      	bx	lr

08011acc <usart_word_length_set>:
 8011acc:	68c2      	ldr	r2, [r0, #12]
 8011ace:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8011ad2:	60c2      	str	r2, [r0, #12]
 8011ad4:	68c3      	ldr	r3, [r0, #12]
 8011ad6:	430b      	orrs	r3, r1
 8011ad8:	60c3      	str	r3, [r0, #12]
 8011ada:	4770      	bx	lr

08011adc <usart_stop_bit_set>:
 8011adc:	6902      	ldr	r2, [r0, #16]
 8011ade:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8011ae2:	6102      	str	r2, [r0, #16]
 8011ae4:	6903      	ldr	r3, [r0, #16]
 8011ae6:	430b      	orrs	r3, r1
 8011ae8:	6103      	str	r3, [r0, #16]
 8011aea:	4770      	bx	lr

08011aec <usart_transmit_config>:
 8011aec:	68c3      	ldr	r3, [r0, #12]
 8011aee:	f023 0308 	bic.w	r3, r3, #8
 8011af2:	430b      	orrs	r3, r1
 8011af4:	60c3      	str	r3, [r0, #12]
 8011af6:	4770      	bx	lr

08011af8 <usart_receive_config>:
 8011af8:	68c3      	ldr	r3, [r0, #12]
 8011afa:	f023 0304 	bic.w	r3, r3, #4
 8011afe:	430b      	orrs	r3, r1
 8011b00:	60c3      	str	r3, [r0, #12]
 8011b02:	4770      	bx	lr

08011b04 <usart_hardware_flow_rts_config>:
 8011b04:	6943      	ldr	r3, [r0, #20]
 8011b06:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8011b0a:	430b      	orrs	r3, r1
 8011b0c:	6143      	str	r3, [r0, #20]
 8011b0e:	4770      	bx	lr

08011b10 <usart_hardware_flow_cts_config>:
 8011b10:	6943      	ldr	r3, [r0, #20]
 8011b12:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8011b16:	430b      	orrs	r3, r1
 8011b18:	6143      	str	r3, [r0, #20]
 8011b1a:	4770      	bx	lr

08011b1c <usart_flag_get>:
 8011b1c:	098b      	lsrs	r3, r1, #6
 8011b1e:	5818      	ldr	r0, [r3, r0]
 8011b20:	f001 011f 	and.w	r1, r1, #31
 8011b24:	40c8      	lsrs	r0, r1
 8011b26:	f000 0001 	and.w	r0, r0, #1
 8011b2a:	4770      	bx	lr

08011b2c <emac_start>:
 8011b2c:	b510      	push	{r4, lr}
 8011b2e:	4604      	mov	r4, r0
 8011b30:	f240 6002 	movw	r0, #1538	; 0x602
 8011b34:	f7ff fd4e 	bl	80115d4 <rcu_periph_clock_enable>
 8011b38:	f240 6003 	movw	r0, #1539	; 0x603
 8011b3c:	f7ff fd4a 	bl	80115d4 <rcu_periph_clock_enable>
 8011b40:	f240 6004 	movw	r0, #1540	; 0x604
 8011b44:	f7ff fd46 	bl	80115d4 <rcu_periph_clock_enable>
 8011b48:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011b4c:	2203      	movs	r2, #3
 8011b4e:	2118      	movs	r1, #24
 8011b50:	4846      	ldr	r0, [pc, #280]	; (8011c6c <emac_start+0x140>)
 8011b52:	f7ff fcaf 	bl	80114b4 <gpio_init>
 8011b56:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8011b5a:	f7ff fd3b 	bl	80115d4 <rcu_periph_clock_enable>
 8011b5e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8011b62:	f7ff fd63 	bl	801162c <rcu_pll2_config>
 8011b66:	201c      	movs	r0, #28
 8011b68:	f7ff fdf8 	bl	801175c <rcu_osci_on>
 8011b6c:	201c      	movs	r0, #28
 8011b6e:	f7ff fd95 	bl	801169c <rcu_osci_stab_wait>
 8011b72:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8011b76:	f7ff fd4f 	bl	8011618 <rcu_ckout0_config>
 8011b7a:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8011b7e:	f7ff fd1d 	bl	80115bc <gpio_ethernet_phy_select>
 8011b82:	2302      	movs	r3, #2
 8011b84:	2203      	movs	r2, #3
 8011b86:	2104      	movs	r1, #4
 8011b88:	4838      	ldr	r0, [pc, #224]	; (8011c6c <emac_start+0x140>)
 8011b8a:	f7ff fc93 	bl	80114b4 <gpio_init>
 8011b8e:	2304      	movs	r3, #4
 8011b90:	2203      	movs	r2, #3
 8011b92:	2118      	movs	r1, #24
 8011b94:	4835      	ldr	r0, [pc, #212]	; (8011c6c <emac_start+0x140>)
 8011b96:	f7ff fc8d 	bl	80114b4 <gpio_init>
 8011b9a:	2380      	movs	r3, #128	; 0x80
 8011b9c:	2203      	movs	r2, #3
 8011b9e:	2104      	movs	r1, #4
 8011ba0:	4832      	ldr	r0, [pc, #200]	; (8011c6c <emac_start+0x140>)
 8011ba2:	f7ff fc87 	bl	80114b4 <gpio_init>
 8011ba6:	2302      	movs	r3, #2
 8011ba8:	2203      	movs	r2, #3
 8011baa:	2118      	movs	r1, #24
 8011bac:	4830      	ldr	r0, [pc, #192]	; (8011c70 <emac_start+0x144>)
 8011bae:	f7ff fc81 	bl	80114b4 <gpio_init>
 8011bb2:	2310      	movs	r3, #16
 8011bb4:	2203      	movs	r2, #3
 8011bb6:	2104      	movs	r1, #4
 8011bb8:	482d      	ldr	r0, [pc, #180]	; (8011c70 <emac_start+0x144>)
 8011bba:	f7ff fc7b 	bl	80114b4 <gpio_init>
 8011bbe:	2320      	movs	r3, #32
 8011bc0:	2203      	movs	r2, #3
 8011bc2:	2104      	movs	r1, #4
 8011bc4:	482a      	ldr	r0, [pc, #168]	; (8011c70 <emac_start+0x144>)
 8011bc6:	f7ff fc75 	bl	80114b4 <gpio_init>
 8011bca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011bce:	2203      	movs	r2, #3
 8011bd0:	2118      	movs	r1, #24
 8011bd2:	4828      	ldr	r0, [pc, #160]	; (8011c74 <emac_start+0x148>)
 8011bd4:	f7ff fc6e 	bl	80114b4 <gpio_init>
 8011bd8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8011bdc:	2203      	movs	r2, #3
 8011bde:	2118      	movs	r1, #24
 8011be0:	4824      	ldr	r0, [pc, #144]	; (8011c74 <emac_start+0x148>)
 8011be2:	f7ff fc67 	bl	80114b4 <gpio_init>
 8011be6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8011bea:	2203      	movs	r2, #3
 8011bec:	2118      	movs	r1, #24
 8011bee:	4821      	ldr	r0, [pc, #132]	; (8011c74 <emac_start+0x148>)
 8011bf0:	f7ff fc60 	bl	80114b4 <gpio_init>
 8011bf4:	f240 500e 	movw	r0, #1294	; 0x50e
 8011bf8:	f7ff fcec 	bl	80115d4 <rcu_periph_clock_enable>
 8011bfc:	f240 500f 	movw	r0, #1295	; 0x50f
 8011c00:	f7ff fce8 	bl	80115d4 <rcu_periph_clock_enable>
 8011c04:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8011c08:	f7ff fce4 	bl	80115d4 <rcu_periph_clock_enable>
 8011c0c:	f001 f8c6 	bl	8012d9c <enet_deinit>
 8011c10:	f000 fd20 	bl	8012654 <enet_software_reset>
 8011c14:	b900      	cbnz	r0, 8011c18 <emac_start+0xec>
 8011c16:	e7fe      	b.n	8011c16 <emac_start+0xea>
 8011c18:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8011c1c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011c20:	f44f 4090 	mov.w	r0, #18432	; 0x4800
 8011c24:	f000 fe9a 	bl	801295c <enet_init>
 8011c28:	4b13      	ldr	r3, [pc, #76]	; (8011c78 <emac_start+0x14c>)
 8011c2a:	6018      	str	r0, [r3, #0]
 8011c2c:	681b      	ldr	r3, [r3, #0]
 8011c2e:	b903      	cbnz	r3, 8011c32 <emac_start+0x106>
 8011c30:	e7fe      	b.n	8011c30 <emac_start+0x104>
 8011c32:	4620      	mov	r0, r4
 8011c34:	f000 fb90 	bl	8012358 <mac_address_get>
 8011c38:	4621      	mov	r1, r4
 8011c3a:	2000      	movs	r0, #0
 8011c3c:	f000 fdee 	bl	801281c <enet_mac_address_set>
 8011c40:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8011c44:	f000 fd1a 	bl	801267c <enet_descriptors_chain_init>
 8011c48:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8011c4c:	f000 fd16 	bl	801267c <enet_descriptors_chain_init>
 8011c50:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8011c54:	4809      	ldr	r0, [pc, #36]	; (8011c7c <emac_start+0x150>)
 8011c56:	f000 fddb 	bl	8012810 <enet_transmit_checksum_config>
 8011c5a:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8011c5e:	4808      	ldr	r0, [pc, #32]	; (8011c80 <emac_start+0x154>)
 8011c60:	f000 fdd6 	bl	8012810 <enet_transmit_checksum_config>
 8011c64:	f001 f812 	bl	8012c8c <enet_enable>
 8011c68:	2001      	movs	r0, #1
 8011c6a:	bd10      	pop	{r4, pc}
 8011c6c:	40010800 	andmi	r0, r1, r0, lsl #16
 8011c70:	40011000 	andmi	r1, r1, r0
 8011c74:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011c78:	200097a8 	andcs	r9, r0, r8, lsr #15
 8011c7c:	20013bf4 	strdcs	r3, [r1], -r4
 8011c80:	20013c04 	andcs	r3, r1, r4, lsl #24

08011c84 <emac_eth_recv>:
 8011c84:	b538      	push	{r3, r4, r5, lr}
 8011c86:	4605      	mov	r5, r0
 8011c88:	f001 f858 	bl	8012d3c <enet_rxframe_size_get>
 8011c8c:	4604      	mov	r4, r0
 8011c8e:	b138      	cbz	r0, 8011ca0 <emac_eth_recv+0x1c>
 8011c90:	4b05      	ldr	r3, [pc, #20]	; (8011ca8 <emac_eth_recv+0x24>)
 8011c92:	2105      	movs	r1, #5
 8011c94:	6818      	ldr	r0, [r3, #0]
 8011c96:	f001 f800 	bl	8012c9a <enet_desc_information_get>
 8011c9a:	6028      	str	r0, [r5, #0]
 8011c9c:	4620      	mov	r0, r4
 8011c9e:	bd38      	pop	{r3, r4, r5, pc}
 8011ca0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011ca4:	e7fb      	b.n	8011c9e <emac_eth_recv+0x1a>
 8011ca6:	bf00      	nop
 8011ca8:	200117b8 			; <UNDEFINED> instruction: 0x200117b8

08011cac <emac_free_pkt>:
 8011cac:	2100      	movs	r1, #0
 8011cae:	4608      	mov	r0, r1
 8011cb0:	f000 bd2c 	b.w	801270c <enet_frame_receive>

08011cb4 <emac_eth_send>:
 8011cb4:	f000 bd6a 	b.w	801278c <enet_frame_transmit>

08011cb8 <gd32_adc_init()>:
 8011cb8:	b510      	push	{r4, lr}
 8011cba:	f240 6009 	movw	r0, #1545	; 0x609
 8011cbe:	4c21      	ldr	r4, [pc, #132]	; (8011d44 <gd32_adc_init()+0x8c>)
 8011cc0:	f7ff fc88 	bl	80115d4 <rcu_periph_clock_enable>
 8011cc4:	2005      	movs	r0, #5
 8011cc6:	f7ff fcbd 	bl	8011644 <rcu_adc_clock_config>
 8011cca:	4620      	mov	r0, r4
 8011ccc:	2201      	movs	r2, #1
 8011cce:	f44f 7180 	mov.w	r1, #256	; 0x100
 8011cd2:	f000 fb63 	bl	801239c <adc_special_function_config>
 8011cd6:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8011cda:	4620      	mov	r0, r4
 8011cdc:	2102      	movs	r1, #2
 8011cde:	f000 fbfd 	bl	80124dc <adc_external_trigger_source_config>
 8011ce2:	2100      	movs	r1, #0
 8011ce4:	4620      	mov	r0, r4
 8011ce6:	f000 fb81 	bl	80123ec <adc_data_alignment_config>
 8011cea:	2000      	movs	r0, #0
 8011cec:	f000 fb46 	bl	801237c <adc_mode_config>
 8011cf0:	2202      	movs	r2, #2
 8011cf2:	4620      	mov	r0, r4
 8011cf4:	4611      	mov	r1, r2
 8011cf6:	f000 fba5 	bl	8012444 <adc_channel_length_config>
 8011cfa:	4620      	mov	r0, r4
 8011cfc:	2307      	movs	r3, #7
 8011cfe:	2210      	movs	r2, #16
 8011d00:	2100      	movs	r1, #0
 8011d02:	f000 fbbc 	bl	801247e <adc_inserted_channel_config>
 8011d06:	2307      	movs	r3, #7
 8011d08:	4620      	mov	r0, r4
 8011d0a:	2211      	movs	r2, #17
 8011d0c:	2101      	movs	r1, #1
 8011d0e:	f000 fbb6 	bl	801247e <adc_inserted_channel_config>
 8011d12:	2201      	movs	r2, #1
 8011d14:	2102      	movs	r1, #2
 8011d16:	4620      	mov	r0, r4
 8011d18:	f000 fbf1 	bl	80124fe <adc_external_trigger_config>
 8011d1c:	f000 fb88 	bl	8012430 <adc_tempsensor_vrefint_enable>
 8011d20:	4620      	mov	r0, r4
 8011d22:	f000 fb6c 	bl	80123fe <adc_enable>
 8011d26:	2100      	movs	r1, #0
 8011d28:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8011d2c:	f000 fafc 	bl	8012328 <udelay(unsigned int, unsigned int)>
 8011d30:	4620      	mov	r0, r4
 8011d32:	f000 fb6c 	bl	801240e <adc_calibration_enable>
 8011d36:	4620      	mov	r0, r4
 8011d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d3c:	2102      	movs	r1, #2
 8011d3e:	f000 bbf9 	b.w	8012534 <adc_software_trigger_enable>
 8011d42:	bf00      	nop
 8011d44:	40012400 	andmi	r2, r1, r0, lsl #8

08011d48 <_stop() [clone .isra.0]>:
 8011d48:	b508      	push	{r3, lr}
 8011d4a:	4806      	ldr	r0, [pc, #24]	; (8011d64 <_stop() [clone .isra.0]+0x1c>)
 8011d4c:	f001 f8b6 	bl	8012ebc <i2c_stop_on_bus>
 8011d50:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011d54:	4a04      	ldr	r2, [pc, #16]	; (8011d68 <_stop() [clone .isra.0]+0x20>)
 8011d56:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8011d5a:	0589      	lsls	r1, r1, #22
 8011d5c:	d501      	bpl.n	8011d62 <_stop() [clone .isra.0]+0x1a>
 8011d5e:	3b01      	subs	r3, #1
 8011d60:	d1f9      	bne.n	8011d56 <_stop() [clone .isra.0]+0xe>
 8011d62:	bd08      	pop	{r3, pc}
 8011d64:	40005400 	andmi	r5, r0, r0, lsl #8
 8011d68:	40005000 	andmi	r5, r0, r0

08011d6c <gd32_i2c_begin()>:
 8011d6c:	b510      	push	{r4, lr}
 8011d6e:	f240 7015 	movw	r0, #1813	; 0x715
 8011d72:	f7ff fc2f 	bl	80115d4 <rcu_periph_clock_enable>
 8011d76:	4c15      	ldr	r4, [pc, #84]	; (8011dcc <gd32_i2c_begin()+0x60>)
 8011d78:	f240 6003 	movw	r0, #1539	; 0x603
 8011d7c:	f7ff fc2a 	bl	80115d4 <rcu_periph_clock_enable>
 8011d80:	f240 6003 	movw	r0, #1539	; 0x603
 8011d84:	f7ff fc26 	bl	80115d4 <rcu_periph_clock_enable>
 8011d88:	4620      	mov	r0, r4
 8011d8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011d8e:	2203      	movs	r2, #3
 8011d90:	211c      	movs	r1, #28
 8011d92:	f7ff fb8f 	bl	80114b4 <gpio_init>
 8011d96:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011d9a:	2203      	movs	r2, #3
 8011d9c:	4620      	mov	r0, r4
 8011d9e:	211c      	movs	r1, #28
 8011da0:	f7ff fb88 	bl	80114b4 <gpio_init>
 8011da4:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8011da8:	2101      	movs	r1, #1
 8011daa:	2002      	movs	r0, #2
 8011dac:	f7ff fbd6 	bl	801155c <gpio_pin_remap_config>
 8011db0:	4620      	mov	r0, r4
 8011db2:	4907      	ldr	r1, [pc, #28]	; (8011dd0 <gd32_i2c_begin()+0x64>)
 8011db4:	2200      	movs	r2, #0
 8011db6:	f000 ffff 	bl	8012db8 <i2c_clock_config>
 8011dba:	4620      	mov	r0, r4
 8011dbc:	f001 f874 	bl	8012ea8 <i2c_enable>
 8011dc0:	4620      	mov	r0, r4
 8011dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dc6:	2101      	movs	r1, #1
 8011dc8:	f001 b854 	b.w	8012e74 <i2c_ack_config>
 8011dcc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011dd0:	00061a80 	andeq	r1, r6, r0, lsl #21

08011dd4 <gd32_i2c_set_baudrate(unsigned int)>:
 8011dd4:	4601      	mov	r1, r0
 8011dd6:	2200      	movs	r2, #0
 8011dd8:	4801      	ldr	r0, [pc, #4]	; (8011de0 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8011dda:	f000 bfed 	b.w	8012db8 <i2c_clock_config>
 8011dde:	bf00      	nop
 8011de0:	40005400 	andmi	r5, r0, r0, lsl #8

08011de4 <gd32_i2c_set_address(unsigned char)>:
 8011de4:	4b01      	ldr	r3, [pc, #4]	; (8011dec <gd32_i2c_set_address(unsigned char)+0x8>)
 8011de6:	0040      	lsls	r0, r0, #1
 8011de8:	7018      	strb	r0, [r3, #0]
 8011dea:	4770      	bx	lr
 8011dec:	200097ac 	andcs	r9, r0, ip, lsr #15

08011df0 <gd32_i2c_write(char const*, unsigned int)>:
 8011df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011df2:	4604      	mov	r4, r0
 8011df4:	460f      	mov	r7, r1
 8011df6:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011dfa:	4e2e      	ldr	r6, [pc, #184]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011dfc:	f240 6101 	movw	r1, #1537	; 0x601
 8011e00:	4630      	mov	r0, r6
 8011e02:	f001 f865 	bl	8012ed0 <i2c_flag_get>
 8011e06:	b138      	cbz	r0, 8011e18 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8011e08:	3d01      	subs	r5, #1
 8011e0a:	d1f7      	bne.n	8011dfc <gd32_i2c_write(char const*, unsigned int)+0xc>
 8011e0c:	f7ff ff9c 	bl	8011d48 <_stop() [clone .isra.0]>
 8011e10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011e14:	4240      	negs	r0, r0
 8011e16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e18:	4826      	ldr	r0, [pc, #152]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e1a:	f001 f84a 	bl	8012eb2 <i2c_start_on_bus>
 8011e1e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e22:	4e24      	ldr	r6, [pc, #144]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e24:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8011e28:	4630      	mov	r0, r6
 8011e2a:	f001 f851 	bl	8012ed0 <i2c_flag_get>
 8011e2e:	bb68      	cbnz	r0, 8011e8c <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8011e30:	3d01      	subs	r5, #1
 8011e32:	d1f7      	bne.n	8011e24 <gd32_i2c_write(char const*, unsigned int)+0x34>
 8011e34:	e7ea      	b.n	8011e0c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8011e36:	f240 5101 	movw	r1, #1281	; 0x501
 8011e3a:	481e      	ldr	r0, [pc, #120]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e3c:	f001 f850 	bl	8012ee0 <i2c_flag_clear>
 8011e40:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e44:	4e1b      	ldr	r6, [pc, #108]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e46:	f240 5107 	movw	r1, #1287	; 0x507
 8011e4a:	4630      	mov	r0, r6
 8011e4c:	f001 f840 	bl	8012ed0 <i2c_flag_get>
 8011e50:	2801      	cmp	r0, #1
 8011e52:	d114      	bne.n	8011e7e <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8011e54:	4e17      	ldr	r6, [pc, #92]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e56:	4427      	add	r7, r4
 8011e58:	42a7      	cmp	r7, r4
 8011e5a:	d013      	beq.n	8011e84 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8011e5c:	4630      	mov	r0, r6
 8011e5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011e62:	f001 f830 	bl	8012ec6 <i2c_data_transmit>
 8011e66:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e6a:	f240 5102 	movw	r1, #1282	; 0x502
 8011e6e:	4630      	mov	r0, r6
 8011e70:	f001 f82e 	bl	8012ed0 <i2c_flag_get>
 8011e74:	2800      	cmp	r0, #0
 8011e76:	d1ef      	bne.n	8011e58 <gd32_i2c_write(char const*, unsigned int)+0x68>
 8011e78:	3d01      	subs	r5, #1
 8011e7a:	d1f6      	bne.n	8011e6a <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8011e7c:	e7c6      	b.n	8011e0c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8011e7e:	3d01      	subs	r5, #1
 8011e80:	d1e1      	bne.n	8011e46 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8011e82:	e7c3      	b.n	8011e0c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8011e84:	f7ff ff60 	bl	8011d48 <_stop() [clone .isra.0]>
 8011e88:	2000      	movs	r0, #0
 8011e8a:	e7c3      	b.n	8011e14 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8011e8c:	4b0a      	ldr	r3, [pc, #40]	; (8011eb8 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8011e8e:	f06f 0201 	mvn.w	r2, #1
 8011e92:	7819      	ldrb	r1, [r3, #0]
 8011e94:	4807      	ldr	r0, [pc, #28]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011e96:	f000 ffff 	bl	8012e98 <i2c_master_addressing>
 8011e9a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8011e9e:	4e05      	ldr	r6, [pc, #20]	; (8011eb4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8011ea0:	f240 5101 	movw	r1, #1281	; 0x501
 8011ea4:	4630      	mov	r0, r6
 8011ea6:	f001 f813 	bl	8012ed0 <i2c_flag_get>
 8011eaa:	2800      	cmp	r0, #0
 8011eac:	d1c3      	bne.n	8011e36 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8011eae:	3d01      	subs	r5, #1
 8011eb0:	d1f6      	bne.n	8011ea0 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8011eb2:	e7ab      	b.n	8011e0c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8011eb4:	40005400 	andmi	r5, r0, r0, lsl #8
 8011eb8:	200097ac 	andcs	r9, r0, ip, lsr #15

08011ebc <gd32_i2c_read(char*, unsigned int)>:
 8011ebc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011ec0:	4680      	mov	r8, r0
 8011ec2:	460c      	mov	r4, r1
 8011ec4:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011ec8:	4f49      	ldr	r7, [pc, #292]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011eca:	f240 6101 	movw	r1, #1537	; 0x601
 8011ece:	4638      	mov	r0, r7
 8011ed0:	f000 fffe 	bl	8012ed0 <i2c_flag_get>
 8011ed4:	4605      	mov	r5, r0
 8011ed6:	b128      	cbz	r0, 8011ee4 <gd32_i2c_read(char*, unsigned int)+0x28>
 8011ed8:	3e01      	subs	r6, #1
 8011eda:	d1f6      	bne.n	8011eca <gd32_i2c_read(char*, unsigned int)+0xe>
 8011edc:	f7ff ff34 	bl	8011d48 <_stop() [clone .isra.0]>
 8011ee0:	2504      	movs	r5, #4
 8011ee2:	e082      	b.n	8011fea <gd32_i2c_read(char*, unsigned int)+0x12e>
 8011ee4:	2c02      	cmp	r4, #2
 8011ee6:	d103      	bne.n	8011ef0 <gd32_i2c_read(char*, unsigned int)+0x34>
 8011ee8:	4601      	mov	r1, r0
 8011eea:	4841      	ldr	r0, [pc, #260]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011eec:	f000 ffcb 	bl	8012e86 <i2c_ackpos_config>
 8011ef0:	483f      	ldr	r0, [pc, #252]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011ef2:	f000 ffde 	bl	8012eb2 <i2c_start_on_bus>
 8011ef6:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011efa:	4f3d      	ldr	r7, [pc, #244]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011efc:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8011f00:	4638      	mov	r0, r7
 8011f02:	f000 ffe5 	bl	8012ed0 <i2c_flag_get>
 8011f06:	b910      	cbnz	r0, 8011f0e <gd32_i2c_read(char*, unsigned int)+0x52>
 8011f08:	3e01      	subs	r6, #1
 8011f0a:	d1f7      	bne.n	8011efc <gd32_i2c_read(char*, unsigned int)+0x40>
 8011f0c:	e7e6      	b.n	8011edc <gd32_i2c_read(char*, unsigned int)+0x20>
 8011f0e:	4b39      	ldr	r3, [pc, #228]	; (8011ff4 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8011f10:	2201      	movs	r2, #1
 8011f12:	7819      	ldrb	r1, [r3, #0]
 8011f14:	4836      	ldr	r0, [pc, #216]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f16:	f000 ffbf 	bl	8012e98 <i2c_master_addressing>
 8011f1a:	2c02      	cmp	r4, #2
 8011f1c:	d803      	bhi.n	8011f26 <gd32_i2c_read(char*, unsigned int)+0x6a>
 8011f1e:	2100      	movs	r1, #0
 8011f20:	4833      	ldr	r0, [pc, #204]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f22:	f000 ffa7 	bl	8012e74 <i2c_ack_config>
 8011f26:	f640 76ff 	movw	r6, #4095	; 0xfff
 8011f2a:	4f31      	ldr	r7, [pc, #196]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f2c:	f240 5101 	movw	r1, #1281	; 0x501
 8011f30:	4638      	mov	r0, r7
 8011f32:	f000 ffcd 	bl	8012ed0 <i2c_flag_get>
 8011f36:	b910      	cbnz	r0, 8011f3e <gd32_i2c_read(char*, unsigned int)+0x82>
 8011f38:	3e01      	subs	r6, #1
 8011f3a:	d1f7      	bne.n	8011f2c <gd32_i2c_read(char*, unsigned int)+0x70>
 8011f3c:	e7ce      	b.n	8011edc <gd32_i2c_read(char*, unsigned int)+0x20>
 8011f3e:	f240 5101 	movw	r1, #1281	; 0x501
 8011f42:	482b      	ldr	r0, [pc, #172]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f44:	f000 ffcc 	bl	8012ee0 <i2c_flag_clear>
 8011f48:	2c01      	cmp	r4, #1
 8011f4a:	d102      	bne.n	8011f52 <gd32_i2c_read(char*, unsigned int)+0x96>
 8011f4c:	4828      	ldr	r0, [pc, #160]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f4e:	f000 ffb5 	bl	8012ebc <i2c_stop_on_bus>
 8011f52:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011f56:	4e26      	ldr	r6, [pc, #152]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011f58:	b3ac      	cbz	r4, 8011fc6 <gd32_i2c_read(char*, unsigned int)+0x10a>
 8011f5a:	2c03      	cmp	r4, #3
 8011f5c:	d121      	bne.n	8011fa2 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8011f5e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8011f62:	f240 5102 	movw	r1, #1282	; 0x502
 8011f66:	4630      	mov	r0, r6
 8011f68:	f000 ffb2 	bl	8012ed0 <i2c_flag_get>
 8011f6c:	b918      	cbnz	r0, 8011f76 <gd32_i2c_read(char*, unsigned int)+0xba>
 8011f6e:	f1b9 0901 	subs.w	r9, r9, #1
 8011f72:	d1f6      	bne.n	8011f62 <gd32_i2c_read(char*, unsigned int)+0xa6>
 8011f74:	e7b2      	b.n	8011edc <gd32_i2c_read(char*, unsigned int)+0x20>
 8011f76:	2100      	movs	r1, #0
 8011f78:	4630      	mov	r0, r6
 8011f7a:	f000 ff7b 	bl	8012e74 <i2c_ack_config>
 8011f7e:	f240 5106 	movw	r1, #1286	; 0x506
 8011f82:	4630      	mov	r0, r6
 8011f84:	f000 ffa4 	bl	8012ed0 <i2c_flag_get>
 8011f88:	b138      	cbz	r0, 8011f9a <gd32_i2c_read(char*, unsigned int)+0xde>
 8011f8a:	4630      	mov	r0, r6
 8011f8c:	f000 ff9d 	bl	8012eca <i2c_data_receive>
 8011f90:	f640 77ff 	movw	r7, #4095	; 0xfff
 8011f94:	f808 0b01 	strb.w	r0, [r8], #1
 8011f98:	3c01      	subs	r4, #1
 8011f9a:	3f01      	subs	r7, #1
 8011f9c:	2f00      	cmp	r7, #0
 8011f9e:	dcdb      	bgt.n	8011f58 <gd32_i2c_read(char*, unsigned int)+0x9c>
 8011fa0:	e79c      	b.n	8011edc <gd32_i2c_read(char*, unsigned int)+0x20>
 8011fa2:	2c02      	cmp	r4, #2
 8011fa4:	d1eb      	bne.n	8011f7e <gd32_i2c_read(char*, unsigned int)+0xc2>
 8011fa6:	f640 79ff 	movw	r9, #4095	; 0xfff
 8011faa:	f240 5102 	movw	r1, #1282	; 0x502
 8011fae:	4630      	mov	r0, r6
 8011fb0:	f000 ff8e 	bl	8012ed0 <i2c_flag_get>
 8011fb4:	b918      	cbnz	r0, 8011fbe <gd32_i2c_read(char*, unsigned int)+0x102>
 8011fb6:	f1b9 0901 	subs.w	r9, r9, #1
 8011fba:	d1f6      	bne.n	8011faa <gd32_i2c_read(char*, unsigned int)+0xee>
 8011fbc:	e78e      	b.n	8011edc <gd32_i2c_read(char*, unsigned int)+0x20>
 8011fbe:	4630      	mov	r0, r6
 8011fc0:	f000 ff7c 	bl	8012ebc <i2c_stop_on_bus>
 8011fc4:	e7db      	b.n	8011f7e <gd32_i2c_read(char*, unsigned int)+0xc2>
 8011fc6:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011fca:	4a0b      	ldr	r2, [pc, #44]	; (8011ff8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8011fcc:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8011fd0:	0589      	lsls	r1, r1, #22
 8011fd2:	d502      	bpl.n	8011fda <gd32_i2c_read(char*, unsigned int)+0x11e>
 8011fd4:	3b01      	subs	r3, #1
 8011fd6:	d1f9      	bne.n	8011fcc <gd32_i2c_read(char*, unsigned int)+0x110>
 8011fd8:	e782      	b.n	8011ee0 <gd32_i2c_read(char*, unsigned int)+0x24>
 8011fda:	2101      	movs	r1, #1
 8011fdc:	4804      	ldr	r0, [pc, #16]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011fde:	f000 ff49 	bl	8012e74 <i2c_ack_config>
 8011fe2:	2101      	movs	r1, #1
 8011fe4:	4802      	ldr	r0, [pc, #8]	; (8011ff0 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8011fe6:	f000 ff4e 	bl	8012e86 <i2c_ackpos_config>
 8011fea:	4628      	mov	r0, r5
 8011fec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011ff0:	40005400 	andmi	r5, r0, r0, lsl #8
 8011ff4:	200097ac 	andcs	r9, r0, ip, lsr #15
 8011ff8:	40005000 	andmi	r5, r0, r0

08011ffc <gd32_spi_dma_begin()>:
 8011ffc:	b530      	push	{r4, r5, lr}
 8011ffe:	f240 6002 	movw	r0, #1538	; 0x602
 8012002:	b089      	sub	sp, #36	; 0x24
 8012004:	f7ff fae6 	bl	80115d4 <rcu_periph_clock_enable>
 8012008:	f240 6003 	movw	r0, #1539	; 0x603
 801200c:	f7ff fae2 	bl	80115d4 <rcu_periph_clock_enable>
 8012010:	f240 700f 	movw	r0, #1807	; 0x70f
 8012014:	f7ff fade 	bl	80115d4 <rcu_periph_clock_enable>
 8012018:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801201c:	f7ff fada 	bl	80115d4 <rcu_periph_clock_enable>
 8012020:	2338      	movs	r3, #56	; 0x38
 8012022:	2203      	movs	r2, #3
 8012024:	2118      	movs	r1, #24
 8012026:	4827      	ldr	r0, [pc, #156]	; (80120c4 <gd32_spi_dma_begin()+0xc8>)
 8012028:	f7ff fa44 	bl	80114b4 <gpio_init>
 801202c:	4c26      	ldr	r4, [pc, #152]	; (80120c8 <gd32_spi_dma_begin()+0xcc>)
 801202e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012032:	2203      	movs	r2, #3
 8012034:	2118      	movs	r1, #24
 8012036:	4825      	ldr	r0, [pc, #148]	; (80120cc <gd32_spi_dma_begin()+0xd0>)
 8012038:	f7ff fa3c 	bl	80114b4 <gpio_init>
 801203c:	2101      	movs	r1, #1
 801203e:	4824      	ldr	r0, [pc, #144]	; (80120d0 <gd32_spi_dma_begin()+0xd4>)
 8012040:	f7ff fa8c 	bl	801155c <gpio_pin_remap_config>
 8012044:	4620      	mov	r0, r4
 8012046:	f000 ffca 	bl	8012fde <i2s_disable>
 801204a:	2300      	movs	r3, #0
 801204c:	4620      	mov	r0, r4
 801204e:	461a      	mov	r2, r3
 8012050:	4920      	ldr	r1, [pc, #128]	; (80120d4 <gd32_spi_dma_begin()+0xd8>)
 8012052:	f000 ff67 	bl	8012f24 <i2s_psc_config>
 8012056:	2300      	movs	r3, #0
 8012058:	2210      	movs	r2, #16
 801205a:	f44f 7100 	mov.w	r1, #512	; 0x200
 801205e:	4620      	mov	r0, r4
 8012060:	f000 ff51 	bl	8012f06 <i2s_init>
 8012064:	4620      	mov	r0, r4
 8012066:	f000 ffb5 	bl	8012fd4 <i2s_enable>
 801206a:	f504 34e4 	add.w	r4, r4, #116736	; 0x1c800
 801206e:	f240 5001 	movw	r0, #1281	; 0x501
 8012072:	f7ff faaf 	bl	80115d4 <rcu_periph_clock_enable>
 8012076:	4620      	mov	r0, r4
 8012078:	2101      	movs	r1, #1
 801207a:	f000 fa69 	bl	8012550 <dma_deinit>
 801207e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012082:	2501      	movs	r5, #1
 8012084:	9304      	str	r3, [sp, #16]
 8012086:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801208a:	f44f 7380 	mov.w	r3, #256	; 0x100
 801208e:	4912      	ldr	r1, [pc, #72]	; (80120d8 <gd32_spi_dma_begin()+0xdc>)
 8012090:	4620      	mov	r0, r4
 8012092:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8012096:	9206      	str	r2, [sp, #24]
 8012098:	4629      	mov	r1, r5
 801209a:	aa01      	add	r2, sp, #4
 801209c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80120a0:	f88d 501e 	strb.w	r5, [sp, #30]
 80120a4:	f000 fa70 	bl	8012588 <dma_init>
 80120a8:	4629      	mov	r1, r5
 80120aa:	4620      	mov	r0, r4
 80120ac:	f000 faa6 	bl	80125fc <dma_circulation_disable>
 80120b0:	4629      	mov	r1, r5
 80120b2:	4620      	mov	r0, r4
 80120b4:	f000 fab2 	bl	801261c <dma_memory_to_memory_disable>
 80120b8:	2200      	movs	r2, #0
 80120ba:	4b08      	ldr	r3, [pc, #32]	; (80120dc <gd32_spi_dma_begin()+0xe0>)
 80120bc:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 80120c0:	b009      	add	sp, #36	; 0x24
 80120c2:	bd30      	pop	{r4, r5, pc}
 80120c4:	40010c00 	andmi	r0, r1, r0, lsl #24
 80120c8:	40003c00 	andmi	r3, r0, r0, lsl #24
 80120cc:	40010800 	andmi	r0, r1, r0, lsl #16
 80120d0:	00300400 	eorseq	r0, r0, r0, lsl #8
 80120d4:	00030d40 	andeq	r0, r3, r0, asr #26
 80120d8:	40003c0c 	andmi	r3, r0, ip, lsl #24
 80120dc:	40020000 	andmi	r0, r2, r0

080120e0 <gd32_spi_dma_set_speed_hz(unsigned int)>:
 80120e0:	b538      	push	{r3, r4, r5, lr}
 80120e2:	4c08      	ldr	r4, [pc, #32]	; (8012104 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 80120e4:	4605      	mov	r5, r0
 80120e6:	4620      	mov	r0, r4
 80120e8:	f000 ff79 	bl	8012fde <i2s_disable>
 80120ec:	2300      	movs	r3, #0
 80120ee:	4620      	mov	r0, r4
 80120f0:	461a      	mov	r2, r3
 80120f2:	0969      	lsrs	r1, r5, #5
 80120f4:	f000 ff16 	bl	8012f24 <i2s_psc_config>
 80120f8:	4620      	mov	r0, r4
 80120fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80120fe:	f000 bf69 	b.w	8012fd4 <i2s_enable>
 8012102:	bf00      	nop
 8012104:	40003c00 	andmi	r3, r0, r0, lsl #24

08012108 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 8012108:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801210c:	6003      	str	r3, [r0, #0]
 801210e:	4801      	ldr	r0, [pc, #4]	; (8012114 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 8012110:	4770      	bx	lr
 8012112:	bf00      	nop
 8012114:	200097b0 			; <UNDEFINED> instruction: 0x200097b0

08012118 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 8012118:	4a0a      	ldr	r2, [pc, #40]	; (8012144 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 801211a:	3101      	adds	r1, #1
 801211c:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 8012120:	f3c1 014f 	ubfx	r1, r1, #1, #16
 8012124:	f023 0301 	bic.w	r3, r3, #1
 8012128:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 801212c:	f043 0301 	orr.w	r3, r3, #1
 8012130:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 8012134:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 8012138:	4803      	ldr	r0, [pc, #12]	; (8012148 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 801213a:	2100      	movs	r1, #0
 801213c:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8012140:	f000 bf52 	b.w	8012fe8 <spi_dma_enable>
 8012144:	40020000 	andmi	r0, r2, r0
 8012148:	40003c00 	andmi	r3, r0, r0, lsl #24

0801214c <gd32_spi_dma_tx_is_active()>:
 801214c:	4b03      	ldr	r3, [pc, #12]	; (801215c <gd32_spi_dma_tx_is_active()+0x10>)
 801214e:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 8012152:	3800      	subs	r0, #0
 8012154:	bf18      	it	ne
 8012156:	2001      	movne	r0, #1
 8012158:	4770      	bx	lr
 801215a:	bf00      	nop
 801215c:	40020000 	andmi	r0, r2, r0

08012160 <gd32_uart_begin>:
 8012160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012162:	4604      	mov	r4, r0
 8012164:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012168:	461d      	mov	r5, r3
 801216a:	460f      	mov	r7, r1
 801216c:	4616      	mov	r6, r2
 801216e:	f7ff fa31 	bl	80115d4 <rcu_periph_clock_enable>
 8012172:	4b5c      	ldr	r3, [pc, #368]	; (80122e4 <gd32_uart_begin+0x184>)
 8012174:	429c      	cmp	r4, r3
 8012176:	f000 8083 	beq.w	8012280 <gd32_uart_begin+0x120>
 801217a:	d857      	bhi.n	801222c <gd32_uart_begin+0xcc>
 801217c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012180:	429c      	cmp	r4, r3
 8012182:	d06d      	beq.n	8012260 <gd32_uart_begin+0x100>
 8012184:	f240 7012 	movw	r0, #1810	; 0x712
 8012188:	f7ff fa24 	bl	80115d4 <rcu_periph_clock_enable>
 801218c:	f240 6004 	movw	r0, #1540	; 0x604
 8012190:	f7ff fa20 	bl	80115d4 <rcu_periph_clock_enable>
 8012194:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012198:	2203      	movs	r2, #3
 801219a:	2118      	movs	r1, #24
 801219c:	4852      	ldr	r0, [pc, #328]	; (80122e8 <gd32_uart_begin+0x188>)
 801219e:	f7ff f989 	bl	80114b4 <gpio_init>
 80121a2:	2104      	movs	r1, #4
 80121a4:	4850      	ldr	r0, [pc, #320]	; (80122e8 <gd32_uart_begin+0x188>)
 80121a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80121aa:	2203      	movs	r2, #3
 80121ac:	f7ff f982 	bl	80114b4 <gpio_init>
 80121b0:	2101      	movs	r1, #1
 80121b2:	484e      	ldr	r0, [pc, #312]	; (80122ec <gd32_uart_begin+0x18c>)
 80121b4:	f7ff f9d2 	bl	801155c <gpio_pin_remap_config>
 80121b8:	4620      	mov	r0, r4
 80121ba:	f7ff fc17 	bl	80119ec <usart_deinit>
 80121be:	68e3      	ldr	r3, [r4, #12]
 80121c0:	4639      	mov	r1, r7
 80121c2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80121c6:	60e3      	str	r3, [r4, #12]
 80121c8:	4620      	mov	r0, r4
 80121ca:	f7ff fc4f 	bl	8011a6c <usart_baudrate_set>
 80121ce:	2e09      	cmp	r6, #9
 80121d0:	bf0c      	ite	eq
 80121d2:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 80121d6:	2100      	movne	r1, #0
 80121d8:	4620      	mov	r0, r4
 80121da:	f7ff fc77 	bl	8011acc <usart_word_length_set>
 80121de:	9b06      	ldr	r3, [sp, #24]
 80121e0:	4620      	mov	r0, r4
 80121e2:	2b02      	cmp	r3, #2
 80121e4:	bf0c      	ite	eq
 80121e6:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 80121ea:	2100      	movne	r1, #0
 80121ec:	f7ff fc76 	bl	8011adc <usart_stop_bit_set>
 80121f0:	2d01      	cmp	r5, #1
 80121f2:	d072      	beq.n	80122da <gd32_uart_begin+0x17a>
 80121f4:	2d02      	cmp	r5, #2
 80121f6:	d173      	bne.n	80122e0 <gd32_uart_begin+0x180>
 80121f8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80121fc:	4620      	mov	r0, r4
 80121fe:	f7ff fc5d 	bl	8011abc <usart_parity_config>
 8012202:	2100      	movs	r1, #0
 8012204:	4620      	mov	r0, r4
 8012206:	f7ff fc7d 	bl	8011b04 <usart_hardware_flow_rts_config>
 801220a:	2100      	movs	r1, #0
 801220c:	4620      	mov	r0, r4
 801220e:	f7ff fc7f 	bl	8011b10 <usart_hardware_flow_cts_config>
 8012212:	2104      	movs	r1, #4
 8012214:	4620      	mov	r0, r4
 8012216:	f7ff fc6f 	bl	8011af8 <usart_receive_config>
 801221a:	2108      	movs	r1, #8
 801221c:	4620      	mov	r0, r4
 801221e:	f7ff fc65 	bl	8011aec <usart_transmit_config>
 8012222:	68e3      	ldr	r3, [r4, #12]
 8012224:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012228:	60e3      	str	r3, [r4, #12]
 801222a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801222c:	4b30      	ldr	r3, [pc, #192]	; (80122f0 <gd32_uart_begin+0x190>)
 801222e:	429c      	cmp	r4, r3
 8012230:	d03b      	beq.n	80122aa <gd32_uart_begin+0x14a>
 8012232:	f240 600e 	movw	r0, #1550	; 0x60e
 8012236:	f7ff f9cd 	bl	80115d4 <rcu_periph_clock_enable>
 801223a:	f240 6002 	movw	r0, #1538	; 0x602
 801223e:	f7ff f9c9 	bl	80115d4 <rcu_periph_clock_enable>
 8012242:	f44f 7300 	mov.w	r3, #512	; 0x200
 8012246:	2203      	movs	r2, #3
 8012248:	2118      	movs	r1, #24
 801224a:	482a      	ldr	r0, [pc, #168]	; (80122f4 <gd32_uart_begin+0x194>)
 801224c:	f7ff f932 	bl	80114b4 <gpio_init>
 8012250:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012254:	2203      	movs	r2, #3
 8012256:	2104      	movs	r1, #4
 8012258:	4826      	ldr	r0, [pc, #152]	; (80122f4 <gd32_uart_begin+0x194>)
 801225a:	f7ff f92b 	bl	80114b4 <gpio_init>
 801225e:	e7ab      	b.n	80121b8 <gd32_uart_begin+0x58>
 8012260:	f240 7011 	movw	r0, #1809	; 0x711
 8012264:	f7ff f9b6 	bl	80115d4 <rcu_periph_clock_enable>
 8012268:	f240 6002 	movw	r0, #1538	; 0x602
 801226c:	f7ff f9b2 	bl	80115d4 <rcu_periph_clock_enable>
 8012270:	2304      	movs	r3, #4
 8012272:	2203      	movs	r2, #3
 8012274:	2118      	movs	r1, #24
 8012276:	481f      	ldr	r0, [pc, #124]	; (80122f4 <gd32_uart_begin+0x194>)
 8012278:	f7ff f91c 	bl	80114b4 <gpio_init>
 801227c:	2308      	movs	r3, #8
 801227e:	e7e9      	b.n	8012254 <gd32_uart_begin+0xf4>
 8012280:	f240 7013 	movw	r0, #1811	; 0x713
 8012284:	f7ff f9a6 	bl	80115d4 <rcu_periph_clock_enable>
 8012288:	f240 6004 	movw	r0, #1540	; 0x604
 801228c:	f7ff f9a2 	bl	80115d4 <rcu_periph_clock_enable>
 8012290:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012294:	2203      	movs	r2, #3
 8012296:	2118      	movs	r1, #24
 8012298:	4813      	ldr	r0, [pc, #76]	; (80122e8 <gd32_uart_begin+0x188>)
 801229a:	f7ff f90b 	bl	80114b4 <gpio_init>
 801229e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80122a2:	2203      	movs	r2, #3
 80122a4:	2104      	movs	r1, #4
 80122a6:	4810      	ldr	r0, [pc, #64]	; (80122e8 <gd32_uart_begin+0x188>)
 80122a8:	e7d7      	b.n	801225a <gd32_uart_begin+0xfa>
 80122aa:	f240 7014 	movw	r0, #1812	; 0x714
 80122ae:	f7ff f991 	bl	80115d4 <rcu_periph_clock_enable>
 80122b2:	f240 6004 	movw	r0, #1540	; 0x604
 80122b6:	f7ff f98d 	bl	80115d4 <rcu_periph_clock_enable>
 80122ba:	f240 6005 	movw	r0, #1541	; 0x605
 80122be:	f7ff f989 	bl	80115d4 <rcu_periph_clock_enable>
 80122c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80122c6:	2203      	movs	r2, #3
 80122c8:	2118      	movs	r1, #24
 80122ca:	4807      	ldr	r0, [pc, #28]	; (80122e8 <gd32_uart_begin+0x188>)
 80122cc:	f7ff f8f2 	bl	80114b4 <gpio_init>
 80122d0:	2304      	movs	r3, #4
 80122d2:	2203      	movs	r2, #3
 80122d4:	4619      	mov	r1, r3
 80122d6:	4808      	ldr	r0, [pc, #32]	; (80122f8 <gd32_uart_begin+0x198>)
 80122d8:	e7bf      	b.n	801225a <gd32_uart_begin+0xfa>
 80122da:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80122de:	e78d      	b.n	80121fc <gd32_uart_begin+0x9c>
 80122e0:	2100      	movs	r1, #0
 80122e2:	e78b      	b.n	80121fc <gd32_uart_begin+0x9c>
 80122e4:	40004c00 	andmi	r4, r0, r0, lsl #24
 80122e8:	40011000 	andmi	r1, r1, r0
 80122ec:	00140010 	andseq	r0, r4, r0, lsl r0
 80122f0:	40005000 	andmi	r5, r0, r0
 80122f4:	40010800 	andmi	r0, r1, r0, lsl #16
 80122f8:	40011400 	andmi	r1, r1, r0, lsl #8

080122fc <micros_init()>:
 80122fc:	4770      	bx	lr
	...

08012300 <udelay_init()>:
 8012300:	4a07      	ldr	r2, [pc, #28]	; (8012320 <udelay_init()+0x20>)
 8012302:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8012306:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801230a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 801230e:	2200      	movs	r2, #0
 8012310:	4b04      	ldr	r3, [pc, #16]	; (8012324 <udelay_init()+0x24>)
 8012312:	605a      	str	r2, [r3, #4]
 8012314:	681a      	ldr	r2, [r3, #0]
 8012316:	f042 0201 	orr.w	r2, r2, #1
 801231a:	601a      	str	r2, [r3, #0]
 801231c:	4770      	bx	lr
 801231e:	bf00      	nop
 8012320:	e000ed00 	and	lr, r0, r0, lsl #26
 8012324:	e0001000 	and	r1, r0, r0

08012328 <udelay(unsigned int, unsigned int)>:
 8012328:	236c      	movs	r3, #108	; 0x6c
 801232a:	b510      	push	{r4, lr}
 801232c:	4358      	muls	r0, r3
 801232e:	b909      	cbnz	r1, 8012334 <udelay(unsigned int, unsigned int)+0xc>
 8012330:	4b08      	ldr	r3, [pc, #32]	; (8012354 <udelay(unsigned int, unsigned int)+0x2c>)
 8012332:	6859      	ldr	r1, [r3, #4]
 8012334:	2300      	movs	r3, #0
 8012336:	4c07      	ldr	r4, [pc, #28]	; (8012354 <udelay(unsigned int, unsigned int)+0x2c>)
 8012338:	6862      	ldr	r2, [r4, #4]
 801233a:	4291      	cmp	r1, r2
 801233c:	d0fc      	beq.n	8012338 <udelay(unsigned int, unsigned int)+0x10>
 801233e:	bf28      	it	cs
 8012340:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8012344:	1a5b      	subs	r3, r3, r1
 8012346:	4413      	add	r3, r2
 8012348:	4283      	cmp	r3, r0
 801234a:	d300      	bcc.n	801234e <udelay(unsigned int, unsigned int)+0x26>
 801234c:	bd10      	pop	{r4, pc}
 801234e:	4611      	mov	r1, r2
 8012350:	e7f2      	b.n	8012338 <udelay(unsigned int, unsigned int)+0x10>
 8012352:	bf00      	nop
 8012354:	e0001000 	and	r1, r0, r0

08012358 <mac_address_get>:
 8012358:	2102      	movs	r1, #2
 801235a:	4a07      	ldr	r2, [pc, #28]	; (8012378 <mac_address_get+0x20>)
 801235c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8012360:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8012364:	7001      	strb	r1, [r0, #0]
 8012366:	7042      	strb	r2, [r0, #1]
 8012368:	0e1a      	lsrs	r2, r3, #24
 801236a:	7082      	strb	r2, [r0, #2]
 801236c:	0c1a      	lsrs	r2, r3, #16
 801236e:	70c2      	strb	r2, [r0, #3]
 8012370:	0a1a      	lsrs	r2, r3, #8
 8012372:	7102      	strb	r2, [r0, #4]
 8012374:	7143      	strb	r3, [r0, #5]
 8012376:	4770      	bx	lr
 8012378:	1ffff000 	svcne	0x00fff000

0801237c <adc_mode_config>:
 801237c:	4b06      	ldr	r3, [pc, #24]	; (8012398 <adc_mode_config+0x1c>)
 801237e:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8012382:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8012386:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 801238a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801238e:	4302      	orrs	r2, r0
 8012390:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8012394:	4770      	bx	lr
 8012396:	bf00      	nop
 8012398:	40012000 	andmi	r2, r1, r0

0801239c <adc_special_function_config>:
 801239c:	b510      	push	{r4, lr}
 801239e:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80123a2:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80123a6:	f001 0102 	and.w	r1, r1, #2
 80123aa:	b17a      	cbz	r2, 80123cc <adc_special_function_config+0x30>
 80123ac:	b11b      	cbz	r3, 80123b6 <adc_special_function_config+0x1a>
 80123ae:	6843      	ldr	r3, [r0, #4]
 80123b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80123b4:	6043      	str	r3, [r0, #4]
 80123b6:	b11c      	cbz	r4, 80123c0 <adc_special_function_config+0x24>
 80123b8:	6843      	ldr	r3, [r0, #4]
 80123ba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80123be:	6043      	str	r3, [r0, #4]
 80123c0:	b119      	cbz	r1, 80123ca <adc_special_function_config+0x2e>
 80123c2:	6883      	ldr	r3, [r0, #8]
 80123c4:	f043 0302 	orr.w	r3, r3, #2
 80123c8:	6083      	str	r3, [r0, #8]
 80123ca:	bd10      	pop	{r4, pc}
 80123cc:	b11b      	cbz	r3, 80123d6 <adc_special_function_config+0x3a>
 80123ce:	6843      	ldr	r3, [r0, #4]
 80123d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80123d4:	6043      	str	r3, [r0, #4]
 80123d6:	b11c      	cbz	r4, 80123e0 <adc_special_function_config+0x44>
 80123d8:	6843      	ldr	r3, [r0, #4]
 80123da:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80123de:	6043      	str	r3, [r0, #4]
 80123e0:	2900      	cmp	r1, #0
 80123e2:	d0f2      	beq.n	80123ca <adc_special_function_config+0x2e>
 80123e4:	6883      	ldr	r3, [r0, #8]
 80123e6:	f023 0302 	bic.w	r3, r3, #2
 80123ea:	e7ed      	b.n	80123c8 <adc_special_function_config+0x2c>

080123ec <adc_data_alignment_config>:
 80123ec:	6883      	ldr	r3, [r0, #8]
 80123ee:	b119      	cbz	r1, 80123f8 <adc_data_alignment_config+0xc>
 80123f0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80123f4:	6083      	str	r3, [r0, #8]
 80123f6:	4770      	bx	lr
 80123f8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80123fc:	e7fa      	b.n	80123f4 <adc_data_alignment_config+0x8>

080123fe <adc_enable>:
 80123fe:	6883      	ldr	r3, [r0, #8]
 8012400:	07db      	lsls	r3, r3, #31
 8012402:	bf5e      	ittt	pl
 8012404:	6883      	ldrpl	r3, [r0, #8]
 8012406:	f043 0301 	orrpl.w	r3, r3, #1
 801240a:	6083      	strpl	r3, [r0, #8]
 801240c:	4770      	bx	lr

0801240e <adc_calibration_enable>:
 801240e:	6883      	ldr	r3, [r0, #8]
 8012410:	f100 0208 	add.w	r2, r0, #8
 8012414:	f043 0308 	orr.w	r3, r3, #8
 8012418:	6083      	str	r3, [r0, #8]
 801241a:	6813      	ldr	r3, [r2, #0]
 801241c:	0719      	lsls	r1, r3, #28
 801241e:	d4fc      	bmi.n	801241a <adc_calibration_enable+0xc>
 8012420:	6883      	ldr	r3, [r0, #8]
 8012422:	f043 0304 	orr.w	r3, r3, #4
 8012426:	6083      	str	r3, [r0, #8]
 8012428:	6813      	ldr	r3, [r2, #0]
 801242a:	075b      	lsls	r3, r3, #29
 801242c:	d4fc      	bmi.n	8012428 <adc_calibration_enable+0x1a>
 801242e:	4770      	bx	lr

08012430 <adc_tempsensor_vrefint_enable>:
 8012430:	4a03      	ldr	r2, [pc, #12]	; (8012440 <adc_tempsensor_vrefint_enable+0x10>)
 8012432:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8012436:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801243a:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 801243e:	4770      	bx	lr
 8012440:	40012000 	andmi	r2, r1, r0

08012444 <adc_channel_length_config>:
 8012444:	2901      	cmp	r1, #1
 8012446:	d002      	beq.n	801244e <adc_channel_length_config+0xa>
 8012448:	2902      	cmp	r1, #2
 801244a:	d00c      	beq.n	8012466 <adc_channel_length_config+0x22>
 801244c:	4770      	bx	lr
 801244e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012450:	3a01      	subs	r2, #1
 8012452:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8012456:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012458:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801245a:	0512      	lsls	r2, r2, #20
 801245c:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8012460:	431a      	orrs	r2, r3
 8012462:	62c2      	str	r2, [r0, #44]	; 0x2c
 8012464:	4770      	bx	lr
 8012466:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012468:	3a01      	subs	r2, #1
 801246a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801246e:	6383      	str	r3, [r0, #56]	; 0x38
 8012470:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012472:	0512      	lsls	r2, r2, #20
 8012474:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8012478:	431a      	orrs	r2, r3
 801247a:	6382      	str	r2, [r0, #56]	; 0x38
 801247c:	4770      	bx	lr

0801247e <adc_inserted_channel_config>:
 801247e:	b530      	push	{r4, r5, lr}
 8012480:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8012482:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012484:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8012488:	1a61      	subs	r1, r4, r1
 801248a:	f06f 0404 	mvn.w	r4, #4
 801248e:	4361      	muls	r1, r4
 8012490:	241f      	movs	r4, #31
 8012492:	310f      	adds	r1, #15
 8012494:	408c      	lsls	r4, r1
 8012496:	ea25 0504 	bic.w	r5, r5, r4
 801249a:	fa02 f101 	lsl.w	r1, r2, r1
 801249e:	4329      	orrs	r1, r5
 80124a0:	2a09      	cmp	r2, #9
 80124a2:	6381      	str	r1, [r0, #56]	; 0x38
 80124a4:	d80b      	bhi.n	80124be <adc_inserted_channel_config+0x40>
 80124a6:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 80124aa:	2207      	movs	r2, #7
 80124ac:	6904      	ldr	r4, [r0, #16]
 80124ae:	408a      	lsls	r2, r1
 80124b0:	ea24 0402 	bic.w	r4, r4, r2
 80124b4:	fa03 f201 	lsl.w	r2, r3, r1
 80124b8:	4322      	orrs	r2, r4
 80124ba:	6102      	str	r2, [r0, #16]
 80124bc:	bd30      	pop	{r4, r5, pc}
 80124be:	2a11      	cmp	r2, #17
 80124c0:	d8fc      	bhi.n	80124bc <adc_inserted_channel_config+0x3e>
 80124c2:	2407      	movs	r4, #7
 80124c4:	3a0a      	subs	r2, #10
 80124c6:	68c1      	ldr	r1, [r0, #12]
 80124c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80124cc:	4094      	lsls	r4, r2
 80124ce:	ea21 0104 	bic.w	r1, r1, r4
 80124d2:	fa03 f202 	lsl.w	r2, r3, r2
 80124d6:	430a      	orrs	r2, r1
 80124d8:	60c2      	str	r2, [r0, #12]
 80124da:	e7ef      	b.n	80124bc <adc_inserted_channel_config+0x3e>

080124dc <adc_external_trigger_source_config>:
 80124dc:	2901      	cmp	r1, #1
 80124de:	d002      	beq.n	80124e6 <adc_external_trigger_source_config+0xa>
 80124e0:	2902      	cmp	r1, #2
 80124e2:	d008      	beq.n	80124f6 <adc_external_trigger_source_config+0x1a>
 80124e4:	4770      	bx	lr
 80124e6:	6883      	ldr	r3, [r0, #8]
 80124e8:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80124ec:	6083      	str	r3, [r0, #8]
 80124ee:	6883      	ldr	r3, [r0, #8]
 80124f0:	431a      	orrs	r2, r3
 80124f2:	6082      	str	r2, [r0, #8]
 80124f4:	4770      	bx	lr
 80124f6:	6883      	ldr	r3, [r0, #8]
 80124f8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80124fc:	e7f6      	b.n	80124ec <adc_external_trigger_source_config+0x10>

080124fe <adc_external_trigger_config>:
 80124fe:	f001 0301 	and.w	r3, r1, #1
 8012502:	f001 0102 	and.w	r1, r1, #2
 8012506:	b152      	cbz	r2, 801251e <adc_external_trigger_config+0x20>
 8012508:	b11b      	cbz	r3, 8012512 <adc_external_trigger_config+0x14>
 801250a:	6883      	ldr	r3, [r0, #8]
 801250c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8012510:	6083      	str	r3, [r0, #8]
 8012512:	b119      	cbz	r1, 801251c <adc_external_trigger_config+0x1e>
 8012514:	6883      	ldr	r3, [r0, #8]
 8012516:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801251a:	6083      	str	r3, [r0, #8]
 801251c:	4770      	bx	lr
 801251e:	b11b      	cbz	r3, 8012528 <adc_external_trigger_config+0x2a>
 8012520:	6883      	ldr	r3, [r0, #8]
 8012522:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8012526:	6083      	str	r3, [r0, #8]
 8012528:	2900      	cmp	r1, #0
 801252a:	d0f7      	beq.n	801251c <adc_external_trigger_config+0x1e>
 801252c:	6883      	ldr	r3, [r0, #8]
 801252e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8012532:	e7f2      	b.n	801251a <adc_external_trigger_config+0x1c>

08012534 <adc_software_trigger_enable>:
 8012534:	07ca      	lsls	r2, r1, #31
 8012536:	bf42      	ittt	mi
 8012538:	6883      	ldrmi	r3, [r0, #8]
 801253a:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 801253e:	6083      	strmi	r3, [r0, #8]
 8012540:	078b      	lsls	r3, r1, #30
 8012542:	bf42      	ittt	mi
 8012544:	6883      	ldrmi	r3, [r0, #8]
 8012546:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801254a:	6083      	strmi	r3, [r0, #8]
 801254c:	4770      	bx	lr
	...

08012550 <dma_deinit>:
 8012550:	4b0c      	ldr	r3, [pc, #48]	; (8012584 <dma_deinit+0x34>)
 8012552:	4298      	cmp	r0, r3
 8012554:	d102      	bne.n	801255c <dma_deinit+0xc>
 8012556:	2904      	cmp	r1, #4
 8012558:	d900      	bls.n	801255c <dma_deinit+0xc>
 801255a:	e7fe      	b.n	801255a <dma_deinit+0xa>
 801255c:	2314      	movs	r3, #20
 801255e:	fb03 0301 	mla	r3, r3, r1, r0
 8012562:	689a      	ldr	r2, [r3, #8]
 8012564:	0089      	lsls	r1, r1, #2
 8012566:	f022 0201 	bic.w	r2, r2, #1
 801256a:	609a      	str	r2, [r3, #8]
 801256c:	2200      	movs	r2, #0
 801256e:	609a      	str	r2, [r3, #8]
 8012570:	60da      	str	r2, [r3, #12]
 8012572:	611a      	str	r2, [r3, #16]
 8012574:	615a      	str	r2, [r3, #20]
 8012576:	230f      	movs	r3, #15
 8012578:	6842      	ldr	r2, [r0, #4]
 801257a:	fa03 f101 	lsl.w	r1, r3, r1
 801257e:	4311      	orrs	r1, r2
 8012580:	6041      	str	r1, [r0, #4]
 8012582:	4770      	bx	lr
 8012584:	40020400 	andmi	r0, r2, r0, lsl #8

08012588 <dma_init>:
 8012588:	4b1b      	ldr	r3, [pc, #108]	; (80125f8 <dma_init+0x70>)
 801258a:	b510      	push	{r4, lr}
 801258c:	4298      	cmp	r0, r3
 801258e:	d102      	bne.n	8012596 <dma_init+0xe>
 8012590:	2904      	cmp	r1, #4
 8012592:	d900      	bls.n	8012596 <dma_init+0xe>
 8012594:	e7fe      	b.n	8012594 <dma_init+0xc>
 8012596:	2314      	movs	r3, #20
 8012598:	fb03 0101 	mla	r1, r3, r1, r0
 801259c:	6813      	ldr	r3, [r2, #0]
 801259e:	610b      	str	r3, [r1, #16]
 80125a0:	6893      	ldr	r3, [r2, #8]
 80125a2:	614b      	str	r3, [r1, #20]
 80125a4:	8a13      	ldrh	r3, [r2, #16]
 80125a6:	60cb      	str	r3, [r1, #12]
 80125a8:	68d4      	ldr	r4, [r2, #12]
 80125aa:	6853      	ldr	r3, [r2, #4]
 80125ac:	6888      	ldr	r0, [r1, #8]
 80125ae:	4323      	orrs	r3, r4
 80125b0:	6954      	ldr	r4, [r2, #20]
 80125b2:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 80125b6:	4323      	orrs	r3, r4
 80125b8:	4303      	orrs	r3, r0
 80125ba:	608b      	str	r3, [r1, #8]
 80125bc:	7e13      	ldrb	r3, [r2, #24]
 80125be:	2b01      	cmp	r3, #1
 80125c0:	688b      	ldr	r3, [r1, #8]
 80125c2:	bf0c      	ite	eq
 80125c4:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 80125c8:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 80125cc:	608b      	str	r3, [r1, #8]
 80125ce:	7e53      	ldrb	r3, [r2, #25]
 80125d0:	2b01      	cmp	r3, #1
 80125d2:	688b      	ldr	r3, [r1, #8]
 80125d4:	bf0c      	ite	eq
 80125d6:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 80125da:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 80125de:	608b      	str	r3, [r1, #8]
 80125e0:	7e93      	ldrb	r3, [r2, #26]
 80125e2:	b923      	cbnz	r3, 80125ee <dma_init+0x66>
 80125e4:	688b      	ldr	r3, [r1, #8]
 80125e6:	f023 0310 	bic.w	r3, r3, #16
 80125ea:	608b      	str	r3, [r1, #8]
 80125ec:	bd10      	pop	{r4, pc}
 80125ee:	688b      	ldr	r3, [r1, #8]
 80125f0:	f043 0310 	orr.w	r3, r3, #16
 80125f4:	e7f9      	b.n	80125ea <dma_init+0x62>
 80125f6:	bf00      	nop
 80125f8:	40020400 	andmi	r0, r2, r0, lsl #8

080125fc <dma_circulation_disable>:
 80125fc:	4b06      	ldr	r3, [pc, #24]	; (8012618 <dma_circulation_disable+0x1c>)
 80125fe:	4298      	cmp	r0, r3
 8012600:	d102      	bne.n	8012608 <dma_circulation_disable+0xc>
 8012602:	2904      	cmp	r1, #4
 8012604:	d900      	bls.n	8012608 <dma_circulation_disable+0xc>
 8012606:	e7fe      	b.n	8012606 <dma_circulation_disable+0xa>
 8012608:	2314      	movs	r3, #20
 801260a:	4359      	muls	r1, r3
 801260c:	3008      	adds	r0, #8
 801260e:	580b      	ldr	r3, [r1, r0]
 8012610:	f023 0320 	bic.w	r3, r3, #32
 8012614:	500b      	str	r3, [r1, r0]
 8012616:	4770      	bx	lr
 8012618:	40020400 	andmi	r0, r2, r0, lsl #8

0801261c <dma_memory_to_memory_disable>:
 801261c:	4b06      	ldr	r3, [pc, #24]	; (8012638 <dma_memory_to_memory_disable+0x1c>)
 801261e:	4298      	cmp	r0, r3
 8012620:	d102      	bne.n	8012628 <dma_memory_to_memory_disable+0xc>
 8012622:	2904      	cmp	r1, #4
 8012624:	d900      	bls.n	8012628 <dma_memory_to_memory_disable+0xc>
 8012626:	e7fe      	b.n	8012626 <dma_memory_to_memory_disable+0xa>
 8012628:	2314      	movs	r3, #20
 801262a:	4359      	muls	r1, r3
 801262c:	3008      	adds	r0, #8
 801262e:	580b      	ldr	r3, [r1, r0]
 8012630:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012634:	500b      	str	r3, [r1, r0]
 8012636:	4770      	bx	lr
 8012638:	40020400 	andmi	r0, r2, r0, lsl #8

0801263c <enet_delay>:
 801263c:	2300      	movs	r3, #0
 801263e:	b082      	sub	sp, #8
 8012640:	9301      	str	r3, [sp, #4]
 8012642:	9001      	str	r0, [sp, #4]
 8012644:	9b01      	ldr	r3, [sp, #4]
 8012646:	b90b      	cbnz	r3, 801264c <enet_delay+0x10>
 8012648:	b002      	add	sp, #8
 801264a:	4770      	bx	lr
 801264c:	9b01      	ldr	r3, [sp, #4]
 801264e:	3b01      	subs	r3, #1
 8012650:	9301      	str	r3, [sp, #4]
 8012652:	e7f7      	b.n	8012644 <enet_delay+0x8>

08012654 <enet_software_reset>:
 8012654:	4b07      	ldr	r3, [pc, #28]	; (8012674 <enet_software_reset+0x20>)
 8012656:	681a      	ldr	r2, [r3, #0]
 8012658:	f042 0201 	orr.w	r2, r2, #1
 801265c:	601a      	str	r2, [r3, #0]
 801265e:	4a06      	ldr	r2, [pc, #24]	; (8012678 <enet_software_reset+0x24>)
 8012660:	6819      	ldr	r1, [r3, #0]
 8012662:	07c9      	lsls	r1, r1, #31
 8012664:	d501      	bpl.n	801266a <enet_software_reset+0x16>
 8012666:	3a01      	subs	r2, #1
 8012668:	d1fa      	bne.n	8012660 <enet_software_reset+0xc>
 801266a:	6818      	ldr	r0, [r3, #0]
 801266c:	43c0      	mvns	r0, r0
 801266e:	f000 0001 	and.w	r0, r0, #1
 8012672:	4770      	bx	lr
 8012674:	40029000 	andmi	r9, r2, r0
 8012678:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801267c <enet_descriptors_chain_init>:
 801267c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8012680:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012682:	4a19      	ldr	r2, [pc, #100]	; (80126e8 <enet_descriptors_chain_init+0x6c>)
 8012684:	d125      	bne.n	80126d2 <enet_descriptors_chain_init+0x56>
 8012686:	2500      	movs	r5, #0
 8012688:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801268c:	2002      	movs	r0, #2
 801268e:	4b17      	ldr	r3, [pc, #92]	; (80126ec <enet_descriptors_chain_init+0x70>)
 8012690:	4c17      	ldr	r4, [pc, #92]	; (80126f0 <enet_descriptors_chain_init+0x74>)
 8012692:	6113      	str	r3, [r2, #16]
 8012694:	4a17      	ldr	r2, [pc, #92]	; (80126f4 <enet_descriptors_chain_init+0x78>)
 8012696:	6013      	str	r3, [r2, #0]
 8012698:	2200      	movs	r2, #0
 801269a:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801269e:	4916      	ldr	r1, [pc, #88]	; (80126f8 <enet_descriptors_chain_init+0x7c>)
 80126a0:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80126a4:	600a      	str	r2, [r1, #0]
 80126a6:	4915      	ldr	r1, [pc, #84]	; (80126fc <enet_descriptors_chain_init+0x80>)
 80126a8:	600a      	str	r2, [r1, #0]
 80126aa:	f103 0110 	add.w	r1, r3, #16
 80126ae:	fb0e 4702 	mla	r7, lr, r2, r4
 80126b2:	f841 7c08 	str.w	r7, [r1, #-8]
 80126b6:	4594      	cmp	ip, r2
 80126b8:	bf94      	ite	ls
 80126ba:	461f      	movls	r7, r3
 80126bc:	460f      	movhi	r7, r1
 80126be:	3201      	adds	r2, #1
 80126c0:	4290      	cmp	r0, r2
 80126c2:	e941 6504 	strd	r6, r5, [r1, #-16]
 80126c6:	f841 7c04 	str.w	r7, [r1, #-4]
 80126ca:	f101 0110 	add.w	r1, r1, #16
 80126ce:	d1ee      	bne.n	80126ae <enet_descriptors_chain_init+0x32>
 80126d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126d2:	4b0b      	ldr	r3, [pc, #44]	; (8012700 <enet_descriptors_chain_init+0x84>)
 80126d4:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80126d8:	60d3      	str	r3, [r2, #12]
 80126da:	4a0a      	ldr	r2, [pc, #40]	; (8012704 <enet_descriptors_chain_init+0x88>)
 80126dc:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80126e0:	2004      	movs	r0, #4
 80126e2:	4c09      	ldr	r4, [pc, #36]	; (8012708 <enet_descriptors_chain_init+0x8c>)
 80126e4:	6013      	str	r3, [r2, #0]
 80126e6:	e7d7      	b.n	8012698 <enet_descriptors_chain_init+0x1c>
 80126e8:	40029000 	andmi	r9, r2, r0
 80126ec:	20013bf4 	strdcs	r3, [r1], -r4
 80126f0:	2001300c 	andcs	r3, r1, ip
 80126f4:	200117bc 			; <UNDEFINED> instruction: 0x200117bc
 80126f8:	200117b0 			; <UNDEFINED> instruction: 0x200117b0
 80126fc:	200117b4 			; <UNDEFINED> instruction: 0x200117b4
 8012700:	20012fcc 	andcs	r2, r1, ip, asr #31
 8012704:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012708:	200117fc 	strdcs	r1, [r1], -ip

0801270c <enet_frame_receive>:
 801270c:	4a1d      	ldr	r2, [pc, #116]	; (8012784 <enet_frame_receive+0x78>)
 801270e:	b510      	push	{r4, lr}
 8012710:	6813      	ldr	r3, [r2, #0]
 8012712:	681b      	ldr	r3, [r3, #0]
 8012714:	2b00      	cmp	r3, #0
 8012716:	db33      	blt.n	8012780 <enet_frame_receive+0x74>
 8012718:	b970      	cbnz	r0, 8012738 <enet_frame_receive+0x2c>
 801271a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801271e:	6813      	ldr	r3, [r2, #0]
 8012720:	6019      	str	r1, [r3, #0]
 8012722:	4919      	ldr	r1, [pc, #100]	; (8012788 <enet_frame_receive+0x7c>)
 8012724:	6948      	ldr	r0, [r1, #20]
 8012726:	0604      	lsls	r4, r0, #24
 8012728:	d419      	bmi.n	801275e <enet_frame_receive+0x52>
 801272a:	6859      	ldr	r1, [r3, #4]
 801272c:	0448      	lsls	r0, r1, #17
 801272e:	d51b      	bpl.n	8012768 <enet_frame_receive+0x5c>
 8012730:	68db      	ldr	r3, [r3, #12]
 8012732:	2001      	movs	r0, #1
 8012734:	6013      	str	r3, [r2, #0]
 8012736:	bd10      	pop	{r4, pc}
 8012738:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 801273c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8012740:	d11e      	bne.n	8012780 <enet_frame_receive+0x74>
 8012742:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8012746:	3b04      	subs	r3, #4
 8012748:	428b      	cmp	r3, r1
 801274a:	d819      	bhi.n	8012780 <enet_frame_receive+0x74>
 801274c:	2100      	movs	r1, #0
 801274e:	4299      	cmp	r1, r3
 8012750:	6814      	ldr	r4, [r2, #0]
 8012752:	d2e2      	bcs.n	801271a <enet_frame_receive+0xe>
 8012754:	68a4      	ldr	r4, [r4, #8]
 8012756:	5d0c      	ldrb	r4, [r1, r4]
 8012758:	5444      	strb	r4, [r0, r1]
 801275a:	3101      	adds	r1, #1
 801275c:	e7f7      	b.n	801274e <enet_frame_receive+0x42>
 801275e:	2080      	movs	r0, #128	; 0x80
 8012760:	6148      	str	r0, [r1, #20]
 8012762:	2000      	movs	r0, #0
 8012764:	6088      	str	r0, [r1, #8]
 8012766:	e7e0      	b.n	801272a <enet_frame_receive+0x1e>
 8012768:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801276c:	4906      	ldr	r1, [pc, #24]	; (8012788 <enet_frame_receive+0x7c>)
 801276e:	bf05      	ittet	eq
 8012770:	3310      	addeq	r3, #16
 8012772:	6809      	ldreq	r1, [r1, #0]
 8012774:	68cb      	ldrne	r3, [r1, #12]
 8012776:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801277a:	bf08      	it	eq
 801277c:	185b      	addeq	r3, r3, r1
 801277e:	e7d8      	b.n	8012732 <enet_frame_receive+0x26>
 8012780:	2000      	movs	r0, #0
 8012782:	e7d8      	b.n	8012736 <enet_frame_receive+0x2a>
 8012784:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012788:	40029000 	andmi	r9, r2, r0

0801278c <enet_frame_transmit>:
 801278c:	4a1e      	ldr	r2, [pc, #120]	; (8012808 <enet_frame_transmit+0x7c>)
 801278e:	b530      	push	{r4, r5, lr}
 8012790:	6813      	ldr	r3, [r2, #0]
 8012792:	681b      	ldr	r3, [r3, #0]
 8012794:	2b00      	cmp	r3, #0
 8012796:	db34      	blt.n	8012802 <enet_frame_transmit+0x76>
 8012798:	f240 53f4 	movw	r3, #1524	; 0x5f4
 801279c:	4299      	cmp	r1, r3
 801279e:	d830      	bhi.n	8012802 <enet_frame_transmit+0x76>
 80127a0:	b9e8      	cbnz	r0, 80127de <enet_frame_transmit+0x52>
 80127a2:	6813      	ldr	r3, [r2, #0]
 80127a4:	4819      	ldr	r0, [pc, #100]	; (801280c <enet_frame_transmit+0x80>)
 80127a6:	6059      	str	r1, [r3, #4]
 80127a8:	6819      	ldr	r1, [r3, #0]
 80127aa:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80127ae:	6019      	str	r1, [r3, #0]
 80127b0:	6941      	ldr	r1, [r0, #20]
 80127b2:	6944      	ldr	r4, [r0, #20]
 80127b4:	f001 0104 	and.w	r1, r1, #4
 80127b8:	f004 0420 	and.w	r4, r4, #32
 80127bc:	4321      	orrs	r1, r4
 80127be:	d110      	bne.n	80127e2 <enet_frame_transmit+0x56>
 80127c0:	6819      	ldr	r1, [r3, #0]
 80127c2:	02c8      	lsls	r0, r1, #11
 80127c4:	d511      	bpl.n	80127ea <enet_frame_transmit+0x5e>
 80127c6:	68db      	ldr	r3, [r3, #12]
 80127c8:	2001      	movs	r0, #1
 80127ca:	6013      	str	r3, [r2, #0]
 80127cc:	bd30      	pop	{r4, r5, pc}
 80127ce:	5cc5      	ldrb	r5, [r0, r3]
 80127d0:	68a4      	ldr	r4, [r4, #8]
 80127d2:	551d      	strb	r5, [r3, r4]
 80127d4:	3301      	adds	r3, #1
 80127d6:	428b      	cmp	r3, r1
 80127d8:	6814      	ldr	r4, [r2, #0]
 80127da:	d1f8      	bne.n	80127ce <enet_frame_transmit+0x42>
 80127dc:	e7e1      	b.n	80127a2 <enet_frame_transmit+0x16>
 80127de:	2300      	movs	r3, #0
 80127e0:	e7f9      	b.n	80127d6 <enet_frame_transmit+0x4a>
 80127e2:	6141      	str	r1, [r0, #20]
 80127e4:	2100      	movs	r1, #0
 80127e6:	6041      	str	r1, [r0, #4]
 80127e8:	e7ea      	b.n	80127c0 <enet_frame_transmit+0x34>
 80127ea:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80127ee:	4907      	ldr	r1, [pc, #28]	; (801280c <enet_frame_transmit+0x80>)
 80127f0:	bf05      	ittet	eq
 80127f2:	3310      	addeq	r3, #16
 80127f4:	6809      	ldreq	r1, [r1, #0]
 80127f6:	690b      	ldrne	r3, [r1, #16]
 80127f8:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80127fc:	bf08      	it	eq
 80127fe:	185b      	addeq	r3, r3, r1
 8012800:	e7e2      	b.n	80127c8 <enet_frame_transmit+0x3c>
 8012802:	2000      	movs	r0, #0
 8012804:	e7e2      	b.n	80127cc <enet_frame_transmit+0x40>
 8012806:	bf00      	nop
 8012808:	200117bc 			; <UNDEFINED> instruction: 0x200117bc
 801280c:	40029000 	andmi	r9, r2, r0

08012810 <enet_transmit_checksum_config>:
 8012810:	6803      	ldr	r3, [r0, #0]
 8012812:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8012816:	430b      	orrs	r3, r1
 8012818:	6003      	str	r3, [r0, #0]
 801281a:	4770      	bx	lr

0801281c <enet_mac_address_set>:
 801281c:	888a      	ldrh	r2, [r1, #4]
 801281e:	4b03      	ldr	r3, [pc, #12]	; (801282c <enet_mac_address_set+0x10>)
 8012820:	50c2      	str	r2, [r0, r3]
 8012822:	680a      	ldr	r2, [r1, #0]
 8012824:	3304      	adds	r3, #4
 8012826:	50c2      	str	r2, [r0, r3]
 8012828:	4770      	bx	lr
 801282a:	bf00      	nop
 801282c:	40028040 	andmi	r8, r2, r0, asr #32

08012830 <enet_rx_enable>:
 8012830:	4a05      	ldr	r2, [pc, #20]	; (8012848 <enet_rx_enable+0x18>)
 8012832:	6813      	ldr	r3, [r2, #0]
 8012834:	f043 0304 	orr.w	r3, r3, #4
 8012838:	6013      	str	r3, [r2, #0]
 801283a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801283e:	6993      	ldr	r3, [r2, #24]
 8012840:	f043 0302 	orr.w	r3, r3, #2
 8012844:	6193      	str	r3, [r2, #24]
 8012846:	4770      	bx	lr
 8012848:	40028000 	andmi	r8, r2, r0

0801284c <enet_phy_write_read>:
 801284c:	b530      	push	{r4, r5, lr}
 801284e:	4604      	mov	r4, r0
 8012850:	4d13      	ldr	r5, [pc, #76]	; (80128a0 <enet_phy_write_read+0x54>)
 8012852:	0192      	lsls	r2, r2, #6
 8012854:	6928      	ldr	r0, [r5, #16]
 8012856:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801285a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801285e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8012862:	4302      	orrs	r2, r0
 8012864:	02c9      	lsls	r1, r1, #11
 8012866:	b289      	uxth	r1, r1
 8012868:	2c02      	cmp	r4, #2
 801286a:	ea42 0204 	orr.w	r2, r2, r4
 801286e:	ea42 0201 	orr.w	r2, r2, r1
 8012872:	bf08      	it	eq
 8012874:	8819      	ldrheq	r1, [r3, #0]
 8012876:	f042 0201 	orr.w	r2, r2, #1
 801287a:	bf08      	it	eq
 801287c:	6169      	streq	r1, [r5, #20]
 801287e:	612a      	str	r2, [r5, #16]
 8012880:	4907      	ldr	r1, [pc, #28]	; (80128a0 <enet_phy_write_read+0x54>)
 8012882:	4a08      	ldr	r2, [pc, #32]	; (80128a4 <enet_phy_write_read+0x58>)
 8012884:	6908      	ldr	r0, [r1, #16]
 8012886:	07c0      	lsls	r0, r0, #31
 8012888:	d501      	bpl.n	801288e <enet_phy_write_read+0x42>
 801288a:	3a01      	subs	r2, #1
 801288c:	d1fa      	bne.n	8012884 <enet_phy_write_read+0x38>
 801288e:	690a      	ldr	r2, [r1, #16]
 8012890:	43d2      	mvns	r2, r2
 8012892:	f002 0001 	and.w	r0, r2, #1
 8012896:	b90c      	cbnz	r4, 801289c <enet_phy_write_read+0x50>
 8012898:	694a      	ldr	r2, [r1, #20]
 801289a:	801a      	strh	r2, [r3, #0]
 801289c:	bd30      	pop	{r4, r5, pc}
 801289e:	bf00      	nop
 80128a0:	40028000 	andmi	r8, r2, r0
 80128a4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080128a8 <enet_phy_config>:
 80128a8:	4b22      	ldr	r3, [pc, #136]	; (8012934 <enet_phy_config+0x8c>)
 80128aa:	b513      	push	{r0, r1, r4, lr}
 80128ac:	2001      	movs	r0, #1
 80128ae:	691c      	ldr	r4, [r3, #16]
 80128b0:	f7fe ff56 	bl	8011760 <rcu_clock_freq_get>
 80128b4:	4b20      	ldr	r3, [pc, #128]	; (8012938 <enet_phy_config+0x90>)
 80128b6:	4a21      	ldr	r2, [pc, #132]	; (801293c <enet_phy_config+0x94>)
 80128b8:	4403      	add	r3, r0
 80128ba:	4293      	cmp	r3, r2
 80128bc:	f024 041c 	bic.w	r4, r4, #28
 80128c0:	d220      	bcs.n	8012904 <enet_phy_config+0x5c>
 80128c2:	f044 0408 	orr.w	r4, r4, #8
 80128c6:	4b1b      	ldr	r3, [pc, #108]	; (8012934 <enet_phy_config+0x8c>)
 80128c8:	2200      	movs	r2, #0
 80128ca:	611c      	str	r4, [r3, #16]
 80128cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80128d0:	2101      	movs	r1, #1
 80128d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80128d6:	2002      	movs	r0, #2
 80128d8:	f10d 0306 	add.w	r3, sp, #6
 80128dc:	f7ff ffb6 	bl	801284c <enet_phy_write_read>
 80128e0:	b310      	cbz	r0, 8012928 <enet_phy_config+0x80>
 80128e2:	2200      	movs	r2, #0
 80128e4:	4816      	ldr	r0, [pc, #88]	; (8012940 <enet_phy_config+0x98>)
 80128e6:	f7ff fea9 	bl	801263c <enet_delay>
 80128ea:	2101      	movs	r1, #1
 80128ec:	4610      	mov	r0, r2
 80128ee:	f10d 0306 	add.w	r3, sp, #6
 80128f2:	f7ff ffab 	bl	801284c <enet_phy_write_read>
 80128f6:	b1b8      	cbz	r0, 8012928 <enet_phy_config+0x80>
 80128f8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80128fc:	43c0      	mvns	r0, r0
 80128fe:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012902:	e012      	b.n	801292a <enet_phy_config+0x82>
 8012904:	4b0f      	ldr	r3, [pc, #60]	; (8012944 <enet_phy_config+0x9c>)
 8012906:	4a10      	ldr	r2, [pc, #64]	; (8012948 <enet_phy_config+0xa0>)
 8012908:	4403      	add	r3, r0
 801290a:	4293      	cmp	r3, r2
 801290c:	d802      	bhi.n	8012914 <enet_phy_config+0x6c>
 801290e:	f044 040c 	orr.w	r4, r4, #12
 8012912:	e7d8      	b.n	80128c6 <enet_phy_config+0x1e>
 8012914:	4b0d      	ldr	r3, [pc, #52]	; (801294c <enet_phy_config+0xa4>)
 8012916:	4a0e      	ldr	r2, [pc, #56]	; (8012950 <enet_phy_config+0xa8>)
 8012918:	4403      	add	r3, r0
 801291a:	4293      	cmp	r3, r2
 801291c:	d9d3      	bls.n	80128c6 <enet_phy_config+0x1e>
 801291e:	4b0d      	ldr	r3, [pc, #52]	; (8012954 <enet_phy_config+0xac>)
 8012920:	4a0d      	ldr	r2, [pc, #52]	; (8012958 <enet_phy_config+0xb0>)
 8012922:	4403      	add	r3, r0
 8012924:	4293      	cmp	r3, r2
 8012926:	d902      	bls.n	801292e <enet_phy_config+0x86>
 8012928:	2000      	movs	r0, #0
 801292a:	b002      	add	sp, #8
 801292c:	bd10      	pop	{r4, pc}
 801292e:	f044 0404 	orr.w	r4, r4, #4
 8012932:	e7c8      	b.n	80128c6 <enet_phy_config+0x1e>
 8012934:	40028000 	andmi	r8, r2, r0
 8012938:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 801293c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8012940:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012944:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8012948:	017d783f 	cmneq	sp, pc, lsr r8
 801294c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8012950:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8012954:	faa2b580 	blx	68bff5c <__stack_size+0x68be75c>
 8012958:	0112a880 	tsteq	r2, r0, lsl #17

0801295c <enet_init>:
 801295c:	2300      	movs	r3, #0
 801295e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012960:	4604      	mov	r4, r0
 8012962:	460d      	mov	r5, r1
 8012964:	4616      	mov	r6, r2
 8012966:	f8ad 3006 	strh.w	r3, [sp, #6]
 801296a:	f7ff ff9d 	bl	80128a8 <enet_phy_config>
 801296e:	2800      	cmp	r0, #0
 8012970:	d037      	beq.n	80129e2 <enet_init+0x86>
 8012972:	4b3b      	ldr	r3, [pc, #236]	; (8012a60 <enet_init+0x104>)
 8012974:	4a3b      	ldr	r2, [pc, #236]	; (8012a64 <enet_init+0x108>)
 8012976:	6819      	ldr	r1, [r3, #0]
 8012978:	2c01      	cmp	r4, #1
 801297a:	ea02 0201 	and.w	r2, r2, r1
 801297e:	601a      	str	r2, [r3, #0]
 8012980:	f04f 0200 	mov.w	r2, #0
 8012984:	605a      	str	r2, [r3, #4]
 8012986:	609a      	str	r2, [r3, #8]
 8012988:	60da      	str	r2, [r3, #12]
 801298a:	6999      	ldr	r1, [r3, #24]
 801298c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8012990:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8012994:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8012998:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801299c:	6199      	str	r1, [r3, #24]
 801299e:	4932      	ldr	r1, [pc, #200]	; (8012a68 <enet_init+0x10c>)
 80129a0:	61da      	str	r2, [r3, #28]
 80129a2:	6988      	ldr	r0, [r1, #24]
 80129a4:	4b31      	ldr	r3, [pc, #196]	; (8012a6c <enet_init+0x110>)
 80129a6:	ea03 0300 	and.w	r3, r3, r0
 80129aa:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80129ae:	618b      	str	r3, [r1, #24]
 80129b0:	680b      	ldr	r3, [r1, #0]
 80129b2:	4b2f      	ldr	r3, [pc, #188]	; (8012a70 <enet_init+0x114>)
 80129b4:	600b      	str	r3, [r1, #0]
 80129b6:	d01e      	beq.n	80129f6 <enet_init+0x9a>
 80129b8:	08e3      	lsrs	r3, r4, #3
 80129ba:	0861      	lsrs	r1, r4, #1
 80129bc:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80129c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80129c4:	430b      	orrs	r3, r1
 80129c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80129ca:	2101      	movs	r1, #1
 80129cc:	2002      	movs	r0, #2
 80129ce:	f10d 0306 	add.w	r3, sp, #6
 80129d2:	f7ff ff3b 	bl	801284c <enet_phy_write_read>
 80129d6:	b158      	cbz	r0, 80129f0 <enet_init+0x94>
 80129d8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80129dc:	f7ff fe2e 	bl	801263c <enet_delay>
 80129e0:	e05f      	b.n	8012aa2 <enet_init+0x146>
 80129e2:	4824      	ldr	r0, [pc, #144]	; (8012a74 <enet_init+0x118>)
 80129e4:	f7ff fe2a 	bl	801263c <enet_delay>
 80129e8:	f7ff ff5e 	bl	80128a8 <enet_phy_config>
 80129ec:	2800      	cmp	r0, #0
 80129ee:	d1c0      	bne.n	8012972 <enet_init+0x16>
 80129f0:	2000      	movs	r0, #0
 80129f2:	b003      	add	sp, #12
 80129f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80129f6:	4614      	mov	r4, r2
 80129f8:	4f1f      	ldr	r7, [pc, #124]	; (8012a78 <enet_init+0x11c>)
 80129fa:	2201      	movs	r2, #1
 80129fc:	2000      	movs	r0, #0
 80129fe:	4611      	mov	r1, r2
 8012a00:	f10d 0306 	add.w	r3, sp, #6
 8012a04:	f7ff ff22 	bl	801284c <enet_phy_write_read>
 8012a08:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012a0c:	3401      	adds	r4, #1
 8012a0e:	f002 0204 	and.w	r2, r2, #4
 8012a12:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a16:	b912      	cbnz	r2, 8012a1e <enet_init+0xc2>
 8012a18:	42bc      	cmp	r4, r7
 8012a1a:	d1ee      	bne.n	80129fa <enet_init+0x9e>
 8012a1c:	e7e8      	b.n	80129f0 <enet_init+0x94>
 8012a1e:	42bc      	cmp	r4, r7
 8012a20:	d0e6      	beq.n	80129f0 <enet_init+0x94>
 8012a22:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012a26:	2101      	movs	r1, #1
 8012a28:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a2c:	2002      	movs	r0, #2
 8012a2e:	2200      	movs	r2, #0
 8012a30:	f7ff ff0c 	bl	801284c <enet_phy_write_read>
 8012a34:	2800      	cmp	r0, #0
 8012a36:	d0db      	beq.n	80129f0 <enet_init+0x94>
 8012a38:	2400      	movs	r4, #0
 8012a3a:	4f0f      	ldr	r7, [pc, #60]	; (8012a78 <enet_init+0x11c>)
 8012a3c:	2201      	movs	r2, #1
 8012a3e:	2000      	movs	r0, #0
 8012a40:	4611      	mov	r1, r2
 8012a42:	f10d 0306 	add.w	r3, sp, #6
 8012a46:	f7ff ff01 	bl	801284c <enet_phy_write_read>
 8012a4a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012a4e:	3401      	adds	r4, #1
 8012a50:	f002 0220 	and.w	r2, r2, #32
 8012a54:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a58:	b982      	cbnz	r2, 8012a7c <enet_init+0x120>
 8012a5a:	42bc      	cmp	r4, r7
 8012a5c:	d1ee      	bne.n	8012a3c <enet_init+0xe0>
 8012a5e:	e7c7      	b.n	80129f0 <enet_init+0x94>
 8012a60:	40028000 	andmi	r8, r2, r0
 8012a64:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8012a68:	40029000 	andmi	r9, r2, r0
 8012a6c:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8012a70:	02c16000 	sbceq	r6, r1, #0
 8012a74:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8012a78:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012a7c:	42bc      	cmp	r4, r7
 8012a7e:	d0b7      	beq.n	80129f0 <enet_init+0x94>
 8012a80:	2101      	movs	r1, #1
 8012a82:	2210      	movs	r2, #16
 8012a84:	2000      	movs	r0, #0
 8012a86:	f7ff fee1 	bl	801284c <enet_phy_write_read>
 8012a8a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012a8e:	f013 0f04 	tst.w	r3, #4
 8012a92:	bf14      	ite	ne
 8012a94:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8012a98:	2400      	moveq	r4, #0
 8012a9a:	0799      	lsls	r1, r3, #30
 8012a9c:	d401      	bmi.n	8012aa2 <enet_init+0x146>
 8012a9e:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8012aa2:	4b64      	ldr	r3, [pc, #400]	; (8012c34 <enet_init+0x2d8>)
 8012aa4:	056a      	lsls	r2, r5, #21
 8012aa6:	6818      	ldr	r0, [r3, #0]
 8012aa8:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8012aac:	ea44 0400 	orr.w	r4, r4, r0
 8012ab0:	601c      	str	r4, [r3, #0]
 8012ab2:	d50c      	bpl.n	8012ace <enet_init+0x172>
 8012ab4:	681a      	ldr	r2, [r3, #0]
 8012ab6:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8012aba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012abe:	601a      	str	r2, [r3, #0]
 8012ac0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012ac4:	6999      	ldr	r1, [r3, #24]
 8012ac6:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8012aca:	430d      	orrs	r5, r1
 8012acc:	619d      	str	r5, [r3, #24]
 8012ace:	4959      	ldr	r1, [pc, #356]	; (8012c34 <enet_init+0x2d8>)
 8012ad0:	4b59      	ldr	r3, [pc, #356]	; (8012c38 <enet_init+0x2dc>)
 8012ad2:	684a      	ldr	r2, [r1, #4]
 8012ad4:	4316      	orrs	r6, r2
 8012ad6:	604e      	str	r6, [r1, #4]
 8012ad8:	681a      	ldr	r2, [r3, #0]
 8012ada:	07d7      	lsls	r7, r2, #31
 8012adc:	d510      	bpl.n	8012b00 <enet_init+0x1a4>
 8012ade:	685a      	ldr	r2, [r3, #4]
 8012ae0:	680c      	ldr	r4, [r1, #0]
 8012ae2:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8012ae6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8012aea:	4320      	orrs	r0, r4
 8012aec:	6008      	str	r0, [r1, #0]
 8012aee:	4853      	ldr	r0, [pc, #332]	; (8012c3c <enet_init+0x2e0>)
 8012af0:	0892      	lsrs	r2, r2, #2
 8012af2:	6981      	ldr	r1, [r0, #24]
 8012af4:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8012af8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8012afc:	430a      	orrs	r2, r1
 8012afe:	6182      	str	r2, [r0, #24]
 8012b00:	681a      	ldr	r2, [r3, #0]
 8012b02:	0796      	lsls	r6, r2, #30
 8012b04:	d508      	bpl.n	8012b18 <enet_init+0x1bc>
 8012b06:	494d      	ldr	r1, [pc, #308]	; (8012c3c <enet_init+0x2e0>)
 8012b08:	6898      	ldr	r0, [r3, #8]
 8012b0a:	680a      	ldr	r2, [r1, #0]
 8012b0c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8012b10:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012b14:	4302      	orrs	r2, r0
 8012b16:	600a      	str	r2, [r1, #0]
 8012b18:	681a      	ldr	r2, [r3, #0]
 8012b1a:	0755      	lsls	r5, r2, #29
 8012b1c:	d508      	bpl.n	8012b30 <enet_init+0x1d4>
 8012b1e:	4947      	ldr	r1, [pc, #284]	; (8012c3c <enet_init+0x2e0>)
 8012b20:	68d8      	ldr	r0, [r3, #12]
 8012b22:	680a      	ldr	r2, [r1, #0]
 8012b24:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8012b28:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8012b2c:	4302      	orrs	r2, r0
 8012b2e:	600a      	str	r2, [r1, #0]
 8012b30:	681a      	ldr	r2, [r3, #0]
 8012b32:	0714      	lsls	r4, r2, #28
 8012b34:	d508      	bpl.n	8012b48 <enet_init+0x1ec>
 8012b36:	4941      	ldr	r1, [pc, #260]	; (8012c3c <enet_init+0x2e0>)
 8012b38:	6918      	ldr	r0, [r3, #16]
 8012b3a:	680a      	ldr	r2, [r1, #0]
 8012b3c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012b40:	f022 0202 	bic.w	r2, r2, #2
 8012b44:	4302      	orrs	r2, r0
 8012b46:	600a      	str	r2, [r1, #0]
 8012b48:	681a      	ldr	r2, [r3, #0]
 8012b4a:	06d0      	lsls	r0, r2, #27
 8012b4c:	d506      	bpl.n	8012b5c <enet_init+0x200>
 8012b4e:	493b      	ldr	r1, [pc, #236]	; (8012c3c <enet_init+0x2e0>)
 8012b50:	4a3b      	ldr	r2, [pc, #236]	; (8012c40 <enet_init+0x2e4>)
 8012b52:	6988      	ldr	r0, [r1, #24]
 8012b54:	4002      	ands	r2, r0
 8012b56:	6958      	ldr	r0, [r3, #20]
 8012b58:	4302      	orrs	r2, r0
 8012b5a:	618a      	str	r2, [r1, #24]
 8012b5c:	681a      	ldr	r2, [r3, #0]
 8012b5e:	0691      	lsls	r1, r2, #26
 8012b60:	d508      	bpl.n	8012b74 <enet_init+0x218>
 8012b62:	4936      	ldr	r1, [pc, #216]	; (8012c3c <enet_init+0x2e0>)
 8012b64:	6998      	ldr	r0, [r3, #24]
 8012b66:	698a      	ldr	r2, [r1, #24]
 8012b68:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8012b6c:	f022 0204 	bic.w	r2, r2, #4
 8012b70:	4302      	orrs	r2, r0
 8012b72:	618a      	str	r2, [r1, #24]
 8012b74:	681a      	ldr	r2, [r3, #0]
 8012b76:	0652      	lsls	r2, r2, #25
 8012b78:	d506      	bpl.n	8012b88 <enet_init+0x22c>
 8012b7a:	492e      	ldr	r1, [pc, #184]	; (8012c34 <enet_init+0x2d8>)
 8012b7c:	69d8      	ldr	r0, [r3, #28]
 8012b7e:	69ca      	ldr	r2, [r1, #28]
 8012b80:	0c52      	lsrs	r2, r2, #17
 8012b82:	0452      	lsls	r2, r2, #17
 8012b84:	4302      	orrs	r2, r0
 8012b86:	61ca      	str	r2, [r1, #28]
 8012b88:	681a      	ldr	r2, [r3, #0]
 8012b8a:	0617      	lsls	r7, r2, #24
 8012b8c:	d517      	bpl.n	8012bbe <enet_init+0x262>
 8012b8e:	4c29      	ldr	r4, [pc, #164]	; (8012c34 <enet_init+0x2d8>)
 8012b90:	6a1a      	ldr	r2, [r3, #32]
 8012b92:	69a0      	ldr	r0, [r4, #24]
 8012b94:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8012b98:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8012b9c:	0400      	lsls	r0, r0, #16
 8012b9e:	0c00      	lsrs	r0, r0, #16
 8012ba0:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8012ba4:	4301      	orrs	r1, r0
 8012ba6:	4825      	ldr	r0, [pc, #148]	; (8012c3c <enet_init+0x2e0>)
 8012ba8:	61a1      	str	r1, [r4, #24]
 8012baa:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8012bae:	0a12      	lsrs	r2, r2, #8
 8012bb0:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8012bb4:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8012bb8:	430a      	orrs	r2, r1
 8012bba:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8012bbe:	681a      	ldr	r2, [r3, #0]
 8012bc0:	05d6      	lsls	r6, r2, #23
 8012bc2:	bf42      	ittt	mi
 8012bc4:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8012bc6:	4a1b      	ldrmi	r2, [pc, #108]	; (8012c34 <enet_init+0x2d8>)
 8012bc8:	6091      	strmi	r1, [r2, #8]
 8012bca:	681a      	ldr	r2, [r3, #0]
 8012bcc:	0595      	lsls	r5, r2, #22
 8012bce:	bf42      	ittt	mi
 8012bd0:	4a18      	ldrmi	r2, [pc, #96]	; (8012c34 <enet_init+0x2d8>)
 8012bd2:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8012bd4:	60d1      	strmi	r1, [r2, #12]
 8012bd6:	681a      	ldr	r2, [r3, #0]
 8012bd8:	0554      	lsls	r4, r2, #21
 8012bda:	d508      	bpl.n	8012bee <enet_init+0x292>
 8012bdc:	4915      	ldr	r1, [pc, #84]	; (8012c34 <enet_init+0x2d8>)
 8012bde:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8012be0:	684a      	ldr	r2, [r1, #4]
 8012be2:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8012be6:	f022 0206 	bic.w	r2, r2, #6
 8012bea:	4302      	orrs	r2, r0
 8012bec:	604a      	str	r2, [r1, #4]
 8012bee:	681a      	ldr	r2, [r3, #0]
 8012bf0:	0510      	lsls	r0, r2, #20
 8012bf2:	d508      	bpl.n	8012c06 <enet_init+0x2aa>
 8012bf4:	490f      	ldr	r1, [pc, #60]	; (8012c34 <enet_init+0x2d8>)
 8012bf6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8012bf8:	680a      	ldr	r2, [r1, #0]
 8012bfa:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8012bfe:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8012c02:	4302      	orrs	r2, r0
 8012c04:	600a      	str	r2, [r1, #0]
 8012c06:	681a      	ldr	r2, [r3, #0]
 8012c08:	04d1      	lsls	r1, r2, #19
 8012c0a:	d506      	bpl.n	8012c1a <enet_init+0x2be>
 8012c0c:	4909      	ldr	r1, [pc, #36]	; (8012c34 <enet_init+0x2d8>)
 8012c0e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8012c10:	680a      	ldr	r2, [r1, #0]
 8012c12:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8012c16:	4302      	orrs	r2, r0
 8012c18:	600a      	str	r2, [r1, #0]
 8012c1a:	681a      	ldr	r2, [r3, #0]
 8012c1c:	0492      	lsls	r2, r2, #18
 8012c1e:	d506      	bpl.n	8012c2e <enet_init+0x2d2>
 8012c20:	4904      	ldr	r1, [pc, #16]	; (8012c34 <enet_init+0x2d8>)
 8012c22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c24:	680a      	ldr	r2, [r1, #0]
 8012c26:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8012c2a:	4313      	orrs	r3, r2
 8012c2c:	600b      	str	r3, [r1, #0]
 8012c2e:	2001      	movs	r0, #1
 8012c30:	e6df      	b.n	80129f2 <enet_init+0x96>
 8012c32:	bf00      	nop
 8012c34:	40028000 	andmi	r8, r2, r0
 8012c38:	200117c0 	andcs	r1, r1, r0, asr #15
 8012c3c:	40029000 	andmi	r9, r2, r0
 8012c40:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08012c44 <enet_txfifo_flush>:
 8012c44:	4b06      	ldr	r3, [pc, #24]	; (8012c60 <enet_txfifo_flush+0x1c>)
 8012c46:	4807      	ldr	r0, [pc, #28]	; (8012c64 <enet_txfifo_flush+0x20>)
 8012c48:	699a      	ldr	r2, [r3, #24]
 8012c4a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8012c4e:	619a      	str	r2, [r3, #24]
 8012c50:	699a      	ldr	r2, [r3, #24]
 8012c52:	02d2      	lsls	r2, r2, #11
 8012c54:	d502      	bpl.n	8012c5c <enet_txfifo_flush+0x18>
 8012c56:	3801      	subs	r0, #1
 8012c58:	d1fa      	bne.n	8012c50 <enet_txfifo_flush+0xc>
 8012c5a:	4770      	bx	lr
 8012c5c:	2001      	movs	r0, #1
 8012c5e:	4770      	bx	lr
 8012c60:	40029000 	andmi	r9, r2, r0
 8012c64:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012c68 <enet_tx_enable>:
 8012c68:	4a06      	ldr	r2, [pc, #24]	; (8012c84 <enet_tx_enable+0x1c>)
 8012c6a:	b508      	push	{r3, lr}
 8012c6c:	6813      	ldr	r3, [r2, #0]
 8012c6e:	f043 0308 	orr.w	r3, r3, #8
 8012c72:	6013      	str	r3, [r2, #0]
 8012c74:	f7ff ffe6 	bl	8012c44 <enet_txfifo_flush>
 8012c78:	4a03      	ldr	r2, [pc, #12]	; (8012c88 <enet_tx_enable+0x20>)
 8012c7a:	6993      	ldr	r3, [r2, #24]
 8012c7c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012c80:	6193      	str	r3, [r2, #24]
 8012c82:	bd08      	pop	{r3, pc}
 8012c84:	40028000 	andmi	r8, r2, r0
 8012c88:	40029000 	andmi	r9, r2, r0

08012c8c <enet_enable>:
 8012c8c:	b508      	push	{r3, lr}
 8012c8e:	f7ff ffeb 	bl	8012c68 <enet_tx_enable>
 8012c92:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012c96:	f7ff bdcb 	b.w	8012830 <enet_rx_enable>

08012c9a <enet_desc_information_get>:
 8012c9a:	2905      	cmp	r1, #5
 8012c9c:	d817      	bhi.n	8012cce <enet_desc_information_get+0x34>
 8012c9e:	e8df f001 	tbb	[pc, r1]
 8012ca2:	03091012 	movweq	r1, #36882	; 0x9012
 8012ca6:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8012caa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012cae:	4770      	bx	lr
 8012cb0:	88c0      	ldrh	r0, [r0, #6]
 8012cb2:	e7fa      	b.n	8012caa <enet_desc_information_get+0x10>
 8012cb4:	8840      	ldrh	r0, [r0, #2]
 8012cb6:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8012cba:	2804      	cmp	r0, #4
 8012cbc:	d90a      	bls.n	8012cd4 <enet_desc_information_get+0x3a>
 8012cbe:	3804      	subs	r0, #4
 8012cc0:	4770      	bx	lr
 8012cc2:	6880      	ldr	r0, [r0, #8]
 8012cc4:	4770      	bx	lr
 8012cc6:	6800      	ldr	r0, [r0, #0]
 8012cc8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8012ccc:	4770      	bx	lr
 8012cce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012cd2:	4770      	bx	lr
 8012cd4:	2000      	movs	r0, #0
 8012cd6:	4770      	bx	lr

08012cd8 <enet_rxframe_drop>:
 8012cd8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8012cdc:	4814      	ldr	r0, [pc, #80]	; (8012d30 <enet_rxframe_drop+0x58>)
 8012cde:	b510      	push	{r4, lr}
 8012ce0:	6802      	ldr	r2, [r0, #0]
 8012ce2:	4914      	ldr	r1, [pc, #80]	; (8012d34 <enet_rxframe_drop+0x5c>)
 8012ce4:	6854      	ldr	r4, [r2, #4]
 8012ce6:	6013      	str	r3, [r2, #0]
 8012ce8:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8012cec:	680b      	ldr	r3, [r1, #0]
 8012cee:	d009      	beq.n	8012d04 <enet_rxframe_drop+0x2c>
 8012cf0:	b12b      	cbz	r3, 8012cfe <enet_rxframe_drop+0x26>
 8012cf2:	68da      	ldr	r2, [r3, #12]
 8012cf4:	6002      	str	r2, [r0, #0]
 8012cf6:	681a      	ldr	r2, [r3, #0]
 8012cf8:	b1ba      	cbz	r2, 8012d2a <enet_rxframe_drop+0x52>
 8012cfa:	600a      	str	r2, [r1, #0]
 8012cfc:	bd10      	pop	{r4, pc}
 8012cfe:	68d3      	ldr	r3, [r2, #12]
 8012d00:	6003      	str	r3, [r0, #0]
 8012d02:	e7fb      	b.n	8012cfc <enet_rxframe_drop+0x24>
 8012d04:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8012d08:	4c0b      	ldr	r4, [pc, #44]	; (8012d38 <enet_rxframe_drop+0x60>)
 8012d0a:	d006      	beq.n	8012d1a <enet_rxframe_drop+0x42>
 8012d0c:	68e2      	ldr	r2, [r4, #12]
 8012d0e:	6002      	str	r2, [r0, #0]
 8012d10:	2b00      	cmp	r3, #0
 8012d12:	d0f3      	beq.n	8012cfc <enet_rxframe_drop+0x24>
 8012d14:	681b      	ldr	r3, [r3, #0]
 8012d16:	600b      	str	r3, [r1, #0]
 8012d18:	e7f0      	b.n	8012cfc <enet_rxframe_drop+0x24>
 8012d1a:	6824      	ldr	r4, [r4, #0]
 8012d1c:	3210      	adds	r2, #16
 8012d1e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8012d22:	4422      	add	r2, r4
 8012d24:	6002      	str	r2, [r0, #0]
 8012d26:	2b00      	cmp	r3, #0
 8012d28:	d0e8      	beq.n	8012cfc <enet_rxframe_drop+0x24>
 8012d2a:	3310      	adds	r3, #16
 8012d2c:	e7f3      	b.n	8012d16 <enet_rxframe_drop+0x3e>
 8012d2e:	bf00      	nop
 8012d30:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012d34:	200117b0 			; <UNDEFINED> instruction: 0x200117b0
 8012d38:	40029000 	andmi	r9, r2, r0

08012d3c <enet_rxframe_size_get>:
 8012d3c:	b508      	push	{r3, lr}
 8012d3e:	4b0c      	ldr	r3, [pc, #48]	; (8012d70 <enet_rxframe_size_get+0x34>)
 8012d40:	681b      	ldr	r3, [r3, #0]
 8012d42:	6818      	ldr	r0, [r3, #0]
 8012d44:	2800      	cmp	r0, #0
 8012d46:	db10      	blt.n	8012d6a <enet_rxframe_size_get+0x2e>
 8012d48:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8012d4c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012d50:	d003      	beq.n	8012d5a <enet_rxframe_size_get+0x1e>
 8012d52:	f7ff ffc1 	bl	8012cd8 <enet_rxframe_drop>
 8012d56:	2001      	movs	r0, #1
 8012d58:	bd08      	pop	{r3, pc}
 8012d5a:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8012d5e:	2b21      	cmp	r3, #33	; 0x21
 8012d60:	d0f7      	beq.n	8012d52 <enet_rxframe_size_get+0x16>
 8012d62:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8012d66:	3804      	subs	r0, #4
 8012d68:	e7f6      	b.n	8012d58 <enet_rxframe_size_get+0x1c>
 8012d6a:	2000      	movs	r0, #0
 8012d6c:	e7f4      	b.n	8012d58 <enet_rxframe_size_get+0x1c>
 8012d6e:	bf00      	nop
 8012d70:	200117b8 			; <UNDEFINED> instruction: 0x200117b8

08012d74 <enet_initpara_reset>:
 8012d74:	2200      	movs	r2, #0
 8012d76:	4b08      	ldr	r3, [pc, #32]	; (8012d98 <enet_initpara_reset+0x24>)
 8012d78:	e9c3 2200 	strd	r2, r2, [r3]
 8012d7c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8012d80:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8012d84:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8012d88:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8012d8c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8012d90:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8012d94:	639a      	str	r2, [r3, #56]	; 0x38
 8012d96:	4770      	bx	lr
 8012d98:	200117c0 	andcs	r1, r1, r0, asr #15

08012d9c <enet_deinit>:
 8012d9c:	b508      	push	{r3, lr}
 8012d9e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012da2:	f7fe fc34 	bl	801160e <rcu_periph_reset_enable>
 8012da6:	f640 200e 	movw	r0, #2574	; 0xa0e
 8012daa:	f7fe fc32 	bl	8011612 <rcu_periph_reset_disable>
 8012dae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012db2:	f7ff bfdf 	b.w	8012d74 <enet_initpara_reset>
	...

08012db8 <i2c_clock_config>:
 8012db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012dba:	4605      	mov	r5, r0
 8012dbc:	2002      	movs	r0, #2
 8012dbe:	460c      	mov	r4, r1
 8012dc0:	4617      	mov	r7, r2
 8012dc2:	f7fe fccd 	bl	8011760 <rcu_clock_freq_get>
 8012dc6:	4927      	ldr	r1, [pc, #156]	; (8012e64 <i2c_clock_config+0xac>)
 8012dc8:	4a27      	ldr	r2, [pc, #156]	; (8012e68 <i2c_clock_config+0xb0>)
 8012dca:	fbb0 f1f1 	udiv	r1, r0, r1
 8012dce:	4290      	cmp	r0, r2
 8012dd0:	bf34      	ite	cc
 8012dd2:	460b      	movcc	r3, r1
 8012dd4:	2336      	movcs	r3, #54	; 0x36
 8012dd6:	686e      	ldr	r6, [r5, #4]
 8012dd8:	4a24      	ldr	r2, [pc, #144]	; (8012e6c <i2c_clock_config+0xb4>)
 8012dda:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8012dde:	431e      	orrs	r6, r3
 8012de0:	4294      	cmp	r4, r2
 8012de2:	606e      	str	r6, [r5, #4]
 8012de4:	d816      	bhi.n	8012e14 <i2c_clock_config+0x5c>
 8012de6:	3101      	adds	r1, #1
 8012de8:	2935      	cmp	r1, #53	; 0x35
 8012dea:	d90d      	bls.n	8012e08 <i2c_clock_config+0x50>
 8012dec:	2336      	movs	r3, #54	; 0x36
 8012dee:	622b      	str	r3, [r5, #32]
 8012df0:	0064      	lsls	r4, r4, #1
 8012df2:	fbb0 f4f4 	udiv	r4, r0, r4
 8012df6:	2c04      	cmp	r4, #4
 8012df8:	bf38      	it	cc
 8012dfa:	2404      	movcc	r4, #4
 8012dfc:	69e8      	ldr	r0, [r5, #28]
 8012dfe:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8012e02:	4304      	orrs	r4, r0
 8012e04:	61ec      	str	r4, [r5, #28]
 8012e06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012e08:	2902      	cmp	r1, #2
 8012e0a:	d801      	bhi.n	8012e10 <i2c_clock_config+0x58>
 8012e0c:	2302      	movs	r3, #2
 8012e0e:	e7ee      	b.n	8012dee <i2c_clock_config+0x36>
 8012e10:	6229      	str	r1, [r5, #32]
 8012e12:	e7ed      	b.n	8012df0 <i2c_clock_config+0x38>
 8012e14:	4a16      	ldr	r2, [pc, #88]	; (8012e70 <i2c_clock_config+0xb8>)
 8012e16:	4294      	cmp	r4, r2
 8012e18:	d8f5      	bhi.n	8012e06 <i2c_clock_config+0x4e>
 8012e1a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8012e1e:	4353      	muls	r3, r2
 8012e20:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012e24:	fbb3 f3f2 	udiv	r3, r3, r2
 8012e28:	3301      	adds	r3, #1
 8012e2a:	622b      	str	r3, [r5, #32]
 8012e2c:	b997      	cbnz	r7, 8012e54 <i2c_clock_config+0x9c>
 8012e2e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012e32:	fbb0 f4f4 	udiv	r4, r0, r4
 8012e36:	69eb      	ldr	r3, [r5, #28]
 8012e38:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012e3c:	61eb      	str	r3, [r5, #28]
 8012e3e:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8012e42:	b90b      	cbnz	r3, 8012e48 <i2c_clock_config+0x90>
 8012e44:	f044 0401 	orr.w	r4, r4, #1
 8012e48:	69eb      	ldr	r3, [r5, #28]
 8012e4a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8012e4e:	61eb      	str	r3, [r5, #28]
 8012e50:	69e8      	ldr	r0, [r5, #28]
 8012e52:	e7d6      	b.n	8012e02 <i2c_clock_config+0x4a>
 8012e54:	2119      	movs	r1, #25
 8012e56:	434c      	muls	r4, r1
 8012e58:	69eb      	ldr	r3, [r5, #28]
 8012e5a:	fbb0 f4f4 	udiv	r4, r0, r4
 8012e5e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8012e62:	e7eb      	b.n	8012e3c <i2c_clock_config+0x84>
 8012e64:	000f4240 	andeq	r4, pc, r0, asr #4
 8012e68:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8012e6c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8012e70:	00061a80 	andeq	r1, r6, r0, lsl #21

08012e74 <i2c_ack_config>:
 8012e74:	6803      	ldr	r3, [r0, #0]
 8012e76:	2901      	cmp	r1, #1
 8012e78:	bf0c      	ite	eq
 8012e7a:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8012e7e:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8012e82:	6003      	str	r3, [r0, #0]
 8012e84:	4770      	bx	lr

08012e86 <i2c_ackpos_config>:
 8012e86:	6803      	ldr	r3, [r0, #0]
 8012e88:	b919      	cbnz	r1, 8012e92 <i2c_ackpos_config+0xc>
 8012e8a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8012e8e:	6003      	str	r3, [r0, #0]
 8012e90:	4770      	bx	lr
 8012e92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8012e96:	e7fa      	b.n	8012e8e <i2c_ackpos_config+0x8>

08012e98 <i2c_master_addressing>:
 8012e98:	3202      	adds	r2, #2
 8012e9a:	bf0c      	ite	eq
 8012e9c:	f021 0101 	biceq.w	r1, r1, #1
 8012ea0:	f041 0101 	orrne.w	r1, r1, #1
 8012ea4:	6101      	str	r1, [r0, #16]
 8012ea6:	4770      	bx	lr

08012ea8 <i2c_enable>:
 8012ea8:	6803      	ldr	r3, [r0, #0]
 8012eaa:	f043 0301 	orr.w	r3, r3, #1
 8012eae:	6003      	str	r3, [r0, #0]
 8012eb0:	4770      	bx	lr

08012eb2 <i2c_start_on_bus>:
 8012eb2:	6803      	ldr	r3, [r0, #0]
 8012eb4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012eb8:	6003      	str	r3, [r0, #0]
 8012eba:	4770      	bx	lr

08012ebc <i2c_stop_on_bus>:
 8012ebc:	6803      	ldr	r3, [r0, #0]
 8012ebe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8012ec2:	6003      	str	r3, [r0, #0]
 8012ec4:	4770      	bx	lr

08012ec6 <i2c_data_transmit>:
 8012ec6:	6101      	str	r1, [r0, #16]
 8012ec8:	4770      	bx	lr

08012eca <i2c_data_receive>:
 8012eca:	6900      	ldr	r0, [r0, #16]
 8012ecc:	b2c0      	uxtb	r0, r0
 8012ece:	4770      	bx	lr

08012ed0 <i2c_flag_get>:
 8012ed0:	098b      	lsrs	r3, r1, #6
 8012ed2:	5818      	ldr	r0, [r3, r0]
 8012ed4:	f001 011f 	and.w	r1, r1, #31
 8012ed8:	40c8      	lsrs	r0, r1
 8012eda:	f000 0001 	and.w	r0, r0, #1
 8012ede:	4770      	bx	lr

08012ee0 <i2c_flag_clear>:
 8012ee0:	f240 5301 	movw	r3, #1281	; 0x501
 8012ee4:	4299      	cmp	r1, r3
 8012ee6:	b510      	push	{r4, lr}
 8012ee8:	d102      	bne.n	8012ef0 <i2c_flag_clear+0x10>
 8012eea:	6943      	ldr	r3, [r0, #20]
 8012eec:	6983      	ldr	r3, [r0, #24]
 8012eee:	bd10      	pop	{r4, pc}
 8012ef0:	2201      	movs	r2, #1
 8012ef2:	098c      	lsrs	r4, r1, #6
 8012ef4:	5823      	ldr	r3, [r4, r0]
 8012ef6:	f001 011f 	and.w	r1, r1, #31
 8012efa:	fa02 f101 	lsl.w	r1, r2, r1
 8012efe:	ea23 0101 	bic.w	r1, r3, r1
 8012f02:	5021      	str	r1, [r4, r0]
 8012f04:	e7f3      	b.n	8012eee <i2c_flag_clear+0xe>

08012f06 <i2s_init>:
 8012f06:	b510      	push	{r4, lr}
 8012f08:	69c4      	ldr	r4, [r0, #28]
 8012f0a:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 8012f0e:	f024 0408 	bic.w	r4, r4, #8
 8012f12:	0424      	lsls	r4, r4, #16
 8012f14:	0c24      	lsrs	r4, r4, #16
 8012f16:	431c      	orrs	r4, r3
 8012f18:	4314      	orrs	r4, r2
 8012f1a:	430c      	orrs	r4, r1
 8012f1c:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8012f20:	61c4      	str	r4, [r0, #28]
 8012f22:	bd10      	pop	{r4, pc}

08012f24 <i2s_psc_config>:
 8012f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f28:	4698      	mov	r8, r3
 8012f2a:	2302      	movs	r3, #2
 8012f2c:	6203      	str	r3, [r0, #32]
 8012f2e:	4b26      	ldr	r3, [pc, #152]	; (8012fc8 <i2s_psc_config+0xa4>)
 8012f30:	4617      	mov	r7, r2
 8012f32:	4298      	cmp	r0, r3
 8012f34:	bf0c      	ite	eq
 8012f36:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 8012f3a:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 8012f3e:	4a23      	ldr	r2, [pc, #140]	; (8012fcc <i2s_psc_config+0xa8>)
 8012f40:	4605      	mov	r5, r0
 8012f42:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8012f44:	460e      	mov	r6, r1
 8012f46:	4018      	ands	r0, r3
 8012f48:	d036      	beq.n	8012fb8 <i2s_psc_config+0x94>
 8012f4a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8012f4c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8012f50:	1f99      	subs	r1, r3, #6
 8012f52:	2908      	cmp	r1, #8
 8012f54:	d82c      	bhi.n	8012fb0 <i2s_psc_config+0x8c>
 8012f56:	3302      	adds	r3, #2
 8012f58:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8012f5a:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8012f5e:	1c42      	adds	r2, r0, #1
 8012f60:	481b      	ldr	r0, [pc, #108]	; (8012fd0 <i2s_psc_config+0xac>)
 8012f62:	fbb0 f0f2 	udiv	r0, r0, r2
 8012f66:	4358      	muls	r0, r3
 8012f68:	0040      	lsls	r0, r0, #1
 8012f6a:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 8012f6e:	f04f 010a 	mov.w	r1, #10
 8012f72:	d124      	bne.n	8012fbe <i2s_psc_config+0x9a>
 8012f74:	0a04      	lsrs	r4, r0, #8
 8012f76:	434c      	muls	r4, r1
 8012f78:	fbb4 f4f6 	udiv	r4, r4, r6
 8012f7c:	260a      	movs	r6, #10
 8012f7e:	3405      	adds	r4, #5
 8012f80:	fbb4 f4f6 	udiv	r4, r4, r6
 8012f84:	f004 0301 	and.w	r3, r4, #1
 8012f88:	0864      	lsrs	r4, r4, #1
 8012f8a:	1ea2      	subs	r2, r4, #2
 8012f8c:	2afd      	cmp	r2, #253	; 0xfd
 8012f8e:	bf86      	itte	hi
 8012f90:	2300      	movhi	r3, #0
 8012f92:	2402      	movhi	r4, #2
 8012f94:	021b      	lslls	r3, r3, #8
 8012f96:	431c      	orrs	r4, r3
 8012f98:	ea44 0408 	orr.w	r4, r4, r8
 8012f9c:	622c      	str	r4, [r5, #32]
 8012f9e:	69eb      	ldr	r3, [r5, #28]
 8012fa0:	f023 0307 	bic.w	r3, r3, #7
 8012fa4:	61eb      	str	r3, [r5, #28]
 8012fa6:	69ea      	ldr	r2, [r5, #28]
 8012fa8:	4317      	orrs	r7, r2
 8012faa:	61ef      	str	r7, [r5, #28]
 8012fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012fb0:	2b0f      	cmp	r3, #15
 8012fb2:	bf08      	it	eq
 8012fb4:	2314      	moveq	r3, #20
 8012fb6:	e7cf      	b.n	8012f58 <i2s_psc_config+0x34>
 8012fb8:	f7fe fbd2 	bl	8011760 <rcu_clock_freq_get>
 8012fbc:	e7d5      	b.n	8012f6a <i2s_psc_config+0x46>
 8012fbe:	b90f      	cbnz	r7, 8012fc4 <i2s_psc_config+0xa0>
 8012fc0:	0944      	lsrs	r4, r0, #5
 8012fc2:	e7d8      	b.n	8012f76 <i2s_psc_config+0x52>
 8012fc4:	0984      	lsrs	r4, r0, #6
 8012fc6:	e7d6      	b.n	8012f76 <i2s_psc_config+0x52>
 8012fc8:	40003800 	andmi	r3, r0, r0, lsl #16
 8012fcc:	40021000 	andmi	r1, r2, r0
 8012fd0:	017d7840 	cmneq	sp, r0, asr #16

08012fd4 <i2s_enable>:
 8012fd4:	69c3      	ldr	r3, [r0, #28]
 8012fd6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8012fda:	61c3      	str	r3, [r0, #28]
 8012fdc:	4770      	bx	lr

08012fde <i2s_disable>:
 8012fde:	69c3      	ldr	r3, [r0, #28]
 8012fe0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8012fe4:	61c3      	str	r3, [r0, #28]
 8012fe6:	4770      	bx	lr

08012fe8 <spi_dma_enable>:
 8012fe8:	6843      	ldr	r3, [r0, #4]
 8012fea:	b919      	cbnz	r1, 8012ff4 <spi_dma_enable+0xc>
 8012fec:	f043 0302 	orr.w	r3, r3, #2
 8012ff0:	6043      	str	r3, [r0, #4]
 8012ff2:	4770      	bx	lr
 8012ff4:	f043 0301 	orr.w	r3, r3, #1
 8012ff8:	e7fa      	b.n	8012ff0 <spi_dma_enable+0x8>
	...

Disassembly of section .rodata:

08012ffc <vtable for DisplayHandler-0x11c>:
 8012ffc:	00000003 	andeq	r0, r0, r3
 8013000:	000000aa 	andeq	r0, r0, sl, lsr #1
 8013004:	00000006 	andeq	r0, r0, r6
 8013008:	00000000 	andeq	r0, r0, r0
 801300c:	01ff0000 	mvnseq	r0, r0
 8013010:	00000001 	andeq	r0, r0, r1
 8013014:	00000001 	andeq	r0, r0, r1
 8013018:	00000001 	andeq	r0, r0, r1
	...
 8013024:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013028:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801302c:	00000000 	andeq	r0, r0, r0
 8013030:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013034:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013038:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 801303c:	70797464 	rsbsvc	r7, r9, r4, ror #8
 8013040:	00690065 	rsbeq	r0, r9, r5, rrx
 8013044:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013048:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 801304c:	756f6364 	strbvc	r6, [pc, #-868]!	; 8012cf0 <enet_rxframe_drop+0x18>
 8013050:	2f00746e 	svccs	0x0000746e
 8013054:	6f666e69 	svcvs	0x00666e69
 8013058:	6f72672f 	svcvs	0x0072672f
 801305c:	6f637075 	svcvs	0x00637075
 8013060:	00746e75 	rsbseq	r6, r4, r5, ror lr
 8013064:	343a3531 	ldrtcc	r3, [sl], #-1329	; 0xfffffacf
 8013068:	30353a39 	eorscc	r3, r5, r9, lsr sl
 801306c:	6e614a00 	vmulvs.f32	s9, s2, s0
 8013070:	20343120 	eorscs	r3, r4, r0, lsr #2
 8013074:	32323032 	eorscc	r3, r2, #50	; 0x32
 8013078:	43534f00 	cmpmi	r3, #0, 30
 801307c:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8013080:	20726576 	rsbscs	r6, r2, r6, ror r5
 8013084:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8013088:	7869506d 	stmdavc	r9!, {r0, r2, r3, r5, r6, ip, lr}^
 801308c:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8013090:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8013094:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8013098:	317b2072 	cmncc	fp, r2, ror r0
 801309c:	6e552078 	mrcvs	0, 2, r2, cr5, cr8, {3}
 80130a0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80130a4:	1b7d6573 	blne	9f6c678 <__exidx_end+0x1f578ac>
 80130a8:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 80130ac:	6f5f2e00 	svcvs	0x005f2e00
 80130b0:	74006373 	strvc	r6, [r0], #-883	; 0xfffffc8d
 80130b4:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
 80130b8:	76726573 			; <UNDEFINED> instruction: 0x76726573
 80130bc:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
 80130c0:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 80130c4:	6f6e0070 	svcvs	0x006e0070
 80130c8:	4f3d6564 	svcmi	0x003d6564
 80130cc:	53204353 			; <UNDEFINED> instruction: 0x53204353
 80130d0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 80130d4:	73250072 			; <UNDEFINED> instruction: 0x73250072
 80130d8:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 80130dc:	00642547 	rsbeq	r2, r4, r7, asr #10
 80130e0:	2043534f 	subcs	r5, r3, pc, asr #6
 80130e4:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80130e8:	0031206c 	eorseq	r2, r1, ip, rrx
 80130ec:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80130f0:	37303146 	ldrcc	r3, [r0, -r6, asr #2]!
 80130f4:	50490052 	subpl	r0, r9, r2, asr r0
 80130f8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80130fc:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013100:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013104:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013108:	3a6e4900 	bcc	9ba5510 <__exidx_end+0x1b90744>
 801310c:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8013110:	3a74754f 	bcc	9d30654 <__exidx_end+0x1d1b888>
 8013114:	00642520 	rsbeq	r2, r4, r0, lsr #10

08013118 <vtable for DisplayHandler>:
	...
 8013120:	08007f1b 	stmdaeq	r0, {r0, r1, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8013124:	08007f43 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, fp, ip, sp, lr}
 8013128:	08008025 	stmdaeq	r0, {r0, r2, r5, pc}

0801312c <vtable for PixelDmxStartStop>:
	...
 8013134:	08007f1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 8013138:	08007f5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 801313c:	08007f21 	stmdaeq	r0, {r0, r5, r8, r9, sl, fp, ip, sp, lr}
 8013140:	08007f31 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, fp, ip, sp, lr}

08013144 <vtable for Handler>:
	...
 801314c:	08007f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, sp, lr}
 8013150:	08007f4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8013154:	080085c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, pc}
 8013158:	080085bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, pc}
 801315c:	08007f69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}

08013160 <CSWTCH.66>:
 8013160:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8013164:	 	eorcc	r3, lr, r6, asr #2

08013165 <SOFTWARE_VERSION>:
 8013165:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8013169:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 801316d:	642f0031 	strtvs	r0, [pc], #-49	; 8013175 <SOFTWARE_VERSION+0x10>
 8013171:	2f31786d 	svccs	0x0031786d
 8013175:	322f002a 	eorcc	r0, pc, #42	; 0x2a
 8013179:	6d642f00 	stclvs	15, cr2, [r4, #-0]
 801317d:	622f3178 	eorvs	r3, pc, #120, 2
 8013181:	6b63616c 	blvs	98eb739 <__exidx_end+0x18d696d>
 8013185:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8013189:	00302e31 	eorseq	r2, r0, r1, lsr lr
 801318d:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
 8013191:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 8013195:	33444700 	movtcc	r4, #18176	; 0x4700
 8013199:	2f004632 	svccs	0x00004632
 801319d:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80131a1:	6f702f00 	svcvs	0x00702f00
 80131a5:	2f00676e 	svccs	0x0000676e
 80131a9:	6f666e69 	svcvs	0x00666e69
 80131ad:	00736f2f 	rsbseq	r6, r3, pc, lsr #30
 80131b1:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 80131b5:	6f6d2f6f 	svcvs	0x006d2f6f
 80131b9:	006c6564 	rsbeq	r6, ip, r4, ror #10
 80131bd:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 80131c1:	6f732f6f 	svcvs	0x00732f6f
 80131c5:	65590063 	ldrbvs	r0, [r9, #-99]	; 0xffffff9d
 80131c9:	6f4e0073 	svcvs	0x004e0073
 80131cd:	43534f00 	cmpmi	r3, #0, 30
 80131d1:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80131d5:	0a726576 	beq	9cac7b5 <__exidx_end+0x1c979e9>
 80131d9:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 80131dd:	696d6f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80131e1:	5020676e 	eorpl	r6, r0, lr, ror #14
 80131e5:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80131e9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80131ed:	3a202020 	bcc	881b275 <__exidx_end+0x8064a9>
 80131f1:	0a642520 	beq	991c679 <__exidx_end+0x19078ad>
 80131f5:	754f2000 	strbvc	r2, [pc, #-0]	; 80131fd <SOFTWARE_VERSION+0x98>
 80131f9:	696f6774 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
 80131fd:	5020676e 	eorpl	r6, r0, lr, ror #14
 8013201:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8013205:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013209:	3a202020 	bcc	881b291 <__exidx_end+0x8064c5>
 801320d:	0a642520 	beq	991c695 <__exidx_end+0x19078c9>
 8013211:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8013215:	61502058 	cmpvs	r0, r8, asr r0
 8013219:	20206874 	eorcs	r6, r0, r4, ror r8
 801321d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013221:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013225:	3a202020 	bcc	881b2ad <__exidx_end+0x8064e1>
 8013229:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 801322d:	73255b5d 			; <UNDEFINED> instruction: 0x73255b5d
 8013231:	20000a5d 	andcs	r0, r0, sp, asr sl
 8013235:	616c4220 	cmnvs	ip, r0, lsr #4
 8013239:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 80126de <enet_descriptors_chain_init+0x62>
 801323d:	61502074 	cmpvs	r0, r4, ror r0
 8013241:	20206874 	eorcs	r6, r0, r4, ror r8
 8013245:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013249:	5b203a20 	blpl	8821ad1 <__exidx_end+0x80cd05>
 801324d:	0a5d7325 	beq	976fee9 <__exidx_end+0x175b11d>
 8013251:	61502000 	cmpvs	r0, r0
 8013255:	61697472 	smcvs	38722	; 0x9742
 8013259:	7254206c 	subsvc	r2, r4, #108	; 0x6c
 801325d:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8013261:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8013265:	3a206e6f 	bcc	882ec29 <__exidx_end+0x819e5d>
 8013269:	0a732520 	beq	9cdc6f1 <__exidx_end+0x1cc7925>
	...

0801326e <OscServerMsgConst::START>:
 801326e:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8013272:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8013276:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 801327a:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 801327e:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8013282:	00726576 	rsbseq	r6, r2, r6, ror r5

08013286 <OscServerMsgConst::PARAMS>:
 8013286:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801328a:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801328e:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8013292:	2043534f 	subcs	r5, r3, pc, asr #6
 8013296:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801329a:	 	svcmi	0x00007265

0801329d <OscServerMsgConst::STARTED>:
 801329d:	2043534f 	subcs	r5, r3, pc, asr #6
 80132a1:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80132a5:	73207265 			; <UNDEFINED> instruction: 0x73207265
 80132a9:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80132ad:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 80132b1:	3a227325 	bcc	88aff4d <__exidx_end+0x89b181>
 80132b5:	002c6425 	eoreq	r6, ip, r5, lsr #8
 80132b9:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80132bd:	000a6425 	andeq	r6, sl, r5, lsr #8
 80132c1:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80132c5:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 80132c9:	23002c22 	movwcs	r2, #3106	; 0xc22
 80132cd:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80132d1:	 	andvc	r0, r0, r3, ror sl

080132d4 <OscServerParamsConst::TRANSMISSION>:
 80132d4:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 80132d8:	5f6c6169 	svcpl	0x006c6169
 80132dc:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 80132e0:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80132e4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

080132e9 <OscServerParamsConst::PATH_BLACKOUT>:
 80132e9:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80132ed:	616c625f 	cmnvs	ip, pc, asr r2
 80132f1:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8012796 <enet_frame_transmit+0xa>
 80132f5:	 	cmnvs	r0, r4, ror r0

080132f7 <OscServerParamsConst::PATH>:
 80132f7:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

080132fc <OscServerParamsConst::FILE_NAME>:
 80132fc:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8013300:	00747874 	rsbseq	r7, r4, r4, ror r8

08013304 <OscServerParamsConst::PATH_INFO>:
 8013304:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8013308:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 801330c:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

0801330e <OscParamsConst::INCOMING_PORT>:
 801330e:	6f636e69 	svcvs	0x00636e69
 8013312:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8013316:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801331a:	 	strbvc	r0, [pc, #-116]!	; 80132ae <OscServerMsgConst::STARTED+0x11>

0801331c <OscParamsConst::OUTGOING_PORT>:
 801331c:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8013320:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8013324:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013328:	00000074 	andeq	r0, r0, r4, ror r0

0801332c <vtable for WS28xxDmx>:
	...
 8013334:	08009aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip, pc}
 8013338:	08009acd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, fp, ip, pc}
 801333c:	08009b05 	stmdaeq	r0, {r0, r2, r8, r9, fp, ip, pc}
 8013340:	08009b4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, fp, ip, pc}
 8013344:	08009bb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, fp, ip, pc}
 8013348:	08009adf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r9, fp, ip, pc}
 801334c:	0800a46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, sp, pc}
 8013350:	08009b1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp, ip, pc}
 8013354:	08009aa3 	stmdaeq	r0, {r0, r1, r5, r7, r9, fp, ip, pc}
 8013358:	08009aa7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, fp, ip, pc}
 801335c:	08009b77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, fp, ip, pc}
 8013360:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013364:	2a2e253a 	bcs	8b9c854 <__exidx_end+0xb87a88>
 8013368:	23002c66 	movwcs	r2, #3174	; 0xc66
 801336c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8013370:	0a662a2e 	beq	999dc30 <__exidx_end+0x1988e64>
 8013374:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8013378:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 801337c:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 8013380:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 8013384:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013388:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 801338c:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8013390:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 8013394:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 8013398:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 801339c:	47002973 	smlsdxmi	r0, r3, r9, r2
 80133a0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 80133a4:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80133a8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80133ac:	6162206b 	cmnvs	r2, fp, rrx
 80133b0:	20646573 	rsbcs	r6, r4, r3, ror r5
 80133b4:	70696863 	rsbvc	r6, r9, r3, ror #16
 80133b8:	50410073 	subpl	r0, r1, r3, ror r0
 80133bc:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 80133c0:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 80133c4:	00323238 	eorseq	r3, r2, r8, lsr r2
 80133c8:	00584d44 	subseq	r4, r8, r4, asr #26
 80133cc:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 80133d0:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 80133d4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 80133d8:	78695000 	stmdavc	r9!, {ip, lr}^
 80133dc:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 80133e0:	7020584d 	eorvc	r5, r0, sp, asr #16
 80133e4:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 80133e8:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 80133ec:	20000a73 	andcs	r0, r0, r3, ror sl
 80133f0:	756f7247 	strbvc	r7, [pc, #-583]!	; 80131b1 <SOFTWARE_VERSION+0x4c>
 80133f4:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80133f8:	756f6320 	strbvc	r6, [pc, #-800]!	; 80130e0 <_etext+0xe4>
 80133fc:	3a20746e 	bcc	88305bc <__exidx_end+0x81b7f0>
 8013400:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8013404:	6f72475b 	svcvs	0x0072475b
 8013408:	20737075 	rsbscs	r7, r3, r5, ror r0
 801340c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013410:	55000a5d 	strpl	r0, [r0, #-2653]	; 0xfffff5a3
 8013414:	6f6e6b6e 	svcvs	0x006e6b6e
 8013418:	55006e77 	strpl	r6, [r0, #-3703]	; 0xfffff189
 801341c:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
 8013420:	64656e69 	strbtvs	r6, [r5], #-3689	; 0xfffff197
	...

08013425 <PixelType::MAPS>:
 8013425:	00424752 	subeq	r4, r2, r2, asr r7
 8013429:	00474252 	subeq	r4, r7, r2, asr r2
 801342d:	00425247 	subeq	r5, r2, r7, asr #4
 8013431:	00524247 	subseq	r4, r2, r7, asr #4
 8013435:	00475242 	subeq	r5, r7, r2, asr #4
 8013439:	00524742 	subseq	r4, r2, r2, asr #14

0801343d <PixelType::TYPES>:
 801343d:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013441:	00003130 	andeq	r3, r0, r0, lsr r1
 8013445:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013449:	00003131 	andeq	r3, r0, r1, lsr r1
 801344d:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013451:	00003231 	andeq	r3, r0, r1, lsr r2
 8013455:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013459:	00423231 	subeq	r3, r2, r1, lsr r2
 801345d:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013461:	00003331 	andeq	r3, r0, r1, lsr r3
 8013465:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8013469:	00003531 	andeq	r3, r0, r1, lsr r5
 801346d:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8013471:	00003231 	andeq	r3, r0, r1, lsr r2
 8013475:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8013479:	00573231 	subseq	r3, r7, r1, lsr r2
 801347d:	31534355 	cmpcc	r3, r5, asr r3
 8013481:	00333039 	eorseq	r3, r3, r9, lsr r0
 8013485:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8013489:	00333039 	eorseq	r3, r3, r9, lsr r0
 801348d:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8013491:	00003231 	andeq	r3, r0, r1, lsr r2
 8013495:	31415041 	cmpcc	r1, r1, asr #32
 8013499:	00003230 	andeq	r3, r0, r0, lsr r2
 801349d:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80134a1:	00003232 	andeq	r3, r0, r2, lsr r2
 80134a5:	31383950 	teqcc	r8, r0, asr r9
 80134a9:	00000033 	andeq	r0, r0, r3, lsr r0
 80134ad:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80134b1:	6170206c 	cmnvs	r0, ip, rrx
 80134b5:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 80134b9:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
 80134bd:	5420000a 	strtpl	r0, [r0], #-10
 80134c1:	20657079 	rsbcs	r7, r5, r9, ror r0
 80134c5:	3a202020 	bcc	881b54d <__exidx_end+0x806781>
 80134c9:	20732520 	rsbscs	r2, r3, r0, lsr #10
 80134cd:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 80134d1:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 80134d5:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 80134d9:	3a202020 	bcc	881b561 <__exidx_end+0x806795>
 80134dd:	0a642520 	beq	991c965 <__exidx_end+0x1907b99>
 80134e1:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80134e5:	6e697070 	mcrvs	0, 3, r7, cr9, cr0, {3}
 80134e9:	203a2067 	eorscs	r2, sl, r7, rrx
 80134ed:	5b207325 	blpl	8830189 <__exidx_end+0x81b3bd>
 80134f1:	0a5d6425 	beq	976c58d <__exidx_end+0x17577c1>
 80134f5:	30542000 	subscc	r2, r4, r0
 80134f9:	20202048 	eorcs	r2, r0, r8, asr #32
 80134fd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013501:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 8013505:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8013509:	0a5d5825 	beq	97695a5 <__exidx_end+0x17547d9>
 801350d:	31542000 	cmpcc	r4, r0
 8013511:	20202048 	eorcs	r2, r0, r8, asr #32
 8013515:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013519:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 801351d:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8013521:	0a5d5825 	beq	97695bd <__exidx_end+0x17547f1>
 8013525:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8013529:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801352d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013531:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8013535:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8013539:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 801353d:	6425000a 	strtvs	r0, [r5], #-10
 8013541:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013545:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013549:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 801354d:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8013551:	000a6425 	andeq	r6, sl, r5, lsr #8
 8013555:	4f006e4f 	svcmi	0x00006e4f
 8013559:	64006666 	strvs	r6, [r0], #-1638	; 0xfffff99a
 801355d:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8013561:	253a7961 	ldrcs	r7, [sl, #-2401]!	; 0xfffff69f
 8013565:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8013569:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801356d:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8013571:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8013575:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013579:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 801357d:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 8013581:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8013585:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 8013589:	64000a74 	strvs	r0, [r0], #-2676	; 0xfffff58c
 801358d:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8013591:	00237961 	eoreq	r7, r3, r1, ror #18
 8013595:	4f525245 	svcmi	0x00525245
 8013599:	0a3f2352 	beq	8fdc2e9 <__exidx_end+0xfc751d>
 801359d:	52524500 	subspl	r4, r2, #0, 10
 80135a1:	2123524f 			; <UNDEFINED> instruction: 0x2123524f
 80135a5:	6572000a 	ldrbvs	r0, [r2, #-10]!
 80135a9:	746f6f62 	strbtvc	r6, [pc], #-3938	; 80135b1 <PixelType::TYPES+0x174>
 80135ad:	6c002323 	stcvs	3, cr2, [r0], {35}	; 0x23
 80135b1:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 80135b5:	73696c00 	cmnvc	r9, #0, 24
 80135b9:	002a2374 	eoreq	r2, sl, r4, ror r3
 80135bd:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 80135c1:	0023656d 	eoreq	r6, r3, sp, ror #10
 80135c5:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80135c9:	236e6f69 	cmncs	lr, #420	; 0x1a4
 80135cd:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 80135d1:	61660023 	cmnvs	r6, r3, lsr #32
 80135d5:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80135d9:	00232379 	eoreq	r2, r3, r9, ror r3

080135dd <s_Node>:
 80135dd:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80135e1:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80135ed:	41730000 	cmnmi	r3, r0
 80135f1:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80135f5:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8013601:	2043534f 	subcs	r5, r3, pc, asr #6
 8013605:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013609:	00007265 	andeq	r7, r0, r5, ror #4
 801360d:	00000000 	andeq	r0, r0, r0
 8013611:	544c0000 	strbpl	r0, [ip], #-0
 8013615:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8013625:	2043534f 	subcs	r5, r3, pc, asr #6
 8013629:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 801362d:	0000746e 	andeq	r7, r0, lr, ror #8
 8013631:	00000000 	andeq	r0, r0, r0
 8013635:	44520000 	ldrbmi	r0, [r2], #-0
 8013639:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 801363d:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8013641:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8013645:	0000796c 	andeq	r7, r0, ip, ror #18
 8013649:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 801364d:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8013659:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 801365d:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801366d:	00504444 	subseq	r4, r0, r4, asr #8
	...

0801367f <s_Output>:
 801367f:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801368b:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8013697:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801369b:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801369f:	00000000 	andeq	r0, r0, r0
 80136a3:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80136a7:	0000006c 	andeq	r0, r0, ip, rrx
 80136ab:	00000000 	andeq	r0, r0, r0
 80136af:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80136b3:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80136b7:	00000000 	andeq	r0, r0, r0
 80136bb:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80136c7:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80136cb:	00006769 	andeq	r6, r0, r9, ror #14
 80136cf:	00000000 	andeq	r0, r0, r0
 80136d3:	70657453 	rsbvc	r7, r5, r3, asr r4
 80136d7:	00726570 	rsbseq	r6, r2, r0, ror r5
 80136db:	00000000 	andeq	r0, r0, r0
 80136df:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80136e3:	00007265 	andeq	r7, r0, r5, ror #4
 80136e7:	00000000 	andeq	r0, r0, r0
 80136eb:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80136ef:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80136f3:	00000000 	andeq	r0, r0, r0
 80136f7:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80136fb:	00006c61 	andeq	r6, r0, r1, ror #24
 80136ff:	00000000 	andeq	r0, r0, r0
 8013703:	20424752 	subcs	r4, r2, r2, asr r7
 8013707:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801370b:	0000006c 	andeq	r0, r0, ip, rrx
	...

08013710 <RemoteConfig::s_GET>:
 8013710:	0800c489 	stmdaeq	r0, {r0, r3, r7, sl, lr, pc}
 8013714:	00000000 	andeq	r0, r0, r0
 8013718:	080135a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, ip, sp}
 801371c:	00000008 	andeq	r0, r0, r8
 8013720:	0800ba31 	stmdaeq	r0, {r0, r4, r5, r9, fp, ip, sp, pc}
 8013724:	00000000 	andeq	r0, r0, r0
 8013728:	080135b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip, sp}
 801372c:	00000005 	andeq	r0, r0, r5
 8013730:	0800ba31 	stmdaeq	r0, {r0, r4, r5, r9, fp, ip, sp, pc}
 8013734:	00000000 	andeq	r0, r0, r0
 8013738:	080135b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, sl, ip, sp}
 801373c:	00000006 	andeq	r0, r0, r6
 8013740:	0800bba5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, fp, ip, sp, pc}
 8013744:	00000000 	andeq	r0, r0, r0
 8013748:	080135bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, ip, sp}
 801374c:	00000007 	andeq	r0, r0, r7
 8013750:	0800bb65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, ip, sp, pc}
 8013754:	00000000 	andeq	r0, r0, r0
 8013758:	080135c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, ip, sp}
 801375c:	00000008 	andeq	r0, r0, r8
 8013760:	0800bb11 	stmdaeq	r0, {r0, r4, r8, r9, fp, ip, sp, pc}
 8013764:	00000000 	andeq	r0, r0, r0
 8013768:	0801358c 	stmdaeq	r1, {r2, r3, r7, r8, sl, ip, sp}
 801376c:	00000008 	andeq	r0, r0, r8
 8013770:	0800bdf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 8013774:	00000000 	andeq	r0, r0, r0
 8013778:	080135ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp}
 801377c:	00010004 	andeq	r0, r1, r4
 8013780:	0800c101 	stmdaeq	r0, {r0, r8, lr, pc}
 8013784:	00000000 	andeq	r0, r0, r0
 8013788:	080135d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp}
 801378c:	00000009 	andeq	r0, r0, r9
 8013790:	6f626552 	svcvs	0x00626552
 8013794:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8013798:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 801379c:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80137a0:	6f6f6265 	svcvs	0x006f6265
 80137a4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80137a8:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80137ac:	6f637200 	svcvs	0x00637200
 80137b0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80137b4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137b8:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80137bc:	6b726f77 	blvs	9caf5a0 <__exidx_end+0x1c9a7d4>
 80137c0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137c4:	63736f00 	cmnvs	r3, #0, 30
 80137c8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137cc:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 80137d0:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80137d4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80137d8:	00000000 	andeq	r0, r0, r0

080137dc <RemoteConfig::s_TXT>:
 80137dc:	0800be01 	stmdaeq	r0, {r0, r9, sl, fp, ip, sp, pc}
 80137e0:	00000000 	andeq	r0, r0, r0
 80137e4:	0800c059 	stmdaeq	r0, {r0, r3, r4, r6, lr, pc}
 80137e8:	00000000 	andeq	r0, r0, r0
 80137ec:	080137ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, ip, sp}
 80137f0:	0000000b 	andeq	r0, r0, fp
 80137f4:	0000000c 	andeq	r0, r0, ip
 80137f8:	0800be2d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, fp, ip, sp, pc}
 80137fc:	00000000 	andeq	r0, r0, r0
 8013800:	0800c089 	stmdaeq	r0, {r0, r3, r7, lr, pc}
 8013804:	00000000 	andeq	r0, r0, r0
 8013808:	080137b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, ip, sp}
 801380c:	0000000b 	andeq	r0, r0, fp
 8013810:	00000000 	andeq	r0, r0, r0
 8013814:	0800be59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, ip, sp, pc}
 8013818:	00000000 	andeq	r0, r0, r0
 801381c:	0800c0b1 	stmdaeq	r0, {r0, r4, r5, r7, lr, pc}
 8013820:	00000000 	andeq	r0, r0, r0
 8013824:	080137c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, ip, sp}
 8013828:	00000007 	andeq	r0, r0, r7
 801382c:	00000008 	andeq	r0, r0, r8
 8013830:	0800be85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, pc}
 8013834:	00000000 	andeq	r0, r0, r0
 8013838:	0800c0d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, lr, pc}
 801383c:	00000000 	andeq	r0, r0, r0
 8013840:	080137cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, ip, sp}
 8013844:	0000000b 	andeq	r0, r0, fp
 8013848:	00000003 	andeq	r0, r0, r3
 801384c:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8013850:	4f500054 	svcmi	0x00500054
 8013854:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8013858:	00505454 	subseq	r5, r0, r4, asr r4
 801385c:	31000a20 	tstcc	r0, r0, lsr #20
 8013860:	3a00312e 	bcc	801fd20 <__exidx_end+0xaf54>
 8013864:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8013868:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 801386c:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8013870:	3b200065 	blcc	8813a0c <__exidx_end+0x7fec40>
 8013874:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8013878:	6163696c 	cmnvs	r3, ip, ror #18
 801387c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013880:	6f736a2f 	svcvs	0x00736a2f
 8013884:	6f43006e 	svcvs	0x0043006e
 8013888:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801388c:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013890:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013894:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8013898:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 801389c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80138a0:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 80138a4:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80138a8:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 80138ac:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80138b0:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80138b4:	2f00736a 	svccs	0x0000736a
 80138b8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80138bc:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 80138c0:	76007473 			; <UNDEFINED> instruction: 0x76007473
 80138c4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80138c8:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 80138cc:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80138d0:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 80138d4:	616c7073 	smcvs	50947	; 0xc703
 80138d8:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80138dc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80138e0:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80138e4:	6f736a2f 	svcvs	0x00736a2f
 80138e8:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80138ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80138f0:	62657200 	rsbvs	r7, r5, #0, 4
 80138f4:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80138f8:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80138fc:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8013900:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8013904:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8013908:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 801390c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013910:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013914:	0a3e6c6d 	beq	8faead0 <__exidx_end+0xf99d04>
 8013918:	6165683c 	cmnvs	r5, ip, lsr r8
 801391c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013920:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013924:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8013928:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 801392c:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013930:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013934:	6165682f 	cmnvs	r5, pc, lsr #16
 8013938:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 801393c:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013940:	31683c3e 	cmncc	r8, lr, lsr ip
 8013944:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8013948:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 801394c:	6f622f3c 	svcvs	0x00622f3c
 8013950:	0a3e7964 	beq	8fb1ee8 <__exidx_end+0xf9d11c>
 8013954:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8013958:	0a3e6c6d 	beq	8faeb14 <__exidx_end+0xf99d48>
 801395c:	71655200 	cmnvc	r5, r0, lsl #4
 8013960:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8013964:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8013968:	20797469 	rsbscs	r7, r9, r9, ror #8
 801396c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013970:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8013974:	6f4e0065 	svcvs	0x004e0065
 8013978:	6f462074 	svcvs	0x00462074
 801397c:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8013980:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8013984:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8013988:	20495255 	subcs	r5, r9, r5, asr r2
 801398c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013990:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8013994:	72655600 	rsbvc	r5, r5, #0, 12
 8013998:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801399c:	746f4e20 	strbtvc	r4, [pc], #-3616	; 80139a4 <RemoteConfig::s_TXT+0x1c8>
 80139a0:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 80139a4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80139a8:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 80139ac:	6f687465 	svcvs	0x00687465
 80139b0:	6f4e2064 	svcvs	0x004e2064
 80139b4:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 80139b8:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 80139bc:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80139c0:	61420064 	cmpvs	r2, r4, rrx
 80139c4:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 80139c8:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80139cc:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 80139d0:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 80139d4:	7245206e 	subvc	r2, r5, #110	; 0x6e
 80139d8:	00726f72 	rsbseq	r6, r2, r2, ror pc
 80139dc:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 80139e0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 80139e4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80139e8:	20726576 	rsbscs	r6, r2, r6, ror r5
 80139ec:	6f727245 	svcvs	0x00727245
 80139f0:	4b4f0072 	blmi	93d3bc0 <__exidx_end+0x13bedf4>
 80139f4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80139f8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80139fc:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8013a00:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013a04:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013a08:	0a3e6c6d 	beq	8faebc4 <__exidx_end+0xf99df8>
 8013a0c:	6165683c 	cmnvs	r5, ip, lsr r8
 8013a10:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013a14:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013a18:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8013a1c:	2f3c7325 	svccs	0x003c7325
 8013a20:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013a24:	2f3c3e65 	svccs	0x003c3e65
 8013a28:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013a2c:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8013a30:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013a34:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8013a38:	2f3c7325 	svccs	0x003c7325
 8013a3c:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8013a40:	646f622f 	strbtvs	r6, [pc], #-559	; 8013a48 <RemoteConfig::s_TXT+0x26c>
 8013a44:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8013a48:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013a4c:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8013a50:	50545448 	subspl	r5, r4, r8, asr #8
 8013a54:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8013a58:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8013a5c:	0a0d7325 	beq	83706f8 <__exidx_end+0x35b92c>
 8013a60:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013a64:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013a68:	0a0d7325 	beq	8370704 <__exidx_end+0x35b938>
 8013a6c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013a70:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013a74:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8013a78:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013a7c:	6f430a0d 	svcvs	0x00430a0d
 8013a80:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013a84:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013a88:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013a8c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8013a90:	6f430a0d 	svcvs	0x00430a0d
 8013a94:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8013a98:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013a9c:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8013aa0:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8013aa4:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08013aa8 <contentType>:
 8013aa8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013aac:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013ab0:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8013ac8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013acc:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8013ae8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013aec:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8013af0:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8013af4:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8013b08:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8013b0c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8013b10:	2f6e6f69 	svccs	0x006e6f69
 8013b14:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08013b28 <RemoteConfigConst::PARAMS_DISABLE>:
 8013b28:	61736964 	cmnvs	r3, r4, ror #18
 8013b2c:	00656c62 	rsbeq	r6, r5, r2, ror #24

08013b30 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8013b30:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8013b34:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8013b38:	00747874 	rsbseq	r7, r4, r4, ror r8

08013b3c <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8013b3c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013b40:	5f79616c 	svcpl	0x0079616c
 8013b44:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013b49 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8013b49:	61736964 	cmnvs	r3, r4, ror #18
 8013b4d:	5f656c62 	svcpl	0x00656c62
 8013b51:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8013b55:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013b57 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8013b57:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b5b:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8013b5f:	6f6f6265 	svcvs	0x006f6265
 8013b63:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08013b65 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8013b65:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b69:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8013605 <s_Node+0x28>
 8013b6d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013b71:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013b73 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8013b73:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013b77:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8013b7b:	6f746361 	svcvs	0x00746361
 8013b7f:	7b007972 	blvc	803214f <__exidx_end+0x1d383>
 8013b83:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8013b87:	7b3a2274 	blvc	8e9c55f <__exidx_end+0xe87793>
 8013b8b:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8013b8f:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8013b93:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013b97:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013b9b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8013b9f:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8013ba3:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013ba7:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bab:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8013baf:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013bb3:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013bb7:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bbb:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bbf:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013bc3:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013bc7:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013bcb:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013bcf:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013bd3:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8013bd7:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8013bdb:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8013bdf:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013be3:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013be7:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013beb:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013bef:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013bf3:	616f6222 	cmnvs	pc, r2, lsr #4
 8013bf7:	3a226472 	bcc	88acdc7 <__exidx_end+0x897ffb>
 8013bfb:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013bff:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8013c03:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8013c07:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8013c0b:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8013c0f:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013c13:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013c17:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8013c1b:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8013c1f:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8013c23:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013c27:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8013c2b:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013c2f:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8013c33:	7b000a7d 	blvc	801662f <__exidx_end+0x1863>
 8013c37:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013c3b:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013c3f:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8013c43:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013c47:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8013c4b:	7b3a2273 	blvc	8e9c61f <__exidx_end+0xe87853>
 8013c4f:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8013c53:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013c57:	4f223a22 	svcmi	0x00223a22
 8013c5b:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013c5f:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8013c63:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8013c67:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8013c6b:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8013c6f:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8013c73:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8013c77:	69502058 	ldmdbvs	r0, {r3, r4, r6, sp}^
 8013c7b:	226c6578 	rsbcs	r6, ip, #120, 10	; 0x1e000000
 8013c7f:	656e222c 	strbvs	r2, [lr, #-556]!	; 0xfffffdd4
 8013c83:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013c87:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 8013c8b:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013c8f:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8013c93:	226b726f 	rsbcs	r7, fp, #-268435450	; 0xf0000006
 8013c97:	6372222c 	cmnvs	r2, #44, 4	; 0xc0000002
 8013c9b:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013c9f:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 8013ca3:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013ca7:	6f6d6552 	svcvs	0x006d6552
 8013cab:	63206574 			; <UNDEFINED> instruction: 0x63206574
 8013caf:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013cb3:	61727567 	cmnvs	r2, r7, ror #10
 8013cb7:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013cbb:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

08013cbf <index_html>:
 8013cbf:	4f44213c 	svcmi	0x0044213c
 8013cc3:	50595443 	subspl	r5, r9, r3, asr #8
 8013cc7:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8013ccb:	0a3e6c6d 	beq	8faee87 <__exidx_end+0xf9a0bb>
 8013ccf:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8013cd3:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013cd7:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013cdb:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8013cdf:	6b6e696c 	blvs	9bae297 <__exidx_end+0x1b994cb>
 8013ce3:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8013ce7:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8013ceb:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013cef:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013cf3:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8013cf7:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8013cfb:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8013cff:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8013d03:	20227373 	eorcs	r7, r2, r3, ror r3
 8013d07:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8013d0b:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013d0f:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013d13:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013d17:	0a3e656c 	beq	8fad2cf <__exidx_end+0xf98503>
 8013d1b:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013d1f:	0a3e6461 	beq	8faceab <__exidx_end+0xf980df>
 8013d23:	646f623c 	strbtvs	r6, [pc], #-572	; 8013d2b <index_html+0x6c>
 8013d27:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d2b:	6165683c 	cmnvs	r5, ip, lsr r8
 8013d2f:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8013d33:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8013d37:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8013d3b:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8013d3f:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8013d43:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013d47:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013d4b:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013d4f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013d53:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8013d57:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8013d5b:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8013d5f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8013d63:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8013d67:	6f746365 	svcvs	0x00746365
 8013d6b:	20227972 	eorcs	r7, r2, r2, ror r9
 8013d6f:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013d73:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8013d77:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8013d7b:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013d7f:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8013d83:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8013d87:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8013d8b:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8013d8f:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8013d93:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8013d97:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8013d9b:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8013d9f:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8013da3:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013da7:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8013dab:	20227478 	eorcs	r7, r2, r8, ror r4
 8013daf:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013db3:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8013db7:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8013dbb:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8013dbf:	0a3e656c 	beq	8fad377 <__exidx_end+0xf985ab>
 8013dc3:	6f663c09 	svcvs	0x00663c09
 8013dc7:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8013dcb:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8013dcf:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013dd3:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8013dd7:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013ddb:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8013ddf:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013de3:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8013de7:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013deb:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013def:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8013df3:	20747069 	rsbscs	r7, r4, r9, rrx
 8013df7:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8013dfb:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8013dff:	6a2e7865 	bvs	8bb1f9b <__exidx_end+0xb9d1cf>
 8013e03:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8013e07:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8013e0b:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8013e0f:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8013e13:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013e17:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013e1b:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013e1f:	 	svcvs	0x0062000a

08013e21 <styles_css>:
 8013e21:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013e25:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013e29:	63616220 	cmnvs	r1, #32, 4
 8013e2d:	6f72676b 	svcvs	0x0072676b
 8013e31:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8013e35:	6f6c6f63 	svcvs	0x006c6f63
 8013e39:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e3d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e41:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8013e45:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8013e49:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013e4d:	6f6c6f63 	svcvs	0x006c6f63
 8013e51:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013e55:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013e59:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8013e5d:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8013e61:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8013e65:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8013e69:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8013e6d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013e71:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013e75:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013e79:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013e7d:	0a3b7865 	beq	8ef2019 <__exidx_end+0xedd24d>
 8013e81:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8013e85:	0a7b2069 	beq	9edc031 <__exidx_end+0x1ec7265>
 8013e89:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8013e8d:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8013e91:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8013e95:	6f6e203a 	svcvs	0x006e203a
 8013e99:	0a3b656e 	beq	8eed459 <__exidx_end+0xed868d>
 8013e9d:	616d2020 	cmnvs	sp, r0, lsr #32
 8013ea1:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8013ea5:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8013ea9:	70352078 	eorsvc	r2, r5, r8, ror r0
 8013ead:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8013eb1:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8013eb5:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8013eb9:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013ebd:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013ec1:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013ec5:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013ec9:	0a3b7865 	beq	8ef2065 <__exidx_end+0xedd299>
 8013ecd:	6f622020 	svcvs	0x00622020
 8013ed1:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013ed5:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013ed9:	3a737569 	bcc	9cf1485 <__exidx_end+0x1cdc6b9>
 8013edd:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013ee1:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013ee5:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013ee9:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013eed:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013ef1:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013ef5:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013ef9:	0a3b7870 	beq	8ef20c1 <__exidx_end+0xedd2f5>
 8013efd:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8013f01:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013f05:	0a7b2072 	beq	9edc0d5 <__exidx_end+0x1ec7309>
 8013f09:	69642020 	stmdbvs	r4!, {r5, sp}^
 8013f0d:	616c7073 	smcvs	50947	; 0xc703
 8013f11:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8013f15:	3b78656c 	blcc	9e2d4cd <__exidx_end+0x1e18701>
 8013f19:	6a20200a 	bvs	881bf49 <__exidx_end+0x80717d>
 8013f1d:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8013f21:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8013f25:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013f29:	203a746e 	eorscs	r7, sl, lr, ror #8
 8013f2d:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8013f31:	0a3b7265 	beq	8ef08cd <__exidx_end+0xedbb01>
 8013f35:	6f622020 	svcvs	0x00622020
 8013f39:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8013f3d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8013f41:	3a737569 	bcc	9cf14ed <__exidx_end+0x1cdc721>
 8013f45:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8013f49:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013f4d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013f51:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013f55:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f59:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8013f5d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8013f61:	0a3b7870 	beq	8ef2129 <__exidx_end+0xedd35d>
 8013f65:	 	andge	r0, r0, #512000	; 0x7d000

08013f68 <HttpContent>:
 8013f68:	080138a2 	stmdaeq	r1, {r1, r5, r7, fp, ip, sp}
 8013f6c:	08013e21 	stmdaeq	r1, {r0, r5, r9, sl, fp, ip, sp}
 8013f70:	080138ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, fp, ip, sp}
 8013f74:	08013f80 	stmdaeq	r1, {r7, r8, r9, sl, fp, ip, sp}
 8013f78:	08013896 	stmdaeq	r1, {r1, r2, r4, r7, fp, ip, sp}
 8013f7c:	08013cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, ip, sp}

08013f80 <index_js>:
 8013f80:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8013f84:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8013f88:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8013f8c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8013f90:	534a7465 	movtpl	r7, #42085	; 0xa465
 8013f94:	6a284e4f 	bvs	8a278d8 <__exidx_end+0xa12b0c>
 8013f98:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f9c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8013fa0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8013fa4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8013fa8:	6a2f273d 	bvs	8bddca4 <__exidx_end+0xbc8ed8>
 8013fac:	2f6e6f73 	svccs	0x006e6f73
 8013fb0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8013fb4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8013fb8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8013fbc:	20797274 	rsbscs	r7, r9, r4, ror r2
 8013fc0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8013fc4:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8013fc8:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8013fcc:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8013fd0:	20746961 	rsbscs	r6, r4, r1, ror #18
 8013fd4:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8013fd8:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8013fdc:	0a3b296c 	beq	8ede594 <__exidx_end+0xec97c8>
 8013fe0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8013fe4:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8013fe8:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8013fec:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8013ff0:	73657220 	cmnvc	r5, #32, 4
 8013ff4:	6f736a2e 	svcvs	0x00736a2e
 8013ff8:	3b29286e 	blcc	8a5e1b8 <__exidx_end+0xa493ec>
 8013ffc:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014000:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8014004:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8014008:	6f727265 	svcvs	0x00727265
 801400c:	7b202972 	blvc	881e5dc <__exidx_end+0x809810>
 8014010:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014014:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8014018:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801401c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8014020:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8014024:	3b29726f 	blcc	8a709e8 <__exidx_end+0xa5bc1c>
 8014028:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801402c:	0a0a7d0a 	beq	82b345c <__exidx_end+0x29e690>
 8014030:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014034:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8014038:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801403c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8014040:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014044:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8014048:	20292874 	eorcs	r2, r9, r4, ror r8
 801404c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8014050:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014054:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014058:	6177613d 	cmnvs	r7, sp, lsr r1
 801405c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014060:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014064:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8014068:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801406c:	0a3b2927 	beq	8ede510 <__exidx_end+0xec9744>
 8014070:	6f640909 	svcvs	0x00640909
 8014074:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8014078:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801407c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014080:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014084:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014088:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801408c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8014090:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8014094:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8014098:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801409c:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80140a0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80140a4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80140a8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80140ac:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80140b0:	2b656d61 	blcs	996f63c <__exidx_end+0x195a870>
 80140b4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014034 <index_js+0xb4>
 80140b8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80140bc:	2b223e69 	blcs	88a3a68 <__exidx_end+0x88ec9c>
 80140c0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140c4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80140c8:	6f6e2e74 	svcvs	0x006e2e74
 80140cc:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80140d0:	2b657079 	blcs	99702bc <__exidx_end+0x195b4f0>
 80140d4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014054 <index_js+0xd4>
 80140d8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80140dc:	2b223e69 	blcs	88a3a88 <__exidx_end+0x88ecbc>
 80140e0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80140e4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80140e8:	6f6e2e74 	svcvs	0x006e2e74
 80140ec:	702e6564 	eorvc	r6, lr, r4, ror #10
 80140f0:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 80140f4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80140f8:	2f3c222b 	svccs	0x003c222b
 80140fc:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8014100:	0a7d0a3b 	beq	9f569f4 <__exidx_end+0x1f41c28>
 8014104:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8014108:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801410c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8014110:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014114:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8014118:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801411c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014120:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8014124:	0a7b2029 	beq	9edc1d0 <__exidx_end+0x1ec7404>
 8014128:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801412c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8014130:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014134:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014138:	6177613d 	cmnvs	r7, sp, lsr r1
 801413c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014140:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014144:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8014148:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801414c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014150:	3b292779 	blcc	8a5df3c <__exidx_end+0xa49170>
 8014154:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014158:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801415c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014160:	0a22223d 	beq	889ca5c <__exidx_end+0x887c90>
 8014164:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8014168:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801416c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8014170:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8014174:	6a624f3d 	bvs	98a7e70 <__exidx_end+0x18930a4>
 8014178:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 801417c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8014180:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8014184:	6f746365 	svcvs	0x00746365
 8014188:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 801418c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014190:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8014194:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8014198:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 801419c:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80141a0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80141a4:	6145726f 	cmpvs	r5, pc, ror #4
 80141a8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80141ac:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80141b0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80141b4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80141b8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80141bc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80141c0:	20726176 	rsbscs	r6, r2, r6, ror r1
 80141c4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80141c8:	203d2065 	eorscs	r2, sp, r5, rrx
 80141cc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80141d0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80141d4:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 80141d8:	73656c69 	cmnvc	r5, #26880	; 0x6900
 80141dc:	6b5b5d22 	blvs	96eb66c <__exidx_end+0x16d68a0>
 80141e0:	3b5d7965 	blcc	977277c <__exidx_end+0x175d9b0>
 80141e4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80141e8:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 80141ec:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 80141f0:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 80141f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80141f8:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 80141fc:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8014200:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014204:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8014208:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801420c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014210:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8014214:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014218:	0a3b223e 	beq	8edcb18 <__exidx_end+0xec7d4c>
 801421c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8014220:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8014224:	6f640909 	svcvs	0x00640909
 8014228:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801422c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8014230:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014234:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014238:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801423c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8014240:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014244:	6f746365 	svcvs	0x00746365
 8014248:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801424c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8014250:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8014254:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8014258:	3b6c6d74 	blcc	9b2f830 <__exidx_end+0x1b1aa64>
 801425c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014260:	5f746567 	svcpl	0x00746567
 8014264:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8014268:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801426c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8014270:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8014274:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8014278:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 801427c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8014280:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8014284:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014288:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 801428c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8014290:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014294:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8014298:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801429c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80142a0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80142a4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80142a8:	6177613d 	cmnvs	r7, sp, lsr r1
 80142ac:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80142b0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80142b4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80142b8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80142bc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80142c0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80142c4:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80142c8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80142cc:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 80142d0:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 80142d4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 80142d8:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 80142dc:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 80142e0:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80142e4:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80142e8:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 80142ec:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 80142f0:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 80142f4:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 80142f8:	2b22563e 	blcs	88a9bf8 <__exidx_end+0x894e2c>
 80142fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014300:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014304:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014308:	2b6e6f69 	blcs	9bb00b4 <__exidx_end+0x1b9b2e8>
 801430c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801428c <index_js+0x30c>
 8014310:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014314:	2b223e69 	blcs	88a3cc0 <__exidx_end+0x88eef4>
 8014318:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801431c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014320:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8014324:	61642e64 	cmnvs	r4, r4, ror #28
 8014328:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801432c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014330:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014334:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8014338:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801433c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8014340:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8014344:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8014348:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801434c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8014350:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8014354:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8014358:	6f697372 	svcvs	0x00697372
 801435c:	6f622e6e 	svcvs	0x00622e6e
 8014360:	2b647261 	blcs	9930cec <__exidx_end+0x191bf20>
 8014364:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80142e4 <index_js+0x364>
 8014368:	3b223e69 	blcc	88a3d14 <__exidx_end+0x88ef48>
 801436c:	0a0a7d0a 	beq	82b379c <__exidx_end+0x29e9d0>
 8014370:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014374:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8014378:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801437c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8014380:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8014388 <index_js+0x408>
 8014384:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8014388:	20296c65 	eorcs	r6, r9, r5, ror #24
 801438c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8014390:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8014394:	613d7478 	teqvs	sp, r8, ror r4
 8014398:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801439c:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80143a0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80143a4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80143a8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80143ac:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80143b0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80143b4:	3b22223d 	blcc	889ccb0 <__exidx_end+0x887ee4>
 80143b8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80143bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80143c0:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80143c4:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80143c8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80143cc:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80143d0:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80143d4:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 80143d8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80143dc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80143e0:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80143e4:	0a7b2029 	beq	9edc490 <__exidx_end+0x1ec76c4>
 80143e8:	61760909 	cmnvs	r6, r9, lsl #18
 80143ec:	61762072 	cmnvs	r6, r2, ror r0
 80143f0:	2065756c 	rsbcs	r7, r5, ip, ror #10
 80143f4:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80143f8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80143fc:	6b5b5d6c 	blvs	96eb9b4 <__exidx_end+0x16d6be8>
 8014400:	3b5d7965 	blcc	977299c <__exidx_end+0x175dbd0>
 8014404:	2009090a 	andcs	r0, r9, sl, lsl #18
 8014408:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801440c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8014410:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8014414:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8014418:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801441c:	2f3c222b 	svccs	0x003c222b
 8014420:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8014424:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8014428:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801442c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014430:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8014434:	742f3c3e 	strtvc	r3, [pc], #-3134	; 801443c <index_js+0x4bc>
 8014438:	3b223e72 	blcc	88a3e08 <__exidx_end+0x88f03c>
 801443c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8014440:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8014444:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8014448:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801444c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8014450:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8014454:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8014458:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801445c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8014460:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8014464:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8014468:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801446c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8014470:	0a3b6c6d 	beq	8eef62c <__exidx_end+0xeda860>
 8014474:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8014478:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801447c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8014480:	3b292874 	blcc	8a5e658 <__exidx_end+0xa4988c>
 8014484:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8014488:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 801448c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014490:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014494:	0a3b2928 	beq	8ede93c <__exidx_end+0xec9b70>
 8014498:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801449c:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80144a0:	6f697372 	svcvs	0x00697372
 80144a4:	3b29286e 	blcc	8a5e664 <__exidx_end+0xa49898>
 80144a8:	0000000a 	andeq	r0, r0, sl

080144ac <s_aStorSize>:
 80144ac:	00000060 	andeq	r0, r0, r0, rrx
 80144b0:	00000090 	muleq	r0, r0, r0
 80144b4:	00000020 	andeq	r0, r0, r0, lsr #32
 80144b8:	00000040 	andeq	r0, r0, r0, asr #32
 80144bc:	00000060 	andeq	r0, r0, r0, rrx
 80144c0:	00000040 	andeq	r0, r0, r0, asr #32
 80144c4:	00000020 	andeq	r0, r0, r0, lsr #32
 80144c8:	00000020 	andeq	r0, r0, r0, lsr #32
 80144cc:	000001e0 	andeq	r0, r0, r0, ror #3
 80144d0:	00000040 	andeq	r0, r0, r0, asr #32
 80144d4:	00000020 	andeq	r0, r0, r0, lsr #32
 80144d8:	00000060 	andeq	r0, r0, r0, rrx
 80144dc:	00000030 	andeq	r0, r0, r0, lsr r0
 80144e0:	00000020 	andeq	r0, r0, r0, lsr #32
 80144e4:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80144e8:	00000030 	andeq	r0, r0, r0, lsr r0
 80144ec:	00000040 	andeq	r0, r0, r0, asr #32
 80144f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80144f4:	00000060 	andeq	r0, r0, r0, rrx
 80144f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80144fc:	00000400 	andeq	r0, r0, r0, lsl #8
 8014500:	00000020 	andeq	r0, r0, r0, lsr #32
 8014504:	00000020 	andeq	r0, r0, r0, lsr #32
 8014508:	00000040 	andeq	r0, r0, r0, asr #32
 801450c:	00000060 	andeq	r0, r0, r0, rrx
 8014510:	00000020 	andeq	r0, r0, r0, lsr #32
 8014514:	00000020 	andeq	r0, r0, r0, lsr #32
 8014518:	00000020 	andeq	r0, r0, r0, lsr #32

0801451c <vtable for StoreNetwork>:
	...
 8014524:	0800d115 	stmdaeq	r0, {r0, r2, r4, r8, ip, lr, pc}
 8014528:	0800d229 	stmdaeq	r0, {r0, r3, r5, r9, ip, lr, pc}
 801452c:	0800d11d 	stmdaeq	r0, {r0, r2, r3, r4, r8, ip, lr, pc}
 8014530:	0800d23d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, ip, lr, pc}
 8014534:	0800d1cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, ip, lr, pc}
 8014538:	0800d1a1 	stmdaeq	r0, {r0, r5, r7, r8, ip, lr, pc}
 801453c:	0800d171 	stmdaeq	r0, {r0, r4, r5, r6, r8, ip, lr, pc}
 8014540:	0800d1f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, lr, pc}
 8014544:	0800d141 	stmdaeq	r0, {r0, r6, r8, ip, lr, pc}
 8014548:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801454c:	00000000 	andeq	r0, r0, r0
 8014550:	0800d117 	stmdaeq	r0, {r0, r1, r2, r4, r8, ip, lr, pc}
 8014554:	0800d235 	stmdaeq	r0, {r0, r2, r4, r5, r9, ip, lr, pc}
 8014558:	0800d1f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, ip, lr, pc}
 801455c:	0800d1c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, lr, pc}
 8014560:	0800d199 	stmdaeq	r0, {r0, r3, r4, r7, r8, ip, lr, pc}
 8014564:	0800d221 	stmdaeq	r0, {r0, r5, r9, ip, lr, pc}
 8014568:	0800d169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, lr, pc}

0801456c <vtable for StoreOscServer>:
	...
 8014574:	0800d271 	stmdaeq	r0, {r0, r4, r5, r6, r9, ip, lr, pc}
 8014578:	0800d2b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, ip, lr, pc}
 801457c:	0800d295 	stmdaeq	r0, {r0, r2, r4, r7, r9, ip, lr, pc}
 8014580:	0800d275 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, ip, lr, pc}

08014584 <vtable for StoreRemoteConfig>:
	...
 801458c:	0800d2d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, ip, lr, pc}
 8014590:	0800d321 	stmdaeq	r0, {r0, r5, r8, r9, ip, lr, pc}
 8014594:	0800d2fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, ip, lr, pc}
 8014598:	0800d2dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, ip, lr, pc}

0801459c <vtable for StoreWS28xxDmx>:
	...
 80145a4:	0800d341 	stmdaeq	r0, {r0, r6, r8, r9, ip, lr, pc}
 80145a8:	0800d4b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, ip, lr, pc}
 80145ac:	0800d349 	stmdaeq	r0, {r0, r3, r6, r8, r9, ip, lr, pc}
 80145b0:	0800d4c5 	stmdaeq	r0, {r0, r2, r6, r7, sl, ip, lr, pc}
 80145b4:	0800d47d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, ip, lr, pc}
 80145b8:	0800d449 	stmdaeq	r0, {r0, r3, r6, sl, ip, lr, pc}
 80145bc:	0800d411 	stmdaeq	r0, {r0, r4, sl, ip, lr, pc}
 80145c0:	0800d3d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, ip, lr, pc}
 80145c4:	0800d3a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, ip, lr, pc}
 80145c8:	0800d36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, ip, lr, pc}
 80145cc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80145d0:	00000000 	andeq	r0, r0, r0
 80145d4:	0800d343 	stmdaeq	r0, {r0, r1, r6, r8, r9, ip, lr, pc}
 80145d8:	0800d4bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, ip, lr, pc}
 80145dc:	0800d4a9 	stmdaeq	r0, {r0, r3, r5, r7, sl, ip, lr, pc}
 80145e0:	0800d475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, ip, lr, pc}
 80145e4:	0800d441 	stmdaeq	r0, {r0, r6, sl, ip, lr, pc}
 80145e8:	0800d409 	stmdaeq	r0, {r0, r3, sl, ip, lr, pc}
 80145ec:	0800d3d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, ip, lr, pc}
 80145f0:	0800d399 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, ip, lr, pc}
 80145f4:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80145f8:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 80145fc:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8014600:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8014604:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8014608:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 801460c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014610:	7a697320 	bvc	9a71298 <__exidx_end+0x1a5c4cc>
 8014614:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 8014618:	746f7420 	strbtvc	r7, [pc], #-1056	; 8014620 <vtable for StoreWS28xxDmx+0x84>
 801461c:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8014620:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8014624:	0a736574 	beq	9cedbfc <__exidx_end+0x1cd8e30>
 8014628:	70637400 	rsbvc	r7, r3, r0, lsl #8
 801462c:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8014630:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8014634:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 8014638:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 801463c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8014640:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8014644:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 8014648:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 801464c:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8014650:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8014654:	5241000a 	subpl	r0, r1, #10
 8014658:	6f6c2050 	svcvs	0x006c2050
 801465c:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8014660:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8014664:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8014668:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 801466c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8014670:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8014674:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 8014678:	000a7961 	andeq	r7, sl, r1, ror #18
 801467c:	20505241 	subscs	r5, r0, r1, asr #4
 8014680:	6b6f6f6c 	blvs	9bf0438 <__exidx_end+0x1bdb66c>
 8014684:	66207075 			; <UNDEFINED> instruction: 0x66207075
 8014688:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 801468c:	 	vmlsmi.f32	s0, s0, s9

0801468f <NetworkConst::MSG_NETWORK_INIT>:
 801468f:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8014693:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8014697:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801469b:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801469f:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80146a3:	3135322e 	teqcc	r5, lr, lsr #4
 80146a7:	63745f00 	cmnvs	r4, #0, 30
 80146ab:	6f6c2e70 	svcvs	0x006c2e70
 80146af:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80146b3:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80146b7:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80146bb:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80146c3 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80146bf:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80146c3:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8013867 <RemoteConfig::s_TXT+0x8b>
 80146c7:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80146cb:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80146cf:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80146d3:	20000a53 	andcs	r0, r0, r3, asr sl
 80146d7:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80146db:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80146df:	0a676e69 	beq	99f008b <__exidx_end+0x19db2bf>
 80146e3:	614e2000 	mrsvs	r2, (UNDEF: 78)
 80146e7:	3a20656d 	bcc	882dca3 <__exidx_end+0x818ed7>
 80146eb:	0a732520 	beq	9cddb73 <__exidx_end+0x1cc8da7>
 80146ef:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80146f3:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80146f7:	000a7325 	andeq	r7, sl, r5, lsr #6
 80146fb:	30687465 	rsbcc	r7, r8, r5, ror #8
 80146ff:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8014703:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8014707:	5f656369 	svcpl	0x00656369
 801470b:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801470f:	6b726f77 	blvs	9cb04f3 <__exidx_end+0x1c9b727>
 8014713:	4820000a 	stmdami	r0!, {r1, r3}
 8014717:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801471b:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801471f:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014723:	20000a73 	andcs	r0, r0, r3, ror sl
 8014727:	614e6649 	cmpvs	lr, r9, asr #12
 801472b:	2020656d 	eorcs	r6, r0, sp, ror #10
 801472f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014733:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8014737:	000a7325 	andeq	r7, sl, r5, lsr #6
 801473b:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801473f:	20202074 	eorcs	r2, r0, r4, ror r0
 8014743:	3a202020 	bcc	881c7cb <__exidx_end+0x8079ff>
 8014747:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801474b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801474f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014753:	0a64252f 	beq	991dc17 <__exidx_end+0x1908e4b>
 8014757:	654e2000 	strbvs	r2, [lr, #-0]
 801475b:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801475f:	2020206b 	eorcs	r2, r0, fp, rrx
 8014763:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014767:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801476b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801476f:	20000a64 	andcs	r0, r0, r4, ror #20
 8014773:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8014777:	20796177 	rsbscs	r6, r9, r7, ror r1
 801477b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801477f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014783:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014787:	0a64252e 	beq	991dc47 <__exidx_end+0x1908e7b>
 801478b:	72422000 	subvc	r2, r2, #0
 801478f:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8014793:	20747361 	rsbscs	r7, r4, r1, ror #6
 8014797:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801479b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801479f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80147a3:	20000a64 	andcs	r0, r0, r4, ror #20
 80147a7:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80147ab:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147af:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80147b3:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80147b7:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80147bb:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80147bf:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80147c3:	3a78322e 	bcc	9e21083 <__exidx_end+0x1e0c2b7>
 80147c7:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80147cb:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80147cf:	20000a78 	andcs	r0, r0, r8, ror sl
 80147d3:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80147d7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80147db:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80147df:	000a6325 	andeq	r6, sl, r5, lsr #6
 80147e3:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 80147e7:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 80147eb:	 	rsbvc	r0, r9, r0, asr r0

080147ed <NetworkParamsConst::IP_ADDRESS>:
 80147ed:	615f7069 	cmpvs	pc, r9, rrx
 80147f1:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80147f5:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080147f8 <NetworkParamsConst::DEFAULT_GATEWAY>:
 80147f8:	61666564 	cmnvs	r6, r4, ror #10
 80147fc:	5f746c75 	svcpl	0x00746c75
 8014800:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8014804:	00796177 	rsbseq	r6, r9, r7, ror r1

08014808 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8014808:	70636864 	rsbvc	r6, r3, r4, ror #16
 801480c:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8014810:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8014818 <NetworkParamsConst::HOSTNAME>
 8014814:	00656d69 	rsbeq	r6, r5, r9, ror #26

08014818 <NetworkParamsConst::HOSTNAME>:
 8014818:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801481c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014821 <NetworkParamsConst::NET_MASK>:
 8014821:	5f74656e 	svcpl	0x0074656e
 8014825:	6b73616d 	blvs	9cecde1 <__exidx_end+0x1cd8015>
	...

0801482a <NetworkParamsConst::USE_DHCP>:
 801482a:	5f657375 	svcpl	0x00657375
 801482e:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08014833 <NetworkParamsConst::FILE_NAME>:
 8014833:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8014837:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801483b:	00747874 	rsbseq	r7, r4, r4, ror r8

0801483f <DevicesParamsConst::SPI_SPEED_HZ>:
 801483f:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8014843:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8014847:	5f646565 	svcpl	0x00646565
 801484b:	 			; <UNDEFINED> instruction: 0x6c007a68

0801484e <DevicesParamsConst::GROUPING_COUNT>:
 801484e:	5f64656c 	svcpl	0x0064656c
 8014852:	756f7267 	strbvc	r7, [pc, #-615]!	; 80145f3 <vtable for StoreWS28xxDmx+0x57>
 8014856:	6f635f70 	svcvs	0x00635f70
 801485a:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801485e <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801485e:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8014862:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8014866:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801486a:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801486e:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08014870 <DevicesParamsConst::MAP>:
 8014870:	5f64656c 	svcpl	0x0064656c
 8014874:	5f626772 	svcpl	0x00626772
 8014878:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801487c:	00676e69 	rsbeq	r6, r7, r9, ror #28

08014880 <DevicesParamsConst::TYPE>:
 8014880:	5f64656c 	svcpl	0x0064656c
 8014884:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08014889 <DevicesParamsConst::COUNT>:
 8014889:	5f64656c 	svcpl	0x0064656c
 801488d:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014891:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08014893 <DevicesParamsConst::LED_T0H>:
 8014893:	5f64656c 	svcpl	0x0064656c
 8014897:	00683074 	rsbeq	r3, r8, r4, ror r0

0801489b <DevicesParamsConst::LED_T1H>:
 801489b:	5f64656c 	svcpl	0x0064656c
 801489f:	00683174 	rsbeq	r3, r8, r4, ror r1

080148a3 <DevicesParamsConst::FILE_NAME>:
 80148a3:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80148a7:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80148ab:	00747874 	rsbseq	r7, r4, r4, ror r8
 80148af:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80148b3:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80148b7:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80148bb:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80148bf:	002c2264 	eoreq	r2, ip, r4, ror #4
 80148c3:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80148c7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80148cb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80148cf:	0a64252e 	beq	991dd8f <__exidx_end+0x1908fc3>
 80148d3:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80148d7:	0a232073 	beq	88dcaab <__exidx_end+0x8c7cdf>
	...

080148dc <LightSetParamsConst::TEST_PATTERN>:
 80148dc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80148e0:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80148e4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080148e9 <LightSetParamsConst::START_UNI_PORT>:
 80148e9:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80148ed:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80148f1:	6f705f69 	svcvs	0x00705f69
 80148f5:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 80148f9:	74730000 	ldrbtvc	r0, [r3], #-0
 80148fd:	5f747261 	svcpl	0x00747261
 8014901:	5f696e75 	svcpl	0x00696e75
 8014905:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014909:	0000325f 	andeq	r3, r0, pc, asr r2
 801490d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014911:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014915:	6f705f69 	svcvs	0x00705f69
 8014919:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801491d:	74730000 	ldrbtvc	r0, [r3], #-0
 8014921:	5f747261 	svcpl	0x00747261
 8014925:	5f696e75 	svcpl	0x00696e75
 8014929:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801492d:	0000345f 	andeq	r3, r0, pc, asr r4
 8014931:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014935:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014939:	6f705f69 	svcvs	0x00705f69
 801493d:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 80144d3 <s_aStorSize+0x27>
 8014941:	74730000 	ldrbtvc	r0, [r3], #-0
 8014945:	5f747261 	svcpl	0x00747261
 8014949:	5f696e75 	svcpl	0x00696e75
 801494d:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014951:	0000365f 	andeq	r3, r0, pc, asr r6
 8014955:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014959:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801495d:	6f705f69 	svcvs	0x00705f69
 8014961:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8014965:	74730000 	ldrbtvc	r0, [r3], #-0
 8014969:	5f747261 	svcpl	0x00747261
 801496d:	5f696e75 	svcpl	0x00696e75
 8014971:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014975:	0000385f 	andeq	r3, r0, pc, asr r8

08014979 <LightSetParamsConst::DMX_START_ADDRESS>:
 8014979:	5f786d64 	svcpl	0x00786d64
 801497d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014981:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8014985:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8014989:	6f4e0073 	svcvs	0x004e0073
 801498d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8014991:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014995:	756f6620 	strbvc	r6, [pc, #-1568]!	; 801437d <index_js+0x3fd>
 8014999:	5300646e 	movwpl	r6, #1134	; 0x46e
 801499d:	30313148 	eorscc	r3, r1, r8, asr #2
 80149a1:	53530036 	cmppl	r3, #54	; 0x36
 80149a5:	30333144 	eorscc	r3, r3, r4, asr #2
 80149a9:	73250036 			; <UNDEFINED> instruction: 0x73250036
 80149ad:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 80149b1:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 80149b5:	aa40000a 	bge	90149e5 <__exidx_end+0xfffc19>
 80149b9:	00eeaaee 	rsceq	sl, lr, lr, ror #21
 80149bd:	 	andmi	r0, r0, r0

080149c0 <_OledFont8x6>:
 80149c0:	00000040 	andeq	r0, r0, r0, asr #32
 80149c4:	40000000 	andmi	r0, r0, r0
 80149c8:	005f0000 	subseq	r0, pc, r0
 80149cc:	00400000 	subeq	r0, r0, r0
 80149d0:	00070007 	andeq	r0, r7, r7
 80149d4:	7f144000 	svcvc	0x00144000
 80149d8:	00147f14 	andseq	r7, r4, r4, lsl pc
 80149dc:	7f2a2440 	svcvc	0x002a2440
 80149e0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80149e4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80149e8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80149ec:	50205649 	eorpl	r5, r0, r9, asr #12
 80149f0:	08004000 	stmdaeq	r0, {lr}
 80149f4:	00000307 	andeq	r0, r0, r7, lsl #6
 80149f8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80149fc:	40000041 	andmi	r0, r0, r1, asr #32
 8014a00:	1c224100 	stfnes	f4, [r2], #-0
 8014a04:	2a400000 	bcs	9014a0c <__exidx_end+0xfffc40>
 8014a08:	2a1c7f1c 	bcs	8734680 <__exidx_end+0x71f8b4>
 8014a0c:	08084000 	stmdaeq	r8, {lr}
 8014a10:	0008083e 	andeq	r0, r8, lr, lsr r8
 8014a14:	70800040 	addvc	r0, r0, r0, asr #32
 8014a18:	40000030 	andmi	r0, r0, r0, lsr r0
 8014a1c:	08080808 	stmdaeq	r8, {r3, fp}
 8014a20:	00400008 	subeq	r0, r0, r8
 8014a24:	00606000 	rsbeq	r6, r0, r0
 8014a28:	10204000 	eorne	r4, r0, r0
 8014a2c:	00020408 	andeq	r0, r2, r8, lsl #8
 8014a30:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8014a34:	40003e45 	andmi	r3, r0, r5, asr #28
 8014a38:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8014a3c:	72400000 	subvc	r0, r0, #0
 8014a40:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8014a44:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8014a48:	00334d49 	eorseq	r4, r3, r9, asr #26
 8014a4c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8014a50:	4000107f 	andmi	r1, r0, pc, ror r0
 8014a54:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8014a58:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8014a5c:	3149494a 	cmpcc	r9, sl, asr #18
 8014a60:	21414000 	mrscs	r4, (UNDEF: 65)
 8014a64:	00070911 	andeq	r0, r7, r1, lsl r9
 8014a68:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8014a6c:	40003649 	andmi	r3, r0, r9, asr #12
 8014a70:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8014a74:	0040001e 	subeq	r0, r0, lr, lsl r0
 8014a78:	00001400 	andeq	r1, r0, r0, lsl #8
 8014a7c:	40004000 	andmi	r4, r0, r0
 8014a80:	00000034 	andeq	r0, r0, r4, lsr r0
 8014a84:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8014a88:	40004122 	andmi	r4, r0, r2, lsr #2
 8014a8c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8014a90:	00400014 	subeq	r0, r0, r4, lsl r0
 8014a94:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8014a98:	01024000 	mrseq	r4, (UNDEF: 2)
 8014a9c:	00060959 	andeq	r0, r6, r9, asr r9
 8014aa0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8014aa4:	40004e59 	andmi	r4, r0, r9, asr lr
 8014aa8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8014aac:	7f40007c 	svcvc	0x0040007c
 8014ab0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8014ab4:	413e4000 	teqmi	lr, r0
 8014ab8:	00224141 	eoreq	r4, r2, r1, asr #2
 8014abc:	41417f40 	cmpmi	r1, r0, asr #30
 8014ac0:	40003e41 	andmi	r3, r0, r1, asr #28
 8014ac4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8014ac8:	7f400041 	svcvc	0x00400041
 8014acc:	01090909 	tsteq	r9, r9, lsl #18
 8014ad0:	413e4000 	teqmi	lr, r0
 8014ad4:	00735141 	rsbseq	r5, r3, r1, asr #2
 8014ad8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8014adc:	40007f08 	andmi	r7, r0, r8, lsl #30
 8014ae0:	417f4100 	cmnmi	pc, r0, lsl #2
 8014ae4:	20400000 	subcs	r0, r0, r0
 8014ae8:	013f4140 	teqeq	pc, r0, asr #2
 8014aec:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8014af0:	00412214 	subeq	r2, r1, r4, lsl r2
 8014af4:	40407f40 	submi	r7, r0, r0, asr #30
 8014af8:	40004040 	andmi	r4, r0, r0, asr #32
 8014afc:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8014b00:	7f40007f 	svcvc	0x0040007f
 8014b04:	7f100804 	svcvc	0x00100804
 8014b08:	413e4000 	teqmi	lr, r0
 8014b0c:	003e4141 	eorseq	r4, lr, r1, asr #2
 8014b10:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8014b14:	40000609 	andmi	r0, r0, r9, lsl #12
 8014b18:	2151413e 	cmpcs	r1, lr, lsr r1
 8014b1c:	7f40005e 	svcvc	0x0040005e
 8014b20:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8014b24:	49264000 	stmdbmi	r6!, {lr}
 8014b28:	00324949 	eorseq	r4, r2, r9, asr #18
 8014b2c:	7f010340 	svcvc	0x00010340
 8014b30:	40000301 	andmi	r0, r0, r1, lsl #6
 8014b34:	4040403f 	submi	r4, r0, pc, lsr r0
 8014b38:	1f40003f 	svcne	0x0040003f
 8014b3c:	1f204020 	svcne	0x00204020
 8014b40:	403f4000 	eorsmi	r4, pc, r0
 8014b44:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8014b48:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8014b4c:	40006314 	andmi	r6, r0, r4, lsl r3
 8014b50:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8014b54:	61400003 	cmpvs	r0, r3
 8014b58:	434d4959 	movtmi	r4, #55641	; 0xd959
 8014b5c:	7f004000 	svcvc	0x00004000
 8014b60:	00414141 	subeq	r4, r1, r1, asr #2
 8014b64:	08040240 	stmdaeq	r4, {r6, r9}
 8014b68:	40002010 	andmi	r2, r0, r0, lsl r0
 8014b6c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8014b70:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8014b74:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8014b78:	40404000 	submi	r4, r0, r0
 8014b7c:	00404040 	subeq	r4, r0, r0, asr #32
 8014b80:	07030040 	streq	r0, [r3, -r0, asr #32]
 8014b84:	40000008 	andmi	r0, r0, r8
 8014b88:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8014b8c:	7f400040 	svcvc	0x00400040
 8014b90:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8014b94:	44384000 	ldrtmi	r4, [r8], #-0
 8014b98:	00284444 	eoreq	r4, r8, r4, asr #8
 8014b9c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8014ba0:	40007f28 	andmi	r7, r0, r8, lsr #30
 8014ba4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8014ba8:	00400018 	subeq	r0, r0, r8, lsl r0
 8014bac:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8014bb0:	a4184000 	ldrge	r4, [r8], #-0
 8014bb4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8014bb8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8014bbc:	40007804 	andmi	r7, r0, r4, lsl #16
 8014bc0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8014bc4:	20400000 	subcs	r0, r0, r0
 8014bc8:	003d4040 	eorseq	r4, sp, r0, asr #32
 8014bcc:	107f4000 	rsbsne	r4, pc, r0
 8014bd0:	00004428 	andeq	r4, r0, r8, lsr #8
 8014bd4:	7f410040 	svcvc	0x00410040
 8014bd8:	40000040 	andmi	r0, r0, r0, asr #32
 8014bdc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8014be0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8014be4:	78040408 	stmdavc	r4, {r3, sl}
 8014be8:	44384000 	ldrtmi	r4, [r8], #-0
 8014bec:	00384444 	eorseq	r4, r8, r4, asr #8
 8014bf0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8014bf4:	40001824 	andmi	r1, r0, r4, lsr #16
 8014bf8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8014bfc:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8014c00:	08040408 	stmdaeq	r4, {r3, sl}
 8014c04:	54484000 	strbpl	r4, [r8], #-0
 8014c08:	00245454 	eoreq	r5, r4, r4, asr r4
 8014c0c:	3f040440 	svccc	0x00040440
 8014c10:	40002444 	andmi	r2, r0, r4, asr #8
 8014c14:	2040403c 	subcs	r4, r0, ip, lsr r0
 8014c18:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8014c1c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8014c20:	403c4000 	eorsmi	r4, ip, r0
 8014c24:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8014c28:	10284440 	eorne	r4, r8, r0, asr #8
 8014c2c:	40004428 	andmi	r4, r0, r8, lsr #8
 8014c30:	9090904c 	addsls	r9, r0, ip, asr #32
 8014c34:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8014c38:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8014c3c:	08004000 	stmdaeq	r0, {lr}
 8014c40:	00004136 	andeq	r4, r0, r6, lsr r1
 8014c44:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8014c48:	40000000 	andmi	r0, r0, r0
 8014c4c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8014c50:	02400000 	subeq	r0, r0, #0
 8014c54:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8014c58:	263c4000 	ldrtcs	r4, [ip], -r0
 8014c5c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08014c60 <oled_128x32_init>:
 8014c60:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8014c64:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8014c68:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8014c6c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8014c70:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8014c74:	a6a440db 	ssatge	r4, #5, fp, asr #1

08014c78 <oled_128x64_init>:
 8014c78:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8014c7c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8014c80:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8014c84:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8014c88:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8014c8c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08014c90 <vtable for Ssd1306>:
	...
 8014c98:	080106fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl}
 8014c9c:	08010729 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl}
 8014ca0:	08010a41 	stmdaeq	r1, {r0, r6, r9, fp}
 8014ca4:	080109c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, fp}
 8014ca8:	08010891 	stmdaeq	r1, {r0, r4, r7, fp}
 8014cac:	08010749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl}
 8014cb0:	08010771 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, sl}
 8014cb4:	08010867 	stmdaeq	r1, {r0, r1, r2, r5, r6, fp}
 8014cb8:	08010821 	stmdaeq	r1, {r0, r5, fp}
 8014cbc:	080106ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl}
 8014cc0:	080108cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, fp}
 8014cc4:	080108d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, fp}
 8014cc8:	080108f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, fp}
 8014ccc:	08010701 	stmdaeq	r1, {r0, r8, r9, sl}
 8014cd0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8014cd4:	5b1b006d 	blpl	86d4e90 <__exidx_end+0x6c00c4>
 8014cd8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8014cdc:	31335b1b 	teqcc	r3, fp, lsl fp
 8014ce0:	5b1b006d 	blpl	86d4e9c <__exidx_end+0x6c00d0>
 8014ce4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8014ce8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8014cec:	5b1b006d 	blpl	86d4ea8 <__exidx_end+0x6c00dc>
 8014cf0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8014cf4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8014cf8:	205d732a 	subscs	r7, sp, sl, lsr #6
 8014cfc:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8014d00:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8014d04:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8014d08:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8014d0c:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8014d10:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8014d14:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8014d18:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8014d1c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8014d20:	000a7525 	andeq	r7, sl, r5, lsr #10
 8014d24:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8014d28:	203a636f 	eorscs	r6, sl, pc, ror #6
 8014d2c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8014d30:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8014d34:	6b636f6c 	blvs	98f0aec <__exidx_end+0x18dbd20>
 8014d38:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8014d3c:	000a7469 	andeq	r7, sl, r9, ror #8
 8014d40:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8014d44:	203a636f 	eorscs	r6, sl, pc, ror #6
 8014d48:	6f6c4270 	svcvs	0x006c4270
 8014d4c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8014d50:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8014d54:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8014d58:	7a697320 	bvc	9a719e0 <__exidx_end+0x1a5cc14>
 8014d5c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8014d60:	6164202c 	cmnvs	r4, ip, lsr #32
 8014d64:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8014d68:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8014d6c:	3a656572 	bcc	996e33c <__exidx_end+0x1959570>
 8014d70:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8014d74:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014d78:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8014d7c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8014d80:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8014d84:	6f6c4270 	svcvs	0x006c4270
 8014d88:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8014d8c:	0a702520 	beq	9c1e214 <__exidx_end+0x1c09448>
 8014d90:	00000000 	andeq	r0, r0, r0

08014d94 <days_of_month>:
 8014d94:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014d98:	0000001c 	andeq	r0, r0, ip, lsl r0
 8014d9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014da0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8014da4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014da8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8014dac:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014db0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014db4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8014db8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8014dbc:	0000001e 	andeq	r0, r0, lr, lsl r0
 8014dc0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08014dc4 <__exidx_start>:
 8014dc4:	7fff27b0 	svcvc	0x00ff27b0
 8014dc8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08014dcc <.ARM.attributes>:
 8014dcc:	00002e41 	andeq	r2, r0, r1, asr #28
 8014dd0:	61656100 	cmnvs	r5, r0, lsl #2
 8014dd4:	01006962 	tsteq	r0, r2, ror #18
 8014dd8:	00000024 	andeq	r0, r0, r4, lsr #32
 8014ddc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8014de0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8014de4:	0600334d 	streq	r3, [r0], -sp, asr #6
 8014de8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8014dec:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8014df0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8014df4:	1a011803 	bne	805ae08 <__exidx_end+0x4603c>
 8014df8:	Address 0x0000000008014df8 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20016000 	andcs	r6, r1, r0

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000030:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000040:	00000060 	andeq	r0, r0, r0, rrx
	...
20000050:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000060:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000070:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000080:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000090:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e0 <SystemCoreClock>:
200000e0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <OscServer::s_aPathInfo>:
	...

2000016c <OscServer::s_pUdpBuffer>:
2000016c:	00000000 	andeq	r0, r0, r0

20000170 <OscServer::s_aPathSecond>:
	...

200001f0 <OscServer::s_aPathBlackOut>:
	...

20000270 <OscServer::s_aPath>:
	...

200002f0 <OscServer::s_pData>:
	...

200004f0 <OscServer::s_pThis>:
200004f0:	00000000 	andeq	r0, r0, r0

200004f4 <OscSimpleSend::s_Message>:
	...

200006f4 <WS28xxDmx::s_pThis>:
200006f4:	00000000 	andeq	r0, r0, r0

200006f8 <PixelPatterns::m_PortConfig>:
	...

20000718 <PixelPatterns::m_nActivePorts>:
20000718:	00000000 	andeq	r0, r0, r0

2000071c <PixelPatterns::m_pScannerColours>:
2000071c:	00000000 	andeq	r0, r0, r0

20000720 <PixelPatterns::m_nCount>:
20000720:	00000000 	andeq	r0, r0, r0

20000724 <PixelPatterns::m_pOutput>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <PixelTestPattern::s_Pattern>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <s_tmp>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <WS28xx::s_pThis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <RemoteConfig::s_pUdpBuffer>:
20000734:	00000000 	andeq	r0, r0, r0

20000738 <RemoteConfig::s_RemoteConfigListBin>:
	...

2000075c <RemoteConfig::s_pThis>:
2000075c:	00000000 	andeq	r0, r0, r0

20000760 <SpiFlashStore::s_nWaitMillis>:
20000760:	00000000 	andeq	r0, r0, r0

20000764 <SpiFlashStore::s_SpiFlashData>:
	...

20001764 <SpiFlashStore::s_nStartAddress>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <SpiFlashStore::s_bHaveFlashChip>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <SpiFlashStore::s_nSpiFlashStoreSize>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <SpiFlashStore::s_State>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <SpiFlashStore::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <SpiFlashStore::s_bIsNew>:
20001778:	00000000 	andeq	r0, r0, r0

2000177c <StoreNetwork::s_pThis>:
2000177c:	00000000 	andeq	r0, r0, r0

20001780 <StoreOscServer::s_pThis>:
20001780:	00000000 	andeq	r0, r0, r0

20001784 <StoreRemoteConfig::s_pThis>:
20001784:	00000000 	andeq	r0, r0, r0

20001788 <StoreWS28xxDmx::s_pThis>:
20001788:	00000000 	andeq	r0, r0, r0

2000178c <FlashRom::s_pThis>:
2000178c:	00000000 	andeq	r0, r0, r0

20001790 <flashrom::s_nAddress>:
20001790:	00000000 	andeq	r0, r0, r0

20001794 <flashrom::s_State>:
20001794:	00000000 	andeq	r0, r0, r0

20001798 <flashrom::s_nPage>:
20001798:	00000000 	andeq	r0, r0, r0

2000179c <flashrom::s_pData>:
2000179c:	00000000 	andeq	r0, r0, r0

200017a0 <flashrom::s_isBank0>:
200017a0:	00000000 	andeq	r0, r0, r0

200017a4 <flashrom::s_nLength>:
200017a4:	00000000 	andeq	r0, r0, r0

200017a8 <g_ip_info>:
	...

200017b4 <g_mac_address>:
200017b4:	00000000 	andeq	r0, r0, r0
	...

200017ba <s_is_dhcp>:
	...

200017bc <s_p>:
200017bc:	00000000 	andeq	r0, r0, r0

200017c0 <s_ticker>:
200017c0:	00000000 	andeq	r0, r0, r0

200017c4 <s_mac_address>:
	...

200017cc <s_mac_address_arp_reply>:
200017cc:	00000000 	andeq	r0, r0, r0
	...

200017d2 <s_id>:
	...

200017d4 <s_recv_queue>:
	...

20002344 <s_tcb>:
	...

20002388 <s_tcp>:
	...

20002974 <broadcast_mask>:
20002974:	00000000 	andeq	r0, r0, r0

20002978 <gw_ip>:
20002978:	00000000 	andeq	r0, r0, r0

2000297c <on_network_mask>:
2000297c:	00000000 	andeq	r0, r0, r0

20002980 <s_id>:
20002980:	00000000 	andeq	r0, r0, r0

20002984 <s_ports_allowed>:
	...

200029a4 <s_recv_queue>:
	...

20008644 <s_send_packet>:
	...

20008c30 <MDNS::s_nRemoteIp>:
20008c30:	00000000 	andeq	r0, r0, r0

20008c34 <MDNS::s_nRemotePort>:
20008c34:	00000000 	andeq	r0, r0, r0

20008c38 <MDNS::s_nMulticastIp>:
20008c38:	00000000 	andeq	r0, r0, r0

20008c3c <MDNS::s_AnswerLocalIp>:
	...

20008e40 <MDNS::s_ServiceRecords>:
	...

20008e60 <MDNS::s_nBytesReceived>:
20008e60:	00000000 	andeq	r0, r0, r0

20008e64 <MDNS::s_ServiceRecordsData>:
	...

20009068 <MDNS::s_pName>:
20009068:	00000000 	andeq	r0, r0, r0

2000906c <MDNS::s_pBuffer>:
2000906c:	00000000 	andeq	r0, r0, r0

20009070 <Network::s_pThis>:
20009070:	00000000 	andeq	r0, r0, r0

20009074 <NetworkParams::m_tNetworkParams>:
	...

200090d4 <s_arp_announce>:
	...

20009100 <s_arp_reply>:
	...

2000912c <s_arp_request>:
	...

20009158 <s_arp_records>:
	...

200092d8 <s_entry_current>:
200092d8:	00000000 	andeq	r0, r0, r0

200092dc <s_dhcp_allocated_gw>:
200092dc:	00000000 	andeq	r0, r0, r0

200092e0 <s_dhcp_allocated_ip>:
200092e0:	00000000 	andeq	r0, r0, r0

200092e4 <s_dhcp_allocated_netmask>:
200092e4:	00000000 	andeq	r0, r0, r0

200092e8 <s_dhcp_message>:
	...

2000950c <s_dhcp_server_ip>:
2000950c:	00000000 	andeq	r0, r0, r0

20009510 <s_groups>:
	...

20009630 <s_id>:
20009630:	00000000 	andeq	r0, r0, r0

20009634 <s_joins_allowed_index>:
20009634:	00000000 	andeq	r0, r0, r0

20009638 <s_leave>:
	...

20009668 <s_multicast_mac>:
	...

20009670 <s_report>:
	...

2000969e <PropertiesConfig::s_Config>:
	...

200096a0 <Display::s_pThis>:
200096a0:	00000000 	andeq	r0, r0, r0

200096a4 <_ClearBuffer>:
	...

2000972c <Ssd1306::s_pThis>:
2000972c:	00000000 	andeq	r0, r0, r0

20009730 <FirmwareVersion::s_FirmwareVersion>:
	...

20009746 <FirmwareVersion::s_Print>:
	...

20009788 <FirmwareVersion::s_pThis>:
20009788:	00000000 	andeq	r0, r0, r0

2000978c <LedBlink::s_pThis>:
2000978c:	00000000 	andeq	r0, r0, r0

20009790 <Hardware::s_pThis>:
20009790:	00000000 	andeq	r0, r0, r0

20009794 <last.0>:
20009794:	00000000 	andeq	r0, r0, r0

20009798 <s_micros>:
	...

200097a0 <set_timer>:
200097a0:	00000000 	andeq	r0, r0, r0

200097a4 <s_nSysTickMillis>:
200097a4:	00000000 	andeq	r0, r0, r0

200097a8 <enet_init_status>:
200097a8:	00000000 	andeq	r0, r0, r0

200097ac <s_nAddress>:
200097ac:	00000000 	andeq	r0, r0, r0

200097b0 <s_TxBuffer>:
	...

200117b0 <dma_current_ptp_rxdesc>:
200117b0:	00000000 	andeq	r0, r0, r0

200117b4 <dma_current_ptp_txdesc>:
200117b4:	00000000 	andeq	r0, r0, r0

200117b8 <dma_current_rxdesc>:
200117b8:	00000000 	andeq	r0, r0, r0

200117bc <dma_current_txdesc>:
200117bc:	00000000 	andeq	r0, r0, r0

200117c0 <enet_initpara>:
	...

200117fc <rx_buff>:
	...

20012fcc <rxdesc_tab>:
	...

2001300c <tx_buff>:
	...

20013bf4 <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
