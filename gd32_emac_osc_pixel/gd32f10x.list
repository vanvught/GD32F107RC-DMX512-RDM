
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	0800886d 	stmdaeq	r0, {r0, r2, r3, r5, r6, fp, pc}
 8007008:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800700c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007010:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007014:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007018:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
	...
 800702c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007030:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800703c:	08011445 	stmdaeq	r1, {r0, r2, r6, sl, ip}
 8007040:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007044:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007048:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800704c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007050:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007054:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007058:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800705c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007060:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007064:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007068:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800706c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007070:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007074:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007078:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800707c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007080:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007084:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007088:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800708c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007090:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007094:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007098:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800709c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070a0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070a4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070a8:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070ac:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070b0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070b4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070b8:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070bc:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070c0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070c4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070c8:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070cc:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070d0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070d4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070d8:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070dc:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070e0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070e4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070e8:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070ec:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070f0:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 80070f4:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
	...
 8007100:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800710c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007110:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007114:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007118:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800711c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007120:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007124:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007128:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800712c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007130:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007134:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007138:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800713c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007140:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007144:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 8007148:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}
 800714c:	080088b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9ab 	bl	80074e4 <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f008 fdcb 	bl	800fd3c <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f007 f8c8 	bl	800e344 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f887 	bl	80072cc <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f008 ffdc 	bl	801017c <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 80071e8:	200017a8 	andcs	r1, r0, r8, lsr #15
 80071ec:	200017ba 			; <UNDEFINED> instruction: 0x200017ba

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f982 	bl	80074fa <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f008 bea4 	b.w	800ff4c <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	200017ba 			; <UNDEFINED> instruction: 0x200017ba

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	200017c4 	andcs	r1, r0, r4, asr #15

08007224 <tcp_init>:
 8007224:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007226:	2206      	movs	r2, #6
 8007228:	4c0e      	ldr	r4, [pc, #56]	; (8007264 <tcp_init+0x40>)
 800722a:	490f      	ldr	r1, [pc, #60]	; (8007268 <tcp_init+0x44>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f007 f8e3 	bl	800e3f8 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	2500      	movs	r5, #0
 8007238:	7323      	strb	r3, [r4, #12]
 800723a:	4b0c      	ldr	r3, [pc, #48]	; (800726c <tcp_init+0x48>)
 800723c:	eb0d 0102 	add.w	r1, sp, r2
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	f104 001a 	add.w	r0, r4, #26
 8007246:	9301      	str	r3, [sp, #4]
 8007248:	7365      	strb	r5, [r4, #13]
 800724a:	f007 f8d5 	bl	800e3f8 <memcpy.isra.0>
 800724e:	2345      	movs	r3, #69	; 0x45
 8007250:	73a3      	strb	r3, [r4, #14]
 8007252:	2340      	movs	r3, #64	; 0x40
 8007254:	7523      	strb	r3, [r4, #20]
 8007256:	75a3      	strb	r3, [r4, #22]
 8007258:	2306      	movs	r3, #6
 800725a:	73e5      	strb	r5, [r4, #15]
 800725c:	7565      	strb	r5, [r4, #21]
 800725e:	75e3      	strb	r3, [r4, #23]
 8007260:	b003      	add	sp, #12
 8007262:	bd30      	pop	{r4, r5, pc}
 8007264:	20002388 	andcs	r2, r0, r8, lsl #7
 8007268:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 800726c:	200017a8 	andcs	r1, r0, r8, lsr #15

08007270 <udp_init>:
 8007270:	b570      	push	{r4, r5, r6, lr}
 8007272:	2200      	movs	r2, #0
 8007274:	2408      	movs	r4, #8
 8007276:	460e      	mov	r6, r1
 8007278:	4b0d      	ldr	r3, [pc, #52]	; (80072b0 <udp_init+0x40>)
 800727a:	490e      	ldr	r1, [pc, #56]	; (80072b4 <udp_init+0x44>)
 800727c:	3c01      	subs	r4, #1
 800727e:	801a      	strh	r2, [r3, #0]
 8007280:	805a      	strh	r2, [r3, #2]
 8007282:	f841 2b04 	str.w	r2, [r1], #4
 8007286:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800728a:	d1f7      	bne.n	800727c <udp_init+0xc>
 800728c:	2206      	movs	r2, #6
 800728e:	4d0a      	ldr	r5, [pc, #40]	; (80072b8 <udp_init+0x48>)
 8007290:	4b0a      	ldr	r3, [pc, #40]	; (80072bc <udp_init+0x4c>)
 8007292:	4601      	mov	r1, r0
 8007294:	18a8      	adds	r0, r5, r2
 8007296:	801c      	strh	r4, [r3, #0]
 8007298:	f007 fa3a 	bl	800e710 <memcpy.isra.0>
 800729c:	4b08      	ldr	r3, [pc, #32]	; (80072c0 <udp_init+0x50>)
 800729e:	4630      	mov	r0, r6
 80072a0:	60eb      	str	r3, [r5, #12]
 80072a2:	4b08      	ldr	r3, [pc, #32]	; (80072c4 <udp_init+0x54>)
 80072a4:	616b      	str	r3, [r5, #20]
 80072a6:	f007 fa5f 	bl	800e768 <udp_set_ip>
 80072aa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072ac:	bd70      	pop	{r4, r5, r6, pc}
 80072ae:	bf00      	nop
 80072b0:	200029a4 	andcs	r2, r0, r4, lsr #19
 80072b4:	20002984 	andcs	r2, r0, r4, lsl #19
 80072b8:	20008644 	andcs	r8, r0, r4, asr #12
 80072bc:	20002980 	andcs	r2, r0, r0, lsl #19
 80072c0:	00450008 	subeq	r0, r5, r8
 80072c4:	11400040 	cmpne	r0, r0, asr #32

080072c8 <udp_shutdown>:
 80072c8:	4770      	bx	lr
	...

080072cc <arp_init>:
 80072cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d0:	4604      	mov	r4, r0
 80072d2:	460d      	mov	r5, r1
 80072d4:	f000 f876 	bl	80073c4 <arp_cache_init>
 80072d8:	2206      	movs	r2, #6
 80072da:	4621      	mov	r1, r4
 80072dc:	482e      	ldr	r0, [pc, #184]	; (8007398 <arp_init+0xcc>)
 80072de:	682f      	ldr	r7, [r5, #0]
 80072e0:	f008 fb9e 	bl	800fa20 <memcpy.isra.0>
 80072e4:	4b2d      	ldr	r3, [pc, #180]	; (800739c <arp_init+0xd0>)
 80072e6:	2507      	movs	r5, #7
 80072e8:	461e      	mov	r6, r3
 80072ea:	22ff      	movs	r2, #255	; 0xff
 80072ec:	3d01      	subs	r5, #1
 80072ee:	d146      	bne.n	800737e <arp_init+0xb2>
 80072f0:	4b2b      	ldr	r3, [pc, #172]	; (80073a0 <arp_init+0xd4>)
 80072f2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073a4 <arp_init+0xd8>
 80072f6:	2206      	movs	r2, #6
 80072f8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072fc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007300:	4621      	mov	r1, r4
 8007302:	4829      	ldr	r0, [pc, #164]	; (80073a8 <arp_init+0xdc>)
 8007304:	82b3      	strh	r3, [r6, #20]
 8007306:	f008 fb8b 	bl	800fa20 <memcpy.isra.0>
 800730a:	2307      	movs	r3, #7
 800730c:	4a27      	ldr	r2, [pc, #156]	; (80073ac <arp_init+0xe0>)
 800730e:	61f7      	str	r7, [r6, #28]
 8007310:	3b01      	subs	r3, #1
 8007312:	d137      	bne.n	8007384 <arp_init+0xb8>
 8007314:	2206      	movs	r2, #6
 8007316:	4621      	mov	r1, r4
 8007318:	4825      	ldr	r0, [pc, #148]	; (80073b0 <arp_init+0xe4>)
 800731a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800731e:	f008 fb7f 	bl	800fa20 <memcpy.isra.0>
 8007322:	4a24      	ldr	r2, [pc, #144]	; (80073b4 <arp_init+0xe8>)
 8007324:	2306      	movs	r3, #6
 8007326:	4615      	mov	r5, r2
 8007328:	21ff      	movs	r1, #255	; 0xff
 800732a:	3b01      	subs	r3, #1
 800732c:	d22d      	bcs.n	800738a <arp_init+0xbe>
 800732e:	4b1c      	ldr	r3, [pc, #112]	; (80073a0 <arp_init+0xd4>)
 8007330:	2206      	movs	r2, #6
 8007332:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007336:	f44f 7380 	mov.w	r3, #256	; 0x100
 800733a:	4621      	mov	r1, r4
 800733c:	481e      	ldr	r0, [pc, #120]	; (80073b8 <arp_init+0xec>)
 800733e:	82ab      	strh	r3, [r5, #20]
 8007340:	f008 fb6e 	bl	800fa20 <memcpy.isra.0>
 8007344:	2307      	movs	r3, #7
 8007346:	2100      	movs	r1, #0
 8007348:	4a1c      	ldr	r2, [pc, #112]	; (80073bc <arp_init+0xf0>)
 800734a:	61ef      	str	r7, [r5, #28]
 800734c:	3b01      	subs	r3, #1
 800734e:	d11f      	bne.n	8007390 <arp_init+0xc4>
 8007350:	2206      	movs	r2, #6
 8007352:	4d1b      	ldr	r5, [pc, #108]	; (80073c0 <arp_init+0xf4>)
 8007354:	4621      	mov	r1, r4
 8007356:	18a8      	adds	r0, r5, r2
 8007358:	f008 fb62 	bl	800fa20 <memcpy.isra.0>
 800735c:	4b10      	ldr	r3, [pc, #64]	; (80073a0 <arp_init+0xd4>)
 800735e:	4621      	mov	r1, r4
 8007360:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007364:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007368:	f105 0016 	add.w	r0, r5, #22
 800736c:	2206      	movs	r2, #6
 800736e:	82ab      	strh	r3, [r5, #20]
 8007370:	f008 fb56 	bl	800fa20 <memcpy.isra.0>
 8007374:	61ef      	str	r7, [r5, #28]
 8007376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800737a:	f008 bb5b 	b.w	800fa34 <arp_announce>
 800737e:	f803 2b01 	strb.w	r2, [r3], #1
 8007382:	e7b3      	b.n	80072ec <arp_init+0x20>
 8007384:	f802 5b01 	strb.w	r5, [r2], #1
 8007388:	e7c2      	b.n	8007310 <arp_init+0x44>
 800738a:	f802 1b01 	strb.w	r1, [r2], #1
 800738e:	e7cc      	b.n	800732a <arp_init+0x5e>
 8007390:	f802 1b01 	strb.w	r1, [r2], #1
 8007394:	e7da      	b.n	800734c <arp_init+0x80>
 8007396:	bf00      	nop
 8007398:	200090da 	ldrdcs	r9, [r0], -sl
 800739c:	200090d4 	ldrdcs	r9, [r0], -r4
 80073a0:	01000608 	tsteq	r0, r8, lsl #12
 80073a4:	04060008 	streq	r0, [r6], #-8
 80073a8:	200090ea 	andcs	r9, r0, sl, ror #1
 80073ac:	200090f4 	strdcs	r9, [r0], -r4
 80073b0:	20009132 	andcs	r9, r0, r2, lsr r1
 80073b4:	2000912c 	andcs	r9, r0, ip, lsr #2
 80073b8:	20009142 	andcs	r9, r0, r2, asr #2
 80073bc:	2000914c 	andcs	r9, r0, ip, asr #2
 80073c0:	20009100 	andcs	r9, r0, r0, lsl #2

080073c4 <arp_cache_init>:
 80073c4:	2300      	movs	r3, #0
 80073c6:	4618      	mov	r0, r3
 80073c8:	4a09      	ldr	r2, [pc, #36]	; (80073f0 <arp_cache_init+0x2c>)
 80073ca:	b510      	push	{r4, lr}
 80073cc:	8013      	strh	r3, [r2, #0]
 80073ce:	4a09      	ldr	r2, [pc, #36]	; (80073f4 <arp_cache_init+0x30>)
 80073d0:	4611      	mov	r1, r2
 80073d2:	f842 0c04 	str.w	r0, [r2, #-4]
 80073d6:	1d94      	adds	r4, r2, #6
 80073d8:	42a1      	cmp	r1, r4
 80073da:	d105      	bne.n	80073e8 <arp_cache_init+0x24>
 80073dc:	3303      	adds	r3, #3
 80073de:	2b60      	cmp	r3, #96	; 0x60
 80073e0:	f102 020c 	add.w	r2, r2, #12
 80073e4:	d1f4      	bne.n	80073d0 <arp_cache_init+0xc>
 80073e6:	bd10      	pop	{r4, pc}
 80073e8:	f801 0b01 	strb.w	r0, [r1], #1
 80073ec:	e7f4      	b.n	80073d8 <arp_cache_init+0x14>
 80073ee:	bf00      	nop
 80073f0:	200092d8 	ldrdcs	r9, [r0], -r8
 80073f4:	2000915c 	andcs	r9, r0, ip, asr r1

080073f8 <igmp_init>:
 80073f8:	2200      	movs	r2, #0
 80073fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073fe:	4605      	mov	r5, r0
 8007400:	4608      	mov	r0, r1
 8007402:	4611      	mov	r1, r2
 8007404:	4b23      	ldr	r3, [pc, #140]	; (8007494 <igmp_init+0x9c>)
 8007406:	f103 0408 	add.w	r4, r3, #8
 800740a:	42a3      	cmp	r3, r4
 800740c:	d13e      	bne.n	800748c <igmp_init+0x94>
 800740e:	3201      	adds	r2, #1
 8007410:	2a24      	cmp	r2, #36	; 0x24
 8007412:	d1f8      	bne.n	8007406 <igmp_init+0xe>
 8007414:	2600      	movs	r6, #0
 8007416:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa0>)
 8007418:	4c20      	ldr	r4, [pc, #128]	; (800749c <igmp_init+0xa4>)
 800741a:	601e      	str	r6, [r3, #0]
 800741c:	4b20      	ldr	r3, [pc, #128]	; (80074a0 <igmp_init+0xa8>)
 800741e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007422:	801e      	strh	r6, [r3, #0]
 8007424:	f008 fe0a 	bl	801003c <igmp_set_ip>
 8007428:	2201      	movs	r2, #1
 800742a:	4b1e      	ldr	r3, [pc, #120]	; (80074a4 <igmp_init+0xac>)
 800742c:	4629      	mov	r1, r5
 800742e:	801a      	strh	r2, [r3, #0]
 8007430:	225e      	movs	r2, #94	; 0x5e
 8007432:	709a      	strb	r2, [r3, #2]
 8007434:	2206      	movs	r2, #6
 8007436:	18a0      	adds	r0, r4, r2
 8007438:	f008 fdb6 	bl	800ffa8 <memcpy.isra.0>
 800743c:	f240 4394 	movw	r3, #1172	; 0x494
 8007440:	8463      	strh	r3, [r4, #34]	; 0x22
 8007442:	2316      	movs	r3, #22
 8007444:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a8 <igmp_init+0xb0>
 8007448:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074ac <igmp_init+0xb4>
 800744c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800744e:	f8c4 9014 	str.w	r9, [r4, #20]
 8007452:	4b17      	ldr	r3, [pc, #92]	; (80074b0 <igmp_init+0xb8>)
 8007454:	f8c4 800c 	str.w	r8, [r4, #12]
 8007458:	8227      	strh	r7, [r4, #16]
 800745a:	84a6      	strh	r6, [r4, #36]	; 0x24
 800745c:	4c15      	ldr	r4, [pc, #84]	; (80074b4 <igmp_init+0xbc>)
 800745e:	2206      	movs	r2, #6
 8007460:	6023      	str	r3, [r4, #0]
 8007462:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007466:	18a0      	adds	r0, r4, r2
 8007468:	80a3      	strh	r3, [r4, #4]
 800746a:	4629      	mov	r1, r5
 800746c:	f008 fd9c 	bl	800ffa8 <memcpy.isra.0>
 8007470:	23e0      	movs	r3, #224	; 0xe0
 8007472:	83e3      	strh	r3, [r4, #30]
 8007474:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007478:	4a0f      	ldr	r2, [pc, #60]	; (80074b8 <igmp_init+0xc0>)
 800747a:	f8c4 9014 	str.w	r9, [r4, #20]
 800747e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8007482:	f8c4 800c 	str.w	r8, [r4, #12]
 8007486:	8227      	strh	r7, [r4, #16]
 8007488:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800748c:	f803 1b01 	strb.w	r1, [r3], #1
 8007490:	e7bb      	b.n	800740a <igmp_init+0x12>
 8007492:	bf00      	nop
 8007494:	20009510 	andcs	r9, r0, r0, lsl r5
 8007498:	20009634 	andcs	r9, r0, r4, lsr r6
 800749c:	20009670 	andcs	r9, r0, r0, ror r6
 80074a0:	20009630 	andcs	r9, r0, r0, lsr r6
 80074a4:	20009668 	andcs	r9, r0, r8, ror #12
 80074a8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074ac:	00460008 	subeq	r0, r6, r8
 80074b0:	005e0001 	subseq	r0, lr, r1
 80074b4:	20009638 	andcs	r9, r0, r8, lsr r6
 80074b8:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074bc <igmp_shutdown>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	2500      	movs	r5, #0
 80074c0:	462e      	mov	r6, r5
 80074c2:	4c07      	ldr	r4, [pc, #28]	; (80074e0 <igmp_shutdown+0x24>)
 80074c4:	6820      	ldr	r0, [r4, #0]
 80074c6:	b120      	cbz	r0, 80074d2 <igmp_shutdown+0x16>
 80074c8:	f008 fe14 	bl	80100f4 <igmp_leave>
 80074cc:	6026      	str	r6, [r4, #0]
 80074ce:	7166      	strb	r6, [r4, #5]
 80074d0:	7126      	strb	r6, [r4, #4]
 80074d2:	3501      	adds	r5, #1
 80074d4:	2d24      	cmp	r5, #36	; 0x24
 80074d6:	f104 0408 	add.w	r4, r4, #8
 80074da:	d1f3      	bne.n	80074c4 <igmp_shutdown+0x8>
 80074dc:	bd70      	pop	{r4, r5, r6, pc}
 80074de:	bf00      	nop
 80074e0:	20009510 	andcs	r9, r0, r0, lsl r5

080074e4 <ip_init>:
 80074e4:	b538      	push	{r3, r4, r5, lr}
 80074e6:	4604      	mov	r4, r0
 80074e8:	460d      	mov	r5, r1
 80074ea:	f7ff fec1 	bl	8007270 <udp_init>
 80074ee:	4629      	mov	r1, r5
 80074f0:	4620      	mov	r0, r4
 80074f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074f6:	f7ff bf7f 	b.w	80073f8 <igmp_init>

080074fa <ip_shutdown>:
 80074fa:	b508      	push	{r3, lr}
 80074fc:	f7ff ffde 	bl	80074bc <igmp_shutdown>
 8007500:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007504:	f7ff bee0 	b.w	80072c8 <udp_shutdown>

08007508 <console_init>:
 8007508:	b508      	push	{r3, lr}
 800750a:	f009 ff3d 	bl	8011388 <uart0_init>
 800750e:	4804      	ldr	r0, [pc, #16]	; (8007520 <console_init+0x18>)
 8007510:	f009 ff6a 	bl	80113e8 <uart0_puts>
 8007514:	4803      	ldr	r0, [pc, #12]	; (8007524 <console_init+0x1c>)
 8007516:	f009 ff67 	bl	80113e8 <uart0_puts>
 800751a:	2000      	movs	r0, #0
 800751c:	bd08      	pop	{r3, pc}
 800751e:	bf00      	nop
 8007520:	0801331f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, ip, sp}
 8007524:	08014fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, lr}

08007528 <net_handle>:
 8007528:	b510      	push	{r4, lr}
 800752a:	4c0c      	ldr	r4, [pc, #48]	; (800755c <net_handle+0x34>)
 800752c:	4620      	mov	r0, r4
 800752e:	f00a fccd 	bl	8011ecc <emac_eth_recv>
 8007532:	2800      	cmp	r0, #0
 8007534:	dd07      	ble.n	8007546 <net_handle+0x1e>
 8007536:	6820      	ldr	r0, [r4, #0]
 8007538:	8983      	ldrh	r3, [r0, #12]
 800753a:	2b08      	cmp	r3, #8
 800753c:	d107      	bne.n	800754e <net_handle+0x26>
 800753e:	f000 fa71 	bl	8007a24 <ip_handle>
 8007542:	f00a fcd7 	bl	8011ef4 <emac_free_pkt>
 8007546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800754a:	f006 beeb 	b.w	800e324 <net_timers_run>
 800754e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 8007552:	d1f6      	bne.n	8007542 <net_handle+0x1a>
 8007554:	f000 fa0a 	bl	800796c <arp_handle>
 8007558:	e7f3      	b.n	8007542 <net_handle+0x1a>
 800755a:	bf00      	nop
 800755c:	200017bc 			; <UNDEFINED> instruction: 0x200017bc

08007560 <tcp_handle>:
 8007560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007564:	4605      	mov	r5, r0
 8007566:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007568:	b085      	sub	sp, #20
 800756a:	ba5b      	rev16	r3, r3
 800756c:	8443      	strh	r3, [r0, #34]	; 0x22
 800756e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007570:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 8007574:	ba5b      	rev16	r3, r3
 8007576:	8483      	strh	r3, [r0, #36]	; 0x24
 8007578:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800757c:	f006 ff46 	bl	800e40c <_bswap32>
 8007580:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007582:	4ca6      	ldr	r4, [pc, #664]	; (800781c <tcp_handle+0x2bc>)
 8007584:	ba5b      	rev16	r3, r3
 8007586:	862b      	strh	r3, [r5, #48]	; 0x30
 8007588:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800758a:	8822      	ldrh	r2, [r4, #0]
 800758c:	ba5b      	rev16	r3, r3
 800758e:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007590:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007592:	429a      	cmp	r2, r3
 8007594:	d14d      	bne.n	8007632 <tcp_handle+0xd2>
 8007596:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800759a:	2b01      	cmp	r3, #1
 800759c:	d00d      	beq.n	80075ba <tcp_handle+0x5a>
 800759e:	2204      	movs	r2, #4
 80075a0:	4668      	mov	r0, sp
 80075a2:	f105 011a 	add.w	r1, r5, #26
 80075a6:	f006 ff27 	bl	800e3f8 <memcpy.isra.0>
 80075aa:	8862      	ldrh	r2, [r4, #2]
 80075ac:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075ae:	429a      	cmp	r2, r3
 80075b0:	d13f      	bne.n	8007632 <tcp_handle+0xd2>
 80075b2:	6862      	ldr	r2, [r4, #4]
 80075b4:	9b00      	ldr	r3, [sp, #0]
 80075b6:	429a      	cmp	r2, r3
 80075b8:	d13b      	bne.n	8007632 <tcp_handle+0xd2>
 80075ba:	2204      	movs	r2, #4
 80075bc:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075c0:	eb0d 0002 	add.w	r0, sp, r2
 80075c4:	f006 ff18 	bl	800e3f8 <memcpy.isra.0>
 80075c8:	2204      	movs	r2, #4
 80075ca:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075ce:	eb0d 0002 	add.w	r0, sp, r2
 80075d2:	9e01      	ldr	r6, [sp, #4]
 80075d4:	f006 ff10 	bl	800e3f8 <memcpy.isra.0>
 80075d8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075dc:	9f01      	ldr	r7, [sp, #4]
 80075de:	2a01      	cmp	r2, #1
 80075e0:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075e4:	d01b      	beq.n	800761e <tcp_handle+0xbe>
 80075e6:	1ed3      	subs	r3, r2, #3
 80075e8:	2b07      	cmp	r3, #7
 80075ea:	d822      	bhi.n	8007632 <tcp_handle+0xd2>
 80075ec:	ea4f 1318 	mov.w	r3, r8, lsr #4
 80075f0:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075f4:	fa9b fb9b 	rev16.w	fp, fp
 80075f8:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075fc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075fe:	44d8      	add	r8, fp
 8007600:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007604:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007608:	fa1f f888 	uxth.w	r8, r8
 800760c:	2900      	cmp	r1, #0
 800760e:	d142      	bne.n	8007696 <tcp_handle+0x136>
 8007610:	f1b8 0f00 	cmp.w	r8, #0
 8007614:	d16b      	bne.n	80076ee <tcp_handle+0x18e>
 8007616:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007618:	42bb      	cmp	r3, r7
 800761a:	d168      	bne.n	80076ee <tcp_handle+0x18e>
 800761c:	e048      	b.n	80076b0 <tcp_handle+0x150>
 800761e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007622:	075a      	lsls	r2, r3, #29
 8007624:	d405      	bmi.n	8007632 <tcp_handle+0xd2>
 8007626:	06d8      	lsls	r0, r3, #27
 8007628:	d506      	bpl.n	8007638 <tcp_handle+0xd8>
 800762a:	4628      	mov	r0, r5
 800762c:	497b      	ldr	r1, [pc, #492]	; (800781c <tcp_handle+0x2bc>)
 800762e:	f006 ffc1 	bl	800e5b4 <_send_reset>
 8007632:	b005      	add	sp, #20
 8007634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007638:	0799      	lsls	r1, r3, #30
 800763a:	d5fa      	bpl.n	8007632 <tcp_handle+0xd2>
 800763c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007640:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007644:	4668      	mov	r0, sp
 8007646:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800764a:	f105 011a 	add.w	r1, r5, #26
 800764e:	2204      	movs	r2, #4
 8007650:	8063      	strh	r3, [r4, #2]
 8007652:	f006 fed1 	bl	800e3f8 <memcpy.isra.0>
 8007656:	2206      	movs	r2, #6
 8007658:	9b00      	ldr	r3, [sp, #0]
 800765a:	18a9      	adds	r1, r5, r2
 800765c:	4870      	ldr	r0, [pc, #448]	; (8007820 <tcp_handle+0x2c0>)
 800765e:	6063      	str	r3, [r4, #4]
 8007660:	f006 feca 	bl	800e3f8 <memcpy.isra.0>
 8007664:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007666:	1c7b      	adds	r3, r7, #1
 8007668:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800766c:	6363      	str	r3, [r4, #52]	; 0x34
 800766e:	2312      	movs	r3, #18
 8007670:	486a      	ldr	r0, [pc, #424]	; (800781c <tcp_handle+0x2bc>)
 8007672:	a901      	add	r1, sp, #4
 8007674:	f88d 300c 	strb.w	r3, [sp, #12]
 8007678:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800767c:	63e7      	str	r7, [r4, #60]	; 0x3c
 800767e:	f8c4 a018 	str.w	sl, [r4, #24]
 8007682:	f006 fee9 	bl	800e458 <_tcp_send_package>
 8007686:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007688:	1c5a      	adds	r2, r3, #1
 800768a:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800768e:	2303      	movs	r3, #3
 8007690:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007694:	e7cd      	b.n	8007632 <tcp_handle+0xd2>
 8007696:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007698:	eba3 0c07 	sub.w	ip, r3, r7
 800769c:	f1b8 0f00 	cmp.w	r8, #0
 80076a0:	d10d      	bne.n	80076be <tcp_handle+0x15e>
 80076a2:	f1bc 0f00 	cmp.w	ip, #0
 80076a6:	dc22      	bgt.n	80076ee <tcp_handle+0x18e>
 80076a8:	1afb      	subs	r3, r7, r3
 80076aa:	1a5b      	subs	r3, r3, r1
 80076ac:	2b00      	cmp	r3, #0
 80076ae:	da1e      	bge.n	80076ee <tcp_handle+0x18e>
 80076b0:	0743      	lsls	r3, r0, #29
 80076b2:	d530      	bpl.n	8007716 <tcp_handle+0x1b6>
 80076b4:	8821      	ldrh	r1, [r4, #0]
 80076b6:	4859      	ldr	r0, [pc, #356]	; (800781c <tcp_handle+0x2bc>)
 80076b8:	f006 fe84 	bl	800e3c4 <_init_tcb>
 80076bc:	e7b9      	b.n	8007632 <tcp_handle+0xd2>
 80076be:	f1bc 0f00 	cmp.w	ip, #0
 80076c2:	dc06      	bgt.n	80076d2 <tcp_handle+0x172>
 80076c4:	eba7 0c03 	sub.w	ip, r7, r3
 80076c8:	ebac 0c01 	sub.w	ip, ip, r1
 80076cc:	f1bc 0f00 	cmp.w	ip, #0
 80076d0:	dbee      	blt.n	80076b0 <tcp_handle+0x150>
 80076d2:	eb08 0c07 	add.w	ip, r8, r7
 80076d6:	f103 0e01 	add.w	lr, r3, #1
 80076da:	ebae 0e0c 	sub.w	lr, lr, ip
 80076de:	f1be 0f00 	cmp.w	lr, #0
 80076e2:	dc04      	bgt.n	80076ee <tcp_handle+0x18e>
 80076e4:	43db      	mvns	r3, r3
 80076e6:	1a5b      	subs	r3, r3, r1
 80076e8:	eb13 0f0c 	cmn.w	r3, ip
 80076ec:	d4e0      	bmi.n	80076b0 <tcp_handle+0x150>
 80076ee:	0742      	lsls	r2, r0, #29
 80076f0:	d505      	bpl.n	80076fe <tcp_handle+0x19e>
 80076f2:	8821      	ldrh	r1, [r4, #0]
 80076f4:	4849      	ldr	r0, [pc, #292]	; (800781c <tcp_handle+0x2bc>)
 80076f6:	f006 fe65 	bl	800e3c4 <_init_tcb>
 80076fa:	2301      	movs	r3, #1
 80076fc:	e7c8      	b.n	8007690 <tcp_handle+0x130>
 80076fe:	6963      	ldr	r3, [r4, #20]
 8007700:	9301      	str	r3, [sp, #4]
 8007702:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007704:	9302      	str	r3, [sp, #8]
 8007706:	2310      	movs	r3, #16
 8007708:	4844      	ldr	r0, [pc, #272]	; (800781c <tcp_handle+0x2bc>)
 800770a:	a901      	add	r1, sp, #4
 800770c:	f88d 300c 	strb.w	r3, [sp, #12]
 8007710:	f006 fea2 	bl	800e458 <_tcp_send_package>
 8007714:	e78d      	b.n	8007632 <tcp_handle+0xd2>
 8007716:	0781      	lsls	r1, r0, #30
 8007718:	d505      	bpl.n	8007726 <tcp_handle+0x1c6>
 800771a:	2a03      	cmp	r2, #3
 800771c:	d0ed      	beq.n	80076fa <tcp_handle+0x19a>
 800771e:	4628      	mov	r0, r5
 8007720:	493e      	ldr	r1, [pc, #248]	; (800781c <tcp_handle+0x2bc>)
 8007722:	f006 ff47 	bl	800e5b4 <_send_reset>
 8007726:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800772a:	06da      	lsls	r2, r3, #27
 800772c:	d581      	bpl.n	8007632 <tcp_handle+0xd2>
 800772e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007732:	3b03      	subs	r3, #3
 8007734:	2b07      	cmp	r3, #7
 8007736:	d818      	bhi.n	800776a <tcp_handle+0x20a>
 8007738:	e8df f003 	tbb	[pc, r3]
 800773c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007740:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 8007744:	6923      	ldr	r3, [r4, #16]
 8007746:	1b9b      	subs	r3, r3, r6
 8007748:	2b00      	cmp	r3, #0
 800774a:	dc0a      	bgt.n	8007762 <tcp_handle+0x202>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	1af3      	subs	r3, r6, r3
 8007750:	2b00      	cmp	r3, #0
 8007752:	dc06      	bgt.n	8007762 <tcp_handle+0x202>
 8007754:	2304      	movs	r3, #4
 8007756:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800775a:	f8c4 a018 	str.w	sl, [r4, #24]
 800775e:	6126      	str	r6, [r4, #16]
 8007760:	e796      	b.n	8007690 <tcp_handle+0x130>
 8007762:	4628      	mov	r0, r5
 8007764:	492d      	ldr	r1, [pc, #180]	; (800781c <tcp_handle+0x2bc>)
 8007766:	f006 ff25 	bl	800e5b4 <_send_reset>
 800776a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800776e:	3b04      	subs	r3, #4
 8007770:	2b02      	cmp	r3, #2
 8007772:	d830      	bhi.n	80077d6 <tcp_handle+0x276>
 8007774:	f1b8 0f00 	cmp.w	r8, #0
 8007778:	d02d      	beq.n	80077d6 <tcp_handle+0x276>
 800777a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800777c:	42bb      	cmp	r3, r7
 800777e:	f040 8092 	bne.w	80078a6 <tcp_handle+0x346>
 8007782:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8007786:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007824 <tcp_handle+0x2c4>
 800778a:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800778e:	f8ba 7000 	ldrh.w	r7, [sl]
 8007792:	4642      	mov	r2, r8
 8007794:	435f      	muls	r7, r3
 8007796:	1d38      	adds	r0, r7, #4
 8007798:	4449      	add	r1, r9
 800779a:	4450      	add	r0, sl
 800779c:	f006 fe2c 	bl	800e3f8 <memcpy.isra.0>
 80077a0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077a4:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077a8:	8722      	strh	r2, [r4, #56]	; 0x38
 80077aa:	6962      	ldr	r2, [r4, #20]
 80077ac:	4443      	add	r3, r8
 80077ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077b2:	6363      	str	r3, [r4, #52]	; 0x34
 80077b4:	2310      	movs	r3, #16
 80077b6:	4457      	add	r7, sl
 80077b8:	4818      	ldr	r0, [pc, #96]	; (800781c <tcp_handle+0x2bc>)
 80077ba:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077be:	a901      	add	r1, sp, #4
 80077c0:	f88d 300c 	strb.w	r3, [sp, #12]
 80077c4:	f006 fe48 	bl	800e458 <_tcp_send_package>
 80077c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80077cc:	3301      	adds	r3, #1
 80077ce:	f003 0301 	and.w	r3, r3, #1
 80077d2:	f8aa 3000 	strh.w	r3, [sl]
 80077d6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077da:	2b02      	cmp	r3, #2
 80077dc:	f67f af29 	bls.w	8007632 <tcp_handle+0xd2>
 80077e0:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077e4:	07db      	lsls	r3, r3, #31
 80077e6:	f57f af24 	bpl.w	8007632 <tcp_handle+0xd2>
 80077ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ec:	6962      	ldr	r2, [r4, #20]
 80077ee:	3301      	adds	r3, #1
 80077f0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077f4:	6363      	str	r3, [r4, #52]	; 0x34
 80077f6:	2310      	movs	r3, #16
 80077f8:	4808      	ldr	r0, [pc, #32]	; (800781c <tcp_handle+0x2bc>)
 80077fa:	a901      	add	r1, sp, #4
 80077fc:	f88d 300c 	strb.w	r3, [sp, #12]
 8007800:	f006 fe2a 	bl	800e458 <_tcp_send_package>
 8007804:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007808:	2b05      	cmp	r3, #5
 800780a:	d054      	beq.n	80078b6 <tcp_handle+0x356>
 800780c:	d84e      	bhi.n	80078ac <tcp_handle+0x34c>
 800780e:	3b03      	subs	r3, #3
 8007810:	2b01      	cmp	r3, #1
 8007812:	f63f af0e 	bhi.w	8007632 <tcp_handle+0xd2>
 8007816:	2307      	movs	r3, #7
 8007818:	e73a      	b.n	8007690 <tcp_handle+0x130>
 800781a:	bf00      	nop
 800781c:	20002344 	andcs	r2, r0, r4, asr #6
 8007820:	2000234c 	andcs	r2, r0, ip, asr #6
 8007824:	200017d4 	ldrdcs	r1, [r0], -r4
 8007828:	6923      	ldr	r3, [r4, #16]
 800782a:	1b99      	subs	r1, r3, r6
 800782c:	d513      	bpl.n	8007856 <tcp_handle+0x2f6>
 800782e:	6962      	ldr	r2, [r4, #20]
 8007830:	1ab2      	subs	r2, r6, r2
 8007832:	2a00      	cmp	r2, #0
 8007834:	dc0f      	bgt.n	8007856 <tcp_handle+0x2f6>
 8007836:	6126      	str	r6, [r4, #16]
 8007838:	6a23      	ldr	r3, [r4, #32]
 800783a:	1bda      	subs	r2, r3, r7
 800783c:	2a00      	cmp	r2, #0
 800783e:	db05      	blt.n	800784c <tcp_handle+0x2ec>
 8007840:	42bb      	cmp	r3, r7
 8007842:	d192      	bne.n	800776a <tcp_handle+0x20a>
 8007844:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007846:	1b9b      	subs	r3, r3, r6
 8007848:	2b00      	cmp	r3, #0
 800784a:	dc8e      	bgt.n	800776a <tcp_handle+0x20a>
 800784c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007850:	f8c4 a018 	str.w	sl, [r4, #24]
 8007854:	e789      	b.n	800776a <tcp_handle+0x20a>
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc06      	bgt.n	800786a <tcp_handle+0x30a>
 800785c:	2900      	cmp	r1, #0
 800785e:	dc84      	bgt.n	800776a <tcp_handle+0x20a>
 8007860:	6963      	ldr	r3, [r4, #20]
 8007862:	1af3      	subs	r3, r6, r3
 8007864:	2b00      	cmp	r3, #0
 8007866:	dc80      	bgt.n	800776a <tcp_handle+0x20a>
 8007868:	e7e6      	b.n	8007838 <tcp_handle+0x2d8>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	1b9a      	subs	r2, r3, r6
 800786e:	2a00      	cmp	r2, #0
 8007870:	f6bf af7b 	bge.w	800776a <tcp_handle+0x20a>
 8007874:	e744      	b.n	8007700 <tcp_handle+0x1a0>
 8007876:	6963      	ldr	r3, [r4, #20]
 8007878:	42b3      	cmp	r3, r6
 800787a:	f47f af76 	bne.w	800776a <tcp_handle+0x20a>
 800787e:	8821      	ldrh	r1, [r4, #0]
 8007880:	480f      	ldr	r0, [pc, #60]	; (80078c0 <tcp_handle+0x360>)
 8007882:	f006 fd9f 	bl	800e3c4 <_init_tcb>
 8007886:	e770      	b.n	800776a <tcp_handle+0x20a>
 8007888:	6963      	ldr	r3, [r4, #20]
 800788a:	42b3      	cmp	r3, r6
 800788c:	f47f af6d 	bne.w	800776a <tcp_handle+0x20a>
 8007890:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007892:	480b      	ldr	r0, [pc, #44]	; (80078c0 <tcp_handle+0x360>)
 8007894:	9302      	str	r3, [sp, #8]
 8007896:	2310      	movs	r3, #16
 8007898:	a901      	add	r1, sp, #4
 800789a:	9601      	str	r6, [sp, #4]
 800789c:	f88d 300c 	strb.w	r3, [sp, #12]
 80078a0:	f006 fdda 	bl	800e458 <_tcp_send_package>
 80078a4:	e761      	b.n	800776a <tcp_handle+0x20a>
 80078a6:	6962      	ldr	r2, [r4, #20]
 80078a8:	9201      	str	r2, [sp, #4]
 80078aa:	e72b      	b.n	8007704 <tcp_handle+0x1a4>
 80078ac:	2b06      	cmp	r3, #6
 80078ae:	f47f aec0 	bne.w	8007632 <tcp_handle+0xd2>
 80078b2:	230a      	movs	r3, #10
 80078b4:	e6ec      	b.n	8007690 <tcp_handle+0x130>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	42b3      	cmp	r3, r6
 80078ba:	d0fa      	beq.n	80078b2 <tcp_handle+0x352>
 80078bc:	2308      	movs	r3, #8
 80078be:	e6e7      	b.n	8007690 <tcp_handle+0x130>
 80078c0:	20002344 	andcs	r2, r0, r4, asr #6

080078c4 <udp_handle>:
 80078c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078c8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078ca:	4607      	mov	r7, r0
 80078cc:	ba5b      	rev16	r3, r3
 80078ce:	b29b      	uxth	r3, r3
 80078d0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078d4:	2a01      	cmp	r2, #1
 80078d6:	d904      	bls.n	80078e2 <udp_handle+0x1e>
 80078d8:	2b7b      	cmp	r3, #123	; 0x7b
 80078da:	d002      	beq.n	80078e2 <udp_handle+0x1e>
 80078dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078e0:	d308      	bcc.n	80078f4 <udp_handle+0x30>
 80078e2:	2400      	movs	r4, #0
 80078e4:	4a1f      	ldr	r2, [pc, #124]	; (8007964 <udp_handle+0xa0>)
 80078e6:	f852 1b04 	ldr.w	r1, [r2], #4
 80078ea:	4299      	cmp	r1, r3
 80078ec:	d005      	beq.n	80078fa <udp_handle+0x36>
 80078ee:	3401      	adds	r4, #1
 80078f0:	2c08      	cmp	r4, #8
 80078f2:	d1f8      	bne.n	80078e6 <udp_handle+0x22>
 80078f4:	b002      	add	sp, #8
 80078f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078fa:	f640 3394 	movw	r3, #2964	; 0xb94
 80078fe:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007900:	435c      	muls	r4, r3
 8007902:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007906:	ba76      	rev16	r6, r6
 8007908:	3e08      	subs	r6, #8
 800790a:	b2b6      	uxth	r6, r6
 800790c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007910:	bf28      	it	cs
 8007912:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007916:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8007968 <udp_handle+0xa4>
 800791a:	1d20      	adds	r0, r4, #4
 800791c:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007920:	4632      	mov	r2, r6
 8007922:	435d      	muls	r5, r3
 8007924:	4428      	add	r0, r5
 8007926:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800792a:	4440      	add	r0, r8
 800792c:	f006 fef0 	bl	800e710 <memcpy.isra.0>
 8007930:	2204      	movs	r2, #4
 8007932:	f107 011a 	add.w	r1, r7, #26
 8007936:	eb0d 0002 	add.w	r0, sp, r2
 800793a:	f006 fee9 	bl	800e710 <memcpy.isra.0>
 800793e:	9a01      	ldr	r2, [sp, #4]
 8007940:	192b      	adds	r3, r5, r4
 8007942:	4443      	add	r3, r8
 8007944:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007948:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800794a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800794e:	ba52      	rev16	r2, r2
 8007950:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007954:	f838 3004 	ldrh.w	r3, [r8, r4]
 8007958:	3301      	adds	r3, #1
 800795a:	f003 0301 	and.w	r3, r3, #1
 800795e:	f828 3004 	strh.w	r3, [r8, r4]
 8007962:	e7c7      	b.n	80078f4 <udp_handle+0x30>
 8007964:	20002984 	andcs	r2, r0, r4, lsl #19
 8007968:	200029a4 	andcs	r2, r0, r4, lsr #19

0800796c <arp_handle>:
 800796c:	8a83      	ldrh	r3, [r0, #20]
 800796e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007972:	d003      	beq.n	800797c <arp_handle+0x10>
 8007974:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007978:	d002      	beq.n	8007980 <arp_handle+0x14>
 800797a:	4770      	bx	lr
 800797c:	f008 b864 	b.w	800fa48 <arp_handle_request>
 8007980:	f008 b88a 	b.w	800fa98 <arp_handle_reply>

08007984 <igmp_handle>:
 8007984:	7b83      	ldrb	r3, [r0, #14]
 8007986:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800798a:	2b45      	cmp	r3, #69	; 0x45
 800798c:	d116      	bne.n	80079bc <igmp_handle+0x38>
 800798e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007992:	2b11      	cmp	r3, #17
 8007994:	d112      	bne.n	80079bc <igmp_handle+0x38>
 8007996:	4b20      	ldr	r3, [pc, #128]	; (8007a18 <igmp_handle+0x94>)
 8007998:	f100 051e 	add.w	r5, r0, #30
 800799c:	9300      	str	r3, [sp, #0]
 800799e:	466a      	mov	r2, sp
 80079a0:	462b      	mov	r3, r5
 80079a2:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079a6:	42b3      	cmp	r3, r6
 80079a8:	d10b      	bne.n	80079c2 <igmp_handle+0x3e>
 80079aa:	2401      	movs	r4, #1
 80079ac:	2100      	movs	r1, #0
 80079ae:	f04f 0c01 	mov.w	ip, #1
 80079b2:	4b1a      	ldr	r3, [pc, #104]	; (8007a1c <igmp_handle+0x98>)
 80079b4:	4a1a      	ldr	r2, [pc, #104]	; (8007a20 <igmp_handle+0x9c>)
 80079b6:	681f      	ldr	r7, [r3, #0]
 80079b8:	428f      	cmp	r7, r1
 80079ba:	d10a      	bne.n	80079d2 <igmp_handle+0x4e>
 80079bc:	b003      	add	sp, #12
 80079be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079c2:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079c6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ca:	428c      	cmp	r4, r1
 80079cc:	d0eb      	beq.n	80079a6 <igmp_handle+0x22>
 80079ce:	2400      	movs	r4, #0
 80079d0:	e7ec      	b.n	80079ac <igmp_handle+0x28>
 80079d2:	6813      	ldr	r3, [r2, #0]
 80079d4:	9301      	str	r3, [sp, #4]
 80079d6:	b924      	cbnz	r4, 80079e2 <igmp_handle+0x5e>
 80079d8:	462b      	mov	r3, r5
 80079da:	f10d 0e04 	add.w	lr, sp, #4
 80079de:	42b3      	cmp	r3, r6
 80079e0:	d10e      	bne.n	8007a00 <igmp_handle+0x7c>
 80079e2:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079e6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079ea:	f1be 0f01 	cmp.w	lr, #1
 80079ee:	d110      	bne.n	8007a12 <igmp_handle+0x8e>
 80079f0:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079f4:	459e      	cmp	lr, r3
 80079f6:	d909      	bls.n	8007a0c <igmp_handle+0x88>
 80079f8:	085b      	lsrs	r3, r3, #1
 80079fa:	3301      	adds	r3, #1
 80079fc:	7113      	strb	r3, [r2, #4]
 80079fe:	e005      	b.n	8007a0c <igmp_handle+0x88>
 8007a00:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a04:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a08:	45c1      	cmp	r9, r8
 8007a0a:	d0e8      	beq.n	80079de <igmp_handle+0x5a>
 8007a0c:	3101      	adds	r1, #1
 8007a0e:	3208      	adds	r2, #8
 8007a10:	e7d2      	b.n	80079b8 <igmp_handle+0x34>
 8007a12:	f882 c005 	strb.w	ip, [r2, #5]
 8007a16:	e7ef      	b.n	80079f8 <igmp_handle+0x74>
 8007a18:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a1c:	20009634 	andcs	r9, r0, r4, lsr r6
 8007a20:	20009510 	andcs	r9, r0, r0, lsl r5

08007a24 <ip_handle>:
 8007a24:	7b82      	ldrb	r2, [r0, #14]
 8007a26:	7dc3      	ldrb	r3, [r0, #23]
 8007a28:	2a45      	cmp	r2, #69	; 0x45
 8007a2a:	d003      	beq.n	8007a34 <ip_handle+0x10>
 8007a2c:	2b02      	cmp	r3, #2
 8007a2e:	d111      	bne.n	8007a54 <ip_handle+0x30>
 8007a30:	f7ff bfa8 	b.w	8007984 <igmp_handle>
 8007a34:	2b06      	cmp	r3, #6
 8007a36:	d00b      	beq.n	8007a50 <ip_handle+0x2c>
 8007a38:	d804      	bhi.n	8007a44 <ip_handle+0x20>
 8007a3a:	2b01      	cmp	r3, #1
 8007a3c:	d006      	beq.n	8007a4c <ip_handle+0x28>
 8007a3e:	2b02      	cmp	r3, #2
 8007a40:	d0f6      	beq.n	8007a30 <ip_handle+0xc>
 8007a42:	4770      	bx	lr
 8007a44:	2b11      	cmp	r3, #17
 8007a46:	d105      	bne.n	8007a54 <ip_handle+0x30>
 8007a48:	f7ff bf3c 	b.w	80078c4 <udp_handle>
 8007a4c:	f000 b804 	b.w	8007a58 <icmp_handle>
 8007a50:	f7ff bd86 	b.w	8007560 <tcp_handle>
 8007a54:	4770      	bx	lr
	...

08007a58 <icmp_handle>:
 8007a58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a5a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a5e:	4604      	mov	r4, r0
 8007a60:	2b08      	cmp	r3, #8
 8007a62:	d13e      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a64:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a68:	2d00      	cmp	r5, #0
 8007a6a:	d13a      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a6c:	1d86      	adds	r6, r0, #6
 8007a6e:	4631      	mov	r1, r6
 8007a70:	2206      	movs	r2, #6
 8007a72:	f008 fba9 	bl	80101c8 <memcpy.isra.0>
 8007a76:	4630      	mov	r0, r6
 8007a78:	2206      	movs	r2, #6
 8007a7a:	491b      	ldr	r1, [pc, #108]	; (8007ae8 <icmp_handle+0x90>)
 8007a7c:	f008 fba4 	bl	80101c8 <memcpy.isra.0>
 8007a80:	8a63      	ldrh	r3, [r4, #18]
 8007a82:	f104 061a 	add.w	r6, r4, #26
 8007a86:	43db      	mvns	r3, r3
 8007a88:	4631      	mov	r1, r6
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	8263      	strh	r3, [r4, #18]
 8007a8e:	f104 001e 	add.w	r0, r4, #30
 8007a92:	f008 fb99 	bl	80101c8 <memcpy.isra.0>
 8007a96:	2204      	movs	r2, #4
 8007a98:	4b14      	ldr	r3, [pc, #80]	; (8007aec <icmp_handle+0x94>)
 8007a9a:	eb0d 0102 	add.w	r1, sp, r2
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	4630      	mov	r0, r6
 8007aa2:	f104 060e 	add.w	r6, r4, #14
 8007aa6:	9301      	str	r3, [sp, #4]
 8007aa8:	f008 fb8e 	bl	80101c8 <memcpy.isra.0>
 8007aac:	2114      	movs	r1, #20
 8007aae:	4630      	mov	r0, r6
 8007ab0:	7625      	strb	r5, [r4, #24]
 8007ab2:	7665      	strb	r5, [r4, #25]
 8007ab4:	f008 fb6b 	bl	801018e <net_chksum>
 8007ab8:	8a21      	ldrh	r1, [r4, #16]
 8007aba:	8320      	strh	r0, [r4, #24]
 8007abc:	ba49      	rev16	r1, r1
 8007abe:	b289      	uxth	r1, r1
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007ac6:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007aca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ace:	f008 fb5e 	bl	801018e <net_chksum>
 8007ad2:	8a21      	ldrh	r1, [r4, #16]
 8007ad4:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007ad6:	ba49      	rev16	r1, r1
 8007ad8:	b289      	uxth	r1, r1
 8007ada:	4620      	mov	r0, r4
 8007adc:	310e      	adds	r1, #14
 8007ade:	f00a fa0d 	bl	8011efc <emac_eth_send>
 8007ae2:	b002      	add	sp, #8
 8007ae4:	bd70      	pop	{r4, r5, r6, pc}
 8007ae6:	bf00      	nop
 8007ae8:	200017b4 			; <UNDEFINED> instruction: 0x200017b4
 8007aec:	200017a8 	andcs	r1, r0, r8, lsr #15

08007af0 <__aeabi_d2f>:
 8007af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007af8:	bf24      	itt	cs
 8007afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b02:	d90d      	bls.n	8007b20 <__aeabi_d2f+0x30>
 8007b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b18:	bf08      	it	eq
 8007b1a:	f020 0001 	biceq.w	r0, r0, #1
 8007b1e:	4770      	bx	lr
 8007b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b24:	d121      	bne.n	8007b6a <__aeabi_d2f+0x7a>
 8007b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b2a:	bfbc      	itt	lt
 8007b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b30:	4770      	bxlt	lr
 8007b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b3a:	f1c2 0218 	rsb	r2, r2, #24
 8007b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8007b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b46:	fa20 f002 	lsr.w	r0, r0, r2
 8007b4a:	bf18      	it	ne
 8007b4c:	f040 0001 	orrne.w	r0, r0, #1
 8007b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007b5c:	ea40 000c 	orr.w	r0, r0, ip
 8007b60:	fa23 f302 	lsr.w	r3, r3, r2
 8007b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007b68:	e7cc      	b.n	8007b04 <__aeabi_d2f+0x14>
 8007b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007b6e:	d107      	bne.n	8007b80 <__aeabi_d2f+0x90>
 8007b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007b74:	bf1e      	ittt	ne
 8007b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007b7e:	4770      	bxne	lr
 8007b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007b8c:	4770      	bx	lr
 8007b8e:	bf00      	nop

08007b90 <__aeabi_frsub>:
 8007b90:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007b94:	e002      	b.n	8007b9c <__addsf3>
 8007b96:	bf00      	nop

08007b98 <__aeabi_fsub>:
 8007b98:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007b9c <__addsf3>:
 8007b9c:	0042      	lsls	r2, r0, #1
 8007b9e:	bf1f      	itttt	ne
 8007ba0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007ba4:	ea92 0f03 	teqne	r2, r3
 8007ba8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bac:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bb0:	d06a      	beq.n	8007c88 <__addsf3+0xec>
 8007bb2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007bb6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007bba:	bfc1      	itttt	gt
 8007bbc:	18d2      	addgt	r2, r2, r3
 8007bbe:	4041      	eorgt	r1, r0
 8007bc0:	4048      	eorgt	r0, r1
 8007bc2:	4041      	eorgt	r1, r0
 8007bc4:	bfb8      	it	lt
 8007bc6:	425b      	neglt	r3, r3
 8007bc8:	2b19      	cmp	r3, #25
 8007bca:	bf88      	it	hi
 8007bcc:	4770      	bxhi	lr
 8007bce:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007bd2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007bda:	bf18      	it	ne
 8007bdc:	4240      	negne	r0, r0
 8007bde:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007be2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007be6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007bea:	bf18      	it	ne
 8007bec:	4249      	negne	r1, r1
 8007bee:	ea92 0f03 	teq	r2, r3
 8007bf2:	d03f      	beq.n	8007c74 <__addsf3+0xd8>
 8007bf4:	f1a2 0201 	sub.w	r2, r2, #1
 8007bf8:	fa41 fc03 	asr.w	ip, r1, r3
 8007bfc:	eb10 000c 	adds.w	r0, r0, ip
 8007c00:	f1c3 0320 	rsb	r3, r3, #32
 8007c04:	fa01 f103 	lsl.w	r1, r1, r3
 8007c08:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c0c:	d502      	bpl.n	8007c14 <__addsf3+0x78>
 8007c0e:	4249      	negs	r1, r1
 8007c10:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c14:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c18:	d313      	bcc.n	8007c42 <__addsf3+0xa6>
 8007c1a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c1e:	d306      	bcc.n	8007c2e <__addsf3+0x92>
 8007c20:	0840      	lsrs	r0, r0, #1
 8007c22:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c26:	f102 0201 	add.w	r2, r2, #1
 8007c2a:	2afe      	cmp	r2, #254	; 0xfe
 8007c2c:	d251      	bcs.n	8007cd2 <__addsf3+0x136>
 8007c2e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c32:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c36:	bf08      	it	eq
 8007c38:	f020 0001 	biceq.w	r0, r0, #1
 8007c3c:	ea40 0003 	orr.w	r0, r0, r3
 8007c40:	4770      	bx	lr
 8007c42:	0049      	lsls	r1, r1, #1
 8007c44:	eb40 0000 	adc.w	r0, r0, r0
 8007c48:	3a01      	subs	r2, #1
 8007c4a:	bf28      	it	cs
 8007c4c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c50:	d2ed      	bcs.n	8007c2e <__addsf3+0x92>
 8007c52:	fab0 fc80 	clz	ip, r0
 8007c56:	f1ac 0c08 	sub.w	ip, ip, #8
 8007c5a:	ebb2 020c 	subs.w	r2, r2, ip
 8007c5e:	fa00 f00c 	lsl.w	r0, r0, ip
 8007c62:	bfaa      	itet	ge
 8007c64:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007c68:	4252      	neglt	r2, r2
 8007c6a:	4318      	orrge	r0, r3
 8007c6c:	bfbc      	itt	lt
 8007c6e:	40d0      	lsrlt	r0, r2
 8007c70:	4318      	orrlt	r0, r3
 8007c72:	4770      	bx	lr
 8007c74:	f092 0f00 	teq	r2, #0
 8007c78:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007c7c:	bf06      	itte	eq
 8007c7e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007c82:	3201      	addeq	r2, #1
 8007c84:	3b01      	subne	r3, #1
 8007c86:	e7b5      	b.n	8007bf4 <__addsf3+0x58>
 8007c88:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007c8c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007c90:	bf18      	it	ne
 8007c92:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007c96:	d021      	beq.n	8007cdc <__addsf3+0x140>
 8007c98:	ea92 0f03 	teq	r2, r3
 8007c9c:	d004      	beq.n	8007ca8 <__addsf3+0x10c>
 8007c9e:	f092 0f00 	teq	r2, #0
 8007ca2:	bf08      	it	eq
 8007ca4:	4608      	moveq	r0, r1
 8007ca6:	4770      	bx	lr
 8007ca8:	ea90 0f01 	teq	r0, r1
 8007cac:	bf1c      	itt	ne
 8007cae:	2000      	movne	r0, #0
 8007cb0:	4770      	bxne	lr
 8007cb2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007cb6:	d104      	bne.n	8007cc2 <__addsf3+0x126>
 8007cb8:	0040      	lsls	r0, r0, #1
 8007cba:	bf28      	it	cs
 8007cbc:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007cc0:	4770      	bx	lr
 8007cc2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007cc6:	bf3c      	itt	cc
 8007cc8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007ccc:	4770      	bxcc	lr
 8007cce:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007cd2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007cd6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007cda:	4770      	bx	lr
 8007cdc:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007ce0:	bf16      	itet	ne
 8007ce2:	4608      	movne	r0, r1
 8007ce4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007ce8:	4601      	movne	r1, r0
 8007cea:	0242      	lsls	r2, r0, #9
 8007cec:	bf06      	itte	eq
 8007cee:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007cf2:	ea90 0f01 	teqeq	r0, r1
 8007cf6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007cfa:	4770      	bx	lr

08007cfc <__aeabi_ui2f>:
 8007cfc:	f04f 0300 	mov.w	r3, #0
 8007d00:	e004      	b.n	8007d0c <__aeabi_i2f+0x8>
 8007d02:	bf00      	nop

08007d04 <__aeabi_i2f>:
 8007d04:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d08:	bf48      	it	mi
 8007d0a:	4240      	negmi	r0, r0
 8007d0c:	ea5f 0c00 	movs.w	ip, r0
 8007d10:	bf08      	it	eq
 8007d12:	4770      	bxeq	lr
 8007d14:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d18:	4601      	mov	r1, r0
 8007d1a:	f04f 0000 	mov.w	r0, #0
 8007d1e:	e01c      	b.n	8007d5a <__aeabi_l2f+0x2a>

08007d20 <__aeabi_ul2f>:
 8007d20:	ea50 0201 	orrs.w	r2, r0, r1
 8007d24:	bf08      	it	eq
 8007d26:	4770      	bxeq	lr
 8007d28:	f04f 0300 	mov.w	r3, #0
 8007d2c:	e00a      	b.n	8007d44 <__aeabi_l2f+0x14>
 8007d2e:	bf00      	nop

08007d30 <__aeabi_l2f>:
 8007d30:	ea50 0201 	orrs.w	r2, r0, r1
 8007d34:	bf08      	it	eq
 8007d36:	4770      	bxeq	lr
 8007d38:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d3c:	d502      	bpl.n	8007d44 <__aeabi_l2f+0x14>
 8007d3e:	4240      	negs	r0, r0
 8007d40:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d44:	ea5f 0c01 	movs.w	ip, r1
 8007d48:	bf02      	ittt	eq
 8007d4a:	4684      	moveq	ip, r0
 8007d4c:	4601      	moveq	r1, r0
 8007d4e:	2000      	moveq	r0, #0
 8007d50:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007d54:	bf08      	it	eq
 8007d56:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007d5a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007d5e:	fabc f28c 	clz	r2, ip
 8007d62:	3a08      	subs	r2, #8
 8007d64:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007d68:	db10      	blt.n	8007d8c <__aeabi_l2f+0x5c>
 8007d6a:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d6e:	4463      	add	r3, ip
 8007d70:	fa00 fc02 	lsl.w	ip, r0, r2
 8007d74:	f1c2 0220 	rsb	r2, r2, #32
 8007d78:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007d7c:	fa20 f202 	lsr.w	r2, r0, r2
 8007d80:	eb43 0002 	adc.w	r0, r3, r2
 8007d84:	bf08      	it	eq
 8007d86:	f020 0001 	biceq.w	r0, r0, #1
 8007d8a:	4770      	bx	lr
 8007d8c:	f102 0220 	add.w	r2, r2, #32
 8007d90:	fa01 fc02 	lsl.w	ip, r1, r2
 8007d94:	f1c2 0220 	rsb	r2, r2, #32
 8007d98:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007d9c:	fa21 f202 	lsr.w	r2, r1, r2
 8007da0:	eb43 0002 	adc.w	r0, r3, r2
 8007da4:	bf08      	it	eq
 8007da6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007daa:	4770      	bx	lr

08007dac <__gesf2>:
 8007dac:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007db0:	e006      	b.n	8007dc0 <__cmpsf2+0x4>
 8007db2:	bf00      	nop

08007db4 <__lesf2>:
 8007db4:	f04f 0c01 	mov.w	ip, #1
 8007db8:	e002      	b.n	8007dc0 <__cmpsf2+0x4>
 8007dba:	bf00      	nop

08007dbc <__cmpsf2>:
 8007dbc:	f04f 0c01 	mov.w	ip, #1
 8007dc0:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007dc4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007dc8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007dcc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007dd0:	bf18      	it	ne
 8007dd2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007dd6:	d011      	beq.n	8007dfc <__cmpsf2+0x40>
 8007dd8:	b001      	add	sp, #4
 8007dda:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007dde:	bf18      	it	ne
 8007de0:	ea90 0f01 	teqne	r0, r1
 8007de4:	bf58      	it	pl
 8007de6:	ebb2 0003 	subspl.w	r0, r2, r3
 8007dea:	bf88      	it	hi
 8007dec:	17c8      	asrhi	r0, r1, #31
 8007dee:	bf38      	it	cc
 8007df0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007df4:	bf18      	it	ne
 8007df6:	f040 0001 	orrne.w	r0, r0, #1
 8007dfa:	4770      	bx	lr
 8007dfc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e00:	d102      	bne.n	8007e08 <__cmpsf2+0x4c>
 8007e02:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e06:	d105      	bne.n	8007e14 <__cmpsf2+0x58>
 8007e08:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e0c:	d1e4      	bne.n	8007dd8 <__cmpsf2+0x1c>
 8007e0e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e12:	d0e1      	beq.n	8007dd8 <__cmpsf2+0x1c>
 8007e14:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e18:	4770      	bx	lr
 8007e1a:	bf00      	nop

08007e1c <__aeabi_cfrcmple>:
 8007e1c:	4684      	mov	ip, r0
 8007e1e:	4608      	mov	r0, r1
 8007e20:	4661      	mov	r1, ip
 8007e22:	e7ff      	b.n	8007e24 <__aeabi_cfcmpeq>

08007e24 <__aeabi_cfcmpeq>:
 8007e24:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e26:	f7ff ffc9 	bl	8007dbc <__cmpsf2>
 8007e2a:	2800      	cmp	r0, #0
 8007e2c:	bf48      	it	mi
 8007e2e:	f110 0f00 	cmnmi.w	r0, #0
 8007e32:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e34 <__aeabi_fcmpeq>:
 8007e34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e38:	f7ff fff4 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e3c:	bf0c      	ite	eq
 8007e3e:	2001      	moveq	r0, #1
 8007e40:	2000      	movne	r0, #0
 8007e42:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e46:	bf00      	nop

08007e48 <__aeabi_fcmplt>:
 8007e48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e4c:	f7ff ffea 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e50:	bf34      	ite	cc
 8007e52:	2001      	movcc	r0, #1
 8007e54:	2000      	movcs	r0, #0
 8007e56:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e5a:	bf00      	nop

08007e5c <__aeabi_fcmple>:
 8007e5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e60:	f7ff ffe0 	bl	8007e24 <__aeabi_cfcmpeq>
 8007e64:	bf94      	ite	ls
 8007e66:	2001      	movls	r0, #1
 8007e68:	2000      	movhi	r0, #0
 8007e6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e6e:	bf00      	nop

08007e70 <__aeabi_fcmpge>:
 8007e70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e74:	f7ff ffd2 	bl	8007e1c <__aeabi_cfrcmple>
 8007e78:	bf94      	ite	ls
 8007e7a:	2001      	movls	r0, #1
 8007e7c:	2000      	movhi	r0, #0
 8007e7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e82:	bf00      	nop

08007e84 <__aeabi_fcmpgt>:
 8007e84:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e88:	f7ff ffc8 	bl	8007e1c <__aeabi_cfrcmple>
 8007e8c:	bf34      	ite	cc
 8007e8e:	2001      	movcc	r0, #1
 8007e90:	2000      	movcs	r0, #0
 8007e92:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e96:	bf00      	nop

08007e98 <__aeabi_f2iz>:
 8007e98:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e9c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007ea0:	d30f      	bcc.n	8007ec2 <__aeabi_f2iz+0x2a>
 8007ea2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ea6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007eaa:	d90d      	bls.n	8007ec8 <__aeabi_f2iz+0x30>
 8007eac:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007eb0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007eb4:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007eb8:	fa23 f002 	lsr.w	r0, r3, r2
 8007ebc:	bf18      	it	ne
 8007ebe:	4240      	negne	r0, r0
 8007ec0:	4770      	bx	lr
 8007ec2:	f04f 0000 	mov.w	r0, #0
 8007ec6:	4770      	bx	lr
 8007ec8:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007ecc:	d101      	bne.n	8007ed2 <__aeabi_f2iz+0x3a>
 8007ece:	0242      	lsls	r2, r0, #9
 8007ed0:	d105      	bne.n	8007ede <__aeabi_f2iz+0x46>
 8007ed2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007ed6:	bf08      	it	eq
 8007ed8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007edc:	4770      	bx	lr
 8007ede:	f04f 0000 	mov.w	r0, #0
 8007ee2:	4770      	bx	lr

08007ee4 <__aeabi_uldivmod>:
 8007ee4:	b953      	cbnz	r3, 8007efc <__aeabi_uldivmod+0x18>
 8007ee6:	b94a      	cbnz	r2, 8007efc <__aeabi_uldivmod+0x18>
 8007ee8:	2900      	cmp	r1, #0
 8007eea:	bf08      	it	eq
 8007eec:	2800      	cmpeq	r0, #0
 8007eee:	bf1c      	itt	ne
 8007ef0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007ef4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007ef8:	f000 b976 	b.w	80081e8 <__aeabi_idiv0>
 8007efc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f04:	f000 f806 	bl	8007f14 <__udivmoddi4>
 8007f08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f10:	b004      	add	sp, #16
 8007f12:	4770      	bx	lr

08007f14 <__udivmoddi4>:
 8007f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f18:	9e08      	ldr	r6, [sp, #32]
 8007f1a:	460d      	mov	r5, r1
 8007f1c:	4604      	mov	r4, r0
 8007f1e:	4688      	mov	r8, r1
 8007f20:	2b00      	cmp	r3, #0
 8007f22:	d14d      	bne.n	8007fc0 <__udivmoddi4+0xac>
 8007f24:	428a      	cmp	r2, r1
 8007f26:	4694      	mov	ip, r2
 8007f28:	d968      	bls.n	8007ffc <__udivmoddi4+0xe8>
 8007f2a:	fab2 f282 	clz	r2, r2
 8007f2e:	b152      	cbz	r2, 8007f46 <__udivmoddi4+0x32>
 8007f30:	fa01 f302 	lsl.w	r3, r1, r2
 8007f34:	f1c2 0120 	rsb	r1, r2, #32
 8007f38:	fa20 f101 	lsr.w	r1, r0, r1
 8007f3c:	fa0c fc02 	lsl.w	ip, ip, r2
 8007f40:	ea41 0803 	orr.w	r8, r1, r3
 8007f44:	4094      	lsls	r4, r2
 8007f46:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007f4a:	fbb8 f7f1 	udiv	r7, r8, r1
 8007f4e:	fa1f fe8c 	uxth.w	lr, ip
 8007f52:	fb01 8817 	mls	r8, r1, r7, r8
 8007f56:	fb07 f00e 	mul.w	r0, r7, lr
 8007f5a:	0c23      	lsrs	r3, r4, #16
 8007f5c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007f60:	4298      	cmp	r0, r3
 8007f62:	d90a      	bls.n	8007f7a <__udivmoddi4+0x66>
 8007f64:	eb1c 0303 	adds.w	r3, ip, r3
 8007f68:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007f6c:	f080 811e 	bcs.w	80081ac <__udivmoddi4+0x298>
 8007f70:	4298      	cmp	r0, r3
 8007f72:	f240 811b 	bls.w	80081ac <__udivmoddi4+0x298>
 8007f76:	3f02      	subs	r7, #2
 8007f78:	4463      	add	r3, ip
 8007f7a:	1a1b      	subs	r3, r3, r0
 8007f7c:	fbb3 f0f1 	udiv	r0, r3, r1
 8007f80:	fb01 3310 	mls	r3, r1, r0, r3
 8007f84:	fb00 fe0e 	mul.w	lr, r0, lr
 8007f88:	b2a4      	uxth	r4, r4
 8007f8a:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007f8e:	45a6      	cmp	lr, r4
 8007f90:	d90a      	bls.n	8007fa8 <__udivmoddi4+0x94>
 8007f92:	eb1c 0404 	adds.w	r4, ip, r4
 8007f96:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007f9a:	f080 8109 	bcs.w	80081b0 <__udivmoddi4+0x29c>
 8007f9e:	45a6      	cmp	lr, r4
 8007fa0:	f240 8106 	bls.w	80081b0 <__udivmoddi4+0x29c>
 8007fa4:	4464      	add	r4, ip
 8007fa6:	3802      	subs	r0, #2
 8007fa8:	2100      	movs	r1, #0
 8007faa:	eba4 040e 	sub.w	r4, r4, lr
 8007fae:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007fb2:	b11e      	cbz	r6, 8007fbc <__udivmoddi4+0xa8>
 8007fb4:	2300      	movs	r3, #0
 8007fb6:	40d4      	lsrs	r4, r2
 8007fb8:	e9c6 4300 	strd	r4, r3, [r6]
 8007fbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fc0:	428b      	cmp	r3, r1
 8007fc2:	d908      	bls.n	8007fd6 <__udivmoddi4+0xc2>
 8007fc4:	2e00      	cmp	r6, #0
 8007fc6:	f000 80ee 	beq.w	80081a6 <__udivmoddi4+0x292>
 8007fca:	2100      	movs	r1, #0
 8007fcc:	e9c6 0500 	strd	r0, r5, [r6]
 8007fd0:	4608      	mov	r0, r1
 8007fd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fd6:	fab3 f183 	clz	r1, r3
 8007fda:	2900      	cmp	r1, #0
 8007fdc:	d14a      	bne.n	8008074 <__udivmoddi4+0x160>
 8007fde:	42ab      	cmp	r3, r5
 8007fe0:	d302      	bcc.n	8007fe8 <__udivmoddi4+0xd4>
 8007fe2:	4282      	cmp	r2, r0
 8007fe4:	f200 80fc 	bhi.w	80081e0 <__udivmoddi4+0x2cc>
 8007fe8:	1a84      	subs	r4, r0, r2
 8007fea:	eb65 0303 	sbc.w	r3, r5, r3
 8007fee:	2001      	movs	r0, #1
 8007ff0:	4698      	mov	r8, r3
 8007ff2:	2e00      	cmp	r6, #0
 8007ff4:	d0e2      	beq.n	8007fbc <__udivmoddi4+0xa8>
 8007ff6:	e9c6 4800 	strd	r4, r8, [r6]
 8007ffa:	e7df      	b.n	8007fbc <__udivmoddi4+0xa8>
 8007ffc:	b902      	cbnz	r2, 8008000 <__udivmoddi4+0xec>
 8007ffe:	deff      	udf	#255	; 0xff
 8008000:	fab2 f282 	clz	r2, r2
 8008004:	2a00      	cmp	r2, #0
 8008006:	f040 8091 	bne.w	800812c <__udivmoddi4+0x218>
 800800a:	eba1 000c 	sub.w	r0, r1, ip
 800800e:	2101      	movs	r1, #1
 8008010:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8008014:	fa1f fe8c 	uxth.w	lr, ip
 8008018:	fbb0 f3f7 	udiv	r3, r0, r7
 800801c:	fb07 0013 	mls	r0, r7, r3, r0
 8008020:	0c25      	lsrs	r5, r4, #16
 8008022:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8008026:	fb0e f003 	mul.w	r0, lr, r3
 800802a:	42a8      	cmp	r0, r5
 800802c:	d908      	bls.n	8008040 <__udivmoddi4+0x12c>
 800802e:	eb1c 0505 	adds.w	r5, ip, r5
 8008032:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8008036:	d202      	bcs.n	800803e <__udivmoddi4+0x12a>
 8008038:	42a8      	cmp	r0, r5
 800803a:	f200 80ce 	bhi.w	80081da <__udivmoddi4+0x2c6>
 800803e:	4643      	mov	r3, r8
 8008040:	1a2d      	subs	r5, r5, r0
 8008042:	fbb5 f0f7 	udiv	r0, r5, r7
 8008046:	fb07 5510 	mls	r5, r7, r0, r5
 800804a:	fb0e fe00 	mul.w	lr, lr, r0
 800804e:	b2a4      	uxth	r4, r4
 8008050:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8008054:	45a6      	cmp	lr, r4
 8008056:	d908      	bls.n	800806a <__udivmoddi4+0x156>
 8008058:	eb1c 0404 	adds.w	r4, ip, r4
 800805c:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8008060:	d202      	bcs.n	8008068 <__udivmoddi4+0x154>
 8008062:	45a6      	cmp	lr, r4
 8008064:	f200 80b6 	bhi.w	80081d4 <__udivmoddi4+0x2c0>
 8008068:	4628      	mov	r0, r5
 800806a:	eba4 040e 	sub.w	r4, r4, lr
 800806e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8008072:	e79e      	b.n	8007fb2 <__udivmoddi4+0x9e>
 8008074:	f1c1 0720 	rsb	r7, r1, #32
 8008078:	408b      	lsls	r3, r1
 800807a:	fa22 fc07 	lsr.w	ip, r2, r7
 800807e:	ea4c 0c03 	orr.w	ip, ip, r3
 8008082:	fa25 fa07 	lsr.w	sl, r5, r7
 8008086:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800808a:	fbba f8f9 	udiv	r8, sl, r9
 800808e:	fa20 f307 	lsr.w	r3, r0, r7
 8008092:	fb09 aa18 	mls	sl, r9, r8, sl
 8008096:	408d      	lsls	r5, r1
 8008098:	fa1f fe8c 	uxth.w	lr, ip
 800809c:	431d      	orrs	r5, r3
 800809e:	fa00 f301 	lsl.w	r3, r0, r1
 80080a2:	fb08 f00e 	mul.w	r0, r8, lr
 80080a6:	0c2c      	lsrs	r4, r5, #16
 80080a8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80080ac:	42a0      	cmp	r0, r4
 80080ae:	fa02 f201 	lsl.w	r2, r2, r1
 80080b2:	d90b      	bls.n	80080cc <__udivmoddi4+0x1b8>
 80080b4:	eb1c 0404 	adds.w	r4, ip, r4
 80080b8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80080bc:	f080 8088 	bcs.w	80081d0 <__udivmoddi4+0x2bc>
 80080c0:	42a0      	cmp	r0, r4
 80080c2:	f240 8085 	bls.w	80081d0 <__udivmoddi4+0x2bc>
 80080c6:	f1a8 0802 	sub.w	r8, r8, #2
 80080ca:	4464      	add	r4, ip
 80080cc:	1a24      	subs	r4, r4, r0
 80080ce:	fbb4 f0f9 	udiv	r0, r4, r9
 80080d2:	fb09 4410 	mls	r4, r9, r0, r4
 80080d6:	fb00 fe0e 	mul.w	lr, r0, lr
 80080da:	b2ad      	uxth	r5, r5
 80080dc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80080e0:	45a6      	cmp	lr, r4
 80080e2:	d908      	bls.n	80080f6 <__udivmoddi4+0x1e2>
 80080e4:	eb1c 0404 	adds.w	r4, ip, r4
 80080e8:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80080ec:	d26c      	bcs.n	80081c8 <__udivmoddi4+0x2b4>
 80080ee:	45a6      	cmp	lr, r4
 80080f0:	d96a      	bls.n	80081c8 <__udivmoddi4+0x2b4>
 80080f2:	3802      	subs	r0, #2
 80080f4:	4464      	add	r4, ip
 80080f6:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80080fa:	fba0 9502 	umull	r9, r5, r0, r2
 80080fe:	eba4 040e 	sub.w	r4, r4, lr
 8008102:	42ac      	cmp	r4, r5
 8008104:	46c8      	mov	r8, r9
 8008106:	46ae      	mov	lr, r5
 8008108:	d356      	bcc.n	80081b8 <__udivmoddi4+0x2a4>
 800810a:	d053      	beq.n	80081b4 <__udivmoddi4+0x2a0>
 800810c:	2e00      	cmp	r6, #0
 800810e:	d069      	beq.n	80081e4 <__udivmoddi4+0x2d0>
 8008110:	ebb3 0208 	subs.w	r2, r3, r8
 8008114:	eb64 040e 	sbc.w	r4, r4, lr
 8008118:	fa22 f301 	lsr.w	r3, r2, r1
 800811c:	fa04 f707 	lsl.w	r7, r4, r7
 8008120:	431f      	orrs	r7, r3
 8008122:	40cc      	lsrs	r4, r1
 8008124:	e9c6 7400 	strd	r7, r4, [r6]
 8008128:	2100      	movs	r1, #0
 800812a:	e747      	b.n	8007fbc <__udivmoddi4+0xa8>
 800812c:	fa0c fc02 	lsl.w	ip, ip, r2
 8008130:	f1c2 0120 	rsb	r1, r2, #32
 8008134:	fa25 f301 	lsr.w	r3, r5, r1
 8008138:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800813c:	fa20 f101 	lsr.w	r1, r0, r1
 8008140:	4095      	lsls	r5, r2
 8008142:	430d      	orrs	r5, r1
 8008144:	fbb3 f1f7 	udiv	r1, r3, r7
 8008148:	fb07 3311 	mls	r3, r7, r1, r3
 800814c:	fa1f fe8c 	uxth.w	lr, ip
 8008150:	0c28      	lsrs	r0, r5, #16
 8008152:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8008156:	fb01 f30e 	mul.w	r3, r1, lr
 800815a:	4283      	cmp	r3, r0
 800815c:	fa04 f402 	lsl.w	r4, r4, r2
 8008160:	d908      	bls.n	8008174 <__udivmoddi4+0x260>
 8008162:	eb1c 0000 	adds.w	r0, ip, r0
 8008166:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 800816a:	d22f      	bcs.n	80081cc <__udivmoddi4+0x2b8>
 800816c:	4283      	cmp	r3, r0
 800816e:	d92d      	bls.n	80081cc <__udivmoddi4+0x2b8>
 8008170:	3902      	subs	r1, #2
 8008172:	4460      	add	r0, ip
 8008174:	1ac0      	subs	r0, r0, r3
 8008176:	fbb0 f3f7 	udiv	r3, r0, r7
 800817a:	fb07 0013 	mls	r0, r7, r3, r0
 800817e:	b2ad      	uxth	r5, r5
 8008180:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8008184:	fb03 f00e 	mul.w	r0, r3, lr
 8008188:	42a8      	cmp	r0, r5
 800818a:	d908      	bls.n	800819e <__udivmoddi4+0x28a>
 800818c:	eb1c 0505 	adds.w	r5, ip, r5
 8008190:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8008194:	d216      	bcs.n	80081c4 <__udivmoddi4+0x2b0>
 8008196:	42a8      	cmp	r0, r5
 8008198:	d914      	bls.n	80081c4 <__udivmoddi4+0x2b0>
 800819a:	3b02      	subs	r3, #2
 800819c:	4465      	add	r5, ip
 800819e:	1a28      	subs	r0, r5, r0
 80081a0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80081a4:	e738      	b.n	8008018 <__udivmoddi4+0x104>
 80081a6:	4631      	mov	r1, r6
 80081a8:	4630      	mov	r0, r6
 80081aa:	e707      	b.n	8007fbc <__udivmoddi4+0xa8>
 80081ac:	462f      	mov	r7, r5
 80081ae:	e6e4      	b.n	8007f7a <__udivmoddi4+0x66>
 80081b0:	4618      	mov	r0, r3
 80081b2:	e6f9      	b.n	8007fa8 <__udivmoddi4+0x94>
 80081b4:	454b      	cmp	r3, r9
 80081b6:	d2a9      	bcs.n	800810c <__udivmoddi4+0x1f8>
 80081b8:	ebb9 0802 	subs.w	r8, r9, r2
 80081bc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80081c0:	3801      	subs	r0, #1
 80081c2:	e7a3      	b.n	800810c <__udivmoddi4+0x1f8>
 80081c4:	4643      	mov	r3, r8
 80081c6:	e7ea      	b.n	800819e <__udivmoddi4+0x28a>
 80081c8:	4628      	mov	r0, r5
 80081ca:	e794      	b.n	80080f6 <__udivmoddi4+0x1e2>
 80081cc:	4641      	mov	r1, r8
 80081ce:	e7d1      	b.n	8008174 <__udivmoddi4+0x260>
 80081d0:	46d0      	mov	r8, sl
 80081d2:	e77b      	b.n	80080cc <__udivmoddi4+0x1b8>
 80081d4:	4464      	add	r4, ip
 80081d6:	3802      	subs	r0, #2
 80081d8:	e747      	b.n	800806a <__udivmoddi4+0x156>
 80081da:	3b02      	subs	r3, #2
 80081dc:	4465      	add	r5, ip
 80081de:	e72f      	b.n	8008040 <__udivmoddi4+0x12c>
 80081e0:	4608      	mov	r0, r1
 80081e2:	e706      	b.n	8007ff2 <__udivmoddi4+0xde>
 80081e4:	4631      	mov	r1, r6
 80081e6:	e6e9      	b.n	8007fbc <__udivmoddi4+0xa8>

080081e8 <__aeabi_idiv0>:
 80081e8:	4770      	bx	lr
 80081ea:	bf00      	nop

080081ec <__aeabi_drsub>:
 80081ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80081f0:	e002      	b.n	80081f8 <__adddf3>
 80081f2:	bf00      	nop

080081f4 <__aeabi_dsub>:
 80081f4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080081f8 <__adddf3>:
 80081f8:	b530      	push	{r4, r5, lr}
 80081fa:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80081fe:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008202:	ea94 0f05 	teq	r4, r5
 8008206:	bf08      	it	eq
 8008208:	ea90 0f02 	teqeq	r0, r2
 800820c:	bf1f      	itttt	ne
 800820e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008212:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008216:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800821a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800821e:	f000 80e2 	beq.w	80083e6 <__adddf3+0x1ee>
 8008222:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008226:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800822a:	bfb8      	it	lt
 800822c:	426d      	neglt	r5, r5
 800822e:	dd0c      	ble.n	800824a <__adddf3+0x52>
 8008230:	442c      	add	r4, r5
 8008232:	ea80 0202 	eor.w	r2, r0, r2
 8008236:	ea81 0303 	eor.w	r3, r1, r3
 800823a:	ea82 0000 	eor.w	r0, r2, r0
 800823e:	ea83 0101 	eor.w	r1, r3, r1
 8008242:	ea80 0202 	eor.w	r2, r0, r2
 8008246:	ea81 0303 	eor.w	r3, r1, r3
 800824a:	2d36      	cmp	r5, #54	; 0x36
 800824c:	bf88      	it	hi
 800824e:	bd30      	pophi	{r4, r5, pc}
 8008250:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8008254:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008258:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800825c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008260:	d002      	beq.n	8008268 <__adddf3+0x70>
 8008262:	4240      	negs	r0, r0
 8008264:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008268:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800826c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008270:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008274:	d002      	beq.n	800827c <__adddf3+0x84>
 8008276:	4252      	negs	r2, r2
 8008278:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800827c:	ea94 0f05 	teq	r4, r5
 8008280:	f000 80a7 	beq.w	80083d2 <__adddf3+0x1da>
 8008284:	f1a4 0401 	sub.w	r4, r4, #1
 8008288:	f1d5 0e20 	rsbs	lr, r5, #32
 800828c:	db0d      	blt.n	80082aa <__adddf3+0xb2>
 800828e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8008292:	fa22 f205 	lsr.w	r2, r2, r5
 8008296:	1880      	adds	r0, r0, r2
 8008298:	f141 0100 	adc.w	r1, r1, #0
 800829c:	fa03 f20e 	lsl.w	r2, r3, lr
 80082a0:	1880      	adds	r0, r0, r2
 80082a2:	fa43 f305 	asr.w	r3, r3, r5
 80082a6:	4159      	adcs	r1, r3
 80082a8:	e00e      	b.n	80082c8 <__adddf3+0xd0>
 80082aa:	f1a5 0520 	sub.w	r5, r5, #32
 80082ae:	f10e 0e20 	add.w	lr, lr, #32
 80082b2:	2a01      	cmp	r2, #1
 80082b4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80082b8:	bf28      	it	cs
 80082ba:	f04c 0c02 	orrcs.w	ip, ip, #2
 80082be:	fa43 f305 	asr.w	r3, r3, r5
 80082c2:	18c0      	adds	r0, r0, r3
 80082c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80082c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80082cc:	d507      	bpl.n	80082de <__adddf3+0xe6>
 80082ce:	f04f 0e00 	mov.w	lr, #0
 80082d2:	f1dc 0c00 	rsbs	ip, ip, #0
 80082d6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80082da:	eb6e 0101 	sbc.w	r1, lr, r1
 80082de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80082e2:	d31b      	bcc.n	800831c <__adddf3+0x124>
 80082e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80082e8:	d30c      	bcc.n	8008304 <__adddf3+0x10c>
 80082ea:	0849      	lsrs	r1, r1, #1
 80082ec:	ea5f 0030 	movs.w	r0, r0, rrx
 80082f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80082f4:	f104 0401 	add.w	r4, r4, #1
 80082f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80082fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008300:	f080 809a 	bcs.w	8008438 <__adddf3+0x240>
 8008304:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008308:	bf08      	it	eq
 800830a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800830e:	f150 0000 	adcs.w	r0, r0, #0
 8008312:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8008316:	ea41 0105 	orr.w	r1, r1, r5
 800831a:	bd30      	pop	{r4, r5, pc}
 800831c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008320:	4140      	adcs	r0, r0
 8008322:	eb41 0101 	adc.w	r1, r1, r1
 8008326:	3c01      	subs	r4, #1
 8008328:	bf28      	it	cs
 800832a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800832e:	d2e9      	bcs.n	8008304 <__adddf3+0x10c>
 8008330:	f091 0f00 	teq	r1, #0
 8008334:	bf04      	itt	eq
 8008336:	4601      	moveq	r1, r0
 8008338:	2000      	moveq	r0, #0
 800833a:	fab1 f381 	clz	r3, r1
 800833e:	bf08      	it	eq
 8008340:	3320      	addeq	r3, #32
 8008342:	f1a3 030b 	sub.w	r3, r3, #11
 8008346:	f1b3 0220 	subs.w	r2, r3, #32
 800834a:	da0c      	bge.n	8008366 <__adddf3+0x16e>
 800834c:	320c      	adds	r2, #12
 800834e:	dd08      	ble.n	8008362 <__adddf3+0x16a>
 8008350:	f102 0c14 	add.w	ip, r2, #20
 8008354:	f1c2 020c 	rsb	r2, r2, #12
 8008358:	fa01 f00c 	lsl.w	r0, r1, ip
 800835c:	fa21 f102 	lsr.w	r1, r1, r2
 8008360:	e00c      	b.n	800837c <__adddf3+0x184>
 8008362:	f102 0214 	add.w	r2, r2, #20
 8008366:	bfd8      	it	le
 8008368:	f1c2 0c20 	rsble	ip, r2, #32
 800836c:	fa01 f102 	lsl.w	r1, r1, r2
 8008370:	fa20 fc0c 	lsr.w	ip, r0, ip
 8008374:	bfdc      	itt	le
 8008376:	ea41 010c 	orrle.w	r1, r1, ip
 800837a:	4090      	lslle	r0, r2
 800837c:	1ae4      	subs	r4, r4, r3
 800837e:	bfa2      	ittt	ge
 8008380:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8008384:	4329      	orrge	r1, r5
 8008386:	bd30      	popge	{r4, r5, pc}
 8008388:	ea6f 0404 	mvn.w	r4, r4
 800838c:	3c1f      	subs	r4, #31
 800838e:	da1c      	bge.n	80083ca <__adddf3+0x1d2>
 8008390:	340c      	adds	r4, #12
 8008392:	dc0e      	bgt.n	80083b2 <__adddf3+0x1ba>
 8008394:	f104 0414 	add.w	r4, r4, #20
 8008398:	f1c4 0220 	rsb	r2, r4, #32
 800839c:	fa20 f004 	lsr.w	r0, r0, r4
 80083a0:	fa01 f302 	lsl.w	r3, r1, r2
 80083a4:	ea40 0003 	orr.w	r0, r0, r3
 80083a8:	fa21 f304 	lsr.w	r3, r1, r4
 80083ac:	ea45 0103 	orr.w	r1, r5, r3
 80083b0:	bd30      	pop	{r4, r5, pc}
 80083b2:	f1c4 040c 	rsb	r4, r4, #12
 80083b6:	f1c4 0220 	rsb	r2, r4, #32
 80083ba:	fa20 f002 	lsr.w	r0, r0, r2
 80083be:	fa01 f304 	lsl.w	r3, r1, r4
 80083c2:	ea40 0003 	orr.w	r0, r0, r3
 80083c6:	4629      	mov	r1, r5
 80083c8:	bd30      	pop	{r4, r5, pc}
 80083ca:	fa21 f004 	lsr.w	r0, r1, r4
 80083ce:	4629      	mov	r1, r5
 80083d0:	bd30      	pop	{r4, r5, pc}
 80083d2:	f094 0f00 	teq	r4, #0
 80083d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80083da:	bf06      	itte	eq
 80083dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80083e0:	3401      	addeq	r4, #1
 80083e2:	3d01      	subne	r5, #1
 80083e4:	e74e      	b.n	8008284 <__adddf3+0x8c>
 80083e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80083ea:	bf18      	it	ne
 80083ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80083f0:	d029      	beq.n	8008446 <__adddf3+0x24e>
 80083f2:	ea94 0f05 	teq	r4, r5
 80083f6:	bf08      	it	eq
 80083f8:	ea90 0f02 	teqeq	r0, r2
 80083fc:	d005      	beq.n	800840a <__adddf3+0x212>
 80083fe:	ea54 0c00 	orrs.w	ip, r4, r0
 8008402:	bf04      	itt	eq
 8008404:	4619      	moveq	r1, r3
 8008406:	4610      	moveq	r0, r2
 8008408:	bd30      	pop	{r4, r5, pc}
 800840a:	ea91 0f03 	teq	r1, r3
 800840e:	bf1e      	ittt	ne
 8008410:	2100      	movne	r1, #0
 8008412:	2000      	movne	r0, #0
 8008414:	bd30      	popne	{r4, r5, pc}
 8008416:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800841a:	d105      	bne.n	8008428 <__adddf3+0x230>
 800841c:	0040      	lsls	r0, r0, #1
 800841e:	4149      	adcs	r1, r1
 8008420:	bf28      	it	cs
 8008422:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8008426:	bd30      	pop	{r4, r5, pc}
 8008428:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800842c:	bf3c      	itt	cc
 800842e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8008432:	bd30      	popcc	{r4, r5, pc}
 8008434:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008438:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800843c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008440:	f04f 0000 	mov.w	r0, #0
 8008444:	bd30      	pop	{r4, r5, pc}
 8008446:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800844a:	bf1a      	itte	ne
 800844c:	4619      	movne	r1, r3
 800844e:	4610      	movne	r0, r2
 8008450:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8008454:	bf1c      	itt	ne
 8008456:	460b      	movne	r3, r1
 8008458:	4602      	movne	r2, r0
 800845a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800845e:	bf06      	itte	eq
 8008460:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8008464:	ea91 0f03 	teqeq	r1, r3
 8008468:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800846c:	bd30      	pop	{r4, r5, pc}
 800846e:	bf00      	nop

08008470 <__aeabi_ui2d>:
 8008470:	f090 0f00 	teq	r0, #0
 8008474:	bf04      	itt	eq
 8008476:	2100      	moveq	r1, #0
 8008478:	4770      	bxeq	lr
 800847a:	b530      	push	{r4, r5, lr}
 800847c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008480:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008484:	f04f 0500 	mov.w	r5, #0
 8008488:	f04f 0100 	mov.w	r1, #0
 800848c:	e750      	b.n	8008330 <__adddf3+0x138>
 800848e:	bf00      	nop

08008490 <__aeabi_i2d>:
 8008490:	f090 0f00 	teq	r0, #0
 8008494:	bf04      	itt	eq
 8008496:	2100      	moveq	r1, #0
 8008498:	4770      	bxeq	lr
 800849a:	b530      	push	{r4, r5, lr}
 800849c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80084a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80084a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80084a8:	bf48      	it	mi
 80084aa:	4240      	negmi	r0, r0
 80084ac:	f04f 0100 	mov.w	r1, #0
 80084b0:	e73e      	b.n	8008330 <__adddf3+0x138>
 80084b2:	bf00      	nop

080084b4 <__aeabi_f2d>:
 80084b4:	0042      	lsls	r2, r0, #1
 80084b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80084ba:	ea4f 0131 	mov.w	r1, r1, rrx
 80084be:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80084c2:	bf1f      	itttt	ne
 80084c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80084c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80084cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80084d0:	4770      	bxne	lr
 80084d2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80084d6:	bf08      	it	eq
 80084d8:	4770      	bxeq	lr
 80084da:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80084de:	bf04      	itt	eq
 80084e0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80084e4:	4770      	bxeq	lr
 80084e6:	b530      	push	{r4, r5, lr}
 80084e8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80084ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80084f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80084f4:	e71c      	b.n	8008330 <__adddf3+0x138>
 80084f6:	bf00      	nop

080084f8 <__aeabi_ul2d>:
 80084f8:	ea50 0201 	orrs.w	r2, r0, r1
 80084fc:	bf08      	it	eq
 80084fe:	4770      	bxeq	lr
 8008500:	b530      	push	{r4, r5, lr}
 8008502:	f04f 0500 	mov.w	r5, #0
 8008506:	e00a      	b.n	800851e <__aeabi_l2d+0x16>

08008508 <__aeabi_l2d>:
 8008508:	ea50 0201 	orrs.w	r2, r0, r1
 800850c:	bf08      	it	eq
 800850e:	4770      	bxeq	lr
 8008510:	b530      	push	{r4, r5, lr}
 8008512:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8008516:	d502      	bpl.n	800851e <__aeabi_l2d+0x16>
 8008518:	4240      	negs	r0, r0
 800851a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800851e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008522:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8008526:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800852a:	f43f aed8 	beq.w	80082de <__adddf3+0xe6>
 800852e:	f04f 0203 	mov.w	r2, #3
 8008532:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8008536:	bf18      	it	ne
 8008538:	3203      	addne	r2, #3
 800853a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800853e:	bf18      	it	ne
 8008540:	3203      	addne	r2, #3
 8008542:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8008546:	f1c2 0320 	rsb	r3, r2, #32
 800854a:	fa00 fc03 	lsl.w	ip, r0, r3
 800854e:	fa20 f002 	lsr.w	r0, r0, r2
 8008552:	fa01 fe03 	lsl.w	lr, r1, r3
 8008556:	ea40 000e 	orr.w	r0, r0, lr
 800855a:	fa21 f102 	lsr.w	r1, r1, r2
 800855e:	4414      	add	r4, r2
 8008560:	e6bd      	b.n	80082de <__adddf3+0xe6>
 8008562:	bf00      	nop

08008564 <__aeabi_fmul>:
 8008564:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008568:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800856c:	bf1e      	ittt	ne
 800856e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008572:	ea92 0f0c 	teqne	r2, ip
 8008576:	ea93 0f0c 	teqne	r3, ip
 800857a:	d06f      	beq.n	800865c <__aeabi_fmul+0xf8>
 800857c:	441a      	add	r2, r3
 800857e:	ea80 0c01 	eor.w	ip, r0, r1
 8008582:	0240      	lsls	r0, r0, #9
 8008584:	bf18      	it	ne
 8008586:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800858a:	d01e      	beq.n	80085ca <__aeabi_fmul+0x66>
 800858c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008590:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8008594:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008598:	fba0 3101 	umull	r3, r1, r0, r1
 800859c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80085a0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80085a4:	bf3e      	ittt	cc
 80085a6:	0049      	lslcc	r1, r1, #1
 80085a8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80085ac:	005b      	lslcc	r3, r3, #1
 80085ae:	ea40 0001 	orr.w	r0, r0, r1
 80085b2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80085b6:	2afd      	cmp	r2, #253	; 0xfd
 80085b8:	d81d      	bhi.n	80085f6 <__aeabi_fmul+0x92>
 80085ba:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80085be:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80085c2:	bf08      	it	eq
 80085c4:	f020 0001 	biceq.w	r0, r0, #1
 80085c8:	4770      	bx	lr
 80085ca:	f090 0f00 	teq	r0, #0
 80085ce:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80085d2:	bf08      	it	eq
 80085d4:	0249      	lsleq	r1, r1, #9
 80085d6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80085da:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80085de:	3a7f      	subs	r2, #127	; 0x7f
 80085e0:	bfc2      	ittt	gt
 80085e2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80085e6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80085ea:	4770      	bxgt	lr
 80085ec:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80085f0:	f04f 0300 	mov.w	r3, #0
 80085f4:	3a01      	subs	r2, #1
 80085f6:	dc5d      	bgt.n	80086b4 <__aeabi_fmul+0x150>
 80085f8:	f112 0f19 	cmn.w	r2, #25
 80085fc:	bfdc      	itt	le
 80085fe:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8008602:	4770      	bxle	lr
 8008604:	f1c2 0200 	rsb	r2, r2, #0
 8008608:	0041      	lsls	r1, r0, #1
 800860a:	fa21 f102 	lsr.w	r1, r1, r2
 800860e:	f1c2 0220 	rsb	r2, r2, #32
 8008612:	fa00 fc02 	lsl.w	ip, r0, r2
 8008616:	ea5f 0031 	movs.w	r0, r1, rrx
 800861a:	f140 0000 	adc.w	r0, r0, #0
 800861e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8008622:	bf08      	it	eq
 8008624:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008628:	4770      	bx	lr
 800862a:	f092 0f00 	teq	r2, #0
 800862e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008632:	bf02      	ittt	eq
 8008634:	0040      	lsleq	r0, r0, #1
 8008636:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800863a:	3a01      	subeq	r2, #1
 800863c:	d0f9      	beq.n	8008632 <__aeabi_fmul+0xce>
 800863e:	ea40 000c 	orr.w	r0, r0, ip
 8008642:	f093 0f00 	teq	r3, #0
 8008646:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800864a:	bf02      	ittt	eq
 800864c:	0049      	lsleq	r1, r1, #1
 800864e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008652:	3b01      	subeq	r3, #1
 8008654:	d0f9      	beq.n	800864a <__aeabi_fmul+0xe6>
 8008656:	ea41 010c 	orr.w	r1, r1, ip
 800865a:	e78f      	b.n	800857c <__aeabi_fmul+0x18>
 800865c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008660:	ea92 0f0c 	teq	r2, ip
 8008664:	bf18      	it	ne
 8008666:	ea93 0f0c 	teqne	r3, ip
 800866a:	d00a      	beq.n	8008682 <__aeabi_fmul+0x11e>
 800866c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008670:	bf18      	it	ne
 8008672:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008676:	d1d8      	bne.n	800862a <__aeabi_fmul+0xc6>
 8008678:	ea80 0001 	eor.w	r0, r0, r1
 800867c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008680:	4770      	bx	lr
 8008682:	f090 0f00 	teq	r0, #0
 8008686:	bf17      	itett	ne
 8008688:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 800868c:	4608      	moveq	r0, r1
 800868e:	f091 0f00 	teqne	r1, #0
 8008692:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8008696:	d014      	beq.n	80086c2 <__aeabi_fmul+0x15e>
 8008698:	ea92 0f0c 	teq	r2, ip
 800869c:	d101      	bne.n	80086a2 <__aeabi_fmul+0x13e>
 800869e:	0242      	lsls	r2, r0, #9
 80086a0:	d10f      	bne.n	80086c2 <__aeabi_fmul+0x15e>
 80086a2:	ea93 0f0c 	teq	r3, ip
 80086a6:	d103      	bne.n	80086b0 <__aeabi_fmul+0x14c>
 80086a8:	024b      	lsls	r3, r1, #9
 80086aa:	bf18      	it	ne
 80086ac:	4608      	movne	r0, r1
 80086ae:	d108      	bne.n	80086c2 <__aeabi_fmul+0x15e>
 80086b0:	ea80 0001 	eor.w	r0, r0, r1
 80086b4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80086b8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80086bc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80086c0:	4770      	bx	lr
 80086c2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80086c6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80086ca:	4770      	bx	lr

080086cc <__aeabi_fdiv>:
 80086cc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80086d0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80086d4:	bf1e      	ittt	ne
 80086d6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80086da:	ea92 0f0c 	teqne	r2, ip
 80086de:	ea93 0f0c 	teqne	r3, ip
 80086e2:	d069      	beq.n	80087b8 <__aeabi_fdiv+0xec>
 80086e4:	eba2 0203 	sub.w	r2, r2, r3
 80086e8:	ea80 0c01 	eor.w	ip, r0, r1
 80086ec:	0249      	lsls	r1, r1, #9
 80086ee:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80086f2:	d037      	beq.n	8008764 <__aeabi_fdiv+0x98>
 80086f4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80086f8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 80086fc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008700:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008704:	428b      	cmp	r3, r1
 8008706:	bf38      	it	cc
 8008708:	005b      	lslcc	r3, r3, #1
 800870a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 800870e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8008712:	428b      	cmp	r3, r1
 8008714:	bf24      	itt	cs
 8008716:	1a5b      	subcs	r3, r3, r1
 8008718:	ea40 000c 	orrcs.w	r0, r0, ip
 800871c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008720:	bf24      	itt	cs
 8008722:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8008726:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800872a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 800872e:	bf24      	itt	cs
 8008730:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8008734:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008738:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 800873c:	bf24      	itt	cs
 800873e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8008742:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8008746:	011b      	lsls	r3, r3, #4
 8008748:	bf18      	it	ne
 800874a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 800874e:	d1e0      	bne.n	8008712 <__aeabi_fdiv+0x46>
 8008750:	2afd      	cmp	r2, #253	; 0xfd
 8008752:	f63f af50 	bhi.w	80085f6 <__aeabi_fmul+0x92>
 8008756:	428b      	cmp	r3, r1
 8008758:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800875c:	bf08      	it	eq
 800875e:	f020 0001 	biceq.w	r0, r0, #1
 8008762:	4770      	bx	lr
 8008764:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008768:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800876c:	327f      	adds	r2, #127	; 0x7f
 800876e:	bfc2      	ittt	gt
 8008770:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8008774:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008778:	4770      	bxgt	lr
 800877a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800877e:	f04f 0300 	mov.w	r3, #0
 8008782:	3a01      	subs	r2, #1
 8008784:	e737      	b.n	80085f6 <__aeabi_fmul+0x92>
 8008786:	f092 0f00 	teq	r2, #0
 800878a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800878e:	bf02      	ittt	eq
 8008790:	0040      	lsleq	r0, r0, #1
 8008792:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8008796:	3a01      	subeq	r2, #1
 8008798:	d0f9      	beq.n	800878e <__aeabi_fdiv+0xc2>
 800879a:	ea40 000c 	orr.w	r0, r0, ip
 800879e:	f093 0f00 	teq	r3, #0
 80087a2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80087a6:	bf02      	ittt	eq
 80087a8:	0049      	lsleq	r1, r1, #1
 80087aa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80087ae:	3b01      	subeq	r3, #1
 80087b0:	d0f9      	beq.n	80087a6 <__aeabi_fdiv+0xda>
 80087b2:	ea41 010c 	orr.w	r1, r1, ip
 80087b6:	e795      	b.n	80086e4 <__aeabi_fdiv+0x18>
 80087b8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80087bc:	ea92 0f0c 	teq	r2, ip
 80087c0:	d108      	bne.n	80087d4 <__aeabi_fdiv+0x108>
 80087c2:	0242      	lsls	r2, r0, #9
 80087c4:	f47f af7d 	bne.w	80086c2 <__aeabi_fmul+0x15e>
 80087c8:	ea93 0f0c 	teq	r3, ip
 80087cc:	f47f af70 	bne.w	80086b0 <__aeabi_fmul+0x14c>
 80087d0:	4608      	mov	r0, r1
 80087d2:	e776      	b.n	80086c2 <__aeabi_fmul+0x15e>
 80087d4:	ea93 0f0c 	teq	r3, ip
 80087d8:	d104      	bne.n	80087e4 <__aeabi_fdiv+0x118>
 80087da:	024b      	lsls	r3, r1, #9
 80087dc:	f43f af4c 	beq.w	8008678 <__aeabi_fmul+0x114>
 80087e0:	4608      	mov	r0, r1
 80087e2:	e76e      	b.n	80086c2 <__aeabi_fmul+0x15e>
 80087e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80087e8:	bf18      	it	ne
 80087ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80087ee:	d1ca      	bne.n	8008786 <__aeabi_fdiv+0xba>
 80087f0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80087f4:	f47f af5c 	bne.w	80086b0 <__aeabi_fmul+0x14c>
 80087f8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 80087fc:	f47f af3c 	bne.w	8008678 <__aeabi_fmul+0x114>
 8008800:	e75f      	b.n	80086c2 <__aeabi_fmul+0x15e>
 8008802:	bf00      	nop

08008804 <__aeabi_f2uiz>:
 8008804:	0042      	lsls	r2, r0, #1
 8008806:	d20e      	bcs.n	8008826 <__aeabi_f2uiz+0x22>
 8008808:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800880c:	d30b      	bcc.n	8008826 <__aeabi_f2uiz+0x22>
 800880e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008812:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8008816:	d409      	bmi.n	800882c <__aeabi_f2uiz+0x28>
 8008818:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800881c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008820:	fa23 f002 	lsr.w	r0, r3, r2
 8008824:	4770      	bx	lr
 8008826:	f04f 0000 	mov.w	r0, #0
 800882a:	4770      	bx	lr
 800882c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008830:	d101      	bne.n	8008836 <__aeabi_f2uiz+0x32>
 8008832:	0242      	lsls	r2, r0, #9
 8008834:	d102      	bne.n	800883c <__aeabi_f2uiz+0x38>
 8008836:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800883a:	4770      	bx	lr
 800883c:	f04f 0000 	mov.w	r0, #0
 8008840:	4770      	bx	lr
 8008842:	bf00      	nop

08008844 <__popcountsi2>:
 8008844:	0843      	lsrs	r3, r0, #1
 8008846:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 800884a:	1ac0      	subs	r0, r0, r3
 800884c:	0883      	lsrs	r3, r0, #2
 800884e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8008852:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8008856:	4418      	add	r0, r3
 8008858:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 800885c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8008860:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8008864:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8008868:	0e00      	lsrs	r0, r0, #24
 800886a:	4770      	bx	lr

0800886c <Reset_Handler>:
 800886c:	480c      	ldr	r0, [pc, #48]	; (80088a0 <Zerobss+0x10>)
 800886e:	4685      	mov	sp, r0
 8008870:	2100      	movs	r1, #0
 8008872:	e003      	b.n	800887c <DataInit>

08008874 <CopyData>:
 8008874:	4b0b      	ldr	r3, [pc, #44]	; (80088a4 <Zerobss+0x14>)
 8008876:	585b      	ldr	r3, [r3, r1]
 8008878:	5043      	str	r3, [r0, r1]
 800887a:	3104      	adds	r1, #4

0800887c <DataInit>:
 800887c:	480a      	ldr	r0, [pc, #40]	; (80088a8 <Zerobss+0x18>)
 800887e:	4b0b      	ldr	r3, [pc, #44]	; (80088ac <Zerobss+0x1c>)
 8008880:	1842      	adds	r2, r0, r1
 8008882:	429a      	cmp	r2, r3
 8008884:	d3f6      	bcc.n	8008874 <CopyData>
 8008886:	4a0a      	ldr	r2, [pc, #40]	; (80088b0 <Zerobss+0x20>)
 8008888:	e002      	b.n	8008890 <Zerobss>

0800888a <FillZerobss>:
 800888a:	2300      	movs	r3, #0
 800888c:	f842 3b04 	str.w	r3, [r2], #4

08008890 <Zerobss>:
 8008890:	4b08      	ldr	r3, [pc, #32]	; (80088b4 <Zerobss+0x24>)
 8008892:	429a      	cmp	r2, r3
 8008894:	d3f9      	bcc.n	800888a <FillZerobss>
 8008896:	f008 fddd 	bl	8011454 <SystemInit>
 800889a:	f000 f933 	bl	8008b04 <main>
 800889e:	4770      	bx	lr
 80088a0:	20018000 	andcs	r8, r1, r0
 80088a4:	080150d4 	stmdaeq	r1, {r2, r4, r6, r7, ip, lr}
 80088a8:	20000000 	andcs	r0, r0, r0
 80088ac:	200000e4 	andcs	r0, r0, r4, ror #1
 80088b0:	200000e8 	andcs	r0, r0, r8, ror #1
 80088b4:	20013c14 	andcs	r3, r1, r4, lsl ip

080088b8 <ADC0_1_IRQHandler>:
 80088b8:	e7fe      	b.n	80088b8 <ADC0_1_IRQHandler>

080088ba <DisplayHandler::~DisplayHandler()>:
 80088ba:	4770      	bx	lr

080088bc <PixelDmxStartStop::~PixelDmxStartStop()>:
 80088bc:	4770      	bx	lr
	...

080088c0 <PixelDmxStartStop::Start()>:
 80088c0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80088c4:	4b01      	ldr	r3, [pc, #4]	; (80088cc <PixelDmxStartStop::Start()+0xc>)
 80088c6:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80088ca:	4770      	bx	lr
 80088cc:	40010000 	andmi	r0, r1, r0

080088d0 <PixelDmxStartStop::Stop()>:
 80088d0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80088d4:	4b01      	ldr	r3, [pc, #4]	; (80088dc <PixelDmxStartStop::Stop()+0xc>)
 80088d6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80088da:	4770      	bx	lr
 80088dc:	40010000 	andmi	r0, r1, r0

080088e0 <Handler::~Handler()>:
 80088e0:	4770      	bx	lr

080088e2 <DisplayHandler::~DisplayHandler()>:
 80088e2:	b510      	push	{r4, lr}
 80088e4:	4604      	mov	r4, r0
 80088e6:	f008 fb5d 	bl	8010fa4 <operator delete(void*)>
 80088ea:	4620      	mov	r0, r4
 80088ec:	bd10      	pop	{r4, pc}

080088ee <Handler::~Handler()>:
 80088ee:	b510      	push	{r4, lr}
 80088f0:	4604      	mov	r4, r0
 80088f2:	f008 fb57 	bl	8010fa4 <operator delete(void*)>
 80088f6:	4620      	mov	r0, r4
 80088f8:	bd10      	pop	{r4, pc}

080088fa <PixelDmxStartStop::~PixelDmxStartStop()>:
 80088fa:	b510      	push	{r4, lr}
 80088fc:	4604      	mov	r4, r0
 80088fe:	f008 fb51 	bl	8010fa4 <operator delete(void*)>
 8008902:	4620      	mov	r0, r4
 8008904:	bd10      	pop	{r4, pc}
	...

08008908 <Handler::Info(int, unsigned int, unsigned short)>:
 8008908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800890c:	461e      	mov	r6, r3
 800890e:	6843      	ldr	r3, [r0, #4]
 8008910:	b088      	sub	sp, #32
 8008912:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008914:	4607      	mov	r7, r0
 8008916:	6818      	ldr	r0, [r3, #0]
 8008918:	460c      	mov	r4, r1
 800891a:	4615      	mov	r5, r2
 800891c:	f002 fda6 	bl	800b46c <PixelType::GetType(pixel::Type)>
 8008920:	4b15      	ldr	r3, [pc, #84]	; (8008978 <Handler::Info(int, unsigned int, unsigned short)+0x70>)
 8008922:	462a      	mov	r2, r5
 8008924:	9301      	str	r3, [sp, #4]
 8008926:	4b15      	ldr	r3, [pc, #84]	; (800897c <Handler::Info(int, unsigned int, unsigned short)+0x74>)
 8008928:	4621      	mov	r1, r4
 800892a:	9002      	str	r0, [sp, #8]
 800892c:	9300      	str	r3, [sp, #0]
 800892e:	a805      	add	r0, sp, #20
 8008930:	4633      	mov	r3, r6
 8008932:	f001 fcd7 	bl	800a2e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8008936:	687a      	ldr	r2, [r7, #4]
 8008938:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8008980 <Handler::Info(int, unsigned int, unsigned short)+0x78>
 800893c:	6993      	ldr	r3, [r2, #24]
 800893e:	6952      	ldr	r2, [r2, #20]
 8008940:	4621      	mov	r1, r4
 8008942:	4353      	muls	r3, r2
 8008944:	9302      	str	r3, [sp, #8]
 8008946:	4b0f      	ldr	r3, [pc, #60]	; (8008984 <Handler::Info(int, unsigned int, unsigned short)+0x7c>)
 8008948:	462a      	mov	r2, r5
 800894a:	9300      	str	r3, [sp, #0]
 800894c:	f8cd 8004 	str.w	r8, [sp, #4]
 8008950:	4633      	mov	r3, r6
 8008952:	a806      	add	r0, sp, #24
 8008954:	f001 fd04 	bl	800a360 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	462a      	mov	r2, r5
 800895c:	699b      	ldr	r3, [r3, #24]
 800895e:	4621      	mov	r1, r4
 8008960:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8008964:	4b08      	ldr	r3, [pc, #32]	; (8008988 <Handler::Info(int, unsigned int, unsigned short)+0x80>)
 8008966:	a807      	add	r0, sp, #28
 8008968:	9300      	str	r3, [sp, #0]
 800896a:	4633      	mov	r3, r6
 800896c:	f001 fcf8 	bl	800a360 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>
 8008970:	b008      	add	sp, #32
 8008972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008976:	bf00      	nop
 8008978:	0801340c 	stmdaeq	r1, {r2, r3, sl, ip, sp}
 800897c:	080132ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, sp}
 8008980:	080132ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, sp}
 8008984:	080132bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, ip, sp}
 8008988:	080132cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, ip, sp}

0800898c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 800898c:	b110      	cbz	r0, 8008994 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 800898e:	6803      	ldr	r3, [r0, #0]
 8008990:	6a1b      	ldr	r3, [r3, #32]
 8008992:	4718      	bx	r3
 8008994:	4770      	bx	lr

08008996 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8008996:	b430      	push	{r4, r5}
 8008998:	b168      	cbz	r0, 80089b6 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800899a:	2300      	movs	r3, #0
 800899c:	7905      	ldrb	r5, [r0, #4]
 800899e:	5cd4      	ldrb	r4, [r2, r3]
 80089a0:	b11c      	cbz	r4, 80089aa <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80089a2:	1c5c      	adds	r4, r3, #1
 80089a4:	429d      	cmp	r5, r3
 80089a6:	4623      	mov	r3, r4
 80089a8:	dcf9      	bgt.n	800899e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 80089aa:	6804      	ldr	r4, [r0, #0]
 80089ac:	b2db      	uxtb	r3, r3
 80089ae:	69e4      	ldr	r4, [r4, #28]
 80089b0:	46a4      	mov	ip, r4
 80089b2:	bc30      	pop	{r4, r5}
 80089b4:	4760      	bx	ip
 80089b6:	bc30      	pop	{r4, r5}
 80089b8:	4770      	bx	lr

080089ba <Display::PutChar(int) [clone .isra.0]>:
 80089ba:	b110      	cbz	r0, 80089c2 <Display::PutChar(int) [clone .isra.0]+0x8>
 80089bc:	6803      	ldr	r3, [r0, #0]
 80089be:	695b      	ldr	r3, [r3, #20]
 80089c0:	4718      	bx	r3
 80089c2:	4770      	bx	lr

080089c4 <DisplayHandler::Print(unsigned int)>:
 80089c4:	b538      	push	{r3, r4, r5, lr}
 80089c6:	7903      	ldrb	r3, [r0, #4]
 80089c8:	b1f3      	cbz	r3, 8008a08 <DisplayHandler::Print(unsigned int)+0x44>
 80089ca:	2904      	cmp	r1, #4
 80089cc:	bf98      	it	ls
 80089ce:	4b0f      	ldrls	r3, [pc, #60]	; (8008a0c <DisplayHandler::Print(unsigned int)+0x48>)
 80089d0:	4d0f      	ldr	r5, [pc, #60]	; (8008a10 <DisplayHandler::Print(unsigned int)+0x4c>)
 80089d2:	bf98      	it	ls
 80089d4:	5c5c      	ldrbls	r4, [r3, r1]
 80089d6:	682b      	ldr	r3, [r5, #0]
 80089d8:	bf88      	it	hi
 80089da:	2455      	movhi	r4, #85	; 0x55
 80089dc:	6998      	ldr	r0, [r3, #24]
 80089de:	b178      	cbz	r0, 8008a00 <DisplayHandler::Print(unsigned int)+0x3c>
 80089e0:	7901      	ldrb	r1, [r0, #4]
 80089e2:	3901      	subs	r1, #1
 80089e4:	b2c9      	uxtb	r1, r1
 80089e6:	b168      	cbz	r0, 8008a04 <DisplayHandler::Print(unsigned int)+0x40>
 80089e8:	7942      	ldrb	r2, [r0, #5]
 80089ea:	3a01      	subs	r2, #1
 80089ec:	b2d2      	uxtb	r2, r2
 80089ee:	f7ff ffcd 	bl	800898c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80089f2:	682b      	ldr	r3, [r5, #0]
 80089f4:	4621      	mov	r1, r4
 80089f6:	6998      	ldr	r0, [r3, #24]
 80089f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80089fc:	f7ff bfdd 	b.w	80089ba <Display::PutChar(int) [clone .isra.0]>
 8008a00:	4601      	mov	r1, r0
 8008a02:	e7ee      	b.n	80089e2 <DisplayHandler::Print(unsigned int)+0x1e>
 8008a04:	4602      	mov	r2, r0
 8008a06:	e7f0      	b.n	80089ea <DisplayHandler::Print(unsigned int)+0x26>
 8008a08:	bd38      	pop	{r3, r4, r5, pc}
 8008a0a:	bf00      	nop
 8008a0c:	080133d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, ip, sp}
 8008a10:	200096a0 	andcs	r9, r0, r0, lsr #13

08008a14 <Display::SetSleep(bool)>:
 8008a14:	b538      	push	{r3, r4, r5, lr}
 8008a16:	4604      	mov	r4, r0
 8008a18:	6980      	ldr	r0, [r0, #24]
 8008a1a:	460d      	mov	r5, r1
 8008a1c:	b138      	cbz	r0, 8008a2e <Display::SetSleep(bool)+0x1a>
 8008a1e:	6803      	ldr	r3, [r0, #0]
 8008a20:	7421      	strb	r1, [r4, #16]
 8008a22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008a24:	4798      	blx	r3
 8008a26:	b915      	cbnz	r5, 8008a2e <Display::SetSleep(bool)+0x1a>
 8008a28:	4b01      	ldr	r3, [pc, #4]	; (8008a30 <Display::SetSleep(bool)+0x1c>)
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	6063      	str	r3, [r4, #4]
 8008a2e:	bd38      	pop	{r3, r4, r5, pc}
 8008a30:	200097a4 	andcs	r9, r0, r4, lsr #15

08008a34 <Display::Printf(unsigned char, char const*, ...)>:
 8008a34:	b40c      	push	{r2, r3}
 8008a36:	b570      	push	{r4, r5, r6, lr}
 8008a38:	6984      	ldr	r4, [r0, #24]
 8008a3a:	4605      	mov	r5, r0
 8008a3c:	460e      	mov	r6, r1
 8008a3e:	b08a      	sub	sp, #40	; 0x28
 8008a40:	b174      	cbz	r4, 8008a60 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8008a42:	ab0f      	add	r3, sp, #60	; 0x3c
 8008a44:	2120      	movs	r1, #32
 8008a46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008a48:	a802      	add	r0, sp, #8
 8008a4a:	9301      	str	r3, [sp, #4]
 8008a4c:	f000 fdd8 	bl	8009600 <vsnprintf>
 8008a50:	4604      	mov	r4, r0
 8008a52:	69a8      	ldr	r0, [r5, #24]
 8008a54:	4631      	mov	r1, r6
 8008a56:	6803      	ldr	r3, [r0, #0]
 8008a58:	aa02      	add	r2, sp, #8
 8008a5a:	69dd      	ldr	r5, [r3, #28]
 8008a5c:	b2a3      	uxth	r3, r4
 8008a5e:	47a8      	blx	r5
 8008a60:	4620      	mov	r0, r4
 8008a62:	b00a      	add	sp, #40	; 0x28
 8008a64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008a68:	b002      	add	sp, #8
 8008a6a:	4770      	bx	lr

08008a6c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008a6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a70:	4604      	mov	r4, r0
 8008a72:	6980      	ldr	r0, [r0, #24]
 8008a74:	460f      	mov	r7, r1
 8008a76:	4615      	mov	r5, r2
 8008a78:	461e      	mov	r6, r3
 8008a7a:	b308      	cbz	r0, 8008ac0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x54>
 8008a7c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8008a80:	2100      	movs	r1, #0
 8008a82:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8008a86:	fa5f f888 	uxtb.w	r8, r8
 8008a8a:	4642      	mov	r2, r8
 8008a8c:	f890 b004 	ldrb.w	fp, [r0, #4]
 8008a90:	f04f 0900 	mov.w	r9, #0
 8008a94:	f7ff ff7a 	bl	800898c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008a98:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008a9c:	45cb      	cmp	fp, r9
 8008a9e:	69a0      	ldr	r0, [r4, #24]
 8008aa0:	d905      	bls.n	8008aae <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x42>
 8008aa2:	2120      	movs	r1, #32
 8008aa4:	f7ff ff89 	bl	80089ba <Display::PutChar(int) [clone .isra.0]>
 8008aa8:	f109 0901 	add.w	r9, r9, #1
 8008aac:	e7f6      	b.n	8008a9c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 8008aae:	4642      	mov	r2, r8
 8008ab0:	2100      	movs	r1, #0
 8008ab2:	f7ff ff6b 	bl	800898c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008ab6:	463a      	mov	r2, r7
 8008ab8:	4651      	mov	r1, sl
 8008aba:	69a0      	ldr	r0, [r4, #24]
 8008abc:	f7ff ff6b 	bl	8008996 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008ac0:	7c63      	ldrb	r3, [r4, #17]
 8008ac2:	b19b      	cbz	r3, 8008aec <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x80>
 8008ac4:	43ed      	mvns	r5, r5
 8008ac6:	2312      	movs	r3, #18
 8008ac8:	7a20      	ldrb	r0, [r4, #8]
 8008aca:	f88d 3004 	strb.w	r3, [sp, #4]
 8008ace:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8008ad2:	f88d 3005 	strb.w	r3, [sp, #5]
 8008ad6:	f88d 5006 	strb.w	r5, [sp, #6]
 8008ada:	f009 faa7 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 8008ade:	68e0      	ldr	r0, [r4, #12]
 8008ae0:	f009 fa9c 	bl	801201c <gd32_i2c_set_baudrate(unsigned int)>
 8008ae4:	2103      	movs	r1, #3
 8008ae6:	a801      	add	r0, sp, #4
 8008ae8:	f009 faa6 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8008aec:	1c73      	adds	r3, r6, #1
 8008aee:	d006      	beq.n	8008afe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 8008af0:	4639      	mov	r1, r7
 8008af2:	4630      	mov	r0, r6
 8008af4:	b003      	add	sp, #12
 8008af6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008afa:	f008 b90d 	b.w	8010d18 <console_status>
 8008afe:	b003      	add	sp, #12
 8008b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08008b04 <main>:
 8008b04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008b08:	f6ad 1dd8 	subw	sp, sp, #2520	; 0x9d8
 8008b0c:	a810      	add	r0, sp, #64	; 0x40
 8008b0e:	f008 f9b7 	bl	8010e80 <Hardware::Hardware()>
 8008b12:	a864      	add	r0, sp, #400	; 0x190
 8008b14:	f006 fb7c 	bl	800f210 <Network::Network()>
 8008b18:	a81a      	add	r0, sp, #104	; 0x68
 8008b1a:	f008 f95b 	bl	8010dd4 <LedBlink::LedBlink()>
 8008b1e:	a820      	add	r0, sp, #128	; 0x80
 8008b20:	f007 fe98 	bl	8010854 <Display::Display()>
 8008b24:	4aab      	ldr	r2, [pc, #684]	; (8008dd4 <main+0x2d0>)
 8008b26:	4bac      	ldr	r3, [pc, #688]	; (8008dd8 <main+0x2d4>)
 8008b28:	49ac      	ldr	r1, [pc, #688]	; (8008ddc <main+0x2d8>)
 8008b2a:	a805      	add	r0, sp, #20
 8008b2c:	f008 f90c 	bl	8010d48 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008b30:	a806      	add	r0, sp, #24
 8008b32:	f005 fa7f 	bl	800e034 <FlashRom::FlashRom()>
 8008b36:	a807      	add	r0, sp, #28
 8008b38:	f004 ff82 	bl	800da40 <SpiFlashStore::SpiFlashStore()>
 8008b3c:	49a8      	ldr	r1, [pc, #672]	; (8008de0 <main+0x2dc>)
 8008b3e:	a805      	add	r0, sp, #20
 8008b40:	f008 f93a 	bl	8010db8 <FirmwareVersion::Print(char const*)>
 8008b44:	2301      	movs	r3, #1
 8008b46:	4ea7      	ldr	r6, [pc, #668]	; (8008de4 <main+0x2e0>)
 8008b48:	2008      	movs	r0, #8
 8008b4a:	6133      	str	r3, [r6, #16]
 8008b4c:	f008 fa2e 	bl	8010fac <operator new(unsigned int)>
 8008b50:	4ba5      	ldr	r3, [pc, #660]	; (8008de8 <main+0x2e4>)
 8008b52:	901c      	str	r0, [sp, #112]	; 0x70
 8008b54:	6003      	str	r3, [r0, #0]
 8008b56:	4ba5      	ldr	r3, [pc, #660]	; (8008dec <main+0x2e8>)
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	3b00      	subs	r3, #0
 8008b5c:	bf18      	it	ne
 8008b5e:	2301      	movne	r3, #1
 8008b60:	7103      	strb	r3, [r0, #4]
 8008b62:	a80a      	add	r0, sp, #40	; 0x28
 8008b64:	f005 f94a 	bl	800ddfc <StoreOscServer::StoreOscServer()>
 8008b68:	a90a      	add	r1, sp, #40	; 0x28
 8008b6a:	a896      	add	r0, sp, #600	; 0x258
 8008b6c:	f001 f872 	bl	8009c54 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8008b70:	a843      	add	r0, sp, #268	; 0x10c
 8008b72:	f000 fd75 	bl	8009660 <OscServer::OscServer()>
 8008b76:	a896      	add	r0, sp, #600	; 0x258
 8008b78:	f001 f87c 	bl	8009c74 <OSCServerParams::Load()>
 8008b7c:	b130      	cbz	r0, 8008b8c <main+0x88>
 8008b7e:	a896      	add	r0, sp, #600	; 0x258
 8008b80:	f001 fa0f 	bl	8009fa2 <OSCServerParams::Dump()>
 8008b84:	a943      	add	r1, sp, #268	; 0x10c
 8008b86:	a896      	add	r0, sp, #600	; 0x258
 8008b88:	f001 f91e 	bl	8009dc8 <OSCServerParams::Set(OscServer*)>
 8008b8c:	2400      	movs	r4, #0
 8008b8e:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008b92:	2303      	movs	r3, #3
 8008b94:	4996      	ldr	r1, [pc, #600]	; (8008df0 <main+0x2ec>)
 8008b96:	a820      	add	r0, sp, #128	; 0x80
 8008b98:	f7ff ff68 	bl	8008a6c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008b9c:	a812      	add	r0, sp, #72	; 0x48
 8008b9e:	f005 f8f7 	bl	800dd90 <StoreNetwork::StoreNetwork()>
 8008ba2:	ab13      	add	r3, sp, #76	; 0x4c
 8008ba4:	a912      	add	r1, sp, #72	; 0x48
 8008ba6:	a864      	add	r0, sp, #400	; 0x190
 8008ba8:	9391      	str	r3, [sp, #580]	; 0x244
 8008baa:	f006 fb87 	bl	800f2bc <Network::Init(NetworkParamsStore*)>
 8008bae:	a864      	add	r0, sp, #400	; 0x190
 8008bb0:	f006 fcb4 	bl	800f51c <Network::Print()>
 8008bb4:	a808      	add	r0, sp, #32
 8008bb6:	f005 ff65 	bl	800ea84 <MDNS::MDNS()>
 8008bba:	a808      	add	r0, sp, #32
 8008bbc:	f006 f826 	bl	800ec0c <MDNS::Start()>
 8008bc0:	4b8c      	ldr	r3, [pc, #560]	; (8008df4 <main+0x2f0>)
 8008bc2:	4621      	mov	r1, r4
 8008bc4:	4a8c      	ldr	r2, [pc, #560]	; (8008df8 <main+0x2f4>)
 8008bc6:	9301      	str	r3, [sp, #4]
 8008bc8:	9400      	str	r4, [sp, #0]
 8008bca:	f8bd 310c 	ldrh.w	r3, [sp, #268]	; 0x10c
 8008bce:	a808      	add	r0, sp, #32
 8008bd0:	f006 f988 	bl	800eee4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008bd4:	4b89      	ldr	r3, [pc, #548]	; (8008dfc <main+0x2f8>)
 8008bd6:	4621      	mov	r1, r4
 8008bd8:	9301      	str	r3, [sp, #4]
 8008bda:	2301      	movs	r3, #1
 8008bdc:	4a88      	ldr	r2, [pc, #544]	; (8008e00 <main+0x2fc>)
 8008bde:	9300      	str	r3, [sp, #0]
 8008be0:	a808      	add	r0, sp, #32
 8008be2:	2350      	movs	r3, #80	; 0x50
 8008be4:	f006 f97e 	bl	800eee4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008be8:	4d86      	ldr	r5, [pc, #536]	; (8008e04 <main+0x300>)
 8008bea:	a808      	add	r0, sp, #32
 8008bec:	f006 fac0 	bl	800f170 <MDNS::Print()>
 8008bf0:	ac27      	add	r4, sp, #156	; 0x9c
 8008bf2:	2303      	movs	r3, #3
 8008bf4:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008bf8:	4983      	ldr	r1, [pc, #524]	; (8008e08 <main+0x304>)
 8008bfa:	a820      	add	r0, sp, #128	; 0x80
 8008bfc:	f7ff ff36 	bl	8008a6c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008c00:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008c02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008c04:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008c08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008c0c:	a814      	add	r0, sp, #80	; 0x50
 8008c0e:	f005 fa05 	bl	800e01c <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008c12:	a914      	add	r1, sp, #80	; 0x50
 8008c14:	a838      	add	r0, sp, #224	; 0xe0
 8008c16:	f001 fe2b 	bl	800a870 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008c1a:	a838      	add	r0, sp, #224	; 0xe0
 8008c1c:	f001 fe50 	bl	800a8c0 <WS28xxDmxParams::Load()>
 8008c20:	b130      	cbz	r0, 8008c30 <main+0x12c>
 8008c22:	a838      	add	r0, sp, #224	; 0xe0
 8008c24:	a927      	add	r1, sp, #156	; 0x9c
 8008c26:	f002 f8ce 	bl	800adc6 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 8008c2a:	a838      	add	r0, sp, #224	; 0xe0
 8008c2c:	f002 f901 	bl	800ae32 <WS28xxDmxParams::Dump()>
 8008c30:	ab0c      	add	r3, sp, #48	; 0x30
 8008c32:	ac0d      	add	r4, sp, #52	; 0x34
 8008c34:	2101      	movs	r1, #1
 8008c36:	9300      	str	r3, [sp, #0]
 8008c38:	aa0b      	add	r2, sp, #44	; 0x2c
 8008c3a:	ab16      	add	r3, sp, #88	; 0x58
 8008c3c:	a827      	add	r0, sp, #156	; 0x9c
 8008c3e:	9401      	str	r4, [sp, #4]
 8008c40:	f001 fbba 	bl	800a3b8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 8008c44:	a827      	add	r0, sp, #156	; 0x9c
 8008c46:	f001 fc0f 	bl	800a468 <PixelDmxConfiguration::Dump()>
 8008c4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c4c:	2b01      	cmp	r3, #1
 8008c4e:	d909      	bls.n	8008c64 <main+0x160>
 8008c50:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8008c52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008c54:	024b      	lsls	r3, r1, #9
 8008c56:	ebb2 2f41 	cmp.w	r2, r1, lsl #9
 8008c5a:	bf94      	ite	ls
 8008c5c:	fbb3 f3f2 	udivls	r3, r3, r2
 8008c60:	23aa      	movhi	r3, #170	; 0xaa
 8008c62:	9328      	str	r3, [sp, #160]	; 0xa0
 8008c64:	a927      	add	r1, sp, #156	; 0x9c
 8008c66:	a853      	add	r0, sp, #332	; 0x14c
 8008c68:	f001 fd08 	bl	800a67c <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>
 8008c6c:	f89d 410a 	ldrb.w	r4, [sp, #266]	; 0x10a
 8008c70:	ab15      	add	r3, sp, #84	; 0x54
 8008c72:	2101      	movs	r1, #1
 8008c74:	a809      	add	r0, sp, #36	; 0x24
 8008c76:	9361      	str	r3, [sp, #388]	; 0x184
 8008c78:	f002 f99c 	bl	800afb4 <PixelPatterns::PixelPatterns(unsigned int)>
 8008c7c:	4b63      	ldr	r3, [pc, #396]	; (8008e0c <main+0x308>)
 8008c7e:	2c05      	cmp	r4, #5
 8008c80:	601c      	str	r4, [r3, #0]
 8008c82:	f340 8162 	ble.w	8008f4a <main+0x446>
 8008c86:	4b62      	ldr	r3, [pc, #392]	; (8008e10 <main+0x30c>)
 8008c88:	2110      	movs	r1, #16
 8008c8a:	2203      	movs	r2, #3
 8008c8c:	4861      	ldr	r0, [pc, #388]	; (8008e14 <main+0x310>)
 8008c8e:	930e      	str	r3, [sp, #56]	; 0x38
 8008c90:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008c94:	f008 fd1a 	bl	80116cc <gpio_init>
 8008c98:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008c9c:	4b5e      	ldr	r3, [pc, #376]	; (8008e18 <main+0x314>)
 8008c9e:	ac0e      	add	r4, sp, #56	; 0x38
 8008ca0:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008ca4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8008ca6:	9462      	str	r4, [sp, #392]	; 0x188
 8008ca8:	f002 fbe0 	bl	800b46c <PixelType::GetType(pixel::Type)>
 8008cac:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8008cae:	2107      	movs	r1, #7
 8008cb0:	9201      	str	r2, [sp, #4]
 8008cb2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8008cb4:	4603      	mov	r3, r0
 8008cb6:	9200      	str	r2, [sp, #0]
 8008cb8:	a820      	add	r0, sp, #128	; 0x80
 8008cba:	4a58      	ldr	r2, [pc, #352]	; (8008e1c <main+0x318>)
 8008cbc:	f7ff feba 	bl	8008a34 <Display::Printf(unsigned char, char const*, ...)>
 8008cc0:	ab53      	add	r3, sp, #332	; 0x14c
 8008cc2:	2008      	movs	r0, #8
 8008cc4:	9350      	str	r3, [sp, #320]	; 0x140
 8008cc6:	f008 f971 	bl	8010fac <operator new(unsigned int)>
 8008cca:	4b55      	ldr	r3, [pc, #340]	; (8008e20 <main+0x31c>)
 8008ccc:	904f      	str	r0, [sp, #316]	; 0x13c
 8008cce:	6003      	str	r3, [r0, #0]
 8008cd0:	ab53      	add	r3, sp, #332	; 0x14c
 8008cd2:	6043      	str	r3, [r0, #4]
 8008cd4:	a843      	add	r0, sp, #268	; 0x10c
 8008cd6:	f000 ff29 	bl	8009b2c <OscServer::Print()>
 8008cda:	a853      	add	r0, sp, #332	; 0x14c
 8008cdc:	f002 f8aa 	bl	800ae34 <WS28xxDmx::Print()>
 8008ce0:	2401      	movs	r4, #1
 8008ce2:	9826      	ldr	r0, [sp, #152]	; 0x98
 8008ce4:	b2e1      	uxtb	r1, r4
 8008ce6:	b110      	cbz	r0, 8008cee <main+0x1ea>
 8008ce8:	6803      	ldr	r3, [r0, #0]
 8008cea:	691b      	ldr	r3, [r3, #16]
 8008cec:	4798      	blx	r3
 8008cee:	3401      	adds	r4, #1
 8008cf0:	2c07      	cmp	r4, #7
 8008cf2:	d1f6      	bne.n	8008ce2 <main+0x1de>
 8008cf4:	2101      	movs	r1, #1
 8008cf6:	4a4b      	ldr	r2, [pc, #300]	; (8008e24 <main+0x320>)
 8008cf8:	a820      	add	r0, sp, #128	; 0x80
 8008cfa:	f7ff fe9b 	bl	8008a34 <Display::Printf(unsigned char, char const*, ...)>
 8008cfe:	2102      	movs	r1, #2
 8008d00:	4a49      	ldr	r2, [pc, #292]	; (8008e28 <main+0x324>)
 8008d02:	9826      	ldr	r0, [sp, #152]	; 0x98
 8008d04:	f7ff fe47 	bl	8008996 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008d08:	f89d 4191 	ldrb.w	r4, [sp, #401]	; 0x191
 8008d0c:	4b47      	ldr	r3, [pc, #284]	; (8008e2c <main+0x328>)
 8008d0e:	2c00      	cmp	r4, #0
 8008d10:	bf14      	ite	ne
 8008d12:	2444      	movne	r4, #68	; 0x44
 8008d14:	2453      	moveq	r4, #83	; 0x53
 8008d16:	681b      	ldr	r3, [r3, #0]
 8008d18:	691b      	ldr	r3, [r3, #16]
 8008d1a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8008d1e:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008d22:	0e18      	lsrs	r0, r3, #24
 8008d24:	e9cd 2100 	strd	r2, r1, [sp]
 8008d28:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008d2c:	2103      	movs	r1, #3
 8008d2e:	4a40      	ldr	r2, [pc, #256]	; (8008e30 <main+0x32c>)
 8008d30:	b2db      	uxtb	r3, r3
 8008d32:	a820      	add	r0, sp, #128	; 0x80
 8008d34:	f7ff fe7e 	bl	8008a34 <Display::Printf(unsigned char, char const*, ...)>
 8008d38:	2104      	movs	r1, #4
 8008d3a:	f8bd 310c 	ldrh.w	r3, [sp, #268]	; 0x10c
 8008d3e:	4a3d      	ldr	r2, [pc, #244]	; (8008e34 <main+0x330>)
 8008d40:	a820      	add	r0, sp, #128	; 0x80
 8008d42:	f7ff fe77 	bl	8008a34 <Display::Printf(unsigned char, char const*, ...)>
 8008d46:	2105      	movs	r1, #5
 8008d48:	f8bd 310e 	ldrh.w	r3, [sp, #270]	; 0x10e
 8008d4c:	4a3a      	ldr	r2, [pc, #232]	; (8008e38 <main+0x334>)
 8008d4e:	a820      	add	r0, sp, #128	; 0x80
 8008d50:	f7ff fe70 	bl	8008a34 <Display::Printf(unsigned char, char const*, ...)>
 8008d54:	2301      	movs	r3, #1
 8008d56:	2203      	movs	r2, #3
 8008d58:	2102      	movs	r1, #2
 8008d5a:	a8fa      	add	r0, sp, #1000	; 0x3e8
 8008d5c:	f003 fc98 	bl	800c690 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008d60:	a80f      	add	r0, sp, #60	; 0x3c
 8008d62:	f005 f87f 	bl	800de64 <StoreRemoteConfig::StoreRemoteConfig()>
 8008d66:	a90f      	add	r1, sp, #60	; 0x3c
 8008d68:	a82f      	add	r0, sp, #188	; 0xbc
 8008d6a:	f003 ff69 	bl	800cc40 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008d6e:	a82f      	add	r0, sp, #188	; 0xbc
 8008d70:	f003 ff70 	bl	800cc54 <RemoteConfigParams::Load()>
 8008d74:	b130      	cbz	r0, 8008d84 <main+0x280>
 8008d76:	a82f      	add	r0, sp, #188	; 0xbc
 8008d78:	a9fa      	add	r1, sp, #1000	; 0x3e8
 8008d7a:	f004 f892 	bl	800cea2 <RemoteConfigParams::Set(RemoteConfig*)>
 8008d7e:	a82f      	add	r0, sp, #188	; 0xbc
 8008d80:	f004 f8b3 	bl	800ceea <RemoteConfigParams::Dump()>
 8008d84:	a807      	add	r0, sp, #28
 8008d86:	f004 ff07 	bl	800db98 <SpiFlashStore::Flash()>
 8008d8a:	2800      	cmp	r0, #0
 8008d8c:	d1fa      	bne.n	8008d84 <main+0x280>
 8008d8e:	2303      	movs	r3, #3
 8008d90:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d94:	4929      	ldr	r1, [pc, #164]	; (8008e3c <main+0x338>)
 8008d96:	a820      	add	r0, sp, #128	; 0x80
 8008d98:	f7ff fe68 	bl	8008a6c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d9c:	a843      	add	r0, sp, #268	; 0x10c
 8008d9e:	f000 fcc9 	bl	8009734 <OscServer::Start()>
 8008da2:	2302      	movs	r3, #2
 8008da4:	f248 0280 	movw	r2, #32896	; 0x8080
 8008da8:	4925      	ldr	r1, [pc, #148]	; (8008e40 <main+0x33c>)
 8008daa:	a820      	add	r0, sp, #128	; 0x80
 8008dac:	f7ff fe5e 	bl	8008a6c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008db0:	2102      	movs	r1, #2
 8008db2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008db6:	f008 fc5f 	bl	8011678 <fwdgt_config>
 8008dba:	2801      	cmp	r0, #1
 8008dbc:	bf0c      	ite	eq
 8008dbe:	2301      	moveq	r3, #1
 8008dc0:	2300      	movne	r3, #0
 8008dc2:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 8008dc6:	d101      	bne.n	8008dcc <main+0x2c8>
 8008dc8:	f008 fc46 	bl	8011658 <fwdgt_enable>
 8008dcc:	2701      	movs	r7, #1
 8008dce:	4c1d      	ldr	r4, [pc, #116]	; (8008e44 <main+0x340>)
 8008dd0:	e03a      	b.n	8008e48 <main+0x344>
 8008dd2:	bf00      	nop
 8008dd4:	080132e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, ip, sp}
 8008dd8:	080132dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, ip, sp}
 8008ddc:	080133dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, ip, sp}
 8008de0:	080132f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, ip, sp}
 8008de4:	40011000 	andmi	r1, r1, r0
 8008de8:	08013398 	stmdaeq	r1, {r3, r4, r7, r8, r9, ip, sp}
 8008dec:	200096a0 	andcs	r9, r0, r0, lsr #13
 8008df0:	08014997 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, fp, lr}
 8008df4:	0801332b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, ip, sp}
 8008df8:	08013325 	stmdaeq	r1, {r0, r2, r5, r8, r9, ip, sp}
 8008dfc:	0801333e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, ip, sp}
 8008e00:	08013337 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, ip, sp}
 8008e04:	08013274 	stmdaeq	r1, {r2, r4, r5, r6, r9, ip, sp}
 8008e08:	080134fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, ip, sp}
 8008e0c:	20000728 	andcs	r0, r0, r8, lsr #14
 8008e10:	080133ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, ip, sp}
 8008e14:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008e18:	40010000 	andmi	r0, r1, r0
 8008e1c:	0801334e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip, sp}
 8008e20:	080133c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, ip, sp}
 8008e24:	08013358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, sp}
 8008e28:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 8008e2c:	20009070 	andcs	r9, r0, r0, ror r0
 8008e30:	0801336e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, ip, sp}
 8008e34:	08013381 	stmdaeq	r1, {r0, r7, r8, r9, ip, sp}
 8008e38:	08013388 	stmdaeq	r1, {r3, r7, r8, r9, ip, sp}
 8008e3c:	080134e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, sl, ip, sp}
 8008e40:	08013515 	stmdaeq	r1, {r0, r2, r4, r8, sl, ip, sp}
 8008e44:	200097a4 	andcs	r9, r0, r4, lsr #15
 8008e48:	4d49      	ldr	r5, [pc, #292]	; (8008f70 <main+0x46c>)
 8008e4a:	f008 fc0d 	bl	8011668 <fwdgt_counter_reload>
 8008e4e:	f7fe fb6b 	bl	8007528 <net_handle>
 8008e52:	a843      	add	r0, sp, #268	; 0x10c
 8008e54:	f000 fd1e 	bl	8009894 <OscServer::Run()>
 8008e58:	a8fa      	add	r0, sp, #1000	; 0x3e8
 8008e5a:	f003 fdb5 	bl	800c9c8 <RemoteConfig::Run()>
 8008e5e:	a807      	add	r0, sp, #28
 8008e60:	f004 fe9a 	bl	800db98 <SpiFlashStore::Flash()>
 8008e64:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8008e66:	b172      	cbz	r2, 8008e86 <main+0x382>
 8008e68:	6823      	ldr	r3, [r4, #0]
 8008e6a:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8008e6c:	1a5b      	subs	r3, r3, r1
 8008e6e:	429a      	cmp	r2, r3
 8008e70:	d809      	bhi.n	8008e86 <main+0x382>
 8008e72:	6823      	ldr	r3, [r4, #0]
 8008e74:	931f      	str	r3, [sp, #124]	; 0x7c
 8008e76:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008e78:	2b01      	cmp	r3, #1
 8008e7a:	f083 0201 	eor.w	r2, r3, #1
 8008e7e:	921e      	str	r2, [sp, #120]	; 0x78
 8008e80:	bf14      	ite	ne
 8008e82:	6137      	strne	r7, [r6, #16]
 8008e84:	6173      	streq	r3, [r6, #20]
 8008e86:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8008e88:	b162      	cbz	r2, 8008ea4 <main+0x3a0>
 8008e8a:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 8008e8e:	2b00      	cmp	r3, #0
 8008e90:	d155      	bne.n	8008f3e <main+0x43a>
 8008e92:	6823      	ldr	r3, [r4, #0]
 8008e94:	9921      	ldr	r1, [sp, #132]	; 0x84
 8008e96:	1a5b      	subs	r3, r3, r1
 8008e98:	429a      	cmp	r2, r3
 8008e9a:	d203      	bcs.n	8008ea4 <main+0x3a0>
 8008e9c:	2101      	movs	r1, #1
 8008e9e:	a820      	add	r0, sp, #128	; 0x80
 8008ea0:	f7ff fdb8 	bl	8008a14 <Display::SetSleep(bool)>
 8008ea4:	682b      	ldr	r3, [r5, #0]
 8008ea6:	b113      	cbz	r3, 8008eae <main+0x3aa>
 8008ea8:	a809      	add	r0, sp, #36	; 0x24
 8008eaa:	f002 fab5 	bl	800b418 <PixelPatterns::Run()>
 8008eae:	a808      	add	r0, sp, #32
 8008eb0:	f006 f93a 	bl	800f128 <MDNS::Run()>
 8008eb4:	e7c9      	b.n	8008e4a <main+0x346>
 8008eb6:	2300      	movs	r3, #0
 8008eb8:	2264      	movs	r2, #100	; 0x64
 8008eba:	4619      	mov	r1, r3
 8008ebc:	a809      	add	r0, sp, #36	; 0x24
 8008ebe:	f002 f899 	bl	800aff4 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ec2:	e6e0      	b.n	8008c86 <main+0x182>
 8008ec4:	2200      	movs	r2, #0
 8008ec6:	2364      	movs	r3, #100	; 0x64
 8008ec8:	4611      	mov	r1, r2
 8008eca:	e9cd 3200 	strd	r3, r2, [sp]
 8008ece:	a809      	add	r0, sp, #36	; 0x24
 8008ed0:	4b28      	ldr	r3, [pc, #160]	; (8008f74 <main+0x470>)
 8008ed2:	f002 f8a3 	bl	800b01c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ed6:	e6d6      	b.n	8008c86 <main+0x182>
 8008ed8:	2100      	movs	r1, #0
 8008eda:	2364      	movs	r3, #100	; 0x64
 8008edc:	4a25      	ldr	r2, [pc, #148]	; (8008f74 <main+0x470>)
 8008ede:	9100      	str	r1, [sp, #0]
 8008ee0:	a809      	add	r0, sp, #36	; 0x24
 8008ee2:	f002 f8b7 	bl	800b054 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ee6:	e6ce      	b.n	8008c86 <main+0x182>
 8008ee8:	2364      	movs	r3, #100	; 0x64
 8008eea:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008eee:	2100      	movs	r1, #0
 8008ef0:	a809      	add	r0, sp, #36	; 0x24
 8008ef2:	f002 f8c9 	bl	800b088 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008ef6:	e6c6      	b.n	8008c86 <main+0x182>
 8008ef8:	2200      	movs	r2, #0
 8008efa:	2364      	movs	r3, #100	; 0x64
 8008efc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008f00:	230a      	movs	r3, #10
 8008f02:	4611      	mov	r1, r2
 8008f04:	9300      	str	r3, [sp, #0]
 8008f06:	a809      	add	r0, sp, #36	; 0x24
 8008f08:	4b1a      	ldr	r3, [pc, #104]	; (8008f74 <main+0x470>)
 8008f0a:	f002 f8ef 	bl	800b0ec <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008f0e:	e6ba      	b.n	8008c86 <main+0x182>
 8008f10:	2400      	movs	r4, #0
 8008f12:	4625      	mov	r5, r4
 8008f14:	4b18      	ldr	r3, [pc, #96]	; (8008f78 <main+0x474>)
 8008f16:	4f19      	ldr	r7, [pc, #100]	; (8008f7c <main+0x478>)
 8008f18:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8008f80 <main+0x47c>
 8008f1c:	61dc      	str	r4, [r3, #28]
 8008f1e:	f8d8 3000 	ldr.w	r3, [r8]
 8008f22:	6838      	ldr	r0, [r7, #0]
 8008f24:	42a3      	cmp	r3, r4
 8008f26:	d907      	bls.n	8008f38 <main+0x434>
 8008f28:	2300      	movs	r3, #0
 8008f2a:	4621      	mov	r1, r4
 8008f2c:	461a      	mov	r2, r3
 8008f2e:	9500      	str	r5, [sp, #0]
 8008f30:	f002 fbbc 	bl	800b6ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 8008f34:	3401      	adds	r4, #1
 8008f36:	e7f2      	b.n	8008f1e <main+0x41a>
 8008f38:	f003 f9f8 	bl	800c32c <WS28xx::Update()>
 8008f3c:	e6a3      	b.n	8008c86 <main+0x182>
 8008f3e:	f007 fcb4 	bl	80108aa <display::timeout::gpio_renew()>
 8008f42:	2800      	cmp	r0, #0
 8008f44:	d0ae      	beq.n	8008ea4 <main+0x3a0>
 8008f46:	2100      	movs	r1, #0
 8008f48:	e7a9      	b.n	8008e9e <main+0x39a>
 8008f4a:	2c05      	cmp	r4, #5
 8008f4c:	f63f ae9b 	bhi.w	8008c86 <main+0x182>
 8008f50:	a301      	add	r3, pc, #4	; (adr r3, 8008f58 <main+0x454>)
 8008f52:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 8008f56:	bf00      	nop
 8008f58:	08008f11 	stmdaeq	r0, {r0, r4, r8, r9, sl, fp, pc}
 8008f5c:	08008eb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r9, sl, fp, pc}
 8008f60:	08008ec5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, fp, pc}
 8008f64:	08008ed9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, pc}
 8008f68:	08008ee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, pc}
 8008f6c:	08008ef9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, fp, pc}
 8008f70:	20000728 	andcs	r0, r0, r8, lsr #14
 8008f74:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008f78:	200006f8 	strdcs	r0, [r0], -r8
 8008f7c:	20000724 	andcs	r0, r0, r4, lsr #14
 8008f80:	20000720 	andcs	r0, r0, r0, lsr #14

08008f84 <Handler::Update()>:
 8008f84:	2100      	movs	r1, #0
 8008f86:	6840      	ldr	r0, [r0, #4]
 8008f88:	f001 ba8d 	b.w	800a4a6 <WS28xxDmx::Blackout(bool)>

08008f8c <Handler::Blackout()>:
 8008f8c:	2101      	movs	r1, #1
 8008f8e:	6840      	ldr	r0, [r0, #4]
 8008f90:	f001 ba89 	b.w	800a4a6 <WS28xxDmx::Blackout(bool)>

08008f94 <NetworkDisplay::ShowEmacStart()>:
 8008f94:	4770      	bx	lr

08008f96 <NetworkDisplay::ShowIp()>:
 8008f96:	4770      	bx	lr

08008f98 <NetworkDisplay::ShowShutdown()>:
 8008f98:	4770      	bx	lr

08008f9a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8008f9a:	4770      	bx	lr

08008f9c <_itostr>:
 8008f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f9e:	0fc7      	lsrs	r7, r0, #31
 8008fa0:	b091      	sub	sp, #68	; 0x44
 8008fa2:	bf18      	it	ne
 8008fa4:	4240      	negne	r0, r0
 8008fa6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008faa:	b9c8      	cbnz	r0, 8008fe0 <_itostr+0x44>
 8008fac:	2330      	movs	r3, #48	; 0x30
 8008fae:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008fb2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008fb6:	b132      	cbz	r2, 8008fc6 <_itostr+0x2a>
 8008fb8:	4668      	mov	r0, sp
 8008fba:	2530      	movs	r5, #48	; 0x30
 8008fbc:	1ae6      	subs	r6, r4, r3
 8008fbe:	4296      	cmp	r6, r2
 8008fc0:	da01      	bge.n	8008fc6 <_itostr+0x2a>
 8008fc2:	4283      	cmp	r3, r0
 8008fc4:	d81c      	bhi.n	8009000 <_itostr+0x64>
 8008fc6:	b117      	cbz	r7, 8008fce <_itostr+0x32>
 8008fc8:	222d      	movs	r2, #45	; 0x2d
 8008fca:	f803 2901 	strb.w	r2, [r3], #-1
 8008fce:	3301      	adds	r3, #1
 8008fd0:	1ae0      	subs	r0, r4, r3
 8008fd2:	3901      	subs	r1, #1
 8008fd4:	aa10      	add	r2, sp, #64	; 0x40
 8008fd6:	4293      	cmp	r3, r2
 8008fd8:	d315      	bcc.n	8009006 <_itostr+0x6a>
 8008fda:	3001      	adds	r0, #1
 8008fdc:	b011      	add	sp, #68	; 0x44
 8008fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fe0:	4623      	mov	r3, r4
 8008fe2:	250a      	movs	r5, #10
 8008fe4:	46ec      	mov	ip, sp
 8008fe6:	fb90 f6f5 	sdiv	r6, r0, r5
 8008fea:	fb05 0016 	mls	r0, r5, r6, r0
 8008fee:	3030      	adds	r0, #48	; 0x30
 8008ff0:	f803 0901 	strb.w	r0, [r3], #-1
 8008ff4:	4630      	mov	r0, r6
 8008ff6:	2e00      	cmp	r6, #0
 8008ff8:	d0dd      	beq.n	8008fb6 <_itostr+0x1a>
 8008ffa:	4563      	cmp	r3, ip
 8008ffc:	d1f3      	bne.n	8008fe6 <_itostr+0x4a>
 8008ffe:	e7da      	b.n	8008fb6 <_itostr+0x1a>
 8009000:	f803 5901 	strb.w	r5, [r3], #-1
 8009004:	e7da      	b.n	8008fbc <_itostr+0x20>
 8009006:	f813 2b01 	ldrb.w	r2, [r3], #1
 800900a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800900e:	e7e1      	b.n	8008fd4 <_itostr+0x38>

08009010 <_xputch>:
 8009010:	4603      	mov	r3, r0
 8009012:	b410      	push	{r4}
 8009014:	4c08      	ldr	r4, [pc, #32]	; (8009038 <_xputch+0x28>)
 8009016:	68da      	ldr	r2, [r3, #12]
 8009018:	4608      	mov	r0, r1
 800901a:	6821      	ldr	r1, [r4, #0]
 800901c:	3201      	adds	r2, #1
 800901e:	60da      	str	r2, [r3, #12]
 8009020:	b139      	cbz	r1, 8009032 <_xputch+0x22>
 8009022:	691b      	ldr	r3, [r3, #16]
 8009024:	429a      	cmp	r2, r3
 8009026:	da02      	bge.n	800902e <_xputch+0x1e>
 8009028:	1c4b      	adds	r3, r1, #1
 800902a:	6023      	str	r3, [r4, #0]
 800902c:	7008      	strb	r0, [r1, #0]
 800902e:	bc10      	pop	{r4}
 8009030:	4770      	bx	lr
 8009032:	bc10      	pop	{r4}
 8009034:	f007 be38 	b.w	8010ca8 <console_putc>
 8009038:	200000e8 	andcs	r0, r0, r8, ror #1

0800903c <_format_int>:
 800903c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009040:	461f      	mov	r7, r3
 8009042:	b091      	sub	sp, #68	; 0x44
 8009044:	ea52 0307 	orrs.w	r3, r2, r7
 8009048:	4680      	mov	r8, r0
 800904a:	4616      	mov	r6, r2
 800904c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009050:	d138      	bne.n	80090c4 <_format_int+0x88>
 8009052:	2330      	movs	r3, #48	; 0x30
 8009054:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009058:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800905c:	f8d8 3000 	ldr.w	r3, [r8]
 8009060:	07d8      	lsls	r0, r3, #31
 8009062:	d508      	bpl.n	8009076 <_format_int+0x3a>
 8009064:	466a      	mov	r2, sp
 8009066:	2030      	movs	r0, #48	; 0x30
 8009068:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800906c:	1b2e      	subs	r6, r5, r4
 800906e:	428e      	cmp	r6, r1
 8009070:	da01      	bge.n	8009076 <_format_int+0x3a>
 8009072:	4294      	cmp	r4, r2
 8009074:	d843      	bhi.n	80090fe <_format_int+0xc2>
 8009076:	0699      	lsls	r1, r3, #26
 8009078:	d508      	bpl.n	800908c <_format_int+0x50>
 800907a:	466a      	mov	r2, sp
 800907c:	2030      	movs	r0, #48	; 0x30
 800907e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8009082:	1b2e      	subs	r6, r5, r4
 8009084:	428e      	cmp	r6, r1
 8009086:	da01      	bge.n	800908c <_format_int+0x50>
 8009088:	4294      	cmp	r4, r2
 800908a:	d83b      	bhi.n	8009104 <_format_int+0xc8>
 800908c:	071a      	lsls	r2, r3, #28
 800908e:	bf44      	itt	mi
 8009090:	222d      	movmi	r2, #45	; 0x2d
 8009092:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009096:	065b      	lsls	r3, r3, #25
 8009098:	d408      	bmi.n	80090ac <_format_int+0x70>
 800909a:	466b      	mov	r3, sp
 800909c:	2120      	movs	r1, #32
 800909e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80090a2:	1b28      	subs	r0, r5, r4
 80090a4:	4290      	cmp	r0, r2
 80090a6:	da01      	bge.n	80090ac <_format_int+0x70>
 80090a8:	429c      	cmp	r4, r3
 80090aa:	d82e      	bhi.n	800910a <_format_int+0xce>
 80090ac:	1b2d      	subs	r5, r5, r4
 80090ae:	3401      	adds	r4, #1
 80090b0:	ab10      	add	r3, sp, #64	; 0x40
 80090b2:	429c      	cmp	r4, r3
 80090b4:	d32c      	bcc.n	8009110 <_format_int+0xd4>
 80090b6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80090ba:	42ab      	cmp	r3, r5
 80090bc:	dc2e      	bgt.n	800911c <_format_int+0xe0>
 80090be:	b011      	add	sp, #68	; 0x44
 80090c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090c4:	462c      	mov	r4, r5
 80090c6:	46eb      	mov	fp, sp
 80090c8:	4630      	mov	r0, r6
 80090ca:	4639      	mov	r1, r7
 80090cc:	220a      	movs	r2, #10
 80090ce:	2300      	movs	r3, #0
 80090d0:	f7fe ff08 	bl	8007ee4 <__aeabi_uldivmod>
 80090d4:	46b2      	mov	sl, r6
 80090d6:	3230      	adds	r2, #48	; 0x30
 80090d8:	46b9      	mov	r9, r7
 80090da:	2300      	movs	r3, #0
 80090dc:	4630      	mov	r0, r6
 80090de:	4639      	mov	r1, r7
 80090e0:	f804 2901 	strb.w	r2, [r4], #-1
 80090e4:	220a      	movs	r2, #10
 80090e6:	f7fe fefd 	bl	8007ee4 <__aeabi_uldivmod>
 80090ea:	f1ba 0f0a 	cmp.w	sl, #10
 80090ee:	f179 0300 	sbcs.w	r3, r9, #0
 80090f2:	4606      	mov	r6, r0
 80090f4:	460f      	mov	r7, r1
 80090f6:	d3b1      	bcc.n	800905c <_format_int+0x20>
 80090f8:	455c      	cmp	r4, fp
 80090fa:	d1e5      	bne.n	80090c8 <_format_int+0x8c>
 80090fc:	e7ae      	b.n	800905c <_format_int+0x20>
 80090fe:	f804 0901 	strb.w	r0, [r4], #-1
 8009102:	e7b3      	b.n	800906c <_format_int+0x30>
 8009104:	f804 0901 	strb.w	r0, [r4], #-1
 8009108:	e7bb      	b.n	8009082 <_format_int+0x46>
 800910a:	f804 1901 	strb.w	r1, [r4], #-1
 800910e:	e7c8      	b.n	80090a2 <_format_int+0x66>
 8009110:	4640      	mov	r0, r8
 8009112:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009116:	f7ff ff7b 	bl	8009010 <_xputch>
 800911a:	e7c9      	b.n	80090b0 <_format_int+0x74>
 800911c:	2120      	movs	r1, #32
 800911e:	4640      	mov	r0, r8
 8009120:	f7ff ff76 	bl	8009010 <_xputch>
 8009124:	3501      	adds	r5, #1
 8009126:	e7c6      	b.n	80090b6 <_format_int+0x7a>

08009128 <_format_hex>:
 8009128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800912a:	b091      	sub	sp, #68	; 0x44
 800912c:	4606      	mov	r6, r0
 800912e:	6804      	ldr	r4, [r0, #0]
 8009130:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009134:	bb61      	cbnz	r1, 8009190 <_format_hex+0x68>
 8009136:	2330      	movs	r3, #48	; 0x30
 8009138:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800913c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009140:	07e5      	lsls	r5, r4, #31
 8009142:	d507      	bpl.n	8009154 <_format_hex+0x2c>
 8009144:	4669      	mov	r1, sp
 8009146:	2530      	movs	r5, #48	; 0x30
 8009148:	6870      	ldr	r0, [r6, #4]
 800914a:	1ad7      	subs	r7, r2, r3
 800914c:	4287      	cmp	r7, r0
 800914e:	da01      	bge.n	8009154 <_format_hex+0x2c>
 8009150:	428b      	cmp	r3, r1
 8009152:	d831      	bhi.n	80091b8 <_format_hex+0x90>
 8009154:	06a0      	lsls	r0, r4, #26
 8009156:	d507      	bpl.n	8009168 <_format_hex+0x40>
 8009158:	4669      	mov	r1, sp
 800915a:	2530      	movs	r5, #48	; 0x30
 800915c:	68b0      	ldr	r0, [r6, #8]
 800915e:	1ad7      	subs	r7, r2, r3
 8009160:	4287      	cmp	r7, r0
 8009162:	da01      	bge.n	8009168 <_format_hex+0x40>
 8009164:	428b      	cmp	r3, r1
 8009166:	d82a      	bhi.n	80091be <_format_hex+0x96>
 8009168:	0661      	lsls	r1, r4, #25
 800916a:	d407      	bmi.n	800917c <_format_hex+0x54>
 800916c:	4669      	mov	r1, sp
 800916e:	2420      	movs	r4, #32
 8009170:	68b0      	ldr	r0, [r6, #8]
 8009172:	1ad5      	subs	r5, r2, r3
 8009174:	4285      	cmp	r5, r0
 8009176:	da01      	bge.n	800917c <_format_hex+0x54>
 8009178:	428b      	cmp	r3, r1
 800917a:	d823      	bhi.n	80091c4 <_format_hex+0x9c>
 800917c:	1ad5      	subs	r5, r2, r3
 800917e:	1c5c      	adds	r4, r3, #1
 8009180:	ab10      	add	r3, sp, #64	; 0x40
 8009182:	429c      	cmp	r4, r3
 8009184:	d321      	bcc.n	80091ca <_format_hex+0xa2>
 8009186:	68b3      	ldr	r3, [r6, #8]
 8009188:	429d      	cmp	r5, r3
 800918a:	db24      	blt.n	80091d6 <_format_hex+0xae>
 800918c:	b011      	add	sp, #68	; 0x44
 800918e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009190:	f014 0f02 	tst.w	r4, #2
 8009194:	bf0c      	ite	eq
 8009196:	2757      	moveq	r7, #87	; 0x57
 8009198:	2737      	movne	r7, #55	; 0x37
 800919a:	4613      	mov	r3, r2
 800919c:	466d      	mov	r5, sp
 800919e:	f001 000f 	and.w	r0, r1, #15
 80091a2:	2809      	cmp	r0, #9
 80091a4:	bf94      	ite	ls
 80091a6:	3030      	addls	r0, #48	; 0x30
 80091a8:	19c0      	addhi	r0, r0, r7
 80091aa:	0909      	lsrs	r1, r1, #4
 80091ac:	f803 0901 	strb.w	r0, [r3], #-1
 80091b0:	d0c6      	beq.n	8009140 <_format_hex+0x18>
 80091b2:	42ab      	cmp	r3, r5
 80091b4:	d1f3      	bne.n	800919e <_format_hex+0x76>
 80091b6:	e7c3      	b.n	8009140 <_format_hex+0x18>
 80091b8:	f803 5901 	strb.w	r5, [r3], #-1
 80091bc:	e7c5      	b.n	800914a <_format_hex+0x22>
 80091be:	f803 5901 	strb.w	r5, [r3], #-1
 80091c2:	e7cc      	b.n	800915e <_format_hex+0x36>
 80091c4:	f803 4901 	strb.w	r4, [r3], #-1
 80091c8:	e7d3      	b.n	8009172 <_format_hex+0x4a>
 80091ca:	4630      	mov	r0, r6
 80091cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80091d0:	f7ff ff1e 	bl	8009010 <_xputch>
 80091d4:	e7d4      	b.n	8009180 <_format_hex+0x58>
 80091d6:	2120      	movs	r1, #32
 80091d8:	4630      	mov	r0, r6
 80091da:	f7ff ff19 	bl	8009010 <_xputch>
 80091de:	3501      	adds	r5, #1
 80091e0:	e7d1      	b.n	8009186 <_format_hex+0x5e>
	...

080091e4 <_vprintf>:
 80091e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091e8:	4614      	mov	r4, r2
 80091ea:	2200      	movs	r2, #0
 80091ec:	460b      	mov	r3, r1
 80091ee:	2700      	movs	r7, #0
 80091f0:	b099      	sub	sp, #100	; 0x64
 80091f2:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80091f6:	ae08      	add	r6, sp, #32
 80091f8:	7819      	ldrb	r1, [r3, #0]
 80091fa:	b919      	cbnz	r1, 8009204 <_vprintf+0x20>
 80091fc:	9806      	ldr	r0, [sp, #24]
 80091fe:	b019      	add	sp, #100	; 0x64
 8009200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009204:	2925      	cmp	r1, #37	; 0x25
 8009206:	f103 0501 	add.w	r5, r3, #1
 800920a:	d004      	beq.n	8009216 <_vprintf+0x32>
 800920c:	a803      	add	r0, sp, #12
 800920e:	f7ff feff 	bl	8009010 <_xputch>
 8009212:	462b      	mov	r3, r5
 8009214:	e7f0      	b.n	80091f8 <_vprintf+0x14>
 8009216:	2200      	movs	r2, #0
 8009218:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800921c:	9205      	str	r2, [sp, #20]
 800921e:	785a      	ldrb	r2, [r3, #1]
 8009220:	2a30      	cmp	r2, #48	; 0x30
 8009222:	d12b      	bne.n	800927c <_vprintf+0x98>
 8009224:	2220      	movs	r2, #32
 8009226:	9203      	str	r2, [sp, #12]
 8009228:	1c9d      	adds	r5, r3, #2
 800922a:	2200      	movs	r2, #0
 800922c:	46ac      	mov	ip, r5
 800922e:	4613      	mov	r3, r2
 8009230:	f04f 0e0a 	mov.w	lr, #10
 8009234:	f89c 1000 	ldrb.w	r1, [ip]
 8009238:	4665      	mov	r5, ip
 800923a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800923e:	2809      	cmp	r0, #9
 8009240:	f10c 0c01 	add.w	ip, ip, #1
 8009244:	d91e      	bls.n	8009284 <_vprintf+0xa0>
 8009246:	b12a      	cbz	r2, 8009254 <_vprintf+0x70>
 8009248:	9305      	str	r3, [sp, #20]
 800924a:	b11b      	cbz	r3, 8009254 <_vprintf+0x70>
 800924c:	9b03      	ldr	r3, [sp, #12]
 800924e:	f043 0310 	orr.w	r3, r3, #16
 8009252:	9303      	str	r3, [sp, #12]
 8009254:	292e      	cmp	r1, #46	; 0x2e
 8009256:	d124      	bne.n	80092a2 <_vprintf+0xbe>
 8009258:	786b      	ldrb	r3, [r5, #1]
 800925a:	2b2a      	cmp	r3, #42	; 0x2a
 800925c:	d016      	beq.n	800928c <_vprintf+0xa8>
 800925e:	2100      	movs	r1, #0
 8009260:	f04f 0c0a 	mov.w	ip, #10
 8009264:	460a      	mov	r2, r1
 8009266:	1c68      	adds	r0, r5, #1
 8009268:	7803      	ldrb	r3, [r0, #0]
 800926a:	4605      	mov	r5, r0
 800926c:	3b30      	subs	r3, #48	; 0x30
 800926e:	2b09      	cmp	r3, #9
 8009270:	f100 0001 	add.w	r0, r0, #1
 8009274:	d958      	bls.n	8009328 <_vprintf+0x144>
 8009276:	b181      	cbz	r1, 800929a <_vprintf+0xb6>
 8009278:	9204      	str	r2, [sp, #16]
 800927a:	e00e      	b.n	800929a <_vprintf+0xb6>
 800927c:	2a2d      	cmp	r2, #45	; 0x2d
 800927e:	d1d4      	bne.n	800922a <_vprintf+0x46>
 8009280:	2240      	movs	r2, #64	; 0x40
 8009282:	e7d0      	b.n	8009226 <_vprintf+0x42>
 8009284:	2201      	movs	r2, #1
 8009286:	fb0e 0303 	mla	r3, lr, r3, r0
 800928a:	e7d3      	b.n	8009234 <_vprintf+0x50>
 800928c:	f854 3b04 	ldr.w	r3, [r4], #4
 8009290:	3502      	adds	r5, #2
 8009292:	2b00      	cmp	r3, #0
 8009294:	bfb8      	it	lt
 8009296:	425b      	neglt	r3, r3
 8009298:	9304      	str	r3, [sp, #16]
 800929a:	9b03      	ldr	r3, [sp, #12]
 800929c:	f043 0301 	orr.w	r3, r3, #1
 80092a0:	9303      	str	r3, [sp, #12]
 80092a2:	782b      	ldrb	r3, [r5, #0]
 80092a4:	2b6c      	cmp	r3, #108	; 0x6c
 80092a6:	bf04      	itt	eq
 80092a8:	9b03      	ldreq	r3, [sp, #12]
 80092aa:	3501      	addeq	r5, #1
 80092ac:	7829      	ldrb	r1, [r5, #0]
 80092ae:	bf04      	itt	eq
 80092b0:	f043 0304 	orreq.w	r3, r3, #4
 80092b4:	9303      	streq	r3, [sp, #12]
 80092b6:	2958      	cmp	r1, #88	; 0x58
 80092b8:	f000 8173 	beq.w	80095a2 <_vprintf+0x3be>
 80092bc:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 80092c0:	b2da      	uxtb	r2, r3
 80092c2:	2a15      	cmp	r2, #21
 80092c4:	d8a2      	bhi.n	800920c <_vprintf+0x28>
 80092c6:	2b15      	cmp	r3, #21
 80092c8:	d8a0      	bhi.n	800920c <_vprintf+0x28>
 80092ca:	a201      	add	r2, pc, #4	; (adr r2, 80092d0 <_vprintf+0xec>)
 80092cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092d0:	08009331 	stmdaeq	r0, {r0, r4, r5, r8, r9, ip, pc}
 80092d4:	0800933f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, ip, pc}
 80092d8:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092dc:	08009373 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, r9, ip, pc}
 80092e0:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092e4:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092e8:	0800933f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, ip, pc}
 80092ec:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092f0:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092f4:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092f8:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 80092fc:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009300:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009304:	080094e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, ip, pc}
 8009308:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 800930c:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009310:	0800950b 	stmdaeq	r0, {r0, r1, r3, r8, sl, ip, pc}
 8009314:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009318:	08009585 	stmdaeq	r0, {r0, r2, r7, r8, sl, ip, pc}
 800931c:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009320:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8009324:	080095ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r8, sl, ip, pc}
 8009328:	2101      	movs	r1, #1
 800932a:	fb0c 3202 	mla	r2, ip, r2, r3
 800932e:	e79b      	b.n	8009268 <_vprintf+0x84>
 8009330:	f854 1b04 	ldr.w	r1, [r4], #4
 8009334:	a803      	add	r0, sp, #12
 8009336:	f7ff fe6b 	bl	8009010 <_xputch>
 800933a:	3501      	adds	r5, #1
 800933c:	e769      	b.n	8009212 <_vprintf+0x2e>
 800933e:	9903      	ldr	r1, [sp, #12]
 8009340:	074a      	lsls	r2, r1, #29
 8009342:	bf43      	ittte	mi
 8009344:	3407      	addmi	r4, #7
 8009346:	f024 0307 	bicmi.w	r3, r4, #7
 800934a:	461c      	movmi	r4, r3
 800934c:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8009350:	bf4a      	itet	mi
 8009352:	685b      	ldrmi	r3, [r3, #4]
 8009354:	17d3      	asrpl	r3, r2, #31
 8009356:	f854 2b08 	ldrmi.w	r2, [r4], #8
 800935a:	2b00      	cmp	r3, #0
 800935c:	da05      	bge.n	800936a <_vprintf+0x186>
 800935e:	f041 0108 	orr.w	r1, r1, #8
 8009362:	4252      	negs	r2, r2
 8009364:	9103      	str	r1, [sp, #12]
 8009366:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800936a:	a803      	add	r0, sp, #12
 800936c:	f7ff fe66 	bl	800903c <_format_int>
 8009370:	e7e3      	b.n	800933a <_vprintf+0x156>
 8009372:	3407      	adds	r4, #7
 8009374:	f024 0407 	bic.w	r4, r4, #7
 8009378:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800937c:	f7fe fbb8 	bl	8007af0 <__aeabi_d2f>
 8009380:	9b03      	ldr	r3, [sp, #12]
 8009382:	4639      	mov	r1, r7
 8009384:	07db      	lsls	r3, r3, #31
 8009386:	bf54      	ite	pl
 8009388:	f04f 0a06 	movpl.w	sl, #6
 800938c:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8009390:	4681      	mov	r9, r0
 8009392:	f7fe fd59 	bl	8007e48 <__aeabi_fcmplt>
 8009396:	2800      	cmp	r0, #0
 8009398:	d069      	beq.n	800946e <_vprintf+0x28a>
 800939a:	232d      	movs	r3, #45	; 0x2d
 800939c:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 80093a0:	f88d 3020 	strb.w	r3, [sp, #32]
 80093a4:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 80093a8:	4648      	mov	r0, r9
 80093aa:	f7fe fd75 	bl	8007e98 <__aeabi_f2iz>
 80093ae:	4659      	mov	r1, fp
 80093b0:	2200      	movs	r2, #0
 80093b2:	4680      	mov	r8, r0
 80093b4:	f7ff fdf2 	bl	8008f9c <_itostr>
 80093b8:	eb0b 0200 	add.w	r2, fp, r0
 80093bc:	e9cd 2000 	strd	r2, r0, [sp]
 80093c0:	4640      	mov	r0, r8
 80093c2:	f7fe fc9f 	bl	8007d04 <__aeabi_i2f>
 80093c6:	4601      	mov	r1, r0
 80093c8:	4648      	mov	r0, r9
 80093ca:	f7fe fbe5 	bl	8007b98 <__aeabi_fsub>
 80093ce:	222e      	movs	r2, #46	; 0x2e
 80093d0:	4601      	mov	r1, r0
 80093d2:	200a      	movs	r0, #10
 80093d4:	9b00      	ldr	r3, [sp, #0]
 80093d6:	f10a 0901 	add.w	r9, sl, #1
 80093da:	f103 0801 	add.w	r8, r3, #1
 80093de:	9b01      	ldr	r3, [sp, #4]
 80093e0:	f80b 2003 	strb.w	r2, [fp, r3]
 80093e4:	4603      	mov	r3, r0
 80093e6:	f1ba 0f00 	cmp.w	sl, #0
 80093ea:	dc42      	bgt.n	8009472 <_vprintf+0x28e>
 80093ec:	9100      	str	r1, [sp, #0]
 80093ee:	f7fe fc89 	bl	8007d04 <__aeabi_i2f>
 80093f2:	9900      	ldr	r1, [sp, #0]
 80093f4:	f7ff f8b6 	bl	8008564 <__aeabi_fmul>
 80093f8:	f7fe fd4e 	bl	8007e98 <__aeabi_f2iz>
 80093fc:	4641      	mov	r1, r8
 80093fe:	464a      	mov	r2, r9
 8009400:	f7ff fdcc 	bl	8008f9c <_itostr>
 8009404:	4480      	add	r8, r0
 8009406:	eba8 0806 	sub.w	r8, r8, r6
 800940a:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 800940e:	5c73      	ldrb	r3, [r6, r1]
 8009410:	1872      	adds	r2, r6, r1
 8009412:	2b34      	cmp	r3, #52	; 0x34
 8009414:	d910      	bls.n	8009438 <_vprintf+0x254>
 8009416:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 800941a:	1e53      	subs	r3, r2, #1
 800941c:	282e      	cmp	r0, #46	; 0x2e
 800941e:	d02f      	beq.n	8009480 <_vprintf+0x29c>
 8009420:	469c      	mov	ip, r3
 8009422:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8009426:	4663      	mov	r3, ip
 8009428:	f81c 0901 	ldrb.w	r0, [ip], #-1
 800942c:	2839      	cmp	r0, #57	; 0x39
 800942e:	d024      	beq.n	800947a <_vprintf+0x296>
 8009430:	282e      	cmp	r0, #46	; 0x2e
 8009432:	d025      	beq.n	8009480 <_vprintf+0x29c>
 8009434:	3001      	adds	r0, #1
 8009436:	7018      	strb	r0, [r3, #0]
 8009438:	f101 0360 	add.w	r3, r1, #96	; 0x60
 800943c:	446b      	add	r3, sp
 800943e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009442:	2b2e      	cmp	r3, #46	; 0x2e
 8009444:	bf08      	it	eq
 8009446:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 800944a:	4688      	mov	r8, r1
 800944c:	4689      	mov	r9, r1
 800944e:	9b05      	ldr	r3, [sp, #20]
 8009450:	454b      	cmp	r3, r9
 8009452:	dc40      	bgt.n	80094d6 <_vprintf+0x2f2>
 8009454:	46b1      	mov	r9, r6
 8009456:	f1b8 0f00 	cmp.w	r8, #0
 800945a:	f77f af6e 	ble.w	800933a <_vprintf+0x156>
 800945e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009462:	a803      	add	r0, sp, #12
 8009464:	f7ff fdd4 	bl	8009010 <_xputch>
 8009468:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 800946c:	e7f3      	b.n	8009456 <_vprintf+0x272>
 800946e:	46b3      	mov	fp, r6
 8009470:	e79a      	b.n	80093a8 <_vprintf+0x1c4>
 8009472:	4358      	muls	r0, r3
 8009474:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009478:	e7b5      	b.n	80093e6 <_vprintf+0x202>
 800947a:	f88c e001 	strb.w	lr, [ip, #1]
 800947e:	e7d2      	b.n	8009426 <_vprintf+0x242>
 8009480:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8009484:	3b01      	subs	r3, #1
 8009486:	7818      	ldrb	r0, [r3, #0]
 8009488:	2839      	cmp	r0, #57	; 0x39
 800948a:	d112      	bne.n	80094b2 <_vprintf+0x2ce>
 800948c:	42b3      	cmp	r3, r6
 800948e:	d20d      	bcs.n	80094ac <_vprintf+0x2c8>
 8009490:	1c98      	adds	r0, r3, #2
 8009492:	1c59      	adds	r1, r3, #1
 8009494:	4281      	cmp	r1, r0
 8009496:	eba2 0203 	sub.w	r2, r2, r3
 800949a:	d913      	bls.n	80094c4 <_vprintf+0x2e0>
 800949c:	3201      	adds	r2, #1
 800949e:	441a      	add	r2, r3
 80094a0:	428a      	cmp	r2, r1
 80094a2:	d10b      	bne.n	80094bc <_vprintf+0x2d8>
 80094a4:	2231      	movs	r2, #49	; 0x31
 80094a6:	4641      	mov	r1, r8
 80094a8:	705a      	strb	r2, [r3, #1]
 80094aa:	e7c5      	b.n	8009438 <_vprintf+0x254>
 80094ac:	f803 c901 	strb.w	ip, [r3], #-1
 80094b0:	e7e9      	b.n	8009486 <_vprintf+0x2a2>
 80094b2:	42b3      	cmp	r3, r6
 80094b4:	d3ec      	bcc.n	8009490 <_vprintf+0x2ac>
 80094b6:	282d      	cmp	r0, #45	; 0x2d
 80094b8:	d0ea      	beq.n	8009490 <_vprintf+0x2ac>
 80094ba:	e7bb      	b.n	8009434 <_vprintf+0x250>
 80094bc:	f811 0b01 	ldrb.w	r0, [r1], #1
 80094c0:	7008      	strb	r0, [r1, #0]
 80094c2:	e7ed      	b.n	80094a0 <_vprintf+0x2bc>
 80094c4:	4411      	add	r1, r2
 80094c6:	4402      	add	r2, r0
 80094c8:	4290      	cmp	r0, r2
 80094ca:	d0eb      	beq.n	80094a4 <_vprintf+0x2c0>
 80094cc:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 80094d0:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80094d4:	e7f8      	b.n	80094c8 <_vprintf+0x2e4>
 80094d6:	2120      	movs	r1, #32
 80094d8:	a803      	add	r0, sp, #12
 80094da:	f7ff fd99 	bl	8009010 <_xputch>
 80094de:	f109 0901 	add.w	r9, r9, #1
 80094e2:	e7b4      	b.n	800944e <_vprintf+0x26a>
 80094e4:	2308      	movs	r3, #8
 80094e6:	9305      	str	r3, [sp, #20]
 80094e8:	2320      	movs	r3, #32
 80094ea:	2130      	movs	r1, #48	; 0x30
 80094ec:	f854 8b04 	ldr.w	r8, [r4], #4
 80094f0:	a803      	add	r0, sp, #12
 80094f2:	9303      	str	r3, [sp, #12]
 80094f4:	f7ff fd8c 	bl	8009010 <_xputch>
 80094f8:	2178      	movs	r1, #120	; 0x78
 80094fa:	a803      	add	r0, sp, #12
 80094fc:	f7ff fd88 	bl	8009010 <_xputch>
 8009500:	4641      	mov	r1, r8
 8009502:	a803      	add	r0, sp, #12
 8009504:	f7ff fe10 	bl	8009128 <_format_hex>
 8009508:	e717      	b.n	800933a <_vprintf+0x156>
 800950a:	f04f 0800 	mov.w	r8, #0
 800950e:	f854 9b04 	ldr.w	r9, [r4], #4
 8009512:	f819 3008 	ldrb.w	r3, [r9, r8]
 8009516:	b993      	cbnz	r3, 800953e <_vprintf+0x35a>
 8009518:	9b03      	ldr	r3, [sp, #12]
 800951a:	07d9      	lsls	r1, r3, #31
 800951c:	d503      	bpl.n	8009526 <_vprintf+0x342>
 800951e:	9b04      	ldr	r3, [sp, #16]
 8009520:	4598      	cmp	r8, r3
 8009522:	bfa8      	it	ge
 8009524:	4698      	movge	r8, r3
 8009526:	9b03      	ldr	r3, [sp, #12]
 8009528:	f108 0a01 	add.w	sl, r8, #1
 800952c:	065a      	lsls	r2, r3, #25
 800952e:	d403      	bmi.n	8009538 <_vprintf+0x354>
 8009530:	9b05      	ldr	r3, [sp, #20]
 8009532:	4598      	cmp	r8, r3
 8009534:	db06      	blt.n	8009544 <_vprintf+0x360>
 8009536:	46d0      	mov	r8, sl
 8009538:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800953c:	e00e      	b.n	800955c <_vprintf+0x378>
 800953e:	f108 0801 	add.w	r8, r8, #1
 8009542:	e7e6      	b.n	8009512 <_vprintf+0x32e>
 8009544:	2120      	movs	r1, #32
 8009546:	a803      	add	r0, sp, #12
 8009548:	f7ff fd62 	bl	8009010 <_xputch>
 800954c:	46d0      	mov	r8, sl
 800954e:	e7ea      	b.n	8009526 <_vprintf+0x342>
 8009550:	a803      	add	r0, sp, #12
 8009552:	f7ff fd5d 	bl	8009010 <_xputch>
 8009556:	9b04      	ldr	r3, [sp, #16]
 8009558:	3b01      	subs	r3, #1
 800955a:	9304      	str	r3, [sp, #16]
 800955c:	9b03      	ldr	r3, [sp, #12]
 800955e:	07db      	lsls	r3, r3, #31
 8009560:	d501      	bpl.n	8009566 <_vprintf+0x382>
 8009562:	9b04      	ldr	r3, [sp, #16]
 8009564:	b11b      	cbz	r3, 800956e <_vprintf+0x38a>
 8009566:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800956a:	2900      	cmp	r1, #0
 800956c:	d1f0      	bne.n	8009550 <_vprintf+0x36c>
 800956e:	9b05      	ldr	r3, [sp, #20]
 8009570:	4543      	cmp	r3, r8
 8009572:	f77f aee2 	ble.w	800933a <_vprintf+0x156>
 8009576:	2120      	movs	r1, #32
 8009578:	a803      	add	r0, sp, #12
 800957a:	f7ff fd49 	bl	8009010 <_xputch>
 800957e:	f108 0801 	add.w	r8, r8, #1
 8009582:	e7f4      	b.n	800956e <_vprintf+0x38a>
 8009584:	9b03      	ldr	r3, [sp, #12]
 8009586:	f013 0304 	ands.w	r3, r3, #4
 800958a:	bf1d      	ittte	ne
 800958c:	3407      	addne	r4, #7
 800958e:	f024 0307 	bicne.w	r3, r4, #7
 8009592:	461c      	movne	r4, r3
 8009594:	f854 2b04 	ldreq.w	r2, [r4], #4
 8009598:	bf1c      	itt	ne
 800959a:	f854 2b08 	ldrne.w	r2, [r4], #8
 800959e:	685b      	ldrne	r3, [r3, #4]
 80095a0:	e6e3      	b.n	800936a <_vprintf+0x186>
 80095a2:	9b03      	ldr	r3, [sp, #12]
 80095a4:	f043 0302 	orr.w	r3, r3, #2
 80095a8:	9303      	str	r3, [sp, #12]
 80095aa:	f854 1b04 	ldr.w	r1, [r4], #4
 80095ae:	e7a8      	b.n	8009502 <_vprintf+0x31e>

080095b0 <printf>:
 80095b0:	b40f      	push	{r0, r1, r2, r3}
 80095b2:	b507      	push	{r0, r1, r2, lr}
 80095b4:	aa04      	add	r2, sp, #16
 80095b6:	f852 1b04 	ldr.w	r1, [r2], #4
 80095ba:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80095be:	9201      	str	r2, [sp, #4]
 80095c0:	f7ff fe10 	bl	80091e4 <_vprintf>
 80095c4:	b003      	add	sp, #12
 80095c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80095ca:	b004      	add	sp, #16
 80095cc:	4770      	bx	lr
	...

080095d0 <snprintf>:
 80095d0:	b40c      	push	{r2, r3}
 80095d2:	460b      	mov	r3, r1
 80095d4:	b513      	push	{r0, r1, r4, lr}
 80095d6:	4c09      	ldr	r4, [pc, #36]	; (80095fc <snprintf+0x2c>)
 80095d8:	aa04      	add	r2, sp, #16
 80095da:	f852 1b04 	ldr.w	r1, [r2], #4
 80095de:	6020      	str	r0, [r4, #0]
 80095e0:	4618      	mov	r0, r3
 80095e2:	9201      	str	r2, [sp, #4]
 80095e4:	f7ff fdfe 	bl	80091e4 <_vprintf>
 80095e8:	2300      	movs	r3, #0
 80095ea:	6822      	ldr	r2, [r4, #0]
 80095ec:	6023      	str	r3, [r4, #0]
 80095ee:	7013      	strb	r3, [r2, #0]
 80095f0:	b002      	add	sp, #8
 80095f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095f6:	b002      	add	sp, #8
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop
 80095fc:	200000e8 	andcs	r0, r0, r8, ror #1

08009600 <vsnprintf>:
 8009600:	b538      	push	{r3, r4, r5, lr}
 8009602:	4605      	mov	r5, r0
 8009604:	4c05      	ldr	r4, [pc, #20]	; (800961c <vsnprintf+0x1c>)
 8009606:	4608      	mov	r0, r1
 8009608:	4611      	mov	r1, r2
 800960a:	461a      	mov	r2, r3
 800960c:	6025      	str	r5, [r4, #0]
 800960e:	f7ff fde9 	bl	80091e4 <_vprintf>
 8009612:	2300      	movs	r3, #0
 8009614:	6822      	ldr	r2, [r4, #0]
 8009616:	6023      	str	r3, [r4, #0]
 8009618:	7013      	strb	r3, [r2, #0]
 800961a:	bd38      	pop	{r3, r4, r5, pc}
 800961c:	200000e8 	andcs	r0, r0, r8, ror #1

08009620 <strlen>:
 8009620:	4603      	mov	r3, r0
 8009622:	461a      	mov	r2, r3
 8009624:	7811      	ldrb	r1, [r2, #0]
 8009626:	3301      	adds	r3, #1
 8009628:	2900      	cmp	r1, #0
 800962a:	d1fa      	bne.n	8009622 <strlen+0x2>
 800962c:	1a10      	subs	r0, r2, r0
 800962e:	4770      	bx	lr

08009630 <strncpy.isra.0>:
 8009630:	3901      	subs	r1, #1
 8009632:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009636:	b92b      	cbnz	r3, 8009644 <strncpy.isra.0+0x14>
 8009638:	4402      	add	r2, r0
 800963a:	4290      	cmp	r0, r2
 800963c:	d007      	beq.n	800964e <strncpy.isra.0+0x1e>
 800963e:	f800 3b01 	strb.w	r3, [r0], #1
 8009642:	e7fa      	b.n	800963a <strncpy.isra.0+0xa>
 8009644:	3a01      	subs	r2, #1
 8009646:	f800 3b01 	strb.w	r3, [r0], #1
 800964a:	d1f2      	bne.n	8009632 <strncpy.isra.0+0x2>
 800964c:	4770      	bx	lr
 800964e:	4770      	bx	lr

08009650 <strcpy.isra.0>:
 8009650:	3801      	subs	r0, #1
 8009652:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009656:	f800 3f01 	strb.w	r3, [r0, #1]!
 800965a:	2b00      	cmp	r3, #0
 800965c:	d1f9      	bne.n	8009652 <strcpy.isra.0+0x2>
 800965e:	4770      	bx	lr

08009660 <OscServer::OscServer()>:
 8009660:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009664:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009666:	4a24      	ldr	r2, [pc, #144]	; (80096f8 <OscServer::OscServer()+0x98>)
 8009668:	4604      	mov	r4, r0
 800966a:	e9c0 2300 	strd	r2, r3, [r0]
 800966e:	2300      	movs	r3, #0
 8009670:	2581      	movs	r5, #129	; 0x81
 8009672:	4a22      	ldr	r2, [pc, #136]	; (80096fc <OscServer::OscServer()+0x9c>)
 8009674:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 8009678:	6010      	str	r0, [r2, #0]
 800967a:	4a21      	ldr	r2, [pc, #132]	; (8009700 <OscServer::OscServer()+0xa0>)
 800967c:	6083      	str	r3, [r0, #8]
 800967e:	7303      	strb	r3, [r0, #12]
 8009680:	3d01      	subs	r5, #1
 8009682:	d002      	beq.n	800968a <OscServer::OscServer()+0x2a>
 8009684:	f802 3b01 	strb.w	r3, [r2], #1
 8009688:	e7fa      	b.n	8009680 <OscServer::OscServer()+0x20>
 800968a:	2281      	movs	r2, #129	; 0x81
 800968c:	491d      	ldr	r1, [pc, #116]	; (8009704 <OscServer::OscServer()+0xa4>)
 800968e:	481c      	ldr	r0, [pc, #112]	; (8009700 <OscServer::OscServer()+0xa0>)
 8009690:	f7ff ffde 	bl	8009650 <strcpy.isra.0>
 8009694:	4b1c      	ldr	r3, [pc, #112]	; (8009708 <OscServer::OscServer()+0xa8>)
 8009696:	3a01      	subs	r2, #1
 8009698:	d002      	beq.n	80096a0 <OscServer::OscServer()+0x40>
 800969a:	f803 5b01 	strb.w	r5, [r3], #1
 800969e:	e7fa      	b.n	8009696 <OscServer::OscServer()+0x36>
 80096a0:	491a      	ldr	r1, [pc, #104]	; (800970c <OscServer::OscServer()+0xac>)
 80096a2:	4819      	ldr	r0, [pc, #100]	; (8009708 <OscServer::OscServer()+0xa8>)
 80096a4:	f7ff ffd4 	bl	8009650 <strcpy.isra.0>
 80096a8:	2380      	movs	r3, #128	; 0x80
 80096aa:	4919      	ldr	r1, [pc, #100]	; (8009710 <OscServer::OscServer()+0xb0>)
 80096ac:	3b01      	subs	r3, #1
 80096ae:	d302      	bcc.n	80096b6 <OscServer::OscServer()+0x56>
 80096b0:	f801 2b01 	strb.w	r2, [r1], #1
 80096b4:	e7fa      	b.n	80096ac <OscServer::OscServer()+0x4c>
 80096b6:	4917      	ldr	r1, [pc, #92]	; (8009714 <OscServer::OscServer()+0xb4>)
 80096b8:	4815      	ldr	r0, [pc, #84]	; (8009710 <OscServer::OscServer()+0xb0>)
 80096ba:	f7ff ffc9 	bl	8009650 <strcpy.isra.0>
 80096be:	2380      	movs	r3, #128	; 0x80
 80096c0:	2100      	movs	r1, #0
 80096c2:	4a15      	ldr	r2, [pc, #84]	; (8009718 <OscServer::OscServer()+0xb8>)
 80096c4:	3b01      	subs	r3, #1
 80096c6:	d302      	bcc.n	80096ce <OscServer::OscServer()+0x6e>
 80096c8:	f802 1b01 	strb.w	r1, [r2], #1
 80096cc:	e7fa      	b.n	80096c4 <OscServer::OscServer()+0x64>
 80096ce:	4913      	ldr	r1, [pc, #76]	; (800971c <OscServer::OscServer()+0xbc>)
 80096d0:	4811      	ldr	r0, [pc, #68]	; (8009718 <OscServer::OscServer()+0xb8>)
 80096d2:	f7ff ffbd 	bl	8009650 <strcpy.isra.0>
 80096d6:	4b12      	ldr	r3, [pc, #72]	; (8009720 <OscServer::OscServer()+0xc0>)
 80096d8:	211f      	movs	r1, #31
 80096da:	9300      	str	r3, [sp, #0]
 80096dc:	4a11      	ldr	r2, [pc, #68]	; (8009724 <OscServer::OscServer()+0xc4>)
 80096de:	4b12      	ldr	r3, [pc, #72]	; (8009728 <OscServer::OscServer()+0xc8>)
 80096e0:	f104 000d 	add.w	r0, r4, #13
 80096e4:	f7ff ff74 	bl	80095d0 <snprintf>
 80096e8:	4620      	mov	r0, r4
 80096ea:	4b10      	ldr	r3, [pc, #64]	; (800972c <OscServer::OscServer()+0xcc>)
 80096ec:	63a3      	str	r3, [r4, #56]	; 0x38
 80096ee:	4b10      	ldr	r3, [pc, #64]	; (8009730 <OscServer::OscServer()+0xd0>)
 80096f0:	63e3      	str	r3, [r4, #60]	; 0x3c
 80096f2:	b003      	add	sp, #12
 80096f4:	bd30      	pop	{r4, r5, pc}
 80096f6:	bf00      	nop
 80096f8:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 80096fc:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009700:	20000270 	andcs	r0, r0, r0, ror r2
 8009704:	080133e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, ip, sp}
 8009708:	20000170 	andcs	r0, r0, r0, ror r1
 800970c:	080133e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, ip, sp}
 8009710:	200000ec 	andcs	r0, r0, ip, ror #1
 8009714:	080133ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, ip, sp}
 8009718:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800971c:	080133f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, ip, sp}
 8009720:	080132e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, ip, sp}
 8009724:	08013405 	stmdaeq	r1, {r0, r2, sl, ip, sp}
 8009728:	08013401 	stmdaeq	r1, {r0, sl, ip, sp}
 800972c:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 8009730:	0801340e 	stmdaeq	r1, {r1, r2, r3, sl, ip, sp}

08009734 <OscServer::Start()>:
 8009734:	b530      	push	{r4, r5, lr}
 8009736:	4d0e      	ldr	r5, [pc, #56]	; (8009770 <OscServer::Start()+0x3c>)
 8009738:	b085      	sub	sp, #20
 800973a:	4604      	mov	r4, r0
 800973c:	8801      	ldrh	r1, [r0, #0]
 800973e:	6828      	ldr	r0, [r5, #0]
 8009740:	f005 fd96 	bl	800f270 <Network::Begin(unsigned short)>
 8009744:	682b      	ldr	r3, [r5, #0]
 8009746:	6060      	str	r0, [r4, #4]
 8009748:	691a      	ldr	r2, [r3, #16]
 800974a:	4601      	mov	r1, r0
 800974c:	6998      	ldr	r0, [r3, #24]
 800974e:	2300      	movs	r3, #0
 8009750:	9301      	str	r3, [sp, #4]
 8009752:	4b08      	ldr	r3, [pc, #32]	; (8009774 <OscServer::Start()+0x40>)
 8009754:	ea62 0200 	orn	r2, r2, r0
 8009758:	9300      	str	r3, [sp, #0]
 800975a:	a803      	add	r0, sp, #12
 800975c:	8823      	ldrh	r3, [r4, #0]
 800975e:	f000 fd9d 	bl	800a29c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8009762:	4b05      	ldr	r3, [pc, #20]	; (8009778 <OscServer::Start()+0x44>)
 8009764:	2102      	movs	r1, #2
 8009766:	6818      	ldr	r0, [r3, #0]
 8009768:	f007 fb56 	bl	8010e18 <LedBlink::SetMode(ledblink::Mode)>
 800976c:	b005      	add	sp, #20
 800976e:	bd30      	pop	{r4, r5, pc}
 8009770:	20009070 	andcs	r9, r0, r0, ror r0
 8009774:	08013414 	stmdaeq	r1, {r2, r4, sl, ip, sp}
 8009778:	2000978c 	andcs	r9, r0, ip, lsl #15

0800977c <OscServer::SetPath(char const*)>:
 800977c:	b510      	push	{r4, lr}
 800977e:	780b      	ldrb	r3, [r1, #0]
 8009780:	2b2f      	cmp	r3, #47	; 0x2f
 8009782:	d11c      	bne.n	80097be <OscServer::SetPath(char const*)+0x42>
 8009784:	4c0e      	ldr	r4, [pc, #56]	; (80097c0 <OscServer::SetPath(char const*)+0x44>)
 8009786:	227d      	movs	r2, #125	; 0x7d
 8009788:	4620      	mov	r0, r4
 800978a:	f7ff ff51 	bl	8009630 <strncpy.isra.0>
 800978e:	4620      	mov	r0, r4
 8009790:	f7ff ff46 	bl	8009620 <strlen>
 8009794:	3801      	subs	r0, #1
 8009796:	5c23      	ldrb	r3, [r4, r0]
 8009798:	4909      	ldr	r1, [pc, #36]	; (80097c0 <OscServer::SetPath(char const*)+0x44>)
 800979a:	2b2f      	cmp	r3, #47	; 0x2f
 800979c:	bf04      	itt	eq
 800979e:	2300      	moveq	r3, #0
 80097a0:	5423      	strbeq	r3, [r4, r0]
 80097a2:	4c08      	ldr	r4, [pc, #32]	; (80097c4 <OscServer::SetPath(char const*)+0x48>)
 80097a4:	4620      	mov	r0, r4
 80097a6:	f7ff ff53 	bl	8009650 <strcpy.isra.0>
 80097aa:	4620      	mov	r0, r4
 80097ac:	f7ff ff38 	bl	8009620 <strlen>
 80097b0:	232f      	movs	r3, #47	; 0x2f
 80097b2:	5423      	strb	r3, [r4, r0]
 80097b4:	232a      	movs	r3, #42	; 0x2a
 80097b6:	4404      	add	r4, r0
 80097b8:	7063      	strb	r3, [r4, #1]
 80097ba:	2300      	movs	r3, #0
 80097bc:	70a3      	strb	r3, [r4, #2]
 80097be:	bd10      	pop	{r4, pc}
 80097c0:	20000270 	andcs	r0, r0, r0, ror r2
 80097c4:	20000170 	andcs	r0, r0, r0, ror r1

080097c8 <OscServer::SetPathInfo(char const*)>:
 80097c8:	780b      	ldrb	r3, [r1, #0]
 80097ca:	b510      	push	{r4, lr}
 80097cc:	2b2f      	cmp	r3, #47	; 0x2f
 80097ce:	d10d      	bne.n	80097ec <OscServer::SetPathInfo(char const*)+0x24>
 80097d0:	4c07      	ldr	r4, [pc, #28]	; (80097f0 <OscServer::SetPathInfo(char const*)+0x28>)
 80097d2:	227f      	movs	r2, #127	; 0x7f
 80097d4:	4620      	mov	r0, r4
 80097d6:	f7ff ff2b 	bl	8009630 <strncpy.isra.0>
 80097da:	4620      	mov	r0, r4
 80097dc:	f7ff ff20 	bl	8009620 <strlen>
 80097e0:	3801      	subs	r0, #1
 80097e2:	5c23      	ldrb	r3, [r4, r0]
 80097e4:	2b2f      	cmp	r3, #47	; 0x2f
 80097e6:	bf04      	itt	eq
 80097e8:	2300      	moveq	r3, #0
 80097ea:	5423      	strbeq	r3, [r4, r0]
 80097ec:	bd10      	pop	{r4, pc}
 80097ee:	bf00      	nop
 80097f0:	200000ec 	andcs	r0, r0, ip, ror #1

080097f4 <OscServer::SetPathBlackOut(char const*)>:
 80097f4:	780b      	ldrb	r3, [r1, #0]
 80097f6:	b510      	push	{r4, lr}
 80097f8:	2b2f      	cmp	r3, #47	; 0x2f
 80097fa:	d10d      	bne.n	8009818 <OscServer::SetPathBlackOut(char const*)+0x24>
 80097fc:	4c07      	ldr	r4, [pc, #28]	; (800981c <OscServer::SetPathBlackOut(char const*)+0x28>)
 80097fe:	227f      	movs	r2, #127	; 0x7f
 8009800:	4620      	mov	r0, r4
 8009802:	f7ff ff15 	bl	8009630 <strncpy.isra.0>
 8009806:	4620      	mov	r0, r4
 8009808:	f7ff ff0a 	bl	8009620 <strlen>
 800980c:	3801      	subs	r0, #1
 800980e:	5c23      	ldrb	r3, [r4, r0]
 8009810:	2b2f      	cmp	r3, #47	; 0x2f
 8009812:	bf04      	itt	eq
 8009814:	2300      	moveq	r3, #0
 8009816:	5423      	strbeq	r3, [r4, r0]
 8009818:	bd10      	pop	{r4, pc}
 800981a:	bf00      	nop
 800981c:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009820 <OscServer::GetChannel(char const*)>:
 8009820:	b538      	push	{r3, r4, r5, lr}
 8009822:	480f      	ldr	r0, [pc, #60]	; (8009860 <OscServer::GetChannel(char const*)+0x40>)
 8009824:	460c      	mov	r4, r1
 8009826:	f7ff fefb 	bl	8009620 <strlen>
 800982a:	1823      	adds	r3, r4, r0
 800982c:	461c      	mov	r4, r3
 800982e:	2000      	movs	r0, #0
 8009830:	210a      	movs	r1, #10
 8009832:	3403      	adds	r4, #3
 8009834:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009838:	b14a      	cbz	r2, 800984e <OscServer::GetChannel(char const*)+0x2e>
 800983a:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800983e:	2d09      	cmp	r5, #9
 8009840:	d80b      	bhi.n	800985a <OscServer::GetChannel(char const*)+0x3a>
 8009842:	fb01 2000 	mla	r0, r1, r0, r2
 8009846:	429c      	cmp	r4, r3
 8009848:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800984c:	d1f2      	bne.n	8009834 <OscServer::GetChannel(char const*)+0x14>
 800984e:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8009852:	bfc8      	it	gt
 8009854:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 8009858:	bd38      	pop	{r3, r4, r5, pc}
 800985a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800985e:	e7fb      	b.n	8009858 <OscServer::GetChannel(char const*)+0x38>
 8009860:	20000270 	andcs	r0, r0, r0, ror r2

08009864 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 8009864:	2000      	movs	r0, #0
 8009866:	b570      	push	{r4, r5, r6, lr}
 8009868:	3a01      	subs	r2, #1
 800986a:	4c09      	ldr	r4, [pc, #36]	; (8009890 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800986c:	b292      	uxth	r2, r2
 800986e:	4414      	add	r4, r2
 8009870:	4413      	add	r3, r2
 8009872:	3901      	subs	r1, #1
 8009874:	429a      	cmp	r2, r3
 8009876:	d20a      	bcs.n	800988e <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2a>
 8009878:	7826      	ldrb	r6, [r4, #0]
 800987a:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800987e:	3201      	adds	r2, #1
 8009880:	42ae      	cmp	r6, r5
 8009882:	bf1c      	itt	ne
 8009884:	7025      	strbne	r5, [r4, #0]
 8009886:	2001      	movne	r0, #1
 8009888:	3401      	adds	r4, #1
 800988a:	b292      	uxth	r2, r2
 800988c:	e7f2      	b.n	8009874 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800988e:	bd70      	pop	{r4, r5, r6, pc}
 8009890:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009894 <OscServer::Run()>:
 8009894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009896:	4d98      	ldr	r5, [pc, #608]	; (8009af8 <OscServer::Run()+0x264>)
 8009898:	b097      	sub	sp, #92	; 0x5c
 800989a:	4604      	mov	r4, r0
 800989c:	4629      	mov	r1, r5
 800989e:	7900      	ldrb	r0, [r0, #4]
 80098a0:	f10d 031a 	add.w	r3, sp, #26
 80098a4:	aa07      	add	r2, sp, #28
 80098a6:	f004 ffef 	bl	800e888 <udp_recv2>
 80098aa:	4606      	mov	r6, r0
 80098ac:	b1a8      	cbz	r0, 80098da <OscServer::Run()+0x46>
 80098ae:	4602      	mov	r2, r0
 80098b0:	6829      	ldr	r1, [r5, #0]
 80098b2:	a808      	add	r0, sp, #32
 80098b4:	f000 fc56 	bl	800a164 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 80098b8:	4990      	ldr	r1, [pc, #576]	; (8009afc <OscServer::Run()+0x268>)
 80098ba:	6828      	ldr	r0, [r5, #0]
 80098bc:	f000 fb72 	bl	8009fa4 <lo_pattern_match>
 80098c0:	4607      	mov	r7, r0
 80098c2:	2800      	cmp	r0, #0
 80098c4:	d074      	beq.n	80099b0 <OscServer::Run()+0x11c>
 80098c6:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80098ca:	b133      	cbz	r3, 80098da <OscServer::Run()+0x46>
 80098cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80098ce:	2e01      	cmp	r6, #1
 80098d0:	d105      	bne.n	80098de <OscServer::Run()+0x4a>
 80098d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80098d4:	781b      	ldrb	r3, [r3, #0]
 80098d6:	2b62      	cmp	r3, #98	; 0x62
 80098d8:	d03d      	beq.n	8009956 <OscServer::Run()+0xc2>
 80098da:	b017      	add	sp, #92	; 0x5c
 80098dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098de:	2e02      	cmp	r6, #2
 80098e0:	d1fb      	bne.n	80098da <OscServer::Run()+0x46>
 80098e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80098e4:	781b      	ldrb	r3, [r3, #0]
 80098e6:	2b69      	cmp	r3, #105	; 0x69
 80098e8:	d1f7      	bne.n	80098da <OscServer::Run()+0x46>
 80098ea:	2100      	movs	r1, #0
 80098ec:	a808      	add	r0, sp, #32
 80098ee:	f000 fc89 	bl	800a204 <OscSimpleMessage::GetInt(unsigned int)>
 80098f2:	b285      	uxth	r5, r0
 80098f4:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80098f8:	d2ef      	bcs.n	80098da <OscServer::Run()+0x46>
 80098fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80098fc:	2b01      	cmp	r3, #1
 80098fe:	d9ec      	bls.n	80098da <OscServer::Run()+0x46>
 8009900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009902:	785b      	ldrb	r3, [r3, #1]
 8009904:	2b69      	cmp	r3, #105	; 0x69
 8009906:	d147      	bne.n	8009998 <OscServer::Run()+0x104>
 8009908:	2101      	movs	r1, #1
 800990a:	a808      	add	r0, sp, #32
 800990c:	f000 fc7a 	bl	800a204 <OscSimpleMessage::GetInt(unsigned int)>
 8009910:	3501      	adds	r5, #1
 8009912:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8009916:	b2ad      	uxth	r5, r5
 8009918:	2301      	movs	r3, #1
 800991a:	462a      	mov	r2, r5
 800991c:	4620      	mov	r0, r4
 800991e:	a90f      	add	r1, sp, #60	; 0x3c
 8009920:	f7ff ffa0 	bl	8009864 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8009924:	b910      	cbnz	r0, 800992c <OscServer::Run()+0x98>
 8009926:	7ae3      	ldrb	r3, [r4, #11]
 8009928:	2b00      	cmp	r3, #0
 800992a:	d0d6      	beq.n	80098da <OscServer::Run()+0x46>
 800992c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800992e:	7aa1      	ldrb	r1, [r4, #10]
 8009930:	6803      	ldr	r3, [r0, #0]
 8009932:	691e      	ldr	r6, [r3, #16]
 8009934:	2900      	cmp	r1, #0
 8009936:	f040 80a4 	bne.w	8009a82 <OscServer::Run()+0x1ee>
 800993a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800993e:	4a70      	ldr	r2, [pc, #448]	; (8009b00 <OscServer::Run()+0x26c>)
 8009940:	47b0      	blx	r6
 8009942:	7b21      	ldrb	r1, [r4, #12]
 8009944:	2900      	cmp	r1, #0
 8009946:	d1c8      	bne.n	80098da <OscServer::Run()+0x46>
 8009948:	2301      	movs	r3, #1
 800994a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800994c:	7323      	strb	r3, [r4, #12]
 800994e:	6803      	ldr	r3, [r0, #0]
 8009950:	689b      	ldr	r3, [r3, #8]
 8009952:	4798      	blx	r3
 8009954:	e7c1      	b.n	80098da <OscServer::Run()+0x46>
 8009956:	2200      	movs	r2, #0
 8009958:	a908      	add	r1, sp, #32
 800995a:	a80f      	add	r0, sp, #60	; 0x3c
 800995c:	f000 fc66 	bl	800a22c <OscSimpleMessage::GetBlob(unsigned int)>
 8009960:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009962:	b29d      	uxth	r5, r3
 8009964:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8009968:	d8b7      	bhi.n	80098da <OscServer::Run()+0x46>
 800996a:	462b      	mov	r3, r5
 800996c:	4632      	mov	r2, r6
 800996e:	4620      	mov	r0, r4
 8009970:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009972:	f7ff ff77 	bl	8009864 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8009976:	b910      	cbnz	r0, 800997e <OscServer::Run()+0xea>
 8009978:	7ae3      	ldrb	r3, [r4, #11]
 800997a:	2b00      	cmp	r3, #0
 800997c:	d0ad      	beq.n	80098da <OscServer::Run()+0x46>
 800997e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009980:	6803      	ldr	r3, [r0, #0]
 8009982:	691e      	ldr	r6, [r3, #16]
 8009984:	7aa3      	ldrb	r3, [r4, #10]
 8009986:	b113      	cbz	r3, 800998e <OscServer::Run()+0xfa>
 8009988:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800998c:	d179      	bne.n	8009a82 <OscServer::Run()+0x1ee>
 800998e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009992:	2100      	movs	r1, #0
 8009994:	4a5a      	ldr	r2, [pc, #360]	; (8009b00 <OscServer::Run()+0x26c>)
 8009996:	e7d3      	b.n	8009940 <OscServer::Run()+0xac>
 8009998:	2b66      	cmp	r3, #102	; 0x66
 800999a:	d19e      	bne.n	80098da <OscServer::Run()+0x46>
 800999c:	2101      	movs	r1, #1
 800999e:	a808      	add	r0, sp, #32
 80099a0:	f000 fc1c 	bl	800a1dc <OscSimpleMessage::GetFloat(unsigned int)>
 80099a4:	4957      	ldr	r1, [pc, #348]	; (8009b04 <OscServer::Run()+0x270>)
 80099a6:	f7fe fddd 	bl	8008564 <__aeabi_fmul>
 80099aa:	f7fe ff2b 	bl	8008804 <__aeabi_f2uiz>
 80099ae:	e7af      	b.n	8009910 <OscServer::Run()+0x7c>
 80099b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80099b2:	b9b3      	cbnz	r3, 80099e2 <OscServer::Run()+0x14e>
 80099b4:	4954      	ldr	r1, [pc, #336]	; (8009b08 <OscServer::Run()+0x274>)
 80099b6:	6828      	ldr	r0, [r5, #0]
 80099b8:	f000 faf4 	bl	8009fa4 <lo_pattern_match>
 80099bc:	4606      	mov	r6, r0
 80099be:	2800      	cmp	r0, #0
 80099c0:	d134      	bne.n	8009a2c <OscServer::Run()+0x198>
 80099c2:	4952      	ldr	r1, [pc, #328]	; (8009b0c <OscServer::Run()+0x278>)
 80099c4:	6828      	ldr	r0, [r5, #0]
 80099c6:	f000 faed 	bl	8009fa4 <lo_pattern_match>
 80099ca:	2800      	cmp	r0, #0
 80099cc:	d05f      	beq.n	8009a8e <OscServer::Run()+0x1fa>
 80099ce:	4b50      	ldr	r3, [pc, #320]	; (8009b10 <OscServer::Run()+0x27c>)
 80099d0:	9a07      	ldr	r2, [sp, #28]
 80099d2:	9300      	str	r3, [sp, #0]
 80099d4:	6861      	ldr	r1, [r4, #4]
 80099d6:	8863      	ldrh	r3, [r4, #2]
 80099d8:	9601      	str	r6, [sp, #4]
 80099da:	a80f      	add	r0, sp, #60	; 0x3c
 80099dc:	f000 fc5e 	bl	800a29c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 80099e0:	e77b      	b.n	80098da <OscServer::Run()+0x46>
 80099e2:	494c      	ldr	r1, [pc, #304]	; (8009b14 <OscServer::Run()+0x280>)
 80099e4:	6828      	ldr	r0, [r5, #0]
 80099e6:	f000 fadd 	bl	8009fa4 <lo_pattern_match>
 80099ea:	2800      	cmp	r0, #0
 80099ec:	d0e2      	beq.n	80099b4 <OscServer::Run()+0x120>
 80099ee:	4632      	mov	r2, r6
 80099f0:	6829      	ldr	r1, [r5, #0]
 80099f2:	a80f      	add	r0, sp, #60	; 0x3c
 80099f4:	f000 fbb6 	bl	800a164 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 80099f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80099fa:	2b00      	cmp	r3, #0
 80099fc:	f43f af6d 	beq.w	80098da <OscServer::Run()+0x46>
 8009a00:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009a02:	781b      	ldrb	r3, [r3, #0]
 8009a04:	2b66      	cmp	r3, #102	; 0x66
 8009a06:	f47f af68 	bne.w	80098da <OscServer::Run()+0x46>
 8009a0a:	4639      	mov	r1, r7
 8009a0c:	a80f      	add	r0, sp, #60	; 0x3c
 8009a0e:	f000 fbe5 	bl	800a1dc <OscSimpleMessage::GetFloat(unsigned int)>
 8009a12:	2100      	movs	r1, #0
 8009a14:	f7fe fa0e 	bl	8007e34 <__aeabi_fcmpeq>
 8009a18:	4603      	mov	r3, r0
 8009a1a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009a1c:	b91b      	cbnz	r3, 8009a26 <OscServer::Run()+0x192>
 8009a1e:	6803      	ldr	r3, [r0, #0]
 8009a20:	689b      	ldr	r3, [r3, #8]
 8009a22:	4798      	blx	r3
 8009a24:	e759      	b.n	80098da <OscServer::Run()+0x46>
 8009a26:	6803      	ldr	r3, [r0, #0]
 8009a28:	68db      	ldr	r3, [r3, #12]
 8009a2a:	e7fa      	b.n	8009a22 <OscServer::Run()+0x18e>
 8009a2c:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8009a30:	2b00      	cmp	r3, #0
 8009a32:	f43f af52 	beq.w	80098da <OscServer::Run()+0x46>
 8009a36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009a38:	2b01      	cmp	r3, #1
 8009a3a:	f47f af4e 	bne.w	80098da <OscServer::Run()+0x46>
 8009a3e:	6829      	ldr	r1, [r5, #0]
 8009a40:	4620      	mov	r0, r4
 8009a42:	f7ff feed 	bl	8009820 <OscServer::GetChannel(char const*)>
 8009a46:	b285      	uxth	r5, r0
 8009a48:	1e6b      	subs	r3, r5, #1
 8009a4a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009a4e:	f4bf af44 	bcs.w	80098da <OscServer::Run()+0x46>
 8009a52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009a54:	781b      	ldrb	r3, [r3, #0]
 8009a56:	2b69      	cmp	r3, #105	; 0x69
 8009a58:	d106      	bne.n	8009a68 <OscServer::Run()+0x1d4>
 8009a5a:	2100      	movs	r1, #0
 8009a5c:	a808      	add	r0, sp, #32
 8009a5e:	f000 fbd1 	bl	800a204 <OscSimpleMessage::GetInt(unsigned int)>
 8009a62:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8009a66:	e757      	b.n	8009918 <OscServer::Run()+0x84>
 8009a68:	2b66      	cmp	r3, #102	; 0x66
 8009a6a:	f47f af36 	bne.w	80098da <OscServer::Run()+0x46>
 8009a6e:	2100      	movs	r1, #0
 8009a70:	a808      	add	r0, sp, #32
 8009a72:	f000 fbb3 	bl	800a1dc <OscSimpleMessage::GetFloat(unsigned int)>
 8009a76:	4923      	ldr	r1, [pc, #140]	; (8009b04 <OscServer::Run()+0x270>)
 8009a78:	f7fe fd74 	bl	8008564 <__aeabi_fmul>
 8009a7c:	f7fe fec2 	bl	8008804 <__aeabi_f2uiz>
 8009a80:	e7ef      	b.n	8009a62 <OscServer::Run()+0x1ce>
 8009a82:	8923      	ldrh	r3, [r4, #8]
 8009a84:	42ab      	cmp	r3, r5
 8009a86:	bf38      	it	cc
 8009a88:	462b      	movcc	r3, r5
 8009a8a:	8123      	strh	r3, [r4, #8]
 8009a8c:	e781      	b.n	8009992 <OscServer::Run()+0xfe>
 8009a8e:	4922      	ldr	r1, [pc, #136]	; (8009b18 <OscServer::Run()+0x284>)
 8009a90:	6828      	ldr	r0, [r5, #0]
 8009a92:	f000 fa87 	bl	8009fa4 <lo_pattern_match>
 8009a96:	2800      	cmp	r0, #0
 8009a98:	f43f af1f 	beq.w	80098da <OscServer::Run()+0x46>
 8009a9c:	f104 030d 	add.w	r3, r4, #13
 8009aa0:	4d1e      	ldr	r5, [pc, #120]	; (8009b1c <OscServer::Run()+0x288>)
 8009aa2:	9302      	str	r3, [sp, #8]
 8009aa4:	4b1e      	ldr	r3, [pc, #120]	; (8009b20 <OscServer::Run()+0x28c>)
 8009aa6:	9a07      	ldr	r2, [sp, #28]
 8009aa8:	6861      	ldr	r1, [r4, #4]
 8009aaa:	9300      	str	r3, [sp, #0]
 8009aac:	9501      	str	r5, [sp, #4]
 8009aae:	8863      	ldrh	r3, [r4, #2]
 8009ab0:	a805      	add	r0, sp, #20
 8009ab2:	f000 fc17 	bl	800a2e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009ab6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009ab8:	9a07      	ldr	r2, [sp, #28]
 8009aba:	e9cd 5301 	strd	r5, r3, [sp, #4]
 8009abe:	4b19      	ldr	r3, [pc, #100]	; (8009b24 <OscServer::Run()+0x290>)
 8009ac0:	6861      	ldr	r1, [r4, #4]
 8009ac2:	9300      	str	r3, [sp, #0]
 8009ac4:	a806      	add	r0, sp, #24
 8009ac6:	8863      	ldrh	r3, [r4, #2]
 8009ac8:	f000 fc0c 	bl	800a2e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009acc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009ace:	9a07      	ldr	r2, [sp, #28]
 8009ad0:	e9cd 5301 	strd	r5, r3, [sp, #4]
 8009ad4:	4b14      	ldr	r3, [pc, #80]	; (8009b28 <OscServer::Run()+0x294>)
 8009ad6:	6861      	ldr	r1, [r4, #4]
 8009ad8:	9300      	str	r3, [sp, #0]
 8009ada:	a80f      	add	r0, sp, #60	; 0x3c
 8009adc:	8863      	ldrh	r3, [r4, #2]
 8009ade:	f000 fc01 	bl	800a2e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009ae2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009ae4:	2800      	cmp	r0, #0
 8009ae6:	f43f aef8 	beq.w	80098da <OscServer::Run()+0x46>
 8009aea:	6803      	ldr	r3, [r0, #0]
 8009aec:	9a07      	ldr	r2, [sp, #28]
 8009aee:	691d      	ldr	r5, [r3, #16]
 8009af0:	6861      	ldr	r1, [r4, #4]
 8009af2:	8863      	ldrh	r3, [r4, #2]
 8009af4:	47a8      	blx	r5
 8009af6:	e6f0      	b.n	80098da <OscServer::Run()+0x46>
 8009af8:	2000016c 	andcs	r0, r0, ip, ror #2
 8009afc:	20000270 	andcs	r0, r0, r0, ror r2
 8009b00:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009b04:	437f0000 	cmnmi	pc, #0
 8009b08:	20000170 	andcs	r0, r0, r0, ror r1
 8009b0c:	08013414 	stmdaeq	r1, {r2, r4, sl, ip, sp}
 8009b10:	0801341a 	stmdaeq	r1, {r1, r3, r4, sl, ip, sp}
 8009b14:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009b18:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b1c:	0801340c 	stmdaeq	r1, {r2, r3, sl, ip, sp}
 8009b20:	08013420 	stmdaeq	r1, {r5, sl, ip, sp}
 8009b24:	08013429 	stmdaeq	r1, {r0, r3, r5, sl, ip, sp}
 8009b28:	08013435 	stmdaeq	r1, {r0, r2, r4, r5, sl, ip, sp}

08009b2c <OscServer::Print()>:
 8009b2c:	b510      	push	{r4, lr}
 8009b2e:	4604      	mov	r4, r0
 8009b30:	480f      	ldr	r0, [pc, #60]	; (8009b70 <OscServer::Print()+0x44>)
 8009b32:	f7ff fd3d 	bl	80095b0 <printf>
 8009b36:	8821      	ldrh	r1, [r4, #0]
 8009b38:	480e      	ldr	r0, [pc, #56]	; (8009b74 <OscServer::Print()+0x48>)
 8009b3a:	f7ff fd39 	bl	80095b0 <printf>
 8009b3e:	8861      	ldrh	r1, [r4, #2]
 8009b40:	480d      	ldr	r0, [pc, #52]	; (8009b78 <OscServer::Print()+0x4c>)
 8009b42:	f7ff fd35 	bl	80095b0 <printf>
 8009b46:	4a0d      	ldr	r2, [pc, #52]	; (8009b7c <OscServer::Print()+0x50>)
 8009b48:	490d      	ldr	r1, [pc, #52]	; (8009b80 <OscServer::Print()+0x54>)
 8009b4a:	480e      	ldr	r0, [pc, #56]	; (8009b84 <OscServer::Print()+0x58>)
 8009b4c:	f7ff fd30 	bl	80095b0 <printf>
 8009b50:	490d      	ldr	r1, [pc, #52]	; (8009b88 <OscServer::Print()+0x5c>)
 8009b52:	480e      	ldr	r0, [pc, #56]	; (8009b8c <OscServer::Print()+0x60>)
 8009b54:	f7ff fd2c 	bl	80095b0 <printf>
 8009b58:	7aa1      	ldrb	r1, [r4, #10]
 8009b5a:	4a0d      	ldr	r2, [pc, #52]	; (8009b90 <OscServer::Print()+0x64>)
 8009b5c:	4b0d      	ldr	r3, [pc, #52]	; (8009b94 <OscServer::Print()+0x68>)
 8009b5e:	480e      	ldr	r0, [pc, #56]	; (8009b98 <OscServer::Print()+0x6c>)
 8009b60:	2900      	cmp	r1, #0
 8009b62:	bf14      	ite	ne
 8009b64:	4611      	movne	r1, r2
 8009b66:	4619      	moveq	r1, r3
 8009b68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b6c:	f7ff bd20 	b.w	80095b0 <printf>
 8009b70:	08013446 	stmdaeq	r1, {r1, r2, r6, sl, ip, sp}
 8009b74:	08013452 	stmdaeq	r1, {r1, r4, r6, sl, ip, sp}
 8009b78:	0801346e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sl, ip, sp}
 8009b7c:	20000170 	andcs	r0, r0, r0, ror r1
 8009b80:	20000270 	andcs	r0, r0, r0, ror r2
 8009b84:	0801348a 	stmdaeq	r1, {r1, r3, r7, sl, ip, sp}
 8009b88:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009b8c:	080134ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, ip, sp}
 8009b90:	0801343f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, sl, ip, sp}
 8009b94:	08013443 	stmdaeq	r1, {r0, r1, r6, sl, ip, sp}
 8009b98:	080134ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, ip, sp}

08009b9c <strncpy.constprop.0.isra.0>:
 8009b9c:	227f      	movs	r2, #127	; 0x7f
 8009b9e:	1e4b      	subs	r3, r1, #1
 8009ba0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009ba4:	b909      	cbnz	r1, 8009baa <strncpy.constprop.0.isra.0+0xe>
 8009ba6:	f007 bad7 	b.w	8011158 <memset>
 8009baa:	3a01      	subs	r2, #1
 8009bac:	f800 1b01 	strb.w	r1, [r0], #1
 8009bb0:	d1f6      	bne.n	8009ba0 <strncpy.constprop.0.isra.0+0x4>
 8009bb2:	4770      	bx	lr

08009bb4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8009bb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009bb6:	88c5      	ldrh	r5, [r0, #6]
 8009bb8:	8886      	ldrh	r6, [r0, #4]
 8009bba:	42b5      	cmp	r5, r6
 8009bbc:	d216      	bcs.n	8009bec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8009bbe:	4604      	mov	r4, r0
 8009bc0:	6800      	ldr	r0, [r0, #0]
 8009bc2:	4428      	add	r0, r5
 8009bc4:	1b75      	subs	r5, r6, r5
 8009bc6:	7a26      	ldrb	r6, [r4, #8]
 8009bc8:	b923      	cbnz	r3, 8009bd4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009bca:	b926      	cbnz	r6, 8009bd6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009bcc:	9200      	str	r2, [sp, #0]
 8009bce:	460b      	mov	r3, r1
 8009bd0:	4a09      	ldr	r2, [pc, #36]	; (8009bf8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8009bd2:	e003      	b.n	8009bdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009bd4:	b166      	cbz	r6, 8009bf0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8009bd6:	460b      	mov	r3, r1
 8009bd8:	9200      	str	r2, [sp, #0]
 8009bda:	4a08      	ldr	r2, [pc, #32]	; (8009bfc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009bdc:	4629      	mov	r1, r5
 8009bde:	f7ff fcf7 	bl	80095d0 <snprintf>
 8009be2:	4285      	cmp	r5, r0
 8009be4:	bfa2      	ittt	ge
 8009be6:	88e3      	ldrhge	r3, [r4, #6]
 8009be8:	181b      	addge	r3, r3, r0
 8009bea:	80e3      	strhge	r3, [r4, #6]
 8009bec:	b002      	add	sp, #8
 8009bee:	bd70      	pop	{r4, r5, r6, pc}
 8009bf0:	9200      	str	r2, [sp, #0]
 8009bf2:	460b      	mov	r3, r1
 8009bf4:	4a02      	ldr	r2, [pc, #8]	; (8009c00 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009bf6:	e7f1      	b.n	8009bdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009bf8:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 8009bfc:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 8009c00:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

08009c04 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 8009c04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c06:	88c5      	ldrh	r5, [r0, #6]
 8009c08:	8886      	ldrh	r6, [r0, #4]
 8009c0a:	42b5      	cmp	r5, r6
 8009c0c:	d216      	bcs.n	8009c3c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 8009c0e:	4604      	mov	r4, r0
 8009c10:	6800      	ldr	r0, [r0, #0]
 8009c12:	4428      	add	r0, r5
 8009c14:	1b75      	subs	r5, r6, r5
 8009c16:	7a26      	ldrb	r6, [r4, #8]
 8009c18:	b923      	cbnz	r3, 8009c24 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 8009c1a:	b926      	cbnz	r6, 8009c26 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 8009c1c:	9200      	str	r2, [sp, #0]
 8009c1e:	460b      	mov	r3, r1
 8009c20:	4a09      	ldr	r2, [pc, #36]	; (8009c48 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 8009c22:	e003      	b.n	8009c2c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 8009c24:	b166      	cbz	r6, 8009c40 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 8009c26:	460b      	mov	r3, r1
 8009c28:	9200      	str	r2, [sp, #0]
 8009c2a:	4a08      	ldr	r2, [pc, #32]	; (8009c4c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009c2c:	4629      	mov	r1, r5
 8009c2e:	f7ff fccf 	bl	80095d0 <snprintf>
 8009c32:	4285      	cmp	r5, r0
 8009c34:	bfa2      	ittt	ge
 8009c36:	88e3      	ldrhge	r3, [r4, #6]
 8009c38:	181b      	addge	r3, r3, r0
 8009c3a:	80e3      	strhge	r3, [r4, #6]
 8009c3c:	b002      	add	sp, #8
 8009c3e:	bd70      	pop	{r4, r5, r6, pc}
 8009c40:	9200      	str	r2, [sp, #0]
 8009c42:	460b      	mov	r3, r1
 8009c44:	4a02      	ldr	r2, [pc, #8]	; (8009c50 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 8009c46:	e7f1      	b.n	8009c2c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 8009c48:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 8009c4c:	08013539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, ip, sp}
 8009c50:	08013545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp}

08009c54 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 8009c54:	b510      	push	{r4, lr}
 8009c56:	4604      	mov	r4, r0
 8009c58:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009c5c:	f840 1b04 	str.w	r1, [r0], #4
 8009c60:	2100      	movs	r1, #0
 8009c62:	f007 fa79 	bl	8011158 <memset>
 8009c66:	4b02      	ldr	r3, [pc, #8]	; (8009c70 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 8009c68:	4620      	mov	r0, r4
 8009c6a:	60a3      	str	r3, [r4, #8]
 8009c6c:	bd10      	pop	{r4, pc}
 8009c6e:	bf00      	nop
 8009c70:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

08009c74 <OSCServerParams::Load()>:
 8009c74:	b508      	push	{r3, lr}
 8009c76:	2300      	movs	r3, #0
 8009c78:	4601      	mov	r1, r0
 8009c7a:	6043      	str	r3, [r0, #4]
 8009c7c:	6800      	ldr	r0, [r0, #0]
 8009c7e:	b120      	cbz	r0, 8009c8a <OSCServerParams::Load()+0x16>
 8009c80:	6803      	ldr	r3, [r0, #0]
 8009c82:	3104      	adds	r1, #4
 8009c84:	68db      	ldr	r3, [r3, #12]
 8009c86:	4798      	blx	r3
 8009c88:	2001      	movs	r0, #1
 8009c8a:	bd08      	pop	{r3, pc}

08009c8c <OSCServerParams::Load(char const*, unsigned int)>:
 8009c8c:	6803      	ldr	r3, [r0, #0]
 8009c8e:	b1d3      	cbz	r3, 8009cc6 <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 8009c90:	2300      	movs	r3, #0
 8009c92:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c94:	460d      	mov	r5, r1
 8009c96:	4616      	mov	r6, r2
 8009c98:	4604      	mov	r4, r0
 8009c9a:	6043      	str	r3, [r0, #4]
 8009c9c:	4602      	mov	r2, r0
 8009c9e:	490a      	ldr	r1, [pc, #40]	; (8009cc8 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 8009ca0:	4668      	mov	r0, sp
 8009ca2:	f006 fbe9 	bl	8010478 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009ca6:	4632      	mov	r2, r6
 8009ca8:	4629      	mov	r1, r5
 8009caa:	4668      	mov	r0, sp
 8009cac:	f006 fbe8 	bl	8010480 <ReadConfigFile::Read(char const*, unsigned int)>
 8009cb0:	4621      	mov	r1, r4
 8009cb2:	f851 0b04 	ldr.w	r0, [r1], #4
 8009cb6:	6803      	ldr	r3, [r0, #0]
 8009cb8:	689b      	ldr	r3, [r3, #8]
 8009cba:	4798      	blx	r3
 8009cbc:	4668      	mov	r0, sp
 8009cbe:	f006 fbde 	bl	801047e <ReadConfigFile::~ReadConfigFile()>
 8009cc2:	b002      	add	sp, #8
 8009cc4:	bd70      	pop	{r4, r5, r6, pc}
 8009cc6:	4770      	bx	lr
 8009cc8:	08009dc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, ip, pc}

08009ccc <OSCServerParams::callbackFunction(char const*)>:
 8009ccc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009cce:	460d      	mov	r5, r1
 8009cd0:	4604      	mov	r4, r0
 8009cd2:	4937      	ldr	r1, [pc, #220]	; (8009db0 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 8009cd4:	4628      	mov	r0, r5
 8009cd6:	f10d 0202 	add.w	r2, sp, #2
 8009cda:	f006 fcc1 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009cde:	b980      	cbnz	r0, 8009d02 <OSCServerParams::callbackFunction(char const*)+0x36>
 8009ce0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8009ce4:	6863      	ldr	r3, [r4, #4]
 8009ce6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009cea:	bf33      	iteet	cc
 8009cec:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 8009cf0:	8122      	strhcs	r2, [r4, #8]
 8009cf2:	f043 0301 	orrcs.w	r3, r3, #1
 8009cf6:	8122      	strhcc	r2, [r4, #8]
 8009cf8:	bf38      	it	cc
 8009cfa:	f023 0301 	biccc.w	r3, r3, #1
 8009cfe:	6063      	str	r3, [r4, #4]
 8009d00:	e028      	b.n	8009d54 <OSCServerParams::callbackFunction(char const*)+0x88>
 8009d02:	4628      	mov	r0, r5
 8009d04:	492b      	ldr	r1, [pc, #172]	; (8009db4 <OSCServerParams::callbackFunction(char const*)+0xe8>)
 8009d06:	f10d 0202 	add.w	r2, sp, #2
 8009d0a:	f006 fca9 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009d0e:	b978      	cbnz	r0, 8009d30 <OSCServerParams::callbackFunction(char const*)+0x64>
 8009d10:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8009d14:	6863      	ldr	r3, [r4, #4]
 8009d16:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009d1a:	bf33      	iteet	cc
 8009d1c:	f242 3228 	movwcc	r2, #9000	; 0x2328
 8009d20:	8162      	strhcs	r2, [r4, #10]
 8009d22:	f043 0302 	orrcs.w	r3, r3, #2
 8009d26:	8162      	strhcc	r2, [r4, #10]
 8009d28:	bf38      	it	cc
 8009d2a:	f023 0302 	biccc.w	r3, r3, #2
 8009d2e:	e7e6      	b.n	8009cfe <OSCServerParams::callbackFunction(char const*)+0x32>
 8009d30:	4628      	mov	r0, r5
 8009d32:	4921      	ldr	r1, [pc, #132]	; (8009db8 <OSCServerParams::callbackFunction(char const*)+0xec>)
 8009d34:	f10d 0201 	add.w	r2, sp, #1
 8009d38:	f006 fcd9 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d3c:	b978      	cbnz	r0, 8009d5e <OSCServerParams::callbackFunction(char const*)+0x92>
 8009d3e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8009d42:	6863      	ldr	r3, [r4, #4]
 8009d44:	b142      	cbz	r2, 8009d58 <OSCServerParams::callbackFunction(char const*)+0x8c>
 8009d46:	f043 0308 	orr.w	r3, r3, #8
 8009d4a:	3a00      	subs	r2, #0
 8009d4c:	bf18      	it	ne
 8009d4e:	2201      	movne	r2, #1
 8009d50:	6063      	str	r3, [r4, #4]
 8009d52:	7362      	strb	r2, [r4, #13]
 8009d54:	b002      	add	sp, #8
 8009d56:	bd70      	pop	{r4, r5, r6, pc}
 8009d58:	f023 0308 	bic.w	r3, r3, #8
 8009d5c:	e7f5      	b.n	8009d4a <OSCServerParams::callbackFunction(char const*)+0x7e>
 8009d5e:	267f      	movs	r6, #127	; 0x7f
 8009d60:	4628      	mov	r0, r5
 8009d62:	4916      	ldr	r1, [pc, #88]	; (8009dbc <OSCServerParams::callbackFunction(char const*)+0xf0>)
 8009d64:	ab01      	add	r3, sp, #4
 8009d66:	f104 020e 	add.w	r2, r4, #14
 8009d6a:	9601      	str	r6, [sp, #4]
 8009d6c:	f006 fbbc 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009d70:	b918      	cbnz	r0, 8009d7a <OSCServerParams::callbackFunction(char const*)+0xae>
 8009d72:	6863      	ldr	r3, [r4, #4]
 8009d74:	f043 0304 	orr.w	r3, r3, #4
 8009d78:	e7c1      	b.n	8009cfe <OSCServerParams::callbackFunction(char const*)+0x32>
 8009d7a:	4628      	mov	r0, r5
 8009d7c:	4910      	ldr	r1, [pc, #64]	; (8009dc0 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 8009d7e:	ab01      	add	r3, sp, #4
 8009d80:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 8009d84:	9601      	str	r6, [sp, #4]
 8009d86:	f006 fbaf 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009d8a:	b918      	cbnz	r0, 8009d94 <OSCServerParams::callbackFunction(char const*)+0xc8>
 8009d8c:	6863      	ldr	r3, [r4, #4]
 8009d8e:	f043 0320 	orr.w	r3, r3, #32
 8009d92:	e7b4      	b.n	8009cfe <OSCServerParams::callbackFunction(char const*)+0x32>
 8009d94:	4628      	mov	r0, r5
 8009d96:	490a      	ldr	r1, [pc, #40]	; (8009dc0 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 8009d98:	ab01      	add	r3, sp, #4
 8009d9a:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 8009d9e:	9601      	str	r6, [sp, #4]
 8009da0:	f006 fba2 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009da4:	2800      	cmp	r0, #0
 8009da6:	d1d5      	bne.n	8009d54 <OSCServerParams::callbackFunction(char const*)+0x88>
 8009da8:	6863      	ldr	r3, [r4, #4]
 8009daa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009dae:	e7a6      	b.n	8009cfe <OSCServerParams::callbackFunction(char const*)+0x32>
 8009db0:	08013586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, sp}
 8009db4:	08013594 	stmdaeq	r1, {r2, r4, r7, r8, sl, ip, sp}
 8009db8:	0801354c 	stmdaeq	r1, {r2, r3, r6, r8, sl, ip, sp}
 8009dbc:	0801356f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp}
 8009dc0:	0801357c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, sp}

08009dc4 <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 8009dc4:	f7ff bf82 	b.w	8009ccc <OSCServerParams::callbackFunction(char const*)>

08009dc8 <OSCServerParams::Set(OscServer*)>:
 8009dc8:	b538      	push	{r3, r4, r5, lr}
 8009dca:	460d      	mov	r5, r1
 8009dcc:	6843      	ldr	r3, [r0, #4]
 8009dce:	4604      	mov	r4, r0
 8009dd0:	07d9      	lsls	r1, r3, #31
 8009dd2:	bf44      	itt	mi
 8009dd4:	8902      	ldrhmi	r2, [r0, #8]
 8009dd6:	802a      	strhmi	r2, [r5, #0]
 8009dd8:	079a      	lsls	r2, r3, #30
 8009dda:	bf44      	itt	mi
 8009ddc:	8942      	ldrhmi	r2, [r0, #10]
 8009dde:	806a      	strhmi	r2, [r5, #2]
 8009de0:	0758      	lsls	r0, r3, #29
 8009de2:	d504      	bpl.n	8009dee <OSCServerParams::Set(OscServer*)+0x26>
 8009de4:	4628      	mov	r0, r5
 8009de6:	f104 010e 	add.w	r1, r4, #14
 8009dea:	f7ff fcc7 	bl	800977c <OscServer::SetPath(char const*)>
 8009dee:	6863      	ldr	r3, [r4, #4]
 8009df0:	0699      	lsls	r1, r3, #26
 8009df2:	d504      	bpl.n	8009dfe <OSCServerParams::Set(OscServer*)+0x36>
 8009df4:	4628      	mov	r0, r5
 8009df6:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 8009dfa:	f7ff fce5 	bl	80097c8 <OscServer::SetPathInfo(char const*)>
 8009dfe:	6863      	ldr	r3, [r4, #4]
 8009e00:	065a      	lsls	r2, r3, #25
 8009e02:	d504      	bpl.n	8009e0e <OSCServerParams::Set(OscServer*)+0x46>
 8009e04:	4628      	mov	r0, r5
 8009e06:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 8009e0a:	f7ff fcf3 	bl	80097f4 <OscServer::SetPathBlackOut(char const*)>
 8009e0e:	6863      	ldr	r3, [r4, #4]
 8009e10:	071b      	lsls	r3, r3, #28
 8009e12:	bf44      	itt	mi
 8009e14:	7b63      	ldrbmi	r3, [r4, #13]
 8009e16:	72ab      	strbmi	r3, [r5, #10]
 8009e18:	bd38      	pop	{r3, r4, r5, pc}
	...

08009e1c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 8009e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e1e:	4604      	mov	r4, r0
 8009e20:	4615      	mov	r5, r2
 8009e22:	461e      	mov	r6, r3
 8009e24:	b087      	sub	sp, #28
 8009e26:	3004      	adds	r0, #4
 8009e28:	2900      	cmp	r1, #0
 8009e2a:	d060      	beq.n	8009eee <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 8009e2c:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009e30:	f007 f97b 	bl	801112a <memmove>
 8009e34:	4633      	mov	r3, r6
 8009e36:	462a      	mov	r2, r5
 8009e38:	4946      	ldr	r1, [pc, #280]	; (8009f54 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 8009e3a:	a803      	add	r0, sp, #12
 8009e3c:	f006 fa7c 	bl	8010338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009e40:	6863      	ldr	r3, [r4, #4]
 8009e42:	f104 070e 	add.w	r7, r4, #14
 8009e46:	075e      	lsls	r6, r3, #29
 8009e48:	d403      	bmi.n	8009e52 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 8009e4a:	4638      	mov	r0, r7
 8009e4c:	4942      	ldr	r1, [pc, #264]	; (8009f58 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 8009e4e:	f7ff fea5 	bl	8009b9c <strncpy.constprop.0.isra.0>
 8009e52:	6863      	ldr	r3, [r4, #4]
 8009e54:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 8009e58:	069d      	lsls	r5, r3, #26
 8009e5a:	d403      	bmi.n	8009e64 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 8009e5c:	4630      	mov	r0, r6
 8009e5e:	493f      	ldr	r1, [pc, #252]	; (8009f5c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 8009e60:	f7ff fe9c 	bl	8009b9c <strncpy.constprop.0.isra.0>
 8009e64:	6863      	ldr	r3, [r4, #4]
 8009e66:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 8009e6a:	0658      	lsls	r0, r3, #25
 8009e6c:	d403      	bmi.n	8009e76 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 8009e6e:	4628      	mov	r0, r5
 8009e70:	493b      	ldr	r1, [pc, #236]	; (8009f60 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 8009e72:	f7ff fe93 	bl	8009b9c <strncpy.constprop.0.isra.0>
 8009e76:	6863      	ldr	r3, [r4, #4]
 8009e78:	8922      	ldrh	r2, [r4, #8]
 8009e7a:	493a      	ldr	r1, [pc, #232]	; (8009f64 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 8009e7c:	f003 0301 	and.w	r3, r3, #1
 8009e80:	a803      	add	r0, sp, #12
 8009e82:	f7ff fe97 	bl	8009bb4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009e86:	6863      	ldr	r3, [r4, #4]
 8009e88:	8962      	ldrh	r2, [r4, #10]
 8009e8a:	4937      	ldr	r1, [pc, #220]	; (8009f68 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 8009e8c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8009e90:	a803      	add	r0, sp, #12
 8009e92:	f7ff fe8f 	bl	8009bb4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009e96:	6863      	ldr	r3, [r4, #4]
 8009e98:	463a      	mov	r2, r7
 8009e9a:	4934      	ldr	r1, [pc, #208]	; (8009f6c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 8009e9c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8009ea0:	a803      	add	r0, sp, #12
 8009ea2:	f7ff feaf 	bl	8009c04 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8009ea6:	6863      	ldr	r3, [r4, #4]
 8009ea8:	4632      	mov	r2, r6
 8009eaa:	4931      	ldr	r1, [pc, #196]	; (8009f70 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 8009eac:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8009eb0:	a803      	add	r0, sp, #12
 8009eb2:	f7ff fea7 	bl	8009c04 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8009eb6:	6863      	ldr	r3, [r4, #4]
 8009eb8:	462a      	mov	r2, r5
 8009eba:	492e      	ldr	r1, [pc, #184]	; (8009f74 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 8009ebc:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8009ec0:	a803      	add	r0, sp, #12
 8009ec2:	f7ff fe9f 	bl	8009c04 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8009ec6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009eca:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009ece:	42a9      	cmp	r1, r5
 8009ed0:	d222      	bcs.n	8009f18 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8009ed2:	9803      	ldr	r0, [sp, #12]
 8009ed4:	1a6d      	subs	r5, r5, r1
 8009ed6:	4408      	add	r0, r1
 8009ed8:	6861      	ldr	r1, [r4, #4]
 8009eda:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009ede:	0709      	lsls	r1, r1, #28
 8009ee0:	7b63      	ldrb	r3, [r4, #13]
 8009ee2:	d40b      	bmi.n	8009efc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 8009ee4:	b95a      	cbnz	r2, 8009efe <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 8009ee6:	9300      	str	r3, [sp, #0]
 8009ee8:	4a23      	ldr	r2, [pc, #140]	; (8009f78 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 8009eea:	4b24      	ldr	r3, [pc, #144]	; (8009f7c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009eec:	e00a      	b.n	8009f04 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8009eee:	6823      	ldr	r3, [r4, #0]
 8009ef0:	4601      	mov	r1, r0
 8009ef2:	681a      	ldr	r2, [r3, #0]
 8009ef4:	4618      	mov	r0, r3
 8009ef6:	68d2      	ldr	r2, [r2, #12]
 8009ef8:	4790      	blx	r2
 8009efa:	e79b      	b.n	8009e34 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 8009efc:	b32a      	cbz	r2, 8009f4a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x12e>
 8009efe:	9300      	str	r3, [sp, #0]
 8009f00:	4a1f      	ldr	r2, [pc, #124]	; (8009f80 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 8009f02:	4b1e      	ldr	r3, [pc, #120]	; (8009f7c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009f04:	4629      	mov	r1, r5
 8009f06:	f7ff fb63 	bl	80095d0 <snprintf>
 8009f0a:	4285      	cmp	r5, r0
 8009f0c:	bfa2      	ittt	ge
 8009f0e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009f12:	18c0      	addge	r0, r0, r3
 8009f14:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009f18:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009f1c:	b17b      	cbz	r3, 8009f3e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x122>
 8009f1e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009f22:	9b03      	ldr	r3, [sp, #12]
 8009f24:	4413      	add	r3, r2
 8009f26:	227d      	movs	r2, #125	; 0x7d
 8009f28:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009f2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009f30:	9903      	ldr	r1, [sp, #12]
 8009f32:	54ca      	strb	r2, [r1, r3]
 8009f34:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009f38:	3301      	adds	r3, #1
 8009f3a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009f3e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009f42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009f44:	601a      	str	r2, [r3, #0]
 8009f46:	b007      	add	sp, #28
 8009f48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f4a:	9300      	str	r3, [sp, #0]
 8009f4c:	4a0d      	ldr	r2, [pc, #52]	; (8009f84 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 8009f4e:	4b0b      	ldr	r3, [pc, #44]	; (8009f7c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009f50:	e7d8      	b.n	8009f04 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8009f52:	bf00      	nop
 8009f54:	08013574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, ip, sp}
 8009f58:	20000270 	andcs	r0, r0, r0, ror r2
 8009f5c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009f60:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009f64:	08013586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, sp}
 8009f68:	08013594 	stmdaeq	r1, {r2, r4, r7, r8, sl, ip, sp}
 8009f6c:	0801356f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp}
 8009f70:	0801357c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, sp}
 8009f74:	08013561 	stmdaeq	r1, {r0, r5, r6, r8, sl, ip, sp}
 8009f78:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 8009f7c:	0801354c 	stmdaeq	r1, {r2, r3, r6, r8, sl, ip, sp}
 8009f80:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 8009f84:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

08009f88 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 8009f88:	b513      	push	{r0, r1, r4, lr}
 8009f8a:	6804      	ldr	r4, [r0, #0]
 8009f8c:	b914      	cbnz	r4, 8009f94 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009f8e:	601c      	str	r4, [r3, #0]
 8009f90:	b002      	add	sp, #8
 8009f92:	bd10      	pop	{r4, pc}
 8009f94:	9300      	str	r3, [sp, #0]
 8009f96:	4613      	mov	r3, r2
 8009f98:	460a      	mov	r2, r1
 8009f9a:	2100      	movs	r1, #0
 8009f9c:	f7ff ff3e 	bl	8009e1c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 8009fa0:	e7f6      	b.n	8009f90 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009fa2 <OSCServerParams::Dump()>:
 8009fa2:	4770      	bx	lr

08009fa4 <lo_pattern_match>:
 8009fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009fa6:	4605      	mov	r5, r0
 8009fa8:	460b      	mov	r3, r1
 8009faa:	7819      	ldrb	r1, [r3, #0]
 8009fac:	782a      	ldrb	r2, [r5, #0]
 8009fae:	b919      	cbnz	r1, 8009fb8 <lo_pattern_match+0x14>
 8009fb0:	fab2 f082 	clz	r0, r2
 8009fb4:	0940      	lsrs	r0, r0, #5
 8009fb6:	e0a9      	b.n	800a10c <lo_pattern_match+0x168>
 8009fb8:	b90a      	cbnz	r2, 8009fbe <lo_pattern_match+0x1a>
 8009fba:	292a      	cmp	r1, #42	; 0x2a
 8009fbc:	d132      	bne.n	800a024 <lo_pattern_match+0x80>
 8009fbe:	295b      	cmp	r1, #91	; 0x5b
 8009fc0:	f103 0401 	add.w	r4, r3, #1
 8009fc4:	d03c      	beq.n	800a040 <lo_pattern_match+0x9c>
 8009fc6:	d806      	bhi.n	8009fd6 <lo_pattern_match+0x32>
 8009fc8:	292a      	cmp	r1, #42	; 0x2a
 8009fca:	d012      	beq.n	8009ff2 <lo_pattern_match+0x4e>
 8009fcc:	293f      	cmp	r1, #63	; 0x3f
 8009fce:	d032      	beq.n	800a036 <lo_pattern_match+0x92>
 8009fd0:	4291      	cmp	r1, r2
 8009fd2:	d032      	beq.n	800a03a <lo_pattern_match+0x96>
 8009fd4:	e026      	b.n	800a024 <lo_pattern_match+0x80>
 8009fd6:	297b      	cmp	r1, #123	; 0x7b
 8009fd8:	d1fa      	bne.n	8009fd0 <lo_pattern_match+0x2c>
 8009fda:	7820      	ldrb	r0, [r4, #0]
 8009fdc:	4626      	mov	r6, r4
 8009fde:	1c67      	adds	r7, r4, #1
 8009fe0:	2800      	cmp	r0, #0
 8009fe2:	f000 8093 	beq.w	800a10c <lo_pattern_match+0x168>
 8009fe6:	287d      	cmp	r0, #125	; 0x7d
 8009fe8:	d16b      	bne.n	800a0c2 <lo_pattern_match+0x11e>
 8009fea:	1c9c      	adds	r4, r3, #2
 8009fec:	4628      	mov	r0, r5
 8009fee:	785b      	ldrb	r3, [r3, #1]
 8009ff0:	e077      	b.n	800a0e2 <lo_pattern_match+0x13e>
 8009ff2:	7823      	ldrb	r3, [r4, #0]
 8009ff4:	4626      	mov	r6, r4
 8009ff6:	2b2a      	cmp	r3, #42	; 0x2a
 8009ff8:	f104 0401 	add.w	r4, r4, #1
 8009ffc:	d0f9      	beq.n	8009ff2 <lo_pattern_match+0x4e>
 8009ffe:	b1c3      	cbz	r3, 800a032 <lo_pattern_match+0x8e>
 800a000:	2b3f      	cmp	r3, #63	; 0x3f
 800a002:	d00b      	beq.n	800a01c <lo_pattern_match+0x78>
 800a004:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 800a008:	2a5b      	cmp	r2, #91	; 0x5b
 800a00a:	d007      	beq.n	800a01c <lo_pattern_match+0x78>
 800a00c:	462a      	mov	r2, r5
 800a00e:	4615      	mov	r5, r2
 800a010:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a014:	2800      	cmp	r0, #0
 800a016:	d079      	beq.n	800a10c <lo_pattern_match+0x168>
 800a018:	4283      	cmp	r3, r0
 800a01a:	d1f8      	bne.n	800a00e <lo_pattern_match+0x6a>
 800a01c:	4628      	mov	r0, r5
 800a01e:	7803      	ldrb	r3, [r0, #0]
 800a020:	3501      	adds	r5, #1
 800a022:	b90b      	cbnz	r3, 800a028 <lo_pattern_match+0x84>
 800a024:	2000      	movs	r0, #0
 800a026:	e071      	b.n	800a10c <lo_pattern_match+0x168>
 800a028:	4631      	mov	r1, r6
 800a02a:	f7ff ffbb 	bl	8009fa4 <lo_pattern_match>
 800a02e:	2800      	cmp	r0, #0
 800a030:	d0f4      	beq.n	800a01c <lo_pattern_match+0x78>
 800a032:	2001      	movs	r0, #1
 800a034:	e06a      	b.n	800a10c <lo_pattern_match+0x168>
 800a036:	2a00      	cmp	r2, #0
 800a038:	d0f4      	beq.n	800a024 <lo_pattern_match+0x80>
 800a03a:	4623      	mov	r3, r4
 800a03c:	3501      	adds	r5, #1
 800a03e:	e7b4      	b.n	8009faa <lo_pattern_match+0x6>
 800a040:	7859      	ldrb	r1, [r3, #1]
 800a042:	2921      	cmp	r1, #33	; 0x21
 800a044:	bf06      	itte	eq
 800a046:	1c9c      	addeq	r4, r3, #2
 800a048:	2701      	moveq	r7, #1
 800a04a:	2700      	movne	r7, #0
 800a04c:	4621      	mov	r1, r4
 800a04e:	1c8e      	adds	r6, r1, #2
 800a050:	f816 3c02 	ldrb.w	r3, [r6, #-2]
 800a054:	4634      	mov	r4, r6
 800a056:	1e71      	subs	r1, r6, #1
 800a058:	b913      	cbnz	r3, 800a060 <lo_pattern_match+0xbc>
 800a05a:	460c      	mov	r4, r1
 800a05c:	4618      	mov	r0, r3
 800a05e:	e018      	b.n	800a092 <lo_pattern_match+0xee>
 800a060:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800a064:	2800      	cmp	r0, #0
 800a066:	d051      	beq.n	800a10c <lo_pattern_match+0x168>
 800a068:	282d      	cmp	r0, #45	; 0x2d
 800a06a:	d11b      	bne.n	800a0a4 <lo_pattern_match+0x100>
 800a06c:	7820      	ldrb	r0, [r4, #0]
 800a06e:	2800      	cmp	r0, #0
 800a070:	d04c      	beq.n	800a10c <lo_pattern_match+0x168>
 800a072:	285d      	cmp	r0, #93	; 0x5d
 800a074:	d009      	beq.n	800a08a <lo_pattern_match+0xe6>
 800a076:	429a      	cmp	r2, r3
 800a078:	d005      	beq.n	800a086 <lo_pattern_match+0xe2>
 800a07a:	4290      	cmp	r0, r2
 800a07c:	d003      	beq.n	800a086 <lo_pattern_match+0xe2>
 800a07e:	429a      	cmp	r2, r3
 800a080:	d91d      	bls.n	800a0be <lo_pattern_match+0x11a>
 800a082:	4290      	cmp	r0, r2
 800a084:	d91b      	bls.n	800a0be <lo_pattern_match+0x11a>
 800a086:	2001      	movs	r0, #1
 800a088:	e003      	b.n	800a092 <lo_pattern_match+0xee>
 800a08a:	429a      	cmp	r2, r3
 800a08c:	bf34      	ite	cc
 800a08e:	2000      	movcc	r0, #0
 800a090:	2001      	movcs	r0, #1
 800a092:	4287      	cmp	r7, r0
 800a094:	d0c6      	beq.n	800a024 <lo_pattern_match+0x80>
 800a096:	f814 0b01 	ldrb.w	r0, [r4], #1
 800a09a:	2800      	cmp	r0, #0
 800a09c:	d036      	beq.n	800a10c <lo_pattern_match+0x168>
 800a09e:	285d      	cmp	r0, #93	; 0x5d
 800a0a0:	d1f9      	bne.n	800a096 <lo_pattern_match+0xf2>
 800a0a2:	e7ca      	b.n	800a03a <lo_pattern_match+0x96>
 800a0a4:	285d      	cmp	r0, #93	; 0x5d
 800a0a6:	d104      	bne.n	800a0b2 <lo_pattern_match+0x10e>
 800a0a8:	1ad3      	subs	r3, r2, r3
 800a0aa:	4258      	negs	r0, r3
 800a0ac:	460c      	mov	r4, r1
 800a0ae:	4158      	adcs	r0, r3
 800a0b0:	e7ef      	b.n	800a092 <lo_pattern_match+0xee>
 800a0b2:	4290      	cmp	r0, r2
 800a0b4:	d001      	beq.n	800a0ba <lo_pattern_match+0x116>
 800a0b6:	429a      	cmp	r2, r3
 800a0b8:	d1c9      	bne.n	800a04e <lo_pattern_match+0xaa>
 800a0ba:	460c      	mov	r4, r1
 800a0bc:	e7e3      	b.n	800a086 <lo_pattern_match+0xe2>
 800a0be:	3602      	adds	r6, #2
 800a0c0:	e7c6      	b.n	800a050 <lo_pattern_match+0xac>
 800a0c2:	463c      	mov	r4, r7
 800a0c4:	e789      	b.n	8009fda <lo_pattern_match+0x36>
 800a0c6:	2b2c      	cmp	r3, #44	; 0x2c
 800a0c8:	d10f      	bne.n	800a0ea <lo_pattern_match+0x146>
 800a0ca:	4639      	mov	r1, r7
 800a0cc:	f7ff ff6a 	bl	8009fa4 <lo_pattern_match>
 800a0d0:	2800      	cmp	r0, #0
 800a0d2:	d1ae      	bne.n	800a032 <lo_pattern_match+0x8e>
 800a0d4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a0d8:	b1c3      	cbz	r3, 800a10c <lo_pattern_match+0x168>
 800a0da:	462a      	mov	r2, r5
 800a0dc:	4610      	mov	r0, r2
 800a0de:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a0e2:	2b00      	cmp	r3, #0
 800a0e4:	d1ef      	bne.n	800a0c6 <lo_pattern_match+0x122>
 800a0e6:	4605      	mov	r5, r0
 800a0e8:	e7a7      	b.n	800a03a <lo_pattern_match+0x96>
 800a0ea:	2b7d      	cmp	r3, #125	; 0x7d
 800a0ec:	7802      	ldrb	r2, [r0, #0]
 800a0ee:	d104      	bne.n	800a0fa <lo_pattern_match+0x156>
 800a0f0:	7823      	ldrb	r3, [r4, #0]
 800a0f2:	4313      	orrs	r3, r2
 800a0f4:	d09d      	beq.n	800a032 <lo_pattern_match+0x8e>
 800a0f6:	1e45      	subs	r5, r0, #1
 800a0f8:	e79f      	b.n	800a03a <lo_pattern_match+0x96>
 800a0fa:	4293      	cmp	r3, r2
 800a0fc:	d107      	bne.n	800a10e <lo_pattern_match+0x16a>
 800a0fe:	1c42      	adds	r2, r0, #1
 800a100:	7840      	ldrb	r0, [r0, #1]
 800a102:	2800      	cmp	r0, #0
 800a104:	d1ea      	bne.n	800a0dc <lo_pattern_match+0x138>
 800a106:	7873      	ldrb	r3, [r6, #1]
 800a108:	2b00      	cmp	r3, #0
 800a10a:	d0e7      	beq.n	800a0dc <lo_pattern_match+0x138>
 800a10c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a10e:	4623      	mov	r3, r4
 800a110:	781a      	ldrb	r2, [r3, #0]
 800a112:	461c      	mov	r4, r3
 800a114:	2a2c      	cmp	r2, #44	; 0x2c
 800a116:	f103 0301 	add.w	r3, r3, #1
 800a11a:	d004      	beq.n	800a126 <lo_pattern_match+0x182>
 800a11c:	2a7d      	cmp	r2, #125	; 0x7d
 800a11e:	d081      	beq.n	800a024 <lo_pattern_match+0x80>
 800a120:	2a00      	cmp	r2, #0
 800a122:	d1f5      	bne.n	800a110 <lo_pattern_match+0x16c>
 800a124:	e7d9      	b.n	800a0da <lo_pattern_match+0x136>
 800a126:	461c      	mov	r4, r3
 800a128:	e7d7      	b.n	800a0da <lo_pattern_match+0x136>

0800a12a <osc::string_validate(void*, unsigned int)>:
 800a12a:	4602      	mov	r2, r0
 800a12c:	2300      	movs	r3, #0
 800a12e:	428b      	cmp	r3, r1
 800a130:	d005      	beq.n	800a13e <osc::string_validate(void*, unsigned int)+0x14>
 800a132:	5cd0      	ldrb	r0, [r2, r3]
 800a134:	b930      	cbnz	r0, 800a144 <osc::string_validate(void*, unsigned int)+0x1a>
 800a136:	f023 0003 	bic.w	r0, r3, #3
 800a13a:	3004      	adds	r0, #4
 800a13c:	d104      	bne.n	800a148 <osc::string_validate(void*, unsigned int)+0x1e>
 800a13e:	f06f 0001 	mvn.w	r0, #1
 800a142:	4770      	bx	lr
 800a144:	3301      	adds	r3, #1
 800a146:	e7f2      	b.n	800a12e <osc::string_validate(void*, unsigned int)+0x4>
 800a148:	4281      	cmp	r1, r0
 800a14a:	d305      	bcc.n	800a158 <osc::string_validate(void*, unsigned int)+0x2e>
 800a14c:	4283      	cmp	r3, r0
 800a14e:	d208      	bcs.n	800a162 <osc::string_validate(void*, unsigned int)+0x38>
 800a150:	5cd1      	ldrb	r1, [r2, r3]
 800a152:	b921      	cbnz	r1, 800a15e <osc::string_validate(void*, unsigned int)+0x34>
 800a154:	3301      	adds	r3, #1
 800a156:	e7f9      	b.n	800a14c <osc::string_validate(void*, unsigned int)+0x22>
 800a158:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a15c:	4770      	bx	lr
 800a15e:	f06f 0002 	mvn.w	r0, #2
 800a162:	4770      	bx	lr

0800a164 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800a164:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a168:	2300      	movs	r3, #0
 800a16a:	460d      	mov	r5, r1
 800a16c:	e9c0 1200 	strd	r1, r2, [r0]
 800a170:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a174:	7203      	strb	r3, [r0, #8]
 800a176:	6183      	str	r3, [r0, #24]
 800a178:	4604      	mov	r4, r0
 800a17a:	4611      	mov	r1, r2
 800a17c:	4628      	mov	r0, r5
 800a17e:	4617      	mov	r7, r2
 800a180:	f7ff ffd3 	bl	800a12a <osc::string_validate(void*, unsigned int)>
 800a184:	f1b0 0800 	subs.w	r8, r0, #0
 800a188:	db25      	blt.n	800a1d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800a18a:	eb05 0608 	add.w	r6, r5, r8
 800a18e:	4630      	mov	r0, r6
 800a190:	60e6      	str	r6, [r4, #12]
 800a192:	eba7 0108 	sub.w	r1, r7, r8
 800a196:	f7ff ffc8 	bl	800a12a <osc::string_validate(void*, unsigned int)>
 800a19a:	2800      	cmp	r0, #0
 800a19c:	db1b      	blt.n	800a1d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800a19e:	f815 3008 	ldrb.w	r3, [r5, r8]
 800a1a2:	2b2c      	cmp	r3, #44	; 0x2c
 800a1a4:	d117      	bne.n	800a1d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800a1a6:	7873      	ldrb	r3, [r6, #1]
 800a1a8:	2b73      	cmp	r3, #115	; 0x73
 800a1aa:	d001      	beq.n	800a1b0 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 800a1ac:	2b62      	cmp	r3, #98	; 0x62
 800a1ae:	d101      	bne.n	800a1b4 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 800a1b0:	78b3      	ldrb	r3, [r6, #2]
 800a1b2:	b983      	cbnz	r3, 800a1d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800a1b4:	3601      	adds	r6, #1
 800a1b6:	4632      	mov	r2, r6
 800a1b8:	60e6      	str	r6, [r4, #12]
 800a1ba:	4613      	mov	r3, r2
 800a1bc:	7819      	ldrb	r1, [r3, #0]
 800a1be:	3201      	adds	r2, #1
 800a1c0:	2900      	cmp	r1, #0
 800a1c2:	d1fa      	bne.n	800a1ba <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800a1c4:	1b9e      	subs	r6, r3, r6
 800a1c6:	2301      	movs	r3, #1
 800a1c8:	4440      	add	r0, r8
 800a1ca:	4405      	add	r5, r0
 800a1cc:	1a38      	subs	r0, r7, r0
 800a1ce:	6126      	str	r6, [r4, #16]
 800a1d0:	6165      	str	r5, [r4, #20]
 800a1d2:	61a0      	str	r0, [r4, #24]
 800a1d4:	7223      	strb	r3, [r4, #8]
 800a1d6:	4620      	mov	r0, r4
 800a1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a1dc <OscSimpleMessage::GetFloat(unsigned int)>:
 800a1dc:	6983      	ldr	r3, [r0, #24]
 800a1de:	1c4a      	adds	r2, r1, #1
 800a1e0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a1e4:	b510      	push	{r4, lr}
 800a1e6:	ea4f 0482 	mov.w	r4, r2, lsl #2
 800a1ea:	d309      	bcc.n	800a200 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800a1ec:	68c3      	ldr	r3, [r0, #12]
 800a1ee:	5c5b      	ldrb	r3, [r3, r1]
 800a1f0:	2b66      	cmp	r3, #102	; 0x66
 800a1f2:	d105      	bne.n	800a200 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800a1f4:	6943      	ldr	r3, [r0, #20]
 800a1f6:	4423      	add	r3, r4
 800a1f8:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800a1fc:	ba00      	rev	r0, r0
 800a1fe:	bd10      	pop	{r4, pc}
 800a200:	2000      	movs	r0, #0
 800a202:	e7fc      	b.n	800a1fe <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800a204 <OscSimpleMessage::GetInt(unsigned int)>:
 800a204:	6983      	ldr	r3, [r0, #24]
 800a206:	1c4a      	adds	r2, r1, #1
 800a208:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a20c:	b510      	push	{r4, lr}
 800a20e:	ea4f 0482 	mov.w	r4, r2, lsl #2
 800a212:	d309      	bcc.n	800a228 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800a214:	68c3      	ldr	r3, [r0, #12]
 800a216:	5c5b      	ldrb	r3, [r3, r1]
 800a218:	2b69      	cmp	r3, #105	; 0x69
 800a21a:	d105      	bne.n	800a228 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800a21c:	6943      	ldr	r3, [r0, #20]
 800a21e:	4423      	add	r3, r4
 800a220:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800a224:	ba00      	rev	r0, r0
 800a226:	bd10      	pop	{r4, pc}
 800a228:	2000      	movs	r0, #0
 800a22a:	e7fc      	b.n	800a226 <OscSimpleMessage::GetInt(unsigned int)+0x22>

0800a22c <OscSimpleMessage::GetBlob(unsigned int)>:
 800a22c:	b510      	push	{r4, lr}
 800a22e:	68cb      	ldr	r3, [r1, #12]
 800a230:	781b      	ldrb	r3, [r3, #0]
 800a232:	2b62      	cmp	r3, #98	; 0x62
 800a234:	d10a      	bne.n	800a24c <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800a236:	694a      	ldr	r2, [r1, #20]
 800a238:	6989      	ldr	r1, [r1, #24]
 800a23a:	6813      	ldr	r3, [r2, #0]
 800a23c:	ba1b      	rev	r3, r3
 800a23e:	1d1c      	adds	r4, r3, #4
 800a240:	428c      	cmp	r4, r1
 800a242:	d803      	bhi.n	800a24c <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800a244:	3204      	adds	r2, #4
 800a246:	6002      	str	r2, [r0, #0]
 800a248:	6043      	str	r3, [r0, #4]
 800a24a:	bd10      	pop	{r4, pc}
 800a24c:	2300      	movs	r3, #0
 800a24e:	6003      	str	r3, [r0, #0]
 800a250:	e7fa      	b.n	800a248 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800a252 <osc::string_size(char const*)>:
 800a252:	4602      	mov	r2, r0
 800a254:	4613      	mov	r3, r2
 800a256:	7819      	ldrb	r1, [r3, #0]
 800a258:	3201      	adds	r2, #1
 800a25a:	2900      	cmp	r1, #0
 800a25c:	d1fa      	bne.n	800a254 <osc::string_size(char const*)+0x2>
 800a25e:	1a18      	subs	r0, r3, r0
 800a260:	f020 0003 	bic.w	r0, r0, #3
 800a264:	3004      	adds	r0, #4
 800a266:	4770      	bx	lr

0800a268 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 800a268:	b570      	push	{r4, r5, r6, lr}
 800a26a:	2400      	movs	r4, #0
 800a26c:	480a      	ldr	r0, [pc, #40]	; (800a298 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 800a26e:	1f16      	subs	r6, r2, #4
 800a270:	1985      	adds	r5, r0, r6
 800a272:	5584      	strb	r4, [r0, r6]
 800a274:	706c      	strb	r4, [r5, #1]
 800a276:	70ac      	strb	r4, [r5, #2]
 800a278:	70ec      	strb	r4, [r5, #3]
 800a27a:	4604      	mov	r4, r0
 800a27c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a280:	f800 5b01 	strb.w	r5, [r0], #1
 800a284:	2d00      	cmp	r5, #0
 800a286:	d1f9      	bne.n	800a27c <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 800a288:	212c      	movs	r1, #44	; 0x2c
 800a28a:	54a1      	strb	r1, [r4, r2]
 800a28c:	4422      	add	r2, r4
 800a28e:	7053      	strb	r3, [r2, #1]
 800a290:	7095      	strb	r5, [r2, #2]
 800a292:	70d5      	strb	r5, [r2, #3]
 800a294:	bd70      	pop	{r4, r5, r6, pc}
 800a296:	bf00      	nop
 800a298:	200004f4 	strdcs	r0, [r0], -r4

0800a29c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 800a29c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a2a0:	4605      	mov	r5, r0
 800a2a2:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800a2a6:	460e      	mov	r6, r1
 800a2a8:	4617      	mov	r7, r2
 800a2aa:	4698      	mov	r8, r3
 800a2ac:	f1ba 0f00 	cmp.w	sl, #0
 800a2b0:	d112      	bne.n	800a2d8 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800a2b2:	4648      	mov	r0, r9
 800a2b4:	f7ff ffcd 	bl	800a252 <osc::string_size(char const*)>
 800a2b8:	4604      	mov	r4, r0
 800a2ba:	4602      	mov	r2, r0
 800a2bc:	4653      	mov	r3, sl
 800a2be:	4649      	mov	r1, r9
 800a2c0:	4628      	mov	r0, r5
 800a2c2:	3404      	adds	r4, #4
 800a2c4:	f7ff ffd0 	bl	800a268 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800a2c8:	463b      	mov	r3, r7
 800a2ca:	4905      	ldr	r1, [pc, #20]	; (800a2e0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 800a2cc:	f8cd 8000 	str.w	r8, [sp]
 800a2d0:	b2a2      	uxth	r2, r4
 800a2d2:	b2f0      	uxtb	r0, r6
 800a2d4:	f004 fafe 	bl	800e8d4 <udp_send>
 800a2d8:	4628      	mov	r0, r5
 800a2da:	b002      	add	sp, #8
 800a2dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a2e0:	200004f4 	strdcs	r0, [r0], -r4

0800a2e4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800a2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2e8:	b085      	sub	sp, #20
 800a2ea:	460f      	mov	r7, r1
 800a2ec:	4699      	mov	r9, r3
 800a2ee:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800a2f2:	4606      	mov	r6, r0
 800a2f4:	4690      	mov	r8, r2
 800a2f6:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800a2fa:	b35b      	cbz	r3, 800a354 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800a2fc:	781b      	ldrb	r3, [r3, #0]
 800a2fe:	2b73      	cmp	r3, #115	; 0x73
 800a300:	d128      	bne.n	800a354 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800a302:	4608      	mov	r0, r1
 800a304:	9303      	str	r3, [sp, #12]
 800a306:	f7ff ffa4 	bl	800a252 <osc::string_size(char const*)>
 800a30a:	4604      	mov	r4, r0
 800a30c:	4650      	mov	r0, sl
 800a30e:	f7ff ffa0 	bl	800a252 <osc::string_size(char const*)>
 800a312:	4622      	mov	r2, r4
 800a314:	1825      	adds	r5, r4, r0
 800a316:	9b03      	ldr	r3, [sp, #12]
 800a318:	990e      	ldr	r1, [sp, #56]	; 0x38
 800a31a:	4630      	mov	r0, r6
 800a31c:	f7ff ffa4 	bl	800a268 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800a320:	2200      	movs	r2, #0
 800a322:	4b0e      	ldr	r3, [pc, #56]	; (800a35c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800a324:	3403      	adds	r4, #3
 800a326:	1959      	adds	r1, r3, r5
 800a328:	555a      	strb	r2, [r3, r5]
 800a32a:	f105 0b04 	add.w	fp, r5, #4
 800a32e:	704a      	strb	r2, [r1, #1]
 800a330:	708a      	strb	r2, [r1, #2]
 800a332:	70ca      	strb	r2, [r1, #3]
 800a334:	4423      	add	r3, r4
 800a336:	f81a 2b01 	ldrb.w	r2, [sl], #1
 800a33a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a33e:	2a00      	cmp	r2, #0
 800a340:	d1f9      	bne.n	800a336 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800a342:	4643      	mov	r3, r8
 800a344:	4905      	ldr	r1, [pc, #20]	; (800a35c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800a346:	f8cd 9000 	str.w	r9, [sp]
 800a34a:	fa1f f28b 	uxth.w	r2, fp
 800a34e:	b2f8      	uxtb	r0, r7
 800a350:	f004 fac0 	bl	800e8d4 <udp_send>
 800a354:	4630      	mov	r0, r6
 800a356:	b005      	add	sp, #20
 800a358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a35c:	200004f4 	strdcs	r0, [r0], -r4

0800a360 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)>:
 800a360:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a364:	4698      	mov	r8, r3
 800a366:	e9dd 930a 	ldrd	r9, r3, [sp, #40]	; 0x28
 800a36a:	4605      	mov	r5, r0
 800a36c:	460e      	mov	r6, r1
 800a36e:	4617      	mov	r7, r2
 800a370:	b1db      	cbz	r3, 800a3aa <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800a372:	f893 a000 	ldrb.w	sl, [r3]
 800a376:	f1ba 0f69 	cmp.w	sl, #105	; 0x69
 800a37a:	d116      	bne.n	800a3aa <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x4a>
 800a37c:	4648      	mov	r0, r9
 800a37e:	f7ff ff68 	bl	800a252 <osc::string_size(char const*)>
 800a382:	4604      	mov	r4, r0
 800a384:	4602      	mov	r2, r0
 800a386:	4653      	mov	r3, sl
 800a388:	4649      	mov	r1, r9
 800a38a:	4628      	mov	r0, r5
 800a38c:	f7ff ff6c 	bl	800a268 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800a390:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a392:	4908      	ldr	r1, [pc, #32]	; (800a3b4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, int)+0x54>)
 800a394:	ba1b      	rev	r3, r3
 800a396:	190a      	adds	r2, r1, r4
 800a398:	3408      	adds	r4, #8
 800a39a:	6053      	str	r3, [r2, #4]
 800a39c:	b2f0      	uxtb	r0, r6
 800a39e:	463b      	mov	r3, r7
 800a3a0:	f8cd 8000 	str.w	r8, [sp]
 800a3a4:	b2a2      	uxth	r2, r4
 800a3a6:	f004 fa95 	bl	800e8d4 <udp_send>
 800a3aa:	4628      	mov	r0, r5
 800a3ac:	b002      	add	sp, #8
 800a3ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a3b2:	bf00      	nop
 800a3b4:	200004f4 	strdcs	r0, [r0], -r4

0800a3b8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800a3b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3bc:	460e      	mov	r6, r1
 800a3be:	4611      	mov	r1, r2
 800a3c0:	4604      	mov	r4, r0
 800a3c2:	4690      	mov	r8, r2
 800a3c4:	461d      	mov	r5, r3
 800a3c6:	9f06      	ldr	r7, [sp, #24]
 800a3c8:	f000 fd64 	bl	800ae94 <PixelConfiguration::Validate(unsigned int&)>
 800a3cc:	2e01      	cmp	r6, #1
 800a3ce:	d009      	beq.n	800a3e4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800a3d0:	7ce2      	ldrb	r2, [r4, #19]
 800a3d2:	b93a      	cbnz	r2, 800a3e4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800a3d4:	2e04      	cmp	r6, #4
 800a3d6:	d13f      	bne.n	800a458 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa0>
 800a3d8:	2303      	movs	r3, #3
 800a3da:	6023      	str	r3, [r4, #0]
 800a3dc:	4641      	mov	r1, r8
 800a3de:	4620      	mov	r0, r4
 800a3e0:	f000 fd58 	bl	800ae94 <PixelConfiguration::Validate(unsigned int&)>
 800a3e4:	6823      	ldr	r3, [r4, #0]
 800a3e6:	2b07      	cmp	r3, #7
 800a3e8:	bf0d      	iteet	eq
 800a3ea:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800a3ee:	f44f 73aa 	movne.w	r3, #340	; 0x154
 800a3f2:	22aa      	movne	r2, #170	; 0xaa
 800a3f4:	2180      	moveq	r1, #128	; 0x80
 800a3f6:	bf15      	itete	ne
 800a3f8:	e9c5 2300 	strdne	r2, r3, [r5]
 800a3fc:	e9c5 1300 	strdeq	r1, r3, [r5]
 800a400:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800a404:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800a408:	69a2      	ldr	r2, [r4, #24]
 800a40a:	60ab      	str	r3, [r5, #8]
 800a40c:	6863      	ldr	r3, [r4, #4]
 800a40e:	b10a      	cbz	r2, 800a414 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 800a410:	429a      	cmp	r2, r3
 800a412:	d900      	bls.n	800a416 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 800a414:	61a3      	str	r3, [r4, #24]
 800a416:	69a2      	ldr	r2, [r4, #24]
 800a418:	fbb3 f3f2 	udiv	r3, r3, r2
 800a41c:	603b      	str	r3, [r7, #0]
 800a41e:	6963      	ldr	r3, [r4, #20]
 800a420:	682a      	ldr	r2, [r5, #0]
 800a422:	42b3      	cmp	r3, r6
 800a424:	bf94      	ite	ls
 800a426:	6163      	strls	r3, [r4, #20]
 800a428:	6166      	strhi	r6, [r4, #20]
 800a42a:	1c53      	adds	r3, r2, #1
 800a42c:	683a      	ldr	r2, [r7, #0]
 800a42e:	2e01      	cmp	r6, #1
 800a430:	fbb2 f2f3 	udiv	r2, r2, r3
 800a434:	9b07      	ldr	r3, [sp, #28]
 800a436:	f102 0201 	add.w	r2, r2, #1
 800a43a:	601a      	str	r2, [r3, #0]
 800a43c:	bf09      	itett	eq
 800a43e:	682a      	ldreq	r2, [r5, #0]
 800a440:	6963      	ldrne	r3, [r4, #20]
 800a442:	1c53      	addeq	r3, r2, #1
 800a444:	683a      	ldreq	r2, [r7, #0]
 800a446:	bf16      	itet	ne
 800a448:	435a      	mulne	r2, r3
 800a44a:	fbb2 f2f3 	udiveq	r2, r2, r3
 800a44e:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800a452:	60ea      	str	r2, [r5, #12]
 800a454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a458:	6823      	ldr	r3, [r4, #0]
 800a45a:	2b00      	cmp	r3, #0
 800a45c:	d0be      	beq.n	800a3dc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800a45e:	3b0b      	subs	r3, #11
 800a460:	2b01      	cmp	r3, #1
 800a462:	bf88      	it	hi
 800a464:	6022      	strhi	r2, [r4, #0]
 800a466:	e7b9      	b.n	800a3dc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800a468 <PixelDmxConfiguration::Dump()>:
 800a468:	4770      	bx	lr

0800a46a <WS28xxDmx::GetDmxStartAddress()>:
 800a46a:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 800a46c:	4770      	bx	lr

0800a46e <WS28xxDmx::GetDmxFootprint()>:
 800a46e:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 800a470:	4770      	bx	lr
	...

0800a474 <WS28xxDmx::~WS28xxDmx()>:
 800a474:	b538      	push	{r3, r4, r5, lr}
 800a476:	4b06      	ldr	r3, [pc, #24]	; (800a490 <WS28xxDmx::~WS28xxDmx()+0x1c>)
 800a478:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800a47a:	4604      	mov	r4, r0
 800a47c:	6003      	str	r3, [r0, #0]
 800a47e:	b12d      	cbz	r5, 800a48c <WS28xxDmx::~WS28xxDmx()+0x18>
 800a480:	4628      	mov	r0, r5
 800a482:	f001 fef5 	bl	800c270 <WS28xx::~WS28xx()>
 800a486:	4628      	mov	r0, r5
 800a488:	f006 fd8c 	bl	8010fa4 <operator delete(void*)>
 800a48c:	4620      	mov	r0, r4
 800a48e:	bd38      	pop	{r3, r4, r5, pc}
 800a490:	080135ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, sp}

0800a494 <WS28xxDmx::~WS28xxDmx()>:
 800a494:	b510      	push	{r4, lr}
 800a496:	4604      	mov	r4, r0
 800a498:	f7ff ffec 	bl	800a474 <WS28xxDmx::~WS28xxDmx()>
 800a49c:	4620      	mov	r0, r4
 800a49e:	f006 fd81 	bl	8010fa4 <operator delete(void*)>
 800a4a2:	4620      	mov	r0, r4
 800a4a4:	bd10      	pop	{r4, pc}

0800a4a6 <WS28xxDmx::Blackout(bool)>:
 800a4a6:	b538      	push	{r3, r4, r5, lr}
 800a4a8:	4605      	mov	r5, r0
 800a4aa:	460c      	mov	r4, r1
 800a4ac:	f880 1041 	strb.w	r1, [r0, #65]	; 0x41
 800a4b0:	f007 ff74 	bl	801239c <gd32_spi_dma_tx_is_active()>
 800a4b4:	2800      	cmp	r0, #0
 800a4b6:	d1fb      	bne.n	800a4b0 <WS28xxDmx::Blackout(bool)+0xa>
 800a4b8:	6b68      	ldr	r0, [r5, #52]	; 0x34
 800a4ba:	b11c      	cbz	r4, 800a4c4 <WS28xxDmx::Blackout(bool)+0x1e>
 800a4bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a4c0:	f001 bf50 	b.w	800c364 <WS28xx::Blackout()>
 800a4c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a4c8:	f001 bf30 	b.w	800c32c <WS28xx::Update()>

0800a4cc <WS28xxDmx::Start(unsigned int)>:
 800a4cc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800a4d0:	b93b      	cbnz	r3, 800a4e2 <WS28xxDmx::Start(unsigned int)+0x16>
 800a4d2:	2301      	movs	r3, #1
 800a4d4:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800a4d8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800a4da:	b110      	cbz	r0, 800a4e2 <WS28xxDmx::Start(unsigned int)+0x16>
 800a4dc:	6803      	ldr	r3, [r0, #0]
 800a4de:	689b      	ldr	r3, [r3, #8]
 800a4e0:	4718      	bx	r3
 800a4e2:	4770      	bx	lr

0800a4e4 <WS28xxDmx::SetDmxStartAddress(unsigned short)>:
 800a4e4:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 800a4e6:	b508      	push	{r3, lr}
 800a4e8:	428a      	cmp	r2, r1
 800a4ea:	d101      	bne.n	800a4f0 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xc>
 800a4ec:	2001      	movs	r0, #1
 800a4ee:	bd08      	pop	{r3, pc}
 800a4f0:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800a4f2:	440a      	add	r2, r1
 800a4f4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800a4f8:	dc0b      	bgt.n	800a512 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 800a4fa:	1e4a      	subs	r2, r1, #1
 800a4fc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800a500:	d207      	bcs.n	800a512 <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x2e>
 800a502:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800a504:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800a506:	2800      	cmp	r0, #0
 800a508:	d0f0      	beq.n	800a4ec <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 800a50a:	6803      	ldr	r3, [r0, #0]
 800a50c:	69db      	ldr	r3, [r3, #28]
 800a50e:	4798      	blx	r3
 800a510:	e7ec      	b.n	800a4ec <WS28xxDmx::SetDmxStartAddress(unsigned short)+0x8>
 800a512:	2000      	movs	r0, #0
 800a514:	e7eb      	b.n	800a4ee <WS28xxDmx::SetDmxStartAddress(unsigned short)+0xa>

0800a516 <WS28xxDmx::Stop(unsigned int)>:
 800a516:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800a51a:	b510      	push	{r4, lr}
 800a51c:	4604      	mov	r4, r0
 800a51e:	b16b      	cbz	r3, 800a53c <WS28xxDmx::Stop(unsigned int)+0x26>
 800a520:	2300      	movs	r3, #0
 800a522:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800a526:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800a528:	b108      	cbz	r0, 800a52e <WS28xxDmx::Stop(unsigned int)+0x18>
 800a52a:	f001 ff1b 	bl	800c364 <WS28xx::Blackout()>
 800a52e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a530:	b120      	cbz	r0, 800a53c <WS28xxDmx::Stop(unsigned int)+0x26>
 800a532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a536:	6803      	ldr	r3, [r0, #0]
 800a538:	68db      	ldr	r3, [r3, #12]
 800a53a:	4718      	bx	r3
 800a53c:	bd10      	pop	{r4, pc}

0800a53e <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800a53e:	4603      	mov	r3, r0
 800a540:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 800a542:	4288      	cmp	r0, r1
 800a544:	f04f 0000 	mov.w	r0, #0
 800a548:	d30f      	bcc.n	800a56a <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2c>
 800a54a:	7090      	strb	r0, [r2, #2]
 800a54c:	6a1b      	ldr	r3, [r3, #32]
 800a54e:	fbb1 f0f3 	udiv	r0, r1, r3
 800a552:	fb03 1110 	mls	r1, r3, r0, r1
 800a556:	2903      	cmp	r1, #3
 800a558:	d80e      	bhi.n	800a578 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x3a>
 800a55a:	e8df f001 	tbb	[pc, r1]
 800a55e:	0d0a0702 	stceq	7, cr0, [sl, #-8]
 800a562:	f240 2305 	movw	r3, #517	; 0x205
 800a566:	2001      	movs	r0, #1
 800a568:	8013      	strh	r3, [r2, #0]
 800a56a:	4770      	bx	lr
 800a56c:	f240 2306 	movw	r3, #518	; 0x206
 800a570:	e7f9      	b.n	800a566 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 800a572:	f240 2307 	movw	r3, #519	; 0x207
 800a576:	e7f6      	b.n	800a566 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>
 800a578:	f240 2312 	movw	r3, #530	; 0x212
 800a57c:	e7f3      	b.n	800a566 <WS28xxDmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x28>

0800a57e <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800a57e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a582:	b085      	sub	sp, #20
 800a584:	4606      	mov	r6, r0
 800a586:	4690      	mov	r8, r2
 800a588:	4699      	mov	r9, r3
 800a58a:	9103      	str	r1, [sp, #12]
 800a58c:	f007 ff06 	bl	801239c <gd32_spi_dma_tx_is_active()>
 800a590:	2800      	cmp	r0, #0
 800a592:	d170      	bne.n	800a676 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800a594:	9b03      	ldr	r3, [sp, #12]
 800a596:	6972      	ldr	r2, [r6, #20]
 800a598:	f003 0103 	and.w	r1, r3, #3
 800a59c:	6a33      	ldr	r3, [r6, #32]
 800a59e:	2902      	cmp	r1, #2
 800a5a0:	fbb9 f7f3 	udiv	r7, r9, r3
 800a5a4:	d02b      	beq.n	800a5fe <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x80>
 800a5a6:	2903      	cmp	r1, #3
 800a5a8:	d030      	beq.n	800a60c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800a5aa:	2901      	cmp	r1, #1
 800a5ac:	6875      	ldr	r5, [r6, #4]
 800a5ae:	d027      	beq.n	800a600 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800a5b0:	4297      	cmp	r7, r2
 800a5b2:	bf28      	it	cs
 800a5b4:	4617      	movcs	r7, r2
 800a5b6:	4295      	cmp	r5, r2
 800a5b8:	d92a      	bls.n	800a610 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800a5ba:	4605      	mov	r5, r0
 800a5bc:	8df4      	ldrh	r4, [r6, #46]	; 0x2e
 800a5be:	3c01      	subs	r4, #1
 800a5c0:	2b03      	cmp	r3, #3
 800a5c2:	4444      	add	r4, r8
 800a5c4:	d12c      	bne.n	800a620 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa2>
 800a5c6:	42af      	cmp	r7, r5
 800a5c8:	d948      	bls.n	800a65c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800a5ca:	eba4 0308 	sub.w	r3, r4, r8
 800a5ce:	4599      	cmp	r9, r3
 800a5d0:	d944      	bls.n	800a65c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800a5d2:	f04f 0a00 	mov.w	sl, #0
 800a5d6:	69b3      	ldr	r3, [r6, #24]
 800a5d8:	f894 f000 	pld	[r4]
 800a5dc:	fb03 fb05 	mul.w	fp, r3, r5
 800a5e0:	69b3      	ldr	r3, [r6, #24]
 800a5e2:	4553      	cmp	r3, sl
 800a5e4:	d917      	bls.n	800a616 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x98>
 800a5e6:	78a2      	ldrb	r2, [r4, #2]
 800a5e8:	7863      	ldrb	r3, [r4, #1]
 800a5ea:	9200      	str	r2, [sp, #0]
 800a5ec:	eb0b 010a 	add.w	r1, fp, sl
 800a5f0:	7822      	ldrb	r2, [r4, #0]
 800a5f2:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800a5f4:	f001 f85a 	bl	800b6ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800a5f8:	f10a 0a01 	add.w	sl, sl, #1
 800a5fc:	e7f0      	b.n	800a5e0 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x62>
 800a5fe:	68b5      	ldr	r5, [r6, #8]
 800a600:	442f      	add	r7, r5
 800a602:	4297      	cmp	r7, r2
 800a604:	bf28      	it	cs
 800a606:	4617      	movcs	r7, r2
 800a608:	4604      	mov	r4, r0
 800a60a:	e7d9      	b.n	800a5c0 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 800a60c:	68f5      	ldr	r5, [r6, #12]
 800a60e:	e7f7      	b.n	800a600 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800a610:	4605      	mov	r5, r0
 800a612:	4604      	mov	r4, r0
 800a614:	e7d4      	b.n	800a5c0 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x42>
 800a616:	3501      	adds	r5, #1
 800a618:	3403      	adds	r4, #3
 800a61a:	e7d4      	b.n	800a5c6 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x48>
 800a61c:	3501      	adds	r5, #1
 800a61e:	3404      	adds	r4, #4
 800a620:	42af      	cmp	r7, r5
 800a622:	d91b      	bls.n	800a65c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800a624:	eba4 0308 	sub.w	r3, r4, r8
 800a628:	4599      	cmp	r9, r3
 800a62a:	d917      	bls.n	800a65c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xde>
 800a62c:	f04f 0a00 	mov.w	sl, #0
 800a630:	69b3      	ldr	r3, [r6, #24]
 800a632:	f894 f000 	pld	[r4]
 800a636:	fb03 fb05 	mul.w	fp, r3, r5
 800a63a:	69b3      	ldr	r3, [r6, #24]
 800a63c:	4553      	cmp	r3, sl
 800a63e:	d9ed      	bls.n	800a61c <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x9e>
 800a640:	78e2      	ldrb	r2, [r4, #3]
 800a642:	7863      	ldrb	r3, [r4, #1]
 800a644:	9201      	str	r2, [sp, #4]
 800a646:	78a2      	ldrb	r2, [r4, #2]
 800a648:	eb0b 010a 	add.w	r1, fp, sl
 800a64c:	9200      	str	r2, [sp, #0]
 800a64e:	7822      	ldrb	r2, [r4, #0]
 800a650:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800a652:	f001 fcf7 	bl	800c044 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800a656:	f10a 0a01 	add.w	sl, sl, #1
 800a65a:	e7ee      	b.n	800a63a <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xbc>
 800a65c:	6933      	ldr	r3, [r6, #16]
 800a65e:	9a03      	ldr	r2, [sp, #12]
 800a660:	429a      	cmp	r2, r3
 800a662:	d108      	bne.n	800a676 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800a664:	f896 3041 	ldrb.w	r3, [r6, #65]	; 0x41
 800a668:	b92b      	cbnz	r3, 800a676 <WS28xxDmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xf8>
 800a66a:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800a66c:	b005      	add	sp, #20
 800a66e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a672:	f001 be5b 	b.w	800c32c <WS28xx::Update()>
 800a676:	b005      	add	sp, #20
 800a678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a67c <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)>:
 800a67c:	22ff      	movs	r2, #255	; 0xff
 800a67e:	4b1d      	ldr	r3, [pc, #116]	; (800a6f4 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x78>)
 800a680:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a682:	6003      	str	r3, [r0, #0]
 800a684:	2300      	movs	r3, #0
 800a686:	460d      	mov	r5, r1
 800a688:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800a68c:	2101      	movs	r1, #1
 800a68e:	f44f 72ff 	mov.w	r2, #510	; 0x1fe
 800a692:	e9c0 330d 	strd	r3, r3, [r0, #52]	; 0x34
 800a696:	8483      	strh	r3, [r0, #36]	; 0x24
 800a698:	6283      	str	r3, [r0, #40]	; 0x28
 800a69a:	63c3      	str	r3, [r0, #60]	; 0x3c
 800a69c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800a6a0:	4b15      	ldr	r3, [pc, #84]	; (800a6f8 <WS28xxDmx::WS28xxDmx(PixelDmxConfiguration&)+0x7c>)
 800a6a2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800a6a4:	6018      	str	r0, [r3, #0]
 800a6a6:	f100 031c 	add.w	r3, r0, #28
 800a6aa:	8602      	strh	r2, [r0, #48]	; 0x30
 800a6ac:	9301      	str	r3, [sp, #4]
 800a6ae:	f100 0314 	add.w	r3, r0, #20
 800a6b2:	4604      	mov	r4, r0
 800a6b4:	f100 0220 	add.w	r2, r0, #32
 800a6b8:	9300      	str	r3, [sp, #0]
 800a6ba:	1d03      	adds	r3, r0, #4
 800a6bc:	4628      	mov	r0, r5
 800a6be:	f7ff fe7b 	bl	800a3b8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800a6c2:	201c      	movs	r0, #28
 800a6c4:	f006 fc72 	bl	8010fac <operator new(unsigned int)>
 800a6c8:	4606      	mov	r6, r0
 800a6ca:	4629      	mov	r1, r5
 800a6cc:	f001 fdee 	bl	800c2ac <WS28xx::WS28xx(PixelConfiguration&)>
 800a6d0:	4630      	mov	r0, r6
 800a6d2:	6366      	str	r6, [r4, #52]	; 0x34
 800a6d4:	f001 fe46 	bl	800c364 <WS28xx::Blackout()>
 800a6d8:	69ab      	ldr	r3, [r5, #24]
 800a6da:	6a22      	ldr	r2, [r4, #32]
 800a6dc:	61a3      	str	r3, [r4, #24]
 800a6de:	8bab      	ldrh	r3, [r5, #28]
 800a6e0:	4628      	mov	r0, r5
 800a6e2:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800a6e4:	6963      	ldr	r3, [r4, #20]
 800a6e6:	4353      	muls	r3, r2
 800a6e8:	8623      	strh	r3, [r4, #48]	; 0x30
 800a6ea:	f7ff febd 	bl	800a468 <PixelDmxConfiguration::Dump()>
 800a6ee:	4620      	mov	r0, r4
 800a6f0:	b002      	add	sp, #8
 800a6f2:	bd70      	pop	{r4, r5, r6, pc}
 800a6f4:	080135ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, sp}
 800a6f8:	200006f4 	strdcs	r0, [r0], -r4

0800a6fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800a6fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6fe:	88c5      	ldrh	r5, [r0, #6]
 800a700:	8886      	ldrh	r6, [r0, #4]
 800a702:	42b5      	cmp	r5, r6
 800a704:	d216      	bcs.n	800a734 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800a706:	4604      	mov	r4, r0
 800a708:	6800      	ldr	r0, [r0, #0]
 800a70a:	4428      	add	r0, r5
 800a70c:	1b75      	subs	r5, r6, r5
 800a70e:	7a26      	ldrb	r6, [r4, #8]
 800a710:	b923      	cbnz	r3, 800a71c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800a712:	b926      	cbnz	r6, 800a71e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800a714:	9200      	str	r2, [sp, #0]
 800a716:	460b      	mov	r3, r1
 800a718:	4a09      	ldr	r2, [pc, #36]	; (800a740 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800a71a:	e003      	b.n	800a724 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800a71c:	b166      	cbz	r6, 800a738 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800a71e:	460b      	mov	r3, r1
 800a720:	9200      	str	r2, [sp, #0]
 800a722:	4a08      	ldr	r2, [pc, #32]	; (800a744 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800a724:	4629      	mov	r1, r5
 800a726:	f7fe ff53 	bl	80095d0 <snprintf>
 800a72a:	4285      	cmp	r5, r0
 800a72c:	bfa2      	ittt	ge
 800a72e:	88e3      	ldrhge	r3, [r4, #6]
 800a730:	181b      	addge	r3, r3, r0
 800a732:	80e3      	strhge	r3, [r4, #6]
 800a734:	b002      	add	sp, #8
 800a736:	bd70      	pop	{r4, r5, r6, pc}
 800a738:	9200      	str	r2, [sp, #0]
 800a73a:	460b      	mov	r3, r1
 800a73c:	4a02      	ldr	r2, [pc, #8]	; (800a748 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a73e:	e7f1      	b.n	800a724 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800a740:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 800a744:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 800a748:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

0800a74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800a74c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a74e:	88c5      	ldrh	r5, [r0, #6]
 800a750:	8886      	ldrh	r6, [r0, #4]
 800a752:	42b5      	cmp	r5, r6
 800a754:	d216      	bcs.n	800a784 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800a756:	4604      	mov	r4, r0
 800a758:	6800      	ldr	r0, [r0, #0]
 800a75a:	4428      	add	r0, r5
 800a75c:	1b75      	subs	r5, r6, r5
 800a75e:	7a26      	ldrb	r6, [r4, #8]
 800a760:	b923      	cbnz	r3, 800a76c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800a762:	b926      	cbnz	r6, 800a76e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800a764:	9200      	str	r2, [sp, #0]
 800a766:	460b      	mov	r3, r1
 800a768:	4a09      	ldr	r2, [pc, #36]	; (800a790 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800a76a:	e003      	b.n	800a774 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a76c:	b166      	cbz	r6, 800a788 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800a76e:	460b      	mov	r3, r1
 800a770:	9200      	str	r2, [sp, #0]
 800a772:	4a08      	ldr	r2, [pc, #32]	; (800a794 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800a774:	4629      	mov	r1, r5
 800a776:	f7fe ff2b 	bl	80095d0 <snprintf>
 800a77a:	4285      	cmp	r5, r0
 800a77c:	bfa2      	ittt	ge
 800a77e:	88e3      	ldrhge	r3, [r4, #6]
 800a780:	181b      	addge	r3, r3, r0
 800a782:	80e3      	strhge	r3, [r4, #6]
 800a784:	b002      	add	sp, #8
 800a786:	bd70      	pop	{r4, r5, r6, pc}
 800a788:	9200      	str	r2, [sp, #0]
 800a78a:	460b      	mov	r3, r1
 800a78c:	4a02      	ldr	r2, [pc, #8]	; (800a798 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a78e:	e7f1      	b.n	800a774 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a790:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 800a794:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 800a798:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

0800a79c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a79c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a79e:	88c5      	ldrh	r5, [r0, #6]
 800a7a0:	8886      	ldrh	r6, [r0, #4]
 800a7a2:	42b5      	cmp	r5, r6
 800a7a4:	d216      	bcs.n	800a7d4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a7a6:	4604      	mov	r4, r0
 800a7a8:	6800      	ldr	r0, [r0, #0]
 800a7aa:	4428      	add	r0, r5
 800a7ac:	1b75      	subs	r5, r6, r5
 800a7ae:	7a26      	ldrb	r6, [r4, #8]
 800a7b0:	b923      	cbnz	r3, 800a7bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a7b2:	b926      	cbnz	r6, 800a7be <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a7b4:	9200      	str	r2, [sp, #0]
 800a7b6:	460b      	mov	r3, r1
 800a7b8:	4a09      	ldr	r2, [pc, #36]	; (800a7e0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a7ba:	e003      	b.n	800a7c4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a7bc:	b166      	cbz	r6, 800a7d8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a7be:	460b      	mov	r3, r1
 800a7c0:	9200      	str	r2, [sp, #0]
 800a7c2:	4a08      	ldr	r2, [pc, #32]	; (800a7e4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a7c4:	4629      	mov	r1, r5
 800a7c6:	f7fe ff03 	bl	80095d0 <snprintf>
 800a7ca:	4285      	cmp	r5, r0
 800a7cc:	bfa2      	ittt	ge
 800a7ce:	88e3      	ldrhge	r3, [r4, #6]
 800a7d0:	181b      	addge	r3, r3, r0
 800a7d2:	80e3      	strhge	r3, [r4, #6]
 800a7d4:	b002      	add	sp, #8
 800a7d6:	bd70      	pop	{r4, r5, r6, pc}
 800a7d8:	9200      	str	r2, [sp, #0]
 800a7da:	460b      	mov	r3, r1
 800a7dc:	4a02      	ldr	r2, [pc, #8]	; (800a7e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a7de:	e7f1      	b.n	800a7c4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a7e0:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 800a7e4:	08013539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, ip, sp}
 800a7e8:	08013545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp}

0800a7ec <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800a7ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a7f0:	4699      	mov	r9, r3
 800a7f2:	8885      	ldrh	r5, [r0, #4]
 800a7f4:	88c3      	ldrh	r3, [r0, #6]
 800a7f6:	4604      	mov	r4, r0
 800a7f8:	42ab      	cmp	r3, r5
 800a7fa:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800a7fe:	d227      	bcs.n	800a850 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800a800:	6826      	ldr	r6, [r4, #0]
 800a802:	4610      	mov	r0, r2
 800a804:	460f      	mov	r7, r1
 800a806:	f894 a008 	ldrb.w	sl, [r4, #8]
 800a80a:	441e      	add	r6, r3
 800a80c:	1aed      	subs	r5, r5, r3
 800a80e:	f7fd fe51 	bl	80084b4 <__aeabi_f2d>
 800a812:	f1b9 0f00 	cmp.w	r9, #0
 800a816:	d109      	bne.n	800a82c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800a818:	f1ba 0f00 	cmp.w	sl, #0
 800a81c:	d109      	bne.n	800a832 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800a81e:	463b      	mov	r3, r7
 800a820:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a824:	4a0f      	ldr	r2, [pc, #60]	; (800a864 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800a826:	f8cd 8000 	str.w	r8, [sp]
 800a82a:	e008      	b.n	800a83e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800a82c:	f1ba 0f00 	cmp.w	sl, #0
 800a830:	d011      	beq.n	800a856 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800a832:	463b      	mov	r3, r7
 800a834:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a838:	4a0b      	ldr	r2, [pc, #44]	; (800a868 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800a83a:	f8cd 8000 	str.w	r8, [sp]
 800a83e:	4629      	mov	r1, r5
 800a840:	4630      	mov	r0, r6
 800a842:	f7fe fec5 	bl	80095d0 <snprintf>
 800a846:	4285      	cmp	r5, r0
 800a848:	bfa2      	ittt	ge
 800a84a:	88e3      	ldrhge	r3, [r4, #6]
 800a84c:	181b      	addge	r3, r3, r0
 800a84e:	80e3      	strhge	r3, [r4, #6]
 800a850:	b004      	add	sp, #16
 800a852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a856:	463b      	mov	r3, r7
 800a858:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a85c:	4a03      	ldr	r2, [pc, #12]	; (800a86c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800a85e:	f8cd 8000 	str.w	r8, [sp]
 800a862:	e7ec      	b.n	800a83e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800a864:	080135e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, ip, sp}
 800a868:	080135d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, sp}
 800a86c:	080135e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, ip, sp}

0800a870 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800a870:	2200      	movs	r2, #0
 800a872:	6001      	str	r1, [r0, #0]
 800a874:	4910      	ldr	r1, [pc, #64]	; (800a8b8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 800a876:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 800a87a:	e9c0 2101 	strd	r2, r1, [r0, #4]
 800a87e:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800a882:	81c1      	strh	r1, [r0, #14]
 800a884:	213d      	movs	r1, #61	; 0x3d
 800a886:	8201      	strh	r1, [r0, #16]
 800a888:	f240 11ff 	movw	r1, #511	; 0x1ff
 800a88c:	8241      	strh	r1, [r0, #18]
 800a88e:	2101      	movs	r1, #1
 800a890:	7541      	strb	r1, [r0, #21]
 800a892:	2106      	movs	r1, #6
 800a894:	75c1      	strb	r1, [r0, #23]
 800a896:	4909      	ldr	r1, [pc, #36]	; (800a8bc <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 800a898:	7302      	strb	r2, [r0, #12]
 800a89a:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a89e:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800a8a2:	6201      	str	r1, [r0, #32]
 800a8a4:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800a8a8:	6241      	str	r1, [r0, #36]	; 0x24
 800a8aa:	211d      	movs	r1, #29
 800a8ac:	7582      	strb	r2, [r0, #22]
 800a8ae:	8501      	strh	r1, [r0, #40]	; 0x28
 800a8b0:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800a8b4:	4770      	bx	lr
 800a8b6:	bf00      	nop
 800a8b8:	0100aa03 	tsteq	r0, r3, lsl #20
 800a8bc:	00090005 	andeq	r0, r9, r5

0800a8c0 <WS28xxDmxParams::Load()>:
 800a8c0:	b508      	push	{r3, lr}
 800a8c2:	2300      	movs	r3, #0
 800a8c4:	4601      	mov	r1, r0
 800a8c6:	6043      	str	r3, [r0, #4]
 800a8c8:	6800      	ldr	r0, [r0, #0]
 800a8ca:	b120      	cbz	r0, 800a8d6 <WS28xxDmxParams::Load()+0x16>
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	3104      	adds	r1, #4
 800a8d0:	68db      	ldr	r3, [r3, #12]
 800a8d2:	4798      	blx	r3
 800a8d4:	2001      	movs	r0, #1
 800a8d6:	bd08      	pop	{r3, pc}

0800a8d8 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800a8d8:	6803      	ldr	r3, [r0, #0]
 800a8da:	b1d3      	cbz	r3, 800a912 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800a8dc:	2300      	movs	r3, #0
 800a8de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8e0:	460d      	mov	r5, r1
 800a8e2:	4616      	mov	r6, r2
 800a8e4:	4604      	mov	r4, r0
 800a8e6:	6043      	str	r3, [r0, #4]
 800a8e8:	4602      	mov	r2, r0
 800a8ea:	490a      	ldr	r1, [pc, #40]	; (800a914 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800a8ec:	4668      	mov	r0, sp
 800a8ee:	f005 fdc3 	bl	8010478 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a8f2:	4632      	mov	r2, r6
 800a8f4:	4629      	mov	r1, r5
 800a8f6:	4668      	mov	r0, sp
 800a8f8:	f005 fdc2 	bl	8010480 <ReadConfigFile::Read(char const*, unsigned int)>
 800a8fc:	4621      	mov	r1, r4
 800a8fe:	f851 0b04 	ldr.w	r0, [r1], #4
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	689b      	ldr	r3, [r3, #8]
 800a906:	4798      	blx	r3
 800a908:	4668      	mov	r0, sp
 800a90a:	f005 fdb8 	bl	801047e <ReadConfigFile::~ReadConfigFile()>
 800a90e:	b002      	add	sp, #8
 800a910:	bd70      	pop	{r4, r5, r6, pc}
 800a912:	4770      	bx	lr
 800a914:	0800ab61 	stmdaeq	r0, {r0, r5, r6, r8, r9, fp, sp, pc}

0800a918 <WS28xxDmxParams::callbackFunction(char const*)>:
 800a918:	b530      	push	{r4, r5, lr}
 800a91a:	2308      	movs	r3, #8
 800a91c:	460d      	mov	r5, r1
 800a91e:	b089      	sub	sp, #36	; 0x24
 800a920:	4604      	mov	r4, r0
 800a922:	9302      	str	r3, [sp, #8]
 800a924:	4628      	mov	r0, r5
 800a926:	4982      	ldr	r1, [pc, #520]	; (800ab30 <WS28xxDmxParams::callbackFunction(char const*)+0x218>)
 800a928:	446b      	add	r3, sp
 800a92a:	aa04      	add	r2, sp, #16
 800a92c:	f005 fddc 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a930:	b9a0      	cbnz	r0, 800a95c <WS28xxDmxParams::callbackFunction(char const*)+0x44>
 800a932:	9b02      	ldr	r3, [sp, #8]
 800a934:	3320      	adds	r3, #32
 800a936:	446b      	add	r3, sp
 800a938:	f803 0c10 	strb.w	r0, [r3, #-16]
 800a93c:	a804      	add	r0, sp, #16
 800a93e:	f000 fda1 	bl	800b484 <PixelType::GetType(char const*)>
 800a942:	280e      	cmp	r0, #14
 800a944:	bf08      	it	eq
 800a946:	2203      	moveq	r2, #3
 800a948:	6863      	ldr	r3, [r4, #4]
 800a94a:	bf19      	ittee	ne
 800a94c:	7220      	strbne	r0, [r4, #8]
 800a94e:	f043 0301 	orrne.w	r3, r3, #1
 800a952:	7222      	strbeq	r2, [r4, #8]
 800a954:	f023 0301 	biceq.w	r3, r3, #1
 800a958:	6063      	str	r3, [r4, #4]
 800a95a:	e033      	b.n	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a95c:	4628      	mov	r0, r5
 800a95e:	4975      	ldr	r1, [pc, #468]	; (800ab34 <WS28xxDmxParams::callbackFunction(char const*)+0x21c>)
 800a960:	f10d 0202 	add.w	r2, sp, #2
 800a964:	f005 fe7c 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a968:	b990      	cbnz	r0, 800a990 <WS28xxDmxParams::callbackFunction(char const*)+0x78>
 800a96a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a96e:	6863      	ldr	r3, [r4, #4]
 800a970:	1e51      	subs	r1, r2, #1
 800a972:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800a976:	bf2d      	iteet	cs
 800a978:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800a97c:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800a980:	f043 0302 	orrcc.w	r3, r3, #2
 800a984:	7262      	strbcs	r2, [r4, #9]
 800a986:	bf24      	itt	cs
 800a988:	72a0      	strbcs	r0, [r4, #10]
 800a98a:	f023 0302 	biccs.w	r3, r3, #2
 800a98e:	e7e3      	b.n	800a958 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800a990:	2303      	movs	r3, #3
 800a992:	4628      	mov	r0, r5
 800a994:	9302      	str	r3, [sp, #8]
 800a996:	4968      	ldr	r1, [pc, #416]	; (800ab38 <WS28xxDmxParams::callbackFunction(char const*)+0x220>)
 800a998:	ab02      	add	r3, sp, #8
 800a99a:	aa04      	add	r2, sp, #16
 800a99c:	f005 fda4 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a9a0:	b990      	cbnz	r0, 800a9c8 <WS28xxDmxParams::callbackFunction(char const*)+0xb0>
 800a9a2:	9b02      	ldr	r3, [sp, #8]
 800a9a4:	3320      	adds	r3, #32
 800a9a6:	446b      	add	r3, sp
 800a9a8:	f803 0c10 	strb.w	r0, [r3, #-16]
 800a9ac:	a804      	add	r0, sp, #16
 800a9ae:	f000 fd8d 	bl	800b4cc <PixelType::GetMap(char const*)>
 800a9b2:	6863      	ldr	r3, [r4, #4]
 800a9b4:	2806      	cmp	r0, #6
 800a9b6:	bf14      	ite	ne
 800a9b8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800a9bc:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800a9c0:	6063      	str	r3, [r4, #4]
 800a9c2:	75e0      	strb	r0, [r4, #23]
 800a9c4:	b009      	add	sp, #36	; 0x24
 800a9c6:	bd30      	pop	{r4, r5, pc}
 800a9c8:	4628      	mov	r0, r5
 800a9ca:	495c      	ldr	r1, [pc, #368]	; (800ab3c <WS28xxDmxParams::callbackFunction(char const*)+0x224>)
 800a9cc:	aa01      	add	r2, sp, #4
 800a9ce:	f005 fda4 	bl	801051a <Sscan::Float(char const*, char const*, float&)>
 800a9d2:	b960      	cbnz	r0, 800a9ee <WS28xxDmxParams::callbackFunction(char const*)+0xd6>
 800a9d4:	9801      	ldr	r0, [sp, #4]
 800a9d6:	f000 fddb 	bl	800b590 <PixelType::ConvertTxH(float)>
 800a9da:	6863      	ldr	r3, [r4, #4]
 800a9dc:	b120      	cbz	r0, 800a9e8 <WS28xxDmxParams::callbackFunction(char const*)+0xd0>
 800a9de:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a9e2:	6063      	str	r3, [r4, #4]
 800a9e4:	7620      	strb	r0, [r4, #24]
 800a9e6:	e7ed      	b.n	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800a9e8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a9ec:	e7f9      	b.n	800a9e2 <WS28xxDmxParams::callbackFunction(char const*)+0xca>
 800a9ee:	4628      	mov	r0, r5
 800a9f0:	4953      	ldr	r1, [pc, #332]	; (800ab40 <WS28xxDmxParams::callbackFunction(char const*)+0x228>)
 800a9f2:	aa01      	add	r2, sp, #4
 800a9f4:	f005 fd91 	bl	801051a <Sscan::Float(char const*, char const*, float&)>
 800a9f8:	b960      	cbnz	r0, 800aa14 <WS28xxDmxParams::callbackFunction(char const*)+0xfc>
 800a9fa:	9801      	ldr	r0, [sp, #4]
 800a9fc:	f000 fdc8 	bl	800b590 <PixelType::ConvertTxH(float)>
 800aa00:	6863      	ldr	r3, [r4, #4]
 800aa02:	b120      	cbz	r0, 800aa0e <WS28xxDmxParams::callbackFunction(char const*)+0xf6>
 800aa04:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800aa08:	6063      	str	r3, [r4, #4]
 800aa0a:	7660      	strb	r0, [r4, #25]
 800aa0c:	e7da      	b.n	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800aa0e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800aa12:	e7f9      	b.n	800aa08 <WS28xxDmxParams::callbackFunction(char const*)+0xf0>
 800aa14:	4628      	mov	r0, r5
 800aa16:	494b      	ldr	r1, [pc, #300]	; (800ab44 <WS28xxDmxParams::callbackFunction(char const*)+0x22c>)
 800aa18:	f10d 0202 	add.w	r2, sp, #2
 800aa1c:	f005 fe20 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aa20:	b998      	cbnz	r0, 800aa4a <WS28xxDmxParams::callbackFunction(char const*)+0x132>
 800aa22:	f240 25a6 	movw	r5, #678	; 0x2a6
 800aa26:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800aa2a:	6863      	ldr	r3, [r4, #4]
 800aa2c:	1e8a      	subs	r2, r1, #2
 800aa2e:	b292      	uxth	r2, r2
 800aa30:	42aa      	cmp	r2, r5
 800aa32:	bf81      	itttt	hi
 800aa34:	2201      	movhi	r2, #1
 800aa36:	75a0      	strbhi	r0, [r4, #22]
 800aa38:	7562      	strbhi	r2, [r4, #21]
 800aa3a:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800aa3e:	bf9c      	itt	ls
 800aa40:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800aa44:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800aa48:	e786      	b.n	800a958 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800aa4a:	4628      	mov	r0, r5
 800aa4c:	493e      	ldr	r1, [pc, #248]	; (800ab48 <WS28xxDmxParams::callbackFunction(char const*)+0x230>)
 800aa4e:	aa03      	add	r2, sp, #12
 800aa50:	f005 fe24 	bl	801069c <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800aa54:	b960      	cbnz	r0, 800aa70 <WS28xxDmxParams::callbackFunction(char const*)+0x158>
 800aa56:	9a03      	ldr	r2, [sp, #12]
 800aa58:	493c      	ldr	r1, [pc, #240]	; (800ab4c <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800aa5a:	6863      	ldr	r3, [r4, #4]
 800aa5c:	428a      	cmp	r2, r1
 800aa5e:	bf14      	ite	ne
 800aa60:	f043 0310 	orrne.w	r3, r3, #16
 800aa64:	f023 0310 	biceq.w	r3, r3, #16
 800aa68:	6063      	str	r3, [r4, #4]
 800aa6a:	f8c4 200e 	str.w	r2, [r4, #14]
 800aa6e:	e7a9      	b.n	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800aa70:	4628      	mov	r0, r5
 800aa72:	4937      	ldr	r1, [pc, #220]	; (800ab50 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800aa74:	f10d 0201 	add.w	r2, sp, #1
 800aa78:	f005 fe39 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aa7c:	b988      	cbnz	r0, 800aaa2 <WS28xxDmxParams::callbackFunction(char const*)+0x18a>
 800aa7e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800aa82:	6863      	ldr	r3, [r4, #4]
 800aa84:	1e4a      	subs	r2, r1, #1
 800aa86:	b2d2      	uxtb	r2, r2
 800aa88:	2afd      	cmp	r2, #253	; 0xfd
 800aa8a:	bf83      	ittte	hi
 800aa8c:	f023 0320 	bichi.w	r3, r3, #32
 800aa90:	6063      	strhi	r3, [r4, #4]
 800aa92:	23ff      	movhi	r3, #255	; 0xff
 800aa94:	f043 0320 	orrls.w	r3, r3, #32
 800aa98:	bf9a      	itte	ls
 800aa9a:	6063      	strls	r3, [r4, #4]
 800aa9c:	74a1      	strbls	r1, [r4, #18]
 800aa9e:	74a3      	strbhi	r3, [r4, #18]
 800aaa0:	e790      	b.n	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800aaa2:	4628      	mov	r0, r5
 800aaa4:	492b      	ldr	r1, [pc, #172]	; (800ab54 <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800aaa6:	f10d 0202 	add.w	r2, sp, #2
 800aaaa:	f005 fdd9 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aaae:	b9b8      	cbnz	r0, 800aae0 <WS28xxDmxParams::callbackFunction(char const*)+0x1c8>
 800aab0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800aab4:	6863      	ldr	r3, [r4, #4]
 800aab6:	1e91      	subs	r1, r2, #2
 800aab8:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800aabc:	bf83      	ittte	hi
 800aabe:	2201      	movhi	r2, #1
 800aac0:	72e2      	strbhi	r2, [r4, #11]
 800aac2:	2200      	movhi	r2, #0
 800aac4:	f8a4 200b 	strhls.w	r2, [r4, #11]
 800aac8:	bf92      	itee	ls
 800aaca:	f043 0304 	orrls.w	r3, r3, #4
 800aace:	7322      	strbhi	r2, [r4, #12]
 800aad0:	f023 0304 	bichi.w	r3, r3, #4
 800aad4:	e740      	b.n	800a958 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800aad6:	2201      	movs	r2, #1
 800aad8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800aadc:	8362      	strh	r2, [r4, #26]
 800aade:	e00e      	b.n	800aafe <WS28xxDmxParams::callbackFunction(char const*)+0x1e6>
 800aae0:	4628      	mov	r0, r5
 800aae2:	491d      	ldr	r1, [pc, #116]	; (800ab58 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800aae4:	f10d 0202 	add.w	r2, sp, #2
 800aae8:	f005 fdba 	bl	8010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aaec:	b940      	cbnz	r0, 800ab00 <WS28xxDmxParams::callbackFunction(char const*)+0x1e8>
 800aaee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800aaf2:	6863      	ldr	r3, [r4, #4]
 800aaf4:	2a00      	cmp	r2, #0
 800aaf6:	d0ee      	beq.n	800aad6 <WS28xxDmxParams::callbackFunction(char const*)+0x1be>
 800aaf8:	8362      	strh	r2, [r4, #26]
 800aafa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800aafe:	6063      	str	r3, [r4, #4]
 800ab00:	4628      	mov	r0, r5
 800ab02:	4916      	ldr	r1, [pc, #88]	; (800ab5c <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800ab04:	f10d 0201 	add.w	r2, sp, #1
 800ab08:	f005 fdf1 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab0c:	2800      	cmp	r0, #0
 800ab0e:	f47f af59 	bne.w	800a9c4 <WS28xxDmxParams::callbackFunction(char const*)+0xac>
 800ab12:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ab16:	6863      	ldr	r3, [r4, #4]
 800ab18:	1e51      	subs	r1, r2, #1
 800ab1a:	2904      	cmp	r1, #4
 800ab1c:	bf99      	ittee	ls
 800ab1e:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800ab22:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800ab26:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800ab2a:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800ab2e:	e713      	b.n	800a958 <WS28xxDmxParams::callbackFunction(char const*)+0x40>
 800ab30:	08014b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, lr}
 800ab34:	08014b91 	stmdaeq	r1, {r0, r4, r7, r8, r9, fp, lr}
 800ab38:	08014b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, lr}
 800ab3c:	08014b9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, fp, lr}
 800ab40:	08014ba3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, fp, lr}
 800ab44:	08014b56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, fp, lr}
 800ab48:	08014b47 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, fp, lr}
 800ab4c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ab50:	08014b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, lr}
 800ab54:	08014c81 	stmdaeq	r1, {r0, r7, sl, fp, lr}
 800ab58:	08014bf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, fp, lr}
 800ab5c:	08014be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, lr}

0800ab60 <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800ab60:	f7ff beda 	b.w	800a918 <WS28xxDmxParams::callbackFunction(char const*)>

0800ab64 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800ab64:	b570      	push	{r4, r5, r6, lr}
 800ab66:	4604      	mov	r4, r0
 800ab68:	4615      	mov	r5, r2
 800ab6a:	461e      	mov	r6, r3
 800ab6c:	b086      	sub	sp, #24
 800ab6e:	3004      	adds	r0, #4
 800ab70:	2900      	cmp	r1, #0
 800ab72:	f000 808e 	beq.w	800ac92 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x12e>
 800ab76:	2227      	movs	r2, #39	; 0x27
 800ab78:	f006 fad7 	bl	801112a <memmove>
 800ab7c:	4633      	mov	r3, r6
 800ab7e:	462a      	mov	r2, r5
 800ab80:	4974      	ldr	r1, [pc, #464]	; (800ad54 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800ab82:	a803      	add	r0, sp, #12
 800ab84:	f005 fbd8 	bl	8010338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ab88:	7a20      	ldrb	r0, [r4, #8]
 800ab8a:	f000 fc6f 	bl	800b46c <PixelType::GetType(pixel::Type)>
 800ab8e:	6863      	ldr	r3, [r4, #4]
 800ab90:	4602      	mov	r2, r0
 800ab92:	4971      	ldr	r1, [pc, #452]	; (800ad58 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800ab94:	f003 0301 	and.w	r3, r3, #1
 800ab98:	a803      	add	r0, sp, #12
 800ab9a:	f7ff fdff 	bl	800a79c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ab9e:	6863      	ldr	r3, [r4, #4]
 800aba0:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800aba4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800aba8:	496c      	ldr	r1, [pc, #432]	; (800ad5c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800abaa:	a803      	add	r0, sp, #12
 800abac:	f7ff fdce 	bl	800a74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800abb0:	496b      	ldr	r1, [pc, #428]	; (800ad60 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800abb2:	a803      	add	r0, sp, #12
 800abb4:	f005 fc46 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800abb8:	6863      	ldr	r3, [r4, #4]
 800abba:	059e      	lsls	r6, r3, #22
 800abbc:	d403      	bmi.n	800abc6 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x62>
 800abbe:	7a20      	ldrb	r0, [r4, #8]
 800abc0:	f000 f94c 	bl	800ae5c <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800abc4:	75e0      	strb	r0, [r4, #23]
 800abc6:	7de0      	ldrb	r0, [r4, #23]
 800abc8:	f000 fca8 	bl	800b51c <PixelType::GetMap(pixel::Map)>
 800abcc:	6863      	ldr	r3, [r4, #4]
 800abce:	4602      	mov	r2, r0
 800abd0:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800abd4:	4963      	ldr	r1, [pc, #396]	; (800ad64 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800abd6:	a803      	add	r0, sp, #12
 800abd8:	f7ff fde0 	bl	800a79c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800abdc:	6863      	ldr	r3, [r4, #4]
 800abde:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800abe2:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800abe6:	d011      	beq.n	800ac0c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800abe8:	f10d 020b 	add.w	r2, sp, #11
 800abec:	7a20      	ldrb	r0, [r4, #8]
 800abee:	f10d 010a 	add.w	r1, sp, #10
 800abf2:	f000 f942 	bl	800ae7a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800abf6:	6863      	ldr	r3, [r4, #4]
 800abf8:	055d      	lsls	r5, r3, #21
 800abfa:	bf5c      	itt	pl
 800abfc:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800ac00:	7622      	strbpl	r2, [r4, #24]
 800ac02:	0518      	lsls	r0, r3, #20
 800ac04:	bf5c      	itt	pl
 800ac06:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800ac0a:	7663      	strbpl	r3, [r4, #25]
 800ac0c:	4956      	ldr	r1, [pc, #344]	; (800ad68 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800ac0e:	a803      	add	r0, sp, #12
 800ac10:	f005 fc18 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800ac14:	7e20      	ldrb	r0, [r4, #24]
 800ac16:	f000 fc8d 	bl	800b534 <PixelType::ConvertTxH(unsigned char)>
 800ac1a:	2502      	movs	r5, #2
 800ac1c:	6863      	ldr	r3, [r4, #4]
 800ac1e:	4602      	mov	r2, r0
 800ac20:	4952      	ldr	r1, [pc, #328]	; (800ad6c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800ac22:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800ac26:	9500      	str	r5, [sp, #0]
 800ac28:	a803      	add	r0, sp, #12
 800ac2a:	f7ff fddf 	bl	800a7ec <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ac2e:	7e60      	ldrb	r0, [r4, #25]
 800ac30:	f000 fc80 	bl	800b534 <PixelType::ConvertTxH(unsigned char)>
 800ac34:	6863      	ldr	r3, [r4, #4]
 800ac36:	4602      	mov	r2, r0
 800ac38:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800ac3c:	494c      	ldr	r1, [pc, #304]	; (800ad70 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800ac3e:	9500      	str	r5, [sp, #0]
 800ac40:	a803      	add	r0, sp, #12
 800ac42:	f7ff fdd3 	bl	800a7ec <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ac46:	494b      	ldr	r1, [pc, #300]	; (800ad74 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800ac48:	a803      	add	r0, sp, #12
 800ac4a:	f005 fbfb 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800ac4e:	6863      	ldr	r3, [r4, #4]
 800ac50:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800ac54:	4948      	ldr	r1, [pc, #288]	; (800ad78 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800ac56:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800ac5a:	a803      	add	r0, sp, #12
 800ac5c:	f7ff fd76 	bl	800a74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ac60:	4946      	ldr	r1, [pc, #280]	; (800ad7c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800ac62:	a803      	add	r0, sp, #12
 800ac64:	f005 fbee 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800ac68:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800ac6c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ac70:	42a9      	cmp	r1, r5
 800ac72:	d224      	bcs.n	800acbe <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15a>
 800ac74:	9803      	ldr	r0, [sp, #12]
 800ac76:	1a6d      	subs	r5, r5, r1
 800ac78:	4408      	add	r0, r1
 800ac7a:	6861      	ldr	r1, [r4, #4]
 800ac7c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ac80:	06c9      	lsls	r1, r1, #27
 800ac82:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800ac86:	d40b      	bmi.n	800aca0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13c>
 800ac88:	b962      	cbnz	r2, 800aca4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x140>
 800ac8a:	9300      	str	r3, [sp, #0]
 800ac8c:	4a3c      	ldr	r2, [pc, #240]	; (800ad80 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800ac8e:	4b3d      	ldr	r3, [pc, #244]	; (800ad84 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800ac90:	e00b      	b.n	800acaa <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800ac92:	6823      	ldr	r3, [r4, #0]
 800ac94:	4601      	mov	r1, r0
 800ac96:	681a      	ldr	r2, [r3, #0]
 800ac98:	4618      	mov	r0, r3
 800ac9a:	68d2      	ldr	r2, [r2, #12]
 800ac9c:	4790      	blx	r2
 800ac9e:	e76d      	b.n	800ab7c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x18>
 800aca0:	2a00      	cmp	r2, #0
 800aca2:	d053      	beq.n	800ad4c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1e8>
 800aca4:	9300      	str	r3, [sp, #0]
 800aca6:	4a38      	ldr	r2, [pc, #224]	; (800ad88 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800aca8:	4b36      	ldr	r3, [pc, #216]	; (800ad84 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800acaa:	4629      	mov	r1, r5
 800acac:	f7fe fc90 	bl	80095d0 <snprintf>
 800acb0:	4285      	cmp	r5, r0
 800acb2:	bfa2      	ittt	ge
 800acb4:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800acb8:	18c0      	addge	r0, r0, r3
 800acba:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800acbe:	4933      	ldr	r1, [pc, #204]	; (800ad8c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800acc0:	a803      	add	r0, sp, #12
 800acc2:	f005 fbbf 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800acc6:	6863      	ldr	r3, [r4, #4]
 800acc8:	7ca2      	ldrb	r2, [r4, #18]
 800acca:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800acce:	4930      	ldr	r1, [pc, #192]	; (800ad90 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800acd0:	a803      	add	r0, sp, #12
 800acd2:	f7ff fd13 	bl	800a6fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800acd6:	492f      	ldr	r1, [pc, #188]	; (800ad94 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800acd8:	a803      	add	r0, sp, #12
 800acda:	f005 fbb3 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800acde:	6863      	ldr	r3, [r4, #4]
 800ace0:	f8b4 200b 	ldrh.w	r2, [r4, #11]
 800ace4:	492c      	ldr	r1, [pc, #176]	; (800ad98 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800ace6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800acea:	a803      	add	r0, sp, #12
 800acec:	f7ff fd2e 	bl	800a74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800acf0:	6863      	ldr	r3, [r4, #4]
 800acf2:	8b62      	ldrh	r2, [r4, #26]
 800acf4:	f3c3 3300 	ubfx	r3, r3, #12, #1
 800acf8:	4928      	ldr	r1, [pc, #160]	; (800ad9c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800acfa:	a803      	add	r0, sp, #12
 800acfc:	f7ff fd26 	bl	800a74c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ad00:	4927      	ldr	r1, [pc, #156]	; (800ada0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800ad02:	a803      	add	r0, sp, #12
 800ad04:	f005 fb9e 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800ad08:	6863      	ldr	r3, [r4, #4]
 800ad0a:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800ad0e:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800ad12:	4924      	ldr	r1, [pc, #144]	; (800ada4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800ad14:	a803      	add	r0, sp, #12
 800ad16:	f7ff fcf1 	bl	800a6fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ad1a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ad1e:	b17b      	cbz	r3, 800ad40 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1dc>
 800ad20:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ad24:	9b03      	ldr	r3, [sp, #12]
 800ad26:	4413      	add	r3, r2
 800ad28:	227d      	movs	r2, #125	; 0x7d
 800ad2a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ad2e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ad32:	9903      	ldr	r1, [sp, #12]
 800ad34:	54ca      	strb	r2, [r1, r3]
 800ad36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ad3a:	3301      	adds	r3, #1
 800ad3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ad40:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ad44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ad46:	601a      	str	r2, [r3, #0]
 800ad48:	b006      	add	sp, #24
 800ad4a:	bd70      	pop	{r4, r5, r6, pc}
 800ad4c:	9300      	str	r3, [sp, #0]
 800ad4e:	4a16      	ldr	r2, [pc, #88]	; (800ada8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800ad50:	4b0c      	ldr	r3, [pc, #48]	; (800ad84 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800ad52:	e7aa      	b.n	800acaa <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x146>
 800ad54:	08014bab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, fp, lr}
 800ad58:	08014b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, lr}
 800ad5c:	08014b91 	stmdaeq	r1, {r0, r4, r7, r8, r9, fp, lr}
 800ad60:	080135ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, ip, sp}
 800ad64:	08014b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, lr}
 800ad68:	08013601 	stmdaeq	r1, {r0, r9, sl, ip, sp}
 800ad6c:	08014b9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, fp, lr}
 800ad70:	08014ba3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, fp, lr}
 800ad74:	08013617 	stmdaeq	r1, {r0, r1, r2, r4, r9, sl, ip, sp}
 800ad78:	08014b56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, fp, lr}
 800ad7c:	08013620 	stmdaeq	r1, {r5, r9, sl, ip, sp}
 800ad80:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 800ad84:	08014b47 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, fp, lr}
 800ad88:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 800ad8c:	08013632 	stmdaeq	r1, {r1, r4, r5, r9, sl, ip, sp}
 800ad90:	08014b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, lr}
 800ad94:	08013640 	stmdaeq	r1, {r6, r9, sl, ip, sp}
 800ad98:	08014c81 	stmdaeq	r1, {r0, r7, sl, fp, lr}
 800ad9c:	08014bf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, fp, lr}
 800ada0:	08013644 	stmdaeq	r1, {r2, r6, r9, sl, ip, sp}
 800ada4:	08014be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, lr}
 800ada8:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

0800adac <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800adac:	b513      	push	{r0, r1, r4, lr}
 800adae:	6804      	ldr	r4, [r0, #0]
 800adb0:	b914      	cbnz	r4, 800adb8 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800adb2:	601c      	str	r4, [r3, #0]
 800adb4:	b002      	add	sp, #8
 800adb6:	bd10      	pop	{r4, pc}
 800adb8:	9300      	str	r3, [sp, #0]
 800adba:	4613      	mov	r3, r2
 800adbc:	460a      	mov	r2, r1
 800adbe:	2100      	movs	r1, #0
 800adc0:	f7ff fed0 	bl	800ab64 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800adc4:	e7f6      	b.n	800adb4 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800adc6 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800adc6:	6843      	ldr	r3, [r0, #4]
 800adc8:	07da      	lsls	r2, r3, #31
 800adca:	bf44      	itt	mi
 800adcc:	7a02      	ldrbmi	r2, [r0, #8]
 800adce:	600a      	strmi	r2, [r1, #0]
 800add0:	079a      	lsls	r2, r3, #30
 800add2:	d505      	bpl.n	800ade0 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800add4:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800add8:	2a00      	cmp	r2, #0
 800adda:	bf08      	it	eq
 800addc:	22aa      	moveq	r2, #170	; 0xaa
 800adde:	604a      	str	r2, [r1, #4]
 800ade0:	059a      	lsls	r2, r3, #22
 800ade2:	bf44      	itt	mi
 800ade4:	7dc2      	ldrbmi	r2, [r0, #23]
 800ade6:	608a      	strmi	r2, [r1, #8]
 800ade8:	055a      	lsls	r2, r3, #21
 800adea:	bf44      	itt	mi
 800adec:	7e02      	ldrbmi	r2, [r0, #24]
 800adee:	740a      	strbmi	r2, [r1, #16]
 800adf0:	051a      	lsls	r2, r3, #20
 800adf2:	bf44      	itt	mi
 800adf4:	7e42      	ldrbmi	r2, [r0, #25]
 800adf6:	744a      	strbmi	r2, [r1, #17]
 800adf8:	06da      	lsls	r2, r3, #27
 800adfa:	bf44      	itt	mi
 800adfc:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800ae00:	60ca      	strmi	r2, [r1, #12]
 800ae02:	069a      	lsls	r2, r3, #26
 800ae04:	bf44      	itt	mi
 800ae06:	7c82      	ldrbmi	r2, [r0, #18]
 800ae08:	748a      	strbmi	r2, [r1, #18]
 800ae0a:	075a      	lsls	r2, r3, #29
 800ae0c:	d50b      	bpl.n	800ae26 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x60>
 800ae0e:	7ac2      	ldrb	r2, [r0, #11]
 800ae10:	b510      	push	{r4, lr}
 800ae12:	7b04      	ldrb	r4, [r0, #12]
 800ae14:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800ae18:	838a      	strh	r2, [r1, #28]
 800ae1a:	05da      	lsls	r2, r3, #23
 800ae1c:	bf44      	itt	mi
 800ae1e:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800ae22:	618b      	strmi	r3, [r1, #24]
 800ae24:	bd10      	pop	{r4, pc}
 800ae26:	05db      	lsls	r3, r3, #23
 800ae28:	bf44      	itt	mi
 800ae2a:	f8b0 3015 	ldrhmi.w	r3, [r0, #21]
 800ae2e:	618b      	strmi	r3, [r1, #24]
 800ae30:	4770      	bx	lr

0800ae32 <WS28xxDmxParams::Dump()>:
 800ae32:	4770      	bx	lr

0800ae34 <WS28xxDmx::Print()>:
 800ae34:	b510      	push	{r4, lr}
 800ae36:	4604      	mov	r4, r0
 800ae38:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ae3a:	f000 fbf5 	bl	800b628 <WS28xx::Print()>
 800ae3e:	4805      	ldr	r0, [pc, #20]	; (800ae54 <WS28xxDmx::Print()+0x20>)
 800ae40:	f7fe fbb6 	bl	80095b0 <printf>
 800ae44:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800ae48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ae4c:	4802      	ldr	r0, [pc, #8]	; (800ae58 <WS28xxDmx::Print()+0x24>)
 800ae4e:	f7fe bbaf 	b.w	80095b0 <printf>
 800ae52:	bf00      	nop
 800ae54:	08013651 	stmdaeq	r1, {r0, r4, r6, r9, sl, ip, sp}
 800ae58:	08013667 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, ip, sp}

0800ae5c <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800ae5c:	f020 0308 	bic.w	r3, r0, #8
 800ae60:	2b01      	cmp	r3, #1
 800ae62:	d006      	beq.n	800ae72 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800ae64:	2808      	cmp	r0, #8
 800ae66:	d006      	beq.n	800ae76 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800ae68:	280a      	cmp	r0, #10
 800ae6a:	bf14      	ite	ne
 800ae6c:	2002      	movne	r0, #2
 800ae6e:	2005      	moveq	r0, #5
 800ae70:	4770      	bx	lr
 800ae72:	2000      	movs	r0, #0
 800ae74:	4770      	bx	lr
 800ae76:	2004      	movs	r0, #4
 800ae78:	4770      	bx	lr

0800ae7a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800ae7a:	23c0      	movs	r3, #192	; 0xc0
 800ae7c:	2803      	cmp	r0, #3
 800ae7e:	700b      	strb	r3, [r1, #0]
 800ae80:	d006      	beq.n	800ae90 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800ae82:	3808      	subs	r0, #8
 800ae84:	2803      	cmp	r0, #3
 800ae86:	bf34      	ite	cc
 800ae88:	23fc      	movcc	r3, #252	; 0xfc
 800ae8a:	23f0      	movcs	r3, #240	; 0xf0
 800ae8c:	7013      	strb	r3, [r2, #0]
 800ae8e:	4770      	bx	lr
 800ae90:	23f8      	movs	r3, #248	; 0xf8
 800ae92:	e7fb      	b.n	800ae8c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800ae94 <PixelConfiguration::Validate(unsigned int&)>:
 800ae94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae96:	e9d0 5300 	ldrd	r5, r3, [r0]
 800ae9a:	2d07      	cmp	r5, #7
 800ae9c:	4604      	mov	r4, r0
 800ae9e:	6882      	ldr	r2, [r0, #8]
 800aea0:	d129      	bne.n	800aef6 <PixelConfiguration::Validate(unsigned int&)+0x62>
 800aea2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800aea6:	bf28      	it	cs
 800aea8:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800aeac:	6043      	str	r3, [r0, #4]
 800aeae:	2304      	movs	r3, #4
 800aeb0:	600b      	str	r3, [r1, #0]
 800aeb2:	2301      	movs	r3, #1
 800aeb4:	2a06      	cmp	r2, #6
 800aeb6:	74e3      	strb	r3, [r4, #19]
 800aeb8:	d103      	bne.n	800aec2 <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800aeba:	4628      	mov	r0, r5
 800aebc:	f7ff ffce 	bl	800ae5c <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800aec0:	60a0      	str	r0, [r4, #8]
 800aec2:	7c63      	ldrb	r3, [r4, #17]
 800aec4:	7c22      	ldrb	r2, [r4, #16]
 800aec6:	4628      	mov	r0, r5
 800aec8:	429a      	cmp	r2, r3
 800aeca:	bf28      	it	cs
 800aecc:	2300      	movcs	r3, #0
 800aece:	f10d 0207 	add.w	r2, sp, #7
 800aed2:	bf28      	it	cs
 800aed4:	8223      	strhcs	r3, [r4, #16]
 800aed6:	f10d 0106 	add.w	r1, sp, #6
 800aeda:	f7ff ffce 	bl	800ae7a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800aede:	7c23      	ldrb	r3, [r4, #16]
 800aee0:	b913      	cbnz	r3, 800aee8 <PixelConfiguration::Validate(unsigned int&)+0x54>
 800aee2:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800aee6:	7423      	strb	r3, [r4, #16]
 800aee8:	7c63      	ldrb	r3, [r4, #17]
 800aeea:	b913      	cbnz	r3, 800aef2 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800aeec:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800aef0:	7463      	strb	r3, [r4, #17]
 800aef2:	4b1a      	ldr	r3, [pc, #104]	; (800af5c <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800aef4:	e020      	b.n	800af38 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800aef6:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800aefa:	bf28      	it	cs
 800aefc:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800af00:	6043      	str	r3, [r0, #4]
 800af02:	2303      	movs	r3, #3
 800af04:	600b      	str	r3, [r1, #0]
 800af06:	f1a5 030b 	sub.w	r3, r5, #11
 800af0a:	2b01      	cmp	r3, #1
 800af0c:	d806      	bhi.n	800af1c <PixelConfiguration::Validate(unsigned int&)+0x88>
 800af0e:	7c83      	ldrb	r3, [r0, #18]
 800af10:	2b1f      	cmp	r3, #31
 800af12:	d81d      	bhi.n	800af50 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800af14:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800af18:	74a3      	strb	r3, [r4, #18]
 800af1a:	e000      	b.n	800af1e <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800af1c:	b9d5      	cbnz	r5, 800af54 <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800af1e:	2300      	movs	r3, #0
 800af20:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800af24:	2a06      	cmp	r2, #6
 800af26:	bf08      	it	eq
 800af28:	60a3      	streq	r3, [r4, #8]
 800af2a:	2d0d      	cmp	r5, #13
 800af2c:	74e3      	strb	r3, [r4, #19]
 800af2e:	8221      	strh	r1, [r4, #16]
 800af30:	68e3      	ldr	r3, [r4, #12]
 800af32:	d109      	bne.n	800af48 <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800af34:	b913      	cbnz	r3, 800af3c <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800af36:	4b0a      	ldr	r3, [pc, #40]	; (800af60 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800af38:	60e3      	str	r3, [r4, #12]
 800af3a:	e003      	b.n	800af44 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800af3c:	4a09      	ldr	r2, [pc, #36]	; (800af64 <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800af3e:	4293      	cmp	r3, r2
 800af40:	d900      	bls.n	800af44 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800af42:	60e2      	str	r2, [r4, #12]
 800af44:	b003      	add	sp, #12
 800af46:	bd30      	pop	{r4, r5, pc}
 800af48:	2b00      	cmp	r3, #0
 800af4a:	d0f4      	beq.n	800af36 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800af4c:	4a06      	ldr	r2, [pc, #24]	; (800af68 <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800af4e:	e7f6      	b.n	800af3e <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800af50:	23ff      	movs	r3, #255	; 0xff
 800af52:	e7e1      	b.n	800af18 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800af54:	2d0d      	cmp	r5, #13
 800af56:	d0e2      	beq.n	800af1e <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800af58:	e7ab      	b.n	800aeb2 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800af5a:	bf00      	nop
 800af5c:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800af60:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800af64:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800af68:	017d7840 	cmneq	sp, r0, asr #16

0800af6c <PixelConfiguration::Dump()>:
 800af6c:	4770      	bx	lr
	...

0800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>:
 800af70:	b507      	push	{r0, r1, r2, lr}
 800af72:	b2cb      	uxtb	r3, r1
 800af74:	9300      	str	r3, [sp, #0]
 800af76:	f3c1 4207 	ubfx	r2, r1, #16, #8
 800af7a:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800af7e:	4601      	mov	r1, r0
 800af80:	4803      	ldr	r0, [pc, #12]	; (800af90 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]+0x20>)
 800af82:	6800      	ldr	r0, [r0, #0]
 800af84:	f000 fb92 	bl	800b6ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800af88:	b003      	add	sp, #12
 800af8a:	f85d fb04 	ldr.w	pc, [sp], #4
 800af8e:	bf00      	nop
 800af90:	20000724 	andcs	r0, r0, r4, lsr #14

0800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800af94:	b538      	push	{r3, r4, r5, lr}
 800af96:	2400      	movs	r4, #0
 800af98:	4d05      	ldr	r5, [pc, #20]	; (800afb0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>)
 800af9a:	682b      	ldr	r3, [r5, #0]
 800af9c:	42a3      	cmp	r3, r4
 800af9e:	d905      	bls.n	800afac <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x18>
 800afa0:	4620      	mov	r0, r4
 800afa2:	2100      	movs	r1, #0
 800afa4:	f7ff ffe4 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800afa8:	3401      	adds	r4, #1
 800afaa:	e7f6      	b.n	800af9a <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x6>
 800afac:	bd38      	pop	{r3, r4, r5, pc}
 800afae:	bf00      	nop
 800afb0:	20000720 	andcs	r0, r0, r0, lsr #14

0800afb4 <PixelPatterns::PixelPatterns(unsigned int)>:
 800afb4:	2901      	cmp	r1, #1
 800afb6:	bf28      	it	cs
 800afb8:	2101      	movcs	r1, #1
 800afba:	4b08      	ldr	r3, [pc, #32]	; (800afdc <PixelPatterns::PixelPatterns(unsigned int)+0x28>)
 800afbc:	4a08      	ldr	r2, [pc, #32]	; (800afe0 <PixelPatterns::PixelPatterns(unsigned int)+0x2c>)
 800afbe:	681b      	ldr	r3, [r3, #0]
 800afc0:	6013      	str	r3, [r2, #0]
 800afc2:	4a08      	ldr	r2, [pc, #32]	; (800afe4 <PixelPatterns::PixelPatterns(unsigned int)+0x30>)
 800afc4:	6011      	str	r1, [r2, #0]
 800afc6:	685a      	ldr	r2, [r3, #4]
 800afc8:	4b07      	ldr	r3, [pc, #28]	; (800afe8 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800afca:	601a      	str	r2, [r3, #0]
 800afcc:	2200      	movs	r2, #0
 800afce:	4b07      	ldr	r3, [pc, #28]	; (800afec <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800afd0:	6819      	ldr	r1, [r3, #0]
 800afd2:	4b07      	ldr	r3, [pc, #28]	; (800aff0 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800afd4:	61da      	str	r2, [r3, #28]
 800afd6:	6019      	str	r1, [r3, #0]
 800afd8:	619a      	str	r2, [r3, #24]
 800afda:	4770      	bx	lr
 800afdc:	20000730 	andcs	r0, r0, r0, lsr r7
 800afe0:	20000724 	andcs	r0, r0, r4, lsr #14
 800afe4:	20000718 	andcs	r0, r0, r8, lsl r7
 800afe8:	20000720 	andcs	r0, r0, r0, lsr #14
 800afec:	200097a4 	andcs	r9, r0, r4, lsr #15
 800aff0:	200006f8 	strdcs	r0, [r0], -r8

0800aff4 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800aff4:	b570      	push	{r4, r5, r6, lr}
 800aff6:	460e      	mov	r6, r1
 800aff8:	4615      	mov	r5, r2
 800affa:	461c      	mov	r4, r3
 800affc:	f7ff ffca 	bl	800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b000:	2301      	movs	r3, #1
 800b002:	4905      	ldr	r1, [pc, #20]	; (800b018 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x24>)
 800b004:	22ff      	movs	r2, #255	; 0xff
 800b006:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b00a:	61cb      	str	r3, [r1, #28]
 800b00c:	2300      	movs	r3, #0
 800b00e:	604d      	str	r5, [r1, #4]
 800b010:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800b014:	618c      	str	r4, [r1, #24]
 800b016:	bd70      	pop	{r4, r5, r6, pc}
 800b018:	200006f8 	strdcs	r0, [r0], -r8

0800b01c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b01c:	b570      	push	{r4, r5, r6, lr}
 800b01e:	460e      	mov	r6, r1
 800b020:	461c      	mov	r4, r3
 800b022:	4615      	mov	r5, r2
 800b024:	f7ff ffb6 	bl	800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b028:	2302      	movs	r3, #2
 800b02a:	4908      	ldr	r1, [pc, #32]	; (800b04c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800b02c:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b030:	61cb      	str	r3, [r1, #28]
 800b032:	9b04      	ldr	r3, [sp, #16]
 800b034:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800b038:	604b      	str	r3, [r1, #4]
 800b03a:	4b05      	ldr	r3, [pc, #20]	; (800b050 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800b03c:	681b      	ldr	r3, [r3, #0]
 800b03e:	610b      	str	r3, [r1, #16]
 800b040:	2300      	movs	r3, #0
 800b042:	614b      	str	r3, [r1, #20]
 800b044:	9b05      	ldr	r3, [sp, #20]
 800b046:	618b      	str	r3, [r1, #24]
 800b048:	bd70      	pop	{r4, r5, r6, pc}
 800b04a:	bf00      	nop
 800b04c:	200006f8 	strdcs	r0, [r0], -r8
 800b050:	20000720 	andcs	r0, r0, r0, lsr #14

0800b054 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b054:	b570      	push	{r4, r5, r6, lr}
 800b056:	460e      	mov	r6, r1
 800b058:	461d      	mov	r5, r3
 800b05a:	4614      	mov	r4, r2
 800b05c:	f7ff ff9a 	bl	800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b060:	2303      	movs	r3, #3
 800b062:	4907      	ldr	r1, [pc, #28]	; (800b080 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800b064:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b068:	61cb      	str	r3, [r1, #28]
 800b06a:	4b06      	ldr	r3, [pc, #24]	; (800b084 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800b06c:	604d      	str	r5, [r1, #4]
 800b06e:	681b      	ldr	r3, [r3, #0]
 800b070:	608c      	str	r4, [r1, #8]
 800b072:	610b      	str	r3, [r1, #16]
 800b074:	2300      	movs	r3, #0
 800b076:	614b      	str	r3, [r1, #20]
 800b078:	9b04      	ldr	r3, [sp, #16]
 800b07a:	618b      	str	r3, [r1, #24]
 800b07c:	bd70      	pop	{r4, r5, r6, pc}
 800b07e:	bf00      	nop
 800b080:	200006f8 	strdcs	r0, [r0], -r8
 800b084:	20000720 	andcs	r0, r0, r0, lsr #14

0800b088 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800b088:	b570      	push	{r4, r5, r6, lr}
 800b08a:	460e      	mov	r6, r1
 800b08c:	461d      	mov	r5, r3
 800b08e:	4614      	mov	r4, r2
 800b090:	f7ff ff80 	bl	800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b094:	2304      	movs	r3, #4
 800b096:	4912      	ldr	r1, [pc, #72]	; (800b0e0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>)
 800b098:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b09c:	604d      	str	r5, [r1, #4]
 800b09e:	4d11      	ldr	r5, [pc, #68]	; (800b0e4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800b0a0:	61cb      	str	r3, [r1, #28]
 800b0a2:	6828      	ldr	r0, [r5, #0]
 800b0a4:	608c      	str	r4, [r1, #8]
 800b0a6:	1e43      	subs	r3, r0, #1
 800b0a8:	005b      	lsls	r3, r3, #1
 800b0aa:	b29b      	uxth	r3, r3
 800b0ac:	610b      	str	r3, [r1, #16]
 800b0ae:	2300      	movs	r3, #0
 800b0b0:	4c0d      	ldr	r4, [pc, #52]	; (800b0e8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800b0b2:	614b      	str	r3, [r1, #20]
 800b0b4:	6823      	ldr	r3, [r4, #0]
 800b0b6:	b993      	cbnz	r3, 800b0de <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800b0b8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800b0bc:	4298      	cmp	r0, r3
 800b0be:	bf2c      	ite	cs
 800b0c0:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800b0c4:	0080      	lslcc	r0, r0, #2
 800b0c6:	f005 ff73 	bl	8010fb0 <operator new[](unsigned int)>
 800b0ca:	2200      	movs	r2, #0
 800b0cc:	682b      	ldr	r3, [r5, #0]
 800b0ce:	6020      	str	r0, [r4, #0]
 800b0d0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800b0d4:	4298      	cmp	r0, r3
 800b0d6:	d002      	beq.n	800b0de <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x56>
 800b0d8:	f840 2b04 	str.w	r2, [r0], #4
 800b0dc:	e7fa      	b.n	800b0d4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800b0de:	bd70      	pop	{r4, r5, r6, pc}
 800b0e0:	200006f8 	strdcs	r0, [r0], -r8
 800b0e4:	20000720 	andcs	r0, r0, r0, lsr #14
 800b0e8:	2000071c 	andcs	r0, r0, ip, lsl r7

0800b0ec <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800b0ec:	b570      	push	{r4, r5, r6, lr}
 800b0ee:	460e      	mov	r6, r1
 800b0f0:	461c      	mov	r4, r3
 800b0f2:	4615      	mov	r5, r2
 800b0f4:	f7ff ff4e 	bl	800af94 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800b0f8:	2305      	movs	r3, #5
 800b0fa:	4907      	ldr	r1, [pc, #28]	; (800b118 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800b0fc:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b100:	61cb      	str	r3, [r1, #28]
 800b102:	9b05      	ldr	r3, [sp, #20]
 800b104:	e9c1 5402 	strd	r5, r4, [r1, #8]
 800b108:	604b      	str	r3, [r1, #4]
 800b10a:	9b04      	ldr	r3, [sp, #16]
 800b10c:	610b      	str	r3, [r1, #16]
 800b10e:	2300      	movs	r3, #0
 800b110:	614b      	str	r3, [r1, #20]
 800b112:	9b06      	ldr	r3, [sp, #24]
 800b114:	618b      	str	r3, [r1, #24]
 800b116:	bd70      	pop	{r4, r5, r6, pc}
 800b118:	200006f8 	strdcs	r0, [r0], -r8

0800b11c <PixelPatterns::Wheel(unsigned char)>:
 800b11c:	43c9      	mvns	r1, r1
 800b11e:	b2c9      	uxtb	r1, r1
 800b120:	2954      	cmp	r1, #84	; 0x54
 800b122:	d809      	bhi.n	800b138 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800b124:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800b128:	3801      	subs	r0, #1
 800b12a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b12e:	b2c3      	uxtb	r3, r0
 800b130:	b2c8      	uxtb	r0, r1
 800b132:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800b136:	4770      	bx	lr
 800b138:	29a9      	cmp	r1, #169	; 0xa9
 800b13a:	d80b      	bhi.n	800b154 <PixelPatterns::Wheel(unsigned char)+0x38>
 800b13c:	3955      	subs	r1, #85	; 0x55
 800b13e:	b2c9      	uxtb	r1, r1
 800b140:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800b144:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800b148:	b2c3      	uxtb	r3, r0
 800b14a:	1e48      	subs	r0, r1, #1
 800b14c:	b2c0      	uxtb	r0, r0
 800b14e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800b152:	4770      	bx	lr
 800b154:	3156      	adds	r1, #86	; 0x56
 800b156:	b2c9      	uxtb	r1, r1
 800b158:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800b15c:	3801      	subs	r0, #1
 800b15e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b162:	b2c3      	uxtb	r3, r0
 800b164:	b2c8      	uxtb	r0, r1
 800b166:	0400      	lsls	r0, r0, #16
 800b168:	e7f1      	b.n	800b14e <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800b16c <PixelPatterns::Increment(unsigned int)>:
 800b16c:	4a0d      	ldr	r2, [pc, #52]	; (800b1a4 <PixelPatterns::Increment(unsigned int)+0x38>)
 800b16e:	b510      	push	{r4, lr}
 800b170:	014c      	lsls	r4, r1, #5
 800b172:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800b176:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800b17a:	b930      	cbnz	r0, 800b18a <PixelPatterns::Increment(unsigned int)+0x1e>
 800b17c:	690a      	ldr	r2, [r1, #16]
 800b17e:	3301      	adds	r3, #1
 800b180:	4293      	cmp	r3, r2
 800b182:	bf18      	it	ne
 800b184:	4618      	movne	r0, r3
 800b186:	6148      	str	r0, [r1, #20]
 800b188:	bd10      	pop	{r4, pc}
 800b18a:	b92b      	cbnz	r3, 800b198 <PixelPatterns::Increment(unsigned int)+0x2c>
 800b18c:	4422      	add	r2, r4
 800b18e:	6913      	ldr	r3, [r2, #16]
 800b190:	3b01      	subs	r3, #1
 800b192:	b29b      	uxth	r3, r3
 800b194:	6153      	str	r3, [r2, #20]
 800b196:	e7f7      	b.n	800b188 <PixelPatterns::Increment(unsigned int)+0x1c>
 800b198:	3b01      	subs	r3, #1
 800b19a:	614b      	str	r3, [r1, #20]
 800b19c:	2b00      	cmp	r3, #0
 800b19e:	d1f3      	bne.n	800b188 <PixelPatterns::Increment(unsigned int)+0x1c>
 800b1a0:	e7f4      	b.n	800b18c <PixelPatterns::Increment(unsigned int)+0x20>
 800b1a2:	bf00      	nop
 800b1a4:	200006f8 	strdcs	r0, [r0], -r8

0800b1a8 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800b1a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1ac:	4604      	mov	r4, r0
 800b1ae:	460d      	mov	r5, r1
 800b1b0:	2600      	movs	r6, #0
 800b1b2:	4b10      	ldr	r3, [pc, #64]	; (800b1f4 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>)
 800b1b4:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800b1f8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>
 800b1b8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800b1bc:	695f      	ldr	r7, [r3, #20]
 800b1be:	f8d8 1000 	ldr.w	r1, [r8]
 800b1c2:	b2b2      	uxth	r2, r6
 800b1c4:	4291      	cmp	r1, r2
 800b1c6:	f106 0601 	add.w	r6, r6, #1
 800b1ca:	d90c      	bls.n	800b1e6 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x3e>
 800b1cc:	0213      	lsls	r3, r2, #8
 800b1ce:	fbb3 f3f1 	udiv	r3, r3, r1
 800b1d2:	443b      	add	r3, r7
 800b1d4:	b2d9      	uxtb	r1, r3
 800b1d6:	4620      	mov	r0, r4
 800b1d8:	f7ff ffa0 	bl	800b11c <PixelPatterns::Wheel(unsigned char)>
 800b1dc:	4601      	mov	r1, r0
 800b1de:	4610      	mov	r0, r2
 800b1e0:	f7ff fec6 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b1e4:	e7eb      	b.n	800b1be <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x16>
 800b1e6:	4629      	mov	r1, r5
 800b1e8:	4620      	mov	r0, r4
 800b1ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b1ee:	f7ff bfbd 	b.w	800b16c <PixelPatterns::Increment(unsigned int)>
 800b1f2:	bf00      	nop
 800b1f4:	200006f8 	strdcs	r0, [r0], -r8
 800b1f8:	20000720 	andcs	r0, r0, r0, lsr #14

0800b1fc <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800b1fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b200:	4605      	mov	r5, r0
 800b202:	460c      	mov	r4, r1
 800b204:	f04f 0b00 	mov.w	fp, #0
 800b208:	4b12      	ldr	r3, [pc, #72]	; (800b254 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800b20a:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800b258 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800b20e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800b212:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800b216:	f8df a044 	ldr.w	sl, [pc, #68]	; 800b25c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800b21a:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800b21e:	f8d9 3000 	ldr.w	r3, [r9]
 800b222:	fa1f f08b 	uxth.w	r0, fp
 800b226:	4283      	cmp	r3, r0
 800b228:	d90d      	bls.n	800b246 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4a>
 800b22a:	eb08 0300 	add.w	r3, r8, r0
 800b22e:	fb0a f303 	mul.w	r3, sl, r3
 800b232:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800b236:	bf94      	ite	ls
 800b238:	4631      	movls	r1, r6
 800b23a:	4639      	movhi	r1, r7
 800b23c:	f7ff fe98 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b240:	f10b 0b01 	add.w	fp, fp, #1
 800b244:	e7eb      	b.n	800b21e <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800b246:	4621      	mov	r1, r4
 800b248:	4628      	mov	r0, r5
 800b24a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b24e:	f7ff bf8d 	b.w	800b16c <PixelPatterns::Increment(unsigned int)>
 800b252:	bf00      	nop
 800b254:	200006f8 	strdcs	r0, [r0], -r8
 800b258:	20000720 	andcs	r0, r0, r0, lsr #14
 800b25c:	aaaaaaab 	bge	6ab5d10 <__stack_size+0x6ab4510>

0800b260 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800b260:	b538      	push	{r3, r4, r5, lr}
 800b262:	4605      	mov	r5, r0
 800b264:	460c      	mov	r4, r1
 800b266:	4b06      	ldr	r3, [pc, #24]	; (800b280 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x20>)
 800b268:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800b26c:	6899      	ldr	r1, [r3, #8]
 800b26e:	6958      	ldr	r0, [r3, #20]
 800b270:	f7ff fe7e 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b274:	4621      	mov	r1, r4
 800b276:	4628      	mov	r0, r5
 800b278:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b27c:	f7ff bf76 	b.w	800b16c <PixelPatterns::Increment(unsigned int)>
 800b280:	200006f8 	strdcs	r0, [r0], -r8

0800b284 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800b284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b288:	460d      	mov	r5, r1
 800b28a:	f04f 0900 	mov.w	r9, #0
 800b28e:	4a27      	ldr	r2, [pc, #156]	; (800b32c <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800b290:	b085      	sub	sp, #20
 800b292:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800b296:	e9d2 7604 	ldrd	r7, r6, [r2, #16]
 800b29a:	f8d2 a008 	ldr.w	sl, [r2, #8]
 800b29e:	00b3      	lsls	r3, r6, #2
 800b2a0:	f8df b08c 	ldr.w	fp, [pc, #140]	; 800b330 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800b2a4:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800b334 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800b2a8:	9002      	str	r0, [sp, #8]
 800b2aa:	9301      	str	r3, [sp, #4]
 800b2ac:	1bbf      	subs	r7, r7, r6
 800b2ae:	f8db 1000 	ldr.w	r1, [fp]
 800b2b2:	fa1f f489 	uxth.w	r4, r9
 800b2b6:	42a1      	cmp	r1, r4
 800b2b8:	d930      	bls.n	800b31c <PixelPatterns::ScannerUpdate(unsigned int)+0x98>
 800b2ba:	42a6      	cmp	r6, r4
 800b2bc:	d10b      	bne.n	800b2d6 <PixelPatterns::ScannerUpdate(unsigned int)+0x52>
 800b2be:	4651      	mov	r1, sl
 800b2c0:	4630      	mov	r0, r6
 800b2c2:	f7ff fe55 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b2c6:	f8d8 1000 	ldr.w	r1, [r8]
 800b2ca:	9b01      	ldr	r3, [sp, #4]
 800b2cc:	f841 a003 	str.w	sl, [r1, r3]
 800b2d0:	f109 0901 	add.w	r9, r9, #1
 800b2d4:	e7eb      	b.n	800b2ae <PixelPatterns::ScannerUpdate(unsigned int)+0x2a>
 800b2d6:	42a7      	cmp	r7, r4
 800b2d8:	d108      	bne.n	800b2ec <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800b2da:	4651      	mov	r1, sl
 800b2dc:	4638      	mov	r0, r7
 800b2de:	f7ff fe47 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b2e2:	f8d8 1000 	ldr.w	r1, [r8]
 800b2e6:	f841 a024 	str.w	sl, [r1, r4, lsl #2]
 800b2ea:	e7f1      	b.n	800b2d0 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800b2ec:	f8d8 1000 	ldr.w	r1, [r8]
 800b2f0:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800b2f4:	f3c0 2146 	ubfx	r1, r0, #9, #7
 800b2f8:	f3c0 4c46 	ubfx	ip, r0, #17, #7
 800b2fc:	0209      	lsls	r1, r1, #8
 800b2fe:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800b302:	f3c0 0046 	ubfx	r0, r0, #1, #7
 800b306:	4301      	orrs	r1, r0
 800b308:	4620      	mov	r0, r4
 800b30a:	9103      	str	r1, [sp, #12]
 800b30c:	f7ff fe30 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b310:	f8d8 0000 	ldr.w	r0, [r8]
 800b314:	9903      	ldr	r1, [sp, #12]
 800b316:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
 800b31a:	e7d9      	b.n	800b2d0 <PixelPatterns::ScannerUpdate(unsigned int)+0x4c>
 800b31c:	4629      	mov	r1, r5
 800b31e:	9802      	ldr	r0, [sp, #8]
 800b320:	b005      	add	sp, #20
 800b322:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b326:	f7ff bf21 	b.w	800b16c <PixelPatterns::Increment(unsigned int)>
 800b32a:	bf00      	nop
 800b32c:	200006f8 	strdcs	r0, [r0], -r8
 800b330:	20000720 	andcs	r0, r0, r0, lsr #14
 800b334:	2000071c 	andcs	r0, r0, ip, lsl r7

0800b338 <PixelPatterns::FadeUpdate(unsigned int)>:
 800b338:	4a21      	ldr	r2, [pc, #132]	; (800b3c0 <PixelPatterns::FadeUpdate(unsigned int)+0x88>)
 800b33a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b33e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800b342:	4605      	mov	r5, r0
 800b344:	e9d2 3002 	ldrd	r3, r0, [r2, #8]
 800b348:	460c      	mov	r4, r1
 800b34a:	e9d2 6104 	ldrd	r6, r1, [r2, #16]
 800b34e:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800b352:	434a      	muls	r2, r1
 800b354:	1a77      	subs	r7, r6, r1
 800b356:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 800b35a:	fb07 220c 	mla	r2, r7, ip, r2
 800b35e:	fbb2 f2f6 	udiv	r2, r2, r6
 800b362:	0212      	lsls	r2, r2, #8
 800b364:	fa1f fc82 	uxth.w	ip, r2
 800b368:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800b36c:	434a      	muls	r2, r1
 800b36e:	f3c3 4e07 	ubfx	lr, r3, #16, #8
 800b372:	fb07 220e 	mla	r2, r7, lr, r2
 800b376:	fbb2 f2f6 	udiv	r2, r2, r6
 800b37a:	0412      	lsls	r2, r2, #16
 800b37c:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 800b380:	ea4c 0202 	orr.w	r2, ip, r2
 800b384:	fa5f fc83 	uxtb.w	ip, r3
 800b388:	b2c3      	uxtb	r3, r0
 800b38a:	434b      	muls	r3, r1
 800b38c:	fb07 330c 	mla	r3, r7, ip, r3
 800b390:	fbb3 f3f6 	udiv	r3, r3, r6
 800b394:	2700      	movs	r7, #0
 800b396:	b2db      	uxtb	r3, r3
 800b398:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800b3c4 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>
 800b39c:	ea42 0603 	orr.w	r6, r2, r3
 800b3a0:	f8d8 3000 	ldr.w	r3, [r8]
 800b3a4:	42bb      	cmp	r3, r7
 800b3a6:	d905      	bls.n	800b3b4 <PixelPatterns::FadeUpdate(unsigned int)+0x7c>
 800b3a8:	4638      	mov	r0, r7
 800b3aa:	4631      	mov	r1, r6
 800b3ac:	f7ff fde0 	bl	800af70 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .constprop.0]>
 800b3b0:	3701      	adds	r7, #1
 800b3b2:	e7f5      	b.n	800b3a0 <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 800b3b4:	4621      	mov	r1, r4
 800b3b6:	4628      	mov	r0, r5
 800b3b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b3bc:	f7ff bed6 	b.w	800b16c <PixelPatterns::Increment(unsigned int)>
 800b3c0:	200006f8 	strdcs	r0, [r0], -r8
 800b3c4:	20000720 	andcs	r0, r0, r0, lsr #14

0800b3c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800b3c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3ca:	4b12      	ldr	r3, [pc, #72]	; (800b414 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800b3cc:	014e      	lsls	r6, r1, #5
 800b3ce:	599c      	ldr	r4, [r3, r6]
 800b3d0:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800b3d4:	686f      	ldr	r7, [r5, #4]
 800b3d6:	1b14      	subs	r4, r2, r4
 800b3d8:	42bc      	cmp	r4, r7
 800b3da:	d319      	bcc.n	800b410 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800b3dc:	519a      	str	r2, [r3, r6]
 800b3de:	69eb      	ldr	r3, [r5, #28]
 800b3e0:	3b01      	subs	r3, #1
 800b3e2:	2b04      	cmp	r3, #4
 800b3e4:	d814      	bhi.n	800b410 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800b3e6:	e8df f003 	tbb	[pc, r3]
 800b3ea:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800b3ee:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800b3f2:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800b3f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3f8:	f7ff ff00 	bl	800b1fc <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800b3fc:	e7fa      	b.n	800b3f4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800b3fe:	f7ff ff2f 	bl	800b260 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800b402:	e7f7      	b.n	800b3f4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800b404:	f7ff ff3e 	bl	800b284 <PixelPatterns::ScannerUpdate(unsigned int)>
 800b408:	e7f4      	b.n	800b3f4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800b40a:	f7ff ff95 	bl	800b338 <PixelPatterns::FadeUpdate(unsigned int)>
 800b40e:	e7f1      	b.n	800b3f4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800b410:	2000      	movs	r0, #0
 800b412:	e7f0      	b.n	800b3f6 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800b414:	200006f8 	strdcs	r0, [r0], -r8

0800b418 <PixelPatterns::Run()>:
 800b418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b41c:	4605      	mov	r5, r0
 800b41e:	f006 ffbd 	bl	801239c <gd32_spi_dma_tx_is_active()>
 800b422:	4604      	mov	r4, r0
 800b424:	b9c8      	cbnz	r0, 800b45a <PixelPatterns::Run()+0x42>
 800b426:	4606      	mov	r6, r0
 800b428:	4b0d      	ldr	r3, [pc, #52]	; (800b460 <PixelPatterns::Run()+0x48>)
 800b42a:	f8df 8038 	ldr.w	r8, [pc, #56]	; 800b464 <PixelPatterns::Run()+0x4c>
 800b42e:	681f      	ldr	r7, [r3, #0]
 800b430:	f8d8 3000 	ldr.w	r3, [r8]
 800b434:	b2f1      	uxtb	r1, r6
 800b436:	428b      	cmp	r3, r1
 800b438:	f106 0601 	add.w	r6, r6, #1
 800b43c:	d906      	bls.n	800b44c <PixelPatterns::Run()+0x34>
 800b43e:	463a      	mov	r2, r7
 800b440:	4628      	mov	r0, r5
 800b442:	f7ff ffc1 	bl	800b3c8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800b446:	4304      	orrs	r4, r0
 800b448:	b2e4      	uxtb	r4, r4
 800b44a:	e7f1      	b.n	800b430 <PixelPatterns::Run()+0x18>
 800b44c:	b12c      	cbz	r4, 800b45a <PixelPatterns::Run()+0x42>
 800b44e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b452:	4b05      	ldr	r3, [pc, #20]	; (800b468 <PixelPatterns::Run()+0x50>)
 800b454:	6818      	ldr	r0, [r3, #0]
 800b456:	f000 bf69 	b.w	800c32c <WS28xx::Update()>
 800b45a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b45e:	bf00      	nop
 800b460:	200097a4 	andcs	r9, r0, r4, lsr #15
 800b464:	20000718 	andcs	r0, r0, r8, lsl r7
 800b468:	20000724 	andcs	r0, r0, r4, lsr #14

0800b46c <PixelType::GetType(pixel::Type)>:
 800b46c:	280d      	cmp	r0, #13
 800b46e:	bfda      	itte	le
 800b470:	4b02      	ldrle	r3, [pc, #8]	; (800b47c <PixelType::GetType(pixel::Type)+0x10>)
 800b472:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800b476:	4802      	ldrgt	r0, [pc, #8]	; (800b480 <PixelType::GetType(pixel::Type)+0x14>)
 800b478:	4770      	bx	lr
 800b47a:	bf00      	nop
 800b47c:	080136b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp}
 800b480:	0801368b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, ip, sp}

0800b484 <PixelType::GetType(char const*)>:
 800b484:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b486:	4604      	mov	r4, r0
 800b488:	2000      	movs	r0, #0
 800b48a:	490f      	ldr	r1, [pc, #60]	; (800b4c8 <PixelType::GetType(char const*)+0x44>)
 800b48c:	1e66      	subs	r6, r4, #1
 800b48e:	1e4d      	subs	r5, r1, #1
 800b490:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800b494:	461f      	mov	r7, r3
 800b496:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800b49a:	2a19      	cmp	r2, #25
 800b49c:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800b4a0:	bf98      	it	ls
 800b4a2:	f103 0720 	addls.w	r7, r3, #32
 800b4a6:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800b4aa:	f1bc 0f19 	cmp.w	ip, #25
 800b4ae:	bf98      	it	ls
 800b4b0:	3220      	addls	r2, #32
 800b4b2:	42ba      	cmp	r2, r7
 800b4b4:	d102      	bne.n	800b4bc <PixelType::GetType(char const*)+0x38>
 800b4b6:	2b00      	cmp	r3, #0
 800b4b8:	d1ea      	bne.n	800b490 <PixelType::GetType(char const*)+0xc>
 800b4ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4bc:	3001      	adds	r0, #1
 800b4be:	280e      	cmp	r0, #14
 800b4c0:	f101 0108 	add.w	r1, r1, #8
 800b4c4:	d1e2      	bne.n	800b48c <PixelType::GetType(char const*)+0x8>
 800b4c6:	e7f8      	b.n	800b4ba <PixelType::GetType(char const*)+0x36>
 800b4c8:	080136b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp}

0800b4cc <PixelType::GetMap(char const*)>:
 800b4cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4ce:	4605      	mov	r5, r0
 800b4d0:	2000      	movs	r0, #0
 800b4d2:	4b11      	ldr	r3, [pc, #68]	; (800b518 <PixelType::GetMap(char const*)+0x4c>)
 800b4d4:	1e5c      	subs	r4, r3, #1
 800b4d6:	1e6e      	subs	r6, r5, #1
 800b4d8:	f103 0c02 	add.w	ip, r3, #2
 800b4dc:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800b4e0:	4617      	mov	r7, r2
 800b4e2:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800b4e6:	2919      	cmp	r1, #25
 800b4e8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800b4ec:	bf98      	it	ls
 800b4ee:	f102 0720 	addls.w	r7, r2, #32
 800b4f2:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800b4f6:	f1be 0f19 	cmp.w	lr, #25
 800b4fa:	bf98      	it	ls
 800b4fc:	3120      	addls	r1, #32
 800b4fe:	42b9      	cmp	r1, r7
 800b500:	d005      	beq.n	800b50e <PixelType::GetMap(char const*)+0x42>
 800b502:	3001      	adds	r0, #1
 800b504:	2806      	cmp	r0, #6
 800b506:	f103 0304 	add.w	r3, r3, #4
 800b50a:	d1e3      	bne.n	800b4d4 <PixelType::GetMap(char const*)+0x8>
 800b50c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b50e:	2a00      	cmp	r2, #0
 800b510:	d0fc      	beq.n	800b50c <PixelType::GetMap(char const*)+0x40>
 800b512:	4564      	cmp	r4, ip
 800b514:	d1e2      	bne.n	800b4dc <PixelType::GetMap(char const*)+0x10>
 800b516:	e7f9      	b.n	800b50c <PixelType::GetMap(char const*)+0x40>
 800b518:	0801369d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, ip, sp}

0800b51c <PixelType::GetMap(pixel::Map)>:
 800b51c:	2805      	cmp	r0, #5
 800b51e:	bfda      	itte	le
 800b520:	4b02      	ldrle	r3, [pc, #8]	; (800b52c <PixelType::GetMap(pixel::Map)+0x10>)
 800b522:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800b526:	4802      	ldrgt	r0, [pc, #8]	; (800b530 <PixelType::GetMap(pixel::Map)+0x14>)
 800b528:	4770      	bx	lr
 800b52a:	bf00      	nop
 800b52c:	0801369d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, ip, sp}
 800b530:	08013693 	stmdaeq	r1, {r0, r1, r4, r7, r9, sl, ip, sp}

0800b534 <PixelType::ConvertTxH(unsigned char)>:
 800b534:	28f0      	cmp	r0, #240	; 0xf0
 800b536:	d010      	beq.n	800b55a <PixelType::ConvertTxH(unsigned char)+0x26>
 800b538:	d807      	bhi.n	800b54a <PixelType::ConvertTxH(unsigned char)+0x16>
 800b53a:	28c0      	cmp	r0, #192	; 0xc0
 800b53c:	d00f      	beq.n	800b55e <PixelType::ConvertTxH(unsigned char)+0x2a>
 800b53e:	28e0      	cmp	r0, #224	; 0xe0
 800b540:	d00f      	beq.n	800b562 <PixelType::ConvertTxH(unsigned char)+0x2e>
 800b542:	2880      	cmp	r0, #128	; 0x80
 800b544:	d113      	bne.n	800b56e <PixelType::ConvertTxH(unsigned char)+0x3a>
 800b546:	480b      	ldr	r0, [pc, #44]	; (800b574 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800b548:	4770      	bx	lr
 800b54a:	28fc      	cmp	r0, #252	; 0xfc
 800b54c:	d00b      	beq.n	800b566 <PixelType::ConvertTxH(unsigned char)+0x32>
 800b54e:	28fe      	cmp	r0, #254	; 0xfe
 800b550:	d00b      	beq.n	800b56a <PixelType::ConvertTxH(unsigned char)+0x36>
 800b552:	28f8      	cmp	r0, #248	; 0xf8
 800b554:	d10b      	bne.n	800b56e <PixelType::ConvertTxH(unsigned char)+0x3a>
 800b556:	4808      	ldr	r0, [pc, #32]	; (800b578 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800b558:	4770      	bx	lr
 800b55a:	4808      	ldr	r0, [pc, #32]	; (800b57c <PixelType::ConvertTxH(unsigned char)+0x48>)
 800b55c:	4770      	bx	lr
 800b55e:	4808      	ldr	r0, [pc, #32]	; (800b580 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800b560:	4770      	bx	lr
 800b562:	4808      	ldr	r0, [pc, #32]	; (800b584 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800b564:	4770      	bx	lr
 800b566:	4808      	ldr	r0, [pc, #32]	; (800b588 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800b568:	4770      	bx	lr
 800b56a:	4808      	ldr	r0, [pc, #32]	; (800b58c <PixelType::ConvertTxH(unsigned char)+0x58>)
 800b56c:	4770      	bx	lr
 800b56e:	2000      	movs	r0, #0
 800b570:	4770      	bx	lr
 800b572:	bf00      	nop
 800b574:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800b578:	3f480000 	svccc	0x00480000
 800b57c:	3f200000 	svccc	0x00200000
 800b580:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800b584:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800b588:	3f700000 	svccc	0x00700000
 800b58c:	3f8c0000 	svccc	0x008c0000

0800b590 <PixelType::ConvertTxH(float)>:
 800b590:	b510      	push	{r4, lr}
 800b592:	491d      	ldr	r1, [pc, #116]	; (800b608 <PixelType::ConvertTxH(float)+0x78>)
 800b594:	4604      	mov	r4, r0
 800b596:	f7fc fc57 	bl	8007e48 <__aeabi_fcmplt>
 800b59a:	bb30      	cbnz	r0, 800b5ea <PixelType::ConvertTxH(float)+0x5a>
 800b59c:	4620      	mov	r0, r4
 800b59e:	491b      	ldr	r1, [pc, #108]	; (800b60c <PixelType::ConvertTxH(float)+0x7c>)
 800b5a0:	f7fc fc52 	bl	8007e48 <__aeabi_fcmplt>
 800b5a4:	bb18      	cbnz	r0, 800b5ee <PixelType::ConvertTxH(float)+0x5e>
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	4919      	ldr	r1, [pc, #100]	; (800b610 <PixelType::ConvertTxH(float)+0x80>)
 800b5aa:	f7fc fc4d 	bl	8007e48 <__aeabi_fcmplt>
 800b5ae:	bb00      	cbnz	r0, 800b5f2 <PixelType::ConvertTxH(float)+0x62>
 800b5b0:	4620      	mov	r0, r4
 800b5b2:	4918      	ldr	r1, [pc, #96]	; (800b614 <PixelType::ConvertTxH(float)+0x84>)
 800b5b4:	f7fc fc48 	bl	8007e48 <__aeabi_fcmplt>
 800b5b8:	b9e8      	cbnz	r0, 800b5f6 <PixelType::ConvertTxH(float)+0x66>
 800b5ba:	4620      	mov	r0, r4
 800b5bc:	4916      	ldr	r1, [pc, #88]	; (800b618 <PixelType::ConvertTxH(float)+0x88>)
 800b5be:	f7fc fc43 	bl	8007e48 <__aeabi_fcmplt>
 800b5c2:	b9d0      	cbnz	r0, 800b5fa <PixelType::ConvertTxH(float)+0x6a>
 800b5c4:	4620      	mov	r0, r4
 800b5c6:	4915      	ldr	r1, [pc, #84]	; (800b61c <PixelType::ConvertTxH(float)+0x8c>)
 800b5c8:	f7fc fc3e 	bl	8007e48 <__aeabi_fcmplt>
 800b5cc:	b9b8      	cbnz	r0, 800b5fe <PixelType::ConvertTxH(float)+0x6e>
 800b5ce:	4620      	mov	r0, r4
 800b5d0:	4913      	ldr	r1, [pc, #76]	; (800b620 <PixelType::ConvertTxH(float)+0x90>)
 800b5d2:	f7fc fc39 	bl	8007e48 <__aeabi_fcmplt>
 800b5d6:	b9a0      	cbnz	r0, 800b602 <PixelType::ConvertTxH(float)+0x72>
 800b5d8:	4620      	mov	r0, r4
 800b5da:	4912      	ldr	r1, [pc, #72]	; (800b624 <PixelType::ConvertTxH(float)+0x94>)
 800b5dc:	f7fc fc34 	bl	8007e48 <__aeabi_fcmplt>
 800b5e0:	2800      	cmp	r0, #0
 800b5e2:	bf14      	ite	ne
 800b5e4:	20fe      	movne	r0, #254	; 0xfe
 800b5e6:	2000      	moveq	r0, #0
 800b5e8:	bd10      	pop	{r4, pc}
 800b5ea:	2000      	movs	r0, #0
 800b5ec:	e7fc      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b5ee:	2080      	movs	r0, #128	; 0x80
 800b5f0:	e7fa      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b5f2:	20c0      	movs	r0, #192	; 0xc0
 800b5f4:	e7f8      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b5f6:	20e0      	movs	r0, #224	; 0xe0
 800b5f8:	e7f6      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b5fa:	20f0      	movs	r0, #240	; 0xf0
 800b5fc:	e7f4      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b5fe:	20f8      	movs	r0, #248	; 0xf8
 800b600:	e7f2      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b602:	20fc      	movs	r0, #252	; 0xfc
 800b604:	e7f0      	b.n	800b5e8 <PixelType::ConvertTxH(float)+0x58>
 800b606:	bf00      	nop
 800b608:	3da00000 	stccc	0, cr0, [r0]
 800b60c:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800b610:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800b614:	3f0c0000 	svccc	0x000c0000
 800b618:	3f340000 	svccc	0x00340000
 800b61c:	3f5c0000 	svccc	0x005c0000
 800b620:	3f820000 	svccc	0x00820000
 800b624:	3f960000 	svccc	0x00960000

0800b628 <WS28xx::Print()>:
 800b628:	b513      	push	{r0, r1, r4, lr}
 800b62a:	4604      	mov	r4, r0
 800b62c:	4819      	ldr	r0, [pc, #100]	; (800b694 <WS28xx::Print()+0x6c>)
 800b62e:	f7fd ffbf 	bl	80095b0 <printf>
 800b632:	6820      	ldr	r0, [r4, #0]
 800b634:	f7ff ff1a 	bl	800b46c <PixelType::GetType(pixel::Type)>
 800b638:	6822      	ldr	r2, [r4, #0]
 800b63a:	4601      	mov	r1, r0
 800b63c:	4816      	ldr	r0, [pc, #88]	; (800b698 <WS28xx::Print()+0x70>)
 800b63e:	f7fd ffb7 	bl	80095b0 <printf>
 800b642:	6861      	ldr	r1, [r4, #4]
 800b644:	4815      	ldr	r0, [pc, #84]	; (800b69c <WS28xx::Print()+0x74>)
 800b646:	f7fd ffb3 	bl	80095b0 <printf>
 800b64a:	7ca3      	ldrb	r3, [r4, #18]
 800b64c:	b1fb      	cbz	r3, 800b68e <WS28xx::Print()+0x66>
 800b64e:	68a0      	ldr	r0, [r4, #8]
 800b650:	f7ff ff64 	bl	800b51c <PixelType::GetMap(pixel::Map)>
 800b654:	68a2      	ldr	r2, [r4, #8]
 800b656:	4601      	mov	r1, r0
 800b658:	4811      	ldr	r0, [pc, #68]	; (800b6a0 <WS28xx::Print()+0x78>)
 800b65a:	f7fd ffa9 	bl	80095b0 <printf>
 800b65e:	7c20      	ldrb	r0, [r4, #16]
 800b660:	f7ff ff68 	bl	800b534 <PixelType::ConvertTxH(unsigned char)>
 800b664:	f7fc ff26 	bl	80084b4 <__aeabi_f2d>
 800b668:	460b      	mov	r3, r1
 800b66a:	7c21      	ldrb	r1, [r4, #16]
 800b66c:	4602      	mov	r2, r0
 800b66e:	9100      	str	r1, [sp, #0]
 800b670:	480c      	ldr	r0, [pc, #48]	; (800b6a4 <WS28xx::Print()+0x7c>)
 800b672:	f7fd ff9d 	bl	80095b0 <printf>
 800b676:	7c60      	ldrb	r0, [r4, #17]
 800b678:	f7ff ff5c 	bl	800b534 <PixelType::ConvertTxH(unsigned char)>
 800b67c:	f7fc ff1a 	bl	80084b4 <__aeabi_f2d>
 800b680:	460b      	mov	r3, r1
 800b682:	7c61      	ldrb	r1, [r4, #17]
 800b684:	4602      	mov	r2, r0
 800b686:	9100      	str	r1, [sp, #0]
 800b688:	4807      	ldr	r0, [pc, #28]	; (800b6a8 <WS28xx::Print()+0x80>)
 800b68a:	f7fd ff91 	bl	80095b0 <printf>
 800b68e:	b002      	add	sp, #8
 800b690:	bd10      	pop	{r4, pc}
 800b692:	bf00      	nop
 800b694:	08013725 	stmdaeq	r1, {r0, r2, r5, r8, r9, sl, ip, sp}
 800b698:	08013737 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
 800b69c:	0801374b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, ip, sp}
 800b6a0:	0801375a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip, sp}
 800b6a4:	0801376e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, ip, sp}
 800b6a8:	08013786 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, ip, sp}

0800b6ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
 800b6ac:	b530      	push	{r4, r5, lr}
 800b6ae:	7c84      	ldrb	r4, [r0, #18]
 800b6b0:	f89d c00c 	ldrb.w	ip, [sp, #12]
 800b6b4:	b994      	cbnz	r4, 800b6dc <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 800b6b6:	6804      	ldr	r4, [r0, #0]
 800b6b8:	f1a4 0e0b 	sub.w	lr, r4, #11
 800b6bc:	f1be 0f01 	cmp.w	lr, #1
 800b6c0:	d93d      	bls.n	800b73e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x92>
 800b6c2:	b9d4      	cbnz	r4, 800b6fa <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x4e>
 800b6c4:	6944      	ldr	r4, [r0, #20]
 800b6c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b6ca:	5462      	strb	r2, [r4, r1]
 800b6cc:	6942      	ldr	r2, [r0, #20]
 800b6ce:	440a      	add	r2, r1
 800b6d0:	7053      	strb	r3, [r2, #1]
 800b6d2:	6943      	ldr	r3, [r0, #20]
 800b6d4:	4419      	add	r1, r3
 800b6d6:	f881 c002 	strb.w	ip, [r1, #2]
 800b6da:	bd30      	pop	{r4, r5, pc}
 800b6dc:	6884      	ldr	r4, [r0, #8]
 800b6de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800b6e2:	00c9      	lsls	r1, r1, #3
 800b6e4:	2c05      	cmp	r4, #5
 800b6e6:	f200 812d 	bhi.w	800b944 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x298>
 800b6ea:	e8df f014 	tbh	[pc, r4, lsl #1]
 800b6ee:	02ed012b 	rsceq	r0, sp, #-1073741814	; 0xc000000a
 800b6f2:	04140384 	ldreq	r0, [r4], #-900	; 0xfffffc7c
 800b6f6:	0202003b 	andeq	r0, r2, #59	; 0x3b
 800b6fa:	ea6f 0e9c 	mvn.w	lr, ip, lsr #2
 800b6fe:	ea6f 1413 	mvn.w	r4, r3, lsr #4
 800b702:	f082 05c0 	eor.w	r5, r2, #192	; 0xc0
 800b706:	f00e 0e30 	and.w	lr, lr, #48	; 0x30
 800b70a:	f004 040c 	and.w	r4, r4, #12
 800b70e:	ea4e 1e95 	orr.w	lr, lr, r5, lsr #6
 800b712:	ea4e 0e04 	orr.w	lr, lr, r4
 800b716:	6944      	ldr	r4, [r0, #20]
 800b718:	3101      	adds	r1, #1
 800b71a:	f06e 0e3f 	orn	lr, lr, #63	; 0x3f
 800b71e:	f804 e021 	strb.w	lr, [r4, r1, lsl #2]
 800b722:	6944      	ldr	r4, [r0, #20]
 800b724:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800b728:	f884 c001 	strb.w	ip, [r4, #1]
 800b72c:	6944      	ldr	r4, [r0, #20]
 800b72e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800b732:	70a3      	strb	r3, [r4, #2]
 800b734:	6943      	ldr	r3, [r0, #20]
 800b736:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800b73a:	70ca      	strb	r2, [r1, #3]
 800b73c:	bd30      	pop	{r4, r5, pc}
 800b73e:	6944      	ldr	r4, [r0, #20]
 800b740:	7cc5      	ldrb	r5, [r0, #19]
 800b742:	3101      	adds	r1, #1
 800b744:	f804 5021 	strb.w	r5, [r4, r1, lsl #2]
 800b748:	6944      	ldr	r4, [r0, #20]
 800b74a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800b74e:	7062      	strb	r2, [r4, #1]
 800b750:	6942      	ldr	r2, [r0, #20]
 800b752:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800b756:	7093      	strb	r3, [r2, #2]
 800b758:	6943      	ldr	r3, [r0, #20]
 800b75a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 800b75e:	f881 c003 	strb.w	ip, [r1, #3]
 800b762:	bd30      	pop	{r4, r5, pc}
 800b764:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800b768:	bf0c      	ite	eq
 800b76a:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b76e:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b772:	6945      	ldr	r5, [r0, #20]
 800b774:	1c4c      	adds	r4, r1, #1
 800b776:	f805 e004 	strb.w	lr, [r5, r4]
 800b77a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800b77e:	bf0c      	ite	eq
 800b780:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b784:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b788:	6945      	ldr	r5, [r0, #20]
 800b78a:	1c8c      	adds	r4, r1, #2
 800b78c:	f805 e004 	strb.w	lr, [r5, r4]
 800b790:	f01c 0f20 	tst.w	ip, #32
 800b794:	bf0c      	ite	eq
 800b796:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b79a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b79e:	6945      	ldr	r5, [r0, #20]
 800b7a0:	1ccc      	adds	r4, r1, #3
 800b7a2:	f805 e004 	strb.w	lr, [r5, r4]
 800b7a6:	f01c 0f10 	tst.w	ip, #16
 800b7aa:	bf0c      	ite	eq
 800b7ac:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b7b0:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b7b4:	6945      	ldr	r5, [r0, #20]
 800b7b6:	1d0c      	adds	r4, r1, #4
 800b7b8:	f01c 0f08 	tst.w	ip, #8
 800b7bc:	f805 e004 	strb.w	lr, [r5, r4]
 800b7c0:	bf0c      	ite	eq
 800b7c2:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b7c6:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b7ca:	6945      	ldr	r5, [r0, #20]
 800b7cc:	1d4c      	adds	r4, r1, #5
 800b7ce:	f01c 0f04 	tst.w	ip, #4
 800b7d2:	f805 e004 	strb.w	lr, [r5, r4]
 800b7d6:	bf0c      	ite	eq
 800b7d8:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b7dc:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b7e0:	6945      	ldr	r5, [r0, #20]
 800b7e2:	1d8c      	adds	r4, r1, #6
 800b7e4:	f01c 0f02 	tst.w	ip, #2
 800b7e8:	f805 e004 	strb.w	lr, [r5, r4]
 800b7ec:	bf0c      	ite	eq
 800b7ee:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800b7f2:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800b7f6:	6945      	ldr	r5, [r0, #20]
 800b7f8:	1dcc      	adds	r4, r1, #7
 800b7fa:	f01c 0f01 	tst.w	ip, #1
 800b7fe:	f805 e004 	strb.w	lr, [r5, r4]
 800b802:	bf14      	ite	ne
 800b804:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800b808:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800b80c:	6945      	ldr	r5, [r0, #20]
 800b80e:	f101 0408 	add.w	r4, r1, #8
 800b812:	f805 c004 	strb.w	ip, [r5, r4]
 800b816:	0615      	lsls	r5, r2, #24
 800b818:	bf54      	ite	pl
 800b81a:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b81e:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b822:	6945      	ldr	r5, [r0, #20]
 800b824:	f101 0409 	add.w	r4, r1, #9
 800b828:	f805 c004 	strb.w	ip, [r5, r4]
 800b82c:	0655      	lsls	r5, r2, #25
 800b82e:	bf54      	ite	pl
 800b830:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b834:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b838:	6945      	ldr	r5, [r0, #20]
 800b83a:	f101 040a 	add.w	r4, r1, #10
 800b83e:	f805 c004 	strb.w	ip, [r5, r4]
 800b842:	0695      	lsls	r5, r2, #26
 800b844:	bf54      	ite	pl
 800b846:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b84a:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b84e:	6945      	ldr	r5, [r0, #20]
 800b850:	f101 040b 	add.w	r4, r1, #11
 800b854:	f805 c004 	strb.w	ip, [r5, r4]
 800b858:	06d5      	lsls	r5, r2, #27
 800b85a:	bf54      	ite	pl
 800b85c:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b860:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b864:	6945      	ldr	r5, [r0, #20]
 800b866:	f101 040c 	add.w	r4, r1, #12
 800b86a:	f805 c004 	strb.w	ip, [r5, r4]
 800b86e:	0715      	lsls	r5, r2, #28
 800b870:	bf54      	ite	pl
 800b872:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b876:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b87a:	6945      	ldr	r5, [r0, #20]
 800b87c:	f101 040d 	add.w	r4, r1, #13
 800b880:	f805 c004 	strb.w	ip, [r5, r4]
 800b884:	0755      	lsls	r5, r2, #29
 800b886:	bf54      	ite	pl
 800b888:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b88c:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b890:	6945      	ldr	r5, [r0, #20]
 800b892:	f101 040e 	add.w	r4, r1, #14
 800b896:	f805 c004 	strb.w	ip, [r5, r4]
 800b89a:	0795      	lsls	r5, r2, #30
 800b89c:	bf58      	it	pl
 800b89e:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800b8a2:	6945      	ldr	r5, [r0, #20]
 800b8a4:	bf48      	it	mi
 800b8a6:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800b8aa:	f101 040f 	add.w	r4, r1, #15
 800b8ae:	f805 c004 	strb.w	ip, [r5, r4]
 800b8b2:	07d5      	lsls	r5, r2, #31
 800b8b4:	bf4c      	ite	mi
 800b8b6:	7c45      	ldrbmi	r5, [r0, #17]
 800b8b8:	7c05      	ldrbpl	r5, [r0, #16]
 800b8ba:	6942      	ldr	r2, [r0, #20]
 800b8bc:	f101 0410 	add.w	r4, r1, #16
 800b8c0:	5515      	strb	r5, [r2, r4]
 800b8c2:	061c      	lsls	r4, r3, #24
 800b8c4:	bf54      	ite	pl
 800b8c6:	7c05      	ldrbpl	r5, [r0, #16]
 800b8c8:	7c45      	ldrbmi	r5, [r0, #17]
 800b8ca:	6944      	ldr	r4, [r0, #20]
 800b8cc:	f101 0211 	add.w	r2, r1, #17
 800b8d0:	54a5      	strb	r5, [r4, r2]
 800b8d2:	065d      	lsls	r5, r3, #25
 800b8d4:	bf54      	ite	pl
 800b8d6:	7c05      	ldrbpl	r5, [r0, #16]
 800b8d8:	7c45      	ldrbmi	r5, [r0, #17]
 800b8da:	6944      	ldr	r4, [r0, #20]
 800b8dc:	f101 0212 	add.w	r2, r1, #18
 800b8e0:	54a5      	strb	r5, [r4, r2]
 800b8e2:	069c      	lsls	r4, r3, #26
 800b8e4:	bf54      	ite	pl
 800b8e6:	7c05      	ldrbpl	r5, [r0, #16]
 800b8e8:	7c45      	ldrbmi	r5, [r0, #17]
 800b8ea:	6944      	ldr	r4, [r0, #20]
 800b8ec:	f101 0213 	add.w	r2, r1, #19
 800b8f0:	54a5      	strb	r5, [r4, r2]
 800b8f2:	06dd      	lsls	r5, r3, #27
 800b8f4:	bf54      	ite	pl
 800b8f6:	7c05      	ldrbpl	r5, [r0, #16]
 800b8f8:	7c45      	ldrbmi	r5, [r0, #17]
 800b8fa:	6944      	ldr	r4, [r0, #20]
 800b8fc:	f101 0214 	add.w	r2, r1, #20
 800b900:	54a5      	strb	r5, [r4, r2]
 800b902:	071c      	lsls	r4, r3, #28
 800b904:	bf54      	ite	pl
 800b906:	7c05      	ldrbpl	r5, [r0, #16]
 800b908:	7c45      	ldrbmi	r5, [r0, #17]
 800b90a:	6944      	ldr	r4, [r0, #20]
 800b90c:	f101 0215 	add.w	r2, r1, #21
 800b910:	54a5      	strb	r5, [r4, r2]
 800b912:	075d      	lsls	r5, r3, #29
 800b914:	bf54      	ite	pl
 800b916:	7c05      	ldrbpl	r5, [r0, #16]
 800b918:	7c45      	ldrbmi	r5, [r0, #17]
 800b91a:	6944      	ldr	r4, [r0, #20]
 800b91c:	f101 0216 	add.w	r2, r1, #22
 800b920:	54a5      	strb	r5, [r4, r2]
 800b922:	079c      	lsls	r4, r3, #30
 800b924:	bf54      	ite	pl
 800b926:	7c05      	ldrbpl	r5, [r0, #16]
 800b928:	7c45      	ldrbmi	r5, [r0, #17]
 800b92a:	6944      	ldr	r4, [r0, #20]
 800b92c:	f101 0217 	add.w	r2, r1, #23
 800b930:	54a5      	strb	r5, [r4, r2]
 800b932:	3118      	adds	r1, #24
 800b934:	f013 0f01 	tst.w	r3, #1
 800b938:	f000 80d9 	beq.w	800baee <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x442>
 800b93c:	7c42      	ldrb	r2, [r0, #17]
 800b93e:	6943      	ldr	r3, [r0, #20]
 800b940:	545a      	strb	r2, [r3, r1]
 800b942:	bd30      	pop	{r4, r5, pc}
 800b944:	0615      	lsls	r5, r2, #24
 800b946:	bf54      	ite	pl
 800b948:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b94c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b950:	6945      	ldr	r5, [r0, #20]
 800b952:	1c4c      	adds	r4, r1, #1
 800b954:	f805 e004 	strb.w	lr, [r5, r4]
 800b958:	0655      	lsls	r5, r2, #25
 800b95a:	bf54      	ite	pl
 800b95c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b960:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b964:	6945      	ldr	r5, [r0, #20]
 800b966:	1c8c      	adds	r4, r1, #2
 800b968:	f805 e004 	strb.w	lr, [r5, r4]
 800b96c:	0695      	lsls	r5, r2, #26
 800b96e:	bf54      	ite	pl
 800b970:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b974:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b978:	6945      	ldr	r5, [r0, #20]
 800b97a:	1ccc      	adds	r4, r1, #3
 800b97c:	f805 e004 	strb.w	lr, [r5, r4]
 800b980:	06d5      	lsls	r5, r2, #27
 800b982:	bf54      	ite	pl
 800b984:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b988:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b98c:	6945      	ldr	r5, [r0, #20]
 800b98e:	1d0c      	adds	r4, r1, #4
 800b990:	f805 e004 	strb.w	lr, [r5, r4]
 800b994:	0715      	lsls	r5, r2, #28
 800b996:	bf54      	ite	pl
 800b998:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b99c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b9a0:	6945      	ldr	r5, [r0, #20]
 800b9a2:	1d4c      	adds	r4, r1, #5
 800b9a4:	f805 e004 	strb.w	lr, [r5, r4]
 800b9a8:	0755      	lsls	r5, r2, #29
 800b9aa:	bf54      	ite	pl
 800b9ac:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b9b0:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b9b4:	6945      	ldr	r5, [r0, #20]
 800b9b6:	1d8c      	adds	r4, r1, #6
 800b9b8:	f805 e004 	strb.w	lr, [r5, r4]
 800b9bc:	0795      	lsls	r5, r2, #30
 800b9be:	bf58      	it	pl
 800b9c0:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800b9c4:	6945      	ldr	r5, [r0, #20]
 800b9c6:	bf48      	it	mi
 800b9c8:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800b9cc:	1dcc      	adds	r4, r1, #7
 800b9ce:	f805 e004 	strb.w	lr, [r5, r4]
 800b9d2:	07d5      	lsls	r5, r2, #31
 800b9d4:	bf4c      	ite	mi
 800b9d6:	7c45      	ldrbmi	r5, [r0, #17]
 800b9d8:	7c05      	ldrbpl	r5, [r0, #16]
 800b9da:	6942      	ldr	r2, [r0, #20]
 800b9dc:	f101 0408 	add.w	r4, r1, #8
 800b9e0:	5515      	strb	r5, [r2, r4]
 800b9e2:	061c      	lsls	r4, r3, #24
 800b9e4:	bf54      	ite	pl
 800b9e6:	7c05      	ldrbpl	r5, [r0, #16]
 800b9e8:	7c45      	ldrbmi	r5, [r0, #17]
 800b9ea:	6944      	ldr	r4, [r0, #20]
 800b9ec:	f101 0209 	add.w	r2, r1, #9
 800b9f0:	54a5      	strb	r5, [r4, r2]
 800b9f2:	065d      	lsls	r5, r3, #25
 800b9f4:	bf54      	ite	pl
 800b9f6:	7c05      	ldrbpl	r5, [r0, #16]
 800b9f8:	7c45      	ldrbmi	r5, [r0, #17]
 800b9fa:	6944      	ldr	r4, [r0, #20]
 800b9fc:	f101 020a 	add.w	r2, r1, #10
 800ba00:	54a5      	strb	r5, [r4, r2]
 800ba02:	069c      	lsls	r4, r3, #26
 800ba04:	bf54      	ite	pl
 800ba06:	7c05      	ldrbpl	r5, [r0, #16]
 800ba08:	7c45      	ldrbmi	r5, [r0, #17]
 800ba0a:	6944      	ldr	r4, [r0, #20]
 800ba0c:	f101 020b 	add.w	r2, r1, #11
 800ba10:	54a5      	strb	r5, [r4, r2]
 800ba12:	06dd      	lsls	r5, r3, #27
 800ba14:	bf54      	ite	pl
 800ba16:	7c05      	ldrbpl	r5, [r0, #16]
 800ba18:	7c45      	ldrbmi	r5, [r0, #17]
 800ba1a:	6944      	ldr	r4, [r0, #20]
 800ba1c:	f101 020c 	add.w	r2, r1, #12
 800ba20:	54a5      	strb	r5, [r4, r2]
 800ba22:	071c      	lsls	r4, r3, #28
 800ba24:	bf54      	ite	pl
 800ba26:	7c05      	ldrbpl	r5, [r0, #16]
 800ba28:	7c45      	ldrbmi	r5, [r0, #17]
 800ba2a:	6944      	ldr	r4, [r0, #20]
 800ba2c:	f101 020d 	add.w	r2, r1, #13
 800ba30:	54a5      	strb	r5, [r4, r2]
 800ba32:	075d      	lsls	r5, r3, #29
 800ba34:	bf54      	ite	pl
 800ba36:	7c05      	ldrbpl	r5, [r0, #16]
 800ba38:	7c45      	ldrbmi	r5, [r0, #17]
 800ba3a:	6944      	ldr	r4, [r0, #20]
 800ba3c:	f101 020e 	add.w	r2, r1, #14
 800ba40:	54a5      	strb	r5, [r4, r2]
 800ba42:	079c      	lsls	r4, r3, #30
 800ba44:	bf58      	it	pl
 800ba46:	7c05      	ldrbpl	r5, [r0, #16]
 800ba48:	6944      	ldr	r4, [r0, #20]
 800ba4a:	bf48      	it	mi
 800ba4c:	7c45      	ldrbmi	r5, [r0, #17]
 800ba4e:	f101 020f 	add.w	r2, r1, #15
 800ba52:	54a5      	strb	r5, [r4, r2]
 800ba54:	07db      	lsls	r3, r3, #31
 800ba56:	bf4c      	ite	mi
 800ba58:	7c44      	ldrbmi	r4, [r0, #17]
 800ba5a:	7c04      	ldrbpl	r4, [r0, #16]
 800ba5c:	6943      	ldr	r3, [r0, #20]
 800ba5e:	f101 0210 	add.w	r2, r1, #16
 800ba62:	549c      	strb	r4, [r3, r2]
 800ba64:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800ba68:	bf0c      	ite	eq
 800ba6a:	7c04      	ldrbeq	r4, [r0, #16]
 800ba6c:	7c44      	ldrbne	r4, [r0, #17]
 800ba6e:	6942      	ldr	r2, [r0, #20]
 800ba70:	f101 0311 	add.w	r3, r1, #17
 800ba74:	54d4      	strb	r4, [r2, r3]
 800ba76:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ba7a:	bf0c      	ite	eq
 800ba7c:	7c04      	ldrbeq	r4, [r0, #16]
 800ba7e:	7c44      	ldrbne	r4, [r0, #17]
 800ba80:	6942      	ldr	r2, [r0, #20]
 800ba82:	f101 0312 	add.w	r3, r1, #18
 800ba86:	54d4      	strb	r4, [r2, r3]
 800ba88:	f01c 0f20 	tst.w	ip, #32
 800ba8c:	bf0c      	ite	eq
 800ba8e:	7c04      	ldrbeq	r4, [r0, #16]
 800ba90:	7c44      	ldrbne	r4, [r0, #17]
 800ba92:	6942      	ldr	r2, [r0, #20]
 800ba94:	f101 0313 	add.w	r3, r1, #19
 800ba98:	54d4      	strb	r4, [r2, r3]
 800ba9a:	f01c 0f10 	tst.w	ip, #16
 800ba9e:	bf0c      	ite	eq
 800baa0:	7c04      	ldrbeq	r4, [r0, #16]
 800baa2:	7c44      	ldrbne	r4, [r0, #17]
 800baa4:	6942      	ldr	r2, [r0, #20]
 800baa6:	f101 0314 	add.w	r3, r1, #20
 800baaa:	54d4      	strb	r4, [r2, r3]
 800baac:	f01c 0f08 	tst.w	ip, #8
 800bab0:	bf0c      	ite	eq
 800bab2:	7c04      	ldrbeq	r4, [r0, #16]
 800bab4:	7c44      	ldrbne	r4, [r0, #17]
 800bab6:	6942      	ldr	r2, [r0, #20]
 800bab8:	f101 0315 	add.w	r3, r1, #21
 800babc:	54d4      	strb	r4, [r2, r3]
 800babe:	f01c 0f04 	tst.w	ip, #4
 800bac2:	bf0c      	ite	eq
 800bac4:	7c04      	ldrbeq	r4, [r0, #16]
 800bac6:	7c44      	ldrbne	r4, [r0, #17]
 800bac8:	6942      	ldr	r2, [r0, #20]
 800baca:	f101 0316 	add.w	r3, r1, #22
 800bace:	54d4      	strb	r4, [r2, r3]
 800bad0:	f01c 0f02 	tst.w	ip, #2
 800bad4:	bf0c      	ite	eq
 800bad6:	7c04      	ldrbeq	r4, [r0, #16]
 800bad8:	7c44      	ldrbne	r4, [r0, #17]
 800bada:	6942      	ldr	r2, [r0, #20]
 800badc:	f101 0317 	add.w	r3, r1, #23
 800bae0:	f01c 0f01 	tst.w	ip, #1
 800bae4:	54d4      	strb	r4, [r2, r3]
 800bae6:	f101 0118 	add.w	r1, r1, #24
 800baea:	f47f af27 	bne.w	800b93c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x290>
 800baee:	7c02      	ldrb	r2, [r0, #16]
 800baf0:	e725      	b.n	800b93e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x292>
 800baf2:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800baf6:	bf0c      	ite	eq
 800baf8:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bafc:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb00:	6945      	ldr	r5, [r0, #20]
 800bb02:	1c4c      	adds	r4, r1, #1
 800bb04:	f805 e004 	strb.w	lr, [r5, r4]
 800bb08:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800bb0c:	bf0c      	ite	eq
 800bb0e:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb12:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb16:	6945      	ldr	r5, [r0, #20]
 800bb18:	1c8c      	adds	r4, r1, #2
 800bb1a:	f805 e004 	strb.w	lr, [r5, r4]
 800bb1e:	f01c 0f20 	tst.w	ip, #32
 800bb22:	bf0c      	ite	eq
 800bb24:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb28:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb2c:	6945      	ldr	r5, [r0, #20]
 800bb2e:	1ccc      	adds	r4, r1, #3
 800bb30:	f805 e004 	strb.w	lr, [r5, r4]
 800bb34:	f01c 0f10 	tst.w	ip, #16
 800bb38:	bf0c      	ite	eq
 800bb3a:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb3e:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb42:	6945      	ldr	r5, [r0, #20]
 800bb44:	1d0c      	adds	r4, r1, #4
 800bb46:	f01c 0f08 	tst.w	ip, #8
 800bb4a:	f805 e004 	strb.w	lr, [r5, r4]
 800bb4e:	bf0c      	ite	eq
 800bb50:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb54:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb58:	6945      	ldr	r5, [r0, #20]
 800bb5a:	1d4c      	adds	r4, r1, #5
 800bb5c:	f01c 0f04 	tst.w	ip, #4
 800bb60:	f805 e004 	strb.w	lr, [r5, r4]
 800bb64:	bf0c      	ite	eq
 800bb66:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb6a:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb6e:	6945      	ldr	r5, [r0, #20]
 800bb70:	1d8c      	adds	r4, r1, #6
 800bb72:	f01c 0f02 	tst.w	ip, #2
 800bb76:	f805 e004 	strb.w	lr, [r5, r4]
 800bb7a:	bf0c      	ite	eq
 800bb7c:	f890 e010 	ldrbeq.w	lr, [r0, #16]
 800bb80:	f890 e011 	ldrbne.w	lr, [r0, #17]
 800bb84:	6945      	ldr	r5, [r0, #20]
 800bb86:	1dcc      	adds	r4, r1, #7
 800bb88:	f01c 0f01 	tst.w	ip, #1
 800bb8c:	f805 e004 	strb.w	lr, [r5, r4]
 800bb90:	bf14      	ite	ne
 800bb92:	f890 c011 	ldrbne.w	ip, [r0, #17]
 800bb96:	f890 c010 	ldrbeq.w	ip, [r0, #16]
 800bb9a:	6945      	ldr	r5, [r0, #20]
 800bb9c:	f101 0408 	add.w	r4, r1, #8
 800bba0:	f805 c004 	strb.w	ip, [r5, r4]
 800bba4:	061d      	lsls	r5, r3, #24
 800bba6:	bf54      	ite	pl
 800bba8:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bbac:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bbb0:	6945      	ldr	r5, [r0, #20]
 800bbb2:	f101 0409 	add.w	r4, r1, #9
 800bbb6:	f805 c004 	strb.w	ip, [r5, r4]
 800bbba:	065d      	lsls	r5, r3, #25
 800bbbc:	bf54      	ite	pl
 800bbbe:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bbc2:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bbc6:	6945      	ldr	r5, [r0, #20]
 800bbc8:	f101 040a 	add.w	r4, r1, #10
 800bbcc:	f805 c004 	strb.w	ip, [r5, r4]
 800bbd0:	069d      	lsls	r5, r3, #26
 800bbd2:	bf54      	ite	pl
 800bbd4:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bbd8:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bbdc:	6945      	ldr	r5, [r0, #20]
 800bbde:	f101 040b 	add.w	r4, r1, #11
 800bbe2:	f805 c004 	strb.w	ip, [r5, r4]
 800bbe6:	06dd      	lsls	r5, r3, #27
 800bbe8:	bf54      	ite	pl
 800bbea:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bbee:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bbf2:	6945      	ldr	r5, [r0, #20]
 800bbf4:	f101 040c 	add.w	r4, r1, #12
 800bbf8:	f805 c004 	strb.w	ip, [r5, r4]
 800bbfc:	071d      	lsls	r5, r3, #28
 800bbfe:	bf54      	ite	pl
 800bc00:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bc04:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bc08:	6945      	ldr	r5, [r0, #20]
 800bc0a:	f101 040d 	add.w	r4, r1, #13
 800bc0e:	f805 c004 	strb.w	ip, [r5, r4]
 800bc12:	075d      	lsls	r5, r3, #29
 800bc14:	bf54      	ite	pl
 800bc16:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bc1a:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bc1e:	6945      	ldr	r5, [r0, #20]
 800bc20:	f101 040e 	add.w	r4, r1, #14
 800bc24:	f805 c004 	strb.w	ip, [r5, r4]
 800bc28:	079d      	lsls	r5, r3, #30
 800bc2a:	bf58      	it	pl
 800bc2c:	f890 c010 	ldrbpl.w	ip, [r0, #16]
 800bc30:	6945      	ldr	r5, [r0, #20]
 800bc32:	bf48      	it	mi
 800bc34:	f890 c011 	ldrbmi.w	ip, [r0, #17]
 800bc38:	f101 040f 	add.w	r4, r1, #15
 800bc3c:	f805 c004 	strb.w	ip, [r5, r4]
 800bc40:	07dd      	lsls	r5, r3, #31
 800bc42:	bf4c      	ite	mi
 800bc44:	7c45      	ldrbmi	r5, [r0, #17]
 800bc46:	7c05      	ldrbpl	r5, [r0, #16]
 800bc48:	6943      	ldr	r3, [r0, #20]
 800bc4a:	f101 0410 	add.w	r4, r1, #16
 800bc4e:	551d      	strb	r5, [r3, r4]
 800bc50:	0614      	lsls	r4, r2, #24
 800bc52:	bf54      	ite	pl
 800bc54:	7c05      	ldrbpl	r5, [r0, #16]
 800bc56:	7c45      	ldrbmi	r5, [r0, #17]
 800bc58:	6944      	ldr	r4, [r0, #20]
 800bc5a:	f101 0311 	add.w	r3, r1, #17
 800bc5e:	54e5      	strb	r5, [r4, r3]
 800bc60:	0655      	lsls	r5, r2, #25
 800bc62:	bf54      	ite	pl
 800bc64:	7c05      	ldrbpl	r5, [r0, #16]
 800bc66:	7c45      	ldrbmi	r5, [r0, #17]
 800bc68:	6944      	ldr	r4, [r0, #20]
 800bc6a:	f101 0312 	add.w	r3, r1, #18
 800bc6e:	54e5      	strb	r5, [r4, r3]
 800bc70:	0694      	lsls	r4, r2, #26
 800bc72:	bf54      	ite	pl
 800bc74:	7c05      	ldrbpl	r5, [r0, #16]
 800bc76:	7c45      	ldrbmi	r5, [r0, #17]
 800bc78:	6944      	ldr	r4, [r0, #20]
 800bc7a:	f101 0313 	add.w	r3, r1, #19
 800bc7e:	54e5      	strb	r5, [r4, r3]
 800bc80:	06d5      	lsls	r5, r2, #27
 800bc82:	bf54      	ite	pl
 800bc84:	7c05      	ldrbpl	r5, [r0, #16]
 800bc86:	7c45      	ldrbmi	r5, [r0, #17]
 800bc88:	6944      	ldr	r4, [r0, #20]
 800bc8a:	f101 0314 	add.w	r3, r1, #20
 800bc8e:	54e5      	strb	r5, [r4, r3]
 800bc90:	0714      	lsls	r4, r2, #28
 800bc92:	bf54      	ite	pl
 800bc94:	7c05      	ldrbpl	r5, [r0, #16]
 800bc96:	7c45      	ldrbmi	r5, [r0, #17]
 800bc98:	6944      	ldr	r4, [r0, #20]
 800bc9a:	f101 0315 	add.w	r3, r1, #21
 800bc9e:	54e5      	strb	r5, [r4, r3]
 800bca0:	0755      	lsls	r5, r2, #29
 800bca2:	bf54      	ite	pl
 800bca4:	7c05      	ldrbpl	r5, [r0, #16]
 800bca6:	7c45      	ldrbmi	r5, [r0, #17]
 800bca8:	6944      	ldr	r4, [r0, #20]
 800bcaa:	f101 0316 	add.w	r3, r1, #22
 800bcae:	54e5      	strb	r5, [r4, r3]
 800bcb0:	0794      	lsls	r4, r2, #30
 800bcb2:	bf54      	ite	pl
 800bcb4:	7c05      	ldrbpl	r5, [r0, #16]
 800bcb6:	7c45      	ldrbmi	r5, [r0, #17]
 800bcb8:	6944      	ldr	r4, [r0, #20]
 800bcba:	f101 0317 	add.w	r3, r1, #23
 800bcbe:	54e5      	strb	r5, [r4, r3]
 800bcc0:	3118      	adds	r1, #24
 800bcc2:	f012 0f01 	tst.w	r2, #1
 800bcc6:	e637      	b.n	800b938 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x28c>
 800bcc8:	0615      	lsls	r5, r2, #24
 800bcca:	bf54      	ite	pl
 800bccc:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bcd0:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bcd4:	6945      	ldr	r5, [r0, #20]
 800bcd6:	1c4c      	adds	r4, r1, #1
 800bcd8:	f805 e004 	strb.w	lr, [r5, r4]
 800bcdc:	0655      	lsls	r5, r2, #25
 800bcde:	bf54      	ite	pl
 800bce0:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bce4:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bce8:	6945      	ldr	r5, [r0, #20]
 800bcea:	1c8c      	adds	r4, r1, #2
 800bcec:	f805 e004 	strb.w	lr, [r5, r4]
 800bcf0:	0695      	lsls	r5, r2, #26
 800bcf2:	bf54      	ite	pl
 800bcf4:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bcf8:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bcfc:	6945      	ldr	r5, [r0, #20]
 800bcfe:	1ccc      	adds	r4, r1, #3
 800bd00:	f805 e004 	strb.w	lr, [r5, r4]
 800bd04:	06d5      	lsls	r5, r2, #27
 800bd06:	bf54      	ite	pl
 800bd08:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bd0c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bd10:	6945      	ldr	r5, [r0, #20]
 800bd12:	1d0c      	adds	r4, r1, #4
 800bd14:	f805 e004 	strb.w	lr, [r5, r4]
 800bd18:	0715      	lsls	r5, r2, #28
 800bd1a:	bf54      	ite	pl
 800bd1c:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bd20:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bd24:	6945      	ldr	r5, [r0, #20]
 800bd26:	1d4c      	adds	r4, r1, #5
 800bd28:	f805 e004 	strb.w	lr, [r5, r4]
 800bd2c:	0755      	lsls	r5, r2, #29
 800bd2e:	bf54      	ite	pl
 800bd30:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bd34:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bd38:	6945      	ldr	r5, [r0, #20]
 800bd3a:	1d8c      	adds	r4, r1, #6
 800bd3c:	f805 e004 	strb.w	lr, [r5, r4]
 800bd40:	0795      	lsls	r5, r2, #30
 800bd42:	bf58      	it	pl
 800bd44:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bd48:	6945      	ldr	r5, [r0, #20]
 800bd4a:	bf48      	it	mi
 800bd4c:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bd50:	1dcc      	adds	r4, r1, #7
 800bd52:	f805 e004 	strb.w	lr, [r5, r4]
 800bd56:	07d2      	lsls	r2, r2, #31
 800bd58:	bf4c      	ite	mi
 800bd5a:	7c45      	ldrbmi	r5, [r0, #17]
 800bd5c:	7c05      	ldrbpl	r5, [r0, #16]
 800bd5e:	6942      	ldr	r2, [r0, #20]
 800bd60:	f101 0408 	add.w	r4, r1, #8
 800bd64:	5515      	strb	r5, [r2, r4]
 800bd66:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800bd6a:	bf0c      	ite	eq
 800bd6c:	7c05      	ldrbeq	r5, [r0, #16]
 800bd6e:	7c45      	ldrbne	r5, [r0, #17]
 800bd70:	6944      	ldr	r4, [r0, #20]
 800bd72:	f101 0209 	add.w	r2, r1, #9
 800bd76:	54a5      	strb	r5, [r4, r2]
 800bd78:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800bd7c:	bf0c      	ite	eq
 800bd7e:	7c05      	ldrbeq	r5, [r0, #16]
 800bd80:	7c45      	ldrbne	r5, [r0, #17]
 800bd82:	6944      	ldr	r4, [r0, #20]
 800bd84:	f101 020a 	add.w	r2, r1, #10
 800bd88:	54a5      	strb	r5, [r4, r2]
 800bd8a:	f01c 0f20 	tst.w	ip, #32
 800bd8e:	bf0c      	ite	eq
 800bd90:	7c05      	ldrbeq	r5, [r0, #16]
 800bd92:	7c45      	ldrbne	r5, [r0, #17]
 800bd94:	6944      	ldr	r4, [r0, #20]
 800bd96:	f101 020b 	add.w	r2, r1, #11
 800bd9a:	54a5      	strb	r5, [r4, r2]
 800bd9c:	f01c 0f10 	tst.w	ip, #16
 800bda0:	bf0c      	ite	eq
 800bda2:	7c05      	ldrbeq	r5, [r0, #16]
 800bda4:	7c45      	ldrbne	r5, [r0, #17]
 800bda6:	6944      	ldr	r4, [r0, #20]
 800bda8:	f101 020c 	add.w	r2, r1, #12
 800bdac:	54a5      	strb	r5, [r4, r2]
 800bdae:	f01c 0f08 	tst.w	ip, #8
 800bdb2:	bf0c      	ite	eq
 800bdb4:	7c05      	ldrbeq	r5, [r0, #16]
 800bdb6:	7c45      	ldrbne	r5, [r0, #17]
 800bdb8:	6944      	ldr	r4, [r0, #20]
 800bdba:	f101 020d 	add.w	r2, r1, #13
 800bdbe:	54a5      	strb	r5, [r4, r2]
 800bdc0:	f01c 0f04 	tst.w	ip, #4
 800bdc4:	bf0c      	ite	eq
 800bdc6:	7c05      	ldrbeq	r5, [r0, #16]
 800bdc8:	7c45      	ldrbne	r5, [r0, #17]
 800bdca:	6944      	ldr	r4, [r0, #20]
 800bdcc:	f101 020e 	add.w	r2, r1, #14
 800bdd0:	54a5      	strb	r5, [r4, r2]
 800bdd2:	f01c 0f02 	tst.w	ip, #2
 800bdd6:	bf0c      	ite	eq
 800bdd8:	7c05      	ldrbeq	r5, [r0, #16]
 800bdda:	7c45      	ldrbne	r5, [r0, #17]
 800bddc:	6944      	ldr	r4, [r0, #20]
 800bdde:	f101 020f 	add.w	r2, r1, #15
 800bde2:	54a5      	strb	r5, [r4, r2]
 800bde4:	f01c 0f01 	tst.w	ip, #1
 800bde8:	bf14      	ite	ne
 800bdea:	7c45      	ldrbne	r5, [r0, #17]
 800bdec:	7c05      	ldrbeq	r5, [r0, #16]
 800bdee:	6944      	ldr	r4, [r0, #20]
 800bdf0:	f101 0210 	add.w	r2, r1, #16
 800bdf4:	e564      	b.n	800b8c0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x214>
 800bdf6:	061d      	lsls	r5, r3, #24
 800bdf8:	bf54      	ite	pl
 800bdfa:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bdfe:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be02:	6945      	ldr	r5, [r0, #20]
 800be04:	1c4c      	adds	r4, r1, #1
 800be06:	f805 e004 	strb.w	lr, [r5, r4]
 800be0a:	065d      	lsls	r5, r3, #25
 800be0c:	bf54      	ite	pl
 800be0e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be12:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be16:	6945      	ldr	r5, [r0, #20]
 800be18:	1c8c      	adds	r4, r1, #2
 800be1a:	f805 e004 	strb.w	lr, [r5, r4]
 800be1e:	069d      	lsls	r5, r3, #26
 800be20:	bf54      	ite	pl
 800be22:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be26:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be2a:	6945      	ldr	r5, [r0, #20]
 800be2c:	1ccc      	adds	r4, r1, #3
 800be2e:	f805 e004 	strb.w	lr, [r5, r4]
 800be32:	06dd      	lsls	r5, r3, #27
 800be34:	bf54      	ite	pl
 800be36:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be3a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be3e:	6945      	ldr	r5, [r0, #20]
 800be40:	1d0c      	adds	r4, r1, #4
 800be42:	f805 e004 	strb.w	lr, [r5, r4]
 800be46:	071d      	lsls	r5, r3, #28
 800be48:	bf54      	ite	pl
 800be4a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be4e:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be52:	6945      	ldr	r5, [r0, #20]
 800be54:	1d4c      	adds	r4, r1, #5
 800be56:	f805 e004 	strb.w	lr, [r5, r4]
 800be5a:	075d      	lsls	r5, r3, #29
 800be5c:	bf54      	ite	pl
 800be5e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be62:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be66:	6945      	ldr	r5, [r0, #20]
 800be68:	1d8c      	adds	r4, r1, #6
 800be6a:	f805 e004 	strb.w	lr, [r5, r4]
 800be6e:	079d      	lsls	r5, r3, #30
 800be70:	bf58      	it	pl
 800be72:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800be76:	6945      	ldr	r5, [r0, #20]
 800be78:	bf48      	it	mi
 800be7a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800be7e:	1dcc      	adds	r4, r1, #7
 800be80:	f805 e004 	strb.w	lr, [r5, r4]
 800be84:	07dd      	lsls	r5, r3, #31
 800be86:	bf4c      	ite	mi
 800be88:	7c45      	ldrbmi	r5, [r0, #17]
 800be8a:	7c05      	ldrbpl	r5, [r0, #16]
 800be8c:	6943      	ldr	r3, [r0, #20]
 800be8e:	f101 0408 	add.w	r4, r1, #8
 800be92:	551d      	strb	r5, [r3, r4]
 800be94:	0614      	lsls	r4, r2, #24
 800be96:	bf54      	ite	pl
 800be98:	7c05      	ldrbpl	r5, [r0, #16]
 800be9a:	7c45      	ldrbmi	r5, [r0, #17]
 800be9c:	6944      	ldr	r4, [r0, #20]
 800be9e:	f101 0309 	add.w	r3, r1, #9
 800bea2:	54e5      	strb	r5, [r4, r3]
 800bea4:	0655      	lsls	r5, r2, #25
 800bea6:	bf54      	ite	pl
 800bea8:	7c05      	ldrbpl	r5, [r0, #16]
 800beaa:	7c45      	ldrbmi	r5, [r0, #17]
 800beac:	6944      	ldr	r4, [r0, #20]
 800beae:	f101 030a 	add.w	r3, r1, #10
 800beb2:	54e5      	strb	r5, [r4, r3]
 800beb4:	0694      	lsls	r4, r2, #26
 800beb6:	bf54      	ite	pl
 800beb8:	7c05      	ldrbpl	r5, [r0, #16]
 800beba:	7c45      	ldrbmi	r5, [r0, #17]
 800bebc:	6944      	ldr	r4, [r0, #20]
 800bebe:	f101 030b 	add.w	r3, r1, #11
 800bec2:	54e5      	strb	r5, [r4, r3]
 800bec4:	06d5      	lsls	r5, r2, #27
 800bec6:	bf54      	ite	pl
 800bec8:	7c05      	ldrbpl	r5, [r0, #16]
 800beca:	7c45      	ldrbmi	r5, [r0, #17]
 800becc:	6944      	ldr	r4, [r0, #20]
 800bece:	f101 030c 	add.w	r3, r1, #12
 800bed2:	54e5      	strb	r5, [r4, r3]
 800bed4:	0714      	lsls	r4, r2, #28
 800bed6:	bf54      	ite	pl
 800bed8:	7c05      	ldrbpl	r5, [r0, #16]
 800beda:	7c45      	ldrbmi	r5, [r0, #17]
 800bedc:	6944      	ldr	r4, [r0, #20]
 800bede:	f101 030d 	add.w	r3, r1, #13
 800bee2:	54e5      	strb	r5, [r4, r3]
 800bee4:	0755      	lsls	r5, r2, #29
 800bee6:	bf54      	ite	pl
 800bee8:	7c05      	ldrbpl	r5, [r0, #16]
 800beea:	7c45      	ldrbmi	r5, [r0, #17]
 800beec:	6944      	ldr	r4, [r0, #20]
 800beee:	f101 030e 	add.w	r3, r1, #14
 800bef2:	54e5      	strb	r5, [r4, r3]
 800bef4:	0794      	lsls	r4, r2, #30
 800bef6:	bf58      	it	pl
 800bef8:	7c05      	ldrbpl	r5, [r0, #16]
 800befa:	6944      	ldr	r4, [r0, #20]
 800befc:	bf48      	it	mi
 800befe:	7c45      	ldrbmi	r5, [r0, #17]
 800bf00:	f101 030f 	add.w	r3, r1, #15
 800bf04:	54e5      	strb	r5, [r4, r3]
 800bf06:	07d2      	lsls	r2, r2, #31
 800bf08:	bf4c      	ite	mi
 800bf0a:	7c44      	ldrbmi	r4, [r0, #17]
 800bf0c:	7c04      	ldrbpl	r4, [r0, #16]
 800bf0e:	6942      	ldr	r2, [r0, #20]
 800bf10:	f101 0310 	add.w	r3, r1, #16
 800bf14:	e5a5      	b.n	800ba62 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x3b6>
 800bf16:	061d      	lsls	r5, r3, #24
 800bf18:	bf54      	ite	pl
 800bf1a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf1e:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf22:	6945      	ldr	r5, [r0, #20]
 800bf24:	1c4c      	adds	r4, r1, #1
 800bf26:	f805 e004 	strb.w	lr, [r5, r4]
 800bf2a:	065d      	lsls	r5, r3, #25
 800bf2c:	bf54      	ite	pl
 800bf2e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf32:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf36:	6945      	ldr	r5, [r0, #20]
 800bf38:	1c8c      	adds	r4, r1, #2
 800bf3a:	f805 e004 	strb.w	lr, [r5, r4]
 800bf3e:	069d      	lsls	r5, r3, #26
 800bf40:	bf54      	ite	pl
 800bf42:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf46:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf4a:	6945      	ldr	r5, [r0, #20]
 800bf4c:	1ccc      	adds	r4, r1, #3
 800bf4e:	f805 e004 	strb.w	lr, [r5, r4]
 800bf52:	06dd      	lsls	r5, r3, #27
 800bf54:	bf54      	ite	pl
 800bf56:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf5a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf5e:	6945      	ldr	r5, [r0, #20]
 800bf60:	1d0c      	adds	r4, r1, #4
 800bf62:	f805 e004 	strb.w	lr, [r5, r4]
 800bf66:	071d      	lsls	r5, r3, #28
 800bf68:	bf54      	ite	pl
 800bf6a:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf6e:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf72:	6945      	ldr	r5, [r0, #20]
 800bf74:	1d4c      	adds	r4, r1, #5
 800bf76:	f805 e004 	strb.w	lr, [r5, r4]
 800bf7a:	075d      	lsls	r5, r3, #29
 800bf7c:	bf54      	ite	pl
 800bf7e:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf82:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf86:	6945      	ldr	r5, [r0, #20]
 800bf88:	1d8c      	adds	r4, r1, #6
 800bf8a:	f805 e004 	strb.w	lr, [r5, r4]
 800bf8e:	079d      	lsls	r5, r3, #30
 800bf90:	bf58      	it	pl
 800bf92:	f890 e010 	ldrbpl.w	lr, [r0, #16]
 800bf96:	6945      	ldr	r5, [r0, #20]
 800bf98:	bf48      	it	mi
 800bf9a:	f890 e011 	ldrbmi.w	lr, [r0, #17]
 800bf9e:	1dcc      	adds	r4, r1, #7
 800bfa0:	f805 e004 	strb.w	lr, [r5, r4]
 800bfa4:	07db      	lsls	r3, r3, #31
 800bfa6:	bf4c      	ite	mi
 800bfa8:	7c45      	ldrbmi	r5, [r0, #17]
 800bfaa:	7c05      	ldrbpl	r5, [r0, #16]
 800bfac:	6943      	ldr	r3, [r0, #20]
 800bfae:	f101 0408 	add.w	r4, r1, #8
 800bfb2:	551d      	strb	r5, [r3, r4]
 800bfb4:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800bfb8:	bf0c      	ite	eq
 800bfba:	7c05      	ldrbeq	r5, [r0, #16]
 800bfbc:	7c45      	ldrbne	r5, [r0, #17]
 800bfbe:	6944      	ldr	r4, [r0, #20]
 800bfc0:	f101 0309 	add.w	r3, r1, #9
 800bfc4:	54e5      	strb	r5, [r4, r3]
 800bfc6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800bfca:	bf0c      	ite	eq
 800bfcc:	7c05      	ldrbeq	r5, [r0, #16]
 800bfce:	7c45      	ldrbne	r5, [r0, #17]
 800bfd0:	6944      	ldr	r4, [r0, #20]
 800bfd2:	f101 030a 	add.w	r3, r1, #10
 800bfd6:	54e5      	strb	r5, [r4, r3]
 800bfd8:	f01c 0f20 	tst.w	ip, #32
 800bfdc:	bf0c      	ite	eq
 800bfde:	7c05      	ldrbeq	r5, [r0, #16]
 800bfe0:	7c45      	ldrbne	r5, [r0, #17]
 800bfe2:	6944      	ldr	r4, [r0, #20]
 800bfe4:	f101 030b 	add.w	r3, r1, #11
 800bfe8:	54e5      	strb	r5, [r4, r3]
 800bfea:	f01c 0f10 	tst.w	ip, #16
 800bfee:	bf0c      	ite	eq
 800bff0:	7c05      	ldrbeq	r5, [r0, #16]
 800bff2:	7c45      	ldrbne	r5, [r0, #17]
 800bff4:	6944      	ldr	r4, [r0, #20]
 800bff6:	f101 030c 	add.w	r3, r1, #12
 800bffa:	54e5      	strb	r5, [r4, r3]
 800bffc:	f01c 0f08 	tst.w	ip, #8
 800c000:	bf0c      	ite	eq
 800c002:	7c05      	ldrbeq	r5, [r0, #16]
 800c004:	7c45      	ldrbne	r5, [r0, #17]
 800c006:	6944      	ldr	r4, [r0, #20]
 800c008:	f101 030d 	add.w	r3, r1, #13
 800c00c:	54e5      	strb	r5, [r4, r3]
 800c00e:	f01c 0f04 	tst.w	ip, #4
 800c012:	bf0c      	ite	eq
 800c014:	7c05      	ldrbeq	r5, [r0, #16]
 800c016:	7c45      	ldrbne	r5, [r0, #17]
 800c018:	6944      	ldr	r4, [r0, #20]
 800c01a:	f101 030e 	add.w	r3, r1, #14
 800c01e:	54e5      	strb	r5, [r4, r3]
 800c020:	f01c 0f02 	tst.w	ip, #2
 800c024:	bf0c      	ite	eq
 800c026:	7c05      	ldrbeq	r5, [r0, #16]
 800c028:	7c45      	ldrbne	r5, [r0, #17]
 800c02a:	6944      	ldr	r4, [r0, #20]
 800c02c:	f101 030f 	add.w	r3, r1, #15
 800c030:	54e5      	strb	r5, [r4, r3]
 800c032:	f01c 0f01 	tst.w	ip, #1
 800c036:	bf14      	ite	ne
 800c038:	7c45      	ldrbne	r5, [r0, #17]
 800c03a:	7c05      	ldrbeq	r5, [r0, #16]
 800c03c:	6944      	ldr	r4, [r0, #20]
 800c03e:	f101 0310 	add.w	r3, r1, #16
 800c042:	e604      	b.n	800bc4e <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x5a2>

0800c044 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800c044:	b570      	push	{r4, r5, r6, lr}
 800c046:	6804      	ldr	r4, [r0, #0]
 800c048:	f89d c010 	ldrb.w	ip, [sp, #16]
 800c04c:	2c07      	cmp	r4, #7
 800c04e:	f89d e014 	ldrb.w	lr, [sp, #20]
 800c052:	d000      	beq.n	800c056 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x12>
 800c054:	bd70      	pop	{r4, r5, r6, pc}
 800c056:	061e      	lsls	r6, r3, #24
 800c058:	ea4f 1141 	mov.w	r1, r1, lsl #5
 800c05c:	bf54      	ite	pl
 800c05e:	7c06      	ldrbpl	r6, [r0, #16]
 800c060:	7c46      	ldrbmi	r6, [r0, #17]
 800c062:	6945      	ldr	r5, [r0, #20]
 800c064:	1c4c      	adds	r4, r1, #1
 800c066:	552e      	strb	r6, [r5, r4]
 800c068:	065d      	lsls	r5, r3, #25
 800c06a:	bf54      	ite	pl
 800c06c:	7c06      	ldrbpl	r6, [r0, #16]
 800c06e:	7c46      	ldrbmi	r6, [r0, #17]
 800c070:	6945      	ldr	r5, [r0, #20]
 800c072:	1c8c      	adds	r4, r1, #2
 800c074:	552e      	strb	r6, [r5, r4]
 800c076:	069e      	lsls	r6, r3, #26
 800c078:	bf54      	ite	pl
 800c07a:	7c06      	ldrbpl	r6, [r0, #16]
 800c07c:	7c46      	ldrbmi	r6, [r0, #17]
 800c07e:	6945      	ldr	r5, [r0, #20]
 800c080:	1ccc      	adds	r4, r1, #3
 800c082:	552e      	strb	r6, [r5, r4]
 800c084:	06dd      	lsls	r5, r3, #27
 800c086:	bf54      	ite	pl
 800c088:	7c06      	ldrbpl	r6, [r0, #16]
 800c08a:	7c46      	ldrbmi	r6, [r0, #17]
 800c08c:	6945      	ldr	r5, [r0, #20]
 800c08e:	1d0c      	adds	r4, r1, #4
 800c090:	552e      	strb	r6, [r5, r4]
 800c092:	071e      	lsls	r6, r3, #28
 800c094:	bf54      	ite	pl
 800c096:	7c06      	ldrbpl	r6, [r0, #16]
 800c098:	7c46      	ldrbmi	r6, [r0, #17]
 800c09a:	6945      	ldr	r5, [r0, #20]
 800c09c:	1d4c      	adds	r4, r1, #5
 800c09e:	552e      	strb	r6, [r5, r4]
 800c0a0:	075d      	lsls	r5, r3, #29
 800c0a2:	bf54      	ite	pl
 800c0a4:	7c06      	ldrbpl	r6, [r0, #16]
 800c0a6:	7c46      	ldrbmi	r6, [r0, #17]
 800c0a8:	6945      	ldr	r5, [r0, #20]
 800c0aa:	1d8c      	adds	r4, r1, #6
 800c0ac:	552e      	strb	r6, [r5, r4]
 800c0ae:	079e      	lsls	r6, r3, #30
 800c0b0:	6945      	ldr	r5, [r0, #20]
 800c0b2:	bf54      	ite	pl
 800c0b4:	7c06      	ldrbpl	r6, [r0, #16]
 800c0b6:	7c46      	ldrbmi	r6, [r0, #17]
 800c0b8:	1dcc      	adds	r4, r1, #7
 800c0ba:	552e      	strb	r6, [r5, r4]
 800c0bc:	07dd      	lsls	r5, r3, #31
 800c0be:	bf4c      	ite	mi
 800c0c0:	7c45      	ldrbmi	r5, [r0, #17]
 800c0c2:	7c05      	ldrbpl	r5, [r0, #16]
 800c0c4:	6943      	ldr	r3, [r0, #20]
 800c0c6:	f101 0408 	add.w	r4, r1, #8
 800c0ca:	551d      	strb	r5, [r3, r4]
 800c0cc:	0614      	lsls	r4, r2, #24
 800c0ce:	bf54      	ite	pl
 800c0d0:	7c05      	ldrbpl	r5, [r0, #16]
 800c0d2:	7c45      	ldrbmi	r5, [r0, #17]
 800c0d4:	6944      	ldr	r4, [r0, #20]
 800c0d6:	f101 0309 	add.w	r3, r1, #9
 800c0da:	54e5      	strb	r5, [r4, r3]
 800c0dc:	0656      	lsls	r6, r2, #25
 800c0de:	bf54      	ite	pl
 800c0e0:	7c05      	ldrbpl	r5, [r0, #16]
 800c0e2:	7c45      	ldrbmi	r5, [r0, #17]
 800c0e4:	6944      	ldr	r4, [r0, #20]
 800c0e6:	f101 030a 	add.w	r3, r1, #10
 800c0ea:	54e5      	strb	r5, [r4, r3]
 800c0ec:	0695      	lsls	r5, r2, #26
 800c0ee:	bf54      	ite	pl
 800c0f0:	7c05      	ldrbpl	r5, [r0, #16]
 800c0f2:	7c45      	ldrbmi	r5, [r0, #17]
 800c0f4:	6944      	ldr	r4, [r0, #20]
 800c0f6:	f101 030b 	add.w	r3, r1, #11
 800c0fa:	54e5      	strb	r5, [r4, r3]
 800c0fc:	06d4      	lsls	r4, r2, #27
 800c0fe:	bf54      	ite	pl
 800c100:	7c05      	ldrbpl	r5, [r0, #16]
 800c102:	7c45      	ldrbmi	r5, [r0, #17]
 800c104:	6944      	ldr	r4, [r0, #20]
 800c106:	f101 030c 	add.w	r3, r1, #12
 800c10a:	54e5      	strb	r5, [r4, r3]
 800c10c:	0716      	lsls	r6, r2, #28
 800c10e:	bf54      	ite	pl
 800c110:	7c05      	ldrbpl	r5, [r0, #16]
 800c112:	7c45      	ldrbmi	r5, [r0, #17]
 800c114:	6944      	ldr	r4, [r0, #20]
 800c116:	f101 030d 	add.w	r3, r1, #13
 800c11a:	54e5      	strb	r5, [r4, r3]
 800c11c:	0755      	lsls	r5, r2, #29
 800c11e:	bf54      	ite	pl
 800c120:	7c05      	ldrbpl	r5, [r0, #16]
 800c122:	7c45      	ldrbmi	r5, [r0, #17]
 800c124:	6944      	ldr	r4, [r0, #20]
 800c126:	f101 030e 	add.w	r3, r1, #14
 800c12a:	54e5      	strb	r5, [r4, r3]
 800c12c:	0794      	lsls	r4, r2, #30
 800c12e:	bf58      	it	pl
 800c130:	7c05      	ldrbpl	r5, [r0, #16]
 800c132:	6944      	ldr	r4, [r0, #20]
 800c134:	bf48      	it	mi
 800c136:	7c45      	ldrbmi	r5, [r0, #17]
 800c138:	f101 030f 	add.w	r3, r1, #15
 800c13c:	54e5      	strb	r5, [r4, r3]
 800c13e:	07d2      	lsls	r2, r2, #31
 800c140:	bf4c      	ite	mi
 800c142:	7c44      	ldrbmi	r4, [r0, #17]
 800c144:	7c04      	ldrbpl	r4, [r0, #16]
 800c146:	6942      	ldr	r2, [r0, #20]
 800c148:	f101 0310 	add.w	r3, r1, #16
 800c14c:	54d4      	strb	r4, [r2, r3]
 800c14e:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800c152:	bf0c      	ite	eq
 800c154:	7c04      	ldrbeq	r4, [r0, #16]
 800c156:	7c44      	ldrbne	r4, [r0, #17]
 800c158:	6942      	ldr	r2, [r0, #20]
 800c15a:	f101 0311 	add.w	r3, r1, #17
 800c15e:	54d4      	strb	r4, [r2, r3]
 800c160:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c164:	bf14      	ite	ne
 800c166:	7c44      	ldrbne	r4, [r0, #17]
 800c168:	7c04      	ldrbeq	r4, [r0, #16]
 800c16a:	6942      	ldr	r2, [r0, #20]
 800c16c:	f101 0312 	add.w	r3, r1, #18
 800c170:	54d4      	strb	r4, [r2, r3]
 800c172:	f01c 0f20 	tst.w	ip, #32
 800c176:	bf14      	ite	ne
 800c178:	7c44      	ldrbne	r4, [r0, #17]
 800c17a:	7c04      	ldrbeq	r4, [r0, #16]
 800c17c:	6942      	ldr	r2, [r0, #20]
 800c17e:	f101 0313 	add.w	r3, r1, #19
 800c182:	54d4      	strb	r4, [r2, r3]
 800c184:	f01c 0f10 	tst.w	ip, #16
 800c188:	bf14      	ite	ne
 800c18a:	7c44      	ldrbne	r4, [r0, #17]
 800c18c:	7c04      	ldrbeq	r4, [r0, #16]
 800c18e:	6942      	ldr	r2, [r0, #20]
 800c190:	f101 0314 	add.w	r3, r1, #20
 800c194:	54d4      	strb	r4, [r2, r3]
 800c196:	f01c 0f08 	tst.w	ip, #8
 800c19a:	bf14      	ite	ne
 800c19c:	7c44      	ldrbne	r4, [r0, #17]
 800c19e:	7c04      	ldrbeq	r4, [r0, #16]
 800c1a0:	6942      	ldr	r2, [r0, #20]
 800c1a2:	f101 0315 	add.w	r3, r1, #21
 800c1a6:	54d4      	strb	r4, [r2, r3]
 800c1a8:	f01c 0f04 	tst.w	ip, #4
 800c1ac:	bf14      	ite	ne
 800c1ae:	7c44      	ldrbne	r4, [r0, #17]
 800c1b0:	7c04      	ldrbeq	r4, [r0, #16]
 800c1b2:	6942      	ldr	r2, [r0, #20]
 800c1b4:	f101 0316 	add.w	r3, r1, #22
 800c1b8:	54d4      	strb	r4, [r2, r3]
 800c1ba:	f01c 0f02 	tst.w	ip, #2
 800c1be:	bf14      	ite	ne
 800c1c0:	7c44      	ldrbne	r4, [r0, #17]
 800c1c2:	7c04      	ldrbeq	r4, [r0, #16]
 800c1c4:	6942      	ldr	r2, [r0, #20]
 800c1c6:	f101 0317 	add.w	r3, r1, #23
 800c1ca:	54d4      	strb	r4, [r2, r3]
 800c1cc:	f01c 0f01 	tst.w	ip, #1
 800c1d0:	bf14      	ite	ne
 800c1d2:	7c44      	ldrbne	r4, [r0, #17]
 800c1d4:	7c04      	ldrbeq	r4, [r0, #16]
 800c1d6:	6942      	ldr	r2, [r0, #20]
 800c1d8:	f101 0318 	add.w	r3, r1, #24
 800c1dc:	54d4      	strb	r4, [r2, r3]
 800c1de:	f01e 0f80 	tst.w	lr, #128	; 0x80
 800c1e2:	bf0c      	ite	eq
 800c1e4:	7c04      	ldrbeq	r4, [r0, #16]
 800c1e6:	7c44      	ldrbne	r4, [r0, #17]
 800c1e8:	6942      	ldr	r2, [r0, #20]
 800c1ea:	f101 0319 	add.w	r3, r1, #25
 800c1ee:	54d4      	strb	r4, [r2, r3]
 800c1f0:	f01e 0f40 	tst.w	lr, #64	; 0x40
 800c1f4:	bf0c      	ite	eq
 800c1f6:	7c04      	ldrbeq	r4, [r0, #16]
 800c1f8:	7c44      	ldrbne	r4, [r0, #17]
 800c1fa:	6942      	ldr	r2, [r0, #20]
 800c1fc:	f101 031a 	add.w	r3, r1, #26
 800c200:	54d4      	strb	r4, [r2, r3]
 800c202:	f01e 0f20 	tst.w	lr, #32
 800c206:	bf0c      	ite	eq
 800c208:	7c04      	ldrbeq	r4, [r0, #16]
 800c20a:	7c44      	ldrbne	r4, [r0, #17]
 800c20c:	6942      	ldr	r2, [r0, #20]
 800c20e:	f101 031b 	add.w	r3, r1, #27
 800c212:	54d4      	strb	r4, [r2, r3]
 800c214:	f01e 0f10 	tst.w	lr, #16
 800c218:	bf0c      	ite	eq
 800c21a:	7c04      	ldrbeq	r4, [r0, #16]
 800c21c:	7c44      	ldrbne	r4, [r0, #17]
 800c21e:	6942      	ldr	r2, [r0, #20]
 800c220:	f101 031c 	add.w	r3, r1, #28
 800c224:	54d4      	strb	r4, [r2, r3]
 800c226:	f01e 0f08 	tst.w	lr, #8
 800c22a:	bf0c      	ite	eq
 800c22c:	7c04      	ldrbeq	r4, [r0, #16]
 800c22e:	7c44      	ldrbne	r4, [r0, #17]
 800c230:	6942      	ldr	r2, [r0, #20]
 800c232:	f101 031d 	add.w	r3, r1, #29
 800c236:	54d4      	strb	r4, [r2, r3]
 800c238:	f01e 0f04 	tst.w	lr, #4
 800c23c:	bf0c      	ite	eq
 800c23e:	7c04      	ldrbeq	r4, [r0, #16]
 800c240:	7c44      	ldrbne	r4, [r0, #17]
 800c242:	6942      	ldr	r2, [r0, #20]
 800c244:	f101 031e 	add.w	r3, r1, #30
 800c248:	54d4      	strb	r4, [r2, r3]
 800c24a:	f01e 0f02 	tst.w	lr, #2
 800c24e:	6942      	ldr	r2, [r0, #20]
 800c250:	bf0c      	ite	eq
 800c252:	7c04      	ldrbeq	r4, [r0, #16]
 800c254:	7c44      	ldrbne	r4, [r0, #17]
 800c256:	f101 031f 	add.w	r3, r1, #31
 800c25a:	54d4      	strb	r4, [r2, r3]
 800c25c:	f01e 0f01 	tst.w	lr, #1
 800c260:	bf14      	ite	ne
 800c262:	7c42      	ldrbne	r2, [r0, #17]
 800c264:	7c02      	ldrbeq	r2, [r0, #16]
 800c266:	6943      	ldr	r3, [r0, #20]
 800c268:	3120      	adds	r1, #32
 800c26a:	545a      	strb	r2, [r3, r1]
 800c26c:	bd70      	pop	{r4, r5, r6, pc}
 800c26e:	bf00      	nop

0800c270 <WS28xx::~WS28xx()>:
 800c270:	2200      	movs	r2, #0
 800c272:	4b01      	ldr	r3, [pc, #4]	; (800c278 <WS28xx::~WS28xx()+0x8>)
 800c274:	601a      	str	r2, [r3, #0]
 800c276:	4770      	bx	lr
 800c278:	20000730 	andcs	r0, r0, r0, lsr r7

0800c27c <WS28xx::SetupBuffers()>:
 800c27c:	b513      	push	{r0, r1, r4, lr}
 800c27e:	4604      	mov	r4, r0
 800c280:	a801      	add	r0, sp, #4
 800c282:	f006 f869 	bl	8012358 <gd32_spi_dma_tx_prepare(unsigned int*)>
 800c286:	9b01      	ldr	r3, [sp, #4]
 800c288:	4a07      	ldr	r2, [pc, #28]	; (800c2a8 <WS28xx::SetupBuffers()+0x2c>)
 800c28a:	085b      	lsrs	r3, r3, #1
 800c28c:	f023 0303 	bic.w	r3, r3, #3
 800c290:	6160      	str	r0, [r4, #20]
 800c292:	4418      	add	r0, r3
 800c294:	68e3      	ldr	r3, [r4, #12]
 800c296:	61a0      	str	r0, [r4, #24]
 800c298:	6013      	str	r3, [r2, #0]
 800c29a:	3303      	adds	r3, #3
 800c29c:	f023 0303 	bic.w	r3, r3, #3
 800c2a0:	60e3      	str	r3, [r4, #12]
 800c2a2:	b002      	add	sp, #8
 800c2a4:	bd10      	pop	{r4, pc}
 800c2a6:	bf00      	nop
 800c2a8:	2000072c 	andcs	r0, r0, ip, lsr #14

0800c2ac <WS28xx::WS28xx(PixelConfiguration&)>:
 800c2ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2ae:	23aa      	movs	r3, #170	; 0xaa
 800c2b0:	2203      	movs	r2, #3
 800c2b2:	e9c0 2300 	strd	r2, r3, [r0]
 800c2b6:	2306      	movs	r3, #6
 800c2b8:	6083      	str	r3, [r0, #8]
 800c2ba:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 800c2be:	8243      	strh	r3, [r0, #18]
 800c2c0:	2300      	movs	r3, #0
 800c2c2:	460d      	mov	r5, r1
 800c2c4:	4604      	mov	r4, r0
 800c2c6:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c2ca:	4b17      	ldr	r3, [pc, #92]	; (800c328 <WS28xx::WS28xx(PixelConfiguration&)+0x7c>)
 800c2cc:	a901      	add	r1, sp, #4
 800c2ce:	6018      	str	r0, [r3, #0]
 800c2d0:	4628      	mov	r0, r5
 800c2d2:	f7fe fddf 	bl	800ae94 <PixelConfiguration::Validate(unsigned int&)>
 800c2d6:	4628      	mov	r0, r5
 800c2d8:	f7fe fe48 	bl	800af6c <PixelConfiguration::Dump()>
 800c2dc:	68ab      	ldr	r3, [r5, #8]
 800c2de:	686a      	ldr	r2, [r5, #4]
 800c2e0:	60a3      	str	r3, [r4, #8]
 800c2e2:	8a2b      	ldrh	r3, [r5, #16]
 800c2e4:	6829      	ldr	r1, [r5, #0]
 800c2e6:	8223      	strh	r3, [r4, #16]
 800c2e8:	7cab      	ldrb	r3, [r5, #18]
 800c2ea:	7ce8      	ldrb	r0, [r5, #19]
 800c2ec:	74e3      	strb	r3, [r4, #19]
 800c2ee:	9b01      	ldr	r3, [sp, #4]
 800c2f0:	6021      	str	r1, [r4, #0]
 800c2f2:	4353      	muls	r3, r2
 800c2f4:	6062      	str	r2, [r4, #4]
 800c2f6:	74a0      	strb	r0, [r4, #18]
 800c2f8:	b998      	cbnz	r0, 800c322 <WS28xx::WS28xx(PixelConfiguration&)+0x76>
 800c2fa:	390b      	subs	r1, #11
 800c2fc:	2902      	cmp	r1, #2
 800c2fe:	60e3      	str	r3, [r4, #12]
 800c300:	bf9e      	ittt	ls
 800c302:	68e3      	ldrls	r3, [r4, #12]
 800c304:	3208      	addls	r2, #8
 800c306:	18d2      	addls	r2, r2, r3
 800c308:	4620      	mov	r0, r4
 800c30a:	bf98      	it	ls
 800c30c:	60e2      	strls	r2, [r4, #12]
 800c30e:	f7ff ffb5 	bl	800c27c <WS28xx::SetupBuffers()>
 800c312:	f005 ff97 	bl	8012244 <gd32_spi_dma_begin()>
 800c316:	68e8      	ldr	r0, [r5, #12]
 800c318:	f006 f80a 	bl	8012330 <gd32_spi_dma_set_speed_hz(unsigned int)>
 800c31c:	4620      	mov	r0, r4
 800c31e:	b003      	add	sp, #12
 800c320:	bd30      	pop	{r4, r5, pc}
 800c322:	00db      	lsls	r3, r3, #3
 800c324:	3301      	adds	r3, #1
 800c326:	e7e8      	b.n	800c2fa <WS28xx::WS28xx(PixelConfiguration&)+0x4e>
 800c328:	20000730 	andcs	r0, r0, r0, lsr r7

0800c32c <WS28xx::Update()>:
 800c32c:	2200      	movs	r2, #0
 800c32e:	b430      	push	{r4, r5}
 800c330:	4b0b      	ldr	r3, [pc, #44]	; (800c360 <WS28xx::Update()+0x34>)
 800c332:	681b      	ldr	r3, [r3, #0]
 800c334:	68c1      	ldr	r1, [r0, #12]
 800c336:	6944      	ldr	r4, [r0, #20]
 800c338:	4299      	cmp	r1, r3
 800c33a:	d902      	bls.n	800c342 <WS28xx::Update()+0x16>
 800c33c:	54e2      	strb	r2, [r4, r3]
 800c33e:	3301      	adds	r3, #1
 800c340:	e7f8      	b.n	800c334 <WS28xx::Update()+0x8>
 800c342:	2300      	movs	r3, #0
 800c344:	6980      	ldr	r0, [r0, #24]
 800c346:	084d      	lsrs	r5, r1, #1
 800c348:	429d      	cmp	r5, r3
 800c34a:	d006      	beq.n	800c35a <WS28xx::Update()+0x2e>
 800c34c:	f834 2013 	ldrh.w	r2, [r4, r3, lsl #1]
 800c350:	ba52      	rev16	r2, r2
 800c352:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800c356:	3301      	adds	r3, #1
 800c358:	e7f6      	b.n	800c348 <WS28xx::Update()+0x1c>
 800c35a:	bc30      	pop	{r4, r5}
 800c35c:	f006 b804 	b.w	8012368 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>
 800c360:	2000072c 	andcs	r0, r0, ip, lsr #14

0800c364 <WS28xx::Blackout()>:
 800c364:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c366:	e9d0 6305 	ldrd	r6, r3, [r0, #20]
 800c36a:	4604      	mov	r4, r0
 800c36c:	6143      	str	r3, [r0, #20]
 800c36e:	f3bf 8f6f 	isb	sy
 800c372:	f006 f813 	bl	801239c <gd32_spi_dma_tx_is_active()>
 800c376:	2800      	cmp	r0, #0
 800c378:	d1f9      	bne.n	800c36e <WS28xx::Blackout()+0xa>
 800c37a:	6822      	ldr	r2, [r4, #0]
 800c37c:	6963      	ldr	r3, [r4, #20]
 800c37e:	3a0b      	subs	r2, #11
 800c380:	2a02      	cmp	r2, #2
 800c382:	7018      	strb	r0, [r3, #0]
 800c384:	d82a      	bhi.n	800c3dc <WS28xx::Blackout()+0x78>
 800c386:	4605      	mov	r5, r0
 800c388:	4607      	mov	r7, r0
 800c38a:	7058      	strb	r0, [r3, #1]
 800c38c:	7098      	strb	r0, [r3, #2]
 800c38e:	70d8      	strb	r0, [r3, #3]
 800c390:	6863      	ldr	r3, [r4, #4]
 800c392:	42ab      	cmp	r3, r5
 800c394:	d908      	bls.n	800c3a8 <WS28xx::Blackout()+0x44>
 800c396:	2300      	movs	r3, #0
 800c398:	4629      	mov	r1, r5
 800c39a:	461a      	mov	r2, r3
 800c39c:	4620      	mov	r0, r4
 800c39e:	9700      	str	r7, [sp, #0]
 800c3a0:	f7ff f984 	bl	800b6ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 800c3a4:	3501      	adds	r5, #1
 800c3a6:	e7f3      	b.n	800c390 <WS28xx::Blackout()+0x2c>
 800c3a8:	6821      	ldr	r1, [r4, #0]
 800c3aa:	68e2      	ldr	r2, [r4, #12]
 800c3ac:	390b      	subs	r1, #11
 800c3ae:	2901      	cmp	r1, #1
 800c3b0:	bf94      	ite	ls
 800c3b2:	21ff      	movls	r1, #255	; 0xff
 800c3b4:	2100      	movhi	r1, #0
 800c3b6:	6960      	ldr	r0, [r4, #20]
 800c3b8:	3a04      	subs	r2, #4
 800c3ba:	1883      	adds	r3, r0, r2
 800c3bc:	5481      	strb	r1, [r0, r2]
 800c3be:	7059      	strb	r1, [r3, #1]
 800c3c0:	7099      	strb	r1, [r3, #2]
 800c3c2:	70d9      	strb	r1, [r3, #3]
 800c3c4:	4620      	mov	r0, r4
 800c3c6:	f7ff ffb1 	bl	800c32c <WS28xx::Update()>
 800c3ca:	f3bf 8f6f 	isb	sy
 800c3ce:	f005 ffe5 	bl	801239c <gd32_spi_dma_tx_is_active()>
 800c3d2:	2800      	cmp	r0, #0
 800c3d4:	d1f9      	bne.n	800c3ca <WS28xx::Blackout()+0x66>
 800c3d6:	6166      	str	r6, [r4, #20]
 800c3d8:	b003      	add	sp, #12
 800c3da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3dc:	6963      	ldr	r3, [r4, #20]
 800c3de:	6821      	ldr	r1, [r4, #0]
 800c3e0:	1c5a      	adds	r2, r3, #1
 800c3e2:	b101      	cbz	r1, 800c3e6 <WS28xx::Blackout()+0x82>
 800c3e4:	7c21      	ldrb	r1, [r4, #16]
 800c3e6:	68e0      	ldr	r0, [r4, #12]
 800c3e8:	3001      	adds	r0, #1
 800c3ea:	4403      	add	r3, r0
 800c3ec:	429a      	cmp	r2, r3
 800c3ee:	d0e9      	beq.n	800c3c4 <WS28xx::Blackout()+0x60>
 800c3f0:	f802 1b01 	strb.w	r1, [r2], #1
 800c3f4:	e7fa      	b.n	800c3ec <WS28xx::Blackout()+0x88>
	...

0800c3f8 <RemoteConfig::HandleList()>:
 800c3f8:	2212      	movs	r2, #18
 800c3fa:	6803      	ldr	r3, [r0, #0]
 800c3fc:	4931      	ldr	r1, [pc, #196]	; (800c4c4 <RemoteConfig::HandleList()+0xcc>)
 800c3fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c402:	fb02 1103 	mla	r1, r2, r3, r1
 800c406:	220c      	movs	r2, #12
 800c408:	4604      	mov	r4, r0
 800c40a:	6843      	ldr	r3, [r0, #4]
 800c40c:	482e      	ldr	r0, [pc, #184]	; (800c4c8 <RemoteConfig::HandleList()+0xd0>)
 800c40e:	4e2f      	ldr	r6, [pc, #188]	; (800c4cc <RemoteConfig::HandleList()+0xd4>)
 800c410:	fb02 0003 	mla	r0, r2, r3, r0
 800c414:	4b2e      	ldr	r3, [pc, #184]	; (800c4d0 <RemoteConfig::HandleList()+0xd8>)
 800c416:	4f2f      	ldr	r7, [pc, #188]	; (800c4d4 <RemoteConfig::HandleList()+0xdc>)
 800c418:	681b      	ldr	r3, [r3, #0]
 800c41a:	6835      	ldr	r5, [r6, #0]
 800c41c:	f8d3 c010 	ldr.w	ip, [r3, #16]
 800c420:	f897 9009 	ldrb.w	r9, [r7, #9]
 800c424:	fa5f f38c 	uxtb.w	r3, ip
 800c428:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 800c42c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 800c430:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800c434:	b089      	sub	sp, #36	; 0x24
 800c436:	3507      	adds	r5, #7
 800c438:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 800c43c:	f1b9 0f00 	cmp.w	r9, #0
 800c440:	d023      	beq.n	800c48a <RemoteConfig::HandleList()+0x92>
 800c442:	b2d2      	uxtb	r2, r2
 800c444:	3709      	adds	r7, #9
 800c446:	9201      	str	r2, [sp, #4]
 800c448:	fa5f f28c 	uxtb.w	r2, ip
 800c44c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800c450:	9200      	str	r2, [sp, #0]
 800c452:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800c456:	4628      	mov	r0, r5
 800c458:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800c45c:	4a1e      	ldr	r2, [pc, #120]	; (800c4d8 <RemoteConfig::HandleList()+0xe0>)
 800c45e:	f8cd e008 	str.w	lr, [sp, #8]
 800c462:	f7fd f8b5 	bl	80095d0 <snprintf>
 800c466:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800c46a:	2b05      	cmp	r3, #5
 800c46c:	d11d      	bne.n	800c4aa <RemoteConfig::HandleList()+0xb2>
 800c46e:	f642 1305 	movw	r3, #10501	; 0x2905
 800c472:	9300      	str	r3, [sp, #0]
 800c474:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c478:	b282      	uxth	r2, r0
 800c47a:	4629      	mov	r1, r5
 800c47c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c480:	f002 fa28 	bl	800e8d4 <udp_send>
 800c484:	b009      	add	sp, #36	; 0x24
 800c486:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c48a:	b2d2      	uxtb	r2, r2
 800c48c:	9201      	str	r2, [sp, #4]
 800c48e:	fa5f f28c 	uxtb.w	r2, ip
 800c492:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800c496:	e9cd e102 	strd	lr, r1, [sp, #8]
 800c49a:	9200      	str	r2, [sp, #0]
 800c49c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800c4a0:	4628      	mov	r0, r5
 800c4a2:	4a0e      	ldr	r2, [pc, #56]	; (800c4dc <RemoteConfig::HandleList()+0xe4>)
 800c4a4:	f7fd f894 	bl	80095d0 <snprintf>
 800c4a8:	e7dd      	b.n	800c466 <RemoteConfig::HandleList()+0x6e>
 800c4aa:	2b06      	cmp	r3, #6
 800c4ac:	d1ea      	bne.n	800c484 <RemoteConfig::HandleList()+0x8c>
 800c4ae:	6833      	ldr	r3, [r6, #0]
 800c4b0:	799b      	ldrb	r3, [r3, #6]
 800c4b2:	2b2a      	cmp	r3, #42	; 0x2a
 800c4b4:	d1e6      	bne.n	800c484 <RemoteConfig::HandleList()+0x8c>
 800c4b6:	f642 1305 	movw	r3, #10501	; 0x2905
 800c4ba:	9300      	str	r3, [sp, #0]
 800c4bc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c4c0:	e7da      	b.n	800c478 <RemoteConfig::HandleList()+0x80>
 800c4c2:	bf00      	nop
 800c4c4:	08013864 	stmdaeq	r1, {r2, r5, r6, fp, ip, sp}
 800c4c8:	08013906 	stmdaeq	r1, {r1, r2, r8, fp, ip, sp}
 800c4cc:	20000734 	andcs	r0, r0, r4, lsr r7
 800c4d0:	20009070 	andcs	r9, r0, r0, ror r0
 800c4d4:	20000738 	andcs	r0, r0, r8, lsr r7
 800c4d8:	0801379e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, r9, sl, ip, sp}
 800c4dc:	080137b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, ip, sp}

0800c4e0 <RemoteConfig::HandleDisplayGet()>:
 800c4e0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800c4e4:	2b08      	cmp	r3, #8
 800c4e6:	d11d      	bne.n	800c524 <RemoteConfig::HandleDisplayGet()+0x44>
 800c4e8:	4b0f      	ldr	r3, [pc, #60]	; (800c528 <RemoteConfig::HandleDisplayGet()+0x48>)
 800c4ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c4ec:	681b      	ldr	r3, [r3, #0]
 800c4ee:	4d0f      	ldr	r5, [pc, #60]	; (800c52c <RemoteConfig::HandleDisplayGet()+0x4c>)
 800c4f0:	7c19      	ldrb	r1, [r3, #16]
 800c4f2:	4a0f      	ldr	r2, [pc, #60]	; (800c530 <RemoteConfig::HandleDisplayGet()+0x50>)
 800c4f4:	4b0f      	ldr	r3, [pc, #60]	; (800c534 <RemoteConfig::HandleDisplayGet()+0x54>)
 800c4f6:	4604      	mov	r4, r0
 800c4f8:	2900      	cmp	r1, #0
 800c4fa:	bf18      	it	ne
 800c4fc:	4613      	movne	r3, r2
 800c4fe:	6828      	ldr	r0, [r5, #0]
 800c500:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800c504:	4a0c      	ldr	r2, [pc, #48]	; (800c538 <RemoteConfig::HandleDisplayGet()+0x58>)
 800c506:	f7fd f863 	bl	80095d0 <snprintf>
 800c50a:	f642 1305 	movw	r3, #10501	; 0x2905
 800c50e:	9300      	str	r3, [sp, #0]
 800c510:	b282      	uxth	r2, r0
 800c512:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c516:	6829      	ldr	r1, [r5, #0]
 800c518:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c51c:	f002 f9da 	bl	800e8d4 <udp_send>
 800c520:	b003      	add	sp, #12
 800c522:	bd30      	pop	{r4, r5, pc}
 800c524:	4770      	bx	lr
 800c526:	bf00      	nop
 800c528:	200096a0 	andcs	r9, r0, r0, lsr #13
 800c52c:	20000734 	andcs	r0, r0, r4, lsr r7
 800c530:	080137d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp}
 800c534:	080137cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, ip, sp}
 800c538:	080137d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, ip, sp}

0800c53c <RemoteConfig::HandleTftpSet()>:
 800c53c:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800c540:	2a06      	cmp	r2, #6
 800c542:	d109      	bne.n	800c558 <RemoteConfig::HandleTftpSet()+0x1c>
 800c544:	4a05      	ldr	r2, [pc, #20]	; (800c55c <RemoteConfig::HandleTftpSet()+0x20>)
 800c546:	6812      	ldr	r2, [r2, #0]
 800c548:	7992      	ldrb	r2, [r2, #6]
 800c54a:	3a30      	subs	r2, #48	; 0x30
 800c54c:	bf18      	it	ne
 800c54e:	2201      	movne	r2, #1
 800c550:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800c554:	f000 bd84 	b.w	800d060 <RemoteConfig::PlatformHandleTftpSet()>
 800c558:	4770      	bx	lr
 800c55a:	bf00      	nop
 800c55c:	20000734 	andcs	r0, r0, r4, lsr r7

0800c560 <RemoteConfig::HandleTftpGet()>:
 800c560:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c562:	4604      	mov	r4, r0
 800c564:	f000 fd84 	bl	800d070 <RemoteConfig::PlatformHandleTftpGet()>
 800c568:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800c56c:	2b05      	cmp	r3, #5
 800c56e:	d118      	bne.n	800c5a2 <RemoteConfig::HandleTftpGet()+0x42>
 800c570:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800c574:	4d0c      	ldr	r5, [pc, #48]	; (800c5a8 <RemoteConfig::HandleTftpGet()+0x48>)
 800c576:	4a0d      	ldr	r2, [pc, #52]	; (800c5ac <RemoteConfig::HandleTftpGet()+0x4c>)
 800c578:	4b0d      	ldr	r3, [pc, #52]	; (800c5b0 <RemoteConfig::HandleTftpGet()+0x50>)
 800c57a:	6828      	ldr	r0, [r5, #0]
 800c57c:	2900      	cmp	r1, #0
 800c57e:	bf08      	it	eq
 800c580:	4613      	moveq	r3, r2
 800c582:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800c586:	4a0b      	ldr	r2, [pc, #44]	; (800c5b4 <RemoteConfig::HandleTftpGet()+0x54>)
 800c588:	f7fd f822 	bl	80095d0 <snprintf>
 800c58c:	f642 1305 	movw	r3, #10501	; 0x2905
 800c590:	b282      	uxth	r2, r0
 800c592:	9300      	str	r3, [sp, #0]
 800c594:	6829      	ldr	r1, [r5, #0]
 800c596:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c59a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c59e:	f002 f999 	bl	800e8d4 <udp_send>
 800c5a2:	b003      	add	sp, #12
 800c5a4:	bd30      	pop	{r4, r5, pc}
 800c5a6:	bf00      	nop
 800c5a8:	20000734 	andcs	r0, r0, r4, lsr r7
 800c5ac:	080137d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp}
 800c5b0:	080137cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, ip, sp}
 800c5b4:	080137e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, ip, sp}

0800c5b8 <RemoteConfig::HandleVersion()>:
 800c5b8:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800c5bc:	2b08      	cmp	r3, #8
 800c5be:	d116      	bne.n	800c5ee <RemoteConfig::HandleVersion()+0x36>
 800c5c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c5c2:	4d0b      	ldr	r5, [pc, #44]	; (800c5f0 <RemoteConfig::HandleVersion()+0x38>)
 800c5c4:	4604      	mov	r4, r0
 800c5c6:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800c5ca:	4b0a      	ldr	r3, [pc, #40]	; (800c5f4 <RemoteConfig::HandleVersion()+0x3c>)
 800c5cc:	4a0a      	ldr	r2, [pc, #40]	; (800c5f8 <RemoteConfig::HandleVersion()+0x40>)
 800c5ce:	6828      	ldr	r0, [r5, #0]
 800c5d0:	f7fc fffe 	bl	80095d0 <snprintf>
 800c5d4:	f642 1305 	movw	r3, #10501	; 0x2905
 800c5d8:	9300      	str	r3, [sp, #0]
 800c5da:	b282      	uxth	r2, r0
 800c5dc:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c5e0:	6829      	ldr	r1, [r5, #0]
 800c5e2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c5e6:	f002 f975 	bl	800e8d4 <udp_send>
 800c5ea:	b003      	add	sp, #12
 800c5ec:	bd30      	pop	{r4, r5, pc}
 800c5ee:	4770      	bx	lr
 800c5f0:	20000734 	andcs	r0, r0, r4, lsr r7
 800c5f4:	20009746 	andcs	r9, r0, r6, asr #14
 800c5f8:	080137e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp}

0800c5fc <RemoteConfig::HandleUptime()>:
 800c5fc:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800c600:	b1fb      	cbz	r3, 800c642 <RemoteConfig::HandleUptime()+0x46>
 800c602:	4b10      	ldr	r3, [pc, #64]	; (800c644 <RemoteConfig::HandleUptime()+0x48>)
 800c604:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c606:	681a      	ldr	r2, [r3, #0]
 800c608:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800c60c:	4604      	mov	r4, r0
 800c60e:	2b07      	cmp	r3, #7
 800c610:	d115      	bne.n	800c63e <RemoteConfig::HandleUptime()+0x42>
 800c612:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800c616:	4d0c      	ldr	r5, [pc, #48]	; (800c648 <RemoteConfig::HandleUptime()+0x4c>)
 800c618:	fbb2 f3f3 	udiv	r3, r2, r3
 800c61c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800c620:	4a0a      	ldr	r2, [pc, #40]	; (800c64c <RemoteConfig::HandleUptime()+0x50>)
 800c622:	6828      	ldr	r0, [r5, #0]
 800c624:	f7fc ffd4 	bl	80095d0 <snprintf>
 800c628:	f642 1305 	movw	r3, #10501	; 0x2905
 800c62c:	9300      	str	r3, [sp, #0]
 800c62e:	b282      	uxth	r2, r0
 800c630:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c634:	6829      	ldr	r1, [r5, #0]
 800c636:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c63a:	f002 f94b 	bl	800e8d4 <udp_send>
 800c63e:	b003      	add	sp, #12
 800c640:	bd30      	pop	{r4, r5, pc}
 800c642:	4770      	bx	lr
 800c644:	200097a4 	andcs	r9, r0, r4, lsr #15
 800c648:	20000734 	andcs	r0, r0, r4, lsr r7
 800c64c:	080137f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, ip, sp}

0800c650 <RemoteConfig::HandleDisplaySet()>:
 800c650:	b538      	push	{r3, r4, r5, lr}
 800c652:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800c656:	2b09      	cmp	r3, #9
 800c658:	d113      	bne.n	800c682 <RemoteConfig::HandleDisplaySet()+0x32>
 800c65a:	4b0a      	ldr	r3, [pc, #40]	; (800c684 <RemoteConfig::HandleDisplaySet()+0x34>)
 800c65c:	681c      	ldr	r4, [r3, #0]
 800c65e:	4b0a      	ldr	r3, [pc, #40]	; (800c688 <RemoteConfig::HandleDisplaySet()+0x38>)
 800c660:	69a0      	ldr	r0, [r4, #24]
 800c662:	681b      	ldr	r3, [r3, #0]
 800c664:	7a5d      	ldrb	r5, [r3, #9]
 800c666:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800c66a:	4259      	negs	r1, r3
 800c66c:	4159      	adcs	r1, r3
 800c66e:	b140      	cbz	r0, 800c682 <RemoteConfig::HandleDisplaySet()+0x32>
 800c670:	6803      	ldr	r3, [r0, #0]
 800c672:	7421      	strb	r1, [r4, #16]
 800c674:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c676:	4798      	blx	r3
 800c678:	2d30      	cmp	r5, #48	; 0x30
 800c67a:	bf1e      	ittt	ne
 800c67c:	4b03      	ldrne	r3, [pc, #12]	; (800c68c <RemoteConfig::HandleDisplaySet()+0x3c>)
 800c67e:	681b      	ldrne	r3, [r3, #0]
 800c680:	6063      	strne	r3, [r4, #4]
 800c682:	bd38      	pop	{r3, r4, r5, pc}
 800c684:	200096a0 	andcs	r9, r0, r0, lsr #13
 800c688:	20000734 	andcs	r0, r0, r4, lsr r7
 800c68c:	200097a4 	andcs	r9, r0, r4, lsr #15

0800c690 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800c690:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c694:	f100 0a0c 	add.w	sl, r0, #12
 800c698:	4604      	mov	r4, r0
 800c69a:	e9c0 1200 	strd	r1, r2, [r0]
 800c69e:	6083      	str	r3, [r0, #8]
 800c6a0:	4650      	mov	r0, sl
 800c6a2:	4690      	mov	r8, r2
 800c6a4:	4689      	mov	r9, r1
 800c6a6:	461f      	mov	r7, r3
 800c6a8:	f000 fd22 	bl	800d0f0 <HttpDaemon::HttpDaemon()>
 800c6ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c6b0:	2500      	movs	r5, #0
 800c6b2:	4e16      	ldr	r6, [pc, #88]	; (800c70c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800c6b4:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c710 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800c6b8:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800c6bc:	4b15      	ldr	r3, [pc, #84]	; (800c714 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800c6be:	4631      	mov	r1, r6
 800c6c0:	f8db 0000 	ldr.w	r0, [fp]
 800c6c4:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800c6c8:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800c6cc:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800c6d0:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800c6d4:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800c6d8:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800c6dc:	601c      	str	r4, [r3, #0]
 800c6de:	f002 fdcd 	bl	800f27c <Network::MacAddressCopyTo(unsigned char*)>
 800c6e2:	f642 1105 	movw	r1, #10501	; 0x2905
 800c6e6:	f8db 0000 	ldr.w	r0, [fp]
 800c6ea:	f886 9006 	strb.w	r9, [r6, #6]
 800c6ee:	f886 8007 	strb.w	r8, [r6, #7]
 800c6f2:	7237      	strb	r7, [r6, #8]
 800c6f4:	7275      	strb	r5, [r6, #9]
 800c6f6:	f002 fdbb 	bl	800f270 <Network::Begin(unsigned short)>
 800c6fa:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800c6fe:	4650      	mov	r0, sl
 800c700:	f000 fd0e 	bl	800d120 <HttpDaemon::Start()>
 800c704:	4620      	mov	r0, r4
 800c706:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c70a:	bf00      	nop
 800c70c:	20000738 	andcs	r0, r0, r8, lsr r7
 800c710:	20009070 	andcs	r9, r0, r0, ror r0
 800c714:	2000075c 	andcs	r0, r0, ip, asr r7

0800c718 <RemoteConfig::GetStringNode() const>:
 800c718:	2012      	movs	r0, #18
 800c71a:	4b03      	ldr	r3, [pc, #12]	; (800c728 <RemoteConfig::GetStringNode() const+0x10>)
 800c71c:	799a      	ldrb	r2, [r3, #6]
 800c71e:	4b03      	ldr	r3, [pc, #12]	; (800c72c <RemoteConfig::GetStringNode() const+0x14>)
 800c720:	fb00 3002 	mla	r0, r0, r2, r3
 800c724:	4770      	bx	lr
 800c726:	bf00      	nop
 800c728:	20000738 	andcs	r0, r0, r8, lsr r7
 800c72c:	08013864 	stmdaeq	r1, {r2, r5, r6, fp, ip, sp}

0800c730 <RemoteConfig::GetStringOutput() const>:
 800c730:	200c      	movs	r0, #12
 800c732:	4b03      	ldr	r3, [pc, #12]	; (800c740 <RemoteConfig::GetStringOutput() const+0x10>)
 800c734:	79da      	ldrb	r2, [r3, #7]
 800c736:	4b03      	ldr	r3, [pc, #12]	; (800c744 <RemoteConfig::GetStringOutput() const+0x14>)
 800c738:	fb00 3002 	mla	r0, r0, r2, r3
 800c73c:	4770      	bx	lr
 800c73e:	bf00      	nop
 800c740:	20000738 	andcs	r0, r0, r8, lsr r7
 800c744:	08013906 	stmdaeq	r1, {r1, r2, r8, fp, ip, sp}

0800c748 <RemoteConfig::SetDisable(bool)>:
 800c748:	b538      	push	{r3, r4, r5, lr}
 800c74a:	4604      	mov	r4, r0
 800c74c:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800c750:	b171      	cbz	r1, 800c770 <RemoteConfig::SetDisable(bool)+0x28>
 800c752:	b963      	cbnz	r3, 800c76e <RemoteConfig::SetDisable(bool)+0x26>
 800c754:	4b0d      	ldr	r3, [pc, #52]	; (800c78c <RemoteConfig::SetDisable(bool)+0x44>)
 800c756:	f642 1105 	movw	r1, #10501	; 0x2905
 800c75a:	6818      	ldr	r0, [r3, #0]
 800c75c:	f002 fd8b 	bl	800f276 <Network::End(unsigned short)>
 800c760:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c764:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800c768:	2301      	movs	r3, #1
 800c76a:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800c76e:	bd38      	pop	{r3, r4, r5, pc}
 800c770:	2b00      	cmp	r3, #0
 800c772:	d0fc      	beq.n	800c76e <RemoteConfig::SetDisable(bool)+0x26>
 800c774:	4b05      	ldr	r3, [pc, #20]	; (800c78c <RemoteConfig::SetDisable(bool)+0x44>)
 800c776:	460d      	mov	r5, r1
 800c778:	6818      	ldr	r0, [r3, #0]
 800c77a:	f642 1105 	movw	r1, #10501	; 0x2905
 800c77e:	f002 fd77 	bl	800f270 <Network::Begin(unsigned short)>
 800c782:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800c786:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800c78a:	e7f0      	b.n	800c76e <RemoteConfig::SetDisable(bool)+0x26>
 800c78c:	20009070 	andcs	r9, r0, r0, ror r0

0800c790 <RemoteConfig::SetDisplayName(char const*)>:
 800c790:	2217      	movs	r2, #23
 800c792:	4809      	ldr	r0, [pc, #36]	; (800c7b8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800c794:	b508      	push	{r3, lr}
 800c796:	1e4b      	subs	r3, r1, #1
 800c798:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c79c:	b931      	cbnz	r1, 800c7ac <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800c79e:	f004 fcdb 	bl	8011158 <memset>
 800c7a2:	2200      	movs	r2, #0
 800c7a4:	4b05      	ldr	r3, [pc, #20]	; (800c7bc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800c7a6:	f883 2020 	strb.w	r2, [r3, #32]
 800c7aa:	bd08      	pop	{r3, pc}
 800c7ac:	3a01      	subs	r2, #1
 800c7ae:	f800 1b01 	strb.w	r1, [r0], #1
 800c7b2:	d1f1      	bne.n	800c798 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800c7b4:	e7f5      	b.n	800c7a2 <RemoteConfig::SetDisplayName(char const*)+0x12>
 800c7b6:	bf00      	nop
 800c7b8:	20000741 	andcs	r0, r0, r1, asr #14
 800c7bc:	20000738 	andcs	r0, r0, r8, lsr r7

0800c7c0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800c7c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7c2:	4604      	mov	r4, r0
 800c7c4:	4616      	mov	r6, r2
 800c7c6:	460d      	mov	r5, r1
 800c7c8:	4f29      	ldr	r7, [pc, #164]	; (800c870 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800c7ca:	b085      	sub	sp, #20
 800c7cc:	b9b9      	cbnz	r1, 800c7fe <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800c7ce:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800c7d2:	6839      	ldr	r1, [r7, #0]
 800c7d4:	aa03      	add	r2, sp, #12
 800c7d6:	3105      	adds	r1, #5
 800c7d8:	9303      	str	r3, [sp, #12]
 800c7da:	f000 fc17 	bl	800d00c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800c7de:	1e03      	subs	r3, r0, #0
 800c7e0:	da1d      	bge.n	800c81e <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800c7e2:	f642 1305 	movw	r3, #10501	; 0x2905
 800c7e6:	220b      	movs	r2, #11
 800c7e8:	9300      	str	r3, [sp, #0]
 800c7ea:	4922      	ldr	r1, [pc, #136]	; (800c874 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800c7ec:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c7f0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c7f4:	f002 f86e 	bl	800e8d4 <udp_send>
 800c7f8:	200c      	movs	r0, #12
 800c7fa:	b005      	add	sp, #20
 800c7fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7fe:	9203      	str	r2, [sp, #12]
 800c800:	aa03      	add	r2, sp, #12
 800c802:	6039      	str	r1, [r7, #0]
 800c804:	f000 fc02 	bl	800d00c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800c808:	1e03      	subs	r3, r0, #0
 800c80a:	da08      	bge.n	800c81e <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800c80c:	2e0b      	cmp	r6, #11
 800c80e:	4632      	mov	r2, r6
 800c810:	4628      	mov	r0, r5
 800c812:	bf28      	it	cs
 800c814:	220b      	movcs	r2, #11
 800c816:	4917      	ldr	r1, [pc, #92]	; (800c874 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800c818:	f004 fc7c 	bl	8011114 <memcpy>
 800c81c:	e7ec      	b.n	800c7f8 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800c81e:	201c      	movs	r0, #28
 800c820:	4343      	muls	r3, r0
 800c822:	4915      	ldr	r1, [pc, #84]	; (800c878 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800c824:	18ca      	adds	r2, r1, r3
 800c826:	6852      	ldr	r2, [r2, #4]
 800c828:	58cb      	ldr	r3, [r1, r3]
 800c82a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800c82e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800c832:	07d2      	lsls	r2, r2, #31
 800c834:	bf48      	it	mi
 800c836:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800c83a:	a903      	add	r1, sp, #12
 800c83c:	bf48      	it	mi
 800c83e:	58d3      	ldrmi	r3, [r2, r3]
 800c840:	4798      	blx	r3
 800c842:	9a03      	ldr	r2, [sp, #12]
 800c844:	b965      	cbnz	r5, 800c860 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800c846:	f642 1305 	movw	r3, #10501	; 0x2905
 800c84a:	6839      	ldr	r1, [r7, #0]
 800c84c:	9300      	str	r3, [sp, #0]
 800c84e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c852:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800c856:	b292      	uxth	r2, r2
 800c858:	f002 f83c 	bl	800e8d4 <udp_send>
 800c85c:	9803      	ldr	r0, [sp, #12]
 800c85e:	e7cc      	b.n	800c7fa <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800c860:	42b2      	cmp	r2, r6
 800c862:	bf28      	it	cs
 800c864:	4632      	movcs	r2, r6
 800c866:	4628      	mov	r0, r5
 800c868:	6839      	ldr	r1, [r7, #0]
 800c86a:	f004 fc5e 	bl	801112a <memmove>
 800c86e:	e7f5      	b.n	800c85c <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800c870:	20000734 	andcs	r0, r0, r4, lsr r7
 800c874:	08013801 	stmdaeq	r1, {r0, fp, ip, sp}
 800c878:	08013a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, sp}

0800c87c <RemoteConfig::HandleGetNoParams()>:
 800c87c:	2200      	movs	r2, #0
 800c87e:	4611      	mov	r1, r2
 800c880:	f7ff bf9e 	b.w	800c7c0 <RemoteConfig::HandleGet(void*, unsigned int)>

0800c884 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800c884:	b510      	push	{r4, lr}
 800c886:	460c      	mov	r4, r1
 800c888:	4b07      	ldr	r3, [pc, #28]	; (800c8a8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800c88a:	b08a      	sub	sp, #40	; 0x28
 800c88c:	6819      	ldr	r1, [r3, #0]
 800c88e:	a801      	add	r0, sp, #4
 800c890:	f000 f9d6 	bl	800cc40 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800c894:	4905      	ldr	r1, [pc, #20]	; (800c8ac <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800c896:	4623      	mov	r3, r4
 800c898:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c89c:	6809      	ldr	r1, [r1, #0]
 800c89e:	a801      	add	r0, sp, #4
 800c8a0:	f000 faf2 	bl	800ce88 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800c8a4:	b00a      	add	sp, #40	; 0x28
 800c8a6:	bd10      	pop	{r4, pc}
 800c8a8:	20001784 	andcs	r1, r0, r4, lsl #15
 800c8ac:	20000734 	andcs	r0, r0, r4, lsr r7

0800c8b0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800c8b0:	b513      	push	{r0, r1, r4, lr}
 800c8b2:	460c      	mov	r4, r1
 800c8b4:	4b07      	ldr	r3, [pc, #28]	; (800c8d4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800c8b6:	a801      	add	r0, sp, #4
 800c8b8:	6819      	ldr	r1, [r3, #0]
 800c8ba:	f002 feb7 	bl	800f62c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800c8be:	4906      	ldr	r1, [pc, #24]	; (800c8d8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800c8c0:	4623      	mov	r3, r4
 800c8c2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c8c6:	6809      	ldr	r1, [r1, #0]
 800c8c8:	a801      	add	r0, sp, #4
 800c8ca:	f003 f89b 	bl	800fa04 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800c8ce:	b002      	add	sp, #8
 800c8d0:	bd10      	pop	{r4, pc}
 800c8d2:	bf00      	nop
 800c8d4:	2000177c 	andcs	r1, r0, ip, ror r7
 800c8d8:	20000734 	andcs	r0, r0, r4, lsr r7

0800c8dc <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 800c8dc:	b510      	push	{r4, lr}
 800c8de:	460c      	mov	r4, r1
 800c8e0:	4b07      	ldr	r3, [pc, #28]	; (800c900 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 800c8e2:	b0e4      	sub	sp, #400	; 0x190
 800c8e4:	6819      	ldr	r1, [r3, #0]
 800c8e6:	4668      	mov	r0, sp
 800c8e8:	f7fd f9b4 	bl	8009c54 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800c8ec:	4905      	ldr	r1, [pc, #20]	; (800c904 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 800c8ee:	4623      	mov	r3, r4
 800c8f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c8f4:	4668      	mov	r0, sp
 800c8f6:	6809      	ldr	r1, [r1, #0]
 800c8f8:	f7fd fb46 	bl	8009f88 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 800c8fc:	b064      	add	sp, #400	; 0x190
 800c8fe:	bd10      	pop	{r4, pc}
 800c900:	20001780 	andcs	r1, r0, r0, lsl #15
 800c904:	20000734 	andcs	r0, r0, r4, lsr r7

0800c908 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800c908:	b510      	push	{r4, lr}
 800c90a:	460c      	mov	r4, r1
 800c90c:	4b07      	ldr	r3, [pc, #28]	; (800c92c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800c90e:	b08c      	sub	sp, #48	; 0x30
 800c910:	6819      	ldr	r1, [r3, #0]
 800c912:	a801      	add	r0, sp, #4
 800c914:	f7fd ffac 	bl	800a870 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800c918:	4905      	ldr	r1, [pc, #20]	; (800c930 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800c91a:	4623      	mov	r3, r4
 800c91c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c920:	6809      	ldr	r1, [r1, #0]
 800c922:	a801      	add	r0, sp, #4
 800c924:	f7fe fa42 	bl	800adac <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 800c928:	b00c      	add	sp, #48	; 0x30
 800c92a:	bd10      	pop	{r4, pc}
 800c92c:	20001788 	andcs	r1, r0, r8, lsl #15
 800c930:	20000734 	andcs	r0, r0, r4, lsr r7

0800c934 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800c934:	b530      	push	{r4, r5, lr}
 800c936:	b085      	sub	sp, #20
 800c938:	4604      	mov	r4, r0
 800c93a:	9201      	str	r2, [sp, #4]
 800c93c:	b9c9      	cbnz	r1, 800c972 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800c93e:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800c942:	9303      	str	r3, [sp, #12]
 800c944:	4b1d      	ldr	r3, [pc, #116]	; (800c9bc <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800c946:	aa03      	add	r2, sp, #12
 800c948:	6819      	ldr	r1, [r3, #0]
 800c94a:	3101      	adds	r1, #1
 800c94c:	f000 fb5e 	bl	800d00c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800c950:	2800      	cmp	r0, #0
 800c952:	db24      	blt.n	800c99e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800c954:	221c      	movs	r2, #28
 800c956:	4b1a      	ldr	r3, [pc, #104]	; (800c9c0 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 800c958:	fb02 3300 	mla	r3, r2, r0, r3
 800c95c:	68da      	ldr	r2, [r3, #12]
 800c95e:	689b      	ldr	r3, [r3, #8]
 800c960:	1051      	asrs	r1, r2, #1
 800c962:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800c966:	07d2      	lsls	r2, r2, #31
 800c968:	bf44      	itt	mi
 800c96a:	5862      	ldrmi	r2, [r4, r1]
 800c96c:	58d3      	ldrmi	r3, [r2, r3]
 800c96e:	4798      	blx	r3
 800c970:	e015      	b.n	800c99e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800c972:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c976:	460d      	mov	r5, r1
 800c978:	4611      	mov	r1, r2
 800c97a:	d810      	bhi.n	800c99e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800c97c:	2200      	movs	r2, #0
 800c97e:	4b11      	ldr	r3, [pc, #68]	; (800c9c4 <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 800c980:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800c984:	781b      	ldrb	r3, [r3, #0]
 800c986:	07d8      	lsls	r0, r3, #31
 800c988:	d50b      	bpl.n	800c9a2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800c98a:	782b      	ldrb	r3, [r5, #0]
 800c98c:	2b7b      	cmp	r3, #123	; 0x7b
 800c98e:	d108      	bne.n	800c9a2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800c990:	3901      	subs	r1, #1
 800c992:	4628      	mov	r0, r5
 800c994:	b289      	uxth	r1, r1
 800c996:	f003 fc21 	bl	80101dc <properties::convert_json_file(char*, unsigned short, bool)>
 800c99a:	2800      	cmp	r0, #0
 800c99c:	dc09      	bgt.n	800c9b2 <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 800c99e:	b005      	add	sp, #20
 800c9a0:	bd30      	pop	{r4, r5, pc}
 800c9a2:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 800c9a6:	4b05      	ldr	r3, [pc, #20]	; (800c9bc <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800c9a8:	4620      	mov	r0, r4
 800c9aa:	601d      	str	r5, [r3, #0]
 800c9ac:	aa01      	add	r2, sp, #4
 800c9ae:	1c69      	adds	r1, r5, #1
 800c9b0:	e7cc      	b.n	800c94c <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800c9b2:	b280      	uxth	r0, r0
 800c9b4:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800c9b8:	e7f5      	b.n	800c9a6 <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 800c9ba:	bf00      	nop
 800c9bc:	20000734 	andcs	r0, r0, r4, lsr r7
 800c9c0:	08013a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, sp}
 800c9c4:	2000969e 	mulcs	r0, lr, r6

0800c9c8 <RemoteConfig::Run()>:
 800c9c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c9cc:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	d15e      	bne.n	800ca92 <RemoteConfig::Run()+0xca>
 800c9d4:	4604      	mov	r4, r0
 800c9d6:	4d4b      	ldr	r5, [pc, #300]	; (800cb04 <RemoteConfig::Run()+0x13c>)
 800c9d8:	300c      	adds	r0, #12
 800c9da:	f000 fe1b 	bl	800d614 <HttpDaemon::Run()>
 800c9de:	4629      	mov	r1, r5
 800c9e0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800c9e4:	f10d 030e 	add.w	r3, sp, #14
 800c9e8:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800c9ec:	f001 ff4c 	bl	800e888 <udp_recv2>
 800c9f0:	2803      	cmp	r0, #3
 800c9f2:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800c9f6:	d94c      	bls.n	800ca92 <RemoteConfig::Run()+0xca>
 800c9f8:	682b      	ldr	r3, [r5, #0]
 800c9fa:	3801      	subs	r0, #1
 800c9fc:	5c1a      	ldrb	r2, [r3, r0]
 800c9fe:	2a0a      	cmp	r2, #10
 800ca00:	bf08      	it	eq
 800ca02:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800ca06:	7819      	ldrb	r1, [r3, #0]
 800ca08:	293f      	cmp	r1, #63	; 0x3f
 800ca0a:	d137      	bne.n	800ca7c <RemoteConfig::Run()+0xb4>
 800ca0c:	493e      	ldr	r1, [pc, #248]	; (800cb08 <RemoteConfig::Run()+0x140>)
 800ca0e:	2200      	movs	r2, #0
 800ca10:	460f      	mov	r7, r1
 800ca12:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800ca16:	3801      	subs	r0, #1
 800ca18:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800ca1c:	7b8e      	ldrb	r6, [r1, #14]
 800ca1e:	898d      	ldrh	r5, [r1, #12]
 800ca20:	b176      	cbz	r6, 800ca40 <RemoteConfig::Run()+0x78>
 800ca22:	4285      	cmp	r5, r0
 800ca24:	d30e      	bcc.n	800ca44 <RemoteConfig::Run()+0x7c>
 800ca26:	3201      	adds	r2, #1
 800ca28:	2a09      	cmp	r2, #9
 800ca2a:	f101 0110 	add.w	r1, r1, #16
 800ca2e:	d1f5      	bne.n	800ca1c <RemoteConfig::Run()+0x54>
 800ca30:	f642 1305 	movw	r3, #10501	; 0x2905
 800ca34:	9300      	str	r3, [sp, #0]
 800ca36:	2208      	movs	r2, #8
 800ca38:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ca3c:	4933      	ldr	r1, [pc, #204]	; (800cb0c <RemoteConfig::Run()+0x144>)
 800ca3e:	e054      	b.n	800caea <RemoteConfig::Run()+0x122>
 800ca40:	4285      	cmp	r5, r0
 800ca42:	d1f0      	bne.n	800ca26 <RemoteConfig::Run()+0x5e>
 800ca44:	688e      	ldr	r6, [r1, #8]
 800ca46:	f103 0c01 	add.w	ip, r3, #1
 800ca4a:	4435      	add	r5, r6
 800ca4c:	42b5      	cmp	r5, r6
 800ca4e:	d006      	beq.n	800ca5e <RemoteConfig::Run()+0x96>
 800ca50:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800ca54:	f816 eb01 	ldrb.w	lr, [r6], #1
 800ca58:	45f0      	cmp	r8, lr
 800ca5a:	d0f7      	beq.n	800ca4c <RemoteConfig::Run()+0x84>
 800ca5c:	e7e3      	b.n	800ca26 <RemoteConfig::Run()+0x5e>
 800ca5e:	0113      	lsls	r3, r2, #4
 800ca60:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800ca64:	6852      	ldr	r2, [r2, #4]
 800ca66:	58fb      	ldr	r3, [r7, r3]
 800ca68:	1051      	asrs	r1, r2, #1
 800ca6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ca6e:	07d2      	lsls	r2, r2, #31
 800ca70:	d401      	bmi.n	800ca76 <RemoteConfig::Run()+0xae>
 800ca72:	4798      	blx	r3
 800ca74:	e00d      	b.n	800ca92 <RemoteConfig::Run()+0xca>
 800ca76:	5862      	ldr	r2, [r4, r1]
 800ca78:	58d3      	ldr	r3, [r2, r3]
 800ca7a:	e7fa      	b.n	800ca72 <RemoteConfig::Run()+0xaa>
 800ca7c:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800ca80:	b93a      	cbnz	r2, 800ca92 <RemoteConfig::Run()+0xca>
 800ca82:	2923      	cmp	r1, #35	; 0x23
 800ca84:	d108      	bne.n	800ca98 <RemoteConfig::Run()+0xd0>
 800ca86:	4611      	mov	r1, r2
 800ca88:	4620      	mov	r0, r4
 800ca8a:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800ca8e:	f7ff ff51 	bl	800c934 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ca92:	b004      	add	sp, #16
 800ca94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca98:	2921      	cmp	r1, #33	; 0x21
 800ca9a:	d1fa      	bne.n	800ca92 <RemoteConfig::Run()+0xca>
 800ca9c:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800caa0:	3a01      	subs	r2, #1
 800caa2:	2a05      	cmp	r2, #5
 800caa4:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 800caa8:	d918      	bls.n	800cadc <RemoteConfig::Run()+0x114>
 800caaa:	1c59      	adds	r1, r3, #1
 800caac:	4608      	mov	r0, r1
 800caae:	4d18      	ldr	r5, [pc, #96]	; (800cb10 <RemoteConfig::Run()+0x148>)
 800cab0:	f103 0c06 	add.w	ip, r3, #6
 800cab4:	4560      	cmp	r0, ip
 800cab6:	d01d      	beq.n	800caf4 <RemoteConfig::Run()+0x12c>
 800cab8:	f810 7b01 	ldrb.w	r7, [r0], #1
 800cabc:	f815 6b01 	ldrb.w	r6, [r5], #1
 800cac0:	42b7      	cmp	r7, r6
 800cac2:	d0f7      	beq.n	800cab4 <RemoteConfig::Run()+0xec>
 800cac4:	2a08      	cmp	r2, #8
 800cac6:	d909      	bls.n	800cadc <RemoteConfig::Run()+0x114>
 800cac8:	4a12      	ldr	r2, [pc, #72]	; (800cb14 <RemoteConfig::Run()+0x14c>)
 800caca:	3309      	adds	r3, #9
 800cacc:	428b      	cmp	r3, r1
 800cace:	d017      	beq.n	800cb00 <RemoteConfig::Run()+0x138>
 800cad0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cad4:	f812 0b01 	ldrb.w	r0, [r2], #1
 800cad8:	4285      	cmp	r5, r0
 800cada:	d0f7      	beq.n	800cacc <RemoteConfig::Run()+0x104>
 800cadc:	f642 1305 	movw	r3, #10501	; 0x2905
 800cae0:	2208      	movs	r2, #8
 800cae2:	9300      	str	r3, [sp, #0]
 800cae4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800cae8:	490b      	ldr	r1, [pc, #44]	; (800cb18 <RemoteConfig::Run()+0x150>)
 800caea:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800caee:	f001 fef1 	bl	800e8d4 <udp_send>
 800caf2:	e7ce      	b.n	800ca92 <RemoteConfig::Run()+0xca>
 800caf4:	2300      	movs	r3, #0
 800caf6:	4a09      	ldr	r2, [pc, #36]	; (800cb1c <RemoteConfig::Run()+0x154>)
 800caf8:	011b      	lsls	r3, r3, #4
 800cafa:	4620      	mov	r0, r4
 800cafc:	58d3      	ldr	r3, [r2, r3]
 800cafe:	e7b8      	b.n	800ca72 <RemoteConfig::Run()+0xaa>
 800cb00:	2301      	movs	r3, #1
 800cb02:	e7f8      	b.n	800caf6 <RemoteConfig::Run()+0x12e>
 800cb04:	20000734 	andcs	r0, r0, r4, lsr r7
 800cb08:	08013998 	stmdaeq	r1, {r3, r4, r7, r8, fp, ip, sp}
 800cb0c:	08013825 	stmdaeq	r1, {r0, r2, r5, fp, ip, sp}
 800cb10:	0801380d 	stmdaeq	r1, {r0, r2, r3, fp, ip, sp}
 800cb14:	08013813 	stmdaeq	r1, {r0, r1, r4, fp, ip, sp}
 800cb18:	0801381c 	stmdaeq	r1, {r2, r3, r4, fp, ip, sp}
 800cb1c:	08013a28 	stmdaeq	r1, {r3, r5, r9, fp, ip, sp}

0800cb20 <RemoteConfig::HandleSetRconfig()>:
 800cb20:	b510      	push	{r4, lr}
 800cb22:	4604      	mov	r4, r0
 800cb24:	4b09      	ldr	r3, [pc, #36]	; (800cb4c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800cb26:	b08a      	sub	sp, #40	; 0x28
 800cb28:	6819      	ldr	r1, [r3, #0]
 800cb2a:	a801      	add	r0, sp, #4
 800cb2c:	f000 f888 	bl	800cc40 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800cb30:	4b07      	ldr	r3, [pc, #28]	; (800cb50 <RemoteConfig::HandleSetRconfig()+0x30>)
 800cb32:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800cb36:	6819      	ldr	r1, [r3, #0]
 800cb38:	a801      	add	r0, sp, #4
 800cb3a:	f000 f897 	bl	800cc6c <RemoteConfigParams::Load(char const*, unsigned int)>
 800cb3e:	4621      	mov	r1, r4
 800cb40:	a801      	add	r0, sp, #4
 800cb42:	f000 f9ae 	bl	800cea2 <RemoteConfigParams::Set(RemoteConfig*)>
 800cb46:	b00a      	add	sp, #40	; 0x28
 800cb48:	bd10      	pop	{r4, pc}
 800cb4a:	bf00      	nop
 800cb4c:	20001784 	andcs	r1, r0, r4, lsl #15
 800cb50:	20000734 	andcs	r0, r0, r4, lsr r7

0800cb54 <RemoteConfig::HandleSetNetworkTxt()>:
 800cb54:	b513      	push	{r0, r1, r4, lr}
 800cb56:	4604      	mov	r4, r0
 800cb58:	4b06      	ldr	r3, [pc, #24]	; (800cb74 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800cb5a:	a801      	add	r0, sp, #4
 800cb5c:	6819      	ldr	r1, [r3, #0]
 800cb5e:	f002 fd65 	bl	800f62c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800cb62:	4b05      	ldr	r3, [pc, #20]	; (800cb78 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800cb64:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800cb68:	6819      	ldr	r1, [r3, #0]
 800cb6a:	a801      	add	r0, sp, #4
 800cb6c:	f002 fd7e 	bl	800f66c <NetworkParams::Load(char const*, unsigned int)>
 800cb70:	b002      	add	sp, #8
 800cb72:	bd10      	pop	{r4, pc}
 800cb74:	2000177c 	andcs	r1, r0, ip, ror r7
 800cb78:	20000734 	andcs	r0, r0, r4, lsr r7

0800cb7c <RemoteConfig::HandleSetOscTxt()>:
 800cb7c:	b510      	push	{r4, lr}
 800cb7e:	4604      	mov	r4, r0
 800cb80:	4b07      	ldr	r3, [pc, #28]	; (800cba0 <RemoteConfig::HandleSetOscTxt()+0x24>)
 800cb82:	b0e4      	sub	sp, #400	; 0x190
 800cb84:	6819      	ldr	r1, [r3, #0]
 800cb86:	4668      	mov	r0, sp
 800cb88:	f7fd f864 	bl	8009c54 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800cb8c:	4b05      	ldr	r3, [pc, #20]	; (800cba4 <RemoteConfig::HandleSetOscTxt()+0x28>)
 800cb8e:	4668      	mov	r0, sp
 800cb90:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800cb94:	6819      	ldr	r1, [r3, #0]
 800cb96:	f7fd f879 	bl	8009c8c <OSCServerParams::Load(char const*, unsigned int)>
 800cb9a:	b064      	add	sp, #400	; 0x190
 800cb9c:	bd10      	pop	{r4, pc}
 800cb9e:	bf00      	nop
 800cba0:	20001780 	andcs	r1, r0, r0, lsl #15
 800cba4:	20000734 	andcs	r0, r0, r4, lsr r7

0800cba8 <RemoteConfig::HandleSetDevicesTxt()>:
 800cba8:	b510      	push	{r4, lr}
 800cbaa:	4604      	mov	r4, r0
 800cbac:	4b07      	ldr	r3, [pc, #28]	; (800cbcc <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800cbae:	b08c      	sub	sp, #48	; 0x30
 800cbb0:	6819      	ldr	r1, [r3, #0]
 800cbb2:	a801      	add	r0, sp, #4
 800cbb4:	f7fd fe5c 	bl	800a870 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800cbb8:	4b05      	ldr	r3, [pc, #20]	; (800cbd0 <RemoteConfig::HandleSetDevicesTxt()+0x28>)
 800cbba:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800cbbe:	6819      	ldr	r1, [r3, #0]
 800cbc0:	a801      	add	r0, sp, #4
 800cbc2:	f7fd fe89 	bl	800a8d8 <WS28xxDmxParams::Load(char const*, unsigned int)>
 800cbc6:	b00c      	add	sp, #48	; 0x30
 800cbc8:	bd10      	pop	{r4, pc}
 800cbca:	bf00      	nop
 800cbcc:	20001788 	andcs	r1, r0, r8, lsl #15
 800cbd0:	20000734 	andcs	r0, r0, r4, lsr r7

0800cbd4 <RemoteConfig::HandleFactory()>:
 800cbd4:	b538      	push	{r3, r4, r5, lr}
 800cbd6:	2400      	movs	r4, #0
 800cbd8:	4d04      	ldr	r5, [pc, #16]	; (800cbec <RemoteConfig::HandleFactory()+0x18>)
 800cbda:	4621      	mov	r1, r4
 800cbdc:	6828      	ldr	r0, [r5, #0]
 800cbde:	3401      	adds	r4, #1
 800cbe0:	f000 ff54 	bl	800da8c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800cbe4:	2c1c      	cmp	r4, #28
 800cbe6:	d1f8      	bne.n	800cbda <RemoteConfig::HandleFactory()+0x6>
 800cbe8:	bd38      	pop	{r3, r4, r5, pc}
 800cbea:	bf00      	nop
 800cbec:	20001774 	andcs	r1, r0, r4, ror r7

0800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800cbf0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cbf2:	460b      	mov	r3, r1
 800cbf4:	8885      	ldrh	r5, [r0, #4]
 800cbf6:	88c1      	ldrh	r1, [r0, #6]
 800cbf8:	42a9      	cmp	r1, r5
 800cbfa:	d214      	bcs.n	800cc26 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800cbfc:	4604      	mov	r4, r0
 800cbfe:	6800      	ldr	r0, [r0, #0]
 800cc00:	1a6d      	subs	r5, r5, r1
 800cc02:	4408      	add	r0, r1
 800cc04:	7a21      	ldrb	r1, [r4, #8]
 800cc06:	b91a      	cbnz	r2, 800cc10 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800cc08:	b919      	cbnz	r1, 800cc12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800cc0a:	4a0a      	ldr	r2, [pc, #40]	; (800cc34 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800cc0c:	9100      	str	r1, [sp, #0]
 800cc0e:	e002      	b.n	800cc16 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800cc10:	b159      	cbz	r1, 800cc2a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800cc12:	9200      	str	r2, [sp, #0]
 800cc14:	4a08      	ldr	r2, [pc, #32]	; (800cc38 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800cc16:	4629      	mov	r1, r5
 800cc18:	f7fc fcda 	bl	80095d0 <snprintf>
 800cc1c:	4285      	cmp	r5, r0
 800cc1e:	bfa2      	ittt	ge
 800cc20:	88e3      	ldrhge	r3, [r4, #6]
 800cc22:	181b      	addge	r3, r3, r0
 800cc24:	80e3      	strhge	r3, [r4, #6]
 800cc26:	b003      	add	sp, #12
 800cc28:	bd30      	pop	{r4, r5, pc}
 800cc2a:	2201      	movs	r2, #1
 800cc2c:	9200      	str	r2, [sp, #0]
 800cc2e:	4a03      	ldr	r2, [pc, #12]	; (800cc3c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800cc30:	e7f1      	b.n	800cc16 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800cc32:	bf00      	nop
 800cc34:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 800cc38:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 800cc3c:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}

0800cc40 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800cc40:	b510      	push	{r4, lr}
 800cc42:	4604      	mov	r4, r0
 800cc44:	2220      	movs	r2, #32
 800cc46:	f840 1b04 	str.w	r1, [r0], #4
 800cc4a:	2100      	movs	r1, #0
 800cc4c:	f004 fa84 	bl	8011158 <memset>
 800cc50:	4620      	mov	r0, r4
 800cc52:	bd10      	pop	{r4, pc}

0800cc54 <RemoteConfigParams::Load()>:
 800cc54:	b508      	push	{r3, lr}
 800cc56:	2300      	movs	r3, #0
 800cc58:	4601      	mov	r1, r0
 800cc5a:	6043      	str	r3, [r0, #4]
 800cc5c:	6800      	ldr	r0, [r0, #0]
 800cc5e:	b120      	cbz	r0, 800cc6a <RemoteConfigParams::Load()+0x16>
 800cc60:	6803      	ldr	r3, [r0, #0]
 800cc62:	3104      	adds	r1, #4
 800cc64:	68db      	ldr	r3, [r3, #12]
 800cc66:	4798      	blx	r3
 800cc68:	2001      	movs	r0, #1
 800cc6a:	bd08      	pop	{r3, pc}

0800cc6c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800cc6c:	2300      	movs	r3, #0
 800cc6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc70:	460d      	mov	r5, r1
 800cc72:	4616      	mov	r6, r2
 800cc74:	4604      	mov	r4, r0
 800cc76:	6043      	str	r3, [r0, #4]
 800cc78:	4602      	mov	r2, r0
 800cc7a:	490a      	ldr	r1, [pc, #40]	; (800cca4 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800cc7c:	4668      	mov	r0, sp
 800cc7e:	f003 fbfb 	bl	8010478 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cc82:	4632      	mov	r2, r6
 800cc84:	4629      	mov	r1, r5
 800cc86:	4668      	mov	r0, sp
 800cc88:	f003 fbfa 	bl	8010480 <ReadConfigFile::Read(char const*, unsigned int)>
 800cc8c:	4621      	mov	r1, r4
 800cc8e:	f851 0b04 	ldr.w	r0, [r1], #4
 800cc92:	6803      	ldr	r3, [r0, #0]
 800cc94:	689b      	ldr	r3, [r3, #8]
 800cc96:	4798      	blx	r3
 800cc98:	4668      	mov	r0, sp
 800cc9a:	f003 fbf0 	bl	801047e <ReadConfigFile::~ReadConfigFile()>
 800cc9e:	b002      	add	sp, #8
 800cca0:	bd70      	pop	{r4, r5, r6, pc}
 800cca2:	bf00      	nop
 800cca4:	0800cd65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, lr, pc}

0800cca8 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800cca8:	6843      	ldr	r3, [r0, #4]
 800ccaa:	b111      	cbz	r1, 800ccb2 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800ccac:	4313      	orrs	r3, r2
 800ccae:	6043      	str	r3, [r0, #4]
 800ccb0:	4770      	bx	lr
 800ccb2:	ea23 0302 	bic.w	r3, r3, r2
 800ccb6:	e7fa      	b.n	800ccae <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800ccb8 <RemoteConfigParams::callbackFunction(char const*)>:
 800ccb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ccba:	460d      	mov	r5, r1
 800ccbc:	4604      	mov	r4, r0
 800ccbe:	4923      	ldr	r1, [pc, #140]	; (800cd4c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800ccc0:	4628      	mov	r0, r5
 800ccc2:	f10d 0203 	add.w	r2, sp, #3
 800ccc6:	f003 fd12 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ccca:	b938      	cbnz	r0, 800ccdc <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800cccc:	2201      	movs	r2, #1
 800ccce:	4620      	mov	r0, r4
 800ccd0:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800ccd4:	f7ff ffe8 	bl	800cca8 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800ccd8:	b003      	add	sp, #12
 800ccda:	bd30      	pop	{r4, r5, pc}
 800ccdc:	4628      	mov	r0, r5
 800ccde:	491c      	ldr	r1, [pc, #112]	; (800cd50 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800cce0:	f10d 0203 	add.w	r2, sp, #3
 800cce4:	f003 fd03 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cce8:	b908      	cbnz	r0, 800ccee <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800ccea:	2202      	movs	r2, #2
 800ccec:	e7ef      	b.n	800ccce <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ccee:	4628      	mov	r0, r5
 800ccf0:	4918      	ldr	r1, [pc, #96]	; (800cd54 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800ccf2:	f10d 0203 	add.w	r2, sp, #3
 800ccf6:	f003 fcfa 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ccfa:	b908      	cbnz	r0, 800cd00 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800ccfc:	2204      	movs	r2, #4
 800ccfe:	e7e6      	b.n	800ccce <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800cd00:	4628      	mov	r0, r5
 800cd02:	4915      	ldr	r1, [pc, #84]	; (800cd58 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800cd04:	f10d 0203 	add.w	r2, sp, #3
 800cd08:	f003 fcf1 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd0c:	b908      	cbnz	r0, 800cd12 <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800cd0e:	2208      	movs	r2, #8
 800cd10:	e7dd      	b.n	800ccce <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800cd12:	4628      	mov	r0, r5
 800cd14:	4911      	ldr	r1, [pc, #68]	; (800cd5c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800cd16:	f10d 0203 	add.w	r2, sp, #3
 800cd1a:	f003 fce8 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd1e:	b908      	cbnz	r0, 800cd24 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800cd20:	2220      	movs	r2, #32
 800cd22:	e7d4      	b.n	800ccce <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800cd24:	2317      	movs	r3, #23
 800cd26:	4628      	mov	r0, r5
 800cd28:	9301      	str	r3, [sp, #4]
 800cd2a:	490d      	ldr	r1, [pc, #52]	; (800cd60 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800cd2c:	ab01      	add	r3, sp, #4
 800cd2e:	f104 020c 	add.w	r2, r4, #12
 800cd32:	f003 fbd9 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cd36:	2800      	cmp	r0, #0
 800cd38:	d1ce      	bne.n	800ccd8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800cd3a:	9b01      	ldr	r3, [sp, #4]
 800cd3c:	4423      	add	r3, r4
 800cd3e:	7318      	strb	r0, [r3, #12]
 800cd40:	6863      	ldr	r3, [r4, #4]
 800cd42:	f043 0310 	orr.w	r3, r3, #16
 800cd46:	6063      	str	r3, [r4, #4]
 800cd48:	e7c6      	b.n	800ccd8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800cd4a:	bf00      	nop
 800cd4c:	08013de0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, ip, sp}
 800cd50:	08013e01 	stmdaeq	r1, {r0, r9, sl, fp, ip, sp}
 800cd54:	08013e0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, fp, ip, sp}
 800cd58:	08013e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp, ip, sp}
 800cd5c:	08013e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, ip, sp}
 800cd60:	08013df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}

0800cd64 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800cd64:	f7ff bfa8 	b.w	800ccb8 <RemoteConfigParams::callbackFunction(char const*)>

0800cd68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800cd68:	b570      	push	{r4, r5, r6, lr}
 800cd6a:	4604      	mov	r4, r0
 800cd6c:	4615      	mov	r5, r2
 800cd6e:	461e      	mov	r6, r3
 800cd70:	b086      	sub	sp, #24
 800cd72:	3004      	adds	r0, #4
 800cd74:	2900      	cmp	r1, #0
 800cd76:	d040      	beq.n	800cdfa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800cd78:	2220      	movs	r2, #32
 800cd7a:	f004 f9d6 	bl	801112a <memmove>
 800cd7e:	4633      	mov	r3, r6
 800cd80:	462a      	mov	r2, r5
 800cd82:	4937      	ldr	r1, [pc, #220]	; (800ce60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800cd84:	a803      	add	r0, sp, #12
 800cd86:	f003 fad7 	bl	8010338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cd8a:	6862      	ldr	r2, [r4, #4]
 800cd8c:	4935      	ldr	r1, [pc, #212]	; (800ce64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800cd8e:	f002 0201 	and.w	r2, r2, #1
 800cd92:	a803      	add	r0, sp, #12
 800cd94:	f7ff ff2c 	bl	800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800cd98:	6862      	ldr	r2, [r4, #4]
 800cd9a:	4933      	ldr	r1, [pc, #204]	; (800ce68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800cd9c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800cda0:	a803      	add	r0, sp, #12
 800cda2:	f7ff ff25 	bl	800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800cda6:	6862      	ldr	r2, [r4, #4]
 800cda8:	4930      	ldr	r1, [pc, #192]	; (800ce6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800cdaa:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800cdae:	a803      	add	r0, sp, #12
 800cdb0:	f7ff ff1e 	bl	800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800cdb4:	6862      	ldr	r2, [r4, #4]
 800cdb6:	492e      	ldr	r1, [pc, #184]	; (800ce70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800cdb8:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800cdbc:	a803      	add	r0, sp, #12
 800cdbe:	f7ff ff17 	bl	800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800cdc2:	6862      	ldr	r2, [r4, #4]
 800cdc4:	492b      	ldr	r1, [pc, #172]	; (800ce74 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800cdc6:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800cdca:	a803      	add	r0, sp, #12
 800cdcc:	f7ff ff10 	bl	800cbf0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800cdd0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800cdd4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cdd8:	42a9      	cmp	r1, r5
 800cdda:	d223      	bcs.n	800ce24 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800cddc:	9803      	ldr	r0, [sp, #12]
 800cdde:	1a6d      	subs	r5, r5, r1
 800cde0:	4408      	add	r0, r1
 800cde2:	6861      	ldr	r1, [r4, #4]
 800cde4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cde8:	06c9      	lsls	r1, r1, #27
 800cdea:	f104 030c 	add.w	r3, r4, #12
 800cdee:	d40b      	bmi.n	800ce08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800cdf0:	b95a      	cbnz	r2, 800ce0a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800cdf2:	9300      	str	r3, [sp, #0]
 800cdf4:	4a20      	ldr	r2, [pc, #128]	; (800ce78 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800cdf6:	4b21      	ldr	r3, [pc, #132]	; (800ce7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800cdf8:	e00a      	b.n	800ce10 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800cdfa:	6823      	ldr	r3, [r4, #0]
 800cdfc:	4601      	mov	r1, r0
 800cdfe:	681a      	ldr	r2, [r3, #0]
 800ce00:	4618      	mov	r0, r3
 800ce02:	68d2      	ldr	r2, [r2, #12]
 800ce04:	4790      	blx	r2
 800ce06:	e7ba      	b.n	800cd7e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800ce08:	b32a      	cbz	r2, 800ce56 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800ce0a:	9300      	str	r3, [sp, #0]
 800ce0c:	4a1c      	ldr	r2, [pc, #112]	; (800ce80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800ce0e:	4b1b      	ldr	r3, [pc, #108]	; (800ce7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800ce10:	4629      	mov	r1, r5
 800ce12:	f7fc fbdd 	bl	80095d0 <snprintf>
 800ce16:	4285      	cmp	r5, r0
 800ce18:	bfa2      	ittt	ge
 800ce1a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ce1e:	18c0      	addge	r0, r0, r3
 800ce20:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ce24:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ce28:	b17b      	cbz	r3, 800ce4a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800ce2a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ce2e:	9b03      	ldr	r3, [sp, #12]
 800ce30:	4413      	add	r3, r2
 800ce32:	227d      	movs	r2, #125	; 0x7d
 800ce34:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ce38:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ce3c:	9903      	ldr	r1, [sp, #12]
 800ce3e:	54ca      	strb	r2, [r1, r3]
 800ce40:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ce44:	3301      	adds	r3, #1
 800ce46:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ce4a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ce4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ce50:	601a      	str	r2, [r3, #0]
 800ce52:	b006      	add	sp, #24
 800ce54:	bd70      	pop	{r4, r5, r6, pc}
 800ce56:	9300      	str	r3, [sp, #0]
 800ce58:	4a0a      	ldr	r2, [pc, #40]	; (800ce84 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800ce5a:	4b08      	ldr	r3, [pc, #32]	; (800ce7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800ce5c:	e7d8      	b.n	800ce10 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800ce5e:	bf00      	nop
 800ce60:	08013de8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, fp, ip, sp}
 800ce64:	08013de0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, ip, sp}
 800ce68:	08013e01 	stmdaeq	r1, {r0, r9, sl, fp, ip, sp}
 800ce6c:	08013e0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, fp, ip, sp}
 800ce70:	08013e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp, ip, sp}
 800ce74:	08013e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, ip, sp}
 800ce78:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 800ce7c:	08013df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800ce80:	08013539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, ip, sp}
 800ce84:	08013545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp}

0800ce88 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800ce88:	b513      	push	{r0, r1, r4, lr}
 800ce8a:	6804      	ldr	r4, [r0, #0]
 800ce8c:	b914      	cbnz	r4, 800ce94 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ce8e:	601c      	str	r4, [r3, #0]
 800ce90:	b002      	add	sp, #8
 800ce92:	bd10      	pop	{r4, pc}
 800ce94:	9300      	str	r3, [sp, #0]
 800ce96:	4613      	mov	r3, r2
 800ce98:	460a      	mov	r2, r1
 800ce9a:	2100      	movs	r1, #0
 800ce9c:	f7ff ff64 	bl	800cd68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800cea0:	e7f6      	b.n	800ce90 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800cea2 <RemoteConfigParams::Set(RemoteConfig*)>:
 800cea2:	b538      	push	{r3, r4, r5, lr}
 800cea4:	460c      	mov	r4, r1
 800cea6:	4605      	mov	r5, r0
 800cea8:	6841      	ldr	r1, [r0, #4]
 800ceaa:	4620      	mov	r0, r4
 800ceac:	f001 0101 	and.w	r1, r1, #1
 800ceb0:	f7ff fc4a 	bl	800c748 <RemoteConfig::SetDisable(bool)>
 800ceb4:	686b      	ldr	r3, [r5, #4]
 800ceb6:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800ceba:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800cebe:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800cec2:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800cec6:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800ceca:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800cece:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800ced2:	06db      	lsls	r3, r3, #27
 800ced4:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800ced8:	d506      	bpl.n	800cee8 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800ceda:	4620      	mov	r0, r4
 800cedc:	f105 010c 	add.w	r1, r5, #12
 800cee0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cee4:	f7ff bc54 	b.w	800c790 <RemoteConfig::SetDisplayName(char const*)>
 800cee8:	bd38      	pop	{r3, r4, r5, pc}

0800ceea <RemoteConfigParams::Dump()>:
 800ceea:	4770      	bx	lr

0800ceec <Display::TextStatus(char const*)>:
 800ceec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cef0:	4604      	mov	r4, r0
 800cef2:	6980      	ldr	r0, [r0, #24]
 800cef4:	460d      	mov	r5, r1
 800cef6:	2800      	cmp	r0, #0
 800cef8:	d031      	beq.n	800cf5e <Display::TextStatus(char const*)+0x72>
 800cefa:	7947      	ldrb	r7, [r0, #5]
 800cefc:	6803      	ldr	r3, [r0, #0]
 800cefe:	1e7e      	subs	r6, r7, #1
 800cf00:	b2f6      	uxtb	r6, r6
 800cf02:	4632      	mov	r2, r6
 800cf04:	2100      	movs	r1, #0
 800cf06:	6a1b      	ldr	r3, [r3, #32]
 800cf08:	f890 9004 	ldrb.w	r9, [r0, #4]
 800cf0c:	f04f 0800 	mov.w	r8, #0
 800cf10:	4798      	blx	r3
 800cf12:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800cf16:	45c1      	cmp	r9, r8
 800cf18:	69a0      	ldr	r0, [r4, #24]
 800cf1a:	d907      	bls.n	800cf2c <Display::TextStatus(char const*)+0x40>
 800cf1c:	b118      	cbz	r0, 800cf26 <Display::TextStatus(char const*)+0x3a>
 800cf1e:	6803      	ldr	r3, [r0, #0]
 800cf20:	2120      	movs	r1, #32
 800cf22:	695b      	ldr	r3, [r3, #20]
 800cf24:	4798      	blx	r3
 800cf26:	f108 0801 	add.w	r8, r8, #1
 800cf2a:	e7f4      	b.n	800cf16 <Display::TextStatus(char const*)+0x2a>
 800cf2c:	b120      	cbz	r0, 800cf38 <Display::TextStatus(char const*)+0x4c>
 800cf2e:	6803      	ldr	r3, [r0, #0]
 800cf30:	4632      	mov	r2, r6
 800cf32:	2100      	movs	r1, #0
 800cf34:	6a1b      	ldr	r3, [r3, #32]
 800cf36:	4798      	blx	r3
 800cf38:	69a0      	ldr	r0, [r4, #24]
 800cf3a:	b180      	cbz	r0, 800cf5e <Display::TextStatus(char const*)+0x72>
 800cf3c:	2300      	movs	r3, #0
 800cf3e:	7901      	ldrb	r1, [r0, #4]
 800cf40:	5cea      	ldrb	r2, [r5, r3]
 800cf42:	b11a      	cbz	r2, 800cf4c <Display::TextStatus(char const*)+0x60>
 800cf44:	1c5a      	adds	r2, r3, #1
 800cf46:	4299      	cmp	r1, r3
 800cf48:	4613      	mov	r3, r2
 800cf4a:	dcf9      	bgt.n	800cf40 <Display::TextStatus(char const*)+0x54>
 800cf4c:	6802      	ldr	r2, [r0, #0]
 800cf4e:	4639      	mov	r1, r7
 800cf50:	69d4      	ldr	r4, [r2, #28]
 800cf52:	b2db      	uxtb	r3, r3
 800cf54:	462a      	mov	r2, r5
 800cf56:	46a4      	mov	ip, r4
 800cf58:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cf5c:	4760      	bx	ip
 800cf5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800cf64 <RemoteConfig::HandleReboot()>:
 800cf64:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800cf68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf6a:	2b00      	cmp	r3, #0
 800cf6c:	d03e      	beq.n	800cfec <RemoteConfig::HandleReboot()+0x88>
 800cf6e:	2301      	movs	r3, #1
 800cf70:	4c1f      	ldr	r4, [pc, #124]	; (800cff0 <RemoteConfig::HandleReboot()+0x8c>)
 800cf72:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800cf76:	6825      	ldr	r5, [r4, #0]
 800cf78:	69a8      	ldr	r0, [r5, #24]
 800cf7a:	b138      	cbz	r0, 800cf8c <RemoteConfig::HandleReboot()+0x28>
 800cf7c:	2100      	movs	r1, #0
 800cf7e:	6803      	ldr	r3, [r0, #0]
 800cf80:	7429      	strb	r1, [r5, #16]
 800cf82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf84:	4798      	blx	r3
 800cf86:	4b1b      	ldr	r3, [pc, #108]	; (800cff4 <RemoteConfig::HandleReboot()+0x90>)
 800cf88:	681b      	ldr	r3, [r3, #0]
 800cf8a:	606b      	str	r3, [r5, #4]
 800cf8c:	4d1a      	ldr	r5, [pc, #104]	; (800cff8 <RemoteConfig::HandleReboot()+0x94>)
 800cf8e:	6828      	ldr	r0, [r5, #0]
 800cf90:	f000 fe02 	bl	800db98 <SpiFlashStore::Flash()>
 800cf94:	2800      	cmp	r0, #0
 800cf96:	d1fa      	bne.n	800cf8e <RemoteConfig::HandleReboot()+0x2a>
 800cf98:	4b18      	ldr	r3, [pc, #96]	; (800cffc <RemoteConfig::HandleReboot()+0x98>)
 800cf9a:	6818      	ldr	r0, [r3, #0]
 800cf9c:	f002 f960 	bl	800f260 <Network::Shutdown()>
 800cfa0:	4817      	ldr	r0, [pc, #92]	; (800d000 <RemoteConfig::HandleReboot()+0x9c>)
 800cfa2:	f7fc fb05 	bl	80095b0 <printf>
 800cfa6:	6823      	ldr	r3, [r4, #0]
 800cfa8:	6998      	ldr	r0, [r3, #24]
 800cfaa:	b110      	cbz	r0, 800cfb2 <RemoteConfig::HandleReboot()+0x4e>
 800cfac:	6803      	ldr	r3, [r0, #0]
 800cfae:	68db      	ldr	r3, [r3, #12]
 800cfb0:	4798      	blx	r3
 800cfb2:	6824      	ldr	r4, [r4, #0]
 800cfb4:	4913      	ldr	r1, [pc, #76]	; (800d004 <RemoteConfig::HandleReboot()+0xa0>)
 800cfb6:	4620      	mov	r0, r4
 800cfb8:	f7ff ff98 	bl	800ceec <Display::TextStatus(char const*)>
 800cfbc:	7c63      	ldrb	r3, [r4, #17]
 800cfbe:	b18b      	cbz	r3, 800cfe4 <RemoteConfig::HandleReboot()+0x80>
 800cfc0:	2312      	movs	r3, #18
 800cfc2:	f88d 3004 	strb.w	r3, [sp, #4]
 800cfc6:	23bf      	movs	r3, #191	; 0xbf
 800cfc8:	7a20      	ldrb	r0, [r4, #8]
 800cfca:	f88d 3005 	strb.w	r3, [sp, #5]
 800cfce:	f88d 3006 	strb.w	r3, [sp, #6]
 800cfd2:	f005 f82b 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 800cfd6:	68e0      	ldr	r0, [r4, #12]
 800cfd8:	f005 f820 	bl	801201c <gd32_i2c_set_baudrate(unsigned int)>
 800cfdc:	2103      	movs	r1, #3
 800cfde:	a801      	add	r0, sp, #4
 800cfe0:	f005 f82a 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 800cfe4:	4b08      	ldr	r3, [pc, #32]	; (800d008 <RemoteConfig::HandleReboot()+0xa4>)
 800cfe6:	6818      	ldr	r0, [r3, #0]
 800cfe8:	f003 ff9e 	bl	8010f28 <Hardware::Reboot()>
 800cfec:	b003      	add	sp, #12
 800cfee:	bd30      	pop	{r4, r5, pc}
 800cff0:	200096a0 	andcs	r9, r0, r0, lsr #13
 800cff4:	200097a4 	andcs	r9, r0, r4, lsr #15
 800cff8:	20001774 	andcs	r1, r0, r4, ror r7
 800cffc:	20009070 	andcs	r9, r0, r0, ror r0
 800d000:	08013a48 	stmdaeq	r1, {r3, r6, r9, fp, ip, sp}
 800d004:	08013a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, sp}
 800d008:	20009790 	mulcs	r0, r0, r7

0800d00c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800d00c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d010:	2000      	movs	r0, #0
 800d012:	4d12      	ldr	r5, [pc, #72]	; (800d05c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800d014:	f10d 0c04 	add.w	ip, sp, #4
 800d018:	6814      	ldr	r4, [r2, #0]
 800d01a:	7d2b      	ldrb	r3, [r5, #20]
 800d01c:	692e      	ldr	r6, [r5, #16]
 800d01e:	42a3      	cmp	r3, r4
 800d020:	bf34      	ite	cc
 800d022:	4664      	movcc	r4, ip
 800d024:	4614      	movcs	r4, r2
 800d026:	9301      	str	r3, [sp, #4]
 800d028:	6827      	ldr	r7, [r4, #0]
 800d02a:	460c      	mov	r4, r1
 800d02c:	3e01      	subs	r6, #1
 800d02e:	440f      	add	r7, r1
 800d030:	42bc      	cmp	r4, r7
 800d032:	d011      	beq.n	800d058 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800d034:	f894 8000 	ldrb.w	r8, [r4]
 800d038:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800d03c:	45f0      	cmp	r8, lr
 800d03e:	d009      	beq.n	800d054 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800d040:	3001      	adds	r0, #1
 800d042:	2804      	cmp	r0, #4
 800d044:	f105 051c 	add.w	r5, r5, #28
 800d048:	d1e6      	bne.n	800d018 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800d04a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d04e:	b002      	add	sp, #8
 800d050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d054:	3401      	adds	r4, #1
 800d056:	e7eb      	b.n	800d030 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800d058:	6013      	str	r3, [r2, #0]
 800d05a:	e7f8      	b.n	800d04e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800d05c:	08013a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, sp}

0800d060 <RemoteConfig::PlatformHandleTftpSet()>:
 800d060:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800d064:	b109      	cbz	r1, 800d06a <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800d066:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800d06a:	2002      	movs	r0, #2
 800d06c:	f004 ba72 	b.w	8011554 <bkp_data_write>

0800d070 <RemoteConfig::PlatformHandleTftpGet()>:
 800d070:	b510      	push	{r4, lr}
 800d072:	4604      	mov	r4, r0
 800d074:	2002      	movs	r0, #2
 800d076:	f004 fa83 	bl	8011580 <bkp_data_read>
 800d07a:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800d07e:	1ac3      	subs	r3, r0, r3
 800d080:	4258      	negs	r0, r3
 800d082:	4158      	adcs	r0, r3
 800d084:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800d088:	bd10      	pop	{r4, pc}

0800d08a <strcmp>:
 800d08a:	1e43      	subs	r3, r0, #1
 800d08c:	3901      	subs	r1, #1
 800d08e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800d092:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d096:	4290      	cmp	r0, r2
 800d098:	d102      	bne.n	800d0a0 <strcmp+0x16>
 800d09a:	2800      	cmp	r0, #0
 800d09c:	d1f7      	bne.n	800d08e <strcmp+0x4>
 800d09e:	4770      	bx	lr
 800d0a0:	1a80      	subs	r0, r0, r2
 800d0a2:	4770      	bx	lr

0800d0a4 <strcasecmp>:
 800d0a4:	b530      	push	{r4, r5, lr}
 800d0a6:	1e42      	subs	r2, r0, #1
 800d0a8:	3901      	subs	r1, #1
 800d0aa:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d0ae:	4604      	mov	r4, r0
 800d0b0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800d0b4:	2b19      	cmp	r3, #25
 800d0b6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800d0ba:	bf98      	it	ls
 800d0bc:	f100 0420 	addls.w	r4, r0, #32
 800d0c0:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800d0c4:	2d19      	cmp	r5, #25
 800d0c6:	bf98      	it	ls
 800d0c8:	3320      	addls	r3, #32
 800d0ca:	42a3      	cmp	r3, r4
 800d0cc:	d102      	bne.n	800d0d4 <strcasecmp+0x30>
 800d0ce:	2800      	cmp	r0, #0
 800d0d0:	d1eb      	bne.n	800d0aa <strcasecmp+0x6>
 800d0d2:	bd30      	pop	{r4, r5, pc}
 800d0d4:	1ae0      	subs	r0, r4, r3
 800d0d6:	e7fc      	b.n	800d0d2 <strcasecmp+0x2e>

0800d0d8 <PropertiesConfig::EnableJSON(bool)>:
 800d0d8:	4a04      	ldr	r2, [pc, #16]	; (800d0ec <PropertiesConfig::EnableJSON(bool)+0x14>)
 800d0da:	7813      	ldrb	r3, [r2, #0]
 800d0dc:	b118      	cbz	r0, 800d0e6 <PropertiesConfig::EnableJSON(bool)+0xe>
 800d0de:	f043 0301 	orr.w	r3, r3, #1
 800d0e2:	7013      	strb	r3, [r2, #0]
 800d0e4:	4770      	bx	lr
 800d0e6:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800d0ea:	e7fa      	b.n	800d0e2 <PropertiesConfig::EnableJSON(bool)+0xa>
 800d0ec:	2000969e 	mulcs	r0, lr, r6

0800d0f0 <HttpDaemon::HttpDaemon()>:
 800d0f0:	4a0a      	ldr	r2, [pc, #40]	; (800d11c <HttpDaemon::HttpDaemon()+0x2c>)
 800d0f2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d0f6:	6002      	str	r2, [r0, #0]
 800d0f8:	2200      	movs	r2, #0
 800d0fa:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800d0fe:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800d102:	2102      	movs	r1, #2
 800d104:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800d108:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800d10c:	60c2      	str	r2, [r0, #12]
 800d10e:	8402      	strh	r2, [r0, #32]
 800d110:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800d114:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800d118:	4770      	bx	lr
 800d11a:	bf00      	nop
 800d11c:	08013d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, sp}

0800d120 <HttpDaemon::Start()>:
 800d120:	4b04      	ldr	r3, [pc, #16]	; (800d134 <HttpDaemon::Start()+0x14>)
 800d122:	b510      	push	{r4, lr}
 800d124:	2150      	movs	r1, #80	; 0x50
 800d126:	4604      	mov	r4, r0
 800d128:	6818      	ldr	r0, [r3, #0]
 800d12a:	f002 fa73 	bl	800f614 <Network::TcpBegin(unsigned short)>
 800d12e:	6120      	str	r0, [r4, #16]
 800d130:	bd10      	pop	{r4, pc}
 800d132:	bf00      	nop
 800d134:	20009070 	andcs	r9, r0, r0, ror r0

0800d138 <HttpDaemon::ParseMethod(char*)>:
 800d138:	b538      	push	{r3, r4, r5, lr}
 800d13a:	4604      	mov	r4, r0
 800d13c:	4608      	mov	r0, r1
 800d13e:	491b      	ldr	r1, [pc, #108]	; (800d1ac <HttpDaemon::ParseMethod(char*)+0x74>)
 800d140:	f004 f838 	bl	80111b4 <strtok>
 800d144:	4605      	mov	r5, r0
 800d146:	b370      	cbz	r0, 800d1a6 <HttpDaemon::ParseMethod(char*)+0x6e>
 800d148:	4919      	ldr	r1, [pc, #100]	; (800d1b0 <HttpDaemon::ParseMethod(char*)+0x78>)
 800d14a:	f7ff ff9e 	bl	800d08a <strcmp>
 800d14e:	b940      	cbnz	r0, 800d162 <HttpDaemon::ParseMethod(char*)+0x2a>
 800d150:	61e0      	str	r0, [r4, #28]
 800d152:	2000      	movs	r0, #0
 800d154:	4915      	ldr	r1, [pc, #84]	; (800d1ac <HttpDaemon::ParseMethod(char*)+0x74>)
 800d156:	f004 f82d 	bl	80111b4 <strtok>
 800d15a:	b950      	cbnz	r0, 800d172 <HttpDaemon::ParseMethod(char*)+0x3a>
 800d15c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d160:	bd38      	pop	{r3, r4, r5, pc}
 800d162:	4628      	mov	r0, r5
 800d164:	4913      	ldr	r1, [pc, #76]	; (800d1b4 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800d166:	f7ff ff90 	bl	800d08a <strcmp>
 800d16a:	b9e0      	cbnz	r0, 800d1a6 <HttpDaemon::ParseMethod(char*)+0x6e>
 800d16c:	2301      	movs	r3, #1
 800d16e:	61e3      	str	r3, [r4, #28]
 800d170:	e7ef      	b.n	800d152 <HttpDaemon::ParseMethod(char*)+0x1a>
 800d172:	6060      	str	r0, [r4, #4]
 800d174:	4910      	ldr	r1, [pc, #64]	; (800d1b8 <HttpDaemon::ParseMethod(char*)+0x80>)
 800d176:	2000      	movs	r0, #0
 800d178:	f004 f81c 	bl	80111b4 <strtok>
 800d17c:	2800      	cmp	r0, #0
 800d17e:	d0ed      	beq.n	800d15c <HttpDaemon::ParseMethod(char*)+0x24>
 800d180:	490e      	ldr	r1, [pc, #56]	; (800d1bc <HttpDaemon::ParseMethod(char*)+0x84>)
 800d182:	f7ff ff82 	bl	800d08a <strcmp>
 800d186:	2800      	cmp	r0, #0
 800d188:	d1e8      	bne.n	800d15c <HttpDaemon::ParseMethod(char*)+0x24>
 800d18a:	490d      	ldr	r1, [pc, #52]	; (800d1c0 <HttpDaemon::ParseMethod(char*)+0x88>)
 800d18c:	f004 f812 	bl	80111b4 <strtok>
 800d190:	2800      	cmp	r0, #0
 800d192:	d0e3      	beq.n	800d15c <HttpDaemon::ParseMethod(char*)+0x24>
 800d194:	490b      	ldr	r1, [pc, #44]	; (800d1c4 <HttpDaemon::ParseMethod(char*)+0x8c>)
 800d196:	f7ff ff78 	bl	800d08a <strcmp>
 800d19a:	2800      	cmp	r0, #0
 800d19c:	f240 10f9 	movw	r0, #505	; 0x1f9
 800d1a0:	bf08      	it	eq
 800d1a2:	20c8      	moveq	r0, #200	; 0xc8
 800d1a4:	e7dc      	b.n	800d160 <HttpDaemon::ParseMethod(char*)+0x28>
 800d1a6:	f240 10f5 	movw	r0, #501	; 0x1f5
 800d1aa:	e7d9      	b.n	800d160 <HttpDaemon::ParseMethod(char*)+0x28>
 800d1ac:	08013b04 	stmdaeq	r1, {r2, r8, r9, fp, ip, sp}
 800d1b0:	08013b06 	stmdaeq	r1, {r1, r2, r8, r9, fp, ip, sp}
 800d1b4:	08013b0a 	stmdaeq	r1, {r1, r3, r8, r9, fp, ip, sp}
 800d1b8:	08013b74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, fp, ip, sp}
 800d1bc:	08013b0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, fp, ip, sp}
 800d1c0:	08013b14 	stmdaeq	r1, {r2, r4, r8, r9, fp, ip, sp}
 800d1c4:	08013b17 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, fp, ip, sp}

0800d1c8 <HttpDaemon::ParseHeaderField(char*)>:
 800d1c8:	b538      	push	{r3, r4, r5, lr}
 800d1ca:	4605      	mov	r5, r0
 800d1cc:	4608      	mov	r0, r1
 800d1ce:	491d      	ldr	r1, [pc, #116]	; (800d244 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800d1d0:	f003 fff0 	bl	80111b4 <strtok>
 800d1d4:	4604      	mov	r4, r0
 800d1d6:	b910      	cbnz	r0, 800d1de <HttpDaemon::ParseHeaderField(char*)+0x16>
 800d1d8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d1dc:	bd38      	pop	{r3, r4, r5, pc}
 800d1de:	491a      	ldr	r1, [pc, #104]	; (800d248 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800d1e0:	f7ff ff60 	bl	800d0a4 <strcasecmp>
 800d1e4:	b970      	cbnz	r0, 800d204 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800d1e6:	4919      	ldr	r1, [pc, #100]	; (800d24c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800d1e8:	f003 ffe4 	bl	80111b4 <strtok>
 800d1ec:	2800      	cmp	r0, #0
 800d1ee:	d0f3      	beq.n	800d1d8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800d1f0:	4917      	ldr	r1, [pc, #92]	; (800d250 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800d1f2:	f7ff ff4a 	bl	800d08a <strcmp>
 800d1f6:	b108      	cbz	r0, 800d1fc <HttpDaemon::ParseHeaderField(char*)+0x34>
 800d1f8:	20c8      	movs	r0, #200	; 0xc8
 800d1fa:	e7ef      	b.n	800d1dc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800d1fc:	2301      	movs	r3, #1
 800d1fe:	f885 3020 	strb.w	r3, [r5, #32]
 800d202:	e7f9      	b.n	800d1f8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800d204:	4620      	mov	r0, r4
 800d206:	4913      	ldr	r1, [pc, #76]	; (800d254 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800d208:	f7ff ff4c 	bl	800d0a4 <strcasecmp>
 800d20c:	4604      	mov	r4, r0
 800d20e:	2800      	cmp	r0, #0
 800d210:	d1f2      	bne.n	800d1f8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800d212:	4911      	ldr	r1, [pc, #68]	; (800d258 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800d214:	f003 ffce 	bl	80111b4 <strtok>
 800d218:	2800      	cmp	r0, #0
 800d21a:	d0dd      	beq.n	800d1d8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800d21c:	1e42      	subs	r2, r0, #1
 800d21e:	4623      	mov	r3, r4
 800d220:	200a      	movs	r0, #10
 800d222:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d226:	b151      	cbz	r1, 800d23e <HttpDaemon::ParseHeaderField(char*)+0x76>
 800d228:	3930      	subs	r1, #48	; 0x30
 800d22a:	2909      	cmp	r1, #9
 800d22c:	d8d4      	bhi.n	800d1d8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800d22e:	fb00 1303 	mla	r3, r0, r3, r1
 800d232:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800d236:	d9f4      	bls.n	800d222 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800d238:	f240 109d 	movw	r0, #413	; 0x19d
 800d23c:	e7ce      	b.n	800d1dc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800d23e:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800d242:	e7d9      	b.n	800d1f8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800d244:	08013b1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, fp, ip, sp}
 800d248:	08013b1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, fp, ip, sp}
 800d24c:	08013b2a 	stmdaeq	r1, {r1, r3, r5, r8, r9, fp, ip, sp}
 800d250:	08013b2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, fp, ip, sp}
 800d254:	08013b3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, fp, ip, sp}
 800d258:	08013b04 	stmdaeq	r1, {r2, r8, r9, fp, ip, sp}

0800d25c <HttpDaemon::ParseRequest()>:
 800d25c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d25e:	2400      	movs	r4, #0
 800d260:	4605      	mov	r5, r0
 800d262:	4622      	mov	r2, r4
 800d264:	4626      	mov	r6, r4
 800d266:	68c1      	ldr	r1, [r0, #12]
 800d268:	f880 4020 	strb.w	r4, [r0, #32]
 800d26c:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800d270:	8aab      	ldrh	r3, [r5, #20]
 800d272:	42a3      	cmp	r3, r4
 800d274:	d923      	bls.n	800d2be <HttpDaemon::ParseRequest()+0x62>
 800d276:	68eb      	ldr	r3, [r5, #12]
 800d278:	5d18      	ldrb	r0, [r3, r4]
 800d27a:	280a      	cmp	r0, #10
 800d27c:	d10e      	bne.n	800d29c <HttpDaemon::ParseRequest()+0x40>
 800d27e:	4423      	add	r3, r4
 800d280:	f803 6c01 	strb.w	r6, [r3, #-1]
 800d284:	1c57      	adds	r7, r2, #1
 800d286:	b962      	cbnz	r2, 800d2a2 <HttpDaemon::ParseRequest()+0x46>
 800d288:	4628      	mov	r0, r5
 800d28a:	f7ff ff55 	bl	800d138 <HttpDaemon::ParseMethod(char*)>
 800d28e:	28c8      	cmp	r0, #200	; 0xc8
 800d290:	d116      	bne.n	800d2c0 <HttpDaemon::ParseRequest()+0x64>
 800d292:	463a      	mov	r2, r7
 800d294:	68e9      	ldr	r1, [r5, #12]
 800d296:	3401      	adds	r4, #1
 800d298:	b2a4      	uxth	r4, r4
 800d29a:	4421      	add	r1, r4
 800d29c:	3401      	adds	r4, #1
 800d29e:	b2a4      	uxth	r4, r4
 800d2a0:	e7e6      	b.n	800d270 <HttpDaemon::ParseRequest()+0x14>
 800d2a2:	7808      	ldrb	r0, [r1, #0]
 800d2a4:	b968      	cbnz	r0, 800d2c2 <HttpDaemon::ParseRequest()+0x66>
 800d2a6:	696b      	ldr	r3, [r5, #20]
 800d2a8:	3b01      	subs	r3, #1
 800d2aa:	1b1b      	subs	r3, r3, r4
 800d2ac:	b29b      	uxth	r3, r3
 800d2ae:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800d2b2:	b123      	cbz	r3, 800d2be <HttpDaemon::ParseRequest()+0x62>
 800d2b4:	68ea      	ldr	r2, [r5, #12]
 800d2b6:	3401      	adds	r4, #1
 800d2b8:	4414      	add	r4, r2
 800d2ba:	60ac      	str	r4, [r5, #8]
 800d2bc:	54e0      	strb	r0, [r4, r3]
 800d2be:	20c8      	movs	r0, #200	; 0xc8
 800d2c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d2c2:	4628      	mov	r0, r5
 800d2c4:	f7ff ff80 	bl	800d1c8 <HttpDaemon::ParseHeaderField(char*)>
 800d2c8:	e7e1      	b.n	800d28e <HttpDaemon::ParseRequest()+0x32>
	...

0800d2cc <HttpDaemon::HandleGetTxt()>:
 800d2cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2d0:	6847      	ldr	r7, [r0, #4]
 800d2d2:	4604      	mov	r4, r0
 800d2d4:	1dbd      	adds	r5, r7, #6
 800d2d6:	462b      	mov	r3, r5
 800d2d8:	4618      	mov	r0, r3
 800d2da:	7802      	ldrb	r2, [r0, #0]
 800d2dc:	3301      	adds	r3, #1
 800d2de:	2a00      	cmp	r2, #0
 800d2e0:	d1fa      	bne.n	800d2d8 <HttpDaemon::HandleGetTxt()+0xc>
 800d2e2:	1b40      	subs	r0, r0, r5
 800d2e4:	2804      	cmp	r0, #4
 800d2e6:	d925      	bls.n	800d334 <HttpDaemon::HandleGetTxt()+0x68>
 800d2e8:	3804      	subs	r0, #4
 800d2ea:	4915      	ldr	r1, [pc, #84]	; (800d340 <HttpDaemon::HandleGetTxt()+0x74>)
 800d2ec:	4428      	add	r0, r5
 800d2ee:	f7ff fecc 	bl	800d08a <strcmp>
 800d2f2:	b9f8      	cbnz	r0, 800d334 <HttpDaemon::HandleGetTxt()+0x68>
 800d2f4:	4b13      	ldr	r3, [pc, #76]	; (800d344 <HttpDaemon::HandleGetTxt()+0x78>)
 800d2f6:	2001      	movs	r0, #1
 800d2f8:	f893 8000 	ldrb.w	r8, [r3]
 800d2fc:	f7ff feec 	bl	800d0d8 <PropertiesConfig::EnableJSON(bool)>
 800d300:	4b11      	ldr	r3, [pc, #68]	; (800d348 <HttpDaemon::HandleGetTxt()+0x7c>)
 800d302:	f240 529b 	movw	r2, #1435	; 0x59b
 800d306:	4629      	mov	r1, r5
 800d308:	6818      	ldr	r0, [r3, #0]
 800d30a:	f7ff fa59 	bl	800c7c0 <RemoteConfig::HandleGet(void*, unsigned int)>
 800d30e:	4606      	mov	r6, r0
 800d310:	f008 0801 	and.w	r8, r8, #1
 800d314:	4640      	mov	r0, r8
 800d316:	f7ff fedf 	bl	800d0d8 <PropertiesConfig::EnableJSON(bool)>
 800d31a:	b15e      	cbz	r6, 800d334 <HttpDaemon::HandleGetTxt()+0x68>
 800d31c:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800d320:	3606      	adds	r6, #6
 800d322:	3422      	adds	r4, #34	; 0x22
 800d324:	443e      	add	r6, r7
 800d326:	42b5      	cmp	r5, r6
 800d328:	d008      	beq.n	800d33c <HttpDaemon::HandleGetTxt()+0x70>
 800d32a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800d32e:	f804 3b01 	strb.w	r3, [r4], #1
 800d332:	e7f8      	b.n	800d326 <HttpDaemon::HandleGetTxt()+0x5a>
 800d334:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d33c:	20c8      	movs	r0, #200	; 0xc8
 800d33e:	e7fb      	b.n	800d338 <HttpDaemon::HandleGetTxt()+0x6c>
 800d340:	08013a80 	stmdaeq	r1, {r7, r9, fp, ip, sp}
 800d344:	2000969e 	mulcs	r0, lr, r6
 800d348:	2000075c 	andcs	r0, r0, ip, asr r7

0800d34c <HttpDaemon::HandleGet()>:
 800d34c:	b570      	push	{r4, r5, r6, lr}
 800d34e:	6845      	ldr	r5, [r0, #4]
 800d350:	4604      	mov	r4, r0
 800d352:	4943      	ldr	r1, [pc, #268]	; (800d460 <HttpDaemon::HandleGet()+0x114>)
 800d354:	4628      	mov	r0, r5
 800d356:	f7ff fe98 	bl	800d08a <strcmp>
 800d35a:	b120      	cbz	r0, 800d366 <HttpDaemon::HandleGet()+0x1a>
 800d35c:	4628      	mov	r0, r5
 800d35e:	4941      	ldr	r1, [pc, #260]	; (800d464 <HttpDaemon::HandleGet()+0x118>)
 800d360:	f7ff fe93 	bl	800d08a <strcmp>
 800d364:	b960      	cbnz	r0, 800d380 <HttpDaemon::HandleGet()+0x34>
 800d366:	4621      	mov	r1, r4
 800d368:	4b3f      	ldr	r3, [pc, #252]	; (800d468 <HttpDaemon::HandleGet()+0x11c>)
 800d36a:	4840      	ldr	r0, [pc, #256]	; (800d46c <HttpDaemon::HandleGet()+0x120>)
 800d36c:	f841 3b22 	str.w	r3, [r1], #34
 800d370:	f000 fa7a 	bl	800d868 <get_file_content(char const*, char*)>
 800d374:	2800      	cmp	r0, #0
 800d376:	dd1e      	ble.n	800d3b6 <HttpDaemon::HandleGet()+0x6a>
 800d378:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800d37c:	20c8      	movs	r0, #200	; 0xc8
 800d37e:	bd70      	pop	{r4, r5, r6, pc}
 800d380:	4628      	mov	r0, r5
 800d382:	493b      	ldr	r1, [pc, #236]	; (800d470 <HttpDaemon::HandleGet()+0x124>)
 800d384:	f7ff fe81 	bl	800d08a <strcmp>
 800d388:	b928      	cbnz	r0, 800d396 <HttpDaemon::HandleGet()+0x4a>
 800d38a:	4621      	mov	r1, r4
 800d38c:	4b39      	ldr	r3, [pc, #228]	; (800d474 <HttpDaemon::HandleGet()+0x128>)
 800d38e:	483a      	ldr	r0, [pc, #232]	; (800d478 <HttpDaemon::HandleGet()+0x12c>)
 800d390:	f841 3b22 	str.w	r3, [r1], #34
 800d394:	e7ec      	b.n	800d370 <HttpDaemon::HandleGet()+0x24>
 800d396:	4628      	mov	r0, r5
 800d398:	4938      	ldr	r1, [pc, #224]	; (800d47c <HttpDaemon::HandleGet()+0x130>)
 800d39a:	f7ff fe76 	bl	800d08a <strcmp>
 800d39e:	b168      	cbz	r0, 800d3bc <HttpDaemon::HandleGet()+0x70>
 800d3a0:	4a37      	ldr	r2, [pc, #220]	; (800d480 <HttpDaemon::HandleGet()+0x134>)
 800d3a2:	1e6b      	subs	r3, r5, #1
 800d3a4:	1d6e      	adds	r6, r5, #5
 800d3a6:	42b3      	cmp	r3, r6
 800d3a8:	d00e      	beq.n	800d3c8 <HttpDaemon::HandleGet()+0x7c>
 800d3aa:	f812 1b01 	ldrb.w	r1, [r2], #1
 800d3ae:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800d3b2:	4288      	cmp	r0, r1
 800d3b4:	d0f7      	beq.n	800d3a6 <HttpDaemon::HandleGet()+0x5a>
 800d3b6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800d3ba:	e7e0      	b.n	800d37e <HttpDaemon::HandleGet()+0x32>
 800d3bc:	4621      	mov	r1, r4
 800d3be:	4b31      	ldr	r3, [pc, #196]	; (800d484 <HttpDaemon::HandleGet()+0x138>)
 800d3c0:	4831      	ldr	r0, [pc, #196]	; (800d488 <HttpDaemon::HandleGet()+0x13c>)
 800d3c2:	f841 3b22 	str.w	r3, [r1], #34
 800d3c6:	e7d3      	b.n	800d370 <HttpDaemon::HandleGet()+0x24>
 800d3c8:	4b30      	ldr	r3, [pc, #192]	; (800d48c <HttpDaemon::HandleGet()+0x140>)
 800d3ca:	3506      	adds	r5, #6
 800d3cc:	4628      	mov	r0, r5
 800d3ce:	4930      	ldr	r1, [pc, #192]	; (800d490 <HttpDaemon::HandleGet()+0x144>)
 800d3d0:	6023      	str	r3, [r4, #0]
 800d3d2:	f7ff fe5a 	bl	800d08a <strcmp>
 800d3d6:	b930      	cbnz	r0, 800d3e6 <HttpDaemon::HandleGet()+0x9a>
 800d3d8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800d3dc:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800d3e0:	f000 f9ca 	bl	800d778 <remoteconfig::json_get_list(char*, unsigned short)>
 800d3e4:	e7c6      	b.n	800d374 <HttpDaemon::HandleGet()+0x28>
 800d3e6:	4628      	mov	r0, r5
 800d3e8:	492a      	ldr	r1, [pc, #168]	; (800d494 <HttpDaemon::HandleGet()+0x148>)
 800d3ea:	f7ff fe4e 	bl	800d08a <strcmp>
 800d3ee:	b930      	cbnz	r0, 800d3fe <HttpDaemon::HandleGet()+0xb2>
 800d3f0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800d3f4:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800d3f8:	f000 f9f2 	bl	800d7e0 <remoteconfig::json_get_version(char*, unsigned short)>
 800d3fc:	e7ba      	b.n	800d374 <HttpDaemon::HandleGet()+0x28>
 800d3fe:	4628      	mov	r0, r5
 800d400:	4925      	ldr	r1, [pc, #148]	; (800d498 <HttpDaemon::HandleGet()+0x14c>)
 800d402:	f7ff fe42 	bl	800d08a <strcmp>
 800d406:	b958      	cbnz	r0, 800d420 <HttpDaemon::HandleGet()+0xd4>
 800d408:	4b24      	ldr	r3, [pc, #144]	; (800d49c <HttpDaemon::HandleGet()+0x150>)
 800d40a:	681b      	ldr	r3, [r3, #0]
 800d40c:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800d410:	b31b      	cbz	r3, 800d45a <HttpDaemon::HandleGet()+0x10e>
 800d412:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800d416:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800d41a:	f000 f9fd 	bl	800d818 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800d41e:	e7a9      	b.n	800d374 <HttpDaemon::HandleGet()+0x28>
 800d420:	4628      	mov	r0, r5
 800d422:	491f      	ldr	r1, [pc, #124]	; (800d4a0 <HttpDaemon::HandleGet()+0x154>)
 800d424:	f7ff fe31 	bl	800d08a <strcmp>
 800d428:	b930      	cbnz	r0, 800d438 <HttpDaemon::HandleGet()+0xec>
 800d42a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800d42e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800d432:	f000 fa01 	bl	800d838 <remoteconfig::json_get_display(char*, unsigned short)>
 800d436:	e79d      	b.n	800d374 <HttpDaemon::HandleGet()+0x28>
 800d438:	4628      	mov	r0, r5
 800d43a:	491a      	ldr	r1, [pc, #104]	; (800d4a4 <HttpDaemon::HandleGet()+0x158>)
 800d43c:	f7ff fe25 	bl	800d08a <strcmp>
 800d440:	b930      	cbnz	r0, 800d450 <HttpDaemon::HandleGet()+0x104>
 800d442:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800d446:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800d44a:	f000 fa05 	bl	800d858 <remoteconfig::json_get_directory(char*, unsigned short)>
 800d44e:	e791      	b.n	800d374 <HttpDaemon::HandleGet()+0x28>
 800d450:	4620      	mov	r0, r4
 800d452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d456:	f7ff bf39 	b.w	800d2cc <HttpDaemon::HandleGetTxt()>
 800d45a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d45e:	e78e      	b.n	800d37e <HttpDaemon::HandleGet()+0x32>
 800d460:	08013b74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, fp, ip, sp}
 800d464:	08013b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, ip, sp}
 800d468:	08013d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, sp}
 800d46c:	08013b4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, fp, ip, sp}
 800d470:	08013b59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, fp, ip, sp}
 800d474:	08013d80 	stmdaeq	r1, {r7, r8, sl, fp, ip, sp}
 800d478:	08013b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, ip, sp}
 800d47c:	08013b65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, fp, ip, sp}
 800d480:	08013b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, sp}
 800d484:	08013da0 	stmdaeq	r1, {r5, r7, r8, sl, fp, ip, sp}
 800d488:	08013b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, ip, sp}
 800d48c:	08013dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, ip, sp}
 800d490:	08013b76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, sp}
 800d494:	08013b7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, fp, ip, sp}
 800d498:	08013b83 	stmdaeq	r1, {r0, r1, r7, r8, r9, fp, ip, sp}
 800d49c:	2000075c 	andcs	r0, r0, ip, asr r7
 800d4a0:	08013b8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, fp, ip, sp}
 800d4a4:	08013b92 	stmdaeq	r1, {r1, r4, r7, r8, r9, fp, ip, sp}

0800d4a8 <HttpDaemon::HandlePost(bool)>:
 800d4a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	2900      	cmp	r1, #0
 800d4ae:	f040 8091 	bne.w	800d5d4 <HttpDaemon::HandlePost(bool)+0x12c>
 800d4b2:	f890 3020 	ldrb.w	r3, [r0, #32]
 800d4b6:	2b00      	cmp	r3, #0
 800d4b8:	d05d      	beq.n	800d576 <HttpDaemon::HandlePost(bool)+0xce>
 800d4ba:	6845      	ldr	r5, [r0, #4]
 800d4bc:	4948      	ldr	r1, [pc, #288]	; (800d5e0 <HttpDaemon::HandlePost(bool)+0x138>)
 800d4be:	4628      	mov	r0, r5
 800d4c0:	f7ff fde3 	bl	800d08a <strcmp>
 800d4c4:	2800      	cmp	r0, #0
 800d4c6:	bf0c      	ite	eq
 800d4c8:	2301      	moveq	r3, #1
 800d4ca:	2300      	movne	r3, #0
 800d4cc:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800d4d0:	d055      	beq.n	800d57e <HttpDaemon::HandlePost(bool)+0xd6>
 800d4d2:	4628      	mov	r0, r5
 800d4d4:	4943      	ldr	r1, [pc, #268]	; (800d5e4 <HttpDaemon::HandlePost(bool)+0x13c>)
 800d4d6:	f7ff fdd8 	bl	800d08a <strcmp>
 800d4da:	2800      	cmp	r0, #0
 800d4dc:	d04f      	beq.n	800d57e <HttpDaemon::HandlePost(bool)+0xd6>
 800d4de:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800d4e2:	e04a      	b.n	800d57a <HttpDaemon::HandlePost(bool)+0xd2>
 800d4e4:	4940      	ldr	r1, [pc, #256]	; (800d5e8 <HttpDaemon::HandlePost(bool)+0x140>)
 800d4e6:	68a0      	ldr	r0, [r4, #8]
 800d4e8:	f10d 0207 	add.w	r2, sp, #7
 800d4ec:	f003 f8ff 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d4f0:	b9e8      	cbnz	r0, 800d52e <HttpDaemon::HandlePost(bool)+0x86>
 800d4f2:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800d4f6:	4b3d      	ldr	r3, [pc, #244]	; (800d5ec <HttpDaemon::HandlePost(bool)+0x144>)
 800d4f8:	fab6 f186 	clz	r1, r6
 800d4fc:	681d      	ldr	r5, [r3, #0]
 800d4fe:	0949      	lsrs	r1, r1, #5
 800d500:	69a8      	ldr	r0, [r5, #24]
 800d502:	b138      	cbz	r0, 800d514 <HttpDaemon::HandlePost(bool)+0x6c>
 800d504:	6803      	ldr	r3, [r0, #0]
 800d506:	7429      	strb	r1, [r5, #16]
 800d508:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d50a:	4798      	blx	r3
 800d50c:	b116      	cbz	r6, 800d514 <HttpDaemon::HandlePost(bool)+0x6c>
 800d50e:	4b38      	ldr	r3, [pc, #224]	; (800d5f0 <HttpDaemon::HandlePost(bool)+0x148>)
 800d510:	681b      	ldr	r3, [r3, #0]
 800d512:	606b      	str	r3, [r5, #4]
 800d514:	4620      	mov	r0, r4
 800d516:	4b37      	ldr	r3, [pc, #220]	; (800d5f4 <HttpDaemon::HandlePost(bool)+0x14c>)
 800d518:	f240 519f 	movw	r1, #1439	; 0x59f
 800d51c:	4a36      	ldr	r2, [pc, #216]	; (800d5f8 <HttpDaemon::HandlePost(bool)+0x150>)
 800d51e:	f840 3b22 	str.w	r3, [r0], #34
 800d522:	f7fc f855 	bl	80095d0 <snprintf>
 800d526:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800d52a:	20c8      	movs	r0, #200	; 0xc8
 800d52c:	e025      	b.n	800d57a <HttpDaemon::HandlePost(bool)+0xd2>
 800d52e:	4933      	ldr	r1, [pc, #204]	; (800d5fc <HttpDaemon::HandlePost(bool)+0x154>)
 800d530:	68a0      	ldr	r0, [r4, #8]
 800d532:	f10d 0207 	add.w	r2, sp, #7
 800d536:	f003 f8da 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d53a:	b9e0      	cbnz	r0, 800d576 <HttpDaemon::HandlePost(bool)+0xce>
 800d53c:	4b30      	ldr	r3, [pc, #192]	; (800d600 <HttpDaemon::HandlePost(bool)+0x158>)
 800d53e:	6818      	ldr	r0, [r3, #0]
 800d540:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d544:	b11b      	cbz	r3, 800d54e <HttpDaemon::HandlePost(bool)+0xa6>
 800d546:	2104      	movs	r1, #4
 800d548:	f003 fc66 	bl	8010e18 <LedBlink::SetMode(ledblink::Mode)>
 800d54c:	e7e2      	b.n	800d514 <HttpDaemon::HandlePost(bool)+0x6c>
 800d54e:	2102      	movs	r1, #2
 800d550:	e7fa      	b.n	800d548 <HttpDaemon::HandlePost(bool)+0xa0>
 800d552:	4b2c      	ldr	r3, [pc, #176]	; (800d604 <HttpDaemon::HandlePost(bool)+0x15c>)
 800d554:	2001      	movs	r0, #1
 800d556:	781d      	ldrb	r5, [r3, #0]
 800d558:	f7ff fdbe 	bl	800d0d8 <PropertiesConfig::EnableJSON(bool)>
 800d55c:	4b2a      	ldr	r3, [pc, #168]	; (800d608 <HttpDaemon::HandlePost(bool)+0x160>)
 800d55e:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800d562:	6818      	ldr	r0, [r3, #0]
 800d564:	68a1      	ldr	r1, [r4, #8]
 800d566:	f005 0501 	and.w	r5, r5, #1
 800d56a:	f7ff f9e3 	bl	800c934 <RemoteConfig::HandleSet(void*, unsigned int)>
 800d56e:	4628      	mov	r0, r5
 800d570:	f7ff fdb2 	bl	800d0d8 <PropertiesConfig::EnableJSON(bool)>
 800d574:	e7ce      	b.n	800d514 <HttpDaemon::HandlePost(bool)+0x6c>
 800d576:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800d57a:	b002      	add	sp, #8
 800d57c:	bd70      	pop	{r4, r5, r6, pc}
 800d57e:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800d582:	6962      	ldr	r2, [r4, #20]
 800d584:	429a      	cmp	r2, r3
 800d586:	dbd0      	blt.n	800d52a <HttpDaemon::HandlePost(bool)+0x82>
 800d588:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800d58c:	2b00      	cmp	r3, #0
 800d58e:	d0cc      	beq.n	800d52a <HttpDaemon::HandlePost(bool)+0x82>
 800d590:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800d594:	2b00      	cmp	r3, #0
 800d596:	d0dc      	beq.n	800d552 <HttpDaemon::HandlePost(bool)+0xaa>
 800d598:	2201      	movs	r2, #1
 800d59a:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800d59e:	68a0      	ldr	r0, [r4, #8]
 800d5a0:	f002 fe1c 	bl	80101dc <properties::convert_json_file(char*, unsigned short, bool)>
 800d5a4:	2800      	cmp	r0, #0
 800d5a6:	dde6      	ble.n	800d576 <HttpDaemon::HandlePost(bool)+0xce>
 800d5a8:	4918      	ldr	r1, [pc, #96]	; (800d60c <HttpDaemon::HandlePost(bool)+0x164>)
 800d5aa:	68a0      	ldr	r0, [r4, #8]
 800d5ac:	f10d 0207 	add.w	r2, sp, #7
 800d5b0:	f003 f89d 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d5b4:	2800      	cmp	r0, #0
 800d5b6:	d195      	bne.n	800d4e4 <HttpDaemon::HandlePost(bool)+0x3c>
 800d5b8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d5bc:	2b00      	cmp	r3, #0
 800d5be:	d0a9      	beq.n	800d514 <HttpDaemon::HandlePost(bool)+0x6c>
 800d5c0:	4b11      	ldr	r3, [pc, #68]	; (800d608 <HttpDaemon::HandlePost(bool)+0x160>)
 800d5c2:	681b      	ldr	r3, [r3, #0]
 800d5c4:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800d5c8:	2b00      	cmp	r3, #0
 800d5ca:	d0d4      	beq.n	800d576 <HttpDaemon::HandlePost(bool)+0xce>
 800d5cc:	4b10      	ldr	r3, [pc, #64]	; (800d610 <HttpDaemon::HandlePost(bool)+0x168>)
 800d5ce:	6818      	ldr	r0, [r3, #0]
 800d5d0:	f003 fcaa 	bl	8010f28 <Hardware::Reboot()>
 800d5d4:	68c3      	ldr	r3, [r0, #12]
 800d5d6:	6083      	str	r3, [r0, #8]
 800d5d8:	6943      	ldr	r3, [r0, #20]
 800d5da:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800d5de:	e7d7      	b.n	800d590 <HttpDaemon::HandlePost(bool)+0xe8>
 800d5e0:	08013b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, sp}
 800d5e4:	08013b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, sp}
 800d5e8:	08013b8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, fp, ip, sp}
 800d5ec:	200096a0 	andcs	r9, r0, r0, lsr #13
 800d5f0:	200097a4 	andcs	r9, r0, r4, lsr #15
 800d5f4:	08013d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, sp}
 800d5f8:	08013bb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, fp, ip, sp}
 800d5fc:	08013bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, ip, sp}
 800d600:	2000978c 	andcs	r9, r0, ip, lsl #15
 800d604:	2000969e 	mulcs	r0, lr, r6
 800d608:	2000075c 	andcs	r0, r0, ip, asr r7
 800d60c:	08013ba9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, fp, ip, sp}
 800d610:	20009790 	mulcs	r0, r0, r7

0800d614 <HttpDaemon::Run()>:
 800d614:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d616:	4e4a      	ldr	r6, [pc, #296]	; (800d740 <HttpDaemon::Run()+0x12c>)
 800d618:	4604      	mov	r4, r0
 800d61a:	6901      	ldr	r1, [r0, #16]
 800d61c:	f100 020c 	add.w	r2, r0, #12
 800d620:	b085      	sub	sp, #20
 800d622:	6830      	ldr	r0, [r6, #0]
 800d624:	f001 fff9 	bl	800f61a <Network::TcpRead(int, unsigned char const**)>
 800d628:	6160      	str	r0, [r4, #20]
 800d62a:	2800      	cmp	r0, #0
 800d62c:	d061      	beq.n	800d6f2 <HttpDaemon::Run()+0xde>
 800d62e:	69a3      	ldr	r3, [r4, #24]
 800d630:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800d634:	d15f      	bne.n	800d6f6 <HttpDaemon::Run()+0xe2>
 800d636:	4620      	mov	r0, r4
 800d638:	f7ff fe10 	bl	800d25c <HttpDaemon::ParseRequest()>
 800d63c:	28c8      	cmp	r0, #200	; 0xc8
 800d63e:	61a0      	str	r0, [r4, #24]
 800d640:	d106      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d642:	69e3      	ldr	r3, [r4, #28]
 800d644:	2b00      	cmp	r3, #0
 800d646:	d147      	bne.n	800d6d8 <HttpDaemon::Run()+0xc4>
 800d648:	4620      	mov	r0, r4
 800d64a:	f7ff fe7f 	bl	800d34c <HttpDaemon::HandleGet()>
 800d64e:	61a0      	str	r0, [r4, #24]
 800d650:	69a3      	ldr	r3, [r4, #24]
 800d652:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800d656:	2bc8      	cmp	r3, #200	; 0xc8
 800d658:	d06f      	beq.n	800d73a <HttpDaemon::Run()+0x126>
 800d65a:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800d65e:	d062      	beq.n	800d726 <HttpDaemon::Run()+0x112>
 800d660:	dc52      	bgt.n	800d708 <HttpDaemon::Run()+0xf4>
 800d662:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800d666:	d060      	beq.n	800d72a <HttpDaemon::Run()+0x116>
 800d668:	f240 129d 	movw	r2, #413	; 0x19d
 800d66c:	4293      	cmp	r3, r2
 800d66e:	d05e      	beq.n	800d72e <HttpDaemon::Run()+0x11a>
 800d670:	4d34      	ldr	r5, [pc, #208]	; (800d744 <HttpDaemon::Run()+0x130>)
 800d672:	4a35      	ldr	r2, [pc, #212]	; (800d748 <HttpDaemon::Run()+0x134>)
 800d674:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800d678:	bf18      	it	ne
 800d67a:	4615      	movne	r5, r2
 800d67c:	4a33      	ldr	r2, [pc, #204]	; (800d74c <HttpDaemon::Run()+0x138>)
 800d67e:	f240 519f 	movw	r1, #1439	; 0x59f
 800d682:	6022      	str	r2, [r4, #0]
 800d684:	4638      	mov	r0, r7
 800d686:	e9cd 5500 	strd	r5, r5, [sp]
 800d68a:	4a31      	ldr	r2, [pc, #196]	; (800d750 <HttpDaemon::Run()+0x13c>)
 800d68c:	f7fb ffa0 	bl	80095d0 <snprintf>
 800d690:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800d694:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800d698:	f240 519f 	movw	r1, #1439	; 0x59f
 800d69c:	9303      	str	r3, [sp, #12]
 800d69e:	6823      	ldr	r3, [r4, #0]
 800d6a0:	4a2c      	ldr	r2, [pc, #176]	; (800d754 <HttpDaemon::Run()+0x140>)
 800d6a2:	9302      	str	r3, [sp, #8]
 800d6a4:	4b2c      	ldr	r3, [pc, #176]	; (800d758 <HttpDaemon::Run()+0x144>)
 800d6a6:	68e0      	ldr	r0, [r4, #12]
 800d6a8:	e9cd 5300 	strd	r5, r3, [sp]
 800d6ac:	69a3      	ldr	r3, [r4, #24]
 800d6ae:	f7fb ff8f 	bl	80095d0 <snprintf>
 800d6b2:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800d6b6:	b283      	uxth	r3, r0
 800d6b8:	6830      	ldr	r0, [r6, #0]
 800d6ba:	f001 ffb2 	bl	800f622 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800d6be:	463a      	mov	r2, r7
 800d6c0:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800d6c4:	6921      	ldr	r1, [r4, #16]
 800d6c6:	6830      	ldr	r0, [r6, #0]
 800d6c8:	f001 ffab 	bl	800f622 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800d6cc:	f44f 7202 	mov.w	r2, #520	; 0x208
 800d6d0:	2302      	movs	r3, #2
 800d6d2:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800d6d6:	e00c      	b.n	800d6f2 <HttpDaemon::Run()+0xde>
 800d6d8:	2b01      	cmp	r3, #1
 800d6da:	d1b9      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d6dc:	2100      	movs	r1, #0
 800d6de:	4620      	mov	r0, r4
 800d6e0:	f7ff fee2 	bl	800d4a8 <HttpDaemon::HandlePost(bool)>
 800d6e4:	28c8      	cmp	r0, #200	; 0xc8
 800d6e6:	61a0      	str	r0, [r4, #24]
 800d6e8:	d1b2      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d6ea:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800d6ee:	2b00      	cmp	r3, #0
 800d6f0:	d1ae      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d6f2:	b005      	add	sp, #20
 800d6f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d6f6:	2bc8      	cmp	r3, #200	; 0xc8
 800d6f8:	d1aa      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d6fa:	69e1      	ldr	r1, [r4, #28]
 800d6fc:	2901      	cmp	r1, #1
 800d6fe:	d1a7      	bne.n	800d650 <HttpDaemon::Run()+0x3c>
 800d700:	4620      	mov	r0, r4
 800d702:	f7ff fed1 	bl	800d4a8 <HttpDaemon::HandlePost(bool)>
 800d706:	e7a2      	b.n	800d64e <HttpDaemon::Run()+0x3a>
 800d708:	f240 12f5 	movw	r2, #501	; 0x1f5
 800d70c:	4293      	cmp	r3, r2
 800d70e:	d010      	beq.n	800d732 <HttpDaemon::Run()+0x11e>
 800d710:	f240 12f9 	movw	r2, #505	; 0x1f9
 800d714:	4293      	cmp	r3, r2
 800d716:	d00e      	beq.n	800d736 <HttpDaemon::Run()+0x122>
 800d718:	4d10      	ldr	r5, [pc, #64]	; (800d75c <HttpDaemon::Run()+0x148>)
 800d71a:	4a0b      	ldr	r2, [pc, #44]	; (800d748 <HttpDaemon::Run()+0x134>)
 800d71c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d720:	bf18      	it	ne
 800d722:	4615      	movne	r5, r2
 800d724:	e7aa      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d726:	4d0e      	ldr	r5, [pc, #56]	; (800d760 <HttpDaemon::Run()+0x14c>)
 800d728:	e7a8      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d72a:	4d0e      	ldr	r5, [pc, #56]	; (800d764 <HttpDaemon::Run()+0x150>)
 800d72c:	e7a6      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d72e:	4d0e      	ldr	r5, [pc, #56]	; (800d768 <HttpDaemon::Run()+0x154>)
 800d730:	e7a4      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d732:	4d0e      	ldr	r5, [pc, #56]	; (800d76c <HttpDaemon::Run()+0x158>)
 800d734:	e7a2      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d736:	4d0e      	ldr	r5, [pc, #56]	; (800d770 <HttpDaemon::Run()+0x15c>)
 800d738:	e7a0      	b.n	800d67c <HttpDaemon::Run()+0x68>
 800d73a:	4d0e      	ldr	r5, [pc, #56]	; (800d774 <HttpDaemon::Run()+0x160>)
 800d73c:	e7aa      	b.n	800d694 <HttpDaemon::Run()+0x80>
 800d73e:	bf00      	nop
 800d740:	20009070 	andcs	r9, r0, r0, ror r0
 800d744:	08013c7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, fp, ip, sp}
 800d748:	08013c86 	stmdaeq	r1, {r1, r2, r7, sl, fp, ip, sp}
 800d74c:	08013d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, sp}
 800d750:	08013cad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, fp, ip, sp}
 800d754:	08013d08 	stmdaeq	r1, {r3, r8, sl, fp, ip, sp}
 800d758:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 800d75c:	08013c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp}
 800d760:	08013c38 	stmdaeq	r1, {r3, r4, r5, sl, fp, ip, sp}
 800d764:	08013c2e 	stmdaeq	r1, {r1, r2, r3, r5, sl, fp, ip, sp}
 800d768:	08013c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, ip, sp}
 800d76c:	08013c63 	stmdaeq	r1, {r0, r1, r5, r6, sl, fp, ip, sp}
 800d770:	08013c4d 	stmdaeq	r1, {r0, r2, r3, r6, sl, fp, ip, sp}
 800d774:	08013caa 	stmdaeq	r1, {r1, r3, r5, r7, sl, fp, ip, sp}

0800d778 <remoteconfig::json_get_list(char*, unsigned short)>:
 800d778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d77c:	4b14      	ldr	r3, [pc, #80]	; (800d7d0 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800d77e:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800d7d4 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800d782:	681b      	ldr	r3, [r3, #0]
 800d784:	b088      	sub	sp, #32
 800d786:	4605      	mov	r5, r0
 800d788:	f8d8 0000 	ldr.w	r0, [r8]
 800d78c:	691c      	ldr	r4, [r3, #16]
 800d78e:	460e      	mov	r6, r1
 800d790:	f7fe ffc2 	bl	800c718 <RemoteConfig::GetStringNode() const>
 800d794:	4607      	mov	r7, r0
 800d796:	f8d8 0000 	ldr.w	r0, [r8]
 800d79a:	f7fe ffc9 	bl	800c730 <RemoteConfig::GetStringOutput() const>
 800d79e:	4b0e      	ldr	r3, [pc, #56]	; (800d7d8 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800d7a0:	4631      	mov	r1, r6
 800d7a2:	7a1a      	ldrb	r2, [r3, #8]
 800d7a4:	3309      	adds	r3, #9
 800d7a6:	9303      	str	r3, [sp, #12]
 800d7a8:	0e23      	lsrs	r3, r4, #24
 800d7aa:	9302      	str	r3, [sp, #8]
 800d7ac:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800d7b0:	9301      	str	r3, [sp, #4]
 800d7b2:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800d7b6:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800d7ba:	9300      	str	r3, [sp, #0]
 800d7bc:	4628      	mov	r0, r5
 800d7be:	4a07      	ldr	r2, [pc, #28]	; (800d7dc <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800d7c0:	9704      	str	r7, [sp, #16]
 800d7c2:	b2e3      	uxtb	r3, r4
 800d7c4:	f7fb ff04 	bl	80095d0 <snprintf>
 800d7c8:	b280      	uxth	r0, r0
 800d7ca:	b008      	add	sp, #32
 800d7cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7d0:	20009070 	andcs	r9, r0, r0, ror r0
 800d7d4:	2000075c 	andcs	r0, r0, ip, asr r7
 800d7d8:	20000738 	andcs	r0, r0, r8, lsr r7
 800d7dc:	08013e3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, fp, ip, sp}

0800d7e0 <remoteconfig::json_get_version(char*, unsigned short)>:
 800d7e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d7e2:	2208      	movs	r2, #8
 800d7e4:	4b09      	ldr	r3, [pc, #36]	; (800d80c <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800d7e6:	9204      	str	r2, [sp, #16]
 800d7e8:	f1a3 020b 	sub.w	r2, r3, #11
 800d7ec:	9203      	str	r2, [sp, #12]
 800d7ee:	220b      	movs	r2, #11
 800d7f0:	9202      	str	r2, [sp, #8]
 800d7f2:	4a07      	ldr	r2, [pc, #28]	; (800d810 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800d7f4:	9305      	str	r3, [sp, #20]
 800d7f6:	3b0e      	subs	r3, #14
 800d7f8:	9201      	str	r2, [sp, #4]
 800d7fa:	9300      	str	r3, [sp, #0]
 800d7fc:	4a05      	ldr	r2, [pc, #20]	; (800d814 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800d7fe:	2303      	movs	r3, #3
 800d800:	f7fb fee6 	bl	80095d0 <snprintf>
 800d804:	b280      	uxth	r0, r0
 800d806:	b007      	add	sp, #28
 800d808:	f85d fb04 	ldr.w	pc, [sp], #4
 800d80c:	2000973e 	andcs	r9, r0, lr, lsr r7
 800d810:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 800d814:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}

0800d818 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800d818:	b508      	push	{r3, lr}
 800d81a:	4b05      	ldr	r3, [pc, #20]	; (800d830 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800d81c:	681a      	ldr	r2, [r3, #0]
 800d81e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800d822:	fbb2 f3f3 	udiv	r3, r2, r3
 800d826:	4a03      	ldr	r2, [pc, #12]	; (800d834 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800d828:	f7fb fed2 	bl	80095d0 <snprintf>
 800d82c:	b280      	uxth	r0, r0
 800d82e:	bd08      	pop	{r3, pc}
 800d830:	200097a4 	andcs	r9, r0, r4, lsr #15
 800d834:	08013edf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, fp, ip, sp}

0800d838 <remoteconfig::json_get_display(char*, unsigned short)>:
 800d838:	b508      	push	{r3, lr}
 800d83a:	4b05      	ldr	r3, [pc, #20]	; (800d850 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800d83c:	4a05      	ldr	r2, [pc, #20]	; (800d854 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800d83e:	681b      	ldr	r3, [r3, #0]
 800d840:	7c1b      	ldrb	r3, [r3, #16]
 800d842:	f083 0301 	eor.w	r3, r3, #1
 800d846:	f7fb fec3 	bl	80095d0 <snprintf>
 800d84a:	b280      	uxth	r0, r0
 800d84c:	bd08      	pop	{r3, pc}
 800d84e:	bf00      	nop
 800d850:	200096a0 	andcs	r9, r0, r0, lsr #13
 800d854:	08013eee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp}

0800d858 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800d858:	b508      	push	{r3, lr}
 800d85a:	4a02      	ldr	r2, [pc, #8]	; (800d864 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800d85c:	f7fb feb8 	bl	80095d0 <snprintf>
 800d860:	b280      	uxth	r0, r0
 800d862:	bd08      	pop	{r3, pc}
 800d864:	08013efd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp}

0800d868 <get_file_content(char const*, char*)>:
 800d868:	2300      	movs	r3, #0
 800d86a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d86c:	4a18      	ldr	r2, [pc, #96]	; (800d8d0 <get_file_content(char const*, char*)+0x68>)
 800d86e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800d872:	1e46      	subs	r6, r0, #1
 800d874:	1e6f      	subs	r7, r5, #1
 800d876:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800d87a:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800d87e:	4564      	cmp	r4, ip
 800d880:	d119      	bne.n	800d8b6 <get_file_content(char const*, char*)+0x4e>
 800d882:	2c00      	cmp	r4, #0
 800d884:	d1f7      	bne.n	800d876 <get_file_content(char const*, char*)+0xe>
 800d886:	460c      	mov	r4, r1
 800d888:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800d88c:	685b      	ldr	r3, [r3, #4]
 800d88e:	3b01      	subs	r3, #1
 800d890:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800d894:	f804 2b01 	strb.w	r2, [r4], #1
 800d898:	2a00      	cmp	r2, #0
 800d89a:	d1f9      	bne.n	800d890 <get_file_content(char const*, char*)+0x28>
 800d89c:	1a64      	subs	r4, r4, r1
 800d89e:	3c01      	subs	r4, #1
 800d8a0:	232e      	movs	r3, #46	; 0x2e
 800d8a2:	e9cd 5400 	strd	r5, r4, [sp]
 800d8a6:	4a0b      	ldr	r2, [pc, #44]	; (800d8d4 <get_file_content(char const*, char*)+0x6c>)
 800d8a8:	490b      	ldr	r1, [pc, #44]	; (800d8d8 <get_file_content(char const*, char*)+0x70>)
 800d8aa:	480c      	ldr	r0, [pc, #48]	; (800d8dc <get_file_content(char const*, char*)+0x74>)
 800d8ac:	f7fb fe80 	bl	80095b0 <printf>
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	b003      	add	sp, #12
 800d8b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8b6:	3301      	adds	r3, #1
 800d8b8:	2b03      	cmp	r3, #3
 800d8ba:	d1d8      	bne.n	800d86e <get_file_content(char const*, char*)+0x6>
 800d8bc:	2333      	movs	r3, #51	; 0x33
 800d8be:	4a06      	ldr	r2, [pc, #24]	; (800d8d8 <get_file_content(char const*, char*)+0x70>)
 800d8c0:	4904      	ldr	r1, [pc, #16]	; (800d8d4 <get_file_content(char const*, char*)+0x6c>)
 800d8c2:	4807      	ldr	r0, [pc, #28]	; (800d8e0 <get_file_content(char const*, char*)+0x78>)
 800d8c4:	f7fb fe74 	bl	80095b0 <printf>
 800d8c8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800d8cc:	e7f0      	b.n	800d8b0 <get_file_content(char const*, char*)+0x48>
 800d8ce:	bf00      	nop
 800d8d0:	0801427c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, lr}
 800d8d4:	08013f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp}
 800d8d8:	08013f96 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, sl, fp, ip, sp}
 800d8dc:	08013fa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, sl, fp, ip, sp}
 800d8e0:	08013fc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, fp, ip, sp}

0800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800d8e4:	2300      	movs	r3, #0
 800d8e6:	2020      	movs	r0, #32
 800d8e8:	b510      	push	{r4, lr}
 800d8ea:	4a04      	ldr	r2, [pc, #16]	; (800d8fc <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800d8ec:	428b      	cmp	r3, r1
 800d8ee:	d004      	beq.n	800d8fa <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800d8f0:	f852 4b04 	ldr.w	r4, [r2], #4
 800d8f4:	3301      	adds	r3, #1
 800d8f6:	4420      	add	r0, r4
 800d8f8:	e7f8      	b.n	800d8ec <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800d8fa:	bd10      	pop	{r4, pc}
 800d8fc:	080147c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, lr}

0800d900 <SpiFlashStore::Init()>:
 800d900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d904:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800da28 <SpiFlashStore::Init()+0x128>
 800d908:	4607      	mov	r7, r0
 800d90a:	b085      	sub	sp, #20
 800d90c:	f8d8 0000 	ldr.w	r0, [r8]
 800d910:	f000 fbb0 	bl	800e074 <FlashRom::GetSectorSize() const>
 800d914:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800d918:	4605      	mov	r5, r0
 800d91a:	f040 8083 	bne.w	800da24 <SpiFlashStore::Init()+0x124>
 800d91e:	f8d8 0000 	ldr.w	r0, [r8]
 800d922:	f000 fb9f 	bl	800e064 <FlashRom::GetSize() const>
 800d926:	4b41      	ldr	r3, [pc, #260]	; (800da2c <SpiFlashStore::Init()+0x12c>)
 800d928:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800d92c:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800d930:	6019      	str	r1, [r3, #0]
 800d932:	2e00      	cmp	r6, #0
 800d934:	d176      	bne.n	800da24 <SpiFlashStore::Init()+0x124>
 800d936:	4c3e      	ldr	r4, [pc, #248]	; (800da30 <SpiFlashStore::Init()+0x130>)
 800d938:	ab03      	add	r3, sp, #12
 800d93a:	9300      	str	r3, [sp, #0]
 800d93c:	462a      	mov	r2, r5
 800d93e:	4623      	mov	r3, r4
 800d940:	f8d8 0000 	ldr.w	r0, [r8]
 800d944:	f000 fb99 	bl	800e07a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800d948:	7823      	ldrb	r3, [r4, #0]
 800d94a:	2b41      	cmp	r3, #65	; 0x41
 800d94c:	bf1c      	itt	ne
 800d94e:	2341      	movne	r3, #65	; 0x41
 800d950:	7023      	strbne	r3, [r4, #0]
 800d952:	7863      	ldrb	r3, [r4, #1]
 800d954:	bf14      	ite	ne
 800d956:	4635      	movne	r5, r6
 800d958:	2501      	moveq	r5, #1
 800d95a:	2b76      	cmp	r3, #118	; 0x76
 800d95c:	bf1c      	itt	ne
 800d95e:	2376      	movne	r3, #118	; 0x76
 800d960:	7063      	strbne	r3, [r4, #1]
 800d962:	78a3      	ldrb	r3, [r4, #2]
 800d964:	bf18      	it	ne
 800d966:	2500      	movne	r5, #0
 800d968:	2b56      	cmp	r3, #86	; 0x56
 800d96a:	bf1c      	itt	ne
 800d96c:	2356      	movne	r3, #86	; 0x56
 800d96e:	70a3      	strbne	r3, [r4, #2]
 800d970:	78e3      	ldrb	r3, [r4, #3]
 800d972:	bf18      	it	ne
 800d974:	2500      	movne	r5, #0
 800d976:	2b10      	cmp	r3, #16
 800d978:	d01c      	beq.n	800d9b4 <SpiFlashStore::Init()+0xb4>
 800d97a:	2310      	movs	r3, #16
 800d97c:	70e3      	strb	r3, [r4, #3]
 800d97e:	2201      	movs	r2, #1
 800d980:	2500      	movs	r5, #0
 800d982:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d986:	4b2b      	ldr	r3, [pc, #172]	; (800da34 <SpiFlashStore::Init()+0x134>)
 800d988:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800da38 <SpiFlashStore::Init()+0x138>
 800d98c:	701a      	strb	r2, [r3, #0]
 800d98e:	4631      	mov	r1, r6
 800d990:	4638      	mov	r0, r7
 800d992:	f7ff ffa7 	bl	800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800d996:	1823      	adds	r3, r4, r0
 800d998:	5425      	strb	r5, [r4, r0]
 800d99a:	705d      	strb	r5, [r3, #1]
 800d99c:	709d      	strb	r5, [r3, #2]
 800d99e:	70dd      	strb	r5, [r3, #3]
 800d9a0:	f858 3b04 	ldr.w	r3, [r8], #4
 800d9a4:	1d02      	adds	r2, r0, #4
 800d9a6:	4403      	add	r3, r0
 800d9a8:	4293      	cmp	r3, r2
 800d9aa:	d931      	bls.n	800da10 <SpiFlashStore::Init()+0x110>
 800d9ac:	f804 9002 	strb.w	r9, [r4, r2]
 800d9b0:	3201      	adds	r2, #1
 800d9b2:	e7f9      	b.n	800d9a8 <SpiFlashStore::Init()+0xa8>
 800d9b4:	2d00      	cmp	r5, #0
 800d9b6:	d0e2      	beq.n	800d97e <SpiFlashStore::Init()+0x7e>
 800d9b8:	f04f 0900 	mov.w	r9, #0
 800d9bc:	46c8      	mov	r8, r9
 800d9be:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800da3c <SpiFlashStore::Init()+0x13c>
 800d9c2:	f8da b000 	ldr.w	fp, [sl]
 800d9c6:	4631      	mov	r1, r6
 800d9c8:	4638      	mov	r0, r7
 800d9ca:	f7ff ff8b 	bl	800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800d9ce:	5c23      	ldrb	r3, [r4, r0]
 800d9d0:	2bff      	cmp	r3, #255	; 0xff
 800d9d2:	d114      	bne.n	800d9fe <SpiFlashStore::Init()+0xfe>
 800d9d4:	1823      	adds	r3, r4, r0
 800d9d6:	785a      	ldrb	r2, [r3, #1]
 800d9d8:	2aff      	cmp	r2, #255	; 0xff
 800d9da:	d110      	bne.n	800d9fe <SpiFlashStore::Init()+0xfe>
 800d9dc:	789a      	ldrb	r2, [r3, #2]
 800d9de:	2aff      	cmp	r2, #255	; 0xff
 800d9e0:	d10d      	bne.n	800d9fe <SpiFlashStore::Init()+0xfe>
 800d9e2:	78da      	ldrb	r2, [r3, #3]
 800d9e4:	2aff      	cmp	r2, #255	; 0xff
 800d9e6:	d10a      	bne.n	800d9fe <SpiFlashStore::Init()+0xfe>
 800d9e8:	46a9      	mov	r9, r5
 800d9ea:	f04f 0b01 	mov.w	fp, #1
 800d9ee:	f804 8000 	strb.w	r8, [r4, r0]
 800d9f2:	f883 8001 	strb.w	r8, [r3, #1]
 800d9f6:	f883 8002 	strb.w	r8, [r3, #2]
 800d9fa:	f883 8003 	strb.w	r8, [r3, #3]
 800d9fe:	3601      	adds	r6, #1
 800da00:	2e1c      	cmp	r6, #28
 800da02:	d1e0      	bne.n	800d9c6 <SpiFlashStore::Init()+0xc6>
 800da04:	f1b9 0f00 	cmp.w	r9, #0
 800da08:	d008      	beq.n	800da1c <SpiFlashStore::Init()+0x11c>
 800da0a:	f8ca b000 	str.w	fp, [sl]
 800da0e:	e005      	b.n	800da1c <SpiFlashStore::Init()+0x11c>
 800da10:	3601      	adds	r6, #1
 800da12:	2e1c      	cmp	r6, #28
 800da14:	d1bb      	bne.n	800d98e <SpiFlashStore::Init()+0x8e>
 800da16:	2501      	movs	r5, #1
 800da18:	4b08      	ldr	r3, [pc, #32]	; (800da3c <SpiFlashStore::Init()+0x13c>)
 800da1a:	601d      	str	r5, [r3, #0]
 800da1c:	4628      	mov	r0, r5
 800da1e:	b005      	add	sp, #20
 800da20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da24:	2500      	movs	r5, #0
 800da26:	e7f9      	b.n	800da1c <SpiFlashStore::Init()+0x11c>
 800da28:	2000178c 	andcs	r1, r0, ip, lsl #15
 800da2c:	20001764 	andcs	r1, r0, r4, ror #14
 800da30:	20000764 	andcs	r0, r0, r4, ror #14
 800da34:	20001778 	andcs	r1, r0, r8, ror r7
 800da38:	080147c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, lr}
 800da3c:	20001770 	andcs	r1, r0, r0, ror r7

0800da40 <SpiFlashStore::SpiFlashStore()>:
 800da40:	b538      	push	{r3, r4, r5, lr}
 800da42:	4b0d      	ldr	r3, [pc, #52]	; (800da78 <SpiFlashStore::SpiFlashStore()+0x38>)
 800da44:	4604      	mov	r4, r0
 800da46:	6018      	str	r0, [r3, #0]
 800da48:	4b0c      	ldr	r3, [pc, #48]	; (800da7c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800da4a:	4d0d      	ldr	r5, [pc, #52]	; (800da80 <SpiFlashStore::SpiFlashStore()+0x40>)
 800da4c:	681b      	ldr	r3, [r3, #0]
 800da4e:	781b      	ldrb	r3, [r3, #0]
 800da50:	b113      	cbz	r3, 800da58 <SpiFlashStore::SpiFlashStore()+0x18>
 800da52:	f7ff ff55 	bl	800d900 <SpiFlashStore::Init()>
 800da56:	7028      	strb	r0, [r5, #0]
 800da58:	782b      	ldrb	r3, [r5, #0]
 800da5a:	b153      	cbz	r3, 800da72 <SpiFlashStore::SpiFlashStore()+0x32>
 800da5c:	2320      	movs	r3, #32
 800da5e:	2200      	movs	r2, #0
 800da60:	4908      	ldr	r1, [pc, #32]	; (800da84 <SpiFlashStore::SpiFlashStore()+0x44>)
 800da62:	f851 0b04 	ldr.w	r0, [r1], #4
 800da66:	3201      	adds	r2, #1
 800da68:	2a1c      	cmp	r2, #28
 800da6a:	4403      	add	r3, r0
 800da6c:	d1f9      	bne.n	800da62 <SpiFlashStore::SpiFlashStore()+0x22>
 800da6e:	4a06      	ldr	r2, [pc, #24]	; (800da88 <SpiFlashStore::SpiFlashStore()+0x48>)
 800da70:	6013      	str	r3, [r2, #0]
 800da72:	4620      	mov	r0, r4
 800da74:	bd38      	pop	{r3, r4, r5, pc}
 800da76:	bf00      	nop
 800da78:	20001774 	andcs	r1, r0, r4, ror r7
 800da7c:	2000178c 	andcs	r1, r0, ip, lsl #15
 800da80:	20001768 	andcs	r1, r0, r8, ror #14
 800da84:	080147c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, lr}
 800da88:	2000176c 	andcs	r1, r0, ip, ror #14

0800da8c <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800da8c:	b508      	push	{r3, lr}
 800da8e:	f7ff ff29 	bl	800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800da92:	2300      	movs	r3, #0
 800da94:	4904      	ldr	r1, [pc, #16]	; (800daa8 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800da96:	1842      	adds	r2, r0, r1
 800da98:	540b      	strb	r3, [r1, r0]
 800da9a:	7053      	strb	r3, [r2, #1]
 800da9c:	7093      	strb	r3, [r2, #2]
 800da9e:	70d3      	strb	r3, [r2, #3]
 800daa0:	2201      	movs	r2, #1
 800daa2:	4b02      	ldr	r3, [pc, #8]	; (800daac <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800daa4:	601a      	str	r2, [r3, #0]
 800daa6:	bd08      	pop	{r3, pc}
 800daa8:	20000764 	andcs	r0, r0, r4, ror #14
 800daac:	20001770 	andcs	r1, r0, r0, ror r7

0800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800dab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dab4:	461c      	mov	r4, r3
 800dab6:	4b19      	ldr	r3, [pc, #100]	; (800db1c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800dab8:	4615      	mov	r5, r2
 800daba:	781f      	ldrb	r7, [r3, #0]
 800dabc:	9e07      	ldr	r6, [sp, #28]
 800dabe:	b35f      	cbz	r7, 800db18 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800dac0:	f7ff ff10 	bl	800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800dac4:	f04f 0c00 	mov.w	ip, #0
 800dac8:	4a15      	ldr	r2, [pc, #84]	; (800db20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800daca:	1941      	adds	r1, r0, r5
 800dacc:	1e63      	subs	r3, r4, #1
 800dace:	9c06      	ldr	r4, [sp, #24]
 800dad0:	4411      	add	r1, r2
 800dad2:	440c      	add	r4, r1
 800dad4:	42a1      	cmp	r1, r4
 800dad6:	d00a      	beq.n	800daee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800dad8:	f891 8000 	ldrb.w	r8, [r1]
 800dadc:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800dae0:	3101      	adds	r1, #1
 800dae2:	45f0      	cmp	r8, lr
 800dae4:	bf1c      	itt	ne
 800dae6:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800daea:	46bc      	movne	ip, r7
 800daec:	e7f2      	b.n	800dad4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800daee:	f1bc 0f00 	cmp.w	ip, #0
 800daf2:	d011      	beq.n	800db18 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800daf4:	4b0b      	ldr	r3, [pc, #44]	; (800db24 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800daf6:	6819      	ldr	r1, [r3, #0]
 800daf8:	b109      	cbz	r1, 800dafe <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800dafa:	2906      	cmp	r1, #6
 800dafc:	d101      	bne.n	800db02 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800dafe:	2101      	movs	r1, #1
 800db00:	6019      	str	r1, [r3, #0]
 800db02:	4b09      	ldr	r3, [pc, #36]	; (800db28 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800db04:	6819      	ldr	r1, [r3, #0]
 800db06:	4b09      	ldr	r3, [pc, #36]	; (800db2c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800db08:	6019      	str	r1, [r3, #0]
 800db0a:	b12d      	cbz	r5, 800db18 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800db0c:	b126      	cbz	r6, 800db18 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800db0e:	9b08      	ldr	r3, [sp, #32]
 800db10:	4418      	add	r0, r3
 800db12:	5813      	ldr	r3, [r2, r0]
 800db14:	4333      	orrs	r3, r6
 800db16:	5013      	str	r3, [r2, r0]
 800db18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db1c:	20001768 	andcs	r1, r0, r8, ror #14
 800db20:	20000764 	andcs	r0, r0, r4, ror #14
 800db24:	20001770 	andcs	r1, r0, r0, ror r7
 800db28:	200097a4 	andcs	r9, r0, r4, lsr #15
 800db2c:	20000760 	andcs	r0, r0, r0, ror #14

0800db30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800db30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db34:	461d      	mov	r5, r3
 800db36:	4b15      	ldr	r3, [pc, #84]	; (800db8c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800db38:	b085      	sub	sp, #20
 800db3a:	781b      	ldrb	r3, [r3, #0]
 800db3c:	4607      	mov	r7, r0
 800db3e:	4688      	mov	r8, r1
 800db40:	4614      	mov	r4, r2
 800db42:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800db46:	b1eb      	cbz	r3, 800db84 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800db48:	f7ff fecc 	bl	800d8e4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800db4c:	4910      	ldr	r1, [pc, #64]	; (800db90 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800db4e:	4a11      	ldr	r2, [pc, #68]	; (800db94 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800db50:	7809      	ldrb	r1, [r1, #0]
 800db52:	eb00 0309 	add.w	r3, r0, r9
 800db56:	189e      	adds	r6, r3, r2
 800db58:	b951      	cbnz	r1, 800db70 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800db5a:	589b      	ldr	r3, [r3, r2]
 800db5c:	b143      	cbz	r3, 800db70 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800db5e:	3c01      	subs	r4, #1
 800db60:	4435      	add	r5, r6
 800db62:	42b5      	cmp	r5, r6
 800db64:	d00e      	beq.n	800db84 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800db66:	f816 3b01 	ldrb.w	r3, [r6], #1
 800db6a:	f804 3f01 	strb.w	r3, [r4, #1]!
 800db6e:	e7f8      	b.n	800db62 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800db70:	2300      	movs	r3, #0
 800db72:	464a      	mov	r2, r9
 800db74:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800db78:	4641      	mov	r1, r8
 800db7a:	4623      	mov	r3, r4
 800db7c:	4638      	mov	r0, r7
 800db7e:	9500      	str	r5, [sp, #0]
 800db80:	f7ff ff96 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800db84:	b005      	add	sp, #20
 800db86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db8a:	bf00      	nop
 800db8c:	20001768 	andcs	r1, r0, r8, ror #14
 800db90:	20001778 	andcs	r1, r0, r8, ror r7
 800db94:	20000764 	andcs	r0, r0, r4, ror #14

0800db98 <SpiFlashStore::Flash()>:
 800db98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800db9a:	4c25      	ldr	r4, [pc, #148]	; (800dc30 <SpiFlashStore::Flash()+0x98>)
 800db9c:	6820      	ldr	r0, [r4, #0]
 800db9e:	2800      	cmp	r0, #0
 800dba0:	d043      	beq.n	800dc2a <SpiFlashStore::Flash()+0x92>
 800dba2:	3801      	subs	r0, #1
 800dba4:	2805      	cmp	r0, #5
 800dba6:	d831      	bhi.n	800dc0c <SpiFlashStore::Flash()+0x74>
 800dba8:	e8df f000 	tbb	[pc, r0]
 800dbac:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800dbb0:	4b203025 	blmi	8819c4c <__exidx_end+0x804b78>
 800dbb4:	681a      	ldr	r2, [r3, #0]
 800dbb6:	4b20      	ldr	r3, [pc, #128]	; (800dc38 <SpiFlashStore::Flash()+0xa0>)
 800dbb8:	601a      	str	r2, [r3, #0]
 800dbba:	2302      	movs	r3, #2
 800dbbc:	6023      	str	r3, [r4, #0]
 800dbbe:	2001      	movs	r0, #1
 800dbc0:	e033      	b.n	800dc2a <SpiFlashStore::Flash()+0x92>
 800dbc2:	4b1c      	ldr	r3, [pc, #112]	; (800dc34 <SpiFlashStore::Flash()+0x9c>)
 800dbc4:	4a1c      	ldr	r2, [pc, #112]	; (800dc38 <SpiFlashStore::Flash()+0xa0>)
 800dbc6:	681b      	ldr	r3, [r3, #0]
 800dbc8:	6812      	ldr	r2, [r2, #0]
 800dbca:	1a9b      	subs	r3, r3, r2
 800dbcc:	2b63      	cmp	r3, #99	; 0x63
 800dbce:	d9f6      	bls.n	800dbbe <SpiFlashStore::Flash()+0x26>
 800dbd0:	2303      	movs	r3, #3
 800dbd2:	e7f3      	b.n	800dbbc <SpiFlashStore::Flash()+0x24>
 800dbd4:	4919      	ldr	r1, [pc, #100]	; (800dc3c <SpiFlashStore::Flash()+0xa4>)
 800dbd6:	481a      	ldr	r0, [pc, #104]	; (800dc40 <SpiFlashStore::Flash()+0xa8>)
 800dbd8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800dbdc:	6809      	ldr	r1, [r1, #0]
 800dbde:	6800      	ldr	r0, [r0, #0]
 800dbe0:	ab03      	add	r3, sp, #12
 800dbe2:	f000 fa59 	bl	800e098 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800dbe6:	2800      	cmp	r0, #0
 800dbe8:	d0e9      	beq.n	800dbbe <SpiFlashStore::Flash()+0x26>
 800dbea:	4b12      	ldr	r3, [pc, #72]	; (800dc34 <SpiFlashStore::Flash()+0x9c>)
 800dbec:	681a      	ldr	r2, [r3, #0]
 800dbee:	4b12      	ldr	r3, [pc, #72]	; (800dc38 <SpiFlashStore::Flash()+0xa0>)
 800dbf0:	601a      	str	r2, [r3, #0]
 800dbf2:	2305      	movs	r3, #5
 800dbf4:	e7e2      	b.n	800dbbc <SpiFlashStore::Flash()+0x24>
 800dbf6:	4b0f      	ldr	r3, [pc, #60]	; (800dc34 <SpiFlashStore::Flash()+0x9c>)
 800dbf8:	4a0f      	ldr	r2, [pc, #60]	; (800dc38 <SpiFlashStore::Flash()+0xa0>)
 800dbfa:	681b      	ldr	r3, [r3, #0]
 800dbfc:	6812      	ldr	r2, [r2, #0]
 800dbfe:	1a9b      	subs	r3, r3, r2
 800dc00:	2b63      	cmp	r3, #99	; 0x63
 800dc02:	d9dc      	bls.n	800dbbe <SpiFlashStore::Flash()+0x26>
 800dc04:	2304      	movs	r3, #4
 800dc06:	e7d9      	b.n	800dbbc <SpiFlashStore::Flash()+0x24>
 800dc08:	2306      	movs	r3, #6
 800dc0a:	e7d7      	b.n	800dbbc <SpiFlashStore::Flash()+0x24>
 800dc0c:	ab03      	add	r3, sp, #12
 800dc0e:	4a0d      	ldr	r2, [pc, #52]	; (800dc44 <SpiFlashStore::Flash()+0xac>)
 800dc10:	490a      	ldr	r1, [pc, #40]	; (800dc3c <SpiFlashStore::Flash()+0xa4>)
 800dc12:	480b      	ldr	r0, [pc, #44]	; (800dc40 <SpiFlashStore::Flash()+0xa8>)
 800dc14:	9300      	str	r3, [sp, #0]
 800dc16:	6812      	ldr	r2, [r2, #0]
 800dc18:	4b0b      	ldr	r3, [pc, #44]	; (800dc48 <SpiFlashStore::Flash()+0xb0>)
 800dc1a:	6809      	ldr	r1, [r1, #0]
 800dc1c:	6800      	ldr	r0, [r0, #0]
 800dc1e:	f000 fadb 	bl	800e1d8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800dc22:	2800      	cmp	r0, #0
 800dc24:	d0cb      	beq.n	800dbbe <SpiFlashStore::Flash()+0x26>
 800dc26:	2000      	movs	r0, #0
 800dc28:	6020      	str	r0, [r4, #0]
 800dc2a:	b004      	add	sp, #16
 800dc2c:	bd10      	pop	{r4, pc}
 800dc2e:	bf00      	nop
 800dc30:	20001770 	andcs	r1, r0, r0, ror r7
 800dc34:	200097a4 	andcs	r9, r0, r4, lsr #15
 800dc38:	20000760 	andcs	r0, r0, r0, ror #14
 800dc3c:	20001764 	andcs	r1, r0, r4, ror #14
 800dc40:	2000178c 	andcs	r1, r0, ip, lsl #15
 800dc44:	2000176c 	andcs	r1, r0, ip, ror #14
 800dc48:	20000764 	andcs	r0, r0, r4, ror #14

0800dc4c <StoreNetwork::~StoreNetwork()>:
 800dc4c:	4770      	bx	lr

0800dc4e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dc4e:	3804      	subs	r0, #4
 800dc50:	4770      	bx	lr
	...

0800dc54 <StoreNetwork::Update(TNetworkParams const*)>:
 800dc54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dc56:	2200      	movs	r2, #0
 800dc58:	460b      	mov	r3, r1
 800dc5a:	215e      	movs	r1, #94	; 0x5e
 800dc5c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800dc60:	4804      	ldr	r0, [pc, #16]	; (800dc74 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800dc62:	9100      	str	r1, [sp, #0]
 800dc64:	6800      	ldr	r0, [r0, #0]
 800dc66:	4611      	mov	r1, r2
 800dc68:	f7ff ff22 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc6c:	b005      	add	sp, #20
 800dc6e:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc72:	bf00      	nop
 800dc74:	20001774 	andcs	r1, r0, r4, ror r7

0800dc78 <StoreNetwork::SaveDhcp(bool)>:
 800dc78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dc7a:	2301      	movs	r3, #1
 800dc7c:	f88d 1017 	strb.w	r1, [sp, #23]
 800dc80:	2100      	movs	r1, #0
 800dc82:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc86:	4805      	ldr	r0, [pc, #20]	; (800dc9c <StoreNetwork::SaveDhcp(bool)+0x24>)
 800dc88:	9300      	str	r3, [sp, #0]
 800dc8a:	2214      	movs	r2, #20
 800dc8c:	6800      	ldr	r0, [r0, #0]
 800dc8e:	f10d 0317 	add.w	r3, sp, #23
 800dc92:	f7ff ff0d 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc96:	b007      	add	sp, #28
 800dc98:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc9c:	20001774 	andcs	r1, r0, r4, ror r7

0800dca0 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800dca0:	f1a0 0004 	sub.w	r0, r0, #4
 800dca4:	e7e8      	b.n	800dc78 <StoreNetwork::SaveDhcp(bool)>
 800dca6:	bf00      	nop

0800dca8 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dca8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dcaa:	2308      	movs	r3, #8
 800dcac:	9105      	str	r1, [sp, #20]
 800dcae:	2100      	movs	r1, #0
 800dcb0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcb4:	2304      	movs	r3, #4
 800dcb6:	4805      	ldr	r0, [pc, #20]	; (800dccc <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800dcb8:	9300      	str	r3, [sp, #0]
 800dcba:	220c      	movs	r2, #12
 800dcbc:	6800      	ldr	r0, [r0, #0]
 800dcbe:	ab05      	add	r3, sp, #20
 800dcc0:	f7ff fef6 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcc4:	b007      	add	sp, #28
 800dcc6:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcca:	bf00      	nop
 800dccc:	20001774 	andcs	r1, r0, r4, ror r7

0800dcd0 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dcd0:	f1a0 0004 	sub.w	r0, r0, #4
 800dcd4:	e7e8      	b.n	800dca8 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800dcd6:	bf00      	nop

0800dcd8 <StoreNetwork::SaveNetMask(unsigned int)>:
 800dcd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dcda:	2304      	movs	r3, #4
 800dcdc:	9105      	str	r1, [sp, #20]
 800dcde:	2100      	movs	r1, #0
 800dce0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dce4:	4804      	ldr	r0, [pc, #16]	; (800dcf8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800dce6:	9300      	str	r3, [sp, #0]
 800dce8:	2208      	movs	r2, #8
 800dcea:	6800      	ldr	r0, [r0, #0]
 800dcec:	ab05      	add	r3, sp, #20
 800dcee:	f7ff fedf 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcf2:	b007      	add	sp, #28
 800dcf4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcf8:	20001774 	andcs	r1, r0, r4, ror r7

0800dcfc <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800dcfc:	f1a0 0004 	sub.w	r0, r0, #4
 800dd00:	e7ea      	b.n	800dcd8 <StoreNetwork::SaveNetMask(unsigned int)>
 800dd02:	bf00      	nop

0800dd04 <StoreNetwork::SaveIp(unsigned int)>:
 800dd04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dd06:	2302      	movs	r3, #2
 800dd08:	9105      	str	r1, [sp, #20]
 800dd0a:	2100      	movs	r1, #0
 800dd0c:	2204      	movs	r2, #4
 800dd0e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dd12:	4804      	ldr	r0, [pc, #16]	; (800dd24 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800dd14:	9200      	str	r2, [sp, #0]
 800dd16:	6800      	ldr	r0, [r0, #0]
 800dd18:	ab05      	add	r3, sp, #20
 800dd1a:	f7ff fec9 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dd1e:	b007      	add	sp, #28
 800dd20:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd24:	20001774 	andcs	r1, r0, r4, ror r7

0800dd28 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800dd28:	f1a0 0004 	sub.w	r0, r0, #4
 800dd2c:	e7ea      	b.n	800dd04 <StoreNetwork::SaveIp(unsigned int)>
 800dd2e:	bf00      	nop

0800dd30 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dd30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dd32:	460b      	mov	r3, r1
 800dd34:	2020      	movs	r0, #32
 800dd36:	2100      	movs	r1, #0
 800dd38:	2a40      	cmp	r2, #64	; 0x40
 800dd3a:	bf28      	it	cs
 800dd3c:	2240      	movcs	r2, #64	; 0x40
 800dd3e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800dd42:	4804      	ldr	r0, [pc, #16]	; (800dd54 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800dd44:	9200      	str	r2, [sp, #0]
 800dd46:	6800      	ldr	r0, [r0, #0]
 800dd48:	2215      	movs	r2, #21
 800dd4a:	f7ff feb1 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dd4e:	b005      	add	sp, #20
 800dd50:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd54:	20001774 	andcs	r1, r0, r4, ror r7

0800dd58 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dd58:	f1a0 0004 	sub.w	r0, r0, #4
 800dd5c:	e7e8      	b.n	800dd30 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800dd5e:	bf00      	nop

0800dd60 <StoreNetwork::~StoreNetwork()>:
 800dd60:	b510      	push	{r4, lr}
 800dd62:	4604      	mov	r4, r0
 800dd64:	f003 f91e 	bl	8010fa4 <operator delete(void*)>
 800dd68:	4620      	mov	r0, r4
 800dd6a:	bd10      	pop	{r4, pc}

0800dd6c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dd6c:	f1a0 0004 	sub.w	r0, r0, #4
 800dd70:	e7f6      	b.n	800dd60 <StoreNetwork::~StoreNetwork()>
	...

0800dd74 <StoreNetwork::Copy(TNetworkParams*)>:
 800dd74:	b507      	push	{r0, r1, r2, lr}
 800dd76:	460a      	mov	r2, r1
 800dd78:	2100      	movs	r1, #0
 800dd7a:	4804      	ldr	r0, [pc, #16]	; (800dd8c <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800dd7c:	9100      	str	r1, [sp, #0]
 800dd7e:	235e      	movs	r3, #94	; 0x5e
 800dd80:	6800      	ldr	r0, [r0, #0]
 800dd82:	f7ff fed5 	bl	800db30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800dd86:	b003      	add	sp, #12
 800dd88:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd8c:	20001774 	andcs	r1, r0, r4, ror r7

0800dd90 <StoreNetwork::StoreNetwork()>:
 800dd90:	4a03      	ldr	r2, [pc, #12]	; (800dda0 <StoreNetwork::StoreNetwork()+0x10>)
 800dd92:	6002      	str	r2, [r0, #0]
 800dd94:	322c      	adds	r2, #44	; 0x2c
 800dd96:	6042      	str	r2, [r0, #4]
 800dd98:	4a02      	ldr	r2, [pc, #8]	; (800dda4 <StoreNetwork::StoreNetwork()+0x14>)
 800dd9a:	6010      	str	r0, [r2, #0]
 800dd9c:	4770      	bx	lr
 800dd9e:	bf00      	nop
 800dda0:	08014838 	stmdaeq	r1, {r3, r4, r5, fp, lr}
 800dda4:	2000177c 	andcs	r1, r0, ip, ror r7

0800dda8 <StoreOscServer::~StoreOscServer()>:
 800dda8:	4770      	bx	lr
	...

0800ddac <StoreOscServer::Copy(osc::server::Params*)>:
 800ddac:	2300      	movs	r3, #0
 800ddae:	b507      	push	{r0, r1, r2, lr}
 800ddb0:	4805      	ldr	r0, [pc, #20]	; (800ddc8 <StoreOscServer::Copy(osc::server::Params*)+0x1c>)
 800ddb2:	9300      	str	r3, [sp, #0]
 800ddb4:	460a      	mov	r2, r1
 800ddb6:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800ddba:	2108      	movs	r1, #8
 800ddbc:	6800      	ldr	r0, [r0, #0]
 800ddbe:	f7ff feb7 	bl	800db30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ddc2:	b003      	add	sp, #12
 800ddc4:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddc8:	20001774 	andcs	r1, r0, r4, ror r7

0800ddcc <StoreOscServer::Update(osc::server::Params const*)>:
 800ddcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ddce:	2200      	movs	r2, #0
 800ddd0:	460b      	mov	r3, r1
 800ddd2:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800ddd6:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ddda:	4804      	ldr	r0, [pc, #16]	; (800ddec <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800dddc:	9100      	str	r1, [sp, #0]
 800ddde:	6800      	ldr	r0, [r0, #0]
 800dde0:	2108      	movs	r1, #8
 800dde2:	f7ff fe65 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dde6:	b005      	add	sp, #20
 800dde8:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddec:	20001774 	andcs	r1, r0, r4, ror r7

0800ddf0 <StoreOscServer::~StoreOscServer()>:
 800ddf0:	b510      	push	{r4, lr}
 800ddf2:	4604      	mov	r4, r0
 800ddf4:	f003 f8d6 	bl	8010fa4 <operator delete(void*)>
 800ddf8:	4620      	mov	r0, r4
 800ddfa:	bd10      	pop	{r4, pc}

0800ddfc <StoreOscServer::StoreOscServer()>:
 800ddfc:	4a02      	ldr	r2, [pc, #8]	; (800de08 <StoreOscServer::StoreOscServer()+0xc>)
 800ddfe:	6002      	str	r2, [r0, #0]
 800de00:	4a02      	ldr	r2, [pc, #8]	; (800de0c <StoreOscServer::StoreOscServer()+0x10>)
 800de02:	6010      	str	r0, [r2, #0]
 800de04:	4770      	bx	lr
 800de06:	bf00      	nop
 800de08:	08014888 	stmdaeq	r1, {r3, r7, fp, lr}
 800de0c:	20001780 	andcs	r1, r0, r0, lsl #15

0800de10 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800de10:	4770      	bx	lr
	...

0800de14 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800de14:	2300      	movs	r3, #0
 800de16:	b507      	push	{r0, r1, r2, lr}
 800de18:	4805      	ldr	r0, [pc, #20]	; (800de30 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800de1a:	9300      	str	r3, [sp, #0]
 800de1c:	460a      	mov	r2, r1
 800de1e:	2320      	movs	r3, #32
 800de20:	210c      	movs	r1, #12
 800de22:	6800      	ldr	r0, [r0, #0]
 800de24:	f7ff fe84 	bl	800db30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800de28:	b003      	add	sp, #12
 800de2a:	f85d fb04 	ldr.w	pc, [sp], #4
 800de2e:	bf00      	nop
 800de30:	20001774 	andcs	r1, r0, r4, ror r7

0800de34 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800de34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de36:	2200      	movs	r2, #0
 800de38:	460b      	mov	r3, r1
 800de3a:	2120      	movs	r1, #32
 800de3c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800de40:	4804      	ldr	r0, [pc, #16]	; (800de54 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800de42:	9100      	str	r1, [sp, #0]
 800de44:	6800      	ldr	r0, [r0, #0]
 800de46:	210c      	movs	r1, #12
 800de48:	f7ff fe32 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800de4c:	b005      	add	sp, #20
 800de4e:	f85d fb04 	ldr.w	pc, [sp], #4
 800de52:	bf00      	nop
 800de54:	20001774 	andcs	r1, r0, r4, ror r7

0800de58 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800de58:	b510      	push	{r4, lr}
 800de5a:	4604      	mov	r4, r0
 800de5c:	f003 f8a2 	bl	8010fa4 <operator delete(void*)>
 800de60:	4620      	mov	r0, r4
 800de62:	bd10      	pop	{r4, pc}

0800de64 <StoreRemoteConfig::StoreRemoteConfig()>:
 800de64:	4a02      	ldr	r2, [pc, #8]	; (800de70 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800de66:	6002      	str	r2, [r0, #0]
 800de68:	4a02      	ldr	r2, [pc, #8]	; (800de74 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800de6a:	6010      	str	r0, [r2, #0]
 800de6c:	4770      	bx	lr
 800de6e:	bf00      	nop
 800de70:	080148a0 	stmdaeq	r1, {r5, r7, fp, lr}
 800de74:	20001784 	andcs	r1, r0, r4, lsl #15

0800de78 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800de78:	4770      	bx	lr

0800de7a <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800de7a:	3804      	subs	r0, #4
 800de7c:	4770      	bx	lr
	...

0800de80 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800de80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de82:	2200      	movs	r2, #0
 800de84:	460b      	mov	r3, r1
 800de86:	2127      	movs	r1, #39	; 0x27
 800de88:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800de8c:	4804      	ldr	r0, [pc, #16]	; (800dea0 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800de8e:	9100      	str	r1, [sp, #0]
 800de90:	6800      	ldr	r0, [r0, #0]
 800de92:	2103      	movs	r1, #3
 800de94:	f7ff fe0c 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800de98:	b005      	add	sp, #20
 800de9a:	f85d fb04 	ldr.w	pc, [sp], #4
 800de9e:	bf00      	nop
 800dea0:	20001774 	andcs	r1, r0, r4, ror r7

0800dea4 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800dea4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dea6:	2304      	movs	r3, #4
 800dea8:	2200      	movs	r2, #0
 800deaa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800deae:	2302      	movs	r3, #2
 800deb0:	4806      	ldr	r0, [pc, #24]	; (800decc <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800deb2:	9300      	str	r3, [sp, #0]
 800deb4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800deb8:	2207      	movs	r2, #7
 800deba:	2103      	movs	r1, #3
 800debc:	6800      	ldr	r0, [r0, #0]
 800debe:	f10d 0316 	add.w	r3, sp, #22
 800dec2:	f7ff fdf5 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dec6:	b007      	add	sp, #28
 800dec8:	f85d fb04 	ldr.w	pc, [sp], #4
 800decc:	20001774 	andcs	r1, r0, r4, ror r7

0800ded0 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800ded0:	f1a0 0004 	sub.w	r0, r0, #4
 800ded4:	e7e6      	b.n	800dea4 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800ded6:	bf00      	nop

0800ded8 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800ded8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800deda:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800dede:	2200      	movs	r2, #0
 800dee0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800dee4:	2301      	movs	r3, #1
 800dee6:	4807      	ldr	r0, [pc, #28]	; (800df04 <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800dee8:	9300      	str	r3, [sp, #0]
 800deea:	f88d 1017 	strb.w	r1, [sp, #23]
 800deee:	2226      	movs	r2, #38	; 0x26
 800def0:	2103      	movs	r1, #3
 800def2:	6800      	ldr	r0, [r0, #0]
 800def4:	f10d 0317 	add.w	r3, sp, #23
 800def8:	f7ff fdda 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800defc:	b007      	add	sp, #28
 800defe:	f85d fb04 	ldr.w	pc, [sp], #4
 800df02:	bf00      	nop
 800df04:	20001774 	andcs	r1, r0, r4, ror r7

0800df08 <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800df08:	f1a0 0004 	sub.w	r0, r0, #4
 800df0c:	e7e4      	b.n	800ded8 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800df0e:	bf00      	nop

0800df10 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800df10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df12:	f44f 7300 	mov.w	r3, #512	; 0x200
 800df16:	2200      	movs	r2, #0
 800df18:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df1c:	2301      	movs	r3, #1
 800df1e:	4807      	ldr	r0, [pc, #28]	; (800df3c <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800df20:	9300      	str	r3, [sp, #0]
 800df22:	f88d 1017 	strb.w	r1, [sp, #23]
 800df26:	2213      	movs	r2, #19
 800df28:	2103      	movs	r1, #3
 800df2a:	6800      	ldr	r0, [r0, #0]
 800df2c:	f10d 0317 	add.w	r3, sp, #23
 800df30:	f7ff fdbe 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800df34:	b007      	add	sp, #28
 800df36:	f85d fb04 	ldr.w	pc, [sp], #4
 800df3a:	bf00      	nop
 800df3c:	20001774 	andcs	r1, r0, r4, ror r7

0800df40 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800df40:	f1a0 0004 	sub.w	r0, r0, #4
 800df44:	e7e4      	b.n	800df10 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800df46:	bf00      	nop

0800df48 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800df48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df4a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800df4e:	2200      	movs	r2, #0
 800df50:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df54:	2302      	movs	r3, #2
 800df56:	4807      	ldr	r0, [pc, #28]	; (800df74 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800df58:	9300      	str	r3, [sp, #0]
 800df5a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800df5e:	2211      	movs	r2, #17
 800df60:	2103      	movs	r1, #3
 800df62:	6800      	ldr	r0, [r0, #0]
 800df64:	f10d 0316 	add.w	r3, sp, #22
 800df68:	f7ff fda2 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800df6c:	b007      	add	sp, #28
 800df6e:	f85d fb04 	ldr.w	pc, [sp], #4
 800df72:	bf00      	nop
 800df74:	20001774 	andcs	r1, r0, r4, ror r7

0800df78 <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800df78:	f1a0 0004 	sub.w	r0, r0, #4
 800df7c:	e7e4      	b.n	800df48 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800df7e:	bf00      	nop

0800df80 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800df80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df82:	2302      	movs	r3, #2
 800df84:	2200      	movs	r2, #0
 800df86:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df8a:	4807      	ldr	r0, [pc, #28]	; (800dfa8 <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800df8c:	9300      	str	r3, [sp, #0]
 800df8e:	f8ad 1016 	strh.w	r1, [sp, #22]
 800df92:	2205      	movs	r2, #5
 800df94:	2103      	movs	r1, #3
 800df96:	6800      	ldr	r0, [r0, #0]
 800df98:	f10d 0316 	add.w	r3, sp, #22
 800df9c:	f7ff fd88 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dfa0:	b007      	add	sp, #28
 800dfa2:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfa6:	bf00      	nop
 800dfa8:	20001774 	andcs	r1, r0, r4, ror r7

0800dfac <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800dfac:	f1a0 0004 	sub.w	r0, r0, #4
 800dfb0:	e7e6      	b.n	800df80 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800dfb2:	bf00      	nop

0800dfb4 <StoreWS28xxDmx::SaveType(unsigned char)>:
 800dfb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dfb6:	2301      	movs	r3, #1
 800dfb8:	2200      	movs	r2, #0
 800dfba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800dfbe:	4807      	ldr	r0, [pc, #28]	; (800dfdc <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800dfc0:	9300      	str	r3, [sp, #0]
 800dfc2:	f88d 1017 	strb.w	r1, [sp, #23]
 800dfc6:	2204      	movs	r2, #4
 800dfc8:	2103      	movs	r1, #3
 800dfca:	6800      	ldr	r0, [r0, #0]
 800dfcc:	f10d 0317 	add.w	r3, sp, #23
 800dfd0:	f7ff fd6e 	bl	800dab0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dfd4:	b007      	add	sp, #28
 800dfd6:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfda:	bf00      	nop
 800dfdc:	20001774 	andcs	r1, r0, r4, ror r7

0800dfe0 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800dfe0:	f1a0 0004 	sub.w	r0, r0, #4
 800dfe4:	e7e6      	b.n	800dfb4 <StoreWS28xxDmx::SaveType(unsigned char)>
 800dfe6:	bf00      	nop

0800dfe8 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800dfe8:	b510      	push	{r4, lr}
 800dfea:	4604      	mov	r4, r0
 800dfec:	f002 ffda 	bl	8010fa4 <operator delete(void*)>
 800dff0:	4620      	mov	r0, r4
 800dff2:	bd10      	pop	{r4, pc}

0800dff4 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800dff4:	f1a0 0004 	sub.w	r0, r0, #4
 800dff8:	e7f6      	b.n	800dfe8 <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800dffc <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800dffc:	2300      	movs	r3, #0
 800dffe:	b507      	push	{r0, r1, r2, lr}
 800e000:	4805      	ldr	r0, [pc, #20]	; (800e018 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800e002:	9300      	str	r3, [sp, #0]
 800e004:	460a      	mov	r2, r1
 800e006:	2327      	movs	r3, #39	; 0x27
 800e008:	2103      	movs	r1, #3
 800e00a:	6800      	ldr	r0, [r0, #0]
 800e00c:	f7ff fd90 	bl	800db30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e010:	b003      	add	sp, #12
 800e012:	f85d fb04 	ldr.w	pc, [sp], #4
 800e016:	bf00      	nop
 800e018:	20001774 	andcs	r1, r0, r4, ror r7

0800e01c <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800e01c:	4a03      	ldr	r2, [pc, #12]	; (800e02c <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800e01e:	6002      	str	r2, [r0, #0]
 800e020:	3230      	adds	r2, #48	; 0x30
 800e022:	6042      	str	r2, [r0, #4]
 800e024:	4a02      	ldr	r2, [pc, #8]	; (800e030 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800e026:	6010      	str	r0, [r2, #0]
 800e028:	4770      	bx	lr
 800e02a:	bf00      	nop
 800e02c:	080148b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, lr}
 800e030:	20001788 	andcs	r1, r0, r8, lsl #15

0800e034 <FlashRom::FlashRom()>:
 800e034:	4b07      	ldr	r3, [pc, #28]	; (800e054 <FlashRom::FlashRom()+0x20>)
 800e036:	b510      	push	{r4, lr}
 800e038:	6018      	str	r0, [r3, #0]
 800e03a:	2301      	movs	r3, #1
 800e03c:	4604      	mov	r4, r0
 800e03e:	7003      	strb	r3, [r0, #0]
 800e040:	4b05      	ldr	r3, [pc, #20]	; (800e058 <FlashRom::FlashRom()+0x24>)
 800e042:	4906      	ldr	r1, [pc, #24]	; (800e05c <FlashRom::FlashRom()+0x28>)
 800e044:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e048:	4805      	ldr	r0, [pc, #20]	; (800e060 <FlashRom::FlashRom()+0x2c>)
 800e04a:	029a      	lsls	r2, r3, #10
 800e04c:	f7fb fab0 	bl	80095b0 <printf>
 800e050:	4620      	mov	r0, r4
 800e052:	bd10      	pop	{r4, pc}
 800e054:	2000178c 	andcs	r1, r0, ip, lsl #15
 800e058:	1ffff700 	svcne	0x00fff700
 800e05c:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 800e060:	08014908 	stmdaeq	r1, {r3, r8, fp, lr}

0800e064 <FlashRom::GetSize() const>:
 800e064:	4b02      	ldr	r3, [pc, #8]	; (800e070 <FlashRom::GetSize() const+0xc>)
 800e066:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800e06a:	0280      	lsls	r0, r0, #10
 800e06c:	4770      	bx	lr
 800e06e:	bf00      	nop
 800e070:	1ffff700 	svcne	0x00fff700

0800e074 <FlashRom::GetSectorSize() const>:
 800e074:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800e078:	4770      	bx	lr

0800e07a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800e07a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e07e:	441a      	add	r2, r3
 800e080:	4293      	cmp	r3, r2
 800e082:	d004      	beq.n	800e08e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800e084:	f851 0b04 	ldr.w	r0, [r1], #4
 800e088:	f843 0b04 	str.w	r0, [r3], #4
 800e08c:	e7f8      	b.n	800e080 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800e08e:	2200      	movs	r2, #0
 800e090:	9b00      	ldr	r3, [sp, #0]
 800e092:	2001      	movs	r0, #1
 800e094:	601a      	str	r2, [r3, #0]
 800e096:	4770      	bx	lr

0800e098 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800e098:	2000      	movs	r0, #0
 800e09a:	b538      	push	{r3, r4, r5, lr}
 800e09c:	4c47      	ldr	r4, [pc, #284]	; (800e1bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800e09e:	6018      	str	r0, [r3, #0]
 800e0a0:	6823      	ldr	r3, [r4, #0]
 800e0a2:	2b04      	cmp	r3, #4
 800e0a4:	f200 8082 	bhi.w	800e1ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e0a8:	e8df f003 	tbb	[pc, r3]
 800e0ac:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800e0b0:	4b430080 	blmi	90ce2b8 <__exidx_end+0x10b91e4>
 800e0b4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e0b8:	6019      	str	r1, [r3, #0]
 800e0ba:	4b42      	ldr	r3, [pc, #264]	; (800e1c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e0bc:	601a      	str	r2, [r3, #0]
 800e0be:	4b42      	ldr	r3, [pc, #264]	; (800e1c8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800e0c0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e0c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e0c8:	4b40      	ldr	r3, [pc, #256]	; (800e1cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e0ca:	d807      	bhi.n	800e0dc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800e0cc:	2201      	movs	r2, #1
 800e0ce:	701a      	strb	r2, [r3, #0]
 800e0d0:	f003 fa6e 	bl	80115b0 <fmc_bank0_unlock>
 800e0d4:	2301      	movs	r3, #1
 800e0d6:	6023      	str	r3, [r4, #0]
 800e0d8:	2000      	movs	r0, #0
 800e0da:	e026      	b.n	800e12a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e0dc:	4a3c      	ldr	r2, [pc, #240]	; (800e1d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800e0de:	4291      	cmp	r1, r2
 800e0e0:	d3f4      	bcc.n	800e0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800e0e2:	2200      	movs	r2, #0
 800e0e4:	701a      	strb	r2, [r3, #0]
 800e0e6:	f003 fa71 	bl	80115cc <fmc_bank1_unlock>
 800e0ea:	e7f3      	b.n	800e0d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e0ec:	4d37      	ldr	r5, [pc, #220]	; (800e1cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e0ee:	782b      	ldrb	r3, [r5, #0]
 800e0f0:	b15b      	cbz	r3, 800e10a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800e0f2:	f003 fa89 	bl	8011608 <fmc_bank0_state_get>
 800e0f6:	2801      	cmp	r0, #1
 800e0f8:	d0ee      	beq.n	800e0d8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800e0fa:	7829      	ldrb	r1, [r5, #0]
 800e0fc:	4b35      	ldr	r3, [pc, #212]	; (800e1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e0fe:	b939      	cbnz	r1, 800e110 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800e100:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e102:	f022 0202 	bic.w	r2, r2, #2
 800e106:	651a      	str	r2, [r3, #80]	; 0x50
 800e108:	e006      	b.n	800e118 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800e10a:	f003 fa91 	bl	8011630 <fmc_bank1_state_get>
 800e10e:	e7f2      	b.n	800e0f6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800e110:	691a      	ldr	r2, [r3, #16]
 800e112:	f022 0202 	bic.w	r2, r2, #2
 800e116:	611a      	str	r2, [r3, #16]
 800e118:	4b2a      	ldr	r3, [pc, #168]	; (800e1c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e11a:	681b      	ldr	r3, [r3, #0]
 800e11c:	b94b      	cbnz	r3, 800e132 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800e11e:	b129      	cbz	r1, 800e12c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800e120:	f003 fa62 	bl	80115e8 <fmc_bank0_lock>
 800e124:	2300      	movs	r3, #0
 800e126:	2001      	movs	r0, #1
 800e128:	6023      	str	r3, [r4, #0]
 800e12a:	bd38      	pop	{r3, r4, r5, pc}
 800e12c:	f003 fa64 	bl	80115f8 <fmc_bank1_lock>
 800e130:	e7f8      	b.n	800e124 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800e132:	2302      	movs	r3, #2
 800e134:	e7cf      	b.n	800e0d6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800e136:	4923      	ldr	r1, [pc, #140]	; (800e1c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e138:	680b      	ldr	r3, [r1, #0]
 800e13a:	2b00      	cmp	r3, #0
 800e13c:	d0ca      	beq.n	800e0d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e13e:	4b23      	ldr	r3, [pc, #140]	; (800e1cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e140:	4a1f      	ldr	r2, [pc, #124]	; (800e1c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800e142:	7818      	ldrb	r0, [r3, #0]
 800e144:	4b23      	ldr	r3, [pc, #140]	; (800e1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e146:	b190      	cbz	r0, 800e16e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800e148:	6918      	ldr	r0, [r3, #16]
 800e14a:	f040 0002 	orr.w	r0, r0, #2
 800e14e:	6118      	str	r0, [r3, #16]
 800e150:	6810      	ldr	r0, [r2, #0]
 800e152:	6158      	str	r0, [r3, #20]
 800e154:	6918      	ldr	r0, [r3, #16]
 800e156:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800e15a:	6118      	str	r0, [r3, #16]
 800e15c:	680b      	ldr	r3, [r1, #0]
 800e15e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800e162:	600b      	str	r3, [r1, #0]
 800e164:	6813      	ldr	r3, [r2, #0]
 800e166:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800e16a:	6013      	str	r3, [r2, #0]
 800e16c:	e7b2      	b.n	800e0d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e16e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800e170:	f040 0002 	orr.w	r0, r0, #2
 800e174:	6518      	str	r0, [r3, #80]	; 0x50
 800e176:	6810      	ldr	r0, [r2, #0]
 800e178:	6558      	str	r0, [r3, #84]	; 0x54
 800e17a:	69dd      	ldr	r5, [r3, #28]
 800e17c:	07ad      	lsls	r5, r5, #30
 800e17e:	bf48      	it	mi
 800e180:	6158      	strmi	r0, [r3, #20]
 800e182:	4814      	ldr	r0, [pc, #80]	; (800e1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e184:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e186:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e18a:	6503      	str	r3, [r0, #80]	; 0x50
 800e18c:	680b      	ldr	r3, [r1, #0]
 800e18e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800e192:	600b      	str	r3, [r1, #0]
 800e194:	6813      	ldr	r3, [r2, #0]
 800e196:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e19a:	e7e6      	b.n	800e16a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800e19c:	4b0b      	ldr	r3, [pc, #44]	; (800e1cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e19e:	781a      	ldrb	r2, [r3, #0]
 800e1a0:	4b0c      	ldr	r3, [pc, #48]	; (800e1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e1a2:	b132      	cbz	r2, 800e1b2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800e1a4:	691a      	ldr	r2, [r3, #16]
 800e1a6:	f022 0201 	bic.w	r2, r2, #1
 800e1aa:	611a      	str	r2, [r3, #16]
 800e1ac:	2000      	movs	r0, #0
 800e1ae:	6020      	str	r0, [r4, #0]
 800e1b0:	e7bb      	b.n	800e12a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e1b2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e1b4:	f022 0201 	bic.w	r2, r2, #1
 800e1b8:	651a      	str	r2, [r3, #80]	; 0x50
 800e1ba:	e7f7      	b.n	800e1ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e1bc:	20001794 	mulcs	r0, r4, r7
 800e1c0:	20001798 	mulcs	r0, r8, r7
 800e1c4:	200017a4 	andcs	r1, r0, r4, lsr #15
 800e1c8:	1ffff700 	svcne	0x00fff700
 800e1cc:	200017a0 	andcs	r1, r0, r0, lsr #15
 800e1d0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e1d4:	40022000 	andmi	r2, r2, r0

0800e1d8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800e1d8:	b570      	push	{r4, r5, r6, lr}
 800e1da:	2400      	movs	r4, #0
 800e1dc:	9804      	ldr	r0, [sp, #16]
 800e1de:	6004      	str	r4, [r0, #0]
 800e1e0:	4c48      	ldr	r4, [pc, #288]	; (800e304 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800e1e2:	6820      	ldr	r0, [r4, #0]
 800e1e4:	2804      	cmp	r0, #4
 800e1e6:	d848      	bhi.n	800e27a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800e1e8:	e8df f000 	tbb	[pc, r0]
 800e1ec:	22847c03 	addcs	r7, r4, #768	; 0x300
 800e1f0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800e1f4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e1f8:	6001      	str	r1, [r0, #0]
 800e1fa:	4844      	ldr	r0, [pc, #272]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e1fc:	6003      	str	r3, [r0, #0]
 800e1fe:	4b44      	ldr	r3, [pc, #272]	; (800e310 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e200:	601a      	str	r2, [r3, #0]
 800e202:	4b44      	ldr	r3, [pc, #272]	; (800e314 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800e204:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e208:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e20c:	4b42      	ldr	r3, [pc, #264]	; (800e318 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e20e:	d807      	bhi.n	800e220 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800e210:	2201      	movs	r2, #1
 800e212:	701a      	strb	r2, [r3, #0]
 800e214:	f003 f9cc 	bl	80115b0 <fmc_bank0_unlock>
 800e218:	2303      	movs	r3, #3
 800e21a:	6023      	str	r3, [r4, #0]
 800e21c:	2000      	movs	r0, #0
 800e21e:	e026      	b.n	800e26e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800e220:	4a3e      	ldr	r2, [pc, #248]	; (800e31c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800e222:	4291      	cmp	r1, r2
 800e224:	d3f4      	bcc.n	800e210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800e226:	2200      	movs	r2, #0
 800e228:	701a      	strb	r2, [r3, #0]
 800e22a:	f003 f9cf 	bl	80115cc <fmc_bank1_unlock>
 800e22e:	e7f3      	b.n	800e218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e230:	4d39      	ldr	r5, [pc, #228]	; (800e318 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e232:	782b      	ldrb	r3, [r5, #0]
 800e234:	b15b      	cbz	r3, 800e24e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800e236:	f003 f9e7 	bl	8011608 <fmc_bank0_state_get>
 800e23a:	2801      	cmp	r0, #1
 800e23c:	d0ee      	beq.n	800e21c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800e23e:	7829      	ldrb	r1, [r5, #0]
 800e240:	4b37      	ldr	r3, [pc, #220]	; (800e320 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e242:	b939      	cbnz	r1, 800e254 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800e244:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e246:	f022 0201 	bic.w	r2, r2, #1
 800e24a:	651a      	str	r2, [r3, #80]	; 0x50
 800e24c:	e006      	b.n	800e25c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800e24e:	f003 f9ef 	bl	8011630 <fmc_bank1_state_get>
 800e252:	e7f2      	b.n	800e23a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800e254:	691a      	ldr	r2, [r3, #16]
 800e256:	f022 0201 	bic.w	r2, r2, #1
 800e25a:	611a      	str	r2, [r3, #16]
 800e25c:	4b2c      	ldr	r3, [pc, #176]	; (800e310 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e25e:	681b      	ldr	r3, [r3, #0]
 800e260:	b94b      	cbnz	r3, 800e276 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800e262:	b129      	cbz	r1, 800e270 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800e264:	f003 f9c0 	bl	80115e8 <fmc_bank0_lock>
 800e268:	2300      	movs	r3, #0
 800e26a:	2001      	movs	r0, #1
 800e26c:	6023      	str	r3, [r4, #0]
 800e26e:	bd70      	pop	{r4, r5, r6, pc}
 800e270:	f003 f9c2 	bl	80115f8 <fmc_bank1_lock>
 800e274:	e7f8      	b.n	800e268 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800e276:	2304      	movs	r3, #4
 800e278:	e7cf      	b.n	800e21a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800e27a:	4a25      	ldr	r2, [pc, #148]	; (800e310 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800e27c:	6813      	ldr	r3, [r2, #0]
 800e27e:	2b03      	cmp	r3, #3
 800e280:	d91a      	bls.n	800e2b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800e282:	4b25      	ldr	r3, [pc, #148]	; (800e318 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e284:	7819      	ldrb	r1, [r3, #0]
 800e286:	4b26      	ldr	r3, [pc, #152]	; (800e320 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e288:	b189      	cbz	r1, 800e2ae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800e28a:	6919      	ldr	r1, [r3, #16]
 800e28c:	f041 0101 	orr.w	r1, r1, #1
 800e290:	6119      	str	r1, [r3, #16]
 800e292:	4d1e      	ldr	r5, [pc, #120]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e294:	481c      	ldr	r0, [pc, #112]	; (800e308 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800e296:	6829      	ldr	r1, [r5, #0]
 800e298:	6803      	ldr	r3, [r0, #0]
 800e29a:	f851 6b04 	ldr.w	r6, [r1], #4
 800e29e:	f843 6b04 	str.w	r6, [r3], #4
 800e2a2:	6003      	str	r3, [r0, #0]
 800e2a4:	6813      	ldr	r3, [r2, #0]
 800e2a6:	6029      	str	r1, [r5, #0]
 800e2a8:	3b04      	subs	r3, #4
 800e2aa:	6013      	str	r3, [r2, #0]
 800e2ac:	e7b4      	b.n	800e218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e2ae:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800e2b0:	f041 0101 	orr.w	r1, r1, #1
 800e2b4:	6519      	str	r1, [r3, #80]	; 0x50
 800e2b6:	e7ec      	b.n	800e292 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800e2b8:	2b00      	cmp	r3, #0
 800e2ba:	d0ad      	beq.n	800e218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e2bc:	4b16      	ldr	r3, [pc, #88]	; (800e318 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e2be:	781a      	ldrb	r2, [r3, #0]
 800e2c0:	4b17      	ldr	r3, [pc, #92]	; (800e320 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e2c2:	b152      	cbz	r2, 800e2da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800e2c4:	691a      	ldr	r2, [r3, #16]
 800e2c6:	f042 0201 	orr.w	r2, r2, #1
 800e2ca:	611a      	str	r2, [r3, #16]
 800e2cc:	4a0f      	ldr	r2, [pc, #60]	; (800e30c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800e2ce:	4b0e      	ldr	r3, [pc, #56]	; (800e308 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800e2d0:	6812      	ldr	r2, [r2, #0]
 800e2d2:	681b      	ldr	r3, [r3, #0]
 800e2d4:	6812      	ldr	r2, [r2, #0]
 800e2d6:	601a      	str	r2, [r3, #0]
 800e2d8:	e79e      	b.n	800e218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800e2da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e2dc:	f042 0201 	orr.w	r2, r2, #1
 800e2e0:	651a      	str	r2, [r3, #80]	; 0x50
 800e2e2:	e7f3      	b.n	800e2cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800e2e4:	4b0c      	ldr	r3, [pc, #48]	; (800e318 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800e2e6:	781a      	ldrb	r2, [r3, #0]
 800e2e8:	4b0d      	ldr	r3, [pc, #52]	; (800e320 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800e2ea:	b132      	cbz	r2, 800e2fa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800e2ec:	691a      	ldr	r2, [r3, #16]
 800e2ee:	f022 0202 	bic.w	r2, r2, #2
 800e2f2:	611a      	str	r2, [r3, #16]
 800e2f4:	2000      	movs	r0, #0
 800e2f6:	6020      	str	r0, [r4, #0]
 800e2f8:	e7b9      	b.n	800e26e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800e2fa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e2fc:	f022 0202 	bic.w	r2, r2, #2
 800e300:	651a      	str	r2, [r3, #80]	; 0x50
 800e302:	e7f7      	b.n	800e2f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800e304:	20001794 	mulcs	r0, r4, r7
 800e308:	20001790 	mulcs	r0, r0, r7
 800e30c:	2000179c 	mulcs	r0, ip, r7
 800e310:	200017a4 	andcs	r1, r0, r4, lsr #15
 800e314:	1ffff700 	svcne	0x00fff700
 800e318:	200017a0 	andcs	r1, r0, r0, lsr #15
 800e31c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e320:	40022000 	andmi	r2, r2, r0

0800e324 <net_timers_run>:
 800e324:	4b05      	ldr	r3, [pc, #20]	; (800e33c <net_timers_run+0x18>)
 800e326:	4a06      	ldr	r2, [pc, #24]	; (800e340 <net_timers_run+0x1c>)
 800e328:	681b      	ldr	r3, [r3, #0]
 800e32a:	6811      	ldr	r1, [r2, #0]
 800e32c:	4299      	cmp	r1, r3
 800e32e:	d803      	bhi.n	800e338 <net_timers_run+0x14>
 800e330:	3364      	adds	r3, #100	; 0x64
 800e332:	6013      	str	r3, [r2, #0]
 800e334:	f001 be98 	b.w	8010068 <igmp_timer>
 800e338:	4770      	bx	lr
 800e33a:	bf00      	nop
 800e33c:	200097a4 	andcs	r9, r0, r4, lsr #15
 800e340:	200017c0 	andcs	r1, r0, r0, asr #15

0800e344 <rfc3927>:
 800e344:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e348:	4605      	mov	r5, r0
 800e34a:	26ff      	movs	r6, #255	; 0xff
 800e34c:	4b18      	ldr	r3, [pc, #96]	; (800e3b0 <rfc3927+0x6c>)
 800e34e:	4f19      	ldr	r7, [pc, #100]	; (800e3b4 <rfc3927+0x70>)
 800e350:	791a      	ldrb	r2, [r3, #4]
 800e352:	78dc      	ldrb	r4, [r3, #3]
 800e354:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e3b8 <rfc3927+0x74>
 800e358:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800e35c:	f8d7 9000 	ldr.w	r9, [r7]
 800e360:	f8df b058 	ldr.w	fp, [pc, #88]	; 800e3bc <rfc3927+0x78>
 800e364:	f8df a058 	ldr.w	sl, [pc, #88]	; 800e3c0 <rfc3927+0x7c>
 800e368:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800e36c:	4659      	mov	r1, fp
 800e36e:	4620      	mov	r0, r4
 800e370:	f001 fbc8 	bl	800fb04 <arp_cache_lookup>
 800e374:	b938      	cbnz	r0, 800e386 <rfc3927+0x42>
 800e376:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e37a:	2001      	movs	r0, #1
 800e37c:	602c      	str	r4, [r5, #0]
 800e37e:	60ac      	str	r4, [r5, #8]
 800e380:	606b      	str	r3, [r5, #4]
 800e382:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e386:	ba24      	rev	r4, r4
 800e388:	3401      	adds	r4, #1
 800e38a:	3e01      	subs	r6, #1
 800e38c:	ba24      	rev	r4, r4
 800e38e:	b2b6      	uxth	r6, r6
 800e390:	4554      	cmp	r4, sl
 800e392:	bf08      	it	eq
 800e394:	4644      	moveq	r4, r8
 800e396:	b12e      	cbz	r6, 800e3a4 <rfc3927+0x60>
 800e398:	683b      	ldr	r3, [r7, #0]
 800e39a:	eba3 0309 	sub.w	r3, r3, r9
 800e39e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800e3a2:	d3e3      	bcc.n	800e36c <rfc3927+0x28>
 800e3a4:	2000      	movs	r0, #0
 800e3a6:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800e3aa:	6028      	str	r0, [r5, #0]
 800e3ac:	e7e9      	b.n	800e382 <rfc3927+0x3e>
 800e3ae:	bf00      	nop
 800e3b0:	200017c4 	andcs	r1, r0, r4, asr #15
 800e3b4:	200097a4 	andcs	r9, r0, r4, lsr #15
 800e3b8:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800e3bc:	200017cc 	andcs	r1, r0, ip, asr #15
 800e3c0:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800e3c4 <_init_tcb>:
 800e3c4:	b510      	push	{r4, lr}
 800e3c6:	4603      	mov	r3, r0
 800e3c8:	2400      	movs	r4, #0
 800e3ca:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800e3ce:	4293      	cmp	r3, r2
 800e3d0:	d10d      	bne.n	800e3ee <_init_tcb+0x2a>
 800e3d2:	4b08      	ldr	r3, [pc, #32]	; (800e3f4 <_init_tcb+0x30>)
 800e3d4:	f640 3268 	movw	r2, #2920	; 0xb68
 800e3d8:	681b      	ldr	r3, [r3, #0]
 800e3da:	8702      	strh	r2, [r0, #56]	; 0x38
 800e3dc:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e3e0:	6283      	str	r3, [r0, #40]	; 0x28
 800e3e2:	6243      	str	r3, [r0, #36]	; 0x24
 800e3e4:	2301      	movs	r3, #1
 800e3e6:	8001      	strh	r1, [r0, #0]
 800e3e8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800e3ec:	bd10      	pop	{r4, pc}
 800e3ee:	f803 4b01 	strb.w	r4, [r3], #1
 800e3f2:	e7ec      	b.n	800e3ce <_init_tcb+0xa>
 800e3f4:	200097a4 	andcs	r9, r0, r4, lsr #15

0800e3f8 <memcpy.isra.0>:
 800e3f8:	3801      	subs	r0, #1
 800e3fa:	440a      	add	r2, r1
 800e3fc:	4291      	cmp	r1, r2
 800e3fe:	d100      	bne.n	800e402 <memcpy.isra.0+0xa>
 800e400:	4770      	bx	lr
 800e402:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e406:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e40a:	e7f7      	b.n	800e3fc <memcpy.isra.0+0x4>

0800e40c <_bswap32>:
 800e40c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e40e:	2204      	movs	r2, #4
 800e410:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800e414:	4629      	mov	r1, r5
 800e416:	4604      	mov	r4, r0
 800e418:	eb0d 0002 	add.w	r0, sp, r2
 800e41c:	f7ff ffec 	bl	800e3f8 <memcpy.isra.0>
 800e420:	2204      	movs	r2, #4
 800e422:	9b01      	ldr	r3, [sp, #4]
 800e424:	eb0d 0102 	add.w	r1, sp, r2
 800e428:	ba1b      	rev	r3, r3
 800e42a:	4628      	mov	r0, r5
 800e42c:	9301      	str	r3, [sp, #4]
 800e42e:	f7ff ffe3 	bl	800e3f8 <memcpy.isra.0>
 800e432:	2204      	movs	r2, #4
 800e434:	3426      	adds	r4, #38	; 0x26
 800e436:	eb0d 0002 	add.w	r0, sp, r2
 800e43a:	4621      	mov	r1, r4
 800e43c:	f7ff ffdc 	bl	800e3f8 <memcpy.isra.0>
 800e440:	2204      	movs	r2, #4
 800e442:	9b01      	ldr	r3, [sp, #4]
 800e444:	4620      	mov	r0, r4
 800e446:	ba1b      	rev	r3, r3
 800e448:	eb0d 0102 	add.w	r1, sp, r2
 800e44c:	9301      	str	r3, [sp, #4]
 800e44e:	f7ff ffd3 	bl	800e3f8 <memcpy.isra.0>
 800e452:	b003      	add	sp, #12
 800e454:	bd30      	pop	{r4, r5, pc}
	...

0800e458 <_tcp_send_package>:
 800e458:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e45c:	7a0b      	ldrb	r3, [r1, #8]
 800e45e:	4605      	mov	r5, r0
 800e460:	f013 0f02 	tst.w	r3, #2
 800e464:	bf0c      	ite	eq
 800e466:	f04f 0905 	moveq.w	r9, #5
 800e46a:	f04f 0906 	movne.w	r9, #6
 800e46e:	f04f 0800 	mov.w	r8, #0
 800e472:	4c4b      	ldr	r4, [pc, #300]	; (800e5a0 <_tcp_send_package+0x148>)
 800e474:	460f      	mov	r7, r1
 800e476:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800e478:	f100 0108 	add.w	r1, r0, #8
 800e47c:	2206      	movs	r2, #6
 800e47e:	4620      	mov	r0, r4
 800e480:	f7ff ffba 	bl	800e3f8 <memcpy.isra.0>
 800e484:	4a47      	ldr	r2, [pc, #284]	; (800e5a4 <_tcp_send_package+0x14c>)
 800e486:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800e48a:	8813      	ldrh	r3, [r2, #0]
 800e48c:	b2b6      	uxth	r6, r6
 800e48e:	1c59      	adds	r1, r3, #1
 800e490:	8263      	strh	r3, [r4, #18]
 800e492:	f105 0a04 	add.w	sl, r5, #4
 800e496:	f106 0314 	add.w	r3, r6, #20
 800e49a:	ba5b      	rev16	r3, r3
 800e49c:	8011      	strh	r1, [r2, #0]
 800e49e:	f104 001e 	add.w	r0, r4, #30
 800e4a2:	2204      	movs	r2, #4
 800e4a4:	4651      	mov	r1, sl
 800e4a6:	8223      	strh	r3, [r4, #16]
 800e4a8:	f7ff ffa6 	bl	800e3f8 <memcpy.isra.0>
 800e4ac:	2114      	movs	r1, #20
 800e4ae:	f104 000e 	add.w	r0, r4, #14
 800e4b2:	f884 8018 	strb.w	r8, [r4, #24]
 800e4b6:	f884 8019 	strb.w	r8, [r4, #25]
 800e4ba:	f001 fe68 	bl	801018e <net_chksum>
 800e4be:	882b      	ldrh	r3, [r5, #0]
 800e4c0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800e4c4:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4c6:	886b      	ldrh	r3, [r5, #2]
 800e4c8:	8320      	strh	r0, [r4, #24]
 800e4ca:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e4cc:	683b      	ldr	r3, [r7, #0]
 800e4ce:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800e4d0:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800e4d4:	687b      	ldr	r3, [r7, #4]
 800e4d6:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800e4da:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800e4de:	7a3b      	ldrb	r3, [r7, #8]
 800e4e0:	8622      	strh	r2, [r4, #48]	; 0x30
 800e4e2:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800e4e6:	079b      	lsls	r3, r3, #30
 800e4e8:	bf48      	it	mi
 800e4ea:	2302      	movmi	r3, #2
 800e4ec:	8baa      	ldrh	r2, [r5, #28]
 800e4ee:	bf44      	itt	mi
 800e4f0:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800e4f4:	2304      	movmi	r3, #4
 800e4f6:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e4f8:	bf41      	itttt	mi
 800e4fa:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800e4fe:	4622      	movmi	r2, r4
 800e500:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800e504:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800e508:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e50a:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800e50e:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800e512:	bf58      	it	pl
 800e514:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800e518:	2b00      	cmp	r3, #0
 800e51a:	d13f      	bne.n	800e59c <_tcp_send_package+0x144>
 800e51c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800e51e:	4820      	ldr	r0, [pc, #128]	; (800e5a0 <_tcp_send_package+0x148>)
 800e520:	ba5b      	rev16	r3, r3
 800e522:	8463      	strh	r3, [r4, #34]	; 0x22
 800e524:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800e526:	ba5b      	rev16	r3, r3
 800e528:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e52a:	f7ff ff6f 	bl	800e40c <_bswap32>
 800e52e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e530:	a801      	add	r0, sp, #4
 800e532:	ba5b      	rev16	r3, r3
 800e534:	8623      	strh	r3, [r4, #48]	; 0x30
 800e536:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e538:	220c      	movs	r2, #12
 800e53a:	ba5b      	rev16	r3, r3
 800e53c:	491a      	ldr	r1, [pc, #104]	; (800e5a8 <_tcp_send_package+0x150>)
 800e53e:	86a3      	strh	r3, [r4, #52]	; 0x34
 800e540:	f7ff ff5a 	bl	800e3f8 <memcpy.isra.0>
 800e544:	2204      	movs	r2, #4
 800e546:	4919      	ldr	r1, [pc, #100]	; (800e5ac <_tcp_send_package+0x154>)
 800e548:	4817      	ldr	r0, [pc, #92]	; (800e5a8 <_tcp_send_package+0x150>)
 800e54a:	f7ff ff55 	bl	800e3f8 <memcpy.isra.0>
 800e54e:	2204      	movs	r2, #4
 800e550:	4651      	mov	r1, sl
 800e552:	4817      	ldr	r0, [pc, #92]	; (800e5b0 <_tcp_send_package+0x158>)
 800e554:	f7ff ff50 	bl	800e3f8 <memcpy.isra.0>
 800e558:	2300      	movs	r3, #0
 800e55a:	77a3      	strb	r3, [r4, #30]
 800e55c:	2306      	movs	r3, #6
 800e55e:	f106 010c 	add.w	r1, r6, #12
 800e562:	77e3      	strb	r3, [r4, #31]
 800e564:	4810      	ldr	r0, [pc, #64]	; (800e5a8 <_tcp_send_package+0x150>)
 800e566:	ba73      	rev16	r3, r6
 800e568:	8423      	strh	r3, [r4, #32]
 800e56a:	f001 fe10 	bl	801018e <net_chksum>
 800e56e:	a901      	add	r1, sp, #4
 800e570:	4605      	mov	r5, r0
 800e572:	220c      	movs	r2, #12
 800e574:	480c      	ldr	r0, [pc, #48]	; (800e5a8 <_tcp_send_package+0x150>)
 800e576:	f7ff ff3f 	bl	800e3f8 <memcpy.isra.0>
 800e57a:	4809      	ldr	r0, [pc, #36]	; (800e5a0 <_tcp_send_package+0x148>)
 800e57c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800e580:	8665      	strh	r5, [r4, #50]	; 0x32
 800e582:	b004      	add	sp, #16
 800e584:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e588:	f003 bcb8 	b.w	8011efc <emac_eth_send>
 800e58c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800e58e:	5cc9      	ldrb	r1, [r1, r3]
 800e590:	54d1      	strb	r1, [r2, r3]
 800e592:	3301      	adds	r3, #1
 800e594:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800e596:	4299      	cmp	r1, r3
 800e598:	d8f8      	bhi.n	800e58c <_tcp_send_package+0x134>
 800e59a:	e7bf      	b.n	800e51c <_tcp_send_package+0xc4>
 800e59c:	2300      	movs	r3, #0
 800e59e:	e7f9      	b.n	800e594 <_tcp_send_package+0x13c>
 800e5a0:	20002388 	andcs	r2, r0, r8, lsl #7
 800e5a4:	200017d2 	ldrdcs	r1, [r0], -r2
 800e5a8:	2000239e 	mulcs	r0, lr, r3
 800e5ac:	200017a8 	andcs	r1, r0, r8, lsr #15
 800e5b0:	200023a2 	andcs	r2, r0, r2, lsr #7

0800e5b4 <_send_reset>:
 800e5b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e5b6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800e5ba:	4604      	mov	r4, r0
 800e5bc:	075a      	lsls	r2, r3, #29
 800e5be:	460e      	mov	r6, r1
 800e5c0:	d421      	bmi.n	800e606 <_send_reset+0x52>
 800e5c2:	2204      	movs	r2, #4
 800e5c4:	f013 0310 	ands.w	r3, r3, #16
 800e5c8:	f88d 200c 	strb.w	r2, [sp, #12]
 800e5cc:	d01d      	beq.n	800e60a <_send_reset+0x56>
 800e5ce:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800e5d2:	4668      	mov	r0, sp
 800e5d4:	f7ff ff10 	bl	800e3f8 <memcpy.isra.0>
 800e5d8:	9b00      	ldr	r3, [sp, #0]
 800e5da:	9301      	str	r3, [sp, #4]
 800e5dc:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800e5e0:	4668      	mov	r0, sp
 800e5e2:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800e5e6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800e5ea:	07db      	lsls	r3, r3, #31
 800e5ec:	f04f 0204 	mov.w	r2, #4
 800e5f0:	bf48      	it	mi
 800e5f2:	3501      	addmi	r5, #1
 800e5f4:	f7ff ff00 	bl	800e3f8 <memcpy.isra.0>
 800e5f8:	9b00      	ldr	r3, [sp, #0]
 800e5fa:	4630      	mov	r0, r6
 800e5fc:	441d      	add	r5, r3
 800e5fe:	a901      	add	r1, sp, #4
 800e600:	9502      	str	r5, [sp, #8]
 800e602:	f7ff ff29 	bl	800e458 <_tcp_send_package>
 800e606:	b004      	add	sp, #16
 800e608:	bd70      	pop	{r4, r5, r6, pc}
 800e60a:	9301      	str	r3, [sp, #4]
 800e60c:	2314      	movs	r3, #20
 800e60e:	f88d 300c 	strb.w	r3, [sp, #12]
 800e612:	e7e3      	b.n	800e5dc <_send_reset+0x28>

0800e614 <tcp_begin>:
 800e614:	b508      	push	{r3, lr}
 800e616:	4b0a      	ldr	r3, [pc, #40]	; (800e640 <tcp_begin+0x2c>)
 800e618:	4601      	mov	r1, r0
 800e61a:	881a      	ldrh	r2, [r3, #0]
 800e61c:	4282      	cmp	r2, r0
 800e61e:	d102      	bne.n	800e626 <tcp_begin+0x12>
 800e620:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800e624:	b130      	cbz	r0, 800e634 <tcp_begin+0x20>
 800e626:	b12a      	cbz	r2, 800e634 <tcp_begin+0x20>
 800e628:	4806      	ldr	r0, [pc, #24]	; (800e644 <tcp_begin+0x30>)
 800e62a:	f002 fb63 	bl	8010cf4 <console_error>
 800e62e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e632:	bd08      	pop	{r3, pc}
 800e634:	4802      	ldr	r0, [pc, #8]	; (800e640 <tcp_begin+0x2c>)
 800e636:	8019      	strh	r1, [r3, #0]
 800e638:	f7ff fec4 	bl	800e3c4 <_init_tcb>
 800e63c:	2000      	movs	r0, #0
 800e63e:	e7f8      	b.n	800e632 <tcp_begin+0x1e>
 800e640:	20002344 	andcs	r2, r0, r4, asr #6
 800e644:	08014931 	stmdaeq	r1, {r0, r4, r5, r8, fp, lr}

0800e648 <tcp_write>:
 800e648:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800e64c:	429a      	cmp	r2, r3
 800e64e:	bf28      	it	cs
 800e650:	461a      	movcs	r2, r3
 800e652:	2344      	movs	r3, #68	; 0x44
 800e654:	b530      	push	{r4, r5, lr}
 800e656:	4c0d      	ldr	r4, [pc, #52]	; (800e68c <tcp_write+0x44>)
 800e658:	b085      	sub	sp, #20
 800e65a:	fb03 4400 	mla	r4, r3, r0, r4
 800e65e:	6963      	ldr	r3, [r4, #20]
 800e660:	4615      	mov	r5, r2
 800e662:	9301      	str	r3, [sp, #4]
 800e664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e666:	62e1      	str	r1, [r4, #44]	; 0x2c
 800e668:	9302      	str	r3, [sp, #8]
 800e66a:	2318      	movs	r3, #24
 800e66c:	8622      	strh	r2, [r4, #48]	; 0x30
 800e66e:	4620      	mov	r0, r4
 800e670:	a901      	add	r1, sp, #4
 800e672:	f88d 300c 	strb.w	r3, [sp, #12]
 800e676:	f7ff feef 	bl	800e458 <_tcp_send_package>
 800e67a:	2300      	movs	r3, #0
 800e67c:	6962      	ldr	r2, [r4, #20]
 800e67e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e680:	442a      	add	r2, r5
 800e682:	8623      	strh	r3, [r4, #48]	; 0x30
 800e684:	6162      	str	r2, [r4, #20]
 800e686:	b005      	add	sp, #20
 800e688:	bd30      	pop	{r4, r5, pc}
 800e68a:	bf00      	nop
 800e68c:	20002344 	andcs	r2, r0, r4, asr #6

0800e690 <tcp_read>:
 800e690:	2344      	movs	r3, #68	; 0x44
 800e692:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e694:	4c1c      	ldr	r4, [pc, #112]	; (800e708 <tcp_read+0x78>)
 800e696:	b085      	sub	sp, #20
 800e698:	fb03 4400 	mla	r4, r3, r0, r4
 800e69c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e6a0:	2b07      	cmp	r3, #7
 800e6a2:	d112      	bne.n	800e6ca <tcp_read+0x3a>
 800e6a4:	6963      	ldr	r3, [r4, #20]
 800e6a6:	4620      	mov	r0, r4
 800e6a8:	9301      	str	r3, [sp, #4]
 800e6aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e6ac:	a901      	add	r1, sp, #4
 800e6ae:	9302      	str	r3, [sp, #8]
 800e6b0:	2311      	movs	r3, #17
 800e6b2:	f88d 300c 	strb.w	r3, [sp, #12]
 800e6b6:	f7ff fecf 	bl	800e458 <_tcp_send_package>
 800e6ba:	2309      	movs	r3, #9
 800e6bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800e6c0:	6963      	ldr	r3, [r4, #20]
 800e6c2:	3301      	adds	r3, #1
 800e6c4:	6163      	str	r3, [r4, #20]
 800e6c6:	2000      	movs	r0, #0
 800e6c8:	e01b      	b.n	800e702 <tcp_read+0x72>
 800e6ca:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800e6ce:	4358      	muls	r0, r3
 800e6d0:	4a0e      	ldr	r2, [pc, #56]	; (800e70c <tcp_read+0x7c>)
 800e6d2:	1817      	adds	r7, r2, r0
 800e6d4:	887b      	ldrh	r3, [r7, #2]
 800e6d6:	5a15      	ldrh	r5, [r2, r0]
 800e6d8:	429d      	cmp	r5, r3
 800e6da:	d0f4      	beq.n	800e6c6 <tcp_read+0x36>
 800e6dc:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800e6e0:	435d      	muls	r5, r3
 800e6e2:	1d06      	adds	r6, r0, #4
 800e6e4:	442e      	add	r6, r5
 800e6e6:	4416      	add	r6, r2
 800e6e8:	4428      	add	r0, r5
 800e6ea:	600e      	str	r6, [r1, #0]
 800e6ec:	4402      	add	r2, r0
 800e6ee:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800e6f2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e6f4:	3301      	adds	r3, #1
 800e6f6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800e6fa:	f003 0301 	and.w	r3, r3, #1
 800e6fe:	8722      	strh	r2, [r4, #56]	; 0x38
 800e700:	807b      	strh	r3, [r7, #2]
 800e702:	b005      	add	sp, #20
 800e704:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e706:	bf00      	nop
 800e708:	20002344 	andcs	r2, r0, r4, asr #6
 800e70c:	200017d4 	ldrdcs	r1, [r0], -r4

0800e710 <memcpy.isra.0>:
 800e710:	3801      	subs	r0, #1
 800e712:	440a      	add	r2, r1
 800e714:	4291      	cmp	r1, r2
 800e716:	d100      	bne.n	800e71a <memcpy.isra.0+0xa>
 800e718:	4770      	bx	lr
 800e71a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e71e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e722:	e7f7      	b.n	800e714 <memcpy.isra.0+0x4>

0800e724 <net_memcpy>:
 800e724:	ea41 0300 	orr.w	r3, r1, r0
 800e728:	079b      	lsls	r3, r3, #30
 800e72a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e72c:	d115      	bne.n	800e75a <net_memcpy+0x36>
 800e72e:	f022 0303 	bic.w	r3, r2, #3
 800e732:	1f04      	subs	r4, r0, #4
 800e734:	0895      	lsrs	r5, r2, #2
 800e736:	18ce      	adds	r6, r1, r3
 800e738:	42b1      	cmp	r1, r6
 800e73a:	d109      	bne.n	800e750 <net_memcpy+0x2c>
 800e73c:	f06f 0403 	mvn.w	r4, #3
 800e740:	fb04 2205 	mla	r2, r4, r5, r2
 800e744:	4403      	add	r3, r0
 800e746:	3b01      	subs	r3, #1
 800e748:	440a      	add	r2, r1
 800e74a:	4291      	cmp	r1, r2
 800e74c:	d107      	bne.n	800e75e <net_memcpy+0x3a>
 800e74e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e750:	f851 7b04 	ldr.w	r7, [r1], #4
 800e754:	f844 7f04 	str.w	r7, [r4, #4]!
 800e758:	e7ee      	b.n	800e738 <net_memcpy+0x14>
 800e75a:	4603      	mov	r3, r0
 800e75c:	e7f3      	b.n	800e746 <net_memcpy+0x22>
 800e75e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e762:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e766:	e7f0      	b.n	800e74a <net_memcpy+0x26>

0800e768 <udp_set_ip>:
 800e768:	2204      	movs	r2, #4
 800e76a:	b513      	push	{r0, r1, r4, lr}
 800e76c:	4604      	mov	r4, r0
 800e76e:	6803      	ldr	r3, [r0, #0]
 800e770:	eb0d 0102 	add.w	r1, sp, r2
 800e774:	4808      	ldr	r0, [pc, #32]	; (800e798 <udp_set_ip+0x30>)
 800e776:	9301      	str	r3, [sp, #4]
 800e778:	f7ff ffca 	bl	800e710 <memcpy.isra.0>
 800e77c:	6862      	ldr	r2, [r4, #4]
 800e77e:	4b07      	ldr	r3, [pc, #28]	; (800e79c <udp_set_ip+0x34>)
 800e780:	43d1      	mvns	r1, r2
 800e782:	6019      	str	r1, [r3, #0]
 800e784:	6823      	ldr	r3, [r4, #0]
 800e786:	4013      	ands	r3, r2
 800e788:	4a05      	ldr	r2, [pc, #20]	; (800e7a0 <udp_set_ip+0x38>)
 800e78a:	6013      	str	r3, [r2, #0]
 800e78c:	68a2      	ldr	r2, [r4, #8]
 800e78e:	4b05      	ldr	r3, [pc, #20]	; (800e7a4 <udp_set_ip+0x3c>)
 800e790:	601a      	str	r2, [r3, #0]
 800e792:	b002      	add	sp, #8
 800e794:	bd10      	pop	{r4, pc}
 800e796:	bf00      	nop
 800e798:	2000865e 	andcs	r8, r0, lr, asr r6
 800e79c:	20002974 	andcs	r2, r0, r4, ror r9
 800e7a0:	2000297c 	andcs	r2, r0, ip, ror r9
 800e7a4:	20002978 	andcs	r2, r0, r8, ror r9

0800e7a8 <udp_bind>:
 800e7a8:	4a0a      	ldr	r2, [pc, #40]	; (800e7d4 <udp_bind+0x2c>)
 800e7aa:	4603      	mov	r3, r0
 800e7ac:	b510      	push	{r4, lr}
 800e7ae:	2000      	movs	r0, #0
 800e7b0:	4614      	mov	r4, r2
 800e7b2:	f852 1b04 	ldr.w	r1, [r2], #4
 800e7b6:	4299      	cmp	r1, r3
 800e7b8:	d008      	beq.n	800e7cc <udp_bind+0x24>
 800e7ba:	b141      	cbz	r1, 800e7ce <udp_bind+0x26>
 800e7bc:	3001      	adds	r0, #1
 800e7be:	2808      	cmp	r0, #8
 800e7c0:	d1f7      	bne.n	800e7b2 <udp_bind+0xa>
 800e7c2:	4805      	ldr	r0, [pc, #20]	; (800e7d8 <udp_bind+0x30>)
 800e7c4:	f002 fa96 	bl	8010cf4 <console_error>
 800e7c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e7cc:	bd10      	pop	{r4, pc}
 800e7ce:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800e7d2:	e7fb      	b.n	800e7cc <udp_bind+0x24>
 800e7d4:	20002984 	andcs	r2, r0, r4, lsl #19
 800e7d8:	08014951 	stmdaeq	r1, {r0, r4, r6, r8, fp, lr}

0800e7dc <udp_unbind>:
 800e7dc:	4a0c      	ldr	r2, [pc, #48]	; (800e810 <udp_unbind+0x34>)
 800e7de:	2300      	movs	r3, #0
 800e7e0:	4611      	mov	r1, r2
 800e7e2:	b510      	push	{r4, lr}
 800e7e4:	f852 4b04 	ldr.w	r4, [r2], #4
 800e7e8:	4284      	cmp	r4, r0
 800e7ea:	d108      	bne.n	800e7fe <udp_unbind+0x22>
 800e7ec:	2000      	movs	r0, #0
 800e7ee:	f640 3294 	movw	r2, #2964	; 0xb94
 800e7f2:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800e7f6:	4353      	muls	r3, r2
 800e7f8:	4a06      	ldr	r2, [pc, #24]	; (800e814 <udp_unbind+0x38>)
 800e7fa:	5098      	str	r0, [r3, r2]
 800e7fc:	bd10      	pop	{r4, pc}
 800e7fe:	3301      	adds	r3, #1
 800e800:	2b08      	cmp	r3, #8
 800e802:	d1ef      	bne.n	800e7e4 <udp_unbind+0x8>
 800e804:	4804      	ldr	r0, [pc, #16]	; (800e818 <udp_unbind+0x3c>)
 800e806:	f002 fa75 	bl	8010cf4 <console_error>
 800e80a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e80e:	e7f5      	b.n	800e7fc <udp_unbind+0x20>
 800e810:	20002984 	andcs	r2, r0, r4, lsl #19
 800e814:	200029a4 	andcs	r2, r0, r4, lsr #19
 800e818:	08014956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, lr}

0800e81c <udp_recv>:
 800e81c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e820:	4604      	mov	r4, r0
 800e822:	4698      	mov	r8, r3
 800e824:	f640 3394 	movw	r3, #2964	; 0xb94
 800e828:	435c      	muls	r4, r3
 800e82a:	4608      	mov	r0, r1
 800e82c:	4915      	ldr	r1, [pc, #84]	; (800e884 <udp_recv+0x68>)
 800e82e:	190f      	adds	r7, r1, r4
 800e830:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800e834:	5b0b      	ldrh	r3, [r1, r4]
 800e836:	4563      	cmp	r3, ip
 800e838:	d021      	beq.n	800e87e <udp_recv+0x62>
 800e83a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800e83e:	fb03 fc0c 	mul.w	ip, r3, ip
 800e842:	eb0c 0604 	add.w	r6, ip, r4
 800e846:	440e      	add	r6, r1
 800e848:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800e84c:	3404      	adds	r4, #4
 800e84e:	4295      	cmp	r5, r2
 800e850:	bf28      	it	cs
 800e852:	4615      	movcs	r5, r2
 800e854:	4464      	add	r4, ip
 800e856:	462a      	mov	r2, r5
 800e858:	4421      	add	r1, r4
 800e85a:	f7ff ff63 	bl	800e724 <net_memcpy>
 800e85e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800e862:	f8c8 3000 	str.w	r3, [r8]
 800e866:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800e86a:	9b06      	ldr	r3, [sp, #24]
 800e86c:	801a      	strh	r2, [r3, #0]
 800e86e:	887b      	ldrh	r3, [r7, #2]
 800e870:	3301      	adds	r3, #1
 800e872:	f003 0301 	and.w	r3, r3, #1
 800e876:	807b      	strh	r3, [r7, #2]
 800e878:	4628      	mov	r0, r5
 800e87a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e87e:	2500      	movs	r5, #0
 800e880:	e7fa      	b.n	800e878 <udp_recv+0x5c>
 800e882:	bf00      	nop
 800e884:	200029a4 	andcs	r2, r0, r4, lsr #19

0800e888 <udp_recv2>:
 800e888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e88a:	f640 3594 	movw	r5, #2964	; 0xb94
 800e88e:	4368      	muls	r0, r5
 800e890:	4c0f      	ldr	r4, [pc, #60]	; (800e8d0 <udp_recv2+0x48>)
 800e892:	1827      	adds	r7, r4, r0
 800e894:	887d      	ldrh	r5, [r7, #2]
 800e896:	5a26      	ldrh	r6, [r4, r0]
 800e898:	42ae      	cmp	r6, r5
 800e89a:	d017      	beq.n	800e8cc <udp_recv2+0x44>
 800e89c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800e8a0:	fb0c f505 	mul.w	r5, ip, r5
 800e8a4:	1d06      	adds	r6, r0, #4
 800e8a6:	442e      	add	r6, r5
 800e8a8:	4405      	add	r5, r0
 800e8aa:	4426      	add	r6, r4
 800e8ac:	442c      	add	r4, r5
 800e8ae:	600e      	str	r6, [r1, #0]
 800e8b0:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800e8b4:	6011      	str	r1, [r2, #0]
 800e8b6:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800e8ba:	801a      	strh	r2, [r3, #0]
 800e8bc:	887b      	ldrh	r3, [r7, #2]
 800e8be:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800e8c2:	3301      	adds	r3, #1
 800e8c4:	f003 0301 	and.w	r3, r3, #1
 800e8c8:	807b      	strh	r3, [r7, #2]
 800e8ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8cc:	2000      	movs	r0, #0
 800e8ce:	e7fc      	b.n	800e8ca <udp_recv2+0x42>
 800e8d0:	200029a4 	andcs	r2, r0, r4, lsr #19

0800e8d4 <udp_send>:
 800e8d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e8d8:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ea0c <udp_send+0x138>
 800e8dc:	461c      	mov	r4, r3
 800e8de:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800e8e2:	4607      	mov	r7, r0
 800e8e4:	4688      	mov	r8, r1
 800e8e6:	4616      	mov	r6, r2
 800e8e8:	2b00      	cmp	r3, #0
 800e8ea:	f000 808b 	beq.w	800ea04 <udp_send+0x130>
 800e8ee:	1c63      	adds	r3, r4, #1
 800e8f0:	d141      	bne.n	800e976 <udp_send+0xa2>
 800e8f2:	4a47      	ldr	r2, [pc, #284]	; (800ea10 <udp_send+0x13c>)
 800e8f4:	2307      	movs	r3, #7
 800e8f6:	4611      	mov	r1, r2
 800e8f8:	20ff      	movs	r0, #255	; 0xff
 800e8fa:	e001      	b.n	800e900 <udp_send+0x2c>
 800e8fc:	f802 0b01 	strb.w	r0, [r2], #1
 800e900:	3b01      	subs	r3, #1
 800e902:	d1fb      	bne.n	800e8fc <udp_send+0x28>
 800e904:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e908:	83cb      	strh	r3, [r1, #30]
 800e90a:	840b      	strh	r3, [r1, #32]
 800e90c:	2500      	movs	r5, #0
 800e90e:	f8df a104 	ldr.w	sl, [pc, #260]	; 800ea14 <udp_send+0x140>
 800e912:	4c3f      	ldr	r4, [pc, #252]	; (800ea10 <udp_send+0x13c>)
 800e914:	f8ba 3000 	ldrh.w	r3, [sl]
 800e918:	2114      	movs	r1, #20
 800e91a:	8263      	strh	r3, [r4, #18]
 800e91c:	f106 031c 	add.w	r3, r6, #28
 800e920:	ba5b      	rev16	r3, r3
 800e922:	f104 000e 	add.w	r0, r4, #14
 800e926:	8223      	strh	r3, [r4, #16]
 800e928:	8325      	strh	r5, [r4, #24]
 800e92a:	f001 fc30 	bl	801018e <net_chksum>
 800e92e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800e932:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800e936:	ba5b      	rev16	r3, r3
 800e938:	8463      	strh	r3, [r4, #34]	; 0x22
 800e93a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800e93e:	4632      	mov	r2, r6
 800e940:	ba5b      	rev16	r3, r3
 800e942:	84a3      	strh	r3, [r4, #36]	; 0x24
 800e944:	f106 0308 	add.w	r3, r6, #8
 800e948:	ba5b      	rev16	r3, r3
 800e94a:	bf28      	it	cs
 800e94c:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800e950:	4641      	mov	r1, r8
 800e952:	8320      	strh	r0, [r4, #24]
 800e954:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800e958:	84e3      	strh	r3, [r4, #38]	; 0x26
 800e95a:	f7ff fee3 	bl	800e724 <net_memcpy>
 800e95e:	4620      	mov	r0, r4
 800e960:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800e964:	f003 faca 	bl	8011efc <emac_eth_send>
 800e968:	f8ba 3000 	ldrh.w	r3, [sl]
 800e96c:	4628      	mov	r0, r5
 800e96e:	3301      	adds	r3, #1
 800e970:	f8aa 3000 	strh.w	r3, [sl]
 800e974:	e037      	b.n	800e9e6 <udp_send+0x112>
 800e976:	4b28      	ldr	r3, [pc, #160]	; (800ea18 <udp_send+0x144>)
 800e978:	681b      	ldr	r3, [r3, #0]
 800e97a:	43a3      	bics	r3, r4
 800e97c:	d10f      	bne.n	800e99e <udp_send+0xca>
 800e97e:	2307      	movs	r3, #7
 800e980:	21ff      	movs	r1, #255	; 0xff
 800e982:	4a23      	ldr	r2, [pc, #140]	; (800ea10 <udp_send+0x13c>)
 800e984:	e001      	b.n	800e98a <udp_send+0xb6>
 800e986:	f802 1b01 	strb.w	r1, [r2], #1
 800e98a:	3b01      	subs	r3, #1
 800e98c:	d1fb      	bne.n	800e986 <udp_send+0xb2>
 800e98e:	2204      	movs	r2, #4
 800e990:	4822      	ldr	r0, [pc, #136]	; (800ea1c <udp_send+0x148>)
 800e992:	eb0d 0102 	add.w	r1, sp, r2
 800e996:	9401      	str	r4, [sp, #4]
 800e998:	f7ff feba 	bl	800e710 <memcpy.isra.0>
 800e99c:	e7b6      	b.n	800e90c <udp_send+0x38>
 800e99e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800e9a2:	2be0      	cmp	r3, #224	; 0xe0
 800e9a4:	d10e      	bne.n	800e9c4 <udp_send+0xf0>
 800e9a6:	491e      	ldr	r1, [pc, #120]	; (800ea20 <udp_send+0x14c>)
 800e9a8:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800e9ac:	70cb      	strb	r3, [r1, #3]
 800e9ae:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e9b2:	710b      	strb	r3, [r1, #4]
 800e9b4:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800e9b8:	2206      	movs	r2, #6
 800e9ba:	4815      	ldr	r0, [pc, #84]	; (800ea10 <udp_send+0x13c>)
 800e9bc:	714b      	strb	r3, [r1, #5]
 800e9be:	f7ff fea7 	bl	800e710 <memcpy.isra.0>
 800e9c2:	e7e4      	b.n	800e98e <udp_send+0xba>
 800e9c4:	4b17      	ldr	r3, [pc, #92]	; (800ea24 <udp_send+0x150>)
 800e9c6:	681b      	ldr	r3, [r3, #0]
 800e9c8:	43a3      	bics	r3, r4
 800e9ca:	d00f      	beq.n	800e9ec <udp_send+0x118>
 800e9cc:	4d16      	ldr	r5, [pc, #88]	; (800ea28 <udp_send+0x154>)
 800e9ce:	4910      	ldr	r1, [pc, #64]	; (800ea10 <udp_send+0x13c>)
 800e9d0:	6828      	ldr	r0, [r5, #0]
 800e9d2:	f001 f897 	bl	800fb04 <arp_cache_lookup>
 800e9d6:	682b      	ldr	r3, [r5, #0]
 800e9d8:	4298      	cmp	r0, r3
 800e9da:	d0d8      	beq.n	800e98e <udp_send+0xba>
 800e9dc:	4813      	ldr	r0, [pc, #76]	; (800ea2c <udp_send+0x158>)
 800e9de:	f002 f989 	bl	8010cf4 <console_error>
 800e9e2:	f06f 0002 	mvn.w	r0, #2
 800e9e6:	b002      	add	sp, #8
 800e9e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e9ec:	4620      	mov	r0, r4
 800e9ee:	4908      	ldr	r1, [pc, #32]	; (800ea10 <udp_send+0x13c>)
 800e9f0:	f001 f888 	bl	800fb04 <arp_cache_lookup>
 800e9f4:	42a0      	cmp	r0, r4
 800e9f6:	d0ca      	beq.n	800e98e <udp_send+0xba>
 800e9f8:	480d      	ldr	r0, [pc, #52]	; (800ea30 <udp_send+0x15c>)
 800e9fa:	f002 f97b 	bl	8010cf4 <console_error>
 800e9fe:	f06f 0001 	mvn.w	r0, #1
 800ea02:	e7f0      	b.n	800e9e6 <udp_send+0x112>
 800ea04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ea08:	e7ed      	b.n	800e9e6 <udp_send+0x112>
 800ea0a:	bf00      	nop
 800ea0c:	20002984 	andcs	r2, r0, r4, lsl #19
 800ea10:	20008644 	andcs	r8, r0, r4, asr #12
 800ea14:	20002980 	andcs	r2, r0, r0, lsl #19
 800ea18:	20002974 	andcs	r2, r0, r4, ror r9
 800ea1c:	20008662 	andcs	r8, r0, r2, ror #12
 800ea20:	20000000 	andcs	r0, r0, r0
 800ea24:	2000297c 	andcs	r2, r0, ip, ror r9
 800ea28:	20002978 	andcs	r2, r0, r8, ror r9
 800ea2c:	0801495e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, fp, lr}
 800ea30:	08014984 	stmdaeq	r1, {r2, r7, r8, fp, lr}

0800ea34 <strlen>:
 800ea34:	4603      	mov	r3, r0
 800ea36:	461a      	mov	r2, r3
 800ea38:	7811      	ldrb	r1, [r2, #0]
 800ea3a:	3301      	adds	r3, #1
 800ea3c:	2900      	cmp	r1, #0
 800ea3e:	d1fa      	bne.n	800ea36 <strlen+0x2>
 800ea40:	1a10      	subs	r0, r2, r0
 800ea42:	4770      	bx	lr

0800ea44 <strcmp>:
 800ea44:	1e43      	subs	r3, r0, #1
 800ea46:	3901      	subs	r1, #1
 800ea48:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ea4c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ea50:	4290      	cmp	r0, r2
 800ea52:	d102      	bne.n	800ea5a <strcmp+0x16>
 800ea54:	2800      	cmp	r0, #0
 800ea56:	d1f7      	bne.n	800ea48 <strcmp+0x4>
 800ea58:	4770      	bx	lr
 800ea5a:	1a80      	subs	r0, r0, r2
 800ea5c:	4770      	bx	lr

0800ea5e <strcpy.isra.0>:
 800ea5e:	3801      	subs	r0, #1
 800ea60:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ea64:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ea68:	2b00      	cmp	r3, #0
 800ea6a:	d1f9      	bne.n	800ea60 <strcpy.isra.0+0x2>
 800ea6c:	4770      	bx	lr

0800ea6e <strcat.isra.0>:
 800ea6e:	b538      	push	{r3, r4, r5, lr}
 800ea70:	4604      	mov	r4, r0
 800ea72:	460d      	mov	r5, r1
 800ea74:	f7ff ffde 	bl	800ea34 <strlen>
 800ea78:	4629      	mov	r1, r5
 800ea7a:	4420      	add	r0, r4
 800ea7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea80:	f7ff bfed 	b.w	800ea5e <strcpy.isra.0>

0800ea84 <MDNS::MDNS()>:
 800ea84:	b513      	push	{r0, r1, r4, lr}
 800ea86:	4604      	mov	r4, r0
 800ea88:	a901      	add	r1, sp, #4
 800ea8a:	4804      	ldr	r0, [pc, #16]	; (800ea9c <MDNS::MDNS()+0x18>)
 800ea8c:	f002 fa92 	bl	8010fb4 <inet_aton>
 800ea90:	4620      	mov	r0, r4
 800ea92:	4b03      	ldr	r3, [pc, #12]	; (800eaa0 <MDNS::MDNS()+0x1c>)
 800ea94:	9a01      	ldr	r2, [sp, #4]
 800ea96:	601a      	str	r2, [r3, #0]
 800ea98:	b002      	add	sp, #8
 800ea9a:	bd10      	pop	{r4, pc}
 800ea9c:	080149a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, lr}
 800eaa0:	20008c38 	andcs	r8, r0, r8, lsr ip

0800eaa4 <MDNS::SetName(char const*)>:
 800eaa4:	b538      	push	{r3, r4, r5, lr}
 800eaa6:	4d0b      	ldr	r5, [pc, #44]	; (800ead4 <MDNS::SetName(char const*)+0x30>)
 800eaa8:	460c      	mov	r4, r1
 800eaaa:	6828      	ldr	r0, [r5, #0]
 800eaac:	b108      	cbz	r0, 800eab2 <MDNS::SetName(char const*)+0xe>
 800eaae:	f002 fa7b 	bl	8010fa8 <operator delete[](void*)>
 800eab2:	4620      	mov	r0, r4
 800eab4:	f7ff ffbe 	bl	800ea34 <strlen>
 800eab8:	3007      	adds	r0, #7
 800eaba:	f002 fa79 	bl	8010fb0 <operator new[](unsigned int)>
 800eabe:	4621      	mov	r1, r4
 800eac0:	6028      	str	r0, [r5, #0]
 800eac2:	f7ff ffcc 	bl	800ea5e <strcpy.isra.0>
 800eac6:	6828      	ldr	r0, [r5, #0]
 800eac8:	4903      	ldr	r1, [pc, #12]	; (800ead8 <MDNS::SetName(char const*)+0x34>)
 800eaca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eace:	f7ff bfce 	b.w	800ea6e <strcat.isra.0>
 800ead2:	bf00      	nop
 800ead4:	20009068 	andcs	r9, r0, r8, rrx
 800ead8:	080149b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, lr}

0800eadc <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800eadc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eae0:	f04f 0e00 	mov.w	lr, #0
 800eae4:	262e      	movs	r6, #46	; 0x2e
 800eae6:	4675      	mov	r5, lr
 800eae8:	4694      	mov	ip, r2
 800eaea:	4f1d      	ldr	r7, [pc, #116]	; (800eb60 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800eaec:	4a1d      	ldr	r2, [pc, #116]	; (800eb64 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800eaee:	780b      	ldrb	r3, [r1, #0]
 800eaf0:	1c68      	adds	r0, r5, #1
 800eaf2:	b383      	cbz	r3, 800eb56 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800eaf4:	2b3f      	cmp	r3, #63	; 0x3f
 800eaf6:	d91d      	bls.n	800eb34 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800eaf8:	f1be 0f00 	cmp.w	lr, #0
 800eafc:	bf08      	it	eq
 800eafe:	4605      	moveq	r5, r0
 800eb00:	2000      	movs	r0, #0
 800eb02:	7849      	ldrb	r1, [r1, #1]
 800eb04:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800eb08:	430b      	orrs	r3, r1
 800eb0a:	6811      	ldr	r1, [r2, #0]
 800eb0c:	5ccc      	ldrb	r4, [r1, r3]
 800eb0e:	3301      	adds	r3, #1
 800eb10:	440b      	add	r3, r1
 800eb12:	42a0      	cmp	r0, r4
 800eb14:	5c19      	ldrb	r1, [r3, r0]
 800eb16:	d309      	bcc.n	800eb2c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800eb18:	f04f 0e01 	mov.w	lr, #1
 800eb1c:	1919      	adds	r1, r3, r4
 800eb1e:	4464      	add	r4, ip
 800eb20:	780b      	ldrb	r3, [r1, #0]
 800eb22:	b10b      	cbz	r3, 800eb28 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800eb24:	f804 6b01 	strb.w	r6, [r4], #1
 800eb28:	46a4      	mov	ip, r4
 800eb2a:	e7e0      	b.n	800eaee <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800eb2c:	f80c 1000 	strb.w	r1, [ip, r0]
 800eb30:	3001      	adds	r0, #1
 800eb32:	e7ee      	b.n	800eb12 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800eb34:	4688      	mov	r8, r1
 800eb36:	eb0c 0403 	add.w	r4, ip, r3
 800eb3a:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800eb3e:	f80c 9b01 	strb.w	r9, [ip], #1
 800eb42:	4564      	cmp	r4, ip
 800eb44:	d1f9      	bne.n	800eb3a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800eb46:	f103 0c01 	add.w	ip, r3, #1
 800eb4a:	4461      	add	r1, ip
 800eb4c:	f1be 0f00 	cmp.w	lr, #0
 800eb50:	d1e6      	bne.n	800eb20 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800eb52:	18c5      	adds	r5, r0, r3
 800eb54:	e7e4      	b.n	800eb20 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800eb56:	f88c 3000 	strb.w	r3, [ip]
 800eb5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb5e:	bf00      	nop
 800eb60:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800eb64:	2000906c 	andcs	r9, r0, ip, rrx

0800eb68 <MDNS::FindFirstDotFromRight(char const*) const>:
 800eb68:	b510      	push	{r4, lr}
 800eb6a:	4608      	mov	r0, r1
 800eb6c:	460c      	mov	r4, r1
 800eb6e:	f7ff ff61 	bl	800ea34 <strlen>
 800eb72:	4420      	add	r0, r4
 800eb74:	42a0      	cmp	r0, r4
 800eb76:	d903      	bls.n	800eb80 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800eb78:	f810 3901 	ldrb.w	r3, [r0], #-1
 800eb7c:	2b2e      	cmp	r3, #46	; 0x2e
 800eb7e:	d1f9      	bne.n	800eb74 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800eb80:	3001      	adds	r0, #1
 800eb82:	bd10      	pop	{r4, pc}

0800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800eb84:	4610      	mov	r0, r2
 800eb86:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb88:	460f      	mov	r7, r1
 800eb8a:	1c44      	adds	r4, r0, #1
 800eb8c:	463d      	mov	r5, r7
 800eb8e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800eb92:	b126      	cbz	r6, 800eb9e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800eb94:	2e2e      	cmp	r6, #46	; 0x2e
 800eb96:	d002      	beq.n	800eb9e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800eb98:	f804 6b01 	strb.w	r6, [r4], #1
 800eb9c:	e7f6      	b.n	800eb8c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800eb9e:	1a69      	subs	r1, r5, r1
 800eba0:	7001      	strb	r1, [r0, #0]
 800eba2:	7829      	ldrb	r1, [r5, #0]
 800eba4:	b921      	cbnz	r1, 800ebb0 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800eba6:	b10b      	cbz	r3, 800ebac <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800eba8:	f804 1b01 	strb.w	r1, [r4], #1
 800ebac:	1aa0      	subs	r0, r4, r2
 800ebae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ebb0:	4620      	mov	r0, r4
 800ebb2:	1c69      	adds	r1, r5, #1
 800ebb4:	e7e8      	b.n	800eb88 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800ebb8 <MDNS::CreateAnswerLocalIpAddress()>:
 800ebb8:	2384      	movs	r3, #132	; 0x84
 800ebba:	b510      	push	{r4, lr}
 800ebbc:	4c0f      	ldr	r4, [pc, #60]	; (800ebfc <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800ebbe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800ebc2:	80e3      	strh	r3, [r4, #6]
 800ebc4:	2300      	movs	r3, #0
 800ebc6:	490e      	ldr	r1, [pc, #56]	; (800ec00 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800ebc8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800ebcc:	6809      	ldr	r1, [r1, #0]
 800ebce:	f104 0210 	add.w	r2, r4, #16
 800ebd2:	2301      	movs	r3, #1
 800ebd4:	f7ff ffd6 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ebd8:	490a      	ldr	r1, [pc, #40]	; (800ec04 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800ebda:	1813      	adds	r3, r2, r0
 800ebdc:	5011      	str	r1, [r2, r0]
 800ebde:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800ebe2:	605a      	str	r2, [r3, #4]
 800ebe4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ebe8:	811a      	strh	r2, [r3, #8]
 800ebea:	4a07      	ldr	r2, [pc, #28]	; (800ec08 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800ebec:	6812      	ldr	r2, [r2, #0]
 800ebee:	6912      	ldr	r2, [r2, #16]
 800ebf0:	f8c3 200a 	str.w	r2, [r3, #10]
 800ebf4:	1b1b      	subs	r3, r3, r4
 800ebf6:	330a      	adds	r3, #10
 800ebf8:	6023      	str	r3, [r4, #0]
 800ebfa:	bd10      	pop	{r4, pc}
 800ebfc:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800ec00:	20009068 	andcs	r9, r0, r8, rrx
 800ec04:	01800100 	orreq	r0, r0, r0, lsl #2
 800ec08:	20009070 	andcs	r9, r0, r0, ror r0

0800ec0c <MDNS::Start()>:
 800ec0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec0e:	4c1e      	ldr	r4, [pc, #120]	; (800ec88 <MDNS::Start()+0x7c>)
 800ec10:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800ec14:	4605      	mov	r5, r0
 800ec16:	6820      	ldr	r0, [r4, #0]
 800ec18:	f000 fb2a 	bl	800f270 <Network::Begin(unsigned short)>
 800ec1c:	4e1b      	ldr	r6, [pc, #108]	; (800ec8c <MDNS::Start()+0x80>)
 800ec1e:	4f1c      	ldr	r7, [pc, #112]	; (800ec90 <MDNS::Start()+0x84>)
 800ec20:	4601      	mov	r1, r0
 800ec22:	6030      	str	r0, [r6, #0]
 800ec24:	683a      	ldr	r2, [r7, #0]
 800ec26:	6820      	ldr	r0, [r4, #0]
 800ec28:	f000 fb33 	bl	800f292 <Network::JoinGroup(int, unsigned int)>
 800ec2c:	4b19      	ldr	r3, [pc, #100]	; (800ec94 <MDNS::Start()+0x88>)
 800ec2e:	681b      	ldr	r3, [r3, #0]
 800ec30:	b923      	cbnz	r3, 800ec3c <MDNS::Start()+0x30>
 800ec32:	6821      	ldr	r1, [r4, #0]
 800ec34:	4628      	mov	r0, r5
 800ec36:	311c      	adds	r1, #28
 800ec38:	f7ff ff34 	bl	800eaa4 <MDNS::SetName(char const*)>
 800ec3c:	4628      	mov	r0, r5
 800ec3e:	f7ff ffbb 	bl	800ebb8 <MDNS::CreateAnswerLocalIpAddress()>
 800ec42:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ec46:	4914      	ldr	r1, [pc, #80]	; (800ec98 <MDNS::Start()+0x8c>)
 800ec48:	7830      	ldrb	r0, [r6, #0]
 800ec4a:	f851 2b04 	ldr.w	r2, [r1], #4
 800ec4e:	9300      	str	r3, [sp, #0]
 800ec50:	b292      	uxth	r2, r2
 800ec52:	683b      	ldr	r3, [r7, #0]
 800ec54:	f7ff fe3e 	bl	800e8d4 <udp_send>
 800ec58:	223f      	movs	r2, #63	; 0x3f
 800ec5a:	6820      	ldr	r0, [r4, #0]
 800ec5c:	4c0f      	ldr	r4, [pc, #60]	; (800ec9c <MDNS::Start()+0x90>)
 800ec5e:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800ec62:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800ec66:	b929      	cbnz	r1, 800ec74 <MDNS::Start()+0x68>
 800ec68:	441a      	add	r2, r3
 800ec6a:	4293      	cmp	r3, r2
 800ec6c:	d006      	beq.n	800ec7c <MDNS::Start()+0x70>
 800ec6e:	f803 1b01 	strb.w	r1, [r3], #1
 800ec72:	e7fa      	b.n	800ec6a <MDNS::Start()+0x5e>
 800ec74:	3a01      	subs	r2, #1
 800ec76:	f803 1b01 	strb.w	r1, [r3], #1
 800ec7a:	d1f2      	bne.n	800ec62 <MDNS::Start()+0x56>
 800ec7c:	2300      	movs	r3, #0
 800ec7e:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800ec82:	b003      	add	sp, #12
 800ec84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec86:	bf00      	nop
 800ec88:	20009070 	andcs	r9, r0, r0, ror r0
 800ec8c:	20000008 	andcs	r0, r0, r8
 800ec90:	20008c38 	andcs	r8, r0, r8, lsr ip
 800ec94:	20009068 	andcs	r9, r0, r8, rrx
 800ec98:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800ec9c:	080149b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, lr}

0800eca0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800eca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eca4:	4c1b      	ldr	r4, [pc, #108]	; (800ed14 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800eca6:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ecaa:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ecae:	2300      	movs	r3, #0
 800ecb0:	f854 100c 	ldr.w	r1, [r4, ip]
 800ecb4:	4607      	mov	r7, r0
 800ecb6:	f7ff ff65 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecba:	2301      	movs	r3, #1
 800ecbc:	7bac      	ldrb	r4, [r5, #14]
 800ecbe:	4616      	mov	r6, r2
 800ecc0:	4915      	ldr	r1, [pc, #84]	; (800ed18 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ecc2:	4402      	add	r2, r0
 800ecc4:	4815      	ldr	r0, [pc, #84]	; (800ed1c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800ecc6:	429c      	cmp	r4, r3
 800ecc8:	bf18      	it	ne
 800ecca:	4601      	movne	r1, r0
 800eccc:	4638      	mov	r0, r7
 800ecce:	f7ff ff59 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ecd2:	4b13      	ldr	r3, [pc, #76]	; (800ed20 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800ecd4:	1814      	adds	r4, r2, r0
 800ecd6:	5013      	str	r3, [r2, r0]
 800ecd8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ecdc:	6063      	str	r3, [r4, #4]
 800ecde:	4b11      	ldr	r3, [pc, #68]	; (800ed24 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800ece0:	f8d3 8000 	ldr.w	r8, [r3]
 800ece4:	4640      	mov	r0, r8
 800ece6:	f7ff fea5 	bl	800ea34 <strlen>
 800ecea:	f100 0308 	add.w	r3, r0, #8
 800ecee:	ba5b      	rev16	r3, r3
 800ecf0:	8123      	strh	r3, [r4, #8]
 800ecf2:	2300      	movs	r3, #0
 800ecf4:	f8c4 300a 	str.w	r3, [r4, #10]
 800ecf8:	89ab      	ldrh	r3, [r5, #12]
 800ecfa:	f104 0210 	add.w	r2, r4, #16
 800ecfe:	ba5b      	rev16	r3, r3
 800ed00:	81e3      	strh	r3, [r4, #14]
 800ed02:	4641      	mov	r1, r8
 800ed04:	2301      	movs	r3, #1
 800ed06:	4638      	mov	r0, r7
 800ed08:	f7ff ff3c 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed0c:	4410      	add	r0, r2
 800ed0e:	1b80      	subs	r0, r0, r6
 800ed10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed14:	20008e40 	andcs	r8, r0, r0, asr #28
 800ed18:	080149b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, lr}
 800ed1c:	080149cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, lr}
 800ed20:	01802100 	orreq	r2, r0, r0, lsl #2
 800ed24:	20009068 	andcs	r9, r0, r8, rrx

0800ed28 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800ed28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed2c:	4e19      	ldr	r6, [pc, #100]	; (800ed94 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800ed2e:	010f      	lsls	r7, r1, #4
 800ed30:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800ed34:	2300      	movs	r3, #0
 800ed36:	59f1      	ldr	r1, [r6, r7]
 800ed38:	4604      	mov	r4, r0
 800ed3a:	f7ff ff23 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed3e:	2301      	movs	r3, #1
 800ed40:	7bae      	ldrb	r6, [r5, #14]
 800ed42:	4690      	mov	r8, r2
 800ed44:	4914      	ldr	r1, [pc, #80]	; (800ed98 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800ed46:	4402      	add	r2, r0
 800ed48:	4814      	ldr	r0, [pc, #80]	; (800ed9c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800ed4a:	429e      	cmp	r6, r3
 800ed4c:	bf18      	it	ne
 800ed4e:	4601      	movne	r1, r0
 800ed50:	4620      	mov	r0, r4
 800ed52:	f7ff ff17 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ed56:	4b12      	ldr	r3, [pc, #72]	; (800eda0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800ed58:	1816      	adds	r6, r2, r0
 800ed5a:	5013      	str	r3, [r2, r0]
 800ed5c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ed60:	68a8      	ldr	r0, [r5, #8]
 800ed62:	6073      	str	r3, [r6, #4]
 800ed64:	f106 040b 	add.w	r4, r6, #11
 800ed68:	b938      	cbnz	r0, 800ed7a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800ed6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ed6e:	72b0      	strb	r0, [r6, #10]
 800ed70:	8133      	strh	r3, [r6, #8]
 800ed72:	eba4 0008 	sub.w	r0, r4, r8
 800ed76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed7a:	f7ff fe5b 	bl	800ea34 <strlen>
 800ed7e:	4607      	mov	r7, r0
 800ed80:	1c43      	adds	r3, r0, #1
 800ed82:	72b0      	strb	r0, [r6, #10]
 800ed84:	ba5b      	rev16	r3, r3
 800ed86:	4620      	mov	r0, r4
 800ed88:	68a9      	ldr	r1, [r5, #8]
 800ed8a:	8133      	strh	r3, [r6, #8]
 800ed8c:	f7ff fe67 	bl	800ea5e <strcpy.isra.0>
 800ed90:	443c      	add	r4, r7
 800ed92:	e7ee      	b.n	800ed72 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800ed94:	20008e40 	andcs	r8, r0, r0, asr #28
 800ed98:	080149b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, lr}
 800ed9c:	080149cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, lr}
 800eda0:	01801000 	orreq	r1, r0, r0

0800eda4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800eda4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eda8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ee0c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800edac:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800edb0:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800edb4:	6869      	ldr	r1, [r5, #4]
 800edb6:	2301      	movs	r3, #1
 800edb8:	4607      	mov	r7, r0
 800edba:	f7ff fee3 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edbe:	4b14      	ldr	r3, [pc, #80]	; (800ee10 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800edc0:	f858 8009 	ldr.w	r8, [r8, r9]
 800edc4:	5013      	str	r3, [r2, r0]
 800edc6:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800edca:	1816      	adds	r6, r2, r0
 800edcc:	6073      	str	r3, [r6, #4]
 800edce:	4640      	mov	r0, r8
 800edd0:	4614      	mov	r4, r2
 800edd2:	f7ff fe2f 	bl	800ea34 <strlen>
 800edd6:	f100 030d 	add.w	r3, r0, #13
 800edda:	ba5b      	rev16	r3, r3
 800eddc:	4641      	mov	r1, r8
 800edde:	8133      	strh	r3, [r6, #8]
 800ede0:	f106 020a 	add.w	r2, r6, #10
 800ede4:	2300      	movs	r3, #0
 800ede6:	4638      	mov	r0, r7
 800ede8:	f7ff fecc 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800edec:	2301      	movs	r3, #1
 800edee:	4402      	add	r2, r0
 800edf0:	7bad      	ldrb	r5, [r5, #14]
 800edf2:	4808      	ldr	r0, [pc, #32]	; (800ee14 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800edf4:	4908      	ldr	r1, [pc, #32]	; (800ee18 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800edf6:	429d      	cmp	r5, r3
 800edf8:	bf18      	it	ne
 800edfa:	4601      	movne	r1, r0
 800edfc:	4638      	mov	r0, r7
 800edfe:	f7ff fec1 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ee02:	4410      	add	r0, r2
 800ee04:	1b00      	subs	r0, r0, r4
 800ee06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee0a:	bf00      	nop
 800ee0c:	20008e40 	andcs	r8, r0, r0, asr #28
 800ee10:	01000c00 	tsteq	r0, r0, lsl #24
 800ee14:	080149cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, lr}
 800ee18:	080149b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, lr}

0800ee1c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800ee1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee1e:	460f      	mov	r7, r1
 800ee20:	2301      	movs	r3, #1
 800ee22:	490f      	ldr	r1, [pc, #60]	; (800ee60 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800ee24:	4606      	mov	r6, r0
 800ee26:	f7ff fead 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ee2a:	4b0e      	ldr	r3, [pc, #56]	; (800ee64 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800ee2c:	490e      	ldr	r1, [pc, #56]	; (800ee68 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800ee2e:	5013      	str	r3, [r2, r0]
 800ee30:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ee34:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800ee38:	684f      	ldr	r7, [r1, #4]
 800ee3a:	1815      	adds	r5, r2, r0
 800ee3c:	606b      	str	r3, [r5, #4]
 800ee3e:	4638      	mov	r0, r7
 800ee40:	4614      	mov	r4, r2
 800ee42:	f7ff fdf7 	bl	800ea34 <strlen>
 800ee46:	1c83      	adds	r3, r0, #2
 800ee48:	ba5b      	rev16	r3, r3
 800ee4a:	812b      	strh	r3, [r5, #8]
 800ee4c:	f105 020a 	add.w	r2, r5, #10
 800ee50:	2301      	movs	r3, #1
 800ee52:	4639      	mov	r1, r7
 800ee54:	4630      	mov	r0, r6
 800ee56:	f7ff fe95 	bl	800eb84 <MDNS::WriteDnsName(char const*, char*, bool)>
 800ee5a:	4410      	add	r0, r2
 800ee5c:	1b00      	subs	r0, r0, r4
 800ee5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee60:	080149bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, lr}
 800ee64:	01000c00 	tsteq	r0, r0, lsl #24
 800ee68:	20008e40 	andcs	r8, r0, r0, asr #28

0800ee6c <MDNS::CreateMDNSMessage(unsigned int)>:
 800ee6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee6e:	2384      	movs	r3, #132	; 0x84
 800ee70:	4d19      	ldr	r5, [pc, #100]	; (800eed8 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800ee72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800ee76:	80eb      	strh	r3, [r5, #6]
 800ee78:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ee7c:	f105 0410 	add.w	r4, r5, #16
 800ee80:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800ee84:	4622      	mov	r2, r4
 800ee86:	4606      	mov	r6, r0
 800ee88:	460f      	mov	r7, r1
 800ee8a:	f7ff ff09 	bl	800eca0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ee8e:	4404      	add	r4, r0
 800ee90:	4622      	mov	r2, r4
 800ee92:	4639      	mov	r1, r7
 800ee94:	4630      	mov	r0, r6
 800ee96:	f7ff ff47 	bl	800ed28 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ee9a:	4404      	add	r4, r0
 800ee9c:	4622      	mov	r2, r4
 800ee9e:	4639      	mov	r1, r7
 800eea0:	4630      	mov	r0, r6
 800eea2:	f7ff ffbb 	bl	800ee1c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800eea6:	4404      	add	r4, r0
 800eea8:	4622      	mov	r2, r4
 800eeaa:	4639      	mov	r1, r7
 800eeac:	4630      	mov	r0, r6
 800eeae:	f7ff ff79 	bl	800eda4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800eeb2:	4b0a      	ldr	r3, [pc, #40]	; (800eedc <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800eeb4:	4404      	add	r4, r0
 800eeb6:	f853 2b10 	ldr.w	r2, [r3], #16
 800eeba:	1e60      	subs	r0, r4, #1
 800eebc:	3a0c      	subs	r2, #12
 800eebe:	4611      	mov	r1, r2
 800eec0:	3901      	subs	r1, #1
 800eec2:	d304      	bcc.n	800eece <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800eec4:	f813 6b01 	ldrb.w	r6, [r3], #1
 800eec8:	f800 6f01 	strb.w	r6, [r0, #1]!
 800eecc:	e7f8      	b.n	800eec0 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800eece:	4414      	add	r4, r2
 800eed0:	4a03      	ldr	r2, [pc, #12]	; (800eee0 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800eed2:	1aa4      	subs	r4, r4, r2
 800eed4:	602c      	str	r4, [r5, #0]
 800eed6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eed8:	20008e64 	andcs	r8, r0, r4, ror #28
 800eedc:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800eee0:	20008e68 	andcs	r8, r0, r8, ror #28

0800eee4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800eee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eee8:	4d3f      	ldr	r5, [pc, #252]	; (800efe8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800eeea:	b085      	sub	sp, #20
 800eeec:	682c      	ldr	r4, [r5, #0]
 800eeee:	4680      	mov	r8, r0
 800eef0:	460f      	mov	r7, r1
 800eef2:	4616      	mov	r6, r2
 800eef4:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800eef8:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800eefc:	b11c      	cbz	r4, 800ef06 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800eefe:	692a      	ldr	r2, [r5, #16]
 800ef00:	2a00      	cmp	r2, #0
 800ef02:	d16d      	bne.n	800efe0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800ef04:	2401      	movs	r4, #1
 800ef06:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800ef0a:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800ef0e:	8193      	strh	r3, [r2, #12]
 800ef10:	f882 b00e 	strb.w	fp, [r2, #14]
 800ef14:	2f00      	cmp	r7, #0
 800ef16:	d153      	bne.n	800efc0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800ef18:	4630      	mov	r0, r6
 800ef1a:	f7ff fd8b 	bl	800ea34 <strlen>
 800ef1e:	4f33      	ldr	r7, [pc, #204]	; (800efec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ef20:	683b      	ldr	r3, [r7, #0]
 800ef22:	331c      	adds	r3, #28
 800ef24:	4418      	add	r0, r3
 800ef26:	f7ff fd85 	bl	800ea34 <strlen>
 800ef2a:	3001      	adds	r0, #1
 800ef2c:	f002 f840 	bl	8010fb0 <operator new[](unsigned int)>
 800ef30:	6839      	ldr	r1, [r7, #0]
 800ef32:	f845 0009 	str.w	r0, [r5, r9]
 800ef36:	311c      	adds	r1, #28
 800ef38:	f7ff fd91 	bl	800ea5e <strcpy.isra.0>
 800ef3c:	f855 0009 	ldr.w	r0, [r5, r9]
 800ef40:	4631      	mov	r1, r6
 800ef42:	f7ff fd94 	bl	800ea6e <strcat.isra.0>
 800ef46:	4631      	mov	r1, r6
 800ef48:	4640      	mov	r0, r8
 800ef4a:	f7ff fe0d 	bl	800eb68 <MDNS::FindFirstDotFromRight(char const*) const>
 800ef4e:	eb05 0709 	add.w	r7, r5, r9
 800ef52:	4605      	mov	r5, r0
 800ef54:	f7ff fd6e 	bl	800ea34 <strlen>
 800ef58:	300d      	adds	r0, #13
 800ef5a:	f002 f829 	bl	8010fb0 <operator new[](unsigned int)>
 800ef5e:	4629      	mov	r1, r5
 800ef60:	6078      	str	r0, [r7, #4]
 800ef62:	f7ff fd7c 	bl	800ea5e <strcpy.isra.0>
 800ef66:	4922      	ldr	r1, [pc, #136]	; (800eff0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ef68:	6878      	ldr	r0, [r7, #4]
 800ef6a:	f7ff fd80 	bl	800ea6e <strcat.isra.0>
 800ef6e:	4921      	ldr	r1, [pc, #132]	; (800eff4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ef70:	4b21      	ldr	r3, [pc, #132]	; (800eff8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ef72:	6878      	ldr	r0, [r7, #4]
 800ef74:	f1bb 0f01 	cmp.w	fp, #1
 800ef78:	bf18      	it	ne
 800ef7a:	4619      	movne	r1, r3
 800ef7c:	f7ff fd77 	bl	800ea6e <strcat.isra.0>
 800ef80:	f1ba 0f00 	cmp.w	sl, #0
 800ef84:	d009      	beq.n	800ef9a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800ef86:	4650      	mov	r0, sl
 800ef88:	f7ff fd54 	bl	800ea34 <strlen>
 800ef8c:	3001      	adds	r0, #1
 800ef8e:	f002 f80f 	bl	8010fb0 <operator new[](unsigned int)>
 800ef92:	4651      	mov	r1, sl
 800ef94:	60b8      	str	r0, [r7, #8]
 800ef96:	f7ff fd62 	bl	800ea5e <strcpy.isra.0>
 800ef9a:	4621      	mov	r1, r4
 800ef9c:	4640      	mov	r0, r8
 800ef9e:	f7ff ff65 	bl	800ee6c <MDNS::CreateMDNSMessage(unsigned int)>
 800efa2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800efa6:	4915      	ldr	r1, [pc, #84]	; (800effc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800efa8:	4815      	ldr	r0, [pc, #84]	; (800f000 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800efaa:	f851 2b04 	ldr.w	r2, [r1], #4
 800efae:	9300      	str	r3, [sp, #0]
 800efb0:	4b14      	ldr	r3, [pc, #80]	; (800f004 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800efb2:	7800      	ldrb	r0, [r0, #0]
 800efb4:	681b      	ldr	r3, [r3, #0]
 800efb6:	b292      	uxth	r2, r2
 800efb8:	f7ff fc8c 	bl	800e8d4 <udp_send>
 800efbc:	2001      	movs	r0, #1
 800efbe:	e010      	b.n	800efe2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800efc0:	4638      	mov	r0, r7
 800efc2:	f7ff fd37 	bl	800ea34 <strlen>
 800efc6:	9003      	str	r0, [sp, #12]
 800efc8:	4630      	mov	r0, r6
 800efca:	f7ff fd33 	bl	800ea34 <strlen>
 800efce:	9b03      	ldr	r3, [sp, #12]
 800efd0:	4418      	add	r0, r3
 800efd2:	3001      	adds	r0, #1
 800efd4:	f001 ffec 	bl	8010fb0 <operator new[](unsigned int)>
 800efd8:	4639      	mov	r1, r7
 800efda:	f845 0009 	str.w	r0, [r5, r9]
 800efde:	e7ab      	b.n	800ef38 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800efe0:	2000      	movs	r0, #0
 800efe2:	b005      	add	sp, #20
 800efe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efe8:	20008e40 	andcs	r8, r0, r0, asr #28
 800efec:	20009070 	andcs	r9, r0, r0, ror r0
 800eff0:	08013a63 	stmdaeq	r1, {r0, r1, r5, r6, r9, fp, ip, sp}
 800eff4:	080149b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, lr}
 800eff8:	080149cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, lr}
 800effc:	20008e64 	andcs	r8, r0, r4, ror #28
 800f000:	20000008 	andcs	r0, r0, r8
 800f004:	20008c38 	andcs	r8, r0, r8, lsr ip

0800f008 <MDNS::HandleRequest(unsigned short)>:
 800f008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f00c:	4605      	mov	r5, r0
 800f00e:	2700      	movs	r7, #0
 800f010:	f04f 080c 	mov.w	r8, #12
 800f014:	b0c5      	sub	sp, #276	; 0x114
 800f016:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800f0dc <MDNS::HandleRequest(unsigned short)+0xd4>
 800f01a:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800f0e0 <MDNS::HandleRequest(unsigned short)+0xd8>
 800f01e:	9103      	str	r1, [sp, #12]
 800f020:	9b03      	ldr	r3, [sp, #12]
 800f022:	42bb      	cmp	r3, r7
 800f024:	d956      	bls.n	800f0d4 <MDNS::HandleRequest(unsigned short)+0xcc>
 800f026:	f8da 1000 	ldr.w	r1, [sl]
 800f02a:	aa04      	add	r2, sp, #16
 800f02c:	4441      	add	r1, r8
 800f02e:	4628      	mov	r0, r5
 800f030:	f7ff fd54 	bl	800eadc <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800f034:	f8da 2000 	ldr.w	r2, [sl]
 800f038:	4440      	add	r0, r8
 800f03a:	1813      	adds	r3, r2, r0
 800f03c:	885b      	ldrh	r3, [r3, #2]
 800f03e:	f100 0804 	add.w	r8, r0, #4
 800f042:	ba5b      	rev16	r3, r3
 800f044:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800f048:	2b01      	cmp	r3, #1
 800f04a:	d13e      	bne.n	800f0ca <MDNS::HandleRequest(unsigned short)+0xc2>
 800f04c:	5a14      	ldrh	r4, [r2, r0]
 800f04e:	4b25      	ldr	r3, [pc, #148]	; (800f0e4 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800f050:	ba64      	rev16	r4, r4
 800f052:	6818      	ldr	r0, [r3, #0]
 800f054:	a904      	add	r1, sp, #16
 800f056:	b2a4      	uxth	r4, r4
 800f058:	f7ff fcf4 	bl	800ea44 <strcmp>
 800f05c:	b970      	cbnz	r0, 800f07c <MDNS::HandleRequest(unsigned short)+0x74>
 800f05e:	2c01      	cmp	r4, #1
 800f060:	d10c      	bne.n	800f07c <MDNS::HandleRequest(unsigned short)+0x74>
 800f062:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f066:	4920      	ldr	r1, [pc, #128]	; (800f0e8 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800f068:	4820      	ldr	r0, [pc, #128]	; (800f0ec <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f06a:	f851 2b04 	ldr.w	r2, [r1], #4
 800f06e:	9300      	str	r3, [sp, #0]
 800f070:	4b1f      	ldr	r3, [pc, #124]	; (800f0f0 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f072:	7800      	ldrb	r0, [r0, #0]
 800f074:	681b      	ldr	r3, [r3, #0]
 800f076:	b292      	uxth	r2, r2
 800f078:	f7ff fc2c 	bl	800e8d4 <udp_send>
 800f07c:	481d      	ldr	r0, [pc, #116]	; (800f0f4 <MDNS::HandleRequest(unsigned short)+0xec>)
 800f07e:	a904      	add	r1, sp, #16
 800f080:	f7ff fce0 	bl	800ea44 <strcmp>
 800f084:	f04f 0900 	mov.w	r9, #0
 800f088:	4e1b      	ldr	r6, [pc, #108]	; (800f0f8 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800f08a:	9002      	str	r0, [sp, #8]
 800f08c:	6833      	ldr	r3, [r6, #0]
 800f08e:	b1c3      	cbz	r3, 800f0c2 <MDNS::HandleRequest(unsigned short)+0xba>
 800f090:	9b02      	ldr	r3, [sp, #8]
 800f092:	b123      	cbz	r3, 800f09e <MDNS::HandleRequest(unsigned short)+0x96>
 800f094:	6870      	ldr	r0, [r6, #4]
 800f096:	a904      	add	r1, sp, #16
 800f098:	f7ff fcd4 	bl	800ea44 <strcmp>
 800f09c:	b988      	cbnz	r0, 800f0c2 <MDNS::HandleRequest(unsigned short)+0xba>
 800f09e:	2c0c      	cmp	r4, #12
 800f0a0:	d10f      	bne.n	800f0c2 <MDNS::HandleRequest(unsigned short)+0xba>
 800f0a2:	4649      	mov	r1, r9
 800f0a4:	4628      	mov	r0, r5
 800f0a6:	f7ff fee1 	bl	800ee6c <MDNS::CreateMDNSMessage(unsigned int)>
 800f0aa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f0ae:	480f      	ldr	r0, [pc, #60]	; (800f0ec <MDNS::HandleRequest(unsigned short)+0xe4>)
 800f0b0:	9300      	str	r3, [sp, #0]
 800f0b2:	4b0f      	ldr	r3, [pc, #60]	; (800f0f0 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800f0b4:	f8bb 2000 	ldrh.w	r2, [fp]
 800f0b8:	681b      	ldr	r3, [r3, #0]
 800f0ba:	4910      	ldr	r1, [pc, #64]	; (800f0fc <MDNS::HandleRequest(unsigned short)+0xf4>)
 800f0bc:	7800      	ldrb	r0, [r0, #0]
 800f0be:	f7ff fc09 	bl	800e8d4 <udp_send>
 800f0c2:	3610      	adds	r6, #16
 800f0c4:	f1b9 0f00 	cmp.w	r9, #0
 800f0c8:	d001      	beq.n	800f0ce <MDNS::HandleRequest(unsigned short)+0xc6>
 800f0ca:	3701      	adds	r7, #1
 800f0cc:	e7a8      	b.n	800f020 <MDNS::HandleRequest(unsigned short)+0x18>
 800f0ce:	f04f 0901 	mov.w	r9, #1
 800f0d2:	e7db      	b.n	800f08c <MDNS::HandleRequest(unsigned short)+0x84>
 800f0d4:	b045      	add	sp, #276	; 0x114
 800f0d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0da:	bf00      	nop
 800f0dc:	2000906c 	andcs	r9, r0, ip, rrx
 800f0e0:	20008e64 	andcs	r8, r0, r4, ror #28
 800f0e4:	20009068 	andcs	r9, r0, r8, rrx
 800f0e8:	20008c3c 	andcs	r8, r0, ip, lsr ip
 800f0ec:	20000008 	andcs	r0, r0, r8
 800f0f0:	20008c38 	andcs	r8, r0, r8, lsr ip
 800f0f4:	080149bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, lr}
 800f0f8:	20008e40 	andcs	r8, r0, r0, asr #28
 800f0fc:	20008e68 	andcs	r8, r0, r8, ror #28

0800f100 <MDNS::Parse()>:
 800f100:	4b08      	ldr	r3, [pc, #32]	; (800f124 <MDNS::Parse()+0x24>)
 800f102:	681a      	ldr	r2, [r3, #0]
 800f104:	8853      	ldrh	r3, [r2, #2]
 800f106:	ba5b      	rev16	r3, r3
 800f108:	b299      	uxth	r1, r3
 800f10a:	041b      	lsls	r3, r3, #16
 800f10c:	d408      	bmi.n	800f120 <MDNS::Parse()+0x20>
 800f10e:	0b8b      	lsrs	r3, r1, #14
 800f110:	d106      	bne.n	800f120 <MDNS::Parse()+0x20>
 800f112:	8891      	ldrh	r1, [r2, #4]
 800f114:	b28b      	uxth	r3, r1
 800f116:	b11b      	cbz	r3, 800f120 <MDNS::Parse()+0x20>
 800f118:	ba49      	rev16	r1, r1
 800f11a:	b289      	uxth	r1, r1
 800f11c:	f7ff bf74 	b.w	800f008 <MDNS::HandleRequest(unsigned short)>
 800f120:	4770      	bx	lr
 800f122:	bf00      	nop
 800f124:	2000906c 	andcs	r9, r0, ip, rrx

0800f128 <MDNS::Run()>:
 800f128:	b538      	push	{r3, r4, r5, lr}
 800f12a:	4d0c      	ldr	r5, [pc, #48]	; (800f15c <MDNS::Run()+0x34>)
 800f12c:	4604      	mov	r4, r0
 800f12e:	480c      	ldr	r0, [pc, #48]	; (800f160 <MDNS::Run()+0x38>)
 800f130:	462b      	mov	r3, r5
 800f132:	4a0c      	ldr	r2, [pc, #48]	; (800f164 <MDNS::Run()+0x3c>)
 800f134:	490c      	ldr	r1, [pc, #48]	; (800f168 <MDNS::Run()+0x40>)
 800f136:	7800      	ldrb	r0, [r0, #0]
 800f138:	f7ff fba6 	bl	800e888 <udp_recv2>
 800f13c:	4b0b      	ldr	r3, [pc, #44]	; (800f16c <MDNS::Run()+0x44>)
 800f13e:	882a      	ldrh	r2, [r5, #0]
 800f140:	8018      	strh	r0, [r3, #0]
 800f142:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f146:	429a      	cmp	r2, r3
 800f148:	d106      	bne.n	800f158 <MDNS::Run()+0x30>
 800f14a:	280c      	cmp	r0, #12
 800f14c:	d904      	bls.n	800f158 <MDNS::Run()+0x30>
 800f14e:	4620      	mov	r0, r4
 800f150:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f154:	f7ff bfd4 	b.w	800f100 <MDNS::Parse()>
 800f158:	bd38      	pop	{r3, r4, r5, pc}
 800f15a:	bf00      	nop
 800f15c:	20008c34 	andcs	r8, r0, r4, lsr ip
 800f160:	20000008 	andcs	r0, r0, r8
 800f164:	20008c30 	andcs	r8, r0, r0, lsr ip
 800f168:	2000906c 	andcs	r9, r0, ip, rrx
 800f16c:	20008e60 	andcs	r8, r0, r0, ror #28

0800f170 <MDNS::Print()>:
 800f170:	b510      	push	{r4, lr}
 800f172:	4816      	ldr	r0, [pc, #88]	; (800f1cc <MDNS::Print()+0x5c>)
 800f174:	f7fa fa1c 	bl	80095b0 <printf>
 800f178:	4b15      	ldr	r3, [pc, #84]	; (800f1d0 <MDNS::Print()+0x60>)
 800f17a:	681b      	ldr	r3, [r3, #0]
 800f17c:	3301      	adds	r3, #1
 800f17e:	d104      	bne.n	800f18a <MDNS::Print()+0x1a>
 800f180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f184:	4813      	ldr	r0, [pc, #76]	; (800f1d4 <MDNS::Print()+0x64>)
 800f186:	f7fa ba13 	b.w	80095b0 <printf>
 800f18a:	4b13      	ldr	r3, [pc, #76]	; (800f1d8 <MDNS::Print()+0x68>)
 800f18c:	4c13      	ldr	r4, [pc, #76]	; (800f1dc <MDNS::Print()+0x6c>)
 800f18e:	6819      	ldr	r1, [r3, #0]
 800f190:	4813      	ldr	r0, [pc, #76]	; (800f1e0 <MDNS::Print()+0x70>)
 800f192:	f7fa fa0d 	bl	80095b0 <printf>
 800f196:	6823      	ldr	r3, [r4, #0]
 800f198:	b14b      	cbz	r3, 800f1ae <MDNS::Print()+0x3e>
 800f19a:	4a12      	ldr	r2, [pc, #72]	; (800f1e4 <MDNS::Print()+0x74>)
 800f19c:	68a3      	ldr	r3, [r4, #8]
 800f19e:	6861      	ldr	r1, [r4, #4]
 800f1a0:	2b00      	cmp	r3, #0
 800f1a2:	bf08      	it	eq
 800f1a4:	4613      	moveq	r3, r2
 800f1a6:	4810      	ldr	r0, [pc, #64]	; (800f1e8 <MDNS::Print()+0x78>)
 800f1a8:	89a2      	ldrh	r2, [r4, #12]
 800f1aa:	f7fa fa01 	bl	80095b0 <printf>
 800f1ae:	6923      	ldr	r3, [r4, #16]
 800f1b0:	b15b      	cbz	r3, 800f1ca <MDNS::Print()+0x5a>
 800f1b2:	69a3      	ldr	r3, [r4, #24]
 800f1b4:	4a0b      	ldr	r2, [pc, #44]	; (800f1e4 <MDNS::Print()+0x74>)
 800f1b6:	6961      	ldr	r1, [r4, #20]
 800f1b8:	2b00      	cmp	r3, #0
 800f1ba:	bf08      	it	eq
 800f1bc:	4613      	moveq	r3, r2
 800f1be:	480a      	ldr	r0, [pc, #40]	; (800f1e8 <MDNS::Print()+0x78>)
 800f1c0:	8ba2      	ldrh	r2, [r4, #28]
 800f1c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1c6:	f7fa b9f3 	b.w	80095b0 <printf>
 800f1ca:	bd10      	pop	{r4, pc}
 800f1cc:	080149d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, lr}
 800f1d0:	20000008 	andcs	r0, r0, r8
 800f1d4:	080149de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, fp, lr}
 800f1d8:	20009068 	andcs	r9, r0, r8, rrx
 800f1dc:	20008e40 	andcs	r8, r0, r0, asr #28
 800f1e0:	080149ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, fp, lr}
 800f1e4:	08013d5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, ip, sp}
 800f1e8:	080149f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, fp, lr}

0800f1ec <strncpy.constprop.0.isra.0>:
 800f1ec:	233f      	movs	r3, #63	; 0x3f
 800f1ee:	3901      	subs	r1, #1
 800f1f0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f1f4:	b92a      	cbnz	r2, 800f202 <strncpy.constprop.0.isra.0+0x16>
 800f1f6:	4403      	add	r3, r0
 800f1f8:	4298      	cmp	r0, r3
 800f1fa:	d007      	beq.n	800f20c <strncpy.constprop.0.isra.0+0x20>
 800f1fc:	f800 2b01 	strb.w	r2, [r0], #1
 800f200:	e7fa      	b.n	800f1f8 <strncpy.constprop.0.isra.0+0xc>
 800f202:	3b01      	subs	r3, #1
 800f204:	f800 2b01 	strb.w	r2, [r0], #1
 800f208:	d1f2      	bne.n	800f1f0 <strncpy.constprop.0.isra.0+0x4>
 800f20a:	4770      	bx	lr
 800f20c:	4770      	bx	lr
	...

0800f210 <Network::Network()>:
 800f210:	4a11      	ldr	r2, [pc, #68]	; (800f258 <Network::Network()+0x48>)
 800f212:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800f216:	6010      	str	r0, [r2, #0]
 800f218:	2201      	movs	r2, #1
 800f21a:	2300      	movs	r3, #0
 800f21c:	e9c0 1200 	strd	r1, r2, [r0]
 800f220:	2200      	movs	r2, #0
 800f222:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800f226:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f22a:	490c      	ldr	r1, [pc, #48]	; (800f25c <Network::Network()+0x4c>)
 800f22c:	60c2      	str	r2, [r0, #12]
 800f22e:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800f232:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800f236:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800f23a:	6083      	str	r3, [r0, #8]
 800f23c:	6183      	str	r3, [r0, #24]
 800f23e:	7703      	strb	r3, [r0, #28]
 800f240:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800f244:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800f248:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f24c:	f802 3b01 	strb.w	r3, [r2], #1
 800f250:	2b00      	cmp	r3, #0
 800f252:	d1f9      	bne.n	800f248 <Network::Network()+0x38>
 800f254:	4770      	bx	lr
 800f256:	bf00      	nop
 800f258:	20009070 	andcs	r9, r0, r0, ror r0
 800f25c:	08014a03 	stmdaeq	r1, {r0, r1, r9, fp, lr}

0800f260 <Network::Shutdown()>:
 800f260:	b508      	push	{r3, lr}
 800f262:	30b8      	adds	r0, #184	; 0xb8
 800f264:	f7f9 fe98 	bl	8008f98 <NetworkDisplay::ShowShutdown()>
 800f268:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f26c:	f7f7 bfc0 	b.w	80071f0 <net_shutdown>

0800f270 <Network::Begin(unsigned short)>:
 800f270:	4608      	mov	r0, r1
 800f272:	f7ff ba99 	b.w	800e7a8 <udp_bind>

0800f276 <Network::End(unsigned short)>:
 800f276:	4608      	mov	r0, r1
 800f278:	f7ff bab0 	b.w	800e7dc <udp_unbind>

0800f27c <Network::MacAddressCopyTo(unsigned char*)>:
 800f27c:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800f280:	3901      	subs	r1, #1
 800f282:	30a2      	adds	r0, #162	; 0xa2
 800f284:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f288:	4283      	cmp	r3, r0
 800f28a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800f28e:	d1f9      	bne.n	800f284 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800f290:	4770      	bx	lr

0800f292 <Network::JoinGroup(int, unsigned int)>:
 800f292:	4610      	mov	r0, r2
 800f294:	f000 bf02 	b.w	801009c <igmp_join>

0800f298 <Network::SetDefaultIp()>:
 800f298:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800f29c:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800f2a0:	041b      	lsls	r3, r3, #16
 800f2a2:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800f2a6:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800f2aa:	3302      	adds	r3, #2
 800f2ac:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800f2b0:	22ff      	movs	r2, #255	; 0xff
 800f2b2:	6103      	str	r3, [r0, #16]
 800f2b4:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800f2b8:	4770      	bx	lr
	...

0800f2bc <Network::Init(NetworkParamsStore*)>:
 800f2bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2c0:	b08b      	sub	sp, #44	; 0x2c
 800f2c2:	4604      	mov	r4, r0
 800f2c4:	a806      	add	r0, sp, #24
 800f2c6:	f000 f9b1 	bl	800f62c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800f2ca:	a806      	add	r0, sp, #24
 800f2cc:	f000 f9be 	bl	800f64c <NetworkParams::Load()>
 800f2d0:	b110      	cbz	r0, 800f2d8 <Network::Init(NetworkParamsStore*)+0x1c>
 800f2d2:	a806      	add	r0, sp, #24
 800f2d4:	f000 fba3 	bl	800fa1e <NetworkParams::Dump()>
 800f2d8:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800f2dc:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800f504 <Network::Init(NetworkParamsStore*)+0x248>
 800f2e0:	4628      	mov	r0, r5
 800f2e2:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800f2e6:	f7f9 fe55 	bl	8008f94 <NetworkDisplay::ShowEmacStart()>
 800f2ea:	4638      	mov	r0, r7
 800f2ec:	f002 fd42 	bl	8011d74 <emac_start>
 800f2f0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800f2f4:	f104 061c 	add.w	r6, r4, #28
 800f2f8:	9307      	str	r3, [sp, #28]
 800f2fa:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800f2fe:	9308      	str	r3, [sp, #32]
 800f300:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800f304:	9309      	str	r3, [sp, #36]	; 0x24
 800f306:	f898 3014 	ldrb.w	r3, [r8, #20]
 800f30a:	7063      	strb	r3, [r4, #1]
 800f30c:	f8d8 3000 	ldr.w	r3, [r8]
 800f310:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800f314:	bf18      	it	ne
 800f316:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800f31a:	061b      	lsls	r3, r3, #24
 800f31c:	bf58      	it	pl
 800f31e:	2300      	movpl	r3, #0
 800f320:	60a2      	str	r2, [r4, #8]
 800f322:	bf48      	it	mi
 800f324:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800f328:	60e3      	str	r3, [r4, #12]
 800f32a:	f898 3015 	ldrb.w	r3, [r8, #21]
 800f32e:	2b00      	cmp	r3, #0
 800f330:	d15e      	bne.n	800f3f0 <Network::Init(NetworkParamsStore*)+0x134>
 800f332:	4632      	mov	r2, r6
 800f334:	4874      	ldr	r0, [pc, #464]	; (800f508 <Network::Init(NetworkParamsStore*)+0x24c>)
 800f336:	f810 1b01 	ldrb.w	r1, [r0], #1
 800f33a:	f103 0c01 	add.w	ip, r3, #1
 800f33e:	b119      	cbz	r1, 800f348 <Network::Init(NetworkParamsStore*)+0x8c>
 800f340:	4663      	mov	r3, ip
 800f342:	f802 1b01 	strb.w	r1, [r2], #1
 800f346:	e7f6      	b.n	800f336 <Network::Init(NetworkParamsStore*)+0x7a>
 800f348:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800f34c:	18e1      	adds	r1, r4, r3
 800f34e:	0910      	lsrs	r0, r2, #4
 800f350:	2a9f      	cmp	r2, #159	; 0x9f
 800f352:	f002 020f 	and.w	r2, r2, #15
 800f356:	bf94      	ite	ls
 800f358:	3030      	addls	r0, #48	; 0x30
 800f35a:	3037      	addhi	r0, #55	; 0x37
 800f35c:	2a09      	cmp	r2, #9
 800f35e:	bf94      	ite	ls
 800f360:	3230      	addls	r2, #48	; 0x30
 800f362:	3237      	addhi	r2, #55	; 0x37
 800f364:	44a4      	add	ip, r4
 800f366:	7708      	strb	r0, [r1, #28]
 800f368:	f88c 201c 	strb.w	r2, [ip, #28]
 800f36c:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800f370:	f103 0e02 	add.w	lr, r3, #2
 800f374:	0910      	lsrs	r0, r2, #4
 800f376:	2a9f      	cmp	r2, #159	; 0x9f
 800f378:	f002 020f 	and.w	r2, r2, #15
 800f37c:	bf94      	ite	ls
 800f37e:	3030      	addls	r0, #48	; 0x30
 800f380:	3037      	addhi	r0, #55	; 0x37
 800f382:	f103 0903 	add.w	r9, r3, #3
 800f386:	2a09      	cmp	r2, #9
 800f388:	44a6      	add	lr, r4
 800f38a:	f88e 001c 	strb.w	r0, [lr, #28]
 800f38e:	bf94      	ite	ls
 800f390:	3230      	addls	r2, #48	; 0x30
 800f392:	3237      	addhi	r2, #55	; 0x37
 800f394:	eb04 0009 	add.w	r0, r4, r9
 800f398:	7702      	strb	r2, [r0, #28]
 800f39a:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800f39e:	f103 0c04 	add.w	ip, r3, #4
 800f3a2:	0910      	lsrs	r0, r2, #4
 800f3a4:	2a9f      	cmp	r2, #159	; 0x9f
 800f3a6:	f002 020f 	and.w	r2, r2, #15
 800f3aa:	bf94      	ite	ls
 800f3ac:	3030      	addls	r0, #48	; 0x30
 800f3ae:	3037      	addhi	r0, #55	; 0x37
 800f3b0:	3305      	adds	r3, #5
 800f3b2:	2a09      	cmp	r2, #9
 800f3b4:	4423      	add	r3, r4
 800f3b6:	44a4      	add	ip, r4
 800f3b8:	bf94      	ite	ls
 800f3ba:	3230      	addls	r2, #48	; 0x30
 800f3bc:	3237      	addhi	r2, #55	; 0x37
 800f3be:	f88c 001c 	strb.w	r0, [ip, #28]
 800f3c2:	771a      	strb	r2, [r3, #28]
 800f3c4:	2300      	movs	r3, #0
 800f3c6:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800f3ca:	7863      	ldrb	r3, [r4, #1]
 800f3cc:	b95b      	cbnz	r3, 800f3e6 <Network::Init(NetworkParamsStore*)+0x12a>
 800f3ce:	9b07      	ldr	r3, [sp, #28]
 800f3d0:	b9b3      	cbnz	r3, 800f400 <Network::Init(NetworkParamsStore*)+0x144>
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	f7ff ff60 	bl	800f298 <Network::SetDefaultIp()>
 800f3d8:	6923      	ldr	r3, [r4, #16]
 800f3da:	69a2      	ldr	r2, [r4, #24]
 800f3dc:	9307      	str	r3, [sp, #28]
 800f3de:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800f3e2:	7863      	ldrb	r3, [r4, #1]
 800f3e4:	b19b      	cbz	r3, 800f40e <Network::Init(NetworkParamsStore*)+0x152>
 800f3e6:	2101      	movs	r1, #1
 800f3e8:	4628      	mov	r0, r5
 800f3ea:	f7f9 fdd6 	bl	8008f9a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f3ee:	e00e      	b.n	800f40e <Network::Init(NetworkParamsStore*)+0x152>
 800f3f0:	4630      	mov	r0, r6
 800f3f2:	4946      	ldr	r1, [pc, #280]	; (800f50c <Network::Init(NetworkParamsStore*)+0x250>)
 800f3f4:	f7ff fefa 	bl	800f1ec <strncpy.constprop.0.isra.0>
 800f3f8:	2300      	movs	r3, #0
 800f3fa:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800f3fe:	e7e4      	b.n	800f3ca <Network::Init(NetworkParamsStore*)+0x10e>
 800f400:	69a1      	ldr	r1, [r4, #24]
 800f402:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800f406:	4053      	eors	r3, r2
 800f408:	420b      	tst	r3, r1
 800f40a:	d000      	beq.n	800f40e <Network::Init(NetworkParamsStore*)+0x152>
 800f40c:	9209      	str	r2, [sp, #36]	; 0x24
 800f40e:	1ce3      	adds	r3, r4, #3
 800f410:	f104 0901 	add.w	r9, r4, #1
 800f414:	9302      	str	r3, [sp, #8]
 800f416:	9300      	str	r3, [sp, #0]
 800f418:	4632      	mov	r2, r6
 800f41a:	464b      	mov	r3, r9
 800f41c:	4638      	mov	r0, r7
 800f41e:	a907      	add	r1, sp, #28
 800f420:	f7f7 fe96 	bl	8007150 <net_init>
 800f424:	78e3      	ldrb	r3, [r4, #3]
 800f426:	b11b      	cbz	r3, 800f430 <Network::Init(NetworkParamsStore*)+0x174>
 800f428:	2104      	movs	r1, #4
 800f42a:	4628      	mov	r0, r5
 800f42c:	f7f9 fdb5 	bl	8008f9a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f430:	f898 3014 	ldrb.w	r3, [r8, #20]
 800f434:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800f438:	9304      	str	r3, [sp, #16]
 800f43a:	233c      	movs	r3, #60	; 0x3c
 800f43c:	fb03 f30a 	mul.w	r3, r3, sl
 800f440:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800f510 <Network::Init(NetworkParamsStore*)+0x254>
 800f444:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800f514 <Network::Init(NetworkParamsStore*)+0x258>
 800f448:	9303      	str	r3, [sp, #12]
 800f44a:	78e3      	ldrb	r3, [r4, #3]
 800f44c:	b95b      	cbnz	r3, 800f466 <Network::Init(NetworkParamsStore*)+0x1aa>
 800f44e:	9b07      	ldr	r3, [sp, #28]
 800f450:	4628      	mov	r0, r5
 800f452:	6123      	str	r3, [r4, #16]
 800f454:	9b08      	ldr	r3, [sp, #32]
 800f456:	61a3      	str	r3, [r4, #24]
 800f458:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f45a:	6163      	str	r3, [r4, #20]
 800f45c:	f7f9 fd9b 	bl	8008f96 <NetworkDisplay::ShowIp()>
 800f460:	b00b      	add	sp, #44	; 0x2c
 800f462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f466:	f1ba 0f00 	cmp.w	sl, #0
 800f46a:	d0f0      	beq.n	800f44e <Network::Init(NetworkParamsStore*)+0x192>
 800f46c:	9b04      	ldr	r3, [sp, #16]
 800f46e:	2b00      	cmp	r3, #0
 800f470:	d0ed      	beq.n	800f44e <Network::Init(NetworkParamsStore*)+0x192>
 800f472:	2104      	movs	r1, #4
 800f474:	f8d8 0000 	ldr.w	r0, [r8]
 800f478:	f001 fcce 	bl	8010e18 <LedBlink::SetMode(ledblink::Mode)>
 800f47c:	2103      	movs	r1, #3
 800f47e:	4628      	mov	r0, r5
 800f480:	f7f9 fd8b 	bl	8008f9a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f484:	2000      	movs	r0, #0
 800f486:	f001 ff73 	bl	8011370 <time>
 800f48a:	9005      	str	r0, [sp, #20]
 800f48c:	2000      	movs	r0, #0
 800f48e:	f001 ff6f 	bl	8011370 <time>
 800f492:	9b05      	ldr	r3, [sp, #20]
 800f494:	1ac0      	subs	r0, r0, r3
 800f496:	9b03      	ldr	r3, [sp, #12]
 800f498:	4298      	cmp	r0, r3
 800f49a:	da1a      	bge.n	800f4d2 <Network::Init(NetworkParamsStore*)+0x216>
 800f49c:	f8d8 3000 	ldr.w	r3, [r8]
 800f4a0:	491d      	ldr	r1, [pc, #116]	; (800f518 <Network::Init(NetworkParamsStore*)+0x25c>)
 800f4a2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800f4a6:	f1bc 0f00 	cmp.w	ip, #0
 800f4aa:	d0ef      	beq.n	800f48c <Network::Init(NetworkParamsStore*)+0x1d0>
 800f4ac:	6808      	ldr	r0, [r1, #0]
 800f4ae:	695a      	ldr	r2, [r3, #20]
 800f4b0:	1a80      	subs	r0, r0, r2
 800f4b2:	4584      	cmp	ip, r0
 800f4b4:	d8ea      	bhi.n	800f48c <Network::Init(NetworkParamsStore*)+0x1d0>
 800f4b6:	6808      	ldr	r0, [r1, #0]
 800f4b8:	6158      	str	r0, [r3, #20]
 800f4ba:	6918      	ldr	r0, [r3, #16]
 800f4bc:	2801      	cmp	r0, #1
 800f4be:	f080 0201 	eor.w	r2, r0, #1
 800f4c2:	611a      	str	r2, [r3, #16]
 800f4c4:	bf16      	itet	ne
 800f4c6:	2301      	movne	r3, #1
 800f4c8:	f8cb 0014 	streq.w	r0, [fp, #20]
 800f4cc:	f8cb 3010 	strne.w	r3, [fp, #16]
 800f4d0:	e7dc      	b.n	800f48c <Network::Init(NetworkParamsStore*)+0x1d0>
 800f4d2:	2101      	movs	r1, #1
 800f4d4:	4628      	mov	r0, r5
 800f4d6:	f7f9 fd60 	bl	8008f9a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800f4da:	2101      	movs	r1, #1
 800f4dc:	f8d8 0000 	ldr.w	r0, [r8]
 800f4e0:	f001 fc9a 	bl	8010e18 <LedBlink::SetMode(ledblink::Mode)>
 800f4e4:	2301      	movs	r3, #1
 800f4e6:	7063      	strb	r3, [r4, #1]
 800f4e8:	2300      	movs	r3, #0
 800f4ea:	70e3      	strb	r3, [r4, #3]
 800f4ec:	9b02      	ldr	r3, [sp, #8]
 800f4ee:	4632      	mov	r2, r6
 800f4f0:	9300      	str	r3, [sp, #0]
 800f4f2:	4638      	mov	r0, r7
 800f4f4:	464b      	mov	r3, r9
 800f4f6:	a907      	add	r1, sp, #28
 800f4f8:	f7f7 fe2a 	bl	8007150 <net_init>
 800f4fc:	7863      	ldrb	r3, [r4, #1]
 800f4fe:	2b00      	cmp	r3, #0
 800f500:	d0a3      	beq.n	800f44a <Network::Init(NetworkParamsStore*)+0x18e>
 800f502:	e7a4      	b.n	800f44e <Network::Init(NetworkParamsStore*)+0x192>
 800f504:	20009074 	andcs	r9, r0, r4, ror r0
 800f508:	08014a08 	stmdaeq	r1, {r3, r9, fp, lr}
 800f50c:	20009089 	andcs	r9, r0, r9, lsl #1
 800f510:	2000978c 	andcs	r9, r0, ip, lsl #15
 800f514:	40011000 	andmi	r1, r1, r0
 800f518:	200097a4 	andcs	r9, r0, r4, lsr #15

0800f51c <Network::Print()>:
 800f51c:	b530      	push	{r4, r5, lr}
 800f51e:	4604      	mov	r4, r0
 800f520:	b085      	sub	sp, #20
 800f522:	4832      	ldr	r0, [pc, #200]	; (800f5ec <Network::Print()+0xd0>)
 800f524:	f7fa f844 	bl	80095b0 <printf>
 800f528:	f104 011c 	add.w	r1, r4, #28
 800f52c:	4830      	ldr	r0, [pc, #192]	; (800f5f0 <Network::Print()+0xd4>)
 800f52e:	f7fa f83f 	bl	80095b0 <printf>
 800f532:	6861      	ldr	r1, [r4, #4]
 800f534:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800f538:	482e      	ldr	r0, [pc, #184]	; (800f5f4 <Network::Print()+0xd8>)
 800f53a:	f7fa f839 	bl	80095b0 <printf>
 800f53e:	69a0      	ldr	r0, [r4, #24]
 800f540:	f7f9 f980 	bl	8008844 <__popcountsi2>
 800f544:	6925      	ldr	r5, [r4, #16]
 800f546:	9001      	str	r0, [sp, #4]
 800f548:	0e2b      	lsrs	r3, r5, #24
 800f54a:	9300      	str	r3, [sp, #0]
 800f54c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800f550:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800f554:	b2e9      	uxtb	r1, r5
 800f556:	4828      	ldr	r0, [pc, #160]	; (800f5f8 <Network::Print()+0xdc>)
 800f558:	f7fa f82a 	bl	80095b0 <printf>
 800f55c:	69a1      	ldr	r1, [r4, #24]
 800f55e:	4827      	ldr	r0, [pc, #156]	; (800f5fc <Network::Print()+0xe0>)
 800f560:	0e0b      	lsrs	r3, r1, #24
 800f562:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f566:	9300      	str	r3, [sp, #0]
 800f568:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f56c:	b2c9      	uxtb	r1, r1
 800f56e:	f7fa f81f 	bl	80095b0 <printf>
 800f572:	6961      	ldr	r1, [r4, #20]
 800f574:	4822      	ldr	r0, [pc, #136]	; (800f600 <Network::Print()+0xe4>)
 800f576:	0e0b      	lsrs	r3, r1, #24
 800f578:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f57c:	9300      	str	r3, [sp, #0]
 800f57e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f582:	b2c9      	uxtb	r1, r1
 800f584:	f7fa f814 	bl	80095b0 <printf>
 800f588:	69a3      	ldr	r3, [r4, #24]
 800f58a:	6921      	ldr	r1, [r4, #16]
 800f58c:	481d      	ldr	r0, [pc, #116]	; (800f604 <Network::Print()+0xe8>)
 800f58e:	ea61 0103 	orn	r1, r1, r3
 800f592:	0e0b      	lsrs	r3, r1, #24
 800f594:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800f598:	9300      	str	r3, [sp, #0]
 800f59a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800f59e:	b2c9      	uxtb	r1, r1
 800f5a0:	f7fa f806 	bl	80095b0 <printf>
 800f5a4:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800f5a8:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800f5ac:	9302      	str	r3, [sp, #8]
 800f5ae:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800f5b2:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800f5b6:	9301      	str	r3, [sp, #4]
 800f5b8:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800f5bc:	4812      	ldr	r0, [pc, #72]	; (800f608 <Network::Print()+0xec>)
 800f5be:	9300      	str	r3, [sp, #0]
 800f5c0:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800f5c4:	f7f9 fff4 	bl	80095b0 <printf>
 800f5c8:	4b10      	ldr	r3, [pc, #64]	; (800f60c <Network::Print()+0xf0>)
 800f5ca:	681b      	ldr	r3, [r3, #0]
 800f5cc:	78da      	ldrb	r2, [r3, #3]
 800f5ce:	b952      	cbnz	r2, 800f5e6 <Network::Print()+0xca>
 800f5d0:	785b      	ldrb	r3, [r3, #1]
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	bf14      	ite	ne
 800f5d6:	2144      	movne	r1, #68	; 0x44
 800f5d8:	2153      	moveq	r1, #83	; 0x53
 800f5da:	480d      	ldr	r0, [pc, #52]	; (800f610 <Network::Print()+0xf4>)
 800f5dc:	b005      	add	sp, #20
 800f5de:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f5e2:	f7f9 bfe5 	b.w	80095b0 <printf>
 800f5e6:	215a      	movs	r1, #90	; 0x5a
 800f5e8:	e7f7      	b.n	800f5da <Network::Print()+0xbe>
 800f5ea:	bf00      	nop
 800f5ec:	08014a14 	stmdaeq	r1, {r2, r4, r9, fp, lr}
 800f5f0:	08014a1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, fp, lr}
 800f5f4:	08014a2e 	stmdaeq	r1, {r1, r2, r3, r5, r9, fp, lr}
 800f5f8:	08014a43 	stmdaeq	r1, {r0, r1, r6, r9, fp, lr}
 800f5fc:	08014a60 	stmdaeq	r1, {r5, r6, r9, fp, lr}
 800f600:	08014a7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, fp, lr}
 800f604:	08014a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, lr}
 800f608:	08014aae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, fp, lr}
 800f60c:	20009070 	andcs	r9, r0, r0, ror r0
 800f610:	08014ada 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, fp, lr}

0800f614 <Network::TcpBegin(unsigned short)>:
 800f614:	4608      	mov	r0, r1
 800f616:	f7fe bffd 	b.w	800e614 <tcp_begin>

0800f61a <Network::TcpRead(int, unsigned char const**)>:
 800f61a:	4608      	mov	r0, r1
 800f61c:	4611      	mov	r1, r2
 800f61e:	f7ff b837 	b.w	800e690 <tcp_read>

0800f622 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800f622:	4608      	mov	r0, r1
 800f624:	4611      	mov	r1, r2
 800f626:	461a      	mov	r2, r3
 800f628:	f7ff b80e 	b.w	800e648 <tcp_write>

0800f62c <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800f62c:	4b06      	ldr	r3, [pc, #24]	; (800f648 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800f62e:	b510      	push	{r4, lr}
 800f630:	225e      	movs	r2, #94	; 0x5e
 800f632:	4604      	mov	r4, r0
 800f634:	6001      	str	r1, [r0, #0]
 800f636:	2100      	movs	r1, #0
 800f638:	4618      	mov	r0, r3
 800f63a:	f001 fd8d 	bl	8011158 <memset>
 800f63e:	2201      	movs	r2, #1
 800f640:	7502      	strb	r2, [r0, #20]
 800f642:	4620      	mov	r0, r4
 800f644:	bd10      	pop	{r4, pc}
 800f646:	bf00      	nop
 800f648:	20009074 	andcs	r9, r0, r4, ror r0

0800f64c <NetworkParams::Load()>:
 800f64c:	b508      	push	{r3, lr}
 800f64e:	2300      	movs	r3, #0
 800f650:	4905      	ldr	r1, [pc, #20]	; (800f668 <NetworkParams::Load()+0x1c>)
 800f652:	6800      	ldr	r0, [r0, #0]
 800f654:	700b      	strb	r3, [r1, #0]
 800f656:	704b      	strb	r3, [r1, #1]
 800f658:	708b      	strb	r3, [r1, #2]
 800f65a:	70cb      	strb	r3, [r1, #3]
 800f65c:	b118      	cbz	r0, 800f666 <NetworkParams::Load()+0x1a>
 800f65e:	6803      	ldr	r3, [r0, #0]
 800f660:	68db      	ldr	r3, [r3, #12]
 800f662:	4798      	blx	r3
 800f664:	2001      	movs	r0, #1
 800f666:	bd08      	pop	{r3, pc}
 800f668:	20009074 	andcs	r9, r0, r4, ror r0

0800f66c <NetworkParams::Load(char const*, unsigned int)>:
 800f66c:	6803      	ldr	r3, [r0, #0]
 800f66e:	b1eb      	cbz	r3, 800f6ac <NetworkParams::Load(char const*, unsigned int)+0x40>
 800f670:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f672:	2300      	movs	r3, #0
 800f674:	460e      	mov	r6, r1
 800f676:	4617      	mov	r7, r2
 800f678:	4605      	mov	r5, r0
 800f67a:	4c0d      	ldr	r4, [pc, #52]	; (800f6b0 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800f67c:	4602      	mov	r2, r0
 800f67e:	490d      	ldr	r1, [pc, #52]	; (800f6b4 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800f680:	4668      	mov	r0, sp
 800f682:	7023      	strb	r3, [r4, #0]
 800f684:	7063      	strb	r3, [r4, #1]
 800f686:	70a3      	strb	r3, [r4, #2]
 800f688:	70e3      	strb	r3, [r4, #3]
 800f68a:	f000 fef5 	bl	8010478 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f68e:	463a      	mov	r2, r7
 800f690:	4631      	mov	r1, r6
 800f692:	4668      	mov	r0, sp
 800f694:	f000 fef4 	bl	8010480 <ReadConfigFile::Read(char const*, unsigned int)>
 800f698:	6828      	ldr	r0, [r5, #0]
 800f69a:	4621      	mov	r1, r4
 800f69c:	6803      	ldr	r3, [r0, #0]
 800f69e:	689b      	ldr	r3, [r3, #8]
 800f6a0:	4798      	blx	r3
 800f6a2:	4668      	mov	r0, sp
 800f6a4:	f000 feeb 	bl	801047e <ReadConfigFile::~ReadConfigFile()>
 800f6a8:	b003      	add	sp, #12
 800f6aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6ac:	4770      	bx	lr
 800f6ae:	bf00      	nop
 800f6b0:	20009074 	andcs	r9, r0, r4, ror r0
 800f6b4:	0800f7e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}

0800f6b8 <NetworkParams::callbackFunction(char const*)>:
 800f6b8:	b530      	push	{r4, r5, lr}
 800f6ba:	460c      	mov	r4, r1
 800f6bc:	b085      	sub	sp, #20
 800f6be:	4620      	mov	r0, r4
 800f6c0:	4942      	ldr	r1, [pc, #264]	; (800f7cc <NetworkParams::callbackFunction(char const*)+0x114>)
 800f6c2:	f10d 0207 	add.w	r2, sp, #7
 800f6c6:	f001 f812 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f6ca:	b980      	cbnz	r0, 800f6ee <NetworkParams::callbackFunction(char const*)+0x36>
 800f6cc:	4940      	ldr	r1, [pc, #256]	; (800f7d0 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f6ce:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f6d2:	680b      	ldr	r3, [r1, #0]
 800f6d4:	b142      	cbz	r2, 800f6e8 <NetworkParams::callbackFunction(char const*)+0x30>
 800f6d6:	f023 0301 	bic.w	r3, r3, #1
 800f6da:	3a00      	subs	r2, #0
 800f6dc:	bf18      	it	ne
 800f6de:	2201      	movne	r2, #1
 800f6e0:	600b      	str	r3, [r1, #0]
 800f6e2:	750a      	strb	r2, [r1, #20]
 800f6e4:	b005      	add	sp, #20
 800f6e6:	bd30      	pop	{r4, r5, pc}
 800f6e8:	f043 0301 	orr.w	r3, r3, #1
 800f6ec:	e7f5      	b.n	800f6da <NetworkParams::callbackFunction(char const*)+0x22>
 800f6ee:	4620      	mov	r0, r4
 800f6f0:	4938      	ldr	r1, [pc, #224]	; (800f7d4 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800f6f2:	f10d 0207 	add.w	r2, sp, #7
 800f6f6:	f000 fffa 	bl	80106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f6fa:	b988      	cbnz	r0, 800f720 <NetworkParams::callbackFunction(char const*)+0x68>
 800f6fc:	4a34      	ldr	r2, [pc, #208]	; (800f7d0 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f6fe:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f702:	6813      	ldr	r3, [r2, #0]
 800f704:	1e4d      	subs	r5, r1, #1
 800f706:	2d04      	cmp	r5, #4
 800f708:	bf97      	itett	ls
 800f70a:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f70e:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f712:	6013      	strls	r3, [r2, #0]
 800f714:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800f718:	bf84      	itt	hi
 800f71a:	6013      	strhi	r3, [r2, #0]
 800f71c:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800f720:	4620      	mov	r0, r4
 800f722:	492d      	ldr	r1, [pc, #180]	; (800f7d8 <NetworkParams::callbackFunction(char const*)+0x120>)
 800f724:	aa02      	add	r2, sp, #8
 800f726:	f000 ff5b 	bl	80105e0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f72a:	b9d0      	cbnz	r0, 800f762 <NetworkParams::callbackFunction(char const*)+0xaa>
 800f72c:	9b02      	ldr	r3, [sp, #8]
 800f72e:	b2d9      	uxtb	r1, r3
 800f730:	29ac      	cmp	r1, #172	; 0xac
 800f732:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f736:	d00a      	beq.n	800f74e <NetworkParams::callbackFunction(char const*)+0x96>
 800f738:	29c0      	cmp	r1, #192	; 0xc0
 800f73a:	d00c      	beq.n	800f756 <NetworkParams::callbackFunction(char const*)+0x9e>
 800f73c:	290a      	cmp	r1, #10
 800f73e:	d10d      	bne.n	800f75c <NetworkParams::callbackFunction(char const*)+0xa4>
 800f740:	4a23      	ldr	r2, [pc, #140]	; (800f7d0 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f742:	6053      	str	r3, [r2, #4]
 800f744:	6813      	ldr	r3, [r2, #0]
 800f746:	f043 0302 	orr.w	r3, r3, #2
 800f74a:	6013      	str	r3, [r2, #0]
 800f74c:	e7ca      	b.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f74e:	3a10      	subs	r2, #16
 800f750:	2a0f      	cmp	r2, #15
 800f752:	d8c7      	bhi.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f754:	e7f4      	b.n	800f740 <NetworkParams::callbackFunction(char const*)+0x88>
 800f756:	2aa8      	cmp	r2, #168	; 0xa8
 800f758:	d1c4      	bne.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f75a:	e7f1      	b.n	800f740 <NetworkParams::callbackFunction(char const*)+0x88>
 800f75c:	2b00      	cmp	r3, #0
 800f75e:	d0ef      	beq.n	800f740 <NetworkParams::callbackFunction(char const*)+0x88>
 800f760:	e7c0      	b.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f762:	4620      	mov	r0, r4
 800f764:	491d      	ldr	r1, [pc, #116]	; (800f7dc <NetworkParams::callbackFunction(char const*)+0x124>)
 800f766:	aa02      	add	r2, sp, #8
 800f768:	f000 ff3a 	bl	80105e0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f76c:	b970      	cbnz	r0, 800f78c <NetworkParams::callbackFunction(char const*)+0xd4>
 800f76e:	9a02      	ldr	r2, [sp, #8]
 800f770:	2a00      	cmp	r2, #0
 800f772:	d0b7      	beq.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f774:	ba13      	rev	r3, r2
 800f776:	43d9      	mvns	r1, r3
 800f778:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800f77c:	d1b2      	bne.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f77e:	4b14      	ldr	r3, [pc, #80]	; (800f7d0 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f780:	609a      	str	r2, [r3, #8]
 800f782:	681a      	ldr	r2, [r3, #0]
 800f784:	f042 0204 	orr.w	r2, r2, #4
 800f788:	601a      	str	r2, [r3, #0]
 800f78a:	e7ab      	b.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f78c:	4620      	mov	r0, r4
 800f78e:	4914      	ldr	r1, [pc, #80]	; (800f7e0 <NetworkParams::callbackFunction(char const*)+0x128>)
 800f790:	aa02      	add	r2, sp, #8
 800f792:	f000 ff25 	bl	80105e0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800f796:	4d0e      	ldr	r5, [pc, #56]	; (800f7d0 <NetworkParams::callbackFunction(char const*)+0x118>)
 800f798:	b930      	cbnz	r0, 800f7a8 <NetworkParams::callbackFunction(char const*)+0xf0>
 800f79a:	9b02      	ldr	r3, [sp, #8]
 800f79c:	60eb      	str	r3, [r5, #12]
 800f79e:	682b      	ldr	r3, [r5, #0]
 800f7a0:	f043 0308 	orr.w	r3, r3, #8
 800f7a4:	602b      	str	r3, [r5, #0]
 800f7a6:	e79d      	b.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f7a8:	233f      	movs	r3, #63	; 0x3f
 800f7aa:	4620      	mov	r0, r4
 800f7ac:	9303      	str	r3, [sp, #12]
 800f7ae:	490d      	ldr	r1, [pc, #52]	; (800f7e4 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800f7b0:	ab03      	add	r3, sp, #12
 800f7b2:	f105 0215 	add.w	r2, r5, #21
 800f7b6:	f000 fe97 	bl	80104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f7ba:	2800      	cmp	r0, #0
 800f7bc:	d192      	bne.n	800f6e4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800f7be:	9b03      	ldr	r3, [sp, #12]
 800f7c0:	442b      	add	r3, r5
 800f7c2:	7558      	strb	r0, [r3, #21]
 800f7c4:	682b      	ldr	r3, [r5, #0]
 800f7c6:	f043 0320 	orr.w	r3, r3, #32
 800f7ca:	e7eb      	b.n	800f7a4 <NetworkParams::callbackFunction(char const*)+0xec>
 800f7cc:	08014b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, lr}
 800f7d0:	20009074 	andcs	r9, r0, r4, ror r0
 800f7d4:	08014b10 	stmdaeq	r1, {r4, r8, r9, fp, lr}
 800f7d8:	08014af5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, fp, lr}
 800f7dc:	08014b29 	stmdaeq	r1, {r0, r3, r5, r8, r9, fp, lr}
 800f7e0:	08014b00 	stmdaeq	r1, {r8, r9, fp, lr}
 800f7e4:	08014b20 	stmdaeq	r1, {r5, r8, r9, fp, lr}

0800f7e8 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800f7e8:	f7ff bf66 	b.w	800f6b8 <NetworkParams::callbackFunction(char const*)>

0800f7ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800f7ec:	b530      	push	{r4, r5, lr}
 800f7ee:	4614      	mov	r4, r2
 800f7f0:	461d      	mov	r5, r3
 800f7f2:	b087      	sub	sp, #28
 800f7f4:	2900      	cmp	r1, #0
 800f7f6:	d040      	beq.n	800f87a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800f7f8:	225e      	movs	r2, #94	; 0x5e
 800f7fa:	4871      	ldr	r0, [pc, #452]	; (800f9c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f7fc:	f001 fc95 	bl	801112a <memmove>
 800f800:	4622      	mov	r2, r4
 800f802:	462b      	mov	r3, r5
 800f804:	496f      	ldr	r1, [pc, #444]	; (800f9c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800f806:	a803      	add	r0, sp, #12
 800f808:	f000 fd96 	bl	8010338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f80c:	4c6c      	ldr	r4, [pc, #432]	; (800f9c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f80e:	6823      	ldr	r3, [r4, #0]
 800f810:	0799      	lsls	r1, r3, #30
 800f812:	bf5f      	itttt	pl
 800f814:	4a6c      	ldrpl	r2, [pc, #432]	; (800f9c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f816:	6812      	ldrpl	r2, [r2, #0]
 800f818:	6912      	ldrpl	r2, [r2, #16]
 800f81a:	6062      	strpl	r2, [r4, #4]
 800f81c:	075a      	lsls	r2, r3, #29
 800f81e:	bf5f      	itttt	pl
 800f820:	4a69      	ldrpl	r2, [pc, #420]	; (800f9c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f822:	6812      	ldrpl	r2, [r2, #0]
 800f824:	6992      	ldrpl	r2, [r2, #24]
 800f826:	60a2      	strpl	r2, [r4, #8]
 800f828:	071d      	lsls	r5, r3, #28
 800f82a:	bf5f      	itttt	pl
 800f82c:	4a66      	ldrpl	r2, [pc, #408]	; (800f9c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f82e:	6812      	ldrpl	r2, [r2, #0]
 800f830:	6952      	ldrpl	r2, [r2, #20]
 800f832:	60e2      	strpl	r2, [r4, #12]
 800f834:	0698      	lsls	r0, r3, #26
 800f836:	d40c      	bmi.n	800f852 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800f838:	223f      	movs	r2, #63	; 0x3f
 800f83a:	4b63      	ldr	r3, [pc, #396]	; (800f9c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800f83c:	4863      	ldr	r0, [pc, #396]	; (800f9cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f83e:	681b      	ldr	r3, [r3, #0]
 800f840:	331b      	adds	r3, #27
 800f842:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f846:	b9f1      	cbnz	r1, 800f886 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800f848:	f001 fc86 	bl	8011158 <memset>
 800f84c:	2300      	movs	r3, #0
 800f84e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800f852:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f856:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f85a:	42a9      	cmp	r1, r5
 800f85c:	d226      	bcs.n	800f8ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800f85e:	9803      	ldr	r0, [sp, #12]
 800f860:	1a6d      	subs	r5, r5, r1
 800f862:	4408      	add	r0, r1
 800f864:	6821      	ldr	r1, [r4, #0]
 800f866:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f86a:	07c9      	lsls	r1, r1, #31
 800f86c:	7d23      	ldrb	r3, [r4, #20]
 800f86e:	d40f      	bmi.n	800f890 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800f870:	b97a      	cbnz	r2, 800f892 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800f872:	9300      	str	r3, [sp, #0]
 800f874:	4a56      	ldr	r2, [pc, #344]	; (800f9d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f876:	4b57      	ldr	r3, [pc, #348]	; (800f9d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f878:	e00e      	b.n	800f898 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800f87a:	6800      	ldr	r0, [r0, #0]
 800f87c:	4950      	ldr	r1, [pc, #320]	; (800f9c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800f87e:	6803      	ldr	r3, [r0, #0]
 800f880:	68db      	ldr	r3, [r3, #12]
 800f882:	4798      	blx	r3
 800f884:	e7bc      	b.n	800f800 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800f886:	3a01      	subs	r2, #1
 800f888:	f800 1b01 	strb.w	r1, [r0], #1
 800f88c:	d1d9      	bne.n	800f842 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800f88e:	e7dd      	b.n	800f84c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800f890:	b30a      	cbz	r2, 800f8d6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800f892:	9300      	str	r3, [sp, #0]
 800f894:	4a50      	ldr	r2, [pc, #320]	; (800f9d8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f896:	4b4f      	ldr	r3, [pc, #316]	; (800f9d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f898:	4629      	mov	r1, r5
 800f89a:	f7f9 fe99 	bl	80095d0 <snprintf>
 800f89e:	4285      	cmp	r5, r0
 800f8a0:	bfa2      	ittt	ge
 800f8a2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f8a6:	18c0      	addge	r0, r0, r3
 800f8a8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f8ac:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f8b0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f8b4:	42a9      	cmp	r1, r5
 800f8b6:	d221      	bcs.n	800f8fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800f8b8:	9803      	ldr	r0, [sp, #12]
 800f8ba:	1a6d      	subs	r5, r5, r1
 800f8bc:	4408      	add	r0, r1
 800f8be:	6821      	ldr	r1, [r4, #0]
 800f8c0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f8c4:	05c9      	lsls	r1, r1, #23
 800f8c6:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800f8ca:	d408      	bmi.n	800f8de <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800f8cc:	b94a      	cbnz	r2, 800f8e2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800f8ce:	9300      	str	r3, [sp, #0]
 800f8d0:	4a3f      	ldr	r2, [pc, #252]	; (800f9d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800f8d2:	4b42      	ldr	r3, [pc, #264]	; (800f9dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f8d4:	e008      	b.n	800f8e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800f8d6:	9300      	str	r3, [sp, #0]
 800f8d8:	4a41      	ldr	r2, [pc, #260]	; (800f9e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f8da:	4b3e      	ldr	r3, [pc, #248]	; (800f9d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800f8dc:	e7dc      	b.n	800f898 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800f8de:	2a00      	cmp	r2, #0
 800f8e0:	d03e      	beq.n	800f960 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800f8e2:	9300      	str	r3, [sp, #0]
 800f8e4:	4a3c      	ldr	r2, [pc, #240]	; (800f9d8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800f8e6:	4b3d      	ldr	r3, [pc, #244]	; (800f9dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f8e8:	4629      	mov	r1, r5
 800f8ea:	f7f9 fe71 	bl	80095d0 <snprintf>
 800f8ee:	4285      	cmp	r5, r0
 800f8f0:	bfa2      	ittt	ge
 800f8f2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f8f6:	18c0      	addge	r0, r0, r3
 800f8f8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f8fc:	4939      	ldr	r1, [pc, #228]	; (800f9e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800f8fe:	a803      	add	r0, sp, #12
 800f900:	f000 fda0 	bl	8010444 <PropertiesBuilder::AddComment(char const*)>
 800f904:	6823      	ldr	r3, [r4, #0]
 800f906:	6862      	ldr	r2, [r4, #4]
 800f908:	4937      	ldr	r1, [pc, #220]	; (800f9e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800f90a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800f90e:	a803      	add	r0, sp, #12
 800f910:	f000 fd54 	bl	80103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f914:	6823      	ldr	r3, [r4, #0]
 800f916:	68a2      	ldr	r2, [r4, #8]
 800f918:	4934      	ldr	r1, [pc, #208]	; (800f9ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800f91a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800f91e:	a803      	add	r0, sp, #12
 800f920:	f000 fd4c 	bl	80103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f924:	6823      	ldr	r3, [r4, #0]
 800f926:	4932      	ldr	r1, [pc, #200]	; (800f9f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800f928:	68e2      	ldr	r2, [r4, #12]
 800f92a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800f92e:	a803      	add	r0, sp, #12
 800f930:	f000 fd44 	bl	80103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800f934:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f938:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f93c:	42a9      	cmp	r1, r5
 800f93e:	d221      	bcs.n	800f984 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800f940:	6823      	ldr	r3, [r4, #0]
 800f942:	9803      	ldr	r0, [sp, #12]
 800f944:	f013 0f20 	tst.w	r3, #32
 800f948:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f94c:	4b1f      	ldr	r3, [pc, #124]	; (800f9cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800f94e:	4408      	add	r0, r1
 800f950:	eba5 0501 	sub.w	r5, r5, r1
 800f954:	d108      	bne.n	800f968 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800f956:	b942      	cbnz	r2, 800f96a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800f958:	9300      	str	r3, [sp, #0]
 800f95a:	4a26      	ldr	r2, [pc, #152]	; (800f9f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800f95c:	4b26      	ldr	r3, [pc, #152]	; (800f9f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f95e:	e007      	b.n	800f970 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800f960:	9300      	str	r3, [sp, #0]
 800f962:	4a1f      	ldr	r2, [pc, #124]	; (800f9e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800f964:	4b1d      	ldr	r3, [pc, #116]	; (800f9dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800f966:	e7bf      	b.n	800f8e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800f968:	b32a      	cbz	r2, 800f9b6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800f96a:	9300      	str	r3, [sp, #0]
 800f96c:	4a23      	ldr	r2, [pc, #140]	; (800f9fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800f96e:	4b22      	ldr	r3, [pc, #136]	; (800f9f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f970:	4629      	mov	r1, r5
 800f972:	f7f9 fe2d 	bl	80095d0 <snprintf>
 800f976:	4285      	cmp	r5, r0
 800f978:	bfa2      	ittt	ge
 800f97a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f97e:	18c0      	addge	r0, r0, r3
 800f980:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f984:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f988:	b17b      	cbz	r3, 800f9aa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800f98a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f98e:	9b03      	ldr	r3, [sp, #12]
 800f990:	4413      	add	r3, r2
 800f992:	227d      	movs	r2, #125	; 0x7d
 800f994:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f998:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f99c:	9903      	ldr	r1, [sp, #12]
 800f99e:	54ca      	strb	r2, [r1, r3]
 800f9a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f9a4:	3301      	adds	r3, #1
 800f9a6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f9aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f9ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f9b0:	601a      	str	r2, [r3, #0]
 800f9b2:	b007      	add	sp, #28
 800f9b4:	bd30      	pop	{r4, r5, pc}
 800f9b6:	9300      	str	r3, [sp, #0]
 800f9b8:	4a11      	ldr	r2, [pc, #68]	; (800fa00 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800f9ba:	4b0f      	ldr	r3, [pc, #60]	; (800f9f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f9bc:	e7d8      	b.n	800f970 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800f9be:	bf00      	nop
 800f9c0:	20009074 	andcs	r9, r0, r4, ror r0
 800f9c4:	08014b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, lr}
 800f9c8:	20009070 	andcs	r9, r0, r0, ror r0
 800f9cc:	20009089 	andcs	r9, r0, r9, lsl #1
 800f9d0:	08013531 	stmdaeq	r1, {r0, r4, r5, r8, sl, ip, sp}
 800f9d4:	08014b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, lr}
 800f9d8:	08013528 	stmdaeq	r1, {r3, r5, r8, sl, ip, sp}
 800f9dc:	08014b10 	stmdaeq	r1, {r4, r8, r9, fp, lr}
 800f9e0:	08013532 	stmdaeq	r1, {r1, r4, r5, r8, sl, ip, sp}
 800f9e4:	08014aeb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, fp, lr}
 800f9e8:	08014af5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, fp, lr}
 800f9ec:	08014b29 	stmdaeq	r1, {r0, r3, r5, r8, r9, fp, lr}
 800f9f0:	08014b00 	stmdaeq	r1, {r8, r9, fp, lr}
 800f9f4:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 800f9f8:	08014b20 	stmdaeq	r1, {r5, r8, r9, fp, lr}
 800f9fc:	08013539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, ip, sp}
 800fa00:	08013545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp}

0800fa04 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800fa04:	b513      	push	{r0, r1, r4, lr}
 800fa06:	6804      	ldr	r4, [r0, #0]
 800fa08:	b914      	cbnz	r4, 800fa10 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800fa0a:	601c      	str	r4, [r3, #0]
 800fa0c:	b002      	add	sp, #8
 800fa0e:	bd10      	pop	{r4, pc}
 800fa10:	9300      	str	r3, [sp, #0]
 800fa12:	4613      	mov	r3, r2
 800fa14:	460a      	mov	r2, r1
 800fa16:	2100      	movs	r1, #0
 800fa18:	f7ff fee8 	bl	800f7ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800fa1c:	e7f6      	b.n	800fa0c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800fa1e <NetworkParams::Dump()>:
 800fa1e:	4770      	bx	lr

0800fa20 <memcpy.isra.0>:
 800fa20:	3801      	subs	r0, #1
 800fa22:	440a      	add	r2, r1
 800fa24:	4291      	cmp	r1, r2
 800fa26:	d100      	bne.n	800fa2a <memcpy.isra.0+0xa>
 800fa28:	4770      	bx	lr
 800fa2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fa2e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fa32:	e7f7      	b.n	800fa24 <memcpy.isra.0+0x4>

0800fa34 <arp_announce>:
 800fa34:	4803      	ldr	r0, [pc, #12]	; (800fa44 <arp_announce+0x10>)
 800fa36:	69c3      	ldr	r3, [r0, #28]
 800fa38:	b113      	cbz	r3, 800fa40 <arp_announce+0xc>
 800fa3a:	212a      	movs	r1, #42	; 0x2a
 800fa3c:	f002 ba5e 	b.w	8011efc <emac_eth_send>
 800fa40:	4770      	bx	lr
 800fa42:	bf00      	nop
 800fa44:	200090d4 	ldrdcs	r9, [r0], -r4

0800fa48 <arp_handle_request>:
 800fa48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fa4a:	2204      	movs	r2, #4
 800fa4c:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800fa50:	4604      	mov	r4, r0
 800fa52:	eb0d 0002 	add.w	r0, sp, r2
 800fa56:	f7ff ffe3 	bl	800fa20 <memcpy.isra.0>
 800fa5a:	4b0d      	ldr	r3, [pc, #52]	; (800fa90 <arp_handle_request+0x48>)
 800fa5c:	9a01      	ldr	r2, [sp, #4]
 800fa5e:	69db      	ldr	r3, [r3, #28]
 800fa60:	429a      	cmp	r2, r3
 800fa62:	d113      	bne.n	800fa8c <arp_handle_request+0x44>
 800fa64:	2206      	movs	r2, #6
 800fa66:	4d0b      	ldr	r5, [pc, #44]	; (800fa94 <arp_handle_request+0x4c>)
 800fa68:	18a1      	adds	r1, r4, r2
 800fa6a:	4628      	mov	r0, r5
 800fa6c:	f7ff ffd8 	bl	800fa20 <memcpy.isra.0>
 800fa70:	f104 0116 	add.w	r1, r4, #22
 800fa74:	f105 0020 	add.w	r0, r5, #32
 800fa78:	2206      	movs	r2, #6
 800fa7a:	f7ff ffd1 	bl	800fa20 <memcpy.isra.0>
 800fa7e:	69e3      	ldr	r3, [r4, #28]
 800fa80:	212a      	movs	r1, #42	; 0x2a
 800fa82:	4628      	mov	r0, r5
 800fa84:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800fa88:	f002 fa38 	bl	8011efc <emac_eth_send>
 800fa8c:	b003      	add	sp, #12
 800fa8e:	bd30      	pop	{r4, r5, pc}
 800fa90:	200090d4 	ldrdcs	r9, [r0], -r4
 800fa94:	20009100 	andcs	r9, r0, r0, lsl #2

0800fa98 <arp_handle_reply>:
 800fa98:	69c1      	ldr	r1, [r0, #28]
 800fa9a:	3016      	adds	r0, #22
 800fa9c:	f000 b80a 	b.w	800fab4 <arp_cache_update>

0800faa0 <arp_send_request>:
 800faa0:	4b03      	ldr	r3, [pc, #12]	; (800fab0 <arp_send_request+0x10>)
 800faa2:	212a      	movs	r1, #42	; 0x2a
 800faa4:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800faa8:	4618      	mov	r0, r3
 800faaa:	f002 ba27 	b.w	8011efc <emac_eth_send>
 800faae:	bf00      	nop
 800fab0:	2000912c 	andcs	r9, r0, ip, lsr #2

0800fab4 <arp_cache_update>:
 800fab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fab6:	4e11      	ldr	r6, [pc, #68]	; (800fafc <arp_cache_update+0x48>)
 800fab8:	8833      	ldrh	r3, [r6, #0]
 800faba:	2b20      	cmp	r3, #32
 800fabc:	d018      	beq.n	800faf0 <arp_cache_update+0x3c>
 800fabe:	2400      	movs	r4, #0
 800fac0:	220c      	movs	r2, #12
 800fac2:	4d0f      	ldr	r5, [pc, #60]	; (800fb00 <arp_cache_update+0x4c>)
 800fac4:	b2a7      	uxth	r7, r4
 800fac6:	42bb      	cmp	r3, r7
 800fac8:	d80b      	bhi.n	800fae2 <arp_cache_update+0x2e>
 800faca:	fb02 5203 	mla	r2, r2, r3, r5
 800face:	1d84      	adds	r4, r0, #6
 800fad0:	3203      	adds	r2, #3
 800fad2:	42a0      	cmp	r0, r4
 800fad4:	d10d      	bne.n	800faf2 <arp_cache_update+0x3e>
 800fad6:	220c      	movs	r2, #12
 800fad8:	435a      	muls	r2, r3
 800fada:	3301      	adds	r3, #1
 800fadc:	50a9      	str	r1, [r5, r2]
 800fade:	8033      	strh	r3, [r6, #0]
 800fae0:	e006      	b.n	800faf0 <arp_cache_update+0x3c>
 800fae2:	3401      	adds	r4, #1
 800fae4:	fb02 5704 	mla	r7, r2, r4, r5
 800fae8:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800faec:	428f      	cmp	r7, r1
 800faee:	d1e9      	bne.n	800fac4 <arp_cache_update+0x10>
 800faf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800faf2:	f810 7b01 	ldrb.w	r7, [r0], #1
 800faf6:	f802 7f01 	strb.w	r7, [r2, #1]!
 800fafa:	e7ea      	b.n	800fad2 <arp_cache_update+0x1e>
 800fafc:	200092d8 	ldrdcs	r9, [r0], -r8
 800fb00:	20009158 	andcs	r9, r0, r8, asr r1

0800fb04 <arp_cache_lookup>:
 800fb04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb08:	2200      	movs	r2, #0
 800fb0a:	4606      	mov	r6, r0
 800fb0c:	460c      	mov	r4, r1
 800fb0e:	200c      	movs	r0, #12
 800fb10:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800fb98 <arp_cache_lookup+0x94>
 800fb14:	fb00 f302 	mul.w	r3, r0, r2
 800fb18:	f853 1008 	ldr.w	r1, [r3, r8]
 800fb1c:	42b1      	cmp	r1, r6
 800fb1e:	d10d      	bne.n	800fb3c <arp_cache_lookup+0x38>
 800fb20:	3304      	adds	r3, #4
 800fb22:	4443      	add	r3, r8
 800fb24:	3c01      	subs	r4, #1
 800fb26:	1d9a      	adds	r2, r3, #6
 800fb28:	4293      	cmp	r3, r2
 800fb2a:	d102      	bne.n	800fb32 <arp_cache_lookup+0x2e>
 800fb2c:	4630      	mov	r0, r6
 800fb2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb32:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fb36:	f804 1f01 	strb.w	r1, [r4, #1]!
 800fb3a:	e7f5      	b.n	800fb28 <arp_cache_lookup+0x24>
 800fb3c:	b111      	cbz	r1, 800fb44 <arp_cache_lookup+0x40>
 800fb3e:	3201      	adds	r2, #1
 800fb40:	2a20      	cmp	r2, #32
 800fb42:	d1e7      	bne.n	800fb14 <arp_cache_lookup+0x10>
 800fb44:	2704      	movs	r7, #4
 800fb46:	f8df a054 	ldr.w	sl, [pc, #84]	; 800fb9c <arp_cache_lookup+0x98>
 800fb4a:	f8ba 5000 	ldrh.w	r5, [sl]
 800fb4e:	3f01      	subs	r7, #1
 800fb50:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800fb54:	d101      	bne.n	800fb5a <arp_cache_lookup+0x56>
 800fb56:	463e      	mov	r6, r7
 800fb58:	e7e8      	b.n	800fb2c <arp_cache_lookup+0x28>
 800fb5a:	4630      	mov	r0, r6
 800fb5c:	f7ff ffa0 	bl	800faa0 <arp_send_request>
 800fb60:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800fb64:	f1b9 0901 	subs.w	r9, r9, #1
 800fb68:	f8ba 3000 	ldrh.w	r3, [sl]
 800fb6c:	d011      	beq.n	800fb92 <arp_cache_lookup+0x8e>
 800fb6e:	429d      	cmp	r5, r3
 800fb70:	d00c      	beq.n	800fb8c <arp_cache_lookup+0x88>
 800fb72:	230c      	movs	r3, #12
 800fb74:	fb03 8505 	mla	r5, r3, r5, r8
 800fb78:	3c01      	subs	r4, #1
 800fb7a:	1d2b      	adds	r3, r5, #4
 800fb7c:	350a      	adds	r5, #10
 800fb7e:	42ab      	cmp	r3, r5
 800fb80:	d0d4      	beq.n	800fb2c <arp_cache_lookup+0x28>
 800fb82:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fb86:	f804 2f01 	strb.w	r2, [r4, #1]!
 800fb8a:	e7f8      	b.n	800fb7e <arp_cache_lookup+0x7a>
 800fb8c:	f7f7 fccc 	bl	8007528 <net_handle>
 800fb90:	e7e8      	b.n	800fb64 <arp_cache_lookup+0x60>
 800fb92:	429d      	cmp	r5, r3
 800fb94:	d0db      	beq.n	800fb4e <arp_cache_lookup+0x4a>
 800fb96:	e7ec      	b.n	800fb72 <arp_cache_lookup+0x6e>
 800fb98:	20009158 	andcs	r9, r0, r8, asr r1
 800fb9c:	200092d8 	ldrdcs	r9, [r0], -r8

0800fba0 <_parse_response>:
 800fba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fba4:	460c      	mov	r4, r1
 800fba6:	4e5b      	ldr	r6, [pc, #364]	; (800fd14 <_parse_response+0x174>)
 800fba8:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800fbac:	6837      	ldr	r7, [r6, #0]
 800fbae:	b2c5      	uxtb	r5, r0
 800fbb0:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800fbb4:	f7f7 fcb8 	bl	8007528 <net_handle>
 800fbb8:	f44f 7209 	mov.w	r2, #548	; 0x224
 800fbbc:	4628      	mov	r0, r5
 800fbbe:	f8cd 8000 	str.w	r8, [sp]
 800fbc2:	ab0a      	add	r3, sp, #40	; 0x28
 800fbc4:	a90b      	add	r1, sp, #44	; 0x2c
 800fbc6:	f7fe fe29 	bl	800e81c <udp_recv>
 800fbca:	2800      	cmp	r0, #0
 800fbcc:	d05f      	beq.n	800fc8e <_parse_response+0xee>
 800fbce:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800fbd2:	2b43      	cmp	r3, #67	; 0x43
 800fbd4:	d15b      	bne.n	800fc8e <_parse_response+0xee>
 800fbd6:	aa12      	add	r2, sp, #72	; 0x48
 800fbd8:	1e63      	subs	r3, r4, #1
 800fbda:	1d61      	adds	r1, r4, #5
 800fbdc:	428b      	cmp	r3, r1
 800fbde:	d150      	bne.n	800fc82 <_parse_response+0xe2>
 800fbe0:	2100      	movs	r1, #0
 800fbe2:	ab0b      	add	r3, sp, #44	; 0x2c
 800fbe4:	181c      	adds	r4, r3, r0
 800fbe6:	4608      	mov	r0, r1
 800fbe8:	4b4b      	ldr	r3, [pc, #300]	; (800fd18 <_parse_response+0x178>)
 800fbea:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800fbee:	781a      	ldrb	r2, [r3, #0]
 800fbf0:	f893 b001 	ldrb.w	fp, [r3, #1]
 800fbf4:	f893 c002 	ldrb.w	ip, [r3, #2]
 800fbf8:	78dd      	ldrb	r5, [r3, #3]
 800fbfa:	4b48      	ldr	r3, [pc, #288]	; (800fd1c <_parse_response+0x17c>)
 800fbfc:	9207      	str	r2, [sp, #28]
 800fbfe:	781a      	ldrb	r2, [r3, #0]
 800fc00:	789f      	ldrb	r7, [r3, #2]
 800fc02:	78de      	ldrb	r6, [r3, #3]
 800fc04:	9206      	str	r2, [sp, #24]
 800fc06:	785a      	ldrb	r2, [r3, #1]
 800fc08:	4b45      	ldr	r3, [pc, #276]	; (800fd20 <_parse_response+0x180>)
 800fc0a:	9203      	str	r2, [sp, #12]
 800fc0c:	f893 a000 	ldrb.w	sl, [r3]
 800fc10:	f893 9001 	ldrb.w	r9, [r3, #1]
 800fc14:	f893 8002 	ldrb.w	r8, [r3, #2]
 800fc18:	f893 e003 	ldrb.w	lr, [r3, #3]
 800fc1c:	ab47      	add	r3, sp, #284	; 0x11c
 800fc1e:	42a3      	cmp	r3, r4
 800fc20:	d33f      	bcc.n	800fca2 <_parse_response+0x102>
 800fc22:	9b04      	ldr	r3, [sp, #16]
 800fc24:	b143      	cbz	r3, 800fc38 <_parse_response+0x98>
 800fc26:	4b3e      	ldr	r3, [pc, #248]	; (800fd20 <_parse_response+0x180>)
 800fc28:	f883 a000 	strb.w	sl, [r3]
 800fc2c:	f883 9001 	strb.w	r9, [r3, #1]
 800fc30:	f883 8002 	strb.w	r8, [r3, #2]
 800fc34:	f883 e003 	strb.w	lr, [r3, #3]
 800fc38:	9b05      	ldr	r3, [sp, #20]
 800fc3a:	b133      	cbz	r3, 800fc4a <_parse_response+0xaa>
 800fc3c:	4b37      	ldr	r3, [pc, #220]	; (800fd1c <_parse_response+0x17c>)
 800fc3e:	9a06      	ldr	r2, [sp, #24]
 800fc40:	709f      	strb	r7, [r3, #2]
 800fc42:	701a      	strb	r2, [r3, #0]
 800fc44:	9a03      	ldr	r2, [sp, #12]
 800fc46:	70de      	strb	r6, [r3, #3]
 800fc48:	705a      	strb	r2, [r3, #1]
 800fc4a:	b139      	cbz	r1, 800fc5c <_parse_response+0xbc>
 800fc4c:	4b32      	ldr	r3, [pc, #200]	; (800fd18 <_parse_response+0x178>)
 800fc4e:	9a07      	ldr	r2, [sp, #28]
 800fc50:	f883 b001 	strb.w	fp, [r3, #1]
 800fc54:	701a      	strb	r2, [r3, #0]
 800fc56:	f883 c002 	strb.w	ip, [r3, #2]
 800fc5a:	70dd      	strb	r5, [r3, #3]
 800fc5c:	2802      	cmp	r0, #2
 800fc5e:	d10c      	bne.n	800fc7a <_parse_response+0xda>
 800fc60:	4b30      	ldr	r3, [pc, #192]	; (800fd24 <_parse_response+0x184>)
 800fc62:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800fc66:	701a      	strb	r2, [r3, #0]
 800fc68:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800fc6c:	705a      	strb	r2, [r3, #1]
 800fc6e:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800fc72:	709a      	strb	r2, [r3, #2]
 800fc74:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800fc78:	70da      	strb	r2, [r3, #3]
 800fc7a:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800fc7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc82:	f812 cb01 	ldrb.w	ip, [r2], #1
 800fc86:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800fc8a:	45e6      	cmp	lr, ip
 800fc8c:	d0a6      	beq.n	800fbdc <_parse_response+0x3c>
 800fc8e:	6833      	ldr	r3, [r6, #0]
 800fc90:	1bdb      	subs	r3, r3, r7
 800fc92:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800fc96:	d38b      	bcc.n	800fbb0 <_parse_response+0x10>
 800fc98:	2800      	cmp	r0, #0
 800fc9a:	d1a1      	bne.n	800fbe0 <_parse_response+0x40>
 800fc9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fca0:	e7eb      	b.n	800fc7a <_parse_response+0xda>
 800fca2:	781a      	ldrb	r2, [r3, #0]
 800fca4:	2a35      	cmp	r2, #53	; 0x35
 800fca6:	d011      	beq.n	800fccc <_parse_response+0x12c>
 800fca8:	d808      	bhi.n	800fcbc <_parse_response+0x11c>
 800fcaa:	2a01      	cmp	r2, #1
 800fcac:	d011      	beq.n	800fcd2 <_parse_response+0x132>
 800fcae:	2a03      	cmp	r2, #3
 800fcb0:	d01a      	beq.n	800fce8 <_parse_response+0x148>
 800fcb2:	b14a      	cbz	r2, 800fcc8 <_parse_response+0x128>
 800fcb4:	1c9a      	adds	r2, r3, #2
 800fcb6:	785b      	ldrb	r3, [r3, #1]
 800fcb8:	4413      	add	r3, r2
 800fcba:	e7b0      	b.n	800fc1e <_parse_response+0x7e>
 800fcbc:	2a36      	cmp	r2, #54	; 0x36
 800fcbe:	d01f      	beq.n	800fd00 <_parse_response+0x160>
 800fcc0:	2aff      	cmp	r2, #255	; 0xff
 800fcc2:	d1f7      	bne.n	800fcb4 <_parse_response+0x114>
 800fcc4:	4623      	mov	r3, r4
 800fcc6:	e7aa      	b.n	800fc1e <_parse_response+0x7e>
 800fcc8:	3301      	adds	r3, #1
 800fcca:	e7a8      	b.n	800fc1e <_parse_response+0x7e>
 800fccc:	7898      	ldrb	r0, [r3, #2]
 800fcce:	3303      	adds	r3, #3
 800fcd0:	e7a5      	b.n	800fc1e <_parse_response+0x7e>
 800fcd2:	f893 a002 	ldrb.w	sl, [r3, #2]
 800fcd6:	f893 9003 	ldrb.w	r9, [r3, #3]
 800fcda:	f893 8004 	ldrb.w	r8, [r3, #4]
 800fcde:	f893 e005 	ldrb.w	lr, [r3, #5]
 800fce2:	9204      	str	r2, [sp, #16]
 800fce4:	3306      	adds	r3, #6
 800fce6:	e79a      	b.n	800fc1e <_parse_response+0x7e>
 800fce8:	789a      	ldrb	r2, [r3, #2]
 800fcea:	791f      	ldrb	r7, [r3, #4]
 800fcec:	9206      	str	r2, [sp, #24]
 800fcee:	78da      	ldrb	r2, [r3, #3]
 800fcf0:	795e      	ldrb	r6, [r3, #5]
 800fcf2:	9203      	str	r2, [sp, #12]
 800fcf4:	785a      	ldrb	r2, [r3, #1]
 800fcf6:	4413      	add	r3, r2
 800fcf8:	2201      	movs	r2, #1
 800fcfa:	3302      	adds	r3, #2
 800fcfc:	9205      	str	r2, [sp, #20]
 800fcfe:	e78e      	b.n	800fc1e <_parse_response+0x7e>
 800fd00:	789a      	ldrb	r2, [r3, #2]
 800fd02:	f893 b003 	ldrb.w	fp, [r3, #3]
 800fd06:	f893 c004 	ldrb.w	ip, [r3, #4]
 800fd0a:	795d      	ldrb	r5, [r3, #5]
 800fd0c:	2101      	movs	r1, #1
 800fd0e:	9207      	str	r2, [sp, #28]
 800fd10:	3306      	adds	r3, #6
 800fd12:	e784      	b.n	800fc1e <_parse_response+0x7e>
 800fd14:	200097a4 	andcs	r9, r0, r4, lsr #15
 800fd18:	2000950c 	andcs	r9, r0, ip, lsl #10
 800fd1c:	200092dc 	ldrdcs	r9, [r0], -ip
 800fd20:	200092e4 	andcs	r9, r0, r4, ror #5
 800fd24:	200092e0 	andcs	r9, r0, r0, ror #5

0800fd28 <memcpy.isra.0>:
 800fd28:	3801      	subs	r0, #1
 800fd2a:	440a      	add	r2, r1
 800fd2c:	4291      	cmp	r1, r2
 800fd2e:	d100      	bne.n	800fd32 <memcpy.isra.0+0xa>
 800fd30:	4770      	bx	lr
 800fd32:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fd36:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fd3a:	e7f7      	b.n	800fd2c <memcpy.isra.0+0x4>

0800fd3c <dhcp_client>:
 800fd3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd40:	b087      	sub	sp, #28
 800fd42:	9203      	str	r2, [sp, #12]
 800fd44:	4a77      	ldr	r2, [pc, #476]	; (800ff24 <dhcp_client+0x1e8>)
 800fd46:	460f      	mov	r7, r1
 800fd48:	4605      	mov	r5, r0
 800fd4a:	f44f 7309 	mov.w	r3, #548	; 0x224
 800fd4e:	4614      	mov	r4, r2
 800fd50:	2100      	movs	r1, #0
 800fd52:	3b01      	subs	r3, #1
 800fd54:	f802 1b01 	strb.w	r1, [r2], #1
 800fd58:	d1fb      	bne.n	800fd52 <dhcp_client+0x16>
 800fd5a:	f240 1301 	movw	r3, #257	; 0x101
 800fd5e:	2206      	movs	r2, #6
 800fd60:	4629      	mov	r1, r5
 800fd62:	4871      	ldr	r0, [pc, #452]	; (800ff28 <dhcp_client+0x1ec>)
 800fd64:	8023      	strh	r3, [r4, #0]
 800fd66:	70a2      	strb	r2, [r4, #2]
 800fd68:	f7ff ffde 	bl	800fd28 <memcpy.isra.0>
 800fd6c:	4b6f      	ldr	r3, [pc, #444]	; (800ff2c <dhcp_client+0x1f0>)
 800fd6e:	2044      	movs	r0, #68	; 0x44
 800fd70:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800fd74:	f240 1335 	movw	r3, #309	; 0x135
 800fd78:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800fd7c:	f7fe fd14 	bl	800e7a8 <udp_bind>
 800fd80:	1e06      	subs	r6, r0, #0
 800fd82:	f2c0 80c9 	blt.w	800ff18 <dhcp_client+0x1dc>
 800fd86:	f04f 0915 	mov.w	r9, #21
 800fd8a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800ff24 <dhcp_client+0x1e8>
 800fd8e:	f1b9 0901 	subs.w	r9, r9, #1
 800fd92:	d11f      	bne.n	800fdd4 <dhcp_client+0x98>
 800fd94:	464c      	mov	r4, r9
 800fd96:	2044      	movs	r0, #68	; 0x44
 800fd98:	f7fe fd20 	bl	800e7dc <udp_unbind>
 800fd9c:	2c00      	cmp	r4, #0
 800fd9e:	f000 80be 	beq.w	800ff1e <dhcp_client+0x1e2>
 800fda2:	2204      	movs	r2, #4
 800fda4:	4962      	ldr	r1, [pc, #392]	; (800ff30 <dhcp_client+0x1f4>)
 800fda6:	a805      	add	r0, sp, #20
 800fda8:	f7ff ffbe 	bl	800fd28 <memcpy.isra.0>
 800fdac:	9b05      	ldr	r3, [sp, #20]
 800fdae:	2204      	movs	r2, #4
 800fdb0:	4960      	ldr	r1, [pc, #384]	; (800ff34 <dhcp_client+0x1f8>)
 800fdb2:	603b      	str	r3, [r7, #0]
 800fdb4:	a805      	add	r0, sp, #20
 800fdb6:	f7ff ffb7 	bl	800fd28 <memcpy.isra.0>
 800fdba:	9b05      	ldr	r3, [sp, #20]
 800fdbc:	a805      	add	r0, sp, #20
 800fdbe:	60bb      	str	r3, [r7, #8]
 800fdc0:	2204      	movs	r2, #4
 800fdc2:	495d      	ldr	r1, [pc, #372]	; (800ff38 <dhcp_client+0x1fc>)
 800fdc4:	f7ff ffb0 	bl	800fd28 <memcpy.isra.0>
 800fdc8:	2000      	movs	r0, #0
 800fdca:	9b05      	ldr	r3, [sp, #20]
 800fdcc:	607b      	str	r3, [r7, #4]
 800fdce:	b007      	add	sp, #28
 800fdd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdd4:	f643 5301 	movw	r3, #15617	; 0x3d01
 800fdd8:	f240 1807 	movw	r8, #263	; 0x107
 800fddc:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fde0:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fde4:	782b      	ldrb	r3, [r5, #0]
 800fde6:	4a55      	ldr	r2, [pc, #340]	; (800ff3c <dhcp_client+0x200>)
 800fde8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fdec:	786b      	ldrb	r3, [r5, #1]
 800fdee:	fa5f fb86 	uxtb.w	fp, r6
 800fdf2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fdf6:	78ab      	ldrb	r3, [r5, #2]
 800fdf8:	4651      	mov	r1, sl
 800fdfa:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fdfe:	78eb      	ldrb	r3, [r5, #3]
 800fe00:	4658      	mov	r0, fp
 800fe02:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fe06:	792b      	ldrb	r3, [r5, #4]
 800fe08:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fe0c:	796b      	ldrb	r3, [r5, #5]
 800fe0e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fe12:	4b4b      	ldr	r3, [pc, #300]	; (800ff40 <dhcp_client+0x204>)
 800fe14:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800fe18:	23ff      	movs	r3, #255	; 0xff
 800fe1a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800fe1e:	2343      	movs	r3, #67	; 0x43
 800fe20:	f240 1205 	movw	r2, #261	; 0x105
 800fe24:	9300      	str	r3, [sp, #0]
 800fe26:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fe2a:	f7fe fd53 	bl	800e8d4 <udp_send>
 800fe2e:	4629      	mov	r1, r5
 800fe30:	4630      	mov	r0, r6
 800fe32:	f7ff feb5 	bl	800fba0 <_parse_response>
 800fe36:	2802      	cmp	r0, #2
 800fe38:	d1a9      	bne.n	800fd8e <dhcp_client+0x52>
 800fe3a:	f643 5303 	movw	r3, #15619	; 0x3d03
 800fe3e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800fe42:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800fe46:	782b      	ldrb	r3, [r5, #0]
 800fe48:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800ff44 <dhcp_client+0x208>
 800fe4c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800fe50:	786b      	ldrb	r3, [r5, #1]
 800fe52:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800fe56:	78ab      	ldrb	r3, [r5, #2]
 800fe58:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800fe5c:	78eb      	ldrb	r3, [r5, #3]
 800fe5e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800fe62:	792b      	ldrb	r3, [r5, #4]
 800fe64:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800fe68:	796b      	ldrb	r3, [r5, #5]
 800fe6a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800fe6e:	f240 4332 	movw	r3, #1074	; 0x432
 800fe72:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800fe76:	4b2e      	ldr	r3, [pc, #184]	; (800ff30 <dhcp_client+0x1f4>)
 800fe78:	881a      	ldrh	r2, [r3, #0]
 800fe7a:	885b      	ldrh	r3, [r3, #2]
 800fe7c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800fe80:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800fe84:	f240 4336 	movw	r3, #1078	; 0x436
 800fe88:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800fe8c:	4b2e      	ldr	r3, [pc, #184]	; (800ff48 <dhcp_client+0x20c>)
 800fe8e:	221e      	movs	r2, #30
 800fe90:	681b      	ldr	r3, [r3, #0]
 800fe92:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800fe96:	230c      	movs	r3, #12
 800fe98:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800fe9c:	9b03      	ldr	r3, [sp, #12]
 800fe9e:	1e58      	subs	r0, r3, #1
 800fea0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800fea4:	f1a2 0e1e 	sub.w	lr, r2, #30
 800fea8:	1c51      	adds	r1, r2, #1
 800feaa:	bb8b      	cbnz	r3, 800ff10 <dhcp_client+0x1d4>
 800feac:	2037      	movs	r0, #55	; 0x37
 800feae:	18a3      	adds	r3, r4, r2
 800feb0:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800feb4:	2006      	movs	r0, #6
 800feb6:	4421      	add	r1, r4
 800feb8:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800febc:	2103      	movs	r1, #3
 800febe:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800fec2:	210f      	movs	r1, #15
 800fec4:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800fec8:	213a      	movs	r1, #58	; 0x3a
 800feca:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800fece:	213b      	movs	r1, #59	; 0x3b
 800fed0:	f04f 0801 	mov.w	r8, #1
 800fed4:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800fed8:	21ff      	movs	r1, #255	; 0xff
 800feda:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800fede:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800fee2:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800fee6:	2343      	movs	r3, #67	; 0x43
 800fee8:	32f5      	adds	r2, #245	; 0xf5
 800feea:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800feee:	4651      	mov	r1, sl
 800fef0:	9300      	str	r3, [sp, #0]
 800fef2:	b292      	uxth	r2, r2
 800fef4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800fef8:	4658      	mov	r0, fp
 800fefa:	f7fe fceb 	bl	800e8d4 <udp_send>
 800fefe:	4629      	mov	r1, r5
 800ff00:	4630      	mov	r0, r6
 800ff02:	f7ff fe4d 	bl	800fba0 <_parse_response>
 800ff06:	2805      	cmp	r0, #5
 800ff08:	f47f af41 	bne.w	800fd8e <dhcp_client+0x52>
 800ff0c:	4644      	mov	r4, r8
 800ff0e:	e742      	b.n	800fd96 <dhcp_client+0x5a>
 800ff10:	460a      	mov	r2, r1
 800ff12:	f80c 3b01 	strb.w	r3, [ip], #1
 800ff16:	e7c3      	b.n	800fea0 <dhcp_client+0x164>
 800ff18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ff1c:	e757      	b.n	800fdce <dhcp_client+0x92>
 800ff1e:	f06f 0001 	mvn.w	r0, #1
 800ff22:	e754      	b.n	800fdce <dhcp_client+0x92>
 800ff24:	200092e8 	andcs	r9, r0, r8, ror #5
 800ff28:	20009304 	andcs	r9, r0, r4, lsl #6
 800ff2c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800ff30:	200092e0 	andcs	r9, r0, r0, ror #5
 800ff34:	200092dc 	ldrdcs	r9, [r0], -ip
 800ff38:	200092e4 	andcs	r9, r0, r4, ror #5
 800ff3c:	03010637 	movweq	r0, #5687	; 0x1637
 800ff40:	3b3a0f06 	blcc	8e93b60 <__exidx_end+0xe7ea8c>
 800ff44:	200093f2 	strdcs	r9, [r0], -r2
 800ff48:	2000950c 	andcs	r9, r0, ip, lsl #10

0800ff4c <dhcp_client_release>:
 800ff4c:	b507      	push	{r0, r1, r2, lr}
 800ff4e:	2044      	movs	r0, #68	; 0x44
 800ff50:	f7fe fc2a 	bl	800e7a8 <udp_bind>
 800ff54:	f243 6307 	movw	r3, #13831	; 0x3607
 800ff58:	4911      	ldr	r1, [pc, #68]	; (800ffa0 <dhcp_client_release+0x54>)
 800ff5a:	b2c0      	uxtb	r0, r0
 800ff5c:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800ff60:	2304      	movs	r3, #4
 800ff62:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800ff66:	4b0f      	ldr	r3, [pc, #60]	; (800ffa4 <dhcp_client_release+0x58>)
 800ff68:	781a      	ldrb	r2, [r3, #0]
 800ff6a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800ff6e:	785a      	ldrb	r2, [r3, #1]
 800ff70:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800ff74:	789a      	ldrb	r2, [r3, #2]
 800ff76:	78db      	ldrb	r3, [r3, #3]
 800ff78:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800ff7c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800ff80:	23ff      	movs	r3, #255	; 0xff
 800ff82:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800ff86:	2343      	movs	r3, #67	; 0x43
 800ff88:	22fa      	movs	r2, #250	; 0xfa
 800ff8a:	9300      	str	r3, [sp, #0]
 800ff8c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ff90:	f7fe fca0 	bl	800e8d4 <udp_send>
 800ff94:	2044      	movs	r0, #68	; 0x44
 800ff96:	b003      	add	sp, #12
 800ff98:	f85d eb04 	ldr.w	lr, [sp], #4
 800ff9c:	f7fe bc1e 	b.w	800e7dc <udp_unbind>
 800ffa0:	200092e8 	andcs	r9, r0, r8, ror #5
 800ffa4:	2000950c 	andcs	r9, r0, ip, lsl #10

0800ffa8 <memcpy.isra.0>:
 800ffa8:	3801      	subs	r0, #1
 800ffaa:	440a      	add	r2, r1
 800ffac:	4291      	cmp	r1, r2
 800ffae:	d100      	bne.n	800ffb2 <memcpy.isra.0+0xa>
 800ffb0:	4770      	bx	lr
 800ffb2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ffb6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ffba:	e7f7      	b.n	800ffac <memcpy.isra.0+0x4>

0800ffbc <_send_report>:
 800ffbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ffbe:	491c      	ldr	r1, [pc, #112]	; (8010030 <_send_report+0x74>)
 800ffc0:	4c1c      	ldr	r4, [pc, #112]	; (8010034 <_send_report+0x78>)
 800ffc2:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800ffc6:	9001      	str	r0, [sp, #4]
 800ffc8:	70cb      	strb	r3, [r1, #3]
 800ffca:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800ffce:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800ffd2:	710b      	strb	r3, [r1, #4]
 800ffd4:	7148      	strb	r0, [r1, #5]
 800ffd6:	2206      	movs	r2, #6
 800ffd8:	4620      	mov	r0, r4
 800ffda:	f7ff ffe5 	bl	800ffa8 <memcpy.isra.0>
 800ffde:	2204      	movs	r2, #4
 800ffe0:	2700      	movs	r7, #0
 800ffe2:	4d15      	ldr	r5, [pc, #84]	; (8010038 <_send_report+0x7c>)
 800ffe4:	eb0d 0102 	add.w	r1, sp, r2
 800ffe8:	882b      	ldrh	r3, [r5, #0]
 800ffea:	f104 001e 	add.w	r0, r4, #30
 800ffee:	f104 060e 	add.w	r6, r4, #14
 800fff2:	8263      	strh	r3, [r4, #18]
 800fff4:	f7ff ffd8 	bl	800ffa8 <memcpy.isra.0>
 800fff8:	2118      	movs	r1, #24
 800fffa:	4630      	mov	r0, r6
 800fffc:	8327      	strh	r7, [r4, #24]
 800fffe:	f000 f8c6 	bl	801018e <net_chksum>
 8010002:	2204      	movs	r2, #4
 8010004:	8320      	strh	r0, [r4, #24]
 8010006:	eb0d 0102 	add.w	r1, sp, r2
 801000a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801000e:	f7ff ffcb 	bl	800ffa8 <memcpy.isra.0>
 8010012:	2120      	movs	r1, #32
 8010014:	4630      	mov	r0, r6
 8010016:	8527      	strh	r7, [r4, #40]	; 0x28
 8010018:	f000 f8b9 	bl	801018e <net_chksum>
 801001c:	212e      	movs	r1, #46	; 0x2e
 801001e:	8520      	strh	r0, [r4, #40]	; 0x28
 8010020:	4620      	mov	r0, r4
 8010022:	f001 ff6b 	bl	8011efc <emac_eth_send>
 8010026:	882b      	ldrh	r3, [r5, #0]
 8010028:	3301      	adds	r3, #1
 801002a:	802b      	strh	r3, [r5, #0]
 801002c:	b003      	add	sp, #12
 801002e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010030:	20009668 	andcs	r9, r0, r8, ror #12
 8010034:	20009670 	andcs	r9, r0, r0, ror r6
 8010038:	20009630 	andcs	r9, r0, r0, lsr r6

0801003c <igmp_set_ip>:
 801003c:	b507      	push	{r0, r1, r2, lr}
 801003e:	2204      	movs	r2, #4
 8010040:	6803      	ldr	r3, [r0, #0]
 8010042:	eb0d 0102 	add.w	r1, sp, r2
 8010046:	4806      	ldr	r0, [pc, #24]	; (8010060 <igmp_set_ip+0x24>)
 8010048:	9301      	str	r3, [sp, #4]
 801004a:	f7ff ffad 	bl	800ffa8 <memcpy.isra.0>
 801004e:	2204      	movs	r2, #4
 8010050:	4804      	ldr	r0, [pc, #16]	; (8010064 <igmp_set_ip+0x28>)
 8010052:	eb0d 0102 	add.w	r1, sp, r2
 8010056:	f7ff ffa7 	bl	800ffa8 <memcpy.isra.0>
 801005a:	b003      	add	sp, #12
 801005c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010060:	2000968a 	andcs	r9, r0, sl, lsl #13
 8010064:	20009652 	andcs	r9, r0, r2, asr r6

08010068 <igmp_timer>:
 8010068:	b570      	push	{r4, r5, r6, lr}
 801006a:	2500      	movs	r5, #0
 801006c:	2602      	movs	r6, #2
 801006e:	4c0a      	ldr	r4, [pc, #40]	; (8010098 <igmp_timer+0x30>)
 8010070:	7963      	ldrb	r3, [r4, #5]
 8010072:	2b01      	cmp	r3, #1
 8010074:	d109      	bne.n	801008a <igmp_timer+0x22>
 8010076:	7923      	ldrb	r3, [r4, #4]
 8010078:	b13b      	cbz	r3, 801008a <igmp_timer+0x22>
 801007a:	3b01      	subs	r3, #1
 801007c:	b2db      	uxtb	r3, r3
 801007e:	7123      	strb	r3, [r4, #4]
 8010080:	b91b      	cbnz	r3, 801008a <igmp_timer+0x22>
 8010082:	6820      	ldr	r0, [r4, #0]
 8010084:	f7ff ff9a 	bl	800ffbc <_send_report>
 8010088:	7166      	strb	r6, [r4, #5]
 801008a:	3501      	adds	r5, #1
 801008c:	2d24      	cmp	r5, #36	; 0x24
 801008e:	f104 0408 	add.w	r4, r4, #8
 8010092:	d1ed      	bne.n	8010070 <igmp_timer+0x8>
 8010094:	bd70      	pop	{r4, r5, r6, pc}
 8010096:	bf00      	nop
 8010098:	20009510 	andcs	r9, r0, r0, lsl r5

0801009c <igmp_join>:
 801009c:	b538      	push	{r3, r4, r5, lr}
 801009e:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 80100a2:	2be0      	cmp	r3, #224	; 0xe0
 80100a4:	d11b      	bne.n	80100de <igmp_join+0x42>
 80100a6:	4911      	ldr	r1, [pc, #68]	; (80100ec <igmp_join+0x50>)
 80100a8:	680c      	ldr	r4, [r1, #0]
 80100aa:	2c24      	cmp	r4, #36	; 0x24
 80100ac:	d01a      	beq.n	80100e4 <igmp_join+0x48>
 80100ae:	2300      	movs	r3, #0
 80100b0:	4a0f      	ldr	r2, [pc, #60]	; (80100f0 <igmp_join+0x54>)
 80100b2:	429c      	cmp	r4, r3
 80100b4:	dc0d      	bgt.n	80100d2 <igmp_join+0x36>
 80100b6:	f44f 7381 	mov.w	r3, #258	; 0x102
 80100ba:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 80100be:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 80100c2:	8093      	strh	r3, [r2, #4]
 80100c4:	1c63      	adds	r3, r4, #1
 80100c6:	600b      	str	r3, [r1, #0]
 80100c8:	f7ff ff78 	bl	800ffbc <_send_report>
 80100cc:	4623      	mov	r3, r4
 80100ce:	4618      	mov	r0, r3
 80100d0:	bd38      	pop	{r3, r4, r5, pc}
 80100d2:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80100d6:	4285      	cmp	r5, r0
 80100d8:	d0f9      	beq.n	80100ce <igmp_join+0x32>
 80100da:	3301      	adds	r3, #1
 80100dc:	e7e9      	b.n	80100b2 <igmp_join+0x16>
 80100de:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80100e2:	e7f4      	b.n	80100ce <igmp_join+0x32>
 80100e4:	f06f 0301 	mvn.w	r3, #1
 80100e8:	e7f1      	b.n	80100ce <igmp_join+0x32>
 80100ea:	bf00      	nop
 80100ec:	20009634 	andcs	r9, r0, r4, lsr r6
 80100f0:	20009510 	andcs	r9, r0, r0, lsl r5

080100f4 <igmp_leave>:
 80100f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80100f8:	2600      	movs	r6, #0
 80100fa:	4f1c      	ldr	r7, [pc, #112]	; (801016c <igmp_leave+0x78>)
 80100fc:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8010100:	4283      	cmp	r3, r0
 8010102:	d007      	beq.n	8010114 <igmp_leave+0x20>
 8010104:	3601      	adds	r6, #1
 8010106:	2e24      	cmp	r6, #36	; 0x24
 8010108:	d1f8      	bne.n	80100fc <igmp_leave+0x8>
 801010a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801010e:	b002      	add	sp, #8
 8010110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010114:	2400      	movs	r4, #0
 8010116:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8010170 <igmp_leave+0x7c>
 801011a:	4d16      	ldr	r5, [pc, #88]	; (8010174 <igmp_leave+0x80>)
 801011c:	f8b8 3000 	ldrh.w	r3, [r8]
 8010120:	2118      	movs	r1, #24
 8010122:	9001      	str	r0, [sp, #4]
 8010124:	4814      	ldr	r0, [pc, #80]	; (8010178 <igmp_leave+0x84>)
 8010126:	826b      	strh	r3, [r5, #18]
 8010128:	832c      	strh	r4, [r5, #24]
 801012a:	f000 f830 	bl	801018e <net_chksum>
 801012e:	2204      	movs	r2, #4
 8010130:	8328      	strh	r0, [r5, #24]
 8010132:	eb0d 0102 	add.w	r1, sp, r2
 8010136:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 801013a:	f7ff ff35 	bl	800ffa8 <memcpy.isra.0>
 801013e:	2120      	movs	r1, #32
 8010140:	f105 000e 	add.w	r0, r5, #14
 8010144:	852c      	strh	r4, [r5, #40]	; 0x28
 8010146:	f000 f822 	bl	801018e <net_chksum>
 801014a:	212e      	movs	r1, #46	; 0x2e
 801014c:	8528      	strh	r0, [r5, #40]	; 0x28
 801014e:	4628      	mov	r0, r5
 8010150:	f001 fed4 	bl	8011efc <emac_eth_send>
 8010154:	f8b8 3000 	ldrh.w	r3, [r8]
 8010158:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 801015c:	3301      	adds	r3, #1
 801015e:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 8010162:	4620      	mov	r0, r4
 8010164:	f8a8 3000 	strh.w	r3, [r8]
 8010168:	80b4      	strh	r4, [r6, #4]
 801016a:	e7d0      	b.n	801010e <igmp_leave+0x1a>
 801016c:	20009510 	andcs	r9, r0, r0, lsl r5
 8010170:	20009630 	andcs	r9, r0, r0, lsr r6
 8010174:	20009638 	andcs	r9, r0, r8, lsr r6
 8010178:	2000967e 	andcs	r9, r0, lr, ror r6

0801017c <ip_set_ip>:
 801017c:	b510      	push	{r4, lr}
 801017e:	4604      	mov	r4, r0
 8010180:	f7fe faf2 	bl	800e768 <udp_set_ip>
 8010184:	4620      	mov	r0, r4
 8010186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801018a:	f7ff bf57 	b.w	801003c <igmp_set_ip>

0801018e <net_chksum>:
 801018e:	2300      	movs	r3, #0
 8010190:	f021 0201 	bic.w	r2, r1, #1
 8010194:	b530      	push	{r4, r5, lr}
 8010196:	4402      	add	r2, r0
 8010198:	084c      	lsrs	r4, r1, #1
 801019a:	4290      	cmp	r0, r2
 801019c:	d10e      	bne.n	80101bc <net_chksum+0x2e>
 801019e:	f06f 0201 	mvn.w	r2, #1
 80101a2:	fb02 1104 	mla	r1, r2, r4, r1
 80101a6:	b121      	cbz	r1, 80101b2 <net_chksum+0x24>
 80101a8:	7802      	ldrb	r2, [r0, #0]
 80101aa:	0212      	lsls	r2, r2, #8
 80101ac:	ba52      	rev16	r2, r2
 80101ae:	b292      	uxth	r2, r2
 80101b0:	4413      	add	r3, r2
 80101b2:	0c1a      	lsrs	r2, r3, #16
 80101b4:	d106      	bne.n	80101c4 <net_chksum+0x36>
 80101b6:	43d8      	mvns	r0, r3
 80101b8:	b280      	uxth	r0, r0
 80101ba:	bd30      	pop	{r4, r5, pc}
 80101bc:	f830 5b02 	ldrh.w	r5, [r0], #2
 80101c0:	442b      	add	r3, r5
 80101c2:	e7ea      	b.n	801019a <net_chksum+0xc>
 80101c4:	b29b      	uxth	r3, r3
 80101c6:	e7f3      	b.n	80101b0 <net_chksum+0x22>

080101c8 <memcpy.isra.0>:
 80101c8:	3801      	subs	r0, #1
 80101ca:	440a      	add	r2, r1
 80101cc:	4291      	cmp	r1, r2
 80101ce:	d100      	bne.n	80101d2 <memcpy.isra.0+0xa>
 80101d0:	4770      	bx	lr
 80101d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80101d6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80101da:	e7f7      	b.n	80101cc <memcpy.isra.0+0x4>

080101dc <properties::convert_json_file(char*, unsigned short, bool)>:
 80101dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101e0:	7803      	ldrb	r3, [r0, #0]
 80101e2:	2b7b      	cmp	r3, #123	; 0x7b
 80101e4:	d170      	bne.n	80102c8 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 80101e6:	b322      	cbz	r2, 8010232 <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 80101e8:	2301      	movs	r3, #1
 80101ea:	4606      	mov	r6, r0
 80101ec:	461c      	mov	r4, r3
 80101ee:	2a00      	cmp	r2, #0
 80101f0:	bf0c      	ite	eq
 80101f2:	f04f 0c0a 	moveq.w	ip, #10
 80101f6:	f04f 0c00 	movne.w	ip, #0
 80101fa:	273d      	movs	r7, #61	; 0x3d
 80101fc:	4299      	cmp	r1, r3
 80101fe:	d960      	bls.n	80102c2 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8010200:	4299      	cmp	r1, r3
 8010202:	4602      	mov	r2, r0
 8010204:	f890 e000 	ldrb.w	lr, [r0]
 8010208:	f103 0301 	add.w	r3, r3, #1
 801020c:	f100 0001 	add.w	r0, r0, #1
 8010210:	d846      	bhi.n	80102a0 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 8010212:	1aa0      	subs	r0, r4, r2
 8010214:	4615      	mov	r5, r2
 8010216:	1884      	adds	r4, r0, r2
 8010218:	f812 8b01 	ldrb.w	r8, [r2], #1
 801021c:	f103 0e01 	add.w	lr, r3, #1
 8010220:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 8010224:	d053      	beq.n	80102ce <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 8010226:	4299      	cmp	r1, r3
 8010228:	d957      	bls.n	80102da <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 801022a:	4673      	mov	r3, lr
 801022c:	f806 8b01 	strb.w	r8, [r6], #1
 8010230:	e7f0      	b.n	8010214 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 8010232:	2323      	movs	r3, #35	; 0x23
 8010234:	f800 3b01 	strb.w	r3, [r0], #1
 8010238:	4605      	mov	r5, r0
 801023a:	2301      	movs	r3, #1
 801023c:	4299      	cmp	r1, r3
 801023e:	d92d      	bls.n	801029c <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 8010240:	f815 4b01 	ldrb.w	r4, [r5], #1
 8010244:	2c22      	cmp	r4, #34	; 0x22
 8010246:	d001      	beq.n	801024c <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8010248:	3301      	adds	r3, #1
 801024a:	e7f7      	b.n	801023c <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 801024c:	46ac      	mov	ip, r5
 801024e:	4606      	mov	r6, r0
 8010250:	2701      	movs	r7, #1
 8010252:	f89c e000 	ldrb.w	lr, [ip]
 8010256:	4665      	mov	r5, ip
 8010258:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801025c:	4630      	mov	r0, r6
 801025e:	463c      	mov	r4, r7
 8010260:	f10c 0c01 	add.w	ip, ip, #1
 8010264:	f106 0601 	add.w	r6, r6, #1
 8010268:	f107 0701 	add.w	r7, r7, #1
 801026c:	d007      	beq.n	801027e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 801026e:	3301      	adds	r3, #1
 8010270:	4299      	cmp	r1, r3
 8010272:	4665      	mov	r5, ip
 8010274:	f806 ec01 	strb.w	lr, [r6, #-1]
 8010278:	d8eb      	bhi.n	8010252 <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 801027a:	463c      	mov	r4, r7
 801027c:	4630      	mov	r0, r6
 801027e:	4606      	mov	r6, r0
 8010280:	200a      	movs	r0, #10
 8010282:	3401      	adds	r4, #1
 8010284:	f806 0b01 	strb.w	r0, [r6], #1
 8010288:	4628      	mov	r0, r5
 801028a:	f815 7b01 	ldrb.w	r7, [r5], #1
 801028e:	2f7b      	cmp	r7, #123	; 0x7b
 8010290:	d0ad      	beq.n	80101ee <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8010292:	1c5f      	adds	r7, r3, #1
 8010294:	4299      	cmp	r1, r3
 8010296:	463b      	mov	r3, r7
 8010298:	d8f6      	bhi.n	8010288 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 801029a:	e7a8      	b.n	80101ee <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 801029c:	2401      	movs	r4, #1
 801029e:	e7ee      	b.n	801027e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80102a0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80102a4:	d1ac      	bne.n	8010200 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 80102a6:	4602      	mov	r2, r0
 80102a8:	e7b3      	b.n	8010212 <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 80102aa:	283a      	cmp	r0, #58	; 0x3a
 80102ac:	d115      	bne.n	80102da <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 80102ae:	462b      	mov	r3, r5
 80102b0:	e01b      	b.n	80102ea <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 80102b2:	4686      	mov	lr, r0
 80102b4:	e027      	b.n	8010306 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 80102b6:	4673      	mov	r3, lr
 80102b8:	f806 cb01 	strb.w	ip, [r6], #1
 80102bc:	3401      	adds	r4, #1
 80102be:	3301      	adds	r3, #1
 80102c0:	e79c      	b.n	80101fc <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 80102c2:	4620      	mov	r0, r4
 80102c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80102c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80102cc:	e7fa      	b.n	80102c4 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 80102ce:	4630      	mov	r0, r6
 80102d0:	f800 7b01 	strb.w	r7, [r0], #1
 80102d4:	469e      	mov	lr, r3
 80102d6:	4606      	mov	r6, r0
 80102d8:	3401      	adds	r4, #1
 80102da:	4571      	cmp	r1, lr
 80102dc:	462b      	mov	r3, r5
 80102de:	7828      	ldrb	r0, [r5, #0]
 80102e0:	f10e 0e01 	add.w	lr, lr, #1
 80102e4:	f105 0501 	add.w	r5, r5, #1
 80102e8:	d8df      	bhi.n	80102aa <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 80102ea:	781d      	ldrb	r5, [r3, #0]
 80102ec:	461a      	mov	r2, r3
 80102ee:	2d2f      	cmp	r5, #47	; 0x2f
 80102f0:	4670      	mov	r0, lr
 80102f2:	f103 0301 	add.w	r3, r3, #1
 80102f6:	f10e 0e01 	add.w	lr, lr, #1
 80102fa:	d8da      	bhi.n	80102b2 <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 80102fc:	4281      	cmp	r1, r0
 80102fe:	d8f4      	bhi.n	80102ea <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8010300:	2d22      	cmp	r5, #34	; 0x22
 8010302:	bf08      	it	eq
 8010304:	461a      	moveq	r2, r3
 8010306:	4610      	mov	r0, r2
 8010308:	f810 5b01 	ldrb.w	r5, [r0], #1
 801030c:	f10e 0301 	add.w	r3, lr, #1
 8010310:	2d22      	cmp	r5, #34	; 0x22
 8010312:	d0d0      	beq.n	80102b6 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8010314:	2d2c      	cmp	r5, #44	; 0x2c
 8010316:	d0ce      	beq.n	80102b6 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8010318:	2d7d      	cmp	r5, #125	; 0x7d
 801031a:	d0cc      	beq.n	80102b6 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 801031c:	4571      	cmp	r1, lr
 801031e:	d9ce      	bls.n	80102be <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8010320:	f1a5 0e20 	sub.w	lr, r5, #32
 8010324:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8010328:	d803      	bhi.n	8010332 <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 801032a:	4602      	mov	r2, r0
 801032c:	f806 5b01 	strb.w	r5, [r6], #1
 8010330:	3401      	adds	r4, #1
 8010332:	469e      	mov	lr, r3
 8010334:	e7e7      	b.n	8010306 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08010338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8010338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801033c:	6002      	str	r2, [r0, #0]
 801033e:	4614      	mov	r4, r2
 8010340:	2200      	movs	r2, #0
 8010342:	4606      	mov	r6, r0
 8010344:	460f      	mov	r7, r1
 8010346:	80c2      	strh	r2, [r0, #6]
 8010348:	4a1b      	ldr	r2, [pc, #108]	; (80103b8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801034a:	8083      	strh	r3, [r0, #4]
 801034c:	7810      	ldrb	r0, [r2, #0]
 801034e:	f000 0001 	and.w	r0, r0, #1
 8010352:	7230      	strb	r0, [r6, #8]
 8010354:	463d      	mov	r5, r7
 8010356:	782a      	ldrb	r2, [r5, #0]
 8010358:	3701      	adds	r7, #1
 801035a:	2a00      	cmp	r2, #0
 801035c:	d1fa      	bne.n	8010354 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 801035e:	1a6d      	subs	r5, r5, r1
 8010360:	b29b      	uxth	r3, r3
 8010362:	b1d0      	cbz	r0, 801039a <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8010364:	1d2f      	adds	r7, r5, #4
 8010366:	429f      	cmp	r7, r3
 8010368:	d814      	bhi.n	8010394 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801036a:	f04f 087b 	mov.w	r8, #123	; 0x7b
 801036e:	f04f 0922 	mov.w	r9, #34	; 0x22
 8010372:	462a      	mov	r2, r5
 8010374:	f884 8000 	strb.w	r8, [r4]
 8010378:	f884 9001 	strb.w	r9, [r4, #1]
 801037c:	1ca0      	adds	r0, r4, #2
 801037e:	f000 fed4 	bl	801112a <memmove>
 8010382:	223a      	movs	r2, #58	; 0x3a
 8010384:	1963      	adds	r3, r4, r5
 8010386:	3505      	adds	r5, #5
 8010388:	f883 9002 	strb.w	r9, [r3, #2]
 801038c:	70da      	strb	r2, [r3, #3]
 801038e:	80f5      	strh	r5, [r6, #6]
 8010390:	f804 8007 	strb.w	r8, [r4, r7]
 8010394:	4630      	mov	r0, r6
 8010396:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801039a:	1caf      	adds	r7, r5, #2
 801039c:	429f      	cmp	r7, r3
 801039e:	d8f9      	bhi.n	8010394 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80103a0:	4620      	mov	r0, r4
 80103a2:	2323      	movs	r3, #35	; 0x23
 80103a4:	462a      	mov	r2, r5
 80103a6:	f800 3b01 	strb.w	r3, [r0], #1
 80103aa:	f000 febe 	bl	801112a <memmove>
 80103ae:	230a      	movs	r3, #10
 80103b0:	442c      	add	r4, r5
 80103b2:	7063      	strb	r3, [r4, #1]
 80103b4:	80f7      	strh	r7, [r6, #6]
 80103b6:	e7ed      	b.n	8010394 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80103b8:	2000969e 	mulcs	r0, lr, r6

080103bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80103bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103be:	469c      	mov	ip, r3
 80103c0:	8885      	ldrh	r5, [r0, #4]
 80103c2:	88c3      	ldrh	r3, [r0, #6]
 80103c4:	b085      	sub	sp, #20
 80103c6:	42ab      	cmp	r3, r5
 80103c8:	d302      	bcc.n	80103d0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80103ca:	2000      	movs	r0, #0
 80103cc:	b005      	add	sp, #20
 80103ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103d0:	4604      	mov	r4, r0
 80103d2:	6800      	ldr	r0, [r0, #0]
 80103d4:	1aed      	subs	r5, r5, r3
 80103d6:	4418      	add	r0, r3
 80103d8:	b2d6      	uxtb	r6, r2
 80103da:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80103de:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80103e2:	f894 e008 	ldrb.w	lr, [r4, #8]
 80103e6:	0e12      	lsrs	r2, r2, #24
 80103e8:	f1bc 0f00 	cmp.w	ip, #0
 80103ec:	d109      	bne.n	8010402 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80103ee:	f1be 0f00 	cmp.w	lr, #0
 80103f2:	d109      	bne.n	8010408 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80103f4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80103f8:	e9cd 6700 	strd	r6, r7, [sp]
 80103fc:	460b      	mov	r3, r1
 80103fe:	4a0e      	ldr	r2, [pc, #56]	; (8010438 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8010400:	e008      	b.n	8010414 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8010402:	f1be 0f00 	cmp.w	lr, #0
 8010406:	d00f      	beq.n	8010428 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8010408:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801040c:	460b      	mov	r3, r1
 801040e:	e9cd 6700 	strd	r6, r7, [sp]
 8010412:	4a0a      	ldr	r2, [pc, #40]	; (801043c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8010414:	4629      	mov	r1, r5
 8010416:	f7f9 f8db 	bl	80095d0 <snprintf>
 801041a:	4285      	cmp	r5, r0
 801041c:	dbd5      	blt.n	80103ca <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 801041e:	88e3      	ldrh	r3, [r4, #6]
 8010420:	4403      	add	r3, r0
 8010422:	80e3      	strh	r3, [r4, #6]
 8010424:	2001      	movs	r0, #1
 8010426:	e7d1      	b.n	80103cc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8010428:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801042c:	e9cd 6700 	strd	r6, r7, [sp]
 8010430:	460b      	mov	r3, r1
 8010432:	4a03      	ldr	r2, [pc, #12]	; (8010440 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8010434:	e7ee      	b.n	8010414 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8010436:	bf00      	nop
 8010438:	08014bcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, fp, lr}
 801043c:	08014bb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, fp, lr}
 8010440:	08014bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, lr}

08010444 <PropertiesBuilder::AddComment(char const*)>:
 8010444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010446:	7a06      	ldrb	r6, [r0, #8]
 8010448:	b996      	cbnz	r6, 8010470 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801044a:	4604      	mov	r4, r0
 801044c:	88c0      	ldrh	r0, [r0, #6]
 801044e:	88a5      	ldrh	r5, [r4, #4]
 8010450:	42a8      	cmp	r0, r5
 8010452:	d20d      	bcs.n	8010470 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8010454:	6827      	ldr	r7, [r4, #0]
 8010456:	1a2d      	subs	r5, r5, r0
 8010458:	460b      	mov	r3, r1
 801045a:	4a06      	ldr	r2, [pc, #24]	; (8010474 <PropertiesBuilder::AddComment(char const*)+0x30>)
 801045c:	4629      	mov	r1, r5
 801045e:	4438      	add	r0, r7
 8010460:	f7f9 f8b6 	bl	80095d0 <snprintf>
 8010464:	4285      	cmp	r5, r0
 8010466:	bfa1      	itttt	ge
 8010468:	2601      	movge	r6, #1
 801046a:	88e3      	ldrhge	r3, [r4, #6]
 801046c:	18c0      	addge	r0, r0, r3
 801046e:	80e0      	strhge	r0, [r4, #6]
 8010470:	4630      	mov	r0, r6
 8010472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010474:	08014bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, lr}

08010478 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8010478:	e9c0 1200 	strd	r1, r2, [r0]
 801047c:	4770      	bx	lr

0801047e <ReadConfigFile::~ReadConfigFile()>:
 801047e:	4770      	bx	lr

08010480 <ReadConfigFile::Read(char const*, unsigned int)>:
 8010480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010484:	4606      	mov	r6, r0
 8010486:	460d      	mov	r5, r1
 8010488:	4614      	mov	r4, r2
 801048a:	f04f 0800 	mov.w	r8, #0
 801048e:	b090      	sub	sp, #64	; 0x40
 8010490:	b33c      	cbz	r4, 80104e2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8010492:	466b      	mov	r3, sp
 8010494:	462a      	mov	r2, r5
 8010496:	4619      	mov	r1, r3
 8010498:	7817      	ldrb	r7, [r2, #0]
 801049a:	4610      	mov	r0, r2
 801049c:	2f0d      	cmp	r7, #13
 801049e:	f102 0201 	add.w	r2, r2, #1
 80104a2:	d013      	beq.n	80104cc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 80104a4:	2f0a      	cmp	r7, #10
 80104a6:	d011      	beq.n	80104cc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 80104a8:	f803 7b01 	strb.w	r7, [r3], #1
 80104ac:	1a58      	subs	r0, r3, r1
 80104ae:	283f      	cmp	r0, #63	; 0x3f
 80104b0:	4615      	mov	r5, r2
 80104b2:	dc16      	bgt.n	80104e2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80104b4:	3c01      	subs	r4, #1
 80104b6:	d1ef      	bne.n	8010498 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 80104b8:	f89d 2000 	ldrb.w	r2, [sp]
 80104bc:	2a60      	cmp	r2, #96	; 0x60
 80104be:	d9e7      	bls.n	8010490 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80104c0:	f883 8000 	strb.w	r8, [r3]
 80104c4:	e9d6 3000 	ldrd	r3, r0, [r6]
 80104c8:	4798      	blx	r3
 80104ca:	e7e1      	b.n	8010490 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80104cc:	4605      	mov	r5, r0
 80104ce:	2c00      	cmp	r4, #0
 80104d0:	d0f2      	beq.n	80104b8 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 80104d2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80104d6:	2a0d      	cmp	r2, #13
 80104d8:	d001      	beq.n	80104de <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80104da:	2a0a      	cmp	r2, #10
 80104dc:	d1ec      	bne.n	80104b8 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 80104de:	3c01      	subs	r4, #1
 80104e0:	e7f4      	b.n	80104cc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 80104e2:	b010      	add	sp, #64	; 0x40
 80104e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080104e8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80104e8:	b570      	push	{r4, r5, r6, lr}
 80104ea:	4615      	mov	r5, r2
 80104ec:	461c      	mov	r4, r3
 80104ee:	f000 f91b 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 80104f2:	b160      	cbz	r0, 801050e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 80104f4:	2100      	movs	r1, #0
 80104f6:	5c43      	ldrb	r3, [r0, r1]
 80104f8:	6826      	ldr	r6, [r4, #0]
 80104fa:	b28a      	uxth	r2, r1
 80104fc:	b123      	cbz	r3, 8010508 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 80104fe:	42b2      	cmp	r2, r6
 8010500:	d207      	bcs.n	8010512 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 8010502:	546b      	strb	r3, [r5, r1]
 8010504:	3101      	adds	r1, #1
 8010506:	e7f6      	b.n	80104f6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8010508:	2000      	movs	r0, #0
 801050a:	6022      	str	r2, [r4, #0]
 801050c:	bd70      	pop	{r4, r5, r6, pc}
 801050e:	2001      	movs	r0, #1
 8010510:	e7fc      	b.n	801050c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 8010512:	2b0a      	cmp	r3, #10
 8010514:	d0f8      	beq.n	8010508 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8010516:	2002      	movs	r0, #2
 8010518:	e7f8      	b.n	801050c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0801051a <Sscan::Float(char const*, char const*, float&)>:
 801051a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801051e:	4616      	mov	r6, r2
 8010520:	f000 f902 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 8010524:	2800      	cmp	r0, #0
 8010526:	d059      	beq.n	80105dc <Sscan::Float(char const*, char const*, float&)+0xc2>
 8010528:	4604      	mov	r4, r0
 801052a:	7803      	ldrb	r3, [r0, #0]
 801052c:	2b2d      	cmp	r3, #45	; 0x2d
 801052e:	bf08      	it	eq
 8010530:	3401      	addeq	r4, #1
 8010532:	7823      	ldrb	r3, [r4, #0]
 8010534:	bf0c      	ite	eq
 8010536:	f04f 0801 	moveq.w	r8, #1
 801053a:	f04f 0800 	movne.w	r8, #0
 801053e:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8010542:	d103      	bne.n	801054c <Sscan::Float(char const*, char const*, float&)+0x32>
 8010544:	2702      	movs	r7, #2
 8010546:	4638      	mov	r0, r7
 8010548:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801054c:	2000      	movs	r0, #0
 801054e:	220a      	movs	r2, #10
 8010550:	7823      	ldrb	r3, [r4, #0]
 8010552:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8010556:	2909      	cmp	r1, #9
 8010558:	d8f4      	bhi.n	8010544 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801055a:	fb02 3000 	mla	r0, r2, r0, r3
 801055e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010562:	3830      	subs	r0, #48	; 0x30
 8010564:	2b2e      	cmp	r3, #46	; 0x2e
 8010566:	d002      	beq.n	801056e <Sscan::Float(char const*, char const*, float&)+0x54>
 8010568:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801056c:	d1f0      	bne.n	8010550 <Sscan::Float(char const*, char const*, float&)+0x36>
 801056e:	f7f7 fbc5 	bl	8007cfc <__aeabi_ui2f>
 8010572:	6030      	str	r0, [r6, #0]
 8010574:	7823      	ldrb	r3, [r4, #0]
 8010576:	4605      	mov	r5, r0
 8010578:	2b2e      	cmp	r3, #46	; 0x2e
 801057a:	d008      	beq.n	801058e <Sscan::Float(char const*, char const*, float&)+0x74>
 801057c:	f1b8 0f00 	cmp.w	r8, #0
 8010580:	d101      	bne.n	8010586 <Sscan::Float(char const*, char const*, float&)+0x6c>
 8010582:	2700      	movs	r7, #0
 8010584:	e7df      	b.n	8010546 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8010586:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 801058a:	6035      	str	r5, [r6, #0]
 801058c:	e7f9      	b.n	8010582 <Sscan::Float(char const*, char const*, float&)+0x68>
 801058e:	f04f 0901 	mov.w	r9, #1
 8010592:	2000      	movs	r0, #0
 8010594:	220a      	movs	r2, #10
 8010596:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801059a:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 801059e:	d007      	beq.n	80105b0 <Sscan::Float(char const*, char const*, float&)+0x96>
 80105a0:	3b30      	subs	r3, #48	; 0x30
 80105a2:	2b09      	cmp	r3, #9
 80105a4:	d8ce      	bhi.n	8010544 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80105a6:	fb02 3000 	mla	r0, r2, r0, r3
 80105aa:	fb02 f909 	mul.w	r9, r2, r9
 80105ae:	e7f2      	b.n	8010596 <Sscan::Float(char const*, char const*, float&)+0x7c>
 80105b0:	f7f7 fba4 	bl	8007cfc <__aeabi_ui2f>
 80105b4:	4604      	mov	r4, r0
 80105b6:	4648      	mov	r0, r9
 80105b8:	f7f7 fba0 	bl	8007cfc <__aeabi_ui2f>
 80105bc:	4601      	mov	r1, r0
 80105be:	4620      	mov	r0, r4
 80105c0:	f7f8 f884 	bl	80086cc <__aeabi_fdiv>
 80105c4:	4629      	mov	r1, r5
 80105c6:	f7f7 fae9 	bl	8007b9c <__addsf3>
 80105ca:	f1b8 0f00 	cmp.w	r8, #0
 80105ce:	d101      	bne.n	80105d4 <Sscan::Float(char const*, char const*, float&)+0xba>
 80105d0:	6030      	str	r0, [r6, #0]
 80105d2:	e7d6      	b.n	8010582 <Sscan::Float(char const*, char const*, float&)+0x68>
 80105d4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80105d8:	6030      	str	r0, [r6, #0]
 80105da:	e7b4      	b.n	8010546 <Sscan::Float(char const*, char const*, float&)+0x2c>
 80105dc:	2701      	movs	r7, #1
 80105de:	e7b2      	b.n	8010546 <Sscan::Float(char const*, char const*, float&)+0x2c>

080105e0 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80105e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80105e2:	4615      	mov	r5, r2
 80105e4:	f000 f8a0 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 80105e8:	b3c0      	cbz	r0, 801065c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 80105ea:	2400      	movs	r4, #0
 80105ec:	270a      	movs	r7, #10
 80105ee:	ae01      	add	r6, sp, #4
 80105f0:	4603      	mov	r3, r0
 80105f2:	2100      	movs	r1, #0
 80105f4:	f100 0c04 	add.w	ip, r0, #4
 80105f8:	4618      	mov	r0, r3
 80105fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80105fe:	2a2e      	cmp	r2, #46	; 0x2e
 8010600:	d00e      	beq.n	8010620 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8010602:	b16a      	cbz	r2, 8010620 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8010604:	4560      	cmp	r0, ip
 8010606:	d102      	bne.n	801060e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 8010608:	2002      	movs	r0, #2
 801060a:	b003      	add	sp, #12
 801060c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801060e:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8010612:	2b09      	cmp	r3, #9
 8010614:	d8f8      	bhi.n	8010608 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010616:	fb07 2101 	mla	r1, r7, r1, r2
 801061a:	4603      	mov	r3, r0
 801061c:	3930      	subs	r1, #48	; 0x30
 801061e:	e7eb      	b.n	80105f8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 8010620:	29ff      	cmp	r1, #255	; 0xff
 8010622:	d8f1      	bhi.n	8010608 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010624:	3401      	adds	r4, #1
 8010626:	2c03      	cmp	r4, #3
 8010628:	f806 1b01 	strb.w	r1, [r6], #1
 801062c:	d1e0      	bne.n	80105f0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 801062e:	2400      	movs	r4, #0
 8010630:	220a      	movs	r2, #10
 8010632:	1d1e      	adds	r6, r3, #4
 8010634:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8010638:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 801063c:	d007      	beq.n	801064e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 801063e:	429e      	cmp	r6, r3
 8010640:	d0e2      	beq.n	8010608 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010642:	3930      	subs	r1, #48	; 0x30
 8010644:	2909      	cmp	r1, #9
 8010646:	d8df      	bhi.n	8010608 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010648:	fb02 1404 	mla	r4, r2, r4, r1
 801064c:	e7f2      	b.n	8010634 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 801064e:	2cff      	cmp	r4, #255	; 0xff
 8010650:	d8da      	bhi.n	8010608 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8010652:	f88d 4007 	strb.w	r4, [sp, #7]
 8010656:	9b01      	ldr	r3, [sp, #4]
 8010658:	602b      	str	r3, [r5, #0]
 801065a:	e7d6      	b.n	801060a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 801065c:	2001      	movs	r0, #1
 801065e:	e7d4      	b.n	801060a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

08010660 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8010660:	b538      	push	{r3, r4, r5, lr}
 8010662:	4615      	mov	r5, r2
 8010664:	f000 f860 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 8010668:	b1a0      	cbz	r0, 8010694 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 801066a:	4604      	mov	r4, r0
 801066c:	2100      	movs	r1, #0
 801066e:	220a      	movs	r2, #10
 8010670:	7823      	ldrb	r3, [r4, #0]
 8010672:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8010676:	2809      	cmp	r0, #9
 8010678:	d80e      	bhi.n	8010698 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801067a:	fb02 3101 	mla	r1, r2, r1, r3
 801067e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010682:	3930      	subs	r1, #48	; 0x30
 8010684:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8010688:	d1f2      	bne.n	8010670 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 801068a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801068e:	d203      	bcs.n	8010698 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010690:	8029      	strh	r1, [r5, #0]
 8010692:	bd38      	pop	{r3, r4, r5, pc}
 8010694:	2001      	movs	r0, #1
 8010696:	e7fc      	b.n	8010692 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8010698:	2002      	movs	r0, #2
 801069a:	e7fa      	b.n	8010692 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801069c <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 801069c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801069e:	4615      	mov	r5, r2
 80106a0:	f000 f842 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 80106a4:	b1f8      	cbz	r0, 80106e6 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 80106a6:	2300      	movs	r3, #0
 80106a8:	4604      	mov	r4, r0
 80106aa:	461e      	mov	r6, r3
 80106ac:	270a      	movs	r7, #10
 80106ae:	7822      	ldrb	r2, [r4, #0]
 80106b0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80106b4:	2909      	cmp	r1, #9
 80106b6:	d818      	bhi.n	80106ea <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80106b8:	fba3 3107 	umull	r3, r1, r3, r7
 80106bc:	fb07 1106 	mla	r1, r7, r6, r1
 80106c0:	3b30      	subs	r3, #48	; 0x30
 80106c2:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 80106c6:	18d3      	adds	r3, r2, r3
 80106c8:	f141 0600 	adc.w	r6, r1, #0
 80106cc:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80106d0:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80106d4:	d1eb      	bne.n	80106ae <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 80106d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80106da:	429a      	cmp	r2, r3
 80106dc:	eb70 0206 	sbcs.w	r2, r0, r6
 80106e0:	d303      	bcc.n	80106ea <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80106e2:	602b      	str	r3, [r5, #0]
 80106e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80106e6:	2001      	movs	r0, #1
 80106e8:	e7fc      	b.n	80106e4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 80106ea:	2002      	movs	r0, #2
 80106ec:	e7fa      	b.n	80106e4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

080106ee <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80106ee:	b538      	push	{r3, r4, r5, lr}
 80106f0:	4615      	mov	r5, r2
 80106f2:	f000 f819 	bl	8010728 <Sscan::checkName(char const*, char const*)>
 80106f6:	b198      	cbz	r0, 8010720 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80106f8:	4604      	mov	r4, r0
 80106fa:	2100      	movs	r1, #0
 80106fc:	220a      	movs	r2, #10
 80106fe:	7823      	ldrb	r3, [r4, #0]
 8010700:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8010704:	2809      	cmp	r0, #9
 8010706:	d80d      	bhi.n	8010724 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8010708:	fb02 3101 	mla	r1, r2, r1, r3
 801070c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010710:	3930      	subs	r1, #48	; 0x30
 8010712:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8010716:	d1f2      	bne.n	80106fe <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8010718:	29ff      	cmp	r1, #255	; 0xff
 801071a:	d803      	bhi.n	8010724 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801071c:	7029      	strb	r1, [r5, #0]
 801071e:	bd38      	pop	{r3, r4, r5, pc}
 8010720:	2001      	movs	r0, #1
 8010722:	e7fc      	b.n	801071e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8010724:	2002      	movs	r0, #2
 8010726:	e7fa      	b.n	801071e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08010728 <Sscan::checkName(char const*, char const*)>:
 8010728:	4603      	mov	r3, r0
 801072a:	b510      	push	{r4, lr}
 801072c:	3901      	subs	r1, #1
 801072e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8010732:	461c      	mov	r4, r3
 8010734:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010738:	b120      	cbz	r0, 8010744 <Sscan::checkName(char const*, char const*)+0x1c>
 801073a:	b10a      	cbz	r2, 8010740 <Sscan::checkName(char const*, char const*)+0x18>
 801073c:	4290      	cmp	r0, r2
 801073e:	d0f6      	beq.n	801072e <Sscan::checkName(char const*, char const*)+0x6>
 8010740:	2000      	movs	r0, #0
 8010742:	e006      	b.n	8010752 <Sscan::checkName(char const*, char const*)+0x2a>
 8010744:	2a3d      	cmp	r2, #61	; 0x3d
 8010746:	d104      	bne.n	8010752 <Sscan::checkName(char const*, char const*)+0x2a>
 8010748:	7860      	ldrb	r0, [r4, #1]
 801074a:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 801074e:	d000      	beq.n	8010752 <Sscan::checkName(char const*, char const*)+0x2a>
 8010750:	1c60      	adds	r0, r4, #1
 8010752:	bd10      	pop	{r4, pc}

08010754 <Display::PrintInfo() [clone .isra.0]>:
 8010754:	b910      	cbnz	r0, 801075c <Display::PrintInfo() [clone .isra.0]+0x8>
 8010756:	4803      	ldr	r0, [pc, #12]	; (8010764 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8010758:	f000 bd23 	b.w	80111a2 <puts>
 801075c:	6803      	ldr	r3, [r0, #0]
 801075e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010760:	4718      	bx	r3
 8010762:	bf00      	nop
 8010764:	08014c93 	stmdaeq	r1, {r0, r1, r4, r7, sl, fp, lr}

08010768 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8010768:	b513      	push	{r0, r1, r4, lr}
 801076a:	4604      	mov	r4, r0
 801076c:	0a13      	lsrs	r3, r2, #8
 801076e:	7800      	ldrb	r0, [r0, #0]
 8010770:	f88d 1004 	strb.w	r1, [sp, #4]
 8010774:	f88d 3005 	strb.w	r3, [sp, #5]
 8010778:	f88d 2006 	strb.w	r2, [sp, #6]
 801077c:	f001 fc56 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 8010780:	6860      	ldr	r0, [r4, #4]
 8010782:	f001 fc4b 	bl	801201c <gd32_i2c_set_baudrate(unsigned int)>
 8010786:	2103      	movs	r1, #3
 8010788:	a801      	add	r0, sp, #4
 801078a:	f001 fc55 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 801078e:	b002      	add	sp, #8
 8010790:	bd10      	pop	{r4, pc}

08010792 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8010792:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010794:	460d      	mov	r5, r1
 8010796:	4604      	mov	r4, r0
 8010798:	f001 fc48 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 801079c:	4628      	mov	r0, r5
 801079e:	f001 fc3d 	bl	801201c <gd32_i2c_set_baudrate(unsigned int)>
 80107a2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80107a6:	2b07      	cmp	r3, #7
 80107a8:	d902      	bls.n	80107b0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80107aa:	3c50      	subs	r4, #80	; 0x50
 80107ac:	2c0f      	cmp	r4, #15
 80107ae:	d809      	bhi.n	80107c4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80107b0:	2101      	movs	r1, #1
 80107b2:	f10d 0007 	add.w	r0, sp, #7
 80107b6:	f001 fca5 	bl	8012104 <gd32_i2c_read(char*, unsigned int)>
 80107ba:	fab0 f080 	clz	r0, r0
 80107be:	0940      	lsrs	r0, r0, #5
 80107c0:	b003      	add	sp, #12
 80107c2:	bd30      	pop	{r4, r5, pc}
 80107c4:	2100      	movs	r1, #0
 80107c6:	4608      	mov	r0, r1
 80107c8:	f001 fc36 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 80107cc:	e7f5      	b.n	80107ba <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080107ce <Display::Detect7Segment()>:
 80107ce:	b538      	push	{r3, r4, r5, lr}
 80107d0:	68c1      	ldr	r1, [r0, #12]
 80107d2:	4604      	mov	r4, r0
 80107d4:	7a00      	ldrb	r0, [r0, #8]
 80107d6:	f7ff ffdc 	bl	8010792 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80107da:	7460      	strb	r0, [r4, #17]
 80107dc:	b170      	cbz	r0, 80107fc <Display::Detect7Segment()+0x2e>
 80107de:	2200      	movs	r2, #0
 80107e0:	f104 0508 	add.w	r5, r4, #8
 80107e4:	4611      	mov	r1, r2
 80107e6:	4628      	mov	r0, r5
 80107e8:	f7ff ffbe 	bl	8010768 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80107ec:	7c63      	ldrb	r3, [r4, #17]
 80107ee:	b12b      	cbz	r3, 80107fc <Display::Detect7Segment()+0x2e>
 80107f0:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80107f4:	2112      	movs	r1, #18
 80107f6:	4628      	mov	r0, r5
 80107f8:	f7ff ffb6 	bl	8010768 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80107fc:	bd38      	pop	{r3, r4, r5, pc}

080107fe <Display::Detect(display::Type)>:
 80107fe:	2902      	cmp	r1, #2
 8010800:	b538      	push	{r3, r4, r5, lr}
 8010802:	4604      	mov	r4, r0
 8010804:	d014      	beq.n	8010830 <Display::Detect(display::Type)+0x32>
 8010806:	2904      	cmp	r1, #4
 8010808:	d01b      	beq.n	8010842 <Display::Detect(display::Type)+0x44>
 801080a:	69a0      	ldr	r0, [r4, #24]
 801080c:	b168      	cbz	r0, 801082a <Display::Detect(display::Type)+0x2c>
 801080e:	6803      	ldr	r3, [r0, #0]
 8010810:	689b      	ldr	r3, [r3, #8]
 8010812:	4798      	blx	r3
 8010814:	4603      	mov	r3, r0
 8010816:	69a0      	ldr	r0, [r4, #24]
 8010818:	b9ab      	cbnz	r3, 8010846 <Display::Detect(display::Type)+0x48>
 801081a:	b110      	cbz	r0, 8010822 <Display::Detect(display::Type)+0x24>
 801081c:	6803      	ldr	r3, [r0, #0]
 801081e:	685b      	ldr	r3, [r3, #4]
 8010820:	4798      	blx	r3
 8010822:	2300      	movs	r3, #0
 8010824:	61a3      	str	r3, [r4, #24]
 8010826:	2304      	movs	r3, #4
 8010828:	6023      	str	r3, [r4, #0]
 801082a:	2300      	movs	r3, #0
 801082c:	6163      	str	r3, [r4, #20]
 801082e:	e010      	b.n	8010852 <Display::Detect(display::Type)+0x54>
 8010830:	2018      	movs	r0, #24
 8010832:	f000 fbbb 	bl	8010fac <operator new(unsigned int)>
 8010836:	4605      	mov	r5, r0
 8010838:	2100      	movs	r1, #0
 801083a:	f000 f8a3 	bl	8010984 <Ssd1306::Ssd1306(TOledPanel)>
 801083e:	61a5      	str	r5, [r4, #24]
 8010840:	e7e3      	b.n	801080a <Display::Detect(display::Type)+0xc>
 8010842:	6001      	str	r1, [r0, #0]
 8010844:	e7e1      	b.n	801080a <Display::Detect(display::Type)+0xc>
 8010846:	6803      	ldr	r3, [r0, #0]
 8010848:	68db      	ldr	r3, [r3, #12]
 801084a:	4798      	blx	r3
 801084c:	69a3      	ldr	r3, [r4, #24]
 801084e:	2b00      	cmp	r3, #0
 8010850:	d0eb      	beq.n	801082a <Display::Detect(display::Type)+0x2c>
 8010852:	bd38      	pop	{r3, r4, r5, pc}

08010854 <Display::Display()>:
 8010854:	2304      	movs	r3, #4
 8010856:	b510      	push	{r4, lr}
 8010858:	6003      	str	r3, [r0, #0]
 801085a:	4b0f      	ldr	r3, [pc, #60]	; (8010898 <Display::Display()+0x44>)
 801085c:	4604      	mov	r4, r0
 801085e:	681b      	ldr	r3, [r3, #0]
 8010860:	4a0e      	ldr	r2, [pc, #56]	; (801089c <Display::Display()+0x48>)
 8010862:	6043      	str	r3, [r0, #4]
 8010864:	2321      	movs	r3, #33	; 0x21
 8010866:	7203      	strb	r3, [r0, #8]
 8010868:	4b0d      	ldr	r3, [pc, #52]	; (80108a0 <Display::Display()+0x4c>)
 801086a:	2102      	movs	r1, #2
 801086c:	60c3      	str	r3, [r0, #12]
 801086e:	2300      	movs	r3, #0
 8010870:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8010874:	8203      	strh	r3, [r0, #16]
 8010876:	4b0b      	ldr	r3, [pc, #44]	; (80108a4 <Display::Display()+0x50>)
 8010878:	6018      	str	r0, [r3, #0]
 801087a:	f7ff ffc0 	bl	80107fe <Display::Detect(display::Type)>
 801087e:	4620      	mov	r0, r4
 8010880:	f7ff ffa5 	bl	80107ce <Display::Detect7Segment()>
 8010884:	69a3      	ldr	r3, [r4, #24]
 8010886:	b10b      	cbz	r3, 801088c <Display::Display()+0x38>
 8010888:	f000 f80e 	bl	80108a8 <display::timeout::gpio_init()>
 801088c:	69a0      	ldr	r0, [r4, #24]
 801088e:	f7ff ff61 	bl	8010754 <Display::PrintInfo() [clone .isra.0]>
 8010892:	4620      	mov	r0, r4
 8010894:	bd10      	pop	{r4, pc}
 8010896:	bf00      	nop
 8010898:	200097a4 	andcs	r9, r0, r4, lsr #15
 801089c:	000493e0 	andeq	r9, r4, r0, ror #7
 80108a0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80108a4:	200096a0 	andcs	r9, r0, r0, lsr #13

080108a8 <display::timeout::gpio_init()>:
 80108a8:	4770      	bx	lr

080108aa <display::timeout::gpio_renew()>:
 80108aa:	2000      	movs	r0, #0
 80108ac:	4770      	bx	lr

080108ae <Ssd1306::~Ssd1306()>:
 80108ae:	4770      	bx	lr

080108b0 <Ssd1306::SetCursor(unsigned int)>:
 80108b0:	4770      	bx	lr
	...

080108b4 <Ssd1306::PrintInfo()>:
 80108b4:	b410      	push	{r4}
 80108b6:	4906      	ldr	r1, [pc, #24]	; (80108d0 <Ssd1306::PrintInfo()+0x1c>)
 80108b8:	7c44      	ldrb	r4, [r0, #17]
 80108ba:	7903      	ldrb	r3, [r0, #4]
 80108bc:	7942      	ldrb	r2, [r0, #5]
 80108be:	4805      	ldr	r0, [pc, #20]	; (80108d4 <Ssd1306::PrintInfo()+0x20>)
 80108c0:	2c00      	cmp	r4, #0
 80108c2:	bf08      	it	eq
 80108c4:	4601      	moveq	r1, r0
 80108c6:	4804      	ldr	r0, [pc, #16]	; (80108d8 <Ssd1306::PrintInfo()+0x24>)
 80108c8:	bc10      	pop	{r4}
 80108ca:	f7f8 be71 	b.w	80095b0 <printf>
 80108ce:	bf00      	nop
 80108d0:	08014ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, lr}
 80108d4:	08014cab 	stmdaeq	r1, {r0, r1, r3, r5, r7, sl, fp, lr}
 80108d8:	08014cb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, fp, lr}

080108dc <Ssd1306::~Ssd1306()>:
 80108dc:	b510      	push	{r4, lr}
 80108de:	4604      	mov	r4, r0
 80108e0:	f000 fb60 	bl	8010fa4 <operator delete(void*)>
 80108e4:	4620      	mov	r0, r4
 80108e6:	bd10      	pop	{r4, pc}

080108e8 <HAL_I2C::Setup()>:
 80108e8:	b510      	push	{r4, lr}
 80108ea:	4604      	mov	r4, r0
 80108ec:	7800      	ldrb	r0, [r0, #0]
 80108ee:	f001 fb9d 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 80108f2:	6860      	ldr	r0, [r4, #4]
 80108f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108f8:	f001 bb90 	b.w	801201c <gd32_i2c_set_baudrate(unsigned int)>

080108fc <Ssd1306::PutChar(int)>:
 80108fc:	b510      	push	{r4, lr}
 80108fe:	f1a1 0420 	sub.w	r4, r1, #32
 8010902:	2c5f      	cmp	r4, #95	; 0x5f
 8010904:	bf88      	it	hi
 8010906:	2400      	movhi	r4, #0
 8010908:	3008      	adds	r0, #8
 801090a:	f7ff ffed 	bl	80108e8 <HAL_I2C::Setup()>
 801090e:	4804      	ldr	r0, [pc, #16]	; (8010920 <Ssd1306::PutChar(int)+0x24>)
 8010910:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8010914:	4420      	add	r0, r4
 8010916:	2107      	movs	r1, #7
 8010918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801091c:	f001 bb8c 	b.w	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010920:	08014cc8 	stmdaeq	r1, {r3, r6, r7, sl, fp, lr}

08010924 <Ssd1306::PutString(char const*)>:
 8010924:	b538      	push	{r3, r4, r5, lr}
 8010926:	4605      	mov	r5, r0
 8010928:	1e4c      	subs	r4, r1, #1
 801092a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801092e:	b119      	cbz	r1, 8010938 <Ssd1306::PutString(char const*)+0x14>
 8010930:	4628      	mov	r0, r5
 8010932:	f7ff ffe3 	bl	80108fc <Ssd1306::PutChar(int)>
 8010936:	e7f8      	b.n	801092a <Ssd1306::PutString(char const*)+0x6>
 8010938:	bd38      	pop	{r3, r4, r5, pc}

0801093a <Ssd1306::Text(char const*, unsigned int)>:
 801093a:	b570      	push	{r4, r5, r6, lr}
 801093c:	7903      	ldrb	r3, [r0, #4]
 801093e:	4605      	mov	r5, r0
 8010940:	460c      	mov	r4, r1
 8010942:	4293      	cmp	r3, r2
 8010944:	bf94      	ite	ls
 8010946:	18ce      	addls	r6, r1, r3
 8010948:	188e      	addhi	r6, r1, r2
 801094a:	42b4      	cmp	r4, r6
 801094c:	d005      	beq.n	801095a <Ssd1306::Text(char const*, unsigned int)+0x20>
 801094e:	4628      	mov	r0, r5
 8010950:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010954:	f7ff ffd2 	bl	80108fc <Ssd1306::PutChar(int)>
 8010958:	e7f7      	b.n	801094a <Ssd1306::Text(char const*, unsigned int)+0x10>
 801095a:	bd70      	pop	{r4, r5, r6, pc}

0801095c <Ssd1306::InitMembers()>:
 801095c:	7c03      	ldrb	r3, [r0, #16]
 801095e:	b12b      	cbz	r3, 801096c <Ssd1306::InitMembers()+0x10>
 8010960:	3b01      	subs	r3, #1
 8010962:	2b01      	cmp	r3, #1
 8010964:	d908      	bls.n	8010978 <Ssd1306::InitMembers()+0x1c>
 8010966:	f640 0315 	movw	r3, #2069	; 0x815
 801096a:	e007      	b.n	801097c <Ssd1306::InitMembers()+0x20>
 801096c:	f640 0315 	movw	r3, #2069	; 0x815
 8010970:	8083      	strh	r3, [r0, #4]
 8010972:	2308      	movs	r3, #8
 8010974:	6143      	str	r3, [r0, #20]
 8010976:	4770      	bx	lr
 8010978:	f240 4315 	movw	r3, #1045	; 0x415
 801097c:	8083      	strh	r3, [r0, #4]
 801097e:	2304      	movs	r3, #4
 8010980:	e7f8      	b.n	8010974 <Ssd1306::InitMembers()+0x18>
	...

08010984 <Ssd1306::Ssd1306(TOledPanel)>:
 8010984:	4a08      	ldr	r2, [pc, #32]	; (80109a8 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8010986:	b508      	push	{r3, lr}
 8010988:	6002      	str	r2, [r0, #0]
 801098a:	227f      	movs	r2, #127	; 0x7f
 801098c:	80c2      	strh	r2, [r0, #6]
 801098e:	223c      	movs	r2, #60	; 0x3c
 8010990:	7202      	strb	r2, [r0, #8]
 8010992:	4a06      	ldr	r2, [pc, #24]	; (80109ac <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8010994:	7401      	strb	r1, [r0, #16]
 8010996:	60c2      	str	r2, [r0, #12]
 8010998:	2200      	movs	r2, #0
 801099a:	7442      	strb	r2, [r0, #17]
 801099c:	4a04      	ldr	r2, [pc, #16]	; (80109b0 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 801099e:	6010      	str	r0, [r2, #0]
 80109a0:	f7ff ffdc 	bl	801095c <Ssd1306::InitMembers()>
 80109a4:	bd08      	pop	{r3, pc}
 80109a6:	bf00      	nop
 80109a8:	08014fa0 	stmdaeq	r1, {r5, r7, r8, r9, sl, fp, lr}
 80109ac:	00061a80 	andeq	r1, r6, r0, lsl #21
 80109b0:	2000972c 	andcs	r9, r0, ip, lsr #14

080109b4 <Ssd1306::SendCommand(unsigned char)>:
 80109b4:	2300      	movs	r3, #0
 80109b6:	b507      	push	{r0, r1, r2, lr}
 80109b8:	3008      	adds	r0, #8
 80109ba:	f88d 3004 	strb.w	r3, [sp, #4]
 80109be:	f88d 1005 	strb.w	r1, [sp, #5]
 80109c2:	f7ff ff91 	bl	80108e8 <HAL_I2C::Setup()>
 80109c6:	2102      	movs	r1, #2
 80109c8:	a801      	add	r0, sp, #4
 80109ca:	f001 fb35 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 80109ce:	b003      	add	sp, #12
 80109d0:	f85d fb04 	ldr.w	pc, [sp], #4

080109d4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80109d4:	2914      	cmp	r1, #20
 80109d6:	b570      	push	{r4, r5, r6, lr}
 80109d8:	4605      	mov	r5, r0
 80109da:	4616      	mov	r6, r2
 80109dc:	d81c      	bhi.n	8010a18 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80109de:	7943      	ldrb	r3, [r0, #5]
 80109e0:	4293      	cmp	r3, r2
 80109e2:	d919      	bls.n	8010a18 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80109e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80109e8:	7c43      	ldrb	r3, [r0, #17]
 80109ea:	004c      	lsls	r4, r1, #1
 80109ec:	b2e4      	uxtb	r4, r4
 80109ee:	b10b      	cbz	r3, 80109f4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 80109f0:	3404      	adds	r4, #4
 80109f2:	b2e4      	uxtb	r4, r4
 80109f4:	4628      	mov	r0, r5
 80109f6:	f004 010e 	and.w	r1, r4, #14
 80109fa:	f7ff ffdb 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 80109fe:	0921      	lsrs	r1, r4, #4
 8010a00:	4628      	mov	r0, r5
 8010a02:	f041 0110 	orr.w	r1, r1, #16
 8010a06:	f7ff ffd5 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010a0a:	4628      	mov	r0, r5
 8010a0c:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8010a10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a14:	f7ff bfce 	b.w	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010a18:	bd70      	pop	{r4, r5, r6, pc}

08010a1a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8010a1a:	b570      	push	{r4, r5, r6, lr}
 8010a1c:	4604      	mov	r4, r0
 8010a1e:	4615      	mov	r5, r2
 8010a20:	461e      	mov	r6, r3
 8010a22:	b171      	cbz	r1, 8010a42 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8010a24:	7943      	ldrb	r3, [r0, #5]
 8010a26:	428b      	cmp	r3, r1
 8010a28:	d30b      	bcc.n	8010a42 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8010a2a:	3901      	subs	r1, #1
 8010a2c:	b2ca      	uxtb	r2, r1
 8010a2e:	2100      	movs	r1, #0
 8010a30:	f7ff ffd0 	bl	80109d4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a34:	4632      	mov	r2, r6
 8010a36:	4629      	mov	r1, r5
 8010a38:	4620      	mov	r0, r4
 8010a3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a3e:	f7ff bf7c 	b.w	801093a <Ssd1306::Text(char const*, unsigned int)>
 8010a42:	bd70      	pop	{r4, r5, r6, pc}

08010a44 <Ssd1306::ClearLine(unsigned char)>:
 8010a44:	b538      	push	{r3, r4, r5, lr}
 8010a46:	4605      	mov	r5, r0
 8010a48:	b1b9      	cbz	r1, 8010a7a <Ssd1306::ClearLine(unsigned char)+0x36>
 8010a4a:	7943      	ldrb	r3, [r0, #5]
 8010a4c:	428b      	cmp	r3, r1
 8010a4e:	d314      	bcc.n	8010a7a <Ssd1306::ClearLine(unsigned char)+0x36>
 8010a50:	3901      	subs	r1, #1
 8010a52:	b2cc      	uxtb	r4, r1
 8010a54:	4622      	mov	r2, r4
 8010a56:	2100      	movs	r1, #0
 8010a58:	f7ff ffbc 	bl	80109d4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a5c:	f105 0008 	add.w	r0, r5, #8
 8010a60:	f7ff ff42 	bl	80108e8 <HAL_I2C::Setup()>
 8010a64:	2181      	movs	r1, #129	; 0x81
 8010a66:	4805      	ldr	r0, [pc, #20]	; (8010a7c <Ssd1306::ClearLine(unsigned char)+0x38>)
 8010a68:	f001 fae6 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010a6c:	4622      	mov	r2, r4
 8010a6e:	4628      	mov	r0, r5
 8010a70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a74:	2100      	movs	r1, #0
 8010a76:	f7ff bfad 	b.w	80109d4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010a7a:	bd38      	pop	{r3, r4, r5, pc}
 8010a7c:	200096a4 	andcs	r9, r0, r4, lsr #13

08010a80 <Ssd1306::SetSleep(bool)>:
 8010a80:	b111      	cbz	r1, 8010a88 <Ssd1306::SetSleep(bool)+0x8>
 8010a82:	21ae      	movs	r1, #174	; 0xae
 8010a84:	f7ff bf96 	b.w	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010a88:	21af      	movs	r1, #175	; 0xaf
 8010a8a:	e7fb      	b.n	8010a84 <Ssd1306::SetSleep(bool)+0x4>

08010a8c <Ssd1306::SetContrast(unsigned char)>:
 8010a8c:	b538      	push	{r3, r4, r5, lr}
 8010a8e:	4604      	mov	r4, r0
 8010a90:	460d      	mov	r5, r1
 8010a92:	7181      	strb	r1, [r0, #6]
 8010a94:	2181      	movs	r1, #129	; 0x81
 8010a96:	f7ff ff8d 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010a9a:	4629      	mov	r1, r5
 8010a9c:	4620      	mov	r0, r4
 8010a9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010aa2:	f7ff bf87 	b.w	80109b4 <Ssd1306::SendCommand(unsigned char)>

08010aa6 <Ssd1306::SetFlipVertically(bool)>:
 8010aa6:	b510      	push	{r4, lr}
 8010aa8:	4604      	mov	r4, r0
 8010aaa:	71c1      	strb	r1, [r0, #7]
 8010aac:	b141      	cbz	r1, 8010ac0 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8010aae:	21c0      	movs	r1, #192	; 0xc0
 8010ab0:	f7ff ff80 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ab4:	21a0      	movs	r1, #160	; 0xa0
 8010ab6:	4620      	mov	r0, r4
 8010ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010abc:	f7ff bf7a 	b.w	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ac0:	21c8      	movs	r1, #200	; 0xc8
 8010ac2:	f7ff ff77 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ac6:	21a1      	movs	r1, #161	; 0xa1
 8010ac8:	e7f5      	b.n	8010ab6 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08010acc <Ssd1306::CheckSH1106()>:
 8010acc:	b570      	push	{r4, r5, r6, lr}
 8010ace:	4604      	mov	r4, r0
 8010ad0:	b086      	sub	sp, #24
 8010ad2:	2100      	movs	r1, #0
 8010ad4:	f7ff ff6e 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ad8:	2190      	movs	r1, #144	; 0x90
 8010ada:	4620      	mov	r0, r4
 8010adc:	f7ff ff6a 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ae0:	21b0      	movs	r1, #176	; 0xb0
 8010ae2:	4620      	mov	r0, r4
 8010ae4:	f7ff ff66 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ae8:	4b22      	ldr	r3, [pc, #136]	; (8010b74 <Ssd1306::CheckSH1106()+0xa8>)
 8010aea:	f104 0608 	add.w	r6, r4, #8
 8010aee:	6818      	ldr	r0, [r3, #0]
 8010af0:	791b      	ldrb	r3, [r3, #4]
 8010af2:	ad02      	add	r5, sp, #8
 8010af4:	9002      	str	r0, [sp, #8]
 8010af6:	4630      	mov	r0, r6
 8010af8:	712b      	strb	r3, [r5, #4]
 8010afa:	f7ff fef5 	bl	80108e8 <HAL_I2C::Setup()>
 8010afe:	2105      	movs	r1, #5
 8010b00:	4628      	mov	r0, r5
 8010b02:	f001 fa99 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010b06:	2100      	movs	r1, #0
 8010b08:	4620      	mov	r0, r4
 8010b0a:	f7ff ff53 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010b0e:	2190      	movs	r1, #144	; 0x90
 8010b10:	4620      	mov	r0, r4
 8010b12:	f7ff ff4f 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010b16:	21b0      	movs	r1, #176	; 0xb0
 8010b18:	4620      	mov	r0, r4
 8010b1a:	f7ff ff4b 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010b1e:	2300      	movs	r3, #0
 8010b20:	9304      	str	r3, [sp, #16]
 8010b22:	f88d 3014 	strb.w	r3, [sp, #20]
 8010b26:	2340      	movs	r3, #64	; 0x40
 8010b28:	4630      	mov	r0, r6
 8010b2a:	f88d 3007 	strb.w	r3, [sp, #7]
 8010b2e:	f7ff fedb 	bl	80108e8 <HAL_I2C::Setup()>
 8010b32:	2101      	movs	r1, #1
 8010b34:	f10d 0007 	add.w	r0, sp, #7
 8010b38:	f001 fa7e 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010b3c:	4630      	mov	r0, r6
 8010b3e:	f7ff fed3 	bl	80108e8 <HAL_I2C::Setup()>
 8010b42:	2105      	movs	r1, #5
 8010b44:	a804      	add	r0, sp, #16
 8010b46:	f001 fadd 	bl	8012104 <gd32_i2c_read(char*, unsigned int)>
 8010b4a:	2201      	movs	r2, #1
 8010b4c:	5cab      	ldrb	r3, [r5, r2]
 8010b4e:	a904      	add	r1, sp, #16
 8010b50:	3201      	adds	r2, #1
 8010b52:	4411      	add	r1, r2
 8010b54:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8010b58:	428b      	cmp	r3, r1
 8010b5a:	d006      	beq.n	8010b6a <Ssd1306::CheckSH1106()+0x9e>
 8010b5c:	1a5b      	subs	r3, r3, r1
 8010b5e:	fab3 f383 	clz	r3, r3
 8010b62:	095b      	lsrs	r3, r3, #5
 8010b64:	7463      	strb	r3, [r4, #17]
 8010b66:	b006      	add	sp, #24
 8010b68:	bd70      	pop	{r4, r5, r6, pc}
 8010b6a:	2a05      	cmp	r2, #5
 8010b6c:	d1ee      	bne.n	8010b4c <Ssd1306::CheckSH1106()+0x80>
 8010b6e:	2300      	movs	r3, #0
 8010b70:	e7f5      	b.n	8010b5e <Ssd1306::CheckSH1106()+0x92>
 8010b72:	bf00      	nop
 8010b74:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}

08010b78 <Ssd1306::Cls()>:
 8010b78:	7c43      	ldrb	r3, [r0, #17]
 8010b7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b7e:	2b00      	cmp	r3, #0
 8010b80:	bf0c      	ite	eq
 8010b82:	2500      	moveq	r5, #0
 8010b84:	2504      	movne	r5, #4
 8010b86:	4604      	mov	r4, r0
 8010b88:	2600      	movs	r6, #0
 8010b8a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8010b8e:	f045 0810 	orr.w	r8, r5, #16
 8010b92:	b2ff      	uxtb	r7, r7
 8010b94:	6963      	ldr	r3, [r4, #20]
 8010b96:	4629      	mov	r1, r5
 8010b98:	42b3      	cmp	r3, r6
 8010b9a:	4620      	mov	r0, r4
 8010b9c:	d91b      	bls.n	8010bd6 <Ssd1306::Cls()+0x5e>
 8010b9e:	f7ff ff09 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010ba2:	4641      	mov	r1, r8
 8010ba4:	4620      	mov	r0, r4
 8010ba6:	f7ff ff05 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010baa:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8010bae:	4620      	mov	r0, r4
 8010bb0:	b2c9      	uxtb	r1, r1
 8010bb2:	f7ff feff 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010bb6:	7c23      	ldrb	r3, [r4, #16]
 8010bb8:	b123      	cbz	r3, 8010bc4 <Ssd1306::Cls()+0x4c>
 8010bba:	3b01      	subs	r3, #1
 8010bbc:	2b01      	cmp	r3, #1
 8010bbe:	d901      	bls.n	8010bc4 <Ssd1306::Cls()+0x4c>
 8010bc0:	3601      	adds	r6, #1
 8010bc2:	e7e7      	b.n	8010b94 <Ssd1306::Cls()+0x1c>
 8010bc4:	f104 0008 	add.w	r0, r4, #8
 8010bc8:	f7ff fe8e 	bl	80108e8 <HAL_I2C::Setup()>
 8010bcc:	4639      	mov	r1, r7
 8010bce:	4808      	ldr	r0, [pc, #32]	; (8010bf0 <Ssd1306::Cls()+0x78>)
 8010bd0:	f001 fa32 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010bd4:	e7f4      	b.n	8010bc0 <Ssd1306::Cls()+0x48>
 8010bd6:	f7ff feed 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010bda:	4641      	mov	r1, r8
 8010bdc:	4620      	mov	r0, r4
 8010bde:	f7ff fee9 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010be2:	4620      	mov	r0, r4
 8010be4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010be8:	21b0      	movs	r1, #176	; 0xb0
 8010bea:	f7ff bee3 	b.w	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010bee:	bf00      	nop
 8010bf0:	200096a4 	andcs	r9, r0, r4, lsr #13

08010bf4 <Ssd1306::Start()>:
 8010bf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010bf6:	7a04      	ldrb	r4, [r0, #8]
 8010bf8:	68c6      	ldr	r6, [r0, #12]
 8010bfa:	4605      	mov	r5, r0
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	f001 fa15 	bl	801202c <gd32_i2c_set_address(unsigned char)>
 8010c02:	4630      	mov	r0, r6
 8010c04:	f001 fa0a 	bl	801201c <gd32_i2c_set_baudrate(unsigned int)>
 8010c08:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010c0c:	2b07      	cmp	r3, #7
 8010c0e:	d902      	bls.n	8010c16 <Ssd1306::Start()+0x22>
 8010c10:	3c50      	subs	r4, #80	; 0x50
 8010c12:	2c0f      	cmp	r4, #15
 8010c14:	d80f      	bhi.n	8010c36 <Ssd1306::Start()+0x42>
 8010c16:	2101      	movs	r1, #1
 8010c18:	f10d 0007 	add.w	r0, sp, #7
 8010c1c:	f001 fa72 	bl	8012104 <gd32_i2c_read(char*, unsigned int)>
 8010c20:	fab0 f480 	clz	r4, r0
 8010c24:	0964      	lsrs	r4, r4, #5
 8010c26:	b35c      	cbz	r4, 8010c80 <Ssd1306::Start()+0x8c>
 8010c28:	7c2e      	ldrb	r6, [r5, #16]
 8010c2a:	b14e      	cbz	r6, 8010c40 <Ssd1306::Start()+0x4c>
 8010c2c:	3e01      	subs	r6, #1
 8010c2e:	2e01      	cmp	r6, #1
 8010c30:	d929      	bls.n	8010c86 <Ssd1306::Start()+0x92>
 8010c32:	2400      	movs	r4, #0
 8010c34:	e024      	b.n	8010c80 <Ssd1306::Start()+0x8c>
 8010c36:	2100      	movs	r1, #0
 8010c38:	4608      	mov	r0, r1
 8010c3a:	f001 f9fd 	bl	8012038 <gd32_i2c_write(char const*, unsigned int)>
 8010c3e:	e7ef      	b.n	8010c20 <Ssd1306::Start()+0x2c>
 8010c40:	4f16      	ldr	r7, [pc, #88]	; (8010c9c <Ssd1306::Start()+0xa8>)
 8010c42:	4628      	mov	r0, r5
 8010c44:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010c48:	3601      	adds	r6, #1
 8010c4a:	f7ff feb3 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010c4e:	2e18      	cmp	r6, #24
 8010c50:	d1f7      	bne.n	8010c42 <Ssd1306::Start()+0x4e>
 8010c52:	2300      	movs	r3, #0
 8010c54:	4a12      	ldr	r2, [pc, #72]	; (8010ca0 <Ssd1306::Start()+0xac>)
 8010c56:	4618      	mov	r0, r3
 8010c58:	4611      	mov	r1, r2
 8010c5a:	3301      	adds	r3, #1
 8010c5c:	2b86      	cmp	r3, #134	; 0x86
 8010c5e:	f802 0b01 	strb.w	r0, [r2], #1
 8010c62:	d1fa      	bne.n	8010c5a <Ssd1306::Start()+0x66>
 8010c64:	2340      	movs	r3, #64	; 0x40
 8010c66:	4628      	mov	r0, r5
 8010c68:	700b      	strb	r3, [r1, #0]
 8010c6a:	f7ff ff2f 	bl	8010acc <Ssd1306::CheckSH1106()>
 8010c6e:	4628      	mov	r0, r5
 8010c70:	f7ff ff82 	bl	8010b78 <Ssd1306::Cls()>
 8010c74:	21af      	movs	r1, #175	; 0xaf
 8010c76:	4628      	mov	r0, r5
 8010c78:	f7ff fe9c 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010c7c:	2301      	movs	r3, #1
 8010c7e:	71eb      	strb	r3, [r5, #7]
 8010c80:	4620      	mov	r0, r4
 8010c82:	b003      	add	sp, #12
 8010c84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c86:	2600      	movs	r6, #0
 8010c88:	4f06      	ldr	r7, [pc, #24]	; (8010ca4 <Ssd1306::Start()+0xb0>)
 8010c8a:	4628      	mov	r0, r5
 8010c8c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010c90:	3601      	adds	r6, #1
 8010c92:	f7ff fe8f 	bl	80109b4 <Ssd1306::SendCommand(unsigned char)>
 8010c96:	2e18      	cmp	r6, #24
 8010c98:	d1f7      	bne.n	8010c8a <Ssd1306::Start()+0x96>
 8010c9a:	e7da      	b.n	8010c52 <Ssd1306::Start()+0x5e>
 8010c9c:	08014f80 	stmdaeq	r1, {r7, r8, r9, sl, fp, lr}
 8010ca0:	200096a4 	andcs	r9, r0, r4, lsr #13
 8010ca4:	08014f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, lr}

08010ca8 <console_putc>:
 8010ca8:	f000 bb7e 	b.w	80113a8 <uart0_putc>

08010cac <console_puts>:
 8010cac:	f000 bb9c 	b.w	80113e8 <uart0_puts>

08010cb0 <console_set_fg_color>:
 8010cb0:	2807      	cmp	r0, #7
 8010cb2:	d810      	bhi.n	8010cd6 <console_set_fg_color+0x26>
 8010cb4:	e8df f000 	tbb	[pc, r0]
 8010cb8:	0b090704 	bleq	82528d0 <__exidx_end+0x23d7fc>
 8010cbc:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8010c88 <Ssd1306::Start()+0x94>
 8010cc0:	4806      	ldr	r0, [pc, #24]	; (8010cdc <console_set_fg_color+0x2c>)
 8010cc2:	f000 bb91 	b.w	80113e8 <uart0_puts>
 8010cc6:	4806      	ldr	r0, [pc, #24]	; (8010ce0 <console_set_fg_color+0x30>)
 8010cc8:	e7fb      	b.n	8010cc2 <console_set_fg_color+0x12>
 8010cca:	4806      	ldr	r0, [pc, #24]	; (8010ce4 <console_set_fg_color+0x34>)
 8010ccc:	e7f9      	b.n	8010cc2 <console_set_fg_color+0x12>
 8010cce:	4806      	ldr	r0, [pc, #24]	; (8010ce8 <console_set_fg_color+0x38>)
 8010cd0:	e7f7      	b.n	8010cc2 <console_set_fg_color+0x12>
 8010cd2:	4806      	ldr	r0, [pc, #24]	; (8010cec <console_set_fg_color+0x3c>)
 8010cd4:	e7f5      	b.n	8010cc2 <console_set_fg_color+0x12>
 8010cd6:	4806      	ldr	r0, [pc, #24]	; (8010cf0 <console_set_fg_color+0x40>)
 8010cd8:	e7f3      	b.n	8010cc2 <console_set_fg_color+0x12>
 8010cda:	bf00      	nop
 8010cdc:	08014fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
 8010ce0:	08014fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ce4:	08014fea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ce8:	08014ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cec:	0801331f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, ip, sp}
 8010cf0:	08014ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}

08010cf4 <console_error>:
 8010cf4:	b510      	push	{r4, lr}
 8010cf6:	4604      	mov	r4, r0
 8010cf8:	4805      	ldr	r0, [pc, #20]	; (8010d10 <console_error+0x1c>)
 8010cfa:	f000 fb75 	bl	80113e8 <uart0_puts>
 8010cfe:	4620      	mov	r0, r4
 8010d00:	f000 fb72 	bl	80113e8 <uart0_puts>
 8010d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d08:	4802      	ldr	r0, [pc, #8]	; (8010d14 <console_error+0x20>)
 8010d0a:	f000 bb6d 	b.w	80113e8 <uart0_puts>
 8010d0e:	bf00      	nop
 8010d10:	08014fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d14:	0801331f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, ip, sp}

08010d18 <console_status>:
 8010d18:	b510      	push	{r4, lr}
 8010d1a:	460c      	mov	r4, r1
 8010d1c:	b280      	uxth	r0, r0
 8010d1e:	f7ff ffc7 	bl	8010cb0 <console_set_fg_color>
 8010d22:	4807      	ldr	r0, [pc, #28]	; (8010d40 <console_status+0x28>)
 8010d24:	f000 fb60 	bl	80113e8 <uart0_puts>
 8010d28:	4620      	mov	r0, r4
 8010d2a:	f000 fb5d 	bl	80113e8 <uart0_puts>
 8010d2e:	200a      	movs	r0, #10
 8010d30:	f000 fb3a 	bl	80113a8 <uart0_putc>
 8010d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d38:	4802      	ldr	r0, [pc, #8]	; (8010d44 <console_status+0x2c>)
 8010d3a:	f000 bb55 	b.w	80113e8 <uart0_puts>
 8010d3e:	bf00      	nop
 8010d40:	08014fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, lr}
 8010d44:	0801331f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, ip, sp}

08010d48 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8010d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d4c:	4617      	mov	r7, r2
 8010d4e:	461e      	mov	r6, r3
 8010d50:	4d14      	ldr	r5, [pc, #80]	; (8010da4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8010d52:	4b15      	ldr	r3, [pc, #84]	; (8010da8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8010d54:	b086      	sub	sp, #24
 8010d56:	6018      	str	r0, [r3, #0]
 8010d58:	4604      	mov	r4, r0
 8010d5a:	f105 0803 	add.w	r8, r5, #3
 8010d5e:	2203      	movs	r2, #3
 8010d60:	4628      	mov	r0, r5
 8010d62:	f000 f9e2 	bl	801112a <memmove>
 8010d66:	4639      	mov	r1, r7
 8010d68:	220b      	movs	r2, #11
 8010d6a:	4640      	mov	r0, r8
 8010d6c:	f000 f9dd 	bl	801112a <memmove>
 8010d70:	f105 030e 	add.w	r3, r5, #14
 8010d74:	4631      	mov	r1, r6
 8010d76:	2208      	movs	r2, #8
 8010d78:	4618      	mov	r0, r3
 8010d7a:	f000 f9d6 	bl	801112a <memmove>
 8010d7e:	2308      	movs	r3, #8
 8010d80:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8010d84:	230b      	movs	r3, #11
 8010d86:	9302      	str	r3, [sp, #8]
 8010d88:	4b08      	ldr	r3, [pc, #32]	; (8010dac <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8010d8a:	9005      	str	r0, [sp, #20]
 8010d8c:	e9cd 5300 	strd	r5, r3, [sp]
 8010d90:	213f      	movs	r1, #63	; 0x3f
 8010d92:	2303      	movs	r3, #3
 8010d94:	4a06      	ldr	r2, [pc, #24]	; (8010db0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8010d96:	4807      	ldr	r0, [pc, #28]	; (8010db4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8010d98:	f7f8 fc1a 	bl	80095d0 <snprintf>
 8010d9c:	4620      	mov	r0, r4
 8010d9e:	b006      	add	sp, #24
 8010da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010da4:	20009730 	andcs	r9, r0, r0, lsr r7
 8010da8:	20009788 	andcs	r9, r0, r8, lsl #15
 8010dac:	08013364 	stmdaeq	r1, {r2, r5, r6, r8, r9, ip, sp}
 8010db0:	08014ffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010db4:	20009746 	andcs	r9, r0, r6, asr #14

08010db8 <FirmwareVersion::Print(char const*)>:
 8010db8:	b510      	push	{r4, lr}
 8010dba:	460c      	mov	r4, r1
 8010dbc:	4804      	ldr	r0, [pc, #16]	; (8010dd0 <FirmwareVersion::Print(char const*)+0x18>)
 8010dbe:	f000 f9f0 	bl	80111a2 <puts>
 8010dc2:	b124      	cbz	r4, 8010dce <FirmwareVersion::Print(char const*)+0x16>
 8010dc4:	4620      	mov	r0, r4
 8010dc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dca:	f000 b9ea 	b.w	80111a2 <puts>
 8010dce:	bd10      	pop	{r4, pc}
 8010dd0:	20009746 	andcs	r9, r0, r6, asr #14

08010dd4 <LedBlink::LedBlink()>:
 8010dd4:	b538      	push	{r3, r4, r5, lr}
 8010dd6:	2205      	movs	r2, #5
 8010dd8:	2300      	movs	r3, #0
 8010dda:	e9c0 3200 	strd	r3, r2, [r0]
 8010dde:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8010de2:	6083      	str	r3, [r0, #8]
 8010de4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010de8:	6143      	str	r3, [r0, #20]
 8010dea:	4b09      	ldr	r3, [pc, #36]	; (8010e10 <LedBlink::LedBlink()+0x3c>)
 8010dec:	4d09      	ldr	r5, [pc, #36]	; (8010e14 <LedBlink::LedBlink()+0x40>)
 8010dee:	4604      	mov	r4, r0
 8010df0:	6018      	str	r0, [r3, #0]
 8010df2:	f240 6004 	movw	r0, #1540	; 0x604
 8010df6:	f000 fd01 	bl	80117fc <rcu_periph_clock_enable>
 8010dfa:	4628      	mov	r0, r5
 8010dfc:	2301      	movs	r3, #1
 8010dfe:	2203      	movs	r2, #3
 8010e00:	2110      	movs	r1, #16
 8010e02:	f000 fc63 	bl	80116cc <gpio_init>
 8010e06:	2301      	movs	r3, #1
 8010e08:	4620      	mov	r0, r4
 8010e0a:	616b      	str	r3, [r5, #20]
 8010e0c:	bd38      	pop	{r3, r4, r5, pc}
 8010e0e:	bf00      	nop
 8010e10:	2000978c 	andcs	r9, r0, ip, lsl #15
 8010e14:	40011000 	andmi	r1, r1, r0

08010e18 <LedBlink::SetMode(ledblink::Mode)>:
 8010e18:	6843      	ldr	r3, [r0, #4]
 8010e1a:	428b      	cmp	r3, r1
 8010e1c:	d02f      	beq.n	8010e7e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010e1e:	6041      	str	r1, [r0, #4]
 8010e20:	2904      	cmp	r1, #4
 8010e22:	d822      	bhi.n	8010e6a <LedBlink::SetMode(ledblink::Mode)+0x52>
 8010e24:	e8df f001 	tbb	[pc, r1]
 8010e28:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8010e2c:	23ff001d 	mvnscs	r0, #29
 8010e30:	6003      	str	r3, [r0, #0]
 8010e32:	2300      	movs	r3, #0
 8010e34:	2201      	movs	r2, #1
 8010e36:	60c3      	str	r3, [r0, #12]
 8010e38:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010e3c:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010e40:	611a      	str	r2, [r3, #16]
 8010e42:	6880      	ldr	r0, [r0, #8]
 8010e44:	b1d8      	cbz	r0, 8010e7e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8010e46:	6803      	ldr	r3, [r0, #0]
 8010e48:	689b      	ldr	r3, [r3, #8]
 8010e4a:	4718      	bx	r3
 8010e4c:	2301      	movs	r3, #1
 8010e4e:	6003      	str	r3, [r0, #0]
 8010e50:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8010e54:	60c3      	str	r3, [r0, #12]
 8010e56:	e7f4      	b.n	8010e42 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010e58:	2303      	movs	r3, #3
 8010e5a:	6003      	str	r3, [r0, #0]
 8010e5c:	f240 134d 	movw	r3, #333	; 0x14d
 8010e60:	e7f8      	b.n	8010e54 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e62:	2305      	movs	r3, #5
 8010e64:	6003      	str	r3, [r0, #0]
 8010e66:	23c8      	movs	r3, #200	; 0xc8
 8010e68:	e7f4      	b.n	8010e54 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8010e6a:	2300      	movs	r3, #0
 8010e6c:	2201      	movs	r2, #1
 8010e6e:	6003      	str	r3, [r0, #0]
 8010e70:	60c3      	str	r3, [r0, #12]
 8010e72:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8010e76:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8010e7a:	615a      	str	r2, [r3, #20]
 8010e7c:	e7e1      	b.n	8010e42 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8010e7e:	4770      	bx	lr

08010e80 <Hardware::Hardware()>:
 8010e80:	b570      	push	{r4, r5, r6, lr}
 8010e82:	2400      	movs	r4, #0
 8010e84:	4b26      	ldr	r3, [pc, #152]	; (8010f20 <Hardware::Hardware()+0xa0>)
 8010e86:	b090      	sub	sp, #64	; 0x40
 8010e88:	6004      	str	r4, [r0, #0]
 8010e8a:	7104      	strb	r4, [r0, #4]
 8010e8c:	4e25      	ldr	r6, [pc, #148]	; (8010f24 <Hardware::Hardware()+0xa4>)
 8010e8e:	6018      	str	r0, [r3, #0]
 8010e90:	4605      	mov	r5, r0
 8010e92:	f7f6 fb39 	bl	8007508 <console_init>
 8010e96:	f000 fab7 	bl	8011408 <systick_config>
 8010e9a:	f001 fb63 	bl	8012564 <udelay_init()>
 8010e9e:	f001 fb5f 	bl	8012560 <micros_init()>
 8010ea2:	f240 7004 	movw	r0, #1796	; 0x704
 8010ea6:	f000 fca9 	bl	80117fc <rcu_periph_clock_enable>
 8010eaa:	4630      	mov	r0, r6
 8010eac:	f000 fe02 	bl	8011ab4 <timer_deinit>
 8010eb0:	236b      	movs	r3, #107	; 0x6b
 8010eb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010eb6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010eba:	a903      	add	r1, sp, #12
 8010ebc:	4630      	mov	r0, r6
 8010ebe:	9305      	str	r3, [sp, #20]
 8010ec0:	f000 fe5a 	bl	8011b78 <timer_init>
 8010ec4:	4630      	mov	r0, r6
 8010ec6:	f000 feaf 	bl	8011c28 <timer_enable>
 8010eca:	f001 f819 	bl	8011f00 <gd32_adc_init()>
 8010ece:	2217      	movs	r2, #23
 8010ed0:	2301      	movs	r3, #1
 8010ed2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8010ed6:	237a      	movs	r3, #122	; 0x7a
 8010ed8:	a807      	add	r0, sp, #28
 8010eda:	930c      	str	r3, [sp, #48]	; 0x30
 8010edc:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8010ee0:	9407      	str	r4, [sp, #28]
 8010ee2:	940f      	str	r4, [sp, #60]	; 0x3c
 8010ee4:	f000 f9b6 	bl	8011254 <mktime>
 8010ee8:	4621      	mov	r1, r4
 8010eea:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8010eee:	a801      	add	r0, sp, #4
 8010ef0:	f000 fa26 	bl	8011340 <settimeofday>
 8010ef4:	f240 701b 	movw	r0, #1819	; 0x71b
 8010ef8:	f000 fc80 	bl	80117fc <rcu_periph_clock_enable>
 8010efc:	f240 701c 	movw	r0, #1820	; 0x71c
 8010f00:	f000 fc7c 	bl	80117fc <rcu_periph_clock_enable>
 8010f04:	f000 fc72 	bl	80117ec <pmu_backup_write_enable>
 8010f08:	f000 fb1c 	bl	8011544 <bkp_deinit>
 8010f0c:	4621      	mov	r1, r4
 8010f0e:	2002      	movs	r0, #2
 8010f10:	f000 fb20 	bl	8011554 <bkp_data_write>
 8010f14:	f001 f84e 	bl	8011fb4 <gd32_i2c_begin()>
 8010f18:	4628      	mov	r0, r5
 8010f1a:	b010      	add	sp, #64	; 0x40
 8010f1c:	bd70      	pop	{r4, r5, r6, pc}
 8010f1e:	bf00      	nop
 8010f20:	20009790 	mulcs	r0, r0, r7
 8010f24:	40001000 	andmi	r1, r0, r0

08010f28 <Hardware::Reboot()>:
 8010f28:	b508      	push	{r3, lr}
 8010f2a:	6803      	ldr	r3, [r0, #0]
 8010f2c:	4604      	mov	r4, r0
 8010f2e:	b153      	cbz	r3, 8010f46 <Hardware::Reboot()+0x1e>
 8010f30:	2300      	movs	r3, #0
 8010f32:	2104      	movs	r1, #4
 8010f34:	7103      	strb	r3, [r0, #4]
 8010f36:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010f3a:	f000 fb9d 	bl	8011678 <fwdgt_config>
 8010f3e:	6820      	ldr	r0, [r4, #0]
 8010f40:	6803      	ldr	r3, [r0, #0]
 8010f42:	689b      	ldr	r3, [r3, #8]
 8010f44:	4798      	blx	r3
 8010f46:	2102      	movs	r1, #2
 8010f48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010f4c:	f000 fb94 	bl	8011678 <fwdgt_config>
 8010f50:	2801      	cmp	r0, #1
 8010f52:	bf0c      	ite	eq
 8010f54:	2301      	moveq	r3, #1
 8010f56:	2300      	movne	r3, #0
 8010f58:	7123      	strb	r3, [r4, #4]
 8010f5a:	d101      	bne.n	8010f60 <Hardware::Reboot()+0x38>
 8010f5c:	f000 fb7c 	bl	8011658 <fwdgt_enable>
 8010f60:	2208      	movs	r2, #8
 8010f62:	4b0d      	ldr	r3, [pc, #52]	; (8010f98 <Hardware::Reboot()+0x70>)
 8010f64:	2501      	movs	r5, #1
 8010f66:	681b      	ldr	r3, [r3, #0]
 8010f68:	480c      	ldr	r0, [pc, #48]	; (8010f9c <Hardware::Reboot()+0x74>)
 8010f6a:	601a      	str	r2, [r3, #0]
 8010f6c:	227d      	movs	r2, #125	; 0x7d
 8010f6e:	490c      	ldr	r1, [pc, #48]	; (8010fa0 <Hardware::Reboot()+0x78>)
 8010f70:	60da      	str	r2, [r3, #12]
 8010f72:	68dc      	ldr	r4, [r3, #12]
 8010f74:	b904      	cbnz	r4, 8010f78 <Hardware::Reboot()+0x50>
 8010f76:	e7fe      	b.n	8010f76 <Hardware::Reboot()+0x4e>
 8010f78:	6802      	ldr	r2, [r0, #0]
 8010f7a:	695e      	ldr	r6, [r3, #20]
 8010f7c:	1b92      	subs	r2, r2, r6
 8010f7e:	4294      	cmp	r4, r2
 8010f80:	d8f8      	bhi.n	8010f74 <Hardware::Reboot()+0x4c>
 8010f82:	6802      	ldr	r2, [r0, #0]
 8010f84:	615a      	str	r2, [r3, #20]
 8010f86:	691a      	ldr	r2, [r3, #16]
 8010f88:	2a01      	cmp	r2, #1
 8010f8a:	f082 0401 	eor.w	r4, r2, #1
 8010f8e:	611c      	str	r4, [r3, #16]
 8010f90:	bf14      	ite	ne
 8010f92:	610d      	strne	r5, [r1, #16]
 8010f94:	614a      	streq	r2, [r1, #20]
 8010f96:	e7ec      	b.n	8010f72 <Hardware::Reboot()+0x4a>
 8010f98:	2000978c 	andcs	r9, r0, ip, lsl #15
 8010f9c:	200097a4 	andcs	r9, r0, r4, lsr #15
 8010fa0:	40011000 	andmi	r1, r1, r0

08010fa4 <operator delete(void*)>:
 8010fa4:	f000 b890 	b.w	80110c8 <free>

08010fa8 <operator delete[](void*)>:
 8010fa8:	f000 b88e 	b.w	80110c8 <free>

08010fac <operator new(unsigned int)>:
 8010fac:	f000 b842 	b.w	8011034 <malloc>

08010fb0 <operator new[](unsigned int)>:
 8010fb0:	f000 b840 	b.w	8011034 <malloc>

08010fb4 <inet_aton>:
 8010fb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010fb6:	f04f 0c0a 	mov.w	ip, #10
 8010fba:	2500      	movs	r5, #0
 8010fbc:	ae01      	add	r6, sp, #4
 8010fbe:	4603      	mov	r3, r0
 8010fc0:	2200      	movs	r2, #0
 8010fc2:	1d07      	adds	r7, r0, #4
 8010fc4:	e007      	b.n	8010fd6 <inet_aton+0x22>
 8010fc6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010fca:	2b09      	cmp	r3, #9
 8010fcc:	d820      	bhi.n	8011010 <inet_aton+0x5c>
 8010fce:	4603      	mov	r3, r0
 8010fd0:	fb0c 4202 	mla	r2, ip, r2, r4
 8010fd4:	3a30      	subs	r2, #48	; 0x30
 8010fd6:	4618      	mov	r0, r3
 8010fd8:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010fdc:	2c2e      	cmp	r4, #46	; 0x2e
 8010fde:	d111      	bne.n	8011004 <inet_aton+0x50>
 8010fe0:	3501      	adds	r5, #1
 8010fe2:	2d03      	cmp	r5, #3
 8010fe4:	f806 2b01 	strb.w	r2, [r6], #1
 8010fe8:	d1e9      	bne.n	8010fbe <inet_aton+0xa>
 8010fea:	2200      	movs	r2, #0
 8010fec:	250a      	movs	r5, #10
 8010fee:	1d1c      	adds	r4, r3, #4
 8010ff0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010ff4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8010ff8:	d10d      	bne.n	8011016 <inet_aton+0x62>
 8010ffa:	f88d 2007 	strb.w	r2, [sp, #7]
 8010ffe:	b9b1      	cbnz	r1, 801102e <inet_aton+0x7a>
 8011000:	2001      	movs	r0, #1
 8011002:	e006      	b.n	8011012 <inet_aton+0x5e>
 8011004:	2c00      	cmp	r4, #0
 8011006:	d0eb      	beq.n	8010fe0 <inet_aton+0x2c>
 8011008:	2c0a      	cmp	r4, #10
 801100a:	d0e9      	beq.n	8010fe0 <inet_aton+0x2c>
 801100c:	42b8      	cmp	r0, r7
 801100e:	d1da      	bne.n	8010fc6 <inet_aton+0x12>
 8011010:	2000      	movs	r0, #0
 8011012:	b003      	add	sp, #12
 8011014:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011016:	280a      	cmp	r0, #10
 8011018:	d0ef      	beq.n	8010ffa <inet_aton+0x46>
 801101a:	42a3      	cmp	r3, r4
 801101c:	d0f8      	beq.n	8011010 <inet_aton+0x5c>
 801101e:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8011022:	2e09      	cmp	r6, #9
 8011024:	d8f4      	bhi.n	8011010 <inet_aton+0x5c>
 8011026:	fb05 0202 	mla	r2, r5, r2, r0
 801102a:	3a30      	subs	r2, #48	; 0x30
 801102c:	e7e0      	b.n	8010ff0 <inet_aton+0x3c>
 801102e:	9b01      	ldr	r3, [sp, #4]
 8011030:	600b      	str	r3, [r1, #0]
 8011032:	e7e5      	b.n	8011000 <inet_aton+0x4c>

08011034 <malloc>:
 8011034:	b538      	push	{r3, r4, r5, lr}
 8011036:	4604      	mov	r4, r0
 8011038:	4601      	mov	r1, r0
 801103a:	481c      	ldr	r0, [pc, #112]	; (80110ac <malloc+0x78>)
 801103c:	f7f8 fab8 	bl	80095b0 <printf>
 8011040:	b17c      	cbz	r4, 8011062 <malloc+0x2e>
 8011042:	4b1b      	ldr	r3, [pc, #108]	; (80110b0 <malloc+0x7c>)
 8011044:	6818      	ldr	r0, [r3, #0]
 8011046:	b978      	cbnz	r0, 8011068 <malloc+0x34>
 8011048:	4a1a      	ldr	r2, [pc, #104]	; (80110b4 <malloc+0x80>)
 801104a:	f104 031b 	add.w	r3, r4, #27
 801104e:	6811      	ldr	r1, [r2, #0]
 8011050:	4819      	ldr	r0, [pc, #100]	; (80110b8 <malloc+0x84>)
 8011052:	f023 030f 	bic.w	r3, r3, #15
 8011056:	440b      	add	r3, r1
 8011058:	4283      	cmp	r3, r0
 801105a:	d921      	bls.n	80110a0 <malloc+0x6c>
 801105c:	4817      	ldr	r0, [pc, #92]	; (80110bc <malloc+0x88>)
 801105e:	f7f8 faa7 	bl	80095b0 <printf>
 8011062:	2500      	movs	r5, #0
 8011064:	4628      	mov	r0, r5
 8011066:	bd38      	pop	{r3, r4, r5, pc}
 8011068:	4284      	cmp	r4, r0
 801106a:	d80a      	bhi.n	8011082 <malloc+0x4e>
 801106c:	685a      	ldr	r2, [r3, #4]
 801106e:	6899      	ldr	r1, [r3, #8]
 8011070:	3201      	adds	r2, #1
 8011072:	428a      	cmp	r2, r1
 8011074:	605a      	str	r2, [r3, #4]
 8011076:	d900      	bls.n	801107a <malloc+0x46>
 8011078:	609a      	str	r2, [r3, #8]
 801107a:	68d9      	ldr	r1, [r3, #12]
 801107c:	b919      	cbnz	r1, 8011086 <malloc+0x52>
 801107e:	4604      	mov	r4, r0
 8011080:	e7e2      	b.n	8011048 <malloc+0x14>
 8011082:	3310      	adds	r3, #16
 8011084:	e7de      	b.n	8011044 <malloc+0x10>
 8011086:	4604      	mov	r4, r0
 8011088:	688a      	ldr	r2, [r1, #8]
 801108a:	60da      	str	r2, [r3, #12]
 801108c:	2300      	movs	r3, #0
 801108e:	f101 050c 	add.w	r5, r1, #12
 8011092:	608b      	str	r3, [r1, #8]
 8011094:	4622      	mov	r2, r4
 8011096:	462b      	mov	r3, r5
 8011098:	4809      	ldr	r0, [pc, #36]	; (80110c0 <malloc+0x8c>)
 801109a:	f7f8 fa89 	bl	80095b0 <printf>
 801109e:	e7e1      	b.n	8011064 <malloc+0x30>
 80110a0:	6013      	str	r3, [r2, #0]
 80110a2:	4b08      	ldr	r3, [pc, #32]	; (80110c4 <malloc+0x90>)
 80110a4:	e9c1 3400 	strd	r3, r4, [r1]
 80110a8:	e7f0      	b.n	801108c <malloc+0x58>
 80110aa:	bf00      	nop
 80110ac:	08015020 	stmdaeq	r1, {r5, ip, lr}
 80110b0:	20000010 	andcs	r0, r0, r0, lsl r0
 80110b4:	2000000c 	andcs	r0, r0, ip
 80110b8:	20016800 	andcs	r6, r1, r0, lsl #16
 80110bc:	0801502c 	stmdaeq	r1, {r2, r3, r5, ip, lr}
 80110c0:	08015048 	stmdaeq	r1, {r3, r6, ip, lr}
 80110c4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

080110c8 <free>:
 80110c8:	b538      	push	{r3, r4, r5, lr}
 80110ca:	4604      	mov	r4, r0
 80110cc:	b1c8      	cbz	r0, 8011102 <free+0x3a>
 80110ce:	f1a0 050c 	sub.w	r5, r0, #12
 80110d2:	4602      	mov	r2, r0
 80110d4:	4629      	mov	r1, r5
 80110d6:	480c      	ldr	r0, [pc, #48]	; (8011108 <free+0x40>)
 80110d8:	f7f8 fa6a 	bl	80095b0 <printf>
 80110dc:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 80110e0:	4b0a      	ldr	r3, [pc, #40]	; (801110c <free+0x44>)
 80110e2:	429a      	cmp	r2, r3
 80110e4:	d10d      	bne.n	8011102 <free+0x3a>
 80110e6:	4b0a      	ldr	r3, [pc, #40]	; (8011110 <free+0x48>)
 80110e8:	681a      	ldr	r2, [r3, #0]
 80110ea:	b152      	cbz	r2, 8011102 <free+0x3a>
 80110ec:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80110f0:	4291      	cmp	r1, r2
 80110f2:	d107      	bne.n	8011104 <free+0x3c>
 80110f4:	68da      	ldr	r2, [r3, #12]
 80110f6:	f844 2c04 	str.w	r2, [r4, #-4]
 80110fa:	685a      	ldr	r2, [r3, #4]
 80110fc:	60dd      	str	r5, [r3, #12]
 80110fe:	3a01      	subs	r2, #1
 8011100:	605a      	str	r2, [r3, #4]
 8011102:	bd38      	pop	{r3, r4, r5, pc}
 8011104:	3310      	adds	r3, #16
 8011106:	e7ef      	b.n	80110e8 <free+0x20>
 8011108:	08015073 	stmdaeq	r1, {r0, r1, r4, r5, r6, ip, lr}
 801110c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8011110:	20000010 	andcs	r0, r0, r0, lsl r0

08011114 <memcpy>:
 8011114:	b510      	push	{r4, lr}
 8011116:	1e43      	subs	r3, r0, #1
 8011118:	440a      	add	r2, r1
 801111a:	4291      	cmp	r1, r2
 801111c:	d100      	bne.n	8011120 <memcpy+0xc>
 801111e:	bd10      	pop	{r4, pc}
 8011120:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011124:	f803 4f01 	strb.w	r4, [r3, #1]!
 8011128:	e7f7      	b.n	801111a <memcpy+0x6>

0801112a <memmove>:
 801112a:	4288      	cmp	r0, r1
 801112c:	b510      	push	{r4, lr}
 801112e:	eb01 0302 	add.w	r3, r1, r2
 8011132:	d208      	bcs.n	8011146 <memmove+0x1c>
 8011134:	1e42      	subs	r2, r0, #1
 8011136:	4299      	cmp	r1, r3
 8011138:	d100      	bne.n	801113c <memmove+0x12>
 801113a:	bd10      	pop	{r4, pc}
 801113c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011140:	f802 4f01 	strb.w	r4, [r2, #1]!
 8011144:	e7f7      	b.n	8011136 <memmove+0xc>
 8011146:	4601      	mov	r1, r0
 8011148:	4402      	add	r2, r0
 801114a:	428a      	cmp	r2, r1
 801114c:	d0f5      	beq.n	801113a <memmove+0x10>
 801114e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8011152:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8011156:	e7f8      	b.n	801114a <memmove+0x20>

08011158 <memset>:
 8011158:	b5f0      	push	{r4, r5, r6, r7, lr}
 801115a:	b1e2      	cbz	r2, 8011196 <memset+0x3e>
 801115c:	4603      	mov	r3, r0
 801115e:	b2c9      	uxtb	r1, r1
 8011160:	075c      	lsls	r4, r3, #29
 8011162:	d114      	bne.n	801118e <memset+0x36>
 8011164:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8011168:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 801116c:	463d      	mov	r5, r7
 801116e:	f022 0407 	bic.w	r4, r2, #7
 8011172:	08d6      	lsrs	r6, r2, #3
 8011174:	441c      	add	r4, r3
 8011176:	42a3      	cmp	r3, r4
 8011178:	d10e      	bne.n	8011198 <memset+0x40>
 801117a:	f06f 0307 	mvn.w	r3, #7
 801117e:	fb03 2206 	mla	r2, r3, r6, r2
 8011182:	4422      	add	r2, r4
 8011184:	4294      	cmp	r4, r2
 8011186:	d006      	beq.n	8011196 <memset+0x3e>
 8011188:	f804 1b01 	strb.w	r1, [r4], #1
 801118c:	e7fa      	b.n	8011184 <memset+0x2c>
 801118e:	3a01      	subs	r2, #1
 8011190:	f803 1b01 	strb.w	r1, [r3], #1
 8011194:	d1e4      	bne.n	8011160 <memset+0x8>
 8011196:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011198:	f843 7b08 	str.w	r7, [r3], #8
 801119c:	f843 5c04 	str.w	r5, [r3, #-4]
 80111a0:	e7e9      	b.n	8011176 <memset+0x1e>

080111a2 <puts>:
 80111a2:	b508      	push	{r3, lr}
 80111a4:	f7ff fd82 	bl	8010cac <console_puts>
 80111a8:	200a      	movs	r0, #10
 80111aa:	f7ff fd7d 	bl	8010ca8 <console_putc>
 80111ae:	2001      	movs	r0, #1
 80111b0:	bd08      	pop	{r3, pc}
	...

080111b4 <strtok>:
 80111b4:	b530      	push	{r4, r5, lr}
 80111b6:	b910      	cbnz	r0, 80111be <strtok+0xa>
 80111b8:	4b12      	ldr	r3, [pc, #72]	; (8011204 <strtok+0x50>)
 80111ba:	6818      	ldr	r0, [r3, #0]
 80111bc:	b158      	cbz	r0, 80111d6 <strtok+0x22>
 80111be:	4603      	mov	r3, r0
 80111c0:	460d      	mov	r5, r1
 80111c2:	4618      	mov	r0, r3
 80111c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80111c8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80111cc:	b924      	cbnz	r4, 80111d8 <strtok+0x24>
 80111ce:	b94a      	cbnz	r2, 80111e4 <strtok+0x30>
 80111d0:	4610      	mov	r0, r2
 80111d2:	4b0c      	ldr	r3, [pc, #48]	; (8011204 <strtok+0x50>)
 80111d4:	601a      	str	r2, [r3, #0]
 80111d6:	bd30      	pop	{r4, r5, pc}
 80111d8:	42a2      	cmp	r2, r4
 80111da:	d1f5      	bne.n	80111c8 <strtok+0x14>
 80111dc:	e7f0      	b.n	80111c0 <strtok+0xc>
 80111de:	4613      	mov	r3, r2
 80111e0:	e00c      	b.n	80111fc <strtok+0x48>
 80111e2:	b914      	cbnz	r4, 80111ea <strtok+0x36>
 80111e4:	460d      	mov	r5, r1
 80111e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80111ea:	f815 4b01 	ldrb.w	r4, [r5], #1
 80111ee:	42a2      	cmp	r2, r4
 80111f0:	d1f7      	bne.n	80111e2 <strtok+0x2e>
 80111f2:	2a00      	cmp	r2, #0
 80111f4:	d0f3      	beq.n	80111de <strtok+0x2a>
 80111f6:	2200      	movs	r2, #0
 80111f8:	f803 2c01 	strb.w	r2, [r3, #-1]
 80111fc:	4a01      	ldr	r2, [pc, #4]	; (8011204 <strtok+0x50>)
 80111fe:	6013      	str	r3, [r2, #0]
 8011200:	e7e9      	b.n	80111d6 <strtok+0x22>
 8011202:	bf00      	nop
 8011204:	20009794 	mulcs	r0, r4, r7

08011208 <isleapyear>:
 8011208:	2264      	movs	r2, #100	; 0x64
 801120a:	fb90 f3f2 	sdiv	r3, r0, r2
 801120e:	fb02 0313 	mls	r3, r2, r3, r0
 8011212:	b94b      	cbnz	r3, 8011228 <isleapyear+0x20>
 8011214:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8011218:	fb90 f2f3 	sdiv	r2, r0, r3
 801121c:	fb03 0012 	mls	r0, r3, r2, r0
 8011220:	fab0 f080 	clz	r0, r0
 8011224:	0940      	lsrs	r0, r0, #5
 8011226:	4770      	bx	lr
 8011228:	f010 0f03 	tst.w	r0, #3
 801122c:	bf0c      	ite	eq
 801122e:	2001      	moveq	r0, #1
 8011230:	2000      	movne	r0, #0
 8011232:	4770      	bx	lr

08011234 <getdaysofmonth>:
 8011234:	b510      	push	{r4, lr}
 8011236:	4604      	mov	r4, r0
 8011238:	2c01      	cmp	r4, #1
 801123a:	4608      	mov	r0, r1
 801123c:	d102      	bne.n	8011244 <getdaysofmonth+0x10>
 801123e:	f7ff ffe3 	bl	8011208 <isleapyear>
 8011242:	b918      	cbnz	r0, 801124c <getdaysofmonth+0x18>
 8011244:	4b02      	ldr	r3, [pc, #8]	; (8011250 <getdaysofmonth+0x1c>)
 8011246:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801124a:	bd10      	pop	{r4, pc}
 801124c:	201d      	movs	r0, #29
 801124e:	e7fc      	b.n	801124a <getdaysofmonth+0x16>
 8011250:	0801509c 	stmdaeq	r1, {r2, r3, r4, r7, ip, lr}

08011254 <mktime>:
 8011254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011258:	4604      	mov	r4, r0
 801125a:	2800      	cmp	r0, #0
 801125c:	d042      	beq.n	80112e4 <mktime+0x90>
 801125e:	6941      	ldr	r1, [r0, #20]
 8011260:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8011264:	2b45      	cmp	r3, #69	; 0x45
 8011266:	d83d      	bhi.n	80112e4 <mktime+0x90>
 8011268:	2600      	movs	r6, #0
 801126a:	f240 75b2 	movw	r5, #1970	; 0x7b2
 801126e:	f240 186d 	movw	r8, #365	; 0x16d
 8011272:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8011276:	42af      	cmp	r7, r5
 8011278:	da23      	bge.n	80112c2 <mktime+0x6e>
 801127a:	6927      	ldr	r7, [r4, #16]
 801127c:	2f0b      	cmp	r7, #11
 801127e:	d831      	bhi.n	80112e4 <mktime+0x90>
 8011280:	2500      	movs	r5, #0
 8011282:	42af      	cmp	r7, r5
 8011284:	d128      	bne.n	80112d8 <mktime+0x84>
 8011286:	68e5      	ldr	r5, [r4, #12]
 8011288:	2d00      	cmp	r5, #0
 801128a:	dd2b      	ble.n	80112e4 <mktime+0x90>
 801128c:	4638      	mov	r0, r7
 801128e:	f7ff ffd1 	bl	8011234 <getdaysofmonth>
 8011292:	4285      	cmp	r5, r0
 8011294:	dc26      	bgt.n	80112e4 <mktime+0x90>
 8011296:	2318      	movs	r3, #24
 8011298:	3d01      	subs	r5, #1
 801129a:	4435      	add	r5, r6
 801129c:	435d      	muls	r5, r3
 801129e:	68a3      	ldr	r3, [r4, #8]
 80112a0:	2b17      	cmp	r3, #23
 80112a2:	d81f      	bhi.n	80112e4 <mktime+0x90>
 80112a4:	203c      	movs	r0, #60	; 0x3c
 80112a6:	442b      	add	r3, r5
 80112a8:	fb00 f503 	mul.w	r5, r0, r3
 80112ac:	6863      	ldr	r3, [r4, #4]
 80112ae:	2b3b      	cmp	r3, #59	; 0x3b
 80112b0:	d818      	bhi.n	80112e4 <mktime+0x90>
 80112b2:	442b      	add	r3, r5
 80112b4:	4343      	muls	r3, r0
 80112b6:	6820      	ldr	r0, [r4, #0]
 80112b8:	283b      	cmp	r0, #59	; 0x3b
 80112ba:	d813      	bhi.n	80112e4 <mktime+0x90>
 80112bc:	4418      	add	r0, r3
 80112be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112c2:	4628      	mov	r0, r5
 80112c4:	f7ff ffa0 	bl	8011208 <isleapyear>
 80112c8:	2800      	cmp	r0, #0
 80112ca:	bf14      	ite	ne
 80112cc:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 80112d0:	4643      	moveq	r3, r8
 80112d2:	3501      	adds	r5, #1
 80112d4:	441e      	add	r6, r3
 80112d6:	e7ce      	b.n	8011276 <mktime+0x22>
 80112d8:	4628      	mov	r0, r5
 80112da:	f7ff ffab 	bl	8011234 <getdaysofmonth>
 80112de:	3501      	adds	r5, #1
 80112e0:	4406      	add	r6, r0
 80112e2:	e7ce      	b.n	8011282 <mktime+0x2e>
 80112e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112e8:	e7e9      	b.n	80112be <mktime+0x6a>
	...

080112ec <gettimeofday>:
 80112ec:	b538      	push	{r3, r4, r5, lr}
 80112ee:	4b10      	ldr	r3, [pc, #64]	; (8011330 <gettimeofday+0x44>)
 80112f0:	4a10      	ldr	r2, [pc, #64]	; (8011334 <gettimeofday+0x48>)
 80112f2:	681b      	ldr	r3, [r3, #0]
 80112f4:	6814      	ldr	r4, [r2, #0]
 80112f6:	6013      	str	r3, [r2, #0]
 80112f8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80112fc:	429c      	cmp	r4, r3
 80112fe:	bf2c      	ite	cs
 8011300:	1ae4      	subcs	r4, r4, r3
 8011302:	1b1c      	subcc	r4, r3, r4
 8011304:	4354      	muls	r4, r2
 8011306:	4b0c      	ldr	r3, [pc, #48]	; (8011338 <gettimeofday+0x4c>)
 8011308:	4605      	mov	r5, r0
 801130a:	e9d3 2100 	ldrd	r2, r1, [r3]
 801130e:	18a4      	adds	r4, r4, r2
 8011310:	f141 0100 	adc.w	r1, r1, #0
 8011314:	e9c3 4100 	strd	r4, r1, [r3]
 8011318:	4620      	mov	r0, r4
 801131a:	2300      	movs	r3, #0
 801131c:	4a07      	ldr	r2, [pc, #28]	; (801133c <gettimeofday+0x50>)
 801131e:	f7f6 fde1 	bl	8007ee4 <__aeabi_uldivmod>
 8011322:	4b06      	ldr	r3, [pc, #24]	; (801133c <gettimeofday+0x50>)
 8011324:	6028      	str	r0, [r5, #0]
 8011326:	fb03 4410 	mls	r4, r3, r0, r4
 801132a:	2000      	movs	r0, #0
 801132c:	606c      	str	r4, [r5, #4]
 801132e:	bd38      	pop	{r3, r4, r5, pc}
 8011330:	200097a4 	andcs	r9, r0, r4, lsr #15
 8011334:	200097a0 	andcs	r9, r0, r0, lsr #15
 8011338:	20009798 	mulcs	r0, r8, r7
 801133c:	000f4240 	andeq	r4, pc, r0, asr #4

08011340 <settimeofday>:
 8011340:	4b07      	ldr	r3, [pc, #28]	; (8011360 <settimeofday+0x20>)
 8011342:	b510      	push	{r4, lr}
 8011344:	681a      	ldr	r2, [r3, #0]
 8011346:	4b07      	ldr	r3, [pc, #28]	; (8011364 <settimeofday+0x24>)
 8011348:	6804      	ldr	r4, [r0, #0]
 801134a:	601a      	str	r2, [r3, #0]
 801134c:	6843      	ldr	r3, [r0, #4]
 801134e:	4806      	ldr	r0, [pc, #24]	; (8011368 <settimeofday+0x28>)
 8011350:	17da      	asrs	r2, r3, #31
 8011352:	fbc4 3200 	smlal	r3, r2, r4, r0
 8011356:	4905      	ldr	r1, [pc, #20]	; (801136c <settimeofday+0x2c>)
 8011358:	2000      	movs	r0, #0
 801135a:	e9c1 3200 	strd	r3, r2, [r1]
 801135e:	bd10      	pop	{r4, pc}
 8011360:	200097a4 	andcs	r9, r0, r4, lsr #15
 8011364:	200097a0 	andcs	r9, r0, r0, lsr #15
 8011368:	000f4240 	andeq	r4, pc, r0, asr #4
 801136c:	20009798 	mulcs	r0, r8, r7

08011370 <time>:
 8011370:	b513      	push	{r0, r1, r4, lr}
 8011372:	4604      	mov	r4, r0
 8011374:	2100      	movs	r1, #0
 8011376:	4668      	mov	r0, sp
 8011378:	f7ff ffb8 	bl	80112ec <gettimeofday>
 801137c:	9800      	ldr	r0, [sp, #0]
 801137e:	b104      	cbz	r4, 8011382 <time+0x12>
 8011380:	6020      	str	r0, [r4, #0]
 8011382:	b002      	add	sp, #8
 8011384:	bd10      	pop	{r4, pc}
	...

08011388 <uart0_init>:
 8011388:	2301      	movs	r3, #1
 801138a:	b507      	push	{r0, r1, r2, lr}
 801138c:	2208      	movs	r2, #8
 801138e:	9300      	str	r3, [sp, #0]
 8011390:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8011394:	2300      	movs	r3, #0
 8011396:	4803      	ldr	r0, [pc, #12]	; (80113a4 <uart0_init+0x1c>)
 8011398:	f001 f80a 	bl	80123b0 <gd32_uart_begin>
 801139c:	b003      	add	sp, #12
 801139e:	f85d fb04 	ldr.w	pc, [sp], #4
 80113a2:	bf00      	nop
 80113a4:	40013800 	andmi	r3, r1, r0, lsl #16

080113a8 <uart0_putc>:
 80113a8:	280a      	cmp	r0, #10
 80113aa:	b538      	push	{r3, r4, r5, lr}
 80113ac:	4604      	mov	r4, r0
 80113ae:	d10a      	bne.n	80113c6 <uart0_putc+0x1e>
 80113b0:	4d0b      	ldr	r5, [pc, #44]	; (80113e0 <uart0_putc+0x38>)
 80113b2:	2107      	movs	r1, #7
 80113b4:	4628      	mov	r0, r5
 80113b6:	f000 fcd5 	bl	8011d64 <usart_flag_get>
 80113ba:	2800      	cmp	r0, #0
 80113bc:	d0f9      	beq.n	80113b2 <uart0_putc+0xa>
 80113be:	220d      	movs	r2, #13
 80113c0:	4b08      	ldr	r3, [pc, #32]	; (80113e4 <uart0_putc+0x3c>)
 80113c2:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80113c6:	4d06      	ldr	r5, [pc, #24]	; (80113e0 <uart0_putc+0x38>)
 80113c8:	2107      	movs	r1, #7
 80113ca:	4628      	mov	r0, r5
 80113cc:	f000 fcca 	bl	8011d64 <usart_flag_get>
 80113d0:	2800      	cmp	r0, #0
 80113d2:	d0f9      	beq.n	80113c8 <uart0_putc+0x20>
 80113d4:	4b03      	ldr	r3, [pc, #12]	; (80113e4 <uart0_putc+0x3c>)
 80113d6:	b2e4      	uxtb	r4, r4
 80113d8:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 80113dc:	bd38      	pop	{r3, r4, r5, pc}
 80113de:	bf00      	nop
 80113e0:	40013800 	andmi	r3, r1, r0, lsl #16
 80113e4:	40013000 	andmi	r3, r1, r0

080113e8 <uart0_puts>:
 80113e8:	b510      	push	{r4, lr}
 80113ea:	1e44      	subs	r4, r0, #1
 80113ec:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80113f0:	b903      	cbnz	r3, 80113f4 <uart0_puts+0xc>
 80113f2:	bd10      	pop	{r4, pc}
 80113f4:	2b0a      	cmp	r3, #10
 80113f6:	d102      	bne.n	80113fe <uart0_puts+0x16>
 80113f8:	200d      	movs	r0, #13
 80113fa:	f7ff ffd5 	bl	80113a8 <uart0_putc>
 80113fe:	7820      	ldrb	r0, [r4, #0]
 8011400:	f7ff ffd2 	bl	80113a8 <uart0_putc>
 8011404:	e7f2      	b.n	80113ec <uart0_puts+0x4>
	...

08011408 <systick_config>:
 8011408:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801140c:	4b0b      	ldr	r3, [pc, #44]	; (801143c <systick_config+0x34>)
 801140e:	681b      	ldr	r3, [r3, #0]
 8011410:	fbb3 f3f2 	udiv	r3, r3, r2
 8011414:	3b01      	subs	r3, #1
 8011416:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801141a:	d20d      	bcs.n	8011438 <systick_config+0x30>
 801141c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8011420:	21f0      	movs	r1, #240	; 0xf0
 8011422:	6153      	str	r3, [r2, #20]
 8011424:	4b06      	ldr	r3, [pc, #24]	; (8011440 <systick_config+0x38>)
 8011426:	2007      	movs	r0, #7
 8011428:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801142c:	2100      	movs	r1, #0
 801142e:	6191      	str	r1, [r2, #24]
 8011430:	6110      	str	r0, [r2, #16]
 8011432:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8011436:	4770      	bx	lr
 8011438:	e7fe      	b.n	8011438 <systick_config+0x30>
 801143a:	bf00      	nop
 801143c:	200000e0 	andcs	r0, r0, r0, ror #1
 8011440:	e000ed00 	and	lr, r0, r0, lsl #26

08011444 <SysTick_Handler>:
 8011444:	4a02      	ldr	r2, [pc, #8]	; (8011450 <SysTick_Handler+0xc>)
 8011446:	6813      	ldr	r3, [r2, #0]
 8011448:	3301      	adds	r3, #1
 801144a:	6013      	str	r3, [r2, #0]
 801144c:	4770      	bx	lr
 801144e:	bf00      	nop
 8011450:	200097a4 	andcs	r9, r0, r4, lsr #15

08011454 <SystemInit>:
 8011454:	4b37      	ldr	r3, [pc, #220]	; (8011534 <SystemInit+0xe0>)
 8011456:	4838      	ldr	r0, [pc, #224]	; (8011538 <SystemInit+0xe4>)
 8011458:	681a      	ldr	r2, [r3, #0]
 801145a:	f042 0201 	orr.w	r2, r2, #1
 801145e:	601a      	str	r2, [r3, #0]
 8011460:	685a      	ldr	r2, [r3, #4]
 8011462:	f022 0203 	bic.w	r2, r2, #3
 8011466:	605a      	str	r2, [r3, #4]
 8011468:	6819      	ldr	r1, [r3, #0]
 801146a:	4001      	ands	r1, r0
 801146c:	6019      	str	r1, [r3, #0]
 801146e:	685a      	ldr	r2, [r3, #4]
 8011470:	4932      	ldr	r1, [pc, #200]	; (801153c <SystemInit+0xe8>)
 8011472:	4011      	ands	r1, r2
 8011474:	6059      	str	r1, [r3, #4]
 8011476:	681a      	ldr	r2, [r3, #0]
 8011478:	4002      	ands	r2, r0
 801147a:	601a      	str	r2, [r3, #0]
 801147c:	681a      	ldr	r2, [r3, #0]
 801147e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8011482:	601a      	str	r2, [r3, #0]
 8011484:	685a      	ldr	r2, [r3, #4]
 8011486:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 801148a:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 801148e:	605a      	str	r2, [r3, #4]
 8011490:	2200      	movs	r2, #0
 8011492:	62da      	str	r2, [r3, #44]	; 0x2c
 8011494:	681a      	ldr	r2, [r3, #0]
 8011496:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 801149a:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 801149e:	601a      	str	r2, [r3, #0]
 80114a0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80114a4:	609a      	str	r2, [r3, #8]
 80114a6:	681a      	ldr	r2, [r3, #0]
 80114a8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80114ac:	601a      	str	r2, [r3, #0]
 80114ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80114b2:	6819      	ldr	r1, [r3, #0]
 80114b4:	0389      	lsls	r1, r1, #14
 80114b6:	d401      	bmi.n	80114bc <SystemInit+0x68>
 80114b8:	3a01      	subs	r2, #1
 80114ba:	d1fa      	bne.n	80114b2 <SystemInit+0x5e>
 80114bc:	681a      	ldr	r2, [r3, #0]
 80114be:	0392      	lsls	r2, r2, #14
 80114c0:	d400      	bmi.n	80114c4 <SystemInit+0x70>
 80114c2:	e7fe      	b.n	80114c2 <SystemInit+0x6e>
 80114c4:	685a      	ldr	r2, [r3, #4]
 80114c6:	605a      	str	r2, [r3, #4]
 80114c8:	685a      	ldr	r2, [r3, #4]
 80114ca:	605a      	str	r2, [r3, #4]
 80114cc:	685a      	ldr	r2, [r3, #4]
 80114ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80114d2:	605a      	str	r2, [r3, #4]
 80114d4:	685a      	ldr	r2, [r3, #4]
 80114d6:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 80114da:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 80114de:	605a      	str	r2, [r3, #4]
 80114e0:	685a      	ldr	r2, [r3, #4]
 80114e2:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 80114e6:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 80114ea:	605a      	str	r2, [r3, #4]
 80114ec:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80114ee:	4a14      	ldr	r2, [pc, #80]	; (8011540 <SystemInit+0xec>)
 80114f0:	400a      	ands	r2, r1
 80114f2:	62da      	str	r2, [r3, #44]	; 0x2c
 80114f4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80114f6:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 80114fa:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 80114fe:	62da      	str	r2, [r3, #44]	; 0x2c
 8011500:	681a      	ldr	r2, [r3, #0]
 8011502:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8011506:	601a      	str	r2, [r3, #0]
 8011508:	681a      	ldr	r2, [r3, #0]
 801150a:	0110      	lsls	r0, r2, #4
 801150c:	d5fc      	bpl.n	8011508 <SystemInit+0xb4>
 801150e:	681a      	ldr	r2, [r3, #0]
 8011510:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8011514:	601a      	str	r2, [r3, #0]
 8011516:	681a      	ldr	r2, [r3, #0]
 8011518:	0191      	lsls	r1, r2, #6
 801151a:	d5fc      	bpl.n	8011516 <SystemInit+0xc2>
 801151c:	685a      	ldr	r2, [r3, #4]
 801151e:	f022 0203 	bic.w	r2, r2, #3
 8011522:	605a      	str	r2, [r3, #4]
 8011524:	685a      	ldr	r2, [r3, #4]
 8011526:	f042 0202 	orr.w	r2, r2, #2
 801152a:	605a      	str	r2, [r3, #4]
 801152c:	685a      	ldr	r2, [r3, #4]
 801152e:	0712      	lsls	r2, r2, #28
 8011530:	d5fc      	bpl.n	801152c <SystemInit+0xd8>
 8011532:	4770      	bx	lr
 8011534:	40021000 	andmi	r1, r2, r0
 8011538:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 801153c:	e0ff000c 	rscs	r0, pc, ip
 8011540:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08011544 <bkp_deinit>:
 8011544:	b508      	push	{r3, lr}
 8011546:	f000 f97b 	bl	8011840 <rcu_bkp_reset_enable>
 801154a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801154e:	f000 b97f 	b.w	8011850 <rcu_bkp_reset_disable>
	...

08011554 <bkp_data_write>:
 8011554:	f1a0 030b 	sub.w	r3, r0, #11
 8011558:	2b1f      	cmp	r3, #31
 801155a:	d804      	bhi.n	8011566 <bkp_data_write+0x12>
 801155c:	4b07      	ldr	r3, [pc, #28]	; (801157c <bkp_data_write+0x28>)
 801155e:	4403      	add	r3, r0
 8011560:	009b      	lsls	r3, r3, #2
 8011562:	8019      	strh	r1, [r3, #0]
 8011564:	4770      	bx	lr
 8011566:	1e43      	subs	r3, r0, #1
 8011568:	2b09      	cmp	r3, #9
 801156a:	bf9f      	itttt	ls
 801156c:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8011570:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8011574:	0080      	lslls	r0, r0, #2
 8011576:	8001      	strhls	r1, [r0, #0]
 8011578:	4770      	bx	lr
 801157a:	bf00      	nop
 801157c:	10001b05 	andne	r1, r0, r5, lsl #22

08011580 <bkp_data_read>:
 8011580:	f1a0 030b 	sub.w	r3, r0, #11
 8011584:	2b1f      	cmp	r3, #31
 8011586:	d805      	bhi.n	8011594 <bkp_data_read+0x14>
 8011588:	4b08      	ldr	r3, [pc, #32]	; (80115ac <bkp_data_read+0x2c>)
 801158a:	4403      	add	r3, r0
 801158c:	009b      	lsls	r3, r3, #2
 801158e:	8818      	ldrh	r0, [r3, #0]
 8011590:	b280      	uxth	r0, r0
 8011592:	4770      	bx	lr
 8011594:	1e43      	subs	r3, r0, #1
 8011596:	2b09      	cmp	r3, #9
 8011598:	d806      	bhi.n	80115a8 <bkp_data_read+0x28>
 801159a:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 801159e:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80115a2:	0080      	lsls	r0, r0, #2
 80115a4:	8800      	ldrh	r0, [r0, #0]
 80115a6:	e7f3      	b.n	8011590 <bkp_data_read+0x10>
 80115a8:	2000      	movs	r0, #0
 80115aa:	4770      	bx	lr
 80115ac:	10001b05 	andne	r1, r0, r5, lsl #22

080115b0 <fmc_bank0_unlock>:
 80115b0:	4b04      	ldr	r3, [pc, #16]	; (80115c4 <fmc_bank0_unlock+0x14>)
 80115b2:	691a      	ldr	r2, [r3, #16]
 80115b4:	0612      	lsls	r2, r2, #24
 80115b6:	bf41      	itttt	mi
 80115b8:	4a03      	ldrmi	r2, [pc, #12]	; (80115c8 <fmc_bank0_unlock+0x18>)
 80115ba:	605a      	strmi	r2, [r3, #4]
 80115bc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80115c0:	605a      	strmi	r2, [r3, #4]
 80115c2:	4770      	bx	lr
 80115c4:	40022000 	andmi	r2, r2, r0
 80115c8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080115cc <fmc_bank1_unlock>:
 80115cc:	4b04      	ldr	r3, [pc, #16]	; (80115e0 <fmc_bank1_unlock+0x14>)
 80115ce:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80115d0:	0612      	lsls	r2, r2, #24
 80115d2:	bf41      	itttt	mi
 80115d4:	4a03      	ldrmi	r2, [pc, #12]	; (80115e4 <fmc_bank1_unlock+0x18>)
 80115d6:	645a      	strmi	r2, [r3, #68]	; 0x44
 80115d8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80115dc:	645a      	strmi	r2, [r3, #68]	; 0x44
 80115de:	4770      	bx	lr
 80115e0:	40022000 	andmi	r2, r2, r0
 80115e4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080115e8 <fmc_bank0_lock>:
 80115e8:	4a02      	ldr	r2, [pc, #8]	; (80115f4 <fmc_bank0_lock+0xc>)
 80115ea:	6913      	ldr	r3, [r2, #16]
 80115ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80115f0:	6113      	str	r3, [r2, #16]
 80115f2:	4770      	bx	lr
 80115f4:	40022000 	andmi	r2, r2, r0

080115f8 <fmc_bank1_lock>:
 80115f8:	4a02      	ldr	r2, [pc, #8]	; (8011604 <fmc_bank1_lock+0xc>)
 80115fa:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80115fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011600:	6513      	str	r3, [r2, #80]	; 0x50
 8011602:	4770      	bx	lr
 8011604:	40022000 	andmi	r2, r2, r0

08011608 <fmc_bank0_state_get>:
 8011608:	4b08      	ldr	r3, [pc, #32]	; (801162c <fmc_bank0_state_get+0x24>)
 801160a:	68da      	ldr	r2, [r3, #12]
 801160c:	07d1      	lsls	r1, r2, #31
 801160e:	d409      	bmi.n	8011624 <fmc_bank0_state_get+0x1c>
 8011610:	68da      	ldr	r2, [r3, #12]
 8011612:	06d2      	lsls	r2, r2, #27
 8011614:	d408      	bmi.n	8011628 <fmc_bank0_state_get+0x20>
 8011616:	68db      	ldr	r3, [r3, #12]
 8011618:	f013 0f04 	tst.w	r3, #4
 801161c:	bf0c      	ite	eq
 801161e:	2000      	moveq	r0, #0
 8011620:	2002      	movne	r0, #2
 8011622:	4770      	bx	lr
 8011624:	2001      	movs	r0, #1
 8011626:	4770      	bx	lr
 8011628:	2003      	movs	r0, #3
 801162a:	4770      	bx	lr
 801162c:	40022000 	andmi	r2, r2, r0

08011630 <fmc_bank1_state_get>:
 8011630:	4b08      	ldr	r3, [pc, #32]	; (8011654 <fmc_bank1_state_get+0x24>)
 8011632:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011634:	07d1      	lsls	r1, r2, #31
 8011636:	d409      	bmi.n	801164c <fmc_bank1_state_get+0x1c>
 8011638:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801163a:	06d2      	lsls	r2, r2, #27
 801163c:	d408      	bmi.n	8011650 <fmc_bank1_state_get+0x20>
 801163e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011640:	f013 0f04 	tst.w	r3, #4
 8011644:	bf0c      	ite	eq
 8011646:	2000      	moveq	r0, #0
 8011648:	2002      	movne	r0, #2
 801164a:	4770      	bx	lr
 801164c:	2001      	movs	r0, #1
 801164e:	4770      	bx	lr
 8011650:	2003      	movs	r0, #3
 8011652:	4770      	bx	lr
 8011654:	40022000 	andmi	r2, r2, r0

08011658 <fwdgt_enable>:
 8011658:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 801165c:	4b01      	ldr	r3, [pc, #4]	; (8011664 <fwdgt_enable+0xc>)
 801165e:	601a      	str	r2, [r3, #0]
 8011660:	4770      	bx	lr
 8011662:	bf00      	nop
 8011664:	40003000 	andmi	r3, r0, r0

08011668 <fwdgt_counter_reload>:
 8011668:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 801166c:	4b01      	ldr	r3, [pc, #4]	; (8011674 <fwdgt_counter_reload+0xc>)
 801166e:	601a      	str	r2, [r3, #0]
 8011670:	4770      	bx	lr
 8011672:	bf00      	nop
 8011674:	40003000 	andmi	r3, r0, r0

08011678 <fwdgt_config>:
 8011678:	f245 5355 	movw	r3, #21845	; 0x5555
 801167c:	4a11      	ldr	r2, [pc, #68]	; (80116c4 <fwdgt_config+0x4c>)
 801167e:	b510      	push	{r4, lr}
 8011680:	4c11      	ldr	r4, [pc, #68]	; (80116c8 <fwdgt_config+0x50>)
 8011682:	6013      	str	r3, [r2, #0]
 8011684:	68d3      	ldr	r3, [r2, #12]
 8011686:	3c01      	subs	r4, #1
 8011688:	f003 0301 	and.w	r3, r3, #1
 801168c:	d013      	beq.n	80116b6 <fwdgt_config+0x3e>
 801168e:	2b00      	cmp	r3, #0
 8011690:	d1f8      	bne.n	8011684 <fwdgt_config+0xc>
 8011692:	6051      	str	r1, [r2, #4]
 8011694:	490c      	ldr	r1, [pc, #48]	; (80116c8 <fwdgt_config+0x50>)
 8011696:	4a0b      	ldr	r2, [pc, #44]	; (80116c4 <fwdgt_config+0x4c>)
 8011698:	68d3      	ldr	r3, [r2, #12]
 801169a:	3901      	subs	r1, #1
 801169c:	f003 0302 	and.w	r3, r3, #2
 80116a0:	d00d      	beq.n	80116be <fwdgt_config+0x46>
 80116a2:	2b00      	cmp	r3, #0
 80116a4:	d1f8      	bne.n	8011698 <fwdgt_config+0x20>
 80116a6:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80116aa:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80116ae:	6090      	str	r0, [r2, #8]
 80116b0:	2001      	movs	r0, #1
 80116b2:	6013      	str	r3, [r2, #0]
 80116b4:	e002      	b.n	80116bc <fwdgt_config+0x44>
 80116b6:	2b00      	cmp	r3, #0
 80116b8:	d0eb      	beq.n	8011692 <fwdgt_config+0x1a>
 80116ba:	2000      	movs	r0, #0
 80116bc:	bd10      	pop	{r4, pc}
 80116be:	2b00      	cmp	r3, #0
 80116c0:	d1fb      	bne.n	80116ba <fwdgt_config+0x42>
 80116c2:	e7f0      	b.n	80116a6 <fwdgt_config+0x2e>
 80116c4:	40003000 	andmi	r3, r0, r0
 80116c8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080116cc <gpio_init>:
 80116cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116d0:	f04f 0c0f 	mov.w	ip, #15
 80116d4:	06cf      	lsls	r7, r1, #27
 80116d6:	f04f 0400 	mov.w	r4, #0
 80116da:	f04f 0701 	mov.w	r7, #1
 80116de:	f001 050f 	and.w	r5, r1, #15
 80116e2:	bf48      	it	mi
 80116e4:	4315      	orrmi	r5, r2
 80116e6:	fa23 f204 	lsr.w	r2, r3, r4
 80116ea:	07d6      	lsls	r6, r2, #31
 80116ec:	d510      	bpl.n	8011710 <gpio_init+0x44>
 80116ee:	00a2      	lsls	r2, r4, #2
 80116f0:	6806      	ldr	r6, [r0, #0]
 80116f2:	fa0c fe02 	lsl.w	lr, ip, r2
 80116f6:	ea26 060e 	bic.w	r6, r6, lr
 80116fa:	fa05 f202 	lsl.w	r2, r5, r2
 80116fe:	2928      	cmp	r1, #40	; 0x28
 8011700:	ea42 0206 	orr.w	r2, r2, r6
 8011704:	d128      	bne.n	8011758 <gpio_init+0x8c>
 8011706:	fa07 f604 	lsl.w	r6, r7, r4
 801170a:	401e      	ands	r6, r3
 801170c:	6146      	str	r6, [r0, #20]
 801170e:	6002      	str	r2, [r0, #0]
 8011710:	3401      	adds	r4, #1
 8011712:	2c08      	cmp	r4, #8
 8011714:	d1e7      	bne.n	80116e6 <gpio_init+0x1a>
 8011716:	2600      	movs	r6, #0
 8011718:	f04f 0c0f 	mov.w	ip, #15
 801171c:	2701      	movs	r7, #1
 801171e:	f106 0208 	add.w	r2, r6, #8
 8011722:	fa23 f402 	lsr.w	r4, r3, r2
 8011726:	07e4      	lsls	r4, r4, #31
 8011728:	d511      	bpl.n	801174e <gpio_init+0x82>
 801172a:	00b4      	lsls	r4, r6, #2
 801172c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8011730:	fa0c f804 	lsl.w	r8, ip, r4
 8011734:	ea2e 0e08 	bic.w	lr, lr, r8
 8011738:	fa05 f404 	lsl.w	r4, r5, r4
 801173c:	2928      	cmp	r1, #40	; 0x28
 801173e:	ea44 040e 	orr.w	r4, r4, lr
 8011742:	d110      	bne.n	8011766 <gpio_init+0x9a>
 8011744:	fa07 f202 	lsl.w	r2, r7, r2
 8011748:	401a      	ands	r2, r3
 801174a:	6142      	str	r2, [r0, #20]
 801174c:	6044      	str	r4, [r0, #4]
 801174e:	3601      	adds	r6, #1
 8011750:	2e08      	cmp	r6, #8
 8011752:	d1e4      	bne.n	801171e <gpio_init+0x52>
 8011754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011758:	2948      	cmp	r1, #72	; 0x48
 801175a:	bf02      	ittt	eq
 801175c:	fa07 f604 	lsleq.w	r6, r7, r4
 8011760:	401e      	andeq	r6, r3
 8011762:	6106      	streq	r6, [r0, #16]
 8011764:	e7d3      	b.n	801170e <gpio_init+0x42>
 8011766:	2948      	cmp	r1, #72	; 0x48
 8011768:	bf02      	ittt	eq
 801176a:	fa07 f202 	lsleq.w	r2, r7, r2
 801176e:	401a      	andeq	r2, r3
 8011770:	6102      	streq	r2, [r0, #16]
 8011772:	e7eb      	b.n	801174c <gpio_init+0x80>

08011774 <gpio_pin_remap_config>:
 8011774:	2800      	cmp	r0, #0
 8011776:	4a16      	ldr	r2, [pc, #88]	; (80117d0 <gpio_pin_remap_config+0x5c>)
 8011778:	b530      	push	{r4, r5, lr}
 801177a:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 801177e:	bfb4      	ite	lt
 8011780:	69d3      	ldrlt	r3, [r2, #28]
 8011782:	6853      	ldrge	r3, [r2, #4]
 8011784:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8011788:	b284      	uxth	r4, r0
 801178a:	d110      	bne.n	80117ae <gpio_pin_remap_config+0x3a>
 801178c:	6855      	ldr	r5, [r2, #4]
 801178e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011792:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8011796:	6055      	str	r5, [r2, #4]
 8011798:	b119      	cbz	r1, 80117a2 <gpio_pin_remap_config+0x2e>
 801179a:	0d42      	lsrs	r2, r0, #21
 801179c:	0112      	lsls	r2, r2, #4
 801179e:	4094      	lsls	r4, r2
 80117a0:	4323      	orrs	r3, r4
 80117a2:	4a0b      	ldr	r2, [pc, #44]	; (80117d0 <gpio_pin_remap_config+0x5c>)
 80117a4:	2800      	cmp	r0, #0
 80117a6:	bfb4      	ite	lt
 80117a8:	61d3      	strlt	r3, [r2, #28]
 80117aa:	6053      	strge	r3, [r2, #4]
 80117ac:	bd30      	pop	{r4, r5, pc}
 80117ae:	02c2      	lsls	r2, r0, #11
 80117b0:	bf4d      	iteet	mi
 80117b2:	2203      	movmi	r2, #3
 80117b4:	0d42      	lsrpl	r2, r0, #21
 80117b6:	0112      	lslpl	r2, r2, #4
 80117b8:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80117bc:	bf4c      	ite	mi
 80117be:	40aa      	lslmi	r2, r5
 80117c0:	fa04 f202 	lslpl.w	r2, r4, r2
 80117c4:	ea23 0302 	bic.w	r3, r3, r2
 80117c8:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80117cc:	e7e4      	b.n	8011798 <gpio_pin_remap_config+0x24>
 80117ce:	bf00      	nop
 80117d0:	40010000 	andmi	r0, r1, r0

080117d4 <gpio_ethernet_phy_select>:
 80117d4:	4b04      	ldr	r3, [pc, #16]	; (80117e8 <gpio_ethernet_phy_select+0x14>)
 80117d6:	6859      	ldr	r1, [r3, #4]
 80117d8:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 80117dc:	6059      	str	r1, [r3, #4]
 80117de:	685a      	ldr	r2, [r3, #4]
 80117e0:	4302      	orrs	r2, r0
 80117e2:	605a      	str	r2, [r3, #4]
 80117e4:	4770      	bx	lr
 80117e6:	bf00      	nop
 80117e8:	40010000 	andmi	r0, r1, r0

080117ec <pmu_backup_write_enable>:
 80117ec:	4a02      	ldr	r2, [pc, #8]	; (80117f8 <pmu_backup_write_enable+0xc>)
 80117ee:	6813      	ldr	r3, [r2, #0]
 80117f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80117f4:	6013      	str	r3, [r2, #0]
 80117f6:	4770      	bx	lr
 80117f8:	40007000 	andmi	r7, r0, r0

080117fc <rcu_periph_clock_enable>:
 80117fc:	2201      	movs	r2, #1
 80117fe:	0983      	lsrs	r3, r0, #6
 8011800:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011804:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011808:	6819      	ldr	r1, [r3, #0]
 801180a:	f000 001f 	and.w	r0, r0, #31
 801180e:	fa02 f000 	lsl.w	r0, r2, r0
 8011812:	4308      	orrs	r0, r1
 8011814:	6018      	str	r0, [r3, #0]
 8011816:	4770      	bx	lr

08011818 <rcu_periph_clock_disable>:
 8011818:	2101      	movs	r1, #1
 801181a:	0983      	lsrs	r3, r0, #6
 801181c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011820:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011824:	681a      	ldr	r2, [r3, #0]
 8011826:	f000 001f 	and.w	r0, r0, #31
 801182a:	fa01 f000 	lsl.w	r0, r1, r0
 801182e:	ea22 0000 	bic.w	r0, r2, r0
 8011832:	6018      	str	r0, [r3, #0]
 8011834:	4770      	bx	lr

08011836 <rcu_periph_reset_enable>:
 8011836:	f7ff bfe1 	b.w	80117fc <rcu_periph_clock_enable>

0801183a <rcu_periph_reset_disable>:
 801183a:	f7ff bfed 	b.w	8011818 <rcu_periph_clock_disable>
	...

08011840 <rcu_bkp_reset_enable>:
 8011840:	4a02      	ldr	r2, [pc, #8]	; (801184c <rcu_bkp_reset_enable+0xc>)
 8011842:	6a13      	ldr	r3, [r2, #32]
 8011844:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8011848:	6213      	str	r3, [r2, #32]
 801184a:	4770      	bx	lr
 801184c:	40021000 	andmi	r1, r2, r0

08011850 <rcu_bkp_reset_disable>:
 8011850:	4a02      	ldr	r2, [pc, #8]	; (801185c <rcu_bkp_reset_disable+0xc>)
 8011852:	6a13      	ldr	r3, [r2, #32]
 8011854:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8011858:	6213      	str	r3, [r2, #32]
 801185a:	4770      	bx	lr
 801185c:	40021000 	andmi	r1, r2, r0

08011860 <rcu_ckout0_config>:
 8011860:	4a03      	ldr	r2, [pc, #12]	; (8011870 <rcu_ckout0_config+0x10>)
 8011862:	6853      	ldr	r3, [r2, #4]
 8011864:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8011868:	4303      	orrs	r3, r0
 801186a:	6053      	str	r3, [r2, #4]
 801186c:	4770      	bx	lr
 801186e:	bf00      	nop
 8011870:	40021000 	andmi	r1, r2, r0

08011874 <rcu_pll2_config>:
 8011874:	4b04      	ldr	r3, [pc, #16]	; (8011888 <rcu_pll2_config+0x14>)
 8011876:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011878:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 801187c:	62d9      	str	r1, [r3, #44]	; 0x2c
 801187e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011880:	4302      	orrs	r2, r0
 8011882:	62da      	str	r2, [r3, #44]	; 0x2c
 8011884:	4770      	bx	lr
 8011886:	bf00      	nop
 8011888:	40021000 	andmi	r1, r2, r0

0801188c <rcu_adc_clock_config>:
 801188c:	490c      	ldr	r1, [pc, #48]	; (80118c0 <rcu_adc_clock_config+0x34>)
 801188e:	2805      	cmp	r0, #5
 8011890:	684b      	ldr	r3, [r1, #4]
 8011892:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8011896:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801189a:	d006      	beq.n	80118aa <rcu_adc_clock_config+0x1e>
 801189c:	d803      	bhi.n	80118a6 <rcu_adc_clock_config+0x1a>
 801189e:	2804      	cmp	r0, #4
 80118a0:	d10a      	bne.n	80118b8 <rcu_adc_clock_config+0x2c>
 80118a2:	604b      	str	r3, [r1, #4]
 80118a4:	4770      	bx	lr
 80118a6:	2807      	cmp	r0, #7
 80118a8:	d1fb      	bne.n	80118a2 <rcu_adc_clock_config+0x16>
 80118aa:	4a06      	ldr	r2, [pc, #24]	; (80118c4 <rcu_adc_clock_config+0x38>)
 80118ac:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 80118b0:	4303      	orrs	r3, r0
 80118b2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80118b6:	e7f4      	b.n	80118a2 <rcu_adc_clock_config+0x16>
 80118b8:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 80118bc:	e7f1      	b.n	80118a2 <rcu_adc_clock_config+0x16>
 80118be:	bf00      	nop
 80118c0:	40021000 	andmi	r1, r2, r0
 80118c4:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

080118c8 <rcu_flag_get>:
 80118c8:	0983      	lsrs	r3, r0, #6
 80118ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80118ce:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80118d2:	681b      	ldr	r3, [r3, #0]
 80118d4:	f000 001f 	and.w	r0, r0, #31
 80118d8:	fa23 f000 	lsr.w	r0, r3, r0
 80118dc:	f000 0001 	and.w	r0, r0, #1
 80118e0:	4770      	bx	lr
	...

080118e4 <rcu_osci_stab_wait>:
 80118e4:	281a      	cmp	r0, #26
 80118e6:	b508      	push	{r3, lr}
 80118e8:	d051      	beq.n	801198e <rcu_osci_stab_wait+0xaa>
 80118ea:	d806      	bhi.n	80118fa <rcu_osci_stab_wait+0x16>
 80118ec:	2810      	cmp	r0, #16
 80118ee:	d015      	beq.n	801191c <rcu_osci_stab_wait+0x38>
 80118f0:	2818      	cmp	r0, #24
 80118f2:	d043      	beq.n	801197c <rcu_osci_stab_wait+0x98>
 80118f4:	b368      	cbz	r0, 8011952 <rcu_osci_stab_wait+0x6e>
 80118f6:	2000      	movs	r0, #0
 80118f8:	bd08      	pop	{r3, pc}
 80118fa:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80118fe:	d01c      	beq.n	801193a <rcu_osci_stab_wait+0x56>
 8011900:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8011904:	d02f      	beq.n	8011966 <rcu_osci_stab_wait+0x82>
 8011906:	281c      	cmp	r0, #28
 8011908:	d1f5      	bne.n	80118f6 <rcu_osci_stab_wait+0x12>
 801190a:	4a25      	ldr	r2, [pc, #148]	; (80119a0 <rcu_osci_stab_wait+0xbc>)
 801190c:	201d      	movs	r0, #29
 801190e:	f7ff ffdb 	bl	80118c8 <rcu_flag_get>
 8011912:	b908      	cbnz	r0, 8011918 <rcu_osci_stab_wait+0x34>
 8011914:	3a01      	subs	r2, #1
 8011916:	d1f9      	bne.n	801190c <rcu_osci_stab_wait+0x28>
 8011918:	201d      	movs	r0, #29
 801191a:	e008      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 801191c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011920:	2011      	movs	r0, #17
 8011922:	f7ff ffd1 	bl	80118c8 <rcu_flag_get>
 8011926:	b908      	cbnz	r0, 801192c <rcu_osci_stab_wait+0x48>
 8011928:	3a01      	subs	r2, #1
 801192a:	d1f9      	bne.n	8011920 <rcu_osci_stab_wait+0x3c>
 801192c:	2011      	movs	r0, #17
 801192e:	f7ff ffcb 	bl	80118c8 <rcu_flag_get>
 8011932:	3800      	subs	r0, #0
 8011934:	bf18      	it	ne
 8011936:	2001      	movne	r0, #1
 8011938:	e7de      	b.n	80118f8 <rcu_osci_stab_wait+0x14>
 801193a:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 801193e:	f640 0001 	movw	r0, #2049	; 0x801
 8011942:	f7ff ffc1 	bl	80118c8 <rcu_flag_get>
 8011946:	b908      	cbnz	r0, 801194c <rcu_osci_stab_wait+0x68>
 8011948:	3a01      	subs	r2, #1
 801194a:	d1f8      	bne.n	801193e <rcu_osci_stab_wait+0x5a>
 801194c:	f640 0001 	movw	r0, #2049	; 0x801
 8011950:	e7ed      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 8011952:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8011956:	2001      	movs	r0, #1
 8011958:	f7ff ffb6 	bl	80118c8 <rcu_flag_get>
 801195c:	b908      	cbnz	r0, 8011962 <rcu_osci_stab_wait+0x7e>
 801195e:	3a01      	subs	r2, #1
 8011960:	d1f9      	bne.n	8011956 <rcu_osci_stab_wait+0x72>
 8011962:	2001      	movs	r0, #1
 8011964:	e7e3      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 8011966:	4a0e      	ldr	r2, [pc, #56]	; (80119a0 <rcu_osci_stab_wait+0xbc>)
 8011968:	f640 1001 	movw	r0, #2305	; 0x901
 801196c:	f7ff ffac 	bl	80118c8 <rcu_flag_get>
 8011970:	b908      	cbnz	r0, 8011976 <rcu_osci_stab_wait+0x92>
 8011972:	3a01      	subs	r2, #1
 8011974:	d1f8      	bne.n	8011968 <rcu_osci_stab_wait+0x84>
 8011976:	f640 1001 	movw	r0, #2305	; 0x901
 801197a:	e7d8      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 801197c:	4a08      	ldr	r2, [pc, #32]	; (80119a0 <rcu_osci_stab_wait+0xbc>)
 801197e:	2019      	movs	r0, #25
 8011980:	f7ff ffa2 	bl	80118c8 <rcu_flag_get>
 8011984:	b908      	cbnz	r0, 801198a <rcu_osci_stab_wait+0xa6>
 8011986:	3a01      	subs	r2, #1
 8011988:	d1f9      	bne.n	801197e <rcu_osci_stab_wait+0x9a>
 801198a:	2019      	movs	r0, #25
 801198c:	e7cf      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 801198e:	4a04      	ldr	r2, [pc, #16]	; (80119a0 <rcu_osci_stab_wait+0xbc>)
 8011990:	201b      	movs	r0, #27
 8011992:	f7ff ff99 	bl	80118c8 <rcu_flag_get>
 8011996:	b908      	cbnz	r0, 801199c <rcu_osci_stab_wait+0xb8>
 8011998:	3a01      	subs	r2, #1
 801199a:	d1f9      	bne.n	8011990 <rcu_osci_stab_wait+0xac>
 801199c:	201b      	movs	r0, #27
 801199e:	e7c6      	b.n	801192e <rcu_osci_stab_wait+0x4a>
 80119a0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080119a4 <rcu_osci_on>:
 80119a4:	f7ff bf2a 	b.w	80117fc <rcu_periph_clock_enable>

080119a8 <rcu_clock_freq_get>:
 80119a8:	4b3d      	ldr	r3, [pc, #244]	; (8011aa0 <rcu_clock_freq_get+0xf8>)
 80119aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119ac:	4604      	mov	r4, r0
 80119ae:	461f      	mov	r7, r3
 80119b0:	b089      	sub	sp, #36	; 0x24
 80119b2:	ad04      	add	r5, sp, #16
 80119b4:	f103 0610 	add.w	r6, r3, #16
 80119b8:	462a      	mov	r2, r5
 80119ba:	6818      	ldr	r0, [r3, #0]
 80119bc:	6859      	ldr	r1, [r3, #4]
 80119be:	3308      	adds	r3, #8
 80119c0:	c203      	stmia	r2!, {r0, r1}
 80119c2:	42b3      	cmp	r3, r6
 80119c4:	4615      	mov	r5, r2
 80119c6:	d1f7      	bne.n	80119b8 <rcu_clock_freq_get+0x10>
 80119c8:	466b      	mov	r3, sp
 80119ca:	6938      	ldr	r0, [r7, #16]
 80119cc:	6871      	ldr	r1, [r6, #4]
 80119ce:	4a35      	ldr	r2, [pc, #212]	; (8011aa4 <rcu_clock_freq_get+0xfc>)
 80119d0:	c303      	stmia	r3!, {r0, r1}
 80119d2:	c303      	stmia	r3!, {r0, r1}
 80119d4:	6853      	ldr	r3, [r2, #4]
 80119d6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80119da:	2b01      	cmp	r3, #1
 80119dc:	d053      	beq.n	8011a86 <rcu_clock_freq_get+0xde>
 80119de:	2b02      	cmp	r3, #2
 80119e0:	d153      	bne.n	8011a8a <rcu_clock_freq_get+0xe2>
 80119e2:	6853      	ldr	r3, [r2, #4]
 80119e4:	03dd      	lsls	r5, r3, #15
 80119e6:	d523      	bpl.n	8011a30 <rcu_clock_freq_get+0x88>
 80119e8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80119ea:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80119ee:	4b2e      	ldr	r3, [pc, #184]	; (8011aa8 <rcu_clock_freq_get+0x100>)
 80119f0:	d00e      	beq.n	8011a10 <rcu_clock_freq_get+0x68>
 80119f2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80119f4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80119f6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80119fa:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80119fe:	3101      	adds	r1, #1
 8011a00:	280f      	cmp	r0, #15
 8011a02:	f100 0502 	add.w	r5, r0, #2
 8011a06:	fbb3 f3f1 	udiv	r3, r3, r1
 8011a0a:	bf08      	it	eq
 8011a0c:	2514      	moveq	r5, #20
 8011a0e:	436b      	muls	r3, r5
 8011a10:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8011a12:	f001 010f 	and.w	r1, r1, #15
 8011a16:	3101      	adds	r1, #1
 8011a18:	fbb3 f3f1 	udiv	r3, r3, r1
 8011a1c:	6851      	ldr	r1, [r2, #4]
 8011a1e:	6850      	ldr	r0, [r2, #4]
 8011a20:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8011a24:	0080      	lsls	r0, r0, #2
 8011a26:	d505      	bpl.n	8011a34 <rcu_clock_freq_get+0x8c>
 8011a28:	f041 0110 	orr.w	r1, r1, #16
 8011a2c:	1c48      	adds	r0, r1, #1
 8011a2e:	e007      	b.n	8011a40 <rcu_clock_freq_get+0x98>
 8011a30:	4b1e      	ldr	r3, [pc, #120]	; (8011aac <rcu_clock_freq_get+0x104>)
 8011a32:	e7f3      	b.n	8011a1c <rcu_clock_freq_get+0x74>
 8011a34:	290f      	cmp	r1, #15
 8011a36:	d0f9      	beq.n	8011a2c <rcu_clock_freq_get+0x84>
 8011a38:	290d      	cmp	r1, #13
 8011a3a:	f101 0002 	add.w	r0, r1, #2
 8011a3e:	d01d      	beq.n	8011a7c <rcu_clock_freq_get+0xd4>
 8011a40:	4343      	muls	r3, r0
 8011a42:	6851      	ldr	r1, [r2, #4]
 8011a44:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8011a48:	3120      	adds	r1, #32
 8011a4a:	4469      	add	r1, sp
 8011a4c:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8011a50:	fa23 f001 	lsr.w	r0, r3, r1
 8011a54:	6851      	ldr	r1, [r2, #4]
 8011a56:	6852      	ldr	r2, [r2, #4]
 8011a58:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8011a5c:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8011a60:	3120      	adds	r1, #32
 8011a62:	3220      	adds	r2, #32
 8011a64:	4469      	add	r1, sp
 8011a66:	446a      	add	r2, sp
 8011a68:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8011a6c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8011a70:	2c03      	cmp	r4, #3
 8011a72:	d813      	bhi.n	8011a9c <rcu_clock_freq_get+0xf4>
 8011a74:	e8df f004 	tbb	[pc, r4]
 8011a78:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8011a7c:	2006      	movs	r0, #6
 8011a7e:	0859      	lsrs	r1, r3, #1
 8011a80:	fb00 1303 	mla	r3, r0, r3, r1
 8011a84:	e7dd      	b.n	8011a42 <rcu_clock_freq_get+0x9a>
 8011a86:	4b08      	ldr	r3, [pc, #32]	; (8011aa8 <rcu_clock_freq_get+0x100>)
 8011a88:	e7db      	b.n	8011a42 <rcu_clock_freq_get+0x9a>
 8011a8a:	4b09      	ldr	r3, [pc, #36]	; (8011ab0 <rcu_clock_freq_get+0x108>)
 8011a8c:	e7d9      	b.n	8011a42 <rcu_clock_freq_get+0x9a>
 8011a8e:	4618      	mov	r0, r3
 8011a90:	b009      	add	sp, #36	; 0x24
 8011a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a94:	40c8      	lsrs	r0, r1
 8011a96:	e7fb      	b.n	8011a90 <rcu_clock_freq_get+0xe8>
 8011a98:	40d0      	lsrs	r0, r2
 8011a9a:	e7f9      	b.n	8011a90 <rcu_clock_freq_get+0xe8>
 8011a9c:	2000      	movs	r0, #0
 8011a9e:	e7f7      	b.n	8011a90 <rcu_clock_freq_get+0xe8>
 8011aa0:	08013294 	stmdaeq	r1, {r2, r4, r7, r9, ip, sp}
 8011aa4:	40021000 	andmi	r1, r2, r0
 8011aa8:	017d7840 	cmneq	sp, r0, asr #16
 8011aac:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8011ab0:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08011ab4 <timer_deinit>:
 8011ab4:	b508      	push	{r3, lr}
 8011ab6:	4b2d      	ldr	r3, [pc, #180]	; (8011b6c <timer_deinit+0xb8>)
 8011ab8:	4298      	cmp	r0, r3
 8011aba:	d048      	beq.n	8011b4e <timer_deinit+0x9a>
 8011abc:	d816      	bhi.n	8011aec <timer_deinit+0x38>
 8011abe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011ac2:	4298      	cmp	r0, r3
 8011ac4:	d03c      	beq.n	8011b40 <timer_deinit+0x8c>
 8011ac6:	d807      	bhi.n	8011ad8 <timer_deinit+0x24>
 8011ac8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8011acc:	d02a      	beq.n	8011b24 <timer_deinit+0x70>
 8011ace:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8011ad2:	4298      	cmp	r0, r3
 8011ad4:	d02d      	beq.n	8011b32 <timer_deinit+0x7e>
 8011ad6:	bd08      	pop	{r3, pc}
 8011ad8:	4b25      	ldr	r3, [pc, #148]	; (8011b70 <timer_deinit+0xbc>)
 8011ada:	4298      	cmp	r0, r3
 8011adc:	d1fb      	bne.n	8011ad6 <timer_deinit+0x22>
 8011ade:	f240 4003 	movw	r0, #1027	; 0x403
 8011ae2:	f7ff fea8 	bl	8011836 <rcu_periph_reset_enable>
 8011ae6:	f240 4003 	movw	r0, #1027	; 0x403
 8011aea:	e017      	b.n	8011b1c <timer_deinit+0x68>
 8011aec:	4b21      	ldr	r3, [pc, #132]	; (8011b74 <timer_deinit+0xc0>)
 8011aee:	4298      	cmp	r0, r3
 8011af0:	d00e      	beq.n	8011b10 <timer_deinit+0x5c>
 8011af2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8011af6:	4298      	cmp	r0, r3
 8011af8:	d030      	beq.n	8011b5c <timer_deinit+0xa8>
 8011afa:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8011afe:	4298      	cmp	r0, r3
 8011b00:	d1e9      	bne.n	8011ad6 <timer_deinit+0x22>
 8011b02:	f240 4005 	movw	r0, #1029	; 0x405
 8011b06:	f7ff fe96 	bl	8011836 <rcu_periph_reset_enable>
 8011b0a:	f240 4005 	movw	r0, #1029	; 0x405
 8011b0e:	e005      	b.n	8011b1c <timer_deinit+0x68>
 8011b10:	f240 300b 	movw	r0, #779	; 0x30b
 8011b14:	f7ff fe8f 	bl	8011836 <rcu_periph_reset_enable>
 8011b18:	f240 300b 	movw	r0, #779	; 0x30b
 8011b1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b20:	f7ff be8b 	b.w	801183a <rcu_periph_reset_disable>
 8011b24:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011b28:	f7ff fe85 	bl	8011836 <rcu_periph_reset_enable>
 8011b2c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011b30:	e7f4      	b.n	8011b1c <timer_deinit+0x68>
 8011b32:	f240 4001 	movw	r0, #1025	; 0x401
 8011b36:	f7ff fe7e 	bl	8011836 <rcu_periph_reset_enable>
 8011b3a:	f240 4001 	movw	r0, #1025	; 0x401
 8011b3e:	e7ed      	b.n	8011b1c <timer_deinit+0x68>
 8011b40:	f240 4002 	movw	r0, #1026	; 0x402
 8011b44:	f7ff fe77 	bl	8011836 <rcu_periph_reset_enable>
 8011b48:	f240 4002 	movw	r0, #1026	; 0x402
 8011b4c:	e7e6      	b.n	8011b1c <timer_deinit+0x68>
 8011b4e:	f240 4004 	movw	r0, #1028	; 0x404
 8011b52:	f7ff fe70 	bl	8011836 <rcu_periph_reset_enable>
 8011b56:	f240 4004 	movw	r0, #1028	; 0x404
 8011b5a:	e7df      	b.n	8011b1c <timer_deinit+0x68>
 8011b5c:	f240 300d 	movw	r0, #781	; 0x30d
 8011b60:	f7ff fe69 	bl	8011836 <rcu_periph_reset_enable>
 8011b64:	f240 300d 	movw	r0, #781	; 0x30d
 8011b68:	e7d8      	b.n	8011b1c <timer_deinit+0x68>
 8011b6a:	bf00      	nop
 8011b6c:	40001000 	andmi	r1, r0, r0
 8011b70:	40000c00 	andmi	r0, r0, r0, lsl #24
 8011b74:	40012c00 	andmi	r2, r1, r0, lsl #24

08011b78 <timer_init>:
 8011b78:	880b      	ldrh	r3, [r1, #0]
 8011b7a:	6283      	str	r3, [r0, #40]	; 0x28
 8011b7c:	4b26      	ldr	r3, [pc, #152]	; (8011c18 <timer_init+0xa0>)
 8011b7e:	4298      	cmp	r0, r3
 8011b80:	d018      	beq.n	8011bb4 <timer_init+0x3c>
 8011b82:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8011b86:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8011b8a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8011b8e:	d011      	beq.n	8011bb4 <timer_init+0x3c>
 8011b90:	4a22      	ldr	r2, [pc, #136]	; (8011c1c <timer_init+0xa4>)
 8011b92:	4290      	cmp	r0, r2
 8011b94:	d00e      	beq.n	8011bb4 <timer_init+0x3c>
 8011b96:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8011b9a:	4290      	cmp	r0, r2
 8011b9c:	d00a      	beq.n	8011bb4 <timer_init+0x3c>
 8011b9e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8011ba2:	4293      	cmp	r3, r2
 8011ba4:	d006      	beq.n	8011bb4 <timer_init+0x3c>
 8011ba6:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8011baa:	4293      	cmp	r3, r2
 8011bac:	d002      	beq.n	8011bb4 <timer_init+0x3c>
 8011bae:	4b1c      	ldr	r3, [pc, #112]	; (8011c20 <timer_init+0xa8>)
 8011bb0:	4298      	cmp	r0, r3
 8011bb2:	d10f      	bne.n	8011bd4 <timer_init+0x5c>
 8011bb4:	6803      	ldr	r3, [r0, #0]
 8011bb6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011bba:	6003      	str	r3, [r0, #0]
 8011bbc:	884b      	ldrh	r3, [r1, #2]
 8011bbe:	6802      	ldr	r2, [r0, #0]
 8011bc0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011bc4:	4313      	orrs	r3, r2
 8011bc6:	6003      	str	r3, [r0, #0]
 8011bc8:	888b      	ldrh	r3, [r1, #4]
 8011bca:	6802      	ldr	r2, [r0, #0]
 8011bcc:	f003 0310 	and.w	r3, r3, #16
 8011bd0:	4313      	orrs	r3, r2
 8011bd2:	6003      	str	r3, [r0, #0]
 8011bd4:	688b      	ldr	r3, [r1, #8]
 8011bd6:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011bd8:	4b12      	ldr	r3, [pc, #72]	; (8011c24 <timer_init+0xac>)
 8011bda:	4298      	cmp	r0, r3
 8011bdc:	d003      	beq.n	8011be6 <timer_init+0x6e>
 8011bde:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011be2:	4298      	cmp	r0, r3
 8011be4:	d104      	bne.n	8011bf0 <timer_init+0x78>
 8011be6:	6943      	ldr	r3, [r0, #20]
 8011be8:	f043 0301 	orr.w	r3, r3, #1
 8011bec:	6143      	str	r3, [r0, #20]
 8011bee:	4770      	bx	lr
 8011bf0:	6803      	ldr	r3, [r0, #0]
 8011bf2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8011bf6:	6003      	str	r3, [r0, #0]
 8011bf8:	898b      	ldrh	r3, [r1, #12]
 8011bfa:	6802      	ldr	r2, [r0, #0]
 8011bfc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8011c00:	4313      	orrs	r3, r2
 8011c02:	6003      	str	r3, [r0, #0]
 8011c04:	4b04      	ldr	r3, [pc, #16]	; (8011c18 <timer_init+0xa0>)
 8011c06:	4298      	cmp	r0, r3
 8011c08:	d002      	beq.n	8011c10 <timer_init+0x98>
 8011c0a:	4b04      	ldr	r3, [pc, #16]	; (8011c1c <timer_init+0xa4>)
 8011c0c:	4298      	cmp	r0, r3
 8011c0e:	d1ea      	bne.n	8011be6 <timer_init+0x6e>
 8011c10:	7b8b      	ldrb	r3, [r1, #14]
 8011c12:	6303      	str	r3, [r0, #48]	; 0x30
 8011c14:	e7e7      	b.n	8011be6 <timer_init+0x6e>
 8011c16:	bf00      	nop
 8011c18:	40012c00 	andmi	r2, r1, r0, lsl #24
 8011c1c:	40013400 	andmi	r3, r1, r0, lsl #8
 8011c20:	40002000 	andmi	r2, r0, r0
 8011c24:	40001000 	andmi	r1, r0, r0

08011c28 <timer_enable>:
 8011c28:	6803      	ldr	r3, [r0, #0]
 8011c2a:	f043 0301 	orr.w	r3, r3, #1
 8011c2e:	6003      	str	r3, [r0, #0]
 8011c30:	4770      	bx	lr
	...

08011c34 <usart_deinit>:
 8011c34:	b508      	push	{r3, lr}
 8011c36:	4b1d      	ldr	r3, [pc, #116]	; (8011cac <usart_deinit+0x78>)
 8011c38:	4298      	cmp	r0, r3
 8011c3a:	d028      	beq.n	8011c8e <usart_deinit+0x5a>
 8011c3c:	d808      	bhi.n	8011c50 <usart_deinit+0x1c>
 8011c3e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011c42:	4298      	cmp	r0, r3
 8011c44:	d015      	beq.n	8011c72 <usart_deinit+0x3e>
 8011c46:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011c4a:	4298      	cmp	r0, r3
 8011c4c:	d018      	beq.n	8011c80 <usart_deinit+0x4c>
 8011c4e:	bd08      	pop	{r3, pc}
 8011c50:	4b17      	ldr	r3, [pc, #92]	; (8011cb0 <usart_deinit+0x7c>)
 8011c52:	4298      	cmp	r0, r3
 8011c54:	d022      	beq.n	8011c9c <usart_deinit+0x68>
 8011c56:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011c5a:	4298      	cmp	r0, r3
 8011c5c:	d1f7      	bne.n	8011c4e <usart_deinit+0x1a>
 8011c5e:	f240 300e 	movw	r0, #782	; 0x30e
 8011c62:	f7ff fde8 	bl	8011836 <rcu_periph_reset_enable>
 8011c66:	f240 300e 	movw	r0, #782	; 0x30e
 8011c6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011c6e:	f7ff bde4 	b.w	801183a <rcu_periph_reset_disable>
 8011c72:	f240 4011 	movw	r0, #1041	; 0x411
 8011c76:	f7ff fdde 	bl	8011836 <rcu_periph_reset_enable>
 8011c7a:	f240 4011 	movw	r0, #1041	; 0x411
 8011c7e:	e7f4      	b.n	8011c6a <usart_deinit+0x36>
 8011c80:	f240 4012 	movw	r0, #1042	; 0x412
 8011c84:	f7ff fdd7 	bl	8011836 <rcu_periph_reset_enable>
 8011c88:	f240 4012 	movw	r0, #1042	; 0x412
 8011c8c:	e7ed      	b.n	8011c6a <usart_deinit+0x36>
 8011c8e:	f240 4013 	movw	r0, #1043	; 0x413
 8011c92:	f7ff fdd0 	bl	8011836 <rcu_periph_reset_enable>
 8011c96:	f240 4013 	movw	r0, #1043	; 0x413
 8011c9a:	e7e6      	b.n	8011c6a <usart_deinit+0x36>
 8011c9c:	f240 4014 	movw	r0, #1044	; 0x414
 8011ca0:	f7ff fdc9 	bl	8011836 <rcu_periph_reset_enable>
 8011ca4:	f240 4014 	movw	r0, #1044	; 0x414
 8011ca8:	e7df      	b.n	8011c6a <usart_deinit+0x36>
 8011caa:	bf00      	nop
 8011cac:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011cb0:	40005000 	andmi	r5, r0, r0

08011cb4 <usart_baudrate_set>:
 8011cb4:	b538      	push	{r3, r4, r5, lr}
 8011cb6:	4b11      	ldr	r3, [pc, #68]	; (8011cfc <usart_baudrate_set+0x48>)
 8011cb8:	4604      	mov	r4, r0
 8011cba:	4298      	cmp	r0, r3
 8011cbc:	460d      	mov	r5, r1
 8011cbe:	d01b      	beq.n	8011cf8 <usart_baudrate_set+0x44>
 8011cc0:	d809      	bhi.n	8011cd6 <usart_baudrate_set+0x22>
 8011cc2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011cc6:	4298      	cmp	r0, r3
 8011cc8:	d016      	beq.n	8011cf8 <usart_baudrate_set+0x44>
 8011cca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011cce:	4298      	cmp	r0, r3
 8011cd0:	d012      	beq.n	8011cf8 <usart_baudrate_set+0x44>
 8011cd2:	2000      	movs	r0, #0
 8011cd4:	e009      	b.n	8011cea <usart_baudrate_set+0x36>
 8011cd6:	4b0a      	ldr	r3, [pc, #40]	; (8011d00 <usart_baudrate_set+0x4c>)
 8011cd8:	4298      	cmp	r0, r3
 8011cda:	d00d      	beq.n	8011cf8 <usart_baudrate_set+0x44>
 8011cdc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8011ce0:	4298      	cmp	r0, r3
 8011ce2:	d1f6      	bne.n	8011cd2 <usart_baudrate_set+0x1e>
 8011ce4:	2003      	movs	r0, #3
 8011ce6:	f7ff fe5f 	bl	80119a8 <rcu_clock_freq_get>
 8011cea:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8011cee:	fbb3 f1f5 	udiv	r1, r3, r5
 8011cf2:	b289      	uxth	r1, r1
 8011cf4:	60a1      	str	r1, [r4, #8]
 8011cf6:	bd38      	pop	{r3, r4, r5, pc}
 8011cf8:	2002      	movs	r0, #2
 8011cfa:	e7f4      	b.n	8011ce6 <usart_baudrate_set+0x32>
 8011cfc:	40004c00 	andmi	r4, r0, r0, lsl #24
 8011d00:	40005000 	andmi	r5, r0, r0

08011d04 <usart_parity_config>:
 8011d04:	68c2      	ldr	r2, [r0, #12]
 8011d06:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8011d0a:	60c2      	str	r2, [r0, #12]
 8011d0c:	68c3      	ldr	r3, [r0, #12]
 8011d0e:	430b      	orrs	r3, r1
 8011d10:	60c3      	str	r3, [r0, #12]
 8011d12:	4770      	bx	lr

08011d14 <usart_word_length_set>:
 8011d14:	68c2      	ldr	r2, [r0, #12]
 8011d16:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8011d1a:	60c2      	str	r2, [r0, #12]
 8011d1c:	68c3      	ldr	r3, [r0, #12]
 8011d1e:	430b      	orrs	r3, r1
 8011d20:	60c3      	str	r3, [r0, #12]
 8011d22:	4770      	bx	lr

08011d24 <usart_stop_bit_set>:
 8011d24:	6902      	ldr	r2, [r0, #16]
 8011d26:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8011d2a:	6102      	str	r2, [r0, #16]
 8011d2c:	6903      	ldr	r3, [r0, #16]
 8011d2e:	430b      	orrs	r3, r1
 8011d30:	6103      	str	r3, [r0, #16]
 8011d32:	4770      	bx	lr

08011d34 <usart_transmit_config>:
 8011d34:	68c3      	ldr	r3, [r0, #12]
 8011d36:	f023 0308 	bic.w	r3, r3, #8
 8011d3a:	430b      	orrs	r3, r1
 8011d3c:	60c3      	str	r3, [r0, #12]
 8011d3e:	4770      	bx	lr

08011d40 <usart_receive_config>:
 8011d40:	68c3      	ldr	r3, [r0, #12]
 8011d42:	f023 0304 	bic.w	r3, r3, #4
 8011d46:	430b      	orrs	r3, r1
 8011d48:	60c3      	str	r3, [r0, #12]
 8011d4a:	4770      	bx	lr

08011d4c <usart_hardware_flow_rts_config>:
 8011d4c:	6943      	ldr	r3, [r0, #20]
 8011d4e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8011d52:	430b      	orrs	r3, r1
 8011d54:	6143      	str	r3, [r0, #20]
 8011d56:	4770      	bx	lr

08011d58 <usart_hardware_flow_cts_config>:
 8011d58:	6943      	ldr	r3, [r0, #20]
 8011d5a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8011d5e:	430b      	orrs	r3, r1
 8011d60:	6143      	str	r3, [r0, #20]
 8011d62:	4770      	bx	lr

08011d64 <usart_flag_get>:
 8011d64:	098b      	lsrs	r3, r1, #6
 8011d66:	5818      	ldr	r0, [r3, r0]
 8011d68:	f001 011f 	and.w	r1, r1, #31
 8011d6c:	40c8      	lsrs	r0, r1
 8011d6e:	f000 0001 	and.w	r0, r0, #1
 8011d72:	4770      	bx	lr

08011d74 <emac_start>:
 8011d74:	b510      	push	{r4, lr}
 8011d76:	4604      	mov	r4, r0
 8011d78:	f240 6002 	movw	r0, #1538	; 0x602
 8011d7c:	f7ff fd3e 	bl	80117fc <rcu_periph_clock_enable>
 8011d80:	f240 6003 	movw	r0, #1539	; 0x603
 8011d84:	f7ff fd3a 	bl	80117fc <rcu_periph_clock_enable>
 8011d88:	f240 6004 	movw	r0, #1540	; 0x604
 8011d8c:	f7ff fd36 	bl	80117fc <rcu_periph_clock_enable>
 8011d90:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011d94:	2203      	movs	r2, #3
 8011d96:	2118      	movs	r1, #24
 8011d98:	4846      	ldr	r0, [pc, #280]	; (8011eb4 <emac_start+0x140>)
 8011d9a:	f7ff fc97 	bl	80116cc <gpio_init>
 8011d9e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8011da2:	f7ff fd2b 	bl	80117fc <rcu_periph_clock_enable>
 8011da6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8011daa:	f7ff fd63 	bl	8011874 <rcu_pll2_config>
 8011dae:	201c      	movs	r0, #28
 8011db0:	f7ff fdf8 	bl	80119a4 <rcu_osci_on>
 8011db4:	201c      	movs	r0, #28
 8011db6:	f7ff fd95 	bl	80118e4 <rcu_osci_stab_wait>
 8011dba:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8011dbe:	f7ff fd4f 	bl	8011860 <rcu_ckout0_config>
 8011dc2:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8011dc6:	f7ff fd05 	bl	80117d4 <gpio_ethernet_phy_select>
 8011dca:	2302      	movs	r3, #2
 8011dcc:	2203      	movs	r2, #3
 8011dce:	2104      	movs	r1, #4
 8011dd0:	4838      	ldr	r0, [pc, #224]	; (8011eb4 <emac_start+0x140>)
 8011dd2:	f7ff fc7b 	bl	80116cc <gpio_init>
 8011dd6:	2304      	movs	r3, #4
 8011dd8:	2203      	movs	r2, #3
 8011dda:	2118      	movs	r1, #24
 8011ddc:	4835      	ldr	r0, [pc, #212]	; (8011eb4 <emac_start+0x140>)
 8011dde:	f7ff fc75 	bl	80116cc <gpio_init>
 8011de2:	2380      	movs	r3, #128	; 0x80
 8011de4:	2203      	movs	r2, #3
 8011de6:	2104      	movs	r1, #4
 8011de8:	4832      	ldr	r0, [pc, #200]	; (8011eb4 <emac_start+0x140>)
 8011dea:	f7ff fc6f 	bl	80116cc <gpio_init>
 8011dee:	2302      	movs	r3, #2
 8011df0:	2203      	movs	r2, #3
 8011df2:	2118      	movs	r1, #24
 8011df4:	4830      	ldr	r0, [pc, #192]	; (8011eb8 <emac_start+0x144>)
 8011df6:	f7ff fc69 	bl	80116cc <gpio_init>
 8011dfa:	2310      	movs	r3, #16
 8011dfc:	2203      	movs	r2, #3
 8011dfe:	2104      	movs	r1, #4
 8011e00:	482d      	ldr	r0, [pc, #180]	; (8011eb8 <emac_start+0x144>)
 8011e02:	f7ff fc63 	bl	80116cc <gpio_init>
 8011e06:	2320      	movs	r3, #32
 8011e08:	2203      	movs	r2, #3
 8011e0a:	2104      	movs	r1, #4
 8011e0c:	482a      	ldr	r0, [pc, #168]	; (8011eb8 <emac_start+0x144>)
 8011e0e:	f7ff fc5d 	bl	80116cc <gpio_init>
 8011e12:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011e16:	2203      	movs	r2, #3
 8011e18:	2118      	movs	r1, #24
 8011e1a:	4828      	ldr	r0, [pc, #160]	; (8011ebc <emac_start+0x148>)
 8011e1c:	f7ff fc56 	bl	80116cc <gpio_init>
 8011e20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8011e24:	2203      	movs	r2, #3
 8011e26:	2118      	movs	r1, #24
 8011e28:	4824      	ldr	r0, [pc, #144]	; (8011ebc <emac_start+0x148>)
 8011e2a:	f7ff fc4f 	bl	80116cc <gpio_init>
 8011e2e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8011e32:	2203      	movs	r2, #3
 8011e34:	2118      	movs	r1, #24
 8011e36:	4821      	ldr	r0, [pc, #132]	; (8011ebc <emac_start+0x148>)
 8011e38:	f7ff fc48 	bl	80116cc <gpio_init>
 8011e3c:	f240 500e 	movw	r0, #1294	; 0x50e
 8011e40:	f7ff fcdc 	bl	80117fc <rcu_periph_clock_enable>
 8011e44:	f240 500f 	movw	r0, #1295	; 0x50f
 8011e48:	f7ff fcd8 	bl	80117fc <rcu_periph_clock_enable>
 8011e4c:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8011e50:	f7ff fcd4 	bl	80117fc <rcu_periph_clock_enable>
 8011e54:	f001 f8de 	bl	8013014 <enet_deinit>
 8011e58:	f000 fd38 	bl	80128cc <enet_software_reset>
 8011e5c:	b900      	cbnz	r0, 8011e60 <emac_start+0xec>
 8011e5e:	e7fe      	b.n	8011e5e <emac_start+0xea>
 8011e60:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8011e64:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011e68:	2001      	movs	r0, #1
 8011e6a:	f000 feb3 	bl	8012bd4 <enet_init>
 8011e6e:	4b14      	ldr	r3, [pc, #80]	; (8011ec0 <emac_start+0x14c>)
 8011e70:	6018      	str	r0, [r3, #0]
 8011e72:	681b      	ldr	r3, [r3, #0]
 8011e74:	b903      	cbnz	r3, 8011e78 <emac_start+0x104>
 8011e76:	e7fe      	b.n	8011e76 <emac_start+0x102>
 8011e78:	4620      	mov	r0, r4
 8011e7a:	f000 fb9f 	bl	80125bc <mac_address_get>
 8011e7e:	4621      	mov	r1, r4
 8011e80:	2000      	movs	r0, #0
 8011e82:	f000 fe07 	bl	8012a94 <enet_mac_address_set>
 8011e86:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8011e8a:	f000 fd33 	bl	80128f4 <enet_descriptors_chain_init>
 8011e8e:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8011e92:	f000 fd2f 	bl	80128f4 <enet_descriptors_chain_init>
 8011e96:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8011e9a:	480a      	ldr	r0, [pc, #40]	; (8011ec4 <emac_start+0x150>)
 8011e9c:	f000 fdf4 	bl	8012a88 <enet_transmit_checksum_config>
 8011ea0:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8011ea4:	4808      	ldr	r0, [pc, #32]	; (8011ec8 <emac_start+0x154>)
 8011ea6:	f000 fdef 	bl	8012a88 <enet_transmit_checksum_config>
 8011eaa:	f001 f82b 	bl	8012f04 <enet_enable>
 8011eae:	2001      	movs	r0, #1
 8011eb0:	bd10      	pop	{r4, pc}
 8011eb2:	bf00      	nop
 8011eb4:	40010800 	andmi	r0, r1, r0, lsl #16
 8011eb8:	40011000 	andmi	r1, r1, r0
 8011ebc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8011ec0:	200097a8 	andcs	r9, r0, r8, lsr #15
 8011ec4:	20013bf4 	strdcs	r3, [r1], -r4
 8011ec8:	20013c04 	andcs	r3, r1, r4, lsl #24

08011ecc <emac_eth_recv>:
 8011ecc:	b538      	push	{r3, r4, r5, lr}
 8011ece:	4605      	mov	r5, r0
 8011ed0:	f001 f870 	bl	8012fb4 <enet_rxframe_size_get>
 8011ed4:	4604      	mov	r4, r0
 8011ed6:	b138      	cbz	r0, 8011ee8 <emac_eth_recv+0x1c>
 8011ed8:	4b05      	ldr	r3, [pc, #20]	; (8011ef0 <emac_eth_recv+0x24>)
 8011eda:	2105      	movs	r1, #5
 8011edc:	6818      	ldr	r0, [r3, #0]
 8011ede:	f001 f818 	bl	8012f12 <enet_desc_information_get>
 8011ee2:	6028      	str	r0, [r5, #0]
 8011ee4:	4620      	mov	r0, r4
 8011ee6:	bd38      	pop	{r3, r4, r5, pc}
 8011ee8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011eec:	e7fb      	b.n	8011ee6 <emac_eth_recv+0x1a>
 8011eee:	bf00      	nop
 8011ef0:	200117b8 			; <UNDEFINED> instruction: 0x200117b8

08011ef4 <emac_free_pkt>:
 8011ef4:	2100      	movs	r1, #0
 8011ef6:	4608      	mov	r0, r1
 8011ef8:	f000 bd44 	b.w	8012984 <enet_frame_receive>

08011efc <emac_eth_send>:
 8011efc:	f000 bd82 	b.w	8012a04 <enet_frame_transmit>

08011f00 <gd32_adc_init()>:
 8011f00:	b510      	push	{r4, lr}
 8011f02:	f240 6009 	movw	r0, #1545	; 0x609
 8011f06:	4c21      	ldr	r4, [pc, #132]	; (8011f8c <gd32_adc_init()+0x8c>)
 8011f08:	f7ff fc78 	bl	80117fc <rcu_periph_clock_enable>
 8011f0c:	2005      	movs	r0, #5
 8011f0e:	f7ff fcbd 	bl	801188c <rcu_adc_clock_config>
 8011f12:	4620      	mov	r0, r4
 8011f14:	2201      	movs	r2, #1
 8011f16:	f44f 7180 	mov.w	r1, #256	; 0x100
 8011f1a:	f000 fb71 	bl	8012600 <adc_special_function_config>
 8011f1e:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8011f22:	4620      	mov	r0, r4
 8011f24:	2102      	movs	r1, #2
 8011f26:	f000 fc0b 	bl	8012740 <adc_external_trigger_source_config>
 8011f2a:	2100      	movs	r1, #0
 8011f2c:	4620      	mov	r0, r4
 8011f2e:	f000 fb8f 	bl	8012650 <adc_data_alignment_config>
 8011f32:	2000      	movs	r0, #0
 8011f34:	f000 fb54 	bl	80125e0 <adc_mode_config>
 8011f38:	2202      	movs	r2, #2
 8011f3a:	4620      	mov	r0, r4
 8011f3c:	4611      	mov	r1, r2
 8011f3e:	f000 fbb3 	bl	80126a8 <adc_channel_length_config>
 8011f42:	4620      	mov	r0, r4
 8011f44:	2307      	movs	r3, #7
 8011f46:	2210      	movs	r2, #16
 8011f48:	2100      	movs	r1, #0
 8011f4a:	f000 fbca 	bl	80126e2 <adc_inserted_channel_config>
 8011f4e:	2307      	movs	r3, #7
 8011f50:	4620      	mov	r0, r4
 8011f52:	2211      	movs	r2, #17
 8011f54:	2101      	movs	r1, #1
 8011f56:	f000 fbc4 	bl	80126e2 <adc_inserted_channel_config>
 8011f5a:	2201      	movs	r2, #1
 8011f5c:	2102      	movs	r1, #2
 8011f5e:	4620      	mov	r0, r4
 8011f60:	f000 fbff 	bl	8012762 <adc_external_trigger_config>
 8011f64:	f000 fb96 	bl	8012694 <adc_tempsensor_vrefint_enable>
 8011f68:	4620      	mov	r0, r4
 8011f6a:	f000 fb7a 	bl	8012662 <adc_enable>
 8011f6e:	2100      	movs	r1, #0
 8011f70:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8011f74:	f000 fb0a 	bl	801258c <udelay(unsigned int, unsigned int)>
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f000 fb7a 	bl	8012672 <adc_calibration_enable>
 8011f7e:	4620      	mov	r0, r4
 8011f80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f84:	2102      	movs	r1, #2
 8011f86:	f000 bc07 	b.w	8012798 <adc_software_trigger_enable>
 8011f8a:	bf00      	nop
 8011f8c:	40012400 	andmi	r2, r1, r0, lsl #8

08011f90 <_stop() [clone .isra.0]>:
 8011f90:	b508      	push	{r3, lr}
 8011f92:	4806      	ldr	r0, [pc, #24]	; (8011fac <_stop() [clone .isra.0]+0x1c>)
 8011f94:	f001 f8ce 	bl	8013134 <i2c_stop_on_bus>
 8011f98:	f640 73ff 	movw	r3, #4095	; 0xfff
 8011f9c:	4a04      	ldr	r2, [pc, #16]	; (8011fb0 <_stop() [clone .isra.0]+0x20>)
 8011f9e:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8011fa2:	0589      	lsls	r1, r1, #22
 8011fa4:	d501      	bpl.n	8011faa <_stop() [clone .isra.0]+0x1a>
 8011fa6:	3b01      	subs	r3, #1
 8011fa8:	d1f9      	bne.n	8011f9e <_stop() [clone .isra.0]+0xe>
 8011faa:	bd08      	pop	{r3, pc}
 8011fac:	40005400 	andmi	r5, r0, r0, lsl #8
 8011fb0:	40005000 	andmi	r5, r0, r0

08011fb4 <gd32_i2c_begin()>:
 8011fb4:	b510      	push	{r4, lr}
 8011fb6:	f240 7015 	movw	r0, #1813	; 0x715
 8011fba:	f7ff fc1f 	bl	80117fc <rcu_periph_clock_enable>
 8011fbe:	4c15      	ldr	r4, [pc, #84]	; (8012014 <gd32_i2c_begin()+0x60>)
 8011fc0:	f240 6003 	movw	r0, #1539	; 0x603
 8011fc4:	f7ff fc1a 	bl	80117fc <rcu_periph_clock_enable>
 8011fc8:	f240 6003 	movw	r0, #1539	; 0x603
 8011fcc:	f7ff fc16 	bl	80117fc <rcu_periph_clock_enable>
 8011fd0:	4620      	mov	r0, r4
 8011fd2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011fd6:	2203      	movs	r2, #3
 8011fd8:	211c      	movs	r1, #28
 8011fda:	f7ff fb77 	bl	80116cc <gpio_init>
 8011fde:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011fe2:	2203      	movs	r2, #3
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	211c      	movs	r1, #28
 8011fe8:	f7ff fb70 	bl	80116cc <gpio_init>
 8011fec:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8011ff0:	2101      	movs	r1, #1
 8011ff2:	2002      	movs	r0, #2
 8011ff4:	f7ff fbbe 	bl	8011774 <gpio_pin_remap_config>
 8011ff8:	4620      	mov	r0, r4
 8011ffa:	4907      	ldr	r1, [pc, #28]	; (8012018 <gd32_i2c_begin()+0x64>)
 8011ffc:	2200      	movs	r2, #0
 8011ffe:	f001 f817 	bl	8013030 <i2c_clock_config>
 8012002:	4620      	mov	r0, r4
 8012004:	f001 f88c 	bl	8013120 <i2c_enable>
 8012008:	4620      	mov	r0, r4
 801200a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801200e:	2101      	movs	r1, #1
 8012010:	f001 b86c 	b.w	80130ec <i2c_ack_config>
 8012014:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012018:	00061a80 	andeq	r1, r6, r0, lsl #21

0801201c <gd32_i2c_set_baudrate(unsigned int)>:
 801201c:	4601      	mov	r1, r0
 801201e:	2200      	movs	r2, #0
 8012020:	4801      	ldr	r0, [pc, #4]	; (8012028 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8012022:	f001 b805 	b.w	8013030 <i2c_clock_config>
 8012026:	bf00      	nop
 8012028:	40005400 	andmi	r5, r0, r0, lsl #8

0801202c <gd32_i2c_set_address(unsigned char)>:
 801202c:	4b01      	ldr	r3, [pc, #4]	; (8012034 <gd32_i2c_set_address(unsigned char)+0x8>)
 801202e:	0040      	lsls	r0, r0, #1
 8012030:	7018      	strb	r0, [r3, #0]
 8012032:	4770      	bx	lr
 8012034:	200097ac 	andcs	r9, r0, ip, lsr #15

08012038 <gd32_i2c_write(char const*, unsigned int)>:
 8012038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801203a:	4604      	mov	r4, r0
 801203c:	460f      	mov	r7, r1
 801203e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8012042:	4e2e      	ldr	r6, [pc, #184]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8012044:	f240 6101 	movw	r1, #1537	; 0x601
 8012048:	4630      	mov	r0, r6
 801204a:	f001 f87d 	bl	8013148 <i2c_flag_get>
 801204e:	b138      	cbz	r0, 8012060 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8012050:	3d01      	subs	r5, #1
 8012052:	d1f7      	bne.n	8012044 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8012054:	f7ff ff9c 	bl	8011f90 <_stop() [clone .isra.0]>
 8012058:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801205c:	4240      	negs	r0, r0
 801205e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012060:	4826      	ldr	r0, [pc, #152]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8012062:	f001 f862 	bl	801312a <i2c_start_on_bus>
 8012066:	f640 75ff 	movw	r5, #4095	; 0xfff
 801206a:	4e24      	ldr	r6, [pc, #144]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801206c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8012070:	4630      	mov	r0, r6
 8012072:	f001 f869 	bl	8013148 <i2c_flag_get>
 8012076:	bb68      	cbnz	r0, 80120d4 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8012078:	3d01      	subs	r5, #1
 801207a:	d1f7      	bne.n	801206c <gd32_i2c_write(char const*, unsigned int)+0x34>
 801207c:	e7ea      	b.n	8012054 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 801207e:	f240 5101 	movw	r1, #1281	; 0x501
 8012082:	481e      	ldr	r0, [pc, #120]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8012084:	f001 f868 	bl	8013158 <i2c_flag_clear>
 8012088:	f640 75ff 	movw	r5, #4095	; 0xfff
 801208c:	4e1b      	ldr	r6, [pc, #108]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801208e:	f240 5107 	movw	r1, #1287	; 0x507
 8012092:	4630      	mov	r0, r6
 8012094:	f001 f858 	bl	8013148 <i2c_flag_get>
 8012098:	2801      	cmp	r0, #1
 801209a:	d114      	bne.n	80120c6 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 801209c:	4e17      	ldr	r6, [pc, #92]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801209e:	4427      	add	r7, r4
 80120a0:	42a7      	cmp	r7, r4
 80120a2:	d013      	beq.n	80120cc <gd32_i2c_write(char const*, unsigned int)+0x94>
 80120a4:	4630      	mov	r0, r6
 80120a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80120aa:	f001 f848 	bl	801313e <i2c_data_transmit>
 80120ae:	f640 75ff 	movw	r5, #4095	; 0xfff
 80120b2:	f240 5102 	movw	r1, #1282	; 0x502
 80120b6:	4630      	mov	r0, r6
 80120b8:	f001 f846 	bl	8013148 <i2c_flag_get>
 80120bc:	2800      	cmp	r0, #0
 80120be:	d1ef      	bne.n	80120a0 <gd32_i2c_write(char const*, unsigned int)+0x68>
 80120c0:	3d01      	subs	r5, #1
 80120c2:	d1f6      	bne.n	80120b2 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 80120c4:	e7c6      	b.n	8012054 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80120c6:	3d01      	subs	r5, #1
 80120c8:	d1e1      	bne.n	801208e <gd32_i2c_write(char const*, unsigned int)+0x56>
 80120ca:	e7c3      	b.n	8012054 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80120cc:	f7ff ff60 	bl	8011f90 <_stop() [clone .isra.0]>
 80120d0:	2000      	movs	r0, #0
 80120d2:	e7c3      	b.n	801205c <gd32_i2c_write(char const*, unsigned int)+0x24>
 80120d4:	4b0a      	ldr	r3, [pc, #40]	; (8012100 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 80120d6:	f06f 0201 	mvn.w	r2, #1
 80120da:	7819      	ldrb	r1, [r3, #0]
 80120dc:	4807      	ldr	r0, [pc, #28]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80120de:	f001 f817 	bl	8013110 <i2c_master_addressing>
 80120e2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80120e6:	4e05      	ldr	r6, [pc, #20]	; (80120fc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80120e8:	f240 5101 	movw	r1, #1281	; 0x501
 80120ec:	4630      	mov	r0, r6
 80120ee:	f001 f82b 	bl	8013148 <i2c_flag_get>
 80120f2:	2800      	cmp	r0, #0
 80120f4:	d1c3      	bne.n	801207e <gd32_i2c_write(char const*, unsigned int)+0x46>
 80120f6:	3d01      	subs	r5, #1
 80120f8:	d1f6      	bne.n	80120e8 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 80120fa:	e7ab      	b.n	8012054 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80120fc:	40005400 	andmi	r5, r0, r0, lsl #8
 8012100:	200097ac 	andcs	r9, r0, ip, lsr #15

08012104 <gd32_i2c_read(char*, unsigned int)>:
 8012104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012108:	4680      	mov	r8, r0
 801210a:	460c      	mov	r4, r1
 801210c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8012110:	4f49      	ldr	r7, [pc, #292]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012112:	f240 6101 	movw	r1, #1537	; 0x601
 8012116:	4638      	mov	r0, r7
 8012118:	f001 f816 	bl	8013148 <i2c_flag_get>
 801211c:	4605      	mov	r5, r0
 801211e:	b128      	cbz	r0, 801212c <gd32_i2c_read(char*, unsigned int)+0x28>
 8012120:	3e01      	subs	r6, #1
 8012122:	d1f6      	bne.n	8012112 <gd32_i2c_read(char*, unsigned int)+0xe>
 8012124:	f7ff ff34 	bl	8011f90 <_stop() [clone .isra.0]>
 8012128:	2504      	movs	r5, #4
 801212a:	e082      	b.n	8012232 <gd32_i2c_read(char*, unsigned int)+0x12e>
 801212c:	2c02      	cmp	r4, #2
 801212e:	d103      	bne.n	8012138 <gd32_i2c_read(char*, unsigned int)+0x34>
 8012130:	4601      	mov	r1, r0
 8012132:	4841      	ldr	r0, [pc, #260]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012134:	f000 ffe3 	bl	80130fe <i2c_ackpos_config>
 8012138:	483f      	ldr	r0, [pc, #252]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801213a:	f000 fff6 	bl	801312a <i2c_start_on_bus>
 801213e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8012142:	4f3d      	ldr	r7, [pc, #244]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012144:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8012148:	4638      	mov	r0, r7
 801214a:	f000 fffd 	bl	8013148 <i2c_flag_get>
 801214e:	b910      	cbnz	r0, 8012156 <gd32_i2c_read(char*, unsigned int)+0x52>
 8012150:	3e01      	subs	r6, #1
 8012152:	d1f7      	bne.n	8012144 <gd32_i2c_read(char*, unsigned int)+0x40>
 8012154:	e7e6      	b.n	8012124 <gd32_i2c_read(char*, unsigned int)+0x20>
 8012156:	4b39      	ldr	r3, [pc, #228]	; (801223c <gd32_i2c_read(char*, unsigned int)+0x138>)
 8012158:	2201      	movs	r2, #1
 801215a:	7819      	ldrb	r1, [r3, #0]
 801215c:	4836      	ldr	r0, [pc, #216]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801215e:	f000 ffd7 	bl	8013110 <i2c_master_addressing>
 8012162:	2c02      	cmp	r4, #2
 8012164:	d803      	bhi.n	801216e <gd32_i2c_read(char*, unsigned int)+0x6a>
 8012166:	2100      	movs	r1, #0
 8012168:	4833      	ldr	r0, [pc, #204]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801216a:	f000 ffbf 	bl	80130ec <i2c_ack_config>
 801216e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8012172:	4f31      	ldr	r7, [pc, #196]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012174:	f240 5101 	movw	r1, #1281	; 0x501
 8012178:	4638      	mov	r0, r7
 801217a:	f000 ffe5 	bl	8013148 <i2c_flag_get>
 801217e:	b910      	cbnz	r0, 8012186 <gd32_i2c_read(char*, unsigned int)+0x82>
 8012180:	3e01      	subs	r6, #1
 8012182:	d1f7      	bne.n	8012174 <gd32_i2c_read(char*, unsigned int)+0x70>
 8012184:	e7ce      	b.n	8012124 <gd32_i2c_read(char*, unsigned int)+0x20>
 8012186:	f240 5101 	movw	r1, #1281	; 0x501
 801218a:	482b      	ldr	r0, [pc, #172]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801218c:	f000 ffe4 	bl	8013158 <i2c_flag_clear>
 8012190:	2c01      	cmp	r4, #1
 8012192:	d102      	bne.n	801219a <gd32_i2c_read(char*, unsigned int)+0x96>
 8012194:	4828      	ldr	r0, [pc, #160]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012196:	f000 ffcd 	bl	8013134 <i2c_stop_on_bus>
 801219a:	f640 77ff 	movw	r7, #4095	; 0xfff
 801219e:	4e26      	ldr	r6, [pc, #152]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80121a0:	b3ac      	cbz	r4, 801220e <gd32_i2c_read(char*, unsigned int)+0x10a>
 80121a2:	2c03      	cmp	r4, #3
 80121a4:	d121      	bne.n	80121ea <gd32_i2c_read(char*, unsigned int)+0xe6>
 80121a6:	f640 79ff 	movw	r9, #4095	; 0xfff
 80121aa:	f240 5102 	movw	r1, #1282	; 0x502
 80121ae:	4630      	mov	r0, r6
 80121b0:	f000 ffca 	bl	8013148 <i2c_flag_get>
 80121b4:	b918      	cbnz	r0, 80121be <gd32_i2c_read(char*, unsigned int)+0xba>
 80121b6:	f1b9 0901 	subs.w	r9, r9, #1
 80121ba:	d1f6      	bne.n	80121aa <gd32_i2c_read(char*, unsigned int)+0xa6>
 80121bc:	e7b2      	b.n	8012124 <gd32_i2c_read(char*, unsigned int)+0x20>
 80121be:	2100      	movs	r1, #0
 80121c0:	4630      	mov	r0, r6
 80121c2:	f000 ff93 	bl	80130ec <i2c_ack_config>
 80121c6:	f240 5106 	movw	r1, #1286	; 0x506
 80121ca:	4630      	mov	r0, r6
 80121cc:	f000 ffbc 	bl	8013148 <i2c_flag_get>
 80121d0:	b138      	cbz	r0, 80121e2 <gd32_i2c_read(char*, unsigned int)+0xde>
 80121d2:	4630      	mov	r0, r6
 80121d4:	f000 ffb5 	bl	8013142 <i2c_data_receive>
 80121d8:	f640 77ff 	movw	r7, #4095	; 0xfff
 80121dc:	f808 0b01 	strb.w	r0, [r8], #1
 80121e0:	3c01      	subs	r4, #1
 80121e2:	3f01      	subs	r7, #1
 80121e4:	2f00      	cmp	r7, #0
 80121e6:	dcdb      	bgt.n	80121a0 <gd32_i2c_read(char*, unsigned int)+0x9c>
 80121e8:	e79c      	b.n	8012124 <gd32_i2c_read(char*, unsigned int)+0x20>
 80121ea:	2c02      	cmp	r4, #2
 80121ec:	d1eb      	bne.n	80121c6 <gd32_i2c_read(char*, unsigned int)+0xc2>
 80121ee:	f640 79ff 	movw	r9, #4095	; 0xfff
 80121f2:	f240 5102 	movw	r1, #1282	; 0x502
 80121f6:	4630      	mov	r0, r6
 80121f8:	f000 ffa6 	bl	8013148 <i2c_flag_get>
 80121fc:	b918      	cbnz	r0, 8012206 <gd32_i2c_read(char*, unsigned int)+0x102>
 80121fe:	f1b9 0901 	subs.w	r9, r9, #1
 8012202:	d1f6      	bne.n	80121f2 <gd32_i2c_read(char*, unsigned int)+0xee>
 8012204:	e78e      	b.n	8012124 <gd32_i2c_read(char*, unsigned int)+0x20>
 8012206:	4630      	mov	r0, r6
 8012208:	f000 ff94 	bl	8013134 <i2c_stop_on_bus>
 801220c:	e7db      	b.n	80121c6 <gd32_i2c_read(char*, unsigned int)+0xc2>
 801220e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8012212:	4a0b      	ldr	r2, [pc, #44]	; (8012240 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8012214:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8012218:	0589      	lsls	r1, r1, #22
 801221a:	d502      	bpl.n	8012222 <gd32_i2c_read(char*, unsigned int)+0x11e>
 801221c:	3b01      	subs	r3, #1
 801221e:	d1f9      	bne.n	8012214 <gd32_i2c_read(char*, unsigned int)+0x110>
 8012220:	e782      	b.n	8012128 <gd32_i2c_read(char*, unsigned int)+0x24>
 8012222:	2101      	movs	r1, #1
 8012224:	4804      	ldr	r0, [pc, #16]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012226:	f000 ff61 	bl	80130ec <i2c_ack_config>
 801222a:	2101      	movs	r1, #1
 801222c:	4802      	ldr	r0, [pc, #8]	; (8012238 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801222e:	f000 ff66 	bl	80130fe <i2c_ackpos_config>
 8012232:	4628      	mov	r0, r5
 8012234:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012238:	40005400 	andmi	r5, r0, r0, lsl #8
 801223c:	200097ac 	andcs	r9, r0, ip, lsr #15
 8012240:	40005000 	andmi	r5, r0, r0

08012244 <gd32_spi_dma_begin()>:
 8012244:	b530      	push	{r4, r5, lr}
 8012246:	f240 6002 	movw	r0, #1538	; 0x602
 801224a:	b089      	sub	sp, #36	; 0x24
 801224c:	f7ff fad6 	bl	80117fc <rcu_periph_clock_enable>
 8012250:	f240 6003 	movw	r0, #1539	; 0x603
 8012254:	f7ff fad2 	bl	80117fc <rcu_periph_clock_enable>
 8012258:	f240 700f 	movw	r0, #1807	; 0x70f
 801225c:	f7ff face 	bl	80117fc <rcu_periph_clock_enable>
 8012260:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012264:	f7ff faca 	bl	80117fc <rcu_periph_clock_enable>
 8012268:	2338      	movs	r3, #56	; 0x38
 801226a:	2203      	movs	r2, #3
 801226c:	2118      	movs	r1, #24
 801226e:	4829      	ldr	r0, [pc, #164]	; (8012314 <gd32_spi_dma_begin()+0xd0>)
 8012270:	f7ff fa2c 	bl	80116cc <gpio_init>
 8012274:	4c28      	ldr	r4, [pc, #160]	; (8012318 <gd32_spi_dma_begin()+0xd4>)
 8012276:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801227a:	2203      	movs	r2, #3
 801227c:	2118      	movs	r1, #24
 801227e:	4827      	ldr	r0, [pc, #156]	; (801231c <gd32_spi_dma_begin()+0xd8>)
 8012280:	f7ff fa24 	bl	80116cc <gpio_init>
 8012284:	2101      	movs	r1, #1
 8012286:	4826      	ldr	r0, [pc, #152]	; (8012320 <gd32_spi_dma_begin()+0xdc>)
 8012288:	f7ff fa74 	bl	8011774 <gpio_pin_remap_config>
 801228c:	4620      	mov	r0, r4
 801228e:	f000 ffe2 	bl	8013256 <i2s_disable>
 8012292:	2300      	movs	r3, #0
 8012294:	4620      	mov	r0, r4
 8012296:	461a      	mov	r2, r3
 8012298:	4922      	ldr	r1, [pc, #136]	; (8012324 <gd32_spi_dma_begin()+0xe0>)
 801229a:	f000 ff7f 	bl	801319c <i2s_psc_config>
 801229e:	2300      	movs	r3, #0
 80122a0:	2210      	movs	r2, #16
 80122a2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80122a6:	4620      	mov	r0, r4
 80122a8:	f000 ff69 	bl	801317e <i2s_init>
 80122ac:	4620      	mov	r0, r4
 80122ae:	f000 ffcd 	bl	801324c <i2s_enable>
 80122b2:	f504 34e4 	add.w	r4, r4, #116736	; 0x1c800
 80122b6:	f240 5001 	movw	r0, #1281	; 0x501
 80122ba:	f7ff fa9f 	bl	80117fc <rcu_periph_clock_enable>
 80122be:	2101      	movs	r1, #1
 80122c0:	4620      	mov	r0, r4
 80122c2:	f000 fa77 	bl	80127b4 <dma_deinit>
 80122c6:	a801      	add	r0, sp, #4
 80122c8:	f000 fa90 	bl	80127ec <dma_struct_para_init>
 80122cc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80122d0:	2501      	movs	r5, #1
 80122d2:	9304      	str	r3, [sp, #16]
 80122d4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80122d8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80122dc:	4912      	ldr	r1, [pc, #72]	; (8012328 <gd32_spi_dma_begin()+0xe4>)
 80122de:	4620      	mov	r0, r4
 80122e0:	e9cd 1301 	strd	r1, r3, [sp, #4]
 80122e4:	9206      	str	r2, [sp, #24]
 80122e6:	4629      	mov	r1, r5
 80122e8:	aa01      	add	r2, sp, #4
 80122ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80122ee:	f88d 501e 	strb.w	r5, [sp, #30]
 80122f2:	f000 fa85 	bl	8012800 <dma_init>
 80122f6:	4629      	mov	r1, r5
 80122f8:	4620      	mov	r0, r4
 80122fa:	f000 fabb 	bl	8012874 <dma_circulation_disable>
 80122fe:	4629      	mov	r1, r5
 8012300:	4620      	mov	r0, r4
 8012302:	f000 fac7 	bl	8012894 <dma_memory_to_memory_disable>
 8012306:	2200      	movs	r2, #0
 8012308:	4b08      	ldr	r3, [pc, #32]	; (801232c <gd32_spi_dma_begin()+0xe8>)
 801230a:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
 801230e:	b009      	add	sp, #36	; 0x24
 8012310:	bd30      	pop	{r4, r5, pc}
 8012312:	bf00      	nop
 8012314:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012318:	40003c00 	andmi	r3, r0, r0, lsl #24
 801231c:	40010800 	andmi	r0, r1, r0, lsl #16
 8012320:	00300400 	eorseq	r0, r0, r0, lsl #8
 8012324:	00030d40 	andeq	r0, r3, r0, asr #26
 8012328:	40003c0c 	andmi	r3, r0, ip, lsl #24
 801232c:	40020000 	andmi	r0, r2, r0

08012330 <gd32_spi_dma_set_speed_hz(unsigned int)>:
 8012330:	b538      	push	{r3, r4, r5, lr}
 8012332:	4c08      	ldr	r4, [pc, #32]	; (8012354 <gd32_spi_dma_set_speed_hz(unsigned int)+0x24>)
 8012334:	4605      	mov	r5, r0
 8012336:	4620      	mov	r0, r4
 8012338:	f000 ff8d 	bl	8013256 <i2s_disable>
 801233c:	2300      	movs	r3, #0
 801233e:	4620      	mov	r0, r4
 8012340:	461a      	mov	r2, r3
 8012342:	0969      	lsrs	r1, r5, #5
 8012344:	f000 ff2a 	bl	801319c <i2s_psc_config>
 8012348:	4620      	mov	r0, r4
 801234a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801234e:	f000 bf7d 	b.w	801324c <i2s_enable>
 8012352:	bf00      	nop
 8012354:	40003c00 	andmi	r3, r0, r0, lsl #24

08012358 <gd32_spi_dma_tx_prepare(unsigned int*)>:
 8012358:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801235c:	6003      	str	r3, [r0, #0]
 801235e:	4801      	ldr	r0, [pc, #4]	; (8012364 <gd32_spi_dma_tx_prepare(unsigned int*)+0xc>)
 8012360:	4770      	bx	lr
 8012362:	bf00      	nop
 8012364:	200097b0 			; <UNDEFINED> instruction: 0x200097b0

08012368 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)>:
 8012368:	4a0a      	ldr	r2, [pc, #40]	; (8012394 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x2c>)
 801236a:	3101      	adds	r1, #1
 801236c:	f8d2 341c 	ldr.w	r3, [r2, #1052]	; 0x41c
 8012370:	f3c1 014f 	ubfx	r1, r1, #1, #16
 8012374:	f023 0301 	bic.w	r3, r3, #1
 8012378:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 801237c:	f043 0301 	orr.w	r3, r3, #1
 8012380:	f8c2 0428 	str.w	r0, [r2, #1064]	; 0x428
 8012384:	f8c2 1420 	str.w	r1, [r2, #1056]	; 0x420
 8012388:	4803      	ldr	r0, [pc, #12]	; (8012398 <gd32_spi_dma_tx_start(unsigned char const*, unsigned int)+0x30>)
 801238a:	2100      	movs	r1, #0
 801238c:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
 8012390:	f000 bf66 	b.w	8013260 <spi_dma_enable>
 8012394:	40020000 	andmi	r0, r2, r0
 8012398:	40003c00 	andmi	r3, r0, r0, lsl #24

0801239c <gd32_spi_dma_tx_is_active()>:
 801239c:	4b03      	ldr	r3, [pc, #12]	; (80123ac <gd32_spi_dma_tx_is_active()+0x10>)
 801239e:	f8d3 0420 	ldr.w	r0, [r3, #1056]	; 0x420
 80123a2:	3800      	subs	r0, #0
 80123a4:	bf18      	it	ne
 80123a6:	2001      	movne	r0, #1
 80123a8:	4770      	bx	lr
 80123aa:	bf00      	nop
 80123ac:	40020000 	andmi	r0, r2, r0

080123b0 <gd32_uart_begin>:
 80123b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123b2:	461d      	mov	r5, r3
 80123b4:	4b63      	ldr	r3, [pc, #396]	; (8012544 <gd32_uart_begin+0x194>)
 80123b6:	4604      	mov	r4, r0
 80123b8:	4298      	cmp	r0, r3
 80123ba:	460f      	mov	r7, r1
 80123bc:	4616      	mov	r6, r2
 80123be:	d03b      	beq.n	8012438 <gd32_uart_begin+0x88>
 80123c0:	d80a      	bhi.n	80123d8 <gd32_uart_begin+0x28>
 80123c2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80123c6:	4298      	cmp	r0, r3
 80123c8:	d02f      	beq.n	801242a <gd32_uart_begin+0x7a>
 80123ca:	f240 7012 	movw	r0, #1810	; 0x712
 80123ce:	f7ff fa15 	bl	80117fc <rcu_periph_clock_enable>
 80123d2:	f240 6004 	movw	r0, #1540	; 0x604
 80123d6:	e008      	b.n	80123ea <gd32_uart_begin+0x3a>
 80123d8:	4b5b      	ldr	r3, [pc, #364]	; (8012548 <gd32_uart_begin+0x198>)
 80123da:	4298      	cmp	r0, r3
 80123dc:	d02f      	beq.n	801243e <gd32_uart_begin+0x8e>
 80123de:	f240 600e 	movw	r0, #1550	; 0x60e
 80123e2:	f7ff fa0b 	bl	80117fc <rcu_periph_clock_enable>
 80123e6:	f240 6003 	movw	r0, #1539	; 0x603
 80123ea:	f7ff fa07 	bl	80117fc <rcu_periph_clock_enable>
 80123ee:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80123f2:	f7ff fa03 	bl	80117fc <rcu_periph_clock_enable>
 80123f6:	4b53      	ldr	r3, [pc, #332]	; (8012544 <gd32_uart_begin+0x194>)
 80123f8:	429c      	cmp	r4, r3
 80123fa:	f000 8085 	beq.w	8012508 <gd32_uart_begin+0x158>
 80123fe:	d829      	bhi.n	8012454 <gd32_uart_begin+0xa4>
 8012400:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8012404:	429c      	cmp	r4, r3
 8012406:	d072      	beq.n	80124ee <gd32_uart_begin+0x13e>
 8012408:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801240c:	2203      	movs	r2, #3
 801240e:	2118      	movs	r1, #24
 8012410:	484e      	ldr	r0, [pc, #312]	; (801254c <gd32_uart_begin+0x19c>)
 8012412:	f7ff f95b 	bl	80116cc <gpio_init>
 8012416:	2104      	movs	r1, #4
 8012418:	484c      	ldr	r0, [pc, #304]	; (801254c <gd32_uart_begin+0x19c>)
 801241a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801241e:	2203      	movs	r2, #3
 8012420:	f7ff f954 	bl	80116cc <gpio_init>
 8012424:	2101      	movs	r1, #1
 8012426:	484a      	ldr	r0, [pc, #296]	; (8012550 <gd32_uart_begin+0x1a0>)
 8012428:	e025      	b.n	8012476 <gd32_uart_begin+0xc6>
 801242a:	f240 7011 	movw	r0, #1809	; 0x711
 801242e:	f7ff f9e5 	bl	80117fc <rcu_periph_clock_enable>
 8012432:	f240 6002 	movw	r0, #1538	; 0x602
 8012436:	e7d8      	b.n	80123ea <gd32_uart_begin+0x3a>
 8012438:	f240 7013 	movw	r0, #1811	; 0x713
 801243c:	e7c7      	b.n	80123ce <gd32_uart_begin+0x1e>
 801243e:	f240 7014 	movw	r0, #1812	; 0x714
 8012442:	f7ff f9db 	bl	80117fc <rcu_periph_clock_enable>
 8012446:	f240 6004 	movw	r0, #1540	; 0x604
 801244a:	f7ff f9d7 	bl	80117fc <rcu_periph_clock_enable>
 801244e:	f240 6005 	movw	r0, #1541	; 0x605
 8012452:	e7ca      	b.n	80123ea <gd32_uart_begin+0x3a>
 8012454:	4b3c      	ldr	r3, [pc, #240]	; (8012548 <gd32_uart_begin+0x198>)
 8012456:	429c      	cmp	r4, r3
 8012458:	d063      	beq.n	8012522 <gd32_uart_begin+0x172>
 801245a:	2340      	movs	r3, #64	; 0x40
 801245c:	2203      	movs	r2, #3
 801245e:	2118      	movs	r1, #24
 8012460:	483c      	ldr	r0, [pc, #240]	; (8012554 <gd32_uart_begin+0x1a4>)
 8012462:	f7ff f933 	bl	80116cc <gpio_init>
 8012466:	2104      	movs	r1, #4
 8012468:	483a      	ldr	r0, [pc, #232]	; (8012554 <gd32_uart_begin+0x1a4>)
 801246a:	2380      	movs	r3, #128	; 0x80
 801246c:	2203      	movs	r2, #3
 801246e:	f7ff f92d 	bl	80116cc <gpio_init>
 8012472:	2101      	movs	r1, #1
 8012474:	2004      	movs	r0, #4
 8012476:	f7ff f97d 	bl	8011774 <gpio_pin_remap_config>
 801247a:	4620      	mov	r0, r4
 801247c:	f7ff fbda 	bl	8011c34 <usart_deinit>
 8012480:	68e3      	ldr	r3, [r4, #12]
 8012482:	4639      	mov	r1, r7
 8012484:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8012488:	60e3      	str	r3, [r4, #12]
 801248a:	4620      	mov	r0, r4
 801248c:	f7ff fc12 	bl	8011cb4 <usart_baudrate_set>
 8012490:	2e09      	cmp	r6, #9
 8012492:	bf0c      	ite	eq
 8012494:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8012498:	2100      	movne	r1, #0
 801249a:	4620      	mov	r0, r4
 801249c:	f7ff fc3a 	bl	8011d14 <usart_word_length_set>
 80124a0:	9b06      	ldr	r3, [sp, #24]
 80124a2:	4620      	mov	r0, r4
 80124a4:	2b02      	cmp	r3, #2
 80124a6:	bf0c      	ite	eq
 80124a8:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 80124ac:	2100      	movne	r1, #0
 80124ae:	f7ff fc39 	bl	8011d24 <usart_stop_bit_set>
 80124b2:	2d01      	cmp	r5, #1
 80124b4:	d041      	beq.n	801253a <gd32_uart_begin+0x18a>
 80124b6:	2d02      	cmp	r5, #2
 80124b8:	d142      	bne.n	8012540 <gd32_uart_begin+0x190>
 80124ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80124be:	4620      	mov	r0, r4
 80124c0:	f7ff fc20 	bl	8011d04 <usart_parity_config>
 80124c4:	2100      	movs	r1, #0
 80124c6:	4620      	mov	r0, r4
 80124c8:	f7ff fc40 	bl	8011d4c <usart_hardware_flow_rts_config>
 80124cc:	2100      	movs	r1, #0
 80124ce:	4620      	mov	r0, r4
 80124d0:	f7ff fc42 	bl	8011d58 <usart_hardware_flow_cts_config>
 80124d4:	2104      	movs	r1, #4
 80124d6:	4620      	mov	r0, r4
 80124d8:	f7ff fc32 	bl	8011d40 <usart_receive_config>
 80124dc:	2108      	movs	r1, #8
 80124de:	4620      	mov	r0, r4
 80124e0:	f7ff fc28 	bl	8011d34 <usart_transmit_config>
 80124e4:	68e3      	ldr	r3, [r4, #12]
 80124e6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80124ea:	60e3      	str	r3, [r4, #12]
 80124ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80124ee:	2304      	movs	r3, #4
 80124f0:	2203      	movs	r2, #3
 80124f2:	2118      	movs	r1, #24
 80124f4:	4818      	ldr	r0, [pc, #96]	; (8012558 <gd32_uart_begin+0x1a8>)
 80124f6:	f7ff f8e9 	bl	80116cc <gpio_init>
 80124fa:	2308      	movs	r3, #8
 80124fc:	2203      	movs	r2, #3
 80124fe:	2104      	movs	r1, #4
 8012500:	4815      	ldr	r0, [pc, #84]	; (8012558 <gd32_uart_begin+0x1a8>)
 8012502:	f7ff f8e3 	bl	80116cc <gpio_init>
 8012506:	e7b8      	b.n	801247a <gd32_uart_begin+0xca>
 8012508:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801250c:	2203      	movs	r2, #3
 801250e:	2118      	movs	r1, #24
 8012510:	480e      	ldr	r0, [pc, #56]	; (801254c <gd32_uart_begin+0x19c>)
 8012512:	f7ff f8db 	bl	80116cc <gpio_init>
 8012516:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801251a:	2203      	movs	r2, #3
 801251c:	2104      	movs	r1, #4
 801251e:	480b      	ldr	r0, [pc, #44]	; (801254c <gd32_uart_begin+0x19c>)
 8012520:	e7ef      	b.n	8012502 <gd32_uart_begin+0x152>
 8012522:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8012526:	2203      	movs	r2, #3
 8012528:	2118      	movs	r1, #24
 801252a:	4808      	ldr	r0, [pc, #32]	; (801254c <gd32_uart_begin+0x19c>)
 801252c:	f7ff f8ce 	bl	80116cc <gpio_init>
 8012530:	2304      	movs	r3, #4
 8012532:	2203      	movs	r2, #3
 8012534:	4619      	mov	r1, r3
 8012536:	4809      	ldr	r0, [pc, #36]	; (801255c <gd32_uart_begin+0x1ac>)
 8012538:	e7e3      	b.n	8012502 <gd32_uart_begin+0x152>
 801253a:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 801253e:	e7be      	b.n	80124be <gd32_uart_begin+0x10e>
 8012540:	2100      	movs	r1, #0
 8012542:	e7bc      	b.n	80124be <gd32_uart_begin+0x10e>
 8012544:	40004c00 	andmi	r4, r0, r0, lsl #24
 8012548:	40005000 	andmi	r5, r0, r0
 801254c:	40011000 	andmi	r1, r1, r0
 8012550:	00140010 	andseq	r0, r4, r0, lsl r0
 8012554:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012558:	40010800 	andmi	r0, r1, r0, lsl #16
 801255c:	40011400 	andmi	r1, r1, r0, lsl #8

08012560 <micros_init()>:
 8012560:	4770      	bx	lr
	...

08012564 <udelay_init()>:
 8012564:	4a07      	ldr	r2, [pc, #28]	; (8012584 <udelay_init()+0x20>)
 8012566:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801256a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801256e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8012572:	2200      	movs	r2, #0
 8012574:	4b04      	ldr	r3, [pc, #16]	; (8012588 <udelay_init()+0x24>)
 8012576:	605a      	str	r2, [r3, #4]
 8012578:	681a      	ldr	r2, [r3, #0]
 801257a:	f042 0201 	orr.w	r2, r2, #1
 801257e:	601a      	str	r2, [r3, #0]
 8012580:	4770      	bx	lr
 8012582:	bf00      	nop
 8012584:	e000ed00 	and	lr, r0, r0, lsl #26
 8012588:	e0001000 	and	r1, r0, r0

0801258c <udelay(unsigned int, unsigned int)>:
 801258c:	236c      	movs	r3, #108	; 0x6c
 801258e:	b510      	push	{r4, lr}
 8012590:	4358      	muls	r0, r3
 8012592:	b909      	cbnz	r1, 8012598 <udelay(unsigned int, unsigned int)+0xc>
 8012594:	4b08      	ldr	r3, [pc, #32]	; (80125b8 <udelay(unsigned int, unsigned int)+0x2c>)
 8012596:	6859      	ldr	r1, [r3, #4]
 8012598:	2300      	movs	r3, #0
 801259a:	4c07      	ldr	r4, [pc, #28]	; (80125b8 <udelay(unsigned int, unsigned int)+0x2c>)
 801259c:	6862      	ldr	r2, [r4, #4]
 801259e:	4291      	cmp	r1, r2
 80125a0:	d0fc      	beq.n	801259c <udelay(unsigned int, unsigned int)+0x10>
 80125a2:	bf28      	it	cs
 80125a4:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 80125a8:	1a5b      	subs	r3, r3, r1
 80125aa:	4413      	add	r3, r2
 80125ac:	4283      	cmp	r3, r0
 80125ae:	d300      	bcc.n	80125b2 <udelay(unsigned int, unsigned int)+0x26>
 80125b0:	bd10      	pop	{r4, pc}
 80125b2:	4611      	mov	r1, r2
 80125b4:	e7f2      	b.n	801259c <udelay(unsigned int, unsigned int)+0x10>
 80125b6:	bf00      	nop
 80125b8:	e0001000 	and	r1, r0, r0

080125bc <mac_address_get>:
 80125bc:	2102      	movs	r1, #2
 80125be:	4a07      	ldr	r2, [pc, #28]	; (80125dc <mac_address_get+0x20>)
 80125c0:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80125c4:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80125c8:	7001      	strb	r1, [r0, #0]
 80125ca:	7042      	strb	r2, [r0, #1]
 80125cc:	0e1a      	lsrs	r2, r3, #24
 80125ce:	7082      	strb	r2, [r0, #2]
 80125d0:	0c1a      	lsrs	r2, r3, #16
 80125d2:	70c2      	strb	r2, [r0, #3]
 80125d4:	0a1a      	lsrs	r2, r3, #8
 80125d6:	7102      	strb	r2, [r0, #4]
 80125d8:	7143      	strb	r3, [r0, #5]
 80125da:	4770      	bx	lr
 80125dc:	1ffff000 	svcne	0x00fff000

080125e0 <adc_mode_config>:
 80125e0:	4b06      	ldr	r3, [pc, #24]	; (80125fc <adc_mode_config+0x1c>)
 80125e2:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 80125e6:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 80125ea:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 80125ee:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80125f2:	4302      	orrs	r2, r0
 80125f4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80125f8:	4770      	bx	lr
 80125fa:	bf00      	nop
 80125fc:	40012000 	andmi	r2, r1, r0

08012600 <adc_special_function_config>:
 8012600:	b510      	push	{r4, lr}
 8012602:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8012606:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801260a:	f001 0102 	and.w	r1, r1, #2
 801260e:	b17a      	cbz	r2, 8012630 <adc_special_function_config+0x30>
 8012610:	b11b      	cbz	r3, 801261a <adc_special_function_config+0x1a>
 8012612:	6843      	ldr	r3, [r0, #4]
 8012614:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012618:	6043      	str	r3, [r0, #4]
 801261a:	b11c      	cbz	r4, 8012624 <adc_special_function_config+0x24>
 801261c:	6843      	ldr	r3, [r0, #4]
 801261e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8012622:	6043      	str	r3, [r0, #4]
 8012624:	b119      	cbz	r1, 801262e <adc_special_function_config+0x2e>
 8012626:	6883      	ldr	r3, [r0, #8]
 8012628:	f043 0302 	orr.w	r3, r3, #2
 801262c:	6083      	str	r3, [r0, #8]
 801262e:	bd10      	pop	{r4, pc}
 8012630:	b11b      	cbz	r3, 801263a <adc_special_function_config+0x3a>
 8012632:	6843      	ldr	r3, [r0, #4]
 8012634:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8012638:	6043      	str	r3, [r0, #4]
 801263a:	b11c      	cbz	r4, 8012644 <adc_special_function_config+0x44>
 801263c:	6843      	ldr	r3, [r0, #4]
 801263e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8012642:	6043      	str	r3, [r0, #4]
 8012644:	2900      	cmp	r1, #0
 8012646:	d0f2      	beq.n	801262e <adc_special_function_config+0x2e>
 8012648:	6883      	ldr	r3, [r0, #8]
 801264a:	f023 0302 	bic.w	r3, r3, #2
 801264e:	e7ed      	b.n	801262c <adc_special_function_config+0x2c>

08012650 <adc_data_alignment_config>:
 8012650:	6883      	ldr	r3, [r0, #8]
 8012652:	b119      	cbz	r1, 801265c <adc_data_alignment_config+0xc>
 8012654:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8012658:	6083      	str	r3, [r0, #8]
 801265a:	4770      	bx	lr
 801265c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8012660:	e7fa      	b.n	8012658 <adc_data_alignment_config+0x8>

08012662 <adc_enable>:
 8012662:	6883      	ldr	r3, [r0, #8]
 8012664:	07db      	lsls	r3, r3, #31
 8012666:	bf5e      	ittt	pl
 8012668:	6883      	ldrpl	r3, [r0, #8]
 801266a:	f043 0301 	orrpl.w	r3, r3, #1
 801266e:	6083      	strpl	r3, [r0, #8]
 8012670:	4770      	bx	lr

08012672 <adc_calibration_enable>:
 8012672:	6883      	ldr	r3, [r0, #8]
 8012674:	f100 0208 	add.w	r2, r0, #8
 8012678:	f043 0308 	orr.w	r3, r3, #8
 801267c:	6083      	str	r3, [r0, #8]
 801267e:	6813      	ldr	r3, [r2, #0]
 8012680:	0719      	lsls	r1, r3, #28
 8012682:	d4fc      	bmi.n	801267e <adc_calibration_enable+0xc>
 8012684:	6883      	ldr	r3, [r0, #8]
 8012686:	f043 0304 	orr.w	r3, r3, #4
 801268a:	6083      	str	r3, [r0, #8]
 801268c:	6813      	ldr	r3, [r2, #0]
 801268e:	075b      	lsls	r3, r3, #29
 8012690:	d4fc      	bmi.n	801268c <adc_calibration_enable+0x1a>
 8012692:	4770      	bx	lr

08012694 <adc_tempsensor_vrefint_enable>:
 8012694:	4a03      	ldr	r2, [pc, #12]	; (80126a4 <adc_tempsensor_vrefint_enable+0x10>)
 8012696:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801269a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801269e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80126a2:	4770      	bx	lr
 80126a4:	40012000 	andmi	r2, r1, r0

080126a8 <adc_channel_length_config>:
 80126a8:	2901      	cmp	r1, #1
 80126aa:	d002      	beq.n	80126b2 <adc_channel_length_config+0xa>
 80126ac:	2902      	cmp	r1, #2
 80126ae:	d00c      	beq.n	80126ca <adc_channel_length_config+0x22>
 80126b0:	4770      	bx	lr
 80126b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80126b4:	3a01      	subs	r2, #1
 80126b6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80126ba:	62c3      	str	r3, [r0, #44]	; 0x2c
 80126bc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80126be:	0512      	lsls	r2, r2, #20
 80126c0:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80126c4:	431a      	orrs	r2, r3
 80126c6:	62c2      	str	r2, [r0, #44]	; 0x2c
 80126c8:	4770      	bx	lr
 80126ca:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80126cc:	3a01      	subs	r2, #1
 80126ce:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80126d2:	6383      	str	r3, [r0, #56]	; 0x38
 80126d4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80126d6:	0512      	lsls	r2, r2, #20
 80126d8:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80126dc:	431a      	orrs	r2, r3
 80126de:	6382      	str	r2, [r0, #56]	; 0x38
 80126e0:	4770      	bx	lr

080126e2 <adc_inserted_channel_config>:
 80126e2:	b530      	push	{r4, r5, lr}
 80126e4:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80126e6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80126e8:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80126ec:	1a61      	subs	r1, r4, r1
 80126ee:	f06f 0404 	mvn.w	r4, #4
 80126f2:	4361      	muls	r1, r4
 80126f4:	241f      	movs	r4, #31
 80126f6:	310f      	adds	r1, #15
 80126f8:	408c      	lsls	r4, r1
 80126fa:	ea25 0504 	bic.w	r5, r5, r4
 80126fe:	fa02 f101 	lsl.w	r1, r2, r1
 8012702:	4329      	orrs	r1, r5
 8012704:	2a09      	cmp	r2, #9
 8012706:	6381      	str	r1, [r0, #56]	; 0x38
 8012708:	d80b      	bhi.n	8012722 <adc_inserted_channel_config+0x40>
 801270a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801270e:	2207      	movs	r2, #7
 8012710:	6904      	ldr	r4, [r0, #16]
 8012712:	408a      	lsls	r2, r1
 8012714:	ea24 0402 	bic.w	r4, r4, r2
 8012718:	fa03 f201 	lsl.w	r2, r3, r1
 801271c:	4322      	orrs	r2, r4
 801271e:	6102      	str	r2, [r0, #16]
 8012720:	bd30      	pop	{r4, r5, pc}
 8012722:	2a11      	cmp	r2, #17
 8012724:	d8fc      	bhi.n	8012720 <adc_inserted_channel_config+0x3e>
 8012726:	2407      	movs	r4, #7
 8012728:	3a0a      	subs	r2, #10
 801272a:	68c1      	ldr	r1, [r0, #12]
 801272c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012730:	4094      	lsls	r4, r2
 8012732:	ea21 0104 	bic.w	r1, r1, r4
 8012736:	fa03 f202 	lsl.w	r2, r3, r2
 801273a:	430a      	orrs	r2, r1
 801273c:	60c2      	str	r2, [r0, #12]
 801273e:	e7ef      	b.n	8012720 <adc_inserted_channel_config+0x3e>

08012740 <adc_external_trigger_source_config>:
 8012740:	2901      	cmp	r1, #1
 8012742:	d002      	beq.n	801274a <adc_external_trigger_source_config+0xa>
 8012744:	2902      	cmp	r1, #2
 8012746:	d008      	beq.n	801275a <adc_external_trigger_source_config+0x1a>
 8012748:	4770      	bx	lr
 801274a:	6883      	ldr	r3, [r0, #8]
 801274c:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8012750:	6083      	str	r3, [r0, #8]
 8012752:	6883      	ldr	r3, [r0, #8]
 8012754:	431a      	orrs	r2, r3
 8012756:	6082      	str	r2, [r0, #8]
 8012758:	4770      	bx	lr
 801275a:	6883      	ldr	r3, [r0, #8]
 801275c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8012760:	e7f6      	b.n	8012750 <adc_external_trigger_source_config+0x10>

08012762 <adc_external_trigger_config>:
 8012762:	f001 0301 	and.w	r3, r1, #1
 8012766:	f001 0102 	and.w	r1, r1, #2
 801276a:	b152      	cbz	r2, 8012782 <adc_external_trigger_config+0x20>
 801276c:	b11b      	cbz	r3, 8012776 <adc_external_trigger_config+0x14>
 801276e:	6883      	ldr	r3, [r0, #8]
 8012770:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8012774:	6083      	str	r3, [r0, #8]
 8012776:	b119      	cbz	r1, 8012780 <adc_external_trigger_config+0x1e>
 8012778:	6883      	ldr	r3, [r0, #8]
 801277a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801277e:	6083      	str	r3, [r0, #8]
 8012780:	4770      	bx	lr
 8012782:	b11b      	cbz	r3, 801278c <adc_external_trigger_config+0x2a>
 8012784:	6883      	ldr	r3, [r0, #8]
 8012786:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 801278a:	6083      	str	r3, [r0, #8]
 801278c:	2900      	cmp	r1, #0
 801278e:	d0f7      	beq.n	8012780 <adc_external_trigger_config+0x1e>
 8012790:	6883      	ldr	r3, [r0, #8]
 8012792:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8012796:	e7f2      	b.n	801277e <adc_external_trigger_config+0x1c>

08012798 <adc_software_trigger_enable>:
 8012798:	07ca      	lsls	r2, r1, #31
 801279a:	bf42      	ittt	mi
 801279c:	6883      	ldrmi	r3, [r0, #8]
 801279e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80127a2:	6083      	strmi	r3, [r0, #8]
 80127a4:	078b      	lsls	r3, r1, #30
 80127a6:	bf42      	ittt	mi
 80127a8:	6883      	ldrmi	r3, [r0, #8]
 80127aa:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80127ae:	6083      	strmi	r3, [r0, #8]
 80127b0:	4770      	bx	lr
	...

080127b4 <dma_deinit>:
 80127b4:	4b0c      	ldr	r3, [pc, #48]	; (80127e8 <dma_deinit+0x34>)
 80127b6:	4298      	cmp	r0, r3
 80127b8:	d102      	bne.n	80127c0 <dma_deinit+0xc>
 80127ba:	2904      	cmp	r1, #4
 80127bc:	d900      	bls.n	80127c0 <dma_deinit+0xc>
 80127be:	e7fe      	b.n	80127be <dma_deinit+0xa>
 80127c0:	2314      	movs	r3, #20
 80127c2:	fb03 0301 	mla	r3, r3, r1, r0
 80127c6:	689a      	ldr	r2, [r3, #8]
 80127c8:	0089      	lsls	r1, r1, #2
 80127ca:	f022 0201 	bic.w	r2, r2, #1
 80127ce:	609a      	str	r2, [r3, #8]
 80127d0:	2200      	movs	r2, #0
 80127d2:	609a      	str	r2, [r3, #8]
 80127d4:	60da      	str	r2, [r3, #12]
 80127d6:	611a      	str	r2, [r3, #16]
 80127d8:	615a      	str	r2, [r3, #20]
 80127da:	230f      	movs	r3, #15
 80127dc:	6842      	ldr	r2, [r0, #4]
 80127de:	fa03 f101 	lsl.w	r1, r3, r1
 80127e2:	4311      	orrs	r1, r2
 80127e4:	6041      	str	r1, [r0, #4]
 80127e6:	4770      	bx	lr
 80127e8:	40020400 	andmi	r0, r2, r0, lsl #8

080127ec <dma_struct_para_init>:
 80127ec:	2300      	movs	r3, #0
 80127ee:	e9c0 3300 	strd	r3, r3, [r0]
 80127f2:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80127f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80127fa:	8303      	strh	r3, [r0, #24]
 80127fc:	7683      	strb	r3, [r0, #26]
 80127fe:	4770      	bx	lr

08012800 <dma_init>:
 8012800:	4b1b      	ldr	r3, [pc, #108]	; (8012870 <dma_init+0x70>)
 8012802:	b510      	push	{r4, lr}
 8012804:	4298      	cmp	r0, r3
 8012806:	d102      	bne.n	801280e <dma_init+0xe>
 8012808:	2904      	cmp	r1, #4
 801280a:	d900      	bls.n	801280e <dma_init+0xe>
 801280c:	e7fe      	b.n	801280c <dma_init+0xc>
 801280e:	2314      	movs	r3, #20
 8012810:	fb03 0101 	mla	r1, r3, r1, r0
 8012814:	6813      	ldr	r3, [r2, #0]
 8012816:	610b      	str	r3, [r1, #16]
 8012818:	6893      	ldr	r3, [r2, #8]
 801281a:	614b      	str	r3, [r1, #20]
 801281c:	8a13      	ldrh	r3, [r2, #16]
 801281e:	60cb      	str	r3, [r1, #12]
 8012820:	68d4      	ldr	r4, [r2, #12]
 8012822:	6853      	ldr	r3, [r2, #4]
 8012824:	6888      	ldr	r0, [r1, #8]
 8012826:	4323      	orrs	r3, r4
 8012828:	6954      	ldr	r4, [r2, #20]
 801282a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 801282e:	4323      	orrs	r3, r4
 8012830:	4303      	orrs	r3, r0
 8012832:	608b      	str	r3, [r1, #8]
 8012834:	7e13      	ldrb	r3, [r2, #24]
 8012836:	2b01      	cmp	r3, #1
 8012838:	688b      	ldr	r3, [r1, #8]
 801283a:	bf0c      	ite	eq
 801283c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012840:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012844:	608b      	str	r3, [r1, #8]
 8012846:	7e53      	ldrb	r3, [r2, #25]
 8012848:	2b01      	cmp	r3, #1
 801284a:	688b      	ldr	r3, [r1, #8]
 801284c:	bf0c      	ite	eq
 801284e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012852:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012856:	608b      	str	r3, [r1, #8]
 8012858:	7e93      	ldrb	r3, [r2, #26]
 801285a:	b923      	cbnz	r3, 8012866 <dma_init+0x66>
 801285c:	688b      	ldr	r3, [r1, #8]
 801285e:	f023 0310 	bic.w	r3, r3, #16
 8012862:	608b      	str	r3, [r1, #8]
 8012864:	bd10      	pop	{r4, pc}
 8012866:	688b      	ldr	r3, [r1, #8]
 8012868:	f043 0310 	orr.w	r3, r3, #16
 801286c:	e7f9      	b.n	8012862 <dma_init+0x62>
 801286e:	bf00      	nop
 8012870:	40020400 	andmi	r0, r2, r0, lsl #8

08012874 <dma_circulation_disable>:
 8012874:	4b06      	ldr	r3, [pc, #24]	; (8012890 <dma_circulation_disable+0x1c>)
 8012876:	4298      	cmp	r0, r3
 8012878:	d102      	bne.n	8012880 <dma_circulation_disable+0xc>
 801287a:	2904      	cmp	r1, #4
 801287c:	d900      	bls.n	8012880 <dma_circulation_disable+0xc>
 801287e:	e7fe      	b.n	801287e <dma_circulation_disable+0xa>
 8012880:	2314      	movs	r3, #20
 8012882:	4359      	muls	r1, r3
 8012884:	3008      	adds	r0, #8
 8012886:	580b      	ldr	r3, [r1, r0]
 8012888:	f023 0320 	bic.w	r3, r3, #32
 801288c:	500b      	str	r3, [r1, r0]
 801288e:	4770      	bx	lr
 8012890:	40020400 	andmi	r0, r2, r0, lsl #8

08012894 <dma_memory_to_memory_disable>:
 8012894:	4b06      	ldr	r3, [pc, #24]	; (80128b0 <dma_memory_to_memory_disable+0x1c>)
 8012896:	4298      	cmp	r0, r3
 8012898:	d102      	bne.n	80128a0 <dma_memory_to_memory_disable+0xc>
 801289a:	2904      	cmp	r1, #4
 801289c:	d900      	bls.n	80128a0 <dma_memory_to_memory_disable+0xc>
 801289e:	e7fe      	b.n	801289e <dma_memory_to_memory_disable+0xa>
 80128a0:	2314      	movs	r3, #20
 80128a2:	4359      	muls	r1, r3
 80128a4:	3008      	adds	r0, #8
 80128a6:	580b      	ldr	r3, [r1, r0]
 80128a8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80128ac:	500b      	str	r3, [r1, r0]
 80128ae:	4770      	bx	lr
 80128b0:	40020400 	andmi	r0, r2, r0, lsl #8

080128b4 <enet_delay>:
 80128b4:	2300      	movs	r3, #0
 80128b6:	b082      	sub	sp, #8
 80128b8:	9301      	str	r3, [sp, #4]
 80128ba:	9001      	str	r0, [sp, #4]
 80128bc:	9b01      	ldr	r3, [sp, #4]
 80128be:	b90b      	cbnz	r3, 80128c4 <enet_delay+0x10>
 80128c0:	b002      	add	sp, #8
 80128c2:	4770      	bx	lr
 80128c4:	9b01      	ldr	r3, [sp, #4]
 80128c6:	3b01      	subs	r3, #1
 80128c8:	9301      	str	r3, [sp, #4]
 80128ca:	e7f7      	b.n	80128bc <enet_delay+0x8>

080128cc <enet_software_reset>:
 80128cc:	4b07      	ldr	r3, [pc, #28]	; (80128ec <enet_software_reset+0x20>)
 80128ce:	681a      	ldr	r2, [r3, #0]
 80128d0:	f042 0201 	orr.w	r2, r2, #1
 80128d4:	601a      	str	r2, [r3, #0]
 80128d6:	4a06      	ldr	r2, [pc, #24]	; (80128f0 <enet_software_reset+0x24>)
 80128d8:	6819      	ldr	r1, [r3, #0]
 80128da:	07c9      	lsls	r1, r1, #31
 80128dc:	d501      	bpl.n	80128e2 <enet_software_reset+0x16>
 80128de:	3a01      	subs	r2, #1
 80128e0:	d1fa      	bne.n	80128d8 <enet_software_reset+0xc>
 80128e2:	6818      	ldr	r0, [r3, #0]
 80128e4:	43c0      	mvns	r0, r0
 80128e6:	f000 0001 	and.w	r0, r0, #1
 80128ea:	4770      	bx	lr
 80128ec:	40029000 	andmi	r9, r2, r0
 80128f0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080128f4 <enet_descriptors_chain_init>:
 80128f4:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80128f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128fa:	4a19      	ldr	r2, [pc, #100]	; (8012960 <enet_descriptors_chain_init+0x6c>)
 80128fc:	d125      	bne.n	801294a <enet_descriptors_chain_init+0x56>
 80128fe:	2500      	movs	r5, #0
 8012900:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8012904:	2002      	movs	r0, #2
 8012906:	4b17      	ldr	r3, [pc, #92]	; (8012964 <enet_descriptors_chain_init+0x70>)
 8012908:	4c17      	ldr	r4, [pc, #92]	; (8012968 <enet_descriptors_chain_init+0x74>)
 801290a:	6113      	str	r3, [r2, #16]
 801290c:	4a17      	ldr	r2, [pc, #92]	; (801296c <enet_descriptors_chain_init+0x78>)
 801290e:	6013      	str	r3, [r2, #0]
 8012910:	2200      	movs	r2, #0
 8012912:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8012916:	4916      	ldr	r1, [pc, #88]	; (8012970 <enet_descriptors_chain_init+0x7c>)
 8012918:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 801291c:	600a      	str	r2, [r1, #0]
 801291e:	4915      	ldr	r1, [pc, #84]	; (8012974 <enet_descriptors_chain_init+0x80>)
 8012920:	600a      	str	r2, [r1, #0]
 8012922:	f103 0110 	add.w	r1, r3, #16
 8012926:	fb0e 4702 	mla	r7, lr, r2, r4
 801292a:	f841 7c08 	str.w	r7, [r1, #-8]
 801292e:	4594      	cmp	ip, r2
 8012930:	bf94      	ite	ls
 8012932:	461f      	movls	r7, r3
 8012934:	460f      	movhi	r7, r1
 8012936:	3201      	adds	r2, #1
 8012938:	4290      	cmp	r0, r2
 801293a:	e941 6504 	strd	r6, r5, [r1, #-16]
 801293e:	f841 7c04 	str.w	r7, [r1, #-4]
 8012942:	f101 0110 	add.w	r1, r1, #16
 8012946:	d1ee      	bne.n	8012926 <enet_descriptors_chain_init+0x32>
 8012948:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801294a:	4b0b      	ldr	r3, [pc, #44]	; (8012978 <enet_descriptors_chain_init+0x84>)
 801294c:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8012950:	60d3      	str	r3, [r2, #12]
 8012952:	4a0a      	ldr	r2, [pc, #40]	; (801297c <enet_descriptors_chain_init+0x88>)
 8012954:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8012958:	2004      	movs	r0, #4
 801295a:	4c09      	ldr	r4, [pc, #36]	; (8012980 <enet_descriptors_chain_init+0x8c>)
 801295c:	6013      	str	r3, [r2, #0]
 801295e:	e7d7      	b.n	8012910 <enet_descriptors_chain_init+0x1c>
 8012960:	40029000 	andmi	r9, r2, r0
 8012964:	20013bf4 	strdcs	r3, [r1], -r4
 8012968:	2001300c 	andcs	r3, r1, ip
 801296c:	200117bc 			; <UNDEFINED> instruction: 0x200117bc
 8012970:	200117b0 			; <UNDEFINED> instruction: 0x200117b0
 8012974:	200117b4 			; <UNDEFINED> instruction: 0x200117b4
 8012978:	20012fcc 	andcs	r2, r1, ip, asr #31
 801297c:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012980:	200117fc 	strdcs	r1, [r1], -ip

08012984 <enet_frame_receive>:
 8012984:	4a1d      	ldr	r2, [pc, #116]	; (80129fc <enet_frame_receive+0x78>)
 8012986:	b510      	push	{r4, lr}
 8012988:	6813      	ldr	r3, [r2, #0]
 801298a:	681b      	ldr	r3, [r3, #0]
 801298c:	2b00      	cmp	r3, #0
 801298e:	db33      	blt.n	80129f8 <enet_frame_receive+0x74>
 8012990:	b970      	cbnz	r0, 80129b0 <enet_frame_receive+0x2c>
 8012992:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8012996:	6813      	ldr	r3, [r2, #0]
 8012998:	6019      	str	r1, [r3, #0]
 801299a:	4919      	ldr	r1, [pc, #100]	; (8012a00 <enet_frame_receive+0x7c>)
 801299c:	6948      	ldr	r0, [r1, #20]
 801299e:	0604      	lsls	r4, r0, #24
 80129a0:	d419      	bmi.n	80129d6 <enet_frame_receive+0x52>
 80129a2:	6859      	ldr	r1, [r3, #4]
 80129a4:	0448      	lsls	r0, r1, #17
 80129a6:	d51b      	bpl.n	80129e0 <enet_frame_receive+0x5c>
 80129a8:	68db      	ldr	r3, [r3, #12]
 80129aa:	2001      	movs	r0, #1
 80129ac:	6013      	str	r3, [r2, #0]
 80129ae:	bd10      	pop	{r4, pc}
 80129b0:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80129b4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 80129b8:	d11e      	bne.n	80129f8 <enet_frame_receive+0x74>
 80129ba:	f3c3 430d 	ubfx	r3, r3, #16, #14
 80129be:	3b04      	subs	r3, #4
 80129c0:	428b      	cmp	r3, r1
 80129c2:	d819      	bhi.n	80129f8 <enet_frame_receive+0x74>
 80129c4:	2100      	movs	r1, #0
 80129c6:	4299      	cmp	r1, r3
 80129c8:	6814      	ldr	r4, [r2, #0]
 80129ca:	d2e2      	bcs.n	8012992 <enet_frame_receive+0xe>
 80129cc:	68a4      	ldr	r4, [r4, #8]
 80129ce:	5d0c      	ldrb	r4, [r1, r4]
 80129d0:	5444      	strb	r4, [r0, r1]
 80129d2:	3101      	adds	r1, #1
 80129d4:	e7f7      	b.n	80129c6 <enet_frame_receive+0x42>
 80129d6:	2080      	movs	r0, #128	; 0x80
 80129d8:	6148      	str	r0, [r1, #20]
 80129da:	2000      	movs	r0, #0
 80129dc:	6088      	str	r0, [r1, #8]
 80129de:	e7e0      	b.n	80129a2 <enet_frame_receive+0x1e>
 80129e0:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 80129e4:	4906      	ldr	r1, [pc, #24]	; (8012a00 <enet_frame_receive+0x7c>)
 80129e6:	bf05      	ittet	eq
 80129e8:	3310      	addeq	r3, #16
 80129ea:	6809      	ldreq	r1, [r1, #0]
 80129ec:	68cb      	ldrne	r3, [r1, #12]
 80129ee:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80129f2:	bf08      	it	eq
 80129f4:	185b      	addeq	r3, r3, r1
 80129f6:	e7d8      	b.n	80129aa <enet_frame_receive+0x26>
 80129f8:	2000      	movs	r0, #0
 80129fa:	e7d8      	b.n	80129ae <enet_frame_receive+0x2a>
 80129fc:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012a00:	40029000 	andmi	r9, r2, r0

08012a04 <enet_frame_transmit>:
 8012a04:	4a1e      	ldr	r2, [pc, #120]	; (8012a80 <enet_frame_transmit+0x7c>)
 8012a06:	b530      	push	{r4, r5, lr}
 8012a08:	6813      	ldr	r3, [r2, #0]
 8012a0a:	681b      	ldr	r3, [r3, #0]
 8012a0c:	2b00      	cmp	r3, #0
 8012a0e:	db34      	blt.n	8012a7a <enet_frame_transmit+0x76>
 8012a10:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8012a14:	4299      	cmp	r1, r3
 8012a16:	d830      	bhi.n	8012a7a <enet_frame_transmit+0x76>
 8012a18:	b9e8      	cbnz	r0, 8012a56 <enet_frame_transmit+0x52>
 8012a1a:	6813      	ldr	r3, [r2, #0]
 8012a1c:	4819      	ldr	r0, [pc, #100]	; (8012a84 <enet_frame_transmit+0x80>)
 8012a1e:	6059      	str	r1, [r3, #4]
 8012a20:	6819      	ldr	r1, [r3, #0]
 8012a22:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8012a26:	6019      	str	r1, [r3, #0]
 8012a28:	6941      	ldr	r1, [r0, #20]
 8012a2a:	6944      	ldr	r4, [r0, #20]
 8012a2c:	f001 0104 	and.w	r1, r1, #4
 8012a30:	f004 0420 	and.w	r4, r4, #32
 8012a34:	4321      	orrs	r1, r4
 8012a36:	d110      	bne.n	8012a5a <enet_frame_transmit+0x56>
 8012a38:	6819      	ldr	r1, [r3, #0]
 8012a3a:	02c8      	lsls	r0, r1, #11
 8012a3c:	d511      	bpl.n	8012a62 <enet_frame_transmit+0x5e>
 8012a3e:	68db      	ldr	r3, [r3, #12]
 8012a40:	2001      	movs	r0, #1
 8012a42:	6013      	str	r3, [r2, #0]
 8012a44:	bd30      	pop	{r4, r5, pc}
 8012a46:	5cc5      	ldrb	r5, [r0, r3]
 8012a48:	68a4      	ldr	r4, [r4, #8]
 8012a4a:	551d      	strb	r5, [r3, r4]
 8012a4c:	3301      	adds	r3, #1
 8012a4e:	428b      	cmp	r3, r1
 8012a50:	6814      	ldr	r4, [r2, #0]
 8012a52:	d1f8      	bne.n	8012a46 <enet_frame_transmit+0x42>
 8012a54:	e7e1      	b.n	8012a1a <enet_frame_transmit+0x16>
 8012a56:	2300      	movs	r3, #0
 8012a58:	e7f9      	b.n	8012a4e <enet_frame_transmit+0x4a>
 8012a5a:	6141      	str	r1, [r0, #20]
 8012a5c:	2100      	movs	r1, #0
 8012a5e:	6041      	str	r1, [r0, #4]
 8012a60:	e7ea      	b.n	8012a38 <enet_frame_transmit+0x34>
 8012a62:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8012a66:	4907      	ldr	r1, [pc, #28]	; (8012a84 <enet_frame_transmit+0x80>)
 8012a68:	bf05      	ittet	eq
 8012a6a:	3310      	addeq	r3, #16
 8012a6c:	6809      	ldreq	r1, [r1, #0]
 8012a6e:	690b      	ldrne	r3, [r1, #16]
 8012a70:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012a74:	bf08      	it	eq
 8012a76:	185b      	addeq	r3, r3, r1
 8012a78:	e7e2      	b.n	8012a40 <enet_frame_transmit+0x3c>
 8012a7a:	2000      	movs	r0, #0
 8012a7c:	e7e2      	b.n	8012a44 <enet_frame_transmit+0x40>
 8012a7e:	bf00      	nop
 8012a80:	200117bc 			; <UNDEFINED> instruction: 0x200117bc
 8012a84:	40029000 	andmi	r9, r2, r0

08012a88 <enet_transmit_checksum_config>:
 8012a88:	6803      	ldr	r3, [r0, #0]
 8012a8a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8012a8e:	430b      	orrs	r3, r1
 8012a90:	6003      	str	r3, [r0, #0]
 8012a92:	4770      	bx	lr

08012a94 <enet_mac_address_set>:
 8012a94:	888a      	ldrh	r2, [r1, #4]
 8012a96:	4b03      	ldr	r3, [pc, #12]	; (8012aa4 <enet_mac_address_set+0x10>)
 8012a98:	50c2      	str	r2, [r0, r3]
 8012a9a:	680a      	ldr	r2, [r1, #0]
 8012a9c:	3304      	adds	r3, #4
 8012a9e:	50c2      	str	r2, [r0, r3]
 8012aa0:	4770      	bx	lr
 8012aa2:	bf00      	nop
 8012aa4:	40028040 	andmi	r8, r2, r0, asr #32

08012aa8 <enet_rx_enable>:
 8012aa8:	4a05      	ldr	r2, [pc, #20]	; (8012ac0 <enet_rx_enable+0x18>)
 8012aaa:	6813      	ldr	r3, [r2, #0]
 8012aac:	f043 0304 	orr.w	r3, r3, #4
 8012ab0:	6013      	str	r3, [r2, #0]
 8012ab2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012ab6:	6993      	ldr	r3, [r2, #24]
 8012ab8:	f043 0302 	orr.w	r3, r3, #2
 8012abc:	6193      	str	r3, [r2, #24]
 8012abe:	4770      	bx	lr
 8012ac0:	40028000 	andmi	r8, r2, r0

08012ac4 <enet_phy_write_read>:
 8012ac4:	b530      	push	{r4, r5, lr}
 8012ac6:	4604      	mov	r4, r0
 8012ac8:	4d13      	ldr	r5, [pc, #76]	; (8012b18 <enet_phy_write_read+0x54>)
 8012aca:	0192      	lsls	r2, r2, #6
 8012acc:	6928      	ldr	r0, [r5, #16]
 8012ace:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8012ad2:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8012ad6:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8012ada:	4302      	orrs	r2, r0
 8012adc:	02c9      	lsls	r1, r1, #11
 8012ade:	b289      	uxth	r1, r1
 8012ae0:	2c02      	cmp	r4, #2
 8012ae2:	ea42 0204 	orr.w	r2, r2, r4
 8012ae6:	ea42 0201 	orr.w	r2, r2, r1
 8012aea:	bf08      	it	eq
 8012aec:	8819      	ldrheq	r1, [r3, #0]
 8012aee:	f042 0201 	orr.w	r2, r2, #1
 8012af2:	bf08      	it	eq
 8012af4:	6169      	streq	r1, [r5, #20]
 8012af6:	612a      	str	r2, [r5, #16]
 8012af8:	4907      	ldr	r1, [pc, #28]	; (8012b18 <enet_phy_write_read+0x54>)
 8012afa:	4a08      	ldr	r2, [pc, #32]	; (8012b1c <enet_phy_write_read+0x58>)
 8012afc:	6908      	ldr	r0, [r1, #16]
 8012afe:	07c0      	lsls	r0, r0, #31
 8012b00:	d501      	bpl.n	8012b06 <enet_phy_write_read+0x42>
 8012b02:	3a01      	subs	r2, #1
 8012b04:	d1fa      	bne.n	8012afc <enet_phy_write_read+0x38>
 8012b06:	690a      	ldr	r2, [r1, #16]
 8012b08:	43d2      	mvns	r2, r2
 8012b0a:	f002 0001 	and.w	r0, r2, #1
 8012b0e:	b90c      	cbnz	r4, 8012b14 <enet_phy_write_read+0x50>
 8012b10:	694a      	ldr	r2, [r1, #20]
 8012b12:	801a      	strh	r2, [r3, #0]
 8012b14:	bd30      	pop	{r4, r5, pc}
 8012b16:	bf00      	nop
 8012b18:	40028000 	andmi	r8, r2, r0
 8012b1c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012b20 <enet_phy_config>:
 8012b20:	4b22      	ldr	r3, [pc, #136]	; (8012bac <enet_phy_config+0x8c>)
 8012b22:	b513      	push	{r0, r1, r4, lr}
 8012b24:	2001      	movs	r0, #1
 8012b26:	691c      	ldr	r4, [r3, #16]
 8012b28:	f7fe ff3e 	bl	80119a8 <rcu_clock_freq_get>
 8012b2c:	4b20      	ldr	r3, [pc, #128]	; (8012bb0 <enet_phy_config+0x90>)
 8012b2e:	4a21      	ldr	r2, [pc, #132]	; (8012bb4 <enet_phy_config+0x94>)
 8012b30:	4403      	add	r3, r0
 8012b32:	4293      	cmp	r3, r2
 8012b34:	f024 041c 	bic.w	r4, r4, #28
 8012b38:	d220      	bcs.n	8012b7c <enet_phy_config+0x5c>
 8012b3a:	f044 0408 	orr.w	r4, r4, #8
 8012b3e:	4b1b      	ldr	r3, [pc, #108]	; (8012bac <enet_phy_config+0x8c>)
 8012b40:	2200      	movs	r2, #0
 8012b42:	611c      	str	r4, [r3, #16]
 8012b44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012b48:	2101      	movs	r1, #1
 8012b4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012b4e:	2002      	movs	r0, #2
 8012b50:	f10d 0306 	add.w	r3, sp, #6
 8012b54:	f7ff ffb6 	bl	8012ac4 <enet_phy_write_read>
 8012b58:	b310      	cbz	r0, 8012ba0 <enet_phy_config+0x80>
 8012b5a:	2200      	movs	r2, #0
 8012b5c:	4816      	ldr	r0, [pc, #88]	; (8012bb8 <enet_phy_config+0x98>)
 8012b5e:	f7ff fea9 	bl	80128b4 <enet_delay>
 8012b62:	2101      	movs	r1, #1
 8012b64:	4610      	mov	r0, r2
 8012b66:	f10d 0306 	add.w	r3, sp, #6
 8012b6a:	f7ff ffab 	bl	8012ac4 <enet_phy_write_read>
 8012b6e:	b1b8      	cbz	r0, 8012ba0 <enet_phy_config+0x80>
 8012b70:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012b74:	43c0      	mvns	r0, r0
 8012b76:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012b7a:	e012      	b.n	8012ba2 <enet_phy_config+0x82>
 8012b7c:	4b0f      	ldr	r3, [pc, #60]	; (8012bbc <enet_phy_config+0x9c>)
 8012b7e:	4a10      	ldr	r2, [pc, #64]	; (8012bc0 <enet_phy_config+0xa0>)
 8012b80:	4403      	add	r3, r0
 8012b82:	4293      	cmp	r3, r2
 8012b84:	d802      	bhi.n	8012b8c <enet_phy_config+0x6c>
 8012b86:	f044 040c 	orr.w	r4, r4, #12
 8012b8a:	e7d8      	b.n	8012b3e <enet_phy_config+0x1e>
 8012b8c:	4b0d      	ldr	r3, [pc, #52]	; (8012bc4 <enet_phy_config+0xa4>)
 8012b8e:	4a0e      	ldr	r2, [pc, #56]	; (8012bc8 <enet_phy_config+0xa8>)
 8012b90:	4403      	add	r3, r0
 8012b92:	4293      	cmp	r3, r2
 8012b94:	d9d3      	bls.n	8012b3e <enet_phy_config+0x1e>
 8012b96:	4b0d      	ldr	r3, [pc, #52]	; (8012bcc <enet_phy_config+0xac>)
 8012b98:	4a0d      	ldr	r2, [pc, #52]	; (8012bd0 <enet_phy_config+0xb0>)
 8012b9a:	4403      	add	r3, r0
 8012b9c:	4293      	cmp	r3, r2
 8012b9e:	d902      	bls.n	8012ba6 <enet_phy_config+0x86>
 8012ba0:	2000      	movs	r0, #0
 8012ba2:	b002      	add	sp, #8
 8012ba4:	bd10      	pop	{r4, pc}
 8012ba6:	f044 0404 	orr.w	r4, r4, #4
 8012baa:	e7c8      	b.n	8012b3e <enet_phy_config+0x1e>
 8012bac:	40028000 	andmi	r8, r2, r0
 8012bb0:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8012bb4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8012bb8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012bbc:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8012bc0:	017d783f 	cmneq	sp, pc, lsr r8
 8012bc4:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8012bc8:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8012bcc:	faa2b580 	blx	68c01d4 <__stack_size+0x68be9d4>
 8012bd0:	0112a880 	tsteq	r2, r0, lsl #17

08012bd4 <enet_init>:
 8012bd4:	2300      	movs	r3, #0
 8012bd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012bd8:	4604      	mov	r4, r0
 8012bda:	460d      	mov	r5, r1
 8012bdc:	4616      	mov	r6, r2
 8012bde:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012be2:	f7ff ff9d 	bl	8012b20 <enet_phy_config>
 8012be6:	2800      	cmp	r0, #0
 8012be8:	d037      	beq.n	8012c5a <enet_init+0x86>
 8012bea:	4b3b      	ldr	r3, [pc, #236]	; (8012cd8 <enet_init+0x104>)
 8012bec:	4a3b      	ldr	r2, [pc, #236]	; (8012cdc <enet_init+0x108>)
 8012bee:	6819      	ldr	r1, [r3, #0]
 8012bf0:	2c01      	cmp	r4, #1
 8012bf2:	ea02 0201 	and.w	r2, r2, r1
 8012bf6:	601a      	str	r2, [r3, #0]
 8012bf8:	f04f 0200 	mov.w	r2, #0
 8012bfc:	605a      	str	r2, [r3, #4]
 8012bfe:	609a      	str	r2, [r3, #8]
 8012c00:	60da      	str	r2, [r3, #12]
 8012c02:	6999      	ldr	r1, [r3, #24]
 8012c04:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8012c08:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8012c0c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8012c10:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8012c14:	6199      	str	r1, [r3, #24]
 8012c16:	4932      	ldr	r1, [pc, #200]	; (8012ce0 <enet_init+0x10c>)
 8012c18:	61da      	str	r2, [r3, #28]
 8012c1a:	6988      	ldr	r0, [r1, #24]
 8012c1c:	4b31      	ldr	r3, [pc, #196]	; (8012ce4 <enet_init+0x110>)
 8012c1e:	ea03 0300 	and.w	r3, r3, r0
 8012c22:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8012c26:	618b      	str	r3, [r1, #24]
 8012c28:	680b      	ldr	r3, [r1, #0]
 8012c2a:	4b2f      	ldr	r3, [pc, #188]	; (8012ce8 <enet_init+0x114>)
 8012c2c:	600b      	str	r3, [r1, #0]
 8012c2e:	d01e      	beq.n	8012c6e <enet_init+0x9a>
 8012c30:	08e3      	lsrs	r3, r4, #3
 8012c32:	0861      	lsrs	r1, r4, #1
 8012c34:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8012c38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012c3c:	430b      	orrs	r3, r1
 8012c3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012c42:	2101      	movs	r1, #1
 8012c44:	2002      	movs	r0, #2
 8012c46:	f10d 0306 	add.w	r3, sp, #6
 8012c4a:	f7ff ff3b 	bl	8012ac4 <enet_phy_write_read>
 8012c4e:	b158      	cbz	r0, 8012c68 <enet_init+0x94>
 8012c50:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8012c54:	f7ff fe2e 	bl	80128b4 <enet_delay>
 8012c58:	e05f      	b.n	8012d1a <enet_init+0x146>
 8012c5a:	4824      	ldr	r0, [pc, #144]	; (8012cec <enet_init+0x118>)
 8012c5c:	f7ff fe2a 	bl	80128b4 <enet_delay>
 8012c60:	f7ff ff5e 	bl	8012b20 <enet_phy_config>
 8012c64:	2800      	cmp	r0, #0
 8012c66:	d1c0      	bne.n	8012bea <enet_init+0x16>
 8012c68:	2000      	movs	r0, #0
 8012c6a:	b003      	add	sp, #12
 8012c6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c6e:	4614      	mov	r4, r2
 8012c70:	4f1f      	ldr	r7, [pc, #124]	; (8012cf0 <enet_init+0x11c>)
 8012c72:	2201      	movs	r2, #1
 8012c74:	2000      	movs	r0, #0
 8012c76:	4611      	mov	r1, r2
 8012c78:	f10d 0306 	add.w	r3, sp, #6
 8012c7c:	f7ff ff22 	bl	8012ac4 <enet_phy_write_read>
 8012c80:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012c84:	3401      	adds	r4, #1
 8012c86:	f002 0204 	and.w	r2, r2, #4
 8012c8a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012c8e:	b912      	cbnz	r2, 8012c96 <enet_init+0xc2>
 8012c90:	42bc      	cmp	r4, r7
 8012c92:	d1ee      	bne.n	8012c72 <enet_init+0x9e>
 8012c94:	e7e8      	b.n	8012c68 <enet_init+0x94>
 8012c96:	42bc      	cmp	r4, r7
 8012c98:	d0e6      	beq.n	8012c68 <enet_init+0x94>
 8012c9a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012c9e:	2101      	movs	r1, #1
 8012ca0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012ca4:	2002      	movs	r0, #2
 8012ca6:	2200      	movs	r2, #0
 8012ca8:	f7ff ff0c 	bl	8012ac4 <enet_phy_write_read>
 8012cac:	2800      	cmp	r0, #0
 8012cae:	d0db      	beq.n	8012c68 <enet_init+0x94>
 8012cb0:	2400      	movs	r4, #0
 8012cb2:	4f0f      	ldr	r7, [pc, #60]	; (8012cf0 <enet_init+0x11c>)
 8012cb4:	2201      	movs	r2, #1
 8012cb6:	2000      	movs	r0, #0
 8012cb8:	4611      	mov	r1, r2
 8012cba:	f10d 0306 	add.w	r3, sp, #6
 8012cbe:	f7ff ff01 	bl	8012ac4 <enet_phy_write_read>
 8012cc2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012cc6:	3401      	adds	r4, #1
 8012cc8:	f002 0220 	and.w	r2, r2, #32
 8012ccc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012cd0:	b982      	cbnz	r2, 8012cf4 <enet_init+0x120>
 8012cd2:	42bc      	cmp	r4, r7
 8012cd4:	d1ee      	bne.n	8012cb4 <enet_init+0xe0>
 8012cd6:	e7c7      	b.n	8012c68 <enet_init+0x94>
 8012cd8:	40028000 	andmi	r8, r2, r0
 8012cdc:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8012ce0:	40029000 	andmi	r9, r2, r0
 8012ce4:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8012ce8:	02c16000 	sbceq	r6, r1, #0
 8012cec:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8012cf0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012cf4:	42bc      	cmp	r4, r7
 8012cf6:	d0b7      	beq.n	8012c68 <enet_init+0x94>
 8012cf8:	2101      	movs	r1, #1
 8012cfa:	2210      	movs	r2, #16
 8012cfc:	2000      	movs	r0, #0
 8012cfe:	f7ff fee1 	bl	8012ac4 <enet_phy_write_read>
 8012d02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012d06:	f013 0f04 	tst.w	r3, #4
 8012d0a:	bf14      	ite	ne
 8012d0c:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8012d10:	2400      	moveq	r4, #0
 8012d12:	0799      	lsls	r1, r3, #30
 8012d14:	d401      	bmi.n	8012d1a <enet_init+0x146>
 8012d16:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8012d1a:	4b64      	ldr	r3, [pc, #400]	; (8012eac <enet_init+0x2d8>)
 8012d1c:	056a      	lsls	r2, r5, #21
 8012d1e:	6818      	ldr	r0, [r3, #0]
 8012d20:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8012d24:	ea44 0400 	orr.w	r4, r4, r0
 8012d28:	601c      	str	r4, [r3, #0]
 8012d2a:	d50c      	bpl.n	8012d46 <enet_init+0x172>
 8012d2c:	681a      	ldr	r2, [r3, #0]
 8012d2e:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8012d32:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012d36:	601a      	str	r2, [r3, #0]
 8012d38:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012d3c:	6999      	ldr	r1, [r3, #24]
 8012d3e:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8012d42:	430d      	orrs	r5, r1
 8012d44:	619d      	str	r5, [r3, #24]
 8012d46:	4959      	ldr	r1, [pc, #356]	; (8012eac <enet_init+0x2d8>)
 8012d48:	4b59      	ldr	r3, [pc, #356]	; (8012eb0 <enet_init+0x2dc>)
 8012d4a:	684a      	ldr	r2, [r1, #4]
 8012d4c:	4316      	orrs	r6, r2
 8012d4e:	604e      	str	r6, [r1, #4]
 8012d50:	681a      	ldr	r2, [r3, #0]
 8012d52:	07d7      	lsls	r7, r2, #31
 8012d54:	d510      	bpl.n	8012d78 <enet_init+0x1a4>
 8012d56:	685a      	ldr	r2, [r3, #4]
 8012d58:	680c      	ldr	r4, [r1, #0]
 8012d5a:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8012d5e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8012d62:	4320      	orrs	r0, r4
 8012d64:	6008      	str	r0, [r1, #0]
 8012d66:	4853      	ldr	r0, [pc, #332]	; (8012eb4 <enet_init+0x2e0>)
 8012d68:	0892      	lsrs	r2, r2, #2
 8012d6a:	6981      	ldr	r1, [r0, #24]
 8012d6c:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8012d70:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8012d74:	430a      	orrs	r2, r1
 8012d76:	6182      	str	r2, [r0, #24]
 8012d78:	681a      	ldr	r2, [r3, #0]
 8012d7a:	0796      	lsls	r6, r2, #30
 8012d7c:	d508      	bpl.n	8012d90 <enet_init+0x1bc>
 8012d7e:	494d      	ldr	r1, [pc, #308]	; (8012eb4 <enet_init+0x2e0>)
 8012d80:	6898      	ldr	r0, [r3, #8]
 8012d82:	680a      	ldr	r2, [r1, #0]
 8012d84:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8012d88:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012d8c:	4302      	orrs	r2, r0
 8012d8e:	600a      	str	r2, [r1, #0]
 8012d90:	681a      	ldr	r2, [r3, #0]
 8012d92:	0755      	lsls	r5, r2, #29
 8012d94:	d508      	bpl.n	8012da8 <enet_init+0x1d4>
 8012d96:	4947      	ldr	r1, [pc, #284]	; (8012eb4 <enet_init+0x2e0>)
 8012d98:	68d8      	ldr	r0, [r3, #12]
 8012d9a:	680a      	ldr	r2, [r1, #0]
 8012d9c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8012da0:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8012da4:	4302      	orrs	r2, r0
 8012da6:	600a      	str	r2, [r1, #0]
 8012da8:	681a      	ldr	r2, [r3, #0]
 8012daa:	0714      	lsls	r4, r2, #28
 8012dac:	d508      	bpl.n	8012dc0 <enet_init+0x1ec>
 8012dae:	4941      	ldr	r1, [pc, #260]	; (8012eb4 <enet_init+0x2e0>)
 8012db0:	6918      	ldr	r0, [r3, #16]
 8012db2:	680a      	ldr	r2, [r1, #0]
 8012db4:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8012db8:	f022 0202 	bic.w	r2, r2, #2
 8012dbc:	4302      	orrs	r2, r0
 8012dbe:	600a      	str	r2, [r1, #0]
 8012dc0:	681a      	ldr	r2, [r3, #0]
 8012dc2:	06d0      	lsls	r0, r2, #27
 8012dc4:	d506      	bpl.n	8012dd4 <enet_init+0x200>
 8012dc6:	493b      	ldr	r1, [pc, #236]	; (8012eb4 <enet_init+0x2e0>)
 8012dc8:	4a3b      	ldr	r2, [pc, #236]	; (8012eb8 <enet_init+0x2e4>)
 8012dca:	6988      	ldr	r0, [r1, #24]
 8012dcc:	4002      	ands	r2, r0
 8012dce:	6958      	ldr	r0, [r3, #20]
 8012dd0:	4302      	orrs	r2, r0
 8012dd2:	618a      	str	r2, [r1, #24]
 8012dd4:	681a      	ldr	r2, [r3, #0]
 8012dd6:	0691      	lsls	r1, r2, #26
 8012dd8:	d508      	bpl.n	8012dec <enet_init+0x218>
 8012dda:	4936      	ldr	r1, [pc, #216]	; (8012eb4 <enet_init+0x2e0>)
 8012ddc:	6998      	ldr	r0, [r3, #24]
 8012dde:	698a      	ldr	r2, [r1, #24]
 8012de0:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8012de4:	f022 0204 	bic.w	r2, r2, #4
 8012de8:	4302      	orrs	r2, r0
 8012dea:	618a      	str	r2, [r1, #24]
 8012dec:	681a      	ldr	r2, [r3, #0]
 8012dee:	0652      	lsls	r2, r2, #25
 8012df0:	d506      	bpl.n	8012e00 <enet_init+0x22c>
 8012df2:	492e      	ldr	r1, [pc, #184]	; (8012eac <enet_init+0x2d8>)
 8012df4:	69d8      	ldr	r0, [r3, #28]
 8012df6:	69ca      	ldr	r2, [r1, #28]
 8012df8:	0c52      	lsrs	r2, r2, #17
 8012dfa:	0452      	lsls	r2, r2, #17
 8012dfc:	4302      	orrs	r2, r0
 8012dfe:	61ca      	str	r2, [r1, #28]
 8012e00:	681a      	ldr	r2, [r3, #0]
 8012e02:	0617      	lsls	r7, r2, #24
 8012e04:	d517      	bpl.n	8012e36 <enet_init+0x262>
 8012e06:	4c29      	ldr	r4, [pc, #164]	; (8012eac <enet_init+0x2d8>)
 8012e08:	6a1a      	ldr	r2, [r3, #32]
 8012e0a:	69a0      	ldr	r0, [r4, #24]
 8012e0c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8012e10:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8012e14:	0400      	lsls	r0, r0, #16
 8012e16:	0c00      	lsrs	r0, r0, #16
 8012e18:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8012e1c:	4301      	orrs	r1, r0
 8012e1e:	4825      	ldr	r0, [pc, #148]	; (8012eb4 <enet_init+0x2e0>)
 8012e20:	61a1      	str	r1, [r4, #24]
 8012e22:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8012e26:	0a12      	lsrs	r2, r2, #8
 8012e28:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8012e2c:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8012e30:	430a      	orrs	r2, r1
 8012e32:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8012e36:	681a      	ldr	r2, [r3, #0]
 8012e38:	05d6      	lsls	r6, r2, #23
 8012e3a:	bf42      	ittt	mi
 8012e3c:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8012e3e:	4a1b      	ldrmi	r2, [pc, #108]	; (8012eac <enet_init+0x2d8>)
 8012e40:	6091      	strmi	r1, [r2, #8]
 8012e42:	681a      	ldr	r2, [r3, #0]
 8012e44:	0595      	lsls	r5, r2, #22
 8012e46:	bf42      	ittt	mi
 8012e48:	4a18      	ldrmi	r2, [pc, #96]	; (8012eac <enet_init+0x2d8>)
 8012e4a:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8012e4c:	60d1      	strmi	r1, [r2, #12]
 8012e4e:	681a      	ldr	r2, [r3, #0]
 8012e50:	0554      	lsls	r4, r2, #21
 8012e52:	d508      	bpl.n	8012e66 <enet_init+0x292>
 8012e54:	4915      	ldr	r1, [pc, #84]	; (8012eac <enet_init+0x2d8>)
 8012e56:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8012e58:	684a      	ldr	r2, [r1, #4]
 8012e5a:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8012e5e:	f022 0206 	bic.w	r2, r2, #6
 8012e62:	4302      	orrs	r2, r0
 8012e64:	604a      	str	r2, [r1, #4]
 8012e66:	681a      	ldr	r2, [r3, #0]
 8012e68:	0510      	lsls	r0, r2, #20
 8012e6a:	d508      	bpl.n	8012e7e <enet_init+0x2aa>
 8012e6c:	490f      	ldr	r1, [pc, #60]	; (8012eac <enet_init+0x2d8>)
 8012e6e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8012e70:	680a      	ldr	r2, [r1, #0]
 8012e72:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8012e76:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8012e7a:	4302      	orrs	r2, r0
 8012e7c:	600a      	str	r2, [r1, #0]
 8012e7e:	681a      	ldr	r2, [r3, #0]
 8012e80:	04d1      	lsls	r1, r2, #19
 8012e82:	d506      	bpl.n	8012e92 <enet_init+0x2be>
 8012e84:	4909      	ldr	r1, [pc, #36]	; (8012eac <enet_init+0x2d8>)
 8012e86:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8012e88:	680a      	ldr	r2, [r1, #0]
 8012e8a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8012e8e:	4302      	orrs	r2, r0
 8012e90:	600a      	str	r2, [r1, #0]
 8012e92:	681a      	ldr	r2, [r3, #0]
 8012e94:	0492      	lsls	r2, r2, #18
 8012e96:	d506      	bpl.n	8012ea6 <enet_init+0x2d2>
 8012e98:	4904      	ldr	r1, [pc, #16]	; (8012eac <enet_init+0x2d8>)
 8012e9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e9c:	680a      	ldr	r2, [r1, #0]
 8012e9e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8012ea2:	4313      	orrs	r3, r2
 8012ea4:	600b      	str	r3, [r1, #0]
 8012ea6:	2001      	movs	r0, #1
 8012ea8:	e6df      	b.n	8012c6a <enet_init+0x96>
 8012eaa:	bf00      	nop
 8012eac:	40028000 	andmi	r8, r2, r0
 8012eb0:	200117c0 	andcs	r1, r1, r0, asr #15
 8012eb4:	40029000 	andmi	r9, r2, r0
 8012eb8:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08012ebc <enet_txfifo_flush>:
 8012ebc:	4b06      	ldr	r3, [pc, #24]	; (8012ed8 <enet_txfifo_flush+0x1c>)
 8012ebe:	4807      	ldr	r0, [pc, #28]	; (8012edc <enet_txfifo_flush+0x20>)
 8012ec0:	699a      	ldr	r2, [r3, #24]
 8012ec2:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8012ec6:	619a      	str	r2, [r3, #24]
 8012ec8:	699a      	ldr	r2, [r3, #24]
 8012eca:	02d2      	lsls	r2, r2, #11
 8012ecc:	d502      	bpl.n	8012ed4 <enet_txfifo_flush+0x18>
 8012ece:	3801      	subs	r0, #1
 8012ed0:	d1fa      	bne.n	8012ec8 <enet_txfifo_flush+0xc>
 8012ed2:	4770      	bx	lr
 8012ed4:	2001      	movs	r0, #1
 8012ed6:	4770      	bx	lr
 8012ed8:	40029000 	andmi	r9, r2, r0
 8012edc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012ee0 <enet_tx_enable>:
 8012ee0:	4a06      	ldr	r2, [pc, #24]	; (8012efc <enet_tx_enable+0x1c>)
 8012ee2:	b508      	push	{r3, lr}
 8012ee4:	6813      	ldr	r3, [r2, #0]
 8012ee6:	f043 0308 	orr.w	r3, r3, #8
 8012eea:	6013      	str	r3, [r2, #0]
 8012eec:	f7ff ffe6 	bl	8012ebc <enet_txfifo_flush>
 8012ef0:	4a03      	ldr	r2, [pc, #12]	; (8012f00 <enet_tx_enable+0x20>)
 8012ef2:	6993      	ldr	r3, [r2, #24]
 8012ef4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012ef8:	6193      	str	r3, [r2, #24]
 8012efa:	bd08      	pop	{r3, pc}
 8012efc:	40028000 	andmi	r8, r2, r0
 8012f00:	40029000 	andmi	r9, r2, r0

08012f04 <enet_enable>:
 8012f04:	b508      	push	{r3, lr}
 8012f06:	f7ff ffeb 	bl	8012ee0 <enet_tx_enable>
 8012f0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012f0e:	f7ff bdcb 	b.w	8012aa8 <enet_rx_enable>

08012f12 <enet_desc_information_get>:
 8012f12:	2905      	cmp	r1, #5
 8012f14:	d817      	bhi.n	8012f46 <enet_desc_information_get+0x34>
 8012f16:	e8df f001 	tbb	[pc, r1]
 8012f1a:	03091012 	movweq	r1, #36882	; 0x9012
 8012f1e:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8012f22:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012f26:	4770      	bx	lr
 8012f28:	88c0      	ldrh	r0, [r0, #6]
 8012f2a:	e7fa      	b.n	8012f22 <enet_desc_information_get+0x10>
 8012f2c:	8840      	ldrh	r0, [r0, #2]
 8012f2e:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8012f32:	2804      	cmp	r0, #4
 8012f34:	d90a      	bls.n	8012f4c <enet_desc_information_get+0x3a>
 8012f36:	3804      	subs	r0, #4
 8012f38:	4770      	bx	lr
 8012f3a:	6880      	ldr	r0, [r0, #8]
 8012f3c:	4770      	bx	lr
 8012f3e:	6800      	ldr	r0, [r0, #0]
 8012f40:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8012f44:	4770      	bx	lr
 8012f46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f4a:	4770      	bx	lr
 8012f4c:	2000      	movs	r0, #0
 8012f4e:	4770      	bx	lr

08012f50 <enet_rxframe_drop>:
 8012f50:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8012f54:	4814      	ldr	r0, [pc, #80]	; (8012fa8 <enet_rxframe_drop+0x58>)
 8012f56:	b510      	push	{r4, lr}
 8012f58:	6802      	ldr	r2, [r0, #0]
 8012f5a:	4914      	ldr	r1, [pc, #80]	; (8012fac <enet_rxframe_drop+0x5c>)
 8012f5c:	6854      	ldr	r4, [r2, #4]
 8012f5e:	6013      	str	r3, [r2, #0]
 8012f60:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8012f64:	680b      	ldr	r3, [r1, #0]
 8012f66:	d009      	beq.n	8012f7c <enet_rxframe_drop+0x2c>
 8012f68:	b12b      	cbz	r3, 8012f76 <enet_rxframe_drop+0x26>
 8012f6a:	68da      	ldr	r2, [r3, #12]
 8012f6c:	6002      	str	r2, [r0, #0]
 8012f6e:	681a      	ldr	r2, [r3, #0]
 8012f70:	b1ba      	cbz	r2, 8012fa2 <enet_rxframe_drop+0x52>
 8012f72:	600a      	str	r2, [r1, #0]
 8012f74:	bd10      	pop	{r4, pc}
 8012f76:	68d3      	ldr	r3, [r2, #12]
 8012f78:	6003      	str	r3, [r0, #0]
 8012f7a:	e7fb      	b.n	8012f74 <enet_rxframe_drop+0x24>
 8012f7c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8012f80:	4c0b      	ldr	r4, [pc, #44]	; (8012fb0 <enet_rxframe_drop+0x60>)
 8012f82:	d006      	beq.n	8012f92 <enet_rxframe_drop+0x42>
 8012f84:	68e2      	ldr	r2, [r4, #12]
 8012f86:	6002      	str	r2, [r0, #0]
 8012f88:	2b00      	cmp	r3, #0
 8012f8a:	d0f3      	beq.n	8012f74 <enet_rxframe_drop+0x24>
 8012f8c:	681b      	ldr	r3, [r3, #0]
 8012f8e:	600b      	str	r3, [r1, #0]
 8012f90:	e7f0      	b.n	8012f74 <enet_rxframe_drop+0x24>
 8012f92:	6824      	ldr	r4, [r4, #0]
 8012f94:	3210      	adds	r2, #16
 8012f96:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8012f9a:	4422      	add	r2, r4
 8012f9c:	6002      	str	r2, [r0, #0]
 8012f9e:	2b00      	cmp	r3, #0
 8012fa0:	d0e8      	beq.n	8012f74 <enet_rxframe_drop+0x24>
 8012fa2:	3310      	adds	r3, #16
 8012fa4:	e7f3      	b.n	8012f8e <enet_rxframe_drop+0x3e>
 8012fa6:	bf00      	nop
 8012fa8:	200117b8 			; <UNDEFINED> instruction: 0x200117b8
 8012fac:	200117b0 			; <UNDEFINED> instruction: 0x200117b0
 8012fb0:	40029000 	andmi	r9, r2, r0

08012fb4 <enet_rxframe_size_get>:
 8012fb4:	b508      	push	{r3, lr}
 8012fb6:	4b0c      	ldr	r3, [pc, #48]	; (8012fe8 <enet_rxframe_size_get+0x34>)
 8012fb8:	681b      	ldr	r3, [r3, #0]
 8012fba:	6818      	ldr	r0, [r3, #0]
 8012fbc:	2800      	cmp	r0, #0
 8012fbe:	db10      	blt.n	8012fe2 <enet_rxframe_size_get+0x2e>
 8012fc0:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8012fc4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012fc8:	d003      	beq.n	8012fd2 <enet_rxframe_size_get+0x1e>
 8012fca:	f7ff ffc1 	bl	8012f50 <enet_rxframe_drop>
 8012fce:	2001      	movs	r0, #1
 8012fd0:	bd08      	pop	{r3, pc}
 8012fd2:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8012fd6:	2b21      	cmp	r3, #33	; 0x21
 8012fd8:	d0f7      	beq.n	8012fca <enet_rxframe_size_get+0x16>
 8012fda:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8012fde:	3804      	subs	r0, #4
 8012fe0:	e7f6      	b.n	8012fd0 <enet_rxframe_size_get+0x1c>
 8012fe2:	2000      	movs	r0, #0
 8012fe4:	e7f4      	b.n	8012fd0 <enet_rxframe_size_get+0x1c>
 8012fe6:	bf00      	nop
 8012fe8:	200117b8 			; <UNDEFINED> instruction: 0x200117b8

08012fec <enet_initpara_reset>:
 8012fec:	2200      	movs	r2, #0
 8012fee:	4b08      	ldr	r3, [pc, #32]	; (8013010 <enet_initpara_reset+0x24>)
 8012ff0:	e9c3 2200 	strd	r2, r2, [r3]
 8012ff4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8012ff8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8012ffc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8013000:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8013004:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8013008:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 801300c:	639a      	str	r2, [r3, #56]	; 0x38
 801300e:	4770      	bx	lr
 8013010:	200117c0 	andcs	r1, r1, r0, asr #15

08013014 <enet_deinit>:
 8013014:	b508      	push	{r3, lr}
 8013016:	f640 200e 	movw	r0, #2574	; 0xa0e
 801301a:	f7fe fc0c 	bl	8011836 <rcu_periph_reset_enable>
 801301e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8013022:	f7fe fc0a 	bl	801183a <rcu_periph_reset_disable>
 8013026:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801302a:	f7ff bfdf 	b.w	8012fec <enet_initpara_reset>
	...

08013030 <i2c_clock_config>:
 8013030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013032:	4605      	mov	r5, r0
 8013034:	2002      	movs	r0, #2
 8013036:	460c      	mov	r4, r1
 8013038:	4617      	mov	r7, r2
 801303a:	f7fe fcb5 	bl	80119a8 <rcu_clock_freq_get>
 801303e:	4927      	ldr	r1, [pc, #156]	; (80130dc <i2c_clock_config+0xac>)
 8013040:	4a27      	ldr	r2, [pc, #156]	; (80130e0 <i2c_clock_config+0xb0>)
 8013042:	fbb0 f1f1 	udiv	r1, r0, r1
 8013046:	4290      	cmp	r0, r2
 8013048:	bf34      	ite	cc
 801304a:	460b      	movcc	r3, r1
 801304c:	2336      	movcs	r3, #54	; 0x36
 801304e:	686e      	ldr	r6, [r5, #4]
 8013050:	4a24      	ldr	r2, [pc, #144]	; (80130e4 <i2c_clock_config+0xb4>)
 8013052:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8013056:	431e      	orrs	r6, r3
 8013058:	4294      	cmp	r4, r2
 801305a:	606e      	str	r6, [r5, #4]
 801305c:	d816      	bhi.n	801308c <i2c_clock_config+0x5c>
 801305e:	3101      	adds	r1, #1
 8013060:	2935      	cmp	r1, #53	; 0x35
 8013062:	d90d      	bls.n	8013080 <i2c_clock_config+0x50>
 8013064:	2336      	movs	r3, #54	; 0x36
 8013066:	622b      	str	r3, [r5, #32]
 8013068:	0064      	lsls	r4, r4, #1
 801306a:	fbb0 f4f4 	udiv	r4, r0, r4
 801306e:	2c04      	cmp	r4, #4
 8013070:	bf38      	it	cc
 8013072:	2404      	movcc	r4, #4
 8013074:	69e8      	ldr	r0, [r5, #28]
 8013076:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801307a:	4304      	orrs	r4, r0
 801307c:	61ec      	str	r4, [r5, #28]
 801307e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013080:	2902      	cmp	r1, #2
 8013082:	d801      	bhi.n	8013088 <i2c_clock_config+0x58>
 8013084:	2302      	movs	r3, #2
 8013086:	e7ee      	b.n	8013066 <i2c_clock_config+0x36>
 8013088:	6229      	str	r1, [r5, #32]
 801308a:	e7ed      	b.n	8013068 <i2c_clock_config+0x38>
 801308c:	4a16      	ldr	r2, [pc, #88]	; (80130e8 <i2c_clock_config+0xb8>)
 801308e:	4294      	cmp	r4, r2
 8013090:	d8f5      	bhi.n	801307e <i2c_clock_config+0x4e>
 8013092:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8013096:	4353      	muls	r3, r2
 8013098:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801309c:	fbb3 f3f2 	udiv	r3, r3, r2
 80130a0:	3301      	adds	r3, #1
 80130a2:	622b      	str	r3, [r5, #32]
 80130a4:	b997      	cbnz	r7, 80130cc <i2c_clock_config+0x9c>
 80130a6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80130aa:	fbb0 f4f4 	udiv	r4, r0, r4
 80130ae:	69eb      	ldr	r3, [r5, #28]
 80130b0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80130b4:	61eb      	str	r3, [r5, #28]
 80130b6:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80130ba:	b90b      	cbnz	r3, 80130c0 <i2c_clock_config+0x90>
 80130bc:	f044 0401 	orr.w	r4, r4, #1
 80130c0:	69eb      	ldr	r3, [r5, #28]
 80130c2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80130c6:	61eb      	str	r3, [r5, #28]
 80130c8:	69e8      	ldr	r0, [r5, #28]
 80130ca:	e7d6      	b.n	801307a <i2c_clock_config+0x4a>
 80130cc:	2119      	movs	r1, #25
 80130ce:	434c      	muls	r4, r1
 80130d0:	69eb      	ldr	r3, [r5, #28]
 80130d2:	fbb0 f4f4 	udiv	r4, r0, r4
 80130d6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80130da:	e7eb      	b.n	80130b4 <i2c_clock_config+0x84>
 80130dc:	000f4240 	andeq	r4, pc, r0, asr #4
 80130e0:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 80130e4:	000186a0 	andeq	r8, r1, r0, lsr #13
 80130e8:	00061a80 	andeq	r1, r6, r0, lsl #21

080130ec <i2c_ack_config>:
 80130ec:	6803      	ldr	r3, [r0, #0]
 80130ee:	2901      	cmp	r1, #1
 80130f0:	bf0c      	ite	eq
 80130f2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80130f6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80130fa:	6003      	str	r3, [r0, #0]
 80130fc:	4770      	bx	lr

080130fe <i2c_ackpos_config>:
 80130fe:	6803      	ldr	r3, [r0, #0]
 8013100:	b919      	cbnz	r1, 801310a <i2c_ackpos_config+0xc>
 8013102:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013106:	6003      	str	r3, [r0, #0]
 8013108:	4770      	bx	lr
 801310a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801310e:	e7fa      	b.n	8013106 <i2c_ackpos_config+0x8>

08013110 <i2c_master_addressing>:
 8013110:	3202      	adds	r2, #2
 8013112:	bf0c      	ite	eq
 8013114:	f021 0101 	biceq.w	r1, r1, #1
 8013118:	f041 0101 	orrne.w	r1, r1, #1
 801311c:	6101      	str	r1, [r0, #16]
 801311e:	4770      	bx	lr

08013120 <i2c_enable>:
 8013120:	6803      	ldr	r3, [r0, #0]
 8013122:	f043 0301 	orr.w	r3, r3, #1
 8013126:	6003      	str	r3, [r0, #0]
 8013128:	4770      	bx	lr

0801312a <i2c_start_on_bus>:
 801312a:	6803      	ldr	r3, [r0, #0]
 801312c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013130:	6003      	str	r3, [r0, #0]
 8013132:	4770      	bx	lr

08013134 <i2c_stop_on_bus>:
 8013134:	6803      	ldr	r3, [r0, #0]
 8013136:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801313a:	6003      	str	r3, [r0, #0]
 801313c:	4770      	bx	lr

0801313e <i2c_data_transmit>:
 801313e:	6101      	str	r1, [r0, #16]
 8013140:	4770      	bx	lr

08013142 <i2c_data_receive>:
 8013142:	6900      	ldr	r0, [r0, #16]
 8013144:	b2c0      	uxtb	r0, r0
 8013146:	4770      	bx	lr

08013148 <i2c_flag_get>:
 8013148:	098b      	lsrs	r3, r1, #6
 801314a:	5818      	ldr	r0, [r3, r0]
 801314c:	f001 011f 	and.w	r1, r1, #31
 8013150:	40c8      	lsrs	r0, r1
 8013152:	f000 0001 	and.w	r0, r0, #1
 8013156:	4770      	bx	lr

08013158 <i2c_flag_clear>:
 8013158:	f240 5301 	movw	r3, #1281	; 0x501
 801315c:	4299      	cmp	r1, r3
 801315e:	b510      	push	{r4, lr}
 8013160:	d102      	bne.n	8013168 <i2c_flag_clear+0x10>
 8013162:	6943      	ldr	r3, [r0, #20]
 8013164:	6983      	ldr	r3, [r0, #24]
 8013166:	bd10      	pop	{r4, pc}
 8013168:	2201      	movs	r2, #1
 801316a:	098c      	lsrs	r4, r1, #6
 801316c:	5823      	ldr	r3, [r4, r0]
 801316e:	f001 011f 	and.w	r1, r1, #31
 8013172:	fa02 f101 	lsl.w	r1, r2, r1
 8013176:	ea23 0101 	bic.w	r1, r3, r1
 801317a:	5021      	str	r1, [r4, r0]
 801317c:	e7f3      	b.n	8013166 <i2c_flag_clear+0xe>

0801317e <i2s_init>:
 801317e:	b510      	push	{r4, lr}
 8013180:	69c4      	ldr	r4, [r0, #28]
 8013182:	f424 647b 	bic.w	r4, r4, #4016	; 0xfb0
 8013186:	f024 0408 	bic.w	r4, r4, #8
 801318a:	0424      	lsls	r4, r4, #16
 801318c:	0c24      	lsrs	r4, r4, #16
 801318e:	431c      	orrs	r4, r3
 8013190:	4314      	orrs	r4, r2
 8013192:	430c      	orrs	r4, r1
 8013194:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
 8013198:	61c4      	str	r4, [r0, #28]
 801319a:	bd10      	pop	{r4, pc}

0801319c <i2s_psc_config>:
 801319c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131a0:	4698      	mov	r8, r3
 80131a2:	2302      	movs	r3, #2
 80131a4:	6203      	str	r3, [r0, #32]
 80131a6:	4b26      	ldr	r3, [pc, #152]	; (8013240 <i2s_psc_config+0xa4>)
 80131a8:	4617      	mov	r7, r2
 80131aa:	4298      	cmp	r0, r3
 80131ac:	bf0c      	ite	eq
 80131ae:	f44f 3300 	moveq.w	r3, #131072	; 0x20000
 80131b2:	f44f 2380 	movne.w	r3, #262144	; 0x40000
 80131b6:	4a23      	ldr	r2, [pc, #140]	; (8013244 <i2s_psc_config+0xa8>)
 80131b8:	4605      	mov	r5, r0
 80131ba:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80131bc:	460e      	mov	r6, r1
 80131be:	4018      	ands	r0, r3
 80131c0:	d036      	beq.n	8013230 <i2s_psc_config+0x94>
 80131c2:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80131c4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80131c8:	1f99      	subs	r1, r3, #6
 80131ca:	2908      	cmp	r1, #8
 80131cc:	d82c      	bhi.n	8013228 <i2s_psc_config+0x8c>
 80131ce:	3302      	adds	r3, #2
 80131d0:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80131d2:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80131d6:	1c42      	adds	r2, r0, #1
 80131d8:	481b      	ldr	r0, [pc, #108]	; (8013248 <i2s_psc_config+0xac>)
 80131da:	fbb0 f0f2 	udiv	r0, r0, r2
 80131de:	4358      	muls	r0, r3
 80131e0:	0040      	lsls	r0, r0, #1
 80131e2:	f5b8 7f00 	cmp.w	r8, #512	; 0x200
 80131e6:	f04f 010a 	mov.w	r1, #10
 80131ea:	d124      	bne.n	8013236 <i2s_psc_config+0x9a>
 80131ec:	0a04      	lsrs	r4, r0, #8
 80131ee:	434c      	muls	r4, r1
 80131f0:	fbb4 f4f6 	udiv	r4, r4, r6
 80131f4:	260a      	movs	r6, #10
 80131f6:	3405      	adds	r4, #5
 80131f8:	fbb4 f4f6 	udiv	r4, r4, r6
 80131fc:	f004 0301 	and.w	r3, r4, #1
 8013200:	0864      	lsrs	r4, r4, #1
 8013202:	1ea2      	subs	r2, r4, #2
 8013204:	2afd      	cmp	r2, #253	; 0xfd
 8013206:	bf86      	itte	hi
 8013208:	2300      	movhi	r3, #0
 801320a:	2402      	movhi	r4, #2
 801320c:	021b      	lslls	r3, r3, #8
 801320e:	431c      	orrs	r4, r3
 8013210:	ea44 0408 	orr.w	r4, r4, r8
 8013214:	622c      	str	r4, [r5, #32]
 8013216:	69eb      	ldr	r3, [r5, #28]
 8013218:	f023 0307 	bic.w	r3, r3, #7
 801321c:	61eb      	str	r3, [r5, #28]
 801321e:	69ea      	ldr	r2, [r5, #28]
 8013220:	4317      	orrs	r7, r2
 8013222:	61ef      	str	r7, [r5, #28]
 8013224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013228:	2b0f      	cmp	r3, #15
 801322a:	bf08      	it	eq
 801322c:	2314      	moveq	r3, #20
 801322e:	e7cf      	b.n	80131d0 <i2s_psc_config+0x34>
 8013230:	f7fe fbba 	bl	80119a8 <rcu_clock_freq_get>
 8013234:	e7d5      	b.n	80131e2 <i2s_psc_config+0x46>
 8013236:	b90f      	cbnz	r7, 801323c <i2s_psc_config+0xa0>
 8013238:	0944      	lsrs	r4, r0, #5
 801323a:	e7d8      	b.n	80131ee <i2s_psc_config+0x52>
 801323c:	0984      	lsrs	r4, r0, #6
 801323e:	e7d6      	b.n	80131ee <i2s_psc_config+0x52>
 8013240:	40003800 	andmi	r3, r0, r0, lsl #16
 8013244:	40021000 	andmi	r1, r2, r0
 8013248:	017d7840 	cmneq	sp, r0, asr #16

0801324c <i2s_enable>:
 801324c:	69c3      	ldr	r3, [r0, #28]
 801324e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8013252:	61c3      	str	r3, [r0, #28]
 8013254:	4770      	bx	lr

08013256 <i2s_disable>:
 8013256:	69c3      	ldr	r3, [r0, #28]
 8013258:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801325c:	61c3      	str	r3, [r0, #28]
 801325e:	4770      	bx	lr

08013260 <spi_dma_enable>:
 8013260:	6843      	ldr	r3, [r0, #4]
 8013262:	b919      	cbnz	r1, 801326c <spi_dma_enable+0xc>
 8013264:	f043 0302 	orr.w	r3, r3, #2
 8013268:	6043      	str	r3, [r0, #4]
 801326a:	4770      	bx	lr
 801326c:	f043 0301 	orr.w	r3, r3, #1
 8013270:	e7fa      	b.n	8013268 <spi_dma_enable+0x8>
	...

Disassembly of section .rodata:

08013274 <vtable for DisplayHandler-0x11c>:
 8013274:	00000003 	andeq	r0, r0, r3
 8013278:	000000aa 	andeq	r0, r0, sl, lsr #1
 801327c:	00000006 	andeq	r0, r0, r6
 8013280:	00000000 	andeq	r0, r0, r0
 8013284:	01ff0000 	mvnseq	r0, r0
 8013288:	00000001 	andeq	r0, r0, r1
 801328c:	00000001 	andeq	r0, r0, r1
 8013290:	00000001 	andeq	r0, r0, r1
	...
 801329c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80132a0:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80132a4:	00000000 	andeq	r0, r0, r0
 80132a8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80132ac:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 80132b0:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 80132b4:	70797464 	rsbsvc	r7, r9, r4, ror #8
 80132b8:	00690065 	rsbeq	r0, r9, r5, rrx
 80132bc:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 80132c0:	656c2f6f 	strbvs	r2, [ip, #-3951]!	; 0xfffff091
 80132c4:	756f6364 	strbvc	r6, [pc, #-868]!	; 8012f68 <enet_rxframe_drop+0x18>
 80132c8:	2f00746e 	svccs	0x0000746e
 80132cc:	6f666e69 	svcvs	0x00666e69
 80132d0:	6f72672f 	svcvs	0x0072672f
 80132d4:	6f637075 	svcvs	0x00637075
 80132d8:	00746e75 	rsbseq	r6, r4, r5, ror lr
 80132dc:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 80132e0:	37343a37 			; <UNDEFINED> instruction: 0x37343a37
 80132e4:	62654600 	rsbvs	r4, r5, #0, 12
 80132e8:	20333220 	eorscs	r3, r3, r0, lsr #4
 80132ec:	32323032 	eorscc	r3, r2, #50	; 0x32
 80132f0:	43534f00 	cmpmi	r3, #0, 30
 80132f4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80132f8:	20726576 	rsbscs	r6, r2, r6, ror r5
 80132fc:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8013300:	7869506d 	stmdavc	r9!, {r0, r2, r3, r5, r6, ip, lr}^
 8013304:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8013308:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 801330c:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8013310:	317b2072 	cmncc	fp, r2, ror r0
 8013314:	6e552078 	mrcvs	0, 2, r2, cr5, cr8, {3}
 8013318:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 801331c:	1b7d6573 	blne	9f6c8f0 <__exidx_end+0x1f5781c>
 8013320:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 8013324:	6f5f2e00 	svcvs	0x005f2e00
 8013328:	74006373 	strvc	r6, [r0], #-883	; 0xfffffc8d
 801332c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	; 0xfffffe1c
 8013330:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8013334:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
 8013338:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 801333c:	6f6e0070 	svcvs	0x006e0070
 8013340:	4f3d6564 	svcmi	0x003d6564
 8013344:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013348:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 801334c:	73250072 			; <UNDEFINED> instruction: 0x73250072
 8013350:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8013354:	00642547 	rsbeq	r2, r4, r7, asr #10
 8013358:	2043534f 	subcs	r5, r3, pc, asr #6
 801335c:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8013360:	0031206c 	eorseq	r2, r1, ip, rrx
 8013364:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8013368:	37303146 	ldrcc	r3, [r0, -r6, asr #2]!
 801336c:	50490052 	subpl	r0, r9, r2, asr r0
 8013370:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013374:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013378:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801337c:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8013380:	3a6e4900 	bcc	9ba5788 <__exidx_end+0x1b906b4>
 8013384:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8013388:	3a74754f 	bcc	9d308cc <__exidx_end+0x1d1b7f8>
 801338c:	00642520 	rsbeq	r2, r4, r0, lsr #10

08013390 <vtable for DisplayHandler>:
	...
 8013398:	080088bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, fp, pc}
 801339c:	080088e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, fp, pc}
 80133a0:	080089c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, pc}

080133a4 <vtable for PixelDmxStartStop>:
	...
 80133ac:	080088bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, pc}
 80133b0:	080088fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, fp, pc}
 80133b4:	080088c1 	stmdaeq	r0, {r0, r6, r7, fp, pc}
 80133b8:	080088d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, pc}

080133bc <vtable for Handler>:
	...
 80133c4:	080088e1 	stmdaeq	r0, {r0, r5, r6, r7, fp, pc}
 80133c8:	080088ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, fp, pc}
 80133cc:	08008f8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, pc}
 80133d0:	08008f85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, pc}
 80133d4:	08008909 	stmdaeq	r0, {r0, r3, r8, fp, pc}

080133d8 <CSWTCH.67>:
 80133d8:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80133dc:	 			; <UNDEFINED> instruction: 0x312e3146

080133dd <SOFTWARE_VERSION>:
 80133dd:	00312e31 	eorseq	r2, r1, r1, lsr lr
 80133e1:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 80133e5:	642f0031 	strtvs	r0, [pc], #-49	; 80133ed <SOFTWARE_VERSION+0x10>
 80133e9:	2f31786d 	svccs	0x0031786d
 80133ed:	322f002a 	eorcc	r0, pc, #42	; 0x2a
 80133f1:	6d642f00 	stclvs	15, cr2, [r4, #-0]
 80133f5:	622f3178 	eorvs	r3, pc, #120, 2
 80133f9:	6b63616c 	blvs	98eb9b1 <__exidx_end+0x18d68dd>
 80133fd:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8013401:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8013405:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
 8013409:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 801340d:	33444700 	movtcc	r4, #18176	; 0x4700
 8013411:	2f004632 	svccs	0x00004632
 8013415:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8013419:	6f702f00 	svcvs	0x00702f00
 801341d:	2f00676e 	svccs	0x0000676e
 8013421:	6f666e69 	svcvs	0x00666e69
 8013425:	00736f2f 	rsbseq	r6, r3, pc, lsr #30
 8013429:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 801342d:	6f6d2f6f 	svcvs	0x006d2f6f
 8013431:	006c6564 	rsbeq	r6, ip, r4, ror #10
 8013435:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8013439:	6f732f6f 	svcvs	0x00732f6f
 801343d:	65590063 	ldrbvs	r0, [r9, #-99]	; 0xffffff9d
 8013441:	6f4e0073 	svcvs	0x004e0073
 8013445:	43534f00 	cmpmi	r3, #0, 30
 8013449:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 801344d:	0a726576 	beq	9caca2d <__exidx_end+0x1c97959>
 8013451:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 8013455:	696d6f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013459:	5020676e 	eorpl	r6, r0, lr, ror #14
 801345d:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8013461:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013465:	3a202020 	bcc	881b4ed <__exidx_end+0x806419>
 8013469:	0a642520 	beq	991c8f1 <__exidx_end+0x190781d>
 801346d:	754f2000 	strbvc	r2, [pc, #-0]	; 8013475 <SOFTWARE_VERSION+0x98>
 8013471:	696f6774 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
 8013475:	5020676e 	eorpl	r6, r0, lr, ror #14
 8013479:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801347d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013481:	3a202020 	bcc	881b509 <__exidx_end+0x806435>
 8013485:	0a642520 	beq	991c90d <__exidx_end+0x1907839>
 8013489:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801348d:	61502058 	cmpvs	r0, r8, asr r0
 8013491:	20206874 	eorcs	r6, r0, r4, ror r8
 8013495:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013499:	20202020 	eorcs	r2, r0, r0, lsr #32
 801349d:	3a202020 	bcc	881b525 <__exidx_end+0x806451>
 80134a1:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80134a5:	73255b5d 			; <UNDEFINED> instruction: 0x73255b5d
 80134a9:	20000a5d 	andcs	r0, r0, sp, asr sl
 80134ad:	616c4220 	cmnvs	ip, r0, lsr #4
 80134b1:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8012956 <enet_descriptors_chain_init+0x62>
 80134b5:	61502074 	cmpvs	r0, r4, ror r0
 80134b9:	20206874 	eorcs	r6, r0, r4, ror r8
 80134bd:	20202020 	eorcs	r2, r0, r0, lsr #32
 80134c1:	5b203a20 	blpl	8821d49 <__exidx_end+0x80cc75>
 80134c5:	0a5d7325 	beq	9770161 <__exidx_end+0x175b08d>
 80134c9:	61502000 	cmpvs	r0, r0
 80134cd:	61697472 	smcvs	38722	; 0x9742
 80134d1:	7254206c 	subsvc	r2, r4, #108	; 0x6c
 80134d5:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 80134d9:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 80134dd:	3a206e6f 	bcc	882eea1 <__exidx_end+0x819dcd>
 80134e1:	0a732520 	beq	9cdc969 <__exidx_end+0x1cc7895>
	...

080134e6 <OscServerMsgConst::START>:
 80134e6:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80134ea:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80134ee:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 80134f2:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 80134f6:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80134fa:	00726576 	rsbseq	r6, r2, r6, ror r5

080134fe <OscServerMsgConst::PARAMS>:
 80134fe:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8013502:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8013506:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801350a:	2043534f 	subcs	r5, r3, pc, asr #6
 801350e:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013512:	 	svcmi	0x00007265

08013515 <OscServerMsgConst::STARTED>:
 8013515:	2043534f 	subcs	r5, r3, pc, asr #6
 8013519:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801351d:	73207265 			; <UNDEFINED> instruction: 0x73207265
 8013521:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8013525:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8013529:	3a227325 	bcc	88b01c5 <__exidx_end+0x89b0f1>
 801352d:	002c6425 	eoreq	r6, ip, r5, lsr #8
 8013531:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8013535:	000a6425 	andeq	r6, sl, r5, lsr #8
 8013539:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801353d:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 8013541:	23002c22 	movwcs	r2, #3106	; 0xc22
 8013545:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8013549:	 	andvc	r0, r0, r3, ror sl

0801354c <OscServerParamsConst::TRANSMISSION>:
 801354c:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8013550:	5f6c6169 	svcpl	0x006c6169
 8013554:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 8013558:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 801355c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

08013561 <OscServerParamsConst::PATH_BLACKOUT>:
 8013561:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8013565:	616c625f 	cmnvs	ip, pc, asr r2
 8013569:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8012a0e <enet_frame_transmit+0xa>
 801356d:	 	cmnvs	r0, r4, ror r0

0801356f <OscServerParamsConst::PATH>:
 801356f:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

08013574 <OscServerParamsConst::FILE_NAME>:
 8013574:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8013578:	00747874 	rsbseq	r7, r4, r4, ror r8

0801357c <OscServerParamsConst::PATH_INFO>:
 801357c:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8013580:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 8013584:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

08013586 <OscParamsConst::INCOMING_PORT>:
 8013586:	6f636e69 	svcvs	0x00636e69
 801358a:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 801358e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8013592:	 	strbvc	r0, [pc, #-116]!	; 8013526 <OscServerMsgConst::STARTED+0x11>

08013594 <OscParamsConst::OUTGOING_PORT>:
 8013594:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8013598:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 801359c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80135a0:	00000074 	andeq	r0, r0, r4, ror r0

080135a4 <vtable for WS28xxDmx>:
	...
 80135ac:	0800a475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, sp, pc}
 80135b0:	0800a495 	stmdaeq	r0, {r0, r2, r4, r7, sl, sp, pc}
 80135b4:	0800a4cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, sp, pc}
 80135b8:	0800a517 	stmdaeq	r0, {r0, r1, r2, r4, r8, sl, sp, pc}
 80135bc:	0800a57f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, sl, sp, pc}
 80135c0:	0800a4a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, sl, sp, pc}
 80135c4:	0800ae35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp, sp, pc}
 80135c8:	0800a4e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, sp, pc}
 80135cc:	0800a46b 	stmdaeq	r0, {r0, r1, r3, r5, r6, sl, sp, pc}
 80135d0:	0800a46f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, sl, sp, pc}
 80135d4:	0800a53f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, sl, sp, pc}
 80135d8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80135dc:	2a2e253a 	bcs	8b9cacc <__exidx_end+0xb879f8>
 80135e0:	23002c66 	movwcs	r2, #3174	; 0xc66
 80135e4:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80135e8:	0a662a2e 	beq	999dea8 <__exidx_end+0x1988dd4>
 80135ec:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80135f0:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 80135f4:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 80135f8:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 80135fc:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013600:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8013604:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8013608:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 801360c:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 8013610:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 8013614:	47002973 	smlsdxmi	r0, r3, r9, r2
 8013618:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 801361c:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8013620:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8013624:	6162206b 	cmnvs	r2, fp, rrx
 8013628:	20646573 	rsbcs	r6, r4, r3, ror r5
 801362c:	70696863 	rsbvc	r6, r9, r3, ror #16
 8013630:	50410073 	subpl	r0, r1, r3, ror r0
 8013634:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 8013638:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 801363c:	00323238 	eorseq	r3, r2, r8, lsr r2
 8013640:	00584d44 	subseq	r4, r8, r4, asr #26
 8013644:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 8013648:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 801364c:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8013650:	78695000 	stmdavc	r9!, {ip, lr}^
 8013654:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 8013658:	7020584d 	eorvc	r5, r0, sp, asr #16
 801365c:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 8013660:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 8013664:	20000a73 	andcs	r0, r0, r3, ror sl
 8013668:	756f7247 	strbvc	r7, [pc, #-583]!	; 8013429 <SOFTWARE_VERSION+0x4c>
 801366c:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8013670:	756f6320 	strbvc	r6, [pc, #-800]!	; 8013358 <_etext+0xe4>
 8013674:	3a20746e 	bcc	8830834 <__exidx_end+0x81b760>
 8013678:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801367c:	6f72475b 	svcvs	0x0072475b
 8013680:	20737075 	rsbscs	r7, r3, r5, ror r0
 8013684:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8013688:	55000a5d 	strpl	r0, [r0, #-2653]	; 0xfffff5a3
 801368c:	6f6e6b6e 	svcvs	0x006e6b6e
 8013690:	55006e77 	strpl	r6, [r0, #-3703]	; 0xfffff189
 8013694:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
 8013698:	64656e69 	strbtvs	r6, [r5], #-3689	; 0xfffff197
	...

0801369d <PixelType::MAPS>:
 801369d:	00424752 	subeq	r4, r2, r2, asr r7
 80136a1:	00474252 	subeq	r4, r7, r2, asr r2
 80136a5:	00425247 	subeq	r5, r2, r7, asr #4
 80136a9:	00524247 	subseq	r4, r2, r7, asr #4
 80136ad:	00475242 	subeq	r5, r7, r2, asr #4
 80136b1:	00524742 	subseq	r4, r2, r2, asr #14

080136b5 <PixelType::TYPES>:
 80136b5:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136b9:	00003130 	andeq	r3, r0, r0, lsr r1
 80136bd:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136c1:	00003131 	andeq	r3, r0, r1, lsr r1
 80136c5:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136c9:	00003231 	andeq	r3, r0, r1, lsr r2
 80136cd:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136d1:	00423231 	subeq	r3, r2, r1, lsr r2
 80136d5:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136d9:	00003331 	andeq	r3, r0, r1, lsr r3
 80136dd:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80136e1:	00003531 	andeq	r3, r0, r1, lsr r5
 80136e5:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80136e9:	00003231 	andeq	r3, r0, r1, lsr r2
 80136ed:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80136f1:	00573231 	subseq	r3, r7, r1, lsr r2
 80136f5:	31534355 	cmpcc	r3, r5, asr r3
 80136f9:	00333039 	eorseq	r3, r3, r9, lsr r0
 80136fd:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8013701:	00333039 	eorseq	r3, r3, r9, lsr r0
 8013705:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8013709:	00003231 	andeq	r3, r0, r1, lsr r2
 801370d:	31415041 	cmpcc	r1, r1, asr #32
 8013711:	00003230 	andeq	r3, r0, r0, lsr r2
 8013715:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8013719:	00003232 	andeq	r3, r0, r2, lsr r2
 801371d:	31383950 	teqcc	r8, r0, asr r9
 8013721:	00000033 	andeq	r0, r0, r3, lsr r0
 8013725:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8013729:	6170206c 	cmnvs	r0, ip, rrx
 801372d:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8013731:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
 8013735:	5420000a 	strtpl	r0, [r0], #-10
 8013739:	20657079 	rsbcs	r7, r5, r9, ror r0
 801373d:	3a202020 	bcc	881b7c5 <__exidx_end+0x8066f1>
 8013741:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8013745:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8013749:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 801374d:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8013751:	3a202020 	bcc	881b7d9 <__exidx_end+0x806705>
 8013755:	0a642520 	beq	991cbdd <__exidx_end+0x1907b09>
 8013759:	614d2000 	mrsvs	r2, (UNDEF: 77)
 801375d:	6e697070 	mcrvs	0, 3, r7, cr9, cr0, {3}
 8013761:	203a2067 	eorscs	r2, sl, r7, rrx
 8013765:	5b207325 	blpl	8830401 <__exidx_end+0x81b32d>
 8013769:	0a5d6425 	beq	976c805 <__exidx_end+0x1757731>
 801376d:	30542000 	subscc	r2, r4, r0
 8013771:	20202048 	eorcs	r2, r0, r8, asr #32
 8013775:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013779:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 801377d:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8013781:	0a5d5825 	beq	976981d <__exidx_end+0x1754749>
 8013785:	31542000 	cmpcc	r4, r0
 8013789:	20202048 	eorcs	r2, r0, r8, asr #32
 801378d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013791:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 8013795:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8013799:	0a5d5825 	beq	9769835 <__exidx_end+0x1754761>
 801379d:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80137a1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80137a5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80137a9:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80137ad:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80137b1:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 80137b5:	6425000a 	strtvs	r0, [r5], #-10
 80137b9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80137bd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80137c1:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 80137c5:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80137c9:	000a6425 	andeq	r6, sl, r5, lsr #8
 80137cd:	4f006e4f 	svcmi	0x00006e4f
 80137d1:	64006666 	strvs	r6, [r0], #-1638	; 0xfffff99a
 80137d5:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80137d9:	253a7961 	ldrcs	r7, [sl, #-2401]!	; 0xfffff69f
 80137dd:	74000a73 	strvc	r0, [r0], #-2675	; 0xfffff58d
 80137e1:	3a707466 	bcc	9c30981 <__exidx_end+0x1c1b8ad>
 80137e5:	000a7325 	andeq	r7, sl, r5, lsr #6
 80137e9:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80137ed:	3a6e6f69 	bcc	9baf599 <__exidx_end+0x1b9a4c5>
 80137f1:	75007325 	strvc	r7, [r0, #-805]	; 0xfffffcdb
 80137f5:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80137f9:	25203a65 	strcs	r3, [r0, #-2661]!	; 0xfffff59b
 80137fd:	000a7375 	andeq	r7, sl, r5, ror r3
 8013801:	4f525245 	svcmi	0x00525245
 8013805:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8013809:	000a7465 	andeq	r7, sl, r5, ror #8
 801380d:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8013811:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8013815:	616c7073 	smcvs	50947	; 0xc703
 8013819:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 801381d:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8013821:	000a2123 	andeq	r2, sl, r3, lsr #2
 8013825:	4f525245 	svcmi	0x00525245
 8013829:	0a3f2352 	beq	8fdc579 <__exidx_end+0xfc74a5>
 801382d:	62657200 	rsbvs	r7, r5, #0, 4
 8013831:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8013835:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8013839:	00237473 	eoreq	r7, r3, r3, ror r4
 801383d:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8013841:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8013845:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013849:	76002365 	strvc	r2, [r0], -r5, ror #6
 801384d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013851:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8013855:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8013859:	63616600 	cmnvs	r1, #0, 12
 801385d:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013861:	 	tstmi	r0, r3, lsr #6

08013864 <s_Node>:
 8013864:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8013868:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8013874:	41730000 	cmnmi	r3, r0
 8013878:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801387c:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8013888:	2043534f 	subcs	r5, r3, pc, asr #6
 801388c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013890:	00007265 	andeq	r7, r0, r5, ror #4
 8013894:	00000000 	andeq	r0, r0, r0
 8013898:	544c0000 	strbpl	r0, [ip], #-0
 801389c:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80138ac:	2043534f 	subcs	r5, r3, pc, asr #6
 80138b0:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80138b4:	0000746e 	andeq	r7, r0, lr, ror #8
 80138b8:	00000000 	andeq	r0, r0, r0
 80138bc:	44520000 	ldrbmi	r0, [r2], #-0
 80138c0:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80138c4:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80138c8:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80138cc:	0000796c 	andeq	r7, r0, ip, ror #18
 80138d0:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80138d4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80138e0:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80138e4:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80138f4:	00504444 	subseq	r4, r0, r4, asr #8
	...

08013906 <s_Output>:
 8013906:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8013912:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801391e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8013922:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8013926:	00000000 	andeq	r0, r0, r0
 801392a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801392e:	0000006c 	andeq	r0, r0, ip, rrx
 8013932:	00000000 	andeq	r0, r0, r0
 8013936:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801393a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 801393e:	00000000 	andeq	r0, r0, r0
 8013942:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 801394e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8013952:	00006769 	andeq	r6, r0, r9, ror #14
 8013956:	00000000 	andeq	r0, r0, r0
 801395a:	70657453 	rsbvc	r7, r5, r3, asr r4
 801395e:	00726570 	rsbseq	r6, r2, r0, ror r5
 8013962:	00000000 	andeq	r0, r0, r0
 8013966:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801396a:	00007265 	andeq	r7, r0, r5, ror #4
 801396e:	00000000 	andeq	r0, r0, r0
 8013972:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8013976:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801397a:	00000000 	andeq	r0, r0, r0
 801397e:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8013982:	00006c61 	andeq	r6, r0, r1, ror #24
 8013986:	00000000 	andeq	r0, r0, r0
 801398a:	20424752 	subcs	r4, r2, r2, asr r7
 801398e:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8013992:	0000006c 	andeq	r0, r0, ip, rrx
	...

08013998 <RemoteConfig::s_GET>:
 8013998:	0800cf65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, fp, lr, pc}
 801399c:	00000000 	andeq	r0, r0, r0
 80139a0:	0801382e 	stmdaeq	r1, {r1, r2, r3, r5, fp, ip, sp}
 80139a4:	00000008 	andeq	r0, r0, r8
 80139a8:	0800c3f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, lr, pc}
 80139ac:	00000000 	andeq	r0, r0, r0
 80139b0:	08013837 	stmdaeq	r1, {r0, r1, r2, r4, r5, fp, ip, sp}
 80139b4:	00000005 	andeq	r0, r0, r5
 80139b8:	0800c3f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, lr, pc}
 80139bc:	00000000 	andeq	r0, r0, r0
 80139c0:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 80139c4:	00000006 	andeq	r0, r0, r6
 80139c8:	0800c5fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, lr, pc}
 80139cc:	00000000 	andeq	r0, r0, r0
 80139d0:	08013844 	stmdaeq	r1, {r2, r6, fp, ip, sp}
 80139d4:	00000007 	andeq	r0, r0, r7
 80139d8:	0800c5b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, lr, pc}
 80139dc:	00000000 	andeq	r0, r0, r0
 80139e0:	0801384c 	stmdaeq	r1, {r2, r3, r6, fp, ip, sp}
 80139e4:	00000008 	andeq	r0, r0, r8
 80139e8:	0800c4e1 	stmdaeq	r0, {r0, r5, r6, r7, sl, lr, pc}
 80139ec:	00000000 	andeq	r0, r0, r0
 80139f0:	08013813 	stmdaeq	r1, {r0, r1, r4, fp, ip, sp}
 80139f4:	00000008 	andeq	r0, r0, r8
 80139f8:	0800c87d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, lr, pc}
 80139fc:	00000000 	andeq	r0, r0, r0
 8013a00:	08013855 	stmdaeq	r1, {r0, r2, r4, r6, fp, ip, sp}
 8013a04:	00010004 	andeq	r0, r1, r4
 8013a08:	0800c561 	stmdaeq	r0, {r0, r5, r6, r8, sl, lr, pc}
 8013a0c:	00000000 	andeq	r0, r0, r0
 8013a10:	0801380d 	stmdaeq	r1, {r0, r2, r3, fp, ip, sp}
 8013a14:	00000005 	andeq	r0, r0, r5
 8013a18:	0800cbd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, lr, pc}
 8013a1c:	00000000 	andeq	r0, r0, r0
 8013a20:	0801385a 	stmdaeq	r1, {r1, r3, r4, r6, fp, ip, sp}
 8013a24:	00000009 	andeq	r0, r0, r9

08013a28 <RemoteConfig::s_SET>:
 8013a28:	0800c53d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, lr, pc}
 8013a2c:	00000000 	andeq	r0, r0, r0
 8013a30:	0801380d 	stmdaeq	r1, {r0, r2, r3, fp, ip, sp}
 8013a34:	00010005 	andeq	r0, r1, r5
 8013a38:	0800c651 	stmdaeq	r0, {r0, r4, r6, r9, sl, lr, pc}
 8013a3c:	00000000 	andeq	r0, r0, r0
 8013a40:	08013813 	stmdaeq	r1, {r0, r1, r4, fp, ip, sp}
 8013a44:	00010008 	andeq	r0, r1, r8
 8013a48:	6f626552 	svcvs	0x00626552
 8013a4c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8013a50:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8013a54:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8013a58:	6f6f6265 	svcvs	0x006f6265
 8013a5c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8013a60:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8013a64:	6f637200 	svcvs	0x00637200
 8013a68:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8013a6c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013a70:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8013a74:	6b726f77 	blvs	9caf858 <__exidx_end+0x1c9a784>
 8013a78:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013a7c:	63736f00 	cmnvs	r3, #0, 30
 8013a80:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013a84:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 8013a88:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8013a8c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013a90:	00000000 	andeq	r0, r0, r0

08013a94 <RemoteConfig::s_TXT>:
 8013a94:	0800c885 	stmdaeq	r0, {r0, r2, r7, fp, lr, pc}
 8013a98:	00000000 	andeq	r0, r0, r0
 8013a9c:	0800cb21 	stmdaeq	r0, {r0, r5, r8, r9, fp, lr, pc}
 8013aa0:	00000000 	andeq	r0, r0, r0
 8013aa4:	08013a65 	stmdaeq	r1, {r0, r2, r5, r6, r9, fp, ip, sp}
 8013aa8:	0000000b 	andeq	r0, r0, fp
 8013aac:	0000000c 	andeq	r0, r0, ip
 8013ab0:	0800c8b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, lr, pc}
 8013ab4:	00000000 	andeq	r0, r0, r0
 8013ab8:	0800cb55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, fp, lr, pc}
 8013abc:	00000000 	andeq	r0, r0, r0
 8013ac0:	08013a71 	stmdaeq	r1, {r0, r4, r5, r6, r9, fp, ip, sp}
 8013ac4:	0000000b 	andeq	r0, r0, fp
 8013ac8:	00000000 	andeq	r0, r0, r0
 8013acc:	0800c8dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, lr, pc}
 8013ad0:	00000000 	andeq	r0, r0, r0
 8013ad4:	0800cb7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, lr, pc}
 8013ad8:	00000000 	andeq	r0, r0, r0
 8013adc:	08013a7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, fp, ip, sp}
 8013ae0:	00000007 	andeq	r0, r0, r7
 8013ae4:	00000008 	andeq	r0, r0, r8
 8013ae8:	0800c909 	stmdaeq	r0, {r0, r3, r8, fp, lr, pc}
 8013aec:	00000000 	andeq	r0, r0, r0
 8013af0:	0800cba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp, lr, pc}
 8013af4:	00000000 	andeq	r0, r0, r0
 8013af8:	08013a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, ip, sp}
 8013afc:	0000000b 	andeq	r0, r0, fp
 8013b00:	00000003 	andeq	r0, r0, r3
 8013b04:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8013b08:	4f500054 	svcmi	0x00500054
 8013b0c:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8013b10:	00505454 	subseq	r5, r0, r4, asr r4
 8013b14:	31000a20 	tstcc	r0, r0, lsr #20
 8013b18:	3a00312e 	bcc	801ffd8 <__exidx_end+0xaf04>
 8013b1c:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8013b20:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8013b24:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8013b28:	3b200065 	blcc	8813cc4 <__exidx_end+0x7febf0>
 8013b2c:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8013b30:	6163696c 	cmnvs	r3, ip, ror #18
 8013b34:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013b38:	6f736a2f 	svcvs	0x00736a2f
 8013b3c:	6f43006e 	svcvs	0x0043006e
 8013b40:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013b44:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013b48:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013b4c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8013b50:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8013b54:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013b58:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8013b5c:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013b60:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8013b64:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8013b68:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8013b6c:	2f00736a 	svccs	0x0000736a
 8013b70:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8013b74:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8013b78:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8013b7c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013b80:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8013b84:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013b88:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8013b8c:	616c7073 	smcvs	50947	; 0xc703
 8013b90:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8013b94:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8013b98:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8013b9c:	6f736a2f 	svcvs	0x00736a2f
 8013ba0:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8013ba4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013ba8:	62657200 	rsbvs	r7, r5, #0, 4
 8013bac:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8013bb0:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8013bb4:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8013bb8:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8013bbc:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8013bc0:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8013bc4:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013bc8:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013bcc:	0a3e6c6d 	beq	8faed88 <__exidx_end+0xf99cb4>
 8013bd0:	6165683c 	cmnvs	r5, ip, lsr r8
 8013bd4:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013bd8:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013bdc:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8013be0:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8013be4:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013be8:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013bec:	6165682f 	cmnvs	r5, pc, lsr #16
 8013bf0:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8013bf4:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013bf8:	31683c3e 	cmncc	r8, lr, lsr ip
 8013bfc:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8013c00:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8013c04:	6f622f3c 	svcvs	0x00622f3c
 8013c08:	0a3e7964 	beq	8fb21a0 <__exidx_end+0xf9d0cc>
 8013c0c:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8013c10:	0a3e6c6d 	beq	8faedcc <__exidx_end+0xf99cf8>
 8013c14:	71655200 	cmnvc	r5, r0, lsl #4
 8013c18:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8013c1c:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8013c20:	20797469 	rsbscs	r7, r9, r9, ror #8
 8013c24:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013c28:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8013c2c:	6f4e0065 	svcvs	0x004e0065
 8013c30:	6f462074 	svcvs	0x00462074
 8013c34:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8013c38:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8013c3c:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8013c40:	20495255 	subcs	r5, r9, r5, asr r2
 8013c44:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013c48:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8013c4c:	72655600 	rsbvc	r5, r5, #0, 12
 8013c50:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8013c54:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8013c5c <RemoteConfig::s_TXT+0x1c8>
 8013c58:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8013c5c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013c60:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8013c64:	6f687465 	svcvs	0x00687465
 8013c68:	6f4e2064 	svcvs	0x004e2064
 8013c6c:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8013c70:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8013c74:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8013c78:	61420064 	cmpvs	r2, r4, rrx
 8013c7c:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8013c80:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8013c84:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 8013c88:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8013c8c:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8013c90:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8013c94:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 8013c98:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8013c9c:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8013ca0:	20726576 	rsbscs	r6, r2, r6, ror r5
 8013ca4:	6f727245 	svcvs	0x00727245
 8013ca8:	4b4f0072 	blmi	93d3e78 <__exidx_end+0x13beda4>
 8013cac:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8013cb0:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8013cb4:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8013cb8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013cbc:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013cc0:	0a3e6c6d 	beq	8faee7c <__exidx_end+0xf99da8>
 8013cc4:	6165683c 	cmnvs	r5, ip, lsr r8
 8013cc8:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013ccc:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013cd0:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8013cd4:	2f3c7325 	svccs	0x003c7325
 8013cd8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013cdc:	2f3c3e65 	svccs	0x003c3e65
 8013ce0:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013ce4:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8013ce8:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013cec:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8013cf0:	2f3c7325 	svccs	0x003c7325
 8013cf4:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8013cf8:	646f622f 	strbtvs	r6, [pc], #-559	; 8013d00 <RemoteConfig::s_TXT+0x26c>
 8013cfc:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8013d00:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013d04:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8013d08:	50545448 	subspl	r5, r4, r8, asr #8
 8013d0c:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8013d10:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8013d14:	0a0d7325 	beq	83709b0 <__exidx_end+0x35b8dc>
 8013d18:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013d1c:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013d20:	0a0d7325 	beq	83709bc <__exidx_end+0x35b8e8>
 8013d24:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013d28:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013d2c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8013d30:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013d34:	6f430a0d 	svcvs	0x00430a0d
 8013d38:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013d3c:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013d40:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013d44:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8013d48:	6f430a0d 	svcvs	0x00430a0d
 8013d4c:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8013d50:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013d54:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8013d58:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8013d5c:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08013d60 <contentType>:
 8013d60:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013d64:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013d68:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8013d80:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013d84:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8013da0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013da4:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8013da8:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8013dac:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8013dc0:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8013dc4:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8013dc8:	2f6e6f69 	svccs	0x006e6f69
 8013dcc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08013de0 <RemoteConfigConst::PARAMS_DISABLE>:
 8013de0:	61736964 	cmnvs	r3, r4, ror #18
 8013de4:	00656c62 	rsbeq	r6, r5, r2, ror #24

08013de8 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8013de8:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8013dec:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8013df0:	00747874 	rsbseq	r7, r4, r4, ror r8

08013df4 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8013df4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013df8:	5f79616c 	svcpl	0x0079616c
 8013dfc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013e01 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8013e01:	61736964 	cmnvs	r3, r4, ror #18
 8013e05:	5f656c62 	svcpl	0x00656c62
 8013e09:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8013e0d:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013e0f <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8013e0f:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013e13:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8013e17:	6f6f6265 	svcvs	0x006f6265
 8013e1b:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08013e1d <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8013e1d:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013e21:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80138bd <s_Node+0x59>
 8013e25:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013e29:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013e2b <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8013e2b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013e2f:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8013e33:	6f746361 	svcvs	0x00746361
 8013e37:	7b007972 	blvc	8032407 <__exidx_end+0x1d333>
 8013e3b:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8013e3f:	7b3a2274 	blvc	8e9c817 <__exidx_end+0xe87743>
 8013e43:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8013e47:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8013e4b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013e4f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013e53:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8013e57:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8013e5b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013e5f:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013e63:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8013e67:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013e6b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013e6f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013e73:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013e77:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013e7b:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013e7f:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013e83:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013e87:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013e8b:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8013e8f:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8013e93:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8013e97:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013e9b:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013e9f:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013ea3:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013ea7:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013eab:	616f6222 	cmnvs	pc, r2, lsr #4
 8013eaf:	3a226472 	bcc	88ad07f <__exidx_end+0x897fab>
 8013eb3:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013eb7:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8013ebb:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8013ebf:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8013ec3:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8013ec7:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013ecb:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013ecf:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8013ed3:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8013ed7:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8013edb:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013edf:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8013ee3:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013ee7:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8013eeb:	7b000a7d 	blvc	80168e7 <__exidx_end+0x1813>
 8013eef:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013ef3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013ef7:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8013efb:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013eff:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8013f03:	7b3a2273 	blvc	8e9c8d7 <__exidx_end+0xe87803>
 8013f07:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8013f0b:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013f0f:	4f223a22 	svcmi	0x00223a22
 8013f13:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8013f17:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8013f1b:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8013f1f:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8013f23:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8013f27:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8013f2b:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8013f2f:	69502058 	ldmdbvs	r0, {r3, r4, r6, sp}^
 8013f33:	226c6578 	rsbcs	r6, ip, #120, 10	; 0x1e000000
 8013f37:	656e222c 	strbvs	r2, [lr, #-556]!	; 0xfffffdd4
 8013f3b:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8013f3f:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 8013f43:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013f47:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8013f4b:	226b726f 	rsbcs	r7, fp, #-268435450	; 0xf0000006
 8013f4f:	6372222c 	cmnvs	r2, #44, 4	; 0xc0000002
 8013f53:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013f57:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 8013f5b:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013f5f:	6f6d6552 	svcvs	0x006d6552
 8013f63:	63206574 			; <UNDEFINED> instruction: 0x63206574
 8013f67:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013f6b:	61727567 	cmnvs	r2, r7, ror #10
 8013f6f:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013f73:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013f77:	2f637273 	svccs	0x00637273
 8013f7b:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8013f7f:	65672f64 	strbvs	r2, [r7, #-3940]!	; 0xfffff09c
 8013f83:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013f87:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 8013f8b:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013f8f:	632e746e 			; <UNDEFINED> instruction: 0x632e746e
 8013f93:	67007070 	smlsdxvs	r0, r0, r0, r7
 8013f97:	665f7465 	ldrbvs	r7, [pc], -r5, ror #8
 8013f9b:	5f656c69 	svcpl	0x00656c69
 8013f9f:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 8013fa3:	00746e65 	rsbseq	r6, r4, r5, ror #28
 8013fa7:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8013fab:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 8013faf:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8013fb3:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8013fb7:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013fbb:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8013fbf:	000a6425 	andeq	r6, sl, r5, lsr #8
 8013fc3:	202d2d3c 	eorcs	r2, sp, ip, lsr sp
 8013fc7:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8013fcb:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8013fcf:	 	teqcs	ip, sl

08013fd1 <index_html>:
 8013fd1:	4f44213c 	svcmi	0x0044213c
 8013fd5:	50595443 	subspl	r5, r9, r3, asr #8
 8013fd9:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8013fdd:	0a3e6c6d 	beq	8faf199 <__exidx_end+0xf9a0c5>
 8013fe1:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8013fe5:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013fe9:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013fed:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8013ff1:	6b6e696c 	blvs	9bae5a9 <__exidx_end+0x1b994d5>
 8013ff5:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8013ff9:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8013ffd:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8014001:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8014005:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8014009:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801400d:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014011:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014015:	20227373 	eorcs	r7, r2, r3, ror r3
 8014019:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801401d:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014021:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8014025:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8014029:	0a3e656c 	beq	8fad5e1 <__exidx_end+0xf9850d>
 801402d:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014031:	0a3e6461 	beq	8fad1bd <__exidx_end+0xf980e9>
 8014035:	646f623c 	strbtvs	r6, [pc], #-572	; 801403d <index_html+0x6c>
 8014039:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801403d:	6165683c 	cmnvs	r5, ip, lsr r8
 8014041:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8014045:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8014049:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 801404d:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8014051:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8014055:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8014059:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801405d:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8014061:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8014065:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8014069:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 801406d:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8014071:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8014075:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014079:	6f746365 	svcvs	0x00746365
 801407d:	20227972 	eorcs	r7, r2, r2, ror r9
 8014081:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014085:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8014089:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 801408d:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8014091:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8014095:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8014099:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 801409d:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80140a1:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80140a5:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80140a9:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80140ad:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80140b1:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80140b5:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80140b9:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80140bd:	20227478 	eorcs	r7, r2, r8, ror r4
 80140c1:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80140c5:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 80140c9:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 80140cd:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 80140d1:	0a3e656c 	beq	8fad689 <__exidx_end+0xf985b5>
 80140d5:	6f663c09 	svcvs	0x00663c09
 80140d9:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 80140dd:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 80140e1:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80140e5:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 80140e9:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80140ed:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 80140f1:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80140f5:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 80140f9:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80140fd:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8014101:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8014105:	20747069 	rsbscs	r7, r4, r9, rrx
 8014109:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801410d:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8014111:	6a2e7865 	bvs	8bb22ad <__exidx_end+0xb9d1d9>
 8014115:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8014119:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 801411d:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8014121:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8014125:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014129:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801412d:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014131:	 	svcvs	0x0062000a

08014133 <styles_css>:
 8014133:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014137:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801413b:	63616220 	cmnvs	r1, #32, 4
 801413f:	6f72676b 	svcvs	0x0072676b
 8014143:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8014147:	6f6c6f63 	svcvs	0x006c6f63
 801414b:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801414f:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8014153:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8014157:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 801415b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801415f:	6f6c6f63 	svcvs	0x006c6f63
 8014163:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8014167:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801416b:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801416f:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8014173:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8014177:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 801417b:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801417f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8014183:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8014187:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801418b:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801418f:	0a3b7865 	beq	8ef232b <__exidx_end+0xedd257>
 8014193:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8014197:	0a7b2069 	beq	9edc343 <__exidx_end+0x1ec726f>
 801419b:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801419f:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80141a3:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80141a7:	6f6e203a 	svcvs	0x006e203a
 80141ab:	0a3b656e 	beq	8eed76b <__exidx_end+0xed8697>
 80141af:	616d2020 	cmnvs	sp, r0, lsr #32
 80141b3:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80141b7:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80141bb:	70352078 	eorsvc	r2, r5, r8, ror r0
 80141bf:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80141c3:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80141c7:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80141cb:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80141cf:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80141d3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80141d7:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80141db:	0a3b7865 	beq	8ef2377 <__exidx_end+0xedd2a3>
 80141df:	6f622020 	svcvs	0x00622020
 80141e3:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80141e7:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80141eb:	3a737569 	bcc	9cf1797 <__exidx_end+0x1cdc6c3>
 80141ef:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80141f3:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80141f7:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80141fb:	203a7265 	eorscs	r7, sl, r5, ror #4
 80141ff:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014203:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8014207:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801420b:	0a3b7870 	beq	8ef23d3 <__exidx_end+0xedd2ff>
 801420f:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8014213:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8014217:	0a7b2072 	beq	9edc3e7 <__exidx_end+0x1ec7313>
 801421b:	69642020 	stmdbvs	r4!, {r5, sp}^
 801421f:	616c7073 	smcvs	50947	; 0xc703
 8014223:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8014227:	3b78656c 	blcc	9e2d7df <__exidx_end+0x1e1870b>
 801422b:	6a20200a 	bvs	881c25b <__exidx_end+0x807187>
 801422f:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8014233:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8014237:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801423b:	203a746e 	eorscs	r7, sl, lr, ror #8
 801423f:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8014243:	0a3b7265 	beq	8ef0bdf <__exidx_end+0xedbb0b>
 8014247:	6f622020 	svcvs	0x00622020
 801424b:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801424f:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8014253:	3a737569 	bcc	9cf17ff <__exidx_end+0x1cdc72b>
 8014257:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801425b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801425f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8014263:	203a7265 	eorscs	r7, sl, r5, ror #4
 8014267:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801426b:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801426f:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8014273:	0a3b7870 	beq	8ef243b <__exidx_end+0xedd367>
 8014277:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

0801427c <HttpContent>:
 801427c:	08013b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, ip, sp}
 8014280:	08014133 	stmdaeq	r1, {r0, r1, r4, r5, r8, lr}
 8014284:	08013b66 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, fp, ip, sp}
 8014288:	08014294 	stmdaeq	r1, {r2, r4, r7, r9, lr}
 801428c:	08013b4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, fp, ip, sp}
 8014290:	08013fd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, fp, ip, sp}

08014294 <index_js>:
 8014294:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014298:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801429c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80142a0:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80142a4:	534a7465 	movtpl	r7, #42085	; 0xa465
 80142a8:	6a284e4f 	bvs	8a27bec <__exidx_end+0xa12b18>
 80142ac:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80142b0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80142b4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80142b8:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80142bc:	6a2f273d 	bvs	8bddfb8 <__exidx_end+0xbc8ee4>
 80142c0:	2f6e6f73 	svccs	0x006e6f73
 80142c4:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80142c8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80142cc:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80142d0:	20797274 	rsbscs	r7, r9, r4, ror r2
 80142d4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80142d8:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80142dc:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80142e0:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 80142e4:	20746961 	rsbscs	r6, r4, r1, ror #18
 80142e8:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 80142ec:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 80142f0:	0a3b296c 	beq	8ede8a8 <__exidx_end+0xec97d4>
 80142f4:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80142f8:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 80142fc:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8014300:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8014304:	73657220 	cmnvc	r5, #32, 4
 8014308:	6f736a2e 	svcvs	0x00736a2e
 801430c:	3b29286e 	blcc	8a5e4cc <__exidx_end+0xa493f8>
 8014310:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014314:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8014318:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 801431c:	6f727265 	svcvs	0x00727265
 8014320:	7b202972 	blvc	881e8f0 <__exidx_end+0x80981c>
 8014324:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014328:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 801432c:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8014330:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8014334:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8014338:	3b29726f 	blcc	8a70cfc <__exidx_end+0xa5bc28>
 801433c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014340:	0a0a7d0a 	beq	82b3770 <__exidx_end+0x29e69c>
 8014344:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014348:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801434c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014350:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8014354:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014358:	73694c72 	cmnvc	r9, #29184	; 0x7200
 801435c:	20292874 	eorcs	r2, r9, r4, ror r8
 8014360:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8014364:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014368:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801436c:	6177613d 	cmnvs	r7, sp, lsr r1
 8014370:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014374:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014378:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801437c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014380:	0a3b2927 	beq	8ede824 <__exidx_end+0xec9750>
 8014384:	6f640909 	svcvs	0x00640909
 8014388:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801438c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8014390:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014394:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014398:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801439c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80143a0:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80143a4:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80143a8:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80143ac:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80143b0:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80143b4:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80143b8:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80143bc:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80143c0:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80143c4:	2b656d61 	blcs	996f950 <__exidx_end+0x195a87c>
 80143c8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014348 <index_js+0xb4>
 80143cc:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80143d0:	2b223e69 	blcs	88a3d7c <__exidx_end+0x88eca8>
 80143d4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80143d8:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80143dc:	6f6e2e74 	svcvs	0x006e2e74
 80143e0:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80143e4:	2b657079 	blcs	99705d0 <__exidx_end+0x195b4fc>
 80143e8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014368 <index_js+0xd4>
 80143ec:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80143f0:	2b223e69 	blcs	88a3d9c <__exidx_end+0x88ecc8>
 80143f4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80143f8:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80143fc:	6f6e2e74 	svcvs	0x006e2e74
 8014400:	702e6564 	eorvc	r6, lr, r4, ror #10
 8014404:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8014408:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801440c:	2f3c222b 	svccs	0x003c222b
 8014410:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8014414:	0a7d0a3b 	beq	9f56d08 <__exidx_end+0x1f41c34>
 8014418:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 801441c:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8014420:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8014424:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014428:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801442c:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014430:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014434:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8014438:	0a7b2029 	beq	9edc4e4 <__exidx_end+0x1ec7410>
 801443c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8014440:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8014444:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014448:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801444c:	6177613d 	cmnvs	r7, sp, lsr r1
 8014450:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014454:	534a7465 	movtpl	r7, #42085	; 0xa465
 8014458:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801445c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014460:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014464:	3b292779 	blcc	8a5e250 <__exidx_end+0xa4917c>
 8014468:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801446c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014470:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014474:	0a22223d 	beq	889cd70 <__exidx_end+0x887c9c>
 8014478:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801447c:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8014480:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8014484:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8014488:	6a624f3d 	bvs	98a8184 <__exidx_end+0x18930b0>
 801448c:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8014490:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8014494:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8014498:	6f746365 	svcvs	0x00746365
 801449c:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80144a0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80144a4:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80144a8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80144ac:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80144b0:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80144b4:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80144b8:	6145726f 	cmpvs	r5, pc, ror #4
 80144bc:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80144c0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80144c4:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80144c8:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80144cc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80144d0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80144d4:	20726176 	rsbscs	r6, r2, r6, ror r1
 80144d8:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80144dc:	203d2065 	eorscs	r2, sp, r5, rrx
 80144e0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80144e4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80144e8:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 80144ec:	73656c69 	cmnvc	r5, #26880	; 0x6900
 80144f0:	6b5b5d22 	blvs	96eb980 <__exidx_end+0x16d68ac>
 80144f4:	3b5d7965 	blcc	9772a90 <__exidx_end+0x175d9bc>
 80144f8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80144fc:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8014500:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8014504:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8014508:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801450c:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8014510:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8014514:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014518:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 801451c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014520:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014524:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8014528:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801452c:	0a3b223e 	beq	8edce2c <__exidx_end+0xec7d58>
 8014530:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8014534:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8014538:	6f640909 	svcvs	0x00640909
 801453c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8014540:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8014544:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8014548:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801454c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014550:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8014554:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8014558:	6f746365 	svcvs	0x00746365
 801455c:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8014560:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8014564:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8014568:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 801456c:	3b6c6d74 	blcc	9b2fb44 <__exidx_end+0x1b1aa70>
 8014570:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014574:	5f746567 	svcpl	0x00746567
 8014578:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 801457c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014580:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8014584:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8014588:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 801458c:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8014590:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8014594:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8014598:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801459c:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80145a0:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80145a4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80145a8:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80145ac:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80145b0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80145b4:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80145b8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80145bc:	6177613d 	cmnvs	r7, sp, lsr r1
 80145c0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80145c4:	534a7465 	movtpl	r7, #42085	; 0xa465
 80145c8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80145cc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80145d0:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80145d4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80145d8:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80145dc:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80145e0:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 80145e4:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 80145e8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 80145ec:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 80145f0:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 80145f4:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 80145f8:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80145fc:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8014600:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8014604:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8014608:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 801460c:	2b22563e 	blcs	88a9f0c <__exidx_end+0x894e38>
 8014610:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014614:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014618:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801461c:	2b6e6f69 	blcs	9bb03c8 <__exidx_end+0x1b9b2f4>
 8014620:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80145a0 <index_js+0x30c>
 8014624:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014628:	2b223e69 	blcs	88a3fd4 <__exidx_end+0x88ef00>
 801462c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014630:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014634:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8014638:	61642e64 	cmnvs	r4, r4, ror #28
 801463c:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8014640:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014644:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014648:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 801464c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014650:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8014654:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8014658:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 801465c:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8014660:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8014664:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8014668:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 801466c:	6f697372 	svcvs	0x00697372
 8014670:	6f622e6e 	svcvs	0x00622e6e
 8014674:	2b647261 	blcs	9931000 <__exidx_end+0x191bf2c>
 8014678:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80145f8 <index_js+0x364>
 801467c:	3b223e69 	blcc	88a4028 <__exidx_end+0x88ef54>
 8014680:	0a0a7d0a 	beq	82b3ab0 <__exidx_end+0x29e9dc>
 8014684:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8014688:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801468c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014690:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8014694:	745f7465 	ldrbvc	r7, [pc], #-1125	; 801469c <index_js+0x408>
 8014698:	73287478 			; <UNDEFINED> instruction: 0x73287478
 801469c:	20296c65 	eorcs	r6, r9, r5, ror #24
 80146a0:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80146a4:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80146a8:	613d7478 	teqvs	sp, r8, ror r4
 80146ac:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80146b0:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80146b4:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80146b8:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80146bc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80146c0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80146c4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80146c8:	3b22223d 	blcc	889cfc4 <__exidx_end+0x887ef0>
 80146cc:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80146d0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80146d4:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80146d8:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80146dc:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80146e0:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80146e4:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80146e8:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 80146ec:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80146f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80146f4:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 80146f8:	0a7b2029 	beq	9edc7a4 <__exidx_end+0x1ec76d0>
 80146fc:	61760909 	cmnvs	r6, r9, lsl #18
 8014700:	61762072 	cmnvs	r6, r2, ror r0
 8014704:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8014708:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 801470c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014710:	6b5b5d6c 	blvs	96ebcc8 <__exidx_end+0x16d6bf4>
 8014714:	3b5d7965 	blcc	9772cb0 <__exidx_end+0x175dbdc>
 8014718:	2009090a 	andcs	r0, r9, sl, lsl #18
 801471c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014720:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8014724:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8014728:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801472c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014730:	2f3c222b 	svccs	0x003c222b
 8014734:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8014738:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801473c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014740:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014744:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8014748:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8014750 <index_js+0x4bc>
 801474c:	3b223e72 	blcc	88a411c <__exidx_end+0x88f048>
 8014750:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8014754:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8014758:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 801475c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8014760:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8014764:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8014768:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801476c:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8014770:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8014774:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8014778:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 801477c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8014780:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8014784:	0a3b6c6d 	beq	8eef940 <__exidx_end+0xeda86c>
 8014788:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 801478c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8014790:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8014794:	3b292874 	blcc	8a5e96c <__exidx_end+0xa49898>
 8014798:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 801479c:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80147a0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80147a4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80147a8:	0a3b2928 	beq	8edec50 <__exidx_end+0xec9b7c>
 80147ac:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80147b0:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80147b4:	6f697372 	svcvs	0x00697372
 80147b8:	3b29286e 	blcc	8a5e978 <__exidx_end+0xa498a4>
 80147bc:	0000000a 	andeq	r0, r0, sl

080147c0 <s_aStorSize>:
 80147c0:	00000060 	andeq	r0, r0, r0, rrx
 80147c4:	00000090 	muleq	r0, r0, r0
 80147c8:	00000020 	andeq	r0, r0, r0, lsr #32
 80147cc:	00000040 	andeq	r0, r0, r0, asr #32
 80147d0:	00000060 	andeq	r0, r0, r0, rrx
 80147d4:	00000040 	andeq	r0, r0, r0, asr #32
 80147d8:	00000020 	andeq	r0, r0, r0, lsr #32
 80147dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80147e0:	000001e0 	andeq	r0, r0, r0, ror #3
 80147e4:	00000040 	andeq	r0, r0, r0, asr #32
 80147e8:	00000020 	andeq	r0, r0, r0, lsr #32
 80147ec:	00000060 	andeq	r0, r0, r0, rrx
 80147f0:	00000030 	andeq	r0, r0, r0, lsr r0
 80147f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80147f8:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80147fc:	00000030 	andeq	r0, r0, r0, lsr r0
 8014800:	00000040 	andeq	r0, r0, r0, asr #32
 8014804:	00000020 	andeq	r0, r0, r0, lsr #32
 8014808:	00000060 	andeq	r0, r0, r0, rrx
 801480c:	00000020 	andeq	r0, r0, r0, lsr #32
 8014810:	00000400 	andeq	r0, r0, r0, lsl #8
 8014814:	00000020 	andeq	r0, r0, r0, lsr #32
 8014818:	00000020 	andeq	r0, r0, r0, lsr #32
 801481c:	00000040 	andeq	r0, r0, r0, asr #32
 8014820:	00000060 	andeq	r0, r0, r0, rrx
 8014824:	00000020 	andeq	r0, r0, r0, lsr #32
 8014828:	00000020 	andeq	r0, r0, r0, lsr #32
 801482c:	00000020 	andeq	r0, r0, r0, lsr #32

08014830 <vtable for StoreNetwork>:
	...
 8014838:	0800dc4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp, ip, lr, pc}
 801483c:	0800dd61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, lr, pc}
 8014840:	0800dc55 	stmdaeq	r0, {r0, r2, r4, r6, sl, fp, ip, lr, pc}
 8014844:	0800dd75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, ip, lr, pc}
 8014848:	0800dd05 	stmdaeq	r0, {r0, r2, r8, sl, fp, ip, lr, pc}
 801484c:	0800dcd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sl, fp, ip, lr, pc}
 8014850:	0800dca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, ip, lr, pc}
 8014854:	0800dd31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp, ip, lr, pc}
 8014858:	0800dc79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, ip, lr, pc}
 801485c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8014860:	00000000 	andeq	r0, r0, r0
 8014864:	0800dc4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, sl, fp, ip, lr, pc}
 8014868:	0800dd6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, ip, lr, pc}
 801486c:	0800dd29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, ip, lr, pc}
 8014870:	0800dcfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
 8014874:	0800dcd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, ip, lr, pc}
 8014878:	0800dd59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, lr, pc}
 801487c:	0800dca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, ip, lr, pc}

08014880 <vtable for StoreOscServer>:
	...
 8014888:	0800dda9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp, ip, lr, pc}
 801488c:	0800ddf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 8014890:	0800ddcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, fp, ip, lr, pc}
 8014894:	0800ddad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, lr, pc}

08014898 <vtable for StoreRemoteConfig>:
	...
 80148a0:	0800de11 	stmdaeq	r0, {r0, r4, r9, sl, fp, ip, lr, pc}
 80148a4:	0800de59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, ip, lr, pc}
 80148a8:	0800de35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp, ip, lr, pc}
 80148ac:	0800de15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, lr, pc}

080148b0 <vtable for StoreWS28xxDmx>:
	...
 80148b8:	0800de79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, fp, ip, lr, pc}
 80148bc:	0800dfe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80148c0:	0800de81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, lr, pc}
 80148c4:	0800dffd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80148c8:	0800dfb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip, lr, pc}
 80148cc:	0800df81 	stmdaeq	r0, {r0, r7, r8, r9, sl, fp, ip, lr, pc}
 80148d0:	0800df49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, ip, lr, pc}
 80148d4:	0800df11 	stmdaeq	r0, {r0, r4, r8, r9, sl, fp, ip, lr, pc}
 80148d8:	0800ded9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, ip, lr, pc}
 80148dc:	0800dea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, ip, lr, pc}
 80148e0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80148e4:	00000000 	andeq	r0, r0, r0
 80148e8:	0800de7b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, lr, pc}
 80148ec:	0800dff5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80148f0:	0800dfe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80148f4:	0800dfad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip, lr, pc}
 80148f8:	0800df79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 80148fc:	0800df41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, lr, pc}
 8014900:	0800df09 	stmdaeq	r0, {r0, r3, r8, r9, sl, fp, ip, lr, pc}
 8014904:	0800ded1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, fp, ip, lr, pc}
 8014908:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 801490c:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 8014910:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8014914:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 8014918:	746f7420 	strbtvc	r7, [pc], #-1056	; 8014920 <vtable for StoreWS28xxDmx+0x70>
 801491c:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8014920:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8014924:	20736574 	rsbscs	r6, r3, r4, ror r5
 8014928:	2064255b 	rsbcs	r2, r4, fp, asr r5
 801492c:	0a5d426b 	beq	97652e0 <__exidx_end+0x175020c>
 8014930:	70637400 	rsbvc	r7, r3, r0, lsl #8
 8014934:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8014938:	203a6e69 	eorscs	r6, sl, r9, ror #28
 801493c:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 8014940:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8014944:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8014948:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 801494c:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 8014950:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 8014954:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8014958:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 801495c:	5241000a 	subpl	r0, r1, #10
 8014960:	6f6c2050 	svcvs	0x006c2050
 8014964:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8014968:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 801496c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8014970:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 8014974:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8014978:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 801497c:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 8014980:	000a7961 	andeq	r7, sl, r1, ror #18
 8014984:	20505241 	subscs	r5, r0, r1, asr #4
 8014988:	6b6f6f6c 	blvs	9bf0740 <__exidx_end+0x1bdb66c>
 801498c:	66207075 			; <UNDEFINED> instruction: 0x66207075
 8014990:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8014994:	 	vmlsmi.f32	s0, s0, s9

08014997 <NetworkConst::MSG_NETWORK_INIT>:
 8014997:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801499b:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801499f:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80149a3:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80149a7:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80149ab:	3135322e 	teqcc	r5, lr, lsr #4
 80149af:	63745f00 	cmnvs	r4, #0, 30
 80149b3:	6f6c2e70 	svcvs	0x006c2e70
 80149b7:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80149bb:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80149bf:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80149c3:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80149cb <NetworkConst::MSG_NETWORK_INIT+0x34>
 80149c7:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80149cb:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8013b6f <RemoteConfig::s_TXT+0xdb>
 80149cf:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80149d3:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80149d7:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80149db:	20000a53 	andcs	r0, r0, r3, asr sl
 80149df:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80149e3:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80149e7:	0a676e69 	beq	99f0393 <__exidx_end+0x19db2bf>
 80149eb:	614e2000 	mrsvs	r2, (UNDEF: 78)
 80149ef:	3a20656d 	bcc	882dfab <__exidx_end+0x818ed7>
 80149f3:	0a732520 	beq	9cdde7b <__exidx_end+0x1cc8da7>
 80149f7:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80149fb:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80149ff:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014a03:	30687465 	rsbcc	r7, r8, r5, ror #8
 8014a07:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8014a0b:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8014a0f:	5f656369 	svcpl	0x00656369
 8014a13:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8014a17:	6b726f77 	blvs	9cb07fb <__exidx_end+0x1c9b727>
 8014a1b:	4820000a 	stmdami	r0!, {r1, r3}
 8014a1f:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8014a23:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8014a27:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014a2b:	20000a73 	andcs	r0, r0, r3, ror sl
 8014a2f:	614e6649 	cmpvs	lr, r9, asr #12
 8014a33:	2020656d 	eorcs	r6, r0, sp, ror #10
 8014a37:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014a3b:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8014a3f:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014a43:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8014a47:	20202074 	eorcs	r2, r0, r4, ror r0
 8014a4b:	3a202020 	bcc	881cad3 <__exidx_end+0x8079ff>
 8014a4f:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8014a53:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014a57:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014a5b:	0a64252f 	beq	991df1f <__exidx_end+0x1908e4b>
 8014a5f:	654e2000 	strbvs	r2, [lr, #-0]
 8014a63:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8014a67:	2020206b 	eorcs	r2, r0, fp, rrx
 8014a6b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014a6f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014a73:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014a77:	20000a64 	andcs	r0, r0, r4, ror #20
 8014a7b:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8014a7f:	20796177 	rsbscs	r6, r9, r7, ror r1
 8014a83:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014a87:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014a8b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014a8f:	0a64252e 	beq	991df4f <__exidx_end+0x1908e7b>
 8014a93:	72422000 	subvc	r2, r2, #0
 8014a97:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8014a9b:	20747361 	rsbscs	r7, r4, r1, ror #6
 8014a9f:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014aa3:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014aa7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014aab:	20000a64 	andcs	r0, r0, r4, ror #20
 8014aaf:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8014ab3:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014ab7:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014abb:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8014abf:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8014ac3:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8014ac7:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8014acb:	3a78322e 	bcc	9e2138b <__exidx_end+0x1e0c2b7>
 8014acf:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8014ad3:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8014ad7:	20000a78 	andcs	r0, r0, r8, ror sl
 8014adb:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8014adf:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014ae3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014ae7:	000a6325 	andeq	r6, sl, r5, lsr #6
 8014aeb:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8014aef:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8014af3:	 	rsbvc	r0, r9, r0, asr r0

08014af5 <NetworkParamsConst::IP_ADDRESS>:
 8014af5:	615f7069 	cmpvs	pc, r9, rrx
 8014af9:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8014afd:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08014b00 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8014b00:	61666564 	cmnvs	r6, r4, ror #10
 8014b04:	5f746c75 	svcpl	0x00746c75
 8014b08:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8014b0c:	00796177 	rsbseq	r6, r9, r7, ror r1

08014b10 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8014b10:	70636864 	rsbvc	r6, r3, r4, ror #16
 8014b14:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8014b18:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8014b20 <NetworkParamsConst::HOSTNAME>
 8014b1c:	00656d69 	rsbeq	r6, r5, r9, ror #26

08014b20 <NetworkParamsConst::HOSTNAME>:
 8014b20:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8014b24:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014b29 <NetworkParamsConst::NET_MASK>:
 8014b29:	5f74656e 	svcpl	0x0074656e
 8014b2d:	6b73616d 	blvs	9ced0e9 <__exidx_end+0x1cd8015>
	...

08014b32 <NetworkParamsConst::USE_DHCP>:
 8014b32:	5f657375 	svcpl	0x00657375
 8014b36:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08014b3b <NetworkParamsConst::FILE_NAME>:
 8014b3b:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8014b3f:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8014b43:	00747874 	rsbseq	r7, r4, r4, ror r8

08014b47 <DevicesParamsConst::SPI_SPEED_HZ>:
 8014b47:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8014b4b:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8014b4f:	5f646565 	svcpl	0x00646565
 8014b53:	 			; <UNDEFINED> instruction: 0x6c007a68

08014b56 <DevicesParamsConst::GROUPING_COUNT>:
 8014b56:	5f64656c 	svcpl	0x0064656c
 8014b5a:	756f7267 	strbvc	r7, [pc, #-615]!	; 80148fb <vtable for StoreWS28xxDmx+0x4b>
 8014b5e:	6f635f70 	svcvs	0x00635f70
 8014b62:	00746e75 	rsbseq	r6, r4, r5, ror lr

08014b66 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8014b66:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8014b6a:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8014b6e:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8014b72:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8014b76:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08014b78 <DevicesParamsConst::MAP>:
 8014b78:	5f64656c 	svcpl	0x0064656c
 8014b7c:	5f626772 	svcpl	0x00626772
 8014b80:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8014b84:	00676e69 	rsbeq	r6, r7, r9, ror #28

08014b88 <DevicesParamsConst::TYPE>:
 8014b88:	5f64656c 	svcpl	0x0064656c
 8014b8c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08014b91 <DevicesParamsConst::COUNT>:
 8014b91:	5f64656c 	svcpl	0x0064656c
 8014b95:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8014b99:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08014b9b <DevicesParamsConst::LED_T0H>:
 8014b9b:	5f64656c 	svcpl	0x0064656c
 8014b9f:	00683074 	rsbeq	r3, r8, r4, ror r0

08014ba3 <DevicesParamsConst::LED_T1H>:
 8014ba3:	5f64656c 	svcpl	0x0064656c
 8014ba7:	00683174 	rsbeq	r3, r8, r4, ror r1

08014bab <DevicesParamsConst::FILE_NAME>:
 8014bab:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8014baf:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8014bb3:	00747874 	rsbseq	r7, r4, r4, ror r8
 8014bb7:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014bbb:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8014bbf:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014bc3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014bc7:	002c2264 	eoreq	r2, ip, r4, ror #4
 8014bcb:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8014bcf:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014bd3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014bd7:	0a64252e 	beq	991e097 <__exidx_end+0x1908fc3>
 8014bdb:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8014bdf:	0a232073 	beq	88dcdb3 <__exidx_end+0x8c7cdf>
	...

08014be4 <LightSetParamsConst::TEST_PATTERN>:
 8014be4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8014be8:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8014bec:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08014bf1 <LightSetParamsConst::START_UNI_PORT>:
 8014bf1:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014bf5:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014bf9:	6f705f69 	svcvs	0x00705f69
 8014bfd:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8014c01:	74730000 	ldrbtvc	r0, [r3], #-0
 8014c05:	5f747261 	svcpl	0x00747261
 8014c09:	5f696e75 	svcpl	0x00696e75
 8014c0d:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014c11:	0000325f 	andeq	r3, r0, pc, asr r2
 8014c15:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014c19:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014c1d:	6f705f69 	svcvs	0x00705f69
 8014c21:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8014c25:	74730000 	ldrbtvc	r0, [r3], #-0
 8014c29:	5f747261 	svcpl	0x00747261
 8014c2d:	5f696e75 	svcpl	0x00696e75
 8014c31:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014c35:	0000345f 	andeq	r3, r0, pc, asr r4
 8014c39:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014c3d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014c41:	6f705f69 	svcvs	0x00705f69
 8014c45:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 80147db <s_aStorSize+0x1b>
 8014c49:	74730000 	ldrbtvc	r0, [r3], #-0
 8014c4d:	5f747261 	svcpl	0x00747261
 8014c51:	5f696e75 	svcpl	0x00696e75
 8014c55:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014c59:	0000365f 	andeq	r3, r0, pc, asr r6
 8014c5d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014c61:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8014c65:	6f705f69 	svcvs	0x00705f69
 8014c69:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8014c6d:	74730000 	ldrbtvc	r0, [r3], #-0
 8014c71:	5f747261 	svcpl	0x00747261
 8014c75:	5f696e75 	svcpl	0x00696e75
 8014c79:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014c7d:	0000385f 	andeq	r3, r0, pc, asr r8

08014c81 <LightSetParamsConst::DMX_START_ADDRESS>:
 8014c81:	5f786d64 	svcpl	0x00786d64
 8014c85:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014c89:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8014c8d:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8014c91:	6f4e0073 	svcvs	0x004e0073
 8014c95:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8014c99:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014c9d:	756f6620 	strbvc	r6, [pc, #-1568]!	; 8014685 <index_js+0x3f1>
 8014ca1:	5300646e 	movwpl	r6, #1134	; 0x46e
 8014ca5:	30313148 	eorscc	r3, r1, r8, asr #2
 8014ca9:	53530036 	cmppl	r3, #54	; 0x36
 8014cad:	30333144 	eorscc	r3, r3, r4, asr #2
 8014cb1:	73250036 			; <UNDEFINED> instruction: 0x73250036
 8014cb5:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 8014cb9:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 8014cbd:	aa40000a 	bge	9014ced <__exidx_end+0xfffc19>
 8014cc1:	00eeaaee 	rsceq	sl, lr, lr, ror #21
 8014cc5:	 	andmi	r0, r0, r0

08014cc8 <_OledFont8x6>:
 8014cc8:	00000040 	andeq	r0, r0, r0, asr #32
 8014ccc:	40000000 	andmi	r0, r0, r0
 8014cd0:	005f0000 	subseq	r0, pc, r0
 8014cd4:	00400000 	subeq	r0, r0, r0
 8014cd8:	00070007 	andeq	r0, r7, r7
 8014cdc:	7f144000 	svcvc	0x00144000
 8014ce0:	00147f14 	andseq	r7, r4, r4, lsl pc
 8014ce4:	7f2a2440 	svcvc	0x002a2440
 8014ce8:	4000122a 	andmi	r1, r0, sl, lsr #4
 8014cec:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8014cf0:	36400062 	strbcc	r0, [r0], -r2, rrx
 8014cf4:	50205649 	eorpl	r5, r0, r9, asr #12
 8014cf8:	08004000 	stmdaeq	r0, {lr}
 8014cfc:	00000307 	andeq	r0, r0, r7, lsl #6
 8014d00:	221c0040 	andscs	r0, ip, #64	; 0x40
 8014d04:	40000041 	andmi	r0, r0, r1, asr #32
 8014d08:	1c224100 	stfnes	f4, [r2], #-0
 8014d0c:	2a400000 	bcs	9014d14 <__exidx_end+0xfffc40>
 8014d10:	2a1c7f1c 	bcs	8734988 <__exidx_end+0x71f8b4>
 8014d14:	08084000 	stmdaeq	r8, {lr}
 8014d18:	0008083e 	andeq	r0, r8, lr, lsr r8
 8014d1c:	70800040 	addvc	r0, r0, r0, asr #32
 8014d20:	40000030 	andmi	r0, r0, r0, lsr r0
 8014d24:	08080808 	stmdaeq	r8, {r3, fp}
 8014d28:	00400008 	subeq	r0, r0, r8
 8014d2c:	00606000 	rsbeq	r6, r0, r0
 8014d30:	10204000 	eorne	r4, r0, r0
 8014d34:	00020408 	andeq	r0, r2, r8, lsl #8
 8014d38:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8014d3c:	40003e45 	andmi	r3, r0, r5, asr #28
 8014d40:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8014d44:	72400000 	subvc	r0, r0, #0
 8014d48:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8014d4c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8014d50:	00334d49 	eorseq	r4, r3, r9, asr #26
 8014d54:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8014d58:	4000107f 	andmi	r1, r0, pc, ror r0
 8014d5c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8014d60:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8014d64:	3149494a 	cmpcc	r9, sl, asr #18
 8014d68:	21414000 	mrscs	r4, (UNDEF: 65)
 8014d6c:	00070911 	andeq	r0, r7, r1, lsl r9
 8014d70:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8014d74:	40003649 	andmi	r3, r0, r9, asr #12
 8014d78:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8014d7c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8014d80:	00001400 	andeq	r1, r0, r0, lsl #8
 8014d84:	40004000 	andmi	r4, r0, r0
 8014d88:	00000034 	andeq	r0, r0, r4, lsr r0
 8014d8c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8014d90:	40004122 	andmi	r4, r0, r2, lsr #2
 8014d94:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8014d98:	00400014 	subeq	r0, r0, r4, lsl r0
 8014d9c:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8014da0:	01024000 	mrseq	r4, (UNDEF: 2)
 8014da4:	00060959 	andeq	r0, r6, r9, asr r9
 8014da8:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8014dac:	40004e59 	andmi	r4, r0, r9, asr lr
 8014db0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8014db4:	7f40007c 	svcvc	0x0040007c
 8014db8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8014dbc:	413e4000 	teqmi	lr, r0
 8014dc0:	00224141 	eoreq	r4, r2, r1, asr #2
 8014dc4:	41417f40 	cmpmi	r1, r0, asr #30
 8014dc8:	40003e41 	andmi	r3, r0, r1, asr #28
 8014dcc:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8014dd0:	7f400041 	svcvc	0x00400041
 8014dd4:	01090909 	tsteq	r9, r9, lsl #18
 8014dd8:	413e4000 	teqmi	lr, r0
 8014ddc:	00735141 	rsbseq	r5, r3, r1, asr #2
 8014de0:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8014de4:	40007f08 	andmi	r7, r0, r8, lsl #30
 8014de8:	417f4100 	cmnmi	pc, r0, lsl #2
 8014dec:	20400000 	subcs	r0, r0, r0
 8014df0:	013f4140 	teqeq	pc, r0, asr #2
 8014df4:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8014df8:	00412214 	subeq	r2, r1, r4, lsl r2
 8014dfc:	40407f40 	submi	r7, r0, r0, asr #30
 8014e00:	40004040 	andmi	r4, r0, r0, asr #32
 8014e04:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8014e08:	7f40007f 	svcvc	0x0040007f
 8014e0c:	7f100804 	svcvc	0x00100804
 8014e10:	413e4000 	teqmi	lr, r0
 8014e14:	003e4141 	eorseq	r4, lr, r1, asr #2
 8014e18:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8014e1c:	40000609 	andmi	r0, r0, r9, lsl #12
 8014e20:	2151413e 	cmpcs	r1, lr, lsr r1
 8014e24:	7f40005e 	svcvc	0x0040005e
 8014e28:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8014e2c:	49264000 	stmdbmi	r6!, {lr}
 8014e30:	00324949 	eorseq	r4, r2, r9, asr #18
 8014e34:	7f010340 	svcvc	0x00010340
 8014e38:	40000301 	andmi	r0, r0, r1, lsl #6
 8014e3c:	4040403f 	submi	r4, r0, pc, lsr r0
 8014e40:	1f40003f 	svcne	0x0040003f
 8014e44:	1f204020 	svcne	0x00204020
 8014e48:	403f4000 	eorsmi	r4, pc, r0
 8014e4c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8014e50:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8014e54:	40006314 	andmi	r6, r0, r4, lsl r3
 8014e58:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8014e5c:	61400003 	cmpvs	r0, r3
 8014e60:	434d4959 	movtmi	r4, #55641	; 0xd959
 8014e64:	7f004000 	svcvc	0x00004000
 8014e68:	00414141 	subeq	r4, r1, r1, asr #2
 8014e6c:	08040240 	stmdaeq	r4, {r6, r9}
 8014e70:	40002010 	andmi	r2, r0, r0, lsl r0
 8014e74:	41414100 	mrsmi	r4, (UNDEF: 81)
 8014e78:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8014e7c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8014e80:	40404000 	submi	r4, r0, r0
 8014e84:	00404040 	subeq	r4, r0, r0, asr #32
 8014e88:	07030040 	streq	r0, [r3, -r0, asr #32]
 8014e8c:	40000008 	andmi	r0, r0, r8
 8014e90:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8014e94:	7f400040 	svcvc	0x00400040
 8014e98:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8014e9c:	44384000 	ldrtmi	r4, [r8], #-0
 8014ea0:	00284444 	eoreq	r4, r8, r4, asr #8
 8014ea4:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8014ea8:	40007f28 	andmi	r7, r0, r8, lsr #30
 8014eac:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8014eb0:	00400018 	subeq	r0, r0, r8, lsl r0
 8014eb4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8014eb8:	a4184000 	ldrge	r4, [r8], #-0
 8014ebc:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8014ec0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8014ec4:	40007804 	andmi	r7, r0, r4, lsl #16
 8014ec8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8014ecc:	20400000 	subcs	r0, r0, r0
 8014ed0:	003d4040 	eorseq	r4, sp, r0, asr #32
 8014ed4:	107f4000 	rsbsne	r4, pc, r0
 8014ed8:	00004428 	andeq	r4, r0, r8, lsr #8
 8014edc:	7f410040 	svcvc	0x00410040
 8014ee0:	40000040 	andmi	r0, r0, r0, asr #32
 8014ee4:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8014ee8:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8014eec:	78040408 	stmdavc	r4, {r3, sl}
 8014ef0:	44384000 	ldrtmi	r4, [r8], #-0
 8014ef4:	00384444 	eorseq	r4, r8, r4, asr #8
 8014ef8:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8014efc:	40001824 	andmi	r1, r0, r4, lsr #16
 8014f00:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8014f04:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8014f08:	08040408 	stmdaeq	r4, {r3, sl}
 8014f0c:	54484000 	strbpl	r4, [r8], #-0
 8014f10:	00245454 	eoreq	r5, r4, r4, asr r4
 8014f14:	3f040440 	svccc	0x00040440
 8014f18:	40002444 	andmi	r2, r0, r4, asr #8
 8014f1c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8014f20:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8014f24:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8014f28:	403c4000 	eorsmi	r4, ip, r0
 8014f2c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8014f30:	10284440 	eorne	r4, r8, r0, asr #8
 8014f34:	40004428 	andmi	r4, r0, r8, lsr #8
 8014f38:	9090904c 	addsls	r9, r0, ip, asr #32
 8014f3c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8014f40:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8014f44:	08004000 	stmdaeq	r0, {lr}
 8014f48:	00004136 	andeq	r4, r0, r6, lsr r1
 8014f4c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8014f50:	40000000 	andmi	r0, r0, r0
 8014f54:	08364100 	ldmdaeq	r6!, {r8, lr}
 8014f58:	02400000 	subeq	r0, r0, #0
 8014f5c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8014f60:	263c4000 	ldrtcs	r4, [ip], -r0
 8014f64:	003c2623 	eorseq	r2, ip, r3, lsr #12

08014f68 <oled_128x32_init>:
 8014f68:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8014f6c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8014f70:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8014f74:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8014f78:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8014f7c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08014f80 <oled_128x64_init>:
 8014f80:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8014f84:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8014f88:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8014f8c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8014f90:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8014f94:	a6a440db 	ssatge	r4, #5, fp, asr #1

08014f98 <vtable for Ssd1306>:
	...
 8014fa0:	080108af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, fp}
 8014fa4:	080108dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, fp}
 8014fa8:	08010bf5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, fp}
 8014fac:	08010b79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, fp}
 8014fb0:	08010a45 	stmdaeq	r1, {r0, r2, r6, r9, fp}
 8014fb4:	080108fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, fp}
 8014fb8:	08010925 	stmdaeq	r1, {r0, r2, r5, r8, fp}
 8014fbc:	08010a1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, fp}
 8014fc0:	080109d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, fp}
 8014fc4:	080108b1 	stmdaeq	r1, {r0, r4, r5, r7, fp}
 8014fc8:	08010a81 	stmdaeq	r1, {r0, r7, r9, fp}
 8014fcc:	08010a8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, fp}
 8014fd0:	08010aa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, fp}
 8014fd4:	080108b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, fp}
 8014fd8:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8014fdc:	5b1b006d 	blpl	86d5198 <__exidx_end+0x6c00c4>
 8014fe0:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8014fe4:	31335b1b 	teqcc	r3, fp, lsl fp
 8014fe8:	5b1b006d 	blpl	86d51a4 <__exidx_end+0x6c00d0>
 8014fec:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8014ff0:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8014ff4:	5b1b006d 	blpl	86d51b0 <__exidx_end+0x6c00dc>
 8014ff8:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8014ffc:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8015000:	205d732a 	subscs	r7, sp, sl, lsr #6
 8015004:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8015008:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801500c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8015010:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8015014:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8015018:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801501c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8015020:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8015024:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015028:	000a7525 	andeq	r7, sl, r5, lsr #10
 801502c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8015030:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015034:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8015038:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801503c:	6b636f6c 	blvs	98f0df4 <__exidx_end+0x18dbd20>
 8015040:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8015044:	000a7469 	andeq	r7, sl, r9, ror #8
 8015048:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801504c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8015050:	6f6c4270 	svcvs	0x006c4270
 8015054:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8015058:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801505c:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8015060:	7a697320 	bvc	9a71ce8 <__exidx_end+0x1a5cc14>
 8015064:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8015068:	6164202c 	cmnvs	r4, ip, lsr #32
 801506c:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8015070:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8015074:	3a656572 	bcc	996e644 <__exidx_end+0x1959570>
 8015078:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801507c:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015080:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8015084:	203d2072 	eorscs	r2, sp, r2, ror r0
 8015088:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801508c:	6f6c4270 	svcvs	0x006c4270
 8015090:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8015094:	0a702520 	beq	9c1e51c <__exidx_end+0x1c09448>
 8015098:	00000000 	andeq	r0, r0, r0

0801509c <days_of_month>:
 801509c:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 80150a4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150a8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80150ac:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150b0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80150b4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150b8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150bc:	0000001e 	andeq	r0, r0, lr, lsl r0
 80150c0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80150c4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80150c8:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080150cc <__exidx_start>:
 80150cc:	7fff2e48 	svcvc	0x00ff2e48
 80150d0:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080150d4 <.ARM.attributes>:
 80150d4:	00002e41 	andeq	r2, r0, r1, asr #28
 80150d8:	61656100 	cmnvs	r5, r0, lsl #2
 80150dc:	01006962 	tsteq	r0, r2, ror #18
 80150e0:	00000024 	andeq	r0, r0, r4, lsr #32
 80150e4:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80150e8:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80150ec:	0600334d 	streq	r3, [r0], -sp, asr #6
 80150f0:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 80150f4:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 80150f8:	17011501 	strne	r1, [r1, -r1, lsl #10]
 80150fc:	1a011803 	bne	805b110 <__exidx_end+0x4603c>
 8015100:	Address 0x0000000008015100 is out of bounds.


Disassembly of section .data:

20000000 <s_multicast_mac>:
20000000:	005e0001 	subseq	r0, lr, r1
20000004:	00000000 	andeq	r0, r0, r0

20000008 <MDNS::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <next_block>:
2000000c:	20016000 	andcs	r6, r1, r0

20000010 <s_block_bucket>:
20000010:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000020:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000030:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000040:	00000060 	andeq	r0, r0, r0, rrx
	...
20000050:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000060:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000070:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000080:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000090:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e0 <SystemCoreClock>:
200000e0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <OscServer::s_aPathInfo>:
	...

2000016c <OscServer::s_pUdpBuffer>:
2000016c:	00000000 	andeq	r0, r0, r0

20000170 <OscServer::s_aPathSecond>:
	...

200001f0 <OscServer::s_aPathBlackOut>:
	...

20000270 <OscServer::s_aPath>:
	...

200002f0 <OscServer::s_pData>:
	...

200004f0 <OscServer::s_pThis>:
200004f0:	00000000 	andeq	r0, r0, r0

200004f4 <OscSimpleSend::s_Message>:
	...

200006f4 <WS28xxDmx::s_pThis>:
200006f4:	00000000 	andeq	r0, r0, r0

200006f8 <PixelPatterns::m_PortConfig>:
	...

20000718 <PixelPatterns::m_nActivePorts>:
20000718:	00000000 	andeq	r0, r0, r0

2000071c <PixelPatterns::m_pScannerColours>:
2000071c:	00000000 	andeq	r0, r0, r0

20000720 <PixelPatterns::m_nCount>:
20000720:	00000000 	andeq	r0, r0, r0

20000724 <PixelPatterns::m_pOutput>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <PixelTestPattern::s_Pattern>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <s_tmp>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <WS28xx::s_pThis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <RemoteConfig::s_pUdpBuffer>:
20000734:	00000000 	andeq	r0, r0, r0

20000738 <RemoteConfig::s_RemoteConfigListBin>:
	...

2000075c <RemoteConfig::s_pThis>:
2000075c:	00000000 	andeq	r0, r0, r0

20000760 <SpiFlashStore::s_nWaitMillis>:
20000760:	00000000 	andeq	r0, r0, r0

20000764 <SpiFlashStore::s_SpiFlashData>:
	...

20001764 <SpiFlashStore::s_nStartAddress>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <SpiFlashStore::s_bHaveFlashChip>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <SpiFlashStore::s_nSpiFlashStoreSize>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <SpiFlashStore::s_State>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <SpiFlashStore::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <SpiFlashStore::s_bIsNew>:
20001778:	00000000 	andeq	r0, r0, r0

2000177c <StoreNetwork::s_pThis>:
2000177c:	00000000 	andeq	r0, r0, r0

20001780 <StoreOscServer::s_pThis>:
20001780:	00000000 	andeq	r0, r0, r0

20001784 <StoreRemoteConfig::s_pThis>:
20001784:	00000000 	andeq	r0, r0, r0

20001788 <StoreWS28xxDmx::s_pThis>:
20001788:	00000000 	andeq	r0, r0, r0

2000178c <FlashRom::s_pThis>:
2000178c:	00000000 	andeq	r0, r0, r0

20001790 <flashrom::s_nAddress>:
20001790:	00000000 	andeq	r0, r0, r0

20001794 <flashrom::s_State>:
20001794:	00000000 	andeq	r0, r0, r0

20001798 <flashrom::s_nPage>:
20001798:	00000000 	andeq	r0, r0, r0

2000179c <flashrom::s_pData>:
2000179c:	00000000 	andeq	r0, r0, r0

200017a0 <flashrom::s_isBank0>:
200017a0:	00000000 	andeq	r0, r0, r0

200017a4 <flashrom::s_nLength>:
200017a4:	00000000 	andeq	r0, r0, r0

200017a8 <g_ip_info>:
	...

200017b4 <g_mac_address>:
200017b4:	00000000 	andeq	r0, r0, r0
	...

200017ba <s_is_dhcp>:
	...

200017bc <s_p>:
200017bc:	00000000 	andeq	r0, r0, r0

200017c0 <s_ticker>:
200017c0:	00000000 	andeq	r0, r0, r0

200017c4 <s_mac_address>:
	...

200017cc <s_mac_address_arp_reply>:
200017cc:	00000000 	andeq	r0, r0, r0
	...

200017d2 <s_id>:
	...

200017d4 <s_recv_queue>:
	...

20002344 <s_tcb>:
	...

20002388 <s_tcp>:
	...

20002974 <broadcast_mask>:
20002974:	00000000 	andeq	r0, r0, r0

20002978 <gw_ip>:
20002978:	00000000 	andeq	r0, r0, r0

2000297c <on_network_mask>:
2000297c:	00000000 	andeq	r0, r0, r0

20002980 <s_id>:
20002980:	00000000 	andeq	r0, r0, r0

20002984 <s_ports_allowed>:
	...

200029a4 <s_recv_queue>:
	...

20008644 <s_send_packet>:
	...

20008c30 <MDNS::s_nRemoteIp>:
20008c30:	00000000 	andeq	r0, r0, r0

20008c34 <MDNS::s_nRemotePort>:
20008c34:	00000000 	andeq	r0, r0, r0

20008c38 <MDNS::s_nMulticastIp>:
20008c38:	00000000 	andeq	r0, r0, r0

20008c3c <MDNS::s_AnswerLocalIp>:
	...

20008e40 <MDNS::s_ServiceRecords>:
	...

20008e60 <MDNS::s_nBytesReceived>:
20008e60:	00000000 	andeq	r0, r0, r0

20008e64 <MDNS::s_ServiceRecordsData>:
	...

20009068 <MDNS::s_pName>:
20009068:	00000000 	andeq	r0, r0, r0

2000906c <MDNS::s_pBuffer>:
2000906c:	00000000 	andeq	r0, r0, r0

20009070 <Network::s_pThis>:
20009070:	00000000 	andeq	r0, r0, r0

20009074 <NetworkParams::m_tNetworkParams>:
	...

200090d4 <s_arp_announce>:
	...

20009100 <s_arp_reply>:
	...

2000912c <s_arp_request>:
	...

20009158 <s_arp_records>:
	...

200092d8 <s_entry_current>:
200092d8:	00000000 	andeq	r0, r0, r0

200092dc <s_dhcp_allocated_gw>:
200092dc:	00000000 	andeq	r0, r0, r0

200092e0 <s_dhcp_allocated_ip>:
200092e0:	00000000 	andeq	r0, r0, r0

200092e4 <s_dhcp_allocated_netmask>:
200092e4:	00000000 	andeq	r0, r0, r0

200092e8 <s_dhcp_message>:
	...

2000950c <s_dhcp_server_ip>:
2000950c:	00000000 	andeq	r0, r0, r0

20009510 <s_groups>:
	...

20009630 <s_id>:
20009630:	00000000 	andeq	r0, r0, r0

20009634 <s_joins_allowed_index>:
20009634:	00000000 	andeq	r0, r0, r0

20009638 <s_leave>:
	...

20009668 <s_multicast_mac>:
	...

20009670 <s_report>:
	...

2000969e <PropertiesConfig::s_Config>:
	...

200096a0 <Display::s_pThis>:
200096a0:	00000000 	andeq	r0, r0, r0

200096a4 <_ClearBuffer>:
	...

2000972c <Ssd1306::s_pThis>:
2000972c:	00000000 	andeq	r0, r0, r0

20009730 <FirmwareVersion::s_FirmwareVersion>:
	...

20009746 <FirmwareVersion::s_Print>:
	...

20009788 <FirmwareVersion::s_pThis>:
20009788:	00000000 	andeq	r0, r0, r0

2000978c <LedBlink::s_pThis>:
2000978c:	00000000 	andeq	r0, r0, r0

20009790 <Hardware::s_pThis>:
20009790:	00000000 	andeq	r0, r0, r0

20009794 <last.0>:
20009794:	00000000 	andeq	r0, r0, r0

20009798 <s_micros>:
	...

200097a0 <set_timer>:
200097a0:	00000000 	andeq	r0, r0, r0

200097a4 <s_nSysTickMillis>:
200097a4:	00000000 	andeq	r0, r0, r0

200097a8 <enet_init_status>:
200097a8:	00000000 	andeq	r0, r0, r0

200097ac <s_nAddress>:
200097ac:	00000000 	andeq	r0, r0, r0

200097b0 <s_TxBuffer>:
	...

200117b0 <dma_current_ptp_rxdesc>:
200117b0:	00000000 	andeq	r0, r0, r0

200117b4 <dma_current_ptp_txdesc>:
200117b4:	00000000 	andeq	r0, r0, r0

200117b8 <dma_current_rxdesc>:
200117b8:	00000000 	andeq	r0, r0, r0

200117bc <dma_current_txdesc>:
200117bc:	00000000 	andeq	r0, r0, r0

200117c0 <enet_initpara>:
	...

200117fc <rx_buff>:
	...

20012fcc <rxdesc_tab>:
	...

2001300c <tx_buff>:
	...

20013bf4 <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
