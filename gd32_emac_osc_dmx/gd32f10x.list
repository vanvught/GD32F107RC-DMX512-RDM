
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007dad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, sp, lr}
 8007008:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800700c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007010:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007014:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007018:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 800702c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007030:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800703c:	0800f30d 	stmdaeq	r0, {r0, r2, r3, r8, r9, ip, sp, lr, pc}
 8007040:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007044:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007048:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800704c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007050:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007054:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007058:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800705c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007060:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007064:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007068:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800706c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007070:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007074:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007078:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800707c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007080:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007084:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007088:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800708c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007090:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007094:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007098:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800709c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ac:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070b0:	0800b345 	stmdaeq	r0, {r0, r2, r6, r8, r9, ip, sp, pc}
 80070b4:	0800b3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp, pc}
 80070b8:	0800b44d 	stmdaeq	r0, {r0, r2, r3, r6, sl, ip, sp, pc}
 80070bc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070cc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070dc:	0800b0ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, sp, pc}
 80070e0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ec:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 8007100:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800710c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007110:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007114:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007118:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800711c:	0800b46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, ip, sp, pc}
 8007120:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007124:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007128:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800712c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007130:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007134:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007138:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800713c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007140:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007144:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007148:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800714c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fdbd 	bl	800dd20 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f005 f8dc 	bl	800c36c <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 ffce 	bl	800e160 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20002160 	andcs	r2, r0, r0, ror #2
 80071e8:	20002154 	andcs	r2, r0, r4, asr r1
 80071ec:	20002166 	andcs	r2, r0, r6, ror #2

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 be96 	b.w	800df30 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20002166 	andcs	r2, r0, r6, ror #2

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20002170 	andcs	r2, r0, r0, ror r1

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f005 f8f7 	bl	800c420 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f005 f8eb 	bl	800c420 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20002d38 	andcs	r2, r0, r8, lsr sp
 800725c:	20002160 	andcs	r2, r0, r0, ror #2
 8007260:	20002154 	andcs	r2, r0, r4, asr r1
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f005 fa4a 	bl	800c728 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f005 fa6b 	bl	800c778 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20003354 	andcs	r3, r0, r4, asr r3
 80072ac:	20003334 	andcs	r3, r0, r4, lsr r3
 80072b0:	20008ff4 	strdcs	r8, [r0], -r4
 80072b4:	20003330 	andcs	r3, r0, r0, lsr r3
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f006 fba4 	bl	800da24 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f006 fb91 	bl	800da24 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f006 fb85 	bl	800da24 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f006 fb74 	bl	800da24 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f006 fb68 	bl	800da24 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f006 fb5c 	bl	800da24 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f006 bb61 	b.w	800da38 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	20009a2a 	andcs	r9, r0, sl, lsr #20
 8007394:	20009a24 	andcs	r9, r0, r4, lsr #20
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20009a3a 	andcs	r9, r0, sl, lsr sl
 80073a4:	20009a44 	andcs	r9, r0, r4, asr #20
 80073a8:	20009a82 	andcs	r9, r0, r2, lsl #21
 80073ac:	20009a7c 	andcs	r9, r0, ip, ror sl
 80073b0:	20009a92 	mulcs	r0, r2, sl
 80073b4:	20009a9c 	mulcs	r0, ip, sl
 80073b8:	20009a50 	andcs	r9, r0, r0, asr sl

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20009c28 	andcs	r9, r0, r8, lsr #24
 80073ec:	20009aac 	andcs	r9, r0, ip, lsr #21

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 fe00 	bl	800e020 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 fdac 	bl	800df8c <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 fd92 	bl	800df8c <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20009e60 	andcs	r9, r0, r0, ror #28
 8007490:	20009f84 	andcs	r9, r0, r4, lsl #31
 8007494:	20009fc0 	andcs	r9, r0, r0, asr #31
 8007498:	20009f80 	andcs	r9, r0, r0, lsl #31
 800749c:	20009fb8 			; <UNDEFINED> instruction: 0x20009fb8
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009f88 	andcs	r9, r0, r8, lsl #31
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 fe0a 	bl	800e0d8 <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20009e60 	andcs	r9, r0, r0, ror #28

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f007 fea5 	bl	800f250 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f007 fed2 	bl	800f2b0 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f007 fecf 	bl	800f2b0 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	0801100d 	stmdaeq	r1, {r0, r2, r3, ip}
 800751c:	08012a14 	stmdaeq	r1, {r2, r4, r9, fp, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f008 fc4f 	bl	800fdc8 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f008 fc59 	bl	800fdf0 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 bf03 	b.w	800c34c <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20002168 	andcs	r2, r0, r8, ror #2

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 ff5f 	bl	800c434 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 ff40 	bl	800c420 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 ff31 	bl	800c420 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 ff29 	bl	800c420 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 ffd2 	bl	800c5cc <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 feea 	bl	800c420 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fee3 	bl	800c420 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 ff02 	bl	800c480 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 fe9d 	bl	800c3ec <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 fe7e 	bl	800c3ec <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 febb 	bl	800c480 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 ff58 	bl	800c5cc <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 ff36 	bl	800c5cc <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 fe45 	bl	800c420 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 fe61 	bl	800c480 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 fe43 	bl	800c480 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20002cf4 	strdcs	r2, [r0], -r4
 8007814:	20002cfc 	strdcs	r2, [r0], -ip
 8007818:	20002184 	andcs	r2, r0, r4, lsl #3
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 fdb9 	bl	800c3ec <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 fdf4 	bl	800c480 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20002cf4 	strdcs	r2, [r0], -r4

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 ff02 	bl	800c728 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 fefb 	bl	800c728 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20003334 	andcs	r3, r0, r4, lsr r3
 800795c:	20003354 	andcs	r3, r0, r4, asr r3

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f006 b86c 	b.w	800da4c <arp_handle_request>
 8007974:	f006 b892 	b.w	800da9c <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009f84 	andcs	r9, r0, r4, lsl #31
 8007a14:	20009e60 	andcs	r9, r0, r0, ror #28

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f006 fb9d 	bl	800e1a4 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f006 fb98 	bl	800e1a4 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f006 fb8d 	bl	800e1a4 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f006 fb82 	bl	800e1a4 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f006 fb63 	bl	800e172 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f006 fb56 	bl	800e172 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f008 f991 	bl	800fdf8 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20002160 	andcs	r2, r0, r0, ror #2
 8007ae0:	20002154 	andcs	r2, r0, r4, asr r1

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f000 fed2 	bl	80088ac <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <__aeabi_fmul>:
 8007b18:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007b1c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007b20:	bf1e      	ittt	ne
 8007b22:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007b26:	ea92 0f0c 	teqne	r2, ip
 8007b2a:	ea93 0f0c 	teqne	r3, ip
 8007b2e:	d06f      	beq.n	8007c10 <__aeabi_fmul+0xf8>
 8007b30:	441a      	add	r2, r3
 8007b32:	ea80 0c01 	eor.w	ip, r0, r1
 8007b36:	0240      	lsls	r0, r0, #9
 8007b38:	bf18      	it	ne
 8007b3a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007b3e:	d01e      	beq.n	8007b7e <__aeabi_fmul+0x66>
 8007b40:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007b44:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007b48:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007b4c:	fba0 3101 	umull	r3, r1, r0, r1
 8007b50:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007b54:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007b58:	bf3e      	ittt	cc
 8007b5a:	0049      	lslcc	r1, r1, #1
 8007b5c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007b60:	005b      	lslcc	r3, r3, #1
 8007b62:	ea40 0001 	orr.w	r0, r0, r1
 8007b66:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007b6a:	2afd      	cmp	r2, #253	; 0xfd
 8007b6c:	d81d      	bhi.n	8007baa <__aeabi_fmul+0x92>
 8007b6e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b72:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007b76:	bf08      	it	eq
 8007b78:	f020 0001 	biceq.w	r0, r0, #1
 8007b7c:	4770      	bx	lr
 8007b7e:	f090 0f00 	teq	r0, #0
 8007b82:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007b86:	bf08      	it	eq
 8007b88:	0249      	lsleq	r1, r1, #9
 8007b8a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007b8e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007b92:	3a7f      	subs	r2, #127	; 0x7f
 8007b94:	bfc2      	ittt	gt
 8007b96:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007b9a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007b9e:	4770      	bxgt	lr
 8007ba0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007ba4:	f04f 0300 	mov.w	r3, #0
 8007ba8:	3a01      	subs	r2, #1
 8007baa:	dc5d      	bgt.n	8007c68 <__aeabi_fmul+0x150>
 8007bac:	f112 0f19 	cmn.w	r2, #25
 8007bb0:	bfdc      	itt	le
 8007bb2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007bb6:	4770      	bxle	lr
 8007bb8:	f1c2 0200 	rsb	r2, r2, #0
 8007bbc:	0041      	lsls	r1, r0, #1
 8007bbe:	fa21 f102 	lsr.w	r1, r1, r2
 8007bc2:	f1c2 0220 	rsb	r2, r2, #32
 8007bc6:	fa00 fc02 	lsl.w	ip, r0, r2
 8007bca:	ea5f 0031 	movs.w	r0, r1, rrx
 8007bce:	f140 0000 	adc.w	r0, r0, #0
 8007bd2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007bd6:	bf08      	it	eq
 8007bd8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007bdc:	4770      	bx	lr
 8007bde:	f092 0f00 	teq	r2, #0
 8007be2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007be6:	bf02      	ittt	eq
 8007be8:	0040      	lsleq	r0, r0, #1
 8007bea:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007bee:	3a01      	subeq	r2, #1
 8007bf0:	d0f9      	beq.n	8007be6 <__aeabi_fmul+0xce>
 8007bf2:	ea40 000c 	orr.w	r0, r0, ip
 8007bf6:	f093 0f00 	teq	r3, #0
 8007bfa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007bfe:	bf02      	ittt	eq
 8007c00:	0049      	lsleq	r1, r1, #1
 8007c02:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007c06:	3b01      	subeq	r3, #1
 8007c08:	d0f9      	beq.n	8007bfe <__aeabi_fmul+0xe6>
 8007c0a:	ea41 010c 	orr.w	r1, r1, ip
 8007c0e:	e78f      	b.n	8007b30 <__aeabi_fmul+0x18>
 8007c10:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007c14:	ea92 0f0c 	teq	r2, ip
 8007c18:	bf18      	it	ne
 8007c1a:	ea93 0f0c 	teqne	r3, ip
 8007c1e:	d00a      	beq.n	8007c36 <__aeabi_fmul+0x11e>
 8007c20:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007c24:	bf18      	it	ne
 8007c26:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007c2a:	d1d8      	bne.n	8007bde <__aeabi_fmul+0xc6>
 8007c2c:	ea80 0001 	eor.w	r0, r0, r1
 8007c30:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c34:	4770      	bx	lr
 8007c36:	f090 0f00 	teq	r0, #0
 8007c3a:	bf17      	itett	ne
 8007c3c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007c40:	4608      	moveq	r0, r1
 8007c42:	f091 0f00 	teqne	r1, #0
 8007c46:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007c4a:	d014      	beq.n	8007c76 <__aeabi_fmul+0x15e>
 8007c4c:	ea92 0f0c 	teq	r2, ip
 8007c50:	d101      	bne.n	8007c56 <__aeabi_fmul+0x13e>
 8007c52:	0242      	lsls	r2, r0, #9
 8007c54:	d10f      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c56:	ea93 0f0c 	teq	r3, ip
 8007c5a:	d103      	bne.n	8007c64 <__aeabi_fmul+0x14c>
 8007c5c:	024b      	lsls	r3, r1, #9
 8007c5e:	bf18      	it	ne
 8007c60:	4608      	movne	r0, r1
 8007c62:	d108      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c64:	ea80 0001 	eor.w	r0, r0, r1
 8007c68:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c6c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c70:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c74:	4770      	bx	lr
 8007c76:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c7a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007c7e:	4770      	bx	lr

08007c80 <__gesf2>:
 8007c80:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007c84:	e006      	b.n	8007c94 <__cmpsf2+0x4>
 8007c86:	bf00      	nop

08007c88 <__lesf2>:
 8007c88:	f04f 0c01 	mov.w	ip, #1
 8007c8c:	e002      	b.n	8007c94 <__cmpsf2+0x4>
 8007c8e:	bf00      	nop

08007c90 <__cmpsf2>:
 8007c90:	f04f 0c01 	mov.w	ip, #1
 8007c94:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007c98:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007c9c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007ca0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007ca4:	bf18      	it	ne
 8007ca6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007caa:	d011      	beq.n	8007cd0 <__cmpsf2+0x40>
 8007cac:	b001      	add	sp, #4
 8007cae:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007cb2:	bf18      	it	ne
 8007cb4:	ea90 0f01 	teqne	r0, r1
 8007cb8:	bf58      	it	pl
 8007cba:	ebb2 0003 	subspl.w	r0, r2, r3
 8007cbe:	bf88      	it	hi
 8007cc0:	17c8      	asrhi	r0, r1, #31
 8007cc2:	bf38      	it	cc
 8007cc4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007cc8:	bf18      	it	ne
 8007cca:	f040 0001 	orrne.w	r0, r0, #1
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cd4:	d102      	bne.n	8007cdc <__cmpsf2+0x4c>
 8007cd6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007cda:	d105      	bne.n	8007ce8 <__cmpsf2+0x58>
 8007cdc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007ce0:	d1e4      	bne.n	8007cac <__cmpsf2+0x1c>
 8007ce2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007ce6:	d0e1      	beq.n	8007cac <__cmpsf2+0x1c>
 8007ce8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007cec:	4770      	bx	lr
 8007cee:	bf00      	nop

08007cf0 <__aeabi_cfrcmple>:
 8007cf0:	4684      	mov	ip, r0
 8007cf2:	4608      	mov	r0, r1
 8007cf4:	4661      	mov	r1, ip
 8007cf6:	e7ff      	b.n	8007cf8 <__aeabi_cfcmpeq>

08007cf8 <__aeabi_cfcmpeq>:
 8007cf8:	b50f      	push	{r0, r1, r2, r3, lr}
 8007cfa:	f7ff ffc9 	bl	8007c90 <__cmpsf2>
 8007cfe:	2800      	cmp	r0, #0
 8007d00:	bf48      	it	mi
 8007d02:	f110 0f00 	cmnmi.w	r0, #0
 8007d06:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007d08 <__aeabi_fcmpeq>:
 8007d08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d0c:	f7ff fff4 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d10:	bf0c      	ite	eq
 8007d12:	2001      	moveq	r0, #1
 8007d14:	2000      	movne	r0, #0
 8007d16:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d1a:	bf00      	nop

08007d1c <__aeabi_fcmplt>:
 8007d1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d20:	f7ff ffea 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d24:	bf34      	ite	cc
 8007d26:	2001      	movcc	r0, #1
 8007d28:	2000      	movcs	r0, #0
 8007d2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d2e:	bf00      	nop

08007d30 <__aeabi_fcmple>:
 8007d30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d34:	f7ff ffe0 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d38:	bf94      	ite	ls
 8007d3a:	2001      	movls	r0, #1
 8007d3c:	2000      	movhi	r0, #0
 8007d3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d42:	bf00      	nop

08007d44 <__aeabi_fcmpge>:
 8007d44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d48:	f7ff ffd2 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d4c:	bf94      	ite	ls
 8007d4e:	2001      	movls	r0, #1
 8007d50:	2000      	movhi	r0, #0
 8007d52:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d56:	bf00      	nop

08007d58 <__aeabi_fcmpgt>:
 8007d58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d5c:	f7ff ffc8 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d60:	bf34      	ite	cc
 8007d62:	2001      	movcc	r0, #1
 8007d64:	2000      	movcs	r0, #0
 8007d66:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d6a:	bf00      	nop

08007d6c <__aeabi_f2uiz>:
 8007d6c:	0042      	lsls	r2, r0, #1
 8007d6e:	d20e      	bcs.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d70:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007d74:	d30b      	bcc.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d76:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007d7a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007d7e:	d409      	bmi.n	8007d94 <__aeabi_f2uiz+0x28>
 8007d80:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007d84:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007d88:	fa23 f002 	lsr.w	r0, r3, r2
 8007d8c:	4770      	bx	lr
 8007d8e:	f04f 0000 	mov.w	r0, #0
 8007d92:	4770      	bx	lr
 8007d94:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007d98:	d101      	bne.n	8007d9e <__aeabi_f2uiz+0x32>
 8007d9a:	0242      	lsls	r2, r0, #9
 8007d9c:	d102      	bne.n	8007da4 <__aeabi_f2uiz+0x38>
 8007d9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007da2:	4770      	bx	lr
 8007da4:	f04f 0000 	mov.w	r0, #0
 8007da8:	4770      	bx	lr
 8007daa:	bf00      	nop

08007dac <Reset_Handler>:
 8007dac:	480c      	ldr	r0, [pc, #48]	; (8007de0 <Zerobss+0x10>)
 8007dae:	4685      	mov	sp, r0
 8007db0:	2100      	movs	r1, #0
 8007db2:	e003      	b.n	8007dbc <DataInit>

08007db4 <CopyData>:
 8007db4:	4b0b      	ldr	r3, [pc, #44]	; (8007de4 <Zerobss+0x14>)
 8007db6:	585b      	ldr	r3, [r3, r1]
 8007db8:	5043      	str	r3, [r0, r1]
 8007dba:	3104      	adds	r1, #4

08007dbc <DataInit>:
 8007dbc:	480a      	ldr	r0, [pc, #40]	; (8007de8 <Zerobss+0x18>)
 8007dbe:	4b0b      	ldr	r3, [pc, #44]	; (8007dec <Zerobss+0x1c>)
 8007dc0:	1842      	adds	r2, r0, r1
 8007dc2:	429a      	cmp	r2, r3
 8007dc4:	d3f6      	bcc.n	8007db4 <CopyData>
 8007dc6:	4a0a      	ldr	r2, [pc, #40]	; (8007df0 <Zerobss+0x20>)
 8007dc8:	e002      	b.n	8007dd0 <Zerobss>

08007dca <FillZerobss>:
 8007dca:	2300      	movs	r3, #0
 8007dcc:	f842 3b04 	str.w	r3, [r2], #4

08007dd0 <Zerobss>:
 8007dd0:	4b08      	ldr	r3, [pc, #32]	; (8007df4 <Zerobss+0x24>)
 8007dd2:	429a      	cmp	r2, r3
 8007dd4:	d3f9      	bcc.n	8007dca <FillZerobss>
 8007dd6:	f007 faa1 	bl	800f31c <SystemInit>
 8007dda:	f000 f8f9 	bl	8007fd0 <main>
 8007dde:	4770      	bx	lr
 8007de0:	20018000 	andcs	r8, r1, r0
 8007de4:	08012b10 	stmdaeq	r1, {r4, r8, r9, fp, sp}
 8007de8:	20000000 	andcs	r0, r0, r0
 8007dec:	200000f4 	strdcs	r0, [r0], -r4
 8007df0:	200000f8 	strdcs	r0, [r0], -r8
 8007df4:	2000dd70 	andcs	sp, r0, r0, ror sp

08007df8 <ADC0_1_IRQHandler>:
 8007df8:	e7fe      	b.n	8007df8 <ADC0_1_IRQHandler>

08007dfa <memcmp>:
 8007dfa:	b510      	push	{r4, lr}
 8007dfc:	3901      	subs	r1, #1
 8007dfe:	4402      	add	r2, r0
 8007e00:	4290      	cmp	r0, r2
 8007e02:	d101      	bne.n	8007e08 <memcmp+0xe>
 8007e04:	2000      	movs	r0, #0
 8007e06:	e005      	b.n	8007e14 <memcmp+0x1a>
 8007e08:	7803      	ldrb	r3, [r0, #0]
 8007e0a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007e0e:	42a3      	cmp	r3, r4
 8007e10:	d001      	beq.n	8007e16 <memcmp+0x1c>
 8007e12:	1b18      	subs	r0, r3, r4
 8007e14:	bd10      	pop	{r4, pc}
 8007e16:	3001      	adds	r0, #1
 8007e18:	e7f2      	b.n	8007e00 <memcmp+0x6>

08007e1a <DisplayHandler::~DisplayHandler()>:
 8007e1a:	4770      	bx	lr

08007e1c <dmxconfigudp::atoi(char const*, unsigned int)>:
 8007e1c:	4603      	mov	r3, r0
 8007e1e:	b530      	push	{r4, r5, lr}
 8007e20:	4401      	add	r1, r0
 8007e22:	250a      	movs	r5, #10
 8007e24:	2000      	movs	r0, #0
 8007e26:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007e2a:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8007e2e:	2c09      	cmp	r4, #9
 8007e30:	d805      	bhi.n	8007e3e <dmxconfigudp::atoi(char const*, unsigned int)+0x22>
 8007e32:	fb05 2000 	mla	r0, r5, r0, r2
 8007e36:	4299      	cmp	r1, r3
 8007e38:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8007e3c:	d1f3      	bne.n	8007e26 <dmxconfigudp::atoi(char const*, unsigned int)+0xa>
 8007e3e:	bd30      	pop	{r4, r5, pc}

08007e40 <DisplayHandler::~DisplayHandler()>:
 8007e40:	b510      	push	{r4, lr}
 8007e42:	4604      	mov	r4, r0
 8007e44:	f007 f816 	bl	800ee74 <operator delete(void*)>
 8007e48:	4620      	mov	r0, r4
 8007e4a:	bd10      	pop	{r4, pc}

08007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007e4c:	b110      	cbz	r0, 8007e54 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007e4e:	6803      	ldr	r3, [r0, #0]
 8007e50:	6a1b      	ldr	r3, [r3, #32]
 8007e52:	4718      	bx	r3
 8007e54:	4770      	bx	lr

08007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8007e56:	b430      	push	{r4, r5}
 8007e58:	b168      	cbz	r0, 8007e76 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	7905      	ldrb	r5, [r0, #4]
 8007e5e:	5cd4      	ldrb	r4, [r2, r3]
 8007e60:	b11c      	cbz	r4, 8007e6a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8007e62:	1c5c      	adds	r4, r3, #1
 8007e64:	429d      	cmp	r5, r3
 8007e66:	4623      	mov	r3, r4
 8007e68:	dcf9      	bgt.n	8007e5e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8007e6a:	6804      	ldr	r4, [r0, #0]
 8007e6c:	b2db      	uxtb	r3, r3
 8007e6e:	69e4      	ldr	r4, [r4, #28]
 8007e70:	46a4      	mov	ip, r4
 8007e72:	bc30      	pop	{r4, r5}
 8007e74:	4760      	bx	ip
 8007e76:	bc30      	pop	{r4, r5}
 8007e78:	4770      	bx	lr

08007e7a <Display::PutChar(int) [clone .isra.0]>:
 8007e7a:	b110      	cbz	r0, 8007e82 <Display::PutChar(int) [clone .isra.0]+0x8>
 8007e7c:	6803      	ldr	r3, [r0, #0]
 8007e7e:	695b      	ldr	r3, [r3, #20]
 8007e80:	4718      	bx	r3
 8007e82:	4770      	bx	lr

08007e84 <DisplayHandler::Print(unsigned int)>:
 8007e84:	b538      	push	{r3, r4, r5, lr}
 8007e86:	7903      	ldrb	r3, [r0, #4]
 8007e88:	b1f3      	cbz	r3, 8007ec8 <DisplayHandler::Print(unsigned int)+0x44>
 8007e8a:	2904      	cmp	r1, #4
 8007e8c:	bf98      	it	ls
 8007e8e:	4b0f      	ldrls	r3, [pc, #60]	; (8007ecc <DisplayHandler::Print(unsigned int)+0x48>)
 8007e90:	4d0f      	ldr	r5, [pc, #60]	; (8007ed0 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007e92:	bf98      	it	ls
 8007e94:	5c5c      	ldrbls	r4, [r3, r1]
 8007e96:	682b      	ldr	r3, [r5, #0]
 8007e98:	bf88      	it	hi
 8007e9a:	2455      	movhi	r4, #85	; 0x55
 8007e9c:	6998      	ldr	r0, [r3, #24]
 8007e9e:	b178      	cbz	r0, 8007ec0 <DisplayHandler::Print(unsigned int)+0x3c>
 8007ea0:	7901      	ldrb	r1, [r0, #4]
 8007ea2:	3901      	subs	r1, #1
 8007ea4:	b2c9      	uxtb	r1, r1
 8007ea6:	b168      	cbz	r0, 8007ec4 <DisplayHandler::Print(unsigned int)+0x40>
 8007ea8:	7942      	ldrb	r2, [r0, #5]
 8007eaa:	3a01      	subs	r2, #1
 8007eac:	b2d2      	uxtb	r2, r2
 8007eae:	f7ff ffcd 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007eb2:	682b      	ldr	r3, [r5, #0]
 8007eb4:	4621      	mov	r1, r4
 8007eb6:	6998      	ldr	r0, [r3, #24]
 8007eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007ebc:	f7ff bfdd 	b.w	8007e7a <Display::PutChar(int) [clone .isra.0]>
 8007ec0:	4601      	mov	r1, r0
 8007ec2:	e7ee      	b.n	8007ea2 <DisplayHandler::Print(unsigned int)+0x1e>
 8007ec4:	4602      	mov	r2, r0
 8007ec6:	e7f0      	b.n	8007eaa <DisplayHandler::Print(unsigned int)+0x26>
 8007ec8:	bd38      	pop	{r3, r4, r5, pc}
 8007eca:	bf00      	nop
 8007ecc:	080110a8 	stmdaeq	r1, {r3, r5, r7, ip}
 8007ed0:	20009ff0 	strdcs	r9, [r0], -r0

08007ed4 <Display::Printf(unsigned char, char const*, ...)>:
 8007ed4:	b40c      	push	{r2, r3}
 8007ed6:	b570      	push	{r4, r5, r6, lr}
 8007ed8:	6984      	ldr	r4, [r0, #24]
 8007eda:	4605      	mov	r5, r0
 8007edc:	460e      	mov	r6, r1
 8007ede:	b08a      	sub	sp, #40	; 0x28
 8007ee0:	b174      	cbz	r4, 8007f00 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8007ee2:	ab0f      	add	r3, sp, #60	; 0x3c
 8007ee4:	2120      	movs	r1, #32
 8007ee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007ee8:	a802      	add	r0, sp, #8
 8007eea:	9301      	str	r3, [sp, #4]
 8007eec:	f000 fcce 	bl	800888c <vsnprintf>
 8007ef0:	4604      	mov	r4, r0
 8007ef2:	69a8      	ldr	r0, [r5, #24]
 8007ef4:	4631      	mov	r1, r6
 8007ef6:	6803      	ldr	r3, [r0, #0]
 8007ef8:	aa02      	add	r2, sp, #8
 8007efa:	69dd      	ldr	r5, [r3, #28]
 8007efc:	b2a3      	uxth	r3, r4
 8007efe:	47a8      	blx	r5
 8007f00:	4620      	mov	r0, r4
 8007f02:	b00a      	add	sp, #40	; 0x28
 8007f04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007f08:	b002      	add	sp, #8
 8007f0a:	4770      	bx	lr

08007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007f0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f10:	4604      	mov	r4, r0
 8007f12:	6980      	ldr	r0, [r0, #24]
 8007f14:	460f      	mov	r7, r1
 8007f16:	4615      	mov	r5, r2
 8007f18:	461e      	mov	r6, r3
 8007f1a:	b1d8      	cbz	r0, 8007f54 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x48>
 8007f1c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8007f20:	2100      	movs	r1, #0
 8007f22:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8007f26:	fa5f f888 	uxtb.w	r8, r8
 8007f2a:	4642      	mov	r2, r8
 8007f2c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007f30:	f04f 0b00 	mov.w	fp, #0
 8007f34:	f7ff ff8a 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f38:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007f3c:	45cb      	cmp	fp, r9
 8007f3e:	69a0      	ldr	r0, [r4, #24]
 8007f40:	d327      	bcc.n	8007f92 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x86>
 8007f42:	4642      	mov	r2, r8
 8007f44:	2100      	movs	r1, #0
 8007f46:	f7ff ff81 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f4a:	463a      	mov	r2, r7
 8007f4c:	4651      	mov	r1, sl
 8007f4e:	69a0      	ldr	r0, [r4, #24]
 8007f50:	f7ff ff81 	bl	8007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8007f54:	7c63      	ldrb	r3, [r4, #17]
 8007f56:	b19b      	cbz	r3, 8007f80 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x74>
 8007f58:	43ea      	mvns	r2, r5
 8007f5a:	2312      	movs	r3, #18
 8007f5c:	7a20      	ldrb	r0, [r4, #8]
 8007f5e:	f88d 3004 	strb.w	r3, [sp, #4]
 8007f62:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007f66:	f88d 3005 	strb.w	r3, [sp, #5]
 8007f6a:	f88d 2006 	strb.w	r2, [sp, #6]
 8007f6e:	f007 ffdb 	bl	800ff28 <gd32_i2c_set_address>
 8007f72:	68e0      	ldr	r0, [r4, #12]
 8007f74:	f007 ffd0 	bl	800ff18 <gd32_i2c_set_baudrate>
 8007f78:	2103      	movs	r1, #3
 8007f7a:	a801      	add	r0, sp, #4
 8007f7c:	f007 ffda 	bl	800ff34 <gd32_i2c_write>
 8007f80:	1c73      	adds	r3, r6, #1
 8007f82:	d00c      	beq.n	8007f9e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 8007f84:	4639      	mov	r1, r7
 8007f86:	4630      	mov	r0, r6
 8007f88:	b003      	add	sp, #12
 8007f8a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f8e:	f006 be31 	b.w	800ebf4 <console_status>
 8007f92:	2120      	movs	r1, #32
 8007f94:	f7ff ff71 	bl	8007e7a <Display::PutChar(int) [clone .isra.0]>
 8007f98:	f10b 0b01 	add.w	fp, fp, #1
 8007f9c:	e7ce      	b.n	8007f3c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 8007f9e:	b003      	add	sp, #12
 8007fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007fa4 <Display::SetSleep(bool)>:
 8007fa4:	b538      	push	{r3, r4, r5, lr}
 8007fa6:	4604      	mov	r4, r0
 8007fa8:	6980      	ldr	r0, [r0, #24]
 8007faa:	460d      	mov	r5, r1
 8007fac:	b138      	cbz	r0, 8007fbe <Display::SetSleep(bool)+0x1a>
 8007fae:	6803      	ldr	r3, [r0, #0]
 8007fb0:	7421      	strb	r1, [r4, #16]
 8007fb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fb4:	4798      	blx	r3
 8007fb6:	b915      	cbnz	r5, 8007fbe <Display::SetSleep(bool)+0x1a>
 8007fb8:	4b01      	ldr	r3, [pc, #4]	; (8007fc0 <Display::SetSleep(bool)+0x1c>)
 8007fba:	681b      	ldr	r3, [r3, #0]
 8007fbc:	6063      	str	r3, [r4, #4]
 8007fbe:	bd38      	pop	{r3, r4, r5, pc}
 8007fc0:	2000a0f4 	strdcs	sl, [r0], -r4

08007fc4 <Hardware::RebootHandler()>:
 8007fc4:	4b01      	ldr	r3, [pc, #4]	; (8007fcc <Hardware::RebootHandler()+0x8>)
 8007fc6:	6818      	ldr	r0, [r3, #0]
 8007fc8:	f003 bcfa 	b.w	800b9c0 <Dmx::Blackout()>
 8007fcc:	20001100 	andcs	r1, r0, r0, lsl #2

08007fd0 <main>:
 8007fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd4:	f5ad 7d6c 	sub.w	sp, sp, #944	; 0x3b0
 8007fd8:	a805      	add	r0, sp, #20
 8007fda:	f006 febf 	bl	800ed5c <Hardware::Hardware()>
 8007fde:	a855      	add	r0, sp, #340	; 0x154
 8007fe0:	f005 f916 	bl	800d210 <Network::Network()>
 8007fe4:	a815      	add	r0, sp, #84	; 0x54
 8007fe6:	f006 fe63 	bl	800ecb0 <LedBlink::LedBlink()>
 8007fea:	a81b      	add	r0, sp, #108	; 0x6c
 8007fec:	f006 fba8 	bl	800e740 <Display::Display()>
 8007ff0:	4ab1      	ldr	r2, [pc, #708]	; (80082b8 <main+0x2e8>)
 8007ff2:	4bb2      	ldr	r3, [pc, #712]	; (80082bc <main+0x2ec>)
 8007ff4:	49b2      	ldr	r1, [pc, #712]	; (80082c0 <main+0x2f0>)
 8007ff6:	a806      	add	r0, sp, #24
 8007ff8:	f006 fe14 	bl	800ec24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007ffc:	a807      	add	r0, sp, #28
 8007ffe:	f004 f82d 	bl	800c05c <FlashRom::FlashRom()>
 8008002:	a808      	add	r0, sp, #32
 8008004:	f003 fdd4 	bl	800bbb0 <SpiFlashStore::SpiFlashStore()>
 8008008:	49ae      	ldr	r1, [pc, #696]	; (80082c4 <main+0x2f4>)
 800800a:	a806      	add	r0, sp, #24
 800800c:	f006 fe42 	bl	800ec94 <FirmwareVersion::Print(char const*)>
 8008010:	2301      	movs	r3, #1
 8008012:	4ead      	ldr	r6, [pc, #692]	; (80082c8 <main+0x2f8>)
 8008014:	2008      	movs	r0, #8
 8008016:	6133      	str	r3, [r6, #16]
 8008018:	f006 ff30 	bl	800ee7c <operator new(unsigned int)>
 800801c:	4bab      	ldr	r3, [pc, #684]	; (80082cc <main+0x2fc>)
 800801e:	9017      	str	r0, [sp, #92]	; 0x5c
 8008020:	6003      	str	r3, [r0, #0]
 8008022:	4bab      	ldr	r3, [pc, #684]	; (80082d0 <main+0x300>)
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	3b00      	subs	r3, #0
 8008028:	bf18      	it	ne
 800802a:	2301      	movne	r3, #1
 800802c:	7103      	strb	r3, [r0, #4]
 800802e:	a80a      	add	r0, sp, #40	; 0x28
 8008030:	f003 ffd4 	bl	800bfdc <StoreOscServer::StoreOscServer()>
 8008034:	a90a      	add	r1, sp, #40	; 0x28
 8008036:	a888      	add	r0, sp, #544	; 0x220
 8008038:	f002 fadc 	bl	800a5f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800803c:	a845      	add	r0, sp, #276	; 0x114
 800803e:	f001 ffdf 	bl	800a000 <OscServer::OscServer()>
 8008042:	a888      	add	r0, sp, #544	; 0x220
 8008044:	f002 fae6 	bl	800a614 <OSCServerParams::Load()>
 8008048:	b130      	cbz	r0, 8008058 <main+0x88>
 800804a:	a888      	add	r0, sp, #544	; 0x220
 800804c:	f002 fc79 	bl	800a942 <OSCServerParams::Dump()>
 8008050:	a945      	add	r1, sp, #276	; 0x114
 8008052:	a888      	add	r0, sp, #544	; 0x220
 8008054:	f002 fb88 	bl	800a768 <OSCServerParams::Set(OscServer*)>
 8008058:	2400      	movs	r4, #0
 800805a:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800805e:	2303      	movs	r3, #3
 8008060:	499c      	ldr	r1, [pc, #624]	; (80082d4 <main+0x304>)
 8008062:	a81b      	add	r0, sp, #108	; 0x6c
 8008064:	f7ff ff52 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008068:	a80f      	add	r0, sp, #60	; 0x3c
 800806a:	f003 ff7f 	bl	800bf6c <StoreNetwork::StoreNetwork()>
 800806e:	ab10      	add	r3, sp, #64	; 0x40
 8008070:	a90f      	add	r1, sp, #60	; 0x3c
 8008072:	a855      	add	r0, sp, #340	; 0x154
 8008074:	9383      	str	r3, [sp, #524]	; 0x20c
 8008076:	f005 f923 	bl	800d2c0 <Network::Init(NetworkParamsStore*)>
 800807a:	a855      	add	r0, sp, #340	; 0x154
 800807c:	f005 fa66 	bl	800d54c <Network::Print()>
 8008080:	2303      	movs	r3, #3
 8008082:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008086:	4994      	ldr	r1, [pc, #592]	; (80082d8 <main+0x308>)
 8008088:	a81b      	add	r0, sp, #108	; 0x6c
 800808a:	f7ff ff3f 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800808e:	a809      	add	r0, sp, #36	; 0x24
 8008090:	f004 fd00 	bl	800ca94 <MDNS::MDNS()>
 8008094:	a809      	add	r0, sp, #36	; 0x24
 8008096:	f004 fdbd 	bl	800cc14 <MDNS::Start()>
 800809a:	4b90      	ldr	r3, [pc, #576]	; (80082dc <main+0x30c>)
 800809c:	4621      	mov	r1, r4
 800809e:	4a90      	ldr	r2, [pc, #576]	; (80082e0 <main+0x310>)
 80080a0:	9301      	str	r3, [sp, #4]
 80080a2:	9400      	str	r4, [sp, #0]
 80080a4:	f8bd 3114 	ldrh.w	r3, [sp, #276]	; 0x114
 80080a8:	a809      	add	r0, sp, #36	; 0x24
 80080aa:	f004 ff1d 	bl	800cee8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080ae:	4b8d      	ldr	r3, [pc, #564]	; (80082e4 <main+0x314>)
 80080b0:	4621      	mov	r1, r4
 80080b2:	9301      	str	r3, [sp, #4]
 80080b4:	2301      	movs	r3, #1
 80080b6:	4a8c      	ldr	r2, [pc, #560]	; (80082e8 <main+0x318>)
 80080b8:	9300      	str	r3, [sp, #0]
 80080ba:	a809      	add	r0, sp, #36	; 0x24
 80080bc:	2350      	movs	r3, #80	; 0x50
 80080be:	f004 ff13 	bl	800cee8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080c2:	a809      	add	r0, sp, #36	; 0x24
 80080c4:	f005 f856 	bl	800d174 <MDNS::Print()>
 80080c8:	a83b      	add	r0, sp, #236	; 0xec
 80080ca:	f001 fbaf 	bl	800982c <HttpDaemon::HttpDaemon()>
 80080ce:	a83b      	add	r0, sp, #236	; 0xec
 80080d0:	f001 fbc0 	bl	8009854 <HttpDaemon::Start()>
 80080d4:	2303      	movs	r3, #3
 80080d6:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80080da:	4984      	ldr	r1, [pc, #528]	; (80082ec <main+0x31c>)
 80080dc:	a81b      	add	r0, sp, #108	; 0x6c
 80080de:	f7ff ff15 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80080e2:	a80b      	add	r0, sp, #44	; 0x2c
 80080e4:	f003 fe94 	bl	800be10 <StoreDmxSend::StoreDmxSend()>
 80080e8:	a90b      	add	r1, sp, #44	; 0x2c
 80080ea:	a811      	add	r0, sp, #68	; 0x44
 80080ec:	f002 fea2 	bl	800ae34 <DmxParams::DmxParams(DmxParamsStore*)>
 80080f0:	a822      	add	r0, sp, #136	; 0x88
 80080f2:	f003 fb0d 	bl	800b710 <Dmx::Dmx()>
 80080f6:	a811      	add	r0, sp, #68	; 0x44
 80080f8:	f002 fea8 	bl	800ae4c <DmxParams::Load()>
 80080fc:	b130      	cbz	r0, 800810c <main+0x13c>
 80080fe:	a811      	add	r0, sp, #68	; 0x44
 8008100:	f002 fff2 	bl	800b0e8 <DmxParams::Dump()>
 8008104:	a922      	add	r1, sp, #136	; 0x88
 8008106:	a811      	add	r0, sp, #68	; 0x44
 8008108:	f002 ffc4 	bl	800b094 <DmxParams::Set(Dmx*)>
 800810c:	4b78      	ldr	r3, [pc, #480]	; (80082f0 <main+0x320>)
 800810e:	ac0c      	add	r4, sp, #48	; 0x30
 8008110:	4d78      	ldr	r5, [pc, #480]	; (80082f4 <main+0x324>)
 8008112:	4620      	mov	r0, r4
 8008114:	930c      	str	r3, [sp, #48]	; 0x30
 8008116:	f002 fe33 	bl	800ad80 <DmxSend::Print()>
 800811a:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800811e:	6828      	ldr	r0, [r5, #0]
 8008120:	f005 f8a8 	bl	800d274 <Network::Begin(unsigned short)>
 8008124:	4b74      	ldr	r3, [pc, #464]	; (80082f8 <main+0x328>)
 8008126:	9452      	str	r4, [sp, #328]	; 0x148
 8008128:	6018      	str	r0, [r3, #0]
 800812a:	a845      	add	r0, sp, #276	; 0x114
 800812c:	f002 f9ce 	bl	800a4cc <OscServer::Print()>
 8008130:	4620      	mov	r0, r4
 8008132:	f002 fe25 	bl	800ad80 <DmxSend::Print()>
 8008136:	2401      	movs	r4, #1
 8008138:	9821      	ldr	r0, [sp, #132]	; 0x84
 800813a:	b118      	cbz	r0, 8008144 <main+0x174>
 800813c:	6803      	ldr	r3, [r0, #0]
 800813e:	4621      	mov	r1, r4
 8008140:	691b      	ldr	r3, [r3, #16]
 8008142:	4798      	blx	r3
 8008144:	3401      	adds	r4, #1
 8008146:	b2e4      	uxtb	r4, r4
 8008148:	2c07      	cmp	r4, #7
 800814a:	d1f5      	bne.n	8008138 <main+0x168>
 800814c:	2101      	movs	r1, #1
 800814e:	4a6b      	ldr	r2, [pc, #428]	; (80082fc <main+0x32c>)
 8008150:	a81b      	add	r0, sp, #108	; 0x6c
 8008152:	f7ff febf 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 8008156:	2102      	movs	r1, #2
 8008158:	4a69      	ldr	r2, [pc, #420]	; (8008300 <main+0x330>)
 800815a:	9821      	ldr	r0, [sp, #132]	; 0x84
 800815c:	f7ff fe7b 	bl	8007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008160:	f89d 4159 	ldrb.w	r4, [sp, #345]	; 0x159
 8008164:	682b      	ldr	r3, [r5, #0]
 8008166:	2c00      	cmp	r4, #0
 8008168:	bf14      	ite	ne
 800816a:	2444      	movne	r4, #68	; 0x44
 800816c:	2453      	moveq	r4, #83	; 0x53
 800816e:	695b      	ldr	r3, [r3, #20]
 8008170:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8008174:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008178:	0e18      	lsrs	r0, r3, #24
 800817a:	e9cd 2100 	strd	r2, r1, [sp]
 800817e:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008182:	2103      	movs	r1, #3
 8008184:	4a5f      	ldr	r2, [pc, #380]	; (8008304 <main+0x334>)
 8008186:	b2db      	uxtb	r3, r3
 8008188:	a81b      	add	r0, sp, #108	; 0x6c
 800818a:	f7ff fea3 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 800818e:	2104      	movs	r1, #4
 8008190:	f8bd 3114 	ldrh.w	r3, [sp, #276]	; 0x114
 8008194:	4a5c      	ldr	r2, [pc, #368]	; (8008308 <main+0x338>)
 8008196:	a81b      	add	r0, sp, #108	; 0x6c
 8008198:	f7ff fe9c 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 800819c:	2105      	movs	r1, #5
 800819e:	f8bd 3116 	ldrh.w	r3, [sp, #278]	; 0x116
 80081a2:	4a5a      	ldr	r2, [pc, #360]	; (800830c <main+0x33c>)
 80081a4:	a81b      	add	r0, sp, #108	; 0x6c
 80081a6:	f7ff fe95 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 80081aa:	2301      	movs	r3, #1
 80081ac:	2200      	movs	r2, #0
 80081ae:	2102      	movs	r1, #2
 80081b0:	a829      	add	r0, sp, #164	; 0xa4
 80081b2:	f000 fe7f 	bl	8008eb4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 80081b6:	a80d      	add	r0, sp, #52	; 0x34
 80081b8:	f003 ff46 	bl	800c048 <StoreRemoteConfig::StoreRemoteConfig()>
 80081bc:	a90d      	add	r1, sp, #52	; 0x34
 80081be:	a832      	add	r0, sp, #200	; 0xc8
 80081c0:	f001 f91e 	bl	8009400 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80081c4:	a832      	add	r0, sp, #200	; 0xc8
 80081c6:	f001 f925 	bl	8009414 <RemoteConfigParams::Load()>
 80081ca:	b130      	cbz	r0, 80081da <main+0x20a>
 80081cc:	a832      	add	r0, sp, #200	; 0xc8
 80081ce:	f001 fa68 	bl	80096a2 <RemoteConfigParams::Dump()>
 80081d2:	a929      	add	r1, sp, #164	; 0xa4
 80081d4:	a832      	add	r0, sp, #200	; 0xc8
 80081d6:	f001 fa44 	bl	8009662 <RemoteConfigParams::Set(RemoteConfig*)>
 80081da:	a808      	add	r0, sp, #32
 80081dc:	f003 fd92 	bl	800bd04 <SpiFlashStore::Flash()>
 80081e0:	2800      	cmp	r0, #0
 80081e2:	d1fa      	bne.n	80081da <main+0x20a>
 80081e4:	2303      	movs	r3, #3
 80081e6:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80081ea:	4949      	ldr	r1, [pc, #292]	; (8008310 <main+0x340>)
 80081ec:	a81b      	add	r0, sp, #108	; 0x6c
 80081ee:	f7ff fe8d 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081f2:	a845      	add	r0, sp, #276	; 0x114
 80081f4:	f001 ff6e 	bl	800a0d4 <OscServer::Start()>
 80081f8:	2302      	movs	r3, #2
 80081fa:	f248 0280 	movw	r2, #32896	; 0x8080
 80081fe:	4945      	ldr	r1, [pc, #276]	; (8008314 <main+0x344>)
 8008200:	a81b      	add	r0, sp, #108	; 0x6c
 8008202:	f7ff fe83 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008206:	2102      	movs	r1, #2
 8008208:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800820c:	f007 fa02 	bl	800f614 <fwdgt_config>
 8008210:	2801      	cmp	r0, #1
 8008212:	bf0c      	ite	eq
 8008214:	2301      	moveq	r3, #1
 8008216:	2300      	movne	r3, #0
 8008218:	f88d 3014 	strb.w	r3, [sp, #20]
 800821c:	d101      	bne.n	8008222 <main+0x252>
 800821e:	f007 f9e9 	bl	800f5f4 <fwdgt_enable>
 8008222:	4f3d      	ldr	r7, [pc, #244]	; (8008318 <main+0x348>)
 8008224:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80082f8 <main+0x328>
 8008228:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800831c <main+0x34c>
 800822c:	f007 f9ea 	bl	800f604 <fwdgt_counter_reload>
 8008230:	f7ff f976 	bl	8007520 <net_handle>
 8008234:	a845      	add	r0, sp, #276	; 0x114
 8008236:	f001 fffd 	bl	800a234 <OscServer::Run()>
 800823a:	a829      	add	r0, sp, #164	; 0xa4
 800823c:	f000 ffb8 	bl	80091b0 <RemoteConfig::Run()>
 8008240:	a808      	add	r0, sp, #32
 8008242:	f003 fd5f 	bl	800bd04 <SpiFlashStore::Flash()>
 8008246:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 800824a:	4933      	ldr	r1, [pc, #204]	; (8008318 <main+0x348>)
 800824c:	f898 0000 	ldrb.w	r0, [r8]
 8008250:	aa0e      	add	r2, sp, #56	; 0x38
 8008252:	f004 fb21 	bl	800c898 <udp_recv2>
 8008256:	f1a0 030b 	sub.w	r3, r0, #11
 800825a:	b29b      	uxth	r3, r3
 800825c:	2b05      	cmp	r3, #5
 800825e:	4604      	mov	r4, r0
 8008260:	d862      	bhi.n	8008328 <main+0x358>
 8008262:	683d      	ldr	r5, [r7, #0]
 8008264:	2204      	movs	r2, #4
 8008266:	4629      	mov	r1, r5
 8008268:	4648      	mov	r0, r9
 800826a:	f7ff fdc6 	bl	8007dfa <memcmp>
 800826e:	2800      	cmp	r0, #0
 8008270:	d15a      	bne.n	8008328 <main+0x358>
 8008272:	192b      	adds	r3, r5, r4
 8008274:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8008278:	f105 0a04 	add.w	sl, r5, #4
 800827c:	2b0a      	cmp	r3, #10
 800827e:	bf04      	itt	eq
 8008280:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8008284:	b2a4      	uxtheq	r4, r4
 8008286:	2c0a      	cmp	r4, #10
 8008288:	d06f      	beq.n	800836a <main+0x39a>
 800828a:	2c0e      	cmp	r4, #14
 800828c:	d86d      	bhi.n	800836a <main+0x39a>
 800828e:	2206      	movs	r2, #6
 8008290:	4651      	mov	r1, sl
 8008292:	4823      	ldr	r0, [pc, #140]	; (8008320 <main+0x350>)
 8008294:	f7ff fdb1 	bl	8007dfa <memcmp>
 8008298:	2800      	cmp	r0, #0
 800829a:	d166      	bne.n	800836a <main+0x39a>
 800829c:	2104      	movs	r1, #4
 800829e:	f105 000a 	add.w	r0, r5, #10
 80082a2:	f7ff fdbb 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80082a6:	285b      	cmp	r0, #91	; 0x5b
 80082a8:	4601      	mov	r1, r0
 80082aa:	d93d      	bls.n	8008328 <main+0x358>
 80082ac:	4b1d      	ldr	r3, [pc, #116]	; (8008324 <main+0x354>)
 80082ae:	6818      	ldr	r0, [r3, #0]
 80082b0:	f003 fb3c 	bl	800b92c <Dmx::SetDmxBreakTime(unsigned int)>
 80082b4:	e038      	b.n	8008328 <main+0x358>
 80082b6:	bf00      	nop
 80082b8:	08010fd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sl, fp}
 80082bc:	08010fcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, fp}
 80082c0:	080110ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, ip}
 80082c4:	08010fe1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, fp}
 80082c8:	40011000 	andmi	r1, r1, r0
 80082cc:	0801109c 	stmdaeq	r1, {r2, r3, r4, r7, ip}
 80082d0:	20009ff0 	strdcs	r9, [r0], -r0
 80082d4:	080124f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, sp}
 80082d8:	080124e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, sp}
 80082dc:	08011019 	stmdaeq	r1, {r0, r3, r4, ip}
 80082e0:	08011013 	stmdaeq	r1, {r0, r1, r4, ip}
 80082e4:	0801102c 	stmdaeq	r1, {r2, r3, r5, ip}
 80082e8:	08011025 	stmdaeq	r1, {r0, r2, r5, ip}
 80082ec:	080121fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sp}
 80082f0:	080122e0 	stmdaeq	r1, {r5, r6, r7, r9, sp}
 80082f4:	20009a20 	andcs	r9, r0, r0, lsr #20
 80082f8:	2000000c 	andcs	r0, r0, ip
 80082fc:	0801103c 	stmdaeq	r1, {r2, r3, r4, r5, ip}
 8008300:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 8008304:	08011051 	stmdaeq	r1, {r0, r4, r6, ip}
 8008308:	08011064 	stmdaeq	r1, {r2, r5, r6, ip}
 800830c:	0801106b 	stmdaeq	r1, {r0, r1, r3, r5, r6, ip}
 8008310:	080121e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sp}
 8008314:	08012212 	stmdaeq	r1, {r1, r4, r9, sp}
 8008318:	20001108 	andcs	r1, r0, r8, lsl #2
 800831c:	08011073 	stmdaeq	r1, {r0, r1, r4, r5, r6, ip}
 8008320:	08011078 	stmdaeq	r1, {r3, r4, r5, r6, ip}
 8008324:	20001100 	andcs	r1, r0, r0, lsl #2
 8008328:	a809      	add	r0, sp, #36	; 0x24
 800832a:	f004 feff 	bl	800d12c <MDNS::Run()>
 800832e:	a83b      	add	r0, sp, #236	; 0xec
 8008330:	f001 fcfc 	bl	8009d2c <HttpDaemon::Run()>
 8008334:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8008336:	2a00      	cmp	r2, #0
 8008338:	d161      	bne.n	80083fe <main+0x42e>
 800833a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800833c:	2900      	cmp	r1, #0
 800833e:	f43f af75 	beq.w	800822c <main+0x25c>
 8008342:	4a39      	ldr	r2, [pc, #228]	; (8008428 <main+0x458>)
 8008344:	981a      	ldr	r0, [sp, #104]	; 0x68
 8008346:	6813      	ldr	r3, [r2, #0]
 8008348:	1a1b      	subs	r3, r3, r0
 800834a:	4299      	cmp	r1, r3
 800834c:	f63f af6e 	bhi.w	800822c <main+0x25c>
 8008350:	6813      	ldr	r3, [r2, #0]
 8008352:	931a      	str	r3, [sp, #104]	; 0x68
 8008354:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008356:	2b01      	cmp	r3, #1
 8008358:	f083 0201 	eor.w	r2, r3, #1
 800835c:	bf18      	it	ne
 800835e:	2301      	movne	r3, #1
 8008360:	9219      	str	r2, [sp, #100]	; 0x64
 8008362:	bf14      	ite	ne
 8008364:	6133      	strne	r3, [r6, #16]
 8008366:	6173      	streq	r3, [r6, #20]
 8008368:	e760      	b.n	800822c <main+0x25c>
 800836a:	2204      	movs	r2, #4
 800836c:	4651      	mov	r1, sl
 800836e:	482f      	ldr	r0, [pc, #188]	; (800842c <main+0x45c>)
 8008370:	f7ff fd43 	bl	8007dfa <memcmp>
 8008374:	b978      	cbnz	r0, 8008396 <main+0x3c6>
 8008376:	2107      	movs	r1, #7
 8008378:	f105 0008 	add.w	r0, r5, #8
 800837c:	f7ff fd4e 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 8008380:	4b2b      	ldr	r3, [pc, #172]	; (8008430 <main+0x460>)
 8008382:	f1a0 020c 	sub.w	r2, r0, #12
 8008386:	429a      	cmp	r2, r3
 8008388:	4601      	mov	r1, r0
 800838a:	d8cd      	bhi.n	8008328 <main+0x358>
 800838c:	4b29      	ldr	r3, [pc, #164]	; (8008434 <main+0x464>)
 800838e:	6818      	ldr	r0, [r3, #0]
 8008390:	f003 fad6 	bl	800b940 <Dmx::SetDmxMabTime(unsigned int)>
 8008394:	e7c8      	b.n	8008328 <main+0x358>
 8008396:	2c0c      	cmp	r4, #12
 8008398:	d916      	bls.n	80083c8 <main+0x3f8>
 800839a:	2c0e      	cmp	r4, #14
 800839c:	d82c      	bhi.n	80083f8 <main+0x428>
 800839e:	2208      	movs	r2, #8
 80083a0:	4651      	mov	r1, sl
 80083a2:	4825      	ldr	r0, [pc, #148]	; (8008438 <main+0x468>)
 80083a4:	f7ff fd29 	bl	8007dfa <memcmp>
 80083a8:	bb30      	cbnz	r0, 80083f8 <main+0x428>
 80083aa:	2102      	movs	r1, #2
 80083ac:	f105 000c 	add.w	r0, r5, #12
 80083b0:	f7ff fd34 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80083b4:	4601      	mov	r1, r0
 80083b6:	b110      	cbz	r0, 80083be <main+0x3ee>
 80083b8:	4b20      	ldr	r3, [pc, #128]	; (800843c <main+0x46c>)
 80083ba:	fbb3 f1f0 	udiv	r1, r3, r0
 80083be:	4b1d      	ldr	r3, [pc, #116]	; (8008434 <main+0x464>)
 80083c0:	6818      	ldr	r0, [r3, #0]
 80083c2:	f003 fa83 	bl	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 80083c6:	e7af      	b.n	8008328 <main+0x358>
 80083c8:	2c0a      	cmp	r4, #10
 80083ca:	d0ad      	beq.n	8008328 <main+0x358>
 80083cc:	2206      	movs	r2, #6
 80083ce:	4651      	mov	r1, sl
 80083d0:	481b      	ldr	r0, [pc, #108]	; (8008440 <main+0x470>)
 80083d2:	f7ff fd12 	bl	8007dfa <memcmp>
 80083d6:	2800      	cmp	r0, #0
 80083d8:	d1a6      	bne.n	8008328 <main+0x358>
 80083da:	2103      	movs	r1, #3
 80083dc:	f105 000a 	add.w	r0, r5, #10
 80083e0:	f7ff fd1c 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80083e4:	1e83      	subs	r3, r0, #2
 80083e6:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80083ea:	d89d      	bhi.n	8008328 <main+0x358>
 80083ec:	4b11      	ldr	r3, [pc, #68]	; (8008434 <main+0x464>)
 80083ee:	b281      	uxth	r1, r0
 80083f0:	6818      	ldr	r0, [r3, #0]
 80083f2:	f003 faaf 	bl	800b954 <Dmx::SetDmxSlots(unsigned short)>
 80083f6:	e797      	b.n	8008328 <main+0x358>
 80083f8:	2c0d      	cmp	r4, #13
 80083fa:	d0e7      	beq.n	80083cc <main+0x3fc>
 80083fc:	e794      	b.n	8008328 <main+0x358>
 80083fe:	f89d 307c 	ldrb.w	r3, [sp, #124]	; 0x7c
 8008402:	b953      	cbnz	r3, 800841a <main+0x44a>
 8008404:	4b08      	ldr	r3, [pc, #32]	; (8008428 <main+0x458>)
 8008406:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	1a5b      	subs	r3, r3, r1
 800840c:	429a      	cmp	r2, r3
 800840e:	d294      	bcs.n	800833a <main+0x36a>
 8008410:	2101      	movs	r1, #1
 8008412:	a81b      	add	r0, sp, #108	; 0x6c
 8008414:	f7ff fdc6 	bl	8007fa4 <Display::SetSleep(bool)>
 8008418:	e78f      	b.n	800833a <main+0x36a>
 800841a:	f006 f90f 	bl	800e63c <display::timeout::gpio_renew()>
 800841e:	2800      	cmp	r0, #0
 8008420:	d08b      	beq.n	800833a <main+0x36a>
 8008422:	2100      	movs	r1, #0
 8008424:	e7f5      	b.n	8008412 <main+0x442>
 8008426:	bf00      	nop
 8008428:	2000a0f4 	strdcs	sl, [r0], -r4
 800842c:	0801107f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, ip}
 8008430:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8008434:	20001100 	andcs	r1, r0, r0, lsl #2
 8008438:	08011084 	stmdaeq	r1, {r2, r7, ip}
 800843c:	000f4240 	andeq	r4, pc, r0, asr #4
 8008440:	0801108d 	stmdaeq	r1, {r0, r2, r3, r7, ip}

08008444 <NetworkDisplay::ShowEmacStart()>:
 8008444:	4770      	bx	lr

08008446 <NetworkDisplay::ShowIp()>:
 8008446:	4770      	bx	lr

08008448 <NetworkDisplay::ShowShutdown()>:
 8008448:	4770      	bx	lr

0800844a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800844a:	4770      	bx	lr

0800844c <_xputch>:
 800844c:	4603      	mov	r3, r0
 800844e:	b410      	push	{r4}
 8008450:	4c08      	ldr	r4, [pc, #32]	; (8008474 <_xputch+0x28>)
 8008452:	68da      	ldr	r2, [r3, #12]
 8008454:	4608      	mov	r0, r1
 8008456:	6821      	ldr	r1, [r4, #0]
 8008458:	3201      	adds	r2, #1
 800845a:	60da      	str	r2, [r3, #12]
 800845c:	b139      	cbz	r1, 800846e <_xputch+0x22>
 800845e:	691b      	ldr	r3, [r3, #16]
 8008460:	429a      	cmp	r2, r3
 8008462:	da02      	bge.n	800846a <_xputch+0x1e>
 8008464:	1c4b      	adds	r3, r1, #1
 8008466:	6023      	str	r3, [r4, #0]
 8008468:	7008      	strb	r0, [r1, #0]
 800846a:	bc10      	pop	{r4}
 800846c:	4770      	bx	lr
 800846e:	bc10      	pop	{r4}
 8008470:	f006 bb88 	b.w	800eb84 <console_putc>
 8008474:	200000f8 	strdcs	r0, [r0], -r8

08008478 <_format_int>:
 8008478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800847c:	4698      	mov	r8, r3
 800847e:	b091      	sub	sp, #68	; 0x44
 8008480:	ea52 0308 	orrs.w	r3, r2, r8
 8008484:	4606      	mov	r6, r0
 8008486:	4617      	mov	r7, r2
 8008488:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800848c:	d133      	bne.n	80084f6 <_format_int+0x7e>
 800848e:	2330      	movs	r3, #48	; 0x30
 8008490:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008494:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008498:	6833      	ldr	r3, [r6, #0]
 800849a:	07d8      	lsls	r0, r3, #31
 800849c:	d507      	bpl.n	80084ae <_format_int+0x36>
 800849e:	466a      	mov	r2, sp
 80084a0:	2030      	movs	r0, #48	; 0x30
 80084a2:	6871      	ldr	r1, [r6, #4]
 80084a4:	1b2f      	subs	r7, r5, r4
 80084a6:	428f      	cmp	r7, r1
 80084a8:	da01      	bge.n	80084ae <_format_int+0x36>
 80084aa:	4294      	cmp	r4, r2
 80084ac:	d839      	bhi.n	8008522 <_format_int+0xaa>
 80084ae:	0699      	lsls	r1, r3, #26
 80084b0:	d507      	bpl.n	80084c2 <_format_int+0x4a>
 80084b2:	466a      	mov	r2, sp
 80084b4:	2030      	movs	r0, #48	; 0x30
 80084b6:	68b1      	ldr	r1, [r6, #8]
 80084b8:	1b2f      	subs	r7, r5, r4
 80084ba:	428f      	cmp	r7, r1
 80084bc:	da01      	bge.n	80084c2 <_format_int+0x4a>
 80084be:	4294      	cmp	r4, r2
 80084c0:	d832      	bhi.n	8008528 <_format_int+0xb0>
 80084c2:	071a      	lsls	r2, r3, #28
 80084c4:	bf44      	itt	mi
 80084c6:	222d      	movmi	r2, #45	; 0x2d
 80084c8:	f804 2901 	strbmi.w	r2, [r4], #-1
 80084cc:	065b      	lsls	r3, r3, #25
 80084ce:	d407      	bmi.n	80084e0 <_format_int+0x68>
 80084d0:	466b      	mov	r3, sp
 80084d2:	2120      	movs	r1, #32
 80084d4:	68b2      	ldr	r2, [r6, #8]
 80084d6:	1b28      	subs	r0, r5, r4
 80084d8:	4290      	cmp	r0, r2
 80084da:	da01      	bge.n	80084e0 <_format_int+0x68>
 80084dc:	429c      	cmp	r4, r3
 80084de:	d826      	bhi.n	800852e <_format_int+0xb6>
 80084e0:	1b2d      	subs	r5, r5, r4
 80084e2:	3401      	adds	r4, #1
 80084e4:	ab10      	add	r3, sp, #64	; 0x40
 80084e6:	429c      	cmp	r4, r3
 80084e8:	d324      	bcc.n	8008534 <_format_int+0xbc>
 80084ea:	68b3      	ldr	r3, [r6, #8]
 80084ec:	42ab      	cmp	r3, r5
 80084ee:	dc27      	bgt.n	8008540 <_format_int+0xc8>
 80084f0:	b011      	add	sp, #68	; 0x44
 80084f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80084f6:	462c      	mov	r4, r5
 80084f8:	46e9      	mov	r9, sp
 80084fa:	4638      	mov	r0, r7
 80084fc:	4641      	mov	r1, r8
 80084fe:	220a      	movs	r2, #10
 8008500:	2300      	movs	r3, #0
 8008502:	f7ff faef 	bl	8007ae4 <__aeabi_uldivmod>
 8008506:	3230      	adds	r2, #48	; 0x30
 8008508:	f804 2901 	strb.w	r2, [r4], #-1
 800850c:	463a      	mov	r2, r7
 800850e:	4643      	mov	r3, r8
 8008510:	2a0a      	cmp	r2, #10
 8008512:	f173 0300 	sbcs.w	r3, r3, #0
 8008516:	4607      	mov	r7, r0
 8008518:	4688      	mov	r8, r1
 800851a:	d3bd      	bcc.n	8008498 <_format_int+0x20>
 800851c:	454c      	cmp	r4, r9
 800851e:	d1ec      	bne.n	80084fa <_format_int+0x82>
 8008520:	e7ba      	b.n	8008498 <_format_int+0x20>
 8008522:	f804 0901 	strb.w	r0, [r4], #-1
 8008526:	e7bd      	b.n	80084a4 <_format_int+0x2c>
 8008528:	f804 0901 	strb.w	r0, [r4], #-1
 800852c:	e7c4      	b.n	80084b8 <_format_int+0x40>
 800852e:	f804 1901 	strb.w	r1, [r4], #-1
 8008532:	e7d0      	b.n	80084d6 <_format_int+0x5e>
 8008534:	4630      	mov	r0, r6
 8008536:	f814 1b01 	ldrb.w	r1, [r4], #1
 800853a:	f7ff ff87 	bl	800844c <_xputch>
 800853e:	e7d1      	b.n	80084e4 <_format_int+0x6c>
 8008540:	2120      	movs	r1, #32
 8008542:	4630      	mov	r0, r6
 8008544:	f7ff ff82 	bl	800844c <_xputch>
 8008548:	3501      	adds	r5, #1
 800854a:	e7ce      	b.n	80084ea <_format_int+0x72>

0800854c <_format_hex>:
 800854c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800854e:	b091      	sub	sp, #68	; 0x44
 8008550:	4606      	mov	r6, r0
 8008552:	6804      	ldr	r4, [r0, #0]
 8008554:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008558:	bb61      	cbnz	r1, 80085b4 <_format_hex+0x68>
 800855a:	2330      	movs	r3, #48	; 0x30
 800855c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008560:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008564:	07e5      	lsls	r5, r4, #31
 8008566:	d507      	bpl.n	8008578 <_format_hex+0x2c>
 8008568:	4669      	mov	r1, sp
 800856a:	2530      	movs	r5, #48	; 0x30
 800856c:	6870      	ldr	r0, [r6, #4]
 800856e:	1ad7      	subs	r7, r2, r3
 8008570:	4287      	cmp	r7, r0
 8008572:	da01      	bge.n	8008578 <_format_hex+0x2c>
 8008574:	428b      	cmp	r3, r1
 8008576:	d831      	bhi.n	80085dc <_format_hex+0x90>
 8008578:	06a0      	lsls	r0, r4, #26
 800857a:	d507      	bpl.n	800858c <_format_hex+0x40>
 800857c:	4669      	mov	r1, sp
 800857e:	2530      	movs	r5, #48	; 0x30
 8008580:	68b0      	ldr	r0, [r6, #8]
 8008582:	1ad7      	subs	r7, r2, r3
 8008584:	4287      	cmp	r7, r0
 8008586:	da01      	bge.n	800858c <_format_hex+0x40>
 8008588:	428b      	cmp	r3, r1
 800858a:	d82a      	bhi.n	80085e2 <_format_hex+0x96>
 800858c:	0661      	lsls	r1, r4, #25
 800858e:	d407      	bmi.n	80085a0 <_format_hex+0x54>
 8008590:	4669      	mov	r1, sp
 8008592:	2420      	movs	r4, #32
 8008594:	68b0      	ldr	r0, [r6, #8]
 8008596:	1ad5      	subs	r5, r2, r3
 8008598:	4285      	cmp	r5, r0
 800859a:	da01      	bge.n	80085a0 <_format_hex+0x54>
 800859c:	428b      	cmp	r3, r1
 800859e:	d823      	bhi.n	80085e8 <_format_hex+0x9c>
 80085a0:	1ad5      	subs	r5, r2, r3
 80085a2:	1c5c      	adds	r4, r3, #1
 80085a4:	ab10      	add	r3, sp, #64	; 0x40
 80085a6:	429c      	cmp	r4, r3
 80085a8:	d321      	bcc.n	80085ee <_format_hex+0xa2>
 80085aa:	68b3      	ldr	r3, [r6, #8]
 80085ac:	429d      	cmp	r5, r3
 80085ae:	db24      	blt.n	80085fa <_format_hex+0xae>
 80085b0:	b011      	add	sp, #68	; 0x44
 80085b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80085b4:	f014 0f02 	tst.w	r4, #2
 80085b8:	bf0c      	ite	eq
 80085ba:	2757      	moveq	r7, #87	; 0x57
 80085bc:	2737      	movne	r7, #55	; 0x37
 80085be:	4613      	mov	r3, r2
 80085c0:	466d      	mov	r5, sp
 80085c2:	f001 000f 	and.w	r0, r1, #15
 80085c6:	2809      	cmp	r0, #9
 80085c8:	bf94      	ite	ls
 80085ca:	3030      	addls	r0, #48	; 0x30
 80085cc:	19c0      	addhi	r0, r0, r7
 80085ce:	0909      	lsrs	r1, r1, #4
 80085d0:	f803 0901 	strb.w	r0, [r3], #-1
 80085d4:	d0c6      	beq.n	8008564 <_format_hex+0x18>
 80085d6:	42ab      	cmp	r3, r5
 80085d8:	d1f3      	bne.n	80085c2 <_format_hex+0x76>
 80085da:	e7c3      	b.n	8008564 <_format_hex+0x18>
 80085dc:	f803 5901 	strb.w	r5, [r3], #-1
 80085e0:	e7c5      	b.n	800856e <_format_hex+0x22>
 80085e2:	f803 5901 	strb.w	r5, [r3], #-1
 80085e6:	e7cc      	b.n	8008582 <_format_hex+0x36>
 80085e8:	f803 4901 	strb.w	r4, [r3], #-1
 80085ec:	e7d3      	b.n	8008596 <_format_hex+0x4a>
 80085ee:	4630      	mov	r0, r6
 80085f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80085f4:	f7ff ff2a 	bl	800844c <_xputch>
 80085f8:	e7d4      	b.n	80085a4 <_format_hex+0x58>
 80085fa:	2120      	movs	r1, #32
 80085fc:	4630      	mov	r0, r6
 80085fe:	f7ff ff25 	bl	800844c <_xputch>
 8008602:	3501      	adds	r5, #1
 8008604:	e7d1      	b.n	80085aa <_format_hex+0x5e>
	...

08008608 <_vprintf>:
 8008608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800860c:	2700      	movs	r7, #0
 800860e:	460b      	mov	r3, r1
 8008610:	4614      	mov	r4, r2
 8008612:	f04f 080a 	mov.w	r8, #10
 8008616:	b086      	sub	sp, #24
 8008618:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800861c:	7819      	ldrb	r1, [r3, #0]
 800861e:	b919      	cbnz	r1, 8008628 <_vprintf+0x20>
 8008620:	9804      	ldr	r0, [sp, #16]
 8008622:	b006      	add	sp, #24
 8008624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008628:	2925      	cmp	r1, #37	; 0x25
 800862a:	f103 0601 	add.w	r6, r3, #1
 800862e:	d004      	beq.n	800863a <_vprintf+0x32>
 8008630:	a801      	add	r0, sp, #4
 8008632:	f7ff ff0b 	bl	800844c <_xputch>
 8008636:	4633      	mov	r3, r6
 8008638:	e7f0      	b.n	800861c <_vprintf+0x14>
 800863a:	785a      	ldrb	r2, [r3, #1]
 800863c:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8008640:	2a30      	cmp	r2, #48	; 0x30
 8008642:	9703      	str	r7, [sp, #12]
 8008644:	d126      	bne.n	8008694 <_vprintf+0x8c>
 8008646:	2220      	movs	r2, #32
 8008648:	9201      	str	r2, [sp, #4]
 800864a:	1c9e      	adds	r6, r3, #2
 800864c:	2200      	movs	r2, #0
 800864e:	4635      	mov	r5, r6
 8008650:	4613      	mov	r3, r2
 8008652:	7829      	ldrb	r1, [r5, #0]
 8008654:	462e      	mov	r6, r5
 8008656:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800865a:	2809      	cmp	r0, #9
 800865c:	f105 0501 	add.w	r5, r5, #1
 8008660:	d91c      	bls.n	800869c <_vprintf+0x94>
 8008662:	b12a      	cbz	r2, 8008670 <_vprintf+0x68>
 8008664:	9303      	str	r3, [sp, #12]
 8008666:	b11b      	cbz	r3, 8008670 <_vprintf+0x68>
 8008668:	9b01      	ldr	r3, [sp, #4]
 800866a:	f043 0310 	orr.w	r3, r3, #16
 800866e:	9301      	str	r3, [sp, #4]
 8008670:	292e      	cmp	r1, #46	; 0x2e
 8008672:	d122      	bne.n	80086ba <_vprintf+0xb2>
 8008674:	7873      	ldrb	r3, [r6, #1]
 8008676:	2b2a      	cmp	r3, #42	; 0x2a
 8008678:	d014      	beq.n	80086a4 <_vprintf+0x9c>
 800867a:	2100      	movs	r1, #0
 800867c:	460a      	mov	r2, r1
 800867e:	1c70      	adds	r0, r6, #1
 8008680:	7803      	ldrb	r3, [r0, #0]
 8008682:	4606      	mov	r6, r0
 8008684:	3b30      	subs	r3, #48	; 0x30
 8008686:	2b09      	cmp	r3, #9
 8008688:	f100 0001 	add.w	r0, r0, #1
 800868c:	d930      	bls.n	80086f0 <_vprintf+0xe8>
 800868e:	b181      	cbz	r1, 80086b2 <_vprintf+0xaa>
 8008690:	9202      	str	r2, [sp, #8]
 8008692:	e00e      	b.n	80086b2 <_vprintf+0xaa>
 8008694:	2a2d      	cmp	r2, #45	; 0x2d
 8008696:	d1d9      	bne.n	800864c <_vprintf+0x44>
 8008698:	2240      	movs	r2, #64	; 0x40
 800869a:	e7d5      	b.n	8008648 <_vprintf+0x40>
 800869c:	2201      	movs	r2, #1
 800869e:	fb08 0303 	mla	r3, r8, r3, r0
 80086a2:	e7d6      	b.n	8008652 <_vprintf+0x4a>
 80086a4:	f854 3b04 	ldr.w	r3, [r4], #4
 80086a8:	3602      	adds	r6, #2
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	bfb8      	it	lt
 80086ae:	425b      	neglt	r3, r3
 80086b0:	9302      	str	r3, [sp, #8]
 80086b2:	9b01      	ldr	r3, [sp, #4]
 80086b4:	f043 0301 	orr.w	r3, r3, #1
 80086b8:	9301      	str	r3, [sp, #4]
 80086ba:	7833      	ldrb	r3, [r6, #0]
 80086bc:	2b6c      	cmp	r3, #108	; 0x6c
 80086be:	bf04      	itt	eq
 80086c0:	9b01      	ldreq	r3, [sp, #4]
 80086c2:	3601      	addeq	r6, #1
 80086c4:	7831      	ldrb	r1, [r6, #0]
 80086c6:	bf04      	itt	eq
 80086c8:	f043 0304 	orreq.w	r3, r3, #4
 80086cc:	9301      	streq	r3, [sp, #4]
 80086ce:	2978      	cmp	r1, #120	; 0x78
 80086d0:	d8ae      	bhi.n	8008630 <_vprintf+0x28>
 80086d2:	296f      	cmp	r1, #111	; 0x6f
 80086d4:	d810      	bhi.n	80086f8 <_vprintf+0xf0>
 80086d6:	2963      	cmp	r1, #99	; 0x63
 80086d8:	d048      	beq.n	800876c <_vprintf+0x164>
 80086da:	d827      	bhi.n	800872c <_vprintf+0x124>
 80086dc:	2958      	cmp	r1, #88	; 0x58
 80086de:	d1a7      	bne.n	8008630 <_vprintf+0x28>
 80086e0:	9b01      	ldr	r3, [sp, #4]
 80086e2:	f043 0302 	orr.w	r3, r3, #2
 80086e6:	9301      	str	r3, [sp, #4]
 80086e8:	4625      	mov	r5, r4
 80086ea:	f855 1b04 	ldr.w	r1, [r5], #4
 80086ee:	e056      	b.n	800879e <_vprintf+0x196>
 80086f0:	2101      	movs	r1, #1
 80086f2:	fb08 3202 	mla	r2, r8, r2, r3
 80086f6:	e7c3      	b.n	8008680 <_vprintf+0x78>
 80086f8:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 80086fc:	2b08      	cmp	r3, #8
 80086fe:	d897      	bhi.n	8008630 <_vprintf+0x28>
 8008700:	a201      	add	r2, pc, #4	; (adr r2, 8008708 <_vprintf+0x100>)
 8008702:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008706:	bf00      	nop
 8008708:	0800877f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, pc}
 800870c:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 8008710:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 8008714:	080087a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, sl, pc}
 8008718:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 800871c:	0800881b 	stmdaeq	r0, {r0, r1, r3, r4, fp, pc}
 8008720:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 8008724:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 8008728:	080086e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, pc}
 800872c:	2964      	cmp	r1, #100	; 0x64
 800872e:	d002      	beq.n	8008736 <_vprintf+0x12e>
 8008730:	2969      	cmp	r1, #105	; 0x69
 8008732:	f47f af7d 	bne.w	8008630 <_vprintf+0x28>
 8008736:	9901      	ldr	r1, [sp, #4]
 8008738:	074d      	lsls	r5, r1, #29
 800873a:	bf51      	iteee	pl
 800873c:	4625      	movpl	r5, r4
 800873e:	3407      	addmi	r4, #7
 8008740:	f024 0407 	bicmi.w	r4, r4, #7
 8008744:	4625      	movmi	r5, r4
 8008746:	bf55      	itete	pl
 8008748:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800874c:	6863      	ldrmi	r3, [r4, #4]
 800874e:	17d3      	asrpl	r3, r2, #31
 8008750:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8008754:	2b00      	cmp	r3, #0
 8008756:	da05      	bge.n	8008764 <_vprintf+0x15c>
 8008758:	f041 0108 	orr.w	r1, r1, #8
 800875c:	4252      	negs	r2, r2
 800875e:	9101      	str	r1, [sp, #4]
 8008760:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008764:	a801      	add	r0, sp, #4
 8008766:	f7ff fe87 	bl	8008478 <_format_int>
 800876a:	e005      	b.n	8008778 <_vprintf+0x170>
 800876c:	4625      	mov	r5, r4
 800876e:	a801      	add	r0, sp, #4
 8008770:	f855 1b04 	ldr.w	r1, [r5], #4
 8008774:	f7ff fe6a 	bl	800844c <_xputch>
 8008778:	462c      	mov	r4, r5
 800877a:	3601      	adds	r6, #1
 800877c:	e75b      	b.n	8008636 <_vprintf+0x2e>
 800877e:	2308      	movs	r3, #8
 8008780:	4625      	mov	r5, r4
 8008782:	9303      	str	r3, [sp, #12]
 8008784:	2320      	movs	r3, #32
 8008786:	2130      	movs	r1, #48	; 0x30
 8008788:	f855 4b04 	ldr.w	r4, [r5], #4
 800878c:	a801      	add	r0, sp, #4
 800878e:	9301      	str	r3, [sp, #4]
 8008790:	f7ff fe5c 	bl	800844c <_xputch>
 8008794:	2178      	movs	r1, #120	; 0x78
 8008796:	a801      	add	r0, sp, #4
 8008798:	f7ff fe58 	bl	800844c <_xputch>
 800879c:	4621      	mov	r1, r4
 800879e:	a801      	add	r0, sp, #4
 80087a0:	f7ff fed4 	bl	800854c <_format_hex>
 80087a4:	e7e8      	b.n	8008778 <_vprintf+0x170>
 80087a6:	4625      	mov	r5, r4
 80087a8:	2400      	movs	r4, #0
 80087aa:	f855 9b04 	ldr.w	r9, [r5], #4
 80087ae:	f819 3004 	ldrb.w	r3, [r9, r4]
 80087b2:	b993      	cbnz	r3, 80087da <_vprintf+0x1d2>
 80087b4:	9b01      	ldr	r3, [sp, #4]
 80087b6:	07d9      	lsls	r1, r3, #31
 80087b8:	d503      	bpl.n	80087c2 <_vprintf+0x1ba>
 80087ba:	9b02      	ldr	r3, [sp, #8]
 80087bc:	429c      	cmp	r4, r3
 80087be:	bfa8      	it	ge
 80087c0:	461c      	movge	r4, r3
 80087c2:	9b01      	ldr	r3, [sp, #4]
 80087c4:	f104 0a01 	add.w	sl, r4, #1
 80087c8:	065a      	lsls	r2, r3, #25
 80087ca:	d403      	bmi.n	80087d4 <_vprintf+0x1cc>
 80087cc:	9b03      	ldr	r3, [sp, #12]
 80087ce:	429c      	cmp	r4, r3
 80087d0:	db05      	blt.n	80087de <_vprintf+0x1d6>
 80087d2:	4654      	mov	r4, sl
 80087d4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087d8:	e00d      	b.n	80087f6 <_vprintf+0x1ee>
 80087da:	3401      	adds	r4, #1
 80087dc:	e7e7      	b.n	80087ae <_vprintf+0x1a6>
 80087de:	2120      	movs	r1, #32
 80087e0:	a801      	add	r0, sp, #4
 80087e2:	f7ff fe33 	bl	800844c <_xputch>
 80087e6:	4654      	mov	r4, sl
 80087e8:	e7eb      	b.n	80087c2 <_vprintf+0x1ba>
 80087ea:	a801      	add	r0, sp, #4
 80087ec:	f7ff fe2e 	bl	800844c <_xputch>
 80087f0:	9b02      	ldr	r3, [sp, #8]
 80087f2:	3b01      	subs	r3, #1
 80087f4:	9302      	str	r3, [sp, #8]
 80087f6:	9b01      	ldr	r3, [sp, #4]
 80087f8:	07db      	lsls	r3, r3, #31
 80087fa:	d501      	bpl.n	8008800 <_vprintf+0x1f8>
 80087fc:	9b02      	ldr	r3, [sp, #8]
 80087fe:	b11b      	cbz	r3, 8008808 <_vprintf+0x200>
 8008800:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008804:	2900      	cmp	r1, #0
 8008806:	d1f0      	bne.n	80087ea <_vprintf+0x1e2>
 8008808:	9b03      	ldr	r3, [sp, #12]
 800880a:	42a3      	cmp	r3, r4
 800880c:	ddb4      	ble.n	8008778 <_vprintf+0x170>
 800880e:	2120      	movs	r1, #32
 8008810:	a801      	add	r0, sp, #4
 8008812:	f7ff fe1b 	bl	800844c <_xputch>
 8008816:	3401      	adds	r4, #1
 8008818:	e7f6      	b.n	8008808 <_vprintf+0x200>
 800881a:	9b01      	ldr	r3, [sp, #4]
 800881c:	f013 0304 	ands.w	r3, r3, #4
 8008820:	bf1d      	ittte	ne
 8008822:	3407      	addne	r4, #7
 8008824:	f024 0407 	bicne.w	r4, r4, #7
 8008828:	4625      	movne	r5, r4
 800882a:	4625      	moveq	r5, r4
 800882c:	bf1a      	itte	ne
 800882e:	f855 2b08 	ldrne.w	r2, [r5], #8
 8008832:	6863      	ldrne	r3, [r4, #4]
 8008834:	f855 2b04 	ldreq.w	r2, [r5], #4
 8008838:	e794      	b.n	8008764 <_vprintf+0x15c>
 800883a:	bf00      	nop

0800883c <printf>:
 800883c:	b40f      	push	{r0, r1, r2, r3}
 800883e:	b507      	push	{r0, r1, r2, lr}
 8008840:	aa04      	add	r2, sp, #16
 8008842:	f852 1b04 	ldr.w	r1, [r2], #4
 8008846:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800884a:	9201      	str	r2, [sp, #4]
 800884c:	f7ff fedc 	bl	8008608 <_vprintf>
 8008850:	b003      	add	sp, #12
 8008852:	f85d eb04 	ldr.w	lr, [sp], #4
 8008856:	b004      	add	sp, #16
 8008858:	4770      	bx	lr
	...

0800885c <snprintf>:
 800885c:	b40c      	push	{r2, r3}
 800885e:	460b      	mov	r3, r1
 8008860:	b513      	push	{r0, r1, r4, lr}
 8008862:	4c09      	ldr	r4, [pc, #36]	; (8008888 <snprintf+0x2c>)
 8008864:	aa04      	add	r2, sp, #16
 8008866:	f852 1b04 	ldr.w	r1, [r2], #4
 800886a:	6020      	str	r0, [r4, #0]
 800886c:	4618      	mov	r0, r3
 800886e:	9201      	str	r2, [sp, #4]
 8008870:	f7ff feca 	bl	8008608 <_vprintf>
 8008874:	2300      	movs	r3, #0
 8008876:	6822      	ldr	r2, [r4, #0]
 8008878:	6023      	str	r3, [r4, #0]
 800887a:	7013      	strb	r3, [r2, #0]
 800887c:	b002      	add	sp, #8
 800887e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008882:	b002      	add	sp, #8
 8008884:	4770      	bx	lr
 8008886:	bf00      	nop
 8008888:	200000f8 	strdcs	r0, [r0], -r8

0800888c <vsnprintf>:
 800888c:	b538      	push	{r3, r4, r5, lr}
 800888e:	4605      	mov	r5, r0
 8008890:	4c05      	ldr	r4, [pc, #20]	; (80088a8 <vsnprintf+0x1c>)
 8008892:	4608      	mov	r0, r1
 8008894:	4611      	mov	r1, r2
 8008896:	461a      	mov	r2, r3
 8008898:	6025      	str	r5, [r4, #0]
 800889a:	f7ff feb5 	bl	8008608 <_vprintf>
 800889e:	2300      	movs	r3, #0
 80088a0:	6822      	ldr	r2, [r4, #0]
 80088a2:	6023      	str	r3, [r4, #0]
 80088a4:	7013      	strb	r3, [r2, #0]
 80088a6:	bd38      	pop	{r3, r4, r5, pc}
 80088a8:	200000f8 	strdcs	r0, [r0], -r8

080088ac <__udivmoddi4>:
 80088ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088b0:	9e08      	ldr	r6, [sp, #32]
 80088b2:	460d      	mov	r5, r1
 80088b4:	4604      	mov	r4, r0
 80088b6:	468e      	mov	lr, r1
 80088b8:	2b00      	cmp	r3, #0
 80088ba:	d14c      	bne.n	8008956 <__udivmoddi4+0xaa>
 80088bc:	428a      	cmp	r2, r1
 80088be:	4694      	mov	ip, r2
 80088c0:	d967      	bls.n	8008992 <__udivmoddi4+0xe6>
 80088c2:	fab2 f382 	clz	r3, r2
 80088c6:	b153      	cbz	r3, 80088de <__udivmoddi4+0x32>
 80088c8:	fa02 fc03 	lsl.w	ip, r2, r3
 80088cc:	f1c3 0220 	rsb	r2, r3, #32
 80088d0:	fa01 fe03 	lsl.w	lr, r1, r3
 80088d4:	fa20 f202 	lsr.w	r2, r0, r2
 80088d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80088dc:	409c      	lsls	r4, r3
 80088de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80088e2:	fbbe f1f7 	udiv	r1, lr, r7
 80088e6:	fa1f f58c 	uxth.w	r5, ip
 80088ea:	fb07 ee11 	mls	lr, r7, r1, lr
 80088ee:	fb01 f005 	mul.w	r0, r1, r5
 80088f2:	0c22      	lsrs	r2, r4, #16
 80088f4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80088f8:	4290      	cmp	r0, r2
 80088fa:	d90a      	bls.n	8008912 <__udivmoddi4+0x66>
 80088fc:	eb1c 0202 	adds.w	r2, ip, r2
 8008900:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8008904:	f080 8119 	bcs.w	8008b3a <__udivmoddi4+0x28e>
 8008908:	4290      	cmp	r0, r2
 800890a:	f240 8116 	bls.w	8008b3a <__udivmoddi4+0x28e>
 800890e:	3902      	subs	r1, #2
 8008910:	4462      	add	r2, ip
 8008912:	1a12      	subs	r2, r2, r0
 8008914:	fbb2 f0f7 	udiv	r0, r2, r7
 8008918:	fb07 2210 	mls	r2, r7, r0, r2
 800891c:	fb00 f505 	mul.w	r5, r0, r5
 8008920:	b2a4      	uxth	r4, r4
 8008922:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8008926:	42a5      	cmp	r5, r4
 8008928:	d90a      	bls.n	8008940 <__udivmoddi4+0x94>
 800892a:	eb1c 0404 	adds.w	r4, ip, r4
 800892e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8008932:	f080 8104 	bcs.w	8008b3e <__udivmoddi4+0x292>
 8008936:	42a5      	cmp	r5, r4
 8008938:	f240 8101 	bls.w	8008b3e <__udivmoddi4+0x292>
 800893c:	4464      	add	r4, ip
 800893e:	3802      	subs	r0, #2
 8008940:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8008944:	2100      	movs	r1, #0
 8008946:	1b64      	subs	r4, r4, r5
 8008948:	b11e      	cbz	r6, 8008952 <__udivmoddi4+0xa6>
 800894a:	40dc      	lsrs	r4, r3
 800894c:	2300      	movs	r3, #0
 800894e:	e9c6 4300 	strd	r4, r3, [r6]
 8008952:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008956:	428b      	cmp	r3, r1
 8008958:	d908      	bls.n	800896c <__udivmoddi4+0xc0>
 800895a:	2e00      	cmp	r6, #0
 800895c:	f000 80ea 	beq.w	8008b34 <__udivmoddi4+0x288>
 8008960:	2100      	movs	r1, #0
 8008962:	e9c6 0500 	strd	r0, r5, [r6]
 8008966:	4608      	mov	r0, r1
 8008968:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800896c:	fab3 f183 	clz	r1, r3
 8008970:	2900      	cmp	r1, #0
 8008972:	d148      	bne.n	8008a06 <__udivmoddi4+0x15a>
 8008974:	42ab      	cmp	r3, r5
 8008976:	d302      	bcc.n	800897e <__udivmoddi4+0xd2>
 8008978:	4282      	cmp	r2, r0
 800897a:	f200 80f8 	bhi.w	8008b6e <__udivmoddi4+0x2c2>
 800897e:	1a84      	subs	r4, r0, r2
 8008980:	eb65 0203 	sbc.w	r2, r5, r3
 8008984:	2001      	movs	r0, #1
 8008986:	4696      	mov	lr, r2
 8008988:	2e00      	cmp	r6, #0
 800898a:	d0e2      	beq.n	8008952 <__udivmoddi4+0xa6>
 800898c:	e9c6 4e00 	strd	r4, lr, [r6]
 8008990:	e7df      	b.n	8008952 <__udivmoddi4+0xa6>
 8008992:	b902      	cbnz	r2, 8008996 <__udivmoddi4+0xea>
 8008994:	deff      	udf	#255	; 0xff
 8008996:	fab2 f382 	clz	r3, r2
 800899a:	2b00      	cmp	r3, #0
 800899c:	f040 808e 	bne.w	8008abc <__udivmoddi4+0x210>
 80089a0:	1a88      	subs	r0, r1, r2
 80089a2:	2101      	movs	r1, #1
 80089a4:	0c17      	lsrs	r7, r2, #16
 80089a6:	fa1f fe82 	uxth.w	lr, r2
 80089aa:	fbb0 f5f7 	udiv	r5, r0, r7
 80089ae:	fb07 0015 	mls	r0, r7, r5, r0
 80089b2:	0c22      	lsrs	r2, r4, #16
 80089b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80089b8:	fb0e f005 	mul.w	r0, lr, r5
 80089bc:	4290      	cmp	r0, r2
 80089be:	d908      	bls.n	80089d2 <__udivmoddi4+0x126>
 80089c0:	eb1c 0202 	adds.w	r2, ip, r2
 80089c4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80089c8:	d202      	bcs.n	80089d0 <__udivmoddi4+0x124>
 80089ca:	4290      	cmp	r0, r2
 80089cc:	f200 80cc 	bhi.w	8008b68 <__udivmoddi4+0x2bc>
 80089d0:	4645      	mov	r5, r8
 80089d2:	1a12      	subs	r2, r2, r0
 80089d4:	fbb2 f0f7 	udiv	r0, r2, r7
 80089d8:	fb07 2210 	mls	r2, r7, r0, r2
 80089dc:	fb0e fe00 	mul.w	lr, lr, r0
 80089e0:	b2a4      	uxth	r4, r4
 80089e2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80089e6:	45a6      	cmp	lr, r4
 80089e8:	d908      	bls.n	80089fc <__udivmoddi4+0x150>
 80089ea:	eb1c 0404 	adds.w	r4, ip, r4
 80089ee:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80089f2:	d202      	bcs.n	80089fa <__udivmoddi4+0x14e>
 80089f4:	45a6      	cmp	lr, r4
 80089f6:	f200 80b4 	bhi.w	8008b62 <__udivmoddi4+0x2b6>
 80089fa:	4610      	mov	r0, r2
 80089fc:	eba4 040e 	sub.w	r4, r4, lr
 8008a00:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8008a04:	e7a0      	b.n	8008948 <__udivmoddi4+0x9c>
 8008a06:	f1c1 0720 	rsb	r7, r1, #32
 8008a0a:	408b      	lsls	r3, r1
 8008a0c:	fa22 fc07 	lsr.w	ip, r2, r7
 8008a10:	ea4c 0c03 	orr.w	ip, ip, r3
 8008a14:	fa25 fa07 	lsr.w	sl, r5, r7
 8008a18:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8008a1c:	fbba f8f9 	udiv	r8, sl, r9
 8008a20:	408d      	lsls	r5, r1
 8008a22:	fa20 f307 	lsr.w	r3, r0, r7
 8008a26:	fb09 aa18 	mls	sl, r9, r8, sl
 8008a2a:	fa1f fe8c 	uxth.w	lr, ip
 8008a2e:	432b      	orrs	r3, r5
 8008a30:	fa00 f501 	lsl.w	r5, r0, r1
 8008a34:	fb08 f00e 	mul.w	r0, r8, lr
 8008a38:	0c1c      	lsrs	r4, r3, #16
 8008a3a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8008a3e:	42a0      	cmp	r0, r4
 8008a40:	fa02 f201 	lsl.w	r2, r2, r1
 8008a44:	d90b      	bls.n	8008a5e <__udivmoddi4+0x1b2>
 8008a46:	eb1c 0404 	adds.w	r4, ip, r4
 8008a4a:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008a4e:	f080 8086 	bcs.w	8008b5e <__udivmoddi4+0x2b2>
 8008a52:	42a0      	cmp	r0, r4
 8008a54:	f240 8083 	bls.w	8008b5e <__udivmoddi4+0x2b2>
 8008a58:	f1a8 0802 	sub.w	r8, r8, #2
 8008a5c:	4464      	add	r4, ip
 8008a5e:	1a24      	subs	r4, r4, r0
 8008a60:	b298      	uxth	r0, r3
 8008a62:	fbb4 f3f9 	udiv	r3, r4, r9
 8008a66:	fb09 4413 	mls	r4, r9, r3, r4
 8008a6a:	fb03 fe0e 	mul.w	lr, r3, lr
 8008a6e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8008a72:	45a6      	cmp	lr, r4
 8008a74:	d908      	bls.n	8008a88 <__udivmoddi4+0x1dc>
 8008a76:	eb1c 0404 	adds.w	r4, ip, r4
 8008a7a:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8008a7e:	d26a      	bcs.n	8008b56 <__udivmoddi4+0x2aa>
 8008a80:	45a6      	cmp	lr, r4
 8008a82:	d968      	bls.n	8008b56 <__udivmoddi4+0x2aa>
 8008a84:	3b02      	subs	r3, #2
 8008a86:	4464      	add	r4, ip
 8008a88:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8008a8c:	fba0 9302 	umull	r9, r3, r0, r2
 8008a90:	eba4 040e 	sub.w	r4, r4, lr
 8008a94:	429c      	cmp	r4, r3
 8008a96:	46c8      	mov	r8, r9
 8008a98:	469e      	mov	lr, r3
 8008a9a:	d354      	bcc.n	8008b46 <__udivmoddi4+0x29a>
 8008a9c:	d051      	beq.n	8008b42 <__udivmoddi4+0x296>
 8008a9e:	2e00      	cmp	r6, #0
 8008aa0:	d067      	beq.n	8008b72 <__udivmoddi4+0x2c6>
 8008aa2:	ebb5 0308 	subs.w	r3, r5, r8
 8008aa6:	eb64 040e 	sbc.w	r4, r4, lr
 8008aaa:	40cb      	lsrs	r3, r1
 8008aac:	fa04 f707 	lsl.w	r7, r4, r7
 8008ab0:	431f      	orrs	r7, r3
 8008ab2:	40cc      	lsrs	r4, r1
 8008ab4:	e9c6 7400 	strd	r7, r4, [r6]
 8008ab8:	2100      	movs	r1, #0
 8008aba:	e74a      	b.n	8008952 <__udivmoddi4+0xa6>
 8008abc:	fa02 fc03 	lsl.w	ip, r2, r3
 8008ac0:	f1c3 0020 	rsb	r0, r3, #32
 8008ac4:	40c1      	lsrs	r1, r0
 8008ac6:	409d      	lsls	r5, r3
 8008ac8:	fa24 f000 	lsr.w	r0, r4, r0
 8008acc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8008ad0:	4328      	orrs	r0, r5
 8008ad2:	fbb1 f5f7 	udiv	r5, r1, r7
 8008ad6:	fb07 1115 	mls	r1, r7, r5, r1
 8008ada:	fa1f fe8c 	uxth.w	lr, ip
 8008ade:	0c02      	lsrs	r2, r0, #16
 8008ae0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008ae4:	fb05 f10e 	mul.w	r1, r5, lr
 8008ae8:	4291      	cmp	r1, r2
 8008aea:	fa04 f403 	lsl.w	r4, r4, r3
 8008aee:	d908      	bls.n	8008b02 <__udivmoddi4+0x256>
 8008af0:	eb1c 0202 	adds.w	r2, ip, r2
 8008af4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8008af8:	d22f      	bcs.n	8008b5a <__udivmoddi4+0x2ae>
 8008afa:	4291      	cmp	r1, r2
 8008afc:	d92d      	bls.n	8008b5a <__udivmoddi4+0x2ae>
 8008afe:	3d02      	subs	r5, #2
 8008b00:	4462      	add	r2, ip
 8008b02:	1a52      	subs	r2, r2, r1
 8008b04:	fbb2 f1f7 	udiv	r1, r2, r7
 8008b08:	fb07 2211 	mls	r2, r7, r1, r2
 8008b0c:	b280      	uxth	r0, r0
 8008b0e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8008b12:	fb01 f20e 	mul.w	r2, r1, lr
 8008b16:	4282      	cmp	r2, r0
 8008b18:	d908      	bls.n	8008b2c <__udivmoddi4+0x280>
 8008b1a:	eb1c 0000 	adds.w	r0, ip, r0
 8008b1e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8008b22:	d216      	bcs.n	8008b52 <__udivmoddi4+0x2a6>
 8008b24:	4282      	cmp	r2, r0
 8008b26:	d914      	bls.n	8008b52 <__udivmoddi4+0x2a6>
 8008b28:	3902      	subs	r1, #2
 8008b2a:	4460      	add	r0, ip
 8008b2c:	1a80      	subs	r0, r0, r2
 8008b2e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8008b32:	e73a      	b.n	80089aa <__udivmoddi4+0xfe>
 8008b34:	4631      	mov	r1, r6
 8008b36:	4630      	mov	r0, r6
 8008b38:	e70b      	b.n	8008952 <__udivmoddi4+0xa6>
 8008b3a:	4671      	mov	r1, lr
 8008b3c:	e6e9      	b.n	8008912 <__udivmoddi4+0x66>
 8008b3e:	4610      	mov	r0, r2
 8008b40:	e6fe      	b.n	8008940 <__udivmoddi4+0x94>
 8008b42:	454d      	cmp	r5, r9
 8008b44:	d2ab      	bcs.n	8008a9e <__udivmoddi4+0x1f2>
 8008b46:	ebb9 0802 	subs.w	r8, r9, r2
 8008b4a:	eb63 0e0c 	sbc.w	lr, r3, ip
 8008b4e:	3801      	subs	r0, #1
 8008b50:	e7a5      	b.n	8008a9e <__udivmoddi4+0x1f2>
 8008b52:	4641      	mov	r1, r8
 8008b54:	e7ea      	b.n	8008b2c <__udivmoddi4+0x280>
 8008b56:	4603      	mov	r3, r0
 8008b58:	e796      	b.n	8008a88 <__udivmoddi4+0x1dc>
 8008b5a:	4645      	mov	r5, r8
 8008b5c:	e7d1      	b.n	8008b02 <__udivmoddi4+0x256>
 8008b5e:	46d0      	mov	r8, sl
 8008b60:	e77d      	b.n	8008a5e <__udivmoddi4+0x1b2>
 8008b62:	4464      	add	r4, ip
 8008b64:	3802      	subs	r0, #2
 8008b66:	e749      	b.n	80089fc <__udivmoddi4+0x150>
 8008b68:	3d02      	subs	r5, #2
 8008b6a:	4462      	add	r2, ip
 8008b6c:	e731      	b.n	80089d2 <__udivmoddi4+0x126>
 8008b6e:	4608      	mov	r0, r1
 8008b70:	e70a      	b.n	8008988 <__udivmoddi4+0xdc>
 8008b72:	4631      	mov	r1, r6
 8008b74:	e6ed      	b.n	8008952 <__udivmoddi4+0xa6>
 8008b76:	bf00      	nop

08008b78 <RemoteConfig::HandleList()>:
 8008b78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008b7c:	6801      	ldr	r1, [r0, #0]
 8008b7e:	4604      	mov	r4, r0
 8008b80:	2012      	movs	r0, #18
 8008b82:	f04f 080c 	mov.w	r8, #12
 8008b86:	4a29      	ldr	r2, [pc, #164]	; (8008c2c <RemoteConfig::HandleList()+0xb4>)
 8008b88:	4b29      	ldr	r3, [pc, #164]	; (8008c30 <RemoteConfig::HandleList()+0xb8>)
 8008b8a:	fb00 2201 	mla	r2, r0, r1, r2
 8008b8e:	6860      	ldr	r0, [r4, #4]
 8008b90:	4928      	ldr	r1, [pc, #160]	; (8008c34 <RemoteConfig::HandleList()+0xbc>)
 8008b92:	681b      	ldr	r3, [r3, #0]
 8008b94:	fb08 1100 	mla	r1, r8, r0, r1
 8008b98:	4e27      	ldr	r6, [pc, #156]	; (8008c38 <RemoteConfig::HandleList()+0xc0>)
 8008b9a:	4828      	ldr	r0, [pc, #160]	; (8008c3c <RemoteConfig::HandleList()+0xc4>)
 8008b9c:	695f      	ldr	r7, [r3, #20]
 8008b9e:	6835      	ldr	r5, [r6, #0]
 8008ba0:	f890 9009 	ldrb.w	r9, [r0, #9]
 8008ba4:	b2fb      	uxtb	r3, r7
 8008ba6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8008baa:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8008bae:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8008bb2:	b089      	sub	sp, #36	; 0x24
 8008bb4:	3507      	adds	r5, #7
 8008bb6:	0e3f      	lsrs	r7, r7, #24
 8008bb8:	f1b9 0f00 	cmp.w	r9, #0
 8008bbc:	d01d      	beq.n	8008bfa <RemoteConfig::HandleList()+0x82>
 8008bbe:	3009      	adds	r0, #9
 8008bc0:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8008bc4:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8008bc8:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008bcc:	4628      	mov	r0, r5
 8008bce:	e9cd e701 	strd	lr, r7, [sp, #4]
 8008bd2:	4a1b      	ldr	r2, [pc, #108]	; (8008c40 <RemoteConfig::HandleList()+0xc8>)
 8008bd4:	f8cd c000 	str.w	ip, [sp]
 8008bd8:	f7ff fe40 	bl	800885c <snprintf>
 8008bdc:	69e3      	ldr	r3, [r4, #28]
 8008bde:	2b05      	cmp	r3, #5
 8008be0:	d118      	bne.n	8008c14 <RemoteConfig::HandleList()+0x9c>
 8008be2:	f642 1305 	movw	r3, #10501	; 0x2905
 8008be6:	9300      	str	r3, [sp, #0]
 8008be8:	69a3      	ldr	r3, [r4, #24]
 8008bea:	b282      	uxth	r2, r0
 8008bec:	4629      	mov	r1, r5
 8008bee:	7d20      	ldrb	r0, [r4, #20]
 8008bf0:	f003 fe78 	bl	800c8e4 <udp_send>
 8008bf4:	b009      	add	sp, #36	; 0x24
 8008bf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008bfa:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8008bfe:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8008c02:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008c06:	4628      	mov	r0, r5
 8008c08:	e9cd ce00 	strd	ip, lr, [sp]
 8008c0c:	4a0d      	ldr	r2, [pc, #52]	; (8008c44 <RemoteConfig::HandleList()+0xcc>)
 8008c0e:	f7ff fe25 	bl	800885c <snprintf>
 8008c12:	e7e3      	b.n	8008bdc <RemoteConfig::HandleList()+0x64>
 8008c14:	2b06      	cmp	r3, #6
 8008c16:	d1ed      	bne.n	8008bf4 <RemoteConfig::HandleList()+0x7c>
 8008c18:	6833      	ldr	r3, [r6, #0]
 8008c1a:	799b      	ldrb	r3, [r3, #6]
 8008c1c:	2b2a      	cmp	r3, #42	; 0x2a
 8008c1e:	d1e9      	bne.n	8008bf4 <RemoteConfig::HandleList()+0x7c>
 8008c20:	f642 1305 	movw	r3, #10501	; 0x2905
 8008c24:	9300      	str	r3, [sp, #0]
 8008c26:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008c2a:	e7de      	b.n	8008bea <RemoteConfig::HandleList()+0x72>
 8008c2c:	0801119c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip}
 8008c30:	20009a20 	andcs	r9, r0, r0, lsr #20
 8008c34:	08011262 	stmdaeq	r1, {r1, r5, r6, r9, ip}
 8008c38:	200000fc 	strdcs	r0, [r0], -ip
 8008c3c:	20000100 	andcs	r0, r0, r0, lsl #2
 8008c40:	080110b1 	stmdaeq	r1, {r0, r4, r5, r7, ip}
 8008c44:	080110ca 	stmdaeq	r1, {r1, r3, r6, r7, ip}

08008c48 <RemoteConfig::HandleDisplayGet()>:
 8008c48:	69c3      	ldr	r3, [r0, #28]
 8008c4a:	2b08      	cmp	r3, #8
 8008c4c:	d11b      	bne.n	8008c86 <RemoteConfig::HandleDisplayGet()+0x3e>
 8008c4e:	4b0e      	ldr	r3, [pc, #56]	; (8008c88 <RemoteConfig::HandleDisplayGet()+0x40>)
 8008c50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	4d0d      	ldr	r5, [pc, #52]	; (8008c8c <RemoteConfig::HandleDisplayGet()+0x44>)
 8008c56:	7c19      	ldrb	r1, [r3, #16]
 8008c58:	4a0d      	ldr	r2, [pc, #52]	; (8008c90 <RemoteConfig::HandleDisplayGet()+0x48>)
 8008c5a:	4b0e      	ldr	r3, [pc, #56]	; (8008c94 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8008c5c:	4604      	mov	r4, r0
 8008c5e:	2900      	cmp	r1, #0
 8008c60:	bf18      	it	ne
 8008c62:	4613      	movne	r3, r2
 8008c64:	6828      	ldr	r0, [r5, #0]
 8008c66:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008c6a:	4a0b      	ldr	r2, [pc, #44]	; (8008c98 <RemoteConfig::HandleDisplayGet()+0x50>)
 8008c6c:	f7ff fdf6 	bl	800885c <snprintf>
 8008c70:	f642 1305 	movw	r3, #10501	; 0x2905
 8008c74:	9300      	str	r3, [sp, #0]
 8008c76:	b282      	uxth	r2, r0
 8008c78:	69a3      	ldr	r3, [r4, #24]
 8008c7a:	6829      	ldr	r1, [r5, #0]
 8008c7c:	7d20      	ldrb	r0, [r4, #20]
 8008c7e:	f003 fe31 	bl	800c8e4 <udp_send>
 8008c82:	b003      	add	sp, #12
 8008c84:	bd30      	pop	{r4, r5, pc}
 8008c86:	4770      	bx	lr
 8008c88:	20009ff0 	strdcs	r9, [r0], -r0
 8008c8c:	200000fc 	strdcs	r0, [r0], -ip
 8008c90:	080110e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, ip}
 8008c94:	080110e0 	stmdaeq	r1, {r5, r6, r7, ip}
 8008c98:	080110e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, ip}

08008c9c <RemoteConfig::HandleTftpGet()>:
 8008c9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c9e:	4604      	mov	r4, r0
 8008ca0:	f000 fd84 	bl	80097ac <RemoteConfig::PlatformHandleTftpGet()>
 8008ca4:	69e3      	ldr	r3, [r4, #28]
 8008ca6:	2b05      	cmp	r3, #5
 8008ca8:	d116      	bne.n	8008cd8 <RemoteConfig::HandleTftpGet()+0x3c>
 8008caa:	f894 1020 	ldrb.w	r1, [r4, #32]
 8008cae:	4d0b      	ldr	r5, [pc, #44]	; (8008cdc <RemoteConfig::HandleTftpGet()+0x40>)
 8008cb0:	4a0b      	ldr	r2, [pc, #44]	; (8008ce0 <RemoteConfig::HandleTftpGet()+0x44>)
 8008cb2:	4b0c      	ldr	r3, [pc, #48]	; (8008ce4 <RemoteConfig::HandleTftpGet()+0x48>)
 8008cb4:	6828      	ldr	r0, [r5, #0]
 8008cb6:	2900      	cmp	r1, #0
 8008cb8:	bf08      	it	eq
 8008cba:	4613      	moveq	r3, r2
 8008cbc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008cc0:	4a09      	ldr	r2, [pc, #36]	; (8008ce8 <RemoteConfig::HandleTftpGet()+0x4c>)
 8008cc2:	f7ff fdcb 	bl	800885c <snprintf>
 8008cc6:	f642 1305 	movw	r3, #10501	; 0x2905
 8008cca:	b282      	uxth	r2, r0
 8008ccc:	9300      	str	r3, [sp, #0]
 8008cce:	6829      	ldr	r1, [r5, #0]
 8008cd0:	69a3      	ldr	r3, [r4, #24]
 8008cd2:	7d20      	ldrb	r0, [r4, #20]
 8008cd4:	f003 fe06 	bl	800c8e4 <udp_send>
 8008cd8:	b003      	add	sp, #12
 8008cda:	bd30      	pop	{r4, r5, pc}
 8008cdc:	200000fc 	strdcs	r0, [r0], -ip
 8008ce0:	080110e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, ip}
 8008ce4:	080110e0 	stmdaeq	r1, {r5, r6, r7, ip}
 8008ce8:	080110f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, ip}

08008cec <RemoteConfig::HandleVersion()>:
 8008cec:	69c3      	ldr	r3, [r0, #28]
 8008cee:	2b08      	cmp	r3, #8
 8008cf0:	d114      	bne.n	8008d1c <RemoteConfig::HandleVersion()+0x30>
 8008cf2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008cf4:	4d0a      	ldr	r5, [pc, #40]	; (8008d20 <RemoteConfig::HandleVersion()+0x34>)
 8008cf6:	4604      	mov	r4, r0
 8008cf8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008cfc:	4b09      	ldr	r3, [pc, #36]	; (8008d24 <RemoteConfig::HandleVersion()+0x38>)
 8008cfe:	4a0a      	ldr	r2, [pc, #40]	; (8008d28 <RemoteConfig::HandleVersion()+0x3c>)
 8008d00:	6828      	ldr	r0, [r5, #0]
 8008d02:	f7ff fdab 	bl	800885c <snprintf>
 8008d06:	f642 1305 	movw	r3, #10501	; 0x2905
 8008d0a:	9300      	str	r3, [sp, #0]
 8008d0c:	b282      	uxth	r2, r0
 8008d0e:	69a3      	ldr	r3, [r4, #24]
 8008d10:	6829      	ldr	r1, [r5, #0]
 8008d12:	7d20      	ldrb	r0, [r4, #20]
 8008d14:	f003 fde6 	bl	800c8e4 <udp_send>
 8008d18:	b003      	add	sp, #12
 8008d1a:	bd30      	pop	{r4, r5, pc}
 8008d1c:	4770      	bx	lr
 8008d1e:	bf00      	nop
 8008d20:	200000fc 	strdcs	r0, [r0], -ip
 8008d24:	2000a096 	mulcs	r0, r6, r0
 8008d28:	080110fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, ip}

08008d2c <RemoteConfig::HandleUptime()>:
 8008d2c:	7bc3      	ldrb	r3, [r0, #15]
 8008d2e:	b1e3      	cbz	r3, 8008d6a <RemoteConfig::HandleUptime()+0x3e>
 8008d30:	4b0e      	ldr	r3, [pc, #56]	; (8008d6c <RemoteConfig::HandleUptime()+0x40>)
 8008d32:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008d34:	681a      	ldr	r2, [r3, #0]
 8008d36:	69c3      	ldr	r3, [r0, #28]
 8008d38:	4604      	mov	r4, r0
 8008d3a:	2b07      	cmp	r3, #7
 8008d3c:	d113      	bne.n	8008d66 <RemoteConfig::HandleUptime()+0x3a>
 8008d3e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008d42:	4d0b      	ldr	r5, [pc, #44]	; (8008d70 <RemoteConfig::HandleUptime()+0x44>)
 8008d44:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d48:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008d4c:	4a09      	ldr	r2, [pc, #36]	; (8008d74 <RemoteConfig::HandleUptime()+0x48>)
 8008d4e:	6828      	ldr	r0, [r5, #0]
 8008d50:	f7ff fd84 	bl	800885c <snprintf>
 8008d54:	f642 1305 	movw	r3, #10501	; 0x2905
 8008d58:	9300      	str	r3, [sp, #0]
 8008d5a:	b282      	uxth	r2, r0
 8008d5c:	69a3      	ldr	r3, [r4, #24]
 8008d5e:	6829      	ldr	r1, [r5, #0]
 8008d60:	7d20      	ldrb	r0, [r4, #20]
 8008d62:	f003 fdbf 	bl	800c8e4 <udp_send>
 8008d66:	b003      	add	sp, #12
 8008d68:	bd30      	pop	{r4, r5, pc}
 8008d6a:	4770      	bx	lr
 8008d6c:	2000a0f4 	strdcs	sl, [r0], -r4
 8008d70:	200000fc 	strdcs	r0, [r0], -ip
 8008d74:	08011107 	stmdaeq	r1, {r0, r1, r2, r8, ip}

08008d78 <Display::TextStatus(char const*)>:
 8008d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d7c:	4604      	mov	r4, r0
 8008d7e:	6980      	ldr	r0, [r0, #24]
 8008d80:	2800      	cmp	r0, #0
 8008d82:	d032      	beq.n	8008dea <Display::TextStatus(char const*)+0x72>
 8008d84:	7947      	ldrb	r7, [r0, #5]
 8008d86:	6803      	ldr	r3, [r0, #0]
 8008d88:	1e7e      	subs	r6, r7, #1
 8008d8a:	b2f6      	uxtb	r6, r6
 8008d8c:	460d      	mov	r5, r1
 8008d8e:	4632      	mov	r2, r6
 8008d90:	2100      	movs	r1, #0
 8008d92:	6a1b      	ldr	r3, [r3, #32]
 8008d94:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008d98:	f04f 0800 	mov.w	r8, #0
 8008d9c:	4798      	blx	r3
 8008d9e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008da2:	45c1      	cmp	r9, r8
 8008da4:	69a0      	ldr	r0, [r4, #24]
 8008da6:	d818      	bhi.n	8008dda <Display::TextStatus(char const*)+0x62>
 8008da8:	b120      	cbz	r0, 8008db4 <Display::TextStatus(char const*)+0x3c>
 8008daa:	6803      	ldr	r3, [r0, #0]
 8008dac:	4632      	mov	r2, r6
 8008dae:	2100      	movs	r1, #0
 8008db0:	6a1b      	ldr	r3, [r3, #32]
 8008db2:	4798      	blx	r3
 8008db4:	69a0      	ldr	r0, [r4, #24]
 8008db6:	b1c0      	cbz	r0, 8008dea <Display::TextStatus(char const*)+0x72>
 8008db8:	2300      	movs	r3, #0
 8008dba:	7901      	ldrb	r1, [r0, #4]
 8008dbc:	5cea      	ldrb	r2, [r5, r3]
 8008dbe:	b11a      	cbz	r2, 8008dc8 <Display::TextStatus(char const*)+0x50>
 8008dc0:	1c5a      	adds	r2, r3, #1
 8008dc2:	4299      	cmp	r1, r3
 8008dc4:	4613      	mov	r3, r2
 8008dc6:	dcf9      	bgt.n	8008dbc <Display::TextStatus(char const*)+0x44>
 8008dc8:	6802      	ldr	r2, [r0, #0]
 8008dca:	4639      	mov	r1, r7
 8008dcc:	69d4      	ldr	r4, [r2, #28]
 8008dce:	b2db      	uxtb	r3, r3
 8008dd0:	462a      	mov	r2, r5
 8008dd2:	46a4      	mov	ip, r4
 8008dd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008dd8:	4760      	bx	ip
 8008dda:	b118      	cbz	r0, 8008de4 <Display::TextStatus(char const*)+0x6c>
 8008ddc:	6803      	ldr	r3, [r0, #0]
 8008dde:	2120      	movs	r1, #32
 8008de0:	695b      	ldr	r3, [r3, #20]
 8008de2:	4798      	blx	r3
 8008de4:	f108 0801 	add.w	r8, r8, #1
 8008de8:	e7db      	b.n	8008da2 <Display::TextStatus(char const*)+0x2a>
 8008dea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008dee <Display::Status(Display7SegmentMessage)>:
 8008dee:	7c43      	ldrb	r3, [r0, #17]
 8008df0:	b1bb      	cbz	r3, 8008e22 <Display::Status(Display7SegmentMessage)+0x34>
 8008df2:	b513      	push	{r0, r1, r4, lr}
 8008df4:	2312      	movs	r3, #18
 8008df6:	43c9      	mvns	r1, r1
 8008df8:	4604      	mov	r4, r0
 8008dfa:	f88d 3004 	strb.w	r3, [sp, #4]
 8008dfe:	7a00      	ldrb	r0, [r0, #8]
 8008e00:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8008e04:	f88d 3005 	strb.w	r3, [sp, #5]
 8008e08:	f88d 1006 	strb.w	r1, [sp, #6]
 8008e0c:	f007 f88c 	bl	800ff28 <gd32_i2c_set_address>
 8008e10:	68e0      	ldr	r0, [r4, #12]
 8008e12:	f007 f881 	bl	800ff18 <gd32_i2c_set_baudrate>
 8008e16:	2103      	movs	r1, #3
 8008e18:	a801      	add	r0, sp, #4
 8008e1a:	f007 f88b 	bl	800ff34 <gd32_i2c_write>
 8008e1e:	b002      	add	sp, #8
 8008e20:	bd10      	pop	{r4, pc}
 8008e22:	4770      	bx	lr

08008e24 <RemoteConfig::HandleDisplaySet()>:
 8008e24:	b508      	push	{r3, lr}
 8008e26:	69c3      	ldr	r3, [r0, #28]
 8008e28:	2b09      	cmp	r3, #9
 8008e2a:	d10a      	bne.n	8008e42 <RemoteConfig::HandleDisplaySet()+0x1e>
 8008e2c:	4b05      	ldr	r3, [pc, #20]	; (8008e44 <RemoteConfig::HandleDisplaySet()+0x20>)
 8008e2e:	681b      	ldr	r3, [r3, #0]
 8008e30:	7a59      	ldrb	r1, [r3, #9]
 8008e32:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8008e36:	4259      	negs	r1, r3
 8008e38:	4159      	adcs	r1, r3
 8008e3a:	4b03      	ldr	r3, [pc, #12]	; (8008e48 <RemoteConfig::HandleDisplaySet()+0x24>)
 8008e3c:	6818      	ldr	r0, [r3, #0]
 8008e3e:	f7ff f8b1 	bl	8007fa4 <Display::SetSleep(bool)>
 8008e42:	bd08      	pop	{r3, pc}
 8008e44:	200000fc 	strdcs	r0, [r0], -ip
 8008e48:	20009ff0 	strdcs	r9, [r0], -r0

08008e4c <RemoteConfig::HandleTftpSet()>:
 8008e4c:	69c3      	ldr	r3, [r0, #28]
 8008e4e:	2b06      	cmp	r3, #6
 8008e50:	d127      	bne.n	8008ea2 <RemoteConfig::HandleTftpSet()+0x56>
 8008e52:	b570      	push	{r4, r5, r6, lr}
 8008e54:	4b13      	ldr	r3, [pc, #76]	; (8008ea4 <RemoteConfig::HandleTftpSet()+0x58>)
 8008e56:	4e14      	ldr	r6, [pc, #80]	; (8008ea8 <RemoteConfig::HandleTftpSet()+0x5c>)
 8008e58:	681b      	ldr	r3, [r3, #0]
 8008e5a:	4604      	mov	r4, r0
 8008e5c:	799b      	ldrb	r3, [r3, #6]
 8008e5e:	6835      	ldr	r5, [r6, #0]
 8008e60:	2b30      	cmp	r3, #48	; 0x30
 8008e62:	bf14      	ite	ne
 8008e64:	2301      	movne	r3, #1
 8008e66:	2300      	moveq	r3, #0
 8008e68:	f880 3020 	strb.w	r3, [r0, #32]
 8008e6c:	d012      	beq.n	8008e94 <RemoteConfig::HandleTftpSet()+0x48>
 8008e6e:	4628      	mov	r0, r5
 8008e70:	2100      	movs	r1, #0
 8008e72:	f7ff f897 	bl	8007fa4 <Display::SetSleep(bool)>
 8008e76:	6835      	ldr	r5, [r6, #0]
 8008e78:	490c      	ldr	r1, [pc, #48]	; (8008eac <RemoteConfig::HandleTftpSet()+0x60>)
 8008e7a:	4628      	mov	r0, r5
 8008e7c:	f7ff ff7c 	bl	8008d78 <Display::TextStatus(char const*)>
 8008e80:	f244 0171 	movw	r1, #16497	; 0x4071
 8008e84:	4628      	mov	r0, r5
 8008e86:	f7ff ffb2 	bl	8008dee <Display::Status(Display7SegmentMessage)>
 8008e8a:	4620      	mov	r0, r4
 8008e8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008e90:	f000 bc84 	b.w	800979c <RemoteConfig::PlatformHandleTftpSet()>
 8008e94:	4906      	ldr	r1, [pc, #24]	; (8008eb0 <RemoteConfig::HandleTftpSet()+0x64>)
 8008e96:	4628      	mov	r0, r5
 8008e98:	f7ff ff6e 	bl	8008d78 <Display::TextStatus(char const*)>
 8008e9c:	f248 0171 	movw	r1, #32881	; 0x8071
 8008ea0:	e7f0      	b.n	8008e84 <RemoteConfig::HandleTftpSet()+0x38>
 8008ea2:	4770      	bx	lr
 8008ea4:	200000fc 	strdcs	r0, [r0], -ip
 8008ea8:	20009ff0 	strdcs	r9, [r0], -r0
 8008eac:	08011114 	stmdaeq	r1, {r2, r4, r8, ip}
 8008eb0:	08011126 	stmdaeq	r1, {r1, r2, r5, r8, ip}

08008eb4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8008eb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008eb8:	2500      	movs	r5, #0
 8008eba:	461f      	mov	r7, r3
 8008ebc:	6083      	str	r3, [r0, #8]
 8008ebe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008ec2:	4690      	mov	r8, r2
 8008ec4:	4689      	mov	r9, r1
 8008ec6:	4e12      	ldr	r6, [pc, #72]	; (8008f10 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8008ec8:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8008ecc:	f8df a044 	ldr.w	sl, [pc, #68]	; 8008f14 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8008ed0:	4b11      	ldr	r3, [pc, #68]	; (8008f18 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8008ed2:	e9c0 1200 	strd	r1, r2, [r0]
 8008ed6:	4604      	mov	r4, r0
 8008ed8:	6018      	str	r0, [r3, #0]
 8008eda:	4631      	mov	r1, r6
 8008edc:	60c5      	str	r5, [r0, #12]
 8008ede:	8205      	strh	r5, [r0, #16]
 8008ee0:	61c5      	str	r5, [r0, #28]
 8008ee2:	f880 5020 	strb.w	r5, [r0, #32]
 8008ee6:	f8da 0000 	ldr.w	r0, [sl]
 8008eea:	f004 f9c9 	bl	800d280 <Network::MacAddressCopyTo(unsigned char*)>
 8008eee:	f642 1105 	movw	r1, #10501	; 0x2905
 8008ef2:	f8da 0000 	ldr.w	r0, [sl]
 8008ef6:	f886 9006 	strb.w	r9, [r6, #6]
 8008efa:	f886 8007 	strb.w	r8, [r6, #7]
 8008efe:	7237      	strb	r7, [r6, #8]
 8008f00:	7275      	strb	r5, [r6, #9]
 8008f02:	f004 f9b7 	bl	800d274 <Network::Begin(unsigned short)>
 8008f06:	6160      	str	r0, [r4, #20]
 8008f08:	4620      	mov	r0, r4
 8008f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008f0e:	bf00      	nop
 8008f10:	20000100 	andcs	r0, r0, r0, lsl #2
 8008f14:	20009a20 	andcs	r9, r0, r0, lsr #20
 8008f18:	20000124 	andcs	r0, r0, r4, lsr #2

08008f1c <RemoteConfig::GetStringNode() const>:
 8008f1c:	2012      	movs	r0, #18
 8008f1e:	4b03      	ldr	r3, [pc, #12]	; (8008f2c <RemoteConfig::GetStringNode() const+0x10>)
 8008f20:	799a      	ldrb	r2, [r3, #6]
 8008f22:	4b03      	ldr	r3, [pc, #12]	; (8008f30 <RemoteConfig::GetStringNode() const+0x14>)
 8008f24:	fb00 3002 	mla	r0, r0, r2, r3
 8008f28:	4770      	bx	lr
 8008f2a:	bf00      	nop
 8008f2c:	20000100 	andcs	r0, r0, r0, lsl #2
 8008f30:	0801119c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip}

08008f34 <RemoteConfig::GetStringOutput() const>:
 8008f34:	200c      	movs	r0, #12
 8008f36:	4b03      	ldr	r3, [pc, #12]	; (8008f44 <RemoteConfig::GetStringOutput() const+0x10>)
 8008f38:	79da      	ldrb	r2, [r3, #7]
 8008f3a:	4b03      	ldr	r3, [pc, #12]	; (8008f48 <RemoteConfig::GetStringOutput() const+0x14>)
 8008f3c:	fb00 3002 	mla	r0, r0, r2, r3
 8008f40:	4770      	bx	lr
 8008f42:	bf00      	nop
 8008f44:	20000100 	andcs	r0, r0, r0, lsl #2
 8008f48:	08011262 	stmdaeq	r1, {r1, r5, r6, r9, ip}

08008f4c <RemoteConfig::SetDisable(bool)>:
 8008f4c:	b538      	push	{r3, r4, r5, lr}
 8008f4e:	4604      	mov	r4, r0
 8008f50:	7b03      	ldrb	r3, [r0, #12]
 8008f52:	b161      	cbz	r1, 8008f6e <RemoteConfig::SetDisable(bool)+0x22>
 8008f54:	b953      	cbnz	r3, 8008f6c <RemoteConfig::SetDisable(bool)+0x20>
 8008f56:	4b0c      	ldr	r3, [pc, #48]	; (8008f88 <RemoteConfig::SetDisable(bool)+0x3c>)
 8008f58:	f642 1105 	movw	r1, #10501	; 0x2905
 8008f5c:	6818      	ldr	r0, [r3, #0]
 8008f5e:	f004 f98c 	bl	800d27a <Network::End(unsigned short)>
 8008f62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008f66:	6163      	str	r3, [r4, #20]
 8008f68:	2301      	movs	r3, #1
 8008f6a:	7323      	strb	r3, [r4, #12]
 8008f6c:	bd38      	pop	{r3, r4, r5, pc}
 8008f6e:	2b00      	cmp	r3, #0
 8008f70:	d0fc      	beq.n	8008f6c <RemoteConfig::SetDisable(bool)+0x20>
 8008f72:	4b05      	ldr	r3, [pc, #20]	; (8008f88 <RemoteConfig::SetDisable(bool)+0x3c>)
 8008f74:	460d      	mov	r5, r1
 8008f76:	6818      	ldr	r0, [r3, #0]
 8008f78:	f642 1105 	movw	r1, #10501	; 0x2905
 8008f7c:	f004 f97a 	bl	800d274 <Network::Begin(unsigned short)>
 8008f80:	7325      	strb	r5, [r4, #12]
 8008f82:	6160      	str	r0, [r4, #20]
 8008f84:	e7f2      	b.n	8008f6c <RemoteConfig::SetDisable(bool)+0x20>
 8008f86:	bf00      	nop
 8008f88:	20009a20 	andcs	r9, r0, r0, lsr #20

08008f8c <RemoteConfig::SetDisplayName(char const*)>:
 8008f8c:	2217      	movs	r2, #23
 8008f8e:	4809      	ldr	r0, [pc, #36]	; (8008fb4 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8008f90:	b508      	push	{r3, lr}
 8008f92:	1e4b      	subs	r3, r1, #1
 8008f94:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008f98:	b911      	cbnz	r1, 8008fa0 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8008f9a:	f006 f845 	bl	800f028 <memset>
 8008f9e:	e003      	b.n	8008fa8 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8008fa0:	3a01      	subs	r2, #1
 8008fa2:	f800 1b01 	strb.w	r1, [r0], #1
 8008fa6:	d1f5      	bne.n	8008f94 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8008fa8:	2200      	movs	r2, #0
 8008faa:	4b03      	ldr	r3, [pc, #12]	; (8008fb8 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8008fac:	f883 2020 	strb.w	r2, [r3, #32]
 8008fb0:	bd08      	pop	{r3, pc}
 8008fb2:	bf00      	nop
 8008fb4:	20000109 	andcs	r0, r0, r9, lsl #2
 8008fb8:	20000100 	andcs	r0, r0, r0, lsl #2

08008fbc <RemoteConfig::HandleGet(void*, unsigned int)>:
 8008fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fbe:	4604      	mov	r4, r0
 8008fc0:	4616      	mov	r6, r2
 8008fc2:	460d      	mov	r5, r1
 8008fc4:	4f28      	ldr	r7, [pc, #160]	; (8009068 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8008fc6:	b085      	sub	sp, #20
 8008fc8:	b9a9      	cbnz	r1, 8008ff6 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8008fca:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8008fce:	6839      	ldr	r1, [r7, #0]
 8008fd0:	aa03      	add	r2, sp, #12
 8008fd2:	3105      	adds	r1, #5
 8008fd4:	9303      	str	r3, [sp, #12]
 8008fd6:	f000 fbb7 	bl	8009748 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008fda:	1e03      	subs	r3, r0, #0
 8008fdc:	da1b      	bge.n	8009016 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8008fde:	f642 1305 	movw	r3, #10501	; 0x2905
 8008fe2:	220b      	movs	r2, #11
 8008fe4:	9300      	str	r3, [sp, #0]
 8008fe6:	4921      	ldr	r1, [pc, #132]	; (800906c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8008fe8:	69a3      	ldr	r3, [r4, #24]
 8008fea:	7d20      	ldrb	r0, [r4, #20]
 8008fec:	f003 fc7a 	bl	800c8e4 <udp_send>
 8008ff0:	200c      	movs	r0, #12
 8008ff2:	b005      	add	sp, #20
 8008ff4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ff6:	9203      	str	r2, [sp, #12]
 8008ff8:	aa03      	add	r2, sp, #12
 8008ffa:	6039      	str	r1, [r7, #0]
 8008ffc:	f000 fba4 	bl	8009748 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009000:	1e03      	subs	r3, r0, #0
 8009002:	da08      	bge.n	8009016 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009004:	2e0b      	cmp	r6, #11
 8009006:	4632      	mov	r2, r6
 8009008:	4628      	mov	r0, r5
 800900a:	bf28      	it	cs
 800900c:	220b      	movcs	r2, #11
 800900e:	4917      	ldr	r1, [pc, #92]	; (800906c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009010:	f005 ffe8 	bl	800efe4 <memcpy>
 8009014:	e7ec      	b.n	8008ff0 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009016:	221c      	movs	r2, #28
 8009018:	4353      	muls	r3, r2
 800901a:	4915      	ldr	r1, [pc, #84]	; (8009070 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800901c:	18ca      	adds	r2, r1, r3
 800901e:	6852      	ldr	r2, [r2, #4]
 8009020:	58cb      	ldr	r3, [r1, r3]
 8009022:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009026:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800902a:	07d2      	lsls	r2, r2, #31
 800902c:	bf48      	it	mi
 800902e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009032:	a903      	add	r1, sp, #12
 8009034:	bf48      	it	mi
 8009036:	58d3      	ldrmi	r3, [r2, r3]
 8009038:	4798      	blx	r3
 800903a:	b95d      	cbnz	r5, 8009054 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800903c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009040:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009044:	9300      	str	r3, [sp, #0]
 8009046:	6839      	ldr	r1, [r7, #0]
 8009048:	69a3      	ldr	r3, [r4, #24]
 800904a:	7d20      	ldrb	r0, [r4, #20]
 800904c:	f003 fc4a 	bl	800c8e4 <udp_send>
 8009050:	9803      	ldr	r0, [sp, #12]
 8009052:	e7ce      	b.n	8008ff2 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009054:	9a03      	ldr	r2, [sp, #12]
 8009056:	4628      	mov	r0, r5
 8009058:	42b2      	cmp	r2, r6
 800905a:	bf28      	it	cs
 800905c:	4632      	movcs	r2, r6
 800905e:	6839      	ldr	r1, [r7, #0]
 8009060:	f005 ffcb 	bl	800effa <memmove>
 8009064:	e7f4      	b.n	8009050 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009066:	bf00      	nop
 8009068:	200000fc 	strdcs	r0, [r0], -ip
 800906c:	08011139 	stmdaeq	r1, {r0, r3, r4, r5, r8, ip}
 8009070:	08011410 	stmdaeq	r1, {r4, sl, ip}

08009074 <RemoteConfig::HandleGetNoParams()>:
 8009074:	2200      	movs	r2, #0
 8009076:	4611      	mov	r1, r2
 8009078:	f7ff bfa0 	b.w	8008fbc <RemoteConfig::HandleGet(void*, unsigned int)>

0800907c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800907c:	b510      	push	{r4, lr}
 800907e:	460c      	mov	r4, r1
 8009080:	4b07      	ldr	r3, [pc, #28]	; (80090a0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009082:	b08a      	sub	sp, #40	; 0x28
 8009084:	6819      	ldr	r1, [r3, #0]
 8009086:	a801      	add	r0, sp, #4
 8009088:	f000 f9ba 	bl	8009400 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800908c:	4905      	ldr	r1, [pc, #20]	; (80090a4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800908e:	4623      	mov	r3, r4
 8009090:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009094:	6809      	ldr	r1, [r1, #0]
 8009096:	a801      	add	r0, sp, #4
 8009098:	f000 fad6 	bl	8009648 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800909c:	b00a      	add	sp, #40	; 0x28
 800909e:	bd10      	pop	{r4, pc}
 80090a0:	20002134 	andcs	r2, r0, r4, lsr r1
 80090a4:	200000fc 	strdcs	r0, [r0], -ip

080090a8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80090a8:	b510      	push	{r4, lr}
 80090aa:	460c      	mov	r4, r1
 80090ac:	4b07      	ldr	r3, [pc, #28]	; (80090cc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80090ae:	b09a      	sub	sp, #104	; 0x68
 80090b0:	6819      	ldr	r1, [r3, #0]
 80090b2:	a801      	add	r0, sp, #4
 80090b4:	f004 fad2 	bl	800d65c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80090b8:	4905      	ldr	r1, [pc, #20]	; (80090d0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80090ba:	4623      	mov	r3, r4
 80090bc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80090c0:	6809      	ldr	r1, [r1, #0]
 80090c2:	a801      	add	r0, sp, #4
 80090c4:	f004 fca0 	bl	800da08 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80090c8:	b01a      	add	sp, #104	; 0x68
 80090ca:	bd10      	pop	{r4, pc}
 80090cc:	2000212c 	andcs	r2, r0, ip, lsr #2
 80090d0:	200000fc 	strdcs	r0, [r0], -ip

080090d4 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 80090d4:	b510      	push	{r4, lr}
 80090d6:	460c      	mov	r4, r1
 80090d8:	4b07      	ldr	r3, [pc, #28]	; (80090f8 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 80090da:	b0e4      	sub	sp, #400	; 0x190
 80090dc:	6819      	ldr	r1, [r3, #0]
 80090de:	4668      	mov	r0, sp
 80090e0:	f001 fa88 	bl	800a5f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 80090e4:	4905      	ldr	r1, [pc, #20]	; (80090fc <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 80090e6:	4623      	mov	r3, r4
 80090e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80090ec:	4668      	mov	r0, sp
 80090ee:	6809      	ldr	r1, [r1, #0]
 80090f0:	f001 fc1a 	bl	800a928 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 80090f4:	b064      	add	sp, #400	; 0x190
 80090f6:	bd10      	pop	{r4, pc}
 80090f8:	20002130 	andcs	r2, r0, r0, lsr r1
 80090fc:	200000fc 	strdcs	r0, [r0], -ip

08009100 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009100:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009102:	460c      	mov	r4, r1
 8009104:	4b07      	ldr	r3, [pc, #28]	; (8009124 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 8009106:	4668      	mov	r0, sp
 8009108:	6819      	ldr	r1, [r3, #0]
 800910a:	f001 fe93 	bl	800ae34 <DmxParams::DmxParams(DmxParamsStore*)>
 800910e:	4906      	ldr	r1, [pc, #24]	; (8009128 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009110:	4623      	mov	r3, r4
 8009112:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009116:	4668      	mov	r0, sp
 8009118:	6809      	ldr	r1, [r1, #0]
 800911a:	f001 ffad 	bl	800b078 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800911e:	b004      	add	sp, #16
 8009120:	bd10      	pop	{r4, pc}
 8009122:	bf00      	nop
 8009124:	20002128 	andcs	r2, r0, r8, lsr #2
 8009128:	200000fc 	strdcs	r0, [r0], -ip

0800912c <RemoteConfig::HandleSet(void*, unsigned int)>:
 800912c:	b530      	push	{r4, r5, lr}
 800912e:	b085      	sub	sp, #20
 8009130:	4604      	mov	r4, r0
 8009132:	9201      	str	r2, [sp, #4]
 8009134:	b9d1      	cbnz	r1, 800916c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009136:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800913a:	9303      	str	r3, [sp, #12]
 800913c:	4b19      	ldr	r3, [pc, #100]	; (80091a4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800913e:	aa03      	add	r2, sp, #12
 8009140:	6819      	ldr	r1, [r3, #0]
 8009142:	3101      	adds	r1, #1
 8009144:	f000 fb00 	bl	8009748 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009148:	2800      	cmp	r0, #0
 800914a:	db0d      	blt.n	8009168 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800914c:	221c      	movs	r2, #28
 800914e:	4b16      	ldr	r3, [pc, #88]	; (80091a8 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009150:	fb02 3300 	mla	r3, r2, r0, r3
 8009154:	68da      	ldr	r2, [r3, #12]
 8009156:	689b      	ldr	r3, [r3, #8]
 8009158:	1051      	asrs	r1, r2, #1
 800915a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800915e:	07d2      	lsls	r2, r2, #31
 8009160:	bf44      	itt	mi
 8009162:	5862      	ldrmi	r2, [r4, r1]
 8009164:	58d3      	ldrmi	r3, [r2, r3]
 8009166:	4798      	blx	r3
 8009168:	b005      	add	sp, #20
 800916a:	bd30      	pop	{r4, r5, pc}
 800916c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009170:	d8fa      	bhi.n	8009168 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009172:	4b0e      	ldr	r3, [pc, #56]	; (80091ac <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009174:	460d      	mov	r5, r1
 8009176:	781b      	ldrb	r3, [r3, #0]
 8009178:	07d9      	lsls	r1, r3, #31
 800917a:	d50b      	bpl.n	8009194 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 800917c:	782b      	ldrb	r3, [r5, #0]
 800917e:	2b7b      	cmp	r3, #123	; 0x7b
 8009180:	d108      	bne.n	8009194 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009182:	1e51      	subs	r1, r2, #1
 8009184:	4628      	mov	r0, r5
 8009186:	2200      	movs	r2, #0
 8009188:	b289      	uxth	r1, r1
 800918a:	f005 f815 	bl	800e1b8 <properties::convert_json_file(char*, unsigned short, bool)>
 800918e:	1e02      	subs	r2, r0, #0
 8009190:	ddea      	ble.n	8009168 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009192:	b292      	uxth	r2, r2
 8009194:	4b03      	ldr	r3, [pc, #12]	; (80091a4 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009196:	61e2      	str	r2, [r4, #28]
 8009198:	4620      	mov	r0, r4
 800919a:	601d      	str	r5, [r3, #0]
 800919c:	aa01      	add	r2, sp, #4
 800919e:	1c69      	adds	r1, r5, #1
 80091a0:	e7d0      	b.n	8009144 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80091a2:	bf00      	nop
 80091a4:	200000fc 	strdcs	r0, [r0], -ip
 80091a8:	08011410 	stmdaeq	r1, {r4, sl, ip}
 80091ac:	20009fee 	andcs	r9, r0, lr, ror #31

080091b0 <RemoteConfig::Run()>:
 80091b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80091b4:	7b05      	ldrb	r5, [r0, #12]
 80091b6:	2d00      	cmp	r5, #0
 80091b8:	d156      	bne.n	8009268 <RemoteConfig::Run()+0xb8>
 80091ba:	4e45      	ldr	r6, [pc, #276]	; (80092d0 <RemoteConfig::Run()+0x120>)
 80091bc:	4604      	mov	r4, r0
 80091be:	f100 0218 	add.w	r2, r0, #24
 80091c2:	4631      	mov	r1, r6
 80091c4:	7d00      	ldrb	r0, [r0, #20]
 80091c6:	f10d 030e 	add.w	r3, sp, #14
 80091ca:	f003 fb65 	bl	800c898 <udp_recv2>
 80091ce:	2803      	cmp	r0, #3
 80091d0:	61e0      	str	r0, [r4, #28]
 80091d2:	d949      	bls.n	8009268 <RemoteConfig::Run()+0xb8>
 80091d4:	6831      	ldr	r1, [r6, #0]
 80091d6:	1e43      	subs	r3, r0, #1
 80091d8:	5cca      	ldrb	r2, [r1, r3]
 80091da:	2a0a      	cmp	r2, #10
 80091dc:	bf18      	it	ne
 80091de:	4603      	movne	r3, r0
 80091e0:	61e3      	str	r3, [r4, #28]
 80091e2:	7808      	ldrb	r0, [r1, #0]
 80091e4:	283f      	cmp	r0, #63	; 0x3f
 80091e6:	d137      	bne.n	8009258 <RemoteConfig::Run()+0xa8>
 80091e8:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 80092d4 <RemoteConfig::Run()+0x124>
 80091ec:	462a      	mov	r2, r5
 80091ee:	4667      	mov	r7, ip
 80091f0:	3b01      	subs	r3, #1
 80091f2:	61e3      	str	r3, [r4, #28]
 80091f4:	f89c 500e 	ldrb.w	r5, [ip, #14]
 80091f8:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 80091fc:	b16d      	cbz	r5, 800921a <RemoteConfig::Run()+0x6a>
 80091fe:	4283      	cmp	r3, r0
 8009200:	d80d      	bhi.n	800921e <RemoteConfig::Run()+0x6e>
 8009202:	3201      	adds	r2, #1
 8009204:	2a09      	cmp	r2, #9
 8009206:	f10c 0c10 	add.w	ip, ip, #16
 800920a:	d1f3      	bne.n	80091f4 <RemoteConfig::Run()+0x44>
 800920c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009210:	9300      	str	r3, [sp, #0]
 8009212:	2208      	movs	r2, #8
 8009214:	69a3      	ldr	r3, [r4, #24]
 8009216:	4930      	ldr	r1, [pc, #192]	; (80092d8 <RemoteConfig::Run()+0x128>)
 8009218:	e04e      	b.n	80092b8 <RemoteConfig::Run()+0x108>
 800921a:	4283      	cmp	r3, r0
 800921c:	d1f1      	bne.n	8009202 <RemoteConfig::Run()+0x52>
 800921e:	460e      	mov	r6, r1
 8009220:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009224:	4408      	add	r0, r1
 8009226:	3d01      	subs	r5, #1
 8009228:	4286      	cmp	r6, r0
 800922a:	d10b      	bne.n	8009244 <RemoteConfig::Run()+0x94>
 800922c:	0113      	lsls	r3, r2, #4
 800922e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009232:	6852      	ldr	r2, [r2, #4]
 8009234:	58fb      	ldr	r3, [r7, r3]
 8009236:	1051      	asrs	r1, r2, #1
 8009238:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800923c:	07d2      	lsls	r2, r2, #31
 800923e:	d408      	bmi.n	8009252 <RemoteConfig::Run()+0xa2>
 8009240:	4798      	blx	r3
 8009242:	e011      	b.n	8009268 <RemoteConfig::Run()+0xb8>
 8009244:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009248:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800924c:	45f0      	cmp	r8, lr
 800924e:	d0eb      	beq.n	8009228 <RemoteConfig::Run()+0x78>
 8009250:	e7d7      	b.n	8009202 <RemoteConfig::Run()+0x52>
 8009252:	5862      	ldr	r2, [r4, r1]
 8009254:	58d3      	ldr	r3, [r2, r3]
 8009256:	e7f3      	b.n	8009240 <RemoteConfig::Run()+0x90>
 8009258:	7b62      	ldrb	r2, [r4, #13]
 800925a:	b92a      	cbnz	r2, 8009268 <RemoteConfig::Run()+0xb8>
 800925c:	2823      	cmp	r0, #35	; 0x23
 800925e:	d106      	bne.n	800926e <RemoteConfig::Run()+0xbe>
 8009260:	4611      	mov	r1, r2
 8009262:	4620      	mov	r0, r4
 8009264:	f7ff ff62 	bl	800912c <RemoteConfig::HandleSet(void*, unsigned int)>
 8009268:	b004      	add	sp, #16
 800926a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800926e:	2821      	cmp	r0, #33	; 0x21
 8009270:	d1fa      	bne.n	8009268 <RemoteConfig::Run()+0xb8>
 8009272:	3b01      	subs	r3, #1
 8009274:	2b05      	cmp	r3, #5
 8009276:	61e3      	str	r3, [r4, #28]
 8009278:	d918      	bls.n	80092ac <RemoteConfig::Run()+0xfc>
 800927a:	460a      	mov	r2, r1
 800927c:	4608      	mov	r0, r1
 800927e:	4d17      	ldr	r5, [pc, #92]	; (80092dc <RemoteConfig::Run()+0x12c>)
 8009280:	f101 0c05 	add.w	ip, r1, #5
 8009284:	4560      	cmp	r0, ip
 8009286:	d01b      	beq.n	80092c0 <RemoteConfig::Run()+0x110>
 8009288:	f815 6b01 	ldrb.w	r6, [r5], #1
 800928c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009290:	42b7      	cmp	r7, r6
 8009292:	d0f7      	beq.n	8009284 <RemoteConfig::Run()+0xd4>
 8009294:	2b08      	cmp	r3, #8
 8009296:	d909      	bls.n	80092ac <RemoteConfig::Run()+0xfc>
 8009298:	4b11      	ldr	r3, [pc, #68]	; (80092e0 <RemoteConfig::Run()+0x130>)
 800929a:	3108      	adds	r1, #8
 800929c:	428a      	cmp	r2, r1
 800929e:	d015      	beq.n	80092cc <RemoteConfig::Run()+0x11c>
 80092a0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80092a4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80092a8:	4285      	cmp	r5, r0
 80092aa:	d0f7      	beq.n	800929c <RemoteConfig::Run()+0xec>
 80092ac:	f642 1305 	movw	r3, #10501	; 0x2905
 80092b0:	2208      	movs	r2, #8
 80092b2:	9300      	str	r3, [sp, #0]
 80092b4:	69a3      	ldr	r3, [r4, #24]
 80092b6:	490b      	ldr	r1, [pc, #44]	; (80092e4 <RemoteConfig::Run()+0x134>)
 80092b8:	7d20      	ldrb	r0, [r4, #20]
 80092ba:	f003 fb13 	bl	800c8e4 <udp_send>
 80092be:	e7d3      	b.n	8009268 <RemoteConfig::Run()+0xb8>
 80092c0:	2300      	movs	r3, #0
 80092c2:	4a09      	ldr	r2, [pc, #36]	; (80092e8 <RemoteConfig::Run()+0x138>)
 80092c4:	011b      	lsls	r3, r3, #4
 80092c6:	4620      	mov	r0, r4
 80092c8:	58d3      	ldr	r3, [r2, r3]
 80092ca:	e7b9      	b.n	8009240 <RemoteConfig::Run()+0x90>
 80092cc:	2301      	movs	r3, #1
 80092ce:	e7f8      	b.n	80092c2 <RemoteConfig::Run()+0x112>
 80092d0:	200000fc 	strdcs	r0, [r0], -ip
 80092d4:	080112f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, ip}
 80092d8:	0801115d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, ip}
 80092dc:	08011145 	stmdaeq	r1, {r0, r2, r6, r8, ip}
 80092e0:	0801114b 	stmdaeq	r1, {r0, r1, r3, r6, r8, ip}
 80092e4:	08011154 	stmdaeq	r1, {r2, r4, r6, r8, ip}
 80092e8:	08011384 	stmdaeq	r1, {r2, r7, r8, r9, ip}

080092ec <RemoteConfig::HandleSetRconfig()>:
 80092ec:	b510      	push	{r4, lr}
 80092ee:	4604      	mov	r4, r0
 80092f0:	4b08      	ldr	r3, [pc, #32]	; (8009314 <RemoteConfig::HandleSetRconfig()+0x28>)
 80092f2:	b08a      	sub	sp, #40	; 0x28
 80092f4:	6819      	ldr	r1, [r3, #0]
 80092f6:	a801      	add	r0, sp, #4
 80092f8:	f000 f882 	bl	8009400 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80092fc:	4b06      	ldr	r3, [pc, #24]	; (8009318 <RemoteConfig::HandleSetRconfig()+0x2c>)
 80092fe:	69e2      	ldr	r2, [r4, #28]
 8009300:	6819      	ldr	r1, [r3, #0]
 8009302:	a801      	add	r0, sp, #4
 8009304:	f000 f892 	bl	800942c <RemoteConfigParams::Load(char const*, unsigned int)>
 8009308:	4621      	mov	r1, r4
 800930a:	a801      	add	r0, sp, #4
 800930c:	f000 f9a9 	bl	8009662 <RemoteConfigParams::Set(RemoteConfig*)>
 8009310:	b00a      	add	sp, #40	; 0x28
 8009312:	bd10      	pop	{r4, pc}
 8009314:	20002134 	andcs	r2, r0, r4, lsr r1
 8009318:	200000fc 	strdcs	r0, [r0], -ip

0800931c <RemoteConfig::HandleSetNetworkTxt()>:
 800931c:	b510      	push	{r4, lr}
 800931e:	4604      	mov	r4, r0
 8009320:	4b06      	ldr	r3, [pc, #24]	; (800933c <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009322:	b09a      	sub	sp, #104	; 0x68
 8009324:	6819      	ldr	r1, [r3, #0]
 8009326:	a801      	add	r0, sp, #4
 8009328:	f004 f998 	bl	800d65c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800932c:	4b04      	ldr	r3, [pc, #16]	; (8009340 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800932e:	69e2      	ldr	r2, [r4, #28]
 8009330:	6819      	ldr	r1, [r3, #0]
 8009332:	a801      	add	r0, sp, #4
 8009334:	f004 f9aa 	bl	800d68c <NetworkParams::Load(char const*, unsigned int)>
 8009338:	b01a      	add	sp, #104	; 0x68
 800933a:	bd10      	pop	{r4, pc}
 800933c:	2000212c 	andcs	r2, r0, ip, lsr #2
 8009340:	200000fc 	strdcs	r0, [r0], -ip

08009344 <RemoteConfig::HandleSetOscTxt()>:
 8009344:	b510      	push	{r4, lr}
 8009346:	4604      	mov	r4, r0
 8009348:	4b06      	ldr	r3, [pc, #24]	; (8009364 <RemoteConfig::HandleSetOscTxt()+0x20>)
 800934a:	b0e4      	sub	sp, #400	; 0x190
 800934c:	6819      	ldr	r1, [r3, #0]
 800934e:	4668      	mov	r0, sp
 8009350:	f001 f950 	bl	800a5f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009354:	4b04      	ldr	r3, [pc, #16]	; (8009368 <RemoteConfig::HandleSetOscTxt()+0x24>)
 8009356:	4668      	mov	r0, sp
 8009358:	69e2      	ldr	r2, [r4, #28]
 800935a:	6819      	ldr	r1, [r3, #0]
 800935c:	f001 f966 	bl	800a62c <OSCServerParams::Load(char const*, unsigned int)>
 8009360:	b064      	add	sp, #400	; 0x190
 8009362:	bd10      	pop	{r4, pc}
 8009364:	20002130 	andcs	r2, r0, r0, lsr r1
 8009368:	200000fc 	strdcs	r0, [r0], -ip

0800936c <RemoteConfig::HandleSetParamsTxt()>:
 800936c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800936e:	4604      	mov	r4, r0
 8009370:	4b06      	ldr	r3, [pc, #24]	; (800938c <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8009372:	4668      	mov	r0, sp
 8009374:	6819      	ldr	r1, [r3, #0]
 8009376:	f001 fd5d 	bl	800ae34 <DmxParams::DmxParams(DmxParamsStore*)>
 800937a:	4b05      	ldr	r3, [pc, #20]	; (8009390 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800937c:	4668      	mov	r0, sp
 800937e:	69e2      	ldr	r2, [r4, #28]
 8009380:	6819      	ldr	r1, [r3, #0]
 8009382:	f001 fd6f 	bl	800ae64 <DmxParams::Load(char const*, unsigned int)>
 8009386:	b004      	add	sp, #16
 8009388:	bd10      	pop	{r4, pc}
 800938a:	bf00      	nop
 800938c:	20002128 	andcs	r2, r0, r8, lsr #2
 8009390:	200000fc 	strdcs	r0, [r0], -ip

08009394 <RemoteConfig::HandleFactory()>:
 8009394:	b538      	push	{r3, r4, r5, lr}
 8009396:	2400      	movs	r4, #0
 8009398:	4d04      	ldr	r5, [pc, #16]	; (80093ac <RemoteConfig::HandleFactory()+0x18>)
 800939a:	4621      	mov	r1, r4
 800939c:	6828      	ldr	r0, [r5, #0]
 800939e:	3401      	adds	r4, #1
 80093a0:	f002 fc2c 	bl	800bbfc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80093a4:	2c1c      	cmp	r4, #28
 80093a6:	d1f8      	bne.n	800939a <RemoteConfig::HandleFactory()+0x6>
 80093a8:	bd38      	pop	{r3, r4, r5, pc}
 80093aa:	bf00      	nop
 80093ac:	20002120 	andcs	r2, r0, r0, lsr #2

080093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 80093b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093b2:	460b      	mov	r3, r1
 80093b4:	8885      	ldrh	r5, [r0, #4]
 80093b6:	88c1      	ldrh	r1, [r0, #6]
 80093b8:	42a9      	cmp	r1, r5
 80093ba:	d214      	bcs.n	80093e6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 80093bc:	4604      	mov	r4, r0
 80093be:	6800      	ldr	r0, [r0, #0]
 80093c0:	1a6d      	subs	r5, r5, r1
 80093c2:	4408      	add	r0, r1
 80093c4:	7a21      	ldrb	r1, [r4, #8]
 80093c6:	b91a      	cbnz	r2, 80093d0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 80093c8:	b919      	cbnz	r1, 80093d2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 80093ca:	4a0a      	ldr	r2, [pc, #40]	; (80093f4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 80093cc:	9100      	str	r1, [sp, #0]
 80093ce:	e002      	b.n	80093d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 80093d0:	b159      	cbz	r1, 80093ea <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 80093d2:	9200      	str	r2, [sp, #0]
 80093d4:	4a08      	ldr	r2, [pc, #32]	; (80093f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 80093d6:	4629      	mov	r1, r5
 80093d8:	f7ff fa40 	bl	800885c <snprintf>
 80093dc:	4285      	cmp	r5, r0
 80093de:	bfa2      	ittt	ge
 80093e0:	88e3      	ldrhge	r3, [r4, #6]
 80093e2:	181b      	addge	r3, r3, r0
 80093e4:	80e3      	strhge	r3, [r4, #6]
 80093e6:	b003      	add	sp, #12
 80093e8:	bd30      	pop	{r4, r5, pc}
 80093ea:	2201      	movs	r2, #1
 80093ec:	9200      	str	r2, [sp, #0]
 80093ee:	4a03      	ldr	r2, [pc, #12]	; (80093fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 80093f0:	e7f1      	b.n	80093d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 80093f2:	bf00      	nop
 80093f4:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 80093f8:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 80093fc:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}

08009400 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009400:	b510      	push	{r4, lr}
 8009402:	4604      	mov	r4, r0
 8009404:	2220      	movs	r2, #32
 8009406:	f840 1b04 	str.w	r1, [r0], #4
 800940a:	2100      	movs	r1, #0
 800940c:	f005 fe0c 	bl	800f028 <memset>
 8009410:	4620      	mov	r0, r4
 8009412:	bd10      	pop	{r4, pc}

08009414 <RemoteConfigParams::Load()>:
 8009414:	b508      	push	{r3, lr}
 8009416:	2300      	movs	r3, #0
 8009418:	4601      	mov	r1, r0
 800941a:	6043      	str	r3, [r0, #4]
 800941c:	6800      	ldr	r0, [r0, #0]
 800941e:	b120      	cbz	r0, 800942a <RemoteConfigParams::Load()+0x16>
 8009420:	6803      	ldr	r3, [r0, #0]
 8009422:	3104      	adds	r1, #4
 8009424:	68db      	ldr	r3, [r3, #12]
 8009426:	4798      	blx	r3
 8009428:	2001      	movs	r0, #1
 800942a:	bd08      	pop	{r3, pc}

0800942c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800942c:	2300      	movs	r3, #0
 800942e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009430:	460d      	mov	r5, r1
 8009432:	4616      	mov	r6, r2
 8009434:	4604      	mov	r4, r0
 8009436:	6043      	str	r3, [r0, #4]
 8009438:	4602      	mov	r2, r0
 800943a:	490a      	ldr	r1, [pc, #40]	; (8009464 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800943c:	4668      	mov	r0, sp
 800943e:	f005 f80d 	bl	800e45c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009442:	4632      	mov	r2, r6
 8009444:	4629      	mov	r1, r5
 8009446:	4668      	mov	r0, sp
 8009448:	f005 f80c 	bl	800e464 <ReadConfigFile::Read(char const*, unsigned int)>
 800944c:	4621      	mov	r1, r4
 800944e:	f851 0b04 	ldr.w	r0, [r1], #4
 8009452:	6803      	ldr	r3, [r0, #0]
 8009454:	689b      	ldr	r3, [r3, #8]
 8009456:	4798      	blx	r3
 8009458:	4668      	mov	r0, sp
 800945a:	f005 f802 	bl	800e462 <ReadConfigFile::~ReadConfigFile()>
 800945e:	b002      	add	sp, #8
 8009460:	bd70      	pop	{r4, r5, r6, pc}
 8009462:	bf00      	nop
 8009464:	08009525 	stmdaeq	r0, {r0, r2, r5, r8, sl, ip, pc}

08009468 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009468:	6843      	ldr	r3, [r0, #4]
 800946a:	b111      	cbz	r1, 8009472 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800946c:	4313      	orrs	r3, r2
 800946e:	6043      	str	r3, [r0, #4]
 8009470:	4770      	bx	lr
 8009472:	ea23 0302 	bic.w	r3, r3, r2
 8009476:	e7fa      	b.n	800946e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009478 <RemoteConfigParams::callbackFunction(char const*)>:
 8009478:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800947a:	460d      	mov	r5, r1
 800947c:	4604      	mov	r4, r0
 800947e:	4923      	ldr	r1, [pc, #140]	; (800950c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009480:	4628      	mov	r0, r5
 8009482:	f10d 0203 	add.w	r2, sp, #3
 8009486:	f005 f899 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800948a:	b940      	cbnz	r0, 800949e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800948c:	2201      	movs	r2, #1
 800948e:	4620      	mov	r0, r4
 8009490:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009494:	b003      	add	sp, #12
 8009496:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800949a:	f7ff bfe5 	b.w	8009468 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800949e:	4628      	mov	r0, r5
 80094a0:	491b      	ldr	r1, [pc, #108]	; (8009510 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 80094a2:	f10d 0203 	add.w	r2, sp, #3
 80094a6:	f005 f889 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094aa:	b908      	cbnz	r0, 80094b0 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 80094ac:	2202      	movs	r2, #2
 80094ae:	e7ee      	b.n	800948e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094b0:	4628      	mov	r0, r5
 80094b2:	4918      	ldr	r1, [pc, #96]	; (8009514 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 80094b4:	f10d 0203 	add.w	r2, sp, #3
 80094b8:	f005 f880 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094bc:	b908      	cbnz	r0, 80094c2 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 80094be:	2204      	movs	r2, #4
 80094c0:	e7e5      	b.n	800948e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094c2:	4628      	mov	r0, r5
 80094c4:	4914      	ldr	r1, [pc, #80]	; (8009518 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 80094c6:	f10d 0203 	add.w	r2, sp, #3
 80094ca:	f005 f877 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094ce:	b908      	cbnz	r0, 80094d4 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 80094d0:	2208      	movs	r2, #8
 80094d2:	e7dc      	b.n	800948e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094d4:	4628      	mov	r0, r5
 80094d6:	4911      	ldr	r1, [pc, #68]	; (800951c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 80094d8:	f10d 0203 	add.w	r2, sp, #3
 80094dc:	f005 f86e 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094e0:	b908      	cbnz	r0, 80094e6 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 80094e2:	2220      	movs	r2, #32
 80094e4:	e7d3      	b.n	800948e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094e6:	2317      	movs	r3, #23
 80094e8:	4628      	mov	r0, r5
 80094ea:	9301      	str	r3, [sp, #4]
 80094ec:	490c      	ldr	r1, [pc, #48]	; (8009520 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 80094ee:	ab01      	add	r3, sp, #4
 80094f0:	f104 020c 	add.w	r2, r4, #12
 80094f4:	f004 ffea 	bl	800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80094f8:	b930      	cbnz	r0, 8009508 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 80094fa:	9b01      	ldr	r3, [sp, #4]
 80094fc:	4423      	add	r3, r4
 80094fe:	7318      	strb	r0, [r3, #12]
 8009500:	6863      	ldr	r3, [r4, #4]
 8009502:	f043 0310 	orr.w	r3, r3, #16
 8009506:	6063      	str	r3, [r4, #4]
 8009508:	b003      	add	sp, #12
 800950a:	bd30      	pop	{r4, r5, pc}
 800950c:	0801175a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip}
 8009510:	0801177b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, ip}
 8009514:	08011789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip}
 8009518:	08011797 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, ip}
 800951c:	080117a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, ip}
 8009520:	0801176e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, ip}

08009524 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009524:	f7ff bfa8 	b.w	8009478 <RemoteConfigParams::callbackFunction(char const*)>

08009528 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009528:	b570      	push	{r4, r5, r6, lr}
 800952a:	4604      	mov	r4, r0
 800952c:	4615      	mov	r5, r2
 800952e:	461e      	mov	r6, r3
 8009530:	b086      	sub	sp, #24
 8009532:	3004      	adds	r0, #4
 8009534:	2900      	cmp	r1, #0
 8009536:	d041      	beq.n	80095bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009538:	2220      	movs	r2, #32
 800953a:	f005 fd5e 	bl	800effa <memmove>
 800953e:	4633      	mov	r3, r6
 8009540:	462a      	mov	r2, r5
 8009542:	4937      	ldr	r1, [pc, #220]	; (8009620 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009544:	a803      	add	r0, sp, #12
 8009546:	f004 fee9 	bl	800e31c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800954a:	6862      	ldr	r2, [r4, #4]
 800954c:	4935      	ldr	r1, [pc, #212]	; (8009624 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800954e:	f002 0201 	and.w	r2, r2, #1
 8009552:	a803      	add	r0, sp, #12
 8009554:	f7ff ff2c 	bl	80093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009558:	6862      	ldr	r2, [r4, #4]
 800955a:	4933      	ldr	r1, [pc, #204]	; (8009628 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800955c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009560:	a803      	add	r0, sp, #12
 8009562:	f7ff ff25 	bl	80093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009566:	6862      	ldr	r2, [r4, #4]
 8009568:	4930      	ldr	r1, [pc, #192]	; (800962c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800956a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800956e:	a803      	add	r0, sp, #12
 8009570:	f7ff ff1e 	bl	80093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009574:	6862      	ldr	r2, [r4, #4]
 8009576:	492e      	ldr	r1, [pc, #184]	; (8009630 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009578:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800957c:	a803      	add	r0, sp, #12
 800957e:	f7ff ff17 	bl	80093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009582:	6862      	ldr	r2, [r4, #4]
 8009584:	492b      	ldr	r1, [pc, #172]	; (8009634 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009586:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800958a:	a803      	add	r0, sp, #12
 800958c:	f7ff ff10 	bl	80093b0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009590:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009594:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009598:	6862      	ldr	r2, [r4, #4]
 800959a:	42ab      	cmp	r3, r5
 800959c:	d223      	bcs.n	80095e6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800959e:	9803      	ldr	r0, [sp, #12]
 80095a0:	06d2      	lsls	r2, r2, #27
 80095a2:	4418      	add	r0, r3
 80095a4:	eba5 0503 	sub.w	r5, r5, r3
 80095a8:	f104 040c 	add.w	r4, r4, #12
 80095ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80095b0:	d40b      	bmi.n	80095ca <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 80095b2:	b95b      	cbnz	r3, 80095cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 80095b4:	4b20      	ldr	r3, [pc, #128]	; (8009638 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 80095b6:	4a21      	ldr	r2, [pc, #132]	; (800963c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 80095b8:	9400      	str	r4, [sp, #0]
 80095ba:	e00a      	b.n	80095d2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 80095bc:	6823      	ldr	r3, [r4, #0]
 80095be:	4601      	mov	r1, r0
 80095c0:	681a      	ldr	r2, [r3, #0]
 80095c2:	4618      	mov	r0, r3
 80095c4:	68d2      	ldr	r2, [r2, #12]
 80095c6:	4790      	blx	r2
 80095c8:	e7b9      	b.n	800953e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 80095ca:	b32b      	cbz	r3, 8009618 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 80095cc:	4b1a      	ldr	r3, [pc, #104]	; (8009638 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 80095ce:	4a1c      	ldr	r2, [pc, #112]	; (8009640 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 80095d0:	9400      	str	r4, [sp, #0]
 80095d2:	4629      	mov	r1, r5
 80095d4:	f7ff f942 	bl	800885c <snprintf>
 80095d8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80095dc:	4285      	cmp	r5, r0
 80095de:	bfa4      	itt	ge
 80095e0:	181b      	addge	r3, r3, r0
 80095e2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80095e6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80095ea:	b17b      	cbz	r3, 800960c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 80095ec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80095f0:	9b03      	ldr	r3, [sp, #12]
 80095f2:	4413      	add	r3, r2
 80095f4:	227d      	movs	r2, #125	; 0x7d
 80095f6:	f803 2c01 	strb.w	r2, [r3, #-1]
 80095fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80095fe:	9903      	ldr	r1, [sp, #12]
 8009600:	54ca      	strb	r2, [r1, r3]
 8009602:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009606:	3301      	adds	r3, #1
 8009608:	f8ad 3012 	strh.w	r3, [sp, #18]
 800960c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009610:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009612:	601a      	str	r2, [r3, #0]
 8009614:	b006      	add	sp, #24
 8009616:	bd70      	pop	{r4, r5, r6, pc}
 8009618:	4b07      	ldr	r3, [pc, #28]	; (8009638 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800961a:	4a0a      	ldr	r2, [pc, #40]	; (8009644 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800961c:	9400      	str	r4, [sp, #0]
 800961e:	e7d8      	b.n	80095d2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8009620:	08011762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip}
 8009624:	0801175a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip}
 8009628:	0801177b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, ip}
 800962c:	08011789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, ip}
 8009630:	08011797 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, ip}
 8009634:	080117a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, ip}
 8009638:	0801176e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, ip}
 800963c:	080113c0 	stmdaeq	r1, {r6, r7, r8, r9, ip}
 8009640:	080113b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, ip}
 8009644:	080113c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, ip}

08009648 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009648:	b513      	push	{r0, r1, r4, lr}
 800964a:	6804      	ldr	r4, [r0, #0]
 800964c:	b914      	cbnz	r4, 8009654 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800964e:	601c      	str	r4, [r3, #0]
 8009650:	b002      	add	sp, #8
 8009652:	bd10      	pop	{r4, pc}
 8009654:	9300      	str	r3, [sp, #0]
 8009656:	4613      	mov	r3, r2
 8009658:	460a      	mov	r2, r1
 800965a:	2100      	movs	r1, #0
 800965c:	f7ff ff64 	bl	8009528 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009660:	e7f6      	b.n	8009650 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009662 <RemoteConfigParams::Set(RemoteConfig*)>:
 8009662:	b538      	push	{r3, r4, r5, lr}
 8009664:	460c      	mov	r4, r1
 8009666:	4605      	mov	r5, r0
 8009668:	6841      	ldr	r1, [r0, #4]
 800966a:	4620      	mov	r0, r4
 800966c:	f001 0101 	and.w	r1, r1, #1
 8009670:	f7ff fc6c 	bl	8008f4c <RemoteConfig::SetDisable(bool)>
 8009674:	686b      	ldr	r3, [r5, #4]
 8009676:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800967a:	7362      	strb	r2, [r4, #13]
 800967c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009680:	73a2      	strb	r2, [r4, #14]
 8009682:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009686:	73e2      	strb	r2, [r4, #15]
 8009688:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800968c:	06db      	lsls	r3, r3, #27
 800968e:	7422      	strb	r2, [r4, #16]
 8009690:	d506      	bpl.n	80096a0 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8009692:	4620      	mov	r0, r4
 8009694:	f105 010c 	add.w	r1, r5, #12
 8009698:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800969c:	f7ff bc76 	b.w	8008f8c <RemoteConfig::SetDisplayName(char const*)>
 80096a0:	bd38      	pop	{r3, r4, r5, pc}

080096a2 <RemoteConfigParams::Dump()>:
 80096a2:	4770      	bx	lr

080096a4 <RemoteConfig::HandleReboot()>:
 80096a4:	7b83      	ldrb	r3, [r0, #14]
 80096a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d03c      	beq.n	8009726 <RemoteConfig::HandleReboot()+0x82>
 80096ac:	2301      	movs	r3, #1
 80096ae:	4c1f      	ldr	r4, [pc, #124]	; (800972c <RemoteConfig::HandleReboot()+0x88>)
 80096b0:	7443      	strb	r3, [r0, #17]
 80096b2:	6825      	ldr	r5, [r4, #0]
 80096b4:	69a8      	ldr	r0, [r5, #24]
 80096b6:	b138      	cbz	r0, 80096c8 <RemoteConfig::HandleReboot()+0x24>
 80096b8:	2100      	movs	r1, #0
 80096ba:	6803      	ldr	r3, [r0, #0]
 80096bc:	7429      	strb	r1, [r5, #16]
 80096be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096c0:	4798      	blx	r3
 80096c2:	4b1b      	ldr	r3, [pc, #108]	; (8009730 <RemoteConfig::HandleReboot()+0x8c>)
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	606b      	str	r3, [r5, #4]
 80096c8:	4d1a      	ldr	r5, [pc, #104]	; (8009734 <RemoteConfig::HandleReboot()+0x90>)
 80096ca:	6828      	ldr	r0, [r5, #0]
 80096cc:	f002 fb1a 	bl	800bd04 <SpiFlashStore::Flash()>
 80096d0:	2800      	cmp	r0, #0
 80096d2:	d1fa      	bne.n	80096ca <RemoteConfig::HandleReboot()+0x26>
 80096d4:	4b18      	ldr	r3, [pc, #96]	; (8009738 <RemoteConfig::HandleReboot()+0x94>)
 80096d6:	6818      	ldr	r0, [r3, #0]
 80096d8:	f003 fdc4 	bl	800d264 <Network::Shutdown()>
 80096dc:	4817      	ldr	r0, [pc, #92]	; (800973c <RemoteConfig::HandleReboot()+0x98>)
 80096de:	f7ff f8ad 	bl	800883c <printf>
 80096e2:	6823      	ldr	r3, [r4, #0]
 80096e4:	6998      	ldr	r0, [r3, #24]
 80096e6:	b110      	cbz	r0, 80096ee <RemoteConfig::HandleReboot()+0x4a>
 80096e8:	6803      	ldr	r3, [r0, #0]
 80096ea:	68db      	ldr	r3, [r3, #12]
 80096ec:	4798      	blx	r3
 80096ee:	6824      	ldr	r4, [r4, #0]
 80096f0:	4913      	ldr	r1, [pc, #76]	; (8009740 <RemoteConfig::HandleReboot()+0x9c>)
 80096f2:	4620      	mov	r0, r4
 80096f4:	f7ff fb40 	bl	8008d78 <Display::TextStatus(char const*)>
 80096f8:	7c63      	ldrb	r3, [r4, #17]
 80096fa:	b183      	cbz	r3, 800971e <RemoteConfig::HandleReboot()+0x7a>
 80096fc:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8009700:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009704:	23bf      	movs	r3, #191	; 0xbf
 8009706:	7a20      	ldrb	r0, [r4, #8]
 8009708:	f88d 3006 	strb.w	r3, [sp, #6]
 800970c:	f006 fc0c 	bl	800ff28 <gd32_i2c_set_address>
 8009710:	68e0      	ldr	r0, [r4, #12]
 8009712:	f006 fc01 	bl	800ff18 <gd32_i2c_set_baudrate>
 8009716:	2103      	movs	r1, #3
 8009718:	a801      	add	r0, sp, #4
 800971a:	f006 fc0b 	bl	800ff34 <gd32_i2c_write>
 800971e:	4b09      	ldr	r3, [pc, #36]	; (8009744 <RemoteConfig::HandleReboot()+0xa0>)
 8009720:	6818      	ldr	r0, [r3, #0]
 8009722:	f005 fb6b 	bl	800edfc <Hardware::Reboot()>
 8009726:	b003      	add	sp, #12
 8009728:	bd30      	pop	{r4, r5, pc}
 800972a:	bf00      	nop
 800972c:	20009ff0 	strdcs	r9, [r0], -r0
 8009730:	2000a0f4 	strdcs	sl, [r0], -r4
 8009734:	20002120 	andcs	r2, r0, r0, lsr #2
 8009738:	20009a20 	andcs	r9, r0, r0, lsr #20
 800973c:	080113c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, ip}
 8009740:	080113d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, ip}
 8009744:	2000a0e0 	andcs	sl, r0, r0, ror #1

08009748 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009748:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800974c:	2000      	movs	r0, #0
 800974e:	4d12      	ldr	r5, [pc, #72]	; (8009798 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009750:	f10d 0c04 	add.w	ip, sp, #4
 8009754:	6814      	ldr	r4, [r2, #0]
 8009756:	7d2b      	ldrb	r3, [r5, #20]
 8009758:	692e      	ldr	r6, [r5, #16]
 800975a:	42a3      	cmp	r3, r4
 800975c:	bf34      	ite	cc
 800975e:	4664      	movcc	r4, ip
 8009760:	4614      	movcs	r4, r2
 8009762:	9301      	str	r3, [sp, #4]
 8009764:	6827      	ldr	r7, [r4, #0]
 8009766:	460c      	mov	r4, r1
 8009768:	3e01      	subs	r6, #1
 800976a:	440f      	add	r7, r1
 800976c:	42bc      	cmp	r4, r7
 800976e:	d101      	bne.n	8009774 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 8009770:	6013      	str	r3, [r2, #0]
 8009772:	e00c      	b.n	800978e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 8009774:	f894 8000 	ldrb.w	r8, [r4]
 8009778:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800977c:	45f0      	cmp	r8, lr
 800977e:	d009      	beq.n	8009794 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009780:	3001      	adds	r0, #1
 8009782:	2804      	cmp	r0, #4
 8009784:	f105 051c 	add.w	r5, r5, #28
 8009788:	d1e4      	bne.n	8009754 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800978a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800978e:	b002      	add	sp, #8
 8009790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009794:	3401      	adds	r4, #1
 8009796:	e7e9      	b.n	800976c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8009798:	08011410 	stmdaeq	r1, {r4, sl, ip}

0800979c <RemoteConfig::PlatformHandleTftpSet()>:
 800979c:	f890 1020 	ldrb.w	r1, [r0, #32]
 80097a0:	b109      	cbz	r1, 80097a6 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 80097a2:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 80097a6:	2002      	movs	r0, #2
 80097a8:	f005 be30 	b.w	800f40c <bkp_data_write>

080097ac <RemoteConfig::PlatformHandleTftpGet()>:
 80097ac:	b510      	push	{r4, lr}
 80097ae:	4604      	mov	r4, r0
 80097b0:	2002      	movs	r0, #2
 80097b2:	f005 fe41 	bl	800f438 <bkp_data_read>
 80097b6:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 80097ba:	1ac3      	subs	r3, r0, r3
 80097bc:	4258      	negs	r0, r3
 80097be:	4158      	adcs	r0, r3
 80097c0:	f884 0020 	strb.w	r0, [r4, #32]
 80097c4:	bd10      	pop	{r4, pc}

080097c6 <strcmp>:
 80097c6:	1e43      	subs	r3, r0, #1
 80097c8:	3901      	subs	r1, #1
 80097ca:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80097ce:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80097d2:	4290      	cmp	r0, r2
 80097d4:	d001      	beq.n	80097da <strcmp+0x14>
 80097d6:	1a80      	subs	r0, r0, r2
 80097d8:	e001      	b.n	80097de <strcmp+0x18>
 80097da:	2800      	cmp	r0, #0
 80097dc:	d1f5      	bne.n	80097ca <strcmp+0x4>
 80097de:	4770      	bx	lr

080097e0 <strcasecmp>:
 80097e0:	b530      	push	{r4, r5, lr}
 80097e2:	1e42      	subs	r2, r0, #1
 80097e4:	3901      	subs	r1, #1
 80097e6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80097ea:	4604      	mov	r4, r0
 80097ec:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80097f0:	2b19      	cmp	r3, #25
 80097f2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80097f6:	bf98      	it	ls
 80097f8:	f100 0420 	addls.w	r4, r0, #32
 80097fc:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009800:	2d19      	cmp	r5, #25
 8009802:	bf98      	it	ls
 8009804:	3320      	addls	r3, #32
 8009806:	42a3      	cmp	r3, r4
 8009808:	d001      	beq.n	800980e <strcasecmp+0x2e>
 800980a:	1ae0      	subs	r0, r4, r3
 800980c:	e001      	b.n	8009812 <strcasecmp+0x32>
 800980e:	2800      	cmp	r0, #0
 8009810:	d1e9      	bne.n	80097e6 <strcasecmp+0x6>
 8009812:	bd30      	pop	{r4, r5, pc}

08009814 <PropertiesConfig::EnableJSON(bool)>:
 8009814:	4a04      	ldr	r2, [pc, #16]	; (8009828 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8009816:	7813      	ldrb	r3, [r2, #0]
 8009818:	b118      	cbz	r0, 8009822 <PropertiesConfig::EnableJSON(bool)+0xe>
 800981a:	f043 0301 	orr.w	r3, r3, #1
 800981e:	7013      	strb	r3, [r2, #0]
 8009820:	4770      	bx	lr
 8009822:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009826:	e7fa      	b.n	800981e <PropertiesConfig::EnableJSON(bool)+0xa>
 8009828:	20009fee 	andcs	r9, r0, lr, ror #31

0800982c <HttpDaemon::HttpDaemon()>:
 800982c:	4a08      	ldr	r2, [pc, #32]	; (8009850 <HttpDaemon::HttpDaemon()+0x24>)
 800982e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009832:	6002      	str	r2, [r0, #0]
 8009834:	2200      	movs	r2, #0
 8009836:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800983a:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800983e:	2102      	movs	r1, #2
 8009840:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009844:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009848:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800984c:	60c2      	str	r2, [r0, #12]
 800984e:	4770      	bx	lr
 8009850:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}

08009854 <HttpDaemon::Start()>:
 8009854:	4b04      	ldr	r3, [pc, #16]	; (8009868 <HttpDaemon::Start()+0x14>)
 8009856:	b510      	push	{r4, lr}
 8009858:	2150      	movs	r1, #80	; 0x50
 800985a:	4604      	mov	r4, r0
 800985c:	6818      	ldr	r0, [r3, #0]
 800985e:	f003 fef1 	bl	800d644 <Network::TcpBegin(unsigned short)>
 8009862:	6120      	str	r0, [r4, #16]
 8009864:	bd10      	pop	{r4, pc}
 8009866:	bf00      	nop
 8009868:	20009a20 	andcs	r9, r0, r0, lsr #20

0800986c <HttpDaemon::ParseMethod(char*)>:
 800986c:	b538      	push	{r3, r4, r5, lr}
 800986e:	4604      	mov	r4, r0
 8009870:	4608      	mov	r0, r1
 8009872:	491a      	ldr	r1, [pc, #104]	; (80098dc <HttpDaemon::ParseMethod(char*)+0x70>)
 8009874:	f005 fc02 	bl	800f07c <strtok>
 8009878:	4605      	mov	r5, r0
 800987a:	b360      	cbz	r0, 80098d6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800987c:	4918      	ldr	r1, [pc, #96]	; (80098e0 <HttpDaemon::ParseMethod(char*)+0x74>)
 800987e:	f7ff ffa2 	bl	80097c6 <strcmp>
 8009882:	b128      	cbz	r0, 8009890 <HttpDaemon::ParseMethod(char*)+0x24>
 8009884:	4628      	mov	r0, r5
 8009886:	4917      	ldr	r1, [pc, #92]	; (80098e4 <HttpDaemon::ParseMethod(char*)+0x78>)
 8009888:	f7ff ff9d 	bl	80097c6 <strcmp>
 800988c:	bb18      	cbnz	r0, 80098d6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800988e:	2001      	movs	r0, #1
 8009890:	61e0      	str	r0, [r4, #28]
 8009892:	4912      	ldr	r1, [pc, #72]	; (80098dc <HttpDaemon::ParseMethod(char*)+0x70>)
 8009894:	2000      	movs	r0, #0
 8009896:	f005 fbf1 	bl	800f07c <strtok>
 800989a:	b910      	cbnz	r0, 80098a2 <HttpDaemon::ParseMethod(char*)+0x36>
 800989c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80098a0:	bd38      	pop	{r3, r4, r5, pc}
 80098a2:	6060      	str	r0, [r4, #4]
 80098a4:	4910      	ldr	r1, [pc, #64]	; (80098e8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 80098a6:	2000      	movs	r0, #0
 80098a8:	f005 fbe8 	bl	800f07c <strtok>
 80098ac:	2800      	cmp	r0, #0
 80098ae:	d0f5      	beq.n	800989c <HttpDaemon::ParseMethod(char*)+0x30>
 80098b0:	490e      	ldr	r1, [pc, #56]	; (80098ec <HttpDaemon::ParseMethod(char*)+0x80>)
 80098b2:	f7ff ff88 	bl	80097c6 <strcmp>
 80098b6:	2800      	cmp	r0, #0
 80098b8:	d1f0      	bne.n	800989c <HttpDaemon::ParseMethod(char*)+0x30>
 80098ba:	490d      	ldr	r1, [pc, #52]	; (80098f0 <HttpDaemon::ParseMethod(char*)+0x84>)
 80098bc:	f005 fbde 	bl	800f07c <strtok>
 80098c0:	2800      	cmp	r0, #0
 80098c2:	d0eb      	beq.n	800989c <HttpDaemon::ParseMethod(char*)+0x30>
 80098c4:	490b      	ldr	r1, [pc, #44]	; (80098f4 <HttpDaemon::ParseMethod(char*)+0x88>)
 80098c6:	f7ff ff7e 	bl	80097c6 <strcmp>
 80098ca:	2800      	cmp	r0, #0
 80098cc:	f240 10f9 	movw	r0, #505	; 0x1f9
 80098d0:	bf08      	it	eq
 80098d2:	20c8      	moveq	r0, #200	; 0xc8
 80098d4:	e7e4      	b.n	80098a0 <HttpDaemon::ParseMethod(char*)+0x34>
 80098d6:	f240 10f5 	movw	r0, #501	; 0x1f5
 80098da:	e7e1      	b.n	80098a0 <HttpDaemon::ParseMethod(char*)+0x34>
 80098dc:	08011137 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, ip}
 80098e0:	08011480 	stmdaeq	r1, {r7, sl, ip}
 80098e4:	08011484 	stmdaeq	r1, {r2, r7, sl, ip}
 80098e8:	080114ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip}
 80098ec:	08011489 	stmdaeq	r1, {r0, r3, r7, sl, ip}
 80098f0:	0801148e 	stmdaeq	r1, {r1, r2, r3, r7, sl, ip}
 80098f4:	08011491 	stmdaeq	r1, {r0, r4, r7, sl, ip}

080098f8 <HttpDaemon::ParseHeaderField(char*)>:
 80098f8:	b538      	push	{r3, r4, r5, lr}
 80098fa:	4605      	mov	r5, r0
 80098fc:	4608      	mov	r0, r1
 80098fe:	491d      	ldr	r1, [pc, #116]	; (8009974 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009900:	f005 fbbc 	bl	800f07c <strtok>
 8009904:	4604      	mov	r4, r0
 8009906:	b910      	cbnz	r0, 800990e <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009908:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800990c:	bd38      	pop	{r3, r4, r5, pc}
 800990e:	491a      	ldr	r1, [pc, #104]	; (8009978 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009910:	f7ff ff66 	bl	80097e0 <strcasecmp>
 8009914:	b970      	cbnz	r0, 8009934 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009916:	4919      	ldr	r1, [pc, #100]	; (800997c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009918:	f005 fbb0 	bl	800f07c <strtok>
 800991c:	2800      	cmp	r0, #0
 800991e:	d0f3      	beq.n	8009908 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009920:	4917      	ldr	r1, [pc, #92]	; (8009980 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 8009922:	f7ff ff50 	bl	80097c6 <strcmp>
 8009926:	b108      	cbz	r0, 800992c <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009928:	20c8      	movs	r0, #200	; 0xc8
 800992a:	e7ef      	b.n	800990c <HttpDaemon::ParseHeaderField(char*)+0x14>
 800992c:	2301      	movs	r3, #1
 800992e:	f885 3020 	strb.w	r3, [r5, #32]
 8009932:	e7f9      	b.n	8009928 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009934:	4620      	mov	r0, r4
 8009936:	4913      	ldr	r1, [pc, #76]	; (8009984 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009938:	f7ff ff52 	bl	80097e0 <strcasecmp>
 800993c:	4604      	mov	r4, r0
 800993e:	2800      	cmp	r0, #0
 8009940:	d1f2      	bne.n	8009928 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009942:	4911      	ldr	r1, [pc, #68]	; (8009988 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009944:	f005 fb9a 	bl	800f07c <strtok>
 8009948:	2800      	cmp	r0, #0
 800994a:	d0dd      	beq.n	8009908 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800994c:	1e42      	subs	r2, r0, #1
 800994e:	4623      	mov	r3, r4
 8009950:	200a      	movs	r0, #10
 8009952:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009956:	b909      	cbnz	r1, 800995c <HttpDaemon::ParseHeaderField(char*)+0x64>
 8009958:	84eb      	strh	r3, [r5, #38]	; 0x26
 800995a:	e7e5      	b.n	8009928 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800995c:	3930      	subs	r1, #48	; 0x30
 800995e:	2909      	cmp	r1, #9
 8009960:	d8d2      	bhi.n	8009908 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009962:	fb00 1303 	mla	r3, r0, r3, r1
 8009966:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800996a:	d9f2      	bls.n	8009952 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800996c:	f240 109d 	movw	r0, #413	; 0x19d
 8009970:	e7cc      	b.n	800990c <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009972:	bf00      	nop
 8009974:	08011495 	stmdaeq	r1, {r0, r2, r4, r7, sl, ip}
 8009978:	08011497 	stmdaeq	r1, {r0, r1, r2, r4, r7, sl, ip}
 800997c:	080114a4 	stmdaeq	r1, {r2, r5, r7, sl, ip}
 8009980:	080114a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, ip}
 8009984:	080114b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, ip}
 8009988:	08011137 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, ip}

0800998c <HttpDaemon::ParseRequest()>:
 800998c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800998e:	2400      	movs	r4, #0
 8009990:	4605      	mov	r5, r0
 8009992:	4622      	mov	r2, r4
 8009994:	4626      	mov	r6, r4
 8009996:	68c1      	ldr	r1, [r0, #12]
 8009998:	f880 4020 	strb.w	r4, [r0, #32]
 800999c:	6244      	str	r4, [r0, #36]	; 0x24
 800999e:	8aab      	ldrh	r3, [r5, #20]
 80099a0:	42a3      	cmp	r3, r4
 80099a2:	d91d      	bls.n	80099e0 <HttpDaemon::ParseRequest()+0x54>
 80099a4:	68eb      	ldr	r3, [r5, #12]
 80099a6:	5d18      	ldrb	r0, [r3, r4]
 80099a8:	280a      	cmp	r0, #10
 80099aa:	d10e      	bne.n	80099ca <HttpDaemon::ParseRequest()+0x3e>
 80099ac:	4423      	add	r3, r4
 80099ae:	f803 6c01 	strb.w	r6, [r3, #-1]
 80099b2:	1c57      	adds	r7, r2, #1
 80099b4:	b962      	cbnz	r2, 80099d0 <HttpDaemon::ParseRequest()+0x44>
 80099b6:	4628      	mov	r0, r5
 80099b8:	f7ff ff58 	bl	800986c <HttpDaemon::ParseMethod(char*)>
 80099bc:	28c8      	cmp	r0, #200	; 0xc8
 80099be:	d110      	bne.n	80099e2 <HttpDaemon::ParseRequest()+0x56>
 80099c0:	463a      	mov	r2, r7
 80099c2:	68e9      	ldr	r1, [r5, #12]
 80099c4:	3401      	adds	r4, #1
 80099c6:	b2a4      	uxth	r4, r4
 80099c8:	4421      	add	r1, r4
 80099ca:	3401      	adds	r4, #1
 80099cc:	b2a4      	uxth	r4, r4
 80099ce:	e7e6      	b.n	800999e <HttpDaemon::ParseRequest()+0x12>
 80099d0:	7808      	ldrb	r0, [r1, #0]
 80099d2:	b968      	cbnz	r0, 80099f0 <HttpDaemon::ParseRequest()+0x64>
 80099d4:	696b      	ldr	r3, [r5, #20]
 80099d6:	3b01      	subs	r3, #1
 80099d8:	1b1b      	subs	r3, r3, r4
 80099da:	b29b      	uxth	r3, r3
 80099dc:	84ab      	strh	r3, [r5, #36]	; 0x24
 80099de:	b90b      	cbnz	r3, 80099e4 <HttpDaemon::ParseRequest()+0x58>
 80099e0:	20c8      	movs	r0, #200	; 0xc8
 80099e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80099e4:	68ea      	ldr	r2, [r5, #12]
 80099e6:	3401      	adds	r4, #1
 80099e8:	4414      	add	r4, r2
 80099ea:	60ac      	str	r4, [r5, #8]
 80099ec:	54e0      	strb	r0, [r4, r3]
 80099ee:	e7f7      	b.n	80099e0 <HttpDaemon::ParseRequest()+0x54>
 80099f0:	4628      	mov	r0, r5
 80099f2:	f7ff ff81 	bl	80098f8 <HttpDaemon::ParseHeaderField(char*)>
 80099f6:	e7e1      	b.n	80099bc <HttpDaemon::ParseRequest()+0x30>

080099f8 <HttpDaemon::HandleGetTxt()>:
 80099f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099fc:	6846      	ldr	r6, [r0, #4]
 80099fe:	4607      	mov	r7, r0
 8009a00:	1db4      	adds	r4, r6, #6
 8009a02:	4622      	mov	r2, r4
 8009a04:	4613      	mov	r3, r2
 8009a06:	7819      	ldrb	r1, [r3, #0]
 8009a08:	3201      	adds	r2, #1
 8009a0a:	2900      	cmp	r1, #0
 8009a0c:	d1fa      	bne.n	8009a04 <HttpDaemon::HandleGetTxt()+0xc>
 8009a0e:	1b1b      	subs	r3, r3, r4
 8009a10:	2b04      	cmp	r3, #4
 8009a12:	d803      	bhi.n	8009a1c <HttpDaemon::HandleGetTxt()+0x24>
 8009a14:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009a18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a1c:	3b04      	subs	r3, #4
 8009a1e:	4914      	ldr	r1, [pc, #80]	; (8009a70 <HttpDaemon::HandleGetTxt()+0x78>)
 8009a20:	18e0      	adds	r0, r4, r3
 8009a22:	f7ff fed0 	bl	80097c6 <strcmp>
 8009a26:	2800      	cmp	r0, #0
 8009a28:	d1f4      	bne.n	8009a14 <HttpDaemon::HandleGetTxt()+0x1c>
 8009a2a:	4b12      	ldr	r3, [pc, #72]	; (8009a74 <HttpDaemon::HandleGetTxt()+0x7c>)
 8009a2c:	2001      	movs	r0, #1
 8009a2e:	f893 8000 	ldrb.w	r8, [r3]
 8009a32:	f7ff feef 	bl	8009814 <PropertiesConfig::EnableJSON(bool)>
 8009a36:	4b10      	ldr	r3, [pc, #64]	; (8009a78 <HttpDaemon::HandleGetTxt()+0x80>)
 8009a38:	f240 529b 	movw	r2, #1435	; 0x59b
 8009a3c:	4621      	mov	r1, r4
 8009a3e:	6818      	ldr	r0, [r3, #0]
 8009a40:	f7ff fabc 	bl	8008fbc <RemoteConfig::HandleGet(void*, unsigned int)>
 8009a44:	4605      	mov	r5, r0
 8009a46:	f008 0801 	and.w	r8, r8, #1
 8009a4a:	4640      	mov	r0, r8
 8009a4c:	f7ff fee2 	bl	8009814 <PropertiesConfig::EnableJSON(bool)>
 8009a50:	2d00      	cmp	r5, #0
 8009a52:	d0df      	beq.n	8009a14 <HttpDaemon::HandleGetTxt()+0x1c>
 8009a54:	847d      	strh	r5, [r7, #34]	; 0x22
 8009a56:	4b09      	ldr	r3, [pc, #36]	; (8009a7c <HttpDaemon::HandleGetTxt()+0x84>)
 8009a58:	3506      	adds	r5, #6
 8009a5a:	442e      	add	r6, r5
 8009a5c:	42b4      	cmp	r4, r6
 8009a5e:	d101      	bne.n	8009a64 <HttpDaemon::HandleGetTxt()+0x6c>
 8009a60:	20c8      	movs	r0, #200	; 0xc8
 8009a62:	e7d9      	b.n	8009a18 <HttpDaemon::HandleGetTxt()+0x20>
 8009a64:	f814 2b01 	ldrb.w	r2, [r4], #1
 8009a68:	f803 2b01 	strb.w	r2, [r3], #1
 8009a6c:	e7f6      	b.n	8009a5c <HttpDaemon::HandleGetTxt()+0x64>
 8009a6e:	bf00      	nop
 8009a70:	08011400 	stmdaeq	r1, {sl, ip}
 8009a74:	20009fee 	andcs	r9, r0, lr, ror #31
 8009a78:	20000124 	andcs	r0, r0, r4, lsr #2
 8009a7c:	20000128 	andcs	r0, r0, r8, lsr #2

08009a80 <HttpDaemon::HandleGet()>:
 8009a80:	b570      	push	{r4, r5, r6, lr}
 8009a82:	6845      	ldr	r5, [r0, #4]
 8009a84:	4604      	mov	r4, r0
 8009a86:	493e      	ldr	r1, [pc, #248]	; (8009b80 <HttpDaemon::HandleGet()+0x100>)
 8009a88:	4628      	mov	r0, r5
 8009a8a:	f7ff fe9c 	bl	80097c6 <strcmp>
 8009a8e:	b120      	cbz	r0, 8009a9a <HttpDaemon::HandleGet()+0x1a>
 8009a90:	4628      	mov	r0, r5
 8009a92:	493c      	ldr	r1, [pc, #240]	; (8009b84 <HttpDaemon::HandleGet()+0x104>)
 8009a94:	f7ff fe97 	bl	80097c6 <strcmp>
 8009a98:	b950      	cbnz	r0, 8009ab0 <HttpDaemon::HandleGet()+0x30>
 8009a9a:	4b3b      	ldr	r3, [pc, #236]	; (8009b88 <HttpDaemon::HandleGet()+0x108>)
 8009a9c:	493b      	ldr	r1, [pc, #236]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009a9e:	483c      	ldr	r0, [pc, #240]	; (8009b90 <HttpDaemon::HandleGet()+0x110>)
 8009aa0:	6023      	str	r3, [r4, #0]
 8009aa2:	f000 fa67 	bl	8009f74 <get_file_content(char const*, char*)>
 8009aa6:	2800      	cmp	r0, #0
 8009aa8:	dd2f      	ble.n	8009b0a <HttpDaemon::HandleGet()+0x8a>
 8009aaa:	8460      	strh	r0, [r4, #34]	; 0x22
 8009aac:	20c8      	movs	r0, #200	; 0xc8
 8009aae:	bd70      	pop	{r4, r5, r6, pc}
 8009ab0:	4628      	mov	r0, r5
 8009ab2:	4938      	ldr	r1, [pc, #224]	; (8009b94 <HttpDaemon::HandleGet()+0x114>)
 8009ab4:	f7ff fe87 	bl	80097c6 <strcmp>
 8009ab8:	b920      	cbnz	r0, 8009ac4 <HttpDaemon::HandleGet()+0x44>
 8009aba:	4b37      	ldr	r3, [pc, #220]	; (8009b98 <HttpDaemon::HandleGet()+0x118>)
 8009abc:	4933      	ldr	r1, [pc, #204]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009abe:	4837      	ldr	r0, [pc, #220]	; (8009b9c <HttpDaemon::HandleGet()+0x11c>)
 8009ac0:	6023      	str	r3, [r4, #0]
 8009ac2:	e7ee      	b.n	8009aa2 <HttpDaemon::HandleGet()+0x22>
 8009ac4:	4628      	mov	r0, r5
 8009ac6:	4936      	ldr	r1, [pc, #216]	; (8009ba0 <HttpDaemon::HandleGet()+0x120>)
 8009ac8:	f7ff fe7d 	bl	80097c6 <strcmp>
 8009acc:	b190      	cbz	r0, 8009af4 <HttpDaemon::HandleGet()+0x74>
 8009ace:	4a35      	ldr	r2, [pc, #212]	; (8009ba4 <HttpDaemon::HandleGet()+0x124>)
 8009ad0:	1e6b      	subs	r3, r5, #1
 8009ad2:	1d69      	adds	r1, r5, #5
 8009ad4:	428b      	cmp	r3, r1
 8009ad6:	d112      	bne.n	8009afe <HttpDaemon::HandleGet()+0x7e>
 8009ad8:	4b33      	ldr	r3, [pc, #204]	; (8009ba8 <HttpDaemon::HandleGet()+0x128>)
 8009ada:	3506      	adds	r5, #6
 8009adc:	4628      	mov	r0, r5
 8009ade:	4933      	ldr	r1, [pc, #204]	; (8009bac <HttpDaemon::HandleGet()+0x12c>)
 8009ae0:	6023      	str	r3, [r4, #0]
 8009ae2:	f7ff fe70 	bl	80097c6 <strcmp>
 8009ae6:	b998      	cbnz	r0, 8009b10 <HttpDaemon::HandleGet()+0x90>
 8009ae8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009aec:	4827      	ldr	r0, [pc, #156]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009aee:	f000 f9c9 	bl	8009e84 <remoteconfig::json_get_list(char*, unsigned short)>
 8009af2:	e7d8      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x26>
 8009af4:	4b2e      	ldr	r3, [pc, #184]	; (8009bb0 <HttpDaemon::HandleGet()+0x130>)
 8009af6:	4925      	ldr	r1, [pc, #148]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009af8:	482e      	ldr	r0, [pc, #184]	; (8009bb4 <HttpDaemon::HandleGet()+0x134>)
 8009afa:	6023      	str	r3, [r4, #0]
 8009afc:	e7d1      	b.n	8009aa2 <HttpDaemon::HandleGet()+0x22>
 8009afe:	f812 0b01 	ldrb.w	r0, [r2], #1
 8009b02:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8009b06:	4286      	cmp	r6, r0
 8009b08:	d0e4      	beq.n	8009ad4 <HttpDaemon::HandleGet()+0x54>
 8009b0a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009b0e:	e7ce      	b.n	8009aae <HttpDaemon::HandleGet()+0x2e>
 8009b10:	4628      	mov	r0, r5
 8009b12:	4929      	ldr	r1, [pc, #164]	; (8009bb8 <HttpDaemon::HandleGet()+0x138>)
 8009b14:	f7ff fe57 	bl	80097c6 <strcmp>
 8009b18:	b928      	cbnz	r0, 8009b26 <HttpDaemon::HandleGet()+0xa6>
 8009b1a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b1e:	481b      	ldr	r0, [pc, #108]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009b20:	f000 f9e4 	bl	8009eec <remoteconfig::json_get_version(char*, unsigned short)>
 8009b24:	e7bf      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x26>
 8009b26:	4628      	mov	r0, r5
 8009b28:	4924      	ldr	r1, [pc, #144]	; (8009bbc <HttpDaemon::HandleGet()+0x13c>)
 8009b2a:	f7ff fe4c 	bl	80097c6 <strcmp>
 8009b2e:	b948      	cbnz	r0, 8009b44 <HttpDaemon::HandleGet()+0xc4>
 8009b30:	4b23      	ldr	r3, [pc, #140]	; (8009bc0 <HttpDaemon::HandleGet()+0x140>)
 8009b32:	681b      	ldr	r3, [r3, #0]
 8009b34:	7bdb      	ldrb	r3, [r3, #15]
 8009b36:	b303      	cbz	r3, 8009b7a <HttpDaemon::HandleGet()+0xfa>
 8009b38:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b3c:	4813      	ldr	r0, [pc, #76]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009b3e:	f000 f9f1 	bl	8009f24 <remoteconfig::json_get_uptime(char*, unsigned short)>
 8009b42:	e7b0      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x26>
 8009b44:	4628      	mov	r0, r5
 8009b46:	491f      	ldr	r1, [pc, #124]	; (8009bc4 <HttpDaemon::HandleGet()+0x144>)
 8009b48:	f7ff fe3d 	bl	80097c6 <strcmp>
 8009b4c:	b928      	cbnz	r0, 8009b5a <HttpDaemon::HandleGet()+0xda>
 8009b4e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b52:	480e      	ldr	r0, [pc, #56]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009b54:	f000 f9f6 	bl	8009f44 <remoteconfig::json_get_display(char*, unsigned short)>
 8009b58:	e7a5      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x26>
 8009b5a:	4628      	mov	r0, r5
 8009b5c:	491a      	ldr	r1, [pc, #104]	; (8009bc8 <HttpDaemon::HandleGet()+0x148>)
 8009b5e:	f7ff fe32 	bl	80097c6 <strcmp>
 8009b62:	b928      	cbnz	r0, 8009b70 <HttpDaemon::HandleGet()+0xf0>
 8009b64:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b68:	4808      	ldr	r0, [pc, #32]	; (8009b8c <HttpDaemon::HandleGet()+0x10c>)
 8009b6a:	f000 f9fb 	bl	8009f64 <remoteconfig::json_get_directory(char*, unsigned short)>
 8009b6e:	e79a      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x26>
 8009b70:	4620      	mov	r0, r4
 8009b72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b76:	f7ff bf3f 	b.w	80099f8 <HttpDaemon::HandleGetTxt()>
 8009b7a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009b7e:	e796      	b.n	8009aae <HttpDaemon::HandleGet()+0x2e>
 8009b80:	080114ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip}
 8009b84:	080114c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, sl, ip}
 8009b88:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}
 8009b8c:	20000128 	andcs	r0, r0, r8, lsr #2
 8009b90:	080114c8 	stmdaeq	r1, {r3, r6, r7, sl, ip}
 8009b94:	080114d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, ip}
 8009b98:	080116fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, ip}
 8009b9c:	080114d4 	stmdaeq	r1, {r2, r4, r6, r7, sl, ip}
 8009ba0:	080114df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip}
 8009ba4:	080114e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sl, ip}
 8009ba8:	0801173a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, ip}
 8009bac:	080114f0 	stmdaeq	r1, {r4, r5, r6, r7, sl, ip}
 8009bb0:	0801171a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sl, ip}
 8009bb4:	080114e0 	stmdaeq	r1, {r5, r6, r7, sl, ip}
 8009bb8:	080114f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, ip}
 8009bbc:	080114fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, ip}
 8009bc0:	20000124 	andcs	r0, r0, r4, lsr #2
 8009bc4:	08011504 	stmdaeq	r1, {r2, r8, sl, ip}
 8009bc8:	0801150c 	stmdaeq	r1, {r2, r3, r8, sl, ip}

08009bcc <HttpDaemon::HandlePost(bool)>:
 8009bcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009bce:	4604      	mov	r4, r0
 8009bd0:	2900      	cmp	r1, #0
 8009bd2:	f040 808a 	bne.w	8009cea <HttpDaemon::HandlePost(bool)+0x11e>
 8009bd6:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009bda:	2b00      	cmp	r3, #0
 8009bdc:	d05a      	beq.n	8009c94 <HttpDaemon::HandlePost(bool)+0xc8>
 8009bde:	6845      	ldr	r5, [r0, #4]
 8009be0:	4944      	ldr	r1, [pc, #272]	; (8009cf4 <HttpDaemon::HandlePost(bool)+0x128>)
 8009be2:	4628      	mov	r0, r5
 8009be4:	f7ff fdef 	bl	80097c6 <strcmp>
 8009be8:	2800      	cmp	r0, #0
 8009bea:	bf0c      	ite	eq
 8009bec:	2301      	moveq	r3, #1
 8009bee:	2300      	movne	r3, #0
 8009bf0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 8009bf4:	d052      	beq.n	8009c9c <HttpDaemon::HandlePost(bool)+0xd0>
 8009bf6:	4628      	mov	r0, r5
 8009bf8:	493f      	ldr	r1, [pc, #252]	; (8009cf8 <HttpDaemon::HandlePost(bool)+0x12c>)
 8009bfa:	f7ff fde4 	bl	80097c6 <strcmp>
 8009bfe:	2800      	cmp	r0, #0
 8009c00:	d04c      	beq.n	8009c9c <HttpDaemon::HandlePost(bool)+0xd0>
 8009c02:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009c06:	e047      	b.n	8009c98 <HttpDaemon::HandlePost(bool)+0xcc>
 8009c08:	493c      	ldr	r1, [pc, #240]	; (8009cfc <HttpDaemon::HandlePost(bool)+0x130>)
 8009c0a:	68a0      	ldr	r0, [r4, #8]
 8009c0c:	f10d 0207 	add.w	r2, sp, #7
 8009c10:	f004 fcd4 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009c14:	b9d8      	cbnz	r0, 8009c4e <HttpDaemon::HandlePost(bool)+0x82>
 8009c16:	f89d 6007 	ldrb.w	r6, [sp, #7]
 8009c1a:	4b39      	ldr	r3, [pc, #228]	; (8009d00 <HttpDaemon::HandlePost(bool)+0x134>)
 8009c1c:	fab6 f186 	clz	r1, r6
 8009c20:	681d      	ldr	r5, [r3, #0]
 8009c22:	0949      	lsrs	r1, r1, #5
 8009c24:	69a8      	ldr	r0, [r5, #24]
 8009c26:	b138      	cbz	r0, 8009c38 <HttpDaemon::HandlePost(bool)+0x6c>
 8009c28:	6803      	ldr	r3, [r0, #0]
 8009c2a:	7429      	strb	r1, [r5, #16]
 8009c2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c2e:	4798      	blx	r3
 8009c30:	b116      	cbz	r6, 8009c38 <HttpDaemon::HandlePost(bool)+0x6c>
 8009c32:	4b34      	ldr	r3, [pc, #208]	; (8009d04 <HttpDaemon::HandlePost(bool)+0x138>)
 8009c34:	681b      	ldr	r3, [r3, #0]
 8009c36:	606b      	str	r3, [r5, #4]
 8009c38:	4b33      	ldr	r3, [pc, #204]	; (8009d08 <HttpDaemon::HandlePost(bool)+0x13c>)
 8009c3a:	f240 519f 	movw	r1, #1439	; 0x59f
 8009c3e:	4a33      	ldr	r2, [pc, #204]	; (8009d0c <HttpDaemon::HandlePost(bool)+0x140>)
 8009c40:	4833      	ldr	r0, [pc, #204]	; (8009d10 <HttpDaemon::HandlePost(bool)+0x144>)
 8009c42:	6023      	str	r3, [r4, #0]
 8009c44:	f7fe fe0a 	bl	800885c <snprintf>
 8009c48:	8460      	strh	r0, [r4, #34]	; 0x22
 8009c4a:	20c8      	movs	r0, #200	; 0xc8
 8009c4c:	e024      	b.n	8009c98 <HttpDaemon::HandlePost(bool)+0xcc>
 8009c4e:	4931      	ldr	r1, [pc, #196]	; (8009d14 <HttpDaemon::HandlePost(bool)+0x148>)
 8009c50:	68a0      	ldr	r0, [r4, #8]
 8009c52:	f10d 0207 	add.w	r2, sp, #7
 8009c56:	f004 fcb1 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009c5a:	b9d8      	cbnz	r0, 8009c94 <HttpDaemon::HandlePost(bool)+0xc8>
 8009c5c:	4b2e      	ldr	r3, [pc, #184]	; (8009d18 <HttpDaemon::HandlePost(bool)+0x14c>)
 8009c5e:	6818      	ldr	r0, [r3, #0]
 8009c60:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009c64:	b11b      	cbz	r3, 8009c6e <HttpDaemon::HandlePost(bool)+0xa2>
 8009c66:	2104      	movs	r1, #4
 8009c68:	f005 f844 	bl	800ecf4 <LedBlink::SetMode(ledblink::Mode)>
 8009c6c:	e7e4      	b.n	8009c38 <HttpDaemon::HandlePost(bool)+0x6c>
 8009c6e:	2102      	movs	r1, #2
 8009c70:	e7fa      	b.n	8009c68 <HttpDaemon::HandlePost(bool)+0x9c>
 8009c72:	4b2a      	ldr	r3, [pc, #168]	; (8009d1c <HttpDaemon::HandlePost(bool)+0x150>)
 8009c74:	2001      	movs	r0, #1
 8009c76:	781d      	ldrb	r5, [r3, #0]
 8009c78:	f7ff fdcc 	bl	8009814 <PropertiesConfig::EnableJSON(bool)>
 8009c7c:	4b28      	ldr	r3, [pc, #160]	; (8009d20 <HttpDaemon::HandlePost(bool)+0x154>)
 8009c7e:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 8009c80:	6818      	ldr	r0, [r3, #0]
 8009c82:	68a1      	ldr	r1, [r4, #8]
 8009c84:	f005 0501 	and.w	r5, r5, #1
 8009c88:	f7ff fa50 	bl	800912c <RemoteConfig::HandleSet(void*, unsigned int)>
 8009c8c:	4628      	mov	r0, r5
 8009c8e:	f7ff fdc1 	bl	8009814 <PropertiesConfig::EnableJSON(bool)>
 8009c92:	e7d1      	b.n	8009c38 <HttpDaemon::HandlePost(bool)+0x6c>
 8009c94:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009c98:	b002      	add	sp, #8
 8009c9a:	bd70      	pop	{r4, r5, r6, pc}
 8009c9c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8009c9e:	6962      	ldr	r2, [r4, #20]
 8009ca0:	429a      	cmp	r2, r3
 8009ca2:	dbd2      	blt.n	8009c4a <HttpDaemon::HandlePost(bool)+0x7e>
 8009ca4:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009ca6:	2b00      	cmp	r3, #0
 8009ca8:	d0cf      	beq.n	8009c4a <HttpDaemon::HandlePost(bool)+0x7e>
 8009caa:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	d0df      	beq.n	8009c72 <HttpDaemon::HandlePost(bool)+0xa6>
 8009cb2:	2201      	movs	r2, #1
 8009cb4:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8009cb6:	68a0      	ldr	r0, [r4, #8]
 8009cb8:	f004 fa7e 	bl	800e1b8 <properties::convert_json_file(char*, unsigned short, bool)>
 8009cbc:	2800      	cmp	r0, #0
 8009cbe:	dde9      	ble.n	8009c94 <HttpDaemon::HandlePost(bool)+0xc8>
 8009cc0:	4918      	ldr	r1, [pc, #96]	; (8009d24 <HttpDaemon::HandlePost(bool)+0x158>)
 8009cc2:	68a0      	ldr	r0, [r4, #8]
 8009cc4:	f10d 0207 	add.w	r2, sp, #7
 8009cc8:	f004 fc78 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ccc:	2800      	cmp	r0, #0
 8009cce:	d19b      	bne.n	8009c08 <HttpDaemon::HandlePost(bool)+0x3c>
 8009cd0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009cd4:	2b00      	cmp	r3, #0
 8009cd6:	d0af      	beq.n	8009c38 <HttpDaemon::HandlePost(bool)+0x6c>
 8009cd8:	4b11      	ldr	r3, [pc, #68]	; (8009d20 <HttpDaemon::HandlePost(bool)+0x154>)
 8009cda:	681b      	ldr	r3, [r3, #0]
 8009cdc:	7b9b      	ldrb	r3, [r3, #14]
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	d0d8      	beq.n	8009c94 <HttpDaemon::HandlePost(bool)+0xc8>
 8009ce2:	4b11      	ldr	r3, [pc, #68]	; (8009d28 <HttpDaemon::HandlePost(bool)+0x15c>)
 8009ce4:	6818      	ldr	r0, [r3, #0]
 8009ce6:	f005 f889 	bl	800edfc <Hardware::Reboot()>
 8009cea:	68c3      	ldr	r3, [r0, #12]
 8009cec:	6083      	str	r3, [r0, #8]
 8009cee:	6943      	ldr	r3, [r0, #20]
 8009cf0:	8483      	strh	r3, [r0, #36]	; 0x24
 8009cf2:	e7da      	b.n	8009caa <HttpDaemon::HandlePost(bool)+0xde>
 8009cf4:	08011516 	stmdaeq	r1, {r1, r2, r4, r8, sl, ip}
 8009cf8:	080114b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, ip}
 8009cfc:	08011504 	stmdaeq	r1, {r2, r8, sl, ip}
 8009d00:	20009ff0 	strdcs	r9, [r0], -r0
 8009d04:	2000a0f4 	strdcs	sl, [r0], -r4
 8009d08:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}
 8009d0c:	08011533 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, ip}
 8009d10:	20000128 	andcs	r0, r0, r8, lsr #2
 8009d14:	0801152a 	stmdaeq	r1, {r1, r3, r5, r8, sl, ip}
 8009d18:	2000a0dc 	ldrdcs	sl, [r0], -ip
 8009d1c:	20009fee 	andcs	r9, r0, lr, ror #31
 8009d20:	20000124 	andcs	r0, r0, r4, lsr #2
 8009d24:	08011523 	stmdaeq	r1, {r0, r1, r5, r8, sl, ip}
 8009d28:	2000a0e0 	andcs	sl, r0, r0, ror #1

08009d2c <HttpDaemon::Run()>:
 8009d2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d2e:	4e46      	ldr	r6, [pc, #280]	; (8009e48 <HttpDaemon::Run()+0x11c>)
 8009d30:	4604      	mov	r4, r0
 8009d32:	6901      	ldr	r1, [r0, #16]
 8009d34:	f100 020c 	add.w	r2, r0, #12
 8009d38:	6830      	ldr	r0, [r6, #0]
 8009d3a:	f003 fc86 	bl	800d64a <Network::TcpRead(int, unsigned char const**)>
 8009d3e:	6160      	str	r0, [r4, #20]
 8009d40:	2800      	cmp	r0, #0
 8009d42:	d05b      	beq.n	8009dfc <HttpDaemon::Run()+0xd0>
 8009d44:	69a3      	ldr	r3, [r4, #24]
 8009d46:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8009d4a:	d159      	bne.n	8009e00 <HttpDaemon::Run()+0xd4>
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	f7ff fe1d 	bl	800998c <HttpDaemon::ParseRequest()>
 8009d52:	28c8      	cmp	r0, #200	; 0xc8
 8009d54:	61a0      	str	r0, [r4, #24]
 8009d56:	d106      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009d58:	69e3      	ldr	r3, [r4, #28]
 8009d5a:	2b00      	cmp	r3, #0
 8009d5c:	d142      	bne.n	8009de4 <HttpDaemon::Run()+0xb8>
 8009d5e:	4620      	mov	r0, r4
 8009d60:	f7ff fe8e 	bl	8009a80 <HttpDaemon::HandleGet()>
 8009d64:	61a0      	str	r0, [r4, #24]
 8009d66:	69a3      	ldr	r3, [r4, #24]
 8009d68:	2bc8      	cmp	r3, #200	; 0xc8
 8009d6a:	d06b      	beq.n	8009e44 <HttpDaemon::Run()+0x118>
 8009d6c:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 8009d70:	d05e      	beq.n	8009e30 <HttpDaemon::Run()+0x104>
 8009d72:	dc4e      	bgt.n	8009e12 <HttpDaemon::Run()+0xe6>
 8009d74:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 8009d78:	d05c      	beq.n	8009e34 <HttpDaemon::Run()+0x108>
 8009d7a:	f240 129d 	movw	r2, #413	; 0x19d
 8009d7e:	4293      	cmp	r3, r2
 8009d80:	d05a      	beq.n	8009e38 <HttpDaemon::Run()+0x10c>
 8009d82:	4d32      	ldr	r5, [pc, #200]	; (8009e4c <HttpDaemon::Run()+0x120>)
 8009d84:	4a32      	ldr	r2, [pc, #200]	; (8009e50 <HttpDaemon::Run()+0x124>)
 8009d86:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8009d8a:	bf18      	it	ne
 8009d8c:	4615      	movne	r5, r2
 8009d8e:	4a31      	ldr	r2, [pc, #196]	; (8009e54 <HttpDaemon::Run()+0x128>)
 8009d90:	f240 519f 	movw	r1, #1439	; 0x59f
 8009d94:	6022      	str	r2, [r4, #0]
 8009d96:	e9cd 5500 	strd	r5, r5, [sp]
 8009d9a:	4a2f      	ldr	r2, [pc, #188]	; (8009e58 <HttpDaemon::Run()+0x12c>)
 8009d9c:	482f      	ldr	r0, [pc, #188]	; (8009e5c <HttpDaemon::Run()+0x130>)
 8009d9e:	f7fe fd5d 	bl	800885c <snprintf>
 8009da2:	8460      	strh	r0, [r4, #34]	; 0x22
 8009da4:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8009da6:	f240 519f 	movw	r1, #1439	; 0x59f
 8009daa:	9303      	str	r3, [sp, #12]
 8009dac:	6823      	ldr	r3, [r4, #0]
 8009dae:	4a2c      	ldr	r2, [pc, #176]	; (8009e60 <HttpDaemon::Run()+0x134>)
 8009db0:	9302      	str	r3, [sp, #8]
 8009db2:	4b2c      	ldr	r3, [pc, #176]	; (8009e64 <HttpDaemon::Run()+0x138>)
 8009db4:	68e0      	ldr	r0, [r4, #12]
 8009db6:	e9cd 5300 	strd	r5, r3, [sp]
 8009dba:	69a3      	ldr	r3, [r4, #24]
 8009dbc:	f7fe fd4e 	bl	800885c <snprintf>
 8009dc0:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8009dc4:	b283      	uxth	r3, r0
 8009dc6:	6830      	ldr	r0, [r6, #0]
 8009dc8:	f003 fc43 	bl	800d652 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009dcc:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8009dce:	4a23      	ldr	r2, [pc, #140]	; (8009e5c <HttpDaemon::Run()+0x130>)
 8009dd0:	6921      	ldr	r1, [r4, #16]
 8009dd2:	6830      	ldr	r0, [r6, #0]
 8009dd4:	f003 fc3d 	bl	800d652 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009dd8:	f44f 7202 	mov.w	r2, #520	; 0x208
 8009ddc:	2302      	movs	r3, #2
 8009dde:	e9c4 2306 	strd	r2, r3, [r4, #24]
 8009de2:	e00b      	b.n	8009dfc <HttpDaemon::Run()+0xd0>
 8009de4:	2b01      	cmp	r3, #1
 8009de6:	d1be      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009de8:	2100      	movs	r1, #0
 8009dea:	4620      	mov	r0, r4
 8009dec:	f7ff feee 	bl	8009bcc <HttpDaemon::HandlePost(bool)>
 8009df0:	28c8      	cmp	r0, #200	; 0xc8
 8009df2:	61a0      	str	r0, [r4, #24]
 8009df4:	d1b7      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009df6:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009df8:	2b00      	cmp	r3, #0
 8009dfa:	d1b4      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009dfc:	b004      	add	sp, #16
 8009dfe:	bd70      	pop	{r4, r5, r6, pc}
 8009e00:	2bc8      	cmp	r3, #200	; 0xc8
 8009e02:	d1b0      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009e04:	69e1      	ldr	r1, [r4, #28]
 8009e06:	2901      	cmp	r1, #1
 8009e08:	d1ad      	bne.n	8009d66 <HttpDaemon::Run()+0x3a>
 8009e0a:	4620      	mov	r0, r4
 8009e0c:	f7ff fede 	bl	8009bcc <HttpDaemon::HandlePost(bool)>
 8009e10:	e7a8      	b.n	8009d64 <HttpDaemon::Run()+0x38>
 8009e12:	f240 12f5 	movw	r2, #501	; 0x1f5
 8009e16:	4293      	cmp	r3, r2
 8009e18:	d010      	beq.n	8009e3c <HttpDaemon::Run()+0x110>
 8009e1a:	f240 12f9 	movw	r2, #505	; 0x1f9
 8009e1e:	4293      	cmp	r3, r2
 8009e20:	d00e      	beq.n	8009e40 <HttpDaemon::Run()+0x114>
 8009e22:	4d11      	ldr	r5, [pc, #68]	; (8009e68 <HttpDaemon::Run()+0x13c>)
 8009e24:	4a0a      	ldr	r2, [pc, #40]	; (8009e50 <HttpDaemon::Run()+0x124>)
 8009e26:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8009e2a:	bf18      	it	ne
 8009e2c:	4615      	movne	r5, r2
 8009e2e:	e7ae      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e30:	4d0e      	ldr	r5, [pc, #56]	; (8009e6c <HttpDaemon::Run()+0x140>)
 8009e32:	e7ac      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e34:	4d0e      	ldr	r5, [pc, #56]	; (8009e70 <HttpDaemon::Run()+0x144>)
 8009e36:	e7aa      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e38:	4d0e      	ldr	r5, [pc, #56]	; (8009e74 <HttpDaemon::Run()+0x148>)
 8009e3a:	e7a8      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e3c:	4d0e      	ldr	r5, [pc, #56]	; (8009e78 <HttpDaemon::Run()+0x14c>)
 8009e3e:	e7a6      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e40:	4d0e      	ldr	r5, [pc, #56]	; (8009e7c <HttpDaemon::Run()+0x150>)
 8009e42:	e7a4      	b.n	8009d8e <HttpDaemon::Run()+0x62>
 8009e44:	4d0e      	ldr	r5, [pc, #56]	; (8009e80 <HttpDaemon::Run()+0x154>)
 8009e46:	e7ad      	b.n	8009da4 <HttpDaemon::Run()+0x78>
 8009e48:	20009a20 	andcs	r9, r0, r0, lsr #20
 8009e4c:	0801158f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, sl, ip}
 8009e50:	08011616 	stmdaeq	r1, {r1, r2, r4, r9, sl, ip}
 8009e54:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}
 8009e58:	08011627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, ip}
 8009e5c:	20000128 	andcs	r0, r0, r8, lsr #2
 8009e60:	08011682 	stmdaeq	r1, {r1, r7, r9, sl, ip}
 8009e64:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 8009e68:	080115d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip}
 8009e6c:	080115be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip}
 8009e70:	0801159b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, ip}
 8009e74:	080115a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, ip}
 8009e78:	080115e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, ip}
 8009e7c:	08011600 	stmdaeq	r1, {r9, sl, ip}
 8009e80:	08011624 	stmdaeq	r1, {r2, r5, r9, sl, ip}

08009e84 <remoteconfig::json_get_list(char*, unsigned short)>:
 8009e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e88:	4b14      	ldr	r3, [pc, #80]	; (8009edc <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 8009e8a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8009ee0 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 8009e8e:	681b      	ldr	r3, [r3, #0]
 8009e90:	b088      	sub	sp, #32
 8009e92:	4605      	mov	r5, r0
 8009e94:	f8d8 0000 	ldr.w	r0, [r8]
 8009e98:	695c      	ldr	r4, [r3, #20]
 8009e9a:	460e      	mov	r6, r1
 8009e9c:	f7ff f83e 	bl	8008f1c <RemoteConfig::GetStringNode() const>
 8009ea0:	4607      	mov	r7, r0
 8009ea2:	f8d8 0000 	ldr.w	r0, [r8]
 8009ea6:	f7ff f845 	bl	8008f34 <RemoteConfig::GetStringOutput() const>
 8009eaa:	4b0e      	ldr	r3, [pc, #56]	; (8009ee4 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 8009eac:	4631      	mov	r1, r6
 8009eae:	7a1a      	ldrb	r2, [r3, #8]
 8009eb0:	3309      	adds	r3, #9
 8009eb2:	9303      	str	r3, [sp, #12]
 8009eb4:	0e23      	lsrs	r3, r4, #24
 8009eb6:	9302      	str	r3, [sp, #8]
 8009eb8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8009ebc:	9301      	str	r3, [sp, #4]
 8009ebe:	f3c4 2307 	ubfx	r3, r4, #8, #8
 8009ec2:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8009ec6:	9300      	str	r3, [sp, #0]
 8009ec8:	4628      	mov	r0, r5
 8009eca:	4a07      	ldr	r2, [pc, #28]	; (8009ee8 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 8009ecc:	9704      	str	r7, [sp, #16]
 8009ece:	b2e3      	uxtb	r3, r4
 8009ed0:	f7fe fcc4 	bl	800885c <snprintf>
 8009ed4:	b280      	uxth	r0, r0
 8009ed6:	b008      	add	sp, #32
 8009ed8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009edc:	20009a20 	andcs	r9, r0, r0, lsr #20
 8009ee0:	20000124 	andcs	r0, r0, r4, lsr #2
 8009ee4:	20000100 	andcs	r0, r0, r0, lsl #2
 8009ee8:	080117b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, ip}

08009eec <remoteconfig::json_get_version(char*, unsigned short)>:
 8009eec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009eee:	2208      	movs	r2, #8
 8009ef0:	4b09      	ldr	r3, [pc, #36]	; (8009f18 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 8009ef2:	9204      	str	r2, [sp, #16]
 8009ef4:	f1a3 020b 	sub.w	r2, r3, #11
 8009ef8:	9203      	str	r2, [sp, #12]
 8009efa:	220b      	movs	r2, #11
 8009efc:	9202      	str	r2, [sp, #8]
 8009efe:	4a07      	ldr	r2, [pc, #28]	; (8009f1c <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 8009f00:	9305      	str	r3, [sp, #20]
 8009f02:	3b0e      	subs	r3, #14
 8009f04:	9201      	str	r2, [sp, #4]
 8009f06:	9300      	str	r3, [sp, #0]
 8009f08:	4a05      	ldr	r2, [pc, #20]	; (8009f20 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 8009f0a:	2303      	movs	r3, #3
 8009f0c:	f7fe fca6 	bl	800885c <snprintf>
 8009f10:	b280      	uxth	r0, r0
 8009f12:	b007      	add	sp, #28
 8009f14:	f85d fb04 	ldr.w	pc, [sp], #4
 8009f18:	2000a08e 	andcs	sl, r0, lr, lsl #1
 8009f1c:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 8009f20:	08011813 	stmdaeq	r1, {r0, r1, r4, fp, ip}

08009f24 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 8009f24:	b508      	push	{r3, lr}
 8009f26:	4b05      	ldr	r3, [pc, #20]	; (8009f3c <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 8009f28:	681a      	ldr	r2, [r3, #0]
 8009f2a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009f2e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009f32:	4a03      	ldr	r2, [pc, #12]	; (8009f40 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 8009f34:	f7fe fc92 	bl	800885c <snprintf>
 8009f38:	b280      	uxth	r0, r0
 8009f3a:	bd08      	pop	{r3, pc}
 8009f3c:	2000a0f4 	strdcs	sl, [r0], -r4
 8009f40:	08011859 	stmdaeq	r1, {r0, r3, r4, r6, fp, ip}

08009f44 <remoteconfig::json_get_display(char*, unsigned short)>:
 8009f44:	b508      	push	{r3, lr}
 8009f46:	4b05      	ldr	r3, [pc, #20]	; (8009f5c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 8009f48:	4a05      	ldr	r2, [pc, #20]	; (8009f60 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 8009f4a:	681b      	ldr	r3, [r3, #0]
 8009f4c:	7c1b      	ldrb	r3, [r3, #16]
 8009f4e:	f083 0301 	eor.w	r3, r3, #1
 8009f52:	f7fe fc83 	bl	800885c <snprintf>
 8009f56:	b280      	uxth	r0, r0
 8009f58:	bd08      	pop	{r3, pc}
 8009f5a:	bf00      	nop
 8009f5c:	20009ff0 	strdcs	r9, [r0], -r0
 8009f60:	08011868 	stmdaeq	r1, {r3, r5, r6, fp, ip}

08009f64 <remoteconfig::json_get_directory(char*, unsigned short)>:
 8009f64:	b508      	push	{r3, lr}
 8009f66:	4a02      	ldr	r2, [pc, #8]	; (8009f70 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 8009f68:	f7fe fc78 	bl	800885c <snprintf>
 8009f6c:	b280      	uxth	r0, r0
 8009f6e:	bd08      	pop	{r3, pc}
 8009f70:	08011877 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, fp, ip}

08009f74 <get_file_content(char const*, char*)>:
 8009f74:	2300      	movs	r3, #0
 8009f76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f78:	4a10      	ldr	r2, [pc, #64]	; (8009fbc <get_file_content(char const*, char*)+0x48>)
 8009f7a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009f7e:	1e46      	subs	r6, r0, #1
 8009f80:	3c01      	subs	r4, #1
 8009f82:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8009f86:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8009f8a:	42bd      	cmp	r5, r7
 8009f8c:	d005      	beq.n	8009f9a <get_file_content(char const*, char*)+0x26>
 8009f8e:	3301      	adds	r3, #1
 8009f90:	2b03      	cmp	r3, #3
 8009f92:	d1f2      	bne.n	8009f7a <get_file_content(char const*, char*)+0x6>
 8009f94:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009f98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f9a:	2d00      	cmp	r5, #0
 8009f9c:	d1f1      	bne.n	8009f82 <get_file_content(char const*, char*)+0xe>
 8009f9e:	4608      	mov	r0, r1
 8009fa0:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8009fa4:	6853      	ldr	r3, [r2, #4]
 8009fa6:	3b01      	subs	r3, #1
 8009fa8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009fac:	f800 2b01 	strb.w	r2, [r0], #1
 8009fb0:	2a00      	cmp	r2, #0
 8009fb2:	d1f9      	bne.n	8009fa8 <get_file_content(char const*, char*)+0x34>
 8009fb4:	1a40      	subs	r0, r0, r1
 8009fb6:	3801      	subs	r0, #1
 8009fb8:	e7ee      	b.n	8009f98 <get_file_content(char const*, char*)+0x24>
 8009fba:	bf00      	nop
 8009fbc:	08011b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip}

08009fc0 <strlen>:
 8009fc0:	4603      	mov	r3, r0
 8009fc2:	461a      	mov	r2, r3
 8009fc4:	7811      	ldrb	r1, [r2, #0]
 8009fc6:	3301      	adds	r3, #1
 8009fc8:	2900      	cmp	r1, #0
 8009fca:	d1fa      	bne.n	8009fc2 <strlen+0x2>
 8009fcc:	1a10      	subs	r0, r2, r0
 8009fce:	4770      	bx	lr

08009fd0 <strncpy.isra.0>:
 8009fd0:	3901      	subs	r1, #1
 8009fd2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009fd6:	b92b      	cbnz	r3, 8009fe4 <strncpy.isra.0+0x14>
 8009fd8:	4402      	add	r2, r0
 8009fda:	4290      	cmp	r0, r2
 8009fdc:	d006      	beq.n	8009fec <strncpy.isra.0+0x1c>
 8009fde:	f800 3b01 	strb.w	r3, [r0], #1
 8009fe2:	e7fa      	b.n	8009fda <strncpy.isra.0+0xa>
 8009fe4:	3a01      	subs	r2, #1
 8009fe6:	f800 3b01 	strb.w	r3, [r0], #1
 8009fea:	d1f2      	bne.n	8009fd2 <strncpy.isra.0+0x2>
 8009fec:	4770      	bx	lr

08009fee <strcpy.isra.0>:
 8009fee:	3801      	subs	r0, #1
 8009ff0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009ff4:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009ff8:	2b00      	cmp	r3, #0
 8009ffa:	d1f9      	bne.n	8009ff0 <strcpy.isra.0+0x2>
 8009ffc:	4770      	bx	lr
	...

0800a000 <OscServer::OscServer()>:
 800a000:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a004:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a006:	4a24      	ldr	r2, [pc, #144]	; (800a098 <OscServer::OscServer()+0x98>)
 800a008:	4604      	mov	r4, r0
 800a00a:	e9c0 2300 	strd	r2, r3, [r0]
 800a00e:	2300      	movs	r3, #0
 800a010:	2581      	movs	r5, #129	; 0x81
 800a012:	4a22      	ldr	r2, [pc, #136]	; (800a09c <OscServer::OscServer()+0x9c>)
 800a014:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800a018:	6010      	str	r0, [r2, #0]
 800a01a:	4a21      	ldr	r2, [pc, #132]	; (800a0a0 <OscServer::OscServer()+0xa0>)
 800a01c:	6083      	str	r3, [r0, #8]
 800a01e:	7303      	strb	r3, [r0, #12]
 800a020:	3d01      	subs	r5, #1
 800a022:	d12c      	bne.n	800a07e <OscServer::OscServer()+0x7e>
 800a024:	2281      	movs	r2, #129	; 0x81
 800a026:	491f      	ldr	r1, [pc, #124]	; (800a0a4 <OscServer::OscServer()+0xa4>)
 800a028:	481d      	ldr	r0, [pc, #116]	; (800a0a0 <OscServer::OscServer()+0xa0>)
 800a02a:	f7ff ffe0 	bl	8009fee <strcpy.isra.0>
 800a02e:	4b1e      	ldr	r3, [pc, #120]	; (800a0a8 <OscServer::OscServer()+0xa8>)
 800a030:	3a01      	subs	r2, #1
 800a032:	d127      	bne.n	800a084 <OscServer::OscServer()+0x84>
 800a034:	491d      	ldr	r1, [pc, #116]	; (800a0ac <OscServer::OscServer()+0xac>)
 800a036:	481c      	ldr	r0, [pc, #112]	; (800a0a8 <OscServer::OscServer()+0xa8>)
 800a038:	f7ff ffd9 	bl	8009fee <strcpy.isra.0>
 800a03c:	2380      	movs	r3, #128	; 0x80
 800a03e:	491c      	ldr	r1, [pc, #112]	; (800a0b0 <OscServer::OscServer()+0xb0>)
 800a040:	3b01      	subs	r3, #1
 800a042:	d222      	bcs.n	800a08a <OscServer::OscServer()+0x8a>
 800a044:	491b      	ldr	r1, [pc, #108]	; (800a0b4 <OscServer::OscServer()+0xb4>)
 800a046:	481a      	ldr	r0, [pc, #104]	; (800a0b0 <OscServer::OscServer()+0xb0>)
 800a048:	f7ff ffd1 	bl	8009fee <strcpy.isra.0>
 800a04c:	2380      	movs	r3, #128	; 0x80
 800a04e:	2100      	movs	r1, #0
 800a050:	4a19      	ldr	r2, [pc, #100]	; (800a0b8 <OscServer::OscServer()+0xb8>)
 800a052:	3b01      	subs	r3, #1
 800a054:	d21c      	bcs.n	800a090 <OscServer::OscServer()+0x90>
 800a056:	4919      	ldr	r1, [pc, #100]	; (800a0bc <OscServer::OscServer()+0xbc>)
 800a058:	4817      	ldr	r0, [pc, #92]	; (800a0b8 <OscServer::OscServer()+0xb8>)
 800a05a:	f7ff ffc8 	bl	8009fee <strcpy.isra.0>
 800a05e:	4b18      	ldr	r3, [pc, #96]	; (800a0c0 <OscServer::OscServer()+0xc0>)
 800a060:	211f      	movs	r1, #31
 800a062:	9300      	str	r3, [sp, #0]
 800a064:	4a17      	ldr	r2, [pc, #92]	; (800a0c4 <OscServer::OscServer()+0xc4>)
 800a066:	4b18      	ldr	r3, [pc, #96]	; (800a0c8 <OscServer::OscServer()+0xc8>)
 800a068:	f104 000d 	add.w	r0, r4, #13
 800a06c:	f7fe fbf6 	bl	800885c <snprintf>
 800a070:	4620      	mov	r0, r4
 800a072:	4b16      	ldr	r3, [pc, #88]	; (800a0cc <OscServer::OscServer()+0xcc>)
 800a074:	63a3      	str	r3, [r4, #56]	; 0x38
 800a076:	4b16      	ldr	r3, [pc, #88]	; (800a0d0 <OscServer::OscServer()+0xd0>)
 800a078:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a07a:	b003      	add	sp, #12
 800a07c:	bd30      	pop	{r4, r5, pc}
 800a07e:	f802 3b01 	strb.w	r3, [r2], #1
 800a082:	e7cd      	b.n	800a020 <OscServer::OscServer()+0x20>
 800a084:	f803 5b01 	strb.w	r5, [r3], #1
 800a088:	e7d2      	b.n	800a030 <OscServer::OscServer()+0x30>
 800a08a:	f801 2b01 	strb.w	r2, [r1], #1
 800a08e:	e7d7      	b.n	800a040 <OscServer::OscServer()+0x40>
 800a090:	f802 1b01 	strb.w	r1, [r2], #1
 800a094:	e7dd      	b.n	800a052 <OscServer::OscServer()+0x52>
 800a096:	bf00      	nop
 800a098:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 800a09c:	20000acc 	andcs	r0, r0, ip, asr #21
 800a0a0:	2000084c 	andcs	r0, r0, ip, asr #16
 800a0a4:	080120de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sp}
 800a0a8:	2000074c 	andcs	r0, r0, ip, asr #14
 800a0ac:	080120e4 	stmdaeq	r1, {r2, r5, r6, r7, sp}
 800a0b0:	200006c8 	andcs	r0, r0, r8, asr #13
 800a0b4:	080120ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sp}
 800a0b8:	200007cc 	andcs	r0, r0, ip, asr #15
 800a0bc:	080120ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sp}
 800a0c0:	08010fd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sl, fp}
 800a0c4:	08012102 	stmdaeq	r1, {r1, r8, sp}
 800a0c8:	080120fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sp}
 800a0cc:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 800a0d0:	0801210b 	stmdaeq	r1, {r0, r1, r3, r8, sp}

0800a0d4 <OscServer::Start()>:
 800a0d4:	b530      	push	{r4, r5, lr}
 800a0d6:	4d0e      	ldr	r5, [pc, #56]	; (800a110 <OscServer::Start()+0x3c>)
 800a0d8:	b085      	sub	sp, #20
 800a0da:	4604      	mov	r4, r0
 800a0dc:	8801      	ldrh	r1, [r0, #0]
 800a0de:	6828      	ldr	r0, [r5, #0]
 800a0e0:	f003 f8c8 	bl	800d274 <Network::Begin(unsigned short)>
 800a0e4:	682b      	ldr	r3, [r5, #0]
 800a0e6:	6060      	str	r0, [r4, #4]
 800a0e8:	695a      	ldr	r2, [r3, #20]
 800a0ea:	4601      	mov	r1, r0
 800a0ec:	69d8      	ldr	r0, [r3, #28]
 800a0ee:	2300      	movs	r3, #0
 800a0f0:	9301      	str	r3, [sp, #4]
 800a0f2:	4b08      	ldr	r3, [pc, #32]	; (800a114 <OscServer::Start()+0x40>)
 800a0f4:	ea62 0200 	orn	r2, r2, r0
 800a0f8:	9300      	str	r3, [sp, #0]
 800a0fa:	a803      	add	r0, sp, #12
 800a0fc:	8823      	ldrh	r3, [r4, #0]
 800a0fe:	f000 fd95 	bl	800ac2c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800a102:	4b05      	ldr	r3, [pc, #20]	; (800a118 <OscServer::Start()+0x44>)
 800a104:	2102      	movs	r1, #2
 800a106:	6818      	ldr	r0, [r3, #0]
 800a108:	f004 fdf4 	bl	800ecf4 <LedBlink::SetMode(ledblink::Mode)>
 800a10c:	b005      	add	sp, #20
 800a10e:	bd30      	pop	{r4, r5, pc}
 800a110:	20009a20 	andcs	r9, r0, r0, lsr #20
 800a114:	08012111 	stmdaeq	r1, {r0, r4, r8, sp}
 800a118:	2000a0dc 	ldrdcs	sl, [r0], -ip

0800a11c <OscServer::SetPath(char const*)>:
 800a11c:	b510      	push	{r4, lr}
 800a11e:	780b      	ldrb	r3, [r1, #0]
 800a120:	2b2f      	cmp	r3, #47	; 0x2f
 800a122:	d11c      	bne.n	800a15e <OscServer::SetPath(char const*)+0x42>
 800a124:	4c0e      	ldr	r4, [pc, #56]	; (800a160 <OscServer::SetPath(char const*)+0x44>)
 800a126:	227d      	movs	r2, #125	; 0x7d
 800a128:	4620      	mov	r0, r4
 800a12a:	f7ff ff51 	bl	8009fd0 <strncpy.isra.0>
 800a12e:	4620      	mov	r0, r4
 800a130:	f7ff ff46 	bl	8009fc0 <strlen>
 800a134:	3801      	subs	r0, #1
 800a136:	5c23      	ldrb	r3, [r4, r0]
 800a138:	4909      	ldr	r1, [pc, #36]	; (800a160 <OscServer::SetPath(char const*)+0x44>)
 800a13a:	2b2f      	cmp	r3, #47	; 0x2f
 800a13c:	bf04      	itt	eq
 800a13e:	2300      	moveq	r3, #0
 800a140:	5423      	strbeq	r3, [r4, r0]
 800a142:	4c08      	ldr	r4, [pc, #32]	; (800a164 <OscServer::SetPath(char const*)+0x48>)
 800a144:	4620      	mov	r0, r4
 800a146:	f7ff ff52 	bl	8009fee <strcpy.isra.0>
 800a14a:	4620      	mov	r0, r4
 800a14c:	f7ff ff38 	bl	8009fc0 <strlen>
 800a150:	232f      	movs	r3, #47	; 0x2f
 800a152:	5423      	strb	r3, [r4, r0]
 800a154:	232a      	movs	r3, #42	; 0x2a
 800a156:	4404      	add	r4, r0
 800a158:	7063      	strb	r3, [r4, #1]
 800a15a:	2300      	movs	r3, #0
 800a15c:	70a3      	strb	r3, [r4, #2]
 800a15e:	bd10      	pop	{r4, pc}
 800a160:	2000084c 	andcs	r0, r0, ip, asr #16
 800a164:	2000074c 	andcs	r0, r0, ip, asr #14

0800a168 <OscServer::SetPathInfo(char const*)>:
 800a168:	780b      	ldrb	r3, [r1, #0]
 800a16a:	b510      	push	{r4, lr}
 800a16c:	2b2f      	cmp	r3, #47	; 0x2f
 800a16e:	d10d      	bne.n	800a18c <OscServer::SetPathInfo(char const*)+0x24>
 800a170:	4c07      	ldr	r4, [pc, #28]	; (800a190 <OscServer::SetPathInfo(char const*)+0x28>)
 800a172:	227f      	movs	r2, #127	; 0x7f
 800a174:	4620      	mov	r0, r4
 800a176:	f7ff ff2b 	bl	8009fd0 <strncpy.isra.0>
 800a17a:	4620      	mov	r0, r4
 800a17c:	f7ff ff20 	bl	8009fc0 <strlen>
 800a180:	3801      	subs	r0, #1
 800a182:	5c23      	ldrb	r3, [r4, r0]
 800a184:	2b2f      	cmp	r3, #47	; 0x2f
 800a186:	bf04      	itt	eq
 800a188:	2300      	moveq	r3, #0
 800a18a:	5423      	strbeq	r3, [r4, r0]
 800a18c:	bd10      	pop	{r4, pc}
 800a18e:	bf00      	nop
 800a190:	200006c8 	andcs	r0, r0, r8, asr #13

0800a194 <OscServer::SetPathBlackOut(char const*)>:
 800a194:	780b      	ldrb	r3, [r1, #0]
 800a196:	b510      	push	{r4, lr}
 800a198:	2b2f      	cmp	r3, #47	; 0x2f
 800a19a:	d10d      	bne.n	800a1b8 <OscServer::SetPathBlackOut(char const*)+0x24>
 800a19c:	4c07      	ldr	r4, [pc, #28]	; (800a1bc <OscServer::SetPathBlackOut(char const*)+0x28>)
 800a19e:	227f      	movs	r2, #127	; 0x7f
 800a1a0:	4620      	mov	r0, r4
 800a1a2:	f7ff ff15 	bl	8009fd0 <strncpy.isra.0>
 800a1a6:	4620      	mov	r0, r4
 800a1a8:	f7ff ff0a 	bl	8009fc0 <strlen>
 800a1ac:	3801      	subs	r0, #1
 800a1ae:	5c23      	ldrb	r3, [r4, r0]
 800a1b0:	2b2f      	cmp	r3, #47	; 0x2f
 800a1b2:	bf04      	itt	eq
 800a1b4:	2300      	moveq	r3, #0
 800a1b6:	5423      	strbeq	r3, [r4, r0]
 800a1b8:	bd10      	pop	{r4, pc}
 800a1ba:	bf00      	nop
 800a1bc:	200007cc 	andcs	r0, r0, ip, asr #15

0800a1c0 <OscServer::GetChannel(char const*)>:
 800a1c0:	b538      	push	{r3, r4, r5, lr}
 800a1c2:	480f      	ldr	r0, [pc, #60]	; (800a200 <OscServer::GetChannel(char const*)+0x40>)
 800a1c4:	460c      	mov	r4, r1
 800a1c6:	f7ff fefb 	bl	8009fc0 <strlen>
 800a1ca:	1822      	adds	r2, r4, r0
 800a1cc:	4614      	mov	r4, r2
 800a1ce:	2000      	movs	r0, #0
 800a1d0:	210a      	movs	r1, #10
 800a1d2:	3403      	adds	r4, #3
 800a1d4:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a1d8:	b14b      	cbz	r3, 800a1ee <OscServer::GetChannel(char const*)+0x2e>
 800a1da:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 800a1de:	2d09      	cmp	r5, #9
 800a1e0:	d80b      	bhi.n	800a1fa <OscServer::GetChannel(char const*)+0x3a>
 800a1e2:	fb01 3000 	mla	r0, r1, r0, r3
 800a1e6:	4294      	cmp	r4, r2
 800a1e8:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800a1ec:	d1f2      	bne.n	800a1d4 <OscServer::GetChannel(char const*)+0x14>
 800a1ee:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800a1f2:	bfc8      	it	gt
 800a1f4:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 800a1f8:	bd38      	pop	{r3, r4, r5, pc}
 800a1fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a1fe:	e7fb      	b.n	800a1f8 <OscServer::GetChannel(char const*)+0x38>
 800a200:	2000084c 	andcs	r0, r0, ip, asr #16

0800a204 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 800a204:	2000      	movs	r0, #0
 800a206:	b570      	push	{r4, r5, r6, lr}
 800a208:	3a01      	subs	r2, #1
 800a20a:	4c09      	ldr	r4, [pc, #36]	; (800a230 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800a20c:	b292      	uxth	r2, r2
 800a20e:	4414      	add	r4, r2
 800a210:	4413      	add	r3, r2
 800a212:	3901      	subs	r1, #1
 800a214:	429a      	cmp	r2, r3
 800a216:	d300      	bcc.n	800a21a <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x16>
 800a218:	bd70      	pop	{r4, r5, r6, pc}
 800a21a:	7826      	ldrb	r6, [r4, #0]
 800a21c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800a220:	3201      	adds	r2, #1
 800a222:	42ae      	cmp	r6, r5
 800a224:	bf1c      	itt	ne
 800a226:	7025      	strbne	r5, [r4, #0]
 800a228:	2001      	movne	r0, #1
 800a22a:	3401      	adds	r4, #1
 800a22c:	b292      	uxth	r2, r2
 800a22e:	e7f1      	b.n	800a214 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800a230:	200008cc 	andcs	r0, r0, ip, asr #17

0800a234 <OscServer::Run()>:
 800a234:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a236:	4d98      	ldr	r5, [pc, #608]	; (800a498 <OscServer::Run()+0x264>)
 800a238:	b097      	sub	sp, #92	; 0x5c
 800a23a:	4604      	mov	r4, r0
 800a23c:	4629      	mov	r1, r5
 800a23e:	7900      	ldrb	r0, [r0, #4]
 800a240:	f10d 031a 	add.w	r3, sp, #26
 800a244:	aa07      	add	r2, sp, #28
 800a246:	f002 fb27 	bl	800c898 <udp_recv2>
 800a24a:	4606      	mov	r6, r0
 800a24c:	b1a8      	cbz	r0, 800a27a <OscServer::Run()+0x46>
 800a24e:	4602      	mov	r2, r0
 800a250:	6829      	ldr	r1, [r5, #0]
 800a252:	a808      	add	r0, sp, #32
 800a254:	f000 fc4d 	bl	800aaf2 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800a258:	4990      	ldr	r1, [pc, #576]	; (800a49c <OscServer::Run()+0x268>)
 800a25a:	6828      	ldr	r0, [r5, #0]
 800a25c:	f000 fb72 	bl	800a944 <lo_pattern_match>
 800a260:	4607      	mov	r7, r0
 800a262:	2800      	cmp	r0, #0
 800a264:	d075      	beq.n	800a352 <OscServer::Run()+0x11e>
 800a266:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800a26a:	b133      	cbz	r3, 800a27a <OscServer::Run()+0x46>
 800a26c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800a26e:	2e01      	cmp	r6, #1
 800a270:	d105      	bne.n	800a27e <OscServer::Run()+0x4a>
 800a272:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a274:	781b      	ldrb	r3, [r3, #0]
 800a276:	2b62      	cmp	r3, #98	; 0x62
 800a278:	d03e      	beq.n	800a2f8 <OscServer::Run()+0xc4>
 800a27a:	b017      	add	sp, #92	; 0x5c
 800a27c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a27e:	2e02      	cmp	r6, #2
 800a280:	d1fb      	bne.n	800a27a <OscServer::Run()+0x46>
 800a282:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a284:	781b      	ldrb	r3, [r3, #0]
 800a286:	2b69      	cmp	r3, #105	; 0x69
 800a288:	d1f7      	bne.n	800a27a <OscServer::Run()+0x46>
 800a28a:	2100      	movs	r1, #0
 800a28c:	a808      	add	r0, sp, #32
 800a28e:	f000 fc80 	bl	800ab92 <OscSimpleMessage::GetInt(unsigned int)>
 800a292:	b285      	uxth	r5, r0
 800a294:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a298:	d2ef      	bcs.n	800a27a <OscServer::Run()+0x46>
 800a29a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a29c:	2b01      	cmp	r3, #1
 800a29e:	d9ec      	bls.n	800a27a <OscServer::Run()+0x46>
 800a2a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a2a2:	785b      	ldrb	r3, [r3, #1]
 800a2a4:	2b69      	cmp	r3, #105	; 0x69
 800a2a6:	d148      	bne.n	800a33a <OscServer::Run()+0x106>
 800a2a8:	2101      	movs	r1, #1
 800a2aa:	a808      	add	r0, sp, #32
 800a2ac:	f000 fc71 	bl	800ab92 <OscSimpleMessage::GetInt(unsigned int)>
 800a2b0:	3501      	adds	r5, #1
 800a2b2:	b2c0      	uxtb	r0, r0
 800a2b4:	b2ad      	uxth	r5, r5
 800a2b6:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 800a2ba:	2301      	movs	r3, #1
 800a2bc:	462a      	mov	r2, r5
 800a2be:	4620      	mov	r0, r4
 800a2c0:	a90f      	add	r1, sp, #60	; 0x3c
 800a2c2:	f7ff ff9f 	bl	800a204 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800a2c6:	b910      	cbnz	r0, 800a2ce <OscServer::Run()+0x9a>
 800a2c8:	7ae3      	ldrb	r3, [r4, #11]
 800a2ca:	2b00      	cmp	r3, #0
 800a2cc:	d0d5      	beq.n	800a27a <OscServer::Run()+0x46>
 800a2ce:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a2d0:	7aa1      	ldrb	r1, [r4, #10]
 800a2d2:	6803      	ldr	r3, [r0, #0]
 800a2d4:	691e      	ldr	r6, [r3, #16]
 800a2d6:	2900      	cmp	r1, #0
 800a2d8:	f040 80a3 	bne.w	800a422 <OscServer::Run()+0x1ee>
 800a2dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2e0:	4a6f      	ldr	r2, [pc, #444]	; (800a4a0 <OscServer::Run()+0x26c>)
 800a2e2:	47b0      	blx	r6
 800a2e4:	7b21      	ldrb	r1, [r4, #12]
 800a2e6:	2900      	cmp	r1, #0
 800a2e8:	d1c7      	bne.n	800a27a <OscServer::Run()+0x46>
 800a2ea:	2301      	movs	r3, #1
 800a2ec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a2ee:	7323      	strb	r3, [r4, #12]
 800a2f0:	6803      	ldr	r3, [r0, #0]
 800a2f2:	689b      	ldr	r3, [r3, #8]
 800a2f4:	4798      	blx	r3
 800a2f6:	e7c0      	b.n	800a27a <OscServer::Run()+0x46>
 800a2f8:	2200      	movs	r2, #0
 800a2fa:	a908      	add	r1, sp, #32
 800a2fc:	a80f      	add	r0, sp, #60	; 0x3c
 800a2fe:	f000 fc5c 	bl	800abba <OscSimpleMessage::GetBlob(unsigned int)>
 800a302:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a304:	b29d      	uxth	r5, r3
 800a306:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a30a:	d8b6      	bhi.n	800a27a <OscServer::Run()+0x46>
 800a30c:	462b      	mov	r3, r5
 800a30e:	4632      	mov	r2, r6
 800a310:	4620      	mov	r0, r4
 800a312:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a314:	f7ff ff76 	bl	800a204 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800a318:	b910      	cbnz	r0, 800a320 <OscServer::Run()+0xec>
 800a31a:	7ae3      	ldrb	r3, [r4, #11]
 800a31c:	2b00      	cmp	r3, #0
 800a31e:	d0ac      	beq.n	800a27a <OscServer::Run()+0x46>
 800a320:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a322:	6803      	ldr	r3, [r0, #0]
 800a324:	691e      	ldr	r6, [r3, #16]
 800a326:	7aa3      	ldrb	r3, [r4, #10]
 800a328:	b113      	cbz	r3, 800a330 <OscServer::Run()+0xfc>
 800a32a:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a32e:	d178      	bne.n	800a422 <OscServer::Run()+0x1ee>
 800a330:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a334:	2100      	movs	r1, #0
 800a336:	4a5a      	ldr	r2, [pc, #360]	; (800a4a0 <OscServer::Run()+0x26c>)
 800a338:	e7d3      	b.n	800a2e2 <OscServer::Run()+0xae>
 800a33a:	2b66      	cmp	r3, #102	; 0x66
 800a33c:	d19d      	bne.n	800a27a <OscServer::Run()+0x46>
 800a33e:	2101      	movs	r1, #1
 800a340:	a808      	add	r0, sp, #32
 800a342:	f000 fc12 	bl	800ab6a <OscSimpleMessage::GetFloat(unsigned int)>
 800a346:	4957      	ldr	r1, [pc, #348]	; (800a4a4 <OscServer::Run()+0x270>)
 800a348:	f7fd fbe6 	bl	8007b18 <__aeabi_fmul>
 800a34c:	f7fd fd0e 	bl	8007d6c <__aeabi_f2uiz>
 800a350:	e7ae      	b.n	800a2b0 <OscServer::Run()+0x7c>
 800a352:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a354:	6828      	ldr	r0, [r5, #0]
 800a356:	b9b3      	cbnz	r3, 800a386 <OscServer::Run()+0x152>
 800a358:	4953      	ldr	r1, [pc, #332]	; (800a4a8 <OscServer::Run()+0x274>)
 800a35a:	6828      	ldr	r0, [r5, #0]
 800a35c:	f000 faf2 	bl	800a944 <lo_pattern_match>
 800a360:	4606      	mov	r6, r0
 800a362:	2800      	cmp	r0, #0
 800a364:	d133      	bne.n	800a3ce <OscServer::Run()+0x19a>
 800a366:	4951      	ldr	r1, [pc, #324]	; (800a4ac <OscServer::Run()+0x278>)
 800a368:	6828      	ldr	r0, [r5, #0]
 800a36a:	f000 faeb 	bl	800a944 <lo_pattern_match>
 800a36e:	2800      	cmp	r0, #0
 800a370:	d05d      	beq.n	800a42e <OscServer::Run()+0x1fa>
 800a372:	4b4f      	ldr	r3, [pc, #316]	; (800a4b0 <OscServer::Run()+0x27c>)
 800a374:	9a07      	ldr	r2, [sp, #28]
 800a376:	9300      	str	r3, [sp, #0]
 800a378:	6861      	ldr	r1, [r4, #4]
 800a37a:	8863      	ldrh	r3, [r4, #2]
 800a37c:	9601      	str	r6, [sp, #4]
 800a37e:	a80f      	add	r0, sp, #60	; 0x3c
 800a380:	f000 fc54 	bl	800ac2c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800a384:	e779      	b.n	800a27a <OscServer::Run()+0x46>
 800a386:	494b      	ldr	r1, [pc, #300]	; (800a4b4 <OscServer::Run()+0x280>)
 800a388:	f000 fadc 	bl	800a944 <lo_pattern_match>
 800a38c:	2800      	cmp	r0, #0
 800a38e:	d0e3      	beq.n	800a358 <OscServer::Run()+0x124>
 800a390:	4632      	mov	r2, r6
 800a392:	6829      	ldr	r1, [r5, #0]
 800a394:	a80f      	add	r0, sp, #60	; 0x3c
 800a396:	f000 fbac 	bl	800aaf2 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800a39a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	f43f af6c 	beq.w	800a27a <OscServer::Run()+0x46>
 800a3a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a3a4:	781b      	ldrb	r3, [r3, #0]
 800a3a6:	2b66      	cmp	r3, #102	; 0x66
 800a3a8:	f47f af67 	bne.w	800a27a <OscServer::Run()+0x46>
 800a3ac:	4639      	mov	r1, r7
 800a3ae:	a80f      	add	r0, sp, #60	; 0x3c
 800a3b0:	f000 fbdb 	bl	800ab6a <OscSimpleMessage::GetFloat(unsigned int)>
 800a3b4:	2100      	movs	r1, #0
 800a3b6:	f7fd fca7 	bl	8007d08 <__aeabi_fcmpeq>
 800a3ba:	4603      	mov	r3, r0
 800a3bc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a3be:	b91b      	cbnz	r3, 800a3c8 <OscServer::Run()+0x194>
 800a3c0:	6803      	ldr	r3, [r0, #0]
 800a3c2:	689b      	ldr	r3, [r3, #8]
 800a3c4:	4798      	blx	r3
 800a3c6:	e758      	b.n	800a27a <OscServer::Run()+0x46>
 800a3c8:	6803      	ldr	r3, [r0, #0]
 800a3ca:	68db      	ldr	r3, [r3, #12]
 800a3cc:	e7fa      	b.n	800a3c4 <OscServer::Run()+0x190>
 800a3ce:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800a3d2:	2b00      	cmp	r3, #0
 800a3d4:	f43f af51 	beq.w	800a27a <OscServer::Run()+0x46>
 800a3d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a3da:	2b01      	cmp	r3, #1
 800a3dc:	f47f af4d 	bne.w	800a27a <OscServer::Run()+0x46>
 800a3e0:	6829      	ldr	r1, [r5, #0]
 800a3e2:	4620      	mov	r0, r4
 800a3e4:	f7ff feec 	bl	800a1c0 <OscServer::GetChannel(char const*)>
 800a3e8:	b285      	uxth	r5, r0
 800a3ea:	1e6b      	subs	r3, r5, #1
 800a3ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a3f0:	f4bf af43 	bcs.w	800a27a <OscServer::Run()+0x46>
 800a3f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a3f6:	781b      	ldrb	r3, [r3, #0]
 800a3f8:	2b69      	cmp	r3, #105	; 0x69
 800a3fa:	d105      	bne.n	800a408 <OscServer::Run()+0x1d4>
 800a3fc:	2100      	movs	r1, #0
 800a3fe:	a808      	add	r0, sp, #32
 800a400:	f000 fbc7 	bl	800ab92 <OscSimpleMessage::GetInt(unsigned int)>
 800a404:	b2c0      	uxtb	r0, r0
 800a406:	e756      	b.n	800a2b6 <OscServer::Run()+0x82>
 800a408:	2b66      	cmp	r3, #102	; 0x66
 800a40a:	f47f af36 	bne.w	800a27a <OscServer::Run()+0x46>
 800a40e:	2100      	movs	r1, #0
 800a410:	a808      	add	r0, sp, #32
 800a412:	f000 fbaa 	bl	800ab6a <OscSimpleMessage::GetFloat(unsigned int)>
 800a416:	4923      	ldr	r1, [pc, #140]	; (800a4a4 <OscServer::Run()+0x270>)
 800a418:	f7fd fb7e 	bl	8007b18 <__aeabi_fmul>
 800a41c:	f7fd fca6 	bl	8007d6c <__aeabi_f2uiz>
 800a420:	e7f0      	b.n	800a404 <OscServer::Run()+0x1d0>
 800a422:	8923      	ldrh	r3, [r4, #8]
 800a424:	42ab      	cmp	r3, r5
 800a426:	bf38      	it	cc
 800a428:	462b      	movcc	r3, r5
 800a42a:	8123      	strh	r3, [r4, #8]
 800a42c:	e782      	b.n	800a334 <OscServer::Run()+0x100>
 800a42e:	4922      	ldr	r1, [pc, #136]	; (800a4b8 <OscServer::Run()+0x284>)
 800a430:	6828      	ldr	r0, [r5, #0]
 800a432:	f000 fa87 	bl	800a944 <lo_pattern_match>
 800a436:	2800      	cmp	r0, #0
 800a438:	f43f af1f 	beq.w	800a27a <OscServer::Run()+0x46>
 800a43c:	f104 030d 	add.w	r3, r4, #13
 800a440:	4d1e      	ldr	r5, [pc, #120]	; (800a4bc <OscServer::Run()+0x288>)
 800a442:	9302      	str	r3, [sp, #8]
 800a444:	4b1e      	ldr	r3, [pc, #120]	; (800a4c0 <OscServer::Run()+0x28c>)
 800a446:	9a07      	ldr	r2, [sp, #28]
 800a448:	6861      	ldr	r1, [r4, #4]
 800a44a:	9300      	str	r3, [sp, #0]
 800a44c:	9501      	str	r5, [sp, #4]
 800a44e:	8863      	ldrh	r3, [r4, #2]
 800a450:	a805      	add	r0, sp, #20
 800a452:	f000 fc0f 	bl	800ac74 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a456:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a458:	9a07      	ldr	r2, [sp, #28]
 800a45a:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800a45e:	4b19      	ldr	r3, [pc, #100]	; (800a4c4 <OscServer::Run()+0x290>)
 800a460:	6861      	ldr	r1, [r4, #4]
 800a462:	9300      	str	r3, [sp, #0]
 800a464:	a806      	add	r0, sp, #24
 800a466:	8863      	ldrh	r3, [r4, #2]
 800a468:	f000 fc04 	bl	800ac74 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a46c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a46e:	9a07      	ldr	r2, [sp, #28]
 800a470:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800a474:	4b14      	ldr	r3, [pc, #80]	; (800a4c8 <OscServer::Run()+0x294>)
 800a476:	6861      	ldr	r1, [r4, #4]
 800a478:	9300      	str	r3, [sp, #0]
 800a47a:	a80f      	add	r0, sp, #60	; 0x3c
 800a47c:	8863      	ldrh	r3, [r4, #2]
 800a47e:	f000 fbf9 	bl	800ac74 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a482:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a484:	2800      	cmp	r0, #0
 800a486:	f43f aef8 	beq.w	800a27a <OscServer::Run()+0x46>
 800a48a:	6803      	ldr	r3, [r0, #0]
 800a48c:	9a07      	ldr	r2, [sp, #28]
 800a48e:	691d      	ldr	r5, [r3, #16]
 800a490:	6861      	ldr	r1, [r4, #4]
 800a492:	8863      	ldrh	r3, [r4, #2]
 800a494:	47a8      	blx	r5
 800a496:	e6f0      	b.n	800a27a <OscServer::Run()+0x46>
 800a498:	20000748 	andcs	r0, r0, r8, asr #14
 800a49c:	2000084c 	andcs	r0, r0, ip, asr #16
 800a4a0:	200008cc 	andcs	r0, r0, ip, asr #17
 800a4a4:	437f0000 	cmnmi	pc, #0
 800a4a8:	2000074c 	andcs	r0, r0, ip, asr #14
 800a4ac:	08012111 	stmdaeq	r1, {r0, r4, r8, sp}
 800a4b0:	08012117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp}
 800a4b4:	200007cc 	andcs	r0, r0, ip, asr #15
 800a4b8:	200006c8 	andcs	r0, r0, r8, asr #13
 800a4bc:	08012109 	stmdaeq	r1, {r0, r3, r8, sp}
 800a4c0:	0801211d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sp}
 800a4c4:	08012126 	stmdaeq	r1, {r1, r2, r5, r8, sp}
 800a4c8:	08012132 	stmdaeq	r1, {r1, r4, r5, r8, sp}

0800a4cc <OscServer::Print()>:
 800a4cc:	b510      	push	{r4, lr}
 800a4ce:	4604      	mov	r4, r0
 800a4d0:	480f      	ldr	r0, [pc, #60]	; (800a510 <OscServer::Print()+0x44>)
 800a4d2:	f7fe f9b3 	bl	800883c <printf>
 800a4d6:	8821      	ldrh	r1, [r4, #0]
 800a4d8:	480e      	ldr	r0, [pc, #56]	; (800a514 <OscServer::Print()+0x48>)
 800a4da:	f7fe f9af 	bl	800883c <printf>
 800a4de:	8861      	ldrh	r1, [r4, #2]
 800a4e0:	480d      	ldr	r0, [pc, #52]	; (800a518 <OscServer::Print()+0x4c>)
 800a4e2:	f7fe f9ab 	bl	800883c <printf>
 800a4e6:	4a0d      	ldr	r2, [pc, #52]	; (800a51c <OscServer::Print()+0x50>)
 800a4e8:	490d      	ldr	r1, [pc, #52]	; (800a520 <OscServer::Print()+0x54>)
 800a4ea:	480e      	ldr	r0, [pc, #56]	; (800a524 <OscServer::Print()+0x58>)
 800a4ec:	f7fe f9a6 	bl	800883c <printf>
 800a4f0:	490d      	ldr	r1, [pc, #52]	; (800a528 <OscServer::Print()+0x5c>)
 800a4f2:	480e      	ldr	r0, [pc, #56]	; (800a52c <OscServer::Print()+0x60>)
 800a4f4:	f7fe f9a2 	bl	800883c <printf>
 800a4f8:	7aa1      	ldrb	r1, [r4, #10]
 800a4fa:	4a0d      	ldr	r2, [pc, #52]	; (800a530 <OscServer::Print()+0x64>)
 800a4fc:	4b0d      	ldr	r3, [pc, #52]	; (800a534 <OscServer::Print()+0x68>)
 800a4fe:	480e      	ldr	r0, [pc, #56]	; (800a538 <OscServer::Print()+0x6c>)
 800a500:	2900      	cmp	r1, #0
 800a502:	bf14      	ite	ne
 800a504:	4611      	movne	r1, r2
 800a506:	4619      	moveq	r1, r3
 800a508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a50c:	f7fe b996 	b.w	800883c <printf>
 800a510:	08012143 	stmdaeq	r1, {r0, r1, r6, r8, sp}
 800a514:	0801214f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sp}
 800a518:	0801216b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sp}
 800a51c:	2000074c 	andcs	r0, r0, ip, asr #14
 800a520:	2000084c 	andcs	r0, r0, ip, asr #16
 800a524:	08012187 	stmdaeq	r1, {r0, r1, r2, r7, r8, sp}
 800a528:	200007cc 	andcs	r0, r0, ip, asr #15
 800a52c:	080121a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sp}
 800a530:	0801213c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sp}
 800a534:	08012140 	stmdaeq	r1, {r6, r8, sp}
 800a538:	080121c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sp}

0800a53c <strncpy.constprop.0.isra.0>:
 800a53c:	227f      	movs	r2, #127	; 0x7f
 800a53e:	1e4b      	subs	r3, r1, #1
 800a540:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a544:	b909      	cbnz	r1, 800a54a <strncpy.constprop.0.isra.0+0xe>
 800a546:	f004 bd6f 	b.w	800f028 <memset>
 800a54a:	3a01      	subs	r2, #1
 800a54c:	f800 1b01 	strb.w	r1, [r0], #1
 800a550:	d1f6      	bne.n	800a540 <strncpy.constprop.0.isra.0+0x4>
 800a552:	4770      	bx	lr

0800a554 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800a554:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a556:	88c6      	ldrh	r6, [r0, #6]
 800a558:	8885      	ldrh	r5, [r0, #4]
 800a55a:	42ae      	cmp	r6, r5
 800a55c:	d216      	bcs.n	800a58c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800a55e:	4604      	mov	r4, r0
 800a560:	6800      	ldr	r0, [r0, #0]
 800a562:	1bad      	subs	r5, r5, r6
 800a564:	4430      	add	r0, r6
 800a566:	7a26      	ldrb	r6, [r4, #8]
 800a568:	b923      	cbnz	r3, 800a574 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800a56a:	b926      	cbnz	r6, 800a576 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800a56c:	9200      	str	r2, [sp, #0]
 800a56e:	460b      	mov	r3, r1
 800a570:	4a09      	ldr	r2, [pc, #36]	; (800a598 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800a572:	e003      	b.n	800a57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a574:	b166      	cbz	r6, 800a590 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800a576:	460b      	mov	r3, r1
 800a578:	9200      	str	r2, [sp, #0]
 800a57a:	4a08      	ldr	r2, [pc, #32]	; (800a59c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800a57c:	4629      	mov	r1, r5
 800a57e:	f7fe f96d 	bl	800885c <snprintf>
 800a582:	4285      	cmp	r5, r0
 800a584:	bfa2      	ittt	ge
 800a586:	88e3      	ldrhge	r3, [r4, #6]
 800a588:	181b      	addge	r3, r3, r0
 800a58a:	80e3      	strhge	r3, [r4, #6]
 800a58c:	b002      	add	sp, #8
 800a58e:	bd70      	pop	{r4, r5, r6, pc}
 800a590:	9200      	str	r2, [sp, #0]
 800a592:	460b      	mov	r3, r1
 800a594:	4a02      	ldr	r2, [pc, #8]	; (800a5a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a596:	e7f1      	b.n	800a57c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a598:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 800a59c:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 800a5a0:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}

0800a5a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800a5a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5a6:	88c6      	ldrh	r6, [r0, #6]
 800a5a8:	8885      	ldrh	r5, [r0, #4]
 800a5aa:	42ae      	cmp	r6, r5
 800a5ac:	d216      	bcs.n	800a5dc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 800a5ae:	4604      	mov	r4, r0
 800a5b0:	6800      	ldr	r0, [r0, #0]
 800a5b2:	1bad      	subs	r5, r5, r6
 800a5b4:	4430      	add	r0, r6
 800a5b6:	7a26      	ldrb	r6, [r4, #8]
 800a5b8:	b923      	cbnz	r3, 800a5c4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 800a5ba:	b926      	cbnz	r6, 800a5c6 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 800a5bc:	9200      	str	r2, [sp, #0]
 800a5be:	460b      	mov	r3, r1
 800a5c0:	4a09      	ldr	r2, [pc, #36]	; (800a5e8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a5c2:	e003      	b.n	800a5cc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5c4:	b166      	cbz	r6, 800a5e0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a5c6:	460b      	mov	r3, r1
 800a5c8:	9200      	str	r2, [sp, #0]
 800a5ca:	4a08      	ldr	r2, [pc, #32]	; (800a5ec <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a5cc:	4629      	mov	r1, r5
 800a5ce:	f7fe f945 	bl	800885c <snprintf>
 800a5d2:	4285      	cmp	r5, r0
 800a5d4:	bfa2      	ittt	ge
 800a5d6:	88e3      	ldrhge	r3, [r4, #6]
 800a5d8:	181b      	addge	r3, r3, r0
 800a5da:	80e3      	strhge	r3, [r4, #6]
 800a5dc:	b002      	add	sp, #8
 800a5de:	bd70      	pop	{r4, r5, r6, pc}
 800a5e0:	9200      	str	r2, [sp, #0]
 800a5e2:	460b      	mov	r3, r1
 800a5e4:	4a02      	ldr	r2, [pc, #8]	; (800a5f0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a5e6:	e7f1      	b.n	800a5cc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5e8:	080113c0 	stmdaeq	r1, {r6, r7, r8, r9, ip}
 800a5ec:	080113b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, ip}
 800a5f0:	080113c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, ip}

0800a5f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800a5f4:	b510      	push	{r4, lr}
 800a5f6:	4604      	mov	r4, r0
 800a5f8:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800a5fc:	f840 1b04 	str.w	r1, [r0], #4
 800a600:	2100      	movs	r1, #0
 800a602:	f004 fd11 	bl	800f028 <memset>
 800a606:	4b02      	ldr	r3, [pc, #8]	; (800a610 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 800a608:	4620      	mov	r0, r4
 800a60a:	60a3      	str	r3, [r4, #8]
 800a60c:	bd10      	pop	{r4, pc}
 800a60e:	bf00      	nop
 800a610:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

0800a614 <OSCServerParams::Load()>:
 800a614:	b508      	push	{r3, lr}
 800a616:	2300      	movs	r3, #0
 800a618:	4601      	mov	r1, r0
 800a61a:	6043      	str	r3, [r0, #4]
 800a61c:	6800      	ldr	r0, [r0, #0]
 800a61e:	b120      	cbz	r0, 800a62a <OSCServerParams::Load()+0x16>
 800a620:	6803      	ldr	r3, [r0, #0]
 800a622:	3104      	adds	r1, #4
 800a624:	68db      	ldr	r3, [r3, #12]
 800a626:	4798      	blx	r3
 800a628:	2001      	movs	r0, #1
 800a62a:	bd08      	pop	{r3, pc}

0800a62c <OSCServerParams::Load(char const*, unsigned int)>:
 800a62c:	6803      	ldr	r3, [r0, #0]
 800a62e:	b1d3      	cbz	r3, 800a666 <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 800a630:	2300      	movs	r3, #0
 800a632:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a634:	460d      	mov	r5, r1
 800a636:	4616      	mov	r6, r2
 800a638:	4604      	mov	r4, r0
 800a63a:	6043      	str	r3, [r0, #4]
 800a63c:	4602      	mov	r2, r0
 800a63e:	490a      	ldr	r1, [pc, #40]	; (800a668 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 800a640:	4668      	mov	r0, sp
 800a642:	f003 ff0b 	bl	800e45c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a646:	4632      	mov	r2, r6
 800a648:	4629      	mov	r1, r5
 800a64a:	4668      	mov	r0, sp
 800a64c:	f003 ff0a 	bl	800e464 <ReadConfigFile::Read(char const*, unsigned int)>
 800a650:	4621      	mov	r1, r4
 800a652:	f851 0b04 	ldr.w	r0, [r1], #4
 800a656:	6803      	ldr	r3, [r0, #0]
 800a658:	689b      	ldr	r3, [r3, #8]
 800a65a:	4798      	blx	r3
 800a65c:	4668      	mov	r0, sp
 800a65e:	f003 ff00 	bl	800e462 <ReadConfigFile::~ReadConfigFile()>
 800a662:	b002      	add	sp, #8
 800a664:	bd70      	pop	{r4, r5, r6, pc}
 800a666:	4770      	bx	lr
 800a668:	0800a765 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, sp, pc}

0800a66c <OSCServerParams::callbackFunction(char const*)>:
 800a66c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a66e:	460d      	mov	r5, r1
 800a670:	4604      	mov	r4, r0
 800a672:	4937      	ldr	r1, [pc, #220]	; (800a750 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800a674:	4628      	mov	r0, r5
 800a676:	f10d 0202 	add.w	r2, sp, #2
 800a67a:	f003 ff81 	bl	800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a67e:	b980      	cbnz	r0, 800a6a2 <OSCServerParams::callbackFunction(char const*)+0x36>
 800a680:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a684:	6863      	ldr	r3, [r4, #4]
 800a686:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a68a:	bf33      	iteet	cc
 800a68c:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 800a690:	8122      	strhcs	r2, [r4, #8]
 800a692:	f043 0301 	orrcs.w	r3, r3, #1
 800a696:	8122      	strhcc	r2, [r4, #8]
 800a698:	bf38      	it	cc
 800a69a:	f023 0301 	biccc.w	r3, r3, #1
 800a69e:	6063      	str	r3, [r4, #4]
 800a6a0:	e028      	b.n	800a6f4 <OSCServerParams::callbackFunction(char const*)+0x88>
 800a6a2:	4628      	mov	r0, r5
 800a6a4:	492b      	ldr	r1, [pc, #172]	; (800a754 <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800a6a6:	f10d 0202 	add.w	r2, sp, #2
 800a6aa:	f003 ff69 	bl	800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a6ae:	b978      	cbnz	r0, 800a6d0 <OSCServerParams::callbackFunction(char const*)+0x64>
 800a6b0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a6b4:	6863      	ldr	r3, [r4, #4]
 800a6b6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a6ba:	bf33      	iteet	cc
 800a6bc:	f242 3228 	movwcc	r2, #9000	; 0x2328
 800a6c0:	8162      	strhcs	r2, [r4, #10]
 800a6c2:	f043 0302 	orrcs.w	r3, r3, #2
 800a6c6:	8162      	strhcc	r2, [r4, #10]
 800a6c8:	bf38      	it	cc
 800a6ca:	f023 0302 	biccc.w	r3, r3, #2
 800a6ce:	e7e6      	b.n	800a69e <OSCServerParams::callbackFunction(char const*)+0x32>
 800a6d0:	4628      	mov	r0, r5
 800a6d2:	4921      	ldr	r1, [pc, #132]	; (800a758 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800a6d4:	f10d 0201 	add.w	r2, sp, #1
 800a6d8:	f003 ff70 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6dc:	b978      	cbnz	r0, 800a6fe <OSCServerParams::callbackFunction(char const*)+0x92>
 800a6de:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a6e2:	6863      	ldr	r3, [r4, #4]
 800a6e4:	b142      	cbz	r2, 800a6f8 <OSCServerParams::callbackFunction(char const*)+0x8c>
 800a6e6:	f043 0308 	orr.w	r3, r3, #8
 800a6ea:	3a00      	subs	r2, #0
 800a6ec:	bf18      	it	ne
 800a6ee:	2201      	movne	r2, #1
 800a6f0:	6063      	str	r3, [r4, #4]
 800a6f2:	7362      	strb	r2, [r4, #13]
 800a6f4:	b002      	add	sp, #8
 800a6f6:	bd70      	pop	{r4, r5, r6, pc}
 800a6f8:	f023 0308 	bic.w	r3, r3, #8
 800a6fc:	e7f5      	b.n	800a6ea <OSCServerParams::callbackFunction(char const*)+0x7e>
 800a6fe:	267f      	movs	r6, #127	; 0x7f
 800a700:	4628      	mov	r0, r5
 800a702:	4916      	ldr	r1, [pc, #88]	; (800a75c <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800a704:	ab01      	add	r3, sp, #4
 800a706:	f104 020e 	add.w	r2, r4, #14
 800a70a:	9601      	str	r6, [sp, #4]
 800a70c:	f003 fede 	bl	800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a710:	b918      	cbnz	r0, 800a71a <OSCServerParams::callbackFunction(char const*)+0xae>
 800a712:	6863      	ldr	r3, [r4, #4]
 800a714:	f043 0304 	orr.w	r3, r3, #4
 800a718:	e7c1      	b.n	800a69e <OSCServerParams::callbackFunction(char const*)+0x32>
 800a71a:	4628      	mov	r0, r5
 800a71c:	4910      	ldr	r1, [pc, #64]	; (800a760 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800a71e:	ab01      	add	r3, sp, #4
 800a720:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 800a724:	9601      	str	r6, [sp, #4]
 800a726:	f003 fed1 	bl	800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a72a:	b918      	cbnz	r0, 800a734 <OSCServerParams::callbackFunction(char const*)+0xc8>
 800a72c:	6863      	ldr	r3, [r4, #4]
 800a72e:	f043 0320 	orr.w	r3, r3, #32
 800a732:	e7b4      	b.n	800a69e <OSCServerParams::callbackFunction(char const*)+0x32>
 800a734:	4628      	mov	r0, r5
 800a736:	490a      	ldr	r1, [pc, #40]	; (800a760 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800a738:	ab01      	add	r3, sp, #4
 800a73a:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 800a73e:	9601      	str	r6, [sp, #4]
 800a740:	f003 fec4 	bl	800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a744:	2800      	cmp	r0, #0
 800a746:	d1d5      	bne.n	800a6f4 <OSCServerParams::callbackFunction(char const*)+0x88>
 800a748:	6863      	ldr	r3, [r4, #4]
 800a74a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a74e:	e7a6      	b.n	800a69e <OSCServerParams::callbackFunction(char const*)+0x32>
 800a750:	0801225f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sp}
 800a754:	0801226d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sp}
 800a758:	08012225 	stmdaeq	r1, {r0, r2, r5, r9, sp}
 800a75c:	08012248 	stmdaeq	r1, {r3, r6, r9, sp}
 800a760:	08012255 	stmdaeq	r1, {r0, r2, r4, r6, r9, sp}

0800a764 <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 800a764:	f7ff bf82 	b.w	800a66c <OSCServerParams::callbackFunction(char const*)>

0800a768 <OSCServerParams::Set(OscServer*)>:
 800a768:	b538      	push	{r3, r4, r5, lr}
 800a76a:	460d      	mov	r5, r1
 800a76c:	6843      	ldr	r3, [r0, #4]
 800a76e:	4604      	mov	r4, r0
 800a770:	07d9      	lsls	r1, r3, #31
 800a772:	bf44      	itt	mi
 800a774:	8902      	ldrhmi	r2, [r0, #8]
 800a776:	802a      	strhmi	r2, [r5, #0]
 800a778:	079a      	lsls	r2, r3, #30
 800a77a:	bf44      	itt	mi
 800a77c:	8942      	ldrhmi	r2, [r0, #10]
 800a77e:	806a      	strhmi	r2, [r5, #2]
 800a780:	0758      	lsls	r0, r3, #29
 800a782:	d504      	bpl.n	800a78e <OSCServerParams::Set(OscServer*)+0x26>
 800a784:	4628      	mov	r0, r5
 800a786:	f104 010e 	add.w	r1, r4, #14
 800a78a:	f7ff fcc7 	bl	800a11c <OscServer::SetPath(char const*)>
 800a78e:	6863      	ldr	r3, [r4, #4]
 800a790:	0699      	lsls	r1, r3, #26
 800a792:	d504      	bpl.n	800a79e <OSCServerParams::Set(OscServer*)+0x36>
 800a794:	4628      	mov	r0, r5
 800a796:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 800a79a:	f7ff fce5 	bl	800a168 <OscServer::SetPathInfo(char const*)>
 800a79e:	6863      	ldr	r3, [r4, #4]
 800a7a0:	065a      	lsls	r2, r3, #25
 800a7a2:	d504      	bpl.n	800a7ae <OSCServerParams::Set(OscServer*)+0x46>
 800a7a4:	4628      	mov	r0, r5
 800a7a6:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 800a7aa:	f7ff fcf3 	bl	800a194 <OscServer::SetPathBlackOut(char const*)>
 800a7ae:	6863      	ldr	r3, [r4, #4]
 800a7b0:	071b      	lsls	r3, r3, #28
 800a7b2:	bf44      	itt	mi
 800a7b4:	7b63      	ldrbmi	r3, [r4, #13]
 800a7b6:	72ab      	strbmi	r3, [r5, #10]
 800a7b8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800a7bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 800a7bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7be:	4604      	mov	r4, r0
 800a7c0:	4615      	mov	r5, r2
 800a7c2:	461e      	mov	r6, r3
 800a7c4:	b087      	sub	sp, #28
 800a7c6:	3004      	adds	r0, #4
 800a7c8:	2900      	cmp	r1, #0
 800a7ca:	d061      	beq.n	800a890 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd4>
 800a7cc:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800a7d0:	f004 fc13 	bl	800effa <memmove>
 800a7d4:	4633      	mov	r3, r6
 800a7d6:	462a      	mov	r2, r5
 800a7d8:	4946      	ldr	r1, [pc, #280]	; (800a8f4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 800a7da:	a803      	add	r0, sp, #12
 800a7dc:	f003 fd9e 	bl	800e31c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a7e0:	6863      	ldr	r3, [r4, #4]
 800a7e2:	f104 070e 	add.w	r7, r4, #14
 800a7e6:	075e      	lsls	r6, r3, #29
 800a7e8:	d403      	bmi.n	800a7f2 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 800a7ea:	4638      	mov	r0, r7
 800a7ec:	4942      	ldr	r1, [pc, #264]	; (800a8f8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 800a7ee:	f7ff fea5 	bl	800a53c <strncpy.constprop.0.isra.0>
 800a7f2:	6863      	ldr	r3, [r4, #4]
 800a7f4:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 800a7f8:	069d      	lsls	r5, r3, #26
 800a7fa:	d403      	bmi.n	800a804 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 800a7fc:	4630      	mov	r0, r6
 800a7fe:	493f      	ldr	r1, [pc, #252]	; (800a8fc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 800a800:	f7ff fe9c 	bl	800a53c <strncpy.constprop.0.isra.0>
 800a804:	6863      	ldr	r3, [r4, #4]
 800a806:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 800a80a:	0658      	lsls	r0, r3, #25
 800a80c:	d403      	bmi.n	800a816 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 800a80e:	4628      	mov	r0, r5
 800a810:	493b      	ldr	r1, [pc, #236]	; (800a900 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 800a812:	f7ff fe93 	bl	800a53c <strncpy.constprop.0.isra.0>
 800a816:	6863      	ldr	r3, [r4, #4]
 800a818:	8922      	ldrh	r2, [r4, #8]
 800a81a:	493a      	ldr	r1, [pc, #232]	; (800a904 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 800a81c:	f003 0301 	and.w	r3, r3, #1
 800a820:	a803      	add	r0, sp, #12
 800a822:	f7ff fe97 	bl	800a554 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a826:	6863      	ldr	r3, [r4, #4]
 800a828:	8962      	ldrh	r2, [r4, #10]
 800a82a:	4937      	ldr	r1, [pc, #220]	; (800a908 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 800a82c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800a830:	a803      	add	r0, sp, #12
 800a832:	f7ff fe8f 	bl	800a554 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a836:	6863      	ldr	r3, [r4, #4]
 800a838:	463a      	mov	r2, r7
 800a83a:	4934      	ldr	r1, [pc, #208]	; (800a90c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 800a83c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800a840:	a803      	add	r0, sp, #12
 800a842:	f7ff feaf 	bl	800a5a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a846:	6863      	ldr	r3, [r4, #4]
 800a848:	4632      	mov	r2, r6
 800a84a:	4931      	ldr	r1, [pc, #196]	; (800a910 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 800a84c:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800a850:	a803      	add	r0, sp, #12
 800a852:	f7ff fea7 	bl	800a5a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a856:	6863      	ldr	r3, [r4, #4]
 800a858:	462a      	mov	r2, r5
 800a85a:	492e      	ldr	r1, [pc, #184]	; (800a914 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 800a85c:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800a860:	a803      	add	r0, sp, #12
 800a862:	f7ff fe9f 	bl	800a5a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a866:	7b63      	ldrb	r3, [r4, #13]
 800a868:	6861      	ldr	r1, [r4, #4]
 800a86a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a86e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a872:	42a2      	cmp	r2, r4
 800a874:	d221      	bcs.n	800a8ba <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800a876:	9803      	ldr	r0, [sp, #12]
 800a878:	0709      	lsls	r1, r1, #28
 800a87a:	4410      	add	r0, r2
 800a87c:	eba4 0402 	sub.w	r4, r4, r2
 800a880:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a884:	d40b      	bmi.n	800a89e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800a886:	b95a      	cbnz	r2, 800a8a0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 800a888:	9300      	str	r3, [sp, #0]
 800a88a:	4a23      	ldr	r2, [pc, #140]	; (800a918 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 800a88c:	4b23      	ldr	r3, [pc, #140]	; (800a91c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a88e:	e00a      	b.n	800a8a6 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800a890:	6823      	ldr	r3, [r4, #0]
 800a892:	4601      	mov	r1, r0
 800a894:	681a      	ldr	r2, [r3, #0]
 800a896:	4618      	mov	r0, r3
 800a898:	68d2      	ldr	r2, [r2, #12]
 800a89a:	4790      	blx	r2
 800a89c:	e79a      	b.n	800a7d4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800a89e:	b32a      	cbz	r2, 800a8ec <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x130>
 800a8a0:	9300      	str	r3, [sp, #0]
 800a8a2:	4a1f      	ldr	r2, [pc, #124]	; (800a920 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800a8a4:	4b1d      	ldr	r3, [pc, #116]	; (800a91c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a8a6:	4621      	mov	r1, r4
 800a8a8:	f7fd ffd8 	bl	800885c <snprintf>
 800a8ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8b0:	4284      	cmp	r4, r0
 800a8b2:	bfa4      	itt	ge
 800a8b4:	181b      	addge	r3, r3, r0
 800a8b6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8ba:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a8be:	b17b      	cbz	r3, 800a8e0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x124>
 800a8c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a8c4:	9b03      	ldr	r3, [sp, #12]
 800a8c6:	4413      	add	r3, r2
 800a8c8:	227d      	movs	r2, #125	; 0x7d
 800a8ca:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a8ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8d2:	9903      	ldr	r1, [sp, #12]
 800a8d4:	54ca      	strb	r2, [r1, r3]
 800a8d6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8da:	3301      	adds	r3, #1
 800a8dc:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a8e0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a8e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8e6:	601a      	str	r2, [r3, #0]
 800a8e8:	b007      	add	sp, #28
 800a8ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8ec:	9300      	str	r3, [sp, #0]
 800a8ee:	4a0d      	ldr	r2, [pc, #52]	; (800a924 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 800a8f0:	4b0a      	ldr	r3, [pc, #40]	; (800a91c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a8f2:	e7d8      	b.n	800a8a6 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800a8f4:	0801224d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sp}
 800a8f8:	2000084c 	andcs	r0, r0, ip, asr #16
 800a8fc:	200006c8 	andcs	r0, r0, r8, asr #13
 800a900:	200007cc 	andcs	r0, r0, ip, asr #15
 800a904:	0801225f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sp}
 800a908:	0801226d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sp}
 800a90c:	08012248 	stmdaeq	r1, {r3, r6, r9, sp}
 800a910:	08012255 	stmdaeq	r1, {r0, r2, r4, r6, r9, sp}
 800a914:	0801223a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sp}
 800a918:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 800a91c:	08012225 	stmdaeq	r1, {r0, r2, r5, r9, sp}
 800a920:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 800a924:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}

0800a928 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 800a928:	b513      	push	{r0, r1, r4, lr}
 800a92a:	6804      	ldr	r4, [r0, #0]
 800a92c:	b914      	cbnz	r4, 800a934 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a92e:	601c      	str	r4, [r3, #0]
 800a930:	b002      	add	sp, #8
 800a932:	bd10      	pop	{r4, pc}
 800a934:	9300      	str	r3, [sp, #0]
 800a936:	4613      	mov	r3, r2
 800a938:	460a      	mov	r2, r1
 800a93a:	2100      	movs	r1, #0
 800a93c:	f7ff ff3e 	bl	800a7bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 800a940:	e7f6      	b.n	800a930 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a942 <OSCServerParams::Dump()>:
 800a942:	4770      	bx	lr

0800a944 <lo_pattern_match>:
 800a944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a946:	4605      	mov	r5, r0
 800a948:	460b      	mov	r3, r1
 800a94a:	7819      	ldrb	r1, [r3, #0]
 800a94c:	782a      	ldrb	r2, [r5, #0]
 800a94e:	b919      	cbnz	r1, 800a958 <lo_pattern_match+0x14>
 800a950:	fab2 f082 	clz	r0, r2
 800a954:	0940      	lsrs	r0, r0, #5
 800a956:	e09f      	b.n	800aa98 <lo_pattern_match+0x154>
 800a958:	b90a      	cbnz	r2, 800a95e <lo_pattern_match+0x1a>
 800a95a:	292a      	cmp	r1, #42	; 0x2a
 800a95c:	d132      	bne.n	800a9c4 <lo_pattern_match+0x80>
 800a95e:	295b      	cmp	r1, #91	; 0x5b
 800a960:	f103 0401 	add.w	r4, r3, #1
 800a964:	d03c      	beq.n	800a9e0 <lo_pattern_match+0x9c>
 800a966:	d806      	bhi.n	800a976 <lo_pattern_match+0x32>
 800a968:	292a      	cmp	r1, #42	; 0x2a
 800a96a:	d012      	beq.n	800a992 <lo_pattern_match+0x4e>
 800a96c:	293f      	cmp	r1, #63	; 0x3f
 800a96e:	d032      	beq.n	800a9d6 <lo_pattern_match+0x92>
 800a970:	4291      	cmp	r1, r2
 800a972:	d032      	beq.n	800a9da <lo_pattern_match+0x96>
 800a974:	e026      	b.n	800a9c4 <lo_pattern_match+0x80>
 800a976:	297b      	cmp	r1, #123	; 0x7b
 800a978:	d1fa      	bne.n	800a970 <lo_pattern_match+0x2c>
 800a97a:	7820      	ldrb	r0, [r4, #0]
 800a97c:	4626      	mov	r6, r4
 800a97e:	1c67      	adds	r7, r4, #1
 800a980:	2800      	cmp	r0, #0
 800a982:	f000 8089 	beq.w	800aa98 <lo_pattern_match+0x154>
 800a986:	287d      	cmp	r0, #125	; 0x7d
 800a988:	d161      	bne.n	800aa4e <lo_pattern_match+0x10a>
 800a98a:	1c9c      	adds	r4, r3, #2
 800a98c:	4628      	mov	r0, r5
 800a98e:	785b      	ldrb	r3, [r3, #1]
 800a990:	e06d      	b.n	800aa6e <lo_pattern_match+0x12a>
 800a992:	7823      	ldrb	r3, [r4, #0]
 800a994:	4626      	mov	r6, r4
 800a996:	2b2a      	cmp	r3, #42	; 0x2a
 800a998:	f104 0401 	add.w	r4, r4, #1
 800a99c:	d0f9      	beq.n	800a992 <lo_pattern_match+0x4e>
 800a99e:	b1c3      	cbz	r3, 800a9d2 <lo_pattern_match+0x8e>
 800a9a0:	2b3f      	cmp	r3, #63	; 0x3f
 800a9a2:	d00b      	beq.n	800a9bc <lo_pattern_match+0x78>
 800a9a4:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 800a9a8:	2a5b      	cmp	r2, #91	; 0x5b
 800a9aa:	d007      	beq.n	800a9bc <lo_pattern_match+0x78>
 800a9ac:	462a      	mov	r2, r5
 800a9ae:	4615      	mov	r5, r2
 800a9b0:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a9b4:	2800      	cmp	r0, #0
 800a9b6:	d06f      	beq.n	800aa98 <lo_pattern_match+0x154>
 800a9b8:	4283      	cmp	r3, r0
 800a9ba:	d1f8      	bne.n	800a9ae <lo_pattern_match+0x6a>
 800a9bc:	4628      	mov	r0, r5
 800a9be:	7803      	ldrb	r3, [r0, #0]
 800a9c0:	3501      	adds	r5, #1
 800a9c2:	b90b      	cbnz	r3, 800a9c8 <lo_pattern_match+0x84>
 800a9c4:	2000      	movs	r0, #0
 800a9c6:	e067      	b.n	800aa98 <lo_pattern_match+0x154>
 800a9c8:	4631      	mov	r1, r6
 800a9ca:	f7ff ffbb 	bl	800a944 <lo_pattern_match>
 800a9ce:	2800      	cmp	r0, #0
 800a9d0:	d0f4      	beq.n	800a9bc <lo_pattern_match+0x78>
 800a9d2:	2001      	movs	r0, #1
 800a9d4:	e060      	b.n	800aa98 <lo_pattern_match+0x154>
 800a9d6:	2a00      	cmp	r2, #0
 800a9d8:	d0f4      	beq.n	800a9c4 <lo_pattern_match+0x80>
 800a9da:	4623      	mov	r3, r4
 800a9dc:	3501      	adds	r5, #1
 800a9de:	e7b4      	b.n	800a94a <lo_pattern_match+0x6>
 800a9e0:	7859      	ldrb	r1, [r3, #1]
 800a9e2:	2921      	cmp	r1, #33	; 0x21
 800a9e4:	bf0a      	itet	eq
 800a9e6:	2601      	moveq	r6, #1
 800a9e8:	2600      	movne	r6, #0
 800a9ea:	1c9c      	addeq	r4, r3, #2
 800a9ec:	4621      	mov	r1, r4
 800a9ee:	780b      	ldrb	r3, [r1, #0]
 800a9f0:	3401      	adds	r4, #1
 800a9f2:	b1c3      	cbz	r3, 800aa26 <lo_pattern_match+0xe2>
 800a9f4:	7848      	ldrb	r0, [r1, #1]
 800a9f6:	2800      	cmp	r0, #0
 800a9f8:	d04e      	beq.n	800aa98 <lo_pattern_match+0x154>
 800a9fa:	282d      	cmp	r0, #45	; 0x2d
 800a9fc:	d11c      	bne.n	800aa38 <lo_pattern_match+0xf4>
 800a9fe:	7888      	ldrb	r0, [r1, #2]
 800aa00:	1c8c      	adds	r4, r1, #2
 800aa02:	2800      	cmp	r0, #0
 800aa04:	d048      	beq.n	800aa98 <lo_pattern_match+0x154>
 800aa06:	285d      	cmp	r0, #93	; 0x5d
 800aa08:	d009      	beq.n	800aa1e <lo_pattern_match+0xda>
 800aa0a:	429a      	cmp	r2, r3
 800aa0c:	d005      	beq.n	800aa1a <lo_pattern_match+0xd6>
 800aa0e:	4290      	cmp	r0, r2
 800aa10:	d003      	beq.n	800aa1a <lo_pattern_match+0xd6>
 800aa12:	429a      	cmp	r2, r3
 800aa14:	d9ea      	bls.n	800a9ec <lo_pattern_match+0xa8>
 800aa16:	4290      	cmp	r0, r2
 800aa18:	d9e8      	bls.n	800a9ec <lo_pattern_match+0xa8>
 800aa1a:	2301      	movs	r3, #1
 800aa1c:	e003      	b.n	800aa26 <lo_pattern_match+0xe2>
 800aa1e:	429a      	cmp	r2, r3
 800aa20:	bf34      	ite	cc
 800aa22:	2300      	movcc	r3, #0
 800aa24:	2301      	movcs	r3, #1
 800aa26:	429e      	cmp	r6, r3
 800aa28:	d0cc      	beq.n	800a9c4 <lo_pattern_match+0x80>
 800aa2a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800aa2e:	2800      	cmp	r0, #0
 800aa30:	d032      	beq.n	800aa98 <lo_pattern_match+0x154>
 800aa32:	285d      	cmp	r0, #93	; 0x5d
 800aa34:	d1f9      	bne.n	800aa2a <lo_pattern_match+0xe6>
 800aa36:	e7d0      	b.n	800a9da <lo_pattern_match+0x96>
 800aa38:	285d      	cmp	r0, #93	; 0x5d
 800aa3a:	d103      	bne.n	800aa44 <lo_pattern_match+0x100>
 800aa3c:	1ad2      	subs	r2, r2, r3
 800aa3e:	4253      	negs	r3, r2
 800aa40:	4153      	adcs	r3, r2
 800aa42:	e7f0      	b.n	800aa26 <lo_pattern_match+0xe2>
 800aa44:	4290      	cmp	r0, r2
 800aa46:	d0e8      	beq.n	800aa1a <lo_pattern_match+0xd6>
 800aa48:	429a      	cmp	r2, r3
 800aa4a:	d1cf      	bne.n	800a9ec <lo_pattern_match+0xa8>
 800aa4c:	e7e5      	b.n	800aa1a <lo_pattern_match+0xd6>
 800aa4e:	463c      	mov	r4, r7
 800aa50:	e793      	b.n	800a97a <lo_pattern_match+0x36>
 800aa52:	2b2c      	cmp	r3, #44	; 0x2c
 800aa54:	d10f      	bne.n	800aa76 <lo_pattern_match+0x132>
 800aa56:	4639      	mov	r1, r7
 800aa58:	f7ff ff74 	bl	800a944 <lo_pattern_match>
 800aa5c:	2800      	cmp	r0, #0
 800aa5e:	d1b8      	bne.n	800a9d2 <lo_pattern_match+0x8e>
 800aa60:	f814 3b01 	ldrb.w	r3, [r4], #1
 800aa64:	b1c3      	cbz	r3, 800aa98 <lo_pattern_match+0x154>
 800aa66:	462a      	mov	r2, r5
 800aa68:	4610      	mov	r0, r2
 800aa6a:	f814 3b01 	ldrb.w	r3, [r4], #1
 800aa6e:	2b00      	cmp	r3, #0
 800aa70:	d1ef      	bne.n	800aa52 <lo_pattern_match+0x10e>
 800aa72:	4605      	mov	r5, r0
 800aa74:	e7b1      	b.n	800a9da <lo_pattern_match+0x96>
 800aa76:	2b7d      	cmp	r3, #125	; 0x7d
 800aa78:	7802      	ldrb	r2, [r0, #0]
 800aa7a:	d104      	bne.n	800aa86 <lo_pattern_match+0x142>
 800aa7c:	7823      	ldrb	r3, [r4, #0]
 800aa7e:	431a      	orrs	r2, r3
 800aa80:	d0a7      	beq.n	800a9d2 <lo_pattern_match+0x8e>
 800aa82:	1e45      	subs	r5, r0, #1
 800aa84:	e7a9      	b.n	800a9da <lo_pattern_match+0x96>
 800aa86:	4293      	cmp	r3, r2
 800aa88:	d107      	bne.n	800aa9a <lo_pattern_match+0x156>
 800aa8a:	1c42      	adds	r2, r0, #1
 800aa8c:	7840      	ldrb	r0, [r0, #1]
 800aa8e:	2800      	cmp	r0, #0
 800aa90:	d1ea      	bne.n	800aa68 <lo_pattern_match+0x124>
 800aa92:	7873      	ldrb	r3, [r6, #1]
 800aa94:	2b00      	cmp	r3, #0
 800aa96:	d0e7      	beq.n	800aa68 <lo_pattern_match+0x124>
 800aa98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aa9a:	4623      	mov	r3, r4
 800aa9c:	781a      	ldrb	r2, [r3, #0]
 800aa9e:	461c      	mov	r4, r3
 800aaa0:	2a2c      	cmp	r2, #44	; 0x2c
 800aaa2:	f103 0301 	add.w	r3, r3, #1
 800aaa6:	d004      	beq.n	800aab2 <lo_pattern_match+0x16e>
 800aaa8:	2a7d      	cmp	r2, #125	; 0x7d
 800aaaa:	d08b      	beq.n	800a9c4 <lo_pattern_match+0x80>
 800aaac:	2a00      	cmp	r2, #0
 800aaae:	d1f5      	bne.n	800aa9c <lo_pattern_match+0x158>
 800aab0:	e7d9      	b.n	800aa66 <lo_pattern_match+0x122>
 800aab2:	461c      	mov	r4, r3
 800aab4:	e7d7      	b.n	800aa66 <lo_pattern_match+0x122>

0800aab6 <osc::string_validate(void*, unsigned int)>:
 800aab6:	b510      	push	{r4, lr}
 800aab8:	2200      	movs	r2, #0
 800aaba:	4604      	mov	r4, r0
 800aabc:	428a      	cmp	r2, r1
 800aabe:	d005      	beq.n	800aacc <osc::string_validate(void*, unsigned int)+0x16>
 800aac0:	5ca3      	ldrb	r3, [r4, r2]
 800aac2:	b933      	cbnz	r3, 800aad2 <osc::string_validate(void*, unsigned int)+0x1c>
 800aac4:	f022 0303 	bic.w	r3, r2, #3
 800aac8:	1d18      	adds	r0, r3, #4
 800aaca:	d104      	bne.n	800aad6 <osc::string_validate(void*, unsigned int)+0x20>
 800aacc:	f06f 0001 	mvn.w	r0, #1
 800aad0:	e00b      	b.n	800aaea <osc::string_validate(void*, unsigned int)+0x34>
 800aad2:	3201      	adds	r2, #1
 800aad4:	e7f2      	b.n	800aabc <osc::string_validate(void*, unsigned int)+0x6>
 800aad6:	4281      	cmp	r1, r0
 800aad8:	d205      	bcs.n	800aae6 <osc::string_validate(void*, unsigned int)+0x30>
 800aada:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800aade:	e004      	b.n	800aaea <osc::string_validate(void*, unsigned int)+0x34>
 800aae0:	5ca3      	ldrb	r3, [r4, r2]
 800aae2:	b91b      	cbnz	r3, 800aaec <osc::string_validate(void*, unsigned int)+0x36>
 800aae4:	3201      	adds	r2, #1
 800aae6:	4282      	cmp	r2, r0
 800aae8:	d3fa      	bcc.n	800aae0 <osc::string_validate(void*, unsigned int)+0x2a>
 800aaea:	bd10      	pop	{r4, pc}
 800aaec:	f06f 0002 	mvn.w	r0, #2
 800aaf0:	e7fb      	b.n	800aaea <osc::string_validate(void*, unsigned int)+0x34>

0800aaf2 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800aaf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aaf6:	2300      	movs	r3, #0
 800aaf8:	460d      	mov	r5, r1
 800aafa:	e9c0 1200 	strd	r1, r2, [r0]
 800aafe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ab02:	7203      	strb	r3, [r0, #8]
 800ab04:	6183      	str	r3, [r0, #24]
 800ab06:	4604      	mov	r4, r0
 800ab08:	4611      	mov	r1, r2
 800ab0a:	4628      	mov	r0, r5
 800ab0c:	4617      	mov	r7, r2
 800ab0e:	f7ff ffd2 	bl	800aab6 <osc::string_validate(void*, unsigned int)>
 800ab12:	f1b0 0800 	subs.w	r8, r0, #0
 800ab16:	db25      	blt.n	800ab64 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab18:	eb05 0608 	add.w	r6, r5, r8
 800ab1c:	4630      	mov	r0, r6
 800ab1e:	60e6      	str	r6, [r4, #12]
 800ab20:	eba7 0108 	sub.w	r1, r7, r8
 800ab24:	f7ff ffc7 	bl	800aab6 <osc::string_validate(void*, unsigned int)>
 800ab28:	2800      	cmp	r0, #0
 800ab2a:	db1b      	blt.n	800ab64 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab2c:	f815 3008 	ldrb.w	r3, [r5, r8]
 800ab30:	2b2c      	cmp	r3, #44	; 0x2c
 800ab32:	d117      	bne.n	800ab64 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab34:	7873      	ldrb	r3, [r6, #1]
 800ab36:	2b73      	cmp	r3, #115	; 0x73
 800ab38:	d001      	beq.n	800ab3e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 800ab3a:	2b62      	cmp	r3, #98	; 0x62
 800ab3c:	d101      	bne.n	800ab42 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 800ab3e:	78b3      	ldrb	r3, [r6, #2]
 800ab40:	b983      	cbnz	r3, 800ab64 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab42:	3601      	adds	r6, #1
 800ab44:	4632      	mov	r2, r6
 800ab46:	60e6      	str	r6, [r4, #12]
 800ab48:	4613      	mov	r3, r2
 800ab4a:	7819      	ldrb	r1, [r3, #0]
 800ab4c:	3201      	adds	r2, #1
 800ab4e:	2900      	cmp	r1, #0
 800ab50:	d1fa      	bne.n	800ab48 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800ab52:	1b9b      	subs	r3, r3, r6
 800ab54:	6123      	str	r3, [r4, #16]
 800ab56:	2301      	movs	r3, #1
 800ab58:	4440      	add	r0, r8
 800ab5a:	4405      	add	r5, r0
 800ab5c:	1a3f      	subs	r7, r7, r0
 800ab5e:	6165      	str	r5, [r4, #20]
 800ab60:	61a7      	str	r7, [r4, #24]
 800ab62:	7223      	strb	r3, [r4, #8]
 800ab64:	4620      	mov	r0, r4
 800ab66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab6a <OscSimpleMessage::GetFloat(unsigned int)>:
 800ab6a:	b510      	push	{r4, lr}
 800ab6c:	6984      	ldr	r4, [r0, #24]
 800ab6e:	1c4b      	adds	r3, r1, #1
 800ab70:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800ab74:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800ab78:	d309      	bcc.n	800ab8e <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800ab7a:	68c3      	ldr	r3, [r0, #12]
 800ab7c:	5c5b      	ldrb	r3, [r3, r1]
 800ab7e:	2b66      	cmp	r3, #102	; 0x66
 800ab80:	d105      	bne.n	800ab8e <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800ab82:	6943      	ldr	r3, [r0, #20]
 800ab84:	4413      	add	r3, r2
 800ab86:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800ab8a:	ba00      	rev	r0, r0
 800ab8c:	bd10      	pop	{r4, pc}
 800ab8e:	2000      	movs	r0, #0
 800ab90:	e7fc      	b.n	800ab8c <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800ab92 <OscSimpleMessage::GetInt(unsigned int)>:
 800ab92:	b510      	push	{r4, lr}
 800ab94:	6984      	ldr	r4, [r0, #24]
 800ab96:	1c4b      	adds	r3, r1, #1
 800ab98:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800ab9c:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800aba0:	d309      	bcc.n	800abb6 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800aba2:	68c3      	ldr	r3, [r0, #12]
 800aba4:	5c5b      	ldrb	r3, [r3, r1]
 800aba6:	2b69      	cmp	r3, #105	; 0x69
 800aba8:	d105      	bne.n	800abb6 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800abaa:	6943      	ldr	r3, [r0, #20]
 800abac:	4413      	add	r3, r2
 800abae:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800abb2:	ba00      	rev	r0, r0
 800abb4:	bd10      	pop	{r4, pc}
 800abb6:	2000      	movs	r0, #0
 800abb8:	e7fc      	b.n	800abb4 <OscSimpleMessage::GetInt(unsigned int)+0x22>

0800abba <OscSimpleMessage::GetBlob(unsigned int)>:
 800abba:	b510      	push	{r4, lr}
 800abbc:	68cb      	ldr	r3, [r1, #12]
 800abbe:	781b      	ldrb	r3, [r3, #0]
 800abc0:	2b62      	cmp	r3, #98	; 0x62
 800abc2:	d10a      	bne.n	800abda <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800abc4:	694a      	ldr	r2, [r1, #20]
 800abc6:	6989      	ldr	r1, [r1, #24]
 800abc8:	6813      	ldr	r3, [r2, #0]
 800abca:	ba1b      	rev	r3, r3
 800abcc:	1d1c      	adds	r4, r3, #4
 800abce:	428c      	cmp	r4, r1
 800abd0:	d803      	bhi.n	800abda <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800abd2:	3204      	adds	r2, #4
 800abd4:	6002      	str	r2, [r0, #0]
 800abd6:	6043      	str	r3, [r0, #4]
 800abd8:	bd10      	pop	{r4, pc}
 800abda:	2300      	movs	r3, #0
 800abdc:	6003      	str	r3, [r0, #0]
 800abde:	e7fa      	b.n	800abd6 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800abe0 <osc::string_size(char const*)>:
 800abe0:	4602      	mov	r2, r0
 800abe2:	4613      	mov	r3, r2
 800abe4:	7819      	ldrb	r1, [r3, #0]
 800abe6:	3201      	adds	r2, #1
 800abe8:	2900      	cmp	r1, #0
 800abea:	d1fa      	bne.n	800abe2 <osc::string_size(char const*)+0x2>
 800abec:	1a18      	subs	r0, r3, r0
 800abee:	f020 0003 	bic.w	r0, r0, #3
 800abf2:	3004      	adds	r0, #4
 800abf4:	4770      	bx	lr
	...

0800abf8 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 800abf8:	b570      	push	{r4, r5, r6, lr}
 800abfa:	2400      	movs	r4, #0
 800abfc:	480a      	ldr	r0, [pc, #40]	; (800ac28 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 800abfe:	1f16      	subs	r6, r2, #4
 800ac00:	1985      	adds	r5, r0, r6
 800ac02:	5584      	strb	r4, [r0, r6]
 800ac04:	706c      	strb	r4, [r5, #1]
 800ac06:	70ac      	strb	r4, [r5, #2]
 800ac08:	70ec      	strb	r4, [r5, #3]
 800ac0a:	4604      	mov	r4, r0
 800ac0c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800ac10:	f800 5b01 	strb.w	r5, [r0], #1
 800ac14:	2d00      	cmp	r5, #0
 800ac16:	d1f9      	bne.n	800ac0c <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 800ac18:	212c      	movs	r1, #44	; 0x2c
 800ac1a:	54a1      	strb	r1, [r4, r2]
 800ac1c:	4422      	add	r2, r4
 800ac1e:	7053      	strb	r3, [r2, #1]
 800ac20:	7095      	strb	r5, [r2, #2]
 800ac22:	70d5      	strb	r5, [r2, #3]
 800ac24:	bd70      	pop	{r4, r5, r6, pc}
 800ac26:	bf00      	nop
 800ac28:	20000ad0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800ac2c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 800ac2c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ac30:	4605      	mov	r5, r0
 800ac32:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800ac36:	460e      	mov	r6, r1
 800ac38:	4617      	mov	r7, r2
 800ac3a:	4698      	mov	r8, r3
 800ac3c:	f1ba 0f00 	cmp.w	sl, #0
 800ac40:	d112      	bne.n	800ac68 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800ac42:	4648      	mov	r0, r9
 800ac44:	f7ff ffcc 	bl	800abe0 <osc::string_size(char const*)>
 800ac48:	4604      	mov	r4, r0
 800ac4a:	4602      	mov	r2, r0
 800ac4c:	4653      	mov	r3, sl
 800ac4e:	4649      	mov	r1, r9
 800ac50:	4628      	mov	r0, r5
 800ac52:	3404      	adds	r4, #4
 800ac54:	f7ff ffd0 	bl	800abf8 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800ac58:	463b      	mov	r3, r7
 800ac5a:	4905      	ldr	r1, [pc, #20]	; (800ac70 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 800ac5c:	f8cd 8000 	str.w	r8, [sp]
 800ac60:	b2a2      	uxth	r2, r4
 800ac62:	b2f0      	uxtb	r0, r6
 800ac64:	f001 fe3e 	bl	800c8e4 <udp_send>
 800ac68:	4628      	mov	r0, r5
 800ac6a:	b002      	add	sp, #8
 800ac6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac70:	20000ad0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800ac74 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800ac74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac78:	b085      	sub	sp, #20
 800ac7a:	460f      	mov	r7, r1
 800ac7c:	4699      	mov	r9, r3
 800ac7e:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800ac82:	4606      	mov	r6, r0
 800ac84:	4690      	mov	r8, r2
 800ac86:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800ac8a:	b35b      	cbz	r3, 800ace4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800ac8c:	781b      	ldrb	r3, [r3, #0]
 800ac8e:	2b73      	cmp	r3, #115	; 0x73
 800ac90:	d128      	bne.n	800ace4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800ac92:	4608      	mov	r0, r1
 800ac94:	9303      	str	r3, [sp, #12]
 800ac96:	f7ff ffa3 	bl	800abe0 <osc::string_size(char const*)>
 800ac9a:	4604      	mov	r4, r0
 800ac9c:	4650      	mov	r0, sl
 800ac9e:	f7ff ff9f 	bl	800abe0 <osc::string_size(char const*)>
 800aca2:	4622      	mov	r2, r4
 800aca4:	1825      	adds	r5, r4, r0
 800aca6:	9b03      	ldr	r3, [sp, #12]
 800aca8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800acaa:	4630      	mov	r0, r6
 800acac:	f7ff ffa4 	bl	800abf8 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800acb0:	2200      	movs	r2, #0
 800acb2:	4b0e      	ldr	r3, [pc, #56]	; (800acec <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800acb4:	3403      	adds	r4, #3
 800acb6:	1959      	adds	r1, r3, r5
 800acb8:	555a      	strb	r2, [r3, r5]
 800acba:	f105 0b04 	add.w	fp, r5, #4
 800acbe:	704a      	strb	r2, [r1, #1]
 800acc0:	708a      	strb	r2, [r1, #2]
 800acc2:	70ca      	strb	r2, [r1, #3]
 800acc4:	4423      	add	r3, r4
 800acc6:	f81a 2b01 	ldrb.w	r2, [sl], #1
 800acca:	f803 2f01 	strb.w	r2, [r3, #1]!
 800acce:	2a00      	cmp	r2, #0
 800acd0:	d1f9      	bne.n	800acc6 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800acd2:	4643      	mov	r3, r8
 800acd4:	4905      	ldr	r1, [pc, #20]	; (800acec <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800acd6:	f8cd 9000 	str.w	r9, [sp]
 800acda:	fa1f f28b 	uxth.w	r2, fp
 800acde:	b2f8      	uxtb	r0, r7
 800ace0:	f001 fe00 	bl	800c8e4 <udp_send>
 800ace4:	4630      	mov	r0, r6
 800ace6:	b005      	add	sp, #20
 800ace8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acec:	20000ad0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800acf0 <DmxSend::~DmxSend()>:
 800acf0:	4770      	bx	lr
	...

0800acf4 <DmxSend::Start(unsigned int)>:
 800acf4:	2301      	movs	r3, #1
 800acf6:	b430      	push	{r4, r5}
 800acf8:	4c08      	ldr	r4, [pc, #32]	; (800ad1c <DmxSend::Start(unsigned int)+0x28>)
 800acfa:	fa03 f001 	lsl.w	r0, r3, r1
 800acfe:	7822      	ldrb	r2, [r4, #0]
 800ad00:	ea30 0502 	bics.w	r5, r0, r2
 800ad04:	d007      	beq.n	800ad16 <DmxSend::Start(unsigned int)+0x22>
 800ad06:	4302      	orrs	r2, r0
 800ad08:	4805      	ldr	r0, [pc, #20]	; (800ad20 <DmxSend::Start(unsigned int)+0x2c>)
 800ad0a:	7022      	strb	r2, [r4, #0]
 800ad0c:	6800      	ldr	r0, [r0, #0]
 800ad0e:	2200      	movs	r2, #0
 800ad10:	bc30      	pop	{r4, r5}
 800ad12:	f000 bccf 	b.w	800b6b4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800ad16:	bc30      	pop	{r4, r5}
 800ad18:	4770      	bx	lr
 800ad1a:	bf00      	nop
 800ad1c:	20000cd0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800ad20:	20001100 	andcs	r1, r0, r0, lsl #2

0800ad24 <DmxSend::Stop(unsigned int)>:
 800ad24:	2201      	movs	r2, #1
 800ad26:	b410      	push	{r4}
 800ad28:	4809      	ldr	r0, [pc, #36]	; (800ad50 <DmxSend::Stop(unsigned int)+0x2c>)
 800ad2a:	408a      	lsls	r2, r1
 800ad2c:	7803      	ldrb	r3, [r0, #0]
 800ad2e:	ea03 0402 	and.w	r4, r3, r2
 800ad32:	439a      	bics	r2, r3
 800ad34:	d109      	bne.n	800ad4a <DmxSend::Stop(unsigned int)+0x26>
 800ad36:	ea23 0304 	bic.w	r3, r3, r4
 800ad3a:	7003      	strb	r3, [r0, #0]
 800ad3c:	2300      	movs	r3, #0
 800ad3e:	4805      	ldr	r0, [pc, #20]	; (800ad54 <DmxSend::Stop(unsigned int)+0x30>)
 800ad40:	461a      	mov	r2, r3
 800ad42:	6800      	ldr	r0, [r0, #0]
 800ad44:	bc10      	pop	{r4}
 800ad46:	f000 bcb5 	b.w	800b6b4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800ad4a:	bc10      	pop	{r4}
 800ad4c:	4770      	bx	lr
 800ad4e:	bf00      	nop
 800ad50:	20000cd0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800ad54:	20001100 	andcs	r1, r0, r0, lsl #2

0800ad58 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800ad58:	b11b      	cbz	r3, 800ad62 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800ad5a:	4802      	ldr	r0, [pc, #8]	; (800ad64 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800ad5c:	6800      	ldr	r0, [r0, #0]
 800ad5e:	f000 be09 	b.w	800b974 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800ad62:	4770      	bx	lr
 800ad64:	20001100 	andcs	r1, r0, r0, lsl #2

0800ad68 <DmxSend::Blackout(bool)>:
 800ad68:	4b01      	ldr	r3, [pc, #4]	; (800ad70 <DmxSend::Blackout(bool)+0x8>)
 800ad6a:	6818      	ldr	r0, [r3, #0]
 800ad6c:	f000 be28 	b.w	800b9c0 <Dmx::Blackout()>
 800ad70:	20001100 	andcs	r1, r0, r0, lsl #2

0800ad74 <DmxSend::FullOn()>:
 800ad74:	4b01      	ldr	r3, [pc, #4]	; (800ad7c <DmxSend::FullOn()+0x8>)
 800ad76:	6818      	ldr	r0, [r3, #0]
 800ad78:	f000 be4a 	b.w	800ba10 <Dmx::FullOn()>
 800ad7c:	20001100 	andcs	r1, r0, r0, lsl #2

0800ad80 <DmxSend::Print()>:
 800ad80:	b510      	push	{r4, lr}
 800ad82:	4c0e      	ldr	r4, [pc, #56]	; (800adbc <DmxSend::Print()+0x3c>)
 800ad84:	480e      	ldr	r0, [pc, #56]	; (800adc0 <DmxSend::Print()+0x40>)
 800ad86:	f7fd fd59 	bl	800883c <printf>
 800ad8a:	6823      	ldr	r3, [r4, #0]
 800ad8c:	480d      	ldr	r0, [pc, #52]	; (800adc4 <DmxSend::Print()+0x44>)
 800ad8e:	6819      	ldr	r1, [r3, #0]
 800ad90:	f7fd fd54 	bl	800883c <printf>
 800ad94:	6823      	ldr	r3, [r4, #0]
 800ad96:	480c      	ldr	r0, [pc, #48]	; (800adc8 <DmxSend::Print()+0x48>)
 800ad98:	6859      	ldr	r1, [r3, #4]
 800ad9a:	f7fd fd4f 	bl	800883c <printf>
 800ad9e:	6823      	ldr	r3, [r4, #0]
 800ada0:	490a      	ldr	r1, [pc, #40]	; (800adcc <DmxSend::Print()+0x4c>)
 800ada2:	689b      	ldr	r3, [r3, #8]
 800ada4:	480a      	ldr	r0, [pc, #40]	; (800add0 <DmxSend::Print()+0x50>)
 800ada6:	fbb1 f1f3 	udiv	r1, r1, r3
 800adaa:	f7fd fd47 	bl	800883c <printf>
 800adae:	6823      	ldr	r3, [r4, #0]
 800adb0:	4808      	ldr	r0, [pc, #32]	; (800add4 <DmxSend::Print()+0x54>)
 800adb2:	8a19      	ldrh	r1, [r3, #16]
 800adb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800adb8:	f7fd bd40 	b.w	800883c <printf>
 800adbc:	20001100 	andcs	r1, r0, r0, lsl #2
 800adc0:	0801227b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sp}
 800adc4:	08012285 	stmdaeq	r1, {r0, r2, r7, r9, sp}
 800adc8:	08012299 	stmdaeq	r1, {r0, r3, r4, r7, r9, sp}
 800adcc:	000f4240 	andeq	r4, pc, r0, asr #4
 800add0:	080122ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sp}
 800add4:	080122c1 	stmdaeq	r1, {r0, r6, r7, r9, sp}

0800add8 <DmxSend::~DmxSend()>:
 800add8:	b510      	push	{r4, lr}
 800adda:	4604      	mov	r4, r0
 800addc:	f004 f84a 	bl	800ee74 <operator delete(void*)>
 800ade0:	4620      	mov	r0, r4
 800ade2:	bd10      	pop	{r4, pc}

0800ade4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800ade4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ade6:	88c6      	ldrh	r6, [r0, #6]
 800ade8:	8885      	ldrh	r5, [r0, #4]
 800adea:	42ae      	cmp	r6, r5
 800adec:	d216      	bcs.n	800ae1c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800adee:	4604      	mov	r4, r0
 800adf0:	6800      	ldr	r0, [r0, #0]
 800adf2:	1bad      	subs	r5, r5, r6
 800adf4:	4430      	add	r0, r6
 800adf6:	7a26      	ldrb	r6, [r4, #8]
 800adf8:	b923      	cbnz	r3, 800ae04 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800adfa:	b926      	cbnz	r6, 800ae06 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800adfc:	9200      	str	r2, [sp, #0]
 800adfe:	460b      	mov	r3, r1
 800ae00:	4a09      	ldr	r2, [pc, #36]	; (800ae28 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800ae02:	e003      	b.n	800ae0c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ae04:	b166      	cbz	r6, 800ae20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800ae06:	460b      	mov	r3, r1
 800ae08:	9200      	str	r2, [sp, #0]
 800ae0a:	4a08      	ldr	r2, [pc, #32]	; (800ae2c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800ae0c:	4629      	mov	r1, r5
 800ae0e:	f7fd fd25 	bl	800885c <snprintf>
 800ae12:	4285      	cmp	r5, r0
 800ae14:	bfa2      	ittt	ge
 800ae16:	88e3      	ldrhge	r3, [r4, #6]
 800ae18:	181b      	addge	r3, r3, r0
 800ae1a:	80e3      	strhge	r3, [r4, #6]
 800ae1c:	b002      	add	sp, #8
 800ae1e:	bd70      	pop	{r4, r5, r6, pc}
 800ae20:	9200      	str	r2, [sp, #0]
 800ae22:	460b      	mov	r3, r1
 800ae24:	4a02      	ldr	r2, [pc, #8]	; (800ae30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ae26:	e7f1      	b.n	800ae0c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ae28:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 800ae2c:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 800ae30:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}

0800ae34 <DmxParams::DmxParams(DmxParamsStore*)>:
 800ae34:	6001      	str	r1, [r0, #0]
 800ae36:	2100      	movs	r1, #0
 800ae38:	4a03      	ldr	r2, [pc, #12]	; (800ae48 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800ae3a:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ae3e:	f64f 7228 	movw	r2, #65320	; 0xff28
 800ae42:	8182      	strh	r2, [r0, #12]
 800ae44:	4770      	bx	lr
 800ae46:	bf00      	nop
 800ae48:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800ae4c <DmxParams::Load()>:
 800ae4c:	b508      	push	{r3, lr}
 800ae4e:	2300      	movs	r3, #0
 800ae50:	4601      	mov	r1, r0
 800ae52:	6043      	str	r3, [r0, #4]
 800ae54:	6800      	ldr	r0, [r0, #0]
 800ae56:	b120      	cbz	r0, 800ae62 <DmxParams::Load()+0x16>
 800ae58:	6803      	ldr	r3, [r0, #0]
 800ae5a:	3104      	adds	r1, #4
 800ae5c:	68db      	ldr	r3, [r3, #12]
 800ae5e:	4798      	blx	r3
 800ae60:	2001      	movs	r0, #1
 800ae62:	bd08      	pop	{r3, pc}

0800ae64 <DmxParams::Load(char const*, unsigned int)>:
 800ae64:	6803      	ldr	r3, [r0, #0]
 800ae66:	b1d3      	cbz	r3, 800ae9e <DmxParams::Load(char const*, unsigned int)+0x3a>
 800ae68:	2300      	movs	r3, #0
 800ae6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae6c:	460d      	mov	r5, r1
 800ae6e:	4616      	mov	r6, r2
 800ae70:	4604      	mov	r4, r0
 800ae72:	6043      	str	r3, [r0, #4]
 800ae74:	4602      	mov	r2, r0
 800ae76:	490a      	ldr	r1, [pc, #40]	; (800aea0 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800ae78:	4668      	mov	r0, sp
 800ae7a:	f003 faef 	bl	800e45c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ae7e:	4632      	mov	r2, r6
 800ae80:	4629      	mov	r1, r5
 800ae82:	4668      	mov	r0, sp
 800ae84:	f003 faee 	bl	800e464 <ReadConfigFile::Read(char const*, unsigned int)>
 800ae88:	4621      	mov	r1, r4
 800ae8a:	f851 0b04 	ldr.w	r0, [r1], #4
 800ae8e:	6803      	ldr	r3, [r0, #0]
 800ae90:	689b      	ldr	r3, [r3, #8]
 800ae92:	4798      	blx	r3
 800ae94:	4668      	mov	r0, sp
 800ae96:	f003 fae4 	bl	800e462 <ReadConfigFile::~ReadConfigFile()>
 800ae9a:	b002      	add	sp, #8
 800ae9c:	bd70      	pop	{r4, r5, r6, pc}
 800ae9e:	4770      	bx	lr
 800aea0:	0800af71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, fp, sp, pc}

0800aea4 <DmxParams::callbackFunction(char const*)>:
 800aea4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aea6:	460d      	mov	r5, r1
 800aea8:	4604      	mov	r4, r0
 800aeaa:	492d      	ldr	r1, [pc, #180]	; (800af60 <DmxParams::callbackFunction(char const*)+0xbc>)
 800aeac:	4628      	mov	r0, r5
 800aeae:	f10d 0206 	add.w	r2, sp, #6
 800aeb2:	f003 fb65 	bl	800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aeb6:	b988      	cbnz	r0, 800aedc <DmxParams::callbackFunction(char const*)+0x38>
 800aeb8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aebc:	6863      	ldr	r3, [r4, #4]
 800aebe:	2a5b      	cmp	r2, #91	; 0x5b
 800aec0:	d907      	bls.n	800aed2 <DmxParams::callbackFunction(char const*)+0x2e>
 800aec2:	2ab0      	cmp	r2, #176	; 0xb0
 800aec4:	d005      	beq.n	800aed2 <DmxParams::callbackFunction(char const*)+0x2e>
 800aec6:	8122      	strh	r2, [r4, #8]
 800aec8:	f043 0301 	orr.w	r3, r3, #1
 800aecc:	6063      	str	r3, [r4, #4]
 800aece:	b003      	add	sp, #12
 800aed0:	bd30      	pop	{r4, r5, pc}
 800aed2:	22b0      	movs	r2, #176	; 0xb0
 800aed4:	f023 0301 	bic.w	r3, r3, #1
 800aed8:	8122      	strh	r2, [r4, #8]
 800aeda:	e7f7      	b.n	800aecc <DmxParams::callbackFunction(char const*)+0x28>
 800aedc:	4628      	mov	r0, r5
 800aede:	4921      	ldr	r1, [pc, #132]	; (800af64 <DmxParams::callbackFunction(char const*)+0xc0>)
 800aee0:	f10d 0206 	add.w	r2, sp, #6
 800aee4:	f003 fb4c 	bl	800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aee8:	b968      	cbnz	r0, 800af06 <DmxParams::callbackFunction(char const*)+0x62>
 800aeea:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aeee:	6863      	ldr	r3, [r4, #4]
 800aef0:	2a0c      	cmp	r2, #12
 800aef2:	bf93      	iteet	ls
 800aef4:	220c      	movls	r2, #12
 800aef6:	8162      	strhhi	r2, [r4, #10]
 800aef8:	f043 0302 	orrhi.w	r3, r3, #2
 800aefc:	8162      	strhls	r2, [r4, #10]
 800aefe:	bf98      	it	ls
 800af00:	f023 0302 	bicls.w	r3, r3, #2
 800af04:	e7e2      	b.n	800aecc <DmxParams::callbackFunction(char const*)+0x28>
 800af06:	4628      	mov	r0, r5
 800af08:	4917      	ldr	r1, [pc, #92]	; (800af68 <DmxParams::callbackFunction(char const*)+0xc4>)
 800af0a:	f10d 0205 	add.w	r2, sp, #5
 800af0e:	f003 fb55 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af12:	b950      	cbnz	r0, 800af2a <DmxParams::callbackFunction(char const*)+0x86>
 800af14:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800af18:	6863      	ldr	r3, [r4, #4]
 800af1a:	2a28      	cmp	r2, #40	; 0x28
 800af1c:	7322      	strb	r2, [r4, #12]
 800af1e:	bf14      	ite	ne
 800af20:	f043 0304 	orrne.w	r3, r3, #4
 800af24:	f023 0304 	biceq.w	r3, r3, #4
 800af28:	e7d0      	b.n	800aecc <DmxParams::callbackFunction(char const*)+0x28>
 800af2a:	4628      	mov	r0, r5
 800af2c:	490f      	ldr	r1, [pc, #60]	; (800af6c <DmxParams::callbackFunction(char const*)+0xc8>)
 800af2e:	f10d 0206 	add.w	r2, sp, #6
 800af32:	f003 fb25 	bl	800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800af36:	2800      	cmp	r0, #0
 800af38:	d1c9      	bne.n	800aece <DmxParams::callbackFunction(char const*)+0x2a>
 800af3a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800af3e:	6863      	ldr	r3, [r4, #4]
 800af40:	1e91      	subs	r1, r2, #2
 800af42:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800af46:	bf2f      	iteee	cs
 800af48:	22ff      	movcs	r2, #255	; 0xff
 800af4a:	0852      	lsrcc	r2, r2, #1
 800af4c:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800af50:	7362      	strbcc	r2, [r4, #13]
 800af52:	bf32      	itee	cc
 800af54:	f043 0308 	orrcc.w	r3, r3, #8
 800af58:	7362      	strbcs	r2, [r4, #13]
 800af5a:	f023 0308 	biccs.w	r3, r3, #8
 800af5e:	e7b5      	b.n	800aecc <DmxParams::callbackFunction(char const*)+0x28>
 800af60:	08012310 	stmdaeq	r1, {r4, r8, r9, sp}
 800af64:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}
 800af68:	08012327 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sp}
 800af6c:	0801231b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, sp}

0800af70 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800af70:	f7ff bf98 	b.w	800aea4 <DmxParams::callbackFunction(char const*)>

0800af74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800af74:	b570      	push	{r4, r5, r6, lr}
 800af76:	4604      	mov	r4, r0
 800af78:	4615      	mov	r5, r2
 800af7a:	461e      	mov	r6, r3
 800af7c:	b086      	sub	sp, #24
 800af7e:	3004      	adds	r0, #4
 800af80:	b369      	cbz	r1, 800afde <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800af82:	220a      	movs	r2, #10
 800af84:	f004 f839 	bl	800effa <memmove>
 800af88:	462a      	mov	r2, r5
 800af8a:	4633      	mov	r3, r6
 800af8c:	4932      	ldr	r1, [pc, #200]	; (800b058 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800af8e:	a803      	add	r0, sp, #12
 800af90:	f003 f9c4 	bl	800e31c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800af94:	6863      	ldr	r3, [r4, #4]
 800af96:	8922      	ldrh	r2, [r4, #8]
 800af98:	4930      	ldr	r1, [pc, #192]	; (800b05c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800af9a:	f003 0301 	and.w	r3, r3, #1
 800af9e:	a803      	add	r0, sp, #12
 800afa0:	f7ff ff20 	bl	800ade4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800afa4:	6863      	ldr	r3, [r4, #4]
 800afa6:	8962      	ldrh	r2, [r4, #10]
 800afa8:	492d      	ldr	r1, [pc, #180]	; (800b060 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800afaa:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800afae:	a803      	add	r0, sp, #12
 800afb0:	f7ff ff18 	bl	800ade4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800afb4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800afb8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800afbc:	7b23      	ldrb	r3, [r4, #12]
 800afbe:	42aa      	cmp	r2, r5
 800afc0:	6861      	ldr	r1, [r4, #4]
 800afc2:	d221      	bcs.n	800b008 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800afc4:	9803      	ldr	r0, [sp, #12]
 800afc6:	0749      	lsls	r1, r1, #29
 800afc8:	4410      	add	r0, r2
 800afca:	eba5 0502 	sub.w	r5, r5, r2
 800afce:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800afd2:	d40b      	bmi.n	800afec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800afd4:	b95a      	cbnz	r2, 800afee <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800afd6:	9300      	str	r3, [sp, #0]
 800afd8:	4a22      	ldr	r2, [pc, #136]	; (800b064 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800afda:	4b23      	ldr	r3, [pc, #140]	; (800b068 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800afdc:	e00a      	b.n	800aff4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800afde:	6823      	ldr	r3, [r4, #0]
 800afe0:	4601      	mov	r1, r0
 800afe2:	681a      	ldr	r2, [r3, #0]
 800afe4:	4618      	mov	r0, r3
 800afe6:	68d2      	ldr	r2, [r2, #12]
 800afe8:	4790      	blx	r2
 800afea:	e7cd      	b.n	800af88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800afec:	b37a      	cbz	r2, 800b04e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800afee:	9300      	str	r3, [sp, #0]
 800aff0:	4a1e      	ldr	r2, [pc, #120]	; (800b06c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800aff2:	4b1d      	ldr	r3, [pc, #116]	; (800b068 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800aff4:	4629      	mov	r1, r5
 800aff6:	f7fd fc31 	bl	800885c <snprintf>
 800affa:	4285      	cmp	r5, r0
 800affc:	bfa2      	ittt	ge
 800affe:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b002:	18c0      	addge	r0, r0, r3
 800b004:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b008:	7b62      	ldrb	r2, [r4, #13]
 800b00a:	6863      	ldr	r3, [r4, #4]
 800b00c:	3201      	adds	r2, #1
 800b00e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800b012:	4917      	ldr	r1, [pc, #92]	; (800b070 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800b014:	0052      	lsls	r2, r2, #1
 800b016:	a803      	add	r0, sp, #12
 800b018:	f7ff fee4 	bl	800ade4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b01c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b020:	b17b      	cbz	r3, 800b042 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800b022:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b026:	9b03      	ldr	r3, [sp, #12]
 800b028:	4413      	add	r3, r2
 800b02a:	227d      	movs	r2, #125	; 0x7d
 800b02c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b030:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b034:	9903      	ldr	r1, [sp, #12]
 800b036:	54ca      	strb	r2, [r1, r3]
 800b038:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b03c:	3301      	adds	r3, #1
 800b03e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b042:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b046:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b048:	601a      	str	r2, [r3, #0]
 800b04a:	b006      	add	sp, #24
 800b04c:	bd70      	pop	{r4, r5, r6, pc}
 800b04e:	9300      	str	r3, [sp, #0]
 800b050:	4a08      	ldr	r2, [pc, #32]	; (800b074 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b052:	4b05      	ldr	r3, [pc, #20]	; (800b068 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800b054:	e7ce      	b.n	800aff4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800b056:	bf00      	nop
 800b058:	0801233d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sp}
 800b05c:	08012310 	stmdaeq	r1, {r4, r8, r9, sp}
 800b060:	08012334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp}
 800b064:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 800b068:	08012327 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sp}
 800b06c:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 800b070:	0801231b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, sp}
 800b074:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}

0800b078 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800b078:	b513      	push	{r0, r1, r4, lr}
 800b07a:	6804      	ldr	r4, [r0, #0]
 800b07c:	b914      	cbnz	r4, 800b084 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b07e:	601c      	str	r4, [r3, #0]
 800b080:	b002      	add	sp, #8
 800b082:	bd10      	pop	{r4, pc}
 800b084:	9300      	str	r3, [sp, #0]
 800b086:	4613      	mov	r3, r2
 800b088:	460a      	mov	r2, r1
 800b08a:	2100      	movs	r1, #0
 800b08c:	f7ff ff72 	bl	800af74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800b090:	e7f6      	b.n	800b080 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800b094 <DmxParams::Set(Dmx*)>:
 800b094:	b538      	push	{r3, r4, r5, lr}
 800b096:	6843      	ldr	r3, [r0, #4]
 800b098:	4604      	mov	r4, r0
 800b09a:	07d8      	lsls	r0, r3, #31
 800b09c:	460d      	mov	r5, r1
 800b09e:	d503      	bpl.n	800b0a8 <DmxParams::Set(Dmx*)+0x14>
 800b0a0:	4628      	mov	r0, r5
 800b0a2:	8921      	ldrh	r1, [r4, #8]
 800b0a4:	f000 fc42 	bl	800b92c <Dmx::SetDmxBreakTime(unsigned int)>
 800b0a8:	6863      	ldr	r3, [r4, #4]
 800b0aa:	0799      	lsls	r1, r3, #30
 800b0ac:	d503      	bpl.n	800b0b6 <DmxParams::Set(Dmx*)+0x22>
 800b0ae:	4628      	mov	r0, r5
 800b0b0:	8961      	ldrh	r1, [r4, #10]
 800b0b2:	f000 fc45 	bl	800b940 <Dmx::SetDmxMabTime(unsigned int)>
 800b0b6:	6863      	ldr	r3, [r4, #4]
 800b0b8:	075a      	lsls	r2, r3, #29
 800b0ba:	d507      	bpl.n	800b0cc <DmxParams::Set(Dmx*)+0x38>
 800b0bc:	7b21      	ldrb	r1, [r4, #12]
 800b0be:	b111      	cbz	r1, 800b0c6 <DmxParams::Set(Dmx*)+0x32>
 800b0c0:	4b08      	ldr	r3, [pc, #32]	; (800b0e4 <DmxParams::Set(Dmx*)+0x50>)
 800b0c2:	fbb3 f1f1 	udiv	r1, r3, r1
 800b0c6:	4628      	mov	r0, r5
 800b0c8:	f000 fc00 	bl	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 800b0cc:	6863      	ldr	r3, [r4, #4]
 800b0ce:	071b      	lsls	r3, r3, #28
 800b0d0:	d507      	bpl.n	800b0e2 <DmxParams::Set(Dmx*)+0x4e>
 800b0d2:	7b61      	ldrb	r1, [r4, #13]
 800b0d4:	4628      	mov	r0, r5
 800b0d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b0da:	3101      	adds	r1, #1
 800b0dc:	0049      	lsls	r1, r1, #1
 800b0de:	f000 bc39 	b.w	800b954 <Dmx::SetDmxSlots(unsigned short)>
 800b0e2:	bd38      	pop	{r3, r4, r5, pc}
 800b0e4:	000f4240 	andeq	r4, pc, r0, asr #4

0800b0e8 <DmxParams::Dump()>:
 800b0e8:	4770      	bx	lr
	...

0800b0ec <USART2_IRQHandler>:
 800b0ec:	b510      	push	{r4, lr}
 800b0ee:	f3bf 8f5f 	dmb	sy
 800b0f2:	2408      	movs	r4, #8
 800b0f4:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 800b0f8:	498c      	ldr	r1, [pc, #560]	; (800b32c <USART2_IRQHandler+0x240>)
 800b0fa:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800b0fe:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800b102:	f013 0f02 	tst.w	r3, #2
 800b106:	4b8a      	ldr	r3, [pc, #552]	; (800b330 <USART2_IRQHandler+0x244>)
 800b108:	d016      	beq.n	800b138 <USART2_IRQHandler+0x4c>
 800b10a:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800b10e:	f020 0002 	bic.w	r0, r0, #2
 800b112:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 800b116:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b11a:	2200      	movs	r2, #0
 800b11c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b120:	2202      	movs	r2, #2
 800b122:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b126:	2310      	movs	r3, #16
 800b128:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800b12c:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b130:	2320      	movs	r3, #32
 800b132:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b136:	bd10      	pop	{r4, pc}
 800b138:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b13c:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 800b140:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b144:	280a      	cmp	r0, #10
 800b146:	f200 80ec 	bhi.w	800b322 <USART2_IRQHandler+0x236>
 800b14a:	e8df f010 	tbh	[pc, r0, lsl #1]
 800b14e:	00ea000b 	rsceq	r0, sl, fp
 800b152:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 800b156:	005c0039 	subseq	r0, ip, r9, lsr r0
 800b15a:	00870077 	addeq	r0, r7, r7, ror r0
 800b15e:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 800b162:	210800ce 	smlabtcs	r8, lr, r0, r0
 800b166:	701a      	strb	r2, [r3, #0]
 800b168:	2201      	movs	r2, #1
 800b16a:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b16e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b172:	2208      	movs	r2, #8
 800b174:	4b6d      	ldr	r3, [pc, #436]	; (800b32c <USART2_IRQHandler+0x240>)
 800b176:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b17a:	f3bf 8f5f 	dmb	sy
 800b17e:	e7da      	b.n	800b136 <USART2_IRQHandler+0x4a>
 800b180:	b11a      	cbz	r2, 800b18a <USART2_IRQHandler+0x9e>
 800b182:	2acc      	cmp	r2, #204	; 0xcc
 800b184:	d016      	beq.n	800b1b4 <USART2_IRQHandler+0xc8>
 800b186:	2200      	movs	r2, #0
 800b188:	e065      	b.n	800b256 <USART2_IRQHandler+0x16a>
 800b18a:	701a      	strb	r2, [r3, #0]
 800b18c:	2201      	movs	r2, #1
 800b18e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b192:	4a68      	ldr	r2, [pc, #416]	; (800b334 <USART2_IRQHandler+0x248>)
 800b194:	6851      	ldr	r1, [r2, #4]
 800b196:	3101      	adds	r1, #1
 800b198:	6051      	str	r1, [r2, #4]
 800b19a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800b19e:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 800b1a2:	60d1      	str	r1, [r2, #12]
 800b1a4:	2204      	movs	r2, #4
 800b1a6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1aa:	2210      	movs	r2, #16
 800b1ac:	4b5f      	ldr	r3, [pc, #380]	; (800b32c <USART2_IRQHandler+0x240>)
 800b1ae:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b1b2:	e7de      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b1b4:	701a      	strb	r2, [r3, #0]
 800b1b6:	4a60      	ldr	r2, [pc, #384]	; (800b338 <USART2_IRQHandler+0x24c>)
 800b1b8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1bc:	2205      	movs	r2, #5
 800b1be:	e7f2      	b.n	800b1a6 <USART2_IRQHandler+0xba>
 800b1c0:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b1c4:	b288      	uxth	r0, r1
 800b1c6:	541a      	strb	r2, [r3, r0]
 800b1c8:	1c4a      	adds	r2, r1, #1
 800b1ca:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800b1ce:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1d2:	d90b      	bls.n	800b1ec <USART2_IRQHandler+0x100>
 800b1d4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b1d8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1dc:	2200      	movs	r2, #0
 800b1de:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1e2:	2210      	movs	r2, #16
 800b1e4:	4b51      	ldr	r3, [pc, #324]	; (800b32c <USART2_IRQHandler+0x240>)
 800b1e6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b1ea:	e7c2      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b1ec:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b1f0:	4850      	ldr	r0, [pc, #320]	; (800b334 <USART2_IRQHandler+0x248>)
 800b1f2:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 800b1f6:	68c3      	ldr	r3, [r0, #12]
 800b1f8:	60c1      	str	r1, [r0, #12]
 800b1fa:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 800b1fe:	3304      	adds	r3, #4
 800b200:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 800b204:	e7b5      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b206:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800b20a:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800b20e:	541a      	strb	r2, [r3, r0]
 800b210:	1c41      	adds	r1, r0, #1
 800b212:	3817      	subs	r0, #23
 800b214:	b289      	uxth	r1, r1
 800b216:	4422      	add	r2, r4
 800b218:	28e7      	cmp	r0, #231	; 0xe7
 800b21a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b21e:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b222:	d808      	bhi.n	800b236 <USART2_IRQHandler+0x14a>
 800b224:	789a      	ldrb	r2, [r3, #2]
 800b226:	428a      	cmp	r2, r1
 800b228:	d105      	bne.n	800b236 <USART2_IRQHandler+0x14a>
 800b22a:	2206      	movs	r2, #6
 800b22c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b230:	2220      	movs	r2, #32
 800b232:	4b3e      	ldr	r3, [pc, #248]	; (800b32c <USART2_IRQHandler+0x240>)
 800b234:	e7bb      	b.n	800b1ae <USART2_IRQHandler+0xc2>
 800b236:	29ff      	cmp	r1, #255	; 0xff
 800b238:	d99b      	bls.n	800b172 <USART2_IRQHandler+0x86>
 800b23a:	e7a4      	b.n	800b186 <USART2_IRQHandler+0x9a>
 800b23c:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b240:	545a      	strb	r2, [r3, r1]
 800b242:	3101      	adds	r1, #1
 800b244:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b248:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 800b24c:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 800b250:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b254:	2207      	movs	r2, #7
 800b256:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b25a:	e78a      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b25c:	2020      	movs	r0, #32
 800b25e:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800b262:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800b266:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 800b26a:	541a      	strb	r2, [r3, r0]
 800b26c:	1aa2      	subs	r2, r4, r2
 800b26e:	b292      	uxth	r2, r2
 800b270:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800b274:	b912      	cbnz	r2, 800b27c <USART2_IRQHandler+0x190>
 800b276:	785a      	ldrb	r2, [r3, #1]
 800b278:	2a01      	cmp	r2, #1
 800b27a:	d003      	beq.n	800b284 <USART2_IRQHandler+0x198>
 800b27c:	2200      	movs	r2, #0
 800b27e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b282:	e780      	b.n	800b186 <USART2_IRQHandler+0x9a>
 800b284:	3001      	adds	r0, #1
 800b286:	4a2d      	ldr	r2, [pc, #180]	; (800b33c <USART2_IRQHandler+0x250>)
 800b288:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 800b28c:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 800b290:	6850      	ldr	r0, [r2, #4]
 800b292:	4a2b      	ldr	r2, [pc, #172]	; (800b340 <USART2_IRQHandler+0x254>)
 800b294:	6010      	str	r0, [r2, #0]
 800b296:	2210      	movs	r2, #16
 800b298:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 800b29c:	e773      	b.n	800b186 <USART2_IRQHandler+0x9a>
 800b29e:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b2a2:	2aaa      	cmp	r2, #170	; 0xaa
 800b2a4:	545a      	strb	r2, [r3, r1]
 800b2a6:	f101 0101 	add.w	r1, r1, #1
 800b2aa:	b289      	uxth	r1, r1
 800b2ac:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b2b0:	d002      	beq.n	800b2b8 <USART2_IRQHandler+0x1cc>
 800b2b2:	2909      	cmp	r1, #9
 800b2b4:	f47f af5d 	bne.w	800b172 <USART2_IRQHandler+0x86>
 800b2b8:	2200      	movs	r2, #0
 800b2ba:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b2be:	2209      	movs	r2, #9
 800b2c0:	e7c9      	b.n	800b256 <USART2_IRQHandler+0x16a>
 800b2c2:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b2c6:	545a      	strb	r2, [r3, r1]
 800b2c8:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800b2cc:	3101      	adds	r1, #1
 800b2ce:	3201      	adds	r2, #1
 800b2d0:	b292      	uxth	r2, r2
 800b2d2:	2a0c      	cmp	r2, #12
 800b2d4:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800b2d8:	d002      	beq.n	800b2e0 <USART2_IRQHandler+0x1f4>
 800b2da:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b2de:	e748      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b2e0:	2200      	movs	r2, #0
 800b2e2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b2e6:	220a      	movs	r2, #10
 800b2e8:	e7b5      	b.n	800b256 <USART2_IRQHandler+0x16a>
 800b2ea:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800b2ee:	545a      	strb	r2, [r3, r1]
 800b2f0:	1c4a      	adds	r2, r1, #1
 800b2f2:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800b2f6:	b292      	uxth	r2, r2
 800b2f8:	3101      	adds	r1, #1
 800b2fa:	b289      	uxth	r1, r1
 800b2fc:	2904      	cmp	r1, #4
 800b2fe:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b302:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800b306:	f47f af34 	bne.w	800b172 <USART2_IRQHandler+0x86>
 800b30a:	2100      	movs	r1, #0
 800b30c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b310:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b314:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800b318:	4b08      	ldr	r3, [pc, #32]	; (800b33c <USART2_IRQHandler+0x250>)
 800b31a:	685a      	ldr	r2, [r3, #4]
 800b31c:	4b08      	ldr	r3, [pc, #32]	; (800b340 <USART2_IRQHandler+0x254>)
 800b31e:	601a      	str	r2, [r3, #0]
 800b320:	e727      	b.n	800b172 <USART2_IRQHandler+0x86>
 800b322:	2200      	movs	r2, #0
 800b324:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b328:	e795      	b.n	800b256 <USART2_IRQHandler+0x16a>
 800b32a:	bf00      	nop
 800b32c:	40010000 	andmi	r0, r1, r0
 800b330:	20000cd4 	ldrdcs	r0, [r0], -r4
 800b334:	200010ec 	andcs	r1, r0, ip, ror #1
 800b338:	00cc0001 	sbceq	r0, ip, r1
 800b33c:	e0001000 	and	r1, r0, r0
 800b340:	20001104 	andcs	r1, r0, r4, lsl #2

0800b344 <TIMER1_IRQHandler>:
 800b344:	b538      	push	{r3, r4, r5, lr}
 800b346:	f3bf 8f5f 	dmb	sy
 800b34a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b34e:	2008      	movs	r0, #8
 800b350:	4a24      	ldr	r2, [pc, #144]	; (800b3e4 <TIMER1_IRQHandler+0xa0>)
 800b352:	691c      	ldr	r4, [r3, #16]
 800b354:	4924      	ldr	r1, [pc, #144]	; (800b3e8 <TIMER1_IRQHandler+0xa4>)
 800b356:	8813      	ldrh	r3, [r2, #0]
 800b358:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 800b35c:	07a1      	lsls	r1, r4, #30
 800b35e:	b29b      	uxth	r3, r3
 800b360:	d51d      	bpl.n	800b39e <TIMER1_IRQHandler+0x5a>
 800b362:	07dd      	lsls	r5, r3, #31
 800b364:	d50f      	bpl.n	800b386 <TIMER1_IRQHandler+0x42>
 800b366:	8813      	ldrh	r3, [r2, #0]
 800b368:	4d20      	ldr	r5, [pc, #128]	; (800b3ec <TIMER1_IRQHandler+0xa8>)
 800b36a:	b29b      	uxth	r3, r3
 800b36c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b370:	8013      	strh	r3, [r2, #0]
 800b372:	2110      	movs	r1, #16
 800b374:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b378:	2203      	movs	r2, #3
 800b37a:	4628      	mov	r0, r5
 800b37c:	f004 f974 	bl	800f668 <gpio_init>
 800b380:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b384:	616b      	str	r3, [r5, #20]
 800b386:	4621      	mov	r1, r4
 800b388:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b38c:	f004 fc49 	bl	800fc22 <timer_interrupt_flag_clear>
 800b390:	2208      	movs	r2, #8
 800b392:	4b15      	ldr	r3, [pc, #84]	; (800b3e8 <TIMER1_IRQHandler+0xa4>)
 800b394:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b398:	f3bf 8f5f 	dmb	sy
 800b39c:	bd38      	pop	{r3, r4, r5, pc}
 800b39e:	0760      	lsls	r0, r4, #29
 800b3a0:	d509      	bpl.n	800b3b6 <TIMER1_IRQHandler+0x72>
 800b3a2:	05d9      	lsls	r1, r3, #23
 800b3a4:	d5ef      	bpl.n	800b386 <TIMER1_IRQHandler+0x42>
 800b3a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b3aa:	2203      	movs	r2, #3
 800b3ac:	2118      	movs	r1, #24
 800b3ae:	480f      	ldr	r0, [pc, #60]	; (800b3ec <TIMER1_IRQHandler+0xa8>)
 800b3b0:	f004 f95a 	bl	800f668 <gpio_init>
 800b3b4:	e7e7      	b.n	800b386 <TIMER1_IRQHandler+0x42>
 800b3b6:	0722      	lsls	r2, r4, #28
 800b3b8:	d5e5      	bpl.n	800b386 <TIMER1_IRQHandler+0x42>
 800b3ba:	05db      	lsls	r3, r3, #23
 800b3bc:	d5e3      	bpl.n	800b386 <TIMER1_IRQHandler+0x42>
 800b3be:	4b0c      	ldr	r3, [pc, #48]	; (800b3f0 <TIMER1_IRQHandler+0xac>)
 800b3c0:	2180      	movs	r1, #128	; 0x80
 800b3c2:	69da      	ldr	r2, [r3, #28]
 800b3c4:	480b      	ldr	r0, [pc, #44]	; (800b3f4 <TIMER1_IRQHandler+0xb0>)
 800b3c6:	f022 0201 	bic.w	r2, r2, #1
 800b3ca:	61da      	str	r2, [r3, #28]
 800b3cc:	4a0a      	ldr	r2, [pc, #40]	; (800b3f8 <TIMER1_IRQHandler+0xb4>)
 800b3ce:	629a      	str	r2, [r3, #40]	; 0x28
 800b3d0:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800b3d4:	621a      	str	r2, [r3, #32]
 800b3d6:	69da      	ldr	r2, [r3, #28]
 800b3d8:	f042 0201 	orr.w	r2, r2, #1
 800b3dc:	61da      	str	r2, [r3, #28]
 800b3de:	f004 fcbf 	bl	800fd60 <usart_dma_transmit_config>
 800b3e2:	e7d0      	b.n	800b386 <TIMER1_IRQHandler+0x42>
 800b3e4:	200010fc 	strdcs	r1, [r0], -ip
 800b3e8:	40010000 	andmi	r0, r1, r0
 800b3ec:	40011000 	andmi	r1, r1, r0
 800b3f0:	40020000 	andmi	r0, r2, r0
 800b3f4:	40004800 	andmi	r4, r0, r0, lsl #16
 800b3f8:	20000ee4 	andcs	r0, r0, r4, ror #29

0800b3fc <TIMER2_IRQHandler>:
 800b3fc:	b508      	push	{r3, lr}
 800b3fe:	f3bf 8f5f 	dmb	sy
 800b402:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b406:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800b40a:	078b      	lsls	r3, r1, #30
 800b40c:	d511      	bpl.n	800b432 <TIMER2_IRQHandler+0x36>
 800b40e:	4b0c      	ldr	r3, [pc, #48]	; (800b440 <TIMER2_IRQHandler+0x44>)
 800b410:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b414:	2a04      	cmp	r2, #4
 800b416:	d10c      	bne.n	800b432 <TIMER2_IRQHandler+0x36>
 800b418:	2200      	movs	r2, #0
 800b41a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b41e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b422:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b426:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b42a:	2210      	movs	r2, #16
 800b42c:	4b05      	ldr	r3, [pc, #20]	; (800b444 <TIMER2_IRQHandler+0x48>)
 800b42e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b432:	4805      	ldr	r0, [pc, #20]	; (800b448 <TIMER2_IRQHandler+0x4c>)
 800b434:	f004 fbf5 	bl	800fc22 <timer_interrupt_flag_clear>
 800b438:	f3bf 8f5f 	dmb	sy
 800b43c:	bd08      	pop	{r3, pc}
 800b43e:	bf00      	nop
 800b440:	20000cd4 	ldrdcs	r0, [r0], -r4
 800b444:	40010000 	andmi	r0, r1, r0
 800b448:	40000400 	andmi	r0, r0, r0, lsl #8

0800b44c <TIMER3_IRQHandler>:
 800b44c:	b508      	push	{r3, lr}
 800b44e:	f3bf 8f5f 	dmb	sy
 800b452:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b456:	4804      	ldr	r0, [pc, #16]	; (800b468 <TIMER3_IRQHandler+0x1c>)
 800b458:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800b45c:	f004 fbe1 	bl	800fc22 <timer_interrupt_flag_clear>
 800b460:	f3bf 8f5f 	dmb	sy
 800b464:	bd08      	pop	{r3, pc}
 800b466:	bf00      	nop
 800b468:	40000800 	andmi	r0, r0, r0, lsl #16

0800b46c <TIMER6_IRQHandler>:
 800b46c:	b508      	push	{r3, lr}
 800b46e:	f3bf 8f5f 	dmb	sy
 800b472:	4b07      	ldr	r3, [pc, #28]	; (800b490 <TIMER6_IRQHandler+0x24>)
 800b474:	4807      	ldr	r0, [pc, #28]	; (800b494 <TIMER6_IRQHandler+0x28>)
 800b476:	685a      	ldr	r2, [r3, #4]
 800b478:	6899      	ldr	r1, [r3, #8]
 800b47a:	1a52      	subs	r2, r2, r1
 800b47c:	601a      	str	r2, [r3, #0]
 800b47e:	685a      	ldr	r2, [r3, #4]
 800b480:	2101      	movs	r1, #1
 800b482:	609a      	str	r2, [r3, #8]
 800b484:	f004 fbcd 	bl	800fc22 <timer_interrupt_flag_clear>
 800b488:	f3bf 8f5f 	dmb	sy
 800b48c:	bd08      	pop	{r3, pc}
 800b48e:	bf00      	nop
 800b490:	200010ec 	andcs	r1, r0, ip, ror #1
 800b494:	40001400 	andmi	r1, r0, r0, lsl #8

0800b498 <Dmx::ClearData(unsigned int)>:
 800b498:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b49c:	b510      	push	{r4, lr}
 800b49e:	2400      	movs	r4, #0
 800b4a0:	4a08      	ldr	r2, [pc, #32]	; (800b4c4 <Dmx::ClearData(unsigned int)+0x2c>)
 800b4a2:	fb03 2301 	mla	r3, r3, r1, r2
 800b4a6:	f203 2002 	addw	r0, r3, #514	; 0x202
 800b4aa:	f823 4b02 	strh.w	r4, [r3], #2
 800b4ae:	4283      	cmp	r3, r0
 800b4b0:	d1fb      	bne.n	800b4aa <Dmx::ClearData(unsigned int)+0x12>
 800b4b2:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b4b6:	fb03 2201 	mla	r2, r3, r1, r2
 800b4ba:	f240 2301 	movw	r3, #513	; 0x201
 800b4be:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800b4c2:	bd10      	pop	{r4, pc}
 800b4c4:	20000ee4 	andcs	r0, r0, r4, ror #29

0800b4c8 <Dmx::StartData(unsigned int, unsigned int)>:
 800b4c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4ca:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800b4ce:	6943      	ldr	r3, [r0, #20]
 800b4d0:	460c      	mov	r4, r1
 800b4d2:	4615      	mov	r5, r2
 800b4d4:	b085      	sub	sp, #20
 800b4d6:	2b00      	cmp	r3, #0
 800b4d8:	d16c      	bne.n	800b5b4 <Dmx::StartData(unsigned int, unsigned int)+0xec>
 800b4da:	4e48      	ldr	r6, [pc, #288]	; (800b5fc <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800b4dc:	8834      	ldrh	r4, [r6, #0]
 800b4de:	b2a4      	uxth	r4, r4
 800b4e0:	2c00      	cmp	r4, #0
 800b4e2:	d15b      	bne.n	800b59c <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 800b4e4:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800b4e8:	f004 f956 	bl	800f798 <rcu_periph_clock_enable>
 800b4ec:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4f0:	f004 faa0 	bl	800fa34 <timer_deinit>
 800b4f4:	236b      	movs	r3, #107	; 0x6b
 800b4f6:	9300      	str	r3, [sp, #0]
 800b4f8:	4b41      	ldr	r3, [pc, #260]	; (800b600 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800b4fa:	4669      	mov	r1, sp
 800b4fc:	681b      	ldr	r3, [r3, #0]
 800b4fe:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b502:	9302      	str	r3, [sp, #8]
 800b504:	f8ad 4004 	strh.w	r4, [sp, #4]
 800b508:	f8ad 400c 	strh.w	r4, [sp, #12]
 800b50c:	f88d 400e 	strb.w	r4, [sp, #14]
 800b510:	f004 faf2 	bl	800faf8 <timer_init>
 800b514:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b518:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b51c:	f004 fb84 	bl	800fc28 <timer_flag_clear>
 800b520:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b524:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b528:	f004 fb7b 	bl	800fc22 <timer_interrupt_flag_clear>
 800b52c:	2210      	movs	r2, #16
 800b52e:	4621      	mov	r1, r4
 800b530:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b534:	f004 fb3d 	bl	800fbb2 <timer_channel_output_mode_config>
 800b538:	2210      	movs	r2, #16
 800b53a:	2101      	movs	r1, #1
 800b53c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b540:	f004 fb37 	bl	800fbb2 <timer_channel_output_mode_config>
 800b544:	4f2f      	ldr	r7, [pc, #188]	; (800b604 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800b546:	2210      	movs	r2, #16
 800b548:	2102      	movs	r1, #2
 800b54a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b54e:	f004 fb30 	bl	800fbb2 <timer_channel_output_mode_config>
 800b552:	4622      	mov	r2, r4
 800b554:	4621      	mov	r1, r4
 800b556:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b55a:	f004 fb50 	bl	800fbfe <timer_channel_output_pulse_value_config>
 800b55e:	2101      	movs	r1, #1
 800b560:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b564:	883a      	ldrh	r2, [r7, #0]
 800b566:	f004 fb4a 	bl	800fbfe <timer_channel_output_pulse_value_config>
 800b56a:	4b27      	ldr	r3, [pc, #156]	; (800b608 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800b56c:	683a      	ldr	r2, [r7, #0]
 800b56e:	681b      	ldr	r3, [r3, #0]
 800b570:	2102      	movs	r1, #2
 800b572:	441a      	add	r2, r3
 800b574:	b292      	uxth	r2, r2
 800b576:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b57a:	f004 fb40 	bl	800fbfe <timer_channel_output_pulse_value_config>
 800b57e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b582:	210e      	movs	r1, #14
 800b584:	f004 fb49 	bl	800fc1a <timer_interrupt_enable>
 800b588:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b58c:	4b1f      	ldr	r3, [pc, #124]	; (800b60c <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800b58e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b592:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800b596:	601a      	str	r2, [r3, #0]
 800b598:	f004 fb06 	bl	800fba8 <timer_enable>
 800b59c:	2201      	movs	r2, #1
 800b59e:	8831      	ldrh	r1, [r6, #0]
 800b5a0:	fa02 f305 	lsl.w	r3, r2, r5
 800b5a4:	430b      	orrs	r3, r1
 800b5a6:	b29b      	uxth	r3, r3
 800b5a8:	8033      	strh	r3, [r6, #0]
 800b5aa:	4b19      	ldr	r3, [pc, #100]	; (800b610 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b5ac:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b5b0:	b005      	add	sp, #20
 800b5b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5b4:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b5b8:	4b16      	ldr	r3, [pc, #88]	; (800b614 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800b5ba:	fb02 3305 	mla	r3, r2, r5, r3
 800b5be:	2200      	movs	r2, #0
 800b5c0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b5c4:	2107      	movs	r1, #7
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	f004 fbd0 	bl	800fd6c <usart_flag_get>
 800b5cc:	2800      	cmp	r0, #0
 800b5ce:	d0f9      	beq.n	800b5c4 <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 800b5d0:	4620      	mov	r0, r4
 800b5d2:	4911      	ldr	r1, [pc, #68]	; (800b618 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800b5d4:	f004 fbec 	bl	800fdb0 <usart_interrupt_flag_clear>
 800b5d8:	f240 3105 	movw	r1, #773	; 0x305
 800b5dc:	4620      	mov	r0, r4
 800b5de:	f004 fbd0 	bl	800fd82 <usart_interrupt_enable>
 800b5e2:	2202      	movs	r2, #2
 800b5e4:	4b0a      	ldr	r3, [pc, #40]	; (800b610 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b5e6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b5ea:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b5ee:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b5f2:	f043 0302 	orr.w	r3, r3, #2
 800b5f6:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b5fa:	e7d9      	b.n	800b5b0 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800b5fc:	200010fc 	strdcs	r1, [r0], -ip
 800b600:	20000000 	andcs	r0, r0, r0
 800b604:	20000008 	andcs	r0, r0, r8
 800b608:	20000004 	andcs	r0, r0, r4
 800b60c:	e000e100 	and	lr, r0, r0, lsl #2
 800b610:	200010e8 	andcs	r1, r0, r8, ror #1
 800b614:	20000cd4 	ldrdcs	r0, [r0], -r4
 800b618:	00050305 	andeq	r0, r5, r5, lsl #6

0800b61c <Dmx::StopData(unsigned int, unsigned int)>:
 800b61c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b620:	4f21      	ldr	r7, [pc, #132]	; (800b6a8 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800b622:	4688      	mov	r8, r1
 800b624:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800b628:	4614      	mov	r4, r2
 800b62a:	b323      	cbz	r3, 800b676 <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 800b62c:	6943      	ldr	r3, [r0, #20]
 800b62e:	bb23      	cbnz	r3, 800b67a <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800b630:	2601      	movs	r6, #1
 800b632:	4d1e      	ldr	r5, [pc, #120]	; (800b6ac <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800b634:	fa06 f202 	lsl.w	r2, r6, r2
 800b638:	882b      	ldrh	r3, [r5, #0]
 800b63a:	b29b      	uxth	r3, r3
 800b63c:	ea23 0302 	bic.w	r3, r3, r2
 800b640:	802b      	strh	r3, [r5, #0]
 800b642:	f3bf 8f5f 	dmb	sy
 800b646:	882b      	ldrh	r3, [r5, #0]
 800b648:	f104 0208 	add.w	r2, r4, #8
 800b64c:	b29b      	uxth	r3, r3
 800b64e:	4096      	lsls	r6, r2
 800b650:	ea36 0303 	bics.w	r3, r6, r3
 800b654:	d105      	bne.n	800b662 <Dmx::StopData(unsigned int, unsigned int)+0x46>
 800b656:	2107      	movs	r1, #7
 800b658:	4640      	mov	r0, r8
 800b65a:	f004 fb87 	bl	800fd6c <usart_flag_get>
 800b65e:	2801      	cmp	r0, #1
 800b660:	d1f9      	bne.n	800b656 <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 800b662:	882b      	ldrh	r3, [r5, #0]
 800b664:	b29b      	uxth	r3, r3
 800b666:	ea23 0306 	bic.w	r3, r3, r6
 800b66a:	802b      	strh	r3, [r5, #0]
 800b66c:	f3bf 8f4f 	dsb	sy
 800b670:	2300      	movs	r3, #0
 800b672:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800b676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b67a:	f240 3105 	movw	r1, #773	; 0x305
 800b67e:	4640      	mov	r0, r8
 800b680:	f004 fb8a 	bl	800fd98 <usart_interrupt_disable>
 800b684:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b688:	4b09      	ldr	r3, [pc, #36]	; (800b6b0 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800b68a:	fb02 3304 	mla	r3, r2, r4, r3
 800b68e:	2200      	movs	r2, #0
 800b690:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b694:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b698:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b69c:	f023 0302 	bic.w	r3, r3, #2
 800b6a0:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b6a4:	e7e4      	b.n	800b670 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 800b6a6:	bf00      	nop
 800b6a8:	200010e8 	andcs	r1, r0, r8, ror #1
 800b6ac:	200010fc 	strdcs	r1, [r0], -ip
 800b6b0:	20000cd4 	ldrdcs	r0, [r0], -r4

0800b6b4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800b6b4:	b570      	push	{r4, r5, r6, lr}
 800b6b6:	461d      	mov	r5, r3
 800b6b8:	6943      	ldr	r3, [r0, #20]
 800b6ba:	4606      	mov	r6, r0
 800b6bc:	4293      	cmp	r3, r2
 800b6be:	4614      	mov	r4, r2
 800b6c0:	d014      	beq.n	800b6ec <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800b6c2:	6142      	str	r2, [r0, #20]
 800b6c4:	4910      	ldr	r1, [pc, #64]	; (800b708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b6c6:	2200      	movs	r2, #0
 800b6c8:	f7ff ffa8 	bl	800b61c <Dmx::StopData(unsigned int, unsigned int)>
 800b6cc:	b934      	cbnz	r4, 800b6dc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800b6ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b6d2:	4b0e      	ldr	r3, [pc, #56]	; (800b70c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b6d4:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b6d8:	b94d      	cbnz	r5, 800b6ee <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800b6da:	bd70      	pop	{r4, r5, r6, pc}
 800b6dc:	2c01      	cmp	r4, #1
 800b6de:	d1fb      	bne.n	800b6d8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b6e0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b6e4:	4b09      	ldr	r3, [pc, #36]	; (800b70c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b6e6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b6ea:	e7f5      	b.n	800b6d8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b6ec:	b135      	cbz	r5, 800b6fc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800b6ee:	4630      	mov	r0, r6
 800b6f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b6f4:	2200      	movs	r2, #0
 800b6f6:	4904      	ldr	r1, [pc, #16]	; (800b708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b6f8:	f7ff bee6 	b.w	800b4c8 <Dmx::StartData(unsigned int, unsigned int)>
 800b6fc:	462a      	mov	r2, r5
 800b6fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b702:	4901      	ldr	r1, [pc, #4]	; (800b708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b704:	f7ff bf8a 	b.w	800b61c <Dmx::StopData(unsigned int, unsigned int)>
 800b708:	40004800 	andmi	r4, r0, r0, lsl #16
 800b70c:	40010000 	andmi	r0, r1, r0

0800b710 <Dmx::Dmx()>:
 800b710:	225c      	movs	r2, #92	; 0x5c
 800b712:	230c      	movs	r3, #12
 800b714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b718:	e9c0 2300 	strd	r2, r3, [r0]
 800b71c:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800b720:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800b724:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b728:	2400      	movs	r4, #0
 800b72a:	4605      	mov	r5, r0
 800b72c:	8203      	strh	r3, [r0, #16]
 800b72e:	4b5d      	ldr	r3, [pc, #372]	; (800b8a4 <Dmx::Dmx()+0x194>)
 800b730:	b08b      	sub	sp, #44	; 0x2c
 800b732:	6018      	str	r0, [r3, #0]
 800b734:	4b5c      	ldr	r3, [pc, #368]	; (800b8a8 <Dmx::Dmx()+0x198>)
 800b736:	2203      	movs	r2, #3
 800b738:	801c      	strh	r4, [r3, #0]
 800b73a:	2110      	movs	r1, #16
 800b73c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b740:	485a      	ldr	r0, [pc, #360]	; (800b8ac <Dmx::Dmx()+0x19c>)
 800b742:	f003 ff91 	bl	800f668 <gpio_init>
 800b746:	4621      	mov	r1, r4
 800b748:	4628      	mov	r0, r5
 800b74a:	f7ff fea5 	bl	800b498 <Dmx::ClearData(unsigned int)>
 800b74e:	4b58      	ldr	r3, [pc, #352]	; (800b8b0 <Dmx::Dmx()+0x1a0>)
 800b750:	2201      	movs	r2, #1
 800b752:	4628      	mov	r0, r5
 800b754:	601c      	str	r4, [r3, #0]
 800b756:	4623      	mov	r3, r4
 800b758:	f7ff ffac 	bl	800b6b4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800b75c:	4b55      	ldr	r3, [pc, #340]	; (800b8b4 <Dmx::Dmx()+0x1a4>)
 800b75e:	4e56      	ldr	r6, [pc, #344]	; (800b8b8 <Dmx::Dmx()+0x1a8>)
 800b760:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800b764:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800b768:	f004 f816 	bl	800f798 <rcu_periph_clock_enable>
 800b76c:	f240 5001 	movw	r0, #1281	; 0x501
 800b770:	f004 f812 	bl	800f798 <rcu_periph_clock_enable>
 800b774:	4630      	mov	r0, r6
 800b776:	2101      	movs	r1, #1
 800b778:	f003 fe76 	bl	800f468 <dma_deinit>
 800b77c:	4b4f      	ldr	r3, [pc, #316]	; (800b8bc <Dmx::Dmx()+0x1ac>)
 800b77e:	2701      	movs	r7, #1
 800b780:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800b784:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800b788:	9308      	str	r3, [sp, #32]
 800b78a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b78e:	aa03      	add	r2, sp, #12
 800b790:	4639      	mov	r1, r7
 800b792:	4630      	mov	r0, r6
 800b794:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b798:	9406      	str	r4, [sp, #24]
 800b79a:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800b79e:	f003 fe7f 	bl	800f4a0 <dma_init>
 800b7a2:	4639      	mov	r1, r7
 800b7a4:	4630      	mov	r0, r6
 800b7a6:	f003 feb5 	bl	800f514 <dma_circulation_disable>
 800b7aa:	4639      	mov	r1, r7
 800b7ac:	4630      	mov	r0, r6
 800b7ae:	f003 fec1 	bl	800f534 <dma_memory_to_memory_disable>
 800b7b2:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800b7b6:	f240 7001 	movw	r0, #1793	; 0x701
 800b7ba:	f003 ffed 	bl	800f798 <rcu_periph_clock_enable>
 800b7be:	4630      	mov	r0, r6
 800b7c0:	f004 f938 	bl	800fa34 <timer_deinit>
 800b7c4:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800b7c8:	236b      	movs	r3, #107	; 0x6b
 800b7ca:	4630      	mov	r0, r6
 800b7cc:	a903      	add	r1, sp, #12
 800b7ce:	9303      	str	r3, [sp, #12]
 800b7d0:	f8ad 4010 	strh.w	r4, [sp, #16]
 800b7d4:	f8cd 9014 	str.w	r9, [sp, #20]
 800b7d8:	f8ad 4018 	strh.w	r4, [sp, #24]
 800b7dc:	f88d 401a 	strb.w	r4, [sp, #26]
 800b7e0:	f004 f98a 	bl	800faf8 <timer_init>
 800b7e4:	4649      	mov	r1, r9
 800b7e6:	4630      	mov	r0, r6
 800b7e8:	f004 fa1e 	bl	800fc28 <timer_flag_clear>
 800b7ec:	4649      	mov	r1, r9
 800b7ee:	4630      	mov	r0, r6
 800b7f0:	f004 fa17 	bl	800fc22 <timer_interrupt_flag_clear>
 800b7f4:	4621      	mov	r1, r4
 800b7f6:	4630      	mov	r0, r6
 800b7f8:	2210      	movs	r2, #16
 800b7fa:	f004 f9da 	bl	800fbb2 <timer_channel_output_mode_config>
 800b7fe:	4639      	mov	r1, r7
 800b800:	4630      	mov	r0, r6
 800b802:	2210      	movs	r2, #16
 800b804:	f004 f9d5 	bl	800fbb2 <timer_channel_output_mode_config>
 800b808:	4630      	mov	r0, r6
 800b80a:	2210      	movs	r2, #16
 800b80c:	2102      	movs	r1, #2
 800b80e:	f004 f9d0 	bl	800fbb2 <timer_channel_output_mode_config>
 800b812:	2210      	movs	r2, #16
 800b814:	2103      	movs	r1, #3
 800b816:	4630      	mov	r0, r6
 800b818:	f004 f9cb 	bl	800fbb2 <timer_channel_output_mode_config>
 800b81c:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800b820:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800b8c0 <Dmx::Dmx()+0x1b0>
 800b824:	4630      	mov	r0, r6
 800b826:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800b82a:	f8c8 3000 	str.w	r3, [r8]
 800b82e:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800b832:	f004 f9b9 	bl	800fba8 <timer_enable>
 800b836:	f240 7005 	movw	r0, #1797	; 0x705
 800b83a:	f003 ffad 	bl	800f798 <rcu_periph_clock_enable>
 800b83e:	4630      	mov	r0, r6
 800b840:	f004 f8f8 	bl	800fa34 <timer_deinit>
 800b844:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800b848:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b84c:	f242 7310 	movw	r3, #10000	; 0x2710
 800b850:	4630      	mov	r0, r6
 800b852:	a903      	add	r1, sp, #12
 800b854:	9305      	str	r3, [sp, #20]
 800b856:	f004 f94f 	bl	800faf8 <timer_init>
 800b85a:	4649      	mov	r1, r9
 800b85c:	4630      	mov	r0, r6
 800b85e:	f004 f9e3 	bl	800fc28 <timer_flag_clear>
 800b862:	4649      	mov	r1, r9
 800b864:	4630      	mov	r0, r6
 800b866:	f004 f9dc 	bl	800fc22 <timer_interrupt_flag_clear>
 800b86a:	4639      	mov	r1, r7
 800b86c:	4630      	mov	r0, r6
 800b86e:	f004 f9d4 	bl	800fc1a <timer_interrupt_enable>
 800b872:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800b876:	4630      	mov	r0, r6
 800b878:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800b87c:	f8c8 3004 	str.w	r3, [r8, #4]
 800b880:	f004 f992 	bl	800fba8 <timer_enable>
 800b884:	2302      	movs	r3, #2
 800b886:	2208      	movs	r2, #8
 800b888:	9300      	str	r3, [sp, #0]
 800b88a:	490e      	ldr	r1, [pc, #56]	; (800b8c4 <Dmx::Dmx()+0x1b4>)
 800b88c:	4623      	mov	r3, r4
 800b88e:	480e      	ldr	r0, [pc, #56]	; (800b8c8 <Dmx::Dmx()+0x1b8>)
 800b890:	f004 fc5a 	bl	8010148 <gd32_uart_begin>
 800b894:	2380      	movs	r3, #128	; 0x80
 800b896:	4628      	mov	r0, r5
 800b898:	f8c8 3004 	str.w	r3, [r8, #4]
 800b89c:	b00b      	add	sp, #44	; 0x2c
 800b89e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8a2:	bf00      	nop
 800b8a4:	20001100 	andcs	r1, r0, r0, lsl #2
 800b8a8:	200010fc 	strdcs	r1, [r0], -ip
 800b8ac:	40010c00 	andmi	r0, r1, r0, lsl #24
 800b8b0:	200010e8 	andcs	r1, r0, r8, ror #1
 800b8b4:	20000cd4 	ldrdcs	r0, [r0], -r4
 800b8b8:	40020000 	andmi	r0, r2, r0
 800b8bc:	40004804 	andmi	r4, r0, r4, lsl #16
 800b8c0:	e000e100 	and	lr, r0, r0, lsl #2
 800b8c4:	0003d090 	muleq	r3, r0, r0
 800b8c8:	40004800 	andmi	r4, r0, r0, lsl #16

0800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>:
 800b8cc:	4b13      	ldr	r3, [pc, #76]	; (800b91c <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800b8ce:	b570      	push	{r4, r5, r6, lr}
 800b8d0:	60c1      	str	r1, [r0, #12]
 800b8d2:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800b8d6:	232c      	movs	r3, #44	; 0x2c
 800b8d8:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800b8dc:	4d10      	ldr	r5, [pc, #64]	; (800b920 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800b8de:	4c11      	ldr	r4, [pc, #68]	; (800b924 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800b8e0:	4358      	muls	r0, r3
 800b8e2:	682a      	ldr	r2, [r5, #0]
 800b8e4:	6823      	ldr	r3, [r4, #0]
 800b8e6:	4413      	add	r3, r2
 800b8e8:	4403      	add	r3, r0
 800b8ea:	42b3      	cmp	r3, r6
 800b8ec:	d908      	bls.n	800b900 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800b8ee:	2ab0      	cmp	r2, #176	; 0xb0
 800b8f0:	4613      	mov	r3, r2
 800b8f2:	bf28      	it	cs
 800b8f4:	23b0      	movcs	r3, #176	; 0xb0
 800b8f6:	220c      	movs	r2, #12
 800b8f8:	602b      	str	r3, [r5, #0]
 800b8fa:	4413      	add	r3, r2
 800b8fc:	6022      	str	r2, [r4, #0]
 800b8fe:	4403      	add	r3, r0
 800b900:	b109      	cbz	r1, 800b906 <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800b902:	428b      	cmp	r3, r1
 800b904:	d906      	bls.n	800b914 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800b906:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800b90a:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800b90e:	4299      	cmp	r1, r3
 800b910:	bf38      	it	cc
 800b912:	4619      	movcc	r1, r3
 800b914:	4b04      	ldr	r3, [pc, #16]	; (800b928 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800b916:	6019      	str	r1, [r3, #0]
 800b918:	bd70      	pop	{r4, r5, r6, pc}
 800b91a:	bf00      	nop
 800b91c:	20000ee4 	andcs	r0, r0, r4, ror #29
 800b920:	20000008 	andcs	r0, r0, r8
 800b924:	20000004 	andcs	r0, r0, r4
 800b928:	20000000 	andcs	r0, r0, r0

0800b92c <Dmx::SetDmxBreakTime(unsigned int)>:
 800b92c:	295c      	cmp	r1, #92	; 0x5c
 800b92e:	bf38      	it	cc
 800b930:	215c      	movcc	r1, #92	; 0x5c
 800b932:	4b02      	ldr	r3, [pc, #8]	; (800b93c <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800b934:	6019      	str	r1, [r3, #0]
 800b936:	68c1      	ldr	r1, [r0, #12]
 800b938:	f7ff bfc8 	b.w	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 800b93c:	20000008 	andcs	r0, r0, r8

0800b940 <Dmx::SetDmxMabTime(unsigned int)>:
 800b940:	290c      	cmp	r1, #12
 800b942:	bf38      	it	cc
 800b944:	210c      	movcc	r1, #12
 800b946:	4b02      	ldr	r3, [pc, #8]	; (800b950 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800b948:	6019      	str	r1, [r3, #0]
 800b94a:	68c1      	ldr	r1, [r0, #12]
 800b94c:	f7ff bfbe 	b.w	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 800b950:	20000004 	andcs	r0, r0, r4

0800b954 <Dmx::SetDmxSlots(unsigned short)>:
 800b954:	1e8b      	subs	r3, r1, #2
 800b956:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800b95a:	d809      	bhi.n	800b970 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800b95c:	6983      	ldr	r3, [r0, #24]
 800b95e:	8201      	strh	r1, [r0, #16]
 800b960:	b11b      	cbz	r3, 800b96a <Dmx::SetDmxSlots(unsigned short)+0x16>
 800b962:	4299      	cmp	r1, r3
 800b964:	bf94      	ite	ls
 800b966:	6181      	strls	r1, [r0, #24]
 800b968:	6183      	strhi	r3, [r0, #24]
 800b96a:	68c1      	ldr	r1, [r0, #12]
 800b96c:	f7ff bfae 	b.w	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 800b970:	4770      	bx	lr
	...

0800b974 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800b974:	b470      	push	{r4, r5, r6}
 800b976:	8a04      	ldrh	r4, [r0, #16]
 800b978:	f44f 7501 	mov.w	r5, #516	; 0x204
 800b97c:	42a3      	cmp	r3, r4
 800b97e:	bf28      	it	cs
 800b980:	4623      	movcs	r3, r4
 800b982:	4c0e      	ldr	r4, [pc, #56]	; (800b9bc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800b984:	f892 f000 	pld	[r2]
 800b988:	fb05 4401 	mla	r4, r5, r1, r4
 800b98c:	1c5d      	adds	r5, r3, #1
 800b98e:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800b992:	18d5      	adds	r5, r2, r3
 800b994:	4295      	cmp	r5, r2
 800b996:	d109      	bne.n	800b9ac <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800b998:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b99c:	698a      	ldr	r2, [r1, #24]
 800b99e:	429a      	cmp	r2, r3
 800b9a0:	d009      	beq.n	800b9b6 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800b9a2:	bc70      	pop	{r4, r5, r6}
 800b9a4:	618b      	str	r3, [r1, #24]
 800b9a6:	68c1      	ldr	r1, [r0, #12]
 800b9a8:	f7ff bf90 	b.w	800b8cc <Dmx::SetDmxPeriodTime(unsigned int)>
 800b9ac:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b9b0:	f804 6f01 	strb.w	r6, [r4, #1]!
 800b9b4:	e7ee      	b.n	800b994 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800b9b6:	bc70      	pop	{r4, r5, r6}
 800b9b8:	4770      	bx	lr
 800b9ba:	bf00      	nop
 800b9bc:	20000ee4 	andcs	r0, r0, r4, ror #29

0800b9c0 <Dmx::Blackout()>:
 800b9c0:	4a10      	ldr	r2, [pc, #64]	; (800ba04 <Dmx::Blackout()+0x44>)
 800b9c2:	b510      	push	{r4, lr}
 800b9c4:	8813      	ldrh	r3, [r2, #0]
 800b9c6:	b29b      	uxth	r3, r3
 800b9c8:	b903      	cbnz	r3, 800b9cc <Dmx::Blackout()+0xc>
 800b9ca:	bd10      	pop	{r4, pc}
 800b9cc:	f3bf 8f5f 	dmb	sy
 800b9d0:	8813      	ldrh	r3, [r2, #0]
 800b9d2:	05db      	lsls	r3, r3, #23
 800b9d4:	d5f9      	bpl.n	800b9ca <Dmx::Blackout()+0xa>
 800b9d6:	4c0c      	ldr	r4, [pc, #48]	; (800ba08 <Dmx::Blackout()+0x48>)
 800b9d8:	2107      	movs	r1, #7
 800b9da:	4620      	mov	r0, r4
 800b9dc:	f004 f9c6 	bl	800fd6c <usart_flag_get>
 800b9e0:	2801      	cmp	r0, #1
 800b9e2:	d1f9      	bne.n	800b9d8 <Dmx::Blackout()+0x18>
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	4a09      	ldr	r2, [pc, #36]	; (800ba0c <Dmx::Blackout()+0x4c>)
 800b9e8:	461c      	mov	r4, r3
 800b9ea:	4611      	mov	r1, r2
 800b9ec:	f240 1001 	movw	r0, #257	; 0x101
 800b9f0:	3301      	adds	r3, #1
 800b9f2:	4283      	cmp	r3, r0
 800b9f4:	f822 4b02 	strh.w	r4, [r2], #2
 800b9f8:	d1fa      	bne.n	800b9f0 <Dmx::Blackout()+0x30>
 800b9fa:	f04f 0300 	mov.w	r3, #0
 800b9fe:	700b      	strb	r3, [r1, #0]
 800ba00:	e7e3      	b.n	800b9ca <Dmx::Blackout()+0xa>
 800ba02:	bf00      	nop
 800ba04:	200010fc 	strdcs	r1, [r0], -ip
 800ba08:	40004800 	andmi	r4, r0, r0, lsl #16
 800ba0c:	20000ee4 	andcs	r0, r0, r4, ror #29

0800ba10 <Dmx::FullOn()>:
 800ba10:	4a10      	ldr	r2, [pc, #64]	; (800ba54 <Dmx::FullOn()+0x44>)
 800ba12:	b510      	push	{r4, lr}
 800ba14:	8813      	ldrh	r3, [r2, #0]
 800ba16:	b29b      	uxth	r3, r3
 800ba18:	b903      	cbnz	r3, 800ba1c <Dmx::FullOn()+0xc>
 800ba1a:	bd10      	pop	{r4, pc}
 800ba1c:	f3bf 8f5f 	dmb	sy
 800ba20:	8813      	ldrh	r3, [r2, #0]
 800ba22:	05db      	lsls	r3, r3, #23
 800ba24:	d5f9      	bpl.n	800ba1a <Dmx::FullOn()+0xa>
 800ba26:	4c0c      	ldr	r4, [pc, #48]	; (800ba58 <Dmx::FullOn()+0x48>)
 800ba28:	2107      	movs	r1, #7
 800ba2a:	4620      	mov	r0, r4
 800ba2c:	f004 f99e 	bl	800fd6c <usart_flag_get>
 800ba30:	2801      	cmp	r0, #1
 800ba32:	d1f9      	bne.n	800ba28 <Dmx::FullOn()+0x18>
 800ba34:	4a09      	ldr	r2, [pc, #36]	; (800ba5c <Dmx::FullOn()+0x4c>)
 800ba36:	2300      	movs	r3, #0
 800ba38:	4611      	mov	r1, r2
 800ba3a:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800ba3e:	f240 1001 	movw	r0, #257	; 0x101
 800ba42:	3301      	adds	r3, #1
 800ba44:	4283      	cmp	r3, r0
 800ba46:	f822 4b02 	strh.w	r4, [r2], #2
 800ba4a:	d1fa      	bne.n	800ba42 <Dmx::FullOn()+0x32>
 800ba4c:	2300      	movs	r3, #0
 800ba4e:	700b      	strb	r3, [r1, #0]
 800ba50:	e7e3      	b.n	800ba1a <Dmx::FullOn()+0xa>
 800ba52:	bf00      	nop
 800ba54:	200010fc 	strdcs	r1, [r0], -ip
 800ba58:	40004800 	andmi	r4, r0, r0, lsl #16
 800ba5c:	20000ee4 	andcs	r0, r0, r4, ror #29

0800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800ba60:	2300      	movs	r3, #0
 800ba62:	2020      	movs	r0, #32
 800ba64:	b510      	push	{r4, lr}
 800ba66:	4a04      	ldr	r2, [pc, #16]	; (800ba78 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800ba68:	428b      	cmp	r3, r1
 800ba6a:	d100      	bne.n	800ba6e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800ba6c:	bd10      	pop	{r4, pc}
 800ba6e:	f852 4b04 	ldr.w	r4, [r2], #4
 800ba72:	3301      	adds	r3, #1
 800ba74:	4420      	add	r0, r4
 800ba76:	e7f7      	b.n	800ba68 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800ba78:	08012348 	stmdaeq	r1, {r3, r6, r8, r9, sp}

0800ba7c <SpiFlashStore::Init()>:
 800ba7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba80:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800bb98 <SpiFlashStore::Init()+0x11c>
 800ba84:	4607      	mov	r7, r0
 800ba86:	b085      	sub	sp, #20
 800ba88:	f8d8 0000 	ldr.w	r0, [r8]
 800ba8c:	f000 fb06 	bl	800c09c <FlashRom::GetSectorSize() const>
 800ba90:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800ba94:	4605      	mov	r5, r0
 800ba96:	d17d      	bne.n	800bb94 <SpiFlashStore::Init()+0x118>
 800ba98:	f8d8 0000 	ldr.w	r0, [r8]
 800ba9c:	f000 faf6 	bl	800c08c <FlashRom::GetSize() const>
 800baa0:	4b3e      	ldr	r3, [pc, #248]	; (800bb9c <SpiFlashStore::Init()+0x120>)
 800baa2:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800baa6:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800baaa:	6019      	str	r1, [r3, #0]
 800baac:	2e00      	cmp	r6, #0
 800baae:	d171      	bne.n	800bb94 <SpiFlashStore::Init()+0x118>
 800bab0:	4c3b      	ldr	r4, [pc, #236]	; (800bba0 <SpiFlashStore::Init()+0x124>)
 800bab2:	ab03      	add	r3, sp, #12
 800bab4:	9300      	str	r3, [sp, #0]
 800bab6:	462a      	mov	r2, r5
 800bab8:	4623      	mov	r3, r4
 800baba:	f8d8 0000 	ldr.w	r0, [r8]
 800babe:	f000 faf0 	bl	800c0a2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800bac2:	7823      	ldrb	r3, [r4, #0]
 800bac4:	2b41      	cmp	r3, #65	; 0x41
 800bac6:	bf1c      	itt	ne
 800bac8:	2341      	movne	r3, #65	; 0x41
 800baca:	7023      	strbne	r3, [r4, #0]
 800bacc:	7863      	ldrb	r3, [r4, #1]
 800bace:	bf14      	ite	ne
 800bad0:	4635      	movne	r5, r6
 800bad2:	2501      	moveq	r5, #1
 800bad4:	2b76      	cmp	r3, #118	; 0x76
 800bad6:	bf1c      	itt	ne
 800bad8:	2376      	movne	r3, #118	; 0x76
 800bada:	7063      	strbne	r3, [r4, #1]
 800badc:	78a3      	ldrb	r3, [r4, #2]
 800bade:	bf18      	it	ne
 800bae0:	2500      	movne	r5, #0
 800bae2:	2b56      	cmp	r3, #86	; 0x56
 800bae4:	bf1c      	itt	ne
 800bae6:	2356      	movne	r3, #86	; 0x56
 800bae8:	70a3      	strbne	r3, [r4, #2]
 800baea:	78e3      	ldrb	r3, [r4, #3]
 800baec:	bf18      	it	ne
 800baee:	2500      	movne	r5, #0
 800baf0:	2b10      	cmp	r3, #16
 800baf2:	d022      	beq.n	800bb3a <SpiFlashStore::Init()+0xbe>
 800baf4:	2310      	movs	r3, #16
 800baf6:	70e3      	strb	r3, [r4, #3]
 800baf8:	2201      	movs	r2, #1
 800bafa:	2500      	movs	r5, #0
 800bafc:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800bb00:	4b28      	ldr	r3, [pc, #160]	; (800bba4 <SpiFlashStore::Init()+0x128>)
 800bb02:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800bba8 <SpiFlashStore::Init()+0x12c>
 800bb06:	701a      	strb	r2, [r3, #0]
 800bb08:	4631      	mov	r1, r6
 800bb0a:	4638      	mov	r0, r7
 800bb0c:	f7ff ffa8 	bl	800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb10:	1823      	adds	r3, r4, r0
 800bb12:	5425      	strb	r5, [r4, r0]
 800bb14:	705d      	strb	r5, [r3, #1]
 800bb16:	709d      	strb	r5, [r3, #2]
 800bb18:	70dd      	strb	r5, [r3, #3]
 800bb1a:	f858 3b04 	ldr.w	r3, [r8], #4
 800bb1e:	1d02      	adds	r2, r0, #4
 800bb20:	4403      	add	r3, r0
 800bb22:	429a      	cmp	r2, r3
 800bb24:	d332      	bcc.n	800bb8c <SpiFlashStore::Init()+0x110>
 800bb26:	3601      	adds	r6, #1
 800bb28:	2e1c      	cmp	r6, #28
 800bb2a:	d1ed      	bne.n	800bb08 <SpiFlashStore::Init()+0x8c>
 800bb2c:	2501      	movs	r5, #1
 800bb2e:	4b1f      	ldr	r3, [pc, #124]	; (800bbac <SpiFlashStore::Init()+0x130>)
 800bb30:	601d      	str	r5, [r3, #0]
 800bb32:	4628      	mov	r0, r5
 800bb34:	b005      	add	sp, #20
 800bb36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bb3a:	2d00      	cmp	r5, #0
 800bb3c:	d0dc      	beq.n	800baf8 <SpiFlashStore::Init()+0x7c>
 800bb3e:	f04f 0900 	mov.w	r9, #0
 800bb42:	46c8      	mov	r8, r9
 800bb44:	4631      	mov	r1, r6
 800bb46:	4638      	mov	r0, r7
 800bb48:	f7ff ff8a 	bl	800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb4c:	5c23      	ldrb	r3, [r4, r0]
 800bb4e:	2bff      	cmp	r3, #255	; 0xff
 800bb50:	d112      	bne.n	800bb78 <SpiFlashStore::Init()+0xfc>
 800bb52:	1823      	adds	r3, r4, r0
 800bb54:	785a      	ldrb	r2, [r3, #1]
 800bb56:	2aff      	cmp	r2, #255	; 0xff
 800bb58:	d10e      	bne.n	800bb78 <SpiFlashStore::Init()+0xfc>
 800bb5a:	789a      	ldrb	r2, [r3, #2]
 800bb5c:	2aff      	cmp	r2, #255	; 0xff
 800bb5e:	d10b      	bne.n	800bb78 <SpiFlashStore::Init()+0xfc>
 800bb60:	78da      	ldrb	r2, [r3, #3]
 800bb62:	2aff      	cmp	r2, #255	; 0xff
 800bb64:	d108      	bne.n	800bb78 <SpiFlashStore::Init()+0xfc>
 800bb66:	46a9      	mov	r9, r5
 800bb68:	f804 8000 	strb.w	r8, [r4, r0]
 800bb6c:	f883 8001 	strb.w	r8, [r3, #1]
 800bb70:	f883 8002 	strb.w	r8, [r3, #2]
 800bb74:	f883 8003 	strb.w	r8, [r3, #3]
 800bb78:	3601      	adds	r6, #1
 800bb7a:	2e1c      	cmp	r6, #28
 800bb7c:	d1e2      	bne.n	800bb44 <SpiFlashStore::Init()+0xc8>
 800bb7e:	f1b9 0f00 	cmp.w	r9, #0
 800bb82:	d0d6      	beq.n	800bb32 <SpiFlashStore::Init()+0xb6>
 800bb84:	2201      	movs	r2, #1
 800bb86:	4b09      	ldr	r3, [pc, #36]	; (800bbac <SpiFlashStore::Init()+0x130>)
 800bb88:	601a      	str	r2, [r3, #0]
 800bb8a:	e7d2      	b.n	800bb32 <SpiFlashStore::Init()+0xb6>
 800bb8c:	f804 9002 	strb.w	r9, [r4, r2]
 800bb90:	3201      	adds	r2, #1
 800bb92:	e7c6      	b.n	800bb22 <SpiFlashStore::Init()+0xa6>
 800bb94:	2500      	movs	r5, #0
 800bb96:	e7cc      	b.n	800bb32 <SpiFlashStore::Init()+0xb6>
 800bb98:	20002138 	andcs	r2, r0, r8, lsr r1
 800bb9c:	20002110 	andcs	r2, r0, r0, lsl r1
 800bba0:	20001110 	andcs	r1, r0, r0, lsl r1
 800bba4:	20002124 	andcs	r2, r0, r4, lsr #2
 800bba8:	08012348 	stmdaeq	r1, {r3, r6, r8, r9, sp}
 800bbac:	2000211c 	andcs	r2, r0, ip, lsl r1

0800bbb0 <SpiFlashStore::SpiFlashStore()>:
 800bbb0:	b538      	push	{r3, r4, r5, lr}
 800bbb2:	4b0d      	ldr	r3, [pc, #52]	; (800bbe8 <SpiFlashStore::SpiFlashStore()+0x38>)
 800bbb4:	4604      	mov	r4, r0
 800bbb6:	6018      	str	r0, [r3, #0]
 800bbb8:	4b0c      	ldr	r3, [pc, #48]	; (800bbec <SpiFlashStore::SpiFlashStore()+0x3c>)
 800bbba:	4d0d      	ldr	r5, [pc, #52]	; (800bbf0 <SpiFlashStore::SpiFlashStore()+0x40>)
 800bbbc:	681b      	ldr	r3, [r3, #0]
 800bbbe:	781b      	ldrb	r3, [r3, #0]
 800bbc0:	b113      	cbz	r3, 800bbc8 <SpiFlashStore::SpiFlashStore()+0x18>
 800bbc2:	f7ff ff5b 	bl	800ba7c <SpiFlashStore::Init()>
 800bbc6:	7028      	strb	r0, [r5, #0]
 800bbc8:	782b      	ldrb	r3, [r5, #0]
 800bbca:	b153      	cbz	r3, 800bbe2 <SpiFlashStore::SpiFlashStore()+0x32>
 800bbcc:	2320      	movs	r3, #32
 800bbce:	2200      	movs	r2, #0
 800bbd0:	4908      	ldr	r1, [pc, #32]	; (800bbf4 <SpiFlashStore::SpiFlashStore()+0x44>)
 800bbd2:	f851 0b04 	ldr.w	r0, [r1], #4
 800bbd6:	3201      	adds	r2, #1
 800bbd8:	2a1c      	cmp	r2, #28
 800bbda:	4403      	add	r3, r0
 800bbdc:	d1f9      	bne.n	800bbd2 <SpiFlashStore::SpiFlashStore()+0x22>
 800bbde:	4a06      	ldr	r2, [pc, #24]	; (800bbf8 <SpiFlashStore::SpiFlashStore()+0x48>)
 800bbe0:	6013      	str	r3, [r2, #0]
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	bd38      	pop	{r3, r4, r5, pc}
 800bbe6:	bf00      	nop
 800bbe8:	20002120 	andcs	r2, r0, r0, lsr #2
 800bbec:	20002138 	andcs	r2, r0, r8, lsr r1
 800bbf0:	20002114 	andcs	r2, r0, r4, lsl r1
 800bbf4:	08012348 	stmdaeq	r1, {r3, r6, r8, r9, sp}
 800bbf8:	20002118 	andcs	r2, r0, r8, lsl r1

0800bbfc <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800bbfc:	b508      	push	{r3, lr}
 800bbfe:	f7ff ff2f 	bl	800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc02:	2300      	movs	r3, #0
 800bc04:	4904      	ldr	r1, [pc, #16]	; (800bc18 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800bc06:	1842      	adds	r2, r0, r1
 800bc08:	540b      	strb	r3, [r1, r0]
 800bc0a:	7053      	strb	r3, [r2, #1]
 800bc0c:	7093      	strb	r3, [r2, #2]
 800bc0e:	70d3      	strb	r3, [r2, #3]
 800bc10:	2201      	movs	r2, #1
 800bc12:	4b02      	ldr	r3, [pc, #8]	; (800bc1c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800bc14:	601a      	str	r2, [r3, #0]
 800bc16:	bd08      	pop	{r3, pc}
 800bc18:	20001110 	andcs	r1, r0, r0, lsl r1
 800bc1c:	2000211c 	andcs	r2, r0, ip, lsl r1

0800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800bc20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc24:	461c      	mov	r4, r3
 800bc26:	4b19      	ldr	r3, [pc, #100]	; (800bc8c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800bc28:	4616      	mov	r6, r2
 800bc2a:	781f      	ldrb	r7, [r3, #0]
 800bc2c:	9d07      	ldr	r5, [sp, #28]
 800bc2e:	b307      	cbz	r7, 800bc72 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc30:	f7ff ff16 	bl	800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc34:	f04f 0c00 	mov.w	ip, #0
 800bc38:	4a15      	ldr	r2, [pc, #84]	; (800bc90 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800bc3a:	1831      	adds	r1, r6, r0
 800bc3c:	1e63      	subs	r3, r4, #1
 800bc3e:	9c06      	ldr	r4, [sp, #24]
 800bc40:	4411      	add	r1, r2
 800bc42:	440c      	add	r4, r1
 800bc44:	42a1      	cmp	r1, r4
 800bc46:	d116      	bne.n	800bc76 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800bc48:	f1bc 0f00 	cmp.w	ip, #0
 800bc4c:	d011      	beq.n	800bc72 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc4e:	4b11      	ldr	r3, [pc, #68]	; (800bc94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800bc50:	6819      	ldr	r1, [r3, #0]
 800bc52:	b109      	cbz	r1, 800bc58 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800bc54:	2906      	cmp	r1, #6
 800bc56:	d101      	bne.n	800bc5c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800bc58:	2101      	movs	r1, #1
 800bc5a:	6019      	str	r1, [r3, #0]
 800bc5c:	4b0e      	ldr	r3, [pc, #56]	; (800bc98 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800bc5e:	6819      	ldr	r1, [r3, #0]
 800bc60:	4b0e      	ldr	r3, [pc, #56]	; (800bc9c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800bc62:	6019      	str	r1, [r3, #0]
 800bc64:	b12e      	cbz	r6, 800bc72 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc66:	b125      	cbz	r5, 800bc72 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bc68:	9b08      	ldr	r3, [sp, #32]
 800bc6a:	4418      	add	r0, r3
 800bc6c:	5813      	ldr	r3, [r2, r0]
 800bc6e:	432b      	orrs	r3, r5
 800bc70:	5013      	str	r3, [r2, r0]
 800bc72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc76:	f891 8000 	ldrb.w	r8, [r1]
 800bc7a:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800bc7e:	3101      	adds	r1, #1
 800bc80:	45f0      	cmp	r8, lr
 800bc82:	bf1c      	itt	ne
 800bc84:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800bc88:	46bc      	movne	ip, r7
 800bc8a:	e7db      	b.n	800bc44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800bc8c:	20002114 	andcs	r2, r0, r4, lsl r1
 800bc90:	20001110 	andcs	r1, r0, r0, lsl r1
 800bc94:	2000211c 	andcs	r2, r0, ip, lsl r1
 800bc98:	2000a0f4 	strdcs	sl, [r0], -r4
 800bc9c:	2000110c 	andcs	r1, r0, ip, lsl #2

0800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800bca0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bca4:	461d      	mov	r5, r3
 800bca6:	4b15      	ldr	r3, [pc, #84]	; (800bcfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800bca8:	b085      	sub	sp, #20
 800bcaa:	781b      	ldrb	r3, [r3, #0]
 800bcac:	4607      	mov	r7, r0
 800bcae:	4614      	mov	r4, r2
 800bcb0:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800bcb4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800bcb8:	b193      	cbz	r3, 800bce0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800bcba:	f7ff fed1 	bl	800ba60 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bcbe:	4a10      	ldr	r2, [pc, #64]	; (800bd00 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800bcc0:	eb08 0600 	add.w	r6, r8, r0
 800bcc4:	18b3      	adds	r3, r6, r2
 800bcc6:	f1b9 0f00 	cmp.w	r9, #0
 800bcca:	d013      	beq.n	800bcf4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800bccc:	5990      	ldr	r0, [r2, r6]
 800bcce:	b988      	cbnz	r0, 800bcf4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800bcd0:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800bcd4:	4623      	mov	r3, r4
 800bcd6:	4642      	mov	r2, r8
 800bcd8:	4638      	mov	r0, r7
 800bcda:	9500      	str	r5, [sp, #0]
 800bcdc:	f7ff ffa0 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bce0:	b005      	add	sp, #20
 800bce2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bce6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bcea:	f804 2f01 	strb.w	r2, [r4, #1]!
 800bcee:	429d      	cmp	r5, r3
 800bcf0:	d1f9      	bne.n	800bce6 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800bcf2:	e7f5      	b.n	800bce0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800bcf4:	3c01      	subs	r4, #1
 800bcf6:	441d      	add	r5, r3
 800bcf8:	e7f9      	b.n	800bcee <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800bcfa:	bf00      	nop
 800bcfc:	20002114 	andcs	r2, r0, r4, lsl r1
 800bd00:	20001110 	andcs	r1, r0, r0, lsl r1

0800bd04 <SpiFlashStore::Flash()>:
 800bd04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd06:	4c25      	ldr	r4, [pc, #148]	; (800bd9c <SpiFlashStore::Flash()+0x98>)
 800bd08:	6820      	ldr	r0, [r4, #0]
 800bd0a:	2800      	cmp	r0, #0
 800bd0c:	d043      	beq.n	800bd96 <SpiFlashStore::Flash()+0x92>
 800bd0e:	3801      	subs	r0, #1
 800bd10:	2805      	cmp	r0, #5
 800bd12:	d831      	bhi.n	800bd78 <SpiFlashStore::Flash()+0x74>
 800bd14:	e8df f000 	tbb	[pc, r0]
 800bd18:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800bd1c:	4b203025 	blmi	8817db8 <__exidx_end+0x8052a8>
 800bd20:	681a      	ldr	r2, [r3, #0]
 800bd22:	4b20      	ldr	r3, [pc, #128]	; (800bda4 <SpiFlashStore::Flash()+0xa0>)
 800bd24:	601a      	str	r2, [r3, #0]
 800bd26:	2302      	movs	r3, #2
 800bd28:	6023      	str	r3, [r4, #0]
 800bd2a:	2001      	movs	r0, #1
 800bd2c:	e033      	b.n	800bd96 <SpiFlashStore::Flash()+0x92>
 800bd2e:	4b1c      	ldr	r3, [pc, #112]	; (800bda0 <SpiFlashStore::Flash()+0x9c>)
 800bd30:	4a1c      	ldr	r2, [pc, #112]	; (800bda4 <SpiFlashStore::Flash()+0xa0>)
 800bd32:	681b      	ldr	r3, [r3, #0]
 800bd34:	6812      	ldr	r2, [r2, #0]
 800bd36:	1a9b      	subs	r3, r3, r2
 800bd38:	2b63      	cmp	r3, #99	; 0x63
 800bd3a:	d9f6      	bls.n	800bd2a <SpiFlashStore::Flash()+0x26>
 800bd3c:	2303      	movs	r3, #3
 800bd3e:	e7f3      	b.n	800bd28 <SpiFlashStore::Flash()+0x24>
 800bd40:	4919      	ldr	r1, [pc, #100]	; (800bda8 <SpiFlashStore::Flash()+0xa4>)
 800bd42:	481a      	ldr	r0, [pc, #104]	; (800bdac <SpiFlashStore::Flash()+0xa8>)
 800bd44:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bd48:	6809      	ldr	r1, [r1, #0]
 800bd4a:	6800      	ldr	r0, [r0, #0]
 800bd4c:	ab03      	add	r3, sp, #12
 800bd4e:	f000 f9b7 	bl	800c0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bd52:	2800      	cmp	r0, #0
 800bd54:	d0e9      	beq.n	800bd2a <SpiFlashStore::Flash()+0x26>
 800bd56:	4b12      	ldr	r3, [pc, #72]	; (800bda0 <SpiFlashStore::Flash()+0x9c>)
 800bd58:	681a      	ldr	r2, [r3, #0]
 800bd5a:	4b12      	ldr	r3, [pc, #72]	; (800bda4 <SpiFlashStore::Flash()+0xa0>)
 800bd5c:	601a      	str	r2, [r3, #0]
 800bd5e:	2305      	movs	r3, #5
 800bd60:	e7e2      	b.n	800bd28 <SpiFlashStore::Flash()+0x24>
 800bd62:	4b0f      	ldr	r3, [pc, #60]	; (800bda0 <SpiFlashStore::Flash()+0x9c>)
 800bd64:	4a0f      	ldr	r2, [pc, #60]	; (800bda4 <SpiFlashStore::Flash()+0xa0>)
 800bd66:	681b      	ldr	r3, [r3, #0]
 800bd68:	6812      	ldr	r2, [r2, #0]
 800bd6a:	1a9b      	subs	r3, r3, r2
 800bd6c:	2b63      	cmp	r3, #99	; 0x63
 800bd6e:	d9dc      	bls.n	800bd2a <SpiFlashStore::Flash()+0x26>
 800bd70:	2304      	movs	r3, #4
 800bd72:	e7d9      	b.n	800bd28 <SpiFlashStore::Flash()+0x24>
 800bd74:	2306      	movs	r3, #6
 800bd76:	e7d7      	b.n	800bd28 <SpiFlashStore::Flash()+0x24>
 800bd78:	ab03      	add	r3, sp, #12
 800bd7a:	4a0d      	ldr	r2, [pc, #52]	; (800bdb0 <SpiFlashStore::Flash()+0xac>)
 800bd7c:	490a      	ldr	r1, [pc, #40]	; (800bda8 <SpiFlashStore::Flash()+0xa4>)
 800bd7e:	480b      	ldr	r0, [pc, #44]	; (800bdac <SpiFlashStore::Flash()+0xa8>)
 800bd80:	9300      	str	r3, [sp, #0]
 800bd82:	6812      	ldr	r2, [r2, #0]
 800bd84:	4b0b      	ldr	r3, [pc, #44]	; (800bdb4 <SpiFlashStore::Flash()+0xb0>)
 800bd86:	6809      	ldr	r1, [r1, #0]
 800bd88:	6800      	ldr	r0, [r0, #0]
 800bd8a:	f000 fa39 	bl	800c200 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bd8e:	2800      	cmp	r0, #0
 800bd90:	d0cb      	beq.n	800bd2a <SpiFlashStore::Flash()+0x26>
 800bd92:	2000      	movs	r0, #0
 800bd94:	6020      	str	r0, [r4, #0]
 800bd96:	b004      	add	sp, #16
 800bd98:	bd10      	pop	{r4, pc}
 800bd9a:	bf00      	nop
 800bd9c:	2000211c 	andcs	r2, r0, ip, lsl r1
 800bda0:	2000a0f4 	strdcs	sl, [r0], -r4
 800bda4:	2000110c 	andcs	r1, r0, ip, lsl #2
 800bda8:	20002110 	andcs	r2, r0, r0, lsl r1
 800bdac:	20002138 	andcs	r2, r0, r8, lsr r1
 800bdb0:	20002118 	andcs	r2, r0, r8, lsl r1
 800bdb4:	20001110 	andcs	r1, r0, r0, lsl r1

0800bdb8 <StoreDmxSend::~StoreDmxSend()>:
 800bdb8:	4770      	bx	lr
	...

0800bdbc <StoreDmxSend::Copy(TDmxParams*)>:
 800bdbc:	b507      	push	{r0, r1, r2, lr}
 800bdbe:	2300      	movs	r3, #0
 800bdc0:	460a      	mov	r2, r1
 800bdc2:	2101      	movs	r1, #1
 800bdc4:	e9cd 3100 	strd	r3, r1, [sp]
 800bdc8:	4804      	ldr	r0, [pc, #16]	; (800bddc <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 800bdca:	230a      	movs	r3, #10
 800bdcc:	2102      	movs	r1, #2
 800bdce:	6800      	ldr	r0, [r0, #0]
 800bdd0:	f7ff ff66 	bl	800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bdd4:	b003      	add	sp, #12
 800bdd6:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdda:	bf00      	nop
 800bddc:	20002120 	andcs	r2, r0, r0, lsr #2

0800bde0 <StoreDmxSend::Update(TDmxParams const*)>:
 800bde0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bde2:	2200      	movs	r2, #0
 800bde4:	460b      	mov	r3, r1
 800bde6:	210a      	movs	r1, #10
 800bde8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bdec:	4804      	ldr	r0, [pc, #16]	; (800be00 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800bdee:	9100      	str	r1, [sp, #0]
 800bdf0:	6800      	ldr	r0, [r0, #0]
 800bdf2:	2102      	movs	r1, #2
 800bdf4:	f7ff ff14 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bdf8:	b005      	add	sp, #20
 800bdfa:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdfe:	bf00      	nop
 800be00:	20002120 	andcs	r2, r0, r0, lsr #2

0800be04 <StoreDmxSend::~StoreDmxSend()>:
 800be04:	b510      	push	{r4, lr}
 800be06:	4604      	mov	r4, r0
 800be08:	f003 f834 	bl	800ee74 <operator delete(void*)>
 800be0c:	4620      	mov	r0, r4
 800be0e:	bd10      	pop	{r4, pc}

0800be10 <StoreDmxSend::StoreDmxSend()>:
 800be10:	4a02      	ldr	r2, [pc, #8]	; (800be1c <StoreDmxSend::StoreDmxSend()+0xc>)
 800be12:	6002      	str	r2, [r0, #0]
 800be14:	4a02      	ldr	r2, [pc, #8]	; (800be20 <StoreDmxSend::StoreDmxSend()+0x10>)
 800be16:	6010      	str	r0, [r2, #0]
 800be18:	4770      	bx	lr
 800be1a:	bf00      	nop
 800be1c:	080123c0 	stmdaeq	r1, {r6, r7, r8, r9, sp}
 800be20:	20002128 	andcs	r2, r0, r8, lsr #2

0800be24 <StoreNetwork::~StoreNetwork()>:
 800be24:	4770      	bx	lr

0800be26 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800be26:	3804      	subs	r0, #4
 800be28:	4770      	bx	lr
	...

0800be2c <StoreNetwork::Update(networkparams::Params const*)>:
 800be2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be2e:	2200      	movs	r2, #0
 800be30:	460b      	mov	r3, r1
 800be32:	215e      	movs	r1, #94	; 0x5e
 800be34:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800be38:	4804      	ldr	r0, [pc, #16]	; (800be4c <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800be3a:	9100      	str	r1, [sp, #0]
 800be3c:	6800      	ldr	r0, [r0, #0]
 800be3e:	4611      	mov	r1, r2
 800be40:	f7ff feee 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be44:	b005      	add	sp, #20
 800be46:	f85d fb04 	ldr.w	pc, [sp], #4
 800be4a:	bf00      	nop
 800be4c:	20002120 	andcs	r2, r0, r0, lsr #2

0800be50 <StoreNetwork::SaveDhcp(bool)>:
 800be50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be52:	2301      	movs	r3, #1
 800be54:	f88d 1017 	strb.w	r1, [sp, #23]
 800be58:	2100      	movs	r1, #0
 800be5a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be5e:	4805      	ldr	r0, [pc, #20]	; (800be74 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800be60:	9300      	str	r3, [sp, #0]
 800be62:	2214      	movs	r2, #20
 800be64:	6800      	ldr	r0, [r0, #0]
 800be66:	f10d 0317 	add.w	r3, sp, #23
 800be6a:	f7ff fed9 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be6e:	b007      	add	sp, #28
 800be70:	f85d fb04 	ldr.w	pc, [sp], #4
 800be74:	20002120 	andcs	r2, r0, r0, lsr #2

0800be78 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800be78:	f1a0 0004 	sub.w	r0, r0, #4
 800be7c:	e7e8      	b.n	800be50 <StoreNetwork::SaveDhcp(bool)>
 800be7e:	bf00      	nop

0800be80 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800be80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be82:	2308      	movs	r3, #8
 800be84:	9105      	str	r1, [sp, #20]
 800be86:	2100      	movs	r1, #0
 800be88:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be8c:	2304      	movs	r3, #4
 800be8e:	4805      	ldr	r0, [pc, #20]	; (800bea4 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800be90:	9300      	str	r3, [sp, #0]
 800be92:	220c      	movs	r2, #12
 800be94:	6800      	ldr	r0, [r0, #0]
 800be96:	ab05      	add	r3, sp, #20
 800be98:	f7ff fec2 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be9c:	b007      	add	sp, #28
 800be9e:	f85d fb04 	ldr.w	pc, [sp], #4
 800bea2:	bf00      	nop
 800bea4:	20002120 	andcs	r2, r0, r0, lsr #2

0800bea8 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bea8:	f1a0 0004 	sub.w	r0, r0, #4
 800beac:	e7e8      	b.n	800be80 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800beae:	bf00      	nop

0800beb0 <StoreNetwork::SaveNetMask(unsigned int)>:
 800beb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800beb2:	2304      	movs	r3, #4
 800beb4:	9105      	str	r1, [sp, #20]
 800beb6:	2100      	movs	r1, #0
 800beb8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bebc:	4804      	ldr	r0, [pc, #16]	; (800bed0 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800bebe:	9300      	str	r3, [sp, #0]
 800bec0:	2208      	movs	r2, #8
 800bec2:	6800      	ldr	r0, [r0, #0]
 800bec4:	ab05      	add	r3, sp, #20
 800bec6:	f7ff feab 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800beca:	b007      	add	sp, #28
 800becc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bed0:	20002120 	andcs	r2, r0, r0, lsr #2

0800bed4 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800bed4:	f1a0 0004 	sub.w	r0, r0, #4
 800bed8:	e7ea      	b.n	800beb0 <StoreNetwork::SaveNetMask(unsigned int)>
 800beda:	bf00      	nop

0800bedc <StoreNetwork::SaveIp(unsigned int)>:
 800bedc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bede:	2302      	movs	r3, #2
 800bee0:	9105      	str	r1, [sp, #20]
 800bee2:	2100      	movs	r1, #0
 800bee4:	2204      	movs	r2, #4
 800bee6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800beea:	4804      	ldr	r0, [pc, #16]	; (800befc <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800beec:	9200      	str	r2, [sp, #0]
 800beee:	6800      	ldr	r0, [r0, #0]
 800bef0:	ab05      	add	r3, sp, #20
 800bef2:	f7ff fe95 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bef6:	b007      	add	sp, #28
 800bef8:	f85d fb04 	ldr.w	pc, [sp], #4
 800befc:	20002120 	andcs	r2, r0, r0, lsr #2

0800bf00 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800bf00:	f1a0 0004 	sub.w	r0, r0, #4
 800bf04:	e7ea      	b.n	800bedc <StoreNetwork::SaveIp(unsigned int)>
 800bf06:	bf00      	nop

0800bf08 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bf08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf0a:	460b      	mov	r3, r1
 800bf0c:	2020      	movs	r0, #32
 800bf0e:	2100      	movs	r1, #0
 800bf10:	2a40      	cmp	r2, #64	; 0x40
 800bf12:	bf28      	it	cs
 800bf14:	2240      	movcs	r2, #64	; 0x40
 800bf16:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800bf1a:	4804      	ldr	r0, [pc, #16]	; (800bf2c <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800bf1c:	9200      	str	r2, [sp, #0]
 800bf1e:	6800      	ldr	r0, [r0, #0]
 800bf20:	2215      	movs	r2, #21
 800bf22:	f7ff fe7d 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf26:	b005      	add	sp, #20
 800bf28:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf2c:	20002120 	andcs	r2, r0, r0, lsr #2

0800bf30 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800bf30:	f1a0 0004 	sub.w	r0, r0, #4
 800bf34:	e7e8      	b.n	800bf08 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800bf36:	bf00      	nop

0800bf38 <StoreNetwork::~StoreNetwork()>:
 800bf38:	b510      	push	{r4, lr}
 800bf3a:	4604      	mov	r4, r0
 800bf3c:	f002 ff9a 	bl	800ee74 <operator delete(void*)>
 800bf40:	4620      	mov	r0, r4
 800bf42:	bd10      	pop	{r4, pc}

0800bf44 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bf44:	f1a0 0004 	sub.w	r0, r0, #4
 800bf48:	e7f6      	b.n	800bf38 <StoreNetwork::~StoreNetwork()>
	...

0800bf4c <StoreNetwork::Copy(networkparams::Params*)>:
 800bf4c:	b507      	push	{r0, r1, r2, lr}
 800bf4e:	2301      	movs	r3, #1
 800bf50:	460a      	mov	r2, r1
 800bf52:	2100      	movs	r1, #0
 800bf54:	e9cd 1300 	strd	r1, r3, [sp]
 800bf58:	4803      	ldr	r0, [pc, #12]	; (800bf68 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800bf5a:	235e      	movs	r3, #94	; 0x5e
 800bf5c:	6800      	ldr	r0, [r0, #0]
 800bf5e:	f7ff fe9f 	bl	800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bf62:	b003      	add	sp, #12
 800bf64:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf68:	20002120 	andcs	r2, r0, r0, lsr #2

0800bf6c <StoreNetwork::StoreNetwork()>:
 800bf6c:	4a03      	ldr	r2, [pc, #12]	; (800bf7c <StoreNetwork::StoreNetwork()+0x10>)
 800bf6e:	6002      	str	r2, [r0, #0]
 800bf70:	322c      	adds	r2, #44	; 0x2c
 800bf72:	6042      	str	r2, [r0, #4]
 800bf74:	4a02      	ldr	r2, [pc, #8]	; (800bf80 <StoreNetwork::StoreNetwork()+0x14>)
 800bf76:	6010      	str	r0, [r2, #0]
 800bf78:	4770      	bx	lr
 800bf7a:	bf00      	nop
 800bf7c:	080123d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sp}
 800bf80:	2000212c 	andcs	r2, r0, ip, lsr #2

0800bf84 <StoreOscServer::~StoreOscServer()>:
 800bf84:	4770      	bx	lr
	...

0800bf88 <StoreOscServer::Copy(osc::server::Params*)>:
 800bf88:	b507      	push	{r0, r1, r2, lr}
 800bf8a:	2300      	movs	r3, #0
 800bf8c:	460a      	mov	r2, r1
 800bf8e:	2101      	movs	r1, #1
 800bf90:	e9cd 3100 	strd	r3, r1, [sp]
 800bf94:	4804      	ldr	r0, [pc, #16]	; (800bfa8 <StoreOscServer::Copy(osc::server::Params*)+0x20>)
 800bf96:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800bf9a:	2108      	movs	r1, #8
 800bf9c:	6800      	ldr	r0, [r0, #0]
 800bf9e:	f7ff fe7f 	bl	800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800bfa2:	b003      	add	sp, #12
 800bfa4:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfa8:	20002120 	andcs	r2, r0, r0, lsr #2

0800bfac <StoreOscServer::Update(osc::server::Params const*)>:
 800bfac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfae:	2200      	movs	r2, #0
 800bfb0:	460b      	mov	r3, r1
 800bfb2:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800bfb6:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bfba:	4804      	ldr	r0, [pc, #16]	; (800bfcc <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800bfbc:	9100      	str	r1, [sp, #0]
 800bfbe:	6800      	ldr	r0, [r0, #0]
 800bfc0:	2108      	movs	r1, #8
 800bfc2:	f7ff fe2d 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bfc6:	b005      	add	sp, #20
 800bfc8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bfcc:	20002120 	andcs	r2, r0, r0, lsr #2

0800bfd0 <StoreOscServer::~StoreOscServer()>:
 800bfd0:	b510      	push	{r4, lr}
 800bfd2:	4604      	mov	r4, r0
 800bfd4:	f002 ff4e 	bl	800ee74 <operator delete(void*)>
 800bfd8:	4620      	mov	r0, r4
 800bfda:	bd10      	pop	{r4, pc}

0800bfdc <StoreOscServer::StoreOscServer()>:
 800bfdc:	4a02      	ldr	r2, [pc, #8]	; (800bfe8 <StoreOscServer::StoreOscServer()+0xc>)
 800bfde:	6002      	str	r2, [r0, #0]
 800bfe0:	4a02      	ldr	r2, [pc, #8]	; (800bfec <StoreOscServer::StoreOscServer()+0x10>)
 800bfe2:	6010      	str	r0, [r2, #0]
 800bfe4:	4770      	bx	lr
 800bfe6:	bf00      	nop
 800bfe8:	08012428 	stmdaeq	r1, {r3, r5, sl, sp}
 800bfec:	20002130 	andcs	r2, r0, r0, lsr r1

0800bff0 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bff0:	4770      	bx	lr
	...

0800bff4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800bff4:	b507      	push	{r0, r1, r2, lr}
 800bff6:	2300      	movs	r3, #0
 800bff8:	460a      	mov	r2, r1
 800bffa:	2101      	movs	r1, #1
 800bffc:	e9cd 3100 	strd	r3, r1, [sp]
 800c000:	4804      	ldr	r0, [pc, #16]	; (800c014 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800c002:	2320      	movs	r3, #32
 800c004:	210c      	movs	r1, #12
 800c006:	6800      	ldr	r0, [r0, #0]
 800c008:	f7ff fe4a 	bl	800bca0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800c00c:	b003      	add	sp, #12
 800c00e:	f85d fb04 	ldr.w	pc, [sp], #4
 800c012:	bf00      	nop
 800c014:	20002120 	andcs	r2, r0, r0, lsr #2

0800c018 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800c018:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c01a:	2200      	movs	r2, #0
 800c01c:	460b      	mov	r3, r1
 800c01e:	2120      	movs	r1, #32
 800c020:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800c024:	4804      	ldr	r0, [pc, #16]	; (800c038 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800c026:	9100      	str	r1, [sp, #0]
 800c028:	6800      	ldr	r0, [r0, #0]
 800c02a:	210c      	movs	r1, #12
 800c02c:	f7ff fdf8 	bl	800bc20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800c030:	b005      	add	sp, #20
 800c032:	f85d fb04 	ldr.w	pc, [sp], #4
 800c036:	bf00      	nop
 800c038:	20002120 	andcs	r2, r0, r0, lsr #2

0800c03c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800c03c:	b510      	push	{r4, lr}
 800c03e:	4604      	mov	r4, r0
 800c040:	f002 ff18 	bl	800ee74 <operator delete(void*)>
 800c044:	4620      	mov	r0, r4
 800c046:	bd10      	pop	{r4, pc}

0800c048 <StoreRemoteConfig::StoreRemoteConfig()>:
 800c048:	4a02      	ldr	r2, [pc, #8]	; (800c054 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800c04a:	6002      	str	r2, [r0, #0]
 800c04c:	4a02      	ldr	r2, [pc, #8]	; (800c058 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800c04e:	6010      	str	r0, [r2, #0]
 800c050:	4770      	bx	lr
 800c052:	bf00      	nop
 800c054:	08012440 	stmdaeq	r1, {r6, sl, sp}
 800c058:	20002134 	andcs	r2, r0, r4, lsr r1

0800c05c <FlashRom::FlashRom()>:
 800c05c:	4b07      	ldr	r3, [pc, #28]	; (800c07c <FlashRom::FlashRom()+0x20>)
 800c05e:	b510      	push	{r4, lr}
 800c060:	6018      	str	r0, [r3, #0]
 800c062:	2301      	movs	r3, #1
 800c064:	4604      	mov	r4, r0
 800c066:	7003      	strb	r3, [r0, #0]
 800c068:	4b05      	ldr	r3, [pc, #20]	; (800c080 <FlashRom::FlashRom()+0x24>)
 800c06a:	4906      	ldr	r1, [pc, #24]	; (800c084 <FlashRom::FlashRom()+0x28>)
 800c06c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c070:	4805      	ldr	r0, [pc, #20]	; (800c088 <FlashRom::FlashRom()+0x2c>)
 800c072:	029a      	lsls	r2, r3, #10
 800c074:	f7fc fbe2 	bl	800883c <printf>
 800c078:	4620      	mov	r0, r4
 800c07a:	bd10      	pop	{r4, pc}
 800c07c:	20002138 	andcs	r2, r0, r8, lsr r1
 800c080:	1ffff700 	svcne	0x00fff700
 800c084:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 800c088:	08012450 	stmdaeq	r1, {r4, r6, sl, sp}

0800c08c <FlashRom::GetSize() const>:
 800c08c:	4b02      	ldr	r3, [pc, #8]	; (800c098 <FlashRom::GetSize() const+0xc>)
 800c08e:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800c092:	0280      	lsls	r0, r0, #10
 800c094:	4770      	bx	lr
 800c096:	bf00      	nop
 800c098:	1ffff700 	svcne	0x00fff700

0800c09c <FlashRom::GetSectorSize() const>:
 800c09c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800c0a0:	4770      	bx	lr

0800c0a2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800c0a2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c0a6:	441a      	add	r2, r3
 800c0a8:	4293      	cmp	r3, r2
 800c0aa:	d104      	bne.n	800c0b6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800c0ac:	2200      	movs	r2, #0
 800c0ae:	9b00      	ldr	r3, [sp, #0]
 800c0b0:	2001      	movs	r0, #1
 800c0b2:	601a      	str	r2, [r3, #0]
 800c0b4:	4770      	bx	lr
 800c0b6:	f851 0b04 	ldr.w	r0, [r1], #4
 800c0ba:	f843 0b04 	str.w	r0, [r3], #4
 800c0be:	e7f3      	b.n	800c0a8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800c0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800c0c0:	2000      	movs	r0, #0
 800c0c2:	b538      	push	{r3, r4, r5, lr}
 800c0c4:	4c47      	ldr	r4, [pc, #284]	; (800c1e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800c0c6:	6018      	str	r0, [r3, #0]
 800c0c8:	6823      	ldr	r3, [r4, #0]
 800c0ca:	2b04      	cmp	r3, #4
 800c0cc:	f200 8082 	bhi.w	800c1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c0d0:	e8df f003 	tbb	[pc, r3]
 800c0d4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800c0d8:	4b430080 	blmi	90cc2e0 <__exidx_end+0x10b97d0>
 800c0dc:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c0e0:	6019      	str	r1, [r3, #0]
 800c0e2:	4b42      	ldr	r3, [pc, #264]	; (800c1ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c0e4:	601a      	str	r2, [r3, #0]
 800c0e6:	4b42      	ldr	r3, [pc, #264]	; (800c1f0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800c0e8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c0ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c0f0:	4b40      	ldr	r3, [pc, #256]	; (800c1f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c0f2:	d807      	bhi.n	800c104 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800c0f4:	2201      	movs	r2, #1
 800c0f6:	701a      	strb	r2, [r3, #0]
 800c0f8:	f003 fa2c 	bl	800f554 <fmc_bank0_unlock>
 800c0fc:	2301      	movs	r3, #1
 800c0fe:	6023      	str	r3, [r4, #0]
 800c100:	2000      	movs	r0, #0
 800c102:	e026      	b.n	800c152 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c104:	4a3c      	ldr	r2, [pc, #240]	; (800c1f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800c106:	4291      	cmp	r1, r2
 800c108:	d3f4      	bcc.n	800c0f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800c10a:	2200      	movs	r2, #0
 800c10c:	701a      	strb	r2, [r3, #0]
 800c10e:	f003 fa2f 	bl	800f570 <fmc_bank1_unlock>
 800c112:	e7f3      	b.n	800c0fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c114:	4d37      	ldr	r5, [pc, #220]	; (800c1f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c116:	782b      	ldrb	r3, [r5, #0]
 800c118:	b15b      	cbz	r3, 800c132 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800c11a:	f003 fa47 	bl	800f5ac <fmc_bank0_state_get>
 800c11e:	2801      	cmp	r0, #1
 800c120:	d0ee      	beq.n	800c100 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800c122:	7829      	ldrb	r1, [r5, #0]
 800c124:	4b35      	ldr	r3, [pc, #212]	; (800c1fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c126:	b939      	cbnz	r1, 800c138 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800c128:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c12a:	f022 0202 	bic.w	r2, r2, #2
 800c12e:	651a      	str	r2, [r3, #80]	; 0x50
 800c130:	e006      	b.n	800c140 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800c132:	f003 fa4d 	bl	800f5d0 <fmc_bank1_state_get>
 800c136:	e7f2      	b.n	800c11e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800c138:	691a      	ldr	r2, [r3, #16]
 800c13a:	f022 0202 	bic.w	r2, r2, #2
 800c13e:	611a      	str	r2, [r3, #16]
 800c140:	4b2a      	ldr	r3, [pc, #168]	; (800c1ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c142:	681b      	ldr	r3, [r3, #0]
 800c144:	b94b      	cbnz	r3, 800c15a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800c146:	b129      	cbz	r1, 800c154 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800c148:	f003 fa20 	bl	800f58c <fmc_bank0_lock>
 800c14c:	2300      	movs	r3, #0
 800c14e:	2001      	movs	r0, #1
 800c150:	6023      	str	r3, [r4, #0]
 800c152:	bd38      	pop	{r3, r4, r5, pc}
 800c154:	f003 fa22 	bl	800f59c <fmc_bank1_lock>
 800c158:	e7f8      	b.n	800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800c15a:	2302      	movs	r3, #2
 800c15c:	e7cf      	b.n	800c0fe <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800c15e:	4923      	ldr	r1, [pc, #140]	; (800c1ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c160:	680b      	ldr	r3, [r1, #0]
 800c162:	2b00      	cmp	r3, #0
 800c164:	d0ca      	beq.n	800c0fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c166:	4b23      	ldr	r3, [pc, #140]	; (800c1f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c168:	4a1f      	ldr	r2, [pc, #124]	; (800c1e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800c16a:	7818      	ldrb	r0, [r3, #0]
 800c16c:	4b23      	ldr	r3, [pc, #140]	; (800c1fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c16e:	b190      	cbz	r0, 800c196 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800c170:	6918      	ldr	r0, [r3, #16]
 800c172:	f040 0002 	orr.w	r0, r0, #2
 800c176:	6118      	str	r0, [r3, #16]
 800c178:	6810      	ldr	r0, [r2, #0]
 800c17a:	6158      	str	r0, [r3, #20]
 800c17c:	6918      	ldr	r0, [r3, #16]
 800c17e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800c182:	6118      	str	r0, [r3, #16]
 800c184:	680b      	ldr	r3, [r1, #0]
 800c186:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800c18a:	600b      	str	r3, [r1, #0]
 800c18c:	6813      	ldr	r3, [r2, #0]
 800c18e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c192:	6013      	str	r3, [r2, #0]
 800c194:	e7b2      	b.n	800c0fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c196:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c198:	f040 0002 	orr.w	r0, r0, #2
 800c19c:	6518      	str	r0, [r3, #80]	; 0x50
 800c19e:	6810      	ldr	r0, [r2, #0]
 800c1a0:	6558      	str	r0, [r3, #84]	; 0x54
 800c1a2:	69dd      	ldr	r5, [r3, #28]
 800c1a4:	07ad      	lsls	r5, r5, #30
 800c1a6:	bf48      	it	mi
 800c1a8:	6158      	strmi	r0, [r3, #20]
 800c1aa:	4814      	ldr	r0, [pc, #80]	; (800c1fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1ac:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c1ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c1b2:	6503      	str	r3, [r0, #80]	; 0x50
 800c1b4:	680b      	ldr	r3, [r1, #0]
 800c1b6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800c1ba:	600b      	str	r3, [r1, #0]
 800c1bc:	6813      	ldr	r3, [r2, #0]
 800c1be:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c1c2:	e7e6      	b.n	800c192 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800c1c4:	4b0b      	ldr	r3, [pc, #44]	; (800c1f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c1c6:	781a      	ldrb	r2, [r3, #0]
 800c1c8:	4b0c      	ldr	r3, [pc, #48]	; (800c1fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c1ca:	b132      	cbz	r2, 800c1da <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800c1cc:	691a      	ldr	r2, [r3, #16]
 800c1ce:	f022 0201 	bic.w	r2, r2, #1
 800c1d2:	611a      	str	r2, [r3, #16]
 800c1d4:	2000      	movs	r0, #0
 800c1d6:	6020      	str	r0, [r4, #0]
 800c1d8:	e7bb      	b.n	800c152 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c1da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c1dc:	f022 0201 	bic.w	r2, r2, #1
 800c1e0:	651a      	str	r2, [r3, #80]	; 0x50
 800c1e2:	e7f7      	b.n	800c1d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c1e4:	20002140 	andcs	r2, r0, r0, asr #2
 800c1e8:	20002144 	andcs	r2, r0, r4, asr #2
 800c1ec:	20002150 	andcs	r2, r0, r0, asr r1
 800c1f0:	1ffff700 	svcne	0x00fff700
 800c1f4:	2000214c 	andcs	r2, r0, ip, asr #2
 800c1f8:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c1fc:	40022000 	andmi	r2, r2, r0

0800c200 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800c200:	b570      	push	{r4, r5, r6, lr}
 800c202:	2400      	movs	r4, #0
 800c204:	9804      	ldr	r0, [sp, #16]
 800c206:	6004      	str	r4, [r0, #0]
 800c208:	4c48      	ldr	r4, [pc, #288]	; (800c32c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800c20a:	6820      	ldr	r0, [r4, #0]
 800c20c:	2804      	cmp	r0, #4
 800c20e:	d848      	bhi.n	800c2a2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800c210:	e8df f000 	tbb	[pc, r0]
 800c214:	22847c03 	addcs	r7, r4, #768	; 0x300
 800c218:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800c21c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c220:	6001      	str	r1, [r0, #0]
 800c222:	4844      	ldr	r0, [pc, #272]	; (800c334 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c224:	6003      	str	r3, [r0, #0]
 800c226:	4b44      	ldr	r3, [pc, #272]	; (800c338 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c228:	601a      	str	r2, [r3, #0]
 800c22a:	4b44      	ldr	r3, [pc, #272]	; (800c33c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c22c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c230:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c234:	4b42      	ldr	r3, [pc, #264]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c236:	d807      	bhi.n	800c248 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c238:	2201      	movs	r2, #1
 800c23a:	701a      	strb	r2, [r3, #0]
 800c23c:	f003 f98a 	bl	800f554 <fmc_bank0_unlock>
 800c240:	2303      	movs	r3, #3
 800c242:	6023      	str	r3, [r4, #0]
 800c244:	2000      	movs	r0, #0
 800c246:	e026      	b.n	800c296 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c248:	4a3e      	ldr	r2, [pc, #248]	; (800c344 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c24a:	4291      	cmp	r1, r2
 800c24c:	d3f4      	bcc.n	800c238 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c24e:	2200      	movs	r2, #0
 800c250:	701a      	strb	r2, [r3, #0]
 800c252:	f003 f98d 	bl	800f570 <fmc_bank1_unlock>
 800c256:	e7f3      	b.n	800c240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c258:	4d39      	ldr	r5, [pc, #228]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c25a:	782b      	ldrb	r3, [r5, #0]
 800c25c:	b15b      	cbz	r3, 800c276 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c25e:	f003 f9a5 	bl	800f5ac <fmc_bank0_state_get>
 800c262:	2801      	cmp	r0, #1
 800c264:	d0ee      	beq.n	800c244 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c266:	7829      	ldrb	r1, [r5, #0]
 800c268:	4b37      	ldr	r3, [pc, #220]	; (800c348 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c26a:	b939      	cbnz	r1, 800c27c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c26c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c26e:	f022 0201 	bic.w	r2, r2, #1
 800c272:	651a      	str	r2, [r3, #80]	; 0x50
 800c274:	e006      	b.n	800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c276:	f003 f9ab 	bl	800f5d0 <fmc_bank1_state_get>
 800c27a:	e7f2      	b.n	800c262 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c27c:	691a      	ldr	r2, [r3, #16]
 800c27e:	f022 0201 	bic.w	r2, r2, #1
 800c282:	611a      	str	r2, [r3, #16]
 800c284:	4b2c      	ldr	r3, [pc, #176]	; (800c338 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c286:	681b      	ldr	r3, [r3, #0]
 800c288:	b94b      	cbnz	r3, 800c29e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c28a:	b129      	cbz	r1, 800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c28c:	f003 f97e 	bl	800f58c <fmc_bank0_lock>
 800c290:	2300      	movs	r3, #0
 800c292:	2001      	movs	r0, #1
 800c294:	6023      	str	r3, [r4, #0]
 800c296:	bd70      	pop	{r4, r5, r6, pc}
 800c298:	f003 f980 	bl	800f59c <fmc_bank1_lock>
 800c29c:	e7f8      	b.n	800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c29e:	2304      	movs	r3, #4
 800c2a0:	e7cf      	b.n	800c242 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c2a2:	4a25      	ldr	r2, [pc, #148]	; (800c338 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c2a4:	6813      	ldr	r3, [r2, #0]
 800c2a6:	2b03      	cmp	r3, #3
 800c2a8:	d91a      	bls.n	800c2e0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c2aa:	4b25      	ldr	r3, [pc, #148]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c2ac:	7819      	ldrb	r1, [r3, #0]
 800c2ae:	4b26      	ldr	r3, [pc, #152]	; (800c348 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2b0:	b189      	cbz	r1, 800c2d6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c2b2:	6919      	ldr	r1, [r3, #16]
 800c2b4:	f041 0101 	orr.w	r1, r1, #1
 800c2b8:	6119      	str	r1, [r3, #16]
 800c2ba:	4d1e      	ldr	r5, [pc, #120]	; (800c334 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c2bc:	481c      	ldr	r0, [pc, #112]	; (800c330 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c2be:	6829      	ldr	r1, [r5, #0]
 800c2c0:	6803      	ldr	r3, [r0, #0]
 800c2c2:	f851 6b04 	ldr.w	r6, [r1], #4
 800c2c6:	f843 6b04 	str.w	r6, [r3], #4
 800c2ca:	6003      	str	r3, [r0, #0]
 800c2cc:	6813      	ldr	r3, [r2, #0]
 800c2ce:	6029      	str	r1, [r5, #0]
 800c2d0:	3b04      	subs	r3, #4
 800c2d2:	6013      	str	r3, [r2, #0]
 800c2d4:	e7b4      	b.n	800c240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c2d6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c2d8:	f041 0101 	orr.w	r1, r1, #1
 800c2dc:	6519      	str	r1, [r3, #80]	; 0x50
 800c2de:	e7ec      	b.n	800c2ba <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c2e0:	2b00      	cmp	r3, #0
 800c2e2:	d0ad      	beq.n	800c240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c2e4:	4b16      	ldr	r3, [pc, #88]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c2e6:	781a      	ldrb	r2, [r3, #0]
 800c2e8:	4b17      	ldr	r3, [pc, #92]	; (800c348 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c2ea:	b152      	cbz	r2, 800c302 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c2ec:	691a      	ldr	r2, [r3, #16]
 800c2ee:	f042 0201 	orr.w	r2, r2, #1
 800c2f2:	611a      	str	r2, [r3, #16]
 800c2f4:	4a0f      	ldr	r2, [pc, #60]	; (800c334 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c2f6:	4b0e      	ldr	r3, [pc, #56]	; (800c330 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c2f8:	6812      	ldr	r2, [r2, #0]
 800c2fa:	681b      	ldr	r3, [r3, #0]
 800c2fc:	6812      	ldr	r2, [r2, #0]
 800c2fe:	601a      	str	r2, [r3, #0]
 800c300:	e79e      	b.n	800c240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c302:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c304:	f042 0201 	orr.w	r2, r2, #1
 800c308:	651a      	str	r2, [r3, #80]	; 0x50
 800c30a:	e7f3      	b.n	800c2f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c30c:	4b0c      	ldr	r3, [pc, #48]	; (800c340 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c30e:	781a      	ldrb	r2, [r3, #0]
 800c310:	4b0d      	ldr	r3, [pc, #52]	; (800c348 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c312:	b132      	cbz	r2, 800c322 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c314:	691a      	ldr	r2, [r3, #16]
 800c316:	f022 0202 	bic.w	r2, r2, #2
 800c31a:	611a      	str	r2, [r3, #16]
 800c31c:	2000      	movs	r0, #0
 800c31e:	6020      	str	r0, [r4, #0]
 800c320:	e7b9      	b.n	800c296 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c322:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c324:	f022 0202 	bic.w	r2, r2, #2
 800c328:	651a      	str	r2, [r3, #80]	; 0x50
 800c32a:	e7f7      	b.n	800c31c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c32c:	20002140 	andcs	r2, r0, r0, asr #2
 800c330:	2000213c 	andcs	r2, r0, ip, lsr r1
 800c334:	20002148 	andcs	r2, r0, r8, asr #2
 800c338:	20002150 	andcs	r2, r0, r0, asr r1
 800c33c:	1ffff700 	svcne	0x00fff700
 800c340:	2000214c 	andcs	r2, r0, ip, asr #2
 800c344:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c348:	40022000 	andmi	r2, r2, r0

0800c34c <net_timers_run>:
 800c34c:	4b05      	ldr	r3, [pc, #20]	; (800c364 <net_timers_run+0x18>)
 800c34e:	4a06      	ldr	r2, [pc, #24]	; (800c368 <net_timers_run+0x1c>)
 800c350:	681b      	ldr	r3, [r3, #0]
 800c352:	6811      	ldr	r1, [r2, #0]
 800c354:	4299      	cmp	r1, r3
 800c356:	d803      	bhi.n	800c360 <net_timers_run+0x14>
 800c358:	3364      	adds	r3, #100	; 0x64
 800c35a:	6013      	str	r3, [r2, #0]
 800c35c:	f001 be76 	b.w	800e04c <igmp_timer>
 800c360:	4770      	bx	lr
 800c362:	bf00      	nop
 800c364:	2000a0f4 	strdcs	sl, [r0], -r4
 800c368:	2000216c 	andcs	r2, r0, ip, ror #2

0800c36c <rfc3927>:
 800c36c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c370:	4606      	mov	r6, r0
 800c372:	25ff      	movs	r5, #255	; 0xff
 800c374:	4b18      	ldr	r3, [pc, #96]	; (800c3d8 <rfc3927+0x6c>)
 800c376:	4f19      	ldr	r7, [pc, #100]	; (800c3dc <rfc3927+0x70>)
 800c378:	791a      	ldrb	r2, [r3, #4]
 800c37a:	78dc      	ldrb	r4, [r3, #3]
 800c37c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c3e0 <rfc3927+0x74>
 800c380:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c384:	f8d7 9000 	ldr.w	r9, [r7]
 800c388:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c3e4 <rfc3927+0x78>
 800c38c:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c3e8 <rfc3927+0x7c>
 800c390:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c394:	4659      	mov	r1, fp
 800c396:	4620      	mov	r0, r4
 800c398:	f001 fbb6 	bl	800db08 <arp_cache_lookup>
 800c39c:	b190      	cbz	r0, 800c3c4 <rfc3927+0x58>
 800c39e:	ba24      	rev	r4, r4
 800c3a0:	3401      	adds	r4, #1
 800c3a2:	3d01      	subs	r5, #1
 800c3a4:	ba24      	rev	r4, r4
 800c3a6:	b2ad      	uxth	r5, r5
 800c3a8:	4554      	cmp	r4, sl
 800c3aa:	bf08      	it	eq
 800c3ac:	4644      	moveq	r4, r8
 800c3ae:	b18d      	cbz	r5, 800c3d4 <rfc3927+0x68>
 800c3b0:	683b      	ldr	r3, [r7, #0]
 800c3b2:	eba3 0309 	sub.w	r3, r3, r9
 800c3b6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c3ba:	d3eb      	bcc.n	800c394 <rfc3927+0x28>
 800c3bc:	2400      	movs	r4, #0
 800c3be:	4623      	mov	r3, r4
 800c3c0:	4620      	mov	r0, r4
 800c3c2:	e002      	b.n	800c3ca <rfc3927+0x5e>
 800c3c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3c8:	2001      	movs	r0, #1
 800c3ca:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800c3ce:	6034      	str	r4, [r6, #0]
 800c3d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3d4:	462c      	mov	r4, r5
 800c3d6:	e7f2      	b.n	800c3be <rfc3927+0x52>
 800c3d8:	20002170 	andcs	r2, r0, r0, ror r1
 800c3dc:	2000a0f4 	strdcs	sl, [r0], -r4
 800c3e0:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c3e4:	20002178 	andcs	r2, r0, r8, ror r1
 800c3e8:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c3ec <_init_tcb>:
 800c3ec:	b510      	push	{r4, lr}
 800c3ee:	4603      	mov	r3, r0
 800c3f0:	2400      	movs	r4, #0
 800c3f2:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c3f6:	4293      	cmp	r3, r2
 800c3f8:	d10d      	bne.n	800c416 <_init_tcb+0x2a>
 800c3fa:	4b08      	ldr	r3, [pc, #32]	; (800c41c <_init_tcb+0x30>)
 800c3fc:	f640 3268 	movw	r2, #2920	; 0xb68
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	8702      	strh	r2, [r0, #56]	; 0x38
 800c404:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c408:	6283      	str	r3, [r0, #40]	; 0x28
 800c40a:	6243      	str	r3, [r0, #36]	; 0x24
 800c40c:	2301      	movs	r3, #1
 800c40e:	8001      	strh	r1, [r0, #0]
 800c410:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c414:	bd10      	pop	{r4, pc}
 800c416:	f803 4b01 	strb.w	r4, [r3], #1
 800c41a:	e7ec      	b.n	800c3f6 <_init_tcb+0xa>
 800c41c:	2000a0f4 	strdcs	sl, [r0], -r4

0800c420 <memcpy.isra.0>:
 800c420:	3801      	subs	r0, #1
 800c422:	440a      	add	r2, r1
 800c424:	4291      	cmp	r1, r2
 800c426:	d100      	bne.n	800c42a <memcpy.isra.0+0xa>
 800c428:	4770      	bx	lr
 800c42a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c42e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c432:	e7f7      	b.n	800c424 <memcpy.isra.0+0x4>

0800c434 <_bswap32>:
 800c434:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c436:	2204      	movs	r2, #4
 800c438:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c43c:	4629      	mov	r1, r5
 800c43e:	4604      	mov	r4, r0
 800c440:	eb0d 0002 	add.w	r0, sp, r2
 800c444:	f7ff ffec 	bl	800c420 <memcpy.isra.0>
 800c448:	2204      	movs	r2, #4
 800c44a:	9b01      	ldr	r3, [sp, #4]
 800c44c:	eb0d 0102 	add.w	r1, sp, r2
 800c450:	ba1b      	rev	r3, r3
 800c452:	4628      	mov	r0, r5
 800c454:	9301      	str	r3, [sp, #4]
 800c456:	f7ff ffe3 	bl	800c420 <memcpy.isra.0>
 800c45a:	2204      	movs	r2, #4
 800c45c:	3426      	adds	r4, #38	; 0x26
 800c45e:	eb0d 0002 	add.w	r0, sp, r2
 800c462:	4621      	mov	r1, r4
 800c464:	f7ff ffdc 	bl	800c420 <memcpy.isra.0>
 800c468:	2204      	movs	r2, #4
 800c46a:	9b01      	ldr	r3, [sp, #4]
 800c46c:	4620      	mov	r0, r4
 800c46e:	ba1b      	rev	r3, r3
 800c470:	eb0d 0102 	add.w	r1, sp, r2
 800c474:	9301      	str	r3, [sp, #4]
 800c476:	f7ff ffd3 	bl	800c420 <memcpy.isra.0>
 800c47a:	b003      	add	sp, #12
 800c47c:	bd30      	pop	{r4, r5, pc}
	...

0800c480 <_tcp_send_package>:
 800c480:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c484:	7a0b      	ldrb	r3, [r1, #8]
 800c486:	4605      	mov	r5, r0
 800c488:	f013 0f02 	tst.w	r3, #2
 800c48c:	bf0c      	ite	eq
 800c48e:	f04f 0805 	moveq.w	r8, #5
 800c492:	f04f 0806 	movne.w	r8, #6
 800c496:	f04f 0a00 	mov.w	sl, #0
 800c49a:	4c47      	ldr	r4, [pc, #284]	; (800c5b8 <_tcp_send_package+0x138>)
 800c49c:	460f      	mov	r7, r1
 800c49e:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c4a0:	f100 0108 	add.w	r1, r0, #8
 800c4a4:	2206      	movs	r2, #6
 800c4a6:	4620      	mov	r0, r4
 800c4a8:	f7ff ffba 	bl	800c420 <memcpy.isra.0>
 800c4ac:	4a43      	ldr	r2, [pc, #268]	; (800c5bc <_tcp_send_package+0x13c>)
 800c4ae:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800c4b2:	8813      	ldrh	r3, [r2, #0]
 800c4b4:	b2b6      	uxth	r6, r6
 800c4b6:	1c59      	adds	r1, r3, #1
 800c4b8:	8263      	strh	r3, [r4, #18]
 800c4ba:	f105 0904 	add.w	r9, r5, #4
 800c4be:	f106 0314 	add.w	r3, r6, #20
 800c4c2:	ba5b      	rev16	r3, r3
 800c4c4:	8011      	strh	r1, [r2, #0]
 800c4c6:	f104 001e 	add.w	r0, r4, #30
 800c4ca:	2204      	movs	r2, #4
 800c4cc:	4649      	mov	r1, r9
 800c4ce:	8223      	strh	r3, [r4, #16]
 800c4d0:	f7ff ffa6 	bl	800c420 <memcpy.isra.0>
 800c4d4:	2114      	movs	r1, #20
 800c4d6:	f104 000e 	add.w	r0, r4, #14
 800c4da:	f8a4 a018 	strh.w	sl, [r4, #24]
 800c4de:	f001 fe48 	bl	800e172 <net_chksum>
 800c4e2:	882b      	ldrh	r3, [r5, #0]
 800c4e4:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800c4e8:	8463      	strh	r3, [r4, #34]	; 0x22
 800c4ea:	886b      	ldrh	r3, [r5, #2]
 800c4ec:	8320      	strh	r0, [r4, #24]
 800c4ee:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c4f0:	683b      	ldr	r3, [r7, #0]
 800c4f2:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c4f4:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800c4fe:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c502:	7a3b      	ldrb	r3, [r7, #8]
 800c504:	8622      	strh	r2, [r4, #48]	; 0x30
 800c506:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c50a:	079b      	lsls	r3, r3, #30
 800c50c:	bf48      	it	mi
 800c50e:	f240 4302 	movwmi	r3, #1026	; 0x402
 800c512:	8baa      	ldrh	r2, [r5, #28]
 800c514:	bf48      	it	mi
 800c516:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800c518:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c51a:	bf42      	ittt	mi
 800c51c:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c520:	4622      	movmi	r2, r4
 800c522:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c526:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c528:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800c52c:	bf58      	it	pl
 800c52e:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c532:	2b00      	cmp	r3, #0
 800c534:	d13e      	bne.n	800c5b4 <_tcp_send_package+0x134>
 800c536:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c538:	481f      	ldr	r0, [pc, #124]	; (800c5b8 <_tcp_send_package+0x138>)
 800c53a:	ba5b      	rev16	r3, r3
 800c53c:	8463      	strh	r3, [r4, #34]	; 0x22
 800c53e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c540:	ba5b      	rev16	r3, r3
 800c542:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c544:	f7ff ff76 	bl	800c434 <_bswap32>
 800c548:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c54a:	a801      	add	r0, sp, #4
 800c54c:	ba5b      	rev16	r3, r3
 800c54e:	8623      	strh	r3, [r4, #48]	; 0x30
 800c550:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c552:	220c      	movs	r2, #12
 800c554:	ba5b      	rev16	r3, r3
 800c556:	491a      	ldr	r1, [pc, #104]	; (800c5c0 <_tcp_send_package+0x140>)
 800c558:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c55a:	f7ff ff61 	bl	800c420 <memcpy.isra.0>
 800c55e:	2204      	movs	r2, #4
 800c560:	4918      	ldr	r1, [pc, #96]	; (800c5c4 <_tcp_send_package+0x144>)
 800c562:	4817      	ldr	r0, [pc, #92]	; (800c5c0 <_tcp_send_package+0x140>)
 800c564:	f7ff ff5c 	bl	800c420 <memcpy.isra.0>
 800c568:	2204      	movs	r2, #4
 800c56a:	4649      	mov	r1, r9
 800c56c:	4816      	ldr	r0, [pc, #88]	; (800c5c8 <_tcp_send_package+0x148>)
 800c56e:	f7ff ff57 	bl	800c420 <memcpy.isra.0>
 800c572:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800c576:	f106 010c 	add.w	r1, r6, #12
 800c57a:	83e3      	strh	r3, [r4, #30]
 800c57c:	4810      	ldr	r0, [pc, #64]	; (800c5c0 <_tcp_send_package+0x140>)
 800c57e:	ba73      	rev16	r3, r6
 800c580:	8423      	strh	r3, [r4, #32]
 800c582:	f001 fdf6 	bl	800e172 <net_chksum>
 800c586:	a901      	add	r1, sp, #4
 800c588:	4605      	mov	r5, r0
 800c58a:	220c      	movs	r2, #12
 800c58c:	480c      	ldr	r0, [pc, #48]	; (800c5c0 <_tcp_send_package+0x140>)
 800c58e:	f7ff ff47 	bl	800c420 <memcpy.isra.0>
 800c592:	4809      	ldr	r0, [pc, #36]	; (800c5b8 <_tcp_send_package+0x138>)
 800c594:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c598:	8665      	strh	r5, [r4, #50]	; 0x32
 800c59a:	b004      	add	sp, #16
 800c59c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5a0:	f003 bc2a 	b.w	800fdf8 <emac_eth_send>
 800c5a4:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c5a6:	5cc9      	ldrb	r1, [r1, r3]
 800c5a8:	54d1      	strb	r1, [r2, r3]
 800c5aa:	3301      	adds	r3, #1
 800c5ac:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c5ae:	4299      	cmp	r1, r3
 800c5b0:	d8f8      	bhi.n	800c5a4 <_tcp_send_package+0x124>
 800c5b2:	e7c0      	b.n	800c536 <_tcp_send_package+0xb6>
 800c5b4:	2300      	movs	r3, #0
 800c5b6:	e7f9      	b.n	800c5ac <_tcp_send_package+0x12c>
 800c5b8:	20002d38 	andcs	r2, r0, r8, lsr sp
 800c5bc:	20002180 	andcs	r2, r0, r0, lsl #3
 800c5c0:	20002d4e 	andcs	r2, r0, lr, asr #26
 800c5c4:	20002154 	andcs	r2, r0, r4, asr r1
 800c5c8:	20002d52 	andcs	r2, r0, r2, asr sp

0800c5cc <_send_reset>:
 800c5cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c5ce:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c5d2:	4604      	mov	r4, r0
 800c5d4:	075a      	lsls	r2, r3, #29
 800c5d6:	460e      	mov	r6, r1
 800c5d8:	d421      	bmi.n	800c61e <_send_reset+0x52>
 800c5da:	2204      	movs	r2, #4
 800c5dc:	f013 0310 	ands.w	r3, r3, #16
 800c5e0:	f88d 200c 	strb.w	r2, [sp, #12]
 800c5e4:	d01d      	beq.n	800c622 <_send_reset+0x56>
 800c5e6:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c5ea:	4668      	mov	r0, sp
 800c5ec:	f7ff ff18 	bl	800c420 <memcpy.isra.0>
 800c5f0:	9b00      	ldr	r3, [sp, #0]
 800c5f2:	9301      	str	r3, [sp, #4]
 800c5f4:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c5f8:	4668      	mov	r0, sp
 800c5fa:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c5fe:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c602:	07db      	lsls	r3, r3, #31
 800c604:	f04f 0204 	mov.w	r2, #4
 800c608:	bf48      	it	mi
 800c60a:	3501      	addmi	r5, #1
 800c60c:	f7ff ff08 	bl	800c420 <memcpy.isra.0>
 800c610:	9b00      	ldr	r3, [sp, #0]
 800c612:	4630      	mov	r0, r6
 800c614:	441d      	add	r5, r3
 800c616:	a901      	add	r1, sp, #4
 800c618:	9502      	str	r5, [sp, #8]
 800c61a:	f7ff ff31 	bl	800c480 <_tcp_send_package>
 800c61e:	b004      	add	sp, #16
 800c620:	bd70      	pop	{r4, r5, r6, pc}
 800c622:	9301      	str	r3, [sp, #4]
 800c624:	2314      	movs	r3, #20
 800c626:	f88d 300c 	strb.w	r3, [sp, #12]
 800c62a:	e7e3      	b.n	800c5f4 <_send_reset+0x28>

0800c62c <tcp_begin>:
 800c62c:	b508      	push	{r3, lr}
 800c62e:	4b0a      	ldr	r3, [pc, #40]	; (800c658 <tcp_begin+0x2c>)
 800c630:	4601      	mov	r1, r0
 800c632:	881a      	ldrh	r2, [r3, #0]
 800c634:	4282      	cmp	r2, r0
 800c636:	d102      	bne.n	800c63e <tcp_begin+0x12>
 800c638:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c63c:	b130      	cbz	r0, 800c64c <tcp_begin+0x20>
 800c63e:	b12a      	cbz	r2, 800c64c <tcp_begin+0x20>
 800c640:	4806      	ldr	r0, [pc, #24]	; (800c65c <tcp_begin+0x30>)
 800c642:	f002 fac5 	bl	800ebd0 <console_error>
 800c646:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c64a:	bd08      	pop	{r3, pc}
 800c64c:	4802      	ldr	r0, [pc, #8]	; (800c658 <tcp_begin+0x2c>)
 800c64e:	8019      	strh	r1, [r3, #0]
 800c650:	f7ff fecc 	bl	800c3ec <_init_tcb>
 800c654:	2000      	movs	r0, #0
 800c656:	e7f8      	b.n	800c64a <tcp_begin+0x1e>
 800c658:	20002cf4 	strdcs	r2, [r0], -r4
 800c65c:	0801247e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, sp}

0800c660 <tcp_write>:
 800c660:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c664:	429a      	cmp	r2, r3
 800c666:	bf28      	it	cs
 800c668:	461a      	movcs	r2, r3
 800c66a:	2344      	movs	r3, #68	; 0x44
 800c66c:	b530      	push	{r4, r5, lr}
 800c66e:	4c0d      	ldr	r4, [pc, #52]	; (800c6a4 <tcp_write+0x44>)
 800c670:	b085      	sub	sp, #20
 800c672:	fb03 4400 	mla	r4, r3, r0, r4
 800c676:	6963      	ldr	r3, [r4, #20]
 800c678:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c67a:	9301      	str	r3, [sp, #4]
 800c67c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c67e:	4620      	mov	r0, r4
 800c680:	9302      	str	r3, [sp, #8]
 800c682:	2318      	movs	r3, #24
 800c684:	8622      	strh	r2, [r4, #48]	; 0x30
 800c686:	a901      	add	r1, sp, #4
 800c688:	4615      	mov	r5, r2
 800c68a:	f88d 300c 	strb.w	r3, [sp, #12]
 800c68e:	f7ff fef7 	bl	800c480 <_tcp_send_package>
 800c692:	2300      	movs	r3, #0
 800c694:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c696:	8623      	strh	r3, [r4, #48]	; 0x30
 800c698:	6963      	ldr	r3, [r4, #20]
 800c69a:	442b      	add	r3, r5
 800c69c:	6163      	str	r3, [r4, #20]
 800c69e:	b005      	add	sp, #20
 800c6a0:	bd30      	pop	{r4, r5, pc}
 800c6a2:	bf00      	nop
 800c6a4:	20002cf4 	strdcs	r2, [r0], -r4

0800c6a8 <tcp_read>:
 800c6a8:	2344      	movs	r3, #68	; 0x44
 800c6aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6ac:	4c1c      	ldr	r4, [pc, #112]	; (800c720 <tcp_read+0x78>)
 800c6ae:	b085      	sub	sp, #20
 800c6b0:	fb03 4400 	mla	r4, r3, r0, r4
 800c6b4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c6b8:	2b07      	cmp	r3, #7
 800c6ba:	d112      	bne.n	800c6e2 <tcp_read+0x3a>
 800c6bc:	6963      	ldr	r3, [r4, #20]
 800c6be:	4620      	mov	r0, r4
 800c6c0:	9301      	str	r3, [sp, #4]
 800c6c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c6c4:	a901      	add	r1, sp, #4
 800c6c6:	9302      	str	r3, [sp, #8]
 800c6c8:	2311      	movs	r3, #17
 800c6ca:	f88d 300c 	strb.w	r3, [sp, #12]
 800c6ce:	f7ff fed7 	bl	800c480 <_tcp_send_package>
 800c6d2:	2309      	movs	r3, #9
 800c6d4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c6d8:	6963      	ldr	r3, [r4, #20]
 800c6da:	3301      	adds	r3, #1
 800c6dc:	6163      	str	r3, [r4, #20]
 800c6de:	2000      	movs	r0, #0
 800c6e0:	e01b      	b.n	800c71a <tcp_read+0x72>
 800c6e2:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c6e6:	4358      	muls	r0, r3
 800c6e8:	4a0e      	ldr	r2, [pc, #56]	; (800c724 <tcp_read+0x7c>)
 800c6ea:	1817      	adds	r7, r2, r0
 800c6ec:	887b      	ldrh	r3, [r7, #2]
 800c6ee:	5a15      	ldrh	r5, [r2, r0]
 800c6f0:	429d      	cmp	r5, r3
 800c6f2:	d0f4      	beq.n	800c6de <tcp_read+0x36>
 800c6f4:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c6f8:	435d      	muls	r5, r3
 800c6fa:	1d06      	adds	r6, r0, #4
 800c6fc:	442e      	add	r6, r5
 800c6fe:	4416      	add	r6, r2
 800c700:	4405      	add	r5, r0
 800c702:	600e      	str	r6, [r1, #0]
 800c704:	442a      	add	r2, r5
 800c706:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c70a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c70c:	3301      	adds	r3, #1
 800c70e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c712:	f003 0301 	and.w	r3, r3, #1
 800c716:	8722      	strh	r2, [r4, #56]	; 0x38
 800c718:	807b      	strh	r3, [r7, #2]
 800c71a:	b005      	add	sp, #20
 800c71c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c71e:	bf00      	nop
 800c720:	20002cf4 	strdcs	r2, [r0], -r4
 800c724:	20002184 	andcs	r2, r0, r4, lsl #3

0800c728 <memcpy.isra.0>:
 800c728:	3801      	subs	r0, #1
 800c72a:	440a      	add	r2, r1
 800c72c:	4291      	cmp	r1, r2
 800c72e:	d100      	bne.n	800c732 <memcpy.isra.0+0xa>
 800c730:	4770      	bx	lr
 800c732:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c736:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c73a:	e7f7      	b.n	800c72c <memcpy.isra.0+0x4>

0800c73c <net_memcpy>:
 800c73c:	ea40 0301 	orr.w	r3, r0, r1
 800c740:	079b      	lsls	r3, r3, #30
 800c742:	b570      	push	{r4, r5, r6, lr}
 800c744:	d108      	bne.n	800c758 <net_memcpy+0x1c>
 800c746:	f022 0303 	bic.w	r3, r2, #3
 800c74a:	1f04      	subs	r4, r0, #4
 800c74c:	18cd      	adds	r5, r1, r3
 800c74e:	42a9      	cmp	r1, r5
 800c750:	d108      	bne.n	800c764 <net_memcpy+0x28>
 800c752:	1ad2      	subs	r2, r2, r3
 800c754:	4403      	add	r3, r0
 800c756:	e000      	b.n	800c75a <net_memcpy+0x1e>
 800c758:	4603      	mov	r3, r0
 800c75a:	3b01      	subs	r3, #1
 800c75c:	440a      	add	r2, r1
 800c75e:	4291      	cmp	r1, r2
 800c760:	d105      	bne.n	800c76e <net_memcpy+0x32>
 800c762:	bd70      	pop	{r4, r5, r6, pc}
 800c764:	f851 6b04 	ldr.w	r6, [r1], #4
 800c768:	f844 6f04 	str.w	r6, [r4, #4]!
 800c76c:	e7ef      	b.n	800c74e <net_memcpy+0x12>
 800c76e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c772:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c776:	e7f2      	b.n	800c75e <net_memcpy+0x22>

0800c778 <udp_set_ip>:
 800c778:	2204      	movs	r2, #4
 800c77a:	b513      	push	{r0, r1, r4, lr}
 800c77c:	4604      	mov	r4, r0
 800c77e:	6803      	ldr	r3, [r0, #0]
 800c780:	eb0d 0102 	add.w	r1, sp, r2
 800c784:	4808      	ldr	r0, [pc, #32]	; (800c7a8 <udp_set_ip+0x30>)
 800c786:	9301      	str	r3, [sp, #4]
 800c788:	f7ff ffce 	bl	800c728 <memcpy.isra.0>
 800c78c:	6862      	ldr	r2, [r4, #4]
 800c78e:	4b07      	ldr	r3, [pc, #28]	; (800c7ac <udp_set_ip+0x34>)
 800c790:	43d1      	mvns	r1, r2
 800c792:	6019      	str	r1, [r3, #0]
 800c794:	6823      	ldr	r3, [r4, #0]
 800c796:	4013      	ands	r3, r2
 800c798:	4a05      	ldr	r2, [pc, #20]	; (800c7b0 <udp_set_ip+0x38>)
 800c79a:	6013      	str	r3, [r2, #0]
 800c79c:	68a2      	ldr	r2, [r4, #8]
 800c79e:	4b05      	ldr	r3, [pc, #20]	; (800c7b4 <udp_set_ip+0x3c>)
 800c7a0:	601a      	str	r2, [r3, #0]
 800c7a2:	b002      	add	sp, #8
 800c7a4:	bd10      	pop	{r4, pc}
 800c7a6:	bf00      	nop
 800c7a8:	2000900e 	andcs	r9, r0, lr
 800c7ac:	20003324 	andcs	r3, r0, r4, lsr #6
 800c7b0:	2000332c 	andcs	r3, r0, ip, lsr #6
 800c7b4:	20003328 	andcs	r3, r0, r8, lsr #6

0800c7b8 <udp_bind>:
 800c7b8:	4a0a      	ldr	r2, [pc, #40]	; (800c7e4 <udp_bind+0x2c>)
 800c7ba:	4603      	mov	r3, r0
 800c7bc:	b510      	push	{r4, lr}
 800c7be:	2000      	movs	r0, #0
 800c7c0:	4614      	mov	r4, r2
 800c7c2:	f852 1b04 	ldr.w	r1, [r2], #4
 800c7c6:	4299      	cmp	r1, r3
 800c7c8:	d008      	beq.n	800c7dc <udp_bind+0x24>
 800c7ca:	b141      	cbz	r1, 800c7de <udp_bind+0x26>
 800c7cc:	3001      	adds	r0, #1
 800c7ce:	2808      	cmp	r0, #8
 800c7d0:	d1f7      	bne.n	800c7c2 <udp_bind+0xa>
 800c7d2:	4805      	ldr	r0, [pc, #20]	; (800c7e8 <udp_bind+0x30>)
 800c7d4:	f002 f9fc 	bl	800ebd0 <console_error>
 800c7d8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c7dc:	bd10      	pop	{r4, pc}
 800c7de:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c7e2:	e7fb      	b.n	800c7dc <udp_bind+0x24>
 800c7e4:	20003334 	andcs	r3, r0, r4, lsr r3
 800c7e8:	0801249e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, sp}

0800c7ec <udp_unbind>:
 800c7ec:	4a0c      	ldr	r2, [pc, #48]	; (800c820 <udp_unbind+0x34>)
 800c7ee:	2300      	movs	r3, #0
 800c7f0:	4611      	mov	r1, r2
 800c7f2:	b510      	push	{r4, lr}
 800c7f4:	f852 4b04 	ldr.w	r4, [r2], #4
 800c7f8:	4284      	cmp	r4, r0
 800c7fa:	d108      	bne.n	800c80e <udp_unbind+0x22>
 800c7fc:	2000      	movs	r0, #0
 800c7fe:	f640 3294 	movw	r2, #2964	; 0xb94
 800c802:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c806:	4353      	muls	r3, r2
 800c808:	4a06      	ldr	r2, [pc, #24]	; (800c824 <udp_unbind+0x38>)
 800c80a:	50d0      	str	r0, [r2, r3]
 800c80c:	bd10      	pop	{r4, pc}
 800c80e:	3301      	adds	r3, #1
 800c810:	2b08      	cmp	r3, #8
 800c812:	d1ef      	bne.n	800c7f4 <udp_unbind+0x8>
 800c814:	4804      	ldr	r0, [pc, #16]	; (800c828 <udp_unbind+0x3c>)
 800c816:	f002 f9db 	bl	800ebd0 <console_error>
 800c81a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c81e:	e7f5      	b.n	800c80c <udp_unbind+0x20>
 800c820:	20003334 	andcs	r3, r0, r4, lsr r3
 800c824:	20003354 	andcs	r3, r0, r4, asr r3
 800c828:	080124a3 	stmdaeq	r1, {r0, r1, r5, r7, sl, sp}

0800c82c <udp_recv>:
 800c82c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c830:	4604      	mov	r4, r0
 800c832:	4698      	mov	r8, r3
 800c834:	f640 3394 	movw	r3, #2964	; 0xb94
 800c838:	435c      	muls	r4, r3
 800c83a:	4608      	mov	r0, r1
 800c83c:	4915      	ldr	r1, [pc, #84]	; (800c894 <udp_recv+0x68>)
 800c83e:	190f      	adds	r7, r1, r4
 800c840:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c844:	5b0b      	ldrh	r3, [r1, r4]
 800c846:	4563      	cmp	r3, ip
 800c848:	d021      	beq.n	800c88e <udp_recv+0x62>
 800c84a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c84e:	fb03 fc0c 	mul.w	ip, r3, ip
 800c852:	eb0c 0604 	add.w	r6, ip, r4
 800c856:	440e      	add	r6, r1
 800c858:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c85c:	3404      	adds	r4, #4
 800c85e:	4295      	cmp	r5, r2
 800c860:	bf28      	it	cs
 800c862:	4615      	movcs	r5, r2
 800c864:	4464      	add	r4, ip
 800c866:	462a      	mov	r2, r5
 800c868:	4421      	add	r1, r4
 800c86a:	f7ff ff67 	bl	800c73c <net_memcpy>
 800c86e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c872:	f8c8 3000 	str.w	r3, [r8]
 800c876:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c87a:	9b06      	ldr	r3, [sp, #24]
 800c87c:	801a      	strh	r2, [r3, #0]
 800c87e:	887b      	ldrh	r3, [r7, #2]
 800c880:	3301      	adds	r3, #1
 800c882:	f003 0301 	and.w	r3, r3, #1
 800c886:	807b      	strh	r3, [r7, #2]
 800c888:	4628      	mov	r0, r5
 800c88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c88e:	2500      	movs	r5, #0
 800c890:	e7fa      	b.n	800c888 <udp_recv+0x5c>
 800c892:	bf00      	nop
 800c894:	20003354 	andcs	r3, r0, r4, asr r3

0800c898 <udp_recv2>:
 800c898:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c89a:	f640 3594 	movw	r5, #2964	; 0xb94
 800c89e:	4368      	muls	r0, r5
 800c8a0:	4c0f      	ldr	r4, [pc, #60]	; (800c8e0 <udp_recv2+0x48>)
 800c8a2:	1827      	adds	r7, r4, r0
 800c8a4:	887d      	ldrh	r5, [r7, #2]
 800c8a6:	5a26      	ldrh	r6, [r4, r0]
 800c8a8:	42ae      	cmp	r6, r5
 800c8aa:	d017      	beq.n	800c8dc <udp_recv2+0x44>
 800c8ac:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c8b0:	fb0c f505 	mul.w	r5, ip, r5
 800c8b4:	1d06      	adds	r6, r0, #4
 800c8b6:	442e      	add	r6, r5
 800c8b8:	4405      	add	r5, r0
 800c8ba:	4426      	add	r6, r4
 800c8bc:	442c      	add	r4, r5
 800c8be:	600e      	str	r6, [r1, #0]
 800c8c0:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c8c4:	6011      	str	r1, [r2, #0]
 800c8c6:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c8ca:	801a      	strh	r2, [r3, #0]
 800c8cc:	887b      	ldrh	r3, [r7, #2]
 800c8ce:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c8d2:	3301      	adds	r3, #1
 800c8d4:	f003 0301 	and.w	r3, r3, #1
 800c8d8:	807b      	strh	r3, [r7, #2]
 800c8da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8dc:	2000      	movs	r0, #0
 800c8de:	e7fc      	b.n	800c8da <udp_recv2+0x42>
 800c8e0:	20003354 	andcs	r3, r0, r4, asr r3

0800c8e4 <udp_send>:
 800c8e4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c8e8:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ca1c <udp_send+0x138>
 800c8ec:	461c      	mov	r4, r3
 800c8ee:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c8f2:	4607      	mov	r7, r0
 800c8f4:	4688      	mov	r8, r1
 800c8f6:	4616      	mov	r6, r2
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	f000 808b 	beq.w	800ca14 <udp_send+0x130>
 800c8fe:	1c63      	adds	r3, r4, #1
 800c900:	d141      	bne.n	800c986 <udp_send+0xa2>
 800c902:	4a47      	ldr	r2, [pc, #284]	; (800ca20 <udp_send+0x13c>)
 800c904:	2307      	movs	r3, #7
 800c906:	4611      	mov	r1, r2
 800c908:	20ff      	movs	r0, #255	; 0xff
 800c90a:	e001      	b.n	800c910 <udp_send+0x2c>
 800c90c:	f802 0b01 	strb.w	r0, [r2], #1
 800c910:	3b01      	subs	r3, #1
 800c912:	d1fb      	bne.n	800c90c <udp_send+0x28>
 800c914:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c918:	83cb      	strh	r3, [r1, #30]
 800c91a:	840b      	strh	r3, [r1, #32]
 800c91c:	2500      	movs	r5, #0
 800c91e:	f8df a104 	ldr.w	sl, [pc, #260]	; 800ca24 <udp_send+0x140>
 800c922:	4c3f      	ldr	r4, [pc, #252]	; (800ca20 <udp_send+0x13c>)
 800c924:	f8ba 3000 	ldrh.w	r3, [sl]
 800c928:	2114      	movs	r1, #20
 800c92a:	8263      	strh	r3, [r4, #18]
 800c92c:	f106 031c 	add.w	r3, r6, #28
 800c930:	ba5b      	rev16	r3, r3
 800c932:	f104 000e 	add.w	r0, r4, #14
 800c936:	8223      	strh	r3, [r4, #16]
 800c938:	8325      	strh	r5, [r4, #24]
 800c93a:	f001 fc1a 	bl	800e172 <net_chksum>
 800c93e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c942:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c946:	ba5b      	rev16	r3, r3
 800c948:	8463      	strh	r3, [r4, #34]	; 0x22
 800c94a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c94e:	4632      	mov	r2, r6
 800c950:	ba5b      	rev16	r3, r3
 800c952:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c954:	f106 0308 	add.w	r3, r6, #8
 800c958:	ba5b      	rev16	r3, r3
 800c95a:	bf28      	it	cs
 800c95c:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c960:	4641      	mov	r1, r8
 800c962:	8320      	strh	r0, [r4, #24]
 800c964:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c968:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c96a:	f7ff fee7 	bl	800c73c <net_memcpy>
 800c96e:	4620      	mov	r0, r4
 800c970:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c974:	f003 fa40 	bl	800fdf8 <emac_eth_send>
 800c978:	f8ba 3000 	ldrh.w	r3, [sl]
 800c97c:	4628      	mov	r0, r5
 800c97e:	3301      	adds	r3, #1
 800c980:	f8aa 3000 	strh.w	r3, [sl]
 800c984:	e037      	b.n	800c9f6 <udp_send+0x112>
 800c986:	4b28      	ldr	r3, [pc, #160]	; (800ca28 <udp_send+0x144>)
 800c988:	681b      	ldr	r3, [r3, #0]
 800c98a:	43a3      	bics	r3, r4
 800c98c:	d10f      	bne.n	800c9ae <udp_send+0xca>
 800c98e:	2307      	movs	r3, #7
 800c990:	21ff      	movs	r1, #255	; 0xff
 800c992:	4a23      	ldr	r2, [pc, #140]	; (800ca20 <udp_send+0x13c>)
 800c994:	e001      	b.n	800c99a <udp_send+0xb6>
 800c996:	f802 1b01 	strb.w	r1, [r2], #1
 800c99a:	3b01      	subs	r3, #1
 800c99c:	d1fb      	bne.n	800c996 <udp_send+0xb2>
 800c99e:	2204      	movs	r2, #4
 800c9a0:	4822      	ldr	r0, [pc, #136]	; (800ca2c <udp_send+0x148>)
 800c9a2:	eb0d 0102 	add.w	r1, sp, r2
 800c9a6:	9401      	str	r4, [sp, #4]
 800c9a8:	f7ff febe 	bl	800c728 <memcpy.isra.0>
 800c9ac:	e7b6      	b.n	800c91c <udp_send+0x38>
 800c9ae:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c9b2:	2be0      	cmp	r3, #224	; 0xe0
 800c9b4:	d10e      	bne.n	800c9d4 <udp_send+0xf0>
 800c9b6:	491e      	ldr	r1, [pc, #120]	; (800ca30 <udp_send+0x14c>)
 800c9b8:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c9bc:	70cb      	strb	r3, [r1, #3]
 800c9be:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c9c2:	710b      	strb	r3, [r1, #4]
 800c9c4:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c9c8:	2206      	movs	r2, #6
 800c9ca:	4815      	ldr	r0, [pc, #84]	; (800ca20 <udp_send+0x13c>)
 800c9cc:	714b      	strb	r3, [r1, #5]
 800c9ce:	f7ff feab 	bl	800c728 <memcpy.isra.0>
 800c9d2:	e7e4      	b.n	800c99e <udp_send+0xba>
 800c9d4:	4b17      	ldr	r3, [pc, #92]	; (800ca34 <udp_send+0x150>)
 800c9d6:	681b      	ldr	r3, [r3, #0]
 800c9d8:	43a3      	bics	r3, r4
 800c9da:	d00f      	beq.n	800c9fc <udp_send+0x118>
 800c9dc:	4d16      	ldr	r5, [pc, #88]	; (800ca38 <udp_send+0x154>)
 800c9de:	4910      	ldr	r1, [pc, #64]	; (800ca20 <udp_send+0x13c>)
 800c9e0:	6828      	ldr	r0, [r5, #0]
 800c9e2:	f001 f891 	bl	800db08 <arp_cache_lookup>
 800c9e6:	682b      	ldr	r3, [r5, #0]
 800c9e8:	4298      	cmp	r0, r3
 800c9ea:	d0d8      	beq.n	800c99e <udp_send+0xba>
 800c9ec:	4813      	ldr	r0, [pc, #76]	; (800ca3c <udp_send+0x158>)
 800c9ee:	f002 f8ef 	bl	800ebd0 <console_error>
 800c9f2:	f06f 0002 	mvn.w	r0, #2
 800c9f6:	b002      	add	sp, #8
 800c9f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9fc:	4620      	mov	r0, r4
 800c9fe:	4908      	ldr	r1, [pc, #32]	; (800ca20 <udp_send+0x13c>)
 800ca00:	f001 f882 	bl	800db08 <arp_cache_lookup>
 800ca04:	42a0      	cmp	r0, r4
 800ca06:	d0ca      	beq.n	800c99e <udp_send+0xba>
 800ca08:	480d      	ldr	r0, [pc, #52]	; (800ca40 <udp_send+0x15c>)
 800ca0a:	f002 f8e1 	bl	800ebd0 <console_error>
 800ca0e:	f06f 0001 	mvn.w	r0, #1
 800ca12:	e7f0      	b.n	800c9f6 <udp_send+0x112>
 800ca14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ca18:	e7ed      	b.n	800c9f6 <udp_send+0x112>
 800ca1a:	bf00      	nop
 800ca1c:	20003334 	andcs	r3, r0, r4, lsr r3
 800ca20:	20008ff4 	strdcs	r8, [r0], -r4
 800ca24:	20003330 	andcs	r3, r0, r0, lsr r3
 800ca28:	20003324 	andcs	r3, r0, r4, lsr #6
 800ca2c:	20009012 	andcs	r9, r0, r2, lsl r0
 800ca30:	20000010 	andcs	r0, r0, r0, lsl r0
 800ca34:	2000332c 	andcs	r3, r0, ip, lsr #6
 800ca38:	20003328 	andcs	r3, r0, r8, lsr #6
 800ca3c:	080124ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, sl, sp}
 800ca40:	080124d1 	stmdaeq	r1, {r0, r4, r6, r7, sl, sp}

0800ca44 <strlen>:
 800ca44:	4603      	mov	r3, r0
 800ca46:	461a      	mov	r2, r3
 800ca48:	7811      	ldrb	r1, [r2, #0]
 800ca4a:	3301      	adds	r3, #1
 800ca4c:	2900      	cmp	r1, #0
 800ca4e:	d1fa      	bne.n	800ca46 <strlen+0x2>
 800ca50:	1a10      	subs	r0, r2, r0
 800ca52:	4770      	bx	lr

0800ca54 <strcmp>:
 800ca54:	1e43      	subs	r3, r0, #1
 800ca56:	3901      	subs	r1, #1
 800ca58:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ca5c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ca60:	4290      	cmp	r0, r2
 800ca62:	d001      	beq.n	800ca68 <strcmp+0x14>
 800ca64:	1a80      	subs	r0, r0, r2
 800ca66:	e001      	b.n	800ca6c <strcmp+0x18>
 800ca68:	2800      	cmp	r0, #0
 800ca6a:	d1f5      	bne.n	800ca58 <strcmp+0x4>
 800ca6c:	4770      	bx	lr

0800ca6e <strcpy.isra.0>:
 800ca6e:	3801      	subs	r0, #1
 800ca70:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ca74:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ca78:	2b00      	cmp	r3, #0
 800ca7a:	d1f9      	bne.n	800ca70 <strcpy.isra.0+0x2>
 800ca7c:	4770      	bx	lr

0800ca7e <strcat.isra.0>:
 800ca7e:	b538      	push	{r3, r4, r5, lr}
 800ca80:	4604      	mov	r4, r0
 800ca82:	460d      	mov	r5, r1
 800ca84:	f7ff ffde 	bl	800ca44 <strlen>
 800ca88:	4629      	mov	r1, r5
 800ca8a:	4420      	add	r0, r4
 800ca8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca90:	f7ff bfed 	b.w	800ca6e <strcpy.isra.0>

0800ca94 <MDNS::MDNS()>:
 800ca94:	b513      	push	{r0, r1, r4, lr}
 800ca96:	4604      	mov	r4, r0
 800ca98:	a901      	add	r1, sp, #4
 800ca9a:	4804      	ldr	r0, [pc, #16]	; (800caac <MDNS::MDNS()+0x18>)
 800ca9c:	f002 f9f2 	bl	800ee84 <inet_aton>
 800caa0:	4620      	mov	r0, r4
 800caa2:	4b03      	ldr	r3, [pc, #12]	; (800cab0 <MDNS::MDNS()+0x1c>)
 800caa4:	9a01      	ldr	r2, [sp, #4]
 800caa6:	601a      	str	r2, [r3, #0]
 800caa8:	b002      	add	sp, #8
 800caaa:	bd10      	pop	{r4, pc}
 800caac:	08012502 	stmdaeq	r1, {r1, r8, sl, sp}
 800cab0:	200095e8 	andcs	r9, r0, r8, ror #11

0800cab4 <MDNS::SetName(char const*)>:
 800cab4:	b538      	push	{r3, r4, r5, lr}
 800cab6:	4d0b      	ldr	r5, [pc, #44]	; (800cae4 <MDNS::SetName(char const*)+0x30>)
 800cab8:	460c      	mov	r4, r1
 800caba:	6828      	ldr	r0, [r5, #0]
 800cabc:	b108      	cbz	r0, 800cac2 <MDNS::SetName(char const*)+0xe>
 800cabe:	f002 f9db 	bl	800ee78 <operator delete[](void*)>
 800cac2:	4620      	mov	r0, r4
 800cac4:	f7ff ffbe 	bl	800ca44 <strlen>
 800cac8:	3007      	adds	r0, #7
 800caca:	f002 f9d9 	bl	800ee80 <operator new[](unsigned int)>
 800cace:	4621      	mov	r1, r4
 800cad0:	6028      	str	r0, [r5, #0]
 800cad2:	f7ff ffcc 	bl	800ca6e <strcpy.isra.0>
 800cad6:	6828      	ldr	r0, [r5, #0]
 800cad8:	4903      	ldr	r1, [pc, #12]	; (800cae8 <MDNS::SetName(char const*)+0x34>)
 800cada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cade:	f7ff bfce 	b.w	800ca7e <strcat.isra.0>
 800cae2:	bf00      	nop
 800cae4:	20009a18 	andcs	r9, r0, r8, lsl sl
 800cae8:	08012512 	stmdaeq	r1, {r1, r4, r8, sl, sp}

0800caec <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800caec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800caf0:	f04f 0e00 	mov.w	lr, #0
 800caf4:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800caf8:	4675      	mov	r5, lr
 800cafa:	4e1b      	ldr	r6, [pc, #108]	; (800cb68 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800cafc:	4f1b      	ldr	r7, [pc, #108]	; (800cb6c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800cafe:	780b      	ldrb	r3, [r1, #0]
 800cb00:	1c68      	adds	r0, r5, #1
 800cb02:	b913      	cbnz	r3, 800cb0a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800cb04:	7013      	strb	r3, [r2, #0]
 800cb06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb0a:	2b3f      	cmp	r3, #63	; 0x3f
 800cb0c:	d91c      	bls.n	800cb48 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800cb0e:	7849      	ldrb	r1, [r1, #1]
 800cb10:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800cb14:	430b      	orrs	r3, r1
 800cb16:	6839      	ldr	r1, [r7, #0]
 800cb18:	f1be 0f00 	cmp.w	lr, #0
 800cb1c:	bf08      	it	eq
 800cb1e:	4605      	moveq	r5, r0
 800cb20:	5ccc      	ldrb	r4, [r1, r3]
 800cb22:	3301      	adds	r3, #1
 800cb24:	4419      	add	r1, r3
 800cb26:	2300      	movs	r3, #0
 800cb28:	42a3      	cmp	r3, r4
 800cb2a:	5cc8      	ldrb	r0, [r1, r3]
 800cb2c:	d309      	bcc.n	800cb42 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800cb2e:	f04f 0e01 	mov.w	lr, #1
 800cb32:	4421      	add	r1, r4
 800cb34:	4414      	add	r4, r2
 800cb36:	780b      	ldrb	r3, [r1, #0]
 800cb38:	b10b      	cbz	r3, 800cb3e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800cb3a:	f804 cb01 	strb.w	ip, [r4], #1
 800cb3e:	4622      	mov	r2, r4
 800cb40:	e7dd      	b.n	800cafe <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800cb42:	54d0      	strb	r0, [r2, r3]
 800cb44:	3301      	adds	r3, #1
 800cb46:	e7ef      	b.n	800cb28 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800cb48:	4688      	mov	r8, r1
 800cb4a:	18d4      	adds	r4, r2, r3
 800cb4c:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800cb50:	f802 9b01 	strb.w	r9, [r2], #1
 800cb54:	4294      	cmp	r4, r2
 800cb56:	d1f9      	bne.n	800cb4c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800cb58:	1c5a      	adds	r2, r3, #1
 800cb5a:	4411      	add	r1, r2
 800cb5c:	f1be 0f00 	cmp.w	lr, #0
 800cb60:	d1e9      	bne.n	800cb36 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cb62:	181d      	adds	r5, r3, r0
 800cb64:	e7e7      	b.n	800cb36 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cb66:	bf00      	nop
 800cb68:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800cb6c:	20009a1c 	andcs	r9, r0, ip, lsl sl

0800cb70 <MDNS::FindFirstDotFromRight(char const*) const>:
 800cb70:	b510      	push	{r4, lr}
 800cb72:	4608      	mov	r0, r1
 800cb74:	460c      	mov	r4, r1
 800cb76:	f7ff ff65 	bl	800ca44 <strlen>
 800cb7a:	4420      	add	r0, r4
 800cb7c:	42a0      	cmp	r0, r4
 800cb7e:	d903      	bls.n	800cb88 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800cb80:	f810 3901 	ldrb.w	r3, [r0], #-1
 800cb84:	2b2e      	cmp	r3, #46	; 0x2e
 800cb86:	d1f9      	bne.n	800cb7c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800cb88:	3001      	adds	r0, #1
 800cb8a:	bd10      	pop	{r4, pc}

0800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>:
 800cb8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb8e:	4614      	mov	r4, r2
 800cb90:	460f      	mov	r7, r1
 800cb92:	1c60      	adds	r0, r4, #1
 800cb94:	463d      	mov	r5, r7
 800cb96:	f817 6b01 	ldrb.w	r6, [r7], #1
 800cb9a:	b946      	cbnz	r6, 800cbae <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800cb9c:	1a69      	subs	r1, r5, r1
 800cb9e:	7021      	strb	r1, [r4, #0]
 800cba0:	7829      	ldrb	r1, [r5, #0]
 800cba2:	b949      	cbnz	r1, 800cbb8 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800cba4:	b10b      	cbz	r3, 800cbaa <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800cba6:	f800 1b01 	strb.w	r1, [r0], #1
 800cbaa:	1a80      	subs	r0, r0, r2
 800cbac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbae:	2e2e      	cmp	r6, #46	; 0x2e
 800cbb0:	d0f4      	beq.n	800cb9c <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800cbb2:	f800 6b01 	strb.w	r6, [r0], #1
 800cbb6:	e7ed      	b.n	800cb94 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800cbb8:	4604      	mov	r4, r0
 800cbba:	1c69      	adds	r1, r5, #1
 800cbbc:	e7e8      	b.n	800cb90 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800cbc0 <MDNS::CreateAnswerLocalIpAddress()>:
 800cbc0:	2384      	movs	r3, #132	; 0x84
 800cbc2:	b510      	push	{r4, lr}
 800cbc4:	4c0f      	ldr	r4, [pc, #60]	; (800cc04 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800cbc6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800cbca:	80e3      	strh	r3, [r4, #6]
 800cbcc:	2300      	movs	r3, #0
 800cbce:	490e      	ldr	r1, [pc, #56]	; (800cc08 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800cbd0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800cbd4:	6809      	ldr	r1, [r1, #0]
 800cbd6:	f104 0210 	add.w	r2, r4, #16
 800cbda:	2301      	movs	r3, #1
 800cbdc:	f7ff ffd6 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cbe0:	490a      	ldr	r1, [pc, #40]	; (800cc0c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800cbe2:	1813      	adds	r3, r2, r0
 800cbe4:	5011      	str	r1, [r2, r0]
 800cbe6:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800cbea:	605a      	str	r2, [r3, #4]
 800cbec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cbf0:	811a      	strh	r2, [r3, #8]
 800cbf2:	4a07      	ldr	r2, [pc, #28]	; (800cc10 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800cbf4:	6812      	ldr	r2, [r2, #0]
 800cbf6:	6952      	ldr	r2, [r2, #20]
 800cbf8:	f8c3 200a 	str.w	r2, [r3, #10]
 800cbfc:	1b1b      	subs	r3, r3, r4
 800cbfe:	330a      	adds	r3, #10
 800cc00:	6023      	str	r3, [r4, #0]
 800cc02:	bd10      	pop	{r4, pc}
 800cc04:	200095ec 	andcs	r9, r0, ip, ror #11
 800cc08:	20009a18 	andcs	r9, r0, r8, lsl sl
 800cc0c:	01800100 	orreq	r0, r0, r0, lsl #2
 800cc10:	20009a20 	andcs	r9, r0, r0, lsr #20

0800cc14 <MDNS::Start()>:
 800cc14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cc16:	4c1d      	ldr	r4, [pc, #116]	; (800cc8c <MDNS::Start()+0x78>)
 800cc18:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800cc1c:	4605      	mov	r5, r0
 800cc1e:	6820      	ldr	r0, [r4, #0]
 800cc20:	f000 fb28 	bl	800d274 <Network::Begin(unsigned short)>
 800cc24:	4e1a      	ldr	r6, [pc, #104]	; (800cc90 <MDNS::Start()+0x7c>)
 800cc26:	4f1b      	ldr	r7, [pc, #108]	; (800cc94 <MDNS::Start()+0x80>)
 800cc28:	4601      	mov	r1, r0
 800cc2a:	6030      	str	r0, [r6, #0]
 800cc2c:	683a      	ldr	r2, [r7, #0]
 800cc2e:	6820      	ldr	r0, [r4, #0]
 800cc30:	f000 fb31 	bl	800d296 <Network::JoinGroup(int, unsigned int)>
 800cc34:	4b18      	ldr	r3, [pc, #96]	; (800cc98 <MDNS::Start()+0x84>)
 800cc36:	681b      	ldr	r3, [r3, #0]
 800cc38:	b923      	cbnz	r3, 800cc44 <MDNS::Start()+0x30>
 800cc3a:	6821      	ldr	r1, [r4, #0]
 800cc3c:	4628      	mov	r0, r5
 800cc3e:	3120      	adds	r1, #32
 800cc40:	f7ff ff38 	bl	800cab4 <MDNS::SetName(char const*)>
 800cc44:	4628      	mov	r0, r5
 800cc46:	f7ff ffbb 	bl	800cbc0 <MDNS::CreateAnswerLocalIpAddress()>
 800cc4a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cc4e:	4913      	ldr	r1, [pc, #76]	; (800cc9c <MDNS::Start()+0x88>)
 800cc50:	7830      	ldrb	r0, [r6, #0]
 800cc52:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cc56:	9300      	str	r3, [sp, #0]
 800cc58:	683b      	ldr	r3, [r7, #0]
 800cc5a:	f7ff fe43 	bl	800c8e4 <udp_send>
 800cc5e:	233f      	movs	r3, #63	; 0x3f
 800cc60:	6820      	ldr	r0, [r4, #0]
 800cc62:	4c0f      	ldr	r4, [pc, #60]	; (800cca0 <MDNS::Start()+0x8c>)
 800cc64:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800cc68:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800cc6c:	b929      	cbnz	r1, 800cc7a <MDNS::Start()+0x66>
 800cc6e:	4413      	add	r3, r2
 800cc70:	429a      	cmp	r2, r3
 800cc72:	d006      	beq.n	800cc82 <MDNS::Start()+0x6e>
 800cc74:	f802 1b01 	strb.w	r1, [r2], #1
 800cc78:	e7fa      	b.n	800cc70 <MDNS::Start()+0x5c>
 800cc7a:	3b01      	subs	r3, #1
 800cc7c:	f802 1b01 	strb.w	r1, [r2], #1
 800cc80:	d1f2      	bne.n	800cc68 <MDNS::Start()+0x54>
 800cc82:	2300      	movs	r3, #0
 800cc84:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800cc88:	b003      	add	sp, #12
 800cc8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc8c:	20009a20 	andcs	r9, r0, r0, lsr #20
 800cc90:	20000018 	andcs	r0, r0, r8, lsl r0
 800cc94:	200095e8 	andcs	r9, r0, r8, ror #11
 800cc98:	20009a18 	andcs	r9, r0, r8, lsl sl
 800cc9c:	200095ec 	andcs	r9, r0, ip, ror #11
 800cca0:	08012512 	stmdaeq	r1, {r1, r4, r8, sl, sp}

0800cca4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800cca4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cca8:	4c1b      	ldr	r4, [pc, #108]	; (800cd18 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800ccaa:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800ccae:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800ccb2:	2300      	movs	r3, #0
 800ccb4:	f854 100c 	ldr.w	r1, [r4, ip]
 800ccb8:	4607      	mov	r7, r0
 800ccba:	f7ff ff67 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccbe:	2301      	movs	r3, #1
 800ccc0:	7bac      	ldrb	r4, [r5, #14]
 800ccc2:	4616      	mov	r6, r2
 800ccc4:	4915      	ldr	r1, [pc, #84]	; (800cd1c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800ccc6:	4402      	add	r2, r0
 800ccc8:	4815      	ldr	r0, [pc, #84]	; (800cd20 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800ccca:	429c      	cmp	r4, r3
 800cccc:	bf18      	it	ne
 800ccce:	4601      	movne	r1, r0
 800ccd0:	4638      	mov	r0, r7
 800ccd2:	f7ff ff5b 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccd6:	4b13      	ldr	r3, [pc, #76]	; (800cd24 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800ccd8:	1814      	adds	r4, r2, r0
 800ccda:	5013      	str	r3, [r2, r0]
 800ccdc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cce0:	6063      	str	r3, [r4, #4]
 800cce2:	4b11      	ldr	r3, [pc, #68]	; (800cd28 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800cce4:	f8d3 8000 	ldr.w	r8, [r3]
 800cce8:	4640      	mov	r0, r8
 800ccea:	f7ff feab 	bl	800ca44 <strlen>
 800ccee:	f100 0308 	add.w	r3, r0, #8
 800ccf2:	ba5b      	rev16	r3, r3
 800ccf4:	8123      	strh	r3, [r4, #8]
 800ccf6:	2300      	movs	r3, #0
 800ccf8:	f8c4 300a 	str.w	r3, [r4, #10]
 800ccfc:	89ab      	ldrh	r3, [r5, #12]
 800ccfe:	f104 0210 	add.w	r2, r4, #16
 800cd02:	ba5b      	rev16	r3, r3
 800cd04:	81e3      	strh	r3, [r4, #14]
 800cd06:	4641      	mov	r1, r8
 800cd08:	2301      	movs	r3, #1
 800cd0a:	4638      	mov	r0, r7
 800cd0c:	f7ff ff3e 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd10:	4410      	add	r0, r2
 800cd12:	1b80      	subs	r0, r0, r6
 800cd14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd18:	200097f0 	strdcs	r9, [r0], -r0
 800cd1c:	0801250e 	stmdaeq	r1, {r1, r2, r3, r8, sl, sp}
 800cd20:	0801252b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, sp}
 800cd24:	01802100 	orreq	r2, r0, r0, lsl #2
 800cd28:	20009a18 	andcs	r9, r0, r8, lsl sl

0800cd2c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cd2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd30:	4e19      	ldr	r6, [pc, #100]	; (800cd98 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cd32:	010f      	lsls	r7, r1, #4
 800cd34:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800cd38:	2300      	movs	r3, #0
 800cd3a:	59f1      	ldr	r1, [r6, r7]
 800cd3c:	4604      	mov	r4, r0
 800cd3e:	f7ff ff25 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd42:	2301      	movs	r3, #1
 800cd44:	7bae      	ldrb	r6, [r5, #14]
 800cd46:	4690      	mov	r8, r2
 800cd48:	4914      	ldr	r1, [pc, #80]	; (800cd9c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800cd4a:	4402      	add	r2, r0
 800cd4c:	4814      	ldr	r0, [pc, #80]	; (800cda0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800cd4e:	429e      	cmp	r6, r3
 800cd50:	bf18      	it	ne
 800cd52:	4601      	movne	r1, r0
 800cd54:	4620      	mov	r0, r4
 800cd56:	f7ff ff19 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd5a:	4b12      	ldr	r3, [pc, #72]	; (800cda4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800cd5c:	1816      	adds	r6, r2, r0
 800cd5e:	5013      	str	r3, [r2, r0]
 800cd60:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd64:	68a8      	ldr	r0, [r5, #8]
 800cd66:	6073      	str	r3, [r6, #4]
 800cd68:	f106 040b 	add.w	r4, r6, #11
 800cd6c:	b938      	cbnz	r0, 800cd7e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800cd6e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cd72:	72b0      	strb	r0, [r6, #10]
 800cd74:	8133      	strh	r3, [r6, #8]
 800cd76:	eba4 0008 	sub.w	r0, r4, r8
 800cd7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd7e:	f7ff fe61 	bl	800ca44 <strlen>
 800cd82:	4607      	mov	r7, r0
 800cd84:	1c43      	adds	r3, r0, #1
 800cd86:	72b0      	strb	r0, [r6, #10]
 800cd88:	ba5b      	rev16	r3, r3
 800cd8a:	4620      	mov	r0, r4
 800cd8c:	68a9      	ldr	r1, [r5, #8]
 800cd8e:	8133      	strh	r3, [r6, #8]
 800cd90:	f7ff fe6d 	bl	800ca6e <strcpy.isra.0>
 800cd94:	443c      	add	r4, r7
 800cd96:	e7ee      	b.n	800cd76 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800cd98:	200097f0 	strdcs	r9, [r0], -r0
 800cd9c:	0801250e 	stmdaeq	r1, {r1, r2, r3, r8, sl, sp}
 800cda0:	0801252b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, sp}
 800cda4:	01801000 	orreq	r1, r0, r0

0800cda8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800cda8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cdac:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ce10 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800cdb0:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800cdb4:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800cdb8:	6869      	ldr	r1, [r5, #4]
 800cdba:	2301      	movs	r3, #1
 800cdbc:	4607      	mov	r7, r0
 800cdbe:	f7ff fee5 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdc2:	4b14      	ldr	r3, [pc, #80]	; (800ce14 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800cdc4:	f858 8009 	ldr.w	r8, [r8, r9]
 800cdc8:	5013      	str	r3, [r2, r0]
 800cdca:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cdce:	1816      	adds	r6, r2, r0
 800cdd0:	6073      	str	r3, [r6, #4]
 800cdd2:	4640      	mov	r0, r8
 800cdd4:	4614      	mov	r4, r2
 800cdd6:	f7ff fe35 	bl	800ca44 <strlen>
 800cdda:	f100 030d 	add.w	r3, r0, #13
 800cdde:	ba5b      	rev16	r3, r3
 800cde0:	4641      	mov	r1, r8
 800cde2:	8133      	strh	r3, [r6, #8]
 800cde4:	f106 020a 	add.w	r2, r6, #10
 800cde8:	2300      	movs	r3, #0
 800cdea:	4638      	mov	r0, r7
 800cdec:	f7ff fece 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdf0:	2301      	movs	r3, #1
 800cdf2:	4402      	add	r2, r0
 800cdf4:	7bad      	ldrb	r5, [r5, #14]
 800cdf6:	4808      	ldr	r0, [pc, #32]	; (800ce18 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800cdf8:	4908      	ldr	r1, [pc, #32]	; (800ce1c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800cdfa:	429d      	cmp	r5, r3
 800cdfc:	bf18      	it	ne
 800cdfe:	4601      	movne	r1, r0
 800ce00:	4638      	mov	r0, r7
 800ce02:	f7ff fec3 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce06:	4410      	add	r0, r2
 800ce08:	1b00      	subs	r0, r0, r4
 800ce0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ce0e:	bf00      	nop
 800ce10:	200097f0 	strdcs	r9, [r0], -r0
 800ce14:	01000c00 	tsteq	r0, r0, lsl #24
 800ce18:	0801252b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, sp}
 800ce1c:	0801250e 	stmdaeq	r1, {r1, r2, r3, r8, sl, sp}

0800ce20 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800ce20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce22:	460f      	mov	r7, r1
 800ce24:	2301      	movs	r3, #1
 800ce26:	490f      	ldr	r1, [pc, #60]	; (800ce64 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800ce28:	4606      	mov	r6, r0
 800ce2a:	f7ff feaf 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce2e:	4b0e      	ldr	r3, [pc, #56]	; (800ce68 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800ce30:	490e      	ldr	r1, [pc, #56]	; (800ce6c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800ce32:	5013      	str	r3, [r2, r0]
 800ce34:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ce38:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800ce3c:	684f      	ldr	r7, [r1, #4]
 800ce3e:	1815      	adds	r5, r2, r0
 800ce40:	606b      	str	r3, [r5, #4]
 800ce42:	4638      	mov	r0, r7
 800ce44:	4614      	mov	r4, r2
 800ce46:	f7ff fdfd 	bl	800ca44 <strlen>
 800ce4a:	1c83      	adds	r3, r0, #2
 800ce4c:	ba5b      	rev16	r3, r3
 800ce4e:	812b      	strh	r3, [r5, #8]
 800ce50:	f105 020a 	add.w	r2, r5, #10
 800ce54:	2301      	movs	r3, #1
 800ce56:	4639      	mov	r1, r7
 800ce58:	4630      	mov	r0, r6
 800ce5a:	f7ff fe97 	bl	800cb8c <MDNS::WriteDnsName(char const*, char*, bool)>
 800ce5e:	4410      	add	r0, r2
 800ce60:	1b00      	subs	r0, r0, r4
 800ce62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce64:	08012519 	stmdaeq	r1, {r0, r3, r4, r8, sl, sp}
 800ce68:	01000c00 	tsteq	r0, r0, lsl #24
 800ce6c:	200097f0 	strdcs	r9, [r0], -r0

0800ce70 <MDNS::CreateMDNSMessage(unsigned int)>:
 800ce70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce72:	2384      	movs	r3, #132	; 0x84
 800ce74:	4d19      	ldr	r5, [pc, #100]	; (800cedc <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800ce76:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800ce7a:	80eb      	strh	r3, [r5, #6]
 800ce7c:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ce80:	f105 0410 	add.w	r4, r5, #16
 800ce84:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800ce88:	4622      	mov	r2, r4
 800ce8a:	4606      	mov	r6, r0
 800ce8c:	460f      	mov	r7, r1
 800ce8e:	f7ff ff09 	bl	800cca4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ce92:	4404      	add	r4, r0
 800ce94:	4622      	mov	r2, r4
 800ce96:	4639      	mov	r1, r7
 800ce98:	4630      	mov	r0, r6
 800ce9a:	f7ff ff47 	bl	800cd2c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ce9e:	4404      	add	r4, r0
 800cea0:	4622      	mov	r2, r4
 800cea2:	4639      	mov	r1, r7
 800cea4:	4630      	mov	r0, r6
 800cea6:	f7ff ffbb 	bl	800ce20 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ceaa:	4404      	add	r4, r0
 800ceac:	4622      	mov	r2, r4
 800ceae:	4639      	mov	r1, r7
 800ceb0:	4630      	mov	r0, r6
 800ceb2:	f7ff ff79 	bl	800cda8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800ceb6:	4a0a      	ldr	r2, [pc, #40]	; (800cee0 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800ceb8:	4404      	add	r4, r0
 800ceba:	f852 3b10 	ldr.w	r3, [r2], #16
 800cebe:	1e60      	subs	r0, r4, #1
 800cec0:	3b0c      	subs	r3, #12
 800cec2:	4619      	mov	r1, r3
 800cec4:	3901      	subs	r1, #1
 800cec6:	d204      	bcs.n	800ced2 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800cec8:	441c      	add	r4, r3
 800ceca:	4b06      	ldr	r3, [pc, #24]	; (800cee4 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800cecc:	1ae4      	subs	r4, r4, r3
 800cece:	602c      	str	r4, [r5, #0]
 800ced0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ced2:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ced6:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ceda:	e7f3      	b.n	800cec4 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800cedc:	20009814 	andcs	r9, r0, r4, lsl r8
 800cee0:	200095ec 	andcs	r9, r0, ip, ror #11
 800cee4:	20009818 	andcs	r9, r0, r8, lsl r8

0800cee8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800cee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceec:	4d40      	ldr	r5, [pc, #256]	; (800cff0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ceee:	b085      	sub	sp, #20
 800cef0:	682c      	ldr	r4, [r5, #0]
 800cef2:	4680      	mov	r8, r0
 800cef4:	460f      	mov	r7, r1
 800cef6:	4616      	mov	r6, r2
 800cef8:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800cefc:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800cf00:	b11c      	cbz	r4, 800cf0a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800cf02:	692a      	ldr	r2, [r5, #16]
 800cf04:	2a00      	cmp	r2, #0
 800cf06:	d16e      	bne.n	800cfe6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800cf08:	2401      	movs	r4, #1
 800cf0a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800cf0e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800cf12:	8193      	strh	r3, [r2, #12]
 800cf14:	f882 b00e 	strb.w	fp, [r2, #14]
 800cf18:	2f00      	cmp	r7, #0
 800cf1a:	d154      	bne.n	800cfc6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800cf1c:	4b35      	ldr	r3, [pc, #212]	; (800cff4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cf1e:	6818      	ldr	r0, [r3, #0]
 800cf20:	3020      	adds	r0, #32
 800cf22:	f7ff fd8f 	bl	800ca44 <strlen>
 800cf26:	4607      	mov	r7, r0
 800cf28:	4630      	mov	r0, r6
 800cf2a:	f7ff fd8b 	bl	800ca44 <strlen>
 800cf2e:	4438      	add	r0, r7
 800cf30:	3001      	adds	r0, #1
 800cf32:	f001 ffa5 	bl	800ee80 <operator new[](unsigned int)>
 800cf36:	4b2f      	ldr	r3, [pc, #188]	; (800cff4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cf38:	f845 0009 	str.w	r0, [r5, r9]
 800cf3c:	6819      	ldr	r1, [r3, #0]
 800cf3e:	3120      	adds	r1, #32
 800cf40:	f7ff fd95 	bl	800ca6e <strcpy.isra.0>
 800cf44:	f855 0009 	ldr.w	r0, [r5, r9]
 800cf48:	4631      	mov	r1, r6
 800cf4a:	f7ff fd98 	bl	800ca7e <strcat.isra.0>
 800cf4e:	4631      	mov	r1, r6
 800cf50:	4640      	mov	r0, r8
 800cf52:	f7ff fe0d 	bl	800cb70 <MDNS::FindFirstDotFromRight(char const*) const>
 800cf56:	eb05 0709 	add.w	r7, r5, r9
 800cf5a:	4605      	mov	r5, r0
 800cf5c:	f7ff fd72 	bl	800ca44 <strlen>
 800cf60:	300d      	adds	r0, #13
 800cf62:	f001 ff8d 	bl	800ee80 <operator new[](unsigned int)>
 800cf66:	4629      	mov	r1, r5
 800cf68:	6078      	str	r0, [r7, #4]
 800cf6a:	f7ff fd80 	bl	800ca6e <strcpy.isra.0>
 800cf6e:	4922      	ldr	r1, [pc, #136]	; (800cff8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800cf70:	6878      	ldr	r0, [r7, #4]
 800cf72:	f7ff fd84 	bl	800ca7e <strcat.isra.0>
 800cf76:	4921      	ldr	r1, [pc, #132]	; (800cffc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800cf78:	4b21      	ldr	r3, [pc, #132]	; (800d000 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800cf7a:	6878      	ldr	r0, [r7, #4]
 800cf7c:	f1bb 0f01 	cmp.w	fp, #1
 800cf80:	bf18      	it	ne
 800cf82:	4619      	movne	r1, r3
 800cf84:	f7ff fd7b 	bl	800ca7e <strcat.isra.0>
 800cf88:	f1ba 0f00 	cmp.w	sl, #0
 800cf8c:	d009      	beq.n	800cfa2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800cf8e:	4650      	mov	r0, sl
 800cf90:	f7ff fd58 	bl	800ca44 <strlen>
 800cf94:	3001      	adds	r0, #1
 800cf96:	f001 ff73 	bl	800ee80 <operator new[](unsigned int)>
 800cf9a:	4651      	mov	r1, sl
 800cf9c:	60b8      	str	r0, [r7, #8]
 800cf9e:	f7ff fd66 	bl	800ca6e <strcpy.isra.0>
 800cfa2:	4621      	mov	r1, r4
 800cfa4:	4640      	mov	r0, r8
 800cfa6:	f7ff ff63 	bl	800ce70 <MDNS::CreateMDNSMessage(unsigned int)>
 800cfaa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cfae:	4915      	ldr	r1, [pc, #84]	; (800d004 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cfb0:	4815      	ldr	r0, [pc, #84]	; (800d008 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800cfb2:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cfb6:	9300      	str	r3, [sp, #0]
 800cfb8:	4b14      	ldr	r3, [pc, #80]	; (800d00c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800cfba:	7800      	ldrb	r0, [r0, #0]
 800cfbc:	681b      	ldr	r3, [r3, #0]
 800cfbe:	f7ff fc91 	bl	800c8e4 <udp_send>
 800cfc2:	2001      	movs	r0, #1
 800cfc4:	e010      	b.n	800cfe8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800cfc6:	4638      	mov	r0, r7
 800cfc8:	f7ff fd3c 	bl	800ca44 <strlen>
 800cfcc:	9003      	str	r0, [sp, #12]
 800cfce:	4630      	mov	r0, r6
 800cfd0:	f7ff fd38 	bl	800ca44 <strlen>
 800cfd4:	9b03      	ldr	r3, [sp, #12]
 800cfd6:	4418      	add	r0, r3
 800cfd8:	3001      	adds	r0, #1
 800cfda:	f001 ff51 	bl	800ee80 <operator new[](unsigned int)>
 800cfde:	4639      	mov	r1, r7
 800cfe0:	f845 0009 	str.w	r0, [r5, r9]
 800cfe4:	e7ac      	b.n	800cf40 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800cfe6:	2000      	movs	r0, #0
 800cfe8:	b005      	add	sp, #20
 800cfea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfee:	bf00      	nop
 800cff0:	200097f0 	strdcs	r9, [r0], -r0
 800cff4:	20009a20 	andcs	r9, r0, r0, lsr #20
 800cff8:	080113e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, ip}
 800cffc:	0801250e 	stmdaeq	r1, {r1, r2, r3, r8, sl, sp}
 800d000:	0801252b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, sp}
 800d004:	20009814 	andcs	r9, r0, r4, lsl r8
 800d008:	20000018 	andcs	r0, r0, r8, lsl r0
 800d00c:	200095e8 	andcs	r9, r0, r8, ror #11

0800d010 <MDNS::HandleRequest(unsigned short)>:
 800d010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d014:	4605      	mov	r5, r0
 800d016:	2700      	movs	r7, #0
 800d018:	f04f 080c 	mov.w	r8, #12
 800d01c:	b0c5      	sub	sp, #276	; 0x114
 800d01e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800d0e0 <MDNS::HandleRequest(unsigned short)+0xd0>
 800d022:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800d0e4 <MDNS::HandleRequest(unsigned short)+0xd4>
 800d026:	9103      	str	r1, [sp, #12]
 800d028:	9b03      	ldr	r3, [sp, #12]
 800d02a:	42bb      	cmp	r3, r7
 800d02c:	d802      	bhi.n	800d034 <MDNS::HandleRequest(unsigned short)+0x24>
 800d02e:	b045      	add	sp, #276	; 0x114
 800d030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d034:	f8da 1000 	ldr.w	r1, [sl]
 800d038:	aa04      	add	r2, sp, #16
 800d03a:	4441      	add	r1, r8
 800d03c:	4628      	mov	r0, r5
 800d03e:	f7ff fd55 	bl	800caec <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800d042:	f8da 2000 	ldr.w	r2, [sl]
 800d046:	4440      	add	r0, r8
 800d048:	1813      	adds	r3, r2, r0
 800d04a:	885b      	ldrh	r3, [r3, #2]
 800d04c:	f100 0804 	add.w	r8, r0, #4
 800d050:	ba5b      	rev16	r3, r3
 800d052:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d056:	2b01      	cmp	r3, #1
 800d058:	d13d      	bne.n	800d0d6 <MDNS::HandleRequest(unsigned short)+0xc6>
 800d05a:	5a14      	ldrh	r4, [r2, r0]
 800d05c:	4b22      	ldr	r3, [pc, #136]	; (800d0e8 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800d05e:	ba64      	rev16	r4, r4
 800d060:	6818      	ldr	r0, [r3, #0]
 800d062:	a904      	add	r1, sp, #16
 800d064:	b2a4      	uxth	r4, r4
 800d066:	f7ff fcf5 	bl	800ca54 <strcmp>
 800d06a:	b968      	cbnz	r0, 800d088 <MDNS::HandleRequest(unsigned short)+0x78>
 800d06c:	2c01      	cmp	r4, #1
 800d06e:	d10b      	bne.n	800d088 <MDNS::HandleRequest(unsigned short)+0x78>
 800d070:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d074:	491d      	ldr	r1, [pc, #116]	; (800d0ec <MDNS::HandleRequest(unsigned short)+0xdc>)
 800d076:	481e      	ldr	r0, [pc, #120]	; (800d0f0 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d078:	f831 2b04 	ldrh.w	r2, [r1], #4
 800d07c:	9300      	str	r3, [sp, #0]
 800d07e:	4b1d      	ldr	r3, [pc, #116]	; (800d0f4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d080:	7800      	ldrb	r0, [r0, #0]
 800d082:	681b      	ldr	r3, [r3, #0]
 800d084:	f7ff fc2e 	bl	800c8e4 <udp_send>
 800d088:	481b      	ldr	r0, [pc, #108]	; (800d0f8 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800d08a:	a904      	add	r1, sp, #16
 800d08c:	f7ff fce2 	bl	800ca54 <strcmp>
 800d090:	f04f 0900 	mov.w	r9, #0
 800d094:	4e19      	ldr	r6, [pc, #100]	; (800d0fc <MDNS::HandleRequest(unsigned short)+0xec>)
 800d096:	9002      	str	r0, [sp, #8]
 800d098:	6833      	ldr	r3, [r6, #0]
 800d09a:	b1c3      	cbz	r3, 800d0ce <MDNS::HandleRequest(unsigned short)+0xbe>
 800d09c:	9b02      	ldr	r3, [sp, #8]
 800d09e:	b123      	cbz	r3, 800d0aa <MDNS::HandleRequest(unsigned short)+0x9a>
 800d0a0:	6870      	ldr	r0, [r6, #4]
 800d0a2:	a904      	add	r1, sp, #16
 800d0a4:	f7ff fcd6 	bl	800ca54 <strcmp>
 800d0a8:	b988      	cbnz	r0, 800d0ce <MDNS::HandleRequest(unsigned short)+0xbe>
 800d0aa:	2c0c      	cmp	r4, #12
 800d0ac:	d10f      	bne.n	800d0ce <MDNS::HandleRequest(unsigned short)+0xbe>
 800d0ae:	4649      	mov	r1, r9
 800d0b0:	4628      	mov	r0, r5
 800d0b2:	f7ff fedd 	bl	800ce70 <MDNS::CreateMDNSMessage(unsigned int)>
 800d0b6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d0ba:	480d      	ldr	r0, [pc, #52]	; (800d0f0 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d0bc:	9300      	str	r3, [sp, #0]
 800d0be:	4b0d      	ldr	r3, [pc, #52]	; (800d0f4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d0c0:	f8bb 2000 	ldrh.w	r2, [fp]
 800d0c4:	681b      	ldr	r3, [r3, #0]
 800d0c6:	490e      	ldr	r1, [pc, #56]	; (800d100 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800d0c8:	7800      	ldrb	r0, [r0, #0]
 800d0ca:	f7ff fc0b 	bl	800c8e4 <udp_send>
 800d0ce:	3610      	adds	r6, #16
 800d0d0:	f1b9 0f00 	cmp.w	r9, #0
 800d0d4:	d001      	beq.n	800d0da <MDNS::HandleRequest(unsigned short)+0xca>
 800d0d6:	3701      	adds	r7, #1
 800d0d8:	e7a6      	b.n	800d028 <MDNS::HandleRequest(unsigned short)+0x18>
 800d0da:	f04f 0901 	mov.w	r9, #1
 800d0de:	e7db      	b.n	800d098 <MDNS::HandleRequest(unsigned short)+0x88>
 800d0e0:	20009a1c 	andcs	r9, r0, ip, lsl sl
 800d0e4:	20009814 	andcs	r9, r0, r4, lsl r8
 800d0e8:	20009a18 	andcs	r9, r0, r8, lsl sl
 800d0ec:	200095ec 	andcs	r9, r0, ip, ror #11
 800d0f0:	20000018 	andcs	r0, r0, r8, lsl r0
 800d0f4:	200095e8 	andcs	r9, r0, r8, ror #11
 800d0f8:	08012519 	stmdaeq	r1, {r0, r3, r4, r8, sl, sp}
 800d0fc:	200097f0 	strdcs	r9, [r0], -r0
 800d100:	20009818 	andcs	r9, r0, r8, lsl r8

0800d104 <MDNS::Parse()>:
 800d104:	4b08      	ldr	r3, [pc, #32]	; (800d128 <MDNS::Parse()+0x24>)
 800d106:	681a      	ldr	r2, [r3, #0]
 800d108:	8853      	ldrh	r3, [r2, #2]
 800d10a:	ba5b      	rev16	r3, r3
 800d10c:	b299      	uxth	r1, r3
 800d10e:	041b      	lsls	r3, r3, #16
 800d110:	d408      	bmi.n	800d124 <MDNS::Parse()+0x20>
 800d112:	0b89      	lsrs	r1, r1, #14
 800d114:	d106      	bne.n	800d124 <MDNS::Parse()+0x20>
 800d116:	8891      	ldrh	r1, [r2, #4]
 800d118:	b28b      	uxth	r3, r1
 800d11a:	b11b      	cbz	r3, 800d124 <MDNS::Parse()+0x20>
 800d11c:	ba49      	rev16	r1, r1
 800d11e:	b289      	uxth	r1, r1
 800d120:	f7ff bf76 	b.w	800d010 <MDNS::HandleRequest(unsigned short)>
 800d124:	4770      	bx	lr
 800d126:	bf00      	nop
 800d128:	20009a1c 	andcs	r9, r0, ip, lsl sl

0800d12c <MDNS::Run()>:
 800d12c:	b538      	push	{r3, r4, r5, lr}
 800d12e:	4d0c      	ldr	r5, [pc, #48]	; (800d160 <MDNS::Run()+0x34>)
 800d130:	4604      	mov	r4, r0
 800d132:	480c      	ldr	r0, [pc, #48]	; (800d164 <MDNS::Run()+0x38>)
 800d134:	462b      	mov	r3, r5
 800d136:	4a0c      	ldr	r2, [pc, #48]	; (800d168 <MDNS::Run()+0x3c>)
 800d138:	490c      	ldr	r1, [pc, #48]	; (800d16c <MDNS::Run()+0x40>)
 800d13a:	7800      	ldrb	r0, [r0, #0]
 800d13c:	f7ff fbac 	bl	800c898 <udp_recv2>
 800d140:	4b0b      	ldr	r3, [pc, #44]	; (800d170 <MDNS::Run()+0x44>)
 800d142:	882a      	ldrh	r2, [r5, #0]
 800d144:	8018      	strh	r0, [r3, #0]
 800d146:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d14a:	429a      	cmp	r2, r3
 800d14c:	d106      	bne.n	800d15c <MDNS::Run()+0x30>
 800d14e:	280c      	cmp	r0, #12
 800d150:	d904      	bls.n	800d15c <MDNS::Run()+0x30>
 800d152:	4620      	mov	r0, r4
 800d154:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d158:	f7ff bfd4 	b.w	800d104 <MDNS::Parse()>
 800d15c:	bd38      	pop	{r3, r4, r5, pc}
 800d15e:	bf00      	nop
 800d160:	200095e4 	andcs	r9, r0, r4, ror #11
 800d164:	20000018 	andcs	r0, r0, r8, lsl r0
 800d168:	200095e0 	andcs	r9, r0, r0, ror #11
 800d16c:	20009a1c 	andcs	r9, r0, ip, lsl sl
 800d170:	20009810 	andcs	r9, r0, r0, lsl r8

0800d174 <MDNS::Print()>:
 800d174:	b510      	push	{r4, lr}
 800d176:	4816      	ldr	r0, [pc, #88]	; (800d1d0 <MDNS::Print()+0x5c>)
 800d178:	f7fb fb60 	bl	800883c <printf>
 800d17c:	4b15      	ldr	r3, [pc, #84]	; (800d1d4 <MDNS::Print()+0x60>)
 800d17e:	681b      	ldr	r3, [r3, #0]
 800d180:	3301      	adds	r3, #1
 800d182:	d104      	bne.n	800d18e <MDNS::Print()+0x1a>
 800d184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d188:	4813      	ldr	r0, [pc, #76]	; (800d1d8 <MDNS::Print()+0x64>)
 800d18a:	f7fb bb57 	b.w	800883c <printf>
 800d18e:	4b13      	ldr	r3, [pc, #76]	; (800d1dc <MDNS::Print()+0x68>)
 800d190:	4c13      	ldr	r4, [pc, #76]	; (800d1e0 <MDNS::Print()+0x6c>)
 800d192:	6819      	ldr	r1, [r3, #0]
 800d194:	4813      	ldr	r0, [pc, #76]	; (800d1e4 <MDNS::Print()+0x70>)
 800d196:	f7fb fb51 	bl	800883c <printf>
 800d19a:	6823      	ldr	r3, [r4, #0]
 800d19c:	b14b      	cbz	r3, 800d1b2 <MDNS::Print()+0x3e>
 800d19e:	4a12      	ldr	r2, [pc, #72]	; (800d1e8 <MDNS::Print()+0x74>)
 800d1a0:	68a3      	ldr	r3, [r4, #8]
 800d1a2:	6861      	ldr	r1, [r4, #4]
 800d1a4:	2b00      	cmp	r3, #0
 800d1a6:	bf08      	it	eq
 800d1a8:	4613      	moveq	r3, r2
 800d1aa:	4810      	ldr	r0, [pc, #64]	; (800d1ec <MDNS::Print()+0x78>)
 800d1ac:	89a2      	ldrh	r2, [r4, #12]
 800d1ae:	f7fb fb45 	bl	800883c <printf>
 800d1b2:	6923      	ldr	r3, [r4, #16]
 800d1b4:	b15b      	cbz	r3, 800d1ce <MDNS::Print()+0x5a>
 800d1b6:	69a3      	ldr	r3, [r4, #24]
 800d1b8:	4a0b      	ldr	r2, [pc, #44]	; (800d1e8 <MDNS::Print()+0x74>)
 800d1ba:	6961      	ldr	r1, [r4, #20]
 800d1bc:	2b00      	cmp	r3, #0
 800d1be:	bf08      	it	eq
 800d1c0:	4613      	moveq	r3, r2
 800d1c2:	480a      	ldr	r0, [pc, #40]	; (800d1ec <MDNS::Print()+0x78>)
 800d1c4:	8ba2      	ldrh	r2, [r4, #28]
 800d1c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1ca:	f7fb bb37 	b.w	800883c <printf>
 800d1ce:	bd10      	pop	{r4, pc}
 800d1d0:	08012536 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, sp}
 800d1d4:	20000018 	andcs	r0, r0, r8, lsl r0
 800d1d8:	0801253c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, sp}
 800d1dc:	20009a18 	andcs	r9, r0, r8, lsl sl
 800d1e0:	200097f0 	strdcs	r9, [r0], -r0
 800d1e4:	0801254a 	stmdaeq	r1, {r1, r3, r6, r8, sl, sp}
 800d1e8:	080116d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, ip}
 800d1ec:	08012556 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, sp}

0800d1f0 <strncpy.constprop.0.isra.0>:
 800d1f0:	233f      	movs	r3, #63	; 0x3f
 800d1f2:	3901      	subs	r1, #1
 800d1f4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d1f8:	b92a      	cbnz	r2, 800d206 <strncpy.constprop.0.isra.0+0x16>
 800d1fa:	4403      	add	r3, r0
 800d1fc:	4298      	cmp	r0, r3
 800d1fe:	d006      	beq.n	800d20e <strncpy.constprop.0.isra.0+0x1e>
 800d200:	f800 2b01 	strb.w	r2, [r0], #1
 800d204:	e7fa      	b.n	800d1fc <strncpy.constprop.0.isra.0+0xc>
 800d206:	3b01      	subs	r3, #1
 800d208:	f800 2b01 	strb.w	r2, [r0], #1
 800d20c:	d1f2      	bne.n	800d1f4 <strncpy.constprop.0.isra.0+0x4>
 800d20e:	4770      	bx	lr

0800d210 <Network::Network()>:
 800d210:	4a12      	ldr	r2, [pc, #72]	; (800d25c <Network::Network()+0x4c>)
 800d212:	2300      	movs	r3, #0
 800d214:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800d218:	6010      	str	r0, [r2, #0]
 800d21a:	2201      	movs	r2, #1
 800d21c:	e9c0 2100 	strd	r2, r1, [r0]
 800d220:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800d224:	2200      	movs	r2, #0
 800d226:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800d22a:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d22e:	490c      	ldr	r1, [pc, #48]	; (800d260 <Network::Network()+0x50>)
 800d230:	6102      	str	r2, [r0, #16]
 800d232:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800d236:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800d23a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800d23e:	61c3      	str	r3, [r0, #28]
 800d240:	f880 3020 	strb.w	r3, [r0, #32]
 800d244:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800d248:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800d24c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d250:	f802 3f01 	strb.w	r3, [r2, #1]!
 800d254:	2b00      	cmp	r3, #0
 800d256:	d1f9      	bne.n	800d24c <Network::Network()+0x3c>
 800d258:	4770      	bx	lr
 800d25a:	bf00      	nop
 800d25c:	20009a20 	andcs	r9, r0, r0, lsr #20
 800d260:	08012561 	stmdaeq	r1, {r0, r5, r6, r8, sl, sp}

0800d264 <Network::Shutdown()>:
 800d264:	b508      	push	{r3, lr}
 800d266:	30bc      	adds	r0, #188	; 0xbc
 800d268:	f7fb f8ee 	bl	8008448 <NetworkDisplay::ShowShutdown()>
 800d26c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d270:	f7f9 bfbe 	b.w	80071f0 <net_shutdown>

0800d274 <Network::Begin(unsigned short)>:
 800d274:	4608      	mov	r0, r1
 800d276:	f7ff ba9f 	b.w	800c7b8 <udp_bind>

0800d27a <Network::End(unsigned short)>:
 800d27a:	4608      	mov	r0, r1
 800d27c:	f7ff bab6 	b.w	800c7ec <udp_unbind>

0800d280 <Network::MacAddressCopyTo(unsigned char*)>:
 800d280:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800d284:	3901      	subs	r1, #1
 800d286:	30a5      	adds	r0, #165	; 0xa5
 800d288:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800d28c:	4283      	cmp	r3, r0
 800d28e:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d292:	d1f9      	bne.n	800d288 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d294:	4770      	bx	lr

0800d296 <Network::JoinGroup(int, unsigned int)>:
 800d296:	4610      	mov	r0, r2
 800d298:	f000 bef2 	b.w	800e080 <igmp_join>

0800d29c <Network::SetDefaultIp()>:
 800d29c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800d2a0:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800d2a4:	041b      	lsls	r3, r3, #16
 800d2a6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d2aa:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800d2ae:	3302      	adds	r3, #2
 800d2b0:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d2b4:	22ff      	movs	r2, #255	; 0xff
 800d2b6:	6143      	str	r3, [r0, #20]
 800d2b8:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800d2bc:	4770      	bx	lr
	...

0800d2c0 <Network::Init(NetworkParamsStore*)>:
 800d2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2c4:	b0a5      	sub	sp, #148	; 0x94
 800d2c6:	4604      	mov	r4, r0
 800d2c8:	a80b      	add	r0, sp, #44	; 0x2c
 800d2ca:	f000 f9c7 	bl	800d65c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d2ce:	a80b      	add	r0, sp, #44	; 0x2c
 800d2d0:	f000 f9d0 	bl	800d674 <NetworkParams::Load()>
 800d2d4:	b110      	cbz	r0, 800d2dc <Network::Init(NetworkParamsStore*)+0x1c>
 800d2d6:	a80b      	add	r0, sp, #44	; 0x2c
 800d2d8:	f000 fba3 	bl	800da22 <NetworkParams::Dump()>
 800d2dc:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800d2e0:	4628      	mov	r0, r5
 800d2e2:	f7fb f8af 	bl	8008444 <NetworkDisplay::ShowEmacStart()>
 800d2e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d2e8:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800d2ec:	9308      	str	r3, [sp, #32]
 800d2ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d2f0:	4630      	mov	r0, r6
 800d2f2:	9309      	str	r3, [sp, #36]	; 0x24
 800d2f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d2f6:	f104 0720 	add.w	r7, r4, #32
 800d2fa:	930a      	str	r3, [sp, #40]	; 0x28
 800d2fc:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d300:	7163      	strb	r3, [r4, #5]
 800d302:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d304:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d308:	bf18      	it	ne
 800d30a:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800d30e:	061b      	lsls	r3, r3, #24
 800d310:	bf54      	ite	pl
 800d312:	2300      	movpl	r3, #0
 800d314:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800d318:	60e2      	str	r2, [r4, #12]
 800d31a:	6123      	str	r3, [r4, #16]
 800d31c:	f003 f81a 	bl	8010354 <emac_start(unsigned char*)>
 800d320:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800d324:	2b00      	cmp	r3, #0
 800d326:	f040 80c7 	bne.w	800d4b8 <Network::Init(NetworkParamsStore*)+0x1f8>
 800d32a:	4984      	ldr	r1, [pc, #528]	; (800d53c <Network::Init(NetworkParamsStore*)+0x27c>)
 800d32c:	f104 001f 	add.w	r0, r4, #31
 800d330:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d334:	f103 0c01 	add.w	ip, r3, #1
 800d338:	2a00      	cmp	r2, #0
 800d33a:	f040 80b9 	bne.w	800d4b0 <Network::Init(NetworkParamsStore*)+0x1f0>
 800d33e:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800d342:	18e1      	adds	r1, r4, r3
 800d344:	0910      	lsrs	r0, r2, #4
 800d346:	2a9f      	cmp	r2, #159	; 0x9f
 800d348:	f002 020f 	and.w	r2, r2, #15
 800d34c:	bf94      	ite	ls
 800d34e:	3030      	addls	r0, #48	; 0x30
 800d350:	3037      	addhi	r0, #55	; 0x37
 800d352:	2a09      	cmp	r2, #9
 800d354:	bf94      	ite	ls
 800d356:	3230      	addls	r2, #48	; 0x30
 800d358:	3237      	addhi	r2, #55	; 0x37
 800d35a:	44a4      	add	ip, r4
 800d35c:	f881 0020 	strb.w	r0, [r1, #32]
 800d360:	f88c 2020 	strb.w	r2, [ip, #32]
 800d364:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800d368:	f103 0802 	add.w	r8, r3, #2
 800d36c:	0910      	lsrs	r0, r2, #4
 800d36e:	2a9f      	cmp	r2, #159	; 0x9f
 800d370:	f002 020f 	and.w	r2, r2, #15
 800d374:	bf94      	ite	ls
 800d376:	3030      	addls	r0, #48	; 0x30
 800d378:	3037      	addhi	r0, #55	; 0x37
 800d37a:	f103 0e03 	add.w	lr, r3, #3
 800d37e:	2a09      	cmp	r2, #9
 800d380:	eb04 0c08 	add.w	ip, r4, r8
 800d384:	f88c 0020 	strb.w	r0, [ip, #32]
 800d388:	bf94      	ite	ls
 800d38a:	3230      	addls	r2, #48	; 0x30
 800d38c:	3237      	addhi	r2, #55	; 0x37
 800d38e:	eb04 000e 	add.w	r0, r4, lr
 800d392:	f880 2020 	strb.w	r2, [r0, #32]
 800d396:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800d39a:	f103 0c04 	add.w	ip, r3, #4
 800d39e:	0910      	lsrs	r0, r2, #4
 800d3a0:	2a9f      	cmp	r2, #159	; 0x9f
 800d3a2:	f002 020f 	and.w	r2, r2, #15
 800d3a6:	bf94      	ite	ls
 800d3a8:	3030      	addls	r0, #48	; 0x30
 800d3aa:	3037      	addhi	r0, #55	; 0x37
 800d3ac:	3305      	adds	r3, #5
 800d3ae:	2a09      	cmp	r2, #9
 800d3b0:	4423      	add	r3, r4
 800d3b2:	44a4      	add	ip, r4
 800d3b4:	bf94      	ite	ls
 800d3b6:	3230      	addls	r2, #48	; 0x30
 800d3b8:	3237      	addhi	r2, #55	; 0x37
 800d3ba:	f88c 0020 	strb.w	r0, [ip, #32]
 800d3be:	f883 2020 	strb.w	r2, [r3, #32]
 800d3c2:	2300      	movs	r3, #0
 800d3c4:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800d3c8:	f003 f86c 	bl	80104a4 <net::link_register_read()>
 800d3cc:	7963      	ldrb	r3, [r4, #5]
 800d3ce:	6020      	str	r0, [r4, #0]
 800d3d0:	2800      	cmp	r0, #0
 800d3d2:	f040 809c 	bne.w	800d50e <Network::Init(NetworkParamsStore*)+0x24e>
 800d3d6:	2b00      	cmp	r3, #0
 800d3d8:	f040 80aa 	bne.w	800d530 <Network::Init(NetworkParamsStore*)+0x270>
 800d3dc:	9b08      	ldr	r3, [sp, #32]
 800d3de:	2b00      	cmp	r3, #0
 800d3e0:	d173      	bne.n	800d4ca <Network::Init(NetworkParamsStore*)+0x20a>
 800d3e2:	4620      	mov	r0, r4
 800d3e4:	f7ff ff5a 	bl	800d29c <Network::SetDefaultIp()>
 800d3e8:	6963      	ldr	r3, [r4, #20]
 800d3ea:	69e2      	ldr	r2, [r4, #28]
 800d3ec:	9308      	str	r3, [sp, #32]
 800d3ee:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800d3f2:	1de3      	adds	r3, r4, #7
 800d3f4:	f104 0905 	add.w	r9, r4, #5
 800d3f8:	9302      	str	r3, [sp, #8]
 800d3fa:	9300      	str	r3, [sp, #0]
 800d3fc:	463a      	mov	r2, r7
 800d3fe:	464b      	mov	r3, r9
 800d400:	4630      	mov	r0, r6
 800d402:	a908      	add	r1, sp, #32
 800d404:	f7f9 fea4 	bl	8007150 <net_init>
 800d408:	79e3      	ldrb	r3, [r4, #7]
 800d40a:	b11b      	cbz	r3, 800d414 <Network::Init(NetworkParamsStore*)+0x154>
 800d40c:	2104      	movs	r1, #4
 800d40e:	4628      	mov	r0, r5
 800d410:	f7fb f81b 	bl	800844a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d414:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d418:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800d41c:	9304      	str	r3, [sp, #16]
 800d41e:	233c      	movs	r3, #60	; 0x3c
 800d420:	fb03 f30a 	mul.w	r3, r3, sl
 800d424:	f8df 8118 	ldr.w	r8, [pc, #280]	; 800d540 <Network::Init(NetworkParamsStore*)+0x280>
 800d428:	f8df b118 	ldr.w	fp, [pc, #280]	; 800d544 <Network::Init(NetworkParamsStore*)+0x284>
 800d42c:	9303      	str	r3, [sp, #12]
 800d42e:	79e3      	ldrb	r3, [r4, #7]
 800d430:	b393      	cbz	r3, 800d498 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d432:	f1ba 0f00 	cmp.w	sl, #0
 800d436:	d02f      	beq.n	800d498 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d438:	9b04      	ldr	r3, [sp, #16]
 800d43a:	b36b      	cbz	r3, 800d498 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d43c:	2104      	movs	r1, #4
 800d43e:	f8d8 0000 	ldr.w	r0, [r8]
 800d442:	f001 fc57 	bl	800ecf4 <LedBlink::SetMode(ledblink::Mode)>
 800d446:	2103      	movs	r1, #3
 800d448:	4628      	mov	r0, r5
 800d44a:	f7fa fffe 	bl	800844a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d44e:	2000      	movs	r0, #0
 800d450:	f001 fef2 	bl	800f238 <time>
 800d454:	9005      	str	r0, [sp, #20]
 800d456:	2000      	movs	r0, #0
 800d458:	f001 feee 	bl	800f238 <time>
 800d45c:	9b05      	ldr	r3, [sp, #20]
 800d45e:	493a      	ldr	r1, [pc, #232]	; (800d548 <Network::Init(NetworkParamsStore*)+0x288>)
 800d460:	1ac0      	subs	r0, r0, r3
 800d462:	9b03      	ldr	r3, [sp, #12]
 800d464:	4298      	cmp	r0, r3
 800d466:	db38      	blt.n	800d4da <Network::Init(NetworkParamsStore*)+0x21a>
 800d468:	2101      	movs	r1, #1
 800d46a:	4628      	mov	r0, r5
 800d46c:	f7fa ffed 	bl	800844a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d470:	2101      	movs	r1, #1
 800d472:	f8d8 0000 	ldr.w	r0, [r8]
 800d476:	f001 fc3d 	bl	800ecf4 <LedBlink::SetMode(ledblink::Mode)>
 800d47a:	2301      	movs	r3, #1
 800d47c:	7163      	strb	r3, [r4, #5]
 800d47e:	2300      	movs	r3, #0
 800d480:	71e3      	strb	r3, [r4, #7]
 800d482:	9b02      	ldr	r3, [sp, #8]
 800d484:	463a      	mov	r2, r7
 800d486:	9300      	str	r3, [sp, #0]
 800d488:	4630      	mov	r0, r6
 800d48a:	464b      	mov	r3, r9
 800d48c:	a908      	add	r1, sp, #32
 800d48e:	f7f9 fe5f 	bl	8007150 <net_init>
 800d492:	7963      	ldrb	r3, [r4, #5]
 800d494:	2b00      	cmp	r3, #0
 800d496:	d0ca      	beq.n	800d42e <Network::Init(NetworkParamsStore*)+0x16e>
 800d498:	9b08      	ldr	r3, [sp, #32]
 800d49a:	4628      	mov	r0, r5
 800d49c:	6163      	str	r3, [r4, #20]
 800d49e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d4a0:	61e3      	str	r3, [r4, #28]
 800d4a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4a4:	61a3      	str	r3, [r4, #24]
 800d4a6:	f7fa ffce 	bl	8008446 <NetworkDisplay::ShowIp()>
 800d4aa:	b025      	add	sp, #148	; 0x94
 800d4ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4b0:	4663      	mov	r3, ip
 800d4b2:	f800 2f01 	strb.w	r2, [r0, #1]!
 800d4b6:	e73b      	b.n	800d330 <Network::Init(NetworkParamsStore*)+0x70>
 800d4b8:	4638      	mov	r0, r7
 800d4ba:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800d4be:	f7ff fe97 	bl	800d1f0 <strncpy.constprop.0.isra.0>
 800d4c2:	2300      	movs	r3, #0
 800d4c4:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800d4c8:	e77e      	b.n	800d3c8 <Network::Init(NetworkParamsStore*)+0x108>
 800d4ca:	69e1      	ldr	r1, [r4, #28]
 800d4cc:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800d4d0:	4053      	eors	r3, r2
 800d4d2:	420b      	tst	r3, r1
 800d4d4:	bf18      	it	ne
 800d4d6:	920a      	strne	r2, [sp, #40]	; 0x28
 800d4d8:	e78b      	b.n	800d3f2 <Network::Init(NetworkParamsStore*)+0x132>
 800d4da:	f8d8 3000 	ldr.w	r3, [r8]
 800d4de:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d4e2:	f1bc 0f00 	cmp.w	ip, #0
 800d4e6:	d0b6      	beq.n	800d456 <Network::Init(NetworkParamsStore*)+0x196>
 800d4e8:	6808      	ldr	r0, [r1, #0]
 800d4ea:	695a      	ldr	r2, [r3, #20]
 800d4ec:	1a80      	subs	r0, r0, r2
 800d4ee:	4584      	cmp	ip, r0
 800d4f0:	d8b1      	bhi.n	800d456 <Network::Init(NetworkParamsStore*)+0x196>
 800d4f2:	6808      	ldr	r0, [r1, #0]
 800d4f4:	6158      	str	r0, [r3, #20]
 800d4f6:	6918      	ldr	r0, [r3, #16]
 800d4f8:	2801      	cmp	r0, #1
 800d4fa:	f080 0201 	eor.w	r2, r0, #1
 800d4fe:	611a      	str	r2, [r3, #16]
 800d500:	bf16      	itet	ne
 800d502:	2301      	movne	r3, #1
 800d504:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d508:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d50c:	e7a3      	b.n	800d456 <Network::Init(NetworkParamsStore*)+0x196>
 800d50e:	b11b      	cbz	r3, 800d518 <Network::Init(NetworkParamsStore*)+0x258>
 800d510:	2300      	movs	r3, #0
 800d512:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800d516:	9308      	str	r3, [sp, #32]
 800d518:	2300      	movs	r3, #0
 800d51a:	f88d 301f 	strb.w	r3, [sp, #31]
 800d51e:	f10d 031f 	add.w	r3, sp, #31
 800d522:	463a      	mov	r2, r7
 800d524:	4630      	mov	r0, r6
 800d526:	9300      	str	r3, [sp, #0]
 800d528:	a908      	add	r1, sp, #32
 800d52a:	f7f9 fe11 	bl	8007150 <net_init>
 800d52e:	e7b3      	b.n	800d498 <Network::Init(NetworkParamsStore*)+0x1d8>
 800d530:	2101      	movs	r1, #1
 800d532:	4628      	mov	r0, r5
 800d534:	f7fa ff89 	bl	800844a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d538:	e75b      	b.n	800d3f2 <Network::Init(NetworkParamsStore*)+0x132>
 800d53a:	bf00      	nop
 800d53c:	08012566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, sp}
 800d540:	2000a0dc 	ldrdcs	sl, [r0], -ip
 800d544:	40011000 	andmi	r1, r1, r0
 800d548:	2000a0f4 	strdcs	sl, [r0], -r4

0800d54c <Network::Print()>:
 800d54c:	b530      	push	{r4, r5, lr}
 800d54e:	4604      	mov	r4, r0
 800d550:	b085      	sub	sp, #20
 800d552:	4832      	ldr	r0, [pc, #200]	; (800d61c <Network::Print()+0xd0>)
 800d554:	f7fb f972 	bl	800883c <printf>
 800d558:	f104 0120 	add.w	r1, r4, #32
 800d55c:	4830      	ldr	r0, [pc, #192]	; (800d620 <Network::Print()+0xd4>)
 800d55e:	f7fb f96d 	bl	800883c <printf>
 800d562:	68a1      	ldr	r1, [r4, #8]
 800d564:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800d568:	482e      	ldr	r0, [pc, #184]	; (800d624 <Network::Print()+0xd8>)
 800d56a:	f7fb f967 	bl	800883c <printf>
 800d56e:	69e0      	ldr	r0, [r4, #28]
 800d570:	f003 fd0c 	bl	8010f8c <__popcountsi2>
 800d574:	6965      	ldr	r5, [r4, #20]
 800d576:	9001      	str	r0, [sp, #4]
 800d578:	0e2b      	lsrs	r3, r5, #24
 800d57a:	9300      	str	r3, [sp, #0]
 800d57c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d580:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d584:	b2e9      	uxtb	r1, r5
 800d586:	4828      	ldr	r0, [pc, #160]	; (800d628 <Network::Print()+0xdc>)
 800d588:	f7fb f958 	bl	800883c <printf>
 800d58c:	69e1      	ldr	r1, [r4, #28]
 800d58e:	4827      	ldr	r0, [pc, #156]	; (800d62c <Network::Print()+0xe0>)
 800d590:	0e0b      	lsrs	r3, r1, #24
 800d592:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d596:	9300      	str	r3, [sp, #0]
 800d598:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d59c:	b2c9      	uxtb	r1, r1
 800d59e:	f7fb f94d 	bl	800883c <printf>
 800d5a2:	69a1      	ldr	r1, [r4, #24]
 800d5a4:	4822      	ldr	r0, [pc, #136]	; (800d630 <Network::Print()+0xe4>)
 800d5a6:	0e0b      	lsrs	r3, r1, #24
 800d5a8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5ac:	9300      	str	r3, [sp, #0]
 800d5ae:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5b2:	b2c9      	uxtb	r1, r1
 800d5b4:	f7fb f942 	bl	800883c <printf>
 800d5b8:	69e3      	ldr	r3, [r4, #28]
 800d5ba:	6961      	ldr	r1, [r4, #20]
 800d5bc:	481d      	ldr	r0, [pc, #116]	; (800d634 <Network::Print()+0xe8>)
 800d5be:	ea61 0103 	orn	r1, r1, r3
 800d5c2:	0e0b      	lsrs	r3, r1, #24
 800d5c4:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d5c8:	9300      	str	r3, [sp, #0]
 800d5ca:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d5ce:	b2c9      	uxtb	r1, r1
 800d5d0:	f7fb f934 	bl	800883c <printf>
 800d5d4:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800d5d8:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d5dc:	9302      	str	r3, [sp, #8]
 800d5de:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800d5e2:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800d5e6:	9301      	str	r3, [sp, #4]
 800d5e8:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800d5ec:	4812      	ldr	r0, [pc, #72]	; (800d638 <Network::Print()+0xec>)
 800d5ee:	9300      	str	r3, [sp, #0]
 800d5f0:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800d5f4:	f7fb f922 	bl	800883c <printf>
 800d5f8:	4b10      	ldr	r3, [pc, #64]	; (800d63c <Network::Print()+0xf0>)
 800d5fa:	681b      	ldr	r3, [r3, #0]
 800d5fc:	79da      	ldrb	r2, [r3, #7]
 800d5fe:	b952      	cbnz	r2, 800d616 <Network::Print()+0xca>
 800d600:	795b      	ldrb	r3, [r3, #5]
 800d602:	2b00      	cmp	r3, #0
 800d604:	bf14      	ite	ne
 800d606:	2144      	movne	r1, #68	; 0x44
 800d608:	2153      	moveq	r1, #83	; 0x53
 800d60a:	480d      	ldr	r0, [pc, #52]	; (800d640 <Network::Print()+0xf4>)
 800d60c:	b005      	add	sp, #20
 800d60e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d612:	f7fb b913 	b.w	800883c <printf>
 800d616:	215a      	movs	r1, #90	; 0x5a
 800d618:	e7f7      	b.n	800d60a <Network::Print()+0xbe>
 800d61a:	bf00      	nop
 800d61c:	08012572 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, sp}
 800d620:	0801257b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, sp}
 800d624:	0801258c 	stmdaeq	r1, {r2, r3, r7, r8, sl, sp}
 800d628:	080125a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, sp}
 800d62c:	080125be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, sp}
 800d630:	080125d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, sp}
 800d634:	080125f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, sp}
 800d638:	0801260c 	stmdaeq	r1, {r2, r3, r9, sl, sp}
 800d63c:	20009a20 	andcs	r9, r0, r0, lsr #20
 800d640:	08012638 	stmdaeq	r1, {r3, r4, r5, r9, sl, sp}

0800d644 <Network::TcpBegin(unsigned short)>:
 800d644:	4608      	mov	r0, r1
 800d646:	f7fe bff1 	b.w	800c62c <tcp_begin>

0800d64a <Network::TcpRead(int, unsigned char const**)>:
 800d64a:	4608      	mov	r0, r1
 800d64c:	4611      	mov	r1, r2
 800d64e:	f7ff b82b 	b.w	800c6a8 <tcp_read>

0800d652 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d652:	4608      	mov	r0, r1
 800d654:	4611      	mov	r1, r2
 800d656:	461a      	mov	r2, r3
 800d658:	f7ff b802 	b.w	800c660 <tcp_write>

0800d65c <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d65c:	b510      	push	{r4, lr}
 800d65e:	225e      	movs	r2, #94	; 0x5e
 800d660:	4604      	mov	r4, r0
 800d662:	f840 1b04 	str.w	r1, [r0], #4
 800d666:	2100      	movs	r1, #0
 800d668:	f001 fcde 	bl	800f028 <memset>
 800d66c:	2301      	movs	r3, #1
 800d66e:	4620      	mov	r0, r4
 800d670:	7623      	strb	r3, [r4, #24]
 800d672:	bd10      	pop	{r4, pc}

0800d674 <NetworkParams::Load()>:
 800d674:	b508      	push	{r3, lr}
 800d676:	2300      	movs	r3, #0
 800d678:	4601      	mov	r1, r0
 800d67a:	6043      	str	r3, [r0, #4]
 800d67c:	6800      	ldr	r0, [r0, #0]
 800d67e:	b120      	cbz	r0, 800d68a <NetworkParams::Load()+0x16>
 800d680:	6803      	ldr	r3, [r0, #0]
 800d682:	3104      	adds	r1, #4
 800d684:	68db      	ldr	r3, [r3, #12]
 800d686:	4798      	blx	r3
 800d688:	2001      	movs	r0, #1
 800d68a:	bd08      	pop	{r3, pc}

0800d68c <NetworkParams::Load(char const*, unsigned int)>:
 800d68c:	6803      	ldr	r3, [r0, #0]
 800d68e:	b1d3      	cbz	r3, 800d6c6 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800d690:	2300      	movs	r3, #0
 800d692:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d694:	460d      	mov	r5, r1
 800d696:	4616      	mov	r6, r2
 800d698:	4604      	mov	r4, r0
 800d69a:	6043      	str	r3, [r0, #4]
 800d69c:	4602      	mov	r2, r0
 800d69e:	490a      	ldr	r1, [pc, #40]	; (800d6c8 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800d6a0:	4668      	mov	r0, sp
 800d6a2:	f000 fedb 	bl	800e45c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d6a6:	4632      	mov	r2, r6
 800d6a8:	4629      	mov	r1, r5
 800d6aa:	4668      	mov	r0, sp
 800d6ac:	f000 feda 	bl	800e464 <ReadConfigFile::Read(char const*, unsigned int)>
 800d6b0:	4621      	mov	r1, r4
 800d6b2:	f851 0b04 	ldr.w	r0, [r1], #4
 800d6b6:	6803      	ldr	r3, [r0, #0]
 800d6b8:	689b      	ldr	r3, [r3, #8]
 800d6ba:	4798      	blx	r3
 800d6bc:	4668      	mov	r0, sp
 800d6be:	f000 fed0 	bl	800e462 <ReadConfigFile::~ReadConfigFile()>
 800d6c2:	b002      	add	sp, #8
 800d6c4:	bd70      	pop	{r4, r5, r6, pc}
 800d6c6:	4770      	bx	lr
 800d6c8:	0800d7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, ip, lr, pc}

0800d6cc <NetworkParams::callbackFunction(char const*)>:
 800d6cc:	b530      	push	{r4, r5, lr}
 800d6ce:	460d      	mov	r5, r1
 800d6d0:	b085      	sub	sp, #20
 800d6d2:	4604      	mov	r4, r0
 800d6d4:	493f      	ldr	r1, [pc, #252]	; (800d7d4 <NetworkParams::callbackFunction(char const*)+0x108>)
 800d6d6:	4628      	mov	r0, r5
 800d6d8:	f10d 0207 	add.w	r2, sp, #7
 800d6dc:	f000 ff6e 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d6e0:	b978      	cbnz	r0, 800d702 <NetworkParams::callbackFunction(char const*)+0x36>
 800d6e2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d6e6:	6863      	ldr	r3, [r4, #4]
 800d6e8:	b142      	cbz	r2, 800d6fc <NetworkParams::callbackFunction(char const*)+0x30>
 800d6ea:	f023 0301 	bic.w	r3, r3, #1
 800d6ee:	3a00      	subs	r2, #0
 800d6f0:	bf18      	it	ne
 800d6f2:	2201      	movne	r2, #1
 800d6f4:	6063      	str	r3, [r4, #4]
 800d6f6:	7622      	strb	r2, [r4, #24]
 800d6f8:	b005      	add	sp, #20
 800d6fa:	bd30      	pop	{r4, r5, pc}
 800d6fc:	f043 0301 	orr.w	r3, r3, #1
 800d700:	e7f5      	b.n	800d6ee <NetworkParams::callbackFunction(char const*)+0x22>
 800d702:	4628      	mov	r0, r5
 800d704:	4934      	ldr	r1, [pc, #208]	; (800d7d8 <NetworkParams::callbackFunction(char const*)+0x10c>)
 800d706:	f10d 0207 	add.w	r2, sp, #7
 800d70a:	f000 ff57 	bl	800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d70e:	b980      	cbnz	r0, 800d732 <NetworkParams::callbackFunction(char const*)+0x66>
 800d710:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d714:	6863      	ldr	r3, [r4, #4]
 800d716:	1e51      	subs	r1, r2, #1
 800d718:	2904      	cmp	r1, #4
 800d71a:	bf97      	itett	ls
 800d71c:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d720:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d724:	6063      	strls	r3, [r4, #4]
 800d726:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800d72a:	bf84      	itt	hi
 800d72c:	6063      	strhi	r3, [r4, #4]
 800d72e:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800d732:	4628      	mov	r0, r5
 800d734:	4929      	ldr	r1, [pc, #164]	; (800d7dc <NetworkParams::callbackFunction(char const*)+0x110>)
 800d736:	aa02      	add	r2, sp, #8
 800d738:	f000 fee1 	bl	800e4fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d73c:	b9c8      	cbnz	r0, 800d772 <NetworkParams::callbackFunction(char const*)+0xa6>
 800d73e:	9b02      	ldr	r3, [sp, #8]
 800d740:	b2d9      	uxtb	r1, r3
 800d742:	29ac      	cmp	r1, #172	; 0xac
 800d744:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d748:	d009      	beq.n	800d75e <NetworkParams::callbackFunction(char const*)+0x92>
 800d74a:	29c0      	cmp	r1, #192	; 0xc0
 800d74c:	d00b      	beq.n	800d766 <NetworkParams::callbackFunction(char const*)+0x9a>
 800d74e:	290a      	cmp	r1, #10
 800d750:	d10c      	bne.n	800d76c <NetworkParams::callbackFunction(char const*)+0xa0>
 800d752:	60a3      	str	r3, [r4, #8]
 800d754:	6863      	ldr	r3, [r4, #4]
 800d756:	f043 0302 	orr.w	r3, r3, #2
 800d75a:	6063      	str	r3, [r4, #4]
 800d75c:	e7cc      	b.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d75e:	3a10      	subs	r2, #16
 800d760:	2a0f      	cmp	r2, #15
 800d762:	d8c9      	bhi.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d764:	e7f5      	b.n	800d752 <NetworkParams::callbackFunction(char const*)+0x86>
 800d766:	2aa8      	cmp	r2, #168	; 0xa8
 800d768:	d1c6      	bne.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d76a:	e7f2      	b.n	800d752 <NetworkParams::callbackFunction(char const*)+0x86>
 800d76c:	2b00      	cmp	r3, #0
 800d76e:	d0f0      	beq.n	800d752 <NetworkParams::callbackFunction(char const*)+0x86>
 800d770:	e7c2      	b.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d772:	4628      	mov	r0, r5
 800d774:	491a      	ldr	r1, [pc, #104]	; (800d7e0 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d776:	aa02      	add	r2, sp, #8
 800d778:	f000 fec1 	bl	800e4fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d77c:	b960      	cbnz	r0, 800d798 <NetworkParams::callbackFunction(char const*)+0xcc>
 800d77e:	9b02      	ldr	r3, [sp, #8]
 800d780:	2b00      	cmp	r3, #0
 800d782:	d0b9      	beq.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d784:	ba1a      	rev	r2, r3
 800d786:	43d1      	mvns	r1, r2
 800d788:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 800d78c:	d1b4      	bne.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d78e:	60e3      	str	r3, [r4, #12]
 800d790:	6863      	ldr	r3, [r4, #4]
 800d792:	f043 0304 	orr.w	r3, r3, #4
 800d796:	e7e0      	b.n	800d75a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d798:	4628      	mov	r0, r5
 800d79a:	4912      	ldr	r1, [pc, #72]	; (800d7e4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d79c:	aa02      	add	r2, sp, #8
 800d79e:	f000 feae 	bl	800e4fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d7a2:	b928      	cbnz	r0, 800d7b0 <NetworkParams::callbackFunction(char const*)+0xe4>
 800d7a4:	9b02      	ldr	r3, [sp, #8]
 800d7a6:	6123      	str	r3, [r4, #16]
 800d7a8:	6863      	ldr	r3, [r4, #4]
 800d7aa:	f043 0308 	orr.w	r3, r3, #8
 800d7ae:	e7d4      	b.n	800d75a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d7b0:	233f      	movs	r3, #63	; 0x3f
 800d7b2:	4628      	mov	r0, r5
 800d7b4:	9303      	str	r3, [sp, #12]
 800d7b6:	490c      	ldr	r1, [pc, #48]	; (800d7e8 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d7b8:	ab03      	add	r3, sp, #12
 800d7ba:	f104 0219 	add.w	r2, r4, #25
 800d7be:	f000 fe85 	bl	800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d7c2:	2800      	cmp	r0, #0
 800d7c4:	d198      	bne.n	800d6f8 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d7c6:	9b03      	ldr	r3, [sp, #12]
 800d7c8:	4423      	add	r3, r4
 800d7ca:	7658      	strb	r0, [r3, #25]
 800d7cc:	6863      	ldr	r3, [r4, #4]
 800d7ce:	f043 0320 	orr.w	r3, r3, #32
 800d7d2:	e7c2      	b.n	800d75a <NetworkParams::callbackFunction(char const*)+0x8e>
 800d7d4:	08012690 	stmdaeq	r1, {r4, r7, r9, sl, sp}
 800d7d8:	0801266e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, sl, sp}
 800d7dc:	08012653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, sp}
 800d7e0:	08012687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, sp}
 800d7e4:	0801265e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, sp}
 800d7e8:	0801267e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, sp}

0800d7ec <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d7ec:	f7ff bf6e 	b.w	800d6cc <NetworkParams::callbackFunction(char const*)>

0800d7f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800d7f0:	b570      	push	{r4, r5, r6, lr}
 800d7f2:	4604      	mov	r4, r0
 800d7f4:	4615      	mov	r5, r2
 800d7f6:	461e      	mov	r6, r3
 800d7f8:	b086      	sub	sp, #24
 800d7fa:	3004      	adds	r0, #4
 800d7fc:	2900      	cmp	r1, #0
 800d7fe:	d02b      	beq.n	800d858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800d800:	225e      	movs	r2, #94	; 0x5e
 800d802:	f001 fbfa 	bl	800effa <memmove>
 800d806:	462a      	mov	r2, r5
 800d808:	4633      	mov	r3, r6
 800d80a:	4970      	ldr	r1, [pc, #448]	; (800d9cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d80c:	a803      	add	r0, sp, #12
 800d80e:	f000 fd85 	bl	800e31c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d812:	6863      	ldr	r3, [r4, #4]
 800d814:	079a      	lsls	r2, r3, #30
 800d816:	bf5f      	itttt	pl
 800d818:	4a6d      	ldrpl	r2, [pc, #436]	; (800d9d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d81a:	6812      	ldrpl	r2, [r2, #0]
 800d81c:	6952      	ldrpl	r2, [r2, #20]
 800d81e:	60a2      	strpl	r2, [r4, #8]
 800d820:	075e      	lsls	r6, r3, #29
 800d822:	bf5f      	itttt	pl
 800d824:	4a6a      	ldrpl	r2, [pc, #424]	; (800d9d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d826:	6812      	ldrpl	r2, [r2, #0]
 800d828:	69d2      	ldrpl	r2, [r2, #28]
 800d82a:	60e2      	strpl	r2, [r4, #12]
 800d82c:	071d      	lsls	r5, r3, #28
 800d82e:	bf58      	it	pl
 800d830:	4a67      	ldrpl	r2, [pc, #412]	; (800d9d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d832:	f104 0519 	add.w	r5, r4, #25
 800d836:	bf5e      	ittt	pl
 800d838:	6812      	ldrpl	r2, [r2, #0]
 800d83a:	6992      	ldrpl	r2, [r2, #24]
 800d83c:	6122      	strpl	r2, [r4, #16]
 800d83e:	0698      	lsls	r0, r3, #26
 800d840:	d418      	bmi.n	800d874 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800d842:	4628      	mov	r0, r5
 800d844:	223f      	movs	r2, #63	; 0x3f
 800d846:	4b62      	ldr	r3, [pc, #392]	; (800d9d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d848:	681b      	ldr	r3, [r3, #0]
 800d84a:	331f      	adds	r3, #31
 800d84c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d850:	b949      	cbnz	r1, 800d866 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800d852:	f001 fbe9 	bl	800f028 <memset>
 800d856:	e00a      	b.n	800d86e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800d858:	6823      	ldr	r3, [r4, #0]
 800d85a:	4601      	mov	r1, r0
 800d85c:	681a      	ldr	r2, [r3, #0]
 800d85e:	4618      	mov	r0, r3
 800d860:	68d2      	ldr	r2, [r2, #12]
 800d862:	4790      	blx	r2
 800d864:	e7cf      	b.n	800d806 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800d866:	3a01      	subs	r2, #1
 800d868:	f800 1b01 	strb.w	r1, [r0], #1
 800d86c:	d1ee      	bne.n	800d84c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800d86e:	2300      	movs	r3, #0
 800d870:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800d874:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d878:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800d87c:	7e23      	ldrb	r3, [r4, #24]
 800d87e:	42b2      	cmp	r2, r6
 800d880:	6861      	ldr	r1, [r4, #4]
 800d882:	d21a      	bcs.n	800d8ba <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800d884:	9803      	ldr	r0, [sp, #12]
 800d886:	07c9      	lsls	r1, r1, #31
 800d888:	4410      	add	r0, r2
 800d88a:	eba6 0602 	sub.w	r6, r6, r2
 800d88e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d892:	d404      	bmi.n	800d89e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800d894:	b922      	cbnz	r2, 800d8a0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800d896:	9300      	str	r3, [sp, #0]
 800d898:	4a4e      	ldr	r2, [pc, #312]	; (800d9d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d89a:	4b4f      	ldr	r3, [pc, #316]	; (800d9d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d89c:	e003      	b.n	800d8a6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800d89e:	b312      	cbz	r2, 800d8e6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800d8a0:	9300      	str	r3, [sp, #0]
 800d8a2:	4a4e      	ldr	r2, [pc, #312]	; (800d9dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d8a4:	4b4c      	ldr	r3, [pc, #304]	; (800d9d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8a6:	4631      	mov	r1, r6
 800d8a8:	f7fa ffd8 	bl	800885c <snprintf>
 800d8ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d8b0:	4286      	cmp	r6, r0
 800d8b2:	bfa4      	itt	ge
 800d8b4:	181b      	addge	r3, r3, r0
 800d8b6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d8ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d8be:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800d8c2:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800d8c6:	42b2      	cmp	r2, r6
 800d8c8:	6861      	ldr	r1, [r4, #4]
 800d8ca:	d21f      	bcs.n	800d90c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800d8cc:	9803      	ldr	r0, [sp, #12]
 800d8ce:	05c9      	lsls	r1, r1, #23
 800d8d0:	4410      	add	r0, r2
 800d8d2:	eba6 0602 	sub.w	r6, r6, r2
 800d8d6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8da:	d408      	bmi.n	800d8ee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800d8dc:	b94a      	cbnz	r2, 800d8f2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800d8de:	9300      	str	r3, [sp, #0]
 800d8e0:	4a3c      	ldr	r2, [pc, #240]	; (800d9d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d8e2:	4b3f      	ldr	r3, [pc, #252]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d8e4:	e008      	b.n	800d8f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800d8e6:	9300      	str	r3, [sp, #0]
 800d8e8:	4a3e      	ldr	r2, [pc, #248]	; (800d9e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d8ea:	4b3b      	ldr	r3, [pc, #236]	; (800d9d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d8ec:	e7db      	b.n	800d8a6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800d8ee:	2a00      	cmp	r2, #0
 800d8f0:	d03c      	beq.n	800d96c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800d8f2:	9300      	str	r3, [sp, #0]
 800d8f4:	4a39      	ldr	r2, [pc, #228]	; (800d9dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d8f6:	4b3a      	ldr	r3, [pc, #232]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d8f8:	4631      	mov	r1, r6
 800d8fa:	f7fa ffaf 	bl	800885c <snprintf>
 800d8fe:	4286      	cmp	r6, r0
 800d900:	bfa2      	ittt	ge
 800d902:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d906:	18c0      	addge	r0, r0, r3
 800d908:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d90c:	4936      	ldr	r1, [pc, #216]	; (800d9e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d90e:	a803      	add	r0, sp, #12
 800d910:	f000 fd8a 	bl	800e428 <PropertiesBuilder::AddComment(char const*)>
 800d914:	6863      	ldr	r3, [r4, #4]
 800d916:	68a2      	ldr	r2, [r4, #8]
 800d918:	4934      	ldr	r1, [pc, #208]	; (800d9ec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d91a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d91e:	a803      	add	r0, sp, #12
 800d920:	f000 fd3e 	bl	800e3a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d924:	6863      	ldr	r3, [r4, #4]
 800d926:	68e2      	ldr	r2, [r4, #12]
 800d928:	4931      	ldr	r1, [pc, #196]	; (800d9f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800d92a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d92e:	a803      	add	r0, sp, #12
 800d930:	f000 fd36 	bl	800e3a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d934:	6863      	ldr	r3, [r4, #4]
 800d936:	6922      	ldr	r2, [r4, #16]
 800d938:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d93c:	492d      	ldr	r1, [pc, #180]	; (800d9f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800d93e:	a803      	add	r0, sp, #12
 800d940:	f000 fd2e 	bl	800e3a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d944:	6862      	ldr	r2, [r4, #4]
 800d946:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d94a:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d94e:	42a3      	cmp	r3, r4
 800d950:	d21e      	bcs.n	800d990 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800d952:	9803      	ldr	r0, [sp, #12]
 800d954:	0692      	lsls	r2, r2, #26
 800d956:	4418      	add	r0, r3
 800d958:	eba4 0403 	sub.w	r4, r4, r3
 800d95c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d960:	d408      	bmi.n	800d974 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800d962:	b943      	cbnz	r3, 800d976 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800d964:	4b24      	ldr	r3, [pc, #144]	; (800d9f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d966:	4a25      	ldr	r2, [pc, #148]	; (800d9fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d968:	9500      	str	r5, [sp, #0]
 800d96a:	e007      	b.n	800d97c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d96c:	9300      	str	r3, [sp, #0]
 800d96e:	4a1d      	ldr	r2, [pc, #116]	; (800d9e4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d970:	4b1b      	ldr	r3, [pc, #108]	; (800d9e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d972:	e7c1      	b.n	800d8f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800d974:	b32b      	cbz	r3, 800d9c2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800d976:	4b20      	ldr	r3, [pc, #128]	; (800d9f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d978:	4a21      	ldr	r2, [pc, #132]	; (800da00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800d97a:	9500      	str	r5, [sp, #0]
 800d97c:	4621      	mov	r1, r4
 800d97e:	f7fa ff6d 	bl	800885c <snprintf>
 800d982:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d986:	4284      	cmp	r4, r0
 800d988:	bfa4      	itt	ge
 800d98a:	181b      	addge	r3, r3, r0
 800d98c:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d990:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d994:	b17b      	cbz	r3, 800d9b6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800d996:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d99a:	9b03      	ldr	r3, [sp, #12]
 800d99c:	4413      	add	r3, r2
 800d99e:	227d      	movs	r2, #125	; 0x7d
 800d9a0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d9a4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9a8:	9903      	ldr	r1, [sp, #12]
 800d9aa:	54ca      	strb	r2, [r1, r3]
 800d9ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d9b0:	3301      	adds	r3, #1
 800d9b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d9b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d9ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9bc:	601a      	str	r2, [r3, #0]
 800d9be:	b006      	add	sp, #24
 800d9c0:	bd70      	pop	{r4, r5, r6, pc}
 800d9c2:	4b0d      	ldr	r3, [pc, #52]	; (800d9f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d9c4:	4a0f      	ldr	r2, [pc, #60]	; (800da04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d9c6:	9500      	str	r5, [sp, #0]
 800d9c8:	e7d8      	b.n	800d97c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d9ca:	bf00      	nop
 800d9cc:	08012699 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, sp}
 800d9d0:	20009a20 	andcs	r9, r0, r0, lsr #20
 800d9d4:	080113ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip}
 800d9d8:	08012690 	stmdaeq	r1, {r4, r7, r9, sl, sp}
 800d9dc:	080113a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip}
 800d9e0:	0801266e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, sl, sp}
 800d9e4:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}
 800d9e8:	08012649 	stmdaeq	r1, {r0, r3, r6, r9, sl, sp}
 800d9ec:	08012653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, sp}
 800d9f0:	08012687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, sp}
 800d9f4:	0801265e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, sp}
 800d9f8:	0801267e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, sp}
 800d9fc:	080113c0 	stmdaeq	r1, {r6, r7, r8, r9, ip}
 800da00:	080113b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, ip}
 800da04:	080113c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, ip}

0800da08 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800da08:	b513      	push	{r0, r1, r4, lr}
 800da0a:	6804      	ldr	r4, [r0, #0]
 800da0c:	b914      	cbnz	r4, 800da14 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800da0e:	601c      	str	r4, [r3, #0]
 800da10:	b002      	add	sp, #8
 800da12:	bd10      	pop	{r4, pc}
 800da14:	9300      	str	r3, [sp, #0]
 800da16:	4613      	mov	r3, r2
 800da18:	460a      	mov	r2, r1
 800da1a:	2100      	movs	r1, #0
 800da1c:	f7ff fee8 	bl	800d7f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800da20:	e7f6      	b.n	800da10 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800da22 <NetworkParams::Dump()>:
 800da22:	4770      	bx	lr

0800da24 <memcpy.isra.0>:
 800da24:	3801      	subs	r0, #1
 800da26:	440a      	add	r2, r1
 800da28:	4291      	cmp	r1, r2
 800da2a:	d100      	bne.n	800da2e <memcpy.isra.0+0xa>
 800da2c:	4770      	bx	lr
 800da2e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800da32:	f800 3f01 	strb.w	r3, [r0, #1]!
 800da36:	e7f7      	b.n	800da28 <memcpy.isra.0+0x4>

0800da38 <arp_announce>:
 800da38:	4803      	ldr	r0, [pc, #12]	; (800da48 <arp_announce+0x10>)
 800da3a:	69c3      	ldr	r3, [r0, #28]
 800da3c:	b113      	cbz	r3, 800da44 <arp_announce+0xc>
 800da3e:	212a      	movs	r1, #42	; 0x2a
 800da40:	f002 b9da 	b.w	800fdf8 <emac_eth_send>
 800da44:	4770      	bx	lr
 800da46:	bf00      	nop
 800da48:	20009a24 	andcs	r9, r0, r4, lsr #20

0800da4c <arp_handle_request>:
 800da4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da4e:	2204      	movs	r2, #4
 800da50:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800da54:	4604      	mov	r4, r0
 800da56:	eb0d 0002 	add.w	r0, sp, r2
 800da5a:	f7ff ffe3 	bl	800da24 <memcpy.isra.0>
 800da5e:	4b0d      	ldr	r3, [pc, #52]	; (800da94 <arp_handle_request+0x48>)
 800da60:	9a01      	ldr	r2, [sp, #4]
 800da62:	69db      	ldr	r3, [r3, #28]
 800da64:	429a      	cmp	r2, r3
 800da66:	d113      	bne.n	800da90 <arp_handle_request+0x44>
 800da68:	2206      	movs	r2, #6
 800da6a:	4d0b      	ldr	r5, [pc, #44]	; (800da98 <arp_handle_request+0x4c>)
 800da6c:	18a1      	adds	r1, r4, r2
 800da6e:	4628      	mov	r0, r5
 800da70:	f7ff ffd8 	bl	800da24 <memcpy.isra.0>
 800da74:	f104 0116 	add.w	r1, r4, #22
 800da78:	f105 0020 	add.w	r0, r5, #32
 800da7c:	2206      	movs	r2, #6
 800da7e:	f7ff ffd1 	bl	800da24 <memcpy.isra.0>
 800da82:	69e3      	ldr	r3, [r4, #28]
 800da84:	212a      	movs	r1, #42	; 0x2a
 800da86:	4628      	mov	r0, r5
 800da88:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800da8c:	f002 f9b4 	bl	800fdf8 <emac_eth_send>
 800da90:	b003      	add	sp, #12
 800da92:	bd30      	pop	{r4, r5, pc}
 800da94:	20009a24 	andcs	r9, r0, r4, lsr #20
 800da98:	20009a50 	andcs	r9, r0, r0, asr sl

0800da9c <arp_handle_reply>:
 800da9c:	69c1      	ldr	r1, [r0, #28]
 800da9e:	3016      	adds	r0, #22
 800daa0:	f000 b80a 	b.w	800dab8 <arp_cache_update>

0800daa4 <arp_send_request>:
 800daa4:	4b03      	ldr	r3, [pc, #12]	; (800dab4 <arp_send_request+0x10>)
 800daa6:	212a      	movs	r1, #42	; 0x2a
 800daa8:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800daac:	4618      	mov	r0, r3
 800daae:	f002 b9a3 	b.w	800fdf8 <emac_eth_send>
 800dab2:	bf00      	nop
 800dab4:	20009a7c 	andcs	r9, r0, ip, ror sl

0800dab8 <arp_cache_update>:
 800dab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800daba:	4e11      	ldr	r6, [pc, #68]	; (800db00 <arp_cache_update+0x48>)
 800dabc:	8833      	ldrh	r3, [r6, #0]
 800dabe:	2b20      	cmp	r3, #32
 800dac0:	d018      	beq.n	800daf4 <arp_cache_update+0x3c>
 800dac2:	2400      	movs	r4, #0
 800dac4:	220c      	movs	r2, #12
 800dac6:	4d0f      	ldr	r5, [pc, #60]	; (800db04 <arp_cache_update+0x4c>)
 800dac8:	b2a7      	uxth	r7, r4
 800daca:	42bb      	cmp	r3, r7
 800dacc:	d80b      	bhi.n	800dae6 <arp_cache_update+0x2e>
 800dace:	fb02 5203 	mla	r2, r2, r3, r5
 800dad2:	1d84      	adds	r4, r0, #6
 800dad4:	3203      	adds	r2, #3
 800dad6:	42a0      	cmp	r0, r4
 800dad8:	d10d      	bne.n	800daf6 <arp_cache_update+0x3e>
 800dada:	220c      	movs	r2, #12
 800dadc:	435a      	muls	r2, r3
 800dade:	3301      	adds	r3, #1
 800dae0:	50a9      	str	r1, [r5, r2]
 800dae2:	8033      	strh	r3, [r6, #0]
 800dae4:	e006      	b.n	800daf4 <arp_cache_update+0x3c>
 800dae6:	3401      	adds	r4, #1
 800dae8:	fb02 5704 	mla	r7, r2, r4, r5
 800daec:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800daf0:	428f      	cmp	r7, r1
 800daf2:	d1e9      	bne.n	800dac8 <arp_cache_update+0x10>
 800daf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800daf6:	f810 7b01 	ldrb.w	r7, [r0], #1
 800dafa:	f802 7f01 	strb.w	r7, [r2, #1]!
 800dafe:	e7ea      	b.n	800dad6 <arp_cache_update+0x1e>
 800db00:	20009c28 	andcs	r9, r0, r8, lsr #24
 800db04:	20009aa8 	andcs	r9, r0, r8, lsr #21

0800db08 <arp_cache_lookup>:
 800db08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db0c:	2200      	movs	r2, #0
 800db0e:	4606      	mov	r6, r0
 800db10:	460c      	mov	r4, r1
 800db12:	200c      	movs	r0, #12
 800db14:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800db9c <arp_cache_lookup+0x94>
 800db18:	fb00 f302 	mul.w	r3, r0, r2
 800db1c:	f853 1008 	ldr.w	r1, [r3, r8]
 800db20:	42b1      	cmp	r1, r6
 800db22:	d10d      	bne.n	800db40 <arp_cache_lookup+0x38>
 800db24:	3304      	adds	r3, #4
 800db26:	4443      	add	r3, r8
 800db28:	3c01      	subs	r4, #1
 800db2a:	1d9a      	adds	r2, r3, #6
 800db2c:	4293      	cmp	r3, r2
 800db2e:	d102      	bne.n	800db36 <arp_cache_lookup+0x2e>
 800db30:	4630      	mov	r0, r6
 800db32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db36:	f813 1b01 	ldrb.w	r1, [r3], #1
 800db3a:	f804 1f01 	strb.w	r1, [r4, #1]!
 800db3e:	e7f5      	b.n	800db2c <arp_cache_lookup+0x24>
 800db40:	b111      	cbz	r1, 800db48 <arp_cache_lookup+0x40>
 800db42:	3201      	adds	r2, #1
 800db44:	2a20      	cmp	r2, #32
 800db46:	d1e7      	bne.n	800db18 <arp_cache_lookup+0x10>
 800db48:	2704      	movs	r7, #4
 800db4a:	f8df a054 	ldr.w	sl, [pc, #84]	; 800dba0 <arp_cache_lookup+0x98>
 800db4e:	f8ba 5000 	ldrh.w	r5, [sl]
 800db52:	3f01      	subs	r7, #1
 800db54:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800db58:	d101      	bne.n	800db5e <arp_cache_lookup+0x56>
 800db5a:	463e      	mov	r6, r7
 800db5c:	e7e8      	b.n	800db30 <arp_cache_lookup+0x28>
 800db5e:	4630      	mov	r0, r6
 800db60:	f7ff ffa0 	bl	800daa4 <arp_send_request>
 800db64:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800db68:	f1b9 0901 	subs.w	r9, r9, #1
 800db6c:	f8ba 3000 	ldrh.w	r3, [sl]
 800db70:	d011      	beq.n	800db96 <arp_cache_lookup+0x8e>
 800db72:	429d      	cmp	r5, r3
 800db74:	d00c      	beq.n	800db90 <arp_cache_lookup+0x88>
 800db76:	230c      	movs	r3, #12
 800db78:	fb03 8505 	mla	r5, r3, r5, r8
 800db7c:	3c01      	subs	r4, #1
 800db7e:	1d2b      	adds	r3, r5, #4
 800db80:	350a      	adds	r5, #10
 800db82:	42ab      	cmp	r3, r5
 800db84:	d0d4      	beq.n	800db30 <arp_cache_lookup+0x28>
 800db86:	f813 2b01 	ldrb.w	r2, [r3], #1
 800db8a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800db8e:	e7f8      	b.n	800db82 <arp_cache_lookup+0x7a>
 800db90:	f7f9 fcc6 	bl	8007520 <net_handle>
 800db94:	e7e8      	b.n	800db68 <arp_cache_lookup+0x60>
 800db96:	429d      	cmp	r5, r3
 800db98:	d0db      	beq.n	800db52 <arp_cache_lookup+0x4a>
 800db9a:	e7ec      	b.n	800db76 <arp_cache_lookup+0x6e>
 800db9c:	20009aa8 	andcs	r9, r0, r8, lsr #21
 800dba0:	20009c28 	andcs	r9, r0, r8, lsr #24

0800dba4 <_parse_response>:
 800dba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dba8:	2400      	movs	r4, #0
 800dbaa:	460d      	mov	r5, r1
 800dbac:	46a3      	mov	fp, r4
 800dbae:	4627      	mov	r7, r4
 800dbb0:	46a2      	mov	sl, r4
 800dbb2:	46a1      	mov	r9, r4
 800dbb4:	46a0      	mov	r8, r4
 800dbb6:	4e50      	ldr	r6, [pc, #320]	; (800dcf8 <_parse_response+0x154>)
 800dbb8:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800dbbc:	6833      	ldr	r3, [r6, #0]
 800dbbe:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800dbc2:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800dbc6:	9009      	str	r0, [sp, #36]	; 0x24
 800dbc8:	9402      	str	r4, [sp, #8]
 800dbca:	9407      	str	r4, [sp, #28]
 800dbcc:	9308      	str	r3, [sp, #32]
 800dbce:	f7f9 fca7 	bl	8007520 <net_handle>
 800dbd2:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800dbd6:	9300      	str	r3, [sp, #0]
 800dbd8:	f44f 7209 	mov.w	r2, #548	; 0x224
 800dbdc:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800dbe0:	ab0c      	add	r3, sp, #48	; 0x30
 800dbe2:	a90d      	add	r1, sp, #52	; 0x34
 800dbe4:	f7fe fe22 	bl	800c82c <udp_recv>
 800dbe8:	2800      	cmp	r0, #0
 800dbea:	d03f      	beq.n	800dc6c <_parse_response+0xc8>
 800dbec:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800dbf0:	2b43      	cmp	r3, #67	; 0x43
 800dbf2:	d13b      	bne.n	800dc6c <_parse_response+0xc8>
 800dbf4:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800dbf8:	1e6b      	subs	r3, r5, #1
 800dbfa:	1d69      	adds	r1, r5, #5
 800dbfc:	4299      	cmp	r1, r3
 800dbfe:	d12f      	bne.n	800dc60 <_parse_response+0xbc>
 800dc00:	2100      	movs	r1, #0
 800dc02:	ab0d      	add	r3, sp, #52	; 0x34
 800dc04:	181d      	adds	r5, r3, r0
 800dc06:	468c      	mov	ip, r1
 800dc08:	460e      	mov	r6, r1
 800dc0a:	4608      	mov	r0, r1
 800dc0c:	ab49      	add	r3, sp, #292	; 0x124
 800dc0e:	42ab      	cmp	r3, r5
 800dc10:	d337      	bcc.n	800dc82 <_parse_response+0xde>
 800dc12:	b141      	cbz	r1, 800dc26 <_parse_response+0x82>
 800dc14:	4b39      	ldr	r3, [pc, #228]	; (800dcfc <_parse_response+0x158>)
 800dc16:	9a07      	ldr	r2, [sp, #28]
 800dc18:	f883 8003 	strb.w	r8, [r3, #3]
 800dc1c:	709a      	strb	r2, [r3, #2]
 800dc1e:	9a06      	ldr	r2, [sp, #24]
 800dc20:	705a      	strb	r2, [r3, #1]
 800dc22:	9a05      	ldr	r2, [sp, #20]
 800dc24:	701a      	strb	r2, [r3, #0]
 800dc26:	f1bc 0f00 	cmp.w	ip, #0
 800dc2a:	d007      	beq.n	800dc3c <_parse_response+0x98>
 800dc2c:	4b34      	ldr	r3, [pc, #208]	; (800dd00 <_parse_response+0x15c>)
 800dc2e:	9a04      	ldr	r2, [sp, #16]
 800dc30:	705c      	strb	r4, [r3, #1]
 800dc32:	70da      	strb	r2, [r3, #3]
 800dc34:	9a03      	ldr	r2, [sp, #12]
 800dc36:	709a      	strb	r2, [r3, #2]
 800dc38:	9a02      	ldr	r2, [sp, #8]
 800dc3a:	701a      	strb	r2, [r3, #0]
 800dc3c:	b13e      	cbz	r6, 800dc4e <_parse_response+0xaa>
 800dc3e:	4b31      	ldr	r3, [pc, #196]	; (800dd04 <_parse_response+0x160>)
 800dc40:	70df      	strb	r7, [r3, #3]
 800dc42:	f883 a002 	strb.w	sl, [r3, #2]
 800dc46:	f883 9001 	strb.w	r9, [r3, #1]
 800dc4a:	f883 b000 	strb.w	fp, [r3]
 800dc4e:	2802      	cmp	r0, #2
 800dc50:	d102      	bne.n	800dc58 <_parse_response+0xb4>
 800dc52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dc54:	4b2c      	ldr	r3, [pc, #176]	; (800dd08 <_parse_response+0x164>)
 800dc56:	601a      	str	r2, [r3, #0]
 800dc58:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800dc5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc60:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800dc64:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800dc68:	45e6      	cmp	lr, ip
 800dc6a:	d0c7      	beq.n	800dbfc <_parse_response+0x58>
 800dc6c:	6833      	ldr	r3, [r6, #0]
 800dc6e:	9a08      	ldr	r2, [sp, #32]
 800dc70:	1a9b      	subs	r3, r3, r2
 800dc72:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800dc76:	d3aa      	bcc.n	800dbce <_parse_response+0x2a>
 800dc78:	2800      	cmp	r0, #0
 800dc7a:	d1c1      	bne.n	800dc00 <_parse_response+0x5c>
 800dc7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dc80:	e7ea      	b.n	800dc58 <_parse_response+0xb4>
 800dc82:	781a      	ldrb	r2, [r3, #0]
 800dc84:	2a35      	cmp	r2, #53	; 0x35
 800dc86:	d011      	beq.n	800dcac <_parse_response+0x108>
 800dc88:	d808      	bhi.n	800dc9c <_parse_response+0xf8>
 800dc8a:	2a01      	cmp	r2, #1
 800dc8c:	d011      	beq.n	800dcb2 <_parse_response+0x10e>
 800dc8e:	2a03      	cmp	r2, #3
 800dc90:	d019      	beq.n	800dcc6 <_parse_response+0x122>
 800dc92:	b14a      	cbz	r2, 800dca8 <_parse_response+0x104>
 800dc94:	1c9a      	adds	r2, r3, #2
 800dc96:	785b      	ldrb	r3, [r3, #1]
 800dc98:	4413      	add	r3, r2
 800dc9a:	e7b8      	b.n	800dc0e <_parse_response+0x6a>
 800dc9c:	2a36      	cmp	r2, #54	; 0x36
 800dc9e:	d01f      	beq.n	800dce0 <_parse_response+0x13c>
 800dca0:	2aff      	cmp	r2, #255	; 0xff
 800dca2:	d1f7      	bne.n	800dc94 <_parse_response+0xf0>
 800dca4:	462b      	mov	r3, r5
 800dca6:	e7b2      	b.n	800dc0e <_parse_response+0x6a>
 800dca8:	3301      	adds	r3, #1
 800dcaa:	e7b0      	b.n	800dc0e <_parse_response+0x6a>
 800dcac:	7898      	ldrb	r0, [r3, #2]
 800dcae:	3303      	adds	r3, #3
 800dcb0:	e7ad      	b.n	800dc0e <_parse_response+0x6a>
 800dcb2:	f893 b002 	ldrb.w	fp, [r3, #2]
 800dcb6:	f893 9003 	ldrb.w	r9, [r3, #3]
 800dcba:	f893 a004 	ldrb.w	sl, [r3, #4]
 800dcbe:	795f      	ldrb	r7, [r3, #5]
 800dcc0:	4616      	mov	r6, r2
 800dcc2:	3306      	adds	r3, #6
 800dcc4:	e7a3      	b.n	800dc0e <_parse_response+0x6a>
 800dcc6:	789a      	ldrb	r2, [r3, #2]
 800dcc8:	78dc      	ldrb	r4, [r3, #3]
 800dcca:	9202      	str	r2, [sp, #8]
 800dccc:	791a      	ldrb	r2, [r3, #4]
 800dcce:	f04f 0c01 	mov.w	ip, #1
 800dcd2:	9203      	str	r2, [sp, #12]
 800dcd4:	795a      	ldrb	r2, [r3, #5]
 800dcd6:	9204      	str	r2, [sp, #16]
 800dcd8:	785a      	ldrb	r2, [r3, #1]
 800dcda:	4413      	add	r3, r2
 800dcdc:	3302      	adds	r3, #2
 800dcde:	e796      	b.n	800dc0e <_parse_response+0x6a>
 800dce0:	789a      	ldrb	r2, [r3, #2]
 800dce2:	f893 8005 	ldrb.w	r8, [r3, #5]
 800dce6:	9205      	str	r2, [sp, #20]
 800dce8:	78da      	ldrb	r2, [r3, #3]
 800dcea:	2101      	movs	r1, #1
 800dcec:	9206      	str	r2, [sp, #24]
 800dcee:	791a      	ldrb	r2, [r3, #4]
 800dcf0:	3306      	adds	r3, #6
 800dcf2:	9207      	str	r2, [sp, #28]
 800dcf4:	e78b      	b.n	800dc0e <_parse_response+0x6a>
 800dcf6:	bf00      	nop
 800dcf8:	2000a0f4 	strdcs	sl, [r0], -r4
 800dcfc:	20009e5c 	andcs	r9, r0, ip, asr lr
 800dd00:	20009c2c 	andcs	r9, r0, ip, lsr #24
 800dd04:	20009c34 	andcs	r9, r0, r4, lsr ip
 800dd08:	20009c30 	andcs	r9, r0, r0, lsr ip

0800dd0c <memcpy.isra.0>:
 800dd0c:	3801      	subs	r0, #1
 800dd0e:	440a      	add	r2, r1
 800dd10:	4291      	cmp	r1, r2
 800dd12:	d100      	bne.n	800dd16 <memcpy.isra.0+0xa>
 800dd14:	4770      	bx	lr
 800dd16:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dd1a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dd1e:	e7f7      	b.n	800dd10 <memcpy.isra.0+0x4>

0800dd20 <dhcp_client>:
 800dd20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd24:	b087      	sub	sp, #28
 800dd26:	9203      	str	r2, [sp, #12]
 800dd28:	4a77      	ldr	r2, [pc, #476]	; (800df08 <dhcp_client+0x1e8>)
 800dd2a:	460f      	mov	r7, r1
 800dd2c:	4605      	mov	r5, r0
 800dd2e:	f44f 7309 	mov.w	r3, #548	; 0x224
 800dd32:	4614      	mov	r4, r2
 800dd34:	2100      	movs	r1, #0
 800dd36:	3b01      	subs	r3, #1
 800dd38:	f802 1b01 	strb.w	r1, [r2], #1
 800dd3c:	d1fb      	bne.n	800dd36 <dhcp_client+0x16>
 800dd3e:	f240 1301 	movw	r3, #257	; 0x101
 800dd42:	2206      	movs	r2, #6
 800dd44:	4629      	mov	r1, r5
 800dd46:	4871      	ldr	r0, [pc, #452]	; (800df0c <dhcp_client+0x1ec>)
 800dd48:	8023      	strh	r3, [r4, #0]
 800dd4a:	70a2      	strb	r2, [r4, #2]
 800dd4c:	f7ff ffde 	bl	800dd0c <memcpy.isra.0>
 800dd50:	4b6f      	ldr	r3, [pc, #444]	; (800df10 <dhcp_client+0x1f0>)
 800dd52:	2044      	movs	r0, #68	; 0x44
 800dd54:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dd58:	f240 1335 	movw	r3, #309	; 0x135
 800dd5c:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800dd60:	f7fe fd2a 	bl	800c7b8 <udp_bind>
 800dd64:	1e06      	subs	r6, r0, #0
 800dd66:	f2c0 80c9 	blt.w	800defc <dhcp_client+0x1dc>
 800dd6a:	f04f 0915 	mov.w	r9, #21
 800dd6e:	f8df a198 	ldr.w	sl, [pc, #408]	; 800df08 <dhcp_client+0x1e8>
 800dd72:	f1b9 0901 	subs.w	r9, r9, #1
 800dd76:	d11f      	bne.n	800ddb8 <dhcp_client+0x98>
 800dd78:	464c      	mov	r4, r9
 800dd7a:	2044      	movs	r0, #68	; 0x44
 800dd7c:	f7fe fd36 	bl	800c7ec <udp_unbind>
 800dd80:	2c00      	cmp	r4, #0
 800dd82:	f000 80be 	beq.w	800df02 <dhcp_client+0x1e2>
 800dd86:	2204      	movs	r2, #4
 800dd88:	4962      	ldr	r1, [pc, #392]	; (800df14 <dhcp_client+0x1f4>)
 800dd8a:	a805      	add	r0, sp, #20
 800dd8c:	f7ff ffbe 	bl	800dd0c <memcpy.isra.0>
 800dd90:	9b05      	ldr	r3, [sp, #20]
 800dd92:	2204      	movs	r2, #4
 800dd94:	4960      	ldr	r1, [pc, #384]	; (800df18 <dhcp_client+0x1f8>)
 800dd96:	603b      	str	r3, [r7, #0]
 800dd98:	a805      	add	r0, sp, #20
 800dd9a:	f7ff ffb7 	bl	800dd0c <memcpy.isra.0>
 800dd9e:	9b05      	ldr	r3, [sp, #20]
 800dda0:	a805      	add	r0, sp, #20
 800dda2:	60bb      	str	r3, [r7, #8]
 800dda4:	2204      	movs	r2, #4
 800dda6:	495d      	ldr	r1, [pc, #372]	; (800df1c <dhcp_client+0x1fc>)
 800dda8:	f7ff ffb0 	bl	800dd0c <memcpy.isra.0>
 800ddac:	2000      	movs	r0, #0
 800ddae:	9b05      	ldr	r3, [sp, #20]
 800ddb0:	607b      	str	r3, [r7, #4]
 800ddb2:	b007      	add	sp, #28
 800ddb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ddb8:	f643 5301 	movw	r3, #15617	; 0x3d01
 800ddbc:	f240 1807 	movw	r8, #263	; 0x107
 800ddc0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800ddc4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800ddc8:	782b      	ldrb	r3, [r5, #0]
 800ddca:	4a55      	ldr	r2, [pc, #340]	; (800df20 <dhcp_client+0x200>)
 800ddcc:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800ddd0:	786b      	ldrb	r3, [r5, #1]
 800ddd2:	fa5f fb86 	uxtb.w	fp, r6
 800ddd6:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800ddda:	78ab      	ldrb	r3, [r5, #2]
 800dddc:	4651      	mov	r1, sl
 800ddde:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dde2:	78eb      	ldrb	r3, [r5, #3]
 800dde4:	4658      	mov	r0, fp
 800dde6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800ddea:	792b      	ldrb	r3, [r5, #4]
 800ddec:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800ddf0:	796b      	ldrb	r3, [r5, #5]
 800ddf2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800ddf6:	4b4b      	ldr	r3, [pc, #300]	; (800df24 <dhcp_client+0x204>)
 800ddf8:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800ddfc:	23ff      	movs	r3, #255	; 0xff
 800ddfe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800de02:	2343      	movs	r3, #67	; 0x43
 800de04:	f240 1205 	movw	r2, #261	; 0x105
 800de08:	9300      	str	r3, [sp, #0]
 800de0a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800de0e:	f7fe fd69 	bl	800c8e4 <udp_send>
 800de12:	4629      	mov	r1, r5
 800de14:	4630      	mov	r0, r6
 800de16:	f7ff fec5 	bl	800dba4 <_parse_response>
 800de1a:	2802      	cmp	r0, #2
 800de1c:	d1a9      	bne.n	800dd72 <dhcp_client+0x52>
 800de1e:	f643 5303 	movw	r3, #15619	; 0x3d03
 800de22:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800de26:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800de2a:	782b      	ldrb	r3, [r5, #0]
 800de2c:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800df28 <dhcp_client+0x208>
 800de30:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800de34:	786b      	ldrb	r3, [r5, #1]
 800de36:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800de3a:	78ab      	ldrb	r3, [r5, #2]
 800de3c:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800de40:	78eb      	ldrb	r3, [r5, #3]
 800de42:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800de46:	792b      	ldrb	r3, [r5, #4]
 800de48:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800de4c:	796b      	ldrb	r3, [r5, #5]
 800de4e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800de52:	f240 4332 	movw	r3, #1074	; 0x432
 800de56:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800de5a:	4b2e      	ldr	r3, [pc, #184]	; (800df14 <dhcp_client+0x1f4>)
 800de5c:	881a      	ldrh	r2, [r3, #0]
 800de5e:	885b      	ldrh	r3, [r3, #2]
 800de60:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800de64:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800de68:	f240 4336 	movw	r3, #1078	; 0x436
 800de6c:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800de70:	4b2e      	ldr	r3, [pc, #184]	; (800df2c <dhcp_client+0x20c>)
 800de72:	221e      	movs	r2, #30
 800de74:	681b      	ldr	r3, [r3, #0]
 800de76:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800de7a:	230c      	movs	r3, #12
 800de7c:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800de80:	9b03      	ldr	r3, [sp, #12]
 800de82:	1e58      	subs	r0, r3, #1
 800de84:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800de88:	f1a2 0e1e 	sub.w	lr, r2, #30
 800de8c:	1c51      	adds	r1, r2, #1
 800de8e:	bb8b      	cbnz	r3, 800def4 <dhcp_client+0x1d4>
 800de90:	2037      	movs	r0, #55	; 0x37
 800de92:	18a3      	adds	r3, r4, r2
 800de94:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800de98:	2006      	movs	r0, #6
 800de9a:	4421      	add	r1, r4
 800de9c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800dea0:	2103      	movs	r1, #3
 800dea2:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800dea6:	210f      	movs	r1, #15
 800dea8:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800deac:	213a      	movs	r1, #58	; 0x3a
 800deae:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800deb2:	213b      	movs	r1, #59	; 0x3b
 800deb4:	f04f 0801 	mov.w	r8, #1
 800deb8:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800debc:	21ff      	movs	r1, #255	; 0xff
 800debe:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800dec2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800dec6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800deca:	2343      	movs	r3, #67	; 0x43
 800decc:	32f5      	adds	r2, #245	; 0xf5
 800dece:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800ded2:	4651      	mov	r1, sl
 800ded4:	9300      	str	r3, [sp, #0]
 800ded6:	b292      	uxth	r2, r2
 800ded8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dedc:	4658      	mov	r0, fp
 800dede:	f7fe fd01 	bl	800c8e4 <udp_send>
 800dee2:	4629      	mov	r1, r5
 800dee4:	4630      	mov	r0, r6
 800dee6:	f7ff fe5d 	bl	800dba4 <_parse_response>
 800deea:	2805      	cmp	r0, #5
 800deec:	f47f af41 	bne.w	800dd72 <dhcp_client+0x52>
 800def0:	4644      	mov	r4, r8
 800def2:	e742      	b.n	800dd7a <dhcp_client+0x5a>
 800def4:	460a      	mov	r2, r1
 800def6:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800defa:	e7c3      	b.n	800de84 <dhcp_client+0x164>
 800defc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800df00:	e757      	b.n	800ddb2 <dhcp_client+0x92>
 800df02:	f06f 0001 	mvn.w	r0, #1
 800df06:	e754      	b.n	800ddb2 <dhcp_client+0x92>
 800df08:	20009c38 	andcs	r9, r0, r8, lsr ip
 800df0c:	20009c54 	andcs	r9, r0, r4, asr ip
 800df10:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800df14:	20009c30 	andcs	r9, r0, r0, lsr ip
 800df18:	20009c2c 	andcs	r9, r0, ip, lsr #24
 800df1c:	20009c34 	andcs	r9, r0, r4, lsr ip
 800df20:	03010637 	movweq	r0, #5687	; 0x1637
 800df24:	3b3a0f06 	blcc	8e91b44 <__exidx_end+0xe7f034>
 800df28:	20009d41 	andcs	r9, r0, r1, asr #26
 800df2c:	20009e5c 	andcs	r9, r0, ip, asr lr

0800df30 <dhcp_client_release>:
 800df30:	b507      	push	{r0, r1, r2, lr}
 800df32:	2044      	movs	r0, #68	; 0x44
 800df34:	f7fe fc40 	bl	800c7b8 <udp_bind>
 800df38:	f243 6307 	movw	r3, #13831	; 0x3607
 800df3c:	4911      	ldr	r1, [pc, #68]	; (800df84 <dhcp_client_release+0x54>)
 800df3e:	b2c0      	uxtb	r0, r0
 800df40:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800df44:	2304      	movs	r3, #4
 800df46:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800df4a:	4b0f      	ldr	r3, [pc, #60]	; (800df88 <dhcp_client_release+0x58>)
 800df4c:	781a      	ldrb	r2, [r3, #0]
 800df4e:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800df52:	785a      	ldrb	r2, [r3, #1]
 800df54:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800df58:	789a      	ldrb	r2, [r3, #2]
 800df5a:	78db      	ldrb	r3, [r3, #3]
 800df5c:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800df60:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800df64:	23ff      	movs	r3, #255	; 0xff
 800df66:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800df6a:	2343      	movs	r3, #67	; 0x43
 800df6c:	22fa      	movs	r2, #250	; 0xfa
 800df6e:	9300      	str	r3, [sp, #0]
 800df70:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800df74:	f7fe fcb6 	bl	800c8e4 <udp_send>
 800df78:	2044      	movs	r0, #68	; 0x44
 800df7a:	b003      	add	sp, #12
 800df7c:	f85d eb04 	ldr.w	lr, [sp], #4
 800df80:	f7fe bc34 	b.w	800c7ec <udp_unbind>
 800df84:	20009c38 	andcs	r9, r0, r8, lsr ip
 800df88:	20009e5c 	andcs	r9, r0, ip, asr lr

0800df8c <memcpy.isra.0>:
 800df8c:	3801      	subs	r0, #1
 800df8e:	440a      	add	r2, r1
 800df90:	4291      	cmp	r1, r2
 800df92:	d100      	bne.n	800df96 <memcpy.isra.0+0xa>
 800df94:	4770      	bx	lr
 800df96:	f811 3b01 	ldrb.w	r3, [r1], #1
 800df9a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800df9e:	e7f7      	b.n	800df90 <memcpy.isra.0+0x4>

0800dfa0 <_send_report>:
 800dfa0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dfa2:	491c      	ldr	r1, [pc, #112]	; (800e014 <_send_report+0x74>)
 800dfa4:	4c1c      	ldr	r4, [pc, #112]	; (800e018 <_send_report+0x78>)
 800dfa6:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800dfaa:	9001      	str	r0, [sp, #4]
 800dfac:	70cb      	strb	r3, [r1, #3]
 800dfae:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800dfb2:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800dfb6:	710b      	strb	r3, [r1, #4]
 800dfb8:	7148      	strb	r0, [r1, #5]
 800dfba:	2206      	movs	r2, #6
 800dfbc:	4620      	mov	r0, r4
 800dfbe:	f7ff ffe5 	bl	800df8c <memcpy.isra.0>
 800dfc2:	2204      	movs	r2, #4
 800dfc4:	2700      	movs	r7, #0
 800dfc6:	4d15      	ldr	r5, [pc, #84]	; (800e01c <_send_report+0x7c>)
 800dfc8:	eb0d 0102 	add.w	r1, sp, r2
 800dfcc:	882b      	ldrh	r3, [r5, #0]
 800dfce:	f104 001e 	add.w	r0, r4, #30
 800dfd2:	f104 060e 	add.w	r6, r4, #14
 800dfd6:	8263      	strh	r3, [r4, #18]
 800dfd8:	f7ff ffd8 	bl	800df8c <memcpy.isra.0>
 800dfdc:	2118      	movs	r1, #24
 800dfde:	4630      	mov	r0, r6
 800dfe0:	8327      	strh	r7, [r4, #24]
 800dfe2:	f000 f8c6 	bl	800e172 <net_chksum>
 800dfe6:	2204      	movs	r2, #4
 800dfe8:	8320      	strh	r0, [r4, #24]
 800dfea:	eb0d 0102 	add.w	r1, sp, r2
 800dfee:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800dff2:	f7ff ffcb 	bl	800df8c <memcpy.isra.0>
 800dff6:	2120      	movs	r1, #32
 800dff8:	4630      	mov	r0, r6
 800dffa:	8527      	strh	r7, [r4, #40]	; 0x28
 800dffc:	f000 f8b9 	bl	800e172 <net_chksum>
 800e000:	212e      	movs	r1, #46	; 0x2e
 800e002:	8520      	strh	r0, [r4, #40]	; 0x28
 800e004:	4620      	mov	r0, r4
 800e006:	f001 fef7 	bl	800fdf8 <emac_eth_send>
 800e00a:	882b      	ldrh	r3, [r5, #0]
 800e00c:	3301      	adds	r3, #1
 800e00e:	802b      	strh	r3, [r5, #0]
 800e010:	b003      	add	sp, #12
 800e012:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e014:	20009fb8 			; <UNDEFINED> instruction: 0x20009fb8
 800e018:	20009fc0 	andcs	r9, r0, r0, asr #31
 800e01c:	20009f80 	andcs	r9, r0, r0, lsl #31

0800e020 <igmp_set_ip>:
 800e020:	b507      	push	{r0, r1, r2, lr}
 800e022:	2204      	movs	r2, #4
 800e024:	6803      	ldr	r3, [r0, #0]
 800e026:	eb0d 0102 	add.w	r1, sp, r2
 800e02a:	4806      	ldr	r0, [pc, #24]	; (800e044 <igmp_set_ip+0x24>)
 800e02c:	9301      	str	r3, [sp, #4]
 800e02e:	f7ff ffad 	bl	800df8c <memcpy.isra.0>
 800e032:	2204      	movs	r2, #4
 800e034:	4804      	ldr	r0, [pc, #16]	; (800e048 <igmp_set_ip+0x28>)
 800e036:	eb0d 0102 	add.w	r1, sp, r2
 800e03a:	f7ff ffa7 	bl	800df8c <memcpy.isra.0>
 800e03e:	b003      	add	sp, #12
 800e040:	f85d fb04 	ldr.w	pc, [sp], #4
 800e044:	20009fda 	ldrdcs	r9, [r0], -sl
 800e048:	20009fa2 	andcs	r9, r0, r2, lsr #31

0800e04c <igmp_timer>:
 800e04c:	b570      	push	{r4, r5, r6, lr}
 800e04e:	2500      	movs	r5, #0
 800e050:	2602      	movs	r6, #2
 800e052:	4c0a      	ldr	r4, [pc, #40]	; (800e07c <igmp_timer+0x30>)
 800e054:	7963      	ldrb	r3, [r4, #5]
 800e056:	2b01      	cmp	r3, #1
 800e058:	d109      	bne.n	800e06e <igmp_timer+0x22>
 800e05a:	7923      	ldrb	r3, [r4, #4]
 800e05c:	b13b      	cbz	r3, 800e06e <igmp_timer+0x22>
 800e05e:	3b01      	subs	r3, #1
 800e060:	b2db      	uxtb	r3, r3
 800e062:	7123      	strb	r3, [r4, #4]
 800e064:	b91b      	cbnz	r3, 800e06e <igmp_timer+0x22>
 800e066:	6820      	ldr	r0, [r4, #0]
 800e068:	f7ff ff9a 	bl	800dfa0 <_send_report>
 800e06c:	7166      	strb	r6, [r4, #5]
 800e06e:	3501      	adds	r5, #1
 800e070:	2d24      	cmp	r5, #36	; 0x24
 800e072:	f104 0408 	add.w	r4, r4, #8
 800e076:	d1ed      	bne.n	800e054 <igmp_timer+0x8>
 800e078:	bd70      	pop	{r4, r5, r6, pc}
 800e07a:	bf00      	nop
 800e07c:	20009e60 	andcs	r9, r0, r0, ror #28

0800e080 <igmp_join>:
 800e080:	b538      	push	{r3, r4, r5, lr}
 800e082:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800e086:	2be0      	cmp	r3, #224	; 0xe0
 800e088:	d11b      	bne.n	800e0c2 <igmp_join+0x42>
 800e08a:	4911      	ldr	r1, [pc, #68]	; (800e0d0 <igmp_join+0x50>)
 800e08c:	680c      	ldr	r4, [r1, #0]
 800e08e:	2c24      	cmp	r4, #36	; 0x24
 800e090:	d01a      	beq.n	800e0c8 <igmp_join+0x48>
 800e092:	2300      	movs	r3, #0
 800e094:	4a0f      	ldr	r2, [pc, #60]	; (800e0d4 <igmp_join+0x54>)
 800e096:	429c      	cmp	r4, r3
 800e098:	dc0d      	bgt.n	800e0b6 <igmp_join+0x36>
 800e09a:	f44f 7381 	mov.w	r3, #258	; 0x102
 800e09e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800e0a2:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800e0a6:	8093      	strh	r3, [r2, #4]
 800e0a8:	1c63      	adds	r3, r4, #1
 800e0aa:	600b      	str	r3, [r1, #0]
 800e0ac:	f7ff ff78 	bl	800dfa0 <_send_report>
 800e0b0:	4623      	mov	r3, r4
 800e0b2:	4618      	mov	r0, r3
 800e0b4:	bd38      	pop	{r3, r4, r5, pc}
 800e0b6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e0ba:	4285      	cmp	r5, r0
 800e0bc:	d0f9      	beq.n	800e0b2 <igmp_join+0x32>
 800e0be:	3301      	adds	r3, #1
 800e0c0:	e7e9      	b.n	800e096 <igmp_join+0x16>
 800e0c2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e0c6:	e7f4      	b.n	800e0b2 <igmp_join+0x32>
 800e0c8:	f06f 0301 	mvn.w	r3, #1
 800e0cc:	e7f1      	b.n	800e0b2 <igmp_join+0x32>
 800e0ce:	bf00      	nop
 800e0d0:	20009f84 	andcs	r9, r0, r4, lsl #31
 800e0d4:	20009e60 	andcs	r9, r0, r0, ror #28

0800e0d8 <igmp_leave>:
 800e0d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e0dc:	2600      	movs	r6, #0
 800e0de:	4f1c      	ldr	r7, [pc, #112]	; (800e150 <igmp_leave+0x78>)
 800e0e0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800e0e4:	4283      	cmp	r3, r0
 800e0e6:	d007      	beq.n	800e0f8 <igmp_leave+0x20>
 800e0e8:	3601      	adds	r6, #1
 800e0ea:	2e24      	cmp	r6, #36	; 0x24
 800e0ec:	d1f8      	bne.n	800e0e0 <igmp_leave+0x8>
 800e0ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e0f2:	b002      	add	sp, #8
 800e0f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0f8:	2400      	movs	r4, #0
 800e0fa:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800e154 <igmp_leave+0x7c>
 800e0fe:	4d16      	ldr	r5, [pc, #88]	; (800e158 <igmp_leave+0x80>)
 800e100:	f8b8 3000 	ldrh.w	r3, [r8]
 800e104:	2118      	movs	r1, #24
 800e106:	9001      	str	r0, [sp, #4]
 800e108:	4814      	ldr	r0, [pc, #80]	; (800e15c <igmp_leave+0x84>)
 800e10a:	826b      	strh	r3, [r5, #18]
 800e10c:	832c      	strh	r4, [r5, #24]
 800e10e:	f000 f830 	bl	800e172 <net_chksum>
 800e112:	2204      	movs	r2, #4
 800e114:	8328      	strh	r0, [r5, #24]
 800e116:	eb0d 0102 	add.w	r1, sp, r2
 800e11a:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800e11e:	f7ff ff35 	bl	800df8c <memcpy.isra.0>
 800e122:	2120      	movs	r1, #32
 800e124:	f105 000e 	add.w	r0, r5, #14
 800e128:	852c      	strh	r4, [r5, #40]	; 0x28
 800e12a:	f000 f822 	bl	800e172 <net_chksum>
 800e12e:	212e      	movs	r1, #46	; 0x2e
 800e130:	8528      	strh	r0, [r5, #40]	; 0x28
 800e132:	4628      	mov	r0, r5
 800e134:	f001 fe60 	bl	800fdf8 <emac_eth_send>
 800e138:	f8b8 3000 	ldrh.w	r3, [r8]
 800e13c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800e140:	3301      	adds	r3, #1
 800e142:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800e146:	4620      	mov	r0, r4
 800e148:	f8a8 3000 	strh.w	r3, [r8]
 800e14c:	80bc      	strh	r4, [r7, #4]
 800e14e:	e7d0      	b.n	800e0f2 <igmp_leave+0x1a>
 800e150:	20009e60 	andcs	r9, r0, r0, ror #28
 800e154:	20009f80 	andcs	r9, r0, r0, lsl #31
 800e158:	20009f88 	andcs	r9, r0, r8, lsl #31
 800e15c:	20009fce 	andcs	r9, r0, lr, asr #31

0800e160 <ip_set_ip>:
 800e160:	b510      	push	{r4, lr}
 800e162:	4604      	mov	r4, r0
 800e164:	f7fe fb08 	bl	800c778 <udp_set_ip>
 800e168:	4620      	mov	r0, r4
 800e16a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e16e:	f7ff bf57 	b.w	800e020 <igmp_set_ip>

0800e172 <net_chksum>:
 800e172:	2300      	movs	r3, #0
 800e174:	f021 0201 	bic.w	r2, r1, #1
 800e178:	b530      	push	{r4, r5, lr}
 800e17a:	1884      	adds	r4, r0, r2
 800e17c:	42a0      	cmp	r0, r4
 800e17e:	d10b      	bne.n	800e198 <net_chksum+0x26>
 800e180:	4291      	cmp	r1, r2
 800e182:	d004      	beq.n	800e18e <net_chksum+0x1c>
 800e184:	7802      	ldrb	r2, [r0, #0]
 800e186:	0212      	lsls	r2, r2, #8
 800e188:	ba52      	rev16	r2, r2
 800e18a:	b292      	uxth	r2, r2
 800e18c:	4413      	add	r3, r2
 800e18e:	0c1a      	lsrs	r2, r3, #16
 800e190:	d106      	bne.n	800e1a0 <net_chksum+0x2e>
 800e192:	43d8      	mvns	r0, r3
 800e194:	b280      	uxth	r0, r0
 800e196:	bd30      	pop	{r4, r5, pc}
 800e198:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e19c:	442b      	add	r3, r5
 800e19e:	e7ed      	b.n	800e17c <net_chksum+0xa>
 800e1a0:	b29b      	uxth	r3, r3
 800e1a2:	e7f3      	b.n	800e18c <net_chksum+0x1a>

0800e1a4 <memcpy.isra.0>:
 800e1a4:	3801      	subs	r0, #1
 800e1a6:	440a      	add	r2, r1
 800e1a8:	4291      	cmp	r1, r2
 800e1aa:	d100      	bne.n	800e1ae <memcpy.isra.0+0xa>
 800e1ac:	4770      	bx	lr
 800e1ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e1b2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e1b6:	e7f7      	b.n	800e1a8 <memcpy.isra.0+0x4>

0800e1b8 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e1b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1bc:	4603      	mov	r3, r0
 800e1be:	7800      	ldrb	r0, [r0, #0]
 800e1c0:	287b      	cmp	r0, #123	; 0x7b
 800e1c2:	f040 80a2 	bne.w	800e30a <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e1c6:	b17a      	cbz	r2, 800e1e8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e1c8:	2401      	movs	r4, #1
 800e1ca:	461e      	mov	r6, r3
 800e1cc:	4620      	mov	r0, r4
 800e1ce:	2a00      	cmp	r2, #0
 800e1d0:	bf0c      	ite	eq
 800e1d2:	f04f 0c0a 	moveq.w	ip, #10
 800e1d6:	f04f 0c00 	movne.w	ip, #0
 800e1da:	273d      	movs	r7, #61	; 0x3d
 800e1dc:	42a1      	cmp	r1, r4
 800e1de:	d850      	bhi.n	800e282 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e1e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1e4:	463c      	mov	r4, r7
 800e1e6:	e7f2      	b.n	800e1ce <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e1e8:	2023      	movs	r0, #35	; 0x23
 800e1ea:	f803 0b01 	strb.w	r0, [r3], #1
 800e1ee:	461c      	mov	r4, r3
 800e1f0:	2701      	movs	r7, #1
 800e1f2:	42b9      	cmp	r1, r7
 800e1f4:	d811      	bhi.n	800e21a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e1f6:	2001      	movs	r0, #1
 800e1f8:	461e      	mov	r6, r3
 800e1fa:	230a      	movs	r3, #10
 800e1fc:	4625      	mov	r5, r4
 800e1fe:	f806 3b01 	strb.w	r3, [r6], #1
 800e202:	3001      	adds	r0, #1
 800e204:	462b      	mov	r3, r5
 800e206:	781c      	ldrb	r4, [r3, #0]
 800e208:	3501      	adds	r5, #1
 800e20a:	2c7b      	cmp	r4, #123	; 0x7b
 800e20c:	d0ea      	beq.n	800e1e4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e20e:	42b9      	cmp	r1, r7
 800e210:	f107 0401 	add.w	r4, r7, #1
 800e214:	d9db      	bls.n	800e1ce <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e216:	4627      	mov	r7, r4
 800e218:	e7f4      	b.n	800e204 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e21a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e21e:	2822      	cmp	r0, #34	; 0x22
 800e220:	d119      	bne.n	800e256 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e222:	46a4      	mov	ip, r4
 800e224:	461d      	mov	r5, r3
 800e226:	2601      	movs	r6, #1
 800e228:	f89c e000 	ldrb.w	lr, [ip]
 800e22c:	4664      	mov	r4, ip
 800e22e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e232:	462b      	mov	r3, r5
 800e234:	4630      	mov	r0, r6
 800e236:	f10c 0c01 	add.w	ip, ip, #1
 800e23a:	f105 0501 	add.w	r5, r5, #1
 800e23e:	f106 0601 	add.w	r6, r6, #1
 800e242:	d0d9      	beq.n	800e1f8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e244:	3701      	adds	r7, #1
 800e246:	42b9      	cmp	r1, r7
 800e248:	4664      	mov	r4, ip
 800e24a:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e24e:	d8eb      	bhi.n	800e228 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e250:	4630      	mov	r0, r6
 800e252:	462b      	mov	r3, r5
 800e254:	e7d0      	b.n	800e1f8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e256:	3701      	adds	r7, #1
 800e258:	e7cb      	b.n	800e1f2 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e25a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e25e:	d110      	bne.n	800e282 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e260:	eba0 0803 	sub.w	r8, r0, r3
 800e264:	461a      	mov	r2, r3
 800e266:	eb08 0003 	add.w	r0, r8, r3
 800e26a:	f813 eb01 	ldrb.w	lr, [r3], #1
 800e26e:	1c65      	adds	r5, r4, #1
 800e270:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e274:	d04c      	beq.n	800e310 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800e276:	42a1      	cmp	r1, r4
 800e278:	d911      	bls.n	800e29e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e27a:	462c      	mov	r4, r5
 800e27c:	f806 eb01 	strb.w	lr, [r6], #1
 800e280:	e7f0      	b.n	800e264 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e282:	42a1      	cmp	r1, r4
 800e284:	461d      	mov	r5, r3
 800e286:	f893 e000 	ldrb.w	lr, [r3]
 800e28a:	f104 0401 	add.w	r4, r4, #1
 800e28e:	f103 0301 	add.w	r3, r3, #1
 800e292:	d8e2      	bhi.n	800e25a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e294:	462b      	mov	r3, r5
 800e296:	e7e3      	b.n	800e260 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800e298:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800e29c:	d009      	beq.n	800e2b2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e29e:	42a9      	cmp	r1, r5
 800e2a0:	4614      	mov	r4, r2
 800e2a2:	f892 e000 	ldrb.w	lr, [r2]
 800e2a6:	f105 0501 	add.w	r5, r5, #1
 800e2aa:	f102 0201 	add.w	r2, r2, #1
 800e2ae:	d8f3      	bhi.n	800e298 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800e2b0:	4622      	mov	r2, r4
 800e2b2:	7814      	ldrb	r4, [r2, #0]
 800e2b4:	4696      	mov	lr, r2
 800e2b6:	2c2f      	cmp	r4, #47	; 0x2f
 800e2b8:	462b      	mov	r3, r5
 800e2ba:	f102 0201 	add.w	r2, r2, #1
 800e2be:	f105 0501 	add.w	r5, r5, #1
 800e2c2:	d81a      	bhi.n	800e2fa <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800e2c4:	4299      	cmp	r1, r3
 800e2c6:	d8f4      	bhi.n	800e2b2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e2c8:	2c22      	cmp	r4, #34	; 0x22
 800e2ca:	bf08      	it	eq
 800e2cc:	4696      	moveq	lr, r2
 800e2ce:	4673      	mov	r3, lr
 800e2d0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e2d4:	1c6c      	adds	r4, r5, #1
 800e2d6:	2a22      	cmp	r2, #34	; 0x22
 800e2d8:	d011      	beq.n	800e2fe <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2da:	2a2c      	cmp	r2, #44	; 0x2c
 800e2dc:	d00f      	beq.n	800e2fe <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2de:	2a7d      	cmp	r2, #125	; 0x7d
 800e2e0:	d00d      	beq.n	800e2fe <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2e2:	42a9      	cmp	r1, r5
 800e2e4:	d90f      	bls.n	800e306 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800e2e6:	f1a2 0520 	sub.w	r5, r2, #32
 800e2ea:	2d5a      	cmp	r5, #90	; 0x5a
 800e2ec:	d803      	bhi.n	800e2f6 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800e2ee:	469e      	mov	lr, r3
 800e2f0:	f806 2b01 	strb.w	r2, [r6], #1
 800e2f4:	3001      	adds	r0, #1
 800e2f6:	4625      	mov	r5, r4
 800e2f8:	e7e9      	b.n	800e2ce <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e2fa:	461d      	mov	r5, r3
 800e2fc:	e7e7      	b.n	800e2ce <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e2fe:	462c      	mov	r4, r5
 800e300:	f806 cb01 	strb.w	ip, [r6], #1
 800e304:	3001      	adds	r0, #1
 800e306:	3401      	adds	r4, #1
 800e308:	e768      	b.n	800e1dc <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e30a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e30e:	e767      	b.n	800e1e0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800e310:	4625      	mov	r5, r4
 800e312:	f806 7b01 	strb.w	r7, [r6], #1
 800e316:	3001      	adds	r0, #1
 800e318:	e7c1      	b.n	800e29e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800e31c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e31c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e320:	6002      	str	r2, [r0, #0]
 800e322:	4614      	mov	r4, r2
 800e324:	2200      	movs	r2, #0
 800e326:	80c2      	strh	r2, [r0, #6]
 800e328:	4a1c      	ldr	r2, [pc, #112]	; (800e39c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e32a:	4606      	mov	r6, r0
 800e32c:	7812      	ldrb	r2, [r2, #0]
 800e32e:	8083      	strh	r3, [r0, #4]
 800e330:	f002 0201 	and.w	r2, r2, #1
 800e334:	7202      	strb	r2, [r0, #8]
 800e336:	4608      	mov	r0, r1
 800e338:	4605      	mov	r5, r0
 800e33a:	782f      	ldrb	r7, [r5, #0]
 800e33c:	3001      	adds	r0, #1
 800e33e:	2f00      	cmp	r7, #0
 800e340:	d1fa      	bne.n	800e338 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e342:	1a6d      	subs	r5, r5, r1
 800e344:	b29b      	uxth	r3, r3
 800e346:	b1d2      	cbz	r2, 800e37e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e348:	1d2f      	adds	r7, r5, #4
 800e34a:	429f      	cmp	r7, r3
 800e34c:	d814      	bhi.n	800e378 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e34e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e352:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e356:	462a      	mov	r2, r5
 800e358:	f884 8000 	strb.w	r8, [r4]
 800e35c:	f884 9001 	strb.w	r9, [r4, #1]
 800e360:	1ca0      	adds	r0, r4, #2
 800e362:	f000 fe4a 	bl	800effa <memmove>
 800e366:	223a      	movs	r2, #58	; 0x3a
 800e368:	1963      	adds	r3, r4, r5
 800e36a:	3505      	adds	r5, #5
 800e36c:	f883 9002 	strb.w	r9, [r3, #2]
 800e370:	70da      	strb	r2, [r3, #3]
 800e372:	80f5      	strh	r5, [r6, #6]
 800e374:	f804 8007 	strb.w	r8, [r4, r7]
 800e378:	4630      	mov	r0, r6
 800e37a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e37e:	1caf      	adds	r7, r5, #2
 800e380:	429f      	cmp	r7, r3
 800e382:	d8f9      	bhi.n	800e378 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e384:	4620      	mov	r0, r4
 800e386:	2323      	movs	r3, #35	; 0x23
 800e388:	462a      	mov	r2, r5
 800e38a:	f800 3b01 	strb.w	r3, [r0], #1
 800e38e:	f000 fe34 	bl	800effa <memmove>
 800e392:	230a      	movs	r3, #10
 800e394:	442c      	add	r4, r5
 800e396:	7063      	strb	r3, [r4, #1]
 800e398:	80f7      	strh	r7, [r6, #6]
 800e39a:	e7ed      	b.n	800e378 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e39c:	20009fee 	andcs	r9, r0, lr, ror #31

0800e3a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e3a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e3a2:	469c      	mov	ip, r3
 800e3a4:	8885      	ldrh	r5, [r0, #4]
 800e3a6:	88c3      	ldrh	r3, [r0, #6]
 800e3a8:	b085      	sub	sp, #20
 800e3aa:	42ab      	cmp	r3, r5
 800e3ac:	d302      	bcc.n	800e3b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e3ae:	2000      	movs	r0, #0
 800e3b0:	b005      	add	sp, #20
 800e3b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e3b4:	4604      	mov	r4, r0
 800e3b6:	6800      	ldr	r0, [r0, #0]
 800e3b8:	1aed      	subs	r5, r5, r3
 800e3ba:	4418      	add	r0, r3
 800e3bc:	b2d6      	uxtb	r6, r2
 800e3be:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e3c2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e3c6:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e3ca:	0e12      	lsrs	r2, r2, #24
 800e3cc:	f1bc 0f00 	cmp.w	ip, #0
 800e3d0:	d109      	bne.n	800e3e6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e3d2:	f1be 0f00 	cmp.w	lr, #0
 800e3d6:	d109      	bne.n	800e3ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e3d8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3dc:	e9cd 6700 	strd	r6, r7, [sp]
 800e3e0:	460b      	mov	r3, r1
 800e3e2:	4a0e      	ldr	r2, [pc, #56]	; (800e41c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e3e4:	e008      	b.n	800e3f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e3e6:	f1be 0f00 	cmp.w	lr, #0
 800e3ea:	d00f      	beq.n	800e40c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e3ec:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3f0:	460b      	mov	r3, r1
 800e3f2:	e9cd 6700 	strd	r6, r7, [sp]
 800e3f6:	4a0a      	ldr	r2, [pc, #40]	; (800e420 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e3f8:	4629      	mov	r1, r5
 800e3fa:	f7fa fa2f 	bl	800885c <snprintf>
 800e3fe:	4285      	cmp	r5, r0
 800e400:	dbd5      	blt.n	800e3ae <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e402:	88e3      	ldrh	r3, [r4, #6]
 800e404:	4403      	add	r3, r0
 800e406:	80e3      	strh	r3, [r4, #6]
 800e408:	2001      	movs	r0, #1
 800e40a:	e7d1      	b.n	800e3b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e40c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e410:	e9cd 6700 	strd	r6, r7, [sp]
 800e414:	460b      	mov	r3, r1
 800e416:	4a03      	ldr	r2, [pc, #12]	; (800e424 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e418:	e7ee      	b.n	800e3f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e41a:	bf00      	nop
 800e41c:	080126b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp}
 800e420:	080126a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, sp}
 800e424:	080126ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, sl, sp}

0800e428 <PropertiesBuilder::AddComment(char const*)>:
 800e428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e42a:	7a06      	ldrb	r6, [r0, #8]
 800e42c:	b996      	cbnz	r6, 800e454 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e42e:	4604      	mov	r4, r0
 800e430:	88c0      	ldrh	r0, [r0, #6]
 800e432:	88a5      	ldrh	r5, [r4, #4]
 800e434:	42a8      	cmp	r0, r5
 800e436:	d20d      	bcs.n	800e454 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e438:	6827      	ldr	r7, [r4, #0]
 800e43a:	1a2d      	subs	r5, r5, r0
 800e43c:	460b      	mov	r3, r1
 800e43e:	4a06      	ldr	r2, [pc, #24]	; (800e458 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800e440:	4629      	mov	r1, r5
 800e442:	4438      	add	r0, r7
 800e444:	f7fa fa0a 	bl	800885c <snprintf>
 800e448:	4285      	cmp	r5, r0
 800e44a:	bfa1      	itttt	ge
 800e44c:	2601      	movge	r6, #1
 800e44e:	88e3      	ldrhge	r3, [r4, #6]
 800e450:	18c0      	addge	r0, r0, r3
 800e452:	80e0      	strhge	r0, [r4, #6]
 800e454:	4630      	mov	r0, r6
 800e456:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e458:	080126ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp}

0800e45c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800e45c:	e9c0 1200 	strd	r1, r2, [r0]
 800e460:	4770      	bx	lr

0800e462 <ReadConfigFile::~ReadConfigFile()>:
 800e462:	4770      	bx	lr

0800e464 <ReadConfigFile::Read(char const*, unsigned int)>:
 800e464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e468:	4606      	mov	r6, r0
 800e46a:	460d      	mov	r5, r1
 800e46c:	4614      	mov	r4, r2
 800e46e:	f04f 0800 	mov.w	r8, #0
 800e472:	b0a0      	sub	sp, #128	; 0x80
 800e474:	b33c      	cbz	r4, 800e4c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e476:	466b      	mov	r3, sp
 800e478:	462a      	mov	r2, r5
 800e47a:	4619      	mov	r1, r3
 800e47c:	e007      	b.n	800e48e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800e47e:	f803 7b01 	strb.w	r7, [r3], #1
 800e482:	1a58      	subs	r0, r3, r1
 800e484:	287f      	cmp	r0, #127	; 0x7f
 800e486:	4615      	mov	r5, r2
 800e488:	dc1d      	bgt.n	800e4c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e48a:	3c01      	subs	r4, #1
 800e48c:	d00f      	beq.n	800e4ae <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e48e:	7817      	ldrb	r7, [r2, #0]
 800e490:	4610      	mov	r0, r2
 800e492:	2f0d      	cmp	r7, #13
 800e494:	f102 0201 	add.w	r2, r2, #1
 800e498:	d001      	beq.n	800e49e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e49a:	2f0a      	cmp	r7, #10
 800e49c:	d1ef      	bne.n	800e47e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800e49e:	4605      	mov	r5, r0
 800e4a0:	b12c      	cbz	r4, 800e4ae <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e4a2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e4a6:	2a0d      	cmp	r2, #13
 800e4a8:	d00b      	beq.n	800e4c2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e4aa:	2a0a      	cmp	r2, #10
 800e4ac:	d009      	beq.n	800e4c2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e4ae:	f89d 2000 	ldrb.w	r2, [sp]
 800e4b2:	2a60      	cmp	r2, #96	; 0x60
 800e4b4:	d9de      	bls.n	800e474 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e4b6:	f883 8000 	strb.w	r8, [r3]
 800e4ba:	e9d6 3000 	ldrd	r3, r0, [r6]
 800e4be:	4798      	blx	r3
 800e4c0:	e7d8      	b.n	800e474 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e4c2:	3c01      	subs	r4, #1
 800e4c4:	e7eb      	b.n	800e49e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e4c6:	b020      	add	sp, #128	; 0x80
 800e4c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e4cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800e4cc:	b570      	push	{r4, r5, r6, lr}
 800e4ce:	4615      	mov	r5, r2
 800e4d0:	461c      	mov	r4, r3
 800e4d2:	f000 f890 	bl	800e5f6 <Sscan::checkName(char const*, char const*)>
 800e4d6:	b180      	cbz	r0, 800e4fa <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800e4d8:	2100      	movs	r1, #0
 800e4da:	5c43      	ldrb	r3, [r0, r1]
 800e4dc:	6826      	ldr	r6, [r4, #0]
 800e4de:	b28a      	uxth	r2, r1
 800e4e0:	b143      	cbz	r3, 800e4f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e4e2:	42b2      	cmp	r2, r6
 800e4e4:	d303      	bcc.n	800e4ee <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800e4e6:	2b0a      	cmp	r3, #10
 800e4e8:	d004      	beq.n	800e4f4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e4ea:	2002      	movs	r0, #2
 800e4ec:	e004      	b.n	800e4f8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800e4ee:	546b      	strb	r3, [r5, r1]
 800e4f0:	3101      	adds	r1, #1
 800e4f2:	e7f2      	b.n	800e4da <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800e4f4:	2000      	movs	r0, #0
 800e4f6:	6022      	str	r2, [r4, #0]
 800e4f8:	bd70      	pop	{r4, r5, r6, pc}
 800e4fa:	2001      	movs	r0, #1
 800e4fc:	e7fc      	b.n	800e4f8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800e4fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800e4fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e500:	4615      	mov	r5, r2
 800e502:	f000 f878 	bl	800e5f6 <Sscan::checkName(char const*, char const*)>
 800e506:	bb58      	cbnz	r0, 800e560 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800e508:	2001      	movs	r0, #1
 800e50a:	e027      	b.n	800e55c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e50c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800e510:	2b09      	cmp	r3, #9
 800e512:	d822      	bhi.n	800e55a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e514:	4603      	mov	r3, r0
 800e516:	fb0c 2101 	mla	r1, ip, r1, r2
 800e51a:	3930      	subs	r1, #48	; 0x30
 800e51c:	4618      	mov	r0, r3
 800e51e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e522:	2a2e      	cmp	r2, #46	; 0x2e
 800e524:	d115      	bne.n	800e552 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800e526:	29ff      	cmp	r1, #255	; 0xff
 800e528:	d817      	bhi.n	800e55a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e52a:	3401      	adds	r4, #1
 800e52c:	2c03      	cmp	r4, #3
 800e52e:	f806 1b01 	strb.w	r1, [r6], #1
 800e532:	d119      	bne.n	800e568 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800e534:	2400      	movs	r4, #0
 800e536:	260a      	movs	r6, #10
 800e538:	1d1a      	adds	r2, r3, #4
 800e53a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e53e:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800e542:	d115      	bne.n	800e570 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800e544:	2cff      	cmp	r4, #255	; 0xff
 800e546:	d808      	bhi.n	800e55a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e548:	f88d 4007 	strb.w	r4, [sp, #7]
 800e54c:	9b01      	ldr	r3, [sp, #4]
 800e54e:	602b      	str	r3, [r5, #0]
 800e550:	e004      	b.n	800e55c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e552:	2a00      	cmp	r2, #0
 800e554:	d0e7      	beq.n	800e526 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e556:	42b8      	cmp	r0, r7
 800e558:	d1d8      	bne.n	800e50c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800e55a:	2002      	movs	r0, #2
 800e55c:	b003      	add	sp, #12
 800e55e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e560:	2400      	movs	r4, #0
 800e562:	f04f 0c0a 	mov.w	ip, #10
 800e566:	ae01      	add	r6, sp, #4
 800e568:	4603      	mov	r3, r0
 800e56a:	2100      	movs	r1, #0
 800e56c:	1d07      	adds	r7, r0, #4
 800e56e:	e7d5      	b.n	800e51c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800e570:	4293      	cmp	r3, r2
 800e572:	d0f2      	beq.n	800e55a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e574:	3930      	subs	r1, #48	; 0x30
 800e576:	2909      	cmp	r1, #9
 800e578:	d8ef      	bhi.n	800e55a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e57a:	fb06 1404 	mla	r4, r6, r4, r1
 800e57e:	e7dc      	b.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800e580 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800e580:	b538      	push	{r3, r4, r5, lr}
 800e582:	4615      	mov	r5, r2
 800e584:	f000 f837 	bl	800e5f6 <Sscan::checkName(char const*, char const*)>
 800e588:	b1a0      	cbz	r0, 800e5b4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800e58a:	4604      	mov	r4, r0
 800e58c:	2100      	movs	r1, #0
 800e58e:	220a      	movs	r2, #10
 800e590:	7823      	ldrb	r3, [r4, #0]
 800e592:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e596:	2809      	cmp	r0, #9
 800e598:	d80e      	bhi.n	800e5b8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e59a:	fb02 3101 	mla	r1, r2, r1, r3
 800e59e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e5a2:	3930      	subs	r1, #48	; 0x30
 800e5a4:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e5a8:	d1f2      	bne.n	800e590 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800e5aa:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e5ae:	d203      	bcs.n	800e5b8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e5b0:	8029      	strh	r1, [r5, #0]
 800e5b2:	bd38      	pop	{r3, r4, r5, pc}
 800e5b4:	2001      	movs	r0, #1
 800e5b6:	e7fc      	b.n	800e5b2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800e5b8:	2002      	movs	r0, #2
 800e5ba:	e7fa      	b.n	800e5b2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800e5bc <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800e5bc:	b538      	push	{r3, r4, r5, lr}
 800e5be:	4615      	mov	r5, r2
 800e5c0:	f000 f819 	bl	800e5f6 <Sscan::checkName(char const*, char const*)>
 800e5c4:	b198      	cbz	r0, 800e5ee <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800e5c6:	4604      	mov	r4, r0
 800e5c8:	2100      	movs	r1, #0
 800e5ca:	220a      	movs	r2, #10
 800e5cc:	7823      	ldrb	r3, [r4, #0]
 800e5ce:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e5d2:	2809      	cmp	r0, #9
 800e5d4:	d80d      	bhi.n	800e5f2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e5d6:	fb02 3101 	mla	r1, r2, r1, r3
 800e5da:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e5de:	3930      	subs	r1, #48	; 0x30
 800e5e0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e5e4:	d1f2      	bne.n	800e5cc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800e5e6:	29ff      	cmp	r1, #255	; 0xff
 800e5e8:	d803      	bhi.n	800e5f2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e5ea:	7029      	strb	r1, [r5, #0]
 800e5ec:	bd38      	pop	{r3, r4, r5, pc}
 800e5ee:	2001      	movs	r0, #1
 800e5f0:	e7fc      	b.n	800e5ec <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800e5f2:	2002      	movs	r0, #2
 800e5f4:	e7fa      	b.n	800e5ec <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800e5f6 <Sscan::checkName(char const*, char const*)>:
 800e5f6:	4603      	mov	r3, r0
 800e5f8:	b510      	push	{r4, lr}
 800e5fa:	3901      	subs	r1, #1
 800e5fc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e600:	461c      	mov	r4, r3
 800e602:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e606:	b120      	cbz	r0, 800e612 <Sscan::checkName(char const*, char const*)+0x1c>
 800e608:	b10a      	cbz	r2, 800e60e <Sscan::checkName(char const*, char const*)+0x18>
 800e60a:	4290      	cmp	r0, r2
 800e60c:	d0f6      	beq.n	800e5fc <Sscan::checkName(char const*, char const*)+0x6>
 800e60e:	2000      	movs	r0, #0
 800e610:	e006      	b.n	800e620 <Sscan::checkName(char const*, char const*)+0x2a>
 800e612:	2a3d      	cmp	r2, #61	; 0x3d
 800e614:	d104      	bne.n	800e620 <Sscan::checkName(char const*, char const*)+0x2a>
 800e616:	7860      	ldrb	r0, [r4, #1]
 800e618:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800e61c:	d000      	beq.n	800e620 <Sscan::checkName(char const*, char const*)+0x2a>
 800e61e:	1c60      	adds	r0, r4, #1
 800e620:	bd10      	pop	{r4, pc}

0800e622 <LightSet::GetDmxStartAddress()>:
 800e622:	2001      	movs	r0, #1
 800e624:	4770      	bx	lr

0800e626 <LightSet::GetDmxFootprint()>:
 800e626:	f44f 7000 	mov.w	r0, #512	; 0x200
 800e62a:	4770      	bx	lr

0800e62c <LightSet::SetDmxStartAddress(unsigned short)>:
 800e62c:	2000      	movs	r0, #0
 800e62e:	4770      	bx	lr

0800e630 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800e630:	2300      	movs	r3, #0
 800e632:	2001      	movs	r0, #1
 800e634:	7093      	strb	r3, [r2, #2]
 800e636:	8010      	strh	r0, [r2, #0]
 800e638:	4770      	bx	lr

0800e63a <display::timeout::gpio_init()>:
 800e63a:	4770      	bx	lr

0800e63c <display::timeout::gpio_renew()>:
 800e63c:	2000      	movs	r0, #0
 800e63e:	4770      	bx	lr

0800e640 <Display::PrintInfo() [clone .isra.0]>:
 800e640:	b910      	cbnz	r0, 800e648 <Display::PrintInfo() [clone .isra.0]+0x8>
 800e642:	4803      	ldr	r0, [pc, #12]	; (800e650 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800e644:	f000 bd11 	b.w	800f06a <puts>
 800e648:	6803      	ldr	r3, [r0, #0]
 800e64a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e64c:	4718      	bx	r3
 800e64e:	bf00      	nop
 800e650:	080126d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sl, sp}

0800e654 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800e654:	b513      	push	{r0, r1, r4, lr}
 800e656:	4604      	mov	r4, r0
 800e658:	0a13      	lsrs	r3, r2, #8
 800e65a:	7800      	ldrb	r0, [r0, #0]
 800e65c:	f88d 1004 	strb.w	r1, [sp, #4]
 800e660:	f88d 3005 	strb.w	r3, [sp, #5]
 800e664:	f88d 2006 	strb.w	r2, [sp, #6]
 800e668:	f001 fc5e 	bl	800ff28 <gd32_i2c_set_address>
 800e66c:	6860      	ldr	r0, [r4, #4]
 800e66e:	f001 fc53 	bl	800ff18 <gd32_i2c_set_baudrate>
 800e672:	2103      	movs	r1, #3
 800e674:	a801      	add	r0, sp, #4
 800e676:	f001 fc5d 	bl	800ff34 <gd32_i2c_write>
 800e67a:	b002      	add	sp, #8
 800e67c:	bd10      	pop	{r4, pc}

0800e67e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800e67e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e680:	460d      	mov	r5, r1
 800e682:	4604      	mov	r4, r0
 800e684:	f001 fc50 	bl	800ff28 <gd32_i2c_set_address>
 800e688:	4628      	mov	r0, r5
 800e68a:	f001 fc45 	bl	800ff18 <gd32_i2c_set_baudrate>
 800e68e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e692:	2b07      	cmp	r3, #7
 800e694:	d902      	bls.n	800e69c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800e696:	3c50      	subs	r4, #80	; 0x50
 800e698:	2c0f      	cmp	r4, #15
 800e69a:	d809      	bhi.n	800e6b0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800e69c:	2101      	movs	r1, #1
 800e69e:	f10d 0007 	add.w	r0, sp, #7
 800e6a2:	f001 fcad 	bl	8010000 <gd32_i2c_read>
 800e6a6:	fab0 f080 	clz	r0, r0
 800e6aa:	0940      	lsrs	r0, r0, #5
 800e6ac:	b003      	add	sp, #12
 800e6ae:	bd30      	pop	{r4, r5, pc}
 800e6b0:	2100      	movs	r1, #0
 800e6b2:	4608      	mov	r0, r1
 800e6b4:	f001 fc3e 	bl	800ff34 <gd32_i2c_write>
 800e6b8:	e7f5      	b.n	800e6a6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800e6ba <Display::Detect7Segment()>:
 800e6ba:	b538      	push	{r3, r4, r5, lr}
 800e6bc:	68c1      	ldr	r1, [r0, #12]
 800e6be:	4604      	mov	r4, r0
 800e6c0:	7a00      	ldrb	r0, [r0, #8]
 800e6c2:	f7ff ffdc 	bl	800e67e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800e6c6:	7460      	strb	r0, [r4, #17]
 800e6c8:	b170      	cbz	r0, 800e6e8 <Display::Detect7Segment()+0x2e>
 800e6ca:	2200      	movs	r2, #0
 800e6cc:	f104 0508 	add.w	r5, r4, #8
 800e6d0:	4611      	mov	r1, r2
 800e6d2:	4628      	mov	r0, r5
 800e6d4:	f7ff ffbe 	bl	800e654 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e6d8:	7c63      	ldrb	r3, [r4, #17]
 800e6da:	b12b      	cbz	r3, 800e6e8 <Display::Detect7Segment()+0x2e>
 800e6dc:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800e6e0:	2112      	movs	r1, #18
 800e6e2:	4628      	mov	r0, r5
 800e6e4:	f7ff ffb6 	bl	800e654 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e6e8:	bd38      	pop	{r3, r4, r5, pc}

0800e6ea <Display::Detect(display::Type)>:
 800e6ea:	2902      	cmp	r1, #2
 800e6ec:	b538      	push	{r3, r4, r5, lr}
 800e6ee:	4604      	mov	r4, r0
 800e6f0:	d014      	beq.n	800e71c <Display::Detect(display::Type)+0x32>
 800e6f2:	2904      	cmp	r1, #4
 800e6f4:	d01b      	beq.n	800e72e <Display::Detect(display::Type)+0x44>
 800e6f6:	69a0      	ldr	r0, [r4, #24]
 800e6f8:	b168      	cbz	r0, 800e716 <Display::Detect(display::Type)+0x2c>
 800e6fa:	6803      	ldr	r3, [r0, #0]
 800e6fc:	689b      	ldr	r3, [r3, #8]
 800e6fe:	4798      	blx	r3
 800e700:	4603      	mov	r3, r0
 800e702:	69a0      	ldr	r0, [r4, #24]
 800e704:	b9ab      	cbnz	r3, 800e732 <Display::Detect(display::Type)+0x48>
 800e706:	b110      	cbz	r0, 800e70e <Display::Detect(display::Type)+0x24>
 800e708:	6803      	ldr	r3, [r0, #0]
 800e70a:	685b      	ldr	r3, [r3, #4]
 800e70c:	4798      	blx	r3
 800e70e:	2300      	movs	r3, #0
 800e710:	61a3      	str	r3, [r4, #24]
 800e712:	2304      	movs	r3, #4
 800e714:	6023      	str	r3, [r4, #0]
 800e716:	2300      	movs	r3, #0
 800e718:	6163      	str	r3, [r4, #20]
 800e71a:	e010      	b.n	800e73e <Display::Detect(display::Type)+0x54>
 800e71c:	2018      	movs	r0, #24
 800e71e:	f000 fbad 	bl	800ee7c <operator new(unsigned int)>
 800e722:	4605      	mov	r5, r0
 800e724:	2100      	movs	r1, #0
 800e726:	f000 f89d 	bl	800e864 <Ssd1306::Ssd1306(TOledPanel)>
 800e72a:	61a5      	str	r5, [r4, #24]
 800e72c:	e7e3      	b.n	800e6f6 <Display::Detect(display::Type)+0xc>
 800e72e:	6001      	str	r1, [r0, #0]
 800e730:	e7e1      	b.n	800e6f6 <Display::Detect(display::Type)+0xc>
 800e732:	6803      	ldr	r3, [r0, #0]
 800e734:	68db      	ldr	r3, [r3, #12]
 800e736:	4798      	blx	r3
 800e738:	69a3      	ldr	r3, [r4, #24]
 800e73a:	2b00      	cmp	r3, #0
 800e73c:	d0eb      	beq.n	800e716 <Display::Detect(display::Type)+0x2c>
 800e73e:	bd38      	pop	{r3, r4, r5, pc}

0800e740 <Display::Display()>:
 800e740:	2304      	movs	r3, #4
 800e742:	b510      	push	{r4, lr}
 800e744:	6003      	str	r3, [r0, #0]
 800e746:	4b0f      	ldr	r3, [pc, #60]	; (800e784 <Display::Display()+0x44>)
 800e748:	4604      	mov	r4, r0
 800e74a:	681b      	ldr	r3, [r3, #0]
 800e74c:	4a0e      	ldr	r2, [pc, #56]	; (800e788 <Display::Display()+0x48>)
 800e74e:	6043      	str	r3, [r0, #4]
 800e750:	2321      	movs	r3, #33	; 0x21
 800e752:	7203      	strb	r3, [r0, #8]
 800e754:	4b0d      	ldr	r3, [pc, #52]	; (800e78c <Display::Display()+0x4c>)
 800e756:	2102      	movs	r1, #2
 800e758:	60c3      	str	r3, [r0, #12]
 800e75a:	2300      	movs	r3, #0
 800e75c:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800e760:	8203      	strh	r3, [r0, #16]
 800e762:	4b0b      	ldr	r3, [pc, #44]	; (800e790 <Display::Display()+0x50>)
 800e764:	6018      	str	r0, [r3, #0]
 800e766:	f7ff ffc0 	bl	800e6ea <Display::Detect(display::Type)>
 800e76a:	4620      	mov	r0, r4
 800e76c:	f7ff ffa5 	bl	800e6ba <Display::Detect7Segment()>
 800e770:	69a3      	ldr	r3, [r4, #24]
 800e772:	b10b      	cbz	r3, 800e778 <Display::Display()+0x38>
 800e774:	f7ff ff61 	bl	800e63a <display::timeout::gpio_init()>
 800e778:	69a0      	ldr	r0, [r4, #24]
 800e77a:	f7ff ff61 	bl	800e640 <Display::PrintInfo() [clone .isra.0]>
 800e77e:	4620      	mov	r0, r4
 800e780:	bd10      	pop	{r4, pc}
 800e782:	bf00      	nop
 800e784:	2000a0f4 	strdcs	sl, [r0], -r4
 800e788:	000493e0 	andeq	r9, r4, r0, ror #7
 800e78c:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e790:	20009ff0 	strdcs	r9, [r0], -r0

0800e794 <Ssd1306::~Ssd1306()>:
 800e794:	4770      	bx	lr

0800e796 <Ssd1306::SetCursor(unsigned int)>:
 800e796:	4770      	bx	lr

0800e798 <Ssd1306::PrintInfo()>:
 800e798:	b410      	push	{r4}
 800e79a:	4906      	ldr	r1, [pc, #24]	; (800e7b4 <Ssd1306::PrintInfo()+0x1c>)
 800e79c:	7c44      	ldrb	r4, [r0, #17]
 800e79e:	7903      	ldrb	r3, [r0, #4]
 800e7a0:	7942      	ldrb	r2, [r0, #5]
 800e7a2:	4805      	ldr	r0, [pc, #20]	; (800e7b8 <Ssd1306::PrintInfo()+0x20>)
 800e7a4:	2c00      	cmp	r4, #0
 800e7a6:	bf08      	it	eq
 800e7a8:	4601      	moveq	r1, r0
 800e7aa:	4804      	ldr	r0, [pc, #16]	; (800e7bc <Ssd1306::PrintInfo()+0x24>)
 800e7ac:	bc10      	pop	{r4}
 800e7ae:	f7fa b845 	b.w	800883c <printf>
 800e7b2:	bf00      	nop
 800e7b4:	080126e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, sl, sp}
 800e7b8:	080126ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, sp}
 800e7bc:	080126f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sl, sp}

0800e7c0 <Ssd1306::~Ssd1306()>:
 800e7c0:	b510      	push	{r4, lr}
 800e7c2:	4604      	mov	r4, r0
 800e7c4:	f000 fb56 	bl	800ee74 <operator delete(void*)>
 800e7c8:	4620      	mov	r0, r4
 800e7ca:	bd10      	pop	{r4, pc}

0800e7cc <HAL_I2C::Setup()>:
 800e7cc:	b510      	push	{r4, lr}
 800e7ce:	4604      	mov	r4, r0
 800e7d0:	7800      	ldrb	r0, [r0, #0]
 800e7d2:	f001 fba9 	bl	800ff28 <gd32_i2c_set_address>
 800e7d6:	6860      	ldr	r0, [r4, #4]
 800e7d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e7dc:	f001 bb9c 	b.w	800ff18 <gd32_i2c_set_baudrate>

0800e7e0 <Ssd1306::PutChar(int)>:
 800e7e0:	b510      	push	{r4, lr}
 800e7e2:	f1a1 0420 	sub.w	r4, r1, #32
 800e7e6:	2c5f      	cmp	r4, #95	; 0x5f
 800e7e8:	bf88      	it	hi
 800e7ea:	2400      	movhi	r4, #0
 800e7ec:	3008      	adds	r0, #8
 800e7ee:	f7ff ffed 	bl	800e7cc <HAL_I2C::Setup()>
 800e7f2:	4804      	ldr	r0, [pc, #16]	; (800e804 <Ssd1306::PutChar(int)+0x24>)
 800e7f4:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800e7f8:	4420      	add	r0, r4
 800e7fa:	2107      	movs	r1, #7
 800e7fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e800:	f001 bb98 	b.w	800ff34 <gd32_i2c_write>
 800e804:	08012704 	stmdaeq	r1, {r2, r8, r9, sl, sp}

0800e808 <Ssd1306::PutString(char const*)>:
 800e808:	b538      	push	{r3, r4, r5, lr}
 800e80a:	4605      	mov	r5, r0
 800e80c:	1e4c      	subs	r4, r1, #1
 800e80e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e812:	b901      	cbnz	r1, 800e816 <Ssd1306::PutString(char const*)+0xe>
 800e814:	bd38      	pop	{r3, r4, r5, pc}
 800e816:	4628      	mov	r0, r5
 800e818:	f7ff ffe2 	bl	800e7e0 <Ssd1306::PutChar(int)>
 800e81c:	e7f7      	b.n	800e80e <Ssd1306::PutString(char const*)+0x6>

0800e81e <Ssd1306::Text(char const*, unsigned int)>:
 800e81e:	b570      	push	{r4, r5, r6, lr}
 800e820:	7903      	ldrb	r3, [r0, #4]
 800e822:	4605      	mov	r5, r0
 800e824:	460c      	mov	r4, r1
 800e826:	4293      	cmp	r3, r2
 800e828:	bf94      	ite	ls
 800e82a:	18ce      	addls	r6, r1, r3
 800e82c:	188e      	addhi	r6, r1, r2
 800e82e:	42b4      	cmp	r4, r6
 800e830:	d100      	bne.n	800e834 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800e832:	bd70      	pop	{r4, r5, r6, pc}
 800e834:	4628      	mov	r0, r5
 800e836:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e83a:	f7ff ffd1 	bl	800e7e0 <Ssd1306::PutChar(int)>
 800e83e:	e7f6      	b.n	800e82e <Ssd1306::Text(char const*, unsigned int)+0x10>

0800e840 <Ssd1306::InitMembers()>:
 800e840:	7c03      	ldrb	r3, [r0, #16]
 800e842:	b14b      	cbz	r3, 800e858 <Ssd1306::InitMembers()+0x18>
 800e844:	3b01      	subs	r3, #1
 800e846:	2b01      	cmp	r3, #1
 800e848:	d909      	bls.n	800e85e <Ssd1306::InitMembers()+0x1e>
 800e84a:	2308      	movs	r3, #8
 800e84c:	2204      	movs	r2, #4
 800e84e:	2115      	movs	r1, #21
 800e850:	7143      	strb	r3, [r0, #5]
 800e852:	7101      	strb	r1, [r0, #4]
 800e854:	6142      	str	r2, [r0, #20]
 800e856:	4770      	bx	lr
 800e858:	2308      	movs	r3, #8
 800e85a:	461a      	mov	r2, r3
 800e85c:	e7f7      	b.n	800e84e <Ssd1306::InitMembers()+0xe>
 800e85e:	2304      	movs	r3, #4
 800e860:	e7fb      	b.n	800e85a <Ssd1306::InitMembers()+0x1a>
	...

0800e864 <Ssd1306::Ssd1306(TOledPanel)>:
 800e864:	4a08      	ldr	r2, [pc, #32]	; (800e888 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800e866:	b508      	push	{r3, lr}
 800e868:	6002      	str	r2, [r0, #0]
 800e86a:	227f      	movs	r2, #127	; 0x7f
 800e86c:	80c2      	strh	r2, [r0, #6]
 800e86e:	223c      	movs	r2, #60	; 0x3c
 800e870:	7202      	strb	r2, [r0, #8]
 800e872:	4a06      	ldr	r2, [pc, #24]	; (800e88c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800e874:	7401      	strb	r1, [r0, #16]
 800e876:	60c2      	str	r2, [r0, #12]
 800e878:	2200      	movs	r2, #0
 800e87a:	7442      	strb	r2, [r0, #17]
 800e87c:	4a04      	ldr	r2, [pc, #16]	; (800e890 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800e87e:	6010      	str	r0, [r2, #0]
 800e880:	f7ff ffde 	bl	800e840 <Ssd1306::InitMembers()>
 800e884:	bd08      	pop	{r3, pc}
 800e886:	bf00      	nop
 800e888:	080129dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, sp}
 800e88c:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e890:	2000a07c 	andcs	sl, r0, ip, ror r0

0800e894 <Ssd1306::SendCommand(unsigned char)>:
 800e894:	2300      	movs	r3, #0
 800e896:	b507      	push	{r0, r1, r2, lr}
 800e898:	3008      	adds	r0, #8
 800e89a:	f88d 3004 	strb.w	r3, [sp, #4]
 800e89e:	f88d 1005 	strb.w	r1, [sp, #5]
 800e8a2:	f7ff ff93 	bl	800e7cc <HAL_I2C::Setup()>
 800e8a6:	2102      	movs	r1, #2
 800e8a8:	a801      	add	r0, sp, #4
 800e8aa:	f001 fb43 	bl	800ff34 <gd32_i2c_write>
 800e8ae:	b003      	add	sp, #12
 800e8b0:	f85d fb04 	ldr.w	pc, [sp], #4

0800e8b4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800e8b4:	2914      	cmp	r1, #20
 800e8b6:	b570      	push	{r4, r5, r6, lr}
 800e8b8:	4605      	mov	r5, r0
 800e8ba:	4616      	mov	r6, r2
 800e8bc:	d81c      	bhi.n	800e8f8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e8be:	7943      	ldrb	r3, [r0, #5]
 800e8c0:	4293      	cmp	r3, r2
 800e8c2:	d919      	bls.n	800e8f8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e8c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e8c8:	7c43      	ldrb	r3, [r0, #17]
 800e8ca:	004c      	lsls	r4, r1, #1
 800e8cc:	b2e4      	uxtb	r4, r4
 800e8ce:	b10b      	cbz	r3, 800e8d4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800e8d0:	3404      	adds	r4, #4
 800e8d2:	b2e4      	uxtb	r4, r4
 800e8d4:	4628      	mov	r0, r5
 800e8d6:	f004 010e 	and.w	r1, r4, #14
 800e8da:	f7ff ffdb 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e8de:	0921      	lsrs	r1, r4, #4
 800e8e0:	4628      	mov	r0, r5
 800e8e2:	f041 0110 	orr.w	r1, r1, #16
 800e8e6:	f7ff ffd5 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e8ea:	4628      	mov	r0, r5
 800e8ec:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800e8f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e8f4:	f7ff bfce 	b.w	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e8f8:	bd70      	pop	{r4, r5, r6, pc}

0800e8fa <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800e8fa:	b570      	push	{r4, r5, r6, lr}
 800e8fc:	461e      	mov	r6, r3
 800e8fe:	7943      	ldrb	r3, [r0, #5]
 800e900:	4604      	mov	r4, r0
 800e902:	428b      	cmp	r3, r1
 800e904:	4615      	mov	r5, r2
 800e906:	d30b      	bcc.n	800e920 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 800e908:	3901      	subs	r1, #1
 800e90a:	b2ca      	uxtb	r2, r1
 800e90c:	2100      	movs	r1, #0
 800e90e:	f7ff ffd1 	bl	800e8b4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e912:	4632      	mov	r2, r6
 800e914:	4629      	mov	r1, r5
 800e916:	4620      	mov	r0, r4
 800e918:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e91c:	f7ff bf7f 	b.w	800e81e <Ssd1306::Text(char const*, unsigned int)>
 800e920:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e924 <Ssd1306::ClearLine(unsigned char)>:
 800e924:	b538      	push	{r3, r4, r5, lr}
 800e926:	7943      	ldrb	r3, [r0, #5]
 800e928:	4605      	mov	r5, r0
 800e92a:	428b      	cmp	r3, r1
 800e92c:	d314      	bcc.n	800e958 <Ssd1306::ClearLine(unsigned char)+0x34>
 800e92e:	3901      	subs	r1, #1
 800e930:	b2cc      	uxtb	r4, r1
 800e932:	4622      	mov	r2, r4
 800e934:	2100      	movs	r1, #0
 800e936:	f7ff ffbd 	bl	800e8b4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e93a:	f105 0008 	add.w	r0, r5, #8
 800e93e:	f7ff ff45 	bl	800e7cc <HAL_I2C::Setup()>
 800e942:	2181      	movs	r1, #129	; 0x81
 800e944:	4805      	ldr	r0, [pc, #20]	; (800e95c <Ssd1306::ClearLine(unsigned char)+0x38>)
 800e946:	f001 faf5 	bl	800ff34 <gd32_i2c_write>
 800e94a:	4622      	mov	r2, r4
 800e94c:	4628      	mov	r0, r5
 800e94e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e952:	2100      	movs	r1, #0
 800e954:	f7ff bfae 	b.w	800e8b4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e958:	bd38      	pop	{r3, r4, r5, pc}
 800e95a:	bf00      	nop
 800e95c:	20009ff4 	strdcs	r9, [r0], -r4

0800e960 <Ssd1306::SetSleep(bool)>:
 800e960:	b111      	cbz	r1, 800e968 <Ssd1306::SetSleep(bool)+0x8>
 800e962:	21ae      	movs	r1, #174	; 0xae
 800e964:	f7ff bf96 	b.w	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e968:	21af      	movs	r1, #175	; 0xaf
 800e96a:	e7fb      	b.n	800e964 <Ssd1306::SetSleep(bool)+0x4>

0800e96c <Ssd1306::SetContrast(unsigned char)>:
 800e96c:	b538      	push	{r3, r4, r5, lr}
 800e96e:	4604      	mov	r4, r0
 800e970:	460d      	mov	r5, r1
 800e972:	7181      	strb	r1, [r0, #6]
 800e974:	2181      	movs	r1, #129	; 0x81
 800e976:	f7ff ff8d 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e97a:	4629      	mov	r1, r5
 800e97c:	4620      	mov	r0, r4
 800e97e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e982:	f7ff bf87 	b.w	800e894 <Ssd1306::SendCommand(unsigned char)>

0800e986 <Ssd1306::SetFlipVertically(bool)>:
 800e986:	b510      	push	{r4, lr}
 800e988:	4604      	mov	r4, r0
 800e98a:	71c1      	strb	r1, [r0, #7]
 800e98c:	b141      	cbz	r1, 800e9a0 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800e98e:	21c0      	movs	r1, #192	; 0xc0
 800e990:	f7ff ff80 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e994:	21a0      	movs	r1, #160	; 0xa0
 800e996:	4620      	mov	r0, r4
 800e998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e99c:	f7ff bf7a 	b.w	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9a0:	21c8      	movs	r1, #200	; 0xc8
 800e9a2:	f7ff ff77 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9a6:	21a1      	movs	r1, #161	; 0xa1
 800e9a8:	e7f5      	b.n	800e996 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800e9ac <Ssd1306::CheckSH1106()>:
 800e9ac:	b530      	push	{r4, r5, lr}
 800e9ae:	4604      	mov	r4, r0
 800e9b0:	b087      	sub	sp, #28
 800e9b2:	2100      	movs	r1, #0
 800e9b4:	f7ff ff6e 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9b8:	2190      	movs	r1, #144	; 0x90
 800e9ba:	4620      	mov	r0, r4
 800e9bc:	f7ff ff6a 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9c0:	21b0      	movs	r1, #176	; 0xb0
 800e9c2:	4620      	mov	r0, r4
 800e9c4:	f7ff ff66 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9c8:	4b22      	ldr	r3, [pc, #136]	; (800ea54 <Ssd1306::CheckSH1106()+0xa8>)
 800e9ca:	f104 0508 	add.w	r5, r4, #8
 800e9ce:	6818      	ldr	r0, [r3, #0]
 800e9d0:	791b      	ldrb	r3, [r3, #4]
 800e9d2:	9002      	str	r0, [sp, #8]
 800e9d4:	4628      	mov	r0, r5
 800e9d6:	f88d 300c 	strb.w	r3, [sp, #12]
 800e9da:	f7ff fef7 	bl	800e7cc <HAL_I2C::Setup()>
 800e9de:	2105      	movs	r1, #5
 800e9e0:	a802      	add	r0, sp, #8
 800e9e2:	f001 faa7 	bl	800ff34 <gd32_i2c_write>
 800e9e6:	2100      	movs	r1, #0
 800e9e8:	4620      	mov	r0, r4
 800e9ea:	f7ff ff53 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9ee:	2190      	movs	r1, #144	; 0x90
 800e9f0:	4620      	mov	r0, r4
 800e9f2:	f7ff ff4f 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9f6:	21b0      	movs	r1, #176	; 0xb0
 800e9f8:	4620      	mov	r0, r4
 800e9fa:	f7ff ff4b 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800e9fe:	2300      	movs	r3, #0
 800ea00:	9304      	str	r3, [sp, #16]
 800ea02:	f88d 3014 	strb.w	r3, [sp, #20]
 800ea06:	2340      	movs	r3, #64	; 0x40
 800ea08:	4628      	mov	r0, r5
 800ea0a:	f88d 3007 	strb.w	r3, [sp, #7]
 800ea0e:	f7ff fedd 	bl	800e7cc <HAL_I2C::Setup()>
 800ea12:	2101      	movs	r1, #1
 800ea14:	f10d 0007 	add.w	r0, sp, #7
 800ea18:	f001 fa8c 	bl	800ff34 <gd32_i2c_write>
 800ea1c:	4628      	mov	r0, r5
 800ea1e:	f7ff fed5 	bl	800e7cc <HAL_I2C::Setup()>
 800ea22:	2105      	movs	r1, #5
 800ea24:	a804      	add	r0, sp, #16
 800ea26:	f001 faeb 	bl	8010000 <gd32_i2c_read>
 800ea2a:	2004      	movs	r0, #4
 800ea2c:	aa02      	add	r2, sp, #8
 800ea2e:	a904      	add	r1, sp, #16
 800ea30:	3801      	subs	r0, #1
 800ea32:	d201      	bcs.n	800ea38 <Ssd1306::CheckSH1106()+0x8c>
 800ea34:	2300      	movs	r3, #0
 800ea36:	e006      	b.n	800ea46 <Ssd1306::CheckSH1106()+0x9a>
 800ea38:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ea3c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800ea40:	42ab      	cmp	r3, r5
 800ea42:	d0f5      	beq.n	800ea30 <Ssd1306::CheckSH1106()+0x84>
 800ea44:	1b5b      	subs	r3, r3, r5
 800ea46:	fab3 f383 	clz	r3, r3
 800ea4a:	095b      	lsrs	r3, r3, #5
 800ea4c:	7463      	strb	r3, [r4, #17]
 800ea4e:	b007      	add	sp, #28
 800ea50:	bd30      	pop	{r4, r5, pc}
 800ea52:	bf00      	nop
 800ea54:	080126fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp}

0800ea58 <Ssd1306::Cls()>:
 800ea58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea5c:	4604      	mov	r4, r0
 800ea5e:	2600      	movs	r6, #0
 800ea60:	7c45      	ldrb	r5, [r0, #17]
 800ea62:	00ad      	lsls	r5, r5, #2
 800ea64:	b2ed      	uxtb	r5, r5
 800ea66:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800ea6a:	f045 0810 	orr.w	r8, r5, #16
 800ea6e:	b2ff      	uxtb	r7, r7
 800ea70:	6963      	ldr	r3, [r4, #20]
 800ea72:	4629      	mov	r1, r5
 800ea74:	42b3      	cmp	r3, r6
 800ea76:	4620      	mov	r0, r4
 800ea78:	d80b      	bhi.n	800ea92 <Ssd1306::Cls()+0x3a>
 800ea7a:	f7ff ff0b 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800ea7e:	4641      	mov	r1, r8
 800ea80:	4620      	mov	r0, r4
 800ea82:	f7ff ff07 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800ea86:	4620      	mov	r0, r4
 800ea88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ea8c:	21b0      	movs	r1, #176	; 0xb0
 800ea8e:	f7ff bf01 	b.w	800e894 <Ssd1306::SendCommand(unsigned char)>
 800ea92:	f7ff feff 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800ea96:	4641      	mov	r1, r8
 800ea98:	4620      	mov	r0, r4
 800ea9a:	f7ff fefb 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800ea9e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800eaa2:	4620      	mov	r0, r4
 800eaa4:	b2c9      	uxtb	r1, r1
 800eaa6:	f7ff fef5 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800eaaa:	7c23      	ldrb	r3, [r4, #16]
 800eaac:	b123      	cbz	r3, 800eab8 <Ssd1306::Cls()+0x60>
 800eaae:	3b01      	subs	r3, #1
 800eab0:	2b01      	cmp	r3, #1
 800eab2:	d901      	bls.n	800eab8 <Ssd1306::Cls()+0x60>
 800eab4:	3601      	adds	r6, #1
 800eab6:	e7db      	b.n	800ea70 <Ssd1306::Cls()+0x18>
 800eab8:	f104 0008 	add.w	r0, r4, #8
 800eabc:	f7ff fe86 	bl	800e7cc <HAL_I2C::Setup()>
 800eac0:	4639      	mov	r1, r7
 800eac2:	4802      	ldr	r0, [pc, #8]	; (800eacc <Ssd1306::Cls()+0x74>)
 800eac4:	f001 fa36 	bl	800ff34 <gd32_i2c_write>
 800eac8:	e7f4      	b.n	800eab4 <Ssd1306::Cls()+0x5c>
 800eaca:	bf00      	nop
 800eacc:	20009ff4 	strdcs	r9, [r0], -r4

0800ead0 <Ssd1306::Start()>:
 800ead0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ead2:	7a04      	ldrb	r4, [r0, #8]
 800ead4:	68c6      	ldr	r6, [r0, #12]
 800ead6:	4605      	mov	r5, r0
 800ead8:	4620      	mov	r0, r4
 800eada:	f001 fa25 	bl	800ff28 <gd32_i2c_set_address>
 800eade:	4630      	mov	r0, r6
 800eae0:	f001 fa1a 	bl	800ff18 <gd32_i2c_set_baudrate>
 800eae4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800eae8:	2b07      	cmp	r3, #7
 800eaea:	d902      	bls.n	800eaf2 <Ssd1306::Start()+0x22>
 800eaec:	3c50      	subs	r4, #80	; 0x50
 800eaee:	2c0f      	cmp	r4, #15
 800eaf0:	d80f      	bhi.n	800eb12 <Ssd1306::Start()+0x42>
 800eaf2:	2101      	movs	r1, #1
 800eaf4:	f10d 0007 	add.w	r0, sp, #7
 800eaf8:	f001 fa82 	bl	8010000 <gd32_i2c_read>
 800eafc:	fab0 f480 	clz	r4, r0
 800eb00:	0964      	lsrs	r4, r4, #5
 800eb02:	b35c      	cbz	r4, 800eb5c <Ssd1306::Start()+0x8c>
 800eb04:	7c2e      	ldrb	r6, [r5, #16]
 800eb06:	b14e      	cbz	r6, 800eb1c <Ssd1306::Start()+0x4c>
 800eb08:	3e01      	subs	r6, #1
 800eb0a:	2e01      	cmp	r6, #1
 800eb0c:	d929      	bls.n	800eb62 <Ssd1306::Start()+0x92>
 800eb0e:	2400      	movs	r4, #0
 800eb10:	e024      	b.n	800eb5c <Ssd1306::Start()+0x8c>
 800eb12:	2100      	movs	r1, #0
 800eb14:	4608      	mov	r0, r1
 800eb16:	f001 fa0d 	bl	800ff34 <gd32_i2c_write>
 800eb1a:	e7ef      	b.n	800eafc <Ssd1306::Start()+0x2c>
 800eb1c:	4f16      	ldr	r7, [pc, #88]	; (800eb78 <Ssd1306::Start()+0xa8>)
 800eb1e:	4628      	mov	r0, r5
 800eb20:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eb24:	3601      	adds	r6, #1
 800eb26:	f7ff feb5 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800eb2a:	2e18      	cmp	r6, #24
 800eb2c:	d1f7      	bne.n	800eb1e <Ssd1306::Start()+0x4e>
 800eb2e:	2300      	movs	r3, #0
 800eb30:	4a12      	ldr	r2, [pc, #72]	; (800eb7c <Ssd1306::Start()+0xac>)
 800eb32:	4618      	mov	r0, r3
 800eb34:	4611      	mov	r1, r2
 800eb36:	3301      	adds	r3, #1
 800eb38:	2b86      	cmp	r3, #134	; 0x86
 800eb3a:	f802 0b01 	strb.w	r0, [r2], #1
 800eb3e:	d1fa      	bne.n	800eb36 <Ssd1306::Start()+0x66>
 800eb40:	2340      	movs	r3, #64	; 0x40
 800eb42:	4628      	mov	r0, r5
 800eb44:	700b      	strb	r3, [r1, #0]
 800eb46:	f7ff ff31 	bl	800e9ac <Ssd1306::CheckSH1106()>
 800eb4a:	4628      	mov	r0, r5
 800eb4c:	f7ff ff84 	bl	800ea58 <Ssd1306::Cls()>
 800eb50:	21af      	movs	r1, #175	; 0xaf
 800eb52:	4628      	mov	r0, r5
 800eb54:	f7ff fe9e 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800eb58:	2301      	movs	r3, #1
 800eb5a:	71eb      	strb	r3, [r5, #7]
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	b003      	add	sp, #12
 800eb60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb62:	2600      	movs	r6, #0
 800eb64:	4f06      	ldr	r7, [pc, #24]	; (800eb80 <Ssd1306::Start()+0xb0>)
 800eb66:	4628      	mov	r0, r5
 800eb68:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eb6c:	3601      	adds	r6, #1
 800eb6e:	f7ff fe91 	bl	800e894 <Ssd1306::SendCommand(unsigned char)>
 800eb72:	2e18      	cmp	r6, #24
 800eb74:	d1f7      	bne.n	800eb66 <Ssd1306::Start()+0x96>
 800eb76:	e7da      	b.n	800eb2e <Ssd1306::Start()+0x5e>
 800eb78:	080129bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, fp, sp}
 800eb7c:	20009ff4 	strdcs	r9, [r0], -r4
 800eb80:	080129a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, sp}

0800eb84 <console_putc>:
 800eb84:	f000 bb74 	b.w	800f270 <uart0_putc>

0800eb88 <console_puts>:
 800eb88:	f000 bb92 	b.w	800f2b0 <uart0_puts>

0800eb8c <console_set_fg_color>:
 800eb8c:	2807      	cmp	r0, #7
 800eb8e:	d810      	bhi.n	800ebb2 <console_set_fg_color+0x26>
 800eb90:	e8df f000 	tbb	[pc, r0]
 800eb94:	0b090704 	bleq	82507ac <__exidx_end+0x23dc9c>
 800eb98:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800eb64 <Ssd1306::Start()+0x94>
 800eb9c:	4806      	ldr	r0, [pc, #24]	; (800ebb8 <console_set_fg_color+0x2c>)
 800eb9e:	f000 bb87 	b.w	800f2b0 <uart0_puts>
 800eba2:	4806      	ldr	r0, [pc, #24]	; (800ebbc <console_set_fg_color+0x30>)
 800eba4:	e7fb      	b.n	800eb9e <console_set_fg_color+0x12>
 800eba6:	4806      	ldr	r0, [pc, #24]	; (800ebc0 <console_set_fg_color+0x34>)
 800eba8:	e7f9      	b.n	800eb9e <console_set_fg_color+0x12>
 800ebaa:	4806      	ldr	r0, [pc, #24]	; (800ebc4 <console_set_fg_color+0x38>)
 800ebac:	e7f7      	b.n	800eb9e <console_set_fg_color+0x12>
 800ebae:	4806      	ldr	r0, [pc, #24]	; (800ebc8 <console_set_fg_color+0x3c>)
 800ebb0:	e7f5      	b.n	800eb9e <console_set_fg_color+0x12>
 800ebb2:	4806      	ldr	r0, [pc, #24]	; (800ebcc <console_set_fg_color+0x40>)
 800ebb4:	e7f3      	b.n	800eb9e <console_set_fg_color+0x12>
 800ebb6:	bf00      	nop
 800ebb8:	08012a1a 	stmdaeq	r1, {r1, r3, r4, r9, fp, sp}
 800ebbc:	08012a20 	stmdaeq	r1, {r5, r9, fp, sp}
 800ebc0:	08012a26 	stmdaeq	r1, {r1, r2, r5, r9, fp, sp}
 800ebc4:	08012a2c 	stmdaeq	r1, {r2, r3, r5, r9, fp, sp}
 800ebc8:	0801100d 	stmdaeq	r1, {r0, r2, r3, ip}
 800ebcc:	08012a32 	stmdaeq	r1, {r1, r4, r5, r9, fp, sp}

0800ebd0 <console_error>:
 800ebd0:	b510      	push	{r4, lr}
 800ebd2:	4604      	mov	r4, r0
 800ebd4:	4805      	ldr	r0, [pc, #20]	; (800ebec <console_error+0x1c>)
 800ebd6:	f000 fb6b 	bl	800f2b0 <uart0_puts>
 800ebda:	4620      	mov	r0, r4
 800ebdc:	f000 fb68 	bl	800f2b0 <uart0_puts>
 800ebe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebe4:	4802      	ldr	r0, [pc, #8]	; (800ebf0 <console_error+0x20>)
 800ebe6:	f000 bb63 	b.w	800f2b0 <uart0_puts>
 800ebea:	bf00      	nop
 800ebec:	08012a20 	stmdaeq	r1, {r5, r9, fp, sp}
 800ebf0:	0801100d 	stmdaeq	r1, {r0, r2, r3, ip}

0800ebf4 <console_status>:
 800ebf4:	b510      	push	{r4, lr}
 800ebf6:	460c      	mov	r4, r1
 800ebf8:	b280      	uxth	r0, r0
 800ebfa:	f7ff ffc7 	bl	800eb8c <console_set_fg_color>
 800ebfe:	4807      	ldr	r0, [pc, #28]	; (800ec1c <console_status+0x28>)
 800ec00:	f000 fb56 	bl	800f2b0 <uart0_puts>
 800ec04:	4620      	mov	r0, r4
 800ec06:	f000 fb53 	bl	800f2b0 <uart0_puts>
 800ec0a:	200a      	movs	r0, #10
 800ec0c:	f000 fb30 	bl	800f270 <uart0_putc>
 800ec10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec14:	4802      	ldr	r0, [pc, #8]	; (800ec20 <console_status+0x2c>)
 800ec16:	f000 bb4b 	b.w	800f2b0 <uart0_puts>
 800ec1a:	bf00      	nop
 800ec1c:	08012a14 	stmdaeq	r1, {r2, r4, r9, fp, sp}
 800ec20:	0801100d 	stmdaeq	r1, {r0, r2, r3, ip}

0800ec24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800ec24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec28:	4617      	mov	r7, r2
 800ec2a:	461e      	mov	r6, r3
 800ec2c:	4d14      	ldr	r5, [pc, #80]	; (800ec80 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800ec2e:	4b15      	ldr	r3, [pc, #84]	; (800ec84 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800ec30:	b086      	sub	sp, #24
 800ec32:	6018      	str	r0, [r3, #0]
 800ec34:	4604      	mov	r4, r0
 800ec36:	f105 0803 	add.w	r8, r5, #3
 800ec3a:	2203      	movs	r2, #3
 800ec3c:	4628      	mov	r0, r5
 800ec3e:	f000 f9dc 	bl	800effa <memmove>
 800ec42:	4639      	mov	r1, r7
 800ec44:	220b      	movs	r2, #11
 800ec46:	4640      	mov	r0, r8
 800ec48:	f000 f9d7 	bl	800effa <memmove>
 800ec4c:	f105 030e 	add.w	r3, r5, #14
 800ec50:	4631      	mov	r1, r6
 800ec52:	2208      	movs	r2, #8
 800ec54:	4618      	mov	r0, r3
 800ec56:	f000 f9d0 	bl	800effa <memmove>
 800ec5a:	2308      	movs	r3, #8
 800ec5c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800ec60:	230b      	movs	r3, #11
 800ec62:	9302      	str	r3, [sp, #8]
 800ec64:	4b08      	ldr	r3, [pc, #32]	; (800ec88 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800ec66:	9005      	str	r0, [sp, #20]
 800ec68:	e9cd 5300 	strd	r5, r3, [sp]
 800ec6c:	213f      	movs	r1, #63	; 0x3f
 800ec6e:	2303      	movs	r3, #3
 800ec70:	4a06      	ldr	r2, [pc, #24]	; (800ec8c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800ec72:	4807      	ldr	r0, [pc, #28]	; (800ec90 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800ec74:	f7f9 fdf2 	bl	800885c <snprintf>
 800ec78:	4620      	mov	r0, r4
 800ec7a:	b006      	add	sp, #24
 800ec7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec80:	2000a080 	andcs	sl, r0, r0, lsl #1
 800ec84:	2000a0d8 	ldrdcs	sl, [r0], -r8
 800ec88:	08011046 	stmdaeq	r1, {r1, r2, r6, ip}
 800ec8c:	08012a38 	stmdaeq	r1, {r3, r4, r5, r9, fp, sp}
 800ec90:	2000a096 	mulcs	r0, r6, r0

0800ec94 <FirmwareVersion::Print(char const*)>:
 800ec94:	b510      	push	{r4, lr}
 800ec96:	460c      	mov	r4, r1
 800ec98:	4804      	ldr	r0, [pc, #16]	; (800ecac <FirmwareVersion::Print(char const*)+0x18>)
 800ec9a:	f000 f9e6 	bl	800f06a <puts>
 800ec9e:	b124      	cbz	r4, 800ecaa <FirmwareVersion::Print(char const*)+0x16>
 800eca0:	4620      	mov	r0, r4
 800eca2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eca6:	f000 b9e0 	b.w	800f06a <puts>
 800ecaa:	bd10      	pop	{r4, pc}
 800ecac:	2000a096 	mulcs	r0, r6, r0

0800ecb0 <LedBlink::LedBlink()>:
 800ecb0:	b538      	push	{r3, r4, r5, lr}
 800ecb2:	2205      	movs	r2, #5
 800ecb4:	2300      	movs	r3, #0
 800ecb6:	e9c0 3200 	strd	r3, r2, [r0]
 800ecba:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ecbe:	6083      	str	r3, [r0, #8]
 800ecc0:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800ecc4:	6143      	str	r3, [r0, #20]
 800ecc6:	4b09      	ldr	r3, [pc, #36]	; (800ecec <LedBlink::LedBlink()+0x3c>)
 800ecc8:	4d09      	ldr	r5, [pc, #36]	; (800ecf0 <LedBlink::LedBlink()+0x40>)
 800ecca:	4604      	mov	r4, r0
 800eccc:	6018      	str	r0, [r3, #0]
 800ecce:	f240 6004 	movw	r0, #1540	; 0x604
 800ecd2:	f000 fd61 	bl	800f798 <rcu_periph_clock_enable>
 800ecd6:	4628      	mov	r0, r5
 800ecd8:	2301      	movs	r3, #1
 800ecda:	2203      	movs	r2, #3
 800ecdc:	2110      	movs	r1, #16
 800ecde:	f000 fcc3 	bl	800f668 <gpio_init>
 800ece2:	2301      	movs	r3, #1
 800ece4:	4620      	mov	r0, r4
 800ece6:	616b      	str	r3, [r5, #20]
 800ece8:	bd38      	pop	{r3, r4, r5, pc}
 800ecea:	bf00      	nop
 800ecec:	2000a0dc 	ldrdcs	sl, [r0], -ip
 800ecf0:	40011000 	andmi	r1, r1, r0

0800ecf4 <LedBlink::SetMode(ledblink::Mode)>:
 800ecf4:	6843      	ldr	r3, [r0, #4]
 800ecf6:	428b      	cmp	r3, r1
 800ecf8:	d02f      	beq.n	800ed5a <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ecfa:	6041      	str	r1, [r0, #4]
 800ecfc:	2904      	cmp	r1, #4
 800ecfe:	d822      	bhi.n	800ed46 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800ed00:	e8df f001 	tbb	[pc, r1]
 800ed04:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800ed08:	23ff001d 	mvnscs	r0, #29
 800ed0c:	6003      	str	r3, [r0, #0]
 800ed0e:	2300      	movs	r3, #0
 800ed10:	2201      	movs	r2, #1
 800ed12:	60c3      	str	r3, [r0, #12]
 800ed14:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ed18:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ed1c:	611a      	str	r2, [r3, #16]
 800ed1e:	6880      	ldr	r0, [r0, #8]
 800ed20:	b1d8      	cbz	r0, 800ed5a <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ed22:	6803      	ldr	r3, [r0, #0]
 800ed24:	689b      	ldr	r3, [r3, #8]
 800ed26:	4718      	bx	r3
 800ed28:	2301      	movs	r3, #1
 800ed2a:	6003      	str	r3, [r0, #0]
 800ed2c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ed30:	60c3      	str	r3, [r0, #12]
 800ed32:	e7f4      	b.n	800ed1e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ed34:	2303      	movs	r3, #3
 800ed36:	6003      	str	r3, [r0, #0]
 800ed38:	f240 134d 	movw	r3, #333	; 0x14d
 800ed3c:	e7f8      	b.n	800ed30 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ed3e:	2305      	movs	r3, #5
 800ed40:	6003      	str	r3, [r0, #0]
 800ed42:	23c8      	movs	r3, #200	; 0xc8
 800ed44:	e7f4      	b.n	800ed30 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ed46:	2300      	movs	r3, #0
 800ed48:	2201      	movs	r2, #1
 800ed4a:	6003      	str	r3, [r0, #0]
 800ed4c:	60c3      	str	r3, [r0, #12]
 800ed4e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ed52:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ed56:	615a      	str	r2, [r3, #20]
 800ed58:	e7e1      	b.n	800ed1e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ed5a:	4770      	bx	lr

0800ed5c <Hardware::Hardware()>:
 800ed5c:	b570      	push	{r4, r5, r6, lr}
 800ed5e:	2400      	movs	r4, #0
 800ed60:	4b24      	ldr	r3, [pc, #144]	; (800edf4 <Hardware::Hardware()+0x98>)
 800ed62:	b090      	sub	sp, #64	; 0x40
 800ed64:	7004      	strb	r4, [r0, #0]
 800ed66:	6018      	str	r0, [r3, #0]
 800ed68:	4605      	mov	r5, r0
 800ed6a:	f7f8 fbc9 	bl	8007500 <console_init>
 800ed6e:	f000 faaf 	bl	800f2d0 <systick_config>
 800ed72:	f001 fac3 	bl	80102fc <udelay_init()>
 800ed76:	f001 fabf 	bl	80102f8 <micros_init()>
 800ed7a:	f240 701b 	movw	r0, #1819	; 0x71b
 800ed7e:	f000 fd0b 	bl	800f798 <rcu_periph_clock_enable>
 800ed82:	f240 701c 	movw	r0, #1820	; 0x71c
 800ed86:	f000 fd07 	bl	800f798 <rcu_periph_clock_enable>
 800ed8a:	4e1b      	ldr	r6, [pc, #108]	; (800edf8 <Hardware::Hardware()+0x9c>)
 800ed8c:	f000 fcfc 	bl	800f788 <pmu_backup_write_enable>
 800ed90:	4621      	mov	r1, r4
 800ed92:	2002      	movs	r0, #2
 800ed94:	f000 fb3a 	bl	800f40c <bkp_data_write>
 800ed98:	f240 7004 	movw	r0, #1796	; 0x704
 800ed9c:	f000 fcfc 	bl	800f798 <rcu_periph_clock_enable>
 800eda0:	4630      	mov	r0, r6
 800eda2:	f000 fe47 	bl	800fa34 <timer_deinit>
 800eda6:	236b      	movs	r3, #107	; 0x6b
 800eda8:	f8ad 300c 	strh.w	r3, [sp, #12]
 800edac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800edb0:	a903      	add	r1, sp, #12
 800edb2:	4630      	mov	r0, r6
 800edb4:	9305      	str	r3, [sp, #20]
 800edb6:	f000 fe9f 	bl	800faf8 <timer_init>
 800edba:	4630      	mov	r0, r6
 800edbc:	f000 fef4 	bl	800fba8 <timer_enable>
 800edc0:	f001 f81c 	bl	800fdfc <gd32_adc_init()>
 800edc4:	220b      	movs	r2, #11
 800edc6:	2309      	movs	r3, #9
 800edc8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800edcc:	237a      	movs	r3, #122	; 0x7a
 800edce:	a807      	add	r0, sp, #28
 800edd0:	930c      	str	r3, [sp, #48]	; 0x30
 800edd2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800edd6:	9407      	str	r4, [sp, #28]
 800edd8:	940f      	str	r4, [sp, #60]	; 0x3c
 800edda:	f000 f99f 	bl	800f11c <mktime>
 800edde:	4621      	mov	r1, r4
 800ede0:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800ede4:	a801      	add	r0, sp, #4
 800ede6:	f000 fa0f 	bl	800f208 <settimeofday>
 800edea:	f001 f861 	bl	800feb0 <gd32_i2c_begin>
 800edee:	4628      	mov	r0, r5
 800edf0:	b010      	add	sp, #64	; 0x40
 800edf2:	bd70      	pop	{r4, r5, r6, pc}
 800edf4:	2000a0e0 	andcs	sl, r0, r0, ror #1
 800edf8:	40001000 	andmi	r1, r0, r0

0800edfc <Hardware::Reboot()>:
 800edfc:	b508      	push	{r3, lr}
 800edfe:	2300      	movs	r3, #0
 800ee00:	4604      	mov	r4, r0
 800ee02:	7003      	strb	r3, [r0, #0]
 800ee04:	2104      	movs	r1, #4
 800ee06:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ee0a:	f000 fc03 	bl	800f614 <fwdgt_config>
 800ee0e:	4620      	mov	r0, r4
 800ee10:	f7f9 f8d8 	bl	8007fc4 <Hardware::RebootHandler()>
 800ee14:	2102      	movs	r1, #2
 800ee16:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ee1a:	f000 fbfb 	bl	800f614 <fwdgt_config>
 800ee1e:	2801      	cmp	r0, #1
 800ee20:	bf0c      	ite	eq
 800ee22:	2301      	moveq	r3, #1
 800ee24:	2300      	movne	r3, #0
 800ee26:	7023      	strb	r3, [r4, #0]
 800ee28:	d101      	bne.n	800ee2e <Hardware::Reboot()+0x32>
 800ee2a:	f000 fbe3 	bl	800f5f4 <fwdgt_enable>
 800ee2e:	2208      	movs	r2, #8
 800ee30:	4b0d      	ldr	r3, [pc, #52]	; (800ee68 <Hardware::Reboot()+0x6c>)
 800ee32:	2501      	movs	r5, #1
 800ee34:	681b      	ldr	r3, [r3, #0]
 800ee36:	480d      	ldr	r0, [pc, #52]	; (800ee6c <Hardware::Reboot()+0x70>)
 800ee38:	601a      	str	r2, [r3, #0]
 800ee3a:	227d      	movs	r2, #125	; 0x7d
 800ee3c:	490c      	ldr	r1, [pc, #48]	; (800ee70 <Hardware::Reboot()+0x74>)
 800ee3e:	60da      	str	r2, [r3, #12]
 800ee40:	68dc      	ldr	r4, [r3, #12]
 800ee42:	b904      	cbnz	r4, 800ee46 <Hardware::Reboot()+0x4a>
 800ee44:	e7fe      	b.n	800ee44 <Hardware::Reboot()+0x48>
 800ee46:	6802      	ldr	r2, [r0, #0]
 800ee48:	695e      	ldr	r6, [r3, #20]
 800ee4a:	1b92      	subs	r2, r2, r6
 800ee4c:	4294      	cmp	r4, r2
 800ee4e:	d8f8      	bhi.n	800ee42 <Hardware::Reboot()+0x46>
 800ee50:	6802      	ldr	r2, [r0, #0]
 800ee52:	615a      	str	r2, [r3, #20]
 800ee54:	691a      	ldr	r2, [r3, #16]
 800ee56:	2a01      	cmp	r2, #1
 800ee58:	f082 0401 	eor.w	r4, r2, #1
 800ee5c:	611c      	str	r4, [r3, #16]
 800ee5e:	bf14      	ite	ne
 800ee60:	610d      	strne	r5, [r1, #16]
 800ee62:	614a      	streq	r2, [r1, #20]
 800ee64:	e7ec      	b.n	800ee40 <Hardware::Reboot()+0x44>
 800ee66:	bf00      	nop
 800ee68:	2000a0dc 	ldrdcs	sl, [r0], -ip
 800ee6c:	2000a0f4 	strdcs	sl, [r0], -r4
 800ee70:	40011000 	andmi	r1, r1, r0

0800ee74 <operator delete(void*)>:
 800ee74:	f000 b890 	b.w	800ef98 <free>

0800ee78 <operator delete[](void*)>:
 800ee78:	f000 b88e 	b.w	800ef98 <free>

0800ee7c <operator new(unsigned int)>:
 800ee7c:	f000 b842 	b.w	800ef04 <malloc>

0800ee80 <operator new[](unsigned int)>:
 800ee80:	f000 b840 	b.w	800ef04 <malloc>

0800ee84 <inet_aton>:
 800ee84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ee86:	f04f 0c0a 	mov.w	ip, #10
 800ee8a:	2500      	movs	r5, #0
 800ee8c:	ae01      	add	r6, sp, #4
 800ee8e:	4603      	mov	r3, r0
 800ee90:	2200      	movs	r2, #0
 800ee92:	1d07      	adds	r7, r0, #4
 800ee94:	e007      	b.n	800eea6 <inet_aton+0x22>
 800ee96:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee9a:	2b09      	cmp	r3, #9
 800ee9c:	d820      	bhi.n	800eee0 <inet_aton+0x5c>
 800ee9e:	4603      	mov	r3, r0
 800eea0:	fb0c 4202 	mla	r2, ip, r2, r4
 800eea4:	3a30      	subs	r2, #48	; 0x30
 800eea6:	4618      	mov	r0, r3
 800eea8:	f810 4b01 	ldrb.w	r4, [r0], #1
 800eeac:	2c2e      	cmp	r4, #46	; 0x2e
 800eeae:	d111      	bne.n	800eed4 <inet_aton+0x50>
 800eeb0:	3501      	adds	r5, #1
 800eeb2:	2d03      	cmp	r5, #3
 800eeb4:	f806 2b01 	strb.w	r2, [r6], #1
 800eeb8:	d1e9      	bne.n	800ee8e <inet_aton+0xa>
 800eeba:	2200      	movs	r2, #0
 800eebc:	250a      	movs	r5, #10
 800eebe:	1d1c      	adds	r4, r3, #4
 800eec0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800eec4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800eec8:	d10d      	bne.n	800eee6 <inet_aton+0x62>
 800eeca:	f88d 2007 	strb.w	r2, [sp, #7]
 800eece:	b9b1      	cbnz	r1, 800eefe <inet_aton+0x7a>
 800eed0:	2001      	movs	r0, #1
 800eed2:	e006      	b.n	800eee2 <inet_aton+0x5e>
 800eed4:	2c00      	cmp	r4, #0
 800eed6:	d0eb      	beq.n	800eeb0 <inet_aton+0x2c>
 800eed8:	2c0a      	cmp	r4, #10
 800eeda:	d0e9      	beq.n	800eeb0 <inet_aton+0x2c>
 800eedc:	42b8      	cmp	r0, r7
 800eede:	d1da      	bne.n	800ee96 <inet_aton+0x12>
 800eee0:	2000      	movs	r0, #0
 800eee2:	b003      	add	sp, #12
 800eee4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eee6:	280a      	cmp	r0, #10
 800eee8:	d0ef      	beq.n	800eeca <inet_aton+0x46>
 800eeea:	42a3      	cmp	r3, r4
 800eeec:	d0f8      	beq.n	800eee0 <inet_aton+0x5c>
 800eeee:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800eef2:	2e09      	cmp	r6, #9
 800eef4:	d8f4      	bhi.n	800eee0 <inet_aton+0x5c>
 800eef6:	fb05 0202 	mla	r2, r5, r2, r0
 800eefa:	3a30      	subs	r2, #48	; 0x30
 800eefc:	e7e0      	b.n	800eec0 <inet_aton+0x3c>
 800eefe:	9b01      	ldr	r3, [sp, #4]
 800ef00:	600b      	str	r3, [r1, #0]
 800ef02:	e7e5      	b.n	800eed0 <inet_aton+0x4c>

0800ef04 <malloc>:
 800ef04:	b538      	push	{r3, r4, r5, lr}
 800ef06:	4604      	mov	r4, r0
 800ef08:	4601      	mov	r1, r0
 800ef0a:	481c      	ldr	r0, [pc, #112]	; (800ef7c <malloc+0x78>)
 800ef0c:	f7f9 fc96 	bl	800883c <printf>
 800ef10:	b17c      	cbz	r4, 800ef32 <malloc+0x2e>
 800ef12:	4b1b      	ldr	r3, [pc, #108]	; (800ef80 <malloc+0x7c>)
 800ef14:	6818      	ldr	r0, [r3, #0]
 800ef16:	b978      	cbnz	r0, 800ef38 <malloc+0x34>
 800ef18:	4a1a      	ldr	r2, [pc, #104]	; (800ef84 <malloc+0x80>)
 800ef1a:	f104 031b 	add.w	r3, r4, #27
 800ef1e:	6811      	ldr	r1, [r2, #0]
 800ef20:	4819      	ldr	r0, [pc, #100]	; (800ef88 <malloc+0x84>)
 800ef22:	f023 030f 	bic.w	r3, r3, #15
 800ef26:	440b      	add	r3, r1
 800ef28:	4283      	cmp	r3, r0
 800ef2a:	d921      	bls.n	800ef70 <malloc+0x6c>
 800ef2c:	4817      	ldr	r0, [pc, #92]	; (800ef8c <malloc+0x88>)
 800ef2e:	f7f9 fc85 	bl	800883c <printf>
 800ef32:	2500      	movs	r5, #0
 800ef34:	4628      	mov	r0, r5
 800ef36:	bd38      	pop	{r3, r4, r5, pc}
 800ef38:	4284      	cmp	r4, r0
 800ef3a:	d80a      	bhi.n	800ef52 <malloc+0x4e>
 800ef3c:	685a      	ldr	r2, [r3, #4]
 800ef3e:	6899      	ldr	r1, [r3, #8]
 800ef40:	3201      	adds	r2, #1
 800ef42:	428a      	cmp	r2, r1
 800ef44:	605a      	str	r2, [r3, #4]
 800ef46:	d900      	bls.n	800ef4a <malloc+0x46>
 800ef48:	609a      	str	r2, [r3, #8]
 800ef4a:	68d9      	ldr	r1, [r3, #12]
 800ef4c:	b919      	cbnz	r1, 800ef56 <malloc+0x52>
 800ef4e:	4604      	mov	r4, r0
 800ef50:	e7e2      	b.n	800ef18 <malloc+0x14>
 800ef52:	3310      	adds	r3, #16
 800ef54:	e7de      	b.n	800ef14 <malloc+0x10>
 800ef56:	4604      	mov	r4, r0
 800ef58:	688a      	ldr	r2, [r1, #8]
 800ef5a:	60da      	str	r2, [r3, #12]
 800ef5c:	2300      	movs	r3, #0
 800ef5e:	f101 050c 	add.w	r5, r1, #12
 800ef62:	608b      	str	r3, [r1, #8]
 800ef64:	4622      	mov	r2, r4
 800ef66:	462b      	mov	r3, r5
 800ef68:	4809      	ldr	r0, [pc, #36]	; (800ef90 <malloc+0x8c>)
 800ef6a:	f7f9 fc67 	bl	800883c <printf>
 800ef6e:	e7e1      	b.n	800ef34 <malloc+0x30>
 800ef70:	6013      	str	r3, [r2, #0]
 800ef72:	4b08      	ldr	r3, [pc, #32]	; (800ef94 <malloc+0x90>)
 800ef74:	e9c1 3400 	strd	r3, r4, [r1]
 800ef78:	e7f0      	b.n	800ef5c <malloc+0x58>
 800ef7a:	bf00      	nop
 800ef7c:	08012a5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, sp}
 800ef80:	20000020 	andcs	r0, r0, r0, lsr #32
 800ef84:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ef88:	20016000 	andcs	r6, r1, r0
 800ef8c:	08012a68 	stmdaeq	r1, {r3, r5, r6, r9, fp, sp}
 800ef90:	08012a84 	stmdaeq	r1, {r2, r7, r9, fp, sp}
 800ef94:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800ef98 <free>:
 800ef98:	b538      	push	{r3, r4, r5, lr}
 800ef9a:	4604      	mov	r4, r0
 800ef9c:	b1c8      	cbz	r0, 800efd2 <free+0x3a>
 800ef9e:	f1a0 050c 	sub.w	r5, r0, #12
 800efa2:	4602      	mov	r2, r0
 800efa4:	4629      	mov	r1, r5
 800efa6:	480c      	ldr	r0, [pc, #48]	; (800efd8 <free+0x40>)
 800efa8:	f7f9 fc48 	bl	800883c <printf>
 800efac:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800efb0:	4b0a      	ldr	r3, [pc, #40]	; (800efdc <free+0x44>)
 800efb2:	429a      	cmp	r2, r3
 800efb4:	d10d      	bne.n	800efd2 <free+0x3a>
 800efb6:	4b0a      	ldr	r3, [pc, #40]	; (800efe0 <free+0x48>)
 800efb8:	681a      	ldr	r2, [r3, #0]
 800efba:	b152      	cbz	r2, 800efd2 <free+0x3a>
 800efbc:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800efc0:	4291      	cmp	r1, r2
 800efc2:	d107      	bne.n	800efd4 <free+0x3c>
 800efc4:	68da      	ldr	r2, [r3, #12]
 800efc6:	f844 2c04 	str.w	r2, [r4, #-4]
 800efca:	685a      	ldr	r2, [r3, #4]
 800efcc:	60dd      	str	r5, [r3, #12]
 800efce:	3a01      	subs	r2, #1
 800efd0:	605a      	str	r2, [r3, #4]
 800efd2:	bd38      	pop	{r3, r4, r5, pc}
 800efd4:	3310      	adds	r3, #16
 800efd6:	e7ef      	b.n	800efb8 <free+0x20>
 800efd8:	08012aaf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, fp, sp}
 800efdc:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800efe0:	20000020 	andcs	r0, r0, r0, lsr #32

0800efe4 <memcpy>:
 800efe4:	b510      	push	{r4, lr}
 800efe6:	1e43      	subs	r3, r0, #1
 800efe8:	440a      	add	r2, r1
 800efea:	4291      	cmp	r1, r2
 800efec:	d100      	bne.n	800eff0 <memcpy+0xc>
 800efee:	bd10      	pop	{r4, pc}
 800eff0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800eff4:	f803 4f01 	strb.w	r4, [r3, #1]!
 800eff8:	e7f7      	b.n	800efea <memcpy+0x6>

0800effa <memmove>:
 800effa:	4288      	cmp	r0, r1
 800effc:	b510      	push	{r4, lr}
 800effe:	eb01 0302 	add.w	r3, r1, r2
 800f002:	d208      	bcs.n	800f016 <memmove+0x1c>
 800f004:	1e42      	subs	r2, r0, #1
 800f006:	4299      	cmp	r1, r3
 800f008:	d100      	bne.n	800f00c <memmove+0x12>
 800f00a:	bd10      	pop	{r4, pc}
 800f00c:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f010:	f802 4f01 	strb.w	r4, [r2, #1]!
 800f014:	e7f7      	b.n	800f006 <memmove+0xc>
 800f016:	4601      	mov	r1, r0
 800f018:	4402      	add	r2, r0
 800f01a:	428a      	cmp	r2, r1
 800f01c:	d0f5      	beq.n	800f00a <memmove+0x10>
 800f01e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f022:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f026:	e7f8      	b.n	800f01a <memmove+0x20>

0800f028 <memset>:
 800f028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f02a:	b1c2      	cbz	r2, 800f05e <memset+0x36>
 800f02c:	4603      	mov	r3, r0
 800f02e:	b2c9      	uxtb	r1, r1
 800f030:	075c      	lsls	r4, r3, #29
 800f032:	d110      	bne.n	800f056 <memset+0x2e>
 800f034:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800f038:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800f03c:	463d      	mov	r5, r7
 800f03e:	461e      	mov	r6, r3
 800f040:	f022 0407 	bic.w	r4, r2, #7
 800f044:	441c      	add	r4, r3
 800f046:	42a6      	cmp	r6, r4
 800f048:	d10a      	bne.n	800f060 <memset+0x38>
 800f04a:	4413      	add	r3, r2
 800f04c:	429c      	cmp	r4, r3
 800f04e:	d006      	beq.n	800f05e <memset+0x36>
 800f050:	f804 1b01 	strb.w	r1, [r4], #1
 800f054:	e7fa      	b.n	800f04c <memset+0x24>
 800f056:	3a01      	subs	r2, #1
 800f058:	f803 1b01 	strb.w	r1, [r3], #1
 800f05c:	d1e8      	bne.n	800f030 <memset+0x8>
 800f05e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f060:	f846 7b08 	str.w	r7, [r6], #8
 800f064:	f846 5c04 	str.w	r5, [r6, #-4]
 800f068:	e7ed      	b.n	800f046 <memset+0x1e>

0800f06a <puts>:
 800f06a:	b508      	push	{r3, lr}
 800f06c:	f7ff fd8c 	bl	800eb88 <console_puts>
 800f070:	200a      	movs	r0, #10
 800f072:	f7ff fd87 	bl	800eb84 <console_putc>
 800f076:	2001      	movs	r0, #1
 800f078:	bd08      	pop	{r3, pc}
	...

0800f07c <strtok>:
 800f07c:	b530      	push	{r4, r5, lr}
 800f07e:	b910      	cbnz	r0, 800f086 <strtok+0xa>
 800f080:	4b12      	ldr	r3, [pc, #72]	; (800f0cc <strtok+0x50>)
 800f082:	6818      	ldr	r0, [r3, #0]
 800f084:	b158      	cbz	r0, 800f09e <strtok+0x22>
 800f086:	4603      	mov	r3, r0
 800f088:	460d      	mov	r5, r1
 800f08a:	4618      	mov	r0, r3
 800f08c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f090:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f094:	b924      	cbnz	r4, 800f0a0 <strtok+0x24>
 800f096:	b94a      	cbnz	r2, 800f0ac <strtok+0x30>
 800f098:	4610      	mov	r0, r2
 800f09a:	4b0c      	ldr	r3, [pc, #48]	; (800f0cc <strtok+0x50>)
 800f09c:	601a      	str	r2, [r3, #0]
 800f09e:	bd30      	pop	{r4, r5, pc}
 800f0a0:	42a2      	cmp	r2, r4
 800f0a2:	d1f5      	bne.n	800f090 <strtok+0x14>
 800f0a4:	e7f0      	b.n	800f088 <strtok+0xc>
 800f0a6:	4613      	mov	r3, r2
 800f0a8:	e00c      	b.n	800f0c4 <strtok+0x48>
 800f0aa:	b914      	cbnz	r4, 800f0b2 <strtok+0x36>
 800f0ac:	460d      	mov	r5, r1
 800f0ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f0b2:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f0b6:	42a2      	cmp	r2, r4
 800f0b8:	d1f7      	bne.n	800f0aa <strtok+0x2e>
 800f0ba:	2a00      	cmp	r2, #0
 800f0bc:	d0f3      	beq.n	800f0a6 <strtok+0x2a>
 800f0be:	2200      	movs	r2, #0
 800f0c0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f0c4:	4a01      	ldr	r2, [pc, #4]	; (800f0cc <strtok+0x50>)
 800f0c6:	6013      	str	r3, [r2, #0]
 800f0c8:	e7e9      	b.n	800f09e <strtok+0x22>
 800f0ca:	bf00      	nop
 800f0cc:	2000a0e4 	andcs	sl, r0, r4, ror #1

0800f0d0 <isleapyear>:
 800f0d0:	2264      	movs	r2, #100	; 0x64
 800f0d2:	fb90 f3f2 	sdiv	r3, r0, r2
 800f0d6:	fb02 0313 	mls	r3, r2, r3, r0
 800f0da:	b94b      	cbnz	r3, 800f0f0 <isleapyear+0x20>
 800f0dc:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800f0e0:	fb90 f2f3 	sdiv	r2, r0, r3
 800f0e4:	fb03 0012 	mls	r0, r3, r2, r0
 800f0e8:	fab0 f080 	clz	r0, r0
 800f0ec:	0940      	lsrs	r0, r0, #5
 800f0ee:	4770      	bx	lr
 800f0f0:	f010 0f03 	tst.w	r0, #3
 800f0f4:	bf0c      	ite	eq
 800f0f6:	2001      	moveq	r0, #1
 800f0f8:	2000      	movne	r0, #0
 800f0fa:	4770      	bx	lr

0800f0fc <getdaysofmonth>:
 800f0fc:	b510      	push	{r4, lr}
 800f0fe:	4604      	mov	r4, r0
 800f100:	2c01      	cmp	r4, #1
 800f102:	4608      	mov	r0, r1
 800f104:	d102      	bne.n	800f10c <getdaysofmonth+0x10>
 800f106:	f7ff ffe3 	bl	800f0d0 <isleapyear>
 800f10a:	b918      	cbnz	r0, 800f114 <getdaysofmonth+0x18>
 800f10c:	4b02      	ldr	r3, [pc, #8]	; (800f118 <getdaysofmonth+0x1c>)
 800f10e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800f112:	bd10      	pop	{r4, pc}
 800f114:	201d      	movs	r0, #29
 800f116:	e7fc      	b.n	800f112 <getdaysofmonth+0x16>
 800f118:	08012ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, sp}

0800f11c <mktime>:
 800f11c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f120:	4604      	mov	r4, r0
 800f122:	2800      	cmp	r0, #0
 800f124:	d043      	beq.n	800f1ae <mktime+0x92>
 800f126:	6941      	ldr	r1, [r0, #20]
 800f128:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800f12c:	2b45      	cmp	r3, #69	; 0x45
 800f12e:	d83e      	bhi.n	800f1ae <mktime+0x92>
 800f130:	2600      	movs	r6, #0
 800f132:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800f136:	f240 186d 	movw	r8, #365	; 0x16d
 800f13a:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800f13e:	42af      	cmp	r7, r5
 800f140:	da24      	bge.n	800f18c <mktime+0x70>
 800f142:	6927      	ldr	r7, [r4, #16]
 800f144:	2f0b      	cmp	r7, #11
 800f146:	d832      	bhi.n	800f1ae <mktime+0x92>
 800f148:	2500      	movs	r5, #0
 800f14a:	42af      	cmp	r7, r5
 800f14c:	d129      	bne.n	800f1a2 <mktime+0x86>
 800f14e:	68e5      	ldr	r5, [r4, #12]
 800f150:	2d00      	cmp	r5, #0
 800f152:	dd2c      	ble.n	800f1ae <mktime+0x92>
 800f154:	4638      	mov	r0, r7
 800f156:	f7ff ffd1 	bl	800f0fc <getdaysofmonth>
 800f15a:	4285      	cmp	r5, r0
 800f15c:	dc27      	bgt.n	800f1ae <mktime+0x92>
 800f15e:	2318      	movs	r3, #24
 800f160:	3d01      	subs	r5, #1
 800f162:	4435      	add	r5, r6
 800f164:	435d      	muls	r5, r3
 800f166:	68a3      	ldr	r3, [r4, #8]
 800f168:	2b17      	cmp	r3, #23
 800f16a:	d820      	bhi.n	800f1ae <mktime+0x92>
 800f16c:	213c      	movs	r1, #60	; 0x3c
 800f16e:	442b      	add	r3, r5
 800f170:	fb01 f203 	mul.w	r2, r1, r3
 800f174:	6863      	ldr	r3, [r4, #4]
 800f176:	2b3b      	cmp	r3, #59	; 0x3b
 800f178:	d819      	bhi.n	800f1ae <mktime+0x92>
 800f17a:	6820      	ldr	r0, [r4, #0]
 800f17c:	4413      	add	r3, r2
 800f17e:	283b      	cmp	r0, #59	; 0x3b
 800f180:	fb01 f303 	mul.w	r3, r1, r3
 800f184:	d813      	bhi.n	800f1ae <mktime+0x92>
 800f186:	4418      	add	r0, r3
 800f188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f18c:	4628      	mov	r0, r5
 800f18e:	f7ff ff9f 	bl	800f0d0 <isleapyear>
 800f192:	2800      	cmp	r0, #0
 800f194:	bf14      	ite	ne
 800f196:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800f19a:	4643      	moveq	r3, r8
 800f19c:	3501      	adds	r5, #1
 800f19e:	441e      	add	r6, r3
 800f1a0:	e7cd      	b.n	800f13e <mktime+0x22>
 800f1a2:	4628      	mov	r0, r5
 800f1a4:	f7ff ffaa 	bl	800f0fc <getdaysofmonth>
 800f1a8:	3501      	adds	r5, #1
 800f1aa:	4406      	add	r6, r0
 800f1ac:	e7cd      	b.n	800f14a <mktime+0x2e>
 800f1ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f1b2:	e7e9      	b.n	800f188 <mktime+0x6c>

0800f1b4 <gettimeofday>:
 800f1b4:	b538      	push	{r3, r4, r5, lr}
 800f1b6:	4b10      	ldr	r3, [pc, #64]	; (800f1f8 <gettimeofday+0x44>)
 800f1b8:	4a10      	ldr	r2, [pc, #64]	; (800f1fc <gettimeofday+0x48>)
 800f1ba:	681b      	ldr	r3, [r3, #0]
 800f1bc:	6814      	ldr	r4, [r2, #0]
 800f1be:	6013      	str	r3, [r2, #0]
 800f1c0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f1c4:	429c      	cmp	r4, r3
 800f1c6:	bf2c      	ite	cs
 800f1c8:	1ae4      	subcs	r4, r4, r3
 800f1ca:	1b1c      	subcc	r4, r3, r4
 800f1cc:	4354      	muls	r4, r2
 800f1ce:	4b0c      	ldr	r3, [pc, #48]	; (800f200 <gettimeofday+0x4c>)
 800f1d0:	4605      	mov	r5, r0
 800f1d2:	e9d3 2100 	ldrd	r2, r1, [r3]
 800f1d6:	18a4      	adds	r4, r4, r2
 800f1d8:	f141 0100 	adc.w	r1, r1, #0
 800f1dc:	e9c3 4100 	strd	r4, r1, [r3]
 800f1e0:	4620      	mov	r0, r4
 800f1e2:	2300      	movs	r3, #0
 800f1e4:	4a07      	ldr	r2, [pc, #28]	; (800f204 <gettimeofday+0x50>)
 800f1e6:	f7f8 fc7d 	bl	8007ae4 <__aeabi_uldivmod>
 800f1ea:	4b06      	ldr	r3, [pc, #24]	; (800f204 <gettimeofday+0x50>)
 800f1ec:	6028      	str	r0, [r5, #0]
 800f1ee:	fb03 4410 	mls	r4, r3, r0, r4
 800f1f2:	2000      	movs	r0, #0
 800f1f4:	606c      	str	r4, [r5, #4]
 800f1f6:	bd38      	pop	{r3, r4, r5, pc}
 800f1f8:	2000a0f4 	strdcs	sl, [r0], -r4
 800f1fc:	2000a0f0 	strdcs	sl, [r0], -r0
 800f200:	2000a0e8 	andcs	sl, r0, r8, ror #1
 800f204:	000f4240 	andeq	r4, pc, r0, asr #4

0800f208 <settimeofday>:
 800f208:	4b07      	ldr	r3, [pc, #28]	; (800f228 <settimeofday+0x20>)
 800f20a:	b510      	push	{r4, lr}
 800f20c:	681a      	ldr	r2, [r3, #0]
 800f20e:	4b07      	ldr	r3, [pc, #28]	; (800f22c <settimeofday+0x24>)
 800f210:	6804      	ldr	r4, [r0, #0]
 800f212:	601a      	str	r2, [r3, #0]
 800f214:	6843      	ldr	r3, [r0, #4]
 800f216:	4806      	ldr	r0, [pc, #24]	; (800f230 <settimeofday+0x28>)
 800f218:	17da      	asrs	r2, r3, #31
 800f21a:	fbc4 3200 	smlal	r3, r2, r4, r0
 800f21e:	4905      	ldr	r1, [pc, #20]	; (800f234 <settimeofday+0x2c>)
 800f220:	2000      	movs	r0, #0
 800f222:	e9c1 3200 	strd	r3, r2, [r1]
 800f226:	bd10      	pop	{r4, pc}
 800f228:	2000a0f4 	strdcs	sl, [r0], -r4
 800f22c:	2000a0f0 	strdcs	sl, [r0], -r0
 800f230:	000f4240 	andeq	r4, pc, r0, asr #4
 800f234:	2000a0e8 	andcs	sl, r0, r8, ror #1

0800f238 <time>:
 800f238:	b513      	push	{r0, r1, r4, lr}
 800f23a:	4604      	mov	r4, r0
 800f23c:	2100      	movs	r1, #0
 800f23e:	4668      	mov	r0, sp
 800f240:	f7ff ffb8 	bl	800f1b4 <gettimeofday>
 800f244:	9800      	ldr	r0, [sp, #0]
 800f246:	b104      	cbz	r4, 800f24a <time+0x12>
 800f248:	6020      	str	r0, [r4, #0]
 800f24a:	b002      	add	sp, #8
 800f24c:	bd10      	pop	{r4, pc}
	...

0800f250 <uart0_init>:
 800f250:	2301      	movs	r3, #1
 800f252:	b507      	push	{r0, r1, r2, lr}
 800f254:	2208      	movs	r2, #8
 800f256:	9300      	str	r3, [sp, #0]
 800f258:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800f25c:	2300      	movs	r3, #0
 800f25e:	4803      	ldr	r0, [pc, #12]	; (800f26c <uart0_init+0x1c>)
 800f260:	f000 ff72 	bl	8010148 <gd32_uart_begin>
 800f264:	b003      	add	sp, #12
 800f266:	f85d fb04 	ldr.w	pc, [sp], #4
 800f26a:	bf00      	nop
 800f26c:	40013800 	andmi	r3, r1, r0, lsl #16

0800f270 <uart0_putc>:
 800f270:	280a      	cmp	r0, #10
 800f272:	b538      	push	{r3, r4, r5, lr}
 800f274:	4604      	mov	r4, r0
 800f276:	d10a      	bne.n	800f28e <uart0_putc+0x1e>
 800f278:	4d0b      	ldr	r5, [pc, #44]	; (800f2a8 <uart0_putc+0x38>)
 800f27a:	2107      	movs	r1, #7
 800f27c:	4628      	mov	r0, r5
 800f27e:	f000 fd75 	bl	800fd6c <usart_flag_get>
 800f282:	2800      	cmp	r0, #0
 800f284:	d0f9      	beq.n	800f27a <uart0_putc+0xa>
 800f286:	220d      	movs	r2, #13
 800f288:	4b08      	ldr	r3, [pc, #32]	; (800f2ac <uart0_putc+0x3c>)
 800f28a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800f28e:	4d06      	ldr	r5, [pc, #24]	; (800f2a8 <uart0_putc+0x38>)
 800f290:	2107      	movs	r1, #7
 800f292:	4628      	mov	r0, r5
 800f294:	f000 fd6a 	bl	800fd6c <usart_flag_get>
 800f298:	2800      	cmp	r0, #0
 800f29a:	d0f9      	beq.n	800f290 <uart0_putc+0x20>
 800f29c:	4b03      	ldr	r3, [pc, #12]	; (800f2ac <uart0_putc+0x3c>)
 800f29e:	b2e4      	uxtb	r4, r4
 800f2a0:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800f2a4:	bd38      	pop	{r3, r4, r5, pc}
 800f2a6:	bf00      	nop
 800f2a8:	40013800 	andmi	r3, r1, r0, lsl #16
 800f2ac:	40013000 	andmi	r3, r1, r0

0800f2b0 <uart0_puts>:
 800f2b0:	b510      	push	{r4, lr}
 800f2b2:	1e44      	subs	r4, r0, #1
 800f2b4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800f2b8:	b903      	cbnz	r3, 800f2bc <uart0_puts+0xc>
 800f2ba:	bd10      	pop	{r4, pc}
 800f2bc:	2b0a      	cmp	r3, #10
 800f2be:	d102      	bne.n	800f2c6 <uart0_puts+0x16>
 800f2c0:	200d      	movs	r0, #13
 800f2c2:	f7ff ffd5 	bl	800f270 <uart0_putc>
 800f2c6:	7820      	ldrb	r0, [r4, #0]
 800f2c8:	f7ff ffd2 	bl	800f270 <uart0_putc>
 800f2cc:	e7f2      	b.n	800f2b4 <uart0_puts+0x4>
	...

0800f2d0 <systick_config>:
 800f2d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f2d4:	4b0b      	ldr	r3, [pc, #44]	; (800f304 <systick_config+0x34>)
 800f2d6:	681b      	ldr	r3, [r3, #0]
 800f2d8:	fbb3 f3f2 	udiv	r3, r3, r2
 800f2dc:	3b01      	subs	r3, #1
 800f2de:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f2e2:	d20d      	bcs.n	800f300 <systick_config+0x30>
 800f2e4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f2e8:	21f0      	movs	r1, #240	; 0xf0
 800f2ea:	6153      	str	r3, [r2, #20]
 800f2ec:	4b06      	ldr	r3, [pc, #24]	; (800f308 <systick_config+0x38>)
 800f2ee:	2007      	movs	r0, #7
 800f2f0:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f2f4:	2100      	movs	r1, #0
 800f2f6:	6191      	str	r1, [r2, #24]
 800f2f8:	6110      	str	r0, [r2, #16]
 800f2fa:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f2fe:	4770      	bx	lr
 800f300:	e7fe      	b.n	800f300 <systick_config+0x30>
 800f302:	bf00      	nop
 800f304:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800f308:	e000ed00 	and	lr, r0, r0, lsl #26

0800f30c <SysTick_Handler>:
 800f30c:	4a02      	ldr	r2, [pc, #8]	; (800f318 <SysTick_Handler+0xc>)
 800f30e:	6813      	ldr	r3, [r2, #0]
 800f310:	3301      	adds	r3, #1
 800f312:	6013      	str	r3, [r2, #0]
 800f314:	4770      	bx	lr
 800f316:	bf00      	nop
 800f318:	2000a0f4 	strdcs	sl, [r0], -r4

0800f31c <SystemInit>:
 800f31c:	4b37      	ldr	r3, [pc, #220]	; (800f3fc <SystemInit+0xe0>)
 800f31e:	4938      	ldr	r1, [pc, #224]	; (800f400 <SystemInit+0xe4>)
 800f320:	681a      	ldr	r2, [r3, #0]
 800f322:	f042 0201 	orr.w	r2, r2, #1
 800f326:	601a      	str	r2, [r3, #0]
 800f328:	685a      	ldr	r2, [r3, #4]
 800f32a:	f022 0203 	bic.w	r2, r2, #3
 800f32e:	605a      	str	r2, [r3, #4]
 800f330:	681a      	ldr	r2, [r3, #0]
 800f332:	400a      	ands	r2, r1
 800f334:	601a      	str	r2, [r3, #0]
 800f336:	6858      	ldr	r0, [r3, #4]
 800f338:	4a32      	ldr	r2, [pc, #200]	; (800f404 <SystemInit+0xe8>)
 800f33a:	4002      	ands	r2, r0
 800f33c:	605a      	str	r2, [r3, #4]
 800f33e:	681a      	ldr	r2, [r3, #0]
 800f340:	400a      	ands	r2, r1
 800f342:	601a      	str	r2, [r3, #0]
 800f344:	681a      	ldr	r2, [r3, #0]
 800f346:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800f34a:	601a      	str	r2, [r3, #0]
 800f34c:	685a      	ldr	r2, [r3, #4]
 800f34e:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800f352:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800f356:	605a      	str	r2, [r3, #4]
 800f358:	2200      	movs	r2, #0
 800f35a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f35c:	681a      	ldr	r2, [r3, #0]
 800f35e:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800f362:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800f366:	601a      	str	r2, [r3, #0]
 800f368:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800f36c:	609a      	str	r2, [r3, #8]
 800f36e:	681a      	ldr	r2, [r3, #0]
 800f370:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f374:	601a      	str	r2, [r3, #0]
 800f376:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f37a:	6819      	ldr	r1, [r3, #0]
 800f37c:	0389      	lsls	r1, r1, #14
 800f37e:	d401      	bmi.n	800f384 <SystemInit+0x68>
 800f380:	3a01      	subs	r2, #1
 800f382:	d1fa      	bne.n	800f37a <SystemInit+0x5e>
 800f384:	681a      	ldr	r2, [r3, #0]
 800f386:	0392      	lsls	r2, r2, #14
 800f388:	d400      	bmi.n	800f38c <SystemInit+0x70>
 800f38a:	e7fe      	b.n	800f38a <SystemInit+0x6e>
 800f38c:	685a      	ldr	r2, [r3, #4]
 800f38e:	605a      	str	r2, [r3, #4]
 800f390:	685a      	ldr	r2, [r3, #4]
 800f392:	605a      	str	r2, [r3, #4]
 800f394:	685a      	ldr	r2, [r3, #4]
 800f396:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f39a:	605a      	str	r2, [r3, #4]
 800f39c:	685a      	ldr	r2, [r3, #4]
 800f39e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800f3a2:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800f3a6:	605a      	str	r2, [r3, #4]
 800f3a8:	685a      	ldr	r2, [r3, #4]
 800f3aa:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800f3ae:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800f3b2:	605a      	str	r2, [r3, #4]
 800f3b4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f3b6:	4a14      	ldr	r2, [pc, #80]	; (800f408 <SystemInit+0xec>)
 800f3b8:	400a      	ands	r2, r1
 800f3ba:	62da      	str	r2, [r3, #44]	; 0x2c
 800f3bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f3be:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800f3c2:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800f3c6:	62da      	str	r2, [r3, #44]	; 0x2c
 800f3c8:	681a      	ldr	r2, [r3, #0]
 800f3ca:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800f3ce:	601a      	str	r2, [r3, #0]
 800f3d0:	681a      	ldr	r2, [r3, #0]
 800f3d2:	0110      	lsls	r0, r2, #4
 800f3d4:	d5fc      	bpl.n	800f3d0 <SystemInit+0xb4>
 800f3d6:	681a      	ldr	r2, [r3, #0]
 800f3d8:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800f3dc:	601a      	str	r2, [r3, #0]
 800f3de:	681a      	ldr	r2, [r3, #0]
 800f3e0:	0191      	lsls	r1, r2, #6
 800f3e2:	d5fc      	bpl.n	800f3de <SystemInit+0xc2>
 800f3e4:	685a      	ldr	r2, [r3, #4]
 800f3e6:	f022 0203 	bic.w	r2, r2, #3
 800f3ea:	605a      	str	r2, [r3, #4]
 800f3ec:	685a      	ldr	r2, [r3, #4]
 800f3ee:	f042 0202 	orr.w	r2, r2, #2
 800f3f2:	605a      	str	r2, [r3, #4]
 800f3f4:	685a      	ldr	r2, [r3, #4]
 800f3f6:	0712      	lsls	r2, r2, #28
 800f3f8:	d5fc      	bpl.n	800f3f4 <SystemInit+0xd8>
 800f3fa:	4770      	bx	lr
 800f3fc:	40021000 	andmi	r1, r2, r0
 800f400:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800f404:	e0ff000c 	rscs	r0, pc, ip
 800f408:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800f40c <bkp_data_write>:
 800f40c:	f1a0 030b 	sub.w	r3, r0, #11
 800f410:	2b1f      	cmp	r3, #31
 800f412:	d804      	bhi.n	800f41e <bkp_data_write+0x12>
 800f414:	4b07      	ldr	r3, [pc, #28]	; (800f434 <bkp_data_write+0x28>)
 800f416:	4403      	add	r3, r0
 800f418:	009b      	lsls	r3, r3, #2
 800f41a:	8019      	strh	r1, [r3, #0]
 800f41c:	4770      	bx	lr
 800f41e:	1e43      	subs	r3, r0, #1
 800f420:	2b09      	cmp	r3, #9
 800f422:	bf9f      	itttt	ls
 800f424:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800f428:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800f42c:	0080      	lslls	r0, r0, #2
 800f42e:	8001      	strhls	r1, [r0, #0]
 800f430:	4770      	bx	lr
 800f432:	bf00      	nop
 800f434:	10001b05 	andne	r1, r0, r5, lsl #22

0800f438 <bkp_data_read>:
 800f438:	f1a0 030b 	sub.w	r3, r0, #11
 800f43c:	2b1f      	cmp	r3, #31
 800f43e:	d805      	bhi.n	800f44c <bkp_data_read+0x14>
 800f440:	4b08      	ldr	r3, [pc, #32]	; (800f464 <bkp_data_read+0x2c>)
 800f442:	4403      	add	r3, r0
 800f444:	009b      	lsls	r3, r3, #2
 800f446:	8818      	ldrh	r0, [r3, #0]
 800f448:	b280      	uxth	r0, r0
 800f44a:	4770      	bx	lr
 800f44c:	1e43      	subs	r3, r0, #1
 800f44e:	2b09      	cmp	r3, #9
 800f450:	d806      	bhi.n	800f460 <bkp_data_read+0x28>
 800f452:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800f456:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 800f45a:	0080      	lsls	r0, r0, #2
 800f45c:	8800      	ldrh	r0, [r0, #0]
 800f45e:	e7f3      	b.n	800f448 <bkp_data_read+0x10>
 800f460:	2000      	movs	r0, #0
 800f462:	4770      	bx	lr
 800f464:	10001b05 	andne	r1, r0, r5, lsl #22

0800f468 <dma_deinit>:
 800f468:	4b0c      	ldr	r3, [pc, #48]	; (800f49c <dma_deinit+0x34>)
 800f46a:	4298      	cmp	r0, r3
 800f46c:	d102      	bne.n	800f474 <dma_deinit+0xc>
 800f46e:	2904      	cmp	r1, #4
 800f470:	d900      	bls.n	800f474 <dma_deinit+0xc>
 800f472:	e7fe      	b.n	800f472 <dma_deinit+0xa>
 800f474:	2314      	movs	r3, #20
 800f476:	fb03 0301 	mla	r3, r3, r1, r0
 800f47a:	689a      	ldr	r2, [r3, #8]
 800f47c:	0089      	lsls	r1, r1, #2
 800f47e:	f022 0201 	bic.w	r2, r2, #1
 800f482:	609a      	str	r2, [r3, #8]
 800f484:	2200      	movs	r2, #0
 800f486:	609a      	str	r2, [r3, #8]
 800f488:	60da      	str	r2, [r3, #12]
 800f48a:	611a      	str	r2, [r3, #16]
 800f48c:	615a      	str	r2, [r3, #20]
 800f48e:	230f      	movs	r3, #15
 800f490:	6842      	ldr	r2, [r0, #4]
 800f492:	408b      	lsls	r3, r1
 800f494:	4313      	orrs	r3, r2
 800f496:	6043      	str	r3, [r0, #4]
 800f498:	4770      	bx	lr
 800f49a:	bf00      	nop
 800f49c:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4a0 <dma_init>:
 800f4a0:	4b1b      	ldr	r3, [pc, #108]	; (800f510 <dma_init+0x70>)
 800f4a2:	b510      	push	{r4, lr}
 800f4a4:	4298      	cmp	r0, r3
 800f4a6:	d102      	bne.n	800f4ae <dma_init+0xe>
 800f4a8:	2904      	cmp	r1, #4
 800f4aa:	d900      	bls.n	800f4ae <dma_init+0xe>
 800f4ac:	e7fe      	b.n	800f4ac <dma_init+0xc>
 800f4ae:	2314      	movs	r3, #20
 800f4b0:	fb03 0101 	mla	r1, r3, r1, r0
 800f4b4:	6813      	ldr	r3, [r2, #0]
 800f4b6:	610b      	str	r3, [r1, #16]
 800f4b8:	6893      	ldr	r3, [r2, #8]
 800f4ba:	614b      	str	r3, [r1, #20]
 800f4bc:	8a13      	ldrh	r3, [r2, #16]
 800f4be:	60cb      	str	r3, [r1, #12]
 800f4c0:	68d4      	ldr	r4, [r2, #12]
 800f4c2:	6853      	ldr	r3, [r2, #4]
 800f4c4:	6888      	ldr	r0, [r1, #8]
 800f4c6:	4323      	orrs	r3, r4
 800f4c8:	6954      	ldr	r4, [r2, #20]
 800f4ca:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800f4ce:	4323      	orrs	r3, r4
 800f4d0:	4303      	orrs	r3, r0
 800f4d2:	608b      	str	r3, [r1, #8]
 800f4d4:	7e13      	ldrb	r3, [r2, #24]
 800f4d6:	2b01      	cmp	r3, #1
 800f4d8:	688b      	ldr	r3, [r1, #8]
 800f4da:	bf0c      	ite	eq
 800f4dc:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800f4e0:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800f4e4:	608b      	str	r3, [r1, #8]
 800f4e6:	7e53      	ldrb	r3, [r2, #25]
 800f4e8:	2b01      	cmp	r3, #1
 800f4ea:	688b      	ldr	r3, [r1, #8]
 800f4ec:	bf0c      	ite	eq
 800f4ee:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800f4f2:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800f4f6:	608b      	str	r3, [r1, #8]
 800f4f8:	7e93      	ldrb	r3, [r2, #26]
 800f4fa:	b923      	cbnz	r3, 800f506 <dma_init+0x66>
 800f4fc:	688b      	ldr	r3, [r1, #8]
 800f4fe:	f023 0310 	bic.w	r3, r3, #16
 800f502:	608b      	str	r3, [r1, #8]
 800f504:	bd10      	pop	{r4, pc}
 800f506:	688b      	ldr	r3, [r1, #8]
 800f508:	f043 0310 	orr.w	r3, r3, #16
 800f50c:	e7f9      	b.n	800f502 <dma_init+0x62>
 800f50e:	bf00      	nop
 800f510:	40020400 	andmi	r0, r2, r0, lsl #8

0800f514 <dma_circulation_disable>:
 800f514:	4b06      	ldr	r3, [pc, #24]	; (800f530 <dma_circulation_disable+0x1c>)
 800f516:	4298      	cmp	r0, r3
 800f518:	d102      	bne.n	800f520 <dma_circulation_disable+0xc>
 800f51a:	2904      	cmp	r1, #4
 800f51c:	d900      	bls.n	800f520 <dma_circulation_disable+0xc>
 800f51e:	e7fe      	b.n	800f51e <dma_circulation_disable+0xa>
 800f520:	2314      	movs	r3, #20
 800f522:	4359      	muls	r1, r3
 800f524:	3008      	adds	r0, #8
 800f526:	580b      	ldr	r3, [r1, r0]
 800f528:	f023 0320 	bic.w	r3, r3, #32
 800f52c:	500b      	str	r3, [r1, r0]
 800f52e:	4770      	bx	lr
 800f530:	40020400 	andmi	r0, r2, r0, lsl #8

0800f534 <dma_memory_to_memory_disable>:
 800f534:	4b06      	ldr	r3, [pc, #24]	; (800f550 <dma_memory_to_memory_disable+0x1c>)
 800f536:	4298      	cmp	r0, r3
 800f538:	d102      	bne.n	800f540 <dma_memory_to_memory_disable+0xc>
 800f53a:	2904      	cmp	r1, #4
 800f53c:	d900      	bls.n	800f540 <dma_memory_to_memory_disable+0xc>
 800f53e:	e7fe      	b.n	800f53e <dma_memory_to_memory_disable+0xa>
 800f540:	2314      	movs	r3, #20
 800f542:	4359      	muls	r1, r3
 800f544:	3008      	adds	r0, #8
 800f546:	580b      	ldr	r3, [r1, r0]
 800f548:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800f54c:	500b      	str	r3, [r1, r0]
 800f54e:	4770      	bx	lr
 800f550:	40020400 	andmi	r0, r2, r0, lsl #8

0800f554 <fmc_bank0_unlock>:
 800f554:	4b04      	ldr	r3, [pc, #16]	; (800f568 <fmc_bank0_unlock+0x14>)
 800f556:	691a      	ldr	r2, [r3, #16]
 800f558:	0612      	lsls	r2, r2, #24
 800f55a:	bf41      	itttt	mi
 800f55c:	4a03      	ldrmi	r2, [pc, #12]	; (800f56c <fmc_bank0_unlock+0x18>)
 800f55e:	605a      	strmi	r2, [r3, #4]
 800f560:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f564:	605a      	strmi	r2, [r3, #4]
 800f566:	4770      	bx	lr
 800f568:	40022000 	andmi	r2, r2, r0
 800f56c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f570 <fmc_bank1_unlock>:
 800f570:	4b04      	ldr	r3, [pc, #16]	; (800f584 <fmc_bank1_unlock+0x14>)
 800f572:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f574:	0612      	lsls	r2, r2, #24
 800f576:	bf41      	itttt	mi
 800f578:	4a03      	ldrmi	r2, [pc, #12]	; (800f588 <fmc_bank1_unlock+0x18>)
 800f57a:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f57c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f580:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f582:	4770      	bx	lr
 800f584:	40022000 	andmi	r2, r2, r0
 800f588:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f58c <fmc_bank0_lock>:
 800f58c:	4a02      	ldr	r2, [pc, #8]	; (800f598 <fmc_bank0_lock+0xc>)
 800f58e:	6913      	ldr	r3, [r2, #16]
 800f590:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f594:	6113      	str	r3, [r2, #16]
 800f596:	4770      	bx	lr
 800f598:	40022000 	andmi	r2, r2, r0

0800f59c <fmc_bank1_lock>:
 800f59c:	4a02      	ldr	r2, [pc, #8]	; (800f5a8 <fmc_bank1_lock+0xc>)
 800f59e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800f5a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f5a4:	6513      	str	r3, [r2, #80]	; 0x50
 800f5a6:	4770      	bx	lr
 800f5a8:	40022000 	andmi	r2, r2, r0

0800f5ac <fmc_bank0_state_get>:
 800f5ac:	4b07      	ldr	r3, [pc, #28]	; (800f5cc <fmc_bank0_state_get+0x20>)
 800f5ae:	68da      	ldr	r2, [r3, #12]
 800f5b0:	07d1      	lsls	r1, r2, #31
 800f5b2:	d407      	bmi.n	800f5c4 <fmc_bank0_state_get+0x18>
 800f5b4:	68da      	ldr	r2, [r3, #12]
 800f5b6:	06d2      	lsls	r2, r2, #27
 800f5b8:	d406      	bmi.n	800f5c8 <fmc_bank0_state_get+0x1c>
 800f5ba:	68d8      	ldr	r0, [r3, #12]
 800f5bc:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f5c0:	0040      	lsls	r0, r0, #1
 800f5c2:	4770      	bx	lr
 800f5c4:	2001      	movs	r0, #1
 800f5c6:	4770      	bx	lr
 800f5c8:	2003      	movs	r0, #3
 800f5ca:	4770      	bx	lr
 800f5cc:	40022000 	andmi	r2, r2, r0

0800f5d0 <fmc_bank1_state_get>:
 800f5d0:	4b07      	ldr	r3, [pc, #28]	; (800f5f0 <fmc_bank1_state_get+0x20>)
 800f5d2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f5d4:	07d1      	lsls	r1, r2, #31
 800f5d6:	d407      	bmi.n	800f5e8 <fmc_bank1_state_get+0x18>
 800f5d8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f5da:	06d2      	lsls	r2, r2, #27
 800f5dc:	d406      	bmi.n	800f5ec <fmc_bank1_state_get+0x1c>
 800f5de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f5e0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f5e4:	0040      	lsls	r0, r0, #1
 800f5e6:	4770      	bx	lr
 800f5e8:	2001      	movs	r0, #1
 800f5ea:	4770      	bx	lr
 800f5ec:	2003      	movs	r0, #3
 800f5ee:	4770      	bx	lr
 800f5f0:	40022000 	andmi	r2, r2, r0

0800f5f4 <fwdgt_enable>:
 800f5f4:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800f5f8:	4b01      	ldr	r3, [pc, #4]	; (800f600 <fwdgt_enable+0xc>)
 800f5fa:	601a      	str	r2, [r3, #0]
 800f5fc:	4770      	bx	lr
 800f5fe:	bf00      	nop
 800f600:	40003000 	andmi	r3, r0, r0

0800f604 <fwdgt_counter_reload>:
 800f604:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800f608:	4b01      	ldr	r3, [pc, #4]	; (800f610 <fwdgt_counter_reload+0xc>)
 800f60a:	601a      	str	r2, [r3, #0]
 800f60c:	4770      	bx	lr
 800f60e:	bf00      	nop
 800f610:	40003000 	andmi	r3, r0, r0

0800f614 <fwdgt_config>:
 800f614:	f245 5355 	movw	r3, #21845	; 0x5555
 800f618:	4a11      	ldr	r2, [pc, #68]	; (800f660 <fwdgt_config+0x4c>)
 800f61a:	b510      	push	{r4, lr}
 800f61c:	4c11      	ldr	r4, [pc, #68]	; (800f664 <fwdgt_config+0x50>)
 800f61e:	6013      	str	r3, [r2, #0]
 800f620:	68d3      	ldr	r3, [r2, #12]
 800f622:	3c01      	subs	r4, #1
 800f624:	f003 0301 	and.w	r3, r3, #1
 800f628:	d013      	beq.n	800f652 <fwdgt_config+0x3e>
 800f62a:	2b00      	cmp	r3, #0
 800f62c:	d1f8      	bne.n	800f620 <fwdgt_config+0xc>
 800f62e:	6051      	str	r1, [r2, #4]
 800f630:	490c      	ldr	r1, [pc, #48]	; (800f664 <fwdgt_config+0x50>)
 800f632:	4a0b      	ldr	r2, [pc, #44]	; (800f660 <fwdgt_config+0x4c>)
 800f634:	68d3      	ldr	r3, [r2, #12]
 800f636:	3901      	subs	r1, #1
 800f638:	f003 0302 	and.w	r3, r3, #2
 800f63c:	d00d      	beq.n	800f65a <fwdgt_config+0x46>
 800f63e:	2b00      	cmp	r3, #0
 800f640:	d1f8      	bne.n	800f634 <fwdgt_config+0x20>
 800f642:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800f646:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800f64a:	6090      	str	r0, [r2, #8]
 800f64c:	2001      	movs	r0, #1
 800f64e:	6013      	str	r3, [r2, #0]
 800f650:	e002      	b.n	800f658 <fwdgt_config+0x44>
 800f652:	2b00      	cmp	r3, #0
 800f654:	d0eb      	beq.n	800f62e <fwdgt_config+0x1a>
 800f656:	2000      	movs	r0, #0
 800f658:	bd10      	pop	{r4, pc}
 800f65a:	2b00      	cmp	r3, #0
 800f65c:	d1fb      	bne.n	800f656 <fwdgt_config+0x42>
 800f65e:	e7f0      	b.n	800f642 <fwdgt_config+0x2e>
 800f660:	40003000 	andmi	r3, r0, r0
 800f664:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f668 <gpio_init>:
 800f668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f66c:	f04f 0c0f 	mov.w	ip, #15
 800f670:	06cf      	lsls	r7, r1, #27
 800f672:	f04f 0400 	mov.w	r4, #0
 800f676:	f04f 0701 	mov.w	r7, #1
 800f67a:	f001 050f 	and.w	r5, r1, #15
 800f67e:	bf48      	it	mi
 800f680:	4315      	orrmi	r5, r2
 800f682:	fa23 f204 	lsr.w	r2, r3, r4
 800f686:	07d6      	lsls	r6, r2, #31
 800f688:	d510      	bpl.n	800f6ac <gpio_init+0x44>
 800f68a:	00a2      	lsls	r2, r4, #2
 800f68c:	6806      	ldr	r6, [r0, #0]
 800f68e:	fa0c fe02 	lsl.w	lr, ip, r2
 800f692:	ea26 060e 	bic.w	r6, r6, lr
 800f696:	fa05 f202 	lsl.w	r2, r5, r2
 800f69a:	2928      	cmp	r1, #40	; 0x28
 800f69c:	ea42 0206 	orr.w	r2, r2, r6
 800f6a0:	d128      	bne.n	800f6f4 <gpio_init+0x8c>
 800f6a2:	fa07 f604 	lsl.w	r6, r7, r4
 800f6a6:	401e      	ands	r6, r3
 800f6a8:	6146      	str	r6, [r0, #20]
 800f6aa:	6002      	str	r2, [r0, #0]
 800f6ac:	3401      	adds	r4, #1
 800f6ae:	2c08      	cmp	r4, #8
 800f6b0:	d1e7      	bne.n	800f682 <gpio_init+0x1a>
 800f6b2:	2600      	movs	r6, #0
 800f6b4:	f04f 0c0f 	mov.w	ip, #15
 800f6b8:	2701      	movs	r7, #1
 800f6ba:	f106 0208 	add.w	r2, r6, #8
 800f6be:	fa23 f402 	lsr.w	r4, r3, r2
 800f6c2:	07e4      	lsls	r4, r4, #31
 800f6c4:	d511      	bpl.n	800f6ea <gpio_init+0x82>
 800f6c6:	00b4      	lsls	r4, r6, #2
 800f6c8:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800f6cc:	fa0c f804 	lsl.w	r8, ip, r4
 800f6d0:	ea2e 0e08 	bic.w	lr, lr, r8
 800f6d4:	fa05 f404 	lsl.w	r4, r5, r4
 800f6d8:	2928      	cmp	r1, #40	; 0x28
 800f6da:	ea44 040e 	orr.w	r4, r4, lr
 800f6de:	d110      	bne.n	800f702 <gpio_init+0x9a>
 800f6e0:	fa07 f202 	lsl.w	r2, r7, r2
 800f6e4:	401a      	ands	r2, r3
 800f6e6:	6142      	str	r2, [r0, #20]
 800f6e8:	6044      	str	r4, [r0, #4]
 800f6ea:	3601      	adds	r6, #1
 800f6ec:	2e08      	cmp	r6, #8
 800f6ee:	d1e4      	bne.n	800f6ba <gpio_init+0x52>
 800f6f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6f4:	2948      	cmp	r1, #72	; 0x48
 800f6f6:	bf02      	ittt	eq
 800f6f8:	fa07 f604 	lsleq.w	r6, r7, r4
 800f6fc:	401e      	andeq	r6, r3
 800f6fe:	6106      	streq	r6, [r0, #16]
 800f700:	e7d3      	b.n	800f6aa <gpio_init+0x42>
 800f702:	2948      	cmp	r1, #72	; 0x48
 800f704:	bf02      	ittt	eq
 800f706:	fa07 f202 	lsleq.w	r2, r7, r2
 800f70a:	401a      	andeq	r2, r3
 800f70c:	6102      	streq	r2, [r0, #16]
 800f70e:	e7eb      	b.n	800f6e8 <gpio_init+0x80>

0800f710 <gpio_pin_remap_config>:
 800f710:	2800      	cmp	r0, #0
 800f712:	4a16      	ldr	r2, [pc, #88]	; (800f76c <gpio_pin_remap_config+0x5c>)
 800f714:	b530      	push	{r4, r5, lr}
 800f716:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800f71a:	bfb4      	ite	lt
 800f71c:	69d3      	ldrlt	r3, [r2, #28]
 800f71e:	6853      	ldrge	r3, [r2, #4]
 800f720:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800f724:	b284      	uxth	r4, r0
 800f726:	d110      	bne.n	800f74a <gpio_pin_remap_config+0x3a>
 800f728:	6855      	ldr	r5, [r2, #4]
 800f72a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f72e:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800f732:	6055      	str	r5, [r2, #4]
 800f734:	b119      	cbz	r1, 800f73e <gpio_pin_remap_config+0x2e>
 800f736:	0d42      	lsrs	r2, r0, #21
 800f738:	0112      	lsls	r2, r2, #4
 800f73a:	4094      	lsls	r4, r2
 800f73c:	4323      	orrs	r3, r4
 800f73e:	4a0b      	ldr	r2, [pc, #44]	; (800f76c <gpio_pin_remap_config+0x5c>)
 800f740:	2800      	cmp	r0, #0
 800f742:	bfb4      	ite	lt
 800f744:	61d3      	strlt	r3, [r2, #28]
 800f746:	6053      	strge	r3, [r2, #4]
 800f748:	bd30      	pop	{r4, r5, pc}
 800f74a:	02c2      	lsls	r2, r0, #11
 800f74c:	bf4d      	iteet	mi
 800f74e:	2203      	movmi	r2, #3
 800f750:	0d42      	lsrpl	r2, r0, #21
 800f752:	0112      	lslpl	r2, r2, #4
 800f754:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 800f758:	bf4c      	ite	mi
 800f75a:	40aa      	lslmi	r2, r5
 800f75c:	fa04 f202 	lslpl.w	r2, r4, r2
 800f760:	ea23 0302 	bic.w	r3, r3, r2
 800f764:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 800f768:	e7e4      	b.n	800f734 <gpio_pin_remap_config+0x24>
 800f76a:	bf00      	nop
 800f76c:	40010000 	andmi	r0, r1, r0

0800f770 <gpio_ethernet_phy_select>:
 800f770:	4b04      	ldr	r3, [pc, #16]	; (800f784 <gpio_ethernet_phy_select+0x14>)
 800f772:	685a      	ldr	r2, [r3, #4]
 800f774:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800f778:	605a      	str	r2, [r3, #4]
 800f77a:	685a      	ldr	r2, [r3, #4]
 800f77c:	4302      	orrs	r2, r0
 800f77e:	605a      	str	r2, [r3, #4]
 800f780:	4770      	bx	lr
 800f782:	bf00      	nop
 800f784:	40010000 	andmi	r0, r1, r0

0800f788 <pmu_backup_write_enable>:
 800f788:	4a02      	ldr	r2, [pc, #8]	; (800f794 <pmu_backup_write_enable+0xc>)
 800f78a:	6813      	ldr	r3, [r2, #0]
 800f78c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f790:	6013      	str	r3, [r2, #0]
 800f792:	4770      	bx	lr
 800f794:	40007000 	andmi	r7, r0, r0

0800f798 <rcu_periph_clock_enable>:
 800f798:	2201      	movs	r2, #1
 800f79a:	0983      	lsrs	r3, r0, #6
 800f79c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f7a0:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f7a4:	6819      	ldr	r1, [r3, #0]
 800f7a6:	f000 001f 	and.w	r0, r0, #31
 800f7aa:	4082      	lsls	r2, r0
 800f7ac:	430a      	orrs	r2, r1
 800f7ae:	601a      	str	r2, [r3, #0]
 800f7b0:	4770      	bx	lr

0800f7b2 <rcu_periph_clock_disable>:
 800f7b2:	2101      	movs	r1, #1
 800f7b4:	0983      	lsrs	r3, r0, #6
 800f7b6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f7ba:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f7be:	681a      	ldr	r2, [r3, #0]
 800f7c0:	f000 001f 	and.w	r0, r0, #31
 800f7c4:	4081      	lsls	r1, r0
 800f7c6:	ea22 0201 	bic.w	r2, r2, r1
 800f7ca:	601a      	str	r2, [r3, #0]
 800f7cc:	4770      	bx	lr

0800f7ce <rcu_periph_reset_enable>:
 800f7ce:	f7ff bfe3 	b.w	800f798 <rcu_periph_clock_enable>

0800f7d2 <rcu_periph_reset_disable>:
 800f7d2:	f7ff bfee 	b.w	800f7b2 <rcu_periph_clock_disable>
	...

0800f7d8 <rcu_ckout0_config>:
 800f7d8:	4a03      	ldr	r2, [pc, #12]	; (800f7e8 <rcu_ckout0_config+0x10>)
 800f7da:	6853      	ldr	r3, [r2, #4]
 800f7dc:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f7e0:	4303      	orrs	r3, r0
 800f7e2:	6053      	str	r3, [r2, #4]
 800f7e4:	4770      	bx	lr
 800f7e6:	bf00      	nop
 800f7e8:	40021000 	andmi	r1, r2, r0

0800f7ec <rcu_pll2_config>:
 800f7ec:	4b04      	ldr	r3, [pc, #16]	; (800f800 <rcu_pll2_config+0x14>)
 800f7ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7f0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800f7f4:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7f8:	4302      	orrs	r2, r0
 800f7fa:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7fc:	4770      	bx	lr
 800f7fe:	bf00      	nop
 800f800:	40021000 	andmi	r1, r2, r0

0800f804 <rcu_adc_clock_config>:
 800f804:	490c      	ldr	r1, [pc, #48]	; (800f838 <rcu_adc_clock_config+0x34>)
 800f806:	2805      	cmp	r0, #5
 800f808:	684b      	ldr	r3, [r1, #4]
 800f80a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f80e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800f812:	d006      	beq.n	800f822 <rcu_adc_clock_config+0x1e>
 800f814:	d803      	bhi.n	800f81e <rcu_adc_clock_config+0x1a>
 800f816:	2804      	cmp	r0, #4
 800f818:	d10a      	bne.n	800f830 <rcu_adc_clock_config+0x2c>
 800f81a:	604b      	str	r3, [r1, #4]
 800f81c:	4770      	bx	lr
 800f81e:	2807      	cmp	r0, #7
 800f820:	d1fb      	bne.n	800f81a <rcu_adc_clock_config+0x16>
 800f822:	4a06      	ldr	r2, [pc, #24]	; (800f83c <rcu_adc_clock_config+0x38>)
 800f824:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 800f828:	4313      	orrs	r3, r2
 800f82a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800f82e:	e7f4      	b.n	800f81a <rcu_adc_clock_config+0x16>
 800f830:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800f834:	e7f1      	b.n	800f81a <rcu_adc_clock_config+0x16>
 800f836:	bf00      	nop
 800f838:	40021000 	andmi	r1, r2, r0
 800f83c:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0800f840 <rcu_flag_get>:
 800f840:	0983      	lsrs	r3, r0, #6
 800f842:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f846:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f84a:	681a      	ldr	r2, [r3, #0]
 800f84c:	2301      	movs	r3, #1
 800f84e:	f000 001f 	and.w	r0, r0, #31
 800f852:	4083      	lsls	r3, r0
 800f854:	4213      	tst	r3, r2
 800f856:	bf14      	ite	ne
 800f858:	2001      	movne	r0, #1
 800f85a:	2000      	moveq	r0, #0
 800f85c:	4770      	bx	lr
	...

0800f860 <rcu_osci_stab_wait>:
 800f860:	281a      	cmp	r0, #26
 800f862:	b508      	push	{r3, lr}
 800f864:	d051      	beq.n	800f90a <rcu_osci_stab_wait+0xaa>
 800f866:	d806      	bhi.n	800f876 <rcu_osci_stab_wait+0x16>
 800f868:	2810      	cmp	r0, #16
 800f86a:	d015      	beq.n	800f898 <rcu_osci_stab_wait+0x38>
 800f86c:	2818      	cmp	r0, #24
 800f86e:	d043      	beq.n	800f8f8 <rcu_osci_stab_wait+0x98>
 800f870:	b368      	cbz	r0, 800f8ce <rcu_osci_stab_wait+0x6e>
 800f872:	2000      	movs	r0, #0
 800f874:	bd08      	pop	{r3, pc}
 800f876:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800f87a:	d01c      	beq.n	800f8b6 <rcu_osci_stab_wait+0x56>
 800f87c:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 800f880:	d02f      	beq.n	800f8e2 <rcu_osci_stab_wait+0x82>
 800f882:	281c      	cmp	r0, #28
 800f884:	d1f5      	bne.n	800f872 <rcu_osci_stab_wait+0x12>
 800f886:	4925      	ldr	r1, [pc, #148]	; (800f91c <rcu_osci_stab_wait+0xbc>)
 800f888:	201d      	movs	r0, #29
 800f88a:	f7ff ffd9 	bl	800f840 <rcu_flag_get>
 800f88e:	b908      	cbnz	r0, 800f894 <rcu_osci_stab_wait+0x34>
 800f890:	3901      	subs	r1, #1
 800f892:	d1f9      	bne.n	800f888 <rcu_osci_stab_wait+0x28>
 800f894:	201d      	movs	r0, #29
 800f896:	e008      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f898:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f89c:	2011      	movs	r0, #17
 800f89e:	f7ff ffcf 	bl	800f840 <rcu_flag_get>
 800f8a2:	b908      	cbnz	r0, 800f8a8 <rcu_osci_stab_wait+0x48>
 800f8a4:	3901      	subs	r1, #1
 800f8a6:	d1f9      	bne.n	800f89c <rcu_osci_stab_wait+0x3c>
 800f8a8:	2011      	movs	r0, #17
 800f8aa:	f7ff ffc9 	bl	800f840 <rcu_flag_get>
 800f8ae:	3800      	subs	r0, #0
 800f8b0:	bf18      	it	ne
 800f8b2:	2001      	movne	r0, #1
 800f8b4:	e7de      	b.n	800f874 <rcu_osci_stab_wait+0x14>
 800f8b6:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 800f8ba:	f640 0001 	movw	r0, #2049	; 0x801
 800f8be:	f7ff ffbf 	bl	800f840 <rcu_flag_get>
 800f8c2:	b908      	cbnz	r0, 800f8c8 <rcu_osci_stab_wait+0x68>
 800f8c4:	3901      	subs	r1, #1
 800f8c6:	d1f8      	bne.n	800f8ba <rcu_osci_stab_wait+0x5a>
 800f8c8:	f640 0001 	movw	r0, #2049	; 0x801
 800f8cc:	e7ed      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f8ce:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800f8d2:	2001      	movs	r0, #1
 800f8d4:	f7ff ffb4 	bl	800f840 <rcu_flag_get>
 800f8d8:	b908      	cbnz	r0, 800f8de <rcu_osci_stab_wait+0x7e>
 800f8da:	3901      	subs	r1, #1
 800f8dc:	d1f9      	bne.n	800f8d2 <rcu_osci_stab_wait+0x72>
 800f8de:	2001      	movs	r0, #1
 800f8e0:	e7e3      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f8e2:	490e      	ldr	r1, [pc, #56]	; (800f91c <rcu_osci_stab_wait+0xbc>)
 800f8e4:	f640 1001 	movw	r0, #2305	; 0x901
 800f8e8:	f7ff ffaa 	bl	800f840 <rcu_flag_get>
 800f8ec:	b908      	cbnz	r0, 800f8f2 <rcu_osci_stab_wait+0x92>
 800f8ee:	3901      	subs	r1, #1
 800f8f0:	d1f8      	bne.n	800f8e4 <rcu_osci_stab_wait+0x84>
 800f8f2:	f640 1001 	movw	r0, #2305	; 0x901
 800f8f6:	e7d8      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f8f8:	4908      	ldr	r1, [pc, #32]	; (800f91c <rcu_osci_stab_wait+0xbc>)
 800f8fa:	2019      	movs	r0, #25
 800f8fc:	f7ff ffa0 	bl	800f840 <rcu_flag_get>
 800f900:	b908      	cbnz	r0, 800f906 <rcu_osci_stab_wait+0xa6>
 800f902:	3901      	subs	r1, #1
 800f904:	d1f9      	bne.n	800f8fa <rcu_osci_stab_wait+0x9a>
 800f906:	2019      	movs	r0, #25
 800f908:	e7cf      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f90a:	4904      	ldr	r1, [pc, #16]	; (800f91c <rcu_osci_stab_wait+0xbc>)
 800f90c:	201b      	movs	r0, #27
 800f90e:	f7ff ff97 	bl	800f840 <rcu_flag_get>
 800f912:	b908      	cbnz	r0, 800f918 <rcu_osci_stab_wait+0xb8>
 800f914:	3901      	subs	r1, #1
 800f916:	d1f9      	bne.n	800f90c <rcu_osci_stab_wait+0xac>
 800f918:	201b      	movs	r0, #27
 800f91a:	e7c6      	b.n	800f8aa <rcu_osci_stab_wait+0x4a>
 800f91c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f920 <rcu_osci_on>:
 800f920:	f7ff bf3a 	b.w	800f798 <rcu_periph_clock_enable>

0800f924 <rcu_clock_freq_get>:
 800f924:	4b3e      	ldr	r3, [pc, #248]	; (800fa20 <rcu_clock_freq_get+0xfc>)
 800f926:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f928:	4604      	mov	r4, r0
 800f92a:	461f      	mov	r7, r3
 800f92c:	b089      	sub	sp, #36	; 0x24
 800f92e:	ad04      	add	r5, sp, #16
 800f930:	f103 0610 	add.w	r6, r3, #16
 800f934:	462a      	mov	r2, r5
 800f936:	6818      	ldr	r0, [r3, #0]
 800f938:	6859      	ldr	r1, [r3, #4]
 800f93a:	3308      	adds	r3, #8
 800f93c:	c203      	stmia	r2!, {r0, r1}
 800f93e:	42b3      	cmp	r3, r6
 800f940:	4615      	mov	r5, r2
 800f942:	d1f7      	bne.n	800f934 <rcu_clock_freq_get+0x10>
 800f944:	466b      	mov	r3, sp
 800f946:	6938      	ldr	r0, [r7, #16]
 800f948:	6871      	ldr	r1, [r6, #4]
 800f94a:	4a36      	ldr	r2, [pc, #216]	; (800fa24 <rcu_clock_freq_get+0x100>)
 800f94c:	c303      	stmia	r3!, {r0, r1}
 800f94e:	c303      	stmia	r3!, {r0, r1}
 800f950:	6853      	ldr	r3, [r2, #4]
 800f952:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f956:	2b01      	cmp	r3, #1
 800f958:	d053      	beq.n	800fa02 <rcu_clock_freq_get+0xde>
 800f95a:	2b02      	cmp	r3, #2
 800f95c:	d153      	bne.n	800fa06 <rcu_clock_freq_get+0xe2>
 800f95e:	6853      	ldr	r3, [r2, #4]
 800f960:	03dd      	lsls	r5, r3, #15
 800f962:	d523      	bpl.n	800f9ac <rcu_clock_freq_get+0x88>
 800f964:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800f966:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800f96a:	4b2f      	ldr	r3, [pc, #188]	; (800fa28 <rcu_clock_freq_get+0x104>)
 800f96c:	d00e      	beq.n	800f98c <rcu_clock_freq_get+0x68>
 800f96e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f970:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800f972:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f976:	f3c0 2003 	ubfx	r0, r0, #8, #4
 800f97a:	3101      	adds	r1, #1
 800f97c:	280f      	cmp	r0, #15
 800f97e:	f100 0502 	add.w	r5, r0, #2
 800f982:	fbb3 f3f1 	udiv	r3, r3, r1
 800f986:	bf08      	it	eq
 800f988:	2514      	moveq	r5, #20
 800f98a:	436b      	muls	r3, r5
 800f98c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f98e:	f001 010f 	and.w	r1, r1, #15
 800f992:	3101      	adds	r1, #1
 800f994:	fbb3 f3f1 	udiv	r3, r3, r1
 800f998:	6851      	ldr	r1, [r2, #4]
 800f99a:	6850      	ldr	r0, [r2, #4]
 800f99c:	f3c1 4183 	ubfx	r1, r1, #18, #4
 800f9a0:	0080      	lsls	r0, r0, #2
 800f9a2:	d505      	bpl.n	800f9b0 <rcu_clock_freq_get+0x8c>
 800f9a4:	f041 0110 	orr.w	r1, r1, #16
 800f9a8:	1c48      	adds	r0, r1, #1
 800f9aa:	e007      	b.n	800f9bc <rcu_clock_freq_get+0x98>
 800f9ac:	4b1f      	ldr	r3, [pc, #124]	; (800fa2c <rcu_clock_freq_get+0x108>)
 800f9ae:	e7f3      	b.n	800f998 <rcu_clock_freq_get+0x74>
 800f9b0:	290f      	cmp	r1, #15
 800f9b2:	d0f9      	beq.n	800f9a8 <rcu_clock_freq_get+0x84>
 800f9b4:	290d      	cmp	r1, #13
 800f9b6:	f101 0002 	add.w	r0, r1, #2
 800f9ba:	d01d      	beq.n	800f9f8 <rcu_clock_freq_get+0xd4>
 800f9bc:	4358      	muls	r0, r3
 800f9be:	6853      	ldr	r3, [r2, #4]
 800f9c0:	6851      	ldr	r1, [r2, #4]
 800f9c2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800f9c6:	6852      	ldr	r2, [r2, #4]
 800f9c8:	3320      	adds	r3, #32
 800f9ca:	446b      	add	r3, sp
 800f9cc:	f3c1 2102 	ubfx	r1, r1, #8, #3
 800f9d0:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800f9d4:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 800f9d8:	3120      	adds	r1, #32
 800f9da:	3220      	adds	r2, #32
 800f9dc:	4469      	add	r1, sp
 800f9de:	446a      	add	r2, sp
 800f9e0:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800f9e4:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800f9e8:	fa20 f303 	lsr.w	r3, r0, r3
 800f9ec:	2c03      	cmp	r4, #3
 800f9ee:	d815      	bhi.n	800fa1c <rcu_clock_freq_get+0xf8>
 800f9f0:	e8df f004 	tbb	[pc, r4]
 800f9f4:	110e0b0c 	tstne	lr, ip, lsl #22
 800f9f8:	2006      	movs	r0, #6
 800f9fa:	0859      	lsrs	r1, r3, #1
 800f9fc:	fb00 1003 	mla	r0, r0, r3, r1
 800fa00:	e7dd      	b.n	800f9be <rcu_clock_freq_get+0x9a>
 800fa02:	4809      	ldr	r0, [pc, #36]	; (800fa28 <rcu_clock_freq_get+0x104>)
 800fa04:	e7db      	b.n	800f9be <rcu_clock_freq_get+0x9a>
 800fa06:	480a      	ldr	r0, [pc, #40]	; (800fa30 <rcu_clock_freq_get+0x10c>)
 800fa08:	e7d9      	b.n	800f9be <rcu_clock_freq_get+0x9a>
 800fa0a:	4618      	mov	r0, r3
 800fa0c:	b009      	add	sp, #36	; 0x24
 800fa0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa10:	fa23 f001 	lsr.w	r0, r3, r1
 800fa14:	e7fa      	b.n	800fa0c <rcu_clock_freq_get+0xe8>
 800fa16:	fa23 f002 	lsr.w	r0, r3, r2
 800fa1a:	e7f7      	b.n	800fa0c <rcu_clock_freq_get+0xe8>
 800fa1c:	2000      	movs	r0, #0
 800fa1e:	e7f5      	b.n	800fa0c <rcu_clock_freq_get+0xe8>
 800fa20:	08010fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp}
 800fa24:	40021000 	andmi	r1, r2, r0
 800fa28:	017d7840 	cmneq	sp, r0, asr #16
 800fa2c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800fa30:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0800fa34 <timer_deinit>:
 800fa34:	b508      	push	{r3, lr}
 800fa36:	4b2d      	ldr	r3, [pc, #180]	; (800faec <timer_deinit+0xb8>)
 800fa38:	4298      	cmp	r0, r3
 800fa3a:	d048      	beq.n	800face <timer_deinit+0x9a>
 800fa3c:	d816      	bhi.n	800fa6c <timer_deinit+0x38>
 800fa3e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fa42:	4298      	cmp	r0, r3
 800fa44:	d03c      	beq.n	800fac0 <timer_deinit+0x8c>
 800fa46:	d807      	bhi.n	800fa58 <timer_deinit+0x24>
 800fa48:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800fa4c:	d02a      	beq.n	800faa4 <timer_deinit+0x70>
 800fa4e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800fa52:	4298      	cmp	r0, r3
 800fa54:	d02d      	beq.n	800fab2 <timer_deinit+0x7e>
 800fa56:	bd08      	pop	{r3, pc}
 800fa58:	4b25      	ldr	r3, [pc, #148]	; (800faf0 <timer_deinit+0xbc>)
 800fa5a:	4298      	cmp	r0, r3
 800fa5c:	d1fb      	bne.n	800fa56 <timer_deinit+0x22>
 800fa5e:	f240 4003 	movw	r0, #1027	; 0x403
 800fa62:	f7ff feb4 	bl	800f7ce <rcu_periph_reset_enable>
 800fa66:	f240 4003 	movw	r0, #1027	; 0x403
 800fa6a:	e017      	b.n	800fa9c <timer_deinit+0x68>
 800fa6c:	4b21      	ldr	r3, [pc, #132]	; (800faf4 <timer_deinit+0xc0>)
 800fa6e:	4298      	cmp	r0, r3
 800fa70:	d00e      	beq.n	800fa90 <timer_deinit+0x5c>
 800fa72:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800fa76:	4298      	cmp	r0, r3
 800fa78:	d030      	beq.n	800fadc <timer_deinit+0xa8>
 800fa7a:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800fa7e:	4298      	cmp	r0, r3
 800fa80:	d1e9      	bne.n	800fa56 <timer_deinit+0x22>
 800fa82:	f240 4005 	movw	r0, #1029	; 0x405
 800fa86:	f7ff fea2 	bl	800f7ce <rcu_periph_reset_enable>
 800fa8a:	f240 4005 	movw	r0, #1029	; 0x405
 800fa8e:	e005      	b.n	800fa9c <timer_deinit+0x68>
 800fa90:	f240 300b 	movw	r0, #779	; 0x30b
 800fa94:	f7ff fe9b 	bl	800f7ce <rcu_periph_reset_enable>
 800fa98:	f240 300b 	movw	r0, #779	; 0x30b
 800fa9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800faa0:	f7ff be97 	b.w	800f7d2 <rcu_periph_reset_disable>
 800faa4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800faa8:	f7ff fe91 	bl	800f7ce <rcu_periph_reset_enable>
 800faac:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800fab0:	e7f4      	b.n	800fa9c <timer_deinit+0x68>
 800fab2:	f240 4001 	movw	r0, #1025	; 0x401
 800fab6:	f7ff fe8a 	bl	800f7ce <rcu_periph_reset_enable>
 800faba:	f240 4001 	movw	r0, #1025	; 0x401
 800fabe:	e7ed      	b.n	800fa9c <timer_deinit+0x68>
 800fac0:	f240 4002 	movw	r0, #1026	; 0x402
 800fac4:	f7ff fe83 	bl	800f7ce <rcu_periph_reset_enable>
 800fac8:	f240 4002 	movw	r0, #1026	; 0x402
 800facc:	e7e6      	b.n	800fa9c <timer_deinit+0x68>
 800face:	f240 4004 	movw	r0, #1028	; 0x404
 800fad2:	f7ff fe7c 	bl	800f7ce <rcu_periph_reset_enable>
 800fad6:	f240 4004 	movw	r0, #1028	; 0x404
 800fada:	e7df      	b.n	800fa9c <timer_deinit+0x68>
 800fadc:	f240 300d 	movw	r0, #781	; 0x30d
 800fae0:	f7ff fe75 	bl	800f7ce <rcu_periph_reset_enable>
 800fae4:	f240 300d 	movw	r0, #781	; 0x30d
 800fae8:	e7d8      	b.n	800fa9c <timer_deinit+0x68>
 800faea:	bf00      	nop
 800faec:	40001000 	andmi	r1, r0, r0
 800faf0:	40000c00 	andmi	r0, r0, r0, lsl #24
 800faf4:	40012c00 	andmi	r2, r1, r0, lsl #24

0800faf8 <timer_init>:
 800faf8:	880b      	ldrh	r3, [r1, #0]
 800fafa:	6283      	str	r3, [r0, #40]	; 0x28
 800fafc:	4b26      	ldr	r3, [pc, #152]	; (800fb98 <timer_init+0xa0>)
 800fafe:	4298      	cmp	r0, r3
 800fb00:	d018      	beq.n	800fb34 <timer_init+0x3c>
 800fb02:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 800fb06:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800fb0a:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800fb0e:	d011      	beq.n	800fb34 <timer_init+0x3c>
 800fb10:	4a22      	ldr	r2, [pc, #136]	; (800fb9c <timer_init+0xa4>)
 800fb12:	4290      	cmp	r0, r2
 800fb14:	d00e      	beq.n	800fb34 <timer_init+0x3c>
 800fb16:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800fb1a:	4290      	cmp	r0, r2
 800fb1c:	d00a      	beq.n	800fb34 <timer_init+0x3c>
 800fb1e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fb22:	4293      	cmp	r3, r2
 800fb24:	d006      	beq.n	800fb34 <timer_init+0x3c>
 800fb26:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800fb2a:	4293      	cmp	r3, r2
 800fb2c:	d002      	beq.n	800fb34 <timer_init+0x3c>
 800fb2e:	4b1c      	ldr	r3, [pc, #112]	; (800fba0 <timer_init+0xa8>)
 800fb30:	4298      	cmp	r0, r3
 800fb32:	d10f      	bne.n	800fb54 <timer_init+0x5c>
 800fb34:	6803      	ldr	r3, [r0, #0]
 800fb36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fb3a:	6003      	str	r3, [r0, #0]
 800fb3c:	884b      	ldrh	r3, [r1, #2]
 800fb3e:	6802      	ldr	r2, [r0, #0]
 800fb40:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fb44:	4313      	orrs	r3, r2
 800fb46:	6003      	str	r3, [r0, #0]
 800fb48:	888b      	ldrh	r3, [r1, #4]
 800fb4a:	6802      	ldr	r2, [r0, #0]
 800fb4c:	f003 0310 	and.w	r3, r3, #16
 800fb50:	4313      	orrs	r3, r2
 800fb52:	6003      	str	r3, [r0, #0]
 800fb54:	688b      	ldr	r3, [r1, #8]
 800fb56:	62c3      	str	r3, [r0, #44]	; 0x2c
 800fb58:	4b12      	ldr	r3, [pc, #72]	; (800fba4 <timer_init+0xac>)
 800fb5a:	4298      	cmp	r0, r3
 800fb5c:	d003      	beq.n	800fb66 <timer_init+0x6e>
 800fb5e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fb62:	4298      	cmp	r0, r3
 800fb64:	d104      	bne.n	800fb70 <timer_init+0x78>
 800fb66:	6943      	ldr	r3, [r0, #20]
 800fb68:	f043 0301 	orr.w	r3, r3, #1
 800fb6c:	6143      	str	r3, [r0, #20]
 800fb6e:	4770      	bx	lr
 800fb70:	6803      	ldr	r3, [r0, #0]
 800fb72:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800fb76:	6003      	str	r3, [r0, #0]
 800fb78:	898b      	ldrh	r3, [r1, #12]
 800fb7a:	6802      	ldr	r2, [r0, #0]
 800fb7c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800fb80:	4313      	orrs	r3, r2
 800fb82:	6003      	str	r3, [r0, #0]
 800fb84:	4b04      	ldr	r3, [pc, #16]	; (800fb98 <timer_init+0xa0>)
 800fb86:	4298      	cmp	r0, r3
 800fb88:	d002      	beq.n	800fb90 <timer_init+0x98>
 800fb8a:	4b04      	ldr	r3, [pc, #16]	; (800fb9c <timer_init+0xa4>)
 800fb8c:	4298      	cmp	r0, r3
 800fb8e:	d1ea      	bne.n	800fb66 <timer_init+0x6e>
 800fb90:	7b8b      	ldrb	r3, [r1, #14]
 800fb92:	6303      	str	r3, [r0, #48]	; 0x30
 800fb94:	e7e7      	b.n	800fb66 <timer_init+0x6e>
 800fb96:	bf00      	nop
 800fb98:	40012c00 	andmi	r2, r1, r0, lsl #24
 800fb9c:	40013400 	andmi	r3, r1, r0, lsl #8
 800fba0:	40002000 	andmi	r2, r0, r0
 800fba4:	40001000 	andmi	r1, r0, r0

0800fba8 <timer_enable>:
 800fba8:	6803      	ldr	r3, [r0, #0]
 800fbaa:	f043 0301 	orr.w	r3, r3, #1
 800fbae:	6003      	str	r3, [r0, #0]
 800fbb0:	4770      	bx	lr

0800fbb2 <timer_channel_output_mode_config>:
 800fbb2:	2903      	cmp	r1, #3
 800fbb4:	d81a      	bhi.n	800fbec <timer_channel_output_mode_config+0x3a>
 800fbb6:	e8df f001 	tbb	[pc, r1]
 800fbba:	1a120a02 	bne	84923ca <__exidx_end+0x47f8ba>
 800fbbe:	6983      	ldr	r3, [r0, #24]
 800fbc0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fbc4:	6183      	str	r3, [r0, #24]
 800fbc6:	6983      	ldr	r3, [r0, #24]
 800fbc8:	4313      	orrs	r3, r2
 800fbca:	6183      	str	r3, [r0, #24]
 800fbcc:	4770      	bx	lr
 800fbce:	6983      	ldr	r3, [r0, #24]
 800fbd0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fbd4:	6183      	str	r3, [r0, #24]
 800fbd6:	6983      	ldr	r3, [r0, #24]
 800fbd8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800fbdc:	e7f5      	b.n	800fbca <timer_channel_output_mode_config+0x18>
 800fbde:	69c3      	ldr	r3, [r0, #28]
 800fbe0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fbe4:	61c3      	str	r3, [r0, #28]
 800fbe6:	69c3      	ldr	r3, [r0, #28]
 800fbe8:	4313      	orrs	r3, r2
 800fbea:	61c3      	str	r3, [r0, #28]
 800fbec:	4770      	bx	lr
 800fbee:	69c3      	ldr	r3, [r0, #28]
 800fbf0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fbf4:	61c3      	str	r3, [r0, #28]
 800fbf6:	69c3      	ldr	r3, [r0, #28]
 800fbf8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800fbfc:	e7f5      	b.n	800fbea <timer_channel_output_mode_config+0x38>

0800fbfe <timer_channel_output_pulse_value_config>:
 800fbfe:	2903      	cmp	r1, #3
 800fc00:	d80a      	bhi.n	800fc18 <timer_channel_output_pulse_value_config+0x1a>
 800fc02:	e8df f001 	tbb	[pc, r1]
 800fc06:	08060402 	stmdaeq	r6, {r1, sl}
 800fc0a:	6342      	str	r2, [r0, #52]	; 0x34
 800fc0c:	4770      	bx	lr
 800fc0e:	6382      	str	r2, [r0, #56]	; 0x38
 800fc10:	4770      	bx	lr
 800fc12:	63c2      	str	r2, [r0, #60]	; 0x3c
 800fc14:	4770      	bx	lr
 800fc16:	6402      	str	r2, [r0, #64]	; 0x40
 800fc18:	4770      	bx	lr

0800fc1a <timer_interrupt_enable>:
 800fc1a:	68c3      	ldr	r3, [r0, #12]
 800fc1c:	430b      	orrs	r3, r1
 800fc1e:	60c3      	str	r3, [r0, #12]
 800fc20:	4770      	bx	lr

0800fc22 <timer_interrupt_flag_clear>:
 800fc22:	43c9      	mvns	r1, r1
 800fc24:	6101      	str	r1, [r0, #16]
 800fc26:	4770      	bx	lr

0800fc28 <timer_flag_clear>:
 800fc28:	43c9      	mvns	r1, r1
 800fc2a:	6101      	str	r1, [r0, #16]
 800fc2c:	4770      	bx	lr
	...

0800fc30 <usart_deinit>:
 800fc30:	b508      	push	{r3, lr}
 800fc32:	4b1d      	ldr	r3, [pc, #116]	; (800fca8 <usart_deinit+0x78>)
 800fc34:	4298      	cmp	r0, r3
 800fc36:	d028      	beq.n	800fc8a <usart_deinit+0x5a>
 800fc38:	d808      	bhi.n	800fc4c <usart_deinit+0x1c>
 800fc3a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fc3e:	4298      	cmp	r0, r3
 800fc40:	d015      	beq.n	800fc6e <usart_deinit+0x3e>
 800fc42:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fc46:	4298      	cmp	r0, r3
 800fc48:	d018      	beq.n	800fc7c <usart_deinit+0x4c>
 800fc4a:	bd08      	pop	{r3, pc}
 800fc4c:	4b17      	ldr	r3, [pc, #92]	; (800fcac <usart_deinit+0x7c>)
 800fc4e:	4298      	cmp	r0, r3
 800fc50:	d022      	beq.n	800fc98 <usart_deinit+0x68>
 800fc52:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fc56:	4298      	cmp	r0, r3
 800fc58:	d1f7      	bne.n	800fc4a <usart_deinit+0x1a>
 800fc5a:	f240 300e 	movw	r0, #782	; 0x30e
 800fc5e:	f7ff fdb6 	bl	800f7ce <rcu_periph_reset_enable>
 800fc62:	f240 300e 	movw	r0, #782	; 0x30e
 800fc66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fc6a:	f7ff bdb2 	b.w	800f7d2 <rcu_periph_reset_disable>
 800fc6e:	f240 4011 	movw	r0, #1041	; 0x411
 800fc72:	f7ff fdac 	bl	800f7ce <rcu_periph_reset_enable>
 800fc76:	f240 4011 	movw	r0, #1041	; 0x411
 800fc7a:	e7f4      	b.n	800fc66 <usart_deinit+0x36>
 800fc7c:	f240 4012 	movw	r0, #1042	; 0x412
 800fc80:	f7ff fda5 	bl	800f7ce <rcu_periph_reset_enable>
 800fc84:	f240 4012 	movw	r0, #1042	; 0x412
 800fc88:	e7ed      	b.n	800fc66 <usart_deinit+0x36>
 800fc8a:	f240 4013 	movw	r0, #1043	; 0x413
 800fc8e:	f7ff fd9e 	bl	800f7ce <rcu_periph_reset_enable>
 800fc92:	f240 4013 	movw	r0, #1043	; 0x413
 800fc96:	e7e6      	b.n	800fc66 <usart_deinit+0x36>
 800fc98:	f240 4014 	movw	r0, #1044	; 0x414
 800fc9c:	f7ff fd97 	bl	800f7ce <rcu_periph_reset_enable>
 800fca0:	f240 4014 	movw	r0, #1044	; 0x414
 800fca4:	e7df      	b.n	800fc66 <usart_deinit+0x36>
 800fca6:	bf00      	nop
 800fca8:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fcac:	40005000 	andmi	r5, r0, r0

0800fcb0 <usart_baudrate_set>:
 800fcb0:	b538      	push	{r3, r4, r5, lr}
 800fcb2:	4b11      	ldr	r3, [pc, #68]	; (800fcf8 <usart_baudrate_set+0x48>)
 800fcb4:	4604      	mov	r4, r0
 800fcb6:	4298      	cmp	r0, r3
 800fcb8:	460d      	mov	r5, r1
 800fcba:	d01b      	beq.n	800fcf4 <usart_baudrate_set+0x44>
 800fcbc:	d809      	bhi.n	800fcd2 <usart_baudrate_set+0x22>
 800fcbe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fcc2:	4298      	cmp	r0, r3
 800fcc4:	d016      	beq.n	800fcf4 <usart_baudrate_set+0x44>
 800fcc6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fcca:	4298      	cmp	r0, r3
 800fccc:	d012      	beq.n	800fcf4 <usart_baudrate_set+0x44>
 800fcce:	2000      	movs	r0, #0
 800fcd0:	e009      	b.n	800fce6 <usart_baudrate_set+0x36>
 800fcd2:	4b0a      	ldr	r3, [pc, #40]	; (800fcfc <usart_baudrate_set+0x4c>)
 800fcd4:	4298      	cmp	r0, r3
 800fcd6:	d00d      	beq.n	800fcf4 <usart_baudrate_set+0x44>
 800fcd8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fcdc:	4298      	cmp	r0, r3
 800fcde:	d1f6      	bne.n	800fcce <usart_baudrate_set+0x1e>
 800fce0:	2003      	movs	r0, #3
 800fce2:	f7ff fe1f 	bl	800f924 <rcu_clock_freq_get>
 800fce6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 800fcea:	fbb1 f1f5 	udiv	r1, r1, r5
 800fcee:	b289      	uxth	r1, r1
 800fcf0:	60a1      	str	r1, [r4, #8]
 800fcf2:	bd38      	pop	{r3, r4, r5, pc}
 800fcf4:	2002      	movs	r0, #2
 800fcf6:	e7f4      	b.n	800fce2 <usart_baudrate_set+0x32>
 800fcf8:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fcfc:	40005000 	andmi	r5, r0, r0

0800fd00 <usart_parity_config>:
 800fd00:	68c3      	ldr	r3, [r0, #12]
 800fd02:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800fd06:	60c3      	str	r3, [r0, #12]
 800fd08:	68c3      	ldr	r3, [r0, #12]
 800fd0a:	430b      	orrs	r3, r1
 800fd0c:	60c3      	str	r3, [r0, #12]
 800fd0e:	4770      	bx	lr

0800fd10 <usart_word_length_set>:
 800fd10:	68c3      	ldr	r3, [r0, #12]
 800fd12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fd16:	60c3      	str	r3, [r0, #12]
 800fd18:	68c3      	ldr	r3, [r0, #12]
 800fd1a:	430b      	orrs	r3, r1
 800fd1c:	60c3      	str	r3, [r0, #12]
 800fd1e:	4770      	bx	lr

0800fd20 <usart_stop_bit_set>:
 800fd20:	6903      	ldr	r3, [r0, #16]
 800fd22:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800fd26:	6103      	str	r3, [r0, #16]
 800fd28:	6903      	ldr	r3, [r0, #16]
 800fd2a:	430b      	orrs	r3, r1
 800fd2c:	6103      	str	r3, [r0, #16]
 800fd2e:	4770      	bx	lr

0800fd30 <usart_transmit_config>:
 800fd30:	68c3      	ldr	r3, [r0, #12]
 800fd32:	f023 0308 	bic.w	r3, r3, #8
 800fd36:	430b      	orrs	r3, r1
 800fd38:	60c3      	str	r3, [r0, #12]
 800fd3a:	4770      	bx	lr

0800fd3c <usart_receive_config>:
 800fd3c:	68c3      	ldr	r3, [r0, #12]
 800fd3e:	f023 0304 	bic.w	r3, r3, #4
 800fd42:	430b      	orrs	r3, r1
 800fd44:	60c3      	str	r3, [r0, #12]
 800fd46:	4770      	bx	lr

0800fd48 <usart_hardware_flow_rts_config>:
 800fd48:	6943      	ldr	r3, [r0, #20]
 800fd4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800fd4e:	430b      	orrs	r3, r1
 800fd50:	6143      	str	r3, [r0, #20]
 800fd52:	4770      	bx	lr

0800fd54 <usart_hardware_flow_cts_config>:
 800fd54:	6943      	ldr	r3, [r0, #20]
 800fd56:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800fd5a:	430b      	orrs	r3, r1
 800fd5c:	6143      	str	r3, [r0, #20]
 800fd5e:	4770      	bx	lr

0800fd60 <usart_dma_transmit_config>:
 800fd60:	6943      	ldr	r3, [r0, #20]
 800fd62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fd66:	430b      	orrs	r3, r1
 800fd68:	6143      	str	r3, [r0, #20]
 800fd6a:	4770      	bx	lr

0800fd6c <usart_flag_get>:
 800fd6c:	098b      	lsrs	r3, r1, #6
 800fd6e:	581a      	ldr	r2, [r3, r0]
 800fd70:	2301      	movs	r3, #1
 800fd72:	f001 011f 	and.w	r1, r1, #31
 800fd76:	408b      	lsls	r3, r1
 800fd78:	4213      	tst	r3, r2
 800fd7a:	bf14      	ite	ne
 800fd7c:	2001      	movne	r0, #1
 800fd7e:	2000      	moveq	r0, #0
 800fd80:	4770      	bx	lr

0800fd82 <usart_interrupt_enable>:
 800fd82:	2301      	movs	r3, #1
 800fd84:	b510      	push	{r4, lr}
 800fd86:	f3c1 1289 	ubfx	r2, r1, #6, #10
 800fd8a:	5814      	ldr	r4, [r2, r0]
 800fd8c:	f001 011f 	and.w	r1, r1, #31
 800fd90:	408b      	lsls	r3, r1
 800fd92:	4323      	orrs	r3, r4
 800fd94:	5013      	str	r3, [r2, r0]
 800fd96:	bd10      	pop	{r4, pc}

0800fd98 <usart_interrupt_disable>:
 800fd98:	2201      	movs	r2, #1
 800fd9a:	b510      	push	{r4, lr}
 800fd9c:	f3c1 1489 	ubfx	r4, r1, #6, #10
 800fda0:	5823      	ldr	r3, [r4, r0]
 800fda2:	f001 011f 	and.w	r1, r1, #31
 800fda6:	408a      	lsls	r2, r1
 800fda8:	ea23 0302 	bic.w	r3, r3, r2
 800fdac:	5023      	str	r3, [r4, r0]
 800fdae:	bd10      	pop	{r4, pc}

0800fdb0 <usart_interrupt_flag_clear>:
 800fdb0:	2201      	movs	r2, #1
 800fdb2:	b510      	push	{r4, lr}
 800fdb4:	0d8c      	lsrs	r4, r1, #22
 800fdb6:	5823      	ldr	r3, [r4, r0]
 800fdb8:	f3c1 4104 	ubfx	r1, r1, #16, #5
 800fdbc:	408a      	lsls	r2, r1
 800fdbe:	ea23 0302 	bic.w	r3, r3, r2
 800fdc2:	5023      	str	r3, [r4, r0]
 800fdc4:	bd10      	pop	{r4, pc}
	...

0800fdc8 <emac_eth_recv>:
 800fdc8:	b538      	push	{r3, r4, r5, lr}
 800fdca:	4605      	mov	r5, r0
 800fdcc:	f000 ffe0 	bl	8010d90 <enet_rxframe_size_get>
 800fdd0:	4604      	mov	r4, r0
 800fdd2:	b138      	cbz	r0, 800fde4 <emac_eth_recv+0x1c>
 800fdd4:	4b05      	ldr	r3, [pc, #20]	; (800fdec <emac_eth_recv+0x24>)
 800fdd6:	2105      	movs	r1, #5
 800fdd8:	6818      	ldr	r0, [r3, #0]
 800fdda:	f000 ff88 	bl	8010cee <enet_desc_information_get>
 800fdde:	6028      	str	r0, [r5, #0]
 800fde0:	4620      	mov	r0, r4
 800fde2:	bd38      	pop	{r3, r4, r5, pc}
 800fde4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fde8:	e7fb      	b.n	800fde2 <emac_eth_recv+0x1a>
 800fdea:	bf00      	nop
 800fdec:	2000a104 	andcs	sl, r0, r4, lsl #2

0800fdf0 <emac_free_pkt>:
 800fdf0:	2100      	movs	r1, #0
 800fdf2:	4608      	mov	r0, r1
 800fdf4:	f000 bcb8 	b.w	8010768 <enet_frame_receive>

0800fdf8 <emac_eth_send>:
 800fdf8:	f000 bcf6 	b.w	80107e8 <enet_frame_transmit>

0800fdfc <gd32_adc_init()>:
 800fdfc:	b510      	push	{r4, lr}
 800fdfe:	f240 6009 	movw	r0, #1545	; 0x609
 800fe02:	4c21      	ldr	r4, [pc, #132]	; (800fe88 <gd32_adc_init()+0x8c>)
 800fe04:	f7ff fcc8 	bl	800f798 <rcu_periph_clock_enable>
 800fe08:	2005      	movs	r0, #5
 800fe0a:	f7ff fcfb 	bl	800f804 <rcu_adc_clock_config>
 800fe0e:	4620      	mov	r0, r4
 800fe10:	2201      	movs	r2, #1
 800fe12:	f44f 7180 	mov.w	r1, #256	; 0x100
 800fe16:	f000 fb67 	bl	80104e8 <adc_special_function_config>
 800fe1a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 800fe1e:	4620      	mov	r0, r4
 800fe20:	2102      	movs	r1, #2
 800fe22:	f000 fc00 	bl	8010626 <adc_external_trigger_source_config>
 800fe26:	2100      	movs	r1, #0
 800fe28:	4620      	mov	r0, r4
 800fe2a:	f000 fb85 	bl	8010538 <adc_data_alignment_config>
 800fe2e:	2000      	movs	r0, #0
 800fe30:	f000 fb4a 	bl	80104c8 <adc_mode_config>
 800fe34:	2202      	movs	r2, #2
 800fe36:	4620      	mov	r0, r4
 800fe38:	4611      	mov	r1, r2
 800fe3a:	f000 fba9 	bl	8010590 <adc_channel_length_config>
 800fe3e:	4620      	mov	r0, r4
 800fe40:	2307      	movs	r3, #7
 800fe42:	2210      	movs	r2, #16
 800fe44:	2100      	movs	r1, #0
 800fe46:	f000 fbc0 	bl	80105ca <adc_inserted_channel_config>
 800fe4a:	2307      	movs	r3, #7
 800fe4c:	4620      	mov	r0, r4
 800fe4e:	2211      	movs	r2, #17
 800fe50:	2101      	movs	r1, #1
 800fe52:	f000 fbba 	bl	80105ca <adc_inserted_channel_config>
 800fe56:	2201      	movs	r2, #1
 800fe58:	2102      	movs	r1, #2
 800fe5a:	4620      	mov	r0, r4
 800fe5c:	f000 fbf4 	bl	8010648 <adc_external_trigger_config>
 800fe60:	f000 fb8c 	bl	801057c <adc_tempsensor_vrefint_enable>
 800fe64:	4620      	mov	r0, r4
 800fe66:	f000 fb70 	bl	801054a <adc_enable>
 800fe6a:	2100      	movs	r1, #0
 800fe6c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800fe70:	f000 fa58 	bl	8010324 <udelay(unsigned int, unsigned int)>
 800fe74:	4620      	mov	r0, r4
 800fe76:	f000 fb70 	bl	801055a <adc_calibration_enable>
 800fe7a:	4620      	mov	r0, r4
 800fe7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe80:	2102      	movs	r1, #2
 800fe82:	f000 bbfc 	b.w	801067e <adc_software_trigger_enable>
 800fe86:	bf00      	nop
 800fe88:	40012400 	andmi	r2, r1, r0, lsl #8

0800fe8c <_stop() [clone .isra.0]>:
 800fe8c:	b508      	push	{r3, lr}
 800fe8e:	4806      	ldr	r0, [pc, #24]	; (800fea8 <_stop() [clone .isra.0]+0x1c>)
 800fe90:	f001 f842 	bl	8010f18 <i2c_stop_on_bus>
 800fe94:	f640 73ff 	movw	r3, #4095	; 0xfff
 800fe98:	4904      	ldr	r1, [pc, #16]	; (800feac <_stop() [clone .isra.0]+0x20>)
 800fe9a:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 800fe9e:	0592      	lsls	r2, r2, #22
 800fea0:	d501      	bpl.n	800fea6 <_stop() [clone .isra.0]+0x1a>
 800fea2:	3b01      	subs	r3, #1
 800fea4:	d1f9      	bne.n	800fe9a <_stop() [clone .isra.0]+0xe>
 800fea6:	bd08      	pop	{r3, pc}
 800fea8:	40005400 	andmi	r5, r0, r0, lsl #8
 800feac:	40005000 	andmi	r5, r0, r0

0800feb0 <gd32_i2c_begin>:
 800feb0:	b510      	push	{r4, lr}
 800feb2:	f240 7015 	movw	r0, #1813	; 0x715
 800feb6:	f7ff fc6f 	bl	800f798 <rcu_periph_clock_enable>
 800feba:	4c15      	ldr	r4, [pc, #84]	; (800ff10 <gd32_i2c_begin+0x60>)
 800febc:	f240 6003 	movw	r0, #1539	; 0x603
 800fec0:	f7ff fc6a 	bl	800f798 <rcu_periph_clock_enable>
 800fec4:	f240 6003 	movw	r0, #1539	; 0x603
 800fec8:	f7ff fc66 	bl	800f798 <rcu_periph_clock_enable>
 800fecc:	4620      	mov	r0, r4
 800fece:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fed2:	2203      	movs	r2, #3
 800fed4:	211c      	movs	r1, #28
 800fed6:	f7ff fbc7 	bl	800f668 <gpio_init>
 800feda:	f44f 7300 	mov.w	r3, #512	; 0x200
 800fede:	2203      	movs	r2, #3
 800fee0:	4620      	mov	r0, r4
 800fee2:	211c      	movs	r1, #28
 800fee4:	f7ff fbc0 	bl	800f668 <gpio_init>
 800fee8:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 800feec:	2101      	movs	r1, #1
 800feee:	2002      	movs	r0, #2
 800fef0:	f7ff fc0e 	bl	800f710 <gpio_pin_remap_config>
 800fef4:	4620      	mov	r0, r4
 800fef6:	4907      	ldr	r1, [pc, #28]	; (800ff14 <gd32_i2c_begin+0x64>)
 800fef8:	2200      	movs	r2, #0
 800fefa:	f000 ff87 	bl	8010e0c <i2c_clock_config>
 800fefe:	4620      	mov	r0, r4
 800ff00:	f001 f800 	bl	8010f04 <i2c_enable>
 800ff04:	4620      	mov	r0, r4
 800ff06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff0a:	2101      	movs	r1, #1
 800ff0c:	f000 bfe0 	b.w	8010ed0 <i2c_ack_config>
 800ff10:	40010c00 	andmi	r0, r1, r0, lsl #24
 800ff14:	00061a80 	andeq	r1, r6, r0, lsl #21

0800ff18 <gd32_i2c_set_baudrate>:
 800ff18:	4601      	mov	r1, r0
 800ff1a:	2200      	movs	r2, #0
 800ff1c:	4801      	ldr	r0, [pc, #4]	; (800ff24 <gd32_i2c_set_baudrate+0xc>)
 800ff1e:	f000 bf75 	b.w	8010e0c <i2c_clock_config>
 800ff22:	bf00      	nop
 800ff24:	40005400 	andmi	r5, r0, r0, lsl #8

0800ff28 <gd32_i2c_set_address>:
 800ff28:	4b01      	ldr	r3, [pc, #4]	; (800ff30 <gd32_i2c_set_address+0x8>)
 800ff2a:	0040      	lsls	r0, r0, #1
 800ff2c:	7018      	strb	r0, [r3, #0]
 800ff2e:	4770      	bx	lr
 800ff30:	2000a0f8 	strdcs	sl, [r0], -r8

0800ff34 <gd32_i2c_write>:
 800ff34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff36:	4604      	mov	r4, r0
 800ff38:	460f      	mov	r7, r1
 800ff3a:	f640 75ff 	movw	r5, #4095	; 0xfff
 800ff3e:	4e2e      	ldr	r6, [pc, #184]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ff40:	f240 6101 	movw	r1, #1537	; 0x601
 800ff44:	4630      	mov	r0, r6
 800ff46:	f000 fff1 	bl	8010f2c <i2c_flag_get>
 800ff4a:	b9b0      	cbnz	r0, 800ff7a <gd32_i2c_write+0x46>
 800ff4c:	482a      	ldr	r0, [pc, #168]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ff4e:	f000 ffde 	bl	8010f0e <i2c_start_on_bus>
 800ff52:	f640 75ff 	movw	r5, #4095	; 0xfff
 800ff56:	4e28      	ldr	r6, [pc, #160]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ff58:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800ff5c:	4630      	mov	r0, r6
 800ff5e:	f000 ffe5 	bl	8010f2c <i2c_flag_get>
 800ff62:	b190      	cbz	r0, 800ff8a <gd32_i2c_write+0x56>
 800ff64:	4b25      	ldr	r3, [pc, #148]	; (800fffc <gd32_i2c_write+0xc8>)
 800ff66:	f06f 0201 	mvn.w	r2, #1
 800ff6a:	7819      	ldrb	r1, [r3, #0]
 800ff6c:	4822      	ldr	r0, [pc, #136]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ff6e:	f000 ffc1 	bl	8010ef4 <i2c_master_addressing>
 800ff72:	f640 75ff 	movw	r5, #4095	; 0xfff
 800ff76:	4e20      	ldr	r6, [pc, #128]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ff78:	e00c      	b.n	800ff94 <gd32_i2c_write+0x60>
 800ff7a:	3d01      	subs	r5, #1
 800ff7c:	d1e0      	bne.n	800ff40 <gd32_i2c_write+0xc>
 800ff7e:	f7ff ff85 	bl	800fe8c <_stop() [clone .isra.0]>
 800ff82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ff86:	4240      	negs	r0, r0
 800ff88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ff8a:	3d01      	subs	r5, #1
 800ff8c:	d1e4      	bne.n	800ff58 <gd32_i2c_write+0x24>
 800ff8e:	e7f6      	b.n	800ff7e <gd32_i2c_write+0x4a>
 800ff90:	3d01      	subs	r5, #1
 800ff92:	d0f4      	beq.n	800ff7e <gd32_i2c_write+0x4a>
 800ff94:	f240 5101 	movw	r1, #1281	; 0x501
 800ff98:	4630      	mov	r0, r6
 800ff9a:	f000 ffc7 	bl	8010f2c <i2c_flag_get>
 800ff9e:	2800      	cmp	r0, #0
 800ffa0:	d0f6      	beq.n	800ff90 <gd32_i2c_write+0x5c>
 800ffa2:	f240 5101 	movw	r1, #1281	; 0x501
 800ffa6:	4814      	ldr	r0, [pc, #80]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ffa8:	f000 ffcb 	bl	8010f42 <i2c_flag_clear>
 800ffac:	f640 75ff 	movw	r5, #4095	; 0xfff
 800ffb0:	4e11      	ldr	r6, [pc, #68]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ffb2:	f240 5107 	movw	r1, #1287	; 0x507
 800ffb6:	4630      	mov	r0, r6
 800ffb8:	f000 ffb8 	bl	8010f2c <i2c_flag_get>
 800ffbc:	2801      	cmp	r0, #1
 800ffbe:	d107      	bne.n	800ffd0 <gd32_i2c_write+0x9c>
 800ffc0:	4e0d      	ldr	r6, [pc, #52]	; (800fff8 <gd32_i2c_write+0xc4>)
 800ffc2:	4427      	add	r7, r4
 800ffc4:	42a7      	cmp	r7, r4
 800ffc6:	d106      	bne.n	800ffd6 <gd32_i2c_write+0xa2>
 800ffc8:	f7ff ff60 	bl	800fe8c <_stop() [clone .isra.0]>
 800ffcc:	2000      	movs	r0, #0
 800ffce:	e7da      	b.n	800ff86 <gd32_i2c_write+0x52>
 800ffd0:	3d01      	subs	r5, #1
 800ffd2:	d1ee      	bne.n	800ffb2 <gd32_i2c_write+0x7e>
 800ffd4:	e7d3      	b.n	800ff7e <gd32_i2c_write+0x4a>
 800ffd6:	4630      	mov	r0, r6
 800ffd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ffdc:	f000 ffa1 	bl	8010f22 <i2c_data_transmit>
 800ffe0:	f640 75ff 	movw	r5, #4095	; 0xfff
 800ffe4:	f240 5102 	movw	r1, #1282	; 0x502
 800ffe8:	4630      	mov	r0, r6
 800ffea:	f000 ff9f 	bl	8010f2c <i2c_flag_get>
 800ffee:	2800      	cmp	r0, #0
 800fff0:	d1e8      	bne.n	800ffc4 <gd32_i2c_write+0x90>
 800fff2:	3d01      	subs	r5, #1
 800fff4:	d1f6      	bne.n	800ffe4 <gd32_i2c_write+0xb0>
 800fff6:	e7c2      	b.n	800ff7e <gd32_i2c_write+0x4a>
 800fff8:	40005400 	andmi	r5, r0, r0, lsl #8
 800fffc:	2000a0f8 	strdcs	sl, [r0], -r8

08010000 <gd32_i2c_read>:
 8010000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010004:	4680      	mov	r8, r0
 8010006:	460c      	mov	r4, r1
 8010008:	f640 76ff 	movw	r6, #4095	; 0xfff
 801000c:	4f4b      	ldr	r7, [pc, #300]	; (801013c <gd32_i2c_read+0x13c>)
 801000e:	f240 6101 	movw	r1, #1537	; 0x601
 8010012:	4638      	mov	r0, r7
 8010014:	f000 ff8a 	bl	8010f2c <i2c_flag_get>
 8010018:	4605      	mov	r5, r0
 801001a:	bb08      	cbnz	r0, 8010060 <gd32_i2c_read+0x60>
 801001c:	2c02      	cmp	r4, #2
 801001e:	d103      	bne.n	8010028 <gd32_i2c_read+0x28>
 8010020:	4601      	mov	r1, r0
 8010022:	4846      	ldr	r0, [pc, #280]	; (801013c <gd32_i2c_read+0x13c>)
 8010024:	f000 ff5d 	bl	8010ee2 <i2c_ackpos_config>
 8010028:	4844      	ldr	r0, [pc, #272]	; (801013c <gd32_i2c_read+0x13c>)
 801002a:	f000 ff70 	bl	8010f0e <i2c_start_on_bus>
 801002e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010032:	4f42      	ldr	r7, [pc, #264]	; (801013c <gd32_i2c_read+0x13c>)
 8010034:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010038:	4638      	mov	r0, r7
 801003a:	f000 ff77 	bl	8010f2c <i2c_flag_get>
 801003e:	b1a8      	cbz	r0, 801006c <gd32_i2c_read+0x6c>
 8010040:	4b3f      	ldr	r3, [pc, #252]	; (8010140 <gd32_i2c_read+0x140>)
 8010042:	2201      	movs	r2, #1
 8010044:	7819      	ldrb	r1, [r3, #0]
 8010046:	483d      	ldr	r0, [pc, #244]	; (801013c <gd32_i2c_read+0x13c>)
 8010048:	f000 ff54 	bl	8010ef4 <i2c_master_addressing>
 801004c:	2c02      	cmp	r4, #2
 801004e:	d803      	bhi.n	8010058 <gd32_i2c_read+0x58>
 8010050:	2100      	movs	r1, #0
 8010052:	483a      	ldr	r0, [pc, #232]	; (801013c <gd32_i2c_read+0x13c>)
 8010054:	f000 ff3c 	bl	8010ed0 <i2c_ack_config>
 8010058:	f640 76ff 	movw	r6, #4095	; 0xfff
 801005c:	4f37      	ldr	r7, [pc, #220]	; (801013c <gd32_i2c_read+0x13c>)
 801005e:	e00a      	b.n	8010076 <gd32_i2c_read+0x76>
 8010060:	3e01      	subs	r6, #1
 8010062:	d1d4      	bne.n	801000e <gd32_i2c_read+0xe>
 8010064:	f7ff ff12 	bl	800fe8c <_stop() [clone .isra.0]>
 8010068:	2504      	movs	r5, #4
 801006a:	e04d      	b.n	8010108 <gd32_i2c_read+0x108>
 801006c:	3e01      	subs	r6, #1
 801006e:	d1e1      	bne.n	8010034 <gd32_i2c_read+0x34>
 8010070:	e7f8      	b.n	8010064 <gd32_i2c_read+0x64>
 8010072:	3e01      	subs	r6, #1
 8010074:	d0f6      	beq.n	8010064 <gd32_i2c_read+0x64>
 8010076:	f240 5101 	movw	r1, #1281	; 0x501
 801007a:	4638      	mov	r0, r7
 801007c:	f000 ff56 	bl	8010f2c <i2c_flag_get>
 8010080:	2800      	cmp	r0, #0
 8010082:	d0f6      	beq.n	8010072 <gd32_i2c_read+0x72>
 8010084:	f240 5101 	movw	r1, #1281	; 0x501
 8010088:	482c      	ldr	r0, [pc, #176]	; (801013c <gd32_i2c_read+0x13c>)
 801008a:	f000 ff5a 	bl	8010f42 <i2c_flag_clear>
 801008e:	2c01      	cmp	r4, #1
 8010090:	d102      	bne.n	8010098 <gd32_i2c_read+0x98>
 8010092:	482a      	ldr	r0, [pc, #168]	; (801013c <gd32_i2c_read+0x13c>)
 8010094:	f000 ff40 	bl	8010f18 <i2c_stop_on_bus>
 8010098:	f640 77ff 	movw	r7, #4095	; 0xfff
 801009c:	4e27      	ldr	r6, [pc, #156]	; (801013c <gd32_i2c_read+0x13c>)
 801009e:	e022      	b.n	80100e6 <gd32_i2c_read+0xe6>
 80100a0:	2c03      	cmp	r4, #3
 80100a2:	d134      	bne.n	801010e <gd32_i2c_read+0x10e>
 80100a4:	f640 79ff 	movw	r9, #4095	; 0xfff
 80100a8:	e002      	b.n	80100b0 <gd32_i2c_read+0xb0>
 80100aa:	f1b9 0901 	subs.w	r9, r9, #1
 80100ae:	d0d9      	beq.n	8010064 <gd32_i2c_read+0x64>
 80100b0:	f240 5102 	movw	r1, #1282	; 0x502
 80100b4:	4630      	mov	r0, r6
 80100b6:	f000 ff39 	bl	8010f2c <i2c_flag_get>
 80100ba:	2800      	cmp	r0, #0
 80100bc:	d0f5      	beq.n	80100aa <gd32_i2c_read+0xaa>
 80100be:	2100      	movs	r1, #0
 80100c0:	4630      	mov	r0, r6
 80100c2:	f000 ff05 	bl	8010ed0 <i2c_ack_config>
 80100c6:	f240 5106 	movw	r1, #1286	; 0x506
 80100ca:	4630      	mov	r0, r6
 80100cc:	f000 ff2e 	bl	8010f2c <i2c_flag_get>
 80100d0:	b138      	cbz	r0, 80100e2 <gd32_i2c_read+0xe2>
 80100d2:	4630      	mov	r0, r6
 80100d4:	f000 ff27 	bl	8010f26 <i2c_data_receive>
 80100d8:	f640 77ff 	movw	r7, #4095	; 0xfff
 80100dc:	f808 0b01 	strb.w	r0, [r8], #1
 80100e0:	3c01      	subs	r4, #1
 80100e2:	3f01      	subs	r7, #1
 80100e4:	d0be      	beq.n	8010064 <gd32_i2c_read+0x64>
 80100e6:	2c00      	cmp	r4, #0
 80100e8:	d1da      	bne.n	80100a0 <gd32_i2c_read+0xa0>
 80100ea:	f640 73ff 	movw	r3, #4095	; 0xfff
 80100ee:	4915      	ldr	r1, [pc, #84]	; (8010144 <gd32_i2c_read+0x144>)
 80100f0:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80100f4:	0592      	lsls	r2, r2, #22
 80100f6:	d41d      	bmi.n	8010134 <gd32_i2c_read+0x134>
 80100f8:	2101      	movs	r1, #1
 80100fa:	4810      	ldr	r0, [pc, #64]	; (801013c <gd32_i2c_read+0x13c>)
 80100fc:	f000 fee8 	bl	8010ed0 <i2c_ack_config>
 8010100:	2101      	movs	r1, #1
 8010102:	480e      	ldr	r0, [pc, #56]	; (801013c <gd32_i2c_read+0x13c>)
 8010104:	f000 feed 	bl	8010ee2 <i2c_ackpos_config>
 8010108:	4628      	mov	r0, r5
 801010a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801010e:	2c02      	cmp	r4, #2
 8010110:	d1d9      	bne.n	80100c6 <gd32_i2c_read+0xc6>
 8010112:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010116:	e002      	b.n	801011e <gd32_i2c_read+0x11e>
 8010118:	f1b9 0901 	subs.w	r9, r9, #1
 801011c:	d0a2      	beq.n	8010064 <gd32_i2c_read+0x64>
 801011e:	f240 5102 	movw	r1, #1282	; 0x502
 8010122:	4630      	mov	r0, r6
 8010124:	f000 ff02 	bl	8010f2c <i2c_flag_get>
 8010128:	2800      	cmp	r0, #0
 801012a:	d0f5      	beq.n	8010118 <gd32_i2c_read+0x118>
 801012c:	4630      	mov	r0, r6
 801012e:	f000 fef3 	bl	8010f18 <i2c_stop_on_bus>
 8010132:	e7c8      	b.n	80100c6 <gd32_i2c_read+0xc6>
 8010134:	3b01      	subs	r3, #1
 8010136:	d1db      	bne.n	80100f0 <gd32_i2c_read+0xf0>
 8010138:	e796      	b.n	8010068 <gd32_i2c_read+0x68>
 801013a:	bf00      	nop
 801013c:	40005400 	andmi	r5, r0, r0, lsl #8
 8010140:	2000a0f8 	strdcs	sl, [r0], -r8
 8010144:	40005000 	andmi	r5, r0, r0

08010148 <gd32_uart_begin>:
 8010148:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801014a:	461e      	mov	r6, r3
 801014c:	4b63      	ldr	r3, [pc, #396]	; (80102dc <gd32_uart_begin+0x194>)
 801014e:	4604      	mov	r4, r0
 8010150:	4298      	cmp	r0, r3
 8010152:	460f      	mov	r7, r1
 8010154:	4615      	mov	r5, r2
 8010156:	d03b      	beq.n	80101d0 <gd32_uart_begin+0x88>
 8010158:	d80a      	bhi.n	8010170 <gd32_uart_begin+0x28>
 801015a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801015e:	4298      	cmp	r0, r3
 8010160:	d02f      	beq.n	80101c2 <gd32_uart_begin+0x7a>
 8010162:	f240 7012 	movw	r0, #1810	; 0x712
 8010166:	f7ff fb17 	bl	800f798 <rcu_periph_clock_enable>
 801016a:	f240 6004 	movw	r0, #1540	; 0x604
 801016e:	e008      	b.n	8010182 <gd32_uart_begin+0x3a>
 8010170:	4b5b      	ldr	r3, [pc, #364]	; (80102e0 <gd32_uart_begin+0x198>)
 8010172:	4298      	cmp	r0, r3
 8010174:	d02f      	beq.n	80101d6 <gd32_uart_begin+0x8e>
 8010176:	f240 600e 	movw	r0, #1550	; 0x60e
 801017a:	f7ff fb0d 	bl	800f798 <rcu_periph_clock_enable>
 801017e:	f240 6003 	movw	r0, #1539	; 0x603
 8010182:	f7ff fb09 	bl	800f798 <rcu_periph_clock_enable>
 8010186:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801018a:	f7ff fb05 	bl	800f798 <rcu_periph_clock_enable>
 801018e:	4b53      	ldr	r3, [pc, #332]	; (80102dc <gd32_uart_begin+0x194>)
 8010190:	429c      	cmp	r4, r3
 8010192:	f000 8084 	beq.w	801029e <gd32_uart_begin+0x156>
 8010196:	d829      	bhi.n	80101ec <gd32_uart_begin+0xa4>
 8010198:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801019c:	429c      	cmp	r4, r3
 801019e:	d071      	beq.n	8010284 <gd32_uart_begin+0x13c>
 80101a0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80101a4:	2203      	movs	r2, #3
 80101a6:	2118      	movs	r1, #24
 80101a8:	484e      	ldr	r0, [pc, #312]	; (80102e4 <gd32_uart_begin+0x19c>)
 80101aa:	f7ff fa5d 	bl	800f668 <gpio_init>
 80101ae:	2104      	movs	r1, #4
 80101b0:	484c      	ldr	r0, [pc, #304]	; (80102e4 <gd32_uart_begin+0x19c>)
 80101b2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80101b6:	2203      	movs	r2, #3
 80101b8:	f7ff fa56 	bl	800f668 <gpio_init>
 80101bc:	2101      	movs	r1, #1
 80101be:	484a      	ldr	r0, [pc, #296]	; (80102e8 <gd32_uart_begin+0x1a0>)
 80101c0:	e025      	b.n	801020e <gd32_uart_begin+0xc6>
 80101c2:	f240 7011 	movw	r0, #1809	; 0x711
 80101c6:	f7ff fae7 	bl	800f798 <rcu_periph_clock_enable>
 80101ca:	f240 6002 	movw	r0, #1538	; 0x602
 80101ce:	e7d8      	b.n	8010182 <gd32_uart_begin+0x3a>
 80101d0:	f240 7013 	movw	r0, #1811	; 0x713
 80101d4:	e7c7      	b.n	8010166 <gd32_uart_begin+0x1e>
 80101d6:	f240 7014 	movw	r0, #1812	; 0x714
 80101da:	f7ff fadd 	bl	800f798 <rcu_periph_clock_enable>
 80101de:	f240 6004 	movw	r0, #1540	; 0x604
 80101e2:	f7ff fad9 	bl	800f798 <rcu_periph_clock_enable>
 80101e6:	f240 6005 	movw	r0, #1541	; 0x605
 80101ea:	e7ca      	b.n	8010182 <gd32_uart_begin+0x3a>
 80101ec:	4b3c      	ldr	r3, [pc, #240]	; (80102e0 <gd32_uart_begin+0x198>)
 80101ee:	429c      	cmp	r4, r3
 80101f0:	d062      	beq.n	80102b8 <gd32_uart_begin+0x170>
 80101f2:	2340      	movs	r3, #64	; 0x40
 80101f4:	2203      	movs	r2, #3
 80101f6:	2118      	movs	r1, #24
 80101f8:	483c      	ldr	r0, [pc, #240]	; (80102ec <gd32_uart_begin+0x1a4>)
 80101fa:	f7ff fa35 	bl	800f668 <gpio_init>
 80101fe:	2104      	movs	r1, #4
 8010200:	483a      	ldr	r0, [pc, #232]	; (80102ec <gd32_uart_begin+0x1a4>)
 8010202:	2380      	movs	r3, #128	; 0x80
 8010204:	2203      	movs	r2, #3
 8010206:	f7ff fa2f 	bl	800f668 <gpio_init>
 801020a:	2101      	movs	r1, #1
 801020c:	2004      	movs	r0, #4
 801020e:	f7ff fa7f 	bl	800f710 <gpio_pin_remap_config>
 8010212:	4620      	mov	r0, r4
 8010214:	f7ff fd0c 	bl	800fc30 <usart_deinit>
 8010218:	68e3      	ldr	r3, [r4, #12]
 801021a:	4639      	mov	r1, r7
 801021c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010220:	4620      	mov	r0, r4
 8010222:	60e3      	str	r3, [r4, #12]
 8010224:	f7ff fd44 	bl	800fcb0 <usart_baudrate_set>
 8010228:	f1a5 0309 	sub.w	r3, r5, #9
 801022c:	4259      	negs	r1, r3
 801022e:	4159      	adcs	r1, r3
 8010230:	4620      	mov	r0, r4
 8010232:	0309      	lsls	r1, r1, #12
 8010234:	f7ff fd6c 	bl	800fd10 <usart_word_length_set>
 8010238:	9906      	ldr	r1, [sp, #24]
 801023a:	4620      	mov	r0, r4
 801023c:	1e8a      	subs	r2, r1, #2
 801023e:	4251      	negs	r1, r2
 8010240:	4151      	adcs	r1, r2
 8010242:	0349      	lsls	r1, r1, #13
 8010244:	f7ff fd6c 	bl	800fd20 <usart_stop_bit_set>
 8010248:	2e01      	cmp	r6, #1
 801024a:	d041      	beq.n	80102d0 <gd32_uart_begin+0x188>
 801024c:	2e02      	cmp	r6, #2
 801024e:	d142      	bne.n	80102d6 <gd32_uart_begin+0x18e>
 8010250:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010254:	4620      	mov	r0, r4
 8010256:	f7ff fd53 	bl	800fd00 <usart_parity_config>
 801025a:	2100      	movs	r1, #0
 801025c:	4620      	mov	r0, r4
 801025e:	f7ff fd73 	bl	800fd48 <usart_hardware_flow_rts_config>
 8010262:	2100      	movs	r1, #0
 8010264:	4620      	mov	r0, r4
 8010266:	f7ff fd75 	bl	800fd54 <usart_hardware_flow_cts_config>
 801026a:	2104      	movs	r1, #4
 801026c:	4620      	mov	r0, r4
 801026e:	f7ff fd65 	bl	800fd3c <usart_receive_config>
 8010272:	2108      	movs	r1, #8
 8010274:	4620      	mov	r0, r4
 8010276:	f7ff fd5b 	bl	800fd30 <usart_transmit_config>
 801027a:	68e3      	ldr	r3, [r4, #12]
 801027c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010280:	60e3      	str	r3, [r4, #12]
 8010282:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010284:	2304      	movs	r3, #4
 8010286:	2203      	movs	r2, #3
 8010288:	2118      	movs	r1, #24
 801028a:	4819      	ldr	r0, [pc, #100]	; (80102f0 <gd32_uart_begin+0x1a8>)
 801028c:	f7ff f9ec 	bl	800f668 <gpio_init>
 8010290:	2308      	movs	r3, #8
 8010292:	2203      	movs	r2, #3
 8010294:	2104      	movs	r1, #4
 8010296:	4816      	ldr	r0, [pc, #88]	; (80102f0 <gd32_uart_begin+0x1a8>)
 8010298:	f7ff f9e6 	bl	800f668 <gpio_init>
 801029c:	e7b9      	b.n	8010212 <gd32_uart_begin+0xca>
 801029e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80102a2:	2203      	movs	r2, #3
 80102a4:	2118      	movs	r1, #24
 80102a6:	480f      	ldr	r0, [pc, #60]	; (80102e4 <gd32_uart_begin+0x19c>)
 80102a8:	f7ff f9de 	bl	800f668 <gpio_init>
 80102ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80102b0:	2203      	movs	r2, #3
 80102b2:	2104      	movs	r1, #4
 80102b4:	480b      	ldr	r0, [pc, #44]	; (80102e4 <gd32_uart_begin+0x19c>)
 80102b6:	e7ef      	b.n	8010298 <gd32_uart_begin+0x150>
 80102b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80102bc:	2203      	movs	r2, #3
 80102be:	2118      	movs	r1, #24
 80102c0:	4808      	ldr	r0, [pc, #32]	; (80102e4 <gd32_uart_begin+0x19c>)
 80102c2:	f7ff f9d1 	bl	800f668 <gpio_init>
 80102c6:	2304      	movs	r3, #4
 80102c8:	2203      	movs	r2, #3
 80102ca:	4619      	mov	r1, r3
 80102cc:	4809      	ldr	r0, [pc, #36]	; (80102f4 <gd32_uart_begin+0x1ac>)
 80102ce:	e7e3      	b.n	8010298 <gd32_uart_begin+0x150>
 80102d0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80102d4:	e7be      	b.n	8010254 <gd32_uart_begin+0x10c>
 80102d6:	2100      	movs	r1, #0
 80102d8:	e7bc      	b.n	8010254 <gd32_uart_begin+0x10c>
 80102da:	bf00      	nop
 80102dc:	40004c00 	andmi	r4, r0, r0, lsl #24
 80102e0:	40005000 	andmi	r5, r0, r0
 80102e4:	40011000 	andmi	r1, r1, r0
 80102e8:	00140010 	andseq	r0, r4, r0, lsl r0
 80102ec:	40010c00 	andmi	r0, r1, r0, lsl #24
 80102f0:	40010800 	andmi	r0, r1, r0, lsl #16
 80102f4:	40011400 	andmi	r1, r1, r0, lsl #8

080102f8 <micros_init()>:
 80102f8:	4770      	bx	lr
	...

080102fc <udelay_init()>:
 80102fc:	4a07      	ldr	r2, [pc, #28]	; (801031c <udelay_init()+0x20>)
 80102fe:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010302:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010306:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 801030a:	2200      	movs	r2, #0
 801030c:	4b04      	ldr	r3, [pc, #16]	; (8010320 <udelay_init()+0x24>)
 801030e:	605a      	str	r2, [r3, #4]
 8010310:	681a      	ldr	r2, [r3, #0]
 8010312:	f042 0201 	orr.w	r2, r2, #1
 8010316:	601a      	str	r2, [r3, #0]
 8010318:	4770      	bx	lr
 801031a:	bf00      	nop
 801031c:	e000ed00 	and	lr, r0, r0, lsl #26
 8010320:	e0001000 	and	r1, r0, r0

08010324 <udelay(unsigned int, unsigned int)>:
 8010324:	236c      	movs	r3, #108	; 0x6c
 8010326:	b530      	push	{r4, r5, lr}
 8010328:	4358      	muls	r0, r3
 801032a:	b909      	cbnz	r1, 8010330 <udelay(unsigned int, unsigned int)+0xc>
 801032c:	4b08      	ldr	r3, [pc, #32]	; (8010350 <udelay(unsigned int, unsigned int)+0x2c>)
 801032e:	6859      	ldr	r1, [r3, #4]
 8010330:	2300      	movs	r3, #0
 8010332:	4c07      	ldr	r4, [pc, #28]	; (8010350 <udelay(unsigned int, unsigned int)+0x2c>)
 8010334:	6862      	ldr	r2, [r4, #4]
 8010336:	4291      	cmp	r1, r2
 8010338:	d0fc      	beq.n	8010334 <udelay(unsigned int, unsigned int)+0x10>
 801033a:	bf2a      	itet	cs
 801033c:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8010340:	189b      	addcc	r3, r3, r2
 8010342:	195b      	addcs	r3, r3, r5
 8010344:	1a5b      	subs	r3, r3, r1
 8010346:	4283      	cmp	r3, r0
 8010348:	d300      	bcc.n	801034c <udelay(unsigned int, unsigned int)+0x28>
 801034a:	bd30      	pop	{r4, r5, pc}
 801034c:	4611      	mov	r1, r2
 801034e:	e7f1      	b.n	8010334 <udelay(unsigned int, unsigned int)+0x10>
 8010350:	e0001000 	and	r1, r0, r0

08010354 <emac_start(unsigned char*)>:
 8010354:	b538      	push	{r3, r4, r5, lr}
 8010356:	4605      	mov	r5, r0
 8010358:	f240 6002 	movw	r0, #1538	; 0x602
 801035c:	f7ff fa1c 	bl	800f798 <rcu_periph_clock_enable>
 8010360:	f240 6003 	movw	r0, #1539	; 0x603
 8010364:	f7ff fa18 	bl	800f798 <rcu_periph_clock_enable>
 8010368:	f240 6004 	movw	r0, #1540	; 0x604
 801036c:	f7ff fa14 	bl	800f798 <rcu_periph_clock_enable>
 8010370:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010374:	f7ff fa10 	bl	800f798 <rcu_periph_clock_enable>
 8010378:	f44f 7380 	mov.w	r3, #256	; 0x100
 801037c:	2203      	movs	r2, #3
 801037e:	2118      	movs	r1, #24
 8010380:	4843      	ldr	r0, [pc, #268]	; (8010490 <emac_start(unsigned char*)+0x13c>)
 8010382:	f7ff f971 	bl	800f668 <gpio_init>
 8010386:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 801038a:	f7ff fa2f 	bl	800f7ec <rcu_pll2_config>
 801038e:	201c      	movs	r0, #28
 8010390:	f7ff fac6 	bl	800f920 <rcu_osci_on>
 8010394:	201c      	movs	r0, #28
 8010396:	f7ff fa63 	bl	800f860 <rcu_osci_stab_wait>
 801039a:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 801039e:	f7ff fa1b 	bl	800f7d8 <rcu_ckout0_config>
 80103a2:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80103a6:	f7ff f9e3 	bl	800f770 <gpio_ethernet_phy_select>
 80103aa:	2302      	movs	r3, #2
 80103ac:	2203      	movs	r2, #3
 80103ae:	2104      	movs	r1, #4
 80103b0:	4837      	ldr	r0, [pc, #220]	; (8010490 <emac_start(unsigned char*)+0x13c>)
 80103b2:	f7ff f959 	bl	800f668 <gpio_init>
 80103b6:	2304      	movs	r3, #4
 80103b8:	2203      	movs	r2, #3
 80103ba:	2118      	movs	r1, #24
 80103bc:	4834      	ldr	r0, [pc, #208]	; (8010490 <emac_start(unsigned char*)+0x13c>)
 80103be:	f7ff f953 	bl	800f668 <gpio_init>
 80103c2:	2380      	movs	r3, #128	; 0x80
 80103c4:	2203      	movs	r2, #3
 80103c6:	2104      	movs	r1, #4
 80103c8:	4831      	ldr	r0, [pc, #196]	; (8010490 <emac_start(unsigned char*)+0x13c>)
 80103ca:	f7ff f94d 	bl	800f668 <gpio_init>
 80103ce:	2302      	movs	r3, #2
 80103d0:	2203      	movs	r2, #3
 80103d2:	2118      	movs	r1, #24
 80103d4:	482f      	ldr	r0, [pc, #188]	; (8010494 <emac_start(unsigned char*)+0x140>)
 80103d6:	f7ff f947 	bl	800f668 <gpio_init>
 80103da:	2310      	movs	r3, #16
 80103dc:	2203      	movs	r2, #3
 80103de:	2104      	movs	r1, #4
 80103e0:	482c      	ldr	r0, [pc, #176]	; (8010494 <emac_start(unsigned char*)+0x140>)
 80103e2:	f7ff f941 	bl	800f668 <gpio_init>
 80103e6:	2320      	movs	r3, #32
 80103e8:	2203      	movs	r2, #3
 80103ea:	2104      	movs	r1, #4
 80103ec:	4829      	ldr	r0, [pc, #164]	; (8010494 <emac_start(unsigned char*)+0x140>)
 80103ee:	f7ff f93b 	bl	800f668 <gpio_init>
 80103f2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80103f6:	2203      	movs	r2, #3
 80103f8:	2118      	movs	r1, #24
 80103fa:	4827      	ldr	r0, [pc, #156]	; (8010498 <emac_start(unsigned char*)+0x144>)
 80103fc:	f7ff f934 	bl	800f668 <gpio_init>
 8010400:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010404:	2203      	movs	r2, #3
 8010406:	2118      	movs	r1, #24
 8010408:	4823      	ldr	r0, [pc, #140]	; (8010498 <emac_start(unsigned char*)+0x144>)
 801040a:	f7ff f92d 	bl	800f668 <gpio_init>
 801040e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010412:	2203      	movs	r2, #3
 8010414:	2118      	movs	r1, #24
 8010416:	4820      	ldr	r0, [pc, #128]	; (8010498 <emac_start(unsigned char*)+0x144>)
 8010418:	f7ff f926 	bl	800f668 <gpio_init>
 801041c:	f240 500e 	movw	r0, #1294	; 0x50e
 8010420:	f7ff f9ba 	bl	800f798 <rcu_periph_clock_enable>
 8010424:	f240 500f 	movw	r0, #1295	; 0x50f
 8010428:	f7ff f9b6 	bl	800f798 <rcu_periph_clock_enable>
 801042c:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8010430:	f7ff f9b2 	bl	800f798 <rcu_periph_clock_enable>
 8010434:	f000 fcdc 	bl	8010df0 <enet_deinit>
 8010438:	f000 f93a 	bl	80106b0 <enet_software_reset>
 801043c:	4604      	mov	r4, r0
 801043e:	b138      	cbz	r0, 8010450 <emac_start(unsigned char*)+0xfc>
 8010440:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8010444:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010448:	2001      	movs	r0, #1
 801044a:	f000 fab5 	bl	80109b8 <enet_init>
 801044e:	4604      	mov	r4, r0
 8010450:	4628      	mov	r0, r5
 8010452:	f000 fd89 	bl	8010f68 <mac_address_get(unsigned char*)>
 8010456:	4629      	mov	r1, r5
 8010458:	2000      	movs	r0, #0
 801045a:	f000 fa0d 	bl	8010878 <enet_mac_address_set>
 801045e:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8010462:	f000 f939 	bl	80106d8 <enet_descriptors_chain_init>
 8010466:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 801046a:	f000 f935 	bl	80106d8 <enet_descriptors_chain_init>
 801046e:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010472:	480a      	ldr	r0, [pc, #40]	; (801049c <emac_start(unsigned char*)+0x148>)
 8010474:	f000 f9fa 	bl	801086c <enet_transmit_checksum_config>
 8010478:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 801047c:	4808      	ldr	r0, [pc, #32]	; (80104a0 <emac_start(unsigned char*)+0x14c>)
 801047e:	f000 f9f5 	bl	801086c <enet_transmit_checksum_config>
 8010482:	f000 fc2d 	bl	8010ce0 <enet_enable>
 8010486:	fab4 f084 	clz	r0, r4
 801048a:	0940      	lsrs	r0, r0, #5
 801048c:	4240      	negs	r0, r0
 801048e:	bd38      	pop	{r3, r4, r5, pc}
 8010490:	40010800 	andmi	r0, r1, r0, lsl #16
 8010494:	40011000 	andmi	r1, r1, r0
 8010498:	40010c00 	andmi	r0, r1, r0, lsl #24
 801049c:	2000dd50 	andcs	sp, r0, r0, asr sp
 80104a0:	2000dd60 	andcs	sp, r0, r0, ror #26

080104a4 <net::link_register_read()>:
 80104a4:	b507      	push	{r0, r1, r2, lr}
 80104a6:	2201      	movs	r2, #1
 80104a8:	f10d 0306 	add.w	r3, sp, #6
 80104ac:	4611      	mov	r1, r2
 80104ae:	2000      	movs	r0, #0
 80104b0:	f000 f9fa 	bl	80108a8 <enet_phy_write_read>
 80104b4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80104b8:	f080 0004 	eor.w	r0, r0, #4
 80104bc:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80104c0:	b003      	add	sp, #12
 80104c2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080104c8 <adc_mode_config>:
 80104c8:	4b06      	ldr	r3, [pc, #24]	; (80104e4 <adc_mode_config+0x1c>)
 80104ca:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80104ce:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80104d2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80104d6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80104da:	4302      	orrs	r2, r0
 80104dc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80104e0:	4770      	bx	lr
 80104e2:	bf00      	nop
 80104e4:	40012000 	andmi	r2, r1, r0

080104e8 <adc_special_function_config>:
 80104e8:	b510      	push	{r4, lr}
 80104ea:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80104ee:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80104f2:	f001 0102 	and.w	r1, r1, #2
 80104f6:	b17a      	cbz	r2, 8010518 <adc_special_function_config+0x30>
 80104f8:	b11b      	cbz	r3, 8010502 <adc_special_function_config+0x1a>
 80104fa:	6843      	ldr	r3, [r0, #4]
 80104fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010500:	6043      	str	r3, [r0, #4]
 8010502:	b11c      	cbz	r4, 801050c <adc_special_function_config+0x24>
 8010504:	6843      	ldr	r3, [r0, #4]
 8010506:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801050a:	6043      	str	r3, [r0, #4]
 801050c:	b119      	cbz	r1, 8010516 <adc_special_function_config+0x2e>
 801050e:	6883      	ldr	r3, [r0, #8]
 8010510:	f043 0302 	orr.w	r3, r3, #2
 8010514:	6083      	str	r3, [r0, #8]
 8010516:	bd10      	pop	{r4, pc}
 8010518:	b11b      	cbz	r3, 8010522 <adc_special_function_config+0x3a>
 801051a:	6843      	ldr	r3, [r0, #4]
 801051c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010520:	6043      	str	r3, [r0, #4]
 8010522:	b11c      	cbz	r4, 801052c <adc_special_function_config+0x44>
 8010524:	6843      	ldr	r3, [r0, #4]
 8010526:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801052a:	6043      	str	r3, [r0, #4]
 801052c:	2900      	cmp	r1, #0
 801052e:	d0f2      	beq.n	8010516 <adc_special_function_config+0x2e>
 8010530:	6883      	ldr	r3, [r0, #8]
 8010532:	f023 0302 	bic.w	r3, r3, #2
 8010536:	e7ed      	b.n	8010514 <adc_special_function_config+0x2c>

08010538 <adc_data_alignment_config>:
 8010538:	6883      	ldr	r3, [r0, #8]
 801053a:	b119      	cbz	r1, 8010544 <adc_data_alignment_config+0xc>
 801053c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010540:	6083      	str	r3, [r0, #8]
 8010542:	4770      	bx	lr
 8010544:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010548:	e7fa      	b.n	8010540 <adc_data_alignment_config+0x8>

0801054a <adc_enable>:
 801054a:	6883      	ldr	r3, [r0, #8]
 801054c:	07db      	lsls	r3, r3, #31
 801054e:	bf5e      	ittt	pl
 8010550:	6883      	ldrpl	r3, [r0, #8]
 8010552:	f043 0301 	orrpl.w	r3, r3, #1
 8010556:	6083      	strpl	r3, [r0, #8]
 8010558:	4770      	bx	lr

0801055a <adc_calibration_enable>:
 801055a:	6883      	ldr	r3, [r0, #8]
 801055c:	f100 0208 	add.w	r2, r0, #8
 8010560:	f043 0308 	orr.w	r3, r3, #8
 8010564:	6083      	str	r3, [r0, #8]
 8010566:	6813      	ldr	r3, [r2, #0]
 8010568:	0719      	lsls	r1, r3, #28
 801056a:	d4fc      	bmi.n	8010566 <adc_calibration_enable+0xc>
 801056c:	6883      	ldr	r3, [r0, #8]
 801056e:	f043 0304 	orr.w	r3, r3, #4
 8010572:	6083      	str	r3, [r0, #8]
 8010574:	6813      	ldr	r3, [r2, #0]
 8010576:	075b      	lsls	r3, r3, #29
 8010578:	d4fc      	bmi.n	8010574 <adc_calibration_enable+0x1a>
 801057a:	4770      	bx	lr

0801057c <adc_tempsensor_vrefint_enable>:
 801057c:	4a03      	ldr	r2, [pc, #12]	; (801058c <adc_tempsensor_vrefint_enable+0x10>)
 801057e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8010582:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8010586:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 801058a:	4770      	bx	lr
 801058c:	40012000 	andmi	r2, r1, r0

08010590 <adc_channel_length_config>:
 8010590:	2901      	cmp	r1, #1
 8010592:	d002      	beq.n	801059a <adc_channel_length_config+0xa>
 8010594:	2902      	cmp	r1, #2
 8010596:	d00c      	beq.n	80105b2 <adc_channel_length_config+0x22>
 8010598:	4770      	bx	lr
 801059a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801059c:	3a01      	subs	r2, #1
 801059e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80105a2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80105a4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80105a6:	0512      	lsls	r2, r2, #20
 80105a8:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80105ac:	431a      	orrs	r2, r3
 80105ae:	62c2      	str	r2, [r0, #44]	; 0x2c
 80105b0:	4770      	bx	lr
 80105b2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80105b4:	3a01      	subs	r2, #1
 80105b6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80105ba:	6383      	str	r3, [r0, #56]	; 0x38
 80105bc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80105be:	0512      	lsls	r2, r2, #20
 80105c0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80105c4:	431a      	orrs	r2, r3
 80105c6:	6382      	str	r2, [r0, #56]	; 0x38
 80105c8:	4770      	bx	lr

080105ca <adc_inserted_channel_config>:
 80105ca:	b530      	push	{r4, r5, lr}
 80105cc:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80105ce:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80105d0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80105d4:	1a61      	subs	r1, r4, r1
 80105d6:	f06f 0404 	mvn.w	r4, #4
 80105da:	4361      	muls	r1, r4
 80105dc:	241f      	movs	r4, #31
 80105de:	310f      	adds	r1, #15
 80105e0:	408c      	lsls	r4, r1
 80105e2:	ea25 0504 	bic.w	r5, r5, r4
 80105e6:	fa02 f101 	lsl.w	r1, r2, r1
 80105ea:	4329      	orrs	r1, r5
 80105ec:	2a09      	cmp	r2, #9
 80105ee:	6381      	str	r1, [r0, #56]	; 0x38
 80105f0:	d80b      	bhi.n	801060a <adc_inserted_channel_config+0x40>
 80105f2:	2407      	movs	r4, #7
 80105f4:	6901      	ldr	r1, [r0, #16]
 80105f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80105fa:	4094      	lsls	r4, r2
 80105fc:	ea21 0104 	bic.w	r1, r1, r4
 8010600:	fa03 f202 	lsl.w	r2, r3, r2
 8010604:	430a      	orrs	r2, r1
 8010606:	6102      	str	r2, [r0, #16]
 8010608:	bd30      	pop	{r4, r5, pc}
 801060a:	2a11      	cmp	r2, #17
 801060c:	d8fc      	bhi.n	8010608 <adc_inserted_channel_config+0x3e>
 801060e:	2407      	movs	r4, #7
 8010610:	3a0a      	subs	r2, #10
 8010612:	68c1      	ldr	r1, [r0, #12]
 8010614:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010618:	4094      	lsls	r4, r2
 801061a:	ea21 0104 	bic.w	r1, r1, r4
 801061e:	4093      	lsls	r3, r2
 8010620:	430b      	orrs	r3, r1
 8010622:	60c3      	str	r3, [r0, #12]
 8010624:	e7f0      	b.n	8010608 <adc_inserted_channel_config+0x3e>

08010626 <adc_external_trigger_source_config>:
 8010626:	2901      	cmp	r1, #1
 8010628:	d002      	beq.n	8010630 <adc_external_trigger_source_config+0xa>
 801062a:	2902      	cmp	r1, #2
 801062c:	d008      	beq.n	8010640 <adc_external_trigger_source_config+0x1a>
 801062e:	4770      	bx	lr
 8010630:	6883      	ldr	r3, [r0, #8]
 8010632:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8010636:	6083      	str	r3, [r0, #8]
 8010638:	6883      	ldr	r3, [r0, #8]
 801063a:	4313      	orrs	r3, r2
 801063c:	6083      	str	r3, [r0, #8]
 801063e:	4770      	bx	lr
 8010640:	6883      	ldr	r3, [r0, #8]
 8010642:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010646:	e7f6      	b.n	8010636 <adc_external_trigger_source_config+0x10>

08010648 <adc_external_trigger_config>:
 8010648:	f001 0301 	and.w	r3, r1, #1
 801064c:	f001 0102 	and.w	r1, r1, #2
 8010650:	b152      	cbz	r2, 8010668 <adc_external_trigger_config+0x20>
 8010652:	b11b      	cbz	r3, 801065c <adc_external_trigger_config+0x14>
 8010654:	6883      	ldr	r3, [r0, #8]
 8010656:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801065a:	6083      	str	r3, [r0, #8]
 801065c:	b119      	cbz	r1, 8010666 <adc_external_trigger_config+0x1e>
 801065e:	6883      	ldr	r3, [r0, #8]
 8010660:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010664:	6083      	str	r3, [r0, #8]
 8010666:	4770      	bx	lr
 8010668:	b11b      	cbz	r3, 8010672 <adc_external_trigger_config+0x2a>
 801066a:	6883      	ldr	r3, [r0, #8]
 801066c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8010670:	6083      	str	r3, [r0, #8]
 8010672:	2900      	cmp	r1, #0
 8010674:	d0f7      	beq.n	8010666 <adc_external_trigger_config+0x1e>
 8010676:	6883      	ldr	r3, [r0, #8]
 8010678:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801067c:	e7f2      	b.n	8010664 <adc_external_trigger_config+0x1c>

0801067e <adc_software_trigger_enable>:
 801067e:	07ca      	lsls	r2, r1, #31
 8010680:	bf42      	ittt	mi
 8010682:	6883      	ldrmi	r3, [r0, #8]
 8010684:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8010688:	6083      	strmi	r3, [r0, #8]
 801068a:	078b      	lsls	r3, r1, #30
 801068c:	bf42      	ittt	mi
 801068e:	6883      	ldrmi	r3, [r0, #8]
 8010690:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8010694:	6083      	strmi	r3, [r0, #8]
 8010696:	4770      	bx	lr

08010698 <enet_delay>:
 8010698:	2300      	movs	r3, #0
 801069a:	b082      	sub	sp, #8
 801069c:	9301      	str	r3, [sp, #4]
 801069e:	9001      	str	r0, [sp, #4]
 80106a0:	9b01      	ldr	r3, [sp, #4]
 80106a2:	b90b      	cbnz	r3, 80106a8 <enet_delay+0x10>
 80106a4:	b002      	add	sp, #8
 80106a6:	4770      	bx	lr
 80106a8:	9b01      	ldr	r3, [sp, #4]
 80106aa:	3b01      	subs	r3, #1
 80106ac:	9301      	str	r3, [sp, #4]
 80106ae:	e7f7      	b.n	80106a0 <enet_delay+0x8>

080106b0 <enet_software_reset>:
 80106b0:	4b07      	ldr	r3, [pc, #28]	; (80106d0 <enet_software_reset+0x20>)
 80106b2:	681a      	ldr	r2, [r3, #0]
 80106b4:	f042 0201 	orr.w	r2, r2, #1
 80106b8:	601a      	str	r2, [r3, #0]
 80106ba:	4a06      	ldr	r2, [pc, #24]	; (80106d4 <enet_software_reset+0x24>)
 80106bc:	6819      	ldr	r1, [r3, #0]
 80106be:	07c9      	lsls	r1, r1, #31
 80106c0:	d501      	bpl.n	80106c6 <enet_software_reset+0x16>
 80106c2:	3a01      	subs	r2, #1
 80106c4:	d1fa      	bne.n	80106bc <enet_software_reset+0xc>
 80106c6:	6818      	ldr	r0, [r3, #0]
 80106c8:	43c0      	mvns	r0, r0
 80106ca:	f000 0001 	and.w	r0, r0, #1
 80106ce:	4770      	bx	lr
 80106d0:	40029000 	andmi	r9, r2, r0
 80106d4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080106d8 <enet_descriptors_chain_init>:
 80106d8:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80106dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106de:	4a19      	ldr	r2, [pc, #100]	; (8010744 <enet_descriptors_chain_init+0x6c>)
 80106e0:	d125      	bne.n	801072e <enet_descriptors_chain_init+0x56>
 80106e2:	2500      	movs	r5, #0
 80106e4:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80106e8:	2002      	movs	r0, #2
 80106ea:	4b17      	ldr	r3, [pc, #92]	; (8010748 <enet_descriptors_chain_init+0x70>)
 80106ec:	4c17      	ldr	r4, [pc, #92]	; (801074c <enet_descriptors_chain_init+0x74>)
 80106ee:	6113      	str	r3, [r2, #16]
 80106f0:	4a17      	ldr	r2, [pc, #92]	; (8010750 <enet_descriptors_chain_init+0x78>)
 80106f2:	6013      	str	r3, [r2, #0]
 80106f4:	2200      	movs	r2, #0
 80106f6:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80106fa:	4916      	ldr	r1, [pc, #88]	; (8010754 <enet_descriptors_chain_init+0x7c>)
 80106fc:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8010700:	600a      	str	r2, [r1, #0]
 8010702:	4915      	ldr	r1, [pc, #84]	; (8010758 <enet_descriptors_chain_init+0x80>)
 8010704:	600a      	str	r2, [r1, #0]
 8010706:	f103 0110 	add.w	r1, r3, #16
 801070a:	fb0e 4702 	mla	r7, lr, r2, r4
 801070e:	f841 7c08 	str.w	r7, [r1, #-8]
 8010712:	4594      	cmp	ip, r2
 8010714:	bf94      	ite	ls
 8010716:	461f      	movls	r7, r3
 8010718:	460f      	movhi	r7, r1
 801071a:	3201      	adds	r2, #1
 801071c:	4290      	cmp	r0, r2
 801071e:	e941 6504 	strd	r6, r5, [r1, #-16]
 8010722:	f841 7c04 	str.w	r7, [r1, #-4]
 8010726:	f101 0110 	add.w	r1, r1, #16
 801072a:	d1ee      	bne.n	801070a <enet_descriptors_chain_init+0x32>
 801072c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801072e:	4b0b      	ldr	r3, [pc, #44]	; (801075c <enet_descriptors_chain_init+0x84>)
 8010730:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8010734:	60d3      	str	r3, [r2, #12]
 8010736:	4a0a      	ldr	r2, [pc, #40]	; (8010760 <enet_descriptors_chain_init+0x88>)
 8010738:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 801073c:	2008      	movs	r0, #8
 801073e:	4c09      	ldr	r4, [pc, #36]	; (8010764 <enet_descriptors_chain_init+0x8c>)
 8010740:	6013      	str	r3, [r2, #0]
 8010742:	e7d7      	b.n	80106f4 <enet_descriptors_chain_init+0x1c>
 8010744:	40029000 	andmi	r9, r2, r0
 8010748:	2000dd50 	andcs	sp, r0, r0, asr sp
 801074c:	2000d168 	andcs	sp, r0, r8, ror #2
 8010750:	2000a108 	andcs	sl, r0, r8, lsl #2
 8010754:	2000a0fc 	strdcs	sl, [r0], -ip
 8010758:	2000a100 	andcs	sl, r0, r0, lsl #2
 801075c:	2000d0e8 	andcs	sp, r0, r8, ror #1
 8010760:	2000a104 	andcs	sl, r0, r4, lsl #2
 8010764:	2000a148 	andcs	sl, r0, r8, asr #2

08010768 <enet_frame_receive>:
 8010768:	4a1d      	ldr	r2, [pc, #116]	; (80107e0 <enet_frame_receive+0x78>)
 801076a:	b510      	push	{r4, lr}
 801076c:	6813      	ldr	r3, [r2, #0]
 801076e:	681b      	ldr	r3, [r3, #0]
 8010770:	2b00      	cmp	r3, #0
 8010772:	db33      	blt.n	80107dc <enet_frame_receive+0x74>
 8010774:	b970      	cbnz	r0, 8010794 <enet_frame_receive+0x2c>
 8010776:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801077a:	6813      	ldr	r3, [r2, #0]
 801077c:	6019      	str	r1, [r3, #0]
 801077e:	4919      	ldr	r1, [pc, #100]	; (80107e4 <enet_frame_receive+0x7c>)
 8010780:	6948      	ldr	r0, [r1, #20]
 8010782:	0604      	lsls	r4, r0, #24
 8010784:	d419      	bmi.n	80107ba <enet_frame_receive+0x52>
 8010786:	6859      	ldr	r1, [r3, #4]
 8010788:	0448      	lsls	r0, r1, #17
 801078a:	d51b      	bpl.n	80107c4 <enet_frame_receive+0x5c>
 801078c:	68db      	ldr	r3, [r3, #12]
 801078e:	2001      	movs	r0, #1
 8010790:	6013      	str	r3, [r2, #0]
 8010792:	bd10      	pop	{r4, pc}
 8010794:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8010798:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 801079c:	d11e      	bne.n	80107dc <enet_frame_receive+0x74>
 801079e:	f3c3 430d 	ubfx	r3, r3, #16, #14
 80107a2:	3b04      	subs	r3, #4
 80107a4:	428b      	cmp	r3, r1
 80107a6:	d819      	bhi.n	80107dc <enet_frame_receive+0x74>
 80107a8:	2100      	movs	r1, #0
 80107aa:	4299      	cmp	r1, r3
 80107ac:	6814      	ldr	r4, [r2, #0]
 80107ae:	d2e2      	bcs.n	8010776 <enet_frame_receive+0xe>
 80107b0:	68a4      	ldr	r4, [r4, #8]
 80107b2:	5d0c      	ldrb	r4, [r1, r4]
 80107b4:	5444      	strb	r4, [r0, r1]
 80107b6:	3101      	adds	r1, #1
 80107b8:	e7f7      	b.n	80107aa <enet_frame_receive+0x42>
 80107ba:	2080      	movs	r0, #128	; 0x80
 80107bc:	6148      	str	r0, [r1, #20]
 80107be:	2000      	movs	r0, #0
 80107c0:	6088      	str	r0, [r1, #8]
 80107c2:	e7e0      	b.n	8010786 <enet_frame_receive+0x1e>
 80107c4:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 80107c8:	4906      	ldr	r1, [pc, #24]	; (80107e4 <enet_frame_receive+0x7c>)
 80107ca:	bf05      	ittet	eq
 80107cc:	3310      	addeq	r3, #16
 80107ce:	6809      	ldreq	r1, [r1, #0]
 80107d0:	68cb      	ldrne	r3, [r1, #12]
 80107d2:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80107d6:	bf08      	it	eq
 80107d8:	185b      	addeq	r3, r3, r1
 80107da:	e7d8      	b.n	801078e <enet_frame_receive+0x26>
 80107dc:	2000      	movs	r0, #0
 80107de:	e7d8      	b.n	8010792 <enet_frame_receive+0x2a>
 80107e0:	2000a104 	andcs	sl, r0, r4, lsl #2
 80107e4:	40029000 	andmi	r9, r2, r0

080107e8 <enet_frame_transmit>:
 80107e8:	4a1e      	ldr	r2, [pc, #120]	; (8010864 <enet_frame_transmit+0x7c>)
 80107ea:	b530      	push	{r4, r5, lr}
 80107ec:	6813      	ldr	r3, [r2, #0]
 80107ee:	681b      	ldr	r3, [r3, #0]
 80107f0:	2b00      	cmp	r3, #0
 80107f2:	db34      	blt.n	801085e <enet_frame_transmit+0x76>
 80107f4:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80107f8:	4299      	cmp	r1, r3
 80107fa:	d830      	bhi.n	801085e <enet_frame_transmit+0x76>
 80107fc:	b9e8      	cbnz	r0, 801083a <enet_frame_transmit+0x52>
 80107fe:	6813      	ldr	r3, [r2, #0]
 8010800:	4819      	ldr	r0, [pc, #100]	; (8010868 <enet_frame_transmit+0x80>)
 8010802:	6059      	str	r1, [r3, #4]
 8010804:	6819      	ldr	r1, [r3, #0]
 8010806:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801080a:	6019      	str	r1, [r3, #0]
 801080c:	6941      	ldr	r1, [r0, #20]
 801080e:	6944      	ldr	r4, [r0, #20]
 8010810:	f001 0104 	and.w	r1, r1, #4
 8010814:	f004 0420 	and.w	r4, r4, #32
 8010818:	4321      	orrs	r1, r4
 801081a:	d110      	bne.n	801083e <enet_frame_transmit+0x56>
 801081c:	6819      	ldr	r1, [r3, #0]
 801081e:	02c8      	lsls	r0, r1, #11
 8010820:	d511      	bpl.n	8010846 <enet_frame_transmit+0x5e>
 8010822:	68db      	ldr	r3, [r3, #12]
 8010824:	2001      	movs	r0, #1
 8010826:	6013      	str	r3, [r2, #0]
 8010828:	bd30      	pop	{r4, r5, pc}
 801082a:	5cc5      	ldrb	r5, [r0, r3]
 801082c:	68a4      	ldr	r4, [r4, #8]
 801082e:	551d      	strb	r5, [r3, r4]
 8010830:	3301      	adds	r3, #1
 8010832:	428b      	cmp	r3, r1
 8010834:	6814      	ldr	r4, [r2, #0]
 8010836:	d1f8      	bne.n	801082a <enet_frame_transmit+0x42>
 8010838:	e7e1      	b.n	80107fe <enet_frame_transmit+0x16>
 801083a:	2300      	movs	r3, #0
 801083c:	e7f9      	b.n	8010832 <enet_frame_transmit+0x4a>
 801083e:	6141      	str	r1, [r0, #20]
 8010840:	2100      	movs	r1, #0
 8010842:	6041      	str	r1, [r0, #4]
 8010844:	e7ea      	b.n	801081c <enet_frame_transmit+0x34>
 8010846:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 801084a:	4907      	ldr	r1, [pc, #28]	; (8010868 <enet_frame_transmit+0x80>)
 801084c:	bf05      	ittet	eq
 801084e:	3310      	addeq	r3, #16
 8010850:	6809      	ldreq	r1, [r1, #0]
 8010852:	690b      	ldrne	r3, [r1, #16]
 8010854:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010858:	bf08      	it	eq
 801085a:	185b      	addeq	r3, r3, r1
 801085c:	e7e2      	b.n	8010824 <enet_frame_transmit+0x3c>
 801085e:	2000      	movs	r0, #0
 8010860:	e7e2      	b.n	8010828 <enet_frame_transmit+0x40>
 8010862:	bf00      	nop
 8010864:	2000a108 	andcs	sl, r0, r8, lsl #2
 8010868:	40029000 	andmi	r9, r2, r0

0801086c <enet_transmit_checksum_config>:
 801086c:	6803      	ldr	r3, [r0, #0]
 801086e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8010872:	430b      	orrs	r3, r1
 8010874:	6003      	str	r3, [r0, #0]
 8010876:	4770      	bx	lr

08010878 <enet_mac_address_set>:
 8010878:	888a      	ldrh	r2, [r1, #4]
 801087a:	4b03      	ldr	r3, [pc, #12]	; (8010888 <enet_mac_address_set+0x10>)
 801087c:	50c2      	str	r2, [r0, r3]
 801087e:	680a      	ldr	r2, [r1, #0]
 8010880:	3304      	adds	r3, #4
 8010882:	50c2      	str	r2, [r0, r3]
 8010884:	4770      	bx	lr
 8010886:	bf00      	nop
 8010888:	40028040 	andmi	r8, r2, r0, asr #32

0801088c <enet_rx_enable>:
 801088c:	4a05      	ldr	r2, [pc, #20]	; (80108a4 <enet_rx_enable+0x18>)
 801088e:	6813      	ldr	r3, [r2, #0]
 8010890:	f043 0304 	orr.w	r3, r3, #4
 8010894:	6013      	str	r3, [r2, #0]
 8010896:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801089a:	6993      	ldr	r3, [r2, #24]
 801089c:	f043 0302 	orr.w	r3, r3, #2
 80108a0:	6193      	str	r3, [r2, #24]
 80108a2:	4770      	bx	lr
 80108a4:	40028000 	andmi	r8, r2, r0

080108a8 <enet_phy_write_read>:
 80108a8:	b530      	push	{r4, r5, lr}
 80108aa:	4604      	mov	r4, r0
 80108ac:	4d13      	ldr	r5, [pc, #76]	; (80108fc <enet_phy_write_read+0x54>)
 80108ae:	0192      	lsls	r2, r2, #6
 80108b0:	6928      	ldr	r0, [r5, #16]
 80108b2:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 80108b6:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80108ba:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80108be:	4302      	orrs	r2, r0
 80108c0:	02c9      	lsls	r1, r1, #11
 80108c2:	b289      	uxth	r1, r1
 80108c4:	2c02      	cmp	r4, #2
 80108c6:	ea42 0204 	orr.w	r2, r2, r4
 80108ca:	ea42 0201 	orr.w	r2, r2, r1
 80108ce:	bf08      	it	eq
 80108d0:	8819      	ldrheq	r1, [r3, #0]
 80108d2:	f042 0201 	orr.w	r2, r2, #1
 80108d6:	bf08      	it	eq
 80108d8:	6169      	streq	r1, [r5, #20]
 80108da:	612a      	str	r2, [r5, #16]
 80108dc:	4907      	ldr	r1, [pc, #28]	; (80108fc <enet_phy_write_read+0x54>)
 80108de:	4a08      	ldr	r2, [pc, #32]	; (8010900 <enet_phy_write_read+0x58>)
 80108e0:	6908      	ldr	r0, [r1, #16]
 80108e2:	07c0      	lsls	r0, r0, #31
 80108e4:	d501      	bpl.n	80108ea <enet_phy_write_read+0x42>
 80108e6:	3a01      	subs	r2, #1
 80108e8:	d1fa      	bne.n	80108e0 <enet_phy_write_read+0x38>
 80108ea:	690a      	ldr	r2, [r1, #16]
 80108ec:	43d2      	mvns	r2, r2
 80108ee:	f002 0001 	and.w	r0, r2, #1
 80108f2:	b90c      	cbnz	r4, 80108f8 <enet_phy_write_read+0x50>
 80108f4:	694a      	ldr	r2, [r1, #20]
 80108f6:	801a      	strh	r2, [r3, #0]
 80108f8:	bd30      	pop	{r4, r5, pc}
 80108fa:	bf00      	nop
 80108fc:	40028000 	andmi	r8, r2, r0
 8010900:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010904 <enet_phy_config>:
 8010904:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010906:	4d22      	ldr	r5, [pc, #136]	; (8010990 <enet_phy_config+0x8c>)
 8010908:	2001      	movs	r0, #1
 801090a:	692c      	ldr	r4, [r5, #16]
 801090c:	f7ff f80a 	bl	800f924 <rcu_clock_freq_get>
 8010910:	4b20      	ldr	r3, [pc, #128]	; (8010994 <enet_phy_config+0x90>)
 8010912:	4a21      	ldr	r2, [pc, #132]	; (8010998 <enet_phy_config+0x94>)
 8010914:	4403      	add	r3, r0
 8010916:	4293      	cmp	r3, r2
 8010918:	f024 041c 	bic.w	r4, r4, #28
 801091c:	d21f      	bcs.n	801095e <enet_phy_config+0x5a>
 801091e:	f044 0408 	orr.w	r4, r4, #8
 8010922:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010926:	612c      	str	r4, [r5, #16]
 8010928:	2200      	movs	r2, #0
 801092a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801092e:	2101      	movs	r1, #1
 8010930:	2002      	movs	r0, #2
 8010932:	f10d 0306 	add.w	r3, sp, #6
 8010936:	f7ff ffb7 	bl	80108a8 <enet_phy_write_read>
 801093a:	b310      	cbz	r0, 8010982 <enet_phy_config+0x7e>
 801093c:	2200      	movs	r2, #0
 801093e:	4817      	ldr	r0, [pc, #92]	; (801099c <enet_phy_config+0x98>)
 8010940:	f7ff feaa 	bl	8010698 <enet_delay>
 8010944:	2101      	movs	r1, #1
 8010946:	4610      	mov	r0, r2
 8010948:	f10d 0306 	add.w	r3, sp, #6
 801094c:	f7ff ffac 	bl	80108a8 <enet_phy_write_read>
 8010950:	b1b8      	cbz	r0, 8010982 <enet_phy_config+0x7e>
 8010952:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010956:	43c0      	mvns	r0, r0
 8010958:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801095c:	e012      	b.n	8010984 <enet_phy_config+0x80>
 801095e:	4b10      	ldr	r3, [pc, #64]	; (80109a0 <enet_phy_config+0x9c>)
 8010960:	4a10      	ldr	r2, [pc, #64]	; (80109a4 <enet_phy_config+0xa0>)
 8010962:	4403      	add	r3, r0
 8010964:	4293      	cmp	r3, r2
 8010966:	d802      	bhi.n	801096e <enet_phy_config+0x6a>
 8010968:	f044 040c 	orr.w	r4, r4, #12
 801096c:	e7d9      	b.n	8010922 <enet_phy_config+0x1e>
 801096e:	4b0e      	ldr	r3, [pc, #56]	; (80109a8 <enet_phy_config+0xa4>)
 8010970:	4a0e      	ldr	r2, [pc, #56]	; (80109ac <enet_phy_config+0xa8>)
 8010972:	4403      	add	r3, r0
 8010974:	4293      	cmp	r3, r2
 8010976:	d9d4      	bls.n	8010922 <enet_phy_config+0x1e>
 8010978:	4b0d      	ldr	r3, [pc, #52]	; (80109b0 <enet_phy_config+0xac>)
 801097a:	4a0e      	ldr	r2, [pc, #56]	; (80109b4 <enet_phy_config+0xb0>)
 801097c:	4403      	add	r3, r0
 801097e:	4293      	cmp	r3, r2
 8010980:	d902      	bls.n	8010988 <enet_phy_config+0x84>
 8010982:	2000      	movs	r0, #0
 8010984:	b003      	add	sp, #12
 8010986:	bd30      	pop	{r4, r5, pc}
 8010988:	f044 0404 	orr.w	r4, r4, #4
 801098c:	e7c9      	b.n	8010922 <enet_phy_config+0x1e>
 801098e:	bf00      	nop
 8010990:	40028000 	andmi	r8, r2, r0
 8010994:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8010998:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 801099c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80109a0:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 80109a4:	017d783f 	cmneq	sp, pc, lsr r8
 80109a8:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80109ac:	01c9c37f 	biceq	ip, r9, pc, ror r3
 80109b0:	faa2b580 	blx	68bdfb8 <__stack_size+0x68bbfb8>
 80109b4:	0112a880 	tsteq	r2, r0, lsl #17

080109b8 <enet_init>:
 80109b8:	2300      	movs	r3, #0
 80109ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80109bc:	4604      	mov	r4, r0
 80109be:	460d      	mov	r5, r1
 80109c0:	4616      	mov	r6, r2
 80109c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109c6:	f7ff ff9d 	bl	8010904 <enet_phy_config>
 80109ca:	2800      	cmp	r0, #0
 80109cc:	d037      	beq.n	8010a3e <enet_init+0x86>
 80109ce:	4b3b      	ldr	r3, [pc, #236]	; (8010abc <enet_init+0x104>)
 80109d0:	4a3b      	ldr	r2, [pc, #236]	; (8010ac0 <enet_init+0x108>)
 80109d2:	6819      	ldr	r1, [r3, #0]
 80109d4:	2c01      	cmp	r4, #1
 80109d6:	ea02 0201 	and.w	r2, r2, r1
 80109da:	601a      	str	r2, [r3, #0]
 80109dc:	f04f 0200 	mov.w	r2, #0
 80109e0:	605a      	str	r2, [r3, #4]
 80109e2:	609a      	str	r2, [r3, #8]
 80109e4:	60da      	str	r2, [r3, #12]
 80109e6:	6999      	ldr	r1, [r3, #24]
 80109e8:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80109ec:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80109f0:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80109f4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80109f8:	6199      	str	r1, [r3, #24]
 80109fa:	4932      	ldr	r1, [pc, #200]	; (8010ac4 <enet_init+0x10c>)
 80109fc:	61da      	str	r2, [r3, #28]
 80109fe:	6988      	ldr	r0, [r1, #24]
 8010a00:	4b31      	ldr	r3, [pc, #196]	; (8010ac8 <enet_init+0x110>)
 8010a02:	ea03 0300 	and.w	r3, r3, r0
 8010a06:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8010a0a:	618b      	str	r3, [r1, #24]
 8010a0c:	680b      	ldr	r3, [r1, #0]
 8010a0e:	4b2f      	ldr	r3, [pc, #188]	; (8010acc <enet_init+0x114>)
 8010a10:	600b      	str	r3, [r1, #0]
 8010a12:	d01e      	beq.n	8010a52 <enet_init+0x9a>
 8010a14:	08e3      	lsrs	r3, r4, #3
 8010a16:	0861      	lsrs	r1, r4, #1
 8010a18:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8010a1c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010a20:	430b      	orrs	r3, r1
 8010a22:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010a26:	2101      	movs	r1, #1
 8010a28:	2002      	movs	r0, #2
 8010a2a:	f10d 0306 	add.w	r3, sp, #6
 8010a2e:	f7ff ff3b 	bl	80108a8 <enet_phy_write_read>
 8010a32:	b158      	cbz	r0, 8010a4c <enet_init+0x94>
 8010a34:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8010a38:	f7ff fe2e 	bl	8010698 <enet_delay>
 8010a3c:	e05d      	b.n	8010afa <enet_init+0x142>
 8010a3e:	4824      	ldr	r0, [pc, #144]	; (8010ad0 <enet_init+0x118>)
 8010a40:	f7ff fe2a 	bl	8010698 <enet_delay>
 8010a44:	f7ff ff5e 	bl	8010904 <enet_phy_config>
 8010a48:	2800      	cmp	r0, #0
 8010a4a:	d1c0      	bne.n	80109ce <enet_init+0x16>
 8010a4c:	2000      	movs	r0, #0
 8010a4e:	b003      	add	sp, #12
 8010a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a52:	4614      	mov	r4, r2
 8010a54:	4f1f      	ldr	r7, [pc, #124]	; (8010ad4 <enet_init+0x11c>)
 8010a56:	2201      	movs	r2, #1
 8010a58:	2000      	movs	r0, #0
 8010a5a:	4611      	mov	r1, r2
 8010a5c:	f10d 0306 	add.w	r3, sp, #6
 8010a60:	f7ff ff22 	bl	80108a8 <enet_phy_write_read>
 8010a64:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a68:	3401      	adds	r4, #1
 8010a6a:	f002 0204 	and.w	r2, r2, #4
 8010a6e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a72:	b912      	cbnz	r2, 8010a7a <enet_init+0xc2>
 8010a74:	42bc      	cmp	r4, r7
 8010a76:	d1ee      	bne.n	8010a56 <enet_init+0x9e>
 8010a78:	e7e8      	b.n	8010a4c <enet_init+0x94>
 8010a7a:	42bc      	cmp	r4, r7
 8010a7c:	d0e6      	beq.n	8010a4c <enet_init+0x94>
 8010a7e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010a82:	2101      	movs	r1, #1
 8010a84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a88:	2002      	movs	r0, #2
 8010a8a:	2200      	movs	r2, #0
 8010a8c:	f7ff ff0c 	bl	80108a8 <enet_phy_write_read>
 8010a90:	2800      	cmp	r0, #0
 8010a92:	d0db      	beq.n	8010a4c <enet_init+0x94>
 8010a94:	2400      	movs	r4, #0
 8010a96:	4f0f      	ldr	r7, [pc, #60]	; (8010ad4 <enet_init+0x11c>)
 8010a98:	2201      	movs	r2, #1
 8010a9a:	2000      	movs	r0, #0
 8010a9c:	4611      	mov	r1, r2
 8010a9e:	f10d 0306 	add.w	r3, sp, #6
 8010aa2:	f7ff ff01 	bl	80108a8 <enet_phy_write_read>
 8010aa6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010aaa:	3401      	adds	r4, #1
 8010aac:	f002 0220 	and.w	r2, r2, #32
 8010ab0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010ab4:	b982      	cbnz	r2, 8010ad8 <enet_init+0x120>
 8010ab6:	42bc      	cmp	r4, r7
 8010ab8:	d1ee      	bne.n	8010a98 <enet_init+0xe0>
 8010aba:	e7c7      	b.n	8010a4c <enet_init+0x94>
 8010abc:	40028000 	andmi	r8, r2, r0
 8010ac0:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8010ac4:	40029000 	andmi	r9, r2, r0
 8010ac8:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8010acc:	02c16000 	sbceq	r6, r1, #0
 8010ad0:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8010ad4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010ad8:	42bc      	cmp	r4, r7
 8010ada:	d0b7      	beq.n	8010a4c <enet_init+0x94>
 8010adc:	2101      	movs	r1, #1
 8010ade:	2210      	movs	r2, #16
 8010ae0:	2000      	movs	r0, #0
 8010ae2:	f7ff fee1 	bl	80108a8 <enet_phy_write_read>
 8010ae6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010aea:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8010aee:	0799      	lsls	r1, r3, #30
 8010af0:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8010af4:	d401      	bmi.n	8010afa <enet_init+0x142>
 8010af6:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8010afa:	4b63      	ldr	r3, [pc, #396]	; (8010c88 <enet_init+0x2d0>)
 8010afc:	681a      	ldr	r2, [r3, #0]
 8010afe:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8010b02:	4314      	orrs	r4, r2
 8010b04:	056a      	lsls	r2, r5, #21
 8010b06:	601c      	str	r4, [r3, #0]
 8010b08:	d50b      	bpl.n	8010b22 <enet_init+0x16a>
 8010b0a:	681a      	ldr	r2, [r3, #0]
 8010b0c:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8010b10:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8010b14:	601a      	str	r2, [r3, #0]
 8010b16:	4a5d      	ldr	r2, [pc, #372]	; (8010c8c <enet_init+0x2d4>)
 8010b18:	6993      	ldr	r3, [r2, #24]
 8010b1a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8010b1e:	431d      	orrs	r5, r3
 8010b20:	6195      	str	r5, [r2, #24]
 8010b22:	4959      	ldr	r1, [pc, #356]	; (8010c88 <enet_init+0x2d0>)
 8010b24:	684b      	ldr	r3, [r1, #4]
 8010b26:	431e      	orrs	r6, r3
 8010b28:	4b59      	ldr	r3, [pc, #356]	; (8010c90 <enet_init+0x2d8>)
 8010b2a:	604e      	str	r6, [r1, #4]
 8010b2c:	681a      	ldr	r2, [r3, #0]
 8010b2e:	07d7      	lsls	r7, r2, #31
 8010b30:	d510      	bpl.n	8010b54 <enet_init+0x19c>
 8010b32:	685a      	ldr	r2, [r3, #4]
 8010b34:	680c      	ldr	r4, [r1, #0]
 8010b36:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8010b3a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8010b3e:	4320      	orrs	r0, r4
 8010b40:	6008      	str	r0, [r1, #0]
 8010b42:	4852      	ldr	r0, [pc, #328]	; (8010c8c <enet_init+0x2d4>)
 8010b44:	0892      	lsrs	r2, r2, #2
 8010b46:	6981      	ldr	r1, [r0, #24]
 8010b48:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8010b4c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8010b50:	430a      	orrs	r2, r1
 8010b52:	6182      	str	r2, [r0, #24]
 8010b54:	681a      	ldr	r2, [r3, #0]
 8010b56:	0796      	lsls	r6, r2, #30
 8010b58:	d508      	bpl.n	8010b6c <enet_init+0x1b4>
 8010b5a:	494c      	ldr	r1, [pc, #304]	; (8010c8c <enet_init+0x2d4>)
 8010b5c:	6898      	ldr	r0, [r3, #8]
 8010b5e:	680a      	ldr	r2, [r1, #0]
 8010b60:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8010b64:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8010b68:	4302      	orrs	r2, r0
 8010b6a:	600a      	str	r2, [r1, #0]
 8010b6c:	681a      	ldr	r2, [r3, #0]
 8010b6e:	0755      	lsls	r5, r2, #29
 8010b70:	d508      	bpl.n	8010b84 <enet_init+0x1cc>
 8010b72:	4946      	ldr	r1, [pc, #280]	; (8010c8c <enet_init+0x2d4>)
 8010b74:	68d8      	ldr	r0, [r3, #12]
 8010b76:	680a      	ldr	r2, [r1, #0]
 8010b78:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8010b7c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8010b80:	4302      	orrs	r2, r0
 8010b82:	600a      	str	r2, [r1, #0]
 8010b84:	681a      	ldr	r2, [r3, #0]
 8010b86:	0714      	lsls	r4, r2, #28
 8010b88:	d508      	bpl.n	8010b9c <enet_init+0x1e4>
 8010b8a:	4940      	ldr	r1, [pc, #256]	; (8010c8c <enet_init+0x2d4>)
 8010b8c:	6918      	ldr	r0, [r3, #16]
 8010b8e:	680a      	ldr	r2, [r1, #0]
 8010b90:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8010b94:	f022 0202 	bic.w	r2, r2, #2
 8010b98:	4302      	orrs	r2, r0
 8010b9a:	600a      	str	r2, [r1, #0]
 8010b9c:	681a      	ldr	r2, [r3, #0]
 8010b9e:	06d0      	lsls	r0, r2, #27
 8010ba0:	d506      	bpl.n	8010bb0 <enet_init+0x1f8>
 8010ba2:	493a      	ldr	r1, [pc, #232]	; (8010c8c <enet_init+0x2d4>)
 8010ba4:	4a3b      	ldr	r2, [pc, #236]	; (8010c94 <enet_init+0x2dc>)
 8010ba6:	6988      	ldr	r0, [r1, #24]
 8010ba8:	4002      	ands	r2, r0
 8010baa:	6958      	ldr	r0, [r3, #20]
 8010bac:	4302      	orrs	r2, r0
 8010bae:	618a      	str	r2, [r1, #24]
 8010bb0:	681a      	ldr	r2, [r3, #0]
 8010bb2:	0691      	lsls	r1, r2, #26
 8010bb4:	d508      	bpl.n	8010bc8 <enet_init+0x210>
 8010bb6:	4935      	ldr	r1, [pc, #212]	; (8010c8c <enet_init+0x2d4>)
 8010bb8:	6998      	ldr	r0, [r3, #24]
 8010bba:	698a      	ldr	r2, [r1, #24]
 8010bbc:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8010bc0:	f022 0204 	bic.w	r2, r2, #4
 8010bc4:	4302      	orrs	r2, r0
 8010bc6:	618a      	str	r2, [r1, #24]
 8010bc8:	681a      	ldr	r2, [r3, #0]
 8010bca:	0652      	lsls	r2, r2, #25
 8010bcc:	d506      	bpl.n	8010bdc <enet_init+0x224>
 8010bce:	492e      	ldr	r1, [pc, #184]	; (8010c88 <enet_init+0x2d0>)
 8010bd0:	69d8      	ldr	r0, [r3, #28]
 8010bd2:	69ca      	ldr	r2, [r1, #28]
 8010bd4:	0c52      	lsrs	r2, r2, #17
 8010bd6:	0452      	lsls	r2, r2, #17
 8010bd8:	4302      	orrs	r2, r0
 8010bda:	61ca      	str	r2, [r1, #28]
 8010bdc:	681a      	ldr	r2, [r3, #0]
 8010bde:	0617      	lsls	r7, r2, #24
 8010be0:	d517      	bpl.n	8010c12 <enet_init+0x25a>
 8010be2:	4c29      	ldr	r4, [pc, #164]	; (8010c88 <enet_init+0x2d0>)
 8010be4:	6a1a      	ldr	r2, [r3, #32]
 8010be6:	69a0      	ldr	r0, [r4, #24]
 8010be8:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8010bec:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8010bf0:	0400      	lsls	r0, r0, #16
 8010bf2:	0c00      	lsrs	r0, r0, #16
 8010bf4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8010bf8:	4301      	orrs	r1, r0
 8010bfa:	4824      	ldr	r0, [pc, #144]	; (8010c8c <enet_init+0x2d4>)
 8010bfc:	61a1      	str	r1, [r4, #24]
 8010bfe:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8010c02:	0a12      	lsrs	r2, r2, #8
 8010c04:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8010c08:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8010c0c:	430a      	orrs	r2, r1
 8010c0e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8010c12:	681a      	ldr	r2, [r3, #0]
 8010c14:	05d6      	lsls	r6, r2, #23
 8010c16:	bf42      	ittt	mi
 8010c18:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8010c1a:	4a1b      	ldrmi	r2, [pc, #108]	; (8010c88 <enet_init+0x2d0>)
 8010c1c:	6091      	strmi	r1, [r2, #8]
 8010c1e:	681a      	ldr	r2, [r3, #0]
 8010c20:	0595      	lsls	r5, r2, #22
 8010c22:	bf42      	ittt	mi
 8010c24:	4a18      	ldrmi	r2, [pc, #96]	; (8010c88 <enet_init+0x2d0>)
 8010c26:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8010c28:	60d1      	strmi	r1, [r2, #12]
 8010c2a:	681a      	ldr	r2, [r3, #0]
 8010c2c:	0554      	lsls	r4, r2, #21
 8010c2e:	d508      	bpl.n	8010c42 <enet_init+0x28a>
 8010c30:	4915      	ldr	r1, [pc, #84]	; (8010c88 <enet_init+0x2d0>)
 8010c32:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8010c34:	684a      	ldr	r2, [r1, #4]
 8010c36:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8010c3a:	f022 0206 	bic.w	r2, r2, #6
 8010c3e:	4302      	orrs	r2, r0
 8010c40:	604a      	str	r2, [r1, #4]
 8010c42:	681a      	ldr	r2, [r3, #0]
 8010c44:	0510      	lsls	r0, r2, #20
 8010c46:	d508      	bpl.n	8010c5a <enet_init+0x2a2>
 8010c48:	490f      	ldr	r1, [pc, #60]	; (8010c88 <enet_init+0x2d0>)
 8010c4a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8010c4c:	680a      	ldr	r2, [r1, #0]
 8010c4e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8010c52:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8010c56:	4302      	orrs	r2, r0
 8010c58:	600a      	str	r2, [r1, #0]
 8010c5a:	681a      	ldr	r2, [r3, #0]
 8010c5c:	04d1      	lsls	r1, r2, #19
 8010c5e:	d506      	bpl.n	8010c6e <enet_init+0x2b6>
 8010c60:	4909      	ldr	r1, [pc, #36]	; (8010c88 <enet_init+0x2d0>)
 8010c62:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010c64:	680a      	ldr	r2, [r1, #0]
 8010c66:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8010c6a:	4302      	orrs	r2, r0
 8010c6c:	600a      	str	r2, [r1, #0]
 8010c6e:	681a      	ldr	r2, [r3, #0]
 8010c70:	0492      	lsls	r2, r2, #18
 8010c72:	d506      	bpl.n	8010c82 <enet_init+0x2ca>
 8010c74:	4904      	ldr	r1, [pc, #16]	; (8010c88 <enet_init+0x2d0>)
 8010c76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010c78:	680a      	ldr	r2, [r1, #0]
 8010c7a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8010c7e:	4313      	orrs	r3, r2
 8010c80:	600b      	str	r3, [r1, #0]
 8010c82:	2001      	movs	r0, #1
 8010c84:	e6e3      	b.n	8010a4e <enet_init+0x96>
 8010c86:	bf00      	nop
 8010c88:	40028000 	andmi	r8, r2, r0
 8010c8c:	40029000 	andmi	r9, r2, r0
 8010c90:	2000a10c 	andcs	sl, r0, ip, lsl #2
 8010c94:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08010c98 <enet_txfifo_flush>:
 8010c98:	4b06      	ldr	r3, [pc, #24]	; (8010cb4 <enet_txfifo_flush+0x1c>)
 8010c9a:	4807      	ldr	r0, [pc, #28]	; (8010cb8 <enet_txfifo_flush+0x20>)
 8010c9c:	699a      	ldr	r2, [r3, #24]
 8010c9e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8010ca2:	619a      	str	r2, [r3, #24]
 8010ca4:	699a      	ldr	r2, [r3, #24]
 8010ca6:	02d2      	lsls	r2, r2, #11
 8010ca8:	d502      	bpl.n	8010cb0 <enet_txfifo_flush+0x18>
 8010caa:	3801      	subs	r0, #1
 8010cac:	d1fa      	bne.n	8010ca4 <enet_txfifo_flush+0xc>
 8010cae:	4770      	bx	lr
 8010cb0:	2001      	movs	r0, #1
 8010cb2:	4770      	bx	lr
 8010cb4:	40029000 	andmi	r9, r2, r0
 8010cb8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010cbc <enet_tx_enable>:
 8010cbc:	4a06      	ldr	r2, [pc, #24]	; (8010cd8 <enet_tx_enable+0x1c>)
 8010cbe:	b508      	push	{r3, lr}
 8010cc0:	6813      	ldr	r3, [r2, #0]
 8010cc2:	f043 0308 	orr.w	r3, r3, #8
 8010cc6:	6013      	str	r3, [r2, #0]
 8010cc8:	f7ff ffe6 	bl	8010c98 <enet_txfifo_flush>
 8010ccc:	4a03      	ldr	r2, [pc, #12]	; (8010cdc <enet_tx_enable+0x20>)
 8010cce:	6993      	ldr	r3, [r2, #24]
 8010cd0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010cd4:	6193      	str	r3, [r2, #24]
 8010cd6:	bd08      	pop	{r3, pc}
 8010cd8:	40028000 	andmi	r8, r2, r0
 8010cdc:	40029000 	andmi	r9, r2, r0

08010ce0 <enet_enable>:
 8010ce0:	b508      	push	{r3, lr}
 8010ce2:	f7ff ffeb 	bl	8010cbc <enet_tx_enable>
 8010ce6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010cea:	f7ff bdcf 	b.w	801088c <enet_rx_enable>

08010cee <enet_desc_information_get>:
 8010cee:	2905      	cmp	r1, #5
 8010cf0:	d817      	bhi.n	8010d22 <enet_desc_information_get+0x34>
 8010cf2:	e8df f001 	tbb	[pc, r1]
 8010cf6:	03091012 	movweq	r1, #36882	; 0x9012
 8010cfa:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8010cfe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010d02:	4770      	bx	lr
 8010d04:	88c0      	ldrh	r0, [r0, #6]
 8010d06:	e7fa      	b.n	8010cfe <enet_desc_information_get+0x10>
 8010d08:	8840      	ldrh	r0, [r0, #2]
 8010d0a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8010d0e:	2804      	cmp	r0, #4
 8010d10:	d90a      	bls.n	8010d28 <enet_desc_information_get+0x3a>
 8010d12:	3804      	subs	r0, #4
 8010d14:	4770      	bx	lr
 8010d16:	6880      	ldr	r0, [r0, #8]
 8010d18:	4770      	bx	lr
 8010d1a:	6800      	ldr	r0, [r0, #0]
 8010d1c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8010d20:	4770      	bx	lr
 8010d22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010d26:	4770      	bx	lr
 8010d28:	2000      	movs	r0, #0
 8010d2a:	4770      	bx	lr

08010d2c <enet_rxframe_drop>:
 8010d2c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8010d30:	4814      	ldr	r0, [pc, #80]	; (8010d84 <enet_rxframe_drop+0x58>)
 8010d32:	b510      	push	{r4, lr}
 8010d34:	6802      	ldr	r2, [r0, #0]
 8010d36:	4914      	ldr	r1, [pc, #80]	; (8010d88 <enet_rxframe_drop+0x5c>)
 8010d38:	6854      	ldr	r4, [r2, #4]
 8010d3a:	6013      	str	r3, [r2, #0]
 8010d3c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8010d40:	680b      	ldr	r3, [r1, #0]
 8010d42:	d009      	beq.n	8010d58 <enet_rxframe_drop+0x2c>
 8010d44:	b12b      	cbz	r3, 8010d52 <enet_rxframe_drop+0x26>
 8010d46:	68da      	ldr	r2, [r3, #12]
 8010d48:	6002      	str	r2, [r0, #0]
 8010d4a:	681a      	ldr	r2, [r3, #0]
 8010d4c:	b1ba      	cbz	r2, 8010d7e <enet_rxframe_drop+0x52>
 8010d4e:	600a      	str	r2, [r1, #0]
 8010d50:	bd10      	pop	{r4, pc}
 8010d52:	68d3      	ldr	r3, [r2, #12]
 8010d54:	6003      	str	r3, [r0, #0]
 8010d56:	e7fb      	b.n	8010d50 <enet_rxframe_drop+0x24>
 8010d58:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8010d5c:	4c0b      	ldr	r4, [pc, #44]	; (8010d8c <enet_rxframe_drop+0x60>)
 8010d5e:	d006      	beq.n	8010d6e <enet_rxframe_drop+0x42>
 8010d60:	68e2      	ldr	r2, [r4, #12]
 8010d62:	6002      	str	r2, [r0, #0]
 8010d64:	2b00      	cmp	r3, #0
 8010d66:	d0f3      	beq.n	8010d50 <enet_rxframe_drop+0x24>
 8010d68:	681b      	ldr	r3, [r3, #0]
 8010d6a:	600b      	str	r3, [r1, #0]
 8010d6c:	e7f0      	b.n	8010d50 <enet_rxframe_drop+0x24>
 8010d6e:	6824      	ldr	r4, [r4, #0]
 8010d70:	3210      	adds	r2, #16
 8010d72:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8010d76:	4422      	add	r2, r4
 8010d78:	6002      	str	r2, [r0, #0]
 8010d7a:	2b00      	cmp	r3, #0
 8010d7c:	d0e8      	beq.n	8010d50 <enet_rxframe_drop+0x24>
 8010d7e:	3310      	adds	r3, #16
 8010d80:	e7f3      	b.n	8010d6a <enet_rxframe_drop+0x3e>
 8010d82:	bf00      	nop
 8010d84:	2000a104 	andcs	sl, r0, r4, lsl #2
 8010d88:	2000a0fc 	strdcs	sl, [r0], -ip
 8010d8c:	40029000 	andmi	r9, r2, r0

08010d90 <enet_rxframe_size_get>:
 8010d90:	b508      	push	{r3, lr}
 8010d92:	4b0c      	ldr	r3, [pc, #48]	; (8010dc4 <enet_rxframe_size_get+0x34>)
 8010d94:	681b      	ldr	r3, [r3, #0]
 8010d96:	6818      	ldr	r0, [r3, #0]
 8010d98:	2800      	cmp	r0, #0
 8010d9a:	db10      	blt.n	8010dbe <enet_rxframe_size_get+0x2e>
 8010d9c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8010da0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010da4:	d003      	beq.n	8010dae <enet_rxframe_size_get+0x1e>
 8010da6:	f7ff ffc1 	bl	8010d2c <enet_rxframe_drop>
 8010daa:	2001      	movs	r0, #1
 8010dac:	bd08      	pop	{r3, pc}
 8010dae:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8010db2:	2b21      	cmp	r3, #33	; 0x21
 8010db4:	d0f7      	beq.n	8010da6 <enet_rxframe_size_get+0x16>
 8010db6:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8010dba:	3804      	subs	r0, #4
 8010dbc:	e7f6      	b.n	8010dac <enet_rxframe_size_get+0x1c>
 8010dbe:	2000      	movs	r0, #0
 8010dc0:	e7f4      	b.n	8010dac <enet_rxframe_size_get+0x1c>
 8010dc2:	bf00      	nop
 8010dc4:	2000a104 	andcs	sl, r0, r4, lsl #2

08010dc8 <enet_initpara_reset>:
 8010dc8:	2200      	movs	r2, #0
 8010dca:	4b08      	ldr	r3, [pc, #32]	; (8010dec <enet_initpara_reset+0x24>)
 8010dcc:	e9c3 2200 	strd	r2, r2, [r3]
 8010dd0:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8010dd4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8010dd8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8010ddc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8010de0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8010de4:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8010de8:	639a      	str	r2, [r3, #56]	; 0x38
 8010dea:	4770      	bx	lr
 8010dec:	2000a10c 	andcs	sl, r0, ip, lsl #2

08010df0 <enet_deinit>:
 8010df0:	b508      	push	{r3, lr}
 8010df2:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010df6:	f7fe fcea 	bl	800f7ce <rcu_periph_reset_enable>
 8010dfa:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010dfe:	f7fe fce8 	bl	800f7d2 <rcu_periph_reset_disable>
 8010e02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010e06:	f7ff bfdf 	b.w	8010dc8 <enet_initpara_reset>
	...

08010e0c <i2c_clock_config>:
 8010e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010e0e:	4605      	mov	r5, r0
 8010e10:	2002      	movs	r0, #2
 8010e12:	460c      	mov	r4, r1
 8010e14:	4617      	mov	r7, r2
 8010e16:	f7fe fd85 	bl	800f924 <rcu_clock_freq_get>
 8010e1a:	4603      	mov	r3, r0
 8010e1c:	4828      	ldr	r0, [pc, #160]	; (8010ec0 <i2c_clock_config+0xb4>)
 8010e1e:	4a29      	ldr	r2, [pc, #164]	; (8010ec4 <i2c_clock_config+0xb8>)
 8010e20:	fbb3 f0f0 	udiv	r0, r3, r0
 8010e24:	4293      	cmp	r3, r2
 8010e26:	bf34      	ite	cc
 8010e28:	4601      	movcc	r1, r0
 8010e2a:	2136      	movcs	r1, #54	; 0x36
 8010e2c:	686e      	ldr	r6, [r5, #4]
 8010e2e:	4a26      	ldr	r2, [pc, #152]	; (8010ec8 <i2c_clock_config+0xbc>)
 8010e30:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8010e34:	430e      	orrs	r6, r1
 8010e36:	4294      	cmp	r4, r2
 8010e38:	606e      	str	r6, [r5, #4]
 8010e3a:	d816      	bhi.n	8010e6a <i2c_clock_config+0x5e>
 8010e3c:	3001      	adds	r0, #1
 8010e3e:	2835      	cmp	r0, #53	; 0x35
 8010e40:	d90d      	bls.n	8010e5e <i2c_clock_config+0x52>
 8010e42:	2236      	movs	r2, #54	; 0x36
 8010e44:	622a      	str	r2, [r5, #32]
 8010e46:	0064      	lsls	r4, r4, #1
 8010e48:	fbb3 f4f4 	udiv	r4, r3, r4
 8010e4c:	2c04      	cmp	r4, #4
 8010e4e:	bf38      	it	cc
 8010e50:	2404      	movcc	r4, #4
 8010e52:	69ea      	ldr	r2, [r5, #28]
 8010e54:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8010e58:	4314      	orrs	r4, r2
 8010e5a:	61ec      	str	r4, [r5, #28]
 8010e5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e5e:	2802      	cmp	r0, #2
 8010e60:	d801      	bhi.n	8010e66 <i2c_clock_config+0x5a>
 8010e62:	2202      	movs	r2, #2
 8010e64:	e7ee      	b.n	8010e44 <i2c_clock_config+0x38>
 8010e66:	6228      	str	r0, [r5, #32]
 8010e68:	e7ed      	b.n	8010e46 <i2c_clock_config+0x3a>
 8010e6a:	4a18      	ldr	r2, [pc, #96]	; (8010ecc <i2c_clock_config+0xc0>)
 8010e6c:	4294      	cmp	r4, r2
 8010e6e:	d8f5      	bhi.n	8010e5c <i2c_clock_config+0x50>
 8010e70:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8010e74:	4351      	muls	r1, r2
 8010e76:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010e7a:	fbb1 f1f2 	udiv	r1, r1, r2
 8010e7e:	3101      	adds	r1, #1
 8010e80:	6229      	str	r1, [r5, #32]
 8010e82:	b9a7      	cbnz	r7, 8010eae <i2c_clock_config+0xa2>
 8010e84:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010e88:	fbb3 f4f4 	udiv	r4, r3, r4
 8010e8c:	69eb      	ldr	r3, [r5, #28]
 8010e8e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010e92:	61eb      	str	r3, [r5, #28]
 8010e94:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8010e98:	b90b      	cbnz	r3, 8010e9e <i2c_clock_config+0x92>
 8010e9a:	f044 0401 	orr.w	r4, r4, #1
 8010e9e:	69eb      	ldr	r3, [r5, #28]
 8010ea0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010ea4:	61eb      	str	r3, [r5, #28]
 8010ea6:	69eb      	ldr	r3, [r5, #28]
 8010ea8:	4323      	orrs	r3, r4
 8010eaa:	61eb      	str	r3, [r5, #28]
 8010eac:	e7d6      	b.n	8010e5c <i2c_clock_config+0x50>
 8010eae:	2219      	movs	r2, #25
 8010eb0:	4354      	muls	r4, r2
 8010eb2:	fbb3 f4f4 	udiv	r4, r3, r4
 8010eb6:	69eb      	ldr	r3, [r5, #28]
 8010eb8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8010ebc:	e7e9      	b.n	8010e92 <i2c_clock_config+0x86>
 8010ebe:	bf00      	nop
 8010ec0:	000f4240 	andeq	r4, pc, r0, asr #4
 8010ec4:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8010ec8:	000186a0 	andeq	r8, r1, r0, lsr #13
 8010ecc:	00061a80 	andeq	r1, r6, r0, lsl #21

08010ed0 <i2c_ack_config>:
 8010ed0:	6803      	ldr	r3, [r0, #0]
 8010ed2:	2901      	cmp	r1, #1
 8010ed4:	bf0c      	ite	eq
 8010ed6:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8010eda:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8010ede:	6003      	str	r3, [r0, #0]
 8010ee0:	4770      	bx	lr

08010ee2 <i2c_ackpos_config>:
 8010ee2:	6803      	ldr	r3, [r0, #0]
 8010ee4:	b919      	cbnz	r1, 8010eee <i2c_ackpos_config+0xc>
 8010ee6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010eea:	6003      	str	r3, [r0, #0]
 8010eec:	4770      	bx	lr
 8010eee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010ef2:	e7fa      	b.n	8010eea <i2c_ackpos_config+0x8>

08010ef4 <i2c_master_addressing>:
 8010ef4:	3202      	adds	r2, #2
 8010ef6:	bf0c      	ite	eq
 8010ef8:	f021 0101 	biceq.w	r1, r1, #1
 8010efc:	f041 0101 	orrne.w	r1, r1, #1
 8010f00:	6101      	str	r1, [r0, #16]
 8010f02:	4770      	bx	lr

08010f04 <i2c_enable>:
 8010f04:	6803      	ldr	r3, [r0, #0]
 8010f06:	f043 0301 	orr.w	r3, r3, #1
 8010f0a:	6003      	str	r3, [r0, #0]
 8010f0c:	4770      	bx	lr

08010f0e <i2c_start_on_bus>:
 8010f0e:	6803      	ldr	r3, [r0, #0]
 8010f10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010f14:	6003      	str	r3, [r0, #0]
 8010f16:	4770      	bx	lr

08010f18 <i2c_stop_on_bus>:
 8010f18:	6803      	ldr	r3, [r0, #0]
 8010f1a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8010f1e:	6003      	str	r3, [r0, #0]
 8010f20:	4770      	bx	lr

08010f22 <i2c_data_transmit>:
 8010f22:	6101      	str	r1, [r0, #16]
 8010f24:	4770      	bx	lr

08010f26 <i2c_data_receive>:
 8010f26:	6900      	ldr	r0, [r0, #16]
 8010f28:	b2c0      	uxtb	r0, r0
 8010f2a:	4770      	bx	lr

08010f2c <i2c_flag_get>:
 8010f2c:	098b      	lsrs	r3, r1, #6
 8010f2e:	581a      	ldr	r2, [r3, r0]
 8010f30:	2301      	movs	r3, #1
 8010f32:	f001 011f 	and.w	r1, r1, #31
 8010f36:	408b      	lsls	r3, r1
 8010f38:	4213      	tst	r3, r2
 8010f3a:	bf14      	ite	ne
 8010f3c:	2001      	movne	r0, #1
 8010f3e:	2000      	moveq	r0, #0
 8010f40:	4770      	bx	lr

08010f42 <i2c_flag_clear>:
 8010f42:	f240 5301 	movw	r3, #1281	; 0x501
 8010f46:	4299      	cmp	r1, r3
 8010f48:	b510      	push	{r4, lr}
 8010f4a:	d102      	bne.n	8010f52 <i2c_flag_clear+0x10>
 8010f4c:	6943      	ldr	r3, [r0, #20]
 8010f4e:	6983      	ldr	r3, [r0, #24]
 8010f50:	bd10      	pop	{r4, pc}
 8010f52:	2201      	movs	r2, #1
 8010f54:	098c      	lsrs	r4, r1, #6
 8010f56:	5823      	ldr	r3, [r4, r0]
 8010f58:	f001 011f 	and.w	r1, r1, #31
 8010f5c:	408a      	lsls	r2, r1
 8010f5e:	ea23 0302 	bic.w	r3, r3, r2
 8010f62:	5023      	str	r3, [r4, r0]
 8010f64:	e7f4      	b.n	8010f50 <i2c_flag_clear+0xe>
	...

08010f68 <mac_address_get(unsigned char*)>:
 8010f68:	2102      	movs	r1, #2
 8010f6a:	4a07      	ldr	r2, [pc, #28]	; (8010f88 <mac_address_get(unsigned char*)+0x20>)
 8010f6c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010f70:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010f74:	7001      	strb	r1, [r0, #0]
 8010f76:	7042      	strb	r2, [r0, #1]
 8010f78:	0e1a      	lsrs	r2, r3, #24
 8010f7a:	7082      	strb	r2, [r0, #2]
 8010f7c:	0c1a      	lsrs	r2, r3, #16
 8010f7e:	70c2      	strb	r2, [r0, #3]
 8010f80:	0a1a      	lsrs	r2, r3, #8
 8010f82:	7102      	strb	r2, [r0, #4]
 8010f84:	7143      	strb	r3, [r0, #5]
 8010f86:	4770      	bx	lr
 8010f88:	1ffff000 	svcne	0x00fff000

08010f8c <__popcountsi2>:
 8010f8c:	0843      	lsrs	r3, r0, #1
 8010f8e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8010f92:	1ac0      	subs	r0, r0, r3
 8010f94:	0883      	lsrs	r3, r0, #2
 8010f96:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8010f9a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8010f9e:	4418      	add	r0, r3
 8010fa0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8010fa4:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8010fa8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8010fac:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8010fb0:	0e00      	lsrs	r0, r0, #24
 8010fb2:	4770      	bx	lr

Disassembly of section .rodata:

08010fb4 <vtable for DisplayHandler-0xe0>:
	...
 8010fbc:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010fc0:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8010fc4:	00000000 	andeq	r0, r0, r0
 8010fc8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010fcc:	323a3131 	eorscc	r3, sl, #1073741836	; 0x4000000c
 8010fd0:	30333a37 	eorscc	r3, r3, r7, lsr sl
 8010fd4:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8010fd8:	20313120 	eorscs	r3, r1, r0, lsr #2
 8010fdc:	32323032 	eorscc	r3, r2, #50	; 0x32
 8010fe0:	335b1b00 	cmpcc	fp, #0, 22
 8010fe4:	534f6d32 	movtpl	r6, #64818	; 0xfd32
 8010fe8:	65532043 	ldrbvs	r2, [r3, #-67]	; 0xffffffbd
 8010fec:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010ff0:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8010ff4:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8010ff8:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8010e30 <i2c_clock_config+0x24>
 8010ffc:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8011000:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8011004:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8011008:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801100c:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8011010:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8011014:	63736f5f 	cmnvs	r3, #380	; 0x17c
 8011018:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 801101c:	65733d65 	ldrbvs	r3, [r3, #-3429]!	; 0xfffff29b
 8011020:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8011024:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8011028:	00707474 	rsbseq	r7, r0, r4, ror r4
 801102c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8011030:	43534f3d 	cmpmi	r3, #61, 30	; 0xf4
 8011034:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8011038:	00726576 	rsbseq	r6, r2, r6, ror r5
 801103c:	2043534f 	subcs	r5, r3, pc, asr #6
 8011040:	20584d44 	subscs	r4, r8, r4, asr #26
 8011044:	44470031 	strbmi	r0, [r7], #-49	; 0xffffffcf
 8011048:	31463233 	cmpcc	r6, r3, lsr r2
 801104c:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
 8011050:	3a504900 	bcc	9423458 <__exidx_end+0x1410948>
 8011054:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8011058:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801105c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011060:	00632520 	rsbeq	r2, r3, r0, lsr #10
 8011064:	203a6e49 	eorscs	r6, sl, r9, asr #28
 8011068:	4f006425 	svcmi	0x00006425
 801106c:	203a7475 	eorscs	r7, sl, r5, ror r4
 8011070:	64006425 	strvs	r6, [r0], #-1061	; 0xfffffbdb
 8011074:	0021786d 	eoreq	r7, r1, sp, ror #16
 8011078:	61657262 	cmnvs	r5, r2, ror #4
 801107c:	6d00236b 	stcvs	3, cr2, [r0, #-428]	; 0xfffffe54
 8011080:	00236261 	eoreq	r6, r3, r1, ror #4
 8011084:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8011088:	23687365 	cmncs	r8, #-1811939327	; 0x94000001
 801108c:	6f6c7300 	svcvs	0x006c7300
 8011090:	00237374 	eoreq	r7, r3, r4, ror r3

08011094 <vtable for DisplayHandler>:
	...
 801109c:	08007e1b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, fp, ip, sp, lr}
 80110a0:	08007e41 	stmdaeq	r0, {r0, r6, r9, sl, fp, ip, sp, lr}
 80110a4:	08007e85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, lr}

080110a8 <CSWTCH.88>:
 80110a8:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80110ac:	 			; <UNDEFINED> instruction: 0x332e3146

080110ad <SOFTWARE_VERSION>:
 80110ad:	00332e31 	eorseq	r2, r3, r1, lsr lr
 80110b1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80110b5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80110b9:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80110bd:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80110c1:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80110c5:	0a73252c 	beq	9cda57d <__exidx_end+0x1cc7a6d>
 80110c9:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80110cd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80110d1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80110d5:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80110d9:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80110dd:	4f000a64 	svcmi	0x00000a64
 80110e1:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80110e5:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80110e9:	616c7073 	smcvs	50947	; 0xc703
 80110ed:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80110f1:	6674000a 	ldrbtvs	r0, [r4], -sl
 80110f5:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80110f9:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80110fd:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011101:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8011105:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8011109:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801110d:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8011111:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8011115:	20505446 	subscs	r5, r0, r6, asr #8
 8011119:	20206e4f 	eorcs	r6, r0, pc, asr #28
 801111d:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8011121:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8011125:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8011129:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 801112d:	525b2066 	subspl	r2, fp, #102	; 0x66
 8011131:	6f6f6265 	svcvs	0x006f6265
 8011135:	00205d74 	eoreq	r5, r0, r4, ror sp
 8011139:	4f525245 	svcmi	0x00525245
 801113d:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8011141:	000a7465 	andeq	r7, sl, r5, ror #8
 8011145:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8011149:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 801114d:	616c7073 	smcvs	50947	; 0xc703
 8011151:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8011155:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8011159:	000a2123 	andeq	r2, sl, r3, lsr #2
 801115d:	4f525245 	svcmi	0x00525245
 8011161:	0a3f2352 	beq	8fd9eb1 <__exidx_end+0xfc73a1>
 8011165:	62657200 	rsbvs	r7, r5, #0, 4
 8011169:	23746f6f 	cmncs	r4, #444	; 0x1bc
 801116d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8011171:	00237473 	eoreq	r7, r3, r3, ror r4
 8011175:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011179:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 801117d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8011181:	76002365 	strvc	r2, [r0], -r5, ror #6
 8011185:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011189:	00236e6f 	eoreq	r6, r3, pc, ror #28
 801118d:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8011191:	63616600 	cmnvs	r1, #0, 12
 8011195:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011199:	 	tstmi	r0, r3, lsr #6

0801119c <s_Node>:
 801119c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80111a0:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80111ac:	41730000 	cmnmi	r3, r0
 80111b0:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80111b4:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80111c0:	2043534f 	subcs	r5, r3, pc, asr #6
 80111c4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80111c8:	00007265 	andeq	r7, r0, r5, ror #4
 80111cc:	00000000 	andeq	r0, r0, r0
 80111d0:	544c0000 	strbpl	r0, [ip], #-0
 80111d4:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80111e4:	2043534f 	subcs	r5, r3, pc, asr #6
 80111e8:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80111ec:	0000746e 	andeq	r7, r0, lr, ror #8
 80111f0:	00000000 	andeq	r0, r0, r0
 80111f4:	44520000 	ldrbmi	r0, [r2], #-0
 80111f8:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80111fc:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8011200:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8011204:	0000796c 	andeq	r7, r0, ip, ror #18
 8011208:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 801120c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8011218:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 801121c:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801122c:	00504444 	subseq	r4, r0, r4, asr #8
	...
 801123c:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8011240:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8011244:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8011248:	00000072 	andeq	r0, r0, r2, ror r0
 801124c:	00000000 	andeq	r0, r0, r0
 8011250:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08011262 <s_Output>:
 8011262:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801126e:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801127a:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801127e:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8011282:	00000000 	andeq	r0, r0, r0
 8011286:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801128a:	0000006c 	andeq	r0, r0, ip, rrx
 801128e:	00000000 	andeq	r0, r0, r0
 8011292:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8011296:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 801129a:	00000000 	andeq	r0, r0, r0
 801129e:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80112aa:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80112ae:	00006769 	andeq	r6, r0, r9, ror #14
 80112b2:	00000000 	andeq	r0, r0, r0
 80112b6:	70657453 	rsbvc	r7, r5, r3, asr r4
 80112ba:	00726570 	rsbseq	r6, r2, r0, ror r5
 80112be:	00000000 	andeq	r0, r0, r0
 80112c2:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80112c6:	00007265 	andeq	r7, r0, r5, ror #4
 80112ca:	00000000 	andeq	r0, r0, r0
 80112ce:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80112d2:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80112d6:	00000000 	andeq	r0, r0, r0
 80112da:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80112de:	00006c61 	andeq	r6, r0, r1, ror #24
 80112e2:	00000000 	andeq	r0, r0, r0
 80112e6:	20424752 	subcs	r4, r2, r2, asr r7
 80112ea:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80112ee:	0000006c 	andeq	r0, r0, ip, rrx
	...

080112f4 <RemoteConfig::s_GET>:
 80112f4:	080096a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, ip, pc}
 80112f8:	00000000 	andeq	r0, r0, r0
 80112fc:	08011166 	stmdaeq	r1, {r1, r2, r5, r6, r8, ip}
 8011300:	00000008 	andeq	r0, r0, r8
 8011304:	08008b79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, fp, pc}
 8011308:	00000000 	andeq	r0, r0, r0
 801130c:	0801116f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, ip}
 8011310:	00000005 	andeq	r0, r0, r5
 8011314:	08008b79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, fp, pc}
 8011318:	00000000 	andeq	r0, r0, r0
 801131c:	08011175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, ip}
 8011320:	00000006 	andeq	r0, r0, r6
 8011324:	08008d2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, pc}
 8011328:	00000000 	andeq	r0, r0, r0
 801132c:	0801117c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, ip}
 8011330:	00000007 	andeq	r0, r0, r7
 8011334:	08008ced 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, fp, pc}
 8011338:	00000000 	andeq	r0, r0, r0
 801133c:	08011184 	stmdaeq	r1, {r2, r7, r8, ip}
 8011340:	00000008 	andeq	r0, r0, r8
 8011344:	08008c49 	stmdaeq	r0, {r0, r3, r6, sl, fp, pc}
 8011348:	00000000 	andeq	r0, r0, r0
 801134c:	0801114b 	stmdaeq	r1, {r0, r1, r3, r6, r8, ip}
 8011350:	00000008 	andeq	r0, r0, r8
 8011354:	08009075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, pc}
 8011358:	00000000 	andeq	r0, r0, r0
 801135c:	0801118d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip}
 8011360:	00010004 	andeq	r0, r1, r4
 8011364:	08008c9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, pc}
 8011368:	00000000 	andeq	r0, r0, r0
 801136c:	08011145 	stmdaeq	r1, {r0, r2, r6, r8, ip}
 8011370:	00000005 	andeq	r0, r0, r5
 8011374:	08009395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, pc}
 8011378:	00000000 	andeq	r0, r0, r0
 801137c:	08011192 	stmdaeq	r1, {r1, r4, r7, r8, ip}
 8011380:	00000009 	andeq	r0, r0, r9

08011384 <RemoteConfig::s_SET>:
 8011384:	08008e4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, fp, pc}
 8011388:	00000000 	andeq	r0, r0, r0
 801138c:	08011145 	stmdaeq	r1, {r0, r2, r6, r8, ip}
 8011390:	00010005 	andeq	r0, r1, r5
 8011394:	08008e25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, pc}
 8011398:	00000000 	andeq	r0, r0, r0
 801139c:	0801114b 	stmdaeq	r1, {r0, r1, r3, r6, r8, ip}
 80113a0:	00010008 	andeq	r0, r1, r8
 80113a4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80113a8:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80113ac:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80113b0:	0a64253d 	beq	991a8ac <__exidx_end+0x1907d9c>
 80113b4:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80113b8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80113bc:	002c2273 	eoreq	r2, ip, r3, ror r2
 80113c0:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80113c4:	000a7325 	andeq	r7, sl, r5, lsr #6
 80113c8:	6f626552 	svcvs	0x00626552
 80113cc:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80113d0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80113d4:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80113d8:	6f6f6265 	svcvs	0x006f6265
 80113dc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80113e0:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80113e4:	6f637200 	svcvs	0x00637200
 80113e8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80113ec:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80113f0:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80113f4:	6b726f77 	blvs	9cad1d8 <__exidx_end+0x1c9a6c8>
 80113f8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80113fc:	63736f00 	cmnvs	r3, #0, 30
 8011400:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011404:	72617000 	rsbvc	r7, r1, #0
 8011408:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 801140c:	00747874 	rsbseq	r7, r4, r4, ror r8

08011410 <RemoteConfig::s_TXT>:
 8011410:	0800907d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, pc}
 8011414:	00000000 	andeq	r0, r0, r0
 8011418:	080092ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, ip, pc}
 801141c:	00000000 	andeq	r0, r0, r0
 8011420:	080113e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, ip}
 8011424:	0000000b 	andeq	r0, r0, fp
 8011428:	0000000c 	andeq	r0, r0, ip
 801142c:	080090a9 	stmdaeq	r0, {r0, r3, r5, r7, ip, pc}
 8011430:	00000000 	andeq	r0, r0, r0
 8011434:	0800931d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, ip, pc}
 8011438:	00000000 	andeq	r0, r0, r0
 801143c:	080113f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, ip}
 8011440:	0000000b 	andeq	r0, r0, fp
 8011444:	00000000 	andeq	r0, r0, r0
 8011448:	080090d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, ip, pc}
 801144c:	00000000 	andeq	r0, r0, r0
 8011450:	08009345 	stmdaeq	r0, {r0, r2, r6, r8, r9, ip, pc}
 8011454:	00000000 	andeq	r0, r0, r0
 8011458:	080113fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip}
 801145c:	00000007 	andeq	r0, r0, r7
 8011460:	00000008 	andeq	r0, r0, r8
 8011464:	08009101 	stmdaeq	r0, {r0, r8, ip, pc}
 8011468:	00000000 	andeq	r0, r0, r0
 801146c:	0800936d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, ip, pc}
 8011470:	00000000 	andeq	r0, r0, r0
 8011474:	08011405 	stmdaeq	r1, {r0, r2, sl, ip}
 8011478:	0000000a 	andeq	r0, r0, sl
 801147c:	00000002 	andeq	r0, r0, r2
 8011480:	00544547 	subseq	r4, r4, r7, asr #10
 8011484:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8011488:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 801148c:	0a200050 	beq	88115d4 <__exidx_end+0x7feac4>
 8011490:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8011494:	43003a00 	movwmi	r3, #2560	; 0xa00
 8011498:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 801149c:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 80114a0:	00657079 	rsbeq	r7, r5, r9, ror r0
 80114a4:	61003b20 	tstvs	r0, r0, lsr #22
 80114a8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80114ac:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80114b0:	6a2f6e6f 	bvs	8bece74 <__exidx_end+0xbda364>
 80114b4:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80114b8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80114bc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80114c0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80114c4:	2f006874 	svccs	0x00006874
 80114c8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80114cc:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80114d0:	2f006c6d 	svccs	0x00006c6d
 80114d4:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80114d8:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80114dc:	2f007373 	svccs	0x00007373
 80114e0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80114e4:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80114e8:	736a2f00 	cmnvc	sl, #0, 30
 80114ec:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80114f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80114f4:	72657600 	rsbvc	r7, r5, #0, 12
 80114f8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80114fc:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8011500:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8011504:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011508:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801150c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011510:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011514:	6a2f0079 	bvs	8bd1700 <__exidx_end+0xbbebf0>
 8011518:	2f6e6f73 	svccs	0x006e6f73
 801151c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8011520:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8011524:	6f6f6265 	svcvs	0x006f6265
 8011528:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 801152c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8011530:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8011534:	434f4421 	movtmi	r4, #62497	; 0xf421
 8011538:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801153c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8011540:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011544:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011548:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 801154c:	3e646165 	powccsz	f6, f4, f5
 8011550:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8011554:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8011558:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 801155c:	742f3c74 	strtvc	r3, [pc], #-3188	; 8011564 <RemoteConfig::s_TXT+0x154>
 8011560:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8011564:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011568:	3e646165 	powccsz	f6, f4, f5
 801156c:	6f623c0a 	svcvs	0x00623c0a
 8011570:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8011574:	4f3e3168 	svcmi	0x003e3168
 8011578:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801157c:	2f3c3e31 	svccs	0x003c3e31
 8011580:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011584:	2f3c0a3e 	svccs	0x003c0a3e
 8011588:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801158c:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8011590:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8011594:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8011598:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 801159c:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 80115a0:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80115a4:	71655200 	cmnvc	r5, r0, lsl #4
 80115a8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80115ac:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80115b0:	20797469 	rsbscs	r7, r9, r9, ror #8
 80115b4:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80115b8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80115bc:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 80115c0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80115c4:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80115c8:	6f542049 	svcvs	0x00542049
 80115cc:	6f4c206f 	svcvs	0x004c206f
 80115d0:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 80115d4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 80115d8:	206c616e 	rsbcs	r6, ip, lr, ror #2
 80115dc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80115e0:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 80115e4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 80115e8:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80115ec:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80115f0:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80115f4:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80115f8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80115fc:	00646574 	rsbeq	r6, r4, r4, ror r5
 8011600:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8011604:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011608:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801160c:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8011610:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8011614:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8011618:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 801161c:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8011620:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8011624:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8011628:	434f4421 	movtmi	r4, #62497	; 0xf421
 801162c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8011630:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8011634:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011638:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801163c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8011640:	3e646165 	powccsz	f6, f4, f5
 8011644:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8011648:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 801164c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8011650:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8011654:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8011658:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801165c:	0a3e6461 	beq	8faa7e8 <__exidx_end+0xf97cd8>
 8011660:	646f623c 	strbtvs	r6, [pc], #-572	; 8011668 <RemoteConfig::s_TXT+0x258>
 8011664:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8011668:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 801166c:	31682f3c 	cmncc	r8, ip, lsr pc
 8011670:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8011674:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011678:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801167c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8011680:	5448000a 	strbpl	r0, [r8], #-10
 8011684:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8011688:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 801168c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8011690:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8011694:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8011698:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801169c:	6f430a0d 	svcvs	0x00430a0d
 80116a0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80116a4:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 80116a8:	203a6570 	eorscs	r6, sl, r0, ror r5
 80116ac:	0a0d7325 	beq	836e348 <__exidx_end+0x35b838>
 80116b0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80116b4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80116b8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80116bc:	203a6874 	eorscs	r6, sl, r4, ror r8
 80116c0:	0a0d7525 	beq	836eb5c <__exidx_end+0x35c04c>
 80116c4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80116c8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80116cc:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80116d0:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 80116d4:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 80116d8:	 	ldrbvs	r0, [r4, #-10]!

080116da <contentType>:
 80116da:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80116de:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80116e2:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80116fa:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80116fe:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 801171a:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801171e:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8011722:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8011726:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 801173a:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801173e:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8011742:	2f6e6f69 	svccs	0x006e6f69
 8011746:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

0801175a <RemoteConfigConst::PARAMS_DISABLE>:
 801175a:	61736964 	cmnvs	r3, r4, ror #18
 801175e:	00656c62 	rsbeq	r6, r5, r2, ror #24

08011762 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8011762:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011766:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801176a:	00747874 	rsbseq	r7, r4, r4, ror r8

0801176e <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801176e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011772:	5f79616c 	svcpl	0x0079616c
 8011776:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801177b <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801177b:	61736964 	cmnvs	r3, r4, ror #18
 801177f:	5f656c62 	svcpl	0x00656c62
 8011783:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8011787:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08011789 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8011789:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801178d:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8011791:	6f6f6265 	svcvs	0x006f6265
 8011795:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08011797 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8011797:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801179b:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8011237 <s_Node+0x9b>
 801179f:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80117a3:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080117a5 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80117a5:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80117a9:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80117ad:	6f746361 	svcvs	0x00746361
 80117b1:	7b007972 	blvc	802fd81 <__exidx_end+0x1d271>
 80117b5:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80117b9:	7b3a2274 	blvc	8e9a191 <__exidx_end+0xe87681>
 80117bd:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80117c1:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80117c5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80117c9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80117cd:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80117d1:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80117d5:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80117d9:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80117dd:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80117e1:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80117e5:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80117e9:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80117ed:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80117f1:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80117f5:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80117f9:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80117fd:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011801:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8011805:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8011809:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801180d:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8011811:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8011815:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011819:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801181d:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8011821:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8011825:	616f6222 	cmnvs	pc, r2, lsr #4
 8011829:	3a226472 	bcc	88aa9f9 <__exidx_end+0x897ee9>
 801182d:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011831:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8011835:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8011839:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801183d:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8011841:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8011845:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8011849:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801184d:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8011851:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8011855:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8011859:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801185d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011861:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8011865:	7b000a7d 	blvc	8014261 <__exidx_end+0x1751>
 8011869:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801186d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011871:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8011875:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8011879:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801187d:	7b3a2273 	blvc	8e9a251 <__exidx_end+0xe87741>
 8011881:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8011885:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011889:	4f223a22 	svcmi	0x00223a22
 801188d:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8011891:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8011895:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8011899:	61726170 	cmnvs	r2, r0, ror r1
 801189d:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80118a1:	3a227478 	bcc	88aea89 <__exidx_end+0x89bf79>
 80118a5:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 80118a9:	61725420 	cmnvs	r2, r0, lsr #8
 80118ad:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 80118b1:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 80118b5:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80118b9:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80118bd:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80118c1:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
 80118c5:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80118c9:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
 80118cd:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80118d1:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80118d5:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80118d9:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
 80118dd:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
 80118e1:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80118e5:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80118e9:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80118ed:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
 80118f1:	 	teqcs	ip, sp, ror r0

080118f3 <index_html>:
 80118f3:	4f44213c 	svcmi	0x0044213c
 80118f7:	50595443 	subspl	r5, r9, r3, asr #8
 80118fb:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 80118ff:	0a3e6c6d 	beq	8facabb <__exidx_end+0xf99fab>
 8011903:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8011907:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801190b:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801190f:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8011913:	6b6e696c 	blvs	9babecb <__exidx_end+0x1b993bb>
 8011917:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 801191b:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 801191f:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8011923:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8011927:	72682022 	rsbvc	r2, r8, #34	; 0x22
 801192b:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801192f:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8011933:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8011937:	20227373 	eorcs	r7, r2, r3, ror r3
 801193b:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801193f:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8011943:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011947:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801194b:	0a3e656c 	beq	8faaf03 <__exidx_end+0xf983f3>
 801194f:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8011953:	0a3e6461 	beq	8faaadf <__exidx_end+0xf97fcf>
 8011957:	646f623c 	strbtvs	r6, [pc], #-572	; 801195f <index_html+0x6c>
 801195b:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 801195f:	6165683c 	cmnvs	r5, ip, lsr r8
 8011963:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8011967:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 801196b:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 801196f:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8011973:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8011977:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801197b:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801197f:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8011983:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011987:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 801198b:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 801198f:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8011993:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8011997:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 801199b:	6f746365 	svcvs	0x00746365
 801199f:	20227972 	eorcs	r7, r2, r2, ror r9
 80119a3:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80119a7:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80119ab:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80119af:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80119b3:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80119b7:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80119bb:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80119bf:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80119c3:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80119c7:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80119cb:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80119cf:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80119d3:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80119d7:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80119db:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80119df:	20227478 	eorcs	r7, r2, r8, ror r4
 80119e3:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80119e7:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 80119eb:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 80119ef:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 80119f3:	0a3e656c 	beq	8faafab <__exidx_end+0xf9849b>
 80119f7:	6f663c09 	svcvs	0x00663c09
 80119fb:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 80119ff:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8011a03:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011a07:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8011a0b:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011a0f:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8011a13:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011a17:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8011a1b:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011a1f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011a23:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8011a27:	20747069 	rsbscs	r7, r4, r9, rrx
 8011a2b:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8011a2f:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8011a33:	6a2e7865 	bvs	8bafbcf <__exidx_end+0xb9d0bf>
 8011a37:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8011a3b:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8011a3f:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8011a43:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8011a47:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011a4b:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011a4f:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8011a53:	 	svcvs	0x0062000a

08011a55 <styles_css>:
 8011a55:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011a59:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011a5d:	63616220 	cmnvs	r1, #32, 4
 8011a61:	6f72676b 	svcvs	0x0072676b
 8011a65:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8011a69:	6f6c6f63 	svcvs	0x006c6f63
 8011a6d:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011a71:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011a75:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8011a79:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8011a7d:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011a81:	6f6c6f63 	svcvs	0x006c6f63
 8011a85:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011a89:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011a8d:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8011a91:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8011a95:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8011a99:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011a9d:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8011aa1:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011aa5:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011aa9:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011aad:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011ab1:	0a3b7865 	beq	8eefc4d <__exidx_end+0xedd13d>
 8011ab5:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8011ab9:	0a7b2069 	beq	9ed9c65 <__exidx_end+0x1ec7155>
 8011abd:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8011ac1:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8011ac5:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8011ac9:	6f6e203a 	svcvs	0x006e203a
 8011acd:	0a3b656e 	beq	8eeb08d <__exidx_end+0xed857d>
 8011ad1:	616d2020 	cmnvs	sp, r0, lsr #32
 8011ad5:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8011ad9:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8011add:	70352078 	eorsvc	r2, r5, r8, ror r0
 8011ae1:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8011ae5:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8011ae9:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8011aed:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011af1:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011af5:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011af9:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011afd:	0a3b7865 	beq	8eefc99 <__exidx_end+0xedd189>
 8011b01:	6f622020 	svcvs	0x00622020
 8011b05:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011b09:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011b0d:	3a737569 	bcc	9cef0b9 <__exidx_end+0x1cdc5a9>
 8011b11:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011b15:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011b19:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011b1d:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011b21:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011b25:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011b29:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011b2d:	0a3b7870 	beq	8eefcf5 <__exidx_end+0xedd1e5>
 8011b31:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8011b35:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011b39:	0a7b2072 	beq	9ed9d09 <__exidx_end+0x1ec71f9>
 8011b3d:	69642020 	stmdbvs	r4!, {r5, sp}^
 8011b41:	616c7073 	smcvs	50947	; 0xc703
 8011b45:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8011b49:	3b78656c 	blcc	9e2b101 <__exidx_end+0x1e185f1>
 8011b4d:	6a20200a 	bvs	8819b7d <__exidx_end+0x80706d>
 8011b51:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8011b55:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8011b59:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011b5d:	203a746e 	eorscs	r7, sl, lr, ror #8
 8011b61:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8011b65:	0a3b7265 	beq	8eee501 <__exidx_end+0xedb9f1>
 8011b69:	6f622020 	svcvs	0x00622020
 8011b6d:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011b71:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011b75:	3a737569 	bcc	9cef121 <__exidx_end+0x1cdc611>
 8011b79:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011b7d:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011b81:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011b85:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011b89:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011b8d:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011b91:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011b95:	0a3b7870 	beq	8eefd5d <__exidx_end+0xedd24d>
 8011b99:	 	strle	r0, [r0], #-2685	; 0xfffff583

08011b9c <HttpContent>:
 8011b9c:	080114d4 	stmdaeq	r1, {r2, r4, r6, r7, sl, ip}
 8011ba0:	08011a55 	stmdaeq	r1, {r0, r2, r4, r6, r9, fp, ip}
 8011ba4:	080114e0 	stmdaeq	r1, {r5, r6, r7, sl, ip}
 8011ba8:	08011bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip}
 8011bac:	080114c8 	stmdaeq	r1, {r3, r6, r7, sl, ip}
 8011bb0:	080118f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, fp, ip}

08011bb4 <index_js>:
 8011bb4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011bb8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011bbc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011bc0:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011bc4:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011bc8:	6a284e4f 	bvs	8a2550c <__exidx_end+0xa129fc>
 8011bcc:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011bd0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011bd4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011bd8:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8011bdc:	6a2f273d 	bvs	8bdb8d8 <__exidx_end+0xbc8dc8>
 8011be0:	2f6e6f73 	svccs	0x006e6f73
 8011be4:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8011be8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011bec:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011bf0:	20797274 	rsbscs	r7, r9, r4, ror r2
 8011bf4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011bf8:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8011bfc:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8011c00:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8011c04:	20746961 	rsbscs	r6, r4, r1, ror #18
 8011c08:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8011c0c:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8011c10:	0a3b296c 	beq	8edc1c8 <__exidx_end+0xec96b8>
 8011c14:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011c18:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8011c1c:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8011c20:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011c24:	73657220 	cmnvc	r5, #32, 4
 8011c28:	6f736a2e 	svcvs	0x00736a2e
 8011c2c:	3b29286e 	blcc	8a5bdec <__exidx_end+0xa492dc>
 8011c30:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011c34:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8011c38:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8011c3c:	6f727265 	svcvs	0x00727265
 8011c40:	7b202972 	blvc	881c210 <__exidx_end+0x809700>
 8011c44:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011c48:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8011c4c:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8011c50:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8011c54:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8011c58:	3b29726f 	blcc	8a6e61c <__exidx_end+0xa5bb0c>
 8011c5c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011c60:	0a0a7d0a 	beq	82b1090 <__exidx_end+0x29e580>
 8011c64:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011c68:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011c6c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011c70:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8011c74:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011c78:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011c7c:	20292874 	eorcs	r2, r9, r4, ror r8
 8011c80:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011c84:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011c88:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c8c:	6177613d 	cmnvs	r7, sp, lsr r1
 8011c90:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011c94:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011c98:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011c9c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011ca0:	0a3b2927 	beq	8edc144 <__exidx_end+0xec9634>
 8011ca4:	6f640909 	svcvs	0x00640909
 8011ca8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011cac:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011cb0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011cb4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011cb8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011cbc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011cc0:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8011cc4:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011cc8:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011ccc:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011cd0:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8011cd4:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011cd8:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8011cdc:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8011ce0:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8011ce4:	2b656d61 	blcs	996d270 <__exidx_end+0x195a760>
 8011ce8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011c68 <index_js+0xb4>
 8011cec:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011cf0:	2b223e69 	blcs	88a169c <__exidx_end+0x88eb8c>
 8011cf4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011cf8:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011cfc:	6f6e2e74 	svcvs	0x006e2e74
 8011d00:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8011d04:	2b657079 	blcs	996def0 <__exidx_end+0x195b3e0>
 8011d08:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011c88 <index_js+0xd4>
 8011d0c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011d10:	2b223e69 	blcs	88a16bc <__exidx_end+0x88ebac>
 8011d14:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011d18:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011d1c:	6f6e2e74 	svcvs	0x006e2e74
 8011d20:	702e6564 	eorvc	r6, lr, r4, ror #10
 8011d24:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8011d28:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011d2c:	2f3c222b 	svccs	0x003c222b
 8011d30:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011d34:	0a7d0a3b 	beq	9f54628 <__exidx_end+0x1f41b18>
 8011d38:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8011d3c:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8011d40:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011d44:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011d48:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011d4c:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011d50:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8011d54:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8011d58:	0a7b2029 	beq	9ed9e04 <__exidx_end+0x1ec72f4>
 8011d5c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011d60:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8011d64:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011d68:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d6c:	6177613d 	cmnvs	r7, sp, lsr r1
 8011d70:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011d74:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011d78:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011d7c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011d80:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011d84:	3b292779 	blcc	8a5bb70 <__exidx_end+0xa49060>
 8011d88:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011d8c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011d90:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011d94:	0a22223d 	beq	889a690 <__exidx_end+0x887b80>
 8011d98:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011d9c:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8011da0:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8011da4:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8011da8:	6a624f3d 	bvs	98a5aa4 <__exidx_end+0x1892f94>
 8011dac:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8011db0:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8011db4:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8011db8:	6f746365 	svcvs	0x00746365
 8011dbc:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8011dc0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011dc4:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8011dc8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011dcc:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8011dd0:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8011dd4:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8011dd8:	6145726f 	cmpvs	r5, pc, ror #4
 8011ddc:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8011de0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011de4:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011de8:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8011dec:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011df0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011df4:	20726176 	rsbscs	r6, r2, r6, ror r1
 8011df8:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8011dfc:	203d2065 	eorscs	r2, sp, r5, rrx
 8011e00:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011e04:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011e08:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8011e0c:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8011e10:	6b5b5d22 	blvs	96e92a0 <__exidx_end+0x16d6790>
 8011e14:	3b5d7965 	blcc	97703b0 <__exidx_end+0x175d8a0>
 8011e18:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011e1c:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8011e20:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8011e24:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8011e28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011e2c:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8011e30:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8011e34:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8011e38:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8011e3c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8011e40:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8011e44:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8011e48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011e4c:	0a3b223e 	beq	8eda74c <__exidx_end+0xec7c3c>
 8011e50:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8011e54:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011e58:	6f640909 	svcvs	0x00640909
 8011e5c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011e60:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011e64:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011e68:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011e6c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011e70:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011e74:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011e78:	6f746365 	svcvs	0x00746365
 8011e7c:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8011e80:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8011e84:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8011e88:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8011e8c:	3b6c6d74 	blcc	9b2d464 <__exidx_end+0x1b1a954>
 8011e90:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011e94:	5f746567 	svcpl	0x00746567
 8011e98:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8011e9c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011ea0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011ea4:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8011ea8:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011eac:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8011eb0:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8011eb4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8011eb8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011ebc:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8011ec0:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8011ec4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011ec8:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8011ecc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011ed0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011ed4:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8011ed8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011edc:	6177613d 	cmnvs	r7, sp, lsr r1
 8011ee0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011ee4:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011ee8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011eec:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011ef0:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8011ef4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011ef8:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8011efc:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8011f00:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8011f04:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8011f08:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8011f0c:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8011f10:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8011f14:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8011f18:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8011f1c:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8011f20:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8011f24:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8011f28:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8011f2c:	2b22563e 	blcs	88a782c <__exidx_end+0x894d1c>
 8011f30:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011f34:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011f38:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011f3c:	2b6e6f69 	blcs	9badce8 <__exidx_end+0x1b9b1d8>
 8011f40:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011ec0 <index_js+0x30c>
 8011f44:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011f48:	2b223e69 	blcs	88a18f4 <__exidx_end+0x88ede4>
 8011f4c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011f50:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011f54:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8011f58:	61642e64 	cmnvs	r4, r4, ror #28
 8011f5c:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8011f60:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8011f64:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8011f68:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8011f6c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011f70:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8011f74:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8011f78:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8011f7c:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8011f80:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8011f84:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8011f88:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8011f8c:	6f697372 	svcvs	0x00697372
 8011f90:	6f622e6e 	svcvs	0x00622e6e
 8011f94:	2b647261 	blcs	992e920 <__exidx_end+0x191be10>
 8011f98:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011f18 <index_js+0x364>
 8011f9c:	3b223e69 	blcc	88a1948 <__exidx_end+0x88ee38>
 8011fa0:	0a0a7d0a 	beq	82b13d0 <__exidx_end+0x29e8c0>
 8011fa4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011fa8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011fac:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011fb0:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011fb4:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8011fbc <index_js+0x408>
 8011fb8:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8011fbc:	20296c65 	eorcs	r6, r9, r5, ror #24
 8011fc0:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8011fc4:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8011fc8:	613d7478 	teqvs	sp, r8, ror r4
 8011fcc:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011fd0:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8011fd4:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8011fd8:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8011fdc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011fe0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011fe4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011fe8:	3b22223d 	blcc	889a8e4 <__exidx_end+0x887dd4>
 8011fec:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8011ff0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8011ff4:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8011ff8:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8011ffc:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012000:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012004:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012008:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801200c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8012010:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012014:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012018:	0a7b2029 	beq	9eda0c4 <__exidx_end+0x1ec75b4>
 801201c:	61760909 	cmnvs	r6, r9, lsl #18
 8012020:	61762072 	cmnvs	r6, r2, ror r0
 8012024:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012028:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 801202c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8012030:	6b5b5d6c 	blvs	96e95e8 <__exidx_end+0x16d6ad8>
 8012034:	3b5d7965 	blcc	97705d0 <__exidx_end+0x175dac0>
 8012038:	2009090a 	andcs	r0, r9, sl, lsl #18
 801203c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8012040:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012044:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012048:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801204c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012050:	2f3c222b 	svccs	0x003c222b
 8012054:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012058:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 801205c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8012060:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012064:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012068:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8012070 <index_js+0x4bc>
 801206c:	3b223e72 	blcc	88a1a3c <__exidx_end+0x88ef2c>
 8012070:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012074:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012078:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 801207c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8012080:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012084:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012088:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801208c:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8012090:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012094:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012098:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 801209c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80120a0:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80120a4:	0a3b6c6d 	beq	8eed260 <__exidx_end+0xeda750>
 80120a8:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80120ac:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80120b0:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80120b4:	3b292874 	blcc	8a5c28c <__exidx_end+0xa4977c>
 80120b8:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80120bc:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80120c0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80120c4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80120c8:	0a3b2928 	beq	8edc570 <__exidx_end+0xec9a60>
 80120cc:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80120d0:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80120d4:	6f697372 	svcvs	0x00697372
 80120d8:	3b29286e 	blcc	8a5c298 <__exidx_end+0xa49788>
 80120dc:	642f000a 	strtvs	r0, [pc], #-10	; 80120e4 <index_js+0x530>
 80120e0:	0031786d 	eorseq	r7, r1, sp, ror #16
 80120e4:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 80120e8:	002a2f31 	eoreq	r2, sl, r1, lsr pc
 80120ec:	2f00322f 	svccs	0x0000322f
 80120f0:	31786d64 	cmncc	r8, r4, ror #26
 80120f4:	616c622f 	cmnvs	ip, pc, lsr #4
 80120f8:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 801159d <RemoteConfig::s_TXT+0x18d>
 80120fc:	2e310074 	mrccs	0, 1, r0, cr1, cr4, {3}
 8012100:	565b0030 			; <UNDEFINED> instruction: 0x565b0030
 8012104:	205d7325 	subscs	r7, sp, r5, lsr #6
 8012108:	47007325 	strmi	r7, [r0, -r5, lsr #6]
 801210c:	46323344 	ldrtmi	r3, [r2], -r4, asr #6
 8012110:	69702f00 	ldmdbvs	r0!, {r8, r9, sl, fp, sp}^
 8012114:	2f00676e 	svccs	0x0000676e
 8012118:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 801211c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8012120:	6f2f6f66 	svcvs	0x002f6f66
 8012124:	692f0073 	stmdbvs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
 8012128:	2f6f666e 	svccs	0x006f666e
 801212c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8012130:	692f006c 	stmdbvs	pc!, {r2, r3, r5, r6}	; <UNPREDICTABLE>
 8012134:	2f6f666e 	svccs	0x006f666e
 8012138:	00636f73 	rsbeq	r6, r3, r3, ror pc
 801213c:	00736559 	rsbseq	r6, r3, r9, asr r5
 8012140:	4f006f4e 	svcmi	0x00006f4e
 8012144:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8012148:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 801214c:	20000a72 	andcs	r0, r0, r2, ror sl
 8012150:	6f636e49 	svcvs	0x00636e49
 8012154:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8012158:	726f5020 	rsbvc	r5, pc, #32
 801215c:	20202074 	eorcs	r2, r0, r4, ror r0
 8012160:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012164:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8012168:	20000a64 	andcs	r0, r0, r4, ror #20
 801216c:	6774754f 	ldrbvs	r7, [r4, -pc, asr #10]!
 8012170:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8012174:	726f5020 	rsbvc	r5, pc, #32
 8012178:	20202074 	eorcs	r2, r0, r4, ror r0
 801217c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012180:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8012184:	20000a64 	andcs	r0, r0, r4, ror #20
 8012188:	20584d44 	subscs	r4, r8, r4, asr #26
 801218c:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 8012190:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012194:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012198:	20202020 	eorcs	r2, r0, r0, lsr #32
 801219c:	5b203a20 	blpl	8820a24 <__exidx_end+0x80df14>
 80121a0:	5b5d7325 	blpl	976ee3c <__exidx_end+0x175c32c>
 80121a4:	0a5d7325 	beq	976ee40 <__exidx_end+0x175c330>
 80121a8:	42202000 	eormi	r2, r0, #0
 80121ac:	6b63616c 	blvs	98ea764 <__exidx_end+0x18d7c54>
 80121b0:	2074756f 	rsbscs	r7, r4, pc, ror #10
 80121b4:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 80121b8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80121bc:	3a202020 	bcc	881a244 <__exidx_end+0x807734>
 80121c0:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80121c4:	20000a5d 	andcs	r0, r0, sp, asr sl
 80121c8:	74726150 	ldrbtvc	r6, [r2], #-336	; 0xfffffeb0
 80121cc:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80121d0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
 80121d4:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80121d8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80121dc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80121e0:	 	movwpl	r0, #2675	; 0xa73

080121e3 <OscServerMsgConst::START>:
 80121e3:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80121e7:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80121eb:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 80121ef:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 80121f3:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80121f7:	00726576 	rsbseq	r6, r2, r6, ror r5

080121fb <OscServerMsgConst::PARAMS>:
 80121fb:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80121ff:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8012203:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8012207:	2043534f 	subcs	r5, r3, pc, asr #6
 801220b:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801220f:	 	svcmi	0x00007265

08012212 <OscServerMsgConst::STARTED>:
 8012212:	2043534f 	subcs	r5, r3, pc, asr #6
 8012216:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801221a:	73207265 			; <UNDEFINED> instruction: 0x73207265
 801221e:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8012222:	 	andvc	r6, r0, r5, ror #8

08012225 <OscServerParamsConst::TRANSMISSION>:
 8012225:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8012229:	5f6c6169 	svcpl	0x006c6169
 801222d:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 8012231:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 8012235:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

0801223a <OscServerParamsConst::PATH_BLACKOUT>:
 801223a:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 801223e:	616c625f 	cmnvs	ip, pc, asr r2
 8012242:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 80116e7 <contentType+0xd>
 8012246:	 	cmnvs	r0, r4, ror r0

08012248 <OscServerParamsConst::PATH>:
 8012248:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

0801224d <OscServerParamsConst::FILE_NAME>:
 801224d:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8012251:	00747874 	rsbseq	r7, r4, r4, ror r8

08012255 <OscServerParamsConst::PATH_INFO>:
 8012255:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8012259:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 801225d:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

0801225f <OscParamsConst::INCOMING_PORT>:
 801225f:	6f636e69 	svcvs	0x00636e69
 8012263:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8012267:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801226b:	 	strbvc	r0, [pc, #-116]!	; 80121ff <OscServerMsgConst::PARAMS+0x4>

0801226d <OscParamsConst::OUTGOING_PORT>:
 801226d:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8012271:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8012275:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8012279:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 801227d:	65532058 	ldrbvs	r2, [r3, #-88]	; 0xffffffa8
 8012281:	000a646e 	andeq	r6, sl, lr, ror #8
 8012285:	65724220 	ldrbvs	r4, [r2, #-544]!	; 0xfffffde0
 8012289:	74206b61 	strtvc	r6, [r0], #-2913	; 0xfffff49f
 801228d:	20656d69 	rsbcs	r6, r5, r9, ror #26
 8012291:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012295:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012299:	42414d20 	submi	r4, r1, #32, 26	; 0x800
 801229d:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 80122a1:	20202065 	eorcs	r2, r0, r5, rrx
 80122a5:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80122a9:	000a7525 	andeq	r7, sl, r5, lsr #10
 80122ad:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 80122b1:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 80122b5:	74617220 	strbtvc	r7, [r1], #-544	; 0xfffffde0
 80122b9:	203a2065 	eorscs	r2, sl, r5, rrx
 80122bd:	000a7525 	andeq	r7, sl, r5, lsr #10
 80122c1:	6f6c5320 	svcvs	0x006c5320
 80122c5:	20207374 	eorcs	r7, r0, r4, ror r3
 80122c9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80122cd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80122d1:	000a7525 	andeq	r7, sl, r5, lsr #10
 80122d5:	 	andeq	r0, r0, r0

080122d8 <vtable for DmxSend>:
	...
 80122e0:	0800acf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, fp, sp, pc}
 80122e4:	0800add9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, fp, sp, pc}
 80122e8:	0800acf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, sp, pc}
 80122ec:	0800ad25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, sp, pc}
 80122f0:	0800ad59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, sp, pc}
 80122f4:	0800ad69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, sp, pc}
 80122f8:	0800ad75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, sp, pc}
 80122fc:	0800ad81 	stmdaeq	r0, {r0, r7, r8, sl, fp, sp, pc}
 8012300:	0800e62d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, sp, lr, pc}
 8012304:	0800e623 	stmdaeq	r0, {r0, r1, r5, r9, sl, sp, lr, pc}
 8012308:	0800e627 	stmdaeq	r0, {r0, r1, r2, r5, r9, sl, sp, lr, pc}
 801230c:	0800e631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp, lr, pc}

08012310 <DmxParamsConst::BREAK_TIME>:
 8012310:	61657262 	cmnvs	r5, r2, ror #4
 8012314:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8012318:	 	movwvc	r6, #1389	; 0x56d

0801231b <DmxParamsConst::SLOTS_COUNT>:
 801231b:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8012323 <DmxParamsConst::SLOTS_COUNT+0x8>
 801231f:	6f635f73 	svcvs	0x00635f73
 8012323:	00746e75 	rsbseq	r6, r4, r5, ror lr

08012327 <DmxParamsConst::REFRESH_RATE>:
 8012327:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 801232b:	5f687365 	svcpl	0x00687365
 801232f:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08012334 <DmxParamsConst::MAB_TIME>:
 8012334:	5f62616d 	svcpl	0x0062616d
 8012338:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

0801233d <DmxParamsConst::FILE_NAME>:
 801233d:	61726170 	cmnvs	r2, r0, ror r1
 8012341:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8012345:	 	andvs	r7, r0, r8, ror r4

08012348 <s_aStorSize>:
 8012348:	00000060 	andeq	r0, r0, r0, rrx
 801234c:	00000090 	muleq	r0, r0, r0
 8012350:	00000020 	andeq	r0, r0, r0, lsr #32
 8012354:	00000040 	andeq	r0, r0, r0, asr #32
 8012358:	00000060 	andeq	r0, r0, r0, rrx
 801235c:	00000040 	andeq	r0, r0, r0, asr #32
 8012360:	00000020 	andeq	r0, r0, r0, lsr #32
 8012364:	00000020 	andeq	r0, r0, r0, lsr #32
 8012368:	000001e0 	andeq	r0, r0, r0, ror #3
 801236c:	00000040 	andeq	r0, r0, r0, asr #32
 8012370:	00000020 	andeq	r0, r0, r0, lsr #32
 8012374:	00000060 	andeq	r0, r0, r0, rrx
 8012378:	00000030 	andeq	r0, r0, r0, lsr r0
 801237c:	00000020 	andeq	r0, r0, r0, lsr #32
 8012380:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012384:	00000030 	andeq	r0, r0, r0, lsr r0
 8012388:	00000040 	andeq	r0, r0, r0, asr #32
 801238c:	00000020 	andeq	r0, r0, r0, lsr #32
 8012390:	00000060 	andeq	r0, r0, r0, rrx
 8012394:	00000020 	andeq	r0, r0, r0, lsr #32
 8012398:	00000400 	andeq	r0, r0, r0, lsl #8
 801239c:	00000020 	andeq	r0, r0, r0, lsr #32
 80123a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80123a4:	00000040 	andeq	r0, r0, r0, asr #32
 80123a8:	00000060 	andeq	r0, r0, r0, rrx
 80123ac:	00000020 	andeq	r0, r0, r0, lsr #32
 80123b0:	00000020 	andeq	r0, r0, r0, lsr #32
 80123b4:	000000c0 	andeq	r0, r0, r0, asr #1

080123b8 <vtable for StoreDmxSend>:
	...
 80123c0:	0800bdb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, fp, ip, sp, pc}
 80123c4:	0800be05 	stmdaeq	r0, {r0, r2, r9, sl, fp, ip, sp, pc}
 80123c8:	0800bde1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 80123cc:	0800bdbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, sp, pc}

080123d0 <vtable for StoreNetwork>:
	...
 80123d8:	0800be25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, ip, sp, pc}
 80123dc:	0800bf39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 80123e0:	0800be2d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, fp, ip, sp, pc}
 80123e4:	0800bf4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp, pc}
 80123e8:	0800bedd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 80123ec:	0800beb1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 80123f0:	0800be81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, sp, pc}
 80123f4:	0800bf09 	stmdaeq	r0, {r0, r3, r8, r9, sl, fp, ip, sp, pc}
 80123f8:	0800be51 	stmdaeq	r0, {r0, r4, r6, r9, sl, fp, ip, sp, pc}
 80123fc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8012400:	00000000 	andeq	r0, r0, r0
 8012404:	0800be27 	stmdaeq	r0, {r0, r1, r2, r5, r9, sl, fp, ip, sp, pc}
 8012408:	0800bf45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, pc}
 801240c:	0800bf01 	stmdaeq	r0, {r0, r8, r9, sl, fp, ip, sp, pc}
 8012410:	0800bed5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8012414:	0800bea9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, fp, ip, sp, pc}
 8012418:	0800bf31 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 801241c:	0800be79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}

08012420 <vtable for StoreOscServer>:
	...
 8012428:	0800bf85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, ip, sp, pc}
 801242c:	0800bfd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8012430:	0800bfad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8012434:	0800bf89 	stmdaeq	r0, {r0, r3, r7, r8, r9, sl, fp, ip, sp, pc}

08012438 <vtable for StoreRemoteConfig>:
	...
 8012440:	0800bff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8012444:	0800c03d 	stmdaeq	r0, {r0, r2, r3, r4, r5, lr, pc}
 8012448:	0800c019 	stmdaeq	r0, {r0, r3, r4, lr, pc}
 801244c:	0800bff5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 8012450:	3a434d46 	bcc	90e5970 <__exidx_end+0x10d2e60>
 8012454:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8012458:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 801245c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8012460:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8012464:	6f742068 	svcvs	0x00742068
 8012468:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801246c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8012470:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8012474:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8012478:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 801247c:	6374000a 	cmnvs	r4, #10
 8012480:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8012484:	3a6e6967 	bcc	9baca28 <__exidx_end+0x1b99f18>
 8012488:	6f6f7420 	svcvs	0x006f7420
 801248c:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8012490:	6f632079 	svcvs	0x00632079
 8012494:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8012498:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801249c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80124a0:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80124a4:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80124a8:	41000a64 	tstmi	r0, r4, ror #20
 80124ac:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80124b0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80124b4:	61662070 	smcvs	25088	; 0x6200
 80124b8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80124bc:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80124c0:	61666564 	cmnvs	r6, r4, ror #10
 80124c4:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80124c8:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80124cc:	0a796177 	beq	9e6aab0 <__exidx_end+0x1e57fa0>
 80124d0:	50524100 	subspl	r4, r2, r0, lsl #2
 80124d4:	6f6f6c20 	svcvs	0x006f6c20
 80124d8:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80124dc:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80124e0:	000a6465 	andeq	r6, sl, r5, ror #8

080124e4 <NetworkConst::MSG_MDNS_CONFIG>:
 80124e4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80124e8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80124ec:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80124f0:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080124f5 <NetworkConst::MSG_NETWORK_INIT>:
 80124f5:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80124f9:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80124fd:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8012501:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8012505:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8012509:	3135322e 	teqcc	r5, lr, lsr #4
 801250d:	63745f00 	cmnvs	r4, #0, 30
 8012511:	6f6c2e70 	svcvs	0x006c2e70
 8012515:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8012519:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801251d:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8012521:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8012529 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8012525:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8012529:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80116cd <RemoteConfig::s_TXT+0x2bd>
 801252d:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8012531:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8012535:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8012539:	20000a53 	andcs	r0, r0, r3, asr sl
 801253d:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8012541:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8012545:	0a676e69 	beq	99edef1 <__exidx_end+0x19db3e1>
 8012549:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801254d:	3a20656d 	bcc	882bb09 <__exidx_end+0x818ff9>
 8012551:	0a732520 	beq	9cdb9d9 <__exidx_end+0x1cc8ec9>
 8012555:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8012559:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801255d:	000a7325 	andeq	r7, sl, r5, lsr #6
 8012561:	30687465 	rsbcc	r7, r8, r5, ror #8
 8012565:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8012569:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801256d:	5f656369 	svcpl	0x00656369
 8012571:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8012575:	6b726f77 	blvs	9cae359 <__exidx_end+0x1c9b849>
 8012579:	4820000a 	stmdami	r0!, {r1, r3}
 801257d:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8012581:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8012585:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8012589:	20000a73 	andcs	r0, r0, r3, ror sl
 801258d:	614e6649 	cmpvs	lr, r9, asr #12
 8012591:	2020656d 	eorcs	r6, r0, sp, ror #10
 8012595:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012599:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801259d:	000a7325 	andeq	r7, sl, r5, lsr #6
 80125a1:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80125a5:	20202074 	eorcs	r2, r0, r4, ror r0
 80125a9:	3a202020 	bcc	881a631 <__exidx_end+0x807b21>
 80125ad:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80125b1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80125b5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80125b9:	0a64252f 	beq	991ba7d <__exidx_end+0x1908f6d>
 80125bd:	654e2000 	strbvs	r2, [lr, #-0]
 80125c1:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80125c5:	2020206b 	eorcs	r2, r0, fp, rrx
 80125c9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80125cd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80125d1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80125d5:	20000a64 	andcs	r0, r0, r4, ror #20
 80125d9:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80125dd:	20796177 	rsbscs	r6, r9, r7, ror r1
 80125e1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80125e5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80125e9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80125ed:	0a64252e 	beq	991baad <__exidx_end+0x1908f9d>
 80125f1:	72422000 	subvc	r2, r2, #0
 80125f5:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80125f9:	20747361 	rsbscs	r7, r4, r1, ror #6
 80125fd:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012601:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012605:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012609:	20000a64 	andcs	r0, r0, r4, ror #20
 801260d:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8012611:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012615:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012619:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801261d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8012621:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8012625:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8012629:	3a78322e 	bcc	9e1eee9 <__exidx_end+0x1e0c3d9>
 801262d:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8012631:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8012635:	20000a78 	andcs	r0, r0, r8, ror sl
 8012639:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801263d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012641:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012645:	000a6325 	andeq	r6, sl, r5, lsr #6
 8012649:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801264d:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8012651:	 	rsbvc	r0, r9, r0, asr r0

08012653 <NetworkParamsConst::IP_ADDRESS>:
 8012653:	615f7069 	cmpvs	pc, r9, rrx
 8012657:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801265b:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801265e <NetworkParamsConst::DEFAULT_GATEWAY>:
 801265e:	61666564 	cmnvs	r6, r4, ror #10
 8012662:	5f746c75 	svcpl	0x00746c75
 8012666:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801266a:	00796177 	rsbseq	r6, r9, r7, ror r1

0801266e <NetworkParamsConst::DHCP_RETRY_TIME>:
 801266e:	70636864 	rsbvc	r6, r3, r4, ror #16
 8012672:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8012676:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801267e <NetworkParamsConst::HOSTNAME>
 801267a:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801267e <NetworkParamsConst::HOSTNAME>:
 801267e:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8012682:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08012687 <NetworkParamsConst::NET_MASK>:
 8012687:	5f74656e 	svcpl	0x0074656e
 801268b:	6b73616d 	blvs	9ceac47 <__exidx_end+0x1cd8137>
	...

08012690 <NetworkParamsConst::USE_DHCP>:
 8012690:	5f657375 	svcpl	0x00657375
 8012694:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08012699 <NetworkParamsConst::FILE_NAME>:
 8012699:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801269d:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80126a1:	00747874 	rsbseq	r7, r4, r4, ror r8
 80126a5:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80126a9:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80126ad:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80126b1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80126b5:	002c2264 	eoreq	r2, ip, r4, ror #4
 80126b9:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80126bd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80126c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80126c5:	0a64252e 	beq	991bb85 <__exidx_end+0x1909075>
 80126c9:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80126cd:	0a232073 	beq	88da8a1 <__exidx_end+0x8c7d91>
 80126d1:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 80126d5:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80126d9:	2079616c 	rsbscs	r6, r9, ip, ror #2
 80126dd:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 80126e1:	48530064 	ldmdami	r3, {r2, r5, r6}^
 80126e5:	36303131 			; <UNDEFINED> instruction: 0x36303131
 80126e9:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 80126ed:	36303331 			; <UNDEFINED> instruction: 0x36303331
 80126f1:	20732500 	rsbscs	r2, r3, r0, lsl #10
 80126f5:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 80126f9:	0a296425 	beq	8a6b795 <__exidx_end+0xa58c85>
 80126fd:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8012701:	 	andmi	lr, r0, sl, lsr #29

08012704 <_OledFont8x6>:
 8012704:	00000040 	andeq	r0, r0, r0, asr #32
 8012708:	40000000 	andmi	r0, r0, r0
 801270c:	005f0000 	subseq	r0, pc, r0
 8012710:	00400000 	subeq	r0, r0, r0
 8012714:	00070007 	andeq	r0, r7, r7
 8012718:	7f144000 	svcvc	0x00144000
 801271c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8012720:	7f2a2440 	svcvc	0x002a2440
 8012724:	4000122a 	andmi	r1, r0, sl, lsr #4
 8012728:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801272c:	36400062 	strbcc	r0, [r0], -r2, rrx
 8012730:	50205649 	eorpl	r5, r0, r9, asr #12
 8012734:	08004000 	stmdaeq	r0, {lr}
 8012738:	00000307 	andeq	r0, r0, r7, lsl #6
 801273c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8012740:	40000041 	andmi	r0, r0, r1, asr #32
 8012744:	1c224100 	stfnes	f4, [r2], #-0
 8012748:	2a400000 	bcs	9012750 <__exidx_end+0xfffc40>
 801274c:	2a1c7f1c 	bcs	87323c4 <__exidx_end+0x71f8b4>
 8012750:	08084000 	stmdaeq	r8, {lr}
 8012754:	0008083e 	andeq	r0, r8, lr, lsr r8
 8012758:	70800040 	addvc	r0, r0, r0, asr #32
 801275c:	40000030 	andmi	r0, r0, r0, lsr r0
 8012760:	08080808 	stmdaeq	r8, {r3, fp}
 8012764:	00400008 	subeq	r0, r0, r8
 8012768:	00606000 	rsbeq	r6, r0, r0
 801276c:	10204000 	eorne	r4, r0, r0
 8012770:	00020408 	andeq	r0, r2, r8, lsl #8
 8012774:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8012778:	40003e45 	andmi	r3, r0, r5, asr #28
 801277c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8012780:	72400000 	subvc	r0, r0, #0
 8012784:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8012788:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801278c:	00334d49 	eorseq	r4, r3, r9, asr #26
 8012790:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8012794:	4000107f 	andmi	r1, r0, pc, ror r0
 8012798:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801279c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80127a0:	3149494a 	cmpcc	r9, sl, asr #18
 80127a4:	21414000 	mrscs	r4, (UNDEF: 65)
 80127a8:	00070911 	andeq	r0, r7, r1, lsl r9
 80127ac:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80127b0:	40003649 	andmi	r3, r0, r9, asr #12
 80127b4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80127b8:	0040001e 	subeq	r0, r0, lr, lsl r0
 80127bc:	00001400 	andeq	r1, r0, r0, lsl #8
 80127c0:	40004000 	andmi	r4, r0, r0
 80127c4:	00000034 	andeq	r0, r0, r4, lsr r0
 80127c8:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80127cc:	40004122 	andmi	r4, r0, r2, lsr #2
 80127d0:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80127d4:	00400014 	subeq	r0, r0, r4, lsl r0
 80127d8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 80127dc:	01024000 	mrseq	r4, (UNDEF: 2)
 80127e0:	00060959 	andeq	r0, r6, r9, asr r9
 80127e4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 80127e8:	40004e59 	andmi	r4, r0, r9, asr lr
 80127ec:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 80127f0:	7f40007c 	svcvc	0x0040007c
 80127f4:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80127f8:	413e4000 	teqmi	lr, r0
 80127fc:	00224141 	eoreq	r4, r2, r1, asr #2
 8012800:	41417f40 	cmpmi	r1, r0, asr #30
 8012804:	40003e41 	andmi	r3, r0, r1, asr #28
 8012808:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801280c:	7f400041 	svcvc	0x00400041
 8012810:	01090909 	tsteq	r9, r9, lsl #18
 8012814:	413e4000 	teqmi	lr, r0
 8012818:	00735141 	rsbseq	r5, r3, r1, asr #2
 801281c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8012820:	40007f08 	andmi	r7, r0, r8, lsl #30
 8012824:	417f4100 	cmnmi	pc, r0, lsl #2
 8012828:	20400000 	subcs	r0, r0, r0
 801282c:	013f4140 	teqeq	pc, r0, asr #2
 8012830:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8012834:	00412214 	subeq	r2, r1, r4, lsl r2
 8012838:	40407f40 	submi	r7, r0, r0, asr #30
 801283c:	40004040 	andmi	r4, r0, r0, asr #32
 8012840:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8012844:	7f40007f 	svcvc	0x0040007f
 8012848:	7f100804 	svcvc	0x00100804
 801284c:	413e4000 	teqmi	lr, r0
 8012850:	003e4141 	eorseq	r4, lr, r1, asr #2
 8012854:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8012858:	40000609 	andmi	r0, r0, r9, lsl #12
 801285c:	2151413e 	cmpcs	r1, lr, lsr r1
 8012860:	7f40005e 	svcvc	0x0040005e
 8012864:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8012868:	49264000 	stmdbmi	r6!, {lr}
 801286c:	00324949 	eorseq	r4, r2, r9, asr #18
 8012870:	7f010340 	svcvc	0x00010340
 8012874:	40000301 	andmi	r0, r0, r1, lsl #6
 8012878:	4040403f 	submi	r4, r0, pc, lsr r0
 801287c:	1f40003f 	svcne	0x0040003f
 8012880:	1f204020 	svcne	0x00204020
 8012884:	403f4000 	eorsmi	r4, pc, r0
 8012888:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801288c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8012890:	40006314 	andmi	r6, r0, r4, lsl r3
 8012894:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8012898:	61400003 	cmpvs	r0, r3
 801289c:	434d4959 	movtmi	r4, #55641	; 0xd959
 80128a0:	7f004000 	svcvc	0x00004000
 80128a4:	00414141 	subeq	r4, r1, r1, asr #2
 80128a8:	08040240 	stmdaeq	r4, {r6, r9}
 80128ac:	40002010 	andmi	r2, r0, r0, lsl r0
 80128b0:	41414100 	mrsmi	r4, (UNDEF: 81)
 80128b4:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 80128b8:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80128bc:	40404000 	submi	r4, r0, r0
 80128c0:	00404040 	subeq	r4, r0, r0, asr #32
 80128c4:	07030040 	streq	r0, [r3, -r0, asr #32]
 80128c8:	40000008 	andmi	r0, r0, r8
 80128cc:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80128d0:	7f400040 	svcvc	0x00400040
 80128d4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 80128d8:	44384000 	ldrtmi	r4, [r8], #-0
 80128dc:	00284444 	eoreq	r4, r8, r4, asr #8
 80128e0:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 80128e4:	40007f28 	andmi	r7, r0, r8, lsr #30
 80128e8:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 80128ec:	00400018 	subeq	r0, r0, r8, lsl r0
 80128f0:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 80128f4:	a4184000 	ldrge	r4, [r8], #-0
 80128f8:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80128fc:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8012900:	40007804 	andmi	r7, r0, r4, lsl #16
 8012904:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8012908:	20400000 	subcs	r0, r0, r0
 801290c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8012910:	107f4000 	rsbsne	r4, pc, r0
 8012914:	00004428 	andeq	r4, r0, r8, lsr #8
 8012918:	7f410040 	svcvc	0x00410040
 801291c:	40000040 	andmi	r0, r0, r0, asr #32
 8012920:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8012924:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8012928:	78040408 	stmdavc	r4, {r3, sl}
 801292c:	44384000 	ldrtmi	r4, [r8], #-0
 8012930:	00384444 	eorseq	r4, r8, r4, asr #8
 8012934:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8012938:	40001824 	andmi	r1, r0, r4, lsr #16
 801293c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8012940:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8012944:	08040408 	stmdaeq	r4, {r3, sl}
 8012948:	54484000 	strbpl	r4, [r8], #-0
 801294c:	00245454 	eoreq	r5, r4, r4, asr r4
 8012950:	3f040440 	svccc	0x00040440
 8012954:	40002444 	andmi	r2, r0, r4, asr #8
 8012958:	2040403c 	subcs	r4, r0, ip, lsr r0
 801295c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8012960:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8012964:	403c4000 	eorsmi	r4, ip, r0
 8012968:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801296c:	10284440 	eorne	r4, r8, r0, asr #8
 8012970:	40004428 	andmi	r4, r0, r8, lsr #8
 8012974:	9090904c 	addsls	r9, r0, ip, asr #32
 8012978:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801297c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8012980:	08004000 	stmdaeq	r0, {lr}
 8012984:	00004136 	andeq	r4, r0, r6, lsr r1
 8012988:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801298c:	40000000 	andmi	r0, r0, r0
 8012990:	08364100 	ldmdaeq	r6!, {r8, lr}
 8012994:	02400000 	subeq	r0, r0, #0
 8012998:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801299c:	263c4000 	ldrtcs	r4, [ip], -r0
 80129a0:	003c2623 	eorseq	r2, ip, r3, lsr #12

080129a4 <oled_128x32_init>:
 80129a4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80129a8:	4000d31f 	andmi	sp, r0, pc, lsl r3
 80129ac:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80129b0:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 80129b4:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80129b8:	a6a440db 	ssatge	r4, #5, fp, asr #1

080129bc <oled_128x64_init>:
 80129bc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80129c0:	4000d33f 	andmi	sp, r0, pc, lsr r3
 80129c4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80129c8:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80129cc:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80129d0:	a6a440db 	ssatge	r4, #5, fp, asr #1

080129d4 <vtable for Ssd1306>:
	...
 80129dc:	0800e795 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, sp, lr, pc}
 80129e0:	0800e7c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, sp, lr, pc}
 80129e4:	0800ead1 	stmdaeq	r0, {r0, r4, r6, r7, r9, fp, sp, lr, pc}
 80129e8:	0800ea59 	stmdaeq	r0, {r0, r3, r4, r6, r9, fp, sp, lr, pc}
 80129ec:	0800e925 	stmdaeq	r0, {r0, r2, r5, r8, fp, sp, lr, pc}
 80129f0:	0800e7e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 80129f4:	0800e809 	stmdaeq	r0, {r0, r3, fp, sp, lr, pc}
 80129f8:	0800e8fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, fp, sp, lr, pc}
 80129fc:	0800e8b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, sp, lr, pc}
 8012a00:	0800e797 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, sp, lr, pc}
 8012a04:	0800e961 	stmdaeq	r0, {r0, r5, r6, r8, fp, sp, lr, pc}
 8012a08:	0800e96d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, fp, sp, lr, pc}
 8012a0c:	0800e987 	stmdaeq	r0, {r0, r1, r2, r7, r8, fp, sp, lr, pc}
 8012a10:	0800e799 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, sp, lr, pc}
 8012a14:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8012a18:	5b1b006d 	blpl	86d2bd4 <__exidx_end+0x6c00c4>
 8012a1c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8012a20:	31335b1b 	teqcc	r3, fp, lsl fp
 8012a24:	5b1b006d 	blpl	86d2be0 <__exidx_end+0x6c00d0>
 8012a28:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8012a2c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8012a30:	5b1b006d 	blpl	86d2bec <__exidx_end+0x6c00dc>
 8012a34:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8012a38:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8012a3c:	205d732a 	subscs	r7, sp, sl, lsr #6
 8012a40:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8012a44:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8012a48:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8012a4c:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8012a50:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8012a54:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8012a58:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8012a5c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a60:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a64:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012a68:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a6c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a70:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8012a74:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8012a78:	6b636f6c 	blvs	98ee830 <__exidx_end+0x18dbd20>
 8012a7c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8012a80:	000a7469 	andeq	r7, sl, r9, ror #8
 8012a84:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a88:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a8c:	6f6c4270 	svcvs	0x006c4270
 8012a90:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8012a94:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012a98:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8012a9c:	7a697320 	bvc	9a6f724 <__exidx_end+0x1a5cc14>
 8012aa0:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8012aa4:	6164202c 	cmnvs	r4, ip, lsr #32
 8012aa8:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8012aac:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8012ab0:	3a656572 	bcc	996c080 <__exidx_end+0x1959570>
 8012ab4:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8012ab8:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012abc:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8012ac0:	203d2072 	eorscs	r2, sp, r2, ror r0
 8012ac4:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8012ac8:	6f6c4270 	svcvs	0x006c4270
 8012acc:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8012ad0:	0a702520 	beq	9c1bf58 <__exidx_end+0x1c09448>
 8012ad4:	00000000 	andeq	r0, r0, r0

08012ad8 <days_of_month>:
 8012ad8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012adc:	0000001c 	andeq	r0, r0, ip, lsl r0
 8012ae0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012ae4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012ae8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012aec:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012af0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012af4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012af8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012afc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012b00:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012b04:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08012b08 <__exidx_start>:
 8012b08:	7fff5da4 	svcvc	0x00ff5da4
 8012b0c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08012b10 <.ARM.attributes>:
 8012b10:	00002e41 	andeq	r2, r0, r1, asr #28
 8012b14:	61656100 	cmnvs	r5, r0, lsl #2
 8012b18:	01006962 	tsteq	r0, r2, ror #18
 8012b1c:	00000024 	andeq	r0, r0, r4, lsr #32
 8012b20:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8012b24:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8012b28:	0600334d 	streq	r3, [r0], -sp, asr #6
 8012b2c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8012b30:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8012b34:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8012b38:	1a011803 	bne	8058b4c <__exidx_end+0x4603c>
 8012b3c:	Address 0x0000000008012b3c is out of bounds.


Disassembly of section .data:

20000000 <s_nDmxTransmitPeriod>:
20000000:	000061a8 	andeq	r6, r0, r8, lsr #3

20000004 <s_nDmxTransmitMabTime>:
20000004:	0000000c 	andeq	r0, r0, ip

20000008 <s_nDmxTransmitBreakTime>:
20000008:	0000005c 	andeq	r0, r0, ip, asr r0

2000000c <DmxConfigUdp::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <s_multicast_mac>:
20000010:	005e0001 	subseq	r0, lr, r1
20000014:	00000000 	andeq	r0, r0, r0

20000018 <MDNS::s_nHandle>:
20000018:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000001c <next_block>:
2000001c:	20015800 	andcs	r5, r1, r0, lsl #16

20000020 <s_block_bucket>:
20000020:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000030:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000040:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000050:	00000060 	andeq	r0, r0, r0, rrx
	...
20000060:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000070:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000080:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000090:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c0:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d0:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f0 <SystemCoreClock>:
200000f0:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <HttpDaemon::m_Content>:
	...

200006c8 <OscServer::s_aPathInfo>:
	...

20000748 <OscServer::s_pUdpBuffer>:
20000748:	00000000 	andeq	r0, r0, r0

2000074c <OscServer::s_aPathSecond>:
	...

200007cc <OscServer::s_aPathBlackOut>:
	...

2000084c <OscServer::s_aPath>:
	...

200008cc <OscServer::s_pData>:
	...

20000acc <OscServer::s_pThis>:
20000acc:	00000000 	andeq	r0, r0, r0

20000ad0 <OscSimpleSend::s_Message>:
	...

20000cd0 <DmxSend::s_nStarted>:
20000cd0:	00000000 	andeq	r0, r0, r0

20000cd4 <s_RxBuffer>:
	...

20000ee4 <s_TxBuffer>:
	...

200010e8 <sv_PortState>:
200010e8:	00000000 	andeq	r0, r0, r0

200010ec <sv_nRxDmxPackets>:
	...

200010fc <sv_nUartsSending>:
200010fc:	00000000 	andeq	r0, r0, r0

20001100 <Dmx::s_pThis>:
20001100:	00000000 	andeq	r0, r0, r0

20001104 <gv_RdmDataReceiveEnd>:
20001104:	00000000 	andeq	r0, r0, r0

20001108 <DmxConfigUdp::s_pUdpBuffer>:
20001108:	00000000 	andeq	r0, r0, r0

2000110c <SpiFlashStore::s_nWaitMillis>:
2000110c:	00000000 	andeq	r0, r0, r0

20001110 <SpiFlashStore::s_SpiFlashData>:
	...

20002110 <SpiFlashStore::s_nStartAddress>:
20002110:	00000000 	andeq	r0, r0, r0

20002114 <SpiFlashStore::s_bHaveFlashChip>:
20002114:	00000000 	andeq	r0, r0, r0

20002118 <SpiFlashStore::s_nSpiFlashStoreSize>:
20002118:	00000000 	andeq	r0, r0, r0

2000211c <SpiFlashStore::s_State>:
2000211c:	00000000 	andeq	r0, r0, r0

20002120 <SpiFlashStore::s_pThis>:
20002120:	00000000 	andeq	r0, r0, r0

20002124 <SpiFlashStore::s_bIsNew>:
20002124:	00000000 	andeq	r0, r0, r0

20002128 <StoreDmxSend::s_pThis>:
20002128:	00000000 	andeq	r0, r0, r0

2000212c <StoreNetwork::s_pThis>:
2000212c:	00000000 	andeq	r0, r0, r0

20002130 <StoreOscServer::s_pThis>:
20002130:	00000000 	andeq	r0, r0, r0

20002134 <StoreRemoteConfig::s_pThis>:
20002134:	00000000 	andeq	r0, r0, r0

20002138 <FlashRom::s_pThis>:
20002138:	00000000 	andeq	r0, r0, r0

2000213c <flashrom::s_nAddress>:
2000213c:	00000000 	andeq	r0, r0, r0

20002140 <flashrom::s_State>:
20002140:	00000000 	andeq	r0, r0, r0

20002144 <flashrom::s_nPage>:
20002144:	00000000 	andeq	r0, r0, r0

20002148 <flashrom::s_pData>:
20002148:	00000000 	andeq	r0, r0, r0

2000214c <flashrom::s_isBank0>:
2000214c:	00000000 	andeq	r0, r0, r0

20002150 <flashrom::s_nLength>:
20002150:	00000000 	andeq	r0, r0, r0

20002154 <g_ip_info>:
	...

20002160 <g_mac_address>:
20002160:	00000000 	andeq	r0, r0, r0
	...

20002166 <s_is_dhcp>:
	...

20002168 <s_p>:
20002168:	00000000 	andeq	r0, r0, r0

2000216c <s_ticker>:
2000216c:	00000000 	andeq	r0, r0, r0

20002170 <s_mac_address>:
	...

20002178 <s_mac_address_arp_reply>:
	...

20002180 <s_id>:
20002180:	00000000 	andeq	r0, r0, r0

20002184 <s_recv_queue>:
	...

20002cf4 <s_tcb>:
	...

20002d38 <s_tcp>:
	...

20003324 <broadcast_mask>:
20003324:	00000000 	andeq	r0, r0, r0

20003328 <gw_ip>:
20003328:	00000000 	andeq	r0, r0, r0

2000332c <on_network_mask>:
2000332c:	00000000 	andeq	r0, r0, r0

20003330 <s_id>:
20003330:	00000000 	andeq	r0, r0, r0

20003334 <s_ports_allowed>:
	...

20003354 <s_recv_queue>:
	...

20008ff4 <s_send_packet>:
	...

200095e0 <MDNS::s_nRemoteIp>:
200095e0:	00000000 	andeq	r0, r0, r0

200095e4 <MDNS::s_nRemotePort>:
200095e4:	00000000 	andeq	r0, r0, r0

200095e8 <MDNS::s_nMulticastIp>:
200095e8:	00000000 	andeq	r0, r0, r0

200095ec <MDNS::s_AnswerLocalIp>:
	...

200097f0 <MDNS::s_ServiceRecords>:
	...

20009810 <MDNS::s_nBytesReceived>:
20009810:	00000000 	andeq	r0, r0, r0

20009814 <MDNS::s_ServiceRecordsData>:
	...

20009a18 <MDNS::s_pName>:
20009a18:	00000000 	andeq	r0, r0, r0

20009a1c <MDNS::s_pBuffer>:
20009a1c:	00000000 	andeq	r0, r0, r0

20009a20 <Network::s_pThis>:
20009a20:	00000000 	andeq	r0, r0, r0

20009a24 <s_arp_announce>:
	...

20009a50 <s_arp_reply>:
	...

20009a7c <s_arp_request>:
	...

20009aa8 <s_arp_records>:
	...

20009c28 <s_entry_current>:
20009c28:	00000000 	andeq	r0, r0, r0

20009c2c <s_dhcp_allocated_gw>:
20009c2c:	00000000 	andeq	r0, r0, r0

20009c30 <s_dhcp_allocated_ip>:
20009c30:	00000000 	andeq	r0, r0, r0

20009c34 <s_dhcp_allocated_netmask>:
20009c34:	00000000 	andeq	r0, r0, r0

20009c38 <s_dhcp_message>:
	...

20009e5c <s_dhcp_server_ip>:
20009e5c:	00000000 	andeq	r0, r0, r0

20009e60 <s_groups>:
	...

20009f80 <s_id>:
20009f80:	00000000 	andeq	r0, r0, r0

20009f84 <s_joins_allowed_index>:
20009f84:	00000000 	andeq	r0, r0, r0

20009f88 <s_leave>:
	...

20009fb8 <s_multicast_mac>:
	...

20009fc0 <s_report>:
	...

20009fee <PropertiesConfig::s_Config>:
	...

20009ff0 <Display::s_pThis>:
20009ff0:	00000000 	andeq	r0, r0, r0

20009ff4 <_ClearBuffer>:
	...

2000a07c <Ssd1306::s_pThis>:
2000a07c:	00000000 	andeq	r0, r0, r0

2000a080 <FirmwareVersion::s_FirmwareVersion>:
	...

2000a096 <FirmwareVersion::s_Print>:
	...

2000a0d8 <FirmwareVersion::s_pThis>:
2000a0d8:	00000000 	andeq	r0, r0, r0

2000a0dc <LedBlink::s_pThis>:
2000a0dc:	00000000 	andeq	r0, r0, r0

2000a0e0 <Hardware::s_pThis>:
2000a0e0:	00000000 	andeq	r0, r0, r0

2000a0e4 <last.0>:
2000a0e4:	00000000 	andeq	r0, r0, r0

2000a0e8 <s_micros>:
	...

2000a0f0 <set_timer>:
2000a0f0:	00000000 	andeq	r0, r0, r0

2000a0f4 <s_nSysTickMillis>:
2000a0f4:	00000000 	andeq	r0, r0, r0

2000a0f8 <s_nAddress>:
2000a0f8:	00000000 	andeq	r0, r0, r0

2000a0fc <dma_current_ptp_rxdesc>:
2000a0fc:	00000000 	andeq	r0, r0, r0

2000a100 <dma_current_ptp_txdesc>:
2000a100:	00000000 	andeq	r0, r0, r0

2000a104 <dma_current_rxdesc>:
2000a104:	00000000 	andeq	r0, r0, r0

2000a108 <dma_current_txdesc>:
2000a108:	00000000 	andeq	r0, r0, r0

2000a10c <enet_initpara>:
	...

2000a148 <rx_buff>:
	...

2000d0e8 <rxdesc_tab>:
	...

2000d168 <tx_buff>:
	...

2000dd50 <txdesc_tab>:
	...

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
