
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, ip, sp, lr}
 8007008:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800700c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007010:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007014:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007018:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
	...
 800702c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007030:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800703c:	0800f121 	stmdaeq	r0, {r0, r5, r8, ip, sp, lr, pc}
 8007040:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007044:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007048:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800704c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007050:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007054:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007058:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800705c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007060:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007064:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007068:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800706c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007070:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007074:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007078:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800707c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007080:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007084:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007088:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800708c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007090:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007094:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007098:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800709c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070a0:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070a4:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070a8:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070ac:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070b0:	080094d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sl, ip, pc}
 80070b4:	08009579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip, pc}
 80070b8:	080095bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, ip, pc}
 80070bc:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070c0:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070c4:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070c8:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070cc:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070d0:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070d4:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070d8:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070dc:	080092e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, ip, pc}
 80070e0:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070e4:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070e8:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070ec:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070f0:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 80070f4:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
	...
 8007100:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800710c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007110:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007114:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007118:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800711c:	080095dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, ip, pc}
 8007120:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007124:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007128:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800712c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007130:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007134:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007138:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800713c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007140:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007144:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8007148:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800714c:	08007761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, sp, lr}

Disassembly of section .text:

08007150 <__aeabi_uldivmod>:
 8007150:	b953      	cbnz	r3, 8007168 <__aeabi_uldivmod+0x18>
 8007152:	b94a      	cbnz	r2, 8007168 <__aeabi_uldivmod+0x18>
 8007154:	2900      	cmp	r1, #0
 8007156:	bf08      	it	eq
 8007158:	2800      	cmpeq	r0, #0
 800715a:	bf1c      	itt	ne
 800715c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007160:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007164:	f000 b976 	b.w	8007454 <__aeabi_idiv0>
 8007168:	f1ad 0c08 	sub.w	ip, sp, #8
 800716c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007170:	f000 f806 	bl	8007180 <__udivmoddi4>
 8007174:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007178:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800717c:	b004      	add	sp, #16
 800717e:	4770      	bx	lr

08007180 <__udivmoddi4>:
 8007180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007184:	9e08      	ldr	r6, [sp, #32]
 8007186:	460d      	mov	r5, r1
 8007188:	4604      	mov	r4, r0
 800718a:	4688      	mov	r8, r1
 800718c:	2b00      	cmp	r3, #0
 800718e:	d14d      	bne.n	800722c <__udivmoddi4+0xac>
 8007190:	428a      	cmp	r2, r1
 8007192:	4694      	mov	ip, r2
 8007194:	d968      	bls.n	8007268 <__udivmoddi4+0xe8>
 8007196:	fab2 f282 	clz	r2, r2
 800719a:	b152      	cbz	r2, 80071b2 <__udivmoddi4+0x32>
 800719c:	fa01 f302 	lsl.w	r3, r1, r2
 80071a0:	f1c2 0120 	rsb	r1, r2, #32
 80071a4:	fa20 f101 	lsr.w	r1, r0, r1
 80071a8:	fa0c fc02 	lsl.w	ip, ip, r2
 80071ac:	ea41 0803 	orr.w	r8, r1, r3
 80071b0:	4094      	lsls	r4, r2
 80071b2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80071b6:	fbb8 f7f1 	udiv	r7, r8, r1
 80071ba:	fa1f fe8c 	uxth.w	lr, ip
 80071be:	fb01 8817 	mls	r8, r1, r7, r8
 80071c2:	fb07 f00e 	mul.w	r0, r7, lr
 80071c6:	0c23      	lsrs	r3, r4, #16
 80071c8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80071cc:	4298      	cmp	r0, r3
 80071ce:	d90a      	bls.n	80071e6 <__udivmoddi4+0x66>
 80071d0:	eb1c 0303 	adds.w	r3, ip, r3
 80071d4:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 80071d8:	f080 811e 	bcs.w	8007418 <__udivmoddi4+0x298>
 80071dc:	4298      	cmp	r0, r3
 80071de:	f240 811b 	bls.w	8007418 <__udivmoddi4+0x298>
 80071e2:	3f02      	subs	r7, #2
 80071e4:	4463      	add	r3, ip
 80071e6:	1a1b      	subs	r3, r3, r0
 80071e8:	fbb3 f0f1 	udiv	r0, r3, r1
 80071ec:	fb01 3310 	mls	r3, r1, r0, r3
 80071f0:	fb00 fe0e 	mul.w	lr, r0, lr
 80071f4:	b2a4      	uxth	r4, r4
 80071f6:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80071fa:	45a6      	cmp	lr, r4
 80071fc:	d90a      	bls.n	8007214 <__udivmoddi4+0x94>
 80071fe:	eb1c 0404 	adds.w	r4, ip, r4
 8007202:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007206:	f080 8109 	bcs.w	800741c <__udivmoddi4+0x29c>
 800720a:	45a6      	cmp	lr, r4
 800720c:	f240 8106 	bls.w	800741c <__udivmoddi4+0x29c>
 8007210:	4464      	add	r4, ip
 8007212:	3802      	subs	r0, #2
 8007214:	2100      	movs	r1, #0
 8007216:	eba4 040e 	sub.w	r4, r4, lr
 800721a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800721e:	b11e      	cbz	r6, 8007228 <__udivmoddi4+0xa8>
 8007220:	2300      	movs	r3, #0
 8007222:	40d4      	lsrs	r4, r2
 8007224:	e9c6 4300 	strd	r4, r3, [r6]
 8007228:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800722c:	428b      	cmp	r3, r1
 800722e:	d908      	bls.n	8007242 <__udivmoddi4+0xc2>
 8007230:	2e00      	cmp	r6, #0
 8007232:	f000 80ee 	beq.w	8007412 <__udivmoddi4+0x292>
 8007236:	2100      	movs	r1, #0
 8007238:	e9c6 0500 	strd	r0, r5, [r6]
 800723c:	4608      	mov	r0, r1
 800723e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007242:	fab3 f183 	clz	r1, r3
 8007246:	2900      	cmp	r1, #0
 8007248:	d14a      	bne.n	80072e0 <__udivmoddi4+0x160>
 800724a:	42ab      	cmp	r3, r5
 800724c:	d302      	bcc.n	8007254 <__udivmoddi4+0xd4>
 800724e:	4282      	cmp	r2, r0
 8007250:	f200 80fc 	bhi.w	800744c <__udivmoddi4+0x2cc>
 8007254:	1a84      	subs	r4, r0, r2
 8007256:	eb65 0303 	sbc.w	r3, r5, r3
 800725a:	2001      	movs	r0, #1
 800725c:	4698      	mov	r8, r3
 800725e:	2e00      	cmp	r6, #0
 8007260:	d0e2      	beq.n	8007228 <__udivmoddi4+0xa8>
 8007262:	e9c6 4800 	strd	r4, r8, [r6]
 8007266:	e7df      	b.n	8007228 <__udivmoddi4+0xa8>
 8007268:	b902      	cbnz	r2, 800726c <__udivmoddi4+0xec>
 800726a:	deff      	udf	#255	; 0xff
 800726c:	fab2 f282 	clz	r2, r2
 8007270:	2a00      	cmp	r2, #0
 8007272:	f040 8091 	bne.w	8007398 <__udivmoddi4+0x218>
 8007276:	eba1 000c 	sub.w	r0, r1, ip
 800727a:	2101      	movs	r1, #1
 800727c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007280:	fa1f fe8c 	uxth.w	lr, ip
 8007284:	fbb0 f3f7 	udiv	r3, r0, r7
 8007288:	fb07 0013 	mls	r0, r7, r3, r0
 800728c:	0c25      	lsrs	r5, r4, #16
 800728e:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007292:	fb0e f003 	mul.w	r0, lr, r3
 8007296:	42a8      	cmp	r0, r5
 8007298:	d908      	bls.n	80072ac <__udivmoddi4+0x12c>
 800729a:	eb1c 0505 	adds.w	r5, ip, r5
 800729e:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80072a2:	d202      	bcs.n	80072aa <__udivmoddi4+0x12a>
 80072a4:	42a8      	cmp	r0, r5
 80072a6:	f200 80ce 	bhi.w	8007446 <__udivmoddi4+0x2c6>
 80072aa:	4643      	mov	r3, r8
 80072ac:	1a2d      	subs	r5, r5, r0
 80072ae:	fbb5 f0f7 	udiv	r0, r5, r7
 80072b2:	fb07 5510 	mls	r5, r7, r0, r5
 80072b6:	fb0e fe00 	mul.w	lr, lr, r0
 80072ba:	b2a4      	uxth	r4, r4
 80072bc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80072c0:	45a6      	cmp	lr, r4
 80072c2:	d908      	bls.n	80072d6 <__udivmoddi4+0x156>
 80072c4:	eb1c 0404 	adds.w	r4, ip, r4
 80072c8:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80072cc:	d202      	bcs.n	80072d4 <__udivmoddi4+0x154>
 80072ce:	45a6      	cmp	lr, r4
 80072d0:	f200 80b6 	bhi.w	8007440 <__udivmoddi4+0x2c0>
 80072d4:	4628      	mov	r0, r5
 80072d6:	eba4 040e 	sub.w	r4, r4, lr
 80072da:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80072de:	e79e      	b.n	800721e <__udivmoddi4+0x9e>
 80072e0:	f1c1 0720 	rsb	r7, r1, #32
 80072e4:	408b      	lsls	r3, r1
 80072e6:	fa22 fc07 	lsr.w	ip, r2, r7
 80072ea:	ea4c 0c03 	orr.w	ip, ip, r3
 80072ee:	fa25 fa07 	lsr.w	sl, r5, r7
 80072f2:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80072f6:	fbba f8f9 	udiv	r8, sl, r9
 80072fa:	fa20 f307 	lsr.w	r3, r0, r7
 80072fe:	fb09 aa18 	mls	sl, r9, r8, sl
 8007302:	408d      	lsls	r5, r1
 8007304:	fa1f fe8c 	uxth.w	lr, ip
 8007308:	431d      	orrs	r5, r3
 800730a:	fa00 f301 	lsl.w	r3, r0, r1
 800730e:	fb08 f00e 	mul.w	r0, r8, lr
 8007312:	0c2c      	lsrs	r4, r5, #16
 8007314:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007318:	42a0      	cmp	r0, r4
 800731a:	fa02 f201 	lsl.w	r2, r2, r1
 800731e:	d90b      	bls.n	8007338 <__udivmoddi4+0x1b8>
 8007320:	eb1c 0404 	adds.w	r4, ip, r4
 8007324:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007328:	f080 8088 	bcs.w	800743c <__udivmoddi4+0x2bc>
 800732c:	42a0      	cmp	r0, r4
 800732e:	f240 8085 	bls.w	800743c <__udivmoddi4+0x2bc>
 8007332:	f1a8 0802 	sub.w	r8, r8, #2
 8007336:	4464      	add	r4, ip
 8007338:	1a24      	subs	r4, r4, r0
 800733a:	fbb4 f0f9 	udiv	r0, r4, r9
 800733e:	fb09 4410 	mls	r4, r9, r0, r4
 8007342:	fb00 fe0e 	mul.w	lr, r0, lr
 8007346:	b2ad      	uxth	r5, r5
 8007348:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 800734c:	45a6      	cmp	lr, r4
 800734e:	d908      	bls.n	8007362 <__udivmoddi4+0x1e2>
 8007350:	eb1c 0404 	adds.w	r4, ip, r4
 8007354:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007358:	d26c      	bcs.n	8007434 <__udivmoddi4+0x2b4>
 800735a:	45a6      	cmp	lr, r4
 800735c:	d96a      	bls.n	8007434 <__udivmoddi4+0x2b4>
 800735e:	3802      	subs	r0, #2
 8007360:	4464      	add	r4, ip
 8007362:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8007366:	fba0 9502 	umull	r9, r5, r0, r2
 800736a:	eba4 040e 	sub.w	r4, r4, lr
 800736e:	42ac      	cmp	r4, r5
 8007370:	46c8      	mov	r8, r9
 8007372:	46ae      	mov	lr, r5
 8007374:	d356      	bcc.n	8007424 <__udivmoddi4+0x2a4>
 8007376:	d053      	beq.n	8007420 <__udivmoddi4+0x2a0>
 8007378:	2e00      	cmp	r6, #0
 800737a:	d069      	beq.n	8007450 <__udivmoddi4+0x2d0>
 800737c:	ebb3 0208 	subs.w	r2, r3, r8
 8007380:	eb64 040e 	sbc.w	r4, r4, lr
 8007384:	fa22 f301 	lsr.w	r3, r2, r1
 8007388:	fa04 f707 	lsl.w	r7, r4, r7
 800738c:	431f      	orrs	r7, r3
 800738e:	40cc      	lsrs	r4, r1
 8007390:	e9c6 7400 	strd	r7, r4, [r6]
 8007394:	2100      	movs	r1, #0
 8007396:	e747      	b.n	8007228 <__udivmoddi4+0xa8>
 8007398:	fa0c fc02 	lsl.w	ip, ip, r2
 800739c:	f1c2 0120 	rsb	r1, r2, #32
 80073a0:	fa25 f301 	lsr.w	r3, r5, r1
 80073a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80073a8:	fa20 f101 	lsr.w	r1, r0, r1
 80073ac:	4095      	lsls	r5, r2
 80073ae:	430d      	orrs	r5, r1
 80073b0:	fbb3 f1f7 	udiv	r1, r3, r7
 80073b4:	fb07 3311 	mls	r3, r7, r1, r3
 80073b8:	fa1f fe8c 	uxth.w	lr, ip
 80073bc:	0c28      	lsrs	r0, r5, #16
 80073be:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80073c2:	fb01 f30e 	mul.w	r3, r1, lr
 80073c6:	4283      	cmp	r3, r0
 80073c8:	fa04 f402 	lsl.w	r4, r4, r2
 80073cc:	d908      	bls.n	80073e0 <__udivmoddi4+0x260>
 80073ce:	eb1c 0000 	adds.w	r0, ip, r0
 80073d2:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80073d6:	d22f      	bcs.n	8007438 <__udivmoddi4+0x2b8>
 80073d8:	4283      	cmp	r3, r0
 80073da:	d92d      	bls.n	8007438 <__udivmoddi4+0x2b8>
 80073dc:	3902      	subs	r1, #2
 80073de:	4460      	add	r0, ip
 80073e0:	1ac0      	subs	r0, r0, r3
 80073e2:	fbb0 f3f7 	udiv	r3, r0, r7
 80073e6:	fb07 0013 	mls	r0, r7, r3, r0
 80073ea:	b2ad      	uxth	r5, r5
 80073ec:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80073f0:	fb03 f00e 	mul.w	r0, r3, lr
 80073f4:	42a8      	cmp	r0, r5
 80073f6:	d908      	bls.n	800740a <__udivmoddi4+0x28a>
 80073f8:	eb1c 0505 	adds.w	r5, ip, r5
 80073fc:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007400:	d216      	bcs.n	8007430 <__udivmoddi4+0x2b0>
 8007402:	42a8      	cmp	r0, r5
 8007404:	d914      	bls.n	8007430 <__udivmoddi4+0x2b0>
 8007406:	3b02      	subs	r3, #2
 8007408:	4465      	add	r5, ip
 800740a:	1a28      	subs	r0, r5, r0
 800740c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007410:	e738      	b.n	8007284 <__udivmoddi4+0x104>
 8007412:	4631      	mov	r1, r6
 8007414:	4630      	mov	r0, r6
 8007416:	e707      	b.n	8007228 <__udivmoddi4+0xa8>
 8007418:	462f      	mov	r7, r5
 800741a:	e6e4      	b.n	80071e6 <__udivmoddi4+0x66>
 800741c:	4618      	mov	r0, r3
 800741e:	e6f9      	b.n	8007214 <__udivmoddi4+0x94>
 8007420:	454b      	cmp	r3, r9
 8007422:	d2a9      	bcs.n	8007378 <__udivmoddi4+0x1f8>
 8007424:	ebb9 0802 	subs.w	r8, r9, r2
 8007428:	eb65 0e0c 	sbc.w	lr, r5, ip
 800742c:	3801      	subs	r0, #1
 800742e:	e7a3      	b.n	8007378 <__udivmoddi4+0x1f8>
 8007430:	4643      	mov	r3, r8
 8007432:	e7ea      	b.n	800740a <__udivmoddi4+0x28a>
 8007434:	4628      	mov	r0, r5
 8007436:	e794      	b.n	8007362 <__udivmoddi4+0x1e2>
 8007438:	4641      	mov	r1, r8
 800743a:	e7d1      	b.n	80073e0 <__udivmoddi4+0x260>
 800743c:	46d0      	mov	r8, sl
 800743e:	e77b      	b.n	8007338 <__udivmoddi4+0x1b8>
 8007440:	4464      	add	r4, ip
 8007442:	3802      	subs	r0, #2
 8007444:	e747      	b.n	80072d6 <__udivmoddi4+0x156>
 8007446:	3b02      	subs	r3, #2
 8007448:	4465      	add	r5, ip
 800744a:	e72f      	b.n	80072ac <__udivmoddi4+0x12c>
 800744c:	4608      	mov	r0, r1
 800744e:	e706      	b.n	800725e <__udivmoddi4+0xde>
 8007450:	4631      	mov	r1, r6
 8007452:	e6e9      	b.n	8007228 <__udivmoddi4+0xa8>

08007454 <__aeabi_idiv0>:
 8007454:	4770      	bx	lr
 8007456:	bf00      	nop

08007458 <__aeabi_fmul>:
 8007458:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800745c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007460:	bf1e      	ittt	ne
 8007462:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007466:	ea92 0f0c 	teqne	r2, ip
 800746a:	ea93 0f0c 	teqne	r3, ip
 800746e:	d06f      	beq.n	8007550 <__aeabi_fmul+0xf8>
 8007470:	441a      	add	r2, r3
 8007472:	ea80 0c01 	eor.w	ip, r0, r1
 8007476:	0240      	lsls	r0, r0, #9
 8007478:	bf18      	it	ne
 800747a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800747e:	d01e      	beq.n	80074be <__aeabi_fmul+0x66>
 8007480:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007484:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007488:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 800748c:	fba0 3101 	umull	r3, r1, r0, r1
 8007490:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007494:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007498:	bf3e      	ittt	cc
 800749a:	0049      	lslcc	r1, r1, #1
 800749c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80074a0:	005b      	lslcc	r3, r3, #1
 80074a2:	ea40 0001 	orr.w	r0, r0, r1
 80074a6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80074aa:	2afd      	cmp	r2, #253	; 0xfd
 80074ac:	d81d      	bhi.n	80074ea <__aeabi_fmul+0x92>
 80074ae:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80074b2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80074b6:	bf08      	it	eq
 80074b8:	f020 0001 	biceq.w	r0, r0, #1
 80074bc:	4770      	bx	lr
 80074be:	f090 0f00 	teq	r0, #0
 80074c2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80074c6:	bf08      	it	eq
 80074c8:	0249      	lsleq	r1, r1, #9
 80074ca:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80074ce:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80074d2:	3a7f      	subs	r2, #127	; 0x7f
 80074d4:	bfc2      	ittt	gt
 80074d6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80074da:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80074de:	4770      	bxgt	lr
 80074e0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80074e4:	f04f 0300 	mov.w	r3, #0
 80074e8:	3a01      	subs	r2, #1
 80074ea:	dc5d      	bgt.n	80075a8 <__aeabi_fmul+0x150>
 80074ec:	f112 0f19 	cmn.w	r2, #25
 80074f0:	bfdc      	itt	le
 80074f2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80074f6:	4770      	bxle	lr
 80074f8:	f1c2 0200 	rsb	r2, r2, #0
 80074fc:	0041      	lsls	r1, r0, #1
 80074fe:	fa21 f102 	lsr.w	r1, r1, r2
 8007502:	f1c2 0220 	rsb	r2, r2, #32
 8007506:	fa00 fc02 	lsl.w	ip, r0, r2
 800750a:	ea5f 0031 	movs.w	r0, r1, rrx
 800750e:	f140 0000 	adc.w	r0, r0, #0
 8007512:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007516:	bf08      	it	eq
 8007518:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800751c:	4770      	bx	lr
 800751e:	f092 0f00 	teq	r2, #0
 8007522:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007526:	bf02      	ittt	eq
 8007528:	0040      	lsleq	r0, r0, #1
 800752a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800752e:	3a01      	subeq	r2, #1
 8007530:	d0f9      	beq.n	8007526 <__aeabi_fmul+0xce>
 8007532:	ea40 000c 	orr.w	r0, r0, ip
 8007536:	f093 0f00 	teq	r3, #0
 800753a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800753e:	bf02      	ittt	eq
 8007540:	0049      	lsleq	r1, r1, #1
 8007542:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007546:	3b01      	subeq	r3, #1
 8007548:	d0f9      	beq.n	800753e <__aeabi_fmul+0xe6>
 800754a:	ea41 010c 	orr.w	r1, r1, ip
 800754e:	e78f      	b.n	8007470 <__aeabi_fmul+0x18>
 8007550:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007554:	ea92 0f0c 	teq	r2, ip
 8007558:	bf18      	it	ne
 800755a:	ea93 0f0c 	teqne	r3, ip
 800755e:	d00a      	beq.n	8007576 <__aeabi_fmul+0x11e>
 8007560:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007564:	bf18      	it	ne
 8007566:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800756a:	d1d8      	bne.n	800751e <__aeabi_fmul+0xc6>
 800756c:	ea80 0001 	eor.w	r0, r0, r1
 8007570:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007574:	4770      	bx	lr
 8007576:	f090 0f00 	teq	r0, #0
 800757a:	bf17      	itett	ne
 800757c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007580:	4608      	moveq	r0, r1
 8007582:	f091 0f00 	teqne	r1, #0
 8007586:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800758a:	d014      	beq.n	80075b6 <__aeabi_fmul+0x15e>
 800758c:	ea92 0f0c 	teq	r2, ip
 8007590:	d101      	bne.n	8007596 <__aeabi_fmul+0x13e>
 8007592:	0242      	lsls	r2, r0, #9
 8007594:	d10f      	bne.n	80075b6 <__aeabi_fmul+0x15e>
 8007596:	ea93 0f0c 	teq	r3, ip
 800759a:	d103      	bne.n	80075a4 <__aeabi_fmul+0x14c>
 800759c:	024b      	lsls	r3, r1, #9
 800759e:	bf18      	it	ne
 80075a0:	4608      	movne	r0, r1
 80075a2:	d108      	bne.n	80075b6 <__aeabi_fmul+0x15e>
 80075a4:	ea80 0001 	eor.w	r0, r0, r1
 80075a8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80075ac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80075b0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80075b4:	4770      	bx	lr
 80075b6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80075ba:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80075be:	4770      	bx	lr

080075c0 <__gesf2>:
 80075c0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80075c4:	e006      	b.n	80075d4 <__cmpsf2+0x4>
 80075c6:	bf00      	nop

080075c8 <__lesf2>:
 80075c8:	f04f 0c01 	mov.w	ip, #1
 80075cc:	e002      	b.n	80075d4 <__cmpsf2+0x4>
 80075ce:	bf00      	nop

080075d0 <__cmpsf2>:
 80075d0:	f04f 0c01 	mov.w	ip, #1
 80075d4:	f84d cd04 	str.w	ip, [sp, #-4]!
 80075d8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80075dc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80075e0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80075e4:	bf18      	it	ne
 80075e6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80075ea:	d011      	beq.n	8007610 <__cmpsf2+0x40>
 80075ec:	b001      	add	sp, #4
 80075ee:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80075f2:	bf18      	it	ne
 80075f4:	ea90 0f01 	teqne	r0, r1
 80075f8:	bf58      	it	pl
 80075fa:	ebb2 0003 	subspl.w	r0, r2, r3
 80075fe:	bf88      	it	hi
 8007600:	17c8      	asrhi	r0, r1, #31
 8007602:	bf38      	it	cc
 8007604:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007608:	bf18      	it	ne
 800760a:	f040 0001 	orrne.w	r0, r0, #1
 800760e:	4770      	bx	lr
 8007610:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007614:	d102      	bne.n	800761c <__cmpsf2+0x4c>
 8007616:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800761a:	d105      	bne.n	8007628 <__cmpsf2+0x58>
 800761c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007620:	d1e4      	bne.n	80075ec <__cmpsf2+0x1c>
 8007622:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007626:	d0e1      	beq.n	80075ec <__cmpsf2+0x1c>
 8007628:	f85d 0b04 	ldr.w	r0, [sp], #4
 800762c:	4770      	bx	lr
 800762e:	bf00      	nop

08007630 <__aeabi_cfrcmple>:
 8007630:	4684      	mov	ip, r0
 8007632:	4608      	mov	r0, r1
 8007634:	4661      	mov	r1, ip
 8007636:	e7ff      	b.n	8007638 <__aeabi_cfcmpeq>

08007638 <__aeabi_cfcmpeq>:
 8007638:	b50f      	push	{r0, r1, r2, r3, lr}
 800763a:	f7ff ffc9 	bl	80075d0 <__cmpsf2>
 800763e:	2800      	cmp	r0, #0
 8007640:	bf48      	it	mi
 8007642:	f110 0f00 	cmnmi.w	r0, #0
 8007646:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007648 <__aeabi_fcmpeq>:
 8007648:	f84d ed08 	str.w	lr, [sp, #-8]!
 800764c:	f7ff fff4 	bl	8007638 <__aeabi_cfcmpeq>
 8007650:	bf0c      	ite	eq
 8007652:	2001      	moveq	r0, #1
 8007654:	2000      	movne	r0, #0
 8007656:	f85d fb08 	ldr.w	pc, [sp], #8
 800765a:	bf00      	nop

0800765c <__aeabi_fcmplt>:
 800765c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007660:	f7ff ffea 	bl	8007638 <__aeabi_cfcmpeq>
 8007664:	bf34      	ite	cc
 8007666:	2001      	movcc	r0, #1
 8007668:	2000      	movcs	r0, #0
 800766a:	f85d fb08 	ldr.w	pc, [sp], #8
 800766e:	bf00      	nop

08007670 <__aeabi_fcmple>:
 8007670:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007674:	f7ff ffe0 	bl	8007638 <__aeabi_cfcmpeq>
 8007678:	bf94      	ite	ls
 800767a:	2001      	movls	r0, #1
 800767c:	2000      	movhi	r0, #0
 800767e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007682:	bf00      	nop

08007684 <__aeabi_fcmpge>:
 8007684:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007688:	f7ff ffd2 	bl	8007630 <__aeabi_cfrcmple>
 800768c:	bf94      	ite	ls
 800768e:	2001      	movls	r0, #1
 8007690:	2000      	movhi	r0, #0
 8007692:	f85d fb08 	ldr.w	pc, [sp], #8
 8007696:	bf00      	nop

08007698 <__aeabi_fcmpgt>:
 8007698:	f84d ed08 	str.w	lr, [sp, #-8]!
 800769c:	f7ff ffc8 	bl	8007630 <__aeabi_cfrcmple>
 80076a0:	bf34      	ite	cc
 80076a2:	2001      	movcc	r0, #1
 80076a4:	2000      	movcs	r0, #0
 80076a6:	f85d fb08 	ldr.w	pc, [sp], #8
 80076aa:	bf00      	nop

080076ac <__aeabi_f2uiz>:
 80076ac:	0042      	lsls	r2, r0, #1
 80076ae:	d20e      	bcs.n	80076ce <__aeabi_f2uiz+0x22>
 80076b0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80076b4:	d30b      	bcc.n	80076ce <__aeabi_f2uiz+0x22>
 80076b6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80076ba:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80076be:	d409      	bmi.n	80076d4 <__aeabi_f2uiz+0x28>
 80076c0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80076c4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80076c8:	fa23 f002 	lsr.w	r0, r3, r2
 80076cc:	4770      	bx	lr
 80076ce:	f04f 0000 	mov.w	r0, #0
 80076d2:	4770      	bx	lr
 80076d4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80076d8:	d101      	bne.n	80076de <__aeabi_f2uiz+0x32>
 80076da:	0242      	lsls	r2, r0, #9
 80076dc:	d102      	bne.n	80076e4 <__aeabi_f2uiz+0x38>
 80076de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80076e2:	4770      	bx	lr
 80076e4:	f04f 0000 	mov.w	r0, #0
 80076e8:	4770      	bx	lr
 80076ea:	bf00      	nop

080076ec <__popcountsi2>:
 80076ec:	0843      	lsrs	r3, r0, #1
 80076ee:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 80076f2:	1ac0      	subs	r0, r0, r3
 80076f4:	0883      	lsrs	r3, r0, #2
 80076f6:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 80076fa:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 80076fe:	4418      	add	r0, r3
 8007700:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007704:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007708:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 800770c:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007710:	0e00      	lsrs	r0, r0, #24
 8007712:	4770      	bx	lr

08007714 <Reset_Handler>:
 8007714:	480c      	ldr	r0, [pc, #48]	; (8007748 <Zerobss+0x10>)
 8007716:	4685      	mov	sp, r0
 8007718:	2100      	movs	r1, #0
 800771a:	e003      	b.n	8007724 <DataInit>

0800771c <CopyData>:
 800771c:	4b0b      	ldr	r3, [pc, #44]	; (800774c <Zerobss+0x14>)
 800771e:	585b      	ldr	r3, [r3, r1]
 8007720:	5043      	str	r3, [r0, r1]
 8007722:	3104      	adds	r1, #4

08007724 <DataInit>:
 8007724:	480a      	ldr	r0, [pc, #40]	; (8007750 <Zerobss+0x18>)
 8007726:	4b0b      	ldr	r3, [pc, #44]	; (8007754 <Zerobss+0x1c>)
 8007728:	1842      	adds	r2, r0, r1
 800772a:	429a      	cmp	r2, r3
 800772c:	d3f6      	bcc.n	800771c <CopyData>
 800772e:	4a0a      	ldr	r2, [pc, #40]	; (8007758 <Zerobss+0x20>)
 8007730:	e002      	b.n	8007738 <Zerobss>

08007732 <FillZerobss>:
 8007732:	2300      	movs	r3, #0
 8007734:	f842 3b04 	str.w	r3, [r2], #4

08007738 <Zerobss>:
 8007738:	4b08      	ldr	r3, [pc, #32]	; (800775c <Zerobss+0x24>)
 800773a:	429a      	cmp	r2, r3
 800773c:	d3f9      	bcc.n	8007732 <FillZerobss>
 800773e:	f007 fcf7 	bl	800f130 <SystemInit>
 8007742:	f000 f8e3 	bl	800790c <main>
 8007746:	4770      	bx	lr
 8007748:	20018000 	andcs	r8, r1, r0
 800774c:	080127cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, sp}
 8007750:	20000000 	andcs	r0, r0, r0
 8007754:	200000f8 	strdcs	r0, [r0], -r8
 8007758:	200000f8 	strdcs	r0, [r0], -r8
 800775c:	2000c02c 	andcs	ip, r0, ip, lsr #32

08007760 <ADC0_1_IRQHandler>:
 8007760:	e7fe      	b.n	8007760 <ADC0_1_IRQHandler>

08007762 <memcmp>:
 8007762:	b510      	push	{r4, lr}
 8007764:	3901      	subs	r1, #1
 8007766:	4402      	add	r2, r0
 8007768:	4290      	cmp	r0, r2
 800776a:	d008      	beq.n	800777e <memcmp+0x1c>
 800776c:	7803      	ldrb	r3, [r0, #0]
 800776e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007772:	42a3      	cmp	r3, r4
 8007774:	d001      	beq.n	800777a <memcmp+0x18>
 8007776:	1b18      	subs	r0, r3, r4
 8007778:	bd10      	pop	{r4, pc}
 800777a:	3001      	adds	r0, #1
 800777c:	e7f4      	b.n	8007768 <memcmp+0x6>
 800777e:	2000      	movs	r0, #0
 8007780:	e7fa      	b.n	8007778 <memcmp+0x16>

08007782 <DisplayHandler::~DisplayHandler()>:
 8007782:	4770      	bx	lr

08007784 <dmxconfigudp::atoi(char const*, unsigned char)>:
 8007784:	b530      	push	{r4, r5, lr}
 8007786:	1e42      	subs	r2, r0, #1
 8007788:	240a      	movs	r4, #10
 800778a:	2000      	movs	r0, #0
 800778c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8007790:	3b30      	subs	r3, #48	; 0x30
 8007792:	b2dd      	uxtb	r5, r3
 8007794:	2d09      	cmp	r5, #9
 8007796:	d805      	bhi.n	80077a4 <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8007798:	3901      	subs	r1, #1
 800779a:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800779e:	fb04 3000 	mla	r0, r4, r0, r3
 80077a2:	d1f3      	bne.n	800778c <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 80077a4:	bd30      	pop	{r4, r5, pc}

080077a6 <DisplayHandler::~DisplayHandler()>:
 80077a6:	b510      	push	{r4, lr}
 80077a8:	4604      	mov	r4, r0
 80077aa:	f007 fa69 	bl	800ec80 <operator delete(void*)>
 80077ae:	4620      	mov	r0, r4
 80077b0:	bd10      	pop	{r4, pc}

080077b2 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80077b2:	b110      	cbz	r0, 80077ba <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80077b4:	6803      	ldr	r3, [r0, #0]
 80077b6:	6a1b      	ldr	r3, [r3, #32]
 80077b8:	4718      	bx	r3
 80077ba:	4770      	bx	lr

080077bc <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 80077bc:	b430      	push	{r4, r5}
 80077be:	b168      	cbz	r0, 80077dc <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 80077c0:	2300      	movs	r3, #0
 80077c2:	7905      	ldrb	r5, [r0, #4]
 80077c4:	5cd4      	ldrb	r4, [r2, r3]
 80077c6:	b11c      	cbz	r4, 80077d0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80077c8:	1c5c      	adds	r4, r3, #1
 80077ca:	429d      	cmp	r5, r3
 80077cc:	4623      	mov	r3, r4
 80077ce:	dcf9      	bgt.n	80077c4 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 80077d0:	6804      	ldr	r4, [r0, #0]
 80077d2:	b2db      	uxtb	r3, r3
 80077d4:	69e4      	ldr	r4, [r4, #28]
 80077d6:	46a4      	mov	ip, r4
 80077d8:	bc30      	pop	{r4, r5}
 80077da:	4760      	bx	ip
 80077dc:	bc30      	pop	{r4, r5}
 80077de:	4770      	bx	lr

080077e0 <Display::PutChar(int) [clone .isra.0]>:
 80077e0:	b110      	cbz	r0, 80077e8 <Display::PutChar(int) [clone .isra.0]+0x8>
 80077e2:	6803      	ldr	r3, [r0, #0]
 80077e4:	695b      	ldr	r3, [r3, #20]
 80077e6:	4718      	bx	r3
 80077e8:	4770      	bx	lr
	...

080077ec <DisplayHandler::Print(unsigned int)>:
 80077ec:	b538      	push	{r3, r4, r5, lr}
 80077ee:	7903      	ldrb	r3, [r0, #4]
 80077f0:	b1f3      	cbz	r3, 8007830 <DisplayHandler::Print(unsigned int)+0x44>
 80077f2:	2904      	cmp	r1, #4
 80077f4:	bf98      	it	ls
 80077f6:	4b0f      	ldrls	r3, [pc, #60]	; (8007834 <DisplayHandler::Print(unsigned int)+0x48>)
 80077f8:	4d0f      	ldr	r5, [pc, #60]	; (8007838 <DisplayHandler::Print(unsigned int)+0x4c>)
 80077fa:	bf98      	it	ls
 80077fc:	5c5c      	ldrbls	r4, [r3, r1]
 80077fe:	682b      	ldr	r3, [r5, #0]
 8007800:	bf88      	it	hi
 8007802:	2455      	movhi	r4, #85	; 0x55
 8007804:	6998      	ldr	r0, [r3, #24]
 8007806:	b178      	cbz	r0, 8007828 <DisplayHandler::Print(unsigned int)+0x3c>
 8007808:	7901      	ldrb	r1, [r0, #4]
 800780a:	3901      	subs	r1, #1
 800780c:	b2c9      	uxtb	r1, r1
 800780e:	b168      	cbz	r0, 800782c <DisplayHandler::Print(unsigned int)+0x40>
 8007810:	7942      	ldrb	r2, [r0, #5]
 8007812:	3a01      	subs	r2, #1
 8007814:	b2d2      	uxtb	r2, r2
 8007816:	f7ff ffcc 	bl	80077b2 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800781a:	682b      	ldr	r3, [r5, #0]
 800781c:	4621      	mov	r1, r4
 800781e:	6998      	ldr	r0, [r3, #24]
 8007820:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007824:	f7ff bfdc 	b.w	80077e0 <Display::PutChar(int) [clone .isra.0]>
 8007828:	4601      	mov	r1, r0
 800782a:	e7ee      	b.n	800780a <DisplayHandler::Print(unsigned int)+0x1e>
 800782c:	4602      	mov	r2, r0
 800782e:	e7f0      	b.n	8007812 <DisplayHandler::Print(unsigned int)+0x26>
 8007830:	bd38      	pop	{r3, r4, r5, pc}
 8007832:	bf00      	nop
 8007834:	08010df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp}
 8007838:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8

0800783c <Display::Printf(unsigned char, char const*, ...)>:
 800783c:	b40c      	push	{r2, r3}
 800783e:	b570      	push	{r4, r5, r6, lr}
 8007840:	6984      	ldr	r4, [r0, #24]
 8007842:	4605      	mov	r5, r0
 8007844:	460e      	mov	r6, r1
 8007846:	b08a      	sub	sp, #40	; 0x28
 8007848:	b174      	cbz	r4, 8007868 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800784a:	ab0f      	add	r3, sp, #60	; 0x3c
 800784c:	2120      	movs	r1, #32
 800784e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007850:	a802      	add	r0, sp, #8
 8007852:	9301      	str	r3, [sp, #4]
 8007854:	f000 fca4 	bl	80081a0 <vsnprintf>
 8007858:	4604      	mov	r4, r0
 800785a:	69a8      	ldr	r0, [r5, #24]
 800785c:	4631      	mov	r1, r6
 800785e:	6803      	ldr	r3, [r0, #0]
 8007860:	aa02      	add	r2, sp, #8
 8007862:	69dd      	ldr	r5, [r3, #28]
 8007864:	b2a3      	uxth	r3, r4
 8007866:	47a8      	blx	r5
 8007868:	4620      	mov	r0, r4
 800786a:	b00a      	add	sp, #40	; 0x28
 800786c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007870:	b002      	add	sp, #8
 8007872:	4770      	bx	lr

08007874 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007874:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007878:	4604      	mov	r4, r0
 800787a:	6980      	ldr	r0, [r0, #24]
 800787c:	460f      	mov	r7, r1
 800787e:	4615      	mov	r5, r2
 8007880:	461e      	mov	r6, r3
 8007882:	b308      	cbz	r0, 80078c8 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x54>
 8007884:	f890 a005 	ldrb.w	sl, [r0, #5]
 8007888:	2100      	movs	r1, #0
 800788a:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 800788e:	fa5f f888 	uxtb.w	r8, r8
 8007892:	4642      	mov	r2, r8
 8007894:	f890 b004 	ldrb.w	fp, [r0, #4]
 8007898:	f04f 0900 	mov.w	r9, #0
 800789c:	f7ff ff89 	bl	80077b2 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80078a0:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80078a4:	45cb      	cmp	fp, r9
 80078a6:	69a0      	ldr	r0, [r4, #24]
 80078a8:	d905      	bls.n	80078b6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x42>
 80078aa:	2120      	movs	r1, #32
 80078ac:	f7ff ff98 	bl	80077e0 <Display::PutChar(int) [clone .isra.0]>
 80078b0:	f109 0901 	add.w	r9, r9, #1
 80078b4:	e7f6      	b.n	80078a4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 80078b6:	4642      	mov	r2, r8
 80078b8:	2100      	movs	r1, #0
 80078ba:	f7ff ff7a 	bl	80077b2 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80078be:	463a      	mov	r2, r7
 80078c0:	4651      	mov	r1, sl
 80078c2:	69a0      	ldr	r0, [r4, #24]
 80078c4:	f7ff ff7a 	bl	80077bc <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80078c8:	7c63      	ldrb	r3, [r4, #17]
 80078ca:	b19b      	cbz	r3, 80078f4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x80>
 80078cc:	43ed      	mvns	r5, r5
 80078ce:	2312      	movs	r3, #18
 80078d0:	7a20      	ldrb	r0, [r4, #8]
 80078d2:	f88d 3004 	strb.w	r3, [sp, #4]
 80078d6:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80078da:	f88d 3005 	strb.w	r3, [sp, #5]
 80078de:	f88d 5006 	strb.w	r5, [sp, #6]
 80078e2:	f008 faa3 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 80078e6:	68e0      	ldr	r0, [r4, #12]
 80078e8:	f008 fa98 	bl	800fe1c <gd32_i2c_set_baudrate(unsigned int)>
 80078ec:	2103      	movs	r1, #3
 80078ee:	a801      	add	r0, sp, #4
 80078f0:	f008 faa2 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 80078f4:	1c73      	adds	r3, r6, #1
 80078f6:	d006      	beq.n	8007906 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 80078f8:	4639      	mov	r1, r7
 80078fa:	4630      	mov	r0, r6
 80078fc:	b003      	add	sp, #12
 80078fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007902:	f007 b88d 	b.w	800ea20 <console_status>
 8007906:	b003      	add	sp, #12
 8007908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800790c <main>:
 800790c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007910:	f6ad 1d54 	subw	sp, sp, #2388	; 0x954
 8007914:	a80e      	add	r0, sp, #56	; 0x38
 8007916:	f007 f925 	bl	800eb64 <Hardware::Hardware()>
 800791a:	a843      	add	r0, sp, #268	; 0x10c
 800791c:	f005 f98a 	bl	800cc34 <Network::Network()>
 8007920:	a816      	add	r0, sp, #88	; 0x58
 8007922:	f007 f8db 	bl	800eadc <LedBlink::LedBlink()>
 8007926:	a81c      	add	r0, sp, #112	; 0x70
 8007928:	f006 fe06 	bl	800e538 <Display::Display()>
 800792c:	4aab      	ldr	r2, [pc, #684]	; (8007bdc <main+0x2d0>)
 800792e:	4bac      	ldr	r3, [pc, #688]	; (8007be0 <main+0x2d4>)
 8007930:	49ac      	ldr	r1, [pc, #688]	; (8007be4 <main+0x2d8>)
 8007932:	a805      	add	r0, sp, #20
 8007934:	f007 f88c 	bl	800ea50 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007938:	a806      	add	r0, sp, #24
 800793a:	f003 fda3 	bl	800b484 <FlashRom::FlashRom()>
 800793e:	a807      	add	r0, sp, #28
 8007940:	f003 fb50 	bl	800afe4 <SpiFlashStore::SpiFlashStore()>
 8007944:	49a8      	ldr	r1, [pc, #672]	; (8007be8 <main+0x2dc>)
 8007946:	a805      	add	r0, sp, #20
 8007948:	f007 f8ba 	bl	800eac0 <FirmwareVersion::Print(char const*)>
 800794c:	2301      	movs	r3, #1
 800794e:	4ea7      	ldr	r6, [pc, #668]	; (8007bec <main+0x2e0>)
 8007950:	2008      	movs	r0, #8
 8007952:	6133      	str	r3, [r6, #16]
 8007954:	f007 f998 	bl	800ec88 <operator new(unsigned int)>
 8007958:	4ba5      	ldr	r3, [pc, #660]	; (8007bf0 <main+0x2e4>)
 800795a:	9018      	str	r0, [sp, #96]	; 0x60
 800795c:	6003      	str	r3, [r0, #0]
 800795e:	4ba5      	ldr	r3, [pc, #660]	; (8007bf4 <main+0x2e8>)
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	3b00      	subs	r3, #0
 8007964:	bf18      	it	ne
 8007966:	2301      	movne	r3, #1
 8007968:	7103      	strb	r3, [r0, #4]
 800796a:	a809      	add	r0, sp, #36	; 0x24
 800796c:	f003 fd4c 	bl	800b408 <StoreOscServer::StoreOscServer()>
 8007970:	a909      	add	r1, sp, #36	; 0x24
 8007972:	a875      	add	r0, sp, #468	; 0x1d4
 8007974:	f000 ff3e 	bl	80087f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8007978:	a833      	add	r0, sp, #204	; 0xcc
 800797a:	f000 fc41 	bl	8008200 <OscServer::OscServer()>
 800797e:	a875      	add	r0, sp, #468	; 0x1d4
 8007980:	f000 ff48 	bl	8008814 <OSCServerParams::Load()>
 8007984:	b130      	cbz	r0, 8007994 <main+0x88>
 8007986:	a875      	add	r0, sp, #468	; 0x1d4
 8007988:	f001 f8db 	bl	8008b42 <OSCServerParams::Dump()>
 800798c:	a933      	add	r1, sp, #204	; 0xcc
 800798e:	a875      	add	r0, sp, #468	; 0x1d4
 8007990:	f000 ffea 	bl	8008968 <OSCServerParams::Set(OscServer*)>
 8007994:	2400      	movs	r4, #0
 8007996:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800799a:	2303      	movs	r3, #3
 800799c:	4996      	ldr	r1, [pc, #600]	; (8007bf8 <main+0x2ec>)
 800799e:	a81c      	add	r0, sp, #112	; 0x70
 80079a0:	f7ff ff68 	bl	8007874 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80079a4:	a810      	add	r0, sp, #64	; 0x40
 80079a6:	f003 fcf9 	bl	800b39c <StoreNetwork::StoreNetwork()>
 80079aa:	ab11      	add	r3, sp, #68	; 0x44
 80079ac:	a910      	add	r1, sp, #64	; 0x40
 80079ae:	a843      	add	r0, sp, #268	; 0x10c
 80079b0:	9370      	str	r3, [sp, #448]	; 0x1c0
 80079b2:	f005 f995 	bl	800cce0 <Network::Init(NetworkParamsStore*)>
 80079b6:	a843      	add	r0, sp, #268	; 0x10c
 80079b8:	f005 fac2 	bl	800cf40 <Network::Print()>
 80079bc:	a808      	add	r0, sp, #32
 80079be:	f004 fd73 	bl	800c4a8 <MDNS::MDNS()>
 80079c2:	a808      	add	r0, sp, #32
 80079c4:	f004 fe34 	bl	800c630 <MDNS::Start()>
 80079c8:	4b8c      	ldr	r3, [pc, #560]	; (8007bfc <main+0x2f0>)
 80079ca:	4621      	mov	r1, r4
 80079cc:	4a8c      	ldr	r2, [pc, #560]	; (8007c00 <main+0x2f4>)
 80079ce:	9301      	str	r3, [sp, #4]
 80079d0:	9400      	str	r4, [sp, #0]
 80079d2:	f8bd 30cc 	ldrh.w	r3, [sp, #204]	; 0xcc
 80079d6:	a808      	add	r0, sp, #32
 80079d8:	f004 ff96 	bl	800c908 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80079dc:	4b89      	ldr	r3, [pc, #548]	; (8007c04 <main+0x2f8>)
 80079de:	4621      	mov	r1, r4
 80079e0:	9301      	str	r3, [sp, #4]
 80079e2:	2301      	movs	r3, #1
 80079e4:	4a88      	ldr	r2, [pc, #544]	; (8007c08 <main+0x2fc>)
 80079e6:	9300      	str	r3, [sp, #0]
 80079e8:	a808      	add	r0, sp, #32
 80079ea:	2350      	movs	r3, #80	; 0x50
 80079ec:	f004 ff8c 	bl	800c908 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80079f0:	a808      	add	r0, sp, #32
 80079f2:	f005 f8cf 	bl	800cb94 <MDNS::Print()>
 80079f6:	2303      	movs	r3, #3
 80079f8:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80079fc:	4983      	ldr	r1, [pc, #524]	; (8007c0c <main+0x300>)
 80079fe:	a81c      	add	r0, sp, #112	; 0x70
 8007a00:	f7ff ff38 	bl	8007874 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007a04:	a80a      	add	r0, sp, #40	; 0x28
 8007a06:	f003 fc1d 	bl	800b244 <StoreDmxSend::StoreDmxSend()>
 8007a0a:	a90a      	add	r1, sp, #40	; 0x28
 8007a0c:	a812      	add	r0, sp, #72	; 0x48
 8007a0e:	f001 fb0d 	bl	800902c <DmxParams::DmxParams(DmxParamsStore*)>
 8007a12:	a823      	add	r0, sp, #140	; 0x8c
 8007a14:	f001 ff1a 	bl	800984c <Dmx::Dmx()>
 8007a18:	a812      	add	r0, sp, #72	; 0x48
 8007a1a:	f001 fb13 	bl	8009044 <DmxParams::Load()>
 8007a1e:	b130      	cbz	r0, 8007a2e <main+0x122>
 8007a20:	a812      	add	r0, sp, #72	; 0x48
 8007a22:	f001 fc5b 	bl	80092dc <DmxParams::Dump()>
 8007a26:	a923      	add	r1, sp, #140	; 0x8c
 8007a28:	a812      	add	r0, sp, #72	; 0x48
 8007a2a:	f001 fc2d 	bl	8009288 <DmxParams::Set(Dmx*)>
 8007a2e:	4b78      	ldr	r3, [pc, #480]	; (8007c10 <main+0x304>)
 8007a30:	ac0b      	add	r4, sp, #44	; 0x2c
 8007a32:	4d78      	ldr	r5, [pc, #480]	; (8007c14 <main+0x308>)
 8007a34:	4620      	mov	r0, r4
 8007a36:	930b      	str	r3, [sp, #44]	; 0x2c
 8007a38:	f001 fa9e 	bl	8008f78 <DmxSend::Print()>
 8007a3c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8007a40:	6828      	ldr	r0, [r5, #0]
 8007a42:	f005 f927 	bl	800cc94 <Network::Begin(unsigned short)>
 8007a46:	4f74      	ldr	r7, [pc, #464]	; (8007c18 <main+0x30c>)
 8007a48:	9440      	str	r4, [sp, #256]	; 0x100
 8007a4a:	6038      	str	r0, [r7, #0]
 8007a4c:	a833      	add	r0, sp, #204	; 0xcc
 8007a4e:	f000 fe3d 	bl	80086cc <OscServer::Print()>
 8007a52:	4620      	mov	r0, r4
 8007a54:	f001 fa90 	bl	8008f78 <DmxSend::Print()>
 8007a58:	2401      	movs	r4, #1
 8007a5a:	9822      	ldr	r0, [sp, #136]	; 0x88
 8007a5c:	b118      	cbz	r0, 8007a66 <main+0x15a>
 8007a5e:	6803      	ldr	r3, [r0, #0]
 8007a60:	4621      	mov	r1, r4
 8007a62:	691b      	ldr	r3, [r3, #16]
 8007a64:	4798      	blx	r3
 8007a66:	3401      	adds	r4, #1
 8007a68:	b2e4      	uxtb	r4, r4
 8007a6a:	2c07      	cmp	r4, #7
 8007a6c:	d1f5      	bne.n	8007a5a <main+0x14e>
 8007a6e:	2101      	movs	r1, #1
 8007a70:	4a6a      	ldr	r2, [pc, #424]	; (8007c1c <main+0x310>)
 8007a72:	a81c      	add	r0, sp, #112	; 0x70
 8007a74:	f7ff fee2 	bl	800783c <Display::Printf(unsigned char, char const*, ...)>
 8007a78:	2102      	movs	r1, #2
 8007a7a:	4a69      	ldr	r2, [pc, #420]	; (8007c20 <main+0x314>)
 8007a7c:	9822      	ldr	r0, [sp, #136]	; 0x88
 8007a7e:	f7ff fe9d 	bl	80077bc <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8007a82:	f89d 410d 	ldrb.w	r4, [sp, #269]	; 0x10d
 8007a86:	682b      	ldr	r3, [r5, #0]
 8007a88:	2c00      	cmp	r4, #0
 8007a8a:	bf14      	ite	ne
 8007a8c:	2444      	movne	r4, #68	; 0x44
 8007a8e:	2453      	moveq	r4, #83	; 0x53
 8007a90:	691b      	ldr	r3, [r3, #16]
 8007a92:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8007a96:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8007a9a:	0e18      	lsrs	r0, r3, #24
 8007a9c:	e9cd 2100 	strd	r2, r1, [sp]
 8007aa0:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8007aa4:	2103      	movs	r1, #3
 8007aa6:	4a5f      	ldr	r2, [pc, #380]	; (8007c24 <main+0x318>)
 8007aa8:	b2db      	uxtb	r3, r3
 8007aaa:	a81c      	add	r0, sp, #112	; 0x70
 8007aac:	f7ff fec6 	bl	800783c <Display::Printf(unsigned char, char const*, ...)>
 8007ab0:	2104      	movs	r1, #4
 8007ab2:	f8bd 30cc 	ldrh.w	r3, [sp, #204]	; 0xcc
 8007ab6:	4a5c      	ldr	r2, [pc, #368]	; (8007c28 <main+0x31c>)
 8007ab8:	a81c      	add	r0, sp, #112	; 0x70
 8007aba:	f7ff febf 	bl	800783c <Display::Printf(unsigned char, char const*, ...)>
 8007abe:	2105      	movs	r1, #5
 8007ac0:	f8bd 30ce 	ldrh.w	r3, [sp, #206]	; 0xce
 8007ac4:	4a59      	ldr	r2, [pc, #356]	; (8007c2c <main+0x320>)
 8007ac6:	a81c      	add	r0, sp, #112	; 0x70
 8007ac8:	f7ff feb8 	bl	800783c <Display::Printf(unsigned char, char const*, ...)>
 8007acc:	2301      	movs	r3, #1
 8007ace:	2200      	movs	r2, #0
 8007ad0:	2102      	movs	r1, #2
 8007ad2:	a8d9      	add	r0, sp, #868	; 0x364
 8007ad4:	f002 f91a 	bl	8009d0c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8007ad8:	a80c      	add	r0, sp, #48	; 0x30
 8007ada:	f003 fcc9 	bl	800b470 <StoreRemoteConfig::StoreRemoteConfig()>
 8007ade:	a90c      	add	r1, sp, #48	; 0x30
 8007ae0:	a82a      	add	r0, sp, #168	; 0xa8
 8007ae2:	f002 fbb1 	bl	800a248 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8007ae6:	a82a      	add	r0, sp, #168	; 0xa8
 8007ae8:	f002 fbb8 	bl	800a25c <RemoteConfigParams::Load()>
 8007aec:	b130      	cbz	r0, 8007afc <main+0x1f0>
 8007aee:	a82a      	add	r0, sp, #168	; 0xa8
 8007af0:	a9d9      	add	r1, sp, #868	; 0x364
 8007af2:	f002 fcda 	bl	800a4aa <RemoteConfigParams::Set(RemoteConfig*)>
 8007af6:	a82a      	add	r0, sp, #168	; 0xa8
 8007af8:	f002 fcf7 	bl	800a4ea <RemoteConfigParams::Dump()>
 8007afc:	a807      	add	r0, sp, #28
 8007afe:	f003 fb1d 	bl	800b13c <SpiFlashStore::Flash()>
 8007b02:	2800      	cmp	r0, #0
 8007b04:	d1fa      	bne.n	8007afc <main+0x1f0>
 8007b06:	2303      	movs	r3, #3
 8007b08:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8007b0c:	4948      	ldr	r1, [pc, #288]	; (8007c30 <main+0x324>)
 8007b0e:	a81c      	add	r0, sp, #112	; 0x70
 8007b10:	f7ff feb0 	bl	8007874 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007b14:	a833      	add	r0, sp, #204	; 0xcc
 8007b16:	f000 fbdd 	bl	80082d4 <OscServer::Start()>
 8007b1a:	2302      	movs	r3, #2
 8007b1c:	f248 0280 	movw	r2, #32896	; 0x8080
 8007b20:	4944      	ldr	r1, [pc, #272]	; (8007c34 <main+0x328>)
 8007b22:	a81c      	add	r0, sp, #112	; 0x70
 8007b24:	f7ff fea6 	bl	8007874 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8007b28:	2102      	movs	r1, #2
 8007b2a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007b2e:	f007 fc51 	bl	800f3d4 <fwdgt_config>
 8007b32:	2801      	cmp	r0, #1
 8007b34:	bf0c      	ite	eq
 8007b36:	2301      	moveq	r3, #1
 8007b38:	2300      	movne	r3, #0
 8007b3a:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 8007b3e:	d101      	bne.n	8007b44 <main+0x238>
 8007b40:	f007 fc38 	bl	800f3b4 <fwdgt_enable>
 8007b44:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 8007c38 <main+0x32c>
 8007b48:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 8007c3c <main+0x330>
 8007b4c:	f007 fc3a 	bl	800f3c4 <fwdgt_counter_reload>
 8007b50:	f003 fe70 	bl	800b834 <net_handle>
 8007b54:	a833      	add	r0, sp, #204	; 0xcc
 8007b56:	f000 fc6d 	bl	8008434 <OscServer::Run()>
 8007b5a:	a8d9      	add	r0, sp, #868	; 0x364
 8007b5c:	f002 fa5c 	bl	800a018 <RemoteConfig::Run()>
 8007b60:	a807      	add	r0, sp, #28
 8007b62:	f003 faeb 	bl	800b13c <SpiFlashStore::Flash()>
 8007b66:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8007b68:	b192      	cbz	r2, 8007b90 <main+0x284>
 8007b6a:	f8d9 3000 	ldr.w	r3, [r9]
 8007b6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007b70:	1a5b      	subs	r3, r3, r1
 8007b72:	429a      	cmp	r2, r3
 8007b74:	d80c      	bhi.n	8007b90 <main+0x284>
 8007b76:	f8d9 3000 	ldr.w	r3, [r9]
 8007b7a:	931b      	str	r3, [sp, #108]	; 0x6c
 8007b7c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007b7e:	2b01      	cmp	r3, #1
 8007b80:	f083 0201 	eor.w	r2, r3, #1
 8007b84:	bf18      	it	ne
 8007b86:	2301      	movne	r3, #1
 8007b88:	921a      	str	r2, [sp, #104]	; 0x68
 8007b8a:	bf14      	ite	ne
 8007b8c:	6133      	strne	r3, [r6, #16]
 8007b8e:	6173      	streq	r3, [r6, #20]
 8007b90:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8007b92:	b182      	cbz	r2, 8007bb6 <main+0x2aa>
 8007b94:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
 8007b98:	b96b      	cbnz	r3, 8007bb6 <main+0x2aa>
 8007b9a:	f8d9 3000 	ldr.w	r3, [r9]
 8007b9e:	991d      	ldr	r1, [sp, #116]	; 0x74
 8007ba0:	1a5b      	subs	r3, r3, r1
 8007ba2:	429a      	cmp	r2, r3
 8007ba4:	d207      	bcs.n	8007bb6 <main+0x2aa>
 8007ba6:	9822      	ldr	r0, [sp, #136]	; 0x88
 8007ba8:	b128      	cbz	r0, 8007bb6 <main+0x2aa>
 8007baa:	2101      	movs	r1, #1
 8007bac:	6803      	ldr	r3, [r0, #0]
 8007bae:	f88d 1080 	strb.w	r1, [sp, #128]	; 0x80
 8007bb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007bb4:	4798      	blx	r3
 8007bb6:	4d22      	ldr	r5, [pc, #136]	; (8007c40 <main+0x334>)
 8007bb8:	f10d 0322 	add.w	r3, sp, #34	; 0x22
 8007bbc:	9300      	str	r3, [sp, #0]
 8007bbe:	2210      	movs	r2, #16
 8007bc0:	4629      	mov	r1, r5
 8007bc2:	7838      	ldrb	r0, [r7, #0]
 8007bc4:	ab0d      	add	r3, sp, #52	; 0x34
 8007bc6:	f004 fb39 	bl	800c23c <udp_recv>
 8007bca:	280a      	cmp	r0, #10
 8007bcc:	4604      	mov	r4, r0
 8007bce:	d95a      	bls.n	8007c86 <main+0x37a>
 8007bd0:	2204      	movs	r2, #4
 8007bd2:	4629      	mov	r1, r5
 8007bd4:	481b      	ldr	r0, [pc, #108]	; (8007c44 <main+0x338>)
 8007bd6:	f7ff fdc4 	bl	8007762 <memcmp>
 8007bda:	e035      	b.n	8007c48 <main+0x33c>
 8007bdc:	08010d21 	stmdaeq	r1, {r0, r5, r8, sl, fp}
 8007be0:	08010d18 	stmdaeq	r1, {r3, r4, r8, sl, fp}
 8007be4:	08010df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp}
 8007be8:	08010d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp}
 8007bec:	40011000 	andmi	r1, r1, r0
 8007bf0:	08010de8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, fp}
 8007bf4:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 8007bf8:	080121af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sp}
 8007bfc:	08010d65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp}
 8007c00:	08010d5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp}
 8007c04:	08010d78 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, fp}
 8007c08:	08010d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp}
 8007c0c:	08010f1a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sl, fp}
 8007c10:	08011020 	stmdaeq	r1, {r5, ip}
 8007c14:	20009488 	andcs	r9, r0, r8, lsl #9
 8007c18:	20000004 	andcs	r0, r0, r4
 8007c1c:	08010d88 	stmdaeq	r1, {r3, r7, r8, sl, fp}
 8007c20:	08010d92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp}
 8007c24:	08010d9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, fp}
 8007c28:	08010daf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sl, fp}
 8007c2c:	08010db6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, sl, fp}
 8007c30:	08010f02 	stmdaeq	r1, {r1, r8, r9, sl, fp}
 8007c34:	08010f31 	stmdaeq	r1, {r0, r4, r5, r8, r9, sl, fp}
 8007c38:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 8007c3c:	20000000 	andcs	r0, r0, r0
 8007c40:	20000705 	andcs	r0, r0, r5, lsl #14
 8007c44:	08010dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp}
 8007c48:	b9e8      	cbnz	r0, 8007c86 <main+0x37a>
 8007c4a:	4425      	add	r5, r4
 8007c4c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8007c50:	2b0a      	cmp	r3, #10
 8007c52:	d103      	bne.n	8007c5c <main+0x350>
 8007c54:	3c01      	subs	r4, #1
 8007c56:	b2a4      	uxth	r4, r4
 8007c58:	2c0a      	cmp	r4, #10
 8007c5a:	d04e      	beq.n	8007cfa <main+0x3ee>
 8007c5c:	2c0e      	cmp	r4, #14
 8007c5e:	d84a      	bhi.n	8007cf6 <main+0x3ea>
 8007c60:	2206      	movs	r2, #6
 8007c62:	f8d8 1000 	ldr.w	r1, [r8]
 8007c66:	4830      	ldr	r0, [pc, #192]	; (8007d28 <main+0x41c>)
 8007c68:	f7ff fd7b 	bl	8007762 <memcmp>
 8007c6c:	2800      	cmp	r0, #0
 8007c6e:	d144      	bne.n	8007cfa <main+0x3ee>
 8007c70:	2104      	movs	r1, #4
 8007c72:	482e      	ldr	r0, [pc, #184]	; (8007d2c <main+0x420>)
 8007c74:	f7ff fd86 	bl	8007784 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007c78:	285b      	cmp	r0, #91	; 0x5b
 8007c7a:	4601      	mov	r1, r0
 8007c7c:	d903      	bls.n	8007c86 <main+0x37a>
 8007c7e:	4b2c      	ldr	r3, [pc, #176]	; (8007d30 <main+0x424>)
 8007c80:	6818      	ldr	r0, [r3, #0]
 8007c82:	f001 fef7 	bl	8009a74 <Dmx::SetDmxBreakTime(unsigned int)>
 8007c86:	a808      	add	r0, sp, #32
 8007c88:	f004 ff60 	bl	800cb4c <MDNS::Run()>
 8007c8c:	e75e      	b.n	8007b4c <main+0x240>
 8007c8e:	2c0c      	cmp	r4, #12
 8007c90:	d916      	bls.n	8007cc0 <main+0x3b4>
 8007c92:	2c0e      	cmp	r4, #14
 8007c94:	d82c      	bhi.n	8007cf0 <main+0x3e4>
 8007c96:	2208      	movs	r2, #8
 8007c98:	f8d8 1000 	ldr.w	r1, [r8]
 8007c9c:	4825      	ldr	r0, [pc, #148]	; (8007d34 <main+0x428>)
 8007c9e:	f7ff fd60 	bl	8007762 <memcmp>
 8007ca2:	bb28      	cbnz	r0, 8007cf0 <main+0x3e4>
 8007ca4:	2102      	movs	r1, #2
 8007ca6:	4824      	ldr	r0, [pc, #144]	; (8007d38 <main+0x42c>)
 8007ca8:	f7ff fd6c 	bl	8007784 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007cac:	4601      	mov	r1, r0
 8007cae:	b110      	cbz	r0, 8007cb6 <main+0x3aa>
 8007cb0:	4b22      	ldr	r3, [pc, #136]	; (8007d3c <main+0x430>)
 8007cb2:	fbb3 f1f0 	udiv	r1, r3, r0
 8007cb6:	4b1e      	ldr	r3, [pc, #120]	; (8007d30 <main+0x424>)
 8007cb8:	6818      	ldr	r0, [r3, #0]
 8007cba:	f001 feab 	bl	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 8007cbe:	e7e2      	b.n	8007c86 <main+0x37a>
 8007cc0:	2c0a      	cmp	r4, #10
 8007cc2:	d0e0      	beq.n	8007c86 <main+0x37a>
 8007cc4:	2206      	movs	r2, #6
 8007cc6:	f8d8 1000 	ldr.w	r1, [r8]
 8007cca:	481d      	ldr	r0, [pc, #116]	; (8007d40 <main+0x434>)
 8007ccc:	f7ff fd49 	bl	8007762 <memcmp>
 8007cd0:	2800      	cmp	r0, #0
 8007cd2:	d1d8      	bne.n	8007c86 <main+0x37a>
 8007cd4:	2103      	movs	r1, #3
 8007cd6:	4815      	ldr	r0, [pc, #84]	; (8007d2c <main+0x420>)
 8007cd8:	f7ff fd54 	bl	8007784 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007cdc:	1e83      	subs	r3, r0, #2
 8007cde:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8007ce2:	d8d0      	bhi.n	8007c86 <main+0x37a>
 8007ce4:	4b12      	ldr	r3, [pc, #72]	; (8007d30 <main+0x424>)
 8007ce6:	b281      	uxth	r1, r0
 8007ce8:	6818      	ldr	r0, [r3, #0]
 8007cea:	f001 fed7 	bl	8009a9c <Dmx::SetDmxSlots(unsigned short)>
 8007cee:	e7ca      	b.n	8007c86 <main+0x37a>
 8007cf0:	2c0d      	cmp	r4, #13
 8007cf2:	d0e7      	beq.n	8007cc4 <main+0x3b8>
 8007cf4:	e7c7      	b.n	8007c86 <main+0x37a>
 8007cf6:	2c10      	cmp	r4, #16
 8007cf8:	d8c5      	bhi.n	8007c86 <main+0x37a>
 8007cfa:	2204      	movs	r2, #4
 8007cfc:	f8d8 1000 	ldr.w	r1, [r8]
 8007d00:	4810      	ldr	r0, [pc, #64]	; (8007d44 <main+0x438>)
 8007d02:	f7ff fd2e 	bl	8007762 <memcmp>
 8007d06:	2800      	cmp	r0, #0
 8007d08:	d1c1      	bne.n	8007c8e <main+0x382>
 8007d0a:	2107      	movs	r1, #7
 8007d0c:	480e      	ldr	r0, [pc, #56]	; (8007d48 <main+0x43c>)
 8007d0e:	f7ff fd39 	bl	8007784 <dmxconfigudp::atoi(char const*, unsigned char)>
 8007d12:	4b0e      	ldr	r3, [pc, #56]	; (8007d4c <main+0x440>)
 8007d14:	f1a0 020c 	sub.w	r2, r0, #12
 8007d18:	429a      	cmp	r2, r3
 8007d1a:	4601      	mov	r1, r0
 8007d1c:	d8b3      	bhi.n	8007c86 <main+0x37a>
 8007d1e:	4b04      	ldr	r3, [pc, #16]	; (8007d30 <main+0x424>)
 8007d20:	6818      	ldr	r0, [r3, #0]
 8007d22:	f001 feb1 	bl	8009a88 <Dmx::SetDmxMabTime(unsigned int)>
 8007d26:	e7ae      	b.n	8007c86 <main+0x37a>
 8007d28:	08010dc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, sl, fp}
 8007d2c:	2000070f 	andcs	r0, r0, pc, lsl #14
 8007d30:	20000b44 	andcs	r0, r0, r4, asr #22
 8007d34:	08010dcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sl, fp}
 8007d38:	20000711 	andcs	r0, r0, r1, lsl r7
 8007d3c:	000f4240 	andeq	r4, pc, r0, asr #4
 8007d40:	08010dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp}
 8007d44:	08010dca 	stmdaeq	r1, {r1, r3, r6, r7, r8, sl, fp}
 8007d48:	2000070d 	andcs	r0, r0, sp, lsl #14
 8007d4c:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08007d50 <NetworkDisplay::ShowEmacStart()>:
 8007d50:	4770      	bx	lr

08007d52 <NetworkDisplay::ShowIp()>:
 8007d52:	4770      	bx	lr

08007d54 <NetworkDisplay::ShowShutdown()>:
 8007d54:	4770      	bx	lr

08007d56 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8007d56:	4770      	bx	lr

08007d58 <_xputch>:
 8007d58:	4603      	mov	r3, r0
 8007d5a:	b410      	push	{r4}
 8007d5c:	4c08      	ldr	r4, [pc, #32]	; (8007d80 <_xputch+0x28>)
 8007d5e:	68da      	ldr	r2, [r3, #12]
 8007d60:	4608      	mov	r0, r1
 8007d62:	6821      	ldr	r1, [r4, #0]
 8007d64:	3201      	adds	r2, #1
 8007d66:	60da      	str	r2, [r3, #12]
 8007d68:	b139      	cbz	r1, 8007d7a <_xputch+0x22>
 8007d6a:	691b      	ldr	r3, [r3, #16]
 8007d6c:	429a      	cmp	r2, r3
 8007d6e:	da02      	bge.n	8007d76 <_xputch+0x1e>
 8007d70:	1c4b      	adds	r3, r1, #1
 8007d72:	6023      	str	r3, [r4, #0]
 8007d74:	7008      	strb	r0, [r1, #0]
 8007d76:	bc10      	pop	{r4}
 8007d78:	4770      	bx	lr
 8007d7a:	bc10      	pop	{r4}
 8007d7c:	f006 be0e 	b.w	800e99c <console_putc>
 8007d80:	200000f8 	strdcs	r0, [r0], -r8

08007d84 <_format_int>:
 8007d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d88:	461f      	mov	r7, r3
 8007d8a:	b091      	sub	sp, #68	; 0x44
 8007d8c:	ea52 0307 	orrs.w	r3, r2, r7
 8007d90:	4680      	mov	r8, r0
 8007d92:	4616      	mov	r6, r2
 8007d94:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8007d98:	d138      	bne.n	8007e0c <_format_int+0x88>
 8007d9a:	2330      	movs	r3, #48	; 0x30
 8007d9c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8007da0:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8007da4:	f8d8 3000 	ldr.w	r3, [r8]
 8007da8:	07d8      	lsls	r0, r3, #31
 8007daa:	d508      	bpl.n	8007dbe <_format_int+0x3a>
 8007dac:	466a      	mov	r2, sp
 8007dae:	2030      	movs	r0, #48	; 0x30
 8007db0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8007db4:	1b2e      	subs	r6, r5, r4
 8007db6:	428e      	cmp	r6, r1
 8007db8:	da01      	bge.n	8007dbe <_format_int+0x3a>
 8007dba:	4294      	cmp	r4, r2
 8007dbc:	d843      	bhi.n	8007e46 <_format_int+0xc2>
 8007dbe:	0699      	lsls	r1, r3, #26
 8007dc0:	d508      	bpl.n	8007dd4 <_format_int+0x50>
 8007dc2:	466a      	mov	r2, sp
 8007dc4:	2030      	movs	r0, #48	; 0x30
 8007dc6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8007dca:	1b2e      	subs	r6, r5, r4
 8007dcc:	428e      	cmp	r6, r1
 8007dce:	da01      	bge.n	8007dd4 <_format_int+0x50>
 8007dd0:	4294      	cmp	r4, r2
 8007dd2:	d83b      	bhi.n	8007e4c <_format_int+0xc8>
 8007dd4:	071a      	lsls	r2, r3, #28
 8007dd6:	bf44      	itt	mi
 8007dd8:	222d      	movmi	r2, #45	; 0x2d
 8007dda:	f804 2901 	strbmi.w	r2, [r4], #-1
 8007dde:	065b      	lsls	r3, r3, #25
 8007de0:	d408      	bmi.n	8007df4 <_format_int+0x70>
 8007de2:	466b      	mov	r3, sp
 8007de4:	2120      	movs	r1, #32
 8007de6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8007dea:	1b28      	subs	r0, r5, r4
 8007dec:	4290      	cmp	r0, r2
 8007dee:	da01      	bge.n	8007df4 <_format_int+0x70>
 8007df0:	429c      	cmp	r4, r3
 8007df2:	d82e      	bhi.n	8007e52 <_format_int+0xce>
 8007df4:	1b2d      	subs	r5, r5, r4
 8007df6:	3401      	adds	r4, #1
 8007df8:	ab10      	add	r3, sp, #64	; 0x40
 8007dfa:	429c      	cmp	r4, r3
 8007dfc:	d32c      	bcc.n	8007e58 <_format_int+0xd4>
 8007dfe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8007e02:	42ab      	cmp	r3, r5
 8007e04:	dc2e      	bgt.n	8007e64 <_format_int+0xe0>
 8007e06:	b011      	add	sp, #68	; 0x44
 8007e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e0c:	462c      	mov	r4, r5
 8007e0e:	46eb      	mov	fp, sp
 8007e10:	4630      	mov	r0, r6
 8007e12:	4639      	mov	r1, r7
 8007e14:	220a      	movs	r2, #10
 8007e16:	2300      	movs	r3, #0
 8007e18:	f7ff f99a 	bl	8007150 <__aeabi_uldivmod>
 8007e1c:	46b2      	mov	sl, r6
 8007e1e:	3230      	adds	r2, #48	; 0x30
 8007e20:	46b9      	mov	r9, r7
 8007e22:	2300      	movs	r3, #0
 8007e24:	4630      	mov	r0, r6
 8007e26:	4639      	mov	r1, r7
 8007e28:	f804 2901 	strb.w	r2, [r4], #-1
 8007e2c:	220a      	movs	r2, #10
 8007e2e:	f7ff f98f 	bl	8007150 <__aeabi_uldivmod>
 8007e32:	f1ba 0f0a 	cmp.w	sl, #10
 8007e36:	f179 0300 	sbcs.w	r3, r9, #0
 8007e3a:	4606      	mov	r6, r0
 8007e3c:	460f      	mov	r7, r1
 8007e3e:	d3b1      	bcc.n	8007da4 <_format_int+0x20>
 8007e40:	455c      	cmp	r4, fp
 8007e42:	d1e5      	bne.n	8007e10 <_format_int+0x8c>
 8007e44:	e7ae      	b.n	8007da4 <_format_int+0x20>
 8007e46:	f804 0901 	strb.w	r0, [r4], #-1
 8007e4a:	e7b3      	b.n	8007db4 <_format_int+0x30>
 8007e4c:	f804 0901 	strb.w	r0, [r4], #-1
 8007e50:	e7bb      	b.n	8007dca <_format_int+0x46>
 8007e52:	f804 1901 	strb.w	r1, [r4], #-1
 8007e56:	e7c8      	b.n	8007dea <_format_int+0x66>
 8007e58:	4640      	mov	r0, r8
 8007e5a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007e5e:	f7ff ff7b 	bl	8007d58 <_xputch>
 8007e62:	e7c9      	b.n	8007df8 <_format_int+0x74>
 8007e64:	2120      	movs	r1, #32
 8007e66:	4640      	mov	r0, r8
 8007e68:	f7ff ff76 	bl	8007d58 <_xputch>
 8007e6c:	3501      	adds	r5, #1
 8007e6e:	e7c6      	b.n	8007dfe <_format_int+0x7a>

08007e70 <_format_hex>:
 8007e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e72:	b091      	sub	sp, #68	; 0x44
 8007e74:	4606      	mov	r6, r0
 8007e76:	6804      	ldr	r4, [r0, #0]
 8007e78:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8007e7c:	bb61      	cbnz	r1, 8007ed8 <_format_hex+0x68>
 8007e7e:	2330      	movs	r3, #48	; 0x30
 8007e80:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8007e84:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8007e88:	07e5      	lsls	r5, r4, #31
 8007e8a:	d507      	bpl.n	8007e9c <_format_hex+0x2c>
 8007e8c:	4669      	mov	r1, sp
 8007e8e:	2530      	movs	r5, #48	; 0x30
 8007e90:	6870      	ldr	r0, [r6, #4]
 8007e92:	1ad7      	subs	r7, r2, r3
 8007e94:	4287      	cmp	r7, r0
 8007e96:	da01      	bge.n	8007e9c <_format_hex+0x2c>
 8007e98:	428b      	cmp	r3, r1
 8007e9a:	d831      	bhi.n	8007f00 <_format_hex+0x90>
 8007e9c:	06a0      	lsls	r0, r4, #26
 8007e9e:	d507      	bpl.n	8007eb0 <_format_hex+0x40>
 8007ea0:	4669      	mov	r1, sp
 8007ea2:	2530      	movs	r5, #48	; 0x30
 8007ea4:	68b0      	ldr	r0, [r6, #8]
 8007ea6:	1ad7      	subs	r7, r2, r3
 8007ea8:	4287      	cmp	r7, r0
 8007eaa:	da01      	bge.n	8007eb0 <_format_hex+0x40>
 8007eac:	428b      	cmp	r3, r1
 8007eae:	d82a      	bhi.n	8007f06 <_format_hex+0x96>
 8007eb0:	0661      	lsls	r1, r4, #25
 8007eb2:	d407      	bmi.n	8007ec4 <_format_hex+0x54>
 8007eb4:	4669      	mov	r1, sp
 8007eb6:	2420      	movs	r4, #32
 8007eb8:	68b0      	ldr	r0, [r6, #8]
 8007eba:	1ad5      	subs	r5, r2, r3
 8007ebc:	4285      	cmp	r5, r0
 8007ebe:	da01      	bge.n	8007ec4 <_format_hex+0x54>
 8007ec0:	428b      	cmp	r3, r1
 8007ec2:	d823      	bhi.n	8007f0c <_format_hex+0x9c>
 8007ec4:	1ad5      	subs	r5, r2, r3
 8007ec6:	1c5c      	adds	r4, r3, #1
 8007ec8:	ab10      	add	r3, sp, #64	; 0x40
 8007eca:	429c      	cmp	r4, r3
 8007ecc:	d321      	bcc.n	8007f12 <_format_hex+0xa2>
 8007ece:	68b3      	ldr	r3, [r6, #8]
 8007ed0:	429d      	cmp	r5, r3
 8007ed2:	db24      	blt.n	8007f1e <_format_hex+0xae>
 8007ed4:	b011      	add	sp, #68	; 0x44
 8007ed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ed8:	f014 0f02 	tst.w	r4, #2
 8007edc:	bf0c      	ite	eq
 8007ede:	2757      	moveq	r7, #87	; 0x57
 8007ee0:	2737      	movne	r7, #55	; 0x37
 8007ee2:	4613      	mov	r3, r2
 8007ee4:	466d      	mov	r5, sp
 8007ee6:	f001 000f 	and.w	r0, r1, #15
 8007eea:	2809      	cmp	r0, #9
 8007eec:	bf94      	ite	ls
 8007eee:	3030      	addls	r0, #48	; 0x30
 8007ef0:	19c0      	addhi	r0, r0, r7
 8007ef2:	0909      	lsrs	r1, r1, #4
 8007ef4:	f803 0901 	strb.w	r0, [r3], #-1
 8007ef8:	d0c6      	beq.n	8007e88 <_format_hex+0x18>
 8007efa:	42ab      	cmp	r3, r5
 8007efc:	d1f3      	bne.n	8007ee6 <_format_hex+0x76>
 8007efe:	e7c3      	b.n	8007e88 <_format_hex+0x18>
 8007f00:	f803 5901 	strb.w	r5, [r3], #-1
 8007f04:	e7c5      	b.n	8007e92 <_format_hex+0x22>
 8007f06:	f803 5901 	strb.w	r5, [r3], #-1
 8007f0a:	e7cc      	b.n	8007ea6 <_format_hex+0x36>
 8007f0c:	f803 4901 	strb.w	r4, [r3], #-1
 8007f10:	e7d3      	b.n	8007eba <_format_hex+0x4a>
 8007f12:	4630      	mov	r0, r6
 8007f14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007f18:	f7ff ff1e 	bl	8007d58 <_xputch>
 8007f1c:	e7d4      	b.n	8007ec8 <_format_hex+0x58>
 8007f1e:	2120      	movs	r1, #32
 8007f20:	4630      	mov	r0, r6
 8007f22:	f7ff ff19 	bl	8007d58 <_xputch>
 8007f26:	3501      	adds	r5, #1
 8007f28:	e7d1      	b.n	8007ece <_format_hex+0x5e>
	...

08007f2c <_vprintf>:
 8007f2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f30:	2700      	movs	r7, #0
 8007f32:	460b      	mov	r3, r1
 8007f34:	4614      	mov	r4, r2
 8007f36:	f04f 080a 	mov.w	r8, #10
 8007f3a:	b086      	sub	sp, #24
 8007f3c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8007f40:	7819      	ldrb	r1, [r3, #0]
 8007f42:	b919      	cbnz	r1, 8007f4c <_vprintf+0x20>
 8007f44:	9804      	ldr	r0, [sp, #16]
 8007f46:	b006      	add	sp, #24
 8007f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f4c:	2925      	cmp	r1, #37	; 0x25
 8007f4e:	f103 0501 	add.w	r5, r3, #1
 8007f52:	d004      	beq.n	8007f5e <_vprintf+0x32>
 8007f54:	a801      	add	r0, sp, #4
 8007f56:	f7ff feff 	bl	8007d58 <_xputch>
 8007f5a:	462b      	mov	r3, r5
 8007f5c:	e7f0      	b.n	8007f40 <_vprintf+0x14>
 8007f5e:	785a      	ldrb	r2, [r3, #1]
 8007f60:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8007f64:	2a30      	cmp	r2, #48	; 0x30
 8007f66:	9703      	str	r7, [sp, #12]
 8007f68:	d126      	bne.n	8007fb8 <_vprintf+0x8c>
 8007f6a:	2220      	movs	r2, #32
 8007f6c:	9201      	str	r2, [sp, #4]
 8007f6e:	1c9d      	adds	r5, r3, #2
 8007f70:	2200      	movs	r2, #0
 8007f72:	462e      	mov	r6, r5
 8007f74:	4613      	mov	r3, r2
 8007f76:	7831      	ldrb	r1, [r6, #0]
 8007f78:	4635      	mov	r5, r6
 8007f7a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8007f7e:	2809      	cmp	r0, #9
 8007f80:	f106 0601 	add.w	r6, r6, #1
 8007f84:	d91c      	bls.n	8007fc0 <_vprintf+0x94>
 8007f86:	b12a      	cbz	r2, 8007f94 <_vprintf+0x68>
 8007f88:	9303      	str	r3, [sp, #12]
 8007f8a:	b11b      	cbz	r3, 8007f94 <_vprintf+0x68>
 8007f8c:	9b01      	ldr	r3, [sp, #4]
 8007f8e:	f043 0310 	orr.w	r3, r3, #16
 8007f92:	9301      	str	r3, [sp, #4]
 8007f94:	292e      	cmp	r1, #46	; 0x2e
 8007f96:	d122      	bne.n	8007fde <_vprintf+0xb2>
 8007f98:	786b      	ldrb	r3, [r5, #1]
 8007f9a:	2b2a      	cmp	r3, #42	; 0x2a
 8007f9c:	d014      	beq.n	8007fc8 <_vprintf+0x9c>
 8007f9e:	2100      	movs	r1, #0
 8007fa0:	460a      	mov	r2, r1
 8007fa2:	1c68      	adds	r0, r5, #1
 8007fa4:	7803      	ldrb	r3, [r0, #0]
 8007fa6:	4605      	mov	r5, r0
 8007fa8:	3b30      	subs	r3, #48	; 0x30
 8007faa:	2b09      	cmp	r3, #9
 8007fac:	f100 0001 	add.w	r0, r0, #1
 8007fb0:	d92f      	bls.n	8008012 <_vprintf+0xe6>
 8007fb2:	b181      	cbz	r1, 8007fd6 <_vprintf+0xaa>
 8007fb4:	9202      	str	r2, [sp, #8]
 8007fb6:	e00e      	b.n	8007fd6 <_vprintf+0xaa>
 8007fb8:	2a2d      	cmp	r2, #45	; 0x2d
 8007fba:	d1d9      	bne.n	8007f70 <_vprintf+0x44>
 8007fbc:	2240      	movs	r2, #64	; 0x40
 8007fbe:	e7d5      	b.n	8007f6c <_vprintf+0x40>
 8007fc0:	2201      	movs	r2, #1
 8007fc2:	fb08 0303 	mla	r3, r8, r3, r0
 8007fc6:	e7d6      	b.n	8007f76 <_vprintf+0x4a>
 8007fc8:	f854 3b04 	ldr.w	r3, [r4], #4
 8007fcc:	3502      	adds	r5, #2
 8007fce:	2b00      	cmp	r3, #0
 8007fd0:	bfb8      	it	lt
 8007fd2:	425b      	neglt	r3, r3
 8007fd4:	9302      	str	r3, [sp, #8]
 8007fd6:	9b01      	ldr	r3, [sp, #4]
 8007fd8:	f043 0301 	orr.w	r3, r3, #1
 8007fdc:	9301      	str	r3, [sp, #4]
 8007fde:	782b      	ldrb	r3, [r5, #0]
 8007fe0:	2b6c      	cmp	r3, #108	; 0x6c
 8007fe2:	bf04      	itt	eq
 8007fe4:	9b01      	ldreq	r3, [sp, #4]
 8007fe6:	3501      	addeq	r5, #1
 8007fe8:	7829      	ldrb	r1, [r5, #0]
 8007fea:	bf04      	itt	eq
 8007fec:	f043 0304 	orreq.w	r3, r3, #4
 8007ff0:	9301      	streq	r3, [sp, #4]
 8007ff2:	2978      	cmp	r1, #120	; 0x78
 8007ff4:	d8ae      	bhi.n	8007f54 <_vprintf+0x28>
 8007ff6:	296f      	cmp	r1, #111	; 0x6f
 8007ff8:	d80f      	bhi.n	800801a <_vprintf+0xee>
 8007ffa:	2963      	cmp	r1, #99	; 0x63
 8007ffc:	d045      	beq.n	800808a <_vprintf+0x15e>
 8007ffe:	d825      	bhi.n	800804c <_vprintf+0x120>
 8008000:	2958      	cmp	r1, #88	; 0x58
 8008002:	d1a7      	bne.n	8007f54 <_vprintf+0x28>
 8008004:	9b01      	ldr	r3, [sp, #4]
 8008006:	f043 0302 	orr.w	r3, r3, #2
 800800a:	9301      	str	r3, [sp, #4]
 800800c:	f854 1b04 	ldr.w	r1, [r4], #4
 8008010:	e051      	b.n	80080b6 <_vprintf+0x18a>
 8008012:	2101      	movs	r1, #1
 8008014:	fb08 3202 	mla	r2, r8, r2, r3
 8008018:	e7c4      	b.n	8007fa4 <_vprintf+0x78>
 800801a:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 800801e:	2b08      	cmp	r3, #8
 8008020:	d898      	bhi.n	8007f54 <_vprintf+0x28>
 8008022:	a201      	add	r2, pc, #4	; (adr r2, 8008028 <_vprintf+0xfc>)
 8008024:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008028:	08008099 	stmdaeq	r0, {r0, r3, r4, r7, pc}
 800802c:	08007f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 8008030:	08007f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 8008034:	080080bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, pc}
 8008038:	08007f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 800803c:	08008131 	stmdaeq	r0, {r0, r4, r5, r8, pc}
 8008040:	08007f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 8008044:	08007f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 8008048:	0800800d 	stmdaeq	r0, {r0, r2, r3, pc}
 800804c:	2964      	cmp	r1, #100	; 0x64
 800804e:	d002      	beq.n	8008056 <_vprintf+0x12a>
 8008050:	2969      	cmp	r1, #105	; 0x69
 8008052:	f47f af7f 	bne.w	8007f54 <_vprintf+0x28>
 8008056:	9901      	ldr	r1, [sp, #4]
 8008058:	074e      	lsls	r6, r1, #29
 800805a:	bf43      	ittte	mi
 800805c:	3407      	addmi	r4, #7
 800805e:	f024 0307 	bicmi.w	r3, r4, #7
 8008062:	461c      	movmi	r4, r3
 8008064:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8008068:	bf4a      	itet	mi
 800806a:	685b      	ldrmi	r3, [r3, #4]
 800806c:	17d3      	asrpl	r3, r2, #31
 800806e:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8008072:	2b00      	cmp	r3, #0
 8008074:	da05      	bge.n	8008082 <_vprintf+0x156>
 8008076:	f041 0108 	orr.w	r1, r1, #8
 800807a:	4252      	negs	r2, r2
 800807c:	9101      	str	r1, [sp, #4]
 800807e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008082:	a801      	add	r0, sp, #4
 8008084:	f7ff fe7e 	bl	8007d84 <_format_int>
 8008088:	e004      	b.n	8008094 <_vprintf+0x168>
 800808a:	f854 1b04 	ldr.w	r1, [r4], #4
 800808e:	a801      	add	r0, sp, #4
 8008090:	f7ff fe62 	bl	8007d58 <_xputch>
 8008094:	3501      	adds	r5, #1
 8008096:	e760      	b.n	8007f5a <_vprintf+0x2e>
 8008098:	2308      	movs	r3, #8
 800809a:	9303      	str	r3, [sp, #12]
 800809c:	2320      	movs	r3, #32
 800809e:	2130      	movs	r1, #48	; 0x30
 80080a0:	f854 6b04 	ldr.w	r6, [r4], #4
 80080a4:	a801      	add	r0, sp, #4
 80080a6:	9301      	str	r3, [sp, #4]
 80080a8:	f7ff fe56 	bl	8007d58 <_xputch>
 80080ac:	2178      	movs	r1, #120	; 0x78
 80080ae:	a801      	add	r0, sp, #4
 80080b0:	f7ff fe52 	bl	8007d58 <_xputch>
 80080b4:	4631      	mov	r1, r6
 80080b6:	a801      	add	r0, sp, #4
 80080b8:	f7ff feda 	bl	8007e70 <_format_hex>
 80080bc:	e7ea      	b.n	8008094 <_vprintf+0x168>
 80080be:	2600      	movs	r6, #0
 80080c0:	f854 9b04 	ldr.w	r9, [r4], #4
 80080c4:	f819 3006 	ldrb.w	r3, [r9, r6]
 80080c8:	b993      	cbnz	r3, 80080f0 <_vprintf+0x1c4>
 80080ca:	9b01      	ldr	r3, [sp, #4]
 80080cc:	07d9      	lsls	r1, r3, #31
 80080ce:	d503      	bpl.n	80080d8 <_vprintf+0x1ac>
 80080d0:	9b02      	ldr	r3, [sp, #8]
 80080d2:	429e      	cmp	r6, r3
 80080d4:	bfa8      	it	ge
 80080d6:	461e      	movge	r6, r3
 80080d8:	9b01      	ldr	r3, [sp, #4]
 80080da:	f106 0a01 	add.w	sl, r6, #1
 80080de:	065a      	lsls	r2, r3, #25
 80080e0:	d403      	bmi.n	80080ea <_vprintf+0x1be>
 80080e2:	9b03      	ldr	r3, [sp, #12]
 80080e4:	429e      	cmp	r6, r3
 80080e6:	db05      	blt.n	80080f4 <_vprintf+0x1c8>
 80080e8:	4656      	mov	r6, sl
 80080ea:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80080ee:	e00d      	b.n	800810c <_vprintf+0x1e0>
 80080f0:	3601      	adds	r6, #1
 80080f2:	e7e7      	b.n	80080c4 <_vprintf+0x198>
 80080f4:	2120      	movs	r1, #32
 80080f6:	a801      	add	r0, sp, #4
 80080f8:	f7ff fe2e 	bl	8007d58 <_xputch>
 80080fc:	4656      	mov	r6, sl
 80080fe:	e7eb      	b.n	80080d8 <_vprintf+0x1ac>
 8008100:	a801      	add	r0, sp, #4
 8008102:	f7ff fe29 	bl	8007d58 <_xputch>
 8008106:	9b02      	ldr	r3, [sp, #8]
 8008108:	3b01      	subs	r3, #1
 800810a:	9302      	str	r3, [sp, #8]
 800810c:	9b01      	ldr	r3, [sp, #4]
 800810e:	07db      	lsls	r3, r3, #31
 8008110:	d501      	bpl.n	8008116 <_vprintf+0x1ea>
 8008112:	9b02      	ldr	r3, [sp, #8]
 8008114:	b11b      	cbz	r3, 800811e <_vprintf+0x1f2>
 8008116:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 800811a:	2900      	cmp	r1, #0
 800811c:	d1f0      	bne.n	8008100 <_vprintf+0x1d4>
 800811e:	9b03      	ldr	r3, [sp, #12]
 8008120:	42b3      	cmp	r3, r6
 8008122:	ddb7      	ble.n	8008094 <_vprintf+0x168>
 8008124:	2120      	movs	r1, #32
 8008126:	a801      	add	r0, sp, #4
 8008128:	f7ff fe16 	bl	8007d58 <_xputch>
 800812c:	3601      	adds	r6, #1
 800812e:	e7f6      	b.n	800811e <_vprintf+0x1f2>
 8008130:	9b01      	ldr	r3, [sp, #4]
 8008132:	f013 0304 	ands.w	r3, r3, #4
 8008136:	bf1d      	ittte	ne
 8008138:	3407      	addne	r4, #7
 800813a:	f024 0307 	bicne.w	r3, r4, #7
 800813e:	461c      	movne	r4, r3
 8008140:	f854 2b04 	ldreq.w	r2, [r4], #4
 8008144:	bf1c      	itt	ne
 8008146:	f854 2b08 	ldrne.w	r2, [r4], #8
 800814a:	685b      	ldrne	r3, [r3, #4]
 800814c:	e799      	b.n	8008082 <_vprintf+0x156>
 800814e:	bf00      	nop

08008150 <printf>:
 8008150:	b40f      	push	{r0, r1, r2, r3}
 8008152:	b507      	push	{r0, r1, r2, lr}
 8008154:	aa04      	add	r2, sp, #16
 8008156:	f852 1b04 	ldr.w	r1, [r2], #4
 800815a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800815e:	9201      	str	r2, [sp, #4]
 8008160:	f7ff fee4 	bl	8007f2c <_vprintf>
 8008164:	b003      	add	sp, #12
 8008166:	f85d eb04 	ldr.w	lr, [sp], #4
 800816a:	b004      	add	sp, #16
 800816c:	4770      	bx	lr
	...

08008170 <snprintf>:
 8008170:	b40c      	push	{r2, r3}
 8008172:	460b      	mov	r3, r1
 8008174:	b513      	push	{r0, r1, r4, lr}
 8008176:	4c09      	ldr	r4, [pc, #36]	; (800819c <snprintf+0x2c>)
 8008178:	aa04      	add	r2, sp, #16
 800817a:	f852 1b04 	ldr.w	r1, [r2], #4
 800817e:	6020      	str	r0, [r4, #0]
 8008180:	4618      	mov	r0, r3
 8008182:	9201      	str	r2, [sp, #4]
 8008184:	f7ff fed2 	bl	8007f2c <_vprintf>
 8008188:	2300      	movs	r3, #0
 800818a:	6822      	ldr	r2, [r4, #0]
 800818c:	6023      	str	r3, [r4, #0]
 800818e:	7013      	strb	r3, [r2, #0]
 8008190:	b002      	add	sp, #8
 8008192:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008196:	b002      	add	sp, #8
 8008198:	4770      	bx	lr
 800819a:	bf00      	nop
 800819c:	200000f8 	strdcs	r0, [r0], -r8

080081a0 <vsnprintf>:
 80081a0:	b538      	push	{r3, r4, r5, lr}
 80081a2:	4605      	mov	r5, r0
 80081a4:	4c05      	ldr	r4, [pc, #20]	; (80081bc <vsnprintf+0x1c>)
 80081a6:	4608      	mov	r0, r1
 80081a8:	4611      	mov	r1, r2
 80081aa:	461a      	mov	r2, r3
 80081ac:	6025      	str	r5, [r4, #0]
 80081ae:	f7ff febd 	bl	8007f2c <_vprintf>
 80081b2:	2300      	movs	r3, #0
 80081b4:	6822      	ldr	r2, [r4, #0]
 80081b6:	6023      	str	r3, [r4, #0]
 80081b8:	7013      	strb	r3, [r2, #0]
 80081ba:	bd38      	pop	{r3, r4, r5, pc}
 80081bc:	200000f8 	strdcs	r0, [r0], -r8

080081c0 <strlen>:
 80081c0:	4603      	mov	r3, r0
 80081c2:	461a      	mov	r2, r3
 80081c4:	7811      	ldrb	r1, [r2, #0]
 80081c6:	3301      	adds	r3, #1
 80081c8:	2900      	cmp	r1, #0
 80081ca:	d1fa      	bne.n	80081c2 <strlen+0x2>
 80081cc:	1a10      	subs	r0, r2, r0
 80081ce:	4770      	bx	lr

080081d0 <strncpy.isra.0>:
 80081d0:	3901      	subs	r1, #1
 80081d2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80081d6:	b92b      	cbnz	r3, 80081e4 <strncpy.isra.0+0x14>
 80081d8:	4402      	add	r2, r0
 80081da:	4290      	cmp	r0, r2
 80081dc:	d007      	beq.n	80081ee <strncpy.isra.0+0x1e>
 80081de:	f800 3b01 	strb.w	r3, [r0], #1
 80081e2:	e7fa      	b.n	80081da <strncpy.isra.0+0xa>
 80081e4:	3a01      	subs	r2, #1
 80081e6:	f800 3b01 	strb.w	r3, [r0], #1
 80081ea:	d1f2      	bne.n	80081d2 <strncpy.isra.0+0x2>
 80081ec:	4770      	bx	lr
 80081ee:	4770      	bx	lr

080081f0 <strcpy.isra.0>:
 80081f0:	3801      	subs	r0, #1
 80081f2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80081f6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d1f9      	bne.n	80081f2 <strcpy.isra.0+0x2>
 80081fe:	4770      	bx	lr

08008200 <OscServer::OscServer()>:
 8008200:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008204:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008206:	4a24      	ldr	r2, [pc, #144]	; (8008298 <OscServer::OscServer()+0x98>)
 8008208:	4604      	mov	r4, r0
 800820a:	e9c0 2300 	strd	r2, r3, [r0]
 800820e:	2300      	movs	r3, #0
 8008210:	2581      	movs	r5, #129	; 0x81
 8008212:	4a22      	ldr	r2, [pc, #136]	; (800829c <OscServer::OscServer()+0x9c>)
 8008214:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 8008218:	6010      	str	r0, [r2, #0]
 800821a:	4a21      	ldr	r2, [pc, #132]	; (80082a0 <OscServer::OscServer()+0xa0>)
 800821c:	6083      	str	r3, [r0, #8]
 800821e:	7303      	strb	r3, [r0, #12]
 8008220:	3d01      	subs	r5, #1
 8008222:	d002      	beq.n	800822a <OscServer::OscServer()+0x2a>
 8008224:	f802 3b01 	strb.w	r3, [r2], #1
 8008228:	e7fa      	b.n	8008220 <OscServer::OscServer()+0x20>
 800822a:	2281      	movs	r2, #129	; 0x81
 800822c:	491d      	ldr	r1, [pc, #116]	; (80082a4 <OscServer::OscServer()+0xa4>)
 800822e:	481c      	ldr	r0, [pc, #112]	; (80082a0 <OscServer::OscServer()+0xa0>)
 8008230:	f7ff ffde 	bl	80081f0 <strcpy.isra.0>
 8008234:	4b1c      	ldr	r3, [pc, #112]	; (80082a8 <OscServer::OscServer()+0xa8>)
 8008236:	3a01      	subs	r2, #1
 8008238:	d002      	beq.n	8008240 <OscServer::OscServer()+0x40>
 800823a:	f803 5b01 	strb.w	r5, [r3], #1
 800823e:	e7fa      	b.n	8008236 <OscServer::OscServer()+0x36>
 8008240:	491a      	ldr	r1, [pc, #104]	; (80082ac <OscServer::OscServer()+0xac>)
 8008242:	4819      	ldr	r0, [pc, #100]	; (80082a8 <OscServer::OscServer()+0xa8>)
 8008244:	f7ff ffd4 	bl	80081f0 <strcpy.isra.0>
 8008248:	2380      	movs	r3, #128	; 0x80
 800824a:	4919      	ldr	r1, [pc, #100]	; (80082b0 <OscServer::OscServer()+0xb0>)
 800824c:	3b01      	subs	r3, #1
 800824e:	d302      	bcc.n	8008256 <OscServer::OscServer()+0x56>
 8008250:	f801 2b01 	strb.w	r2, [r1], #1
 8008254:	e7fa      	b.n	800824c <OscServer::OscServer()+0x4c>
 8008256:	4917      	ldr	r1, [pc, #92]	; (80082b4 <OscServer::OscServer()+0xb4>)
 8008258:	4815      	ldr	r0, [pc, #84]	; (80082b0 <OscServer::OscServer()+0xb0>)
 800825a:	f7ff ffc9 	bl	80081f0 <strcpy.isra.0>
 800825e:	2380      	movs	r3, #128	; 0x80
 8008260:	2100      	movs	r1, #0
 8008262:	4a15      	ldr	r2, [pc, #84]	; (80082b8 <OscServer::OscServer()+0xb8>)
 8008264:	3b01      	subs	r3, #1
 8008266:	d302      	bcc.n	800826e <OscServer::OscServer()+0x6e>
 8008268:	f802 1b01 	strb.w	r1, [r2], #1
 800826c:	e7fa      	b.n	8008264 <OscServer::OscServer()+0x64>
 800826e:	4913      	ldr	r1, [pc, #76]	; (80082bc <OscServer::OscServer()+0xbc>)
 8008270:	4811      	ldr	r0, [pc, #68]	; (80082b8 <OscServer::OscServer()+0xb8>)
 8008272:	f7ff ffbd 	bl	80081f0 <strcpy.isra.0>
 8008276:	4b12      	ldr	r3, [pc, #72]	; (80082c0 <OscServer::OscServer()+0xc0>)
 8008278:	211f      	movs	r1, #31
 800827a:	9300      	str	r3, [sp, #0]
 800827c:	4a11      	ldr	r2, [pc, #68]	; (80082c4 <OscServer::OscServer()+0xc4>)
 800827e:	4b12      	ldr	r3, [pc, #72]	; (80082c8 <OscServer::OscServer()+0xc8>)
 8008280:	f104 000d 	add.w	r0, r4, #13
 8008284:	f7ff ff74 	bl	8008170 <snprintf>
 8008288:	4620      	mov	r0, r4
 800828a:	4b10      	ldr	r3, [pc, #64]	; (80082cc <OscServer::OscServer()+0xcc>)
 800828c:	63a3      	str	r3, [r4, #56]	; 0x38
 800828e:	4b10      	ldr	r3, [pc, #64]	; (80082d0 <OscServer::OscServer()+0xd0>)
 8008290:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008292:	b003      	add	sp, #12
 8008294:	bd30      	pop	{r4, r5, pc}
 8008296:	bf00      	nop
 8008298:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 800829c:	20000500 	andcs	r0, r0, r0, lsl #10
 80082a0:	20000280 	andcs	r0, r0, r0, lsl #5
 80082a4:	08010dfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp}
 80082a8:	20000180 	andcs	r0, r0, r0, lsl #3
 80082ac:	08010e03 	stmdaeq	r1, {r0, r1, r9, sl, fp}
 80082b0:	200000fc 	strdcs	r0, [r0], -ip
 80082b4:	08010e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp}
 80082b8:	20000200 	andcs	r0, r0, r0, lsl #4
 80082bc:	08010e0e 	stmdaeq	r1, {r1, r2, r3, r9, sl, fp}
 80082c0:	08010d21 	stmdaeq	r1, {r0, r5, r8, sl, fp}
 80082c4:	08010e21 	stmdaeq	r1, {r0, r5, r9, sl, fp}
 80082c8:	08010e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp}
 80082cc:	08010d92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp}
 80082d0:	08010e2a 	stmdaeq	r1, {r1, r3, r5, r9, sl, fp}

080082d4 <OscServer::Start()>:
 80082d4:	b530      	push	{r4, r5, lr}
 80082d6:	4d0e      	ldr	r5, [pc, #56]	; (8008310 <OscServer::Start()+0x3c>)
 80082d8:	b085      	sub	sp, #20
 80082da:	4604      	mov	r4, r0
 80082dc:	8801      	ldrh	r1, [r0, #0]
 80082de:	6828      	ldr	r0, [r5, #0]
 80082e0:	f004 fcd8 	bl	800cc94 <Network::Begin(unsigned short)>
 80082e4:	682b      	ldr	r3, [r5, #0]
 80082e6:	6060      	str	r0, [r4, #4]
 80082e8:	691a      	ldr	r2, [r3, #16]
 80082ea:	4601      	mov	r1, r0
 80082ec:	6998      	ldr	r0, [r3, #24]
 80082ee:	2300      	movs	r3, #0
 80082f0:	9301      	str	r3, [sp, #4]
 80082f2:	4b08      	ldr	r3, [pc, #32]	; (8008314 <OscServer::Start()+0x40>)
 80082f4:	ea62 0200 	orn	r2, r2, r0
 80082f8:	9300      	str	r3, [sp, #0]
 80082fa:	a803      	add	r0, sp, #12
 80082fc:	8823      	ldrh	r3, [r4, #0]
 80082fe:	f000 fd9d 	bl	8008e3c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008302:	4b05      	ldr	r3, [pc, #20]	; (8008318 <OscServer::Start()+0x44>)
 8008304:	2102      	movs	r1, #2
 8008306:	6818      	ldr	r0, [r3, #0]
 8008308:	f006 fbf8 	bl	800eafc <LedBlink::SetMode(ledblink::Mode)>
 800830c:	b005      	add	sp, #20
 800830e:	bd30      	pop	{r4, r5, pc}
 8008310:	20009488 	andcs	r9, r0, r8, lsl #9
 8008314:	08010e30 	stmdaeq	r1, {r4, r5, r9, sl, fp}
 8008318:	20009ba4 	andcs	r9, r0, r4, lsr #23

0800831c <OscServer::SetPath(char const*)>:
 800831c:	b510      	push	{r4, lr}
 800831e:	780b      	ldrb	r3, [r1, #0]
 8008320:	2b2f      	cmp	r3, #47	; 0x2f
 8008322:	d11c      	bne.n	800835e <OscServer::SetPath(char const*)+0x42>
 8008324:	4c0e      	ldr	r4, [pc, #56]	; (8008360 <OscServer::SetPath(char const*)+0x44>)
 8008326:	227d      	movs	r2, #125	; 0x7d
 8008328:	4620      	mov	r0, r4
 800832a:	f7ff ff51 	bl	80081d0 <strncpy.isra.0>
 800832e:	4620      	mov	r0, r4
 8008330:	f7ff ff46 	bl	80081c0 <strlen>
 8008334:	3801      	subs	r0, #1
 8008336:	5c23      	ldrb	r3, [r4, r0]
 8008338:	4909      	ldr	r1, [pc, #36]	; (8008360 <OscServer::SetPath(char const*)+0x44>)
 800833a:	2b2f      	cmp	r3, #47	; 0x2f
 800833c:	bf04      	itt	eq
 800833e:	2300      	moveq	r3, #0
 8008340:	5423      	strbeq	r3, [r4, r0]
 8008342:	4c08      	ldr	r4, [pc, #32]	; (8008364 <OscServer::SetPath(char const*)+0x48>)
 8008344:	4620      	mov	r0, r4
 8008346:	f7ff ff53 	bl	80081f0 <strcpy.isra.0>
 800834a:	4620      	mov	r0, r4
 800834c:	f7ff ff38 	bl	80081c0 <strlen>
 8008350:	232f      	movs	r3, #47	; 0x2f
 8008352:	5423      	strb	r3, [r4, r0]
 8008354:	232a      	movs	r3, #42	; 0x2a
 8008356:	4404      	add	r4, r0
 8008358:	7063      	strb	r3, [r4, #1]
 800835a:	2300      	movs	r3, #0
 800835c:	70a3      	strb	r3, [r4, #2]
 800835e:	bd10      	pop	{r4, pc}
 8008360:	20000280 	andcs	r0, r0, r0, lsl #5
 8008364:	20000180 	andcs	r0, r0, r0, lsl #3

08008368 <OscServer::SetPathInfo(char const*)>:
 8008368:	780b      	ldrb	r3, [r1, #0]
 800836a:	b510      	push	{r4, lr}
 800836c:	2b2f      	cmp	r3, #47	; 0x2f
 800836e:	d10d      	bne.n	800838c <OscServer::SetPathInfo(char const*)+0x24>
 8008370:	4c07      	ldr	r4, [pc, #28]	; (8008390 <OscServer::SetPathInfo(char const*)+0x28>)
 8008372:	227f      	movs	r2, #127	; 0x7f
 8008374:	4620      	mov	r0, r4
 8008376:	f7ff ff2b 	bl	80081d0 <strncpy.isra.0>
 800837a:	4620      	mov	r0, r4
 800837c:	f7ff ff20 	bl	80081c0 <strlen>
 8008380:	3801      	subs	r0, #1
 8008382:	5c23      	ldrb	r3, [r4, r0]
 8008384:	2b2f      	cmp	r3, #47	; 0x2f
 8008386:	bf04      	itt	eq
 8008388:	2300      	moveq	r3, #0
 800838a:	5423      	strbeq	r3, [r4, r0]
 800838c:	bd10      	pop	{r4, pc}
 800838e:	bf00      	nop
 8008390:	200000fc 	strdcs	r0, [r0], -ip

08008394 <OscServer::SetPathBlackOut(char const*)>:
 8008394:	780b      	ldrb	r3, [r1, #0]
 8008396:	b510      	push	{r4, lr}
 8008398:	2b2f      	cmp	r3, #47	; 0x2f
 800839a:	d10d      	bne.n	80083b8 <OscServer::SetPathBlackOut(char const*)+0x24>
 800839c:	4c07      	ldr	r4, [pc, #28]	; (80083bc <OscServer::SetPathBlackOut(char const*)+0x28>)
 800839e:	227f      	movs	r2, #127	; 0x7f
 80083a0:	4620      	mov	r0, r4
 80083a2:	f7ff ff15 	bl	80081d0 <strncpy.isra.0>
 80083a6:	4620      	mov	r0, r4
 80083a8:	f7ff ff0a 	bl	80081c0 <strlen>
 80083ac:	3801      	subs	r0, #1
 80083ae:	5c23      	ldrb	r3, [r4, r0]
 80083b0:	2b2f      	cmp	r3, #47	; 0x2f
 80083b2:	bf04      	itt	eq
 80083b4:	2300      	moveq	r3, #0
 80083b6:	5423      	strbeq	r3, [r4, r0]
 80083b8:	bd10      	pop	{r4, pc}
 80083ba:	bf00      	nop
 80083bc:	20000200 	andcs	r0, r0, r0, lsl #4

080083c0 <OscServer::GetChannel(char const*)>:
 80083c0:	b538      	push	{r3, r4, r5, lr}
 80083c2:	480f      	ldr	r0, [pc, #60]	; (8008400 <OscServer::GetChannel(char const*)+0x40>)
 80083c4:	460c      	mov	r4, r1
 80083c6:	f7ff fefb 	bl	80081c0 <strlen>
 80083ca:	1823      	adds	r3, r4, r0
 80083cc:	461c      	mov	r4, r3
 80083ce:	2000      	movs	r0, #0
 80083d0:	210a      	movs	r1, #10
 80083d2:	3403      	adds	r4, #3
 80083d4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80083d8:	b14a      	cbz	r2, 80083ee <OscServer::GetChannel(char const*)+0x2e>
 80083da:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 80083de:	2d09      	cmp	r5, #9
 80083e0:	d80b      	bhi.n	80083fa <OscServer::GetChannel(char const*)+0x3a>
 80083e2:	fb01 2000 	mla	r0, r1, r0, r2
 80083e6:	429c      	cmp	r4, r3
 80083e8:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 80083ec:	d1f2      	bne.n	80083d4 <OscServer::GetChannel(char const*)+0x14>
 80083ee:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80083f2:	bfc8      	it	gt
 80083f4:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 80083f8:	bd38      	pop	{r3, r4, r5, pc}
 80083fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80083fe:	e7fb      	b.n	80083f8 <OscServer::GetChannel(char const*)+0x38>
 8008400:	20000280 	andcs	r0, r0, r0, lsl #5

08008404 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 8008404:	2000      	movs	r0, #0
 8008406:	b570      	push	{r4, r5, r6, lr}
 8008408:	3a01      	subs	r2, #1
 800840a:	4c09      	ldr	r4, [pc, #36]	; (8008430 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800840c:	b292      	uxth	r2, r2
 800840e:	4414      	add	r4, r2
 8008410:	4413      	add	r3, r2
 8008412:	3901      	subs	r1, #1
 8008414:	429a      	cmp	r2, r3
 8008416:	d20a      	bcs.n	800842e <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2a>
 8008418:	7826      	ldrb	r6, [r4, #0]
 800841a:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800841e:	3201      	adds	r2, #1
 8008420:	42ae      	cmp	r6, r5
 8008422:	bf1c      	itt	ne
 8008424:	7025      	strbne	r5, [r4, #0]
 8008426:	2001      	movne	r0, #1
 8008428:	3401      	adds	r4, #1
 800842a:	b292      	uxth	r2, r2
 800842c:	e7f2      	b.n	8008414 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800842e:	bd70      	pop	{r4, r5, r6, pc}
 8008430:	20000300 	andcs	r0, r0, r0, lsl #6

08008434 <OscServer::Run()>:
 8008434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008436:	4d98      	ldr	r5, [pc, #608]	; (8008698 <OscServer::Run()+0x264>)
 8008438:	b097      	sub	sp, #92	; 0x5c
 800843a:	4604      	mov	r4, r0
 800843c:	4629      	mov	r1, r5
 800843e:	7900      	ldrb	r0, [r0, #4]
 8008440:	f10d 031a 	add.w	r3, sp, #26
 8008444:	aa07      	add	r2, sp, #28
 8008446:	f003 ff2f 	bl	800c2a8 <udp_recv2>
 800844a:	4606      	mov	r6, r0
 800844c:	b1a8      	cbz	r0, 800847a <OscServer::Run()+0x46>
 800844e:	4602      	mov	r2, r0
 8008450:	6829      	ldr	r1, [r5, #0]
 8008452:	a808      	add	r0, sp, #32
 8008454:	f000 fc56 	bl	8008d04 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008458:	4990      	ldr	r1, [pc, #576]	; (800869c <OscServer::Run()+0x268>)
 800845a:	6828      	ldr	r0, [r5, #0]
 800845c:	f000 fb72 	bl	8008b44 <lo_pattern_match>
 8008460:	4607      	mov	r7, r0
 8008462:	2800      	cmp	r0, #0
 8008464:	d074      	beq.n	8008550 <OscServer::Run()+0x11c>
 8008466:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800846a:	b133      	cbz	r3, 800847a <OscServer::Run()+0x46>
 800846c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800846e:	2e01      	cmp	r6, #1
 8008470:	d105      	bne.n	800847e <OscServer::Run()+0x4a>
 8008472:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008474:	781b      	ldrb	r3, [r3, #0]
 8008476:	2b62      	cmp	r3, #98	; 0x62
 8008478:	d03d      	beq.n	80084f6 <OscServer::Run()+0xc2>
 800847a:	b017      	add	sp, #92	; 0x5c
 800847c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800847e:	2e02      	cmp	r6, #2
 8008480:	d1fb      	bne.n	800847a <OscServer::Run()+0x46>
 8008482:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008484:	781b      	ldrb	r3, [r3, #0]
 8008486:	2b69      	cmp	r3, #105	; 0x69
 8008488:	d1f7      	bne.n	800847a <OscServer::Run()+0x46>
 800848a:	2100      	movs	r1, #0
 800848c:	a808      	add	r0, sp, #32
 800848e:	f000 fc89 	bl	8008da4 <OscSimpleMessage::GetInt(unsigned int)>
 8008492:	b285      	uxth	r5, r0
 8008494:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008498:	d2ef      	bcs.n	800847a <OscServer::Run()+0x46>
 800849a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800849c:	2b01      	cmp	r3, #1
 800849e:	d9ec      	bls.n	800847a <OscServer::Run()+0x46>
 80084a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80084a2:	785b      	ldrb	r3, [r3, #1]
 80084a4:	2b69      	cmp	r3, #105	; 0x69
 80084a6:	d147      	bne.n	8008538 <OscServer::Run()+0x104>
 80084a8:	2101      	movs	r1, #1
 80084aa:	a808      	add	r0, sp, #32
 80084ac:	f000 fc7a 	bl	8008da4 <OscSimpleMessage::GetInt(unsigned int)>
 80084b0:	3501      	adds	r5, #1
 80084b2:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 80084b6:	b2ad      	uxth	r5, r5
 80084b8:	2301      	movs	r3, #1
 80084ba:	462a      	mov	r2, r5
 80084bc:	4620      	mov	r0, r4
 80084be:	a90f      	add	r1, sp, #60	; 0x3c
 80084c0:	f7ff ffa0 	bl	8008404 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 80084c4:	b910      	cbnz	r0, 80084cc <OscServer::Run()+0x98>
 80084c6:	7ae3      	ldrb	r3, [r4, #11]
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	d0d6      	beq.n	800847a <OscServer::Run()+0x46>
 80084cc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80084ce:	7aa1      	ldrb	r1, [r4, #10]
 80084d0:	6803      	ldr	r3, [r0, #0]
 80084d2:	691e      	ldr	r6, [r3, #16]
 80084d4:	2900      	cmp	r1, #0
 80084d6:	f040 80a4 	bne.w	8008622 <OscServer::Run()+0x1ee>
 80084da:	f44f 7300 	mov.w	r3, #512	; 0x200
 80084de:	4a70      	ldr	r2, [pc, #448]	; (80086a0 <OscServer::Run()+0x26c>)
 80084e0:	47b0      	blx	r6
 80084e2:	7b21      	ldrb	r1, [r4, #12]
 80084e4:	2900      	cmp	r1, #0
 80084e6:	d1c8      	bne.n	800847a <OscServer::Run()+0x46>
 80084e8:	2301      	movs	r3, #1
 80084ea:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80084ec:	7323      	strb	r3, [r4, #12]
 80084ee:	6803      	ldr	r3, [r0, #0]
 80084f0:	689b      	ldr	r3, [r3, #8]
 80084f2:	4798      	blx	r3
 80084f4:	e7c1      	b.n	800847a <OscServer::Run()+0x46>
 80084f6:	2200      	movs	r2, #0
 80084f8:	a908      	add	r1, sp, #32
 80084fa:	a80f      	add	r0, sp, #60	; 0x3c
 80084fc:	f000 fc66 	bl	8008dcc <OscSimpleMessage::GetBlob(unsigned int)>
 8008500:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008502:	b29d      	uxth	r5, r3
 8008504:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008508:	d8b7      	bhi.n	800847a <OscServer::Run()+0x46>
 800850a:	462b      	mov	r3, r5
 800850c:	4632      	mov	r2, r6
 800850e:	4620      	mov	r0, r4
 8008510:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008512:	f7ff ff77 	bl	8008404 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008516:	b910      	cbnz	r0, 800851e <OscServer::Run()+0xea>
 8008518:	7ae3      	ldrb	r3, [r4, #11]
 800851a:	2b00      	cmp	r3, #0
 800851c:	d0ad      	beq.n	800847a <OscServer::Run()+0x46>
 800851e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008520:	6803      	ldr	r3, [r0, #0]
 8008522:	691e      	ldr	r6, [r3, #16]
 8008524:	7aa3      	ldrb	r3, [r4, #10]
 8008526:	b113      	cbz	r3, 800852e <OscServer::Run()+0xfa>
 8008528:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800852c:	d179      	bne.n	8008622 <OscServer::Run()+0x1ee>
 800852e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008532:	2100      	movs	r1, #0
 8008534:	4a5a      	ldr	r2, [pc, #360]	; (80086a0 <OscServer::Run()+0x26c>)
 8008536:	e7d3      	b.n	80084e0 <OscServer::Run()+0xac>
 8008538:	2b66      	cmp	r3, #102	; 0x66
 800853a:	d19e      	bne.n	800847a <OscServer::Run()+0x46>
 800853c:	2101      	movs	r1, #1
 800853e:	a808      	add	r0, sp, #32
 8008540:	f000 fc1c 	bl	8008d7c <OscSimpleMessage::GetFloat(unsigned int)>
 8008544:	4957      	ldr	r1, [pc, #348]	; (80086a4 <OscServer::Run()+0x270>)
 8008546:	f7fe ff87 	bl	8007458 <__aeabi_fmul>
 800854a:	f7ff f8af 	bl	80076ac <__aeabi_f2uiz>
 800854e:	e7af      	b.n	80084b0 <OscServer::Run()+0x7c>
 8008550:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008552:	b9b3      	cbnz	r3, 8008582 <OscServer::Run()+0x14e>
 8008554:	4954      	ldr	r1, [pc, #336]	; (80086a8 <OscServer::Run()+0x274>)
 8008556:	6828      	ldr	r0, [r5, #0]
 8008558:	f000 faf4 	bl	8008b44 <lo_pattern_match>
 800855c:	4606      	mov	r6, r0
 800855e:	2800      	cmp	r0, #0
 8008560:	d134      	bne.n	80085cc <OscServer::Run()+0x198>
 8008562:	4952      	ldr	r1, [pc, #328]	; (80086ac <OscServer::Run()+0x278>)
 8008564:	6828      	ldr	r0, [r5, #0]
 8008566:	f000 faed 	bl	8008b44 <lo_pattern_match>
 800856a:	2800      	cmp	r0, #0
 800856c:	d05f      	beq.n	800862e <OscServer::Run()+0x1fa>
 800856e:	4b50      	ldr	r3, [pc, #320]	; (80086b0 <OscServer::Run()+0x27c>)
 8008570:	9a07      	ldr	r2, [sp, #28]
 8008572:	9300      	str	r3, [sp, #0]
 8008574:	6861      	ldr	r1, [r4, #4]
 8008576:	8863      	ldrh	r3, [r4, #2]
 8008578:	9601      	str	r6, [sp, #4]
 800857a:	a80f      	add	r0, sp, #60	; 0x3c
 800857c:	f000 fc5e 	bl	8008e3c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008580:	e77b      	b.n	800847a <OscServer::Run()+0x46>
 8008582:	494c      	ldr	r1, [pc, #304]	; (80086b4 <OscServer::Run()+0x280>)
 8008584:	6828      	ldr	r0, [r5, #0]
 8008586:	f000 fadd 	bl	8008b44 <lo_pattern_match>
 800858a:	2800      	cmp	r0, #0
 800858c:	d0e2      	beq.n	8008554 <OscServer::Run()+0x120>
 800858e:	4632      	mov	r2, r6
 8008590:	6829      	ldr	r1, [r5, #0]
 8008592:	a80f      	add	r0, sp, #60	; 0x3c
 8008594:	f000 fbb6 	bl	8008d04 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008598:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800859a:	2b00      	cmp	r3, #0
 800859c:	f43f af6d 	beq.w	800847a <OscServer::Run()+0x46>
 80085a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80085a2:	781b      	ldrb	r3, [r3, #0]
 80085a4:	2b66      	cmp	r3, #102	; 0x66
 80085a6:	f47f af68 	bne.w	800847a <OscServer::Run()+0x46>
 80085aa:	4639      	mov	r1, r7
 80085ac:	a80f      	add	r0, sp, #60	; 0x3c
 80085ae:	f000 fbe5 	bl	8008d7c <OscSimpleMessage::GetFloat(unsigned int)>
 80085b2:	2100      	movs	r1, #0
 80085b4:	f7ff f848 	bl	8007648 <__aeabi_fcmpeq>
 80085b8:	4603      	mov	r3, r0
 80085ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80085bc:	b91b      	cbnz	r3, 80085c6 <OscServer::Run()+0x192>
 80085be:	6803      	ldr	r3, [r0, #0]
 80085c0:	689b      	ldr	r3, [r3, #8]
 80085c2:	4798      	blx	r3
 80085c4:	e759      	b.n	800847a <OscServer::Run()+0x46>
 80085c6:	6803      	ldr	r3, [r0, #0]
 80085c8:	68db      	ldr	r3, [r3, #12]
 80085ca:	e7fa      	b.n	80085c2 <OscServer::Run()+0x18e>
 80085cc:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80085d0:	2b00      	cmp	r3, #0
 80085d2:	f43f af52 	beq.w	800847a <OscServer::Run()+0x46>
 80085d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80085d8:	2b01      	cmp	r3, #1
 80085da:	f47f af4e 	bne.w	800847a <OscServer::Run()+0x46>
 80085de:	6829      	ldr	r1, [r5, #0]
 80085e0:	4620      	mov	r0, r4
 80085e2:	f7ff feed 	bl	80083c0 <OscServer::GetChannel(char const*)>
 80085e6:	b285      	uxth	r5, r0
 80085e8:	1e6b      	subs	r3, r5, #1
 80085ea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80085ee:	f4bf af44 	bcs.w	800847a <OscServer::Run()+0x46>
 80085f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80085f4:	781b      	ldrb	r3, [r3, #0]
 80085f6:	2b69      	cmp	r3, #105	; 0x69
 80085f8:	d106      	bne.n	8008608 <OscServer::Run()+0x1d4>
 80085fa:	2100      	movs	r1, #0
 80085fc:	a808      	add	r0, sp, #32
 80085fe:	f000 fbd1 	bl	8008da4 <OscSimpleMessage::GetInt(unsigned int)>
 8008602:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8008606:	e757      	b.n	80084b8 <OscServer::Run()+0x84>
 8008608:	2b66      	cmp	r3, #102	; 0x66
 800860a:	f47f af36 	bne.w	800847a <OscServer::Run()+0x46>
 800860e:	2100      	movs	r1, #0
 8008610:	a808      	add	r0, sp, #32
 8008612:	f000 fbb3 	bl	8008d7c <OscSimpleMessage::GetFloat(unsigned int)>
 8008616:	4923      	ldr	r1, [pc, #140]	; (80086a4 <OscServer::Run()+0x270>)
 8008618:	f7fe ff1e 	bl	8007458 <__aeabi_fmul>
 800861c:	f7ff f846 	bl	80076ac <__aeabi_f2uiz>
 8008620:	e7ef      	b.n	8008602 <OscServer::Run()+0x1ce>
 8008622:	8923      	ldrh	r3, [r4, #8]
 8008624:	42ab      	cmp	r3, r5
 8008626:	bf38      	it	cc
 8008628:	462b      	movcc	r3, r5
 800862a:	8123      	strh	r3, [r4, #8]
 800862c:	e781      	b.n	8008532 <OscServer::Run()+0xfe>
 800862e:	4922      	ldr	r1, [pc, #136]	; (80086b8 <OscServer::Run()+0x284>)
 8008630:	6828      	ldr	r0, [r5, #0]
 8008632:	f000 fa87 	bl	8008b44 <lo_pattern_match>
 8008636:	2800      	cmp	r0, #0
 8008638:	f43f af1f 	beq.w	800847a <OscServer::Run()+0x46>
 800863c:	f104 030d 	add.w	r3, r4, #13
 8008640:	4d1e      	ldr	r5, [pc, #120]	; (80086bc <OscServer::Run()+0x288>)
 8008642:	9302      	str	r3, [sp, #8]
 8008644:	4b1e      	ldr	r3, [pc, #120]	; (80086c0 <OscServer::Run()+0x28c>)
 8008646:	9a07      	ldr	r2, [sp, #28]
 8008648:	6861      	ldr	r1, [r4, #4]
 800864a:	9300      	str	r3, [sp, #0]
 800864c:	9501      	str	r5, [sp, #4]
 800864e:	8863      	ldrh	r3, [r4, #2]
 8008650:	a805      	add	r0, sp, #20
 8008652:	f000 fc17 	bl	8008e84 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8008656:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008658:	9a07      	ldr	r2, [sp, #28]
 800865a:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800865e:	4b19      	ldr	r3, [pc, #100]	; (80086c4 <OscServer::Run()+0x290>)
 8008660:	6861      	ldr	r1, [r4, #4]
 8008662:	9300      	str	r3, [sp, #0]
 8008664:	a806      	add	r0, sp, #24
 8008666:	8863      	ldrh	r3, [r4, #2]
 8008668:	f000 fc0c 	bl	8008e84 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800866c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800866e:	9a07      	ldr	r2, [sp, #28]
 8008670:	e9cd 5301 	strd	r5, r3, [sp, #4]
 8008674:	4b14      	ldr	r3, [pc, #80]	; (80086c8 <OscServer::Run()+0x294>)
 8008676:	6861      	ldr	r1, [r4, #4]
 8008678:	9300      	str	r3, [sp, #0]
 800867a:	a80f      	add	r0, sp, #60	; 0x3c
 800867c:	8863      	ldrh	r3, [r4, #2]
 800867e:	f000 fc01 	bl	8008e84 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8008682:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008684:	2800      	cmp	r0, #0
 8008686:	f43f aef8 	beq.w	800847a <OscServer::Run()+0x46>
 800868a:	6803      	ldr	r3, [r0, #0]
 800868c:	9a07      	ldr	r2, [sp, #28]
 800868e:	691d      	ldr	r5, [r3, #16]
 8008690:	6861      	ldr	r1, [r4, #4]
 8008692:	8863      	ldrh	r3, [r4, #2]
 8008694:	47a8      	blx	r5
 8008696:	e6f0      	b.n	800847a <OscServer::Run()+0x46>
 8008698:	2000017c 	andcs	r0, r0, ip, ror r1
 800869c:	20000280 	andcs	r0, r0, r0, lsl #5
 80086a0:	20000300 	andcs	r0, r0, r0, lsl #6
 80086a4:	437f0000 	cmnmi	pc, #0
 80086a8:	20000180 	andcs	r0, r0, r0, lsl #3
 80086ac:	08010e30 	stmdaeq	r1, {r4, r5, r9, sl, fp}
 80086b0:	08010e36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp}
 80086b4:	20000200 	andcs	r0, r0, r0, lsl #4
 80086b8:	200000fc 	strdcs	r0, [r0], -ip
 80086bc:	08010e28 	stmdaeq	r1, {r3, r5, r9, sl, fp}
 80086c0:	08010e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp}
 80086c4:	08010e45 	stmdaeq	r1, {r0, r2, r6, r9, sl, fp}
 80086c8:	08010e51 	stmdaeq	r1, {r0, r4, r6, r9, sl, fp}

080086cc <OscServer::Print()>:
 80086cc:	b510      	push	{r4, lr}
 80086ce:	4604      	mov	r4, r0
 80086d0:	480f      	ldr	r0, [pc, #60]	; (8008710 <OscServer::Print()+0x44>)
 80086d2:	f7ff fd3d 	bl	8008150 <printf>
 80086d6:	8821      	ldrh	r1, [r4, #0]
 80086d8:	480e      	ldr	r0, [pc, #56]	; (8008714 <OscServer::Print()+0x48>)
 80086da:	f7ff fd39 	bl	8008150 <printf>
 80086de:	8861      	ldrh	r1, [r4, #2]
 80086e0:	480d      	ldr	r0, [pc, #52]	; (8008718 <OscServer::Print()+0x4c>)
 80086e2:	f7ff fd35 	bl	8008150 <printf>
 80086e6:	4a0d      	ldr	r2, [pc, #52]	; (800871c <OscServer::Print()+0x50>)
 80086e8:	490d      	ldr	r1, [pc, #52]	; (8008720 <OscServer::Print()+0x54>)
 80086ea:	480e      	ldr	r0, [pc, #56]	; (8008724 <OscServer::Print()+0x58>)
 80086ec:	f7ff fd30 	bl	8008150 <printf>
 80086f0:	490d      	ldr	r1, [pc, #52]	; (8008728 <OscServer::Print()+0x5c>)
 80086f2:	480e      	ldr	r0, [pc, #56]	; (800872c <OscServer::Print()+0x60>)
 80086f4:	f7ff fd2c 	bl	8008150 <printf>
 80086f8:	7aa1      	ldrb	r1, [r4, #10]
 80086fa:	4a0d      	ldr	r2, [pc, #52]	; (8008730 <OscServer::Print()+0x64>)
 80086fc:	4b0d      	ldr	r3, [pc, #52]	; (8008734 <OscServer::Print()+0x68>)
 80086fe:	480e      	ldr	r0, [pc, #56]	; (8008738 <OscServer::Print()+0x6c>)
 8008700:	2900      	cmp	r1, #0
 8008702:	bf14      	ite	ne
 8008704:	4611      	movne	r1, r2
 8008706:	4619      	moveq	r1, r3
 8008708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800870c:	f7ff bd20 	b.w	8008150 <printf>
 8008710:	08010e62 	stmdaeq	r1, {r1, r5, r6, r9, sl, fp}
 8008714:	08010e6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, sl, fp}
 8008718:	08010e8a 	stmdaeq	r1, {r1, r3, r7, r9, sl, fp}
 800871c:	20000180 	andcs	r0, r0, r0, lsl #3
 8008720:	20000280 	andcs	r0, r0, r0, lsl #5
 8008724:	08010ea6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, fp}
 8008728:	20000200 	andcs	r0, r0, r0, lsl #4
 800872c:	08010ec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp}
 8008730:	08010e5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, sl, fp}
 8008734:	08010e5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, fp}
 8008738:	08010ee6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, fp}

0800873c <strncpy.constprop.0.isra.0>:
 800873c:	227f      	movs	r2, #127	; 0x7f
 800873e:	1e4b      	subs	r3, r1, #1
 8008740:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008744:	b909      	cbnz	r1, 800874a <strncpy.constprop.0.isra.0+0xe>
 8008746:	f006 bb75 	b.w	800ee34 <memset>
 800874a:	3a01      	subs	r2, #1
 800874c:	f800 1b01 	strb.w	r1, [r0], #1
 8008750:	d1f6      	bne.n	8008740 <strncpy.constprop.0.isra.0+0x4>
 8008752:	4770      	bx	lr

08008754 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8008754:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008756:	88c5      	ldrh	r5, [r0, #6]
 8008758:	8886      	ldrh	r6, [r0, #4]
 800875a:	42b5      	cmp	r5, r6
 800875c:	d216      	bcs.n	800878c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800875e:	4604      	mov	r4, r0
 8008760:	6800      	ldr	r0, [r0, #0]
 8008762:	4428      	add	r0, r5
 8008764:	1b75      	subs	r5, r6, r5
 8008766:	7a26      	ldrb	r6, [r4, #8]
 8008768:	b923      	cbnz	r3, 8008774 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800876a:	b926      	cbnz	r6, 8008776 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800876c:	9200      	str	r2, [sp, #0]
 800876e:	460b      	mov	r3, r1
 8008770:	4a09      	ldr	r2, [pc, #36]	; (8008798 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8008772:	e003      	b.n	800877c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8008774:	b166      	cbz	r6, 8008790 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8008776:	460b      	mov	r3, r1
 8008778:	9200      	str	r2, [sp, #0]
 800877a:	4a08      	ldr	r2, [pc, #32]	; (800879c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800877c:	4629      	mov	r1, r5
 800877e:	f7ff fcf7 	bl	8008170 <snprintf>
 8008782:	4285      	cmp	r5, r0
 8008784:	bfa2      	ittt	ge
 8008786:	88e3      	ldrhge	r3, [r4, #6]
 8008788:	181b      	addge	r3, r3, r0
 800878a:	80e3      	strhge	r3, [r4, #6]
 800878c:	b002      	add	sp, #8
 800878e:	bd70      	pop	{r4, r5, r6, pc}
 8008790:	9200      	str	r2, [sp, #0]
 8008792:	460b      	mov	r3, r1
 8008794:	4a02      	ldr	r2, [pc, #8]	; (80087a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 8008796:	e7f1      	b.n	800877c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8008798:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 800879c:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 80087a0:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}

080087a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 80087a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087a6:	88c5      	ldrh	r5, [r0, #6]
 80087a8:	8886      	ldrh	r6, [r0, #4]
 80087aa:	42b5      	cmp	r5, r6
 80087ac:	d216      	bcs.n	80087dc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 80087ae:	4604      	mov	r4, r0
 80087b0:	6800      	ldr	r0, [r0, #0]
 80087b2:	4428      	add	r0, r5
 80087b4:	1b75      	subs	r5, r6, r5
 80087b6:	7a26      	ldrb	r6, [r4, #8]
 80087b8:	b923      	cbnz	r3, 80087c4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 80087ba:	b926      	cbnz	r6, 80087c6 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 80087bc:	9200      	str	r2, [sp, #0]
 80087be:	460b      	mov	r3, r1
 80087c0:	4a09      	ldr	r2, [pc, #36]	; (80087e8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 80087c2:	e003      	b.n	80087cc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 80087c4:	b166      	cbz	r6, 80087e0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 80087c6:	460b      	mov	r3, r1
 80087c8:	9200      	str	r2, [sp, #0]
 80087ca:	4a08      	ldr	r2, [pc, #32]	; (80087ec <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 80087cc:	4629      	mov	r1, r5
 80087ce:	f7ff fccf 	bl	8008170 <snprintf>
 80087d2:	4285      	cmp	r5, r0
 80087d4:	bfa2      	ittt	ge
 80087d6:	88e3      	ldrhge	r3, [r4, #6]
 80087d8:	181b      	addge	r3, r3, r0
 80087da:	80e3      	strhge	r3, [r4, #6]
 80087dc:	b002      	add	sp, #8
 80087de:	bd70      	pop	{r4, r5, r6, pc}
 80087e0:	9200      	str	r2, [sp, #0]
 80087e2:	460b      	mov	r3, r1
 80087e4:	4a02      	ldr	r2, [pc, #8]	; (80087f0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 80087e6:	e7f1      	b.n	80087cc <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 80087e8:	08010f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp}
 80087ec:	08010f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp}
 80087f0:	08010f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp}

080087f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 80087f4:	b510      	push	{r4, lr}
 80087f6:	4604      	mov	r4, r0
 80087f8:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 80087fc:	f840 1b04 	str.w	r1, [r0], #4
 8008800:	2100      	movs	r1, #0
 8008802:	f006 fb17 	bl	800ee34 <memset>
 8008806:	4b02      	ldr	r3, [pc, #8]	; (8008810 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 8008808:	4620      	mov	r0, r4
 800880a:	60a3      	str	r3, [r4, #8]
 800880c:	bd10      	pop	{r4, pc}
 800880e:	bf00      	nop
 8008810:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

08008814 <OSCServerParams::Load()>:
 8008814:	b508      	push	{r3, lr}
 8008816:	2300      	movs	r3, #0
 8008818:	4601      	mov	r1, r0
 800881a:	6043      	str	r3, [r0, #4]
 800881c:	6800      	ldr	r0, [r0, #0]
 800881e:	b120      	cbz	r0, 800882a <OSCServerParams::Load()+0x16>
 8008820:	6803      	ldr	r3, [r0, #0]
 8008822:	3104      	adds	r1, #4
 8008824:	68db      	ldr	r3, [r3, #12]
 8008826:	4798      	blx	r3
 8008828:	2001      	movs	r0, #1
 800882a:	bd08      	pop	{r3, pc}

0800882c <OSCServerParams::Load(char const*, unsigned int)>:
 800882c:	6803      	ldr	r3, [r0, #0]
 800882e:	b1d3      	cbz	r3, 8008866 <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 8008830:	2300      	movs	r3, #0
 8008832:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008834:	460d      	mov	r5, r1
 8008836:	4616      	mov	r6, r2
 8008838:	4604      	mov	r4, r0
 800883a:	6043      	str	r3, [r0, #4]
 800883c:	4602      	mov	r2, r0
 800883e:	490a      	ldr	r1, [pc, #40]	; (8008868 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 8008840:	4668      	mov	r0, sp
 8008842:	f005 fd0b 	bl	800e25c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8008846:	4632      	mov	r2, r6
 8008848:	4629      	mov	r1, r5
 800884a:	4668      	mov	r0, sp
 800884c:	f005 fd0a 	bl	800e264 <ReadConfigFile::Read(char const*, unsigned int)>
 8008850:	4621      	mov	r1, r4
 8008852:	f851 0b04 	ldr.w	r0, [r1], #4
 8008856:	6803      	ldr	r3, [r0, #0]
 8008858:	689b      	ldr	r3, [r3, #8]
 800885a:	4798      	blx	r3
 800885c:	4668      	mov	r0, sp
 800885e:	f005 fd00 	bl	800e262 <ReadConfigFile::~ReadConfigFile()>
 8008862:	b002      	add	sp, #8
 8008864:	bd70      	pop	{r4, r5, r6, pc}
 8008866:	4770      	bx	lr
 8008868:	08008965 	stmdaeq	r0, {r0, r2, r5, r6, r8, fp, pc}

0800886c <OSCServerParams::callbackFunction(char const*)>:
 800886c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800886e:	460d      	mov	r5, r1
 8008870:	4604      	mov	r4, r0
 8008872:	4937      	ldr	r1, [pc, #220]	; (8008950 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 8008874:	4628      	mov	r0, r5
 8008876:	f10d 0202 	add.w	r2, sp, #2
 800887a:	f005 fd80 	bl	800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800887e:	b980      	cbnz	r0, 80088a2 <OSCServerParams::callbackFunction(char const*)+0x36>
 8008880:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8008884:	6863      	ldr	r3, [r4, #4]
 8008886:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800888a:	bf33      	iteet	cc
 800888c:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 8008890:	8122      	strhcs	r2, [r4, #8]
 8008892:	f043 0301 	orrcs.w	r3, r3, #1
 8008896:	8122      	strhcc	r2, [r4, #8]
 8008898:	bf38      	it	cc
 800889a:	f023 0301 	biccc.w	r3, r3, #1
 800889e:	6063      	str	r3, [r4, #4]
 80088a0:	e028      	b.n	80088f4 <OSCServerParams::callbackFunction(char const*)+0x88>
 80088a2:	4628      	mov	r0, r5
 80088a4:	492b      	ldr	r1, [pc, #172]	; (8008954 <OSCServerParams::callbackFunction(char const*)+0xe8>)
 80088a6:	f10d 0202 	add.w	r2, sp, #2
 80088aa:	f005 fd68 	bl	800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80088ae:	b978      	cbnz	r0, 80088d0 <OSCServerParams::callbackFunction(char const*)+0x64>
 80088b0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80088b4:	6863      	ldr	r3, [r4, #4]
 80088b6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80088ba:	bf33      	iteet	cc
 80088bc:	f242 3228 	movwcc	r2, #9000	; 0x2328
 80088c0:	8162      	strhcs	r2, [r4, #10]
 80088c2:	f043 0302 	orrcs.w	r3, r3, #2
 80088c6:	8162      	strhcc	r2, [r4, #10]
 80088c8:	bf38      	it	cc
 80088ca:	f023 0302 	biccc.w	r3, r3, #2
 80088ce:	e7e6      	b.n	800889e <OSCServerParams::callbackFunction(char const*)+0x32>
 80088d0:	4628      	mov	r0, r5
 80088d2:	4921      	ldr	r1, [pc, #132]	; (8008958 <OSCServerParams::callbackFunction(char const*)+0xec>)
 80088d4:	f10d 0201 	add.w	r2, sp, #1
 80088d8:	f005 fd6f 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80088dc:	b978      	cbnz	r0, 80088fe <OSCServerParams::callbackFunction(char const*)+0x92>
 80088de:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80088e2:	6863      	ldr	r3, [r4, #4]
 80088e4:	b142      	cbz	r2, 80088f8 <OSCServerParams::callbackFunction(char const*)+0x8c>
 80088e6:	f043 0308 	orr.w	r3, r3, #8
 80088ea:	3a00      	subs	r2, #0
 80088ec:	bf18      	it	ne
 80088ee:	2201      	movne	r2, #1
 80088f0:	6063      	str	r3, [r4, #4]
 80088f2:	7362      	strb	r2, [r4, #13]
 80088f4:	b002      	add	sp, #8
 80088f6:	bd70      	pop	{r4, r5, r6, pc}
 80088f8:	f023 0308 	bic.w	r3, r3, #8
 80088fc:	e7f5      	b.n	80088ea <OSCServerParams::callbackFunction(char const*)+0x7e>
 80088fe:	267f      	movs	r6, #127	; 0x7f
 8008900:	4628      	mov	r0, r5
 8008902:	4916      	ldr	r1, [pc, #88]	; (800895c <OSCServerParams::callbackFunction(char const*)+0xf0>)
 8008904:	ab01      	add	r3, sp, #4
 8008906:	f104 020e 	add.w	r2, r4, #14
 800890a:	9601      	str	r6, [sp, #4]
 800890c:	f005 fcde 	bl	800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008910:	b918      	cbnz	r0, 800891a <OSCServerParams::callbackFunction(char const*)+0xae>
 8008912:	6863      	ldr	r3, [r4, #4]
 8008914:	f043 0304 	orr.w	r3, r3, #4
 8008918:	e7c1      	b.n	800889e <OSCServerParams::callbackFunction(char const*)+0x32>
 800891a:	4628      	mov	r0, r5
 800891c:	4910      	ldr	r1, [pc, #64]	; (8008960 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800891e:	ab01      	add	r3, sp, #4
 8008920:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 8008924:	9601      	str	r6, [sp, #4]
 8008926:	f005 fcd1 	bl	800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800892a:	b918      	cbnz	r0, 8008934 <OSCServerParams::callbackFunction(char const*)+0xc8>
 800892c:	6863      	ldr	r3, [r4, #4]
 800892e:	f043 0320 	orr.w	r3, r3, #32
 8008932:	e7b4      	b.n	800889e <OSCServerParams::callbackFunction(char const*)+0x32>
 8008934:	4628      	mov	r0, r5
 8008936:	490a      	ldr	r1, [pc, #40]	; (8008960 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 8008938:	ab01      	add	r3, sp, #4
 800893a:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 800893e:	9601      	str	r6, [sp, #4]
 8008940:	f005 fcc4 	bl	800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8008944:	2800      	cmp	r0, #0
 8008946:	d1d5      	bne.n	80088f4 <OSCServerParams::callbackFunction(char const*)+0x88>
 8008948:	6863      	ldr	r3, [r4, #4]
 800894a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800894e:	e7a6      	b.n	800889e <OSCServerParams::callbackFunction(char const*)+0x32>
 8008950:	08010fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp}
 8008954:	08010fb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp}
 8008958:	08010f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp}
 800895c:	08010f8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, fp}
 8008960:	08010f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp}

08008964 <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 8008964:	f7ff bf82 	b.w	800886c <OSCServerParams::callbackFunction(char const*)>

08008968 <OSCServerParams::Set(OscServer*)>:
 8008968:	b538      	push	{r3, r4, r5, lr}
 800896a:	460d      	mov	r5, r1
 800896c:	6843      	ldr	r3, [r0, #4]
 800896e:	4604      	mov	r4, r0
 8008970:	07d9      	lsls	r1, r3, #31
 8008972:	bf44      	itt	mi
 8008974:	8902      	ldrhmi	r2, [r0, #8]
 8008976:	802a      	strhmi	r2, [r5, #0]
 8008978:	079a      	lsls	r2, r3, #30
 800897a:	bf44      	itt	mi
 800897c:	8942      	ldrhmi	r2, [r0, #10]
 800897e:	806a      	strhmi	r2, [r5, #2]
 8008980:	0758      	lsls	r0, r3, #29
 8008982:	d504      	bpl.n	800898e <OSCServerParams::Set(OscServer*)+0x26>
 8008984:	4628      	mov	r0, r5
 8008986:	f104 010e 	add.w	r1, r4, #14
 800898a:	f7ff fcc7 	bl	800831c <OscServer::SetPath(char const*)>
 800898e:	6863      	ldr	r3, [r4, #4]
 8008990:	0699      	lsls	r1, r3, #26
 8008992:	d504      	bpl.n	800899e <OSCServerParams::Set(OscServer*)+0x36>
 8008994:	4628      	mov	r0, r5
 8008996:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 800899a:	f7ff fce5 	bl	8008368 <OscServer::SetPathInfo(char const*)>
 800899e:	6863      	ldr	r3, [r4, #4]
 80089a0:	065a      	lsls	r2, r3, #25
 80089a2:	d504      	bpl.n	80089ae <OSCServerParams::Set(OscServer*)+0x46>
 80089a4:	4628      	mov	r0, r5
 80089a6:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 80089aa:	f7ff fcf3 	bl	8008394 <OscServer::SetPathBlackOut(char const*)>
 80089ae:	6863      	ldr	r3, [r4, #4]
 80089b0:	071b      	lsls	r3, r3, #28
 80089b2:	bf44      	itt	mi
 80089b4:	7b63      	ldrbmi	r3, [r4, #13]
 80089b6:	72ab      	strbmi	r3, [r5, #10]
 80089b8:	bd38      	pop	{r3, r4, r5, pc}
	...

080089bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 80089bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089be:	4604      	mov	r4, r0
 80089c0:	4615      	mov	r5, r2
 80089c2:	461e      	mov	r6, r3
 80089c4:	b087      	sub	sp, #28
 80089c6:	3004      	adds	r0, #4
 80089c8:	2900      	cmp	r1, #0
 80089ca:	d060      	beq.n	8008a8e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 80089cc:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 80089d0:	f006 fa19 	bl	800ee06 <memmove>
 80089d4:	4633      	mov	r3, r6
 80089d6:	462a      	mov	r2, r5
 80089d8:	4946      	ldr	r1, [pc, #280]	; (8008af4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 80089da:	a803      	add	r0, sp, #12
 80089dc:	f005 fb9e 	bl	800e11c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80089e0:	6863      	ldr	r3, [r4, #4]
 80089e2:	f104 070e 	add.w	r7, r4, #14
 80089e6:	075e      	lsls	r6, r3, #29
 80089e8:	d403      	bmi.n	80089f2 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 80089ea:	4638      	mov	r0, r7
 80089ec:	4942      	ldr	r1, [pc, #264]	; (8008af8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 80089ee:	f7ff fea5 	bl	800873c <strncpy.constprop.0.isra.0>
 80089f2:	6863      	ldr	r3, [r4, #4]
 80089f4:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 80089f8:	069d      	lsls	r5, r3, #26
 80089fa:	d403      	bmi.n	8008a04 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 80089fc:	4630      	mov	r0, r6
 80089fe:	493f      	ldr	r1, [pc, #252]	; (8008afc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 8008a00:	f7ff fe9c 	bl	800873c <strncpy.constprop.0.isra.0>
 8008a04:	6863      	ldr	r3, [r4, #4]
 8008a06:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 8008a0a:	0658      	lsls	r0, r3, #25
 8008a0c:	d403      	bmi.n	8008a16 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 8008a0e:	4628      	mov	r0, r5
 8008a10:	493b      	ldr	r1, [pc, #236]	; (8008b00 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 8008a12:	f7ff fe93 	bl	800873c <strncpy.constprop.0.isra.0>
 8008a16:	6863      	ldr	r3, [r4, #4]
 8008a18:	8922      	ldrh	r2, [r4, #8]
 8008a1a:	493a      	ldr	r1, [pc, #232]	; (8008b04 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 8008a1c:	f003 0301 	and.w	r3, r3, #1
 8008a20:	a803      	add	r0, sp, #12
 8008a22:	f7ff fe97 	bl	8008754 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8008a26:	6863      	ldr	r3, [r4, #4]
 8008a28:	8962      	ldrh	r2, [r4, #10]
 8008a2a:	4937      	ldr	r1, [pc, #220]	; (8008b08 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 8008a2c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8008a30:	a803      	add	r0, sp, #12
 8008a32:	f7ff fe8f 	bl	8008754 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8008a36:	6863      	ldr	r3, [r4, #4]
 8008a38:	463a      	mov	r2, r7
 8008a3a:	4934      	ldr	r1, [pc, #208]	; (8008b0c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 8008a3c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8008a40:	a803      	add	r0, sp, #12
 8008a42:	f7ff feaf 	bl	80087a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8008a46:	6863      	ldr	r3, [r4, #4]
 8008a48:	4632      	mov	r2, r6
 8008a4a:	4931      	ldr	r1, [pc, #196]	; (8008b10 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 8008a4c:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8008a50:	a803      	add	r0, sp, #12
 8008a52:	f7ff fea7 	bl	80087a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8008a56:	6863      	ldr	r3, [r4, #4]
 8008a58:	462a      	mov	r2, r5
 8008a5a:	492e      	ldr	r1, [pc, #184]	; (8008b14 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 8008a5c:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8008a60:	a803      	add	r0, sp, #12
 8008a62:	f7ff fe9f 	bl	80087a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 8008a66:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8008a6a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8008a6e:	42a9      	cmp	r1, r5
 8008a70:	d222      	bcs.n	8008ab8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 8008a72:	9803      	ldr	r0, [sp, #12]
 8008a74:	1a6d      	subs	r5, r5, r1
 8008a76:	4408      	add	r0, r1
 8008a78:	6861      	ldr	r1, [r4, #4]
 8008a7a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8008a7e:	0709      	lsls	r1, r1, #28
 8008a80:	7b63      	ldrb	r3, [r4, #13]
 8008a82:	d40b      	bmi.n	8008a9c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 8008a84:	b95a      	cbnz	r2, 8008a9e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 8008a86:	9300      	str	r3, [sp, #0]
 8008a88:	4a23      	ldr	r2, [pc, #140]	; (8008b18 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 8008a8a:	4b24      	ldr	r3, [pc, #144]	; (8008b1c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8008a8c:	e00a      	b.n	8008aa4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8008a8e:	6823      	ldr	r3, [r4, #0]
 8008a90:	4601      	mov	r1, r0
 8008a92:	681a      	ldr	r2, [r3, #0]
 8008a94:	4618      	mov	r0, r3
 8008a96:	68d2      	ldr	r2, [r2, #12]
 8008a98:	4790      	blx	r2
 8008a9a:	e79b      	b.n	80089d4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 8008a9c:	b32a      	cbz	r2, 8008aea <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x12e>
 8008a9e:	9300      	str	r3, [sp, #0]
 8008aa0:	4a1f      	ldr	r2, [pc, #124]	; (8008b20 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 8008aa2:	4b1e      	ldr	r3, [pc, #120]	; (8008b1c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8008aa4:	4629      	mov	r1, r5
 8008aa6:	f7ff fb63 	bl	8008170 <snprintf>
 8008aaa:	4285      	cmp	r5, r0
 8008aac:	bfa2      	ittt	ge
 8008aae:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8008ab2:	18c0      	addge	r0, r0, r3
 8008ab4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8008ab8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8008abc:	b17b      	cbz	r3, 8008ade <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x122>
 8008abe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008ac2:	9b03      	ldr	r3, [sp, #12]
 8008ac4:	4413      	add	r3, r2
 8008ac6:	227d      	movs	r2, #125	; 0x7d
 8008ac8:	f803 2c01 	strb.w	r2, [r3, #-1]
 8008acc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008ad0:	9903      	ldr	r1, [sp, #12]
 8008ad2:	54ca      	strb	r2, [r1, r3]
 8008ad4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8008ad8:	3301      	adds	r3, #1
 8008ada:	f8ad 3012 	strh.w	r3, [sp, #18]
 8008ade:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8008ae2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008ae4:	601a      	str	r2, [r3, #0]
 8008ae6:	b007      	add	sp, #28
 8008ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008aea:	9300      	str	r3, [sp, #0]
 8008aec:	4a0d      	ldr	r2, [pc, #52]	; (8008b24 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 8008aee:	4b0b      	ldr	r3, [pc, #44]	; (8008b1c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8008af0:	e7d8      	b.n	8008aa4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8008af2:	bf00      	nop
 8008af4:	08010f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp}
 8008af8:	20000280 	andcs	r0, r0, r0, lsl #5
 8008afc:	200000fc 	strdcs	r0, [r0], -ip
 8008b00:	20000200 	andcs	r0, r0, r0, lsl #4
 8008b04:	08010fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp}
 8008b08:	08010fb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp}
 8008b0c:	08010f8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, fp}
 8008b10:	08010f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp}
 8008b14:	08010f7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp}
 8008b18:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 8008b1c:	08010f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp}
 8008b20:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 8008b24:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}

08008b28 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 8008b28:	b513      	push	{r0, r1, r4, lr}
 8008b2a:	6804      	ldr	r4, [r0, #0]
 8008b2c:	b914      	cbnz	r4, 8008b34 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8008b2e:	601c      	str	r4, [r3, #0]
 8008b30:	b002      	add	sp, #8
 8008b32:	bd10      	pop	{r4, pc}
 8008b34:	9300      	str	r3, [sp, #0]
 8008b36:	4613      	mov	r3, r2
 8008b38:	460a      	mov	r2, r1
 8008b3a:	2100      	movs	r1, #0
 8008b3c:	f7ff ff3e 	bl	80089bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 8008b40:	e7f6      	b.n	8008b30 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

08008b42 <OSCServerParams::Dump()>:
 8008b42:	4770      	bx	lr

08008b44 <lo_pattern_match>:
 8008b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b46:	4605      	mov	r5, r0
 8008b48:	460b      	mov	r3, r1
 8008b4a:	7819      	ldrb	r1, [r3, #0]
 8008b4c:	782a      	ldrb	r2, [r5, #0]
 8008b4e:	b919      	cbnz	r1, 8008b58 <lo_pattern_match+0x14>
 8008b50:	fab2 f082 	clz	r0, r2
 8008b54:	0940      	lsrs	r0, r0, #5
 8008b56:	e0a9      	b.n	8008cac <lo_pattern_match+0x168>
 8008b58:	b90a      	cbnz	r2, 8008b5e <lo_pattern_match+0x1a>
 8008b5a:	292a      	cmp	r1, #42	; 0x2a
 8008b5c:	d132      	bne.n	8008bc4 <lo_pattern_match+0x80>
 8008b5e:	295b      	cmp	r1, #91	; 0x5b
 8008b60:	f103 0401 	add.w	r4, r3, #1
 8008b64:	d03c      	beq.n	8008be0 <lo_pattern_match+0x9c>
 8008b66:	d806      	bhi.n	8008b76 <lo_pattern_match+0x32>
 8008b68:	292a      	cmp	r1, #42	; 0x2a
 8008b6a:	d012      	beq.n	8008b92 <lo_pattern_match+0x4e>
 8008b6c:	293f      	cmp	r1, #63	; 0x3f
 8008b6e:	d032      	beq.n	8008bd6 <lo_pattern_match+0x92>
 8008b70:	4291      	cmp	r1, r2
 8008b72:	d032      	beq.n	8008bda <lo_pattern_match+0x96>
 8008b74:	e026      	b.n	8008bc4 <lo_pattern_match+0x80>
 8008b76:	297b      	cmp	r1, #123	; 0x7b
 8008b78:	d1fa      	bne.n	8008b70 <lo_pattern_match+0x2c>
 8008b7a:	7820      	ldrb	r0, [r4, #0]
 8008b7c:	4626      	mov	r6, r4
 8008b7e:	1c67      	adds	r7, r4, #1
 8008b80:	2800      	cmp	r0, #0
 8008b82:	f000 8093 	beq.w	8008cac <lo_pattern_match+0x168>
 8008b86:	287d      	cmp	r0, #125	; 0x7d
 8008b88:	d16b      	bne.n	8008c62 <lo_pattern_match+0x11e>
 8008b8a:	1c9c      	adds	r4, r3, #2
 8008b8c:	4628      	mov	r0, r5
 8008b8e:	785b      	ldrb	r3, [r3, #1]
 8008b90:	e077      	b.n	8008c82 <lo_pattern_match+0x13e>
 8008b92:	7823      	ldrb	r3, [r4, #0]
 8008b94:	4626      	mov	r6, r4
 8008b96:	2b2a      	cmp	r3, #42	; 0x2a
 8008b98:	f104 0401 	add.w	r4, r4, #1
 8008b9c:	d0f9      	beq.n	8008b92 <lo_pattern_match+0x4e>
 8008b9e:	b1c3      	cbz	r3, 8008bd2 <lo_pattern_match+0x8e>
 8008ba0:	2b3f      	cmp	r3, #63	; 0x3f
 8008ba2:	d00b      	beq.n	8008bbc <lo_pattern_match+0x78>
 8008ba4:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8008ba8:	2a5b      	cmp	r2, #91	; 0x5b
 8008baa:	d007      	beq.n	8008bbc <lo_pattern_match+0x78>
 8008bac:	462a      	mov	r2, r5
 8008bae:	4615      	mov	r5, r2
 8008bb0:	f812 0b01 	ldrb.w	r0, [r2], #1
 8008bb4:	2800      	cmp	r0, #0
 8008bb6:	d079      	beq.n	8008cac <lo_pattern_match+0x168>
 8008bb8:	4283      	cmp	r3, r0
 8008bba:	d1f8      	bne.n	8008bae <lo_pattern_match+0x6a>
 8008bbc:	4628      	mov	r0, r5
 8008bbe:	7803      	ldrb	r3, [r0, #0]
 8008bc0:	3501      	adds	r5, #1
 8008bc2:	b90b      	cbnz	r3, 8008bc8 <lo_pattern_match+0x84>
 8008bc4:	2000      	movs	r0, #0
 8008bc6:	e071      	b.n	8008cac <lo_pattern_match+0x168>
 8008bc8:	4631      	mov	r1, r6
 8008bca:	f7ff ffbb 	bl	8008b44 <lo_pattern_match>
 8008bce:	2800      	cmp	r0, #0
 8008bd0:	d0f4      	beq.n	8008bbc <lo_pattern_match+0x78>
 8008bd2:	2001      	movs	r0, #1
 8008bd4:	e06a      	b.n	8008cac <lo_pattern_match+0x168>
 8008bd6:	2a00      	cmp	r2, #0
 8008bd8:	d0f4      	beq.n	8008bc4 <lo_pattern_match+0x80>
 8008bda:	4623      	mov	r3, r4
 8008bdc:	3501      	adds	r5, #1
 8008bde:	e7b4      	b.n	8008b4a <lo_pattern_match+0x6>
 8008be0:	7859      	ldrb	r1, [r3, #1]
 8008be2:	2921      	cmp	r1, #33	; 0x21
 8008be4:	bf06      	itte	eq
 8008be6:	1c9c      	addeq	r4, r3, #2
 8008be8:	2701      	moveq	r7, #1
 8008bea:	2700      	movne	r7, #0
 8008bec:	4621      	mov	r1, r4
 8008bee:	1c8e      	adds	r6, r1, #2
 8008bf0:	f816 3c02 	ldrb.w	r3, [r6, #-2]
 8008bf4:	4634      	mov	r4, r6
 8008bf6:	1e71      	subs	r1, r6, #1
 8008bf8:	b913      	cbnz	r3, 8008c00 <lo_pattern_match+0xbc>
 8008bfa:	460c      	mov	r4, r1
 8008bfc:	4618      	mov	r0, r3
 8008bfe:	e018      	b.n	8008c32 <lo_pattern_match+0xee>
 8008c00:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8008c04:	2800      	cmp	r0, #0
 8008c06:	d051      	beq.n	8008cac <lo_pattern_match+0x168>
 8008c08:	282d      	cmp	r0, #45	; 0x2d
 8008c0a:	d11b      	bne.n	8008c44 <lo_pattern_match+0x100>
 8008c0c:	7820      	ldrb	r0, [r4, #0]
 8008c0e:	2800      	cmp	r0, #0
 8008c10:	d04c      	beq.n	8008cac <lo_pattern_match+0x168>
 8008c12:	285d      	cmp	r0, #93	; 0x5d
 8008c14:	d009      	beq.n	8008c2a <lo_pattern_match+0xe6>
 8008c16:	429a      	cmp	r2, r3
 8008c18:	d005      	beq.n	8008c26 <lo_pattern_match+0xe2>
 8008c1a:	4290      	cmp	r0, r2
 8008c1c:	d003      	beq.n	8008c26 <lo_pattern_match+0xe2>
 8008c1e:	429a      	cmp	r2, r3
 8008c20:	d91d      	bls.n	8008c5e <lo_pattern_match+0x11a>
 8008c22:	4290      	cmp	r0, r2
 8008c24:	d91b      	bls.n	8008c5e <lo_pattern_match+0x11a>
 8008c26:	2001      	movs	r0, #1
 8008c28:	e003      	b.n	8008c32 <lo_pattern_match+0xee>
 8008c2a:	429a      	cmp	r2, r3
 8008c2c:	bf34      	ite	cc
 8008c2e:	2000      	movcc	r0, #0
 8008c30:	2001      	movcs	r0, #1
 8008c32:	4287      	cmp	r7, r0
 8008c34:	d0c6      	beq.n	8008bc4 <lo_pattern_match+0x80>
 8008c36:	f814 0b01 	ldrb.w	r0, [r4], #1
 8008c3a:	2800      	cmp	r0, #0
 8008c3c:	d036      	beq.n	8008cac <lo_pattern_match+0x168>
 8008c3e:	285d      	cmp	r0, #93	; 0x5d
 8008c40:	d1f9      	bne.n	8008c36 <lo_pattern_match+0xf2>
 8008c42:	e7ca      	b.n	8008bda <lo_pattern_match+0x96>
 8008c44:	285d      	cmp	r0, #93	; 0x5d
 8008c46:	d104      	bne.n	8008c52 <lo_pattern_match+0x10e>
 8008c48:	1ad3      	subs	r3, r2, r3
 8008c4a:	4258      	negs	r0, r3
 8008c4c:	460c      	mov	r4, r1
 8008c4e:	4158      	adcs	r0, r3
 8008c50:	e7ef      	b.n	8008c32 <lo_pattern_match+0xee>
 8008c52:	4290      	cmp	r0, r2
 8008c54:	d001      	beq.n	8008c5a <lo_pattern_match+0x116>
 8008c56:	429a      	cmp	r2, r3
 8008c58:	d1c9      	bne.n	8008bee <lo_pattern_match+0xaa>
 8008c5a:	460c      	mov	r4, r1
 8008c5c:	e7e3      	b.n	8008c26 <lo_pattern_match+0xe2>
 8008c5e:	3602      	adds	r6, #2
 8008c60:	e7c6      	b.n	8008bf0 <lo_pattern_match+0xac>
 8008c62:	463c      	mov	r4, r7
 8008c64:	e789      	b.n	8008b7a <lo_pattern_match+0x36>
 8008c66:	2b2c      	cmp	r3, #44	; 0x2c
 8008c68:	d10f      	bne.n	8008c8a <lo_pattern_match+0x146>
 8008c6a:	4639      	mov	r1, r7
 8008c6c:	f7ff ff6a 	bl	8008b44 <lo_pattern_match>
 8008c70:	2800      	cmp	r0, #0
 8008c72:	d1ae      	bne.n	8008bd2 <lo_pattern_match+0x8e>
 8008c74:	f814 3b01 	ldrb.w	r3, [r4], #1
 8008c78:	b1c3      	cbz	r3, 8008cac <lo_pattern_match+0x168>
 8008c7a:	462a      	mov	r2, r5
 8008c7c:	4610      	mov	r0, r2
 8008c7e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8008c82:	2b00      	cmp	r3, #0
 8008c84:	d1ef      	bne.n	8008c66 <lo_pattern_match+0x122>
 8008c86:	4605      	mov	r5, r0
 8008c88:	e7a7      	b.n	8008bda <lo_pattern_match+0x96>
 8008c8a:	2b7d      	cmp	r3, #125	; 0x7d
 8008c8c:	7802      	ldrb	r2, [r0, #0]
 8008c8e:	d104      	bne.n	8008c9a <lo_pattern_match+0x156>
 8008c90:	7823      	ldrb	r3, [r4, #0]
 8008c92:	4313      	orrs	r3, r2
 8008c94:	d09d      	beq.n	8008bd2 <lo_pattern_match+0x8e>
 8008c96:	1e45      	subs	r5, r0, #1
 8008c98:	e79f      	b.n	8008bda <lo_pattern_match+0x96>
 8008c9a:	4293      	cmp	r3, r2
 8008c9c:	d107      	bne.n	8008cae <lo_pattern_match+0x16a>
 8008c9e:	1c42      	adds	r2, r0, #1
 8008ca0:	7840      	ldrb	r0, [r0, #1]
 8008ca2:	2800      	cmp	r0, #0
 8008ca4:	d1ea      	bne.n	8008c7c <lo_pattern_match+0x138>
 8008ca6:	7873      	ldrb	r3, [r6, #1]
 8008ca8:	2b00      	cmp	r3, #0
 8008caa:	d0e7      	beq.n	8008c7c <lo_pattern_match+0x138>
 8008cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008cae:	4623      	mov	r3, r4
 8008cb0:	781a      	ldrb	r2, [r3, #0]
 8008cb2:	461c      	mov	r4, r3
 8008cb4:	2a2c      	cmp	r2, #44	; 0x2c
 8008cb6:	f103 0301 	add.w	r3, r3, #1
 8008cba:	d004      	beq.n	8008cc6 <lo_pattern_match+0x182>
 8008cbc:	2a7d      	cmp	r2, #125	; 0x7d
 8008cbe:	d081      	beq.n	8008bc4 <lo_pattern_match+0x80>
 8008cc0:	2a00      	cmp	r2, #0
 8008cc2:	d1f5      	bne.n	8008cb0 <lo_pattern_match+0x16c>
 8008cc4:	e7d9      	b.n	8008c7a <lo_pattern_match+0x136>
 8008cc6:	461c      	mov	r4, r3
 8008cc8:	e7d7      	b.n	8008c7a <lo_pattern_match+0x136>

08008cca <osc::string_validate(void*, unsigned int)>:
 8008cca:	4602      	mov	r2, r0
 8008ccc:	2300      	movs	r3, #0
 8008cce:	428b      	cmp	r3, r1
 8008cd0:	d005      	beq.n	8008cde <osc::string_validate(void*, unsigned int)+0x14>
 8008cd2:	5cd0      	ldrb	r0, [r2, r3]
 8008cd4:	b930      	cbnz	r0, 8008ce4 <osc::string_validate(void*, unsigned int)+0x1a>
 8008cd6:	f023 0003 	bic.w	r0, r3, #3
 8008cda:	3004      	adds	r0, #4
 8008cdc:	d104      	bne.n	8008ce8 <osc::string_validate(void*, unsigned int)+0x1e>
 8008cde:	f06f 0001 	mvn.w	r0, #1
 8008ce2:	4770      	bx	lr
 8008ce4:	3301      	adds	r3, #1
 8008ce6:	e7f2      	b.n	8008cce <osc::string_validate(void*, unsigned int)+0x4>
 8008ce8:	4281      	cmp	r1, r0
 8008cea:	d305      	bcc.n	8008cf8 <osc::string_validate(void*, unsigned int)+0x2e>
 8008cec:	4283      	cmp	r3, r0
 8008cee:	d208      	bcs.n	8008d02 <osc::string_validate(void*, unsigned int)+0x38>
 8008cf0:	5cd1      	ldrb	r1, [r2, r3]
 8008cf2:	b921      	cbnz	r1, 8008cfe <osc::string_validate(void*, unsigned int)+0x34>
 8008cf4:	3301      	adds	r3, #1
 8008cf6:	e7f9      	b.n	8008cec <osc::string_validate(void*, unsigned int)+0x22>
 8008cf8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008cfc:	4770      	bx	lr
 8008cfe:	f06f 0002 	mvn.w	r0, #2
 8008d02:	4770      	bx	lr

08008d04 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 8008d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008d08:	2300      	movs	r3, #0
 8008d0a:	460d      	mov	r5, r1
 8008d0c:	e9c0 1200 	strd	r1, r2, [r0]
 8008d10:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008d14:	7203      	strb	r3, [r0, #8]
 8008d16:	6183      	str	r3, [r0, #24]
 8008d18:	4604      	mov	r4, r0
 8008d1a:	4611      	mov	r1, r2
 8008d1c:	4628      	mov	r0, r5
 8008d1e:	4617      	mov	r7, r2
 8008d20:	f7ff ffd3 	bl	8008cca <osc::string_validate(void*, unsigned int)>
 8008d24:	f1b0 0800 	subs.w	r8, r0, #0
 8008d28:	db25      	blt.n	8008d76 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 8008d2a:	eb05 0608 	add.w	r6, r5, r8
 8008d2e:	4630      	mov	r0, r6
 8008d30:	60e6      	str	r6, [r4, #12]
 8008d32:	eba7 0108 	sub.w	r1, r7, r8
 8008d36:	f7ff ffc8 	bl	8008cca <osc::string_validate(void*, unsigned int)>
 8008d3a:	2800      	cmp	r0, #0
 8008d3c:	db1b      	blt.n	8008d76 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 8008d3e:	f815 3008 	ldrb.w	r3, [r5, r8]
 8008d42:	2b2c      	cmp	r3, #44	; 0x2c
 8008d44:	d117      	bne.n	8008d76 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 8008d46:	7873      	ldrb	r3, [r6, #1]
 8008d48:	2b73      	cmp	r3, #115	; 0x73
 8008d4a:	d001      	beq.n	8008d50 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 8008d4c:	2b62      	cmp	r3, #98	; 0x62
 8008d4e:	d101      	bne.n	8008d54 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 8008d50:	78b3      	ldrb	r3, [r6, #2]
 8008d52:	b983      	cbnz	r3, 8008d76 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 8008d54:	3601      	adds	r6, #1
 8008d56:	4632      	mov	r2, r6
 8008d58:	60e6      	str	r6, [r4, #12]
 8008d5a:	4613      	mov	r3, r2
 8008d5c:	7819      	ldrb	r1, [r3, #0]
 8008d5e:	3201      	adds	r2, #1
 8008d60:	2900      	cmp	r1, #0
 8008d62:	d1fa      	bne.n	8008d5a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 8008d64:	1b9e      	subs	r6, r3, r6
 8008d66:	2301      	movs	r3, #1
 8008d68:	4440      	add	r0, r8
 8008d6a:	4405      	add	r5, r0
 8008d6c:	1a38      	subs	r0, r7, r0
 8008d6e:	6126      	str	r6, [r4, #16]
 8008d70:	6165      	str	r5, [r4, #20]
 8008d72:	61a0      	str	r0, [r4, #24]
 8008d74:	7223      	strb	r3, [r4, #8]
 8008d76:	4620      	mov	r0, r4
 8008d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008d7c <OscSimpleMessage::GetFloat(unsigned int)>:
 8008d7c:	6983      	ldr	r3, [r0, #24]
 8008d7e:	1c4a      	adds	r2, r1, #1
 8008d80:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008d84:	b510      	push	{r4, lr}
 8008d86:	ea4f 0482 	mov.w	r4, r2, lsl #2
 8008d8a:	d309      	bcc.n	8008da0 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 8008d8c:	68c3      	ldr	r3, [r0, #12]
 8008d8e:	5c5b      	ldrb	r3, [r3, r1]
 8008d90:	2b66      	cmp	r3, #102	; 0x66
 8008d92:	d105      	bne.n	8008da0 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 8008d94:	6943      	ldr	r3, [r0, #20]
 8008d96:	4423      	add	r3, r4
 8008d98:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8008d9c:	ba00      	rev	r0, r0
 8008d9e:	bd10      	pop	{r4, pc}
 8008da0:	2000      	movs	r0, #0
 8008da2:	e7fc      	b.n	8008d9e <OscSimpleMessage::GetFloat(unsigned int)+0x22>

08008da4 <OscSimpleMessage::GetInt(unsigned int)>:
 8008da4:	6983      	ldr	r3, [r0, #24]
 8008da6:	1c4a      	adds	r2, r1, #1
 8008da8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008dac:	b510      	push	{r4, lr}
 8008dae:	ea4f 0482 	mov.w	r4, r2, lsl #2
 8008db2:	d309      	bcc.n	8008dc8 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 8008db4:	68c3      	ldr	r3, [r0, #12]
 8008db6:	5c5b      	ldrb	r3, [r3, r1]
 8008db8:	2b69      	cmp	r3, #105	; 0x69
 8008dba:	d105      	bne.n	8008dc8 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 8008dbc:	6943      	ldr	r3, [r0, #20]
 8008dbe:	4423      	add	r3, r4
 8008dc0:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8008dc4:	ba00      	rev	r0, r0
 8008dc6:	bd10      	pop	{r4, pc}
 8008dc8:	2000      	movs	r0, #0
 8008dca:	e7fc      	b.n	8008dc6 <OscSimpleMessage::GetInt(unsigned int)+0x22>

08008dcc <OscSimpleMessage::GetBlob(unsigned int)>:
 8008dcc:	b510      	push	{r4, lr}
 8008dce:	68cb      	ldr	r3, [r1, #12]
 8008dd0:	781b      	ldrb	r3, [r3, #0]
 8008dd2:	2b62      	cmp	r3, #98	; 0x62
 8008dd4:	d10a      	bne.n	8008dec <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 8008dd6:	694a      	ldr	r2, [r1, #20]
 8008dd8:	6989      	ldr	r1, [r1, #24]
 8008dda:	6813      	ldr	r3, [r2, #0]
 8008ddc:	ba1b      	rev	r3, r3
 8008dde:	1d1c      	adds	r4, r3, #4
 8008de0:	428c      	cmp	r4, r1
 8008de2:	d803      	bhi.n	8008dec <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 8008de4:	3204      	adds	r2, #4
 8008de6:	6002      	str	r2, [r0, #0]
 8008de8:	6043      	str	r3, [r0, #4]
 8008dea:	bd10      	pop	{r4, pc}
 8008dec:	2300      	movs	r3, #0
 8008dee:	6003      	str	r3, [r0, #0]
 8008df0:	e7fa      	b.n	8008de8 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

08008df2 <osc::string_size(char const*)>:
 8008df2:	4602      	mov	r2, r0
 8008df4:	4613      	mov	r3, r2
 8008df6:	7819      	ldrb	r1, [r3, #0]
 8008df8:	3201      	adds	r2, #1
 8008dfa:	2900      	cmp	r1, #0
 8008dfc:	d1fa      	bne.n	8008df4 <osc::string_size(char const*)+0x2>
 8008dfe:	1a18      	subs	r0, r3, r0
 8008e00:	f020 0003 	bic.w	r0, r0, #3
 8008e04:	3004      	adds	r0, #4
 8008e06:	4770      	bx	lr

08008e08 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 8008e08:	b570      	push	{r4, r5, r6, lr}
 8008e0a:	2400      	movs	r4, #0
 8008e0c:	480a      	ldr	r0, [pc, #40]	; (8008e38 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 8008e0e:	1f16      	subs	r6, r2, #4
 8008e10:	1985      	adds	r5, r0, r6
 8008e12:	5584      	strb	r4, [r0, r6]
 8008e14:	706c      	strb	r4, [r5, #1]
 8008e16:	70ac      	strb	r4, [r5, #2]
 8008e18:	70ec      	strb	r4, [r5, #3]
 8008e1a:	4604      	mov	r4, r0
 8008e1c:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008e20:	f800 5b01 	strb.w	r5, [r0], #1
 8008e24:	2d00      	cmp	r5, #0
 8008e26:	d1f9      	bne.n	8008e1c <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 8008e28:	212c      	movs	r1, #44	; 0x2c
 8008e2a:	54a1      	strb	r1, [r4, r2]
 8008e2c:	4422      	add	r2, r4
 8008e2e:	7053      	strb	r3, [r2, #1]
 8008e30:	7095      	strb	r5, [r2, #2]
 8008e32:	70d5      	strb	r5, [r2, #3]
 8008e34:	bd70      	pop	{r4, r5, r6, pc}
 8008e36:	bf00      	nop
 8008e38:	20000504 	andcs	r0, r0, r4, lsl #10

08008e3c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 8008e3c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008e40:	4605      	mov	r5, r0
 8008e42:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 8008e46:	460e      	mov	r6, r1
 8008e48:	4617      	mov	r7, r2
 8008e4a:	4698      	mov	r8, r3
 8008e4c:	f1ba 0f00 	cmp.w	sl, #0
 8008e50:	d112      	bne.n	8008e78 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 8008e52:	4648      	mov	r0, r9
 8008e54:	f7ff ffcd 	bl	8008df2 <osc::string_size(char const*)>
 8008e58:	4604      	mov	r4, r0
 8008e5a:	4602      	mov	r2, r0
 8008e5c:	4653      	mov	r3, sl
 8008e5e:	4649      	mov	r1, r9
 8008e60:	4628      	mov	r0, r5
 8008e62:	3404      	adds	r4, #4
 8008e64:	f7ff ffd0 	bl	8008e08 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8008e68:	463b      	mov	r3, r7
 8008e6a:	4905      	ldr	r1, [pc, #20]	; (8008e80 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 8008e6c:	f8cd 8000 	str.w	r8, [sp]
 8008e70:	b2a2      	uxth	r2, r4
 8008e72:	b2f0      	uxtb	r0, r6
 8008e74:	f003 fa3e 	bl	800c2f4 <udp_send>
 8008e78:	4628      	mov	r0, r5
 8008e7a:	b002      	add	sp, #8
 8008e7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e80:	20000504 	andcs	r0, r0, r4, lsl #10

08008e84 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 8008e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e88:	b085      	sub	sp, #20
 8008e8a:	460f      	mov	r7, r1
 8008e8c:	4699      	mov	r9, r3
 8008e8e:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 8008e92:	4606      	mov	r6, r0
 8008e94:	4690      	mov	r8, r2
 8008e96:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8008e9a:	b35b      	cbz	r3, 8008ef4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 8008e9c:	781b      	ldrb	r3, [r3, #0]
 8008e9e:	2b73      	cmp	r3, #115	; 0x73
 8008ea0:	d128      	bne.n	8008ef4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 8008ea2:	4608      	mov	r0, r1
 8008ea4:	9303      	str	r3, [sp, #12]
 8008ea6:	f7ff ffa4 	bl	8008df2 <osc::string_size(char const*)>
 8008eaa:	4604      	mov	r4, r0
 8008eac:	4650      	mov	r0, sl
 8008eae:	f7ff ffa0 	bl	8008df2 <osc::string_size(char const*)>
 8008eb2:	4622      	mov	r2, r4
 8008eb4:	1825      	adds	r5, r4, r0
 8008eb6:	9b03      	ldr	r3, [sp, #12]
 8008eb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008eba:	4630      	mov	r0, r6
 8008ebc:	f7ff ffa4 	bl	8008e08 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8008ec0:	2200      	movs	r2, #0
 8008ec2:	4b0e      	ldr	r3, [pc, #56]	; (8008efc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 8008ec4:	3403      	adds	r4, #3
 8008ec6:	1959      	adds	r1, r3, r5
 8008ec8:	555a      	strb	r2, [r3, r5]
 8008eca:	f105 0b04 	add.w	fp, r5, #4
 8008ece:	704a      	strb	r2, [r1, #1]
 8008ed0:	708a      	strb	r2, [r1, #2]
 8008ed2:	70ca      	strb	r2, [r1, #3]
 8008ed4:	4423      	add	r3, r4
 8008ed6:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008eda:	f803 2f01 	strb.w	r2, [r3, #1]!
 8008ede:	2a00      	cmp	r2, #0
 8008ee0:	d1f9      	bne.n	8008ed6 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 8008ee2:	4643      	mov	r3, r8
 8008ee4:	4905      	ldr	r1, [pc, #20]	; (8008efc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 8008ee6:	f8cd 9000 	str.w	r9, [sp]
 8008eea:	fa1f f28b 	uxth.w	r2, fp
 8008eee:	b2f8      	uxtb	r0, r7
 8008ef0:	f003 fa00 	bl	800c2f4 <udp_send>
 8008ef4:	4630      	mov	r0, r6
 8008ef6:	b005      	add	sp, #20
 8008ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008efc:	20000504 	andcs	r0, r0, r4, lsl #10

08008f00 <LightSet::Blackout(bool)>:
 8008f00:	4770      	bx	lr

08008f02 <DmxSend::~DmxSend()>:
 8008f02:	4770      	bx	lr

08008f04 <DmxSend::Start(unsigned int)>:
 8008f04:	2301      	movs	r3, #1
 8008f06:	b410      	push	{r4}
 8008f08:	4c08      	ldr	r4, [pc, #32]	; (8008f2c <DmxSend::Start(unsigned int)+0x28>)
 8008f0a:	fa03 f001 	lsl.w	r0, r3, r1
 8008f0e:	7822      	ldrb	r2, [r4, #0]
 8008f10:	ea30 0c02 	bics.w	ip, r0, r2
 8008f14:	d007      	beq.n	8008f26 <DmxSend::Start(unsigned int)+0x22>
 8008f16:	4302      	orrs	r2, r0
 8008f18:	4805      	ldr	r0, [pc, #20]	; (8008f30 <DmxSend::Start(unsigned int)+0x2c>)
 8008f1a:	7022      	strb	r2, [r4, #0]
 8008f1c:	6800      	ldr	r0, [r0, #0]
 8008f1e:	2200      	movs	r2, #0
 8008f20:	bc10      	pop	{r4}
 8008f22:	f000 bc65 	b.w	80097f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f26:	bc10      	pop	{r4}
 8008f28:	4770      	bx	lr
 8008f2a:	bf00      	nop
 8008f2c:	20000704 	andcs	r0, r0, r4, lsl #14
 8008f30:	20000b44 	andcs	r0, r0, r4, asr #22

08008f34 <DmxSend::Stop(unsigned int)>:
 8008f34:	2201      	movs	r2, #1
 8008f36:	b410      	push	{r4}
 8008f38:	4809      	ldr	r0, [pc, #36]	; (8008f60 <DmxSend::Stop(unsigned int)+0x2c>)
 8008f3a:	408a      	lsls	r2, r1
 8008f3c:	7803      	ldrb	r3, [r0, #0]
 8008f3e:	ea03 0402 	and.w	r4, r3, r2
 8008f42:	439a      	bics	r2, r3
 8008f44:	d109      	bne.n	8008f5a <DmxSend::Stop(unsigned int)+0x26>
 8008f46:	ea23 0304 	bic.w	r3, r3, r4
 8008f4a:	7003      	strb	r3, [r0, #0]
 8008f4c:	2300      	movs	r3, #0
 8008f4e:	4805      	ldr	r0, [pc, #20]	; (8008f64 <DmxSend::Stop(unsigned int)+0x30>)
 8008f50:	461a      	mov	r2, r3
 8008f52:	6800      	ldr	r0, [r0, #0]
 8008f54:	bc10      	pop	{r4}
 8008f56:	f000 bc4b 	b.w	80097f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f5a:	bc10      	pop	{r4}
 8008f5c:	4770      	bx	lr
 8008f5e:	bf00      	nop
 8008f60:	20000704 	andcs	r0, r0, r4, lsl #14
 8008f64:	20000b44 	andcs	r0, r0, r4, asr #22

08008f68 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 8008f68:	b11b      	cbz	r3, 8008f72 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 8008f6a:	4802      	ldr	r0, [pc, #8]	; (8008f74 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 8008f6c:	6800      	ldr	r0, [r0, #0]
 8008f6e:	f000 bda5 	b.w	8009abc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 8008f72:	4770      	bx	lr
 8008f74:	20000b44 	andcs	r0, r0, r4, asr #22

08008f78 <DmxSend::Print()>:
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	4c0e      	ldr	r4, [pc, #56]	; (8008fb4 <DmxSend::Print()+0x3c>)
 8008f7c:	480e      	ldr	r0, [pc, #56]	; (8008fb8 <DmxSend::Print()+0x40>)
 8008f7e:	f7ff f8e7 	bl	8008150 <printf>
 8008f82:	6823      	ldr	r3, [r4, #0]
 8008f84:	480d      	ldr	r0, [pc, #52]	; (8008fbc <DmxSend::Print()+0x44>)
 8008f86:	6819      	ldr	r1, [r3, #0]
 8008f88:	f7ff f8e2 	bl	8008150 <printf>
 8008f8c:	6823      	ldr	r3, [r4, #0]
 8008f8e:	480c      	ldr	r0, [pc, #48]	; (8008fc0 <DmxSend::Print()+0x48>)
 8008f90:	6859      	ldr	r1, [r3, #4]
 8008f92:	f7ff f8dd 	bl	8008150 <printf>
 8008f96:	6823      	ldr	r3, [r4, #0]
 8008f98:	490a      	ldr	r1, [pc, #40]	; (8008fc4 <DmxSend::Print()+0x4c>)
 8008f9a:	689b      	ldr	r3, [r3, #8]
 8008f9c:	480a      	ldr	r0, [pc, #40]	; (8008fc8 <DmxSend::Print()+0x50>)
 8008f9e:	fbb1 f1f3 	udiv	r1, r1, r3
 8008fa2:	f7ff f8d5 	bl	8008150 <printf>
 8008fa6:	6823      	ldr	r3, [r4, #0]
 8008fa8:	4808      	ldr	r0, [pc, #32]	; (8008fcc <DmxSend::Print()+0x54>)
 8008faa:	8a19      	ldrh	r1, [r3, #16]
 8008fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008fb0:	f7ff b8ce 	b.w	8008150 <printf>
 8008fb4:	20000b44 	andcs	r0, r0, r4, asr #22
 8008fb8:	08010fbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp}
 8008fbc:	08010fc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sl, fp}
 8008fc0:	08010fdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, fp}
 8008fc4:	000f4240 	andeq	r4, pc, r0, asr #4
 8008fc8:	08010ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp}
 8008fcc:	08011004 	stmdaeq	r1, {r2, ip}

08008fd0 <DmxSend::~DmxSend()>:
 8008fd0:	b510      	push	{r4, lr}
 8008fd2:	4604      	mov	r4, r0
 8008fd4:	f005 fe54 	bl	800ec80 <operator delete(void*)>
 8008fd8:	4620      	mov	r0, r4
 8008fda:	bd10      	pop	{r4, pc}

08008fdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8008fdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008fde:	88c5      	ldrh	r5, [r0, #6]
 8008fe0:	8886      	ldrh	r6, [r0, #4]
 8008fe2:	42b5      	cmp	r5, r6
 8008fe4:	d216      	bcs.n	8009014 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8008fe6:	4604      	mov	r4, r0
 8008fe8:	6800      	ldr	r0, [r0, #0]
 8008fea:	4428      	add	r0, r5
 8008fec:	1b75      	subs	r5, r6, r5
 8008fee:	7a26      	ldrb	r6, [r4, #8]
 8008ff0:	b923      	cbnz	r3, 8008ffc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8008ff2:	b926      	cbnz	r6, 8008ffe <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8008ff4:	9200      	str	r2, [sp, #0]
 8008ff6:	460b      	mov	r3, r1
 8008ff8:	4a09      	ldr	r2, [pc, #36]	; (8009020 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8008ffa:	e003      	b.n	8009004 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8008ffc:	b166      	cbz	r6, 8009018 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8008ffe:	460b      	mov	r3, r1
 8009000:	9200      	str	r2, [sp, #0]
 8009002:	4a08      	ldr	r2, [pc, #32]	; (8009024 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009004:	4629      	mov	r1, r5
 8009006:	f7ff f8b3 	bl	8008170 <snprintf>
 800900a:	4285      	cmp	r5, r0
 800900c:	bfa2      	ittt	ge
 800900e:	88e3      	ldrhge	r3, [r4, #6]
 8009010:	181b      	addge	r3, r3, r0
 8009012:	80e3      	strhge	r3, [r4, #6]
 8009014:	b002      	add	sp, #8
 8009016:	bd70      	pop	{r4, r5, r6, pc}
 8009018:	9200      	str	r2, [sp, #0]
 800901a:	460b      	mov	r3, r1
 800901c:	4a02      	ldr	r2, [pc, #8]	; (8009028 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800901e:	e7f1      	b.n	8009004 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009020:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 8009024:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 8009028:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}

0800902c <DmxParams::DmxParams(DmxParamsStore*)>:
 800902c:	6001      	str	r1, [r0, #0]
 800902e:	2100      	movs	r1, #0
 8009030:	4a03      	ldr	r2, [pc, #12]	; (8009040 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 8009032:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8009036:	f64f 7228 	movw	r2, #65320	; 0xff28
 800903a:	8182      	strh	r2, [r0, #12]
 800903c:	4770      	bx	lr
 800903e:	bf00      	nop
 8009040:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

08009044 <DmxParams::Load()>:
 8009044:	b508      	push	{r3, lr}
 8009046:	2300      	movs	r3, #0
 8009048:	4601      	mov	r1, r0
 800904a:	6043      	str	r3, [r0, #4]
 800904c:	6800      	ldr	r0, [r0, #0]
 800904e:	b120      	cbz	r0, 800905a <DmxParams::Load()+0x16>
 8009050:	6803      	ldr	r3, [r0, #0]
 8009052:	3104      	adds	r1, #4
 8009054:	68db      	ldr	r3, [r3, #12]
 8009056:	4798      	blx	r3
 8009058:	2001      	movs	r0, #1
 800905a:	bd08      	pop	{r3, pc}

0800905c <DmxParams::Load(char const*, unsigned int)>:
 800905c:	6803      	ldr	r3, [r0, #0]
 800905e:	b1d3      	cbz	r3, 8009096 <DmxParams::Load(char const*, unsigned int)+0x3a>
 8009060:	2300      	movs	r3, #0
 8009062:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009064:	460d      	mov	r5, r1
 8009066:	4616      	mov	r6, r2
 8009068:	4604      	mov	r4, r0
 800906a:	6043      	str	r3, [r0, #4]
 800906c:	4602      	mov	r2, r0
 800906e:	490a      	ldr	r1, [pc, #40]	; (8009098 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 8009070:	4668      	mov	r0, sp
 8009072:	f005 f8f3 	bl	800e25c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009076:	4632      	mov	r2, r6
 8009078:	4629      	mov	r1, r5
 800907a:	4668      	mov	r0, sp
 800907c:	f005 f8f2 	bl	800e264 <ReadConfigFile::Read(char const*, unsigned int)>
 8009080:	4621      	mov	r1, r4
 8009082:	f851 0b04 	ldr.w	r0, [r1], #4
 8009086:	6803      	ldr	r3, [r0, #0]
 8009088:	689b      	ldr	r3, [r3, #8]
 800908a:	4798      	blx	r3
 800908c:	4668      	mov	r0, sp
 800908e:	f005 f8e8 	bl	800e262 <ReadConfigFile::~ReadConfigFile()>
 8009092:	b002      	add	sp, #8
 8009094:	bd70      	pop	{r4, r5, r6, pc}
 8009096:	4770      	bx	lr
 8009098:	08009169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, pc}

0800909c <DmxParams::callbackFunction(char const*)>:
 800909c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800909e:	460d      	mov	r5, r1
 80090a0:	4604      	mov	r4, r0
 80090a2:	492d      	ldr	r1, [pc, #180]	; (8009158 <DmxParams::callbackFunction(char const*)+0xbc>)
 80090a4:	4628      	mov	r0, r5
 80090a6:	f10d 0206 	add.w	r2, sp, #6
 80090aa:	f005 f968 	bl	800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80090ae:	b988      	cbnz	r0, 80090d4 <DmxParams::callbackFunction(char const*)+0x38>
 80090b0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80090b4:	6863      	ldr	r3, [r4, #4]
 80090b6:	2a5b      	cmp	r2, #91	; 0x5b
 80090b8:	d907      	bls.n	80090ca <DmxParams::callbackFunction(char const*)+0x2e>
 80090ba:	2ab0      	cmp	r2, #176	; 0xb0
 80090bc:	d005      	beq.n	80090ca <DmxParams::callbackFunction(char const*)+0x2e>
 80090be:	8122      	strh	r2, [r4, #8]
 80090c0:	f043 0301 	orr.w	r3, r3, #1
 80090c4:	6063      	str	r3, [r4, #4]
 80090c6:	b003      	add	sp, #12
 80090c8:	bd30      	pop	{r4, r5, pc}
 80090ca:	22b0      	movs	r2, #176	; 0xb0
 80090cc:	f023 0301 	bic.w	r3, r3, #1
 80090d0:	8122      	strh	r2, [r4, #8]
 80090d2:	e7f7      	b.n	80090c4 <DmxParams::callbackFunction(char const*)+0x28>
 80090d4:	4628      	mov	r0, r5
 80090d6:	4921      	ldr	r1, [pc, #132]	; (800915c <DmxParams::callbackFunction(char const*)+0xc0>)
 80090d8:	f10d 0206 	add.w	r2, sp, #6
 80090dc:	f005 f94f 	bl	800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80090e0:	b968      	cbnz	r0, 80090fe <DmxParams::callbackFunction(char const*)+0x62>
 80090e2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80090e6:	6863      	ldr	r3, [r4, #4]
 80090e8:	2a0c      	cmp	r2, #12
 80090ea:	bf93      	iteet	ls
 80090ec:	220c      	movls	r2, #12
 80090ee:	8162      	strhhi	r2, [r4, #10]
 80090f0:	f043 0302 	orrhi.w	r3, r3, #2
 80090f4:	8162      	strhls	r2, [r4, #10]
 80090f6:	bf98      	it	ls
 80090f8:	f023 0302 	bicls.w	r3, r3, #2
 80090fc:	e7e2      	b.n	80090c4 <DmxParams::callbackFunction(char const*)+0x28>
 80090fe:	4628      	mov	r0, r5
 8009100:	4917      	ldr	r1, [pc, #92]	; (8009160 <DmxParams::callbackFunction(char const*)+0xc4>)
 8009102:	f10d 0205 	add.w	r2, sp, #5
 8009106:	f005 f958 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800910a:	b950      	cbnz	r0, 8009122 <DmxParams::callbackFunction(char const*)+0x86>
 800910c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009110:	6863      	ldr	r3, [r4, #4]
 8009112:	2a28      	cmp	r2, #40	; 0x28
 8009114:	7322      	strb	r2, [r4, #12]
 8009116:	bf14      	ite	ne
 8009118:	f043 0304 	orrne.w	r3, r3, #4
 800911c:	f023 0304 	biceq.w	r3, r3, #4
 8009120:	e7d0      	b.n	80090c4 <DmxParams::callbackFunction(char const*)+0x28>
 8009122:	4628      	mov	r0, r5
 8009124:	490f      	ldr	r1, [pc, #60]	; (8009164 <DmxParams::callbackFunction(char const*)+0xc8>)
 8009126:	f10d 0206 	add.w	r2, sp, #6
 800912a:	f005 f928 	bl	800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800912e:	2800      	cmp	r0, #0
 8009130:	d1c9      	bne.n	80090c6 <DmxParams::callbackFunction(char const*)+0x2a>
 8009132:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009136:	6863      	ldr	r3, [r4, #4]
 8009138:	1e91      	subs	r1, r2, #2
 800913a:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800913e:	bf2f      	iteee	cs
 8009140:	22ff      	movcs	r2, #255	; 0xff
 8009142:	0852      	lsrcc	r2, r2, #1
 8009144:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 8009148:	7362      	strbcc	r2, [r4, #13]
 800914a:	bf32      	itee	cc
 800914c:	f043 0308 	orrcc.w	r3, r3, #8
 8009150:	7362      	strbcs	r2, [r4, #13]
 8009152:	f023 0308 	biccs.w	r3, r3, #8
 8009156:	e7b5      	b.n	80090c4 <DmxParams::callbackFunction(char const*)+0x28>
 8009158:	0801104c 	stmdaeq	r1, {r2, r3, r6, ip}
 800915c:	08011070 	stmdaeq	r1, {r4, r5, r6, ip}
 8009160:	08011063 	stmdaeq	r1, {r0, r1, r5, r6, ip}
 8009164:	08011057 	stmdaeq	r1, {r0, r1, r2, r4, r6, ip}

08009168 <DmxParams::staticCallbackFunction(void*, char const*)>:
 8009168:	f7ff bf98 	b.w	800909c <DmxParams::callbackFunction(char const*)>

0800916c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800916c:	b570      	push	{r4, r5, r6, lr}
 800916e:	4604      	mov	r4, r0
 8009170:	4615      	mov	r5, r2
 8009172:	461e      	mov	r6, r3
 8009174:	b086      	sub	sp, #24
 8009176:	3004      	adds	r0, #4
 8009178:	b361      	cbz	r1, 80091d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 800917a:	220a      	movs	r2, #10
 800917c:	f005 fe43 	bl	800ee06 <memmove>
 8009180:	462a      	mov	r2, r5
 8009182:	4633      	mov	r3, r6
 8009184:	4931      	ldr	r1, [pc, #196]	; (800924c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 8009186:	a803      	add	r0, sp, #12
 8009188:	f004 ffc8 	bl	800e11c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800918c:	6863      	ldr	r3, [r4, #4]
 800918e:	8922      	ldrh	r2, [r4, #8]
 8009190:	492f      	ldr	r1, [pc, #188]	; (8009250 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 8009192:	f003 0301 	and.w	r3, r3, #1
 8009196:	a803      	add	r0, sp, #12
 8009198:	f7ff ff20 	bl	8008fdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800919c:	6863      	ldr	r3, [r4, #4]
 800919e:	492d      	ldr	r1, [pc, #180]	; (8009254 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 80091a0:	8962      	ldrh	r2, [r4, #10]
 80091a2:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80091a6:	a803      	add	r0, sp, #12
 80091a8:	f7ff ff18 	bl	8008fdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80091ac:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 80091b0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80091b4:	42a9      	cmp	r1, r5
 80091b6:	d222      	bcs.n	80091fe <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 80091b8:	9803      	ldr	r0, [sp, #12]
 80091ba:	1a6d      	subs	r5, r5, r1
 80091bc:	4408      	add	r0, r1
 80091be:	6861      	ldr	r1, [r4, #4]
 80091c0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80091c4:	0749      	lsls	r1, r1, #29
 80091c6:	7b23      	ldrb	r3, [r4, #12]
 80091c8:	d40b      	bmi.n	80091e2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 80091ca:	b95a      	cbnz	r2, 80091e4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 80091cc:	9300      	str	r3, [sp, #0]
 80091ce:	4a22      	ldr	r2, [pc, #136]	; (8009258 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 80091d0:	4b22      	ldr	r3, [pc, #136]	; (800925c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 80091d2:	e00a      	b.n	80091ea <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 80091d4:	6823      	ldr	r3, [r4, #0]
 80091d6:	4601      	mov	r1, r0
 80091d8:	681a      	ldr	r2, [r3, #0]
 80091da:	4618      	mov	r0, r3
 80091dc:	68d2      	ldr	r2, [r2, #12]
 80091de:	4790      	blx	r2
 80091e0:	e7ce      	b.n	8009180 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 80091e2:	b37a      	cbz	r2, 8009244 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 80091e4:	9300      	str	r3, [sp, #0]
 80091e6:	4a1e      	ldr	r2, [pc, #120]	; (8009260 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 80091e8:	4b1c      	ldr	r3, [pc, #112]	; (800925c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 80091ea:	4629      	mov	r1, r5
 80091ec:	f7fe ffc0 	bl	8008170 <snprintf>
 80091f0:	4285      	cmp	r5, r0
 80091f2:	bfa2      	ittt	ge
 80091f4:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80091f8:	18c0      	addge	r0, r0, r3
 80091fa:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80091fe:	7b62      	ldrb	r2, [r4, #13]
 8009200:	6863      	ldr	r3, [r4, #4]
 8009202:	3201      	adds	r2, #1
 8009204:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8009208:	4916      	ldr	r1, [pc, #88]	; (8009264 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800920a:	0052      	lsls	r2, r2, #1
 800920c:	a803      	add	r0, sp, #12
 800920e:	f7ff fee5 	bl	8008fdc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009212:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009216:	b17b      	cbz	r3, 8009238 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 8009218:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800921c:	9b03      	ldr	r3, [sp, #12]
 800921e:	4413      	add	r3, r2
 8009220:	227d      	movs	r2, #125	; 0x7d
 8009222:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009226:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800922a:	9903      	ldr	r1, [sp, #12]
 800922c:	54ca      	strb	r2, [r1, r3]
 800922e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009232:	3301      	adds	r3, #1
 8009234:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009238:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800923c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800923e:	601a      	str	r2, [r3, #0]
 8009240:	b006      	add	sp, #24
 8009242:	bd70      	pop	{r4, r5, r6, pc}
 8009244:	9300      	str	r3, [sp, #0]
 8009246:	4a08      	ldr	r2, [pc, #32]	; (8009268 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009248:	4b04      	ldr	r3, [pc, #16]	; (800925c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800924a:	e7ce      	b.n	80091ea <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800924c:	08011079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip}
 8009250:	0801104c 	stmdaeq	r1, {r2, r3, r6, ip}
 8009254:	08011070 	stmdaeq	r1, {r4, r5, r6, ip}
 8009258:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 800925c:	08011063 	stmdaeq	r1, {r0, r1, r5, r6, ip}
 8009260:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 8009264:	08011057 	stmdaeq	r1, {r0, r1, r2, r4, r6, ip}
 8009268:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}

0800926c <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800926c:	b513      	push	{r0, r1, r4, lr}
 800926e:	6804      	ldr	r4, [r0, #0]
 8009270:	b914      	cbnz	r4, 8009278 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009272:	601c      	str	r4, [r3, #0]
 8009274:	b002      	add	sp, #8
 8009276:	bd10      	pop	{r4, pc}
 8009278:	9300      	str	r3, [sp, #0]
 800927a:	4613      	mov	r3, r2
 800927c:	460a      	mov	r2, r1
 800927e:	2100      	movs	r1, #0
 8009280:	f7ff ff74 	bl	800916c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 8009284:	e7f6      	b.n	8009274 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009288 <DmxParams::Set(Dmx*)>:
 8009288:	b538      	push	{r3, r4, r5, lr}
 800928a:	6843      	ldr	r3, [r0, #4]
 800928c:	4604      	mov	r4, r0
 800928e:	07d8      	lsls	r0, r3, #31
 8009290:	460d      	mov	r5, r1
 8009292:	d503      	bpl.n	800929c <DmxParams::Set(Dmx*)+0x14>
 8009294:	4628      	mov	r0, r5
 8009296:	8921      	ldrh	r1, [r4, #8]
 8009298:	f000 fbec 	bl	8009a74 <Dmx::SetDmxBreakTime(unsigned int)>
 800929c:	6863      	ldr	r3, [r4, #4]
 800929e:	0799      	lsls	r1, r3, #30
 80092a0:	d503      	bpl.n	80092aa <DmxParams::Set(Dmx*)+0x22>
 80092a2:	4628      	mov	r0, r5
 80092a4:	8961      	ldrh	r1, [r4, #10]
 80092a6:	f000 fbef 	bl	8009a88 <Dmx::SetDmxMabTime(unsigned int)>
 80092aa:	6863      	ldr	r3, [r4, #4]
 80092ac:	075a      	lsls	r2, r3, #29
 80092ae:	d507      	bpl.n	80092c0 <DmxParams::Set(Dmx*)+0x38>
 80092b0:	7b21      	ldrb	r1, [r4, #12]
 80092b2:	b111      	cbz	r1, 80092ba <DmxParams::Set(Dmx*)+0x32>
 80092b4:	4b08      	ldr	r3, [pc, #32]	; (80092d8 <DmxParams::Set(Dmx*)+0x50>)
 80092b6:	fbb3 f1f1 	udiv	r1, r3, r1
 80092ba:	4628      	mov	r0, r5
 80092bc:	f000 fbaa 	bl	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 80092c0:	6863      	ldr	r3, [r4, #4]
 80092c2:	071b      	lsls	r3, r3, #28
 80092c4:	d507      	bpl.n	80092d6 <DmxParams::Set(Dmx*)+0x4e>
 80092c6:	7b61      	ldrb	r1, [r4, #13]
 80092c8:	4628      	mov	r0, r5
 80092ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80092ce:	3101      	adds	r1, #1
 80092d0:	0049      	lsls	r1, r1, #1
 80092d2:	f000 bbe3 	b.w	8009a9c <Dmx::SetDmxSlots(unsigned short)>
 80092d6:	bd38      	pop	{r3, r4, r5, pc}
 80092d8:	000f4240 	andeq	r4, pc, r0, asr #4

080092dc <DmxParams::Dump()>:
 80092dc:	4770      	bx	lr
	...

080092e0 <USART2_IRQHandler>:
 80092e0:	b510      	push	{r4, lr}
 80092e2:	f3bf 8f5f 	dmb	sy
 80092e6:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 80092ea:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 80092ee:	f013 0f02 	tst.w	r3, #2
 80092f2:	4b74      	ldr	r3, [pc, #464]	; (80094c4 <USART2_IRQHandler+0x1e4>)
 80092f4:	d00e      	beq.n	8009314 <USART2_IRQHandler+0x34>
 80092f6:	f8d2 1800 	ldr.w	r1, [r2, #2048]	; 0x800
 80092fa:	f021 0102 	bic.w	r1, r1, #2
 80092fe:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8009302:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009306:	2200      	movs	r2, #0
 8009308:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800930c:	2202      	movs	r2, #2
 800930e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009312:	bd10      	pop	{r4, pc}
 8009314:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009318:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 800931c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009320:	290a      	cmp	r1, #10
 8009322:	f200 80ca 	bhi.w	80094ba <USART2_IRQHandler+0x1da>
 8009326:	e8df f001 	tbb	[pc, r1]
 800932a:	c810c806 	ldmdagt	r0, {r1, r2, fp, lr, pc}
 800932e:	6d5f482c 	ldclvs	8, cr4, [pc, #-176]	; 8009284 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x18>
 8009332:	00ac9886 	adceq	r9, ip, r6, lsl #17
 8009336:	2108      	movs	r1, #8
 8009338:	701a      	strb	r2, [r3, #0]
 800933a:	2201      	movs	r2, #1
 800933c:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009340:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009344:	f3bf 8f5f 	dmb	sy
 8009348:	e7e3      	b.n	8009312 <USART2_IRQHandler+0x32>
 800934a:	b11a      	cbz	r2, 8009354 <USART2_IRQHandler+0x74>
 800934c:	2acc      	cmp	r2, #204	; 0xcc
 800934e:	d012      	beq.n	8009376 <USART2_IRQHandler+0x96>
 8009350:	2200      	movs	r2, #0
 8009352:	e00d      	b.n	8009370 <USART2_IRQHandler+0x90>
 8009354:	701a      	strb	r2, [r3, #0]
 8009356:	2201      	movs	r2, #1
 8009358:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800935c:	4a5a      	ldr	r2, [pc, #360]	; (80094c8 <USART2_IRQHandler+0x1e8>)
 800935e:	6851      	ldr	r1, [r2, #4]
 8009360:	3101      	adds	r1, #1
 8009362:	6051      	str	r1, [r2, #4]
 8009364:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8009368:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 800936c:	60d1      	str	r1, [r2, #12]
 800936e:	2204      	movs	r2, #4
 8009370:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009374:	e7e6      	b.n	8009344 <USART2_IRQHandler+0x64>
 8009376:	701a      	strb	r2, [r3, #0]
 8009378:	4a54      	ldr	r2, [pc, #336]	; (80094cc <USART2_IRQHandler+0x1ec>)
 800937a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800937e:	2205      	movs	r2, #5
 8009380:	e7f6      	b.n	8009370 <USART2_IRQHandler+0x90>
 8009382:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8009386:	b288      	uxth	r0, r1
 8009388:	541a      	strb	r2, [r3, r0]
 800938a:	1c4a      	adds	r2, r1, #1
 800938c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009390:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009394:	d904      	bls.n	80093a0 <USART2_IRQHandler+0xc0>
 8009396:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800939a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800939e:	e7d7      	b.n	8009350 <USART2_IRQHandler+0x70>
 80093a0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80093a4:	4848      	ldr	r0, [pc, #288]	; (80094c8 <USART2_IRQHandler+0x1e8>)
 80093a6:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 80093aa:	68c3      	ldr	r3, [r0, #12]
 80093ac:	60c1      	str	r1, [r0, #12]
 80093ae:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 80093b2:	3304      	adds	r3, #4
 80093b4:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 80093b8:	e7c4      	b.n	8009344 <USART2_IRQHandler+0x64>
 80093ba:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 80093be:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 80093c2:	541a      	strb	r2, [r3, r0]
 80093c4:	1c41      	adds	r1, r0, #1
 80093c6:	3817      	subs	r0, #23
 80093c8:	b289      	uxth	r1, r1
 80093ca:	4422      	add	r2, r4
 80093cc:	28e7      	cmp	r0, #231	; 0xe7
 80093ce:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80093d2:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 80093d6:	d804      	bhi.n	80093e2 <USART2_IRQHandler+0x102>
 80093d8:	789a      	ldrb	r2, [r3, #2]
 80093da:	428a      	cmp	r2, r1
 80093dc:	d101      	bne.n	80093e2 <USART2_IRQHandler+0x102>
 80093de:	2206      	movs	r2, #6
 80093e0:	e7c6      	b.n	8009370 <USART2_IRQHandler+0x90>
 80093e2:	29ff      	cmp	r1, #255	; 0xff
 80093e4:	d9ae      	bls.n	8009344 <USART2_IRQHandler+0x64>
 80093e6:	e7b3      	b.n	8009350 <USART2_IRQHandler+0x70>
 80093e8:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80093ec:	545a      	strb	r2, [r3, r1]
 80093ee:	3101      	adds	r1, #1
 80093f0:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80093f4:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 80093f8:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 80093fc:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009400:	2207      	movs	r2, #7
 8009402:	e7b5      	b.n	8009370 <USART2_IRQHandler+0x90>
 8009404:	f8b3 0206 	ldrh.w	r0, [r3, #518]	; 0x206
 8009408:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800940c:	545a      	strb	r2, [r3, r1]
 800940e:	1a82      	subs	r2, r0, r2
 8009410:	b292      	uxth	r2, r2
 8009412:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009416:	b912      	cbnz	r2, 800941e <USART2_IRQHandler+0x13e>
 8009418:	785a      	ldrb	r2, [r3, #1]
 800941a:	2a01      	cmp	r2, #1
 800941c:	d001      	beq.n	8009422 <USART2_IRQHandler+0x142>
 800941e:	2200      	movs	r2, #0
 8009420:	e7bb      	b.n	800939a <USART2_IRQHandler+0xba>
 8009422:	3101      	adds	r1, #1
 8009424:	4a2a      	ldr	r2, [pc, #168]	; (80094d0 <USART2_IRQHandler+0x1f0>)
 8009426:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800942a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800942e:	6851      	ldr	r1, [r2, #4]
 8009430:	4a28      	ldr	r2, [pc, #160]	; (80094d4 <USART2_IRQHandler+0x1f4>)
 8009432:	6011      	str	r1, [r2, #0]
 8009434:	e78c      	b.n	8009350 <USART2_IRQHandler+0x70>
 8009436:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800943a:	2aaa      	cmp	r2, #170	; 0xaa
 800943c:	545a      	strb	r2, [r3, r1]
 800943e:	f101 0101 	add.w	r1, r1, #1
 8009442:	b289      	uxth	r1, r1
 8009444:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009448:	d002      	beq.n	8009450 <USART2_IRQHandler+0x170>
 800944a:	2909      	cmp	r1, #9
 800944c:	f47f af7a 	bne.w	8009344 <USART2_IRQHandler+0x64>
 8009450:	2200      	movs	r2, #0
 8009452:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009456:	2209      	movs	r2, #9
 8009458:	e78a      	b.n	8009370 <USART2_IRQHandler+0x90>
 800945a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800945e:	545a      	strb	r2, [r3, r1]
 8009460:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8009464:	3101      	adds	r1, #1
 8009466:	3201      	adds	r2, #1
 8009468:	b292      	uxth	r2, r2
 800946a:	2a0c      	cmp	r2, #12
 800946c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009470:	d002      	beq.n	8009478 <USART2_IRQHandler+0x198>
 8009472:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009476:	e765      	b.n	8009344 <USART2_IRQHandler+0x64>
 8009478:	2200      	movs	r2, #0
 800947a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800947e:	220a      	movs	r2, #10
 8009480:	e776      	b.n	8009370 <USART2_IRQHandler+0x90>
 8009482:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009486:	545a      	strb	r2, [r3, r1]
 8009488:	1c4a      	adds	r2, r1, #1
 800948a:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800948e:	b292      	uxth	r2, r2
 8009490:	3101      	adds	r1, #1
 8009492:	b289      	uxth	r1, r1
 8009494:	2904      	cmp	r1, #4
 8009496:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800949a:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800949e:	f47f af51 	bne.w	8009344 <USART2_IRQHandler+0x64>
 80094a2:	2100      	movs	r1, #0
 80094a4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80094a8:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80094ac:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80094b0:	4b07      	ldr	r3, [pc, #28]	; (80094d0 <USART2_IRQHandler+0x1f0>)
 80094b2:	685a      	ldr	r2, [r3, #4]
 80094b4:	4b07      	ldr	r3, [pc, #28]	; (80094d4 <USART2_IRQHandler+0x1f4>)
 80094b6:	601a      	str	r2, [r3, #0]
 80094b8:	e744      	b.n	8009344 <USART2_IRQHandler+0x64>
 80094ba:	2200      	movs	r2, #0
 80094bc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80094c0:	e756      	b.n	8009370 <USART2_IRQHandler+0x90>
 80094c2:	bf00      	nop
 80094c4:	20000718 	andcs	r0, r0, r8, lsl r7
 80094c8:	20000b34 	andcs	r0, r0, r4, lsr fp
 80094cc:	00cc0001 	sbceq	r0, ip, r1
 80094d0:	e0001000 	and	r1, r0, r0
 80094d4:	20000b48 	andcs	r0, r0, r8, asr #22

080094d8 <TIMER1_IRQHandler>:
 80094d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094da:	f3bf 8f5f 	dmb	sy
 80094de:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80094e2:	691c      	ldr	r4, [r3, #16]
 80094e4:	4e1f      	ldr	r6, [pc, #124]	; (8009564 <TIMER1_IRQHandler+0x8c>)
 80094e6:	07a7      	lsls	r7, r4, #30
 80094e8:	8835      	ldrh	r5, [r6, #0]
 80094ea:	d518      	bpl.n	800951e <TIMER1_IRQHandler+0x46>
 80094ec:	4f1e      	ldr	r7, [pc, #120]	; (8009568 <TIMER1_IRQHandler+0x90>)
 80094ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80094f2:	2203      	movs	r2, #3
 80094f4:	2110      	movs	r1, #16
 80094f6:	4638      	mov	r0, r7
 80094f8:	f005 ff96 	bl	800f428 <gpio_init>
 80094fc:	07ed      	lsls	r5, r5, #31
 80094fe:	d506      	bpl.n	800950e <TIMER1_IRQHandler+0x36>
 8009500:	8833      	ldrh	r3, [r6, #0]
 8009502:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009506:	8033      	strh	r3, [r6, #0]
 8009508:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800950c:	617b      	str	r3, [r7, #20]
 800950e:	4621      	mov	r1, r4
 8009510:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009514:	f006 fa5b 	bl	800f9ce <timer_interrupt_flag_clear>
 8009518:	f3bf 8f5f 	dmb	sy
 800951c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800951e:	0760      	lsls	r0, r4, #29
 8009520:	d509      	bpl.n	8009536 <TIMER1_IRQHandler+0x5e>
 8009522:	05e9      	lsls	r1, r5, #23
 8009524:	d5f3      	bpl.n	800950e <TIMER1_IRQHandler+0x36>
 8009526:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800952a:	2203      	movs	r2, #3
 800952c:	2118      	movs	r1, #24
 800952e:	480e      	ldr	r0, [pc, #56]	; (8009568 <TIMER1_IRQHandler+0x90>)
 8009530:	f005 ff7a 	bl	800f428 <gpio_init>
 8009534:	e7eb      	b.n	800950e <TIMER1_IRQHandler+0x36>
 8009536:	0722      	lsls	r2, r4, #28
 8009538:	d5e9      	bpl.n	800950e <TIMER1_IRQHandler+0x36>
 800953a:	05eb      	lsls	r3, r5, #23
 800953c:	d5e7      	bpl.n	800950e <TIMER1_IRQHandler+0x36>
 800953e:	4b0b      	ldr	r3, [pc, #44]	; (800956c <TIMER1_IRQHandler+0x94>)
 8009540:	2180      	movs	r1, #128	; 0x80
 8009542:	69da      	ldr	r2, [r3, #28]
 8009544:	480a      	ldr	r0, [pc, #40]	; (8009570 <TIMER1_IRQHandler+0x98>)
 8009546:	f022 0201 	bic.w	r2, r2, #1
 800954a:	61da      	str	r2, [r3, #28]
 800954c:	4a09      	ldr	r2, [pc, #36]	; (8009574 <TIMER1_IRQHandler+0x9c>)
 800954e:	629a      	str	r2, [r3, #40]	; 0x28
 8009550:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8009554:	621a      	str	r2, [r3, #32]
 8009556:	69da      	ldr	r2, [r3, #28]
 8009558:	f042 0201 	orr.w	r2, r2, #1
 800955c:	61da      	str	r2, [r3, #28]
 800955e:	f006 fad5 	bl	800fb0c <usart_dma_transmit_config>
 8009562:	e7d4      	b.n	800950e <TIMER1_IRQHandler+0x36>
 8009564:	20000b30 	andcs	r0, r0, r0, lsr fp
 8009568:	40011000 	andmi	r1, r1, r0
 800956c:	40020000 	andmi	r0, r2, r0
 8009570:	40004800 	andmi	r4, r0, r0, lsl #16
 8009574:	20000928 	andcs	r0, r0, r8, lsr #18

08009578 <TIMER2_IRQHandler>:
 8009578:	b508      	push	{r3, lr}
 800957a:	f3bf 8f5f 	dmb	sy
 800957e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009582:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8009586:	078b      	lsls	r3, r1, #30
 8009588:	d50d      	bpl.n	80095a6 <TIMER2_IRQHandler+0x2e>
 800958a:	4b0a      	ldr	r3, [pc, #40]	; (80095b4 <TIMER2_IRQHandler+0x3c>)
 800958c:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009590:	2a04      	cmp	r2, #4
 8009592:	d108      	bne.n	80095a6 <TIMER2_IRQHandler+0x2e>
 8009594:	2200      	movs	r2, #0
 8009596:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800959a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800959e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80095a2:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80095a6:	4804      	ldr	r0, [pc, #16]	; (80095b8 <TIMER2_IRQHandler+0x40>)
 80095a8:	f006 fa11 	bl	800f9ce <timer_interrupt_flag_clear>
 80095ac:	f3bf 8f5f 	dmb	sy
 80095b0:	bd08      	pop	{r3, pc}
 80095b2:	bf00      	nop
 80095b4:	20000718 	andcs	r0, r0, r8, lsl r7
 80095b8:	40000400 	andmi	r0, r0, r0, lsl #8

080095bc <TIMER3_IRQHandler>:
 80095bc:	b508      	push	{r3, lr}
 80095be:	f3bf 8f5f 	dmb	sy
 80095c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80095c6:	4804      	ldr	r0, [pc, #16]	; (80095d8 <TIMER3_IRQHandler+0x1c>)
 80095c8:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 80095cc:	f006 f9ff 	bl	800f9ce <timer_interrupt_flag_clear>
 80095d0:	f3bf 8f5f 	dmb	sy
 80095d4:	bd08      	pop	{r3, pc}
 80095d6:	bf00      	nop
 80095d8:	40000800 	andmi	r0, r0, r0, lsl #16

080095dc <TIMER6_IRQHandler>:
 80095dc:	b508      	push	{r3, lr}
 80095de:	f3bf 8f5f 	dmb	sy
 80095e2:	4b07      	ldr	r3, [pc, #28]	; (8009600 <TIMER6_IRQHandler+0x24>)
 80095e4:	4807      	ldr	r0, [pc, #28]	; (8009604 <TIMER6_IRQHandler+0x28>)
 80095e6:	685a      	ldr	r2, [r3, #4]
 80095e8:	6899      	ldr	r1, [r3, #8]
 80095ea:	1a52      	subs	r2, r2, r1
 80095ec:	601a      	str	r2, [r3, #0]
 80095ee:	685a      	ldr	r2, [r3, #4]
 80095f0:	2101      	movs	r1, #1
 80095f2:	609a      	str	r2, [r3, #8]
 80095f4:	f006 f9eb 	bl	800f9ce <timer_interrupt_flag_clear>
 80095f8:	f3bf 8f5f 	dmb	sy
 80095fc:	bd08      	pop	{r3, pc}
 80095fe:	bf00      	nop
 8009600:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009604:	40001400 	andmi	r1, r0, r0, lsl #8

08009608 <Dmx::ClearData(unsigned int)>:
 8009608:	f44f 7301 	mov.w	r3, #516	; 0x204
 800960c:	b510      	push	{r4, lr}
 800960e:	2400      	movs	r4, #0
 8009610:	4a08      	ldr	r2, [pc, #32]	; (8009634 <Dmx::ClearData(unsigned int)+0x2c>)
 8009612:	fb03 2301 	mla	r3, r3, r1, r2
 8009616:	f203 2002 	addw	r0, r3, #514	; 0x202
 800961a:	f823 4b02 	strh.w	r4, [r3], #2
 800961e:	4283      	cmp	r3, r0
 8009620:	d1fb      	bne.n	800961a <Dmx::ClearData(unsigned int)+0x12>
 8009622:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009626:	fb03 2201 	mla	r2, r3, r1, r2
 800962a:	f240 2301 	movw	r3, #513	; 0x201
 800962e:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8009632:	bd10      	pop	{r4, pc}
 8009634:	20000928 	andcs	r0, r0, r8, lsr #18

08009638 <Dmx::StartData(unsigned int, unsigned int)>:
 8009638:	b5f0      	push	{r4, r5, r6, r7, lr}
 800963a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800963e:	6943      	ldr	r3, [r0, #20]
 8009640:	460c      	mov	r4, r1
 8009642:	4615      	mov	r5, r2
 8009644:	b085      	sub	sp, #20
 8009646:	2b00      	cmp	r3, #0
 8009648:	d16a      	bne.n	8009720 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800964a:	4e48      	ldr	r6, [pc, #288]	; (800976c <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800964c:	8834      	ldrh	r4, [r6, #0]
 800964e:	2c00      	cmp	r4, #0
 8009650:	d15b      	bne.n	800970a <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 8009652:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8009656:	f005 ff77 	bl	800f548 <rcu_periph_clock_enable>
 800965a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800965e:	f006 f8bf 	bl	800f7e0 <timer_deinit>
 8009662:	236b      	movs	r3, #107	; 0x6b
 8009664:	9300      	str	r3, [sp, #0]
 8009666:	4b42      	ldr	r3, [pc, #264]	; (8009770 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8009668:	4669      	mov	r1, sp
 800966a:	681b      	ldr	r3, [r3, #0]
 800966c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009670:	9302      	str	r3, [sp, #8]
 8009672:	f8ad 4004 	strh.w	r4, [sp, #4]
 8009676:	f8ad 400c 	strh.w	r4, [sp, #12]
 800967a:	f88d 400e 	strb.w	r4, [sp, #14]
 800967e:	f006 f911 	bl	800f8a4 <timer_init>
 8009682:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009686:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800968a:	f006 f9a3 	bl	800f9d4 <timer_flag_clear>
 800968e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009692:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009696:	f006 f99a 	bl	800f9ce <timer_interrupt_flag_clear>
 800969a:	2210      	movs	r2, #16
 800969c:	4621      	mov	r1, r4
 800969e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096a2:	f006 f95c 	bl	800f95e <timer_channel_output_mode_config>
 80096a6:	2210      	movs	r2, #16
 80096a8:	2101      	movs	r1, #1
 80096aa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096ae:	f006 f956 	bl	800f95e <timer_channel_output_mode_config>
 80096b2:	4f30      	ldr	r7, [pc, #192]	; (8009774 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 80096b4:	2210      	movs	r2, #16
 80096b6:	2102      	movs	r1, #2
 80096b8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096bc:	f006 f94f 	bl	800f95e <timer_channel_output_mode_config>
 80096c0:	4622      	mov	r2, r4
 80096c2:	4621      	mov	r1, r4
 80096c4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096c8:	f006 f96f 	bl	800f9aa <timer_channel_output_pulse_value_config>
 80096cc:	2101      	movs	r1, #1
 80096ce:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096d2:	883a      	ldrh	r2, [r7, #0]
 80096d4:	f006 f969 	bl	800f9aa <timer_channel_output_pulse_value_config>
 80096d8:	4b27      	ldr	r3, [pc, #156]	; (8009778 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 80096da:	683a      	ldr	r2, [r7, #0]
 80096dc:	681b      	ldr	r3, [r3, #0]
 80096de:	2102      	movs	r1, #2
 80096e0:	441a      	add	r2, r3
 80096e2:	b292      	uxth	r2, r2
 80096e4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096e8:	f006 f95f 	bl	800f9aa <timer_channel_output_pulse_value_config>
 80096ec:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80096f0:	210e      	movs	r1, #14
 80096f2:	f006 f968 	bl	800f9c6 <timer_interrupt_enable>
 80096f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096fa:	4b20      	ldr	r3, [pc, #128]	; (800977c <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 80096fc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009700:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8009704:	601a      	str	r2, [r3, #0]
 8009706:	f006 f925 	bl	800f954 <timer_enable>
 800970a:	2201      	movs	r2, #1
 800970c:	8831      	ldrh	r1, [r6, #0]
 800970e:	fa02 f305 	lsl.w	r3, r2, r5
 8009712:	430b      	orrs	r3, r1
 8009714:	8033      	strh	r3, [r6, #0]
 8009716:	4b1a      	ldr	r3, [pc, #104]	; (8009780 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8009718:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800971c:	b005      	add	sp, #20
 800971e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009720:	f44f 7204 	mov.w	r2, #528	; 0x210
 8009724:	4b17      	ldr	r3, [pc, #92]	; (8009784 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 8009726:	fb02 3305 	mla	r3, r2, r5, r3
 800972a:	2200      	movs	r2, #0
 800972c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009730:	2107      	movs	r1, #7
 8009732:	4620      	mov	r0, r4
 8009734:	f006 f9f0 	bl	800fb18 <usart_flag_get>
 8009738:	2800      	cmp	r0, #0
 800973a:	d0f9      	beq.n	8009730 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800973c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009740:	4620      	mov	r0, r4
 8009742:	f006 fa0a 	bl	800fb5a <usart_interrupt_flag_clear>
 8009746:	f240 3105 	movw	r1, #773	; 0x305
 800974a:	4620      	mov	r0, r4
 800974c:	f006 f9ec 	bl	800fb28 <usart_interrupt_enable>
 8009750:	2202      	movs	r2, #2
 8009752:	4b0b      	ldr	r3, [pc, #44]	; (8009780 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8009754:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009758:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800975c:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8009760:	f043 0302 	orr.w	r3, r3, #2
 8009764:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8009768:	e7d8      	b.n	800971c <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800976a:	bf00      	nop
 800976c:	20000b30 	andcs	r0, r0, r0, lsr fp
 8009770:	20000008 	andcs	r0, r0, r8
 8009774:	20000010 	andcs	r0, r0, r0, lsl r0
 8009778:	2000000c 	andcs	r0, r0, ip
 800977c:	e000e100 	and	lr, r0, r0, lsl #2
 8009780:	20000b2c 	andcs	r0, r0, ip, lsr #22
 8009784:	20000718 	andcs	r0, r0, r8, lsl r7

08009788 <Dmx::StopData(unsigned int, unsigned int)>:
 8009788:	b538      	push	{r3, r4, r5, lr}
 800978a:	4d16      	ldr	r5, [pc, #88]	; (80097e4 <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 800978c:	4614      	mov	r4, r2
 800978e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8009792:	4603      	mov	r3, r0
 8009794:	4608      	mov	r0, r1
 8009796:	b17a      	cbz	r2, 80097b8 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 8009798:	695b      	ldr	r3, [r3, #20]
 800979a:	b973      	cbnz	r3, 80097ba <Dmx::StopData(unsigned int, unsigned int)+0x32>
 800979c:	2201      	movs	r2, #1
 800979e:	4912      	ldr	r1, [pc, #72]	; (80097e8 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 80097a0:	f104 0308 	add.w	r3, r4, #8
 80097a4:	fa02 f303 	lsl.w	r3, r2, r3
 80097a8:	40a2      	lsls	r2, r4
 80097aa:	4313      	orrs	r3, r2
 80097ac:	880a      	ldrh	r2, [r1, #0]
 80097ae:	4013      	ands	r3, r2
 80097b0:	800b      	strh	r3, [r1, #0]
 80097b2:	2300      	movs	r3, #0
 80097b4:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 80097b8:	bd38      	pop	{r3, r4, r5, pc}
 80097ba:	f240 3105 	movw	r1, #773	; 0x305
 80097be:	f006 f9bf 	bl	800fb40 <usart_interrupt_disable>
 80097c2:	f44f 7204 	mov.w	r2, #528	; 0x210
 80097c6:	4b09      	ldr	r3, [pc, #36]	; (80097ec <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 80097c8:	fb02 3304 	mla	r3, r2, r4, r3
 80097cc:	2200      	movs	r2, #0
 80097ce:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80097d2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80097d6:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80097da:	f023 0302 	bic.w	r3, r3, #2
 80097de:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 80097e2:	e7e6      	b.n	80097b2 <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 80097e4:	20000b2c 	andcs	r0, r0, ip, lsr #22
 80097e8:	20000b30 	andcs	r0, r0, r0, lsr fp
 80097ec:	20000718 	andcs	r0, r0, r8, lsl r7

080097f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 80097f0:	b570      	push	{r4, r5, r6, lr}
 80097f2:	461d      	mov	r5, r3
 80097f4:	6943      	ldr	r3, [r0, #20]
 80097f6:	4606      	mov	r6, r0
 80097f8:	4293      	cmp	r3, r2
 80097fa:	4614      	mov	r4, r2
 80097fc:	d014      	beq.n	8009828 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 80097fe:	6142      	str	r2, [r0, #20]
 8009800:	4910      	ldr	r1, [pc, #64]	; (8009844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8009802:	2200      	movs	r2, #0
 8009804:	f7ff ffc0 	bl	8009788 <Dmx::StopData(unsigned int, unsigned int)>
 8009808:	b934      	cbnz	r4, 8009818 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800980a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800980e:	4b0e      	ldr	r3, [pc, #56]	; (8009848 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8009810:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8009814:	b94d      	cbnz	r5, 800982a <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8009816:	bd70      	pop	{r4, r5, r6, pc}
 8009818:	2c01      	cmp	r4, #1
 800981a:	d1fb      	bne.n	8009814 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800981c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009820:	4b09      	ldr	r3, [pc, #36]	; (8009848 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8009822:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009826:	e7f5      	b.n	8009814 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8009828:	b135      	cbz	r5, 8009838 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800982a:	4630      	mov	r0, r6
 800982c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009830:	2200      	movs	r2, #0
 8009832:	4904      	ldr	r1, [pc, #16]	; (8009844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8009834:	f7ff bf00 	b.w	8009638 <Dmx::StartData(unsigned int, unsigned int)>
 8009838:	462a      	mov	r2, r5
 800983a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800983e:	4901      	ldr	r1, [pc, #4]	; (8009844 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8009840:	f7ff bfa2 	b.w	8009788 <Dmx::StopData(unsigned int, unsigned int)>
 8009844:	40004800 	andmi	r4, r0, r0, lsl #16
 8009848:	40010000 	andmi	r0, r1, r0

0800984c <Dmx::Dmx()>:
 800984c:	225c      	movs	r2, #92	; 0x5c
 800984e:	230c      	movs	r3, #12
 8009850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009854:	e9c0 2300 	strd	r2, r3, [r0]
 8009858:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800985c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8009860:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009864:	2400      	movs	r4, #0
 8009866:	4605      	mov	r5, r0
 8009868:	8203      	strh	r3, [r0, #16]
 800986a:	4b5f      	ldr	r3, [pc, #380]	; (80099e8 <Dmx::Dmx()+0x19c>)
 800986c:	b08b      	sub	sp, #44	; 0x2c
 800986e:	6018      	str	r0, [r3, #0]
 8009870:	4b5e      	ldr	r3, [pc, #376]	; (80099ec <Dmx::Dmx()+0x1a0>)
 8009872:	2203      	movs	r2, #3
 8009874:	801c      	strh	r4, [r3, #0]
 8009876:	2110      	movs	r1, #16
 8009878:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800987c:	485c      	ldr	r0, [pc, #368]	; (80099f0 <Dmx::Dmx()+0x1a4>)
 800987e:	f005 fdd3 	bl	800f428 <gpio_init>
 8009882:	4621      	mov	r1, r4
 8009884:	4628      	mov	r0, r5
 8009886:	f7ff febf 	bl	8009608 <Dmx::ClearData(unsigned int)>
 800988a:	4b5a      	ldr	r3, [pc, #360]	; (80099f4 <Dmx::Dmx()+0x1a8>)
 800988c:	2201      	movs	r2, #1
 800988e:	4628      	mov	r0, r5
 8009890:	601c      	str	r4, [r3, #0]
 8009892:	4623      	mov	r3, r4
 8009894:	f7ff ffac 	bl	80097f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8009898:	4b57      	ldr	r3, [pc, #348]	; (80099f8 <Dmx::Dmx()+0x1ac>)
 800989a:	4e58      	ldr	r6, [pc, #352]	; (80099fc <Dmx::Dmx()+0x1b0>)
 800989c:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 80098a0:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 80098a4:	f005 fe50 	bl	800f548 <rcu_periph_clock_enable>
 80098a8:	f240 5001 	movw	r0, #1281	; 0x501
 80098ac:	f005 fe4c 	bl	800f548 <rcu_periph_clock_enable>
 80098b0:	4630      	mov	r0, r6
 80098b2:	2101      	movs	r1, #1
 80098b4:	f005 fcb4 	bl	800f220 <dma_deinit>
 80098b8:	4b51      	ldr	r3, [pc, #324]	; (8009a00 <Dmx::Dmx()+0x1b4>)
 80098ba:	2701      	movs	r7, #1
 80098bc:	e9cd 3405 	strd	r3, r4, [sp, #20]
 80098c0:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 80098c4:	aa03      	add	r2, sp, #12
 80098c6:	9307      	str	r3, [sp, #28]
 80098c8:	4b4e      	ldr	r3, [pc, #312]	; (8009a04 <Dmx::Dmx()+0x1b8>)
 80098ca:	4639      	mov	r1, r7
 80098cc:	e9cd 3403 	strd	r3, r4, [sp, #12]
 80098d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80098d4:	9308      	str	r3, [sp, #32]
 80098d6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80098da:	4630      	mov	r0, r6
 80098dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80098e0:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 80098e4:	f005 fcb8 	bl	800f258 <dma_init>
 80098e8:	4639      	mov	r1, r7
 80098ea:	4630      	mov	r0, r6
 80098ec:	f005 fcee 	bl	800f2cc <dma_circulation_disable>
 80098f0:	4639      	mov	r1, r7
 80098f2:	4630      	mov	r0, r6
 80098f4:	f005 fcfa 	bl	800f2ec <dma_memory_to_memory_disable>
 80098f8:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 80098fc:	f240 7001 	movw	r0, #1793	; 0x701
 8009900:	f005 fe22 	bl	800f548 <rcu_periph_clock_enable>
 8009904:	4630      	mov	r0, r6
 8009906:	f005 ff6b 	bl	800f7e0 <timer_deinit>
 800990a:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800990e:	236b      	movs	r3, #107	; 0x6b
 8009910:	4630      	mov	r0, r6
 8009912:	a903      	add	r1, sp, #12
 8009914:	9303      	str	r3, [sp, #12]
 8009916:	f8ad 4010 	strh.w	r4, [sp, #16]
 800991a:	f8cd 9014 	str.w	r9, [sp, #20]
 800991e:	f8ad 4018 	strh.w	r4, [sp, #24]
 8009922:	f88d 401a 	strb.w	r4, [sp, #26]
 8009926:	f005 ffbd 	bl	800f8a4 <timer_init>
 800992a:	4649      	mov	r1, r9
 800992c:	4630      	mov	r0, r6
 800992e:	f006 f851 	bl	800f9d4 <timer_flag_clear>
 8009932:	4649      	mov	r1, r9
 8009934:	4630      	mov	r0, r6
 8009936:	f006 f84a 	bl	800f9ce <timer_interrupt_flag_clear>
 800993a:	4621      	mov	r1, r4
 800993c:	4630      	mov	r0, r6
 800993e:	2210      	movs	r2, #16
 8009940:	f006 f80d 	bl	800f95e <timer_channel_output_mode_config>
 8009944:	4639      	mov	r1, r7
 8009946:	4630      	mov	r0, r6
 8009948:	2210      	movs	r2, #16
 800994a:	f006 f808 	bl	800f95e <timer_channel_output_mode_config>
 800994e:	4630      	mov	r0, r6
 8009950:	2210      	movs	r2, #16
 8009952:	2102      	movs	r1, #2
 8009954:	f006 f803 	bl	800f95e <timer_channel_output_mode_config>
 8009958:	2210      	movs	r2, #16
 800995a:	2103      	movs	r1, #3
 800995c:	4630      	mov	r0, r6
 800995e:	f005 fffe 	bl	800f95e <timer_channel_output_mode_config>
 8009962:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8009966:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009a08 <Dmx::Dmx()+0x1bc>
 800996a:	4630      	mov	r0, r6
 800996c:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 8009970:	f8c8 3000 	str.w	r3, [r8]
 8009974:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 8009978:	f005 ffec 	bl	800f954 <timer_enable>
 800997c:	f240 7005 	movw	r0, #1797	; 0x705
 8009980:	f005 fde2 	bl	800f548 <rcu_periph_clock_enable>
 8009984:	4630      	mov	r0, r6
 8009986:	f005 ff2b 	bl	800f7e0 <timer_deinit>
 800998a:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800998e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009992:	f242 7310 	movw	r3, #10000	; 0x2710
 8009996:	4630      	mov	r0, r6
 8009998:	a903      	add	r1, sp, #12
 800999a:	9305      	str	r3, [sp, #20]
 800999c:	f005 ff82 	bl	800f8a4 <timer_init>
 80099a0:	4649      	mov	r1, r9
 80099a2:	4630      	mov	r0, r6
 80099a4:	f006 f816 	bl	800f9d4 <timer_flag_clear>
 80099a8:	4649      	mov	r1, r9
 80099aa:	4630      	mov	r0, r6
 80099ac:	f006 f80f 	bl	800f9ce <timer_interrupt_flag_clear>
 80099b0:	4639      	mov	r1, r7
 80099b2:	4630      	mov	r0, r6
 80099b4:	f006 f807 	bl	800f9c6 <timer_interrupt_enable>
 80099b8:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 80099bc:	4630      	mov	r0, r6
 80099be:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 80099c2:	f8c8 3004 	str.w	r3, [r8, #4]
 80099c6:	f005 ffc5 	bl	800f954 <timer_enable>
 80099ca:	2302      	movs	r3, #2
 80099cc:	2208      	movs	r2, #8
 80099ce:	9300      	str	r3, [sp, #0]
 80099d0:	490e      	ldr	r1, [pc, #56]	; (8009a0c <Dmx::Dmx()+0x1c0>)
 80099d2:	4623      	mov	r3, r4
 80099d4:	480e      	ldr	r0, [pc, #56]	; (8009a10 <Dmx::Dmx()+0x1c4>)
 80099d6:	f006 fb35 	bl	8010044 <gd32_uart_begin>
 80099da:	2380      	movs	r3, #128	; 0x80
 80099dc:	4628      	mov	r0, r5
 80099de:	f8c8 3004 	str.w	r3, [r8, #4]
 80099e2:	b00b      	add	sp, #44	; 0x2c
 80099e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80099e8:	20000b44 	andcs	r0, r0, r4, asr #22
 80099ec:	20000b30 	andcs	r0, r0, r0, lsr fp
 80099f0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80099f4:	20000b2c 	andcs	r0, r0, ip, lsr #22
 80099f8:	20000718 	andcs	r0, r0, r8, lsl r7
 80099fc:	40020000 	andmi	r0, r2, r0
 8009a00:	20000928 	andcs	r0, r0, r8, lsr #18
 8009a04:	40004804 	andmi	r4, r0, r4, lsl #16
 8009a08:	e000e100 	and	lr, r0, r0, lsl #2
 8009a0c:	0003d090 	muleq	r3, r0, r0
 8009a10:	40004800 	andmi	r4, r0, r0, lsl #16

08009a14 <Dmx::SetDmxPeriodTime(unsigned int)>:
 8009a14:	4b13      	ldr	r3, [pc, #76]	; (8009a64 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8009a16:	b570      	push	{r4, r5, r6, lr}
 8009a18:	60c1      	str	r1, [r0, #12]
 8009a1a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8009a1e:	232c      	movs	r3, #44	; 0x2c
 8009a20:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8009a24:	4d10      	ldr	r5, [pc, #64]	; (8009a68 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8009a26:	4c11      	ldr	r4, [pc, #68]	; (8009a6c <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8009a28:	4358      	muls	r0, r3
 8009a2a:	682a      	ldr	r2, [r5, #0]
 8009a2c:	6823      	ldr	r3, [r4, #0]
 8009a2e:	4413      	add	r3, r2
 8009a30:	4403      	add	r3, r0
 8009a32:	42b3      	cmp	r3, r6
 8009a34:	d908      	bls.n	8009a48 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8009a36:	2ab0      	cmp	r2, #176	; 0xb0
 8009a38:	4613      	mov	r3, r2
 8009a3a:	bf28      	it	cs
 8009a3c:	23b0      	movcs	r3, #176	; 0xb0
 8009a3e:	220c      	movs	r2, #12
 8009a40:	602b      	str	r3, [r5, #0]
 8009a42:	4413      	add	r3, r2
 8009a44:	6022      	str	r2, [r4, #0]
 8009a46:	4403      	add	r3, r0
 8009a48:	4a09      	ldr	r2, [pc, #36]	; (8009a70 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8009a4a:	b109      	cbz	r1, 8009a50 <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>
 8009a4c:	428b      	cmp	r3, r1
 8009a4e:	d907      	bls.n	8009a60 <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>
 8009a50:	f240 41b4 	movw	r1, #1204	; 0x4b4
 8009a54:	332c      	adds	r3, #44	; 0x2c
 8009a56:	428b      	cmp	r3, r1
 8009a58:	bf2c      	ite	cs
 8009a5a:	6013      	strcs	r3, [r2, #0]
 8009a5c:	6011      	strcc	r1, [r2, #0]
 8009a5e:	e000      	b.n	8009a62 <Dmx::SetDmxPeriodTime(unsigned int)+0x4e>
 8009a60:	6011      	str	r1, [r2, #0]
 8009a62:	bd70      	pop	{r4, r5, r6, pc}
 8009a64:	20000928 	andcs	r0, r0, r8, lsr #18
 8009a68:	20000010 	andcs	r0, r0, r0, lsl r0
 8009a6c:	2000000c 	andcs	r0, r0, ip
 8009a70:	20000008 	andcs	r0, r0, r8

08009a74 <Dmx::SetDmxBreakTime(unsigned int)>:
 8009a74:	295c      	cmp	r1, #92	; 0x5c
 8009a76:	bf38      	it	cc
 8009a78:	215c      	movcc	r1, #92	; 0x5c
 8009a7a:	4b02      	ldr	r3, [pc, #8]	; (8009a84 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8009a7c:	6019      	str	r1, [r3, #0]
 8009a7e:	68c1      	ldr	r1, [r0, #12]
 8009a80:	f7ff bfc8 	b.w	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009a84:	20000010 	andcs	r0, r0, r0, lsl r0

08009a88 <Dmx::SetDmxMabTime(unsigned int)>:
 8009a88:	290c      	cmp	r1, #12
 8009a8a:	bf38      	it	cc
 8009a8c:	210c      	movcc	r1, #12
 8009a8e:	4b02      	ldr	r3, [pc, #8]	; (8009a98 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8009a90:	6019      	str	r1, [r3, #0]
 8009a92:	68c1      	ldr	r1, [r0, #12]
 8009a94:	f7ff bfbe 	b.w	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009a98:	2000000c 	andcs	r0, r0, ip

08009a9c <Dmx::SetDmxSlots(unsigned short)>:
 8009a9c:	1e8b      	subs	r3, r1, #2
 8009a9e:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8009aa2:	d809      	bhi.n	8009ab8 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 8009aa4:	6983      	ldr	r3, [r0, #24]
 8009aa6:	8201      	strh	r1, [r0, #16]
 8009aa8:	b11b      	cbz	r3, 8009ab2 <Dmx::SetDmxSlots(unsigned short)+0x16>
 8009aaa:	4299      	cmp	r1, r3
 8009aac:	bf94      	ite	ls
 8009aae:	6181      	strls	r1, [r0, #24]
 8009ab0:	6183      	strhi	r3, [r0, #24]
 8009ab2:	68c1      	ldr	r1, [r0, #12]
 8009ab4:	f7ff bfae 	b.w	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009ab8:	4770      	bx	lr
	...

08009abc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 8009abc:	b4f0      	push	{r4, r5, r6, r7}
 8009abe:	8a04      	ldrh	r4, [r0, #16]
 8009ac0:	4d11      	ldr	r5, [pc, #68]	; (8009b08 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8009ac2:	42a3      	cmp	r3, r4
 8009ac4:	bf28      	it	cs
 8009ac6:	4623      	movcs	r3, r4
 8009ac8:	f44f 7401 	mov.w	r4, #516	; 0x204
 8009acc:	434c      	muls	r4, r1
 8009ace:	1c5f      	adds	r7, r3, #1
 8009ad0:	192e      	adds	r6, r5, r4
 8009ad2:	f892 f000 	pld	[r2]
 8009ad6:	3401      	adds	r4, #1
 8009ad8:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 8009adc:	442c      	add	r4, r5
 8009ade:	18d6      	adds	r6, r2, r3
 8009ae0:	4296      	cmp	r6, r2
 8009ae2:	d004      	beq.n	8009aee <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 8009ae4:	f812 5b01 	ldrb.w	r5, [r2], #1
 8009ae8:	f804 5b01 	strb.w	r5, [r4], #1
 8009aec:	e7f8      	b.n	8009ae0 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 8009aee:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8009af2:	698a      	ldr	r2, [r1, #24]
 8009af4:	429a      	cmp	r2, r3
 8009af6:	d004      	beq.n	8009b02 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 8009af8:	bcf0      	pop	{r4, r5, r6, r7}
 8009afa:	618b      	str	r3, [r1, #24]
 8009afc:	68c1      	ldr	r1, [r0, #12]
 8009afe:	f7ff bf89 	b.w	8009a14 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009b02:	bcf0      	pop	{r4, r5, r6, r7}
 8009b04:	4770      	bx	lr
 8009b06:	bf00      	nop
 8009b08:	20000928 	andcs	r0, r0, r8, lsr #18

08009b0c <RemoteConfig::HandleList()>:
 8009b0c:	2212      	movs	r2, #18
 8009b0e:	6803      	ldr	r3, [r0, #0]
 8009b10:	492f      	ldr	r1, [pc, #188]	; (8009bd0 <RemoteConfig::HandleList()+0xc4>)
 8009b12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b16:	fb02 1103 	mla	r1, r2, r3, r1
 8009b1a:	220c      	movs	r2, #12
 8009b1c:	4604      	mov	r4, r0
 8009b1e:	6843      	ldr	r3, [r0, #4]
 8009b20:	482c      	ldr	r0, [pc, #176]	; (8009bd4 <RemoteConfig::HandleList()+0xc8>)
 8009b22:	4e2d      	ldr	r6, [pc, #180]	; (8009bd8 <RemoteConfig::HandleList()+0xcc>)
 8009b24:	fb02 0003 	mla	r0, r2, r3, r0
 8009b28:	4b2c      	ldr	r3, [pc, #176]	; (8009bdc <RemoteConfig::HandleList()+0xd0>)
 8009b2a:	4f2d      	ldr	r7, [pc, #180]	; (8009be0 <RemoteConfig::HandleList()+0xd4>)
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	6835      	ldr	r5, [r6, #0]
 8009b30:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8009b34:	f897 9009 	ldrb.w	r9, [r7, #9]
 8009b38:	fa5f f38c 	uxtb.w	r3, ip
 8009b3c:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8009b40:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8009b44:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009b48:	b089      	sub	sp, #36	; 0x24
 8009b4a:	3507      	adds	r5, #7
 8009b4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8009b50:	f1b9 0f00 	cmp.w	r9, #0
 8009b54:	d020      	beq.n	8009b98 <RemoteConfig::HandleList()+0x8c>
 8009b56:	b2d2      	uxtb	r2, r2
 8009b58:	3709      	adds	r7, #9
 8009b5a:	9201      	str	r2, [sp, #4]
 8009b5c:	fa5f f28c 	uxtb.w	r2, ip
 8009b60:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8009b64:	9200      	str	r2, [sp, #0]
 8009b66:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009b6a:	4628      	mov	r0, r5
 8009b6c:	e9cd 8705 	strd	r8, r7, [sp, #20]
 8009b70:	4a1c      	ldr	r2, [pc, #112]	; (8009be4 <RemoteConfig::HandleList()+0xd8>)
 8009b72:	f8cd e008 	str.w	lr, [sp, #8]
 8009b76:	f7fe fafb 	bl	8008170 <snprintf>
 8009b7a:	8ba3      	ldrh	r3, [r4, #28]
 8009b7c:	2b05      	cmp	r3, #5
 8009b7e:	d11b      	bne.n	8009bb8 <RemoteConfig::HandleList()+0xac>
 8009b80:	f642 1305 	movw	r3, #10501	; 0x2905
 8009b84:	9300      	str	r3, [sp, #0]
 8009b86:	69a3      	ldr	r3, [r4, #24]
 8009b88:	b282      	uxth	r2, r0
 8009b8a:	4629      	mov	r1, r5
 8009b8c:	7d20      	ldrb	r0, [r4, #20]
 8009b8e:	f002 fbb1 	bl	800c2f4 <udp_send>
 8009b92:	b009      	add	sp, #36	; 0x24
 8009b94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b98:	b2d2      	uxtb	r2, r2
 8009b9a:	9201      	str	r2, [sp, #4]
 8009b9c:	fa5f f28c 	uxtb.w	r2, ip
 8009ba0:	e9cd 0804 	strd	r0, r8, [sp, #16]
 8009ba4:	e9cd e102 	strd	lr, r1, [sp, #8]
 8009ba8:	9200      	str	r2, [sp, #0]
 8009baa:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009bae:	4628      	mov	r0, r5
 8009bb0:	4a0d      	ldr	r2, [pc, #52]	; (8009be8 <RemoteConfig::HandleList()+0xdc>)
 8009bb2:	f7fe fadd 	bl	8008170 <snprintf>
 8009bb6:	e7e0      	b.n	8009b7a <RemoteConfig::HandleList()+0x6e>
 8009bb8:	2b06      	cmp	r3, #6
 8009bba:	d1ea      	bne.n	8009b92 <RemoteConfig::HandleList()+0x86>
 8009bbc:	6833      	ldr	r3, [r6, #0]
 8009bbe:	799b      	ldrb	r3, [r3, #6]
 8009bc0:	2b2a      	cmp	r3, #42	; 0x2a
 8009bc2:	d1e6      	bne.n	8009b92 <RemoteConfig::HandleList()+0x86>
 8009bc4:	f642 1305 	movw	r3, #10501	; 0x2905
 8009bc8:	9300      	str	r3, [sp, #0]
 8009bca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009bce:	e7db      	b.n	8009b88 <RemoteConfig::HandleList()+0x7c>
 8009bd0:	0801113b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, ip}
 8009bd4:	080111dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, ip}
 8009bd8:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009bdc:	20009488 	andcs	r9, r0, r8, lsl #9
 8009be0:	20000b50 	andcs	r0, r0, r0, asr fp
 8009be4:	08011084 	stmdaeq	r1, {r2, r7, ip}
 8009be8:	0801109d 	stmdaeq	r1, {r0, r2, r3, r4, r7, ip}

08009bec <RemoteConfig::HandleDisplayGet()>:
 8009bec:	8b83      	ldrh	r3, [r0, #28]
 8009bee:	2b08      	cmp	r3, #8
 8009bf0:	d11b      	bne.n	8009c2a <RemoteConfig::HandleDisplayGet()+0x3e>
 8009bf2:	4b0e      	ldr	r3, [pc, #56]	; (8009c2c <RemoteConfig::HandleDisplayGet()+0x40>)
 8009bf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009bf6:	681b      	ldr	r3, [r3, #0]
 8009bf8:	4d0d      	ldr	r5, [pc, #52]	; (8009c30 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009bfa:	7c19      	ldrb	r1, [r3, #16]
 8009bfc:	4a0d      	ldr	r2, [pc, #52]	; (8009c34 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009bfe:	4b0e      	ldr	r3, [pc, #56]	; (8009c38 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009c00:	4604      	mov	r4, r0
 8009c02:	2900      	cmp	r1, #0
 8009c04:	bf18      	it	ne
 8009c06:	4613      	movne	r3, r2
 8009c08:	6828      	ldr	r0, [r5, #0]
 8009c0a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009c0e:	4a0b      	ldr	r2, [pc, #44]	; (8009c3c <RemoteConfig::HandleDisplayGet()+0x50>)
 8009c10:	f7fe faae 	bl	8008170 <snprintf>
 8009c14:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c18:	9300      	str	r3, [sp, #0]
 8009c1a:	b282      	uxth	r2, r0
 8009c1c:	69a3      	ldr	r3, [r4, #24]
 8009c1e:	6829      	ldr	r1, [r5, #0]
 8009c20:	7d20      	ldrb	r0, [r4, #20]
 8009c22:	f002 fb67 	bl	800c2f4 <udp_send>
 8009c26:	b003      	add	sp, #12
 8009c28:	bd30      	pop	{r4, r5, pc}
 8009c2a:	4770      	bx	lr
 8009c2c:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 8009c30:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009c34:	080110b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, ip}
 8009c38:	080110b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, ip}
 8009c3c:	080110ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, ip}

08009c40 <RemoteConfig::HandleVersion()>:
 8009c40:	8b83      	ldrh	r3, [r0, #28]
 8009c42:	2b08      	cmp	r3, #8
 8009c44:	d114      	bne.n	8009c70 <RemoteConfig::HandleVersion()+0x30>
 8009c46:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c48:	4d0a      	ldr	r5, [pc, #40]	; (8009c74 <RemoteConfig::HandleVersion()+0x34>)
 8009c4a:	4604      	mov	r4, r0
 8009c4c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009c50:	4b09      	ldr	r3, [pc, #36]	; (8009c78 <RemoteConfig::HandleVersion()+0x38>)
 8009c52:	4a0a      	ldr	r2, [pc, #40]	; (8009c7c <RemoteConfig::HandleVersion()+0x3c>)
 8009c54:	6828      	ldr	r0, [r5, #0]
 8009c56:	f7fe fa8b 	bl	8008170 <snprintf>
 8009c5a:	f642 1305 	movw	r3, #10501	; 0x2905
 8009c5e:	9300      	str	r3, [sp, #0]
 8009c60:	b282      	uxth	r2, r0
 8009c62:	69a3      	ldr	r3, [r4, #24]
 8009c64:	6829      	ldr	r1, [r5, #0]
 8009c66:	7d20      	ldrb	r0, [r4, #20]
 8009c68:	f002 fb44 	bl	800c2f4 <udp_send>
 8009c6c:	b003      	add	sp, #12
 8009c6e:	bd30      	pop	{r4, r5, pc}
 8009c70:	4770      	bx	lr
 8009c72:	bf00      	nop
 8009c74:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009c78:	20009b5e 	andcs	r9, r0, lr, asr fp
 8009c7c:	080110c6 	stmdaeq	r1, {r1, r2, r6, r7, ip}

08009c80 <RemoteConfig::HandleUptime()>:
 8009c80:	7bc3      	ldrb	r3, [r0, #15]
 8009c82:	b1e3      	cbz	r3, 8009cbe <RemoteConfig::HandleUptime()+0x3e>
 8009c84:	4b0e      	ldr	r3, [pc, #56]	; (8009cc0 <RemoteConfig::HandleUptime()+0x40>)
 8009c86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c88:	681a      	ldr	r2, [r3, #0]
 8009c8a:	8b83      	ldrh	r3, [r0, #28]
 8009c8c:	4604      	mov	r4, r0
 8009c8e:	2b07      	cmp	r3, #7
 8009c90:	d113      	bne.n	8009cba <RemoteConfig::HandleUptime()+0x3a>
 8009c92:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009c96:	4d0b      	ldr	r5, [pc, #44]	; (8009cc4 <RemoteConfig::HandleUptime()+0x44>)
 8009c98:	fbb2 f3f3 	udiv	r3, r2, r3
 8009c9c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009ca0:	4a09      	ldr	r2, [pc, #36]	; (8009cc8 <RemoteConfig::HandleUptime()+0x48>)
 8009ca2:	6828      	ldr	r0, [r5, #0]
 8009ca4:	f7fe fa64 	bl	8008170 <snprintf>
 8009ca8:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cac:	9300      	str	r3, [sp, #0]
 8009cae:	b282      	uxth	r2, r0
 8009cb0:	69a3      	ldr	r3, [r4, #24]
 8009cb2:	6829      	ldr	r1, [r5, #0]
 8009cb4:	7d20      	ldrb	r0, [r4, #20]
 8009cb6:	f002 fb1d 	bl	800c2f4 <udp_send>
 8009cba:	b003      	add	sp, #12
 8009cbc:	bd30      	pop	{r4, r5, pc}
 8009cbe:	4770      	bx	lr
 8009cc0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 8009cc4:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009cc8:	080110d1 	stmdaeq	r1, {r0, r4, r6, r7, ip}

08009ccc <RemoteConfig::HandleDisplaySet()>:
 8009ccc:	b538      	push	{r3, r4, r5, lr}
 8009cce:	8b83      	ldrh	r3, [r0, #28]
 8009cd0:	2b09      	cmp	r3, #9
 8009cd2:	d113      	bne.n	8009cfc <RemoteConfig::HandleDisplaySet()+0x30>
 8009cd4:	4b0a      	ldr	r3, [pc, #40]	; (8009d00 <RemoteConfig::HandleDisplaySet()+0x34>)
 8009cd6:	681c      	ldr	r4, [r3, #0]
 8009cd8:	4b0a      	ldr	r3, [pc, #40]	; (8009d04 <RemoteConfig::HandleDisplaySet()+0x38>)
 8009cda:	69a0      	ldr	r0, [r4, #24]
 8009cdc:	681b      	ldr	r3, [r3, #0]
 8009cde:	7a5d      	ldrb	r5, [r3, #9]
 8009ce0:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8009ce4:	4259      	negs	r1, r3
 8009ce6:	4159      	adcs	r1, r3
 8009ce8:	b140      	cbz	r0, 8009cfc <RemoteConfig::HandleDisplaySet()+0x30>
 8009cea:	6803      	ldr	r3, [r0, #0]
 8009cec:	7421      	strb	r1, [r4, #16]
 8009cee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009cf0:	4798      	blx	r3
 8009cf2:	2d30      	cmp	r5, #48	; 0x30
 8009cf4:	bf1e      	ittt	ne
 8009cf6:	4b04      	ldrne	r3, [pc, #16]	; (8009d08 <RemoteConfig::HandleDisplaySet()+0x3c>)
 8009cf8:	681b      	ldrne	r3, [r3, #0]
 8009cfa:	6063      	strne	r3, [r4, #4]
 8009cfc:	bd38      	pop	{r3, r4, r5, pc}
 8009cfe:	bf00      	nop
 8009d00:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 8009d04:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009d08:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

08009d0c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009d0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d10:	2500      	movs	r5, #0
 8009d12:	461f      	mov	r7, r3
 8009d14:	6083      	str	r3, [r0, #8]
 8009d16:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009d1a:	4604      	mov	r4, r0
 8009d1c:	4690      	mov	r8, r2
 8009d1e:	4689      	mov	r9, r1
 8009d20:	f100 0a24 	add.w	sl, r0, #36	; 0x24
 8009d24:	e9c0 1200 	strd	r1, r2, [r0]
 8009d28:	4e12      	ldr	r6, [pc, #72]	; (8009d74 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>)
 8009d2a:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009d2e:	f8df b048 	ldr.w	fp, [pc, #72]	; 8009d78 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>
 8009d32:	60c5      	str	r5, [r0, #12]
 8009d34:	8205      	strh	r5, [r0, #16]
 8009d36:	8385      	strh	r5, [r0, #28]
 8009d38:	6205      	str	r5, [r0, #32]
 8009d3a:	4650      	mov	r0, sl
 8009d3c:	f000 fcc2 	bl	800a6c4 <HttpDaemon::HttpDaemon()>
 8009d40:	4b0e      	ldr	r3, [pc, #56]	; (8009d7c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>)
 8009d42:	4631      	mov	r1, r6
 8009d44:	f8db 0000 	ldr.w	r0, [fp]
 8009d48:	601c      	str	r4, [r3, #0]
 8009d4a:	f002 ffa9 	bl	800cca0 <Network::MacAddressCopyTo(unsigned char*)>
 8009d4e:	f642 1105 	movw	r1, #10501	; 0x2905
 8009d52:	f8db 0000 	ldr.w	r0, [fp]
 8009d56:	f886 9006 	strb.w	r9, [r6, #6]
 8009d5a:	f886 8007 	strb.w	r8, [r6, #7]
 8009d5e:	7237      	strb	r7, [r6, #8]
 8009d60:	7275      	strb	r5, [r6, #9]
 8009d62:	f002 ff97 	bl	800cc94 <Network::Begin(unsigned short)>
 8009d66:	6160      	str	r0, [r4, #20]
 8009d68:	4650      	mov	r0, sl
 8009d6a:	f000 fcc3 	bl	800a6f4 <HttpDaemon::Start()>
 8009d6e:	4620      	mov	r0, r4
 8009d70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d74:	20000b50 	andcs	r0, r0, r0, asr fp
 8009d78:	20009488 	andcs	r9, r0, r8, lsl #9
 8009d7c:	20000b74 	andcs	r0, r0, r4, ror fp

08009d80 <RemoteConfig::GetStringNode() const>:
 8009d80:	2012      	movs	r0, #18
 8009d82:	4b03      	ldr	r3, [pc, #12]	; (8009d90 <RemoteConfig::GetStringNode() const+0x10>)
 8009d84:	799a      	ldrb	r2, [r3, #6]
 8009d86:	4b03      	ldr	r3, [pc, #12]	; (8009d94 <RemoteConfig::GetStringNode() const+0x14>)
 8009d88:	fb00 3002 	mla	r0, r0, r2, r3
 8009d8c:	4770      	bx	lr
 8009d8e:	bf00      	nop
 8009d90:	20000b50 	andcs	r0, r0, r0, asr fp
 8009d94:	0801113b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, ip}

08009d98 <RemoteConfig::GetStringOutput() const>:
 8009d98:	200c      	movs	r0, #12
 8009d9a:	4b03      	ldr	r3, [pc, #12]	; (8009da8 <RemoteConfig::GetStringOutput() const+0x10>)
 8009d9c:	79da      	ldrb	r2, [r3, #7]
 8009d9e:	4b03      	ldr	r3, [pc, #12]	; (8009dac <RemoteConfig::GetStringOutput() const+0x14>)
 8009da0:	fb00 3002 	mla	r0, r0, r2, r3
 8009da4:	4770      	bx	lr
 8009da6:	bf00      	nop
 8009da8:	20000b50 	andcs	r0, r0, r0, asr fp
 8009dac:	080111dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, ip}

08009db0 <RemoteConfig::SetDisable(bool)>:
 8009db0:	b538      	push	{r3, r4, r5, lr}
 8009db2:	4604      	mov	r4, r0
 8009db4:	7b03      	ldrb	r3, [r0, #12]
 8009db6:	b161      	cbz	r1, 8009dd2 <RemoteConfig::SetDisable(bool)+0x22>
 8009db8:	b953      	cbnz	r3, 8009dd0 <RemoteConfig::SetDisable(bool)+0x20>
 8009dba:	4b0c      	ldr	r3, [pc, #48]	; (8009dec <RemoteConfig::SetDisable(bool)+0x3c>)
 8009dbc:	f642 1105 	movw	r1, #10501	; 0x2905
 8009dc0:	6818      	ldr	r0, [r3, #0]
 8009dc2:	f002 ff6a 	bl	800cc9a <Network::End(unsigned short)>
 8009dc6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009dca:	6163      	str	r3, [r4, #20]
 8009dcc:	2301      	movs	r3, #1
 8009dce:	7323      	strb	r3, [r4, #12]
 8009dd0:	bd38      	pop	{r3, r4, r5, pc}
 8009dd2:	2b00      	cmp	r3, #0
 8009dd4:	d0fc      	beq.n	8009dd0 <RemoteConfig::SetDisable(bool)+0x20>
 8009dd6:	4b05      	ldr	r3, [pc, #20]	; (8009dec <RemoteConfig::SetDisable(bool)+0x3c>)
 8009dd8:	460d      	mov	r5, r1
 8009dda:	6818      	ldr	r0, [r3, #0]
 8009ddc:	f642 1105 	movw	r1, #10501	; 0x2905
 8009de0:	f002 ff58 	bl	800cc94 <Network::Begin(unsigned short)>
 8009de4:	7325      	strb	r5, [r4, #12]
 8009de6:	6160      	str	r0, [r4, #20]
 8009de8:	e7f2      	b.n	8009dd0 <RemoteConfig::SetDisable(bool)+0x20>
 8009dea:	bf00      	nop
 8009dec:	20009488 	andcs	r9, r0, r8, lsl #9

08009df0 <RemoteConfig::SetDisplayName(char const*)>:
 8009df0:	2217      	movs	r2, #23
 8009df2:	4809      	ldr	r0, [pc, #36]	; (8009e18 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009df4:	b508      	push	{r3, lr}
 8009df6:	1e4b      	subs	r3, r1, #1
 8009df8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009dfc:	b931      	cbnz	r1, 8009e0c <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009dfe:	f005 f819 	bl	800ee34 <memset>
 8009e02:	2200      	movs	r2, #0
 8009e04:	4b05      	ldr	r3, [pc, #20]	; (8009e1c <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009e06:	f883 2020 	strb.w	r2, [r3, #32]
 8009e0a:	bd08      	pop	{r3, pc}
 8009e0c:	3a01      	subs	r2, #1
 8009e0e:	f800 1b01 	strb.w	r1, [r0], #1
 8009e12:	d1f1      	bne.n	8009df8 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009e14:	e7f5      	b.n	8009e02 <RemoteConfig::SetDisplayName(char const*)+0x12>
 8009e16:	bf00      	nop
 8009e18:	20000b59 	andcs	r0, r0, r9, asr fp
 8009e1c:	20000b50 	andcs	r0, r0, r0, asr fp

08009e20 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009e20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e22:	4604      	mov	r4, r0
 8009e24:	4616      	mov	r6, r2
 8009e26:	460d      	mov	r5, r1
 8009e28:	4f27      	ldr	r7, [pc, #156]	; (8009ec8 <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 8009e2a:	b085      	sub	sp, #20
 8009e2c:	b9a9      	cbnz	r1, 8009e5a <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009e2e:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009e32:	6839      	ldr	r1, [r7, #0]
 8009e34:	aa03      	add	r2, sp, #12
 8009e36:	3105      	adds	r1, #5
 8009e38:	9303      	str	r3, [sp, #12]
 8009e3a:	f000 fbe5 	bl	800a608 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009e3e:	1e03      	subs	r3, r0, #0
 8009e40:	da1b      	bge.n	8009e7a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009e42:	f642 1305 	movw	r3, #10501	; 0x2905
 8009e46:	220b      	movs	r2, #11
 8009e48:	9300      	str	r3, [sp, #0]
 8009e4a:	4920      	ldr	r1, [pc, #128]	; (8009ecc <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009e4c:	69a3      	ldr	r3, [r4, #24]
 8009e4e:	7d20      	ldrb	r0, [r4, #20]
 8009e50:	f002 fa50 	bl	800c2f4 <udp_send>
 8009e54:	200c      	movs	r0, #12
 8009e56:	b005      	add	sp, #20
 8009e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e5a:	9203      	str	r2, [sp, #12]
 8009e5c:	aa03      	add	r2, sp, #12
 8009e5e:	6039      	str	r1, [r7, #0]
 8009e60:	f000 fbd2 	bl	800a608 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009e64:	1e03      	subs	r3, r0, #0
 8009e66:	da08      	bge.n	8009e7a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009e68:	2e0b      	cmp	r6, #11
 8009e6a:	4632      	mov	r2, r6
 8009e6c:	4628      	mov	r0, r5
 8009e6e:	bf28      	it	cs
 8009e70:	220b      	movcs	r2, #11
 8009e72:	4916      	ldr	r1, [pc, #88]	; (8009ecc <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009e74:	f004 ffbc 	bl	800edf0 <memcpy>
 8009e78:	e7ec      	b.n	8009e54 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009e7a:	201c      	movs	r0, #28
 8009e7c:	4343      	muls	r3, r0
 8009e7e:	4914      	ldr	r1, [pc, #80]	; (8009ed0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009e80:	18ca      	adds	r2, r1, r3
 8009e82:	6852      	ldr	r2, [r2, #4]
 8009e84:	58cb      	ldr	r3, [r1, r3]
 8009e86:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009e8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009e8e:	07d2      	lsls	r2, r2, #31
 8009e90:	bf48      	it	mi
 8009e92:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009e96:	a903      	add	r1, sp, #12
 8009e98:	bf48      	it	mi
 8009e9a:	58d3      	ldrmi	r3, [r2, r3]
 8009e9c:	4798      	blx	r3
 8009e9e:	9a03      	ldr	r2, [sp, #12]
 8009ea0:	b955      	cbnz	r5, 8009eb8 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009ea2:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ea6:	6839      	ldr	r1, [r7, #0]
 8009ea8:	9300      	str	r3, [sp, #0]
 8009eaa:	7d20      	ldrb	r0, [r4, #20]
 8009eac:	69a3      	ldr	r3, [r4, #24]
 8009eae:	b292      	uxth	r2, r2
 8009eb0:	f002 fa20 	bl	800c2f4 <udp_send>
 8009eb4:	9803      	ldr	r0, [sp, #12]
 8009eb6:	e7ce      	b.n	8009e56 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009eb8:	42b2      	cmp	r2, r6
 8009eba:	bf28      	it	cs
 8009ebc:	4632      	movcs	r2, r6
 8009ebe:	4628      	mov	r0, r5
 8009ec0:	6839      	ldr	r1, [r7, #0]
 8009ec2:	f004 ffa0 	bl	800ee06 <memmove>
 8009ec6:	e7f5      	b.n	8009eb4 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009ec8:	20000b4c 	andcs	r0, r0, ip, asr #22
 8009ecc:	080110de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, ip}
 8009ed0:	08011338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip}

08009ed4 <RemoteConfig::HandleGetNoParams()>:
 8009ed4:	2200      	movs	r2, #0
 8009ed6:	4611      	mov	r1, r2
 8009ed8:	f7ff bfa2 	b.w	8009e20 <RemoteConfig::HandleGet(void*, unsigned int)>

08009edc <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009edc:	b510      	push	{r4, lr}
 8009ede:	460c      	mov	r4, r1
 8009ee0:	4b07      	ldr	r3, [pc, #28]	; (8009f00 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009ee2:	b08a      	sub	sp, #40	; 0x28
 8009ee4:	6819      	ldr	r1, [r3, #0]
 8009ee6:	a801      	add	r0, sp, #4
 8009ee8:	f000 f9ae 	bl	800a248 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009eec:	4905      	ldr	r1, [pc, #20]	; (8009f04 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009eee:	4623      	mov	r3, r4
 8009ef0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ef4:	6809      	ldr	r1, [r1, #0]
 8009ef6:	a801      	add	r0, sp, #4
 8009ef8:	f000 faca 	bl	800a490 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009efc:	b00a      	add	sp, #40	; 0x28
 8009efe:	bd10      	pop	{r4, pc}
 8009f00:	20001ba0 	andcs	r1, r0, r0, lsr #23
 8009f04:	20000b4c 	andcs	r0, r0, ip, asr #22

08009f08 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009f08:	b513      	push	{r0, r1, r4, lr}
 8009f0a:	460c      	mov	r4, r1
 8009f0c:	4b07      	ldr	r3, [pc, #28]	; (8009f2c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009f0e:	a801      	add	r0, sp, #4
 8009f10:	6819      	ldr	r1, [r3, #0]
 8009f12:	f003 f89d 	bl	800d050 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009f16:	4906      	ldr	r1, [pc, #24]	; (8009f30 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009f18:	4623      	mov	r3, r4
 8009f1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009f1e:	6809      	ldr	r1, [r1, #0]
 8009f20:	a801      	add	r0, sp, #4
 8009f22:	f003 fa81 	bl	800d428 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009f26:	b002      	add	sp, #8
 8009f28:	bd10      	pop	{r4, pc}
 8009f2a:	bf00      	nop
 8009f2c:	20001b98 	mulcs	r0, r8, fp
 8009f30:	20000b4c 	andcs	r0, r0, ip, asr #22

08009f34 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 8009f34:	b510      	push	{r4, lr}
 8009f36:	460c      	mov	r4, r1
 8009f38:	4b07      	ldr	r3, [pc, #28]	; (8009f58 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 8009f3a:	b0e4      	sub	sp, #400	; 0x190
 8009f3c:	6819      	ldr	r1, [r3, #0]
 8009f3e:	4668      	mov	r0, sp
 8009f40:	f7fe fc58 	bl	80087f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009f44:	4905      	ldr	r1, [pc, #20]	; (8009f5c <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 8009f46:	4623      	mov	r3, r4
 8009f48:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009f4c:	4668      	mov	r0, sp
 8009f4e:	6809      	ldr	r1, [r1, #0]
 8009f50:	f7fe fdea 	bl	8008b28 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 8009f54:	b064      	add	sp, #400	; 0x190
 8009f56:	bd10      	pop	{r4, pc}
 8009f58:	20001b9c 	mulcs	r0, ip, fp
 8009f5c:	20000b4c 	andcs	r0, r0, ip, asr #22

08009f60 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009f60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009f62:	460c      	mov	r4, r1
 8009f64:	4b07      	ldr	r3, [pc, #28]	; (8009f84 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 8009f66:	4668      	mov	r0, sp
 8009f68:	6819      	ldr	r1, [r3, #0]
 8009f6a:	f7ff f85f 	bl	800902c <DmxParams::DmxParams(DmxParamsStore*)>
 8009f6e:	4906      	ldr	r1, [pc, #24]	; (8009f88 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009f70:	4623      	mov	r3, r4
 8009f72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009f76:	4668      	mov	r0, sp
 8009f78:	6809      	ldr	r1, [r1, #0]
 8009f7a:	f7ff f977 	bl	800926c <DmxParams::Save(char*, unsigned int, unsigned int&)>
 8009f7e:	b004      	add	sp, #16
 8009f80:	bd10      	pop	{r4, pc}
 8009f82:	bf00      	nop
 8009f84:	20001b94 	mulcs	r0, r4, fp
 8009f88:	20000b4c 	andcs	r0, r0, ip, asr #22

08009f8c <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009f8c:	b530      	push	{r4, r5, lr}
 8009f8e:	b085      	sub	sp, #20
 8009f90:	4604      	mov	r4, r0
 8009f92:	9201      	str	r2, [sp, #4]
 8009f94:	b9c9      	cbnz	r1, 8009fca <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 8009f96:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009f9a:	9303      	str	r3, [sp, #12]
 8009f9c:	4b1b      	ldr	r3, [pc, #108]	; (800a00c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009f9e:	aa03      	add	r2, sp, #12
 8009fa0:	6819      	ldr	r1, [r3, #0]
 8009fa2:	3101      	adds	r1, #1
 8009fa4:	f000 fb30 	bl	800a608 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009fa8:	2800      	cmp	r0, #0
 8009faa:	db24      	blt.n	8009ff6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8009fac:	221c      	movs	r2, #28
 8009fae:	4b18      	ldr	r3, [pc, #96]	; (800a010 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 8009fb0:	fb02 3300 	mla	r3, r2, r0, r3
 8009fb4:	68da      	ldr	r2, [r3, #12]
 8009fb6:	689b      	ldr	r3, [r3, #8]
 8009fb8:	1051      	asrs	r1, r2, #1
 8009fba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009fbe:	07d2      	lsls	r2, r2, #31
 8009fc0:	bf44      	itt	mi
 8009fc2:	5862      	ldrmi	r2, [r4, r1]
 8009fc4:	58d3      	ldrmi	r3, [r2, r3]
 8009fc6:	4798      	blx	r3
 8009fc8:	e015      	b.n	8009ff6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8009fca:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009fce:	4613      	mov	r3, r2
 8009fd0:	d811      	bhi.n	8009ff6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8009fd2:	2200      	movs	r2, #0
 8009fd4:	460d      	mov	r5, r1
 8009fd6:	490f      	ldr	r1, [pc, #60]	; (800a014 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 8009fd8:	6202      	str	r2, [r0, #32]
 8009fda:	7809      	ldrb	r1, [r1, #0]
 8009fdc:	b29b      	uxth	r3, r3
 8009fde:	07c9      	lsls	r1, r1, #31
 8009fe0:	d50b      	bpl.n	8009ffa <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 8009fe2:	7829      	ldrb	r1, [r5, #0]
 8009fe4:	297b      	cmp	r1, #123	; 0x7b
 8009fe6:	d108      	bne.n	8009ffa <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 8009fe8:	3b01      	subs	r3, #1
 8009fea:	4628      	mov	r0, r5
 8009fec:	b299      	uxth	r1, r3
 8009fee:	f003 ffe7 	bl	800dfc0 <properties::convert_json_file(char*, unsigned short, bool)>
 8009ff2:	2800      	cmp	r0, #0
 8009ff4:	dc08      	bgt.n	800a008 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 8009ff6:	b005      	add	sp, #20
 8009ff8:	bd30      	pop	{r4, r5, pc}
 8009ffa:	83a3      	strh	r3, [r4, #28]
 8009ffc:	4b03      	ldr	r3, [pc, #12]	; (800a00c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009ffe:	4620      	mov	r0, r4
 800a000:	601d      	str	r5, [r3, #0]
 800a002:	aa01      	add	r2, sp, #4
 800a004:	1c69      	adds	r1, r5, #1
 800a006:	e7cd      	b.n	8009fa4 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800a008:	83a0      	strh	r0, [r4, #28]
 800a00a:	e7f7      	b.n	8009ffc <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 800a00c:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a010:	08011338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip}
 800a014:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800a018 <RemoteConfig::Run()>:
 800a018:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a01c:	7b03      	ldrb	r3, [r0, #12]
 800a01e:	2b00      	cmp	r3, #0
 800a020:	d14f      	bne.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a022:	4604      	mov	r4, r0
 800a024:	4d3e      	ldr	r5, [pc, #248]	; (800a120 <RemoteConfig::Run()+0x108>)
 800a026:	3024      	adds	r0, #36	; 0x24
 800a028:	f000 fdde 	bl	800abe8 <HttpDaemon::Run()>
 800a02c:	4629      	mov	r1, r5
 800a02e:	7d20      	ldrb	r0, [r4, #20]
 800a030:	f10d 030e 	add.w	r3, sp, #14
 800a034:	f104 0218 	add.w	r2, r4, #24
 800a038:	f002 f936 	bl	800c2a8 <udp_recv2>
 800a03c:	2803      	cmp	r0, #3
 800a03e:	83a0      	strh	r0, [r4, #28]
 800a040:	d93f      	bls.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a042:	682b      	ldr	r3, [r5, #0]
 800a044:	181a      	adds	r2, r3, r0
 800a046:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800a04a:	2a0a      	cmp	r2, #10
 800a04c:	bf04      	itt	eq
 800a04e:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 800a052:	83a0      	strheq	r0, [r4, #28]
 800a054:	7819      	ldrb	r1, [r3, #0]
 800a056:	293f      	cmp	r1, #63	; 0x3f
 800a058:	d139      	bne.n	800a0ce <RemoteConfig::Run()+0xb6>
 800a05a:	4832      	ldr	r0, [pc, #200]	; (800a124 <RemoteConfig::Run()+0x10c>)
 800a05c:	2200      	movs	r2, #0
 800a05e:	4607      	mov	r7, r0
 800a060:	8ba1      	ldrh	r1, [r4, #28]
 800a062:	3901      	subs	r1, #1
 800a064:	b289      	uxth	r1, r1
 800a066:	83a1      	strh	r1, [r4, #28]
 800a068:	7b86      	ldrb	r6, [r0, #14]
 800a06a:	8985      	ldrh	r5, [r0, #12]
 800a06c:	b17e      	cbz	r6, 800a08e <RemoteConfig::Run()+0x76>
 800a06e:	42a9      	cmp	r1, r5
 800a070:	d80f      	bhi.n	800a092 <RemoteConfig::Run()+0x7a>
 800a072:	3201      	adds	r2, #1
 800a074:	2a08      	cmp	r2, #8
 800a076:	f100 0010 	add.w	r0, r0, #16
 800a07a:	d1f5      	bne.n	800a068 <RemoteConfig::Run()+0x50>
 800a07c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a080:	9300      	str	r3, [sp, #0]
 800a082:	69a3      	ldr	r3, [r4, #24]
 800a084:	4928      	ldr	r1, [pc, #160]	; (800a128 <RemoteConfig::Run()+0x110>)
 800a086:	7d20      	ldrb	r0, [r4, #20]
 800a088:	f002 f934 	bl	800c2f4 <udp_send>
 800a08c:	e019      	b.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a08e:	42a9      	cmp	r1, r5
 800a090:	d1ef      	bne.n	800a072 <RemoteConfig::Run()+0x5a>
 800a092:	6886      	ldr	r6, [r0, #8]
 800a094:	f103 0c01 	add.w	ip, r3, #1
 800a098:	4435      	add	r5, r6
 800a09a:	42b5      	cmp	r5, r6
 800a09c:	d006      	beq.n	800a0ac <RemoteConfig::Run()+0x94>
 800a09e:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800a0a2:	f816 eb01 	ldrb.w	lr, [r6], #1
 800a0a6:	45f0      	cmp	r8, lr
 800a0a8:	d0f7      	beq.n	800a09a <RemoteConfig::Run()+0x82>
 800a0aa:	e7e2      	b.n	800a072 <RemoteConfig::Run()+0x5a>
 800a0ac:	0113      	lsls	r3, r2, #4
 800a0ae:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800a0b2:	6852      	ldr	r2, [r2, #4]
 800a0b4:	58fb      	ldr	r3, [r7, r3]
 800a0b6:	1051      	asrs	r1, r2, #1
 800a0b8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a0bc:	07d2      	lsls	r2, r2, #31
 800a0be:	d403      	bmi.n	800a0c8 <RemoteConfig::Run()+0xb0>
 800a0c0:	4798      	blx	r3
 800a0c2:	b004      	add	sp, #16
 800a0c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a0c8:	5862      	ldr	r2, [r4, r1]
 800a0ca:	58d3      	ldr	r3, [r2, r3]
 800a0cc:	e7f8      	b.n	800a0c0 <RemoteConfig::Run()+0xa8>
 800a0ce:	7b62      	ldrb	r2, [r4, #13]
 800a0d0:	2a00      	cmp	r2, #0
 800a0d2:	d1f6      	bne.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a0d4:	2923      	cmp	r1, #35	; 0x23
 800a0d6:	d105      	bne.n	800a0e4 <RemoteConfig::Run()+0xcc>
 800a0d8:	4611      	mov	r1, r2
 800a0da:	4620      	mov	r0, r4
 800a0dc:	6222      	str	r2, [r4, #32]
 800a0de:	f7ff ff55 	bl	8009f8c <RemoteConfig::HandleSet(void*, unsigned int)>
 800a0e2:	e7ee      	b.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a0e4:	2921      	cmp	r1, #33	; 0x21
 800a0e6:	d1ec      	bne.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a0e8:	8ba2      	ldrh	r2, [r4, #28]
 800a0ea:	3a01      	subs	r2, #1
 800a0ec:	b292      	uxth	r2, r2
 800a0ee:	2a08      	cmp	r2, #8
 800a0f0:	83a2      	strh	r2, [r4, #28]
 800a0f2:	d90a      	bls.n	800a10a <RemoteConfig::Run()+0xf2>
 800a0f4:	490d      	ldr	r1, [pc, #52]	; (800a12c <RemoteConfig::Run()+0x114>)
 800a0f6:	1c5a      	adds	r2, r3, #1
 800a0f8:	3309      	adds	r3, #9
 800a0fa:	4293      	cmp	r3, r2
 800a0fc:	d00c      	beq.n	800a118 <RemoteConfig::Run()+0x100>
 800a0fe:	f812 5b01 	ldrb.w	r5, [r2], #1
 800a102:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a106:	4285      	cmp	r5, r0
 800a108:	d0f7      	beq.n	800a0fa <RemoteConfig::Run()+0xe2>
 800a10a:	f642 1305 	movw	r3, #10501	; 0x2905
 800a10e:	9300      	str	r3, [sp, #0]
 800a110:	2208      	movs	r2, #8
 800a112:	69a3      	ldr	r3, [r4, #24]
 800a114:	4906      	ldr	r1, [pc, #24]	; (800a130 <RemoteConfig::Run()+0x118>)
 800a116:	e7b6      	b.n	800a086 <RemoteConfig::Run()+0x6e>
 800a118:	4620      	mov	r0, r4
 800a11a:	f7ff fdd7 	bl	8009ccc <RemoteConfig::HandleDisplaySet()>
 800a11e:	e7d0      	b.n	800a0c2 <RemoteConfig::Run()+0xaa>
 800a120:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a124:	08011270 	stmdaeq	r1, {r4, r5, r6, r9, ip}
 800a128:	080110f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, ip}
 800a12c:	080110ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip}
 800a130:	080110fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, ip}

0800a134 <RemoteConfig::HandleSetRconfig()>:
 800a134:	b510      	push	{r4, lr}
 800a136:	4604      	mov	r4, r0
 800a138:	4b08      	ldr	r3, [pc, #32]	; (800a15c <RemoteConfig::HandleSetRconfig()+0x28>)
 800a13a:	b08a      	sub	sp, #40	; 0x28
 800a13c:	6819      	ldr	r1, [r3, #0]
 800a13e:	a801      	add	r0, sp, #4
 800a140:	f000 f882 	bl	800a248 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a144:	4b06      	ldr	r3, [pc, #24]	; (800a160 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800a146:	8ba2      	ldrh	r2, [r4, #28]
 800a148:	6819      	ldr	r1, [r3, #0]
 800a14a:	a801      	add	r0, sp, #4
 800a14c:	f000 f892 	bl	800a274 <RemoteConfigParams::Load(char const*, unsigned int)>
 800a150:	4621      	mov	r1, r4
 800a152:	a801      	add	r0, sp, #4
 800a154:	f000 f9a9 	bl	800a4aa <RemoteConfigParams::Set(RemoteConfig*)>
 800a158:	b00a      	add	sp, #40	; 0x28
 800a15a:	bd10      	pop	{r4, pc}
 800a15c:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a160:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a164 <RemoteConfig::HandleSetNetworkTxt()>:
 800a164:	b513      	push	{r0, r1, r4, lr}
 800a166:	4604      	mov	r4, r0
 800a168:	4b06      	ldr	r3, [pc, #24]	; (800a184 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800a16a:	a801      	add	r0, sp, #4
 800a16c:	6819      	ldr	r1, [r3, #0]
 800a16e:	f002 ff6f 	bl	800d050 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a172:	4b05      	ldr	r3, [pc, #20]	; (800a188 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800a174:	8ba2      	ldrh	r2, [r4, #28]
 800a176:	6819      	ldr	r1, [r3, #0]
 800a178:	a801      	add	r0, sp, #4
 800a17a:	f002 ff89 	bl	800d090 <NetworkParams::Load(char const*, unsigned int)>
 800a17e:	b002      	add	sp, #8
 800a180:	bd10      	pop	{r4, pc}
 800a182:	bf00      	nop
 800a184:	20001b98 	mulcs	r0, r8, fp
 800a188:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a18c <RemoteConfig::HandleSetOscTxt()>:
 800a18c:	b510      	push	{r4, lr}
 800a18e:	4604      	mov	r4, r0
 800a190:	4b06      	ldr	r3, [pc, #24]	; (800a1ac <RemoteConfig::HandleSetOscTxt()+0x20>)
 800a192:	b0e4      	sub	sp, #400	; 0x190
 800a194:	6819      	ldr	r1, [r3, #0]
 800a196:	4668      	mov	r0, sp
 800a198:	f7fe fb2c 	bl	80087f4 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800a19c:	4b04      	ldr	r3, [pc, #16]	; (800a1b0 <RemoteConfig::HandleSetOscTxt()+0x24>)
 800a19e:	4668      	mov	r0, sp
 800a1a0:	8ba2      	ldrh	r2, [r4, #28]
 800a1a2:	6819      	ldr	r1, [r3, #0]
 800a1a4:	f7fe fb42 	bl	800882c <OSCServerParams::Load(char const*, unsigned int)>
 800a1a8:	b064      	add	sp, #400	; 0x190
 800a1aa:	bd10      	pop	{r4, pc}
 800a1ac:	20001b9c 	mulcs	r0, ip, fp
 800a1b0:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a1b4 <RemoteConfig::HandleSetParamsTxt()>:
 800a1b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a1b6:	4604      	mov	r4, r0
 800a1b8:	4b06      	ldr	r3, [pc, #24]	; (800a1d4 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800a1ba:	4668      	mov	r0, sp
 800a1bc:	6819      	ldr	r1, [r3, #0]
 800a1be:	f7fe ff35 	bl	800902c <DmxParams::DmxParams(DmxParamsStore*)>
 800a1c2:	4b05      	ldr	r3, [pc, #20]	; (800a1d8 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800a1c4:	4668      	mov	r0, sp
 800a1c6:	8ba2      	ldrh	r2, [r4, #28]
 800a1c8:	6819      	ldr	r1, [r3, #0]
 800a1ca:	f7fe ff47 	bl	800905c <DmxParams::Load(char const*, unsigned int)>
 800a1ce:	b004      	add	sp, #16
 800a1d0:	bd10      	pop	{r4, pc}
 800a1d2:	bf00      	nop
 800a1d4:	20001b94 	mulcs	r0, r4, fp
 800a1d8:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a1dc <RemoteConfig::HandleFactory()>:
 800a1dc:	b538      	push	{r3, r4, r5, lr}
 800a1de:	2400      	movs	r4, #0
 800a1e0:	4d04      	ldr	r5, [pc, #16]	; (800a1f4 <RemoteConfig::HandleFactory()+0x18>)
 800a1e2:	4621      	mov	r1, r4
 800a1e4:	6828      	ldr	r0, [r5, #0]
 800a1e6:	3401      	adds	r4, #1
 800a1e8:	f000 ff22 	bl	800b030 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800a1ec:	2c1c      	cmp	r4, #28
 800a1ee:	d1f8      	bne.n	800a1e2 <RemoteConfig::HandleFactory()+0x6>
 800a1f0:	bd38      	pop	{r3, r4, r5, pc}
 800a1f2:	bf00      	nop
 800a1f4:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1fa:	460b      	mov	r3, r1
 800a1fc:	8885      	ldrh	r5, [r0, #4]
 800a1fe:	88c1      	ldrh	r1, [r0, #6]
 800a200:	42a9      	cmp	r1, r5
 800a202:	d214      	bcs.n	800a22e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a204:	4604      	mov	r4, r0
 800a206:	6800      	ldr	r0, [r0, #0]
 800a208:	1a6d      	subs	r5, r5, r1
 800a20a:	4408      	add	r0, r1
 800a20c:	7a21      	ldrb	r1, [r4, #8]
 800a20e:	b91a      	cbnz	r2, 800a218 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a210:	b919      	cbnz	r1, 800a21a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a212:	4a0a      	ldr	r2, [pc, #40]	; (800a23c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a214:	9100      	str	r1, [sp, #0]
 800a216:	e002      	b.n	800a21e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a218:	b159      	cbz	r1, 800a232 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a21a:	9200      	str	r2, [sp, #0]
 800a21c:	4a08      	ldr	r2, [pc, #32]	; (800a240 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a21e:	4629      	mov	r1, r5
 800a220:	f7fd ffa6 	bl	8008170 <snprintf>
 800a224:	4285      	cmp	r5, r0
 800a226:	bfa2      	ittt	ge
 800a228:	88e3      	ldrhge	r3, [r4, #6]
 800a22a:	181b      	addge	r3, r3, r0
 800a22c:	80e3      	strhge	r3, [r4, #6]
 800a22e:	b003      	add	sp, #12
 800a230:	bd30      	pop	{r4, r5, pc}
 800a232:	2201      	movs	r2, #1
 800a234:	9200      	str	r2, [sp, #0]
 800a236:	4a03      	ldr	r2, [pc, #12]	; (800a244 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a238:	e7f1      	b.n	800a21e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a23a:	bf00      	nop
 800a23c:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 800a240:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 800a244:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}

0800a248 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800a248:	b510      	push	{r4, lr}
 800a24a:	4604      	mov	r4, r0
 800a24c:	2220      	movs	r2, #32
 800a24e:	f840 1b04 	str.w	r1, [r0], #4
 800a252:	2100      	movs	r1, #0
 800a254:	f004 fdee 	bl	800ee34 <memset>
 800a258:	4620      	mov	r0, r4
 800a25a:	bd10      	pop	{r4, pc}

0800a25c <RemoteConfigParams::Load()>:
 800a25c:	b508      	push	{r3, lr}
 800a25e:	2300      	movs	r3, #0
 800a260:	4601      	mov	r1, r0
 800a262:	6043      	str	r3, [r0, #4]
 800a264:	6800      	ldr	r0, [r0, #0]
 800a266:	b120      	cbz	r0, 800a272 <RemoteConfigParams::Load()+0x16>
 800a268:	6803      	ldr	r3, [r0, #0]
 800a26a:	3104      	adds	r1, #4
 800a26c:	68db      	ldr	r3, [r3, #12]
 800a26e:	4798      	blx	r3
 800a270:	2001      	movs	r0, #1
 800a272:	bd08      	pop	{r3, pc}

0800a274 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800a274:	2300      	movs	r3, #0
 800a276:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a278:	460d      	mov	r5, r1
 800a27a:	4616      	mov	r6, r2
 800a27c:	4604      	mov	r4, r0
 800a27e:	6043      	str	r3, [r0, #4]
 800a280:	4602      	mov	r2, r0
 800a282:	490a      	ldr	r1, [pc, #40]	; (800a2ac <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800a284:	4668      	mov	r0, sp
 800a286:	f003 ffe9 	bl	800e25c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a28a:	4632      	mov	r2, r6
 800a28c:	4629      	mov	r1, r5
 800a28e:	4668      	mov	r0, sp
 800a290:	f003 ffe8 	bl	800e264 <ReadConfigFile::Read(char const*, unsigned int)>
 800a294:	4621      	mov	r1, r4
 800a296:	f851 0b04 	ldr.w	r0, [r1], #4
 800a29a:	6803      	ldr	r3, [r0, #0]
 800a29c:	689b      	ldr	r3, [r3, #8]
 800a29e:	4798      	blx	r3
 800a2a0:	4668      	mov	r0, sp
 800a2a2:	f003 ffde 	bl	800e262 <ReadConfigFile::~ReadConfigFile()>
 800a2a6:	b002      	add	sp, #8
 800a2a8:	bd70      	pop	{r4, r5, r6, pc}
 800a2aa:	bf00      	nop
 800a2ac:	0800a36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sp, pc}

0800a2b0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800a2b0:	6843      	ldr	r3, [r0, #4]
 800a2b2:	b111      	cbz	r1, 800a2ba <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800a2b4:	4313      	orrs	r3, r2
 800a2b6:	6043      	str	r3, [r0, #4]
 800a2b8:	4770      	bx	lr
 800a2ba:	ea23 0302 	bic.w	r3, r3, r2
 800a2be:	e7fa      	b.n	800a2b6 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800a2c0 <RemoteConfigParams::callbackFunction(char const*)>:
 800a2c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a2c2:	460d      	mov	r5, r1
 800a2c4:	4604      	mov	r4, r0
 800a2c6:	4923      	ldr	r1, [pc, #140]	; (800a354 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800a2c8:	4628      	mov	r0, r5
 800a2ca:	f10d 0203 	add.w	r2, sp, #3
 800a2ce:	f004 f874 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a2d2:	b938      	cbnz	r0, 800a2e4 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800a2d4:	2201      	movs	r2, #1
 800a2d6:	4620      	mov	r0, r4
 800a2d8:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800a2dc:	f7ff ffe8 	bl	800a2b0 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800a2e0:	b003      	add	sp, #12
 800a2e2:	bd30      	pop	{r4, r5, pc}
 800a2e4:	4628      	mov	r0, r5
 800a2e6:	491c      	ldr	r1, [pc, #112]	; (800a358 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800a2e8:	f10d 0203 	add.w	r2, sp, #3
 800a2ec:	f004 f865 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a2f0:	b908      	cbnz	r0, 800a2f6 <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800a2f2:	2202      	movs	r2, #2
 800a2f4:	e7ef      	b.n	800a2d6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a2f6:	4628      	mov	r0, r5
 800a2f8:	4918      	ldr	r1, [pc, #96]	; (800a35c <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800a2fa:	f10d 0203 	add.w	r2, sp, #3
 800a2fe:	f004 f85c 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a302:	b908      	cbnz	r0, 800a308 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800a304:	2204      	movs	r2, #4
 800a306:	e7e6      	b.n	800a2d6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a308:	4628      	mov	r0, r5
 800a30a:	4915      	ldr	r1, [pc, #84]	; (800a360 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800a30c:	f10d 0203 	add.w	r2, sp, #3
 800a310:	f004 f853 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a314:	b908      	cbnz	r0, 800a31a <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800a316:	2208      	movs	r2, #8
 800a318:	e7dd      	b.n	800a2d6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a31a:	4628      	mov	r0, r5
 800a31c:	4911      	ldr	r1, [pc, #68]	; (800a364 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800a31e:	f10d 0203 	add.w	r2, sp, #3
 800a322:	f004 f84a 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a326:	b908      	cbnz	r0, 800a32c <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800a328:	2220      	movs	r2, #32
 800a32a:	e7d4      	b.n	800a2d6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a32c:	2317      	movs	r3, #23
 800a32e:	4628      	mov	r0, r5
 800a330:	9301      	str	r3, [sp, #4]
 800a332:	490d      	ldr	r1, [pc, #52]	; (800a368 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800a334:	ab01      	add	r3, sp, #4
 800a336:	f104 020c 	add.w	r2, r4, #12
 800a33a:	f003 ffc7 	bl	800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a33e:	2800      	cmp	r0, #0
 800a340:	d1ce      	bne.n	800a2e0 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800a342:	9b01      	ldr	r3, [sp, #4]
 800a344:	4423      	add	r3, r4
 800a346:	7318      	strb	r0, [r3, #12]
 800a348:	6863      	ldr	r3, [r4, #4]
 800a34a:	f043 0310 	orr.w	r3, r3, #16
 800a34e:	6063      	str	r3, [r4, #4]
 800a350:	e7c6      	b.n	800a2e0 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800a352:	bf00      	nop
 800a354:	08011684 	stmdaeq	r1, {r2, r7, r9, sl, ip}
 800a358:	080116a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, ip}
 800a35c:	080116b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip}
 800a360:	080116c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, ip}
 800a364:	080116cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, ip}
 800a368:	08011698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip}

0800a36c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a36c:	f7ff bfa8 	b.w	800a2c0 <RemoteConfigParams::callbackFunction(char const*)>

0800a370 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800a370:	b570      	push	{r4, r5, r6, lr}
 800a372:	4604      	mov	r4, r0
 800a374:	4615      	mov	r5, r2
 800a376:	461e      	mov	r6, r3
 800a378:	b086      	sub	sp, #24
 800a37a:	3004      	adds	r0, #4
 800a37c:	2900      	cmp	r1, #0
 800a37e:	d040      	beq.n	800a402 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800a380:	2220      	movs	r2, #32
 800a382:	f004 fd40 	bl	800ee06 <memmove>
 800a386:	4633      	mov	r3, r6
 800a388:	462a      	mov	r2, r5
 800a38a:	4937      	ldr	r1, [pc, #220]	; (800a468 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800a38c:	a803      	add	r0, sp, #12
 800a38e:	f003 fec5 	bl	800e11c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a392:	6862      	ldr	r2, [r4, #4]
 800a394:	4935      	ldr	r1, [pc, #212]	; (800a46c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800a396:	f002 0201 	and.w	r2, r2, #1
 800a39a:	a803      	add	r0, sp, #12
 800a39c:	f7ff ff2c 	bl	800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a3a0:	6862      	ldr	r2, [r4, #4]
 800a3a2:	4933      	ldr	r1, [pc, #204]	; (800a470 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800a3a4:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a3a8:	a803      	add	r0, sp, #12
 800a3aa:	f7ff ff25 	bl	800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a3ae:	6862      	ldr	r2, [r4, #4]
 800a3b0:	4930      	ldr	r1, [pc, #192]	; (800a474 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a3b2:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a3b6:	a803      	add	r0, sp, #12
 800a3b8:	f7ff ff1e 	bl	800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a3bc:	6862      	ldr	r2, [r4, #4]
 800a3be:	492e      	ldr	r1, [pc, #184]	; (800a478 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a3c0:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a3c4:	a803      	add	r0, sp, #12
 800a3c6:	f7ff ff17 	bl	800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a3ca:	6862      	ldr	r2, [r4, #4]
 800a3cc:	492b      	ldr	r1, [pc, #172]	; (800a47c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a3ce:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a3d2:	a803      	add	r0, sp, #12
 800a3d4:	f7ff ff10 	bl	800a1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a3d8:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800a3dc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a3e0:	42a9      	cmp	r1, r5
 800a3e2:	d223      	bcs.n	800a42c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800a3e4:	9803      	ldr	r0, [sp, #12]
 800a3e6:	1a6d      	subs	r5, r5, r1
 800a3e8:	4408      	add	r0, r1
 800a3ea:	6861      	ldr	r1, [r4, #4]
 800a3ec:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a3f0:	06c9      	lsls	r1, r1, #27
 800a3f2:	f104 030c 	add.w	r3, r4, #12
 800a3f6:	d40b      	bmi.n	800a410 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800a3f8:	b95a      	cbnz	r2, 800a412 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a3fa:	9300      	str	r3, [sp, #0]
 800a3fc:	4a20      	ldr	r2, [pc, #128]	; (800a480 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a3fe:	4b21      	ldr	r3, [pc, #132]	; (800a484 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a400:	e00a      	b.n	800a418 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800a402:	6823      	ldr	r3, [r4, #0]
 800a404:	4601      	mov	r1, r0
 800a406:	681a      	ldr	r2, [r3, #0]
 800a408:	4618      	mov	r0, r3
 800a40a:	68d2      	ldr	r2, [r2, #12]
 800a40c:	4790      	blx	r2
 800a40e:	e7ba      	b.n	800a386 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a410:	b32a      	cbz	r2, 800a45e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800a412:	9300      	str	r3, [sp, #0]
 800a414:	4a1c      	ldr	r2, [pc, #112]	; (800a488 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a416:	4b1b      	ldr	r3, [pc, #108]	; (800a484 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a418:	4629      	mov	r1, r5
 800a41a:	f7fd fea9 	bl	8008170 <snprintf>
 800a41e:	4285      	cmp	r5, r0
 800a420:	bfa2      	ittt	ge
 800a422:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800a426:	18c0      	addge	r0, r0, r3
 800a428:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800a42c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a430:	b17b      	cbz	r3, 800a452 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800a432:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a436:	9b03      	ldr	r3, [sp, #12]
 800a438:	4413      	add	r3, r2
 800a43a:	227d      	movs	r2, #125	; 0x7d
 800a43c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a440:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a444:	9903      	ldr	r1, [sp, #12]
 800a446:	54ca      	strb	r2, [r1, r3]
 800a448:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a44c:	3301      	adds	r3, #1
 800a44e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a452:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a458:	601a      	str	r2, [r3, #0]
 800a45a:	b006      	add	sp, #24
 800a45c:	bd70      	pop	{r4, r5, r6, pc}
 800a45e:	9300      	str	r3, [sp, #0]
 800a460:	4a0a      	ldr	r2, [pc, #40]	; (800a48c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a462:	4b08      	ldr	r3, [pc, #32]	; (800a484 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a464:	e7d8      	b.n	800a418 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800a466:	bf00      	nop
 800a468:	0801168c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip}
 800a46c:	08011684 	stmdaeq	r1, {r2, r7, r9, sl, ip}
 800a470:	080116a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, ip}
 800a474:	080116b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip}
 800a478:	080116c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, ip}
 800a47c:	080116cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, ip}
 800a480:	08010f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp}
 800a484:	08011698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip}
 800a488:	08010f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp}
 800a48c:	08010f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp}

0800a490 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a490:	b513      	push	{r0, r1, r4, lr}
 800a492:	6804      	ldr	r4, [r0, #0]
 800a494:	b914      	cbnz	r4, 800a49c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a496:	601c      	str	r4, [r3, #0]
 800a498:	b002      	add	sp, #8
 800a49a:	bd10      	pop	{r4, pc}
 800a49c:	9300      	str	r3, [sp, #0]
 800a49e:	4613      	mov	r3, r2
 800a4a0:	460a      	mov	r2, r1
 800a4a2:	2100      	movs	r1, #0
 800a4a4:	f7ff ff64 	bl	800a370 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a4a8:	e7f6      	b.n	800a498 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a4aa <RemoteConfigParams::Set(RemoteConfig*)>:
 800a4aa:	b538      	push	{r3, r4, r5, lr}
 800a4ac:	460c      	mov	r4, r1
 800a4ae:	4605      	mov	r5, r0
 800a4b0:	6841      	ldr	r1, [r0, #4]
 800a4b2:	4620      	mov	r0, r4
 800a4b4:	f001 0101 	and.w	r1, r1, #1
 800a4b8:	f7ff fc7a 	bl	8009db0 <RemoteConfig::SetDisable(bool)>
 800a4bc:	686b      	ldr	r3, [r5, #4]
 800a4be:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a4c2:	7362      	strb	r2, [r4, #13]
 800a4c4:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a4c8:	73a2      	strb	r2, [r4, #14]
 800a4ca:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a4ce:	73e2      	strb	r2, [r4, #15]
 800a4d0:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a4d4:	06db      	lsls	r3, r3, #27
 800a4d6:	7422      	strb	r2, [r4, #16]
 800a4d8:	d506      	bpl.n	800a4e8 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a4da:	4620      	mov	r0, r4
 800a4dc:	f105 010c 	add.w	r1, r5, #12
 800a4e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a4e4:	f7ff bc84 	b.w	8009df0 <RemoteConfig::SetDisplayName(char const*)>
 800a4e8:	bd38      	pop	{r3, r4, r5, pc}

0800a4ea <RemoteConfigParams::Dump()>:
 800a4ea:	4770      	bx	lr

0800a4ec <Display::TextStatus(char const*)>:
 800a4ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a4f0:	4604      	mov	r4, r0
 800a4f2:	6980      	ldr	r0, [r0, #24]
 800a4f4:	460d      	mov	r5, r1
 800a4f6:	2800      	cmp	r0, #0
 800a4f8:	d031      	beq.n	800a55e <Display::TextStatus(char const*)+0x72>
 800a4fa:	7947      	ldrb	r7, [r0, #5]
 800a4fc:	6803      	ldr	r3, [r0, #0]
 800a4fe:	1e7e      	subs	r6, r7, #1
 800a500:	b2f6      	uxtb	r6, r6
 800a502:	4632      	mov	r2, r6
 800a504:	2100      	movs	r1, #0
 800a506:	6a1b      	ldr	r3, [r3, #32]
 800a508:	f890 9004 	ldrb.w	r9, [r0, #4]
 800a50c:	f04f 0800 	mov.w	r8, #0
 800a510:	4798      	blx	r3
 800a512:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800a516:	45c1      	cmp	r9, r8
 800a518:	69a0      	ldr	r0, [r4, #24]
 800a51a:	d907      	bls.n	800a52c <Display::TextStatus(char const*)+0x40>
 800a51c:	b118      	cbz	r0, 800a526 <Display::TextStatus(char const*)+0x3a>
 800a51e:	6803      	ldr	r3, [r0, #0]
 800a520:	2120      	movs	r1, #32
 800a522:	695b      	ldr	r3, [r3, #20]
 800a524:	4798      	blx	r3
 800a526:	f108 0801 	add.w	r8, r8, #1
 800a52a:	e7f4      	b.n	800a516 <Display::TextStatus(char const*)+0x2a>
 800a52c:	b120      	cbz	r0, 800a538 <Display::TextStatus(char const*)+0x4c>
 800a52e:	6803      	ldr	r3, [r0, #0]
 800a530:	4632      	mov	r2, r6
 800a532:	2100      	movs	r1, #0
 800a534:	6a1b      	ldr	r3, [r3, #32]
 800a536:	4798      	blx	r3
 800a538:	69a0      	ldr	r0, [r4, #24]
 800a53a:	b180      	cbz	r0, 800a55e <Display::TextStatus(char const*)+0x72>
 800a53c:	2300      	movs	r3, #0
 800a53e:	7901      	ldrb	r1, [r0, #4]
 800a540:	5cea      	ldrb	r2, [r5, r3]
 800a542:	b11a      	cbz	r2, 800a54c <Display::TextStatus(char const*)+0x60>
 800a544:	1c5a      	adds	r2, r3, #1
 800a546:	4299      	cmp	r1, r3
 800a548:	4613      	mov	r3, r2
 800a54a:	dcf9      	bgt.n	800a540 <Display::TextStatus(char const*)+0x54>
 800a54c:	6802      	ldr	r2, [r0, #0]
 800a54e:	4639      	mov	r1, r7
 800a550:	69d4      	ldr	r4, [r2, #28]
 800a552:	b2db      	uxtb	r3, r3
 800a554:	462a      	mov	r2, r5
 800a556:	46a4      	mov	ip, r4
 800a558:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a55c:	4760      	bx	ip
 800a55e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800a564 <RemoteConfig::HandleReboot()>:
 800a564:	7b83      	ldrb	r3, [r0, #14]
 800a566:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a568:	2b00      	cmp	r3, #0
 800a56a:	d03d      	beq.n	800a5e8 <RemoteConfig::HandleReboot()+0x84>
 800a56c:	2301      	movs	r3, #1
 800a56e:	4c1f      	ldr	r4, [pc, #124]	; (800a5ec <RemoteConfig::HandleReboot()+0x88>)
 800a570:	7443      	strb	r3, [r0, #17]
 800a572:	6825      	ldr	r5, [r4, #0]
 800a574:	69a8      	ldr	r0, [r5, #24]
 800a576:	b138      	cbz	r0, 800a588 <RemoteConfig::HandleReboot()+0x24>
 800a578:	2100      	movs	r1, #0
 800a57a:	6803      	ldr	r3, [r0, #0]
 800a57c:	7429      	strb	r1, [r5, #16]
 800a57e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a580:	4798      	blx	r3
 800a582:	4b1b      	ldr	r3, [pc, #108]	; (800a5f0 <RemoteConfig::HandleReboot()+0x8c>)
 800a584:	681b      	ldr	r3, [r3, #0]
 800a586:	606b      	str	r3, [r5, #4]
 800a588:	4d1a      	ldr	r5, [pc, #104]	; (800a5f4 <RemoteConfig::HandleReboot()+0x90>)
 800a58a:	6828      	ldr	r0, [r5, #0]
 800a58c:	f000 fdd6 	bl	800b13c <SpiFlashStore::Flash()>
 800a590:	2800      	cmp	r0, #0
 800a592:	d1fa      	bne.n	800a58a <RemoteConfig::HandleReboot()+0x26>
 800a594:	4b18      	ldr	r3, [pc, #96]	; (800a5f8 <RemoteConfig::HandleReboot()+0x94>)
 800a596:	6818      	ldr	r0, [r3, #0]
 800a598:	f002 fb74 	bl	800cc84 <Network::Shutdown()>
 800a59c:	4817      	ldr	r0, [pc, #92]	; (800a5fc <RemoteConfig::HandleReboot()+0x98>)
 800a59e:	f7fd fdd7 	bl	8008150 <printf>
 800a5a2:	6823      	ldr	r3, [r4, #0]
 800a5a4:	6998      	ldr	r0, [r3, #24]
 800a5a6:	b110      	cbz	r0, 800a5ae <RemoteConfig::HandleReboot()+0x4a>
 800a5a8:	6803      	ldr	r3, [r0, #0]
 800a5aa:	68db      	ldr	r3, [r3, #12]
 800a5ac:	4798      	blx	r3
 800a5ae:	6824      	ldr	r4, [r4, #0]
 800a5b0:	4913      	ldr	r1, [pc, #76]	; (800a600 <RemoteConfig::HandleReboot()+0x9c>)
 800a5b2:	4620      	mov	r0, r4
 800a5b4:	f7ff ff9a 	bl	800a4ec <Display::TextStatus(char const*)>
 800a5b8:	7c63      	ldrb	r3, [r4, #17]
 800a5ba:	b18b      	cbz	r3, 800a5e0 <RemoteConfig::HandleReboot()+0x7c>
 800a5bc:	2312      	movs	r3, #18
 800a5be:	f88d 3004 	strb.w	r3, [sp, #4]
 800a5c2:	23bf      	movs	r3, #191	; 0xbf
 800a5c4:	7a20      	ldrb	r0, [r4, #8]
 800a5c6:	f88d 3005 	strb.w	r3, [sp, #5]
 800a5ca:	f88d 3006 	strb.w	r3, [sp, #6]
 800a5ce:	f005 fc2d 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 800a5d2:	68e0      	ldr	r0, [r4, #12]
 800a5d4:	f005 fc22 	bl	800fe1c <gd32_i2c_set_baudrate(unsigned int)>
 800a5d8:	2103      	movs	r1, #3
 800a5da:	a801      	add	r0, sp, #4
 800a5dc:	f005 fc2c 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800a5e0:	4b08      	ldr	r3, [pc, #32]	; (800a604 <RemoteConfig::HandleReboot()+0xa0>)
 800a5e2:	6818      	ldr	r0, [r3, #0]
 800a5e4:	f004 fb0e 	bl	800ec04 <Hardware::Reboot()>
 800a5e8:	b003      	add	sp, #12
 800a5ea:	bd30      	pop	{r4, r5, pc}
 800a5ec:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800a5f0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800a5f4:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800a5f8:	20009488 	andcs	r9, r0, r8, lsl #9
 800a5fc:	080112f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, ip}
 800a600:	080112ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip}
 800a604:	20009ba8 	andcs	r9, r0, r8, lsr #23

0800a608 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a608:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a60c:	2000      	movs	r0, #0
 800a60e:	4d12      	ldr	r5, [pc, #72]	; (800a658 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a610:	f10d 0c04 	add.w	ip, sp, #4
 800a614:	6814      	ldr	r4, [r2, #0]
 800a616:	7d2b      	ldrb	r3, [r5, #20]
 800a618:	692e      	ldr	r6, [r5, #16]
 800a61a:	42a3      	cmp	r3, r4
 800a61c:	bf34      	ite	cc
 800a61e:	4664      	movcc	r4, ip
 800a620:	4614      	movcs	r4, r2
 800a622:	9301      	str	r3, [sp, #4]
 800a624:	6827      	ldr	r7, [r4, #0]
 800a626:	460c      	mov	r4, r1
 800a628:	3e01      	subs	r6, #1
 800a62a:	440f      	add	r7, r1
 800a62c:	42bc      	cmp	r4, r7
 800a62e:	d011      	beq.n	800a654 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a630:	f894 8000 	ldrb.w	r8, [r4]
 800a634:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a638:	45f0      	cmp	r8, lr
 800a63a:	d009      	beq.n	800a650 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800a63c:	3001      	adds	r0, #1
 800a63e:	2804      	cmp	r0, #4
 800a640:	f105 051c 	add.w	r5, r5, #28
 800a644:	d1e6      	bne.n	800a614 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a646:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a64a:	b002      	add	sp, #8
 800a64c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a650:	3401      	adds	r4, #1
 800a652:	e7eb      	b.n	800a62c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a654:	6013      	str	r3, [r2, #0]
 800a656:	e7f8      	b.n	800a64a <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800a658:	08011338 	stmdaeq	r1, {r3, r4, r5, r8, r9, ip}

0800a65c <strcmp>:
 800a65c:	1e43      	subs	r3, r0, #1
 800a65e:	3901      	subs	r1, #1
 800a660:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a664:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a668:	4290      	cmp	r0, r2
 800a66a:	d102      	bne.n	800a672 <strcmp+0x16>
 800a66c:	2800      	cmp	r0, #0
 800a66e:	d1f7      	bne.n	800a660 <strcmp+0x4>
 800a670:	4770      	bx	lr
 800a672:	1a80      	subs	r0, r0, r2
 800a674:	4770      	bx	lr

0800a676 <strcasecmp>:
 800a676:	b530      	push	{r4, r5, lr}
 800a678:	1e42      	subs	r2, r0, #1
 800a67a:	3901      	subs	r1, #1
 800a67c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a680:	4604      	mov	r4, r0
 800a682:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a686:	2b19      	cmp	r3, #25
 800a688:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a68c:	bf98      	it	ls
 800a68e:	f100 0420 	addls.w	r4, r0, #32
 800a692:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a696:	2d19      	cmp	r5, #25
 800a698:	bf98      	it	ls
 800a69a:	3320      	addls	r3, #32
 800a69c:	42a3      	cmp	r3, r4
 800a69e:	d102      	bne.n	800a6a6 <strcasecmp+0x30>
 800a6a0:	2800      	cmp	r0, #0
 800a6a2:	d1eb      	bne.n	800a67c <strcasecmp+0x6>
 800a6a4:	bd30      	pop	{r4, r5, pc}
 800a6a6:	1ae0      	subs	r0, r4, r3
 800a6a8:	e7fc      	b.n	800a6a4 <strcasecmp+0x2e>
	...

0800a6ac <PropertiesConfig::EnableJSON(bool)>:
 800a6ac:	4a04      	ldr	r2, [pc, #16]	; (800a6c0 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a6ae:	7813      	ldrb	r3, [r2, #0]
 800a6b0:	b118      	cbz	r0, 800a6ba <PropertiesConfig::EnableJSON(bool)+0xe>
 800a6b2:	f043 0301 	orr.w	r3, r3, #1
 800a6b6:	7013      	strb	r3, [r2, #0]
 800a6b8:	4770      	bx	lr
 800a6ba:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a6be:	e7fa      	b.n	800a6b6 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a6c0:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800a6c4 <HttpDaemon::HttpDaemon()>:
 800a6c4:	4a0a      	ldr	r2, [pc, #40]	; (800a6f0 <HttpDaemon::HttpDaemon()+0x2c>)
 800a6c6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a6ca:	6002      	str	r2, [r0, #0]
 800a6cc:	2200      	movs	r2, #0
 800a6ce:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a6d2:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a6d6:	2102      	movs	r1, #2
 800a6d8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a6dc:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a6e0:	60c2      	str	r2, [r0, #12]
 800a6e2:	8402      	strh	r2, [r0, #32]
 800a6e4:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800a6e8:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800a6ec:	4770      	bx	lr
 800a6ee:	bf00      	nop
 800a6f0:	08011604 	stmdaeq	r1, {r2, r9, sl, ip}

0800a6f4 <HttpDaemon::Start()>:
 800a6f4:	4b04      	ldr	r3, [pc, #16]	; (800a708 <HttpDaemon::Start()+0x14>)
 800a6f6:	b510      	push	{r4, lr}
 800a6f8:	2150      	movs	r1, #80	; 0x50
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	6818      	ldr	r0, [r3, #0]
 800a6fe:	f002 fc9b 	bl	800d038 <Network::TcpBegin(unsigned short)>
 800a702:	6120      	str	r0, [r4, #16]
 800a704:	bd10      	pop	{r4, pc}
 800a706:	bf00      	nop
 800a708:	20009488 	andcs	r9, r0, r8, lsl #9

0800a70c <HttpDaemon::ParseMethod(char*)>:
 800a70c:	b538      	push	{r3, r4, r5, lr}
 800a70e:	4604      	mov	r4, r0
 800a710:	4608      	mov	r0, r1
 800a712:	491b      	ldr	r1, [pc, #108]	; (800a780 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a714:	f004 fbbc 	bl	800ee90 <strtok>
 800a718:	4605      	mov	r5, r0
 800a71a:	b370      	cbz	r0, 800a77a <HttpDaemon::ParseMethod(char*)+0x6e>
 800a71c:	4919      	ldr	r1, [pc, #100]	; (800a784 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a71e:	f7ff ff9d 	bl	800a65c <strcmp>
 800a722:	b940      	cbnz	r0, 800a736 <HttpDaemon::ParseMethod(char*)+0x2a>
 800a724:	61e0      	str	r0, [r4, #28]
 800a726:	2000      	movs	r0, #0
 800a728:	4915      	ldr	r1, [pc, #84]	; (800a780 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a72a:	f004 fbb1 	bl	800ee90 <strtok>
 800a72e:	b950      	cbnz	r0, 800a746 <HttpDaemon::ParseMethod(char*)+0x3a>
 800a730:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a734:	bd38      	pop	{r3, r4, r5, pc}
 800a736:	4628      	mov	r0, r5
 800a738:	4913      	ldr	r1, [pc, #76]	; (800a788 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a73a:	f7ff ff8f 	bl	800a65c <strcmp>
 800a73e:	b9e0      	cbnz	r0, 800a77a <HttpDaemon::ParseMethod(char*)+0x6e>
 800a740:	2301      	movs	r3, #1
 800a742:	61e3      	str	r3, [r4, #28]
 800a744:	e7ef      	b.n	800a726 <HttpDaemon::ParseMethod(char*)+0x1a>
 800a746:	6060      	str	r0, [r4, #4]
 800a748:	4910      	ldr	r1, [pc, #64]	; (800a78c <HttpDaemon::ParseMethod(char*)+0x80>)
 800a74a:	2000      	movs	r0, #0
 800a74c:	f004 fba0 	bl	800ee90 <strtok>
 800a750:	2800      	cmp	r0, #0
 800a752:	d0ed      	beq.n	800a730 <HttpDaemon::ParseMethod(char*)+0x24>
 800a754:	490e      	ldr	r1, [pc, #56]	; (800a790 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a756:	f7ff ff81 	bl	800a65c <strcmp>
 800a75a:	2800      	cmp	r0, #0
 800a75c:	d1e8      	bne.n	800a730 <HttpDaemon::ParseMethod(char*)+0x24>
 800a75e:	490d      	ldr	r1, [pc, #52]	; (800a794 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a760:	f004 fb96 	bl	800ee90 <strtok>
 800a764:	2800      	cmp	r0, #0
 800a766:	d0e3      	beq.n	800a730 <HttpDaemon::ParseMethod(char*)+0x24>
 800a768:	490b      	ldr	r1, [pc, #44]	; (800a798 <HttpDaemon::ParseMethod(char*)+0x8c>)
 800a76a:	f7ff ff77 	bl	800a65c <strcmp>
 800a76e:	2800      	cmp	r0, #0
 800a770:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a774:	bf08      	it	eq
 800a776:	20c8      	moveq	r0, #200	; 0xc8
 800a778:	e7dc      	b.n	800a734 <HttpDaemon::ParseMethod(char*)+0x28>
 800a77a:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a77e:	e7d9      	b.n	800a734 <HttpDaemon::ParseMethod(char*)+0x28>
 800a780:	080113a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, ip}
 800a784:	080113aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, ip}
 800a788:	080113ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip}
 800a78c:	08011418 	stmdaeq	r1, {r3, r4, sl, ip}
 800a790:	080113b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, ip}
 800a794:	080113b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, ip}
 800a798:	080113bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, ip}

0800a79c <HttpDaemon::ParseHeaderField(char*)>:
 800a79c:	b538      	push	{r3, r4, r5, lr}
 800a79e:	4605      	mov	r5, r0
 800a7a0:	4608      	mov	r0, r1
 800a7a2:	491d      	ldr	r1, [pc, #116]	; (800a818 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a7a4:	f004 fb74 	bl	800ee90 <strtok>
 800a7a8:	4604      	mov	r4, r0
 800a7aa:	b910      	cbnz	r0, 800a7b2 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a7ac:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a7b0:	bd38      	pop	{r3, r4, r5, pc}
 800a7b2:	491a      	ldr	r1, [pc, #104]	; (800a81c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a7b4:	f7ff ff5f 	bl	800a676 <strcasecmp>
 800a7b8:	b970      	cbnz	r0, 800a7d8 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a7ba:	4919      	ldr	r1, [pc, #100]	; (800a820 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a7bc:	f004 fb68 	bl	800ee90 <strtok>
 800a7c0:	2800      	cmp	r0, #0
 800a7c2:	d0f3      	beq.n	800a7ac <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a7c4:	4917      	ldr	r1, [pc, #92]	; (800a824 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a7c6:	f7ff ff49 	bl	800a65c <strcmp>
 800a7ca:	b108      	cbz	r0, 800a7d0 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a7cc:	20c8      	movs	r0, #200	; 0xc8
 800a7ce:	e7ef      	b.n	800a7b0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a7d0:	2301      	movs	r3, #1
 800a7d2:	f885 3020 	strb.w	r3, [r5, #32]
 800a7d6:	e7f9      	b.n	800a7cc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a7d8:	4620      	mov	r0, r4
 800a7da:	4913      	ldr	r1, [pc, #76]	; (800a828 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a7dc:	f7ff ff4b 	bl	800a676 <strcasecmp>
 800a7e0:	4604      	mov	r4, r0
 800a7e2:	2800      	cmp	r0, #0
 800a7e4:	d1f2      	bne.n	800a7cc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a7e6:	4911      	ldr	r1, [pc, #68]	; (800a82c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a7e8:	f004 fb52 	bl	800ee90 <strtok>
 800a7ec:	2800      	cmp	r0, #0
 800a7ee:	d0dd      	beq.n	800a7ac <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a7f0:	1e42      	subs	r2, r0, #1
 800a7f2:	4623      	mov	r3, r4
 800a7f4:	200a      	movs	r0, #10
 800a7f6:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a7fa:	b151      	cbz	r1, 800a812 <HttpDaemon::ParseHeaderField(char*)+0x76>
 800a7fc:	3930      	subs	r1, #48	; 0x30
 800a7fe:	2909      	cmp	r1, #9
 800a800:	d8d4      	bhi.n	800a7ac <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a802:	fb00 1303 	mla	r3, r0, r3, r1
 800a806:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a80a:	d9f4      	bls.n	800a7f6 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a80c:	f240 109d 	movw	r0, #413	; 0x19d
 800a810:	e7ce      	b.n	800a7b0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a812:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800a816:	e7d9      	b.n	800a7cc <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a818:	080113bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, ip}
 800a81c:	080113c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, ip}
 800a820:	080113ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, ip}
 800a824:	080113d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, ip}
 800a828:	080113e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, ip}
 800a82c:	080113a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, ip}

0800a830 <HttpDaemon::ParseRequest()>:
 800a830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a832:	2400      	movs	r4, #0
 800a834:	4605      	mov	r5, r0
 800a836:	4622      	mov	r2, r4
 800a838:	4626      	mov	r6, r4
 800a83a:	68c1      	ldr	r1, [r0, #12]
 800a83c:	f880 4020 	strb.w	r4, [r0, #32]
 800a840:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800a844:	8aab      	ldrh	r3, [r5, #20]
 800a846:	42a3      	cmp	r3, r4
 800a848:	d923      	bls.n	800a892 <HttpDaemon::ParseRequest()+0x62>
 800a84a:	68eb      	ldr	r3, [r5, #12]
 800a84c:	5d18      	ldrb	r0, [r3, r4]
 800a84e:	280a      	cmp	r0, #10
 800a850:	d10e      	bne.n	800a870 <HttpDaemon::ParseRequest()+0x40>
 800a852:	4423      	add	r3, r4
 800a854:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a858:	1c57      	adds	r7, r2, #1
 800a85a:	b962      	cbnz	r2, 800a876 <HttpDaemon::ParseRequest()+0x46>
 800a85c:	4628      	mov	r0, r5
 800a85e:	f7ff ff55 	bl	800a70c <HttpDaemon::ParseMethod(char*)>
 800a862:	28c8      	cmp	r0, #200	; 0xc8
 800a864:	d116      	bne.n	800a894 <HttpDaemon::ParseRequest()+0x64>
 800a866:	463a      	mov	r2, r7
 800a868:	68e9      	ldr	r1, [r5, #12]
 800a86a:	3401      	adds	r4, #1
 800a86c:	b2a4      	uxth	r4, r4
 800a86e:	4421      	add	r1, r4
 800a870:	3401      	adds	r4, #1
 800a872:	b2a4      	uxth	r4, r4
 800a874:	e7e6      	b.n	800a844 <HttpDaemon::ParseRequest()+0x14>
 800a876:	7808      	ldrb	r0, [r1, #0]
 800a878:	b968      	cbnz	r0, 800a896 <HttpDaemon::ParseRequest()+0x66>
 800a87a:	696b      	ldr	r3, [r5, #20]
 800a87c:	3b01      	subs	r3, #1
 800a87e:	1b1b      	subs	r3, r3, r4
 800a880:	b29b      	uxth	r3, r3
 800a882:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800a886:	b123      	cbz	r3, 800a892 <HttpDaemon::ParseRequest()+0x62>
 800a888:	68ea      	ldr	r2, [r5, #12]
 800a88a:	3401      	adds	r4, #1
 800a88c:	4414      	add	r4, r2
 800a88e:	60ac      	str	r4, [r5, #8]
 800a890:	54e0      	strb	r0, [r4, r3]
 800a892:	20c8      	movs	r0, #200	; 0xc8
 800a894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a896:	4628      	mov	r0, r5
 800a898:	f7ff ff80 	bl	800a79c <HttpDaemon::ParseHeaderField(char*)>
 800a89c:	e7e1      	b.n	800a862 <HttpDaemon::ParseRequest()+0x32>
	...

0800a8a0 <HttpDaemon::HandleGetTxt()>:
 800a8a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8a4:	6847      	ldr	r7, [r0, #4]
 800a8a6:	4604      	mov	r4, r0
 800a8a8:	1dbd      	adds	r5, r7, #6
 800a8aa:	462b      	mov	r3, r5
 800a8ac:	4618      	mov	r0, r3
 800a8ae:	7802      	ldrb	r2, [r0, #0]
 800a8b0:	3301      	adds	r3, #1
 800a8b2:	2a00      	cmp	r2, #0
 800a8b4:	d1fa      	bne.n	800a8ac <HttpDaemon::HandleGetTxt()+0xc>
 800a8b6:	1b40      	subs	r0, r0, r5
 800a8b8:	2804      	cmp	r0, #4
 800a8ba:	d925      	bls.n	800a908 <HttpDaemon::HandleGetTxt()+0x68>
 800a8bc:	3804      	subs	r0, #4
 800a8be:	4915      	ldr	r1, [pc, #84]	; (800a914 <HttpDaemon::HandleGetTxt()+0x74>)
 800a8c0:	4428      	add	r0, r5
 800a8c2:	f7ff fecb 	bl	800a65c <strcmp>
 800a8c6:	b9f8      	cbnz	r0, 800a908 <HttpDaemon::HandleGetTxt()+0x68>
 800a8c8:	4b13      	ldr	r3, [pc, #76]	; (800a918 <HttpDaemon::HandleGetTxt()+0x78>)
 800a8ca:	2001      	movs	r0, #1
 800a8cc:	f893 8000 	ldrb.w	r8, [r3]
 800a8d0:	f7ff feec 	bl	800a6ac <PropertiesConfig::EnableJSON(bool)>
 800a8d4:	4b11      	ldr	r3, [pc, #68]	; (800a91c <HttpDaemon::HandleGetTxt()+0x7c>)
 800a8d6:	f240 529b 	movw	r2, #1435	; 0x59b
 800a8da:	4629      	mov	r1, r5
 800a8dc:	6818      	ldr	r0, [r3, #0]
 800a8de:	f7ff fa9f 	bl	8009e20 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a8e2:	4606      	mov	r6, r0
 800a8e4:	f008 0801 	and.w	r8, r8, #1
 800a8e8:	4640      	mov	r0, r8
 800a8ea:	f7ff fedf 	bl	800a6ac <PropertiesConfig::EnableJSON(bool)>
 800a8ee:	b15e      	cbz	r6, 800a908 <HttpDaemon::HandleGetTxt()+0x68>
 800a8f0:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800a8f4:	3606      	adds	r6, #6
 800a8f6:	3422      	adds	r4, #34	; 0x22
 800a8f8:	443e      	add	r6, r7
 800a8fa:	42b5      	cmp	r5, r6
 800a8fc:	d008      	beq.n	800a910 <HttpDaemon::HandleGetTxt()+0x70>
 800a8fe:	f815 3b01 	ldrb.w	r3, [r5], #1
 800a902:	f804 3b01 	strb.w	r3, [r4], #1
 800a906:	e7f8      	b.n	800a8fa <HttpDaemon::HandleGetTxt()+0x5a>
 800a908:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a90c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a910:	20c8      	movs	r0, #200	; 0xc8
 800a912:	e7fb      	b.n	800a90c <HttpDaemon::HandleGetTxt()+0x6c>
 800a914:	08011328 	stmdaeq	r1, {r3, r5, r8, r9, ip}
 800a918:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6
 800a91c:	20000b74 	andcs	r0, r0, r4, ror fp

0800a920 <HttpDaemon::HandleGet()>:
 800a920:	b570      	push	{r4, r5, r6, lr}
 800a922:	6845      	ldr	r5, [r0, #4]
 800a924:	4604      	mov	r4, r0
 800a926:	4943      	ldr	r1, [pc, #268]	; (800aa34 <HttpDaemon::HandleGet()+0x114>)
 800a928:	4628      	mov	r0, r5
 800a92a:	f7ff fe97 	bl	800a65c <strcmp>
 800a92e:	b120      	cbz	r0, 800a93a <HttpDaemon::HandleGet()+0x1a>
 800a930:	4628      	mov	r0, r5
 800a932:	4941      	ldr	r1, [pc, #260]	; (800aa38 <HttpDaemon::HandleGet()+0x118>)
 800a934:	f7ff fe92 	bl	800a65c <strcmp>
 800a938:	b960      	cbnz	r0, 800a954 <HttpDaemon::HandleGet()+0x34>
 800a93a:	4621      	mov	r1, r4
 800a93c:	4b3f      	ldr	r3, [pc, #252]	; (800aa3c <HttpDaemon::HandleGet()+0x11c>)
 800a93e:	4840      	ldr	r0, [pc, #256]	; (800aa40 <HttpDaemon::HandleGet()+0x120>)
 800a940:	f841 3b22 	str.w	r3, [r1], #34
 800a944:	f000 fa7a 	bl	800ae3c <get_file_content(char const*, char*)>
 800a948:	2800      	cmp	r0, #0
 800a94a:	dd1e      	ble.n	800a98a <HttpDaemon::HandleGet()+0x6a>
 800a94c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a950:	20c8      	movs	r0, #200	; 0xc8
 800a952:	bd70      	pop	{r4, r5, r6, pc}
 800a954:	4628      	mov	r0, r5
 800a956:	493b      	ldr	r1, [pc, #236]	; (800aa44 <HttpDaemon::HandleGet()+0x124>)
 800a958:	f7ff fe80 	bl	800a65c <strcmp>
 800a95c:	b928      	cbnz	r0, 800a96a <HttpDaemon::HandleGet()+0x4a>
 800a95e:	4621      	mov	r1, r4
 800a960:	4b39      	ldr	r3, [pc, #228]	; (800aa48 <HttpDaemon::HandleGet()+0x128>)
 800a962:	483a      	ldr	r0, [pc, #232]	; (800aa4c <HttpDaemon::HandleGet()+0x12c>)
 800a964:	f841 3b22 	str.w	r3, [r1], #34
 800a968:	e7ec      	b.n	800a944 <HttpDaemon::HandleGet()+0x24>
 800a96a:	4628      	mov	r0, r5
 800a96c:	4938      	ldr	r1, [pc, #224]	; (800aa50 <HttpDaemon::HandleGet()+0x130>)
 800a96e:	f7ff fe75 	bl	800a65c <strcmp>
 800a972:	b168      	cbz	r0, 800a990 <HttpDaemon::HandleGet()+0x70>
 800a974:	4a37      	ldr	r2, [pc, #220]	; (800aa54 <HttpDaemon::HandleGet()+0x134>)
 800a976:	1e6b      	subs	r3, r5, #1
 800a978:	1d6e      	adds	r6, r5, #5
 800a97a:	42b3      	cmp	r3, r6
 800a97c:	d00e      	beq.n	800a99c <HttpDaemon::HandleGet()+0x7c>
 800a97e:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a982:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a986:	4288      	cmp	r0, r1
 800a988:	d0f7      	beq.n	800a97a <HttpDaemon::HandleGet()+0x5a>
 800a98a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a98e:	e7e0      	b.n	800a952 <HttpDaemon::HandleGet()+0x32>
 800a990:	4621      	mov	r1, r4
 800a992:	4b31      	ldr	r3, [pc, #196]	; (800aa58 <HttpDaemon::HandleGet()+0x138>)
 800a994:	4831      	ldr	r0, [pc, #196]	; (800aa5c <HttpDaemon::HandleGet()+0x13c>)
 800a996:	f841 3b22 	str.w	r3, [r1], #34
 800a99a:	e7d3      	b.n	800a944 <HttpDaemon::HandleGet()+0x24>
 800a99c:	4b30      	ldr	r3, [pc, #192]	; (800aa60 <HttpDaemon::HandleGet()+0x140>)
 800a99e:	3506      	adds	r5, #6
 800a9a0:	4628      	mov	r0, r5
 800a9a2:	4930      	ldr	r1, [pc, #192]	; (800aa64 <HttpDaemon::HandleGet()+0x144>)
 800a9a4:	6023      	str	r3, [r4, #0]
 800a9a6:	f7ff fe59 	bl	800a65c <strcmp>
 800a9aa:	b930      	cbnz	r0, 800a9ba <HttpDaemon::HandleGet()+0x9a>
 800a9ac:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a9b0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a9b4:	f000 f9ca 	bl	800ad4c <remoteconfig::json_get_list(char*, unsigned short)>
 800a9b8:	e7c6      	b.n	800a948 <HttpDaemon::HandleGet()+0x28>
 800a9ba:	4628      	mov	r0, r5
 800a9bc:	492a      	ldr	r1, [pc, #168]	; (800aa68 <HttpDaemon::HandleGet()+0x148>)
 800a9be:	f7ff fe4d 	bl	800a65c <strcmp>
 800a9c2:	b930      	cbnz	r0, 800a9d2 <HttpDaemon::HandleGet()+0xb2>
 800a9c4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a9c8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a9cc:	f000 f9f2 	bl	800adb4 <remoteconfig::json_get_version(char*, unsigned short)>
 800a9d0:	e7ba      	b.n	800a948 <HttpDaemon::HandleGet()+0x28>
 800a9d2:	4628      	mov	r0, r5
 800a9d4:	4925      	ldr	r1, [pc, #148]	; (800aa6c <HttpDaemon::HandleGet()+0x14c>)
 800a9d6:	f7ff fe41 	bl	800a65c <strcmp>
 800a9da:	b950      	cbnz	r0, 800a9f2 <HttpDaemon::HandleGet()+0xd2>
 800a9dc:	4b24      	ldr	r3, [pc, #144]	; (800aa70 <HttpDaemon::HandleGet()+0x150>)
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	7bdb      	ldrb	r3, [r3, #15]
 800a9e2:	b31b      	cbz	r3, 800aa2c <HttpDaemon::HandleGet()+0x10c>
 800a9e4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a9e8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a9ec:	f000 f9fe 	bl	800adec <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a9f0:	e7aa      	b.n	800a948 <HttpDaemon::HandleGet()+0x28>
 800a9f2:	4628      	mov	r0, r5
 800a9f4:	491f      	ldr	r1, [pc, #124]	; (800aa74 <HttpDaemon::HandleGet()+0x154>)
 800a9f6:	f7ff fe31 	bl	800a65c <strcmp>
 800a9fa:	b930      	cbnz	r0, 800aa0a <HttpDaemon::HandleGet()+0xea>
 800a9fc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa00:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa04:	f000 fa02 	bl	800ae0c <remoteconfig::json_get_display(char*, unsigned short)>
 800aa08:	e79e      	b.n	800a948 <HttpDaemon::HandleGet()+0x28>
 800aa0a:	4628      	mov	r0, r5
 800aa0c:	491a      	ldr	r1, [pc, #104]	; (800aa78 <HttpDaemon::HandleGet()+0x158>)
 800aa0e:	f7ff fe25 	bl	800a65c <strcmp>
 800aa12:	b930      	cbnz	r0, 800aa22 <HttpDaemon::HandleGet()+0x102>
 800aa14:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aa18:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800aa1c:	f000 fa06 	bl	800ae2c <remoteconfig::json_get_directory(char*, unsigned short)>
 800aa20:	e792      	b.n	800a948 <HttpDaemon::HandleGet()+0x28>
 800aa22:	4620      	mov	r0, r4
 800aa24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa28:	f7ff bf3a 	b.w	800a8a0 <HttpDaemon::HandleGetTxt()>
 800aa2c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800aa30:	e78f      	b.n	800a952 <HttpDaemon::HandleGet()+0x32>
 800aa32:	bf00      	nop
 800aa34:	08011418 	stmdaeq	r1, {r3, r4, sl, ip}
 800aa38:	080113f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, ip}
 800aa3c:	08011604 	stmdaeq	r1, {r2, r9, sl, ip}
 800aa40:	080113f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, ip}
 800aa44:	080113fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip}
 800aa48:	08011624 	stmdaeq	r1, {r2, r5, r9, sl, ip}
 800aa4c:	080113fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip}
 800aa50:	08011409 	stmdaeq	r1, {r0, r3, sl, ip}
 800aa54:	08011413 	stmdaeq	r1, {r0, r1, r4, sl, ip}
 800aa58:	08011644 	stmdaeq	r1, {r2, r6, r9, sl, ip}
 800aa5c:	0801140a 	stmdaeq	r1, {r1, r3, sl, ip}
 800aa60:	08011664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip}
 800aa64:	0801141a 	stmdaeq	r1, {r1, r3, r4, sl, ip}
 800aa68:	0801141f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip}
 800aa6c:	08011427 	stmdaeq	r1, {r0, r1, r2, r5, sl, ip}
 800aa70:	20000b74 	andcs	r0, r0, r4, ror fp
 800aa74:	0801142e 	stmdaeq	r1, {r1, r2, r3, r5, sl, ip}
 800aa78:	08011436 	stmdaeq	r1, {r1, r2, r4, r5, sl, ip}

0800aa7c <HttpDaemon::HandlePost(bool)>:
 800aa7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa7e:	4604      	mov	r4, r0
 800aa80:	2900      	cmp	r1, #0
 800aa82:	f040 8090 	bne.w	800aba6 <HttpDaemon::HandlePost(bool)+0x12a>
 800aa86:	f890 3020 	ldrb.w	r3, [r0, #32]
 800aa8a:	2b00      	cmp	r3, #0
 800aa8c:	d05d      	beq.n	800ab4a <HttpDaemon::HandlePost(bool)+0xce>
 800aa8e:	6845      	ldr	r5, [r0, #4]
 800aa90:	4948      	ldr	r1, [pc, #288]	; (800abb4 <HttpDaemon::HandlePost(bool)+0x138>)
 800aa92:	4628      	mov	r0, r5
 800aa94:	f7ff fde2 	bl	800a65c <strcmp>
 800aa98:	2800      	cmp	r0, #0
 800aa9a:	bf0c      	ite	eq
 800aa9c:	2301      	moveq	r3, #1
 800aa9e:	2300      	movne	r3, #0
 800aaa0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800aaa4:	d055      	beq.n	800ab52 <HttpDaemon::HandlePost(bool)+0xd6>
 800aaa6:	4628      	mov	r0, r5
 800aaa8:	4943      	ldr	r1, [pc, #268]	; (800abb8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800aaaa:	f7ff fdd7 	bl	800a65c <strcmp>
 800aaae:	2800      	cmp	r0, #0
 800aab0:	d04f      	beq.n	800ab52 <HttpDaemon::HandlePost(bool)+0xd6>
 800aab2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800aab6:	e04a      	b.n	800ab4e <HttpDaemon::HandlePost(bool)+0xd2>
 800aab8:	4940      	ldr	r1, [pc, #256]	; (800abbc <HttpDaemon::HandlePost(bool)+0x140>)
 800aaba:	68a0      	ldr	r0, [r4, #8]
 800aabc:	f10d 0207 	add.w	r2, sp, #7
 800aac0:	f003 fc7b 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aac4:	b9e8      	cbnz	r0, 800ab02 <HttpDaemon::HandlePost(bool)+0x86>
 800aac6:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800aaca:	4b3d      	ldr	r3, [pc, #244]	; (800abc0 <HttpDaemon::HandlePost(bool)+0x144>)
 800aacc:	fab6 f186 	clz	r1, r6
 800aad0:	681d      	ldr	r5, [r3, #0]
 800aad2:	0949      	lsrs	r1, r1, #5
 800aad4:	69a8      	ldr	r0, [r5, #24]
 800aad6:	b138      	cbz	r0, 800aae8 <HttpDaemon::HandlePost(bool)+0x6c>
 800aad8:	6803      	ldr	r3, [r0, #0]
 800aada:	7429      	strb	r1, [r5, #16]
 800aadc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aade:	4798      	blx	r3
 800aae0:	b116      	cbz	r6, 800aae8 <HttpDaemon::HandlePost(bool)+0x6c>
 800aae2:	4b38      	ldr	r3, [pc, #224]	; (800abc4 <HttpDaemon::HandlePost(bool)+0x148>)
 800aae4:	681b      	ldr	r3, [r3, #0]
 800aae6:	606b      	str	r3, [r5, #4]
 800aae8:	4620      	mov	r0, r4
 800aaea:	4b37      	ldr	r3, [pc, #220]	; (800abc8 <HttpDaemon::HandlePost(bool)+0x14c>)
 800aaec:	f240 519f 	movw	r1, #1439	; 0x59f
 800aaf0:	4a36      	ldr	r2, [pc, #216]	; (800abcc <HttpDaemon::HandlePost(bool)+0x150>)
 800aaf2:	f840 3b22 	str.w	r3, [r0], #34
 800aaf6:	f7fd fb3b 	bl	8008170 <snprintf>
 800aafa:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800aafe:	20c8      	movs	r0, #200	; 0xc8
 800ab00:	e025      	b.n	800ab4e <HttpDaemon::HandlePost(bool)+0xd2>
 800ab02:	4933      	ldr	r1, [pc, #204]	; (800abd0 <HttpDaemon::HandlePost(bool)+0x154>)
 800ab04:	68a0      	ldr	r0, [r4, #8]
 800ab06:	f10d 0207 	add.w	r2, sp, #7
 800ab0a:	f003 fc56 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab0e:	b9e0      	cbnz	r0, 800ab4a <HttpDaemon::HandlePost(bool)+0xce>
 800ab10:	4b30      	ldr	r3, [pc, #192]	; (800abd4 <HttpDaemon::HandlePost(bool)+0x158>)
 800ab12:	6818      	ldr	r0, [r3, #0]
 800ab14:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ab18:	b11b      	cbz	r3, 800ab22 <HttpDaemon::HandlePost(bool)+0xa6>
 800ab1a:	2104      	movs	r1, #4
 800ab1c:	f003 ffee 	bl	800eafc <LedBlink::SetMode(ledblink::Mode)>
 800ab20:	e7e2      	b.n	800aae8 <HttpDaemon::HandlePost(bool)+0x6c>
 800ab22:	2102      	movs	r1, #2
 800ab24:	e7fa      	b.n	800ab1c <HttpDaemon::HandlePost(bool)+0xa0>
 800ab26:	4b2c      	ldr	r3, [pc, #176]	; (800abd8 <HttpDaemon::HandlePost(bool)+0x15c>)
 800ab28:	2001      	movs	r0, #1
 800ab2a:	781d      	ldrb	r5, [r3, #0]
 800ab2c:	f7ff fdbe 	bl	800a6ac <PropertiesConfig::EnableJSON(bool)>
 800ab30:	4b2a      	ldr	r3, [pc, #168]	; (800abdc <HttpDaemon::HandlePost(bool)+0x160>)
 800ab32:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800ab36:	6818      	ldr	r0, [r3, #0]
 800ab38:	68a1      	ldr	r1, [r4, #8]
 800ab3a:	f005 0501 	and.w	r5, r5, #1
 800ab3e:	f7ff fa25 	bl	8009f8c <RemoteConfig::HandleSet(void*, unsigned int)>
 800ab42:	4628      	mov	r0, r5
 800ab44:	f7ff fdb2 	bl	800a6ac <PropertiesConfig::EnableJSON(bool)>
 800ab48:	e7ce      	b.n	800aae8 <HttpDaemon::HandlePost(bool)+0x6c>
 800ab4a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800ab4e:	b002      	add	sp, #8
 800ab50:	bd70      	pop	{r4, r5, r6, pc}
 800ab52:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800ab56:	6962      	ldr	r2, [r4, #20]
 800ab58:	429a      	cmp	r2, r3
 800ab5a:	dbd0      	blt.n	800aafe <HttpDaemon::HandlePost(bool)+0x82>
 800ab5c:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	d0cc      	beq.n	800aafe <HttpDaemon::HandlePost(bool)+0x82>
 800ab64:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800ab68:	2b00      	cmp	r3, #0
 800ab6a:	d0dc      	beq.n	800ab26 <HttpDaemon::HandlePost(bool)+0xaa>
 800ab6c:	2201      	movs	r2, #1
 800ab6e:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800ab72:	68a0      	ldr	r0, [r4, #8]
 800ab74:	f003 fa24 	bl	800dfc0 <properties::convert_json_file(char*, unsigned short, bool)>
 800ab78:	2800      	cmp	r0, #0
 800ab7a:	dde6      	ble.n	800ab4a <HttpDaemon::HandlePost(bool)+0xce>
 800ab7c:	4918      	ldr	r1, [pc, #96]	; (800abe0 <HttpDaemon::HandlePost(bool)+0x164>)
 800ab7e:	68a0      	ldr	r0, [r4, #8]
 800ab80:	f10d 0207 	add.w	r2, sp, #7
 800ab84:	f003 fc19 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab88:	2800      	cmp	r0, #0
 800ab8a:	d195      	bne.n	800aab8 <HttpDaemon::HandlePost(bool)+0x3c>
 800ab8c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ab90:	2b00      	cmp	r3, #0
 800ab92:	d0a9      	beq.n	800aae8 <HttpDaemon::HandlePost(bool)+0x6c>
 800ab94:	4b11      	ldr	r3, [pc, #68]	; (800abdc <HttpDaemon::HandlePost(bool)+0x160>)
 800ab96:	681b      	ldr	r3, [r3, #0]
 800ab98:	7b9b      	ldrb	r3, [r3, #14]
 800ab9a:	2b00      	cmp	r3, #0
 800ab9c:	d0d5      	beq.n	800ab4a <HttpDaemon::HandlePost(bool)+0xce>
 800ab9e:	4b11      	ldr	r3, [pc, #68]	; (800abe4 <HttpDaemon::HandlePost(bool)+0x168>)
 800aba0:	6818      	ldr	r0, [r3, #0]
 800aba2:	f004 f82f 	bl	800ec04 <Hardware::Reboot()>
 800aba6:	68c3      	ldr	r3, [r0, #12]
 800aba8:	6083      	str	r3, [r0, #8]
 800abaa:	6943      	ldr	r3, [r0, #20]
 800abac:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800abb0:	e7d8      	b.n	800ab64 <HttpDaemon::HandlePost(bool)+0xe8>
 800abb2:	bf00      	nop
 800abb4:	08011440 	stmdaeq	r1, {r6, sl, ip}
 800abb8:	080113dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, ip}
 800abbc:	0801142e 	stmdaeq	r1, {r1, r2, r3, r5, sl, ip}
 800abc0:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800abc4:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800abc8:	08011604 	stmdaeq	r1, {r2, r9, sl, ip}
 800abcc:	0801145d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, ip}
 800abd0:	08011454 	stmdaeq	r1, {r2, r4, r6, sl, ip}
 800abd4:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800abd8:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6
 800abdc:	20000b74 	andcs	r0, r0, r4, ror fp
 800abe0:	0801144d 	stmdaeq	r1, {r0, r2, r3, r6, sl, ip}
 800abe4:	20009ba8 	andcs	r9, r0, r8, lsr #23

0800abe8 <HttpDaemon::Run()>:
 800abe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abea:	4e4a      	ldr	r6, [pc, #296]	; (800ad14 <HttpDaemon::Run()+0x12c>)
 800abec:	4604      	mov	r4, r0
 800abee:	6901      	ldr	r1, [r0, #16]
 800abf0:	f100 020c 	add.w	r2, r0, #12
 800abf4:	b085      	sub	sp, #20
 800abf6:	6830      	ldr	r0, [r6, #0]
 800abf8:	f002 fa21 	bl	800d03e <Network::TcpRead(int, unsigned char const**)>
 800abfc:	6160      	str	r0, [r4, #20]
 800abfe:	2800      	cmp	r0, #0
 800ac00:	d061      	beq.n	800acc6 <HttpDaemon::Run()+0xde>
 800ac02:	69a3      	ldr	r3, [r4, #24]
 800ac04:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ac08:	d15f      	bne.n	800acca <HttpDaemon::Run()+0xe2>
 800ac0a:	4620      	mov	r0, r4
 800ac0c:	f7ff fe10 	bl	800a830 <HttpDaemon::ParseRequest()>
 800ac10:	28c8      	cmp	r0, #200	; 0xc8
 800ac12:	61a0      	str	r0, [r4, #24]
 800ac14:	d106      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800ac16:	69e3      	ldr	r3, [r4, #28]
 800ac18:	2b00      	cmp	r3, #0
 800ac1a:	d147      	bne.n	800acac <HttpDaemon::Run()+0xc4>
 800ac1c:	4620      	mov	r0, r4
 800ac1e:	f7ff fe7f 	bl	800a920 <HttpDaemon::HandleGet()>
 800ac22:	61a0      	str	r0, [r4, #24]
 800ac24:	69a3      	ldr	r3, [r4, #24]
 800ac26:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800ac2a:	2bc8      	cmp	r3, #200	; 0xc8
 800ac2c:	d06f      	beq.n	800ad0e <HttpDaemon::Run()+0x126>
 800ac2e:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800ac32:	d062      	beq.n	800acfa <HttpDaemon::Run()+0x112>
 800ac34:	dc52      	bgt.n	800acdc <HttpDaemon::Run()+0xf4>
 800ac36:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800ac3a:	d060      	beq.n	800acfe <HttpDaemon::Run()+0x116>
 800ac3c:	f240 129d 	movw	r2, #413	; 0x19d
 800ac40:	4293      	cmp	r3, r2
 800ac42:	d05e      	beq.n	800ad02 <HttpDaemon::Run()+0x11a>
 800ac44:	4d34      	ldr	r5, [pc, #208]	; (800ad18 <HttpDaemon::Run()+0x130>)
 800ac46:	4a35      	ldr	r2, [pc, #212]	; (800ad1c <HttpDaemon::Run()+0x134>)
 800ac48:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800ac4c:	bf18      	it	ne
 800ac4e:	4615      	movne	r5, r2
 800ac50:	4a33      	ldr	r2, [pc, #204]	; (800ad20 <HttpDaemon::Run()+0x138>)
 800ac52:	f240 519f 	movw	r1, #1439	; 0x59f
 800ac56:	6022      	str	r2, [r4, #0]
 800ac58:	4638      	mov	r0, r7
 800ac5a:	e9cd 5500 	strd	r5, r5, [sp]
 800ac5e:	4a31      	ldr	r2, [pc, #196]	; (800ad24 <HttpDaemon::Run()+0x13c>)
 800ac60:	f7fd fa86 	bl	8008170 <snprintf>
 800ac64:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800ac68:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800ac6c:	f240 519f 	movw	r1, #1439	; 0x59f
 800ac70:	9303      	str	r3, [sp, #12]
 800ac72:	6823      	ldr	r3, [r4, #0]
 800ac74:	4a2c      	ldr	r2, [pc, #176]	; (800ad28 <HttpDaemon::Run()+0x140>)
 800ac76:	9302      	str	r3, [sp, #8]
 800ac78:	4b2c      	ldr	r3, [pc, #176]	; (800ad2c <HttpDaemon::Run()+0x144>)
 800ac7a:	68e0      	ldr	r0, [r4, #12]
 800ac7c:	e9cd 5300 	strd	r5, r3, [sp]
 800ac80:	69a3      	ldr	r3, [r4, #24]
 800ac82:	f7fd fa75 	bl	8008170 <snprintf>
 800ac86:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800ac8a:	b283      	uxth	r3, r0
 800ac8c:	6830      	ldr	r0, [r6, #0]
 800ac8e:	f002 f9da 	bl	800d046 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800ac92:	463a      	mov	r2, r7
 800ac94:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800ac98:	6921      	ldr	r1, [r4, #16]
 800ac9a:	6830      	ldr	r0, [r6, #0]
 800ac9c:	f002 f9d3 	bl	800d046 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800aca0:	f44f 7202 	mov.w	r2, #520	; 0x208
 800aca4:	2302      	movs	r3, #2
 800aca6:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800acaa:	e00c      	b.n	800acc6 <HttpDaemon::Run()+0xde>
 800acac:	2b01      	cmp	r3, #1
 800acae:	d1b9      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800acb0:	2100      	movs	r1, #0
 800acb2:	4620      	mov	r0, r4
 800acb4:	f7ff fee2 	bl	800aa7c <HttpDaemon::HandlePost(bool)>
 800acb8:	28c8      	cmp	r0, #200	; 0xc8
 800acba:	61a0      	str	r0, [r4, #24]
 800acbc:	d1b2      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800acbe:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800acc2:	2b00      	cmp	r3, #0
 800acc4:	d1ae      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800acc6:	b005      	add	sp, #20
 800acc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800acca:	2bc8      	cmp	r3, #200	; 0xc8
 800accc:	d1aa      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800acce:	69e1      	ldr	r1, [r4, #28]
 800acd0:	2901      	cmp	r1, #1
 800acd2:	d1a7      	bne.n	800ac24 <HttpDaemon::Run()+0x3c>
 800acd4:	4620      	mov	r0, r4
 800acd6:	f7ff fed1 	bl	800aa7c <HttpDaemon::HandlePost(bool)>
 800acda:	e7a2      	b.n	800ac22 <HttpDaemon::Run()+0x3a>
 800acdc:	f240 12f5 	movw	r2, #501	; 0x1f5
 800ace0:	4293      	cmp	r3, r2
 800ace2:	d010      	beq.n	800ad06 <HttpDaemon::Run()+0x11e>
 800ace4:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ace8:	4293      	cmp	r3, r2
 800acea:	d00e      	beq.n	800ad0a <HttpDaemon::Run()+0x122>
 800acec:	4d10      	ldr	r5, [pc, #64]	; (800ad30 <HttpDaemon::Run()+0x148>)
 800acee:	4a0b      	ldr	r2, [pc, #44]	; (800ad1c <HttpDaemon::Run()+0x134>)
 800acf0:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800acf4:	bf18      	it	ne
 800acf6:	4615      	movne	r5, r2
 800acf8:	e7aa      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800acfa:	4d0e      	ldr	r5, [pc, #56]	; (800ad34 <HttpDaemon::Run()+0x14c>)
 800acfc:	e7a8      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800acfe:	4d0e      	ldr	r5, [pc, #56]	; (800ad38 <HttpDaemon::Run()+0x150>)
 800ad00:	e7a6      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800ad02:	4d0e      	ldr	r5, [pc, #56]	; (800ad3c <HttpDaemon::Run()+0x154>)
 800ad04:	e7a4      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800ad06:	4d0e      	ldr	r5, [pc, #56]	; (800ad40 <HttpDaemon::Run()+0x158>)
 800ad08:	e7a2      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800ad0a:	4d0e      	ldr	r5, [pc, #56]	; (800ad44 <HttpDaemon::Run()+0x15c>)
 800ad0c:	e7a0      	b.n	800ac50 <HttpDaemon::Run()+0x68>
 800ad0e:	4d0e      	ldr	r5, [pc, #56]	; (800ad48 <HttpDaemon::Run()+0x160>)
 800ad10:	e7aa      	b.n	800ac68 <HttpDaemon::Run()+0x80>
 800ad12:	bf00      	nop
 800ad14:	20009488 	andcs	r9, r0, r8, lsl #9
 800ad18:	0801151e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, ip}
 800ad1c:	0801152a 	stmdaeq	r1, {r1, r3, r5, r8, sl, ip}
 800ad20:	08011604 	stmdaeq	r1, {r2, r9, sl, ip}
 800ad24:	08011551 	stmdaeq	r1, {r0, r4, r6, r8, sl, ip}
 800ad28:	080115ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip}
 800ad2c:	08010d92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp}
 800ad30:	08011538 	stmdaeq	r1, {r3, r4, r5, r8, sl, ip}
 800ad34:	080114dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip}
 800ad38:	080114d2 	stmdaeq	r1, {r1, r4, r6, r7, sl, ip}
 800ad3c:	080114b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, ip}
 800ad40:	08011507 	stmdaeq	r1, {r0, r1, r2, r8, sl, ip}
 800ad44:	080114f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, ip}
 800ad48:	0801154e 	stmdaeq	r1, {r1, r2, r3, r6, r8, sl, ip}

0800ad4c <remoteconfig::json_get_list(char*, unsigned short)>:
 800ad4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad50:	4b14      	ldr	r3, [pc, #80]	; (800ada4 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ad52:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800ada8 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ad56:	681b      	ldr	r3, [r3, #0]
 800ad58:	b088      	sub	sp, #32
 800ad5a:	4605      	mov	r5, r0
 800ad5c:	f8d8 0000 	ldr.w	r0, [r8]
 800ad60:	691c      	ldr	r4, [r3, #16]
 800ad62:	460e      	mov	r6, r1
 800ad64:	f7ff f80c 	bl	8009d80 <RemoteConfig::GetStringNode() const>
 800ad68:	4607      	mov	r7, r0
 800ad6a:	f8d8 0000 	ldr.w	r0, [r8]
 800ad6e:	f7ff f813 	bl	8009d98 <RemoteConfig::GetStringOutput() const>
 800ad72:	4b0e      	ldr	r3, [pc, #56]	; (800adac <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ad74:	4631      	mov	r1, r6
 800ad76:	7a1a      	ldrb	r2, [r3, #8]
 800ad78:	3309      	adds	r3, #9
 800ad7a:	9303      	str	r3, [sp, #12]
 800ad7c:	0e23      	lsrs	r3, r4, #24
 800ad7e:	9302      	str	r3, [sp, #8]
 800ad80:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ad84:	9301      	str	r3, [sp, #4]
 800ad86:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800ad8a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800ad8e:	9300      	str	r3, [sp, #0]
 800ad90:	4628      	mov	r0, r5
 800ad92:	4a07      	ldr	r2, [pc, #28]	; (800adb0 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800ad94:	9704      	str	r7, [sp, #16]
 800ad96:	b2e3      	uxtb	r3, r4
 800ad98:	f7fd f9ea 	bl	8008170 <snprintf>
 800ad9c:	b280      	uxth	r0, r0
 800ad9e:	b008      	add	sp, #32
 800ada0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ada4:	20009488 	andcs	r9, r0, r8, lsl #9
 800ada8:	20000b74 	andcs	r0, r0, r4, ror fp
 800adac:	20000b50 	andcs	r0, r0, r0, asr fp
 800adb0:	080116de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, ip}

0800adb4 <remoteconfig::json_get_version(char*, unsigned short)>:
 800adb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800adb6:	2208      	movs	r2, #8
 800adb8:	4b09      	ldr	r3, [pc, #36]	; (800ade0 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800adba:	9204      	str	r2, [sp, #16]
 800adbc:	f1a3 020b 	sub.w	r2, r3, #11
 800adc0:	9203      	str	r2, [sp, #12]
 800adc2:	220b      	movs	r2, #11
 800adc4:	9202      	str	r2, [sp, #8]
 800adc6:	4a07      	ldr	r2, [pc, #28]	; (800ade4 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800adc8:	9305      	str	r3, [sp, #20]
 800adca:	3b0e      	subs	r3, #14
 800adcc:	9201      	str	r2, [sp, #4]
 800adce:	9300      	str	r3, [sp, #0]
 800add0:	4a05      	ldr	r2, [pc, #20]	; (800ade8 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800add2:	2303      	movs	r3, #3
 800add4:	f7fd f9cc 	bl	8008170 <snprintf>
 800add8:	b280      	uxth	r0, r0
 800adda:	b007      	add	sp, #28
 800addc:	f85d fb04 	ldr.w	pc, [sp], #4
 800ade0:	20009b56 	andcs	r9, r0, r6, asr fp
 800ade4:	08010d92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp}
 800ade8:	0801173d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sl, ip}

0800adec <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800adec:	b508      	push	{r3, lr}
 800adee:	4b05      	ldr	r3, [pc, #20]	; (800ae04 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800adf0:	681a      	ldr	r2, [r3, #0]
 800adf2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800adf6:	fbb2 f3f3 	udiv	r3, r2, r3
 800adfa:	4a03      	ldr	r2, [pc, #12]	; (800ae08 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800adfc:	f7fd f9b8 	bl	8008170 <snprintf>
 800ae00:	b280      	uxth	r0, r0
 800ae02:	bd08      	pop	{r3, pc}
 800ae04:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800ae08:	08011783 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, ip}

0800ae0c <remoteconfig::json_get_display(char*, unsigned short)>:
 800ae0c:	b508      	push	{r3, lr}
 800ae0e:	4b05      	ldr	r3, [pc, #20]	; (800ae24 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800ae10:	4a05      	ldr	r2, [pc, #20]	; (800ae28 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800ae12:	681b      	ldr	r3, [r3, #0]
 800ae14:	7c1b      	ldrb	r3, [r3, #16]
 800ae16:	f083 0301 	eor.w	r3, r3, #1
 800ae1a:	f7fd f9a9 	bl	8008170 <snprintf>
 800ae1e:	b280      	uxth	r0, r0
 800ae20:	bd08      	pop	{r3, pc}
 800ae22:	bf00      	nop
 800ae24:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800ae28:	08011792 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, ip}

0800ae2c <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ae2c:	b508      	push	{r3, lr}
 800ae2e:	4a02      	ldr	r2, [pc, #8]	; (800ae38 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ae30:	f7fd f99e 	bl	8008170 <snprintf>
 800ae34:	b280      	uxth	r0, r0
 800ae36:	bd08      	pop	{r3, pc}
 800ae38:	080117a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, ip}

0800ae3c <get_file_content(char const*, char*)>:
 800ae3c:	2300      	movs	r3, #0
 800ae3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae40:	4a10      	ldr	r2, [pc, #64]	; (800ae84 <get_file_content(char const*, char*)+0x48>)
 800ae42:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ae46:	1e46      	subs	r6, r0, #1
 800ae48:	3c01      	subs	r4, #1
 800ae4a:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ae4e:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ae52:	42bd      	cmp	r5, r7
 800ae54:	d10f      	bne.n	800ae76 <get_file_content(char const*, char*)+0x3a>
 800ae56:	2d00      	cmp	r5, #0
 800ae58:	d1f7      	bne.n	800ae4a <get_file_content(char const*, char*)+0xe>
 800ae5a:	4608      	mov	r0, r1
 800ae5c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ae60:	685b      	ldr	r3, [r3, #4]
 800ae62:	3b01      	subs	r3, #1
 800ae64:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ae68:	f800 2b01 	strb.w	r2, [r0], #1
 800ae6c:	2a00      	cmp	r2, #0
 800ae6e:	d1f9      	bne.n	800ae64 <get_file_content(char const*, char*)+0x28>
 800ae70:	1a40      	subs	r0, r0, r1
 800ae72:	3801      	subs	r0, #1
 800ae74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae76:	3301      	adds	r3, #1
 800ae78:	2b03      	cmp	r3, #3
 800ae7a:	d1e2      	bne.n	800ae42 <get_file_content(char const*, char*)+0x6>
 800ae7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ae80:	e7f8      	b.n	800ae74 <get_file_content(char const*, char*)+0x38>
 800ae82:	bf00      	nop
 800ae84:	08011ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip}

0800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800ae88:	2300      	movs	r3, #0
 800ae8a:	2020      	movs	r0, #32
 800ae8c:	b510      	push	{r4, lr}
 800ae8e:	4a04      	ldr	r2, [pc, #16]	; (800aea0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800ae90:	428b      	cmp	r3, r1
 800ae92:	d004      	beq.n	800ae9e <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800ae94:	f852 4b04 	ldr.w	r4, [r2], #4
 800ae98:	3301      	adds	r3, #1
 800ae9a:	4420      	add	r0, r4
 800ae9c:	e7f8      	b.n	800ae90 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800ae9e:	bd10      	pop	{r4, pc}
 800aea0:	0801200c 	stmdaeq	r1, {r2, r3, sp}

0800aea4 <SpiFlashStore::Init()>:
 800aea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aea8:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800afcc <SpiFlashStore::Init()+0x128>
 800aeac:	4607      	mov	r7, r0
 800aeae:	b085      	sub	sp, #20
 800aeb0:	f8d8 0000 	ldr.w	r0, [r8]
 800aeb4:	f000 fb08 	bl	800b4c8 <FlashRom::GetSectorSize()>
 800aeb8:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800aebc:	4605      	mov	r5, r0
 800aebe:	f040 8083 	bne.w	800afc8 <SpiFlashStore::Init()+0x124>
 800aec2:	f8d8 0000 	ldr.w	r0, [r8]
 800aec6:	f000 faf7 	bl	800b4b8 <FlashRom::GetSize()>
 800aeca:	4b41      	ldr	r3, [pc, #260]	; (800afd0 <SpiFlashStore::Init()+0x12c>)
 800aecc:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800aed0:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800aed4:	6019      	str	r1, [r3, #0]
 800aed6:	2e00      	cmp	r6, #0
 800aed8:	d176      	bne.n	800afc8 <SpiFlashStore::Init()+0x124>
 800aeda:	4c3e      	ldr	r4, [pc, #248]	; (800afd4 <SpiFlashStore::Init()+0x130>)
 800aedc:	ab03      	add	r3, sp, #12
 800aede:	9300      	str	r3, [sp, #0]
 800aee0:	462a      	mov	r2, r5
 800aee2:	4623      	mov	r3, r4
 800aee4:	f8d8 0000 	ldr.w	r0, [r8]
 800aee8:	f000 faf1 	bl	800b4ce <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800aeec:	7823      	ldrb	r3, [r4, #0]
 800aeee:	2b41      	cmp	r3, #65	; 0x41
 800aef0:	bf1c      	itt	ne
 800aef2:	2341      	movne	r3, #65	; 0x41
 800aef4:	7023      	strbne	r3, [r4, #0]
 800aef6:	7863      	ldrb	r3, [r4, #1]
 800aef8:	bf14      	ite	ne
 800aefa:	4635      	movne	r5, r6
 800aefc:	2501      	moveq	r5, #1
 800aefe:	2b76      	cmp	r3, #118	; 0x76
 800af00:	bf1c      	itt	ne
 800af02:	2376      	movne	r3, #118	; 0x76
 800af04:	7063      	strbne	r3, [r4, #1]
 800af06:	78a3      	ldrb	r3, [r4, #2]
 800af08:	bf18      	it	ne
 800af0a:	2500      	movne	r5, #0
 800af0c:	2b56      	cmp	r3, #86	; 0x56
 800af0e:	bf1c      	itt	ne
 800af10:	2356      	movne	r3, #86	; 0x56
 800af12:	70a3      	strbne	r3, [r4, #2]
 800af14:	78e3      	ldrb	r3, [r4, #3]
 800af16:	bf18      	it	ne
 800af18:	2500      	movne	r5, #0
 800af1a:	2b10      	cmp	r3, #16
 800af1c:	d01c      	beq.n	800af58 <SpiFlashStore::Init()+0xb4>
 800af1e:	2310      	movs	r3, #16
 800af20:	70e3      	strb	r3, [r4, #3]
 800af22:	2201      	movs	r2, #1
 800af24:	2500      	movs	r5, #0
 800af26:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800af2a:	4b2b      	ldr	r3, [pc, #172]	; (800afd8 <SpiFlashStore::Init()+0x134>)
 800af2c:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800afdc <SpiFlashStore::Init()+0x138>
 800af30:	701a      	strb	r2, [r3, #0]
 800af32:	4631      	mov	r1, r6
 800af34:	4638      	mov	r0, r7
 800af36:	f7ff ffa7 	bl	800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800af3a:	1823      	adds	r3, r4, r0
 800af3c:	5425      	strb	r5, [r4, r0]
 800af3e:	705d      	strb	r5, [r3, #1]
 800af40:	709d      	strb	r5, [r3, #2]
 800af42:	70dd      	strb	r5, [r3, #3]
 800af44:	f858 3b04 	ldr.w	r3, [r8], #4
 800af48:	1d02      	adds	r2, r0, #4
 800af4a:	4403      	add	r3, r0
 800af4c:	4293      	cmp	r3, r2
 800af4e:	d931      	bls.n	800afb4 <SpiFlashStore::Init()+0x110>
 800af50:	f804 9002 	strb.w	r9, [r4, r2]
 800af54:	3201      	adds	r2, #1
 800af56:	e7f9      	b.n	800af4c <SpiFlashStore::Init()+0xa8>
 800af58:	2d00      	cmp	r5, #0
 800af5a:	d0e2      	beq.n	800af22 <SpiFlashStore::Init()+0x7e>
 800af5c:	f04f 0900 	mov.w	r9, #0
 800af60:	46c8      	mov	r8, r9
 800af62:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800afe0 <SpiFlashStore::Init()+0x13c>
 800af66:	f8da b000 	ldr.w	fp, [sl]
 800af6a:	4631      	mov	r1, r6
 800af6c:	4638      	mov	r0, r7
 800af6e:	f7ff ff8b 	bl	800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800af72:	5c23      	ldrb	r3, [r4, r0]
 800af74:	2bff      	cmp	r3, #255	; 0xff
 800af76:	d114      	bne.n	800afa2 <SpiFlashStore::Init()+0xfe>
 800af78:	1823      	adds	r3, r4, r0
 800af7a:	785a      	ldrb	r2, [r3, #1]
 800af7c:	2aff      	cmp	r2, #255	; 0xff
 800af7e:	d110      	bne.n	800afa2 <SpiFlashStore::Init()+0xfe>
 800af80:	789a      	ldrb	r2, [r3, #2]
 800af82:	2aff      	cmp	r2, #255	; 0xff
 800af84:	d10d      	bne.n	800afa2 <SpiFlashStore::Init()+0xfe>
 800af86:	78da      	ldrb	r2, [r3, #3]
 800af88:	2aff      	cmp	r2, #255	; 0xff
 800af8a:	d10a      	bne.n	800afa2 <SpiFlashStore::Init()+0xfe>
 800af8c:	46a9      	mov	r9, r5
 800af8e:	f04f 0b01 	mov.w	fp, #1
 800af92:	f804 8000 	strb.w	r8, [r4, r0]
 800af96:	f883 8001 	strb.w	r8, [r3, #1]
 800af9a:	f883 8002 	strb.w	r8, [r3, #2]
 800af9e:	f883 8003 	strb.w	r8, [r3, #3]
 800afa2:	3601      	adds	r6, #1
 800afa4:	2e1c      	cmp	r6, #28
 800afa6:	d1e0      	bne.n	800af6a <SpiFlashStore::Init()+0xc6>
 800afa8:	f1b9 0f00 	cmp.w	r9, #0
 800afac:	d008      	beq.n	800afc0 <SpiFlashStore::Init()+0x11c>
 800afae:	f8ca b000 	str.w	fp, [sl]
 800afb2:	e005      	b.n	800afc0 <SpiFlashStore::Init()+0x11c>
 800afb4:	3601      	adds	r6, #1
 800afb6:	2e1c      	cmp	r6, #28
 800afb8:	d1bb      	bne.n	800af32 <SpiFlashStore::Init()+0x8e>
 800afba:	2501      	movs	r5, #1
 800afbc:	4b08      	ldr	r3, [pc, #32]	; (800afe0 <SpiFlashStore::Init()+0x13c>)
 800afbe:	601d      	str	r5, [r3, #0]
 800afc0:	4628      	mov	r0, r5
 800afc2:	b005      	add	sp, #20
 800afc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afc8:	2500      	movs	r5, #0
 800afca:	e7f9      	b.n	800afc0 <SpiFlashStore::Init()+0x11c>
 800afcc:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800afd0:	20001b7c 	andcs	r1, r0, ip, ror fp
 800afd4:	20000b7c 	andcs	r0, r0, ip, ror fp
 800afd8:	20001b90 	mulcs	r0, r0, fp
 800afdc:	0801200c 	stmdaeq	r1, {r2, r3, sp}
 800afe0:	20001b88 	andcs	r1, r0, r8, lsl #23

0800afe4 <SpiFlashStore::SpiFlashStore()>:
 800afe4:	b538      	push	{r3, r4, r5, lr}
 800afe6:	4b0d      	ldr	r3, [pc, #52]	; (800b01c <SpiFlashStore::SpiFlashStore()+0x38>)
 800afe8:	4604      	mov	r4, r0
 800afea:	6018      	str	r0, [r3, #0]
 800afec:	4b0c      	ldr	r3, [pc, #48]	; (800b020 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800afee:	4d0d      	ldr	r5, [pc, #52]	; (800b024 <SpiFlashStore::SpiFlashStore()+0x40>)
 800aff0:	681b      	ldr	r3, [r3, #0]
 800aff2:	781b      	ldrb	r3, [r3, #0]
 800aff4:	b113      	cbz	r3, 800affc <SpiFlashStore::SpiFlashStore()+0x18>
 800aff6:	f7ff ff55 	bl	800aea4 <SpiFlashStore::Init()>
 800affa:	7028      	strb	r0, [r5, #0]
 800affc:	782b      	ldrb	r3, [r5, #0]
 800affe:	b153      	cbz	r3, 800b016 <SpiFlashStore::SpiFlashStore()+0x32>
 800b000:	2320      	movs	r3, #32
 800b002:	2200      	movs	r2, #0
 800b004:	4908      	ldr	r1, [pc, #32]	; (800b028 <SpiFlashStore::SpiFlashStore()+0x44>)
 800b006:	f851 0b04 	ldr.w	r0, [r1], #4
 800b00a:	3201      	adds	r2, #1
 800b00c:	2a1c      	cmp	r2, #28
 800b00e:	4403      	add	r3, r0
 800b010:	d1f9      	bne.n	800b006 <SpiFlashStore::SpiFlashStore()+0x22>
 800b012:	4a06      	ldr	r2, [pc, #24]	; (800b02c <SpiFlashStore::SpiFlashStore()+0x48>)
 800b014:	6013      	str	r3, [r2, #0]
 800b016:	4620      	mov	r0, r4
 800b018:	bd38      	pop	{r3, r4, r5, pc}
 800b01a:	bf00      	nop
 800b01c:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800b020:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800b024:	20001b80 	andcs	r1, r0, r0, lsl #23
 800b028:	0801200c 	stmdaeq	r1, {r2, r3, sp}
 800b02c:	20001b84 	andcs	r1, r0, r4, lsl #23

0800b030 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800b030:	b508      	push	{r3, lr}
 800b032:	f7ff ff29 	bl	800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b036:	2300      	movs	r3, #0
 800b038:	4904      	ldr	r1, [pc, #16]	; (800b04c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800b03a:	1842      	adds	r2, r0, r1
 800b03c:	540b      	strb	r3, [r1, r0]
 800b03e:	7053      	strb	r3, [r2, #1]
 800b040:	7093      	strb	r3, [r2, #2]
 800b042:	70d3      	strb	r3, [r2, #3]
 800b044:	2201      	movs	r2, #1
 800b046:	4b02      	ldr	r3, [pc, #8]	; (800b050 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800b048:	601a      	str	r2, [r3, #0]
 800b04a:	bd08      	pop	{r3, pc}
 800b04c:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b050:	20001b88 	andcs	r1, r0, r8, lsl #23

0800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800b054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b058:	461c      	mov	r4, r3
 800b05a:	4b19      	ldr	r3, [pc, #100]	; (800b0c0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800b05c:	4615      	mov	r5, r2
 800b05e:	781f      	ldrb	r7, [r3, #0]
 800b060:	9e07      	ldr	r6, [sp, #28]
 800b062:	b35f      	cbz	r7, 800b0bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b064:	f7ff ff10 	bl	800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b068:	f04f 0c00 	mov.w	ip, #0
 800b06c:	4a15      	ldr	r2, [pc, #84]	; (800b0c4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800b06e:	1941      	adds	r1, r0, r5
 800b070:	1e63      	subs	r3, r4, #1
 800b072:	9c06      	ldr	r4, [sp, #24]
 800b074:	4411      	add	r1, r2
 800b076:	440c      	add	r4, r1
 800b078:	42a1      	cmp	r1, r4
 800b07a:	d00a      	beq.n	800b092 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800b07c:	f891 8000 	ldrb.w	r8, [r1]
 800b080:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800b084:	3101      	adds	r1, #1
 800b086:	45f0      	cmp	r8, lr
 800b088:	bf1c      	itt	ne
 800b08a:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800b08e:	46bc      	movne	ip, r7
 800b090:	e7f2      	b.n	800b078 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800b092:	f1bc 0f00 	cmp.w	ip, #0
 800b096:	d011      	beq.n	800b0bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b098:	4b0b      	ldr	r3, [pc, #44]	; (800b0c8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800b09a:	6819      	ldr	r1, [r3, #0]
 800b09c:	b109      	cbz	r1, 800b0a2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800b09e:	2906      	cmp	r1, #6
 800b0a0:	d101      	bne.n	800b0a6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800b0a2:	2101      	movs	r1, #1
 800b0a4:	6019      	str	r1, [r3, #0]
 800b0a6:	4b09      	ldr	r3, [pc, #36]	; (800b0cc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800b0a8:	6819      	ldr	r1, [r3, #0]
 800b0aa:	4b09      	ldr	r3, [pc, #36]	; (800b0d0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800b0ac:	6019      	str	r1, [r3, #0]
 800b0ae:	b12d      	cbz	r5, 800b0bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b0b0:	b126      	cbz	r6, 800b0bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800b0b2:	9b08      	ldr	r3, [sp, #32]
 800b0b4:	4418      	add	r0, r3
 800b0b6:	5813      	ldr	r3, [r2, r0]
 800b0b8:	4333      	orrs	r3, r6
 800b0ba:	5013      	str	r3, [r2, r0]
 800b0bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0c0:	20001b80 	andcs	r1, r0, r0, lsl #23
 800b0c4:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b0c8:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b0cc:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b0d0:	20000b78 	andcs	r0, r0, r8, ror fp

0800b0d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800b0d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0d8:	461d      	mov	r5, r3
 800b0da:	4b15      	ldr	r3, [pc, #84]	; (800b130 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800b0dc:	b085      	sub	sp, #20
 800b0de:	781b      	ldrb	r3, [r3, #0]
 800b0e0:	4607      	mov	r7, r0
 800b0e2:	4688      	mov	r8, r1
 800b0e4:	4614      	mov	r4, r2
 800b0e6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800b0ea:	b1eb      	cbz	r3, 800b128 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800b0ec:	f7ff fecc 	bl	800ae88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800b0f0:	4910      	ldr	r1, [pc, #64]	; (800b134 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800b0f2:	4a11      	ldr	r2, [pc, #68]	; (800b138 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800b0f4:	7809      	ldrb	r1, [r1, #0]
 800b0f6:	eb00 0309 	add.w	r3, r0, r9
 800b0fa:	189e      	adds	r6, r3, r2
 800b0fc:	b951      	cbnz	r1, 800b114 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800b0fe:	589b      	ldr	r3, [r3, r2]
 800b100:	b143      	cbz	r3, 800b114 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800b102:	3c01      	subs	r4, #1
 800b104:	4435      	add	r5, r6
 800b106:	42b5      	cmp	r5, r6
 800b108:	d00e      	beq.n	800b128 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800b10a:	f816 3b01 	ldrb.w	r3, [r6], #1
 800b10e:	f804 3f01 	strb.w	r3, [r4, #1]!
 800b112:	e7f8      	b.n	800b106 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800b114:	2300      	movs	r3, #0
 800b116:	464a      	mov	r2, r9
 800b118:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b11c:	4641      	mov	r1, r8
 800b11e:	4623      	mov	r3, r4
 800b120:	4638      	mov	r0, r7
 800b122:	9500      	str	r5, [sp, #0]
 800b124:	f7ff ff96 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b128:	b005      	add	sp, #20
 800b12a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b12e:	bf00      	nop
 800b130:	20001b80 	andcs	r1, r0, r0, lsl #23
 800b134:	20001b90 	mulcs	r0, r0, fp
 800b138:	20000b7c 	andcs	r0, r0, ip, ror fp

0800b13c <SpiFlashStore::Flash()>:
 800b13c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b13e:	4c25      	ldr	r4, [pc, #148]	; (800b1d4 <SpiFlashStore::Flash()+0x98>)
 800b140:	6820      	ldr	r0, [r4, #0]
 800b142:	2800      	cmp	r0, #0
 800b144:	d043      	beq.n	800b1ce <SpiFlashStore::Flash()+0x92>
 800b146:	3801      	subs	r0, #1
 800b148:	2805      	cmp	r0, #5
 800b14a:	d831      	bhi.n	800b1b0 <SpiFlashStore::Flash()+0x74>
 800b14c:	e8df f000 	tbb	[pc, r0]
 800b150:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800b154:	4b203025 	blmi	88171f0 <__exidx_end+0x804a24>
 800b158:	681a      	ldr	r2, [r3, #0]
 800b15a:	4b20      	ldr	r3, [pc, #128]	; (800b1dc <SpiFlashStore::Flash()+0xa0>)
 800b15c:	601a      	str	r2, [r3, #0]
 800b15e:	2302      	movs	r3, #2
 800b160:	6023      	str	r3, [r4, #0]
 800b162:	2001      	movs	r0, #1
 800b164:	e033      	b.n	800b1ce <SpiFlashStore::Flash()+0x92>
 800b166:	4b1c      	ldr	r3, [pc, #112]	; (800b1d8 <SpiFlashStore::Flash()+0x9c>)
 800b168:	4a1c      	ldr	r2, [pc, #112]	; (800b1dc <SpiFlashStore::Flash()+0xa0>)
 800b16a:	681b      	ldr	r3, [r3, #0]
 800b16c:	6812      	ldr	r2, [r2, #0]
 800b16e:	1a9b      	subs	r3, r3, r2
 800b170:	2b63      	cmp	r3, #99	; 0x63
 800b172:	d9f6      	bls.n	800b162 <SpiFlashStore::Flash()+0x26>
 800b174:	2303      	movs	r3, #3
 800b176:	e7f3      	b.n	800b160 <SpiFlashStore::Flash()+0x24>
 800b178:	4919      	ldr	r1, [pc, #100]	; (800b1e0 <SpiFlashStore::Flash()+0xa4>)
 800b17a:	481a      	ldr	r0, [pc, #104]	; (800b1e4 <SpiFlashStore::Flash()+0xa8>)
 800b17c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800b180:	6809      	ldr	r1, [r1, #0]
 800b182:	6800      	ldr	r0, [r0, #0]
 800b184:	ab03      	add	r3, sp, #12
 800b186:	f000 f9b1 	bl	800b4ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800b18a:	2800      	cmp	r0, #0
 800b18c:	d0e9      	beq.n	800b162 <SpiFlashStore::Flash()+0x26>
 800b18e:	4b12      	ldr	r3, [pc, #72]	; (800b1d8 <SpiFlashStore::Flash()+0x9c>)
 800b190:	681a      	ldr	r2, [r3, #0]
 800b192:	4b12      	ldr	r3, [pc, #72]	; (800b1dc <SpiFlashStore::Flash()+0xa0>)
 800b194:	601a      	str	r2, [r3, #0]
 800b196:	2305      	movs	r3, #5
 800b198:	e7e2      	b.n	800b160 <SpiFlashStore::Flash()+0x24>
 800b19a:	4b0f      	ldr	r3, [pc, #60]	; (800b1d8 <SpiFlashStore::Flash()+0x9c>)
 800b19c:	4a0f      	ldr	r2, [pc, #60]	; (800b1dc <SpiFlashStore::Flash()+0xa0>)
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	6812      	ldr	r2, [r2, #0]
 800b1a2:	1a9b      	subs	r3, r3, r2
 800b1a4:	2b63      	cmp	r3, #99	; 0x63
 800b1a6:	d9dc      	bls.n	800b162 <SpiFlashStore::Flash()+0x26>
 800b1a8:	2304      	movs	r3, #4
 800b1aa:	e7d9      	b.n	800b160 <SpiFlashStore::Flash()+0x24>
 800b1ac:	2306      	movs	r3, #6
 800b1ae:	e7d7      	b.n	800b160 <SpiFlashStore::Flash()+0x24>
 800b1b0:	ab03      	add	r3, sp, #12
 800b1b2:	4a0d      	ldr	r2, [pc, #52]	; (800b1e8 <SpiFlashStore::Flash()+0xac>)
 800b1b4:	490a      	ldr	r1, [pc, #40]	; (800b1e0 <SpiFlashStore::Flash()+0xa4>)
 800b1b6:	480b      	ldr	r0, [pc, #44]	; (800b1e4 <SpiFlashStore::Flash()+0xa8>)
 800b1b8:	9300      	str	r3, [sp, #0]
 800b1ba:	6812      	ldr	r2, [r2, #0]
 800b1bc:	4b0b      	ldr	r3, [pc, #44]	; (800b1ec <SpiFlashStore::Flash()+0xb0>)
 800b1be:	6809      	ldr	r1, [r1, #0]
 800b1c0:	6800      	ldr	r0, [r0, #0]
 800b1c2:	f000 fa33 	bl	800b62c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800b1c6:	2800      	cmp	r0, #0
 800b1c8:	d0cb      	beq.n	800b162 <SpiFlashStore::Flash()+0x26>
 800b1ca:	2000      	movs	r0, #0
 800b1cc:	6020      	str	r0, [r4, #0]
 800b1ce:	b004      	add	sp, #16
 800b1d0:	bd10      	pop	{r4, pc}
 800b1d2:	bf00      	nop
 800b1d4:	20001b88 	andcs	r1, r0, r8, lsl #23
 800b1d8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b1dc:	20000b78 	andcs	r0, r0, r8, ror fp
 800b1e0:	20001b7c 	andcs	r1, r0, ip, ror fp
 800b1e4:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800b1e8:	20001b84 	andcs	r1, r0, r4, lsl #23
 800b1ec:	20000b7c 	andcs	r0, r0, ip, ror fp

0800b1f0 <StoreDmxSend::~StoreDmxSend()>:
 800b1f0:	4770      	bx	lr
	...

0800b1f4 <StoreDmxSend::Copy(TDmxParams*)>:
 800b1f4:	2300      	movs	r3, #0
 800b1f6:	b507      	push	{r0, r1, r2, lr}
 800b1f8:	4805      	ldr	r0, [pc, #20]	; (800b210 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800b1fa:	9300      	str	r3, [sp, #0]
 800b1fc:	460a      	mov	r2, r1
 800b1fe:	230a      	movs	r3, #10
 800b200:	2102      	movs	r1, #2
 800b202:	6800      	ldr	r0, [r0, #0]
 800b204:	f7ff ff66 	bl	800b0d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b208:	b003      	add	sp, #12
 800b20a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b20e:	bf00      	nop
 800b210:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b214 <StoreDmxSend::Update(TDmxParams const*)>:
 800b214:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b216:	2200      	movs	r2, #0
 800b218:	460b      	mov	r3, r1
 800b21a:	210a      	movs	r1, #10
 800b21c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b220:	4804      	ldr	r0, [pc, #16]	; (800b234 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800b222:	9100      	str	r1, [sp, #0]
 800b224:	6800      	ldr	r0, [r0, #0]
 800b226:	2102      	movs	r1, #2
 800b228:	f7ff ff14 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b22c:	b005      	add	sp, #20
 800b22e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b232:	bf00      	nop
 800b234:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b238 <StoreDmxSend::~StoreDmxSend()>:
 800b238:	b510      	push	{r4, lr}
 800b23a:	4604      	mov	r4, r0
 800b23c:	f003 fd20 	bl	800ec80 <operator delete(void*)>
 800b240:	4620      	mov	r0, r4
 800b242:	bd10      	pop	{r4, pc}

0800b244 <StoreDmxSend::StoreDmxSend()>:
 800b244:	4a02      	ldr	r2, [pc, #8]	; (800b250 <StoreDmxSend::StoreDmxSend()+0xc>)
 800b246:	6002      	str	r2, [r0, #0]
 800b248:	4a02      	ldr	r2, [pc, #8]	; (800b254 <StoreDmxSend::StoreDmxSend()+0x10>)
 800b24a:	6010      	str	r0, [r2, #0]
 800b24c:	4770      	bx	lr
 800b24e:	bf00      	nop
 800b250:	08012084 	stmdaeq	r1, {r2, r7, sp}
 800b254:	20001b94 	mulcs	r0, r4, fp

0800b258 <StoreNetwork::~StoreNetwork()>:
 800b258:	4770      	bx	lr

0800b25a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800b25a:	3804      	subs	r0, #4
 800b25c:	4770      	bx	lr
	...

0800b260 <StoreNetwork::Update(TNetworkParams const*)>:
 800b260:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b262:	2200      	movs	r2, #0
 800b264:	460b      	mov	r3, r1
 800b266:	215e      	movs	r1, #94	; 0x5e
 800b268:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b26c:	4804      	ldr	r0, [pc, #16]	; (800b280 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800b26e:	9100      	str	r1, [sp, #0]
 800b270:	6800      	ldr	r0, [r0, #0]
 800b272:	4611      	mov	r1, r2
 800b274:	f7ff feee 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b278:	b005      	add	sp, #20
 800b27a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b27e:	bf00      	nop
 800b280:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b284 <StoreNetwork::SaveDhcp(bool)>:
 800b284:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b286:	2301      	movs	r3, #1
 800b288:	f88d 1017 	strb.w	r1, [sp, #23]
 800b28c:	2100      	movs	r1, #0
 800b28e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b292:	4805      	ldr	r0, [pc, #20]	; (800b2a8 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800b294:	9300      	str	r3, [sp, #0]
 800b296:	2214      	movs	r2, #20
 800b298:	6800      	ldr	r0, [r0, #0]
 800b29a:	f10d 0317 	add.w	r3, sp, #23
 800b29e:	f7ff fed9 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b2a2:	b007      	add	sp, #28
 800b2a4:	f85d fb04 	ldr.w	pc, [sp], #4
 800b2a8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b2ac <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800b2ac:	f1a0 0004 	sub.w	r0, r0, #4
 800b2b0:	e7e8      	b.n	800b284 <StoreNetwork::SaveDhcp(bool)>
 800b2b2:	bf00      	nop

0800b2b4 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800b2b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b2b6:	2308      	movs	r3, #8
 800b2b8:	9105      	str	r1, [sp, #20]
 800b2ba:	2100      	movs	r1, #0
 800b2bc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b2c0:	2304      	movs	r3, #4
 800b2c2:	4805      	ldr	r0, [pc, #20]	; (800b2d8 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800b2c4:	9300      	str	r3, [sp, #0]
 800b2c6:	220c      	movs	r2, #12
 800b2c8:	6800      	ldr	r0, [r0, #0]
 800b2ca:	ab05      	add	r3, sp, #20
 800b2cc:	f7ff fec2 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b2d0:	b007      	add	sp, #28
 800b2d2:	f85d fb04 	ldr.w	pc, [sp], #4
 800b2d6:	bf00      	nop
 800b2d8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b2dc <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800b2dc:	f1a0 0004 	sub.w	r0, r0, #4
 800b2e0:	e7e8      	b.n	800b2b4 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800b2e2:	bf00      	nop

0800b2e4 <StoreNetwork::SaveNetMask(unsigned int)>:
 800b2e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b2e6:	2304      	movs	r3, #4
 800b2e8:	9105      	str	r1, [sp, #20]
 800b2ea:	2100      	movs	r1, #0
 800b2ec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b2f0:	4804      	ldr	r0, [pc, #16]	; (800b304 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800b2f2:	9300      	str	r3, [sp, #0]
 800b2f4:	2208      	movs	r2, #8
 800b2f6:	6800      	ldr	r0, [r0, #0]
 800b2f8:	ab05      	add	r3, sp, #20
 800b2fa:	f7ff feab 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b2fe:	b007      	add	sp, #28
 800b300:	f85d fb04 	ldr.w	pc, [sp], #4
 800b304:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b308 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800b308:	f1a0 0004 	sub.w	r0, r0, #4
 800b30c:	e7ea      	b.n	800b2e4 <StoreNetwork::SaveNetMask(unsigned int)>
 800b30e:	bf00      	nop

0800b310 <StoreNetwork::SaveIp(unsigned int)>:
 800b310:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b312:	2302      	movs	r3, #2
 800b314:	9105      	str	r1, [sp, #20]
 800b316:	2100      	movs	r1, #0
 800b318:	2204      	movs	r2, #4
 800b31a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b31e:	4804      	ldr	r0, [pc, #16]	; (800b330 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800b320:	9200      	str	r2, [sp, #0]
 800b322:	6800      	ldr	r0, [r0, #0]
 800b324:	ab05      	add	r3, sp, #20
 800b326:	f7ff fe95 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b32a:	b007      	add	sp, #28
 800b32c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b330:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b334 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800b334:	f1a0 0004 	sub.w	r0, r0, #4
 800b338:	e7ea      	b.n	800b310 <StoreNetwork::SaveIp(unsigned int)>
 800b33a:	bf00      	nop

0800b33c <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800b33c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b33e:	460b      	mov	r3, r1
 800b340:	2020      	movs	r0, #32
 800b342:	2100      	movs	r1, #0
 800b344:	2a40      	cmp	r2, #64	; 0x40
 800b346:	bf28      	it	cs
 800b348:	2240      	movcs	r2, #64	; 0x40
 800b34a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800b34e:	4804      	ldr	r0, [pc, #16]	; (800b360 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800b350:	9200      	str	r2, [sp, #0]
 800b352:	6800      	ldr	r0, [r0, #0]
 800b354:	2215      	movs	r2, #21
 800b356:	f7ff fe7d 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b35a:	b005      	add	sp, #20
 800b35c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b360:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b364 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800b364:	f1a0 0004 	sub.w	r0, r0, #4
 800b368:	e7e8      	b.n	800b33c <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800b36a:	bf00      	nop

0800b36c <StoreNetwork::~StoreNetwork()>:
 800b36c:	b510      	push	{r4, lr}
 800b36e:	4604      	mov	r4, r0
 800b370:	f003 fc86 	bl	800ec80 <operator delete(void*)>
 800b374:	4620      	mov	r0, r4
 800b376:	bd10      	pop	{r4, pc}

0800b378 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800b378:	f1a0 0004 	sub.w	r0, r0, #4
 800b37c:	e7f6      	b.n	800b36c <StoreNetwork::~StoreNetwork()>
	...

0800b380 <StoreNetwork::Copy(TNetworkParams*)>:
 800b380:	b507      	push	{r0, r1, r2, lr}
 800b382:	460a      	mov	r2, r1
 800b384:	2100      	movs	r1, #0
 800b386:	4804      	ldr	r0, [pc, #16]	; (800b398 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800b388:	9100      	str	r1, [sp, #0]
 800b38a:	235e      	movs	r3, #94	; 0x5e
 800b38c:	6800      	ldr	r0, [r0, #0]
 800b38e:	f7ff fea1 	bl	800b0d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b392:	b003      	add	sp, #12
 800b394:	f85d fb04 	ldr.w	pc, [sp], #4
 800b398:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b39c <StoreNetwork::StoreNetwork()>:
 800b39c:	4a03      	ldr	r2, [pc, #12]	; (800b3ac <StoreNetwork::StoreNetwork()+0x10>)
 800b39e:	6002      	str	r2, [r0, #0]
 800b3a0:	322c      	adds	r2, #44	; 0x2c
 800b3a2:	6042      	str	r2, [r0, #4]
 800b3a4:	4a02      	ldr	r2, [pc, #8]	; (800b3b0 <StoreNetwork::StoreNetwork()+0x14>)
 800b3a6:	6010      	str	r0, [r2, #0]
 800b3a8:	4770      	bx	lr
 800b3aa:	bf00      	nop
 800b3ac:	0801209c 	stmdaeq	r1, {r2, r3, r4, r7, sp}
 800b3b0:	20001b98 	mulcs	r0, r8, fp

0800b3b4 <StoreOscServer::~StoreOscServer()>:
 800b3b4:	4770      	bx	lr
	...

0800b3b8 <StoreOscServer::Copy(osc::server::Params*)>:
 800b3b8:	2300      	movs	r3, #0
 800b3ba:	b507      	push	{r0, r1, r2, lr}
 800b3bc:	4805      	ldr	r0, [pc, #20]	; (800b3d4 <StoreOscServer::Copy(osc::server::Params*)+0x1c>)
 800b3be:	9300      	str	r3, [sp, #0]
 800b3c0:	460a      	mov	r2, r1
 800b3c2:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800b3c6:	2108      	movs	r1, #8
 800b3c8:	6800      	ldr	r0, [r0, #0]
 800b3ca:	f7ff fe83 	bl	800b0d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b3ce:	b003      	add	sp, #12
 800b3d0:	f85d fb04 	ldr.w	pc, [sp], #4
 800b3d4:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b3d8 <StoreOscServer::Update(osc::server::Params const*)>:
 800b3d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b3da:	2200      	movs	r2, #0
 800b3dc:	460b      	mov	r3, r1
 800b3de:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800b3e2:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b3e6:	4804      	ldr	r0, [pc, #16]	; (800b3f8 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800b3e8:	9100      	str	r1, [sp, #0]
 800b3ea:	6800      	ldr	r0, [r0, #0]
 800b3ec:	2108      	movs	r1, #8
 800b3ee:	f7ff fe31 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b3f2:	b005      	add	sp, #20
 800b3f4:	f85d fb04 	ldr.w	pc, [sp], #4
 800b3f8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b3fc <StoreOscServer::~StoreOscServer()>:
 800b3fc:	b510      	push	{r4, lr}
 800b3fe:	4604      	mov	r4, r0
 800b400:	f003 fc3e 	bl	800ec80 <operator delete(void*)>
 800b404:	4620      	mov	r0, r4
 800b406:	bd10      	pop	{r4, pc}

0800b408 <StoreOscServer::StoreOscServer()>:
 800b408:	4a02      	ldr	r2, [pc, #8]	; (800b414 <StoreOscServer::StoreOscServer()+0xc>)
 800b40a:	6002      	str	r2, [r0, #0]
 800b40c:	4a02      	ldr	r2, [pc, #8]	; (800b418 <StoreOscServer::StoreOscServer()+0x10>)
 800b40e:	6010      	str	r0, [r2, #0]
 800b410:	4770      	bx	lr
 800b412:	bf00      	nop
 800b414:	080120ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sp}
 800b418:	20001b9c 	mulcs	r0, ip, fp

0800b41c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800b41c:	4770      	bx	lr
	...

0800b420 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800b420:	2300      	movs	r3, #0
 800b422:	b507      	push	{r0, r1, r2, lr}
 800b424:	4805      	ldr	r0, [pc, #20]	; (800b43c <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800b426:	9300      	str	r3, [sp, #0]
 800b428:	460a      	mov	r2, r1
 800b42a:	2320      	movs	r3, #32
 800b42c:	210c      	movs	r1, #12
 800b42e:	6800      	ldr	r0, [r0, #0]
 800b430:	f7ff fe50 	bl	800b0d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800b434:	b003      	add	sp, #12
 800b436:	f85d fb04 	ldr.w	pc, [sp], #4
 800b43a:	bf00      	nop
 800b43c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b440 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800b440:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b442:	2200      	movs	r2, #0
 800b444:	460b      	mov	r3, r1
 800b446:	2120      	movs	r1, #32
 800b448:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800b44c:	4804      	ldr	r0, [pc, #16]	; (800b460 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800b44e:	9100      	str	r1, [sp, #0]
 800b450:	6800      	ldr	r0, [r0, #0]
 800b452:	210c      	movs	r1, #12
 800b454:	f7ff fdfe 	bl	800b054 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800b458:	b005      	add	sp, #20
 800b45a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b45e:	bf00      	nop
 800b460:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800b464 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800b464:	b510      	push	{r4, lr}
 800b466:	4604      	mov	r4, r0
 800b468:	f003 fc0a 	bl	800ec80 <operator delete(void*)>
 800b46c:	4620      	mov	r0, r4
 800b46e:	bd10      	pop	{r4, pc}

0800b470 <StoreRemoteConfig::StoreRemoteConfig()>:
 800b470:	4a02      	ldr	r2, [pc, #8]	; (800b47c <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800b472:	6002      	str	r2, [r0, #0]
 800b474:	4a02      	ldr	r2, [pc, #8]	; (800b480 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800b476:	6010      	str	r0, [r2, #0]
 800b478:	4770      	bx	lr
 800b47a:	bf00      	nop
 800b47c:	08012104 	stmdaeq	r1, {r2, r8, sp}
 800b480:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800b484 <FlashRom::FlashRom()>:
 800b484:	4b08      	ldr	r3, [pc, #32]	; (800b4a8 <FlashRom::FlashRom()+0x24>)
 800b486:	b510      	push	{r4, lr}
 800b488:	6018      	str	r0, [r3, #0]
 800b48a:	2301      	movs	r3, #1
 800b48c:	4604      	mov	r4, r0
 800b48e:	7003      	strb	r3, [r0, #0]
 800b490:	4b06      	ldr	r3, [pc, #24]	; (800b4ac <FlashRom::FlashRom()+0x28>)
 800b492:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800b496:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b49a:	4905      	ldr	r1, [pc, #20]	; (800b4b0 <FlashRom::FlashRom()+0x2c>)
 800b49c:	029b      	lsls	r3, r3, #10
 800b49e:	4805      	ldr	r0, [pc, #20]	; (800b4b4 <FlashRom::FlashRom()+0x30>)
 800b4a0:	f7fc fe56 	bl	8008150 <printf>
 800b4a4:	4620      	mov	r0, r4
 800b4a6:	bd10      	pop	{r4, pc}
 800b4a8:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800b4ac:	1ffff700 	svcne	0x00fff700
 800b4b0:	08012114 	stmdaeq	r1, {r2, r4, r8, sp}
 800b4b4:	08012119 	stmdaeq	r1, {r0, r3, r4, r8, sp}

0800b4b8 <FlashRom::GetSize()>:
 800b4b8:	4b02      	ldr	r3, [pc, #8]	; (800b4c4 <FlashRom::GetSize()+0xc>)
 800b4ba:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800b4be:	0280      	lsls	r0, r0, #10
 800b4c0:	4770      	bx	lr
 800b4c2:	bf00      	nop
 800b4c4:	1ffff700 	svcne	0x00fff700

0800b4c8 <FlashRom::GetSectorSize()>:
 800b4c8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800b4cc:	4770      	bx	lr

0800b4ce <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800b4ce:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b4d2:	441a      	add	r2, r3
 800b4d4:	4293      	cmp	r3, r2
 800b4d6:	d004      	beq.n	800b4e2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800b4d8:	f851 0b04 	ldr.w	r0, [r1], #4
 800b4dc:	f843 0b04 	str.w	r0, [r3], #4
 800b4e0:	e7f8      	b.n	800b4d4 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800b4e2:	2200      	movs	r2, #0
 800b4e4:	9b00      	ldr	r3, [sp, #0]
 800b4e6:	2001      	movs	r0, #1
 800b4e8:	601a      	str	r2, [r3, #0]
 800b4ea:	4770      	bx	lr

0800b4ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800b4ec:	2000      	movs	r0, #0
 800b4ee:	b538      	push	{r3, r4, r5, lr}
 800b4f0:	4c47      	ldr	r4, [pc, #284]	; (800b610 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800b4f2:	6018      	str	r0, [r3, #0]
 800b4f4:	6823      	ldr	r3, [r4, #0]
 800b4f6:	2b04      	cmp	r3, #4
 800b4f8:	f200 8082 	bhi.w	800b600 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800b4fc:	e8df f003 	tbb	[pc, r3]
 800b500:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800b504:	4b430080 	blmi	90cb70c <__exidx_end+0x10b8f40>
 800b508:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b50c:	6019      	str	r1, [r3, #0]
 800b50e:	4b42      	ldr	r3, [pc, #264]	; (800b618 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b510:	601a      	str	r2, [r3, #0]
 800b512:	4b42      	ldr	r3, [pc, #264]	; (800b61c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800b514:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b518:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b51c:	4b40      	ldr	r3, [pc, #256]	; (800b620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b51e:	d807      	bhi.n	800b530 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800b520:	2201      	movs	r2, #1
 800b522:	701a      	strb	r2, [r3, #0]
 800b524:	f003 fef2 	bl	800f30c <fmc_bank0_unlock>
 800b528:	2301      	movs	r3, #1
 800b52a:	6023      	str	r3, [r4, #0]
 800b52c:	2000      	movs	r0, #0
 800b52e:	e026      	b.n	800b57e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800b530:	4a3c      	ldr	r2, [pc, #240]	; (800b624 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800b532:	4291      	cmp	r1, r2
 800b534:	d3f4      	bcc.n	800b520 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800b536:	2200      	movs	r2, #0
 800b538:	701a      	strb	r2, [r3, #0]
 800b53a:	f003 fef5 	bl	800f328 <fmc_bank1_unlock>
 800b53e:	e7f3      	b.n	800b528 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b540:	4d37      	ldr	r5, [pc, #220]	; (800b620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b542:	782b      	ldrb	r3, [r5, #0]
 800b544:	b15b      	cbz	r3, 800b55e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800b546:	f003 ff0d 	bl	800f364 <fmc_bank0_state_get>
 800b54a:	2801      	cmp	r0, #1
 800b54c:	d0ee      	beq.n	800b52c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800b54e:	7829      	ldrb	r1, [r5, #0]
 800b550:	4b35      	ldr	r3, [pc, #212]	; (800b628 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b552:	b939      	cbnz	r1, 800b564 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800b554:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b556:	f022 0202 	bic.w	r2, r2, #2
 800b55a:	651a      	str	r2, [r3, #80]	; 0x50
 800b55c:	e006      	b.n	800b56c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800b55e:	f003 ff15 	bl	800f38c <fmc_bank1_state_get>
 800b562:	e7f2      	b.n	800b54a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800b564:	691a      	ldr	r2, [r3, #16]
 800b566:	f022 0202 	bic.w	r2, r2, #2
 800b56a:	611a      	str	r2, [r3, #16]
 800b56c:	4b2a      	ldr	r3, [pc, #168]	; (800b618 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b56e:	681b      	ldr	r3, [r3, #0]
 800b570:	b94b      	cbnz	r3, 800b586 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800b572:	b129      	cbz	r1, 800b580 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800b574:	f003 fee6 	bl	800f344 <fmc_bank0_lock>
 800b578:	2300      	movs	r3, #0
 800b57a:	2001      	movs	r0, #1
 800b57c:	6023      	str	r3, [r4, #0]
 800b57e:	bd38      	pop	{r3, r4, r5, pc}
 800b580:	f003 fee8 	bl	800f354 <fmc_bank1_lock>
 800b584:	e7f8      	b.n	800b578 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800b586:	2302      	movs	r3, #2
 800b588:	e7cf      	b.n	800b52a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800b58a:	4923      	ldr	r1, [pc, #140]	; (800b618 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800b58c:	680b      	ldr	r3, [r1, #0]
 800b58e:	2b00      	cmp	r3, #0
 800b590:	d0ca      	beq.n	800b528 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b592:	4b23      	ldr	r3, [pc, #140]	; (800b620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b594:	4a1f      	ldr	r2, [pc, #124]	; (800b614 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800b596:	7818      	ldrb	r0, [r3, #0]
 800b598:	4b23      	ldr	r3, [pc, #140]	; (800b628 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b59a:	b190      	cbz	r0, 800b5c2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800b59c:	6918      	ldr	r0, [r3, #16]
 800b59e:	f040 0002 	orr.w	r0, r0, #2
 800b5a2:	6118      	str	r0, [r3, #16]
 800b5a4:	6810      	ldr	r0, [r2, #0]
 800b5a6:	6158      	str	r0, [r3, #20]
 800b5a8:	6918      	ldr	r0, [r3, #16]
 800b5aa:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800b5ae:	6118      	str	r0, [r3, #16]
 800b5b0:	680b      	ldr	r3, [r1, #0]
 800b5b2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800b5b6:	600b      	str	r3, [r1, #0]
 800b5b8:	6813      	ldr	r3, [r2, #0]
 800b5ba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800b5be:	6013      	str	r3, [r2, #0]
 800b5c0:	e7b2      	b.n	800b528 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800b5c2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800b5c4:	f040 0002 	orr.w	r0, r0, #2
 800b5c8:	6518      	str	r0, [r3, #80]	; 0x50
 800b5ca:	6810      	ldr	r0, [r2, #0]
 800b5cc:	6558      	str	r0, [r3, #84]	; 0x54
 800b5ce:	69dd      	ldr	r5, [r3, #28]
 800b5d0:	07ad      	lsls	r5, r5, #30
 800b5d2:	bf48      	it	mi
 800b5d4:	6158      	strmi	r0, [r3, #20]
 800b5d6:	4814      	ldr	r0, [pc, #80]	; (800b628 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b5d8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b5da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b5de:	6503      	str	r3, [r0, #80]	; 0x50
 800b5e0:	680b      	ldr	r3, [r1, #0]
 800b5e2:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800b5e6:	600b      	str	r3, [r1, #0]
 800b5e8:	6813      	ldr	r3, [r2, #0]
 800b5ea:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800b5ee:	e7e6      	b.n	800b5be <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800b5f0:	4b0b      	ldr	r3, [pc, #44]	; (800b620 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800b5f2:	781a      	ldrb	r2, [r3, #0]
 800b5f4:	4b0c      	ldr	r3, [pc, #48]	; (800b628 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800b5f6:	b132      	cbz	r2, 800b606 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800b5f8:	691a      	ldr	r2, [r3, #16]
 800b5fa:	f022 0201 	bic.w	r2, r2, #1
 800b5fe:	611a      	str	r2, [r3, #16]
 800b600:	2000      	movs	r0, #0
 800b602:	6020      	str	r0, [r4, #0]
 800b604:	e7bb      	b.n	800b57e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800b606:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b608:	f022 0201 	bic.w	r2, r2, #1
 800b60c:	651a      	str	r2, [r3, #80]	; 0x50
 800b60e:	e7f7      	b.n	800b600 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800b610:	20001bac 	andcs	r1, r0, ip, lsr #23
 800b614:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800b618:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800b61c:	1ffff700 	svcne	0x00fff700
 800b620:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800b624:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800b628:	40022000 	andmi	r2, r2, r0

0800b62c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800b62c:	b570      	push	{r4, r5, r6, lr}
 800b62e:	2400      	movs	r4, #0
 800b630:	9804      	ldr	r0, [sp, #16]
 800b632:	6004      	str	r4, [r0, #0]
 800b634:	4c48      	ldr	r4, [pc, #288]	; (800b758 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800b636:	6820      	ldr	r0, [r4, #0]
 800b638:	2804      	cmp	r0, #4
 800b63a:	d848      	bhi.n	800b6ce <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800b63c:	e8df f000 	tbb	[pc, r0]
 800b640:	22847c03 	addcs	r7, r4, #768	; 0x300
 800b644:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800b648:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800b64c:	6001      	str	r1, [r0, #0]
 800b64e:	4844      	ldr	r0, [pc, #272]	; (800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b650:	6003      	str	r3, [r0, #0]
 800b652:	4b44      	ldr	r3, [pc, #272]	; (800b764 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b654:	601a      	str	r2, [r3, #0]
 800b656:	4b44      	ldr	r3, [pc, #272]	; (800b768 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800b658:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800b65c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b660:	4b42      	ldr	r3, [pc, #264]	; (800b76c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b662:	d807      	bhi.n	800b674 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800b664:	2201      	movs	r2, #1
 800b666:	701a      	strb	r2, [r3, #0]
 800b668:	f003 fe50 	bl	800f30c <fmc_bank0_unlock>
 800b66c:	2303      	movs	r3, #3
 800b66e:	6023      	str	r3, [r4, #0]
 800b670:	2000      	movs	r0, #0
 800b672:	e026      	b.n	800b6c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800b674:	4a3e      	ldr	r2, [pc, #248]	; (800b770 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800b676:	4291      	cmp	r1, r2
 800b678:	d3f4      	bcc.n	800b664 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800b67a:	2200      	movs	r2, #0
 800b67c:	701a      	strb	r2, [r3, #0]
 800b67e:	f003 fe53 	bl	800f328 <fmc_bank1_unlock>
 800b682:	e7f3      	b.n	800b66c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b684:	4d39      	ldr	r5, [pc, #228]	; (800b76c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b686:	782b      	ldrb	r3, [r5, #0]
 800b688:	b15b      	cbz	r3, 800b6a2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800b68a:	f003 fe6b 	bl	800f364 <fmc_bank0_state_get>
 800b68e:	2801      	cmp	r0, #1
 800b690:	d0ee      	beq.n	800b670 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800b692:	7829      	ldrb	r1, [r5, #0]
 800b694:	4b37      	ldr	r3, [pc, #220]	; (800b774 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b696:	b939      	cbnz	r1, 800b6a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800b698:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b69a:	f022 0201 	bic.w	r2, r2, #1
 800b69e:	651a      	str	r2, [r3, #80]	; 0x50
 800b6a0:	e006      	b.n	800b6b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800b6a2:	f003 fe73 	bl	800f38c <fmc_bank1_state_get>
 800b6a6:	e7f2      	b.n	800b68e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800b6a8:	691a      	ldr	r2, [r3, #16]
 800b6aa:	f022 0201 	bic.w	r2, r2, #1
 800b6ae:	611a      	str	r2, [r3, #16]
 800b6b0:	4b2c      	ldr	r3, [pc, #176]	; (800b764 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b6b2:	681b      	ldr	r3, [r3, #0]
 800b6b4:	b94b      	cbnz	r3, 800b6ca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800b6b6:	b129      	cbz	r1, 800b6c4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800b6b8:	f003 fe44 	bl	800f344 <fmc_bank0_lock>
 800b6bc:	2300      	movs	r3, #0
 800b6be:	2001      	movs	r0, #1
 800b6c0:	6023      	str	r3, [r4, #0]
 800b6c2:	bd70      	pop	{r4, r5, r6, pc}
 800b6c4:	f003 fe46 	bl	800f354 <fmc_bank1_lock>
 800b6c8:	e7f8      	b.n	800b6bc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800b6ca:	2304      	movs	r3, #4
 800b6cc:	e7cf      	b.n	800b66e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800b6ce:	4a25      	ldr	r2, [pc, #148]	; (800b764 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800b6d0:	6813      	ldr	r3, [r2, #0]
 800b6d2:	2b03      	cmp	r3, #3
 800b6d4:	d91a      	bls.n	800b70c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800b6d6:	4b25      	ldr	r3, [pc, #148]	; (800b76c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b6d8:	7819      	ldrb	r1, [r3, #0]
 800b6da:	4b26      	ldr	r3, [pc, #152]	; (800b774 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b6dc:	b189      	cbz	r1, 800b702 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800b6de:	6919      	ldr	r1, [r3, #16]
 800b6e0:	f041 0101 	orr.w	r1, r1, #1
 800b6e4:	6119      	str	r1, [r3, #16]
 800b6e6:	4d1e      	ldr	r5, [pc, #120]	; (800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b6e8:	481c      	ldr	r0, [pc, #112]	; (800b75c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800b6ea:	6829      	ldr	r1, [r5, #0]
 800b6ec:	6803      	ldr	r3, [r0, #0]
 800b6ee:	f851 6b04 	ldr.w	r6, [r1], #4
 800b6f2:	f843 6b04 	str.w	r6, [r3], #4
 800b6f6:	6003      	str	r3, [r0, #0]
 800b6f8:	6813      	ldr	r3, [r2, #0]
 800b6fa:	6029      	str	r1, [r5, #0]
 800b6fc:	3b04      	subs	r3, #4
 800b6fe:	6013      	str	r3, [r2, #0]
 800b700:	e7b4      	b.n	800b66c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b702:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800b704:	f041 0101 	orr.w	r1, r1, #1
 800b708:	6519      	str	r1, [r3, #80]	; 0x50
 800b70a:	e7ec      	b.n	800b6e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800b70c:	2b00      	cmp	r3, #0
 800b70e:	d0ad      	beq.n	800b66c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b710:	4b16      	ldr	r3, [pc, #88]	; (800b76c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b712:	781a      	ldrb	r2, [r3, #0]
 800b714:	4b17      	ldr	r3, [pc, #92]	; (800b774 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b716:	b152      	cbz	r2, 800b72e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800b718:	691a      	ldr	r2, [r3, #16]
 800b71a:	f042 0201 	orr.w	r2, r2, #1
 800b71e:	611a      	str	r2, [r3, #16]
 800b720:	4a0f      	ldr	r2, [pc, #60]	; (800b760 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800b722:	4b0e      	ldr	r3, [pc, #56]	; (800b75c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800b724:	6812      	ldr	r2, [r2, #0]
 800b726:	681b      	ldr	r3, [r3, #0]
 800b728:	6812      	ldr	r2, [r2, #0]
 800b72a:	601a      	str	r2, [r3, #0]
 800b72c:	e79e      	b.n	800b66c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800b72e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b730:	f042 0201 	orr.w	r2, r2, #1
 800b734:	651a      	str	r2, [r3, #80]	; 0x50
 800b736:	e7f3      	b.n	800b720 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800b738:	4b0c      	ldr	r3, [pc, #48]	; (800b76c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800b73a:	781a      	ldrb	r2, [r3, #0]
 800b73c:	4b0d      	ldr	r3, [pc, #52]	; (800b774 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800b73e:	b132      	cbz	r2, 800b74e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800b740:	691a      	ldr	r2, [r3, #16]
 800b742:	f022 0202 	bic.w	r2, r2, #2
 800b746:	611a      	str	r2, [r3, #16]
 800b748:	2000      	movs	r0, #0
 800b74a:	6020      	str	r0, [r4, #0]
 800b74c:	e7b9      	b.n	800b6c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800b74e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b750:	f022 0202 	bic.w	r2, r2, #2
 800b754:	651a      	str	r2, [r3, #80]	; 0x50
 800b756:	e7f7      	b.n	800b748 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800b758:	20001bac 	andcs	r1, r0, ip, lsr #23
 800b75c:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800b760:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800b764:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800b768:	1ffff700 	svcne	0x00fff700
 800b76c:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800b770:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800b774:	40022000 	andmi	r2, r2, r0

0800b778 <net_init>:
 800b778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b77c:	460c      	mov	r4, r1
 800b77e:	4616      	mov	r6, r2
 800b780:	9f06      	ldr	r7, [sp, #24]
 800b782:	4a22      	ldr	r2, [pc, #136]	; (800b80c <net_init+0x94>)
 800b784:	461d      	mov	r5, r3
 800b786:	1e43      	subs	r3, r0, #1
 800b788:	3005      	adds	r0, #5
 800b78a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b78e:	4283      	cmp	r3, r0
 800b790:	f802 1b01 	strb.w	r1, [r2], #1
 800b794:	d1f9      	bne.n	800b78a <net_init+0x12>
 800b796:	4623      	mov	r3, r4
 800b798:	4a1d      	ldr	r2, [pc, #116]	; (800b810 <net_init+0x98>)
 800b79a:	f104 010c 	add.w	r1, r4, #12
 800b79e:	f813 0b01 	ldrb.w	r0, [r3], #1
 800b7a2:	428b      	cmp	r3, r1
 800b7a4:	f802 0b01 	strb.w	r0, [r2], #1
 800b7a8:	d1f9      	bne.n	800b79e <net_init+0x26>
 800b7aa:	f04f 0800 	mov.w	r8, #0
 800b7ae:	4918      	ldr	r1, [pc, #96]	; (800b810 <net_init+0x98>)
 800b7b0:	4816      	ldr	r0, [pc, #88]	; (800b80c <net_init+0x94>)
 800b7b2:	f002 fb66 	bl	800de82 <ip_init>
 800b7b6:	4815      	ldr	r0, [pc, #84]	; (800b80c <net_init+0x94>)
 800b7b8:	f000 f868 	bl	800b88c <rfc3927_init>
 800b7bc:	f887 8000 	strb.w	r8, [r7]
 800b7c0:	782b      	ldrb	r3, [r5, #0]
 800b7c2:	b163      	cbz	r3, 800b7de <net_init+0x66>
 800b7c4:	4632      	mov	r2, r6
 800b7c6:	4912      	ldr	r1, [pc, #72]	; (800b810 <net_init+0x98>)
 800b7c8:	4810      	ldr	r0, [pc, #64]	; (800b80c <net_init+0x94>)
 800b7ca:	f002 f86b 	bl	800d8a4 <dhcp_client>
 800b7ce:	4540      	cmp	r0, r8
 800b7d0:	da05      	bge.n	800b7de <net_init+0x66>
 800b7d2:	480f      	ldr	r0, [pc, #60]	; (800b810 <net_init+0x98>)
 800b7d4:	f885 8000 	strb.w	r8, [r5]
 800b7d8:	f000 f864 	bl	800b8a4 <rfc3927>
 800b7dc:	7038      	strb	r0, [r7, #0]
 800b7de:	490c      	ldr	r1, [pc, #48]	; (800b810 <net_init+0x98>)
 800b7e0:	480a      	ldr	r0, [pc, #40]	; (800b80c <net_init+0x94>)
 800b7e2:	f001 fe6f 	bl	800d4c4 <arp_init>
 800b7e6:	480a      	ldr	r0, [pc, #40]	; (800b810 <net_init+0x98>)
 800b7e8:	f002 fb42 	bl	800de70 <ip_set_ip>
 800b7ec:	f000 f9c2 	bl	800bb74 <tcp_init>
 800b7f0:	4a07      	ldr	r2, [pc, #28]	; (800b810 <net_init+0x98>)
 800b7f2:	1e63      	subs	r3, r4, #1
 800b7f4:	340b      	adds	r4, #11
 800b7f6:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b7fa:	f803 1f01 	strb.w	r1, [r3, #1]!
 800b7fe:	429c      	cmp	r4, r3
 800b800:	d1f9      	bne.n	800b7f6 <net_init+0x7e>
 800b802:	782a      	ldrb	r2, [r5, #0]
 800b804:	4b03      	ldr	r3, [pc, #12]	; (800b814 <net_init+0x9c>)
 800b806:	701a      	strb	r2, [r3, #0]
 800b808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b80c:	20001bcc 	andcs	r1, r0, ip, asr #23
 800b810:	20001bc0 	andcs	r1, r0, r0, asr #23
 800b814:	20001bd2 	ldrdcs	r1, [r0], -r2

0800b818 <net_shutdown>:
 800b818:	b508      	push	{r3, lr}
 800b81a:	f002 fb3d 	bl	800de98 <ip_shutdown>
 800b81e:	4b04      	ldr	r3, [pc, #16]	; (800b830 <net_shutdown+0x18>)
 800b820:	781b      	ldrb	r3, [r3, #0]
 800b822:	b11b      	cbz	r3, 800b82c <net_shutdown+0x14>
 800b824:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b828:	f002 b944 	b.w	800dab4 <dhcp_client_release>
 800b82c:	bd08      	pop	{r3, pc}
 800b82e:	bf00      	nop
 800b830:	20001bd2 	ldrdcs	r1, [r0], -r2

0800b834 <net_handle>:
 800b834:	b510      	push	{r4, lr}
 800b836:	4c0c      	ldr	r4, [pc, #48]	; (800b868 <net_handle+0x34>)
 800b838:	4620      	mov	r0, r4
 800b83a:	f004 fa47 	bl	800fccc <emac_eth_recv>
 800b83e:	2800      	cmp	r0, #0
 800b840:	dd07      	ble.n	800b852 <net_handle+0x1e>
 800b842:	6820      	ldr	r0, [r4, #0]
 800b844:	8983      	ldrh	r3, [r0, #12]
 800b846:	2b08      	cmp	r3, #8
 800b848:	d107      	bne.n	800b85a <net_handle+0x26>
 800b84a:	f002 fb2c 	bl	800dea6 <ip_handle>
 800b84e:	f004 fa51 	bl	800fcf4 <emac_free_pkt>
 800b852:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b856:	f000 b809 	b.w	800b86c <net_timers_run>
 800b85a:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800b85e:	d1f6      	bne.n	800b84e <net_handle+0x1a>
 800b860:	f001 feb6 	bl	800d5d0 <arp_handle>
 800b864:	e7f3      	b.n	800b84e <net_handle+0x1a>
 800b866:	bf00      	nop
 800b868:	20001bd4 	ldrdcs	r1, [r0], -r4

0800b86c <net_timers_run>:
 800b86c:	4b05      	ldr	r3, [pc, #20]	; (800b884 <net_timers_run+0x18>)
 800b86e:	4a06      	ldr	r2, [pc, #24]	; (800b888 <net_timers_run+0x1c>)
 800b870:	681b      	ldr	r3, [r3, #0]
 800b872:	6811      	ldr	r1, [r2, #0]
 800b874:	4299      	cmp	r1, r3
 800b876:	d803      	bhi.n	800b880 <net_timers_run+0x14>
 800b878:	3364      	adds	r3, #100	; 0x64
 800b87a:	6013      	str	r3, [r2, #0]
 800b87c:	f002 ba5a 	b.w	800dd34 <igmp_timer>
 800b880:	4770      	bx	lr
 800b882:	bf00      	nop
 800b884:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b888:	20001bd8 	ldrdcs	r1, [r0], -r8

0800b88c <rfc3927_init>:
 800b88c:	4b04      	ldr	r3, [pc, #16]	; (800b8a0 <rfc3927_init+0x14>)
 800b88e:	1d82      	adds	r2, r0, #6
 800b890:	4290      	cmp	r0, r2
 800b892:	d100      	bne.n	800b896 <rfc3927_init+0xa>
 800b894:	4770      	bx	lr
 800b896:	f810 1b01 	ldrb.w	r1, [r0], #1
 800b89a:	f803 1b01 	strb.w	r1, [r3], #1
 800b89e:	e7f7      	b.n	800b890 <rfc3927_init+0x4>
 800b8a0:	20001bdc 	ldrdcs	r1, [r0], -ip

0800b8a4 <rfc3927>:
 800b8a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8a8:	4605      	mov	r5, r0
 800b8aa:	26ff      	movs	r6, #255	; 0xff
 800b8ac:	4b18      	ldr	r3, [pc, #96]	; (800b910 <rfc3927+0x6c>)
 800b8ae:	4f19      	ldr	r7, [pc, #100]	; (800b914 <rfc3927+0x70>)
 800b8b0:	791a      	ldrb	r2, [r3, #4]
 800b8b2:	78dc      	ldrb	r4, [r3, #3]
 800b8b4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800b918 <rfc3927+0x74>
 800b8b8:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800b8bc:	f8d7 9000 	ldr.w	r9, [r7]
 800b8c0:	f8df b058 	ldr.w	fp, [pc, #88]	; 800b91c <rfc3927+0x78>
 800b8c4:	f8df a058 	ldr.w	sl, [pc, #88]	; 800b920 <rfc3927+0x7c>
 800b8c8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800b8cc:	4659      	mov	r1, fp
 800b8ce:	4620      	mov	r0, r4
 800b8d0:	f001 fecc 	bl	800d66c <arp_cache_lookup>
 800b8d4:	b938      	cbnz	r0, 800b8e6 <rfc3927+0x42>
 800b8d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b8da:	2001      	movs	r0, #1
 800b8dc:	602c      	str	r4, [r5, #0]
 800b8de:	60ac      	str	r4, [r5, #8]
 800b8e0:	606b      	str	r3, [r5, #4]
 800b8e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8e6:	ba24      	rev	r4, r4
 800b8e8:	3401      	adds	r4, #1
 800b8ea:	3e01      	subs	r6, #1
 800b8ec:	ba24      	rev	r4, r4
 800b8ee:	b2b6      	uxth	r6, r6
 800b8f0:	4554      	cmp	r4, sl
 800b8f2:	bf08      	it	eq
 800b8f4:	4644      	moveq	r4, r8
 800b8f6:	b12e      	cbz	r6, 800b904 <rfc3927+0x60>
 800b8f8:	683b      	ldr	r3, [r7, #0]
 800b8fa:	eba3 0309 	sub.w	r3, r3, r9
 800b8fe:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b902:	d3e3      	bcc.n	800b8cc <rfc3927+0x28>
 800b904:	2000      	movs	r0, #0
 800b906:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800b90a:	6028      	str	r0, [r5, #0]
 800b90c:	e7e9      	b.n	800b8e2 <rfc3927+0x3e>
 800b90e:	bf00      	nop
 800b910:	20001bdc 	ldrdcs	r1, [r0], -ip
 800b914:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b918:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800b91c:	20001be4 	andcs	r1, r0, r4, ror #23
 800b920:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800b924 <_init_tcb>:
 800b924:	b510      	push	{r4, lr}
 800b926:	4603      	mov	r3, r0
 800b928:	2400      	movs	r4, #0
 800b92a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800b92e:	4293      	cmp	r3, r2
 800b930:	d10d      	bne.n	800b94e <_init_tcb+0x2a>
 800b932:	4b08      	ldr	r3, [pc, #32]	; (800b954 <_init_tcb+0x30>)
 800b934:	f640 3268 	movw	r2, #2920	; 0xb68
 800b938:	681b      	ldr	r3, [r3, #0]
 800b93a:	8702      	strh	r2, [r0, #56]	; 0x38
 800b93c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b940:	6283      	str	r3, [r0, #40]	; 0x28
 800b942:	6243      	str	r3, [r0, #36]	; 0x24
 800b944:	2301      	movs	r3, #1
 800b946:	8001      	strh	r1, [r0, #0]
 800b948:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800b94c:	bd10      	pop	{r4, pc}
 800b94e:	f803 4b01 	strb.w	r4, [r3], #1
 800b952:	e7ec      	b.n	800b92e <_init_tcb+0xa>
 800b954:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800b958 <memcpy.isra.0>:
 800b958:	3801      	subs	r0, #1
 800b95a:	440a      	add	r2, r1
 800b95c:	4291      	cmp	r1, r2
 800b95e:	d100      	bne.n	800b962 <memcpy.isra.0+0xa>
 800b960:	4770      	bx	lr
 800b962:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b966:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b96a:	e7f7      	b.n	800b95c <memcpy.isra.0+0x4>

0800b96c <_bswap32>:
 800b96c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b96e:	2204      	movs	r2, #4
 800b970:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800b974:	4629      	mov	r1, r5
 800b976:	4604      	mov	r4, r0
 800b978:	eb0d 0002 	add.w	r0, sp, r2
 800b97c:	f7ff ffec 	bl	800b958 <memcpy.isra.0>
 800b980:	2204      	movs	r2, #4
 800b982:	9b01      	ldr	r3, [sp, #4]
 800b984:	eb0d 0102 	add.w	r1, sp, r2
 800b988:	ba1b      	rev	r3, r3
 800b98a:	4628      	mov	r0, r5
 800b98c:	9301      	str	r3, [sp, #4]
 800b98e:	f7ff ffe3 	bl	800b958 <memcpy.isra.0>
 800b992:	2204      	movs	r2, #4
 800b994:	3426      	adds	r4, #38	; 0x26
 800b996:	eb0d 0002 	add.w	r0, sp, r2
 800b99a:	4621      	mov	r1, r4
 800b99c:	f7ff ffdc 	bl	800b958 <memcpy.isra.0>
 800b9a0:	2204      	movs	r2, #4
 800b9a2:	9b01      	ldr	r3, [sp, #4]
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	ba1b      	rev	r3, r3
 800b9a8:	eb0d 0102 	add.w	r1, sp, r2
 800b9ac:	9301      	str	r3, [sp, #4]
 800b9ae:	f7ff ffd3 	bl	800b958 <memcpy.isra.0>
 800b9b2:	b003      	add	sp, #12
 800b9b4:	bd30      	pop	{r4, r5, pc}
	...

0800b9b8 <_tcp_send_package>:
 800b9b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b9bc:	7a0b      	ldrb	r3, [r1, #8]
 800b9be:	4605      	mov	r5, r0
 800b9c0:	f013 0f02 	tst.w	r3, #2
 800b9c4:	bf0c      	ite	eq
 800b9c6:	f04f 0905 	moveq.w	r9, #5
 800b9ca:	f04f 0906 	movne.w	r9, #6
 800b9ce:	f04f 0800 	mov.w	r8, #0
 800b9d2:	4c4b      	ldr	r4, [pc, #300]	; (800bb00 <_tcp_send_package+0x148>)
 800b9d4:	460f      	mov	r7, r1
 800b9d6:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800b9d8:	f100 0108 	add.w	r1, r0, #8
 800b9dc:	2206      	movs	r2, #6
 800b9de:	4620      	mov	r0, r4
 800b9e0:	f7ff ffba 	bl	800b958 <memcpy.isra.0>
 800b9e4:	4a47      	ldr	r2, [pc, #284]	; (800bb04 <_tcp_send_package+0x14c>)
 800b9e6:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800b9ea:	8813      	ldrh	r3, [r2, #0]
 800b9ec:	b2b6      	uxth	r6, r6
 800b9ee:	1c59      	adds	r1, r3, #1
 800b9f0:	8263      	strh	r3, [r4, #18]
 800b9f2:	f105 0a04 	add.w	sl, r5, #4
 800b9f6:	f106 0314 	add.w	r3, r6, #20
 800b9fa:	ba5b      	rev16	r3, r3
 800b9fc:	8011      	strh	r1, [r2, #0]
 800b9fe:	f104 001e 	add.w	r0, r4, #30
 800ba02:	2204      	movs	r2, #4
 800ba04:	4651      	mov	r1, sl
 800ba06:	8223      	strh	r3, [r4, #16]
 800ba08:	f7ff ffa6 	bl	800b958 <memcpy.isra.0>
 800ba0c:	2114      	movs	r1, #20
 800ba0e:	f104 000e 	add.w	r0, r4, #14
 800ba12:	f884 8018 	strb.w	r8, [r4, #24]
 800ba16:	f884 8019 	strb.w	r8, [r4, #25]
 800ba1a:	f002 fa5d 	bl	800ded8 <net_chksum>
 800ba1e:	882b      	ldrh	r3, [r5, #0]
 800ba20:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800ba24:	8463      	strh	r3, [r4, #34]	; 0x22
 800ba26:	886b      	ldrh	r3, [r5, #2]
 800ba28:	8320      	strh	r0, [r4, #24]
 800ba2a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ba2c:	683b      	ldr	r3, [r7, #0]
 800ba2e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800ba30:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800ba34:	687b      	ldr	r3, [r7, #4]
 800ba36:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800ba3a:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800ba3e:	7a3b      	ldrb	r3, [r7, #8]
 800ba40:	8622      	strh	r2, [r4, #48]	; 0x30
 800ba42:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800ba46:	079b      	lsls	r3, r3, #30
 800ba48:	bf48      	it	mi
 800ba4a:	2302      	movmi	r3, #2
 800ba4c:	8baa      	ldrh	r2, [r5, #28]
 800ba4e:	bf44      	itt	mi
 800ba50:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800ba54:	2304      	movmi	r3, #4
 800ba56:	86a2      	strh	r2, [r4, #52]	; 0x34
 800ba58:	bf41      	itttt	mi
 800ba5a:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800ba5e:	4622      	movmi	r2, r4
 800ba60:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800ba64:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800ba68:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ba6a:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800ba6e:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800ba72:	bf58      	it	pl
 800ba74:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800ba78:	2b00      	cmp	r3, #0
 800ba7a:	d13f      	bne.n	800bafc <_tcp_send_package+0x144>
 800ba7c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ba7e:	4820      	ldr	r0, [pc, #128]	; (800bb00 <_tcp_send_package+0x148>)
 800ba80:	ba5b      	rev16	r3, r3
 800ba82:	8463      	strh	r3, [r4, #34]	; 0x22
 800ba84:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800ba86:	ba5b      	rev16	r3, r3
 800ba88:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ba8a:	f7ff ff6f 	bl	800b96c <_bswap32>
 800ba8e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ba90:	a801      	add	r0, sp, #4
 800ba92:	ba5b      	rev16	r3, r3
 800ba94:	8623      	strh	r3, [r4, #48]	; 0x30
 800ba96:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ba98:	220c      	movs	r2, #12
 800ba9a:	ba5b      	rev16	r3, r3
 800ba9c:	491a      	ldr	r1, [pc, #104]	; (800bb08 <_tcp_send_package+0x150>)
 800ba9e:	86a3      	strh	r3, [r4, #52]	; 0x34
 800baa0:	f7ff ff5a 	bl	800b958 <memcpy.isra.0>
 800baa4:	2204      	movs	r2, #4
 800baa6:	4919      	ldr	r1, [pc, #100]	; (800bb0c <_tcp_send_package+0x154>)
 800baa8:	4817      	ldr	r0, [pc, #92]	; (800bb08 <_tcp_send_package+0x150>)
 800baaa:	f7ff ff55 	bl	800b958 <memcpy.isra.0>
 800baae:	2204      	movs	r2, #4
 800bab0:	4651      	mov	r1, sl
 800bab2:	4817      	ldr	r0, [pc, #92]	; (800bb10 <_tcp_send_package+0x158>)
 800bab4:	f7ff ff50 	bl	800b958 <memcpy.isra.0>
 800bab8:	2300      	movs	r3, #0
 800baba:	77a3      	strb	r3, [r4, #30]
 800babc:	2306      	movs	r3, #6
 800babe:	f106 010c 	add.w	r1, r6, #12
 800bac2:	77e3      	strb	r3, [r4, #31]
 800bac4:	4810      	ldr	r0, [pc, #64]	; (800bb08 <_tcp_send_package+0x150>)
 800bac6:	ba73      	rev16	r3, r6
 800bac8:	8423      	strh	r3, [r4, #32]
 800baca:	f002 fa05 	bl	800ded8 <net_chksum>
 800bace:	a901      	add	r1, sp, #4
 800bad0:	4605      	mov	r5, r0
 800bad2:	220c      	movs	r2, #12
 800bad4:	480c      	ldr	r0, [pc, #48]	; (800bb08 <_tcp_send_package+0x150>)
 800bad6:	f7ff ff3f 	bl	800b958 <memcpy.isra.0>
 800bada:	4809      	ldr	r0, [pc, #36]	; (800bb00 <_tcp_send_package+0x148>)
 800badc:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800bae0:	8665      	strh	r5, [r4, #50]	; 0x32
 800bae2:	b004      	add	sp, #16
 800bae4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bae8:	f004 b908 	b.w	800fcfc <emac_eth_send>
 800baec:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800baee:	5cc9      	ldrb	r1, [r1, r3]
 800baf0:	54d1      	strb	r1, [r2, r3]
 800baf2:	3301      	adds	r3, #1
 800baf4:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800baf6:	4299      	cmp	r1, r3
 800baf8:	d8f8      	bhi.n	800baec <_tcp_send_package+0x134>
 800bafa:	e7bf      	b.n	800ba7c <_tcp_send_package+0xc4>
 800bafc:	2300      	movs	r3, #0
 800bafe:	e7f9      	b.n	800baf4 <_tcp_send_package+0x13c>
 800bb00:	200027a0 	andcs	r2, r0, r0, lsr #15
 800bb04:	20001bea 	andcs	r1, r0, sl, ror #23
 800bb08:	200027b6 			; <UNDEFINED> instruction: 0x200027b6
 800bb0c:	20001bc0 	andcs	r1, r0, r0, asr #23
 800bb10:	200027ba 			; <UNDEFINED> instruction: 0x200027ba

0800bb14 <_send_reset>:
 800bb14:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bb16:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800bb1a:	4604      	mov	r4, r0
 800bb1c:	075a      	lsls	r2, r3, #29
 800bb1e:	460e      	mov	r6, r1
 800bb20:	d421      	bmi.n	800bb66 <_send_reset+0x52>
 800bb22:	2204      	movs	r2, #4
 800bb24:	f013 0310 	ands.w	r3, r3, #16
 800bb28:	f88d 200c 	strb.w	r2, [sp, #12]
 800bb2c:	d01d      	beq.n	800bb6a <_send_reset+0x56>
 800bb2e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800bb32:	4668      	mov	r0, sp
 800bb34:	f7ff ff10 	bl	800b958 <memcpy.isra.0>
 800bb38:	9b00      	ldr	r3, [sp, #0]
 800bb3a:	9301      	str	r3, [sp, #4]
 800bb3c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800bb40:	4668      	mov	r0, sp
 800bb42:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800bb46:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800bb4a:	07db      	lsls	r3, r3, #31
 800bb4c:	f04f 0204 	mov.w	r2, #4
 800bb50:	bf48      	it	mi
 800bb52:	3501      	addmi	r5, #1
 800bb54:	f7ff ff00 	bl	800b958 <memcpy.isra.0>
 800bb58:	9b00      	ldr	r3, [sp, #0]
 800bb5a:	4630      	mov	r0, r6
 800bb5c:	441d      	add	r5, r3
 800bb5e:	a901      	add	r1, sp, #4
 800bb60:	9502      	str	r5, [sp, #8]
 800bb62:	f7ff ff29 	bl	800b9b8 <_tcp_send_package>
 800bb66:	b004      	add	sp, #16
 800bb68:	bd70      	pop	{r4, r5, r6, pc}
 800bb6a:	9301      	str	r3, [sp, #4]
 800bb6c:	2314      	movs	r3, #20
 800bb6e:	f88d 300c 	strb.w	r3, [sp, #12]
 800bb72:	e7e3      	b.n	800bb3c <_send_reset+0x28>

0800bb74 <tcp_init>:
 800bb74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb76:	2206      	movs	r2, #6
 800bb78:	4c0e      	ldr	r4, [pc, #56]	; (800bbb4 <tcp_init+0x40>)
 800bb7a:	490f      	ldr	r1, [pc, #60]	; (800bbb8 <tcp_init+0x44>)
 800bb7c:	18a0      	adds	r0, r4, r2
 800bb7e:	f7ff feeb 	bl	800b958 <memcpy.isra.0>
 800bb82:	2308      	movs	r3, #8
 800bb84:	2204      	movs	r2, #4
 800bb86:	2500      	movs	r5, #0
 800bb88:	7323      	strb	r3, [r4, #12]
 800bb8a:	4b0c      	ldr	r3, [pc, #48]	; (800bbbc <tcp_init+0x48>)
 800bb8c:	eb0d 0102 	add.w	r1, sp, r2
 800bb90:	681b      	ldr	r3, [r3, #0]
 800bb92:	f104 001a 	add.w	r0, r4, #26
 800bb96:	9301      	str	r3, [sp, #4]
 800bb98:	7365      	strb	r5, [r4, #13]
 800bb9a:	f7ff fedd 	bl	800b958 <memcpy.isra.0>
 800bb9e:	2345      	movs	r3, #69	; 0x45
 800bba0:	73a3      	strb	r3, [r4, #14]
 800bba2:	2340      	movs	r3, #64	; 0x40
 800bba4:	7523      	strb	r3, [r4, #20]
 800bba6:	75a3      	strb	r3, [r4, #22]
 800bba8:	2306      	movs	r3, #6
 800bbaa:	73e5      	strb	r5, [r4, #15]
 800bbac:	7565      	strb	r5, [r4, #21]
 800bbae:	75e3      	strb	r3, [r4, #23]
 800bbb0:	b003      	add	sp, #12
 800bbb2:	bd30      	pop	{r4, r5, pc}
 800bbb4:	200027a0 	andcs	r2, r0, r0, lsr #15
 800bbb8:	20001bcc 	andcs	r1, r0, ip, asr #23
 800bbbc:	20001bc0 	andcs	r1, r0, r0, asr #23

0800bbc0 <tcp_handle>:
 800bbc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbc4:	4605      	mov	r5, r0
 800bbc6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 800bbc8:	b085      	sub	sp, #20
 800bbca:	ba5b      	rev16	r3, r3
 800bbcc:	8443      	strh	r3, [r0, #34]	; 0x22
 800bbce:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800bbd0:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 800bbd4:	ba5b      	rev16	r3, r3
 800bbd6:	8483      	strh	r3, [r0, #36]	; 0x24
 800bbd8:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800bbdc:	f7ff fec6 	bl	800b96c <_bswap32>
 800bbe0:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 800bbe2:	4ca6      	ldr	r4, [pc, #664]	; (800be7c <tcp_handle+0x2bc>)
 800bbe4:	ba5b      	rev16	r3, r3
 800bbe6:	862b      	strh	r3, [r5, #48]	; 0x30
 800bbe8:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800bbea:	8822      	ldrh	r2, [r4, #0]
 800bbec:	ba5b      	rev16	r3, r3
 800bbee:	86ab      	strh	r3, [r5, #52]	; 0x34
 800bbf0:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 800bbf2:	429a      	cmp	r2, r3
 800bbf4:	d14d      	bne.n	800bc92 <tcp_handle+0xd2>
 800bbf6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bbfa:	2b01      	cmp	r3, #1
 800bbfc:	d00d      	beq.n	800bc1a <tcp_handle+0x5a>
 800bbfe:	2204      	movs	r2, #4
 800bc00:	4668      	mov	r0, sp
 800bc02:	f105 011a 	add.w	r1, r5, #26
 800bc06:	f7ff fea7 	bl	800b958 <memcpy.isra.0>
 800bc0a:	8862      	ldrh	r2, [r4, #2]
 800bc0c:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800bc0e:	429a      	cmp	r2, r3
 800bc10:	d13f      	bne.n	800bc92 <tcp_handle+0xd2>
 800bc12:	6862      	ldr	r2, [r4, #4]
 800bc14:	9b00      	ldr	r3, [sp, #0]
 800bc16:	429a      	cmp	r2, r3
 800bc18:	d13b      	bne.n	800bc92 <tcp_handle+0xd2>
 800bc1a:	2204      	movs	r2, #4
 800bc1c:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800bc20:	eb0d 0002 	add.w	r0, sp, r2
 800bc24:	f7ff fe98 	bl	800b958 <memcpy.isra.0>
 800bc28:	2204      	movs	r2, #4
 800bc2a:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800bc2e:	eb0d 0002 	add.w	r0, sp, r2
 800bc32:	9e01      	ldr	r6, [sp, #4]
 800bc34:	f7ff fe90 	bl	800b958 <memcpy.isra.0>
 800bc38:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bc3c:	9f01      	ldr	r7, [sp, #4]
 800bc3e:	2a01      	cmp	r2, #1
 800bc40:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800bc44:	d01b      	beq.n	800bc7e <tcp_handle+0xbe>
 800bc46:	1ed3      	subs	r3, r2, #3
 800bc48:	2b07      	cmp	r3, #7
 800bc4a:	d822      	bhi.n	800bc92 <tcp_handle+0xd2>
 800bc4c:	ea4f 1318 	mov.w	r3, r8, lsr #4
 800bc50:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800bc54:	fa9b fb9b 	rev16.w	fp, fp
 800bc58:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800bc5c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800bc5e:	44d8      	add	r8, fp
 800bc60:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800bc64:	ea4f 0983 	mov.w	r9, r3, lsl #2
 800bc68:	fa1f f888 	uxth.w	r8, r8
 800bc6c:	2900      	cmp	r1, #0
 800bc6e:	d142      	bne.n	800bcf6 <tcp_handle+0x136>
 800bc70:	f1b8 0f00 	cmp.w	r8, #0
 800bc74:	d16b      	bne.n	800bd4e <tcp_handle+0x18e>
 800bc76:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bc78:	42bb      	cmp	r3, r7
 800bc7a:	d168      	bne.n	800bd4e <tcp_handle+0x18e>
 800bc7c:	e048      	b.n	800bd10 <tcp_handle+0x150>
 800bc7e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800bc82:	075a      	lsls	r2, r3, #29
 800bc84:	d405      	bmi.n	800bc92 <tcp_handle+0xd2>
 800bc86:	06d8      	lsls	r0, r3, #27
 800bc88:	d506      	bpl.n	800bc98 <tcp_handle+0xd8>
 800bc8a:	4628      	mov	r0, r5
 800bc8c:	497b      	ldr	r1, [pc, #492]	; (800be7c <tcp_handle+0x2bc>)
 800bc8e:	f7ff ff41 	bl	800bb14 <_send_reset>
 800bc92:	b005      	add	sp, #20
 800bc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc98:	0799      	lsls	r1, r3, #30
 800bc9a:	d5fa      	bpl.n	800bc92 <tcp_handle+0xd2>
 800bc9c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800bca0:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800bca4:	4668      	mov	r0, sp
 800bca6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800bcaa:	f105 011a 	add.w	r1, r5, #26
 800bcae:	2204      	movs	r2, #4
 800bcb0:	8063      	strh	r3, [r4, #2]
 800bcb2:	f7ff fe51 	bl	800b958 <memcpy.isra.0>
 800bcb6:	2206      	movs	r2, #6
 800bcb8:	9b00      	ldr	r3, [sp, #0]
 800bcba:	18a9      	adds	r1, r5, r2
 800bcbc:	4870      	ldr	r0, [pc, #448]	; (800be80 <tcp_handle+0x2c0>)
 800bcbe:	6063      	str	r3, [r4, #4]
 800bcc0:	f7ff fe4a 	bl	800b958 <memcpy.isra.0>
 800bcc4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bcc6:	1c7b      	adds	r3, r7, #1
 800bcc8:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800bccc:	6363      	str	r3, [r4, #52]	; 0x34
 800bcce:	2312      	movs	r3, #18
 800bcd0:	486a      	ldr	r0, [pc, #424]	; (800be7c <tcp_handle+0x2bc>)
 800bcd2:	a901      	add	r1, sp, #4
 800bcd4:	f88d 300c 	strb.w	r3, [sp, #12]
 800bcd8:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800bcdc:	63e7      	str	r7, [r4, #60]	; 0x3c
 800bcde:	f8c4 a018 	str.w	sl, [r4, #24]
 800bce2:	f7ff fe69 	bl	800b9b8 <_tcp_send_package>
 800bce6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bce8:	1c5a      	adds	r2, r3, #1
 800bcea:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800bcee:	2303      	movs	r3, #3
 800bcf0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bcf4:	e7cd      	b.n	800bc92 <tcp_handle+0xd2>
 800bcf6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bcf8:	eba3 0c07 	sub.w	ip, r3, r7
 800bcfc:	f1b8 0f00 	cmp.w	r8, #0
 800bd00:	d10d      	bne.n	800bd1e <tcp_handle+0x15e>
 800bd02:	f1bc 0f00 	cmp.w	ip, #0
 800bd06:	dc22      	bgt.n	800bd4e <tcp_handle+0x18e>
 800bd08:	1afb      	subs	r3, r7, r3
 800bd0a:	1a5b      	subs	r3, r3, r1
 800bd0c:	2b00      	cmp	r3, #0
 800bd0e:	da1e      	bge.n	800bd4e <tcp_handle+0x18e>
 800bd10:	0743      	lsls	r3, r0, #29
 800bd12:	d530      	bpl.n	800bd76 <tcp_handle+0x1b6>
 800bd14:	8821      	ldrh	r1, [r4, #0]
 800bd16:	4859      	ldr	r0, [pc, #356]	; (800be7c <tcp_handle+0x2bc>)
 800bd18:	f7ff fe04 	bl	800b924 <_init_tcb>
 800bd1c:	e7b9      	b.n	800bc92 <tcp_handle+0xd2>
 800bd1e:	f1bc 0f00 	cmp.w	ip, #0
 800bd22:	dc06      	bgt.n	800bd32 <tcp_handle+0x172>
 800bd24:	eba7 0c03 	sub.w	ip, r7, r3
 800bd28:	ebac 0c01 	sub.w	ip, ip, r1
 800bd2c:	f1bc 0f00 	cmp.w	ip, #0
 800bd30:	dbee      	blt.n	800bd10 <tcp_handle+0x150>
 800bd32:	eb08 0c07 	add.w	ip, r8, r7
 800bd36:	f103 0e01 	add.w	lr, r3, #1
 800bd3a:	ebae 0e0c 	sub.w	lr, lr, ip
 800bd3e:	f1be 0f00 	cmp.w	lr, #0
 800bd42:	dc04      	bgt.n	800bd4e <tcp_handle+0x18e>
 800bd44:	43db      	mvns	r3, r3
 800bd46:	1a5b      	subs	r3, r3, r1
 800bd48:	eb13 0f0c 	cmn.w	r3, ip
 800bd4c:	d4e0      	bmi.n	800bd10 <tcp_handle+0x150>
 800bd4e:	0742      	lsls	r2, r0, #29
 800bd50:	d505      	bpl.n	800bd5e <tcp_handle+0x19e>
 800bd52:	8821      	ldrh	r1, [r4, #0]
 800bd54:	4849      	ldr	r0, [pc, #292]	; (800be7c <tcp_handle+0x2bc>)
 800bd56:	f7ff fde5 	bl	800b924 <_init_tcb>
 800bd5a:	2301      	movs	r3, #1
 800bd5c:	e7c8      	b.n	800bcf0 <tcp_handle+0x130>
 800bd5e:	6963      	ldr	r3, [r4, #20]
 800bd60:	9301      	str	r3, [sp, #4]
 800bd62:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd64:	9302      	str	r3, [sp, #8]
 800bd66:	2310      	movs	r3, #16
 800bd68:	4844      	ldr	r0, [pc, #272]	; (800be7c <tcp_handle+0x2bc>)
 800bd6a:	a901      	add	r1, sp, #4
 800bd6c:	f88d 300c 	strb.w	r3, [sp, #12]
 800bd70:	f7ff fe22 	bl	800b9b8 <_tcp_send_package>
 800bd74:	e78d      	b.n	800bc92 <tcp_handle+0xd2>
 800bd76:	0781      	lsls	r1, r0, #30
 800bd78:	d505      	bpl.n	800bd86 <tcp_handle+0x1c6>
 800bd7a:	2a03      	cmp	r2, #3
 800bd7c:	d0ed      	beq.n	800bd5a <tcp_handle+0x19a>
 800bd7e:	4628      	mov	r0, r5
 800bd80:	493e      	ldr	r1, [pc, #248]	; (800be7c <tcp_handle+0x2bc>)
 800bd82:	f7ff fec7 	bl	800bb14 <_send_reset>
 800bd86:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800bd8a:	06da      	lsls	r2, r3, #27
 800bd8c:	d581      	bpl.n	800bc92 <tcp_handle+0xd2>
 800bd8e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bd92:	3b03      	subs	r3, #3
 800bd94:	2b07      	cmp	r3, #7
 800bd96:	d818      	bhi.n	800bdca <tcp_handle+0x20a>
 800bd98:	e8df f003 	tbb	[pc, r3]
 800bd9c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 800bda0:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800bda4:	6923      	ldr	r3, [r4, #16]
 800bda6:	1b9b      	subs	r3, r3, r6
 800bda8:	2b00      	cmp	r3, #0
 800bdaa:	dc0a      	bgt.n	800bdc2 <tcp_handle+0x202>
 800bdac:	6963      	ldr	r3, [r4, #20]
 800bdae:	1af3      	subs	r3, r6, r3
 800bdb0:	2b00      	cmp	r3, #0
 800bdb2:	dc06      	bgt.n	800bdc2 <tcp_handle+0x202>
 800bdb4:	2304      	movs	r3, #4
 800bdb6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800bdba:	f8c4 a018 	str.w	sl, [r4, #24]
 800bdbe:	6126      	str	r6, [r4, #16]
 800bdc0:	e796      	b.n	800bcf0 <tcp_handle+0x130>
 800bdc2:	4628      	mov	r0, r5
 800bdc4:	492d      	ldr	r1, [pc, #180]	; (800be7c <tcp_handle+0x2bc>)
 800bdc6:	f7ff fea5 	bl	800bb14 <_send_reset>
 800bdca:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bdce:	3b04      	subs	r3, #4
 800bdd0:	2b02      	cmp	r3, #2
 800bdd2:	d830      	bhi.n	800be36 <tcp_handle+0x276>
 800bdd4:	f1b8 0f00 	cmp.w	r8, #0
 800bdd8:	d02d      	beq.n	800be36 <tcp_handle+0x276>
 800bdda:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bddc:	42bb      	cmp	r3, r7
 800bdde:	f040 8092 	bne.w	800bf06 <tcp_handle+0x346>
 800bde2:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800bde6:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800be84 <tcp_handle+0x2c4>
 800bdea:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800bdee:	f8ba 7000 	ldrh.w	r7, [sl]
 800bdf2:	4642      	mov	r2, r8
 800bdf4:	435f      	muls	r7, r3
 800bdf6:	1d38      	adds	r0, r7, #4
 800bdf8:	4449      	add	r1, r9
 800bdfa:	4450      	add	r0, sl
 800bdfc:	f7ff fdac 	bl	800b958 <memcpy.isra.0>
 800be00:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800be02:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800be04:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800be08:	8722      	strh	r2, [r4, #56]	; 0x38
 800be0a:	6962      	ldr	r2, [r4, #20]
 800be0c:	4443      	add	r3, r8
 800be0e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800be12:	6363      	str	r3, [r4, #52]	; 0x34
 800be14:	2310      	movs	r3, #16
 800be16:	4457      	add	r7, sl
 800be18:	4818      	ldr	r0, [pc, #96]	; (800be7c <tcp_handle+0x2bc>)
 800be1a:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800be1e:	a901      	add	r1, sp, #4
 800be20:	f88d 300c 	strb.w	r3, [sp, #12]
 800be24:	f7ff fdc8 	bl	800b9b8 <_tcp_send_package>
 800be28:	f8ba 3000 	ldrh.w	r3, [sl]
 800be2c:	3301      	adds	r3, #1
 800be2e:	f003 0301 	and.w	r3, r3, #1
 800be32:	f8aa 3000 	strh.w	r3, [sl]
 800be36:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800be3a:	2b02      	cmp	r3, #2
 800be3c:	f67f af29 	bls.w	800bc92 <tcp_handle+0xd2>
 800be40:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800be44:	07db      	lsls	r3, r3, #31
 800be46:	f57f af24 	bpl.w	800bc92 <tcp_handle+0xd2>
 800be4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800be4c:	6962      	ldr	r2, [r4, #20]
 800be4e:	3301      	adds	r3, #1
 800be50:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800be54:	6363      	str	r3, [r4, #52]	; 0x34
 800be56:	2310      	movs	r3, #16
 800be58:	4808      	ldr	r0, [pc, #32]	; (800be7c <tcp_handle+0x2bc>)
 800be5a:	a901      	add	r1, sp, #4
 800be5c:	f88d 300c 	strb.w	r3, [sp, #12]
 800be60:	f7ff fdaa 	bl	800b9b8 <_tcp_send_package>
 800be64:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800be68:	2b05      	cmp	r3, #5
 800be6a:	d054      	beq.n	800bf16 <tcp_handle+0x356>
 800be6c:	d84e      	bhi.n	800bf0c <tcp_handle+0x34c>
 800be6e:	3b03      	subs	r3, #3
 800be70:	2b01      	cmp	r3, #1
 800be72:	f63f af0e 	bhi.w	800bc92 <tcp_handle+0xd2>
 800be76:	2307      	movs	r3, #7
 800be78:	e73a      	b.n	800bcf0 <tcp_handle+0x130>
 800be7a:	bf00      	nop
 800be7c:	2000275c 	andcs	r2, r0, ip, asr r7
 800be80:	20002764 	andcs	r2, r0, r4, ror #14
 800be84:	20001bec 	andcs	r1, r0, ip, ror #23
 800be88:	6923      	ldr	r3, [r4, #16]
 800be8a:	1b99      	subs	r1, r3, r6
 800be8c:	d513      	bpl.n	800beb6 <tcp_handle+0x2f6>
 800be8e:	6962      	ldr	r2, [r4, #20]
 800be90:	1ab2      	subs	r2, r6, r2
 800be92:	2a00      	cmp	r2, #0
 800be94:	dc0f      	bgt.n	800beb6 <tcp_handle+0x2f6>
 800be96:	6126      	str	r6, [r4, #16]
 800be98:	6a23      	ldr	r3, [r4, #32]
 800be9a:	1bda      	subs	r2, r3, r7
 800be9c:	2a00      	cmp	r2, #0
 800be9e:	db05      	blt.n	800beac <tcp_handle+0x2ec>
 800bea0:	42bb      	cmp	r3, r7
 800bea2:	d192      	bne.n	800bdca <tcp_handle+0x20a>
 800bea4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bea6:	1b9b      	subs	r3, r3, r6
 800bea8:	2b00      	cmp	r3, #0
 800beaa:	dc8e      	bgt.n	800bdca <tcp_handle+0x20a>
 800beac:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800beb0:	f8c4 a018 	str.w	sl, [r4, #24]
 800beb4:	e789      	b.n	800bdca <tcp_handle+0x20a>
 800beb6:	1af3      	subs	r3, r6, r3
 800beb8:	2b00      	cmp	r3, #0
 800beba:	dc06      	bgt.n	800beca <tcp_handle+0x30a>
 800bebc:	2900      	cmp	r1, #0
 800bebe:	dc84      	bgt.n	800bdca <tcp_handle+0x20a>
 800bec0:	6963      	ldr	r3, [r4, #20]
 800bec2:	1af3      	subs	r3, r6, r3
 800bec4:	2b00      	cmp	r3, #0
 800bec6:	dc80      	bgt.n	800bdca <tcp_handle+0x20a>
 800bec8:	e7e6      	b.n	800be98 <tcp_handle+0x2d8>
 800beca:	6963      	ldr	r3, [r4, #20]
 800becc:	1b9a      	subs	r2, r3, r6
 800bece:	2a00      	cmp	r2, #0
 800bed0:	f6bf af7b 	bge.w	800bdca <tcp_handle+0x20a>
 800bed4:	e744      	b.n	800bd60 <tcp_handle+0x1a0>
 800bed6:	6963      	ldr	r3, [r4, #20]
 800bed8:	42b3      	cmp	r3, r6
 800beda:	f47f af76 	bne.w	800bdca <tcp_handle+0x20a>
 800bede:	8821      	ldrh	r1, [r4, #0]
 800bee0:	480f      	ldr	r0, [pc, #60]	; (800bf20 <tcp_handle+0x360>)
 800bee2:	f7ff fd1f 	bl	800b924 <_init_tcb>
 800bee6:	e770      	b.n	800bdca <tcp_handle+0x20a>
 800bee8:	6963      	ldr	r3, [r4, #20]
 800beea:	42b3      	cmp	r3, r6
 800beec:	f47f af6d 	bne.w	800bdca <tcp_handle+0x20a>
 800bef0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bef2:	480b      	ldr	r0, [pc, #44]	; (800bf20 <tcp_handle+0x360>)
 800bef4:	9302      	str	r3, [sp, #8]
 800bef6:	2310      	movs	r3, #16
 800bef8:	a901      	add	r1, sp, #4
 800befa:	9601      	str	r6, [sp, #4]
 800befc:	f88d 300c 	strb.w	r3, [sp, #12]
 800bf00:	f7ff fd5a 	bl	800b9b8 <_tcp_send_package>
 800bf04:	e761      	b.n	800bdca <tcp_handle+0x20a>
 800bf06:	6962      	ldr	r2, [r4, #20]
 800bf08:	9201      	str	r2, [sp, #4]
 800bf0a:	e72b      	b.n	800bd64 <tcp_handle+0x1a4>
 800bf0c:	2b06      	cmp	r3, #6
 800bf0e:	f47f aec0 	bne.w	800bc92 <tcp_handle+0xd2>
 800bf12:	230a      	movs	r3, #10
 800bf14:	e6ec      	b.n	800bcf0 <tcp_handle+0x130>
 800bf16:	6963      	ldr	r3, [r4, #20]
 800bf18:	42b3      	cmp	r3, r6
 800bf1a:	d0fa      	beq.n	800bf12 <tcp_handle+0x352>
 800bf1c:	2308      	movs	r3, #8
 800bf1e:	e6e7      	b.n	800bcf0 <tcp_handle+0x130>
 800bf20:	2000275c 	andcs	r2, r0, ip, asr r7

0800bf24 <tcp_begin>:
 800bf24:	b508      	push	{r3, lr}
 800bf26:	4b0a      	ldr	r3, [pc, #40]	; (800bf50 <tcp_begin+0x2c>)
 800bf28:	4601      	mov	r1, r0
 800bf2a:	881a      	ldrh	r2, [r3, #0]
 800bf2c:	4282      	cmp	r2, r0
 800bf2e:	d102      	bne.n	800bf36 <tcp_begin+0x12>
 800bf30:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800bf34:	b130      	cbz	r0, 800bf44 <tcp_begin+0x20>
 800bf36:	b12a      	cbz	r2, 800bf44 <tcp_begin+0x20>
 800bf38:	4806      	ldr	r0, [pc, #24]	; (800bf54 <tcp_begin+0x30>)
 800bf3a:	f002 fd5f 	bl	800e9fc <console_error>
 800bf3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bf42:	bd08      	pop	{r3, pc}
 800bf44:	4802      	ldr	r0, [pc, #8]	; (800bf50 <tcp_begin+0x2c>)
 800bf46:	8019      	strh	r1, [r3, #0]
 800bf48:	f7ff fcec 	bl	800b924 <_init_tcb>
 800bf4c:	2000      	movs	r0, #0
 800bf4e:	e7f8      	b.n	800bf42 <tcp_begin+0x1e>
 800bf50:	2000275c 	andcs	r2, r0, ip, asr r7
 800bf54:	08012149 	stmdaeq	r1, {r0, r3, r6, r8, sp}

0800bf58 <tcp_write>:
 800bf58:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800bf5c:	429a      	cmp	r2, r3
 800bf5e:	bf28      	it	cs
 800bf60:	461a      	movcs	r2, r3
 800bf62:	2344      	movs	r3, #68	; 0x44
 800bf64:	b530      	push	{r4, r5, lr}
 800bf66:	4c0d      	ldr	r4, [pc, #52]	; (800bf9c <tcp_write+0x44>)
 800bf68:	b085      	sub	sp, #20
 800bf6a:	fb03 4400 	mla	r4, r3, r0, r4
 800bf6e:	6963      	ldr	r3, [r4, #20]
 800bf70:	4615      	mov	r5, r2
 800bf72:	9301      	str	r3, [sp, #4]
 800bf74:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bf76:	62e1      	str	r1, [r4, #44]	; 0x2c
 800bf78:	9302      	str	r3, [sp, #8]
 800bf7a:	2318      	movs	r3, #24
 800bf7c:	8622      	strh	r2, [r4, #48]	; 0x30
 800bf7e:	4620      	mov	r0, r4
 800bf80:	a901      	add	r1, sp, #4
 800bf82:	f88d 300c 	strb.w	r3, [sp, #12]
 800bf86:	f7ff fd17 	bl	800b9b8 <_tcp_send_package>
 800bf8a:	2300      	movs	r3, #0
 800bf8c:	6962      	ldr	r2, [r4, #20]
 800bf8e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bf90:	442a      	add	r2, r5
 800bf92:	8623      	strh	r3, [r4, #48]	; 0x30
 800bf94:	6162      	str	r2, [r4, #20]
 800bf96:	b005      	add	sp, #20
 800bf98:	bd30      	pop	{r4, r5, pc}
 800bf9a:	bf00      	nop
 800bf9c:	2000275c 	andcs	r2, r0, ip, asr r7

0800bfa0 <tcp_read>:
 800bfa0:	2344      	movs	r3, #68	; 0x44
 800bfa2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfa4:	4c1c      	ldr	r4, [pc, #112]	; (800c018 <tcp_read+0x78>)
 800bfa6:	b085      	sub	sp, #20
 800bfa8:	fb03 4400 	mla	r4, r3, r0, r4
 800bfac:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bfb0:	2b07      	cmp	r3, #7
 800bfb2:	d112      	bne.n	800bfda <tcp_read+0x3a>
 800bfb4:	6963      	ldr	r3, [r4, #20]
 800bfb6:	4620      	mov	r0, r4
 800bfb8:	9301      	str	r3, [sp, #4]
 800bfba:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bfbc:	a901      	add	r1, sp, #4
 800bfbe:	9302      	str	r3, [sp, #8]
 800bfc0:	2311      	movs	r3, #17
 800bfc2:	f88d 300c 	strb.w	r3, [sp, #12]
 800bfc6:	f7ff fcf7 	bl	800b9b8 <_tcp_send_package>
 800bfca:	2309      	movs	r3, #9
 800bfcc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bfd0:	6963      	ldr	r3, [r4, #20]
 800bfd2:	3301      	adds	r3, #1
 800bfd4:	6163      	str	r3, [r4, #20]
 800bfd6:	2000      	movs	r0, #0
 800bfd8:	e01b      	b.n	800c012 <tcp_read+0x72>
 800bfda:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800bfde:	4358      	muls	r0, r3
 800bfe0:	4a0e      	ldr	r2, [pc, #56]	; (800c01c <tcp_read+0x7c>)
 800bfe2:	1817      	adds	r7, r2, r0
 800bfe4:	887b      	ldrh	r3, [r7, #2]
 800bfe6:	5a15      	ldrh	r5, [r2, r0]
 800bfe8:	429d      	cmp	r5, r3
 800bfea:	d0f4      	beq.n	800bfd6 <tcp_read+0x36>
 800bfec:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800bff0:	435d      	muls	r5, r3
 800bff2:	1d06      	adds	r6, r0, #4
 800bff4:	442e      	add	r6, r5
 800bff6:	4416      	add	r6, r2
 800bff8:	4428      	add	r0, r5
 800bffa:	600e      	str	r6, [r1, #0]
 800bffc:	4402      	add	r2, r0
 800bffe:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c002:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c004:	3301      	adds	r3, #1
 800c006:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c00a:	f003 0301 	and.w	r3, r3, #1
 800c00e:	8722      	strh	r2, [r4, #56]	; 0x38
 800c010:	807b      	strh	r3, [r7, #2]
 800c012:	b005      	add	sp, #20
 800c014:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c016:	bf00      	nop
 800c018:	2000275c 	andcs	r2, r0, ip, asr r7
 800c01c:	20001bec 	andcs	r1, r0, ip, ror #23

0800c020 <memcpy.isra.0>:
 800c020:	3801      	subs	r0, #1
 800c022:	440a      	add	r2, r1
 800c024:	4291      	cmp	r1, r2
 800c026:	d100      	bne.n	800c02a <memcpy.isra.0+0xa>
 800c028:	4770      	bx	lr
 800c02a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c02e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c032:	e7f7      	b.n	800c024 <memcpy.isra.0+0x4>

0800c034 <net_memcpy>:
 800c034:	ea41 0300 	orr.w	r3, r1, r0
 800c038:	079b      	lsls	r3, r3, #30
 800c03a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c03c:	d115      	bne.n	800c06a <net_memcpy+0x36>
 800c03e:	f022 0303 	bic.w	r3, r2, #3
 800c042:	1f04      	subs	r4, r0, #4
 800c044:	0895      	lsrs	r5, r2, #2
 800c046:	18ce      	adds	r6, r1, r3
 800c048:	42b1      	cmp	r1, r6
 800c04a:	d109      	bne.n	800c060 <net_memcpy+0x2c>
 800c04c:	f06f 0403 	mvn.w	r4, #3
 800c050:	fb04 2205 	mla	r2, r4, r5, r2
 800c054:	4403      	add	r3, r0
 800c056:	3b01      	subs	r3, #1
 800c058:	440a      	add	r2, r1
 800c05a:	4291      	cmp	r1, r2
 800c05c:	d107      	bne.n	800c06e <net_memcpy+0x3a>
 800c05e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c060:	f851 7b04 	ldr.w	r7, [r1], #4
 800c064:	f844 7f04 	str.w	r7, [r4, #4]!
 800c068:	e7ee      	b.n	800c048 <net_memcpy+0x14>
 800c06a:	4603      	mov	r3, r0
 800c06c:	e7f3      	b.n	800c056 <net_memcpy+0x22>
 800c06e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c072:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c076:	e7f0      	b.n	800c05a <net_memcpy+0x26>

0800c078 <udp_set_ip>:
 800c078:	2204      	movs	r2, #4
 800c07a:	b513      	push	{r0, r1, r4, lr}
 800c07c:	4604      	mov	r4, r0
 800c07e:	6803      	ldr	r3, [r0, #0]
 800c080:	eb0d 0102 	add.w	r1, sp, r2
 800c084:	4808      	ldr	r0, [pc, #32]	; (800c0a8 <udp_set_ip+0x30>)
 800c086:	9301      	str	r3, [sp, #4]
 800c088:	f7ff ffca 	bl	800c020 <memcpy.isra.0>
 800c08c:	6862      	ldr	r2, [r4, #4]
 800c08e:	4b07      	ldr	r3, [pc, #28]	; (800c0ac <udp_set_ip+0x34>)
 800c090:	43d1      	mvns	r1, r2
 800c092:	6019      	str	r1, [r3, #0]
 800c094:	6823      	ldr	r3, [r4, #0]
 800c096:	4013      	ands	r3, r2
 800c098:	4a05      	ldr	r2, [pc, #20]	; (800c0b0 <udp_set_ip+0x38>)
 800c09a:	6013      	str	r3, [r2, #0]
 800c09c:	68a2      	ldr	r2, [r4, #8]
 800c09e:	4b05      	ldr	r3, [pc, #20]	; (800c0b4 <udp_set_ip+0x3c>)
 800c0a0:	601a      	str	r2, [r3, #0]
 800c0a2:	b002      	add	sp, #8
 800c0a4:	bd10      	pop	{r4, pc}
 800c0a6:	bf00      	nop
 800c0a8:	20008a76 	andcs	r8, r0, r6, ror sl
 800c0ac:	20002d8c 	andcs	r2, r0, ip, lsl #27
 800c0b0:	20002d94 	mulcs	r0, r4, sp
 800c0b4:	20002d90 	mulcs	r0, r0, sp

0800c0b8 <udp_init>:
 800c0b8:	b570      	push	{r4, r5, r6, lr}
 800c0ba:	2200      	movs	r2, #0
 800c0bc:	2508      	movs	r5, #8
 800c0be:	460e      	mov	r6, r1
 800c0c0:	4b12      	ldr	r3, [pc, #72]	; (800c10c <udp_init+0x54>)
 800c0c2:	4913      	ldr	r1, [pc, #76]	; (800c110 <udp_init+0x58>)
 800c0c4:	3d01      	subs	r5, #1
 800c0c6:	801a      	strh	r2, [r3, #0]
 800c0c8:	805a      	strh	r2, [r3, #2]
 800c0ca:	f841 2b04 	str.w	r2, [r1], #4
 800c0ce:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800c0d2:	d1f7      	bne.n	800c0c4 <udp_init+0xc>
 800c0d4:	2206      	movs	r2, #6
 800c0d6:	4c0f      	ldr	r4, [pc, #60]	; (800c114 <udp_init+0x5c>)
 800c0d8:	4b0f      	ldr	r3, [pc, #60]	; (800c118 <udp_init+0x60>)
 800c0da:	4601      	mov	r1, r0
 800c0dc:	18a0      	adds	r0, r4, r2
 800c0de:	801d      	strh	r5, [r3, #0]
 800c0e0:	f7ff ff9e 	bl	800c020 <memcpy.isra.0>
 800c0e4:	2308      	movs	r3, #8
 800c0e6:	7323      	strb	r3, [r4, #12]
 800c0e8:	2345      	movs	r3, #69	; 0x45
 800c0ea:	73a3      	strb	r3, [r4, #14]
 800c0ec:	2340      	movs	r3, #64	; 0x40
 800c0ee:	7523      	strb	r3, [r4, #20]
 800c0f0:	75a3      	strb	r3, [r4, #22]
 800c0f2:	2311      	movs	r3, #17
 800c0f4:	4630      	mov	r0, r6
 800c0f6:	7365      	strb	r5, [r4, #13]
 800c0f8:	73e5      	strb	r5, [r4, #15]
 800c0fa:	7565      	strb	r5, [r4, #21]
 800c0fc:	75e3      	strb	r3, [r4, #23]
 800c0fe:	f7ff ffbb 	bl	800c078 <udp_set_ip>
 800c102:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 800c106:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800c10a:	bd70      	pop	{r4, r5, r6, pc}
 800c10c:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc
 800c110:	20002d9c 	mulcs	r0, ip, sp
 800c114:	20008a5c 	andcs	r8, r0, ip, asr sl
 800c118:	20002d98 	mulcs	r0, r8, sp

0800c11c <udp_shutdown>:
 800c11c:	4770      	bx	lr
	...

0800c120 <udp_handle>:
 800c120:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c124:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800c126:	4607      	mov	r7, r0
 800c128:	ba5b      	rev16	r3, r3
 800c12a:	b29b      	uxth	r3, r3
 800c12c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800c130:	2a01      	cmp	r2, #1
 800c132:	d904      	bls.n	800c13e <udp_handle+0x1e>
 800c134:	2b7b      	cmp	r3, #123	; 0x7b
 800c136:	d002      	beq.n	800c13e <udp_handle+0x1e>
 800c138:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c13c:	d308      	bcc.n	800c150 <udp_handle+0x30>
 800c13e:	2400      	movs	r4, #0
 800c140:	4a1f      	ldr	r2, [pc, #124]	; (800c1c0 <udp_handle+0xa0>)
 800c142:	f852 1b04 	ldr.w	r1, [r2], #4
 800c146:	4299      	cmp	r1, r3
 800c148:	d005      	beq.n	800c156 <udp_handle+0x36>
 800c14a:	3401      	adds	r4, #1
 800c14c:	2c08      	cmp	r4, #8
 800c14e:	d1f8      	bne.n	800c142 <udp_handle+0x22>
 800c150:	b002      	add	sp, #8
 800c152:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c156:	f640 3394 	movw	r3, #2964	; 0xb94
 800c15a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800c15c:	435c      	muls	r4, r3
 800c15e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c162:	ba76      	rev16	r6, r6
 800c164:	3e08      	subs	r6, #8
 800c166:	b2b6      	uxth	r6, r6
 800c168:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c16c:	bf28      	it	cs
 800c16e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800c172:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800c1c4 <udp_handle+0xa4>
 800c176:	1d20      	adds	r0, r4, #4
 800c178:	f838 5004 	ldrh.w	r5, [r8, r4]
 800c17c:	4632      	mov	r2, r6
 800c17e:	435d      	muls	r5, r3
 800c180:	4428      	add	r0, r5
 800c182:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800c186:	4440      	add	r0, r8
 800c188:	f7ff ff4a 	bl	800c020 <memcpy.isra.0>
 800c18c:	2204      	movs	r2, #4
 800c18e:	f107 011a 	add.w	r1, r7, #26
 800c192:	eb0d 0002 	add.w	r0, sp, r2
 800c196:	f7ff ff43 	bl	800c020 <memcpy.isra.0>
 800c19a:	9a01      	ldr	r2, [sp, #4]
 800c19c:	192b      	adds	r3, r5, r4
 800c19e:	4443      	add	r3, r8
 800c1a0:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800c1a4:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800c1a6:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800c1aa:	ba52      	rev16	r2, r2
 800c1ac:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800c1b0:	f838 3004 	ldrh.w	r3, [r8, r4]
 800c1b4:	3301      	adds	r3, #1
 800c1b6:	f003 0301 	and.w	r3, r3, #1
 800c1ba:	f828 3004 	strh.w	r3, [r8, r4]
 800c1be:	e7c7      	b.n	800c150 <udp_handle+0x30>
 800c1c0:	20002d9c 	mulcs	r0, ip, sp
 800c1c4:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800c1c8 <udp_bind>:
 800c1c8:	4a0a      	ldr	r2, [pc, #40]	; (800c1f4 <udp_bind+0x2c>)
 800c1ca:	4603      	mov	r3, r0
 800c1cc:	b510      	push	{r4, lr}
 800c1ce:	2000      	movs	r0, #0
 800c1d0:	4614      	mov	r4, r2
 800c1d2:	f852 1b04 	ldr.w	r1, [r2], #4
 800c1d6:	4299      	cmp	r1, r3
 800c1d8:	d008      	beq.n	800c1ec <udp_bind+0x24>
 800c1da:	b141      	cbz	r1, 800c1ee <udp_bind+0x26>
 800c1dc:	3001      	adds	r0, #1
 800c1de:	2808      	cmp	r0, #8
 800c1e0:	d1f7      	bne.n	800c1d2 <udp_bind+0xa>
 800c1e2:	4805      	ldr	r0, [pc, #20]	; (800c1f8 <udp_bind+0x30>)
 800c1e4:	f002 fc0a 	bl	800e9fc <console_error>
 800c1e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c1ec:	bd10      	pop	{r4, pc}
 800c1ee:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c1f2:	e7fb      	b.n	800c1ec <udp_bind+0x24>
 800c1f4:	20002d9c 	mulcs	r0, ip, sp
 800c1f8:	08012169 	stmdaeq	r1, {r0, r3, r5, r6, r8, sp}

0800c1fc <udp_unbind>:
 800c1fc:	4a0c      	ldr	r2, [pc, #48]	; (800c230 <udp_unbind+0x34>)
 800c1fe:	2300      	movs	r3, #0
 800c200:	4611      	mov	r1, r2
 800c202:	b510      	push	{r4, lr}
 800c204:	f852 4b04 	ldr.w	r4, [r2], #4
 800c208:	4284      	cmp	r4, r0
 800c20a:	d108      	bne.n	800c21e <udp_unbind+0x22>
 800c20c:	2000      	movs	r0, #0
 800c20e:	f640 3294 	movw	r2, #2964	; 0xb94
 800c212:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c216:	4353      	muls	r3, r2
 800c218:	4a06      	ldr	r2, [pc, #24]	; (800c234 <udp_unbind+0x38>)
 800c21a:	5098      	str	r0, [r3, r2]
 800c21c:	bd10      	pop	{r4, pc}
 800c21e:	3301      	adds	r3, #1
 800c220:	2b08      	cmp	r3, #8
 800c222:	d1ef      	bne.n	800c204 <udp_unbind+0x8>
 800c224:	4804      	ldr	r0, [pc, #16]	; (800c238 <udp_unbind+0x3c>)
 800c226:	f002 fbe9 	bl	800e9fc <console_error>
 800c22a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c22e:	e7f5      	b.n	800c21c <udp_unbind+0x20>
 800c230:	20002d9c 	mulcs	r0, ip, sp
 800c234:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc
 800c238:	0801216e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sp}

0800c23c <udp_recv>:
 800c23c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c240:	4604      	mov	r4, r0
 800c242:	4698      	mov	r8, r3
 800c244:	f640 3394 	movw	r3, #2964	; 0xb94
 800c248:	435c      	muls	r4, r3
 800c24a:	4608      	mov	r0, r1
 800c24c:	4915      	ldr	r1, [pc, #84]	; (800c2a4 <udp_recv+0x68>)
 800c24e:	190f      	adds	r7, r1, r4
 800c250:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c254:	5b0b      	ldrh	r3, [r1, r4]
 800c256:	4563      	cmp	r3, ip
 800c258:	d021      	beq.n	800c29e <udp_recv+0x62>
 800c25a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c25e:	fb03 fc0c 	mul.w	ip, r3, ip
 800c262:	eb0c 0604 	add.w	r6, ip, r4
 800c266:	440e      	add	r6, r1
 800c268:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c26c:	3404      	adds	r4, #4
 800c26e:	4295      	cmp	r5, r2
 800c270:	bf28      	it	cs
 800c272:	4615      	movcs	r5, r2
 800c274:	4464      	add	r4, ip
 800c276:	462a      	mov	r2, r5
 800c278:	4421      	add	r1, r4
 800c27a:	f7ff fedb 	bl	800c034 <net_memcpy>
 800c27e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c282:	f8c8 3000 	str.w	r3, [r8]
 800c286:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c28a:	9b06      	ldr	r3, [sp, #24]
 800c28c:	801a      	strh	r2, [r3, #0]
 800c28e:	887b      	ldrh	r3, [r7, #2]
 800c290:	3301      	adds	r3, #1
 800c292:	f003 0301 	and.w	r3, r3, #1
 800c296:	807b      	strh	r3, [r7, #2]
 800c298:	4628      	mov	r0, r5
 800c29a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c29e:	2500      	movs	r5, #0
 800c2a0:	e7fa      	b.n	800c298 <udp_recv+0x5c>
 800c2a2:	bf00      	nop
 800c2a4:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800c2a8 <udp_recv2>:
 800c2a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2aa:	f640 3594 	movw	r5, #2964	; 0xb94
 800c2ae:	4368      	muls	r0, r5
 800c2b0:	4c0f      	ldr	r4, [pc, #60]	; (800c2f0 <udp_recv2+0x48>)
 800c2b2:	1827      	adds	r7, r4, r0
 800c2b4:	887d      	ldrh	r5, [r7, #2]
 800c2b6:	5a26      	ldrh	r6, [r4, r0]
 800c2b8:	42ae      	cmp	r6, r5
 800c2ba:	d017      	beq.n	800c2ec <udp_recv2+0x44>
 800c2bc:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c2c0:	fb0c f505 	mul.w	r5, ip, r5
 800c2c4:	1d06      	adds	r6, r0, #4
 800c2c6:	442e      	add	r6, r5
 800c2c8:	4405      	add	r5, r0
 800c2ca:	4426      	add	r6, r4
 800c2cc:	442c      	add	r4, r5
 800c2ce:	600e      	str	r6, [r1, #0]
 800c2d0:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c2d4:	6011      	str	r1, [r2, #0]
 800c2d6:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c2da:	801a      	strh	r2, [r3, #0]
 800c2dc:	887b      	ldrh	r3, [r7, #2]
 800c2de:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c2e2:	3301      	adds	r3, #1
 800c2e4:	f003 0301 	and.w	r3, r3, #1
 800c2e8:	807b      	strh	r3, [r7, #2]
 800c2ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c2ec:	2000      	movs	r0, #0
 800c2ee:	e7fc      	b.n	800c2ea <udp_recv2+0x42>
 800c2f0:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800c2f4 <udp_send>:
 800c2f4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c2f8:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800c430 <udp_send+0x13c>
 800c2fc:	461c      	mov	r4, r3
 800c2fe:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c302:	4607      	mov	r7, r0
 800c304:	4688      	mov	r8, r1
 800c306:	4616      	mov	r6, r2
 800c308:	2b00      	cmp	r3, #0
 800c30a:	f000 808e 	beq.w	800c42a <udp_send+0x136>
 800c30e:	1c63      	adds	r3, r4, #1
 800c310:	d144      	bne.n	800c39c <udp_send+0xa8>
 800c312:	4848      	ldr	r0, [pc, #288]	; (800c434 <udp_send+0x140>)
 800c314:	2107      	movs	r1, #7
 800c316:	4602      	mov	r2, r0
 800c318:	23ff      	movs	r3, #255	; 0xff
 800c31a:	e001      	b.n	800c320 <udp_send+0x2c>
 800c31c:	f800 3b01 	strb.w	r3, [r0], #1
 800c320:	3901      	subs	r1, #1
 800c322:	d1fb      	bne.n	800c31c <udp_send+0x28>
 800c324:	7793      	strb	r3, [r2, #30]
 800c326:	77d3      	strb	r3, [r2, #31]
 800c328:	f882 3020 	strb.w	r3, [r2, #32]
 800c32c:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 800c330:	2500      	movs	r5, #0
 800c332:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c438 <udp_send+0x144>
 800c336:	4c3f      	ldr	r4, [pc, #252]	; (800c434 <udp_send+0x140>)
 800c338:	f8ba 3000 	ldrh.w	r3, [sl]
 800c33c:	2114      	movs	r1, #20
 800c33e:	8263      	strh	r3, [r4, #18]
 800c340:	f106 031c 	add.w	r3, r6, #28
 800c344:	ba5b      	rev16	r3, r3
 800c346:	f104 000e 	add.w	r0, r4, #14
 800c34a:	8223      	strh	r3, [r4, #16]
 800c34c:	7625      	strb	r5, [r4, #24]
 800c34e:	7665      	strb	r5, [r4, #25]
 800c350:	f001 fdc2 	bl	800ded8 <net_chksum>
 800c354:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c358:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c35c:	ba5b      	rev16	r3, r3
 800c35e:	8463      	strh	r3, [r4, #34]	; 0x22
 800c360:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c364:	4632      	mov	r2, r6
 800c366:	ba5b      	rev16	r3, r3
 800c368:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c36a:	f106 0308 	add.w	r3, r6, #8
 800c36e:	ba5b      	rev16	r3, r3
 800c370:	bf28      	it	cs
 800c372:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c376:	4641      	mov	r1, r8
 800c378:	8320      	strh	r0, [r4, #24]
 800c37a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c37e:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c380:	f7ff fe58 	bl	800c034 <net_memcpy>
 800c384:	4620      	mov	r0, r4
 800c386:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c38a:	f003 fcb7 	bl	800fcfc <emac_eth_send>
 800c38e:	f8ba 3000 	ldrh.w	r3, [sl]
 800c392:	4628      	mov	r0, r5
 800c394:	3301      	adds	r3, #1
 800c396:	f8aa 3000 	strh.w	r3, [sl]
 800c39a:	e037      	b.n	800c40c <udp_send+0x118>
 800c39c:	4b27      	ldr	r3, [pc, #156]	; (800c43c <udp_send+0x148>)
 800c39e:	681b      	ldr	r3, [r3, #0]
 800c3a0:	43a3      	bics	r3, r4
 800c3a2:	d10f      	bne.n	800c3c4 <udp_send+0xd0>
 800c3a4:	2307      	movs	r3, #7
 800c3a6:	21ff      	movs	r1, #255	; 0xff
 800c3a8:	4a22      	ldr	r2, [pc, #136]	; (800c434 <udp_send+0x140>)
 800c3aa:	e001      	b.n	800c3b0 <udp_send+0xbc>
 800c3ac:	f802 1b01 	strb.w	r1, [r2], #1
 800c3b0:	3b01      	subs	r3, #1
 800c3b2:	d1fb      	bne.n	800c3ac <udp_send+0xb8>
 800c3b4:	2204      	movs	r2, #4
 800c3b6:	4822      	ldr	r0, [pc, #136]	; (800c440 <udp_send+0x14c>)
 800c3b8:	eb0d 0102 	add.w	r1, sp, r2
 800c3bc:	9401      	str	r4, [sp, #4]
 800c3be:	f7ff fe2f 	bl	800c020 <memcpy.isra.0>
 800c3c2:	e7b5      	b.n	800c330 <udp_send+0x3c>
 800c3c4:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c3c8:	2be0      	cmp	r3, #224	; 0xe0
 800c3ca:	d10e      	bne.n	800c3ea <udp_send+0xf6>
 800c3cc:	491d      	ldr	r1, [pc, #116]	; (800c444 <udp_send+0x150>)
 800c3ce:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c3d2:	70cb      	strb	r3, [r1, #3]
 800c3d4:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c3d8:	710b      	strb	r3, [r1, #4]
 800c3da:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c3de:	2206      	movs	r2, #6
 800c3e0:	4814      	ldr	r0, [pc, #80]	; (800c434 <udp_send+0x140>)
 800c3e2:	714b      	strb	r3, [r1, #5]
 800c3e4:	f7ff fe1c 	bl	800c020 <memcpy.isra.0>
 800c3e8:	e7e4      	b.n	800c3b4 <udp_send+0xc0>
 800c3ea:	4b17      	ldr	r3, [pc, #92]	; (800c448 <udp_send+0x154>)
 800c3ec:	681b      	ldr	r3, [r3, #0]
 800c3ee:	43a3      	bics	r3, r4
 800c3f0:	d00f      	beq.n	800c412 <udp_send+0x11e>
 800c3f2:	4d16      	ldr	r5, [pc, #88]	; (800c44c <udp_send+0x158>)
 800c3f4:	490f      	ldr	r1, [pc, #60]	; (800c434 <udp_send+0x140>)
 800c3f6:	6828      	ldr	r0, [r5, #0]
 800c3f8:	f001 f938 	bl	800d66c <arp_cache_lookup>
 800c3fc:	682b      	ldr	r3, [r5, #0]
 800c3fe:	4298      	cmp	r0, r3
 800c400:	d0d8      	beq.n	800c3b4 <udp_send+0xc0>
 800c402:	4813      	ldr	r0, [pc, #76]	; (800c450 <udp_send+0x15c>)
 800c404:	f002 fafa 	bl	800e9fc <console_error>
 800c408:	f06f 0002 	mvn.w	r0, #2
 800c40c:	b002      	add	sp, #8
 800c40e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c412:	4620      	mov	r0, r4
 800c414:	4907      	ldr	r1, [pc, #28]	; (800c434 <udp_send+0x140>)
 800c416:	f001 f929 	bl	800d66c <arp_cache_lookup>
 800c41a:	42a0      	cmp	r0, r4
 800c41c:	d0ca      	beq.n	800c3b4 <udp_send+0xc0>
 800c41e:	480d      	ldr	r0, [pc, #52]	; (800c454 <udp_send+0x160>)
 800c420:	f002 faec 	bl	800e9fc <console_error>
 800c424:	f06f 0001 	mvn.w	r0, #1
 800c428:	e7f0      	b.n	800c40c <udp_send+0x118>
 800c42a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c42e:	e7ed      	b.n	800c40c <udp_send+0x118>
 800c430:	20002d9c 	mulcs	r0, ip, sp
 800c434:	20008a5c 	andcs	r8, r0, ip, asr sl
 800c438:	20002d98 	mulcs	r0, r8, sp
 800c43c:	20002d8c 	andcs	r2, r0, ip, lsl #27
 800c440:	20008a7a 	andcs	r8, r0, sl, ror sl
 800c444:	20000014 	andcs	r0, r0, r4, lsl r0
 800c448:	20002d94 	mulcs	r0, r4, sp
 800c44c:	20002d90 	mulcs	r0, r0, sp
 800c450:	08012176 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sp}
 800c454:	0801219c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sp}

0800c458 <strlen>:
 800c458:	4603      	mov	r3, r0
 800c45a:	461a      	mov	r2, r3
 800c45c:	7811      	ldrb	r1, [r2, #0]
 800c45e:	3301      	adds	r3, #1
 800c460:	2900      	cmp	r1, #0
 800c462:	d1fa      	bne.n	800c45a <strlen+0x2>
 800c464:	1a10      	subs	r0, r2, r0
 800c466:	4770      	bx	lr

0800c468 <strcmp>:
 800c468:	1e43      	subs	r3, r0, #1
 800c46a:	3901      	subs	r1, #1
 800c46c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c470:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c474:	4290      	cmp	r0, r2
 800c476:	d102      	bne.n	800c47e <strcmp+0x16>
 800c478:	2800      	cmp	r0, #0
 800c47a:	d1f7      	bne.n	800c46c <strcmp+0x4>
 800c47c:	4770      	bx	lr
 800c47e:	1a80      	subs	r0, r0, r2
 800c480:	4770      	bx	lr

0800c482 <strcpy.isra.0>:
 800c482:	3801      	subs	r0, #1
 800c484:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c488:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c48c:	2b00      	cmp	r3, #0
 800c48e:	d1f9      	bne.n	800c484 <strcpy.isra.0+0x2>
 800c490:	4770      	bx	lr

0800c492 <strcat.isra.0>:
 800c492:	b538      	push	{r3, r4, r5, lr}
 800c494:	4604      	mov	r4, r0
 800c496:	460d      	mov	r5, r1
 800c498:	f7ff ffde 	bl	800c458 <strlen>
 800c49c:	4629      	mov	r1, r5
 800c49e:	4420      	add	r0, r4
 800c4a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c4a4:	f7ff bfed 	b.w	800c482 <strcpy.isra.0>

0800c4a8 <MDNS::MDNS()>:
 800c4a8:	b513      	push	{r0, r1, r4, lr}
 800c4aa:	4604      	mov	r4, r0
 800c4ac:	a901      	add	r1, sp, #4
 800c4ae:	4804      	ldr	r0, [pc, #16]	; (800c4c0 <MDNS::MDNS()+0x18>)
 800c4b0:	f002 fbee 	bl	800ec90 <inet_aton>
 800c4b4:	4620      	mov	r0, r4
 800c4b6:	4b03      	ldr	r3, [pc, #12]	; (800c4c4 <MDNS::MDNS()+0x1c>)
 800c4b8:	9a01      	ldr	r2, [sp, #4]
 800c4ba:	601a      	str	r2, [r3, #0]
 800c4bc:	b002      	add	sp, #8
 800c4be:	bd10      	pop	{r4, pc}
 800c4c0:	080121bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sp}
 800c4c4:	20009050 	andcs	r9, r0, r0, asr r0

0800c4c8 <MDNS::SetName(char const*)>:
 800c4c8:	b538      	push	{r3, r4, r5, lr}
 800c4ca:	4d0b      	ldr	r5, [pc, #44]	; (800c4f8 <MDNS::SetName(char const*)+0x30>)
 800c4cc:	460c      	mov	r4, r1
 800c4ce:	6828      	ldr	r0, [r5, #0]
 800c4d0:	b108      	cbz	r0, 800c4d6 <MDNS::SetName(char const*)+0xe>
 800c4d2:	f002 fbd7 	bl	800ec84 <operator delete[](void*)>
 800c4d6:	4620      	mov	r0, r4
 800c4d8:	f7ff ffbe 	bl	800c458 <strlen>
 800c4dc:	3007      	adds	r0, #7
 800c4de:	f002 fbd5 	bl	800ec8c <operator new[](unsigned int)>
 800c4e2:	4621      	mov	r1, r4
 800c4e4:	6028      	str	r0, [r5, #0]
 800c4e6:	f7ff ffcc 	bl	800c482 <strcpy.isra.0>
 800c4ea:	6828      	ldr	r0, [r5, #0]
 800c4ec:	4903      	ldr	r1, [pc, #12]	; (800c4fc <MDNS::SetName(char const*)+0x34>)
 800c4ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c4f2:	f7ff bfce 	b.w	800c492 <strcat.isra.0>
 800c4f6:	bf00      	nop
 800c4f8:	20009480 	andcs	r9, r0, r0, lsl #9
 800c4fc:	080121cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sp}

0800c500 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800c500:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c504:	f04f 0e00 	mov.w	lr, #0
 800c508:	262e      	movs	r6, #46	; 0x2e
 800c50a:	4675      	mov	r5, lr
 800c50c:	4694      	mov	ip, r2
 800c50e:	4f1d      	ldr	r7, [pc, #116]	; (800c584 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800c510:	4a1d      	ldr	r2, [pc, #116]	; (800c588 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800c512:	780b      	ldrb	r3, [r1, #0]
 800c514:	1c68      	adds	r0, r5, #1
 800c516:	b383      	cbz	r3, 800c57a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800c518:	2b3f      	cmp	r3, #63	; 0x3f
 800c51a:	d91d      	bls.n	800c558 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800c51c:	f1be 0f00 	cmp.w	lr, #0
 800c520:	bf08      	it	eq
 800c522:	4605      	moveq	r5, r0
 800c524:	2000      	movs	r0, #0
 800c526:	7849      	ldrb	r1, [r1, #1]
 800c528:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800c52c:	430b      	orrs	r3, r1
 800c52e:	6811      	ldr	r1, [r2, #0]
 800c530:	5ccc      	ldrb	r4, [r1, r3]
 800c532:	3301      	adds	r3, #1
 800c534:	440b      	add	r3, r1
 800c536:	42a0      	cmp	r0, r4
 800c538:	5c19      	ldrb	r1, [r3, r0]
 800c53a:	d309      	bcc.n	800c550 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800c53c:	f04f 0e01 	mov.w	lr, #1
 800c540:	1919      	adds	r1, r3, r4
 800c542:	4464      	add	r4, ip
 800c544:	780b      	ldrb	r3, [r1, #0]
 800c546:	b10b      	cbz	r3, 800c54c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800c548:	f804 6b01 	strb.w	r6, [r4], #1
 800c54c:	46a4      	mov	ip, r4
 800c54e:	e7e0      	b.n	800c512 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800c550:	f80c 1000 	strb.w	r1, [ip, r0]
 800c554:	3001      	adds	r0, #1
 800c556:	e7ee      	b.n	800c536 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800c558:	4688      	mov	r8, r1
 800c55a:	eb0c 0403 	add.w	r4, ip, r3
 800c55e:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800c562:	f80c 9b01 	strb.w	r9, [ip], #1
 800c566:	4564      	cmp	r4, ip
 800c568:	d1f9      	bne.n	800c55e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800c56a:	f103 0c01 	add.w	ip, r3, #1
 800c56e:	4461      	add	r1, ip
 800c570:	f1be 0f00 	cmp.w	lr, #0
 800c574:	d1e6      	bne.n	800c544 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800c576:	18c5      	adds	r5, r0, r3
 800c578:	e7e4      	b.n	800c544 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800c57a:	f88c 3000 	strb.w	r3, [ip]
 800c57e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c582:	bf00      	nop
 800c584:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800c588:	20009484 	andcs	r9, r0, r4, lsl #9

0800c58c <MDNS::FindFirstDotFromRight(char const*) const>:
 800c58c:	b510      	push	{r4, lr}
 800c58e:	4608      	mov	r0, r1
 800c590:	460c      	mov	r4, r1
 800c592:	f7ff ff61 	bl	800c458 <strlen>
 800c596:	4420      	add	r0, r4
 800c598:	42a0      	cmp	r0, r4
 800c59a:	d903      	bls.n	800c5a4 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800c59c:	f810 3901 	ldrb.w	r3, [r0], #-1
 800c5a0:	2b2e      	cmp	r3, #46	; 0x2e
 800c5a2:	d1f9      	bne.n	800c598 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800c5a4:	3001      	adds	r0, #1
 800c5a6:	bd10      	pop	{r4, pc}

0800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800c5a8:	4610      	mov	r0, r2
 800c5aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c5ac:	460f      	mov	r7, r1
 800c5ae:	1c44      	adds	r4, r0, #1
 800c5b0:	463d      	mov	r5, r7
 800c5b2:	f817 6b01 	ldrb.w	r6, [r7], #1
 800c5b6:	b126      	cbz	r6, 800c5c2 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800c5b8:	2e2e      	cmp	r6, #46	; 0x2e
 800c5ba:	d002      	beq.n	800c5c2 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800c5bc:	f804 6b01 	strb.w	r6, [r4], #1
 800c5c0:	e7f6      	b.n	800c5b0 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800c5c2:	1a69      	subs	r1, r5, r1
 800c5c4:	7001      	strb	r1, [r0, #0]
 800c5c6:	7829      	ldrb	r1, [r5, #0]
 800c5c8:	b921      	cbnz	r1, 800c5d4 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800c5ca:	b10b      	cbz	r3, 800c5d0 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800c5cc:	f804 1b01 	strb.w	r1, [r4], #1
 800c5d0:	1aa0      	subs	r0, r4, r2
 800c5d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5d4:	4620      	mov	r0, r4
 800c5d6:	1c69      	adds	r1, r5, #1
 800c5d8:	e7e8      	b.n	800c5ac <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800c5dc <MDNS::CreateAnswerLocalIpAddress()>:
 800c5dc:	2384      	movs	r3, #132	; 0x84
 800c5de:	b510      	push	{r4, lr}
 800c5e0:	4c0f      	ldr	r4, [pc, #60]	; (800c620 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800c5e2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800c5e6:	80e3      	strh	r3, [r4, #6]
 800c5e8:	2300      	movs	r3, #0
 800c5ea:	490e      	ldr	r1, [pc, #56]	; (800c624 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800c5ec:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800c5f0:	6809      	ldr	r1, [r1, #0]
 800c5f2:	f104 0210 	add.w	r2, r4, #16
 800c5f6:	2301      	movs	r3, #1
 800c5f8:	f7ff ffd6 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c5fc:	490a      	ldr	r1, [pc, #40]	; (800c628 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800c5fe:	1813      	adds	r3, r2, r0
 800c600:	5011      	str	r1, [r2, r0]
 800c602:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800c606:	605a      	str	r2, [r3, #4]
 800c608:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c60c:	811a      	strh	r2, [r3, #8]
 800c60e:	4a07      	ldr	r2, [pc, #28]	; (800c62c <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800c610:	6812      	ldr	r2, [r2, #0]
 800c612:	6912      	ldr	r2, [r2, #16]
 800c614:	f8c3 200a 	str.w	r2, [r3, #10]
 800c618:	1b1b      	subs	r3, r3, r4
 800c61a:	330a      	adds	r3, #10
 800c61c:	6023      	str	r3, [r4, #0]
 800c61e:	bd10      	pop	{r4, pc}
 800c620:	20009054 	andcs	r9, r0, r4, asr r0
 800c624:	20009480 	andcs	r9, r0, r0, lsl #9
 800c628:	01800100 	orreq	r0, r0, r0, lsl #2
 800c62c:	20009488 	andcs	r9, r0, r8, lsl #9

0800c630 <MDNS::Start()>:
 800c630:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c632:	4c1e      	ldr	r4, [pc, #120]	; (800c6ac <MDNS::Start()+0x7c>)
 800c634:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800c638:	4605      	mov	r5, r0
 800c63a:	6820      	ldr	r0, [r4, #0]
 800c63c:	f000 fb2a 	bl	800cc94 <Network::Begin(unsigned short)>
 800c640:	4e1b      	ldr	r6, [pc, #108]	; (800c6b0 <MDNS::Start()+0x80>)
 800c642:	4f1c      	ldr	r7, [pc, #112]	; (800c6b4 <MDNS::Start()+0x84>)
 800c644:	4601      	mov	r1, r0
 800c646:	6030      	str	r0, [r6, #0]
 800c648:	683a      	ldr	r2, [r7, #0]
 800c64a:	6820      	ldr	r0, [r4, #0]
 800c64c:	f000 fb33 	bl	800ccb6 <Network::JoinGroup(int, unsigned int)>
 800c650:	4b19      	ldr	r3, [pc, #100]	; (800c6b8 <MDNS::Start()+0x88>)
 800c652:	681b      	ldr	r3, [r3, #0]
 800c654:	b923      	cbnz	r3, 800c660 <MDNS::Start()+0x30>
 800c656:	6821      	ldr	r1, [r4, #0]
 800c658:	4628      	mov	r0, r5
 800c65a:	311c      	adds	r1, #28
 800c65c:	f7ff ff34 	bl	800c4c8 <MDNS::SetName(char const*)>
 800c660:	4628      	mov	r0, r5
 800c662:	f7ff ffbb 	bl	800c5dc <MDNS::CreateAnswerLocalIpAddress()>
 800c666:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c66a:	4914      	ldr	r1, [pc, #80]	; (800c6bc <MDNS::Start()+0x8c>)
 800c66c:	7830      	ldrb	r0, [r6, #0]
 800c66e:	f851 2b04 	ldr.w	r2, [r1], #4
 800c672:	9300      	str	r3, [sp, #0]
 800c674:	b292      	uxth	r2, r2
 800c676:	683b      	ldr	r3, [r7, #0]
 800c678:	f7ff fe3c 	bl	800c2f4 <udp_send>
 800c67c:	223f      	movs	r2, #63	; 0x3f
 800c67e:	6820      	ldr	r0, [r4, #0]
 800c680:	4c0f      	ldr	r4, [pc, #60]	; (800c6c0 <MDNS::Start()+0x90>)
 800c682:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800c686:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800c68a:	b929      	cbnz	r1, 800c698 <MDNS::Start()+0x68>
 800c68c:	441a      	add	r2, r3
 800c68e:	4293      	cmp	r3, r2
 800c690:	d006      	beq.n	800c6a0 <MDNS::Start()+0x70>
 800c692:	f803 1b01 	strb.w	r1, [r3], #1
 800c696:	e7fa      	b.n	800c68e <MDNS::Start()+0x5e>
 800c698:	3a01      	subs	r2, #1
 800c69a:	f803 1b01 	strb.w	r1, [r3], #1
 800c69e:	d1f2      	bne.n	800c686 <MDNS::Start()+0x56>
 800c6a0:	2300      	movs	r3, #0
 800c6a2:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800c6a6:	b003      	add	sp, #12
 800c6a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6aa:	bf00      	nop
 800c6ac:	20009488 	andcs	r9, r0, r8, lsl #9
 800c6b0:	2000001c 	andcs	r0, r0, ip, lsl r0
 800c6b4:	20009050 	andcs	r9, r0, r0, asr r0
 800c6b8:	20009480 	andcs	r9, r0, r0, lsl #9
 800c6bc:	20009054 	andcs	r9, r0, r4, asr r0
 800c6c0:	080121cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sp}

0800c6c4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800c6c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c6c8:	4c1b      	ldr	r4, [pc, #108]	; (800c738 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800c6ca:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800c6ce:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800c6d2:	2300      	movs	r3, #0
 800c6d4:	f854 100c 	ldr.w	r1, [r4, ip]
 800c6d8:	4607      	mov	r7, r0
 800c6da:	f7ff ff65 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c6de:	2301      	movs	r3, #1
 800c6e0:	7bac      	ldrb	r4, [r5, #14]
 800c6e2:	4616      	mov	r6, r2
 800c6e4:	4915      	ldr	r1, [pc, #84]	; (800c73c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800c6e6:	4402      	add	r2, r0
 800c6e8:	4815      	ldr	r0, [pc, #84]	; (800c740 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800c6ea:	429c      	cmp	r4, r3
 800c6ec:	bf18      	it	ne
 800c6ee:	4601      	movne	r1, r0
 800c6f0:	4638      	mov	r0, r7
 800c6f2:	f7ff ff59 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c6f6:	4b13      	ldr	r3, [pc, #76]	; (800c744 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800c6f8:	1814      	adds	r4, r2, r0
 800c6fa:	5013      	str	r3, [r2, r0]
 800c6fc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c700:	6063      	str	r3, [r4, #4]
 800c702:	4b11      	ldr	r3, [pc, #68]	; (800c748 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800c704:	f8d3 8000 	ldr.w	r8, [r3]
 800c708:	4640      	mov	r0, r8
 800c70a:	f7ff fea5 	bl	800c458 <strlen>
 800c70e:	f100 0308 	add.w	r3, r0, #8
 800c712:	ba5b      	rev16	r3, r3
 800c714:	8123      	strh	r3, [r4, #8]
 800c716:	2300      	movs	r3, #0
 800c718:	f8c4 300a 	str.w	r3, [r4, #10]
 800c71c:	89ab      	ldrh	r3, [r5, #12]
 800c71e:	f104 0210 	add.w	r2, r4, #16
 800c722:	ba5b      	rev16	r3, r3
 800c724:	81e3      	strh	r3, [r4, #14]
 800c726:	4641      	mov	r1, r8
 800c728:	2301      	movs	r3, #1
 800c72a:	4638      	mov	r0, r7
 800c72c:	f7ff ff3c 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c730:	4410      	add	r0, r2
 800c732:	1b80      	subs	r0, r0, r6
 800c734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c738:	20009258 	andcs	r9, r0, r8, asr r2
 800c73c:	080121c8 	stmdaeq	r1, {r3, r6, r7, r8, sp}
 800c740:	080121e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sp}
 800c744:	01802100 	orreq	r2, r0, r0, lsl #2
 800c748:	20009480 	andcs	r9, r0, r0, lsl #9

0800c74c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800c74c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c750:	4e19      	ldr	r6, [pc, #100]	; (800c7b8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800c752:	010f      	lsls	r7, r1, #4
 800c754:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800c758:	2300      	movs	r3, #0
 800c75a:	59f1      	ldr	r1, [r6, r7]
 800c75c:	4604      	mov	r4, r0
 800c75e:	f7ff ff23 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c762:	2301      	movs	r3, #1
 800c764:	7bae      	ldrb	r6, [r5, #14]
 800c766:	4690      	mov	r8, r2
 800c768:	4914      	ldr	r1, [pc, #80]	; (800c7bc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800c76a:	4402      	add	r2, r0
 800c76c:	4814      	ldr	r0, [pc, #80]	; (800c7c0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800c76e:	429e      	cmp	r6, r3
 800c770:	bf18      	it	ne
 800c772:	4601      	movne	r1, r0
 800c774:	4620      	mov	r0, r4
 800c776:	f7ff ff17 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c77a:	4b12      	ldr	r3, [pc, #72]	; (800c7c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800c77c:	1816      	adds	r6, r2, r0
 800c77e:	5013      	str	r3, [r2, r0]
 800c780:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c784:	68a8      	ldr	r0, [r5, #8]
 800c786:	6073      	str	r3, [r6, #4]
 800c788:	f106 040b 	add.w	r4, r6, #11
 800c78c:	b938      	cbnz	r0, 800c79e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800c78e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c792:	72b0      	strb	r0, [r6, #10]
 800c794:	8133      	strh	r3, [r6, #8]
 800c796:	eba4 0008 	sub.w	r0, r4, r8
 800c79a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c79e:	f7ff fe5b 	bl	800c458 <strlen>
 800c7a2:	4607      	mov	r7, r0
 800c7a4:	1c43      	adds	r3, r0, #1
 800c7a6:	72b0      	strb	r0, [r6, #10]
 800c7a8:	ba5b      	rev16	r3, r3
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	68a9      	ldr	r1, [r5, #8]
 800c7ae:	8133      	strh	r3, [r6, #8]
 800c7b0:	f7ff fe67 	bl	800c482 <strcpy.isra.0>
 800c7b4:	443c      	add	r4, r7
 800c7b6:	e7ee      	b.n	800c796 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800c7b8:	20009258 	andcs	r9, r0, r8, asr r2
 800c7bc:	080121c8 	stmdaeq	r1, {r3, r6, r7, r8, sp}
 800c7c0:	080121e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sp}
 800c7c4:	01801000 	orreq	r1, r0, r0

0800c7c8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800c7c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c7cc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c830 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800c7d0:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800c7d4:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800c7d8:	6869      	ldr	r1, [r5, #4]
 800c7da:	2301      	movs	r3, #1
 800c7dc:	4607      	mov	r7, r0
 800c7de:	f7ff fee3 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c7e2:	4b14      	ldr	r3, [pc, #80]	; (800c834 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800c7e4:	f858 8009 	ldr.w	r8, [r8, r9]
 800c7e8:	5013      	str	r3, [r2, r0]
 800c7ea:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c7ee:	1816      	adds	r6, r2, r0
 800c7f0:	6073      	str	r3, [r6, #4]
 800c7f2:	4640      	mov	r0, r8
 800c7f4:	4614      	mov	r4, r2
 800c7f6:	f7ff fe2f 	bl	800c458 <strlen>
 800c7fa:	f100 030d 	add.w	r3, r0, #13
 800c7fe:	ba5b      	rev16	r3, r3
 800c800:	4641      	mov	r1, r8
 800c802:	8133      	strh	r3, [r6, #8]
 800c804:	f106 020a 	add.w	r2, r6, #10
 800c808:	2300      	movs	r3, #0
 800c80a:	4638      	mov	r0, r7
 800c80c:	f7ff fecc 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c810:	2301      	movs	r3, #1
 800c812:	4402      	add	r2, r0
 800c814:	7bad      	ldrb	r5, [r5, #14]
 800c816:	4808      	ldr	r0, [pc, #32]	; (800c838 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800c818:	4908      	ldr	r1, [pc, #32]	; (800c83c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800c81a:	429d      	cmp	r5, r3
 800c81c:	bf18      	it	ne
 800c81e:	4601      	movne	r1, r0
 800c820:	4638      	mov	r0, r7
 800c822:	f7ff fec1 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c826:	4410      	add	r0, r2
 800c828:	1b00      	subs	r0, r0, r4
 800c82a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c82e:	bf00      	nop
 800c830:	20009258 	andcs	r9, r0, r8, asr r2
 800c834:	01000c00 	tsteq	r0, r0, lsl #24
 800c838:	080121e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sp}
 800c83c:	080121c8 	stmdaeq	r1, {r3, r6, r7, r8, sp}

0800c840 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800c840:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c842:	460f      	mov	r7, r1
 800c844:	2301      	movs	r3, #1
 800c846:	490f      	ldr	r1, [pc, #60]	; (800c884 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800c848:	4606      	mov	r6, r0
 800c84a:	f7ff fead 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c84e:	4b0e      	ldr	r3, [pc, #56]	; (800c888 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800c850:	490e      	ldr	r1, [pc, #56]	; (800c88c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800c852:	5013      	str	r3, [r2, r0]
 800c854:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c858:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800c85c:	684f      	ldr	r7, [r1, #4]
 800c85e:	1815      	adds	r5, r2, r0
 800c860:	606b      	str	r3, [r5, #4]
 800c862:	4638      	mov	r0, r7
 800c864:	4614      	mov	r4, r2
 800c866:	f7ff fdf7 	bl	800c458 <strlen>
 800c86a:	1c83      	adds	r3, r0, #2
 800c86c:	ba5b      	rev16	r3, r3
 800c86e:	812b      	strh	r3, [r5, #8]
 800c870:	f105 020a 	add.w	r2, r5, #10
 800c874:	2301      	movs	r3, #1
 800c876:	4639      	mov	r1, r7
 800c878:	4630      	mov	r0, r6
 800c87a:	f7ff fe95 	bl	800c5a8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c87e:	4410      	add	r0, r2
 800c880:	1b00      	subs	r0, r0, r4
 800c882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c884:	080121d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sp}
 800c888:	01000c00 	tsteq	r0, r0, lsl #24
 800c88c:	20009258 	andcs	r9, r0, r8, asr r2

0800c890 <MDNS::CreateMDNSMessage(unsigned int)>:
 800c890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c892:	2384      	movs	r3, #132	; 0x84
 800c894:	4d19      	ldr	r5, [pc, #100]	; (800c8fc <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800c896:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800c89a:	80eb      	strh	r3, [r5, #6]
 800c89c:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c8a0:	f105 0410 	add.w	r4, r5, #16
 800c8a4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800c8a8:	4622      	mov	r2, r4
 800c8aa:	4606      	mov	r6, r0
 800c8ac:	460f      	mov	r7, r1
 800c8ae:	f7ff ff09 	bl	800c6c4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800c8b2:	4404      	add	r4, r0
 800c8b4:	4622      	mov	r2, r4
 800c8b6:	4639      	mov	r1, r7
 800c8b8:	4630      	mov	r0, r6
 800c8ba:	f7ff ff47 	bl	800c74c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800c8be:	4404      	add	r4, r0
 800c8c0:	4622      	mov	r2, r4
 800c8c2:	4639      	mov	r1, r7
 800c8c4:	4630      	mov	r0, r6
 800c8c6:	f7ff ffbb 	bl	800c840 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800c8ca:	4404      	add	r4, r0
 800c8cc:	4622      	mov	r2, r4
 800c8ce:	4639      	mov	r1, r7
 800c8d0:	4630      	mov	r0, r6
 800c8d2:	f7ff ff79 	bl	800c7c8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800c8d6:	4b0a      	ldr	r3, [pc, #40]	; (800c900 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800c8d8:	4404      	add	r4, r0
 800c8da:	f853 2b10 	ldr.w	r2, [r3], #16
 800c8de:	1e60      	subs	r0, r4, #1
 800c8e0:	3a0c      	subs	r2, #12
 800c8e2:	4611      	mov	r1, r2
 800c8e4:	3901      	subs	r1, #1
 800c8e6:	d304      	bcc.n	800c8f2 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800c8e8:	f813 6b01 	ldrb.w	r6, [r3], #1
 800c8ec:	f800 6f01 	strb.w	r6, [r0, #1]!
 800c8f0:	e7f8      	b.n	800c8e4 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800c8f2:	4414      	add	r4, r2
 800c8f4:	4a03      	ldr	r2, [pc, #12]	; (800c904 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800c8f6:	1aa4      	subs	r4, r4, r2
 800c8f8:	602c      	str	r4, [r5, #0]
 800c8fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c8fc:	2000927c 	andcs	r9, r0, ip, ror r2
 800c900:	20009054 	andcs	r9, r0, r4, asr r0
 800c904:	20009280 	andcs	r9, r0, r0, lsl #5

0800c908 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800c908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c90c:	4d3f      	ldr	r5, [pc, #252]	; (800ca0c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800c90e:	b085      	sub	sp, #20
 800c910:	682c      	ldr	r4, [r5, #0]
 800c912:	4680      	mov	r8, r0
 800c914:	460f      	mov	r7, r1
 800c916:	4616      	mov	r6, r2
 800c918:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800c91c:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800c920:	b11c      	cbz	r4, 800c92a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800c922:	692a      	ldr	r2, [r5, #16]
 800c924:	2a00      	cmp	r2, #0
 800c926:	d16d      	bne.n	800ca04 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800c928:	2401      	movs	r4, #1
 800c92a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800c92e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800c932:	8193      	strh	r3, [r2, #12]
 800c934:	f882 b00e 	strb.w	fp, [r2, #14]
 800c938:	2f00      	cmp	r7, #0
 800c93a:	d153      	bne.n	800c9e4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800c93c:	4630      	mov	r0, r6
 800c93e:	f7ff fd8b 	bl	800c458 <strlen>
 800c942:	4f33      	ldr	r7, [pc, #204]	; (800ca10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800c944:	683b      	ldr	r3, [r7, #0]
 800c946:	331c      	adds	r3, #28
 800c948:	4418      	add	r0, r3
 800c94a:	f7ff fd85 	bl	800c458 <strlen>
 800c94e:	3001      	adds	r0, #1
 800c950:	f002 f99c 	bl	800ec8c <operator new[](unsigned int)>
 800c954:	6839      	ldr	r1, [r7, #0]
 800c956:	f845 0009 	str.w	r0, [r5, r9]
 800c95a:	311c      	adds	r1, #28
 800c95c:	f7ff fd91 	bl	800c482 <strcpy.isra.0>
 800c960:	f855 0009 	ldr.w	r0, [r5, r9]
 800c964:	4631      	mov	r1, r6
 800c966:	f7ff fd94 	bl	800c492 <strcat.isra.0>
 800c96a:	4631      	mov	r1, r6
 800c96c:	4640      	mov	r0, r8
 800c96e:	f7ff fe0d 	bl	800c58c <MDNS::FindFirstDotFromRight(char const*) const>
 800c972:	eb05 0709 	add.w	r7, r5, r9
 800c976:	4605      	mov	r5, r0
 800c978:	f7ff fd6e 	bl	800c458 <strlen>
 800c97c:	300d      	adds	r0, #13
 800c97e:	f002 f985 	bl	800ec8c <operator new[](unsigned int)>
 800c982:	4629      	mov	r1, r5
 800c984:	6078      	str	r0, [r7, #4]
 800c986:	f7ff fd7c 	bl	800c482 <strcpy.isra.0>
 800c98a:	4922      	ldr	r1, [pc, #136]	; (800ca14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800c98c:	6878      	ldr	r0, [r7, #4]
 800c98e:	f7ff fd80 	bl	800c492 <strcat.isra.0>
 800c992:	4921      	ldr	r1, [pc, #132]	; (800ca18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800c994:	4b21      	ldr	r3, [pc, #132]	; (800ca1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800c996:	6878      	ldr	r0, [r7, #4]
 800c998:	f1bb 0f01 	cmp.w	fp, #1
 800c99c:	bf18      	it	ne
 800c99e:	4619      	movne	r1, r3
 800c9a0:	f7ff fd77 	bl	800c492 <strcat.isra.0>
 800c9a4:	f1ba 0f00 	cmp.w	sl, #0
 800c9a8:	d009      	beq.n	800c9be <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800c9aa:	4650      	mov	r0, sl
 800c9ac:	f7ff fd54 	bl	800c458 <strlen>
 800c9b0:	3001      	adds	r0, #1
 800c9b2:	f002 f96b 	bl	800ec8c <operator new[](unsigned int)>
 800c9b6:	4651      	mov	r1, sl
 800c9b8:	60b8      	str	r0, [r7, #8]
 800c9ba:	f7ff fd62 	bl	800c482 <strcpy.isra.0>
 800c9be:	4621      	mov	r1, r4
 800c9c0:	4640      	mov	r0, r8
 800c9c2:	f7ff ff65 	bl	800c890 <MDNS::CreateMDNSMessage(unsigned int)>
 800c9c6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c9ca:	4915      	ldr	r1, [pc, #84]	; (800ca20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800c9cc:	4815      	ldr	r0, [pc, #84]	; (800ca24 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800c9ce:	f851 2b04 	ldr.w	r2, [r1], #4
 800c9d2:	9300      	str	r3, [sp, #0]
 800c9d4:	4b14      	ldr	r3, [pc, #80]	; (800ca28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800c9d6:	7800      	ldrb	r0, [r0, #0]
 800c9d8:	681b      	ldr	r3, [r3, #0]
 800c9da:	b292      	uxth	r2, r2
 800c9dc:	f7ff fc8a 	bl	800c2f4 <udp_send>
 800c9e0:	2001      	movs	r0, #1
 800c9e2:	e010      	b.n	800ca06 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800c9e4:	4638      	mov	r0, r7
 800c9e6:	f7ff fd37 	bl	800c458 <strlen>
 800c9ea:	9003      	str	r0, [sp, #12]
 800c9ec:	4630      	mov	r0, r6
 800c9ee:	f7ff fd33 	bl	800c458 <strlen>
 800c9f2:	9b03      	ldr	r3, [sp, #12]
 800c9f4:	4418      	add	r0, r3
 800c9f6:	3001      	adds	r0, #1
 800c9f8:	f002 f948 	bl	800ec8c <operator new[](unsigned int)>
 800c9fc:	4639      	mov	r1, r7
 800c9fe:	f845 0009 	str.w	r0, [r5, r9]
 800ca02:	e7ab      	b.n	800c95c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800ca04:	2000      	movs	r0, #0
 800ca06:	b005      	add	sp, #20
 800ca08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca0c:	20009258 	andcs	r9, r0, r8, asr r2
 800ca10:	20009488 	andcs	r9, r0, r8, lsl #9
 800ca14:	0801130b 	stmdaeq	r1, {r0, r1, r3, r8, r9, ip}
 800ca18:	080121c8 	stmdaeq	r1, {r3, r6, r7, r8, sp}
 800ca1c:	080121e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sp}
 800ca20:	2000927c 	andcs	r9, r0, ip, ror r2
 800ca24:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ca28:	20009050 	andcs	r9, r0, r0, asr r0

0800ca2c <MDNS::HandleRequest(unsigned short)>:
 800ca2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca30:	4605      	mov	r5, r0
 800ca32:	2700      	movs	r7, #0
 800ca34:	f04f 080c 	mov.w	r8, #12
 800ca38:	b0c5      	sub	sp, #276	; 0x114
 800ca3a:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800cb00 <MDNS::HandleRequest(unsigned short)+0xd4>
 800ca3e:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800cb04 <MDNS::HandleRequest(unsigned short)+0xd8>
 800ca42:	9103      	str	r1, [sp, #12]
 800ca44:	9b03      	ldr	r3, [sp, #12]
 800ca46:	42bb      	cmp	r3, r7
 800ca48:	d956      	bls.n	800caf8 <MDNS::HandleRequest(unsigned short)+0xcc>
 800ca4a:	f8da 1000 	ldr.w	r1, [sl]
 800ca4e:	aa04      	add	r2, sp, #16
 800ca50:	4441      	add	r1, r8
 800ca52:	4628      	mov	r0, r5
 800ca54:	f7ff fd54 	bl	800c500 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800ca58:	f8da 2000 	ldr.w	r2, [sl]
 800ca5c:	4440      	add	r0, r8
 800ca5e:	1813      	adds	r3, r2, r0
 800ca60:	885b      	ldrh	r3, [r3, #2]
 800ca62:	f100 0804 	add.w	r8, r0, #4
 800ca66:	ba5b      	rev16	r3, r3
 800ca68:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ca6c:	2b01      	cmp	r3, #1
 800ca6e:	d13e      	bne.n	800caee <MDNS::HandleRequest(unsigned short)+0xc2>
 800ca70:	5a14      	ldrh	r4, [r2, r0]
 800ca72:	4b25      	ldr	r3, [pc, #148]	; (800cb08 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800ca74:	ba64      	rev16	r4, r4
 800ca76:	6818      	ldr	r0, [r3, #0]
 800ca78:	a904      	add	r1, sp, #16
 800ca7a:	b2a4      	uxth	r4, r4
 800ca7c:	f7ff fcf4 	bl	800c468 <strcmp>
 800ca80:	b970      	cbnz	r0, 800caa0 <MDNS::HandleRequest(unsigned short)+0x74>
 800ca82:	2c01      	cmp	r4, #1
 800ca84:	d10c      	bne.n	800caa0 <MDNS::HandleRequest(unsigned short)+0x74>
 800ca86:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ca8a:	4920      	ldr	r1, [pc, #128]	; (800cb0c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ca8c:	4820      	ldr	r0, [pc, #128]	; (800cb10 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ca8e:	f851 2b04 	ldr.w	r2, [r1], #4
 800ca92:	9300      	str	r3, [sp, #0]
 800ca94:	4b1f      	ldr	r3, [pc, #124]	; (800cb14 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800ca96:	7800      	ldrb	r0, [r0, #0]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	b292      	uxth	r2, r2
 800ca9c:	f7ff fc2a 	bl	800c2f4 <udp_send>
 800caa0:	481d      	ldr	r0, [pc, #116]	; (800cb18 <MDNS::HandleRequest(unsigned short)+0xec>)
 800caa2:	a904      	add	r1, sp, #16
 800caa4:	f7ff fce0 	bl	800c468 <strcmp>
 800caa8:	f04f 0900 	mov.w	r9, #0
 800caac:	4e1b      	ldr	r6, [pc, #108]	; (800cb1c <MDNS::HandleRequest(unsigned short)+0xf0>)
 800caae:	9002      	str	r0, [sp, #8]
 800cab0:	6833      	ldr	r3, [r6, #0]
 800cab2:	b1c3      	cbz	r3, 800cae6 <MDNS::HandleRequest(unsigned short)+0xba>
 800cab4:	9b02      	ldr	r3, [sp, #8]
 800cab6:	b123      	cbz	r3, 800cac2 <MDNS::HandleRequest(unsigned short)+0x96>
 800cab8:	6870      	ldr	r0, [r6, #4]
 800caba:	a904      	add	r1, sp, #16
 800cabc:	f7ff fcd4 	bl	800c468 <strcmp>
 800cac0:	b988      	cbnz	r0, 800cae6 <MDNS::HandleRequest(unsigned short)+0xba>
 800cac2:	2c0c      	cmp	r4, #12
 800cac4:	d10f      	bne.n	800cae6 <MDNS::HandleRequest(unsigned short)+0xba>
 800cac6:	4649      	mov	r1, r9
 800cac8:	4628      	mov	r0, r5
 800caca:	f7ff fee1 	bl	800c890 <MDNS::CreateMDNSMessage(unsigned int)>
 800cace:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cad2:	480f      	ldr	r0, [pc, #60]	; (800cb10 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800cad4:	9300      	str	r3, [sp, #0]
 800cad6:	4b0f      	ldr	r3, [pc, #60]	; (800cb14 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800cad8:	f8bb 2000 	ldrh.w	r2, [fp]
 800cadc:	681b      	ldr	r3, [r3, #0]
 800cade:	4910      	ldr	r1, [pc, #64]	; (800cb20 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800cae0:	7800      	ldrb	r0, [r0, #0]
 800cae2:	f7ff fc07 	bl	800c2f4 <udp_send>
 800cae6:	3610      	adds	r6, #16
 800cae8:	f1b9 0f00 	cmp.w	r9, #0
 800caec:	d001      	beq.n	800caf2 <MDNS::HandleRequest(unsigned short)+0xc6>
 800caee:	3701      	adds	r7, #1
 800caf0:	e7a8      	b.n	800ca44 <MDNS::HandleRequest(unsigned short)+0x18>
 800caf2:	f04f 0901 	mov.w	r9, #1
 800caf6:	e7db      	b.n	800cab0 <MDNS::HandleRequest(unsigned short)+0x84>
 800caf8:	b045      	add	sp, #276	; 0x114
 800cafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cafe:	bf00      	nop
 800cb00:	20009484 	andcs	r9, r0, r4, lsl #9
 800cb04:	2000927c 	andcs	r9, r0, ip, ror r2
 800cb08:	20009480 	andcs	r9, r0, r0, lsl #9
 800cb0c:	20009054 	andcs	r9, r0, r4, asr r0
 800cb10:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cb14:	20009050 	andcs	r9, r0, r0, asr r0
 800cb18:	080121d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sp}
 800cb1c:	20009258 	andcs	r9, r0, r8, asr r2
 800cb20:	20009280 	andcs	r9, r0, r0, lsl #5

0800cb24 <MDNS::Parse()>:
 800cb24:	4b08      	ldr	r3, [pc, #32]	; (800cb48 <MDNS::Parse()+0x24>)
 800cb26:	681a      	ldr	r2, [r3, #0]
 800cb28:	8853      	ldrh	r3, [r2, #2]
 800cb2a:	ba5b      	rev16	r3, r3
 800cb2c:	b299      	uxth	r1, r3
 800cb2e:	041b      	lsls	r3, r3, #16
 800cb30:	d408      	bmi.n	800cb44 <MDNS::Parse()+0x20>
 800cb32:	0b8b      	lsrs	r3, r1, #14
 800cb34:	d106      	bne.n	800cb44 <MDNS::Parse()+0x20>
 800cb36:	8891      	ldrh	r1, [r2, #4]
 800cb38:	b28b      	uxth	r3, r1
 800cb3a:	b11b      	cbz	r3, 800cb44 <MDNS::Parse()+0x20>
 800cb3c:	ba49      	rev16	r1, r1
 800cb3e:	b289      	uxth	r1, r1
 800cb40:	f7ff bf74 	b.w	800ca2c <MDNS::HandleRequest(unsigned short)>
 800cb44:	4770      	bx	lr
 800cb46:	bf00      	nop
 800cb48:	20009484 	andcs	r9, r0, r4, lsl #9

0800cb4c <MDNS::Run()>:
 800cb4c:	b538      	push	{r3, r4, r5, lr}
 800cb4e:	4d0c      	ldr	r5, [pc, #48]	; (800cb80 <MDNS::Run()+0x34>)
 800cb50:	4604      	mov	r4, r0
 800cb52:	480c      	ldr	r0, [pc, #48]	; (800cb84 <MDNS::Run()+0x38>)
 800cb54:	462b      	mov	r3, r5
 800cb56:	4a0c      	ldr	r2, [pc, #48]	; (800cb88 <MDNS::Run()+0x3c>)
 800cb58:	490c      	ldr	r1, [pc, #48]	; (800cb8c <MDNS::Run()+0x40>)
 800cb5a:	7800      	ldrb	r0, [r0, #0]
 800cb5c:	f7ff fba4 	bl	800c2a8 <udp_recv2>
 800cb60:	4b0b      	ldr	r3, [pc, #44]	; (800cb90 <MDNS::Run()+0x44>)
 800cb62:	882a      	ldrh	r2, [r5, #0]
 800cb64:	8018      	strh	r0, [r3, #0]
 800cb66:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cb6a:	429a      	cmp	r2, r3
 800cb6c:	d106      	bne.n	800cb7c <MDNS::Run()+0x30>
 800cb6e:	280c      	cmp	r0, #12
 800cb70:	d904      	bls.n	800cb7c <MDNS::Run()+0x30>
 800cb72:	4620      	mov	r0, r4
 800cb74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cb78:	f7ff bfd4 	b.w	800cb24 <MDNS::Parse()>
 800cb7c:	bd38      	pop	{r3, r4, r5, pc}
 800cb7e:	bf00      	nop
 800cb80:	2000904c 	andcs	r9, r0, ip, asr #32
 800cb84:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cb88:	20009048 	andcs	r9, r0, r8, asr #32
 800cb8c:	20009484 	andcs	r9, r0, r4, lsl #9
 800cb90:	20009278 	andcs	r9, r0, r8, ror r2

0800cb94 <MDNS::Print()>:
 800cb94:	b510      	push	{r4, lr}
 800cb96:	4816      	ldr	r0, [pc, #88]	; (800cbf0 <MDNS::Print()+0x5c>)
 800cb98:	f7fb fada 	bl	8008150 <printf>
 800cb9c:	4b15      	ldr	r3, [pc, #84]	; (800cbf4 <MDNS::Print()+0x60>)
 800cb9e:	681b      	ldr	r3, [r3, #0]
 800cba0:	3301      	adds	r3, #1
 800cba2:	d104      	bne.n	800cbae <MDNS::Print()+0x1a>
 800cba4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cba8:	4813      	ldr	r0, [pc, #76]	; (800cbf8 <MDNS::Print()+0x64>)
 800cbaa:	f7fb bad1 	b.w	8008150 <printf>
 800cbae:	4b13      	ldr	r3, [pc, #76]	; (800cbfc <MDNS::Print()+0x68>)
 800cbb0:	4c13      	ldr	r4, [pc, #76]	; (800cc00 <MDNS::Print()+0x6c>)
 800cbb2:	6819      	ldr	r1, [r3, #0]
 800cbb4:	4813      	ldr	r0, [pc, #76]	; (800cc04 <MDNS::Print()+0x70>)
 800cbb6:	f7fb facb 	bl	8008150 <printf>
 800cbba:	6823      	ldr	r3, [r4, #0]
 800cbbc:	b14b      	cbz	r3, 800cbd2 <MDNS::Print()+0x3e>
 800cbbe:	4a12      	ldr	r2, [pc, #72]	; (800cc08 <MDNS::Print()+0x74>)
 800cbc0:	68a3      	ldr	r3, [r4, #8]
 800cbc2:	6861      	ldr	r1, [r4, #4]
 800cbc4:	2b00      	cmp	r3, #0
 800cbc6:	bf08      	it	eq
 800cbc8:	4613      	moveq	r3, r2
 800cbca:	4810      	ldr	r0, [pc, #64]	; (800cc0c <MDNS::Print()+0x78>)
 800cbcc:	89a2      	ldrh	r2, [r4, #12]
 800cbce:	f7fb fabf 	bl	8008150 <printf>
 800cbd2:	6923      	ldr	r3, [r4, #16]
 800cbd4:	b15b      	cbz	r3, 800cbee <MDNS::Print()+0x5a>
 800cbd6:	69a3      	ldr	r3, [r4, #24]
 800cbd8:	4a0b      	ldr	r2, [pc, #44]	; (800cc08 <MDNS::Print()+0x74>)
 800cbda:	6961      	ldr	r1, [r4, #20]
 800cbdc:	2b00      	cmp	r3, #0
 800cbde:	bf08      	it	eq
 800cbe0:	4613      	moveq	r3, r2
 800cbe2:	480a      	ldr	r0, [pc, #40]	; (800cc0c <MDNS::Print()+0x78>)
 800cbe4:	8ba2      	ldrh	r2, [r4, #28]
 800cbe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbea:	f7fb bab1 	b.w	8008150 <printf>
 800cbee:	bd10      	pop	{r4, pc}
 800cbf0:	080121f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sp}
 800cbf4:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cbf8:	080121f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sp}
 800cbfc:	20009480 	andcs	r9, r0, r0, lsl #9
 800cc00:	20009258 	andcs	r9, r0, r8, asr r2
 800cc04:	08012204 	stmdaeq	r1, {r2, r9, sp}
 800cc08:	08011603 	stmdaeq	r1, {r0, r1, r9, sl, ip}
 800cc0c:	08012210 	stmdaeq	r1, {r4, r9, sp}

0800cc10 <strncpy.constprop.0.isra.0>:
 800cc10:	233f      	movs	r3, #63	; 0x3f
 800cc12:	3901      	subs	r1, #1
 800cc14:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800cc18:	b92a      	cbnz	r2, 800cc26 <strncpy.constprop.0.isra.0+0x16>
 800cc1a:	4403      	add	r3, r0
 800cc1c:	4298      	cmp	r0, r3
 800cc1e:	d007      	beq.n	800cc30 <strncpy.constprop.0.isra.0+0x20>
 800cc20:	f800 2b01 	strb.w	r2, [r0], #1
 800cc24:	e7fa      	b.n	800cc1c <strncpy.constprop.0.isra.0+0xc>
 800cc26:	3b01      	subs	r3, #1
 800cc28:	f800 2b01 	strb.w	r2, [r0], #1
 800cc2c:	d1f2      	bne.n	800cc14 <strncpy.constprop.0.isra.0+0x4>
 800cc2e:	4770      	bx	lr
 800cc30:	4770      	bx	lr
	...

0800cc34 <Network::Network()>:
 800cc34:	4a11      	ldr	r2, [pc, #68]	; (800cc7c <Network::Network()+0x48>)
 800cc36:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800cc3a:	6010      	str	r0, [r2, #0]
 800cc3c:	2201      	movs	r2, #1
 800cc3e:	2300      	movs	r3, #0
 800cc40:	e9c0 1200 	strd	r1, r2, [r0]
 800cc44:	2200      	movs	r2, #0
 800cc46:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800cc4a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800cc4e:	490c      	ldr	r1, [pc, #48]	; (800cc80 <Network::Network()+0x4c>)
 800cc50:	60c2      	str	r2, [r0, #12]
 800cc52:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800cc56:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800cc5a:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800cc5e:	6083      	str	r3, [r0, #8]
 800cc60:	6183      	str	r3, [r0, #24]
 800cc62:	7703      	strb	r3, [r0, #28]
 800cc64:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800cc68:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800cc6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cc70:	f802 3b01 	strb.w	r3, [r2], #1
 800cc74:	2b00      	cmp	r3, #0
 800cc76:	d1f9      	bne.n	800cc6c <Network::Network()+0x38>
 800cc78:	4770      	bx	lr
 800cc7a:	bf00      	nop
 800cc7c:	20009488 	andcs	r9, r0, r8, lsl #9
 800cc80:	0801221b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sp}

0800cc84 <Network::Shutdown()>:
 800cc84:	b508      	push	{r3, lr}
 800cc86:	30b8      	adds	r0, #184	; 0xb8
 800cc88:	f7fb f864 	bl	8007d54 <NetworkDisplay::ShowShutdown()>
 800cc8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cc90:	f7fe bdc2 	b.w	800b818 <net_shutdown>

0800cc94 <Network::Begin(unsigned short)>:
 800cc94:	4608      	mov	r0, r1
 800cc96:	f7ff ba97 	b.w	800c1c8 <udp_bind>

0800cc9a <Network::End(unsigned short)>:
 800cc9a:	4608      	mov	r0, r1
 800cc9c:	f7ff baae 	b.w	800c1fc <udp_unbind>

0800cca0 <Network::MacAddressCopyTo(unsigned char*)>:
 800cca0:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800cca4:	3901      	subs	r1, #1
 800cca6:	30a2      	adds	r0, #162	; 0xa2
 800cca8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ccac:	4283      	cmp	r3, r0
 800ccae:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ccb2:	d1f9      	bne.n	800cca8 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800ccb4:	4770      	bx	lr

0800ccb6 <Network::JoinGroup(int, unsigned int)>:
 800ccb6:	4610      	mov	r0, r2
 800ccb8:	f001 b856 	b.w	800dd68 <igmp_join>

0800ccbc <Network::SetDefaultIp()>:
 800ccbc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ccc0:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800ccc4:	041b      	lsls	r3, r3, #16
 800ccc6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ccca:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800ccce:	3302      	adds	r3, #2
 800ccd0:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800ccd4:	22ff      	movs	r2, #255	; 0xff
 800ccd6:	6103      	str	r3, [r0, #16]
 800ccd8:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800ccdc:	4770      	bx	lr
	...

0800cce0 <Network::Init(NetworkParamsStore*)>:
 800cce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cce4:	b08b      	sub	sp, #44	; 0x2c
 800cce6:	4604      	mov	r4, r0
 800cce8:	a806      	add	r0, sp, #24
 800ccea:	f000 f9b1 	bl	800d050 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ccee:	a806      	add	r0, sp, #24
 800ccf0:	f000 f9be 	bl	800d070 <NetworkParams::Load()>
 800ccf4:	b110      	cbz	r0, 800ccfc <Network::Init(NetworkParamsStore*)+0x1c>
 800ccf6:	a806      	add	r0, sp, #24
 800ccf8:	f000 fba3 	bl	800d442 <NetworkParams::Dump()>
 800ccfc:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800cd00:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800cf28 <Network::Init(NetworkParamsStore*)+0x248>
 800cd04:	4628      	mov	r0, r5
 800cd06:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800cd0a:	f7fb f821 	bl	8007d50 <NetworkDisplay::ShowEmacStart()>
 800cd0e:	4638      	mov	r0, r7
 800cd10:	f002 ff30 	bl	800fb74 <emac_start>
 800cd14:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800cd18:	f104 061c 	add.w	r6, r4, #28
 800cd1c:	9307      	str	r3, [sp, #28]
 800cd1e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800cd22:	9308      	str	r3, [sp, #32]
 800cd24:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800cd28:	9309      	str	r3, [sp, #36]	; 0x24
 800cd2a:	f898 3014 	ldrb.w	r3, [r8, #20]
 800cd2e:	7063      	strb	r3, [r4, #1]
 800cd30:	f8d8 3000 	ldr.w	r3, [r8]
 800cd34:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800cd38:	bf18      	it	ne
 800cd3a:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800cd3e:	061b      	lsls	r3, r3, #24
 800cd40:	bf58      	it	pl
 800cd42:	2300      	movpl	r3, #0
 800cd44:	60a2      	str	r2, [r4, #8]
 800cd46:	bf48      	it	mi
 800cd48:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800cd4c:	60e3      	str	r3, [r4, #12]
 800cd4e:	f898 3015 	ldrb.w	r3, [r8, #21]
 800cd52:	2b00      	cmp	r3, #0
 800cd54:	d15e      	bne.n	800ce14 <Network::Init(NetworkParamsStore*)+0x134>
 800cd56:	4632      	mov	r2, r6
 800cd58:	4874      	ldr	r0, [pc, #464]	; (800cf2c <Network::Init(NetworkParamsStore*)+0x24c>)
 800cd5a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800cd5e:	f103 0c01 	add.w	ip, r3, #1
 800cd62:	b119      	cbz	r1, 800cd6c <Network::Init(NetworkParamsStore*)+0x8c>
 800cd64:	4663      	mov	r3, ip
 800cd66:	f802 1b01 	strb.w	r1, [r2], #1
 800cd6a:	e7f6      	b.n	800cd5a <Network::Init(NetworkParamsStore*)+0x7a>
 800cd6c:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800cd70:	18e1      	adds	r1, r4, r3
 800cd72:	0910      	lsrs	r0, r2, #4
 800cd74:	2a9f      	cmp	r2, #159	; 0x9f
 800cd76:	f002 020f 	and.w	r2, r2, #15
 800cd7a:	bf94      	ite	ls
 800cd7c:	3030      	addls	r0, #48	; 0x30
 800cd7e:	3037      	addhi	r0, #55	; 0x37
 800cd80:	2a09      	cmp	r2, #9
 800cd82:	bf94      	ite	ls
 800cd84:	3230      	addls	r2, #48	; 0x30
 800cd86:	3237      	addhi	r2, #55	; 0x37
 800cd88:	44a4      	add	ip, r4
 800cd8a:	7708      	strb	r0, [r1, #28]
 800cd8c:	f88c 201c 	strb.w	r2, [ip, #28]
 800cd90:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800cd94:	f103 0e02 	add.w	lr, r3, #2
 800cd98:	0910      	lsrs	r0, r2, #4
 800cd9a:	2a9f      	cmp	r2, #159	; 0x9f
 800cd9c:	f002 020f 	and.w	r2, r2, #15
 800cda0:	bf94      	ite	ls
 800cda2:	3030      	addls	r0, #48	; 0x30
 800cda4:	3037      	addhi	r0, #55	; 0x37
 800cda6:	f103 0903 	add.w	r9, r3, #3
 800cdaa:	2a09      	cmp	r2, #9
 800cdac:	44a6      	add	lr, r4
 800cdae:	f88e 001c 	strb.w	r0, [lr, #28]
 800cdb2:	bf94      	ite	ls
 800cdb4:	3230      	addls	r2, #48	; 0x30
 800cdb6:	3237      	addhi	r2, #55	; 0x37
 800cdb8:	eb04 0009 	add.w	r0, r4, r9
 800cdbc:	7702      	strb	r2, [r0, #28]
 800cdbe:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800cdc2:	f103 0c04 	add.w	ip, r3, #4
 800cdc6:	0910      	lsrs	r0, r2, #4
 800cdc8:	2a9f      	cmp	r2, #159	; 0x9f
 800cdca:	f002 020f 	and.w	r2, r2, #15
 800cdce:	bf94      	ite	ls
 800cdd0:	3030      	addls	r0, #48	; 0x30
 800cdd2:	3037      	addhi	r0, #55	; 0x37
 800cdd4:	3305      	adds	r3, #5
 800cdd6:	2a09      	cmp	r2, #9
 800cdd8:	4423      	add	r3, r4
 800cdda:	44a4      	add	ip, r4
 800cddc:	bf94      	ite	ls
 800cdde:	3230      	addls	r2, #48	; 0x30
 800cde0:	3237      	addhi	r2, #55	; 0x37
 800cde2:	f88c 001c 	strb.w	r0, [ip, #28]
 800cde6:	771a      	strb	r2, [r3, #28]
 800cde8:	2300      	movs	r3, #0
 800cdea:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800cdee:	7863      	ldrb	r3, [r4, #1]
 800cdf0:	b95b      	cbnz	r3, 800ce0a <Network::Init(NetworkParamsStore*)+0x12a>
 800cdf2:	9b07      	ldr	r3, [sp, #28]
 800cdf4:	b9b3      	cbnz	r3, 800ce24 <Network::Init(NetworkParamsStore*)+0x144>
 800cdf6:	4620      	mov	r0, r4
 800cdf8:	f7ff ff60 	bl	800ccbc <Network::SetDefaultIp()>
 800cdfc:	6923      	ldr	r3, [r4, #16]
 800cdfe:	69a2      	ldr	r2, [r4, #24]
 800ce00:	9307      	str	r3, [sp, #28]
 800ce02:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800ce06:	7863      	ldrb	r3, [r4, #1]
 800ce08:	b19b      	cbz	r3, 800ce32 <Network::Init(NetworkParamsStore*)+0x152>
 800ce0a:	2101      	movs	r1, #1
 800ce0c:	4628      	mov	r0, r5
 800ce0e:	f7fa ffa2 	bl	8007d56 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ce12:	e00e      	b.n	800ce32 <Network::Init(NetworkParamsStore*)+0x152>
 800ce14:	4630      	mov	r0, r6
 800ce16:	4946      	ldr	r1, [pc, #280]	; (800cf30 <Network::Init(NetworkParamsStore*)+0x250>)
 800ce18:	f7ff fefa 	bl	800cc10 <strncpy.constprop.0.isra.0>
 800ce1c:	2300      	movs	r3, #0
 800ce1e:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800ce22:	e7e4      	b.n	800cdee <Network::Init(NetworkParamsStore*)+0x10e>
 800ce24:	69a1      	ldr	r1, [r4, #24]
 800ce26:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800ce2a:	4053      	eors	r3, r2
 800ce2c:	420b      	tst	r3, r1
 800ce2e:	d000      	beq.n	800ce32 <Network::Init(NetworkParamsStore*)+0x152>
 800ce30:	9209      	str	r2, [sp, #36]	; 0x24
 800ce32:	1ce3      	adds	r3, r4, #3
 800ce34:	f104 0901 	add.w	r9, r4, #1
 800ce38:	9302      	str	r3, [sp, #8]
 800ce3a:	9300      	str	r3, [sp, #0]
 800ce3c:	4632      	mov	r2, r6
 800ce3e:	464b      	mov	r3, r9
 800ce40:	4638      	mov	r0, r7
 800ce42:	a907      	add	r1, sp, #28
 800ce44:	f7fe fc98 	bl	800b778 <net_init>
 800ce48:	78e3      	ldrb	r3, [r4, #3]
 800ce4a:	b11b      	cbz	r3, 800ce54 <Network::Init(NetworkParamsStore*)+0x174>
 800ce4c:	2104      	movs	r1, #4
 800ce4e:	4628      	mov	r0, r5
 800ce50:	f7fa ff81 	bl	8007d56 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800ce54:	f898 3014 	ldrb.w	r3, [r8, #20]
 800ce58:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800ce5c:	9304      	str	r3, [sp, #16]
 800ce5e:	233c      	movs	r3, #60	; 0x3c
 800ce60:	fb03 f30a 	mul.w	r3, r3, sl
 800ce64:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800cf34 <Network::Init(NetworkParamsStore*)+0x254>
 800ce68:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800cf38 <Network::Init(NetworkParamsStore*)+0x258>
 800ce6c:	9303      	str	r3, [sp, #12]
 800ce6e:	78e3      	ldrb	r3, [r4, #3]
 800ce70:	b95b      	cbnz	r3, 800ce8a <Network::Init(NetworkParamsStore*)+0x1aa>
 800ce72:	9b07      	ldr	r3, [sp, #28]
 800ce74:	4628      	mov	r0, r5
 800ce76:	6123      	str	r3, [r4, #16]
 800ce78:	9b08      	ldr	r3, [sp, #32]
 800ce7a:	61a3      	str	r3, [r4, #24]
 800ce7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce7e:	6163      	str	r3, [r4, #20]
 800ce80:	f7fa ff67 	bl	8007d52 <NetworkDisplay::ShowIp()>
 800ce84:	b00b      	add	sp, #44	; 0x2c
 800ce86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce8a:	f1ba 0f00 	cmp.w	sl, #0
 800ce8e:	d0f0      	beq.n	800ce72 <Network::Init(NetworkParamsStore*)+0x192>
 800ce90:	9b04      	ldr	r3, [sp, #16]
 800ce92:	2b00      	cmp	r3, #0
 800ce94:	d0ed      	beq.n	800ce72 <Network::Init(NetworkParamsStore*)+0x192>
 800ce96:	2104      	movs	r1, #4
 800ce98:	f8d8 0000 	ldr.w	r0, [r8]
 800ce9c:	f001 fe2e 	bl	800eafc <LedBlink::SetMode(ledblink::Mode)>
 800cea0:	2103      	movs	r1, #3
 800cea2:	4628      	mov	r0, r5
 800cea4:	f7fa ff57 	bl	8007d56 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cea8:	2000      	movs	r0, #0
 800ceaa:	f002 f8cf 	bl	800f04c <time>
 800ceae:	9005      	str	r0, [sp, #20]
 800ceb0:	2000      	movs	r0, #0
 800ceb2:	f002 f8cb 	bl	800f04c <time>
 800ceb6:	9b05      	ldr	r3, [sp, #20]
 800ceb8:	1ac0      	subs	r0, r0, r3
 800ceba:	9b03      	ldr	r3, [sp, #12]
 800cebc:	4298      	cmp	r0, r3
 800cebe:	da1a      	bge.n	800cef6 <Network::Init(NetworkParamsStore*)+0x216>
 800cec0:	f8d8 3000 	ldr.w	r3, [r8]
 800cec4:	491d      	ldr	r1, [pc, #116]	; (800cf3c <Network::Init(NetworkParamsStore*)+0x25c>)
 800cec6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800ceca:	f1bc 0f00 	cmp.w	ip, #0
 800cece:	d0ef      	beq.n	800ceb0 <Network::Init(NetworkParamsStore*)+0x1d0>
 800ced0:	6808      	ldr	r0, [r1, #0]
 800ced2:	695a      	ldr	r2, [r3, #20]
 800ced4:	1a80      	subs	r0, r0, r2
 800ced6:	4584      	cmp	ip, r0
 800ced8:	d8ea      	bhi.n	800ceb0 <Network::Init(NetworkParamsStore*)+0x1d0>
 800ceda:	6808      	ldr	r0, [r1, #0]
 800cedc:	6158      	str	r0, [r3, #20]
 800cede:	6918      	ldr	r0, [r3, #16]
 800cee0:	2801      	cmp	r0, #1
 800cee2:	f080 0201 	eor.w	r2, r0, #1
 800cee6:	611a      	str	r2, [r3, #16]
 800cee8:	bf16      	itet	ne
 800ceea:	2301      	movne	r3, #1
 800ceec:	f8cb 0014 	streq.w	r0, [fp, #20]
 800cef0:	f8cb 3010 	strne.w	r3, [fp, #16]
 800cef4:	e7dc      	b.n	800ceb0 <Network::Init(NetworkParamsStore*)+0x1d0>
 800cef6:	2101      	movs	r1, #1
 800cef8:	4628      	mov	r0, r5
 800cefa:	f7fa ff2c 	bl	8007d56 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800cefe:	2101      	movs	r1, #1
 800cf00:	f8d8 0000 	ldr.w	r0, [r8]
 800cf04:	f001 fdfa 	bl	800eafc <LedBlink::SetMode(ledblink::Mode)>
 800cf08:	2301      	movs	r3, #1
 800cf0a:	7063      	strb	r3, [r4, #1]
 800cf0c:	2300      	movs	r3, #0
 800cf0e:	70e3      	strb	r3, [r4, #3]
 800cf10:	9b02      	ldr	r3, [sp, #8]
 800cf12:	4632      	mov	r2, r6
 800cf14:	9300      	str	r3, [sp, #0]
 800cf16:	4638      	mov	r0, r7
 800cf18:	464b      	mov	r3, r9
 800cf1a:	a907      	add	r1, sp, #28
 800cf1c:	f7fe fc2c 	bl	800b778 <net_init>
 800cf20:	7863      	ldrb	r3, [r4, #1]
 800cf22:	2b00      	cmp	r3, #0
 800cf24:	d0a3      	beq.n	800ce6e <Network::Init(NetworkParamsStore*)+0x18e>
 800cf26:	e7a4      	b.n	800ce72 <Network::Init(NetworkParamsStore*)+0x192>
 800cf28:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cf2c:	08012220 	stmdaeq	r1, {r5, r9, sp}
 800cf30:	200094a1 	andcs	r9, r0, r1, lsr #9
 800cf34:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800cf38:	40011000 	andmi	r1, r1, r0
 800cf3c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800cf40 <Network::Print()>:
 800cf40:	b530      	push	{r4, r5, lr}
 800cf42:	4604      	mov	r4, r0
 800cf44:	b085      	sub	sp, #20
 800cf46:	4832      	ldr	r0, [pc, #200]	; (800d010 <Network::Print()+0xd0>)
 800cf48:	f7fb f902 	bl	8008150 <printf>
 800cf4c:	f104 011c 	add.w	r1, r4, #28
 800cf50:	4830      	ldr	r0, [pc, #192]	; (800d014 <Network::Print()+0xd4>)
 800cf52:	f7fb f8fd 	bl	8008150 <printf>
 800cf56:	6861      	ldr	r1, [r4, #4]
 800cf58:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800cf5c:	482e      	ldr	r0, [pc, #184]	; (800d018 <Network::Print()+0xd8>)
 800cf5e:	f7fb f8f7 	bl	8008150 <printf>
 800cf62:	69a0      	ldr	r0, [r4, #24]
 800cf64:	f7fa fbc2 	bl	80076ec <__popcountsi2>
 800cf68:	6925      	ldr	r5, [r4, #16]
 800cf6a:	9001      	str	r0, [sp, #4]
 800cf6c:	0e2b      	lsrs	r3, r5, #24
 800cf6e:	9300      	str	r3, [sp, #0]
 800cf70:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800cf74:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800cf78:	b2e9      	uxtb	r1, r5
 800cf7a:	4828      	ldr	r0, [pc, #160]	; (800d01c <Network::Print()+0xdc>)
 800cf7c:	f7fb f8e8 	bl	8008150 <printf>
 800cf80:	69a1      	ldr	r1, [r4, #24]
 800cf82:	4827      	ldr	r0, [pc, #156]	; (800d020 <Network::Print()+0xe0>)
 800cf84:	0e0b      	lsrs	r3, r1, #24
 800cf86:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cf8a:	9300      	str	r3, [sp, #0]
 800cf8c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cf90:	b2c9      	uxtb	r1, r1
 800cf92:	f7fb f8dd 	bl	8008150 <printf>
 800cf96:	6961      	ldr	r1, [r4, #20]
 800cf98:	4822      	ldr	r0, [pc, #136]	; (800d024 <Network::Print()+0xe4>)
 800cf9a:	0e0b      	lsrs	r3, r1, #24
 800cf9c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cfa0:	9300      	str	r3, [sp, #0]
 800cfa2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cfa6:	b2c9      	uxtb	r1, r1
 800cfa8:	f7fb f8d2 	bl	8008150 <printf>
 800cfac:	69a3      	ldr	r3, [r4, #24]
 800cfae:	6921      	ldr	r1, [r4, #16]
 800cfb0:	481d      	ldr	r0, [pc, #116]	; (800d028 <Network::Print()+0xe8>)
 800cfb2:	ea61 0103 	orn	r1, r1, r3
 800cfb6:	0e0b      	lsrs	r3, r1, #24
 800cfb8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cfbc:	9300      	str	r3, [sp, #0]
 800cfbe:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cfc2:	b2c9      	uxtb	r1, r1
 800cfc4:	f7fb f8c4 	bl	8008150 <printf>
 800cfc8:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800cfcc:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800cfd0:	9302      	str	r3, [sp, #8]
 800cfd2:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800cfd6:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800cfda:	9301      	str	r3, [sp, #4]
 800cfdc:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800cfe0:	4812      	ldr	r0, [pc, #72]	; (800d02c <Network::Print()+0xec>)
 800cfe2:	9300      	str	r3, [sp, #0]
 800cfe4:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800cfe8:	f7fb f8b2 	bl	8008150 <printf>
 800cfec:	4b10      	ldr	r3, [pc, #64]	; (800d030 <Network::Print()+0xf0>)
 800cfee:	681b      	ldr	r3, [r3, #0]
 800cff0:	78da      	ldrb	r2, [r3, #3]
 800cff2:	b952      	cbnz	r2, 800d00a <Network::Print()+0xca>
 800cff4:	785b      	ldrb	r3, [r3, #1]
 800cff6:	2b00      	cmp	r3, #0
 800cff8:	bf14      	ite	ne
 800cffa:	2144      	movne	r1, #68	; 0x44
 800cffc:	2153      	moveq	r1, #83	; 0x53
 800cffe:	480d      	ldr	r0, [pc, #52]	; (800d034 <Network::Print()+0xf4>)
 800d000:	b005      	add	sp, #20
 800d002:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d006:	f7fb b8a3 	b.w	8008150 <printf>
 800d00a:	215a      	movs	r1, #90	; 0x5a
 800d00c:	e7f7      	b.n	800cffe <Network::Print()+0xbe>
 800d00e:	bf00      	nop
 800d010:	0801222c 	stmdaeq	r1, {r2, r3, r5, r9, sp}
 800d014:	08012235 	stmdaeq	r1, {r0, r2, r4, r5, r9, sp}
 800d018:	08012246 	stmdaeq	r1, {r1, r2, r6, r9, sp}
 800d01c:	0801225b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, sp}
 800d020:	08012278 	stmdaeq	r1, {r3, r4, r5, r6, r9, sp}
 800d024:	08012292 	stmdaeq	r1, {r1, r4, r7, r9, sp}
 800d028:	080122ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sp}
 800d02c:	080122c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sp}
 800d030:	20009488 	andcs	r9, r0, r8, lsl #9
 800d034:	080122f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, sp}

0800d038 <Network::TcpBegin(unsigned short)>:
 800d038:	4608      	mov	r0, r1
 800d03a:	f7fe bf73 	b.w	800bf24 <tcp_begin>

0800d03e <Network::TcpRead(int, unsigned char const**)>:
 800d03e:	4608      	mov	r0, r1
 800d040:	4611      	mov	r1, r2
 800d042:	f7fe bfad 	b.w	800bfa0 <tcp_read>

0800d046 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d046:	4608      	mov	r0, r1
 800d048:	4611      	mov	r1, r2
 800d04a:	461a      	mov	r2, r3
 800d04c:	f7fe bf84 	b.w	800bf58 <tcp_write>

0800d050 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d050:	4b06      	ldr	r3, [pc, #24]	; (800d06c <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d052:	b510      	push	{r4, lr}
 800d054:	225e      	movs	r2, #94	; 0x5e
 800d056:	4604      	mov	r4, r0
 800d058:	6001      	str	r1, [r0, #0]
 800d05a:	2100      	movs	r1, #0
 800d05c:	4618      	mov	r0, r3
 800d05e:	f001 fee9 	bl	800ee34 <memset>
 800d062:	2201      	movs	r2, #1
 800d064:	7502      	strb	r2, [r0, #20]
 800d066:	4620      	mov	r0, r4
 800d068:	bd10      	pop	{r4, pc}
 800d06a:	bf00      	nop
 800d06c:	2000948c 	andcs	r9, r0, ip, lsl #9

0800d070 <NetworkParams::Load()>:
 800d070:	b508      	push	{r3, lr}
 800d072:	2300      	movs	r3, #0
 800d074:	4905      	ldr	r1, [pc, #20]	; (800d08c <NetworkParams::Load()+0x1c>)
 800d076:	6800      	ldr	r0, [r0, #0]
 800d078:	700b      	strb	r3, [r1, #0]
 800d07a:	704b      	strb	r3, [r1, #1]
 800d07c:	708b      	strb	r3, [r1, #2]
 800d07e:	70cb      	strb	r3, [r1, #3]
 800d080:	b118      	cbz	r0, 800d08a <NetworkParams::Load()+0x1a>
 800d082:	6803      	ldr	r3, [r0, #0]
 800d084:	68db      	ldr	r3, [r3, #12]
 800d086:	4798      	blx	r3
 800d088:	2001      	movs	r0, #1
 800d08a:	bd08      	pop	{r3, pc}
 800d08c:	2000948c 	andcs	r9, r0, ip, lsl #9

0800d090 <NetworkParams::Load(char const*, unsigned int)>:
 800d090:	6803      	ldr	r3, [r0, #0]
 800d092:	b1eb      	cbz	r3, 800d0d0 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d094:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d096:	2300      	movs	r3, #0
 800d098:	460e      	mov	r6, r1
 800d09a:	4617      	mov	r7, r2
 800d09c:	4605      	mov	r5, r0
 800d09e:	4c0d      	ldr	r4, [pc, #52]	; (800d0d4 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d0a0:	4602      	mov	r2, r0
 800d0a2:	490d      	ldr	r1, [pc, #52]	; (800d0d8 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d0a4:	4668      	mov	r0, sp
 800d0a6:	7023      	strb	r3, [r4, #0]
 800d0a8:	7063      	strb	r3, [r4, #1]
 800d0aa:	70a3      	strb	r3, [r4, #2]
 800d0ac:	70e3      	strb	r3, [r4, #3]
 800d0ae:	f001 f8d5 	bl	800e25c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d0b2:	463a      	mov	r2, r7
 800d0b4:	4631      	mov	r1, r6
 800d0b6:	4668      	mov	r0, sp
 800d0b8:	f001 f8d4 	bl	800e264 <ReadConfigFile::Read(char const*, unsigned int)>
 800d0bc:	6828      	ldr	r0, [r5, #0]
 800d0be:	4621      	mov	r1, r4
 800d0c0:	6803      	ldr	r3, [r0, #0]
 800d0c2:	689b      	ldr	r3, [r3, #8]
 800d0c4:	4798      	blx	r3
 800d0c6:	4668      	mov	r0, sp
 800d0c8:	f001 f8cb 	bl	800e262 <ReadConfigFile::~ReadConfigFile()>
 800d0cc:	b003      	add	sp, #12
 800d0ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d0d0:	4770      	bx	lr
 800d0d2:	bf00      	nop
 800d0d4:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d0d8:	0800d20d 	stmdaeq	r0, {r0, r2, r3, r9, ip, lr, pc}

0800d0dc <NetworkParams::callbackFunction(char const*)>:
 800d0dc:	b530      	push	{r4, r5, lr}
 800d0de:	460c      	mov	r4, r1
 800d0e0:	b085      	sub	sp, #20
 800d0e2:	4620      	mov	r0, r4
 800d0e4:	4942      	ldr	r1, [pc, #264]	; (800d1f0 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d0e6:	f10d 0207 	add.w	r2, sp, #7
 800d0ea:	f001 f966 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d0ee:	b980      	cbnz	r0, 800d112 <NetworkParams::callbackFunction(char const*)+0x36>
 800d0f0:	4940      	ldr	r1, [pc, #256]	; (800d1f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d0f2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d0f6:	680b      	ldr	r3, [r1, #0]
 800d0f8:	b142      	cbz	r2, 800d10c <NetworkParams::callbackFunction(char const*)+0x30>
 800d0fa:	f023 0301 	bic.w	r3, r3, #1
 800d0fe:	3a00      	subs	r2, #0
 800d100:	bf18      	it	ne
 800d102:	2201      	movne	r2, #1
 800d104:	600b      	str	r3, [r1, #0]
 800d106:	750a      	strb	r2, [r1, #20]
 800d108:	b005      	add	sp, #20
 800d10a:	bd30      	pop	{r4, r5, pc}
 800d10c:	f043 0301 	orr.w	r3, r3, #1
 800d110:	e7f5      	b.n	800d0fe <NetworkParams::callbackFunction(char const*)+0x22>
 800d112:	4620      	mov	r0, r4
 800d114:	4938      	ldr	r1, [pc, #224]	; (800d1f8 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d116:	f10d 0207 	add.w	r2, sp, #7
 800d11a:	f001 f94e 	bl	800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d11e:	b988      	cbnz	r0, 800d144 <NetworkParams::callbackFunction(char const*)+0x68>
 800d120:	4a34      	ldr	r2, [pc, #208]	; (800d1f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d122:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d126:	6813      	ldr	r3, [r2, #0]
 800d128:	1e4d      	subs	r5, r1, #1
 800d12a:	2d04      	cmp	r5, #4
 800d12c:	bf97      	itett	ls
 800d12e:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d132:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d136:	6013      	strls	r3, [r2, #0]
 800d138:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d13c:	bf84      	itt	hi
 800d13e:	6013      	strhi	r3, [r2, #0]
 800d140:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d144:	4620      	mov	r0, r4
 800d146:	492d      	ldr	r1, [pc, #180]	; (800d1fc <NetworkParams::callbackFunction(char const*)+0x120>)
 800d148:	aa02      	add	r2, sp, #8
 800d14a:	f001 f8d8 	bl	800e2fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d14e:	b9d0      	cbnz	r0, 800d186 <NetworkParams::callbackFunction(char const*)+0xaa>
 800d150:	9b02      	ldr	r3, [sp, #8]
 800d152:	b2d9      	uxtb	r1, r3
 800d154:	29ac      	cmp	r1, #172	; 0xac
 800d156:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d15a:	d00a      	beq.n	800d172 <NetworkParams::callbackFunction(char const*)+0x96>
 800d15c:	29c0      	cmp	r1, #192	; 0xc0
 800d15e:	d00c      	beq.n	800d17a <NetworkParams::callbackFunction(char const*)+0x9e>
 800d160:	290a      	cmp	r1, #10
 800d162:	d10d      	bne.n	800d180 <NetworkParams::callbackFunction(char const*)+0xa4>
 800d164:	4a23      	ldr	r2, [pc, #140]	; (800d1f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d166:	6053      	str	r3, [r2, #4]
 800d168:	6813      	ldr	r3, [r2, #0]
 800d16a:	f043 0302 	orr.w	r3, r3, #2
 800d16e:	6013      	str	r3, [r2, #0]
 800d170:	e7ca      	b.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d172:	3a10      	subs	r2, #16
 800d174:	2a0f      	cmp	r2, #15
 800d176:	d8c7      	bhi.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d178:	e7f4      	b.n	800d164 <NetworkParams::callbackFunction(char const*)+0x88>
 800d17a:	2aa8      	cmp	r2, #168	; 0xa8
 800d17c:	d1c4      	bne.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d17e:	e7f1      	b.n	800d164 <NetworkParams::callbackFunction(char const*)+0x88>
 800d180:	2b00      	cmp	r3, #0
 800d182:	d0ef      	beq.n	800d164 <NetworkParams::callbackFunction(char const*)+0x88>
 800d184:	e7c0      	b.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d186:	4620      	mov	r0, r4
 800d188:	491d      	ldr	r1, [pc, #116]	; (800d200 <NetworkParams::callbackFunction(char const*)+0x124>)
 800d18a:	aa02      	add	r2, sp, #8
 800d18c:	f001 f8b7 	bl	800e2fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d190:	b970      	cbnz	r0, 800d1b0 <NetworkParams::callbackFunction(char const*)+0xd4>
 800d192:	9a02      	ldr	r2, [sp, #8]
 800d194:	2a00      	cmp	r2, #0
 800d196:	d0b7      	beq.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d198:	ba13      	rev	r3, r2
 800d19a:	43d9      	mvns	r1, r3
 800d19c:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d1a0:	d1b2      	bne.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d1a2:	4b14      	ldr	r3, [pc, #80]	; (800d1f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d1a4:	609a      	str	r2, [r3, #8]
 800d1a6:	681a      	ldr	r2, [r3, #0]
 800d1a8:	f042 0204 	orr.w	r2, r2, #4
 800d1ac:	601a      	str	r2, [r3, #0]
 800d1ae:	e7ab      	b.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d1b0:	4620      	mov	r0, r4
 800d1b2:	4914      	ldr	r1, [pc, #80]	; (800d204 <NetworkParams::callbackFunction(char const*)+0x128>)
 800d1b4:	aa02      	add	r2, sp, #8
 800d1b6:	f001 f8a2 	bl	800e2fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d1ba:	4d0e      	ldr	r5, [pc, #56]	; (800d1f4 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d1bc:	b930      	cbnz	r0, 800d1cc <NetworkParams::callbackFunction(char const*)+0xf0>
 800d1be:	9b02      	ldr	r3, [sp, #8]
 800d1c0:	60eb      	str	r3, [r5, #12]
 800d1c2:	682b      	ldr	r3, [r5, #0]
 800d1c4:	f043 0308 	orr.w	r3, r3, #8
 800d1c8:	602b      	str	r3, [r5, #0]
 800d1ca:	e79d      	b.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d1cc:	233f      	movs	r3, #63	; 0x3f
 800d1ce:	4620      	mov	r0, r4
 800d1d0:	9303      	str	r3, [sp, #12]
 800d1d2:	490d      	ldr	r1, [pc, #52]	; (800d208 <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d1d4:	ab03      	add	r3, sp, #12
 800d1d6:	f105 0215 	add.w	r2, r5, #21
 800d1da:	f001 f877 	bl	800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d1de:	2800      	cmp	r0, #0
 800d1e0:	d192      	bne.n	800d108 <NetworkParams::callbackFunction(char const*)+0x2c>
 800d1e2:	9b03      	ldr	r3, [sp, #12]
 800d1e4:	442b      	add	r3, r5
 800d1e6:	7558      	strb	r0, [r3, #21]
 800d1e8:	682b      	ldr	r3, [r5, #0]
 800d1ea:	f043 0320 	orr.w	r3, r3, #32
 800d1ee:	e7eb      	b.n	800d1c8 <NetworkParams::callbackFunction(char const*)+0xec>
 800d1f0:	0801234a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sp}
 800d1f4:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d1f8:	08012328 	stmdaeq	r1, {r3, r5, r8, r9, sp}
 800d1fc:	0801230d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sp}
 800d200:	08012341 	stmdaeq	r1, {r0, r6, r8, r9, sp}
 800d204:	08012318 	stmdaeq	r1, {r3, r4, r8, r9, sp}
 800d208:	08012338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp}

0800d20c <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d20c:	f7ff bf66 	b.w	800d0dc <NetworkParams::callbackFunction(char const*)>

0800d210 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d210:	b530      	push	{r4, r5, lr}
 800d212:	4614      	mov	r4, r2
 800d214:	461d      	mov	r5, r3
 800d216:	b087      	sub	sp, #28
 800d218:	2900      	cmp	r1, #0
 800d21a:	d040      	beq.n	800d29e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800d21c:	225e      	movs	r2, #94	; 0x5e
 800d21e:	4871      	ldr	r0, [pc, #452]	; (800d3e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d220:	f001 fdf1 	bl	800ee06 <memmove>
 800d224:	4622      	mov	r2, r4
 800d226:	462b      	mov	r3, r5
 800d228:	496f      	ldr	r1, [pc, #444]	; (800d3e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d22a:	a803      	add	r0, sp, #12
 800d22c:	f000 ff76 	bl	800e11c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d230:	4c6c      	ldr	r4, [pc, #432]	; (800d3e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d232:	6823      	ldr	r3, [r4, #0]
 800d234:	0799      	lsls	r1, r3, #30
 800d236:	bf5f      	itttt	pl
 800d238:	4a6c      	ldrpl	r2, [pc, #432]	; (800d3ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d23a:	6812      	ldrpl	r2, [r2, #0]
 800d23c:	6912      	ldrpl	r2, [r2, #16]
 800d23e:	6062      	strpl	r2, [r4, #4]
 800d240:	075a      	lsls	r2, r3, #29
 800d242:	bf5f      	itttt	pl
 800d244:	4a69      	ldrpl	r2, [pc, #420]	; (800d3ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d246:	6812      	ldrpl	r2, [r2, #0]
 800d248:	6992      	ldrpl	r2, [r2, #24]
 800d24a:	60a2      	strpl	r2, [r4, #8]
 800d24c:	071d      	lsls	r5, r3, #28
 800d24e:	bf5f      	itttt	pl
 800d250:	4a66      	ldrpl	r2, [pc, #408]	; (800d3ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d252:	6812      	ldrpl	r2, [r2, #0]
 800d254:	6952      	ldrpl	r2, [r2, #20]
 800d256:	60e2      	strpl	r2, [r4, #12]
 800d258:	0698      	lsls	r0, r3, #26
 800d25a:	d40c      	bmi.n	800d276 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800d25c:	223f      	movs	r2, #63	; 0x3f
 800d25e:	4b63      	ldr	r3, [pc, #396]	; (800d3ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d260:	4863      	ldr	r0, [pc, #396]	; (800d3f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d262:	681b      	ldr	r3, [r3, #0]
 800d264:	331b      	adds	r3, #27
 800d266:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d26a:	b9f1      	cbnz	r1, 800d2aa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800d26c:	f001 fde2 	bl	800ee34 <memset>
 800d270:	2300      	movs	r3, #0
 800d272:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d276:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d27a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d27e:	42a9      	cmp	r1, r5
 800d280:	d226      	bcs.n	800d2d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800d282:	9803      	ldr	r0, [sp, #12]
 800d284:	1a6d      	subs	r5, r5, r1
 800d286:	4408      	add	r0, r1
 800d288:	6821      	ldr	r1, [r4, #0]
 800d28a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d28e:	07c9      	lsls	r1, r1, #31
 800d290:	7d23      	ldrb	r3, [r4, #20]
 800d292:	d40f      	bmi.n	800d2b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800d294:	b97a      	cbnz	r2, 800d2b6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d296:	9300      	str	r3, [sp, #0]
 800d298:	4a56      	ldr	r2, [pc, #344]	; (800d3f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d29a:	4b57      	ldr	r3, [pc, #348]	; (800d3f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d29c:	e00e      	b.n	800d2bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d29e:	6800      	ldr	r0, [r0, #0]
 800d2a0:	4950      	ldr	r1, [pc, #320]	; (800d3e4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d2a2:	6803      	ldr	r3, [r0, #0]
 800d2a4:	68db      	ldr	r3, [r3, #12]
 800d2a6:	4798      	blx	r3
 800d2a8:	e7bc      	b.n	800d224 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d2aa:	3a01      	subs	r2, #1
 800d2ac:	f800 1b01 	strb.w	r1, [r0], #1
 800d2b0:	d1d9      	bne.n	800d266 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d2b2:	e7dd      	b.n	800d270 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800d2b4:	b30a      	cbz	r2, 800d2fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800d2b6:	9300      	str	r3, [sp, #0]
 800d2b8:	4a50      	ldr	r2, [pc, #320]	; (800d3fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d2ba:	4b4f      	ldr	r3, [pc, #316]	; (800d3f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d2bc:	4629      	mov	r1, r5
 800d2be:	f7fa ff57 	bl	8008170 <snprintf>
 800d2c2:	4285      	cmp	r5, r0
 800d2c4:	bfa2      	ittt	ge
 800d2c6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d2ca:	18c0      	addge	r0, r0, r3
 800d2cc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d2d0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d2d4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d2d8:	42a9      	cmp	r1, r5
 800d2da:	d221      	bcs.n	800d320 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800d2dc:	9803      	ldr	r0, [sp, #12]
 800d2de:	1a6d      	subs	r5, r5, r1
 800d2e0:	4408      	add	r0, r1
 800d2e2:	6821      	ldr	r1, [r4, #0]
 800d2e4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d2e8:	05c9      	lsls	r1, r1, #23
 800d2ea:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d2ee:	d408      	bmi.n	800d302 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800d2f0:	b94a      	cbnz	r2, 800d306 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d2f2:	9300      	str	r3, [sp, #0]
 800d2f4:	4a3f      	ldr	r2, [pc, #252]	; (800d3f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d2f6:	4b42      	ldr	r3, [pc, #264]	; (800d400 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d2f8:	e008      	b.n	800d30c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d2fa:	9300      	str	r3, [sp, #0]
 800d2fc:	4a41      	ldr	r2, [pc, #260]	; (800d404 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d2fe:	4b3e      	ldr	r3, [pc, #248]	; (800d3f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d300:	e7dc      	b.n	800d2bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d302:	2a00      	cmp	r2, #0
 800d304:	d03e      	beq.n	800d384 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800d306:	9300      	str	r3, [sp, #0]
 800d308:	4a3c      	ldr	r2, [pc, #240]	; (800d3fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d30a:	4b3d      	ldr	r3, [pc, #244]	; (800d400 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d30c:	4629      	mov	r1, r5
 800d30e:	f7fa ff2f 	bl	8008170 <snprintf>
 800d312:	4285      	cmp	r5, r0
 800d314:	bfa2      	ittt	ge
 800d316:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d31a:	18c0      	addge	r0, r0, r3
 800d31c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d320:	4939      	ldr	r1, [pc, #228]	; (800d408 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d322:	a803      	add	r0, sp, #12
 800d324:	f000 ff80 	bl	800e228 <PropertiesBuilder::AddComment(char const*)>
 800d328:	6823      	ldr	r3, [r4, #0]
 800d32a:	6862      	ldr	r2, [r4, #4]
 800d32c:	4937      	ldr	r1, [pc, #220]	; (800d40c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d32e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d332:	a803      	add	r0, sp, #12
 800d334:	f000 ff34 	bl	800e1a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d338:	6823      	ldr	r3, [r4, #0]
 800d33a:	68a2      	ldr	r2, [r4, #8]
 800d33c:	4934      	ldr	r1, [pc, #208]	; (800d410 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d33e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d342:	a803      	add	r0, sp, #12
 800d344:	f000 ff2c 	bl	800e1a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d348:	6823      	ldr	r3, [r4, #0]
 800d34a:	4932      	ldr	r1, [pc, #200]	; (800d414 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d34c:	68e2      	ldr	r2, [r4, #12]
 800d34e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d352:	a803      	add	r0, sp, #12
 800d354:	f000 ff24 	bl	800e1a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d358:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d35c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d360:	42a9      	cmp	r1, r5
 800d362:	d221      	bcs.n	800d3a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800d364:	6823      	ldr	r3, [r4, #0]
 800d366:	9803      	ldr	r0, [sp, #12]
 800d368:	f013 0f20 	tst.w	r3, #32
 800d36c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d370:	4b1f      	ldr	r3, [pc, #124]	; (800d3f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d372:	4408      	add	r0, r1
 800d374:	eba5 0501 	sub.w	r5, r5, r1
 800d378:	d108      	bne.n	800d38c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800d37a:	b942      	cbnz	r2, 800d38e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800d37c:	9300      	str	r3, [sp, #0]
 800d37e:	4a26      	ldr	r2, [pc, #152]	; (800d418 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d380:	4b26      	ldr	r3, [pc, #152]	; (800d41c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d382:	e007      	b.n	800d394 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d384:	9300      	str	r3, [sp, #0]
 800d386:	4a1f      	ldr	r2, [pc, #124]	; (800d404 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d388:	4b1d      	ldr	r3, [pc, #116]	; (800d400 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d38a:	e7bf      	b.n	800d30c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d38c:	b32a      	cbz	r2, 800d3da <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800d38e:	9300      	str	r3, [sp, #0]
 800d390:	4a23      	ldr	r2, [pc, #140]	; (800d420 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d392:	4b22      	ldr	r3, [pc, #136]	; (800d41c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d394:	4629      	mov	r1, r5
 800d396:	f7fa feeb 	bl	8008170 <snprintf>
 800d39a:	4285      	cmp	r5, r0
 800d39c:	bfa2      	ittt	ge
 800d39e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d3a2:	18c0      	addge	r0, r0, r3
 800d3a4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d3a8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d3ac:	b17b      	cbz	r3, 800d3ce <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800d3ae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d3b2:	9b03      	ldr	r3, [sp, #12]
 800d3b4:	4413      	add	r3, r2
 800d3b6:	227d      	movs	r2, #125	; 0x7d
 800d3b8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d3bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d3c0:	9903      	ldr	r1, [sp, #12]
 800d3c2:	54ca      	strb	r2, [r1, r3]
 800d3c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d3c8:	3301      	adds	r3, #1
 800d3ca:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d3ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d3d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3d4:	601a      	str	r2, [r3, #0]
 800d3d6:	b007      	add	sp, #28
 800d3d8:	bd30      	pop	{r4, r5, pc}
 800d3da:	9300      	str	r3, [sp, #0]
 800d3dc:	4a11      	ldr	r2, [pc, #68]	; (800d424 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d3de:	4b0f      	ldr	r3, [pc, #60]	; (800d41c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d3e0:	e7d8      	b.n	800d394 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d3e2:	bf00      	nop
 800d3e4:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d3e8:	08012353 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sp}
 800d3ec:	20009488 	andcs	r9, r0, r8, lsl #9
 800d3f0:	200094a1 	andcs	r9, r0, r1, lsr #9
 800d3f4:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 800d3f8:	0801234a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sp}
 800d3fc:	08010f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp}
 800d400:	08012328 	stmdaeq	r1, {r3, r5, r8, r9, sp}
 800d404:	08010f4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, sl, fp}
 800d408:	08012303 	stmdaeq	r1, {r0, r1, r8, r9, sp}
 800d40c:	0801230d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sp}
 800d410:	08012341 	stmdaeq	r1, {r0, r6, r8, r9, sp}
 800d414:	08012318 	stmdaeq	r1, {r3, r4, r8, r9, sp}
 800d418:	08010f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp}
 800d41c:	08012338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp}
 800d420:	08010f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp}
 800d424:	08010f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp}

0800d428 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d428:	b513      	push	{r0, r1, r4, lr}
 800d42a:	6804      	ldr	r4, [r0, #0]
 800d42c:	b914      	cbnz	r4, 800d434 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d42e:	601c      	str	r4, [r3, #0]
 800d430:	b002      	add	sp, #8
 800d432:	bd10      	pop	{r4, pc}
 800d434:	9300      	str	r3, [sp, #0]
 800d436:	4613      	mov	r3, r2
 800d438:	460a      	mov	r2, r1
 800d43a:	2100      	movs	r1, #0
 800d43c:	f7ff fee8 	bl	800d210 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800d440:	e7f6      	b.n	800d430 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d442 <NetworkParams::Dump()>:
 800d442:	4770      	bx	lr

0800d444 <memcpy.isra.0>:
 800d444:	3801      	subs	r0, #1
 800d446:	440a      	add	r2, r1
 800d448:	4291      	cmp	r1, r2
 800d44a:	d100      	bne.n	800d44e <memcpy.isra.0+0xa>
 800d44c:	4770      	bx	lr
 800d44e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d452:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d456:	e7f7      	b.n	800d448 <memcpy.isra.0+0x4>

0800d458 <arp_announce>:
 800d458:	4803      	ldr	r0, [pc, #12]	; (800d468 <arp_announce+0x10>)
 800d45a:	69c3      	ldr	r3, [r0, #28]
 800d45c:	b113      	cbz	r3, 800d464 <arp_announce+0xc>
 800d45e:	212a      	movs	r1, #42	; 0x2a
 800d460:	f002 bc4c 	b.w	800fcfc <emac_eth_send>
 800d464:	4770      	bx	lr
 800d466:	bf00      	nop
 800d468:	200094ec 	andcs	r9, r0, ip, ror #9

0800d46c <arp_handle_request>:
 800d46c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d46e:	2204      	movs	r2, #4
 800d470:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d474:	4604      	mov	r4, r0
 800d476:	eb0d 0002 	add.w	r0, sp, r2
 800d47a:	f7ff ffe3 	bl	800d444 <memcpy.isra.0>
 800d47e:	4b0d      	ldr	r3, [pc, #52]	; (800d4b4 <arp_handle_request+0x48>)
 800d480:	9a01      	ldr	r2, [sp, #4]
 800d482:	69db      	ldr	r3, [r3, #28]
 800d484:	429a      	cmp	r2, r3
 800d486:	d113      	bne.n	800d4b0 <arp_handle_request+0x44>
 800d488:	2206      	movs	r2, #6
 800d48a:	4d0b      	ldr	r5, [pc, #44]	; (800d4b8 <arp_handle_request+0x4c>)
 800d48c:	18a1      	adds	r1, r4, r2
 800d48e:	4628      	mov	r0, r5
 800d490:	f7ff ffd8 	bl	800d444 <memcpy.isra.0>
 800d494:	f104 0116 	add.w	r1, r4, #22
 800d498:	f105 0020 	add.w	r0, r5, #32
 800d49c:	2206      	movs	r2, #6
 800d49e:	f7ff ffd1 	bl	800d444 <memcpy.isra.0>
 800d4a2:	69e3      	ldr	r3, [r4, #28]
 800d4a4:	212a      	movs	r1, #42	; 0x2a
 800d4a6:	4628      	mov	r0, r5
 800d4a8:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d4ac:	f002 fc26 	bl	800fcfc <emac_eth_send>
 800d4b0:	b003      	add	sp, #12
 800d4b2:	bd30      	pop	{r4, r5, pc}
 800d4b4:	200094ec 	andcs	r9, r0, ip, ror #9
 800d4b8:	20009518 	andcs	r9, r0, r8, lsl r5

0800d4bc <arp_handle_reply>:
 800d4bc:	69c1      	ldr	r1, [r0, #28]
 800d4be:	3016      	adds	r0, #22
 800d4c0:	f000 b8ac 	b.w	800d61c <arp_cache_update>

0800d4c4 <arp_init>:
 800d4c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d4c8:	4604      	mov	r4, r0
 800d4ca:	460d      	mov	r5, r1
 800d4cc:	f000 f88c 	bl	800d5e8 <arp_cache_init>
 800d4d0:	2206      	movs	r2, #6
 800d4d2:	4621      	mov	r1, r4
 800d4d4:	482e      	ldr	r0, [pc, #184]	; (800d590 <arp_init+0xcc>)
 800d4d6:	682f      	ldr	r7, [r5, #0]
 800d4d8:	f7ff ffb4 	bl	800d444 <memcpy.isra.0>
 800d4dc:	4b2d      	ldr	r3, [pc, #180]	; (800d594 <arp_init+0xd0>)
 800d4de:	2507      	movs	r5, #7
 800d4e0:	461e      	mov	r6, r3
 800d4e2:	22ff      	movs	r2, #255	; 0xff
 800d4e4:	3d01      	subs	r5, #1
 800d4e6:	d146      	bne.n	800d576 <arp_init+0xb2>
 800d4e8:	4b2b      	ldr	r3, [pc, #172]	; (800d598 <arp_init+0xd4>)
 800d4ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d59c <arp_init+0xd8>
 800d4ee:	2206      	movs	r2, #6
 800d4f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800d4f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d4f8:	4621      	mov	r1, r4
 800d4fa:	4829      	ldr	r0, [pc, #164]	; (800d5a0 <arp_init+0xdc>)
 800d4fc:	82b3      	strh	r3, [r6, #20]
 800d4fe:	f7ff ffa1 	bl	800d444 <memcpy.isra.0>
 800d502:	2307      	movs	r3, #7
 800d504:	4a27      	ldr	r2, [pc, #156]	; (800d5a4 <arp_init+0xe0>)
 800d506:	61f7      	str	r7, [r6, #28]
 800d508:	3b01      	subs	r3, #1
 800d50a:	d137      	bne.n	800d57c <arp_init+0xb8>
 800d50c:	2206      	movs	r2, #6
 800d50e:	4621      	mov	r1, r4
 800d510:	4825      	ldr	r0, [pc, #148]	; (800d5a8 <arp_init+0xe4>)
 800d512:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800d516:	f7ff ff95 	bl	800d444 <memcpy.isra.0>
 800d51a:	4a24      	ldr	r2, [pc, #144]	; (800d5ac <arp_init+0xe8>)
 800d51c:	2306      	movs	r3, #6
 800d51e:	4615      	mov	r5, r2
 800d520:	21ff      	movs	r1, #255	; 0xff
 800d522:	3b01      	subs	r3, #1
 800d524:	d22d      	bcs.n	800d582 <arp_init+0xbe>
 800d526:	4b1c      	ldr	r3, [pc, #112]	; (800d598 <arp_init+0xd4>)
 800d528:	2206      	movs	r2, #6
 800d52a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800d52e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d532:	4621      	mov	r1, r4
 800d534:	481e      	ldr	r0, [pc, #120]	; (800d5b0 <arp_init+0xec>)
 800d536:	82ab      	strh	r3, [r5, #20]
 800d538:	f7ff ff84 	bl	800d444 <memcpy.isra.0>
 800d53c:	2307      	movs	r3, #7
 800d53e:	2100      	movs	r1, #0
 800d540:	4a1c      	ldr	r2, [pc, #112]	; (800d5b4 <arp_init+0xf0>)
 800d542:	61ef      	str	r7, [r5, #28]
 800d544:	3b01      	subs	r3, #1
 800d546:	d11f      	bne.n	800d588 <arp_init+0xc4>
 800d548:	2206      	movs	r2, #6
 800d54a:	4d1b      	ldr	r5, [pc, #108]	; (800d5b8 <arp_init+0xf4>)
 800d54c:	4621      	mov	r1, r4
 800d54e:	18a8      	adds	r0, r5, r2
 800d550:	f7ff ff78 	bl	800d444 <memcpy.isra.0>
 800d554:	4b10      	ldr	r3, [pc, #64]	; (800d598 <arp_init+0xd4>)
 800d556:	4621      	mov	r1, r4
 800d558:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800d55c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d560:	f105 0016 	add.w	r0, r5, #22
 800d564:	2206      	movs	r2, #6
 800d566:	82ab      	strh	r3, [r5, #20]
 800d568:	f7ff ff6c 	bl	800d444 <memcpy.isra.0>
 800d56c:	61ef      	str	r7, [r5, #28]
 800d56e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d572:	f7ff bf71 	b.w	800d458 <arp_announce>
 800d576:	f803 2b01 	strb.w	r2, [r3], #1
 800d57a:	e7b3      	b.n	800d4e4 <arp_init+0x20>
 800d57c:	f802 5b01 	strb.w	r5, [r2], #1
 800d580:	e7c2      	b.n	800d508 <arp_init+0x44>
 800d582:	f802 1b01 	strb.w	r1, [r2], #1
 800d586:	e7cc      	b.n	800d522 <arp_init+0x5e>
 800d588:	f802 1b01 	strb.w	r1, [r2], #1
 800d58c:	e7da      	b.n	800d544 <arp_init+0x80>
 800d58e:	bf00      	nop
 800d590:	200094f2 	strdcs	r9, [r0], -r2
 800d594:	200094ec 	andcs	r9, r0, ip, ror #9
 800d598:	01000608 	tsteq	r0, r8, lsl #12
 800d59c:	04060008 	streq	r0, [r6], #-8
 800d5a0:	20009502 	andcs	r9, r0, r2, lsl #10
 800d5a4:	2000950c 	andcs	r9, r0, ip, lsl #10
 800d5a8:	2000954a 	andcs	r9, r0, sl, asr #10
 800d5ac:	20009544 	andcs	r9, r0, r4, asr #10
 800d5b0:	2000955a 	andcs	r9, r0, sl, asr r5
 800d5b4:	20009564 	andcs	r9, r0, r4, ror #10
 800d5b8:	20009518 	andcs	r9, r0, r8, lsl r5

0800d5bc <arp_send_request>:
 800d5bc:	4b03      	ldr	r3, [pc, #12]	; (800d5cc <arp_send_request+0x10>)
 800d5be:	212a      	movs	r1, #42	; 0x2a
 800d5c0:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800d5c4:	4618      	mov	r0, r3
 800d5c6:	f002 bb99 	b.w	800fcfc <emac_eth_send>
 800d5ca:	bf00      	nop
 800d5cc:	20009544 	andcs	r9, r0, r4, asr #10

0800d5d0 <arp_handle>:
 800d5d0:	8a83      	ldrh	r3, [r0, #20]
 800d5d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d5d6:	d003      	beq.n	800d5e0 <arp_handle+0x10>
 800d5d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d5dc:	d002      	beq.n	800d5e4 <arp_handle+0x14>
 800d5de:	4770      	bx	lr
 800d5e0:	f7ff bf44 	b.w	800d46c <arp_handle_request>
 800d5e4:	f7ff bf6a 	b.w	800d4bc <arp_handle_reply>

0800d5e8 <arp_cache_init>:
 800d5e8:	2300      	movs	r3, #0
 800d5ea:	4618      	mov	r0, r3
 800d5ec:	4a09      	ldr	r2, [pc, #36]	; (800d614 <arp_cache_init+0x2c>)
 800d5ee:	b510      	push	{r4, lr}
 800d5f0:	8013      	strh	r3, [r2, #0]
 800d5f2:	4a09      	ldr	r2, [pc, #36]	; (800d618 <arp_cache_init+0x30>)
 800d5f4:	4611      	mov	r1, r2
 800d5f6:	f842 0c04 	str.w	r0, [r2, #-4]
 800d5fa:	1d94      	adds	r4, r2, #6
 800d5fc:	42a1      	cmp	r1, r4
 800d5fe:	d105      	bne.n	800d60c <arp_cache_init+0x24>
 800d600:	3303      	adds	r3, #3
 800d602:	2b60      	cmp	r3, #96	; 0x60
 800d604:	f102 020c 	add.w	r2, r2, #12
 800d608:	d1f4      	bne.n	800d5f4 <arp_cache_init+0xc>
 800d60a:	bd10      	pop	{r4, pc}
 800d60c:	f801 0b01 	strb.w	r0, [r1], #1
 800d610:	e7f4      	b.n	800d5fc <arp_cache_init+0x14>
 800d612:	bf00      	nop
 800d614:	200096f0 	strdcs	r9, [r0], -r0
 800d618:	20009574 	andcs	r9, r0, r4, ror r5

0800d61c <arp_cache_update>:
 800d61c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d61e:	4e11      	ldr	r6, [pc, #68]	; (800d664 <arp_cache_update+0x48>)
 800d620:	8833      	ldrh	r3, [r6, #0]
 800d622:	2b20      	cmp	r3, #32
 800d624:	d018      	beq.n	800d658 <arp_cache_update+0x3c>
 800d626:	2400      	movs	r4, #0
 800d628:	220c      	movs	r2, #12
 800d62a:	4d0f      	ldr	r5, [pc, #60]	; (800d668 <arp_cache_update+0x4c>)
 800d62c:	b2a7      	uxth	r7, r4
 800d62e:	42bb      	cmp	r3, r7
 800d630:	d80b      	bhi.n	800d64a <arp_cache_update+0x2e>
 800d632:	fb02 5203 	mla	r2, r2, r3, r5
 800d636:	1d84      	adds	r4, r0, #6
 800d638:	3203      	adds	r2, #3
 800d63a:	42a0      	cmp	r0, r4
 800d63c:	d10d      	bne.n	800d65a <arp_cache_update+0x3e>
 800d63e:	220c      	movs	r2, #12
 800d640:	435a      	muls	r2, r3
 800d642:	3301      	adds	r3, #1
 800d644:	50a9      	str	r1, [r5, r2]
 800d646:	8033      	strh	r3, [r6, #0]
 800d648:	e006      	b.n	800d658 <arp_cache_update+0x3c>
 800d64a:	3401      	adds	r4, #1
 800d64c:	fb02 5704 	mla	r7, r2, r4, r5
 800d650:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800d654:	428f      	cmp	r7, r1
 800d656:	d1e9      	bne.n	800d62c <arp_cache_update+0x10>
 800d658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d65a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d65e:	f802 7f01 	strb.w	r7, [r2, #1]!
 800d662:	e7ea      	b.n	800d63a <arp_cache_update+0x1e>
 800d664:	200096f0 	strdcs	r9, [r0], -r0
 800d668:	20009570 	andcs	r9, r0, r0, ror r5

0800d66c <arp_cache_lookup>:
 800d66c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d670:	2200      	movs	r2, #0
 800d672:	4606      	mov	r6, r0
 800d674:	460c      	mov	r4, r1
 800d676:	200c      	movs	r0, #12
 800d678:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800d700 <arp_cache_lookup+0x94>
 800d67c:	fb00 f302 	mul.w	r3, r0, r2
 800d680:	f853 1008 	ldr.w	r1, [r3, r8]
 800d684:	42b1      	cmp	r1, r6
 800d686:	d10d      	bne.n	800d6a4 <arp_cache_lookup+0x38>
 800d688:	3304      	adds	r3, #4
 800d68a:	4443      	add	r3, r8
 800d68c:	3c01      	subs	r4, #1
 800d68e:	1d9a      	adds	r2, r3, #6
 800d690:	4293      	cmp	r3, r2
 800d692:	d102      	bne.n	800d69a <arp_cache_lookup+0x2e>
 800d694:	4630      	mov	r0, r6
 800d696:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d69a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d69e:	f804 1f01 	strb.w	r1, [r4, #1]!
 800d6a2:	e7f5      	b.n	800d690 <arp_cache_lookup+0x24>
 800d6a4:	b111      	cbz	r1, 800d6ac <arp_cache_lookup+0x40>
 800d6a6:	3201      	adds	r2, #1
 800d6a8:	2a20      	cmp	r2, #32
 800d6aa:	d1e7      	bne.n	800d67c <arp_cache_lookup+0x10>
 800d6ac:	2704      	movs	r7, #4
 800d6ae:	f8df a054 	ldr.w	sl, [pc, #84]	; 800d704 <arp_cache_lookup+0x98>
 800d6b2:	f8ba 5000 	ldrh.w	r5, [sl]
 800d6b6:	3f01      	subs	r7, #1
 800d6b8:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800d6bc:	d101      	bne.n	800d6c2 <arp_cache_lookup+0x56>
 800d6be:	463e      	mov	r6, r7
 800d6c0:	e7e8      	b.n	800d694 <arp_cache_lookup+0x28>
 800d6c2:	4630      	mov	r0, r6
 800d6c4:	f7ff ff7a 	bl	800d5bc <arp_send_request>
 800d6c8:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800d6cc:	f1b9 0901 	subs.w	r9, r9, #1
 800d6d0:	f8ba 3000 	ldrh.w	r3, [sl]
 800d6d4:	d011      	beq.n	800d6fa <arp_cache_lookup+0x8e>
 800d6d6:	429d      	cmp	r5, r3
 800d6d8:	d00c      	beq.n	800d6f4 <arp_cache_lookup+0x88>
 800d6da:	230c      	movs	r3, #12
 800d6dc:	fb03 8505 	mla	r5, r3, r5, r8
 800d6e0:	3c01      	subs	r4, #1
 800d6e2:	1d2b      	adds	r3, r5, #4
 800d6e4:	350a      	adds	r5, #10
 800d6e6:	42ab      	cmp	r3, r5
 800d6e8:	d0d4      	beq.n	800d694 <arp_cache_lookup+0x28>
 800d6ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d6ee:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d6f2:	e7f8      	b.n	800d6e6 <arp_cache_lookup+0x7a>
 800d6f4:	f7fe f89e 	bl	800b834 <net_handle>
 800d6f8:	e7e8      	b.n	800d6cc <arp_cache_lookup+0x60>
 800d6fa:	429d      	cmp	r5, r3
 800d6fc:	d0db      	beq.n	800d6b6 <arp_cache_lookup+0x4a>
 800d6fe:	e7ec      	b.n	800d6da <arp_cache_lookup+0x6e>
 800d700:	20009570 	andcs	r9, r0, r0, ror r5
 800d704:	200096f0 	strdcs	r9, [r0], -r0

0800d708 <_parse_response>:
 800d708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d70c:	460c      	mov	r4, r1
 800d70e:	4e5b      	ldr	r6, [pc, #364]	; (800d87c <_parse_response+0x174>)
 800d710:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800d714:	6837      	ldr	r7, [r6, #0]
 800d716:	b2c5      	uxtb	r5, r0
 800d718:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800d71c:	f7fe f88a 	bl	800b834 <net_handle>
 800d720:	f44f 7209 	mov.w	r2, #548	; 0x224
 800d724:	4628      	mov	r0, r5
 800d726:	f8cd 8000 	str.w	r8, [sp]
 800d72a:	ab0a      	add	r3, sp, #40	; 0x28
 800d72c:	a90b      	add	r1, sp, #44	; 0x2c
 800d72e:	f7fe fd85 	bl	800c23c <udp_recv>
 800d732:	2800      	cmp	r0, #0
 800d734:	d05f      	beq.n	800d7f6 <_parse_response+0xee>
 800d736:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800d73a:	2b43      	cmp	r3, #67	; 0x43
 800d73c:	d15b      	bne.n	800d7f6 <_parse_response+0xee>
 800d73e:	aa12      	add	r2, sp, #72	; 0x48
 800d740:	1e63      	subs	r3, r4, #1
 800d742:	1d61      	adds	r1, r4, #5
 800d744:	428b      	cmp	r3, r1
 800d746:	d150      	bne.n	800d7ea <_parse_response+0xe2>
 800d748:	2100      	movs	r1, #0
 800d74a:	ab0b      	add	r3, sp, #44	; 0x2c
 800d74c:	181c      	adds	r4, r3, r0
 800d74e:	4608      	mov	r0, r1
 800d750:	4b4b      	ldr	r3, [pc, #300]	; (800d880 <_parse_response+0x178>)
 800d752:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800d756:	781a      	ldrb	r2, [r3, #0]
 800d758:	f893 b001 	ldrb.w	fp, [r3, #1]
 800d75c:	f893 c002 	ldrb.w	ip, [r3, #2]
 800d760:	78dd      	ldrb	r5, [r3, #3]
 800d762:	4b48      	ldr	r3, [pc, #288]	; (800d884 <_parse_response+0x17c>)
 800d764:	9207      	str	r2, [sp, #28]
 800d766:	781a      	ldrb	r2, [r3, #0]
 800d768:	789f      	ldrb	r7, [r3, #2]
 800d76a:	78de      	ldrb	r6, [r3, #3]
 800d76c:	9206      	str	r2, [sp, #24]
 800d76e:	785a      	ldrb	r2, [r3, #1]
 800d770:	4b45      	ldr	r3, [pc, #276]	; (800d888 <_parse_response+0x180>)
 800d772:	9203      	str	r2, [sp, #12]
 800d774:	f893 a000 	ldrb.w	sl, [r3]
 800d778:	f893 9001 	ldrb.w	r9, [r3, #1]
 800d77c:	f893 8002 	ldrb.w	r8, [r3, #2]
 800d780:	f893 e003 	ldrb.w	lr, [r3, #3]
 800d784:	ab47      	add	r3, sp, #284	; 0x11c
 800d786:	42a3      	cmp	r3, r4
 800d788:	d33f      	bcc.n	800d80a <_parse_response+0x102>
 800d78a:	9b04      	ldr	r3, [sp, #16]
 800d78c:	b143      	cbz	r3, 800d7a0 <_parse_response+0x98>
 800d78e:	4b3e      	ldr	r3, [pc, #248]	; (800d888 <_parse_response+0x180>)
 800d790:	f883 a000 	strb.w	sl, [r3]
 800d794:	f883 9001 	strb.w	r9, [r3, #1]
 800d798:	f883 8002 	strb.w	r8, [r3, #2]
 800d79c:	f883 e003 	strb.w	lr, [r3, #3]
 800d7a0:	9b05      	ldr	r3, [sp, #20]
 800d7a2:	b133      	cbz	r3, 800d7b2 <_parse_response+0xaa>
 800d7a4:	4b37      	ldr	r3, [pc, #220]	; (800d884 <_parse_response+0x17c>)
 800d7a6:	9a06      	ldr	r2, [sp, #24]
 800d7a8:	709f      	strb	r7, [r3, #2]
 800d7aa:	701a      	strb	r2, [r3, #0]
 800d7ac:	9a03      	ldr	r2, [sp, #12]
 800d7ae:	70de      	strb	r6, [r3, #3]
 800d7b0:	705a      	strb	r2, [r3, #1]
 800d7b2:	b139      	cbz	r1, 800d7c4 <_parse_response+0xbc>
 800d7b4:	4b32      	ldr	r3, [pc, #200]	; (800d880 <_parse_response+0x178>)
 800d7b6:	9a07      	ldr	r2, [sp, #28]
 800d7b8:	f883 b001 	strb.w	fp, [r3, #1]
 800d7bc:	701a      	strb	r2, [r3, #0]
 800d7be:	f883 c002 	strb.w	ip, [r3, #2]
 800d7c2:	70dd      	strb	r5, [r3, #3]
 800d7c4:	2802      	cmp	r0, #2
 800d7c6:	d10c      	bne.n	800d7e2 <_parse_response+0xda>
 800d7c8:	4b30      	ldr	r3, [pc, #192]	; (800d88c <_parse_response+0x184>)
 800d7ca:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800d7ce:	701a      	strb	r2, [r3, #0]
 800d7d0:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800d7d4:	705a      	strb	r2, [r3, #1]
 800d7d6:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800d7da:	709a      	strb	r2, [r3, #2]
 800d7dc:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800d7e0:	70da      	strb	r2, [r3, #3]
 800d7e2:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800d7e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7ea:	f812 cb01 	ldrb.w	ip, [r2], #1
 800d7ee:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800d7f2:	45e6      	cmp	lr, ip
 800d7f4:	d0a6      	beq.n	800d744 <_parse_response+0x3c>
 800d7f6:	6833      	ldr	r3, [r6, #0]
 800d7f8:	1bdb      	subs	r3, r3, r7
 800d7fa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d7fe:	d38b      	bcc.n	800d718 <_parse_response+0x10>
 800d800:	2800      	cmp	r0, #0
 800d802:	d1a1      	bne.n	800d748 <_parse_response+0x40>
 800d804:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d808:	e7eb      	b.n	800d7e2 <_parse_response+0xda>
 800d80a:	781a      	ldrb	r2, [r3, #0]
 800d80c:	2a35      	cmp	r2, #53	; 0x35
 800d80e:	d011      	beq.n	800d834 <_parse_response+0x12c>
 800d810:	d808      	bhi.n	800d824 <_parse_response+0x11c>
 800d812:	2a01      	cmp	r2, #1
 800d814:	d011      	beq.n	800d83a <_parse_response+0x132>
 800d816:	2a03      	cmp	r2, #3
 800d818:	d01a      	beq.n	800d850 <_parse_response+0x148>
 800d81a:	b14a      	cbz	r2, 800d830 <_parse_response+0x128>
 800d81c:	1c9a      	adds	r2, r3, #2
 800d81e:	785b      	ldrb	r3, [r3, #1]
 800d820:	4413      	add	r3, r2
 800d822:	e7b0      	b.n	800d786 <_parse_response+0x7e>
 800d824:	2a36      	cmp	r2, #54	; 0x36
 800d826:	d01f      	beq.n	800d868 <_parse_response+0x160>
 800d828:	2aff      	cmp	r2, #255	; 0xff
 800d82a:	d1f7      	bne.n	800d81c <_parse_response+0x114>
 800d82c:	4623      	mov	r3, r4
 800d82e:	e7aa      	b.n	800d786 <_parse_response+0x7e>
 800d830:	3301      	adds	r3, #1
 800d832:	e7a8      	b.n	800d786 <_parse_response+0x7e>
 800d834:	7898      	ldrb	r0, [r3, #2]
 800d836:	3303      	adds	r3, #3
 800d838:	e7a5      	b.n	800d786 <_parse_response+0x7e>
 800d83a:	f893 a002 	ldrb.w	sl, [r3, #2]
 800d83e:	f893 9003 	ldrb.w	r9, [r3, #3]
 800d842:	f893 8004 	ldrb.w	r8, [r3, #4]
 800d846:	f893 e005 	ldrb.w	lr, [r3, #5]
 800d84a:	9204      	str	r2, [sp, #16]
 800d84c:	3306      	adds	r3, #6
 800d84e:	e79a      	b.n	800d786 <_parse_response+0x7e>
 800d850:	789a      	ldrb	r2, [r3, #2]
 800d852:	791f      	ldrb	r7, [r3, #4]
 800d854:	9206      	str	r2, [sp, #24]
 800d856:	78da      	ldrb	r2, [r3, #3]
 800d858:	795e      	ldrb	r6, [r3, #5]
 800d85a:	9203      	str	r2, [sp, #12]
 800d85c:	785a      	ldrb	r2, [r3, #1]
 800d85e:	4413      	add	r3, r2
 800d860:	2201      	movs	r2, #1
 800d862:	3302      	adds	r3, #2
 800d864:	9205      	str	r2, [sp, #20]
 800d866:	e78e      	b.n	800d786 <_parse_response+0x7e>
 800d868:	789a      	ldrb	r2, [r3, #2]
 800d86a:	f893 b003 	ldrb.w	fp, [r3, #3]
 800d86e:	f893 c004 	ldrb.w	ip, [r3, #4]
 800d872:	795d      	ldrb	r5, [r3, #5]
 800d874:	2101      	movs	r1, #1
 800d876:	9207      	str	r2, [sp, #28]
 800d878:	3306      	adds	r3, #6
 800d87a:	e784      	b.n	800d786 <_parse_response+0x7e>
 800d87c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800d880:	20009924 	andcs	r9, r0, r4, lsr #18
 800d884:	200096f4 	strdcs	r9, [r0], -r4
 800d888:	200096fc 	strdcs	r9, [r0], -ip
 800d88c:	200096f8 	strdcs	r9, [r0], -r8

0800d890 <memcpy.isra.0>:
 800d890:	3801      	subs	r0, #1
 800d892:	440a      	add	r2, r1
 800d894:	4291      	cmp	r1, r2
 800d896:	d100      	bne.n	800d89a <memcpy.isra.0+0xa>
 800d898:	4770      	bx	lr
 800d89a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d89e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d8a2:	e7f7      	b.n	800d894 <memcpy.isra.0+0x4>

0800d8a4 <dhcp_client>:
 800d8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8a8:	b087      	sub	sp, #28
 800d8aa:	9203      	str	r2, [sp, #12]
 800d8ac:	4a77      	ldr	r2, [pc, #476]	; (800da8c <dhcp_client+0x1e8>)
 800d8ae:	460f      	mov	r7, r1
 800d8b0:	4605      	mov	r5, r0
 800d8b2:	f44f 7309 	mov.w	r3, #548	; 0x224
 800d8b6:	4614      	mov	r4, r2
 800d8b8:	2100      	movs	r1, #0
 800d8ba:	3b01      	subs	r3, #1
 800d8bc:	f802 1b01 	strb.w	r1, [r2], #1
 800d8c0:	d1fb      	bne.n	800d8ba <dhcp_client+0x16>
 800d8c2:	f240 1301 	movw	r3, #257	; 0x101
 800d8c6:	2206      	movs	r2, #6
 800d8c8:	4629      	mov	r1, r5
 800d8ca:	4871      	ldr	r0, [pc, #452]	; (800da90 <dhcp_client+0x1ec>)
 800d8cc:	8023      	strh	r3, [r4, #0]
 800d8ce:	70a2      	strb	r2, [r4, #2]
 800d8d0:	f7ff ffde 	bl	800d890 <memcpy.isra.0>
 800d8d4:	4b6f      	ldr	r3, [pc, #444]	; (800da94 <dhcp_client+0x1f0>)
 800d8d6:	2044      	movs	r0, #68	; 0x44
 800d8d8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800d8dc:	f240 1335 	movw	r3, #309	; 0x135
 800d8e0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800d8e4:	f7fe fc70 	bl	800c1c8 <udp_bind>
 800d8e8:	1e06      	subs	r6, r0, #0
 800d8ea:	f2c0 80c9 	blt.w	800da80 <dhcp_client+0x1dc>
 800d8ee:	f04f 0915 	mov.w	r9, #21
 800d8f2:	f8df a198 	ldr.w	sl, [pc, #408]	; 800da8c <dhcp_client+0x1e8>
 800d8f6:	f1b9 0901 	subs.w	r9, r9, #1
 800d8fa:	d11f      	bne.n	800d93c <dhcp_client+0x98>
 800d8fc:	464c      	mov	r4, r9
 800d8fe:	2044      	movs	r0, #68	; 0x44
 800d900:	f7fe fc7c 	bl	800c1fc <udp_unbind>
 800d904:	2c00      	cmp	r4, #0
 800d906:	f000 80be 	beq.w	800da86 <dhcp_client+0x1e2>
 800d90a:	2204      	movs	r2, #4
 800d90c:	4962      	ldr	r1, [pc, #392]	; (800da98 <dhcp_client+0x1f4>)
 800d90e:	a805      	add	r0, sp, #20
 800d910:	f7ff ffbe 	bl	800d890 <memcpy.isra.0>
 800d914:	9b05      	ldr	r3, [sp, #20]
 800d916:	2204      	movs	r2, #4
 800d918:	4960      	ldr	r1, [pc, #384]	; (800da9c <dhcp_client+0x1f8>)
 800d91a:	603b      	str	r3, [r7, #0]
 800d91c:	a805      	add	r0, sp, #20
 800d91e:	f7ff ffb7 	bl	800d890 <memcpy.isra.0>
 800d922:	9b05      	ldr	r3, [sp, #20]
 800d924:	a805      	add	r0, sp, #20
 800d926:	60bb      	str	r3, [r7, #8]
 800d928:	2204      	movs	r2, #4
 800d92a:	495d      	ldr	r1, [pc, #372]	; (800daa0 <dhcp_client+0x1fc>)
 800d92c:	f7ff ffb0 	bl	800d890 <memcpy.isra.0>
 800d930:	2000      	movs	r0, #0
 800d932:	9b05      	ldr	r3, [sp, #20]
 800d934:	607b      	str	r3, [r7, #4]
 800d936:	b007      	add	sp, #28
 800d938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d93c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800d940:	f240 1807 	movw	r8, #263	; 0x107
 800d944:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d948:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d94c:	782b      	ldrb	r3, [r5, #0]
 800d94e:	4a55      	ldr	r2, [pc, #340]	; (800daa4 <dhcp_client+0x200>)
 800d950:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d954:	786b      	ldrb	r3, [r5, #1]
 800d956:	fa5f fb86 	uxtb.w	fp, r6
 800d95a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d95e:	78ab      	ldrb	r3, [r5, #2]
 800d960:	4651      	mov	r1, sl
 800d962:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d966:	78eb      	ldrb	r3, [r5, #3]
 800d968:	4658      	mov	r0, fp
 800d96a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d96e:	792b      	ldrb	r3, [r5, #4]
 800d970:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d974:	796b      	ldrb	r3, [r5, #5]
 800d976:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d97a:	4b4b      	ldr	r3, [pc, #300]	; (800daa8 <dhcp_client+0x204>)
 800d97c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800d980:	23ff      	movs	r3, #255	; 0xff
 800d982:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800d986:	2343      	movs	r3, #67	; 0x43
 800d988:	f240 1205 	movw	r2, #261	; 0x105
 800d98c:	9300      	str	r3, [sp, #0]
 800d98e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d992:	f7fe fcaf 	bl	800c2f4 <udp_send>
 800d996:	4629      	mov	r1, r5
 800d998:	4630      	mov	r0, r6
 800d99a:	f7ff feb5 	bl	800d708 <_parse_response>
 800d99e:	2802      	cmp	r0, #2
 800d9a0:	d1a9      	bne.n	800d8f6 <dhcp_client+0x52>
 800d9a2:	f643 5303 	movw	r3, #15619	; 0x3d03
 800d9a6:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d9aa:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d9ae:	782b      	ldrb	r3, [r5, #0]
 800d9b0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800daac <dhcp_client+0x208>
 800d9b4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d9b8:	786b      	ldrb	r3, [r5, #1]
 800d9ba:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d9be:	78ab      	ldrb	r3, [r5, #2]
 800d9c0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d9c4:	78eb      	ldrb	r3, [r5, #3]
 800d9c6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d9ca:	792b      	ldrb	r3, [r5, #4]
 800d9cc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d9d0:	796b      	ldrb	r3, [r5, #5]
 800d9d2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d9d6:	f240 4332 	movw	r3, #1074	; 0x432
 800d9da:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800d9de:	4b2e      	ldr	r3, [pc, #184]	; (800da98 <dhcp_client+0x1f4>)
 800d9e0:	881a      	ldrh	r2, [r3, #0]
 800d9e2:	885b      	ldrh	r3, [r3, #2]
 800d9e4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800d9e8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800d9ec:	f240 4336 	movw	r3, #1078	; 0x436
 800d9f0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800d9f4:	4b2e      	ldr	r3, [pc, #184]	; (800dab0 <dhcp_client+0x20c>)
 800d9f6:	221e      	movs	r2, #30
 800d9f8:	681b      	ldr	r3, [r3, #0]
 800d9fa:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800d9fe:	230c      	movs	r3, #12
 800da00:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800da04:	9b03      	ldr	r3, [sp, #12]
 800da06:	1e58      	subs	r0, r3, #1
 800da08:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800da0c:	f1a2 0e1e 	sub.w	lr, r2, #30
 800da10:	1c51      	adds	r1, r2, #1
 800da12:	bb8b      	cbnz	r3, 800da78 <dhcp_client+0x1d4>
 800da14:	2037      	movs	r0, #55	; 0x37
 800da16:	18a3      	adds	r3, r4, r2
 800da18:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800da1c:	2006      	movs	r0, #6
 800da1e:	4421      	add	r1, r4
 800da20:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800da24:	2103      	movs	r1, #3
 800da26:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800da2a:	210f      	movs	r1, #15
 800da2c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800da30:	213a      	movs	r1, #58	; 0x3a
 800da32:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800da36:	213b      	movs	r1, #59	; 0x3b
 800da38:	f04f 0801 	mov.w	r8, #1
 800da3c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800da40:	21ff      	movs	r1, #255	; 0xff
 800da42:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800da46:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800da4a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800da4e:	2343      	movs	r3, #67	; 0x43
 800da50:	32f5      	adds	r2, #245	; 0xf5
 800da52:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800da56:	4651      	mov	r1, sl
 800da58:	9300      	str	r3, [sp, #0]
 800da5a:	b292      	uxth	r2, r2
 800da5c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800da60:	4658      	mov	r0, fp
 800da62:	f7fe fc47 	bl	800c2f4 <udp_send>
 800da66:	4629      	mov	r1, r5
 800da68:	4630      	mov	r0, r6
 800da6a:	f7ff fe4d 	bl	800d708 <_parse_response>
 800da6e:	2805      	cmp	r0, #5
 800da70:	f47f af41 	bne.w	800d8f6 <dhcp_client+0x52>
 800da74:	4644      	mov	r4, r8
 800da76:	e742      	b.n	800d8fe <dhcp_client+0x5a>
 800da78:	460a      	mov	r2, r1
 800da7a:	f80c 3b01 	strb.w	r3, [ip], #1
 800da7e:	e7c3      	b.n	800da08 <dhcp_client+0x164>
 800da80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800da84:	e757      	b.n	800d936 <dhcp_client+0x92>
 800da86:	f06f 0001 	mvn.w	r0, #1
 800da8a:	e754      	b.n	800d936 <dhcp_client+0x92>
 800da8c:	20009700 	andcs	r9, r0, r0, lsl #14
 800da90:	2000971c 	andcs	r9, r0, ip, lsl r7
 800da94:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800da98:	200096f8 	strdcs	r9, [r0], -r8
 800da9c:	200096f4 	strdcs	r9, [r0], -r4
 800daa0:	200096fc 	strdcs	r9, [r0], -ip
 800daa4:	03010637 	movweq	r0, #5687	; 0x1637
 800daa8:	3b3a0f06 	blcc	8e916c8 <__exidx_end+0xe7eefc>
 800daac:	2000980a 	andcs	r9, r0, sl, lsl #16
 800dab0:	20009924 	andcs	r9, r0, r4, lsr #18

0800dab4 <dhcp_client_release>:
 800dab4:	b507      	push	{r0, r1, r2, lr}
 800dab6:	2044      	movs	r0, #68	; 0x44
 800dab8:	f7fe fb86 	bl	800c1c8 <udp_bind>
 800dabc:	f243 6307 	movw	r3, #13831	; 0x3607
 800dac0:	4911      	ldr	r1, [pc, #68]	; (800db08 <dhcp_client_release+0x54>)
 800dac2:	b2c0      	uxtb	r0, r0
 800dac4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800dac8:	2304      	movs	r3, #4
 800daca:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800dace:	4b0f      	ldr	r3, [pc, #60]	; (800db0c <dhcp_client_release+0x58>)
 800dad0:	781a      	ldrb	r2, [r3, #0]
 800dad2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800dad6:	785a      	ldrb	r2, [r3, #1]
 800dad8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800dadc:	789a      	ldrb	r2, [r3, #2]
 800dade:	78db      	ldrb	r3, [r3, #3]
 800dae0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800dae4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800dae8:	23ff      	movs	r3, #255	; 0xff
 800daea:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800daee:	2343      	movs	r3, #67	; 0x43
 800daf0:	22fa      	movs	r2, #250	; 0xfa
 800daf2:	9300      	str	r3, [sp, #0]
 800daf4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800daf8:	f7fe fbfc 	bl	800c2f4 <udp_send>
 800dafc:	2044      	movs	r0, #68	; 0x44
 800dafe:	b003      	add	sp, #12
 800db00:	f85d eb04 	ldr.w	lr, [sp], #4
 800db04:	f7fe bb7a 	b.w	800c1fc <udp_unbind>
 800db08:	20009700 	andcs	r9, r0, r0, lsl #14
 800db0c:	20009924 	andcs	r9, r0, r4, lsr #18

0800db10 <memcpy.isra.0>:
 800db10:	3801      	subs	r0, #1
 800db12:	440a      	add	r2, r1
 800db14:	4291      	cmp	r1, r2
 800db16:	d100      	bne.n	800db1a <memcpy.isra.0+0xa>
 800db18:	4770      	bx	lr
 800db1a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800db1e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800db22:	e7f7      	b.n	800db14 <memcpy.isra.0+0x4>

0800db24 <_send_report>:
 800db24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800db26:	491c      	ldr	r1, [pc, #112]	; (800db98 <_send_report+0x74>)
 800db28:	4c1c      	ldr	r4, [pc, #112]	; (800db9c <_send_report+0x78>)
 800db2a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800db2e:	9001      	str	r0, [sp, #4]
 800db30:	70cb      	strb	r3, [r1, #3]
 800db32:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800db36:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800db3a:	710b      	strb	r3, [r1, #4]
 800db3c:	7148      	strb	r0, [r1, #5]
 800db3e:	2206      	movs	r2, #6
 800db40:	4620      	mov	r0, r4
 800db42:	f7ff ffe5 	bl	800db10 <memcpy.isra.0>
 800db46:	2204      	movs	r2, #4
 800db48:	2700      	movs	r7, #0
 800db4a:	4d15      	ldr	r5, [pc, #84]	; (800dba0 <_send_report+0x7c>)
 800db4c:	eb0d 0102 	add.w	r1, sp, r2
 800db50:	882b      	ldrh	r3, [r5, #0]
 800db52:	f104 001e 	add.w	r0, r4, #30
 800db56:	f104 060e 	add.w	r6, r4, #14
 800db5a:	8263      	strh	r3, [r4, #18]
 800db5c:	f7ff ffd8 	bl	800db10 <memcpy.isra.0>
 800db60:	2118      	movs	r1, #24
 800db62:	4630      	mov	r0, r6
 800db64:	8327      	strh	r7, [r4, #24]
 800db66:	f000 f9b7 	bl	800ded8 <net_chksum>
 800db6a:	2204      	movs	r2, #4
 800db6c:	8320      	strh	r0, [r4, #24]
 800db6e:	eb0d 0102 	add.w	r1, sp, r2
 800db72:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800db76:	f7ff ffcb 	bl	800db10 <memcpy.isra.0>
 800db7a:	2120      	movs	r1, #32
 800db7c:	4630      	mov	r0, r6
 800db7e:	8527      	strh	r7, [r4, #40]	; 0x28
 800db80:	f000 f9aa 	bl	800ded8 <net_chksum>
 800db84:	212e      	movs	r1, #46	; 0x2e
 800db86:	8520      	strh	r0, [r4, #40]	; 0x28
 800db88:	4620      	mov	r0, r4
 800db8a:	f002 f8b7 	bl	800fcfc <emac_eth_send>
 800db8e:	882b      	ldrh	r3, [r5, #0]
 800db90:	3301      	adds	r3, #1
 800db92:	802b      	strh	r3, [r5, #0]
 800db94:	b003      	add	sp, #12
 800db96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db98:	20009a80 	andcs	r9, r0, r0, lsl #21
 800db9c:	20009a88 	andcs	r9, r0, r8, lsl #21
 800dba0:	20009a48 	andcs	r9, r0, r8, asr #20

0800dba4 <igmp_set_ip>:
 800dba4:	b507      	push	{r0, r1, r2, lr}
 800dba6:	2204      	movs	r2, #4
 800dba8:	6803      	ldr	r3, [r0, #0]
 800dbaa:	eb0d 0102 	add.w	r1, sp, r2
 800dbae:	4806      	ldr	r0, [pc, #24]	; (800dbc8 <igmp_set_ip+0x24>)
 800dbb0:	9301      	str	r3, [sp, #4]
 800dbb2:	f7ff ffad 	bl	800db10 <memcpy.isra.0>
 800dbb6:	2204      	movs	r2, #4
 800dbb8:	4804      	ldr	r0, [pc, #16]	; (800dbcc <igmp_set_ip+0x28>)
 800dbba:	eb0d 0102 	add.w	r1, sp, r2
 800dbbe:	f7ff ffa7 	bl	800db10 <memcpy.isra.0>
 800dbc2:	b003      	add	sp, #12
 800dbc4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dbc8:	20009aa2 	andcs	r9, r0, r2, lsr #21
 800dbcc:	20009a6a 	andcs	r9, r0, sl, ror #20

0800dbd0 <igmp_init>:
 800dbd0:	2200      	movs	r2, #0
 800dbd2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dbd6:	4605      	mov	r5, r0
 800dbd8:	4608      	mov	r0, r1
 800dbda:	4611      	mov	r1, r2
 800dbdc:	4b23      	ldr	r3, [pc, #140]	; (800dc6c <igmp_init+0x9c>)
 800dbde:	f103 0408 	add.w	r4, r3, #8
 800dbe2:	42a3      	cmp	r3, r4
 800dbe4:	d13e      	bne.n	800dc64 <igmp_init+0x94>
 800dbe6:	3201      	adds	r2, #1
 800dbe8:	2a24      	cmp	r2, #36	; 0x24
 800dbea:	d1f8      	bne.n	800dbde <igmp_init+0xe>
 800dbec:	2600      	movs	r6, #0
 800dbee:	4b20      	ldr	r3, [pc, #128]	; (800dc70 <igmp_init+0xa0>)
 800dbf0:	4c20      	ldr	r4, [pc, #128]	; (800dc74 <igmp_init+0xa4>)
 800dbf2:	601e      	str	r6, [r3, #0]
 800dbf4:	4b20      	ldr	r3, [pc, #128]	; (800dc78 <igmp_init+0xa8>)
 800dbf6:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800dbfa:	801e      	strh	r6, [r3, #0]
 800dbfc:	f7ff ffd2 	bl	800dba4 <igmp_set_ip>
 800dc00:	2201      	movs	r2, #1
 800dc02:	4b1e      	ldr	r3, [pc, #120]	; (800dc7c <igmp_init+0xac>)
 800dc04:	4629      	mov	r1, r5
 800dc06:	801a      	strh	r2, [r3, #0]
 800dc08:	225e      	movs	r2, #94	; 0x5e
 800dc0a:	709a      	strb	r2, [r3, #2]
 800dc0c:	2206      	movs	r2, #6
 800dc0e:	18a0      	adds	r0, r4, r2
 800dc10:	f7ff ff7e 	bl	800db10 <memcpy.isra.0>
 800dc14:	f240 4394 	movw	r3, #1172	; 0x494
 800dc18:	8463      	strh	r3, [r4, #34]	; 0x22
 800dc1a:	2316      	movs	r3, #22
 800dc1c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800dc80 <igmp_init+0xb0>
 800dc20:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800dc84 <igmp_init+0xb4>
 800dc24:	84e3      	strh	r3, [r4, #38]	; 0x26
 800dc26:	f8c4 9014 	str.w	r9, [r4, #20]
 800dc2a:	4b17      	ldr	r3, [pc, #92]	; (800dc88 <igmp_init+0xb8>)
 800dc2c:	f8c4 800c 	str.w	r8, [r4, #12]
 800dc30:	8227      	strh	r7, [r4, #16]
 800dc32:	84a6      	strh	r6, [r4, #36]	; 0x24
 800dc34:	4c15      	ldr	r4, [pc, #84]	; (800dc8c <igmp_init+0xbc>)
 800dc36:	2206      	movs	r2, #6
 800dc38:	6023      	str	r3, [r4, #0]
 800dc3a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800dc3e:	18a0      	adds	r0, r4, r2
 800dc40:	80a3      	strh	r3, [r4, #4]
 800dc42:	4629      	mov	r1, r5
 800dc44:	f7ff ff64 	bl	800db10 <memcpy.isra.0>
 800dc48:	23e0      	movs	r3, #224	; 0xe0
 800dc4a:	83e3      	strh	r3, [r4, #30]
 800dc4c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 800dc50:	4a0f      	ldr	r2, [pc, #60]	; (800dc90 <igmp_init+0xc0>)
 800dc52:	f8c4 9014 	str.w	r9, [r4, #20]
 800dc56:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800dc5a:	f8c4 800c 	str.w	r8, [r4, #12]
 800dc5e:	8227      	strh	r7, [r4, #16]
 800dc60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dc64:	f803 1b01 	strb.w	r1, [r3], #1
 800dc68:	e7bb      	b.n	800dbe2 <igmp_init+0x12>
 800dc6a:	bf00      	nop
 800dc6c:	20009928 	andcs	r9, r0, r8, lsr #18
 800dc70:	20009a4c 	andcs	r9, r0, ip, asr #20
 800dc74:	20009a88 	andcs	r9, r0, r8, lsl #21
 800dc78:	20009a48 	andcs	r9, r0, r8, asr #20
 800dc7c:	20009a80 	andcs	r9, r0, r0, lsl #21
 800dc80:	02010040 	andeq	r0, r1, #64	; 0x40
 800dc84:	00460008 	subeq	r0, r6, r8
 800dc88:	005e0001 	subseq	r0, lr, r1
 800dc8c:	20009a50 	andcs	r9, r0, r0, asr sl
 800dc90:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800dc94 <igmp_handle>:
 800dc94:	7b83      	ldrb	r3, [r0, #14]
 800dc96:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dc9a:	2b45      	cmp	r3, #69	; 0x45
 800dc9c:	d116      	bne.n	800dccc <igmp_handle+0x38>
 800dc9e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800dca2:	2b11      	cmp	r3, #17
 800dca4:	d112      	bne.n	800dccc <igmp_handle+0x38>
 800dca6:	4b20      	ldr	r3, [pc, #128]	; (800dd28 <igmp_handle+0x94>)
 800dca8:	f100 051e 	add.w	r5, r0, #30
 800dcac:	9300      	str	r3, [sp, #0]
 800dcae:	466a      	mov	r2, sp
 800dcb0:	462b      	mov	r3, r5
 800dcb2:	f100 0622 	add.w	r6, r0, #34	; 0x22
 800dcb6:	42b3      	cmp	r3, r6
 800dcb8:	d10b      	bne.n	800dcd2 <igmp_handle+0x3e>
 800dcba:	2401      	movs	r4, #1
 800dcbc:	2100      	movs	r1, #0
 800dcbe:	f04f 0c01 	mov.w	ip, #1
 800dcc2:	4b1a      	ldr	r3, [pc, #104]	; (800dd2c <igmp_handle+0x98>)
 800dcc4:	4a1a      	ldr	r2, [pc, #104]	; (800dd30 <igmp_handle+0x9c>)
 800dcc6:	681f      	ldr	r7, [r3, #0]
 800dcc8:	428f      	cmp	r7, r1
 800dcca:	d10a      	bne.n	800dce2 <igmp_handle+0x4e>
 800dccc:	b003      	add	sp, #12
 800dcce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dcd2:	f813 4b01 	ldrb.w	r4, [r3], #1
 800dcd6:	f812 1b01 	ldrb.w	r1, [r2], #1
 800dcda:	428c      	cmp	r4, r1
 800dcdc:	d0eb      	beq.n	800dcb6 <igmp_handle+0x22>
 800dcde:	2400      	movs	r4, #0
 800dce0:	e7ec      	b.n	800dcbc <igmp_handle+0x28>
 800dce2:	6813      	ldr	r3, [r2, #0]
 800dce4:	9301      	str	r3, [sp, #4]
 800dce6:	b924      	cbnz	r4, 800dcf2 <igmp_handle+0x5e>
 800dce8:	462b      	mov	r3, r5
 800dcea:	f10d 0e04 	add.w	lr, sp, #4
 800dcee:	42b3      	cmp	r3, r6
 800dcf0:	d10e      	bne.n	800dd10 <igmp_handle+0x7c>
 800dcf2:	f892 e005 	ldrb.w	lr, [r2, #5]
 800dcf6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800dcfa:	f1be 0f01 	cmp.w	lr, #1
 800dcfe:	d110      	bne.n	800dd22 <igmp_handle+0x8e>
 800dd00:	f892 e004 	ldrb.w	lr, [r2, #4]
 800dd04:	459e      	cmp	lr, r3
 800dd06:	d909      	bls.n	800dd1c <igmp_handle+0x88>
 800dd08:	085b      	lsrs	r3, r3, #1
 800dd0a:	3301      	adds	r3, #1
 800dd0c:	7113      	strb	r3, [r2, #4]
 800dd0e:	e005      	b.n	800dd1c <igmp_handle+0x88>
 800dd10:	f813 9b01 	ldrb.w	r9, [r3], #1
 800dd14:	f81e 8b01 	ldrb.w	r8, [lr], #1
 800dd18:	45c1      	cmp	r9, r8
 800dd1a:	d0e8      	beq.n	800dcee <igmp_handle+0x5a>
 800dd1c:	3101      	adds	r1, #1
 800dd1e:	3208      	adds	r2, #8
 800dd20:	e7d2      	b.n	800dcc8 <igmp_handle+0x34>
 800dd22:	f882 c005 	strb.w	ip, [r2, #5]
 800dd26:	e7ef      	b.n	800dd08 <igmp_handle+0x74>
 800dd28:	010000e0 	smlatteq	r0, r0, r0, r0
 800dd2c:	20009a4c 	andcs	r9, r0, ip, asr #20
 800dd30:	20009928 	andcs	r9, r0, r8, lsr #18

0800dd34 <igmp_timer>:
 800dd34:	b570      	push	{r4, r5, r6, lr}
 800dd36:	2500      	movs	r5, #0
 800dd38:	2602      	movs	r6, #2
 800dd3a:	4c0a      	ldr	r4, [pc, #40]	; (800dd64 <igmp_timer+0x30>)
 800dd3c:	7963      	ldrb	r3, [r4, #5]
 800dd3e:	2b01      	cmp	r3, #1
 800dd40:	d109      	bne.n	800dd56 <igmp_timer+0x22>
 800dd42:	7923      	ldrb	r3, [r4, #4]
 800dd44:	b13b      	cbz	r3, 800dd56 <igmp_timer+0x22>
 800dd46:	3b01      	subs	r3, #1
 800dd48:	b2db      	uxtb	r3, r3
 800dd4a:	7123      	strb	r3, [r4, #4]
 800dd4c:	b91b      	cbnz	r3, 800dd56 <igmp_timer+0x22>
 800dd4e:	6820      	ldr	r0, [r4, #0]
 800dd50:	f7ff fee8 	bl	800db24 <_send_report>
 800dd54:	7166      	strb	r6, [r4, #5]
 800dd56:	3501      	adds	r5, #1
 800dd58:	2d24      	cmp	r5, #36	; 0x24
 800dd5a:	f104 0408 	add.w	r4, r4, #8
 800dd5e:	d1ed      	bne.n	800dd3c <igmp_timer+0x8>
 800dd60:	bd70      	pop	{r4, r5, r6, pc}
 800dd62:	bf00      	nop
 800dd64:	20009928 	andcs	r9, r0, r8, lsr #18

0800dd68 <igmp_join>:
 800dd68:	b538      	push	{r3, r4, r5, lr}
 800dd6a:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800dd6e:	2be0      	cmp	r3, #224	; 0xe0
 800dd70:	d11b      	bne.n	800ddaa <igmp_join+0x42>
 800dd72:	4911      	ldr	r1, [pc, #68]	; (800ddb8 <igmp_join+0x50>)
 800dd74:	680c      	ldr	r4, [r1, #0]
 800dd76:	2c24      	cmp	r4, #36	; 0x24
 800dd78:	d01a      	beq.n	800ddb0 <igmp_join+0x48>
 800dd7a:	2300      	movs	r3, #0
 800dd7c:	4a0f      	ldr	r2, [pc, #60]	; (800ddbc <igmp_join+0x54>)
 800dd7e:	429c      	cmp	r4, r3
 800dd80:	dc0d      	bgt.n	800dd9e <igmp_join+0x36>
 800dd82:	f44f 7381 	mov.w	r3, #258	; 0x102
 800dd86:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800dd8a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800dd8e:	8093      	strh	r3, [r2, #4]
 800dd90:	1c63      	adds	r3, r4, #1
 800dd92:	600b      	str	r3, [r1, #0]
 800dd94:	f7ff fec6 	bl	800db24 <_send_report>
 800dd98:	4623      	mov	r3, r4
 800dd9a:	4618      	mov	r0, r3
 800dd9c:	bd38      	pop	{r3, r4, r5, pc}
 800dd9e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800dda2:	4285      	cmp	r5, r0
 800dda4:	d0f9      	beq.n	800dd9a <igmp_join+0x32>
 800dda6:	3301      	adds	r3, #1
 800dda8:	e7e9      	b.n	800dd7e <igmp_join+0x16>
 800ddaa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ddae:	e7f4      	b.n	800dd9a <igmp_join+0x32>
 800ddb0:	f06f 0301 	mvn.w	r3, #1
 800ddb4:	e7f1      	b.n	800dd9a <igmp_join+0x32>
 800ddb6:	bf00      	nop
 800ddb8:	20009a4c 	andcs	r9, r0, ip, asr #20
 800ddbc:	20009928 	andcs	r9, r0, r8, lsr #18

0800ddc0 <igmp_leave>:
 800ddc0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ddc4:	2600      	movs	r6, #0
 800ddc6:	4f1c      	ldr	r7, [pc, #112]	; (800de38 <igmp_leave+0x78>)
 800ddc8:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800ddcc:	4283      	cmp	r3, r0
 800ddce:	d007      	beq.n	800dde0 <igmp_leave+0x20>
 800ddd0:	3601      	adds	r6, #1
 800ddd2:	2e24      	cmp	r6, #36	; 0x24
 800ddd4:	d1f8      	bne.n	800ddc8 <igmp_leave+0x8>
 800ddd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ddda:	b002      	add	sp, #8
 800dddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dde0:	2400      	movs	r4, #0
 800dde2:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800de3c <igmp_leave+0x7c>
 800dde6:	4d16      	ldr	r5, [pc, #88]	; (800de40 <igmp_leave+0x80>)
 800dde8:	f8b8 3000 	ldrh.w	r3, [r8]
 800ddec:	2118      	movs	r1, #24
 800ddee:	9001      	str	r0, [sp, #4]
 800ddf0:	4814      	ldr	r0, [pc, #80]	; (800de44 <igmp_leave+0x84>)
 800ddf2:	826b      	strh	r3, [r5, #18]
 800ddf4:	832c      	strh	r4, [r5, #24]
 800ddf6:	f000 f86f 	bl	800ded8 <net_chksum>
 800ddfa:	2204      	movs	r2, #4
 800ddfc:	8328      	strh	r0, [r5, #24]
 800ddfe:	eb0d 0102 	add.w	r1, sp, r2
 800de02:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800de06:	f7ff fe83 	bl	800db10 <memcpy.isra.0>
 800de0a:	2120      	movs	r1, #32
 800de0c:	f105 000e 	add.w	r0, r5, #14
 800de10:	852c      	strh	r4, [r5, #40]	; 0x28
 800de12:	f000 f861 	bl	800ded8 <net_chksum>
 800de16:	212e      	movs	r1, #46	; 0x2e
 800de18:	8528      	strh	r0, [r5, #40]	; 0x28
 800de1a:	4628      	mov	r0, r5
 800de1c:	f001 ff6e 	bl	800fcfc <emac_eth_send>
 800de20:	f8b8 3000 	ldrh.w	r3, [r8]
 800de24:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800de28:	3301      	adds	r3, #1
 800de2a:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800de2e:	4620      	mov	r0, r4
 800de30:	f8a8 3000 	strh.w	r3, [r8]
 800de34:	80b4      	strh	r4, [r6, #4]
 800de36:	e7d0      	b.n	800ddda <igmp_leave+0x1a>
 800de38:	20009928 	andcs	r9, r0, r8, lsr #18
 800de3c:	20009a48 	andcs	r9, r0, r8, asr #20
 800de40:	20009a50 	andcs	r9, r0, r0, asr sl
 800de44:	20009a96 	mulcs	r0, r6, sl

0800de48 <igmp_shutdown>:
 800de48:	b570      	push	{r4, r5, r6, lr}
 800de4a:	2500      	movs	r5, #0
 800de4c:	462e      	mov	r6, r5
 800de4e:	4c07      	ldr	r4, [pc, #28]	; (800de6c <igmp_shutdown+0x24>)
 800de50:	6820      	ldr	r0, [r4, #0]
 800de52:	b120      	cbz	r0, 800de5e <igmp_shutdown+0x16>
 800de54:	f7ff ffb4 	bl	800ddc0 <igmp_leave>
 800de58:	6026      	str	r6, [r4, #0]
 800de5a:	7166      	strb	r6, [r4, #5]
 800de5c:	7126      	strb	r6, [r4, #4]
 800de5e:	3501      	adds	r5, #1
 800de60:	2d24      	cmp	r5, #36	; 0x24
 800de62:	f104 0408 	add.w	r4, r4, #8
 800de66:	d1f3      	bne.n	800de50 <igmp_shutdown+0x8>
 800de68:	bd70      	pop	{r4, r5, r6, pc}
 800de6a:	bf00      	nop
 800de6c:	20009928 	andcs	r9, r0, r8, lsr #18

0800de70 <ip_set_ip>:
 800de70:	b510      	push	{r4, lr}
 800de72:	4604      	mov	r4, r0
 800de74:	f7fe f900 	bl	800c078 <udp_set_ip>
 800de78:	4620      	mov	r0, r4
 800de7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de7e:	f7ff be91 	b.w	800dba4 <igmp_set_ip>

0800de82 <ip_init>:
 800de82:	b538      	push	{r3, r4, r5, lr}
 800de84:	4604      	mov	r4, r0
 800de86:	460d      	mov	r5, r1
 800de88:	f7fe f916 	bl	800c0b8 <udp_init>
 800de8c:	4629      	mov	r1, r5
 800de8e:	4620      	mov	r0, r4
 800de90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de94:	f7ff be9c 	b.w	800dbd0 <igmp_init>

0800de98 <ip_shutdown>:
 800de98:	b508      	push	{r3, lr}
 800de9a:	f7ff ffd5 	bl	800de48 <igmp_shutdown>
 800de9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dea2:	f7fe b93b 	b.w	800c11c <udp_shutdown>

0800dea6 <ip_handle>:
 800dea6:	7b82      	ldrb	r2, [r0, #14]
 800dea8:	7dc3      	ldrb	r3, [r0, #23]
 800deaa:	2a45      	cmp	r2, #69	; 0x45
 800deac:	d003      	beq.n	800deb6 <ip_handle+0x10>
 800deae:	2b02      	cmp	r3, #2
 800deb0:	d111      	bne.n	800ded6 <ip_handle+0x30>
 800deb2:	f7ff beef 	b.w	800dc94 <igmp_handle>
 800deb6:	2b06      	cmp	r3, #6
 800deb8:	d00b      	beq.n	800ded2 <ip_handle+0x2c>
 800deba:	d804      	bhi.n	800dec6 <ip_handle+0x20>
 800debc:	2b01      	cmp	r3, #1
 800debe:	d006      	beq.n	800dece <ip_handle+0x28>
 800dec0:	2b02      	cmp	r3, #2
 800dec2:	d0f6      	beq.n	800deb2 <ip_handle+0xc>
 800dec4:	4770      	bx	lr
 800dec6:	2b11      	cmp	r3, #17
 800dec8:	d105      	bne.n	800ded6 <ip_handle+0x30>
 800deca:	f7fe b929 	b.w	800c120 <udp_handle>
 800dece:	f000 b82b 	b.w	800df28 <icmp_handle>
 800ded2:	f7fd be75 	b.w	800bbc0 <tcp_handle>
 800ded6:	4770      	bx	lr

0800ded8 <net_chksum>:
 800ded8:	2300      	movs	r3, #0
 800deda:	f021 0201 	bic.w	r2, r1, #1
 800dede:	b530      	push	{r4, r5, lr}
 800dee0:	4402      	add	r2, r0
 800dee2:	084c      	lsrs	r4, r1, #1
 800dee4:	4290      	cmp	r0, r2
 800dee6:	d10e      	bne.n	800df06 <net_chksum+0x2e>
 800dee8:	f06f 0201 	mvn.w	r2, #1
 800deec:	fb02 1104 	mla	r1, r2, r4, r1
 800def0:	b121      	cbz	r1, 800defc <net_chksum+0x24>
 800def2:	7802      	ldrb	r2, [r0, #0]
 800def4:	0212      	lsls	r2, r2, #8
 800def6:	ba52      	rev16	r2, r2
 800def8:	b292      	uxth	r2, r2
 800defa:	4413      	add	r3, r2
 800defc:	0c1a      	lsrs	r2, r3, #16
 800defe:	d106      	bne.n	800df0e <net_chksum+0x36>
 800df00:	43d8      	mvns	r0, r3
 800df02:	b280      	uxth	r0, r0
 800df04:	bd30      	pop	{r4, r5, pc}
 800df06:	f830 5b02 	ldrh.w	r5, [r0], #2
 800df0a:	442b      	add	r3, r5
 800df0c:	e7ea      	b.n	800dee4 <net_chksum+0xc>
 800df0e:	b29b      	uxth	r3, r3
 800df10:	e7f3      	b.n	800defa <net_chksum+0x22>

0800df12 <memcpy.isra.0>:
 800df12:	3801      	subs	r0, #1
 800df14:	440a      	add	r2, r1
 800df16:	4291      	cmp	r1, r2
 800df18:	d100      	bne.n	800df1c <memcpy.isra.0+0xa>
 800df1a:	4770      	bx	lr
 800df1c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800df20:	f800 3f01 	strb.w	r3, [r0, #1]!
 800df24:	e7f7      	b.n	800df16 <memcpy.isra.0+0x4>
	...

0800df28 <icmp_handle>:
 800df28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800df2a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800df2e:	4604      	mov	r4, r0
 800df30:	2b08      	cmp	r3, #8
 800df32:	d13e      	bne.n	800dfb2 <icmp_handle+0x8a>
 800df34:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 800df38:	2d00      	cmp	r5, #0
 800df3a:	d13a      	bne.n	800dfb2 <icmp_handle+0x8a>
 800df3c:	1d86      	adds	r6, r0, #6
 800df3e:	4631      	mov	r1, r6
 800df40:	2206      	movs	r2, #6
 800df42:	f7ff ffe6 	bl	800df12 <memcpy.isra.0>
 800df46:	4630      	mov	r0, r6
 800df48:	2206      	movs	r2, #6
 800df4a:	491b      	ldr	r1, [pc, #108]	; (800dfb8 <icmp_handle+0x90>)
 800df4c:	f7ff ffe1 	bl	800df12 <memcpy.isra.0>
 800df50:	8a63      	ldrh	r3, [r4, #18]
 800df52:	f104 061a 	add.w	r6, r4, #26
 800df56:	43db      	mvns	r3, r3
 800df58:	4631      	mov	r1, r6
 800df5a:	2204      	movs	r2, #4
 800df5c:	8263      	strh	r3, [r4, #18]
 800df5e:	f104 001e 	add.w	r0, r4, #30
 800df62:	f7ff ffd6 	bl	800df12 <memcpy.isra.0>
 800df66:	2204      	movs	r2, #4
 800df68:	4b14      	ldr	r3, [pc, #80]	; (800dfbc <icmp_handle+0x94>)
 800df6a:	eb0d 0102 	add.w	r1, sp, r2
 800df6e:	681b      	ldr	r3, [r3, #0]
 800df70:	4630      	mov	r0, r6
 800df72:	f104 060e 	add.w	r6, r4, #14
 800df76:	9301      	str	r3, [sp, #4]
 800df78:	f7ff ffcb 	bl	800df12 <memcpy.isra.0>
 800df7c:	2114      	movs	r1, #20
 800df7e:	4630      	mov	r0, r6
 800df80:	7625      	strb	r5, [r4, #24]
 800df82:	7665      	strb	r5, [r4, #25]
 800df84:	f7ff ffa8 	bl	800ded8 <net_chksum>
 800df88:	8a21      	ldrh	r1, [r4, #16]
 800df8a:	8320      	strh	r0, [r4, #24]
 800df8c:	ba49      	rev16	r1, r1
 800df8e:	b289      	uxth	r1, r1
 800df90:	4630      	mov	r0, r6
 800df92:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800df96:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800df9a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800df9e:	f7ff ff9b 	bl	800ded8 <net_chksum>
 800dfa2:	8a21      	ldrh	r1, [r4, #16]
 800dfa4:	84a0      	strh	r0, [r4, #36]	; 0x24
 800dfa6:	ba49      	rev16	r1, r1
 800dfa8:	b289      	uxth	r1, r1
 800dfaa:	4620      	mov	r0, r4
 800dfac:	310e      	adds	r1, #14
 800dfae:	f001 fea5 	bl	800fcfc <emac_eth_send>
 800dfb2:	b002      	add	sp, #8
 800dfb4:	bd70      	pop	{r4, r5, r6, pc}
 800dfb6:	bf00      	nop
 800dfb8:	20001bcc 	andcs	r1, r0, ip, asr #23
 800dfbc:	20001bc0 	andcs	r1, r0, r0, asr #23

0800dfc0 <properties::convert_json_file(char*, unsigned short, bool)>:
 800dfc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfc4:	7803      	ldrb	r3, [r0, #0]
 800dfc6:	2b7b      	cmp	r3, #123	; 0x7b
 800dfc8:	d170      	bne.n	800e0ac <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 800dfca:	b322      	cbz	r2, 800e016 <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 800dfcc:	2301      	movs	r3, #1
 800dfce:	4606      	mov	r6, r0
 800dfd0:	461c      	mov	r4, r3
 800dfd2:	2a00      	cmp	r2, #0
 800dfd4:	bf0c      	ite	eq
 800dfd6:	f04f 0c0a 	moveq.w	ip, #10
 800dfda:	f04f 0c00 	movne.w	ip, #0
 800dfde:	273d      	movs	r7, #61	; 0x3d
 800dfe0:	4299      	cmp	r1, r3
 800dfe2:	d960      	bls.n	800e0a6 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800dfe4:	4299      	cmp	r1, r3
 800dfe6:	4602      	mov	r2, r0
 800dfe8:	f890 e000 	ldrb.w	lr, [r0]
 800dfec:	f103 0301 	add.w	r3, r3, #1
 800dff0:	f100 0001 	add.w	r0, r0, #1
 800dff4:	d846      	bhi.n	800e084 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 800dff6:	1aa0      	subs	r0, r4, r2
 800dff8:	4615      	mov	r5, r2
 800dffa:	1884      	adds	r4, r0, r2
 800dffc:	f812 8b01 	ldrb.w	r8, [r2], #1
 800e000:	f103 0e01 	add.w	lr, r3, #1
 800e004:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 800e008:	d053      	beq.n	800e0b2 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 800e00a:	4299      	cmp	r1, r3
 800e00c:	d957      	bls.n	800e0be <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e00e:	4673      	mov	r3, lr
 800e010:	f806 8b01 	strb.w	r8, [r6], #1
 800e014:	e7f0      	b.n	800dff8 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 800e016:	2323      	movs	r3, #35	; 0x23
 800e018:	f800 3b01 	strb.w	r3, [r0], #1
 800e01c:	4605      	mov	r5, r0
 800e01e:	2301      	movs	r3, #1
 800e020:	4299      	cmp	r1, r3
 800e022:	d92d      	bls.n	800e080 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 800e024:	f815 4b01 	ldrb.w	r4, [r5], #1
 800e028:	2c22      	cmp	r4, #34	; 0x22
 800e02a:	d001      	beq.n	800e030 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e02c:	3301      	adds	r3, #1
 800e02e:	e7f7      	b.n	800e020 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 800e030:	46ac      	mov	ip, r5
 800e032:	4606      	mov	r6, r0
 800e034:	2701      	movs	r7, #1
 800e036:	f89c e000 	ldrb.w	lr, [ip]
 800e03a:	4665      	mov	r5, ip
 800e03c:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e040:	4630      	mov	r0, r6
 800e042:	463c      	mov	r4, r7
 800e044:	f10c 0c01 	add.w	ip, ip, #1
 800e048:	f106 0601 	add.w	r6, r6, #1
 800e04c:	f107 0701 	add.w	r7, r7, #1
 800e050:	d007      	beq.n	800e062 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e052:	3301      	adds	r3, #1
 800e054:	4299      	cmp	r1, r3
 800e056:	4665      	mov	r5, ip
 800e058:	f806 ec01 	strb.w	lr, [r6, #-1]
 800e05c:	d8eb      	bhi.n	800e036 <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 800e05e:	463c      	mov	r4, r7
 800e060:	4630      	mov	r0, r6
 800e062:	4606      	mov	r6, r0
 800e064:	200a      	movs	r0, #10
 800e066:	3401      	adds	r4, #1
 800e068:	f806 0b01 	strb.w	r0, [r6], #1
 800e06c:	4628      	mov	r0, r5
 800e06e:	f815 7b01 	ldrb.w	r7, [r5], #1
 800e072:	2f7b      	cmp	r7, #123	; 0x7b
 800e074:	d0ad      	beq.n	800dfd2 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e076:	1c5f      	adds	r7, r3, #1
 800e078:	4299      	cmp	r1, r3
 800e07a:	463b      	mov	r3, r7
 800e07c:	d8f6      	bhi.n	800e06c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e07e:	e7a8      	b.n	800dfd2 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e080:	2401      	movs	r4, #1
 800e082:	e7ee      	b.n	800e062 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e084:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e088:	d1ac      	bne.n	800dfe4 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e08a:	4602      	mov	r2, r0
 800e08c:	e7b3      	b.n	800dff6 <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 800e08e:	283a      	cmp	r0, #58	; 0x3a
 800e090:	d115      	bne.n	800e0be <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e092:	462b      	mov	r3, r5
 800e094:	e01b      	b.n	800e0ce <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e096:	4686      	mov	lr, r0
 800e098:	e027      	b.n	800e0ea <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 800e09a:	4673      	mov	r3, lr
 800e09c:	f806 cb01 	strb.w	ip, [r6], #1
 800e0a0:	3401      	adds	r4, #1
 800e0a2:	3301      	adds	r3, #1
 800e0a4:	e79c      	b.n	800dfe0 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e0b0:	e7fa      	b.n	800e0a8 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 800e0b2:	4630      	mov	r0, r6
 800e0b4:	f800 7b01 	strb.w	r7, [r0], #1
 800e0b8:	469e      	mov	lr, r3
 800e0ba:	4606      	mov	r6, r0
 800e0bc:	3401      	adds	r4, #1
 800e0be:	4571      	cmp	r1, lr
 800e0c0:	462b      	mov	r3, r5
 800e0c2:	7828      	ldrb	r0, [r5, #0]
 800e0c4:	f10e 0e01 	add.w	lr, lr, #1
 800e0c8:	f105 0501 	add.w	r5, r5, #1
 800e0cc:	d8df      	bhi.n	800e08e <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 800e0ce:	781d      	ldrb	r5, [r3, #0]
 800e0d0:	461a      	mov	r2, r3
 800e0d2:	2d2f      	cmp	r5, #47	; 0x2f
 800e0d4:	4670      	mov	r0, lr
 800e0d6:	f103 0301 	add.w	r3, r3, #1
 800e0da:	f10e 0e01 	add.w	lr, lr, #1
 800e0de:	d8da      	bhi.n	800e096 <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 800e0e0:	4281      	cmp	r1, r0
 800e0e2:	d8f4      	bhi.n	800e0ce <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e0e4:	2d22      	cmp	r5, #34	; 0x22
 800e0e6:	bf08      	it	eq
 800e0e8:	461a      	moveq	r2, r3
 800e0ea:	4610      	mov	r0, r2
 800e0ec:	f810 5b01 	ldrb.w	r5, [r0], #1
 800e0f0:	f10e 0301 	add.w	r3, lr, #1
 800e0f4:	2d22      	cmp	r5, #34	; 0x22
 800e0f6:	d0d0      	beq.n	800e09a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e0f8:	2d2c      	cmp	r5, #44	; 0x2c
 800e0fa:	d0ce      	beq.n	800e09a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e0fc:	2d7d      	cmp	r5, #125	; 0x7d
 800e0fe:	d0cc      	beq.n	800e09a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e100:	4571      	cmp	r1, lr
 800e102:	d9ce      	bls.n	800e0a2 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 800e104:	f1a5 0e20 	sub.w	lr, r5, #32
 800e108:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 800e10c:	d803      	bhi.n	800e116 <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 800e10e:	4602      	mov	r2, r0
 800e110:	f806 5b01 	strb.w	r5, [r6], #1
 800e114:	3401      	adds	r4, #1
 800e116:	469e      	mov	lr, r3
 800e118:	e7e7      	b.n	800e0ea <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

0800e11c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e11c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e120:	6002      	str	r2, [r0, #0]
 800e122:	4614      	mov	r4, r2
 800e124:	2200      	movs	r2, #0
 800e126:	4606      	mov	r6, r0
 800e128:	460f      	mov	r7, r1
 800e12a:	80c2      	strh	r2, [r0, #6]
 800e12c:	4a1b      	ldr	r2, [pc, #108]	; (800e19c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e12e:	8083      	strh	r3, [r0, #4]
 800e130:	7810      	ldrb	r0, [r2, #0]
 800e132:	f000 0001 	and.w	r0, r0, #1
 800e136:	7230      	strb	r0, [r6, #8]
 800e138:	463d      	mov	r5, r7
 800e13a:	782a      	ldrb	r2, [r5, #0]
 800e13c:	3701      	adds	r7, #1
 800e13e:	2a00      	cmp	r2, #0
 800e140:	d1fa      	bne.n	800e138 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e142:	1a6d      	subs	r5, r5, r1
 800e144:	b29b      	uxth	r3, r3
 800e146:	b1d0      	cbz	r0, 800e17e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e148:	1d2f      	adds	r7, r5, #4
 800e14a:	429f      	cmp	r7, r3
 800e14c:	d814      	bhi.n	800e178 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e14e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e152:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e156:	462a      	mov	r2, r5
 800e158:	f884 8000 	strb.w	r8, [r4]
 800e15c:	f884 9001 	strb.w	r9, [r4, #1]
 800e160:	1ca0      	adds	r0, r4, #2
 800e162:	f000 fe50 	bl	800ee06 <memmove>
 800e166:	223a      	movs	r2, #58	; 0x3a
 800e168:	1963      	adds	r3, r4, r5
 800e16a:	3505      	adds	r5, #5
 800e16c:	f883 9002 	strb.w	r9, [r3, #2]
 800e170:	70da      	strb	r2, [r3, #3]
 800e172:	80f5      	strh	r5, [r6, #6]
 800e174:	f804 8007 	strb.w	r8, [r4, r7]
 800e178:	4630      	mov	r0, r6
 800e17a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e17e:	1caf      	adds	r7, r5, #2
 800e180:	429f      	cmp	r7, r3
 800e182:	d8f9      	bhi.n	800e178 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e184:	4620      	mov	r0, r4
 800e186:	2323      	movs	r3, #35	; 0x23
 800e188:	462a      	mov	r2, r5
 800e18a:	f800 3b01 	strb.w	r3, [r0], #1
 800e18e:	f000 fe3a 	bl	800ee06 <memmove>
 800e192:	230a      	movs	r3, #10
 800e194:	442c      	add	r4, r5
 800e196:	7063      	strb	r3, [r4, #1]
 800e198:	80f7      	strh	r7, [r6, #6]
 800e19a:	e7ed      	b.n	800e178 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e19c:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800e1a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e1a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1a2:	469c      	mov	ip, r3
 800e1a4:	8885      	ldrh	r5, [r0, #4]
 800e1a6:	88c3      	ldrh	r3, [r0, #6]
 800e1a8:	b085      	sub	sp, #20
 800e1aa:	42ab      	cmp	r3, r5
 800e1ac:	d302      	bcc.n	800e1b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e1ae:	2000      	movs	r0, #0
 800e1b0:	b005      	add	sp, #20
 800e1b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e1b4:	4604      	mov	r4, r0
 800e1b6:	6800      	ldr	r0, [r0, #0]
 800e1b8:	1aed      	subs	r5, r5, r3
 800e1ba:	4418      	add	r0, r3
 800e1bc:	b2d6      	uxtb	r6, r2
 800e1be:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e1c2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e1c6:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e1ca:	0e12      	lsrs	r2, r2, #24
 800e1cc:	f1bc 0f00 	cmp.w	ip, #0
 800e1d0:	d109      	bne.n	800e1e6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e1d2:	f1be 0f00 	cmp.w	lr, #0
 800e1d6:	d109      	bne.n	800e1ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e1d8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e1dc:	e9cd 6700 	strd	r6, r7, [sp]
 800e1e0:	460b      	mov	r3, r1
 800e1e2:	4a0e      	ldr	r2, [pc, #56]	; (800e21c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e1e4:	e008      	b.n	800e1f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e1e6:	f1be 0f00 	cmp.w	lr, #0
 800e1ea:	d00f      	beq.n	800e20c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e1ec:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e1f0:	460b      	mov	r3, r1
 800e1f2:	e9cd 6700 	strd	r6, r7, [sp]
 800e1f6:	4a0a      	ldr	r2, [pc, #40]	; (800e220 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e1f8:	4629      	mov	r1, r5
 800e1fa:	f7f9 ffb9 	bl	8008170 <snprintf>
 800e1fe:	4285      	cmp	r5, r0
 800e200:	dbd5      	blt.n	800e1ae <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e202:	88e3      	ldrh	r3, [r4, #6]
 800e204:	4403      	add	r3, r0
 800e206:	80e3      	strh	r3, [r4, #6]
 800e208:	2001      	movs	r0, #1
 800e20a:	e7d1      	b.n	800e1b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e20c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e210:	e9cd 6700 	strd	r6, r7, [sp]
 800e214:	460b      	mov	r3, r1
 800e216:	4a03      	ldr	r2, [pc, #12]	; (800e224 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e218:	e7ee      	b.n	800e1f8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e21a:	bf00      	nop
 800e21c:	08012373 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sp}
 800e220:	0801235f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sp}
 800e224:	08012374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sp}

0800e228 <PropertiesBuilder::AddComment(char const*)>:
 800e228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e22a:	7a06      	ldrb	r6, [r0, #8]
 800e22c:	b996      	cbnz	r6, 800e254 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e22e:	4604      	mov	r4, r0
 800e230:	88c0      	ldrh	r0, [r0, #6]
 800e232:	88a5      	ldrh	r5, [r4, #4]
 800e234:	42a8      	cmp	r0, r5
 800e236:	d20d      	bcs.n	800e254 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e238:	6827      	ldr	r7, [r4, #0]
 800e23a:	1a2d      	subs	r5, r5, r0
 800e23c:	460b      	mov	r3, r1
 800e23e:	4a06      	ldr	r2, [pc, #24]	; (800e258 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800e240:	4629      	mov	r1, r5
 800e242:	4438      	add	r0, r7
 800e244:	f7f9 ff94 	bl	8008170 <snprintf>
 800e248:	4285      	cmp	r5, r0
 800e24a:	bfa1      	itttt	ge
 800e24c:	2601      	movge	r6, #1
 800e24e:	88e3      	ldrhge	r3, [r4, #6]
 800e250:	18c0      	addge	r0, r0, r3
 800e252:	80e0      	strhge	r0, [r4, #6]
 800e254:	4630      	mov	r0, r6
 800e256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e258:	08012384 	stmdaeq	r1, {r2, r7, r8, r9, sp}

0800e25c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800e25c:	e9c0 1200 	strd	r1, r2, [r0]
 800e260:	4770      	bx	lr

0800e262 <ReadConfigFile::~ReadConfigFile()>:
 800e262:	4770      	bx	lr

0800e264 <ReadConfigFile::Read(char const*, unsigned int)>:
 800e264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e268:	4606      	mov	r6, r0
 800e26a:	460d      	mov	r5, r1
 800e26c:	4614      	mov	r4, r2
 800e26e:	f04f 0800 	mov.w	r8, #0
 800e272:	b090      	sub	sp, #64	; 0x40
 800e274:	b33c      	cbz	r4, 800e2c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e276:	466b      	mov	r3, sp
 800e278:	462a      	mov	r2, r5
 800e27a:	4619      	mov	r1, r3
 800e27c:	7817      	ldrb	r7, [r2, #0]
 800e27e:	4610      	mov	r0, r2
 800e280:	2f0d      	cmp	r7, #13
 800e282:	f102 0201 	add.w	r2, r2, #1
 800e286:	d013      	beq.n	800e2b0 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e288:	2f0a      	cmp	r7, #10
 800e28a:	d011      	beq.n	800e2b0 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e28c:	f803 7b01 	strb.w	r7, [r3], #1
 800e290:	1a58      	subs	r0, r3, r1
 800e292:	283f      	cmp	r0, #63	; 0x3f
 800e294:	4615      	mov	r5, r2
 800e296:	dc16      	bgt.n	800e2c6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e298:	3c01      	subs	r4, #1
 800e29a:	d1ef      	bne.n	800e27c <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 800e29c:	f89d 2000 	ldrb.w	r2, [sp]
 800e2a0:	2a60      	cmp	r2, #96	; 0x60
 800e2a2:	d9e7      	bls.n	800e274 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e2a4:	f883 8000 	strb.w	r8, [r3]
 800e2a8:	e9d6 3000 	ldrd	r3, r0, [r6]
 800e2ac:	4798      	blx	r3
 800e2ae:	e7e1      	b.n	800e274 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e2b0:	4605      	mov	r5, r0
 800e2b2:	2c00      	cmp	r4, #0
 800e2b4:	d0f2      	beq.n	800e29c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800e2b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e2ba:	2a0d      	cmp	r2, #13
 800e2bc:	d001      	beq.n	800e2c2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e2be:	2a0a      	cmp	r2, #10
 800e2c0:	d1ec      	bne.n	800e29c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800e2c2:	3c01      	subs	r4, #1
 800e2c4:	e7f4      	b.n	800e2b0 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e2c6:	b010      	add	sp, #64	; 0x40
 800e2c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e2cc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800e2cc:	b570      	push	{r4, r5, r6, lr}
 800e2ce:	4615      	mov	r5, r2
 800e2d0:	461c      	mov	r4, r3
 800e2d2:	f000 f88f 	bl	800e3f4 <Sscan::checkName(char const*, char const*)>
 800e2d6:	b160      	cbz	r0, 800e2f2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 800e2d8:	2100      	movs	r1, #0
 800e2da:	5c43      	ldrb	r3, [r0, r1]
 800e2dc:	6826      	ldr	r6, [r4, #0]
 800e2de:	b28a      	uxth	r2, r1
 800e2e0:	b123      	cbz	r3, 800e2ec <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800e2e2:	42b2      	cmp	r2, r6
 800e2e4:	d207      	bcs.n	800e2f6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 800e2e6:	546b      	strb	r3, [r5, r1]
 800e2e8:	3101      	adds	r1, #1
 800e2ea:	e7f6      	b.n	800e2da <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800e2ec:	2000      	movs	r0, #0
 800e2ee:	6022      	str	r2, [r4, #0]
 800e2f0:	bd70      	pop	{r4, r5, r6, pc}
 800e2f2:	2001      	movs	r0, #1
 800e2f4:	e7fc      	b.n	800e2f0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 800e2f6:	2b0a      	cmp	r3, #10
 800e2f8:	d0f8      	beq.n	800e2ec <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800e2fa:	2002      	movs	r0, #2
 800e2fc:	e7f8      	b.n	800e2f0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0800e2fe <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800e2fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e300:	4615      	mov	r5, r2
 800e302:	f000 f877 	bl	800e3f4 <Sscan::checkName(char const*, char const*)>
 800e306:	b3c0      	cbz	r0, 800e37a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 800e308:	2400      	movs	r4, #0
 800e30a:	270a      	movs	r7, #10
 800e30c:	ae01      	add	r6, sp, #4
 800e30e:	4603      	mov	r3, r0
 800e310:	2100      	movs	r1, #0
 800e312:	f100 0c04 	add.w	ip, r0, #4
 800e316:	4618      	mov	r0, r3
 800e318:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e31c:	2a2e      	cmp	r2, #46	; 0x2e
 800e31e:	d00e      	beq.n	800e33e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800e320:	b16a      	cbz	r2, 800e33e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800e322:	4560      	cmp	r0, ip
 800e324:	d102      	bne.n	800e32c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 800e326:	2002      	movs	r0, #2
 800e328:	b003      	add	sp, #12
 800e32a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e32c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800e330:	2b09      	cmp	r3, #9
 800e332:	d8f8      	bhi.n	800e326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e334:	fb07 2101 	mla	r1, r7, r1, r2
 800e338:	4603      	mov	r3, r0
 800e33a:	3930      	subs	r1, #48	; 0x30
 800e33c:	e7eb      	b.n	800e316 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 800e33e:	29ff      	cmp	r1, #255	; 0xff
 800e340:	d8f1      	bhi.n	800e326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e342:	3401      	adds	r4, #1
 800e344:	2c03      	cmp	r4, #3
 800e346:	f806 1b01 	strb.w	r1, [r6], #1
 800e34a:	d1e0      	bne.n	800e30e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 800e34c:	2400      	movs	r4, #0
 800e34e:	220a      	movs	r2, #10
 800e350:	1d1e      	adds	r6, r3, #4
 800e352:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e356:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800e35a:	d007      	beq.n	800e36c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 800e35c:	429e      	cmp	r6, r3
 800e35e:	d0e2      	beq.n	800e326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e360:	3930      	subs	r1, #48	; 0x30
 800e362:	2909      	cmp	r1, #9
 800e364:	d8df      	bhi.n	800e326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e366:	fb02 1404 	mla	r4, r2, r4, r1
 800e36a:	e7f2      	b.n	800e352 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800e36c:	2cff      	cmp	r4, #255	; 0xff
 800e36e:	d8da      	bhi.n	800e326 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e370:	f88d 4007 	strb.w	r4, [sp, #7]
 800e374:	9b01      	ldr	r3, [sp, #4]
 800e376:	602b      	str	r3, [r5, #0]
 800e378:	e7d6      	b.n	800e328 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 800e37a:	2001      	movs	r0, #1
 800e37c:	e7d4      	b.n	800e328 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

0800e37e <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800e37e:	b538      	push	{r3, r4, r5, lr}
 800e380:	4615      	mov	r5, r2
 800e382:	f000 f837 	bl	800e3f4 <Sscan::checkName(char const*, char const*)>
 800e386:	b1a0      	cbz	r0, 800e3b2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800e388:	4604      	mov	r4, r0
 800e38a:	2100      	movs	r1, #0
 800e38c:	220a      	movs	r2, #10
 800e38e:	7823      	ldrb	r3, [r4, #0]
 800e390:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e394:	2809      	cmp	r0, #9
 800e396:	d80e      	bhi.n	800e3b6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e398:	fb02 3101 	mla	r1, r2, r1, r3
 800e39c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e3a0:	3930      	subs	r1, #48	; 0x30
 800e3a2:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e3a6:	d1f2      	bne.n	800e38e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800e3a8:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e3ac:	d203      	bcs.n	800e3b6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e3ae:	8029      	strh	r1, [r5, #0]
 800e3b0:	bd38      	pop	{r3, r4, r5, pc}
 800e3b2:	2001      	movs	r0, #1
 800e3b4:	e7fc      	b.n	800e3b0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800e3b6:	2002      	movs	r0, #2
 800e3b8:	e7fa      	b.n	800e3b0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800e3ba <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800e3ba:	b538      	push	{r3, r4, r5, lr}
 800e3bc:	4615      	mov	r5, r2
 800e3be:	f000 f819 	bl	800e3f4 <Sscan::checkName(char const*, char const*)>
 800e3c2:	b198      	cbz	r0, 800e3ec <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800e3c4:	4604      	mov	r4, r0
 800e3c6:	2100      	movs	r1, #0
 800e3c8:	220a      	movs	r2, #10
 800e3ca:	7823      	ldrb	r3, [r4, #0]
 800e3cc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e3d0:	2809      	cmp	r0, #9
 800e3d2:	d80d      	bhi.n	800e3f0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e3d4:	fb02 3101 	mla	r1, r2, r1, r3
 800e3d8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e3dc:	3930      	subs	r1, #48	; 0x30
 800e3de:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e3e2:	d1f2      	bne.n	800e3ca <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800e3e4:	29ff      	cmp	r1, #255	; 0xff
 800e3e6:	d803      	bhi.n	800e3f0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e3e8:	7029      	strb	r1, [r5, #0]
 800e3ea:	bd38      	pop	{r3, r4, r5, pc}
 800e3ec:	2001      	movs	r0, #1
 800e3ee:	e7fc      	b.n	800e3ea <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800e3f0:	2002      	movs	r0, #2
 800e3f2:	e7fa      	b.n	800e3ea <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800e3f4 <Sscan::checkName(char const*, char const*)>:
 800e3f4:	4603      	mov	r3, r0
 800e3f6:	b510      	push	{r4, lr}
 800e3f8:	3901      	subs	r1, #1
 800e3fa:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e3fe:	461c      	mov	r4, r3
 800e400:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e404:	b120      	cbz	r0, 800e410 <Sscan::checkName(char const*, char const*)+0x1c>
 800e406:	b10a      	cbz	r2, 800e40c <Sscan::checkName(char const*, char const*)+0x18>
 800e408:	4290      	cmp	r0, r2
 800e40a:	d0f6      	beq.n	800e3fa <Sscan::checkName(char const*, char const*)+0x6>
 800e40c:	2000      	movs	r0, #0
 800e40e:	e006      	b.n	800e41e <Sscan::checkName(char const*, char const*)+0x2a>
 800e410:	2a3d      	cmp	r2, #61	; 0x3d
 800e412:	d104      	bne.n	800e41e <Sscan::checkName(char const*, char const*)+0x2a>
 800e414:	7860      	ldrb	r0, [r4, #1]
 800e416:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800e41a:	d000      	beq.n	800e41e <Sscan::checkName(char const*, char const*)+0x2a>
 800e41c:	1c60      	adds	r0, r4, #1
 800e41e:	bd10      	pop	{r4, pc}

0800e420 <LightSet::GetDmxStartAddress()>:
 800e420:	2001      	movs	r0, #1
 800e422:	4770      	bx	lr

0800e424 <LightSet::GetDmxFootprint()>:
 800e424:	f44f 7000 	mov.w	r0, #512	; 0x200
 800e428:	4770      	bx	lr

0800e42a <LightSet::SetDmxStartAddress(unsigned short)>:
 800e42a:	2000      	movs	r0, #0
 800e42c:	4770      	bx	lr

0800e42e <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800e42e:	2300      	movs	r3, #0
 800e430:	2001      	movs	r0, #1
 800e432:	7093      	strb	r3, [r2, #2]
 800e434:	8010      	strh	r0, [r2, #0]
 800e436:	4770      	bx	lr

0800e438 <Display::PrintInfo() [clone .isra.0]>:
 800e438:	b910      	cbnz	r0, 800e440 <Display::PrintInfo() [clone .isra.0]+0x8>
 800e43a:	4803      	ldr	r0, [pc, #12]	; (800e448 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800e43c:	f000 bd1f 	b.w	800ee7e <puts>
 800e440:	6803      	ldr	r3, [r0, #0]
 800e442:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e444:	4718      	bx	r3
 800e446:	bf00      	nop
 800e448:	0801238c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sp}

0800e44c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800e44c:	b513      	push	{r0, r1, r4, lr}
 800e44e:	4604      	mov	r4, r0
 800e450:	0a13      	lsrs	r3, r2, #8
 800e452:	7800      	ldrb	r0, [r0, #0]
 800e454:	f88d 1004 	strb.w	r1, [sp, #4]
 800e458:	f88d 3005 	strb.w	r3, [sp, #5]
 800e45c:	f88d 2006 	strb.w	r2, [sp, #6]
 800e460:	f001 fce4 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 800e464:	6860      	ldr	r0, [r4, #4]
 800e466:	f001 fcd9 	bl	800fe1c <gd32_i2c_set_baudrate(unsigned int)>
 800e46a:	2103      	movs	r1, #3
 800e46c:	a801      	add	r0, sp, #4
 800e46e:	f001 fce3 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e472:	b002      	add	sp, #8
 800e474:	bd10      	pop	{r4, pc}

0800e476 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800e476:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e478:	460d      	mov	r5, r1
 800e47a:	4604      	mov	r4, r0
 800e47c:	f001 fcd6 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 800e480:	4628      	mov	r0, r5
 800e482:	f001 fccb 	bl	800fe1c <gd32_i2c_set_baudrate(unsigned int)>
 800e486:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e48a:	2b07      	cmp	r3, #7
 800e48c:	d902      	bls.n	800e494 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800e48e:	3c50      	subs	r4, #80	; 0x50
 800e490:	2c0f      	cmp	r4, #15
 800e492:	d809      	bhi.n	800e4a8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800e494:	2101      	movs	r1, #1
 800e496:	f10d 0007 	add.w	r0, sp, #7
 800e49a:	f001 fd33 	bl	800ff04 <gd32_i2c_read(char*, unsigned int)>
 800e49e:	fab0 f080 	clz	r0, r0
 800e4a2:	0940      	lsrs	r0, r0, #5
 800e4a4:	b003      	add	sp, #12
 800e4a6:	bd30      	pop	{r4, r5, pc}
 800e4a8:	2100      	movs	r1, #0
 800e4aa:	4608      	mov	r0, r1
 800e4ac:	f001 fcc4 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e4b0:	e7f5      	b.n	800e49e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800e4b2 <Display::Detect7Segment()>:
 800e4b2:	b538      	push	{r3, r4, r5, lr}
 800e4b4:	68c1      	ldr	r1, [r0, #12]
 800e4b6:	4604      	mov	r4, r0
 800e4b8:	7a00      	ldrb	r0, [r0, #8]
 800e4ba:	f7ff ffdc 	bl	800e476 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800e4be:	7460      	strb	r0, [r4, #17]
 800e4c0:	b170      	cbz	r0, 800e4e0 <Display::Detect7Segment()+0x2e>
 800e4c2:	2200      	movs	r2, #0
 800e4c4:	f104 0508 	add.w	r5, r4, #8
 800e4c8:	4611      	mov	r1, r2
 800e4ca:	4628      	mov	r0, r5
 800e4cc:	f7ff ffbe 	bl	800e44c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e4d0:	7c63      	ldrb	r3, [r4, #17]
 800e4d2:	b12b      	cbz	r3, 800e4e0 <Display::Detect7Segment()+0x2e>
 800e4d4:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800e4d8:	2112      	movs	r1, #18
 800e4da:	4628      	mov	r0, r5
 800e4dc:	f7ff ffb6 	bl	800e44c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e4e0:	bd38      	pop	{r3, r4, r5, pc}

0800e4e2 <Display::Detect(display::Type)>:
 800e4e2:	2902      	cmp	r1, #2
 800e4e4:	b538      	push	{r3, r4, r5, lr}
 800e4e6:	4604      	mov	r4, r0
 800e4e8:	d014      	beq.n	800e514 <Display::Detect(display::Type)+0x32>
 800e4ea:	2904      	cmp	r1, #4
 800e4ec:	d01b      	beq.n	800e526 <Display::Detect(display::Type)+0x44>
 800e4ee:	69a0      	ldr	r0, [r4, #24]
 800e4f0:	b168      	cbz	r0, 800e50e <Display::Detect(display::Type)+0x2c>
 800e4f2:	6803      	ldr	r3, [r0, #0]
 800e4f4:	689b      	ldr	r3, [r3, #8]
 800e4f6:	4798      	blx	r3
 800e4f8:	4603      	mov	r3, r0
 800e4fa:	69a0      	ldr	r0, [r4, #24]
 800e4fc:	b9ab      	cbnz	r3, 800e52a <Display::Detect(display::Type)+0x48>
 800e4fe:	b110      	cbz	r0, 800e506 <Display::Detect(display::Type)+0x24>
 800e500:	6803      	ldr	r3, [r0, #0]
 800e502:	685b      	ldr	r3, [r3, #4]
 800e504:	4798      	blx	r3
 800e506:	2300      	movs	r3, #0
 800e508:	61a3      	str	r3, [r4, #24]
 800e50a:	2304      	movs	r3, #4
 800e50c:	6023      	str	r3, [r4, #0]
 800e50e:	2300      	movs	r3, #0
 800e510:	6163      	str	r3, [r4, #20]
 800e512:	e010      	b.n	800e536 <Display::Detect(display::Type)+0x54>
 800e514:	2018      	movs	r0, #24
 800e516:	f000 fbb7 	bl	800ec88 <operator new(unsigned int)>
 800e51a:	4605      	mov	r5, r0
 800e51c:	2100      	movs	r1, #0
 800e51e:	f000 f89b 	bl	800e658 <Ssd1306::Ssd1306(TOledPanel)>
 800e522:	61a5      	str	r5, [r4, #24]
 800e524:	e7e3      	b.n	800e4ee <Display::Detect(display::Type)+0xc>
 800e526:	6001      	str	r1, [r0, #0]
 800e528:	e7e1      	b.n	800e4ee <Display::Detect(display::Type)+0xc>
 800e52a:	6803      	ldr	r3, [r0, #0]
 800e52c:	68db      	ldr	r3, [r3, #12]
 800e52e:	4798      	blx	r3
 800e530:	69a3      	ldr	r3, [r4, #24]
 800e532:	2b00      	cmp	r3, #0
 800e534:	d0eb      	beq.n	800e50e <Display::Detect(display::Type)+0x2c>
 800e536:	bd38      	pop	{r3, r4, r5, pc}

0800e538 <Display::Display()>:
 800e538:	2304      	movs	r3, #4
 800e53a:	b510      	push	{r4, lr}
 800e53c:	6003      	str	r3, [r0, #0]
 800e53e:	4b0d      	ldr	r3, [pc, #52]	; (800e574 <Display::Display()+0x3c>)
 800e540:	4604      	mov	r4, r0
 800e542:	681b      	ldr	r3, [r3, #0]
 800e544:	4a0c      	ldr	r2, [pc, #48]	; (800e578 <Display::Display()+0x40>)
 800e546:	6043      	str	r3, [r0, #4]
 800e548:	2321      	movs	r3, #33	; 0x21
 800e54a:	7203      	strb	r3, [r0, #8]
 800e54c:	4b0b      	ldr	r3, [pc, #44]	; (800e57c <Display::Display()+0x44>)
 800e54e:	2102      	movs	r1, #2
 800e550:	60c3      	str	r3, [r0, #12]
 800e552:	2300      	movs	r3, #0
 800e554:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800e558:	8203      	strh	r3, [r0, #16]
 800e55a:	4b09      	ldr	r3, [pc, #36]	; (800e580 <Display::Display()+0x48>)
 800e55c:	6018      	str	r0, [r3, #0]
 800e55e:	f7ff ffc0 	bl	800e4e2 <Display::Detect(display::Type)>
 800e562:	4620      	mov	r0, r4
 800e564:	f7ff ffa5 	bl	800e4b2 <Display::Detect7Segment()>
 800e568:	69a0      	ldr	r0, [r4, #24]
 800e56a:	f7ff ff65 	bl	800e438 <Display::PrintInfo() [clone .isra.0]>
 800e56e:	4620      	mov	r0, r4
 800e570:	bd10      	pop	{r4, pc}
 800e572:	bf00      	nop
 800e574:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800e578:	000493e0 	andeq	r9, r4, r0, ror #7
 800e57c:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e580:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8

0800e584 <Ssd1306::~Ssd1306()>:
 800e584:	4770      	bx	lr

0800e586 <Ssd1306::SetCursor(unsigned int)>:
 800e586:	4770      	bx	lr

0800e588 <Ssd1306::PrintInfo()>:
 800e588:	b410      	push	{r4}
 800e58a:	4906      	ldr	r1, [pc, #24]	; (800e5a4 <Ssd1306::PrintInfo()+0x1c>)
 800e58c:	7c44      	ldrb	r4, [r0, #17]
 800e58e:	7903      	ldrb	r3, [r0, #4]
 800e590:	7942      	ldrb	r2, [r0, #5]
 800e592:	4805      	ldr	r0, [pc, #20]	; (800e5a8 <Ssd1306::PrintInfo()+0x20>)
 800e594:	2c00      	cmp	r4, #0
 800e596:	bf08      	it	eq
 800e598:	4601      	moveq	r1, r0
 800e59a:	4804      	ldr	r0, [pc, #16]	; (800e5ac <Ssd1306::PrintInfo()+0x24>)
 800e59c:	bc10      	pop	{r4}
 800e59e:	f7f9 bdd7 	b.w	8008150 <printf>
 800e5a2:	bf00      	nop
 800e5a4:	0801239d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sp}
 800e5a8:	080123a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sp}
 800e5ac:	080123ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sp}

0800e5b0 <Ssd1306::~Ssd1306()>:
 800e5b0:	b510      	push	{r4, lr}
 800e5b2:	4604      	mov	r4, r0
 800e5b4:	f000 fb64 	bl	800ec80 <operator delete(void*)>
 800e5b8:	4620      	mov	r0, r4
 800e5ba:	bd10      	pop	{r4, pc}

0800e5bc <HAL_I2C::Setup()>:
 800e5bc:	b510      	push	{r4, lr}
 800e5be:	4604      	mov	r4, r0
 800e5c0:	7800      	ldrb	r0, [r0, #0]
 800e5c2:	f001 fc33 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 800e5c6:	6860      	ldr	r0, [r4, #4]
 800e5c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5cc:	f001 bc26 	b.w	800fe1c <gd32_i2c_set_baudrate(unsigned int)>

0800e5d0 <Ssd1306::PutChar(int)>:
 800e5d0:	b510      	push	{r4, lr}
 800e5d2:	f1a1 0420 	sub.w	r4, r1, #32
 800e5d6:	2c5f      	cmp	r4, #95	; 0x5f
 800e5d8:	bf88      	it	hi
 800e5da:	2400      	movhi	r4, #0
 800e5dc:	3008      	adds	r0, #8
 800e5de:	f7ff ffed 	bl	800e5bc <HAL_I2C::Setup()>
 800e5e2:	4804      	ldr	r0, [pc, #16]	; (800e5f4 <Ssd1306::PutChar(int)+0x24>)
 800e5e4:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800e5e8:	4420      	add	r0, r4
 800e5ea:	2107      	movs	r1, #7
 800e5ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5f0:	f001 bc22 	b.w	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e5f4:	080123c0 	stmdaeq	r1, {r6, r7, r8, r9, sp}

0800e5f8 <Ssd1306::PutString(char const*)>:
 800e5f8:	b538      	push	{r3, r4, r5, lr}
 800e5fa:	4605      	mov	r5, r0
 800e5fc:	1e4c      	subs	r4, r1, #1
 800e5fe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e602:	b119      	cbz	r1, 800e60c <Ssd1306::PutString(char const*)+0x14>
 800e604:	4628      	mov	r0, r5
 800e606:	f7ff ffe3 	bl	800e5d0 <Ssd1306::PutChar(int)>
 800e60a:	e7f8      	b.n	800e5fe <Ssd1306::PutString(char const*)+0x6>
 800e60c:	bd38      	pop	{r3, r4, r5, pc}

0800e60e <Ssd1306::Text(char const*, unsigned int)>:
 800e60e:	b570      	push	{r4, r5, r6, lr}
 800e610:	7903      	ldrb	r3, [r0, #4]
 800e612:	4605      	mov	r5, r0
 800e614:	460c      	mov	r4, r1
 800e616:	4293      	cmp	r3, r2
 800e618:	bf94      	ite	ls
 800e61a:	18ce      	addls	r6, r1, r3
 800e61c:	188e      	addhi	r6, r1, r2
 800e61e:	42b4      	cmp	r4, r6
 800e620:	d005      	beq.n	800e62e <Ssd1306::Text(char const*, unsigned int)+0x20>
 800e622:	4628      	mov	r0, r5
 800e624:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e628:	f7ff ffd2 	bl	800e5d0 <Ssd1306::PutChar(int)>
 800e62c:	e7f7      	b.n	800e61e <Ssd1306::Text(char const*, unsigned int)+0x10>
 800e62e:	bd70      	pop	{r4, r5, r6, pc}

0800e630 <Ssd1306::InitMembers()>:
 800e630:	7c03      	ldrb	r3, [r0, #16]
 800e632:	b12b      	cbz	r3, 800e640 <Ssd1306::InitMembers()+0x10>
 800e634:	3b01      	subs	r3, #1
 800e636:	2b01      	cmp	r3, #1
 800e638:	d908      	bls.n	800e64c <Ssd1306::InitMembers()+0x1c>
 800e63a:	f640 0315 	movw	r3, #2069	; 0x815
 800e63e:	e007      	b.n	800e650 <Ssd1306::InitMembers()+0x20>
 800e640:	f640 0315 	movw	r3, #2069	; 0x815
 800e644:	8083      	strh	r3, [r0, #4]
 800e646:	2308      	movs	r3, #8
 800e648:	6143      	str	r3, [r0, #20]
 800e64a:	4770      	bx	lr
 800e64c:	f240 4315 	movw	r3, #1045	; 0x415
 800e650:	8083      	strh	r3, [r0, #4]
 800e652:	2304      	movs	r3, #4
 800e654:	e7f8      	b.n	800e648 <Ssd1306::InitMembers()+0x18>
	...

0800e658 <Ssd1306::Ssd1306(TOledPanel)>:
 800e658:	4a08      	ldr	r2, [pc, #32]	; (800e67c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800e65a:	b508      	push	{r3, lr}
 800e65c:	6002      	str	r2, [r0, #0]
 800e65e:	227f      	movs	r2, #127	; 0x7f
 800e660:	80c2      	strh	r2, [r0, #6]
 800e662:	223c      	movs	r2, #60	; 0x3c
 800e664:	7202      	strb	r2, [r0, #8]
 800e666:	4a06      	ldr	r2, [pc, #24]	; (800e680 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800e668:	7401      	strb	r1, [r0, #16]
 800e66a:	60c2      	str	r2, [r0, #12]
 800e66c:	2200      	movs	r2, #0
 800e66e:	7442      	strb	r2, [r0, #17]
 800e670:	4a04      	ldr	r2, [pc, #16]	; (800e684 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800e672:	6010      	str	r0, [r2, #0]
 800e674:	f7ff ffdc 	bl	800e630 <Ssd1306::InitMembers()>
 800e678:	bd08      	pop	{r3, pc}
 800e67a:	bf00      	nop
 800e67c:	08012698 	stmdaeq	r1, {r3, r4, r7, r9, sl, sp}
 800e680:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e684:	20009b44 	andcs	r9, r0, r4, asr #22

0800e688 <Ssd1306::SendCommand(unsigned char)>:
 800e688:	2300      	movs	r3, #0
 800e68a:	b507      	push	{r0, r1, r2, lr}
 800e68c:	3008      	adds	r0, #8
 800e68e:	f88d 3004 	strb.w	r3, [sp, #4]
 800e692:	f88d 1005 	strb.w	r1, [sp, #5]
 800e696:	f7ff ff91 	bl	800e5bc <HAL_I2C::Setup()>
 800e69a:	2102      	movs	r1, #2
 800e69c:	a801      	add	r0, sp, #4
 800e69e:	f001 fbcb 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e6a2:	b003      	add	sp, #12
 800e6a4:	f85d fb04 	ldr.w	pc, [sp], #4

0800e6a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800e6a8:	2914      	cmp	r1, #20
 800e6aa:	b570      	push	{r4, r5, r6, lr}
 800e6ac:	4605      	mov	r5, r0
 800e6ae:	4616      	mov	r6, r2
 800e6b0:	d81c      	bhi.n	800e6ec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e6b2:	7943      	ldrb	r3, [r0, #5]
 800e6b4:	4293      	cmp	r3, r2
 800e6b6:	d919      	bls.n	800e6ec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e6b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e6bc:	7c43      	ldrb	r3, [r0, #17]
 800e6be:	004c      	lsls	r4, r1, #1
 800e6c0:	b2e4      	uxtb	r4, r4
 800e6c2:	b10b      	cbz	r3, 800e6c8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800e6c4:	3404      	adds	r4, #4
 800e6c6:	b2e4      	uxtb	r4, r4
 800e6c8:	4628      	mov	r0, r5
 800e6ca:	f004 010e 	and.w	r1, r4, #14
 800e6ce:	f7ff ffdb 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e6d2:	0921      	lsrs	r1, r4, #4
 800e6d4:	4628      	mov	r0, r5
 800e6d6:	f041 0110 	orr.w	r1, r1, #16
 800e6da:	f7ff ffd5 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e6de:	4628      	mov	r0, r5
 800e6e0:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800e6e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e6e8:	f7ff bfce 	b.w	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e6ec:	bd70      	pop	{r4, r5, r6, pc}

0800e6ee <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800e6ee:	b570      	push	{r4, r5, r6, lr}
 800e6f0:	4604      	mov	r4, r0
 800e6f2:	4615      	mov	r5, r2
 800e6f4:	461e      	mov	r6, r3
 800e6f6:	b171      	cbz	r1, 800e716 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e6f8:	7943      	ldrb	r3, [r0, #5]
 800e6fa:	428b      	cmp	r3, r1
 800e6fc:	d30b      	bcc.n	800e716 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e6fe:	3901      	subs	r1, #1
 800e700:	b2ca      	uxtb	r2, r1
 800e702:	2100      	movs	r1, #0
 800e704:	f7ff ffd0 	bl	800e6a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e708:	4632      	mov	r2, r6
 800e70a:	4629      	mov	r1, r5
 800e70c:	4620      	mov	r0, r4
 800e70e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e712:	f7ff bf7c 	b.w	800e60e <Ssd1306::Text(char const*, unsigned int)>
 800e716:	bd70      	pop	{r4, r5, r6, pc}

0800e718 <Ssd1306::ClearLine(unsigned char)>:
 800e718:	b538      	push	{r3, r4, r5, lr}
 800e71a:	4605      	mov	r5, r0
 800e71c:	b1b9      	cbz	r1, 800e74e <Ssd1306::ClearLine(unsigned char)+0x36>
 800e71e:	7943      	ldrb	r3, [r0, #5]
 800e720:	428b      	cmp	r3, r1
 800e722:	d314      	bcc.n	800e74e <Ssd1306::ClearLine(unsigned char)+0x36>
 800e724:	3901      	subs	r1, #1
 800e726:	b2cc      	uxtb	r4, r1
 800e728:	4622      	mov	r2, r4
 800e72a:	2100      	movs	r1, #0
 800e72c:	f7ff ffbc 	bl	800e6a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e730:	f105 0008 	add.w	r0, r5, #8
 800e734:	f7ff ff42 	bl	800e5bc <HAL_I2C::Setup()>
 800e738:	2181      	movs	r1, #129	; 0x81
 800e73a:	4805      	ldr	r0, [pc, #20]	; (800e750 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800e73c:	f001 fb7c 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e740:	4622      	mov	r2, r4
 800e742:	4628      	mov	r0, r5
 800e744:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e748:	2100      	movs	r1, #0
 800e74a:	f7ff bfad 	b.w	800e6a8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e74e:	bd38      	pop	{r3, r4, r5, pc}
 800e750:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

0800e754 <Ssd1306::SetSleep(bool)>:
 800e754:	b111      	cbz	r1, 800e75c <Ssd1306::SetSleep(bool)+0x8>
 800e756:	21ae      	movs	r1, #174	; 0xae
 800e758:	f7ff bf96 	b.w	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e75c:	21af      	movs	r1, #175	; 0xaf
 800e75e:	e7fb      	b.n	800e758 <Ssd1306::SetSleep(bool)+0x4>

0800e760 <Ssd1306::SetContrast(unsigned char)>:
 800e760:	b538      	push	{r3, r4, r5, lr}
 800e762:	4604      	mov	r4, r0
 800e764:	460d      	mov	r5, r1
 800e766:	7181      	strb	r1, [r0, #6]
 800e768:	2181      	movs	r1, #129	; 0x81
 800e76a:	f7ff ff8d 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e76e:	4629      	mov	r1, r5
 800e770:	4620      	mov	r0, r4
 800e772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e776:	f7ff bf87 	b.w	800e688 <Ssd1306::SendCommand(unsigned char)>

0800e77a <Ssd1306::SetFlipVertically(bool)>:
 800e77a:	b510      	push	{r4, lr}
 800e77c:	4604      	mov	r4, r0
 800e77e:	71c1      	strb	r1, [r0, #7]
 800e780:	b141      	cbz	r1, 800e794 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800e782:	21c0      	movs	r1, #192	; 0xc0
 800e784:	f7ff ff80 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e788:	21a0      	movs	r1, #160	; 0xa0
 800e78a:	4620      	mov	r0, r4
 800e78c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e790:	f7ff bf7a 	b.w	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e794:	21c8      	movs	r1, #200	; 0xc8
 800e796:	f7ff ff77 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e79a:	21a1      	movs	r1, #161	; 0xa1
 800e79c:	e7f5      	b.n	800e78a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800e7a0 <Ssd1306::CheckSH1106()>:
 800e7a0:	b570      	push	{r4, r5, r6, lr}
 800e7a2:	4604      	mov	r4, r0
 800e7a4:	b086      	sub	sp, #24
 800e7a6:	2100      	movs	r1, #0
 800e7a8:	f7ff ff6e 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7ac:	2190      	movs	r1, #144	; 0x90
 800e7ae:	4620      	mov	r0, r4
 800e7b0:	f7ff ff6a 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7b4:	21b0      	movs	r1, #176	; 0xb0
 800e7b6:	4620      	mov	r0, r4
 800e7b8:	f7ff ff66 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7bc:	4b22      	ldr	r3, [pc, #136]	; (800e848 <Ssd1306::CheckSH1106()+0xa8>)
 800e7be:	f104 0608 	add.w	r6, r4, #8
 800e7c2:	6818      	ldr	r0, [r3, #0]
 800e7c4:	791b      	ldrb	r3, [r3, #4]
 800e7c6:	ad02      	add	r5, sp, #8
 800e7c8:	9002      	str	r0, [sp, #8]
 800e7ca:	4630      	mov	r0, r6
 800e7cc:	712b      	strb	r3, [r5, #4]
 800e7ce:	f7ff fef5 	bl	800e5bc <HAL_I2C::Setup()>
 800e7d2:	2105      	movs	r1, #5
 800e7d4:	4628      	mov	r0, r5
 800e7d6:	f001 fb2f 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e7da:	2100      	movs	r1, #0
 800e7dc:	4620      	mov	r0, r4
 800e7de:	f7ff ff53 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7e2:	2190      	movs	r1, #144	; 0x90
 800e7e4:	4620      	mov	r0, r4
 800e7e6:	f7ff ff4f 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7ea:	21b0      	movs	r1, #176	; 0xb0
 800e7ec:	4620      	mov	r0, r4
 800e7ee:	f7ff ff4b 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e7f2:	2300      	movs	r3, #0
 800e7f4:	9304      	str	r3, [sp, #16]
 800e7f6:	f88d 3014 	strb.w	r3, [sp, #20]
 800e7fa:	2340      	movs	r3, #64	; 0x40
 800e7fc:	4630      	mov	r0, r6
 800e7fe:	f88d 3007 	strb.w	r3, [sp, #7]
 800e802:	f7ff fedb 	bl	800e5bc <HAL_I2C::Setup()>
 800e806:	2101      	movs	r1, #1
 800e808:	f10d 0007 	add.w	r0, sp, #7
 800e80c:	f001 fb14 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e810:	4630      	mov	r0, r6
 800e812:	f7ff fed3 	bl	800e5bc <HAL_I2C::Setup()>
 800e816:	2105      	movs	r1, #5
 800e818:	a804      	add	r0, sp, #16
 800e81a:	f001 fb73 	bl	800ff04 <gd32_i2c_read(char*, unsigned int)>
 800e81e:	2201      	movs	r2, #1
 800e820:	5cab      	ldrb	r3, [r5, r2]
 800e822:	a904      	add	r1, sp, #16
 800e824:	3201      	adds	r2, #1
 800e826:	4411      	add	r1, r2
 800e828:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800e82c:	428b      	cmp	r3, r1
 800e82e:	d006      	beq.n	800e83e <Ssd1306::CheckSH1106()+0x9e>
 800e830:	1a5b      	subs	r3, r3, r1
 800e832:	fab3 f383 	clz	r3, r3
 800e836:	095b      	lsrs	r3, r3, #5
 800e838:	7463      	strb	r3, [r4, #17]
 800e83a:	b006      	add	sp, #24
 800e83c:	bd70      	pop	{r4, r5, r6, pc}
 800e83e:	2a05      	cmp	r2, #5
 800e840:	d1ee      	bne.n	800e820 <Ssd1306::CheckSH1106()+0x80>
 800e842:	2300      	movs	r3, #0
 800e844:	e7f5      	b.n	800e832 <Ssd1306::CheckSH1106()+0x92>
 800e846:	bf00      	nop
 800e848:	080123b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sp}

0800e84c <Ssd1306::Cls()>:
 800e84c:	7c43      	ldrb	r3, [r0, #17]
 800e84e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e852:	2b00      	cmp	r3, #0
 800e854:	bf0c      	ite	eq
 800e856:	2500      	moveq	r5, #0
 800e858:	2504      	movne	r5, #4
 800e85a:	4604      	mov	r4, r0
 800e85c:	2600      	movs	r6, #0
 800e85e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800e862:	f045 0810 	orr.w	r8, r5, #16
 800e866:	b2ff      	uxtb	r7, r7
 800e868:	6963      	ldr	r3, [r4, #20]
 800e86a:	4629      	mov	r1, r5
 800e86c:	42b3      	cmp	r3, r6
 800e86e:	4620      	mov	r0, r4
 800e870:	d91b      	bls.n	800e8aa <Ssd1306::Cls()+0x5e>
 800e872:	f7ff ff09 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e876:	4641      	mov	r1, r8
 800e878:	4620      	mov	r0, r4
 800e87a:	f7ff ff05 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e87e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800e882:	4620      	mov	r0, r4
 800e884:	b2c9      	uxtb	r1, r1
 800e886:	f7ff feff 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e88a:	7c23      	ldrb	r3, [r4, #16]
 800e88c:	b123      	cbz	r3, 800e898 <Ssd1306::Cls()+0x4c>
 800e88e:	3b01      	subs	r3, #1
 800e890:	2b01      	cmp	r3, #1
 800e892:	d901      	bls.n	800e898 <Ssd1306::Cls()+0x4c>
 800e894:	3601      	adds	r6, #1
 800e896:	e7e7      	b.n	800e868 <Ssd1306::Cls()+0x1c>
 800e898:	f104 0008 	add.w	r0, r4, #8
 800e89c:	f7ff fe8e 	bl	800e5bc <HAL_I2C::Setup()>
 800e8a0:	4639      	mov	r1, r7
 800e8a2:	4808      	ldr	r0, [pc, #32]	; (800e8c4 <Ssd1306::Cls()+0x78>)
 800e8a4:	f001 fac8 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e8a8:	e7f4      	b.n	800e894 <Ssd1306::Cls()+0x48>
 800e8aa:	f7ff feed 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e8ae:	4641      	mov	r1, r8
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	f7ff fee9 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e8b6:	4620      	mov	r0, r4
 800e8b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e8bc:	21b0      	movs	r1, #176	; 0xb0
 800e8be:	f7ff bee3 	b.w	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e8c2:	bf00      	nop
 800e8c4:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

0800e8c8 <Ssd1306::Start()>:
 800e8c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e8ca:	7a04      	ldrb	r4, [r0, #8]
 800e8cc:	68c6      	ldr	r6, [r0, #12]
 800e8ce:	4605      	mov	r5, r0
 800e8d0:	4620      	mov	r0, r4
 800e8d2:	f001 faab 	bl	800fe2c <gd32_i2c_set_address(unsigned char)>
 800e8d6:	4630      	mov	r0, r6
 800e8d8:	f001 faa0 	bl	800fe1c <gd32_i2c_set_baudrate(unsigned int)>
 800e8dc:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e8e0:	2b07      	cmp	r3, #7
 800e8e2:	d902      	bls.n	800e8ea <Ssd1306::Start()+0x22>
 800e8e4:	3c50      	subs	r4, #80	; 0x50
 800e8e6:	2c0f      	cmp	r4, #15
 800e8e8:	d80f      	bhi.n	800e90a <Ssd1306::Start()+0x42>
 800e8ea:	2101      	movs	r1, #1
 800e8ec:	f10d 0007 	add.w	r0, sp, #7
 800e8f0:	f001 fb08 	bl	800ff04 <gd32_i2c_read(char*, unsigned int)>
 800e8f4:	fab0 f480 	clz	r4, r0
 800e8f8:	0964      	lsrs	r4, r4, #5
 800e8fa:	b35c      	cbz	r4, 800e954 <Ssd1306::Start()+0x8c>
 800e8fc:	7c2e      	ldrb	r6, [r5, #16]
 800e8fe:	b14e      	cbz	r6, 800e914 <Ssd1306::Start()+0x4c>
 800e900:	3e01      	subs	r6, #1
 800e902:	2e01      	cmp	r6, #1
 800e904:	d929      	bls.n	800e95a <Ssd1306::Start()+0x92>
 800e906:	2400      	movs	r4, #0
 800e908:	e024      	b.n	800e954 <Ssd1306::Start()+0x8c>
 800e90a:	2100      	movs	r1, #0
 800e90c:	4608      	mov	r0, r1
 800e90e:	f001 fa93 	bl	800fe38 <gd32_i2c_write(char const*, unsigned int)>
 800e912:	e7ef      	b.n	800e8f4 <Ssd1306::Start()+0x2c>
 800e914:	4f16      	ldr	r7, [pc, #88]	; (800e970 <Ssd1306::Start()+0xa8>)
 800e916:	4628      	mov	r0, r5
 800e918:	f817 1b01 	ldrb.w	r1, [r7], #1
 800e91c:	3601      	adds	r6, #1
 800e91e:	f7ff feb3 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e922:	2e18      	cmp	r6, #24
 800e924:	d1f7      	bne.n	800e916 <Ssd1306::Start()+0x4e>
 800e926:	2300      	movs	r3, #0
 800e928:	4a12      	ldr	r2, [pc, #72]	; (800e974 <Ssd1306::Start()+0xac>)
 800e92a:	4618      	mov	r0, r3
 800e92c:	4611      	mov	r1, r2
 800e92e:	3301      	adds	r3, #1
 800e930:	2b86      	cmp	r3, #134	; 0x86
 800e932:	f802 0b01 	strb.w	r0, [r2], #1
 800e936:	d1fa      	bne.n	800e92e <Ssd1306::Start()+0x66>
 800e938:	2340      	movs	r3, #64	; 0x40
 800e93a:	4628      	mov	r0, r5
 800e93c:	700b      	strb	r3, [r1, #0]
 800e93e:	f7ff ff2f 	bl	800e7a0 <Ssd1306::CheckSH1106()>
 800e942:	4628      	mov	r0, r5
 800e944:	f7ff ff82 	bl	800e84c <Ssd1306::Cls()>
 800e948:	21af      	movs	r1, #175	; 0xaf
 800e94a:	4628      	mov	r0, r5
 800e94c:	f7ff fe9c 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e950:	2301      	movs	r3, #1
 800e952:	71eb      	strb	r3, [r5, #7]
 800e954:	4620      	mov	r0, r4
 800e956:	b003      	add	sp, #12
 800e958:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e95a:	2600      	movs	r6, #0
 800e95c:	4f06      	ldr	r7, [pc, #24]	; (800e978 <Ssd1306::Start()+0xb0>)
 800e95e:	4628      	mov	r0, r5
 800e960:	f817 1b01 	ldrb.w	r1, [r7], #1
 800e964:	3601      	adds	r6, #1
 800e966:	f7ff fe8f 	bl	800e688 <Ssd1306::SendCommand(unsigned char)>
 800e96a:	2e18      	cmp	r6, #24
 800e96c:	d1f7      	bne.n	800e95e <Ssd1306::Start()+0x96>
 800e96e:	e7da      	b.n	800e926 <Ssd1306::Start()+0x5e>
 800e970:	08012678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, sp}
 800e974:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800e978:	08012660 	stmdaeq	r1, {r5, r6, r9, sl, sp}

0800e97c <console_init>:
 800e97c:	b508      	push	{r3, lr}
 800e97e:	f000 fb71 	bl	800f064 <uart0_init>
 800e982:	4804      	ldr	r0, [pc, #16]	; (800e994 <console_init+0x18>)
 800e984:	f000 fb9e 	bl	800f0c4 <uart0_puts>
 800e988:	4803      	ldr	r0, [pc, #12]	; (800e998 <console_init+0x1c>)
 800e98a:	f000 fb9b 	bl	800f0c4 <uart0_puts>
 800e98e:	2000      	movs	r0, #0
 800e990:	bd08      	pop	{r3, pc}
 800e992:	bf00      	nop
 800e994:	08010d59 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, fp}
 800e998:	080126d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, sp}

0800e99c <console_putc>:
 800e99c:	280a      	cmp	r0, #10
 800e99e:	b510      	push	{r4, lr}
 800e9a0:	4604      	mov	r4, r0
 800e9a2:	d102      	bne.n	800e9aa <console_putc+0xe>
 800e9a4:	200d      	movs	r0, #13
 800e9a6:	f000 fb6d 	bl	800f084 <uart0_putc>
 800e9aa:	4620      	mov	r0, r4
 800e9ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e9b0:	f000 bb68 	b.w	800f084 <uart0_putc>

0800e9b4 <console_puts>:
 800e9b4:	f000 bb86 	b.w	800f0c4 <uart0_puts>

0800e9b8 <console_set_fg_color>:
 800e9b8:	2807      	cmp	r0, #7
 800e9ba:	d810      	bhi.n	800e9de <console_set_fg_color+0x26>
 800e9bc:	e8df f000 	tbb	[pc, r0]
 800e9c0:	0b090704 	bleq	82505d8 <__exidx_end+0x23de0c>
 800e9c4:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800e990 <console_init+0x14>
 800e9c8:	4806      	ldr	r0, [pc, #24]	; (800e9e4 <console_set_fg_color+0x2c>)
 800e9ca:	f000 bb7b 	b.w	800f0c4 <uart0_puts>
 800e9ce:	4806      	ldr	r0, [pc, #24]	; (800e9e8 <console_set_fg_color+0x30>)
 800e9d0:	e7fb      	b.n	800e9ca <console_set_fg_color+0x12>
 800e9d2:	4806      	ldr	r0, [pc, #24]	; (800e9ec <console_set_fg_color+0x34>)
 800e9d4:	e7f9      	b.n	800e9ca <console_set_fg_color+0x12>
 800e9d6:	4806      	ldr	r0, [pc, #24]	; (800e9f0 <console_set_fg_color+0x38>)
 800e9d8:	e7f7      	b.n	800e9ca <console_set_fg_color+0x12>
 800e9da:	4806      	ldr	r0, [pc, #24]	; (800e9f4 <console_set_fg_color+0x3c>)
 800e9dc:	e7f5      	b.n	800e9ca <console_set_fg_color+0x12>
 800e9de:	4806      	ldr	r0, [pc, #24]	; (800e9f8 <console_set_fg_color+0x40>)
 800e9e0:	e7f3      	b.n	800e9ca <console_set_fg_color+0x12>
 800e9e2:	bf00      	nop
 800e9e4:	080126d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, sl, sp}
 800e9e8:	080126dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, sp}
 800e9ec:	080126e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, sp}
 800e9f0:	080126e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, sp}
 800e9f4:	08010d59 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, fp}
 800e9f8:	080126ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, sp}

0800e9fc <console_error>:
 800e9fc:	b510      	push	{r4, lr}
 800e9fe:	4604      	mov	r4, r0
 800ea00:	4805      	ldr	r0, [pc, #20]	; (800ea18 <console_error+0x1c>)
 800ea02:	f000 fb5f 	bl	800f0c4 <uart0_puts>
 800ea06:	4620      	mov	r0, r4
 800ea08:	f000 fb5c 	bl	800f0c4 <uart0_puts>
 800ea0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea10:	4802      	ldr	r0, [pc, #8]	; (800ea1c <console_error+0x20>)
 800ea12:	f000 bb57 	b.w	800f0c4 <uart0_puts>
 800ea16:	bf00      	nop
 800ea18:	080126dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, sp}
 800ea1c:	08010d59 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, fp}

0800ea20 <console_status>:
 800ea20:	b510      	push	{r4, lr}
 800ea22:	460c      	mov	r4, r1
 800ea24:	b280      	uxth	r0, r0
 800ea26:	f7ff ffc7 	bl	800e9b8 <console_set_fg_color>
 800ea2a:	4807      	ldr	r0, [pc, #28]	; (800ea48 <console_status+0x28>)
 800ea2c:	f000 fb4a 	bl	800f0c4 <uart0_puts>
 800ea30:	4620      	mov	r0, r4
 800ea32:	f000 fb47 	bl	800f0c4 <uart0_puts>
 800ea36:	200a      	movs	r0, #10
 800ea38:	f7ff ffb0 	bl	800e99c <console_putc>
 800ea3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea40:	4802      	ldr	r0, [pc, #8]	; (800ea4c <console_status+0x2c>)
 800ea42:	f000 bb3f 	b.w	800f0c4 <uart0_puts>
 800ea46:	bf00      	nop
 800ea48:	080126d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, sp}
 800ea4c:	08010d59 	stmdaeq	r1, {r0, r3, r4, r6, r8, sl, fp}

0800ea50 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800ea50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea54:	4617      	mov	r7, r2
 800ea56:	461e      	mov	r6, r3
 800ea58:	4d14      	ldr	r5, [pc, #80]	; (800eaac <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800ea5a:	4b15      	ldr	r3, [pc, #84]	; (800eab0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800ea5c:	b086      	sub	sp, #24
 800ea5e:	6018      	str	r0, [r3, #0]
 800ea60:	4604      	mov	r4, r0
 800ea62:	f105 0803 	add.w	r8, r5, #3
 800ea66:	2203      	movs	r2, #3
 800ea68:	4628      	mov	r0, r5
 800ea6a:	f000 f9cc 	bl	800ee06 <memmove>
 800ea6e:	4639      	mov	r1, r7
 800ea70:	220b      	movs	r2, #11
 800ea72:	4640      	mov	r0, r8
 800ea74:	f000 f9c7 	bl	800ee06 <memmove>
 800ea78:	f105 030e 	add.w	r3, r5, #14
 800ea7c:	4631      	mov	r1, r6
 800ea7e:	2208      	movs	r2, #8
 800ea80:	4618      	mov	r0, r3
 800ea82:	f000 f9c0 	bl	800ee06 <memmove>
 800ea86:	2308      	movs	r3, #8
 800ea88:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800ea8c:	230b      	movs	r3, #11
 800ea8e:	9302      	str	r3, [sp, #8]
 800ea90:	4b08      	ldr	r3, [pc, #32]	; (800eab4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800ea92:	9005      	str	r0, [sp, #20]
 800ea94:	e9cd 5300 	strd	r5, r3, [sp]
 800ea98:	213f      	movs	r1, #63	; 0x3f
 800ea9a:	2303      	movs	r3, #3
 800ea9c:	4a06      	ldr	r2, [pc, #24]	; (800eab8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800ea9e:	4807      	ldr	r0, [pc, #28]	; (800eabc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800eaa0:	f7f9 fb66 	bl	8008170 <snprintf>
 800eaa4:	4620      	mov	r0, r4
 800eaa6:	b006      	add	sp, #24
 800eaa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eaac:	20009b48 	andcs	r9, r0, r8, asr #22
 800eab0:	20009ba0 	andcs	r9, r0, r0, lsr #23
 800eab4:	08010d92 	stmdaeq	r1, {r1, r4, r7, r8, sl, fp}
 800eab8:	080126f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, sp}
 800eabc:	20009b5e 	andcs	r9, r0, lr, asr fp

0800eac0 <FirmwareVersion::Print(char const*)>:
 800eac0:	b510      	push	{r4, lr}
 800eac2:	460c      	mov	r4, r1
 800eac4:	4804      	ldr	r0, [pc, #16]	; (800ead8 <FirmwareVersion::Print(char const*)+0x18>)
 800eac6:	f000 f9da 	bl	800ee7e <puts>
 800eaca:	b124      	cbz	r4, 800ead6 <FirmwareVersion::Print(char const*)+0x16>
 800eacc:	4620      	mov	r0, r4
 800eace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ead2:	f000 b9d4 	b.w	800ee7e <puts>
 800ead6:	bd10      	pop	{r4, pc}
 800ead8:	20009b5e 	andcs	r9, r0, lr, asr fp

0800eadc <LedBlink::LedBlink()>:
 800eadc:	2200      	movs	r2, #0
 800eade:	2105      	movs	r1, #5
 800eae0:	e9c0 2100 	strd	r2, r1, [r0]
 800eae4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800eae8:	6082      	str	r2, [r0, #8]
 800eaea:	e9c0 1203 	strd	r1, r2, [r0, #12]
 800eaee:	6142      	str	r2, [r0, #20]
 800eaf0:	4a01      	ldr	r2, [pc, #4]	; (800eaf8 <LedBlink::LedBlink()+0x1c>)
 800eaf2:	6010      	str	r0, [r2, #0]
 800eaf4:	4770      	bx	lr
 800eaf6:	bf00      	nop
 800eaf8:	20009ba4 	andcs	r9, r0, r4, lsr #23

0800eafc <LedBlink::SetMode(ledblink::Mode)>:
 800eafc:	6843      	ldr	r3, [r0, #4]
 800eafe:	428b      	cmp	r3, r1
 800eb00:	d02f      	beq.n	800eb62 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800eb02:	6041      	str	r1, [r0, #4]
 800eb04:	2904      	cmp	r1, #4
 800eb06:	d822      	bhi.n	800eb4e <LedBlink::SetMode(ledblink::Mode)+0x52>
 800eb08:	e8df f001 	tbb	[pc, r1]
 800eb0c:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800eb10:	23ff001d 	mvnscs	r0, #29
 800eb14:	6003      	str	r3, [r0, #0]
 800eb16:	2300      	movs	r3, #0
 800eb18:	2201      	movs	r2, #1
 800eb1a:	60c3      	str	r3, [r0, #12]
 800eb1c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800eb20:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800eb24:	611a      	str	r2, [r3, #16]
 800eb26:	6880      	ldr	r0, [r0, #8]
 800eb28:	b1d8      	cbz	r0, 800eb62 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800eb2a:	6803      	ldr	r3, [r0, #0]
 800eb2c:	689b      	ldr	r3, [r3, #8]
 800eb2e:	4718      	bx	r3
 800eb30:	2301      	movs	r3, #1
 800eb32:	6003      	str	r3, [r0, #0]
 800eb34:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800eb38:	60c3      	str	r3, [r0, #12]
 800eb3a:	e7f4      	b.n	800eb26 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800eb3c:	2303      	movs	r3, #3
 800eb3e:	6003      	str	r3, [r0, #0]
 800eb40:	f240 134d 	movw	r3, #333	; 0x14d
 800eb44:	e7f8      	b.n	800eb38 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800eb46:	2305      	movs	r3, #5
 800eb48:	6003      	str	r3, [r0, #0]
 800eb4a:	23c8      	movs	r3, #200	; 0xc8
 800eb4c:	e7f4      	b.n	800eb38 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800eb4e:	2300      	movs	r3, #0
 800eb50:	2201      	movs	r2, #1
 800eb52:	6003      	str	r3, [r0, #0]
 800eb54:	60c3      	str	r3, [r0, #12]
 800eb56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800eb5a:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800eb5e:	615a      	str	r2, [r3, #20]
 800eb60:	e7e1      	b.n	800eb26 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800eb62:	4770      	bx	lr

0800eb64 <Hardware::Hardware()>:
 800eb64:	b570      	push	{r4, r5, r6, lr}
 800eb66:	2400      	movs	r4, #0
 800eb68:	4b24      	ldr	r3, [pc, #144]	; (800ebfc <Hardware::Hardware()+0x98>)
 800eb6a:	4e25      	ldr	r6, [pc, #148]	; (800ec00 <Hardware::Hardware()+0x9c>)
 800eb6c:	b090      	sub	sp, #64	; 0x40
 800eb6e:	4605      	mov	r5, r0
 800eb70:	6004      	str	r4, [r0, #0]
 800eb72:	7104      	strb	r4, [r0, #4]
 800eb74:	6018      	str	r0, [r3, #0]
 800eb76:	f240 6004 	movw	r0, #1540	; 0x604
 800eb7a:	f000 fce5 	bl	800f548 <rcu_periph_clock_enable>
 800eb7e:	2203      	movs	r2, #3
 800eb80:	2110      	movs	r1, #16
 800eb82:	4630      	mov	r0, r6
 800eb84:	2301      	movs	r3, #1
 800eb86:	f000 fc4f 	bl	800f428 <gpio_init>
 800eb8a:	2301      	movs	r3, #1
 800eb8c:	6173      	str	r3, [r6, #20]
 800eb8e:	f7ff fef5 	bl	800e97c <console_init>
 800eb92:	f5a6 3680 	sub.w	r6, r6, #65536	; 0x10000
 800eb96:	f000 faa5 	bl	800f0e4 <systick_config>
 800eb9a:	f001 fb23 	bl	80101e4 <udelay_init()>
 800eb9e:	f001 fb1f 	bl	80101e0 <micros_init()>
 800eba2:	f240 7004 	movw	r0, #1796	; 0x704
 800eba6:	f000 fccf 	bl	800f548 <rcu_periph_clock_enable>
 800ebaa:	4630      	mov	r0, r6
 800ebac:	f000 fe18 	bl	800f7e0 <timer_deinit>
 800ebb0:	236b      	movs	r3, #107	; 0x6b
 800ebb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ebb6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ebba:	a903      	add	r1, sp, #12
 800ebbc:	4630      	mov	r0, r6
 800ebbe:	9305      	str	r3, [sp, #20]
 800ebc0:	f000 fe70 	bl	800f8a4 <timer_init>
 800ebc4:	4630      	mov	r0, r6
 800ebc6:	f000 fec5 	bl	800f954 <timer_enable>
 800ebca:	f001 f899 	bl	800fd00 <gd32_adc_init()>
 800ebce:	230e      	movs	r3, #14
 800ebd0:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 800ebd4:	237a      	movs	r3, #122	; 0x7a
 800ebd6:	a807      	add	r0, sp, #28
 800ebd8:	930c      	str	r3, [sp, #48]	; 0x30
 800ebda:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800ebde:	9407      	str	r4, [sp, #28]
 800ebe0:	940f      	str	r4, [sp, #60]	; 0x3c
 800ebe2:	f000 f9a5 	bl	800ef30 <mktime>
 800ebe6:	4621      	mov	r1, r4
 800ebe8:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800ebec:	a801      	add	r0, sp, #4
 800ebee:	f000 fa15 	bl	800f01c <settimeofday>
 800ebf2:	f001 f8df 	bl	800fdb4 <gd32_i2c_begin()>
 800ebf6:	4628      	mov	r0, r5
 800ebf8:	b010      	add	sp, #64	; 0x40
 800ebfa:	bd70      	pop	{r4, r5, r6, pc}
 800ebfc:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800ec00:	40011000 	andmi	r1, r1, r0

0800ec04 <Hardware::Reboot()>:
 800ec04:	b508      	push	{r3, lr}
 800ec06:	6803      	ldr	r3, [r0, #0]
 800ec08:	4604      	mov	r4, r0
 800ec0a:	b153      	cbz	r3, 800ec22 <Hardware::Reboot()+0x1e>
 800ec0c:	2300      	movs	r3, #0
 800ec0e:	2104      	movs	r1, #4
 800ec10:	7103      	strb	r3, [r0, #4]
 800ec12:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ec16:	f000 fbdd 	bl	800f3d4 <fwdgt_config>
 800ec1a:	6820      	ldr	r0, [r4, #0]
 800ec1c:	6803      	ldr	r3, [r0, #0]
 800ec1e:	689b      	ldr	r3, [r3, #8]
 800ec20:	4798      	blx	r3
 800ec22:	2102      	movs	r1, #2
 800ec24:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ec28:	f000 fbd4 	bl	800f3d4 <fwdgt_config>
 800ec2c:	2801      	cmp	r0, #1
 800ec2e:	bf0c      	ite	eq
 800ec30:	2301      	moveq	r3, #1
 800ec32:	2300      	movne	r3, #0
 800ec34:	7123      	strb	r3, [r4, #4]
 800ec36:	d101      	bne.n	800ec3c <Hardware::Reboot()+0x38>
 800ec38:	f000 fbbc 	bl	800f3b4 <fwdgt_enable>
 800ec3c:	2208      	movs	r2, #8
 800ec3e:	4b0d      	ldr	r3, [pc, #52]	; (800ec74 <Hardware::Reboot()+0x70>)
 800ec40:	2501      	movs	r5, #1
 800ec42:	681b      	ldr	r3, [r3, #0]
 800ec44:	480c      	ldr	r0, [pc, #48]	; (800ec78 <Hardware::Reboot()+0x74>)
 800ec46:	601a      	str	r2, [r3, #0]
 800ec48:	227d      	movs	r2, #125	; 0x7d
 800ec4a:	490c      	ldr	r1, [pc, #48]	; (800ec7c <Hardware::Reboot()+0x78>)
 800ec4c:	60da      	str	r2, [r3, #12]
 800ec4e:	68dc      	ldr	r4, [r3, #12]
 800ec50:	b904      	cbnz	r4, 800ec54 <Hardware::Reboot()+0x50>
 800ec52:	e7fe      	b.n	800ec52 <Hardware::Reboot()+0x4e>
 800ec54:	6802      	ldr	r2, [r0, #0]
 800ec56:	695e      	ldr	r6, [r3, #20]
 800ec58:	1b92      	subs	r2, r2, r6
 800ec5a:	4294      	cmp	r4, r2
 800ec5c:	d8f8      	bhi.n	800ec50 <Hardware::Reboot()+0x4c>
 800ec5e:	6802      	ldr	r2, [r0, #0]
 800ec60:	615a      	str	r2, [r3, #20]
 800ec62:	691a      	ldr	r2, [r3, #16]
 800ec64:	2a01      	cmp	r2, #1
 800ec66:	f082 0401 	eor.w	r4, r2, #1
 800ec6a:	611c      	str	r4, [r3, #16]
 800ec6c:	bf14      	ite	ne
 800ec6e:	610d      	strne	r5, [r1, #16]
 800ec70:	614a      	streq	r2, [r1, #20]
 800ec72:	e7ec      	b.n	800ec4e <Hardware::Reboot()+0x4a>
 800ec74:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800ec78:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800ec7c:	40011000 	andmi	r1, r1, r0

0800ec80 <operator delete(void*)>:
 800ec80:	f000 b890 	b.w	800eda4 <free>

0800ec84 <operator delete[](void*)>:
 800ec84:	f000 b88e 	b.w	800eda4 <free>

0800ec88 <operator new(unsigned int)>:
 800ec88:	f000 b842 	b.w	800ed10 <malloc>

0800ec8c <operator new[](unsigned int)>:
 800ec8c:	f000 b840 	b.w	800ed10 <malloc>

0800ec90 <inet_aton>:
 800ec90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec92:	f04f 0c0a 	mov.w	ip, #10
 800ec96:	2500      	movs	r5, #0
 800ec98:	ae01      	add	r6, sp, #4
 800ec9a:	4603      	mov	r3, r0
 800ec9c:	2200      	movs	r2, #0
 800ec9e:	1d07      	adds	r7, r0, #4
 800eca0:	e007      	b.n	800ecb2 <inet_aton+0x22>
 800eca2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800eca6:	2b09      	cmp	r3, #9
 800eca8:	d820      	bhi.n	800ecec <inet_aton+0x5c>
 800ecaa:	4603      	mov	r3, r0
 800ecac:	fb0c 4202 	mla	r2, ip, r2, r4
 800ecb0:	3a30      	subs	r2, #48	; 0x30
 800ecb2:	4618      	mov	r0, r3
 800ecb4:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ecb8:	2c2e      	cmp	r4, #46	; 0x2e
 800ecba:	d111      	bne.n	800ece0 <inet_aton+0x50>
 800ecbc:	3501      	adds	r5, #1
 800ecbe:	2d03      	cmp	r5, #3
 800ecc0:	f806 2b01 	strb.w	r2, [r6], #1
 800ecc4:	d1e9      	bne.n	800ec9a <inet_aton+0xa>
 800ecc6:	2200      	movs	r2, #0
 800ecc8:	250a      	movs	r5, #10
 800ecca:	1d1c      	adds	r4, r3, #4
 800eccc:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ecd0:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800ecd4:	d10d      	bne.n	800ecf2 <inet_aton+0x62>
 800ecd6:	f88d 2007 	strb.w	r2, [sp, #7]
 800ecda:	b9b1      	cbnz	r1, 800ed0a <inet_aton+0x7a>
 800ecdc:	2001      	movs	r0, #1
 800ecde:	e006      	b.n	800ecee <inet_aton+0x5e>
 800ece0:	2c00      	cmp	r4, #0
 800ece2:	d0eb      	beq.n	800ecbc <inet_aton+0x2c>
 800ece4:	2c0a      	cmp	r4, #10
 800ece6:	d0e9      	beq.n	800ecbc <inet_aton+0x2c>
 800ece8:	42b8      	cmp	r0, r7
 800ecea:	d1da      	bne.n	800eca2 <inet_aton+0x12>
 800ecec:	2000      	movs	r0, #0
 800ecee:	b003      	add	sp, #12
 800ecf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ecf2:	280a      	cmp	r0, #10
 800ecf4:	d0ef      	beq.n	800ecd6 <inet_aton+0x46>
 800ecf6:	42a3      	cmp	r3, r4
 800ecf8:	d0f8      	beq.n	800ecec <inet_aton+0x5c>
 800ecfa:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800ecfe:	2e09      	cmp	r6, #9
 800ed00:	d8f4      	bhi.n	800ecec <inet_aton+0x5c>
 800ed02:	fb05 0202 	mla	r2, r5, r2, r0
 800ed06:	3a30      	subs	r2, #48	; 0x30
 800ed08:	e7e0      	b.n	800eccc <inet_aton+0x3c>
 800ed0a:	9b01      	ldr	r3, [sp, #4]
 800ed0c:	600b      	str	r3, [r1, #0]
 800ed0e:	e7e5      	b.n	800ecdc <inet_aton+0x4c>

0800ed10 <malloc>:
 800ed10:	b538      	push	{r3, r4, r5, lr}
 800ed12:	4604      	mov	r4, r0
 800ed14:	4601      	mov	r1, r0
 800ed16:	481c      	ldr	r0, [pc, #112]	; (800ed88 <malloc+0x78>)
 800ed18:	f7f9 fa1a 	bl	8008150 <printf>
 800ed1c:	b17c      	cbz	r4, 800ed3e <malloc+0x2e>
 800ed1e:	4b1b      	ldr	r3, [pc, #108]	; (800ed8c <malloc+0x7c>)
 800ed20:	6818      	ldr	r0, [r3, #0]
 800ed22:	b978      	cbnz	r0, 800ed44 <malloc+0x34>
 800ed24:	4a1a      	ldr	r2, [pc, #104]	; (800ed90 <malloc+0x80>)
 800ed26:	f104 031b 	add.w	r3, r4, #27
 800ed2a:	6811      	ldr	r1, [r2, #0]
 800ed2c:	4819      	ldr	r0, [pc, #100]	; (800ed94 <malloc+0x84>)
 800ed2e:	f023 030f 	bic.w	r3, r3, #15
 800ed32:	440b      	add	r3, r1
 800ed34:	4283      	cmp	r3, r0
 800ed36:	d921      	bls.n	800ed7c <malloc+0x6c>
 800ed38:	4817      	ldr	r0, [pc, #92]	; (800ed98 <malloc+0x88>)
 800ed3a:	f7f9 fa09 	bl	8008150 <printf>
 800ed3e:	2500      	movs	r5, #0
 800ed40:	4628      	mov	r0, r5
 800ed42:	bd38      	pop	{r3, r4, r5, pc}
 800ed44:	4284      	cmp	r4, r0
 800ed46:	d80a      	bhi.n	800ed5e <malloc+0x4e>
 800ed48:	685a      	ldr	r2, [r3, #4]
 800ed4a:	6899      	ldr	r1, [r3, #8]
 800ed4c:	3201      	adds	r2, #1
 800ed4e:	428a      	cmp	r2, r1
 800ed50:	605a      	str	r2, [r3, #4]
 800ed52:	d900      	bls.n	800ed56 <malloc+0x46>
 800ed54:	609a      	str	r2, [r3, #8]
 800ed56:	68d9      	ldr	r1, [r3, #12]
 800ed58:	b919      	cbnz	r1, 800ed62 <malloc+0x52>
 800ed5a:	4604      	mov	r4, r0
 800ed5c:	e7e2      	b.n	800ed24 <malloc+0x14>
 800ed5e:	3310      	adds	r3, #16
 800ed60:	e7de      	b.n	800ed20 <malloc+0x10>
 800ed62:	4604      	mov	r4, r0
 800ed64:	688a      	ldr	r2, [r1, #8]
 800ed66:	60da      	str	r2, [r3, #12]
 800ed68:	2300      	movs	r3, #0
 800ed6a:	f101 050c 	add.w	r5, r1, #12
 800ed6e:	608b      	str	r3, [r1, #8]
 800ed70:	4622      	mov	r2, r4
 800ed72:	462b      	mov	r3, r5
 800ed74:	4809      	ldr	r0, [pc, #36]	; (800ed9c <malloc+0x8c>)
 800ed76:	f7f9 f9eb 	bl	8008150 <printf>
 800ed7a:	e7e1      	b.n	800ed40 <malloc+0x30>
 800ed7c:	6013      	str	r3, [r2, #0]
 800ed7e:	4b08      	ldr	r3, [pc, #32]	; (800eda0 <malloc+0x90>)
 800ed80:	e9c1 3400 	strd	r3, r4, [r1]
 800ed84:	e7f0      	b.n	800ed68 <malloc+0x58>
 800ed86:	bf00      	nop
 800ed88:	08012718 	stmdaeq	r1, {r3, r4, r8, r9, sl, sp}
 800ed8c:	20000024 	andcs	r0, r0, r4, lsr #32
 800ed90:	20000020 	andcs	r0, r0, r0, lsr #32
 800ed94:	20016800 	andcs	r6, r1, r0, lsl #16
 800ed98:	08012724 	stmdaeq	r1, {r2, r5, r8, r9, sl, sp}
 800ed9c:	08012740 	stmdaeq	r1, {r6, r8, r9, sl, sp}
 800eda0:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800eda4 <free>:
 800eda4:	b538      	push	{r3, r4, r5, lr}
 800eda6:	4604      	mov	r4, r0
 800eda8:	b1c8      	cbz	r0, 800edde <free+0x3a>
 800edaa:	f1a0 050c 	sub.w	r5, r0, #12
 800edae:	4602      	mov	r2, r0
 800edb0:	4629      	mov	r1, r5
 800edb2:	480c      	ldr	r0, [pc, #48]	; (800ede4 <free+0x40>)
 800edb4:	f7f9 f9cc 	bl	8008150 <printf>
 800edb8:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800edbc:	4b0a      	ldr	r3, [pc, #40]	; (800ede8 <free+0x44>)
 800edbe:	429a      	cmp	r2, r3
 800edc0:	d10d      	bne.n	800edde <free+0x3a>
 800edc2:	4b0a      	ldr	r3, [pc, #40]	; (800edec <free+0x48>)
 800edc4:	681a      	ldr	r2, [r3, #0]
 800edc6:	b152      	cbz	r2, 800edde <free+0x3a>
 800edc8:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800edcc:	4291      	cmp	r1, r2
 800edce:	d107      	bne.n	800ede0 <free+0x3c>
 800edd0:	68da      	ldr	r2, [r3, #12]
 800edd2:	f844 2c04 	str.w	r2, [r4, #-4]
 800edd6:	685a      	ldr	r2, [r3, #4]
 800edd8:	60dd      	str	r5, [r3, #12]
 800edda:	3a01      	subs	r2, #1
 800eddc:	605a      	str	r2, [r3, #4]
 800edde:	bd38      	pop	{r3, r4, r5, pc}
 800ede0:	3310      	adds	r3, #16
 800ede2:	e7ef      	b.n	800edc4 <free+0x20>
 800ede4:	0801276b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, sp}
 800ede8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800edec:	20000024 	andcs	r0, r0, r4, lsr #32

0800edf0 <memcpy>:
 800edf0:	b510      	push	{r4, lr}
 800edf2:	1e43      	subs	r3, r0, #1
 800edf4:	440a      	add	r2, r1
 800edf6:	4291      	cmp	r1, r2
 800edf8:	d100      	bne.n	800edfc <memcpy+0xc>
 800edfa:	bd10      	pop	{r4, pc}
 800edfc:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ee00:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ee04:	e7f7      	b.n	800edf6 <memcpy+0x6>

0800ee06 <memmove>:
 800ee06:	4288      	cmp	r0, r1
 800ee08:	b510      	push	{r4, lr}
 800ee0a:	eb01 0302 	add.w	r3, r1, r2
 800ee0e:	d208      	bcs.n	800ee22 <memmove+0x1c>
 800ee10:	1e42      	subs	r2, r0, #1
 800ee12:	4299      	cmp	r1, r3
 800ee14:	d100      	bne.n	800ee18 <memmove+0x12>
 800ee16:	bd10      	pop	{r4, pc}
 800ee18:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ee1c:	f802 4f01 	strb.w	r4, [r2, #1]!
 800ee20:	e7f7      	b.n	800ee12 <memmove+0xc>
 800ee22:	4601      	mov	r1, r0
 800ee24:	4402      	add	r2, r0
 800ee26:	428a      	cmp	r2, r1
 800ee28:	d0f5      	beq.n	800ee16 <memmove+0x10>
 800ee2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800ee2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800ee32:	e7f8      	b.n	800ee26 <memmove+0x20>

0800ee34 <memset>:
 800ee34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee36:	b1e2      	cbz	r2, 800ee72 <memset+0x3e>
 800ee38:	4603      	mov	r3, r0
 800ee3a:	b2c9      	uxtb	r1, r1
 800ee3c:	075c      	lsls	r4, r3, #29
 800ee3e:	d114      	bne.n	800ee6a <memset+0x36>
 800ee40:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800ee44:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800ee48:	463d      	mov	r5, r7
 800ee4a:	f022 0407 	bic.w	r4, r2, #7
 800ee4e:	08d6      	lsrs	r6, r2, #3
 800ee50:	441c      	add	r4, r3
 800ee52:	42a3      	cmp	r3, r4
 800ee54:	d10e      	bne.n	800ee74 <memset+0x40>
 800ee56:	f06f 0307 	mvn.w	r3, #7
 800ee5a:	fb03 2206 	mla	r2, r3, r6, r2
 800ee5e:	4422      	add	r2, r4
 800ee60:	4294      	cmp	r4, r2
 800ee62:	d006      	beq.n	800ee72 <memset+0x3e>
 800ee64:	f804 1b01 	strb.w	r1, [r4], #1
 800ee68:	e7fa      	b.n	800ee60 <memset+0x2c>
 800ee6a:	3a01      	subs	r2, #1
 800ee6c:	f803 1b01 	strb.w	r1, [r3], #1
 800ee70:	d1e4      	bne.n	800ee3c <memset+0x8>
 800ee72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee74:	f843 7b08 	str.w	r7, [r3], #8
 800ee78:	f843 5c04 	str.w	r5, [r3, #-4]
 800ee7c:	e7e9      	b.n	800ee52 <memset+0x1e>

0800ee7e <puts>:
 800ee7e:	b508      	push	{r3, lr}
 800ee80:	f7ff fd98 	bl	800e9b4 <console_puts>
 800ee84:	200a      	movs	r0, #10
 800ee86:	f7ff fd89 	bl	800e99c <console_putc>
 800ee8a:	2001      	movs	r0, #1
 800ee8c:	bd08      	pop	{r3, pc}
	...

0800ee90 <strtok>:
 800ee90:	b530      	push	{r4, r5, lr}
 800ee92:	b910      	cbnz	r0, 800ee9a <strtok+0xa>
 800ee94:	4b12      	ldr	r3, [pc, #72]	; (800eee0 <strtok+0x50>)
 800ee96:	6818      	ldr	r0, [r3, #0]
 800ee98:	b158      	cbz	r0, 800eeb2 <strtok+0x22>
 800ee9a:	4603      	mov	r3, r0
 800ee9c:	460d      	mov	r5, r1
 800ee9e:	4618      	mov	r0, r3
 800eea0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800eea4:	f815 4b01 	ldrb.w	r4, [r5], #1
 800eea8:	b924      	cbnz	r4, 800eeb4 <strtok+0x24>
 800eeaa:	b94a      	cbnz	r2, 800eec0 <strtok+0x30>
 800eeac:	4610      	mov	r0, r2
 800eeae:	4b0c      	ldr	r3, [pc, #48]	; (800eee0 <strtok+0x50>)
 800eeb0:	601a      	str	r2, [r3, #0]
 800eeb2:	bd30      	pop	{r4, r5, pc}
 800eeb4:	42a2      	cmp	r2, r4
 800eeb6:	d1f5      	bne.n	800eea4 <strtok+0x14>
 800eeb8:	e7f0      	b.n	800ee9c <strtok+0xc>
 800eeba:	4613      	mov	r3, r2
 800eebc:	e00c      	b.n	800eed8 <strtok+0x48>
 800eebe:	b914      	cbnz	r4, 800eec6 <strtok+0x36>
 800eec0:	460d      	mov	r5, r1
 800eec2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800eec6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800eeca:	42a2      	cmp	r2, r4
 800eecc:	d1f7      	bne.n	800eebe <strtok+0x2e>
 800eece:	2a00      	cmp	r2, #0
 800eed0:	d0f3      	beq.n	800eeba <strtok+0x2a>
 800eed2:	2200      	movs	r2, #0
 800eed4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800eed8:	4a01      	ldr	r2, [pc, #4]	; (800eee0 <strtok+0x50>)
 800eeda:	6013      	str	r3, [r2, #0]
 800eedc:	e7e9      	b.n	800eeb2 <strtok+0x22>
 800eede:	bf00      	nop
 800eee0:	20009bac 	andcs	r9, r0, ip, lsr #23

0800eee4 <isleapyear>:
 800eee4:	2264      	movs	r2, #100	; 0x64
 800eee6:	fb90 f3f2 	sdiv	r3, r0, r2
 800eeea:	fb02 0313 	mls	r3, r2, r3, r0
 800eeee:	b94b      	cbnz	r3, 800ef04 <isleapyear+0x20>
 800eef0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800eef4:	fb90 f2f3 	sdiv	r2, r0, r3
 800eef8:	fb03 0012 	mls	r0, r3, r2, r0
 800eefc:	fab0 f080 	clz	r0, r0
 800ef00:	0940      	lsrs	r0, r0, #5
 800ef02:	4770      	bx	lr
 800ef04:	f010 0f03 	tst.w	r0, #3
 800ef08:	bf0c      	ite	eq
 800ef0a:	2001      	moveq	r0, #1
 800ef0c:	2000      	movne	r0, #0
 800ef0e:	4770      	bx	lr

0800ef10 <getdaysofmonth>:
 800ef10:	b510      	push	{r4, lr}
 800ef12:	4604      	mov	r4, r0
 800ef14:	2c01      	cmp	r4, #1
 800ef16:	4608      	mov	r0, r1
 800ef18:	d102      	bne.n	800ef20 <getdaysofmonth+0x10>
 800ef1a:	f7ff ffe3 	bl	800eee4 <isleapyear>
 800ef1e:	b918      	cbnz	r0, 800ef28 <getdaysofmonth+0x18>
 800ef20:	4b02      	ldr	r3, [pc, #8]	; (800ef2c <getdaysofmonth+0x1c>)
 800ef22:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800ef26:	bd10      	pop	{r4, pc}
 800ef28:	201d      	movs	r0, #29
 800ef2a:	e7fc      	b.n	800ef26 <getdaysofmonth+0x16>
 800ef2c:	08012794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, sp}

0800ef30 <mktime>:
 800ef30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef34:	4604      	mov	r4, r0
 800ef36:	2800      	cmp	r0, #0
 800ef38:	d042      	beq.n	800efc0 <mktime+0x90>
 800ef3a:	6941      	ldr	r1, [r0, #20]
 800ef3c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800ef40:	2b45      	cmp	r3, #69	; 0x45
 800ef42:	d83d      	bhi.n	800efc0 <mktime+0x90>
 800ef44:	2600      	movs	r6, #0
 800ef46:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800ef4a:	f240 186d 	movw	r8, #365	; 0x16d
 800ef4e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800ef52:	42af      	cmp	r7, r5
 800ef54:	da23      	bge.n	800ef9e <mktime+0x6e>
 800ef56:	6927      	ldr	r7, [r4, #16]
 800ef58:	2f0b      	cmp	r7, #11
 800ef5a:	d831      	bhi.n	800efc0 <mktime+0x90>
 800ef5c:	2500      	movs	r5, #0
 800ef5e:	42af      	cmp	r7, r5
 800ef60:	d128      	bne.n	800efb4 <mktime+0x84>
 800ef62:	68e5      	ldr	r5, [r4, #12]
 800ef64:	2d00      	cmp	r5, #0
 800ef66:	dd2b      	ble.n	800efc0 <mktime+0x90>
 800ef68:	4638      	mov	r0, r7
 800ef6a:	f7ff ffd1 	bl	800ef10 <getdaysofmonth>
 800ef6e:	4285      	cmp	r5, r0
 800ef70:	dc26      	bgt.n	800efc0 <mktime+0x90>
 800ef72:	2318      	movs	r3, #24
 800ef74:	3d01      	subs	r5, #1
 800ef76:	4435      	add	r5, r6
 800ef78:	435d      	muls	r5, r3
 800ef7a:	68a3      	ldr	r3, [r4, #8]
 800ef7c:	2b17      	cmp	r3, #23
 800ef7e:	d81f      	bhi.n	800efc0 <mktime+0x90>
 800ef80:	203c      	movs	r0, #60	; 0x3c
 800ef82:	442b      	add	r3, r5
 800ef84:	fb00 f503 	mul.w	r5, r0, r3
 800ef88:	6863      	ldr	r3, [r4, #4]
 800ef8a:	2b3b      	cmp	r3, #59	; 0x3b
 800ef8c:	d818      	bhi.n	800efc0 <mktime+0x90>
 800ef8e:	442b      	add	r3, r5
 800ef90:	4343      	muls	r3, r0
 800ef92:	6820      	ldr	r0, [r4, #0]
 800ef94:	283b      	cmp	r0, #59	; 0x3b
 800ef96:	d813      	bhi.n	800efc0 <mktime+0x90>
 800ef98:	4418      	add	r0, r3
 800ef9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef9e:	4628      	mov	r0, r5
 800efa0:	f7ff ffa0 	bl	800eee4 <isleapyear>
 800efa4:	2800      	cmp	r0, #0
 800efa6:	bf14      	ite	ne
 800efa8:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800efac:	4643      	moveq	r3, r8
 800efae:	3501      	adds	r5, #1
 800efb0:	441e      	add	r6, r3
 800efb2:	e7ce      	b.n	800ef52 <mktime+0x22>
 800efb4:	4628      	mov	r0, r5
 800efb6:	f7ff ffab 	bl	800ef10 <getdaysofmonth>
 800efba:	3501      	adds	r5, #1
 800efbc:	4406      	add	r6, r0
 800efbe:	e7ce      	b.n	800ef5e <mktime+0x2e>
 800efc0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800efc4:	e7e9      	b.n	800ef9a <mktime+0x6a>
	...

0800efc8 <gettimeofday>:
 800efc8:	b538      	push	{r3, r4, r5, lr}
 800efca:	4b10      	ldr	r3, [pc, #64]	; (800f00c <gettimeofday+0x44>)
 800efcc:	4a10      	ldr	r2, [pc, #64]	; (800f010 <gettimeofday+0x48>)
 800efce:	681b      	ldr	r3, [r3, #0]
 800efd0:	6814      	ldr	r4, [r2, #0]
 800efd2:	6013      	str	r3, [r2, #0]
 800efd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800efd8:	429c      	cmp	r4, r3
 800efda:	bf2c      	ite	cs
 800efdc:	1ae4      	subcs	r4, r4, r3
 800efde:	1b1c      	subcc	r4, r3, r4
 800efe0:	4354      	muls	r4, r2
 800efe2:	4b0c      	ldr	r3, [pc, #48]	; (800f014 <gettimeofday+0x4c>)
 800efe4:	4605      	mov	r5, r0
 800efe6:	e9d3 2100 	ldrd	r2, r1, [r3]
 800efea:	18a4      	adds	r4, r4, r2
 800efec:	f141 0100 	adc.w	r1, r1, #0
 800eff0:	e9c3 4100 	strd	r4, r1, [r3]
 800eff4:	4620      	mov	r0, r4
 800eff6:	2300      	movs	r3, #0
 800eff8:	4a07      	ldr	r2, [pc, #28]	; (800f018 <gettimeofday+0x50>)
 800effa:	f7f8 f8a9 	bl	8007150 <__aeabi_uldivmod>
 800effe:	4b06      	ldr	r3, [pc, #24]	; (800f018 <gettimeofday+0x50>)
 800f000:	6028      	str	r0, [r5, #0]
 800f002:	fb03 4410 	mls	r4, r3, r0, r4
 800f006:	2000      	movs	r0, #0
 800f008:	606c      	str	r4, [r5, #4]
 800f00a:	bd38      	pop	{r3, r4, r5, pc}
 800f00c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f010:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f014:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0
 800f018:	000f4240 	andeq	r4, pc, r0, asr #4

0800f01c <settimeofday>:
 800f01c:	4b07      	ldr	r3, [pc, #28]	; (800f03c <settimeofday+0x20>)
 800f01e:	b510      	push	{r4, lr}
 800f020:	681a      	ldr	r2, [r3, #0]
 800f022:	4b07      	ldr	r3, [pc, #28]	; (800f040 <settimeofday+0x24>)
 800f024:	6804      	ldr	r4, [r0, #0]
 800f026:	601a      	str	r2, [r3, #0]
 800f028:	6843      	ldr	r3, [r0, #4]
 800f02a:	4806      	ldr	r0, [pc, #24]	; (800f044 <settimeofday+0x28>)
 800f02c:	17da      	asrs	r2, r3, #31
 800f02e:	fbc4 3200 	smlal	r3, r2, r4, r0
 800f032:	4905      	ldr	r1, [pc, #20]	; (800f048 <settimeofday+0x2c>)
 800f034:	2000      	movs	r0, #0
 800f036:	e9c1 3200 	strd	r3, r2, [r1]
 800f03a:	bd10      	pop	{r4, pc}
 800f03c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f040:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f044:	000f4240 	andeq	r4, pc, r0, asr #4
 800f048:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0

0800f04c <time>:
 800f04c:	b513      	push	{r0, r1, r4, lr}
 800f04e:	4604      	mov	r4, r0
 800f050:	2100      	movs	r1, #0
 800f052:	4668      	mov	r0, sp
 800f054:	f7ff ffb8 	bl	800efc8 <gettimeofday>
 800f058:	9800      	ldr	r0, [sp, #0]
 800f05a:	b104      	cbz	r4, 800f05e <time+0x12>
 800f05c:	6020      	str	r0, [r4, #0]
 800f05e:	b002      	add	sp, #8
 800f060:	bd10      	pop	{r4, pc}
	...

0800f064 <uart0_init>:
 800f064:	2301      	movs	r3, #1
 800f066:	b507      	push	{r0, r1, r2, lr}
 800f068:	2208      	movs	r2, #8
 800f06a:	9300      	str	r3, [sp, #0]
 800f06c:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800f070:	2300      	movs	r3, #0
 800f072:	4803      	ldr	r0, [pc, #12]	; (800f080 <uart0_init+0x1c>)
 800f074:	f000 ffe6 	bl	8010044 <gd32_uart_begin>
 800f078:	b003      	add	sp, #12
 800f07a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f07e:	bf00      	nop
 800f080:	40013800 	andmi	r3, r1, r0, lsl #16

0800f084 <uart0_putc>:
 800f084:	280a      	cmp	r0, #10
 800f086:	b538      	push	{r3, r4, r5, lr}
 800f088:	4604      	mov	r4, r0
 800f08a:	d10a      	bne.n	800f0a2 <uart0_putc+0x1e>
 800f08c:	4d0b      	ldr	r5, [pc, #44]	; (800f0bc <uart0_putc+0x38>)
 800f08e:	2107      	movs	r1, #7
 800f090:	4628      	mov	r0, r5
 800f092:	f000 fd41 	bl	800fb18 <usart_flag_get>
 800f096:	2800      	cmp	r0, #0
 800f098:	d0f9      	beq.n	800f08e <uart0_putc+0xa>
 800f09a:	220d      	movs	r2, #13
 800f09c:	4b08      	ldr	r3, [pc, #32]	; (800f0c0 <uart0_putc+0x3c>)
 800f09e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800f0a2:	4d06      	ldr	r5, [pc, #24]	; (800f0bc <uart0_putc+0x38>)
 800f0a4:	2107      	movs	r1, #7
 800f0a6:	4628      	mov	r0, r5
 800f0a8:	f000 fd36 	bl	800fb18 <usart_flag_get>
 800f0ac:	2800      	cmp	r0, #0
 800f0ae:	d0f9      	beq.n	800f0a4 <uart0_putc+0x20>
 800f0b0:	4b03      	ldr	r3, [pc, #12]	; (800f0c0 <uart0_putc+0x3c>)
 800f0b2:	b2e4      	uxtb	r4, r4
 800f0b4:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800f0b8:	bd38      	pop	{r3, r4, r5, pc}
 800f0ba:	bf00      	nop
 800f0bc:	40013800 	andmi	r3, r1, r0, lsl #16
 800f0c0:	40013000 	andmi	r3, r1, r0

0800f0c4 <uart0_puts>:
 800f0c4:	b510      	push	{r4, lr}
 800f0c6:	1e44      	subs	r4, r0, #1
 800f0c8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800f0cc:	b903      	cbnz	r3, 800f0d0 <uart0_puts+0xc>
 800f0ce:	bd10      	pop	{r4, pc}
 800f0d0:	2b0a      	cmp	r3, #10
 800f0d2:	d102      	bne.n	800f0da <uart0_puts+0x16>
 800f0d4:	200d      	movs	r0, #13
 800f0d6:	f7ff ffd5 	bl	800f084 <uart0_putc>
 800f0da:	7820      	ldrb	r0, [r4, #0]
 800f0dc:	f7ff ffd2 	bl	800f084 <uart0_putc>
 800f0e0:	e7f2      	b.n	800f0c8 <uart0_puts+0x4>
	...

0800f0e4 <systick_config>:
 800f0e4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f0e8:	4b0b      	ldr	r3, [pc, #44]	; (800f118 <systick_config+0x34>)
 800f0ea:	681b      	ldr	r3, [r3, #0]
 800f0ec:	fbb3 f3f2 	udiv	r3, r3, r2
 800f0f0:	3b01      	subs	r3, #1
 800f0f2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f0f6:	d20d      	bcs.n	800f114 <systick_config+0x30>
 800f0f8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f0fc:	21f0      	movs	r1, #240	; 0xf0
 800f0fe:	6153      	str	r3, [r2, #20]
 800f100:	4b06      	ldr	r3, [pc, #24]	; (800f11c <systick_config+0x38>)
 800f102:	2007      	movs	r0, #7
 800f104:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f108:	2100      	movs	r1, #0
 800f10a:	6191      	str	r1, [r2, #24]
 800f10c:	6110      	str	r0, [r2, #16]
 800f10e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f112:	4770      	bx	lr
 800f114:	e7fe      	b.n	800f114 <systick_config+0x30>
 800f116:	bf00      	nop
 800f118:	200000f4 	strdcs	r0, [r0], -r4
 800f11c:	e000ed00 	and	lr, r0, r0, lsl #26

0800f120 <SysTick_Handler>:
 800f120:	4a02      	ldr	r2, [pc, #8]	; (800f12c <SysTick_Handler+0xc>)
 800f122:	6813      	ldr	r3, [r2, #0]
 800f124:	3301      	adds	r3, #1
 800f126:	6013      	str	r3, [r2, #0]
 800f128:	4770      	bx	lr
 800f12a:	bf00      	nop
 800f12c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800f130 <SystemInit>:
 800f130:	4b37      	ldr	r3, [pc, #220]	; (800f210 <SystemInit+0xe0>)
 800f132:	4838      	ldr	r0, [pc, #224]	; (800f214 <SystemInit+0xe4>)
 800f134:	681a      	ldr	r2, [r3, #0]
 800f136:	f042 0201 	orr.w	r2, r2, #1
 800f13a:	601a      	str	r2, [r3, #0]
 800f13c:	685a      	ldr	r2, [r3, #4]
 800f13e:	f022 0203 	bic.w	r2, r2, #3
 800f142:	605a      	str	r2, [r3, #4]
 800f144:	6819      	ldr	r1, [r3, #0]
 800f146:	4001      	ands	r1, r0
 800f148:	6019      	str	r1, [r3, #0]
 800f14a:	685a      	ldr	r2, [r3, #4]
 800f14c:	4932      	ldr	r1, [pc, #200]	; (800f218 <SystemInit+0xe8>)
 800f14e:	4011      	ands	r1, r2
 800f150:	6059      	str	r1, [r3, #4]
 800f152:	681a      	ldr	r2, [r3, #0]
 800f154:	4002      	ands	r2, r0
 800f156:	601a      	str	r2, [r3, #0]
 800f158:	681a      	ldr	r2, [r3, #0]
 800f15a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800f15e:	601a      	str	r2, [r3, #0]
 800f160:	685a      	ldr	r2, [r3, #4]
 800f162:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800f166:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800f16a:	605a      	str	r2, [r3, #4]
 800f16c:	2200      	movs	r2, #0
 800f16e:	62da      	str	r2, [r3, #44]	; 0x2c
 800f170:	681a      	ldr	r2, [r3, #0]
 800f172:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800f176:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800f17a:	601a      	str	r2, [r3, #0]
 800f17c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800f180:	609a      	str	r2, [r3, #8]
 800f182:	681a      	ldr	r2, [r3, #0]
 800f184:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f188:	601a      	str	r2, [r3, #0]
 800f18a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f18e:	6819      	ldr	r1, [r3, #0]
 800f190:	0389      	lsls	r1, r1, #14
 800f192:	d401      	bmi.n	800f198 <SystemInit+0x68>
 800f194:	3a01      	subs	r2, #1
 800f196:	d1fa      	bne.n	800f18e <SystemInit+0x5e>
 800f198:	681a      	ldr	r2, [r3, #0]
 800f19a:	0392      	lsls	r2, r2, #14
 800f19c:	d400      	bmi.n	800f1a0 <SystemInit+0x70>
 800f19e:	e7fe      	b.n	800f19e <SystemInit+0x6e>
 800f1a0:	685a      	ldr	r2, [r3, #4]
 800f1a2:	605a      	str	r2, [r3, #4]
 800f1a4:	685a      	ldr	r2, [r3, #4]
 800f1a6:	605a      	str	r2, [r3, #4]
 800f1a8:	685a      	ldr	r2, [r3, #4]
 800f1aa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f1ae:	605a      	str	r2, [r3, #4]
 800f1b0:	685a      	ldr	r2, [r3, #4]
 800f1b2:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800f1b6:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800f1ba:	605a      	str	r2, [r3, #4]
 800f1bc:	685a      	ldr	r2, [r3, #4]
 800f1be:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800f1c2:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800f1c6:	605a      	str	r2, [r3, #4]
 800f1c8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f1ca:	4a14      	ldr	r2, [pc, #80]	; (800f21c <SystemInit+0xec>)
 800f1cc:	400a      	ands	r2, r1
 800f1ce:	62da      	str	r2, [r3, #44]	; 0x2c
 800f1d0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f1d2:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800f1d6:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800f1da:	62da      	str	r2, [r3, #44]	; 0x2c
 800f1dc:	681a      	ldr	r2, [r3, #0]
 800f1de:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800f1e2:	601a      	str	r2, [r3, #0]
 800f1e4:	681a      	ldr	r2, [r3, #0]
 800f1e6:	0110      	lsls	r0, r2, #4
 800f1e8:	d5fc      	bpl.n	800f1e4 <SystemInit+0xb4>
 800f1ea:	681a      	ldr	r2, [r3, #0]
 800f1ec:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800f1f0:	601a      	str	r2, [r3, #0]
 800f1f2:	681a      	ldr	r2, [r3, #0]
 800f1f4:	0191      	lsls	r1, r2, #6
 800f1f6:	d5fc      	bpl.n	800f1f2 <SystemInit+0xc2>
 800f1f8:	685a      	ldr	r2, [r3, #4]
 800f1fa:	f022 0203 	bic.w	r2, r2, #3
 800f1fe:	605a      	str	r2, [r3, #4]
 800f200:	685a      	ldr	r2, [r3, #4]
 800f202:	f042 0202 	orr.w	r2, r2, #2
 800f206:	605a      	str	r2, [r3, #4]
 800f208:	685a      	ldr	r2, [r3, #4]
 800f20a:	0712      	lsls	r2, r2, #28
 800f20c:	d5fc      	bpl.n	800f208 <SystemInit+0xd8>
 800f20e:	4770      	bx	lr
 800f210:	40021000 	andmi	r1, r2, r0
 800f214:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800f218:	e0ff000c 	rscs	r0, pc, ip
 800f21c:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800f220 <dma_deinit>:
 800f220:	4b0c      	ldr	r3, [pc, #48]	; (800f254 <dma_deinit+0x34>)
 800f222:	4298      	cmp	r0, r3
 800f224:	d102      	bne.n	800f22c <dma_deinit+0xc>
 800f226:	2904      	cmp	r1, #4
 800f228:	d900      	bls.n	800f22c <dma_deinit+0xc>
 800f22a:	e7fe      	b.n	800f22a <dma_deinit+0xa>
 800f22c:	2314      	movs	r3, #20
 800f22e:	fb03 0301 	mla	r3, r3, r1, r0
 800f232:	689a      	ldr	r2, [r3, #8]
 800f234:	0089      	lsls	r1, r1, #2
 800f236:	f022 0201 	bic.w	r2, r2, #1
 800f23a:	609a      	str	r2, [r3, #8]
 800f23c:	2200      	movs	r2, #0
 800f23e:	609a      	str	r2, [r3, #8]
 800f240:	60da      	str	r2, [r3, #12]
 800f242:	611a      	str	r2, [r3, #16]
 800f244:	615a      	str	r2, [r3, #20]
 800f246:	230f      	movs	r3, #15
 800f248:	6842      	ldr	r2, [r0, #4]
 800f24a:	fa03 f101 	lsl.w	r1, r3, r1
 800f24e:	4311      	orrs	r1, r2
 800f250:	6041      	str	r1, [r0, #4]
 800f252:	4770      	bx	lr
 800f254:	40020400 	andmi	r0, r2, r0, lsl #8

0800f258 <dma_init>:
 800f258:	4b1b      	ldr	r3, [pc, #108]	; (800f2c8 <dma_init+0x70>)
 800f25a:	b510      	push	{r4, lr}
 800f25c:	4298      	cmp	r0, r3
 800f25e:	d102      	bne.n	800f266 <dma_init+0xe>
 800f260:	2904      	cmp	r1, #4
 800f262:	d900      	bls.n	800f266 <dma_init+0xe>
 800f264:	e7fe      	b.n	800f264 <dma_init+0xc>
 800f266:	2314      	movs	r3, #20
 800f268:	fb03 0101 	mla	r1, r3, r1, r0
 800f26c:	6813      	ldr	r3, [r2, #0]
 800f26e:	610b      	str	r3, [r1, #16]
 800f270:	6893      	ldr	r3, [r2, #8]
 800f272:	614b      	str	r3, [r1, #20]
 800f274:	8a13      	ldrh	r3, [r2, #16]
 800f276:	60cb      	str	r3, [r1, #12]
 800f278:	68d4      	ldr	r4, [r2, #12]
 800f27a:	6853      	ldr	r3, [r2, #4]
 800f27c:	6888      	ldr	r0, [r1, #8]
 800f27e:	4323      	orrs	r3, r4
 800f280:	6954      	ldr	r4, [r2, #20]
 800f282:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800f286:	4323      	orrs	r3, r4
 800f288:	4303      	orrs	r3, r0
 800f28a:	608b      	str	r3, [r1, #8]
 800f28c:	7e13      	ldrb	r3, [r2, #24]
 800f28e:	2b01      	cmp	r3, #1
 800f290:	688b      	ldr	r3, [r1, #8]
 800f292:	bf0c      	ite	eq
 800f294:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800f298:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800f29c:	608b      	str	r3, [r1, #8]
 800f29e:	7e53      	ldrb	r3, [r2, #25]
 800f2a0:	2b01      	cmp	r3, #1
 800f2a2:	688b      	ldr	r3, [r1, #8]
 800f2a4:	bf0c      	ite	eq
 800f2a6:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800f2aa:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800f2ae:	608b      	str	r3, [r1, #8]
 800f2b0:	7e93      	ldrb	r3, [r2, #26]
 800f2b2:	b923      	cbnz	r3, 800f2be <dma_init+0x66>
 800f2b4:	688b      	ldr	r3, [r1, #8]
 800f2b6:	f023 0310 	bic.w	r3, r3, #16
 800f2ba:	608b      	str	r3, [r1, #8]
 800f2bc:	bd10      	pop	{r4, pc}
 800f2be:	688b      	ldr	r3, [r1, #8]
 800f2c0:	f043 0310 	orr.w	r3, r3, #16
 800f2c4:	e7f9      	b.n	800f2ba <dma_init+0x62>
 800f2c6:	bf00      	nop
 800f2c8:	40020400 	andmi	r0, r2, r0, lsl #8

0800f2cc <dma_circulation_disable>:
 800f2cc:	4b06      	ldr	r3, [pc, #24]	; (800f2e8 <dma_circulation_disable+0x1c>)
 800f2ce:	4298      	cmp	r0, r3
 800f2d0:	d102      	bne.n	800f2d8 <dma_circulation_disable+0xc>
 800f2d2:	2904      	cmp	r1, #4
 800f2d4:	d900      	bls.n	800f2d8 <dma_circulation_disable+0xc>
 800f2d6:	e7fe      	b.n	800f2d6 <dma_circulation_disable+0xa>
 800f2d8:	2314      	movs	r3, #20
 800f2da:	4359      	muls	r1, r3
 800f2dc:	3008      	adds	r0, #8
 800f2de:	580b      	ldr	r3, [r1, r0]
 800f2e0:	f023 0320 	bic.w	r3, r3, #32
 800f2e4:	500b      	str	r3, [r1, r0]
 800f2e6:	4770      	bx	lr
 800f2e8:	40020400 	andmi	r0, r2, r0, lsl #8

0800f2ec <dma_memory_to_memory_disable>:
 800f2ec:	4b06      	ldr	r3, [pc, #24]	; (800f308 <dma_memory_to_memory_disable+0x1c>)
 800f2ee:	4298      	cmp	r0, r3
 800f2f0:	d102      	bne.n	800f2f8 <dma_memory_to_memory_disable+0xc>
 800f2f2:	2904      	cmp	r1, #4
 800f2f4:	d900      	bls.n	800f2f8 <dma_memory_to_memory_disable+0xc>
 800f2f6:	e7fe      	b.n	800f2f6 <dma_memory_to_memory_disable+0xa>
 800f2f8:	2314      	movs	r3, #20
 800f2fa:	4359      	muls	r1, r3
 800f2fc:	3008      	adds	r0, #8
 800f2fe:	580b      	ldr	r3, [r1, r0]
 800f300:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800f304:	500b      	str	r3, [r1, r0]
 800f306:	4770      	bx	lr
 800f308:	40020400 	andmi	r0, r2, r0, lsl #8

0800f30c <fmc_bank0_unlock>:
 800f30c:	4b04      	ldr	r3, [pc, #16]	; (800f320 <fmc_bank0_unlock+0x14>)
 800f30e:	691a      	ldr	r2, [r3, #16]
 800f310:	0612      	lsls	r2, r2, #24
 800f312:	bf41      	itttt	mi
 800f314:	4a03      	ldrmi	r2, [pc, #12]	; (800f324 <fmc_bank0_unlock+0x18>)
 800f316:	605a      	strmi	r2, [r3, #4]
 800f318:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f31c:	605a      	strmi	r2, [r3, #4]
 800f31e:	4770      	bx	lr
 800f320:	40022000 	andmi	r2, r2, r0
 800f324:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f328 <fmc_bank1_unlock>:
 800f328:	4b04      	ldr	r3, [pc, #16]	; (800f33c <fmc_bank1_unlock+0x14>)
 800f32a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f32c:	0612      	lsls	r2, r2, #24
 800f32e:	bf41      	itttt	mi
 800f330:	4a03      	ldrmi	r2, [pc, #12]	; (800f340 <fmc_bank1_unlock+0x18>)
 800f332:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f334:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f338:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f33a:	4770      	bx	lr
 800f33c:	40022000 	andmi	r2, r2, r0
 800f340:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f344 <fmc_bank0_lock>:
 800f344:	4a02      	ldr	r2, [pc, #8]	; (800f350 <fmc_bank0_lock+0xc>)
 800f346:	6913      	ldr	r3, [r2, #16]
 800f348:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f34c:	6113      	str	r3, [r2, #16]
 800f34e:	4770      	bx	lr
 800f350:	40022000 	andmi	r2, r2, r0

0800f354 <fmc_bank1_lock>:
 800f354:	4a02      	ldr	r2, [pc, #8]	; (800f360 <fmc_bank1_lock+0xc>)
 800f356:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800f358:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f35c:	6513      	str	r3, [r2, #80]	; 0x50
 800f35e:	4770      	bx	lr
 800f360:	40022000 	andmi	r2, r2, r0

0800f364 <fmc_bank0_state_get>:
 800f364:	4b08      	ldr	r3, [pc, #32]	; (800f388 <fmc_bank0_state_get+0x24>)
 800f366:	68da      	ldr	r2, [r3, #12]
 800f368:	07d1      	lsls	r1, r2, #31
 800f36a:	d409      	bmi.n	800f380 <fmc_bank0_state_get+0x1c>
 800f36c:	68da      	ldr	r2, [r3, #12]
 800f36e:	06d2      	lsls	r2, r2, #27
 800f370:	d408      	bmi.n	800f384 <fmc_bank0_state_get+0x20>
 800f372:	68db      	ldr	r3, [r3, #12]
 800f374:	f013 0f04 	tst.w	r3, #4
 800f378:	bf0c      	ite	eq
 800f37a:	2000      	moveq	r0, #0
 800f37c:	2002      	movne	r0, #2
 800f37e:	4770      	bx	lr
 800f380:	2001      	movs	r0, #1
 800f382:	4770      	bx	lr
 800f384:	2003      	movs	r0, #3
 800f386:	4770      	bx	lr
 800f388:	40022000 	andmi	r2, r2, r0

0800f38c <fmc_bank1_state_get>:
 800f38c:	4b08      	ldr	r3, [pc, #32]	; (800f3b0 <fmc_bank1_state_get+0x24>)
 800f38e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f390:	07d1      	lsls	r1, r2, #31
 800f392:	d409      	bmi.n	800f3a8 <fmc_bank1_state_get+0x1c>
 800f394:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f396:	06d2      	lsls	r2, r2, #27
 800f398:	d408      	bmi.n	800f3ac <fmc_bank1_state_get+0x20>
 800f39a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f39c:	f013 0f04 	tst.w	r3, #4
 800f3a0:	bf0c      	ite	eq
 800f3a2:	2000      	moveq	r0, #0
 800f3a4:	2002      	movne	r0, #2
 800f3a6:	4770      	bx	lr
 800f3a8:	2001      	movs	r0, #1
 800f3aa:	4770      	bx	lr
 800f3ac:	2003      	movs	r0, #3
 800f3ae:	4770      	bx	lr
 800f3b0:	40022000 	andmi	r2, r2, r0

0800f3b4 <fwdgt_enable>:
 800f3b4:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800f3b8:	4b01      	ldr	r3, [pc, #4]	; (800f3c0 <fwdgt_enable+0xc>)
 800f3ba:	601a      	str	r2, [r3, #0]
 800f3bc:	4770      	bx	lr
 800f3be:	bf00      	nop
 800f3c0:	40003000 	andmi	r3, r0, r0

0800f3c4 <fwdgt_counter_reload>:
 800f3c4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800f3c8:	4b01      	ldr	r3, [pc, #4]	; (800f3d0 <fwdgt_counter_reload+0xc>)
 800f3ca:	601a      	str	r2, [r3, #0]
 800f3cc:	4770      	bx	lr
 800f3ce:	bf00      	nop
 800f3d0:	40003000 	andmi	r3, r0, r0

0800f3d4 <fwdgt_config>:
 800f3d4:	f245 5355 	movw	r3, #21845	; 0x5555
 800f3d8:	4a11      	ldr	r2, [pc, #68]	; (800f420 <fwdgt_config+0x4c>)
 800f3da:	b510      	push	{r4, lr}
 800f3dc:	4c11      	ldr	r4, [pc, #68]	; (800f424 <fwdgt_config+0x50>)
 800f3de:	6013      	str	r3, [r2, #0]
 800f3e0:	68d3      	ldr	r3, [r2, #12]
 800f3e2:	3c01      	subs	r4, #1
 800f3e4:	f003 0301 	and.w	r3, r3, #1
 800f3e8:	d013      	beq.n	800f412 <fwdgt_config+0x3e>
 800f3ea:	2b00      	cmp	r3, #0
 800f3ec:	d1f8      	bne.n	800f3e0 <fwdgt_config+0xc>
 800f3ee:	6051      	str	r1, [r2, #4]
 800f3f0:	490c      	ldr	r1, [pc, #48]	; (800f424 <fwdgt_config+0x50>)
 800f3f2:	4a0b      	ldr	r2, [pc, #44]	; (800f420 <fwdgt_config+0x4c>)
 800f3f4:	68d3      	ldr	r3, [r2, #12]
 800f3f6:	3901      	subs	r1, #1
 800f3f8:	f003 0302 	and.w	r3, r3, #2
 800f3fc:	d00d      	beq.n	800f41a <fwdgt_config+0x46>
 800f3fe:	2b00      	cmp	r3, #0
 800f400:	d1f8      	bne.n	800f3f4 <fwdgt_config+0x20>
 800f402:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800f406:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800f40a:	6090      	str	r0, [r2, #8]
 800f40c:	2001      	movs	r0, #1
 800f40e:	6013      	str	r3, [r2, #0]
 800f410:	e002      	b.n	800f418 <fwdgt_config+0x44>
 800f412:	2b00      	cmp	r3, #0
 800f414:	d0eb      	beq.n	800f3ee <fwdgt_config+0x1a>
 800f416:	2000      	movs	r0, #0
 800f418:	bd10      	pop	{r4, pc}
 800f41a:	2b00      	cmp	r3, #0
 800f41c:	d1fb      	bne.n	800f416 <fwdgt_config+0x42>
 800f41e:	e7f0      	b.n	800f402 <fwdgt_config+0x2e>
 800f420:	40003000 	andmi	r3, r0, r0
 800f424:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f428 <gpio_init>:
 800f428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f42c:	f04f 0c0f 	mov.w	ip, #15
 800f430:	06cf      	lsls	r7, r1, #27
 800f432:	f04f 0400 	mov.w	r4, #0
 800f436:	f04f 0701 	mov.w	r7, #1
 800f43a:	f001 050f 	and.w	r5, r1, #15
 800f43e:	bf48      	it	mi
 800f440:	4315      	orrmi	r5, r2
 800f442:	fa23 f204 	lsr.w	r2, r3, r4
 800f446:	07d6      	lsls	r6, r2, #31
 800f448:	d510      	bpl.n	800f46c <gpio_init+0x44>
 800f44a:	00a2      	lsls	r2, r4, #2
 800f44c:	6806      	ldr	r6, [r0, #0]
 800f44e:	fa0c fe02 	lsl.w	lr, ip, r2
 800f452:	ea26 060e 	bic.w	r6, r6, lr
 800f456:	fa05 f202 	lsl.w	r2, r5, r2
 800f45a:	2928      	cmp	r1, #40	; 0x28
 800f45c:	ea42 0206 	orr.w	r2, r2, r6
 800f460:	d128      	bne.n	800f4b4 <gpio_init+0x8c>
 800f462:	fa07 f604 	lsl.w	r6, r7, r4
 800f466:	401e      	ands	r6, r3
 800f468:	6146      	str	r6, [r0, #20]
 800f46a:	6002      	str	r2, [r0, #0]
 800f46c:	3401      	adds	r4, #1
 800f46e:	2c08      	cmp	r4, #8
 800f470:	d1e7      	bne.n	800f442 <gpio_init+0x1a>
 800f472:	2600      	movs	r6, #0
 800f474:	f04f 0c0f 	mov.w	ip, #15
 800f478:	2701      	movs	r7, #1
 800f47a:	f106 0208 	add.w	r2, r6, #8
 800f47e:	fa23 f402 	lsr.w	r4, r3, r2
 800f482:	07e4      	lsls	r4, r4, #31
 800f484:	d511      	bpl.n	800f4aa <gpio_init+0x82>
 800f486:	00b4      	lsls	r4, r6, #2
 800f488:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800f48c:	fa0c f804 	lsl.w	r8, ip, r4
 800f490:	ea2e 0e08 	bic.w	lr, lr, r8
 800f494:	fa05 f404 	lsl.w	r4, r5, r4
 800f498:	2928      	cmp	r1, #40	; 0x28
 800f49a:	ea44 040e 	orr.w	r4, r4, lr
 800f49e:	d110      	bne.n	800f4c2 <gpio_init+0x9a>
 800f4a0:	fa07 f202 	lsl.w	r2, r7, r2
 800f4a4:	401a      	ands	r2, r3
 800f4a6:	6142      	str	r2, [r0, #20]
 800f4a8:	6044      	str	r4, [r0, #4]
 800f4aa:	3601      	adds	r6, #1
 800f4ac:	2e08      	cmp	r6, #8
 800f4ae:	d1e4      	bne.n	800f47a <gpio_init+0x52>
 800f4b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4b4:	2948      	cmp	r1, #72	; 0x48
 800f4b6:	bf02      	ittt	eq
 800f4b8:	fa07 f604 	lsleq.w	r6, r7, r4
 800f4bc:	401e      	andeq	r6, r3
 800f4be:	6106      	streq	r6, [r0, #16]
 800f4c0:	e7d3      	b.n	800f46a <gpio_init+0x42>
 800f4c2:	2948      	cmp	r1, #72	; 0x48
 800f4c4:	bf02      	ittt	eq
 800f4c6:	fa07 f202 	lsleq.w	r2, r7, r2
 800f4ca:	401a      	andeq	r2, r3
 800f4cc:	6102      	streq	r2, [r0, #16]
 800f4ce:	e7eb      	b.n	800f4a8 <gpio_init+0x80>

0800f4d0 <gpio_pin_remap_config>:
 800f4d0:	2800      	cmp	r0, #0
 800f4d2:	4a16      	ldr	r2, [pc, #88]	; (800f52c <gpio_pin_remap_config+0x5c>)
 800f4d4:	b530      	push	{r4, r5, lr}
 800f4d6:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800f4da:	bfb4      	ite	lt
 800f4dc:	69d3      	ldrlt	r3, [r2, #28]
 800f4de:	6853      	ldrge	r3, [r2, #4]
 800f4e0:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800f4e4:	b284      	uxth	r4, r0
 800f4e6:	d110      	bne.n	800f50a <gpio_pin_remap_config+0x3a>
 800f4e8:	6855      	ldr	r5, [r2, #4]
 800f4ea:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f4ee:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800f4f2:	6055      	str	r5, [r2, #4]
 800f4f4:	b119      	cbz	r1, 800f4fe <gpio_pin_remap_config+0x2e>
 800f4f6:	0d42      	lsrs	r2, r0, #21
 800f4f8:	0112      	lsls	r2, r2, #4
 800f4fa:	4094      	lsls	r4, r2
 800f4fc:	4323      	orrs	r3, r4
 800f4fe:	4a0b      	ldr	r2, [pc, #44]	; (800f52c <gpio_pin_remap_config+0x5c>)
 800f500:	2800      	cmp	r0, #0
 800f502:	bfb4      	ite	lt
 800f504:	61d3      	strlt	r3, [r2, #28]
 800f506:	6053      	strge	r3, [r2, #4]
 800f508:	bd30      	pop	{r4, r5, pc}
 800f50a:	02c2      	lsls	r2, r0, #11
 800f50c:	bf4d      	iteet	mi
 800f50e:	2203      	movmi	r2, #3
 800f510:	0d42      	lsrpl	r2, r0, #21
 800f512:	0112      	lslpl	r2, r2, #4
 800f514:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 800f518:	bf4c      	ite	mi
 800f51a:	40aa      	lslmi	r2, r5
 800f51c:	fa04 f202 	lslpl.w	r2, r4, r2
 800f520:	ea23 0302 	bic.w	r3, r3, r2
 800f524:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 800f528:	e7e4      	b.n	800f4f4 <gpio_pin_remap_config+0x24>
 800f52a:	bf00      	nop
 800f52c:	40010000 	andmi	r0, r1, r0

0800f530 <gpio_ethernet_phy_select>:
 800f530:	4b04      	ldr	r3, [pc, #16]	; (800f544 <gpio_ethernet_phy_select+0x14>)
 800f532:	6859      	ldr	r1, [r3, #4]
 800f534:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 800f538:	6059      	str	r1, [r3, #4]
 800f53a:	685a      	ldr	r2, [r3, #4]
 800f53c:	4302      	orrs	r2, r0
 800f53e:	605a      	str	r2, [r3, #4]
 800f540:	4770      	bx	lr
 800f542:	bf00      	nop
 800f544:	40010000 	andmi	r0, r1, r0

0800f548 <rcu_periph_clock_enable>:
 800f548:	2201      	movs	r2, #1
 800f54a:	0983      	lsrs	r3, r0, #6
 800f54c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f550:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f554:	6819      	ldr	r1, [r3, #0]
 800f556:	f000 001f 	and.w	r0, r0, #31
 800f55a:	fa02 f000 	lsl.w	r0, r2, r0
 800f55e:	4308      	orrs	r0, r1
 800f560:	6018      	str	r0, [r3, #0]
 800f562:	4770      	bx	lr

0800f564 <rcu_periph_clock_disable>:
 800f564:	2101      	movs	r1, #1
 800f566:	0983      	lsrs	r3, r0, #6
 800f568:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f56c:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f570:	681a      	ldr	r2, [r3, #0]
 800f572:	f000 001f 	and.w	r0, r0, #31
 800f576:	fa01 f000 	lsl.w	r0, r1, r0
 800f57a:	ea22 0000 	bic.w	r0, r2, r0
 800f57e:	6018      	str	r0, [r3, #0]
 800f580:	4770      	bx	lr

0800f582 <rcu_periph_reset_enable>:
 800f582:	f7ff bfe1 	b.w	800f548 <rcu_periph_clock_enable>

0800f586 <rcu_periph_reset_disable>:
 800f586:	f7ff bfed 	b.w	800f564 <rcu_periph_clock_disable>
	...

0800f58c <rcu_ckout0_config>:
 800f58c:	4a03      	ldr	r2, [pc, #12]	; (800f59c <rcu_ckout0_config+0x10>)
 800f58e:	6853      	ldr	r3, [r2, #4]
 800f590:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f594:	4303      	orrs	r3, r0
 800f596:	6053      	str	r3, [r2, #4]
 800f598:	4770      	bx	lr
 800f59a:	bf00      	nop
 800f59c:	40021000 	andmi	r1, r2, r0

0800f5a0 <rcu_pll2_config>:
 800f5a0:	4b04      	ldr	r3, [pc, #16]	; (800f5b4 <rcu_pll2_config+0x14>)
 800f5a2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f5a4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 800f5a8:	62d9      	str	r1, [r3, #44]	; 0x2c
 800f5aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f5ac:	4302      	orrs	r2, r0
 800f5ae:	62da      	str	r2, [r3, #44]	; 0x2c
 800f5b0:	4770      	bx	lr
 800f5b2:	bf00      	nop
 800f5b4:	40021000 	andmi	r1, r2, r0

0800f5b8 <rcu_adc_clock_config>:
 800f5b8:	490c      	ldr	r1, [pc, #48]	; (800f5ec <rcu_adc_clock_config+0x34>)
 800f5ba:	2805      	cmp	r0, #5
 800f5bc:	684b      	ldr	r3, [r1, #4]
 800f5be:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f5c2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800f5c6:	d006      	beq.n	800f5d6 <rcu_adc_clock_config+0x1e>
 800f5c8:	d803      	bhi.n	800f5d2 <rcu_adc_clock_config+0x1a>
 800f5ca:	2804      	cmp	r0, #4
 800f5cc:	d10a      	bne.n	800f5e4 <rcu_adc_clock_config+0x2c>
 800f5ce:	604b      	str	r3, [r1, #4]
 800f5d0:	4770      	bx	lr
 800f5d2:	2807      	cmp	r0, #7
 800f5d4:	d1fb      	bne.n	800f5ce <rcu_adc_clock_config+0x16>
 800f5d6:	4a06      	ldr	r2, [pc, #24]	; (800f5f0 <rcu_adc_clock_config+0x38>)
 800f5d8:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 800f5dc:	4303      	orrs	r3, r0
 800f5de:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800f5e2:	e7f4      	b.n	800f5ce <rcu_adc_clock_config+0x16>
 800f5e4:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800f5e8:	e7f1      	b.n	800f5ce <rcu_adc_clock_config+0x16>
 800f5ea:	bf00      	nop
 800f5ec:	40021000 	andmi	r1, r2, r0
 800f5f0:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0800f5f4 <rcu_flag_get>:
 800f5f4:	0983      	lsrs	r3, r0, #6
 800f5f6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f5fa:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f5fe:	681b      	ldr	r3, [r3, #0]
 800f600:	f000 001f 	and.w	r0, r0, #31
 800f604:	fa23 f000 	lsr.w	r0, r3, r0
 800f608:	f000 0001 	and.w	r0, r0, #1
 800f60c:	4770      	bx	lr
	...

0800f610 <rcu_osci_stab_wait>:
 800f610:	281a      	cmp	r0, #26
 800f612:	b508      	push	{r3, lr}
 800f614:	d051      	beq.n	800f6ba <rcu_osci_stab_wait+0xaa>
 800f616:	d806      	bhi.n	800f626 <rcu_osci_stab_wait+0x16>
 800f618:	2810      	cmp	r0, #16
 800f61a:	d015      	beq.n	800f648 <rcu_osci_stab_wait+0x38>
 800f61c:	2818      	cmp	r0, #24
 800f61e:	d043      	beq.n	800f6a8 <rcu_osci_stab_wait+0x98>
 800f620:	b368      	cbz	r0, 800f67e <rcu_osci_stab_wait+0x6e>
 800f622:	2000      	movs	r0, #0
 800f624:	bd08      	pop	{r3, pc}
 800f626:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800f62a:	d01c      	beq.n	800f666 <rcu_osci_stab_wait+0x56>
 800f62c:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 800f630:	d02f      	beq.n	800f692 <rcu_osci_stab_wait+0x82>
 800f632:	281c      	cmp	r0, #28
 800f634:	d1f5      	bne.n	800f622 <rcu_osci_stab_wait+0x12>
 800f636:	4a25      	ldr	r2, [pc, #148]	; (800f6cc <rcu_osci_stab_wait+0xbc>)
 800f638:	201d      	movs	r0, #29
 800f63a:	f7ff ffdb 	bl	800f5f4 <rcu_flag_get>
 800f63e:	b908      	cbnz	r0, 800f644 <rcu_osci_stab_wait+0x34>
 800f640:	3a01      	subs	r2, #1
 800f642:	d1f9      	bne.n	800f638 <rcu_osci_stab_wait+0x28>
 800f644:	201d      	movs	r0, #29
 800f646:	e008      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f648:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f64c:	2011      	movs	r0, #17
 800f64e:	f7ff ffd1 	bl	800f5f4 <rcu_flag_get>
 800f652:	b908      	cbnz	r0, 800f658 <rcu_osci_stab_wait+0x48>
 800f654:	3a01      	subs	r2, #1
 800f656:	d1f9      	bne.n	800f64c <rcu_osci_stab_wait+0x3c>
 800f658:	2011      	movs	r0, #17
 800f65a:	f7ff ffcb 	bl	800f5f4 <rcu_flag_get>
 800f65e:	3800      	subs	r0, #0
 800f660:	bf18      	it	ne
 800f662:	2001      	movne	r0, #1
 800f664:	e7de      	b.n	800f624 <rcu_osci_stab_wait+0x14>
 800f666:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 800f66a:	f640 0001 	movw	r0, #2049	; 0x801
 800f66e:	f7ff ffc1 	bl	800f5f4 <rcu_flag_get>
 800f672:	b908      	cbnz	r0, 800f678 <rcu_osci_stab_wait+0x68>
 800f674:	3a01      	subs	r2, #1
 800f676:	d1f8      	bne.n	800f66a <rcu_osci_stab_wait+0x5a>
 800f678:	f640 0001 	movw	r0, #2049	; 0x801
 800f67c:	e7ed      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f67e:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 800f682:	2001      	movs	r0, #1
 800f684:	f7ff ffb6 	bl	800f5f4 <rcu_flag_get>
 800f688:	b908      	cbnz	r0, 800f68e <rcu_osci_stab_wait+0x7e>
 800f68a:	3a01      	subs	r2, #1
 800f68c:	d1f9      	bne.n	800f682 <rcu_osci_stab_wait+0x72>
 800f68e:	2001      	movs	r0, #1
 800f690:	e7e3      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f692:	4a0e      	ldr	r2, [pc, #56]	; (800f6cc <rcu_osci_stab_wait+0xbc>)
 800f694:	f640 1001 	movw	r0, #2305	; 0x901
 800f698:	f7ff ffac 	bl	800f5f4 <rcu_flag_get>
 800f69c:	b908      	cbnz	r0, 800f6a2 <rcu_osci_stab_wait+0x92>
 800f69e:	3a01      	subs	r2, #1
 800f6a0:	d1f8      	bne.n	800f694 <rcu_osci_stab_wait+0x84>
 800f6a2:	f640 1001 	movw	r0, #2305	; 0x901
 800f6a6:	e7d8      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f6a8:	4a08      	ldr	r2, [pc, #32]	; (800f6cc <rcu_osci_stab_wait+0xbc>)
 800f6aa:	2019      	movs	r0, #25
 800f6ac:	f7ff ffa2 	bl	800f5f4 <rcu_flag_get>
 800f6b0:	b908      	cbnz	r0, 800f6b6 <rcu_osci_stab_wait+0xa6>
 800f6b2:	3a01      	subs	r2, #1
 800f6b4:	d1f9      	bne.n	800f6aa <rcu_osci_stab_wait+0x9a>
 800f6b6:	2019      	movs	r0, #25
 800f6b8:	e7cf      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f6ba:	4a04      	ldr	r2, [pc, #16]	; (800f6cc <rcu_osci_stab_wait+0xbc>)
 800f6bc:	201b      	movs	r0, #27
 800f6be:	f7ff ff99 	bl	800f5f4 <rcu_flag_get>
 800f6c2:	b908      	cbnz	r0, 800f6c8 <rcu_osci_stab_wait+0xb8>
 800f6c4:	3a01      	subs	r2, #1
 800f6c6:	d1f9      	bne.n	800f6bc <rcu_osci_stab_wait+0xac>
 800f6c8:	201b      	movs	r0, #27
 800f6ca:	e7c6      	b.n	800f65a <rcu_osci_stab_wait+0x4a>
 800f6cc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f6d0 <rcu_osci_on>:
 800f6d0:	f7ff bf3a 	b.w	800f548 <rcu_periph_clock_enable>

0800f6d4 <rcu_clock_freq_get>:
 800f6d4:	4b3d      	ldr	r3, [pc, #244]	; (800f7cc <rcu_clock_freq_get+0xf8>)
 800f6d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6d8:	4604      	mov	r4, r0
 800f6da:	461f      	mov	r7, r3
 800f6dc:	b089      	sub	sp, #36	; 0x24
 800f6de:	ad04      	add	r5, sp, #16
 800f6e0:	f103 0610 	add.w	r6, r3, #16
 800f6e4:	462a      	mov	r2, r5
 800f6e6:	6818      	ldr	r0, [r3, #0]
 800f6e8:	6859      	ldr	r1, [r3, #4]
 800f6ea:	3308      	adds	r3, #8
 800f6ec:	c203      	stmia	r2!, {r0, r1}
 800f6ee:	42b3      	cmp	r3, r6
 800f6f0:	4615      	mov	r5, r2
 800f6f2:	d1f7      	bne.n	800f6e4 <rcu_clock_freq_get+0x10>
 800f6f4:	466b      	mov	r3, sp
 800f6f6:	6938      	ldr	r0, [r7, #16]
 800f6f8:	6871      	ldr	r1, [r6, #4]
 800f6fa:	4a35      	ldr	r2, [pc, #212]	; (800f7d0 <rcu_clock_freq_get+0xfc>)
 800f6fc:	c303      	stmia	r3!, {r0, r1}
 800f6fe:	c303      	stmia	r3!, {r0, r1}
 800f700:	6853      	ldr	r3, [r2, #4]
 800f702:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f706:	2b01      	cmp	r3, #1
 800f708:	d053      	beq.n	800f7b2 <rcu_clock_freq_get+0xde>
 800f70a:	2b02      	cmp	r3, #2
 800f70c:	d153      	bne.n	800f7b6 <rcu_clock_freq_get+0xe2>
 800f70e:	6853      	ldr	r3, [r2, #4]
 800f710:	03dd      	lsls	r5, r3, #15
 800f712:	d523      	bpl.n	800f75c <rcu_clock_freq_get+0x88>
 800f714:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800f716:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800f71a:	4b2e      	ldr	r3, [pc, #184]	; (800f7d4 <rcu_clock_freq_get+0x100>)
 800f71c:	d00e      	beq.n	800f73c <rcu_clock_freq_get+0x68>
 800f71e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f720:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800f722:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f726:	f3c0 2003 	ubfx	r0, r0, #8, #4
 800f72a:	3101      	adds	r1, #1
 800f72c:	280f      	cmp	r0, #15
 800f72e:	f100 0502 	add.w	r5, r0, #2
 800f732:	fbb3 f3f1 	udiv	r3, r3, r1
 800f736:	bf08      	it	eq
 800f738:	2514      	moveq	r5, #20
 800f73a:	436b      	muls	r3, r5
 800f73c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f73e:	f001 010f 	and.w	r1, r1, #15
 800f742:	3101      	adds	r1, #1
 800f744:	fbb3 f3f1 	udiv	r3, r3, r1
 800f748:	6851      	ldr	r1, [r2, #4]
 800f74a:	6850      	ldr	r0, [r2, #4]
 800f74c:	f3c1 4183 	ubfx	r1, r1, #18, #4
 800f750:	0080      	lsls	r0, r0, #2
 800f752:	d505      	bpl.n	800f760 <rcu_clock_freq_get+0x8c>
 800f754:	f041 0110 	orr.w	r1, r1, #16
 800f758:	1c48      	adds	r0, r1, #1
 800f75a:	e007      	b.n	800f76c <rcu_clock_freq_get+0x98>
 800f75c:	4b1e      	ldr	r3, [pc, #120]	; (800f7d8 <rcu_clock_freq_get+0x104>)
 800f75e:	e7f3      	b.n	800f748 <rcu_clock_freq_get+0x74>
 800f760:	290f      	cmp	r1, #15
 800f762:	d0f9      	beq.n	800f758 <rcu_clock_freq_get+0x84>
 800f764:	290d      	cmp	r1, #13
 800f766:	f101 0002 	add.w	r0, r1, #2
 800f76a:	d01d      	beq.n	800f7a8 <rcu_clock_freq_get+0xd4>
 800f76c:	4343      	muls	r3, r0
 800f76e:	6851      	ldr	r1, [r2, #4]
 800f770:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f774:	3120      	adds	r1, #32
 800f776:	4469      	add	r1, sp
 800f778:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 800f77c:	fa23 f001 	lsr.w	r0, r3, r1
 800f780:	6851      	ldr	r1, [r2, #4]
 800f782:	6852      	ldr	r2, [r2, #4]
 800f784:	f3c1 2102 	ubfx	r1, r1, #8, #3
 800f788:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800f78c:	3120      	adds	r1, #32
 800f78e:	3220      	adds	r2, #32
 800f790:	4469      	add	r1, sp
 800f792:	446a      	add	r2, sp
 800f794:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800f798:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800f79c:	2c03      	cmp	r4, #3
 800f79e:	d813      	bhi.n	800f7c8 <rcu_clock_freq_get+0xf4>
 800f7a0:	e8df f004 	tbb	[pc, r4]
 800f7a4:	100e0c0b 	andne	r0, lr, fp, lsl #24
 800f7a8:	2006      	movs	r0, #6
 800f7aa:	0859      	lsrs	r1, r3, #1
 800f7ac:	fb00 1303 	mla	r3, r0, r3, r1
 800f7b0:	e7dd      	b.n	800f76e <rcu_clock_freq_get+0x9a>
 800f7b2:	4b08      	ldr	r3, [pc, #32]	; (800f7d4 <rcu_clock_freq_get+0x100>)
 800f7b4:	e7db      	b.n	800f76e <rcu_clock_freq_get+0x9a>
 800f7b6:	4b09      	ldr	r3, [pc, #36]	; (800f7dc <rcu_clock_freq_get+0x108>)
 800f7b8:	e7d9      	b.n	800f76e <rcu_clock_freq_get+0x9a>
 800f7ba:	4618      	mov	r0, r3
 800f7bc:	b009      	add	sp, #36	; 0x24
 800f7be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7c0:	40c8      	lsrs	r0, r1
 800f7c2:	e7fb      	b.n	800f7bc <rcu_clock_freq_get+0xe8>
 800f7c4:	40d0      	lsrs	r0, r2
 800f7c6:	e7f9      	b.n	800f7bc <rcu_clock_freq_get+0xe8>
 800f7c8:	2000      	movs	r0, #0
 800f7ca:	e7f7      	b.n	800f7bc <rcu_clock_freq_get+0xe8>
 800f7cc:	08010d00 	stmdaeq	r1, {r8, sl, fp}
 800f7d0:	40021000 	andmi	r1, r2, r0
 800f7d4:	017d7840 	cmneq	sp, r0, asr #16
 800f7d8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800f7dc:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0800f7e0 <timer_deinit>:
 800f7e0:	b508      	push	{r3, lr}
 800f7e2:	4b2d      	ldr	r3, [pc, #180]	; (800f898 <timer_deinit+0xb8>)
 800f7e4:	4298      	cmp	r0, r3
 800f7e6:	d048      	beq.n	800f87a <timer_deinit+0x9a>
 800f7e8:	d816      	bhi.n	800f818 <timer_deinit+0x38>
 800f7ea:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f7ee:	4298      	cmp	r0, r3
 800f7f0:	d03c      	beq.n	800f86c <timer_deinit+0x8c>
 800f7f2:	d807      	bhi.n	800f804 <timer_deinit+0x24>
 800f7f4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800f7f8:	d02a      	beq.n	800f850 <timer_deinit+0x70>
 800f7fa:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800f7fe:	4298      	cmp	r0, r3
 800f800:	d02d      	beq.n	800f85e <timer_deinit+0x7e>
 800f802:	bd08      	pop	{r3, pc}
 800f804:	4b25      	ldr	r3, [pc, #148]	; (800f89c <timer_deinit+0xbc>)
 800f806:	4298      	cmp	r0, r3
 800f808:	d1fb      	bne.n	800f802 <timer_deinit+0x22>
 800f80a:	f240 4003 	movw	r0, #1027	; 0x403
 800f80e:	f7ff feb8 	bl	800f582 <rcu_periph_reset_enable>
 800f812:	f240 4003 	movw	r0, #1027	; 0x403
 800f816:	e017      	b.n	800f848 <timer_deinit+0x68>
 800f818:	4b21      	ldr	r3, [pc, #132]	; (800f8a0 <timer_deinit+0xc0>)
 800f81a:	4298      	cmp	r0, r3
 800f81c:	d00e      	beq.n	800f83c <timer_deinit+0x5c>
 800f81e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800f822:	4298      	cmp	r0, r3
 800f824:	d030      	beq.n	800f888 <timer_deinit+0xa8>
 800f826:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800f82a:	4298      	cmp	r0, r3
 800f82c:	d1e9      	bne.n	800f802 <timer_deinit+0x22>
 800f82e:	f240 4005 	movw	r0, #1029	; 0x405
 800f832:	f7ff fea6 	bl	800f582 <rcu_periph_reset_enable>
 800f836:	f240 4005 	movw	r0, #1029	; 0x405
 800f83a:	e005      	b.n	800f848 <timer_deinit+0x68>
 800f83c:	f240 300b 	movw	r0, #779	; 0x30b
 800f840:	f7ff fe9f 	bl	800f582 <rcu_periph_reset_enable>
 800f844:	f240 300b 	movw	r0, #779	; 0x30b
 800f848:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f84c:	f7ff be9b 	b.w	800f586 <rcu_periph_reset_disable>
 800f850:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800f854:	f7ff fe95 	bl	800f582 <rcu_periph_reset_enable>
 800f858:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800f85c:	e7f4      	b.n	800f848 <timer_deinit+0x68>
 800f85e:	f240 4001 	movw	r0, #1025	; 0x401
 800f862:	f7ff fe8e 	bl	800f582 <rcu_periph_reset_enable>
 800f866:	f240 4001 	movw	r0, #1025	; 0x401
 800f86a:	e7ed      	b.n	800f848 <timer_deinit+0x68>
 800f86c:	f240 4002 	movw	r0, #1026	; 0x402
 800f870:	f7ff fe87 	bl	800f582 <rcu_periph_reset_enable>
 800f874:	f240 4002 	movw	r0, #1026	; 0x402
 800f878:	e7e6      	b.n	800f848 <timer_deinit+0x68>
 800f87a:	f240 4004 	movw	r0, #1028	; 0x404
 800f87e:	f7ff fe80 	bl	800f582 <rcu_periph_reset_enable>
 800f882:	f240 4004 	movw	r0, #1028	; 0x404
 800f886:	e7df      	b.n	800f848 <timer_deinit+0x68>
 800f888:	f240 300d 	movw	r0, #781	; 0x30d
 800f88c:	f7ff fe79 	bl	800f582 <rcu_periph_reset_enable>
 800f890:	f240 300d 	movw	r0, #781	; 0x30d
 800f894:	e7d8      	b.n	800f848 <timer_deinit+0x68>
 800f896:	bf00      	nop
 800f898:	40001000 	andmi	r1, r0, r0
 800f89c:	40000c00 	andmi	r0, r0, r0, lsl #24
 800f8a0:	40012c00 	andmi	r2, r1, r0, lsl #24

0800f8a4 <timer_init>:
 800f8a4:	880b      	ldrh	r3, [r1, #0]
 800f8a6:	6283      	str	r3, [r0, #40]	; 0x28
 800f8a8:	4b26      	ldr	r3, [pc, #152]	; (800f944 <timer_init+0xa0>)
 800f8aa:	4298      	cmp	r0, r3
 800f8ac:	d018      	beq.n	800f8e0 <timer_init+0x3c>
 800f8ae:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 800f8b2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800f8b6:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800f8ba:	d011      	beq.n	800f8e0 <timer_init+0x3c>
 800f8bc:	4a22      	ldr	r2, [pc, #136]	; (800f948 <timer_init+0xa4>)
 800f8be:	4290      	cmp	r0, r2
 800f8c0:	d00e      	beq.n	800f8e0 <timer_init+0x3c>
 800f8c2:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800f8c6:	4290      	cmp	r0, r2
 800f8c8:	d00a      	beq.n	800f8e0 <timer_init+0x3c>
 800f8ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f8ce:	4293      	cmp	r3, r2
 800f8d0:	d006      	beq.n	800f8e0 <timer_init+0x3c>
 800f8d2:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800f8d6:	4293      	cmp	r3, r2
 800f8d8:	d002      	beq.n	800f8e0 <timer_init+0x3c>
 800f8da:	4b1c      	ldr	r3, [pc, #112]	; (800f94c <timer_init+0xa8>)
 800f8dc:	4298      	cmp	r0, r3
 800f8de:	d10f      	bne.n	800f900 <timer_init+0x5c>
 800f8e0:	6803      	ldr	r3, [r0, #0]
 800f8e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800f8e6:	6003      	str	r3, [r0, #0]
 800f8e8:	884b      	ldrh	r3, [r1, #2]
 800f8ea:	6802      	ldr	r2, [r0, #0]
 800f8ec:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800f8f0:	4313      	orrs	r3, r2
 800f8f2:	6003      	str	r3, [r0, #0]
 800f8f4:	888b      	ldrh	r3, [r1, #4]
 800f8f6:	6802      	ldr	r2, [r0, #0]
 800f8f8:	f003 0310 	and.w	r3, r3, #16
 800f8fc:	4313      	orrs	r3, r2
 800f8fe:	6003      	str	r3, [r0, #0]
 800f900:	688b      	ldr	r3, [r1, #8]
 800f902:	62c3      	str	r3, [r0, #44]	; 0x2c
 800f904:	4b12      	ldr	r3, [pc, #72]	; (800f950 <timer_init+0xac>)
 800f906:	4298      	cmp	r0, r3
 800f908:	d003      	beq.n	800f912 <timer_init+0x6e>
 800f90a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800f90e:	4298      	cmp	r0, r3
 800f910:	d104      	bne.n	800f91c <timer_init+0x78>
 800f912:	6943      	ldr	r3, [r0, #20]
 800f914:	f043 0301 	orr.w	r3, r3, #1
 800f918:	6143      	str	r3, [r0, #20]
 800f91a:	4770      	bx	lr
 800f91c:	6803      	ldr	r3, [r0, #0]
 800f91e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800f922:	6003      	str	r3, [r0, #0]
 800f924:	898b      	ldrh	r3, [r1, #12]
 800f926:	6802      	ldr	r2, [r0, #0]
 800f928:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800f92c:	4313      	orrs	r3, r2
 800f92e:	6003      	str	r3, [r0, #0]
 800f930:	4b04      	ldr	r3, [pc, #16]	; (800f944 <timer_init+0xa0>)
 800f932:	4298      	cmp	r0, r3
 800f934:	d002      	beq.n	800f93c <timer_init+0x98>
 800f936:	4b04      	ldr	r3, [pc, #16]	; (800f948 <timer_init+0xa4>)
 800f938:	4298      	cmp	r0, r3
 800f93a:	d1ea      	bne.n	800f912 <timer_init+0x6e>
 800f93c:	7b8b      	ldrb	r3, [r1, #14]
 800f93e:	6303      	str	r3, [r0, #48]	; 0x30
 800f940:	e7e7      	b.n	800f912 <timer_init+0x6e>
 800f942:	bf00      	nop
 800f944:	40012c00 	andmi	r2, r1, r0, lsl #24
 800f948:	40013400 	andmi	r3, r1, r0, lsl #8
 800f94c:	40002000 	andmi	r2, r0, r0
 800f950:	40001000 	andmi	r1, r0, r0

0800f954 <timer_enable>:
 800f954:	6803      	ldr	r3, [r0, #0]
 800f956:	f043 0301 	orr.w	r3, r3, #1
 800f95a:	6003      	str	r3, [r0, #0]
 800f95c:	4770      	bx	lr

0800f95e <timer_channel_output_mode_config>:
 800f95e:	2903      	cmp	r1, #3
 800f960:	d81a      	bhi.n	800f998 <timer_channel_output_mode_config+0x3a>
 800f962:	e8df f001 	tbb	[pc, r1]
 800f966:	1a120a02 	bne	8492176 <__exidx_end+0x47f9aa>
 800f96a:	6983      	ldr	r3, [r0, #24]
 800f96c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800f970:	6183      	str	r3, [r0, #24]
 800f972:	6983      	ldr	r3, [r0, #24]
 800f974:	431a      	orrs	r2, r3
 800f976:	6182      	str	r2, [r0, #24]
 800f978:	4770      	bx	lr
 800f97a:	6983      	ldr	r3, [r0, #24]
 800f97c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800f980:	6183      	str	r3, [r0, #24]
 800f982:	6983      	ldr	r3, [r0, #24]
 800f984:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 800f988:	e7f5      	b.n	800f976 <timer_channel_output_mode_config+0x18>
 800f98a:	69c3      	ldr	r3, [r0, #28]
 800f98c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800f990:	61c3      	str	r3, [r0, #28]
 800f992:	69c3      	ldr	r3, [r0, #28]
 800f994:	431a      	orrs	r2, r3
 800f996:	61c2      	str	r2, [r0, #28]
 800f998:	4770      	bx	lr
 800f99a:	69c3      	ldr	r3, [r0, #28]
 800f99c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800f9a0:	61c3      	str	r3, [r0, #28]
 800f9a2:	69c3      	ldr	r3, [r0, #28]
 800f9a4:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 800f9a8:	e7f5      	b.n	800f996 <timer_channel_output_mode_config+0x38>

0800f9aa <timer_channel_output_pulse_value_config>:
 800f9aa:	2903      	cmp	r1, #3
 800f9ac:	d80a      	bhi.n	800f9c4 <timer_channel_output_pulse_value_config+0x1a>
 800f9ae:	e8df f001 	tbb	[pc, r1]
 800f9b2:	08060402 	stmdaeq	r6, {r1, sl}
 800f9b6:	6342      	str	r2, [r0, #52]	; 0x34
 800f9b8:	4770      	bx	lr
 800f9ba:	6382      	str	r2, [r0, #56]	; 0x38
 800f9bc:	4770      	bx	lr
 800f9be:	63c2      	str	r2, [r0, #60]	; 0x3c
 800f9c0:	4770      	bx	lr
 800f9c2:	6402      	str	r2, [r0, #64]	; 0x40
 800f9c4:	4770      	bx	lr

0800f9c6 <timer_interrupt_enable>:
 800f9c6:	68c3      	ldr	r3, [r0, #12]
 800f9c8:	430b      	orrs	r3, r1
 800f9ca:	60c3      	str	r3, [r0, #12]
 800f9cc:	4770      	bx	lr

0800f9ce <timer_interrupt_flag_clear>:
 800f9ce:	43c9      	mvns	r1, r1
 800f9d0:	6101      	str	r1, [r0, #16]
 800f9d2:	4770      	bx	lr

0800f9d4 <timer_flag_clear>:
 800f9d4:	43c9      	mvns	r1, r1
 800f9d6:	6101      	str	r1, [r0, #16]
 800f9d8:	4770      	bx	lr
	...

0800f9dc <usart_deinit>:
 800f9dc:	b508      	push	{r3, lr}
 800f9de:	4b1d      	ldr	r3, [pc, #116]	; (800fa54 <usart_deinit+0x78>)
 800f9e0:	4298      	cmp	r0, r3
 800f9e2:	d028      	beq.n	800fa36 <usart_deinit+0x5a>
 800f9e4:	d808      	bhi.n	800f9f8 <usart_deinit+0x1c>
 800f9e6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f9ea:	4298      	cmp	r0, r3
 800f9ec:	d015      	beq.n	800fa1a <usart_deinit+0x3e>
 800f9ee:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800f9f2:	4298      	cmp	r0, r3
 800f9f4:	d018      	beq.n	800fa28 <usart_deinit+0x4c>
 800f9f6:	bd08      	pop	{r3, pc}
 800f9f8:	4b17      	ldr	r3, [pc, #92]	; (800fa58 <usart_deinit+0x7c>)
 800f9fa:	4298      	cmp	r0, r3
 800f9fc:	d022      	beq.n	800fa44 <usart_deinit+0x68>
 800f9fe:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fa02:	4298      	cmp	r0, r3
 800fa04:	d1f7      	bne.n	800f9f6 <usart_deinit+0x1a>
 800fa06:	f240 300e 	movw	r0, #782	; 0x30e
 800fa0a:	f7ff fdba 	bl	800f582 <rcu_periph_reset_enable>
 800fa0e:	f240 300e 	movw	r0, #782	; 0x30e
 800fa12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fa16:	f7ff bdb6 	b.w	800f586 <rcu_periph_reset_disable>
 800fa1a:	f240 4011 	movw	r0, #1041	; 0x411
 800fa1e:	f7ff fdb0 	bl	800f582 <rcu_periph_reset_enable>
 800fa22:	f240 4011 	movw	r0, #1041	; 0x411
 800fa26:	e7f4      	b.n	800fa12 <usart_deinit+0x36>
 800fa28:	f240 4012 	movw	r0, #1042	; 0x412
 800fa2c:	f7ff fda9 	bl	800f582 <rcu_periph_reset_enable>
 800fa30:	f240 4012 	movw	r0, #1042	; 0x412
 800fa34:	e7ed      	b.n	800fa12 <usart_deinit+0x36>
 800fa36:	f240 4013 	movw	r0, #1043	; 0x413
 800fa3a:	f7ff fda2 	bl	800f582 <rcu_periph_reset_enable>
 800fa3e:	f240 4013 	movw	r0, #1043	; 0x413
 800fa42:	e7e6      	b.n	800fa12 <usart_deinit+0x36>
 800fa44:	f240 4014 	movw	r0, #1044	; 0x414
 800fa48:	f7ff fd9b 	bl	800f582 <rcu_periph_reset_enable>
 800fa4c:	f240 4014 	movw	r0, #1044	; 0x414
 800fa50:	e7df      	b.n	800fa12 <usart_deinit+0x36>
 800fa52:	bf00      	nop
 800fa54:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fa58:	40005000 	andmi	r5, r0, r0

0800fa5c <usart_baudrate_set>:
 800fa5c:	b538      	push	{r3, r4, r5, lr}
 800fa5e:	4b11      	ldr	r3, [pc, #68]	; (800faa4 <usart_baudrate_set+0x48>)
 800fa60:	4604      	mov	r4, r0
 800fa62:	4298      	cmp	r0, r3
 800fa64:	460d      	mov	r5, r1
 800fa66:	d01b      	beq.n	800faa0 <usart_baudrate_set+0x44>
 800fa68:	d809      	bhi.n	800fa7e <usart_baudrate_set+0x22>
 800fa6a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fa6e:	4298      	cmp	r0, r3
 800fa70:	d016      	beq.n	800faa0 <usart_baudrate_set+0x44>
 800fa72:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fa76:	4298      	cmp	r0, r3
 800fa78:	d012      	beq.n	800faa0 <usart_baudrate_set+0x44>
 800fa7a:	2000      	movs	r0, #0
 800fa7c:	e009      	b.n	800fa92 <usart_baudrate_set+0x36>
 800fa7e:	4b0a      	ldr	r3, [pc, #40]	; (800faa8 <usart_baudrate_set+0x4c>)
 800fa80:	4298      	cmp	r0, r3
 800fa82:	d00d      	beq.n	800faa0 <usart_baudrate_set+0x44>
 800fa84:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fa88:	4298      	cmp	r0, r3
 800fa8a:	d1f6      	bne.n	800fa7a <usart_baudrate_set+0x1e>
 800fa8c:	2003      	movs	r0, #3
 800fa8e:	f7ff fe21 	bl	800f6d4 <rcu_clock_freq_get>
 800fa92:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 800fa96:	fbb3 f1f5 	udiv	r1, r3, r5
 800fa9a:	b289      	uxth	r1, r1
 800fa9c:	60a1      	str	r1, [r4, #8]
 800fa9e:	bd38      	pop	{r3, r4, r5, pc}
 800faa0:	2002      	movs	r0, #2
 800faa2:	e7f4      	b.n	800fa8e <usart_baudrate_set+0x32>
 800faa4:	40004c00 	andmi	r4, r0, r0, lsl #24
 800faa8:	40005000 	andmi	r5, r0, r0

0800faac <usart_parity_config>:
 800faac:	68c2      	ldr	r2, [r0, #12]
 800faae:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 800fab2:	60c2      	str	r2, [r0, #12]
 800fab4:	68c3      	ldr	r3, [r0, #12]
 800fab6:	430b      	orrs	r3, r1
 800fab8:	60c3      	str	r3, [r0, #12]
 800faba:	4770      	bx	lr

0800fabc <usart_word_length_set>:
 800fabc:	68c2      	ldr	r2, [r0, #12]
 800fabe:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800fac2:	60c2      	str	r2, [r0, #12]
 800fac4:	68c3      	ldr	r3, [r0, #12]
 800fac6:	430b      	orrs	r3, r1
 800fac8:	60c3      	str	r3, [r0, #12]
 800faca:	4770      	bx	lr

0800facc <usart_stop_bit_set>:
 800facc:	6902      	ldr	r2, [r0, #16]
 800face:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800fad2:	6102      	str	r2, [r0, #16]
 800fad4:	6903      	ldr	r3, [r0, #16]
 800fad6:	430b      	orrs	r3, r1
 800fad8:	6103      	str	r3, [r0, #16]
 800fada:	4770      	bx	lr

0800fadc <usart_transmit_config>:
 800fadc:	68c3      	ldr	r3, [r0, #12]
 800fade:	f023 0308 	bic.w	r3, r3, #8
 800fae2:	430b      	orrs	r3, r1
 800fae4:	60c3      	str	r3, [r0, #12]
 800fae6:	4770      	bx	lr

0800fae8 <usart_receive_config>:
 800fae8:	68c3      	ldr	r3, [r0, #12]
 800faea:	f023 0304 	bic.w	r3, r3, #4
 800faee:	430b      	orrs	r3, r1
 800faf0:	60c3      	str	r3, [r0, #12]
 800faf2:	4770      	bx	lr

0800faf4 <usart_hardware_flow_rts_config>:
 800faf4:	6943      	ldr	r3, [r0, #20]
 800faf6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800fafa:	430b      	orrs	r3, r1
 800fafc:	6143      	str	r3, [r0, #20]
 800fafe:	4770      	bx	lr

0800fb00 <usart_hardware_flow_cts_config>:
 800fb00:	6943      	ldr	r3, [r0, #20]
 800fb02:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800fb06:	430b      	orrs	r3, r1
 800fb08:	6143      	str	r3, [r0, #20]
 800fb0a:	4770      	bx	lr

0800fb0c <usart_dma_transmit_config>:
 800fb0c:	6943      	ldr	r3, [r0, #20]
 800fb0e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fb12:	430b      	orrs	r3, r1
 800fb14:	6143      	str	r3, [r0, #20]
 800fb16:	4770      	bx	lr

0800fb18 <usart_flag_get>:
 800fb18:	098b      	lsrs	r3, r1, #6
 800fb1a:	5818      	ldr	r0, [r3, r0]
 800fb1c:	f001 011f 	and.w	r1, r1, #31
 800fb20:	40c8      	lsrs	r0, r1
 800fb22:	f000 0001 	and.w	r0, r0, #1
 800fb26:	4770      	bx	lr

0800fb28 <usart_interrupt_enable>:
 800fb28:	2301      	movs	r3, #1
 800fb2a:	b510      	push	{r4, lr}
 800fb2c:	f3c1 1289 	ubfx	r2, r1, #6, #10
 800fb30:	5814      	ldr	r4, [r2, r0]
 800fb32:	f001 011f 	and.w	r1, r1, #31
 800fb36:	fa03 f101 	lsl.w	r1, r3, r1
 800fb3a:	4321      	orrs	r1, r4
 800fb3c:	5011      	str	r1, [r2, r0]
 800fb3e:	bd10      	pop	{r4, pc}

0800fb40 <usart_interrupt_disable>:
 800fb40:	2201      	movs	r2, #1
 800fb42:	b510      	push	{r4, lr}
 800fb44:	f3c1 1489 	ubfx	r4, r1, #6, #10
 800fb48:	5823      	ldr	r3, [r4, r0]
 800fb4a:	f001 011f 	and.w	r1, r1, #31
 800fb4e:	fa02 f101 	lsl.w	r1, r2, r1
 800fb52:	ea23 0101 	bic.w	r1, r3, r1
 800fb56:	5021      	str	r1, [r4, r0]
 800fb58:	bd10      	pop	{r4, pc}

0800fb5a <usart_interrupt_flag_clear>:
 800fb5a:	2201      	movs	r2, #1
 800fb5c:	b510      	push	{r4, lr}
 800fb5e:	0d8c      	lsrs	r4, r1, #22
 800fb60:	5823      	ldr	r3, [r4, r0]
 800fb62:	f3c1 4104 	ubfx	r1, r1, #16, #5
 800fb66:	fa02 f101 	lsl.w	r1, r2, r1
 800fb6a:	ea23 0101 	bic.w	r1, r3, r1
 800fb6e:	5021      	str	r1, [r4, r0]
 800fb70:	bd10      	pop	{r4, pc}
	...

0800fb74 <emac_start>:
 800fb74:	b510      	push	{r4, lr}
 800fb76:	4604      	mov	r4, r0
 800fb78:	f240 6002 	movw	r0, #1538	; 0x602
 800fb7c:	f7ff fce4 	bl	800f548 <rcu_periph_clock_enable>
 800fb80:	f240 6003 	movw	r0, #1539	; 0x603
 800fb84:	f7ff fce0 	bl	800f548 <rcu_periph_clock_enable>
 800fb88:	f240 6004 	movw	r0, #1540	; 0x604
 800fb8c:	f7ff fcdc 	bl	800f548 <rcu_periph_clock_enable>
 800fb90:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fb94:	2203      	movs	r2, #3
 800fb96:	2118      	movs	r1, #24
 800fb98:	4846      	ldr	r0, [pc, #280]	; (800fcb4 <emac_start+0x140>)
 800fb9a:	f7ff fc45 	bl	800f428 <gpio_init>
 800fb9e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800fba2:	f7ff fcd1 	bl	800f548 <rcu_periph_clock_enable>
 800fba6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800fbaa:	f7ff fcf9 	bl	800f5a0 <rcu_pll2_config>
 800fbae:	201c      	movs	r0, #28
 800fbb0:	f7ff fd8e 	bl	800f6d0 <rcu_osci_on>
 800fbb4:	201c      	movs	r0, #28
 800fbb6:	f7ff fd2b 	bl	800f610 <rcu_osci_stab_wait>
 800fbba:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 800fbbe:	f7ff fce5 	bl	800f58c <rcu_ckout0_config>
 800fbc2:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 800fbc6:	f7ff fcb3 	bl	800f530 <gpio_ethernet_phy_select>
 800fbca:	2302      	movs	r3, #2
 800fbcc:	2203      	movs	r2, #3
 800fbce:	2104      	movs	r1, #4
 800fbd0:	4838      	ldr	r0, [pc, #224]	; (800fcb4 <emac_start+0x140>)
 800fbd2:	f7ff fc29 	bl	800f428 <gpio_init>
 800fbd6:	2304      	movs	r3, #4
 800fbd8:	2203      	movs	r2, #3
 800fbda:	2118      	movs	r1, #24
 800fbdc:	4835      	ldr	r0, [pc, #212]	; (800fcb4 <emac_start+0x140>)
 800fbde:	f7ff fc23 	bl	800f428 <gpio_init>
 800fbe2:	2380      	movs	r3, #128	; 0x80
 800fbe4:	2203      	movs	r2, #3
 800fbe6:	2104      	movs	r1, #4
 800fbe8:	4832      	ldr	r0, [pc, #200]	; (800fcb4 <emac_start+0x140>)
 800fbea:	f7ff fc1d 	bl	800f428 <gpio_init>
 800fbee:	2302      	movs	r3, #2
 800fbf0:	2203      	movs	r2, #3
 800fbf2:	2118      	movs	r1, #24
 800fbf4:	4830      	ldr	r0, [pc, #192]	; (800fcb8 <emac_start+0x144>)
 800fbf6:	f7ff fc17 	bl	800f428 <gpio_init>
 800fbfa:	2310      	movs	r3, #16
 800fbfc:	2203      	movs	r2, #3
 800fbfe:	2104      	movs	r1, #4
 800fc00:	482d      	ldr	r0, [pc, #180]	; (800fcb8 <emac_start+0x144>)
 800fc02:	f7ff fc11 	bl	800f428 <gpio_init>
 800fc06:	2320      	movs	r3, #32
 800fc08:	2203      	movs	r2, #3
 800fc0a:	2104      	movs	r1, #4
 800fc0c:	482a      	ldr	r0, [pc, #168]	; (800fcb8 <emac_start+0x144>)
 800fc0e:	f7ff fc0b 	bl	800f428 <gpio_init>
 800fc12:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800fc16:	2203      	movs	r2, #3
 800fc18:	2118      	movs	r1, #24
 800fc1a:	4828      	ldr	r0, [pc, #160]	; (800fcbc <emac_start+0x148>)
 800fc1c:	f7ff fc04 	bl	800f428 <gpio_init>
 800fc20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800fc24:	2203      	movs	r2, #3
 800fc26:	2118      	movs	r1, #24
 800fc28:	4824      	ldr	r0, [pc, #144]	; (800fcbc <emac_start+0x148>)
 800fc2a:	f7ff fbfd 	bl	800f428 <gpio_init>
 800fc2e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800fc32:	2203      	movs	r2, #3
 800fc34:	2118      	movs	r1, #24
 800fc36:	4821      	ldr	r0, [pc, #132]	; (800fcbc <emac_start+0x148>)
 800fc38:	f7ff fbf6 	bl	800f428 <gpio_init>
 800fc3c:	f240 500e 	movw	r0, #1294	; 0x50e
 800fc40:	f7ff fc82 	bl	800f548 <rcu_periph_clock_enable>
 800fc44:	f240 500f 	movw	r0, #1295	; 0x50f
 800fc48:	f7ff fc7e 	bl	800f548 <rcu_periph_clock_enable>
 800fc4c:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 800fc50:	f7ff fc7a 	bl	800f548 <rcu_periph_clock_enable>
 800fc54:	f000 ff9e 	bl	8010b94 <enet_deinit>
 800fc58:	f000 fbf8 	bl	801044c <enet_software_reset>
 800fc5c:	b900      	cbnz	r0, 800fc60 <emac_start+0xec>
 800fc5e:	e7fe      	b.n	800fc5e <emac_start+0xea>
 800fc60:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800fc64:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800fc68:	f44f 4090 	mov.w	r0, #18432	; 0x4800
 800fc6c:	f000 fd72 	bl	8010754 <enet_init>
 800fc70:	4b13      	ldr	r3, [pc, #76]	; (800fcc0 <emac_start+0x14c>)
 800fc72:	6018      	str	r0, [r3, #0]
 800fc74:	681b      	ldr	r3, [r3, #0]
 800fc76:	b903      	cbnz	r3, 800fc7a <emac_start+0x106>
 800fc78:	e7fe      	b.n	800fc78 <emac_start+0x104>
 800fc7a:	4620      	mov	r0, r4
 800fc7c:	f000 fade 	bl	801023c <mac_address_get>
 800fc80:	4621      	mov	r1, r4
 800fc82:	2000      	movs	r0, #0
 800fc84:	f000 fcc6 	bl	8010614 <enet_mac_address_set>
 800fc88:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 800fc8c:	f000 fbf2 	bl	8010474 <enet_descriptors_chain_init>
 800fc90:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 800fc94:	f000 fbee 	bl	8010474 <enet_descriptors_chain_init>
 800fc98:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fc9c:	4809      	ldr	r0, [pc, #36]	; (800fcc4 <emac_start+0x150>)
 800fc9e:	f000 fcb3 	bl	8010608 <enet_transmit_checksum_config>
 800fca2:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fca6:	4808      	ldr	r0, [pc, #32]	; (800fcc8 <emac_start+0x154>)
 800fca8:	f000 fcae 	bl	8010608 <enet_transmit_checksum_config>
 800fcac:	f000 feea 	bl	8010a84 <enet_enable>
 800fcb0:	2001      	movs	r0, #1
 800fcb2:	bd10      	pop	{r4, pc}
 800fcb4:	40010800 	andmi	r0, r1, r0, lsl #16
 800fcb8:	40011000 	andmi	r1, r1, r0
 800fcbc:	40010c00 	andmi	r0, r1, r0, lsl #24
 800fcc0:	20009bc0 	andcs	r9, r0, r0, asr #23
 800fcc4:	2000c00c 	andcs	ip, r0, ip
 800fcc8:	2000c01c 	andcs	ip, r0, ip, lsl r0

0800fccc <emac_eth_recv>:
 800fccc:	b538      	push	{r3, r4, r5, lr}
 800fcce:	4605      	mov	r5, r0
 800fcd0:	f000 ff30 	bl	8010b34 <enet_rxframe_size_get>
 800fcd4:	4604      	mov	r4, r0
 800fcd6:	b138      	cbz	r0, 800fce8 <emac_eth_recv+0x1c>
 800fcd8:	4b05      	ldr	r3, [pc, #20]	; (800fcf0 <emac_eth_recv+0x24>)
 800fcda:	2105      	movs	r1, #5
 800fcdc:	6818      	ldr	r0, [r3, #0]
 800fcde:	f000 fed8 	bl	8010a92 <enet_desc_information_get>
 800fce2:	6028      	str	r0, [r5, #0]
 800fce4:	4620      	mov	r0, r4
 800fce6:	bd38      	pop	{r3, r4, r5, pc}
 800fce8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fcec:	e7fb      	b.n	800fce6 <emac_eth_recv+0x1a>
 800fcee:	bf00      	nop
 800fcf0:	20009bd0 	ldrdcs	r9, [r0], -r0

0800fcf4 <emac_free_pkt>:
 800fcf4:	2100      	movs	r1, #0
 800fcf6:	4608      	mov	r0, r1
 800fcf8:	f000 bc04 	b.w	8010504 <enet_frame_receive>

0800fcfc <emac_eth_send>:
 800fcfc:	f000 bc42 	b.w	8010584 <enet_frame_transmit>

0800fd00 <gd32_adc_init()>:
 800fd00:	b510      	push	{r4, lr}
 800fd02:	f240 6009 	movw	r0, #1545	; 0x609
 800fd06:	4c21      	ldr	r4, [pc, #132]	; (800fd8c <gd32_adc_init()+0x8c>)
 800fd08:	f7ff fc1e 	bl	800f548 <rcu_periph_clock_enable>
 800fd0c:	2005      	movs	r0, #5
 800fd0e:	f7ff fc53 	bl	800f5b8 <rcu_adc_clock_config>
 800fd12:	4620      	mov	r0, r4
 800fd14:	2201      	movs	r2, #1
 800fd16:	f44f 7180 	mov.w	r1, #256	; 0x100
 800fd1a:	f000 fab1 	bl	8010280 <adc_special_function_config>
 800fd1e:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 800fd22:	4620      	mov	r0, r4
 800fd24:	2102      	movs	r1, #2
 800fd26:	f000 fb4b 	bl	80103c0 <adc_external_trigger_source_config>
 800fd2a:	2100      	movs	r1, #0
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	f000 facf 	bl	80102d0 <adc_data_alignment_config>
 800fd32:	2000      	movs	r0, #0
 800fd34:	f000 fa94 	bl	8010260 <adc_mode_config>
 800fd38:	2202      	movs	r2, #2
 800fd3a:	4620      	mov	r0, r4
 800fd3c:	4611      	mov	r1, r2
 800fd3e:	f000 faf3 	bl	8010328 <adc_channel_length_config>
 800fd42:	4620      	mov	r0, r4
 800fd44:	2307      	movs	r3, #7
 800fd46:	2210      	movs	r2, #16
 800fd48:	2100      	movs	r1, #0
 800fd4a:	f000 fb0a 	bl	8010362 <adc_inserted_channel_config>
 800fd4e:	2307      	movs	r3, #7
 800fd50:	4620      	mov	r0, r4
 800fd52:	2211      	movs	r2, #17
 800fd54:	2101      	movs	r1, #1
 800fd56:	f000 fb04 	bl	8010362 <adc_inserted_channel_config>
 800fd5a:	2201      	movs	r2, #1
 800fd5c:	2102      	movs	r1, #2
 800fd5e:	4620      	mov	r0, r4
 800fd60:	f000 fb3f 	bl	80103e2 <adc_external_trigger_config>
 800fd64:	f000 fad6 	bl	8010314 <adc_tempsensor_vrefint_enable>
 800fd68:	4620      	mov	r0, r4
 800fd6a:	f000 faba 	bl	80102e2 <adc_enable>
 800fd6e:	2100      	movs	r1, #0
 800fd70:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800fd74:	f000 fa4a 	bl	801020c <udelay(unsigned int, unsigned int)>
 800fd78:	4620      	mov	r0, r4
 800fd7a:	f000 faba 	bl	80102f2 <adc_calibration_enable>
 800fd7e:	4620      	mov	r0, r4
 800fd80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd84:	2102      	movs	r1, #2
 800fd86:	f000 bb47 	b.w	8010418 <adc_software_trigger_enable>
 800fd8a:	bf00      	nop
 800fd8c:	40012400 	andmi	r2, r1, r0, lsl #8

0800fd90 <_stop() [clone .isra.0]>:
 800fd90:	b508      	push	{r3, lr}
 800fd92:	4806      	ldr	r0, [pc, #24]	; (800fdac <_stop() [clone .isra.0]+0x1c>)
 800fd94:	f000 ff8e 	bl	8010cb4 <i2c_stop_on_bus>
 800fd98:	f640 73ff 	movw	r3, #4095	; 0xfff
 800fd9c:	4a04      	ldr	r2, [pc, #16]	; (800fdb0 <_stop() [clone .isra.0]+0x20>)
 800fd9e:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 800fda2:	0589      	lsls	r1, r1, #22
 800fda4:	d501      	bpl.n	800fdaa <_stop() [clone .isra.0]+0x1a>
 800fda6:	3b01      	subs	r3, #1
 800fda8:	d1f9      	bne.n	800fd9e <_stop() [clone .isra.0]+0xe>
 800fdaa:	bd08      	pop	{r3, pc}
 800fdac:	40005400 	andmi	r5, r0, r0, lsl #8
 800fdb0:	40005000 	andmi	r5, r0, r0

0800fdb4 <gd32_i2c_begin()>:
 800fdb4:	b510      	push	{r4, lr}
 800fdb6:	f240 7015 	movw	r0, #1813	; 0x715
 800fdba:	f7ff fbc5 	bl	800f548 <rcu_periph_clock_enable>
 800fdbe:	4c15      	ldr	r4, [pc, #84]	; (800fe14 <gd32_i2c_begin()+0x60>)
 800fdc0:	f240 6003 	movw	r0, #1539	; 0x603
 800fdc4:	f7ff fbc0 	bl	800f548 <rcu_periph_clock_enable>
 800fdc8:	f240 6003 	movw	r0, #1539	; 0x603
 800fdcc:	f7ff fbbc 	bl	800f548 <rcu_periph_clock_enable>
 800fdd0:	4620      	mov	r0, r4
 800fdd2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fdd6:	2203      	movs	r2, #3
 800fdd8:	211c      	movs	r1, #28
 800fdda:	f7ff fb25 	bl	800f428 <gpio_init>
 800fdde:	f44f 7300 	mov.w	r3, #512	; 0x200
 800fde2:	2203      	movs	r2, #3
 800fde4:	4620      	mov	r0, r4
 800fde6:	211c      	movs	r1, #28
 800fde8:	f7ff fb1e 	bl	800f428 <gpio_init>
 800fdec:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 800fdf0:	2101      	movs	r1, #1
 800fdf2:	2002      	movs	r0, #2
 800fdf4:	f7ff fb6c 	bl	800f4d0 <gpio_pin_remap_config>
 800fdf8:	4620      	mov	r0, r4
 800fdfa:	4907      	ldr	r1, [pc, #28]	; (800fe18 <gd32_i2c_begin()+0x64>)
 800fdfc:	2200      	movs	r2, #0
 800fdfe:	f000 fed7 	bl	8010bb0 <i2c_clock_config>
 800fe02:	4620      	mov	r0, r4
 800fe04:	f000 ff4c 	bl	8010ca0 <i2c_enable>
 800fe08:	4620      	mov	r0, r4
 800fe0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe0e:	2101      	movs	r1, #1
 800fe10:	f000 bf2c 	b.w	8010c6c <i2c_ack_config>
 800fe14:	40010c00 	andmi	r0, r1, r0, lsl #24
 800fe18:	00061a80 	andeq	r1, r6, r0, lsl #21

0800fe1c <gd32_i2c_set_baudrate(unsigned int)>:
 800fe1c:	4601      	mov	r1, r0
 800fe1e:	2200      	movs	r2, #0
 800fe20:	4801      	ldr	r0, [pc, #4]	; (800fe28 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 800fe22:	f000 bec5 	b.w	8010bb0 <i2c_clock_config>
 800fe26:	bf00      	nop
 800fe28:	40005400 	andmi	r5, r0, r0, lsl #8

0800fe2c <gd32_i2c_set_address(unsigned char)>:
 800fe2c:	4b01      	ldr	r3, [pc, #4]	; (800fe34 <gd32_i2c_set_address(unsigned char)+0x8>)
 800fe2e:	0040      	lsls	r0, r0, #1
 800fe30:	7018      	strb	r0, [r3, #0]
 800fe32:	4770      	bx	lr
 800fe34:	20009bc4 	andcs	r9, r0, r4, asr #23

0800fe38 <gd32_i2c_write(char const*, unsigned int)>:
 800fe38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe3a:	4604      	mov	r4, r0
 800fe3c:	460f      	mov	r7, r1
 800fe3e:	f640 75ff 	movw	r5, #4095	; 0xfff
 800fe42:	4e2e      	ldr	r6, [pc, #184]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe44:	f240 6101 	movw	r1, #1537	; 0x601
 800fe48:	4630      	mov	r0, r6
 800fe4a:	f000 ff3d 	bl	8010cc8 <i2c_flag_get>
 800fe4e:	b138      	cbz	r0, 800fe60 <gd32_i2c_write(char const*, unsigned int)+0x28>
 800fe50:	3d01      	subs	r5, #1
 800fe52:	d1f7      	bne.n	800fe44 <gd32_i2c_write(char const*, unsigned int)+0xc>
 800fe54:	f7ff ff9c 	bl	800fd90 <_stop() [clone .isra.0]>
 800fe58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fe5c:	4240      	negs	r0, r0
 800fe5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe60:	4826      	ldr	r0, [pc, #152]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe62:	f000 ff22 	bl	8010caa <i2c_start_on_bus>
 800fe66:	f640 75ff 	movw	r5, #4095	; 0xfff
 800fe6a:	4e24      	ldr	r6, [pc, #144]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe6c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800fe70:	4630      	mov	r0, r6
 800fe72:	f000 ff29 	bl	8010cc8 <i2c_flag_get>
 800fe76:	bb68      	cbnz	r0, 800fed4 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 800fe78:	3d01      	subs	r5, #1
 800fe7a:	d1f7      	bne.n	800fe6c <gd32_i2c_write(char const*, unsigned int)+0x34>
 800fe7c:	e7ea      	b.n	800fe54 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 800fe7e:	f240 5101 	movw	r1, #1281	; 0x501
 800fe82:	481e      	ldr	r0, [pc, #120]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe84:	f000 ff28 	bl	8010cd8 <i2c_flag_clear>
 800fe88:	f640 75ff 	movw	r5, #4095	; 0xfff
 800fe8c:	4e1b      	ldr	r6, [pc, #108]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe8e:	f240 5107 	movw	r1, #1287	; 0x507
 800fe92:	4630      	mov	r0, r6
 800fe94:	f000 ff18 	bl	8010cc8 <i2c_flag_get>
 800fe98:	2801      	cmp	r0, #1
 800fe9a:	d114      	bne.n	800fec6 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 800fe9c:	4e17      	ldr	r6, [pc, #92]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fe9e:	4427      	add	r7, r4
 800fea0:	42a7      	cmp	r7, r4
 800fea2:	d013      	beq.n	800fecc <gd32_i2c_write(char const*, unsigned int)+0x94>
 800fea4:	4630      	mov	r0, r6
 800fea6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800feaa:	f000 ff08 	bl	8010cbe <i2c_data_transmit>
 800feae:	f640 75ff 	movw	r5, #4095	; 0xfff
 800feb2:	f240 5102 	movw	r1, #1282	; 0x502
 800feb6:	4630      	mov	r0, r6
 800feb8:	f000 ff06 	bl	8010cc8 <i2c_flag_get>
 800febc:	2800      	cmp	r0, #0
 800febe:	d1ef      	bne.n	800fea0 <gd32_i2c_write(char const*, unsigned int)+0x68>
 800fec0:	3d01      	subs	r5, #1
 800fec2:	d1f6      	bne.n	800feb2 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 800fec4:	e7c6      	b.n	800fe54 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 800fec6:	3d01      	subs	r5, #1
 800fec8:	d1e1      	bne.n	800fe8e <gd32_i2c_write(char const*, unsigned int)+0x56>
 800feca:	e7c3      	b.n	800fe54 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 800fecc:	f7ff ff60 	bl	800fd90 <_stop() [clone .isra.0]>
 800fed0:	2000      	movs	r0, #0
 800fed2:	e7c3      	b.n	800fe5c <gd32_i2c_write(char const*, unsigned int)+0x24>
 800fed4:	4b0a      	ldr	r3, [pc, #40]	; (800ff00 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 800fed6:	f06f 0201 	mvn.w	r2, #1
 800feda:	7819      	ldrb	r1, [r3, #0]
 800fedc:	4807      	ldr	r0, [pc, #28]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fede:	f000 fed7 	bl	8010c90 <i2c_master_addressing>
 800fee2:	f640 75ff 	movw	r5, #4095	; 0xfff
 800fee6:	4e05      	ldr	r6, [pc, #20]	; (800fefc <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 800fee8:	f240 5101 	movw	r1, #1281	; 0x501
 800feec:	4630      	mov	r0, r6
 800feee:	f000 feeb 	bl	8010cc8 <i2c_flag_get>
 800fef2:	2800      	cmp	r0, #0
 800fef4:	d1c3      	bne.n	800fe7e <gd32_i2c_write(char const*, unsigned int)+0x46>
 800fef6:	3d01      	subs	r5, #1
 800fef8:	d1f6      	bne.n	800fee8 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 800fefa:	e7ab      	b.n	800fe54 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 800fefc:	40005400 	andmi	r5, r0, r0, lsl #8
 800ff00:	20009bc4 	andcs	r9, r0, r4, asr #23

0800ff04 <gd32_i2c_read(char*, unsigned int)>:
 800ff04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ff08:	4680      	mov	r8, r0
 800ff0a:	460c      	mov	r4, r1
 800ff0c:	f640 76ff 	movw	r6, #4095	; 0xfff
 800ff10:	4f49      	ldr	r7, [pc, #292]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff12:	f240 6101 	movw	r1, #1537	; 0x601
 800ff16:	4638      	mov	r0, r7
 800ff18:	f000 fed6 	bl	8010cc8 <i2c_flag_get>
 800ff1c:	4605      	mov	r5, r0
 800ff1e:	b128      	cbz	r0, 800ff2c <gd32_i2c_read(char*, unsigned int)+0x28>
 800ff20:	3e01      	subs	r6, #1
 800ff22:	d1f6      	bne.n	800ff12 <gd32_i2c_read(char*, unsigned int)+0xe>
 800ff24:	f7ff ff34 	bl	800fd90 <_stop() [clone .isra.0]>
 800ff28:	2504      	movs	r5, #4
 800ff2a:	e082      	b.n	8010032 <gd32_i2c_read(char*, unsigned int)+0x12e>
 800ff2c:	2c02      	cmp	r4, #2
 800ff2e:	d103      	bne.n	800ff38 <gd32_i2c_read(char*, unsigned int)+0x34>
 800ff30:	4601      	mov	r1, r0
 800ff32:	4841      	ldr	r0, [pc, #260]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff34:	f000 fea3 	bl	8010c7e <i2c_ackpos_config>
 800ff38:	483f      	ldr	r0, [pc, #252]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff3a:	f000 feb6 	bl	8010caa <i2c_start_on_bus>
 800ff3e:	f640 76ff 	movw	r6, #4095	; 0xfff
 800ff42:	4f3d      	ldr	r7, [pc, #244]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff44:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800ff48:	4638      	mov	r0, r7
 800ff4a:	f000 febd 	bl	8010cc8 <i2c_flag_get>
 800ff4e:	b910      	cbnz	r0, 800ff56 <gd32_i2c_read(char*, unsigned int)+0x52>
 800ff50:	3e01      	subs	r6, #1
 800ff52:	d1f7      	bne.n	800ff44 <gd32_i2c_read(char*, unsigned int)+0x40>
 800ff54:	e7e6      	b.n	800ff24 <gd32_i2c_read(char*, unsigned int)+0x20>
 800ff56:	4b39      	ldr	r3, [pc, #228]	; (801003c <gd32_i2c_read(char*, unsigned int)+0x138>)
 800ff58:	2201      	movs	r2, #1
 800ff5a:	7819      	ldrb	r1, [r3, #0]
 800ff5c:	4836      	ldr	r0, [pc, #216]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff5e:	f000 fe97 	bl	8010c90 <i2c_master_addressing>
 800ff62:	2c02      	cmp	r4, #2
 800ff64:	d803      	bhi.n	800ff6e <gd32_i2c_read(char*, unsigned int)+0x6a>
 800ff66:	2100      	movs	r1, #0
 800ff68:	4833      	ldr	r0, [pc, #204]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff6a:	f000 fe7f 	bl	8010c6c <i2c_ack_config>
 800ff6e:	f640 76ff 	movw	r6, #4095	; 0xfff
 800ff72:	4f31      	ldr	r7, [pc, #196]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff74:	f240 5101 	movw	r1, #1281	; 0x501
 800ff78:	4638      	mov	r0, r7
 800ff7a:	f000 fea5 	bl	8010cc8 <i2c_flag_get>
 800ff7e:	b910      	cbnz	r0, 800ff86 <gd32_i2c_read(char*, unsigned int)+0x82>
 800ff80:	3e01      	subs	r6, #1
 800ff82:	d1f7      	bne.n	800ff74 <gd32_i2c_read(char*, unsigned int)+0x70>
 800ff84:	e7ce      	b.n	800ff24 <gd32_i2c_read(char*, unsigned int)+0x20>
 800ff86:	f240 5101 	movw	r1, #1281	; 0x501
 800ff8a:	482b      	ldr	r0, [pc, #172]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff8c:	f000 fea4 	bl	8010cd8 <i2c_flag_clear>
 800ff90:	2c01      	cmp	r4, #1
 800ff92:	d102      	bne.n	800ff9a <gd32_i2c_read(char*, unsigned int)+0x96>
 800ff94:	4828      	ldr	r0, [pc, #160]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ff96:	f000 fe8d 	bl	8010cb4 <i2c_stop_on_bus>
 800ff9a:	f640 77ff 	movw	r7, #4095	; 0xfff
 800ff9e:	4e26      	ldr	r6, [pc, #152]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 800ffa0:	b3ac      	cbz	r4, 801000e <gd32_i2c_read(char*, unsigned int)+0x10a>
 800ffa2:	2c03      	cmp	r4, #3
 800ffa4:	d121      	bne.n	800ffea <gd32_i2c_read(char*, unsigned int)+0xe6>
 800ffa6:	f640 79ff 	movw	r9, #4095	; 0xfff
 800ffaa:	f240 5102 	movw	r1, #1282	; 0x502
 800ffae:	4630      	mov	r0, r6
 800ffb0:	f000 fe8a 	bl	8010cc8 <i2c_flag_get>
 800ffb4:	b918      	cbnz	r0, 800ffbe <gd32_i2c_read(char*, unsigned int)+0xba>
 800ffb6:	f1b9 0901 	subs.w	r9, r9, #1
 800ffba:	d1f6      	bne.n	800ffaa <gd32_i2c_read(char*, unsigned int)+0xa6>
 800ffbc:	e7b2      	b.n	800ff24 <gd32_i2c_read(char*, unsigned int)+0x20>
 800ffbe:	2100      	movs	r1, #0
 800ffc0:	4630      	mov	r0, r6
 800ffc2:	f000 fe53 	bl	8010c6c <i2c_ack_config>
 800ffc6:	f240 5106 	movw	r1, #1286	; 0x506
 800ffca:	4630      	mov	r0, r6
 800ffcc:	f000 fe7c 	bl	8010cc8 <i2c_flag_get>
 800ffd0:	b138      	cbz	r0, 800ffe2 <gd32_i2c_read(char*, unsigned int)+0xde>
 800ffd2:	4630      	mov	r0, r6
 800ffd4:	f000 fe75 	bl	8010cc2 <i2c_data_receive>
 800ffd8:	f640 77ff 	movw	r7, #4095	; 0xfff
 800ffdc:	f808 0b01 	strb.w	r0, [r8], #1
 800ffe0:	3c01      	subs	r4, #1
 800ffe2:	3f01      	subs	r7, #1
 800ffe4:	2f00      	cmp	r7, #0
 800ffe6:	dcdb      	bgt.n	800ffa0 <gd32_i2c_read(char*, unsigned int)+0x9c>
 800ffe8:	e79c      	b.n	800ff24 <gd32_i2c_read(char*, unsigned int)+0x20>
 800ffea:	2c02      	cmp	r4, #2
 800ffec:	d1eb      	bne.n	800ffc6 <gd32_i2c_read(char*, unsigned int)+0xc2>
 800ffee:	f640 79ff 	movw	r9, #4095	; 0xfff
 800fff2:	f240 5102 	movw	r1, #1282	; 0x502
 800fff6:	4630      	mov	r0, r6
 800fff8:	f000 fe66 	bl	8010cc8 <i2c_flag_get>
 800fffc:	b918      	cbnz	r0, 8010006 <gd32_i2c_read(char*, unsigned int)+0x102>
 800fffe:	f1b9 0901 	subs.w	r9, r9, #1
 8010002:	d1f6      	bne.n	800fff2 <gd32_i2c_read(char*, unsigned int)+0xee>
 8010004:	e78e      	b.n	800ff24 <gd32_i2c_read(char*, unsigned int)+0x20>
 8010006:	4630      	mov	r0, r6
 8010008:	f000 fe54 	bl	8010cb4 <i2c_stop_on_bus>
 801000c:	e7db      	b.n	800ffc6 <gd32_i2c_read(char*, unsigned int)+0xc2>
 801000e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8010012:	4a0b      	ldr	r2, [pc, #44]	; (8010040 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010014:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010018:	0589      	lsls	r1, r1, #22
 801001a:	d502      	bpl.n	8010022 <gd32_i2c_read(char*, unsigned int)+0x11e>
 801001c:	3b01      	subs	r3, #1
 801001e:	d1f9      	bne.n	8010014 <gd32_i2c_read(char*, unsigned int)+0x110>
 8010020:	e782      	b.n	800ff28 <gd32_i2c_read(char*, unsigned int)+0x24>
 8010022:	2101      	movs	r1, #1
 8010024:	4804      	ldr	r0, [pc, #16]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010026:	f000 fe21 	bl	8010c6c <i2c_ack_config>
 801002a:	2101      	movs	r1, #1
 801002c:	4802      	ldr	r0, [pc, #8]	; (8010038 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801002e:	f000 fe26 	bl	8010c7e <i2c_ackpos_config>
 8010032:	4628      	mov	r0, r5
 8010034:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010038:	40005400 	andmi	r5, r0, r0, lsl #8
 801003c:	20009bc4 	andcs	r9, r0, r4, asr #23
 8010040:	40005000 	andmi	r5, r0, r0

08010044 <gd32_uart_begin>:
 8010044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010046:	4604      	mov	r4, r0
 8010048:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801004c:	461d      	mov	r5, r3
 801004e:	460f      	mov	r7, r1
 8010050:	4616      	mov	r6, r2
 8010052:	f7ff fa79 	bl	800f548 <rcu_periph_clock_enable>
 8010056:	4b5c      	ldr	r3, [pc, #368]	; (80101c8 <gd32_uart_begin+0x184>)
 8010058:	429c      	cmp	r4, r3
 801005a:	f000 8083 	beq.w	8010164 <gd32_uart_begin+0x120>
 801005e:	d857      	bhi.n	8010110 <gd32_uart_begin+0xcc>
 8010060:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010064:	429c      	cmp	r4, r3
 8010066:	d06d      	beq.n	8010144 <gd32_uart_begin+0x100>
 8010068:	f240 7012 	movw	r0, #1810	; 0x712
 801006c:	f7ff fa6c 	bl	800f548 <rcu_periph_clock_enable>
 8010070:	f240 6004 	movw	r0, #1540	; 0x604
 8010074:	f7ff fa68 	bl	800f548 <rcu_periph_clock_enable>
 8010078:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801007c:	2203      	movs	r2, #3
 801007e:	2118      	movs	r1, #24
 8010080:	4852      	ldr	r0, [pc, #328]	; (80101cc <gd32_uart_begin+0x188>)
 8010082:	f7ff f9d1 	bl	800f428 <gpio_init>
 8010086:	2104      	movs	r1, #4
 8010088:	4850      	ldr	r0, [pc, #320]	; (80101cc <gd32_uart_begin+0x188>)
 801008a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801008e:	2203      	movs	r2, #3
 8010090:	f7ff f9ca 	bl	800f428 <gpio_init>
 8010094:	2101      	movs	r1, #1
 8010096:	484e      	ldr	r0, [pc, #312]	; (80101d0 <gd32_uart_begin+0x18c>)
 8010098:	f7ff fa1a 	bl	800f4d0 <gpio_pin_remap_config>
 801009c:	4620      	mov	r0, r4
 801009e:	f7ff fc9d 	bl	800f9dc <usart_deinit>
 80100a2:	68e3      	ldr	r3, [r4, #12]
 80100a4:	4639      	mov	r1, r7
 80100a6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80100aa:	60e3      	str	r3, [r4, #12]
 80100ac:	4620      	mov	r0, r4
 80100ae:	f7ff fcd5 	bl	800fa5c <usart_baudrate_set>
 80100b2:	2e09      	cmp	r6, #9
 80100b4:	bf0c      	ite	eq
 80100b6:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 80100ba:	2100      	movne	r1, #0
 80100bc:	4620      	mov	r0, r4
 80100be:	f7ff fcfd 	bl	800fabc <usart_word_length_set>
 80100c2:	9b06      	ldr	r3, [sp, #24]
 80100c4:	4620      	mov	r0, r4
 80100c6:	2b02      	cmp	r3, #2
 80100c8:	bf0c      	ite	eq
 80100ca:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 80100ce:	2100      	movne	r1, #0
 80100d0:	f7ff fcfc 	bl	800facc <usart_stop_bit_set>
 80100d4:	2d01      	cmp	r5, #1
 80100d6:	d072      	beq.n	80101be <gd32_uart_begin+0x17a>
 80100d8:	2d02      	cmp	r5, #2
 80100da:	d173      	bne.n	80101c4 <gd32_uart_begin+0x180>
 80100dc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80100e0:	4620      	mov	r0, r4
 80100e2:	f7ff fce3 	bl	800faac <usart_parity_config>
 80100e6:	2100      	movs	r1, #0
 80100e8:	4620      	mov	r0, r4
 80100ea:	f7ff fd03 	bl	800faf4 <usart_hardware_flow_rts_config>
 80100ee:	2100      	movs	r1, #0
 80100f0:	4620      	mov	r0, r4
 80100f2:	f7ff fd05 	bl	800fb00 <usart_hardware_flow_cts_config>
 80100f6:	2104      	movs	r1, #4
 80100f8:	4620      	mov	r0, r4
 80100fa:	f7ff fcf5 	bl	800fae8 <usart_receive_config>
 80100fe:	2108      	movs	r1, #8
 8010100:	4620      	mov	r0, r4
 8010102:	f7ff fceb 	bl	800fadc <usart_transmit_config>
 8010106:	68e3      	ldr	r3, [r4, #12]
 8010108:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801010c:	60e3      	str	r3, [r4, #12]
 801010e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010110:	4b30      	ldr	r3, [pc, #192]	; (80101d4 <gd32_uart_begin+0x190>)
 8010112:	429c      	cmp	r4, r3
 8010114:	d03b      	beq.n	801018e <gd32_uart_begin+0x14a>
 8010116:	f240 600e 	movw	r0, #1550	; 0x60e
 801011a:	f7ff fa15 	bl	800f548 <rcu_periph_clock_enable>
 801011e:	f240 6002 	movw	r0, #1538	; 0x602
 8010122:	f7ff fa11 	bl	800f548 <rcu_periph_clock_enable>
 8010126:	f44f 7300 	mov.w	r3, #512	; 0x200
 801012a:	2203      	movs	r2, #3
 801012c:	2118      	movs	r1, #24
 801012e:	482a      	ldr	r0, [pc, #168]	; (80101d8 <gd32_uart_begin+0x194>)
 8010130:	f7ff f97a 	bl	800f428 <gpio_init>
 8010134:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010138:	2203      	movs	r2, #3
 801013a:	2104      	movs	r1, #4
 801013c:	4826      	ldr	r0, [pc, #152]	; (80101d8 <gd32_uart_begin+0x194>)
 801013e:	f7ff f973 	bl	800f428 <gpio_init>
 8010142:	e7ab      	b.n	801009c <gd32_uart_begin+0x58>
 8010144:	f240 7011 	movw	r0, #1809	; 0x711
 8010148:	f7ff f9fe 	bl	800f548 <rcu_periph_clock_enable>
 801014c:	f240 6002 	movw	r0, #1538	; 0x602
 8010150:	f7ff f9fa 	bl	800f548 <rcu_periph_clock_enable>
 8010154:	2304      	movs	r3, #4
 8010156:	2203      	movs	r2, #3
 8010158:	2118      	movs	r1, #24
 801015a:	481f      	ldr	r0, [pc, #124]	; (80101d8 <gd32_uart_begin+0x194>)
 801015c:	f7ff f964 	bl	800f428 <gpio_init>
 8010160:	2308      	movs	r3, #8
 8010162:	e7e9      	b.n	8010138 <gd32_uart_begin+0xf4>
 8010164:	f240 7013 	movw	r0, #1811	; 0x713
 8010168:	f7ff f9ee 	bl	800f548 <rcu_periph_clock_enable>
 801016c:	f240 6004 	movw	r0, #1540	; 0x604
 8010170:	f7ff f9ea 	bl	800f548 <rcu_periph_clock_enable>
 8010174:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010178:	2203      	movs	r2, #3
 801017a:	2118      	movs	r1, #24
 801017c:	4813      	ldr	r0, [pc, #76]	; (80101cc <gd32_uart_begin+0x188>)
 801017e:	f7ff f953 	bl	800f428 <gpio_init>
 8010182:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010186:	2203      	movs	r2, #3
 8010188:	2104      	movs	r1, #4
 801018a:	4810      	ldr	r0, [pc, #64]	; (80101cc <gd32_uart_begin+0x188>)
 801018c:	e7d7      	b.n	801013e <gd32_uart_begin+0xfa>
 801018e:	f240 7014 	movw	r0, #1812	; 0x714
 8010192:	f7ff f9d9 	bl	800f548 <rcu_periph_clock_enable>
 8010196:	f240 6004 	movw	r0, #1540	; 0x604
 801019a:	f7ff f9d5 	bl	800f548 <rcu_periph_clock_enable>
 801019e:	f240 6005 	movw	r0, #1541	; 0x605
 80101a2:	f7ff f9d1 	bl	800f548 <rcu_periph_clock_enable>
 80101a6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80101aa:	2203      	movs	r2, #3
 80101ac:	2118      	movs	r1, #24
 80101ae:	4807      	ldr	r0, [pc, #28]	; (80101cc <gd32_uart_begin+0x188>)
 80101b0:	f7ff f93a 	bl	800f428 <gpio_init>
 80101b4:	2304      	movs	r3, #4
 80101b6:	2203      	movs	r2, #3
 80101b8:	4619      	mov	r1, r3
 80101ba:	4808      	ldr	r0, [pc, #32]	; (80101dc <gd32_uart_begin+0x198>)
 80101bc:	e7bf      	b.n	801013e <gd32_uart_begin+0xfa>
 80101be:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80101c2:	e78d      	b.n	80100e0 <gd32_uart_begin+0x9c>
 80101c4:	2100      	movs	r1, #0
 80101c6:	e78b      	b.n	80100e0 <gd32_uart_begin+0x9c>
 80101c8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80101cc:	40011000 	andmi	r1, r1, r0
 80101d0:	00140010 	andseq	r0, r4, r0, lsl r0
 80101d4:	40005000 	andmi	r5, r0, r0
 80101d8:	40010800 	andmi	r0, r1, r0, lsl #16
 80101dc:	40011400 	andmi	r1, r1, r0, lsl #8

080101e0 <micros_init()>:
 80101e0:	4770      	bx	lr
	...

080101e4 <udelay_init()>:
 80101e4:	4a07      	ldr	r2, [pc, #28]	; (8010204 <udelay_init()+0x20>)
 80101e6:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80101ea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80101ee:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80101f2:	2200      	movs	r2, #0
 80101f4:	4b04      	ldr	r3, [pc, #16]	; (8010208 <udelay_init()+0x24>)
 80101f6:	605a      	str	r2, [r3, #4]
 80101f8:	681a      	ldr	r2, [r3, #0]
 80101fa:	f042 0201 	orr.w	r2, r2, #1
 80101fe:	601a      	str	r2, [r3, #0]
 8010200:	4770      	bx	lr
 8010202:	bf00      	nop
 8010204:	e000ed00 	and	lr, r0, r0, lsl #26
 8010208:	e0001000 	and	r1, r0, r0

0801020c <udelay(unsigned int, unsigned int)>:
 801020c:	236c      	movs	r3, #108	; 0x6c
 801020e:	b510      	push	{r4, lr}
 8010210:	4358      	muls	r0, r3
 8010212:	b909      	cbnz	r1, 8010218 <udelay(unsigned int, unsigned int)+0xc>
 8010214:	4b08      	ldr	r3, [pc, #32]	; (8010238 <udelay(unsigned int, unsigned int)+0x2c>)
 8010216:	6859      	ldr	r1, [r3, #4]
 8010218:	2300      	movs	r3, #0
 801021a:	4c07      	ldr	r4, [pc, #28]	; (8010238 <udelay(unsigned int, unsigned int)+0x2c>)
 801021c:	6862      	ldr	r2, [r4, #4]
 801021e:	4291      	cmp	r1, r2
 8010220:	d0fc      	beq.n	801021c <udelay(unsigned int, unsigned int)+0x10>
 8010222:	bf28      	it	cs
 8010224:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8010228:	1a5b      	subs	r3, r3, r1
 801022a:	4413      	add	r3, r2
 801022c:	4283      	cmp	r3, r0
 801022e:	d300      	bcc.n	8010232 <udelay(unsigned int, unsigned int)+0x26>
 8010230:	bd10      	pop	{r4, pc}
 8010232:	4611      	mov	r1, r2
 8010234:	e7f2      	b.n	801021c <udelay(unsigned int, unsigned int)+0x10>
 8010236:	bf00      	nop
 8010238:	e0001000 	and	r1, r0, r0

0801023c <mac_address_get>:
 801023c:	2102      	movs	r1, #2
 801023e:	4a07      	ldr	r2, [pc, #28]	; (801025c <mac_address_get+0x20>)
 8010240:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010244:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010248:	7001      	strb	r1, [r0, #0]
 801024a:	7042      	strb	r2, [r0, #1]
 801024c:	0e1a      	lsrs	r2, r3, #24
 801024e:	7082      	strb	r2, [r0, #2]
 8010250:	0c1a      	lsrs	r2, r3, #16
 8010252:	70c2      	strb	r2, [r0, #3]
 8010254:	0a1a      	lsrs	r2, r3, #8
 8010256:	7102      	strb	r2, [r0, #4]
 8010258:	7143      	strb	r3, [r0, #5]
 801025a:	4770      	bx	lr
 801025c:	1ffff000 	svcne	0x00fff000

08010260 <adc_mode_config>:
 8010260:	4b06      	ldr	r3, [pc, #24]	; (801027c <adc_mode_config+0x1c>)
 8010262:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8010266:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 801026a:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 801026e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010272:	4302      	orrs	r2, r0
 8010274:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010278:	4770      	bx	lr
 801027a:	bf00      	nop
 801027c:	40012000 	andmi	r2, r1, r0

08010280 <adc_special_function_config>:
 8010280:	b510      	push	{r4, lr}
 8010282:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8010286:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801028a:	f001 0102 	and.w	r1, r1, #2
 801028e:	b17a      	cbz	r2, 80102b0 <adc_special_function_config+0x30>
 8010290:	b11b      	cbz	r3, 801029a <adc_special_function_config+0x1a>
 8010292:	6843      	ldr	r3, [r0, #4]
 8010294:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010298:	6043      	str	r3, [r0, #4]
 801029a:	b11c      	cbz	r4, 80102a4 <adc_special_function_config+0x24>
 801029c:	6843      	ldr	r3, [r0, #4]
 801029e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80102a2:	6043      	str	r3, [r0, #4]
 80102a4:	b119      	cbz	r1, 80102ae <adc_special_function_config+0x2e>
 80102a6:	6883      	ldr	r3, [r0, #8]
 80102a8:	f043 0302 	orr.w	r3, r3, #2
 80102ac:	6083      	str	r3, [r0, #8]
 80102ae:	bd10      	pop	{r4, pc}
 80102b0:	b11b      	cbz	r3, 80102ba <adc_special_function_config+0x3a>
 80102b2:	6843      	ldr	r3, [r0, #4]
 80102b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80102b8:	6043      	str	r3, [r0, #4]
 80102ba:	b11c      	cbz	r4, 80102c4 <adc_special_function_config+0x44>
 80102bc:	6843      	ldr	r3, [r0, #4]
 80102be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80102c2:	6043      	str	r3, [r0, #4]
 80102c4:	2900      	cmp	r1, #0
 80102c6:	d0f2      	beq.n	80102ae <adc_special_function_config+0x2e>
 80102c8:	6883      	ldr	r3, [r0, #8]
 80102ca:	f023 0302 	bic.w	r3, r3, #2
 80102ce:	e7ed      	b.n	80102ac <adc_special_function_config+0x2c>

080102d0 <adc_data_alignment_config>:
 80102d0:	6883      	ldr	r3, [r0, #8]
 80102d2:	b119      	cbz	r1, 80102dc <adc_data_alignment_config+0xc>
 80102d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80102d8:	6083      	str	r3, [r0, #8]
 80102da:	4770      	bx	lr
 80102dc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80102e0:	e7fa      	b.n	80102d8 <adc_data_alignment_config+0x8>

080102e2 <adc_enable>:
 80102e2:	6883      	ldr	r3, [r0, #8]
 80102e4:	07db      	lsls	r3, r3, #31
 80102e6:	bf5e      	ittt	pl
 80102e8:	6883      	ldrpl	r3, [r0, #8]
 80102ea:	f043 0301 	orrpl.w	r3, r3, #1
 80102ee:	6083      	strpl	r3, [r0, #8]
 80102f0:	4770      	bx	lr

080102f2 <adc_calibration_enable>:
 80102f2:	6883      	ldr	r3, [r0, #8]
 80102f4:	f100 0208 	add.w	r2, r0, #8
 80102f8:	f043 0308 	orr.w	r3, r3, #8
 80102fc:	6083      	str	r3, [r0, #8]
 80102fe:	6813      	ldr	r3, [r2, #0]
 8010300:	0719      	lsls	r1, r3, #28
 8010302:	d4fc      	bmi.n	80102fe <adc_calibration_enable+0xc>
 8010304:	6883      	ldr	r3, [r0, #8]
 8010306:	f043 0304 	orr.w	r3, r3, #4
 801030a:	6083      	str	r3, [r0, #8]
 801030c:	6813      	ldr	r3, [r2, #0]
 801030e:	075b      	lsls	r3, r3, #29
 8010310:	d4fc      	bmi.n	801030c <adc_calibration_enable+0x1a>
 8010312:	4770      	bx	lr

08010314 <adc_tempsensor_vrefint_enable>:
 8010314:	4a03      	ldr	r2, [pc, #12]	; (8010324 <adc_tempsensor_vrefint_enable+0x10>)
 8010316:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801031a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801031e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8010322:	4770      	bx	lr
 8010324:	40012000 	andmi	r2, r1, r0

08010328 <adc_channel_length_config>:
 8010328:	2901      	cmp	r1, #1
 801032a:	d002      	beq.n	8010332 <adc_channel_length_config+0xa>
 801032c:	2902      	cmp	r1, #2
 801032e:	d00c      	beq.n	801034a <adc_channel_length_config+0x22>
 8010330:	4770      	bx	lr
 8010332:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010334:	3a01      	subs	r2, #1
 8010336:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801033a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801033c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801033e:	0512      	lsls	r2, r2, #20
 8010340:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8010344:	431a      	orrs	r2, r3
 8010346:	62c2      	str	r2, [r0, #44]	; 0x2c
 8010348:	4770      	bx	lr
 801034a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801034c:	3a01      	subs	r2, #1
 801034e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8010352:	6383      	str	r3, [r0, #56]	; 0x38
 8010354:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010356:	0512      	lsls	r2, r2, #20
 8010358:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801035c:	431a      	orrs	r2, r3
 801035e:	6382      	str	r2, [r0, #56]	; 0x38
 8010360:	4770      	bx	lr

08010362 <adc_inserted_channel_config>:
 8010362:	b530      	push	{r4, r5, lr}
 8010364:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8010366:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010368:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801036c:	1a61      	subs	r1, r4, r1
 801036e:	f06f 0404 	mvn.w	r4, #4
 8010372:	4361      	muls	r1, r4
 8010374:	241f      	movs	r4, #31
 8010376:	310f      	adds	r1, #15
 8010378:	408c      	lsls	r4, r1
 801037a:	ea25 0504 	bic.w	r5, r5, r4
 801037e:	fa02 f101 	lsl.w	r1, r2, r1
 8010382:	4329      	orrs	r1, r5
 8010384:	2a09      	cmp	r2, #9
 8010386:	6381      	str	r1, [r0, #56]	; 0x38
 8010388:	d80b      	bhi.n	80103a2 <adc_inserted_channel_config+0x40>
 801038a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801038e:	2207      	movs	r2, #7
 8010390:	6904      	ldr	r4, [r0, #16]
 8010392:	408a      	lsls	r2, r1
 8010394:	ea24 0402 	bic.w	r4, r4, r2
 8010398:	fa03 f201 	lsl.w	r2, r3, r1
 801039c:	4322      	orrs	r2, r4
 801039e:	6102      	str	r2, [r0, #16]
 80103a0:	bd30      	pop	{r4, r5, pc}
 80103a2:	2a11      	cmp	r2, #17
 80103a4:	d8fc      	bhi.n	80103a0 <adc_inserted_channel_config+0x3e>
 80103a6:	2407      	movs	r4, #7
 80103a8:	3a0a      	subs	r2, #10
 80103aa:	68c1      	ldr	r1, [r0, #12]
 80103ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80103b0:	4094      	lsls	r4, r2
 80103b2:	ea21 0104 	bic.w	r1, r1, r4
 80103b6:	fa03 f202 	lsl.w	r2, r3, r2
 80103ba:	430a      	orrs	r2, r1
 80103bc:	60c2      	str	r2, [r0, #12]
 80103be:	e7ef      	b.n	80103a0 <adc_inserted_channel_config+0x3e>

080103c0 <adc_external_trigger_source_config>:
 80103c0:	2901      	cmp	r1, #1
 80103c2:	d002      	beq.n	80103ca <adc_external_trigger_source_config+0xa>
 80103c4:	2902      	cmp	r1, #2
 80103c6:	d008      	beq.n	80103da <adc_external_trigger_source_config+0x1a>
 80103c8:	4770      	bx	lr
 80103ca:	6883      	ldr	r3, [r0, #8]
 80103cc:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80103d0:	6083      	str	r3, [r0, #8]
 80103d2:	6883      	ldr	r3, [r0, #8]
 80103d4:	431a      	orrs	r2, r3
 80103d6:	6082      	str	r2, [r0, #8]
 80103d8:	4770      	bx	lr
 80103da:	6883      	ldr	r3, [r0, #8]
 80103dc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80103e0:	e7f6      	b.n	80103d0 <adc_external_trigger_source_config+0x10>

080103e2 <adc_external_trigger_config>:
 80103e2:	f001 0301 	and.w	r3, r1, #1
 80103e6:	f001 0102 	and.w	r1, r1, #2
 80103ea:	b152      	cbz	r2, 8010402 <adc_external_trigger_config+0x20>
 80103ec:	b11b      	cbz	r3, 80103f6 <adc_external_trigger_config+0x14>
 80103ee:	6883      	ldr	r3, [r0, #8]
 80103f0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80103f4:	6083      	str	r3, [r0, #8]
 80103f6:	b119      	cbz	r1, 8010400 <adc_external_trigger_config+0x1e>
 80103f8:	6883      	ldr	r3, [r0, #8]
 80103fa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80103fe:	6083      	str	r3, [r0, #8]
 8010400:	4770      	bx	lr
 8010402:	b11b      	cbz	r3, 801040c <adc_external_trigger_config+0x2a>
 8010404:	6883      	ldr	r3, [r0, #8]
 8010406:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 801040a:	6083      	str	r3, [r0, #8]
 801040c:	2900      	cmp	r1, #0
 801040e:	d0f7      	beq.n	8010400 <adc_external_trigger_config+0x1e>
 8010410:	6883      	ldr	r3, [r0, #8]
 8010412:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8010416:	e7f2      	b.n	80103fe <adc_external_trigger_config+0x1c>

08010418 <adc_software_trigger_enable>:
 8010418:	07ca      	lsls	r2, r1, #31
 801041a:	bf42      	ittt	mi
 801041c:	6883      	ldrmi	r3, [r0, #8]
 801041e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8010422:	6083      	strmi	r3, [r0, #8]
 8010424:	078b      	lsls	r3, r1, #30
 8010426:	bf42      	ittt	mi
 8010428:	6883      	ldrmi	r3, [r0, #8]
 801042a:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801042e:	6083      	strmi	r3, [r0, #8]
 8010430:	4770      	bx	lr

08010432 <enet_delay>:
 8010432:	2300      	movs	r3, #0
 8010434:	b082      	sub	sp, #8
 8010436:	9301      	str	r3, [sp, #4]
 8010438:	9001      	str	r0, [sp, #4]
 801043a:	9b01      	ldr	r3, [sp, #4]
 801043c:	b90b      	cbnz	r3, 8010442 <enet_delay+0x10>
 801043e:	b002      	add	sp, #8
 8010440:	4770      	bx	lr
 8010442:	9b01      	ldr	r3, [sp, #4]
 8010444:	3b01      	subs	r3, #1
 8010446:	9301      	str	r3, [sp, #4]
 8010448:	e7f7      	b.n	801043a <enet_delay+0x8>
	...

0801044c <enet_software_reset>:
 801044c:	4b07      	ldr	r3, [pc, #28]	; (801046c <enet_software_reset+0x20>)
 801044e:	681a      	ldr	r2, [r3, #0]
 8010450:	f042 0201 	orr.w	r2, r2, #1
 8010454:	601a      	str	r2, [r3, #0]
 8010456:	4a06      	ldr	r2, [pc, #24]	; (8010470 <enet_software_reset+0x24>)
 8010458:	6819      	ldr	r1, [r3, #0]
 801045a:	07c9      	lsls	r1, r1, #31
 801045c:	d501      	bpl.n	8010462 <enet_software_reset+0x16>
 801045e:	3a01      	subs	r2, #1
 8010460:	d1fa      	bne.n	8010458 <enet_software_reset+0xc>
 8010462:	6818      	ldr	r0, [r3, #0]
 8010464:	43c0      	mvns	r0, r0
 8010466:	f000 0001 	and.w	r0, r0, #1
 801046a:	4770      	bx	lr
 801046c:	40029000 	andmi	r9, r2, r0
 8010470:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010474 <enet_descriptors_chain_init>:
 8010474:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8010478:	b5f0      	push	{r4, r5, r6, r7, lr}
 801047a:	4a19      	ldr	r2, [pc, #100]	; (80104e0 <enet_descriptors_chain_init+0x6c>)
 801047c:	d125      	bne.n	80104ca <enet_descriptors_chain_init+0x56>
 801047e:	2500      	movs	r5, #0
 8010480:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8010484:	2002      	movs	r0, #2
 8010486:	4b17      	ldr	r3, [pc, #92]	; (80104e4 <enet_descriptors_chain_init+0x70>)
 8010488:	4c17      	ldr	r4, [pc, #92]	; (80104e8 <enet_descriptors_chain_init+0x74>)
 801048a:	6113      	str	r3, [r2, #16]
 801048c:	4a17      	ldr	r2, [pc, #92]	; (80104ec <enet_descriptors_chain_init+0x78>)
 801048e:	6013      	str	r3, [r2, #0]
 8010490:	2200      	movs	r2, #0
 8010492:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8010496:	4916      	ldr	r1, [pc, #88]	; (80104f0 <enet_descriptors_chain_init+0x7c>)
 8010498:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 801049c:	600a      	str	r2, [r1, #0]
 801049e:	4915      	ldr	r1, [pc, #84]	; (80104f4 <enet_descriptors_chain_init+0x80>)
 80104a0:	600a      	str	r2, [r1, #0]
 80104a2:	f103 0110 	add.w	r1, r3, #16
 80104a6:	fb0e 4702 	mla	r7, lr, r2, r4
 80104aa:	f841 7c08 	str.w	r7, [r1, #-8]
 80104ae:	4594      	cmp	ip, r2
 80104b0:	bf94      	ite	ls
 80104b2:	461f      	movls	r7, r3
 80104b4:	460f      	movhi	r7, r1
 80104b6:	3201      	adds	r2, #1
 80104b8:	4290      	cmp	r0, r2
 80104ba:	e941 6504 	strd	r6, r5, [r1, #-16]
 80104be:	f841 7c04 	str.w	r7, [r1, #-4]
 80104c2:	f101 0110 	add.w	r1, r1, #16
 80104c6:	d1ee      	bne.n	80104a6 <enet_descriptors_chain_init+0x32>
 80104c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104ca:	4b0b      	ldr	r3, [pc, #44]	; (80104f8 <enet_descriptors_chain_init+0x84>)
 80104cc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80104d0:	60d3      	str	r3, [r2, #12]
 80104d2:	4a0a      	ldr	r2, [pc, #40]	; (80104fc <enet_descriptors_chain_init+0x88>)
 80104d4:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80104d8:	2004      	movs	r0, #4
 80104da:	4c09      	ldr	r4, [pc, #36]	; (8010500 <enet_descriptors_chain_init+0x8c>)
 80104dc:	6013      	str	r3, [r2, #0]
 80104de:	e7d7      	b.n	8010490 <enet_descriptors_chain_init+0x1c>
 80104e0:	40029000 	andmi	r9, r2, r0
 80104e4:	2000c00c 	andcs	ip, r0, ip
 80104e8:	2000b424 	andcs	fp, r0, r4, lsr #8
 80104ec:	20009bd4 	ldrdcs	r9, [r0], -r4
 80104f0:	20009bc8 	andcs	r9, r0, r8, asr #23
 80104f4:	20009bcc 	andcs	r9, r0, ip, asr #23
 80104f8:	2000b3e4 	andcs	fp, r0, r4, ror #7
 80104fc:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010500:	20009c14 	andcs	r9, r0, r4, lsl ip

08010504 <enet_frame_receive>:
 8010504:	4a1d      	ldr	r2, [pc, #116]	; (801057c <enet_frame_receive+0x78>)
 8010506:	b510      	push	{r4, lr}
 8010508:	6813      	ldr	r3, [r2, #0]
 801050a:	681b      	ldr	r3, [r3, #0]
 801050c:	2b00      	cmp	r3, #0
 801050e:	db33      	blt.n	8010578 <enet_frame_receive+0x74>
 8010510:	b970      	cbnz	r0, 8010530 <enet_frame_receive+0x2c>
 8010512:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8010516:	6813      	ldr	r3, [r2, #0]
 8010518:	6019      	str	r1, [r3, #0]
 801051a:	4919      	ldr	r1, [pc, #100]	; (8010580 <enet_frame_receive+0x7c>)
 801051c:	6948      	ldr	r0, [r1, #20]
 801051e:	0604      	lsls	r4, r0, #24
 8010520:	d419      	bmi.n	8010556 <enet_frame_receive+0x52>
 8010522:	6859      	ldr	r1, [r3, #4]
 8010524:	0448      	lsls	r0, r1, #17
 8010526:	d51b      	bpl.n	8010560 <enet_frame_receive+0x5c>
 8010528:	68db      	ldr	r3, [r3, #12]
 801052a:	2001      	movs	r0, #1
 801052c:	6013      	str	r3, [r2, #0]
 801052e:	bd10      	pop	{r4, pc}
 8010530:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8010534:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8010538:	d11e      	bne.n	8010578 <enet_frame_receive+0x74>
 801053a:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801053e:	3b04      	subs	r3, #4
 8010540:	428b      	cmp	r3, r1
 8010542:	d819      	bhi.n	8010578 <enet_frame_receive+0x74>
 8010544:	2100      	movs	r1, #0
 8010546:	4299      	cmp	r1, r3
 8010548:	6814      	ldr	r4, [r2, #0]
 801054a:	d2e2      	bcs.n	8010512 <enet_frame_receive+0xe>
 801054c:	68a4      	ldr	r4, [r4, #8]
 801054e:	5d0c      	ldrb	r4, [r1, r4]
 8010550:	5444      	strb	r4, [r0, r1]
 8010552:	3101      	adds	r1, #1
 8010554:	e7f7      	b.n	8010546 <enet_frame_receive+0x42>
 8010556:	2080      	movs	r0, #128	; 0x80
 8010558:	6148      	str	r0, [r1, #20]
 801055a:	2000      	movs	r0, #0
 801055c:	6088      	str	r0, [r1, #8]
 801055e:	e7e0      	b.n	8010522 <enet_frame_receive+0x1e>
 8010560:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8010564:	4906      	ldr	r1, [pc, #24]	; (8010580 <enet_frame_receive+0x7c>)
 8010566:	bf05      	ittet	eq
 8010568:	3310      	addeq	r3, #16
 801056a:	6809      	ldreq	r1, [r1, #0]
 801056c:	68cb      	ldrne	r3, [r1, #12]
 801056e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010572:	bf08      	it	eq
 8010574:	185b      	addeq	r3, r3, r1
 8010576:	e7d8      	b.n	801052a <enet_frame_receive+0x26>
 8010578:	2000      	movs	r0, #0
 801057a:	e7d8      	b.n	801052e <enet_frame_receive+0x2a>
 801057c:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010580:	40029000 	andmi	r9, r2, r0

08010584 <enet_frame_transmit>:
 8010584:	4a1e      	ldr	r2, [pc, #120]	; (8010600 <enet_frame_transmit+0x7c>)
 8010586:	b530      	push	{r4, r5, lr}
 8010588:	6813      	ldr	r3, [r2, #0]
 801058a:	681b      	ldr	r3, [r3, #0]
 801058c:	2b00      	cmp	r3, #0
 801058e:	db34      	blt.n	80105fa <enet_frame_transmit+0x76>
 8010590:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8010594:	4299      	cmp	r1, r3
 8010596:	d830      	bhi.n	80105fa <enet_frame_transmit+0x76>
 8010598:	b9e8      	cbnz	r0, 80105d6 <enet_frame_transmit+0x52>
 801059a:	6813      	ldr	r3, [r2, #0]
 801059c:	4819      	ldr	r0, [pc, #100]	; (8010604 <enet_frame_transmit+0x80>)
 801059e:	6059      	str	r1, [r3, #4]
 80105a0:	6819      	ldr	r1, [r3, #0]
 80105a2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80105a6:	6019      	str	r1, [r3, #0]
 80105a8:	6941      	ldr	r1, [r0, #20]
 80105aa:	6944      	ldr	r4, [r0, #20]
 80105ac:	f001 0104 	and.w	r1, r1, #4
 80105b0:	f004 0420 	and.w	r4, r4, #32
 80105b4:	4321      	orrs	r1, r4
 80105b6:	d110      	bne.n	80105da <enet_frame_transmit+0x56>
 80105b8:	6819      	ldr	r1, [r3, #0]
 80105ba:	02c8      	lsls	r0, r1, #11
 80105bc:	d511      	bpl.n	80105e2 <enet_frame_transmit+0x5e>
 80105be:	68db      	ldr	r3, [r3, #12]
 80105c0:	2001      	movs	r0, #1
 80105c2:	6013      	str	r3, [r2, #0]
 80105c4:	bd30      	pop	{r4, r5, pc}
 80105c6:	5cc5      	ldrb	r5, [r0, r3]
 80105c8:	68a4      	ldr	r4, [r4, #8]
 80105ca:	551d      	strb	r5, [r3, r4]
 80105cc:	3301      	adds	r3, #1
 80105ce:	428b      	cmp	r3, r1
 80105d0:	6814      	ldr	r4, [r2, #0]
 80105d2:	d1f8      	bne.n	80105c6 <enet_frame_transmit+0x42>
 80105d4:	e7e1      	b.n	801059a <enet_frame_transmit+0x16>
 80105d6:	2300      	movs	r3, #0
 80105d8:	e7f9      	b.n	80105ce <enet_frame_transmit+0x4a>
 80105da:	6141      	str	r1, [r0, #20]
 80105dc:	2100      	movs	r1, #0
 80105de:	6041      	str	r1, [r0, #4]
 80105e0:	e7ea      	b.n	80105b8 <enet_frame_transmit+0x34>
 80105e2:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80105e6:	4907      	ldr	r1, [pc, #28]	; (8010604 <enet_frame_transmit+0x80>)
 80105e8:	bf05      	ittet	eq
 80105ea:	3310      	addeq	r3, #16
 80105ec:	6809      	ldreq	r1, [r1, #0]
 80105ee:	690b      	ldrne	r3, [r1, #16]
 80105f0:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80105f4:	bf08      	it	eq
 80105f6:	185b      	addeq	r3, r3, r1
 80105f8:	e7e2      	b.n	80105c0 <enet_frame_transmit+0x3c>
 80105fa:	2000      	movs	r0, #0
 80105fc:	e7e2      	b.n	80105c4 <enet_frame_transmit+0x40>
 80105fe:	bf00      	nop
 8010600:	20009bd4 	ldrdcs	r9, [r0], -r4
 8010604:	40029000 	andmi	r9, r2, r0

08010608 <enet_transmit_checksum_config>:
 8010608:	6803      	ldr	r3, [r0, #0]
 801060a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801060e:	430b      	orrs	r3, r1
 8010610:	6003      	str	r3, [r0, #0]
 8010612:	4770      	bx	lr

08010614 <enet_mac_address_set>:
 8010614:	888a      	ldrh	r2, [r1, #4]
 8010616:	4b03      	ldr	r3, [pc, #12]	; (8010624 <enet_mac_address_set+0x10>)
 8010618:	50c2      	str	r2, [r0, r3]
 801061a:	680a      	ldr	r2, [r1, #0]
 801061c:	3304      	adds	r3, #4
 801061e:	50c2      	str	r2, [r0, r3]
 8010620:	4770      	bx	lr
 8010622:	bf00      	nop
 8010624:	40028040 	andmi	r8, r2, r0, asr #32

08010628 <enet_rx_enable>:
 8010628:	4a05      	ldr	r2, [pc, #20]	; (8010640 <enet_rx_enable+0x18>)
 801062a:	6813      	ldr	r3, [r2, #0]
 801062c:	f043 0304 	orr.w	r3, r3, #4
 8010630:	6013      	str	r3, [r2, #0]
 8010632:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8010636:	6993      	ldr	r3, [r2, #24]
 8010638:	f043 0302 	orr.w	r3, r3, #2
 801063c:	6193      	str	r3, [r2, #24]
 801063e:	4770      	bx	lr
 8010640:	40028000 	andmi	r8, r2, r0

08010644 <enet_phy_write_read>:
 8010644:	b530      	push	{r4, r5, lr}
 8010646:	4604      	mov	r4, r0
 8010648:	4d13      	ldr	r5, [pc, #76]	; (8010698 <enet_phy_write_read+0x54>)
 801064a:	0192      	lsls	r2, r2, #6
 801064c:	6928      	ldr	r0, [r5, #16]
 801064e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8010652:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8010656:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801065a:	4302      	orrs	r2, r0
 801065c:	02c9      	lsls	r1, r1, #11
 801065e:	b289      	uxth	r1, r1
 8010660:	2c02      	cmp	r4, #2
 8010662:	ea42 0204 	orr.w	r2, r2, r4
 8010666:	ea42 0201 	orr.w	r2, r2, r1
 801066a:	bf08      	it	eq
 801066c:	8819      	ldrheq	r1, [r3, #0]
 801066e:	f042 0201 	orr.w	r2, r2, #1
 8010672:	bf08      	it	eq
 8010674:	6169      	streq	r1, [r5, #20]
 8010676:	612a      	str	r2, [r5, #16]
 8010678:	4907      	ldr	r1, [pc, #28]	; (8010698 <enet_phy_write_read+0x54>)
 801067a:	4a08      	ldr	r2, [pc, #32]	; (801069c <enet_phy_write_read+0x58>)
 801067c:	6908      	ldr	r0, [r1, #16]
 801067e:	07c0      	lsls	r0, r0, #31
 8010680:	d501      	bpl.n	8010686 <enet_phy_write_read+0x42>
 8010682:	3a01      	subs	r2, #1
 8010684:	d1fa      	bne.n	801067c <enet_phy_write_read+0x38>
 8010686:	690a      	ldr	r2, [r1, #16]
 8010688:	43d2      	mvns	r2, r2
 801068a:	f002 0001 	and.w	r0, r2, #1
 801068e:	b90c      	cbnz	r4, 8010694 <enet_phy_write_read+0x50>
 8010690:	694a      	ldr	r2, [r1, #20]
 8010692:	801a      	strh	r2, [r3, #0]
 8010694:	bd30      	pop	{r4, r5, pc}
 8010696:	bf00      	nop
 8010698:	40028000 	andmi	r8, r2, r0
 801069c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080106a0 <enet_phy_config>:
 80106a0:	4b22      	ldr	r3, [pc, #136]	; (801072c <enet_phy_config+0x8c>)
 80106a2:	b513      	push	{r0, r1, r4, lr}
 80106a4:	2001      	movs	r0, #1
 80106a6:	691c      	ldr	r4, [r3, #16]
 80106a8:	f7ff f814 	bl	800f6d4 <rcu_clock_freq_get>
 80106ac:	4b20      	ldr	r3, [pc, #128]	; (8010730 <enet_phy_config+0x90>)
 80106ae:	4a21      	ldr	r2, [pc, #132]	; (8010734 <enet_phy_config+0x94>)
 80106b0:	4403      	add	r3, r0
 80106b2:	4293      	cmp	r3, r2
 80106b4:	f024 041c 	bic.w	r4, r4, #28
 80106b8:	d220      	bcs.n	80106fc <enet_phy_config+0x5c>
 80106ba:	f044 0408 	orr.w	r4, r4, #8
 80106be:	4b1b      	ldr	r3, [pc, #108]	; (801072c <enet_phy_config+0x8c>)
 80106c0:	2200      	movs	r2, #0
 80106c2:	611c      	str	r4, [r3, #16]
 80106c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80106c8:	2101      	movs	r1, #1
 80106ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80106ce:	2002      	movs	r0, #2
 80106d0:	f10d 0306 	add.w	r3, sp, #6
 80106d4:	f7ff ffb6 	bl	8010644 <enet_phy_write_read>
 80106d8:	b310      	cbz	r0, 8010720 <enet_phy_config+0x80>
 80106da:	2200      	movs	r2, #0
 80106dc:	4816      	ldr	r0, [pc, #88]	; (8010738 <enet_phy_config+0x98>)
 80106de:	f7ff fea8 	bl	8010432 <enet_delay>
 80106e2:	2101      	movs	r1, #1
 80106e4:	4610      	mov	r0, r2
 80106e6:	f10d 0306 	add.w	r3, sp, #6
 80106ea:	f7ff ffab 	bl	8010644 <enet_phy_write_read>
 80106ee:	b1b8      	cbz	r0, 8010720 <enet_phy_config+0x80>
 80106f0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80106f4:	43c0      	mvns	r0, r0
 80106f6:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80106fa:	e012      	b.n	8010722 <enet_phy_config+0x82>
 80106fc:	4b0f      	ldr	r3, [pc, #60]	; (801073c <enet_phy_config+0x9c>)
 80106fe:	4a10      	ldr	r2, [pc, #64]	; (8010740 <enet_phy_config+0xa0>)
 8010700:	4403      	add	r3, r0
 8010702:	4293      	cmp	r3, r2
 8010704:	d802      	bhi.n	801070c <enet_phy_config+0x6c>
 8010706:	f044 040c 	orr.w	r4, r4, #12
 801070a:	e7d8      	b.n	80106be <enet_phy_config+0x1e>
 801070c:	4b0d      	ldr	r3, [pc, #52]	; (8010744 <enet_phy_config+0xa4>)
 801070e:	4a0e      	ldr	r2, [pc, #56]	; (8010748 <enet_phy_config+0xa8>)
 8010710:	4403      	add	r3, r0
 8010712:	4293      	cmp	r3, r2
 8010714:	d9d3      	bls.n	80106be <enet_phy_config+0x1e>
 8010716:	4b0d      	ldr	r3, [pc, #52]	; (801074c <enet_phy_config+0xac>)
 8010718:	4a0d      	ldr	r2, [pc, #52]	; (8010750 <enet_phy_config+0xb0>)
 801071a:	4403      	add	r3, r0
 801071c:	4293      	cmp	r3, r2
 801071e:	d902      	bls.n	8010726 <enet_phy_config+0x86>
 8010720:	2000      	movs	r0, #0
 8010722:	b002      	add	sp, #8
 8010724:	bd10      	pop	{r4, pc}
 8010726:	f044 0404 	orr.w	r4, r4, #4
 801072a:	e7c8      	b.n	80106be <enet_phy_config+0x1e>
 801072c:	40028000 	andmi	r8, r2, r0
 8010730:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8010734:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8010738:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 801073c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8010740:	017d783f 	cmneq	sp, pc, lsr r8
 8010744:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8010748:	01c9c37f 	biceq	ip, r9, pc, ror r3
 801074c:	faa2b580 	blx	68bdd54 <__stack_size+0x68bc554>
 8010750:	0112a880 	tsteq	r2, r0, lsl #17

08010754 <enet_init>:
 8010754:	2300      	movs	r3, #0
 8010756:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010758:	4604      	mov	r4, r0
 801075a:	460d      	mov	r5, r1
 801075c:	4616      	mov	r6, r2
 801075e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010762:	f7ff ff9d 	bl	80106a0 <enet_phy_config>
 8010766:	2800      	cmp	r0, #0
 8010768:	d037      	beq.n	80107da <enet_init+0x86>
 801076a:	4b3b      	ldr	r3, [pc, #236]	; (8010858 <enet_init+0x104>)
 801076c:	4a3b      	ldr	r2, [pc, #236]	; (801085c <enet_init+0x108>)
 801076e:	6819      	ldr	r1, [r3, #0]
 8010770:	2c01      	cmp	r4, #1
 8010772:	ea02 0201 	and.w	r2, r2, r1
 8010776:	601a      	str	r2, [r3, #0]
 8010778:	f04f 0200 	mov.w	r2, #0
 801077c:	605a      	str	r2, [r3, #4]
 801077e:	609a      	str	r2, [r3, #8]
 8010780:	60da      	str	r2, [r3, #12]
 8010782:	6999      	ldr	r1, [r3, #24]
 8010784:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8010788:	ea4f 4101 	mov.w	r1, r1, lsl #16
 801078c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8010790:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8010794:	6199      	str	r1, [r3, #24]
 8010796:	4932      	ldr	r1, [pc, #200]	; (8010860 <enet_init+0x10c>)
 8010798:	61da      	str	r2, [r3, #28]
 801079a:	6988      	ldr	r0, [r1, #24]
 801079c:	4b31      	ldr	r3, [pc, #196]	; (8010864 <enet_init+0x110>)
 801079e:	ea03 0300 	and.w	r3, r3, r0
 80107a2:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80107a6:	618b      	str	r3, [r1, #24]
 80107a8:	680b      	ldr	r3, [r1, #0]
 80107aa:	4b2f      	ldr	r3, [pc, #188]	; (8010868 <enet_init+0x114>)
 80107ac:	600b      	str	r3, [r1, #0]
 80107ae:	d01e      	beq.n	80107ee <enet_init+0x9a>
 80107b0:	08e3      	lsrs	r3, r4, #3
 80107b2:	0861      	lsrs	r1, r4, #1
 80107b4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80107b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80107bc:	430b      	orrs	r3, r1
 80107be:	f8ad 3006 	strh.w	r3, [sp, #6]
 80107c2:	2101      	movs	r1, #1
 80107c4:	2002      	movs	r0, #2
 80107c6:	f10d 0306 	add.w	r3, sp, #6
 80107ca:	f7ff ff3b 	bl	8010644 <enet_phy_write_read>
 80107ce:	b158      	cbz	r0, 80107e8 <enet_init+0x94>
 80107d0:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80107d4:	f7ff fe2d 	bl	8010432 <enet_delay>
 80107d8:	e05f      	b.n	801089a <enet_init+0x146>
 80107da:	4824      	ldr	r0, [pc, #144]	; (801086c <enet_init+0x118>)
 80107dc:	f7ff fe29 	bl	8010432 <enet_delay>
 80107e0:	f7ff ff5e 	bl	80106a0 <enet_phy_config>
 80107e4:	2800      	cmp	r0, #0
 80107e6:	d1c0      	bne.n	801076a <enet_init+0x16>
 80107e8:	2000      	movs	r0, #0
 80107ea:	b003      	add	sp, #12
 80107ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107ee:	4614      	mov	r4, r2
 80107f0:	4f1f      	ldr	r7, [pc, #124]	; (8010870 <enet_init+0x11c>)
 80107f2:	2201      	movs	r2, #1
 80107f4:	2000      	movs	r0, #0
 80107f6:	4611      	mov	r1, r2
 80107f8:	f10d 0306 	add.w	r3, sp, #6
 80107fc:	f7ff ff22 	bl	8010644 <enet_phy_write_read>
 8010800:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010804:	3401      	adds	r4, #1
 8010806:	f002 0204 	and.w	r2, r2, #4
 801080a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801080e:	b912      	cbnz	r2, 8010816 <enet_init+0xc2>
 8010810:	42bc      	cmp	r4, r7
 8010812:	d1ee      	bne.n	80107f2 <enet_init+0x9e>
 8010814:	e7e8      	b.n	80107e8 <enet_init+0x94>
 8010816:	42bc      	cmp	r4, r7
 8010818:	d0e6      	beq.n	80107e8 <enet_init+0x94>
 801081a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801081e:	2101      	movs	r1, #1
 8010820:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010824:	2002      	movs	r0, #2
 8010826:	2200      	movs	r2, #0
 8010828:	f7ff ff0c 	bl	8010644 <enet_phy_write_read>
 801082c:	2800      	cmp	r0, #0
 801082e:	d0db      	beq.n	80107e8 <enet_init+0x94>
 8010830:	2400      	movs	r4, #0
 8010832:	4f0f      	ldr	r7, [pc, #60]	; (8010870 <enet_init+0x11c>)
 8010834:	2201      	movs	r2, #1
 8010836:	2000      	movs	r0, #0
 8010838:	4611      	mov	r1, r2
 801083a:	f10d 0306 	add.w	r3, sp, #6
 801083e:	f7ff ff01 	bl	8010644 <enet_phy_write_read>
 8010842:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010846:	3401      	adds	r4, #1
 8010848:	f002 0220 	and.w	r2, r2, #32
 801084c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010850:	b982      	cbnz	r2, 8010874 <enet_init+0x120>
 8010852:	42bc      	cmp	r4, r7
 8010854:	d1ee      	bne.n	8010834 <enet_init+0xe0>
 8010856:	e7c7      	b.n	80107e8 <enet_init+0x94>
 8010858:	40028000 	andmi	r8, r2, r0
 801085c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8010860:	40029000 	andmi	r9, r2, r0
 8010864:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8010868:	02c16000 	sbceq	r6, r1, #0
 801086c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8010870:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010874:	42bc      	cmp	r4, r7
 8010876:	d0b7      	beq.n	80107e8 <enet_init+0x94>
 8010878:	2101      	movs	r1, #1
 801087a:	2210      	movs	r2, #16
 801087c:	2000      	movs	r0, #0
 801087e:	f7ff fee1 	bl	8010644 <enet_phy_write_read>
 8010882:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010886:	f013 0f04 	tst.w	r3, #4
 801088a:	bf14      	ite	ne
 801088c:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8010890:	2400      	moveq	r4, #0
 8010892:	0799      	lsls	r1, r3, #30
 8010894:	d401      	bmi.n	801089a <enet_init+0x146>
 8010896:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801089a:	4b64      	ldr	r3, [pc, #400]	; (8010a2c <enet_init+0x2d8>)
 801089c:	056a      	lsls	r2, r5, #21
 801089e:	6818      	ldr	r0, [r3, #0]
 80108a0:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 80108a4:	ea44 0400 	orr.w	r4, r4, r0
 80108a8:	601c      	str	r4, [r3, #0]
 80108aa:	d50c      	bpl.n	80108c6 <enet_init+0x172>
 80108ac:	681a      	ldr	r2, [r3, #0]
 80108ae:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80108b2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80108b6:	601a      	str	r2, [r3, #0]
 80108b8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80108bc:	6999      	ldr	r1, [r3, #24]
 80108be:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 80108c2:	430d      	orrs	r5, r1
 80108c4:	619d      	str	r5, [r3, #24]
 80108c6:	4959      	ldr	r1, [pc, #356]	; (8010a2c <enet_init+0x2d8>)
 80108c8:	4b59      	ldr	r3, [pc, #356]	; (8010a30 <enet_init+0x2dc>)
 80108ca:	684a      	ldr	r2, [r1, #4]
 80108cc:	4316      	orrs	r6, r2
 80108ce:	604e      	str	r6, [r1, #4]
 80108d0:	681a      	ldr	r2, [r3, #0]
 80108d2:	07d7      	lsls	r7, r2, #31
 80108d4:	d510      	bpl.n	80108f8 <enet_init+0x1a4>
 80108d6:	685a      	ldr	r2, [r3, #4]
 80108d8:	680c      	ldr	r4, [r1, #0]
 80108da:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80108de:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80108e2:	4320      	orrs	r0, r4
 80108e4:	6008      	str	r0, [r1, #0]
 80108e6:	4853      	ldr	r0, [pc, #332]	; (8010a34 <enet_init+0x2e0>)
 80108e8:	0892      	lsrs	r2, r2, #2
 80108ea:	6981      	ldr	r1, [r0, #24]
 80108ec:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80108f0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80108f4:	430a      	orrs	r2, r1
 80108f6:	6182      	str	r2, [r0, #24]
 80108f8:	681a      	ldr	r2, [r3, #0]
 80108fa:	0796      	lsls	r6, r2, #30
 80108fc:	d508      	bpl.n	8010910 <enet_init+0x1bc>
 80108fe:	494d      	ldr	r1, [pc, #308]	; (8010a34 <enet_init+0x2e0>)
 8010900:	6898      	ldr	r0, [r3, #8]
 8010902:	680a      	ldr	r2, [r1, #0]
 8010904:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8010908:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 801090c:	4302      	orrs	r2, r0
 801090e:	600a      	str	r2, [r1, #0]
 8010910:	681a      	ldr	r2, [r3, #0]
 8010912:	0755      	lsls	r5, r2, #29
 8010914:	d508      	bpl.n	8010928 <enet_init+0x1d4>
 8010916:	4947      	ldr	r1, [pc, #284]	; (8010a34 <enet_init+0x2e0>)
 8010918:	68d8      	ldr	r0, [r3, #12]
 801091a:	680a      	ldr	r2, [r1, #0]
 801091c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8010920:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8010924:	4302      	orrs	r2, r0
 8010926:	600a      	str	r2, [r1, #0]
 8010928:	681a      	ldr	r2, [r3, #0]
 801092a:	0714      	lsls	r4, r2, #28
 801092c:	d508      	bpl.n	8010940 <enet_init+0x1ec>
 801092e:	4941      	ldr	r1, [pc, #260]	; (8010a34 <enet_init+0x2e0>)
 8010930:	6918      	ldr	r0, [r3, #16]
 8010932:	680a      	ldr	r2, [r1, #0]
 8010934:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8010938:	f022 0202 	bic.w	r2, r2, #2
 801093c:	4302      	orrs	r2, r0
 801093e:	600a      	str	r2, [r1, #0]
 8010940:	681a      	ldr	r2, [r3, #0]
 8010942:	06d0      	lsls	r0, r2, #27
 8010944:	d506      	bpl.n	8010954 <enet_init+0x200>
 8010946:	493b      	ldr	r1, [pc, #236]	; (8010a34 <enet_init+0x2e0>)
 8010948:	4a3b      	ldr	r2, [pc, #236]	; (8010a38 <enet_init+0x2e4>)
 801094a:	6988      	ldr	r0, [r1, #24]
 801094c:	4002      	ands	r2, r0
 801094e:	6958      	ldr	r0, [r3, #20]
 8010950:	4302      	orrs	r2, r0
 8010952:	618a      	str	r2, [r1, #24]
 8010954:	681a      	ldr	r2, [r3, #0]
 8010956:	0691      	lsls	r1, r2, #26
 8010958:	d508      	bpl.n	801096c <enet_init+0x218>
 801095a:	4936      	ldr	r1, [pc, #216]	; (8010a34 <enet_init+0x2e0>)
 801095c:	6998      	ldr	r0, [r3, #24]
 801095e:	698a      	ldr	r2, [r1, #24]
 8010960:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8010964:	f022 0204 	bic.w	r2, r2, #4
 8010968:	4302      	orrs	r2, r0
 801096a:	618a      	str	r2, [r1, #24]
 801096c:	681a      	ldr	r2, [r3, #0]
 801096e:	0652      	lsls	r2, r2, #25
 8010970:	d506      	bpl.n	8010980 <enet_init+0x22c>
 8010972:	492e      	ldr	r1, [pc, #184]	; (8010a2c <enet_init+0x2d8>)
 8010974:	69d8      	ldr	r0, [r3, #28]
 8010976:	69ca      	ldr	r2, [r1, #28]
 8010978:	0c52      	lsrs	r2, r2, #17
 801097a:	0452      	lsls	r2, r2, #17
 801097c:	4302      	orrs	r2, r0
 801097e:	61ca      	str	r2, [r1, #28]
 8010980:	681a      	ldr	r2, [r3, #0]
 8010982:	0617      	lsls	r7, r2, #24
 8010984:	d517      	bpl.n	80109b6 <enet_init+0x262>
 8010986:	4c29      	ldr	r4, [pc, #164]	; (8010a2c <enet_init+0x2d8>)
 8010988:	6a1a      	ldr	r2, [r3, #32]
 801098a:	69a0      	ldr	r0, [r4, #24]
 801098c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8010990:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8010994:	0400      	lsls	r0, r0, #16
 8010996:	0c00      	lsrs	r0, r0, #16
 8010998:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 801099c:	4301      	orrs	r1, r0
 801099e:	4825      	ldr	r0, [pc, #148]	; (8010a34 <enet_init+0x2e0>)
 80109a0:	61a1      	str	r1, [r4, #24]
 80109a2:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80109a6:	0a12      	lsrs	r2, r2, #8
 80109a8:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80109ac:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80109b0:	430a      	orrs	r2, r1
 80109b2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80109b6:	681a      	ldr	r2, [r3, #0]
 80109b8:	05d6      	lsls	r6, r2, #23
 80109ba:	bf42      	ittt	mi
 80109bc:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80109be:	4a1b      	ldrmi	r2, [pc, #108]	; (8010a2c <enet_init+0x2d8>)
 80109c0:	6091      	strmi	r1, [r2, #8]
 80109c2:	681a      	ldr	r2, [r3, #0]
 80109c4:	0595      	lsls	r5, r2, #22
 80109c6:	bf42      	ittt	mi
 80109c8:	4a18      	ldrmi	r2, [pc, #96]	; (8010a2c <enet_init+0x2d8>)
 80109ca:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80109cc:	60d1      	strmi	r1, [r2, #12]
 80109ce:	681a      	ldr	r2, [r3, #0]
 80109d0:	0554      	lsls	r4, r2, #21
 80109d2:	d508      	bpl.n	80109e6 <enet_init+0x292>
 80109d4:	4915      	ldr	r1, [pc, #84]	; (8010a2c <enet_init+0x2d8>)
 80109d6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80109d8:	684a      	ldr	r2, [r1, #4]
 80109da:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80109de:	f022 0206 	bic.w	r2, r2, #6
 80109e2:	4302      	orrs	r2, r0
 80109e4:	604a      	str	r2, [r1, #4]
 80109e6:	681a      	ldr	r2, [r3, #0]
 80109e8:	0510      	lsls	r0, r2, #20
 80109ea:	d508      	bpl.n	80109fe <enet_init+0x2aa>
 80109ec:	490f      	ldr	r1, [pc, #60]	; (8010a2c <enet_init+0x2d8>)
 80109ee:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80109f0:	680a      	ldr	r2, [r1, #0]
 80109f2:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80109f6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80109fa:	4302      	orrs	r2, r0
 80109fc:	600a      	str	r2, [r1, #0]
 80109fe:	681a      	ldr	r2, [r3, #0]
 8010a00:	04d1      	lsls	r1, r2, #19
 8010a02:	d506      	bpl.n	8010a12 <enet_init+0x2be>
 8010a04:	4909      	ldr	r1, [pc, #36]	; (8010a2c <enet_init+0x2d8>)
 8010a06:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010a08:	680a      	ldr	r2, [r1, #0]
 8010a0a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8010a0e:	4302      	orrs	r2, r0
 8010a10:	600a      	str	r2, [r1, #0]
 8010a12:	681a      	ldr	r2, [r3, #0]
 8010a14:	0492      	lsls	r2, r2, #18
 8010a16:	d506      	bpl.n	8010a26 <enet_init+0x2d2>
 8010a18:	4904      	ldr	r1, [pc, #16]	; (8010a2c <enet_init+0x2d8>)
 8010a1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010a1c:	680a      	ldr	r2, [r1, #0]
 8010a1e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8010a22:	4313      	orrs	r3, r2
 8010a24:	600b      	str	r3, [r1, #0]
 8010a26:	2001      	movs	r0, #1
 8010a28:	e6df      	b.n	80107ea <enet_init+0x96>
 8010a2a:	bf00      	nop
 8010a2c:	40028000 	andmi	r8, r2, r0
 8010a30:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010a34:	40029000 	andmi	r9, r2, r0
 8010a38:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08010a3c <enet_txfifo_flush>:
 8010a3c:	4b06      	ldr	r3, [pc, #24]	; (8010a58 <enet_txfifo_flush+0x1c>)
 8010a3e:	4807      	ldr	r0, [pc, #28]	; (8010a5c <enet_txfifo_flush+0x20>)
 8010a40:	699a      	ldr	r2, [r3, #24]
 8010a42:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8010a46:	619a      	str	r2, [r3, #24]
 8010a48:	699a      	ldr	r2, [r3, #24]
 8010a4a:	02d2      	lsls	r2, r2, #11
 8010a4c:	d502      	bpl.n	8010a54 <enet_txfifo_flush+0x18>
 8010a4e:	3801      	subs	r0, #1
 8010a50:	d1fa      	bne.n	8010a48 <enet_txfifo_flush+0xc>
 8010a52:	4770      	bx	lr
 8010a54:	2001      	movs	r0, #1
 8010a56:	4770      	bx	lr
 8010a58:	40029000 	andmi	r9, r2, r0
 8010a5c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010a60 <enet_tx_enable>:
 8010a60:	4a06      	ldr	r2, [pc, #24]	; (8010a7c <enet_tx_enable+0x1c>)
 8010a62:	b508      	push	{r3, lr}
 8010a64:	6813      	ldr	r3, [r2, #0]
 8010a66:	f043 0308 	orr.w	r3, r3, #8
 8010a6a:	6013      	str	r3, [r2, #0]
 8010a6c:	f7ff ffe6 	bl	8010a3c <enet_txfifo_flush>
 8010a70:	4a03      	ldr	r2, [pc, #12]	; (8010a80 <enet_tx_enable+0x20>)
 8010a72:	6993      	ldr	r3, [r2, #24]
 8010a74:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010a78:	6193      	str	r3, [r2, #24]
 8010a7a:	bd08      	pop	{r3, pc}
 8010a7c:	40028000 	andmi	r8, r2, r0
 8010a80:	40029000 	andmi	r9, r2, r0

08010a84 <enet_enable>:
 8010a84:	b508      	push	{r3, lr}
 8010a86:	f7ff ffeb 	bl	8010a60 <enet_tx_enable>
 8010a8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010a8e:	f7ff bdcb 	b.w	8010628 <enet_rx_enable>

08010a92 <enet_desc_information_get>:
 8010a92:	2905      	cmp	r1, #5
 8010a94:	d817      	bhi.n	8010ac6 <enet_desc_information_get+0x34>
 8010a96:	e8df f001 	tbb	[pc, r1]
 8010a9a:	03091012 	movweq	r1, #36882	; 0x9012
 8010a9e:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8010aa2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010aa6:	4770      	bx	lr
 8010aa8:	88c0      	ldrh	r0, [r0, #6]
 8010aaa:	e7fa      	b.n	8010aa2 <enet_desc_information_get+0x10>
 8010aac:	8840      	ldrh	r0, [r0, #2]
 8010aae:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8010ab2:	2804      	cmp	r0, #4
 8010ab4:	d90a      	bls.n	8010acc <enet_desc_information_get+0x3a>
 8010ab6:	3804      	subs	r0, #4
 8010ab8:	4770      	bx	lr
 8010aba:	6880      	ldr	r0, [r0, #8]
 8010abc:	4770      	bx	lr
 8010abe:	6800      	ldr	r0, [r0, #0]
 8010ac0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8010ac4:	4770      	bx	lr
 8010ac6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010aca:	4770      	bx	lr
 8010acc:	2000      	movs	r0, #0
 8010ace:	4770      	bx	lr

08010ad0 <enet_rxframe_drop>:
 8010ad0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8010ad4:	4814      	ldr	r0, [pc, #80]	; (8010b28 <enet_rxframe_drop+0x58>)
 8010ad6:	b510      	push	{r4, lr}
 8010ad8:	6802      	ldr	r2, [r0, #0]
 8010ada:	4914      	ldr	r1, [pc, #80]	; (8010b2c <enet_rxframe_drop+0x5c>)
 8010adc:	6854      	ldr	r4, [r2, #4]
 8010ade:	6013      	str	r3, [r2, #0]
 8010ae0:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8010ae4:	680b      	ldr	r3, [r1, #0]
 8010ae6:	d009      	beq.n	8010afc <enet_rxframe_drop+0x2c>
 8010ae8:	b12b      	cbz	r3, 8010af6 <enet_rxframe_drop+0x26>
 8010aea:	68da      	ldr	r2, [r3, #12]
 8010aec:	6002      	str	r2, [r0, #0]
 8010aee:	681a      	ldr	r2, [r3, #0]
 8010af0:	b1ba      	cbz	r2, 8010b22 <enet_rxframe_drop+0x52>
 8010af2:	600a      	str	r2, [r1, #0]
 8010af4:	bd10      	pop	{r4, pc}
 8010af6:	68d3      	ldr	r3, [r2, #12]
 8010af8:	6003      	str	r3, [r0, #0]
 8010afa:	e7fb      	b.n	8010af4 <enet_rxframe_drop+0x24>
 8010afc:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8010b00:	4c0b      	ldr	r4, [pc, #44]	; (8010b30 <enet_rxframe_drop+0x60>)
 8010b02:	d006      	beq.n	8010b12 <enet_rxframe_drop+0x42>
 8010b04:	68e2      	ldr	r2, [r4, #12]
 8010b06:	6002      	str	r2, [r0, #0]
 8010b08:	2b00      	cmp	r3, #0
 8010b0a:	d0f3      	beq.n	8010af4 <enet_rxframe_drop+0x24>
 8010b0c:	681b      	ldr	r3, [r3, #0]
 8010b0e:	600b      	str	r3, [r1, #0]
 8010b10:	e7f0      	b.n	8010af4 <enet_rxframe_drop+0x24>
 8010b12:	6824      	ldr	r4, [r4, #0]
 8010b14:	3210      	adds	r2, #16
 8010b16:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8010b1a:	4422      	add	r2, r4
 8010b1c:	6002      	str	r2, [r0, #0]
 8010b1e:	2b00      	cmp	r3, #0
 8010b20:	d0e8      	beq.n	8010af4 <enet_rxframe_drop+0x24>
 8010b22:	3310      	adds	r3, #16
 8010b24:	e7f3      	b.n	8010b0e <enet_rxframe_drop+0x3e>
 8010b26:	bf00      	nop
 8010b28:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010b2c:	20009bc8 	andcs	r9, r0, r8, asr #23
 8010b30:	40029000 	andmi	r9, r2, r0

08010b34 <enet_rxframe_size_get>:
 8010b34:	b508      	push	{r3, lr}
 8010b36:	4b0c      	ldr	r3, [pc, #48]	; (8010b68 <enet_rxframe_size_get+0x34>)
 8010b38:	681b      	ldr	r3, [r3, #0]
 8010b3a:	6818      	ldr	r0, [r3, #0]
 8010b3c:	2800      	cmp	r0, #0
 8010b3e:	db10      	blt.n	8010b62 <enet_rxframe_size_get+0x2e>
 8010b40:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8010b44:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010b48:	d003      	beq.n	8010b52 <enet_rxframe_size_get+0x1e>
 8010b4a:	f7ff ffc1 	bl	8010ad0 <enet_rxframe_drop>
 8010b4e:	2001      	movs	r0, #1
 8010b50:	bd08      	pop	{r3, pc}
 8010b52:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8010b56:	2b21      	cmp	r3, #33	; 0x21
 8010b58:	d0f7      	beq.n	8010b4a <enet_rxframe_size_get+0x16>
 8010b5a:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8010b5e:	3804      	subs	r0, #4
 8010b60:	e7f6      	b.n	8010b50 <enet_rxframe_size_get+0x1c>
 8010b62:	2000      	movs	r0, #0
 8010b64:	e7f4      	b.n	8010b50 <enet_rxframe_size_get+0x1c>
 8010b66:	bf00      	nop
 8010b68:	20009bd0 	ldrdcs	r9, [r0], -r0

08010b6c <enet_initpara_reset>:
 8010b6c:	2200      	movs	r2, #0
 8010b6e:	4b08      	ldr	r3, [pc, #32]	; (8010b90 <enet_initpara_reset+0x24>)
 8010b70:	e9c3 2200 	strd	r2, r2, [r3]
 8010b74:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8010b78:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8010b7c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8010b80:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8010b84:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8010b88:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8010b8c:	639a      	str	r2, [r3, #56]	; 0x38
 8010b8e:	4770      	bx	lr
 8010b90:	20009bd8 	ldrdcs	r9, [r0], -r8

08010b94 <enet_deinit>:
 8010b94:	b508      	push	{r3, lr}
 8010b96:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010b9a:	f7fe fcf2 	bl	800f582 <rcu_periph_reset_enable>
 8010b9e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010ba2:	f7fe fcf0 	bl	800f586 <rcu_periph_reset_disable>
 8010ba6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010baa:	f7ff bfdf 	b.w	8010b6c <enet_initpara_reset>
	...

08010bb0 <i2c_clock_config>:
 8010bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010bb2:	4605      	mov	r5, r0
 8010bb4:	2002      	movs	r0, #2
 8010bb6:	460c      	mov	r4, r1
 8010bb8:	4617      	mov	r7, r2
 8010bba:	f7fe fd8b 	bl	800f6d4 <rcu_clock_freq_get>
 8010bbe:	4927      	ldr	r1, [pc, #156]	; (8010c5c <i2c_clock_config+0xac>)
 8010bc0:	4a27      	ldr	r2, [pc, #156]	; (8010c60 <i2c_clock_config+0xb0>)
 8010bc2:	fbb0 f1f1 	udiv	r1, r0, r1
 8010bc6:	4290      	cmp	r0, r2
 8010bc8:	bf34      	ite	cc
 8010bca:	460b      	movcc	r3, r1
 8010bcc:	2336      	movcs	r3, #54	; 0x36
 8010bce:	686e      	ldr	r6, [r5, #4]
 8010bd0:	4a24      	ldr	r2, [pc, #144]	; (8010c64 <i2c_clock_config+0xb4>)
 8010bd2:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8010bd6:	431e      	orrs	r6, r3
 8010bd8:	4294      	cmp	r4, r2
 8010bda:	606e      	str	r6, [r5, #4]
 8010bdc:	d816      	bhi.n	8010c0c <i2c_clock_config+0x5c>
 8010bde:	3101      	adds	r1, #1
 8010be0:	2935      	cmp	r1, #53	; 0x35
 8010be2:	d90d      	bls.n	8010c00 <i2c_clock_config+0x50>
 8010be4:	2336      	movs	r3, #54	; 0x36
 8010be6:	622b      	str	r3, [r5, #32]
 8010be8:	0064      	lsls	r4, r4, #1
 8010bea:	fbb0 f4f4 	udiv	r4, r0, r4
 8010bee:	2c04      	cmp	r4, #4
 8010bf0:	bf38      	it	cc
 8010bf2:	2404      	movcc	r4, #4
 8010bf4:	69e8      	ldr	r0, [r5, #28]
 8010bf6:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8010bfa:	4304      	orrs	r4, r0
 8010bfc:	61ec      	str	r4, [r5, #28]
 8010bfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c00:	2902      	cmp	r1, #2
 8010c02:	d801      	bhi.n	8010c08 <i2c_clock_config+0x58>
 8010c04:	2302      	movs	r3, #2
 8010c06:	e7ee      	b.n	8010be6 <i2c_clock_config+0x36>
 8010c08:	6229      	str	r1, [r5, #32]
 8010c0a:	e7ed      	b.n	8010be8 <i2c_clock_config+0x38>
 8010c0c:	4a16      	ldr	r2, [pc, #88]	; (8010c68 <i2c_clock_config+0xb8>)
 8010c0e:	4294      	cmp	r4, r2
 8010c10:	d8f5      	bhi.n	8010bfe <i2c_clock_config+0x4e>
 8010c12:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8010c16:	4353      	muls	r3, r2
 8010c18:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010c1c:	fbb3 f3f2 	udiv	r3, r3, r2
 8010c20:	3301      	adds	r3, #1
 8010c22:	622b      	str	r3, [r5, #32]
 8010c24:	b997      	cbnz	r7, 8010c4c <i2c_clock_config+0x9c>
 8010c26:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010c2a:	fbb0 f4f4 	udiv	r4, r0, r4
 8010c2e:	69eb      	ldr	r3, [r5, #28]
 8010c30:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010c34:	61eb      	str	r3, [r5, #28]
 8010c36:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8010c3a:	b90b      	cbnz	r3, 8010c40 <i2c_clock_config+0x90>
 8010c3c:	f044 0401 	orr.w	r4, r4, #1
 8010c40:	69eb      	ldr	r3, [r5, #28]
 8010c42:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010c46:	61eb      	str	r3, [r5, #28]
 8010c48:	69e8      	ldr	r0, [r5, #28]
 8010c4a:	e7d6      	b.n	8010bfa <i2c_clock_config+0x4a>
 8010c4c:	2119      	movs	r1, #25
 8010c4e:	434c      	muls	r4, r1
 8010c50:	69eb      	ldr	r3, [r5, #28]
 8010c52:	fbb0 f4f4 	udiv	r4, r0, r4
 8010c56:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8010c5a:	e7eb      	b.n	8010c34 <i2c_clock_config+0x84>
 8010c5c:	000f4240 	andeq	r4, pc, r0, asr #4
 8010c60:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8010c64:	000186a0 	andeq	r8, r1, r0, lsr #13
 8010c68:	00061a80 	andeq	r1, r6, r0, lsl #21

08010c6c <i2c_ack_config>:
 8010c6c:	6803      	ldr	r3, [r0, #0]
 8010c6e:	2901      	cmp	r1, #1
 8010c70:	bf0c      	ite	eq
 8010c72:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8010c76:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8010c7a:	6003      	str	r3, [r0, #0]
 8010c7c:	4770      	bx	lr

08010c7e <i2c_ackpos_config>:
 8010c7e:	6803      	ldr	r3, [r0, #0]
 8010c80:	b919      	cbnz	r1, 8010c8a <i2c_ackpos_config+0xc>
 8010c82:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010c86:	6003      	str	r3, [r0, #0]
 8010c88:	4770      	bx	lr
 8010c8a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010c8e:	e7fa      	b.n	8010c86 <i2c_ackpos_config+0x8>

08010c90 <i2c_master_addressing>:
 8010c90:	3202      	adds	r2, #2
 8010c92:	bf0c      	ite	eq
 8010c94:	f021 0101 	biceq.w	r1, r1, #1
 8010c98:	f041 0101 	orrne.w	r1, r1, #1
 8010c9c:	6101      	str	r1, [r0, #16]
 8010c9e:	4770      	bx	lr

08010ca0 <i2c_enable>:
 8010ca0:	6803      	ldr	r3, [r0, #0]
 8010ca2:	f043 0301 	orr.w	r3, r3, #1
 8010ca6:	6003      	str	r3, [r0, #0]
 8010ca8:	4770      	bx	lr

08010caa <i2c_start_on_bus>:
 8010caa:	6803      	ldr	r3, [r0, #0]
 8010cac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010cb0:	6003      	str	r3, [r0, #0]
 8010cb2:	4770      	bx	lr

08010cb4 <i2c_stop_on_bus>:
 8010cb4:	6803      	ldr	r3, [r0, #0]
 8010cb6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8010cba:	6003      	str	r3, [r0, #0]
 8010cbc:	4770      	bx	lr

08010cbe <i2c_data_transmit>:
 8010cbe:	6101      	str	r1, [r0, #16]
 8010cc0:	4770      	bx	lr

08010cc2 <i2c_data_receive>:
 8010cc2:	6900      	ldr	r0, [r0, #16]
 8010cc4:	b2c0      	uxtb	r0, r0
 8010cc6:	4770      	bx	lr

08010cc8 <i2c_flag_get>:
 8010cc8:	098b      	lsrs	r3, r1, #6
 8010cca:	5818      	ldr	r0, [r3, r0]
 8010ccc:	f001 011f 	and.w	r1, r1, #31
 8010cd0:	40c8      	lsrs	r0, r1
 8010cd2:	f000 0001 	and.w	r0, r0, #1
 8010cd6:	4770      	bx	lr

08010cd8 <i2c_flag_clear>:
 8010cd8:	f240 5301 	movw	r3, #1281	; 0x501
 8010cdc:	4299      	cmp	r1, r3
 8010cde:	b510      	push	{r4, lr}
 8010ce0:	d102      	bne.n	8010ce8 <i2c_flag_clear+0x10>
 8010ce2:	6943      	ldr	r3, [r0, #20]
 8010ce4:	6983      	ldr	r3, [r0, #24]
 8010ce6:	bd10      	pop	{r4, pc}
 8010ce8:	2201      	movs	r2, #1
 8010cea:	098c      	lsrs	r4, r1, #6
 8010cec:	5823      	ldr	r3, [r4, r0]
 8010cee:	f001 011f 	and.w	r1, r1, #31
 8010cf2:	fa02 f101 	lsl.w	r1, r2, r1
 8010cf6:	ea23 0101 	bic.w	r1, r3, r1
 8010cfa:	5021      	str	r1, [r4, r0]
 8010cfc:	e7f3      	b.n	8010ce6 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08010d00 <vtable for DisplayHandler-0xe0>:
	...
 8010d08:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010d0c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8010d10:	00000000 	andeq	r0, r0, r0
 8010d14:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010d18:	343a3531 	ldrtcc	r3, [sl], #-1329	; 0xfffffacf
 8010d1c:	39333a39 	ldmdbcc	r3!, {r0, r3, r4, r5, r9, fp, ip, sp}
 8010d20:	6e614a00 	vmulvs.f32	s9, s2, s0
 8010d24:	20343120 	eorscs	r3, r4, r0, lsr #2
 8010d28:	32323032 	eorscc	r3, r2, #50	; 0x32
 8010d2c:	43534f00 	cmpmi	r3, #0, 30
 8010d30:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010d34:	20726576 	rsbscs	r6, r2, r6, ror r5
 8010d38:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8010d3c:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8010d40:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8010d44:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8010b7c <enet_initpara_reset+0x10>
 8010d48:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8010d4c:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8010d50:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8010d54:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8010d58:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8010d5c:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8010d60:	63736f5f 	cmnvs	r3, #380	; 0x17c
 8010d64:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8010d68:	65733d65 	ldrbvs	r3, [r3, #-3429]!	; 0xfffff29b
 8010d6c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010d70:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8010d74:	00707474 	rsbseq	r7, r0, r4, ror r4
 8010d78:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8010d7c:	43534f3d 	cmpmi	r3, #61, 30	; 0xf4
 8010d80:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010d84:	00726576 	rsbseq	r6, r2, r6, ror r5
 8010d88:	2043534f 	subcs	r5, r3, pc, asr #6
 8010d8c:	20584d44 	subscs	r4, r8, r4, asr #26
 8010d90:	44470031 	strbmi	r0, [r7], #-49	; 0xffffffcf
 8010d94:	31463233 	cmpcc	r6, r3, lsr r2
 8010d98:	00523730 	subseq	r3, r2, r0, lsr r7
 8010d9c:	203a5049 	eorscs	r5, sl, r9, asr #32
 8010da0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8010da4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8010da8:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8010dac:	49006325 	stmdbmi	r0, {r0, r2, r5, r8, r9, sp, lr}
 8010db0:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
 8010db4:	754f0064 	strbvc	r0, [pc, #-100]	; 8010d58 <_etext+0x58>
 8010db8:	25203a74 	strcs	r3, [r0, #-2676]!	; 0xfffff58c
 8010dbc:	6d640064 	stclvs	0, cr0, [r4, #-400]!	; 0xfffffe70
 8010dc0:	62002178 	andvs	r2, r0, #120, 2
 8010dc4:	6b616572 	blvs	986a394 <__exidx_end+0x1857bc8>
 8010dc8:	616d0023 	cmnvs	sp, r3, lsr #32
 8010dcc:	72002362 	andvc	r2, r0, #-2013265919	; 0x88000001
 8010dd0:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
 8010dd4:	00236873 	eoreq	r6, r3, r3, ror r8
 8010dd8:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8010de0 <vtable for DisplayHandler>
 8010ddc:	00002373 	andeq	r2, r0, r3, ror r3

08010de0 <vtable for DisplayHandler>:
	...
 8010de8:	08007783 	stmdaeq	r0, {r0, r1, r7, r8, r9, sl, ip, sp, lr}
 8010dec:	080077a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, sl, ip, sp, lr}
 8010df0:	080077ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}

08010df4 <CSWTCH.84>:
 8010df4:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8010df8:	 	eorcc	r3, lr, r6, asr #2

08010df9 <SOFTWARE_VERSION>:
 8010df9:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8010dfd:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 8010e01:	642f0031 	strtvs	r0, [pc], #-49	; 8010e09 <SOFTWARE_VERSION+0x10>
 8010e05:	2f31786d 	svccs	0x0031786d
 8010e09:	322f002a 	eorcc	r0, pc, #42	; 0x2a
 8010e0d:	6d642f00 	stclvs	15, cr2, [r4, #-0]
 8010e11:	622f3178 	eorvs	r3, pc, #120, 2
 8010e15:	6b63616c 	blvs	98e93cd <__exidx_end+0x18d6c01>
 8010e19:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8010e1d:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8010e21:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
 8010e25:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 8010e29:	33444700 	movtcc	r4, #18176	; 0x4700
 8010e2d:	2f004632 	svccs	0x00004632
 8010e31:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8010e35:	6f702f00 	svcvs	0x00702f00
 8010e39:	2f00676e 	svccs	0x0000676e
 8010e3d:	6f666e69 	svcvs	0x00666e69
 8010e41:	00736f2f 	rsbseq	r6, r3, pc, lsr #30
 8010e45:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8010e49:	6f6d2f6f 	svcvs	0x006d2f6f
 8010e4d:	006c6564 	rsbeq	r6, ip, r4, ror #10
 8010e51:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8010e55:	6f732f6f 	svcvs	0x00732f6f
 8010e59:	65590063 	ldrbvs	r0, [r9, #-99]	; 0xffffff9d
 8010e5d:	6f4e0073 	svcvs	0x004e0073
 8010e61:	43534f00 	cmpmi	r3, #0, 30
 8010e65:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010e69:	0a726576 	beq	9caa449 <__exidx_end+0x1c97c7d>
 8010e6d:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 8010e71:	696d6f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8010e75:	5020676e 	eorpl	r6, r0, lr, ror #14
 8010e79:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8010e7d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8010e81:	3a202020 	bcc	8818f09 <__exidx_end+0x80673d>
 8010e85:	0a642520 	beq	991a30d <__exidx_end+0x1907b41>
 8010e89:	754f2000 	strbvc	r2, [pc, #-0]	; 8010e91 <SOFTWARE_VERSION+0x98>
 8010e8d:	696f6774 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
 8010e91:	5020676e 	eorpl	r6, r0, lr, ror #14
 8010e95:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8010e99:	20202020 	eorcs	r2, r0, r0, lsr #32
 8010e9d:	3a202020 	bcc	8818f25 <__exidx_end+0x806759>
 8010ea1:	0a642520 	beq	991a329 <__exidx_end+0x1907b5d>
 8010ea5:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8010ea9:	61502058 	cmpvs	r0, r8, asr r0
 8010ead:	20206874 	eorcs	r6, r0, r4, ror r8
 8010eb1:	20202020 	eorcs	r2, r0, r0, lsr #32
 8010eb5:	20202020 	eorcs	r2, r0, r0, lsr #32
 8010eb9:	3a202020 	bcc	8818f41 <__exidx_end+0x806775>
 8010ebd:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8010ec1:	73255b5d 			; <UNDEFINED> instruction: 0x73255b5d
 8010ec5:	20000a5d 	andcs	r0, r0, sp, asr sl
 8010ec9:	616c4220 	cmnvs	ip, r0, lsr #4
 8010ecd:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8010372 <adc_inserted_channel_config+0x10>
 8010ed1:	61502074 	cmpvs	r0, r4, ror r0
 8010ed5:	20206874 	eorcs	r6, r0, r4, ror r8
 8010ed9:	20202020 	eorcs	r2, r0, r0, lsr #32
 8010edd:	5b203a20 	blpl	881f765 <__exidx_end+0x80cf99>
 8010ee1:	0a5d7325 	beq	976db7d <__exidx_end+0x175b3b1>
 8010ee5:	61502000 	cmpvs	r0, r0
 8010ee9:	61697472 	smcvs	38722	; 0x9742
 8010eed:	7254206c 	subsvc	r2, r4, #108	; 0x6c
 8010ef1:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8010ef5:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8010ef9:	3a206e6f 	bcc	882c8bd <__exidx_end+0x81a0f1>
 8010efd:	0a732520 	beq	9cda385 <__exidx_end+0x1cc7bb9>
	...

08010f02 <OscServerMsgConst::START>:
 8010f02:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8010f06:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8010f0a:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 8010f0e:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 8010f12:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010f16:	00726576 	rsbseq	r6, r2, r6, ror r5

08010f1a <OscServerMsgConst::PARAMS>:
 8010f1a:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8010f1e:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8010f22:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8010f26:	2043534f 	subcs	r5, r3, pc, asr #6
 8010f2a:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8010f2e:	 	svcmi	0x00007265

08010f31 <OscServerMsgConst::STARTED>:
 8010f31:	2043534f 	subcs	r5, r3, pc, asr #6
 8010f35:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8010f39:	73207265 			; <UNDEFINED> instruction: 0x73207265
 8010f3d:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8010f41:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8010f45:	3a227325 	bcc	88adbe1 <__exidx_end+0x89b415>
 8010f49:	002c6425 	eoreq	r6, ip, r5, lsr #8
 8010f4d:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8010f51:	000a6425 	andeq	r6, sl, r5, lsr #8
 8010f55:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8010f59:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 8010f5d:	23002c22 	movwcs	r2, #3106	; 0xc22
 8010f61:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8010f65:	 	andvc	r0, r0, r3, ror sl

08010f68 <OscServerParamsConst::TRANSMISSION>:
 8010f68:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8010f6c:	5f6c6169 	svcpl	0x006c6169
 8010f70:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 8010f74:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 8010f78:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

08010f7d <OscServerParamsConst::PATH_BLACKOUT>:
 8010f7d:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8010f81:	616c625f 	cmnvs	ip, pc, asr r2
 8010f85:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 801042a <adc_software_trigger_enable+0x12>
 8010f89:	 	cmnvs	r0, r4, ror r0

08010f8b <OscServerParamsConst::PATH>:
 8010f8b:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

08010f90 <OscServerParamsConst::FILE_NAME>:
 8010f90:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 8010f94:	00747874 	rsbseq	r7, r4, r4, ror r8

08010f98 <OscServerParamsConst::PATH_INFO>:
 8010f98:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 8010f9c:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 8010fa0:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

08010fa2 <OscParamsConst::INCOMING_PORT>:
 8010fa2:	6f636e69 	svcvs	0x00636e69
 8010fa6:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 8010faa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8010fae:	 	strbvc	r0, [pc, #-116]!	; 8010f42 <OscServerMsgConst::STARTED+0x11>

08010fb0 <OscParamsConst::OUTGOING_PORT>:
 8010fb0:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8010fb4:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8010fb8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8010fbc:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 8010fc0:	65532058 	ldrbvs	r2, [r3, #-88]	; 0xffffffa8
 8010fc4:	000a646e 	andeq	r6, sl, lr, ror #8
 8010fc8:	65724220 	ldrbvs	r4, [r2, #-544]!	; 0xfffffde0
 8010fcc:	74206b61 	strtvc	r6, [r0], #-2913	; 0xfffff49f
 8010fd0:	20656d69 	rsbcs	r6, r5, r9, ror #26
 8010fd4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8010fd8:	000a6425 	andeq	r6, sl, r5, lsr #8
 8010fdc:	42414d20 	submi	r4, r1, #32, 26	; 0x800
 8010fe0:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8010fe4:	20202065 	eorcs	r2, r0, r5, rrx
 8010fe8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8010fec:	000a6425 	andeq	r6, sl, r5, lsr #8
 8010ff0:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 8010ff4:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8010ff8:	74617220 	strbtvc	r7, [r1], #-544	; 0xfffffde0
 8010ffc:	203a2065 	eorscs	r2, sl, r5, rrx
 8011000:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011004:	6f6c5320 	svcvs	0x006c5320
 8011008:	20207374 	eorcs	r7, r0, r4, ror r3
 801100c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011010:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011014:	000a6425 	andeq	r6, sl, r5, lsr #8

08011018 <vtable for DmxSend>:
	...
 8011020:	08008f03 	stmdaeq	r0, {r0, r1, r8, r9, sl, fp, pc}
 8011024:	08008fd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, fp, pc}
 8011028:	08008f05 	stmdaeq	r0, {r0, r2, r8, r9, sl, fp, pc}
 801102c:	08008f35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, fp, pc}
 8011030:	08008f69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, pc}
 8011034:	08008f01 	stmdaeq	r0, {r0, r8, r9, sl, fp, pc}
 8011038:	08008f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, pc}
 801103c:	0800e42b 	stmdaeq	r0, {r0, r1, r3, r5, sl, sp, lr, pc}
 8011040:	0800e421 	stmdaeq	r0, {r0, r5, sl, sp, lr, pc}
 8011044:	0800e425 	stmdaeq	r0, {r0, r2, r5, sl, sp, lr, pc}
 8011048:	0800e42f 	stmdaeq	r0, {r0, r1, r2, r3, r5, sl, sp, lr, pc}

0801104c <DmxParamsConst::BREAK_TIME>:
 801104c:	61657262 	cmnvs	r5, r2, ror #4
 8011050:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011054:	 	movwvc	r6, #1389	; 0x56d

08011057 <DmxParamsConst::SLOTS_COUNT>:
 8011057:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801105f <DmxParamsConst::SLOTS_COUNT+0x8>
 801105b:	6f635f73 	svcvs	0x00635f73
 801105f:	00746e75 	rsbseq	r6, r4, r5, ror lr

08011063 <DmxParamsConst::REFRESH_RATE>:
 8011063:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8011067:	5f687365 	svcpl	0x00687365
 801106b:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08011070 <DmxParamsConst::MAB_TIME>:
 8011070:	5f62616d 	svcpl	0x0062616d
 8011074:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08011079 <DmxParamsConst::FILE_NAME>:
 8011079:	61726170 	cmnvs	r2, r0, ror r1
 801107d:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8011081:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 8011085:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011089:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801108d:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8011091:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 8011095:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 8011099:	000a7325 	andeq	r7, sl, r5, lsr #6
 801109d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80110a1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80110a5:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80110a9:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80110ad:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80110b1:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 80110b5:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 80110b9:	73696400 	cmnvc	r9, #0, 8
 80110bd:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80110c1:	0a73253a 	beq	9cda5b1 <__exidx_end+0x1cc7de5>
 80110c5:	72657600 	rsbvc	r7, r5, #0, 12
 80110c9:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80110cd:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 80110d1:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 80110d5:	203a656d 	eorscs	r6, sl, sp, ror #10
 80110d9:	0a737525 	beq	9cee575 <__exidx_end+0x1cdbda9>
 80110dd:	52524500 	subspl	r4, r2, #0, 10
 80110e1:	3f23524f 	svccc	0x0023524f
 80110e5:	0a746567 	beq	9d2a689 <__exidx_end+0x1d17ebd>
 80110e9:	73696400 	cmnvc	r9, #0, 8
 80110ed:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80110f1:	52450023 	subpl	r0, r5, #35	; 0x23
 80110f5:	23524f52 	cmpcs	r2, #328	; 0x148
 80110f9:	45000a3f 	strmi	r0, [r0, #-2623]	; 0xfffff5c1
 80110fd:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8011101:	000a2123 	andeq	r2, sl, r3, lsr #2
 8011105:	6f626572 	svcvs	0x00626572
 8011109:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 801110d:	73696c00 	cmnvc	r9, #0, 24
 8011111:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8011115:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8011119:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 801111d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011121:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8011125:	6f697372 	svcvs	0x00697372
 8011129:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 801112d:	00237465 	eoreq	r7, r3, r5, ror #8
 8011131:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8011135:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8011139:	 	subvc	r0, r1, #35	; 0x23

0801113b <s_Node>:
 801113b:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801113f:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801114b:	41730000 	cmnmi	r3, r0
 801114f:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011153:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801115f:	2043534f 	subcs	r5, r3, pc, asr #6
 8011163:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011167:	00007265 	andeq	r7, r0, r5, ror #4
 801116b:	00000000 	andeq	r0, r0, r0
 801116f:	544c0000 	strbpl	r0, [ip], #-0
 8011173:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8011183:	2043534f 	subcs	r5, r3, pc, asr #6
 8011187:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 801118b:	0000746e 	andeq	r7, r0, lr, ror #8
 801118f:	00000000 	andeq	r0, r0, r0
 8011193:	44520000 	ldrbmi	r0, [r2], #-0
 8011197:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 801119b:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801119f:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80111a3:	0000796c 	andeq	r7, r0, ip, ror #18
 80111a7:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80111ab:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80111b7:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80111bb:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80111cb:	00504444 	subseq	r4, r0, r4, asr #8
	...

080111dd <s_Output>:
 80111dd:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80111e9:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80111f5:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80111f9:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80111fd:	00000000 	andeq	r0, r0, r0
 8011201:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8011205:	0000006c 	andeq	r0, r0, ip, rrx
 8011209:	00000000 	andeq	r0, r0, r0
 801120d:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8011211:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8011215:	00000000 	andeq	r0, r0, r0
 8011219:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8011225:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011229:	00006769 	andeq	r6, r0, r9, ror #14
 801122d:	00000000 	andeq	r0, r0, r0
 8011231:	70657453 	rsbvc	r7, r5, r3, asr r4
 8011235:	00726570 	rsbseq	r6, r2, r0, ror r5
 8011239:	00000000 	andeq	r0, r0, r0
 801123d:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8011241:	00007265 	andeq	r7, r0, r5, ror #4
 8011245:	00000000 	andeq	r0, r0, r0
 8011249:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801124d:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8011251:	00000000 	andeq	r0, r0, r0
 8011255:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8011259:	00006c61 	andeq	r6, r0, r1, ror #24
 801125d:	00000000 	andeq	r0, r0, r0
 8011261:	20424752 	subcs	r4, r2, r2, asr r7
 8011265:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8011269:	0000006c 	andeq	r0, r0, ip, rrx
 801126d:	 	strvs	r0, [r0, #-0]

08011270 <RemoteConfig::s_GET>:
 8011270:	0800a565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, sp, pc}
 8011274:	00000000 	andeq	r0, r0, r0
 8011278:	08011105 	stmdaeq	r1, {r0, r2, r8, ip}
 801127c:	00000008 	andeq	r0, r0, r8
 8011280:	08009b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp, ip, pc}
 8011284:	00000000 	andeq	r0, r0, r0
 8011288:	0801110e 	stmdaeq	r1, {r1, r2, r3, r8, ip}
 801128c:	00000005 	andeq	r0, r0, r5
 8011290:	08009b0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp, ip, pc}
 8011294:	00000000 	andeq	r0, r0, r0
 8011298:	08011114 	stmdaeq	r1, {r2, r4, r8, ip}
 801129c:	00000006 	andeq	r0, r0, r6
 80112a0:	08009c81 	stmdaeq	r0, {r0, r7, sl, fp, ip, pc}
 80112a4:	00000000 	andeq	r0, r0, r0
 80112a8:	0801111b 	stmdaeq	r1, {r0, r1, r3, r4, r8, ip}
 80112ac:	00000007 	andeq	r0, r0, r7
 80112b0:	08009c41 	stmdaeq	r0, {r0, r6, sl, fp, ip, pc}
 80112b4:	00000000 	andeq	r0, r0, r0
 80112b8:	08011123 	stmdaeq	r1, {r0, r1, r5, r8, ip}
 80112bc:	00000008 	andeq	r0, r0, r8
 80112c0:	08009bed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, fp, ip, pc}
 80112c4:	00000000 	andeq	r0, r0, r0
 80112c8:	080110ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip}
 80112cc:	00000008 	andeq	r0, r0, r8
 80112d0:	08009ed5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp, ip, pc}
 80112d4:	00000000 	andeq	r0, r0, r0
 80112d8:	0801112c 	stmdaeq	r1, {r2, r3, r5, r8, ip}
 80112dc:	00010004 	andeq	r0, r1, r4
 80112e0:	0800a1dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sp, pc}
 80112e4:	00000000 	andeq	r0, r0, r0
 80112e8:	08011131 	stmdaeq	r1, {r0, r4, r5, r8, ip}
 80112ec:	00000009 	andeq	r0, r0, r9
 80112f0:	6f626552 	svcvs	0x00626552
 80112f4:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80112f8:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80112fc:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8011300:	6f6f6265 	svcvs	0x006f6265
 8011304:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011308:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 801130c:	6f637200 	svcvs	0x00637200
 8011310:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8011314:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011318:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 801131c:	6b726f77 	blvs	9cad100 <__exidx_end+0x1c9a934>
 8011320:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011324:	63736f00 	cmnvs	r3, #0, 30
 8011328:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801132c:	72617000 	rsbvc	r7, r1, #0
 8011330:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8011334:	00747874 	rsbseq	r7, r4, r4, ror r8

08011338 <RemoteConfig::s_TXT>:
 8011338:	08009edd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, pc}
 801133c:	00000000 	andeq	r0, r0, r0
 8011340:	0800a135 	stmdaeq	r0, {r0, r2, r4, r5, r8, sp, pc}
 8011344:	00000000 	andeq	r0, r0, r0
 8011348:	0801130d 	stmdaeq	r1, {r0, r2, r3, r8, r9, ip}
 801134c:	0000000b 	andeq	r0, r0, fp
 8011350:	0000000c 	andeq	r0, r0, ip
 8011354:	08009f09 	stmdaeq	r0, {r0, r3, r8, r9, sl, fp, ip, pc}
 8011358:	00000000 	andeq	r0, r0, r0
 801135c:	0800a165 	stmdaeq	r0, {r0, r2, r5, r6, r8, sp, pc}
 8011360:	00000000 	andeq	r0, r0, r0
 8011364:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 8011368:	0000000b 	andeq	r0, r0, fp
 801136c:	00000000 	andeq	r0, r0, r0
 8011370:	08009f35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, fp, ip, pc}
 8011374:	00000000 	andeq	r0, r0, r0
 8011378:	0800a18d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sp, pc}
 801137c:	00000000 	andeq	r0, r0, r0
 8011380:	08011325 	stmdaeq	r1, {r0, r2, r5, r8, r9, ip}
 8011384:	00000007 	andeq	r0, r0, r7
 8011388:	00000008 	andeq	r0, r0, r8
 801138c:	08009f61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, pc}
 8011390:	00000000 	andeq	r0, r0, r0
 8011394:	0800a1b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sp, pc}
 8011398:	00000000 	andeq	r0, r0, r0
 801139c:	0801132d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, ip}
 80113a0:	0000000a 	andeq	r0, r0, sl
 80113a4:	00000002 	andeq	r0, r0, r2
 80113a8:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 80113ac:	4f500054 	svcmi	0x00500054
 80113b0:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 80113b4:	00505454 	subseq	r5, r0, r4, asr r4
 80113b8:	31000a20 	tstcc	r0, r0, lsr #20
 80113bc:	3a00312e 	bcc	801d87c <__exidx_end+0xb0b0>
 80113c0:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 80113c4:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 80113c8:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 80113cc:	3b200065 	blcc	8811568 <__exidx_end+0x7fed9c>
 80113d0:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 80113d4:	6163696c 	cmnvs	r3, ip, ror #18
 80113d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80113dc:	6f736a2f 	svcvs	0x00736a2f
 80113e0:	6f43006e 	svcvs	0x0043006e
 80113e4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80113e8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80113ec:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80113f0:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80113f4:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80113f8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80113fc:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8011400:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8011404:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8011408:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801140c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8011410:	2f00736a 	svccs	0x0000736a
 8011414:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011418:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 801141c:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8011420:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011424:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8011428:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801142c:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8011430:	616c7073 	smcvs	50947	; 0xc703
 8011434:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8011438:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801143c:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8011440:	6f736a2f 	svcvs	0x00736a2f
 8011444:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8011448:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801144c:	62657200 	rsbvs	r7, r5, #0, 4
 8011450:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8011454:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8011458:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 801145c:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8011460:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8011464:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8011468:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801146c:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8011470:	0a3e6c6d 	beq	8fac62c <__exidx_end+0xf99e60>
 8011474:	6165683c 	cmnvs	r5, ip, lsr r8
 8011478:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 801147c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8011480:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8011484:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8011488:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801148c:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011490:	6165682f 	cmnvs	r5, pc, lsr #16
 8011494:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8011498:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801149c:	31683c3e 	cmncc	r8, lr, lsr ip
 80114a0:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 80114a4:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 80114a8:	6f622f3c 	svcvs	0x00622f3c
 80114ac:	0a3e7964 	beq	8fafa44 <__exidx_end+0xf9d278>
 80114b0:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 80114b4:	0a3e6c6d 	beq	8fac670 <__exidx_end+0xf99ea4>
 80114b8:	71655200 	cmnvc	r5, r0, lsl #4
 80114bc:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80114c0:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80114c4:	20797469 	rsbscs	r7, r9, r9, ror #8
 80114c8:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80114cc:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80114d0:	6f4e0065 	svcvs	0x004e0065
 80114d4:	6f462074 	svcvs	0x00462074
 80114d8:	00646e75 	rsbeq	r6, r4, r5, ror lr
 80114dc:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 80114e0:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 80114e4:	20495255 	subcs	r5, r9, r5, asr r2
 80114e8:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80114ec:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80114f0:	72655600 	rsbvc	r5, r5, #0, 12
 80114f4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80114f8:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8011500 <RemoteConfig::s_TXT+0x1c8>
 80114fc:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8011500:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8011504:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8011508:	6f687465 	svcvs	0x00687465
 801150c:	6f4e2064 	svcvs	0x004e2064
 8011510:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8011514:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8011518:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801151c:	61420064 	cmpvs	r2, r4, rrx
 8011520:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8011524:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8011528:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 801152c:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8011530:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8011534:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8011538:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 801153c:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8011540:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8011544:	20726576 	rsbscs	r6, r2, r6, ror r5
 8011548:	6f727245 	svcvs	0x00727245
 801154c:	4b4f0072 	blmi	93d171c <__exidx_end+0x13bef50>
 8011550:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8011554:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8011558:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 801155c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8011560:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8011564:	0a3e6c6d 	beq	8fac720 <__exidx_end+0xf99f54>
 8011568:	6165683c 	cmnvs	r5, ip, lsr r8
 801156c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8011570:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8011574:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8011578:	2f3c7325 	svccs	0x003c7325
 801157c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8011580:	2f3c3e65 	svccs	0x003c3e65
 8011584:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011588:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 801158c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011590:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8011594:	2f3c7325 	svccs	0x003c7325
 8011598:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 801159c:	646f622f 	strbtvs	r6, [pc], #-559	; 80115a4 <RemoteConfig::s_TXT+0x26c>
 80115a0:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 80115a4:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80115a8:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80115ac:	50545448 	subspl	r5, r4, r8, asr #8
 80115b0:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 80115b4:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80115b8:	0a0d7325 	beq	836e254 <__exidx_end+0x35ba88>
 80115bc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80115c0:	203a7265 	eorscs	r7, sl, r5, ror #4
 80115c4:	0a0d7325 	beq	836e260 <__exidx_end+0x35ba94>
 80115c8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80115cc:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80115d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80115d4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80115d8:	6f430a0d 	svcvs	0x00430a0d
 80115dc:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80115e0:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80115e4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80115e8:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80115ec:	6f430a0d 	svcvs	0x00430a0d
 80115f0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80115f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80115f8:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 80115fc:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8011600:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08011604 <contentType>:
 8011604:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8011608:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801160c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8011624:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8011628:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8011644:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8011648:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801164c:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8011650:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8011664:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8011668:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801166c:	2f6e6f69 	svccs	0x006e6f69
 8011670:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08011684 <RemoteConfigConst::PARAMS_DISABLE>:
 8011684:	61736964 	cmnvs	r3, r4, ror #18
 8011688:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801168c <RemoteConfigConst::PARAMS_FILE_NAME>:
 801168c:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011690:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8011694:	00747874 	rsbseq	r7, r4, r4, ror r8

08011698 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8011698:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801169c:	5f79616c 	svcpl	0x0079616c
 80116a0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080116a5 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80116a5:	61736964 	cmnvs	r3, r4, ror #18
 80116a9:	5f656c62 	svcpl	0x00656c62
 80116ad:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80116b1:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080116b3 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80116b3:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80116b7:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80116bb:	6f6f6265 	svcvs	0x006f6265
 80116bf:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080116c1 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80116c1:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80116c5:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8011161 <s_Node+0x26>
 80116c9:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80116cd:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080116cf <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80116cf:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80116d3:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80116d7:	6f746361 	svcvs	0x00746361
 80116db:	7b007972 	blvc	802fcab <__exidx_end+0x1d4df>
 80116df:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80116e3:	7b3a2274 	blvc	8e9a0bb <__exidx_end+0xe878ef>
 80116e7:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80116eb:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80116ef:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80116f3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80116f7:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80116fb:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80116ff:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011703:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8011707:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801170b:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801170f:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011713:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011717:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801171b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801171f:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8011723:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011727:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801172b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801172f:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8011733:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8011737:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801173b:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801173f:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011743:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8011747:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801174b:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801174f:	616f6222 	cmnvs	pc, r2, lsr #4
 8011753:	3a226472 	bcc	88aa923 <__exidx_end+0x898157>
 8011757:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801175b:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 801175f:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8011763:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8011767:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801176b:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801176f:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8011773:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8011777:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801177b:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801177f:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8011783:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8011787:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801178b:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 801178f:	7b000a7d 	blvc	801418b <__exidx_end+0x19bf>
 8011793:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8011797:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801179b:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 801179f:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80117a3:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80117a7:	7b3a2273 	blvc	8e9a17b <__exidx_end+0xe879af>
 80117ab:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 80117af:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80117b3:	4f223a22 	svcmi	0x00223a22
 80117b7:	53204353 			; <UNDEFINED> instruction: 0x53204353
 80117bb:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 80117bf:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 80117c3:	61726170 	cmnvs	r2, r0, ror r1
 80117c7:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80117cb:	3a227478 	bcc	88ae9b3 <__exidx_end+0x89c1e7>
 80117cf:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 80117d3:	61725420 	cmnvs	r2, r0, lsr #8
 80117d7:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 80117db:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 80117df:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80117e3:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80117e7:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80117eb:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
 80117ef:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80117f3:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
 80117f7:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80117fb:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80117ff:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011803:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
 8011807:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
 801180b:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801180f:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8011813:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8011817:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
 801181b:	 	teqcs	ip, sp, ror r0

0801181d <index_html>:
 801181d:	4f44213c 	svcmi	0x0044213c
 8011821:	50595443 	subspl	r5, r9, r3, asr #8
 8011825:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8011829:	0a3e6c6d 	beq	8fac9e5 <__exidx_end+0xf9a219>
 801182d:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8011831:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011835:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011839:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801183d:	6b6e696c 	blvs	9babdf5 <__exidx_end+0x1b99629>
 8011841:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8011845:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8011849:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801184d:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8011851:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8011855:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8011859:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801185d:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8011861:	20227373 	eorcs	r7, r2, r3, ror r3
 8011865:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8011869:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801186d:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011871:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8011875:	0a3e656c 	beq	8faae2d <__exidx_end+0xf98661>
 8011879:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801187d:	0a3e6461 	beq	8faaa09 <__exidx_end+0xf9823d>
 8011881:	646f623c 	strbtvs	r6, [pc], #-572	; 8011889 <index_html+0x6c>
 8011885:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8011889:	6165683c 	cmnvs	r5, ip, lsr r8
 801188d:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8011891:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8011895:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8011899:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801189d:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80118a1:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80118a5:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80118a9:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80118ad:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80118b1:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80118b5:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80118b9:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80118bd:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80118c1:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80118c5:	6f746365 	svcvs	0x00746365
 80118c9:	20227972 	eorcs	r7, r2, r2, ror r9
 80118cd:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80118d1:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80118d5:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80118d9:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80118dd:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80118e1:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80118e5:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80118e9:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80118ed:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80118f1:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80118f5:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80118f9:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80118fd:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8011901:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011905:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8011909:	20227478 	eorcs	r7, r2, r8, ror r4
 801190d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011911:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8011915:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8011919:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801191d:	0a3e656c 	beq	8faaed5 <__exidx_end+0xf98709>
 8011921:	6f663c09 	svcvs	0x00663c09
 8011925:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8011929:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801192d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011931:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8011935:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011939:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801193d:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011941:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8011945:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011949:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801194d:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8011951:	20747069 	rsbscs	r7, r4, r9, rrx
 8011955:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8011959:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801195d:	6a2e7865 	bvs	8bafaf9 <__exidx_end+0xb9d32d>
 8011961:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8011965:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8011969:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801196d:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8011971:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011975:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011979:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801197d:	 	svcvs	0x0062000a

0801197f <styles_css>:
 801197f:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011983:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011987:	63616220 	cmnvs	r1, #32, 4
 801198b:	6f72676b 	svcvs	0x0072676b
 801198f:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8011993:	6f6c6f63 	svcvs	0x006c6f63
 8011997:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801199b:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801199f:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80119a3:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80119a7:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80119ab:	6f6c6f63 	svcvs	0x006c6f63
 80119af:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80119b3:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80119b7:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80119bb:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80119bf:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80119c3:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80119c7:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80119cb:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80119cf:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80119d3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80119d7:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80119db:	0a3b7865 	beq	8eefb77 <__exidx_end+0xedd3ab>
 80119df:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80119e3:	0a7b2069 	beq	9ed9b8f <__exidx_end+0x1ec73c3>
 80119e7:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80119eb:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80119ef:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80119f3:	6f6e203a 	svcvs	0x006e203a
 80119f7:	0a3b656e 	beq	8eeafb7 <__exidx_end+0xed87eb>
 80119fb:	616d2020 	cmnvs	sp, r0, lsr #32
 80119ff:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8011a03:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8011a07:	70352078 	eorsvc	r2, r5, r8, ror r0
 8011a0b:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8011a0f:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8011a13:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8011a17:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011a1b:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011a1f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011a23:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011a27:	0a3b7865 	beq	8eefbc3 <__exidx_end+0xedd3f7>
 8011a2b:	6f622020 	svcvs	0x00622020
 8011a2f:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011a33:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011a37:	3a737569 	bcc	9ceefe3 <__exidx_end+0x1cdc817>
 8011a3b:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011a3f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011a43:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011a47:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011a4b:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011a4f:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011a53:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011a57:	0a3b7870 	beq	8eefc1f <__exidx_end+0xedd453>
 8011a5b:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8011a5f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011a63:	0a7b2072 	beq	9ed9c33 <__exidx_end+0x1ec7467>
 8011a67:	69642020 	stmdbvs	r4!, {r5, sp}^
 8011a6b:	616c7073 	smcvs	50947	; 0xc703
 8011a6f:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8011a73:	3b78656c 	blcc	9e2b02b <__exidx_end+0x1e1885f>
 8011a77:	6a20200a 	bvs	8819aa7 <__exidx_end+0x8072db>
 8011a7b:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8011a7f:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8011a83:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011a87:	203a746e 	eorscs	r7, sl, lr, ror #8
 8011a8b:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8011a8f:	0a3b7265 	beq	8eee42b <__exidx_end+0xedbc5f>
 8011a93:	6f622020 	svcvs	0x00622020
 8011a97:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011a9b:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011a9f:	3a737569 	bcc	9cef04b <__exidx_end+0x1cdc87f>
 8011aa3:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011aa7:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011aab:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011aaf:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011ab3:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011ab7:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011abb:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011abf:	0a3b7870 	beq	8eefc87 <__exidx_end+0xedd4bb>
 8011ac3:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08011ac8 <HttpContent>:
 8011ac8:	080113fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip}
 8011acc:	0801197f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, fp, ip}
 8011ad0:	0801140a 	stmdaeq	r1, {r1, r3, sl, ip}
 8011ad4:	08011ae0 	stmdaeq	r1, {r5, r6, r7, r9, fp, ip}
 8011ad8:	080113f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, ip}
 8011adc:	0801181d 	stmdaeq	r1, {r0, r2, r3, r4, fp, ip}

08011ae0 <index_js>:
 8011ae0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011ae4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011ae8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011aec:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011af0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011af4:	6a284e4f 	bvs	8a25438 <__exidx_end+0xa12c6c>
 8011af8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011afc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011b00:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011b04:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8011b08:	6a2f273d 	bvs	8bdb804 <__exidx_end+0xbc9038>
 8011b0c:	2f6e6f73 	svccs	0x006e6f73
 8011b10:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8011b14:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011b18:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011b1c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8011b20:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011b24:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8011b28:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8011b2c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8011b30:	20746961 	rsbscs	r6, r4, r1, ror #18
 8011b34:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8011b38:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8011b3c:	0a3b296c 	beq	8edc0f4 <__exidx_end+0xec9928>
 8011b40:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011b44:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8011b48:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8011b4c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011b50:	73657220 	cmnvc	r5, #32, 4
 8011b54:	6f736a2e 	svcvs	0x00736a2e
 8011b58:	3b29286e 	blcc	8a5bd18 <__exidx_end+0xa4954c>
 8011b5c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011b60:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8011b64:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8011b68:	6f727265 	svcvs	0x00727265
 8011b6c:	7b202972 	blvc	881c13c <__exidx_end+0x809970>
 8011b70:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011b74:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8011b78:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8011b7c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8011b80:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8011b84:	3b29726f 	blcc	8a6e548 <__exidx_end+0xa5bd7c>
 8011b88:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011b8c:	0a0a7d0a 	beq	82b0fbc <__exidx_end+0x29e7f0>
 8011b90:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011b94:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011b98:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011b9c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8011ba0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011ba4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011ba8:	20292874 	eorcs	r2, r9, r4, ror r8
 8011bac:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011bb0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011bb4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011bb8:	6177613d 	cmnvs	r7, sp, lsr r1
 8011bbc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011bc0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011bc4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011bc8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011bcc:	0a3b2927 	beq	8edc070 <__exidx_end+0xec98a4>
 8011bd0:	6f640909 	svcvs	0x00640909
 8011bd4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011bd8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011bdc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011be0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011be4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011be8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011bec:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8011bf0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011bf4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011bf8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011bfc:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8011c00:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011c04:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8011c08:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8011c0c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8011c10:	2b656d61 	blcs	996d19c <__exidx_end+0x195a9d0>
 8011c14:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011b94 <index_js+0xb4>
 8011c18:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011c1c:	2b223e69 	blcs	88a15c8 <__exidx_end+0x88edfc>
 8011c20:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c24:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011c28:	6f6e2e74 	svcvs	0x006e2e74
 8011c2c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8011c30:	2b657079 	blcs	996de1c <__exidx_end+0x195b650>
 8011c34:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011bb4 <index_js+0xd4>
 8011c38:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011c3c:	2b223e69 	blcs	88a15e8 <__exidx_end+0x88ee1c>
 8011c40:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c44:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011c48:	6f6e2e74 	svcvs	0x006e2e74
 8011c4c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8011c50:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8011c54:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011c58:	2f3c222b 	svccs	0x003c222b
 8011c5c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011c60:	0a7d0a3b 	beq	9f54554 <__exidx_end+0x1f41d88>
 8011c64:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8011c68:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8011c6c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011c70:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011c74:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011c78:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011c7c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8011c80:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8011c84:	0a7b2029 	beq	9ed9d30 <__exidx_end+0x1ec7564>
 8011c88:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011c8c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8011c90:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011c94:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011c98:	6177613d 	cmnvs	r7, sp, lsr r1
 8011c9c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011ca0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011ca4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011ca8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011cac:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011cb0:	3b292779 	blcc	8a5ba9c <__exidx_end+0xa492d0>
 8011cb4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011cb8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011cbc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011cc0:	0a22223d 	beq	889a5bc <__exidx_end+0x887df0>
 8011cc4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011cc8:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8011ccc:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8011cd0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8011cd4:	6a624f3d 	bvs	98a59d0 <__exidx_end+0x1893204>
 8011cd8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8011cdc:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8011ce0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8011ce4:	6f746365 	svcvs	0x00746365
 8011ce8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8011cec:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011cf0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8011cf4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011cf8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8011cfc:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8011d00:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8011d04:	6145726f 	cmpvs	r5, pc, ror #4
 8011d08:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8011d0c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011d10:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d14:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8011d18:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011d1c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011d20:	20726176 	rsbscs	r6, r2, r6, ror r1
 8011d24:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8011d28:	203d2065 	eorscs	r2, sp, r5, rrx
 8011d2c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011d30:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011d34:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8011d38:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8011d3c:	6b5b5d22 	blvs	96e91cc <__exidx_end+0x16d6a00>
 8011d40:	3b5d7965 	blcc	97702dc <__exidx_end+0x175db10>
 8011d44:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011d48:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8011d4c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8011d50:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8011d54:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011d58:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8011d5c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8011d60:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8011d64:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8011d68:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8011d6c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8011d70:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8011d74:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011d78:	0a3b223e 	beq	8eda678 <__exidx_end+0xec7eac>
 8011d7c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8011d80:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011d84:	6f640909 	svcvs	0x00640909
 8011d88:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011d8c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011d90:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011d94:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011d98:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011d9c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011da0:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011da4:	6f746365 	svcvs	0x00746365
 8011da8:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8011dac:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8011db0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8011db4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8011db8:	3b6c6d74 	blcc	9b2d390 <__exidx_end+0x1b1abc4>
 8011dbc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011dc0:	5f746567 	svcpl	0x00746567
 8011dc4:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8011dc8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011dcc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011dd0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8011dd4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011dd8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8011ddc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8011de0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8011de4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011de8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8011dec:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8011df0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011df4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8011df8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011dfc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011e00:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8011e04:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011e08:	6177613d 	cmnvs	r7, sp, lsr r1
 8011e0c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011e10:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011e14:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011e18:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011e1c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8011e20:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011e24:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8011e28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8011e2c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8011e30:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8011e34:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8011e38:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8011e3c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8011e40:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8011e44:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8011e48:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8011e4c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8011e50:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8011e54:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8011e58:	2b22563e 	blcs	88a7758 <__exidx_end+0x894f8c>
 8011e5c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011e60:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011e64:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011e68:	2b6e6f69 	blcs	9badc14 <__exidx_end+0x1b9b448>
 8011e6c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011dec <index_js+0x30c>
 8011e70:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011e74:	2b223e69 	blcs	88a1820 <__exidx_end+0x88f054>
 8011e78:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011e7c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011e80:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8011e84:	61642e64 	cmnvs	r4, r4, ror #28
 8011e88:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8011e8c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8011e90:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8011e94:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8011e98:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011e9c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8011ea0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8011ea4:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8011ea8:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8011eac:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8011eb0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8011eb4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8011eb8:	6f697372 	svcvs	0x00697372
 8011ebc:	6f622e6e 	svcvs	0x00622e6e
 8011ec0:	2b647261 	blcs	992e84c <__exidx_end+0x191c080>
 8011ec4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e44 <index_js+0x364>
 8011ec8:	3b223e69 	blcc	88a1874 <__exidx_end+0x88f0a8>
 8011ecc:	0a0a7d0a 	beq	82b12fc <__exidx_end+0x29eb30>
 8011ed0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011ed4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011ed8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011edc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011ee0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8011ee8 <index_js+0x408>
 8011ee4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8011ee8:	20296c65 	eorcs	r6, r9, r5, ror #24
 8011eec:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8011ef0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8011ef4:	613d7478 	teqvs	sp, r8, ror r4
 8011ef8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011efc:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8011f00:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8011f04:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8011f08:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011f0c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011f10:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011f14:	3b22223d 	blcc	889a810 <__exidx_end+0x888044>
 8011f18:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8011f1c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8011f20:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8011f24:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8011f28:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8011f2c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8011f30:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8011f34:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8011f38:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8011f3c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011f40:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8011f44:	0a7b2029 	beq	9ed9ff0 <__exidx_end+0x1ec7824>
 8011f48:	61760909 	cmnvs	r6, r9, lsl #18
 8011f4c:	61762072 	cmnvs	r6, r2, ror r0
 8011f50:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8011f54:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8011f58:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8011f5c:	6b5b5d6c 	blvs	96e9514 <__exidx_end+0x16d6d48>
 8011f60:	3b5d7965 	blcc	97704fc <__exidx_end+0x175dd30>
 8011f64:	2009090a 	andcs	r0, r9, sl, lsl #18
 8011f68:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011f6c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8011f70:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8011f74:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8011f78:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8011f7c:	2f3c222b 	svccs	0x003c222b
 8011f80:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8011f84:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8011f88:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8011f8c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8011f90:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8011f94:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8011f9c <index_js+0x4bc>
 8011f98:	3b223e72 	blcc	88a1968 <__exidx_end+0x88f19c>
 8011f9c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8011fa0:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8011fa4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8011fa8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8011fac:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8011fb0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8011fb4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8011fb8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8011fbc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8011fc0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011fc4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011fc8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011fcc:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8011fd0:	0a3b6c6d 	beq	8eed18c <__exidx_end+0xeda9c0>
 8011fd4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8011fd8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011fdc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011fe0:	3b292874 	blcc	8a5c1b8 <__exidx_end+0xa499ec>
 8011fe4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8011fe8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8011fec:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011ff0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011ff4:	0a3b2928 	beq	8edc49c <__exidx_end+0xec9cd0>
 8011ff8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011ffc:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8012000:	6f697372 	svcvs	0x00697372
 8012004:	3b29286e 	blcc	8a5c1c4 <__exidx_end+0xa499f8>
 8012008:	0000000a 	andeq	r0, r0, sl

0801200c <s_aStorSize>:
 801200c:	00000060 	andeq	r0, r0, r0, rrx
 8012010:	00000090 	muleq	r0, r0, r0
 8012014:	00000020 	andeq	r0, r0, r0, lsr #32
 8012018:	00000040 	andeq	r0, r0, r0, asr #32
 801201c:	00000060 	andeq	r0, r0, r0, rrx
 8012020:	00000040 	andeq	r0, r0, r0, asr #32
 8012024:	00000020 	andeq	r0, r0, r0, lsr #32
 8012028:	00000020 	andeq	r0, r0, r0, lsr #32
 801202c:	000001e0 	andeq	r0, r0, r0, ror #3
 8012030:	00000040 	andeq	r0, r0, r0, asr #32
 8012034:	00000020 	andeq	r0, r0, r0, lsr #32
 8012038:	00000060 	andeq	r0, r0, r0, rrx
 801203c:	00000030 	andeq	r0, r0, r0, lsr r0
 8012040:	00000020 	andeq	r0, r0, r0, lsr #32
 8012044:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012048:	00000030 	andeq	r0, r0, r0, lsr r0
 801204c:	00000040 	andeq	r0, r0, r0, asr #32
 8012050:	00000020 	andeq	r0, r0, r0, lsr #32
 8012054:	00000060 	andeq	r0, r0, r0, rrx
 8012058:	00000020 	andeq	r0, r0, r0, lsr #32
 801205c:	00000400 	andeq	r0, r0, r0, lsl #8
 8012060:	00000020 	andeq	r0, r0, r0, lsr #32
 8012064:	00000020 	andeq	r0, r0, r0, lsr #32
 8012068:	00000040 	andeq	r0, r0, r0, asr #32
 801206c:	00000060 	andeq	r0, r0, r0, rrx
 8012070:	00000020 	andeq	r0, r0, r0, lsr #32
 8012074:	00000020 	andeq	r0, r0, r0, lsr #32
 8012078:	00000020 	andeq	r0, r0, r0, lsr #32

0801207c <vtable for StoreDmxSend>:
	...
 8012084:	0800b1f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, ip, sp, pc}
 8012088:	0800b239 	stmdaeq	r0, {r0, r3, r4, r5, r9, ip, sp, pc}
 801208c:	0800b215 	stmdaeq	r0, {r0, r2, r4, r9, ip, sp, pc}
 8012090:	0800b1f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, ip, sp, pc}

08012094 <vtable for StoreNetwork>:
	...
 801209c:	0800b259 	stmdaeq	r0, {r0, r3, r4, r6, r9, ip, sp, pc}
 80120a0:	0800b36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, ip, sp, pc}
 80120a4:	0800b261 	stmdaeq	r0, {r0, r5, r6, r9, ip, sp, pc}
 80120a8:	0800b381 	stmdaeq	r0, {r0, r7, r8, r9, ip, sp, pc}
 80120ac:	0800b311 	stmdaeq	r0, {r0, r4, r8, r9, ip, sp, pc}
 80120b0:	0800b2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, ip, sp, pc}
 80120b4:	0800b2b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, ip, sp, pc}
 80120b8:	0800b33d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, ip, sp, pc}
 80120bc:	0800b285 	stmdaeq	r0, {r0, r2, r7, r9, ip, sp, pc}
 80120c0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80120c4:	00000000 	andeq	r0, r0, r0
 80120c8:	0800b25b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r9, ip, sp, pc}
 80120cc:	0800b379 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, ip, sp, pc}
 80120d0:	0800b335 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, ip, sp, pc}
 80120d4:	0800b309 	stmdaeq	r0, {r0, r3, r8, r9, ip, sp, pc}
 80120d8:	0800b2dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, ip, sp, pc}
 80120dc:	0800b365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, pc}
 80120e0:	0800b2ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, ip, sp, pc}

080120e4 <vtable for StoreOscServer>:
	...
 80120ec:	0800b3b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, ip, sp, pc}
 80120f0:	0800b3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp, pc}
 80120f4:	0800b3d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, ip, sp, pc}
 80120f8:	0800b3b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, ip, sp, pc}

080120fc <vtable for StoreRemoteConfig>:
	...
 8012104:	0800b41d 	stmdaeq	r0, {r0, r2, r3, r4, sl, ip, sp, pc}
 8012108:	0800b465 	stmdaeq	r0, {r0, r2, r5, r6, sl, ip, sp, pc}
 801210c:	0800b441 	stmdaeq	r0, {r0, r6, sl, ip, sp, pc}
 8012110:	0800b421 	stmdaeq	r0, {r0, r5, sl, ip, sp, pc}
 8012114:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8012118:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 801211c:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8012120:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8012124:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8012128:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 801212c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012130:	7a697320 	bvc	9a6edb8 <__exidx_end+0x1a5c5ec>
 8012134:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 8012138:	746f7420 	strbtvc	r7, [pc], #-1056	; 8012140 <vtable for StoreRemoteConfig+0x44>
 801213c:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8012140:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8012144:	0a736574 	beq	9ceb71c <__exidx_end+0x1cd8f50>
 8012148:	70637400 	rsbvc	r7, r3, r0, lsl #8
 801214c:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8012150:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8012154:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 8012158:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 801215c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8012160:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8012164:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 8012168:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 801216c:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8012170:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8012174:	5241000a 	subpl	r0, r1, #10
 8012178:	6f6c2050 	svcvs	0x006c2050
 801217c:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8012180:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8012184:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8012188:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 801218c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8012190:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8012194:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 8012198:	000a7961 	andeq	r7, sl, r1, ror #18
 801219c:	20505241 	subscs	r5, r0, r1, asr #4
 80121a0:	6b6f6f6c 	blvs	9bedf58 <__exidx_end+0x1bdb78c>
 80121a4:	66207075 			; <UNDEFINED> instruction: 0x66207075
 80121a8:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 80121ac:	 	vmlsmi.f32	s0, s0, s9

080121af <NetworkConst::MSG_NETWORK_INIT>:
 80121af:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80121b3:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80121b7:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80121bb:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80121bf:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80121c3:	3135322e 	teqcc	r5, lr, lsr #4
 80121c7:	63745f00 	cmnvs	r4, #0, 30
 80121cb:	6f6c2e70 	svcvs	0x006c2e70
 80121cf:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80121d3:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80121d7:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80121db:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80121e3 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80121df:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80121e3:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8011387 <RemoteConfig::s_TXT+0x4f>
 80121e7:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80121eb:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80121ef:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80121f3:	20000a53 	andcs	r0, r0, r3, asr sl
 80121f7:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80121fb:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80121ff:	0a676e69 	beq	99edbab <__exidx_end+0x19db3df>
 8012203:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8012207:	3a20656d 	bcc	882b7c3 <__exidx_end+0x818ff7>
 801220b:	0a732520 	beq	9cdb693 <__exidx_end+0x1cc8ec7>
 801220f:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8012213:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8012217:	000a7325 	andeq	r7, sl, r5, lsr #6
 801221b:	30687465 	rsbcc	r7, r8, r5, ror #8
 801221f:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8012223:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8012227:	5f656369 	svcpl	0x00656369
 801222b:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801222f:	6b726f77 	blvs	9cae013 <__exidx_end+0x1c9b847>
 8012233:	4820000a 	stmdami	r0!, {r1, r3}
 8012237:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801223b:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801223f:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8012243:	20000a73 	andcs	r0, r0, r3, ror sl
 8012247:	614e6649 	cmpvs	lr, r9, asr #12
 801224b:	2020656d 	eorcs	r6, r0, sp, ror #10
 801224f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012253:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8012257:	000a7325 	andeq	r7, sl, r5, lsr #6
 801225b:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801225f:	20202074 	eorcs	r2, r0, r4, ror r0
 8012263:	3a202020 	bcc	881a2eb <__exidx_end+0x807b1f>
 8012267:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801226b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801226f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012273:	0a64252f 	beq	991b737 <__exidx_end+0x1908f6b>
 8012277:	654e2000 	strbvs	r2, [lr, #-0]
 801227b:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 801227f:	2020206b 	eorcs	r2, r0, fp, rrx
 8012283:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012287:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801228b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801228f:	20000a64 	andcs	r0, r0, r4, ror #20
 8012293:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8012297:	20796177 	rsbscs	r6, r9, r7, ror r1
 801229b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801229f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80122a3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80122a7:	0a64252e 	beq	991b767 <__exidx_end+0x1908f9b>
 80122ab:	72422000 	subvc	r2, r2, #0
 80122af:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80122b3:	20747361 	rsbscs	r7, r4, r1, ror #6
 80122b7:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80122bb:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80122bf:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80122c3:	20000a64 	andcs	r0, r0, r4, ror #20
 80122c7:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80122cb:	20202020 	eorcs	r2, r0, r0, lsr #32
 80122cf:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80122d3:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80122d7:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80122db:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80122df:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80122e3:	3a78322e 	bcc	9e1eba3 <__exidx_end+0x1e0c3d7>
 80122e7:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80122eb:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80122ef:	20000a78 	andcs	r0, r0, r8, ror sl
 80122f3:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80122f7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80122fb:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80122ff:	000a6325 	andeq	r6, sl, r5, lsr #6
 8012303:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8012307:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801230b:	 	rsbvc	r0, r9, r0, asr r0

0801230d <NetworkParamsConst::IP_ADDRESS>:
 801230d:	615f7069 	cmpvs	pc, r9, rrx
 8012311:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8012315:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08012318 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8012318:	61666564 	cmnvs	r6, r4, ror #10
 801231c:	5f746c75 	svcpl	0x00746c75
 8012320:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8012324:	00796177 	rsbseq	r6, r9, r7, ror r1

08012328 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8012328:	70636864 	rsbvc	r6, r3, r4, ror #16
 801232c:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8012330:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8012338 <NetworkParamsConst::HOSTNAME>
 8012334:	00656d69 	rsbeq	r6, r5, r9, ror #26

08012338 <NetworkParamsConst::HOSTNAME>:
 8012338:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801233c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08012341 <NetworkParamsConst::NET_MASK>:
 8012341:	5f74656e 	svcpl	0x0074656e
 8012345:	6b73616d 	blvs	9cea901 <__exidx_end+0x1cd8135>
	...

0801234a <NetworkParamsConst::USE_DHCP>:
 801234a:	5f657375 	svcpl	0x00657375
 801234e:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08012353 <NetworkParamsConst::FILE_NAME>:
 8012353:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8012357:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801235b:	00747874 	rsbseq	r7, r4, r4, ror r8
 801235f:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8012363:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8012367:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801236b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801236f:	002c2264 	eoreq	r2, ip, r4, ror #4
 8012373:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8012377:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801237b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801237f:	0a64252e 	beq	991b83f <__exidx_end+0x1909073>
 8012383:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8012387:	0a232073 	beq	88da55b <__exidx_end+0x8c7d8f>
 801238b:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 801238f:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012393:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8012397:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 801239b:	48530064 	ldmdami	r3, {r2, r5, r6}^
 801239f:	36303131 			; <UNDEFINED> instruction: 0x36303131
 80123a3:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 80123a7:	36303331 			; <UNDEFINED> instruction: 0x36303331
 80123ab:	20732500 	rsbscs	r2, r3, r0, lsl #10
 80123af:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 80123b3:	0a296425 	beq	8a6b44f <__exidx_end+0xa58c83>
 80123b7:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 80123bb:	0000eeaa 	andeq	lr, r0, sl, lsr #29
	...

080123c0 <_OledFont8x6>:
 80123c0:	00000040 	andeq	r0, r0, r0, asr #32
 80123c4:	40000000 	andmi	r0, r0, r0
 80123c8:	005f0000 	subseq	r0, pc, r0
 80123cc:	00400000 	subeq	r0, r0, r0
 80123d0:	00070007 	andeq	r0, r7, r7
 80123d4:	7f144000 	svcvc	0x00144000
 80123d8:	00147f14 	andseq	r7, r4, r4, lsl pc
 80123dc:	7f2a2440 	svcvc	0x002a2440
 80123e0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80123e4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80123e8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80123ec:	50205649 	eorpl	r5, r0, r9, asr #12
 80123f0:	08004000 	stmdaeq	r0, {lr}
 80123f4:	00000307 	andeq	r0, r0, r7, lsl #6
 80123f8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80123fc:	40000041 	andmi	r0, r0, r1, asr #32
 8012400:	1c224100 	stfnes	f4, [r2], #-0
 8012404:	2a400000 	bcs	901240c <__exidx_end+0xfffc40>
 8012408:	2a1c7f1c 	bcs	8732080 <__exidx_end+0x71f8b4>
 801240c:	08084000 	stmdaeq	r8, {lr}
 8012410:	0008083e 	andeq	r0, r8, lr, lsr r8
 8012414:	70800040 	addvc	r0, r0, r0, asr #32
 8012418:	40000030 	andmi	r0, r0, r0, lsr r0
 801241c:	08080808 	stmdaeq	r8, {r3, fp}
 8012420:	00400008 	subeq	r0, r0, r8
 8012424:	00606000 	rsbeq	r6, r0, r0
 8012428:	10204000 	eorne	r4, r0, r0
 801242c:	00020408 	andeq	r0, r2, r8, lsl #8
 8012430:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8012434:	40003e45 	andmi	r3, r0, r5, asr #28
 8012438:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801243c:	72400000 	subvc	r0, r0, #0
 8012440:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8012444:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8012448:	00334d49 	eorseq	r4, r3, r9, asr #26
 801244c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8012450:	4000107f 	andmi	r1, r0, pc, ror r0
 8012454:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8012458:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801245c:	3149494a 	cmpcc	r9, sl, asr #18
 8012460:	21414000 	mrscs	r4, (UNDEF: 65)
 8012464:	00070911 	andeq	r0, r7, r1, lsl r9
 8012468:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801246c:	40003649 	andmi	r3, r0, r9, asr #12
 8012470:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8012474:	0040001e 	subeq	r0, r0, lr, lsl r0
 8012478:	00001400 	andeq	r1, r0, r0, lsl #8
 801247c:	40004000 	andmi	r4, r0, r0
 8012480:	00000034 	andeq	r0, r0, r4, lsr r0
 8012484:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8012488:	40004122 	andmi	r4, r0, r2, lsr #2
 801248c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8012490:	00400014 	subeq	r0, r0, r4, lsl r0
 8012494:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8012498:	01024000 	mrseq	r4, (UNDEF: 2)
 801249c:	00060959 	andeq	r0, r6, r9, asr r9
 80124a0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 80124a4:	40004e59 	andmi	r4, r0, r9, asr lr
 80124a8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 80124ac:	7f40007c 	svcvc	0x0040007c
 80124b0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80124b4:	413e4000 	teqmi	lr, r0
 80124b8:	00224141 	eoreq	r4, r2, r1, asr #2
 80124bc:	41417f40 	cmpmi	r1, r0, asr #30
 80124c0:	40003e41 	andmi	r3, r0, r1, asr #28
 80124c4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80124c8:	7f400041 	svcvc	0x00400041
 80124cc:	01090909 	tsteq	r9, r9, lsl #18
 80124d0:	413e4000 	teqmi	lr, r0
 80124d4:	00735141 	rsbseq	r5, r3, r1, asr #2
 80124d8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80124dc:	40007f08 	andmi	r7, r0, r8, lsl #30
 80124e0:	417f4100 	cmnmi	pc, r0, lsl #2
 80124e4:	20400000 	subcs	r0, r0, r0
 80124e8:	013f4140 	teqeq	pc, r0, asr #2
 80124ec:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80124f0:	00412214 	subeq	r2, r1, r4, lsl r2
 80124f4:	40407f40 	submi	r7, r0, r0, asr #30
 80124f8:	40004040 	andmi	r4, r0, r0, asr #32
 80124fc:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8012500:	7f40007f 	svcvc	0x0040007f
 8012504:	7f100804 	svcvc	0x00100804
 8012508:	413e4000 	teqmi	lr, r0
 801250c:	003e4141 	eorseq	r4, lr, r1, asr #2
 8012510:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8012514:	40000609 	andmi	r0, r0, r9, lsl #12
 8012518:	2151413e 	cmpcs	r1, lr, lsr r1
 801251c:	7f40005e 	svcvc	0x0040005e
 8012520:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8012524:	49264000 	stmdbmi	r6!, {lr}
 8012528:	00324949 	eorseq	r4, r2, r9, asr #18
 801252c:	7f010340 	svcvc	0x00010340
 8012530:	40000301 	andmi	r0, r0, r1, lsl #6
 8012534:	4040403f 	submi	r4, r0, pc, lsr r0
 8012538:	1f40003f 	svcne	0x0040003f
 801253c:	1f204020 	svcne	0x00204020
 8012540:	403f4000 	eorsmi	r4, pc, r0
 8012544:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8012548:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801254c:	40006314 	andmi	r6, r0, r4, lsl r3
 8012550:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8012554:	61400003 	cmpvs	r0, r3
 8012558:	434d4959 	movtmi	r4, #55641	; 0xd959
 801255c:	7f004000 	svcvc	0x00004000
 8012560:	00414141 	subeq	r4, r1, r1, asr #2
 8012564:	08040240 	stmdaeq	r4, {r6, r9}
 8012568:	40002010 	andmi	r2, r0, r0, lsl r0
 801256c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8012570:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8012574:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8012578:	40404000 	submi	r4, r0, r0
 801257c:	00404040 	subeq	r4, r0, r0, asr #32
 8012580:	07030040 	streq	r0, [r3, -r0, asr #32]
 8012584:	40000008 	andmi	r0, r0, r8
 8012588:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801258c:	7f400040 	svcvc	0x00400040
 8012590:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8012594:	44384000 	ldrtmi	r4, [r8], #-0
 8012598:	00284444 	eoreq	r4, r8, r4, asr #8
 801259c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 80125a0:	40007f28 	andmi	r7, r0, r8, lsr #30
 80125a4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 80125a8:	00400018 	subeq	r0, r0, r8, lsl r0
 80125ac:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 80125b0:	a4184000 	ldrge	r4, [r8], #-0
 80125b4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80125b8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80125bc:	40007804 	andmi	r7, r0, r4, lsl #16
 80125c0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80125c4:	20400000 	subcs	r0, r0, r0
 80125c8:	003d4040 	eorseq	r4, sp, r0, asr #32
 80125cc:	107f4000 	rsbsne	r4, pc, r0
 80125d0:	00004428 	andeq	r4, r0, r8, lsr #8
 80125d4:	7f410040 	svcvc	0x00410040
 80125d8:	40000040 	andmi	r0, r0, r0, asr #32
 80125dc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80125e0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80125e4:	78040408 	stmdavc	r4, {r3, sl}
 80125e8:	44384000 	ldrtmi	r4, [r8], #-0
 80125ec:	00384444 	eorseq	r4, r8, r4, asr #8
 80125f0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80125f4:	40001824 	andmi	r1, r0, r4, lsr #16
 80125f8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80125fc:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8012600:	08040408 	stmdaeq	r4, {r3, sl}
 8012604:	54484000 	strbpl	r4, [r8], #-0
 8012608:	00245454 	eoreq	r5, r4, r4, asr r4
 801260c:	3f040440 	svccc	0x00040440
 8012610:	40002444 	andmi	r2, r0, r4, asr #8
 8012614:	2040403c 	subcs	r4, r0, ip, lsr r0
 8012618:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801261c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8012620:	403c4000 	eorsmi	r4, ip, r0
 8012624:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8012628:	10284440 	eorne	r4, r8, r0, asr #8
 801262c:	40004428 	andmi	r4, r0, r8, lsr #8
 8012630:	9090904c 	addsls	r9, r0, ip, asr #32
 8012634:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8012638:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801263c:	08004000 	stmdaeq	r0, {lr}
 8012640:	00004136 	andeq	r4, r0, r6, lsr r1
 8012644:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8012648:	40000000 	andmi	r0, r0, r0
 801264c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8012650:	02400000 	subeq	r0, r0, #0
 8012654:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8012658:	263c4000 	ldrtcs	r4, [ip], -r0
 801265c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08012660 <oled_128x32_init>:
 8012660:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012664:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8012668:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801266c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8012670:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012674:	a6a440db 	ssatge	r4, #5, fp, asr #1

08012678 <oled_128x64_init>:
 8012678:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801267c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8012680:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012684:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8012688:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801268c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08012690 <vtable for Ssd1306>:
	...
 8012698:	0800e585 	stmdaeq	r0, {r0, r2, r7, r8, sl, sp, lr, pc}
 801269c:	0800e5b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, sp, lr, pc}
 80126a0:	0800e8c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, sp, lr, pc}
 80126a4:	0800e84d 	stmdaeq	r0, {r0, r2, r3, r6, fp, sp, lr, pc}
 80126a8:	0800e719 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, sp, lr, pc}
 80126ac:	0800e5d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, sp, lr, pc}
 80126b0:	0800e5f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, sp, lr, pc}
 80126b4:	0800e6ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, r9, sl, sp, lr, pc}
 80126b8:	0800e6a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, sp, lr, pc}
 80126bc:	0800e587 	stmdaeq	r0, {r0, r1, r2, r7, r8, sl, sp, lr, pc}
 80126c0:	0800e755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, sp, lr, pc}
 80126c4:	0800e761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, sp, lr, pc}
 80126c8:	0800e77b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 80126cc:	0800e589 	stmdaeq	r0, {r0, r3, r7, r8, sl, sp, lr, pc}
 80126d0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80126d4:	5b1b006d 	blpl	86d2890 <__exidx_end+0x6c00c4>
 80126d8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80126dc:	31335b1b 	teqcc	r3, fp, lsl fp
 80126e0:	5b1b006d 	blpl	86d289c <__exidx_end+0x6c00d0>
 80126e4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80126e8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80126ec:	5b1b006d 	blpl	86d28a8 <__exidx_end+0x6c00dc>
 80126f0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80126f4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80126f8:	205d732a 	subscs	r7, sp, sl, lsr #6
 80126fc:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8012700:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8012704:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8012708:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801270c:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8012710:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8012714:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8012718:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801271c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012720:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012724:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012728:	203a636f 	eorscs	r6, sl, pc, ror #6
 801272c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8012730:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8012734:	6b636f6c 	blvs	98ee4ec <__exidx_end+0x18dbd20>
 8012738:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 801273c:	000a7469 	andeq	r7, sl, r9, ror #8
 8012740:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012744:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012748:	6f6c4270 	svcvs	0x006c4270
 801274c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8012750:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012754:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8012758:	7a697320 	bvc	9a6f3e0 <__exidx_end+0x1a5cc14>
 801275c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8012760:	6164202c 	cmnvs	r4, ip, lsr #32
 8012764:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8012768:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 801276c:	3a656572 	bcc	996bd3c <__exidx_end+0x1959570>
 8012770:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8012774:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012778:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801277c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8012780:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8012784:	6f6c4270 	svcvs	0x006c4270
 8012788:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 801278c:	0a702520 	beq	9c1bc14 <__exidx_end+0x1c09448>
 8012790:	00000000 	andeq	r0, r0, r0

08012794 <days_of_month>:
 8012794:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012798:	0000001c 	andeq	r0, r0, ip, lsl r0
 801279c:	0000001f 	andeq	r0, r0, pc, lsl r0
 80127a0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80127a4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80127a8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80127ac:	0000001f 	andeq	r0, r0, pc, lsl r0
 80127b0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80127b4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80127b8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80127bc:	0000001e 	andeq	r0, r0, lr, lsl r0
 80127c0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080127c4 <__exidx_start>:
 80127c4:	7fff49bc 	svcvc	0x00ff49bc
 80127c8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080127cc <.ARM.attributes>:
 80127cc:	00002e41 	andeq	r2, r0, r1, asr #28
 80127d0:	61656100 	cmnvs	r5, r0, lsl #2
 80127d4:	01006962 	tsteq	r0, r2, ror #18
 80127d8:	00000024 	andeq	r0, r0, r4, lsr #32
 80127dc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80127e0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80127e4:	0600334d 	streq	r3, [r0], -sp, asr #6
 80127e8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 80127ec:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 80127f0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 80127f4:	1a011803 	bne	8058808 <__exidx_end+0x4603c>
 80127f8:	Address 0x00000000080127f8 is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000709 	andcs	r0, r0, r9, lsl #14

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <OscServer::s_aPathInfo>:
	...

2000017c <OscServer::s_pUdpBuffer>:
2000017c:	00000000 	andeq	r0, r0, r0

20000180 <OscServer::s_aPathSecond>:
	...

20000200 <OscServer::s_aPathBlackOut>:
	...

20000280 <OscServer::s_aPath>:
	...

20000300 <OscServer::s_pData>:
	...

20000500 <OscServer::s_pThis>:
20000500:	00000000 	andeq	r0, r0, r0

20000504 <OscSimpleSend::s_Message>:
	...

20000704 <DmxSend::s_nStarted>:
	...

20000705 <DmxConfigUdp::s_Buffer>:
	...

20000718 <s_RxBuffer>:
	...

20000928 <s_TxBuffer>:
	...

20000b2c <sv_PortState>:
20000b2c:	00000000 	andeq	r0, r0, r0

20000b30 <s_nUartsSending>:
20000b30:	00000000 	andeq	r0, r0, r0

20000b34 <sv_nRxDmxPackets>:
	...

20000b44 <Dmx::s_pThis>:
20000b44:	00000000 	andeq	r0, r0, r0

20000b48 <gv_RdmDataReceiveEnd>:
20000b48:	00000000 	andeq	r0, r0, r0

20000b4c <RemoteConfig::s_pUdpBuffer>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b74 <RemoteConfig::s_pThis>:
20000b74:	00000000 	andeq	r0, r0, r0

20000b78 <SpiFlashStore::s_nWaitMillis>:
20000b78:	00000000 	andeq	r0, r0, r0

20000b7c <SpiFlashStore::s_SpiFlashData>:
	...

20001b7c <SpiFlashStore::s_nStartAddress>:
20001b7c:	00000000 	andeq	r0, r0, r0

20001b80 <SpiFlashStore::s_bHaveFlashChip>:
20001b80:	00000000 	andeq	r0, r0, r0

20001b84 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_State>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_pThis>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_bIsNew>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <StoreDmxSend::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <StoreNetwork::s_pThis>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreOscServer::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreRemoteConfig::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <FlashRom::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <flashrom::s_nAddress>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <flashrom::s_State>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <flashrom::s_nPage>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_pData>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_isBank0>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nLength>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <g_ip_info>:
	...

20001bcc <g_mac_address>:
20001bcc:	00000000 	andeq	r0, r0, r0
	...

20001bd2 <s_is_dhcp>:
	...

20001bd4 <s_p>:
20001bd4:	00000000 	andeq	r0, r0, r0

20001bd8 <s_ticker>:
20001bd8:	00000000 	andeq	r0, r0, r0

20001bdc <s_mac_address>:
	...

20001be4 <s_mac_address_arp_reply>:
20001be4:	00000000 	andeq	r0, r0, r0
	...

20001bea <s_id>:
	...

20001bec <s_recv_queue>:
	...

2000275c <s_tcb>:
	...

200027a0 <s_tcp>:
	...

20002d8c <broadcast_mask>:
20002d8c:	00000000 	andeq	r0, r0, r0

20002d90 <gw_ip>:
20002d90:	00000000 	andeq	r0, r0, r0

20002d94 <on_network_mask>:
20002d94:	00000000 	andeq	r0, r0, r0

20002d98 <s_id>:
20002d98:	00000000 	andeq	r0, r0, r0

20002d9c <s_ports_allowed>:
	...

20002dbc <s_recv_queue>:
	...

20008a5c <s_send_packet>:
	...

20009048 <MDNS::s_nRemoteIp>:
20009048:	00000000 	andeq	r0, r0, r0

2000904c <MDNS::s_nRemotePort>:
2000904c:	00000000 	andeq	r0, r0, r0

20009050 <MDNS::s_nMulticastIp>:
20009050:	00000000 	andeq	r0, r0, r0

20009054 <MDNS::s_AnswerLocalIp>:
	...

20009258 <MDNS::s_ServiceRecords>:
	...

20009278 <MDNS::s_nBytesReceived>:
20009278:	00000000 	andeq	r0, r0, r0

2000927c <MDNS::s_ServiceRecordsData>:
	...

20009480 <MDNS::s_pName>:
20009480:	00000000 	andeq	r0, r0, r0

20009484 <MDNS::s_pBuffer>:
20009484:	00000000 	andeq	r0, r0, r0

20009488 <Network::s_pThis>:
20009488:	00000000 	andeq	r0, r0, r0

2000948c <NetworkParams::m_tNetworkParams>:
	...

200094ec <s_arp_announce>:
	...

20009518 <s_arp_reply>:
	...

20009544 <s_arp_request>:
	...

20009570 <s_arp_records>:
	...

200096f0 <s_entry_current>:
200096f0:	00000000 	andeq	r0, r0, r0

200096f4 <s_dhcp_allocated_gw>:
200096f4:	00000000 	andeq	r0, r0, r0

200096f8 <s_dhcp_allocated_ip>:
200096f8:	00000000 	andeq	r0, r0, r0

200096fc <s_dhcp_allocated_netmask>:
200096fc:	00000000 	andeq	r0, r0, r0

20009700 <s_dhcp_message>:
	...

20009924 <s_dhcp_server_ip>:
20009924:	00000000 	andeq	r0, r0, r0

20009928 <s_groups>:
	...

20009a48 <s_id>:
20009a48:	00000000 	andeq	r0, r0, r0

20009a4c <s_joins_allowed_index>:
20009a4c:	00000000 	andeq	r0, r0, r0

20009a50 <s_leave>:
	...

20009a80 <s_multicast_mac>:
	...

20009a88 <s_report>:
	...

20009ab6 <PropertiesConfig::s_Config>:
	...

20009ab8 <Display::s_pThis>:
20009ab8:	00000000 	andeq	r0, r0, r0

20009abc <_ClearBuffer>:
	...

20009b44 <Ssd1306::s_pThis>:
20009b44:	00000000 	andeq	r0, r0, r0

20009b48 <FirmwareVersion::s_FirmwareVersion>:
	...

20009b5e <FirmwareVersion::s_Print>:
	...

20009ba0 <FirmwareVersion::s_pThis>:
20009ba0:	00000000 	andeq	r0, r0, r0

20009ba4 <LedBlink::s_pThis>:
20009ba4:	00000000 	andeq	r0, r0, r0

20009ba8 <Hardware::s_pThis>:
20009ba8:	00000000 	andeq	r0, r0, r0

20009bac <last.0>:
20009bac:	00000000 	andeq	r0, r0, r0

20009bb0 <s_micros>:
	...

20009bb8 <set_timer>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <s_nSysTickMillis>:
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <enet_init_status>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <s_nAddress>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <dma_current_ptp_rxdesc>:
20009bc8:	00000000 	andeq	r0, r0, r0

20009bcc <dma_current_ptp_txdesc>:
20009bcc:	00000000 	andeq	r0, r0, r0

20009bd0 <dma_current_rxdesc>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <dma_current_txdesc>:
20009bd4:	00000000 	andeq	r0, r0, r0

20009bd8 <enet_initpara>:
	...

20009c14 <rx_buff>:
	...

2000b3e4 <rxdesc_tab>:
	...

2000b424 <tx_buff>:
	...

2000c00c <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
