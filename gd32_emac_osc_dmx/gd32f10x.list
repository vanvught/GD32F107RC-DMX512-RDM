
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007dad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, sp, lr}
 8007008:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800700c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007010:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007014:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007018:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 800702c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007030:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800703c:	0800f29d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, ip, sp, lr, pc}
 8007040:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007044:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007048:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800704c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007050:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007054:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007058:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800705c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007060:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007064:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007068:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800706c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007070:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007074:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007078:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800707c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007080:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007084:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007088:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800708c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007090:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007094:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007098:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800709c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ac:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070b0:	0800b2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, ip, sp, pc}
 80070b4:	0800b395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, sp, pc}
 80070b8:	0800b3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp, pc}
 80070bc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070cc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070dc:	0800b0f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, ip, sp, pc}
 80070e0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ec:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 8007100:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800710c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007110:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007114:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007118:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800711c:	0800b411 	stmdaeq	r0, {r0, r4, sl, ip, sp, pc}
 8007120:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007124:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007128:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800712c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007130:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007134:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007138:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800713c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007140:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007144:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007148:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800714c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 f907 	bl	800d3b4 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f004 fc32 	bl	800ba18 <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 fb18 	bl	800d7f4 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	200010b0 	strhcs	r1, [r0], -r0
 80071e8:	200010a4 	andcs	r1, r0, r4, lsr #1
 80071ec:	200010b6 	strhcs	r1, [r0], -r6

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 b9e0 	b.w	800d5c4 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	200010b6 	strhcs	r1, [r0], -r6

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	200010c0 	andcs	r1, r0, r0, asr #1

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f004 fc4d 	bl	800bacc <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f004 fc41 	bl	800bacc <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	20001c88 	andcs	r1, r0, r8, lsl #25
 800725c:	200010b0 	strhcs	r1, [r0], -r0
 8007260:	200010a4 	andcs	r1, r0, r4, lsr #1
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f004 fda0 	bl	800bdd4 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f004 fdc1 	bl	800be24 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	200022a4 	andcs	r2, r0, r4, lsr #5
 80072ac:	20002284 	andcs	r2, r0, r4, lsl #5
 80072b0:	20007f44 	andcs	r7, r0, r4, asr #30
 80072b4:	20002280 	andcs	r2, r0, r0, lsl #5
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f005 feee 	bl	800d0b8 <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f005 fedb 	bl	800d0b8 <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f005 fecf 	bl	800d0b8 <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f005 febe 	bl	800d0b8 <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f005 feb2 	bl	800d0b8 <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f005 fea6 	bl	800d0b8 <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f005 beab 	b.w	800d0cc <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	2000897a 	andcs	r8, r0, sl, ror r9
 8007394:	20008974 	andcs	r8, r0, r4, ror r9
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	2000898a 	andcs	r8, r0, sl, lsl #19
 80073a4:	20008994 	mulcs	r0, r4, r9
 80073a8:	200089d2 	ldrdcs	r8, [r0], -r2
 80073ac:	200089cc 	andcs	r8, r0, ip, asr #19
 80073b0:	200089e2 	andcs	r8, r0, r2, ror #19
 80073b4:	200089ec 	andcs	r8, r0, ip, ror #19
 80073b8:	200089a0 	andcs	r8, r0, r0, lsr #19

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	20008b78 	andcs	r8, r0, r8, ror fp
 80073ec:	200089fc 	strdcs	r8, [r0], -ip

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 f94a 	bl	800d6b4 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 f8f6 	bl	800d620 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 f8dc 	bl	800d620 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	20008db0 			; <UNDEFINED> instruction: 0x20008db0
 8007490:	20008ed4 	ldrdcs	r8, [r0], -r4
 8007494:	20008f10 	andcs	r8, r0, r0, lsl pc
 8007498:	20008ed0 	ldrdcs	r8, [r0], -r0
 800749c:	20008f08 	andcs	r8, r0, r8, lsl #30
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20008ed8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 f954 	bl	800d76c <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	20008db0 			; <UNDEFINED> instruction: 0x20008db0

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f007 fe6d 	bl	800f1e0 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f007 fe9a 	bl	800f240 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f007 fe97 	bl	800f240 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	08010f79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp}
 800751c:	08012984 	stmdaeq	r1, {r2, r7, r8, fp, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f008 ffd1 	bl	80104cc <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f008 ffdb 	bl	80104f4 <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 ba59 	b.w	800b9f8 <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	200010b8 	strhcs	r1, [r0], -r8

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 fab5 	bl	800bae0 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 fa96 	bl	800bacc <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 fa87 	bl	800bacc <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 fa7f 	bl	800bacc <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 fb28 	bl	800bc78 <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 fa40 	bl	800bacc <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fa39 	bl	800bacc <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 fa58 	bl	800bb2c <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 f9f3 	bl	800ba98 <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 f9d4 	bl	800ba98 <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 fa11 	bl	800bb2c <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 faae 	bl	800bc78 <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 fa8c 	bl	800bc78 <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 f99b 	bl	800bacc <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 f9b7 	bl	800bb2c <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 f999 	bl	800bb2c <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20001c44 	andcs	r1, r0, r4, asr #24
 8007814:	20001c4c 	andcs	r1, r0, ip, asr #24
 8007818:	200010d4 	ldrdcs	r1, [r0], -r4
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 f90f 	bl	800ba98 <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 f94a 	bl	800bb2c <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20001c44 	andcs	r1, r0, r4, asr #24

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 fa58 	bl	800bdd4 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 fa51 	bl	800bdd4 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20002284 	andcs	r2, r0, r4, lsl #5
 800795c:	200022a4 	andcs	r2, r0, r4, lsr #5

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f005 bbb6 	b.w	800d0e0 <arp_handle_request>
 8007974:	f005 bbdc 	b.w	800d130 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051d 	add.w	r5, r0, #29
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0621 	add.w	r6, r0, #33	; 0x21
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ba:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079f8:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20008ed4 	ldrdcs	r8, [r0], -r4
 8007a14:	20008db0 			; <UNDEFINED> instruction: 0x20008db0

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f005 fef8 	bl	800d85a <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f005 fef3 	bl	800d85a <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f005 fee8 	bl	800d85a <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f005 fedd 	bl	800d85a <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f005 fead 	bl	800d806 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f005 fea0 	bl	800d806 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f008 fd13 	bl	80104fc <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	200010b0 	strhcs	r1, [r0], -r0
 8007ae0:	200010a4 	andcs	r1, r0, r4, lsr #1

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f000 fed4 	bl	80088b0 <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <__aeabi_fmul>:
 8007b18:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007b1c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007b20:	bf1e      	ittt	ne
 8007b22:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007b26:	ea92 0f0c 	teqne	r2, ip
 8007b2a:	ea93 0f0c 	teqne	r3, ip
 8007b2e:	d06f      	beq.n	8007c10 <__aeabi_fmul+0xf8>
 8007b30:	441a      	add	r2, r3
 8007b32:	ea80 0c01 	eor.w	ip, r0, r1
 8007b36:	0240      	lsls	r0, r0, #9
 8007b38:	bf18      	it	ne
 8007b3a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007b3e:	d01e      	beq.n	8007b7e <__aeabi_fmul+0x66>
 8007b40:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007b44:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007b48:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007b4c:	fba0 3101 	umull	r3, r1, r0, r1
 8007b50:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007b54:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007b58:	bf3e      	ittt	cc
 8007b5a:	0049      	lslcc	r1, r1, #1
 8007b5c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007b60:	005b      	lslcc	r3, r3, #1
 8007b62:	ea40 0001 	orr.w	r0, r0, r1
 8007b66:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007b6a:	2afd      	cmp	r2, #253	; 0xfd
 8007b6c:	d81d      	bhi.n	8007baa <__aeabi_fmul+0x92>
 8007b6e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b72:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007b76:	bf08      	it	eq
 8007b78:	f020 0001 	biceq.w	r0, r0, #1
 8007b7c:	4770      	bx	lr
 8007b7e:	f090 0f00 	teq	r0, #0
 8007b82:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007b86:	bf08      	it	eq
 8007b88:	0249      	lsleq	r1, r1, #9
 8007b8a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007b8e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007b92:	3a7f      	subs	r2, #127	; 0x7f
 8007b94:	bfc2      	ittt	gt
 8007b96:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007b9a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007b9e:	4770      	bxgt	lr
 8007ba0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007ba4:	f04f 0300 	mov.w	r3, #0
 8007ba8:	3a01      	subs	r2, #1
 8007baa:	dc5d      	bgt.n	8007c68 <__aeabi_fmul+0x150>
 8007bac:	f112 0f19 	cmn.w	r2, #25
 8007bb0:	bfdc      	itt	le
 8007bb2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007bb6:	4770      	bxle	lr
 8007bb8:	f1c2 0200 	rsb	r2, r2, #0
 8007bbc:	0041      	lsls	r1, r0, #1
 8007bbe:	fa21 f102 	lsr.w	r1, r1, r2
 8007bc2:	f1c2 0220 	rsb	r2, r2, #32
 8007bc6:	fa00 fc02 	lsl.w	ip, r0, r2
 8007bca:	ea5f 0031 	movs.w	r0, r1, rrx
 8007bce:	f140 0000 	adc.w	r0, r0, #0
 8007bd2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007bd6:	bf08      	it	eq
 8007bd8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007bdc:	4770      	bx	lr
 8007bde:	f092 0f00 	teq	r2, #0
 8007be2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007be6:	bf02      	ittt	eq
 8007be8:	0040      	lsleq	r0, r0, #1
 8007bea:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007bee:	3a01      	subeq	r2, #1
 8007bf0:	d0f9      	beq.n	8007be6 <__aeabi_fmul+0xce>
 8007bf2:	ea40 000c 	orr.w	r0, r0, ip
 8007bf6:	f093 0f00 	teq	r3, #0
 8007bfa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007bfe:	bf02      	ittt	eq
 8007c00:	0049      	lsleq	r1, r1, #1
 8007c02:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007c06:	3b01      	subeq	r3, #1
 8007c08:	d0f9      	beq.n	8007bfe <__aeabi_fmul+0xe6>
 8007c0a:	ea41 010c 	orr.w	r1, r1, ip
 8007c0e:	e78f      	b.n	8007b30 <__aeabi_fmul+0x18>
 8007c10:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007c14:	ea92 0f0c 	teq	r2, ip
 8007c18:	bf18      	it	ne
 8007c1a:	ea93 0f0c 	teqne	r3, ip
 8007c1e:	d00a      	beq.n	8007c36 <__aeabi_fmul+0x11e>
 8007c20:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007c24:	bf18      	it	ne
 8007c26:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007c2a:	d1d8      	bne.n	8007bde <__aeabi_fmul+0xc6>
 8007c2c:	ea80 0001 	eor.w	r0, r0, r1
 8007c30:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c34:	4770      	bx	lr
 8007c36:	f090 0f00 	teq	r0, #0
 8007c3a:	bf17      	itett	ne
 8007c3c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007c40:	4608      	moveq	r0, r1
 8007c42:	f091 0f00 	teqne	r1, #0
 8007c46:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007c4a:	d014      	beq.n	8007c76 <__aeabi_fmul+0x15e>
 8007c4c:	ea92 0f0c 	teq	r2, ip
 8007c50:	d101      	bne.n	8007c56 <__aeabi_fmul+0x13e>
 8007c52:	0242      	lsls	r2, r0, #9
 8007c54:	d10f      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c56:	ea93 0f0c 	teq	r3, ip
 8007c5a:	d103      	bne.n	8007c64 <__aeabi_fmul+0x14c>
 8007c5c:	024b      	lsls	r3, r1, #9
 8007c5e:	bf18      	it	ne
 8007c60:	4608      	movne	r0, r1
 8007c62:	d108      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c64:	ea80 0001 	eor.w	r0, r0, r1
 8007c68:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c6c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c70:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c74:	4770      	bx	lr
 8007c76:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c7a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007c7e:	4770      	bx	lr

08007c80 <__gesf2>:
 8007c80:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007c84:	e006      	b.n	8007c94 <__cmpsf2+0x4>
 8007c86:	bf00      	nop

08007c88 <__lesf2>:
 8007c88:	f04f 0c01 	mov.w	ip, #1
 8007c8c:	e002      	b.n	8007c94 <__cmpsf2+0x4>
 8007c8e:	bf00      	nop

08007c90 <__cmpsf2>:
 8007c90:	f04f 0c01 	mov.w	ip, #1
 8007c94:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007c98:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007c9c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007ca0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007ca4:	bf18      	it	ne
 8007ca6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007caa:	d011      	beq.n	8007cd0 <__cmpsf2+0x40>
 8007cac:	b001      	add	sp, #4
 8007cae:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007cb2:	bf18      	it	ne
 8007cb4:	ea90 0f01 	teqne	r0, r1
 8007cb8:	bf58      	it	pl
 8007cba:	ebb2 0003 	subspl.w	r0, r2, r3
 8007cbe:	bf88      	it	hi
 8007cc0:	17c8      	asrhi	r0, r1, #31
 8007cc2:	bf38      	it	cc
 8007cc4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007cc8:	bf18      	it	ne
 8007cca:	f040 0001 	orrne.w	r0, r0, #1
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cd4:	d102      	bne.n	8007cdc <__cmpsf2+0x4c>
 8007cd6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007cda:	d105      	bne.n	8007ce8 <__cmpsf2+0x58>
 8007cdc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007ce0:	d1e4      	bne.n	8007cac <__cmpsf2+0x1c>
 8007ce2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007ce6:	d0e1      	beq.n	8007cac <__cmpsf2+0x1c>
 8007ce8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007cec:	4770      	bx	lr
 8007cee:	bf00      	nop

08007cf0 <__aeabi_cfrcmple>:
 8007cf0:	4684      	mov	ip, r0
 8007cf2:	4608      	mov	r0, r1
 8007cf4:	4661      	mov	r1, ip
 8007cf6:	e7ff      	b.n	8007cf8 <__aeabi_cfcmpeq>

08007cf8 <__aeabi_cfcmpeq>:
 8007cf8:	b50f      	push	{r0, r1, r2, r3, lr}
 8007cfa:	f7ff ffc9 	bl	8007c90 <__cmpsf2>
 8007cfe:	2800      	cmp	r0, #0
 8007d00:	bf48      	it	mi
 8007d02:	f110 0f00 	cmnmi.w	r0, #0
 8007d06:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007d08 <__aeabi_fcmpeq>:
 8007d08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d0c:	f7ff fff4 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d10:	bf0c      	ite	eq
 8007d12:	2001      	moveq	r0, #1
 8007d14:	2000      	movne	r0, #0
 8007d16:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d1a:	bf00      	nop

08007d1c <__aeabi_fcmplt>:
 8007d1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d20:	f7ff ffea 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d24:	bf34      	ite	cc
 8007d26:	2001      	movcc	r0, #1
 8007d28:	2000      	movcs	r0, #0
 8007d2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d2e:	bf00      	nop

08007d30 <__aeabi_fcmple>:
 8007d30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d34:	f7ff ffe0 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d38:	bf94      	ite	ls
 8007d3a:	2001      	movls	r0, #1
 8007d3c:	2000      	movhi	r0, #0
 8007d3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d42:	bf00      	nop

08007d44 <__aeabi_fcmpge>:
 8007d44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d48:	f7ff ffd2 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d4c:	bf94      	ite	ls
 8007d4e:	2001      	movls	r0, #1
 8007d50:	2000      	movhi	r0, #0
 8007d52:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d56:	bf00      	nop

08007d58 <__aeabi_fcmpgt>:
 8007d58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d5c:	f7ff ffc8 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d60:	bf34      	ite	cc
 8007d62:	2001      	movcc	r0, #1
 8007d64:	2000      	movcs	r0, #0
 8007d66:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d6a:	bf00      	nop

08007d6c <__aeabi_f2uiz>:
 8007d6c:	0042      	lsls	r2, r0, #1
 8007d6e:	d20e      	bcs.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d70:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007d74:	d30b      	bcc.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d76:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007d7a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007d7e:	d409      	bmi.n	8007d94 <__aeabi_f2uiz+0x28>
 8007d80:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007d84:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007d88:	fa23 f002 	lsr.w	r0, r3, r2
 8007d8c:	4770      	bx	lr
 8007d8e:	f04f 0000 	mov.w	r0, #0
 8007d92:	4770      	bx	lr
 8007d94:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007d98:	d101      	bne.n	8007d9e <__aeabi_f2uiz+0x32>
 8007d9a:	0242      	lsls	r2, r0, #9
 8007d9c:	d102      	bne.n	8007da4 <__aeabi_f2uiz+0x38>
 8007d9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007da2:	4770      	bx	lr
 8007da4:	f04f 0000 	mov.w	r0, #0
 8007da8:	4770      	bx	lr
 8007daa:	bf00      	nop

08007dac <Reset_Handler>:
 8007dac:	480c      	ldr	r0, [pc, #48]	; (8007de0 <Zerobss+0x10>)
 8007dae:	4685      	mov	sp, r0
 8007db0:	2100      	movs	r1, #0
 8007db2:	e003      	b.n	8007dbc <DataInit>

08007db4 <CopyData>:
 8007db4:	4b0b      	ldr	r3, [pc, #44]	; (8007de4 <Zerobss+0x14>)
 8007db6:	585b      	ldr	r3, [r3, r1]
 8007db8:	5043      	str	r3, [r0, r1]
 8007dba:	3104      	adds	r1, #4

08007dbc <DataInit>:
 8007dbc:	480a      	ldr	r0, [pc, #40]	; (8007de8 <Zerobss+0x18>)
 8007dbe:	4b0b      	ldr	r3, [pc, #44]	; (8007dec <Zerobss+0x1c>)
 8007dc0:	1842      	adds	r2, r0, r1
 8007dc2:	429a      	cmp	r2, r3
 8007dc4:	d3f6      	bcc.n	8007db4 <CopyData>
 8007dc6:	4a0a      	ldr	r2, [pc, #40]	; (8007df0 <Zerobss+0x20>)
 8007dc8:	e002      	b.n	8007dd0 <Zerobss>

08007dca <FillZerobss>:
 8007dca:	2300      	movs	r3, #0
 8007dcc:	f842 3b04 	str.w	r3, [r2], #4

08007dd0 <Zerobss>:
 8007dd0:	4b08      	ldr	r3, [pc, #32]	; (8007df4 <Zerobss+0x24>)
 8007dd2:	429a      	cmp	r2, r3
 8007dd4:	d3f9      	bcc.n	8007dca <FillZerobss>
 8007dd6:	f007 fa69 	bl	800f2ac <SystemInit>
 8007dda:	f000 f8f9 	bl	8007fd0 <main>
 8007dde:	4770      	bx	lr
 8007de0:	20018000 	andcs	r8, r1, r0
 8007de4:	08012a04 	stmdaeq	r1, {r2, r9, fp, sp}
 8007de8:	20000000 	andcs	r0, r0, r0
 8007dec:	2000008c 	andcs	r0, r0, ip, lsl #1
 8007df0:	20000090 	mulcs	r0, r0, r0
 8007df4:	2000dd10 	andcs	sp, r0, r0, lsl sp

08007df8 <ADC0_1_IRQHandler>:
 8007df8:	e7fe      	b.n	8007df8 <ADC0_1_IRQHandler>

08007dfa <memcmp>:
 8007dfa:	b510      	push	{r4, lr}
 8007dfc:	3901      	subs	r1, #1
 8007dfe:	4402      	add	r2, r0
 8007e00:	4290      	cmp	r0, r2
 8007e02:	d101      	bne.n	8007e08 <memcmp+0xe>
 8007e04:	2000      	movs	r0, #0
 8007e06:	e005      	b.n	8007e14 <memcmp+0x1a>
 8007e08:	7803      	ldrb	r3, [r0, #0]
 8007e0a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007e0e:	42a3      	cmp	r3, r4
 8007e10:	d001      	beq.n	8007e16 <memcmp+0x1c>
 8007e12:	1b18      	subs	r0, r3, r4
 8007e14:	bd10      	pop	{r4, pc}
 8007e16:	3001      	adds	r0, #1
 8007e18:	e7f2      	b.n	8007e00 <memcmp+0x6>

08007e1a <DisplayHandler::~DisplayHandler()>:
 8007e1a:	4770      	bx	lr

08007e1c <dmxconfigudp::atoi(char const*, unsigned int)>:
 8007e1c:	4603      	mov	r3, r0
 8007e1e:	b530      	push	{r4, r5, lr}
 8007e20:	4401      	add	r1, r0
 8007e22:	250a      	movs	r5, #10
 8007e24:	2000      	movs	r0, #0
 8007e26:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007e2a:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 8007e2e:	2c09      	cmp	r4, #9
 8007e30:	d805      	bhi.n	8007e3e <dmxconfigudp::atoi(char const*, unsigned int)+0x22>
 8007e32:	fb05 2000 	mla	r0, r5, r0, r2
 8007e36:	4299      	cmp	r1, r3
 8007e38:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8007e3c:	d1f3      	bne.n	8007e26 <dmxconfigudp::atoi(char const*, unsigned int)+0xa>
 8007e3e:	bd30      	pop	{r4, r5, pc}

08007e40 <DisplayHandler::~DisplayHandler()>:
 8007e40:	b510      	push	{r4, lr}
 8007e42:	4604      	mov	r4, r0
 8007e44:	f007 f806 	bl	800ee54 <operator delete(void*)>
 8007e48:	4620      	mov	r0, r4
 8007e4a:	bd10      	pop	{r4, pc}

08007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007e4c:	b110      	cbz	r0, 8007e54 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007e4e:	6803      	ldr	r3, [r0, #0]
 8007e50:	6a1b      	ldr	r3, [r3, #32]
 8007e52:	4718      	bx	r3
 8007e54:	4770      	bx	lr

08007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8007e56:	b430      	push	{r4, r5}
 8007e58:	b168      	cbz	r0, 8007e76 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	7905      	ldrb	r5, [r0, #4]
 8007e5e:	5cd4      	ldrb	r4, [r2, r3]
 8007e60:	b11c      	cbz	r4, 8007e6a <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8007e62:	1c5c      	adds	r4, r3, #1
 8007e64:	429d      	cmp	r5, r3
 8007e66:	4623      	mov	r3, r4
 8007e68:	dcf9      	bgt.n	8007e5e <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8007e6a:	6804      	ldr	r4, [r0, #0]
 8007e6c:	b2db      	uxtb	r3, r3
 8007e6e:	69e4      	ldr	r4, [r4, #28]
 8007e70:	46a4      	mov	ip, r4
 8007e72:	bc30      	pop	{r4, r5}
 8007e74:	4760      	bx	ip
 8007e76:	bc30      	pop	{r4, r5}
 8007e78:	4770      	bx	lr

08007e7a <Display::PutChar(int) [clone .isra.0]>:
 8007e7a:	b110      	cbz	r0, 8007e82 <Display::PutChar(int) [clone .isra.0]+0x8>
 8007e7c:	6803      	ldr	r3, [r0, #0]
 8007e7e:	695b      	ldr	r3, [r3, #20]
 8007e80:	4718      	bx	r3
 8007e82:	4770      	bx	lr

08007e84 <DisplayHandler::Print(unsigned int)>:
 8007e84:	b538      	push	{r3, r4, r5, lr}
 8007e86:	7903      	ldrb	r3, [r0, #4]
 8007e88:	b1f3      	cbz	r3, 8007ec8 <DisplayHandler::Print(unsigned int)+0x44>
 8007e8a:	2904      	cmp	r1, #4
 8007e8c:	bf98      	it	ls
 8007e8e:	4b0f      	ldrls	r3, [pc, #60]	; (8007ecc <DisplayHandler::Print(unsigned int)+0x48>)
 8007e90:	4d0f      	ldr	r5, [pc, #60]	; (8007ed0 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007e92:	bf98      	it	ls
 8007e94:	5c5c      	ldrbls	r4, [r3, r1]
 8007e96:	682b      	ldr	r3, [r5, #0]
 8007e98:	bf88      	it	hi
 8007e9a:	2455      	movhi	r4, #85	; 0x55
 8007e9c:	6998      	ldr	r0, [r3, #24]
 8007e9e:	b178      	cbz	r0, 8007ec0 <DisplayHandler::Print(unsigned int)+0x3c>
 8007ea0:	7901      	ldrb	r1, [r0, #4]
 8007ea2:	3901      	subs	r1, #1
 8007ea4:	b2c9      	uxtb	r1, r1
 8007ea6:	b168      	cbz	r0, 8007ec4 <DisplayHandler::Print(unsigned int)+0x40>
 8007ea8:	7942      	ldrb	r2, [r0, #5]
 8007eaa:	3a01      	subs	r2, #1
 8007eac:	b2d2      	uxtb	r2, r2
 8007eae:	f7ff ffcd 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007eb2:	682b      	ldr	r3, [r5, #0]
 8007eb4:	4621      	mov	r1, r4
 8007eb6:	6998      	ldr	r0, [r3, #24]
 8007eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007ebc:	f7ff bfdd 	b.w	8007e7a <Display::PutChar(int) [clone .isra.0]>
 8007ec0:	4601      	mov	r1, r0
 8007ec2:	e7ee      	b.n	8007ea2 <DisplayHandler::Print(unsigned int)+0x1e>
 8007ec4:	4602      	mov	r2, r0
 8007ec6:	e7f0      	b.n	8007eaa <DisplayHandler::Print(unsigned int)+0x26>
 8007ec8:	bd38      	pop	{r3, r4, r5, pc}
 8007eca:	bf00      	nop
 8007ecc:	08011014 	stmdaeq	r1, {r2, r4, ip}
 8007ed0:	20009f8c 	andcs	r9, r0, ip, lsl #31

08007ed4 <Display::Printf(unsigned char, char const*, ...)>:
 8007ed4:	b40c      	push	{r2, r3}
 8007ed6:	b570      	push	{r4, r5, r6, lr}
 8007ed8:	6984      	ldr	r4, [r0, #24]
 8007eda:	4605      	mov	r5, r0
 8007edc:	460e      	mov	r6, r1
 8007ede:	b08a      	sub	sp, #40	; 0x28
 8007ee0:	b174      	cbz	r4, 8007f00 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8007ee2:	ab0f      	add	r3, sp, #60	; 0x3c
 8007ee4:	2120      	movs	r1, #32
 8007ee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007ee8:	a802      	add	r0, sp, #8
 8007eea:	9301      	str	r3, [sp, #4]
 8007eec:	f000 fcd0 	bl	8008890 <vsnprintf>
 8007ef0:	4604      	mov	r4, r0
 8007ef2:	69a8      	ldr	r0, [r5, #24]
 8007ef4:	4631      	mov	r1, r6
 8007ef6:	6803      	ldr	r3, [r0, #0]
 8007ef8:	aa02      	add	r2, sp, #8
 8007efa:	69dd      	ldr	r5, [r3, #28]
 8007efc:	b2a3      	uxth	r3, r4
 8007efe:	47a8      	blx	r5
 8007f00:	4620      	mov	r0, r4
 8007f02:	b00a      	add	sp, #40	; 0x28
 8007f04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007f08:	b002      	add	sp, #8
 8007f0a:	4770      	bx	lr

08007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007f0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f10:	4604      	mov	r4, r0
 8007f12:	6980      	ldr	r0, [r0, #24]
 8007f14:	460f      	mov	r7, r1
 8007f16:	4615      	mov	r5, r2
 8007f18:	461e      	mov	r6, r3
 8007f1a:	b1d8      	cbz	r0, 8007f54 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x48>
 8007f1c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8007f20:	2100      	movs	r1, #0
 8007f22:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8007f26:	fa5f f888 	uxtb.w	r8, r8
 8007f2a:	4642      	mov	r2, r8
 8007f2c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007f30:	f04f 0b00 	mov.w	fp, #0
 8007f34:	f7ff ff8a 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f38:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007f3c:	45cb      	cmp	fp, r9
 8007f3e:	69a0      	ldr	r0, [r4, #24]
 8007f40:	d327      	bcc.n	8007f92 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x86>
 8007f42:	4642      	mov	r2, r8
 8007f44:	2100      	movs	r1, #0
 8007f46:	f7ff ff81 	bl	8007e4c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f4a:	463a      	mov	r2, r7
 8007f4c:	4651      	mov	r1, sl
 8007f4e:	69a0      	ldr	r0, [r4, #24]
 8007f50:	f7ff ff81 	bl	8007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8007f54:	7c63      	ldrb	r3, [r4, #17]
 8007f56:	b19b      	cbz	r3, 8007f80 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x74>
 8007f58:	43ea      	mvns	r2, r5
 8007f5a:	2312      	movs	r3, #18
 8007f5c:	7a20      	ldrb	r0, [r4, #8]
 8007f5e:	f88d 3004 	strb.w	r3, [sp, #4]
 8007f62:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007f66:	f88d 3005 	strb.w	r3, [sp, #5]
 8007f6a:	f88d 2006 	strb.w	r2, [sp, #6]
 8007f6e:	f008 fb5d 	bl	801062c <gd32_i2c_set_address>
 8007f72:	68e0      	ldr	r0, [r4, #12]
 8007f74:	f008 fb52 	bl	801061c <gd32_i2c_set_baudrate>
 8007f78:	2103      	movs	r1, #3
 8007f7a:	a801      	add	r0, sp, #4
 8007f7c:	f008 fb5c 	bl	8010638 <gd32_i2c_write>
 8007f80:	1c73      	adds	r3, r6, #1
 8007f82:	d00c      	beq.n	8007f9e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 8007f84:	4639      	mov	r1, r7
 8007f86:	4630      	mov	r0, r6
 8007f88:	b003      	add	sp, #12
 8007f8a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f8e:	f006 be21 	b.w	800ebd4 <console_status>
 8007f92:	2120      	movs	r1, #32
 8007f94:	f7ff ff71 	bl	8007e7a <Display::PutChar(int) [clone .isra.0]>
 8007f98:	f10b 0b01 	add.w	fp, fp, #1
 8007f9c:	e7ce      	b.n	8007f3c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 8007f9e:	b003      	add	sp, #12
 8007fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007fa4 <Display::SetSleep(bool)>:
 8007fa4:	b538      	push	{r3, r4, r5, lr}
 8007fa6:	4604      	mov	r4, r0
 8007fa8:	6980      	ldr	r0, [r0, #24]
 8007faa:	460d      	mov	r5, r1
 8007fac:	b138      	cbz	r0, 8007fbe <Display::SetSleep(bool)+0x1a>
 8007fae:	6803      	ldr	r3, [r0, #0]
 8007fb0:	7421      	strb	r1, [r4, #16]
 8007fb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fb4:	4798      	blx	r3
 8007fb6:	b915      	cbnz	r5, 8007fbe <Display::SetSleep(bool)+0x1a>
 8007fb8:	4b01      	ldr	r3, [pc, #4]	; (8007fc0 <Display::SetSleep(bool)+0x1c>)
 8007fba:	681b      	ldr	r3, [r3, #0]
 8007fbc:	6063      	str	r3, [r4, #4]
 8007fbe:	bd38      	pop	{r3, r4, r5, pc}
 8007fc0:	2000a094 	mulcs	r0, r4, r0

08007fc4 <Hardware::RebootHandler()>:
 8007fc4:	4b01      	ldr	r3, [pc, #4]	; (8007fcc <Hardware::RebootHandler()+0x8>)
 8007fc6:	6818      	ldr	r0, [r3, #0]
 8007fc8:	f003 bcc6 	b.w	800b958 <Dmx::Blackout()>
 8007fcc:	20001098 	mulcs	r0, r8, r0

08007fd0 <main>:
 8007fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd4:	f5ad 7d6a 	sub.w	sp, sp, #936	; 0x3a8
 8007fd8:	a805      	add	r0, sp, #20
 8007fda:	f006 feaf 	bl	800ed3c <Hardware::Hardware()>
 8007fde:	a854      	add	r0, sp, #336	; 0x150
 8007fe0:	f004 fc6c 	bl	800c8bc <Network::Network()>
 8007fe4:	a814      	add	r0, sp, #80	; 0x50
 8007fe6:	f006 fe53 	bl	800ec90 <LedBlink::LedBlink()>
 8007fea:	a81a      	add	r0, sp, #104	; 0x68
 8007fec:	f006 fb98 	bl	800e720 <Display::Display()>
 8007ff0:	4ab1      	ldr	r2, [pc, #708]	; (80082b8 <main+0x2e8>)
 8007ff2:	4bb2      	ldr	r3, [pc, #712]	; (80082bc <main+0x2ec>)
 8007ff4:	49b2      	ldr	r1, [pc, #712]	; (80082c0 <main+0x2f0>)
 8007ff6:	a806      	add	r0, sp, #24
 8007ff8:	f006 fe04 	bl	800ec04 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007ffc:	a808      	add	r0, sp, #32
 8007ffe:	f005 fcd7 	bl	800d9b0 <ConfigStore::ConfigStore()>
 8008002:	49b0      	ldr	r1, [pc, #704]	; (80082c4 <main+0x2f4>)
 8008004:	a806      	add	r0, sp, #24
 8008006:	f006 fe35 	bl	800ec74 <FirmwareVersion::Print(char const*)>
 800800a:	2301      	movs	r3, #1
 800800c:	4eae      	ldr	r6, [pc, #696]	; (80082c8 <main+0x2f8>)
 800800e:	2008      	movs	r0, #8
 8008010:	6133      	str	r3, [r6, #16]
 8008012:	f006 ff23 	bl	800ee5c <operator new(unsigned int)>
 8008016:	4bad      	ldr	r3, [pc, #692]	; (80082cc <main+0x2fc>)
 8008018:	6003      	str	r3, [r0, #0]
 800801a:	4bad      	ldr	r3, [pc, #692]	; (80082d0 <main+0x300>)
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	2b00      	cmp	r3, #0
 8008020:	bf14      	ite	ne
 8008022:	2201      	movne	r2, #1
 8008024:	2200      	moveq	r2, #0
 8008026:	7102      	strb	r2, [r0, #4]
 8008028:	d004      	beq.n	8008034 <main+0x64>
 800802a:	699b      	ldr	r3, [r3, #24]
 800802c:	3b00      	subs	r3, #0
 800802e:	bf18      	it	ne
 8008030:	2301      	movne	r3, #1
 8008032:	7103      	strb	r3, [r0, #4]
 8008034:	9016      	str	r0, [sp, #88]	; 0x58
 8008036:	a809      	add	r0, sp, #36	; 0x24
 8008038:	f005 feca 	bl	800ddd0 <StoreOscServer::StoreOscServer()>
 800803c:	a909      	add	r1, sp, #36	; 0x24
 800803e:	a886      	add	r0, sp, #536	; 0x218
 8008040:	f002 fada 	bl	800a5f8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8008044:	a844      	add	r0, sp, #272	; 0x110
 8008046:	f001 ffdd 	bl	800a004 <OscServer::OscServer()>
 800804a:	a886      	add	r0, sp, #536	; 0x218
 800804c:	f002 fae4 	bl	800a618 <OSCServerParams::Load()>
 8008050:	b130      	cbz	r0, 8008060 <main+0x90>
 8008052:	a886      	add	r0, sp, #536	; 0x218
 8008054:	f002 fc77 	bl	800a946 <OSCServerParams::Dump()>
 8008058:	a944      	add	r1, sp, #272	; 0x110
 800805a:	a886      	add	r0, sp, #536	; 0x218
 800805c:	f002 fb86 	bl	800a76c <OSCServerParams::Set(OscServer*)>
 8008060:	2400      	movs	r4, #0
 8008062:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008066:	2303      	movs	r3, #3
 8008068:	499a      	ldr	r1, [pc, #616]	; (80082d4 <main+0x304>)
 800806a:	a81a      	add	r0, sp, #104	; 0x68
 800806c:	f7ff ff4e 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008070:	a80e      	add	r0, sp, #56	; 0x38
 8008072:	f005 fe75 	bl	800dd60 <StoreNetwork::StoreNetwork()>
 8008076:	ab0f      	add	r3, sp, #60	; 0x3c
 8008078:	a90e      	add	r1, sp, #56	; 0x38
 800807a:	a854      	add	r0, sp, #336	; 0x150
 800807c:	9382      	str	r3, [sp, #520]	; 0x208
 800807e:	f004 fc71 	bl	800c964 <Network::Init(NetworkParamsStore*)>
 8008082:	a854      	add	r0, sp, #336	; 0x150
 8008084:	f004 fda6 	bl	800cbd4 <Network::Print()>
 8008088:	2303      	movs	r3, #3
 800808a:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800808e:	4992      	ldr	r1, [pc, #584]	; (80082d8 <main+0x308>)
 8008090:	a81a      	add	r0, sp, #104	; 0x68
 8008092:	f7ff ff3b 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008096:	a807      	add	r0, sp, #28
 8008098:	f004 f852 	bl	800c140 <MDNS::MDNS()>
 800809c:	a807      	add	r0, sp, #28
 800809e:	f004 f90f 	bl	800c2c0 <MDNS::Start()>
 80080a2:	4b8e      	ldr	r3, [pc, #568]	; (80082dc <main+0x30c>)
 80080a4:	4621      	mov	r1, r4
 80080a6:	4a8e      	ldr	r2, [pc, #568]	; (80082e0 <main+0x310>)
 80080a8:	9301      	str	r3, [sp, #4]
 80080aa:	9400      	str	r4, [sp, #0]
 80080ac:	f8bd 3110 	ldrh.w	r3, [sp, #272]	; 0x110
 80080b0:	a807      	add	r0, sp, #28
 80080b2:	f004 fa6f 	bl	800c594 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080b6:	4b8b      	ldr	r3, [pc, #556]	; (80082e4 <main+0x314>)
 80080b8:	4621      	mov	r1, r4
 80080ba:	9301      	str	r3, [sp, #4]
 80080bc:	2301      	movs	r3, #1
 80080be:	4a8a      	ldr	r2, [pc, #552]	; (80082e8 <main+0x318>)
 80080c0:	9300      	str	r3, [sp, #0]
 80080c2:	a807      	add	r0, sp, #28
 80080c4:	2350      	movs	r3, #80	; 0x50
 80080c6:	f004 fa65 	bl	800c594 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080ca:	a807      	add	r0, sp, #28
 80080cc:	f004 fba8 	bl	800c820 <MDNS::Print()>
 80080d0:	a83a      	add	r0, sp, #232	; 0xe8
 80080d2:	f001 fbad 	bl	8009830 <HttpDaemon::HttpDaemon()>
 80080d6:	a83a      	add	r0, sp, #232	; 0xe8
 80080d8:	f001 fbbe 	bl	8009858 <HttpDaemon::Start()>
 80080dc:	2303      	movs	r3, #3
 80080de:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80080e2:	4982      	ldr	r1, [pc, #520]	; (80082ec <main+0x31c>)
 80080e4:	a81a      	add	r0, sp, #104	; 0x68
 80080e6:	f7ff ff11 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80080ea:	a80a      	add	r0, sp, #40	; 0x28
 80080ec:	f005 fd8a 	bl	800dc04 <StoreDmxSend::StoreDmxSend()>
 80080f0:	a90a      	add	r1, sp, #40	; 0x28
 80080f2:	a810      	add	r0, sp, #64	; 0x40
 80080f4:	f002 fea0 	bl	800ae38 <DmxParams::DmxParams(DmxParamsStore*)>
 80080f8:	a821      	add	r0, sp, #132	; 0x84
 80080fa:	f003 fad5 	bl	800b6a8 <Dmx::Dmx()>
 80080fe:	a810      	add	r0, sp, #64	; 0x40
 8008100:	f002 fea6 	bl	800ae50 <DmxParams::Load()>
 8008104:	b130      	cbz	r0, 8008114 <main+0x144>
 8008106:	a810      	add	r0, sp, #64	; 0x40
 8008108:	f002 fff0 	bl	800b0ec <DmxParams::Dump()>
 800810c:	a921      	add	r1, sp, #132	; 0x84
 800810e:	a810      	add	r0, sp, #64	; 0x40
 8008110:	f002 ffc2 	bl	800b098 <DmxParams::Set(Dmx*)>
 8008114:	4b76      	ldr	r3, [pc, #472]	; (80082f0 <main+0x320>)
 8008116:	ac0b      	add	r4, sp, #44	; 0x2c
 8008118:	4d76      	ldr	r5, [pc, #472]	; (80082f4 <main+0x324>)
 800811a:	4620      	mov	r0, r4
 800811c:	930b      	str	r3, [sp, #44]	; 0x2c
 800811e:	f002 fe31 	bl	800ad84 <DmxSend::Print()>
 8008122:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008126:	6828      	ldr	r0, [r5, #0]
 8008128:	f004 fbf7 	bl	800c91a <Network::Begin(unsigned short)>
 800812c:	4b72      	ldr	r3, [pc, #456]	; (80082f8 <main+0x328>)
 800812e:	9451      	str	r4, [sp, #324]	; 0x144
 8008130:	6018      	str	r0, [r3, #0]
 8008132:	a844      	add	r0, sp, #272	; 0x110
 8008134:	f002 f9cc 	bl	800a4d0 <OscServer::Print()>
 8008138:	4620      	mov	r0, r4
 800813a:	f002 fe23 	bl	800ad84 <DmxSend::Print()>
 800813e:	2401      	movs	r4, #1
 8008140:	9820      	ldr	r0, [sp, #128]	; 0x80
 8008142:	b118      	cbz	r0, 800814c <main+0x17c>
 8008144:	6803      	ldr	r3, [r0, #0]
 8008146:	4621      	mov	r1, r4
 8008148:	691b      	ldr	r3, [r3, #16]
 800814a:	4798      	blx	r3
 800814c:	3401      	adds	r4, #1
 800814e:	b2e4      	uxtb	r4, r4
 8008150:	2c07      	cmp	r4, #7
 8008152:	d1f5      	bne.n	8008140 <main+0x170>
 8008154:	2101      	movs	r1, #1
 8008156:	4a69      	ldr	r2, [pc, #420]	; (80082fc <main+0x32c>)
 8008158:	a81a      	add	r0, sp, #104	; 0x68
 800815a:	f7ff febb 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 800815e:	2102      	movs	r1, #2
 8008160:	4a67      	ldr	r2, [pc, #412]	; (8008300 <main+0x330>)
 8008162:	9820      	ldr	r0, [sp, #128]	; 0x80
 8008164:	f7ff fe77 	bl	8007e56 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008168:	f89d 4155 	ldrb.w	r4, [sp, #341]	; 0x155
 800816c:	682b      	ldr	r3, [r5, #0]
 800816e:	2c00      	cmp	r4, #0
 8008170:	bf14      	ite	ne
 8008172:	2444      	movne	r4, #68	; 0x44
 8008174:	2453      	moveq	r4, #83	; 0x53
 8008176:	695b      	ldr	r3, [r3, #20]
 8008178:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800817c:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008180:	0e18      	lsrs	r0, r3, #24
 8008182:	e9cd 2100 	strd	r2, r1, [sp]
 8008186:	e9cd 0402 	strd	r0, r4, [sp, #8]
 800818a:	2103      	movs	r1, #3
 800818c:	4a5d      	ldr	r2, [pc, #372]	; (8008304 <main+0x334>)
 800818e:	b2db      	uxtb	r3, r3
 8008190:	a81a      	add	r0, sp, #104	; 0x68
 8008192:	f7ff fe9f 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 8008196:	2104      	movs	r1, #4
 8008198:	f8bd 3110 	ldrh.w	r3, [sp, #272]	; 0x110
 800819c:	4a5a      	ldr	r2, [pc, #360]	; (8008308 <main+0x338>)
 800819e:	a81a      	add	r0, sp, #104	; 0x68
 80081a0:	f7ff fe98 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 80081a4:	2105      	movs	r1, #5
 80081a6:	f8bd 3112 	ldrh.w	r3, [sp, #274]	; 0x112
 80081aa:	4a58      	ldr	r2, [pc, #352]	; (800830c <main+0x33c>)
 80081ac:	a81a      	add	r0, sp, #104	; 0x68
 80081ae:	f7ff fe91 	bl	8007ed4 <Display::Printf(unsigned char, char const*, ...)>
 80081b2:	2301      	movs	r3, #1
 80081b4:	2200      	movs	r2, #0
 80081b6:	2102      	movs	r1, #2
 80081b8:	a828      	add	r0, sp, #160	; 0xa0
 80081ba:	f000 fe7d 	bl	8008eb8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 80081be:	a80c      	add	r0, sp, #48	; 0x30
 80081c0:	f005 fe3c 	bl	800de3c <StoreRemoteConfig::StoreRemoteConfig()>
 80081c4:	a90c      	add	r1, sp, #48	; 0x30
 80081c6:	a831      	add	r0, sp, #196	; 0xc4
 80081c8:	f001 f91c 	bl	8009404 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80081cc:	a831      	add	r0, sp, #196	; 0xc4
 80081ce:	f001 f923 	bl	8009418 <RemoteConfigParams::Load()>
 80081d2:	b130      	cbz	r0, 80081e2 <main+0x212>
 80081d4:	a831      	add	r0, sp, #196	; 0xc4
 80081d6:	f001 fa66 	bl	80096a6 <RemoteConfigParams::Dump()>
 80081da:	a928      	add	r1, sp, #160	; 0xa0
 80081dc:	a831      	add	r0, sp, #196	; 0xc4
 80081de:	f001 fa42 	bl	8009666 <RemoteConfigParams::Set(RemoteConfig*)>
 80081e2:	a808      	add	r0, sp, #32
 80081e4:	f005 fc8c 	bl	800db00 <ConfigStore::Flash()>
 80081e8:	2800      	cmp	r0, #0
 80081ea:	d1fa      	bne.n	80081e2 <main+0x212>
 80081ec:	2303      	movs	r3, #3
 80081ee:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80081f2:	4947      	ldr	r1, [pc, #284]	; (8008310 <main+0x340>)
 80081f4:	a81a      	add	r0, sp, #104	; 0x68
 80081f6:	f7ff fe89 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081fa:	a844      	add	r0, sp, #272	; 0x110
 80081fc:	f001 ff6c 	bl	800a0d8 <OscServer::Start()>
 8008200:	2302      	movs	r3, #2
 8008202:	f248 0280 	movw	r2, #32896	; 0x8080
 8008206:	4943      	ldr	r1, [pc, #268]	; (8008314 <main+0x344>)
 8008208:	a81a      	add	r0, sp, #104	; 0x68
 800820a:	f7ff fe7f 	bl	8007f0c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800820e:	2102      	movs	r1, #2
 8008210:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008214:	f007 fd80 	bl	800fd18 <fwdgt_config>
 8008218:	2801      	cmp	r0, #1
 800821a:	bf0c      	ite	eq
 800821c:	2301      	moveq	r3, #1
 800821e:	2300      	movne	r3, #0
 8008220:	f88d 3014 	strb.w	r3, [sp, #20]
 8008224:	d101      	bne.n	800822a <main+0x25a>
 8008226:	f007 fd67 	bl	800fcf8 <fwdgt_enable>
 800822a:	4f3b      	ldr	r7, [pc, #236]	; (8008318 <main+0x348>)
 800822c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80082f8 <main+0x328>
 8008230:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800831c <main+0x34c>
 8008234:	f007 fd68 	bl	800fd08 <fwdgt_counter_reload>
 8008238:	f7ff f972 	bl	8007520 <net_handle>
 800823c:	a844      	add	r0, sp, #272	; 0x110
 800823e:	f001 fffb 	bl	800a238 <OscServer::Run()>
 8008242:	a828      	add	r0, sp, #160	; 0xa0
 8008244:	f000 ffb6 	bl	80091b4 <RemoteConfig::Run()>
 8008248:	a808      	add	r0, sp, #32
 800824a:	f005 fc59 	bl	800db00 <ConfigStore::Flash()>
 800824e:	f10d 0322 	add.w	r3, sp, #34	; 0x22
 8008252:	4931      	ldr	r1, [pc, #196]	; (8008318 <main+0x348>)
 8008254:	f898 0000 	ldrb.w	r0, [r8]
 8008258:	aa0d      	add	r2, sp, #52	; 0x34
 800825a:	f003 fe73 	bl	800bf44 <udp_recv2>
 800825e:	f1a0 030b 	sub.w	r3, r0, #11
 8008262:	b29b      	uxth	r3, r3
 8008264:	2b05      	cmp	r3, #5
 8008266:	4604      	mov	r4, r0
 8008268:	d860      	bhi.n	800832c <main+0x35c>
 800826a:	683d      	ldr	r5, [r7, #0]
 800826c:	2204      	movs	r2, #4
 800826e:	4629      	mov	r1, r5
 8008270:	4648      	mov	r0, r9
 8008272:	f7ff fdc2 	bl	8007dfa <memcmp>
 8008276:	2800      	cmp	r0, #0
 8008278:	d158      	bne.n	800832c <main+0x35c>
 800827a:	192b      	adds	r3, r5, r4
 800827c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8008280:	f105 0a04 	add.w	sl, r5, #4
 8008284:	2b0a      	cmp	r3, #10
 8008286:	bf04      	itt	eq
 8008288:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800828c:	b2a4      	uxtheq	r4, r4
 800828e:	2c0a      	cmp	r4, #10
 8008290:	d06d      	beq.n	800836e <main+0x39e>
 8008292:	2c0e      	cmp	r4, #14
 8008294:	d86b      	bhi.n	800836e <main+0x39e>
 8008296:	2206      	movs	r2, #6
 8008298:	4651      	mov	r1, sl
 800829a:	4821      	ldr	r0, [pc, #132]	; (8008320 <main+0x350>)
 800829c:	f7ff fdad 	bl	8007dfa <memcmp>
 80082a0:	2800      	cmp	r0, #0
 80082a2:	d164      	bne.n	800836e <main+0x39e>
 80082a4:	2104      	movs	r1, #4
 80082a6:	f105 000a 	add.w	r0, r5, #10
 80082aa:	f7ff fdb7 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80082ae:	285b      	cmp	r0, #91	; 0x5b
 80082b0:	4601      	mov	r1, r0
 80082b2:	d93b      	bls.n	800832c <main+0x35c>
 80082b4:	e036      	b.n	8008324 <main+0x354>
 80082b6:	bf00      	nop
 80082b8:	08010f41 	stmdaeq	r1, {r0, r6, r8, r9, sl, fp}
 80082bc:	08010f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp}
 80082c0:	08011019 	stmdaeq	r1, {r0, r3, r4, ip}
 80082c4:	08010f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp}
 80082c8:	40011000 	andmi	r1, r1, r0
 80082cc:	08011008 	stmdaeq	r1, {r3, ip}
 80082d0:	20009f8c 	andcs	r9, r0, ip, lsl #31
 80082d4:	0801232b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sp}
 80082d8:	0801231a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sp}
 80082dc:	08010f85 	stmdaeq	r1, {r0, r2, r7, r8, r9, sl, fp}
 80082e0:	08010f7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp}
 80082e4:	08010f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp}
 80082e8:	08010f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp}
 80082ec:	08012167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sp}
 80082f0:	0801224c 	stmdaeq	r1, {r2, r3, r6, r9, sp}
 80082f4:	20008970 	andcs	r8, r0, r0, ror r9
 80082f8:	2000000c 	andcs	r0, r0, ip
 80082fc:	08010fa8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, fp}
 8008300:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 8008304:	08010fbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp}
 8008308:	08010fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp}
 800830c:	08010fd7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, fp}
 8008310:	0801214f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sp}
 8008314:	0801217e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sp}
 8008318:	200010a0 	andcs	r1, r0, r0, lsr #1
 800831c:	08010fdf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 8008320:	08010fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp}
 8008324:	4b41      	ldr	r3, [pc, #260]	; (800842c <main+0x45c>)
 8008326:	6818      	ldr	r0, [r3, #0]
 8008328:	f003 facc 	bl	800b8c4 <Dmx::SetDmxBreakTime(unsigned int)>
 800832c:	a807      	add	r0, sp, #28
 800832e:	f004 fa53 	bl	800c7d8 <MDNS::Run()>
 8008332:	a83a      	add	r0, sp, #232	; 0xe8
 8008334:	f001 fcfc 	bl	8009d30 <HttpDaemon::Run()>
 8008338:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800833a:	2a00      	cmp	r2, #0
 800833c:	d161      	bne.n	8008402 <main+0x432>
 800833e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008340:	2900      	cmp	r1, #0
 8008342:	f43f af77 	beq.w	8008234 <main+0x264>
 8008346:	4a3a      	ldr	r2, [pc, #232]	; (8008430 <main+0x460>)
 8008348:	9819      	ldr	r0, [sp, #100]	; 0x64
 800834a:	6813      	ldr	r3, [r2, #0]
 800834c:	1a1b      	subs	r3, r3, r0
 800834e:	4299      	cmp	r1, r3
 8008350:	f63f af70 	bhi.w	8008234 <main+0x264>
 8008354:	6813      	ldr	r3, [r2, #0]
 8008356:	9319      	str	r3, [sp, #100]	; 0x64
 8008358:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800835a:	2b01      	cmp	r3, #1
 800835c:	f083 0201 	eor.w	r2, r3, #1
 8008360:	bf18      	it	ne
 8008362:	2301      	movne	r3, #1
 8008364:	9218      	str	r2, [sp, #96]	; 0x60
 8008366:	bf14      	ite	ne
 8008368:	6133      	strne	r3, [r6, #16]
 800836a:	6173      	streq	r3, [r6, #20]
 800836c:	e762      	b.n	8008234 <main+0x264>
 800836e:	2204      	movs	r2, #4
 8008370:	4651      	mov	r1, sl
 8008372:	4830      	ldr	r0, [pc, #192]	; (8008434 <main+0x464>)
 8008374:	f7ff fd41 	bl	8007dfa <memcmp>
 8008378:	b978      	cbnz	r0, 800839a <main+0x3ca>
 800837a:	2107      	movs	r1, #7
 800837c:	f105 0008 	add.w	r0, r5, #8
 8008380:	f7ff fd4c 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 8008384:	4b2c      	ldr	r3, [pc, #176]	; (8008438 <main+0x468>)
 8008386:	f1a0 020c 	sub.w	r2, r0, #12
 800838a:	429a      	cmp	r2, r3
 800838c:	4601      	mov	r1, r0
 800838e:	d8cd      	bhi.n	800832c <main+0x35c>
 8008390:	4b26      	ldr	r3, [pc, #152]	; (800842c <main+0x45c>)
 8008392:	6818      	ldr	r0, [r3, #0]
 8008394:	f003 faa0 	bl	800b8d8 <Dmx::SetDmxMabTime(unsigned int)>
 8008398:	e7c8      	b.n	800832c <main+0x35c>
 800839a:	2c0c      	cmp	r4, #12
 800839c:	d916      	bls.n	80083cc <main+0x3fc>
 800839e:	2c0e      	cmp	r4, #14
 80083a0:	d82c      	bhi.n	80083fc <main+0x42c>
 80083a2:	2208      	movs	r2, #8
 80083a4:	4651      	mov	r1, sl
 80083a6:	4825      	ldr	r0, [pc, #148]	; (800843c <main+0x46c>)
 80083a8:	f7ff fd27 	bl	8007dfa <memcmp>
 80083ac:	bb30      	cbnz	r0, 80083fc <main+0x42c>
 80083ae:	2102      	movs	r1, #2
 80083b0:	f105 000c 	add.w	r0, r5, #12
 80083b4:	f7ff fd32 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80083b8:	4601      	mov	r1, r0
 80083ba:	b110      	cbz	r0, 80083c2 <main+0x3f2>
 80083bc:	4b20      	ldr	r3, [pc, #128]	; (8008440 <main+0x470>)
 80083be:	fbb3 f1f0 	udiv	r1, r3, r0
 80083c2:	4b1a      	ldr	r3, [pc, #104]	; (800842c <main+0x45c>)
 80083c4:	6818      	ldr	r0, [r3, #0]
 80083c6:	f003 fa4d 	bl	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 80083ca:	e7af      	b.n	800832c <main+0x35c>
 80083cc:	2c0a      	cmp	r4, #10
 80083ce:	d0ad      	beq.n	800832c <main+0x35c>
 80083d0:	2206      	movs	r2, #6
 80083d2:	4651      	mov	r1, sl
 80083d4:	481b      	ldr	r0, [pc, #108]	; (8008444 <main+0x474>)
 80083d6:	f7ff fd10 	bl	8007dfa <memcmp>
 80083da:	2800      	cmp	r0, #0
 80083dc:	d1a6      	bne.n	800832c <main+0x35c>
 80083de:	2103      	movs	r1, #3
 80083e0:	f105 000a 	add.w	r0, r5, #10
 80083e4:	f7ff fd1a 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned int)>
 80083e8:	1e83      	subs	r3, r0, #2
 80083ea:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80083ee:	d89d      	bhi.n	800832c <main+0x35c>
 80083f0:	4b0e      	ldr	r3, [pc, #56]	; (800842c <main+0x45c>)
 80083f2:	b281      	uxth	r1, r0
 80083f4:	6818      	ldr	r0, [r3, #0]
 80083f6:	f003 fa79 	bl	800b8ec <Dmx::SetDmxSlots(unsigned short)>
 80083fa:	e797      	b.n	800832c <main+0x35c>
 80083fc:	2c0d      	cmp	r4, #13
 80083fe:	d0e7      	beq.n	80083d0 <main+0x400>
 8008400:	e794      	b.n	800832c <main+0x35c>
 8008402:	f89d 3078 	ldrb.w	r3, [sp, #120]	; 0x78
 8008406:	b953      	cbnz	r3, 800841e <main+0x44e>
 8008408:	4b09      	ldr	r3, [pc, #36]	; (8008430 <main+0x460>)
 800840a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800840c:	681b      	ldr	r3, [r3, #0]
 800840e:	1a5b      	subs	r3, r3, r1
 8008410:	429a      	cmp	r2, r3
 8008412:	d294      	bcs.n	800833e <main+0x36e>
 8008414:	2101      	movs	r1, #1
 8008416:	a81a      	add	r0, sp, #104	; 0x68
 8008418:	f7ff fdc4 	bl	8007fa4 <Display::SetSleep(bool)>
 800841c:	e78f      	b.n	800833e <main+0x36e>
 800841e:	f006 f8fd 	bl	800e61c <display::timeout::gpio_renew()>
 8008422:	2800      	cmp	r0, #0
 8008424:	d08b      	beq.n	800833e <main+0x36e>
 8008426:	2100      	movs	r1, #0
 8008428:	e7f5      	b.n	8008416 <main+0x446>
 800842a:	bf00      	nop
 800842c:	20001098 	mulcs	r0, r8, r0
 8008430:	2000a094 	mulcs	r0, r4, r0
 8008434:	08010feb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, sl, fp}
 8008438:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 800843c:	08010ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp}
 8008440:	000f4240 	andeq	r4, pc, r0, asr #4
 8008444:	08010ff9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, fp}

08008448 <network::display_emac_start()>:
 8008448:	4770      	bx	lr

0800844a <network::display_ip()>:
 800844a:	4770      	bx	lr

0800844c <network::display_emac_shutdown()>:
 800844c:	4770      	bx	lr

0800844e <network::display_dhcp_status(network::dhcp::ClientStatus)>:
 800844e:	4770      	bx	lr

08008450 <_xputch>:
 8008450:	4603      	mov	r3, r0
 8008452:	b410      	push	{r4}
 8008454:	4c08      	ldr	r4, [pc, #32]	; (8008478 <_xputch+0x28>)
 8008456:	68da      	ldr	r2, [r3, #12]
 8008458:	4608      	mov	r0, r1
 800845a:	6821      	ldr	r1, [r4, #0]
 800845c:	3201      	adds	r2, #1
 800845e:	60da      	str	r2, [r3, #12]
 8008460:	b139      	cbz	r1, 8008472 <_xputch+0x22>
 8008462:	691b      	ldr	r3, [r3, #16]
 8008464:	429a      	cmp	r2, r3
 8008466:	da02      	bge.n	800846e <_xputch+0x1e>
 8008468:	1c4b      	adds	r3, r1, #1
 800846a:	6023      	str	r3, [r4, #0]
 800846c:	7008      	strb	r0, [r1, #0]
 800846e:	bc10      	pop	{r4}
 8008470:	4770      	bx	lr
 8008472:	bc10      	pop	{r4}
 8008474:	f006 bb76 	b.w	800eb64 <console_putc>
 8008478:	20000090 	mulcs	r0, r0, r0

0800847c <_format_int>:
 800847c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008480:	4698      	mov	r8, r3
 8008482:	b091      	sub	sp, #68	; 0x44
 8008484:	ea52 0308 	orrs.w	r3, r2, r8
 8008488:	4606      	mov	r6, r0
 800848a:	4617      	mov	r7, r2
 800848c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008490:	d133      	bne.n	80084fa <_format_int+0x7e>
 8008492:	2330      	movs	r3, #48	; 0x30
 8008494:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008498:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800849c:	6833      	ldr	r3, [r6, #0]
 800849e:	07d8      	lsls	r0, r3, #31
 80084a0:	d507      	bpl.n	80084b2 <_format_int+0x36>
 80084a2:	466a      	mov	r2, sp
 80084a4:	2030      	movs	r0, #48	; 0x30
 80084a6:	6871      	ldr	r1, [r6, #4]
 80084a8:	1b2f      	subs	r7, r5, r4
 80084aa:	428f      	cmp	r7, r1
 80084ac:	da01      	bge.n	80084b2 <_format_int+0x36>
 80084ae:	4294      	cmp	r4, r2
 80084b0:	d839      	bhi.n	8008526 <_format_int+0xaa>
 80084b2:	0699      	lsls	r1, r3, #26
 80084b4:	d507      	bpl.n	80084c6 <_format_int+0x4a>
 80084b6:	466a      	mov	r2, sp
 80084b8:	2030      	movs	r0, #48	; 0x30
 80084ba:	68b1      	ldr	r1, [r6, #8]
 80084bc:	1b2f      	subs	r7, r5, r4
 80084be:	428f      	cmp	r7, r1
 80084c0:	da01      	bge.n	80084c6 <_format_int+0x4a>
 80084c2:	4294      	cmp	r4, r2
 80084c4:	d832      	bhi.n	800852c <_format_int+0xb0>
 80084c6:	071a      	lsls	r2, r3, #28
 80084c8:	bf44      	itt	mi
 80084ca:	222d      	movmi	r2, #45	; 0x2d
 80084cc:	f804 2901 	strbmi.w	r2, [r4], #-1
 80084d0:	065b      	lsls	r3, r3, #25
 80084d2:	d407      	bmi.n	80084e4 <_format_int+0x68>
 80084d4:	466b      	mov	r3, sp
 80084d6:	2120      	movs	r1, #32
 80084d8:	68b2      	ldr	r2, [r6, #8]
 80084da:	1b28      	subs	r0, r5, r4
 80084dc:	4290      	cmp	r0, r2
 80084de:	da01      	bge.n	80084e4 <_format_int+0x68>
 80084e0:	429c      	cmp	r4, r3
 80084e2:	d826      	bhi.n	8008532 <_format_int+0xb6>
 80084e4:	1b2d      	subs	r5, r5, r4
 80084e6:	3401      	adds	r4, #1
 80084e8:	ab10      	add	r3, sp, #64	; 0x40
 80084ea:	429c      	cmp	r4, r3
 80084ec:	d324      	bcc.n	8008538 <_format_int+0xbc>
 80084ee:	68b3      	ldr	r3, [r6, #8]
 80084f0:	42ab      	cmp	r3, r5
 80084f2:	dc27      	bgt.n	8008544 <_format_int+0xc8>
 80084f4:	b011      	add	sp, #68	; 0x44
 80084f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80084fa:	462c      	mov	r4, r5
 80084fc:	46e9      	mov	r9, sp
 80084fe:	4638      	mov	r0, r7
 8008500:	4641      	mov	r1, r8
 8008502:	220a      	movs	r2, #10
 8008504:	2300      	movs	r3, #0
 8008506:	f7ff faed 	bl	8007ae4 <__aeabi_uldivmod>
 800850a:	3230      	adds	r2, #48	; 0x30
 800850c:	f804 2901 	strb.w	r2, [r4], #-1
 8008510:	463a      	mov	r2, r7
 8008512:	4643      	mov	r3, r8
 8008514:	2a0a      	cmp	r2, #10
 8008516:	f173 0300 	sbcs.w	r3, r3, #0
 800851a:	4607      	mov	r7, r0
 800851c:	4688      	mov	r8, r1
 800851e:	d3bd      	bcc.n	800849c <_format_int+0x20>
 8008520:	454c      	cmp	r4, r9
 8008522:	d1ec      	bne.n	80084fe <_format_int+0x82>
 8008524:	e7ba      	b.n	800849c <_format_int+0x20>
 8008526:	f804 0901 	strb.w	r0, [r4], #-1
 800852a:	e7bd      	b.n	80084a8 <_format_int+0x2c>
 800852c:	f804 0901 	strb.w	r0, [r4], #-1
 8008530:	e7c4      	b.n	80084bc <_format_int+0x40>
 8008532:	f804 1901 	strb.w	r1, [r4], #-1
 8008536:	e7d0      	b.n	80084da <_format_int+0x5e>
 8008538:	4630      	mov	r0, r6
 800853a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800853e:	f7ff ff87 	bl	8008450 <_xputch>
 8008542:	e7d1      	b.n	80084e8 <_format_int+0x6c>
 8008544:	2120      	movs	r1, #32
 8008546:	4630      	mov	r0, r6
 8008548:	f7ff ff82 	bl	8008450 <_xputch>
 800854c:	3501      	adds	r5, #1
 800854e:	e7ce      	b.n	80084ee <_format_int+0x72>

08008550 <_format_hex>:
 8008550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008552:	b091      	sub	sp, #68	; 0x44
 8008554:	4606      	mov	r6, r0
 8008556:	6804      	ldr	r4, [r0, #0]
 8008558:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 800855c:	bb61      	cbnz	r1, 80085b8 <_format_hex+0x68>
 800855e:	2330      	movs	r3, #48	; 0x30
 8008560:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008564:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008568:	07e5      	lsls	r5, r4, #31
 800856a:	d507      	bpl.n	800857c <_format_hex+0x2c>
 800856c:	4669      	mov	r1, sp
 800856e:	2530      	movs	r5, #48	; 0x30
 8008570:	6870      	ldr	r0, [r6, #4]
 8008572:	1ad7      	subs	r7, r2, r3
 8008574:	4287      	cmp	r7, r0
 8008576:	da01      	bge.n	800857c <_format_hex+0x2c>
 8008578:	428b      	cmp	r3, r1
 800857a:	d831      	bhi.n	80085e0 <_format_hex+0x90>
 800857c:	06a0      	lsls	r0, r4, #26
 800857e:	d507      	bpl.n	8008590 <_format_hex+0x40>
 8008580:	4669      	mov	r1, sp
 8008582:	2530      	movs	r5, #48	; 0x30
 8008584:	68b0      	ldr	r0, [r6, #8]
 8008586:	1ad7      	subs	r7, r2, r3
 8008588:	4287      	cmp	r7, r0
 800858a:	da01      	bge.n	8008590 <_format_hex+0x40>
 800858c:	428b      	cmp	r3, r1
 800858e:	d82a      	bhi.n	80085e6 <_format_hex+0x96>
 8008590:	0661      	lsls	r1, r4, #25
 8008592:	d407      	bmi.n	80085a4 <_format_hex+0x54>
 8008594:	4669      	mov	r1, sp
 8008596:	2420      	movs	r4, #32
 8008598:	68b0      	ldr	r0, [r6, #8]
 800859a:	1ad5      	subs	r5, r2, r3
 800859c:	4285      	cmp	r5, r0
 800859e:	da01      	bge.n	80085a4 <_format_hex+0x54>
 80085a0:	428b      	cmp	r3, r1
 80085a2:	d823      	bhi.n	80085ec <_format_hex+0x9c>
 80085a4:	1ad5      	subs	r5, r2, r3
 80085a6:	1c5c      	adds	r4, r3, #1
 80085a8:	ab10      	add	r3, sp, #64	; 0x40
 80085aa:	429c      	cmp	r4, r3
 80085ac:	d321      	bcc.n	80085f2 <_format_hex+0xa2>
 80085ae:	68b3      	ldr	r3, [r6, #8]
 80085b0:	429d      	cmp	r5, r3
 80085b2:	db24      	blt.n	80085fe <_format_hex+0xae>
 80085b4:	b011      	add	sp, #68	; 0x44
 80085b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80085b8:	f014 0f02 	tst.w	r4, #2
 80085bc:	bf0c      	ite	eq
 80085be:	2757      	moveq	r7, #87	; 0x57
 80085c0:	2737      	movne	r7, #55	; 0x37
 80085c2:	4613      	mov	r3, r2
 80085c4:	466d      	mov	r5, sp
 80085c6:	f001 000f 	and.w	r0, r1, #15
 80085ca:	2809      	cmp	r0, #9
 80085cc:	bf94      	ite	ls
 80085ce:	3030      	addls	r0, #48	; 0x30
 80085d0:	19c0      	addhi	r0, r0, r7
 80085d2:	0909      	lsrs	r1, r1, #4
 80085d4:	f803 0901 	strb.w	r0, [r3], #-1
 80085d8:	d0c6      	beq.n	8008568 <_format_hex+0x18>
 80085da:	42ab      	cmp	r3, r5
 80085dc:	d1f3      	bne.n	80085c6 <_format_hex+0x76>
 80085de:	e7c3      	b.n	8008568 <_format_hex+0x18>
 80085e0:	f803 5901 	strb.w	r5, [r3], #-1
 80085e4:	e7c5      	b.n	8008572 <_format_hex+0x22>
 80085e6:	f803 5901 	strb.w	r5, [r3], #-1
 80085ea:	e7cc      	b.n	8008586 <_format_hex+0x36>
 80085ec:	f803 4901 	strb.w	r4, [r3], #-1
 80085f0:	e7d3      	b.n	800859a <_format_hex+0x4a>
 80085f2:	4630      	mov	r0, r6
 80085f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80085f8:	f7ff ff2a 	bl	8008450 <_xputch>
 80085fc:	e7d4      	b.n	80085a8 <_format_hex+0x58>
 80085fe:	2120      	movs	r1, #32
 8008600:	4630      	mov	r0, r6
 8008602:	f7ff ff25 	bl	8008450 <_xputch>
 8008606:	3501      	adds	r5, #1
 8008608:	e7d1      	b.n	80085ae <_format_hex+0x5e>
	...

0800860c <_vprintf>:
 800860c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008610:	2700      	movs	r7, #0
 8008612:	460b      	mov	r3, r1
 8008614:	4614      	mov	r4, r2
 8008616:	f04f 080a 	mov.w	r8, #10
 800861a:	b086      	sub	sp, #24
 800861c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8008620:	7819      	ldrb	r1, [r3, #0]
 8008622:	b919      	cbnz	r1, 800862c <_vprintf+0x20>
 8008624:	9804      	ldr	r0, [sp, #16]
 8008626:	b006      	add	sp, #24
 8008628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800862c:	2925      	cmp	r1, #37	; 0x25
 800862e:	f103 0601 	add.w	r6, r3, #1
 8008632:	d004      	beq.n	800863e <_vprintf+0x32>
 8008634:	a801      	add	r0, sp, #4
 8008636:	f7ff ff0b 	bl	8008450 <_xputch>
 800863a:	4633      	mov	r3, r6
 800863c:	e7f0      	b.n	8008620 <_vprintf+0x14>
 800863e:	785a      	ldrb	r2, [r3, #1]
 8008640:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8008644:	2a30      	cmp	r2, #48	; 0x30
 8008646:	9703      	str	r7, [sp, #12]
 8008648:	d126      	bne.n	8008698 <_vprintf+0x8c>
 800864a:	2220      	movs	r2, #32
 800864c:	9201      	str	r2, [sp, #4]
 800864e:	1c9e      	adds	r6, r3, #2
 8008650:	2200      	movs	r2, #0
 8008652:	4635      	mov	r5, r6
 8008654:	4613      	mov	r3, r2
 8008656:	7829      	ldrb	r1, [r5, #0]
 8008658:	462e      	mov	r6, r5
 800865a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800865e:	2809      	cmp	r0, #9
 8008660:	f105 0501 	add.w	r5, r5, #1
 8008664:	d91c      	bls.n	80086a0 <_vprintf+0x94>
 8008666:	b12a      	cbz	r2, 8008674 <_vprintf+0x68>
 8008668:	9303      	str	r3, [sp, #12]
 800866a:	b11b      	cbz	r3, 8008674 <_vprintf+0x68>
 800866c:	9b01      	ldr	r3, [sp, #4]
 800866e:	f043 0310 	orr.w	r3, r3, #16
 8008672:	9301      	str	r3, [sp, #4]
 8008674:	292e      	cmp	r1, #46	; 0x2e
 8008676:	d122      	bne.n	80086be <_vprintf+0xb2>
 8008678:	7873      	ldrb	r3, [r6, #1]
 800867a:	2b2a      	cmp	r3, #42	; 0x2a
 800867c:	d014      	beq.n	80086a8 <_vprintf+0x9c>
 800867e:	2100      	movs	r1, #0
 8008680:	460a      	mov	r2, r1
 8008682:	1c70      	adds	r0, r6, #1
 8008684:	7803      	ldrb	r3, [r0, #0]
 8008686:	4606      	mov	r6, r0
 8008688:	3b30      	subs	r3, #48	; 0x30
 800868a:	2b09      	cmp	r3, #9
 800868c:	f100 0001 	add.w	r0, r0, #1
 8008690:	d930      	bls.n	80086f4 <_vprintf+0xe8>
 8008692:	b181      	cbz	r1, 80086b6 <_vprintf+0xaa>
 8008694:	9202      	str	r2, [sp, #8]
 8008696:	e00e      	b.n	80086b6 <_vprintf+0xaa>
 8008698:	2a2d      	cmp	r2, #45	; 0x2d
 800869a:	d1d9      	bne.n	8008650 <_vprintf+0x44>
 800869c:	2240      	movs	r2, #64	; 0x40
 800869e:	e7d5      	b.n	800864c <_vprintf+0x40>
 80086a0:	2201      	movs	r2, #1
 80086a2:	fb08 0303 	mla	r3, r8, r3, r0
 80086a6:	e7d6      	b.n	8008656 <_vprintf+0x4a>
 80086a8:	f854 3b04 	ldr.w	r3, [r4], #4
 80086ac:	3602      	adds	r6, #2
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	bfb8      	it	lt
 80086b2:	425b      	neglt	r3, r3
 80086b4:	9302      	str	r3, [sp, #8]
 80086b6:	9b01      	ldr	r3, [sp, #4]
 80086b8:	f043 0301 	orr.w	r3, r3, #1
 80086bc:	9301      	str	r3, [sp, #4]
 80086be:	7833      	ldrb	r3, [r6, #0]
 80086c0:	2b6c      	cmp	r3, #108	; 0x6c
 80086c2:	bf04      	itt	eq
 80086c4:	9b01      	ldreq	r3, [sp, #4]
 80086c6:	3601      	addeq	r6, #1
 80086c8:	7831      	ldrb	r1, [r6, #0]
 80086ca:	bf04      	itt	eq
 80086cc:	f043 0304 	orreq.w	r3, r3, #4
 80086d0:	9301      	streq	r3, [sp, #4]
 80086d2:	2978      	cmp	r1, #120	; 0x78
 80086d4:	d8ae      	bhi.n	8008634 <_vprintf+0x28>
 80086d6:	296f      	cmp	r1, #111	; 0x6f
 80086d8:	d810      	bhi.n	80086fc <_vprintf+0xf0>
 80086da:	2963      	cmp	r1, #99	; 0x63
 80086dc:	d048      	beq.n	8008770 <_vprintf+0x164>
 80086de:	d827      	bhi.n	8008730 <_vprintf+0x124>
 80086e0:	2958      	cmp	r1, #88	; 0x58
 80086e2:	d1a7      	bne.n	8008634 <_vprintf+0x28>
 80086e4:	9b01      	ldr	r3, [sp, #4]
 80086e6:	f043 0302 	orr.w	r3, r3, #2
 80086ea:	9301      	str	r3, [sp, #4]
 80086ec:	4625      	mov	r5, r4
 80086ee:	f855 1b04 	ldr.w	r1, [r5], #4
 80086f2:	e056      	b.n	80087a2 <_vprintf+0x196>
 80086f4:	2101      	movs	r1, #1
 80086f6:	fb08 3202 	mla	r2, r8, r2, r3
 80086fa:	e7c3      	b.n	8008684 <_vprintf+0x78>
 80086fc:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 8008700:	2b08      	cmp	r3, #8
 8008702:	d897      	bhi.n	8008634 <_vprintf+0x28>
 8008704:	a201      	add	r2, pc, #4	; (adr r2, 800870c <_vprintf+0x100>)
 8008706:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800870a:	bf00      	nop
 800870c:	08008783 	stmdaeq	r0, {r0, r1, r7, r8, r9, sl, pc}
 8008710:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 8008714:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 8008718:	080087ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r8, r9, sl, pc}
 800871c:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 8008720:	0800881f 	stmdaeq	r0, {r0, r1, r2, r3, r4, fp, pc}
 8008724:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 8008728:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 800872c:	080086ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, pc}
 8008730:	2964      	cmp	r1, #100	; 0x64
 8008732:	d002      	beq.n	800873a <_vprintf+0x12e>
 8008734:	2969      	cmp	r1, #105	; 0x69
 8008736:	f47f af7d 	bne.w	8008634 <_vprintf+0x28>
 800873a:	9901      	ldr	r1, [sp, #4]
 800873c:	074d      	lsls	r5, r1, #29
 800873e:	bf51      	iteee	pl
 8008740:	4625      	movpl	r5, r4
 8008742:	3407      	addmi	r4, #7
 8008744:	f024 0407 	bicmi.w	r4, r4, #7
 8008748:	4625      	movmi	r5, r4
 800874a:	bf55      	itete	pl
 800874c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8008750:	6863      	ldrmi	r3, [r4, #4]
 8008752:	17d3      	asrpl	r3, r2, #31
 8008754:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8008758:	2b00      	cmp	r3, #0
 800875a:	da05      	bge.n	8008768 <_vprintf+0x15c>
 800875c:	f041 0108 	orr.w	r1, r1, #8
 8008760:	4252      	negs	r2, r2
 8008762:	9101      	str	r1, [sp, #4]
 8008764:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008768:	a801      	add	r0, sp, #4
 800876a:	f7ff fe87 	bl	800847c <_format_int>
 800876e:	e005      	b.n	800877c <_vprintf+0x170>
 8008770:	4625      	mov	r5, r4
 8008772:	a801      	add	r0, sp, #4
 8008774:	f855 1b04 	ldr.w	r1, [r5], #4
 8008778:	f7ff fe6a 	bl	8008450 <_xputch>
 800877c:	462c      	mov	r4, r5
 800877e:	3601      	adds	r6, #1
 8008780:	e75b      	b.n	800863a <_vprintf+0x2e>
 8008782:	2308      	movs	r3, #8
 8008784:	4625      	mov	r5, r4
 8008786:	9303      	str	r3, [sp, #12]
 8008788:	2320      	movs	r3, #32
 800878a:	2130      	movs	r1, #48	; 0x30
 800878c:	f855 4b04 	ldr.w	r4, [r5], #4
 8008790:	a801      	add	r0, sp, #4
 8008792:	9301      	str	r3, [sp, #4]
 8008794:	f7ff fe5c 	bl	8008450 <_xputch>
 8008798:	2178      	movs	r1, #120	; 0x78
 800879a:	a801      	add	r0, sp, #4
 800879c:	f7ff fe58 	bl	8008450 <_xputch>
 80087a0:	4621      	mov	r1, r4
 80087a2:	a801      	add	r0, sp, #4
 80087a4:	f7ff fed4 	bl	8008550 <_format_hex>
 80087a8:	e7e8      	b.n	800877c <_vprintf+0x170>
 80087aa:	4625      	mov	r5, r4
 80087ac:	2400      	movs	r4, #0
 80087ae:	f855 9b04 	ldr.w	r9, [r5], #4
 80087b2:	f819 3004 	ldrb.w	r3, [r9, r4]
 80087b6:	b993      	cbnz	r3, 80087de <_vprintf+0x1d2>
 80087b8:	9b01      	ldr	r3, [sp, #4]
 80087ba:	07d9      	lsls	r1, r3, #31
 80087bc:	d503      	bpl.n	80087c6 <_vprintf+0x1ba>
 80087be:	9b02      	ldr	r3, [sp, #8]
 80087c0:	429c      	cmp	r4, r3
 80087c2:	bfa8      	it	ge
 80087c4:	461c      	movge	r4, r3
 80087c6:	9b01      	ldr	r3, [sp, #4]
 80087c8:	f104 0a01 	add.w	sl, r4, #1
 80087cc:	065a      	lsls	r2, r3, #25
 80087ce:	d403      	bmi.n	80087d8 <_vprintf+0x1cc>
 80087d0:	9b03      	ldr	r3, [sp, #12]
 80087d2:	429c      	cmp	r4, r3
 80087d4:	db05      	blt.n	80087e2 <_vprintf+0x1d6>
 80087d6:	4654      	mov	r4, sl
 80087d8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087dc:	e00d      	b.n	80087fa <_vprintf+0x1ee>
 80087de:	3401      	adds	r4, #1
 80087e0:	e7e7      	b.n	80087b2 <_vprintf+0x1a6>
 80087e2:	2120      	movs	r1, #32
 80087e4:	a801      	add	r0, sp, #4
 80087e6:	f7ff fe33 	bl	8008450 <_xputch>
 80087ea:	4654      	mov	r4, sl
 80087ec:	e7eb      	b.n	80087c6 <_vprintf+0x1ba>
 80087ee:	a801      	add	r0, sp, #4
 80087f0:	f7ff fe2e 	bl	8008450 <_xputch>
 80087f4:	9b02      	ldr	r3, [sp, #8]
 80087f6:	3b01      	subs	r3, #1
 80087f8:	9302      	str	r3, [sp, #8]
 80087fa:	9b01      	ldr	r3, [sp, #4]
 80087fc:	07db      	lsls	r3, r3, #31
 80087fe:	d501      	bpl.n	8008804 <_vprintf+0x1f8>
 8008800:	9b02      	ldr	r3, [sp, #8]
 8008802:	b11b      	cbz	r3, 800880c <_vprintf+0x200>
 8008804:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008808:	2900      	cmp	r1, #0
 800880a:	d1f0      	bne.n	80087ee <_vprintf+0x1e2>
 800880c:	9b03      	ldr	r3, [sp, #12]
 800880e:	42a3      	cmp	r3, r4
 8008810:	ddb4      	ble.n	800877c <_vprintf+0x170>
 8008812:	2120      	movs	r1, #32
 8008814:	a801      	add	r0, sp, #4
 8008816:	f7ff fe1b 	bl	8008450 <_xputch>
 800881a:	3401      	adds	r4, #1
 800881c:	e7f6      	b.n	800880c <_vprintf+0x200>
 800881e:	9b01      	ldr	r3, [sp, #4]
 8008820:	f013 0304 	ands.w	r3, r3, #4
 8008824:	bf1d      	ittte	ne
 8008826:	3407      	addne	r4, #7
 8008828:	f024 0407 	bicne.w	r4, r4, #7
 800882c:	4625      	movne	r5, r4
 800882e:	4625      	moveq	r5, r4
 8008830:	bf1a      	itte	ne
 8008832:	f855 2b08 	ldrne.w	r2, [r5], #8
 8008836:	6863      	ldrne	r3, [r4, #4]
 8008838:	f855 2b04 	ldreq.w	r2, [r5], #4
 800883c:	e794      	b.n	8008768 <_vprintf+0x15c>
 800883e:	bf00      	nop

08008840 <printf>:
 8008840:	b40f      	push	{r0, r1, r2, r3}
 8008842:	b507      	push	{r0, r1, r2, lr}
 8008844:	aa04      	add	r2, sp, #16
 8008846:	f852 1b04 	ldr.w	r1, [r2], #4
 800884a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800884e:	9201      	str	r2, [sp, #4]
 8008850:	f7ff fedc 	bl	800860c <_vprintf>
 8008854:	b003      	add	sp, #12
 8008856:	f85d eb04 	ldr.w	lr, [sp], #4
 800885a:	b004      	add	sp, #16
 800885c:	4770      	bx	lr
	...

08008860 <snprintf>:
 8008860:	b40c      	push	{r2, r3}
 8008862:	460b      	mov	r3, r1
 8008864:	b513      	push	{r0, r1, r4, lr}
 8008866:	4c09      	ldr	r4, [pc, #36]	; (800888c <snprintf+0x2c>)
 8008868:	aa04      	add	r2, sp, #16
 800886a:	f852 1b04 	ldr.w	r1, [r2], #4
 800886e:	6020      	str	r0, [r4, #0]
 8008870:	4618      	mov	r0, r3
 8008872:	9201      	str	r2, [sp, #4]
 8008874:	f7ff feca 	bl	800860c <_vprintf>
 8008878:	2300      	movs	r3, #0
 800887a:	6822      	ldr	r2, [r4, #0]
 800887c:	6023      	str	r3, [r4, #0]
 800887e:	7013      	strb	r3, [r2, #0]
 8008880:	b002      	add	sp, #8
 8008882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008886:	b002      	add	sp, #8
 8008888:	4770      	bx	lr
 800888a:	bf00      	nop
 800888c:	20000090 	mulcs	r0, r0, r0

08008890 <vsnprintf>:
 8008890:	b538      	push	{r3, r4, r5, lr}
 8008892:	4605      	mov	r5, r0
 8008894:	4c05      	ldr	r4, [pc, #20]	; (80088ac <vsnprintf+0x1c>)
 8008896:	4608      	mov	r0, r1
 8008898:	4611      	mov	r1, r2
 800889a:	461a      	mov	r2, r3
 800889c:	6025      	str	r5, [r4, #0]
 800889e:	f7ff feb5 	bl	800860c <_vprintf>
 80088a2:	2300      	movs	r3, #0
 80088a4:	6822      	ldr	r2, [r4, #0]
 80088a6:	6023      	str	r3, [r4, #0]
 80088a8:	7013      	strb	r3, [r2, #0]
 80088aa:	bd38      	pop	{r3, r4, r5, pc}
 80088ac:	20000090 	mulcs	r0, r0, r0

080088b0 <__udivmoddi4>:
 80088b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088b4:	9e08      	ldr	r6, [sp, #32]
 80088b6:	460d      	mov	r5, r1
 80088b8:	4604      	mov	r4, r0
 80088ba:	468e      	mov	lr, r1
 80088bc:	2b00      	cmp	r3, #0
 80088be:	d14c      	bne.n	800895a <__udivmoddi4+0xaa>
 80088c0:	428a      	cmp	r2, r1
 80088c2:	4694      	mov	ip, r2
 80088c4:	d967      	bls.n	8008996 <__udivmoddi4+0xe6>
 80088c6:	fab2 f382 	clz	r3, r2
 80088ca:	b153      	cbz	r3, 80088e2 <__udivmoddi4+0x32>
 80088cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80088d0:	f1c3 0220 	rsb	r2, r3, #32
 80088d4:	fa01 fe03 	lsl.w	lr, r1, r3
 80088d8:	fa20 f202 	lsr.w	r2, r0, r2
 80088dc:	ea42 0e0e 	orr.w	lr, r2, lr
 80088e0:	409c      	lsls	r4, r3
 80088e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80088e6:	fbbe f1f7 	udiv	r1, lr, r7
 80088ea:	fa1f f58c 	uxth.w	r5, ip
 80088ee:	fb07 ee11 	mls	lr, r7, r1, lr
 80088f2:	fb01 f005 	mul.w	r0, r1, r5
 80088f6:	0c22      	lsrs	r2, r4, #16
 80088f8:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80088fc:	4290      	cmp	r0, r2
 80088fe:	d90a      	bls.n	8008916 <__udivmoddi4+0x66>
 8008900:	eb1c 0202 	adds.w	r2, ip, r2
 8008904:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8008908:	f080 8119 	bcs.w	8008b3e <__udivmoddi4+0x28e>
 800890c:	4290      	cmp	r0, r2
 800890e:	f240 8116 	bls.w	8008b3e <__udivmoddi4+0x28e>
 8008912:	3902      	subs	r1, #2
 8008914:	4462      	add	r2, ip
 8008916:	1a12      	subs	r2, r2, r0
 8008918:	fbb2 f0f7 	udiv	r0, r2, r7
 800891c:	fb07 2210 	mls	r2, r7, r0, r2
 8008920:	fb00 f505 	mul.w	r5, r0, r5
 8008924:	b2a4      	uxth	r4, r4
 8008926:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800892a:	42a5      	cmp	r5, r4
 800892c:	d90a      	bls.n	8008944 <__udivmoddi4+0x94>
 800892e:	eb1c 0404 	adds.w	r4, ip, r4
 8008932:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8008936:	f080 8104 	bcs.w	8008b42 <__udivmoddi4+0x292>
 800893a:	42a5      	cmp	r5, r4
 800893c:	f240 8101 	bls.w	8008b42 <__udivmoddi4+0x292>
 8008940:	4464      	add	r4, ip
 8008942:	3802      	subs	r0, #2
 8008944:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8008948:	2100      	movs	r1, #0
 800894a:	1b64      	subs	r4, r4, r5
 800894c:	b11e      	cbz	r6, 8008956 <__udivmoddi4+0xa6>
 800894e:	40dc      	lsrs	r4, r3
 8008950:	2300      	movs	r3, #0
 8008952:	e9c6 4300 	strd	r4, r3, [r6]
 8008956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800895a:	428b      	cmp	r3, r1
 800895c:	d908      	bls.n	8008970 <__udivmoddi4+0xc0>
 800895e:	2e00      	cmp	r6, #0
 8008960:	f000 80ea 	beq.w	8008b38 <__udivmoddi4+0x288>
 8008964:	2100      	movs	r1, #0
 8008966:	e9c6 0500 	strd	r0, r5, [r6]
 800896a:	4608      	mov	r0, r1
 800896c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008970:	fab3 f183 	clz	r1, r3
 8008974:	2900      	cmp	r1, #0
 8008976:	d148      	bne.n	8008a0a <__udivmoddi4+0x15a>
 8008978:	42ab      	cmp	r3, r5
 800897a:	d302      	bcc.n	8008982 <__udivmoddi4+0xd2>
 800897c:	4282      	cmp	r2, r0
 800897e:	f200 80f8 	bhi.w	8008b72 <__udivmoddi4+0x2c2>
 8008982:	1a84      	subs	r4, r0, r2
 8008984:	eb65 0203 	sbc.w	r2, r5, r3
 8008988:	2001      	movs	r0, #1
 800898a:	4696      	mov	lr, r2
 800898c:	2e00      	cmp	r6, #0
 800898e:	d0e2      	beq.n	8008956 <__udivmoddi4+0xa6>
 8008990:	e9c6 4e00 	strd	r4, lr, [r6]
 8008994:	e7df      	b.n	8008956 <__udivmoddi4+0xa6>
 8008996:	b902      	cbnz	r2, 800899a <__udivmoddi4+0xea>
 8008998:	deff      	udf	#255	; 0xff
 800899a:	fab2 f382 	clz	r3, r2
 800899e:	2b00      	cmp	r3, #0
 80089a0:	f040 808e 	bne.w	8008ac0 <__udivmoddi4+0x210>
 80089a4:	1a88      	subs	r0, r1, r2
 80089a6:	2101      	movs	r1, #1
 80089a8:	0c17      	lsrs	r7, r2, #16
 80089aa:	fa1f fe82 	uxth.w	lr, r2
 80089ae:	fbb0 f5f7 	udiv	r5, r0, r7
 80089b2:	fb07 0015 	mls	r0, r7, r5, r0
 80089b6:	0c22      	lsrs	r2, r4, #16
 80089b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80089bc:	fb0e f005 	mul.w	r0, lr, r5
 80089c0:	4290      	cmp	r0, r2
 80089c2:	d908      	bls.n	80089d6 <__udivmoddi4+0x126>
 80089c4:	eb1c 0202 	adds.w	r2, ip, r2
 80089c8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80089cc:	d202      	bcs.n	80089d4 <__udivmoddi4+0x124>
 80089ce:	4290      	cmp	r0, r2
 80089d0:	f200 80cc 	bhi.w	8008b6c <__udivmoddi4+0x2bc>
 80089d4:	4645      	mov	r5, r8
 80089d6:	1a12      	subs	r2, r2, r0
 80089d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80089dc:	fb07 2210 	mls	r2, r7, r0, r2
 80089e0:	fb0e fe00 	mul.w	lr, lr, r0
 80089e4:	b2a4      	uxth	r4, r4
 80089e6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80089ea:	45a6      	cmp	lr, r4
 80089ec:	d908      	bls.n	8008a00 <__udivmoddi4+0x150>
 80089ee:	eb1c 0404 	adds.w	r4, ip, r4
 80089f2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80089f6:	d202      	bcs.n	80089fe <__udivmoddi4+0x14e>
 80089f8:	45a6      	cmp	lr, r4
 80089fa:	f200 80b4 	bhi.w	8008b66 <__udivmoddi4+0x2b6>
 80089fe:	4610      	mov	r0, r2
 8008a00:	eba4 040e 	sub.w	r4, r4, lr
 8008a04:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8008a08:	e7a0      	b.n	800894c <__udivmoddi4+0x9c>
 8008a0a:	f1c1 0720 	rsb	r7, r1, #32
 8008a0e:	408b      	lsls	r3, r1
 8008a10:	fa22 fc07 	lsr.w	ip, r2, r7
 8008a14:	ea4c 0c03 	orr.w	ip, ip, r3
 8008a18:	fa25 fa07 	lsr.w	sl, r5, r7
 8008a1c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8008a20:	fbba f8f9 	udiv	r8, sl, r9
 8008a24:	408d      	lsls	r5, r1
 8008a26:	fa20 f307 	lsr.w	r3, r0, r7
 8008a2a:	fb09 aa18 	mls	sl, r9, r8, sl
 8008a2e:	fa1f fe8c 	uxth.w	lr, ip
 8008a32:	432b      	orrs	r3, r5
 8008a34:	fa00 f501 	lsl.w	r5, r0, r1
 8008a38:	fb08 f00e 	mul.w	r0, r8, lr
 8008a3c:	0c1c      	lsrs	r4, r3, #16
 8008a3e:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8008a42:	42a0      	cmp	r0, r4
 8008a44:	fa02 f201 	lsl.w	r2, r2, r1
 8008a48:	d90b      	bls.n	8008a62 <__udivmoddi4+0x1b2>
 8008a4a:	eb1c 0404 	adds.w	r4, ip, r4
 8008a4e:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008a52:	f080 8086 	bcs.w	8008b62 <__udivmoddi4+0x2b2>
 8008a56:	42a0      	cmp	r0, r4
 8008a58:	f240 8083 	bls.w	8008b62 <__udivmoddi4+0x2b2>
 8008a5c:	f1a8 0802 	sub.w	r8, r8, #2
 8008a60:	4464      	add	r4, ip
 8008a62:	1a24      	subs	r4, r4, r0
 8008a64:	b298      	uxth	r0, r3
 8008a66:	fbb4 f3f9 	udiv	r3, r4, r9
 8008a6a:	fb09 4413 	mls	r4, r9, r3, r4
 8008a6e:	fb03 fe0e 	mul.w	lr, r3, lr
 8008a72:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8008a76:	45a6      	cmp	lr, r4
 8008a78:	d908      	bls.n	8008a8c <__udivmoddi4+0x1dc>
 8008a7a:	eb1c 0404 	adds.w	r4, ip, r4
 8008a7e:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8008a82:	d26a      	bcs.n	8008b5a <__udivmoddi4+0x2aa>
 8008a84:	45a6      	cmp	lr, r4
 8008a86:	d968      	bls.n	8008b5a <__udivmoddi4+0x2aa>
 8008a88:	3b02      	subs	r3, #2
 8008a8a:	4464      	add	r4, ip
 8008a8c:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8008a90:	fba0 9302 	umull	r9, r3, r0, r2
 8008a94:	eba4 040e 	sub.w	r4, r4, lr
 8008a98:	429c      	cmp	r4, r3
 8008a9a:	46c8      	mov	r8, r9
 8008a9c:	469e      	mov	lr, r3
 8008a9e:	d354      	bcc.n	8008b4a <__udivmoddi4+0x29a>
 8008aa0:	d051      	beq.n	8008b46 <__udivmoddi4+0x296>
 8008aa2:	2e00      	cmp	r6, #0
 8008aa4:	d067      	beq.n	8008b76 <__udivmoddi4+0x2c6>
 8008aa6:	ebb5 0308 	subs.w	r3, r5, r8
 8008aaa:	eb64 040e 	sbc.w	r4, r4, lr
 8008aae:	40cb      	lsrs	r3, r1
 8008ab0:	fa04 f707 	lsl.w	r7, r4, r7
 8008ab4:	431f      	orrs	r7, r3
 8008ab6:	40cc      	lsrs	r4, r1
 8008ab8:	e9c6 7400 	strd	r7, r4, [r6]
 8008abc:	2100      	movs	r1, #0
 8008abe:	e74a      	b.n	8008956 <__udivmoddi4+0xa6>
 8008ac0:	fa02 fc03 	lsl.w	ip, r2, r3
 8008ac4:	f1c3 0020 	rsb	r0, r3, #32
 8008ac8:	40c1      	lsrs	r1, r0
 8008aca:	409d      	lsls	r5, r3
 8008acc:	fa24 f000 	lsr.w	r0, r4, r0
 8008ad0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8008ad4:	4328      	orrs	r0, r5
 8008ad6:	fbb1 f5f7 	udiv	r5, r1, r7
 8008ada:	fb07 1115 	mls	r1, r7, r5, r1
 8008ade:	fa1f fe8c 	uxth.w	lr, ip
 8008ae2:	0c02      	lsrs	r2, r0, #16
 8008ae4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008ae8:	fb05 f10e 	mul.w	r1, r5, lr
 8008aec:	4291      	cmp	r1, r2
 8008aee:	fa04 f403 	lsl.w	r4, r4, r3
 8008af2:	d908      	bls.n	8008b06 <__udivmoddi4+0x256>
 8008af4:	eb1c 0202 	adds.w	r2, ip, r2
 8008af8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8008afc:	d22f      	bcs.n	8008b5e <__udivmoddi4+0x2ae>
 8008afe:	4291      	cmp	r1, r2
 8008b00:	d92d      	bls.n	8008b5e <__udivmoddi4+0x2ae>
 8008b02:	3d02      	subs	r5, #2
 8008b04:	4462      	add	r2, ip
 8008b06:	1a52      	subs	r2, r2, r1
 8008b08:	fbb2 f1f7 	udiv	r1, r2, r7
 8008b0c:	fb07 2211 	mls	r2, r7, r1, r2
 8008b10:	b280      	uxth	r0, r0
 8008b12:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8008b16:	fb01 f20e 	mul.w	r2, r1, lr
 8008b1a:	4282      	cmp	r2, r0
 8008b1c:	d908      	bls.n	8008b30 <__udivmoddi4+0x280>
 8008b1e:	eb1c 0000 	adds.w	r0, ip, r0
 8008b22:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8008b26:	d216      	bcs.n	8008b56 <__udivmoddi4+0x2a6>
 8008b28:	4282      	cmp	r2, r0
 8008b2a:	d914      	bls.n	8008b56 <__udivmoddi4+0x2a6>
 8008b2c:	3902      	subs	r1, #2
 8008b2e:	4460      	add	r0, ip
 8008b30:	1a80      	subs	r0, r0, r2
 8008b32:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8008b36:	e73a      	b.n	80089ae <__udivmoddi4+0xfe>
 8008b38:	4631      	mov	r1, r6
 8008b3a:	4630      	mov	r0, r6
 8008b3c:	e70b      	b.n	8008956 <__udivmoddi4+0xa6>
 8008b3e:	4671      	mov	r1, lr
 8008b40:	e6e9      	b.n	8008916 <__udivmoddi4+0x66>
 8008b42:	4610      	mov	r0, r2
 8008b44:	e6fe      	b.n	8008944 <__udivmoddi4+0x94>
 8008b46:	454d      	cmp	r5, r9
 8008b48:	d2ab      	bcs.n	8008aa2 <__udivmoddi4+0x1f2>
 8008b4a:	ebb9 0802 	subs.w	r8, r9, r2
 8008b4e:	eb63 0e0c 	sbc.w	lr, r3, ip
 8008b52:	3801      	subs	r0, #1
 8008b54:	e7a5      	b.n	8008aa2 <__udivmoddi4+0x1f2>
 8008b56:	4641      	mov	r1, r8
 8008b58:	e7ea      	b.n	8008b30 <__udivmoddi4+0x280>
 8008b5a:	4603      	mov	r3, r0
 8008b5c:	e796      	b.n	8008a8c <__udivmoddi4+0x1dc>
 8008b5e:	4645      	mov	r5, r8
 8008b60:	e7d1      	b.n	8008b06 <__udivmoddi4+0x256>
 8008b62:	46d0      	mov	r8, sl
 8008b64:	e77d      	b.n	8008a62 <__udivmoddi4+0x1b2>
 8008b66:	4464      	add	r4, ip
 8008b68:	3802      	subs	r0, #2
 8008b6a:	e749      	b.n	8008a00 <__udivmoddi4+0x150>
 8008b6c:	3d02      	subs	r5, #2
 8008b6e:	4462      	add	r2, ip
 8008b70:	e731      	b.n	80089d6 <__udivmoddi4+0x126>
 8008b72:	4608      	mov	r0, r1
 8008b74:	e70a      	b.n	800898c <__udivmoddi4+0xdc>
 8008b76:	4631      	mov	r1, r6
 8008b78:	e6ed      	b.n	8008956 <__udivmoddi4+0xa6>
 8008b7a:	bf00      	nop

08008b7c <RemoteConfig::HandleList()>:
 8008b7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008b80:	6801      	ldr	r1, [r0, #0]
 8008b82:	4604      	mov	r4, r0
 8008b84:	2012      	movs	r0, #18
 8008b86:	f04f 080c 	mov.w	r8, #12
 8008b8a:	4a29      	ldr	r2, [pc, #164]	; (8008c30 <RemoteConfig::HandleList()+0xb4>)
 8008b8c:	4b29      	ldr	r3, [pc, #164]	; (8008c34 <RemoteConfig::HandleList()+0xb8>)
 8008b8e:	fb00 2201 	mla	r2, r0, r1, r2
 8008b92:	6860      	ldr	r0, [r4, #4]
 8008b94:	4928      	ldr	r1, [pc, #160]	; (8008c38 <RemoteConfig::HandleList()+0xbc>)
 8008b96:	681b      	ldr	r3, [r3, #0]
 8008b98:	fb08 1100 	mla	r1, r8, r0, r1
 8008b9c:	4e27      	ldr	r6, [pc, #156]	; (8008c3c <RemoteConfig::HandleList()+0xc0>)
 8008b9e:	4828      	ldr	r0, [pc, #160]	; (8008c40 <RemoteConfig::HandleList()+0xc4>)
 8008ba0:	695f      	ldr	r7, [r3, #20]
 8008ba2:	6835      	ldr	r5, [r6, #0]
 8008ba4:	f890 9009 	ldrb.w	r9, [r0, #9]
 8008ba8:	b2fb      	uxtb	r3, r7
 8008baa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8008bae:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8008bb2:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8008bb6:	b089      	sub	sp, #36	; 0x24
 8008bb8:	3507      	adds	r5, #7
 8008bba:	0e3f      	lsrs	r7, r7, #24
 8008bbc:	f1b9 0f00 	cmp.w	r9, #0
 8008bc0:	d01d      	beq.n	8008bfe <RemoteConfig::HandleList()+0x82>
 8008bc2:	3009      	adds	r0, #9
 8008bc4:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8008bc8:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8008bcc:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008bd0:	4628      	mov	r0, r5
 8008bd2:	e9cd e701 	strd	lr, r7, [sp, #4]
 8008bd6:	4a1b      	ldr	r2, [pc, #108]	; (8008c44 <RemoteConfig::HandleList()+0xc8>)
 8008bd8:	f8cd c000 	str.w	ip, [sp]
 8008bdc:	f7ff fe40 	bl	8008860 <snprintf>
 8008be0:	69e3      	ldr	r3, [r4, #28]
 8008be2:	2b05      	cmp	r3, #5
 8008be4:	d118      	bne.n	8008c18 <RemoteConfig::HandleList()+0x9c>
 8008be6:	f642 1305 	movw	r3, #10501	; 0x2905
 8008bea:	9300      	str	r3, [sp, #0]
 8008bec:	69a3      	ldr	r3, [r4, #24]
 8008bee:	b282      	uxth	r2, r0
 8008bf0:	4629      	mov	r1, r5
 8008bf2:	7d20      	ldrb	r0, [r4, #20]
 8008bf4:	f003 f9cc 	bl	800bf90 <udp_send>
 8008bf8:	b009      	add	sp, #36	; 0x24
 8008bfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008bfe:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8008c02:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8008c06:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008c0a:	4628      	mov	r0, r5
 8008c0c:	e9cd ce00 	strd	ip, lr, [sp]
 8008c10:	4a0d      	ldr	r2, [pc, #52]	; (8008c48 <RemoteConfig::HandleList()+0xcc>)
 8008c12:	f7ff fe25 	bl	8008860 <snprintf>
 8008c16:	e7e3      	b.n	8008be0 <RemoteConfig::HandleList()+0x64>
 8008c18:	2b06      	cmp	r3, #6
 8008c1a:	d1ed      	bne.n	8008bf8 <RemoteConfig::HandleList()+0x7c>
 8008c1c:	6833      	ldr	r3, [r6, #0]
 8008c1e:	799b      	ldrb	r3, [r3, #6]
 8008c20:	2b2a      	cmp	r3, #42	; 0x2a
 8008c22:	d1e9      	bne.n	8008bf8 <RemoteConfig::HandleList()+0x7c>
 8008c24:	f642 1305 	movw	r3, #10501	; 0x2905
 8008c28:	9300      	str	r3, [sp, #0]
 8008c2a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008c2e:	e7de      	b.n	8008bee <RemoteConfig::HandleList()+0x72>
 8008c30:	08011108 	stmdaeq	r1, {r3, r8, ip}
 8008c34:	20008970 	andcs	r8, r0, r0, ror r9
 8008c38:	080111ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, ip}
 8008c3c:	20000094 	mulcs	r0, r4, r0
 8008c40:	20000098 	mulcs	r0, r8, r0
 8008c44:	0801101d 	stmdaeq	r1, {r0, r2, r3, r4, ip}
 8008c48:	08011036 	stmdaeq	r1, {r1, r2, r4, r5, ip}

08008c4c <RemoteConfig::HandleDisplayGet()>:
 8008c4c:	69c3      	ldr	r3, [r0, #28]
 8008c4e:	2b08      	cmp	r3, #8
 8008c50:	d11b      	bne.n	8008c8a <RemoteConfig::HandleDisplayGet()+0x3e>
 8008c52:	4b0e      	ldr	r3, [pc, #56]	; (8008c8c <RemoteConfig::HandleDisplayGet()+0x40>)
 8008c54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c56:	681b      	ldr	r3, [r3, #0]
 8008c58:	4d0d      	ldr	r5, [pc, #52]	; (8008c90 <RemoteConfig::HandleDisplayGet()+0x44>)
 8008c5a:	7c19      	ldrb	r1, [r3, #16]
 8008c5c:	4a0d      	ldr	r2, [pc, #52]	; (8008c94 <RemoteConfig::HandleDisplayGet()+0x48>)
 8008c5e:	4b0e      	ldr	r3, [pc, #56]	; (8008c98 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8008c60:	4604      	mov	r4, r0
 8008c62:	2900      	cmp	r1, #0
 8008c64:	bf18      	it	ne
 8008c66:	4613      	movne	r3, r2
 8008c68:	6828      	ldr	r0, [r5, #0]
 8008c6a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008c6e:	4a0b      	ldr	r2, [pc, #44]	; (8008c9c <RemoteConfig::HandleDisplayGet()+0x50>)
 8008c70:	f7ff fdf6 	bl	8008860 <snprintf>
 8008c74:	f642 1305 	movw	r3, #10501	; 0x2905
 8008c78:	9300      	str	r3, [sp, #0]
 8008c7a:	b282      	uxth	r2, r0
 8008c7c:	69a3      	ldr	r3, [r4, #24]
 8008c7e:	6829      	ldr	r1, [r5, #0]
 8008c80:	7d20      	ldrb	r0, [r4, #20]
 8008c82:	f003 f985 	bl	800bf90 <udp_send>
 8008c86:	b003      	add	sp, #12
 8008c88:	bd30      	pop	{r4, r5, pc}
 8008c8a:	4770      	bx	lr
 8008c8c:	20009f8c 	andcs	r9, r0, ip, lsl #31
 8008c90:	20000094 	mulcs	r0, r4, r0
 8008c94:	0801104f 	stmdaeq	r1, {r0, r1, r2, r3, r6, ip}
 8008c98:	0801104c 	stmdaeq	r1, {r2, r3, r6, ip}
 8008c9c:	08011053 	stmdaeq	r1, {r0, r1, r4, r6, ip}

08008ca0 <RemoteConfig::HandleTftpGet()>:
 8008ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008ca2:	4604      	mov	r4, r0
 8008ca4:	f000 fd84 	bl	80097b0 <RemoteConfig::PlatformHandleTftpGet()>
 8008ca8:	69e3      	ldr	r3, [r4, #28]
 8008caa:	2b05      	cmp	r3, #5
 8008cac:	d116      	bne.n	8008cdc <RemoteConfig::HandleTftpGet()+0x3c>
 8008cae:	f894 1020 	ldrb.w	r1, [r4, #32]
 8008cb2:	4d0b      	ldr	r5, [pc, #44]	; (8008ce0 <RemoteConfig::HandleTftpGet()+0x40>)
 8008cb4:	4a0b      	ldr	r2, [pc, #44]	; (8008ce4 <RemoteConfig::HandleTftpGet()+0x44>)
 8008cb6:	4b0c      	ldr	r3, [pc, #48]	; (8008ce8 <RemoteConfig::HandleTftpGet()+0x48>)
 8008cb8:	6828      	ldr	r0, [r5, #0]
 8008cba:	2900      	cmp	r1, #0
 8008cbc:	bf08      	it	eq
 8008cbe:	4613      	moveq	r3, r2
 8008cc0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008cc4:	4a09      	ldr	r2, [pc, #36]	; (8008cec <RemoteConfig::HandleTftpGet()+0x4c>)
 8008cc6:	f7ff fdcb 	bl	8008860 <snprintf>
 8008cca:	f642 1305 	movw	r3, #10501	; 0x2905
 8008cce:	b282      	uxth	r2, r0
 8008cd0:	9300      	str	r3, [sp, #0]
 8008cd2:	6829      	ldr	r1, [r5, #0]
 8008cd4:	69a3      	ldr	r3, [r4, #24]
 8008cd6:	7d20      	ldrb	r0, [r4, #20]
 8008cd8:	f003 f95a 	bl	800bf90 <udp_send>
 8008cdc:	b003      	add	sp, #12
 8008cde:	bd30      	pop	{r4, r5, pc}
 8008ce0:	20000094 	mulcs	r0, r4, r0
 8008ce4:	0801104f 	stmdaeq	r1, {r0, r1, r2, r3, r6, ip}
 8008ce8:	0801104c 	stmdaeq	r1, {r2, r3, r6, ip}
 8008cec:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}

08008cf0 <RemoteConfig::HandleVersion()>:
 8008cf0:	69c3      	ldr	r3, [r0, #28]
 8008cf2:	2b08      	cmp	r3, #8
 8008cf4:	d114      	bne.n	8008d20 <RemoteConfig::HandleVersion()+0x30>
 8008cf6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008cf8:	4d0a      	ldr	r5, [pc, #40]	; (8008d24 <RemoteConfig::HandleVersion()+0x34>)
 8008cfa:	4604      	mov	r4, r0
 8008cfc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008d00:	4b09      	ldr	r3, [pc, #36]	; (8008d28 <RemoteConfig::HandleVersion()+0x38>)
 8008d02:	4a0a      	ldr	r2, [pc, #40]	; (8008d2c <RemoteConfig::HandleVersion()+0x3c>)
 8008d04:	6828      	ldr	r0, [r5, #0]
 8008d06:	f7ff fdab 	bl	8008860 <snprintf>
 8008d0a:	f642 1305 	movw	r3, #10501	; 0x2905
 8008d0e:	9300      	str	r3, [sp, #0]
 8008d10:	b282      	uxth	r2, r0
 8008d12:	69a3      	ldr	r3, [r4, #24]
 8008d14:	6829      	ldr	r1, [r5, #0]
 8008d16:	7d20      	ldrb	r0, [r4, #20]
 8008d18:	f003 f93a 	bl	800bf90 <udp_send>
 8008d1c:	b003      	add	sp, #12
 8008d1e:	bd30      	pop	{r4, r5, pc}
 8008d20:	4770      	bx	lr
 8008d22:	bf00      	nop
 8008d24:	20000094 	mulcs	r0, r4, r0
 8008d28:	2000a032 	andcs	sl, r0, r2, lsr r0
 8008d2c:	08011068 	stmdaeq	r1, {r3, r5, r6, ip}

08008d30 <RemoteConfig::HandleUptime()>:
 8008d30:	7bc3      	ldrb	r3, [r0, #15]
 8008d32:	b1e3      	cbz	r3, 8008d6e <RemoteConfig::HandleUptime()+0x3e>
 8008d34:	4b0e      	ldr	r3, [pc, #56]	; (8008d70 <RemoteConfig::HandleUptime()+0x40>)
 8008d36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008d38:	681a      	ldr	r2, [r3, #0]
 8008d3a:	69c3      	ldr	r3, [r0, #28]
 8008d3c:	4604      	mov	r4, r0
 8008d3e:	2b07      	cmp	r3, #7
 8008d40:	d113      	bne.n	8008d6a <RemoteConfig::HandleUptime()+0x3a>
 8008d42:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008d46:	4d0b      	ldr	r5, [pc, #44]	; (8008d74 <RemoteConfig::HandleUptime()+0x44>)
 8008d48:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d4c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8008d50:	4a09      	ldr	r2, [pc, #36]	; (8008d78 <RemoteConfig::HandleUptime()+0x48>)
 8008d52:	6828      	ldr	r0, [r5, #0]
 8008d54:	f7ff fd84 	bl	8008860 <snprintf>
 8008d58:	f642 1305 	movw	r3, #10501	; 0x2905
 8008d5c:	9300      	str	r3, [sp, #0]
 8008d5e:	b282      	uxth	r2, r0
 8008d60:	69a3      	ldr	r3, [r4, #24]
 8008d62:	6829      	ldr	r1, [r5, #0]
 8008d64:	7d20      	ldrb	r0, [r4, #20]
 8008d66:	f003 f913 	bl	800bf90 <udp_send>
 8008d6a:	b003      	add	sp, #12
 8008d6c:	bd30      	pop	{r4, r5, pc}
 8008d6e:	4770      	bx	lr
 8008d70:	2000a094 	mulcs	r0, r4, r0
 8008d74:	20000094 	mulcs	r0, r4, r0
 8008d78:	08011073 	stmdaeq	r1, {r0, r1, r4, r5, r6, ip}

08008d7c <Display::TextStatus(char const*)>:
 8008d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d80:	4604      	mov	r4, r0
 8008d82:	6980      	ldr	r0, [r0, #24]
 8008d84:	2800      	cmp	r0, #0
 8008d86:	d032      	beq.n	8008dee <Display::TextStatus(char const*)+0x72>
 8008d88:	7947      	ldrb	r7, [r0, #5]
 8008d8a:	6803      	ldr	r3, [r0, #0]
 8008d8c:	1e7e      	subs	r6, r7, #1
 8008d8e:	b2f6      	uxtb	r6, r6
 8008d90:	460d      	mov	r5, r1
 8008d92:	4632      	mov	r2, r6
 8008d94:	2100      	movs	r1, #0
 8008d96:	6a1b      	ldr	r3, [r3, #32]
 8008d98:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008d9c:	f04f 0800 	mov.w	r8, #0
 8008da0:	4798      	blx	r3
 8008da2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008da6:	45c1      	cmp	r9, r8
 8008da8:	69a0      	ldr	r0, [r4, #24]
 8008daa:	d818      	bhi.n	8008dde <Display::TextStatus(char const*)+0x62>
 8008dac:	b120      	cbz	r0, 8008db8 <Display::TextStatus(char const*)+0x3c>
 8008dae:	6803      	ldr	r3, [r0, #0]
 8008db0:	4632      	mov	r2, r6
 8008db2:	2100      	movs	r1, #0
 8008db4:	6a1b      	ldr	r3, [r3, #32]
 8008db6:	4798      	blx	r3
 8008db8:	69a0      	ldr	r0, [r4, #24]
 8008dba:	b1c0      	cbz	r0, 8008dee <Display::TextStatus(char const*)+0x72>
 8008dbc:	2300      	movs	r3, #0
 8008dbe:	7901      	ldrb	r1, [r0, #4]
 8008dc0:	5cea      	ldrb	r2, [r5, r3]
 8008dc2:	b11a      	cbz	r2, 8008dcc <Display::TextStatus(char const*)+0x50>
 8008dc4:	1c5a      	adds	r2, r3, #1
 8008dc6:	4299      	cmp	r1, r3
 8008dc8:	4613      	mov	r3, r2
 8008dca:	dcf9      	bgt.n	8008dc0 <Display::TextStatus(char const*)+0x44>
 8008dcc:	6802      	ldr	r2, [r0, #0]
 8008dce:	4639      	mov	r1, r7
 8008dd0:	69d4      	ldr	r4, [r2, #28]
 8008dd2:	b2db      	uxtb	r3, r3
 8008dd4:	462a      	mov	r2, r5
 8008dd6:	46a4      	mov	ip, r4
 8008dd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008ddc:	4760      	bx	ip
 8008dde:	b118      	cbz	r0, 8008de8 <Display::TextStatus(char const*)+0x6c>
 8008de0:	6803      	ldr	r3, [r0, #0]
 8008de2:	2120      	movs	r1, #32
 8008de4:	695b      	ldr	r3, [r3, #20]
 8008de6:	4798      	blx	r3
 8008de8:	f108 0801 	add.w	r8, r8, #1
 8008dec:	e7db      	b.n	8008da6 <Display::TextStatus(char const*)+0x2a>
 8008dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008df2 <Display::Status(Display7SegmentMessage)>:
 8008df2:	7c43      	ldrb	r3, [r0, #17]
 8008df4:	b1bb      	cbz	r3, 8008e26 <Display::Status(Display7SegmentMessage)+0x34>
 8008df6:	b513      	push	{r0, r1, r4, lr}
 8008df8:	2312      	movs	r3, #18
 8008dfa:	43c9      	mvns	r1, r1
 8008dfc:	4604      	mov	r4, r0
 8008dfe:	f88d 3004 	strb.w	r3, [sp, #4]
 8008e02:	7a00      	ldrb	r0, [r0, #8]
 8008e04:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8008e08:	f88d 3005 	strb.w	r3, [sp, #5]
 8008e0c:	f88d 1006 	strb.w	r1, [sp, #6]
 8008e10:	f007 fc0c 	bl	801062c <gd32_i2c_set_address>
 8008e14:	68e0      	ldr	r0, [r4, #12]
 8008e16:	f007 fc01 	bl	801061c <gd32_i2c_set_baudrate>
 8008e1a:	2103      	movs	r1, #3
 8008e1c:	a801      	add	r0, sp, #4
 8008e1e:	f007 fc0b 	bl	8010638 <gd32_i2c_write>
 8008e22:	b002      	add	sp, #8
 8008e24:	bd10      	pop	{r4, pc}
 8008e26:	4770      	bx	lr

08008e28 <RemoteConfig::HandleDisplaySet()>:
 8008e28:	b508      	push	{r3, lr}
 8008e2a:	69c3      	ldr	r3, [r0, #28]
 8008e2c:	2b09      	cmp	r3, #9
 8008e2e:	d10a      	bne.n	8008e46 <RemoteConfig::HandleDisplaySet()+0x1e>
 8008e30:	4b05      	ldr	r3, [pc, #20]	; (8008e48 <RemoteConfig::HandleDisplaySet()+0x20>)
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	7a59      	ldrb	r1, [r3, #9]
 8008e36:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8008e3a:	4259      	negs	r1, r3
 8008e3c:	4159      	adcs	r1, r3
 8008e3e:	4b03      	ldr	r3, [pc, #12]	; (8008e4c <RemoteConfig::HandleDisplaySet()+0x24>)
 8008e40:	6818      	ldr	r0, [r3, #0]
 8008e42:	f7ff f8af 	bl	8007fa4 <Display::SetSleep(bool)>
 8008e46:	bd08      	pop	{r3, pc}
 8008e48:	20000094 	mulcs	r0, r4, r0
 8008e4c:	20009f8c 	andcs	r9, r0, ip, lsl #31

08008e50 <RemoteConfig::HandleTftpSet()>:
 8008e50:	69c3      	ldr	r3, [r0, #28]
 8008e52:	2b06      	cmp	r3, #6
 8008e54:	d127      	bne.n	8008ea6 <RemoteConfig::HandleTftpSet()+0x56>
 8008e56:	b570      	push	{r4, r5, r6, lr}
 8008e58:	4b13      	ldr	r3, [pc, #76]	; (8008ea8 <RemoteConfig::HandleTftpSet()+0x58>)
 8008e5a:	4e14      	ldr	r6, [pc, #80]	; (8008eac <RemoteConfig::HandleTftpSet()+0x5c>)
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	4604      	mov	r4, r0
 8008e60:	799b      	ldrb	r3, [r3, #6]
 8008e62:	6835      	ldr	r5, [r6, #0]
 8008e64:	2b30      	cmp	r3, #48	; 0x30
 8008e66:	bf14      	ite	ne
 8008e68:	2301      	movne	r3, #1
 8008e6a:	2300      	moveq	r3, #0
 8008e6c:	f880 3020 	strb.w	r3, [r0, #32]
 8008e70:	d012      	beq.n	8008e98 <RemoteConfig::HandleTftpSet()+0x48>
 8008e72:	4628      	mov	r0, r5
 8008e74:	2100      	movs	r1, #0
 8008e76:	f7ff f895 	bl	8007fa4 <Display::SetSleep(bool)>
 8008e7a:	6835      	ldr	r5, [r6, #0]
 8008e7c:	490c      	ldr	r1, [pc, #48]	; (8008eb0 <RemoteConfig::HandleTftpSet()+0x60>)
 8008e7e:	4628      	mov	r0, r5
 8008e80:	f7ff ff7c 	bl	8008d7c <Display::TextStatus(char const*)>
 8008e84:	f244 0171 	movw	r1, #16497	; 0x4071
 8008e88:	4628      	mov	r0, r5
 8008e8a:	f7ff ffb2 	bl	8008df2 <Display::Status(Display7SegmentMessage)>
 8008e8e:	4620      	mov	r0, r4
 8008e90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008e94:	f000 bc84 	b.w	80097a0 <RemoteConfig::PlatformHandleTftpSet()>
 8008e98:	4906      	ldr	r1, [pc, #24]	; (8008eb4 <RemoteConfig::HandleTftpSet()+0x64>)
 8008e9a:	4628      	mov	r0, r5
 8008e9c:	f7ff ff6e 	bl	8008d7c <Display::TextStatus(char const*)>
 8008ea0:	f248 0171 	movw	r1, #32881	; 0x8071
 8008ea4:	e7f0      	b.n	8008e88 <RemoteConfig::HandleTftpSet()+0x38>
 8008ea6:	4770      	bx	lr
 8008ea8:	20000094 	mulcs	r0, r4, r0
 8008eac:	20009f8c 	andcs	r9, r0, ip, lsl #31
 8008eb0:	08011080 	stmdaeq	r1, {r7, ip}
 8008eb4:	08011092 	stmdaeq	r1, {r1, r4, r7, ip}

08008eb8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8008eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008ebc:	2500      	movs	r5, #0
 8008ebe:	461f      	mov	r7, r3
 8008ec0:	6083      	str	r3, [r0, #8]
 8008ec2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008ec6:	4690      	mov	r8, r2
 8008ec8:	4689      	mov	r9, r1
 8008eca:	4e12      	ldr	r6, [pc, #72]	; (8008f14 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8008ecc:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8008ed0:	f8df a044 	ldr.w	sl, [pc, #68]	; 8008f18 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8008ed4:	4b11      	ldr	r3, [pc, #68]	; (8008f1c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8008ed6:	e9c0 1200 	strd	r1, r2, [r0]
 8008eda:	4604      	mov	r4, r0
 8008edc:	6018      	str	r0, [r3, #0]
 8008ede:	4631      	mov	r1, r6
 8008ee0:	60c5      	str	r5, [r0, #12]
 8008ee2:	8205      	strh	r5, [r0, #16]
 8008ee4:	61c5      	str	r5, [r0, #28]
 8008ee6:	f880 5020 	strb.w	r5, [r0, #32]
 8008eea:	f8da 0000 	ldr.w	r0, [sl]
 8008eee:	f003 fd1a 	bl	800c926 <Network::MacAddressCopyTo(unsigned char*)>
 8008ef2:	f642 1105 	movw	r1, #10501	; 0x2905
 8008ef6:	f8da 0000 	ldr.w	r0, [sl]
 8008efa:	f886 9006 	strb.w	r9, [r6, #6]
 8008efe:	f886 8007 	strb.w	r8, [r6, #7]
 8008f02:	7237      	strb	r7, [r6, #8]
 8008f04:	7275      	strb	r5, [r6, #9]
 8008f06:	f003 fd08 	bl	800c91a <Network::Begin(unsigned short)>
 8008f0a:	6160      	str	r0, [r4, #20]
 8008f0c:	4620      	mov	r0, r4
 8008f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008f12:	bf00      	nop
 8008f14:	20000098 	mulcs	r0, r8, r0
 8008f18:	20008970 	andcs	r8, r0, r0, ror r9
 8008f1c:	200000bc 	strhcs	r0, [r0], -ip

08008f20 <RemoteConfig::GetStringNode() const>:
 8008f20:	2012      	movs	r0, #18
 8008f22:	4b03      	ldr	r3, [pc, #12]	; (8008f30 <RemoteConfig::GetStringNode() const+0x10>)
 8008f24:	799a      	ldrb	r2, [r3, #6]
 8008f26:	4b03      	ldr	r3, [pc, #12]	; (8008f34 <RemoteConfig::GetStringNode() const+0x14>)
 8008f28:	fb00 3002 	mla	r0, r0, r2, r3
 8008f2c:	4770      	bx	lr
 8008f2e:	bf00      	nop
 8008f30:	20000098 	mulcs	r0, r8, r0
 8008f34:	08011108 	stmdaeq	r1, {r3, r8, ip}

08008f38 <RemoteConfig::GetStringOutput() const>:
 8008f38:	200c      	movs	r0, #12
 8008f3a:	4b03      	ldr	r3, [pc, #12]	; (8008f48 <RemoteConfig::GetStringOutput() const+0x10>)
 8008f3c:	79da      	ldrb	r2, [r3, #7]
 8008f3e:	4b03      	ldr	r3, [pc, #12]	; (8008f4c <RemoteConfig::GetStringOutput() const+0x14>)
 8008f40:	fb00 3002 	mla	r0, r0, r2, r3
 8008f44:	4770      	bx	lr
 8008f46:	bf00      	nop
 8008f48:	20000098 	mulcs	r0, r8, r0
 8008f4c:	080111ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, ip}

08008f50 <RemoteConfig::SetDisable(bool)>:
 8008f50:	b538      	push	{r3, r4, r5, lr}
 8008f52:	4604      	mov	r4, r0
 8008f54:	7b03      	ldrb	r3, [r0, #12]
 8008f56:	b161      	cbz	r1, 8008f72 <RemoteConfig::SetDisable(bool)+0x22>
 8008f58:	b953      	cbnz	r3, 8008f70 <RemoteConfig::SetDisable(bool)+0x20>
 8008f5a:	4b0c      	ldr	r3, [pc, #48]	; (8008f8c <RemoteConfig::SetDisable(bool)+0x3c>)
 8008f5c:	f642 1105 	movw	r1, #10501	; 0x2905
 8008f60:	6818      	ldr	r0, [r3, #0]
 8008f62:	f003 fcdd 	bl	800c920 <Network::End(unsigned short)>
 8008f66:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008f6a:	6163      	str	r3, [r4, #20]
 8008f6c:	2301      	movs	r3, #1
 8008f6e:	7323      	strb	r3, [r4, #12]
 8008f70:	bd38      	pop	{r3, r4, r5, pc}
 8008f72:	2b00      	cmp	r3, #0
 8008f74:	d0fc      	beq.n	8008f70 <RemoteConfig::SetDisable(bool)+0x20>
 8008f76:	4b05      	ldr	r3, [pc, #20]	; (8008f8c <RemoteConfig::SetDisable(bool)+0x3c>)
 8008f78:	460d      	mov	r5, r1
 8008f7a:	6818      	ldr	r0, [r3, #0]
 8008f7c:	f642 1105 	movw	r1, #10501	; 0x2905
 8008f80:	f003 fccb 	bl	800c91a <Network::Begin(unsigned short)>
 8008f84:	7325      	strb	r5, [r4, #12]
 8008f86:	6160      	str	r0, [r4, #20]
 8008f88:	e7f2      	b.n	8008f70 <RemoteConfig::SetDisable(bool)+0x20>
 8008f8a:	bf00      	nop
 8008f8c:	20008970 	andcs	r8, r0, r0, ror r9

08008f90 <RemoteConfig::SetDisplayName(char const*)>:
 8008f90:	2217      	movs	r2, #23
 8008f92:	4809      	ldr	r0, [pc, #36]	; (8008fb8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8008f94:	b508      	push	{r3, lr}
 8008f96:	1e4b      	subs	r3, r1, #1
 8008f98:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008f9c:	b911      	cbnz	r1, 8008fa4 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8008f9e:	f006 f80b 	bl	800efb8 <memset>
 8008fa2:	e003      	b.n	8008fac <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8008fa4:	3a01      	subs	r2, #1
 8008fa6:	f800 1b01 	strb.w	r1, [r0], #1
 8008faa:	d1f5      	bne.n	8008f98 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8008fac:	2200      	movs	r2, #0
 8008fae:	4b03      	ldr	r3, [pc, #12]	; (8008fbc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8008fb0:	f883 2020 	strb.w	r2, [r3, #32]
 8008fb4:	bd08      	pop	{r3, pc}
 8008fb6:	bf00      	nop
 8008fb8:	200000a1 	andcs	r0, r0, r1, lsr #1
 8008fbc:	20000098 	mulcs	r0, r8, r0

08008fc0 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8008fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fc2:	4604      	mov	r4, r0
 8008fc4:	4616      	mov	r6, r2
 8008fc6:	460d      	mov	r5, r1
 8008fc8:	4f28      	ldr	r7, [pc, #160]	; (800906c <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8008fca:	b085      	sub	sp, #20
 8008fcc:	b9a9      	cbnz	r1, 8008ffa <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8008fce:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8008fd2:	6839      	ldr	r1, [r7, #0]
 8008fd4:	aa03      	add	r2, sp, #12
 8008fd6:	3105      	adds	r1, #5
 8008fd8:	9303      	str	r3, [sp, #12]
 8008fda:	f000 fbb7 	bl	800974c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008fde:	1e03      	subs	r3, r0, #0
 8008fe0:	da1b      	bge.n	800901a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8008fe2:	f642 1305 	movw	r3, #10501	; 0x2905
 8008fe6:	220b      	movs	r2, #11
 8008fe8:	9300      	str	r3, [sp, #0]
 8008fea:	4921      	ldr	r1, [pc, #132]	; (8009070 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8008fec:	69a3      	ldr	r3, [r4, #24]
 8008fee:	7d20      	ldrb	r0, [r4, #20]
 8008ff0:	f002 ffce 	bl	800bf90 <udp_send>
 8008ff4:	200c      	movs	r0, #12
 8008ff6:	b005      	add	sp, #20
 8008ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ffa:	9203      	str	r2, [sp, #12]
 8008ffc:	aa03      	add	r2, sp, #12
 8008ffe:	6039      	str	r1, [r7, #0]
 8009000:	f000 fba4 	bl	800974c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009004:	1e03      	subs	r3, r0, #0
 8009006:	da08      	bge.n	800901a <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009008:	2e0b      	cmp	r6, #11
 800900a:	4632      	mov	r2, r6
 800900c:	4628      	mov	r0, r5
 800900e:	bf28      	it	cs
 8009010:	220b      	movcs	r2, #11
 8009012:	4917      	ldr	r1, [pc, #92]	; (8009070 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009014:	f005 ffae 	bl	800ef74 <memcpy>
 8009018:	e7ec      	b.n	8008ff4 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800901a:	221c      	movs	r2, #28
 800901c:	4353      	muls	r3, r2
 800901e:	4915      	ldr	r1, [pc, #84]	; (8009074 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009020:	18ca      	adds	r2, r1, r3
 8009022:	6852      	ldr	r2, [r2, #4]
 8009024:	58cb      	ldr	r3, [r1, r3]
 8009026:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800902a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800902e:	07d2      	lsls	r2, r2, #31
 8009030:	bf48      	it	mi
 8009032:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009036:	a903      	add	r1, sp, #12
 8009038:	bf48      	it	mi
 800903a:	58d3      	ldrmi	r3, [r2, r3]
 800903c:	4798      	blx	r3
 800903e:	b95d      	cbnz	r5, 8009058 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009040:	f642 1305 	movw	r3, #10501	; 0x2905
 8009044:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009048:	9300      	str	r3, [sp, #0]
 800904a:	6839      	ldr	r1, [r7, #0]
 800904c:	69a3      	ldr	r3, [r4, #24]
 800904e:	7d20      	ldrb	r0, [r4, #20]
 8009050:	f002 ff9e 	bl	800bf90 <udp_send>
 8009054:	9803      	ldr	r0, [sp, #12]
 8009056:	e7ce      	b.n	8008ff6 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009058:	9a03      	ldr	r2, [sp, #12]
 800905a:	4628      	mov	r0, r5
 800905c:	42b2      	cmp	r2, r6
 800905e:	bf28      	it	cs
 8009060:	4632      	movcs	r2, r6
 8009062:	6839      	ldr	r1, [r7, #0]
 8009064:	f005 ff91 	bl	800ef8a <memmove>
 8009068:	e7f4      	b.n	8009054 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800906a:	bf00      	nop
 800906c:	20000094 	mulcs	r0, r4, r0
 8009070:	080110a5 	stmdaeq	r1, {r0, r2, r5, r7, ip}
 8009074:	0801137c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip}

08009078 <RemoteConfig::HandleGetNoParams()>:
 8009078:	2200      	movs	r2, #0
 800907a:	4611      	mov	r1, r2
 800907c:	f7ff bfa0 	b.w	8008fc0 <RemoteConfig::HandleGet(void*, unsigned int)>

08009080 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009080:	b510      	push	{r4, lr}
 8009082:	460c      	mov	r4, r1
 8009084:	4b07      	ldr	r3, [pc, #28]	; (80090a4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009086:	b08a      	sub	sp, #40	; 0x28
 8009088:	6819      	ldr	r1, [r3, #0]
 800908a:	a801      	add	r0, sp, #4
 800908c:	f000 f9ba 	bl	8009404 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009090:	4905      	ldr	r1, [pc, #20]	; (80090a8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009092:	4623      	mov	r3, r4
 8009094:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009098:	6809      	ldr	r1, [r1, #0]
 800909a:	a801      	add	r0, sp, #4
 800909c:	f000 fad6 	bl	800964c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 80090a0:	b00a      	add	sp, #40	; 0x28
 80090a2:	bd10      	pop	{r4, pc}
 80090a4:	20009f68 	andcs	r9, r0, r8, ror #30
 80090a8:	20000094 	mulcs	r0, r4, r0

080090ac <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80090ac:	b510      	push	{r4, lr}
 80090ae:	460c      	mov	r4, r1
 80090b0:	4b07      	ldr	r3, [pc, #28]	; (80090d0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80090b2:	b09a      	sub	sp, #104	; 0x68
 80090b4:	6819      	ldr	r1, [r3, #0]
 80090b6:	a801      	add	r0, sp, #4
 80090b8:	f003 fe14 	bl	800cce4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80090bc:	4905      	ldr	r1, [pc, #20]	; (80090d4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80090be:	4623      	mov	r3, r4
 80090c0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80090c4:	6809      	ldr	r1, [r1, #0]
 80090c6:	a801      	add	r0, sp, #4
 80090c8:	f003 ffe8 	bl	800d09c <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80090cc:	b01a      	add	sp, #104	; 0x68
 80090ce:	bd10      	pop	{r4, pc}
 80090d0:	20009f60 	andcs	r9, r0, r0, ror #30
 80090d4:	20000094 	mulcs	r0, r4, r0

080090d8 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 80090d8:	b510      	push	{r4, lr}
 80090da:	460c      	mov	r4, r1
 80090dc:	4b07      	ldr	r3, [pc, #28]	; (80090fc <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 80090de:	b0e4      	sub	sp, #400	; 0x190
 80090e0:	6819      	ldr	r1, [r3, #0]
 80090e2:	4668      	mov	r0, sp
 80090e4:	f001 fa88 	bl	800a5f8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 80090e8:	4905      	ldr	r1, [pc, #20]	; (8009100 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 80090ea:	4623      	mov	r3, r4
 80090ec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80090f0:	4668      	mov	r0, sp
 80090f2:	6809      	ldr	r1, [r1, #0]
 80090f4:	f001 fc1a 	bl	800a92c <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 80090f8:	b064      	add	sp, #400	; 0x190
 80090fa:	bd10      	pop	{r4, pc}
 80090fc:	20009f64 	andcs	r9, r0, r4, ror #30
 8009100:	20000094 	mulcs	r0, r4, r0

08009104 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009104:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009106:	460c      	mov	r4, r1
 8009108:	4b07      	ldr	r3, [pc, #28]	; (8009128 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800910a:	4668      	mov	r0, sp
 800910c:	6819      	ldr	r1, [r3, #0]
 800910e:	f001 fe93 	bl	800ae38 <DmxParams::DmxParams(DmxParamsStore*)>
 8009112:	4906      	ldr	r1, [pc, #24]	; (800912c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009114:	4623      	mov	r3, r4
 8009116:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800911a:	4668      	mov	r0, sp
 800911c:	6809      	ldr	r1, [r1, #0]
 800911e:	f001 ffad 	bl	800b07c <DmxParams::Save(char*, unsigned int, unsigned int&)>
 8009122:	b004      	add	sp, #16
 8009124:	bd10      	pop	{r4, pc}
 8009126:	bf00      	nop
 8009128:	20009f5c 	andcs	r9, r0, ip, asr pc
 800912c:	20000094 	mulcs	r0, r4, r0

08009130 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009130:	b530      	push	{r4, r5, lr}
 8009132:	b085      	sub	sp, #20
 8009134:	4604      	mov	r4, r0
 8009136:	9201      	str	r2, [sp, #4]
 8009138:	b9d1      	cbnz	r1, 8009170 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800913a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800913e:	9303      	str	r3, [sp, #12]
 8009140:	4b19      	ldr	r3, [pc, #100]	; (80091a8 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009142:	aa03      	add	r2, sp, #12
 8009144:	6819      	ldr	r1, [r3, #0]
 8009146:	3101      	adds	r1, #1
 8009148:	f000 fb00 	bl	800974c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800914c:	2800      	cmp	r0, #0
 800914e:	db0d      	blt.n	800916c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009150:	221c      	movs	r2, #28
 8009152:	4b16      	ldr	r3, [pc, #88]	; (80091ac <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009154:	fb02 3300 	mla	r3, r2, r0, r3
 8009158:	68da      	ldr	r2, [r3, #12]
 800915a:	689b      	ldr	r3, [r3, #8]
 800915c:	1051      	asrs	r1, r2, #1
 800915e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009162:	07d2      	lsls	r2, r2, #31
 8009164:	bf44      	itt	mi
 8009166:	5862      	ldrmi	r2, [r4, r1]
 8009168:	58d3      	ldrmi	r3, [r2, r3]
 800916a:	4798      	blx	r3
 800916c:	b005      	add	sp, #20
 800916e:	bd30      	pop	{r4, r5, pc}
 8009170:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009174:	d8fa      	bhi.n	800916c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009176:	4b0e      	ldr	r3, [pc, #56]	; (80091b0 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009178:	460d      	mov	r5, r1
 800917a:	781b      	ldrb	r3, [r3, #0]
 800917c:	07d9      	lsls	r1, r3, #31
 800917e:	d50b      	bpl.n	8009198 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009180:	782b      	ldrb	r3, [r5, #0]
 8009182:	2b7b      	cmp	r3, #123	; 0x7b
 8009184:	d108      	bne.n	8009198 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009186:	1e51      	subs	r1, r2, #1
 8009188:	4628      	mov	r0, r5
 800918a:	2200      	movs	r2, #0
 800918c:	b289      	uxth	r1, r1
 800918e:	f005 f803 	bl	800e198 <properties::convert_json_file(char*, unsigned short, bool)>
 8009192:	1e02      	subs	r2, r0, #0
 8009194:	ddea      	ble.n	800916c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009196:	b292      	uxth	r2, r2
 8009198:	4b03      	ldr	r3, [pc, #12]	; (80091a8 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 800919a:	61e2      	str	r2, [r4, #28]
 800919c:	4620      	mov	r0, r4
 800919e:	601d      	str	r5, [r3, #0]
 80091a0:	aa01      	add	r2, sp, #4
 80091a2:	1c69      	adds	r1, r5, #1
 80091a4:	e7d0      	b.n	8009148 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80091a6:	bf00      	nop
 80091a8:	20000094 	mulcs	r0, r4, r0
 80091ac:	0801137c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip}
 80091b0:	20009f88 	andcs	r9, r0, r8, lsl #31

080091b4 <RemoteConfig::Run()>:
 80091b4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80091b8:	7b05      	ldrb	r5, [r0, #12]
 80091ba:	2d00      	cmp	r5, #0
 80091bc:	d156      	bne.n	800926c <RemoteConfig::Run()+0xb8>
 80091be:	4e45      	ldr	r6, [pc, #276]	; (80092d4 <RemoteConfig::Run()+0x120>)
 80091c0:	4604      	mov	r4, r0
 80091c2:	f100 0218 	add.w	r2, r0, #24
 80091c6:	4631      	mov	r1, r6
 80091c8:	7d00      	ldrb	r0, [r0, #20]
 80091ca:	f10d 030e 	add.w	r3, sp, #14
 80091ce:	f002 feb9 	bl	800bf44 <udp_recv2>
 80091d2:	2803      	cmp	r0, #3
 80091d4:	61e0      	str	r0, [r4, #28]
 80091d6:	d949      	bls.n	800926c <RemoteConfig::Run()+0xb8>
 80091d8:	6831      	ldr	r1, [r6, #0]
 80091da:	1e43      	subs	r3, r0, #1
 80091dc:	5cca      	ldrb	r2, [r1, r3]
 80091de:	2a0a      	cmp	r2, #10
 80091e0:	bf18      	it	ne
 80091e2:	4603      	movne	r3, r0
 80091e4:	61e3      	str	r3, [r4, #28]
 80091e6:	7808      	ldrb	r0, [r1, #0]
 80091e8:	283f      	cmp	r0, #63	; 0x3f
 80091ea:	d137      	bne.n	800925c <RemoteConfig::Run()+0xa8>
 80091ec:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 80092d8 <RemoteConfig::Run()+0x124>
 80091f0:	462a      	mov	r2, r5
 80091f2:	4667      	mov	r7, ip
 80091f4:	3b01      	subs	r3, #1
 80091f6:	61e3      	str	r3, [r4, #28]
 80091f8:	f89c 500e 	ldrb.w	r5, [ip, #14]
 80091fc:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009200:	b16d      	cbz	r5, 800921e <RemoteConfig::Run()+0x6a>
 8009202:	4283      	cmp	r3, r0
 8009204:	d80d      	bhi.n	8009222 <RemoteConfig::Run()+0x6e>
 8009206:	3201      	adds	r2, #1
 8009208:	2a09      	cmp	r2, #9
 800920a:	f10c 0c10 	add.w	ip, ip, #16
 800920e:	d1f3      	bne.n	80091f8 <RemoteConfig::Run()+0x44>
 8009210:	f642 1305 	movw	r3, #10501	; 0x2905
 8009214:	9300      	str	r3, [sp, #0]
 8009216:	2208      	movs	r2, #8
 8009218:	69a3      	ldr	r3, [r4, #24]
 800921a:	4930      	ldr	r1, [pc, #192]	; (80092dc <RemoteConfig::Run()+0x128>)
 800921c:	e04e      	b.n	80092bc <RemoteConfig::Run()+0x108>
 800921e:	4283      	cmp	r3, r0
 8009220:	d1f1      	bne.n	8009206 <RemoteConfig::Run()+0x52>
 8009222:	460e      	mov	r6, r1
 8009224:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009228:	4408      	add	r0, r1
 800922a:	3d01      	subs	r5, #1
 800922c:	4286      	cmp	r6, r0
 800922e:	d10b      	bne.n	8009248 <RemoteConfig::Run()+0x94>
 8009230:	0113      	lsls	r3, r2, #4
 8009232:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009236:	6852      	ldr	r2, [r2, #4]
 8009238:	58fb      	ldr	r3, [r7, r3]
 800923a:	1051      	asrs	r1, r2, #1
 800923c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009240:	07d2      	lsls	r2, r2, #31
 8009242:	d408      	bmi.n	8009256 <RemoteConfig::Run()+0xa2>
 8009244:	4798      	blx	r3
 8009246:	e011      	b.n	800926c <RemoteConfig::Run()+0xb8>
 8009248:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800924c:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009250:	45f0      	cmp	r8, lr
 8009252:	d0eb      	beq.n	800922c <RemoteConfig::Run()+0x78>
 8009254:	e7d7      	b.n	8009206 <RemoteConfig::Run()+0x52>
 8009256:	5862      	ldr	r2, [r4, r1]
 8009258:	58d3      	ldr	r3, [r2, r3]
 800925a:	e7f3      	b.n	8009244 <RemoteConfig::Run()+0x90>
 800925c:	7b62      	ldrb	r2, [r4, #13]
 800925e:	b92a      	cbnz	r2, 800926c <RemoteConfig::Run()+0xb8>
 8009260:	2823      	cmp	r0, #35	; 0x23
 8009262:	d106      	bne.n	8009272 <RemoteConfig::Run()+0xbe>
 8009264:	4611      	mov	r1, r2
 8009266:	4620      	mov	r0, r4
 8009268:	f7ff ff62 	bl	8009130 <RemoteConfig::HandleSet(void*, unsigned int)>
 800926c:	b004      	add	sp, #16
 800926e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009272:	2821      	cmp	r0, #33	; 0x21
 8009274:	d1fa      	bne.n	800926c <RemoteConfig::Run()+0xb8>
 8009276:	3b01      	subs	r3, #1
 8009278:	2b05      	cmp	r3, #5
 800927a:	61e3      	str	r3, [r4, #28]
 800927c:	d918      	bls.n	80092b0 <RemoteConfig::Run()+0xfc>
 800927e:	460a      	mov	r2, r1
 8009280:	4608      	mov	r0, r1
 8009282:	4d17      	ldr	r5, [pc, #92]	; (80092e0 <RemoteConfig::Run()+0x12c>)
 8009284:	f101 0c05 	add.w	ip, r1, #5
 8009288:	4560      	cmp	r0, ip
 800928a:	d01b      	beq.n	80092c4 <RemoteConfig::Run()+0x110>
 800928c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009290:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009294:	42b7      	cmp	r7, r6
 8009296:	d0f7      	beq.n	8009288 <RemoteConfig::Run()+0xd4>
 8009298:	2b08      	cmp	r3, #8
 800929a:	d909      	bls.n	80092b0 <RemoteConfig::Run()+0xfc>
 800929c:	4b11      	ldr	r3, [pc, #68]	; (80092e4 <RemoteConfig::Run()+0x130>)
 800929e:	3108      	adds	r1, #8
 80092a0:	428a      	cmp	r2, r1
 80092a2:	d015      	beq.n	80092d0 <RemoteConfig::Run()+0x11c>
 80092a4:	f813 0b01 	ldrb.w	r0, [r3], #1
 80092a8:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80092ac:	4285      	cmp	r5, r0
 80092ae:	d0f7      	beq.n	80092a0 <RemoteConfig::Run()+0xec>
 80092b0:	f642 1305 	movw	r3, #10501	; 0x2905
 80092b4:	2208      	movs	r2, #8
 80092b6:	9300      	str	r3, [sp, #0]
 80092b8:	69a3      	ldr	r3, [r4, #24]
 80092ba:	490b      	ldr	r1, [pc, #44]	; (80092e8 <RemoteConfig::Run()+0x134>)
 80092bc:	7d20      	ldrb	r0, [r4, #20]
 80092be:	f002 fe67 	bl	800bf90 <udp_send>
 80092c2:	e7d3      	b.n	800926c <RemoteConfig::Run()+0xb8>
 80092c4:	2300      	movs	r3, #0
 80092c6:	4a09      	ldr	r2, [pc, #36]	; (80092ec <RemoteConfig::Run()+0x138>)
 80092c8:	011b      	lsls	r3, r3, #4
 80092ca:	4620      	mov	r0, r4
 80092cc:	58d3      	ldr	r3, [r2, r3]
 80092ce:	e7b9      	b.n	8009244 <RemoteConfig::Run()+0x90>
 80092d0:	2301      	movs	r3, #1
 80092d2:	e7f8      	b.n	80092c6 <RemoteConfig::Run()+0x112>
 80092d4:	20000094 	mulcs	r0, r4, r0
 80092d8:	08011260 	stmdaeq	r1, {r5, r6, r9, ip}
 80092dc:	080110c9 	stmdaeq	r1, {r0, r3, r6, r7, ip}
 80092e0:	080110b1 	stmdaeq	r1, {r0, r4, r5, r7, ip}
 80092e4:	080110b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, ip}
 80092e8:	080110c0 	stmdaeq	r1, {r6, r7, ip}
 80092ec:	080112f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, ip}

080092f0 <RemoteConfig::HandleSetRconfig()>:
 80092f0:	b510      	push	{r4, lr}
 80092f2:	4604      	mov	r4, r0
 80092f4:	4b08      	ldr	r3, [pc, #32]	; (8009318 <RemoteConfig::HandleSetRconfig()+0x28>)
 80092f6:	b08a      	sub	sp, #40	; 0x28
 80092f8:	6819      	ldr	r1, [r3, #0]
 80092fa:	a801      	add	r0, sp, #4
 80092fc:	f000 f882 	bl	8009404 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009300:	4b06      	ldr	r3, [pc, #24]	; (800931c <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009302:	69e2      	ldr	r2, [r4, #28]
 8009304:	6819      	ldr	r1, [r3, #0]
 8009306:	a801      	add	r0, sp, #4
 8009308:	f000 f892 	bl	8009430 <RemoteConfigParams::Load(char const*, unsigned int)>
 800930c:	4621      	mov	r1, r4
 800930e:	a801      	add	r0, sp, #4
 8009310:	f000 f9a9 	bl	8009666 <RemoteConfigParams::Set(RemoteConfig*)>
 8009314:	b00a      	add	sp, #40	; 0x28
 8009316:	bd10      	pop	{r4, pc}
 8009318:	20009f68 	andcs	r9, r0, r8, ror #30
 800931c:	20000094 	mulcs	r0, r4, r0

08009320 <RemoteConfig::HandleSetNetworkTxt()>:
 8009320:	b510      	push	{r4, lr}
 8009322:	4604      	mov	r4, r0
 8009324:	4b06      	ldr	r3, [pc, #24]	; (8009340 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009326:	b09a      	sub	sp, #104	; 0x68
 8009328:	6819      	ldr	r1, [r3, #0]
 800932a:	a801      	add	r0, sp, #4
 800932c:	f003 fcda 	bl	800cce4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009330:	4b04      	ldr	r3, [pc, #16]	; (8009344 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009332:	69e2      	ldr	r2, [r4, #28]
 8009334:	6819      	ldr	r1, [r3, #0]
 8009336:	a801      	add	r0, sp, #4
 8009338:	f003 fcec 	bl	800cd14 <NetworkParams::Load(char const*, unsigned int)>
 800933c:	b01a      	add	sp, #104	; 0x68
 800933e:	bd10      	pop	{r4, pc}
 8009340:	20009f60 	andcs	r9, r0, r0, ror #30
 8009344:	20000094 	mulcs	r0, r4, r0

08009348 <RemoteConfig::HandleSetOscTxt()>:
 8009348:	b510      	push	{r4, lr}
 800934a:	4604      	mov	r4, r0
 800934c:	4b06      	ldr	r3, [pc, #24]	; (8009368 <RemoteConfig::HandleSetOscTxt()+0x20>)
 800934e:	b0e4      	sub	sp, #400	; 0x190
 8009350:	6819      	ldr	r1, [r3, #0]
 8009352:	4668      	mov	r0, sp
 8009354:	f001 f950 	bl	800a5f8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8009358:	4b04      	ldr	r3, [pc, #16]	; (800936c <RemoteConfig::HandleSetOscTxt()+0x24>)
 800935a:	4668      	mov	r0, sp
 800935c:	69e2      	ldr	r2, [r4, #28]
 800935e:	6819      	ldr	r1, [r3, #0]
 8009360:	f001 f966 	bl	800a630 <OSCServerParams::Load(char const*, unsigned int)>
 8009364:	b064      	add	sp, #400	; 0x190
 8009366:	bd10      	pop	{r4, pc}
 8009368:	20009f64 	andcs	r9, r0, r4, ror #30
 800936c:	20000094 	mulcs	r0, r4, r0

08009370 <RemoteConfig::HandleSetParamsTxt()>:
 8009370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009372:	4604      	mov	r4, r0
 8009374:	4b06      	ldr	r3, [pc, #24]	; (8009390 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8009376:	4668      	mov	r0, sp
 8009378:	6819      	ldr	r1, [r3, #0]
 800937a:	f001 fd5d 	bl	800ae38 <DmxParams::DmxParams(DmxParamsStore*)>
 800937e:	4b05      	ldr	r3, [pc, #20]	; (8009394 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 8009380:	4668      	mov	r0, sp
 8009382:	69e2      	ldr	r2, [r4, #28]
 8009384:	6819      	ldr	r1, [r3, #0]
 8009386:	f001 fd6f 	bl	800ae68 <DmxParams::Load(char const*, unsigned int)>
 800938a:	b004      	add	sp, #16
 800938c:	bd10      	pop	{r4, pc}
 800938e:	bf00      	nop
 8009390:	20009f5c 	andcs	r9, r0, ip, asr pc
 8009394:	20000094 	mulcs	r0, r4, r0

08009398 <RemoteConfig::HandleFactory()>:
 8009398:	b538      	push	{r3, r4, r5, lr}
 800939a:	2400      	movs	r4, #0
 800939c:	4d04      	ldr	r5, [pc, #16]	; (80093b0 <RemoteConfig::HandleFactory()+0x18>)
 800939e:	4621      	mov	r1, r4
 80093a0:	6828      	ldr	r0, [r5, #0]
 80093a2:	3401      	adds	r4, #1
 80093a4:	f004 fb28 	bl	800d9f8 <ConfigStore::ResetSetList(configstore::Store)>
 80093a8:	2c1c      	cmp	r4, #28
 80093aa:	d1f8      	bne.n	800939e <RemoteConfig::HandleFactory()+0x6>
 80093ac:	bd38      	pop	{r3, r4, r5, pc}
 80093ae:	bf00      	nop
 80093b0:	20009f54 	andcs	r9, r0, r4, asr pc

080093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 80093b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093b6:	460b      	mov	r3, r1
 80093b8:	8885      	ldrh	r5, [r0, #4]
 80093ba:	88c1      	ldrh	r1, [r0, #6]
 80093bc:	42a9      	cmp	r1, r5
 80093be:	d214      	bcs.n	80093ea <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 80093c0:	4604      	mov	r4, r0
 80093c2:	6800      	ldr	r0, [r0, #0]
 80093c4:	1a6d      	subs	r5, r5, r1
 80093c6:	4408      	add	r0, r1
 80093c8:	7a21      	ldrb	r1, [r4, #8]
 80093ca:	b91a      	cbnz	r2, 80093d4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 80093cc:	b919      	cbnz	r1, 80093d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 80093ce:	4a0a      	ldr	r2, [pc, #40]	; (80093f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 80093d0:	9100      	str	r1, [sp, #0]
 80093d2:	e002      	b.n	80093da <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 80093d4:	b159      	cbz	r1, 80093ee <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 80093d6:	9200      	str	r2, [sp, #0]
 80093d8:	4a08      	ldr	r2, [pc, #32]	; (80093fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 80093da:	4629      	mov	r1, r5
 80093dc:	f7ff fa40 	bl	8008860 <snprintf>
 80093e0:	4285      	cmp	r5, r0
 80093e2:	bfa2      	ittt	ge
 80093e4:	88e3      	ldrhge	r3, [r4, #6]
 80093e6:	181b      	addge	r3, r3, r0
 80093e8:	80e3      	strhge	r3, [r4, #6]
 80093ea:	b003      	add	sp, #12
 80093ec:	bd30      	pop	{r4, r5, pc}
 80093ee:	2201      	movs	r2, #1
 80093f0:	9200      	str	r2, [sp, #0]
 80093f2:	4a03      	ldr	r2, [pc, #12]	; (8009400 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 80093f4:	e7f1      	b.n	80093da <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 80093f6:	bf00      	nop
 80093f8:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 80093fc:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 8009400:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}

08009404 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009404:	b510      	push	{r4, lr}
 8009406:	4604      	mov	r4, r0
 8009408:	2220      	movs	r2, #32
 800940a:	f840 1b04 	str.w	r1, [r0], #4
 800940e:	2100      	movs	r1, #0
 8009410:	f005 fdd2 	bl	800efb8 <memset>
 8009414:	4620      	mov	r0, r4
 8009416:	bd10      	pop	{r4, pc}

08009418 <RemoteConfigParams::Load()>:
 8009418:	b508      	push	{r3, lr}
 800941a:	2300      	movs	r3, #0
 800941c:	4601      	mov	r1, r0
 800941e:	6043      	str	r3, [r0, #4]
 8009420:	6800      	ldr	r0, [r0, #0]
 8009422:	b120      	cbz	r0, 800942e <RemoteConfigParams::Load()+0x16>
 8009424:	6803      	ldr	r3, [r0, #0]
 8009426:	3104      	adds	r1, #4
 8009428:	68db      	ldr	r3, [r3, #12]
 800942a:	4798      	blx	r3
 800942c:	2001      	movs	r0, #1
 800942e:	bd08      	pop	{r3, pc}

08009430 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009430:	2300      	movs	r3, #0
 8009432:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009434:	460d      	mov	r5, r1
 8009436:	4616      	mov	r6, r2
 8009438:	4604      	mov	r4, r0
 800943a:	6043      	str	r3, [r0, #4]
 800943c:	4602      	mov	r2, r0
 800943e:	490a      	ldr	r1, [pc, #40]	; (8009468 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009440:	4668      	mov	r0, sp
 8009442:	f004 fffb 	bl	800e43c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009446:	4632      	mov	r2, r6
 8009448:	4629      	mov	r1, r5
 800944a:	4668      	mov	r0, sp
 800944c:	f004 fffa 	bl	800e444 <ReadConfigFile::Read(char const*, unsigned int)>
 8009450:	4621      	mov	r1, r4
 8009452:	f851 0b04 	ldr.w	r0, [r1], #4
 8009456:	6803      	ldr	r3, [r0, #0]
 8009458:	689b      	ldr	r3, [r3, #8]
 800945a:	4798      	blx	r3
 800945c:	4668      	mov	r0, sp
 800945e:	f004 fff0 	bl	800e442 <ReadConfigFile::~ReadConfigFile()>
 8009462:	b002      	add	sp, #8
 8009464:	bd70      	pop	{r4, r5, r6, pc}
 8009466:	bf00      	nop
 8009468:	08009529 	stmdaeq	r0, {r0, r3, r5, r8, sl, ip, pc}

0800946c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800946c:	6843      	ldr	r3, [r0, #4]
 800946e:	b111      	cbz	r1, 8009476 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009470:	4313      	orrs	r3, r2
 8009472:	6043      	str	r3, [r0, #4]
 8009474:	4770      	bx	lr
 8009476:	ea23 0302 	bic.w	r3, r3, r2
 800947a:	e7fa      	b.n	8009472 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800947c <RemoteConfigParams::callbackFunction(char const*)>:
 800947c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800947e:	460d      	mov	r5, r1
 8009480:	4604      	mov	r4, r0
 8009482:	4923      	ldr	r1, [pc, #140]	; (8009510 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009484:	4628      	mov	r0, r5
 8009486:	f10d 0203 	add.w	r2, sp, #3
 800948a:	f005 f887 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800948e:	b940      	cbnz	r0, 80094a2 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009490:	2201      	movs	r2, #1
 8009492:	4620      	mov	r0, r4
 8009494:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009498:	b003      	add	sp, #12
 800949a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800949e:	f7ff bfe5 	b.w	800946c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 80094a2:	4628      	mov	r0, r5
 80094a4:	491b      	ldr	r1, [pc, #108]	; (8009514 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 80094a6:	f10d 0203 	add.w	r2, sp, #3
 80094aa:	f005 f877 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094ae:	b908      	cbnz	r0, 80094b4 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 80094b0:	2202      	movs	r2, #2
 80094b2:	e7ee      	b.n	8009492 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094b4:	4628      	mov	r0, r5
 80094b6:	4918      	ldr	r1, [pc, #96]	; (8009518 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 80094b8:	f10d 0203 	add.w	r2, sp, #3
 80094bc:	f005 f86e 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094c0:	b908      	cbnz	r0, 80094c6 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 80094c2:	2204      	movs	r2, #4
 80094c4:	e7e5      	b.n	8009492 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094c6:	4628      	mov	r0, r5
 80094c8:	4914      	ldr	r1, [pc, #80]	; (800951c <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 80094ca:	f10d 0203 	add.w	r2, sp, #3
 80094ce:	f005 f865 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094d2:	b908      	cbnz	r0, 80094d8 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 80094d4:	2208      	movs	r2, #8
 80094d6:	e7dc      	b.n	8009492 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094d8:	4628      	mov	r0, r5
 80094da:	4911      	ldr	r1, [pc, #68]	; (8009520 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 80094dc:	f10d 0203 	add.w	r2, sp, #3
 80094e0:	f005 f85c 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80094e4:	b908      	cbnz	r0, 80094ea <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 80094e6:	2220      	movs	r2, #32
 80094e8:	e7d3      	b.n	8009492 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 80094ea:	2317      	movs	r3, #23
 80094ec:	4628      	mov	r0, r5
 80094ee:	9301      	str	r3, [sp, #4]
 80094f0:	490c      	ldr	r1, [pc, #48]	; (8009524 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 80094f2:	ab01      	add	r3, sp, #4
 80094f4:	f104 020c 	add.w	r2, r4, #12
 80094f8:	f004 ffd8 	bl	800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80094fc:	b930      	cbnz	r0, 800950c <RemoteConfigParams::callbackFunction(char const*)+0x90>
 80094fe:	9b01      	ldr	r3, [sp, #4]
 8009500:	4423      	add	r3, r4
 8009502:	7318      	strb	r0, [r3, #12]
 8009504:	6863      	ldr	r3, [r4, #4]
 8009506:	f043 0310 	orr.w	r3, r3, #16
 800950a:	6063      	str	r3, [r4, #4]
 800950c:	b003      	add	sp, #12
 800950e:	bd30      	pop	{r4, r5, pc}
 8009510:	080116c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, ip}
 8009514:	080116e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, ip}
 8009518:	080116f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, ip}
 800951c:	08011703 	stmdaeq	r1, {r0, r1, r8, r9, sl, ip}
 8009520:	08011711 	stmdaeq	r1, {r0, r4, r8, r9, sl, ip}
 8009524:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}

08009528 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009528:	f7ff bfa8 	b.w	800947c <RemoteConfigParams::callbackFunction(char const*)>

0800952c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800952c:	b570      	push	{r4, r5, r6, lr}
 800952e:	4604      	mov	r4, r0
 8009530:	4615      	mov	r5, r2
 8009532:	461e      	mov	r6, r3
 8009534:	b086      	sub	sp, #24
 8009536:	3004      	adds	r0, #4
 8009538:	2900      	cmp	r1, #0
 800953a:	d041      	beq.n	80095c0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800953c:	2220      	movs	r2, #32
 800953e:	f005 fd24 	bl	800ef8a <memmove>
 8009542:	4633      	mov	r3, r6
 8009544:	462a      	mov	r2, r5
 8009546:	4937      	ldr	r1, [pc, #220]	; (8009624 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009548:	a803      	add	r0, sp, #12
 800954a:	f004 fed7 	bl	800e2fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800954e:	6862      	ldr	r2, [r4, #4]
 8009550:	4935      	ldr	r1, [pc, #212]	; (8009628 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009552:	f002 0201 	and.w	r2, r2, #1
 8009556:	a803      	add	r0, sp, #12
 8009558:	f7ff ff2c 	bl	80093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800955c:	6862      	ldr	r2, [r4, #4]
 800955e:	4933      	ldr	r1, [pc, #204]	; (800962c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009560:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009564:	a803      	add	r0, sp, #12
 8009566:	f7ff ff25 	bl	80093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800956a:	6862      	ldr	r2, [r4, #4]
 800956c:	4930      	ldr	r1, [pc, #192]	; (8009630 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800956e:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009572:	a803      	add	r0, sp, #12
 8009574:	f7ff ff1e 	bl	80093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009578:	6862      	ldr	r2, [r4, #4]
 800957a:	492e      	ldr	r1, [pc, #184]	; (8009634 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800957c:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009580:	a803      	add	r0, sp, #12
 8009582:	f7ff ff17 	bl	80093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009586:	6862      	ldr	r2, [r4, #4]
 8009588:	492b      	ldr	r1, [pc, #172]	; (8009638 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800958a:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800958e:	a803      	add	r0, sp, #12
 8009590:	f7ff ff10 	bl	80093b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009594:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009598:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800959c:	6862      	ldr	r2, [r4, #4]
 800959e:	42ab      	cmp	r3, r5
 80095a0:	d223      	bcs.n	80095ea <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 80095a2:	9803      	ldr	r0, [sp, #12]
 80095a4:	06d2      	lsls	r2, r2, #27
 80095a6:	4418      	add	r0, r3
 80095a8:	eba5 0503 	sub.w	r5, r5, r3
 80095ac:	f104 040c 	add.w	r4, r4, #12
 80095b0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80095b4:	d40b      	bmi.n	80095ce <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 80095b6:	b95b      	cbnz	r3, 80095d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 80095b8:	4b20      	ldr	r3, [pc, #128]	; (800963c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 80095ba:	4a21      	ldr	r2, [pc, #132]	; (8009640 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 80095bc:	9400      	str	r4, [sp, #0]
 80095be:	e00a      	b.n	80095d6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 80095c0:	6823      	ldr	r3, [r4, #0]
 80095c2:	4601      	mov	r1, r0
 80095c4:	681a      	ldr	r2, [r3, #0]
 80095c6:	4618      	mov	r0, r3
 80095c8:	68d2      	ldr	r2, [r2, #12]
 80095ca:	4790      	blx	r2
 80095cc:	e7b9      	b.n	8009542 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 80095ce:	b32b      	cbz	r3, 800961c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 80095d0:	4b1a      	ldr	r3, [pc, #104]	; (800963c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 80095d2:	4a1c      	ldr	r2, [pc, #112]	; (8009644 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 80095d4:	9400      	str	r4, [sp, #0]
 80095d6:	4629      	mov	r1, r5
 80095d8:	f7ff f942 	bl	8008860 <snprintf>
 80095dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80095e0:	4285      	cmp	r5, r0
 80095e2:	bfa4      	itt	ge
 80095e4:	181b      	addge	r3, r3, r0
 80095e6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80095ea:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80095ee:	b17b      	cbz	r3, 8009610 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 80095f0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80095f4:	9b03      	ldr	r3, [sp, #12]
 80095f6:	4413      	add	r3, r2
 80095f8:	227d      	movs	r2, #125	; 0x7d
 80095fa:	f803 2c01 	strb.w	r2, [r3, #-1]
 80095fe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009602:	9903      	ldr	r1, [sp, #12]
 8009604:	54ca      	strb	r2, [r1, r3]
 8009606:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800960a:	3301      	adds	r3, #1
 800960c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009610:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009614:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009616:	601a      	str	r2, [r3, #0]
 8009618:	b006      	add	sp, #24
 800961a:	bd70      	pop	{r4, r5, r6, pc}
 800961c:	4b07      	ldr	r3, [pc, #28]	; (800963c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800961e:	4a0a      	ldr	r2, [pc, #40]	; (8009648 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009620:	9400      	str	r4, [sp, #0]
 8009622:	e7d8      	b.n	80095d6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8009624:	080116ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, ip}
 8009628:	080116c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, ip}
 800962c:	080116e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, ip}
 8009630:	080116f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, ip}
 8009634:	08011703 	stmdaeq	r1, {r0, r1, r8, r9, sl, ip}
 8009638:	08011711 	stmdaeq	r1, {r0, r4, r8, r9, sl, ip}
 800963c:	080116da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, ip}
 8009640:	0801132c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip}
 8009644:	08011321 	stmdaeq	r1, {r0, r5, r8, r9, ip}
 8009648:	0801132d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, ip}

0800964c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800964c:	b513      	push	{r0, r1, r4, lr}
 800964e:	6804      	ldr	r4, [r0, #0]
 8009650:	b914      	cbnz	r4, 8009658 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009652:	601c      	str	r4, [r3, #0]
 8009654:	b002      	add	sp, #8
 8009656:	bd10      	pop	{r4, pc}
 8009658:	9300      	str	r3, [sp, #0]
 800965a:	4613      	mov	r3, r2
 800965c:	460a      	mov	r2, r1
 800965e:	2100      	movs	r1, #0
 8009660:	f7ff ff64 	bl	800952c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009664:	e7f6      	b.n	8009654 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009666 <RemoteConfigParams::Set(RemoteConfig*)>:
 8009666:	b538      	push	{r3, r4, r5, lr}
 8009668:	460c      	mov	r4, r1
 800966a:	4605      	mov	r5, r0
 800966c:	6841      	ldr	r1, [r0, #4]
 800966e:	4620      	mov	r0, r4
 8009670:	f001 0101 	and.w	r1, r1, #1
 8009674:	f7ff fc6c 	bl	8008f50 <RemoteConfig::SetDisable(bool)>
 8009678:	686b      	ldr	r3, [r5, #4]
 800967a:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800967e:	7362      	strb	r2, [r4, #13]
 8009680:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009684:	73a2      	strb	r2, [r4, #14]
 8009686:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800968a:	73e2      	strb	r2, [r4, #15]
 800968c:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009690:	06db      	lsls	r3, r3, #27
 8009692:	7422      	strb	r2, [r4, #16]
 8009694:	d506      	bpl.n	80096a4 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8009696:	4620      	mov	r0, r4
 8009698:	f105 010c 	add.w	r1, r5, #12
 800969c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80096a0:	f7ff bc76 	b.w	8008f90 <RemoteConfig::SetDisplayName(char const*)>
 80096a4:	bd38      	pop	{r3, r4, r5, pc}

080096a6 <RemoteConfigParams::Dump()>:
 80096a6:	4770      	bx	lr

080096a8 <RemoteConfig::HandleReboot()>:
 80096a8:	7b83      	ldrb	r3, [r0, #14]
 80096aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096ac:	2b00      	cmp	r3, #0
 80096ae:	d03c      	beq.n	800972a <RemoteConfig::HandleReboot()+0x82>
 80096b0:	2301      	movs	r3, #1
 80096b2:	4c1f      	ldr	r4, [pc, #124]	; (8009730 <RemoteConfig::HandleReboot()+0x88>)
 80096b4:	7443      	strb	r3, [r0, #17]
 80096b6:	6825      	ldr	r5, [r4, #0]
 80096b8:	69a8      	ldr	r0, [r5, #24]
 80096ba:	b138      	cbz	r0, 80096cc <RemoteConfig::HandleReboot()+0x24>
 80096bc:	2100      	movs	r1, #0
 80096be:	6803      	ldr	r3, [r0, #0]
 80096c0:	7429      	strb	r1, [r5, #16]
 80096c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096c4:	4798      	blx	r3
 80096c6:	4b1b      	ldr	r3, [pc, #108]	; (8009734 <RemoteConfig::HandleReboot()+0x8c>)
 80096c8:	681b      	ldr	r3, [r3, #0]
 80096ca:	606b      	str	r3, [r5, #4]
 80096cc:	4d1a      	ldr	r5, [pc, #104]	; (8009738 <RemoteConfig::HandleReboot()+0x90>)
 80096ce:	6828      	ldr	r0, [r5, #0]
 80096d0:	f004 fa16 	bl	800db00 <ConfigStore::Flash()>
 80096d4:	2800      	cmp	r0, #0
 80096d6:	d1fa      	bne.n	80096ce <RemoteConfig::HandleReboot()+0x26>
 80096d8:	4b18      	ldr	r3, [pc, #96]	; (800973c <RemoteConfig::HandleReboot()+0x94>)
 80096da:	6818      	ldr	r0, [r3, #0]
 80096dc:	f003 f916 	bl	800c90c <Network::Shutdown()>
 80096e0:	4817      	ldr	r0, [pc, #92]	; (8009740 <RemoteConfig::HandleReboot()+0x98>)
 80096e2:	f7ff f8ad 	bl	8008840 <printf>
 80096e6:	6823      	ldr	r3, [r4, #0]
 80096e8:	6998      	ldr	r0, [r3, #24]
 80096ea:	b110      	cbz	r0, 80096f2 <RemoteConfig::HandleReboot()+0x4a>
 80096ec:	6803      	ldr	r3, [r0, #0]
 80096ee:	68db      	ldr	r3, [r3, #12]
 80096f0:	4798      	blx	r3
 80096f2:	6824      	ldr	r4, [r4, #0]
 80096f4:	4913      	ldr	r1, [pc, #76]	; (8009744 <RemoteConfig::HandleReboot()+0x9c>)
 80096f6:	4620      	mov	r0, r4
 80096f8:	f7ff fb40 	bl	8008d7c <Display::TextStatus(char const*)>
 80096fc:	7c63      	ldrb	r3, [r4, #17]
 80096fe:	b183      	cbz	r3, 8009722 <RemoteConfig::HandleReboot()+0x7a>
 8009700:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8009704:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009708:	23bf      	movs	r3, #191	; 0xbf
 800970a:	7a20      	ldrb	r0, [r4, #8]
 800970c:	f88d 3006 	strb.w	r3, [sp, #6]
 8009710:	f006 ff8c 	bl	801062c <gd32_i2c_set_address>
 8009714:	68e0      	ldr	r0, [r4, #12]
 8009716:	f006 ff81 	bl	801061c <gd32_i2c_set_baudrate>
 800971a:	2103      	movs	r1, #3
 800971c:	a801      	add	r0, sp, #4
 800971e:	f006 ff8b 	bl	8010638 <gd32_i2c_write>
 8009722:	4b09      	ldr	r3, [pc, #36]	; (8009748 <RemoteConfig::HandleReboot()+0xa0>)
 8009724:	6818      	ldr	r0, [r3, #0]
 8009726:	f005 fb59 	bl	800eddc <Hardware::Reboot()>
 800972a:	b003      	add	sp, #12
 800972c:	bd30      	pop	{r4, r5, pc}
 800972e:	bf00      	nop
 8009730:	20009f8c 	andcs	r9, r0, ip, lsl #31
 8009734:	2000a094 	mulcs	r0, r4, r0
 8009738:	20009f54 	andcs	r9, r0, r4, asr pc
 800973c:	20008970 	andcs	r8, r0, r0, ror r9
 8009740:	08011334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip}
 8009744:	08011343 	stmdaeq	r1, {r0, r1, r6, r8, r9, ip}
 8009748:	2000a07c 	andcs	sl, r0, ip, ror r0

0800974c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800974c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009750:	2000      	movs	r0, #0
 8009752:	4d12      	ldr	r5, [pc, #72]	; (800979c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009754:	f10d 0c04 	add.w	ip, sp, #4
 8009758:	6814      	ldr	r4, [r2, #0]
 800975a:	7d2b      	ldrb	r3, [r5, #20]
 800975c:	692e      	ldr	r6, [r5, #16]
 800975e:	42a3      	cmp	r3, r4
 8009760:	bf34      	ite	cc
 8009762:	4664      	movcc	r4, ip
 8009764:	4614      	movcs	r4, r2
 8009766:	9301      	str	r3, [sp, #4]
 8009768:	6827      	ldr	r7, [r4, #0]
 800976a:	460c      	mov	r4, r1
 800976c:	3e01      	subs	r6, #1
 800976e:	440f      	add	r7, r1
 8009770:	42bc      	cmp	r4, r7
 8009772:	d101      	bne.n	8009778 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 8009774:	6013      	str	r3, [r2, #0]
 8009776:	e00c      	b.n	8009792 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 8009778:	f894 8000 	ldrb.w	r8, [r4]
 800977c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009780:	45f0      	cmp	r8, lr
 8009782:	d009      	beq.n	8009798 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009784:	3001      	adds	r0, #1
 8009786:	2804      	cmp	r0, #4
 8009788:	f105 051c 	add.w	r5, r5, #28
 800978c:	d1e4      	bne.n	8009758 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800978e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009792:	b002      	add	sp, #8
 8009794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009798:	3401      	adds	r4, #1
 800979a:	e7e9      	b.n	8009770 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800979c:	0801137c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip}

080097a0 <RemoteConfig::PlatformHandleTftpSet()>:
 80097a0:	f890 1020 	ldrb.w	r1, [r0, #32]
 80097a4:	b109      	cbz	r1, 80097aa <RemoteConfig::PlatformHandleTftpSet()+0xa>
 80097a6:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 80097aa:	2002      	movs	r0, #2
 80097ac:	f005 bdf6 	b.w	800f39c <bkp_data_write>

080097b0 <RemoteConfig::PlatformHandleTftpGet()>:
 80097b0:	b510      	push	{r4, lr}
 80097b2:	4604      	mov	r4, r0
 80097b4:	2002      	movs	r0, #2
 80097b6:	f005 fe07 	bl	800f3c8 <bkp_data_read>
 80097ba:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 80097be:	1ac3      	subs	r3, r0, r3
 80097c0:	4258      	negs	r0, r3
 80097c2:	4158      	adcs	r0, r3
 80097c4:	f884 0020 	strb.w	r0, [r4, #32]
 80097c8:	bd10      	pop	{r4, pc}

080097ca <strcmp>:
 80097ca:	1e43      	subs	r3, r0, #1
 80097cc:	3901      	subs	r1, #1
 80097ce:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80097d2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80097d6:	4290      	cmp	r0, r2
 80097d8:	d001      	beq.n	80097de <strcmp+0x14>
 80097da:	1a80      	subs	r0, r0, r2
 80097dc:	e001      	b.n	80097e2 <strcmp+0x18>
 80097de:	2800      	cmp	r0, #0
 80097e0:	d1f5      	bne.n	80097ce <strcmp+0x4>
 80097e2:	4770      	bx	lr

080097e4 <strcasecmp>:
 80097e4:	b530      	push	{r4, r5, lr}
 80097e6:	1e42      	subs	r2, r0, #1
 80097e8:	3901      	subs	r1, #1
 80097ea:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80097ee:	4604      	mov	r4, r0
 80097f0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80097f4:	2b19      	cmp	r3, #25
 80097f6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80097fa:	bf98      	it	ls
 80097fc:	f100 0420 	addls.w	r4, r0, #32
 8009800:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009804:	2d19      	cmp	r5, #25
 8009806:	bf98      	it	ls
 8009808:	3320      	addls	r3, #32
 800980a:	42a3      	cmp	r3, r4
 800980c:	d001      	beq.n	8009812 <strcasecmp+0x2e>
 800980e:	1ae0      	subs	r0, r4, r3
 8009810:	e001      	b.n	8009816 <strcasecmp+0x32>
 8009812:	2800      	cmp	r0, #0
 8009814:	d1e9      	bne.n	80097ea <strcasecmp+0x6>
 8009816:	bd30      	pop	{r4, r5, pc}

08009818 <PropertiesConfig::EnableJSON(bool)>:
 8009818:	4a04      	ldr	r2, [pc, #16]	; (800982c <PropertiesConfig::EnableJSON(bool)+0x14>)
 800981a:	7813      	ldrb	r3, [r2, #0]
 800981c:	b118      	cbz	r0, 8009826 <PropertiesConfig::EnableJSON(bool)+0xe>
 800981e:	f043 0301 	orr.w	r3, r3, #1
 8009822:	7013      	strb	r3, [r2, #0]
 8009824:	4770      	bx	lr
 8009826:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800982a:	e7fa      	b.n	8009822 <PropertiesConfig::EnableJSON(bool)+0xa>
 800982c:	20009f88 	andcs	r9, r0, r8, lsl #31

08009830 <HttpDaemon::HttpDaemon()>:
 8009830:	4a08      	ldr	r2, [pc, #32]	; (8009854 <HttpDaemon::HttpDaemon()+0x24>)
 8009832:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009836:	6002      	str	r2, [r0, #0]
 8009838:	2200      	movs	r2, #0
 800983a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800983e:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8009842:	2102      	movs	r1, #2
 8009844:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009848:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800984c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8009850:	60c2      	str	r2, [r0, #12]
 8009852:	4770      	bx	lr
 8009854:	08011646 	stmdaeq	r1, {r1, r2, r6, r9, sl, ip}

08009858 <HttpDaemon::Start()>:
 8009858:	4b04      	ldr	r3, [pc, #16]	; (800986c <HttpDaemon::Start()+0x14>)
 800985a:	b510      	push	{r4, lr}
 800985c:	2150      	movs	r1, #80	; 0x50
 800985e:	4604      	mov	r4, r0
 8009860:	6818      	ldr	r0, [r3, #0]
 8009862:	f003 fa33 	bl	800cccc <Network::TcpBegin(unsigned short)>
 8009866:	6120      	str	r0, [r4, #16]
 8009868:	bd10      	pop	{r4, pc}
 800986a:	bf00      	nop
 800986c:	20008970 	andcs	r8, r0, r0, ror r9

08009870 <HttpDaemon::ParseMethod(char*)>:
 8009870:	b538      	push	{r3, r4, r5, lr}
 8009872:	4604      	mov	r4, r0
 8009874:	4608      	mov	r0, r1
 8009876:	491a      	ldr	r1, [pc, #104]	; (80098e0 <HttpDaemon::ParseMethod(char*)+0x70>)
 8009878:	f005 fbc8 	bl	800f00c <strtok>
 800987c:	4605      	mov	r5, r0
 800987e:	b360      	cbz	r0, 80098da <HttpDaemon::ParseMethod(char*)+0x6a>
 8009880:	4918      	ldr	r1, [pc, #96]	; (80098e4 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009882:	f7ff ffa2 	bl	80097ca <strcmp>
 8009886:	b128      	cbz	r0, 8009894 <HttpDaemon::ParseMethod(char*)+0x24>
 8009888:	4628      	mov	r0, r5
 800988a:	4917      	ldr	r1, [pc, #92]	; (80098e8 <HttpDaemon::ParseMethod(char*)+0x78>)
 800988c:	f7ff ff9d 	bl	80097ca <strcmp>
 8009890:	bb18      	cbnz	r0, 80098da <HttpDaemon::ParseMethod(char*)+0x6a>
 8009892:	2001      	movs	r0, #1
 8009894:	61e0      	str	r0, [r4, #28]
 8009896:	4912      	ldr	r1, [pc, #72]	; (80098e0 <HttpDaemon::ParseMethod(char*)+0x70>)
 8009898:	2000      	movs	r0, #0
 800989a:	f005 fbb7 	bl	800f00c <strtok>
 800989e:	b910      	cbnz	r0, 80098a6 <HttpDaemon::ParseMethod(char*)+0x36>
 80098a0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80098a4:	bd38      	pop	{r3, r4, r5, pc}
 80098a6:	6060      	str	r0, [r4, #4]
 80098a8:	4910      	ldr	r1, [pc, #64]	; (80098ec <HttpDaemon::ParseMethod(char*)+0x7c>)
 80098aa:	2000      	movs	r0, #0
 80098ac:	f005 fbae 	bl	800f00c <strtok>
 80098b0:	2800      	cmp	r0, #0
 80098b2:	d0f5      	beq.n	80098a0 <HttpDaemon::ParseMethod(char*)+0x30>
 80098b4:	490e      	ldr	r1, [pc, #56]	; (80098f0 <HttpDaemon::ParseMethod(char*)+0x80>)
 80098b6:	f7ff ff88 	bl	80097ca <strcmp>
 80098ba:	2800      	cmp	r0, #0
 80098bc:	d1f0      	bne.n	80098a0 <HttpDaemon::ParseMethod(char*)+0x30>
 80098be:	490d      	ldr	r1, [pc, #52]	; (80098f4 <HttpDaemon::ParseMethod(char*)+0x84>)
 80098c0:	f005 fba4 	bl	800f00c <strtok>
 80098c4:	2800      	cmp	r0, #0
 80098c6:	d0eb      	beq.n	80098a0 <HttpDaemon::ParseMethod(char*)+0x30>
 80098c8:	490b      	ldr	r1, [pc, #44]	; (80098f8 <HttpDaemon::ParseMethod(char*)+0x88>)
 80098ca:	f7ff ff7e 	bl	80097ca <strcmp>
 80098ce:	2800      	cmp	r0, #0
 80098d0:	f240 10f9 	movw	r0, #505	; 0x1f9
 80098d4:	bf08      	it	eq
 80098d6:	20c8      	moveq	r0, #200	; 0xc8
 80098d8:	e7e4      	b.n	80098a4 <HttpDaemon::ParseMethod(char*)+0x34>
 80098da:	f240 10f5 	movw	r0, #501	; 0x1f5
 80098de:	e7e1      	b.n	80098a4 <HttpDaemon::ParseMethod(char*)+0x34>
 80098e0:	080110a3 	stmdaeq	r1, {r0, r1, r5, r7, ip}
 80098e4:	080113ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, ip}
 80098e8:	080113f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, ip}
 80098ec:	0801145a 	stmdaeq	r1, {r1, r3, r4, r6, sl, ip}
 80098f0:	080113f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, ip}
 80098f4:	080113fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip}
 80098f8:	080113fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip}

080098fc <HttpDaemon::ParseHeaderField(char*)>:
 80098fc:	b538      	push	{r3, r4, r5, lr}
 80098fe:	4605      	mov	r5, r0
 8009900:	4608      	mov	r0, r1
 8009902:	491d      	ldr	r1, [pc, #116]	; (8009978 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009904:	f005 fb82 	bl	800f00c <strtok>
 8009908:	4604      	mov	r4, r0
 800990a:	b910      	cbnz	r0, 8009912 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800990c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009910:	bd38      	pop	{r3, r4, r5, pc}
 8009912:	491a      	ldr	r1, [pc, #104]	; (800997c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009914:	f7ff ff66 	bl	80097e4 <strcasecmp>
 8009918:	b970      	cbnz	r0, 8009938 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800991a:	4919      	ldr	r1, [pc, #100]	; (8009980 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800991c:	f005 fb76 	bl	800f00c <strtok>
 8009920:	2800      	cmp	r0, #0
 8009922:	d0f3      	beq.n	800990c <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009924:	4917      	ldr	r1, [pc, #92]	; (8009984 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 8009926:	f7ff ff50 	bl	80097ca <strcmp>
 800992a:	b108      	cbz	r0, 8009930 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800992c:	20c8      	movs	r0, #200	; 0xc8
 800992e:	e7ef      	b.n	8009910 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009930:	2301      	movs	r3, #1
 8009932:	f885 3020 	strb.w	r3, [r5, #32]
 8009936:	e7f9      	b.n	800992c <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009938:	4620      	mov	r0, r4
 800993a:	4913      	ldr	r1, [pc, #76]	; (8009988 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800993c:	f7ff ff52 	bl	80097e4 <strcasecmp>
 8009940:	4604      	mov	r4, r0
 8009942:	2800      	cmp	r0, #0
 8009944:	d1f2      	bne.n	800992c <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009946:	4911      	ldr	r1, [pc, #68]	; (800998c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009948:	f005 fb60 	bl	800f00c <strtok>
 800994c:	2800      	cmp	r0, #0
 800994e:	d0dd      	beq.n	800990c <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009950:	1e42      	subs	r2, r0, #1
 8009952:	4623      	mov	r3, r4
 8009954:	200a      	movs	r0, #10
 8009956:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800995a:	b909      	cbnz	r1, 8009960 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800995c:	84eb      	strh	r3, [r5, #38]	; 0x26
 800995e:	e7e5      	b.n	800992c <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009960:	3930      	subs	r1, #48	; 0x30
 8009962:	2909      	cmp	r1, #9
 8009964:	d8d2      	bhi.n	800990c <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009966:	fb00 1303 	mla	r3, r0, r3, r1
 800996a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800996e:	d9f2      	bls.n	8009956 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009970:	f240 109d 	movw	r0, #413	; 0x19d
 8009974:	e7cc      	b.n	8009910 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009976:	bf00      	nop
 8009978:	08011401 	stmdaeq	r1, {r0, sl, ip}
 800997c:	08011403 	stmdaeq	r1, {r0, r1, sl, ip}
 8009980:	08011410 	stmdaeq	r1, {r4, sl, ip}
 8009984:	08011413 	stmdaeq	r1, {r0, r1, r4, sl, ip}
 8009988:	08011424 	stmdaeq	r1, {r2, r5, sl, ip}
 800998c:	080110a3 	stmdaeq	r1, {r0, r1, r5, r7, ip}

08009990 <HttpDaemon::ParseRequest()>:
 8009990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009992:	2400      	movs	r4, #0
 8009994:	4605      	mov	r5, r0
 8009996:	4622      	mov	r2, r4
 8009998:	4626      	mov	r6, r4
 800999a:	68c1      	ldr	r1, [r0, #12]
 800999c:	f880 4020 	strb.w	r4, [r0, #32]
 80099a0:	6244      	str	r4, [r0, #36]	; 0x24
 80099a2:	8aab      	ldrh	r3, [r5, #20]
 80099a4:	42a3      	cmp	r3, r4
 80099a6:	d91d      	bls.n	80099e4 <HttpDaemon::ParseRequest()+0x54>
 80099a8:	68eb      	ldr	r3, [r5, #12]
 80099aa:	5d18      	ldrb	r0, [r3, r4]
 80099ac:	280a      	cmp	r0, #10
 80099ae:	d10e      	bne.n	80099ce <HttpDaemon::ParseRequest()+0x3e>
 80099b0:	4423      	add	r3, r4
 80099b2:	f803 6c01 	strb.w	r6, [r3, #-1]
 80099b6:	1c57      	adds	r7, r2, #1
 80099b8:	b962      	cbnz	r2, 80099d4 <HttpDaemon::ParseRequest()+0x44>
 80099ba:	4628      	mov	r0, r5
 80099bc:	f7ff ff58 	bl	8009870 <HttpDaemon::ParseMethod(char*)>
 80099c0:	28c8      	cmp	r0, #200	; 0xc8
 80099c2:	d110      	bne.n	80099e6 <HttpDaemon::ParseRequest()+0x56>
 80099c4:	463a      	mov	r2, r7
 80099c6:	68e9      	ldr	r1, [r5, #12]
 80099c8:	3401      	adds	r4, #1
 80099ca:	b2a4      	uxth	r4, r4
 80099cc:	4421      	add	r1, r4
 80099ce:	3401      	adds	r4, #1
 80099d0:	b2a4      	uxth	r4, r4
 80099d2:	e7e6      	b.n	80099a2 <HttpDaemon::ParseRequest()+0x12>
 80099d4:	7808      	ldrb	r0, [r1, #0]
 80099d6:	b968      	cbnz	r0, 80099f4 <HttpDaemon::ParseRequest()+0x64>
 80099d8:	696b      	ldr	r3, [r5, #20]
 80099da:	3b01      	subs	r3, #1
 80099dc:	1b1b      	subs	r3, r3, r4
 80099de:	b29b      	uxth	r3, r3
 80099e0:	84ab      	strh	r3, [r5, #36]	; 0x24
 80099e2:	b90b      	cbnz	r3, 80099e8 <HttpDaemon::ParseRequest()+0x58>
 80099e4:	20c8      	movs	r0, #200	; 0xc8
 80099e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80099e8:	68ea      	ldr	r2, [r5, #12]
 80099ea:	3401      	adds	r4, #1
 80099ec:	4414      	add	r4, r2
 80099ee:	60ac      	str	r4, [r5, #8]
 80099f0:	54e0      	strb	r0, [r4, r3]
 80099f2:	e7f7      	b.n	80099e4 <HttpDaemon::ParseRequest()+0x54>
 80099f4:	4628      	mov	r0, r5
 80099f6:	f7ff ff81 	bl	80098fc <HttpDaemon::ParseHeaderField(char*)>
 80099fa:	e7e1      	b.n	80099c0 <HttpDaemon::ParseRequest()+0x30>

080099fc <HttpDaemon::HandleGetTxt()>:
 80099fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a00:	6846      	ldr	r6, [r0, #4]
 8009a02:	4607      	mov	r7, r0
 8009a04:	1db4      	adds	r4, r6, #6
 8009a06:	4622      	mov	r2, r4
 8009a08:	4613      	mov	r3, r2
 8009a0a:	7819      	ldrb	r1, [r3, #0]
 8009a0c:	3201      	adds	r2, #1
 8009a0e:	2900      	cmp	r1, #0
 8009a10:	d1fa      	bne.n	8009a08 <HttpDaemon::HandleGetTxt()+0xc>
 8009a12:	1b1b      	subs	r3, r3, r4
 8009a14:	2b04      	cmp	r3, #4
 8009a16:	d803      	bhi.n	8009a20 <HttpDaemon::HandleGetTxt()+0x24>
 8009a18:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009a1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a20:	3b04      	subs	r3, #4
 8009a22:	4914      	ldr	r1, [pc, #80]	; (8009a74 <HttpDaemon::HandleGetTxt()+0x78>)
 8009a24:	18e0      	adds	r0, r4, r3
 8009a26:	f7ff fed0 	bl	80097ca <strcmp>
 8009a2a:	2800      	cmp	r0, #0
 8009a2c:	d1f4      	bne.n	8009a18 <HttpDaemon::HandleGetTxt()+0x1c>
 8009a2e:	4b12      	ldr	r3, [pc, #72]	; (8009a78 <HttpDaemon::HandleGetTxt()+0x7c>)
 8009a30:	2001      	movs	r0, #1
 8009a32:	f893 8000 	ldrb.w	r8, [r3]
 8009a36:	f7ff feef 	bl	8009818 <PropertiesConfig::EnableJSON(bool)>
 8009a3a:	4b10      	ldr	r3, [pc, #64]	; (8009a7c <HttpDaemon::HandleGetTxt()+0x80>)
 8009a3c:	f240 529b 	movw	r2, #1435	; 0x59b
 8009a40:	4621      	mov	r1, r4
 8009a42:	6818      	ldr	r0, [r3, #0]
 8009a44:	f7ff fabc 	bl	8008fc0 <RemoteConfig::HandleGet(void*, unsigned int)>
 8009a48:	4605      	mov	r5, r0
 8009a4a:	f008 0801 	and.w	r8, r8, #1
 8009a4e:	4640      	mov	r0, r8
 8009a50:	f7ff fee2 	bl	8009818 <PropertiesConfig::EnableJSON(bool)>
 8009a54:	2d00      	cmp	r5, #0
 8009a56:	d0df      	beq.n	8009a18 <HttpDaemon::HandleGetTxt()+0x1c>
 8009a58:	847d      	strh	r5, [r7, #34]	; 0x22
 8009a5a:	4b09      	ldr	r3, [pc, #36]	; (8009a80 <HttpDaemon::HandleGetTxt()+0x84>)
 8009a5c:	3506      	adds	r5, #6
 8009a5e:	442e      	add	r6, r5
 8009a60:	42b4      	cmp	r4, r6
 8009a62:	d101      	bne.n	8009a68 <HttpDaemon::HandleGetTxt()+0x6c>
 8009a64:	20c8      	movs	r0, #200	; 0xc8
 8009a66:	e7d9      	b.n	8009a1c <HttpDaemon::HandleGetTxt()+0x20>
 8009a68:	f814 2b01 	ldrb.w	r2, [r4], #1
 8009a6c:	f803 2b01 	strb.w	r2, [r3], #1
 8009a70:	e7f6      	b.n	8009a60 <HttpDaemon::HandleGetTxt()+0x64>
 8009a72:	bf00      	nop
 8009a74:	0801136c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip}
 8009a78:	20009f88 	andcs	r9, r0, r8, lsl #31
 8009a7c:	200000bc 	strhcs	r0, [r0], -ip
 8009a80:	200000c0 	andcs	r0, r0, r0, asr #1

08009a84 <HttpDaemon::HandleGet()>:
 8009a84:	b570      	push	{r4, r5, r6, lr}
 8009a86:	6845      	ldr	r5, [r0, #4]
 8009a88:	4604      	mov	r4, r0
 8009a8a:	493e      	ldr	r1, [pc, #248]	; (8009b84 <HttpDaemon::HandleGet()+0x100>)
 8009a8c:	4628      	mov	r0, r5
 8009a8e:	f7ff fe9c 	bl	80097ca <strcmp>
 8009a92:	b120      	cbz	r0, 8009a9e <HttpDaemon::HandleGet()+0x1a>
 8009a94:	4628      	mov	r0, r5
 8009a96:	493c      	ldr	r1, [pc, #240]	; (8009b88 <HttpDaemon::HandleGet()+0x104>)
 8009a98:	f7ff fe97 	bl	80097ca <strcmp>
 8009a9c:	b950      	cbnz	r0, 8009ab4 <HttpDaemon::HandleGet()+0x30>
 8009a9e:	4b3b      	ldr	r3, [pc, #236]	; (8009b8c <HttpDaemon::HandleGet()+0x108>)
 8009aa0:	493b      	ldr	r1, [pc, #236]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009aa2:	483c      	ldr	r0, [pc, #240]	; (8009b94 <HttpDaemon::HandleGet()+0x110>)
 8009aa4:	6023      	str	r3, [r4, #0]
 8009aa6:	f000 fa67 	bl	8009f78 <get_file_content(char const*, char*)>
 8009aaa:	2800      	cmp	r0, #0
 8009aac:	dd2f      	ble.n	8009b0e <HttpDaemon::HandleGet()+0x8a>
 8009aae:	8460      	strh	r0, [r4, #34]	; 0x22
 8009ab0:	20c8      	movs	r0, #200	; 0xc8
 8009ab2:	bd70      	pop	{r4, r5, r6, pc}
 8009ab4:	4628      	mov	r0, r5
 8009ab6:	4938      	ldr	r1, [pc, #224]	; (8009b98 <HttpDaemon::HandleGet()+0x114>)
 8009ab8:	f7ff fe87 	bl	80097ca <strcmp>
 8009abc:	b920      	cbnz	r0, 8009ac8 <HttpDaemon::HandleGet()+0x44>
 8009abe:	4b37      	ldr	r3, [pc, #220]	; (8009b9c <HttpDaemon::HandleGet()+0x118>)
 8009ac0:	4933      	ldr	r1, [pc, #204]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009ac2:	4837      	ldr	r0, [pc, #220]	; (8009ba0 <HttpDaemon::HandleGet()+0x11c>)
 8009ac4:	6023      	str	r3, [r4, #0]
 8009ac6:	e7ee      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x22>
 8009ac8:	4628      	mov	r0, r5
 8009aca:	4936      	ldr	r1, [pc, #216]	; (8009ba4 <HttpDaemon::HandleGet()+0x120>)
 8009acc:	f7ff fe7d 	bl	80097ca <strcmp>
 8009ad0:	b190      	cbz	r0, 8009af8 <HttpDaemon::HandleGet()+0x74>
 8009ad2:	4a35      	ldr	r2, [pc, #212]	; (8009ba8 <HttpDaemon::HandleGet()+0x124>)
 8009ad4:	1e6b      	subs	r3, r5, #1
 8009ad6:	1d69      	adds	r1, r5, #5
 8009ad8:	428b      	cmp	r3, r1
 8009ada:	d112      	bne.n	8009b02 <HttpDaemon::HandleGet()+0x7e>
 8009adc:	4b33      	ldr	r3, [pc, #204]	; (8009bac <HttpDaemon::HandleGet()+0x128>)
 8009ade:	3506      	adds	r5, #6
 8009ae0:	4628      	mov	r0, r5
 8009ae2:	4933      	ldr	r1, [pc, #204]	; (8009bb0 <HttpDaemon::HandleGet()+0x12c>)
 8009ae4:	6023      	str	r3, [r4, #0]
 8009ae6:	f7ff fe70 	bl	80097ca <strcmp>
 8009aea:	b998      	cbnz	r0, 8009b14 <HttpDaemon::HandleGet()+0x90>
 8009aec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009af0:	4827      	ldr	r0, [pc, #156]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009af2:	f000 f9c9 	bl	8009e88 <remoteconfig::json_get_list(char*, unsigned short)>
 8009af6:	e7d8      	b.n	8009aaa <HttpDaemon::HandleGet()+0x26>
 8009af8:	4b2e      	ldr	r3, [pc, #184]	; (8009bb4 <HttpDaemon::HandleGet()+0x130>)
 8009afa:	4925      	ldr	r1, [pc, #148]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009afc:	482e      	ldr	r0, [pc, #184]	; (8009bb8 <HttpDaemon::HandleGet()+0x134>)
 8009afe:	6023      	str	r3, [r4, #0]
 8009b00:	e7d1      	b.n	8009aa6 <HttpDaemon::HandleGet()+0x22>
 8009b02:	f812 0b01 	ldrb.w	r0, [r2], #1
 8009b06:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8009b0a:	4286      	cmp	r6, r0
 8009b0c:	d0e4      	beq.n	8009ad8 <HttpDaemon::HandleGet()+0x54>
 8009b0e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009b12:	e7ce      	b.n	8009ab2 <HttpDaemon::HandleGet()+0x2e>
 8009b14:	4628      	mov	r0, r5
 8009b16:	4929      	ldr	r1, [pc, #164]	; (8009bbc <HttpDaemon::HandleGet()+0x138>)
 8009b18:	f7ff fe57 	bl	80097ca <strcmp>
 8009b1c:	b928      	cbnz	r0, 8009b2a <HttpDaemon::HandleGet()+0xa6>
 8009b1e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b22:	481b      	ldr	r0, [pc, #108]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009b24:	f000 f9e4 	bl	8009ef0 <remoteconfig::json_get_version(char*, unsigned short)>
 8009b28:	e7bf      	b.n	8009aaa <HttpDaemon::HandleGet()+0x26>
 8009b2a:	4628      	mov	r0, r5
 8009b2c:	4924      	ldr	r1, [pc, #144]	; (8009bc0 <HttpDaemon::HandleGet()+0x13c>)
 8009b2e:	f7ff fe4c 	bl	80097ca <strcmp>
 8009b32:	b948      	cbnz	r0, 8009b48 <HttpDaemon::HandleGet()+0xc4>
 8009b34:	4b23      	ldr	r3, [pc, #140]	; (8009bc4 <HttpDaemon::HandleGet()+0x140>)
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	7bdb      	ldrb	r3, [r3, #15]
 8009b3a:	b303      	cbz	r3, 8009b7e <HttpDaemon::HandleGet()+0xfa>
 8009b3c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b40:	4813      	ldr	r0, [pc, #76]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009b42:	f000 f9f1 	bl	8009f28 <remoteconfig::json_get_uptime(char*, unsigned short)>
 8009b46:	e7b0      	b.n	8009aaa <HttpDaemon::HandleGet()+0x26>
 8009b48:	4628      	mov	r0, r5
 8009b4a:	491f      	ldr	r1, [pc, #124]	; (8009bc8 <HttpDaemon::HandleGet()+0x144>)
 8009b4c:	f7ff fe3d 	bl	80097ca <strcmp>
 8009b50:	b928      	cbnz	r0, 8009b5e <HttpDaemon::HandleGet()+0xda>
 8009b52:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b56:	480e      	ldr	r0, [pc, #56]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009b58:	f000 f9f6 	bl	8009f48 <remoteconfig::json_get_display(char*, unsigned short)>
 8009b5c:	e7a5      	b.n	8009aaa <HttpDaemon::HandleGet()+0x26>
 8009b5e:	4628      	mov	r0, r5
 8009b60:	491a      	ldr	r1, [pc, #104]	; (8009bcc <HttpDaemon::HandleGet()+0x148>)
 8009b62:	f7ff fe32 	bl	80097ca <strcmp>
 8009b66:	b928      	cbnz	r0, 8009b74 <HttpDaemon::HandleGet()+0xf0>
 8009b68:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009b6c:	4808      	ldr	r0, [pc, #32]	; (8009b90 <HttpDaemon::HandleGet()+0x10c>)
 8009b6e:	f000 f9fb 	bl	8009f68 <remoteconfig::json_get_directory(char*, unsigned short)>
 8009b72:	e79a      	b.n	8009aaa <HttpDaemon::HandleGet()+0x26>
 8009b74:	4620      	mov	r0, r4
 8009b76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b7a:	f7ff bf3f 	b.w	80099fc <HttpDaemon::HandleGetTxt()>
 8009b7e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009b82:	e796      	b.n	8009ab2 <HttpDaemon::HandleGet()+0x2e>
 8009b84:	0801145a 	stmdaeq	r1, {r1, r3, r4, r6, sl, ip}
 8009b88:	08011433 	stmdaeq	r1, {r0, r1, r4, r5, sl, ip}
 8009b8c:	08011646 	stmdaeq	r1, {r1, r2, r6, r9, sl, ip}
 8009b90:	200000c0 	andcs	r0, r0, r0, asr #1
 8009b94:	08011434 	stmdaeq	r1, {r2, r4, r5, sl, ip}
 8009b98:	0801143f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, sl, ip}
 8009b9c:	08011666 	stmdaeq	r1, {r1, r2, r5, r6, r9, sl, ip}
 8009ba0:	08011440 	stmdaeq	r1, {r6, sl, ip}
 8009ba4:	0801144b 	stmdaeq	r1, {r0, r1, r3, r6, sl, ip}
 8009ba8:	08011455 	stmdaeq	r1, {r0, r2, r4, r6, sl, ip}
 8009bac:	080116a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip}
 8009bb0:	0801145c 	stmdaeq	r1, {r2, r3, r4, r6, sl, ip}
 8009bb4:	08011686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip}
 8009bb8:	0801144c 	stmdaeq	r1, {r2, r3, r6, sl, ip}
 8009bbc:	08011461 	stmdaeq	r1, {r0, r5, r6, sl, ip}
 8009bc0:	08011469 	stmdaeq	r1, {r0, r3, r5, r6, sl, ip}
 8009bc4:	200000bc 	strhcs	r0, [r0], -ip
 8009bc8:	08011470 	stmdaeq	r1, {r4, r5, r6, sl, ip}
 8009bcc:	08011478 	stmdaeq	r1, {r3, r4, r5, r6, sl, ip}

08009bd0 <HttpDaemon::HandlePost(bool)>:
 8009bd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009bd2:	4604      	mov	r4, r0
 8009bd4:	2900      	cmp	r1, #0
 8009bd6:	f040 808a 	bne.w	8009cee <HttpDaemon::HandlePost(bool)+0x11e>
 8009bda:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009bde:	2b00      	cmp	r3, #0
 8009be0:	d05a      	beq.n	8009c98 <HttpDaemon::HandlePost(bool)+0xc8>
 8009be2:	6845      	ldr	r5, [r0, #4]
 8009be4:	4944      	ldr	r1, [pc, #272]	; (8009cf8 <HttpDaemon::HandlePost(bool)+0x128>)
 8009be6:	4628      	mov	r0, r5
 8009be8:	f7ff fdef 	bl	80097ca <strcmp>
 8009bec:	2800      	cmp	r0, #0
 8009bee:	bf0c      	ite	eq
 8009bf0:	2301      	moveq	r3, #1
 8009bf2:	2300      	movne	r3, #0
 8009bf4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 8009bf8:	d052      	beq.n	8009ca0 <HttpDaemon::HandlePost(bool)+0xd0>
 8009bfa:	4628      	mov	r0, r5
 8009bfc:	493f      	ldr	r1, [pc, #252]	; (8009cfc <HttpDaemon::HandlePost(bool)+0x12c>)
 8009bfe:	f7ff fde4 	bl	80097ca <strcmp>
 8009c02:	2800      	cmp	r0, #0
 8009c04:	d04c      	beq.n	8009ca0 <HttpDaemon::HandlePost(bool)+0xd0>
 8009c06:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009c0a:	e047      	b.n	8009c9c <HttpDaemon::HandlePost(bool)+0xcc>
 8009c0c:	493c      	ldr	r1, [pc, #240]	; (8009d00 <HttpDaemon::HandlePost(bool)+0x130>)
 8009c0e:	68a0      	ldr	r0, [r4, #8]
 8009c10:	f10d 0207 	add.w	r2, sp, #7
 8009c14:	f004 fcc2 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009c18:	b9d8      	cbnz	r0, 8009c52 <HttpDaemon::HandlePost(bool)+0x82>
 8009c1a:	f89d 6007 	ldrb.w	r6, [sp, #7]
 8009c1e:	4b39      	ldr	r3, [pc, #228]	; (8009d04 <HttpDaemon::HandlePost(bool)+0x134>)
 8009c20:	fab6 f186 	clz	r1, r6
 8009c24:	681d      	ldr	r5, [r3, #0]
 8009c26:	0949      	lsrs	r1, r1, #5
 8009c28:	69a8      	ldr	r0, [r5, #24]
 8009c2a:	b138      	cbz	r0, 8009c3c <HttpDaemon::HandlePost(bool)+0x6c>
 8009c2c:	6803      	ldr	r3, [r0, #0]
 8009c2e:	7429      	strb	r1, [r5, #16]
 8009c30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c32:	4798      	blx	r3
 8009c34:	b116      	cbz	r6, 8009c3c <HttpDaemon::HandlePost(bool)+0x6c>
 8009c36:	4b34      	ldr	r3, [pc, #208]	; (8009d08 <HttpDaemon::HandlePost(bool)+0x138>)
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	606b      	str	r3, [r5, #4]
 8009c3c:	4b33      	ldr	r3, [pc, #204]	; (8009d0c <HttpDaemon::HandlePost(bool)+0x13c>)
 8009c3e:	f240 519f 	movw	r1, #1439	; 0x59f
 8009c42:	4a33      	ldr	r2, [pc, #204]	; (8009d10 <HttpDaemon::HandlePost(bool)+0x140>)
 8009c44:	4833      	ldr	r0, [pc, #204]	; (8009d14 <HttpDaemon::HandlePost(bool)+0x144>)
 8009c46:	6023      	str	r3, [r4, #0]
 8009c48:	f7fe fe0a 	bl	8008860 <snprintf>
 8009c4c:	8460      	strh	r0, [r4, #34]	; 0x22
 8009c4e:	20c8      	movs	r0, #200	; 0xc8
 8009c50:	e024      	b.n	8009c9c <HttpDaemon::HandlePost(bool)+0xcc>
 8009c52:	4931      	ldr	r1, [pc, #196]	; (8009d18 <HttpDaemon::HandlePost(bool)+0x148>)
 8009c54:	68a0      	ldr	r0, [r4, #8]
 8009c56:	f10d 0207 	add.w	r2, sp, #7
 8009c5a:	f004 fc9f 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009c5e:	b9d8      	cbnz	r0, 8009c98 <HttpDaemon::HandlePost(bool)+0xc8>
 8009c60:	4b2e      	ldr	r3, [pc, #184]	; (8009d1c <HttpDaemon::HandlePost(bool)+0x14c>)
 8009c62:	6818      	ldr	r0, [r3, #0]
 8009c64:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009c68:	b11b      	cbz	r3, 8009c72 <HttpDaemon::HandlePost(bool)+0xa2>
 8009c6a:	2104      	movs	r1, #4
 8009c6c:	f005 f832 	bl	800ecd4 <LedBlink::SetMode(ledblink::Mode)>
 8009c70:	e7e4      	b.n	8009c3c <HttpDaemon::HandlePost(bool)+0x6c>
 8009c72:	2102      	movs	r1, #2
 8009c74:	e7fa      	b.n	8009c6c <HttpDaemon::HandlePost(bool)+0x9c>
 8009c76:	4b2a      	ldr	r3, [pc, #168]	; (8009d20 <HttpDaemon::HandlePost(bool)+0x150>)
 8009c78:	2001      	movs	r0, #1
 8009c7a:	781d      	ldrb	r5, [r3, #0]
 8009c7c:	f7ff fdcc 	bl	8009818 <PropertiesConfig::EnableJSON(bool)>
 8009c80:	4b28      	ldr	r3, [pc, #160]	; (8009d24 <HttpDaemon::HandlePost(bool)+0x154>)
 8009c82:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 8009c84:	6818      	ldr	r0, [r3, #0]
 8009c86:	68a1      	ldr	r1, [r4, #8]
 8009c88:	f005 0501 	and.w	r5, r5, #1
 8009c8c:	f7ff fa50 	bl	8009130 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009c90:	4628      	mov	r0, r5
 8009c92:	f7ff fdc1 	bl	8009818 <PropertiesConfig::EnableJSON(bool)>
 8009c96:	e7d1      	b.n	8009c3c <HttpDaemon::HandlePost(bool)+0x6c>
 8009c98:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009c9c:	b002      	add	sp, #8
 8009c9e:	bd70      	pop	{r4, r5, r6, pc}
 8009ca0:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8009ca2:	6962      	ldr	r2, [r4, #20]
 8009ca4:	429a      	cmp	r2, r3
 8009ca6:	dbd2      	blt.n	8009c4e <HttpDaemon::HandlePost(bool)+0x7e>
 8009ca8:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009caa:	2b00      	cmp	r3, #0
 8009cac:	d0cf      	beq.n	8009c4e <HttpDaemon::HandlePost(bool)+0x7e>
 8009cae:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 8009cb2:	2b00      	cmp	r3, #0
 8009cb4:	d0df      	beq.n	8009c76 <HttpDaemon::HandlePost(bool)+0xa6>
 8009cb6:	2201      	movs	r2, #1
 8009cb8:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8009cba:	68a0      	ldr	r0, [r4, #8]
 8009cbc:	f004 fa6c 	bl	800e198 <properties::convert_json_file(char*, unsigned short, bool)>
 8009cc0:	2800      	cmp	r0, #0
 8009cc2:	dde9      	ble.n	8009c98 <HttpDaemon::HandlePost(bool)+0xc8>
 8009cc4:	4918      	ldr	r1, [pc, #96]	; (8009d28 <HttpDaemon::HandlePost(bool)+0x158>)
 8009cc6:	68a0      	ldr	r0, [r4, #8]
 8009cc8:	f10d 0207 	add.w	r2, sp, #7
 8009ccc:	f004 fc66 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009cd0:	2800      	cmp	r0, #0
 8009cd2:	d19b      	bne.n	8009c0c <HttpDaemon::HandlePost(bool)+0x3c>
 8009cd4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009cd8:	2b00      	cmp	r3, #0
 8009cda:	d0af      	beq.n	8009c3c <HttpDaemon::HandlePost(bool)+0x6c>
 8009cdc:	4b11      	ldr	r3, [pc, #68]	; (8009d24 <HttpDaemon::HandlePost(bool)+0x154>)
 8009cde:	681b      	ldr	r3, [r3, #0]
 8009ce0:	7b9b      	ldrb	r3, [r3, #14]
 8009ce2:	2b00      	cmp	r3, #0
 8009ce4:	d0d8      	beq.n	8009c98 <HttpDaemon::HandlePost(bool)+0xc8>
 8009ce6:	4b11      	ldr	r3, [pc, #68]	; (8009d2c <HttpDaemon::HandlePost(bool)+0x15c>)
 8009ce8:	6818      	ldr	r0, [r3, #0]
 8009cea:	f005 f877 	bl	800eddc <Hardware::Reboot()>
 8009cee:	68c3      	ldr	r3, [r0, #12]
 8009cf0:	6083      	str	r3, [r0, #8]
 8009cf2:	6943      	ldr	r3, [r0, #20]
 8009cf4:	8483      	strh	r3, [r0, #36]	; 0x24
 8009cf6:	e7da      	b.n	8009cae <HttpDaemon::HandlePost(bool)+0xde>
 8009cf8:	08011482 	stmdaeq	r1, {r1, r7, sl, ip}
 8009cfc:	0801141e 	stmdaeq	r1, {r1, r2, r3, r4, sl, ip}
 8009d00:	08011470 	stmdaeq	r1, {r4, r5, r6, sl, ip}
 8009d04:	20009f8c 	andcs	r9, r0, ip, lsl #31
 8009d08:	2000a094 	mulcs	r0, r4, r0
 8009d0c:	08011646 	stmdaeq	r1, {r1, r2, r6, r9, sl, ip}
 8009d10:	0801149f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, sl, ip}
 8009d14:	200000c0 	andcs	r0, r0, r0, asr #1
 8009d18:	08011496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip}
 8009d1c:	2000a078 	andcs	sl, r0, r8, ror r0
 8009d20:	20009f88 	andcs	r9, r0, r8, lsl #31
 8009d24:	200000bc 	strhcs	r0, [r0], -ip
 8009d28:	0801148f 	stmdaeq	r1, {r0, r1, r2, r3, r7, sl, ip}
 8009d2c:	2000a07c 	andcs	sl, r0, ip, ror r0

08009d30 <HttpDaemon::Run()>:
 8009d30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d32:	4e46      	ldr	r6, [pc, #280]	; (8009e4c <HttpDaemon::Run()+0x11c>)
 8009d34:	4604      	mov	r4, r0
 8009d36:	6901      	ldr	r1, [r0, #16]
 8009d38:	f100 020c 	add.w	r2, r0, #12
 8009d3c:	6830      	ldr	r0, [r6, #0]
 8009d3e:	f002 ffc8 	bl	800ccd2 <Network::TcpRead(int, unsigned char const**)>
 8009d42:	6160      	str	r0, [r4, #20]
 8009d44:	2800      	cmp	r0, #0
 8009d46:	d05b      	beq.n	8009e00 <HttpDaemon::Run()+0xd0>
 8009d48:	69a3      	ldr	r3, [r4, #24]
 8009d4a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8009d4e:	d159      	bne.n	8009e04 <HttpDaemon::Run()+0xd4>
 8009d50:	4620      	mov	r0, r4
 8009d52:	f7ff fe1d 	bl	8009990 <HttpDaemon::ParseRequest()>
 8009d56:	28c8      	cmp	r0, #200	; 0xc8
 8009d58:	61a0      	str	r0, [r4, #24]
 8009d5a:	d106      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009d5c:	69e3      	ldr	r3, [r4, #28]
 8009d5e:	2b00      	cmp	r3, #0
 8009d60:	d142      	bne.n	8009de8 <HttpDaemon::Run()+0xb8>
 8009d62:	4620      	mov	r0, r4
 8009d64:	f7ff fe8e 	bl	8009a84 <HttpDaemon::HandleGet()>
 8009d68:	61a0      	str	r0, [r4, #24]
 8009d6a:	69a3      	ldr	r3, [r4, #24]
 8009d6c:	2bc8      	cmp	r3, #200	; 0xc8
 8009d6e:	d06b      	beq.n	8009e48 <HttpDaemon::Run()+0x118>
 8009d70:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 8009d74:	d05e      	beq.n	8009e34 <HttpDaemon::Run()+0x104>
 8009d76:	dc4e      	bgt.n	8009e16 <HttpDaemon::Run()+0xe6>
 8009d78:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 8009d7c:	d05c      	beq.n	8009e38 <HttpDaemon::Run()+0x108>
 8009d7e:	f240 129d 	movw	r2, #413	; 0x19d
 8009d82:	4293      	cmp	r3, r2
 8009d84:	d05a      	beq.n	8009e3c <HttpDaemon::Run()+0x10c>
 8009d86:	4d32      	ldr	r5, [pc, #200]	; (8009e50 <HttpDaemon::Run()+0x120>)
 8009d88:	4a32      	ldr	r2, [pc, #200]	; (8009e54 <HttpDaemon::Run()+0x124>)
 8009d8a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8009d8e:	bf18      	it	ne
 8009d90:	4615      	movne	r5, r2
 8009d92:	4a31      	ldr	r2, [pc, #196]	; (8009e58 <HttpDaemon::Run()+0x128>)
 8009d94:	f240 519f 	movw	r1, #1439	; 0x59f
 8009d98:	6022      	str	r2, [r4, #0]
 8009d9a:	e9cd 5500 	strd	r5, r5, [sp]
 8009d9e:	4a2f      	ldr	r2, [pc, #188]	; (8009e5c <HttpDaemon::Run()+0x12c>)
 8009da0:	482f      	ldr	r0, [pc, #188]	; (8009e60 <HttpDaemon::Run()+0x130>)
 8009da2:	f7fe fd5d 	bl	8008860 <snprintf>
 8009da6:	8460      	strh	r0, [r4, #34]	; 0x22
 8009da8:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8009daa:	f240 519f 	movw	r1, #1439	; 0x59f
 8009dae:	9303      	str	r3, [sp, #12]
 8009db0:	6823      	ldr	r3, [r4, #0]
 8009db2:	4a2c      	ldr	r2, [pc, #176]	; (8009e64 <HttpDaemon::Run()+0x134>)
 8009db4:	9302      	str	r3, [sp, #8]
 8009db6:	4b2c      	ldr	r3, [pc, #176]	; (8009e68 <HttpDaemon::Run()+0x138>)
 8009db8:	68e0      	ldr	r0, [r4, #12]
 8009dba:	e9cd 5300 	strd	r5, r3, [sp]
 8009dbe:	69a3      	ldr	r3, [r4, #24]
 8009dc0:	f7fe fd4e 	bl	8008860 <snprintf>
 8009dc4:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8009dc8:	b283      	uxth	r3, r0
 8009dca:	6830      	ldr	r0, [r6, #0]
 8009dcc:	f002 ff85 	bl	800ccda <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009dd0:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8009dd2:	4a23      	ldr	r2, [pc, #140]	; (8009e60 <HttpDaemon::Run()+0x130>)
 8009dd4:	6921      	ldr	r1, [r4, #16]
 8009dd6:	6830      	ldr	r0, [r6, #0]
 8009dd8:	f002 ff7f 	bl	800ccda <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 8009ddc:	f44f 7202 	mov.w	r2, #520	; 0x208
 8009de0:	2302      	movs	r3, #2
 8009de2:	e9c4 2306 	strd	r2, r3, [r4, #24]
 8009de6:	e00b      	b.n	8009e00 <HttpDaemon::Run()+0xd0>
 8009de8:	2b01      	cmp	r3, #1
 8009dea:	d1be      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009dec:	2100      	movs	r1, #0
 8009dee:	4620      	mov	r0, r4
 8009df0:	f7ff feee 	bl	8009bd0 <HttpDaemon::HandlePost(bool)>
 8009df4:	28c8      	cmp	r0, #200	; 0xc8
 8009df6:	61a0      	str	r0, [r4, #24]
 8009df8:	d1b7      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009dfa:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8009dfc:	2b00      	cmp	r3, #0
 8009dfe:	d1b4      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009e00:	b004      	add	sp, #16
 8009e02:	bd70      	pop	{r4, r5, r6, pc}
 8009e04:	2bc8      	cmp	r3, #200	; 0xc8
 8009e06:	d1b0      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009e08:	69e1      	ldr	r1, [r4, #28]
 8009e0a:	2901      	cmp	r1, #1
 8009e0c:	d1ad      	bne.n	8009d6a <HttpDaemon::Run()+0x3a>
 8009e0e:	4620      	mov	r0, r4
 8009e10:	f7ff fede 	bl	8009bd0 <HttpDaemon::HandlePost(bool)>
 8009e14:	e7a8      	b.n	8009d68 <HttpDaemon::Run()+0x38>
 8009e16:	f240 12f5 	movw	r2, #501	; 0x1f5
 8009e1a:	4293      	cmp	r3, r2
 8009e1c:	d010      	beq.n	8009e40 <HttpDaemon::Run()+0x110>
 8009e1e:	f240 12f9 	movw	r2, #505	; 0x1f9
 8009e22:	4293      	cmp	r3, r2
 8009e24:	d00e      	beq.n	8009e44 <HttpDaemon::Run()+0x114>
 8009e26:	4d11      	ldr	r5, [pc, #68]	; (8009e6c <HttpDaemon::Run()+0x13c>)
 8009e28:	4a0a      	ldr	r2, [pc, #40]	; (8009e54 <HttpDaemon::Run()+0x124>)
 8009e2a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8009e2e:	bf18      	it	ne
 8009e30:	4615      	movne	r5, r2
 8009e32:	e7ae      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e34:	4d0e      	ldr	r5, [pc, #56]	; (8009e70 <HttpDaemon::Run()+0x140>)
 8009e36:	e7ac      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e38:	4d0e      	ldr	r5, [pc, #56]	; (8009e74 <HttpDaemon::Run()+0x144>)
 8009e3a:	e7aa      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e3c:	4d0e      	ldr	r5, [pc, #56]	; (8009e78 <HttpDaemon::Run()+0x148>)
 8009e3e:	e7a8      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e40:	4d0e      	ldr	r5, [pc, #56]	; (8009e7c <HttpDaemon::Run()+0x14c>)
 8009e42:	e7a6      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e44:	4d0e      	ldr	r5, [pc, #56]	; (8009e80 <HttpDaemon::Run()+0x150>)
 8009e46:	e7a4      	b.n	8009d92 <HttpDaemon::Run()+0x62>
 8009e48:	4d0e      	ldr	r5, [pc, #56]	; (8009e84 <HttpDaemon::Run()+0x154>)
 8009e4a:	e7ad      	b.n	8009da8 <HttpDaemon::Run()+0x78>
 8009e4c:	20008970 	andcs	r8, r0, r0, ror r9
 8009e50:	080114fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, ip}
 8009e54:	08011582 	stmdaeq	r1, {r1, r7, r8, sl, ip}
 8009e58:	08011646 	stmdaeq	r1, {r1, r2, r6, r9, sl, ip}
 8009e5c:	08011593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, ip}
 8009e60:	200000c0 	andcs	r0, r0, r0, asr #1
 8009e64:	080115ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, sl, ip}
 8009e68:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 8009e6c:	0801153f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, ip}
 8009e70:	0801152a 	stmdaeq	r1, {r1, r3, r5, r8, sl, ip}
 8009e74:	08011507 	stmdaeq	r1, {r0, r1, r2, r8, sl, ip}
 8009e78:	08011511 	stmdaeq	r1, {r0, r4, r8, sl, ip}
 8009e7c:	08011555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip}
 8009e80:	0801156c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, ip}
 8009e84:	08011590 	stmdaeq	r1, {r4, r7, r8, sl, ip}

08009e88 <remoteconfig::json_get_list(char*, unsigned short)>:
 8009e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e8c:	4b14      	ldr	r3, [pc, #80]	; (8009ee0 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 8009e8e:	f8df 8054 	ldr.w	r8, [pc, #84]	; 8009ee4 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 8009e92:	681b      	ldr	r3, [r3, #0]
 8009e94:	b088      	sub	sp, #32
 8009e96:	4605      	mov	r5, r0
 8009e98:	f8d8 0000 	ldr.w	r0, [r8]
 8009e9c:	695c      	ldr	r4, [r3, #20]
 8009e9e:	460e      	mov	r6, r1
 8009ea0:	f7ff f83e 	bl	8008f20 <RemoteConfig::GetStringNode() const>
 8009ea4:	4607      	mov	r7, r0
 8009ea6:	f8d8 0000 	ldr.w	r0, [r8]
 8009eaa:	f7ff f845 	bl	8008f38 <RemoteConfig::GetStringOutput() const>
 8009eae:	4b0e      	ldr	r3, [pc, #56]	; (8009ee8 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 8009eb0:	4631      	mov	r1, r6
 8009eb2:	7a1a      	ldrb	r2, [r3, #8]
 8009eb4:	3309      	adds	r3, #9
 8009eb6:	9303      	str	r3, [sp, #12]
 8009eb8:	0e23      	lsrs	r3, r4, #24
 8009eba:	9302      	str	r3, [sp, #8]
 8009ebc:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8009ec0:	9301      	str	r3, [sp, #4]
 8009ec2:	f3c4 2307 	ubfx	r3, r4, #8, #8
 8009ec6:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8009eca:	9300      	str	r3, [sp, #0]
 8009ecc:	4628      	mov	r0, r5
 8009ece:	4a07      	ldr	r2, [pc, #28]	; (8009eec <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 8009ed0:	9704      	str	r7, [sp, #16]
 8009ed2:	b2e3      	uxtb	r3, r4
 8009ed4:	f7fe fcc4 	bl	8008860 <snprintf>
 8009ed8:	b280      	uxth	r0, r0
 8009eda:	b008      	add	sp, #32
 8009edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009ee0:	20008970 	andcs	r8, r0, r0, ror r9
 8009ee4:	200000bc 	strhcs	r0, [r0], -ip
 8009ee8:	20000098 	mulcs	r0, r8, r0
 8009eec:	08011720 	stmdaeq	r1, {r5, r8, r9, sl, ip}

08009ef0 <remoteconfig::json_get_version(char*, unsigned short)>:
 8009ef0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009ef2:	2208      	movs	r2, #8
 8009ef4:	4b09      	ldr	r3, [pc, #36]	; (8009f1c <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 8009ef6:	9204      	str	r2, [sp, #16]
 8009ef8:	f1a3 020b 	sub.w	r2, r3, #11
 8009efc:	9203      	str	r2, [sp, #12]
 8009efe:	220b      	movs	r2, #11
 8009f00:	9202      	str	r2, [sp, #8]
 8009f02:	4a07      	ldr	r2, [pc, #28]	; (8009f20 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 8009f04:	9305      	str	r3, [sp, #20]
 8009f06:	3b0e      	subs	r3, #14
 8009f08:	9201      	str	r2, [sp, #4]
 8009f0a:	9300      	str	r3, [sp, #0]
 8009f0c:	4a05      	ldr	r2, [pc, #20]	; (8009f24 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 8009f0e:	2303      	movs	r3, #3
 8009f10:	f7fe fca6 	bl	8008860 <snprintf>
 8009f14:	b280      	uxth	r0, r0
 8009f16:	b007      	add	sp, #28
 8009f18:	f85d fb04 	ldr.w	pc, [sp], #4
 8009f1c:	2000a02a 	andcs	sl, r0, sl, lsr #32
 8009f20:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 8009f24:	0801177f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, ip}

08009f28 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 8009f28:	b508      	push	{r3, lr}
 8009f2a:	4b05      	ldr	r3, [pc, #20]	; (8009f40 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 8009f2c:	681a      	ldr	r2, [r3, #0]
 8009f2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009f32:	fbb2 f3f3 	udiv	r3, r2, r3
 8009f36:	4a03      	ldr	r2, [pc, #12]	; (8009f44 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 8009f38:	f7fe fc92 	bl	8008860 <snprintf>
 8009f3c:	b280      	uxth	r0, r0
 8009f3e:	bd08      	pop	{r3, pc}
 8009f40:	2000a094 	mulcs	r0, r4, r0
 8009f44:	080117c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, ip}

08009f48 <remoteconfig::json_get_display(char*, unsigned short)>:
 8009f48:	b508      	push	{r3, lr}
 8009f4a:	4b05      	ldr	r3, [pc, #20]	; (8009f60 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 8009f4c:	4a05      	ldr	r2, [pc, #20]	; (8009f64 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 8009f4e:	681b      	ldr	r3, [r3, #0]
 8009f50:	7c1b      	ldrb	r3, [r3, #16]
 8009f52:	f083 0301 	eor.w	r3, r3, #1
 8009f56:	f7fe fc83 	bl	8008860 <snprintf>
 8009f5a:	b280      	uxth	r0, r0
 8009f5c:	bd08      	pop	{r3, pc}
 8009f5e:	bf00      	nop
 8009f60:	20009f8c 	andcs	r9, r0, ip, lsl #31
 8009f64:	080117d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, ip}

08009f68 <remoteconfig::json_get_directory(char*, unsigned short)>:
 8009f68:	b508      	push	{r3, lr}
 8009f6a:	4a02      	ldr	r2, [pc, #8]	; (8009f74 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 8009f6c:	f7fe fc78 	bl	8008860 <snprintf>
 8009f70:	b280      	uxth	r0, r0
 8009f72:	bd08      	pop	{r3, pc}
 8009f74:	080117e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, sl, ip}

08009f78 <get_file_content(char const*, char*)>:
 8009f78:	2300      	movs	r3, #0
 8009f7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f7c:	4a10      	ldr	r2, [pc, #64]	; (8009fc0 <get_file_content(char const*, char*)+0x48>)
 8009f7e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009f82:	1e46      	subs	r6, r0, #1
 8009f84:	3c01      	subs	r4, #1
 8009f86:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8009f8a:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8009f8e:	42bd      	cmp	r5, r7
 8009f90:	d005      	beq.n	8009f9e <get_file_content(char const*, char*)+0x26>
 8009f92:	3301      	adds	r3, #1
 8009f94:	2b03      	cmp	r3, #3
 8009f96:	d1f2      	bne.n	8009f7e <get_file_content(char const*, char*)+0x6>
 8009f98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f9e:	2d00      	cmp	r5, #0
 8009fa0:	d1f1      	bne.n	8009f86 <get_file_content(char const*, char*)+0xe>
 8009fa2:	4608      	mov	r0, r1
 8009fa4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8009fa8:	6853      	ldr	r3, [r2, #4]
 8009faa:	3b01      	subs	r3, #1
 8009fac:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009fb0:	f800 2b01 	strb.w	r2, [r0], #1
 8009fb4:	2a00      	cmp	r2, #0
 8009fb6:	d1f9      	bne.n	8009fac <get_file_content(char const*, char*)+0x34>
 8009fb8:	1a40      	subs	r0, r0, r1
 8009fba:	3801      	subs	r0, #1
 8009fbc:	e7ee      	b.n	8009f9c <get_file_content(char const*, char*)+0x24>
 8009fbe:	bf00      	nop
 8009fc0:	08011b08 	stmdaeq	r1, {r3, r8, r9, fp, ip}

08009fc4 <strlen>:
 8009fc4:	4603      	mov	r3, r0
 8009fc6:	461a      	mov	r2, r3
 8009fc8:	7811      	ldrb	r1, [r2, #0]
 8009fca:	3301      	adds	r3, #1
 8009fcc:	2900      	cmp	r1, #0
 8009fce:	d1fa      	bne.n	8009fc6 <strlen+0x2>
 8009fd0:	1a10      	subs	r0, r2, r0
 8009fd2:	4770      	bx	lr

08009fd4 <strncpy.isra.0>:
 8009fd4:	3901      	subs	r1, #1
 8009fd6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009fda:	b92b      	cbnz	r3, 8009fe8 <strncpy.isra.0+0x14>
 8009fdc:	4402      	add	r2, r0
 8009fde:	4290      	cmp	r0, r2
 8009fe0:	d006      	beq.n	8009ff0 <strncpy.isra.0+0x1c>
 8009fe2:	f800 3b01 	strb.w	r3, [r0], #1
 8009fe6:	e7fa      	b.n	8009fde <strncpy.isra.0+0xa>
 8009fe8:	3a01      	subs	r2, #1
 8009fea:	f800 3b01 	strb.w	r3, [r0], #1
 8009fee:	d1f2      	bne.n	8009fd6 <strncpy.isra.0+0x2>
 8009ff0:	4770      	bx	lr

08009ff2 <strcpy.isra.0>:
 8009ff2:	3801      	subs	r0, #1
 8009ff4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009ff8:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d1f9      	bne.n	8009ff4 <strcpy.isra.0+0x2>
 800a000:	4770      	bx	lr
	...

0800a004 <OscServer::OscServer()>:
 800a004:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a008:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a00a:	4a24      	ldr	r2, [pc, #144]	; (800a09c <OscServer::OscServer()+0x98>)
 800a00c:	4604      	mov	r4, r0
 800a00e:	e9c0 2300 	strd	r2, r3, [r0]
 800a012:	2300      	movs	r3, #0
 800a014:	2581      	movs	r5, #129	; 0x81
 800a016:	4a22      	ldr	r2, [pc, #136]	; (800a0a0 <OscServer::OscServer()+0x9c>)
 800a018:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800a01c:	6010      	str	r0, [r2, #0]
 800a01e:	4a21      	ldr	r2, [pc, #132]	; (800a0a4 <OscServer::OscServer()+0xa0>)
 800a020:	6083      	str	r3, [r0, #8]
 800a022:	7303      	strb	r3, [r0, #12]
 800a024:	3d01      	subs	r5, #1
 800a026:	d12c      	bne.n	800a082 <OscServer::OscServer()+0x7e>
 800a028:	2281      	movs	r2, #129	; 0x81
 800a02a:	491f      	ldr	r1, [pc, #124]	; (800a0a8 <OscServer::OscServer()+0xa4>)
 800a02c:	481d      	ldr	r0, [pc, #116]	; (800a0a4 <OscServer::OscServer()+0xa0>)
 800a02e:	f7ff ffe0 	bl	8009ff2 <strcpy.isra.0>
 800a032:	4b1e      	ldr	r3, [pc, #120]	; (800a0ac <OscServer::OscServer()+0xa8>)
 800a034:	3a01      	subs	r2, #1
 800a036:	d127      	bne.n	800a088 <OscServer::OscServer()+0x84>
 800a038:	491d      	ldr	r1, [pc, #116]	; (800a0b0 <OscServer::OscServer()+0xac>)
 800a03a:	481c      	ldr	r0, [pc, #112]	; (800a0ac <OscServer::OscServer()+0xa8>)
 800a03c:	f7ff ffd9 	bl	8009ff2 <strcpy.isra.0>
 800a040:	2380      	movs	r3, #128	; 0x80
 800a042:	491c      	ldr	r1, [pc, #112]	; (800a0b4 <OscServer::OscServer()+0xb0>)
 800a044:	3b01      	subs	r3, #1
 800a046:	d222      	bcs.n	800a08e <OscServer::OscServer()+0x8a>
 800a048:	491b      	ldr	r1, [pc, #108]	; (800a0b8 <OscServer::OscServer()+0xb4>)
 800a04a:	481a      	ldr	r0, [pc, #104]	; (800a0b4 <OscServer::OscServer()+0xb0>)
 800a04c:	f7ff ffd1 	bl	8009ff2 <strcpy.isra.0>
 800a050:	2380      	movs	r3, #128	; 0x80
 800a052:	2100      	movs	r1, #0
 800a054:	4a19      	ldr	r2, [pc, #100]	; (800a0bc <OscServer::OscServer()+0xb8>)
 800a056:	3b01      	subs	r3, #1
 800a058:	d21c      	bcs.n	800a094 <OscServer::OscServer()+0x90>
 800a05a:	4919      	ldr	r1, [pc, #100]	; (800a0c0 <OscServer::OscServer()+0xbc>)
 800a05c:	4817      	ldr	r0, [pc, #92]	; (800a0bc <OscServer::OscServer()+0xb8>)
 800a05e:	f7ff ffc8 	bl	8009ff2 <strcpy.isra.0>
 800a062:	4b18      	ldr	r3, [pc, #96]	; (800a0c4 <OscServer::OscServer()+0xc0>)
 800a064:	211f      	movs	r1, #31
 800a066:	9300      	str	r3, [sp, #0]
 800a068:	4a17      	ldr	r2, [pc, #92]	; (800a0c8 <OscServer::OscServer()+0xc4>)
 800a06a:	4b18      	ldr	r3, [pc, #96]	; (800a0cc <OscServer::OscServer()+0xc8>)
 800a06c:	f104 000d 	add.w	r0, r4, #13
 800a070:	f7fe fbf6 	bl	8008860 <snprintf>
 800a074:	4620      	mov	r0, r4
 800a076:	4b16      	ldr	r3, [pc, #88]	; (800a0d0 <OscServer::OscServer()+0xcc>)
 800a078:	63a3      	str	r3, [r4, #56]	; 0x38
 800a07a:	4b16      	ldr	r3, [pc, #88]	; (800a0d4 <OscServer::OscServer()+0xd0>)
 800a07c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a07e:	b003      	add	sp, #12
 800a080:	bd30      	pop	{r4, r5, pc}
 800a082:	f802 3b01 	strb.w	r3, [r2], #1
 800a086:	e7cd      	b.n	800a024 <OscServer::OscServer()+0x20>
 800a088:	f803 5b01 	strb.w	r5, [r3], #1
 800a08c:	e7d2      	b.n	800a034 <OscServer::OscServer()+0x30>
 800a08e:	f801 2b01 	strb.w	r2, [r1], #1
 800a092:	e7d7      	b.n	800a044 <OscServer::OscServer()+0x40>
 800a094:	f802 1b01 	strb.w	r1, [r2], #1
 800a098:	e7dd      	b.n	800a056 <OscServer::OscServer()+0x52>
 800a09a:	bf00      	nop
 800a09c:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 800a0a0:	20000a64 	andcs	r0, r0, r4, ror #20
 800a0a4:	200007e4 	andcs	r0, r0, r4, ror #15
 800a0a8:	0801204a 	stmdaeq	r1, {r1, r3, r6, sp}
 800a0ac:	200006e4 	andcs	r0, r0, r4, ror #13
 800a0b0:	08012050 	stmdaeq	r1, {r4, r6, sp}
 800a0b4:	20000660 	andcs	r0, r0, r0, ror #12
 800a0b8:	08012058 	stmdaeq	r1, {r3, r4, r6, sp}
 800a0bc:	20000764 	andcs	r0, r0, r4, ror #14
 800a0c0:	0801205b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sp}
 800a0c4:	08010f41 	stmdaeq	r1, {r0, r6, r8, r9, sl, fp}
 800a0c8:	0801206e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sp}
 800a0cc:	0801206a 	stmdaeq	r1, {r1, r3, r5, r6, sp}
 800a0d0:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 800a0d4:	08012077 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sp}

0800a0d8 <OscServer::Start()>:
 800a0d8:	b530      	push	{r4, r5, lr}
 800a0da:	4d0e      	ldr	r5, [pc, #56]	; (800a114 <OscServer::Start()+0x3c>)
 800a0dc:	b085      	sub	sp, #20
 800a0de:	4604      	mov	r4, r0
 800a0e0:	8801      	ldrh	r1, [r0, #0]
 800a0e2:	6828      	ldr	r0, [r5, #0]
 800a0e4:	f002 fc19 	bl	800c91a <Network::Begin(unsigned short)>
 800a0e8:	682b      	ldr	r3, [r5, #0]
 800a0ea:	6060      	str	r0, [r4, #4]
 800a0ec:	695a      	ldr	r2, [r3, #20]
 800a0ee:	4601      	mov	r1, r0
 800a0f0:	69d8      	ldr	r0, [r3, #28]
 800a0f2:	2300      	movs	r3, #0
 800a0f4:	9301      	str	r3, [sp, #4]
 800a0f6:	4b08      	ldr	r3, [pc, #32]	; (800a118 <OscServer::Start()+0x40>)
 800a0f8:	ea62 0200 	orn	r2, r2, r0
 800a0fc:	9300      	str	r3, [sp, #0]
 800a0fe:	a803      	add	r0, sp, #12
 800a100:	8823      	ldrh	r3, [r4, #0]
 800a102:	f000 fd95 	bl	800ac30 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800a106:	4b05      	ldr	r3, [pc, #20]	; (800a11c <OscServer::Start()+0x44>)
 800a108:	2102      	movs	r1, #2
 800a10a:	6818      	ldr	r0, [r3, #0]
 800a10c:	f004 fde2 	bl	800ecd4 <LedBlink::SetMode(ledblink::Mode)>
 800a110:	b005      	add	sp, #20
 800a112:	bd30      	pop	{r4, r5, pc}
 800a114:	20008970 	andcs	r8, r0, r0, ror r9
 800a118:	0801207d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sp}
 800a11c:	2000a078 	andcs	sl, r0, r8, ror r0

0800a120 <OscServer::SetPath(char const*)>:
 800a120:	b510      	push	{r4, lr}
 800a122:	780b      	ldrb	r3, [r1, #0]
 800a124:	2b2f      	cmp	r3, #47	; 0x2f
 800a126:	d11c      	bne.n	800a162 <OscServer::SetPath(char const*)+0x42>
 800a128:	4c0e      	ldr	r4, [pc, #56]	; (800a164 <OscServer::SetPath(char const*)+0x44>)
 800a12a:	227d      	movs	r2, #125	; 0x7d
 800a12c:	4620      	mov	r0, r4
 800a12e:	f7ff ff51 	bl	8009fd4 <strncpy.isra.0>
 800a132:	4620      	mov	r0, r4
 800a134:	f7ff ff46 	bl	8009fc4 <strlen>
 800a138:	3801      	subs	r0, #1
 800a13a:	5c23      	ldrb	r3, [r4, r0]
 800a13c:	4909      	ldr	r1, [pc, #36]	; (800a164 <OscServer::SetPath(char const*)+0x44>)
 800a13e:	2b2f      	cmp	r3, #47	; 0x2f
 800a140:	bf04      	itt	eq
 800a142:	2300      	moveq	r3, #0
 800a144:	5423      	strbeq	r3, [r4, r0]
 800a146:	4c08      	ldr	r4, [pc, #32]	; (800a168 <OscServer::SetPath(char const*)+0x48>)
 800a148:	4620      	mov	r0, r4
 800a14a:	f7ff ff52 	bl	8009ff2 <strcpy.isra.0>
 800a14e:	4620      	mov	r0, r4
 800a150:	f7ff ff38 	bl	8009fc4 <strlen>
 800a154:	232f      	movs	r3, #47	; 0x2f
 800a156:	5423      	strb	r3, [r4, r0]
 800a158:	232a      	movs	r3, #42	; 0x2a
 800a15a:	4404      	add	r4, r0
 800a15c:	7063      	strb	r3, [r4, #1]
 800a15e:	2300      	movs	r3, #0
 800a160:	70a3      	strb	r3, [r4, #2]
 800a162:	bd10      	pop	{r4, pc}
 800a164:	200007e4 	andcs	r0, r0, r4, ror #15
 800a168:	200006e4 	andcs	r0, r0, r4, ror #13

0800a16c <OscServer::SetPathInfo(char const*)>:
 800a16c:	780b      	ldrb	r3, [r1, #0]
 800a16e:	b510      	push	{r4, lr}
 800a170:	2b2f      	cmp	r3, #47	; 0x2f
 800a172:	d10d      	bne.n	800a190 <OscServer::SetPathInfo(char const*)+0x24>
 800a174:	4c07      	ldr	r4, [pc, #28]	; (800a194 <OscServer::SetPathInfo(char const*)+0x28>)
 800a176:	227f      	movs	r2, #127	; 0x7f
 800a178:	4620      	mov	r0, r4
 800a17a:	f7ff ff2b 	bl	8009fd4 <strncpy.isra.0>
 800a17e:	4620      	mov	r0, r4
 800a180:	f7ff ff20 	bl	8009fc4 <strlen>
 800a184:	3801      	subs	r0, #1
 800a186:	5c23      	ldrb	r3, [r4, r0]
 800a188:	2b2f      	cmp	r3, #47	; 0x2f
 800a18a:	bf04      	itt	eq
 800a18c:	2300      	moveq	r3, #0
 800a18e:	5423      	strbeq	r3, [r4, r0]
 800a190:	bd10      	pop	{r4, pc}
 800a192:	bf00      	nop
 800a194:	20000660 	andcs	r0, r0, r0, ror #12

0800a198 <OscServer::SetPathBlackOut(char const*)>:
 800a198:	780b      	ldrb	r3, [r1, #0]
 800a19a:	b510      	push	{r4, lr}
 800a19c:	2b2f      	cmp	r3, #47	; 0x2f
 800a19e:	d10d      	bne.n	800a1bc <OscServer::SetPathBlackOut(char const*)+0x24>
 800a1a0:	4c07      	ldr	r4, [pc, #28]	; (800a1c0 <OscServer::SetPathBlackOut(char const*)+0x28>)
 800a1a2:	227f      	movs	r2, #127	; 0x7f
 800a1a4:	4620      	mov	r0, r4
 800a1a6:	f7ff ff15 	bl	8009fd4 <strncpy.isra.0>
 800a1aa:	4620      	mov	r0, r4
 800a1ac:	f7ff ff0a 	bl	8009fc4 <strlen>
 800a1b0:	3801      	subs	r0, #1
 800a1b2:	5c23      	ldrb	r3, [r4, r0]
 800a1b4:	2b2f      	cmp	r3, #47	; 0x2f
 800a1b6:	bf04      	itt	eq
 800a1b8:	2300      	moveq	r3, #0
 800a1ba:	5423      	strbeq	r3, [r4, r0]
 800a1bc:	bd10      	pop	{r4, pc}
 800a1be:	bf00      	nop
 800a1c0:	20000764 	andcs	r0, r0, r4, ror #14

0800a1c4 <OscServer::GetChannel(char const*)>:
 800a1c4:	b538      	push	{r3, r4, r5, lr}
 800a1c6:	480f      	ldr	r0, [pc, #60]	; (800a204 <OscServer::GetChannel(char const*)+0x40>)
 800a1c8:	460c      	mov	r4, r1
 800a1ca:	f7ff fefb 	bl	8009fc4 <strlen>
 800a1ce:	1822      	adds	r2, r4, r0
 800a1d0:	4614      	mov	r4, r2
 800a1d2:	2000      	movs	r0, #0
 800a1d4:	210a      	movs	r1, #10
 800a1d6:	3403      	adds	r4, #3
 800a1d8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a1dc:	b14b      	cbz	r3, 800a1f2 <OscServer::GetChannel(char const*)+0x2e>
 800a1de:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 800a1e2:	2d09      	cmp	r5, #9
 800a1e4:	d80b      	bhi.n	800a1fe <OscServer::GetChannel(char const*)+0x3a>
 800a1e6:	fb01 3000 	mla	r0, r1, r0, r3
 800a1ea:	4294      	cmp	r4, r2
 800a1ec:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800a1f0:	d1f2      	bne.n	800a1d8 <OscServer::GetChannel(char const*)+0x14>
 800a1f2:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800a1f6:	bfc8      	it	gt
 800a1f8:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 800a1fc:	bd38      	pop	{r3, r4, r5, pc}
 800a1fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a202:	e7fb      	b.n	800a1fc <OscServer::GetChannel(char const*)+0x38>
 800a204:	200007e4 	andcs	r0, r0, r4, ror #15

0800a208 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 800a208:	2000      	movs	r0, #0
 800a20a:	b570      	push	{r4, r5, r6, lr}
 800a20c:	3a01      	subs	r2, #1
 800a20e:	4c09      	ldr	r4, [pc, #36]	; (800a234 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 800a210:	b292      	uxth	r2, r2
 800a212:	4414      	add	r4, r2
 800a214:	4413      	add	r3, r2
 800a216:	3901      	subs	r1, #1
 800a218:	429a      	cmp	r2, r3
 800a21a:	d300      	bcc.n	800a21e <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x16>
 800a21c:	bd70      	pop	{r4, r5, r6, pc}
 800a21e:	7826      	ldrb	r6, [r4, #0]
 800a220:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800a224:	3201      	adds	r2, #1
 800a226:	42ae      	cmp	r6, r5
 800a228:	bf1c      	itt	ne
 800a22a:	7025      	strbne	r5, [r4, #0]
 800a22c:	2001      	movne	r0, #1
 800a22e:	3401      	adds	r4, #1
 800a230:	b292      	uxth	r2, r2
 800a232:	e7f1      	b.n	800a218 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 800a234:	20000864 	andcs	r0, r0, r4, ror #16

0800a238 <OscServer::Run()>:
 800a238:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a23a:	4d98      	ldr	r5, [pc, #608]	; (800a49c <OscServer::Run()+0x264>)
 800a23c:	b097      	sub	sp, #92	; 0x5c
 800a23e:	4604      	mov	r4, r0
 800a240:	4629      	mov	r1, r5
 800a242:	7900      	ldrb	r0, [r0, #4]
 800a244:	f10d 031a 	add.w	r3, sp, #26
 800a248:	aa07      	add	r2, sp, #28
 800a24a:	f001 fe7b 	bl	800bf44 <udp_recv2>
 800a24e:	4606      	mov	r6, r0
 800a250:	b1a8      	cbz	r0, 800a27e <OscServer::Run()+0x46>
 800a252:	4602      	mov	r2, r0
 800a254:	6829      	ldr	r1, [r5, #0]
 800a256:	a808      	add	r0, sp, #32
 800a258:	f000 fc4d 	bl	800aaf6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800a25c:	4990      	ldr	r1, [pc, #576]	; (800a4a0 <OscServer::Run()+0x268>)
 800a25e:	6828      	ldr	r0, [r5, #0]
 800a260:	f000 fb72 	bl	800a948 <lo_pattern_match>
 800a264:	4607      	mov	r7, r0
 800a266:	2800      	cmp	r0, #0
 800a268:	d075      	beq.n	800a356 <OscServer::Run()+0x11e>
 800a26a:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800a26e:	b133      	cbz	r3, 800a27e <OscServer::Run()+0x46>
 800a270:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800a272:	2e01      	cmp	r6, #1
 800a274:	d105      	bne.n	800a282 <OscServer::Run()+0x4a>
 800a276:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a278:	781b      	ldrb	r3, [r3, #0]
 800a27a:	2b62      	cmp	r3, #98	; 0x62
 800a27c:	d03e      	beq.n	800a2fc <OscServer::Run()+0xc4>
 800a27e:	b017      	add	sp, #92	; 0x5c
 800a280:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a282:	2e02      	cmp	r6, #2
 800a284:	d1fb      	bne.n	800a27e <OscServer::Run()+0x46>
 800a286:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a288:	781b      	ldrb	r3, [r3, #0]
 800a28a:	2b69      	cmp	r3, #105	; 0x69
 800a28c:	d1f7      	bne.n	800a27e <OscServer::Run()+0x46>
 800a28e:	2100      	movs	r1, #0
 800a290:	a808      	add	r0, sp, #32
 800a292:	f000 fc80 	bl	800ab96 <OscSimpleMessage::GetInt(unsigned int)>
 800a296:	b285      	uxth	r5, r0
 800a298:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a29c:	d2ef      	bcs.n	800a27e <OscServer::Run()+0x46>
 800a29e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a2a0:	2b01      	cmp	r3, #1
 800a2a2:	d9ec      	bls.n	800a27e <OscServer::Run()+0x46>
 800a2a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a2a6:	785b      	ldrb	r3, [r3, #1]
 800a2a8:	2b69      	cmp	r3, #105	; 0x69
 800a2aa:	d148      	bne.n	800a33e <OscServer::Run()+0x106>
 800a2ac:	2101      	movs	r1, #1
 800a2ae:	a808      	add	r0, sp, #32
 800a2b0:	f000 fc71 	bl	800ab96 <OscSimpleMessage::GetInt(unsigned int)>
 800a2b4:	3501      	adds	r5, #1
 800a2b6:	b2c0      	uxtb	r0, r0
 800a2b8:	b2ad      	uxth	r5, r5
 800a2ba:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 800a2be:	2301      	movs	r3, #1
 800a2c0:	462a      	mov	r2, r5
 800a2c2:	4620      	mov	r0, r4
 800a2c4:	a90f      	add	r1, sp, #60	; 0x3c
 800a2c6:	f7ff ff9f 	bl	800a208 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800a2ca:	b910      	cbnz	r0, 800a2d2 <OscServer::Run()+0x9a>
 800a2cc:	7ae3      	ldrb	r3, [r4, #11]
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	d0d5      	beq.n	800a27e <OscServer::Run()+0x46>
 800a2d2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a2d4:	7aa1      	ldrb	r1, [r4, #10]
 800a2d6:	6803      	ldr	r3, [r0, #0]
 800a2d8:	691e      	ldr	r6, [r3, #16]
 800a2da:	2900      	cmp	r1, #0
 800a2dc:	f040 80a3 	bne.w	800a426 <OscServer::Run()+0x1ee>
 800a2e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2e4:	4a6f      	ldr	r2, [pc, #444]	; (800a4a4 <OscServer::Run()+0x26c>)
 800a2e6:	47b0      	blx	r6
 800a2e8:	7b21      	ldrb	r1, [r4, #12]
 800a2ea:	2900      	cmp	r1, #0
 800a2ec:	d1c7      	bne.n	800a27e <OscServer::Run()+0x46>
 800a2ee:	2301      	movs	r3, #1
 800a2f0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a2f2:	7323      	strb	r3, [r4, #12]
 800a2f4:	6803      	ldr	r3, [r0, #0]
 800a2f6:	689b      	ldr	r3, [r3, #8]
 800a2f8:	4798      	blx	r3
 800a2fa:	e7c0      	b.n	800a27e <OscServer::Run()+0x46>
 800a2fc:	2200      	movs	r2, #0
 800a2fe:	a908      	add	r1, sp, #32
 800a300:	a80f      	add	r0, sp, #60	; 0x3c
 800a302:	f000 fc5c 	bl	800abbe <OscSimpleMessage::GetBlob(unsigned int)>
 800a306:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a308:	b29d      	uxth	r5, r3
 800a30a:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a30e:	d8b6      	bhi.n	800a27e <OscServer::Run()+0x46>
 800a310:	462b      	mov	r3, r5
 800a312:	4632      	mov	r2, r6
 800a314:	4620      	mov	r0, r4
 800a316:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a318:	f7ff ff76 	bl	800a208 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 800a31c:	b910      	cbnz	r0, 800a324 <OscServer::Run()+0xec>
 800a31e:	7ae3      	ldrb	r3, [r4, #11]
 800a320:	2b00      	cmp	r3, #0
 800a322:	d0ac      	beq.n	800a27e <OscServer::Run()+0x46>
 800a324:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a326:	6803      	ldr	r3, [r0, #0]
 800a328:	691e      	ldr	r6, [r3, #16]
 800a32a:	7aa3      	ldrb	r3, [r4, #10]
 800a32c:	b113      	cbz	r3, 800a334 <OscServer::Run()+0xfc>
 800a32e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a332:	d178      	bne.n	800a426 <OscServer::Run()+0x1ee>
 800a334:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a338:	2100      	movs	r1, #0
 800a33a:	4a5a      	ldr	r2, [pc, #360]	; (800a4a4 <OscServer::Run()+0x26c>)
 800a33c:	e7d3      	b.n	800a2e6 <OscServer::Run()+0xae>
 800a33e:	2b66      	cmp	r3, #102	; 0x66
 800a340:	d19d      	bne.n	800a27e <OscServer::Run()+0x46>
 800a342:	2101      	movs	r1, #1
 800a344:	a808      	add	r0, sp, #32
 800a346:	f000 fc12 	bl	800ab6e <OscSimpleMessage::GetFloat(unsigned int)>
 800a34a:	4957      	ldr	r1, [pc, #348]	; (800a4a8 <OscServer::Run()+0x270>)
 800a34c:	f7fd fbe4 	bl	8007b18 <__aeabi_fmul>
 800a350:	f7fd fd0c 	bl	8007d6c <__aeabi_f2uiz>
 800a354:	e7ae      	b.n	800a2b4 <OscServer::Run()+0x7c>
 800a356:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a358:	6828      	ldr	r0, [r5, #0]
 800a35a:	b9b3      	cbnz	r3, 800a38a <OscServer::Run()+0x152>
 800a35c:	4953      	ldr	r1, [pc, #332]	; (800a4ac <OscServer::Run()+0x274>)
 800a35e:	6828      	ldr	r0, [r5, #0]
 800a360:	f000 faf2 	bl	800a948 <lo_pattern_match>
 800a364:	4606      	mov	r6, r0
 800a366:	2800      	cmp	r0, #0
 800a368:	d133      	bne.n	800a3d2 <OscServer::Run()+0x19a>
 800a36a:	4951      	ldr	r1, [pc, #324]	; (800a4b0 <OscServer::Run()+0x278>)
 800a36c:	6828      	ldr	r0, [r5, #0]
 800a36e:	f000 faeb 	bl	800a948 <lo_pattern_match>
 800a372:	2800      	cmp	r0, #0
 800a374:	d05d      	beq.n	800a432 <OscServer::Run()+0x1fa>
 800a376:	4b4f      	ldr	r3, [pc, #316]	; (800a4b4 <OscServer::Run()+0x27c>)
 800a378:	9a07      	ldr	r2, [sp, #28]
 800a37a:	9300      	str	r3, [sp, #0]
 800a37c:	6861      	ldr	r1, [r4, #4]
 800a37e:	8863      	ldrh	r3, [r4, #2]
 800a380:	9601      	str	r6, [sp, #4]
 800a382:	a80f      	add	r0, sp, #60	; 0x3c
 800a384:	f000 fc54 	bl	800ac30 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 800a388:	e779      	b.n	800a27e <OscServer::Run()+0x46>
 800a38a:	494b      	ldr	r1, [pc, #300]	; (800a4b8 <OscServer::Run()+0x280>)
 800a38c:	f000 fadc 	bl	800a948 <lo_pattern_match>
 800a390:	2800      	cmp	r0, #0
 800a392:	d0e3      	beq.n	800a35c <OscServer::Run()+0x124>
 800a394:	4632      	mov	r2, r6
 800a396:	6829      	ldr	r1, [r5, #0]
 800a398:	a80f      	add	r0, sp, #60	; 0x3c
 800a39a:	f000 fbac 	bl	800aaf6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 800a39e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a3a0:	2b00      	cmp	r3, #0
 800a3a2:	f43f af6c 	beq.w	800a27e <OscServer::Run()+0x46>
 800a3a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a3a8:	781b      	ldrb	r3, [r3, #0]
 800a3aa:	2b66      	cmp	r3, #102	; 0x66
 800a3ac:	f47f af67 	bne.w	800a27e <OscServer::Run()+0x46>
 800a3b0:	4639      	mov	r1, r7
 800a3b2:	a80f      	add	r0, sp, #60	; 0x3c
 800a3b4:	f000 fbdb 	bl	800ab6e <OscSimpleMessage::GetFloat(unsigned int)>
 800a3b8:	2100      	movs	r1, #0
 800a3ba:	f7fd fca5 	bl	8007d08 <__aeabi_fcmpeq>
 800a3be:	4603      	mov	r3, r0
 800a3c0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a3c2:	b91b      	cbnz	r3, 800a3cc <OscServer::Run()+0x194>
 800a3c4:	6803      	ldr	r3, [r0, #0]
 800a3c6:	689b      	ldr	r3, [r3, #8]
 800a3c8:	4798      	blx	r3
 800a3ca:	e758      	b.n	800a27e <OscServer::Run()+0x46>
 800a3cc:	6803      	ldr	r3, [r0, #0]
 800a3ce:	68db      	ldr	r3, [r3, #12]
 800a3d0:	e7fa      	b.n	800a3c8 <OscServer::Run()+0x190>
 800a3d2:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800a3d6:	2b00      	cmp	r3, #0
 800a3d8:	f43f af51 	beq.w	800a27e <OscServer::Run()+0x46>
 800a3dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a3de:	2b01      	cmp	r3, #1
 800a3e0:	f47f af4d 	bne.w	800a27e <OscServer::Run()+0x46>
 800a3e4:	6829      	ldr	r1, [r5, #0]
 800a3e6:	4620      	mov	r0, r4
 800a3e8:	f7ff feec 	bl	800a1c4 <OscServer::GetChannel(char const*)>
 800a3ec:	b285      	uxth	r5, r0
 800a3ee:	1e6b      	subs	r3, r5, #1
 800a3f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a3f4:	f4bf af43 	bcs.w	800a27e <OscServer::Run()+0x46>
 800a3f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a3fa:	781b      	ldrb	r3, [r3, #0]
 800a3fc:	2b69      	cmp	r3, #105	; 0x69
 800a3fe:	d105      	bne.n	800a40c <OscServer::Run()+0x1d4>
 800a400:	2100      	movs	r1, #0
 800a402:	a808      	add	r0, sp, #32
 800a404:	f000 fbc7 	bl	800ab96 <OscSimpleMessage::GetInt(unsigned int)>
 800a408:	b2c0      	uxtb	r0, r0
 800a40a:	e756      	b.n	800a2ba <OscServer::Run()+0x82>
 800a40c:	2b66      	cmp	r3, #102	; 0x66
 800a40e:	f47f af36 	bne.w	800a27e <OscServer::Run()+0x46>
 800a412:	2100      	movs	r1, #0
 800a414:	a808      	add	r0, sp, #32
 800a416:	f000 fbaa 	bl	800ab6e <OscSimpleMessage::GetFloat(unsigned int)>
 800a41a:	4923      	ldr	r1, [pc, #140]	; (800a4a8 <OscServer::Run()+0x270>)
 800a41c:	f7fd fb7c 	bl	8007b18 <__aeabi_fmul>
 800a420:	f7fd fca4 	bl	8007d6c <__aeabi_f2uiz>
 800a424:	e7f0      	b.n	800a408 <OscServer::Run()+0x1d0>
 800a426:	8923      	ldrh	r3, [r4, #8]
 800a428:	42ab      	cmp	r3, r5
 800a42a:	bf38      	it	cc
 800a42c:	462b      	movcc	r3, r5
 800a42e:	8123      	strh	r3, [r4, #8]
 800a430:	e782      	b.n	800a338 <OscServer::Run()+0x100>
 800a432:	4922      	ldr	r1, [pc, #136]	; (800a4bc <OscServer::Run()+0x284>)
 800a434:	6828      	ldr	r0, [r5, #0]
 800a436:	f000 fa87 	bl	800a948 <lo_pattern_match>
 800a43a:	2800      	cmp	r0, #0
 800a43c:	f43f af1f 	beq.w	800a27e <OscServer::Run()+0x46>
 800a440:	f104 030d 	add.w	r3, r4, #13
 800a444:	4d1e      	ldr	r5, [pc, #120]	; (800a4c0 <OscServer::Run()+0x288>)
 800a446:	9302      	str	r3, [sp, #8]
 800a448:	4b1e      	ldr	r3, [pc, #120]	; (800a4c4 <OscServer::Run()+0x28c>)
 800a44a:	9a07      	ldr	r2, [sp, #28]
 800a44c:	6861      	ldr	r1, [r4, #4]
 800a44e:	9300      	str	r3, [sp, #0]
 800a450:	9501      	str	r5, [sp, #4]
 800a452:	8863      	ldrh	r3, [r4, #2]
 800a454:	a805      	add	r0, sp, #20
 800a456:	f000 fc0f 	bl	800ac78 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a45a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a45c:	9a07      	ldr	r2, [sp, #28]
 800a45e:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800a462:	4b19      	ldr	r3, [pc, #100]	; (800a4c8 <OscServer::Run()+0x290>)
 800a464:	6861      	ldr	r1, [r4, #4]
 800a466:	9300      	str	r3, [sp, #0]
 800a468:	a806      	add	r0, sp, #24
 800a46a:	8863      	ldrh	r3, [r4, #2]
 800a46c:	f000 fc04 	bl	800ac78 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a470:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a472:	9a07      	ldr	r2, [sp, #28]
 800a474:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800a478:	4b14      	ldr	r3, [pc, #80]	; (800a4cc <OscServer::Run()+0x294>)
 800a47a:	6861      	ldr	r1, [r4, #4]
 800a47c:	9300      	str	r3, [sp, #0]
 800a47e:	a80f      	add	r0, sp, #60	; 0x3c
 800a480:	8863      	ldrh	r3, [r4, #2]
 800a482:	f000 fbf9 	bl	800ac78 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800a486:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a488:	2800      	cmp	r0, #0
 800a48a:	f43f aef8 	beq.w	800a27e <OscServer::Run()+0x46>
 800a48e:	6803      	ldr	r3, [r0, #0]
 800a490:	9a07      	ldr	r2, [sp, #28]
 800a492:	691d      	ldr	r5, [r3, #16]
 800a494:	6861      	ldr	r1, [r4, #4]
 800a496:	8863      	ldrh	r3, [r4, #2]
 800a498:	47a8      	blx	r5
 800a49a:	e6f0      	b.n	800a27e <OscServer::Run()+0x46>
 800a49c:	200006e0 	andcs	r0, r0, r0, ror #13
 800a4a0:	200007e4 	andcs	r0, r0, r4, ror #15
 800a4a4:	20000864 	andcs	r0, r0, r4, ror #16
 800a4a8:	437f0000 	cmnmi	pc, #0
 800a4ac:	200006e4 	andcs	r0, r0, r4, ror #13
 800a4b0:	0801207d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sp}
 800a4b4:	08012083 	stmdaeq	r1, {r0, r1, r7, sp}
 800a4b8:	20000764 	andcs	r0, r0, r4, ror #14
 800a4bc:	20000660 	andcs	r0, r0, r0, ror #12
 800a4c0:	08012075 	stmdaeq	r1, {r0, r2, r4, r5, r6, sp}
 800a4c4:	08012089 	stmdaeq	r1, {r0, r3, r7, sp}
 800a4c8:	08012092 	stmdaeq	r1, {r1, r4, r7, sp}
 800a4cc:	0801209e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sp}

0800a4d0 <OscServer::Print()>:
 800a4d0:	b510      	push	{r4, lr}
 800a4d2:	4604      	mov	r4, r0
 800a4d4:	480f      	ldr	r0, [pc, #60]	; (800a514 <OscServer::Print()+0x44>)
 800a4d6:	f7fe f9b3 	bl	8008840 <printf>
 800a4da:	8821      	ldrh	r1, [r4, #0]
 800a4dc:	480e      	ldr	r0, [pc, #56]	; (800a518 <OscServer::Print()+0x48>)
 800a4de:	f7fe f9af 	bl	8008840 <printf>
 800a4e2:	8861      	ldrh	r1, [r4, #2]
 800a4e4:	480d      	ldr	r0, [pc, #52]	; (800a51c <OscServer::Print()+0x4c>)
 800a4e6:	f7fe f9ab 	bl	8008840 <printf>
 800a4ea:	4a0d      	ldr	r2, [pc, #52]	; (800a520 <OscServer::Print()+0x50>)
 800a4ec:	490d      	ldr	r1, [pc, #52]	; (800a524 <OscServer::Print()+0x54>)
 800a4ee:	480e      	ldr	r0, [pc, #56]	; (800a528 <OscServer::Print()+0x58>)
 800a4f0:	f7fe f9a6 	bl	8008840 <printf>
 800a4f4:	490d      	ldr	r1, [pc, #52]	; (800a52c <OscServer::Print()+0x5c>)
 800a4f6:	480e      	ldr	r0, [pc, #56]	; (800a530 <OscServer::Print()+0x60>)
 800a4f8:	f7fe f9a2 	bl	8008840 <printf>
 800a4fc:	7aa1      	ldrb	r1, [r4, #10]
 800a4fe:	4a0d      	ldr	r2, [pc, #52]	; (800a534 <OscServer::Print()+0x64>)
 800a500:	4b0d      	ldr	r3, [pc, #52]	; (800a538 <OscServer::Print()+0x68>)
 800a502:	480e      	ldr	r0, [pc, #56]	; (800a53c <OscServer::Print()+0x6c>)
 800a504:	2900      	cmp	r1, #0
 800a506:	bf14      	ite	ne
 800a508:	4611      	movne	r1, r2
 800a50a:	4619      	moveq	r1, r3
 800a50c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a510:	f7fe b996 	b.w	8008840 <printf>
 800a514:	080120af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, sp}
 800a518:	080120bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, sp}
 800a51c:	080120d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sp}
 800a520:	200006e4 	andcs	r0, r0, r4, ror #13
 800a524:	200007e4 	andcs	r0, r0, r4, ror #15
 800a528:	080120f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sp}
 800a52c:	20000764 	andcs	r0, r0, r4, ror #14
 800a530:	08012115 	stmdaeq	r1, {r0, r2, r4, r8, sp}
 800a534:	080120a8 	stmdaeq	r1, {r3, r5, r7, sp}
 800a538:	080120ac 	stmdaeq	r1, {r2, r3, r5, r7, sp}
 800a53c:	08012133 	stmdaeq	r1, {r0, r1, r4, r5, r8, sp}

0800a540 <strncpy.constprop.0.isra.0>:
 800a540:	227f      	movs	r2, #127	; 0x7f
 800a542:	1e4b      	subs	r3, r1, #1
 800a544:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a548:	b909      	cbnz	r1, 800a54e <strncpy.constprop.0.isra.0+0xe>
 800a54a:	f004 bd35 	b.w	800efb8 <memset>
 800a54e:	3a01      	subs	r2, #1
 800a550:	f800 1b01 	strb.w	r1, [r0], #1
 800a554:	d1f6      	bne.n	800a544 <strncpy.constprop.0.isra.0+0x4>
 800a556:	4770      	bx	lr

0800a558 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800a558:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a55a:	88c6      	ldrh	r6, [r0, #6]
 800a55c:	8885      	ldrh	r5, [r0, #4]
 800a55e:	42ae      	cmp	r6, r5
 800a560:	d216      	bcs.n	800a590 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800a562:	4604      	mov	r4, r0
 800a564:	6800      	ldr	r0, [r0, #0]
 800a566:	1bad      	subs	r5, r5, r6
 800a568:	4430      	add	r0, r6
 800a56a:	7a26      	ldrb	r6, [r4, #8]
 800a56c:	b923      	cbnz	r3, 800a578 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800a56e:	b926      	cbnz	r6, 800a57a <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800a570:	9200      	str	r2, [sp, #0]
 800a572:	460b      	mov	r3, r1
 800a574:	4a09      	ldr	r2, [pc, #36]	; (800a59c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800a576:	e003      	b.n	800a580 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a578:	b166      	cbz	r6, 800a594 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800a57a:	460b      	mov	r3, r1
 800a57c:	9200      	str	r2, [sp, #0]
 800a57e:	4a08      	ldr	r2, [pc, #32]	; (800a5a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800a580:	4629      	mov	r1, r5
 800a582:	f7fe f96d 	bl	8008860 <snprintf>
 800a586:	4285      	cmp	r5, r0
 800a588:	bfa2      	ittt	ge
 800a58a:	88e3      	ldrhge	r3, [r4, #6]
 800a58c:	181b      	addge	r3, r3, r0
 800a58e:	80e3      	strhge	r3, [r4, #6]
 800a590:	b002      	add	sp, #8
 800a592:	bd70      	pop	{r4, r5, r6, pc}
 800a594:	9200      	str	r2, [sp, #0]
 800a596:	460b      	mov	r3, r1
 800a598:	4a02      	ldr	r2, [pc, #8]	; (800a5a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a59a:	e7f1      	b.n	800a580 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800a59c:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 800a5a0:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 800a5a4:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}

0800a5a8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800a5a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5aa:	88c6      	ldrh	r6, [r0, #6]
 800a5ac:	8885      	ldrh	r5, [r0, #4]
 800a5ae:	42ae      	cmp	r6, r5
 800a5b0:	d216      	bcs.n	800a5e0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 800a5b2:	4604      	mov	r4, r0
 800a5b4:	6800      	ldr	r0, [r0, #0]
 800a5b6:	1bad      	subs	r5, r5, r6
 800a5b8:	4430      	add	r0, r6
 800a5ba:	7a26      	ldrb	r6, [r4, #8]
 800a5bc:	b923      	cbnz	r3, 800a5c8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 800a5be:	b926      	cbnz	r6, 800a5ca <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 800a5c0:	9200      	str	r2, [sp, #0]
 800a5c2:	460b      	mov	r3, r1
 800a5c4:	4a09      	ldr	r2, [pc, #36]	; (800a5ec <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a5c6:	e003      	b.n	800a5d0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5c8:	b166      	cbz	r6, 800a5e4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a5ca:	460b      	mov	r3, r1
 800a5cc:	9200      	str	r2, [sp, #0]
 800a5ce:	4a08      	ldr	r2, [pc, #32]	; (800a5f0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a5d0:	4629      	mov	r1, r5
 800a5d2:	f7fe f945 	bl	8008860 <snprintf>
 800a5d6:	4285      	cmp	r5, r0
 800a5d8:	bfa2      	ittt	ge
 800a5da:	88e3      	ldrhge	r3, [r4, #6]
 800a5dc:	181b      	addge	r3, r3, r0
 800a5de:	80e3      	strhge	r3, [r4, #6]
 800a5e0:	b002      	add	sp, #8
 800a5e2:	bd70      	pop	{r4, r5, r6, pc}
 800a5e4:	9200      	str	r2, [sp, #0]
 800a5e6:	460b      	mov	r3, r1
 800a5e8:	4a02      	ldr	r2, [pc, #8]	; (800a5f4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a5ea:	e7f1      	b.n	800a5d0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800a5ec:	0801132c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip}
 800a5f0:	08011321 	stmdaeq	r1, {r0, r5, r8, r9, ip}
 800a5f4:	0801132d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, ip}

0800a5f8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800a5f8:	b510      	push	{r4, lr}
 800a5fa:	4604      	mov	r4, r0
 800a5fc:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800a600:	f840 1b04 	str.w	r1, [r0], #4
 800a604:	2100      	movs	r1, #0
 800a606:	f004 fcd7 	bl	800efb8 <memset>
 800a60a:	4b02      	ldr	r3, [pc, #8]	; (800a614 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 800a60c:	4620      	mov	r0, r4
 800a60e:	60a3      	str	r3, [r4, #8]
 800a610:	bd10      	pop	{r4, pc}
 800a612:	bf00      	nop
 800a614:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

0800a618 <OSCServerParams::Load()>:
 800a618:	b508      	push	{r3, lr}
 800a61a:	2300      	movs	r3, #0
 800a61c:	4601      	mov	r1, r0
 800a61e:	6043      	str	r3, [r0, #4]
 800a620:	6800      	ldr	r0, [r0, #0]
 800a622:	b120      	cbz	r0, 800a62e <OSCServerParams::Load()+0x16>
 800a624:	6803      	ldr	r3, [r0, #0]
 800a626:	3104      	adds	r1, #4
 800a628:	68db      	ldr	r3, [r3, #12]
 800a62a:	4798      	blx	r3
 800a62c:	2001      	movs	r0, #1
 800a62e:	bd08      	pop	{r3, pc}

0800a630 <OSCServerParams::Load(char const*, unsigned int)>:
 800a630:	6803      	ldr	r3, [r0, #0]
 800a632:	b1d3      	cbz	r3, 800a66a <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 800a634:	2300      	movs	r3, #0
 800a636:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a638:	460d      	mov	r5, r1
 800a63a:	4616      	mov	r6, r2
 800a63c:	4604      	mov	r4, r0
 800a63e:	6043      	str	r3, [r0, #4]
 800a640:	4602      	mov	r2, r0
 800a642:	490a      	ldr	r1, [pc, #40]	; (800a66c <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 800a644:	4668      	mov	r0, sp
 800a646:	f003 fef9 	bl	800e43c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a64a:	4632      	mov	r2, r6
 800a64c:	4629      	mov	r1, r5
 800a64e:	4668      	mov	r0, sp
 800a650:	f003 fef8 	bl	800e444 <ReadConfigFile::Read(char const*, unsigned int)>
 800a654:	4621      	mov	r1, r4
 800a656:	f851 0b04 	ldr.w	r0, [r1], #4
 800a65a:	6803      	ldr	r3, [r0, #0]
 800a65c:	689b      	ldr	r3, [r3, #8]
 800a65e:	4798      	blx	r3
 800a660:	4668      	mov	r0, sp
 800a662:	f003 feee 	bl	800e442 <ReadConfigFile::~ReadConfigFile()>
 800a666:	b002      	add	sp, #8
 800a668:	bd70      	pop	{r4, r5, r6, pc}
 800a66a:	4770      	bx	lr
 800a66c:	0800a769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp, pc}

0800a670 <OSCServerParams::callbackFunction(char const*)>:
 800a670:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a672:	460d      	mov	r5, r1
 800a674:	4604      	mov	r4, r0
 800a676:	4937      	ldr	r1, [pc, #220]	; (800a754 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800a678:	4628      	mov	r0, r5
 800a67a:	f10d 0202 	add.w	r2, sp, #2
 800a67e:	f003 ff6f 	bl	800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a682:	b980      	cbnz	r0, 800a6a6 <OSCServerParams::callbackFunction(char const*)+0x36>
 800a684:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a688:	6863      	ldr	r3, [r4, #4]
 800a68a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a68e:	bf33      	iteet	cc
 800a690:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 800a694:	8122      	strhcs	r2, [r4, #8]
 800a696:	f043 0301 	orrcs.w	r3, r3, #1
 800a69a:	8122      	strhcc	r2, [r4, #8]
 800a69c:	bf38      	it	cc
 800a69e:	f023 0301 	biccc.w	r3, r3, #1
 800a6a2:	6063      	str	r3, [r4, #4]
 800a6a4:	e028      	b.n	800a6f8 <OSCServerParams::callbackFunction(char const*)+0x88>
 800a6a6:	4628      	mov	r0, r5
 800a6a8:	492b      	ldr	r1, [pc, #172]	; (800a758 <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800a6aa:	f10d 0202 	add.w	r2, sp, #2
 800a6ae:	f003 ff57 	bl	800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800a6b2:	b978      	cbnz	r0, 800a6d4 <OSCServerParams::callbackFunction(char const*)+0x64>
 800a6b4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a6b8:	6863      	ldr	r3, [r4, #4]
 800a6ba:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a6be:	bf33      	iteet	cc
 800a6c0:	f242 3228 	movwcc	r2, #9000	; 0x2328
 800a6c4:	8162      	strhcs	r2, [r4, #10]
 800a6c6:	f043 0302 	orrcs.w	r3, r3, #2
 800a6ca:	8162      	strhcc	r2, [r4, #10]
 800a6cc:	bf38      	it	cc
 800a6ce:	f023 0302 	biccc.w	r3, r3, #2
 800a6d2:	e7e6      	b.n	800a6a2 <OSCServerParams::callbackFunction(char const*)+0x32>
 800a6d4:	4628      	mov	r0, r5
 800a6d6:	4921      	ldr	r1, [pc, #132]	; (800a75c <OSCServerParams::callbackFunction(char const*)+0xec>)
 800a6d8:	f10d 0201 	add.w	r2, sp, #1
 800a6dc:	f003 ff5e 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a6e0:	b978      	cbnz	r0, 800a702 <OSCServerParams::callbackFunction(char const*)+0x92>
 800a6e2:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800a6e6:	6863      	ldr	r3, [r4, #4]
 800a6e8:	b142      	cbz	r2, 800a6fc <OSCServerParams::callbackFunction(char const*)+0x8c>
 800a6ea:	f043 0308 	orr.w	r3, r3, #8
 800a6ee:	3a00      	subs	r2, #0
 800a6f0:	bf18      	it	ne
 800a6f2:	2201      	movne	r2, #1
 800a6f4:	6063      	str	r3, [r4, #4]
 800a6f6:	7362      	strb	r2, [r4, #13]
 800a6f8:	b002      	add	sp, #8
 800a6fa:	bd70      	pop	{r4, r5, r6, pc}
 800a6fc:	f023 0308 	bic.w	r3, r3, #8
 800a700:	e7f5      	b.n	800a6ee <OSCServerParams::callbackFunction(char const*)+0x7e>
 800a702:	267f      	movs	r6, #127	; 0x7f
 800a704:	4628      	mov	r0, r5
 800a706:	4916      	ldr	r1, [pc, #88]	; (800a760 <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800a708:	ab01      	add	r3, sp, #4
 800a70a:	f104 020e 	add.w	r2, r4, #14
 800a70e:	9601      	str	r6, [sp, #4]
 800a710:	f003 fecc 	bl	800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a714:	b918      	cbnz	r0, 800a71e <OSCServerParams::callbackFunction(char const*)+0xae>
 800a716:	6863      	ldr	r3, [r4, #4]
 800a718:	f043 0304 	orr.w	r3, r3, #4
 800a71c:	e7c1      	b.n	800a6a2 <OSCServerParams::callbackFunction(char const*)+0x32>
 800a71e:	4628      	mov	r0, r5
 800a720:	4910      	ldr	r1, [pc, #64]	; (800a764 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800a722:	ab01      	add	r3, sp, #4
 800a724:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 800a728:	9601      	str	r6, [sp, #4]
 800a72a:	f003 febf 	bl	800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a72e:	b918      	cbnz	r0, 800a738 <OSCServerParams::callbackFunction(char const*)+0xc8>
 800a730:	6863      	ldr	r3, [r4, #4]
 800a732:	f043 0320 	orr.w	r3, r3, #32
 800a736:	e7b4      	b.n	800a6a2 <OSCServerParams::callbackFunction(char const*)+0x32>
 800a738:	4628      	mov	r0, r5
 800a73a:	490a      	ldr	r1, [pc, #40]	; (800a764 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 800a73c:	ab01      	add	r3, sp, #4
 800a73e:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 800a742:	9601      	str	r6, [sp, #4]
 800a744:	f003 feb2 	bl	800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a748:	2800      	cmp	r0, #0
 800a74a:	d1d5      	bne.n	800a6f8 <OSCServerParams::callbackFunction(char const*)+0x88>
 800a74c:	6863      	ldr	r3, [r4, #4]
 800a74e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a752:	e7a6      	b.n	800a6a2 <OSCServerParams::callbackFunction(char const*)+0x32>
 800a754:	080121cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sp}
 800a758:	080121d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sp}
 800a75c:	08012191 	stmdaeq	r1, {r0, r4, r7, r8, sp}
 800a760:	080121b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sp}
 800a764:	080121c1 	stmdaeq	r1, {r0, r6, r7, r8, sp}

0800a768 <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 800a768:	f7ff bf82 	b.w	800a670 <OSCServerParams::callbackFunction(char const*)>

0800a76c <OSCServerParams::Set(OscServer*)>:
 800a76c:	b538      	push	{r3, r4, r5, lr}
 800a76e:	460d      	mov	r5, r1
 800a770:	6843      	ldr	r3, [r0, #4]
 800a772:	4604      	mov	r4, r0
 800a774:	07d9      	lsls	r1, r3, #31
 800a776:	bf44      	itt	mi
 800a778:	8902      	ldrhmi	r2, [r0, #8]
 800a77a:	802a      	strhmi	r2, [r5, #0]
 800a77c:	079a      	lsls	r2, r3, #30
 800a77e:	bf44      	itt	mi
 800a780:	8942      	ldrhmi	r2, [r0, #10]
 800a782:	806a      	strhmi	r2, [r5, #2]
 800a784:	0758      	lsls	r0, r3, #29
 800a786:	d504      	bpl.n	800a792 <OSCServerParams::Set(OscServer*)+0x26>
 800a788:	4628      	mov	r0, r5
 800a78a:	f104 010e 	add.w	r1, r4, #14
 800a78e:	f7ff fcc7 	bl	800a120 <OscServer::SetPath(char const*)>
 800a792:	6863      	ldr	r3, [r4, #4]
 800a794:	0699      	lsls	r1, r3, #26
 800a796:	d504      	bpl.n	800a7a2 <OSCServerParams::Set(OscServer*)+0x36>
 800a798:	4628      	mov	r0, r5
 800a79a:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 800a79e:	f7ff fce5 	bl	800a16c <OscServer::SetPathInfo(char const*)>
 800a7a2:	6863      	ldr	r3, [r4, #4]
 800a7a4:	065a      	lsls	r2, r3, #25
 800a7a6:	d504      	bpl.n	800a7b2 <OSCServerParams::Set(OscServer*)+0x46>
 800a7a8:	4628      	mov	r0, r5
 800a7aa:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 800a7ae:	f7ff fcf3 	bl	800a198 <OscServer::SetPathBlackOut(char const*)>
 800a7b2:	6863      	ldr	r3, [r4, #4]
 800a7b4:	071b      	lsls	r3, r3, #28
 800a7b6:	bf44      	itt	mi
 800a7b8:	7b63      	ldrbmi	r3, [r4, #13]
 800a7ba:	72ab      	strbmi	r3, [r5, #10]
 800a7bc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800a7c0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 800a7c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7c2:	4604      	mov	r4, r0
 800a7c4:	4615      	mov	r5, r2
 800a7c6:	461e      	mov	r6, r3
 800a7c8:	b087      	sub	sp, #28
 800a7ca:	3004      	adds	r0, #4
 800a7cc:	2900      	cmp	r1, #0
 800a7ce:	d061      	beq.n	800a894 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd4>
 800a7d0:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 800a7d4:	f004 fbd9 	bl	800ef8a <memmove>
 800a7d8:	4633      	mov	r3, r6
 800a7da:	462a      	mov	r2, r5
 800a7dc:	4946      	ldr	r1, [pc, #280]	; (800a8f8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 800a7de:	a803      	add	r0, sp, #12
 800a7e0:	f003 fd8c 	bl	800e2fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a7e4:	6863      	ldr	r3, [r4, #4]
 800a7e6:	f104 070e 	add.w	r7, r4, #14
 800a7ea:	075e      	lsls	r6, r3, #29
 800a7ec:	d403      	bmi.n	800a7f6 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 800a7ee:	4638      	mov	r0, r7
 800a7f0:	4942      	ldr	r1, [pc, #264]	; (800a8fc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 800a7f2:	f7ff fea5 	bl	800a540 <strncpy.constprop.0.isra.0>
 800a7f6:	6863      	ldr	r3, [r4, #4]
 800a7f8:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 800a7fc:	069d      	lsls	r5, r3, #26
 800a7fe:	d403      	bmi.n	800a808 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 800a800:	4630      	mov	r0, r6
 800a802:	493f      	ldr	r1, [pc, #252]	; (800a900 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 800a804:	f7ff fe9c 	bl	800a540 <strncpy.constprop.0.isra.0>
 800a808:	6863      	ldr	r3, [r4, #4]
 800a80a:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 800a80e:	0658      	lsls	r0, r3, #25
 800a810:	d403      	bmi.n	800a81a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 800a812:	4628      	mov	r0, r5
 800a814:	493b      	ldr	r1, [pc, #236]	; (800a904 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 800a816:	f7ff fe93 	bl	800a540 <strncpy.constprop.0.isra.0>
 800a81a:	6863      	ldr	r3, [r4, #4]
 800a81c:	8922      	ldrh	r2, [r4, #8]
 800a81e:	493a      	ldr	r1, [pc, #232]	; (800a908 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 800a820:	f003 0301 	and.w	r3, r3, #1
 800a824:	a803      	add	r0, sp, #12
 800a826:	f7ff fe97 	bl	800a558 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a82a:	6863      	ldr	r3, [r4, #4]
 800a82c:	8962      	ldrh	r2, [r4, #10]
 800a82e:	4937      	ldr	r1, [pc, #220]	; (800a90c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 800a830:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800a834:	a803      	add	r0, sp, #12
 800a836:	f7ff fe8f 	bl	800a558 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800a83a:	6863      	ldr	r3, [r4, #4]
 800a83c:	463a      	mov	r2, r7
 800a83e:	4934      	ldr	r1, [pc, #208]	; (800a910 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 800a840:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800a844:	a803      	add	r0, sp, #12
 800a846:	f7ff feaf 	bl	800a5a8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a84a:	6863      	ldr	r3, [r4, #4]
 800a84c:	4632      	mov	r2, r6
 800a84e:	4931      	ldr	r1, [pc, #196]	; (800a914 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 800a850:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800a854:	a803      	add	r0, sp, #12
 800a856:	f7ff fea7 	bl	800a5a8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a85a:	6863      	ldr	r3, [r4, #4]
 800a85c:	462a      	mov	r2, r5
 800a85e:	492e      	ldr	r1, [pc, #184]	; (800a918 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 800a860:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800a864:	a803      	add	r0, sp, #12
 800a866:	f7ff fe9f 	bl	800a5a8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800a86a:	7b63      	ldrb	r3, [r4, #13]
 800a86c:	6861      	ldr	r1, [r4, #4]
 800a86e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a872:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a876:	42a2      	cmp	r2, r4
 800a878:	d221      	bcs.n	800a8be <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800a87a:	9803      	ldr	r0, [sp, #12]
 800a87c:	0709      	lsls	r1, r1, #28
 800a87e:	4410      	add	r0, r2
 800a880:	eba4 0402 	sub.w	r4, r4, r2
 800a884:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800a888:	d40b      	bmi.n	800a8a2 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800a88a:	b95a      	cbnz	r2, 800a8a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 800a88c:	9300      	str	r3, [sp, #0]
 800a88e:	4a23      	ldr	r2, [pc, #140]	; (800a91c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 800a890:	4b23      	ldr	r3, [pc, #140]	; (800a920 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a892:	e00a      	b.n	800a8aa <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800a894:	6823      	ldr	r3, [r4, #0]
 800a896:	4601      	mov	r1, r0
 800a898:	681a      	ldr	r2, [r3, #0]
 800a89a:	4618      	mov	r0, r3
 800a89c:	68d2      	ldr	r2, [r2, #12]
 800a89e:	4790      	blx	r2
 800a8a0:	e79a      	b.n	800a7d8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800a8a2:	b32a      	cbz	r2, 800a8f0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x130>
 800a8a4:	9300      	str	r3, [sp, #0]
 800a8a6:	4a1f      	ldr	r2, [pc, #124]	; (800a924 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800a8a8:	4b1d      	ldr	r3, [pc, #116]	; (800a920 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a8aa:	4621      	mov	r1, r4
 800a8ac:	f7fd ffd8 	bl	8008860 <snprintf>
 800a8b0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8b4:	4284      	cmp	r4, r0
 800a8b6:	bfa4      	itt	ge
 800a8b8:	181b      	addge	r3, r3, r0
 800a8ba:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8be:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a8c2:	b17b      	cbz	r3, 800a8e4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x124>
 800a8c4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a8c8:	9b03      	ldr	r3, [sp, #12]
 800a8ca:	4413      	add	r3, r2
 800a8cc:	227d      	movs	r2, #125	; 0x7d
 800a8ce:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a8d2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8d6:	9903      	ldr	r1, [sp, #12]
 800a8d8:	54ca      	strb	r2, [r1, r3]
 800a8da:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8de:	3301      	adds	r3, #1
 800a8e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a8e4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a8e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8ea:	601a      	str	r2, [r3, #0]
 800a8ec:	b007      	add	sp, #28
 800a8ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8f0:	9300      	str	r3, [sp, #0]
 800a8f2:	4a0d      	ldr	r2, [pc, #52]	; (800a928 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 800a8f4:	4b0a      	ldr	r3, [pc, #40]	; (800a920 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800a8f6:	e7d8      	b.n	800a8aa <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800a8f8:	080121b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sp}
 800a8fc:	200007e4 	andcs	r0, r0, r4, ror #15
 800a900:	20000660 	andcs	r0, r0, r0, ror #12
 800a904:	20000764 	andcs	r0, r0, r4, ror #14
 800a908:	080121cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sp}
 800a90c:	080121d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sp}
 800a910:	080121b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sp}
 800a914:	080121c1 	stmdaeq	r1, {r0, r6, r7, r8, sp}
 800a918:	080121a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, sp}
 800a91c:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 800a920:	08012191 	stmdaeq	r1, {r0, r4, r7, r8, sp}
 800a924:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 800a928:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}

0800a92c <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 800a92c:	b513      	push	{r0, r1, r4, lr}
 800a92e:	6804      	ldr	r4, [r0, #0]
 800a930:	b914      	cbnz	r4, 800a938 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a932:	601c      	str	r4, [r3, #0]
 800a934:	b002      	add	sp, #8
 800a936:	bd10      	pop	{r4, pc}
 800a938:	9300      	str	r3, [sp, #0]
 800a93a:	4613      	mov	r3, r2
 800a93c:	460a      	mov	r2, r1
 800a93e:	2100      	movs	r1, #0
 800a940:	f7ff ff3e 	bl	800a7c0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 800a944:	e7f6      	b.n	800a934 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a946 <OSCServerParams::Dump()>:
 800a946:	4770      	bx	lr

0800a948 <lo_pattern_match>:
 800a948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a94a:	4605      	mov	r5, r0
 800a94c:	460b      	mov	r3, r1
 800a94e:	7819      	ldrb	r1, [r3, #0]
 800a950:	782a      	ldrb	r2, [r5, #0]
 800a952:	b919      	cbnz	r1, 800a95c <lo_pattern_match+0x14>
 800a954:	fab2 f082 	clz	r0, r2
 800a958:	0940      	lsrs	r0, r0, #5
 800a95a:	e09f      	b.n	800aa9c <lo_pattern_match+0x154>
 800a95c:	b90a      	cbnz	r2, 800a962 <lo_pattern_match+0x1a>
 800a95e:	292a      	cmp	r1, #42	; 0x2a
 800a960:	d132      	bne.n	800a9c8 <lo_pattern_match+0x80>
 800a962:	295b      	cmp	r1, #91	; 0x5b
 800a964:	f103 0401 	add.w	r4, r3, #1
 800a968:	d03c      	beq.n	800a9e4 <lo_pattern_match+0x9c>
 800a96a:	d806      	bhi.n	800a97a <lo_pattern_match+0x32>
 800a96c:	292a      	cmp	r1, #42	; 0x2a
 800a96e:	d012      	beq.n	800a996 <lo_pattern_match+0x4e>
 800a970:	293f      	cmp	r1, #63	; 0x3f
 800a972:	d032      	beq.n	800a9da <lo_pattern_match+0x92>
 800a974:	4291      	cmp	r1, r2
 800a976:	d032      	beq.n	800a9de <lo_pattern_match+0x96>
 800a978:	e026      	b.n	800a9c8 <lo_pattern_match+0x80>
 800a97a:	297b      	cmp	r1, #123	; 0x7b
 800a97c:	d1fa      	bne.n	800a974 <lo_pattern_match+0x2c>
 800a97e:	7820      	ldrb	r0, [r4, #0]
 800a980:	4626      	mov	r6, r4
 800a982:	1c67      	adds	r7, r4, #1
 800a984:	2800      	cmp	r0, #0
 800a986:	f000 8089 	beq.w	800aa9c <lo_pattern_match+0x154>
 800a98a:	287d      	cmp	r0, #125	; 0x7d
 800a98c:	d161      	bne.n	800aa52 <lo_pattern_match+0x10a>
 800a98e:	1c9c      	adds	r4, r3, #2
 800a990:	4628      	mov	r0, r5
 800a992:	785b      	ldrb	r3, [r3, #1]
 800a994:	e06d      	b.n	800aa72 <lo_pattern_match+0x12a>
 800a996:	7823      	ldrb	r3, [r4, #0]
 800a998:	4626      	mov	r6, r4
 800a99a:	2b2a      	cmp	r3, #42	; 0x2a
 800a99c:	f104 0401 	add.w	r4, r4, #1
 800a9a0:	d0f9      	beq.n	800a996 <lo_pattern_match+0x4e>
 800a9a2:	b1c3      	cbz	r3, 800a9d6 <lo_pattern_match+0x8e>
 800a9a4:	2b3f      	cmp	r3, #63	; 0x3f
 800a9a6:	d00b      	beq.n	800a9c0 <lo_pattern_match+0x78>
 800a9a8:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 800a9ac:	2a5b      	cmp	r2, #91	; 0x5b
 800a9ae:	d007      	beq.n	800a9c0 <lo_pattern_match+0x78>
 800a9b0:	462a      	mov	r2, r5
 800a9b2:	4615      	mov	r5, r2
 800a9b4:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a9b8:	2800      	cmp	r0, #0
 800a9ba:	d06f      	beq.n	800aa9c <lo_pattern_match+0x154>
 800a9bc:	4283      	cmp	r3, r0
 800a9be:	d1f8      	bne.n	800a9b2 <lo_pattern_match+0x6a>
 800a9c0:	4628      	mov	r0, r5
 800a9c2:	7803      	ldrb	r3, [r0, #0]
 800a9c4:	3501      	adds	r5, #1
 800a9c6:	b90b      	cbnz	r3, 800a9cc <lo_pattern_match+0x84>
 800a9c8:	2000      	movs	r0, #0
 800a9ca:	e067      	b.n	800aa9c <lo_pattern_match+0x154>
 800a9cc:	4631      	mov	r1, r6
 800a9ce:	f7ff ffbb 	bl	800a948 <lo_pattern_match>
 800a9d2:	2800      	cmp	r0, #0
 800a9d4:	d0f4      	beq.n	800a9c0 <lo_pattern_match+0x78>
 800a9d6:	2001      	movs	r0, #1
 800a9d8:	e060      	b.n	800aa9c <lo_pattern_match+0x154>
 800a9da:	2a00      	cmp	r2, #0
 800a9dc:	d0f4      	beq.n	800a9c8 <lo_pattern_match+0x80>
 800a9de:	4623      	mov	r3, r4
 800a9e0:	3501      	adds	r5, #1
 800a9e2:	e7b4      	b.n	800a94e <lo_pattern_match+0x6>
 800a9e4:	7859      	ldrb	r1, [r3, #1]
 800a9e6:	2921      	cmp	r1, #33	; 0x21
 800a9e8:	bf0a      	itet	eq
 800a9ea:	2601      	moveq	r6, #1
 800a9ec:	2600      	movne	r6, #0
 800a9ee:	1c9c      	addeq	r4, r3, #2
 800a9f0:	4621      	mov	r1, r4
 800a9f2:	780b      	ldrb	r3, [r1, #0]
 800a9f4:	3401      	adds	r4, #1
 800a9f6:	b1c3      	cbz	r3, 800aa2a <lo_pattern_match+0xe2>
 800a9f8:	7848      	ldrb	r0, [r1, #1]
 800a9fa:	2800      	cmp	r0, #0
 800a9fc:	d04e      	beq.n	800aa9c <lo_pattern_match+0x154>
 800a9fe:	282d      	cmp	r0, #45	; 0x2d
 800aa00:	d11c      	bne.n	800aa3c <lo_pattern_match+0xf4>
 800aa02:	7888      	ldrb	r0, [r1, #2]
 800aa04:	1c8c      	adds	r4, r1, #2
 800aa06:	2800      	cmp	r0, #0
 800aa08:	d048      	beq.n	800aa9c <lo_pattern_match+0x154>
 800aa0a:	285d      	cmp	r0, #93	; 0x5d
 800aa0c:	d009      	beq.n	800aa22 <lo_pattern_match+0xda>
 800aa0e:	429a      	cmp	r2, r3
 800aa10:	d005      	beq.n	800aa1e <lo_pattern_match+0xd6>
 800aa12:	4290      	cmp	r0, r2
 800aa14:	d003      	beq.n	800aa1e <lo_pattern_match+0xd6>
 800aa16:	429a      	cmp	r2, r3
 800aa18:	d9ea      	bls.n	800a9f0 <lo_pattern_match+0xa8>
 800aa1a:	4290      	cmp	r0, r2
 800aa1c:	d9e8      	bls.n	800a9f0 <lo_pattern_match+0xa8>
 800aa1e:	2301      	movs	r3, #1
 800aa20:	e003      	b.n	800aa2a <lo_pattern_match+0xe2>
 800aa22:	429a      	cmp	r2, r3
 800aa24:	bf34      	ite	cc
 800aa26:	2300      	movcc	r3, #0
 800aa28:	2301      	movcs	r3, #1
 800aa2a:	429e      	cmp	r6, r3
 800aa2c:	d0cc      	beq.n	800a9c8 <lo_pattern_match+0x80>
 800aa2e:	f814 0b01 	ldrb.w	r0, [r4], #1
 800aa32:	2800      	cmp	r0, #0
 800aa34:	d032      	beq.n	800aa9c <lo_pattern_match+0x154>
 800aa36:	285d      	cmp	r0, #93	; 0x5d
 800aa38:	d1f9      	bne.n	800aa2e <lo_pattern_match+0xe6>
 800aa3a:	e7d0      	b.n	800a9de <lo_pattern_match+0x96>
 800aa3c:	285d      	cmp	r0, #93	; 0x5d
 800aa3e:	d103      	bne.n	800aa48 <lo_pattern_match+0x100>
 800aa40:	1ad2      	subs	r2, r2, r3
 800aa42:	4253      	negs	r3, r2
 800aa44:	4153      	adcs	r3, r2
 800aa46:	e7f0      	b.n	800aa2a <lo_pattern_match+0xe2>
 800aa48:	4290      	cmp	r0, r2
 800aa4a:	d0e8      	beq.n	800aa1e <lo_pattern_match+0xd6>
 800aa4c:	429a      	cmp	r2, r3
 800aa4e:	d1cf      	bne.n	800a9f0 <lo_pattern_match+0xa8>
 800aa50:	e7e5      	b.n	800aa1e <lo_pattern_match+0xd6>
 800aa52:	463c      	mov	r4, r7
 800aa54:	e793      	b.n	800a97e <lo_pattern_match+0x36>
 800aa56:	2b2c      	cmp	r3, #44	; 0x2c
 800aa58:	d10f      	bne.n	800aa7a <lo_pattern_match+0x132>
 800aa5a:	4639      	mov	r1, r7
 800aa5c:	f7ff ff74 	bl	800a948 <lo_pattern_match>
 800aa60:	2800      	cmp	r0, #0
 800aa62:	d1b8      	bne.n	800a9d6 <lo_pattern_match+0x8e>
 800aa64:	f814 3b01 	ldrb.w	r3, [r4], #1
 800aa68:	b1c3      	cbz	r3, 800aa9c <lo_pattern_match+0x154>
 800aa6a:	462a      	mov	r2, r5
 800aa6c:	4610      	mov	r0, r2
 800aa6e:	f814 3b01 	ldrb.w	r3, [r4], #1
 800aa72:	2b00      	cmp	r3, #0
 800aa74:	d1ef      	bne.n	800aa56 <lo_pattern_match+0x10e>
 800aa76:	4605      	mov	r5, r0
 800aa78:	e7b1      	b.n	800a9de <lo_pattern_match+0x96>
 800aa7a:	2b7d      	cmp	r3, #125	; 0x7d
 800aa7c:	7802      	ldrb	r2, [r0, #0]
 800aa7e:	d104      	bne.n	800aa8a <lo_pattern_match+0x142>
 800aa80:	7823      	ldrb	r3, [r4, #0]
 800aa82:	431a      	orrs	r2, r3
 800aa84:	d0a7      	beq.n	800a9d6 <lo_pattern_match+0x8e>
 800aa86:	1e45      	subs	r5, r0, #1
 800aa88:	e7a9      	b.n	800a9de <lo_pattern_match+0x96>
 800aa8a:	4293      	cmp	r3, r2
 800aa8c:	d107      	bne.n	800aa9e <lo_pattern_match+0x156>
 800aa8e:	1c42      	adds	r2, r0, #1
 800aa90:	7840      	ldrb	r0, [r0, #1]
 800aa92:	2800      	cmp	r0, #0
 800aa94:	d1ea      	bne.n	800aa6c <lo_pattern_match+0x124>
 800aa96:	7873      	ldrb	r3, [r6, #1]
 800aa98:	2b00      	cmp	r3, #0
 800aa9a:	d0e7      	beq.n	800aa6c <lo_pattern_match+0x124>
 800aa9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aa9e:	4623      	mov	r3, r4
 800aaa0:	781a      	ldrb	r2, [r3, #0]
 800aaa2:	461c      	mov	r4, r3
 800aaa4:	2a2c      	cmp	r2, #44	; 0x2c
 800aaa6:	f103 0301 	add.w	r3, r3, #1
 800aaaa:	d004      	beq.n	800aab6 <lo_pattern_match+0x16e>
 800aaac:	2a7d      	cmp	r2, #125	; 0x7d
 800aaae:	d08b      	beq.n	800a9c8 <lo_pattern_match+0x80>
 800aab0:	2a00      	cmp	r2, #0
 800aab2:	d1f5      	bne.n	800aaa0 <lo_pattern_match+0x158>
 800aab4:	e7d9      	b.n	800aa6a <lo_pattern_match+0x122>
 800aab6:	461c      	mov	r4, r3
 800aab8:	e7d7      	b.n	800aa6a <lo_pattern_match+0x122>

0800aaba <osc::string_validate(void*, unsigned int)>:
 800aaba:	b510      	push	{r4, lr}
 800aabc:	2200      	movs	r2, #0
 800aabe:	4604      	mov	r4, r0
 800aac0:	428a      	cmp	r2, r1
 800aac2:	d005      	beq.n	800aad0 <osc::string_validate(void*, unsigned int)+0x16>
 800aac4:	5ca3      	ldrb	r3, [r4, r2]
 800aac6:	b933      	cbnz	r3, 800aad6 <osc::string_validate(void*, unsigned int)+0x1c>
 800aac8:	f022 0303 	bic.w	r3, r2, #3
 800aacc:	1d18      	adds	r0, r3, #4
 800aace:	d104      	bne.n	800aada <osc::string_validate(void*, unsigned int)+0x20>
 800aad0:	f06f 0001 	mvn.w	r0, #1
 800aad4:	e00b      	b.n	800aaee <osc::string_validate(void*, unsigned int)+0x34>
 800aad6:	3201      	adds	r2, #1
 800aad8:	e7f2      	b.n	800aac0 <osc::string_validate(void*, unsigned int)+0x6>
 800aada:	4281      	cmp	r1, r0
 800aadc:	d205      	bcs.n	800aaea <osc::string_validate(void*, unsigned int)+0x30>
 800aade:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800aae2:	e004      	b.n	800aaee <osc::string_validate(void*, unsigned int)+0x34>
 800aae4:	5ca3      	ldrb	r3, [r4, r2]
 800aae6:	b91b      	cbnz	r3, 800aaf0 <osc::string_validate(void*, unsigned int)+0x36>
 800aae8:	3201      	adds	r2, #1
 800aaea:	4282      	cmp	r2, r0
 800aaec:	d3fa      	bcc.n	800aae4 <osc::string_validate(void*, unsigned int)+0x2a>
 800aaee:	bd10      	pop	{r4, pc}
 800aaf0:	f06f 0002 	mvn.w	r0, #2
 800aaf4:	e7fb      	b.n	800aaee <osc::string_validate(void*, unsigned int)+0x34>

0800aaf6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800aaf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aafa:	2300      	movs	r3, #0
 800aafc:	460d      	mov	r5, r1
 800aafe:	e9c0 1200 	strd	r1, r2, [r0]
 800ab02:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ab06:	7203      	strb	r3, [r0, #8]
 800ab08:	6183      	str	r3, [r0, #24]
 800ab0a:	4604      	mov	r4, r0
 800ab0c:	4611      	mov	r1, r2
 800ab0e:	4628      	mov	r0, r5
 800ab10:	4617      	mov	r7, r2
 800ab12:	f7ff ffd2 	bl	800aaba <osc::string_validate(void*, unsigned int)>
 800ab16:	f1b0 0800 	subs.w	r8, r0, #0
 800ab1a:	db25      	blt.n	800ab68 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab1c:	eb05 0608 	add.w	r6, r5, r8
 800ab20:	4630      	mov	r0, r6
 800ab22:	60e6      	str	r6, [r4, #12]
 800ab24:	eba7 0108 	sub.w	r1, r7, r8
 800ab28:	f7ff ffc7 	bl	800aaba <osc::string_validate(void*, unsigned int)>
 800ab2c:	2800      	cmp	r0, #0
 800ab2e:	db1b      	blt.n	800ab68 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab30:	f815 3008 	ldrb.w	r3, [r5, r8]
 800ab34:	2b2c      	cmp	r3, #44	; 0x2c
 800ab36:	d117      	bne.n	800ab68 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab38:	7873      	ldrb	r3, [r6, #1]
 800ab3a:	2b73      	cmp	r3, #115	; 0x73
 800ab3c:	d001      	beq.n	800ab42 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 800ab3e:	2b62      	cmp	r3, #98	; 0x62
 800ab40:	d101      	bne.n	800ab46 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 800ab42:	78b3      	ldrb	r3, [r6, #2]
 800ab44:	b983      	cbnz	r3, 800ab68 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800ab46:	3601      	adds	r6, #1
 800ab48:	4632      	mov	r2, r6
 800ab4a:	60e6      	str	r6, [r4, #12]
 800ab4c:	4613      	mov	r3, r2
 800ab4e:	7819      	ldrb	r1, [r3, #0]
 800ab50:	3201      	adds	r2, #1
 800ab52:	2900      	cmp	r1, #0
 800ab54:	d1fa      	bne.n	800ab4c <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800ab56:	1b9b      	subs	r3, r3, r6
 800ab58:	6123      	str	r3, [r4, #16]
 800ab5a:	2301      	movs	r3, #1
 800ab5c:	4440      	add	r0, r8
 800ab5e:	4405      	add	r5, r0
 800ab60:	1a3f      	subs	r7, r7, r0
 800ab62:	6165      	str	r5, [r4, #20]
 800ab64:	61a7      	str	r7, [r4, #24]
 800ab66:	7223      	strb	r3, [r4, #8]
 800ab68:	4620      	mov	r0, r4
 800ab6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab6e <OscSimpleMessage::GetFloat(unsigned int)>:
 800ab6e:	b510      	push	{r4, lr}
 800ab70:	6984      	ldr	r4, [r0, #24]
 800ab72:	1c4b      	adds	r3, r1, #1
 800ab74:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800ab78:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800ab7c:	d309      	bcc.n	800ab92 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800ab7e:	68c3      	ldr	r3, [r0, #12]
 800ab80:	5c5b      	ldrb	r3, [r3, r1]
 800ab82:	2b66      	cmp	r3, #102	; 0x66
 800ab84:	d105      	bne.n	800ab92 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800ab86:	6943      	ldr	r3, [r0, #20]
 800ab88:	4413      	add	r3, r2
 800ab8a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800ab8e:	ba00      	rev	r0, r0
 800ab90:	bd10      	pop	{r4, pc}
 800ab92:	2000      	movs	r0, #0
 800ab94:	e7fc      	b.n	800ab90 <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800ab96 <OscSimpleMessage::GetInt(unsigned int)>:
 800ab96:	b510      	push	{r4, lr}
 800ab98:	6984      	ldr	r4, [r0, #24]
 800ab9a:	1c4b      	adds	r3, r1, #1
 800ab9c:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800aba0:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800aba4:	d309      	bcc.n	800abba <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800aba6:	68c3      	ldr	r3, [r0, #12]
 800aba8:	5c5b      	ldrb	r3, [r3, r1]
 800abaa:	2b69      	cmp	r3, #105	; 0x69
 800abac:	d105      	bne.n	800abba <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800abae:	6943      	ldr	r3, [r0, #20]
 800abb0:	4413      	add	r3, r2
 800abb2:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800abb6:	ba00      	rev	r0, r0
 800abb8:	bd10      	pop	{r4, pc}
 800abba:	2000      	movs	r0, #0
 800abbc:	e7fc      	b.n	800abb8 <OscSimpleMessage::GetInt(unsigned int)+0x22>

0800abbe <OscSimpleMessage::GetBlob(unsigned int)>:
 800abbe:	b510      	push	{r4, lr}
 800abc0:	68cb      	ldr	r3, [r1, #12]
 800abc2:	781b      	ldrb	r3, [r3, #0]
 800abc4:	2b62      	cmp	r3, #98	; 0x62
 800abc6:	d10a      	bne.n	800abde <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800abc8:	694a      	ldr	r2, [r1, #20]
 800abca:	6989      	ldr	r1, [r1, #24]
 800abcc:	6813      	ldr	r3, [r2, #0]
 800abce:	ba1b      	rev	r3, r3
 800abd0:	1d1c      	adds	r4, r3, #4
 800abd2:	428c      	cmp	r4, r1
 800abd4:	d803      	bhi.n	800abde <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800abd6:	3204      	adds	r2, #4
 800abd8:	6002      	str	r2, [r0, #0]
 800abda:	6043      	str	r3, [r0, #4]
 800abdc:	bd10      	pop	{r4, pc}
 800abde:	2300      	movs	r3, #0
 800abe0:	6003      	str	r3, [r0, #0]
 800abe2:	e7fa      	b.n	800abda <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

0800abe4 <osc::string_size(char const*)>:
 800abe4:	4602      	mov	r2, r0
 800abe6:	4613      	mov	r3, r2
 800abe8:	7819      	ldrb	r1, [r3, #0]
 800abea:	3201      	adds	r2, #1
 800abec:	2900      	cmp	r1, #0
 800abee:	d1fa      	bne.n	800abe6 <osc::string_size(char const*)+0x2>
 800abf0:	1a18      	subs	r0, r3, r0
 800abf2:	f020 0003 	bic.w	r0, r0, #3
 800abf6:	3004      	adds	r0, #4
 800abf8:	4770      	bx	lr
	...

0800abfc <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 800abfc:	b570      	push	{r4, r5, r6, lr}
 800abfe:	2400      	movs	r4, #0
 800ac00:	480a      	ldr	r0, [pc, #40]	; (800ac2c <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 800ac02:	1f16      	subs	r6, r2, #4
 800ac04:	1985      	adds	r5, r0, r6
 800ac06:	5584      	strb	r4, [r0, r6]
 800ac08:	706c      	strb	r4, [r5, #1]
 800ac0a:	70ac      	strb	r4, [r5, #2]
 800ac0c:	70ec      	strb	r4, [r5, #3]
 800ac0e:	4604      	mov	r4, r0
 800ac10:	f811 5b01 	ldrb.w	r5, [r1], #1
 800ac14:	f800 5b01 	strb.w	r5, [r0], #1
 800ac18:	2d00      	cmp	r5, #0
 800ac1a:	d1f9      	bne.n	800ac10 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 800ac1c:	212c      	movs	r1, #44	; 0x2c
 800ac1e:	54a1      	strb	r1, [r4, r2]
 800ac20:	4422      	add	r2, r4
 800ac22:	7053      	strb	r3, [r2, #1]
 800ac24:	7095      	strb	r5, [r2, #2]
 800ac26:	70d5      	strb	r5, [r2, #3]
 800ac28:	bd70      	pop	{r4, r5, r6, pc}
 800ac2a:	bf00      	nop
 800ac2c:	20000a68 	andcs	r0, r0, r8, ror #20

0800ac30 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 800ac30:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ac34:	4605      	mov	r5, r0
 800ac36:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800ac3a:	460e      	mov	r6, r1
 800ac3c:	4617      	mov	r7, r2
 800ac3e:	4698      	mov	r8, r3
 800ac40:	f1ba 0f00 	cmp.w	sl, #0
 800ac44:	d112      	bne.n	800ac6c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800ac46:	4648      	mov	r0, r9
 800ac48:	f7ff ffcc 	bl	800abe4 <osc::string_size(char const*)>
 800ac4c:	4604      	mov	r4, r0
 800ac4e:	4602      	mov	r2, r0
 800ac50:	4653      	mov	r3, sl
 800ac52:	4649      	mov	r1, r9
 800ac54:	4628      	mov	r0, r5
 800ac56:	3404      	adds	r4, #4
 800ac58:	f7ff ffd0 	bl	800abfc <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800ac5c:	463b      	mov	r3, r7
 800ac5e:	4905      	ldr	r1, [pc, #20]	; (800ac74 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 800ac60:	f8cd 8000 	str.w	r8, [sp]
 800ac64:	b2a2      	uxth	r2, r4
 800ac66:	b2f0      	uxtb	r0, r6
 800ac68:	f001 f992 	bl	800bf90 <udp_send>
 800ac6c:	4628      	mov	r0, r5
 800ac6e:	b002      	add	sp, #8
 800ac70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac74:	20000a68 	andcs	r0, r0, r8, ror #20

0800ac78 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800ac78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac7c:	b085      	sub	sp, #20
 800ac7e:	460f      	mov	r7, r1
 800ac80:	4699      	mov	r9, r3
 800ac82:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800ac86:	4606      	mov	r6, r0
 800ac88:	4690      	mov	r8, r2
 800ac8a:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800ac8e:	b35b      	cbz	r3, 800ace8 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800ac90:	781b      	ldrb	r3, [r3, #0]
 800ac92:	2b73      	cmp	r3, #115	; 0x73
 800ac94:	d128      	bne.n	800ace8 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800ac96:	4608      	mov	r0, r1
 800ac98:	9303      	str	r3, [sp, #12]
 800ac9a:	f7ff ffa3 	bl	800abe4 <osc::string_size(char const*)>
 800ac9e:	4604      	mov	r4, r0
 800aca0:	4650      	mov	r0, sl
 800aca2:	f7ff ff9f 	bl	800abe4 <osc::string_size(char const*)>
 800aca6:	4622      	mov	r2, r4
 800aca8:	1825      	adds	r5, r4, r0
 800acaa:	9b03      	ldr	r3, [sp, #12]
 800acac:	990e      	ldr	r1, [sp, #56]	; 0x38
 800acae:	4630      	mov	r0, r6
 800acb0:	f7ff ffa4 	bl	800abfc <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 800acb4:	2200      	movs	r2, #0
 800acb6:	4b0e      	ldr	r3, [pc, #56]	; (800acf0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800acb8:	3403      	adds	r4, #3
 800acba:	1959      	adds	r1, r3, r5
 800acbc:	555a      	strb	r2, [r3, r5]
 800acbe:	f105 0b04 	add.w	fp, r5, #4
 800acc2:	704a      	strb	r2, [r1, #1]
 800acc4:	708a      	strb	r2, [r1, #2]
 800acc6:	70ca      	strb	r2, [r1, #3]
 800acc8:	4423      	add	r3, r4
 800acca:	f81a 2b01 	ldrb.w	r2, [sl], #1
 800acce:	f803 2f01 	strb.w	r2, [r3, #1]!
 800acd2:	2a00      	cmp	r2, #0
 800acd4:	d1f9      	bne.n	800acca <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800acd6:	4643      	mov	r3, r8
 800acd8:	4905      	ldr	r1, [pc, #20]	; (800acf0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800acda:	f8cd 9000 	str.w	r9, [sp]
 800acde:	fa1f f28b 	uxth.w	r2, fp
 800ace2:	b2f8      	uxtb	r0, r7
 800ace4:	f001 f954 	bl	800bf90 <udp_send>
 800ace8:	4630      	mov	r0, r6
 800acea:	b005      	add	sp, #20
 800acec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acf0:	20000a68 	andcs	r0, r0, r8, ror #20

0800acf4 <DmxSend::~DmxSend()>:
 800acf4:	4770      	bx	lr
	...

0800acf8 <DmxSend::Start(unsigned int)>:
 800acf8:	2301      	movs	r3, #1
 800acfa:	b430      	push	{r4, r5}
 800acfc:	4c08      	ldr	r4, [pc, #32]	; (800ad20 <DmxSend::Start(unsigned int)+0x28>)
 800acfe:	fa03 f001 	lsl.w	r0, r3, r1
 800ad02:	7822      	ldrb	r2, [r4, #0]
 800ad04:	ea30 0502 	bics.w	r5, r0, r2
 800ad08:	d007      	beq.n	800ad1a <DmxSend::Start(unsigned int)+0x22>
 800ad0a:	4302      	orrs	r2, r0
 800ad0c:	4805      	ldr	r0, [pc, #20]	; (800ad24 <DmxSend::Start(unsigned int)+0x2c>)
 800ad0e:	7022      	strb	r2, [r4, #0]
 800ad10:	6800      	ldr	r0, [r0, #0]
 800ad12:	2200      	movs	r2, #0
 800ad14:	bc30      	pop	{r4, r5}
 800ad16:	f000 bc99 	b.w	800b64c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800ad1a:	bc30      	pop	{r4, r5}
 800ad1c:	4770      	bx	lr
 800ad1e:	bf00      	nop
 800ad20:	20000c68 	andcs	r0, r0, r8, ror #24
 800ad24:	20001098 	mulcs	r0, r8, r0

0800ad28 <DmxSend::Stop(unsigned int)>:
 800ad28:	2201      	movs	r2, #1
 800ad2a:	b410      	push	{r4}
 800ad2c:	4809      	ldr	r0, [pc, #36]	; (800ad54 <DmxSend::Stop(unsigned int)+0x2c>)
 800ad2e:	408a      	lsls	r2, r1
 800ad30:	7803      	ldrb	r3, [r0, #0]
 800ad32:	ea03 0402 	and.w	r4, r3, r2
 800ad36:	439a      	bics	r2, r3
 800ad38:	d109      	bne.n	800ad4e <DmxSend::Stop(unsigned int)+0x26>
 800ad3a:	ea23 0304 	bic.w	r3, r3, r4
 800ad3e:	7003      	strb	r3, [r0, #0]
 800ad40:	2300      	movs	r3, #0
 800ad42:	4805      	ldr	r0, [pc, #20]	; (800ad58 <DmxSend::Stop(unsigned int)+0x30>)
 800ad44:	461a      	mov	r2, r3
 800ad46:	6800      	ldr	r0, [r0, #0]
 800ad48:	bc10      	pop	{r4}
 800ad4a:	f000 bc7f 	b.w	800b64c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800ad4e:	bc10      	pop	{r4}
 800ad50:	4770      	bx	lr
 800ad52:	bf00      	nop
 800ad54:	20000c68 	andcs	r0, r0, r8, ror #24
 800ad58:	20001098 	mulcs	r0, r8, r0

0800ad5c <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800ad5c:	b11b      	cbz	r3, 800ad66 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800ad5e:	4802      	ldr	r0, [pc, #8]	; (800ad68 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800ad60:	6800      	ldr	r0, [r0, #0]
 800ad62:	f000 bdd3 	b.w	800b90c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800ad66:	4770      	bx	lr
 800ad68:	20001098 	mulcs	r0, r8, r0

0800ad6c <DmxSend::Blackout(bool)>:
 800ad6c:	4b01      	ldr	r3, [pc, #4]	; (800ad74 <DmxSend::Blackout(bool)+0x8>)
 800ad6e:	6818      	ldr	r0, [r3, #0]
 800ad70:	f000 bdf2 	b.w	800b958 <Dmx::Blackout()>
 800ad74:	20001098 	mulcs	r0, r8, r0

0800ad78 <DmxSend::FullOn()>:
 800ad78:	4b01      	ldr	r3, [pc, #4]	; (800ad80 <DmxSend::FullOn()+0x8>)
 800ad7a:	6818      	ldr	r0, [r3, #0]
 800ad7c:	f000 be14 	b.w	800b9a8 <Dmx::FullOn()>
 800ad80:	20001098 	mulcs	r0, r8, r0

0800ad84 <DmxSend::Print()>:
 800ad84:	b510      	push	{r4, lr}
 800ad86:	4c0e      	ldr	r4, [pc, #56]	; (800adc0 <DmxSend::Print()+0x3c>)
 800ad88:	480e      	ldr	r0, [pc, #56]	; (800adc4 <DmxSend::Print()+0x40>)
 800ad8a:	f7fd fd59 	bl	8008840 <printf>
 800ad8e:	6823      	ldr	r3, [r4, #0]
 800ad90:	480d      	ldr	r0, [pc, #52]	; (800adc8 <DmxSend::Print()+0x44>)
 800ad92:	6819      	ldr	r1, [r3, #0]
 800ad94:	f7fd fd54 	bl	8008840 <printf>
 800ad98:	6823      	ldr	r3, [r4, #0]
 800ad9a:	480c      	ldr	r0, [pc, #48]	; (800adcc <DmxSend::Print()+0x48>)
 800ad9c:	6859      	ldr	r1, [r3, #4]
 800ad9e:	f7fd fd4f 	bl	8008840 <printf>
 800ada2:	6823      	ldr	r3, [r4, #0]
 800ada4:	490a      	ldr	r1, [pc, #40]	; (800add0 <DmxSend::Print()+0x4c>)
 800ada6:	689b      	ldr	r3, [r3, #8]
 800ada8:	480a      	ldr	r0, [pc, #40]	; (800add4 <DmxSend::Print()+0x50>)
 800adaa:	fbb1 f1f3 	udiv	r1, r1, r3
 800adae:	f7fd fd47 	bl	8008840 <printf>
 800adb2:	6823      	ldr	r3, [r4, #0]
 800adb4:	4808      	ldr	r0, [pc, #32]	; (800add8 <DmxSend::Print()+0x54>)
 800adb6:	8a19      	ldrh	r1, [r3, #16]
 800adb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800adbc:	f7fd bd40 	b.w	8008840 <printf>
 800adc0:	20001098 	mulcs	r0, r8, r0
 800adc4:	080121e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sp}
 800adc8:	080121f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sp}
 800adcc:	08012205 	stmdaeq	r1, {r0, r2, r9, sp}
 800add0:	000f4240 	andeq	r4, pc, r0, asr #4
 800add4:	08012219 	stmdaeq	r1, {r0, r3, r4, r9, sp}
 800add8:	0801222d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp}

0800addc <DmxSend::~DmxSend()>:
 800addc:	b510      	push	{r4, lr}
 800adde:	4604      	mov	r4, r0
 800ade0:	f004 f838 	bl	800ee54 <operator delete(void*)>
 800ade4:	4620      	mov	r0, r4
 800ade6:	bd10      	pop	{r4, pc}

0800ade8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800ade8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800adea:	88c6      	ldrh	r6, [r0, #6]
 800adec:	8885      	ldrh	r5, [r0, #4]
 800adee:	42ae      	cmp	r6, r5
 800adf0:	d216      	bcs.n	800ae20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800adf2:	4604      	mov	r4, r0
 800adf4:	6800      	ldr	r0, [r0, #0]
 800adf6:	1bad      	subs	r5, r5, r6
 800adf8:	4430      	add	r0, r6
 800adfa:	7a26      	ldrb	r6, [r4, #8]
 800adfc:	b923      	cbnz	r3, 800ae08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800adfe:	b926      	cbnz	r6, 800ae0a <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800ae00:	9200      	str	r2, [sp, #0]
 800ae02:	460b      	mov	r3, r1
 800ae04:	4a09      	ldr	r2, [pc, #36]	; (800ae2c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800ae06:	e003      	b.n	800ae10 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ae08:	b166      	cbz	r6, 800ae24 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800ae0a:	460b      	mov	r3, r1
 800ae0c:	9200      	str	r2, [sp, #0]
 800ae0e:	4a08      	ldr	r2, [pc, #32]	; (800ae30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800ae10:	4629      	mov	r1, r5
 800ae12:	f7fd fd25 	bl	8008860 <snprintf>
 800ae16:	4285      	cmp	r5, r0
 800ae18:	bfa2      	ittt	ge
 800ae1a:	88e3      	ldrhge	r3, [r4, #6]
 800ae1c:	181b      	addge	r3, r3, r0
 800ae1e:	80e3      	strhge	r3, [r4, #6]
 800ae20:	b002      	add	sp, #8
 800ae22:	bd70      	pop	{r4, r5, r6, pc}
 800ae24:	9200      	str	r2, [sp, #0]
 800ae26:	460b      	mov	r3, r1
 800ae28:	4a02      	ldr	r2, [pc, #8]	; (800ae34 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ae2a:	e7f1      	b.n	800ae10 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800ae2c:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 800ae30:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 800ae34:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}

0800ae38 <DmxParams::DmxParams(DmxParamsStore*)>:
 800ae38:	6001      	str	r1, [r0, #0]
 800ae3a:	2100      	movs	r1, #0
 800ae3c:	4a03      	ldr	r2, [pc, #12]	; (800ae4c <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800ae3e:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800ae42:	f64f 7228 	movw	r2, #65320	; 0xff28
 800ae46:	8182      	strh	r2, [r0, #12]
 800ae48:	4770      	bx	lr
 800ae4a:	bf00      	nop
 800ae4c:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800ae50 <DmxParams::Load()>:
 800ae50:	b508      	push	{r3, lr}
 800ae52:	2300      	movs	r3, #0
 800ae54:	4601      	mov	r1, r0
 800ae56:	6043      	str	r3, [r0, #4]
 800ae58:	6800      	ldr	r0, [r0, #0]
 800ae5a:	b120      	cbz	r0, 800ae66 <DmxParams::Load()+0x16>
 800ae5c:	6803      	ldr	r3, [r0, #0]
 800ae5e:	3104      	adds	r1, #4
 800ae60:	68db      	ldr	r3, [r3, #12]
 800ae62:	4798      	blx	r3
 800ae64:	2001      	movs	r0, #1
 800ae66:	bd08      	pop	{r3, pc}

0800ae68 <DmxParams::Load(char const*, unsigned int)>:
 800ae68:	6803      	ldr	r3, [r0, #0]
 800ae6a:	b1d3      	cbz	r3, 800aea2 <DmxParams::Load(char const*, unsigned int)+0x3a>
 800ae6c:	2300      	movs	r3, #0
 800ae6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae70:	460d      	mov	r5, r1
 800ae72:	4616      	mov	r6, r2
 800ae74:	4604      	mov	r4, r0
 800ae76:	6043      	str	r3, [r0, #4]
 800ae78:	4602      	mov	r2, r0
 800ae7a:	490a      	ldr	r1, [pc, #40]	; (800aea4 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800ae7c:	4668      	mov	r0, sp
 800ae7e:	f003 fadd 	bl	800e43c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ae82:	4632      	mov	r2, r6
 800ae84:	4629      	mov	r1, r5
 800ae86:	4668      	mov	r0, sp
 800ae88:	f003 fadc 	bl	800e444 <ReadConfigFile::Read(char const*, unsigned int)>
 800ae8c:	4621      	mov	r1, r4
 800ae8e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ae92:	6803      	ldr	r3, [r0, #0]
 800ae94:	689b      	ldr	r3, [r3, #8]
 800ae96:	4798      	blx	r3
 800ae98:	4668      	mov	r0, sp
 800ae9a:	f003 fad2 	bl	800e442 <ReadConfigFile::~ReadConfigFile()>
 800ae9e:	b002      	add	sp, #8
 800aea0:	bd70      	pop	{r4, r5, r6, pc}
 800aea2:	4770      	bx	lr
 800aea4:	0800af75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp, pc}

0800aea8 <DmxParams::callbackFunction(char const*)>:
 800aea8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aeaa:	460d      	mov	r5, r1
 800aeac:	4604      	mov	r4, r0
 800aeae:	492d      	ldr	r1, [pc, #180]	; (800af64 <DmxParams::callbackFunction(char const*)+0xbc>)
 800aeb0:	4628      	mov	r0, r5
 800aeb2:	f10d 0206 	add.w	r2, sp, #6
 800aeb6:	f003 fb53 	bl	800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aeba:	b988      	cbnz	r0, 800aee0 <DmxParams::callbackFunction(char const*)+0x38>
 800aebc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aec0:	6863      	ldr	r3, [r4, #4]
 800aec2:	2a5b      	cmp	r2, #91	; 0x5b
 800aec4:	d907      	bls.n	800aed6 <DmxParams::callbackFunction(char const*)+0x2e>
 800aec6:	2ab0      	cmp	r2, #176	; 0xb0
 800aec8:	d005      	beq.n	800aed6 <DmxParams::callbackFunction(char const*)+0x2e>
 800aeca:	8122      	strh	r2, [r4, #8]
 800aecc:	f043 0301 	orr.w	r3, r3, #1
 800aed0:	6063      	str	r3, [r4, #4]
 800aed2:	b003      	add	sp, #12
 800aed4:	bd30      	pop	{r4, r5, pc}
 800aed6:	22b0      	movs	r2, #176	; 0xb0
 800aed8:	f023 0301 	bic.w	r3, r3, #1
 800aedc:	8122      	strh	r2, [r4, #8]
 800aede:	e7f7      	b.n	800aed0 <DmxParams::callbackFunction(char const*)+0x28>
 800aee0:	4628      	mov	r0, r5
 800aee2:	4921      	ldr	r1, [pc, #132]	; (800af68 <DmxParams::callbackFunction(char const*)+0xc0>)
 800aee4:	f10d 0206 	add.w	r2, sp, #6
 800aee8:	f003 fb3a 	bl	800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aeec:	b968      	cbnz	r0, 800af0a <DmxParams::callbackFunction(char const*)+0x62>
 800aeee:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aef2:	6863      	ldr	r3, [r4, #4]
 800aef4:	2a0c      	cmp	r2, #12
 800aef6:	bf93      	iteet	ls
 800aef8:	220c      	movls	r2, #12
 800aefa:	8162      	strhhi	r2, [r4, #10]
 800aefc:	f043 0302 	orrhi.w	r3, r3, #2
 800af00:	8162      	strhls	r2, [r4, #10]
 800af02:	bf98      	it	ls
 800af04:	f023 0302 	bicls.w	r3, r3, #2
 800af08:	e7e2      	b.n	800aed0 <DmxParams::callbackFunction(char const*)+0x28>
 800af0a:	4628      	mov	r0, r5
 800af0c:	4917      	ldr	r1, [pc, #92]	; (800af6c <DmxParams::callbackFunction(char const*)+0xc4>)
 800af0e:	f10d 0205 	add.w	r2, sp, #5
 800af12:	f003 fb43 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800af16:	b950      	cbnz	r0, 800af2e <DmxParams::callbackFunction(char const*)+0x86>
 800af18:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800af1c:	6863      	ldr	r3, [r4, #4]
 800af1e:	2a28      	cmp	r2, #40	; 0x28
 800af20:	7322      	strb	r2, [r4, #12]
 800af22:	bf14      	ite	ne
 800af24:	f043 0304 	orrne.w	r3, r3, #4
 800af28:	f023 0304 	biceq.w	r3, r3, #4
 800af2c:	e7d0      	b.n	800aed0 <DmxParams::callbackFunction(char const*)+0x28>
 800af2e:	4628      	mov	r0, r5
 800af30:	490f      	ldr	r1, [pc, #60]	; (800af70 <DmxParams::callbackFunction(char const*)+0xc8>)
 800af32:	f10d 0206 	add.w	r2, sp, #6
 800af36:	f003 fb13 	bl	800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800af3a:	2800      	cmp	r0, #0
 800af3c:	d1c9      	bne.n	800aed2 <DmxParams::callbackFunction(char const*)+0x2a>
 800af3e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800af42:	6863      	ldr	r3, [r4, #4]
 800af44:	1e91      	subs	r1, r2, #2
 800af46:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800af4a:	bf2f      	iteee	cs
 800af4c:	22ff      	movcs	r2, #255	; 0xff
 800af4e:	0852      	lsrcc	r2, r2, #1
 800af50:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800af54:	7362      	strbcc	r2, [r4, #13]
 800af56:	bf32      	itee	cc
 800af58:	f043 0308 	orrcc.w	r3, r3, #8
 800af5c:	7362      	strbcs	r2, [r4, #13]
 800af5e:	f023 0308 	biccs.w	r3, r3, #8
 800af62:	e7b5      	b.n	800aed0 <DmxParams::callbackFunction(char const*)+0x28>
 800af64:	0801227c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sp}
 800af68:	080122a0 	stmdaeq	r1, {r5, r7, r9, sp}
 800af6c:	08012293 	stmdaeq	r1, {r0, r1, r4, r7, r9, sp}
 800af70:	08012287 	stmdaeq	r1, {r0, r1, r2, r7, r9, sp}

0800af74 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800af74:	f7ff bf98 	b.w	800aea8 <DmxParams::callbackFunction(char const*)>

0800af78 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800af78:	b570      	push	{r4, r5, r6, lr}
 800af7a:	4604      	mov	r4, r0
 800af7c:	4615      	mov	r5, r2
 800af7e:	461e      	mov	r6, r3
 800af80:	b086      	sub	sp, #24
 800af82:	3004      	adds	r0, #4
 800af84:	b369      	cbz	r1, 800afe2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800af86:	220a      	movs	r2, #10
 800af88:	f003 ffff 	bl	800ef8a <memmove>
 800af8c:	462a      	mov	r2, r5
 800af8e:	4633      	mov	r3, r6
 800af90:	4932      	ldr	r1, [pc, #200]	; (800b05c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800af92:	a803      	add	r0, sp, #12
 800af94:	f003 f9b2 	bl	800e2fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800af98:	6863      	ldr	r3, [r4, #4]
 800af9a:	8922      	ldrh	r2, [r4, #8]
 800af9c:	4930      	ldr	r1, [pc, #192]	; (800b060 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800af9e:	f003 0301 	and.w	r3, r3, #1
 800afa2:	a803      	add	r0, sp, #12
 800afa4:	f7ff ff20 	bl	800ade8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800afa8:	6863      	ldr	r3, [r4, #4]
 800afaa:	8962      	ldrh	r2, [r4, #10]
 800afac:	492d      	ldr	r1, [pc, #180]	; (800b064 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800afae:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800afb2:	a803      	add	r0, sp, #12
 800afb4:	f7ff ff18 	bl	800ade8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800afb8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800afbc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800afc0:	7b23      	ldrb	r3, [r4, #12]
 800afc2:	42aa      	cmp	r2, r5
 800afc4:	6861      	ldr	r1, [r4, #4]
 800afc6:	d221      	bcs.n	800b00c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800afc8:	9803      	ldr	r0, [sp, #12]
 800afca:	0749      	lsls	r1, r1, #29
 800afcc:	4410      	add	r0, r2
 800afce:	eba5 0502 	sub.w	r5, r5, r2
 800afd2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800afd6:	d40b      	bmi.n	800aff0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800afd8:	b95a      	cbnz	r2, 800aff2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800afda:	9300      	str	r3, [sp, #0]
 800afdc:	4a22      	ldr	r2, [pc, #136]	; (800b068 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800afde:	4b23      	ldr	r3, [pc, #140]	; (800b06c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800afe0:	e00a      	b.n	800aff8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800afe2:	6823      	ldr	r3, [r4, #0]
 800afe4:	4601      	mov	r1, r0
 800afe6:	681a      	ldr	r2, [r3, #0]
 800afe8:	4618      	mov	r0, r3
 800afea:	68d2      	ldr	r2, [r2, #12]
 800afec:	4790      	blx	r2
 800afee:	e7cd      	b.n	800af8c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800aff0:	b37a      	cbz	r2, 800b052 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800aff2:	9300      	str	r3, [sp, #0]
 800aff4:	4a1e      	ldr	r2, [pc, #120]	; (800b070 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800aff6:	4b1d      	ldr	r3, [pc, #116]	; (800b06c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800aff8:	4629      	mov	r1, r5
 800affa:	f7fd fc31 	bl	8008860 <snprintf>
 800affe:	4285      	cmp	r5, r0
 800b000:	bfa2      	ittt	ge
 800b002:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b006:	18c0      	addge	r0, r0, r3
 800b008:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b00c:	7b62      	ldrb	r2, [r4, #13]
 800b00e:	6863      	ldr	r3, [r4, #4]
 800b010:	3201      	adds	r2, #1
 800b012:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800b016:	4917      	ldr	r1, [pc, #92]	; (800b074 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800b018:	0052      	lsls	r2, r2, #1
 800b01a:	a803      	add	r0, sp, #12
 800b01c:	f7ff fee4 	bl	800ade8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800b020:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b024:	b17b      	cbz	r3, 800b046 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800b026:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b02a:	9b03      	ldr	r3, [sp, #12]
 800b02c:	4413      	add	r3, r2
 800b02e:	227d      	movs	r2, #125	; 0x7d
 800b030:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b034:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b038:	9903      	ldr	r1, [sp, #12]
 800b03a:	54ca      	strb	r2, [r1, r3]
 800b03c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b040:	3301      	adds	r3, #1
 800b042:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b046:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b04a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b04c:	601a      	str	r2, [r3, #0]
 800b04e:	b006      	add	sp, #24
 800b050:	bd70      	pop	{r4, r5, r6, pc}
 800b052:	9300      	str	r3, [sp, #0]
 800b054:	4a08      	ldr	r2, [pc, #32]	; (800b078 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800b056:	4b05      	ldr	r3, [pc, #20]	; (800b06c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800b058:	e7ce      	b.n	800aff8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800b05a:	bf00      	nop
 800b05c:	080122a9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sp}
 800b060:	0801227c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sp}
 800b064:	080122a0 	stmdaeq	r1, {r5, r7, r9, sp}
 800b068:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 800b06c:	08012293 	stmdaeq	r1, {r0, r1, r4, r7, r9, sp}
 800b070:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 800b074:	08012287 	stmdaeq	r1, {r0, r1, r2, r7, r9, sp}
 800b078:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}

0800b07c <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800b07c:	b513      	push	{r0, r1, r4, lr}
 800b07e:	6804      	ldr	r4, [r0, #0]
 800b080:	b914      	cbnz	r4, 800b088 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800b082:	601c      	str	r4, [r3, #0]
 800b084:	b002      	add	sp, #8
 800b086:	bd10      	pop	{r4, pc}
 800b088:	9300      	str	r3, [sp, #0]
 800b08a:	4613      	mov	r3, r2
 800b08c:	460a      	mov	r2, r1
 800b08e:	2100      	movs	r1, #0
 800b090:	f7ff ff72 	bl	800af78 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800b094:	e7f6      	b.n	800b084 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800b098 <DmxParams::Set(Dmx*)>:
 800b098:	b538      	push	{r3, r4, r5, lr}
 800b09a:	6843      	ldr	r3, [r0, #4]
 800b09c:	4604      	mov	r4, r0
 800b09e:	07d8      	lsls	r0, r3, #31
 800b0a0:	460d      	mov	r5, r1
 800b0a2:	d503      	bpl.n	800b0ac <DmxParams::Set(Dmx*)+0x14>
 800b0a4:	4628      	mov	r0, r5
 800b0a6:	8921      	ldrh	r1, [r4, #8]
 800b0a8:	f000 fc0c 	bl	800b8c4 <Dmx::SetDmxBreakTime(unsigned int)>
 800b0ac:	6863      	ldr	r3, [r4, #4]
 800b0ae:	0799      	lsls	r1, r3, #30
 800b0b0:	d503      	bpl.n	800b0ba <DmxParams::Set(Dmx*)+0x22>
 800b0b2:	4628      	mov	r0, r5
 800b0b4:	8961      	ldrh	r1, [r4, #10]
 800b0b6:	f000 fc0f 	bl	800b8d8 <Dmx::SetDmxMabTime(unsigned int)>
 800b0ba:	6863      	ldr	r3, [r4, #4]
 800b0bc:	075a      	lsls	r2, r3, #29
 800b0be:	d507      	bpl.n	800b0d0 <DmxParams::Set(Dmx*)+0x38>
 800b0c0:	7b21      	ldrb	r1, [r4, #12]
 800b0c2:	b111      	cbz	r1, 800b0ca <DmxParams::Set(Dmx*)+0x32>
 800b0c4:	4b08      	ldr	r3, [pc, #32]	; (800b0e8 <DmxParams::Set(Dmx*)+0x50>)
 800b0c6:	fbb3 f1f1 	udiv	r1, r3, r1
 800b0ca:	4628      	mov	r0, r5
 800b0cc:	f000 fbca 	bl	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b0d0:	6863      	ldr	r3, [r4, #4]
 800b0d2:	071b      	lsls	r3, r3, #28
 800b0d4:	d507      	bpl.n	800b0e6 <DmxParams::Set(Dmx*)+0x4e>
 800b0d6:	7b61      	ldrb	r1, [r4, #13]
 800b0d8:	4628      	mov	r0, r5
 800b0da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b0de:	3101      	adds	r1, #1
 800b0e0:	0049      	lsls	r1, r1, #1
 800b0e2:	f000 bc03 	b.w	800b8ec <Dmx::SetDmxSlots(unsigned short)>
 800b0e6:	bd38      	pop	{r3, r4, r5, pc}
 800b0e8:	000f4240 	andeq	r4, pc, r0, asr #4

0800b0ec <DmxParams::Dump()>:
 800b0ec:	4770      	bx	lr
	...

0800b0f0 <USART2_IRQHandler>:
 800b0f0:	b510      	push	{r4, lr}
 800b0f2:	2408      	movs	r4, #8
 800b0f4:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 800b0f8:	4975      	ldr	r1, [pc, #468]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b0fa:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 800b0fe:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 800b102:	f013 0f02 	tst.w	r3, #2
 800b106:	4b73      	ldr	r3, [pc, #460]	; (800b2d4 <USART2_IRQHandler+0x1e4>)
 800b108:	d018      	beq.n	800b13c <USART2_IRQHandler+0x4c>
 800b10a:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 800b10e:	f020 0002 	bic.w	r0, r0, #2
 800b112:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 800b116:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b11a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b11e:	b962      	cbnz	r2, 800b13a <USART2_IRQHandler+0x4a>
 800b120:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b124:	2201      	movs	r2, #1
 800b126:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b12a:	2310      	movs	r3, #16
 800b12c:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 800b130:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b134:	2320      	movs	r3, #32
 800b136:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 800b13a:	bd10      	pop	{r4, pc}
 800b13c:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 800b140:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 800b144:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b148:	2807      	cmp	r0, #7
 800b14a:	f200 80bc 	bhi.w	800b2c6 <USART2_IRQHandler+0x1d6>
 800b14e:	e8df f000 	tbb	[pc, r0]
 800b152:	41ba1804 			; <UNDEFINED> instruction: 0x41ba1804
 800b156:	a1807056 	orrge	r7, r0, r6, asr r0
 800b15a:	701a      	strb	r2, [r3, #0]
 800b15c:	2107      	movs	r1, #7
 800b15e:	2201      	movs	r2, #1
 800b160:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b164:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b168:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b16c:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 800b170:	4a59      	ldr	r2, [pc, #356]	; (800b2d8 <USART2_IRQHandler+0x1e8>)
 800b172:	b29b      	uxth	r3, r3
 800b174:	8193      	strh	r3, [r2, #12]
 800b176:	2210      	movs	r2, #16
 800b178:	4b55      	ldr	r3, [pc, #340]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b17a:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b17e:	2220      	movs	r2, #32
 800b180:	e017      	b.n	800b1b2 <USART2_IRQHandler+0xc2>
 800b182:	b11a      	cbz	r2, 800b18c <USART2_IRQHandler+0x9c>
 800b184:	2acc      	cmp	r2, #204	; 0xcc
 800b186:	d01b      	beq.n	800b1c0 <USART2_IRQHandler+0xd0>
 800b188:	2200      	movs	r2, #0
 800b18a:	e05f      	b.n	800b24c <USART2_IRQHandler+0x15c>
 800b18c:	701a      	strb	r2, [r3, #0]
 800b18e:	2201      	movs	r2, #1
 800b190:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b194:	4a50      	ldr	r2, [pc, #320]	; (800b2d8 <USART2_IRQHandler+0x1e8>)
 800b196:	6851      	ldr	r1, [r2, #4]
 800b198:	3101      	adds	r1, #1
 800b19a:	6051      	str	r1, [r2, #4]
 800b19c:	2103      	movs	r1, #3
 800b19e:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800b1a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b1a6:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 800b1aa:	b29b      	uxth	r3, r3
 800b1ac:	8193      	strh	r3, [r2, #12]
 800b1ae:	2210      	movs	r2, #16
 800b1b0:	4b47      	ldr	r3, [pc, #284]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b1b2:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b1b6:	2208      	movs	r2, #8
 800b1b8:	4b45      	ldr	r3, [pc, #276]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b1ba:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b1be:	e7bc      	b.n	800b13a <USART2_IRQHandler+0x4a>
 800b1c0:	701a      	strb	r2, [r3, #0]
 800b1c2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b1c6:	2201      	movs	r2, #1
 800b1c8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1cc:	2204      	movs	r2, #4
 800b1ce:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1d2:	e7ec      	b.n	800b1ae <USART2_IRQHandler+0xbe>
 800b1d4:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b1d8:	545a      	strb	r2, [r3, r1]
 800b1da:	1c4a      	adds	r2, r1, #1
 800b1dc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800b1e0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1e4:	d95e      	bls.n	800b2a4 <USART2_IRQHandler+0x1b4>
 800b1e6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b1ea:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b1ee:	2200      	movs	r2, #0
 800b1f0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b1f4:	2210      	movs	r2, #16
 800b1f6:	4b36      	ldr	r3, [pc, #216]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b1f8:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b1fc:	e7db      	b.n	800b1b6 <USART2_IRQHandler+0xc6>
 800b1fe:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b202:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 800b206:	545a      	strb	r2, [r3, r1]
 800b208:	1c48      	adds	r0, r1, #1
 800b20a:	3917      	subs	r1, #23
 800b20c:	4422      	add	r2, r4
 800b20e:	29e9      	cmp	r1, #233	; 0xe9
 800b210:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800b214:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b218:	d807      	bhi.n	800b22a <USART2_IRQHandler+0x13a>
 800b21a:	789a      	ldrb	r2, [r3, #2]
 800b21c:	4290      	cmp	r0, r2
 800b21e:	d104      	bne.n	800b22a <USART2_IRQHandler+0x13a>
 800b220:	2205      	movs	r2, #5
 800b222:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b226:	4b2a      	ldr	r3, [pc, #168]	; (800b2d0 <USART2_IRQHandler+0x1e0>)
 800b228:	e7a9      	b.n	800b17e <USART2_IRQHandler+0x8e>
 800b22a:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 800b22e:	d3c2      	bcc.n	800b1b6 <USART2_IRQHandler+0xc6>
 800b230:	e7aa      	b.n	800b188 <USART2_IRQHandler+0x98>
 800b232:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b236:	545a      	strb	r2, [r3, r1]
 800b238:	3101      	adds	r1, #1
 800b23a:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 800b23e:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800b242:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 800b246:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b24a:	2206      	movs	r2, #6
 800b24c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b250:	e7b1      	b.n	800b1b6 <USART2_IRQHandler+0xc6>
 800b252:	2020      	movs	r0, #32
 800b254:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800b258:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 800b25c:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 800b260:	541a      	strb	r2, [r3, r0]
 800b262:	1aa2      	subs	r2, r4, r2
 800b264:	b292      	uxth	r2, r2
 800b266:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800b26a:	b912      	cbnz	r2, 800b272 <USART2_IRQHandler+0x182>
 800b26c:	785a      	ldrb	r2, [r3, #1]
 800b26e:	2a01      	cmp	r2, #1
 800b270:	d003      	beq.n	800b27a <USART2_IRQHandler+0x18a>
 800b272:	2200      	movs	r2, #0
 800b274:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b278:	e786      	b.n	800b188 <USART2_IRQHandler+0x98>
 800b27a:	3001      	adds	r0, #1
 800b27c:	4a17      	ldr	r2, [pc, #92]	; (800b2dc <USART2_IRQHandler+0x1ec>)
 800b27e:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 800b282:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800b286:	6850      	ldr	r0, [r2, #4]
 800b288:	4a15      	ldr	r2, [pc, #84]	; (800b2e0 <USART2_IRQHandler+0x1f0>)
 800b28a:	6010      	str	r0, [r2, #0]
 800b28c:	2210      	movs	r2, #16
 800b28e:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 800b292:	e779      	b.n	800b188 <USART2_IRQHandler+0x98>
 800b294:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800b298:	2917      	cmp	r1, #23
 800b29a:	bf9e      	ittt	ls
 800b29c:	545a      	strbls	r2, [r3, r1]
 800b29e:	3101      	addls	r1, #1
 800b2a0:	f8c3 1204 	strls.w	r1, [r3, #516]	; 0x204
 800b2a4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 800b2a8:	480b      	ldr	r0, [pc, #44]	; (800b2d8 <USART2_IRQHandler+0x1e8>)
 800b2aa:	f8d1 2424 	ldr.w	r2, [r1, #1060]	; 0x424
 800b2ae:	8983      	ldrh	r3, [r0, #12]
 800b2b0:	b292      	uxth	r2, r2
 800b2b2:	b29b      	uxth	r3, r3
 800b2b4:	f1c3 0304 	rsb	r3, r3, #4
 800b2b8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b2bc:	b29b      	uxth	r3, r3
 800b2be:	8182      	strh	r2, [r0, #12]
 800b2c0:	f8c1 3434 	str.w	r3, [r1, #1076]	; 0x434
 800b2c4:	e777      	b.n	800b1b6 <USART2_IRQHandler+0xc6>
 800b2c6:	2200      	movs	r2, #0
 800b2c8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b2cc:	e7be      	b.n	800b24c <USART2_IRQHandler+0x15c>
 800b2ce:	bf00      	nop
 800b2d0:	40010000 	andmi	r0, r1, r0
 800b2d4:	20000c6c 	andcs	r0, r0, ip, ror #24
 800b2d8:	20001084 	andcs	r1, r0, r4, lsl #1
 800b2dc:	e0001000 	and	r1, r0, r0
 800b2e0:	2000109c 	mulcs	r0, ip, r0

0800b2e4 <TIMER1_IRQHandler>:
 800b2e4:	b538      	push	{r3, r4, r5, lr}
 800b2e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b2ea:	2008      	movs	r0, #8
 800b2ec:	4a23      	ldr	r2, [pc, #140]	; (800b37c <TIMER1_IRQHandler+0x98>)
 800b2ee:	691c      	ldr	r4, [r3, #16]
 800b2f0:	4923      	ldr	r1, [pc, #140]	; (800b380 <TIMER1_IRQHandler+0x9c>)
 800b2f2:	8813      	ldrh	r3, [r2, #0]
 800b2f4:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 800b2f8:	07a1      	lsls	r1, r4, #30
 800b2fa:	b29b      	uxth	r3, r3
 800b2fc:	d51b      	bpl.n	800b336 <TIMER1_IRQHandler+0x52>
 800b2fe:	07dd      	lsls	r5, r3, #31
 800b300:	d50f      	bpl.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b302:	8813      	ldrh	r3, [r2, #0]
 800b304:	4d1f      	ldr	r5, [pc, #124]	; (800b384 <TIMER1_IRQHandler+0xa0>)
 800b306:	b29b      	uxth	r3, r3
 800b308:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b30c:	8013      	strh	r3, [r2, #0]
 800b30e:	2110      	movs	r1, #16
 800b310:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b314:	2203      	movs	r2, #3
 800b316:	4628      	mov	r0, r5
 800b318:	f004 fd28 	bl	800fd6c <gpio_init>
 800b31c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b320:	616b      	str	r3, [r5, #20]
 800b322:	4621      	mov	r1, r4
 800b324:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b328:	f004 fffd 	bl	8010326 <timer_interrupt_flag_clear>
 800b32c:	2208      	movs	r2, #8
 800b32e:	4b14      	ldr	r3, [pc, #80]	; (800b380 <TIMER1_IRQHandler+0x9c>)
 800b330:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b334:	bd38      	pop	{r3, r4, r5, pc}
 800b336:	0760      	lsls	r0, r4, #29
 800b338:	d509      	bpl.n	800b34e <TIMER1_IRQHandler+0x6a>
 800b33a:	05d9      	lsls	r1, r3, #23
 800b33c:	d5f1      	bpl.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b33e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b342:	2203      	movs	r2, #3
 800b344:	2118      	movs	r1, #24
 800b346:	480f      	ldr	r0, [pc, #60]	; (800b384 <TIMER1_IRQHandler+0xa0>)
 800b348:	f004 fd10 	bl	800fd6c <gpio_init>
 800b34c:	e7e9      	b.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b34e:	0722      	lsls	r2, r4, #28
 800b350:	d5e7      	bpl.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b352:	05db      	lsls	r3, r3, #23
 800b354:	d5e5      	bpl.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b356:	4b0c      	ldr	r3, [pc, #48]	; (800b388 <TIMER1_IRQHandler+0xa4>)
 800b358:	2180      	movs	r1, #128	; 0x80
 800b35a:	69da      	ldr	r2, [r3, #28]
 800b35c:	480b      	ldr	r0, [pc, #44]	; (800b38c <TIMER1_IRQHandler+0xa8>)
 800b35e:	f022 0201 	bic.w	r2, r2, #1
 800b362:	61da      	str	r2, [r3, #28]
 800b364:	4a0a      	ldr	r2, [pc, #40]	; (800b390 <TIMER1_IRQHandler+0xac>)
 800b366:	629a      	str	r2, [r3, #40]	; 0x28
 800b368:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800b36c:	621a      	str	r2, [r3, #32]
 800b36e:	69da      	ldr	r2, [r3, #28]
 800b370:	f042 0201 	orr.w	r2, r2, #1
 800b374:	61da      	str	r2, [r3, #28]
 800b376:	f005 f875 	bl	8010464 <usart_dma_transmit_config>
 800b37a:	e7d2      	b.n	800b322 <TIMER1_IRQHandler+0x3e>
 800b37c:	20001094 	mulcs	r0, r4, r0
 800b380:	40010000 	andmi	r0, r1, r0
 800b384:	40011000 	andmi	r1, r1, r0
 800b388:	40020000 	andmi	r0, r2, r0
 800b38c:	40004800 	andmi	r4, r0, r0, lsl #16
 800b390:	20000e7c 	andcs	r0, r0, ip, ror lr

0800b394 <TIMER2_IRQHandler>:
 800b394:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b398:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800b39c:	078b      	lsls	r3, r1, #30
 800b39e:	d511      	bpl.n	800b3c4 <TIMER2_IRQHandler+0x30>
 800b3a0:	4b13      	ldr	r3, [pc, #76]	; (800b3f0 <TIMER2_IRQHandler+0x5c>)
 800b3a2:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b3a6:	2a03      	cmp	r2, #3
 800b3a8:	d10f      	bne.n	800b3ca <TIMER2_IRQHandler+0x36>
 800b3aa:	2200      	movs	r2, #0
 800b3ac:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b3b0:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b3b4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b3b8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b3bc:	2210      	movs	r2, #16
 800b3be:	4b0d      	ldr	r3, [pc, #52]	; (800b3f4 <TIMER2_IRQHandler+0x60>)
 800b3c0:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b3c4:	480c      	ldr	r0, [pc, #48]	; (800b3f8 <TIMER2_IRQHandler+0x64>)
 800b3c6:	f004 bfae 	b.w	8010326 <timer_interrupt_flag_clear>
 800b3ca:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800b3ce:	2a07      	cmp	r2, #7
 800b3d0:	d1f8      	bne.n	800b3c4 <TIMER2_IRQHandler+0x30>
 800b3d2:	2200      	movs	r2, #0
 800b3d4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b3d8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800b3dc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b3e0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800b3e4:	2210      	movs	r2, #16
 800b3e6:	4b03      	ldr	r3, [pc, #12]	; (800b3f4 <TIMER2_IRQHandler+0x60>)
 800b3e8:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b3ec:	2220      	movs	r2, #32
 800b3ee:	e7e7      	b.n	800b3c0 <TIMER2_IRQHandler+0x2c>
 800b3f0:	20000c6c 	andcs	r0, r0, ip, ror #24
 800b3f4:	40010000 	andmi	r0, r1, r0
 800b3f8:	40000400 	andmi	r0, r0, r0, lsl #8

0800b3fc <TIMER3_IRQHandler>:
 800b3fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b400:	4802      	ldr	r0, [pc, #8]	; (800b40c <TIMER3_IRQHandler+0x10>)
 800b402:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800b406:	f004 bf8e 	b.w	8010326 <timer_interrupt_flag_clear>
 800b40a:	bf00      	nop
 800b40c:	40000800 	andmi	r0, r0, r0, lsl #16

0800b410 <TIMER6_IRQHandler>:
 800b410:	4b05      	ldr	r3, [pc, #20]	; (800b428 <TIMER6_IRQHandler+0x18>)
 800b412:	4806      	ldr	r0, [pc, #24]	; (800b42c <TIMER6_IRQHandler+0x1c>)
 800b414:	685a      	ldr	r2, [r3, #4]
 800b416:	6899      	ldr	r1, [r3, #8]
 800b418:	1a52      	subs	r2, r2, r1
 800b41a:	601a      	str	r2, [r3, #0]
 800b41c:	685a      	ldr	r2, [r3, #4]
 800b41e:	2101      	movs	r1, #1
 800b420:	609a      	str	r2, [r3, #8]
 800b422:	f004 bf80 	b.w	8010326 <timer_interrupt_flag_clear>
 800b426:	bf00      	nop
 800b428:	20001084 	andcs	r1, r0, r4, lsl #1
 800b42c:	40001400 	andmi	r1, r0, r0, lsl #8

0800b430 <Dmx::ClearData(unsigned int)>:
 800b430:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b434:	b510      	push	{r4, lr}
 800b436:	2400      	movs	r4, #0
 800b438:	4a08      	ldr	r2, [pc, #32]	; (800b45c <Dmx::ClearData(unsigned int)+0x2c>)
 800b43a:	fb03 2301 	mla	r3, r3, r1, r2
 800b43e:	f203 2002 	addw	r0, r3, #514	; 0x202
 800b442:	f823 4b02 	strh.w	r4, [r3], #2
 800b446:	4283      	cmp	r3, r0
 800b448:	d1fb      	bne.n	800b442 <Dmx::ClearData(unsigned int)+0x12>
 800b44a:	f44f 7301 	mov.w	r3, #516	; 0x204
 800b44e:	fb03 2201 	mla	r2, r3, r1, r2
 800b452:	f240 2301 	movw	r3, #513	; 0x201
 800b456:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800b45a:	bd10      	pop	{r4, pc}
 800b45c:	20000e7c 	andcs	r0, r0, ip, ror lr

0800b460 <Dmx::StartData(unsigned int, unsigned int)>:
 800b460:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b462:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800b466:	6943      	ldr	r3, [r0, #20]
 800b468:	460c      	mov	r4, r1
 800b46a:	4615      	mov	r5, r2
 800b46c:	b085      	sub	sp, #20
 800b46e:	2b00      	cmp	r3, #0
 800b470:	d16c      	bne.n	800b54c <Dmx::StartData(unsigned int, unsigned int)+0xec>
 800b472:	4e48      	ldr	r6, [pc, #288]	; (800b594 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800b474:	8834      	ldrh	r4, [r6, #0]
 800b476:	b2a4      	uxth	r4, r4
 800b478:	2c00      	cmp	r4, #0
 800b47a:	d15b      	bne.n	800b534 <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 800b47c:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800b480:	f004 fd0c 	bl	800fe9c <rcu_periph_clock_enable>
 800b484:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b488:	f004 fe56 	bl	8010138 <timer_deinit>
 800b48c:	236b      	movs	r3, #107	; 0x6b
 800b48e:	9300      	str	r3, [sp, #0]
 800b490:	4b41      	ldr	r3, [pc, #260]	; (800b598 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800b492:	4669      	mov	r1, sp
 800b494:	681b      	ldr	r3, [r3, #0]
 800b496:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b49a:	9302      	str	r3, [sp, #8]
 800b49c:	f8ad 4004 	strh.w	r4, [sp, #4]
 800b4a0:	f8ad 400c 	strh.w	r4, [sp, #12]
 800b4a4:	f88d 400e 	strb.w	r4, [sp, #14]
 800b4a8:	f004 fea8 	bl	80101fc <timer_init>
 800b4ac:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b4b0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4b4:	f004 ff3a 	bl	801032c <timer_flag_clear>
 800b4b8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b4bc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4c0:	f004 ff31 	bl	8010326 <timer_interrupt_flag_clear>
 800b4c4:	2210      	movs	r2, #16
 800b4c6:	4621      	mov	r1, r4
 800b4c8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4cc:	f004 fef3 	bl	80102b6 <timer_channel_output_mode_config>
 800b4d0:	2210      	movs	r2, #16
 800b4d2:	2101      	movs	r1, #1
 800b4d4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4d8:	f004 feed 	bl	80102b6 <timer_channel_output_mode_config>
 800b4dc:	4f2f      	ldr	r7, [pc, #188]	; (800b59c <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800b4de:	2210      	movs	r2, #16
 800b4e0:	2102      	movs	r1, #2
 800b4e2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4e6:	f004 fee6 	bl	80102b6 <timer_channel_output_mode_config>
 800b4ea:	4622      	mov	r2, r4
 800b4ec:	4621      	mov	r1, r4
 800b4ee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4f2:	f004 ff06 	bl	8010302 <timer_channel_output_pulse_value_config>
 800b4f6:	2101      	movs	r1, #1
 800b4f8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b4fc:	883a      	ldrh	r2, [r7, #0]
 800b4fe:	f004 ff00 	bl	8010302 <timer_channel_output_pulse_value_config>
 800b502:	4b27      	ldr	r3, [pc, #156]	; (800b5a0 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800b504:	683a      	ldr	r2, [r7, #0]
 800b506:	681b      	ldr	r3, [r3, #0]
 800b508:	2102      	movs	r1, #2
 800b50a:	441a      	add	r2, r3
 800b50c:	b292      	uxth	r2, r2
 800b50e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b512:	f004 fef6 	bl	8010302 <timer_channel_output_pulse_value_config>
 800b516:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b51a:	210e      	movs	r1, #14
 800b51c:	f004 feff 	bl	801031e <timer_interrupt_enable>
 800b520:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b524:	4b1f      	ldr	r3, [pc, #124]	; (800b5a4 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800b526:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800b52a:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800b52e:	601a      	str	r2, [r3, #0]
 800b530:	f004 febc 	bl	80102ac <timer_enable>
 800b534:	2201      	movs	r2, #1
 800b536:	8831      	ldrh	r1, [r6, #0]
 800b538:	fa02 f305 	lsl.w	r3, r2, r5
 800b53c:	430b      	orrs	r3, r1
 800b53e:	b29b      	uxth	r3, r3
 800b540:	8033      	strh	r3, [r6, #0]
 800b542:	4b19      	ldr	r3, [pc, #100]	; (800b5a8 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b544:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b548:	b005      	add	sp, #20
 800b54a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b54c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b550:	4b16      	ldr	r3, [pc, #88]	; (800b5ac <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800b552:	fb02 3305 	mla	r3, r2, r5, r3
 800b556:	2200      	movs	r2, #0
 800b558:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b55c:	2107      	movs	r1, #7
 800b55e:	4620      	mov	r0, r4
 800b560:	f004 ff86 	bl	8010470 <usart_flag_get>
 800b564:	2800      	cmp	r0, #0
 800b566:	d0f9      	beq.n	800b55c <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 800b568:	4620      	mov	r0, r4
 800b56a:	4911      	ldr	r1, [pc, #68]	; (800b5b0 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800b56c:	f004 ffa2 	bl	80104b4 <usart_interrupt_flag_clear>
 800b570:	f240 3105 	movw	r1, #773	; 0x305
 800b574:	4620      	mov	r0, r4
 800b576:	f004 ff86 	bl	8010486 <usart_interrupt_enable>
 800b57a:	2202      	movs	r2, #2
 800b57c:	4b0a      	ldr	r3, [pc, #40]	; (800b5a8 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800b57e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b582:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b586:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b58a:	f043 0302 	orr.w	r3, r3, #2
 800b58e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b592:	e7d9      	b.n	800b548 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800b594:	20001094 	mulcs	r0, r4, r0
 800b598:	20000000 	andcs	r0, r0, r0
 800b59c:	20000008 	andcs	r0, r0, r8
 800b5a0:	20000004 	andcs	r0, r0, r4
 800b5a4:	e000e100 	and	lr, r0, r0, lsl #2
 800b5a8:	20001080 	andcs	r1, r0, r0, lsl #1
 800b5ac:	20000c6c 	andcs	r0, r0, ip, ror #24
 800b5b0:	00050305 	andeq	r0, r5, r5, lsl #6

0800b5b4 <Dmx::StopData(unsigned int, unsigned int)>:
 800b5b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5b8:	4f21      	ldr	r7, [pc, #132]	; (800b640 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800b5ba:	4688      	mov	r8, r1
 800b5bc:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800b5c0:	4614      	mov	r4, r2
 800b5c2:	b323      	cbz	r3, 800b60e <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 800b5c4:	6943      	ldr	r3, [r0, #20]
 800b5c6:	bb23      	cbnz	r3, 800b612 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800b5c8:	2601      	movs	r6, #1
 800b5ca:	4d1e      	ldr	r5, [pc, #120]	; (800b644 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800b5cc:	fa06 f202 	lsl.w	r2, r6, r2
 800b5d0:	882b      	ldrh	r3, [r5, #0]
 800b5d2:	b29b      	uxth	r3, r3
 800b5d4:	ea23 0302 	bic.w	r3, r3, r2
 800b5d8:	802b      	strh	r3, [r5, #0]
 800b5da:	f3bf 8f5f 	dmb	sy
 800b5de:	882b      	ldrh	r3, [r5, #0]
 800b5e0:	f104 0208 	add.w	r2, r4, #8
 800b5e4:	b29b      	uxth	r3, r3
 800b5e6:	4096      	lsls	r6, r2
 800b5e8:	ea36 0303 	bics.w	r3, r6, r3
 800b5ec:	d105      	bne.n	800b5fa <Dmx::StopData(unsigned int, unsigned int)+0x46>
 800b5ee:	2107      	movs	r1, #7
 800b5f0:	4640      	mov	r0, r8
 800b5f2:	f004 ff3d 	bl	8010470 <usart_flag_get>
 800b5f6:	2801      	cmp	r0, #1
 800b5f8:	d1f9      	bne.n	800b5ee <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 800b5fa:	882b      	ldrh	r3, [r5, #0]
 800b5fc:	b29b      	uxth	r3, r3
 800b5fe:	ea23 0306 	bic.w	r3, r3, r6
 800b602:	802b      	strh	r3, [r5, #0]
 800b604:	f3bf 8f4f 	dsb	sy
 800b608:	2300      	movs	r3, #0
 800b60a:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800b60e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b612:	f240 3105 	movw	r1, #773	; 0x305
 800b616:	4640      	mov	r0, r8
 800b618:	f004 ff40 	bl	801049c <usart_interrupt_disable>
 800b61c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800b620:	4b09      	ldr	r3, [pc, #36]	; (800b648 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800b622:	fb02 3304 	mla	r3, r2, r4, r3
 800b626:	2200      	movs	r2, #0
 800b628:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800b62c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800b630:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800b634:	f023 0302 	bic.w	r3, r3, #2
 800b638:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800b63c:	e7e4      	b.n	800b608 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 800b63e:	bf00      	nop
 800b640:	20001080 	andcs	r1, r0, r0, lsl #1
 800b644:	20001094 	mulcs	r0, r4, r0
 800b648:	20000c6c 	andcs	r0, r0, ip, ror #24

0800b64c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800b64c:	b570      	push	{r4, r5, r6, lr}
 800b64e:	461d      	mov	r5, r3
 800b650:	6943      	ldr	r3, [r0, #20]
 800b652:	4606      	mov	r6, r0
 800b654:	4293      	cmp	r3, r2
 800b656:	4614      	mov	r4, r2
 800b658:	d014      	beq.n	800b684 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800b65a:	6142      	str	r2, [r0, #20]
 800b65c:	4910      	ldr	r1, [pc, #64]	; (800b6a0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b65e:	2200      	movs	r2, #0
 800b660:	f7ff ffa8 	bl	800b5b4 <Dmx::StopData(unsigned int, unsigned int)>
 800b664:	b934      	cbnz	r4, 800b674 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800b666:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b66a:	4b0e      	ldr	r3, [pc, #56]	; (800b6a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b66c:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800b670:	b94d      	cbnz	r5, 800b686 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800b672:	bd70      	pop	{r4, r5, r6, pc}
 800b674:	2c01      	cmp	r4, #1
 800b676:	d1fb      	bne.n	800b670 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b678:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b67c:	4b09      	ldr	r3, [pc, #36]	; (800b6a4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800b67e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800b682:	e7f5      	b.n	800b670 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800b684:	b135      	cbz	r5, 800b694 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800b686:	4630      	mov	r0, r6
 800b688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b68c:	2200      	movs	r2, #0
 800b68e:	4904      	ldr	r1, [pc, #16]	; (800b6a0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b690:	f7ff bee6 	b.w	800b460 <Dmx::StartData(unsigned int, unsigned int)>
 800b694:	462a      	mov	r2, r5
 800b696:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b69a:	4901      	ldr	r1, [pc, #4]	; (800b6a0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800b69c:	f7ff bf8a 	b.w	800b5b4 <Dmx::StopData(unsigned int, unsigned int)>
 800b6a0:	40004800 	andmi	r4, r0, r0, lsl #16
 800b6a4:	40010000 	andmi	r0, r1, r0

0800b6a8 <Dmx::Dmx()>:
 800b6a8:	225c      	movs	r2, #92	; 0x5c
 800b6aa:	230c      	movs	r3, #12
 800b6ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6b0:	e9c0 2300 	strd	r2, r3, [r0]
 800b6b4:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800b6b8:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800b6bc:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b6c0:	2400      	movs	r4, #0
 800b6c2:	4605      	mov	r5, r0
 800b6c4:	8203      	strh	r3, [r0, #16]
 800b6c6:	4b5d      	ldr	r3, [pc, #372]	; (800b83c <Dmx::Dmx()+0x194>)
 800b6c8:	b08b      	sub	sp, #44	; 0x2c
 800b6ca:	6018      	str	r0, [r3, #0]
 800b6cc:	4b5c      	ldr	r3, [pc, #368]	; (800b840 <Dmx::Dmx()+0x198>)
 800b6ce:	2203      	movs	r2, #3
 800b6d0:	801c      	strh	r4, [r3, #0]
 800b6d2:	2110      	movs	r1, #16
 800b6d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b6d8:	485a      	ldr	r0, [pc, #360]	; (800b844 <Dmx::Dmx()+0x19c>)
 800b6da:	f004 fb47 	bl	800fd6c <gpio_init>
 800b6de:	4621      	mov	r1, r4
 800b6e0:	4628      	mov	r0, r5
 800b6e2:	f7ff fea5 	bl	800b430 <Dmx::ClearData(unsigned int)>
 800b6e6:	4b58      	ldr	r3, [pc, #352]	; (800b848 <Dmx::Dmx()+0x1a0>)
 800b6e8:	2201      	movs	r2, #1
 800b6ea:	4628      	mov	r0, r5
 800b6ec:	601c      	str	r4, [r3, #0]
 800b6ee:	4623      	mov	r3, r4
 800b6f0:	f7ff ffac 	bl	800b64c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800b6f4:	4b55      	ldr	r3, [pc, #340]	; (800b84c <Dmx::Dmx()+0x1a4>)
 800b6f6:	4e56      	ldr	r6, [pc, #344]	; (800b850 <Dmx::Dmx()+0x1a8>)
 800b6f8:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800b6fc:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800b700:	f004 fbcc 	bl	800fe9c <rcu_periph_clock_enable>
 800b704:	f240 5001 	movw	r0, #1281	; 0x501
 800b708:	f004 fbc8 	bl	800fe9c <rcu_periph_clock_enable>
 800b70c:	4630      	mov	r0, r6
 800b70e:	2101      	movs	r1, #1
 800b710:	f003 fe72 	bl	800f3f8 <dma_deinit>
 800b714:	4b4f      	ldr	r3, [pc, #316]	; (800b854 <Dmx::Dmx()+0x1ac>)
 800b716:	2701      	movs	r7, #1
 800b718:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800b71c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800b720:	9308      	str	r3, [sp, #32]
 800b722:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b726:	aa03      	add	r2, sp, #12
 800b728:	4639      	mov	r1, r7
 800b72a:	4630      	mov	r0, r6
 800b72c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b730:	9406      	str	r4, [sp, #24]
 800b732:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800b736:	f003 fe7b 	bl	800f430 <dma_init>
 800b73a:	4639      	mov	r1, r7
 800b73c:	4630      	mov	r0, r6
 800b73e:	f003 feb1 	bl	800f4a4 <dma_circulation_disable>
 800b742:	4639      	mov	r1, r7
 800b744:	4630      	mov	r0, r6
 800b746:	f003 febd 	bl	800f4c4 <dma_memory_to_memory_disable>
 800b74a:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800b74e:	f240 7001 	movw	r0, #1793	; 0x701
 800b752:	f004 fba3 	bl	800fe9c <rcu_periph_clock_enable>
 800b756:	4630      	mov	r0, r6
 800b758:	f004 fcee 	bl	8010138 <timer_deinit>
 800b75c:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800b760:	236b      	movs	r3, #107	; 0x6b
 800b762:	4630      	mov	r0, r6
 800b764:	a903      	add	r1, sp, #12
 800b766:	9303      	str	r3, [sp, #12]
 800b768:	f8ad 4010 	strh.w	r4, [sp, #16]
 800b76c:	f8cd 9014 	str.w	r9, [sp, #20]
 800b770:	f8ad 4018 	strh.w	r4, [sp, #24]
 800b774:	f88d 401a 	strb.w	r4, [sp, #26]
 800b778:	f004 fd40 	bl	80101fc <timer_init>
 800b77c:	4649      	mov	r1, r9
 800b77e:	4630      	mov	r0, r6
 800b780:	f004 fdd4 	bl	801032c <timer_flag_clear>
 800b784:	4649      	mov	r1, r9
 800b786:	4630      	mov	r0, r6
 800b788:	f004 fdcd 	bl	8010326 <timer_interrupt_flag_clear>
 800b78c:	4621      	mov	r1, r4
 800b78e:	4630      	mov	r0, r6
 800b790:	2210      	movs	r2, #16
 800b792:	f004 fd90 	bl	80102b6 <timer_channel_output_mode_config>
 800b796:	4639      	mov	r1, r7
 800b798:	4630      	mov	r0, r6
 800b79a:	2210      	movs	r2, #16
 800b79c:	f004 fd8b 	bl	80102b6 <timer_channel_output_mode_config>
 800b7a0:	4630      	mov	r0, r6
 800b7a2:	2210      	movs	r2, #16
 800b7a4:	2102      	movs	r1, #2
 800b7a6:	f004 fd86 	bl	80102b6 <timer_channel_output_mode_config>
 800b7aa:	2210      	movs	r2, #16
 800b7ac:	2103      	movs	r1, #3
 800b7ae:	4630      	mov	r0, r6
 800b7b0:	f004 fd81 	bl	80102b6 <timer_channel_output_mode_config>
 800b7b4:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800b7b8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800b858 <Dmx::Dmx()+0x1b0>
 800b7bc:	4630      	mov	r0, r6
 800b7be:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800b7c2:	f8c8 3000 	str.w	r3, [r8]
 800b7c6:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800b7ca:	f004 fd6f 	bl	80102ac <timer_enable>
 800b7ce:	f240 7005 	movw	r0, #1797	; 0x705
 800b7d2:	f004 fb63 	bl	800fe9c <rcu_periph_clock_enable>
 800b7d6:	4630      	mov	r0, r6
 800b7d8:	f004 fcae 	bl	8010138 <timer_deinit>
 800b7dc:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800b7e0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b7e4:	f242 7310 	movw	r3, #10000	; 0x2710
 800b7e8:	4630      	mov	r0, r6
 800b7ea:	a903      	add	r1, sp, #12
 800b7ec:	9305      	str	r3, [sp, #20]
 800b7ee:	f004 fd05 	bl	80101fc <timer_init>
 800b7f2:	4649      	mov	r1, r9
 800b7f4:	4630      	mov	r0, r6
 800b7f6:	f004 fd99 	bl	801032c <timer_flag_clear>
 800b7fa:	4649      	mov	r1, r9
 800b7fc:	4630      	mov	r0, r6
 800b7fe:	f004 fd92 	bl	8010326 <timer_interrupt_flag_clear>
 800b802:	4639      	mov	r1, r7
 800b804:	4630      	mov	r0, r6
 800b806:	f004 fd8a 	bl	801031e <timer_interrupt_enable>
 800b80a:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800b80e:	4630      	mov	r0, r6
 800b810:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800b814:	f8c8 3004 	str.w	r3, [r8, #4]
 800b818:	f004 fd48 	bl	80102ac <timer_enable>
 800b81c:	2302      	movs	r3, #2
 800b81e:	2208      	movs	r2, #8
 800b820:	9300      	str	r3, [sp, #0]
 800b822:	490e      	ldr	r1, [pc, #56]	; (800b85c <Dmx::Dmx()+0x1b4>)
 800b824:	4623      	mov	r3, r4
 800b826:	480e      	ldr	r0, [pc, #56]	; (800b860 <Dmx::Dmx()+0x1b8>)
 800b828:	f005 f810 	bl	801084c <gd32_uart_begin>
 800b82c:	2380      	movs	r3, #128	; 0x80
 800b82e:	4628      	mov	r0, r5
 800b830:	f8c8 3004 	str.w	r3, [r8, #4]
 800b834:	b00b      	add	sp, #44	; 0x2c
 800b836:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b83a:	bf00      	nop
 800b83c:	20001098 	mulcs	r0, r8, r0
 800b840:	20001094 	mulcs	r0, r4, r0
 800b844:	40010c00 	andmi	r0, r1, r0, lsl #24
 800b848:	20001080 	andcs	r1, r0, r0, lsl #1
 800b84c:	20000c6c 	andcs	r0, r0, ip, ror #24
 800b850:	40020000 	andmi	r0, r2, r0
 800b854:	40004804 	andmi	r4, r0, r4, lsl #16
 800b858:	e000e100 	and	lr, r0, r0, lsl #2
 800b85c:	0003d090 	muleq	r3, r0, r0
 800b860:	40004800 	andmi	r4, r0, r0, lsl #16

0800b864 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800b864:	4b13      	ldr	r3, [pc, #76]	; (800b8b4 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800b866:	b570      	push	{r4, r5, r6, lr}
 800b868:	60c1      	str	r1, [r0, #12]
 800b86a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800b86e:	232c      	movs	r3, #44	; 0x2c
 800b870:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800b874:	4d10      	ldr	r5, [pc, #64]	; (800b8b8 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800b876:	4c11      	ldr	r4, [pc, #68]	; (800b8bc <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800b878:	4358      	muls	r0, r3
 800b87a:	682a      	ldr	r2, [r5, #0]
 800b87c:	6823      	ldr	r3, [r4, #0]
 800b87e:	4413      	add	r3, r2
 800b880:	4403      	add	r3, r0
 800b882:	42b3      	cmp	r3, r6
 800b884:	d908      	bls.n	800b898 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800b886:	2ab0      	cmp	r2, #176	; 0xb0
 800b888:	4613      	mov	r3, r2
 800b88a:	bf28      	it	cs
 800b88c:	23b0      	movcs	r3, #176	; 0xb0
 800b88e:	220c      	movs	r2, #12
 800b890:	602b      	str	r3, [r5, #0]
 800b892:	4413      	add	r3, r2
 800b894:	6022      	str	r2, [r4, #0]
 800b896:	4403      	add	r3, r0
 800b898:	b109      	cbz	r1, 800b89e <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800b89a:	428b      	cmp	r3, r1
 800b89c:	d906      	bls.n	800b8ac <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800b89e:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800b8a2:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800b8a6:	4299      	cmp	r1, r3
 800b8a8:	bf38      	it	cc
 800b8aa:	4619      	movcc	r1, r3
 800b8ac:	4b04      	ldr	r3, [pc, #16]	; (800b8c0 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800b8ae:	6019      	str	r1, [r3, #0]
 800b8b0:	bd70      	pop	{r4, r5, r6, pc}
 800b8b2:	bf00      	nop
 800b8b4:	20000e7c 	andcs	r0, r0, ip, ror lr
 800b8b8:	20000008 	andcs	r0, r0, r8
 800b8bc:	20000004 	andcs	r0, r0, r4
 800b8c0:	20000000 	andcs	r0, r0, r0

0800b8c4 <Dmx::SetDmxBreakTime(unsigned int)>:
 800b8c4:	295c      	cmp	r1, #92	; 0x5c
 800b8c6:	bf38      	it	cc
 800b8c8:	215c      	movcc	r1, #92	; 0x5c
 800b8ca:	4b02      	ldr	r3, [pc, #8]	; (800b8d4 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800b8cc:	6019      	str	r1, [r3, #0]
 800b8ce:	68c1      	ldr	r1, [r0, #12]
 800b8d0:	f7ff bfc8 	b.w	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8d4:	20000008 	andcs	r0, r0, r8

0800b8d8 <Dmx::SetDmxMabTime(unsigned int)>:
 800b8d8:	290c      	cmp	r1, #12
 800b8da:	bf38      	it	cc
 800b8dc:	210c      	movcc	r1, #12
 800b8de:	4b02      	ldr	r3, [pc, #8]	; (800b8e8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800b8e0:	6019      	str	r1, [r3, #0]
 800b8e2:	68c1      	ldr	r1, [r0, #12]
 800b8e4:	f7ff bfbe 	b.w	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b8e8:	20000004 	andcs	r0, r0, r4

0800b8ec <Dmx::SetDmxSlots(unsigned short)>:
 800b8ec:	1e8b      	subs	r3, r1, #2
 800b8ee:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800b8f2:	d809      	bhi.n	800b908 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800b8f4:	6983      	ldr	r3, [r0, #24]
 800b8f6:	8201      	strh	r1, [r0, #16]
 800b8f8:	b11b      	cbz	r3, 800b902 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800b8fa:	4299      	cmp	r1, r3
 800b8fc:	bf94      	ite	ls
 800b8fe:	6181      	strls	r1, [r0, #24]
 800b900:	6183      	strhi	r3, [r0, #24]
 800b902:	68c1      	ldr	r1, [r0, #12]
 800b904:	f7ff bfae 	b.w	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b908:	4770      	bx	lr
	...

0800b90c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800b90c:	b470      	push	{r4, r5, r6}
 800b90e:	8a04      	ldrh	r4, [r0, #16]
 800b910:	f44f 7501 	mov.w	r5, #516	; 0x204
 800b914:	42a3      	cmp	r3, r4
 800b916:	bf28      	it	cs
 800b918:	4623      	movcs	r3, r4
 800b91a:	4c0e      	ldr	r4, [pc, #56]	; (800b954 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800b91c:	f892 f000 	pld	[r2]
 800b920:	fb05 4401 	mla	r4, r5, r1, r4
 800b924:	1c5d      	adds	r5, r3, #1
 800b926:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800b92a:	18d5      	adds	r5, r2, r3
 800b92c:	4295      	cmp	r5, r2
 800b92e:	d109      	bne.n	800b944 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800b930:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b934:	698a      	ldr	r2, [r1, #24]
 800b936:	429a      	cmp	r2, r3
 800b938:	d009      	beq.n	800b94e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800b93a:	bc70      	pop	{r4, r5, r6}
 800b93c:	618b      	str	r3, [r1, #24]
 800b93e:	68c1      	ldr	r1, [r0, #12]
 800b940:	f7ff bf90 	b.w	800b864 <Dmx::SetDmxPeriodTime(unsigned int)>
 800b944:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b948:	f804 6f01 	strb.w	r6, [r4, #1]!
 800b94c:	e7ee      	b.n	800b92c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800b94e:	bc70      	pop	{r4, r5, r6}
 800b950:	4770      	bx	lr
 800b952:	bf00      	nop
 800b954:	20000e7c 	andcs	r0, r0, ip, ror lr

0800b958 <Dmx::Blackout()>:
 800b958:	4a10      	ldr	r2, [pc, #64]	; (800b99c <Dmx::Blackout()+0x44>)
 800b95a:	b510      	push	{r4, lr}
 800b95c:	8813      	ldrh	r3, [r2, #0]
 800b95e:	b29b      	uxth	r3, r3
 800b960:	b903      	cbnz	r3, 800b964 <Dmx::Blackout()+0xc>
 800b962:	bd10      	pop	{r4, pc}
 800b964:	f3bf 8f5f 	dmb	sy
 800b968:	8813      	ldrh	r3, [r2, #0]
 800b96a:	05db      	lsls	r3, r3, #23
 800b96c:	d5f9      	bpl.n	800b962 <Dmx::Blackout()+0xa>
 800b96e:	4c0c      	ldr	r4, [pc, #48]	; (800b9a0 <Dmx::Blackout()+0x48>)
 800b970:	2107      	movs	r1, #7
 800b972:	4620      	mov	r0, r4
 800b974:	f004 fd7c 	bl	8010470 <usart_flag_get>
 800b978:	2801      	cmp	r0, #1
 800b97a:	d1f9      	bne.n	800b970 <Dmx::Blackout()+0x18>
 800b97c:	2300      	movs	r3, #0
 800b97e:	4a09      	ldr	r2, [pc, #36]	; (800b9a4 <Dmx::Blackout()+0x4c>)
 800b980:	461c      	mov	r4, r3
 800b982:	4611      	mov	r1, r2
 800b984:	f240 1001 	movw	r0, #257	; 0x101
 800b988:	3301      	adds	r3, #1
 800b98a:	4283      	cmp	r3, r0
 800b98c:	f822 4b02 	strh.w	r4, [r2], #2
 800b990:	d1fa      	bne.n	800b988 <Dmx::Blackout()+0x30>
 800b992:	f04f 0300 	mov.w	r3, #0
 800b996:	700b      	strb	r3, [r1, #0]
 800b998:	e7e3      	b.n	800b962 <Dmx::Blackout()+0xa>
 800b99a:	bf00      	nop
 800b99c:	20001094 	mulcs	r0, r4, r0
 800b9a0:	40004800 	andmi	r4, r0, r0, lsl #16
 800b9a4:	20000e7c 	andcs	r0, r0, ip, ror lr

0800b9a8 <Dmx::FullOn()>:
 800b9a8:	4a10      	ldr	r2, [pc, #64]	; (800b9ec <Dmx::FullOn()+0x44>)
 800b9aa:	b510      	push	{r4, lr}
 800b9ac:	8813      	ldrh	r3, [r2, #0]
 800b9ae:	b29b      	uxth	r3, r3
 800b9b0:	b903      	cbnz	r3, 800b9b4 <Dmx::FullOn()+0xc>
 800b9b2:	bd10      	pop	{r4, pc}
 800b9b4:	f3bf 8f5f 	dmb	sy
 800b9b8:	8813      	ldrh	r3, [r2, #0]
 800b9ba:	05db      	lsls	r3, r3, #23
 800b9bc:	d5f9      	bpl.n	800b9b2 <Dmx::FullOn()+0xa>
 800b9be:	4c0c      	ldr	r4, [pc, #48]	; (800b9f0 <Dmx::FullOn()+0x48>)
 800b9c0:	2107      	movs	r1, #7
 800b9c2:	4620      	mov	r0, r4
 800b9c4:	f004 fd54 	bl	8010470 <usart_flag_get>
 800b9c8:	2801      	cmp	r0, #1
 800b9ca:	d1f9      	bne.n	800b9c0 <Dmx::FullOn()+0x18>
 800b9cc:	4a09      	ldr	r2, [pc, #36]	; (800b9f4 <Dmx::FullOn()+0x4c>)
 800b9ce:	2300      	movs	r3, #0
 800b9d0:	4611      	mov	r1, r2
 800b9d2:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800b9d6:	f240 1001 	movw	r0, #257	; 0x101
 800b9da:	3301      	adds	r3, #1
 800b9dc:	4283      	cmp	r3, r0
 800b9de:	f822 4b02 	strh.w	r4, [r2], #2
 800b9e2:	d1fa      	bne.n	800b9da <Dmx::FullOn()+0x32>
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	700b      	strb	r3, [r1, #0]
 800b9e8:	e7e3      	b.n	800b9b2 <Dmx::FullOn()+0xa>
 800b9ea:	bf00      	nop
 800b9ec:	20001094 	mulcs	r0, r4, r0
 800b9f0:	40004800 	andmi	r4, r0, r0, lsl #16
 800b9f4:	20000e7c 	andcs	r0, r0, ip, ror lr

0800b9f8 <net_timers_run>:
 800b9f8:	4b05      	ldr	r3, [pc, #20]	; (800ba10 <net_timers_run+0x18>)
 800b9fa:	4a06      	ldr	r2, [pc, #24]	; (800ba14 <net_timers_run+0x1c>)
 800b9fc:	681b      	ldr	r3, [r3, #0]
 800b9fe:	6811      	ldr	r1, [r2, #0]
 800ba00:	4299      	cmp	r1, r3
 800ba02:	d803      	bhi.n	800ba0c <net_timers_run+0x14>
 800ba04:	3364      	adds	r3, #100	; 0x64
 800ba06:	6013      	str	r3, [r2, #0]
 800ba08:	f001 be6a 	b.w	800d6e0 <igmp_timer>
 800ba0c:	4770      	bx	lr
 800ba0e:	bf00      	nop
 800ba10:	2000a094 	mulcs	r0, r4, r0
 800ba14:	200010bc 	strhcs	r1, [r0], -ip

0800ba18 <rfc3927>:
 800ba18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba1c:	4606      	mov	r6, r0
 800ba1e:	25ff      	movs	r5, #255	; 0xff
 800ba20:	4b18      	ldr	r3, [pc, #96]	; (800ba84 <rfc3927+0x6c>)
 800ba22:	4f19      	ldr	r7, [pc, #100]	; (800ba88 <rfc3927+0x70>)
 800ba24:	791a      	ldrb	r2, [r3, #4]
 800ba26:	78dc      	ldrb	r4, [r3, #3]
 800ba28:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800ba8c <rfc3927+0x74>
 800ba2c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800ba30:	f8d7 9000 	ldr.w	r9, [r7]
 800ba34:	f8df b058 	ldr.w	fp, [pc, #88]	; 800ba90 <rfc3927+0x78>
 800ba38:	f8df a058 	ldr.w	sl, [pc, #88]	; 800ba94 <rfc3927+0x7c>
 800ba3c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800ba40:	4659      	mov	r1, fp
 800ba42:	4620      	mov	r0, r4
 800ba44:	f001 fbaa 	bl	800d19c <arp_cache_lookup>
 800ba48:	b190      	cbz	r0, 800ba70 <rfc3927+0x58>
 800ba4a:	ba24      	rev	r4, r4
 800ba4c:	3401      	adds	r4, #1
 800ba4e:	3d01      	subs	r5, #1
 800ba50:	ba24      	rev	r4, r4
 800ba52:	b2ad      	uxth	r5, r5
 800ba54:	4554      	cmp	r4, sl
 800ba56:	bf08      	it	eq
 800ba58:	4644      	moveq	r4, r8
 800ba5a:	b18d      	cbz	r5, 800ba80 <rfc3927+0x68>
 800ba5c:	683b      	ldr	r3, [r7, #0]
 800ba5e:	eba3 0309 	sub.w	r3, r3, r9
 800ba62:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ba66:	d3eb      	bcc.n	800ba40 <rfc3927+0x28>
 800ba68:	2400      	movs	r4, #0
 800ba6a:	4623      	mov	r3, r4
 800ba6c:	4620      	mov	r0, r4
 800ba6e:	e002      	b.n	800ba76 <rfc3927+0x5e>
 800ba70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba74:	2001      	movs	r0, #1
 800ba76:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800ba7a:	6034      	str	r4, [r6, #0]
 800ba7c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba80:	462c      	mov	r4, r5
 800ba82:	e7f2      	b.n	800ba6a <rfc3927+0x52>
 800ba84:	200010c0 	andcs	r1, r0, r0, asr #1
 800ba88:	2000a094 	mulcs	r0, r4, r0
 800ba8c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800ba90:	200010c8 	andcs	r1, r0, r8, asr #1
 800ba94:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800ba98 <_init_tcb>:
 800ba98:	b510      	push	{r4, lr}
 800ba9a:	4603      	mov	r3, r0
 800ba9c:	2400      	movs	r4, #0
 800ba9e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800baa2:	4293      	cmp	r3, r2
 800baa4:	d10d      	bne.n	800bac2 <_init_tcb+0x2a>
 800baa6:	4b08      	ldr	r3, [pc, #32]	; (800bac8 <_init_tcb+0x30>)
 800baa8:	f640 3268 	movw	r2, #2920	; 0xb68
 800baac:	681b      	ldr	r3, [r3, #0]
 800baae:	8702      	strh	r2, [r0, #56]	; 0x38
 800bab0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800bab4:	6283      	str	r3, [r0, #40]	; 0x28
 800bab6:	6243      	str	r3, [r0, #36]	; 0x24
 800bab8:	2301      	movs	r3, #1
 800baba:	8001      	strh	r1, [r0, #0]
 800babc:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800bac0:	bd10      	pop	{r4, pc}
 800bac2:	f803 4b01 	strb.w	r4, [r3], #1
 800bac6:	e7ec      	b.n	800baa2 <_init_tcb+0xa>
 800bac8:	2000a094 	mulcs	r0, r4, r0

0800bacc <memcpy.isra.0>:
 800bacc:	3801      	subs	r0, #1
 800bace:	440a      	add	r2, r1
 800bad0:	4291      	cmp	r1, r2
 800bad2:	d100      	bne.n	800bad6 <memcpy.isra.0+0xa>
 800bad4:	4770      	bx	lr
 800bad6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bada:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bade:	e7f7      	b.n	800bad0 <memcpy.isra.0+0x4>

0800bae0 <_bswap32>:
 800bae0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bae2:	2204      	movs	r2, #4
 800bae4:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800bae8:	4629      	mov	r1, r5
 800baea:	4604      	mov	r4, r0
 800baec:	eb0d 0002 	add.w	r0, sp, r2
 800baf0:	f7ff ffec 	bl	800bacc <memcpy.isra.0>
 800baf4:	2204      	movs	r2, #4
 800baf6:	9b01      	ldr	r3, [sp, #4]
 800baf8:	eb0d 0102 	add.w	r1, sp, r2
 800bafc:	ba1b      	rev	r3, r3
 800bafe:	4628      	mov	r0, r5
 800bb00:	9301      	str	r3, [sp, #4]
 800bb02:	f7ff ffe3 	bl	800bacc <memcpy.isra.0>
 800bb06:	2204      	movs	r2, #4
 800bb08:	3426      	adds	r4, #38	; 0x26
 800bb0a:	eb0d 0002 	add.w	r0, sp, r2
 800bb0e:	4621      	mov	r1, r4
 800bb10:	f7ff ffdc 	bl	800bacc <memcpy.isra.0>
 800bb14:	2204      	movs	r2, #4
 800bb16:	9b01      	ldr	r3, [sp, #4]
 800bb18:	4620      	mov	r0, r4
 800bb1a:	ba1b      	rev	r3, r3
 800bb1c:	eb0d 0102 	add.w	r1, sp, r2
 800bb20:	9301      	str	r3, [sp, #4]
 800bb22:	f7ff ffd3 	bl	800bacc <memcpy.isra.0>
 800bb26:	b003      	add	sp, #12
 800bb28:	bd30      	pop	{r4, r5, pc}
	...

0800bb2c <_tcp_send_package>:
 800bb2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bb30:	7a0b      	ldrb	r3, [r1, #8]
 800bb32:	4605      	mov	r5, r0
 800bb34:	f013 0f02 	tst.w	r3, #2
 800bb38:	bf0c      	ite	eq
 800bb3a:	f04f 0805 	moveq.w	r8, #5
 800bb3e:	f04f 0806 	movne.w	r8, #6
 800bb42:	f04f 0a00 	mov.w	sl, #0
 800bb46:	4c47      	ldr	r4, [pc, #284]	; (800bc64 <_tcp_send_package+0x138>)
 800bb48:	460f      	mov	r7, r1
 800bb4a:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800bb4c:	f100 0108 	add.w	r1, r0, #8
 800bb50:	2206      	movs	r2, #6
 800bb52:	4620      	mov	r0, r4
 800bb54:	f7ff ffba 	bl	800bacc <memcpy.isra.0>
 800bb58:	4a43      	ldr	r2, [pc, #268]	; (800bc68 <_tcp_send_package+0x13c>)
 800bb5a:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800bb5e:	8813      	ldrh	r3, [r2, #0]
 800bb60:	b2b6      	uxth	r6, r6
 800bb62:	1c59      	adds	r1, r3, #1
 800bb64:	8263      	strh	r3, [r4, #18]
 800bb66:	f105 0904 	add.w	r9, r5, #4
 800bb6a:	f106 0314 	add.w	r3, r6, #20
 800bb6e:	ba5b      	rev16	r3, r3
 800bb70:	8011      	strh	r1, [r2, #0]
 800bb72:	f104 001e 	add.w	r0, r4, #30
 800bb76:	2204      	movs	r2, #4
 800bb78:	4649      	mov	r1, r9
 800bb7a:	8223      	strh	r3, [r4, #16]
 800bb7c:	f7ff ffa6 	bl	800bacc <memcpy.isra.0>
 800bb80:	2114      	movs	r1, #20
 800bb82:	f104 000e 	add.w	r0, r4, #14
 800bb86:	f8a4 a018 	strh.w	sl, [r4, #24]
 800bb8a:	f001 fe3c 	bl	800d806 <net_chksum>
 800bb8e:	882b      	ldrh	r3, [r5, #0]
 800bb90:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800bb94:	8463      	strh	r3, [r4, #34]	; 0x22
 800bb96:	886b      	ldrh	r3, [r5, #2]
 800bb98:	8320      	strh	r0, [r4, #24]
 800bb9a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bb9c:	683b      	ldr	r3, [r7, #0]
 800bb9e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800bba0:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800bbaa:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800bbae:	7a3b      	ldrb	r3, [r7, #8]
 800bbb0:	8622      	strh	r2, [r4, #48]	; 0x30
 800bbb2:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800bbb6:	079b      	lsls	r3, r3, #30
 800bbb8:	bf48      	it	mi
 800bbba:	f240 4302 	movwmi	r3, #1026	; 0x402
 800bbbe:	8baa      	ldrh	r2, [r5, #28]
 800bbc0:	bf48      	it	mi
 800bbc2:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800bbc4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800bbc6:	bf42      	ittt	mi
 800bbc8:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800bbcc:	4622      	movmi	r2, r4
 800bbce:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800bbd2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800bbd4:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800bbd8:	bf58      	it	pl
 800bbda:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800bbde:	2b00      	cmp	r3, #0
 800bbe0:	d13e      	bne.n	800bc60 <_tcp_send_package+0x134>
 800bbe2:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800bbe4:	481f      	ldr	r0, [pc, #124]	; (800bc64 <_tcp_send_package+0x138>)
 800bbe6:	ba5b      	rev16	r3, r3
 800bbe8:	8463      	strh	r3, [r4, #34]	; 0x22
 800bbea:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800bbec:	ba5b      	rev16	r3, r3
 800bbee:	84a3      	strh	r3, [r4, #36]	; 0x24
 800bbf0:	f7ff ff76 	bl	800bae0 <_bswap32>
 800bbf4:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bbf6:	a801      	add	r0, sp, #4
 800bbf8:	ba5b      	rev16	r3, r3
 800bbfa:	8623      	strh	r3, [r4, #48]	; 0x30
 800bbfc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bbfe:	220c      	movs	r2, #12
 800bc00:	ba5b      	rev16	r3, r3
 800bc02:	491a      	ldr	r1, [pc, #104]	; (800bc6c <_tcp_send_package+0x140>)
 800bc04:	86a3      	strh	r3, [r4, #52]	; 0x34
 800bc06:	f7ff ff61 	bl	800bacc <memcpy.isra.0>
 800bc0a:	2204      	movs	r2, #4
 800bc0c:	4918      	ldr	r1, [pc, #96]	; (800bc70 <_tcp_send_package+0x144>)
 800bc0e:	4817      	ldr	r0, [pc, #92]	; (800bc6c <_tcp_send_package+0x140>)
 800bc10:	f7ff ff5c 	bl	800bacc <memcpy.isra.0>
 800bc14:	2204      	movs	r2, #4
 800bc16:	4649      	mov	r1, r9
 800bc18:	4816      	ldr	r0, [pc, #88]	; (800bc74 <_tcp_send_package+0x148>)
 800bc1a:	f7ff ff57 	bl	800bacc <memcpy.isra.0>
 800bc1e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800bc22:	f106 010c 	add.w	r1, r6, #12
 800bc26:	83e3      	strh	r3, [r4, #30]
 800bc28:	4810      	ldr	r0, [pc, #64]	; (800bc6c <_tcp_send_package+0x140>)
 800bc2a:	ba73      	rev16	r3, r6
 800bc2c:	8423      	strh	r3, [r4, #32]
 800bc2e:	f001 fdea 	bl	800d806 <net_chksum>
 800bc32:	a901      	add	r1, sp, #4
 800bc34:	4605      	mov	r5, r0
 800bc36:	220c      	movs	r2, #12
 800bc38:	480c      	ldr	r0, [pc, #48]	; (800bc6c <_tcp_send_package+0x140>)
 800bc3a:	f7ff ff47 	bl	800bacc <memcpy.isra.0>
 800bc3e:	4809      	ldr	r0, [pc, #36]	; (800bc64 <_tcp_send_package+0x138>)
 800bc40:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800bc44:	8665      	strh	r5, [r4, #50]	; 0x32
 800bc46:	b004      	add	sp, #16
 800bc48:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc4c:	f004 bc56 	b.w	80104fc <emac_eth_send>
 800bc50:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800bc52:	5cc9      	ldrb	r1, [r1, r3]
 800bc54:	54d1      	strb	r1, [r2, r3]
 800bc56:	3301      	adds	r3, #1
 800bc58:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800bc5a:	4299      	cmp	r1, r3
 800bc5c:	d8f8      	bhi.n	800bc50 <_tcp_send_package+0x124>
 800bc5e:	e7c0      	b.n	800bbe2 <_tcp_send_package+0xb6>
 800bc60:	2300      	movs	r3, #0
 800bc62:	e7f9      	b.n	800bc58 <_tcp_send_package+0x12c>
 800bc64:	20001c88 	andcs	r1, r0, r8, lsl #25
 800bc68:	200010d0 	ldrdcs	r1, [r0], -r0
 800bc6c:	20001c9e 	mulcs	r0, lr, ip
 800bc70:	200010a4 	andcs	r1, r0, r4, lsr #1
 800bc74:	20001ca2 	andcs	r1, r0, r2, lsr #25

0800bc78 <_send_reset>:
 800bc78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc7a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800bc7e:	4604      	mov	r4, r0
 800bc80:	075a      	lsls	r2, r3, #29
 800bc82:	460e      	mov	r6, r1
 800bc84:	d421      	bmi.n	800bcca <_send_reset+0x52>
 800bc86:	2204      	movs	r2, #4
 800bc88:	f013 0310 	ands.w	r3, r3, #16
 800bc8c:	f88d 200c 	strb.w	r2, [sp, #12]
 800bc90:	d01d      	beq.n	800bcce <_send_reset+0x56>
 800bc92:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800bc96:	4668      	mov	r0, sp
 800bc98:	f7ff ff18 	bl	800bacc <memcpy.isra.0>
 800bc9c:	9b00      	ldr	r3, [sp, #0]
 800bc9e:	9301      	str	r3, [sp, #4]
 800bca0:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800bca4:	4668      	mov	r0, sp
 800bca6:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800bcaa:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800bcae:	07db      	lsls	r3, r3, #31
 800bcb0:	f04f 0204 	mov.w	r2, #4
 800bcb4:	bf48      	it	mi
 800bcb6:	3501      	addmi	r5, #1
 800bcb8:	f7ff ff08 	bl	800bacc <memcpy.isra.0>
 800bcbc:	9b00      	ldr	r3, [sp, #0]
 800bcbe:	4630      	mov	r0, r6
 800bcc0:	441d      	add	r5, r3
 800bcc2:	a901      	add	r1, sp, #4
 800bcc4:	9502      	str	r5, [sp, #8]
 800bcc6:	f7ff ff31 	bl	800bb2c <_tcp_send_package>
 800bcca:	b004      	add	sp, #16
 800bccc:	bd70      	pop	{r4, r5, r6, pc}
 800bcce:	9301      	str	r3, [sp, #4]
 800bcd0:	2314      	movs	r3, #20
 800bcd2:	f88d 300c 	strb.w	r3, [sp, #12]
 800bcd6:	e7e3      	b.n	800bca0 <_send_reset+0x28>

0800bcd8 <tcp_begin>:
 800bcd8:	b508      	push	{r3, lr}
 800bcda:	4b0a      	ldr	r3, [pc, #40]	; (800bd04 <tcp_begin+0x2c>)
 800bcdc:	4601      	mov	r1, r0
 800bcde:	881a      	ldrh	r2, [r3, #0]
 800bce0:	4282      	cmp	r2, r0
 800bce2:	d102      	bne.n	800bcea <tcp_begin+0x12>
 800bce4:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800bce8:	b130      	cbz	r0, 800bcf8 <tcp_begin+0x20>
 800bcea:	b12a      	cbz	r2, 800bcf8 <tcp_begin+0x20>
 800bcec:	4806      	ldr	r0, [pc, #24]	; (800bd08 <tcp_begin+0x30>)
 800bcee:	f002 ff5f 	bl	800ebb0 <console_error>
 800bcf2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bcf6:	bd08      	pop	{r3, pc}
 800bcf8:	4802      	ldr	r0, [pc, #8]	; (800bd04 <tcp_begin+0x2c>)
 800bcfa:	8019      	strh	r1, [r3, #0]
 800bcfc:	f7ff fecc 	bl	800ba98 <_init_tcb>
 800bd00:	2000      	movs	r0, #0
 800bd02:	e7f8      	b.n	800bcf6 <tcp_begin+0x1e>
 800bd04:	20001c44 	andcs	r1, r0, r4, asr #24
 800bd08:	080122b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sp}

0800bd0c <tcp_write>:
 800bd0c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800bd10:	429a      	cmp	r2, r3
 800bd12:	bf28      	it	cs
 800bd14:	461a      	movcs	r2, r3
 800bd16:	2344      	movs	r3, #68	; 0x44
 800bd18:	b530      	push	{r4, r5, lr}
 800bd1a:	4c0d      	ldr	r4, [pc, #52]	; (800bd50 <tcp_write+0x44>)
 800bd1c:	b085      	sub	sp, #20
 800bd1e:	fb03 4400 	mla	r4, r3, r0, r4
 800bd22:	6963      	ldr	r3, [r4, #20]
 800bd24:	62e1      	str	r1, [r4, #44]	; 0x2c
 800bd26:	9301      	str	r3, [sp, #4]
 800bd28:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd2a:	4620      	mov	r0, r4
 800bd2c:	9302      	str	r3, [sp, #8]
 800bd2e:	2318      	movs	r3, #24
 800bd30:	8622      	strh	r2, [r4, #48]	; 0x30
 800bd32:	a901      	add	r1, sp, #4
 800bd34:	4615      	mov	r5, r2
 800bd36:	f88d 300c 	strb.w	r3, [sp, #12]
 800bd3a:	f7ff fef7 	bl	800bb2c <_tcp_send_package>
 800bd3e:	2300      	movs	r3, #0
 800bd40:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bd42:	8623      	strh	r3, [r4, #48]	; 0x30
 800bd44:	6963      	ldr	r3, [r4, #20]
 800bd46:	442b      	add	r3, r5
 800bd48:	6163      	str	r3, [r4, #20]
 800bd4a:	b005      	add	sp, #20
 800bd4c:	bd30      	pop	{r4, r5, pc}
 800bd4e:	bf00      	nop
 800bd50:	20001c44 	andcs	r1, r0, r4, asr #24

0800bd54 <tcp_read>:
 800bd54:	2344      	movs	r3, #68	; 0x44
 800bd56:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd58:	4c1c      	ldr	r4, [pc, #112]	; (800bdcc <tcp_read+0x78>)
 800bd5a:	b085      	sub	sp, #20
 800bd5c:	fb03 4400 	mla	r4, r3, r0, r4
 800bd60:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800bd64:	2b07      	cmp	r3, #7
 800bd66:	d112      	bne.n	800bd8e <tcp_read+0x3a>
 800bd68:	6963      	ldr	r3, [r4, #20]
 800bd6a:	4620      	mov	r0, r4
 800bd6c:	9301      	str	r3, [sp, #4]
 800bd6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bd70:	a901      	add	r1, sp, #4
 800bd72:	9302      	str	r3, [sp, #8]
 800bd74:	2311      	movs	r3, #17
 800bd76:	f88d 300c 	strb.w	r3, [sp, #12]
 800bd7a:	f7ff fed7 	bl	800bb2c <_tcp_send_package>
 800bd7e:	2309      	movs	r3, #9
 800bd80:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bd84:	6963      	ldr	r3, [r4, #20]
 800bd86:	3301      	adds	r3, #1
 800bd88:	6163      	str	r3, [r4, #20]
 800bd8a:	2000      	movs	r0, #0
 800bd8c:	e01b      	b.n	800bdc6 <tcp_read+0x72>
 800bd8e:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800bd92:	4358      	muls	r0, r3
 800bd94:	4a0e      	ldr	r2, [pc, #56]	; (800bdd0 <tcp_read+0x7c>)
 800bd96:	1817      	adds	r7, r2, r0
 800bd98:	887b      	ldrh	r3, [r7, #2]
 800bd9a:	5a15      	ldrh	r5, [r2, r0]
 800bd9c:	429d      	cmp	r5, r3
 800bd9e:	d0f4      	beq.n	800bd8a <tcp_read+0x36>
 800bda0:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800bda4:	435d      	muls	r5, r3
 800bda6:	1d06      	adds	r6, r0, #4
 800bda8:	442e      	add	r6, r5
 800bdaa:	4416      	add	r6, r2
 800bdac:	4405      	add	r5, r0
 800bdae:	600e      	str	r6, [r1, #0]
 800bdb0:	442a      	add	r2, r5
 800bdb2:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800bdb6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800bdb8:	3301      	adds	r3, #1
 800bdba:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800bdbe:	f003 0301 	and.w	r3, r3, #1
 800bdc2:	8722      	strh	r2, [r4, #56]	; 0x38
 800bdc4:	807b      	strh	r3, [r7, #2]
 800bdc6:	b005      	add	sp, #20
 800bdc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bdca:	bf00      	nop
 800bdcc:	20001c44 	andcs	r1, r0, r4, asr #24
 800bdd0:	200010d4 	ldrdcs	r1, [r0], -r4

0800bdd4 <memcpy.isra.0>:
 800bdd4:	3801      	subs	r0, #1
 800bdd6:	440a      	add	r2, r1
 800bdd8:	4291      	cmp	r1, r2
 800bdda:	d100      	bne.n	800bdde <memcpy.isra.0+0xa>
 800bddc:	4770      	bx	lr
 800bdde:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bde2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bde6:	e7f7      	b.n	800bdd8 <memcpy.isra.0+0x4>

0800bde8 <net_memcpy>:
 800bde8:	ea40 0301 	orr.w	r3, r0, r1
 800bdec:	079b      	lsls	r3, r3, #30
 800bdee:	b570      	push	{r4, r5, r6, lr}
 800bdf0:	d108      	bne.n	800be04 <net_memcpy+0x1c>
 800bdf2:	f022 0303 	bic.w	r3, r2, #3
 800bdf6:	1f04      	subs	r4, r0, #4
 800bdf8:	18cd      	adds	r5, r1, r3
 800bdfa:	42a9      	cmp	r1, r5
 800bdfc:	d108      	bne.n	800be10 <net_memcpy+0x28>
 800bdfe:	1ad2      	subs	r2, r2, r3
 800be00:	4403      	add	r3, r0
 800be02:	e000      	b.n	800be06 <net_memcpy+0x1e>
 800be04:	4603      	mov	r3, r0
 800be06:	3b01      	subs	r3, #1
 800be08:	440a      	add	r2, r1
 800be0a:	4291      	cmp	r1, r2
 800be0c:	d105      	bne.n	800be1a <net_memcpy+0x32>
 800be0e:	bd70      	pop	{r4, r5, r6, pc}
 800be10:	f851 6b04 	ldr.w	r6, [r1], #4
 800be14:	f844 6f04 	str.w	r6, [r4, #4]!
 800be18:	e7ef      	b.n	800bdfa <net_memcpy+0x12>
 800be1a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800be1e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800be22:	e7f2      	b.n	800be0a <net_memcpy+0x22>

0800be24 <udp_set_ip>:
 800be24:	2204      	movs	r2, #4
 800be26:	b513      	push	{r0, r1, r4, lr}
 800be28:	4604      	mov	r4, r0
 800be2a:	6803      	ldr	r3, [r0, #0]
 800be2c:	eb0d 0102 	add.w	r1, sp, r2
 800be30:	4808      	ldr	r0, [pc, #32]	; (800be54 <udp_set_ip+0x30>)
 800be32:	9301      	str	r3, [sp, #4]
 800be34:	f7ff ffce 	bl	800bdd4 <memcpy.isra.0>
 800be38:	6862      	ldr	r2, [r4, #4]
 800be3a:	4b07      	ldr	r3, [pc, #28]	; (800be58 <udp_set_ip+0x34>)
 800be3c:	43d1      	mvns	r1, r2
 800be3e:	6019      	str	r1, [r3, #0]
 800be40:	6823      	ldr	r3, [r4, #0]
 800be42:	4013      	ands	r3, r2
 800be44:	4a05      	ldr	r2, [pc, #20]	; (800be5c <udp_set_ip+0x38>)
 800be46:	6013      	str	r3, [r2, #0]
 800be48:	68a2      	ldr	r2, [r4, #8]
 800be4a:	4b05      	ldr	r3, [pc, #20]	; (800be60 <udp_set_ip+0x3c>)
 800be4c:	601a      	str	r2, [r3, #0]
 800be4e:	b002      	add	sp, #8
 800be50:	bd10      	pop	{r4, pc}
 800be52:	bf00      	nop
 800be54:	20007f5e 	andcs	r7, r0, lr, asr pc
 800be58:	20002274 	andcs	r2, r0, r4, ror r2
 800be5c:	2000227c 	andcs	r2, r0, ip, ror r2
 800be60:	20002278 	andcs	r2, r0, r8, ror r2

0800be64 <udp_bind>:
 800be64:	4a0a      	ldr	r2, [pc, #40]	; (800be90 <udp_bind+0x2c>)
 800be66:	4603      	mov	r3, r0
 800be68:	b510      	push	{r4, lr}
 800be6a:	2000      	movs	r0, #0
 800be6c:	4614      	mov	r4, r2
 800be6e:	f852 1b04 	ldr.w	r1, [r2], #4
 800be72:	4299      	cmp	r1, r3
 800be74:	d008      	beq.n	800be88 <udp_bind+0x24>
 800be76:	b141      	cbz	r1, 800be8a <udp_bind+0x26>
 800be78:	3001      	adds	r0, #1
 800be7a:	2808      	cmp	r0, #8
 800be7c:	d1f7      	bne.n	800be6e <udp_bind+0xa>
 800be7e:	4805      	ldr	r0, [pc, #20]	; (800be94 <udp_bind+0x30>)
 800be80:	f002 fe96 	bl	800ebb0 <console_error>
 800be84:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800be88:	bd10      	pop	{r4, pc}
 800be8a:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800be8e:	e7fb      	b.n	800be88 <udp_bind+0x24>
 800be90:	20002284 	andcs	r2, r0, r4, lsl #5
 800be94:	080122d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sp}

0800be98 <udp_unbind>:
 800be98:	4a0c      	ldr	r2, [pc, #48]	; (800becc <udp_unbind+0x34>)
 800be9a:	2300      	movs	r3, #0
 800be9c:	4611      	mov	r1, r2
 800be9e:	b510      	push	{r4, lr}
 800bea0:	f852 4b04 	ldr.w	r4, [r2], #4
 800bea4:	4284      	cmp	r4, r0
 800bea6:	d108      	bne.n	800beba <udp_unbind+0x22>
 800bea8:	2000      	movs	r0, #0
 800beaa:	f640 3294 	movw	r2, #2964	; 0xb94
 800beae:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800beb2:	4353      	muls	r3, r2
 800beb4:	4a06      	ldr	r2, [pc, #24]	; (800bed0 <udp_unbind+0x38>)
 800beb6:	50d0      	str	r0, [r2, r3]
 800beb8:	bd10      	pop	{r4, pc}
 800beba:	3301      	adds	r3, #1
 800bebc:	2b08      	cmp	r3, #8
 800bebe:	d1ef      	bne.n	800bea0 <udp_unbind+0x8>
 800bec0:	4804      	ldr	r0, [pc, #16]	; (800bed4 <udp_unbind+0x3c>)
 800bec2:	f002 fe75 	bl	800ebb0 <console_error>
 800bec6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800beca:	e7f5      	b.n	800beb8 <udp_unbind+0x20>
 800becc:	20002284 	andcs	r2, r0, r4, lsl #5
 800bed0:	200022a4 	andcs	r2, r0, r4, lsr #5
 800bed4:	080122d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sp}

0800bed8 <udp_recv>:
 800bed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bedc:	4604      	mov	r4, r0
 800bede:	4698      	mov	r8, r3
 800bee0:	f640 3394 	movw	r3, #2964	; 0xb94
 800bee4:	435c      	muls	r4, r3
 800bee6:	4608      	mov	r0, r1
 800bee8:	4915      	ldr	r1, [pc, #84]	; (800bf40 <udp_recv+0x68>)
 800beea:	190f      	adds	r7, r1, r4
 800beec:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800bef0:	5b0b      	ldrh	r3, [r1, r4]
 800bef2:	4563      	cmp	r3, ip
 800bef4:	d021      	beq.n	800bf3a <udp_recv+0x62>
 800bef6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800befa:	fb03 fc0c 	mul.w	ip, r3, ip
 800befe:	eb0c 0604 	add.w	r6, ip, r4
 800bf02:	440e      	add	r6, r1
 800bf04:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800bf08:	3404      	adds	r4, #4
 800bf0a:	4295      	cmp	r5, r2
 800bf0c:	bf28      	it	cs
 800bf0e:	4615      	movcs	r5, r2
 800bf10:	4464      	add	r4, ip
 800bf12:	462a      	mov	r2, r5
 800bf14:	4421      	add	r1, r4
 800bf16:	f7ff ff67 	bl	800bde8 <net_memcpy>
 800bf1a:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800bf1e:	f8c8 3000 	str.w	r3, [r8]
 800bf22:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800bf26:	9b06      	ldr	r3, [sp, #24]
 800bf28:	801a      	strh	r2, [r3, #0]
 800bf2a:	887b      	ldrh	r3, [r7, #2]
 800bf2c:	3301      	adds	r3, #1
 800bf2e:	f003 0301 	and.w	r3, r3, #1
 800bf32:	807b      	strh	r3, [r7, #2]
 800bf34:	4628      	mov	r0, r5
 800bf36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf3a:	2500      	movs	r5, #0
 800bf3c:	e7fa      	b.n	800bf34 <udp_recv+0x5c>
 800bf3e:	bf00      	nop
 800bf40:	200022a4 	andcs	r2, r0, r4, lsr #5

0800bf44 <udp_recv2>:
 800bf44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf46:	f640 3594 	movw	r5, #2964	; 0xb94
 800bf4a:	4368      	muls	r0, r5
 800bf4c:	4c0f      	ldr	r4, [pc, #60]	; (800bf8c <udp_recv2+0x48>)
 800bf4e:	1827      	adds	r7, r4, r0
 800bf50:	887d      	ldrh	r5, [r7, #2]
 800bf52:	5a26      	ldrh	r6, [r4, r0]
 800bf54:	42ae      	cmp	r6, r5
 800bf56:	d017      	beq.n	800bf88 <udp_recv2+0x44>
 800bf58:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800bf5c:	fb0c f505 	mul.w	r5, ip, r5
 800bf60:	1d06      	adds	r6, r0, #4
 800bf62:	442e      	add	r6, r5
 800bf64:	4405      	add	r5, r0
 800bf66:	4426      	add	r6, r4
 800bf68:	442c      	add	r4, r5
 800bf6a:	600e      	str	r6, [r1, #0]
 800bf6c:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800bf70:	6011      	str	r1, [r2, #0]
 800bf72:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800bf76:	801a      	strh	r2, [r3, #0]
 800bf78:	887b      	ldrh	r3, [r7, #2]
 800bf7a:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800bf7e:	3301      	adds	r3, #1
 800bf80:	f003 0301 	and.w	r3, r3, #1
 800bf84:	807b      	strh	r3, [r7, #2]
 800bf86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf88:	2000      	movs	r0, #0
 800bf8a:	e7fc      	b.n	800bf86 <udp_recv2+0x42>
 800bf8c:	200022a4 	andcs	r2, r0, r4, lsr #5

0800bf90 <udp_send>:
 800bf90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800bf94:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c0c8 <udp_send+0x138>
 800bf98:	461c      	mov	r4, r3
 800bf9a:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800bf9e:	4607      	mov	r7, r0
 800bfa0:	4688      	mov	r8, r1
 800bfa2:	4616      	mov	r6, r2
 800bfa4:	2b00      	cmp	r3, #0
 800bfa6:	f000 808b 	beq.w	800c0c0 <udp_send+0x130>
 800bfaa:	1c63      	adds	r3, r4, #1
 800bfac:	d141      	bne.n	800c032 <udp_send+0xa2>
 800bfae:	4a47      	ldr	r2, [pc, #284]	; (800c0cc <udp_send+0x13c>)
 800bfb0:	2307      	movs	r3, #7
 800bfb2:	4611      	mov	r1, r2
 800bfb4:	20ff      	movs	r0, #255	; 0xff
 800bfb6:	e001      	b.n	800bfbc <udp_send+0x2c>
 800bfb8:	f802 0b01 	strb.w	r0, [r2], #1
 800bfbc:	3b01      	subs	r3, #1
 800bfbe:	d1fb      	bne.n	800bfb8 <udp_send+0x28>
 800bfc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bfc4:	83cb      	strh	r3, [r1, #30]
 800bfc6:	840b      	strh	r3, [r1, #32]
 800bfc8:	2500      	movs	r5, #0
 800bfca:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c0d0 <udp_send+0x140>
 800bfce:	4c3f      	ldr	r4, [pc, #252]	; (800c0cc <udp_send+0x13c>)
 800bfd0:	f8ba 3000 	ldrh.w	r3, [sl]
 800bfd4:	2114      	movs	r1, #20
 800bfd6:	8263      	strh	r3, [r4, #18]
 800bfd8:	f106 031c 	add.w	r3, r6, #28
 800bfdc:	ba5b      	rev16	r3, r3
 800bfde:	f104 000e 	add.w	r0, r4, #14
 800bfe2:	8223      	strh	r3, [r4, #16]
 800bfe4:	8325      	strh	r5, [r4, #24]
 800bfe6:	f001 fc0e 	bl	800d806 <net_chksum>
 800bfea:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800bfee:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800bff2:	ba5b      	rev16	r3, r3
 800bff4:	8463      	strh	r3, [r4, #34]	; 0x22
 800bff6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800bffa:	4632      	mov	r2, r6
 800bffc:	ba5b      	rev16	r3, r3
 800bffe:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c000:	f106 0308 	add.w	r3, r6, #8
 800c004:	ba5b      	rev16	r3, r3
 800c006:	bf28      	it	cs
 800c008:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c00c:	4641      	mov	r1, r8
 800c00e:	8320      	strh	r0, [r4, #24]
 800c010:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c014:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c016:	f7ff fee7 	bl	800bde8 <net_memcpy>
 800c01a:	4620      	mov	r0, r4
 800c01c:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c020:	f004 fa6c 	bl	80104fc <emac_eth_send>
 800c024:	f8ba 3000 	ldrh.w	r3, [sl]
 800c028:	4628      	mov	r0, r5
 800c02a:	3301      	adds	r3, #1
 800c02c:	f8aa 3000 	strh.w	r3, [sl]
 800c030:	e037      	b.n	800c0a2 <udp_send+0x112>
 800c032:	4b28      	ldr	r3, [pc, #160]	; (800c0d4 <udp_send+0x144>)
 800c034:	681b      	ldr	r3, [r3, #0]
 800c036:	43a3      	bics	r3, r4
 800c038:	d10f      	bne.n	800c05a <udp_send+0xca>
 800c03a:	2307      	movs	r3, #7
 800c03c:	21ff      	movs	r1, #255	; 0xff
 800c03e:	4a23      	ldr	r2, [pc, #140]	; (800c0cc <udp_send+0x13c>)
 800c040:	e001      	b.n	800c046 <udp_send+0xb6>
 800c042:	f802 1b01 	strb.w	r1, [r2], #1
 800c046:	3b01      	subs	r3, #1
 800c048:	d1fb      	bne.n	800c042 <udp_send+0xb2>
 800c04a:	2204      	movs	r2, #4
 800c04c:	4822      	ldr	r0, [pc, #136]	; (800c0d8 <udp_send+0x148>)
 800c04e:	eb0d 0102 	add.w	r1, sp, r2
 800c052:	9401      	str	r4, [sp, #4]
 800c054:	f7ff febe 	bl	800bdd4 <memcpy.isra.0>
 800c058:	e7b6      	b.n	800bfc8 <udp_send+0x38>
 800c05a:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c05e:	2be0      	cmp	r3, #224	; 0xe0
 800c060:	d10e      	bne.n	800c080 <udp_send+0xf0>
 800c062:	491e      	ldr	r1, [pc, #120]	; (800c0dc <udp_send+0x14c>)
 800c064:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c068:	70cb      	strb	r3, [r1, #3]
 800c06a:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c06e:	710b      	strb	r3, [r1, #4]
 800c070:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c074:	2206      	movs	r2, #6
 800c076:	4815      	ldr	r0, [pc, #84]	; (800c0cc <udp_send+0x13c>)
 800c078:	714b      	strb	r3, [r1, #5]
 800c07a:	f7ff feab 	bl	800bdd4 <memcpy.isra.0>
 800c07e:	e7e4      	b.n	800c04a <udp_send+0xba>
 800c080:	4b17      	ldr	r3, [pc, #92]	; (800c0e0 <udp_send+0x150>)
 800c082:	681b      	ldr	r3, [r3, #0]
 800c084:	43a3      	bics	r3, r4
 800c086:	d00f      	beq.n	800c0a8 <udp_send+0x118>
 800c088:	4d16      	ldr	r5, [pc, #88]	; (800c0e4 <udp_send+0x154>)
 800c08a:	4910      	ldr	r1, [pc, #64]	; (800c0cc <udp_send+0x13c>)
 800c08c:	6828      	ldr	r0, [r5, #0]
 800c08e:	f001 f885 	bl	800d19c <arp_cache_lookup>
 800c092:	682b      	ldr	r3, [r5, #0]
 800c094:	4298      	cmp	r0, r3
 800c096:	d0d8      	beq.n	800c04a <udp_send+0xba>
 800c098:	4813      	ldr	r0, [pc, #76]	; (800c0e8 <udp_send+0x158>)
 800c09a:	f002 fd89 	bl	800ebb0 <console_error>
 800c09e:	f06f 0002 	mvn.w	r0, #2
 800c0a2:	b002      	add	sp, #8
 800c0a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0a8:	4620      	mov	r0, r4
 800c0aa:	4908      	ldr	r1, [pc, #32]	; (800c0cc <udp_send+0x13c>)
 800c0ac:	f001 f876 	bl	800d19c <arp_cache_lookup>
 800c0b0:	42a0      	cmp	r0, r4
 800c0b2:	d0ca      	beq.n	800c04a <udp_send+0xba>
 800c0b4:	480d      	ldr	r0, [pc, #52]	; (800c0ec <udp_send+0x15c>)
 800c0b6:	f002 fd7b 	bl	800ebb0 <console_error>
 800c0ba:	f06f 0001 	mvn.w	r0, #1
 800c0be:	e7f0      	b.n	800c0a2 <udp_send+0x112>
 800c0c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c0c4:	e7ed      	b.n	800c0a2 <udp_send+0x112>
 800c0c6:	bf00      	nop
 800c0c8:	20002284 	andcs	r2, r0, r4, lsl #5
 800c0cc:	20007f44 	andcs	r7, r0, r4, asr #30
 800c0d0:	20002280 	andcs	r2, r0, r0, lsl #5
 800c0d4:	20002274 	andcs	r2, r0, r4, ror r2
 800c0d8:	20007f62 	andcs	r7, r0, r2, ror #30
 800c0dc:	20000010 	andcs	r0, r0, r0, lsl r0
 800c0e0:	2000227c 	andcs	r2, r0, ip, ror r2
 800c0e4:	20002278 	andcs	r2, r0, r8, ror r2
 800c0e8:	080122e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sp}
 800c0ec:	08012307 	stmdaeq	r1, {r0, r1, r2, r8, r9, sp}

0800c0f0 <strlen>:
 800c0f0:	4603      	mov	r3, r0
 800c0f2:	461a      	mov	r2, r3
 800c0f4:	7811      	ldrb	r1, [r2, #0]
 800c0f6:	3301      	adds	r3, #1
 800c0f8:	2900      	cmp	r1, #0
 800c0fa:	d1fa      	bne.n	800c0f2 <strlen+0x2>
 800c0fc:	1a10      	subs	r0, r2, r0
 800c0fe:	4770      	bx	lr

0800c100 <strcmp>:
 800c100:	1e43      	subs	r3, r0, #1
 800c102:	3901      	subs	r1, #1
 800c104:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c108:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c10c:	4290      	cmp	r0, r2
 800c10e:	d001      	beq.n	800c114 <strcmp+0x14>
 800c110:	1a80      	subs	r0, r0, r2
 800c112:	e001      	b.n	800c118 <strcmp+0x18>
 800c114:	2800      	cmp	r0, #0
 800c116:	d1f5      	bne.n	800c104 <strcmp+0x4>
 800c118:	4770      	bx	lr

0800c11a <strcpy.isra.0>:
 800c11a:	3801      	subs	r0, #1
 800c11c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c120:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c124:	2b00      	cmp	r3, #0
 800c126:	d1f9      	bne.n	800c11c <strcpy.isra.0+0x2>
 800c128:	4770      	bx	lr

0800c12a <strcat.isra.0>:
 800c12a:	b538      	push	{r3, r4, r5, lr}
 800c12c:	4604      	mov	r4, r0
 800c12e:	460d      	mov	r5, r1
 800c130:	f7ff ffde 	bl	800c0f0 <strlen>
 800c134:	4629      	mov	r1, r5
 800c136:	4420      	add	r0, r4
 800c138:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c13c:	f7ff bfed 	b.w	800c11a <strcpy.isra.0>

0800c140 <MDNS::MDNS()>:
 800c140:	b513      	push	{r0, r1, r4, lr}
 800c142:	4604      	mov	r4, r0
 800c144:	a901      	add	r1, sp, #4
 800c146:	4804      	ldr	r0, [pc, #16]	; (800c158 <MDNS::MDNS()+0x18>)
 800c148:	f002 fe8c 	bl	800ee64 <inet_aton>
 800c14c:	4620      	mov	r0, r4
 800c14e:	4b03      	ldr	r3, [pc, #12]	; (800c15c <MDNS::MDNS()+0x1c>)
 800c150:	9a01      	ldr	r2, [sp, #4]
 800c152:	601a      	str	r2, [r3, #0]
 800c154:	b002      	add	sp, #8
 800c156:	bd10      	pop	{r4, pc}
 800c158:	08012338 	stmdaeq	r1, {r3, r4, r5, r8, r9, sp}
 800c15c:	20008538 	andcs	r8, r0, r8, lsr r5

0800c160 <MDNS::SetName(char const*)>:
 800c160:	b538      	push	{r3, r4, r5, lr}
 800c162:	4d0b      	ldr	r5, [pc, #44]	; (800c190 <MDNS::SetName(char const*)+0x30>)
 800c164:	460c      	mov	r4, r1
 800c166:	6828      	ldr	r0, [r5, #0]
 800c168:	b108      	cbz	r0, 800c16e <MDNS::SetName(char const*)+0xe>
 800c16a:	f002 fe75 	bl	800ee58 <operator delete[](void*)>
 800c16e:	4620      	mov	r0, r4
 800c170:	f7ff ffbe 	bl	800c0f0 <strlen>
 800c174:	3007      	adds	r0, #7
 800c176:	f002 fe73 	bl	800ee60 <operator new[](unsigned int)>
 800c17a:	4621      	mov	r1, r4
 800c17c:	6028      	str	r0, [r5, #0]
 800c17e:	f7ff ffcc 	bl	800c11a <strcpy.isra.0>
 800c182:	6828      	ldr	r0, [r5, #0]
 800c184:	4903      	ldr	r1, [pc, #12]	; (800c194 <MDNS::SetName(char const*)+0x34>)
 800c186:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c18a:	f7ff bfce 	b.w	800c12a <strcat.isra.0>
 800c18e:	bf00      	nop
 800c190:	20008968 	andcs	r8, r0, r8, ror #18
 800c194:	08012348 	stmdaeq	r1, {r3, r6, r8, r9, sp}

0800c198 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800c198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c19c:	f04f 0e00 	mov.w	lr, #0
 800c1a0:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800c1a4:	4675      	mov	r5, lr
 800c1a6:	4e1b      	ldr	r6, [pc, #108]	; (800c214 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800c1a8:	4f1b      	ldr	r7, [pc, #108]	; (800c218 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800c1aa:	780b      	ldrb	r3, [r1, #0]
 800c1ac:	1c68      	adds	r0, r5, #1
 800c1ae:	b913      	cbnz	r3, 800c1b6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800c1b0:	7013      	strb	r3, [r2, #0]
 800c1b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c1b6:	2b3f      	cmp	r3, #63	; 0x3f
 800c1b8:	d91c      	bls.n	800c1f4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800c1ba:	7849      	ldrb	r1, [r1, #1]
 800c1bc:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800c1c0:	430b      	orrs	r3, r1
 800c1c2:	6839      	ldr	r1, [r7, #0]
 800c1c4:	f1be 0f00 	cmp.w	lr, #0
 800c1c8:	bf08      	it	eq
 800c1ca:	4605      	moveq	r5, r0
 800c1cc:	5ccc      	ldrb	r4, [r1, r3]
 800c1ce:	3301      	adds	r3, #1
 800c1d0:	4419      	add	r1, r3
 800c1d2:	2300      	movs	r3, #0
 800c1d4:	42a3      	cmp	r3, r4
 800c1d6:	5cc8      	ldrb	r0, [r1, r3]
 800c1d8:	d309      	bcc.n	800c1ee <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800c1da:	f04f 0e01 	mov.w	lr, #1
 800c1de:	4421      	add	r1, r4
 800c1e0:	4414      	add	r4, r2
 800c1e2:	780b      	ldrb	r3, [r1, #0]
 800c1e4:	b10b      	cbz	r3, 800c1ea <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800c1e6:	f804 cb01 	strb.w	ip, [r4], #1
 800c1ea:	4622      	mov	r2, r4
 800c1ec:	e7dd      	b.n	800c1aa <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800c1ee:	54d0      	strb	r0, [r2, r3]
 800c1f0:	3301      	adds	r3, #1
 800c1f2:	e7ef      	b.n	800c1d4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800c1f4:	4688      	mov	r8, r1
 800c1f6:	18d4      	adds	r4, r2, r3
 800c1f8:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800c1fc:	f802 9b01 	strb.w	r9, [r2], #1
 800c200:	4294      	cmp	r4, r2
 800c202:	d1f9      	bne.n	800c1f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800c204:	1c5a      	adds	r2, r3, #1
 800c206:	4411      	add	r1, r2
 800c208:	f1be 0f00 	cmp.w	lr, #0
 800c20c:	d1e9      	bne.n	800c1e2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c20e:	181d      	adds	r5, r3, r0
 800c210:	e7e7      	b.n	800c1e2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800c212:	bf00      	nop
 800c214:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800c218:	2000896c 	andcs	r8, r0, ip, ror #18

0800c21c <MDNS::FindFirstDotFromRight(char const*) const>:
 800c21c:	b510      	push	{r4, lr}
 800c21e:	4608      	mov	r0, r1
 800c220:	460c      	mov	r4, r1
 800c222:	f7ff ff65 	bl	800c0f0 <strlen>
 800c226:	4420      	add	r0, r4
 800c228:	42a0      	cmp	r0, r4
 800c22a:	d903      	bls.n	800c234 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800c22c:	f810 3901 	ldrb.w	r3, [r0], #-1
 800c230:	2b2e      	cmp	r3, #46	; 0x2e
 800c232:	d1f9      	bne.n	800c228 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800c234:	3001      	adds	r0, #1
 800c236:	bd10      	pop	{r4, pc}

0800c238 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800c238:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c23a:	4614      	mov	r4, r2
 800c23c:	460f      	mov	r7, r1
 800c23e:	1c60      	adds	r0, r4, #1
 800c240:	463d      	mov	r5, r7
 800c242:	f817 6b01 	ldrb.w	r6, [r7], #1
 800c246:	b946      	cbnz	r6, 800c25a <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800c248:	1a69      	subs	r1, r5, r1
 800c24a:	7021      	strb	r1, [r4, #0]
 800c24c:	7829      	ldrb	r1, [r5, #0]
 800c24e:	b949      	cbnz	r1, 800c264 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800c250:	b10b      	cbz	r3, 800c256 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800c252:	f800 1b01 	strb.w	r1, [r0], #1
 800c256:	1a80      	subs	r0, r0, r2
 800c258:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c25a:	2e2e      	cmp	r6, #46	; 0x2e
 800c25c:	d0f4      	beq.n	800c248 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800c25e:	f800 6b01 	strb.w	r6, [r0], #1
 800c262:	e7ed      	b.n	800c240 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800c264:	4604      	mov	r4, r0
 800c266:	1c69      	adds	r1, r5, #1
 800c268:	e7e8      	b.n	800c23c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800c26c <MDNS::CreateAnswerLocalIpAddress()>:
 800c26c:	2384      	movs	r3, #132	; 0x84
 800c26e:	b510      	push	{r4, lr}
 800c270:	4c0f      	ldr	r4, [pc, #60]	; (800c2b0 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800c272:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800c276:	80e3      	strh	r3, [r4, #6]
 800c278:	2300      	movs	r3, #0
 800c27a:	490e      	ldr	r1, [pc, #56]	; (800c2b4 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800c27c:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800c280:	6809      	ldr	r1, [r1, #0]
 800c282:	f104 0210 	add.w	r2, r4, #16
 800c286:	2301      	movs	r3, #1
 800c288:	f7ff ffd6 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c28c:	490a      	ldr	r1, [pc, #40]	; (800c2b8 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800c28e:	1813      	adds	r3, r2, r0
 800c290:	5011      	str	r1, [r2, r0]
 800c292:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800c296:	605a      	str	r2, [r3, #4]
 800c298:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c29c:	811a      	strh	r2, [r3, #8]
 800c29e:	4a07      	ldr	r2, [pc, #28]	; (800c2bc <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800c2a0:	6812      	ldr	r2, [r2, #0]
 800c2a2:	6952      	ldr	r2, [r2, #20]
 800c2a4:	f8c3 200a 	str.w	r2, [r3, #10]
 800c2a8:	1b1b      	subs	r3, r3, r4
 800c2aa:	330a      	adds	r3, #10
 800c2ac:	6023      	str	r3, [r4, #0]
 800c2ae:	bd10      	pop	{r4, pc}
 800c2b0:	2000853c 	andcs	r8, r0, ip, lsr r5
 800c2b4:	20008968 	andcs	r8, r0, r8, ror #18
 800c2b8:	01800100 	orreq	r0, r0, r0, lsl #2
 800c2bc:	20008970 	andcs	r8, r0, r0, ror r9

0800c2c0 <MDNS::Start()>:
 800c2c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c2c2:	4c1d      	ldr	r4, [pc, #116]	; (800c338 <MDNS::Start()+0x78>)
 800c2c4:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800c2c8:	4605      	mov	r5, r0
 800c2ca:	6820      	ldr	r0, [r4, #0]
 800c2cc:	f000 fb25 	bl	800c91a <Network::Begin(unsigned short)>
 800c2d0:	4e1a      	ldr	r6, [pc, #104]	; (800c33c <MDNS::Start()+0x7c>)
 800c2d2:	4f1b      	ldr	r7, [pc, #108]	; (800c340 <MDNS::Start()+0x80>)
 800c2d4:	4601      	mov	r1, r0
 800c2d6:	6030      	str	r0, [r6, #0]
 800c2d8:	683a      	ldr	r2, [r7, #0]
 800c2da:	6820      	ldr	r0, [r4, #0]
 800c2dc:	f000 fb2e 	bl	800c93c <Network::JoinGroup(int, unsigned int)>
 800c2e0:	4b18      	ldr	r3, [pc, #96]	; (800c344 <MDNS::Start()+0x84>)
 800c2e2:	681b      	ldr	r3, [r3, #0]
 800c2e4:	b923      	cbnz	r3, 800c2f0 <MDNS::Start()+0x30>
 800c2e6:	6821      	ldr	r1, [r4, #0]
 800c2e8:	4628      	mov	r0, r5
 800c2ea:	3120      	adds	r1, #32
 800c2ec:	f7ff ff38 	bl	800c160 <MDNS::SetName(char const*)>
 800c2f0:	4628      	mov	r0, r5
 800c2f2:	f7ff ffbb 	bl	800c26c <MDNS::CreateAnswerLocalIpAddress()>
 800c2f6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c2fa:	4913      	ldr	r1, [pc, #76]	; (800c348 <MDNS::Start()+0x88>)
 800c2fc:	7830      	ldrb	r0, [r6, #0]
 800c2fe:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c302:	9300      	str	r3, [sp, #0]
 800c304:	683b      	ldr	r3, [r7, #0]
 800c306:	f7ff fe43 	bl	800bf90 <udp_send>
 800c30a:	233f      	movs	r3, #63	; 0x3f
 800c30c:	6820      	ldr	r0, [r4, #0]
 800c30e:	4c0f      	ldr	r4, [pc, #60]	; (800c34c <MDNS::Start()+0x8c>)
 800c310:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800c314:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800c318:	b929      	cbnz	r1, 800c326 <MDNS::Start()+0x66>
 800c31a:	4413      	add	r3, r2
 800c31c:	429a      	cmp	r2, r3
 800c31e:	d006      	beq.n	800c32e <MDNS::Start()+0x6e>
 800c320:	f802 1b01 	strb.w	r1, [r2], #1
 800c324:	e7fa      	b.n	800c31c <MDNS::Start()+0x5c>
 800c326:	3b01      	subs	r3, #1
 800c328:	f802 1b01 	strb.w	r1, [r2], #1
 800c32c:	d1f2      	bne.n	800c314 <MDNS::Start()+0x54>
 800c32e:	2300      	movs	r3, #0
 800c330:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800c334:	b003      	add	sp, #12
 800c336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c338:	20008970 	andcs	r8, r0, r0, ror r9
 800c33c:	20000018 	andcs	r0, r0, r8, lsl r0
 800c340:	20008538 	andcs	r8, r0, r8, lsr r5
 800c344:	20008968 	andcs	r8, r0, r8, ror #18
 800c348:	2000853c 	andcs	r8, r0, ip, lsr r5
 800c34c:	08012348 	stmdaeq	r1, {r3, r6, r8, r9, sp}

0800c350 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800c350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c354:	4c1b      	ldr	r4, [pc, #108]	; (800c3c4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800c356:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800c35a:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800c35e:	2300      	movs	r3, #0
 800c360:	f854 100c 	ldr.w	r1, [r4, ip]
 800c364:	4607      	mov	r7, r0
 800c366:	f7ff ff67 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c36a:	2301      	movs	r3, #1
 800c36c:	7bac      	ldrb	r4, [r5, #14]
 800c36e:	4616      	mov	r6, r2
 800c370:	4915      	ldr	r1, [pc, #84]	; (800c3c8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800c372:	4402      	add	r2, r0
 800c374:	4815      	ldr	r0, [pc, #84]	; (800c3cc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800c376:	429c      	cmp	r4, r3
 800c378:	bf18      	it	ne
 800c37a:	4601      	movne	r1, r0
 800c37c:	4638      	mov	r0, r7
 800c37e:	f7ff ff5b 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c382:	4b13      	ldr	r3, [pc, #76]	; (800c3d0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800c384:	1814      	adds	r4, r2, r0
 800c386:	5013      	str	r3, [r2, r0]
 800c388:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c38c:	6063      	str	r3, [r4, #4]
 800c38e:	4b11      	ldr	r3, [pc, #68]	; (800c3d4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800c390:	f8d3 8000 	ldr.w	r8, [r3]
 800c394:	4640      	mov	r0, r8
 800c396:	f7ff feab 	bl	800c0f0 <strlen>
 800c39a:	f100 0308 	add.w	r3, r0, #8
 800c39e:	ba5b      	rev16	r3, r3
 800c3a0:	8123      	strh	r3, [r4, #8]
 800c3a2:	2300      	movs	r3, #0
 800c3a4:	f8c4 300a 	str.w	r3, [r4, #10]
 800c3a8:	89ab      	ldrh	r3, [r5, #12]
 800c3aa:	f104 0210 	add.w	r2, r4, #16
 800c3ae:	ba5b      	rev16	r3, r3
 800c3b0:	81e3      	strh	r3, [r4, #14]
 800c3b2:	4641      	mov	r1, r8
 800c3b4:	2301      	movs	r3, #1
 800c3b6:	4638      	mov	r0, r7
 800c3b8:	f7ff ff3e 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c3bc:	4410      	add	r0, r2
 800c3be:	1b80      	subs	r0, r0, r6
 800c3c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3c4:	20008740 	andcs	r8, r0, r0, asr #14
 800c3c8:	08012344 	stmdaeq	r1, {r2, r6, r8, r9, sp}
 800c3cc:	08012361 	stmdaeq	r1, {r0, r5, r6, r8, r9, sp}
 800c3d0:	01802100 	orreq	r2, r0, r0, lsl #2
 800c3d4:	20008968 	andcs	r8, r0, r8, ror #18

0800c3d8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800c3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3dc:	4e19      	ldr	r6, [pc, #100]	; (800c444 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800c3de:	010f      	lsls	r7, r1, #4
 800c3e0:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800c3e4:	2300      	movs	r3, #0
 800c3e6:	59f1      	ldr	r1, [r6, r7]
 800c3e8:	4604      	mov	r4, r0
 800c3ea:	f7ff ff25 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c3ee:	2301      	movs	r3, #1
 800c3f0:	7bae      	ldrb	r6, [r5, #14]
 800c3f2:	4690      	mov	r8, r2
 800c3f4:	4914      	ldr	r1, [pc, #80]	; (800c448 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800c3f6:	4402      	add	r2, r0
 800c3f8:	4814      	ldr	r0, [pc, #80]	; (800c44c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800c3fa:	429e      	cmp	r6, r3
 800c3fc:	bf18      	it	ne
 800c3fe:	4601      	movne	r1, r0
 800c400:	4620      	mov	r0, r4
 800c402:	f7ff ff19 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c406:	4b12      	ldr	r3, [pc, #72]	; (800c450 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800c408:	1816      	adds	r6, r2, r0
 800c40a:	5013      	str	r3, [r2, r0]
 800c40c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c410:	68a8      	ldr	r0, [r5, #8]
 800c412:	6073      	str	r3, [r6, #4]
 800c414:	f106 040b 	add.w	r4, r6, #11
 800c418:	b938      	cbnz	r0, 800c42a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800c41a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c41e:	72b0      	strb	r0, [r6, #10]
 800c420:	8133      	strh	r3, [r6, #8]
 800c422:	eba4 0008 	sub.w	r0, r4, r8
 800c426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c42a:	f7ff fe61 	bl	800c0f0 <strlen>
 800c42e:	4607      	mov	r7, r0
 800c430:	1c43      	adds	r3, r0, #1
 800c432:	72b0      	strb	r0, [r6, #10]
 800c434:	ba5b      	rev16	r3, r3
 800c436:	4620      	mov	r0, r4
 800c438:	68a9      	ldr	r1, [r5, #8]
 800c43a:	8133      	strh	r3, [r6, #8]
 800c43c:	f7ff fe6d 	bl	800c11a <strcpy.isra.0>
 800c440:	443c      	add	r4, r7
 800c442:	e7ee      	b.n	800c422 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800c444:	20008740 	andcs	r8, r0, r0, asr #14
 800c448:	08012344 	stmdaeq	r1, {r2, r6, r8, r9, sp}
 800c44c:	08012361 	stmdaeq	r1, {r0, r5, r6, r8, r9, sp}
 800c450:	01801000 	orreq	r1, r0, r0

0800c454 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800c454:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c458:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c4bc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800c45c:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800c460:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800c464:	6869      	ldr	r1, [r5, #4]
 800c466:	2301      	movs	r3, #1
 800c468:	4607      	mov	r7, r0
 800c46a:	f7ff fee5 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c46e:	4b14      	ldr	r3, [pc, #80]	; (800c4c0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800c470:	f858 8009 	ldr.w	r8, [r8, r9]
 800c474:	5013      	str	r3, [r2, r0]
 800c476:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c47a:	1816      	adds	r6, r2, r0
 800c47c:	6073      	str	r3, [r6, #4]
 800c47e:	4640      	mov	r0, r8
 800c480:	4614      	mov	r4, r2
 800c482:	f7ff fe35 	bl	800c0f0 <strlen>
 800c486:	f100 030d 	add.w	r3, r0, #13
 800c48a:	ba5b      	rev16	r3, r3
 800c48c:	4641      	mov	r1, r8
 800c48e:	8133      	strh	r3, [r6, #8]
 800c490:	f106 020a 	add.w	r2, r6, #10
 800c494:	2300      	movs	r3, #0
 800c496:	4638      	mov	r0, r7
 800c498:	f7ff fece 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c49c:	2301      	movs	r3, #1
 800c49e:	4402      	add	r2, r0
 800c4a0:	7bad      	ldrb	r5, [r5, #14]
 800c4a2:	4808      	ldr	r0, [pc, #32]	; (800c4c4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800c4a4:	4908      	ldr	r1, [pc, #32]	; (800c4c8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800c4a6:	429d      	cmp	r5, r3
 800c4a8:	bf18      	it	ne
 800c4aa:	4601      	movne	r1, r0
 800c4ac:	4638      	mov	r0, r7
 800c4ae:	f7ff fec3 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c4b2:	4410      	add	r0, r2
 800c4b4:	1b00      	subs	r0, r0, r4
 800c4b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c4ba:	bf00      	nop
 800c4bc:	20008740 	andcs	r8, r0, r0, asr #14
 800c4c0:	01000c00 	tsteq	r0, r0, lsl #24
 800c4c4:	08012361 	stmdaeq	r1, {r0, r5, r6, r8, r9, sp}
 800c4c8:	08012344 	stmdaeq	r1, {r2, r6, r8, r9, sp}

0800c4cc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800c4cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4ce:	460f      	mov	r7, r1
 800c4d0:	2301      	movs	r3, #1
 800c4d2:	490f      	ldr	r1, [pc, #60]	; (800c510 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800c4d4:	4606      	mov	r6, r0
 800c4d6:	f7ff feaf 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c4da:	4b0e      	ldr	r3, [pc, #56]	; (800c514 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800c4dc:	490e      	ldr	r1, [pc, #56]	; (800c518 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800c4de:	5013      	str	r3, [r2, r0]
 800c4e0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800c4e4:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800c4e8:	684f      	ldr	r7, [r1, #4]
 800c4ea:	1815      	adds	r5, r2, r0
 800c4ec:	606b      	str	r3, [r5, #4]
 800c4ee:	4638      	mov	r0, r7
 800c4f0:	4614      	mov	r4, r2
 800c4f2:	f7ff fdfd 	bl	800c0f0 <strlen>
 800c4f6:	1c83      	adds	r3, r0, #2
 800c4f8:	ba5b      	rev16	r3, r3
 800c4fa:	812b      	strh	r3, [r5, #8]
 800c4fc:	f105 020a 	add.w	r2, r5, #10
 800c500:	2301      	movs	r3, #1
 800c502:	4639      	mov	r1, r7
 800c504:	4630      	mov	r0, r6
 800c506:	f7ff fe97 	bl	800c238 <MDNS::WriteDnsName(char const*, char*, bool)>
 800c50a:	4410      	add	r0, r2
 800c50c:	1b00      	subs	r0, r0, r4
 800c50e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c510:	0801234f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sp}
 800c514:	01000c00 	tsteq	r0, r0, lsl #24
 800c518:	20008740 	andcs	r8, r0, r0, asr #14

0800c51c <MDNS::CreateMDNSMessage(unsigned int)>:
 800c51c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c51e:	2384      	movs	r3, #132	; 0x84
 800c520:	4d19      	ldr	r5, [pc, #100]	; (800c588 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800c522:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800c526:	80eb      	strh	r3, [r5, #6]
 800c528:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c52c:	f105 0410 	add.w	r4, r5, #16
 800c530:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800c534:	4622      	mov	r2, r4
 800c536:	4606      	mov	r6, r0
 800c538:	460f      	mov	r7, r1
 800c53a:	f7ff ff09 	bl	800c350 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800c53e:	4404      	add	r4, r0
 800c540:	4622      	mov	r2, r4
 800c542:	4639      	mov	r1, r7
 800c544:	4630      	mov	r0, r6
 800c546:	f7ff ff47 	bl	800c3d8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800c54a:	4404      	add	r4, r0
 800c54c:	4622      	mov	r2, r4
 800c54e:	4639      	mov	r1, r7
 800c550:	4630      	mov	r0, r6
 800c552:	f7ff ffbb 	bl	800c4cc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800c556:	4404      	add	r4, r0
 800c558:	4622      	mov	r2, r4
 800c55a:	4639      	mov	r1, r7
 800c55c:	4630      	mov	r0, r6
 800c55e:	f7ff ff79 	bl	800c454 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800c562:	4a0a      	ldr	r2, [pc, #40]	; (800c58c <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800c564:	4404      	add	r4, r0
 800c566:	f852 3b10 	ldr.w	r3, [r2], #16
 800c56a:	1e60      	subs	r0, r4, #1
 800c56c:	3b0c      	subs	r3, #12
 800c56e:	4619      	mov	r1, r3
 800c570:	3901      	subs	r1, #1
 800c572:	d204      	bcs.n	800c57e <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800c574:	441c      	add	r4, r3
 800c576:	4b06      	ldr	r3, [pc, #24]	; (800c590 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800c578:	1ae4      	subs	r4, r4, r3
 800c57a:	602c      	str	r4, [r5, #0]
 800c57c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c57e:	f812 6b01 	ldrb.w	r6, [r2], #1
 800c582:	f800 6f01 	strb.w	r6, [r0, #1]!
 800c586:	e7f3      	b.n	800c570 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800c588:	20008764 	andcs	r8, r0, r4, ror #14
 800c58c:	2000853c 	andcs	r8, r0, ip, lsr r5
 800c590:	20008768 	andcs	r8, r0, r8, ror #14

0800c594 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800c594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c598:	4d40      	ldr	r5, [pc, #256]	; (800c69c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800c59a:	b085      	sub	sp, #20
 800c59c:	682c      	ldr	r4, [r5, #0]
 800c59e:	4680      	mov	r8, r0
 800c5a0:	460f      	mov	r7, r1
 800c5a2:	4616      	mov	r6, r2
 800c5a4:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800c5a8:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800c5ac:	b11c      	cbz	r4, 800c5b6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800c5ae:	692a      	ldr	r2, [r5, #16]
 800c5b0:	2a00      	cmp	r2, #0
 800c5b2:	d16e      	bne.n	800c692 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800c5b4:	2401      	movs	r4, #1
 800c5b6:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800c5ba:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800c5be:	8193      	strh	r3, [r2, #12]
 800c5c0:	f882 b00e 	strb.w	fp, [r2, #14]
 800c5c4:	2f00      	cmp	r7, #0
 800c5c6:	d154      	bne.n	800c672 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800c5c8:	4b35      	ldr	r3, [pc, #212]	; (800c6a0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800c5ca:	6818      	ldr	r0, [r3, #0]
 800c5cc:	3020      	adds	r0, #32
 800c5ce:	f7ff fd8f 	bl	800c0f0 <strlen>
 800c5d2:	4607      	mov	r7, r0
 800c5d4:	4630      	mov	r0, r6
 800c5d6:	f7ff fd8b 	bl	800c0f0 <strlen>
 800c5da:	4438      	add	r0, r7
 800c5dc:	3001      	adds	r0, #1
 800c5de:	f002 fc3f 	bl	800ee60 <operator new[](unsigned int)>
 800c5e2:	4b2f      	ldr	r3, [pc, #188]	; (800c6a0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800c5e4:	f845 0009 	str.w	r0, [r5, r9]
 800c5e8:	6819      	ldr	r1, [r3, #0]
 800c5ea:	3120      	adds	r1, #32
 800c5ec:	f7ff fd95 	bl	800c11a <strcpy.isra.0>
 800c5f0:	f855 0009 	ldr.w	r0, [r5, r9]
 800c5f4:	4631      	mov	r1, r6
 800c5f6:	f7ff fd98 	bl	800c12a <strcat.isra.0>
 800c5fa:	4631      	mov	r1, r6
 800c5fc:	4640      	mov	r0, r8
 800c5fe:	f7ff fe0d 	bl	800c21c <MDNS::FindFirstDotFromRight(char const*) const>
 800c602:	eb05 0709 	add.w	r7, r5, r9
 800c606:	4605      	mov	r5, r0
 800c608:	f7ff fd72 	bl	800c0f0 <strlen>
 800c60c:	300d      	adds	r0, #13
 800c60e:	f002 fc27 	bl	800ee60 <operator new[](unsigned int)>
 800c612:	4629      	mov	r1, r5
 800c614:	6078      	str	r0, [r7, #4]
 800c616:	f7ff fd80 	bl	800c11a <strcpy.isra.0>
 800c61a:	4922      	ldr	r1, [pc, #136]	; (800c6a4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800c61c:	6878      	ldr	r0, [r7, #4]
 800c61e:	f7ff fd84 	bl	800c12a <strcat.isra.0>
 800c622:	4921      	ldr	r1, [pc, #132]	; (800c6a8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800c624:	4b21      	ldr	r3, [pc, #132]	; (800c6ac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800c626:	6878      	ldr	r0, [r7, #4]
 800c628:	f1bb 0f01 	cmp.w	fp, #1
 800c62c:	bf18      	it	ne
 800c62e:	4619      	movne	r1, r3
 800c630:	f7ff fd7b 	bl	800c12a <strcat.isra.0>
 800c634:	f1ba 0f00 	cmp.w	sl, #0
 800c638:	d009      	beq.n	800c64e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800c63a:	4650      	mov	r0, sl
 800c63c:	f7ff fd58 	bl	800c0f0 <strlen>
 800c640:	3001      	adds	r0, #1
 800c642:	f002 fc0d 	bl	800ee60 <operator new[](unsigned int)>
 800c646:	4651      	mov	r1, sl
 800c648:	60b8      	str	r0, [r7, #8]
 800c64a:	f7ff fd66 	bl	800c11a <strcpy.isra.0>
 800c64e:	4621      	mov	r1, r4
 800c650:	4640      	mov	r0, r8
 800c652:	f7ff ff63 	bl	800c51c <MDNS::CreateMDNSMessage(unsigned int)>
 800c656:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c65a:	4915      	ldr	r1, [pc, #84]	; (800c6b0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800c65c:	4815      	ldr	r0, [pc, #84]	; (800c6b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800c65e:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c662:	9300      	str	r3, [sp, #0]
 800c664:	4b14      	ldr	r3, [pc, #80]	; (800c6b8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800c666:	7800      	ldrb	r0, [r0, #0]
 800c668:	681b      	ldr	r3, [r3, #0]
 800c66a:	f7ff fc91 	bl	800bf90 <udp_send>
 800c66e:	2001      	movs	r0, #1
 800c670:	e010      	b.n	800c694 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800c672:	4638      	mov	r0, r7
 800c674:	f7ff fd3c 	bl	800c0f0 <strlen>
 800c678:	9003      	str	r0, [sp, #12]
 800c67a:	4630      	mov	r0, r6
 800c67c:	f7ff fd38 	bl	800c0f0 <strlen>
 800c680:	9b03      	ldr	r3, [sp, #12]
 800c682:	4418      	add	r0, r3
 800c684:	3001      	adds	r0, #1
 800c686:	f002 fbeb 	bl	800ee60 <operator new[](unsigned int)>
 800c68a:	4639      	mov	r1, r7
 800c68c:	f845 0009 	str.w	r0, [r5, r9]
 800c690:	e7ac      	b.n	800c5ec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800c692:	2000      	movs	r0, #0
 800c694:	b005      	add	sp, #20
 800c696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c69a:	bf00      	nop
 800c69c:	20008740 	andcs	r8, r0, r0, asr #14
 800c6a0:	20008970 	andcs	r8, r0, r0, ror r9
 800c6a4:	0801134f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, ip}
 800c6a8:	08012344 	stmdaeq	r1, {r2, r6, r8, r9, sp}
 800c6ac:	08012361 	stmdaeq	r1, {r0, r5, r6, r8, r9, sp}
 800c6b0:	20008764 	andcs	r8, r0, r4, ror #14
 800c6b4:	20000018 	andcs	r0, r0, r8, lsl r0
 800c6b8:	20008538 	andcs	r8, r0, r8, lsr r5

0800c6bc <MDNS::HandleRequest(unsigned short)>:
 800c6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6c0:	4605      	mov	r5, r0
 800c6c2:	2700      	movs	r7, #0
 800c6c4:	f04f 080c 	mov.w	r8, #12
 800c6c8:	b0c5      	sub	sp, #276	; 0x114
 800c6ca:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800c78c <MDNS::HandleRequest(unsigned short)+0xd0>
 800c6ce:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800c790 <MDNS::HandleRequest(unsigned short)+0xd4>
 800c6d2:	9103      	str	r1, [sp, #12]
 800c6d4:	9b03      	ldr	r3, [sp, #12]
 800c6d6:	42bb      	cmp	r3, r7
 800c6d8:	d802      	bhi.n	800c6e0 <MDNS::HandleRequest(unsigned short)+0x24>
 800c6da:	b045      	add	sp, #276	; 0x114
 800c6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6e0:	f8da 1000 	ldr.w	r1, [sl]
 800c6e4:	aa04      	add	r2, sp, #16
 800c6e6:	4441      	add	r1, r8
 800c6e8:	4628      	mov	r0, r5
 800c6ea:	f7ff fd55 	bl	800c198 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800c6ee:	f8da 2000 	ldr.w	r2, [sl]
 800c6f2:	4440      	add	r0, r8
 800c6f4:	1813      	adds	r3, r2, r0
 800c6f6:	885b      	ldrh	r3, [r3, #2]
 800c6f8:	f100 0804 	add.w	r8, r0, #4
 800c6fc:	ba5b      	rev16	r3, r3
 800c6fe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c702:	2b01      	cmp	r3, #1
 800c704:	d13d      	bne.n	800c782 <MDNS::HandleRequest(unsigned short)+0xc6>
 800c706:	5a14      	ldrh	r4, [r2, r0]
 800c708:	4b22      	ldr	r3, [pc, #136]	; (800c794 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800c70a:	ba64      	rev16	r4, r4
 800c70c:	6818      	ldr	r0, [r3, #0]
 800c70e:	a904      	add	r1, sp, #16
 800c710:	b2a4      	uxth	r4, r4
 800c712:	f7ff fcf5 	bl	800c100 <strcmp>
 800c716:	b968      	cbnz	r0, 800c734 <MDNS::HandleRequest(unsigned short)+0x78>
 800c718:	2c01      	cmp	r4, #1
 800c71a:	d10b      	bne.n	800c734 <MDNS::HandleRequest(unsigned short)+0x78>
 800c71c:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c720:	491d      	ldr	r1, [pc, #116]	; (800c798 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800c722:	481e      	ldr	r0, [pc, #120]	; (800c79c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800c724:	f831 2b04 	ldrh.w	r2, [r1], #4
 800c728:	9300      	str	r3, [sp, #0]
 800c72a:	4b1d      	ldr	r3, [pc, #116]	; (800c7a0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800c72c:	7800      	ldrb	r0, [r0, #0]
 800c72e:	681b      	ldr	r3, [r3, #0]
 800c730:	f7ff fc2e 	bl	800bf90 <udp_send>
 800c734:	481b      	ldr	r0, [pc, #108]	; (800c7a4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800c736:	a904      	add	r1, sp, #16
 800c738:	f7ff fce2 	bl	800c100 <strcmp>
 800c73c:	f04f 0900 	mov.w	r9, #0
 800c740:	4e19      	ldr	r6, [pc, #100]	; (800c7a8 <MDNS::HandleRequest(unsigned short)+0xec>)
 800c742:	9002      	str	r0, [sp, #8]
 800c744:	6833      	ldr	r3, [r6, #0]
 800c746:	b1c3      	cbz	r3, 800c77a <MDNS::HandleRequest(unsigned short)+0xbe>
 800c748:	9b02      	ldr	r3, [sp, #8]
 800c74a:	b123      	cbz	r3, 800c756 <MDNS::HandleRequest(unsigned short)+0x9a>
 800c74c:	6870      	ldr	r0, [r6, #4]
 800c74e:	a904      	add	r1, sp, #16
 800c750:	f7ff fcd6 	bl	800c100 <strcmp>
 800c754:	b988      	cbnz	r0, 800c77a <MDNS::HandleRequest(unsigned short)+0xbe>
 800c756:	2c0c      	cmp	r4, #12
 800c758:	d10f      	bne.n	800c77a <MDNS::HandleRequest(unsigned short)+0xbe>
 800c75a:	4649      	mov	r1, r9
 800c75c:	4628      	mov	r0, r5
 800c75e:	f7ff fedd 	bl	800c51c <MDNS::CreateMDNSMessage(unsigned int)>
 800c762:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c766:	480d      	ldr	r0, [pc, #52]	; (800c79c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800c768:	9300      	str	r3, [sp, #0]
 800c76a:	4b0d      	ldr	r3, [pc, #52]	; (800c7a0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800c76c:	f8bb 2000 	ldrh.w	r2, [fp]
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	490e      	ldr	r1, [pc, #56]	; (800c7ac <MDNS::HandleRequest(unsigned short)+0xf0>)
 800c774:	7800      	ldrb	r0, [r0, #0]
 800c776:	f7ff fc0b 	bl	800bf90 <udp_send>
 800c77a:	3610      	adds	r6, #16
 800c77c:	f1b9 0f00 	cmp.w	r9, #0
 800c780:	d001      	beq.n	800c786 <MDNS::HandleRequest(unsigned short)+0xca>
 800c782:	3701      	adds	r7, #1
 800c784:	e7a6      	b.n	800c6d4 <MDNS::HandleRequest(unsigned short)+0x18>
 800c786:	f04f 0901 	mov.w	r9, #1
 800c78a:	e7db      	b.n	800c744 <MDNS::HandleRequest(unsigned short)+0x88>
 800c78c:	2000896c 	andcs	r8, r0, ip, ror #18
 800c790:	20008764 	andcs	r8, r0, r4, ror #14
 800c794:	20008968 	andcs	r8, r0, r8, ror #18
 800c798:	2000853c 	andcs	r8, r0, ip, lsr r5
 800c79c:	20000018 	andcs	r0, r0, r8, lsl r0
 800c7a0:	20008538 	andcs	r8, r0, r8, lsr r5
 800c7a4:	0801234f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sp}
 800c7a8:	20008740 	andcs	r8, r0, r0, asr #14
 800c7ac:	20008768 	andcs	r8, r0, r8, ror #14

0800c7b0 <MDNS::Parse()>:
 800c7b0:	4b08      	ldr	r3, [pc, #32]	; (800c7d4 <MDNS::Parse()+0x24>)
 800c7b2:	681a      	ldr	r2, [r3, #0]
 800c7b4:	8853      	ldrh	r3, [r2, #2]
 800c7b6:	ba5b      	rev16	r3, r3
 800c7b8:	b299      	uxth	r1, r3
 800c7ba:	041b      	lsls	r3, r3, #16
 800c7bc:	d408      	bmi.n	800c7d0 <MDNS::Parse()+0x20>
 800c7be:	0b89      	lsrs	r1, r1, #14
 800c7c0:	d106      	bne.n	800c7d0 <MDNS::Parse()+0x20>
 800c7c2:	8891      	ldrh	r1, [r2, #4]
 800c7c4:	b28b      	uxth	r3, r1
 800c7c6:	b11b      	cbz	r3, 800c7d0 <MDNS::Parse()+0x20>
 800c7c8:	ba49      	rev16	r1, r1
 800c7ca:	b289      	uxth	r1, r1
 800c7cc:	f7ff bf76 	b.w	800c6bc <MDNS::HandleRequest(unsigned short)>
 800c7d0:	4770      	bx	lr
 800c7d2:	bf00      	nop
 800c7d4:	2000896c 	andcs	r8, r0, ip, ror #18

0800c7d8 <MDNS::Run()>:
 800c7d8:	b538      	push	{r3, r4, r5, lr}
 800c7da:	4d0c      	ldr	r5, [pc, #48]	; (800c80c <MDNS::Run()+0x34>)
 800c7dc:	4604      	mov	r4, r0
 800c7de:	480c      	ldr	r0, [pc, #48]	; (800c810 <MDNS::Run()+0x38>)
 800c7e0:	462b      	mov	r3, r5
 800c7e2:	4a0c      	ldr	r2, [pc, #48]	; (800c814 <MDNS::Run()+0x3c>)
 800c7e4:	490c      	ldr	r1, [pc, #48]	; (800c818 <MDNS::Run()+0x40>)
 800c7e6:	7800      	ldrb	r0, [r0, #0]
 800c7e8:	f7ff fbac 	bl	800bf44 <udp_recv2>
 800c7ec:	4b0b      	ldr	r3, [pc, #44]	; (800c81c <MDNS::Run()+0x44>)
 800c7ee:	882a      	ldrh	r2, [r5, #0]
 800c7f0:	8018      	strh	r0, [r3, #0]
 800c7f2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800c7f6:	429a      	cmp	r2, r3
 800c7f8:	d106      	bne.n	800c808 <MDNS::Run()+0x30>
 800c7fa:	280c      	cmp	r0, #12
 800c7fc:	d904      	bls.n	800c808 <MDNS::Run()+0x30>
 800c7fe:	4620      	mov	r0, r4
 800c800:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c804:	f7ff bfd4 	b.w	800c7b0 <MDNS::Parse()>
 800c808:	bd38      	pop	{r3, r4, r5, pc}
 800c80a:	bf00      	nop
 800c80c:	20008534 	andcs	r8, r0, r4, lsr r5
 800c810:	20000018 	andcs	r0, r0, r8, lsl r0
 800c814:	20008530 	andcs	r8, r0, r0, lsr r5
 800c818:	2000896c 	andcs	r8, r0, ip, ror #18
 800c81c:	20008760 	andcs	r8, r0, r0, ror #14

0800c820 <MDNS::Print()>:
 800c820:	b510      	push	{r4, lr}
 800c822:	4816      	ldr	r0, [pc, #88]	; (800c87c <MDNS::Print()+0x5c>)
 800c824:	f7fc f80c 	bl	8008840 <printf>
 800c828:	4b15      	ldr	r3, [pc, #84]	; (800c880 <MDNS::Print()+0x60>)
 800c82a:	681b      	ldr	r3, [r3, #0]
 800c82c:	3301      	adds	r3, #1
 800c82e:	d104      	bne.n	800c83a <MDNS::Print()+0x1a>
 800c830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c834:	4813      	ldr	r0, [pc, #76]	; (800c884 <MDNS::Print()+0x64>)
 800c836:	f7fc b803 	b.w	8008840 <printf>
 800c83a:	4b13      	ldr	r3, [pc, #76]	; (800c888 <MDNS::Print()+0x68>)
 800c83c:	4c13      	ldr	r4, [pc, #76]	; (800c88c <MDNS::Print()+0x6c>)
 800c83e:	6819      	ldr	r1, [r3, #0]
 800c840:	4813      	ldr	r0, [pc, #76]	; (800c890 <MDNS::Print()+0x70>)
 800c842:	f7fb fffd 	bl	8008840 <printf>
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	b14b      	cbz	r3, 800c85e <MDNS::Print()+0x3e>
 800c84a:	4a12      	ldr	r2, [pc, #72]	; (800c894 <MDNS::Print()+0x74>)
 800c84c:	68a3      	ldr	r3, [r4, #8]
 800c84e:	6861      	ldr	r1, [r4, #4]
 800c850:	2b00      	cmp	r3, #0
 800c852:	bf08      	it	eq
 800c854:	4613      	moveq	r3, r2
 800c856:	4810      	ldr	r0, [pc, #64]	; (800c898 <MDNS::Print()+0x78>)
 800c858:	89a2      	ldrh	r2, [r4, #12]
 800c85a:	f7fb fff1 	bl	8008840 <printf>
 800c85e:	6923      	ldr	r3, [r4, #16]
 800c860:	b15b      	cbz	r3, 800c87a <MDNS::Print()+0x5a>
 800c862:	69a3      	ldr	r3, [r4, #24]
 800c864:	4a0b      	ldr	r2, [pc, #44]	; (800c894 <MDNS::Print()+0x74>)
 800c866:	6961      	ldr	r1, [r4, #20]
 800c868:	2b00      	cmp	r3, #0
 800c86a:	bf08      	it	eq
 800c86c:	4613      	moveq	r3, r2
 800c86e:	480a      	ldr	r0, [pc, #40]	; (800c898 <MDNS::Print()+0x78>)
 800c870:	8ba2      	ldrh	r2, [r4, #28]
 800c872:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c876:	f7fb bfe3 	b.w	8008840 <printf>
 800c87a:	bd10      	pop	{r4, pc}
 800c87c:	0801236c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sp}
 800c880:	20000018 	andcs	r0, r0, r8, lsl r0
 800c884:	08012372 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sp}
 800c888:	20008968 	andcs	r8, r0, r8, ror #18
 800c88c:	20008740 	andcs	r8, r0, r0, asr #14
 800c890:	08012380 	stmdaeq	r1, {r7, r8, r9, sp}
 800c894:	08011645 	stmdaeq	r1, {r0, r2, r6, r9, sl, ip}
 800c898:	0801238c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sp}

0800c89c <strncpy.constprop.0.isra.0>:
 800c89c:	233f      	movs	r3, #63	; 0x3f
 800c89e:	3901      	subs	r1, #1
 800c8a0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c8a4:	b92a      	cbnz	r2, 800c8b2 <strncpy.constprop.0.isra.0+0x16>
 800c8a6:	4403      	add	r3, r0
 800c8a8:	4298      	cmp	r0, r3
 800c8aa:	d006      	beq.n	800c8ba <strncpy.constprop.0.isra.0+0x1e>
 800c8ac:	f800 2b01 	strb.w	r2, [r0], #1
 800c8b0:	e7fa      	b.n	800c8a8 <strncpy.constprop.0.isra.0+0xc>
 800c8b2:	3b01      	subs	r3, #1
 800c8b4:	f800 2b01 	strb.w	r2, [r0], #1
 800c8b8:	d1f2      	bne.n	800c8a0 <strncpy.constprop.0.isra.0+0x4>
 800c8ba:	4770      	bx	lr

0800c8bc <Network::Network()>:
 800c8bc:	4a11      	ldr	r2, [pc, #68]	; (800c904 <Network::Network()+0x48>)
 800c8be:	2300      	movs	r3, #0
 800c8c0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800c8c4:	6010      	str	r0, [r2, #0]
 800c8c6:	2201      	movs	r2, #1
 800c8c8:	e9c0 2100 	strd	r2, r1, [r0]
 800c8cc:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800c8d0:	2200      	movs	r2, #0
 800c8d2:	e9c0 332e 	strd	r3, r3, [r0, #184]	; 0xb8
 800c8d6:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800c8da:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c8de:	490a      	ldr	r1, [pc, #40]	; (800c908 <Network::Network()+0x4c>)
 800c8e0:	6102      	str	r2, [r0, #16]
 800c8e2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800c8e6:	61c3      	str	r3, [r0, #28]
 800c8e8:	f880 3020 	strb.w	r3, [r0, #32]
 800c8ec:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800c8f0:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800c8f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c8f8:	f802 3f01 	strb.w	r3, [r2, #1]!
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	d1f9      	bne.n	800c8f4 <Network::Network()+0x38>
 800c900:	4770      	bx	lr
 800c902:	bf00      	nop
 800c904:	20008970 	andcs	r8, r0, r0, ror r9
 800c908:	08012397 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sp}

0800c90c <Network::Shutdown()>:
 800c90c:	b508      	push	{r3, lr}
 800c90e:	f7fb fd9d 	bl	800844c <network::display_emac_shutdown()>
 800c912:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c916:	f7fa bc6b 	b.w	80071f0 <net_shutdown>

0800c91a <Network::Begin(unsigned short)>:
 800c91a:	4608      	mov	r0, r1
 800c91c:	f7ff baa2 	b.w	800be64 <udp_bind>

0800c920 <Network::End(unsigned short)>:
 800c920:	4608      	mov	r0, r1
 800c922:	f7ff bab9 	b.w	800be98 <udp_unbind>

0800c926 <Network::MacAddressCopyTo(unsigned char*)>:
 800c926:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800c92a:	3901      	subs	r1, #1
 800c92c:	30a5      	adds	r0, #165	; 0xa5
 800c92e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c932:	4283      	cmp	r3, r0
 800c934:	f801 2f01 	strb.w	r2, [r1, #1]!
 800c938:	d1f9      	bne.n	800c92e <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800c93a:	4770      	bx	lr

0800c93c <Network::JoinGroup(int, unsigned int)>:
 800c93c:	4610      	mov	r0, r2
 800c93e:	f000 bee9 	b.w	800d714 <igmp_join>

0800c942 <Network::SetDefaultIp()>:
 800c942:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800c946:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800c94a:	041b      	lsls	r3, r3, #16
 800c94c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800c950:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800c954:	3302      	adds	r3, #2
 800c956:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800c95a:	22ff      	movs	r2, #255	; 0xff
 800c95c:	6143      	str	r3, [r0, #20]
 800c95e:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800c962:	4770      	bx	lr

0800c964 <Network::Init(NetworkParamsStore*)>:
 800c964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c968:	b0a5      	sub	sp, #148	; 0x94
 800c96a:	4604      	mov	r4, r0
 800c96c:	a80b      	add	r0, sp, #44	; 0x2c
 800c96e:	f000 f9b9 	bl	800cce4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800c972:	a80b      	add	r0, sp, #44	; 0x2c
 800c974:	f000 f9c2 	bl	800ccfc <NetworkParams::Load()>
 800c978:	b110      	cbz	r0, 800c980 <Network::Init(NetworkParamsStore*)+0x1c>
 800c97a:	a80b      	add	r0, sp, #44	; 0x2c
 800c97c:	f000 fb9b 	bl	800d0b6 <NetworkParams::Dump()>
 800c980:	f7fb fd62 	bl	8008448 <network::display_emac_start()>
 800c984:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c986:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800c98a:	9308      	str	r3, [sp, #32]
 800c98c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c98e:	4628      	mov	r0, r5
 800c990:	9309      	str	r3, [sp, #36]	; 0x24
 800c992:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c994:	f104 0620 	add.w	r6, r4, #32
 800c998:	930a      	str	r3, [sp, #40]	; 0x28
 800c99a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c99e:	7163      	strb	r3, [r4, #5]
 800c9a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c9a2:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800c9a6:	bf18      	it	ne
 800c9a8:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800c9ac:	061b      	lsls	r3, r3, #24
 800c9ae:	bf54      	ite	pl
 800c9b0:	2300      	movpl	r3, #0
 800c9b2:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800c9b6:	60e2      	str	r2, [r4, #12]
 800c9b8:	6123      	str	r3, [r4, #16]
 800c9ba:	f004 f84d 	bl	8010a58 <emac_start(unsigned char*)>
 800c9be:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800c9c2:	2b00      	cmp	r3, #0
 800c9c4:	f040 80bf 	bne.w	800cb46 <Network::Init(NetworkParamsStore*)+0x1e2>
 800c9c8:	497e      	ldr	r1, [pc, #504]	; (800cbc4 <Network::Init(NetworkParamsStore*)+0x260>)
 800c9ca:	f104 001f 	add.w	r0, r4, #31
 800c9ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c9d2:	1c5f      	adds	r7, r3, #1
 800c9d4:	2a00      	cmp	r2, #0
 800c9d6:	f040 80b2 	bne.w	800cb3e <Network::Init(NetworkParamsStore*)+0x1da>
 800c9da:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800c9de:	18e1      	adds	r1, r4, r3
 800c9e0:	0910      	lsrs	r0, r2, #4
 800c9e2:	2a9f      	cmp	r2, #159	; 0x9f
 800c9e4:	f002 020f 	and.w	r2, r2, #15
 800c9e8:	bf94      	ite	ls
 800c9ea:	3030      	addls	r0, #48	; 0x30
 800c9ec:	3037      	addhi	r0, #55	; 0x37
 800c9ee:	2a09      	cmp	r2, #9
 800c9f0:	bf94      	ite	ls
 800c9f2:	3230      	addls	r2, #48	; 0x30
 800c9f4:	3237      	addhi	r2, #55	; 0x37
 800c9f6:	4427      	add	r7, r4
 800c9f8:	f881 0020 	strb.w	r0, [r1, #32]
 800c9fc:	f887 2020 	strb.w	r2, [r7, #32]
 800ca00:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800ca04:	f103 0e02 	add.w	lr, r3, #2
 800ca08:	0910      	lsrs	r0, r2, #4
 800ca0a:	2a9f      	cmp	r2, #159	; 0x9f
 800ca0c:	f002 020f 	and.w	r2, r2, #15
 800ca10:	bf94      	ite	ls
 800ca12:	3030      	addls	r0, #48	; 0x30
 800ca14:	3037      	addhi	r0, #55	; 0x37
 800ca16:	f103 0c03 	add.w	ip, r3, #3
 800ca1a:	2a09      	cmp	r2, #9
 800ca1c:	eb04 070e 	add.w	r7, r4, lr
 800ca20:	f887 0020 	strb.w	r0, [r7, #32]
 800ca24:	bf94      	ite	ls
 800ca26:	3230      	addls	r2, #48	; 0x30
 800ca28:	3237      	addhi	r2, #55	; 0x37
 800ca2a:	eb04 000c 	add.w	r0, r4, ip
 800ca2e:	f880 2020 	strb.w	r2, [r0, #32]
 800ca32:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800ca36:	1d1f      	adds	r7, r3, #4
 800ca38:	0910      	lsrs	r0, r2, #4
 800ca3a:	2a9f      	cmp	r2, #159	; 0x9f
 800ca3c:	f002 020f 	and.w	r2, r2, #15
 800ca40:	bf94      	ite	ls
 800ca42:	3030      	addls	r0, #48	; 0x30
 800ca44:	3037      	addhi	r0, #55	; 0x37
 800ca46:	3305      	adds	r3, #5
 800ca48:	2a09      	cmp	r2, #9
 800ca4a:	4423      	add	r3, r4
 800ca4c:	4427      	add	r7, r4
 800ca4e:	bf94      	ite	ls
 800ca50:	3230      	addls	r2, #48	; 0x30
 800ca52:	3237      	addhi	r2, #55	; 0x37
 800ca54:	f887 0020 	strb.w	r0, [r7, #32]
 800ca58:	f883 2020 	strb.w	r2, [r3, #32]
 800ca5c:	2300      	movs	r3, #0
 800ca5e:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800ca62:	f000 fee9 	bl	800d838 <net::link_register_read()>
 800ca66:	7963      	ldrb	r3, [r4, #5]
 800ca68:	6020      	str	r0, [r4, #0]
 800ca6a:	2800      	cmp	r0, #0
 800ca6c:	f040 8095 	bne.w	800cb9a <Network::Init(NetworkParamsStore*)+0x236>
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	f040 80a3 	bne.w	800cbbc <Network::Init(NetworkParamsStore*)+0x258>
 800ca76:	9b08      	ldr	r3, [sp, #32]
 800ca78:	2b00      	cmp	r3, #0
 800ca7a:	d16d      	bne.n	800cb58 <Network::Init(NetworkParamsStore*)+0x1f4>
 800ca7c:	4620      	mov	r0, r4
 800ca7e:	f7ff ff60 	bl	800c942 <Network::SetDefaultIp()>
 800ca82:	6963      	ldr	r3, [r4, #20]
 800ca84:	69e2      	ldr	r2, [r4, #28]
 800ca86:	9308      	str	r3, [sp, #32]
 800ca88:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 800ca8c:	f104 0805 	add.w	r8, r4, #5
 800ca90:	f104 0907 	add.w	r9, r4, #7
 800ca94:	4643      	mov	r3, r8
 800ca96:	4632      	mov	r2, r6
 800ca98:	4628      	mov	r0, r5
 800ca9a:	f8cd 9000 	str.w	r9, [sp]
 800ca9e:	a908      	add	r1, sp, #32
 800caa0:	f7fa fb56 	bl	8007150 <net_init>
 800caa4:	79e3      	ldrb	r3, [r4, #7]
 800caa6:	b113      	cbz	r3, 800caae <Network::Init(NetworkParamsStore*)+0x14a>
 800caa8:	2004      	movs	r0, #4
 800caaa:	f7fb fcd0 	bl	800844e <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800caae:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800cab2:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 800cab6:	9304      	str	r3, [sp, #16]
 800cab8:	233c      	movs	r3, #60	; 0x3c
 800caba:	fb03 f30a 	mul.w	r3, r3, sl
 800cabe:	4f42      	ldr	r7, [pc, #264]	; (800cbc8 <Network::Init(NetworkParamsStore*)+0x264>)
 800cac0:	f8df b108 	ldr.w	fp, [pc, #264]	; 800cbcc <Network::Init(NetworkParamsStore*)+0x268>
 800cac4:	9303      	str	r3, [sp, #12]
 800cac6:	79e3      	ldrb	r3, [r4, #7]
 800cac8:	b373      	cbz	r3, 800cb28 <Network::Init(NetworkParamsStore*)+0x1c4>
 800caca:	f1ba 0f00 	cmp.w	sl, #0
 800cace:	d02b      	beq.n	800cb28 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cad0:	9b04      	ldr	r3, [sp, #16]
 800cad2:	b34b      	cbz	r3, 800cb28 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cad4:	2104      	movs	r1, #4
 800cad6:	6838      	ldr	r0, [r7, #0]
 800cad8:	f002 f8fc 	bl	800ecd4 <LedBlink::SetMode(ledblink::Mode)>
 800cadc:	2003      	movs	r0, #3
 800cade:	f7fb fcb6 	bl	800844e <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cae2:	2000      	movs	r0, #0
 800cae4:	f002 fb70 	bl	800f1c8 <time>
 800cae8:	9005      	str	r0, [sp, #20]
 800caea:	2000      	movs	r0, #0
 800caec:	f002 fb6c 	bl	800f1c8 <time>
 800caf0:	9b05      	ldr	r3, [sp, #20]
 800caf2:	4937      	ldr	r1, [pc, #220]	; (800cbd0 <Network::Init(NetworkParamsStore*)+0x26c>)
 800caf4:	1ac0      	subs	r0, r0, r3
 800caf6:	9b03      	ldr	r3, [sp, #12]
 800caf8:	4298      	cmp	r0, r3
 800cafa:	db35      	blt.n	800cb68 <Network::Init(NetworkParamsStore*)+0x204>
 800cafc:	2001      	movs	r0, #1
 800cafe:	f7fb fca6 	bl	800844e <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cb02:	2101      	movs	r1, #1
 800cb04:	6838      	ldr	r0, [r7, #0]
 800cb06:	f002 f8e5 	bl	800ecd4 <LedBlink::SetMode(ledblink::Mode)>
 800cb0a:	2301      	movs	r3, #1
 800cb0c:	7163      	strb	r3, [r4, #5]
 800cb0e:	2300      	movs	r3, #0
 800cb10:	4632      	mov	r2, r6
 800cb12:	71e3      	strb	r3, [r4, #7]
 800cb14:	4628      	mov	r0, r5
 800cb16:	4643      	mov	r3, r8
 800cb18:	f8cd 9000 	str.w	r9, [sp]
 800cb1c:	a908      	add	r1, sp, #32
 800cb1e:	f7fa fb17 	bl	8007150 <net_init>
 800cb22:	7963      	ldrb	r3, [r4, #5]
 800cb24:	2b00      	cmp	r3, #0
 800cb26:	d0ce      	beq.n	800cac6 <Network::Init(NetworkParamsStore*)+0x162>
 800cb28:	9b08      	ldr	r3, [sp, #32]
 800cb2a:	6163      	str	r3, [r4, #20]
 800cb2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb2e:	61e3      	str	r3, [r4, #28]
 800cb30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb32:	61a3      	str	r3, [r4, #24]
 800cb34:	f7fb fc89 	bl	800844a <network::display_ip()>
 800cb38:	b025      	add	sp, #148	; 0x94
 800cb3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb3e:	463b      	mov	r3, r7
 800cb40:	f800 2f01 	strb.w	r2, [r0, #1]!
 800cb44:	e743      	b.n	800c9ce <Network::Init(NetworkParamsStore*)+0x6a>
 800cb46:	4630      	mov	r0, r6
 800cb48:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 800cb4c:	f7ff fea6 	bl	800c89c <strncpy.constprop.0.isra.0>
 800cb50:	2300      	movs	r3, #0
 800cb52:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 800cb56:	e784      	b.n	800ca62 <Network::Init(NetworkParamsStore*)+0xfe>
 800cb58:	69e1      	ldr	r1, [r4, #28]
 800cb5a:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 800cb5e:	4053      	eors	r3, r2
 800cb60:	420b      	tst	r3, r1
 800cb62:	bf18      	it	ne
 800cb64:	920a      	strne	r2, [sp, #40]	; 0x28
 800cb66:	e791      	b.n	800ca8c <Network::Init(NetworkParamsStore*)+0x128>
 800cb68:	683b      	ldr	r3, [r7, #0]
 800cb6a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800cb6e:	f1bc 0f00 	cmp.w	ip, #0
 800cb72:	d0ba      	beq.n	800caea <Network::Init(NetworkParamsStore*)+0x186>
 800cb74:	6808      	ldr	r0, [r1, #0]
 800cb76:	695a      	ldr	r2, [r3, #20]
 800cb78:	1a80      	subs	r0, r0, r2
 800cb7a:	4584      	cmp	ip, r0
 800cb7c:	d8b5      	bhi.n	800caea <Network::Init(NetworkParamsStore*)+0x186>
 800cb7e:	6808      	ldr	r0, [r1, #0]
 800cb80:	6158      	str	r0, [r3, #20]
 800cb82:	6918      	ldr	r0, [r3, #16]
 800cb84:	2801      	cmp	r0, #1
 800cb86:	f080 0201 	eor.w	r2, r0, #1
 800cb8a:	611a      	str	r2, [r3, #16]
 800cb8c:	bf16      	itet	ne
 800cb8e:	2301      	movne	r3, #1
 800cb90:	f8cb 0014 	streq.w	r0, [fp, #20]
 800cb94:	f8cb 3010 	strne.w	r3, [fp, #16]
 800cb98:	e7a7      	b.n	800caea <Network::Init(NetworkParamsStore*)+0x186>
 800cb9a:	b11b      	cbz	r3, 800cba4 <Network::Init(NetworkParamsStore*)+0x240>
 800cb9c:	2300      	movs	r3, #0
 800cb9e:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800cba2:	9308      	str	r3, [sp, #32]
 800cba4:	2300      	movs	r3, #0
 800cba6:	f88d 301f 	strb.w	r3, [sp, #31]
 800cbaa:	f10d 031f 	add.w	r3, sp, #31
 800cbae:	4632      	mov	r2, r6
 800cbb0:	4628      	mov	r0, r5
 800cbb2:	9300      	str	r3, [sp, #0]
 800cbb4:	a908      	add	r1, sp, #32
 800cbb6:	f7fa facb 	bl	8007150 <net_init>
 800cbba:	e7b5      	b.n	800cb28 <Network::Init(NetworkParamsStore*)+0x1c4>
 800cbbc:	2001      	movs	r0, #1
 800cbbe:	f7fb fc46 	bl	800844e <network::display_dhcp_status(network::dhcp::ClientStatus)>
 800cbc2:	e763      	b.n	800ca8c <Network::Init(NetworkParamsStore*)+0x128>
 800cbc4:	0801239c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sp}
 800cbc8:	2000a078 	andcs	sl, r0, r8, ror r0
 800cbcc:	40011000 	andmi	r1, r1, r0
 800cbd0:	2000a094 	mulcs	r0, r4, r0

0800cbd4 <Network::Print()>:
 800cbd4:	b530      	push	{r4, r5, lr}
 800cbd6:	4604      	mov	r4, r0
 800cbd8:	b085      	sub	sp, #20
 800cbda:	4832      	ldr	r0, [pc, #200]	; (800cca4 <Network::Print()+0xd0>)
 800cbdc:	f7fb fe30 	bl	8008840 <printf>
 800cbe0:	f104 0120 	add.w	r1, r4, #32
 800cbe4:	4830      	ldr	r0, [pc, #192]	; (800cca8 <Network::Print()+0xd4>)
 800cbe6:	f7fb fe2b 	bl	8008840 <printf>
 800cbea:	68a1      	ldr	r1, [r4, #8]
 800cbec:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 800cbf0:	482e      	ldr	r0, [pc, #184]	; (800ccac <Network::Print()+0xd8>)
 800cbf2:	f7fb fe25 	bl	8008840 <printf>
 800cbf6:	69e0      	ldr	r0, [r4, #28]
 800cbf8:	f004 f97e 	bl	8010ef8 <__popcountsi2>
 800cbfc:	6965      	ldr	r5, [r4, #20]
 800cbfe:	9001      	str	r0, [sp, #4]
 800cc00:	0e2b      	lsrs	r3, r5, #24
 800cc02:	9300      	str	r3, [sp, #0]
 800cc04:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800cc08:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800cc0c:	b2e9      	uxtb	r1, r5
 800cc0e:	4828      	ldr	r0, [pc, #160]	; (800ccb0 <Network::Print()+0xdc>)
 800cc10:	f7fb fe16 	bl	8008840 <printf>
 800cc14:	69e1      	ldr	r1, [r4, #28]
 800cc16:	4827      	ldr	r0, [pc, #156]	; (800ccb4 <Network::Print()+0xe0>)
 800cc18:	0e0b      	lsrs	r3, r1, #24
 800cc1a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cc1e:	9300      	str	r3, [sp, #0]
 800cc20:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc24:	b2c9      	uxtb	r1, r1
 800cc26:	f7fb fe0b 	bl	8008840 <printf>
 800cc2a:	69a1      	ldr	r1, [r4, #24]
 800cc2c:	4822      	ldr	r0, [pc, #136]	; (800ccb8 <Network::Print()+0xe4>)
 800cc2e:	0e0b      	lsrs	r3, r1, #24
 800cc30:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cc34:	9300      	str	r3, [sp, #0]
 800cc36:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc3a:	b2c9      	uxtb	r1, r1
 800cc3c:	f7fb fe00 	bl	8008840 <printf>
 800cc40:	69e3      	ldr	r3, [r4, #28]
 800cc42:	6961      	ldr	r1, [r4, #20]
 800cc44:	481d      	ldr	r0, [pc, #116]	; (800ccbc <Network::Print()+0xe8>)
 800cc46:	ea61 0103 	orn	r1, r1, r3
 800cc4a:	0e0b      	lsrs	r3, r1, #24
 800cc4c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800cc50:	9300      	str	r3, [sp, #0]
 800cc52:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800cc56:	b2c9      	uxtb	r1, r1
 800cc58:	f7fb fdf2 	bl	8008840 <printf>
 800cc5c:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800cc60:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800cc64:	9302      	str	r3, [sp, #8]
 800cc66:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800cc6a:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 800cc6e:	9301      	str	r3, [sp, #4]
 800cc70:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800cc74:	4812      	ldr	r0, [pc, #72]	; (800ccc0 <Network::Print()+0xec>)
 800cc76:	9300      	str	r3, [sp, #0]
 800cc78:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 800cc7c:	f7fb fde0 	bl	8008840 <printf>
 800cc80:	4b10      	ldr	r3, [pc, #64]	; (800ccc4 <Network::Print()+0xf0>)
 800cc82:	681b      	ldr	r3, [r3, #0]
 800cc84:	79da      	ldrb	r2, [r3, #7]
 800cc86:	b952      	cbnz	r2, 800cc9e <Network::Print()+0xca>
 800cc88:	795b      	ldrb	r3, [r3, #5]
 800cc8a:	2b00      	cmp	r3, #0
 800cc8c:	bf14      	ite	ne
 800cc8e:	2144      	movne	r1, #68	; 0x44
 800cc90:	2153      	moveq	r1, #83	; 0x53
 800cc92:	480d      	ldr	r0, [pc, #52]	; (800ccc8 <Network::Print()+0xf4>)
 800cc94:	b005      	add	sp, #20
 800cc96:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cc9a:	f7fb bdd1 	b.w	8008840 <printf>
 800cc9e:	215a      	movs	r1, #90	; 0x5a
 800cca0:	e7f7      	b.n	800cc92 <Network::Print()+0xbe>
 800cca2:	bf00      	nop
 800cca4:	080123a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sp}
 800cca8:	080123b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sp}
 800ccac:	080123c2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sp}
 800ccb0:	080123d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sp}
 800ccb4:	080123f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sp}
 800ccb8:	0801240e 	stmdaeq	r1, {r1, r2, r3, sl, sp}
 800ccbc:	08012428 	stmdaeq	r1, {r3, r5, sl, sp}
 800ccc0:	08012442 	stmdaeq	r1, {r1, r6, sl, sp}
 800ccc4:	20008970 	andcs	r8, r0, r0, ror r9
 800ccc8:	0801246e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sl, sp}

0800cccc <Network::TcpBegin(unsigned short)>:
 800cccc:	4608      	mov	r0, r1
 800ccce:	f7ff b803 	b.w	800bcd8 <tcp_begin>

0800ccd2 <Network::TcpRead(int, unsigned char const**)>:
 800ccd2:	4608      	mov	r0, r1
 800ccd4:	4611      	mov	r1, r2
 800ccd6:	f7ff b83d 	b.w	800bd54 <tcp_read>

0800ccda <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800ccda:	4608      	mov	r0, r1
 800ccdc:	4611      	mov	r1, r2
 800ccde:	461a      	mov	r2, r3
 800cce0:	f7ff b814 	b.w	800bd0c <tcp_write>

0800cce4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800cce4:	b510      	push	{r4, lr}
 800cce6:	225e      	movs	r2, #94	; 0x5e
 800cce8:	4604      	mov	r4, r0
 800ccea:	f840 1b04 	str.w	r1, [r0], #4
 800ccee:	2100      	movs	r1, #0
 800ccf0:	f002 f962 	bl	800efb8 <memset>
 800ccf4:	2301      	movs	r3, #1
 800ccf6:	4620      	mov	r0, r4
 800ccf8:	7623      	strb	r3, [r4, #24]
 800ccfa:	bd10      	pop	{r4, pc}

0800ccfc <NetworkParams::Load()>:
 800ccfc:	b508      	push	{r3, lr}
 800ccfe:	2300      	movs	r3, #0
 800cd00:	4601      	mov	r1, r0
 800cd02:	6043      	str	r3, [r0, #4]
 800cd04:	6800      	ldr	r0, [r0, #0]
 800cd06:	b120      	cbz	r0, 800cd12 <NetworkParams::Load()+0x16>
 800cd08:	6803      	ldr	r3, [r0, #0]
 800cd0a:	3104      	adds	r1, #4
 800cd0c:	68db      	ldr	r3, [r3, #12]
 800cd0e:	4798      	blx	r3
 800cd10:	2001      	movs	r0, #1
 800cd12:	bd08      	pop	{r3, pc}

0800cd14 <NetworkParams::Load(char const*, unsigned int)>:
 800cd14:	6803      	ldr	r3, [r0, #0]
 800cd16:	b1d3      	cbz	r3, 800cd4e <NetworkParams::Load(char const*, unsigned int)+0x3a>
 800cd18:	2300      	movs	r3, #0
 800cd1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd1c:	460d      	mov	r5, r1
 800cd1e:	4616      	mov	r6, r2
 800cd20:	4604      	mov	r4, r0
 800cd22:	6043      	str	r3, [r0, #4]
 800cd24:	4602      	mov	r2, r0
 800cd26:	490a      	ldr	r1, [pc, #40]	; (800cd50 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 800cd28:	4668      	mov	r0, sp
 800cd2a:	f001 fb87 	bl	800e43c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cd2e:	4632      	mov	r2, r6
 800cd30:	4629      	mov	r1, r5
 800cd32:	4668      	mov	r0, sp
 800cd34:	f001 fb86 	bl	800e444 <ReadConfigFile::Read(char const*, unsigned int)>
 800cd38:	4621      	mov	r1, r4
 800cd3a:	f851 0b04 	ldr.w	r0, [r1], #4
 800cd3e:	6803      	ldr	r3, [r0, #0]
 800cd40:	689b      	ldr	r3, [r3, #8]
 800cd42:	4798      	blx	r3
 800cd44:	4668      	mov	r0, sp
 800cd46:	f001 fb7c 	bl	800e442 <ReadConfigFile::~ReadConfigFile()>
 800cd4a:	b002      	add	sp, #8
 800cd4c:	bd70      	pop	{r4, r5, r6, pc}
 800cd4e:	4770      	bx	lr
 800cd50:	0800ce81 	stmdaeq	r0, {r0, r7, r9, sl, fp, lr, pc}

0800cd54 <NetworkParams::callbackFunction(char const*)>:
 800cd54:	b530      	push	{r4, r5, lr}
 800cd56:	460d      	mov	r5, r1
 800cd58:	b085      	sub	sp, #20
 800cd5a:	4604      	mov	r4, r0
 800cd5c:	4942      	ldr	r1, [pc, #264]	; (800ce68 <NetworkParams::callbackFunction(char const*)+0x114>)
 800cd5e:	4628      	mov	r0, r5
 800cd60:	f10d 0207 	add.w	r2, sp, #7
 800cd64:	f001 fc1a 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd68:	b978      	cbnz	r0, 800cd8a <NetworkParams::callbackFunction(char const*)+0x36>
 800cd6a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800cd6e:	6863      	ldr	r3, [r4, #4]
 800cd70:	b142      	cbz	r2, 800cd84 <NetworkParams::callbackFunction(char const*)+0x30>
 800cd72:	f023 0301 	bic.w	r3, r3, #1
 800cd76:	3a00      	subs	r2, #0
 800cd78:	bf18      	it	ne
 800cd7a:	2201      	movne	r2, #1
 800cd7c:	6063      	str	r3, [r4, #4]
 800cd7e:	7622      	strb	r2, [r4, #24]
 800cd80:	b005      	add	sp, #20
 800cd82:	bd30      	pop	{r4, r5, pc}
 800cd84:	f043 0301 	orr.w	r3, r3, #1
 800cd88:	e7f5      	b.n	800cd76 <NetworkParams::callbackFunction(char const*)+0x22>
 800cd8a:	4628      	mov	r0, r5
 800cd8c:	4937      	ldr	r1, [pc, #220]	; (800ce6c <NetworkParams::callbackFunction(char const*)+0x118>)
 800cd8e:	f10d 0207 	add.w	r2, sp, #7
 800cd92:	f001 fc03 	bl	800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cd96:	b980      	cbnz	r0, 800cdba <NetworkParams::callbackFunction(char const*)+0x66>
 800cd98:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800cd9c:	6863      	ldr	r3, [r4, #4]
 800cd9e:	1e51      	subs	r1, r2, #1
 800cda0:	2904      	cmp	r1, #4
 800cda2:	bf97      	itett	ls
 800cda4:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800cda8:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800cdac:	6063      	strls	r3, [r4, #4]
 800cdae:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 800cdb2:	bf84      	itt	hi
 800cdb4:	6063      	strhi	r3, [r4, #4]
 800cdb6:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 800cdba:	4628      	mov	r0, r5
 800cdbc:	492c      	ldr	r1, [pc, #176]	; (800ce70 <NetworkParams::callbackFunction(char const*)+0x11c>)
 800cdbe:	aa02      	add	r2, sp, #8
 800cdc0:	f001 fb8d 	bl	800e4de <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800cdc4:	b9e8      	cbnz	r0, 800ce02 <NetworkParams::callbackFunction(char const*)+0xae>
 800cdc6:	9a02      	ldr	r2, [sp, #8]
 800cdc8:	6863      	ldr	r3, [r4, #4]
 800cdca:	b2d1      	uxtb	r1, r2
 800cdcc:	29ac      	cmp	r1, #172	; 0xac
 800cdce:	f3c2 2007 	ubfx	r0, r2, #8, #8
 800cdd2:	d007      	beq.n	800cde4 <NetworkParams::callbackFunction(char const*)+0x90>
 800cdd4:	29c0      	cmp	r1, #192	; 0xc0
 800cdd6:	d00c      	beq.n	800cdf2 <NetworkParams::callbackFunction(char const*)+0x9e>
 800cdd8:	290a      	cmp	r1, #10
 800cdda:	d10d      	bne.n	800cdf8 <NetworkParams::callbackFunction(char const*)+0xa4>
 800cddc:	60a2      	str	r2, [r4, #8]
 800cdde:	f043 0302 	orr.w	r3, r3, #2
 800cde2:	e004      	b.n	800cdee <NetworkParams::callbackFunction(char const*)+0x9a>
 800cde4:	3810      	subs	r0, #16
 800cde6:	280f      	cmp	r0, #15
 800cde8:	d9f8      	bls.n	800cddc <NetworkParams::callbackFunction(char const*)+0x88>
 800cdea:	f023 0302 	bic.w	r3, r3, #2
 800cdee:	6063      	str	r3, [r4, #4]
 800cdf0:	e7c6      	b.n	800cd80 <NetworkParams::callbackFunction(char const*)+0x2c>
 800cdf2:	28a8      	cmp	r0, #168	; 0xa8
 800cdf4:	d1f9      	bne.n	800cdea <NetworkParams::callbackFunction(char const*)+0x96>
 800cdf6:	e7f1      	b.n	800cddc <NetworkParams::callbackFunction(char const*)+0x88>
 800cdf8:	2902      	cmp	r1, #2
 800cdfa:	d0ef      	beq.n	800cddc <NetworkParams::callbackFunction(char const*)+0x88>
 800cdfc:	2a00      	cmp	r2, #0
 800cdfe:	d0ed      	beq.n	800cddc <NetworkParams::callbackFunction(char const*)+0x88>
 800ce00:	e7f3      	b.n	800cdea <NetworkParams::callbackFunction(char const*)+0x96>
 800ce02:	4628      	mov	r0, r5
 800ce04:	491b      	ldr	r1, [pc, #108]	; (800ce74 <NetworkParams::callbackFunction(char const*)+0x120>)
 800ce06:	aa02      	add	r2, sp, #8
 800ce08:	f001 fb69 	bl	800e4de <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800ce0c:	b970      	cbnz	r0, 800ce2c <NetworkParams::callbackFunction(char const*)+0xd8>
 800ce0e:	9a02      	ldr	r2, [sp, #8]
 800ce10:	6863      	ldr	r3, [r4, #4]
 800ce12:	b142      	cbz	r2, 800ce26 <NetworkParams::callbackFunction(char const*)+0xd2>
 800ce14:	ba11      	rev	r1, r2
 800ce16:	43c8      	mvns	r0, r1
 800ce18:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 800ce1c:	d103      	bne.n	800ce26 <NetworkParams::callbackFunction(char const*)+0xd2>
 800ce1e:	60e2      	str	r2, [r4, #12]
 800ce20:	f043 0304 	orr.w	r3, r3, #4
 800ce24:	e7e3      	b.n	800cdee <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce26:	f023 0304 	bic.w	r3, r3, #4
 800ce2a:	e7e0      	b.n	800cdee <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce2c:	4628      	mov	r0, r5
 800ce2e:	4912      	ldr	r1, [pc, #72]	; (800ce78 <NetworkParams::callbackFunction(char const*)+0x124>)
 800ce30:	aa02      	add	r2, sp, #8
 800ce32:	f001 fb54 	bl	800e4de <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800ce36:	b928      	cbnz	r0, 800ce44 <NetworkParams::callbackFunction(char const*)+0xf0>
 800ce38:	9b02      	ldr	r3, [sp, #8]
 800ce3a:	6123      	str	r3, [r4, #16]
 800ce3c:	6863      	ldr	r3, [r4, #4]
 800ce3e:	f043 0308 	orr.w	r3, r3, #8
 800ce42:	e7d4      	b.n	800cdee <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce44:	233f      	movs	r3, #63	; 0x3f
 800ce46:	4628      	mov	r0, r5
 800ce48:	9303      	str	r3, [sp, #12]
 800ce4a:	490c      	ldr	r1, [pc, #48]	; (800ce7c <NetworkParams::callbackFunction(char const*)+0x128>)
 800ce4c:	ab03      	add	r3, sp, #12
 800ce4e:	f104 0219 	add.w	r2, r4, #25
 800ce52:	f001 fb2b 	bl	800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ce56:	2800      	cmp	r0, #0
 800ce58:	d192      	bne.n	800cd80 <NetworkParams::callbackFunction(char const*)+0x2c>
 800ce5a:	9b03      	ldr	r3, [sp, #12]
 800ce5c:	4423      	add	r3, r4
 800ce5e:	7658      	strb	r0, [r3, #25]
 800ce60:	6863      	ldr	r3, [r4, #4]
 800ce62:	f043 0320 	orr.w	r3, r3, #32
 800ce66:	e7c2      	b.n	800cdee <NetworkParams::callbackFunction(char const*)+0x9a>
 800ce68:	080124c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, sp}
 800ce6c:	080124a4 	stmdaeq	r1, {r2, r5, r7, sl, sp}
 800ce70:	08012489 	stmdaeq	r1, {r0, r3, r7, sl, sp}
 800ce74:	080124bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, sl, sp}
 800ce78:	08012494 	stmdaeq	r1, {r2, r4, r7, sl, sp}
 800ce7c:	080124b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp}

0800ce80 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800ce80:	f7ff bf68 	b.w	800cd54 <NetworkParams::callbackFunction(char const*)>

0800ce84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 800ce84:	b570      	push	{r4, r5, r6, lr}
 800ce86:	4604      	mov	r4, r0
 800ce88:	4615      	mov	r5, r2
 800ce8a:	461e      	mov	r6, r3
 800ce8c:	b086      	sub	sp, #24
 800ce8e:	3004      	adds	r0, #4
 800ce90:	2900      	cmp	r1, #0
 800ce92:	d02b      	beq.n	800ceec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 800ce94:	225e      	movs	r2, #94	; 0x5e
 800ce96:	f002 f878 	bl	800ef8a <memmove>
 800ce9a:	462a      	mov	r2, r5
 800ce9c:	4633      	mov	r3, r6
 800ce9e:	4970      	ldr	r1, [pc, #448]	; (800d060 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800cea0:	a803      	add	r0, sp, #12
 800cea2:	f001 fa2b 	bl	800e2fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cea6:	6863      	ldr	r3, [r4, #4]
 800cea8:	079a      	lsls	r2, r3, #30
 800ceaa:	bf5f      	itttt	pl
 800ceac:	4a6d      	ldrpl	r2, [pc, #436]	; (800d064 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ceae:	6812      	ldrpl	r2, [r2, #0]
 800ceb0:	6952      	ldrpl	r2, [r2, #20]
 800ceb2:	60a2      	strpl	r2, [r4, #8]
 800ceb4:	075e      	lsls	r6, r3, #29
 800ceb6:	bf5f      	itttt	pl
 800ceb8:	4a6a      	ldrpl	r2, [pc, #424]	; (800d064 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800ceba:	6812      	ldrpl	r2, [r2, #0]
 800cebc:	69d2      	ldrpl	r2, [r2, #28]
 800cebe:	60e2      	strpl	r2, [r4, #12]
 800cec0:	071d      	lsls	r5, r3, #28
 800cec2:	bf58      	it	pl
 800cec4:	4a67      	ldrpl	r2, [pc, #412]	; (800d064 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800cec6:	f104 0519 	add.w	r5, r4, #25
 800ceca:	bf5e      	ittt	pl
 800cecc:	6812      	ldrpl	r2, [r2, #0]
 800cece:	6992      	ldrpl	r2, [r2, #24]
 800ced0:	6122      	strpl	r2, [r4, #16]
 800ced2:	0698      	lsls	r0, r3, #26
 800ced4:	d418      	bmi.n	800cf08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 800ced6:	4628      	mov	r0, r5
 800ced8:	223f      	movs	r2, #63	; 0x3f
 800ceda:	4b62      	ldr	r3, [pc, #392]	; (800d064 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800cedc:	681b      	ldr	r3, [r3, #0]
 800cede:	331f      	adds	r3, #31
 800cee0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800cee4:	b949      	cbnz	r1, 800cefa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 800cee6:	f002 f867 	bl	800efb8 <memset>
 800ceea:	e00a      	b.n	800cf02 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800ceec:	6823      	ldr	r3, [r4, #0]
 800ceee:	4601      	mov	r1, r0
 800cef0:	681a      	ldr	r2, [r3, #0]
 800cef2:	4618      	mov	r0, r3
 800cef4:	68d2      	ldr	r2, [r2, #12]
 800cef6:	4790      	blx	r2
 800cef8:	e7cf      	b.n	800ce9a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800cefa:	3a01      	subs	r2, #1
 800cefc:	f800 1b01 	strb.w	r1, [r0], #1
 800cf00:	d1ee      	bne.n	800cee0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 800cf02:	2300      	movs	r3, #0
 800cf04:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800cf08:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cf0c:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800cf10:	7e23      	ldrb	r3, [r4, #24]
 800cf12:	42b2      	cmp	r2, r6
 800cf14:	6861      	ldr	r1, [r4, #4]
 800cf16:	d21a      	bcs.n	800cf4e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800cf18:	9803      	ldr	r0, [sp, #12]
 800cf1a:	07c9      	lsls	r1, r1, #31
 800cf1c:	4410      	add	r0, r2
 800cf1e:	eba6 0602 	sub.w	r6, r6, r2
 800cf22:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cf26:	d404      	bmi.n	800cf32 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 800cf28:	b922      	cbnz	r2, 800cf34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800cf2a:	9300      	str	r3, [sp, #0]
 800cf2c:	4a4e      	ldr	r2, [pc, #312]	; (800d068 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800cf2e:	4b4f      	ldr	r3, [pc, #316]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf30:	e003      	b.n	800cf3a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cf32:	b312      	cbz	r2, 800cf7a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 800cf34:	9300      	str	r3, [sp, #0]
 800cf36:	4a4e      	ldr	r2, [pc, #312]	; (800d070 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800cf38:	4b4c      	ldr	r3, [pc, #304]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf3a:	4631      	mov	r1, r6
 800cf3c:	f7fb fc90 	bl	8008860 <snprintf>
 800cf40:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cf44:	4286      	cmp	r6, r0
 800cf46:	bfa4      	itt	ge
 800cf48:	181b      	addge	r3, r3, r0
 800cf4a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800cf4e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cf52:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800cf56:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800cf5a:	42b2      	cmp	r2, r6
 800cf5c:	6861      	ldr	r1, [r4, #4]
 800cf5e:	d21f      	bcs.n	800cfa0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800cf60:	9803      	ldr	r0, [sp, #12]
 800cf62:	05c9      	lsls	r1, r1, #23
 800cf64:	4410      	add	r0, r2
 800cf66:	eba6 0602 	sub.w	r6, r6, r2
 800cf6a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cf6e:	d408      	bmi.n	800cf82 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800cf70:	b94a      	cbnz	r2, 800cf86 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 800cf72:	9300      	str	r3, [sp, #0]
 800cf74:	4a3c      	ldr	r2, [pc, #240]	; (800d068 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800cf76:	4b3f      	ldr	r3, [pc, #252]	; (800d074 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800cf78:	e008      	b.n	800cf8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800cf7a:	9300      	str	r3, [sp, #0]
 800cf7c:	4a3e      	ldr	r2, [pc, #248]	; (800d078 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800cf7e:	4b3b      	ldr	r3, [pc, #236]	; (800d06c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800cf80:	e7db      	b.n	800cf3a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800cf82:	2a00      	cmp	r2, #0
 800cf84:	d03c      	beq.n	800d000 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800cf86:	9300      	str	r3, [sp, #0]
 800cf88:	4a39      	ldr	r2, [pc, #228]	; (800d070 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800cf8a:	4b3a      	ldr	r3, [pc, #232]	; (800d074 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800cf8c:	4631      	mov	r1, r6
 800cf8e:	f7fb fc67 	bl	8008860 <snprintf>
 800cf92:	4286      	cmp	r6, r0
 800cf94:	bfa2      	ittt	ge
 800cf96:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cf9a:	18c0      	addge	r0, r0, r3
 800cf9c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cfa0:	4936      	ldr	r1, [pc, #216]	; (800d07c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800cfa2:	a803      	add	r0, sp, #12
 800cfa4:	f001 fa30 	bl	800e408 <PropertiesBuilder::AddComment(char const*)>
 800cfa8:	6863      	ldr	r3, [r4, #4]
 800cfaa:	68a2      	ldr	r2, [r4, #8]
 800cfac:	4934      	ldr	r1, [pc, #208]	; (800d080 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800cfae:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cfb2:	a803      	add	r0, sp, #12
 800cfb4:	f001 f9e4 	bl	800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cfb8:	6863      	ldr	r3, [r4, #4]
 800cfba:	68e2      	ldr	r2, [r4, #12]
 800cfbc:	4931      	ldr	r1, [pc, #196]	; (800d084 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800cfbe:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800cfc2:	a803      	add	r0, sp, #12
 800cfc4:	f001 f9dc 	bl	800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cfc8:	6863      	ldr	r3, [r4, #4]
 800cfca:	6922      	ldr	r2, [r4, #16]
 800cfcc:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cfd0:	492d      	ldr	r1, [pc, #180]	; (800d088 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800cfd2:	a803      	add	r0, sp, #12
 800cfd4:	f001 f9d4 	bl	800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800cfd8:	6862      	ldr	r2, [r4, #4]
 800cfda:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cfde:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800cfe2:	42a3      	cmp	r3, r4
 800cfe4:	d21e      	bcs.n	800d024 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 800cfe6:	9803      	ldr	r0, [sp, #12]
 800cfe8:	0692      	lsls	r2, r2, #26
 800cfea:	4418      	add	r0, r3
 800cfec:	eba4 0403 	sub.w	r4, r4, r3
 800cff0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cff4:	d408      	bmi.n	800d008 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 800cff6:	b943      	cbnz	r3, 800d00a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800cff8:	4b24      	ldr	r3, [pc, #144]	; (800d08c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800cffa:	4a25      	ldr	r2, [pc, #148]	; (800d090 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800cffc:	9500      	str	r5, [sp, #0]
 800cffe:	e007      	b.n	800d010 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d000:	9300      	str	r3, [sp, #0]
 800d002:	4a1d      	ldr	r2, [pc, #116]	; (800d078 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d004:	4b1b      	ldr	r3, [pc, #108]	; (800d074 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d006:	e7c1      	b.n	800cf8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 800d008:	b32b      	cbz	r3, 800d056 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 800d00a:	4b20      	ldr	r3, [pc, #128]	; (800d08c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d00c:	4a21      	ldr	r2, [pc, #132]	; (800d094 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800d00e:	9500      	str	r5, [sp, #0]
 800d010:	4621      	mov	r1, r4
 800d012:	f7fb fc25 	bl	8008860 <snprintf>
 800d016:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d01a:	4284      	cmp	r4, r0
 800d01c:	bfa4      	itt	ge
 800d01e:	181b      	addge	r3, r3, r0
 800d020:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d024:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d028:	b17b      	cbz	r3, 800d04a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800d02a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d02e:	9b03      	ldr	r3, [sp, #12]
 800d030:	4413      	add	r3, r2
 800d032:	227d      	movs	r2, #125	; 0x7d
 800d034:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d038:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d03c:	9903      	ldr	r1, [sp, #12]
 800d03e:	54ca      	strb	r2, [r1, r3]
 800d040:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d044:	3301      	adds	r3, #1
 800d046:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d04a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d04e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d050:	601a      	str	r2, [r3, #0]
 800d052:	b006      	add	sp, #24
 800d054:	bd70      	pop	{r4, r5, r6, pc}
 800d056:	4b0d      	ldr	r3, [pc, #52]	; (800d08c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800d058:	4a0f      	ldr	r2, [pc, #60]	; (800d098 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d05a:	9500      	str	r5, [sp, #0]
 800d05c:	e7d8      	b.n	800d010 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 800d05e:	bf00      	nop
 800d060:	080124cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, sp}
 800d064:	20008970 	andcs	r8, r0, r0, ror r9
 800d068:	08011319 	stmdaeq	r1, {r0, r3, r4, r8, r9, ip}
 800d06c:	080124c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, sp}
 800d070:	08011310 	stmdaeq	r1, {r4, r8, r9, ip}
 800d074:	080124a4 	stmdaeq	r1, {r2, r5, r7, sl, sp}
 800d078:	0801131a 	stmdaeq	r1, {r1, r3, r4, r8, r9, ip}
 800d07c:	0801247f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, sp}
 800d080:	08012489 	stmdaeq	r1, {r0, r3, r7, sl, sp}
 800d084:	080124bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, sl, sp}
 800d088:	08012494 	stmdaeq	r1, {r2, r4, r7, sl, sp}
 800d08c:	080124b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, sp}
 800d090:	0801132c 	stmdaeq	r1, {r2, r3, r5, r8, r9, ip}
 800d094:	08011321 	stmdaeq	r1, {r0, r5, r8, r9, ip}
 800d098:	0801132d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, ip}

0800d09c <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d09c:	b513      	push	{r0, r1, r4, lr}
 800d09e:	6804      	ldr	r4, [r0, #0]
 800d0a0:	b914      	cbnz	r4, 800d0a8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d0a2:	601c      	str	r4, [r3, #0]
 800d0a4:	b002      	add	sp, #8
 800d0a6:	bd10      	pop	{r4, pc}
 800d0a8:	9300      	str	r3, [sp, #0]
 800d0aa:	4613      	mov	r3, r2
 800d0ac:	460a      	mov	r2, r1
 800d0ae:	2100      	movs	r1, #0
 800d0b0:	f7ff fee8 	bl	800ce84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 800d0b4:	e7f6      	b.n	800d0a4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d0b6 <NetworkParams::Dump()>:
 800d0b6:	4770      	bx	lr

0800d0b8 <memcpy.isra.0>:
 800d0b8:	3801      	subs	r0, #1
 800d0ba:	440a      	add	r2, r1
 800d0bc:	4291      	cmp	r1, r2
 800d0be:	d100      	bne.n	800d0c2 <memcpy.isra.0+0xa>
 800d0c0:	4770      	bx	lr
 800d0c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d0c6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d0ca:	e7f7      	b.n	800d0bc <memcpy.isra.0+0x4>

0800d0cc <arp_announce>:
 800d0cc:	4803      	ldr	r0, [pc, #12]	; (800d0dc <arp_announce+0x10>)
 800d0ce:	69c3      	ldr	r3, [r0, #28]
 800d0d0:	b113      	cbz	r3, 800d0d8 <arp_announce+0xc>
 800d0d2:	212a      	movs	r1, #42	; 0x2a
 800d0d4:	f003 ba12 	b.w	80104fc <emac_eth_send>
 800d0d8:	4770      	bx	lr
 800d0da:	bf00      	nop
 800d0dc:	20008974 	andcs	r8, r0, r4, ror r9

0800d0e0 <arp_handle_request>:
 800d0e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d0e2:	2204      	movs	r2, #4
 800d0e4:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d0e8:	4604      	mov	r4, r0
 800d0ea:	eb0d 0002 	add.w	r0, sp, r2
 800d0ee:	f7ff ffe3 	bl	800d0b8 <memcpy.isra.0>
 800d0f2:	4b0d      	ldr	r3, [pc, #52]	; (800d128 <arp_handle_request+0x48>)
 800d0f4:	9a01      	ldr	r2, [sp, #4]
 800d0f6:	69db      	ldr	r3, [r3, #28]
 800d0f8:	429a      	cmp	r2, r3
 800d0fa:	d113      	bne.n	800d124 <arp_handle_request+0x44>
 800d0fc:	2206      	movs	r2, #6
 800d0fe:	4d0b      	ldr	r5, [pc, #44]	; (800d12c <arp_handle_request+0x4c>)
 800d100:	18a1      	adds	r1, r4, r2
 800d102:	4628      	mov	r0, r5
 800d104:	f7ff ffd8 	bl	800d0b8 <memcpy.isra.0>
 800d108:	f104 0116 	add.w	r1, r4, #22
 800d10c:	f105 0020 	add.w	r0, r5, #32
 800d110:	2206      	movs	r2, #6
 800d112:	f7ff ffd1 	bl	800d0b8 <memcpy.isra.0>
 800d116:	69e3      	ldr	r3, [r4, #28]
 800d118:	212a      	movs	r1, #42	; 0x2a
 800d11a:	4628      	mov	r0, r5
 800d11c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d120:	f003 f9ec 	bl	80104fc <emac_eth_send>
 800d124:	b003      	add	sp, #12
 800d126:	bd30      	pop	{r4, r5, pc}
 800d128:	20008974 	andcs	r8, r0, r4, ror r9
 800d12c:	200089a0 	andcs	r8, r0, r0, lsr #19

0800d130 <arp_handle_reply>:
 800d130:	69c1      	ldr	r1, [r0, #28]
 800d132:	3016      	adds	r0, #22
 800d134:	f000 b80a 	b.w	800d14c <arp_cache_update>

0800d138 <arp_send_request>:
 800d138:	4b03      	ldr	r3, [pc, #12]	; (800d148 <arp_send_request+0x10>)
 800d13a:	212a      	movs	r1, #42	; 0x2a
 800d13c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800d140:	4618      	mov	r0, r3
 800d142:	f003 b9db 	b.w	80104fc <emac_eth_send>
 800d146:	bf00      	nop
 800d148:	200089cc 	andcs	r8, r0, ip, asr #19

0800d14c <arp_cache_update>:
 800d14c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d14e:	4e11      	ldr	r6, [pc, #68]	; (800d194 <arp_cache_update+0x48>)
 800d150:	8833      	ldrh	r3, [r6, #0]
 800d152:	2b20      	cmp	r3, #32
 800d154:	d018      	beq.n	800d188 <arp_cache_update+0x3c>
 800d156:	2400      	movs	r4, #0
 800d158:	220c      	movs	r2, #12
 800d15a:	4d0f      	ldr	r5, [pc, #60]	; (800d198 <arp_cache_update+0x4c>)
 800d15c:	b2a7      	uxth	r7, r4
 800d15e:	42bb      	cmp	r3, r7
 800d160:	d80b      	bhi.n	800d17a <arp_cache_update+0x2e>
 800d162:	fb02 5203 	mla	r2, r2, r3, r5
 800d166:	1d84      	adds	r4, r0, #6
 800d168:	3203      	adds	r2, #3
 800d16a:	42a0      	cmp	r0, r4
 800d16c:	d10d      	bne.n	800d18a <arp_cache_update+0x3e>
 800d16e:	220c      	movs	r2, #12
 800d170:	435a      	muls	r2, r3
 800d172:	3301      	adds	r3, #1
 800d174:	50a9      	str	r1, [r5, r2]
 800d176:	8033      	strh	r3, [r6, #0]
 800d178:	e006      	b.n	800d188 <arp_cache_update+0x3c>
 800d17a:	3401      	adds	r4, #1
 800d17c:	fb02 5704 	mla	r7, r2, r4, r5
 800d180:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800d184:	428f      	cmp	r7, r1
 800d186:	d1e9      	bne.n	800d15c <arp_cache_update+0x10>
 800d188:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d18a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d18e:	f802 7f01 	strb.w	r7, [r2, #1]!
 800d192:	e7ea      	b.n	800d16a <arp_cache_update+0x1e>
 800d194:	20008b78 	andcs	r8, r0, r8, ror fp
 800d198:	200089f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>

0800d19c <arp_cache_lookup>:
 800d19c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1a0:	2200      	movs	r2, #0
 800d1a2:	4606      	mov	r6, r0
 800d1a4:	460c      	mov	r4, r1
 800d1a6:	200c      	movs	r0, #12
 800d1a8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800d230 <arp_cache_lookup+0x94>
 800d1ac:	fb00 f302 	mul.w	r3, r0, r2
 800d1b0:	f853 1008 	ldr.w	r1, [r3, r8]
 800d1b4:	42b1      	cmp	r1, r6
 800d1b6:	d10d      	bne.n	800d1d4 <arp_cache_lookup+0x38>
 800d1b8:	3304      	adds	r3, #4
 800d1ba:	4443      	add	r3, r8
 800d1bc:	3c01      	subs	r4, #1
 800d1be:	1d9a      	adds	r2, r3, #6
 800d1c0:	4293      	cmp	r3, r2
 800d1c2:	d102      	bne.n	800d1ca <arp_cache_lookup+0x2e>
 800d1c4:	4630      	mov	r0, r6
 800d1c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d1ca:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d1ce:	f804 1f01 	strb.w	r1, [r4, #1]!
 800d1d2:	e7f5      	b.n	800d1c0 <arp_cache_lookup+0x24>
 800d1d4:	b111      	cbz	r1, 800d1dc <arp_cache_lookup+0x40>
 800d1d6:	3201      	adds	r2, #1
 800d1d8:	2a20      	cmp	r2, #32
 800d1da:	d1e7      	bne.n	800d1ac <arp_cache_lookup+0x10>
 800d1dc:	2704      	movs	r7, #4
 800d1de:	f8df a054 	ldr.w	sl, [pc, #84]	; 800d234 <arp_cache_lookup+0x98>
 800d1e2:	f8ba 5000 	ldrh.w	r5, [sl]
 800d1e6:	3f01      	subs	r7, #1
 800d1e8:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800d1ec:	d101      	bne.n	800d1f2 <arp_cache_lookup+0x56>
 800d1ee:	463e      	mov	r6, r7
 800d1f0:	e7e8      	b.n	800d1c4 <arp_cache_lookup+0x28>
 800d1f2:	4630      	mov	r0, r6
 800d1f4:	f7ff ffa0 	bl	800d138 <arp_send_request>
 800d1f8:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800d1fc:	f1b9 0901 	subs.w	r9, r9, #1
 800d200:	f8ba 3000 	ldrh.w	r3, [sl]
 800d204:	d011      	beq.n	800d22a <arp_cache_lookup+0x8e>
 800d206:	429d      	cmp	r5, r3
 800d208:	d00c      	beq.n	800d224 <arp_cache_lookup+0x88>
 800d20a:	230c      	movs	r3, #12
 800d20c:	fb03 8505 	mla	r5, r3, r5, r8
 800d210:	3c01      	subs	r4, #1
 800d212:	1d2b      	adds	r3, r5, #4
 800d214:	350a      	adds	r5, #10
 800d216:	42ab      	cmp	r3, r5
 800d218:	d0d4      	beq.n	800d1c4 <arp_cache_lookup+0x28>
 800d21a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d21e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d222:	e7f8      	b.n	800d216 <arp_cache_lookup+0x7a>
 800d224:	f7fa f97c 	bl	8007520 <net_handle>
 800d228:	e7e8      	b.n	800d1fc <arp_cache_lookup+0x60>
 800d22a:	429d      	cmp	r5, r3
 800d22c:	d0db      	beq.n	800d1e6 <arp_cache_lookup+0x4a>
 800d22e:	e7ec      	b.n	800d20a <arp_cache_lookup+0x6e>
 800d230:	200089f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 800d234:	20008b78 	andcs	r8, r0, r8, ror fp

0800d238 <_parse_response>:
 800d238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d23c:	2400      	movs	r4, #0
 800d23e:	460d      	mov	r5, r1
 800d240:	46a3      	mov	fp, r4
 800d242:	4627      	mov	r7, r4
 800d244:	46a2      	mov	sl, r4
 800d246:	46a1      	mov	r9, r4
 800d248:	46a0      	mov	r8, r4
 800d24a:	4e50      	ldr	r6, [pc, #320]	; (800d38c <_parse_response+0x154>)
 800d24c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800d250:	6833      	ldr	r3, [r6, #0]
 800d252:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800d256:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800d25a:	9009      	str	r0, [sp, #36]	; 0x24
 800d25c:	9402      	str	r4, [sp, #8]
 800d25e:	9407      	str	r4, [sp, #28]
 800d260:	9308      	str	r3, [sp, #32]
 800d262:	f7fa f95d 	bl	8007520 <net_handle>
 800d266:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800d26a:	9300      	str	r3, [sp, #0]
 800d26c:	f44f 7209 	mov.w	r2, #548	; 0x224
 800d270:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800d274:	ab0c      	add	r3, sp, #48	; 0x30
 800d276:	a90d      	add	r1, sp, #52	; 0x34
 800d278:	f7fe fe2e 	bl	800bed8 <udp_recv>
 800d27c:	2800      	cmp	r0, #0
 800d27e:	d03f      	beq.n	800d300 <_parse_response+0xc8>
 800d280:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d284:	2b43      	cmp	r3, #67	; 0x43
 800d286:	d13b      	bne.n	800d300 <_parse_response+0xc8>
 800d288:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 800d28c:	1e6b      	subs	r3, r5, #1
 800d28e:	1d69      	adds	r1, r5, #5
 800d290:	4299      	cmp	r1, r3
 800d292:	d12f      	bne.n	800d2f4 <_parse_response+0xbc>
 800d294:	2100      	movs	r1, #0
 800d296:	ab0d      	add	r3, sp, #52	; 0x34
 800d298:	181d      	adds	r5, r3, r0
 800d29a:	468c      	mov	ip, r1
 800d29c:	460e      	mov	r6, r1
 800d29e:	4608      	mov	r0, r1
 800d2a0:	ab49      	add	r3, sp, #292	; 0x124
 800d2a2:	42ab      	cmp	r3, r5
 800d2a4:	d337      	bcc.n	800d316 <_parse_response+0xde>
 800d2a6:	b141      	cbz	r1, 800d2ba <_parse_response+0x82>
 800d2a8:	4b39      	ldr	r3, [pc, #228]	; (800d390 <_parse_response+0x158>)
 800d2aa:	9a07      	ldr	r2, [sp, #28]
 800d2ac:	f883 8003 	strb.w	r8, [r3, #3]
 800d2b0:	709a      	strb	r2, [r3, #2]
 800d2b2:	9a06      	ldr	r2, [sp, #24]
 800d2b4:	705a      	strb	r2, [r3, #1]
 800d2b6:	9a05      	ldr	r2, [sp, #20]
 800d2b8:	701a      	strb	r2, [r3, #0]
 800d2ba:	f1bc 0f00 	cmp.w	ip, #0
 800d2be:	d007      	beq.n	800d2d0 <_parse_response+0x98>
 800d2c0:	4b34      	ldr	r3, [pc, #208]	; (800d394 <_parse_response+0x15c>)
 800d2c2:	9a04      	ldr	r2, [sp, #16]
 800d2c4:	705c      	strb	r4, [r3, #1]
 800d2c6:	70da      	strb	r2, [r3, #3]
 800d2c8:	9a03      	ldr	r2, [sp, #12]
 800d2ca:	709a      	strb	r2, [r3, #2]
 800d2cc:	9a02      	ldr	r2, [sp, #8]
 800d2ce:	701a      	strb	r2, [r3, #0]
 800d2d0:	b13e      	cbz	r6, 800d2e2 <_parse_response+0xaa>
 800d2d2:	4b31      	ldr	r3, [pc, #196]	; (800d398 <_parse_response+0x160>)
 800d2d4:	70df      	strb	r7, [r3, #3]
 800d2d6:	f883 a002 	strb.w	sl, [r3, #2]
 800d2da:	f883 9001 	strb.w	r9, [r3, #1]
 800d2de:	f883 b000 	strb.w	fp, [r3]
 800d2e2:	2802      	cmp	r0, #2
 800d2e4:	d102      	bne.n	800d2ec <_parse_response+0xb4>
 800d2e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d2e8:	4b2c      	ldr	r3, [pc, #176]	; (800d39c <_parse_response+0x164>)
 800d2ea:	601a      	str	r2, [r3, #0]
 800d2ec:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800d2f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2f4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800d2f8:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800d2fc:	45e6      	cmp	lr, ip
 800d2fe:	d0c7      	beq.n	800d290 <_parse_response+0x58>
 800d300:	6833      	ldr	r3, [r6, #0]
 800d302:	9a08      	ldr	r2, [sp, #32]
 800d304:	1a9b      	subs	r3, r3, r2
 800d306:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d30a:	d3aa      	bcc.n	800d262 <_parse_response+0x2a>
 800d30c:	2800      	cmp	r0, #0
 800d30e:	d1c1      	bne.n	800d294 <_parse_response+0x5c>
 800d310:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d314:	e7ea      	b.n	800d2ec <_parse_response+0xb4>
 800d316:	781a      	ldrb	r2, [r3, #0]
 800d318:	2a35      	cmp	r2, #53	; 0x35
 800d31a:	d011      	beq.n	800d340 <_parse_response+0x108>
 800d31c:	d808      	bhi.n	800d330 <_parse_response+0xf8>
 800d31e:	2a01      	cmp	r2, #1
 800d320:	d011      	beq.n	800d346 <_parse_response+0x10e>
 800d322:	2a03      	cmp	r2, #3
 800d324:	d019      	beq.n	800d35a <_parse_response+0x122>
 800d326:	b14a      	cbz	r2, 800d33c <_parse_response+0x104>
 800d328:	1c9a      	adds	r2, r3, #2
 800d32a:	785b      	ldrb	r3, [r3, #1]
 800d32c:	4413      	add	r3, r2
 800d32e:	e7b8      	b.n	800d2a2 <_parse_response+0x6a>
 800d330:	2a36      	cmp	r2, #54	; 0x36
 800d332:	d01f      	beq.n	800d374 <_parse_response+0x13c>
 800d334:	2aff      	cmp	r2, #255	; 0xff
 800d336:	d1f7      	bne.n	800d328 <_parse_response+0xf0>
 800d338:	462b      	mov	r3, r5
 800d33a:	e7b2      	b.n	800d2a2 <_parse_response+0x6a>
 800d33c:	3301      	adds	r3, #1
 800d33e:	e7b0      	b.n	800d2a2 <_parse_response+0x6a>
 800d340:	7898      	ldrb	r0, [r3, #2]
 800d342:	3303      	adds	r3, #3
 800d344:	e7ad      	b.n	800d2a2 <_parse_response+0x6a>
 800d346:	f893 b002 	ldrb.w	fp, [r3, #2]
 800d34a:	f893 9003 	ldrb.w	r9, [r3, #3]
 800d34e:	f893 a004 	ldrb.w	sl, [r3, #4]
 800d352:	795f      	ldrb	r7, [r3, #5]
 800d354:	4616      	mov	r6, r2
 800d356:	3306      	adds	r3, #6
 800d358:	e7a3      	b.n	800d2a2 <_parse_response+0x6a>
 800d35a:	789a      	ldrb	r2, [r3, #2]
 800d35c:	78dc      	ldrb	r4, [r3, #3]
 800d35e:	9202      	str	r2, [sp, #8]
 800d360:	791a      	ldrb	r2, [r3, #4]
 800d362:	f04f 0c01 	mov.w	ip, #1
 800d366:	9203      	str	r2, [sp, #12]
 800d368:	795a      	ldrb	r2, [r3, #5]
 800d36a:	9204      	str	r2, [sp, #16]
 800d36c:	785a      	ldrb	r2, [r3, #1]
 800d36e:	4413      	add	r3, r2
 800d370:	3302      	adds	r3, #2
 800d372:	e796      	b.n	800d2a2 <_parse_response+0x6a>
 800d374:	789a      	ldrb	r2, [r3, #2]
 800d376:	f893 8005 	ldrb.w	r8, [r3, #5]
 800d37a:	9205      	str	r2, [sp, #20]
 800d37c:	78da      	ldrb	r2, [r3, #3]
 800d37e:	2101      	movs	r1, #1
 800d380:	9206      	str	r2, [sp, #24]
 800d382:	791a      	ldrb	r2, [r3, #4]
 800d384:	3306      	adds	r3, #6
 800d386:	9207      	str	r2, [sp, #28]
 800d388:	e78b      	b.n	800d2a2 <_parse_response+0x6a>
 800d38a:	bf00      	nop
 800d38c:	2000a094 	mulcs	r0, r4, r0
 800d390:	20008dac 	andcs	r8, r0, ip, lsr #27
 800d394:	20008b7c 	andcs	r8, r0, ip, ror fp
 800d398:	20008b84 	andcs	r8, r0, r4, lsl #23
 800d39c:	20008b80 	andcs	r8, r0, r0, lsl #23

0800d3a0 <memcpy.isra.0>:
 800d3a0:	3801      	subs	r0, #1
 800d3a2:	440a      	add	r2, r1
 800d3a4:	4291      	cmp	r1, r2
 800d3a6:	d100      	bne.n	800d3aa <memcpy.isra.0+0xa>
 800d3a8:	4770      	bx	lr
 800d3aa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d3ae:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d3b2:	e7f7      	b.n	800d3a4 <memcpy.isra.0+0x4>

0800d3b4 <dhcp_client>:
 800d3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3b8:	b087      	sub	sp, #28
 800d3ba:	9203      	str	r2, [sp, #12]
 800d3bc:	4a77      	ldr	r2, [pc, #476]	; (800d59c <dhcp_client+0x1e8>)
 800d3be:	460f      	mov	r7, r1
 800d3c0:	4605      	mov	r5, r0
 800d3c2:	f44f 7309 	mov.w	r3, #548	; 0x224
 800d3c6:	4614      	mov	r4, r2
 800d3c8:	2100      	movs	r1, #0
 800d3ca:	3b01      	subs	r3, #1
 800d3cc:	f802 1b01 	strb.w	r1, [r2], #1
 800d3d0:	d1fb      	bne.n	800d3ca <dhcp_client+0x16>
 800d3d2:	f240 1301 	movw	r3, #257	; 0x101
 800d3d6:	2206      	movs	r2, #6
 800d3d8:	4629      	mov	r1, r5
 800d3da:	4871      	ldr	r0, [pc, #452]	; (800d5a0 <dhcp_client+0x1ec>)
 800d3dc:	8023      	strh	r3, [r4, #0]
 800d3de:	70a2      	strb	r2, [r4, #2]
 800d3e0:	f7ff ffde 	bl	800d3a0 <memcpy.isra.0>
 800d3e4:	4b6f      	ldr	r3, [pc, #444]	; (800d5a4 <dhcp_client+0x1f0>)
 800d3e6:	2044      	movs	r0, #68	; 0x44
 800d3e8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800d3ec:	f240 1335 	movw	r3, #309	; 0x135
 800d3f0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800d3f4:	f7fe fd36 	bl	800be64 <udp_bind>
 800d3f8:	1e06      	subs	r6, r0, #0
 800d3fa:	f2c0 80c9 	blt.w	800d590 <dhcp_client+0x1dc>
 800d3fe:	f04f 0915 	mov.w	r9, #21
 800d402:	f8df a198 	ldr.w	sl, [pc, #408]	; 800d59c <dhcp_client+0x1e8>
 800d406:	f1b9 0901 	subs.w	r9, r9, #1
 800d40a:	d11f      	bne.n	800d44c <dhcp_client+0x98>
 800d40c:	464c      	mov	r4, r9
 800d40e:	2044      	movs	r0, #68	; 0x44
 800d410:	f7fe fd42 	bl	800be98 <udp_unbind>
 800d414:	2c00      	cmp	r4, #0
 800d416:	f000 80be 	beq.w	800d596 <dhcp_client+0x1e2>
 800d41a:	2204      	movs	r2, #4
 800d41c:	4962      	ldr	r1, [pc, #392]	; (800d5a8 <dhcp_client+0x1f4>)
 800d41e:	a805      	add	r0, sp, #20
 800d420:	f7ff ffbe 	bl	800d3a0 <memcpy.isra.0>
 800d424:	9b05      	ldr	r3, [sp, #20]
 800d426:	2204      	movs	r2, #4
 800d428:	4960      	ldr	r1, [pc, #384]	; (800d5ac <dhcp_client+0x1f8>)
 800d42a:	603b      	str	r3, [r7, #0]
 800d42c:	a805      	add	r0, sp, #20
 800d42e:	f7ff ffb7 	bl	800d3a0 <memcpy.isra.0>
 800d432:	9b05      	ldr	r3, [sp, #20]
 800d434:	a805      	add	r0, sp, #20
 800d436:	60bb      	str	r3, [r7, #8]
 800d438:	2204      	movs	r2, #4
 800d43a:	495d      	ldr	r1, [pc, #372]	; (800d5b0 <dhcp_client+0x1fc>)
 800d43c:	f7ff ffb0 	bl	800d3a0 <memcpy.isra.0>
 800d440:	2000      	movs	r0, #0
 800d442:	9b05      	ldr	r3, [sp, #20]
 800d444:	607b      	str	r3, [r7, #4]
 800d446:	b007      	add	sp, #28
 800d448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d44c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800d450:	f240 1807 	movw	r8, #263	; 0x107
 800d454:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d458:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d45c:	782b      	ldrb	r3, [r5, #0]
 800d45e:	4a55      	ldr	r2, [pc, #340]	; (800d5b4 <dhcp_client+0x200>)
 800d460:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d464:	786b      	ldrb	r3, [r5, #1]
 800d466:	fa5f fb86 	uxtb.w	fp, r6
 800d46a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d46e:	78ab      	ldrb	r3, [r5, #2]
 800d470:	4651      	mov	r1, sl
 800d472:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d476:	78eb      	ldrb	r3, [r5, #3]
 800d478:	4658      	mov	r0, fp
 800d47a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d47e:	792b      	ldrb	r3, [r5, #4]
 800d480:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d484:	796b      	ldrb	r3, [r5, #5]
 800d486:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d48a:	4b4b      	ldr	r3, [pc, #300]	; (800d5b8 <dhcp_client+0x204>)
 800d48c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800d490:	23ff      	movs	r3, #255	; 0xff
 800d492:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800d496:	2343      	movs	r3, #67	; 0x43
 800d498:	f240 1205 	movw	r2, #261	; 0x105
 800d49c:	9300      	str	r3, [sp, #0]
 800d49e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d4a2:	f7fe fd75 	bl	800bf90 <udp_send>
 800d4a6:	4629      	mov	r1, r5
 800d4a8:	4630      	mov	r0, r6
 800d4aa:	f7ff fec5 	bl	800d238 <_parse_response>
 800d4ae:	2802      	cmp	r0, #2
 800d4b0:	d1a9      	bne.n	800d406 <dhcp_client+0x52>
 800d4b2:	f643 5303 	movw	r3, #15619	; 0x3d03
 800d4b6:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800d4ba:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800d4be:	782b      	ldrb	r3, [r5, #0]
 800d4c0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800d5bc <dhcp_client+0x208>
 800d4c4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800d4c8:	786b      	ldrb	r3, [r5, #1]
 800d4ca:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800d4ce:	78ab      	ldrb	r3, [r5, #2]
 800d4d0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800d4d4:	78eb      	ldrb	r3, [r5, #3]
 800d4d6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800d4da:	792b      	ldrb	r3, [r5, #4]
 800d4dc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800d4e0:	796b      	ldrb	r3, [r5, #5]
 800d4e2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800d4e6:	f240 4332 	movw	r3, #1074	; 0x432
 800d4ea:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800d4ee:	4b2e      	ldr	r3, [pc, #184]	; (800d5a8 <dhcp_client+0x1f4>)
 800d4f0:	881a      	ldrh	r2, [r3, #0]
 800d4f2:	885b      	ldrh	r3, [r3, #2]
 800d4f4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800d4f8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800d4fc:	f240 4336 	movw	r3, #1078	; 0x436
 800d500:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800d504:	4b2e      	ldr	r3, [pc, #184]	; (800d5c0 <dhcp_client+0x20c>)
 800d506:	221e      	movs	r2, #30
 800d508:	681b      	ldr	r3, [r3, #0]
 800d50a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800d50e:	230c      	movs	r3, #12
 800d510:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800d514:	9b03      	ldr	r3, [sp, #12]
 800d516:	1e58      	subs	r0, r3, #1
 800d518:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800d51c:	f1a2 0e1e 	sub.w	lr, r2, #30
 800d520:	1c51      	adds	r1, r2, #1
 800d522:	bb8b      	cbnz	r3, 800d588 <dhcp_client+0x1d4>
 800d524:	2037      	movs	r0, #55	; 0x37
 800d526:	18a3      	adds	r3, r4, r2
 800d528:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800d52c:	2006      	movs	r0, #6
 800d52e:	4421      	add	r1, r4
 800d530:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800d534:	2103      	movs	r1, #3
 800d536:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800d53a:	210f      	movs	r1, #15
 800d53c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800d540:	213a      	movs	r1, #58	; 0x3a
 800d542:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800d546:	213b      	movs	r1, #59	; 0x3b
 800d548:	f04f 0801 	mov.w	r8, #1
 800d54c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800d550:	21ff      	movs	r1, #255	; 0xff
 800d552:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800d556:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800d55a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800d55e:	2343      	movs	r3, #67	; 0x43
 800d560:	32f5      	adds	r2, #245	; 0xf5
 800d562:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800d566:	4651      	mov	r1, sl
 800d568:	9300      	str	r3, [sp, #0]
 800d56a:	b292      	uxth	r2, r2
 800d56c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d570:	4658      	mov	r0, fp
 800d572:	f7fe fd0d 	bl	800bf90 <udp_send>
 800d576:	4629      	mov	r1, r5
 800d578:	4630      	mov	r0, r6
 800d57a:	f7ff fe5d 	bl	800d238 <_parse_response>
 800d57e:	2805      	cmp	r0, #5
 800d580:	f47f af41 	bne.w	800d406 <dhcp_client+0x52>
 800d584:	4644      	mov	r4, r8
 800d586:	e742      	b.n	800d40e <dhcp_client+0x5a>
 800d588:	460a      	mov	r2, r1
 800d58a:	f80c 3f01 	strb.w	r3, [ip, #1]!
 800d58e:	e7c3      	b.n	800d518 <dhcp_client+0x164>
 800d590:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d594:	e757      	b.n	800d446 <dhcp_client+0x92>
 800d596:	f06f 0001 	mvn.w	r0, #1
 800d59a:	e754      	b.n	800d446 <dhcp_client+0x92>
 800d59c:	20008b88 	andcs	r8, r0, r8, lsl #23
 800d5a0:	20008ba4 	andcs	r8, r0, r4, lsr #23
 800d5a4:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800d5a8:	20008b80 	andcs	r8, r0, r0, lsl #23
 800d5ac:	20008b7c 	andcs	r8, r0, ip, ror fp
 800d5b0:	20008b84 	andcs	r8, r0, r4, lsl #23
 800d5b4:	03010637 	movweq	r0, #5687	; 0x1637
 800d5b8:	3b3a0f06 	blcc	8e911d8 <__exidx_end+0xe7e7d4>
 800d5bc:	20008c91 	mulcs	r0, r1, ip
 800d5c0:	20008dac 	andcs	r8, r0, ip, lsr #27

0800d5c4 <dhcp_client_release>:
 800d5c4:	b507      	push	{r0, r1, r2, lr}
 800d5c6:	2044      	movs	r0, #68	; 0x44
 800d5c8:	f7fe fc4c 	bl	800be64 <udp_bind>
 800d5cc:	f243 6307 	movw	r3, #13831	; 0x3607
 800d5d0:	4911      	ldr	r1, [pc, #68]	; (800d618 <dhcp_client_release+0x54>)
 800d5d2:	b2c0      	uxtb	r0, r0
 800d5d4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800d5d8:	2304      	movs	r3, #4
 800d5da:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800d5de:	4b0f      	ldr	r3, [pc, #60]	; (800d61c <dhcp_client_release+0x58>)
 800d5e0:	781a      	ldrb	r2, [r3, #0]
 800d5e2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800d5e6:	785a      	ldrb	r2, [r3, #1]
 800d5e8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800d5ec:	789a      	ldrb	r2, [r3, #2]
 800d5ee:	78db      	ldrb	r3, [r3, #3]
 800d5f0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800d5f4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800d5f8:	23ff      	movs	r3, #255	; 0xff
 800d5fa:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800d5fe:	2343      	movs	r3, #67	; 0x43
 800d600:	22fa      	movs	r2, #250	; 0xfa
 800d602:	9300      	str	r3, [sp, #0]
 800d604:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d608:	f7fe fcc2 	bl	800bf90 <udp_send>
 800d60c:	2044      	movs	r0, #68	; 0x44
 800d60e:	b003      	add	sp, #12
 800d610:	f85d eb04 	ldr.w	lr, [sp], #4
 800d614:	f7fe bc40 	b.w	800be98 <udp_unbind>
 800d618:	20008b88 	andcs	r8, r0, r8, lsl #23
 800d61c:	20008dac 	andcs	r8, r0, ip, lsr #27

0800d620 <memcpy.isra.0>:
 800d620:	3801      	subs	r0, #1
 800d622:	440a      	add	r2, r1
 800d624:	4291      	cmp	r1, r2
 800d626:	d100      	bne.n	800d62a <memcpy.isra.0+0xa>
 800d628:	4770      	bx	lr
 800d62a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d62e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d632:	e7f7      	b.n	800d624 <memcpy.isra.0+0x4>

0800d634 <_send_report>:
 800d634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d636:	491c      	ldr	r1, [pc, #112]	; (800d6a8 <_send_report+0x74>)
 800d638:	4c1c      	ldr	r4, [pc, #112]	; (800d6ac <_send_report+0x78>)
 800d63a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800d63e:	9001      	str	r0, [sp, #4]
 800d640:	70cb      	strb	r3, [r1, #3]
 800d642:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800d646:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800d64a:	710b      	strb	r3, [r1, #4]
 800d64c:	7148      	strb	r0, [r1, #5]
 800d64e:	2206      	movs	r2, #6
 800d650:	4620      	mov	r0, r4
 800d652:	f7ff ffe5 	bl	800d620 <memcpy.isra.0>
 800d656:	2204      	movs	r2, #4
 800d658:	2700      	movs	r7, #0
 800d65a:	4d15      	ldr	r5, [pc, #84]	; (800d6b0 <_send_report+0x7c>)
 800d65c:	eb0d 0102 	add.w	r1, sp, r2
 800d660:	882b      	ldrh	r3, [r5, #0]
 800d662:	f104 001e 	add.w	r0, r4, #30
 800d666:	f104 060e 	add.w	r6, r4, #14
 800d66a:	8263      	strh	r3, [r4, #18]
 800d66c:	f7ff ffd8 	bl	800d620 <memcpy.isra.0>
 800d670:	2118      	movs	r1, #24
 800d672:	4630      	mov	r0, r6
 800d674:	8327      	strh	r7, [r4, #24]
 800d676:	f000 f8c6 	bl	800d806 <net_chksum>
 800d67a:	2204      	movs	r2, #4
 800d67c:	8320      	strh	r0, [r4, #24]
 800d67e:	eb0d 0102 	add.w	r1, sp, r2
 800d682:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800d686:	f7ff ffcb 	bl	800d620 <memcpy.isra.0>
 800d68a:	2120      	movs	r1, #32
 800d68c:	4630      	mov	r0, r6
 800d68e:	8527      	strh	r7, [r4, #40]	; 0x28
 800d690:	f000 f8b9 	bl	800d806 <net_chksum>
 800d694:	212e      	movs	r1, #46	; 0x2e
 800d696:	8520      	strh	r0, [r4, #40]	; 0x28
 800d698:	4620      	mov	r0, r4
 800d69a:	f002 ff2f 	bl	80104fc <emac_eth_send>
 800d69e:	882b      	ldrh	r3, [r5, #0]
 800d6a0:	3301      	adds	r3, #1
 800d6a2:	802b      	strh	r3, [r5, #0]
 800d6a4:	b003      	add	sp, #12
 800d6a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d6a8:	20008f08 	andcs	r8, r0, r8, lsl #30
 800d6ac:	20008f10 	andcs	r8, r0, r0, lsl pc
 800d6b0:	20008ed0 	ldrdcs	r8, [r0], -r0

0800d6b4 <igmp_set_ip>:
 800d6b4:	b507      	push	{r0, r1, r2, lr}
 800d6b6:	2204      	movs	r2, #4
 800d6b8:	6803      	ldr	r3, [r0, #0]
 800d6ba:	eb0d 0102 	add.w	r1, sp, r2
 800d6be:	4806      	ldr	r0, [pc, #24]	; (800d6d8 <igmp_set_ip+0x24>)
 800d6c0:	9301      	str	r3, [sp, #4]
 800d6c2:	f7ff ffad 	bl	800d620 <memcpy.isra.0>
 800d6c6:	2204      	movs	r2, #4
 800d6c8:	4804      	ldr	r0, [pc, #16]	; (800d6dc <igmp_set_ip+0x28>)
 800d6ca:	eb0d 0102 	add.w	r1, sp, r2
 800d6ce:	f7ff ffa7 	bl	800d620 <memcpy.isra.0>
 800d6d2:	b003      	add	sp, #12
 800d6d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800d6d8:	20008f2a 	andcs	r8, r0, sl, lsr #30
 800d6dc:	20008ef2 	strdcs	r8, [r0], -r2

0800d6e0 <igmp_timer>:
 800d6e0:	b570      	push	{r4, r5, r6, lr}
 800d6e2:	2500      	movs	r5, #0
 800d6e4:	2602      	movs	r6, #2
 800d6e6:	4c0a      	ldr	r4, [pc, #40]	; (800d710 <igmp_timer+0x30>)
 800d6e8:	7963      	ldrb	r3, [r4, #5]
 800d6ea:	2b01      	cmp	r3, #1
 800d6ec:	d109      	bne.n	800d702 <igmp_timer+0x22>
 800d6ee:	7923      	ldrb	r3, [r4, #4]
 800d6f0:	b13b      	cbz	r3, 800d702 <igmp_timer+0x22>
 800d6f2:	3b01      	subs	r3, #1
 800d6f4:	b2db      	uxtb	r3, r3
 800d6f6:	7123      	strb	r3, [r4, #4]
 800d6f8:	b91b      	cbnz	r3, 800d702 <igmp_timer+0x22>
 800d6fa:	6820      	ldr	r0, [r4, #0]
 800d6fc:	f7ff ff9a 	bl	800d634 <_send_report>
 800d700:	7166      	strb	r6, [r4, #5]
 800d702:	3501      	adds	r5, #1
 800d704:	2d24      	cmp	r5, #36	; 0x24
 800d706:	f104 0408 	add.w	r4, r4, #8
 800d70a:	d1ed      	bne.n	800d6e8 <igmp_timer+0x8>
 800d70c:	bd70      	pop	{r4, r5, r6, pc}
 800d70e:	bf00      	nop
 800d710:	20008db0 			; <UNDEFINED> instruction: 0x20008db0

0800d714 <igmp_join>:
 800d714:	b538      	push	{r3, r4, r5, lr}
 800d716:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800d71a:	2be0      	cmp	r3, #224	; 0xe0
 800d71c:	d11b      	bne.n	800d756 <igmp_join+0x42>
 800d71e:	4911      	ldr	r1, [pc, #68]	; (800d764 <igmp_join+0x50>)
 800d720:	680c      	ldr	r4, [r1, #0]
 800d722:	2c24      	cmp	r4, #36	; 0x24
 800d724:	d01a      	beq.n	800d75c <igmp_join+0x48>
 800d726:	2300      	movs	r3, #0
 800d728:	4a0f      	ldr	r2, [pc, #60]	; (800d768 <igmp_join+0x54>)
 800d72a:	429c      	cmp	r4, r3
 800d72c:	dc0d      	bgt.n	800d74a <igmp_join+0x36>
 800d72e:	f44f 7381 	mov.w	r3, #258	; 0x102
 800d732:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800d736:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800d73a:	8093      	strh	r3, [r2, #4]
 800d73c:	1c63      	adds	r3, r4, #1
 800d73e:	600b      	str	r3, [r1, #0]
 800d740:	f7ff ff78 	bl	800d634 <_send_report>
 800d744:	4623      	mov	r3, r4
 800d746:	4618      	mov	r0, r3
 800d748:	bd38      	pop	{r3, r4, r5, pc}
 800d74a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800d74e:	4285      	cmp	r5, r0
 800d750:	d0f9      	beq.n	800d746 <igmp_join+0x32>
 800d752:	3301      	adds	r3, #1
 800d754:	e7e9      	b.n	800d72a <igmp_join+0x16>
 800d756:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d75a:	e7f4      	b.n	800d746 <igmp_join+0x32>
 800d75c:	f06f 0301 	mvn.w	r3, #1
 800d760:	e7f1      	b.n	800d746 <igmp_join+0x32>
 800d762:	bf00      	nop
 800d764:	20008ed4 	ldrdcs	r8, [r0], -r4
 800d768:	20008db0 			; <UNDEFINED> instruction: 0x20008db0

0800d76c <igmp_leave>:
 800d76c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d770:	2600      	movs	r6, #0
 800d772:	4f1c      	ldr	r7, [pc, #112]	; (800d7e4 <igmp_leave+0x78>)
 800d774:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800d778:	4283      	cmp	r3, r0
 800d77a:	d007      	beq.n	800d78c <igmp_leave+0x20>
 800d77c:	3601      	adds	r6, #1
 800d77e:	2e24      	cmp	r6, #36	; 0x24
 800d780:	d1f8      	bne.n	800d774 <igmp_leave+0x8>
 800d782:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d786:	b002      	add	sp, #8
 800d788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d78c:	2400      	movs	r4, #0
 800d78e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800d7e8 <igmp_leave+0x7c>
 800d792:	4d16      	ldr	r5, [pc, #88]	; (800d7ec <igmp_leave+0x80>)
 800d794:	f8b8 3000 	ldrh.w	r3, [r8]
 800d798:	2118      	movs	r1, #24
 800d79a:	9001      	str	r0, [sp, #4]
 800d79c:	4814      	ldr	r0, [pc, #80]	; (800d7f0 <igmp_leave+0x84>)
 800d79e:	826b      	strh	r3, [r5, #18]
 800d7a0:	832c      	strh	r4, [r5, #24]
 800d7a2:	f000 f830 	bl	800d806 <net_chksum>
 800d7a6:	2204      	movs	r2, #4
 800d7a8:	8328      	strh	r0, [r5, #24]
 800d7aa:	eb0d 0102 	add.w	r1, sp, r2
 800d7ae:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800d7b2:	f7ff ff35 	bl	800d620 <memcpy.isra.0>
 800d7b6:	2120      	movs	r1, #32
 800d7b8:	f105 000e 	add.w	r0, r5, #14
 800d7bc:	852c      	strh	r4, [r5, #40]	; 0x28
 800d7be:	f000 f822 	bl	800d806 <net_chksum>
 800d7c2:	212e      	movs	r1, #46	; 0x2e
 800d7c4:	8528      	strh	r0, [r5, #40]	; 0x28
 800d7c6:	4628      	mov	r0, r5
 800d7c8:	f002 fe98 	bl	80104fc <emac_eth_send>
 800d7cc:	f8b8 3000 	ldrh.w	r3, [r8]
 800d7d0:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800d7d4:	3301      	adds	r3, #1
 800d7d6:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800d7da:	4620      	mov	r0, r4
 800d7dc:	f8a8 3000 	strh.w	r3, [r8]
 800d7e0:	80bc      	strh	r4, [r7, #4]
 800d7e2:	e7d0      	b.n	800d786 <igmp_leave+0x1a>
 800d7e4:	20008db0 			; <UNDEFINED> instruction: 0x20008db0
 800d7e8:	20008ed0 	ldrdcs	r8, [r0], -r0
 800d7ec:	20008ed8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 800d7f0:	20008f1e 	andcs	r8, r0, lr, lsl pc

0800d7f4 <ip_set_ip>:
 800d7f4:	b510      	push	{r4, lr}
 800d7f6:	4604      	mov	r4, r0
 800d7f8:	f7fe fb14 	bl	800be24 <udp_set_ip>
 800d7fc:	4620      	mov	r0, r4
 800d7fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d802:	f7ff bf57 	b.w	800d6b4 <igmp_set_ip>

0800d806 <net_chksum>:
 800d806:	2300      	movs	r3, #0
 800d808:	f021 0201 	bic.w	r2, r1, #1
 800d80c:	b530      	push	{r4, r5, lr}
 800d80e:	1884      	adds	r4, r0, r2
 800d810:	42a0      	cmp	r0, r4
 800d812:	d10b      	bne.n	800d82c <net_chksum+0x26>
 800d814:	4291      	cmp	r1, r2
 800d816:	d004      	beq.n	800d822 <net_chksum+0x1c>
 800d818:	7802      	ldrb	r2, [r0, #0]
 800d81a:	0212      	lsls	r2, r2, #8
 800d81c:	ba52      	rev16	r2, r2
 800d81e:	b292      	uxth	r2, r2
 800d820:	4413      	add	r3, r2
 800d822:	0c1a      	lsrs	r2, r3, #16
 800d824:	d106      	bne.n	800d834 <net_chksum+0x2e>
 800d826:	43d8      	mvns	r0, r3
 800d828:	b280      	uxth	r0, r0
 800d82a:	bd30      	pop	{r4, r5, pc}
 800d82c:	f830 5b02 	ldrh.w	r5, [r0], #2
 800d830:	442b      	add	r3, r5
 800d832:	e7ed      	b.n	800d810 <net_chksum+0xa>
 800d834:	b29b      	uxth	r3, r3
 800d836:	e7f3      	b.n	800d820 <net_chksum+0x1a>

0800d838 <net::link_register_read()>:
 800d838:	b507      	push	{r0, r1, r2, lr}
 800d83a:	2201      	movs	r2, #1
 800d83c:	f10d 0306 	add.w	r3, sp, #6
 800d840:	4611      	mov	r1, r2
 800d842:	2000      	movs	r0, #0
 800d844:	f001 ff56 	bl	800f6f4 <enet_phy_write_read>
 800d848:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d84c:	f080 0004 	eor.w	r0, r0, #4
 800d850:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800d854:	b003      	add	sp, #12
 800d856:	f85d fb04 	ldr.w	pc, [sp], #4

0800d85a <memcpy.isra.0>:
 800d85a:	3801      	subs	r0, #1
 800d85c:	440a      	add	r2, r1
 800d85e:	4291      	cmp	r1, r2
 800d860:	d100      	bne.n	800d864 <memcpy.isra.0+0xa>
 800d862:	4770      	bx	lr
 800d864:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d868:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d86c:	e7f7      	b.n	800d85e <memcpy.isra.0+0x4>
	...

0800d870 <ConfigStore::GetStoreOffset(configstore::Store)>:
 800d870:	2300      	movs	r3, #0
 800d872:	2020      	movs	r0, #32
 800d874:	b510      	push	{r4, lr}
 800d876:	4a04      	ldr	r2, [pc, #16]	; (800d888 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 800d878:	428b      	cmp	r3, r1
 800d87a:	d100      	bne.n	800d87e <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 800d87c:	bd10      	pop	{r4, pc}
 800d87e:	f852 4b04 	ldr.w	r4, [r2], #4
 800d882:	3301      	adds	r3, #1
 800d884:	4420      	add	r0, r4
 800d886:	e7f7      	b.n	800d878 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 800d888:	080124dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, sp}

0800d88c <ConfigStore::Init()>:
 800d88c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d890:	b085      	sub	sp, #20
 800d892:	4607      	mov	r7, r0
 800d894:	f000 fae6 	bl	800de64 <StoreDevice::GetSectorSize() const>
 800d898:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800d89c:	4605      	mov	r5, r0
 800d89e:	d004      	beq.n	800d8aa <ConfigStore::Init()+0x1e>
 800d8a0:	2500      	movs	r5, #0
 800d8a2:	4628      	mov	r0, r5
 800d8a4:	b005      	add	sp, #20
 800d8a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8aa:	4638      	mov	r0, r7
 800d8ac:	f000 fad8 	bl	800de60 <StoreDevice::GetSize() const>
 800d8b0:	4b3a      	ldr	r3, [pc, #232]	; (800d99c <ConfigStore::Init()+0x110>)
 800d8b2:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800d8b6:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800d8ba:	6019      	str	r1, [r3, #0]
 800d8bc:	2e00      	cmp	r6, #0
 800d8be:	d1ef      	bne.n	800d8a0 <ConfigStore::Init()+0x14>
 800d8c0:	4c37      	ldr	r4, [pc, #220]	; (800d9a0 <ConfigStore::Init()+0x114>)
 800d8c2:	ab03      	add	r3, sp, #12
 800d8c4:	462a      	mov	r2, r5
 800d8c6:	9300      	str	r3, [sp, #0]
 800d8c8:	4638      	mov	r0, r7
 800d8ca:	4623      	mov	r3, r4
 800d8cc:	f000 facc 	bl	800de68 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 800d8d0:	7823      	ldrb	r3, [r4, #0]
 800d8d2:	2b41      	cmp	r3, #65	; 0x41
 800d8d4:	bf1c      	itt	ne
 800d8d6:	2341      	movne	r3, #65	; 0x41
 800d8d8:	7023      	strbne	r3, [r4, #0]
 800d8da:	7863      	ldrb	r3, [r4, #1]
 800d8dc:	bf14      	ite	ne
 800d8de:	4635      	movne	r5, r6
 800d8e0:	2501      	moveq	r5, #1
 800d8e2:	2b76      	cmp	r3, #118	; 0x76
 800d8e4:	bf1c      	itt	ne
 800d8e6:	2376      	movne	r3, #118	; 0x76
 800d8e8:	7063      	strbne	r3, [r4, #1]
 800d8ea:	78a3      	ldrb	r3, [r4, #2]
 800d8ec:	bf18      	it	ne
 800d8ee:	2500      	movne	r5, #0
 800d8f0:	2b56      	cmp	r3, #86	; 0x56
 800d8f2:	bf1c      	itt	ne
 800d8f4:	2356      	movne	r3, #86	; 0x56
 800d8f6:	70a3      	strbne	r3, [r4, #2]
 800d8f8:	78e3      	ldrb	r3, [r4, #3]
 800d8fa:	bf18      	it	ne
 800d8fc:	2500      	movne	r5, #0
 800d8fe:	2b10      	cmp	r3, #16
 800d900:	d01f      	beq.n	800d942 <ConfigStore::Init()+0xb6>
 800d902:	2310      	movs	r3, #16
 800d904:	70e3      	strb	r3, [r4, #3]
 800d906:	2201      	movs	r2, #1
 800d908:	2500      	movs	r5, #0
 800d90a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d90e:	4b25      	ldr	r3, [pc, #148]	; (800d9a4 <ConfigStore::Init()+0x118>)
 800d910:	f8df 8094 	ldr.w	r8, [pc, #148]	; 800d9a8 <ConfigStore::Init()+0x11c>
 800d914:	701a      	strb	r2, [r3, #0]
 800d916:	4631      	mov	r1, r6
 800d918:	4638      	mov	r0, r7
 800d91a:	f7ff ffa9 	bl	800d870 <ConfigStore::GetStoreOffset(configstore::Store)>
 800d91e:	1823      	adds	r3, r4, r0
 800d920:	5425      	strb	r5, [r4, r0]
 800d922:	705d      	strb	r5, [r3, #1]
 800d924:	709d      	strb	r5, [r3, #2]
 800d926:	70dd      	strb	r5, [r3, #3]
 800d928:	f858 3b04 	ldr.w	r3, [r8], #4
 800d92c:	1d02      	adds	r2, r0, #4
 800d92e:	4403      	add	r3, r0
 800d930:	429a      	cmp	r2, r3
 800d932:	d32f      	bcc.n	800d994 <ConfigStore::Init()+0x108>
 800d934:	3601      	adds	r6, #1
 800d936:	2e1c      	cmp	r6, #28
 800d938:	d1ed      	bne.n	800d916 <ConfigStore::Init()+0x8a>
 800d93a:	2501      	movs	r5, #1
 800d93c:	4b1b      	ldr	r3, [pc, #108]	; (800d9ac <ConfigStore::Init()+0x120>)
 800d93e:	601d      	str	r5, [r3, #0]
 800d940:	e7af      	b.n	800d8a2 <ConfigStore::Init()+0x16>
 800d942:	2d00      	cmp	r5, #0
 800d944:	d0df      	beq.n	800d906 <ConfigStore::Init()+0x7a>
 800d946:	f04f 0900 	mov.w	r9, #0
 800d94a:	46c8      	mov	r8, r9
 800d94c:	4631      	mov	r1, r6
 800d94e:	4638      	mov	r0, r7
 800d950:	f7ff ff8e 	bl	800d870 <ConfigStore::GetStoreOffset(configstore::Store)>
 800d954:	5c23      	ldrb	r3, [r4, r0]
 800d956:	2bff      	cmp	r3, #255	; 0xff
 800d958:	d112      	bne.n	800d980 <ConfigStore::Init()+0xf4>
 800d95a:	1823      	adds	r3, r4, r0
 800d95c:	785a      	ldrb	r2, [r3, #1]
 800d95e:	2aff      	cmp	r2, #255	; 0xff
 800d960:	d10e      	bne.n	800d980 <ConfigStore::Init()+0xf4>
 800d962:	789a      	ldrb	r2, [r3, #2]
 800d964:	2aff      	cmp	r2, #255	; 0xff
 800d966:	d10b      	bne.n	800d980 <ConfigStore::Init()+0xf4>
 800d968:	78da      	ldrb	r2, [r3, #3]
 800d96a:	2aff      	cmp	r2, #255	; 0xff
 800d96c:	d108      	bne.n	800d980 <ConfigStore::Init()+0xf4>
 800d96e:	46a9      	mov	r9, r5
 800d970:	f804 8000 	strb.w	r8, [r4, r0]
 800d974:	f883 8001 	strb.w	r8, [r3, #1]
 800d978:	f883 8002 	strb.w	r8, [r3, #2]
 800d97c:	f883 8003 	strb.w	r8, [r3, #3]
 800d980:	3601      	adds	r6, #1
 800d982:	2e1c      	cmp	r6, #28
 800d984:	d1e2      	bne.n	800d94c <ConfigStore::Init()+0xc0>
 800d986:	f1b9 0f00 	cmp.w	r9, #0
 800d98a:	d08a      	beq.n	800d8a2 <ConfigStore::Init()+0x16>
 800d98c:	2201      	movs	r2, #1
 800d98e:	4b07      	ldr	r3, [pc, #28]	; (800d9ac <ConfigStore::Init()+0x120>)
 800d990:	601a      	str	r2, [r3, #0]
 800d992:	e786      	b.n	800d8a2 <ConfigStore::Init()+0x16>
 800d994:	f804 9002 	strb.w	r9, [r4, r2]
 800d998:	3201      	adds	r2, #1
 800d99a:	e7c9      	b.n	800d930 <ConfigStore::Init()+0xa4>
 800d99c:	20009f44 	andcs	r9, r0, r4, asr #30
 800d9a0:	20008f44 	andcs	r8, r0, r4, asr #30
 800d9a4:	20009f58 	andcs	r9, r0, r8, asr pc
 800d9a8:	080124dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, sp}
 800d9ac:	20009f50 	andcs	r9, r0, r0, asr pc

0800d9b0 <ConfigStore::ConfigStore()>:
 800d9b0:	b538      	push	{r3, r4, r5, lr}
 800d9b2:	4604      	mov	r4, r0
 800d9b4:	f000 fa4c 	bl	800de50 <StoreDevice::StoreDevice()>
 800d9b8:	4b0b      	ldr	r3, [pc, #44]	; (800d9e8 <ConfigStore::ConfigStore()+0x38>)
 800d9ba:	4d0c      	ldr	r5, [pc, #48]	; (800d9ec <ConfigStore::ConfigStore()+0x3c>)
 800d9bc:	601c      	str	r4, [r3, #0]
 800d9be:	7863      	ldrb	r3, [r4, #1]
 800d9c0:	b11b      	cbz	r3, 800d9ca <ConfigStore::ConfigStore()+0x1a>
 800d9c2:	4620      	mov	r0, r4
 800d9c4:	f7ff ff62 	bl	800d88c <ConfigStore::Init()>
 800d9c8:	7028      	strb	r0, [r5, #0]
 800d9ca:	782b      	ldrb	r3, [r5, #0]
 800d9cc:	b153      	cbz	r3, 800d9e4 <ConfigStore::ConfigStore()+0x34>
 800d9ce:	2320      	movs	r3, #32
 800d9d0:	2200      	movs	r2, #0
 800d9d2:	4907      	ldr	r1, [pc, #28]	; (800d9f0 <ConfigStore::ConfigStore()+0x40>)
 800d9d4:	f851 0b04 	ldr.w	r0, [r1], #4
 800d9d8:	3201      	adds	r2, #1
 800d9da:	2a1c      	cmp	r2, #28
 800d9dc:	4403      	add	r3, r0
 800d9de:	d1f9      	bne.n	800d9d4 <ConfigStore::ConfigStore()+0x24>
 800d9e0:	4a04      	ldr	r2, [pc, #16]	; (800d9f4 <ConfigStore::ConfigStore()+0x44>)
 800d9e2:	6013      	str	r3, [r2, #0]
 800d9e4:	4620      	mov	r0, r4
 800d9e6:	bd38      	pop	{r3, r4, r5, pc}
 800d9e8:	20009f54 	andcs	r9, r0, r4, asr pc
 800d9ec:	20009f48 	andcs	r9, r0, r8, asr #30
 800d9f0:	080124dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, sp}
 800d9f4:	20009f4c 	andcs	r9, r0, ip, asr #30

0800d9f8 <ConfigStore::ResetSetList(configstore::Store)>:
 800d9f8:	b508      	push	{r3, lr}
 800d9fa:	f7ff ff39 	bl	800d870 <ConfigStore::GetStoreOffset(configstore::Store)>
 800d9fe:	2300      	movs	r3, #0
 800da00:	4904      	ldr	r1, [pc, #16]	; (800da14 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 800da02:	1842      	adds	r2, r0, r1
 800da04:	540b      	strb	r3, [r1, r0]
 800da06:	7053      	strb	r3, [r2, #1]
 800da08:	7093      	strb	r3, [r2, #2]
 800da0a:	70d3      	strb	r3, [r2, #3]
 800da0c:	2201      	movs	r2, #1
 800da0e:	4b02      	ldr	r3, [pc, #8]	; (800da18 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 800da10:	601a      	str	r2, [r3, #0]
 800da12:	bd08      	pop	{r3, pc}
 800da14:	20008f44 	andcs	r8, r0, r4, asr #30
 800da18:	20009f50 	andcs	r9, r0, r0, asr pc

0800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800da1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da20:	461c      	mov	r4, r3
 800da22:	4b19      	ldr	r3, [pc, #100]	; (800da88 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800da24:	4616      	mov	r6, r2
 800da26:	781f      	ldrb	r7, [r3, #0]
 800da28:	9d07      	ldr	r5, [sp, #28]
 800da2a:	b307      	cbz	r7, 800da6e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800da2c:	f7ff ff20 	bl	800d870 <ConfigStore::GetStoreOffset(configstore::Store)>
 800da30:	f04f 0c00 	mov.w	ip, #0
 800da34:	4a15      	ldr	r2, [pc, #84]	; (800da8c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800da36:	1831      	adds	r1, r6, r0
 800da38:	1e63      	subs	r3, r4, #1
 800da3a:	9c06      	ldr	r4, [sp, #24]
 800da3c:	4411      	add	r1, r2
 800da3e:	440c      	add	r4, r1
 800da40:	42a1      	cmp	r1, r4
 800da42:	d116      	bne.n	800da72 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800da44:	f1bc 0f00 	cmp.w	ip, #0
 800da48:	d011      	beq.n	800da6e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800da4a:	4b11      	ldr	r3, [pc, #68]	; (800da90 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800da4c:	6819      	ldr	r1, [r3, #0]
 800da4e:	b109      	cbz	r1, 800da54 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800da50:	2906      	cmp	r1, #6
 800da52:	d101      	bne.n	800da58 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800da54:	2101      	movs	r1, #1
 800da56:	6019      	str	r1, [r3, #0]
 800da58:	4b0e      	ldr	r3, [pc, #56]	; (800da94 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800da5a:	6819      	ldr	r1, [r3, #0]
 800da5c:	4b0e      	ldr	r3, [pc, #56]	; (800da98 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800da5e:	6019      	str	r1, [r3, #0]
 800da60:	b12e      	cbz	r6, 800da6e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800da62:	b125      	cbz	r5, 800da6e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800da64:	9b08      	ldr	r3, [sp, #32]
 800da66:	4418      	add	r0, r3
 800da68:	5813      	ldr	r3, [r2, r0]
 800da6a:	432b      	orrs	r3, r5
 800da6c:	5013      	str	r3, [r2, r0]
 800da6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da72:	f891 8000 	ldrb.w	r8, [r1]
 800da76:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800da7a:	3101      	adds	r1, #1
 800da7c:	45f0      	cmp	r8, lr
 800da7e:	bf1c      	itt	ne
 800da80:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800da84:	46bc      	movne	ip, r7
 800da86:	e7db      	b.n	800da40 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800da88:	20009f48 	andcs	r9, r0, r8, asr #30
 800da8c:	20008f44 	andcs	r8, r0, r4, asr #30
 800da90:	20009f50 	andcs	r9, r0, r0, asr pc
 800da94:	2000a094 	mulcs	r0, r4, r0
 800da98:	20008f40 	andcs	r8, r0, r0, asr #30

0800da9c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 800da9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800daa0:	461d      	mov	r5, r3
 800daa2:	4b15      	ldr	r3, [pc, #84]	; (800daf8 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800daa4:	b085      	sub	sp, #20
 800daa6:	781b      	ldrb	r3, [r3, #0]
 800daa8:	4607      	mov	r7, r0
 800daaa:	4614      	mov	r4, r2
 800daac:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800dab0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800dab4:	b193      	cbz	r3, 800dadc <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800dab6:	f7ff fedb 	bl	800d870 <ConfigStore::GetStoreOffset(configstore::Store)>
 800daba:	4a10      	ldr	r2, [pc, #64]	; (800dafc <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800dabc:	eb08 0600 	add.w	r6, r8, r0
 800dac0:	18b3      	adds	r3, r6, r2
 800dac2:	f1b9 0f00 	cmp.w	r9, #0
 800dac6:	d013      	beq.n	800daf0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800dac8:	5990      	ldr	r0, [r2, r6]
 800daca:	b988      	cbnz	r0, 800daf0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800dacc:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800dad0:	4623      	mov	r3, r4
 800dad2:	4642      	mov	r2, r8
 800dad4:	4638      	mov	r0, r7
 800dad6:	9500      	str	r5, [sp, #0]
 800dad8:	f7ff ffa0 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dadc:	b005      	add	sp, #20
 800dade:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dae2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dae6:	f804 2f01 	strb.w	r2, [r4, #1]!
 800daea:	429d      	cmp	r5, r3
 800daec:	d1f9      	bne.n	800dae2 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800daee:	e7f5      	b.n	800dadc <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800daf0:	3c01      	subs	r4, #1
 800daf2:	441d      	add	r5, r3
 800daf4:	e7f9      	b.n	800daea <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800daf6:	bf00      	nop
 800daf8:	20009f48 	andcs	r9, r0, r8, asr #30
 800dafc:	20008f44 	andcs	r8, r0, r4, asr #30

0800db00 <ConfigStore::Flash()>:
 800db00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800db02:	4c24      	ldr	r4, [pc, #144]	; (800db94 <ConfigStore::Flash()+0x94>)
 800db04:	6823      	ldr	r3, [r4, #0]
 800db06:	2b00      	cmp	r3, #0
 800db08:	d041      	beq.n	800db8e <ConfigStore::Flash()+0x8e>
 800db0a:	3b01      	subs	r3, #1
 800db0c:	2b05      	cmp	r3, #5
 800db0e:	d82f      	bhi.n	800db70 <ConfigStore::Flash()+0x70>
 800db10:	e8df f003 	tbb	[pc, r3]
 800db14:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 800db18:	4b1f2e23 	blmi	87d93ac <__exidx_end+0x7c69a8>
 800db1c:	681a      	ldr	r2, [r3, #0]
 800db1e:	4b1f      	ldr	r3, [pc, #124]	; (800db9c <ConfigStore::Flash()+0x9c>)
 800db20:	601a      	str	r2, [r3, #0]
 800db22:	2302      	movs	r3, #2
 800db24:	6023      	str	r3, [r4, #0]
 800db26:	2001      	movs	r0, #1
 800db28:	e02f      	b.n	800db8a <ConfigStore::Flash()+0x8a>
 800db2a:	4b1b      	ldr	r3, [pc, #108]	; (800db98 <ConfigStore::Flash()+0x98>)
 800db2c:	4a1b      	ldr	r2, [pc, #108]	; (800db9c <ConfigStore::Flash()+0x9c>)
 800db2e:	681b      	ldr	r3, [r3, #0]
 800db30:	6812      	ldr	r2, [r2, #0]
 800db32:	1a9b      	subs	r3, r3, r2
 800db34:	2b63      	cmp	r3, #99	; 0x63
 800db36:	d9f6      	bls.n	800db26 <ConfigStore::Flash()+0x26>
 800db38:	2303      	movs	r3, #3
 800db3a:	e7f3      	b.n	800db24 <ConfigStore::Flash()+0x24>
 800db3c:	4918      	ldr	r1, [pc, #96]	; (800dba0 <ConfigStore::Flash()+0xa0>)
 800db3e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800db42:	6809      	ldr	r1, [r1, #0]
 800db44:	ab03      	add	r3, sp, #12
 800db46:	f000 f999 	bl	800de7c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 800db4a:	2800      	cmp	r0, #0
 800db4c:	d0eb      	beq.n	800db26 <ConfigStore::Flash()+0x26>
 800db4e:	4b12      	ldr	r3, [pc, #72]	; (800db98 <ConfigStore::Flash()+0x98>)
 800db50:	681a      	ldr	r2, [r3, #0]
 800db52:	4b12      	ldr	r3, [pc, #72]	; (800db9c <ConfigStore::Flash()+0x9c>)
 800db54:	601a      	str	r2, [r3, #0]
 800db56:	2305      	movs	r3, #5
 800db58:	e7e4      	b.n	800db24 <ConfigStore::Flash()+0x24>
 800db5a:	4b0f      	ldr	r3, [pc, #60]	; (800db98 <ConfigStore::Flash()+0x98>)
 800db5c:	4a0f      	ldr	r2, [pc, #60]	; (800db9c <ConfigStore::Flash()+0x9c>)
 800db5e:	681b      	ldr	r3, [r3, #0]
 800db60:	6812      	ldr	r2, [r2, #0]
 800db62:	1a9b      	subs	r3, r3, r2
 800db64:	2b63      	cmp	r3, #99	; 0x63
 800db66:	d9de      	bls.n	800db26 <ConfigStore::Flash()+0x26>
 800db68:	2304      	movs	r3, #4
 800db6a:	e7db      	b.n	800db24 <ConfigStore::Flash()+0x24>
 800db6c:	2306      	movs	r3, #6
 800db6e:	e7d9      	b.n	800db24 <ConfigStore::Flash()+0x24>
 800db70:	ab03      	add	r3, sp, #12
 800db72:	4a0c      	ldr	r2, [pc, #48]	; (800dba4 <ConfigStore::Flash()+0xa4>)
 800db74:	490a      	ldr	r1, [pc, #40]	; (800dba0 <ConfigStore::Flash()+0xa0>)
 800db76:	9300      	str	r3, [sp, #0]
 800db78:	6812      	ldr	r2, [r2, #0]
 800db7a:	4b0b      	ldr	r3, [pc, #44]	; (800dba8 <ConfigStore::Flash()+0xa8>)
 800db7c:	6809      	ldr	r1, [r1, #0]
 800db7e:	f000 f986 	bl	800de8e <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 800db82:	2800      	cmp	r0, #0
 800db84:	d0cf      	beq.n	800db26 <ConfigStore::Flash()+0x26>
 800db86:	2000      	movs	r0, #0
 800db88:	6020      	str	r0, [r4, #0]
 800db8a:	b004      	add	sp, #16
 800db8c:	bd10      	pop	{r4, pc}
 800db8e:	4618      	mov	r0, r3
 800db90:	e7fb      	b.n	800db8a <ConfigStore::Flash()+0x8a>
 800db92:	bf00      	nop
 800db94:	20009f50 	andcs	r9, r0, r0, asr pc
 800db98:	2000a094 	mulcs	r0, r4, r0
 800db9c:	20008f40 	andcs	r8, r0, r0, asr #30
 800dba0:	20009f44 	andcs	r9, r0, r4, asr #30
 800dba4:	20009f4c 	andcs	r9, r0, ip, asr #30
 800dba8:	20008f44 	andcs	r8, r0, r4, asr #30

0800dbac <StoreDmxSend::~StoreDmxSend()>:
 800dbac:	4770      	bx	lr
	...

0800dbb0 <StoreDmxSend::Copy(TDmxParams*)>:
 800dbb0:	b507      	push	{r0, r1, r2, lr}
 800dbb2:	2300      	movs	r3, #0
 800dbb4:	460a      	mov	r2, r1
 800dbb6:	2101      	movs	r1, #1
 800dbb8:	e9cd 3100 	strd	r3, r1, [sp]
 800dbbc:	4804      	ldr	r0, [pc, #16]	; (800dbd0 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 800dbbe:	230a      	movs	r3, #10
 800dbc0:	2102      	movs	r1, #2
 800dbc2:	6800      	ldr	r0, [r0, #0]
 800dbc4:	f7ff ff6a 	bl	800da9c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800dbc8:	b003      	add	sp, #12
 800dbca:	f85d fb04 	ldr.w	pc, [sp], #4
 800dbce:	bf00      	nop
 800dbd0:	20009f54 	andcs	r9, r0, r4, asr pc

0800dbd4 <StoreDmxSend::Update(TDmxParams const*)>:
 800dbd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dbd6:	2200      	movs	r2, #0
 800dbd8:	460b      	mov	r3, r1
 800dbda:	210a      	movs	r1, #10
 800dbdc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800dbe0:	4804      	ldr	r0, [pc, #16]	; (800dbf4 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800dbe2:	9100      	str	r1, [sp, #0]
 800dbe4:	6800      	ldr	r0, [r0, #0]
 800dbe6:	2102      	movs	r1, #2
 800dbe8:	f7ff ff18 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dbec:	b005      	add	sp, #20
 800dbee:	f85d fb04 	ldr.w	pc, [sp], #4
 800dbf2:	bf00      	nop
 800dbf4:	20009f54 	andcs	r9, r0, r4, asr pc

0800dbf8 <StoreDmxSend::~StoreDmxSend()>:
 800dbf8:	b510      	push	{r4, lr}
 800dbfa:	4604      	mov	r4, r0
 800dbfc:	f001 f92a 	bl	800ee54 <operator delete(void*)>
 800dc00:	4620      	mov	r0, r4
 800dc02:	bd10      	pop	{r4, pc}

0800dc04 <StoreDmxSend::StoreDmxSend()>:
 800dc04:	4a02      	ldr	r2, [pc, #8]	; (800dc10 <StoreDmxSend::StoreDmxSend()+0xc>)
 800dc06:	6002      	str	r2, [r0, #0]
 800dc08:	4a02      	ldr	r2, [pc, #8]	; (800dc14 <StoreDmxSend::StoreDmxSend()+0x10>)
 800dc0a:	6010      	str	r0, [r2, #0]
 800dc0c:	4770      	bx	lr
 800dc0e:	bf00      	nop
 800dc10:	08012554 	stmdaeq	r1, {r2, r4, r6, r8, sl, sp}
 800dc14:	20009f5c 	andcs	r9, r0, ip, asr pc

0800dc18 <StoreNetwork::~StoreNetwork()>:
 800dc18:	4770      	bx	lr

0800dc1a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dc1a:	3804      	subs	r0, #4
 800dc1c:	4770      	bx	lr
	...

0800dc20 <StoreNetwork::Update(networkparams::Params const*)>:
 800dc20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dc22:	2200      	movs	r2, #0
 800dc24:	460b      	mov	r3, r1
 800dc26:	215e      	movs	r1, #94	; 0x5e
 800dc28:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800dc2c:	4804      	ldr	r0, [pc, #16]	; (800dc40 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800dc2e:	9100      	str	r1, [sp, #0]
 800dc30:	6800      	ldr	r0, [r0, #0]
 800dc32:	4611      	mov	r1, r2
 800dc34:	f7ff fef2 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc38:	b005      	add	sp, #20
 800dc3a:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc3e:	bf00      	nop
 800dc40:	20009f54 	andcs	r9, r0, r4, asr pc

0800dc44 <StoreNetwork::SaveDhcp(bool)>:
 800dc44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dc46:	2301      	movs	r3, #1
 800dc48:	f88d 1017 	strb.w	r1, [sp, #23]
 800dc4c:	2100      	movs	r1, #0
 800dc4e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc52:	4805      	ldr	r0, [pc, #20]	; (800dc68 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800dc54:	9300      	str	r3, [sp, #0]
 800dc56:	2214      	movs	r2, #20
 800dc58:	6800      	ldr	r0, [r0, #0]
 800dc5a:	f10d 0317 	add.w	r3, sp, #23
 800dc5e:	f7ff fedd 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc62:	b007      	add	sp, #28
 800dc64:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc68:	20009f54 	andcs	r9, r0, r4, asr pc

0800dc6c <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800dc6c:	f1a0 0004 	sub.w	r0, r0, #4
 800dc70:	e7e8      	b.n	800dc44 <StoreNetwork::SaveDhcp(bool)>
 800dc72:	bf00      	nop

0800dc74 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dc74:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dc76:	2308      	movs	r3, #8
 800dc78:	9105      	str	r1, [sp, #20]
 800dc7a:	2100      	movs	r1, #0
 800dc7c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc80:	2304      	movs	r3, #4
 800dc82:	4805      	ldr	r0, [pc, #20]	; (800dc98 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800dc84:	9300      	str	r3, [sp, #0]
 800dc86:	220c      	movs	r2, #12
 800dc88:	6800      	ldr	r0, [r0, #0]
 800dc8a:	ab05      	add	r3, sp, #20
 800dc8c:	f7ff fec6 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dc90:	b007      	add	sp, #28
 800dc92:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc96:	bf00      	nop
 800dc98:	20009f54 	andcs	r9, r0, r4, asr pc

0800dc9c <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800dc9c:	f1a0 0004 	sub.w	r0, r0, #4
 800dca0:	e7e8      	b.n	800dc74 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800dca2:	bf00      	nop

0800dca4 <StoreNetwork::SaveNetMask(unsigned int)>:
 800dca4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dca6:	2304      	movs	r3, #4
 800dca8:	9105      	str	r1, [sp, #20]
 800dcaa:	2100      	movs	r1, #0
 800dcac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcb0:	4804      	ldr	r0, [pc, #16]	; (800dcc4 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800dcb2:	9300      	str	r3, [sp, #0]
 800dcb4:	2208      	movs	r2, #8
 800dcb6:	6800      	ldr	r0, [r0, #0]
 800dcb8:	ab05      	add	r3, sp, #20
 800dcba:	f7ff feaf 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcbe:	b007      	add	sp, #28
 800dcc0:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcc4:	20009f54 	andcs	r9, r0, r4, asr pc

0800dcc8 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800dcc8:	f1a0 0004 	sub.w	r0, r0, #4
 800dccc:	e7ea      	b.n	800dca4 <StoreNetwork::SaveNetMask(unsigned int)>
 800dcce:	bf00      	nop

0800dcd0 <StoreNetwork::SaveIp(unsigned int)>:
 800dcd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dcd2:	2302      	movs	r3, #2
 800dcd4:	9105      	str	r1, [sp, #20]
 800dcd6:	2100      	movs	r1, #0
 800dcd8:	2204      	movs	r2, #4
 800dcda:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcde:	4804      	ldr	r0, [pc, #16]	; (800dcf0 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800dce0:	9200      	str	r2, [sp, #0]
 800dce2:	6800      	ldr	r0, [r0, #0]
 800dce4:	ab05      	add	r3, sp, #20
 800dce6:	f7ff fe99 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dcea:	b007      	add	sp, #28
 800dcec:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcf0:	20009f54 	andcs	r9, r0, r4, asr pc

0800dcf4 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800dcf4:	f1a0 0004 	sub.w	r0, r0, #4
 800dcf8:	e7ea      	b.n	800dcd0 <StoreNetwork::SaveIp(unsigned int)>
 800dcfa:	bf00      	nop

0800dcfc <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dcfc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dcfe:	460b      	mov	r3, r1
 800dd00:	2020      	movs	r0, #32
 800dd02:	2100      	movs	r1, #0
 800dd04:	2a40      	cmp	r2, #64	; 0x40
 800dd06:	bf28      	it	cs
 800dd08:	2240      	movcs	r2, #64	; 0x40
 800dd0a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800dd0e:	4804      	ldr	r0, [pc, #16]	; (800dd20 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800dd10:	9200      	str	r2, [sp, #0]
 800dd12:	6800      	ldr	r0, [r0, #0]
 800dd14:	2215      	movs	r2, #21
 800dd16:	f7ff fe81 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800dd1a:	b005      	add	sp, #20
 800dd1c:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd20:	20009f54 	andcs	r9, r0, r4, asr pc

0800dd24 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800dd24:	f1a0 0004 	sub.w	r0, r0, #4
 800dd28:	e7e8      	b.n	800dcfc <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800dd2a:	bf00      	nop

0800dd2c <StoreNetwork::~StoreNetwork()>:
 800dd2c:	b510      	push	{r4, lr}
 800dd2e:	4604      	mov	r4, r0
 800dd30:	f001 f890 	bl	800ee54 <operator delete(void*)>
 800dd34:	4620      	mov	r0, r4
 800dd36:	bd10      	pop	{r4, pc}

0800dd38 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800dd38:	f1a0 0004 	sub.w	r0, r0, #4
 800dd3c:	e7f6      	b.n	800dd2c <StoreNetwork::~StoreNetwork()>
	...

0800dd40 <StoreNetwork::Copy(networkparams::Params*)>:
 800dd40:	b507      	push	{r0, r1, r2, lr}
 800dd42:	2301      	movs	r3, #1
 800dd44:	460a      	mov	r2, r1
 800dd46:	2100      	movs	r1, #0
 800dd48:	e9cd 1300 	strd	r1, r3, [sp]
 800dd4c:	4803      	ldr	r0, [pc, #12]	; (800dd5c <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800dd4e:	235e      	movs	r3, #94	; 0x5e
 800dd50:	6800      	ldr	r0, [r0, #0]
 800dd52:	f7ff fea3 	bl	800da9c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800dd56:	b003      	add	sp, #12
 800dd58:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd5c:	20009f54 	andcs	r9, r0, r4, asr pc

0800dd60 <StoreNetwork::StoreNetwork()>:
 800dd60:	4a03      	ldr	r2, [pc, #12]	; (800dd70 <StoreNetwork::StoreNetwork()+0x10>)
 800dd62:	6002      	str	r2, [r0, #0]
 800dd64:	322c      	adds	r2, #44	; 0x2c
 800dd66:	6042      	str	r2, [r0, #4]
 800dd68:	4a02      	ldr	r2, [pc, #8]	; (800dd74 <StoreNetwork::StoreNetwork()+0x14>)
 800dd6a:	6010      	str	r0, [r2, #0]
 800dd6c:	4770      	bx	lr
 800dd6e:	bf00      	nop
 800dd70:	0801256c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, sp}
 800dd74:	20009f60 	andcs	r9, r0, r0, ror #30

0800dd78 <StoreOscServer::~StoreOscServer()>:
 800dd78:	4770      	bx	lr
	...

0800dd7c <StoreOscServer::Copy(osc::server::Params*)>:
 800dd7c:	b507      	push	{r0, r1, r2, lr}
 800dd7e:	2300      	movs	r3, #0
 800dd80:	460a      	mov	r2, r1
 800dd82:	2101      	movs	r1, #1
 800dd84:	e9cd 3100 	strd	r3, r1, [sp]
 800dd88:	4804      	ldr	r0, [pc, #16]	; (800dd9c <StoreOscServer::Copy(osc::server::Params*)+0x20>)
 800dd8a:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800dd8e:	2108      	movs	r1, #8
 800dd90:	6800      	ldr	r0, [r0, #0]
 800dd92:	f7ff fe83 	bl	800da9c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800dd96:	b003      	add	sp, #12
 800dd98:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd9c:	20009f54 	andcs	r9, r0, r4, asr pc

0800dda0 <StoreOscServer::Update(osc::server::Params const*)>:
 800dda0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dda2:	2200      	movs	r2, #0
 800dda4:	460b      	mov	r3, r1
 800dda6:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800ddaa:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ddae:	4804      	ldr	r0, [pc, #16]	; (800ddc0 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800ddb0:	9100      	str	r1, [sp, #0]
 800ddb2:	6800      	ldr	r0, [r0, #0]
 800ddb4:	2108      	movs	r1, #8
 800ddb6:	f7ff fe31 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ddba:	b005      	add	sp, #20
 800ddbc:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddc0:	20009f54 	andcs	r9, r0, r4, asr pc

0800ddc4 <StoreOscServer::~StoreOscServer()>:
 800ddc4:	b510      	push	{r4, lr}
 800ddc6:	4604      	mov	r4, r0
 800ddc8:	f001 f844 	bl	800ee54 <operator delete(void*)>
 800ddcc:	4620      	mov	r0, r4
 800ddce:	bd10      	pop	{r4, pc}

0800ddd0 <StoreOscServer::StoreOscServer()>:
 800ddd0:	4a02      	ldr	r2, [pc, #8]	; (800dddc <StoreOscServer::StoreOscServer()+0xc>)
 800ddd2:	6002      	str	r2, [r0, #0]
 800ddd4:	4a02      	ldr	r2, [pc, #8]	; (800dde0 <StoreOscServer::StoreOscServer()+0x10>)
 800ddd6:	6010      	str	r0, [r2, #0]
 800ddd8:	4770      	bx	lr
 800ddda:	bf00      	nop
 800dddc:	080125bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, sp}
 800dde0:	20009f64 	andcs	r9, r0, r4, ror #30

0800dde4 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800dde4:	4770      	bx	lr
	...

0800dde8 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800dde8:	b507      	push	{r0, r1, r2, lr}
 800ddea:	2300      	movs	r3, #0
 800ddec:	460a      	mov	r2, r1
 800ddee:	2101      	movs	r1, #1
 800ddf0:	e9cd 3100 	strd	r3, r1, [sp]
 800ddf4:	4804      	ldr	r0, [pc, #16]	; (800de08 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800ddf6:	2320      	movs	r3, #32
 800ddf8:	210c      	movs	r1, #12
 800ddfa:	6800      	ldr	r0, [r0, #0]
 800ddfc:	f7ff fe4e 	bl	800da9c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 800de00:	b003      	add	sp, #12
 800de02:	f85d fb04 	ldr.w	pc, [sp], #4
 800de06:	bf00      	nop
 800de08:	20009f54 	andcs	r9, r0, r4, asr pc

0800de0c <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800de0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de0e:	2200      	movs	r2, #0
 800de10:	460b      	mov	r3, r1
 800de12:	2120      	movs	r1, #32
 800de14:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800de18:	4804      	ldr	r0, [pc, #16]	; (800de2c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800de1a:	9100      	str	r1, [sp, #0]
 800de1c:	6800      	ldr	r0, [r0, #0]
 800de1e:	210c      	movs	r1, #12
 800de20:	f7ff fdfc 	bl	800da1c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800de24:	b005      	add	sp, #20
 800de26:	f85d fb04 	ldr.w	pc, [sp], #4
 800de2a:	bf00      	nop
 800de2c:	20009f54 	andcs	r9, r0, r4, asr pc

0800de30 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800de30:	b510      	push	{r4, lr}
 800de32:	4604      	mov	r4, r0
 800de34:	f001 f80e 	bl	800ee54 <operator delete(void*)>
 800de38:	4620      	mov	r0, r4
 800de3a:	bd10      	pop	{r4, pc}

0800de3c <StoreRemoteConfig::StoreRemoteConfig()>:
 800de3c:	4a02      	ldr	r2, [pc, #8]	; (800de48 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800de3e:	6002      	str	r2, [r0, #0]
 800de40:	4a02      	ldr	r2, [pc, #8]	; (800de4c <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800de42:	6010      	str	r0, [r2, #0]
 800de44:	4770      	bx	lr
 800de46:	bf00      	nop
 800de48:	080125d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, sp}
 800de4c:	20009f68 	andcs	r9, r0, r8, ror #30

0800de50 <StoreDevice::StoreDevice()>:
 800de50:	b510      	push	{r4, lr}
 800de52:	4604      	mov	r4, r0
 800de54:	f000 f826 	bl	800dea4 <FlashCode::FlashCode()>
 800de58:	7823      	ldrb	r3, [r4, #0]
 800de5a:	4620      	mov	r0, r4
 800de5c:	7063      	strb	r3, [r4, #1]
 800de5e:	bd10      	pop	{r4, pc}

0800de60 <StoreDevice::GetSize() const>:
 800de60:	f000 b83a 	b.w	800ded8 <FlashCode::GetSize() const>

0800de64 <StoreDevice::GetSectorSize() const>:
 800de64:	f000 b840 	b.w	800dee8 <FlashCode::GetSectorSize() const>

0800de68 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 800de68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de6a:	ac03      	add	r4, sp, #12
 800de6c:	9400      	str	r4, [sp, #0]
 800de6e:	f000 f83e 	bl	800deee <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 800de72:	9b06      	ldr	r3, [sp, #24]
 800de74:	9a03      	ldr	r2, [sp, #12]
 800de76:	601a      	str	r2, [r3, #0]
 800de78:	b004      	add	sp, #16
 800de7a:	bd10      	pop	{r4, pc}

0800de7c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 800de7c:	b513      	push	{r0, r1, r4, lr}
 800de7e:	461c      	mov	r4, r3
 800de80:	ab01      	add	r3, sp, #4
 800de82:	f000 f843 	bl	800df0c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 800de86:	9b01      	ldr	r3, [sp, #4]
 800de88:	6023      	str	r3, [r4, #0]
 800de8a:	b002      	add	sp, #8
 800de8c:	bd10      	pop	{r4, pc}

0800de8e <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 800de8e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de90:	ac03      	add	r4, sp, #12
 800de92:	9400      	str	r4, [sp, #0]
 800de94:	f000 f8da 	bl	800e04c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 800de98:	9b06      	ldr	r3, [sp, #24]
 800de9a:	9a03      	ldr	r2, [sp, #12]
 800de9c:	601a      	str	r2, [r3, #0]
 800de9e:	b004      	add	sp, #16
 800dea0:	bd10      	pop	{r4, pc}
	...

0800dea4 <FlashCode::FlashCode()>:
 800dea4:	b538      	push	{r3, r4, r5, lr}
 800dea6:	4b09      	ldr	r3, [pc, #36]	; (800decc <FlashCode::FlashCode()+0x28>)
 800dea8:	4604      	mov	r4, r0
 800deaa:	6018      	str	r0, [r3, #0]
 800deac:	2301      	movs	r3, #1
 800deae:	7003      	strb	r3, [r0, #0]
 800deb0:	f000 f812 	bl	800ded8 <FlashCode::GetSize() const>
 800deb4:	4605      	mov	r5, r0
 800deb6:	4620      	mov	r0, r4
 800deb8:	f000 f80e 	bl	800ded8 <FlashCode::GetSize() const>
 800debc:	462a      	mov	r2, r5
 800debe:	0a83      	lsrs	r3, r0, #10
 800dec0:	4903      	ldr	r1, [pc, #12]	; (800ded0 <FlashCode::FlashCode()+0x2c>)
 800dec2:	4804      	ldr	r0, [pc, #16]	; (800ded4 <FlashCode::FlashCode()+0x30>)
 800dec4:	f7fa fcbc 	bl	8008840 <printf>
 800dec8:	4620      	mov	r0, r4
 800deca:	bd38      	pop	{r3, r4, r5, pc}
 800decc:	20009f6c 	andcs	r9, r0, ip, ror #30
 800ded0:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 800ded4:	080125e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, sp}

0800ded8 <FlashCode::GetSize() const>:
 800ded8:	4b02      	ldr	r3, [pc, #8]	; (800dee4 <FlashCode::GetSize() const+0xc>)
 800deda:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800dede:	0280      	lsls	r0, r0, #10
 800dee0:	4770      	bx	lr
 800dee2:	bf00      	nop
 800dee4:	1ffff700 	svcne	0x00fff700

0800dee8 <FlashCode::GetSectorSize() const>:
 800dee8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800deec:	4770      	bx	lr

0800deee <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 800deee:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800def2:	441a      	add	r2, r3
 800def4:	4293      	cmp	r3, r2
 800def6:	d104      	bne.n	800df02 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 800def8:	2200      	movs	r2, #0
 800defa:	9b00      	ldr	r3, [sp, #0]
 800defc:	2001      	movs	r0, #1
 800defe:	601a      	str	r2, [r3, #0]
 800df00:	4770      	bx	lr
 800df02:	f851 0b04 	ldr.w	r0, [r1], #4
 800df06:	f843 0b04 	str.w	r0, [r3], #4
 800df0a:	e7f3      	b.n	800def4 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

0800df0c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 800df0c:	2000      	movs	r0, #0
 800df0e:	b538      	push	{r3, r4, r5, lr}
 800df10:	4c47      	ldr	r4, [pc, #284]	; (800e030 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 800df12:	6018      	str	r0, [r3, #0]
 800df14:	6823      	ldr	r3, [r4, #0]
 800df16:	2b04      	cmp	r3, #4
 800df18:	f200 8082 	bhi.w	800e020 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 800df1c:	e8df f003 	tbb	[pc, r3]
 800df20:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800df24:	4b430080 	blmi	90ce12c <__exidx_end+0x10bb728>
 800df28:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800df2c:	6019      	str	r1, [r3, #0]
 800df2e:	4b42      	ldr	r3, [pc, #264]	; (800e038 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800df30:	601a      	str	r2, [r3, #0]
 800df32:	4b42      	ldr	r3, [pc, #264]	; (800e03c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 800df34:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800df38:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800df3c:	4b40      	ldr	r3, [pc, #256]	; (800e040 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800df3e:	d807      	bhi.n	800df50 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 800df40:	2201      	movs	r2, #1
 800df42:	701a      	strb	r2, [r3, #0]
 800df44:	f001 fe88 	bl	800fc58 <fmc_bank0_unlock>
 800df48:	2301      	movs	r3, #1
 800df4a:	6023      	str	r3, [r4, #0]
 800df4c:	2000      	movs	r0, #0
 800df4e:	e026      	b.n	800df9e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800df50:	4a3c      	ldr	r2, [pc, #240]	; (800e044 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 800df52:	4291      	cmp	r1, r2
 800df54:	d3f4      	bcc.n	800df40 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 800df56:	2200      	movs	r2, #0
 800df58:	701a      	strb	r2, [r3, #0]
 800df5a:	f001 fe8b 	bl	800fc74 <fmc_bank1_unlock>
 800df5e:	e7f3      	b.n	800df48 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800df60:	4d37      	ldr	r5, [pc, #220]	; (800e040 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800df62:	782b      	ldrb	r3, [r5, #0]
 800df64:	b15b      	cbz	r3, 800df7e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 800df66:	f001 fea3 	bl	800fcb0 <fmc_bank0_state_get>
 800df6a:	2801      	cmp	r0, #1
 800df6c:	d0ee      	beq.n	800df4c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 800df6e:	7829      	ldrb	r1, [r5, #0]
 800df70:	4b35      	ldr	r3, [pc, #212]	; (800e048 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800df72:	b939      	cbnz	r1, 800df84 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 800df74:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800df76:	f022 0202 	bic.w	r2, r2, #2
 800df7a:	651a      	str	r2, [r3, #80]	; 0x50
 800df7c:	e006      	b.n	800df8c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 800df7e:	f001 fea9 	bl	800fcd4 <fmc_bank1_state_get>
 800df82:	e7f2      	b.n	800df6a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 800df84:	691a      	ldr	r2, [r3, #16]
 800df86:	f022 0202 	bic.w	r2, r2, #2
 800df8a:	611a      	str	r2, [r3, #16]
 800df8c:	4b2a      	ldr	r3, [pc, #168]	; (800e038 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800df8e:	681b      	ldr	r3, [r3, #0]
 800df90:	b94b      	cbnz	r3, 800dfa6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 800df92:	b129      	cbz	r1, 800dfa0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 800df94:	f001 fe7c 	bl	800fc90 <fmc_bank0_lock>
 800df98:	2300      	movs	r3, #0
 800df9a:	2001      	movs	r0, #1
 800df9c:	6023      	str	r3, [r4, #0]
 800df9e:	bd38      	pop	{r3, r4, r5, pc}
 800dfa0:	f001 fe7e 	bl	800fca0 <fmc_bank1_lock>
 800dfa4:	e7f8      	b.n	800df98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 800dfa6:	2302      	movs	r3, #2
 800dfa8:	e7cf      	b.n	800df4a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 800dfaa:	4923      	ldr	r1, [pc, #140]	; (800e038 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 800dfac:	680b      	ldr	r3, [r1, #0]
 800dfae:	2b00      	cmp	r3, #0
 800dfb0:	d0ca      	beq.n	800df48 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800dfb2:	4b23      	ldr	r3, [pc, #140]	; (800e040 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800dfb4:	4a1f      	ldr	r2, [pc, #124]	; (800e034 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 800dfb6:	7818      	ldrb	r0, [r3, #0]
 800dfb8:	4b23      	ldr	r3, [pc, #140]	; (800e048 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800dfba:	b190      	cbz	r0, 800dfe2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 800dfbc:	6918      	ldr	r0, [r3, #16]
 800dfbe:	f040 0002 	orr.w	r0, r0, #2
 800dfc2:	6118      	str	r0, [r3, #16]
 800dfc4:	6810      	ldr	r0, [r2, #0]
 800dfc6:	6158      	str	r0, [r3, #20]
 800dfc8:	6918      	ldr	r0, [r3, #16]
 800dfca:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800dfce:	6118      	str	r0, [r3, #16]
 800dfd0:	680b      	ldr	r3, [r1, #0]
 800dfd2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800dfd6:	600b      	str	r3, [r1, #0]
 800dfd8:	6813      	ldr	r3, [r2, #0]
 800dfda:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800dfde:	6013      	str	r3, [r2, #0]
 800dfe0:	e7b2      	b.n	800df48 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 800dfe2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800dfe4:	f040 0002 	orr.w	r0, r0, #2
 800dfe8:	6518      	str	r0, [r3, #80]	; 0x50
 800dfea:	6810      	ldr	r0, [r2, #0]
 800dfec:	6558      	str	r0, [r3, #84]	; 0x54
 800dfee:	69dd      	ldr	r5, [r3, #28]
 800dff0:	07ad      	lsls	r5, r5, #30
 800dff2:	bf48      	it	mi
 800dff4:	6158      	strmi	r0, [r3, #20]
 800dff6:	4814      	ldr	r0, [pc, #80]	; (800e048 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800dff8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800dffa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800dffe:	6503      	str	r3, [r0, #80]	; 0x50
 800e000:	680b      	ldr	r3, [r1, #0]
 800e002:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800e006:	600b      	str	r3, [r1, #0]
 800e008:	6813      	ldr	r3, [r2, #0]
 800e00a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e00e:	e7e6      	b.n	800dfde <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 800e010:	4b0b      	ldr	r3, [pc, #44]	; (800e040 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 800e012:	781a      	ldrb	r2, [r3, #0]
 800e014:	4b0c      	ldr	r3, [pc, #48]	; (800e048 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 800e016:	b132      	cbz	r2, 800e026 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 800e018:	691a      	ldr	r2, [r3, #16]
 800e01a:	f022 0201 	bic.w	r2, r2, #1
 800e01e:	611a      	str	r2, [r3, #16]
 800e020:	2000      	movs	r0, #0
 800e022:	6020      	str	r0, [r4, #0]
 800e024:	e7bb      	b.n	800df9e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 800e026:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e028:	f022 0201 	bic.w	r2, r2, #1
 800e02c:	651a      	str	r2, [r3, #80]	; 0x50
 800e02e:	e7f7      	b.n	800e020 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 800e030:	20009f74 	andcs	r9, r0, r4, ror pc
 800e034:	20009f78 	andcs	r9, r0, r8, ror pc
 800e038:	20009f84 	andcs	r9, r0, r4, lsl #31
 800e03c:	1ffff700 	svcne	0x00fff700
 800e040:	20009f80 	andcs	r9, r0, r0, lsl #31
 800e044:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e048:	40022000 	andmi	r2, r2, r0

0800e04c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 800e04c:	b570      	push	{r4, r5, r6, lr}
 800e04e:	2400      	movs	r4, #0
 800e050:	9804      	ldr	r0, [sp, #16]
 800e052:	6004      	str	r4, [r0, #0]
 800e054:	4c48      	ldr	r4, [pc, #288]	; (800e178 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 800e056:	6820      	ldr	r0, [r4, #0]
 800e058:	2804      	cmp	r0, #4
 800e05a:	d848      	bhi.n	800e0ee <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 800e05c:	e8df f000 	tbb	[pc, r0]
 800e060:	22847c03 	addcs	r7, r4, #768	; 0x300
 800e064:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800e068:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e06c:	6001      	str	r1, [r0, #0]
 800e06e:	4844      	ldr	r0, [pc, #272]	; (800e180 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e070:	6003      	str	r3, [r0, #0]
 800e072:	4b44      	ldr	r3, [pc, #272]	; (800e184 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e074:	601a      	str	r2, [r3, #0]
 800e076:	4b44      	ldr	r3, [pc, #272]	; (800e188 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 800e078:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e07c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e080:	4b42      	ldr	r3, [pc, #264]	; (800e18c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e082:	d807      	bhi.n	800e094 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 800e084:	2201      	movs	r2, #1
 800e086:	701a      	strb	r2, [r3, #0]
 800e088:	f001 fde6 	bl	800fc58 <fmc_bank0_unlock>
 800e08c:	2303      	movs	r3, #3
 800e08e:	6023      	str	r3, [r4, #0]
 800e090:	2000      	movs	r0, #0
 800e092:	e026      	b.n	800e0e2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 800e094:	4a3e      	ldr	r2, [pc, #248]	; (800e190 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 800e096:	4291      	cmp	r1, r2
 800e098:	d3f4      	bcc.n	800e084 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 800e09a:	2200      	movs	r2, #0
 800e09c:	701a      	strb	r2, [r3, #0]
 800e09e:	f001 fde9 	bl	800fc74 <fmc_bank1_unlock>
 800e0a2:	e7f3      	b.n	800e08c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e0a4:	4d39      	ldr	r5, [pc, #228]	; (800e18c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e0a6:	782b      	ldrb	r3, [r5, #0]
 800e0a8:	b15b      	cbz	r3, 800e0c2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 800e0aa:	f001 fe01 	bl	800fcb0 <fmc_bank0_state_get>
 800e0ae:	2801      	cmp	r0, #1
 800e0b0:	d0ee      	beq.n	800e090 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 800e0b2:	7829      	ldrb	r1, [r5, #0]
 800e0b4:	4b37      	ldr	r3, [pc, #220]	; (800e194 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e0b6:	b939      	cbnz	r1, 800e0c8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 800e0b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e0ba:	f022 0201 	bic.w	r2, r2, #1
 800e0be:	651a      	str	r2, [r3, #80]	; 0x50
 800e0c0:	e006      	b.n	800e0d0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 800e0c2:	f001 fe07 	bl	800fcd4 <fmc_bank1_state_get>
 800e0c6:	e7f2      	b.n	800e0ae <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 800e0c8:	691a      	ldr	r2, [r3, #16]
 800e0ca:	f022 0201 	bic.w	r2, r2, #1
 800e0ce:	611a      	str	r2, [r3, #16]
 800e0d0:	4b2c      	ldr	r3, [pc, #176]	; (800e184 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e0d2:	681b      	ldr	r3, [r3, #0]
 800e0d4:	b94b      	cbnz	r3, 800e0ea <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 800e0d6:	b129      	cbz	r1, 800e0e4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 800e0d8:	f001 fdda 	bl	800fc90 <fmc_bank0_lock>
 800e0dc:	2300      	movs	r3, #0
 800e0de:	2001      	movs	r0, #1
 800e0e0:	6023      	str	r3, [r4, #0]
 800e0e2:	bd70      	pop	{r4, r5, r6, pc}
 800e0e4:	f001 fddc 	bl	800fca0 <fmc_bank1_lock>
 800e0e8:	e7f8      	b.n	800e0dc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 800e0ea:	2304      	movs	r3, #4
 800e0ec:	e7cf      	b.n	800e08e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 800e0ee:	4a25      	ldr	r2, [pc, #148]	; (800e184 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 800e0f0:	6813      	ldr	r3, [r2, #0]
 800e0f2:	2b03      	cmp	r3, #3
 800e0f4:	d91a      	bls.n	800e12c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 800e0f6:	4b25      	ldr	r3, [pc, #148]	; (800e18c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e0f8:	7819      	ldrb	r1, [r3, #0]
 800e0fa:	4b26      	ldr	r3, [pc, #152]	; (800e194 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e0fc:	b189      	cbz	r1, 800e122 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 800e0fe:	6919      	ldr	r1, [r3, #16]
 800e100:	f041 0101 	orr.w	r1, r1, #1
 800e104:	6119      	str	r1, [r3, #16]
 800e106:	4d1e      	ldr	r5, [pc, #120]	; (800e180 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e108:	481c      	ldr	r0, [pc, #112]	; (800e17c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 800e10a:	6829      	ldr	r1, [r5, #0]
 800e10c:	6803      	ldr	r3, [r0, #0]
 800e10e:	f851 6b04 	ldr.w	r6, [r1], #4
 800e112:	f843 6b04 	str.w	r6, [r3], #4
 800e116:	6003      	str	r3, [r0, #0]
 800e118:	6813      	ldr	r3, [r2, #0]
 800e11a:	6029      	str	r1, [r5, #0]
 800e11c:	3b04      	subs	r3, #4
 800e11e:	6013      	str	r3, [r2, #0]
 800e120:	e7b4      	b.n	800e08c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e122:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800e124:	f041 0101 	orr.w	r1, r1, #1
 800e128:	6519      	str	r1, [r3, #80]	; 0x50
 800e12a:	e7ec      	b.n	800e106 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 800e12c:	2b00      	cmp	r3, #0
 800e12e:	d0ad      	beq.n	800e08c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e130:	4b16      	ldr	r3, [pc, #88]	; (800e18c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e132:	781a      	ldrb	r2, [r3, #0]
 800e134:	4b17      	ldr	r3, [pc, #92]	; (800e194 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e136:	b152      	cbz	r2, 800e14e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 800e138:	691a      	ldr	r2, [r3, #16]
 800e13a:	f042 0201 	orr.w	r2, r2, #1
 800e13e:	611a      	str	r2, [r3, #16]
 800e140:	4a0f      	ldr	r2, [pc, #60]	; (800e180 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 800e142:	4b0e      	ldr	r3, [pc, #56]	; (800e17c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 800e144:	6812      	ldr	r2, [r2, #0]
 800e146:	681b      	ldr	r3, [r3, #0]
 800e148:	6812      	ldr	r2, [r2, #0]
 800e14a:	601a      	str	r2, [r3, #0]
 800e14c:	e79e      	b.n	800e08c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 800e14e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e150:	f042 0201 	orr.w	r2, r2, #1
 800e154:	651a      	str	r2, [r3, #80]	; 0x50
 800e156:	e7f3      	b.n	800e140 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 800e158:	4b0c      	ldr	r3, [pc, #48]	; (800e18c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 800e15a:	781a      	ldrb	r2, [r3, #0]
 800e15c:	4b0d      	ldr	r3, [pc, #52]	; (800e194 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 800e15e:	b132      	cbz	r2, 800e16e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 800e160:	691a      	ldr	r2, [r3, #16]
 800e162:	f022 0202 	bic.w	r2, r2, #2
 800e166:	611a      	str	r2, [r3, #16]
 800e168:	2000      	movs	r0, #0
 800e16a:	6020      	str	r0, [r4, #0]
 800e16c:	e7b9      	b.n	800e0e2 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 800e16e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e170:	f022 0202 	bic.w	r2, r2, #2
 800e174:	651a      	str	r2, [r3, #80]	; 0x50
 800e176:	e7f7      	b.n	800e168 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 800e178:	20009f74 	andcs	r9, r0, r4, ror pc
 800e17c:	20009f70 	andcs	r9, r0, r0, ror pc
 800e180:	20009f7c 	andcs	r9, r0, ip, ror pc
 800e184:	20009f84 	andcs	r9, r0, r4, lsl #31
 800e188:	1ffff700 	svcne	0x00fff700
 800e18c:	20009f80 	andcs	r9, r0, r0, lsl #31
 800e190:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800e194:	40022000 	andmi	r2, r2, r0

0800e198 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e19c:	4603      	mov	r3, r0
 800e19e:	7800      	ldrb	r0, [r0, #0]
 800e1a0:	287b      	cmp	r0, #123	; 0x7b
 800e1a2:	f040 80a2 	bne.w	800e2ea <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e1a6:	b17a      	cbz	r2, 800e1c8 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e1a8:	2401      	movs	r4, #1
 800e1aa:	461e      	mov	r6, r3
 800e1ac:	4620      	mov	r0, r4
 800e1ae:	2a00      	cmp	r2, #0
 800e1b0:	bf0c      	ite	eq
 800e1b2:	f04f 0c0a 	moveq.w	ip, #10
 800e1b6:	f04f 0c00 	movne.w	ip, #0
 800e1ba:	273d      	movs	r7, #61	; 0x3d
 800e1bc:	42a1      	cmp	r1, r4
 800e1be:	d850      	bhi.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e1c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1c4:	463c      	mov	r4, r7
 800e1c6:	e7f2      	b.n	800e1ae <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e1c8:	2023      	movs	r0, #35	; 0x23
 800e1ca:	f803 0b01 	strb.w	r0, [r3], #1
 800e1ce:	461c      	mov	r4, r3
 800e1d0:	2701      	movs	r7, #1
 800e1d2:	42b9      	cmp	r1, r7
 800e1d4:	d811      	bhi.n	800e1fa <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e1d6:	2001      	movs	r0, #1
 800e1d8:	461e      	mov	r6, r3
 800e1da:	230a      	movs	r3, #10
 800e1dc:	4625      	mov	r5, r4
 800e1de:	f806 3b01 	strb.w	r3, [r6], #1
 800e1e2:	3001      	adds	r0, #1
 800e1e4:	462b      	mov	r3, r5
 800e1e6:	781c      	ldrb	r4, [r3, #0]
 800e1e8:	3501      	adds	r5, #1
 800e1ea:	2c7b      	cmp	r4, #123	; 0x7b
 800e1ec:	d0ea      	beq.n	800e1c4 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e1ee:	42b9      	cmp	r1, r7
 800e1f0:	f107 0401 	add.w	r4, r7, #1
 800e1f4:	d9db      	bls.n	800e1ae <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e1f6:	4627      	mov	r7, r4
 800e1f8:	e7f4      	b.n	800e1e4 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e1fa:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e1fe:	2822      	cmp	r0, #34	; 0x22
 800e200:	d119      	bne.n	800e236 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e202:	46a4      	mov	ip, r4
 800e204:	461d      	mov	r5, r3
 800e206:	2601      	movs	r6, #1
 800e208:	f89c e000 	ldrb.w	lr, [ip]
 800e20c:	4664      	mov	r4, ip
 800e20e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e212:	462b      	mov	r3, r5
 800e214:	4630      	mov	r0, r6
 800e216:	f10c 0c01 	add.w	ip, ip, #1
 800e21a:	f105 0501 	add.w	r5, r5, #1
 800e21e:	f106 0601 	add.w	r6, r6, #1
 800e222:	d0d9      	beq.n	800e1d8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e224:	3701      	adds	r7, #1
 800e226:	42b9      	cmp	r1, r7
 800e228:	4664      	mov	r4, ip
 800e22a:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e22e:	d8eb      	bhi.n	800e208 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e230:	4630      	mov	r0, r6
 800e232:	462b      	mov	r3, r5
 800e234:	e7d0      	b.n	800e1d8 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e236:	3701      	adds	r7, #1
 800e238:	e7cb      	b.n	800e1d2 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e23a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e23e:	d110      	bne.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e240:	eba0 0803 	sub.w	r8, r0, r3
 800e244:	461a      	mov	r2, r3
 800e246:	eb08 0003 	add.w	r0, r8, r3
 800e24a:	f813 eb01 	ldrb.w	lr, [r3], #1
 800e24e:	1c65      	adds	r5, r4, #1
 800e250:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e254:	d04c      	beq.n	800e2f0 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800e256:	42a1      	cmp	r1, r4
 800e258:	d911      	bls.n	800e27e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e25a:	462c      	mov	r4, r5
 800e25c:	f806 eb01 	strb.w	lr, [r6], #1
 800e260:	e7f0      	b.n	800e244 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e262:	42a1      	cmp	r1, r4
 800e264:	461d      	mov	r5, r3
 800e266:	f893 e000 	ldrb.w	lr, [r3]
 800e26a:	f104 0401 	add.w	r4, r4, #1
 800e26e:	f103 0301 	add.w	r3, r3, #1
 800e272:	d8e2      	bhi.n	800e23a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e274:	462b      	mov	r3, r5
 800e276:	e7e3      	b.n	800e240 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800e278:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800e27c:	d009      	beq.n	800e292 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e27e:	42a9      	cmp	r1, r5
 800e280:	4614      	mov	r4, r2
 800e282:	f892 e000 	ldrb.w	lr, [r2]
 800e286:	f105 0501 	add.w	r5, r5, #1
 800e28a:	f102 0201 	add.w	r2, r2, #1
 800e28e:	d8f3      	bhi.n	800e278 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800e290:	4622      	mov	r2, r4
 800e292:	7814      	ldrb	r4, [r2, #0]
 800e294:	4696      	mov	lr, r2
 800e296:	2c2f      	cmp	r4, #47	; 0x2f
 800e298:	462b      	mov	r3, r5
 800e29a:	f102 0201 	add.w	r2, r2, #1
 800e29e:	f105 0501 	add.w	r5, r5, #1
 800e2a2:	d81a      	bhi.n	800e2da <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800e2a4:	4299      	cmp	r1, r3
 800e2a6:	d8f4      	bhi.n	800e292 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e2a8:	2c22      	cmp	r4, #34	; 0x22
 800e2aa:	bf08      	it	eq
 800e2ac:	4696      	moveq	lr, r2
 800e2ae:	4673      	mov	r3, lr
 800e2b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e2b4:	1c6c      	adds	r4, r5, #1
 800e2b6:	2a22      	cmp	r2, #34	; 0x22
 800e2b8:	d011      	beq.n	800e2de <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2ba:	2a2c      	cmp	r2, #44	; 0x2c
 800e2bc:	d00f      	beq.n	800e2de <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2be:	2a7d      	cmp	r2, #125	; 0x7d
 800e2c0:	d00d      	beq.n	800e2de <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e2c2:	42a9      	cmp	r1, r5
 800e2c4:	d90f      	bls.n	800e2e6 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800e2c6:	f1a2 0520 	sub.w	r5, r2, #32
 800e2ca:	2d5a      	cmp	r5, #90	; 0x5a
 800e2cc:	d803      	bhi.n	800e2d6 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800e2ce:	469e      	mov	lr, r3
 800e2d0:	f806 2b01 	strb.w	r2, [r6], #1
 800e2d4:	3001      	adds	r0, #1
 800e2d6:	4625      	mov	r5, r4
 800e2d8:	e7e9      	b.n	800e2ae <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e2da:	461d      	mov	r5, r3
 800e2dc:	e7e7      	b.n	800e2ae <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e2de:	462c      	mov	r4, r5
 800e2e0:	f806 cb01 	strb.w	ip, [r6], #1
 800e2e4:	3001      	adds	r0, #1
 800e2e6:	3401      	adds	r4, #1
 800e2e8:	e768      	b.n	800e1bc <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e2ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e2ee:	e767      	b.n	800e1c0 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800e2f0:	4625      	mov	r5, r4
 800e2f2:	f806 7b01 	strb.w	r7, [r6], #1
 800e2f6:	3001      	adds	r0, #1
 800e2f8:	e7c1      	b.n	800e27e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800e2fc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e2fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e300:	6002      	str	r2, [r0, #0]
 800e302:	4614      	mov	r4, r2
 800e304:	2200      	movs	r2, #0
 800e306:	80c2      	strh	r2, [r0, #6]
 800e308:	4a1c      	ldr	r2, [pc, #112]	; (800e37c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e30a:	4606      	mov	r6, r0
 800e30c:	7812      	ldrb	r2, [r2, #0]
 800e30e:	8083      	strh	r3, [r0, #4]
 800e310:	f002 0201 	and.w	r2, r2, #1
 800e314:	7202      	strb	r2, [r0, #8]
 800e316:	4608      	mov	r0, r1
 800e318:	4605      	mov	r5, r0
 800e31a:	782f      	ldrb	r7, [r5, #0]
 800e31c:	3001      	adds	r0, #1
 800e31e:	2f00      	cmp	r7, #0
 800e320:	d1fa      	bne.n	800e318 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e322:	1a6d      	subs	r5, r5, r1
 800e324:	b29b      	uxth	r3, r3
 800e326:	b1d2      	cbz	r2, 800e35e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e328:	1d2f      	adds	r7, r5, #4
 800e32a:	429f      	cmp	r7, r3
 800e32c:	d814      	bhi.n	800e358 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e32e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e332:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e336:	462a      	mov	r2, r5
 800e338:	f884 8000 	strb.w	r8, [r4]
 800e33c:	f884 9001 	strb.w	r9, [r4, #1]
 800e340:	1ca0      	adds	r0, r4, #2
 800e342:	f000 fe22 	bl	800ef8a <memmove>
 800e346:	223a      	movs	r2, #58	; 0x3a
 800e348:	1963      	adds	r3, r4, r5
 800e34a:	3505      	adds	r5, #5
 800e34c:	f883 9002 	strb.w	r9, [r3, #2]
 800e350:	70da      	strb	r2, [r3, #3]
 800e352:	80f5      	strh	r5, [r6, #6]
 800e354:	f804 8007 	strb.w	r8, [r4, r7]
 800e358:	4630      	mov	r0, r6
 800e35a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e35e:	1caf      	adds	r7, r5, #2
 800e360:	429f      	cmp	r7, r3
 800e362:	d8f9      	bhi.n	800e358 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e364:	4620      	mov	r0, r4
 800e366:	2323      	movs	r3, #35	; 0x23
 800e368:	462a      	mov	r2, r5
 800e36a:	f800 3b01 	strb.w	r3, [r0], #1
 800e36e:	f000 fe0c 	bl	800ef8a <memmove>
 800e372:	230a      	movs	r3, #10
 800e374:	442c      	add	r4, r5
 800e376:	7063      	strb	r3, [r4, #1]
 800e378:	80f7      	strh	r7, [r6, #6]
 800e37a:	e7ed      	b.n	800e358 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e37c:	20009f88 	andcs	r9, r0, r8, lsl #31

0800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e380:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e382:	469c      	mov	ip, r3
 800e384:	8885      	ldrh	r5, [r0, #4]
 800e386:	88c3      	ldrh	r3, [r0, #6]
 800e388:	b085      	sub	sp, #20
 800e38a:	42ab      	cmp	r3, r5
 800e38c:	d302      	bcc.n	800e394 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e38e:	2000      	movs	r0, #0
 800e390:	b005      	add	sp, #20
 800e392:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e394:	4604      	mov	r4, r0
 800e396:	6800      	ldr	r0, [r0, #0]
 800e398:	1aed      	subs	r5, r5, r3
 800e39a:	4418      	add	r0, r3
 800e39c:	b2d6      	uxtb	r6, r2
 800e39e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e3a2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e3a6:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e3aa:	0e12      	lsrs	r2, r2, #24
 800e3ac:	f1bc 0f00 	cmp.w	ip, #0
 800e3b0:	d109      	bne.n	800e3c6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e3b2:	f1be 0f00 	cmp.w	lr, #0
 800e3b6:	d109      	bne.n	800e3cc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e3b8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3bc:	e9cd 6700 	strd	r6, r7, [sp]
 800e3c0:	460b      	mov	r3, r1
 800e3c2:	4a0e      	ldr	r2, [pc, #56]	; (800e3fc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e3c4:	e008      	b.n	800e3d8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e3c6:	f1be 0f00 	cmp.w	lr, #0
 800e3ca:	d00f      	beq.n	800e3ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e3cc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3d0:	460b      	mov	r3, r1
 800e3d2:	e9cd 6700 	strd	r6, r7, [sp]
 800e3d6:	4a0a      	ldr	r2, [pc, #40]	; (800e400 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e3d8:	4629      	mov	r1, r5
 800e3da:	f7fa fa41 	bl	8008860 <snprintf>
 800e3de:	4285      	cmp	r5, r0
 800e3e0:	dbd5      	blt.n	800e38e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e3e2:	88e3      	ldrh	r3, [r4, #6]
 800e3e4:	4403      	add	r3, r0
 800e3e6:	80e3      	strh	r3, [r4, #6]
 800e3e8:	2001      	movs	r0, #1
 800e3ea:	e7d1      	b.n	800e390 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e3ec:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3f0:	e9cd 6700 	strd	r6, r7, [sp]
 800e3f4:	460b      	mov	r3, r1
 800e3f6:	4a03      	ldr	r2, [pc, #12]	; (800e404 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e3f8:	e7ee      	b.n	800e3d8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e3fa:	bf00      	nop
 800e3fc:	08012626 	stmdaeq	r1, {r1, r2, r5, r9, sl, sp}
 800e400:	08012612 	stmdaeq	r1, {r1, r4, r9, sl, sp}
 800e404:	08012627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, sp}

0800e408 <PropertiesBuilder::AddComment(char const*)>:
 800e408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e40a:	7a06      	ldrb	r6, [r0, #8]
 800e40c:	b996      	cbnz	r6, 800e434 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e40e:	4604      	mov	r4, r0
 800e410:	88c0      	ldrh	r0, [r0, #6]
 800e412:	88a5      	ldrh	r5, [r4, #4]
 800e414:	42a8      	cmp	r0, r5
 800e416:	d20d      	bcs.n	800e434 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e418:	6827      	ldr	r7, [r4, #0]
 800e41a:	1a2d      	subs	r5, r5, r0
 800e41c:	460b      	mov	r3, r1
 800e41e:	4a06      	ldr	r2, [pc, #24]	; (800e438 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800e420:	4629      	mov	r1, r5
 800e422:	4438      	add	r0, r7
 800e424:	f7fa fa1c 	bl	8008860 <snprintf>
 800e428:	4285      	cmp	r5, r0
 800e42a:	bfa1      	itttt	ge
 800e42c:	2601      	movge	r6, #1
 800e42e:	88e3      	ldrhge	r3, [r4, #6]
 800e430:	18c0      	addge	r0, r0, r3
 800e432:	80e0      	strhge	r0, [r4, #6]
 800e434:	4630      	mov	r0, r6
 800e436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e438:	08012637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp}

0800e43c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800e43c:	e9c0 1200 	strd	r1, r2, [r0]
 800e440:	4770      	bx	lr

0800e442 <ReadConfigFile::~ReadConfigFile()>:
 800e442:	4770      	bx	lr

0800e444 <ReadConfigFile::Read(char const*, unsigned int)>:
 800e444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e448:	4606      	mov	r6, r0
 800e44a:	460d      	mov	r5, r1
 800e44c:	4614      	mov	r4, r2
 800e44e:	f04f 0800 	mov.w	r8, #0
 800e452:	b0a0      	sub	sp, #128	; 0x80
 800e454:	b33c      	cbz	r4, 800e4a6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e456:	466b      	mov	r3, sp
 800e458:	462a      	mov	r2, r5
 800e45a:	4619      	mov	r1, r3
 800e45c:	e007      	b.n	800e46e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800e45e:	f803 7b01 	strb.w	r7, [r3], #1
 800e462:	1a58      	subs	r0, r3, r1
 800e464:	287f      	cmp	r0, #127	; 0x7f
 800e466:	4615      	mov	r5, r2
 800e468:	dc1d      	bgt.n	800e4a6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e46a:	3c01      	subs	r4, #1
 800e46c:	d00f      	beq.n	800e48e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e46e:	7817      	ldrb	r7, [r2, #0]
 800e470:	4610      	mov	r0, r2
 800e472:	2f0d      	cmp	r7, #13
 800e474:	f102 0201 	add.w	r2, r2, #1
 800e478:	d001      	beq.n	800e47e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e47a:	2f0a      	cmp	r7, #10
 800e47c:	d1ef      	bne.n	800e45e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800e47e:	4605      	mov	r5, r0
 800e480:	b12c      	cbz	r4, 800e48e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e482:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e486:	2a0d      	cmp	r2, #13
 800e488:	d00b      	beq.n	800e4a2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e48a:	2a0a      	cmp	r2, #10
 800e48c:	d009      	beq.n	800e4a2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e48e:	f89d 2000 	ldrb.w	r2, [sp]
 800e492:	2a60      	cmp	r2, #96	; 0x60
 800e494:	d9de      	bls.n	800e454 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e496:	f883 8000 	strb.w	r8, [r3]
 800e49a:	e9d6 3000 	ldrd	r3, r0, [r6]
 800e49e:	4798      	blx	r3
 800e4a0:	e7d8      	b.n	800e454 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e4a2:	3c01      	subs	r4, #1
 800e4a4:	e7eb      	b.n	800e47e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e4a6:	b020      	add	sp, #128	; 0x80
 800e4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e4ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800e4ac:	b570      	push	{r4, r5, r6, lr}
 800e4ae:	4615      	mov	r5, r2
 800e4b0:	461c      	mov	r4, r3
 800e4b2:	f000 f890 	bl	800e5d6 <Sscan::checkName(char const*, char const*)>
 800e4b6:	b180      	cbz	r0, 800e4da <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800e4b8:	2100      	movs	r1, #0
 800e4ba:	5c43      	ldrb	r3, [r0, r1]
 800e4bc:	6826      	ldr	r6, [r4, #0]
 800e4be:	b28a      	uxth	r2, r1
 800e4c0:	b143      	cbz	r3, 800e4d4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e4c2:	42b2      	cmp	r2, r6
 800e4c4:	d303      	bcc.n	800e4ce <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800e4c6:	2b0a      	cmp	r3, #10
 800e4c8:	d004      	beq.n	800e4d4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e4ca:	2002      	movs	r0, #2
 800e4cc:	e004      	b.n	800e4d8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800e4ce:	546b      	strb	r3, [r5, r1]
 800e4d0:	3101      	adds	r1, #1
 800e4d2:	e7f2      	b.n	800e4ba <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800e4d4:	2000      	movs	r0, #0
 800e4d6:	6022      	str	r2, [r4, #0]
 800e4d8:	bd70      	pop	{r4, r5, r6, pc}
 800e4da:	2001      	movs	r0, #1
 800e4dc:	e7fc      	b.n	800e4d8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800e4de <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800e4de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e4e0:	4615      	mov	r5, r2
 800e4e2:	f000 f878 	bl	800e5d6 <Sscan::checkName(char const*, char const*)>
 800e4e6:	bb58      	cbnz	r0, 800e540 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800e4e8:	2001      	movs	r0, #1
 800e4ea:	e027      	b.n	800e53c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e4ec:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800e4f0:	2b09      	cmp	r3, #9
 800e4f2:	d822      	bhi.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e4f4:	4603      	mov	r3, r0
 800e4f6:	fb0c 2101 	mla	r1, ip, r1, r2
 800e4fa:	3930      	subs	r1, #48	; 0x30
 800e4fc:	4618      	mov	r0, r3
 800e4fe:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e502:	2a2e      	cmp	r2, #46	; 0x2e
 800e504:	d115      	bne.n	800e532 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800e506:	29ff      	cmp	r1, #255	; 0xff
 800e508:	d817      	bhi.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e50a:	3401      	adds	r4, #1
 800e50c:	2c03      	cmp	r4, #3
 800e50e:	f806 1b01 	strb.w	r1, [r6], #1
 800e512:	d119      	bne.n	800e548 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800e514:	2400      	movs	r4, #0
 800e516:	260a      	movs	r6, #10
 800e518:	1d1a      	adds	r2, r3, #4
 800e51a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e51e:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800e522:	d115      	bne.n	800e550 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800e524:	2cff      	cmp	r4, #255	; 0xff
 800e526:	d808      	bhi.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e528:	f88d 4007 	strb.w	r4, [sp, #7]
 800e52c:	9b01      	ldr	r3, [sp, #4]
 800e52e:	602b      	str	r3, [r5, #0]
 800e530:	e004      	b.n	800e53c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e532:	2a00      	cmp	r2, #0
 800e534:	d0e7      	beq.n	800e506 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e536:	42b8      	cmp	r0, r7
 800e538:	d1d8      	bne.n	800e4ec <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800e53a:	2002      	movs	r0, #2
 800e53c:	b003      	add	sp, #12
 800e53e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e540:	2400      	movs	r4, #0
 800e542:	f04f 0c0a 	mov.w	ip, #10
 800e546:	ae01      	add	r6, sp, #4
 800e548:	4603      	mov	r3, r0
 800e54a:	2100      	movs	r1, #0
 800e54c:	1d07      	adds	r7, r0, #4
 800e54e:	e7d5      	b.n	800e4fc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800e550:	4293      	cmp	r3, r2
 800e552:	d0f2      	beq.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e554:	3930      	subs	r1, #48	; 0x30
 800e556:	2909      	cmp	r1, #9
 800e558:	d8ef      	bhi.n	800e53a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e55a:	fb06 1404 	mla	r4, r6, r4, r1
 800e55e:	e7dc      	b.n	800e51a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800e560 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800e560:	b538      	push	{r3, r4, r5, lr}
 800e562:	4615      	mov	r5, r2
 800e564:	f000 f837 	bl	800e5d6 <Sscan::checkName(char const*, char const*)>
 800e568:	b1a0      	cbz	r0, 800e594 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800e56a:	4604      	mov	r4, r0
 800e56c:	2100      	movs	r1, #0
 800e56e:	220a      	movs	r2, #10
 800e570:	7823      	ldrb	r3, [r4, #0]
 800e572:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e576:	2809      	cmp	r0, #9
 800e578:	d80e      	bhi.n	800e598 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e57a:	fb02 3101 	mla	r1, r2, r1, r3
 800e57e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e582:	3930      	subs	r1, #48	; 0x30
 800e584:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e588:	d1f2      	bne.n	800e570 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800e58a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e58e:	d203      	bcs.n	800e598 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e590:	8029      	strh	r1, [r5, #0]
 800e592:	bd38      	pop	{r3, r4, r5, pc}
 800e594:	2001      	movs	r0, #1
 800e596:	e7fc      	b.n	800e592 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800e598:	2002      	movs	r0, #2
 800e59a:	e7fa      	b.n	800e592 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800e59c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800e59c:	b538      	push	{r3, r4, r5, lr}
 800e59e:	4615      	mov	r5, r2
 800e5a0:	f000 f819 	bl	800e5d6 <Sscan::checkName(char const*, char const*)>
 800e5a4:	b198      	cbz	r0, 800e5ce <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800e5a6:	4604      	mov	r4, r0
 800e5a8:	2100      	movs	r1, #0
 800e5aa:	220a      	movs	r2, #10
 800e5ac:	7823      	ldrb	r3, [r4, #0]
 800e5ae:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e5b2:	2809      	cmp	r0, #9
 800e5b4:	d80d      	bhi.n	800e5d2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e5b6:	fb02 3101 	mla	r1, r2, r1, r3
 800e5ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e5be:	3930      	subs	r1, #48	; 0x30
 800e5c0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e5c4:	d1f2      	bne.n	800e5ac <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800e5c6:	29ff      	cmp	r1, #255	; 0xff
 800e5c8:	d803      	bhi.n	800e5d2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e5ca:	7029      	strb	r1, [r5, #0]
 800e5cc:	bd38      	pop	{r3, r4, r5, pc}
 800e5ce:	2001      	movs	r0, #1
 800e5d0:	e7fc      	b.n	800e5cc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800e5d2:	2002      	movs	r0, #2
 800e5d4:	e7fa      	b.n	800e5cc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800e5d6 <Sscan::checkName(char const*, char const*)>:
 800e5d6:	4603      	mov	r3, r0
 800e5d8:	b510      	push	{r4, lr}
 800e5da:	3901      	subs	r1, #1
 800e5dc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e5e0:	461c      	mov	r4, r3
 800e5e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e5e6:	b120      	cbz	r0, 800e5f2 <Sscan::checkName(char const*, char const*)+0x1c>
 800e5e8:	b10a      	cbz	r2, 800e5ee <Sscan::checkName(char const*, char const*)+0x18>
 800e5ea:	4290      	cmp	r0, r2
 800e5ec:	d0f6      	beq.n	800e5dc <Sscan::checkName(char const*, char const*)+0x6>
 800e5ee:	2000      	movs	r0, #0
 800e5f0:	e006      	b.n	800e600 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5f2:	2a3d      	cmp	r2, #61	; 0x3d
 800e5f4:	d104      	bne.n	800e600 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5f6:	7860      	ldrb	r0, [r4, #1]
 800e5f8:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800e5fc:	d000      	beq.n	800e600 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5fe:	1c60      	adds	r0, r4, #1
 800e600:	bd10      	pop	{r4, pc}

0800e602 <LightSet::GetDmxStartAddress()>:
 800e602:	2001      	movs	r0, #1
 800e604:	4770      	bx	lr

0800e606 <LightSet::GetDmxFootprint()>:
 800e606:	f44f 7000 	mov.w	r0, #512	; 0x200
 800e60a:	4770      	bx	lr

0800e60c <LightSet::SetDmxStartAddress(unsigned short)>:
 800e60c:	2000      	movs	r0, #0
 800e60e:	4770      	bx	lr

0800e610 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800e610:	2300      	movs	r3, #0
 800e612:	2001      	movs	r0, #1
 800e614:	7093      	strb	r3, [r2, #2]
 800e616:	8010      	strh	r0, [r2, #0]
 800e618:	4770      	bx	lr

0800e61a <display::timeout::gpio_init()>:
 800e61a:	4770      	bx	lr

0800e61c <display::timeout::gpio_renew()>:
 800e61c:	2000      	movs	r0, #0
 800e61e:	4770      	bx	lr

0800e620 <Display::PrintInfo() [clone .isra.0]>:
 800e620:	b910      	cbnz	r0, 800e628 <Display::PrintInfo() [clone .isra.0]+0x8>
 800e622:	4803      	ldr	r0, [pc, #12]	; (800e630 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800e624:	f000 bce9 	b.w	800effa <puts>
 800e628:	6803      	ldr	r3, [r0, #0]
 800e62a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e62c:	4718      	bx	r3
 800e62e:	bf00      	nop
 800e630:	0801263f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, sp}

0800e634 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800e634:	b513      	push	{r0, r1, r4, lr}
 800e636:	4604      	mov	r4, r0
 800e638:	0a13      	lsrs	r3, r2, #8
 800e63a:	7800      	ldrb	r0, [r0, #0]
 800e63c:	f88d 1004 	strb.w	r1, [sp, #4]
 800e640:	f88d 3005 	strb.w	r3, [sp, #5]
 800e644:	f88d 2006 	strb.w	r2, [sp, #6]
 800e648:	f001 fff0 	bl	801062c <gd32_i2c_set_address>
 800e64c:	6860      	ldr	r0, [r4, #4]
 800e64e:	f001 ffe5 	bl	801061c <gd32_i2c_set_baudrate>
 800e652:	2103      	movs	r1, #3
 800e654:	a801      	add	r0, sp, #4
 800e656:	f001 ffef 	bl	8010638 <gd32_i2c_write>
 800e65a:	b002      	add	sp, #8
 800e65c:	bd10      	pop	{r4, pc}

0800e65e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800e65e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e660:	460d      	mov	r5, r1
 800e662:	4604      	mov	r4, r0
 800e664:	f001 ffe2 	bl	801062c <gd32_i2c_set_address>
 800e668:	4628      	mov	r0, r5
 800e66a:	f001 ffd7 	bl	801061c <gd32_i2c_set_baudrate>
 800e66e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e672:	2b07      	cmp	r3, #7
 800e674:	d902      	bls.n	800e67c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800e676:	3c50      	subs	r4, #80	; 0x50
 800e678:	2c0f      	cmp	r4, #15
 800e67a:	d809      	bhi.n	800e690 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800e67c:	2101      	movs	r1, #1
 800e67e:	f10d 0007 	add.w	r0, sp, #7
 800e682:	f002 f83f 	bl	8010704 <gd32_i2c_read>
 800e686:	fab0 f080 	clz	r0, r0
 800e68a:	0940      	lsrs	r0, r0, #5
 800e68c:	b003      	add	sp, #12
 800e68e:	bd30      	pop	{r4, r5, pc}
 800e690:	2100      	movs	r1, #0
 800e692:	4608      	mov	r0, r1
 800e694:	f001 ffd0 	bl	8010638 <gd32_i2c_write>
 800e698:	e7f5      	b.n	800e686 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800e69a <Display::Detect7Segment()>:
 800e69a:	b538      	push	{r3, r4, r5, lr}
 800e69c:	68c1      	ldr	r1, [r0, #12]
 800e69e:	4604      	mov	r4, r0
 800e6a0:	7a00      	ldrb	r0, [r0, #8]
 800e6a2:	f7ff ffdc 	bl	800e65e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800e6a6:	7460      	strb	r0, [r4, #17]
 800e6a8:	b170      	cbz	r0, 800e6c8 <Display::Detect7Segment()+0x2e>
 800e6aa:	2200      	movs	r2, #0
 800e6ac:	f104 0508 	add.w	r5, r4, #8
 800e6b0:	4611      	mov	r1, r2
 800e6b2:	4628      	mov	r0, r5
 800e6b4:	f7ff ffbe 	bl	800e634 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e6b8:	7c63      	ldrb	r3, [r4, #17]
 800e6ba:	b12b      	cbz	r3, 800e6c8 <Display::Detect7Segment()+0x2e>
 800e6bc:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800e6c0:	2112      	movs	r1, #18
 800e6c2:	4628      	mov	r0, r5
 800e6c4:	f7ff ffb6 	bl	800e634 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e6c8:	bd38      	pop	{r3, r4, r5, pc}

0800e6ca <Display::Detect(display::Type)>:
 800e6ca:	2902      	cmp	r1, #2
 800e6cc:	b538      	push	{r3, r4, r5, lr}
 800e6ce:	4604      	mov	r4, r0
 800e6d0:	d014      	beq.n	800e6fc <Display::Detect(display::Type)+0x32>
 800e6d2:	2904      	cmp	r1, #4
 800e6d4:	d01b      	beq.n	800e70e <Display::Detect(display::Type)+0x44>
 800e6d6:	69a0      	ldr	r0, [r4, #24]
 800e6d8:	b168      	cbz	r0, 800e6f6 <Display::Detect(display::Type)+0x2c>
 800e6da:	6803      	ldr	r3, [r0, #0]
 800e6dc:	689b      	ldr	r3, [r3, #8]
 800e6de:	4798      	blx	r3
 800e6e0:	4603      	mov	r3, r0
 800e6e2:	69a0      	ldr	r0, [r4, #24]
 800e6e4:	b9ab      	cbnz	r3, 800e712 <Display::Detect(display::Type)+0x48>
 800e6e6:	b110      	cbz	r0, 800e6ee <Display::Detect(display::Type)+0x24>
 800e6e8:	6803      	ldr	r3, [r0, #0]
 800e6ea:	685b      	ldr	r3, [r3, #4]
 800e6ec:	4798      	blx	r3
 800e6ee:	2300      	movs	r3, #0
 800e6f0:	61a3      	str	r3, [r4, #24]
 800e6f2:	2304      	movs	r3, #4
 800e6f4:	6023      	str	r3, [r4, #0]
 800e6f6:	2300      	movs	r3, #0
 800e6f8:	6163      	str	r3, [r4, #20]
 800e6fa:	e010      	b.n	800e71e <Display::Detect(display::Type)+0x54>
 800e6fc:	2018      	movs	r0, #24
 800e6fe:	f000 fbad 	bl	800ee5c <operator new(unsigned int)>
 800e702:	4605      	mov	r5, r0
 800e704:	2100      	movs	r1, #0
 800e706:	f000 f89d 	bl	800e844 <Ssd1306::Ssd1306(TOledPanel)>
 800e70a:	61a5      	str	r5, [r4, #24]
 800e70c:	e7e3      	b.n	800e6d6 <Display::Detect(display::Type)+0xc>
 800e70e:	6001      	str	r1, [r0, #0]
 800e710:	e7e1      	b.n	800e6d6 <Display::Detect(display::Type)+0xc>
 800e712:	6803      	ldr	r3, [r0, #0]
 800e714:	68db      	ldr	r3, [r3, #12]
 800e716:	4798      	blx	r3
 800e718:	69a3      	ldr	r3, [r4, #24]
 800e71a:	2b00      	cmp	r3, #0
 800e71c:	d0eb      	beq.n	800e6f6 <Display::Detect(display::Type)+0x2c>
 800e71e:	bd38      	pop	{r3, r4, r5, pc}

0800e720 <Display::Display()>:
 800e720:	2304      	movs	r3, #4
 800e722:	b510      	push	{r4, lr}
 800e724:	6003      	str	r3, [r0, #0]
 800e726:	4b0f      	ldr	r3, [pc, #60]	; (800e764 <Display::Display()+0x44>)
 800e728:	4604      	mov	r4, r0
 800e72a:	681b      	ldr	r3, [r3, #0]
 800e72c:	4a0e      	ldr	r2, [pc, #56]	; (800e768 <Display::Display()+0x48>)
 800e72e:	6043      	str	r3, [r0, #4]
 800e730:	2321      	movs	r3, #33	; 0x21
 800e732:	7203      	strb	r3, [r0, #8]
 800e734:	4b0d      	ldr	r3, [pc, #52]	; (800e76c <Display::Display()+0x4c>)
 800e736:	2102      	movs	r1, #2
 800e738:	60c3      	str	r3, [r0, #12]
 800e73a:	2300      	movs	r3, #0
 800e73c:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800e740:	8203      	strh	r3, [r0, #16]
 800e742:	4b0b      	ldr	r3, [pc, #44]	; (800e770 <Display::Display()+0x50>)
 800e744:	6018      	str	r0, [r3, #0]
 800e746:	f7ff ffc0 	bl	800e6ca <Display::Detect(display::Type)>
 800e74a:	4620      	mov	r0, r4
 800e74c:	f7ff ffa5 	bl	800e69a <Display::Detect7Segment()>
 800e750:	69a3      	ldr	r3, [r4, #24]
 800e752:	b10b      	cbz	r3, 800e758 <Display::Display()+0x38>
 800e754:	f7ff ff61 	bl	800e61a <display::timeout::gpio_init()>
 800e758:	69a0      	ldr	r0, [r4, #24]
 800e75a:	f7ff ff61 	bl	800e620 <Display::PrintInfo() [clone .isra.0]>
 800e75e:	4620      	mov	r0, r4
 800e760:	bd10      	pop	{r4, pc}
 800e762:	bf00      	nop
 800e764:	2000a094 	mulcs	r0, r4, r0
 800e768:	000493e0 	andeq	r9, r4, r0, ror #7
 800e76c:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e770:	20009f8c 	andcs	r9, r0, ip, lsl #31

0800e774 <Ssd1306::~Ssd1306()>:
 800e774:	4770      	bx	lr

0800e776 <Ssd1306::SetCursor(unsigned int)>:
 800e776:	4770      	bx	lr

0800e778 <Ssd1306::PrintInfo()>:
 800e778:	b410      	push	{r4}
 800e77a:	4906      	ldr	r1, [pc, #24]	; (800e794 <Ssd1306::PrintInfo()+0x1c>)
 800e77c:	7c44      	ldrb	r4, [r0, #17]
 800e77e:	7903      	ldrb	r3, [r0, #4]
 800e780:	7942      	ldrb	r2, [r0, #5]
 800e782:	4805      	ldr	r0, [pc, #20]	; (800e798 <Ssd1306::PrintInfo()+0x20>)
 800e784:	2c00      	cmp	r4, #0
 800e786:	bf08      	it	eq
 800e788:	4601      	moveq	r1, r0
 800e78a:	4804      	ldr	r0, [pc, #16]	; (800e79c <Ssd1306::PrintInfo()+0x24>)
 800e78c:	bc10      	pop	{r4}
 800e78e:	f7fa b857 	b.w	8008840 <printf>
 800e792:	bf00      	nop
 800e794:	08012650 	stmdaeq	r1, {r4, r6, r9, sl, sp}
 800e798:	08012657 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sl, sp}
 800e79c:	0801265f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, sp}

0800e7a0 <Ssd1306::~Ssd1306()>:
 800e7a0:	b510      	push	{r4, lr}
 800e7a2:	4604      	mov	r4, r0
 800e7a4:	f000 fb56 	bl	800ee54 <operator delete(void*)>
 800e7a8:	4620      	mov	r0, r4
 800e7aa:	bd10      	pop	{r4, pc}

0800e7ac <HAL_I2C::Setup()>:
 800e7ac:	b510      	push	{r4, lr}
 800e7ae:	4604      	mov	r4, r0
 800e7b0:	7800      	ldrb	r0, [r0, #0]
 800e7b2:	f001 ff3b 	bl	801062c <gd32_i2c_set_address>
 800e7b6:	6860      	ldr	r0, [r4, #4]
 800e7b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e7bc:	f001 bf2e 	b.w	801061c <gd32_i2c_set_baudrate>

0800e7c0 <Ssd1306::PutChar(int)>:
 800e7c0:	b510      	push	{r4, lr}
 800e7c2:	f1a1 0420 	sub.w	r4, r1, #32
 800e7c6:	2c5f      	cmp	r4, #95	; 0x5f
 800e7c8:	bf88      	it	hi
 800e7ca:	2400      	movhi	r4, #0
 800e7cc:	3008      	adds	r0, #8
 800e7ce:	f7ff ffed 	bl	800e7ac <HAL_I2C::Setup()>
 800e7d2:	4804      	ldr	r0, [pc, #16]	; (800e7e4 <Ssd1306::PutChar(int)+0x24>)
 800e7d4:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800e7d8:	4420      	add	r0, r4
 800e7da:	2107      	movs	r1, #7
 800e7dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e7e0:	f001 bf2a 	b.w	8010638 <gd32_i2c_write>
 800e7e4:	08012674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, sp}

0800e7e8 <Ssd1306::PutString(char const*)>:
 800e7e8:	b538      	push	{r3, r4, r5, lr}
 800e7ea:	4605      	mov	r5, r0
 800e7ec:	1e4c      	subs	r4, r1, #1
 800e7ee:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e7f2:	b901      	cbnz	r1, 800e7f6 <Ssd1306::PutString(char const*)+0xe>
 800e7f4:	bd38      	pop	{r3, r4, r5, pc}
 800e7f6:	4628      	mov	r0, r5
 800e7f8:	f7ff ffe2 	bl	800e7c0 <Ssd1306::PutChar(int)>
 800e7fc:	e7f7      	b.n	800e7ee <Ssd1306::PutString(char const*)+0x6>

0800e7fe <Ssd1306::Text(char const*, unsigned int)>:
 800e7fe:	b570      	push	{r4, r5, r6, lr}
 800e800:	7903      	ldrb	r3, [r0, #4]
 800e802:	4605      	mov	r5, r0
 800e804:	460c      	mov	r4, r1
 800e806:	4293      	cmp	r3, r2
 800e808:	bf94      	ite	ls
 800e80a:	18ce      	addls	r6, r1, r3
 800e80c:	188e      	addhi	r6, r1, r2
 800e80e:	42b4      	cmp	r4, r6
 800e810:	d100      	bne.n	800e814 <Ssd1306::Text(char const*, unsigned int)+0x16>
 800e812:	bd70      	pop	{r4, r5, r6, pc}
 800e814:	4628      	mov	r0, r5
 800e816:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e81a:	f7ff ffd1 	bl	800e7c0 <Ssd1306::PutChar(int)>
 800e81e:	e7f6      	b.n	800e80e <Ssd1306::Text(char const*, unsigned int)+0x10>

0800e820 <Ssd1306::InitMembers()>:
 800e820:	7c03      	ldrb	r3, [r0, #16]
 800e822:	b14b      	cbz	r3, 800e838 <Ssd1306::InitMembers()+0x18>
 800e824:	3b01      	subs	r3, #1
 800e826:	2b01      	cmp	r3, #1
 800e828:	d909      	bls.n	800e83e <Ssd1306::InitMembers()+0x1e>
 800e82a:	2308      	movs	r3, #8
 800e82c:	2204      	movs	r2, #4
 800e82e:	2115      	movs	r1, #21
 800e830:	7143      	strb	r3, [r0, #5]
 800e832:	7101      	strb	r1, [r0, #4]
 800e834:	6142      	str	r2, [r0, #20]
 800e836:	4770      	bx	lr
 800e838:	2308      	movs	r3, #8
 800e83a:	461a      	mov	r2, r3
 800e83c:	e7f7      	b.n	800e82e <Ssd1306::InitMembers()+0xe>
 800e83e:	2304      	movs	r3, #4
 800e840:	e7fb      	b.n	800e83a <Ssd1306::InitMembers()+0x1a>
	...

0800e844 <Ssd1306::Ssd1306(TOledPanel)>:
 800e844:	4a08      	ldr	r2, [pc, #32]	; (800e868 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800e846:	b508      	push	{r3, lr}
 800e848:	6002      	str	r2, [r0, #0]
 800e84a:	227f      	movs	r2, #127	; 0x7f
 800e84c:	80c2      	strh	r2, [r0, #6]
 800e84e:	223c      	movs	r2, #60	; 0x3c
 800e850:	7202      	strb	r2, [r0, #8]
 800e852:	4a06      	ldr	r2, [pc, #24]	; (800e86c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800e854:	7401      	strb	r1, [r0, #16]
 800e856:	60c2      	str	r2, [r0, #12]
 800e858:	2200      	movs	r2, #0
 800e85a:	7442      	strb	r2, [r0, #17]
 800e85c:	4a04      	ldr	r2, [pc, #16]	; (800e870 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800e85e:	6010      	str	r0, [r2, #0]
 800e860:	f7ff ffde 	bl	800e820 <Ssd1306::InitMembers()>
 800e864:	bd08      	pop	{r3, pc}
 800e866:	bf00      	nop
 800e868:	0801294c 	stmdaeq	r1, {r2, r3, r6, r8, fp, sp}
 800e86c:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e870:	2000a018 	andcs	sl, r0, r8, lsl r0

0800e874 <Ssd1306::SendCommand(unsigned char)>:
 800e874:	2300      	movs	r3, #0
 800e876:	b507      	push	{r0, r1, r2, lr}
 800e878:	3008      	adds	r0, #8
 800e87a:	f88d 3004 	strb.w	r3, [sp, #4]
 800e87e:	f88d 1005 	strb.w	r1, [sp, #5]
 800e882:	f7ff ff93 	bl	800e7ac <HAL_I2C::Setup()>
 800e886:	2102      	movs	r1, #2
 800e888:	a801      	add	r0, sp, #4
 800e88a:	f001 fed5 	bl	8010638 <gd32_i2c_write>
 800e88e:	b003      	add	sp, #12
 800e890:	f85d fb04 	ldr.w	pc, [sp], #4

0800e894 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800e894:	2914      	cmp	r1, #20
 800e896:	b570      	push	{r4, r5, r6, lr}
 800e898:	4605      	mov	r5, r0
 800e89a:	4616      	mov	r6, r2
 800e89c:	d81c      	bhi.n	800e8d8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e89e:	7943      	ldrb	r3, [r0, #5]
 800e8a0:	4293      	cmp	r3, r2
 800e8a2:	d919      	bls.n	800e8d8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e8a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e8a8:	7c43      	ldrb	r3, [r0, #17]
 800e8aa:	004c      	lsls	r4, r1, #1
 800e8ac:	b2e4      	uxtb	r4, r4
 800e8ae:	b10b      	cbz	r3, 800e8b4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800e8b0:	3404      	adds	r4, #4
 800e8b2:	b2e4      	uxtb	r4, r4
 800e8b4:	4628      	mov	r0, r5
 800e8b6:	f004 010e 	and.w	r1, r4, #14
 800e8ba:	f7ff ffdb 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e8be:	0921      	lsrs	r1, r4, #4
 800e8c0:	4628      	mov	r0, r5
 800e8c2:	f041 0110 	orr.w	r1, r1, #16
 800e8c6:	f7ff ffd5 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e8ca:	4628      	mov	r0, r5
 800e8cc:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800e8d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e8d4:	f7ff bfce 	b.w	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e8d8:	bd70      	pop	{r4, r5, r6, pc}

0800e8da <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800e8da:	b570      	push	{r4, r5, r6, lr}
 800e8dc:	461e      	mov	r6, r3
 800e8de:	7943      	ldrb	r3, [r0, #5]
 800e8e0:	4604      	mov	r4, r0
 800e8e2:	428b      	cmp	r3, r1
 800e8e4:	4615      	mov	r5, r2
 800e8e6:	d30b      	bcc.n	800e900 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 800e8e8:	3901      	subs	r1, #1
 800e8ea:	b2ca      	uxtb	r2, r1
 800e8ec:	2100      	movs	r1, #0
 800e8ee:	f7ff ffd1 	bl	800e894 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8f2:	4632      	mov	r2, r6
 800e8f4:	4629      	mov	r1, r5
 800e8f6:	4620      	mov	r0, r4
 800e8f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e8fc:	f7ff bf7f 	b.w	800e7fe <Ssd1306::Text(char const*, unsigned int)>
 800e900:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e904 <Ssd1306::ClearLine(unsigned char)>:
 800e904:	b538      	push	{r3, r4, r5, lr}
 800e906:	7943      	ldrb	r3, [r0, #5]
 800e908:	4605      	mov	r5, r0
 800e90a:	428b      	cmp	r3, r1
 800e90c:	d314      	bcc.n	800e938 <Ssd1306::ClearLine(unsigned char)+0x34>
 800e90e:	3901      	subs	r1, #1
 800e910:	b2cc      	uxtb	r4, r1
 800e912:	4622      	mov	r2, r4
 800e914:	2100      	movs	r1, #0
 800e916:	f7ff ffbd 	bl	800e894 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e91a:	f105 0008 	add.w	r0, r5, #8
 800e91e:	f7ff ff45 	bl	800e7ac <HAL_I2C::Setup()>
 800e922:	2181      	movs	r1, #129	; 0x81
 800e924:	4805      	ldr	r0, [pc, #20]	; (800e93c <Ssd1306::ClearLine(unsigned char)+0x38>)
 800e926:	f001 fe87 	bl	8010638 <gd32_i2c_write>
 800e92a:	4622      	mov	r2, r4
 800e92c:	4628      	mov	r0, r5
 800e92e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e932:	2100      	movs	r1, #0
 800e934:	f7ff bfae 	b.w	800e894 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e938:	bd38      	pop	{r3, r4, r5, pc}
 800e93a:	bf00      	nop
 800e93c:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>

0800e940 <Ssd1306::SetSleep(bool)>:
 800e940:	b111      	cbz	r1, 800e948 <Ssd1306::SetSleep(bool)+0x8>
 800e942:	21ae      	movs	r1, #174	; 0xae
 800e944:	f7ff bf96 	b.w	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e948:	21af      	movs	r1, #175	; 0xaf
 800e94a:	e7fb      	b.n	800e944 <Ssd1306::SetSleep(bool)+0x4>

0800e94c <Ssd1306::SetContrast(unsigned char)>:
 800e94c:	b538      	push	{r3, r4, r5, lr}
 800e94e:	4604      	mov	r4, r0
 800e950:	460d      	mov	r5, r1
 800e952:	7181      	strb	r1, [r0, #6]
 800e954:	2181      	movs	r1, #129	; 0x81
 800e956:	f7ff ff8d 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e95a:	4629      	mov	r1, r5
 800e95c:	4620      	mov	r0, r4
 800e95e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e962:	f7ff bf87 	b.w	800e874 <Ssd1306::SendCommand(unsigned char)>

0800e966 <Ssd1306::SetFlipVertically(bool)>:
 800e966:	b510      	push	{r4, lr}
 800e968:	4604      	mov	r4, r0
 800e96a:	71c1      	strb	r1, [r0, #7]
 800e96c:	b141      	cbz	r1, 800e980 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800e96e:	21c0      	movs	r1, #192	; 0xc0
 800e970:	f7ff ff80 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e974:	21a0      	movs	r1, #160	; 0xa0
 800e976:	4620      	mov	r0, r4
 800e978:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e97c:	f7ff bf7a 	b.w	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e980:	21c8      	movs	r1, #200	; 0xc8
 800e982:	f7ff ff77 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e986:	21a1      	movs	r1, #161	; 0xa1
 800e988:	e7f5      	b.n	800e976 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800e98c <Ssd1306::CheckSH1106()>:
 800e98c:	b530      	push	{r4, r5, lr}
 800e98e:	4604      	mov	r4, r0
 800e990:	b087      	sub	sp, #28
 800e992:	2100      	movs	r1, #0
 800e994:	f7ff ff6e 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e998:	2190      	movs	r1, #144	; 0x90
 800e99a:	4620      	mov	r0, r4
 800e99c:	f7ff ff6a 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e9a0:	21b0      	movs	r1, #176	; 0xb0
 800e9a2:	4620      	mov	r0, r4
 800e9a4:	f7ff ff66 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e9a8:	4b22      	ldr	r3, [pc, #136]	; (800ea34 <Ssd1306::CheckSH1106()+0xa8>)
 800e9aa:	f104 0508 	add.w	r5, r4, #8
 800e9ae:	6818      	ldr	r0, [r3, #0]
 800e9b0:	791b      	ldrb	r3, [r3, #4]
 800e9b2:	9002      	str	r0, [sp, #8]
 800e9b4:	4628      	mov	r0, r5
 800e9b6:	f88d 300c 	strb.w	r3, [sp, #12]
 800e9ba:	f7ff fef7 	bl	800e7ac <HAL_I2C::Setup()>
 800e9be:	2105      	movs	r1, #5
 800e9c0:	a802      	add	r0, sp, #8
 800e9c2:	f001 fe39 	bl	8010638 <gd32_i2c_write>
 800e9c6:	2100      	movs	r1, #0
 800e9c8:	4620      	mov	r0, r4
 800e9ca:	f7ff ff53 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e9ce:	2190      	movs	r1, #144	; 0x90
 800e9d0:	4620      	mov	r0, r4
 800e9d2:	f7ff ff4f 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e9d6:	21b0      	movs	r1, #176	; 0xb0
 800e9d8:	4620      	mov	r0, r4
 800e9da:	f7ff ff4b 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800e9de:	2300      	movs	r3, #0
 800e9e0:	9304      	str	r3, [sp, #16]
 800e9e2:	f88d 3014 	strb.w	r3, [sp, #20]
 800e9e6:	2340      	movs	r3, #64	; 0x40
 800e9e8:	4628      	mov	r0, r5
 800e9ea:	f88d 3007 	strb.w	r3, [sp, #7]
 800e9ee:	f7ff fedd 	bl	800e7ac <HAL_I2C::Setup()>
 800e9f2:	2101      	movs	r1, #1
 800e9f4:	f10d 0007 	add.w	r0, sp, #7
 800e9f8:	f001 fe1e 	bl	8010638 <gd32_i2c_write>
 800e9fc:	4628      	mov	r0, r5
 800e9fe:	f7ff fed5 	bl	800e7ac <HAL_I2C::Setup()>
 800ea02:	2105      	movs	r1, #5
 800ea04:	a804      	add	r0, sp, #16
 800ea06:	f001 fe7d 	bl	8010704 <gd32_i2c_read>
 800ea0a:	2004      	movs	r0, #4
 800ea0c:	aa02      	add	r2, sp, #8
 800ea0e:	a904      	add	r1, sp, #16
 800ea10:	3801      	subs	r0, #1
 800ea12:	d201      	bcs.n	800ea18 <Ssd1306::CheckSH1106()+0x8c>
 800ea14:	2300      	movs	r3, #0
 800ea16:	e006      	b.n	800ea26 <Ssd1306::CheckSH1106()+0x9a>
 800ea18:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ea1c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800ea20:	42ab      	cmp	r3, r5
 800ea22:	d0f5      	beq.n	800ea10 <Ssd1306::CheckSH1106()+0x84>
 800ea24:	1b5b      	subs	r3, r3, r5
 800ea26:	fab3 f383 	clz	r3, r3
 800ea2a:	095b      	lsrs	r3, r3, #5
 800ea2c:	7463      	strb	r3, [r4, #17]
 800ea2e:	b007      	add	sp, #28
 800ea30:	bd30      	pop	{r4, r5, pc}
 800ea32:	bf00      	nop
 800ea34:	0801266b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, sp}

0800ea38 <Ssd1306::Cls()>:
 800ea38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea3c:	4604      	mov	r4, r0
 800ea3e:	2600      	movs	r6, #0
 800ea40:	7c45      	ldrb	r5, [r0, #17]
 800ea42:	00ad      	lsls	r5, r5, #2
 800ea44:	b2ed      	uxtb	r5, r5
 800ea46:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800ea4a:	f045 0810 	orr.w	r8, r5, #16
 800ea4e:	b2ff      	uxtb	r7, r7
 800ea50:	6963      	ldr	r3, [r4, #20]
 800ea52:	4629      	mov	r1, r5
 800ea54:	42b3      	cmp	r3, r6
 800ea56:	4620      	mov	r0, r4
 800ea58:	d80b      	bhi.n	800ea72 <Ssd1306::Cls()+0x3a>
 800ea5a:	f7ff ff0b 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea5e:	4641      	mov	r1, r8
 800ea60:	4620      	mov	r0, r4
 800ea62:	f7ff ff07 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea66:	4620      	mov	r0, r4
 800ea68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ea6c:	21b0      	movs	r1, #176	; 0xb0
 800ea6e:	f7ff bf01 	b.w	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea72:	f7ff feff 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea76:	4641      	mov	r1, r8
 800ea78:	4620      	mov	r0, r4
 800ea7a:	f7ff fefb 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea7e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800ea82:	4620      	mov	r0, r4
 800ea84:	b2c9      	uxtb	r1, r1
 800ea86:	f7ff fef5 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800ea8a:	7c23      	ldrb	r3, [r4, #16]
 800ea8c:	b123      	cbz	r3, 800ea98 <Ssd1306::Cls()+0x60>
 800ea8e:	3b01      	subs	r3, #1
 800ea90:	2b01      	cmp	r3, #1
 800ea92:	d901      	bls.n	800ea98 <Ssd1306::Cls()+0x60>
 800ea94:	3601      	adds	r6, #1
 800ea96:	e7db      	b.n	800ea50 <Ssd1306::Cls()+0x18>
 800ea98:	f104 0008 	add.w	r0, r4, #8
 800ea9c:	f7ff fe86 	bl	800e7ac <HAL_I2C::Setup()>
 800eaa0:	4639      	mov	r1, r7
 800eaa2:	4802      	ldr	r0, [pc, #8]	; (800eaac <Ssd1306::Cls()+0x74>)
 800eaa4:	f001 fdc8 	bl	8010638 <gd32_i2c_write>
 800eaa8:	e7f4      	b.n	800ea94 <Ssd1306::Cls()+0x5c>
 800eaaa:	bf00      	nop
 800eaac:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>

0800eab0 <Ssd1306::Start()>:
 800eab0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eab2:	7a04      	ldrb	r4, [r0, #8]
 800eab4:	68c6      	ldr	r6, [r0, #12]
 800eab6:	4605      	mov	r5, r0
 800eab8:	4620      	mov	r0, r4
 800eaba:	f001 fdb7 	bl	801062c <gd32_i2c_set_address>
 800eabe:	4630      	mov	r0, r6
 800eac0:	f001 fdac 	bl	801061c <gd32_i2c_set_baudrate>
 800eac4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800eac8:	2b07      	cmp	r3, #7
 800eaca:	d902      	bls.n	800ead2 <Ssd1306::Start()+0x22>
 800eacc:	3c50      	subs	r4, #80	; 0x50
 800eace:	2c0f      	cmp	r4, #15
 800ead0:	d80f      	bhi.n	800eaf2 <Ssd1306::Start()+0x42>
 800ead2:	2101      	movs	r1, #1
 800ead4:	f10d 0007 	add.w	r0, sp, #7
 800ead8:	f001 fe14 	bl	8010704 <gd32_i2c_read>
 800eadc:	fab0 f480 	clz	r4, r0
 800eae0:	0964      	lsrs	r4, r4, #5
 800eae2:	b35c      	cbz	r4, 800eb3c <Ssd1306::Start()+0x8c>
 800eae4:	7c2e      	ldrb	r6, [r5, #16]
 800eae6:	b14e      	cbz	r6, 800eafc <Ssd1306::Start()+0x4c>
 800eae8:	3e01      	subs	r6, #1
 800eaea:	2e01      	cmp	r6, #1
 800eaec:	d929      	bls.n	800eb42 <Ssd1306::Start()+0x92>
 800eaee:	2400      	movs	r4, #0
 800eaf0:	e024      	b.n	800eb3c <Ssd1306::Start()+0x8c>
 800eaf2:	2100      	movs	r1, #0
 800eaf4:	4608      	mov	r0, r1
 800eaf6:	f001 fd9f 	bl	8010638 <gd32_i2c_write>
 800eafa:	e7ef      	b.n	800eadc <Ssd1306::Start()+0x2c>
 800eafc:	4f16      	ldr	r7, [pc, #88]	; (800eb58 <Ssd1306::Start()+0xa8>)
 800eafe:	4628      	mov	r0, r5
 800eb00:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eb04:	3601      	adds	r6, #1
 800eb06:	f7ff feb5 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800eb0a:	2e18      	cmp	r6, #24
 800eb0c:	d1f7      	bne.n	800eafe <Ssd1306::Start()+0x4e>
 800eb0e:	2300      	movs	r3, #0
 800eb10:	4a12      	ldr	r2, [pc, #72]	; (800eb5c <Ssd1306::Start()+0xac>)
 800eb12:	4618      	mov	r0, r3
 800eb14:	4611      	mov	r1, r2
 800eb16:	3301      	adds	r3, #1
 800eb18:	2b86      	cmp	r3, #134	; 0x86
 800eb1a:	f802 0b01 	strb.w	r0, [r2], #1
 800eb1e:	d1fa      	bne.n	800eb16 <Ssd1306::Start()+0x66>
 800eb20:	2340      	movs	r3, #64	; 0x40
 800eb22:	4628      	mov	r0, r5
 800eb24:	700b      	strb	r3, [r1, #0]
 800eb26:	f7ff ff31 	bl	800e98c <Ssd1306::CheckSH1106()>
 800eb2a:	4628      	mov	r0, r5
 800eb2c:	f7ff ff84 	bl	800ea38 <Ssd1306::Cls()>
 800eb30:	21af      	movs	r1, #175	; 0xaf
 800eb32:	4628      	mov	r0, r5
 800eb34:	f7ff fe9e 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800eb38:	2301      	movs	r3, #1
 800eb3a:	71eb      	strb	r3, [r5, #7]
 800eb3c:	4620      	mov	r0, r4
 800eb3e:	b003      	add	sp, #12
 800eb40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb42:	2600      	movs	r6, #0
 800eb44:	4f06      	ldr	r7, [pc, #24]	; (800eb60 <Ssd1306::Start()+0xb0>)
 800eb46:	4628      	mov	r0, r5
 800eb48:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eb4c:	3601      	adds	r6, #1
 800eb4e:	f7ff fe91 	bl	800e874 <Ssd1306::SendCommand(unsigned char)>
 800eb52:	2e18      	cmp	r6, #24
 800eb54:	d1f7      	bne.n	800eb46 <Ssd1306::Start()+0x96>
 800eb56:	e7da      	b.n	800eb0e <Ssd1306::Start()+0x5e>
 800eb58:	0801292c 	stmdaeq	r1, {r2, r3, r5, r8, fp, sp}
 800eb5c:	20009f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
 800eb60:	08012914 	stmdaeq	r1, {r2, r4, r8, fp, sp}

0800eb64 <console_putc>:
 800eb64:	f000 bb4c 	b.w	800f200 <uart0_putc>

0800eb68 <console_puts>:
 800eb68:	f000 bb6a 	b.w	800f240 <uart0_puts>

0800eb6c <console_set_fg_color>:
 800eb6c:	2807      	cmp	r0, #7
 800eb6e:	d810      	bhi.n	800eb92 <console_set_fg_color+0x26>
 800eb70:	e8df f000 	tbb	[pc, r0]
 800eb74:	0b090704 	bleq	825078c <__exidx_end+0x23dd88>
 800eb78:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800eb44 <Ssd1306::Start()+0x94>
 800eb7c:	4806      	ldr	r0, [pc, #24]	; (800eb98 <console_set_fg_color+0x2c>)
 800eb7e:	f000 bb5f 	b.w	800f240 <uart0_puts>
 800eb82:	4806      	ldr	r0, [pc, #24]	; (800eb9c <console_set_fg_color+0x30>)
 800eb84:	e7fb      	b.n	800eb7e <console_set_fg_color+0x12>
 800eb86:	4806      	ldr	r0, [pc, #24]	; (800eba0 <console_set_fg_color+0x34>)
 800eb88:	e7f9      	b.n	800eb7e <console_set_fg_color+0x12>
 800eb8a:	4806      	ldr	r0, [pc, #24]	; (800eba4 <console_set_fg_color+0x38>)
 800eb8c:	e7f7      	b.n	800eb7e <console_set_fg_color+0x12>
 800eb8e:	4806      	ldr	r0, [pc, #24]	; (800eba8 <console_set_fg_color+0x3c>)
 800eb90:	e7f5      	b.n	800eb7e <console_set_fg_color+0x12>
 800eb92:	4806      	ldr	r0, [pc, #24]	; (800ebac <console_set_fg_color+0x40>)
 800eb94:	e7f3      	b.n	800eb7e <console_set_fg_color+0x12>
 800eb96:	bf00      	nop
 800eb98:	0801298a 	stmdaeq	r1, {r1, r3, r7, r8, fp, sp}
 800eb9c:	08012990 	stmdaeq	r1, {r4, r7, r8, fp, sp}
 800eba0:	08012996 	stmdaeq	r1, {r1, r2, r4, r7, r8, fp, sp}
 800eba4:	0801299c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, sp}
 800eba8:	08010f79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp}
 800ebac:	080129a2 	stmdaeq	r1, {r1, r5, r7, r8, fp, sp}

0800ebb0 <console_error>:
 800ebb0:	b510      	push	{r4, lr}
 800ebb2:	4604      	mov	r4, r0
 800ebb4:	4805      	ldr	r0, [pc, #20]	; (800ebcc <console_error+0x1c>)
 800ebb6:	f000 fb43 	bl	800f240 <uart0_puts>
 800ebba:	4620      	mov	r0, r4
 800ebbc:	f000 fb40 	bl	800f240 <uart0_puts>
 800ebc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebc4:	4802      	ldr	r0, [pc, #8]	; (800ebd0 <console_error+0x20>)
 800ebc6:	f000 bb3b 	b.w	800f240 <uart0_puts>
 800ebca:	bf00      	nop
 800ebcc:	08012990 	stmdaeq	r1, {r4, r7, r8, fp, sp}
 800ebd0:	08010f79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp}

0800ebd4 <console_status>:
 800ebd4:	b510      	push	{r4, lr}
 800ebd6:	460c      	mov	r4, r1
 800ebd8:	b280      	uxth	r0, r0
 800ebda:	f7ff ffc7 	bl	800eb6c <console_set_fg_color>
 800ebde:	4807      	ldr	r0, [pc, #28]	; (800ebfc <console_status+0x28>)
 800ebe0:	f000 fb2e 	bl	800f240 <uart0_puts>
 800ebe4:	4620      	mov	r0, r4
 800ebe6:	f000 fb2b 	bl	800f240 <uart0_puts>
 800ebea:	200a      	movs	r0, #10
 800ebec:	f000 fb08 	bl	800f200 <uart0_putc>
 800ebf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebf4:	4802      	ldr	r0, [pc, #8]	; (800ec00 <console_status+0x2c>)
 800ebf6:	f000 bb23 	b.w	800f240 <uart0_puts>
 800ebfa:	bf00      	nop
 800ebfc:	08012984 	stmdaeq	r1, {r2, r7, r8, fp, sp}
 800ec00:	08010f79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp}

0800ec04 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800ec04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec08:	4617      	mov	r7, r2
 800ec0a:	461e      	mov	r6, r3
 800ec0c:	4d14      	ldr	r5, [pc, #80]	; (800ec60 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800ec0e:	4b15      	ldr	r3, [pc, #84]	; (800ec64 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800ec10:	b086      	sub	sp, #24
 800ec12:	6018      	str	r0, [r3, #0]
 800ec14:	4604      	mov	r4, r0
 800ec16:	f105 0803 	add.w	r8, r5, #3
 800ec1a:	2203      	movs	r2, #3
 800ec1c:	4628      	mov	r0, r5
 800ec1e:	f000 f9b4 	bl	800ef8a <memmove>
 800ec22:	4639      	mov	r1, r7
 800ec24:	220b      	movs	r2, #11
 800ec26:	4640      	mov	r0, r8
 800ec28:	f000 f9af 	bl	800ef8a <memmove>
 800ec2c:	f105 030e 	add.w	r3, r5, #14
 800ec30:	4631      	mov	r1, r6
 800ec32:	2208      	movs	r2, #8
 800ec34:	4618      	mov	r0, r3
 800ec36:	f000 f9a8 	bl	800ef8a <memmove>
 800ec3a:	2308      	movs	r3, #8
 800ec3c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800ec40:	230b      	movs	r3, #11
 800ec42:	9302      	str	r3, [sp, #8]
 800ec44:	4b08      	ldr	r3, [pc, #32]	; (800ec68 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800ec46:	9005      	str	r0, [sp, #20]
 800ec48:	e9cd 5300 	strd	r5, r3, [sp]
 800ec4c:	213f      	movs	r1, #63	; 0x3f
 800ec4e:	2303      	movs	r3, #3
 800ec50:	4a06      	ldr	r2, [pc, #24]	; (800ec6c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800ec52:	4807      	ldr	r0, [pc, #28]	; (800ec70 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800ec54:	f7f9 fe04 	bl	8008860 <snprintf>
 800ec58:	4620      	mov	r0, r4
 800ec5a:	b006      	add	sp, #24
 800ec5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec60:	2000a01c 	andcs	sl, r0, ip, lsl r0
 800ec64:	2000a074 	andcs	sl, r0, r4, ror r0
 800ec68:	08010fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp}
 800ec6c:	080129a8 	stmdaeq	r1, {r3, r5, r7, r8, fp, sp}
 800ec70:	2000a032 	andcs	sl, r0, r2, lsr r0

0800ec74 <FirmwareVersion::Print(char const*)>:
 800ec74:	b510      	push	{r4, lr}
 800ec76:	460c      	mov	r4, r1
 800ec78:	4804      	ldr	r0, [pc, #16]	; (800ec8c <FirmwareVersion::Print(char const*)+0x18>)
 800ec7a:	f000 f9be 	bl	800effa <puts>
 800ec7e:	b124      	cbz	r4, 800ec8a <FirmwareVersion::Print(char const*)+0x16>
 800ec80:	4620      	mov	r0, r4
 800ec82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec86:	f000 b9b8 	b.w	800effa <puts>
 800ec8a:	bd10      	pop	{r4, pc}
 800ec8c:	2000a032 	andcs	sl, r0, r2, lsr r0

0800ec90 <LedBlink::LedBlink()>:
 800ec90:	b538      	push	{r3, r4, r5, lr}
 800ec92:	2205      	movs	r2, #5
 800ec94:	2300      	movs	r3, #0
 800ec96:	e9c0 3200 	strd	r3, r2, [r0]
 800ec9a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ec9e:	6083      	str	r3, [r0, #8]
 800eca0:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800eca4:	6143      	str	r3, [r0, #20]
 800eca6:	4b09      	ldr	r3, [pc, #36]	; (800eccc <LedBlink::LedBlink()+0x3c>)
 800eca8:	4d09      	ldr	r5, [pc, #36]	; (800ecd0 <LedBlink::LedBlink()+0x40>)
 800ecaa:	4604      	mov	r4, r0
 800ecac:	6018      	str	r0, [r3, #0]
 800ecae:	f240 6004 	movw	r0, #1540	; 0x604
 800ecb2:	f001 f8f3 	bl	800fe9c <rcu_periph_clock_enable>
 800ecb6:	4628      	mov	r0, r5
 800ecb8:	2301      	movs	r3, #1
 800ecba:	2203      	movs	r2, #3
 800ecbc:	2110      	movs	r1, #16
 800ecbe:	f001 f855 	bl	800fd6c <gpio_init>
 800ecc2:	2301      	movs	r3, #1
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	616b      	str	r3, [r5, #20]
 800ecc8:	bd38      	pop	{r3, r4, r5, pc}
 800ecca:	bf00      	nop
 800eccc:	2000a078 	andcs	sl, r0, r8, ror r0
 800ecd0:	40011000 	andmi	r1, r1, r0

0800ecd4 <LedBlink::SetMode(ledblink::Mode)>:
 800ecd4:	6843      	ldr	r3, [r0, #4]
 800ecd6:	428b      	cmp	r3, r1
 800ecd8:	d02f      	beq.n	800ed3a <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ecda:	6041      	str	r1, [r0, #4]
 800ecdc:	2904      	cmp	r1, #4
 800ecde:	d822      	bhi.n	800ed26 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800ece0:	e8df f001 	tbb	[pc, r1]
 800ece4:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800ece8:	23ff001d 	mvnscs	r0, #29
 800ecec:	6003      	str	r3, [r0, #0]
 800ecee:	2300      	movs	r3, #0
 800ecf0:	2201      	movs	r2, #1
 800ecf2:	60c3      	str	r3, [r0, #12]
 800ecf4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ecf8:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ecfc:	611a      	str	r2, [r3, #16]
 800ecfe:	6880      	ldr	r0, [r0, #8]
 800ed00:	b1d8      	cbz	r0, 800ed3a <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ed02:	6803      	ldr	r3, [r0, #0]
 800ed04:	689b      	ldr	r3, [r3, #8]
 800ed06:	4718      	bx	r3
 800ed08:	2301      	movs	r3, #1
 800ed0a:	6003      	str	r3, [r0, #0]
 800ed0c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ed10:	60c3      	str	r3, [r0, #12]
 800ed12:	e7f4      	b.n	800ecfe <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ed14:	2303      	movs	r3, #3
 800ed16:	6003      	str	r3, [r0, #0]
 800ed18:	f240 134d 	movw	r3, #333	; 0x14d
 800ed1c:	e7f8      	b.n	800ed10 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ed1e:	2305      	movs	r3, #5
 800ed20:	6003      	str	r3, [r0, #0]
 800ed22:	23c8      	movs	r3, #200	; 0xc8
 800ed24:	e7f4      	b.n	800ed10 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ed26:	2300      	movs	r3, #0
 800ed28:	2201      	movs	r2, #1
 800ed2a:	6003      	str	r3, [r0, #0]
 800ed2c:	60c3      	str	r3, [r0, #12]
 800ed2e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ed32:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ed36:	615a      	str	r2, [r3, #20]
 800ed38:	e7e1      	b.n	800ecfe <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ed3a:	4770      	bx	lr

0800ed3c <Hardware::Hardware()>:
 800ed3c:	b570      	push	{r4, r5, r6, lr}
 800ed3e:	2400      	movs	r4, #0
 800ed40:	4b24      	ldr	r3, [pc, #144]	; (800edd4 <Hardware::Hardware()+0x98>)
 800ed42:	b090      	sub	sp, #64	; 0x40
 800ed44:	7004      	strb	r4, [r0, #0]
 800ed46:	6018      	str	r0, [r3, #0]
 800ed48:	4605      	mov	r5, r0
 800ed4a:	f7f8 fbd9 	bl	8007500 <console_init>
 800ed4e:	f000 fa87 	bl	800f260 <systick_config>
 800ed52:	f001 fe55 	bl	8010a00 <udelay_init()>
 800ed56:	f001 fe51 	bl	80109fc <micros_init()>
 800ed5a:	f240 701b 	movw	r0, #1819	; 0x71b
 800ed5e:	f001 f89d 	bl	800fe9c <rcu_periph_clock_enable>
 800ed62:	f240 701c 	movw	r0, #1820	; 0x71c
 800ed66:	f001 f899 	bl	800fe9c <rcu_periph_clock_enable>
 800ed6a:	4e1b      	ldr	r6, [pc, #108]	; (800edd8 <Hardware::Hardware()+0x9c>)
 800ed6c:	f001 f88e 	bl	800fe8c <pmu_backup_write_enable>
 800ed70:	4621      	mov	r1, r4
 800ed72:	2002      	movs	r0, #2
 800ed74:	f000 fb12 	bl	800f39c <bkp_data_write>
 800ed78:	f240 7004 	movw	r0, #1796	; 0x704
 800ed7c:	f001 f88e 	bl	800fe9c <rcu_periph_clock_enable>
 800ed80:	4630      	mov	r0, r6
 800ed82:	f001 f9d9 	bl	8010138 <timer_deinit>
 800ed86:	236b      	movs	r3, #107	; 0x6b
 800ed88:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ed8c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ed90:	a903      	add	r1, sp, #12
 800ed92:	4630      	mov	r0, r6
 800ed94:	9305      	str	r3, [sp, #20]
 800ed96:	f001 fa31 	bl	80101fc <timer_init>
 800ed9a:	4630      	mov	r0, r6
 800ed9c:	f001 fa86 	bl	80102ac <timer_enable>
 800eda0:	f001 fbae 	bl	8010500 <gd32_adc_init()>
 800eda4:	2219      	movs	r2, #25
 800eda6:	230b      	movs	r3, #11
 800eda8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800edac:	237a      	movs	r3, #122	; 0x7a
 800edae:	a807      	add	r0, sp, #28
 800edb0:	930c      	str	r3, [sp, #48]	; 0x30
 800edb2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800edb6:	9407      	str	r4, [sp, #28]
 800edb8:	940f      	str	r4, [sp, #60]	; 0x3c
 800edba:	f000 f977 	bl	800f0ac <mktime>
 800edbe:	4621      	mov	r1, r4
 800edc0:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800edc4:	a801      	add	r0, sp, #4
 800edc6:	f000 f9e7 	bl	800f198 <settimeofday>
 800edca:	f001 fbf3 	bl	80105b4 <gd32_i2c_begin>
 800edce:	4628      	mov	r0, r5
 800edd0:	b010      	add	sp, #64	; 0x40
 800edd2:	bd70      	pop	{r4, r5, r6, pc}
 800edd4:	2000a07c 	andcs	sl, r0, ip, ror r0
 800edd8:	40001000 	andmi	r1, r0, r0

0800eddc <Hardware::Reboot()>:
 800eddc:	b508      	push	{r3, lr}
 800edde:	2300      	movs	r3, #0
 800ede0:	4604      	mov	r4, r0
 800ede2:	7003      	strb	r3, [r0, #0]
 800ede4:	2104      	movs	r1, #4
 800ede6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800edea:	f000 ff95 	bl	800fd18 <fwdgt_config>
 800edee:	4620      	mov	r0, r4
 800edf0:	f7f9 f8e8 	bl	8007fc4 <Hardware::RebootHandler()>
 800edf4:	2102      	movs	r1, #2
 800edf6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800edfa:	f000 ff8d 	bl	800fd18 <fwdgt_config>
 800edfe:	2801      	cmp	r0, #1
 800ee00:	bf0c      	ite	eq
 800ee02:	2301      	moveq	r3, #1
 800ee04:	2300      	movne	r3, #0
 800ee06:	7023      	strb	r3, [r4, #0]
 800ee08:	d101      	bne.n	800ee0e <Hardware::Reboot()+0x32>
 800ee0a:	f000 ff75 	bl	800fcf8 <fwdgt_enable>
 800ee0e:	2208      	movs	r2, #8
 800ee10:	4b0d      	ldr	r3, [pc, #52]	; (800ee48 <Hardware::Reboot()+0x6c>)
 800ee12:	2501      	movs	r5, #1
 800ee14:	681b      	ldr	r3, [r3, #0]
 800ee16:	480d      	ldr	r0, [pc, #52]	; (800ee4c <Hardware::Reboot()+0x70>)
 800ee18:	601a      	str	r2, [r3, #0]
 800ee1a:	227d      	movs	r2, #125	; 0x7d
 800ee1c:	490c      	ldr	r1, [pc, #48]	; (800ee50 <Hardware::Reboot()+0x74>)
 800ee1e:	60da      	str	r2, [r3, #12]
 800ee20:	68dc      	ldr	r4, [r3, #12]
 800ee22:	b904      	cbnz	r4, 800ee26 <Hardware::Reboot()+0x4a>
 800ee24:	e7fe      	b.n	800ee24 <Hardware::Reboot()+0x48>
 800ee26:	6802      	ldr	r2, [r0, #0]
 800ee28:	695e      	ldr	r6, [r3, #20]
 800ee2a:	1b92      	subs	r2, r2, r6
 800ee2c:	4294      	cmp	r4, r2
 800ee2e:	d8f8      	bhi.n	800ee22 <Hardware::Reboot()+0x46>
 800ee30:	6802      	ldr	r2, [r0, #0]
 800ee32:	615a      	str	r2, [r3, #20]
 800ee34:	691a      	ldr	r2, [r3, #16]
 800ee36:	2a01      	cmp	r2, #1
 800ee38:	f082 0401 	eor.w	r4, r2, #1
 800ee3c:	611c      	str	r4, [r3, #16]
 800ee3e:	bf14      	ite	ne
 800ee40:	610d      	strne	r5, [r1, #16]
 800ee42:	614a      	streq	r2, [r1, #20]
 800ee44:	e7ec      	b.n	800ee20 <Hardware::Reboot()+0x44>
 800ee46:	bf00      	nop
 800ee48:	2000a078 	andcs	sl, r0, r8, ror r0
 800ee4c:	2000a094 	mulcs	r0, r4, r0
 800ee50:	40011000 	andmi	r1, r1, r0

0800ee54 <operator delete(void*)>:
 800ee54:	f000 b874 	b.w	800ef40 <free>

0800ee58 <operator delete[](void*)>:
 800ee58:	f000 b872 	b.w	800ef40 <free>

0800ee5c <operator new(unsigned int)>:
 800ee5c:	f000 b842 	b.w	800eee4 <malloc>

0800ee60 <operator new[](unsigned int)>:
 800ee60:	f000 b840 	b.w	800eee4 <malloc>

0800ee64 <inet_aton>:
 800ee64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ee66:	f04f 0c0a 	mov.w	ip, #10
 800ee6a:	2500      	movs	r5, #0
 800ee6c:	ae01      	add	r6, sp, #4
 800ee6e:	4603      	mov	r3, r0
 800ee70:	2200      	movs	r2, #0
 800ee72:	1d07      	adds	r7, r0, #4
 800ee74:	e007      	b.n	800ee86 <inet_aton+0x22>
 800ee76:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee7a:	2b09      	cmp	r3, #9
 800ee7c:	d820      	bhi.n	800eec0 <inet_aton+0x5c>
 800ee7e:	4603      	mov	r3, r0
 800ee80:	fb0c 4202 	mla	r2, ip, r2, r4
 800ee84:	3a30      	subs	r2, #48	; 0x30
 800ee86:	4618      	mov	r0, r3
 800ee88:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ee8c:	2c2e      	cmp	r4, #46	; 0x2e
 800ee8e:	d111      	bne.n	800eeb4 <inet_aton+0x50>
 800ee90:	3501      	adds	r5, #1
 800ee92:	2d03      	cmp	r5, #3
 800ee94:	f806 2b01 	strb.w	r2, [r6], #1
 800ee98:	d1e9      	bne.n	800ee6e <inet_aton+0xa>
 800ee9a:	2200      	movs	r2, #0
 800ee9c:	250a      	movs	r5, #10
 800ee9e:	1d1c      	adds	r4, r3, #4
 800eea0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800eea4:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800eea8:	d10d      	bne.n	800eec6 <inet_aton+0x62>
 800eeaa:	f88d 2007 	strb.w	r2, [sp, #7]
 800eeae:	b9b1      	cbnz	r1, 800eede <inet_aton+0x7a>
 800eeb0:	2001      	movs	r0, #1
 800eeb2:	e006      	b.n	800eec2 <inet_aton+0x5e>
 800eeb4:	2c00      	cmp	r4, #0
 800eeb6:	d0eb      	beq.n	800ee90 <inet_aton+0x2c>
 800eeb8:	2c0a      	cmp	r4, #10
 800eeba:	d0e9      	beq.n	800ee90 <inet_aton+0x2c>
 800eebc:	42b8      	cmp	r0, r7
 800eebe:	d1da      	bne.n	800ee76 <inet_aton+0x12>
 800eec0:	2000      	movs	r0, #0
 800eec2:	b003      	add	sp, #12
 800eec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eec6:	280a      	cmp	r0, #10
 800eec8:	d0ef      	beq.n	800eeaa <inet_aton+0x46>
 800eeca:	42a3      	cmp	r3, r4
 800eecc:	d0f8      	beq.n	800eec0 <inet_aton+0x5c>
 800eece:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800eed2:	2e09      	cmp	r6, #9
 800eed4:	d8f4      	bhi.n	800eec0 <inet_aton+0x5c>
 800eed6:	fb05 0202 	mla	r2, r5, r2, r0
 800eeda:	3a30      	subs	r2, #48	; 0x30
 800eedc:	e7e0      	b.n	800eea0 <inet_aton+0x3c>
 800eede:	9b01      	ldr	r3, [sp, #4]
 800eee0:	600b      	str	r3, [r1, #0]
 800eee2:	e7e5      	b.n	800eeb0 <inet_aton+0x4c>

0800eee4 <malloc>:
 800eee4:	b510      	push	{r4, lr}
 800eee6:	b1d8      	cbz	r0, 800ef20 <malloc+0x3c>
 800eee8:	4a11      	ldr	r2, [pc, #68]	; (800ef30 <malloc+0x4c>)
 800eeea:	6811      	ldr	r1, [r2, #0]
 800eeec:	b971      	cbnz	r1, 800ef0c <malloc+0x28>
 800eeee:	4911      	ldr	r1, [pc, #68]	; (800ef34 <malloc+0x50>)
 800eef0:	f100 021b 	add.w	r2, r0, #27
 800eef4:	680b      	ldr	r3, [r1, #0]
 800eef6:	4c10      	ldr	r4, [pc, #64]	; (800ef38 <malloc+0x54>)
 800eef8:	f022 020f 	bic.w	r2, r2, #15
 800eefc:	441a      	add	r2, r3
 800eefe:	42a2      	cmp	r2, r4
 800ef00:	d80f      	bhi.n	800ef22 <malloc+0x3e>
 800ef02:	600a      	str	r2, [r1, #0]
 800ef04:	4a0d      	ldr	r2, [pc, #52]	; (800ef3c <malloc+0x58>)
 800ef06:	e9c3 2000 	strd	r2, r0, [r3]
 800ef0a:	e005      	b.n	800ef18 <malloc+0x34>
 800ef0c:	4288      	cmp	r0, r1
 800ef0e:	d90a      	bls.n	800ef26 <malloc+0x42>
 800ef10:	3208      	adds	r2, #8
 800ef12:	e7ea      	b.n	800eeea <malloc+0x6>
 800ef14:	6899      	ldr	r1, [r3, #8]
 800ef16:	6051      	str	r1, [r2, #4]
 800ef18:	2200      	movs	r2, #0
 800ef1a:	f103 000c 	add.w	r0, r3, #12
 800ef1e:	609a      	str	r2, [r3, #8]
 800ef20:	bd10      	pop	{r4, pc}
 800ef22:	2000      	movs	r0, #0
 800ef24:	e7fc      	b.n	800ef20 <malloc+0x3c>
 800ef26:	6853      	ldr	r3, [r2, #4]
 800ef28:	2b00      	cmp	r3, #0
 800ef2a:	d1f3      	bne.n	800ef14 <malloc+0x30>
 800ef2c:	4608      	mov	r0, r1
 800ef2e:	e7de      	b.n	800eeee <malloc+0xa>
 800ef30:	20000020 	andcs	r0, r0, r0, lsr #32
 800ef34:	2000001c 	andcs	r0, r0, ip, lsl r0
 800ef38:	20016000 	andcs	r6, r1, r0
 800ef3c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800ef40 <free>:
 800ef40:	b138      	cbz	r0, 800ef52 <free+0x12>
 800ef42:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 800ef46:	4b09      	ldr	r3, [pc, #36]	; (800ef6c <free+0x2c>)
 800ef48:	429a      	cmp	r2, r3
 800ef4a:	d102      	bne.n	800ef52 <free+0x12>
 800ef4c:	4b08      	ldr	r3, [pc, #32]	; (800ef70 <free+0x30>)
 800ef4e:	681a      	ldr	r2, [r3, #0]
 800ef50:	b902      	cbnz	r2, 800ef54 <free+0x14>
 800ef52:	4770      	bx	lr
 800ef54:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ef58:	4291      	cmp	r1, r2
 800ef5a:	d104      	bne.n	800ef66 <free+0x26>
 800ef5c:	685a      	ldr	r2, [r3, #4]
 800ef5e:	380c      	subs	r0, #12
 800ef60:	6082      	str	r2, [r0, #8]
 800ef62:	6058      	str	r0, [r3, #4]
 800ef64:	4770      	bx	lr
 800ef66:	3308      	adds	r3, #8
 800ef68:	e7f1      	b.n	800ef4e <free+0xe>
 800ef6a:	bf00      	nop
 800ef6c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800ef70:	20000020 	andcs	r0, r0, r0, lsr #32

0800ef74 <memcpy>:
 800ef74:	b510      	push	{r4, lr}
 800ef76:	1e43      	subs	r3, r0, #1
 800ef78:	440a      	add	r2, r1
 800ef7a:	4291      	cmp	r1, r2
 800ef7c:	d100      	bne.n	800ef80 <memcpy+0xc>
 800ef7e:	bd10      	pop	{r4, pc}
 800ef80:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ef84:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ef88:	e7f7      	b.n	800ef7a <memcpy+0x6>

0800ef8a <memmove>:
 800ef8a:	4288      	cmp	r0, r1
 800ef8c:	b510      	push	{r4, lr}
 800ef8e:	eb01 0302 	add.w	r3, r1, r2
 800ef92:	d208      	bcs.n	800efa6 <memmove+0x1c>
 800ef94:	1e42      	subs	r2, r0, #1
 800ef96:	4299      	cmp	r1, r3
 800ef98:	d100      	bne.n	800ef9c <memmove+0x12>
 800ef9a:	bd10      	pop	{r4, pc}
 800ef9c:	f811 4b01 	ldrb.w	r4, [r1], #1
 800efa0:	f802 4f01 	strb.w	r4, [r2, #1]!
 800efa4:	e7f7      	b.n	800ef96 <memmove+0xc>
 800efa6:	4601      	mov	r1, r0
 800efa8:	4402      	add	r2, r0
 800efaa:	428a      	cmp	r2, r1
 800efac:	d0f5      	beq.n	800ef9a <memmove+0x10>
 800efae:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800efb2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800efb6:	e7f8      	b.n	800efaa <memmove+0x20>

0800efb8 <memset>:
 800efb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efba:	b1c2      	cbz	r2, 800efee <memset+0x36>
 800efbc:	4603      	mov	r3, r0
 800efbe:	b2c9      	uxtb	r1, r1
 800efc0:	075c      	lsls	r4, r3, #29
 800efc2:	d110      	bne.n	800efe6 <memset+0x2e>
 800efc4:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800efc8:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800efcc:	463d      	mov	r5, r7
 800efce:	461e      	mov	r6, r3
 800efd0:	f022 0407 	bic.w	r4, r2, #7
 800efd4:	441c      	add	r4, r3
 800efd6:	42a6      	cmp	r6, r4
 800efd8:	d10a      	bne.n	800eff0 <memset+0x38>
 800efda:	4413      	add	r3, r2
 800efdc:	429c      	cmp	r4, r3
 800efde:	d006      	beq.n	800efee <memset+0x36>
 800efe0:	f804 1b01 	strb.w	r1, [r4], #1
 800efe4:	e7fa      	b.n	800efdc <memset+0x24>
 800efe6:	3a01      	subs	r2, #1
 800efe8:	f803 1b01 	strb.w	r1, [r3], #1
 800efec:	d1e8      	bne.n	800efc0 <memset+0x8>
 800efee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eff0:	f846 7b08 	str.w	r7, [r6], #8
 800eff4:	f846 5c04 	str.w	r5, [r6, #-4]
 800eff8:	e7ed      	b.n	800efd6 <memset+0x1e>

0800effa <puts>:
 800effa:	b508      	push	{r3, lr}
 800effc:	f7ff fdb4 	bl	800eb68 <console_puts>
 800f000:	200a      	movs	r0, #10
 800f002:	f7ff fdaf 	bl	800eb64 <console_putc>
 800f006:	2001      	movs	r0, #1
 800f008:	bd08      	pop	{r3, pc}
	...

0800f00c <strtok>:
 800f00c:	b530      	push	{r4, r5, lr}
 800f00e:	b910      	cbnz	r0, 800f016 <strtok+0xa>
 800f010:	4b12      	ldr	r3, [pc, #72]	; (800f05c <strtok+0x50>)
 800f012:	6818      	ldr	r0, [r3, #0]
 800f014:	b158      	cbz	r0, 800f02e <strtok+0x22>
 800f016:	4603      	mov	r3, r0
 800f018:	460d      	mov	r5, r1
 800f01a:	4618      	mov	r0, r3
 800f01c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f020:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f024:	b924      	cbnz	r4, 800f030 <strtok+0x24>
 800f026:	b94a      	cbnz	r2, 800f03c <strtok+0x30>
 800f028:	4610      	mov	r0, r2
 800f02a:	4b0c      	ldr	r3, [pc, #48]	; (800f05c <strtok+0x50>)
 800f02c:	601a      	str	r2, [r3, #0]
 800f02e:	bd30      	pop	{r4, r5, pc}
 800f030:	42a2      	cmp	r2, r4
 800f032:	d1f5      	bne.n	800f020 <strtok+0x14>
 800f034:	e7f0      	b.n	800f018 <strtok+0xc>
 800f036:	4613      	mov	r3, r2
 800f038:	e00c      	b.n	800f054 <strtok+0x48>
 800f03a:	b914      	cbnz	r4, 800f042 <strtok+0x36>
 800f03c:	460d      	mov	r5, r1
 800f03e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f042:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f046:	42a2      	cmp	r2, r4
 800f048:	d1f7      	bne.n	800f03a <strtok+0x2e>
 800f04a:	2a00      	cmp	r2, #0
 800f04c:	d0f3      	beq.n	800f036 <strtok+0x2a>
 800f04e:	2200      	movs	r2, #0
 800f050:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f054:	4a01      	ldr	r2, [pc, #4]	; (800f05c <strtok+0x50>)
 800f056:	6013      	str	r3, [r2, #0]
 800f058:	e7e9      	b.n	800f02e <strtok+0x22>
 800f05a:	bf00      	nop
 800f05c:	2000a080 	andcs	sl, r0, r0, lsl #1

0800f060 <isleapyear>:
 800f060:	2264      	movs	r2, #100	; 0x64
 800f062:	fb90 f3f2 	sdiv	r3, r0, r2
 800f066:	fb02 0313 	mls	r3, r2, r3, r0
 800f06a:	b94b      	cbnz	r3, 800f080 <isleapyear+0x20>
 800f06c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800f070:	fb90 f2f3 	sdiv	r2, r0, r3
 800f074:	fb03 0012 	mls	r0, r3, r2, r0
 800f078:	fab0 f080 	clz	r0, r0
 800f07c:	0940      	lsrs	r0, r0, #5
 800f07e:	4770      	bx	lr
 800f080:	f010 0f03 	tst.w	r0, #3
 800f084:	bf0c      	ite	eq
 800f086:	2001      	moveq	r0, #1
 800f088:	2000      	movne	r0, #0
 800f08a:	4770      	bx	lr

0800f08c <getdaysofmonth>:
 800f08c:	b510      	push	{r4, lr}
 800f08e:	4604      	mov	r4, r0
 800f090:	2c01      	cmp	r4, #1
 800f092:	4608      	mov	r0, r1
 800f094:	d102      	bne.n	800f09c <getdaysofmonth+0x10>
 800f096:	f7ff ffe3 	bl	800f060 <isleapyear>
 800f09a:	b918      	cbnz	r0, 800f0a4 <getdaysofmonth+0x18>
 800f09c:	4b02      	ldr	r3, [pc, #8]	; (800f0a8 <getdaysofmonth+0x1c>)
 800f09e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800f0a2:	bd10      	pop	{r4, pc}
 800f0a4:	201d      	movs	r0, #29
 800f0a6:	e7fc      	b.n	800f0a2 <getdaysofmonth+0x16>
 800f0a8:	080129cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, sp}

0800f0ac <mktime>:
 800f0ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0b0:	4604      	mov	r4, r0
 800f0b2:	2800      	cmp	r0, #0
 800f0b4:	d043      	beq.n	800f13e <mktime+0x92>
 800f0b6:	6941      	ldr	r1, [r0, #20]
 800f0b8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800f0bc:	2b45      	cmp	r3, #69	; 0x45
 800f0be:	d83e      	bhi.n	800f13e <mktime+0x92>
 800f0c0:	2600      	movs	r6, #0
 800f0c2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800f0c6:	f240 186d 	movw	r8, #365	; 0x16d
 800f0ca:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800f0ce:	42af      	cmp	r7, r5
 800f0d0:	da24      	bge.n	800f11c <mktime+0x70>
 800f0d2:	6927      	ldr	r7, [r4, #16]
 800f0d4:	2f0b      	cmp	r7, #11
 800f0d6:	d832      	bhi.n	800f13e <mktime+0x92>
 800f0d8:	2500      	movs	r5, #0
 800f0da:	42af      	cmp	r7, r5
 800f0dc:	d129      	bne.n	800f132 <mktime+0x86>
 800f0de:	68e5      	ldr	r5, [r4, #12]
 800f0e0:	2d00      	cmp	r5, #0
 800f0e2:	dd2c      	ble.n	800f13e <mktime+0x92>
 800f0e4:	4638      	mov	r0, r7
 800f0e6:	f7ff ffd1 	bl	800f08c <getdaysofmonth>
 800f0ea:	4285      	cmp	r5, r0
 800f0ec:	dc27      	bgt.n	800f13e <mktime+0x92>
 800f0ee:	2318      	movs	r3, #24
 800f0f0:	3d01      	subs	r5, #1
 800f0f2:	4435      	add	r5, r6
 800f0f4:	435d      	muls	r5, r3
 800f0f6:	68a3      	ldr	r3, [r4, #8]
 800f0f8:	2b17      	cmp	r3, #23
 800f0fa:	d820      	bhi.n	800f13e <mktime+0x92>
 800f0fc:	213c      	movs	r1, #60	; 0x3c
 800f0fe:	442b      	add	r3, r5
 800f100:	fb01 f203 	mul.w	r2, r1, r3
 800f104:	6863      	ldr	r3, [r4, #4]
 800f106:	2b3b      	cmp	r3, #59	; 0x3b
 800f108:	d819      	bhi.n	800f13e <mktime+0x92>
 800f10a:	6820      	ldr	r0, [r4, #0]
 800f10c:	4413      	add	r3, r2
 800f10e:	283b      	cmp	r0, #59	; 0x3b
 800f110:	fb01 f303 	mul.w	r3, r1, r3
 800f114:	d813      	bhi.n	800f13e <mktime+0x92>
 800f116:	4418      	add	r0, r3
 800f118:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f11c:	4628      	mov	r0, r5
 800f11e:	f7ff ff9f 	bl	800f060 <isleapyear>
 800f122:	2800      	cmp	r0, #0
 800f124:	bf14      	ite	ne
 800f126:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800f12a:	4643      	moveq	r3, r8
 800f12c:	3501      	adds	r5, #1
 800f12e:	441e      	add	r6, r3
 800f130:	e7cd      	b.n	800f0ce <mktime+0x22>
 800f132:	4628      	mov	r0, r5
 800f134:	f7ff ffaa 	bl	800f08c <getdaysofmonth>
 800f138:	3501      	adds	r5, #1
 800f13a:	4406      	add	r6, r0
 800f13c:	e7cd      	b.n	800f0da <mktime+0x2e>
 800f13e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f142:	e7e9      	b.n	800f118 <mktime+0x6c>

0800f144 <gettimeofday>:
 800f144:	b538      	push	{r3, r4, r5, lr}
 800f146:	4b10      	ldr	r3, [pc, #64]	; (800f188 <gettimeofday+0x44>)
 800f148:	4a10      	ldr	r2, [pc, #64]	; (800f18c <gettimeofday+0x48>)
 800f14a:	681b      	ldr	r3, [r3, #0]
 800f14c:	6814      	ldr	r4, [r2, #0]
 800f14e:	6013      	str	r3, [r2, #0]
 800f150:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f154:	429c      	cmp	r4, r3
 800f156:	bf2c      	ite	cs
 800f158:	1ae4      	subcs	r4, r4, r3
 800f15a:	1b1c      	subcc	r4, r3, r4
 800f15c:	4354      	muls	r4, r2
 800f15e:	4b0c      	ldr	r3, [pc, #48]	; (800f190 <gettimeofday+0x4c>)
 800f160:	4605      	mov	r5, r0
 800f162:	e9d3 2100 	ldrd	r2, r1, [r3]
 800f166:	18a4      	adds	r4, r4, r2
 800f168:	f141 0100 	adc.w	r1, r1, #0
 800f16c:	e9c3 4100 	strd	r4, r1, [r3]
 800f170:	4620      	mov	r0, r4
 800f172:	2300      	movs	r3, #0
 800f174:	4a07      	ldr	r2, [pc, #28]	; (800f194 <gettimeofday+0x50>)
 800f176:	f7f8 fcb5 	bl	8007ae4 <__aeabi_uldivmod>
 800f17a:	4b06      	ldr	r3, [pc, #24]	; (800f194 <gettimeofday+0x50>)
 800f17c:	6028      	str	r0, [r5, #0]
 800f17e:	fb03 4410 	mls	r4, r3, r0, r4
 800f182:	2000      	movs	r0, #0
 800f184:	606c      	str	r4, [r5, #4]
 800f186:	bd38      	pop	{r3, r4, r5, pc}
 800f188:	2000a094 	mulcs	r0, r4, r0
 800f18c:	2000a090 	mulcs	r0, r0, r0
 800f190:	2000a088 	andcs	sl, r0, r8, lsl #1
 800f194:	000f4240 	andeq	r4, pc, r0, asr #4

0800f198 <settimeofday>:
 800f198:	4b07      	ldr	r3, [pc, #28]	; (800f1b8 <settimeofday+0x20>)
 800f19a:	b510      	push	{r4, lr}
 800f19c:	681a      	ldr	r2, [r3, #0]
 800f19e:	4b07      	ldr	r3, [pc, #28]	; (800f1bc <settimeofday+0x24>)
 800f1a0:	6804      	ldr	r4, [r0, #0]
 800f1a2:	601a      	str	r2, [r3, #0]
 800f1a4:	6843      	ldr	r3, [r0, #4]
 800f1a6:	4806      	ldr	r0, [pc, #24]	; (800f1c0 <settimeofday+0x28>)
 800f1a8:	17da      	asrs	r2, r3, #31
 800f1aa:	fbc4 3200 	smlal	r3, r2, r4, r0
 800f1ae:	4905      	ldr	r1, [pc, #20]	; (800f1c4 <settimeofday+0x2c>)
 800f1b0:	2000      	movs	r0, #0
 800f1b2:	e9c1 3200 	strd	r3, r2, [r1]
 800f1b6:	bd10      	pop	{r4, pc}
 800f1b8:	2000a094 	mulcs	r0, r4, r0
 800f1bc:	2000a090 	mulcs	r0, r0, r0
 800f1c0:	000f4240 	andeq	r4, pc, r0, asr #4
 800f1c4:	2000a088 	andcs	sl, r0, r8, lsl #1

0800f1c8 <time>:
 800f1c8:	b513      	push	{r0, r1, r4, lr}
 800f1ca:	4604      	mov	r4, r0
 800f1cc:	2100      	movs	r1, #0
 800f1ce:	4668      	mov	r0, sp
 800f1d0:	f7ff ffb8 	bl	800f144 <gettimeofday>
 800f1d4:	9800      	ldr	r0, [sp, #0]
 800f1d6:	b104      	cbz	r4, 800f1da <time+0x12>
 800f1d8:	6020      	str	r0, [r4, #0]
 800f1da:	b002      	add	sp, #8
 800f1dc:	bd10      	pop	{r4, pc}
	...

0800f1e0 <uart0_init>:
 800f1e0:	2301      	movs	r3, #1
 800f1e2:	b507      	push	{r0, r1, r2, lr}
 800f1e4:	2208      	movs	r2, #8
 800f1e6:	9300      	str	r3, [sp, #0]
 800f1e8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800f1ec:	2300      	movs	r3, #0
 800f1ee:	4803      	ldr	r0, [pc, #12]	; (800f1fc <uart0_init+0x1c>)
 800f1f0:	f001 fb2c 	bl	801084c <gd32_uart_begin>
 800f1f4:	b003      	add	sp, #12
 800f1f6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f1fa:	bf00      	nop
 800f1fc:	40013800 	andmi	r3, r1, r0, lsl #16

0800f200 <uart0_putc>:
 800f200:	280a      	cmp	r0, #10
 800f202:	b538      	push	{r3, r4, r5, lr}
 800f204:	4604      	mov	r4, r0
 800f206:	d10a      	bne.n	800f21e <uart0_putc+0x1e>
 800f208:	4d0b      	ldr	r5, [pc, #44]	; (800f238 <uart0_putc+0x38>)
 800f20a:	2107      	movs	r1, #7
 800f20c:	4628      	mov	r0, r5
 800f20e:	f001 f92f 	bl	8010470 <usart_flag_get>
 800f212:	2800      	cmp	r0, #0
 800f214:	d0f9      	beq.n	800f20a <uart0_putc+0xa>
 800f216:	220d      	movs	r2, #13
 800f218:	4b08      	ldr	r3, [pc, #32]	; (800f23c <uart0_putc+0x3c>)
 800f21a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800f21e:	4d06      	ldr	r5, [pc, #24]	; (800f238 <uart0_putc+0x38>)
 800f220:	2107      	movs	r1, #7
 800f222:	4628      	mov	r0, r5
 800f224:	f001 f924 	bl	8010470 <usart_flag_get>
 800f228:	2800      	cmp	r0, #0
 800f22a:	d0f9      	beq.n	800f220 <uart0_putc+0x20>
 800f22c:	4b03      	ldr	r3, [pc, #12]	; (800f23c <uart0_putc+0x3c>)
 800f22e:	b2e4      	uxtb	r4, r4
 800f230:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800f234:	bd38      	pop	{r3, r4, r5, pc}
 800f236:	bf00      	nop
 800f238:	40013800 	andmi	r3, r1, r0, lsl #16
 800f23c:	40013000 	andmi	r3, r1, r0

0800f240 <uart0_puts>:
 800f240:	b510      	push	{r4, lr}
 800f242:	1e44      	subs	r4, r0, #1
 800f244:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800f248:	b903      	cbnz	r3, 800f24c <uart0_puts+0xc>
 800f24a:	bd10      	pop	{r4, pc}
 800f24c:	2b0a      	cmp	r3, #10
 800f24e:	d102      	bne.n	800f256 <uart0_puts+0x16>
 800f250:	200d      	movs	r0, #13
 800f252:	f7ff ffd5 	bl	800f200 <uart0_putc>
 800f256:	7820      	ldrb	r0, [r4, #0]
 800f258:	f7ff ffd2 	bl	800f200 <uart0_putc>
 800f25c:	e7f2      	b.n	800f244 <uart0_puts+0x4>
	...

0800f260 <systick_config>:
 800f260:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f264:	4b0b      	ldr	r3, [pc, #44]	; (800f294 <systick_config+0x34>)
 800f266:	681b      	ldr	r3, [r3, #0]
 800f268:	fbb3 f3f2 	udiv	r3, r3, r2
 800f26c:	3b01      	subs	r3, #1
 800f26e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f272:	d20d      	bcs.n	800f290 <systick_config+0x30>
 800f274:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f278:	21f0      	movs	r1, #240	; 0xf0
 800f27a:	6153      	str	r3, [r2, #20]
 800f27c:	4b06      	ldr	r3, [pc, #24]	; (800f298 <systick_config+0x38>)
 800f27e:	2007      	movs	r0, #7
 800f280:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f284:	2100      	movs	r1, #0
 800f286:	6191      	str	r1, [r2, #24]
 800f288:	6110      	str	r0, [r2, #16]
 800f28a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f28e:	4770      	bx	lr
 800f290:	e7fe      	b.n	800f290 <systick_config+0x30>
 800f292:	bf00      	nop
 800f294:	20000088 	andcs	r0, r0, r8, lsl #1
 800f298:	e000ed00 	and	lr, r0, r0, lsl #26

0800f29c <SysTick_Handler>:
 800f29c:	4a02      	ldr	r2, [pc, #8]	; (800f2a8 <SysTick_Handler+0xc>)
 800f29e:	6813      	ldr	r3, [r2, #0]
 800f2a0:	3301      	adds	r3, #1
 800f2a2:	6013      	str	r3, [r2, #0]
 800f2a4:	4770      	bx	lr
 800f2a6:	bf00      	nop
 800f2a8:	2000a094 	mulcs	r0, r4, r0

0800f2ac <SystemInit>:
 800f2ac:	4b37      	ldr	r3, [pc, #220]	; (800f38c <SystemInit+0xe0>)
 800f2ae:	4938      	ldr	r1, [pc, #224]	; (800f390 <SystemInit+0xe4>)
 800f2b0:	681a      	ldr	r2, [r3, #0]
 800f2b2:	f042 0201 	orr.w	r2, r2, #1
 800f2b6:	601a      	str	r2, [r3, #0]
 800f2b8:	685a      	ldr	r2, [r3, #4]
 800f2ba:	f022 0203 	bic.w	r2, r2, #3
 800f2be:	605a      	str	r2, [r3, #4]
 800f2c0:	681a      	ldr	r2, [r3, #0]
 800f2c2:	400a      	ands	r2, r1
 800f2c4:	601a      	str	r2, [r3, #0]
 800f2c6:	6858      	ldr	r0, [r3, #4]
 800f2c8:	4a32      	ldr	r2, [pc, #200]	; (800f394 <SystemInit+0xe8>)
 800f2ca:	4002      	ands	r2, r0
 800f2cc:	605a      	str	r2, [r3, #4]
 800f2ce:	681a      	ldr	r2, [r3, #0]
 800f2d0:	400a      	ands	r2, r1
 800f2d2:	601a      	str	r2, [r3, #0]
 800f2d4:	681a      	ldr	r2, [r3, #0]
 800f2d6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800f2da:	601a      	str	r2, [r3, #0]
 800f2dc:	685a      	ldr	r2, [r3, #4]
 800f2de:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800f2e2:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800f2e6:	605a      	str	r2, [r3, #4]
 800f2e8:	2200      	movs	r2, #0
 800f2ea:	62da      	str	r2, [r3, #44]	; 0x2c
 800f2ec:	681a      	ldr	r2, [r3, #0]
 800f2ee:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800f2f2:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800f2f6:	601a      	str	r2, [r3, #0]
 800f2f8:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800f2fc:	609a      	str	r2, [r3, #8]
 800f2fe:	681a      	ldr	r2, [r3, #0]
 800f300:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f304:	601a      	str	r2, [r3, #0]
 800f306:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f30a:	6819      	ldr	r1, [r3, #0]
 800f30c:	0389      	lsls	r1, r1, #14
 800f30e:	d401      	bmi.n	800f314 <SystemInit+0x68>
 800f310:	3a01      	subs	r2, #1
 800f312:	d1fa      	bne.n	800f30a <SystemInit+0x5e>
 800f314:	681a      	ldr	r2, [r3, #0]
 800f316:	0392      	lsls	r2, r2, #14
 800f318:	d400      	bmi.n	800f31c <SystemInit+0x70>
 800f31a:	e7fe      	b.n	800f31a <SystemInit+0x6e>
 800f31c:	685a      	ldr	r2, [r3, #4]
 800f31e:	605a      	str	r2, [r3, #4]
 800f320:	685a      	ldr	r2, [r3, #4]
 800f322:	605a      	str	r2, [r3, #4]
 800f324:	685a      	ldr	r2, [r3, #4]
 800f326:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f32a:	605a      	str	r2, [r3, #4]
 800f32c:	685a      	ldr	r2, [r3, #4]
 800f32e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800f332:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800f336:	605a      	str	r2, [r3, #4]
 800f338:	685a      	ldr	r2, [r3, #4]
 800f33a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800f33e:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800f342:	605a      	str	r2, [r3, #4]
 800f344:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f346:	4a14      	ldr	r2, [pc, #80]	; (800f398 <SystemInit+0xec>)
 800f348:	400a      	ands	r2, r1
 800f34a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f34c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f34e:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800f352:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800f356:	62da      	str	r2, [r3, #44]	; 0x2c
 800f358:	681a      	ldr	r2, [r3, #0]
 800f35a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800f35e:	601a      	str	r2, [r3, #0]
 800f360:	681a      	ldr	r2, [r3, #0]
 800f362:	0110      	lsls	r0, r2, #4
 800f364:	d5fc      	bpl.n	800f360 <SystemInit+0xb4>
 800f366:	681a      	ldr	r2, [r3, #0]
 800f368:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800f36c:	601a      	str	r2, [r3, #0]
 800f36e:	681a      	ldr	r2, [r3, #0]
 800f370:	0191      	lsls	r1, r2, #6
 800f372:	d5fc      	bpl.n	800f36e <SystemInit+0xc2>
 800f374:	685a      	ldr	r2, [r3, #4]
 800f376:	f022 0203 	bic.w	r2, r2, #3
 800f37a:	605a      	str	r2, [r3, #4]
 800f37c:	685a      	ldr	r2, [r3, #4]
 800f37e:	f042 0202 	orr.w	r2, r2, #2
 800f382:	605a      	str	r2, [r3, #4]
 800f384:	685a      	ldr	r2, [r3, #4]
 800f386:	0712      	lsls	r2, r2, #28
 800f388:	d5fc      	bpl.n	800f384 <SystemInit+0xd8>
 800f38a:	4770      	bx	lr
 800f38c:	40021000 	andmi	r1, r2, r0
 800f390:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800f394:	e0ff000c 	rscs	r0, pc, ip
 800f398:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800f39c <bkp_data_write>:
 800f39c:	f1a0 030b 	sub.w	r3, r0, #11
 800f3a0:	2b1f      	cmp	r3, #31
 800f3a2:	d804      	bhi.n	800f3ae <bkp_data_write+0x12>
 800f3a4:	4b07      	ldr	r3, [pc, #28]	; (800f3c4 <bkp_data_write+0x28>)
 800f3a6:	4403      	add	r3, r0
 800f3a8:	009b      	lsls	r3, r3, #2
 800f3aa:	8019      	strh	r1, [r3, #0]
 800f3ac:	4770      	bx	lr
 800f3ae:	1e43      	subs	r3, r0, #1
 800f3b0:	2b09      	cmp	r3, #9
 800f3b2:	bf9f      	itttt	ls
 800f3b4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800f3b8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800f3bc:	0080      	lslls	r0, r0, #2
 800f3be:	8001      	strhls	r1, [r0, #0]
 800f3c0:	4770      	bx	lr
 800f3c2:	bf00      	nop
 800f3c4:	10001b05 	andne	r1, r0, r5, lsl #22

0800f3c8 <bkp_data_read>:
 800f3c8:	f1a0 030b 	sub.w	r3, r0, #11
 800f3cc:	2b1f      	cmp	r3, #31
 800f3ce:	d805      	bhi.n	800f3dc <bkp_data_read+0x14>
 800f3d0:	4b08      	ldr	r3, [pc, #32]	; (800f3f4 <bkp_data_read+0x2c>)
 800f3d2:	4403      	add	r3, r0
 800f3d4:	009b      	lsls	r3, r3, #2
 800f3d6:	8818      	ldrh	r0, [r3, #0]
 800f3d8:	b280      	uxth	r0, r0
 800f3da:	4770      	bx	lr
 800f3dc:	1e43      	subs	r3, r0, #1
 800f3de:	2b09      	cmp	r3, #9
 800f3e0:	d806      	bhi.n	800f3f0 <bkp_data_read+0x28>
 800f3e2:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800f3e6:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 800f3ea:	0080      	lsls	r0, r0, #2
 800f3ec:	8800      	ldrh	r0, [r0, #0]
 800f3ee:	e7f3      	b.n	800f3d8 <bkp_data_read+0x10>
 800f3f0:	2000      	movs	r0, #0
 800f3f2:	4770      	bx	lr
 800f3f4:	10001b05 	andne	r1, r0, r5, lsl #22

0800f3f8 <dma_deinit>:
 800f3f8:	4b0c      	ldr	r3, [pc, #48]	; (800f42c <dma_deinit+0x34>)
 800f3fa:	4298      	cmp	r0, r3
 800f3fc:	d102      	bne.n	800f404 <dma_deinit+0xc>
 800f3fe:	2904      	cmp	r1, #4
 800f400:	d900      	bls.n	800f404 <dma_deinit+0xc>
 800f402:	e7fe      	b.n	800f402 <dma_deinit+0xa>
 800f404:	2314      	movs	r3, #20
 800f406:	fb03 0301 	mla	r3, r3, r1, r0
 800f40a:	689a      	ldr	r2, [r3, #8]
 800f40c:	0089      	lsls	r1, r1, #2
 800f40e:	f022 0201 	bic.w	r2, r2, #1
 800f412:	609a      	str	r2, [r3, #8]
 800f414:	2200      	movs	r2, #0
 800f416:	609a      	str	r2, [r3, #8]
 800f418:	60da      	str	r2, [r3, #12]
 800f41a:	611a      	str	r2, [r3, #16]
 800f41c:	615a      	str	r2, [r3, #20]
 800f41e:	230f      	movs	r3, #15
 800f420:	6842      	ldr	r2, [r0, #4]
 800f422:	408b      	lsls	r3, r1
 800f424:	4313      	orrs	r3, r2
 800f426:	6043      	str	r3, [r0, #4]
 800f428:	4770      	bx	lr
 800f42a:	bf00      	nop
 800f42c:	40020400 	andmi	r0, r2, r0, lsl #8

0800f430 <dma_init>:
 800f430:	4b1b      	ldr	r3, [pc, #108]	; (800f4a0 <dma_init+0x70>)
 800f432:	b510      	push	{r4, lr}
 800f434:	4298      	cmp	r0, r3
 800f436:	d102      	bne.n	800f43e <dma_init+0xe>
 800f438:	2904      	cmp	r1, #4
 800f43a:	d900      	bls.n	800f43e <dma_init+0xe>
 800f43c:	e7fe      	b.n	800f43c <dma_init+0xc>
 800f43e:	2314      	movs	r3, #20
 800f440:	fb03 0101 	mla	r1, r3, r1, r0
 800f444:	6813      	ldr	r3, [r2, #0]
 800f446:	610b      	str	r3, [r1, #16]
 800f448:	6893      	ldr	r3, [r2, #8]
 800f44a:	614b      	str	r3, [r1, #20]
 800f44c:	8a13      	ldrh	r3, [r2, #16]
 800f44e:	60cb      	str	r3, [r1, #12]
 800f450:	68d4      	ldr	r4, [r2, #12]
 800f452:	6853      	ldr	r3, [r2, #4]
 800f454:	6888      	ldr	r0, [r1, #8]
 800f456:	4323      	orrs	r3, r4
 800f458:	6954      	ldr	r4, [r2, #20]
 800f45a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800f45e:	4323      	orrs	r3, r4
 800f460:	4303      	orrs	r3, r0
 800f462:	608b      	str	r3, [r1, #8]
 800f464:	7e13      	ldrb	r3, [r2, #24]
 800f466:	2b01      	cmp	r3, #1
 800f468:	688b      	ldr	r3, [r1, #8]
 800f46a:	bf0c      	ite	eq
 800f46c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800f470:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800f474:	608b      	str	r3, [r1, #8]
 800f476:	7e53      	ldrb	r3, [r2, #25]
 800f478:	2b01      	cmp	r3, #1
 800f47a:	688b      	ldr	r3, [r1, #8]
 800f47c:	bf0c      	ite	eq
 800f47e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800f482:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800f486:	608b      	str	r3, [r1, #8]
 800f488:	7e93      	ldrb	r3, [r2, #26]
 800f48a:	b923      	cbnz	r3, 800f496 <dma_init+0x66>
 800f48c:	688b      	ldr	r3, [r1, #8]
 800f48e:	f023 0310 	bic.w	r3, r3, #16
 800f492:	608b      	str	r3, [r1, #8]
 800f494:	bd10      	pop	{r4, pc}
 800f496:	688b      	ldr	r3, [r1, #8]
 800f498:	f043 0310 	orr.w	r3, r3, #16
 800f49c:	e7f9      	b.n	800f492 <dma_init+0x62>
 800f49e:	bf00      	nop
 800f4a0:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4a4 <dma_circulation_disable>:
 800f4a4:	4b06      	ldr	r3, [pc, #24]	; (800f4c0 <dma_circulation_disable+0x1c>)
 800f4a6:	4298      	cmp	r0, r3
 800f4a8:	d102      	bne.n	800f4b0 <dma_circulation_disable+0xc>
 800f4aa:	2904      	cmp	r1, #4
 800f4ac:	d900      	bls.n	800f4b0 <dma_circulation_disable+0xc>
 800f4ae:	e7fe      	b.n	800f4ae <dma_circulation_disable+0xa>
 800f4b0:	2314      	movs	r3, #20
 800f4b2:	4359      	muls	r1, r3
 800f4b4:	3008      	adds	r0, #8
 800f4b6:	580b      	ldr	r3, [r1, r0]
 800f4b8:	f023 0320 	bic.w	r3, r3, #32
 800f4bc:	500b      	str	r3, [r1, r0]
 800f4be:	4770      	bx	lr
 800f4c0:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4c4 <dma_memory_to_memory_disable>:
 800f4c4:	4b06      	ldr	r3, [pc, #24]	; (800f4e0 <dma_memory_to_memory_disable+0x1c>)
 800f4c6:	4298      	cmp	r0, r3
 800f4c8:	d102      	bne.n	800f4d0 <dma_memory_to_memory_disable+0xc>
 800f4ca:	2904      	cmp	r1, #4
 800f4cc:	d900      	bls.n	800f4d0 <dma_memory_to_memory_disable+0xc>
 800f4ce:	e7fe      	b.n	800f4ce <dma_memory_to_memory_disable+0xa>
 800f4d0:	2314      	movs	r3, #20
 800f4d2:	4359      	muls	r1, r3
 800f4d4:	3008      	adds	r0, #8
 800f4d6:	580b      	ldr	r3, [r1, r0]
 800f4d8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800f4dc:	500b      	str	r3, [r1, r0]
 800f4de:	4770      	bx	lr
 800f4e0:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4e4 <enet_delay>:
 800f4e4:	2300      	movs	r3, #0
 800f4e6:	b082      	sub	sp, #8
 800f4e8:	9301      	str	r3, [sp, #4]
 800f4ea:	9001      	str	r0, [sp, #4]
 800f4ec:	9b01      	ldr	r3, [sp, #4]
 800f4ee:	b90b      	cbnz	r3, 800f4f4 <enet_delay+0x10>
 800f4f0:	b002      	add	sp, #8
 800f4f2:	4770      	bx	lr
 800f4f4:	9b01      	ldr	r3, [sp, #4]
 800f4f6:	3b01      	subs	r3, #1
 800f4f8:	9301      	str	r3, [sp, #4]
 800f4fa:	e7f7      	b.n	800f4ec <enet_delay+0x8>

0800f4fc <enet_software_reset>:
 800f4fc:	4b07      	ldr	r3, [pc, #28]	; (800f51c <enet_software_reset+0x20>)
 800f4fe:	681a      	ldr	r2, [r3, #0]
 800f500:	f042 0201 	orr.w	r2, r2, #1
 800f504:	601a      	str	r2, [r3, #0]
 800f506:	4a06      	ldr	r2, [pc, #24]	; (800f520 <enet_software_reset+0x24>)
 800f508:	6819      	ldr	r1, [r3, #0]
 800f50a:	07c9      	lsls	r1, r1, #31
 800f50c:	d501      	bpl.n	800f512 <enet_software_reset+0x16>
 800f50e:	3a01      	subs	r2, #1
 800f510:	d1fa      	bne.n	800f508 <enet_software_reset+0xc>
 800f512:	6818      	ldr	r0, [r3, #0]
 800f514:	43c0      	mvns	r0, r0
 800f516:	f000 0001 	and.w	r0, r0, #1
 800f51a:	4770      	bx	lr
 800f51c:	40029000 	andmi	r9, r2, r0
 800f520:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0800f524 <enet_descriptors_chain_init>:
 800f524:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 800f528:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f52a:	4a19      	ldr	r2, [pc, #100]	; (800f590 <enet_descriptors_chain_init+0x6c>)
 800f52c:	d125      	bne.n	800f57a <enet_descriptors_chain_init+0x56>
 800f52e:	2500      	movs	r5, #0
 800f530:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 800f534:	2002      	movs	r0, #2
 800f536:	4b17      	ldr	r3, [pc, #92]	; (800f594 <enet_descriptors_chain_init+0x70>)
 800f538:	4c17      	ldr	r4, [pc, #92]	; (800f598 <enet_descriptors_chain_init+0x74>)
 800f53a:	6113      	str	r3, [r2, #16]
 800f53c:	4a17      	ldr	r2, [pc, #92]	; (800f59c <enet_descriptors_chain_init+0x78>)
 800f53e:	6013      	str	r3, [r2, #0]
 800f540:	2200      	movs	r2, #0
 800f542:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 800f546:	4916      	ldr	r1, [pc, #88]	; (800f5a0 <enet_descriptors_chain_init+0x7c>)
 800f548:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 800f54c:	600a      	str	r2, [r1, #0]
 800f54e:	4915      	ldr	r1, [pc, #84]	; (800f5a4 <enet_descriptors_chain_init+0x80>)
 800f550:	600a      	str	r2, [r1, #0]
 800f552:	f103 0110 	add.w	r1, r3, #16
 800f556:	fb0e 4702 	mla	r7, lr, r2, r4
 800f55a:	f841 7c08 	str.w	r7, [r1, #-8]
 800f55e:	4594      	cmp	ip, r2
 800f560:	bf94      	ite	ls
 800f562:	461f      	movls	r7, r3
 800f564:	460f      	movhi	r7, r1
 800f566:	3201      	adds	r2, #1
 800f568:	4290      	cmp	r0, r2
 800f56a:	e941 6504 	strd	r6, r5, [r1, #-16]
 800f56e:	f841 7c04 	str.w	r7, [r1, #-4]
 800f572:	f101 0110 	add.w	r1, r1, #16
 800f576:	d1ee      	bne.n	800f556 <enet_descriptors_chain_init+0x32>
 800f578:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f57a:	4b0b      	ldr	r3, [pc, #44]	; (800f5a8 <enet_descriptors_chain_init+0x84>)
 800f57c:	f244 55f4 	movw	r5, #17908	; 0x45f4
 800f580:	60d3      	str	r3, [r2, #12]
 800f582:	4a0a      	ldr	r2, [pc, #40]	; (800f5ac <enet_descriptors_chain_init+0x88>)
 800f584:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800f588:	2008      	movs	r0, #8
 800f58a:	4c09      	ldr	r4, [pc, #36]	; (800f5b0 <enet_descriptors_chain_init+0x8c>)
 800f58c:	6013      	str	r3, [r2, #0]
 800f58e:	e7d7      	b.n	800f540 <enet_descriptors_chain_init+0x1c>
 800f590:	40029000 	andmi	r9, r2, r0
 800f594:	2000dcec 	andcs	sp, r0, ip, ror #25
 800f598:	2000d104 	andcs	sp, r0, r4, lsl #2
 800f59c:	2000a0a4 	andcs	sl, r0, r4, lsr #1
 800f5a0:	2000a098 	mulcs	r0, r8, r0
 800f5a4:	2000a09c 	mulcs	r0, ip, r0
 800f5a8:	2000d084 	andcs	sp, r0, r4, lsl #1
 800f5ac:	2000a0a0 	andcs	sl, r0, r0, lsr #1
 800f5b0:	2000a0e4 	andcs	sl, r0, r4, ror #1

0800f5b4 <enet_frame_receive>:
 800f5b4:	4a1d      	ldr	r2, [pc, #116]	; (800f62c <enet_frame_receive+0x78>)
 800f5b6:	b510      	push	{r4, lr}
 800f5b8:	6813      	ldr	r3, [r2, #0]
 800f5ba:	681b      	ldr	r3, [r3, #0]
 800f5bc:	2b00      	cmp	r3, #0
 800f5be:	db33      	blt.n	800f628 <enet_frame_receive+0x74>
 800f5c0:	b970      	cbnz	r0, 800f5e0 <enet_frame_receive+0x2c>
 800f5c2:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 800f5c6:	6813      	ldr	r3, [r2, #0]
 800f5c8:	6019      	str	r1, [r3, #0]
 800f5ca:	4919      	ldr	r1, [pc, #100]	; (800f630 <enet_frame_receive+0x7c>)
 800f5cc:	6948      	ldr	r0, [r1, #20]
 800f5ce:	0604      	lsls	r4, r0, #24
 800f5d0:	d419      	bmi.n	800f606 <enet_frame_receive+0x52>
 800f5d2:	6859      	ldr	r1, [r3, #4]
 800f5d4:	0448      	lsls	r0, r1, #17
 800f5d6:	d51b      	bpl.n	800f610 <enet_frame_receive+0x5c>
 800f5d8:	68db      	ldr	r3, [r3, #12]
 800f5da:	2001      	movs	r0, #1
 800f5dc:	6013      	str	r3, [r2, #0]
 800f5de:	bd10      	pop	{r4, pc}
 800f5e0:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 800f5e4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 800f5e8:	d11e      	bne.n	800f628 <enet_frame_receive+0x74>
 800f5ea:	f3c3 430d 	ubfx	r3, r3, #16, #14
 800f5ee:	3b04      	subs	r3, #4
 800f5f0:	428b      	cmp	r3, r1
 800f5f2:	d819      	bhi.n	800f628 <enet_frame_receive+0x74>
 800f5f4:	2100      	movs	r1, #0
 800f5f6:	4299      	cmp	r1, r3
 800f5f8:	6814      	ldr	r4, [r2, #0]
 800f5fa:	d2e2      	bcs.n	800f5c2 <enet_frame_receive+0xe>
 800f5fc:	68a4      	ldr	r4, [r4, #8]
 800f5fe:	5d0c      	ldrb	r4, [r1, r4]
 800f600:	5444      	strb	r4, [r0, r1]
 800f602:	3101      	adds	r1, #1
 800f604:	e7f7      	b.n	800f5f6 <enet_frame_receive+0x42>
 800f606:	2080      	movs	r0, #128	; 0x80
 800f608:	6148      	str	r0, [r1, #20]
 800f60a:	2000      	movs	r0, #0
 800f60c:	6088      	str	r0, [r1, #8]
 800f60e:	e7e0      	b.n	800f5d2 <enet_frame_receive+0x1e>
 800f610:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 800f614:	4906      	ldr	r1, [pc, #24]	; (800f630 <enet_frame_receive+0x7c>)
 800f616:	bf05      	ittet	eq
 800f618:	3310      	addeq	r3, #16
 800f61a:	6809      	ldreq	r1, [r1, #0]
 800f61c:	68cb      	ldrne	r3, [r1, #12]
 800f61e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 800f622:	bf08      	it	eq
 800f624:	185b      	addeq	r3, r3, r1
 800f626:	e7d8      	b.n	800f5da <enet_frame_receive+0x26>
 800f628:	2000      	movs	r0, #0
 800f62a:	e7d8      	b.n	800f5de <enet_frame_receive+0x2a>
 800f62c:	2000a0a0 	andcs	sl, r0, r0, lsr #1
 800f630:	40029000 	andmi	r9, r2, r0

0800f634 <enet_frame_transmit>:
 800f634:	4a1e      	ldr	r2, [pc, #120]	; (800f6b0 <enet_frame_transmit+0x7c>)
 800f636:	b530      	push	{r4, r5, lr}
 800f638:	6813      	ldr	r3, [r2, #0]
 800f63a:	681b      	ldr	r3, [r3, #0]
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	db34      	blt.n	800f6aa <enet_frame_transmit+0x76>
 800f640:	f240 53f4 	movw	r3, #1524	; 0x5f4
 800f644:	4299      	cmp	r1, r3
 800f646:	d830      	bhi.n	800f6aa <enet_frame_transmit+0x76>
 800f648:	b9e8      	cbnz	r0, 800f686 <enet_frame_transmit+0x52>
 800f64a:	6813      	ldr	r3, [r2, #0]
 800f64c:	4819      	ldr	r0, [pc, #100]	; (800f6b4 <enet_frame_transmit+0x80>)
 800f64e:	6059      	str	r1, [r3, #4]
 800f650:	6819      	ldr	r1, [r3, #0]
 800f652:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 800f656:	6019      	str	r1, [r3, #0]
 800f658:	6941      	ldr	r1, [r0, #20]
 800f65a:	6944      	ldr	r4, [r0, #20]
 800f65c:	f001 0104 	and.w	r1, r1, #4
 800f660:	f004 0420 	and.w	r4, r4, #32
 800f664:	4321      	orrs	r1, r4
 800f666:	d110      	bne.n	800f68a <enet_frame_transmit+0x56>
 800f668:	6819      	ldr	r1, [r3, #0]
 800f66a:	02c8      	lsls	r0, r1, #11
 800f66c:	d511      	bpl.n	800f692 <enet_frame_transmit+0x5e>
 800f66e:	68db      	ldr	r3, [r3, #12]
 800f670:	2001      	movs	r0, #1
 800f672:	6013      	str	r3, [r2, #0]
 800f674:	bd30      	pop	{r4, r5, pc}
 800f676:	5cc5      	ldrb	r5, [r0, r3]
 800f678:	68a4      	ldr	r4, [r4, #8]
 800f67a:	551d      	strb	r5, [r3, r4]
 800f67c:	3301      	adds	r3, #1
 800f67e:	428b      	cmp	r3, r1
 800f680:	6814      	ldr	r4, [r2, #0]
 800f682:	d1f8      	bne.n	800f676 <enet_frame_transmit+0x42>
 800f684:	e7e1      	b.n	800f64a <enet_frame_transmit+0x16>
 800f686:	2300      	movs	r3, #0
 800f688:	e7f9      	b.n	800f67e <enet_frame_transmit+0x4a>
 800f68a:	6141      	str	r1, [r0, #20]
 800f68c:	2100      	movs	r1, #0
 800f68e:	6041      	str	r1, [r0, #4]
 800f690:	e7ea      	b.n	800f668 <enet_frame_transmit+0x34>
 800f692:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 800f696:	4907      	ldr	r1, [pc, #28]	; (800f6b4 <enet_frame_transmit+0x80>)
 800f698:	bf05      	ittet	eq
 800f69a:	3310      	addeq	r3, #16
 800f69c:	6809      	ldreq	r1, [r1, #0]
 800f69e:	690b      	ldrne	r3, [r1, #16]
 800f6a0:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 800f6a4:	bf08      	it	eq
 800f6a6:	185b      	addeq	r3, r3, r1
 800f6a8:	e7e2      	b.n	800f670 <enet_frame_transmit+0x3c>
 800f6aa:	2000      	movs	r0, #0
 800f6ac:	e7e2      	b.n	800f674 <enet_frame_transmit+0x40>
 800f6ae:	bf00      	nop
 800f6b0:	2000a0a4 	andcs	sl, r0, r4, lsr #1
 800f6b4:	40029000 	andmi	r9, r2, r0

0800f6b8 <enet_transmit_checksum_config>:
 800f6b8:	6803      	ldr	r3, [r0, #0]
 800f6ba:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 800f6be:	430b      	orrs	r3, r1
 800f6c0:	6003      	str	r3, [r0, #0]
 800f6c2:	4770      	bx	lr

0800f6c4 <enet_mac_address_set>:
 800f6c4:	888a      	ldrh	r2, [r1, #4]
 800f6c6:	4b03      	ldr	r3, [pc, #12]	; (800f6d4 <enet_mac_address_set+0x10>)
 800f6c8:	50c2      	str	r2, [r0, r3]
 800f6ca:	680a      	ldr	r2, [r1, #0]
 800f6cc:	3304      	adds	r3, #4
 800f6ce:	50c2      	str	r2, [r0, r3]
 800f6d0:	4770      	bx	lr
 800f6d2:	bf00      	nop
 800f6d4:	40028040 	andmi	r8, r2, r0, asr #32

0800f6d8 <enet_rx_enable>:
 800f6d8:	4a05      	ldr	r2, [pc, #20]	; (800f6f0 <enet_rx_enable+0x18>)
 800f6da:	6813      	ldr	r3, [r2, #0]
 800f6dc:	f043 0304 	orr.w	r3, r3, #4
 800f6e0:	6013      	str	r3, [r2, #0]
 800f6e2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800f6e6:	6993      	ldr	r3, [r2, #24]
 800f6e8:	f043 0302 	orr.w	r3, r3, #2
 800f6ec:	6193      	str	r3, [r2, #24]
 800f6ee:	4770      	bx	lr
 800f6f0:	40028000 	andmi	r8, r2, r0

0800f6f4 <enet_phy_write_read>:
 800f6f4:	b530      	push	{r4, r5, lr}
 800f6f6:	4604      	mov	r4, r0
 800f6f8:	4d13      	ldr	r5, [pc, #76]	; (800f748 <enet_phy_write_read+0x54>)
 800f6fa:	0192      	lsls	r2, r2, #6
 800f6fc:	6928      	ldr	r0, [r5, #16]
 800f6fe:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 800f702:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 800f706:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 800f70a:	4302      	orrs	r2, r0
 800f70c:	02c9      	lsls	r1, r1, #11
 800f70e:	b289      	uxth	r1, r1
 800f710:	2c02      	cmp	r4, #2
 800f712:	ea42 0204 	orr.w	r2, r2, r4
 800f716:	ea42 0201 	orr.w	r2, r2, r1
 800f71a:	bf08      	it	eq
 800f71c:	8819      	ldrheq	r1, [r3, #0]
 800f71e:	f042 0201 	orr.w	r2, r2, #1
 800f722:	bf08      	it	eq
 800f724:	6169      	streq	r1, [r5, #20]
 800f726:	612a      	str	r2, [r5, #16]
 800f728:	4907      	ldr	r1, [pc, #28]	; (800f748 <enet_phy_write_read+0x54>)
 800f72a:	4a08      	ldr	r2, [pc, #32]	; (800f74c <enet_phy_write_read+0x58>)
 800f72c:	6908      	ldr	r0, [r1, #16]
 800f72e:	07c0      	lsls	r0, r0, #31
 800f730:	d501      	bpl.n	800f736 <enet_phy_write_read+0x42>
 800f732:	3a01      	subs	r2, #1
 800f734:	d1fa      	bne.n	800f72c <enet_phy_write_read+0x38>
 800f736:	690a      	ldr	r2, [r1, #16]
 800f738:	43d2      	mvns	r2, r2
 800f73a:	f002 0001 	and.w	r0, r2, #1
 800f73e:	b90c      	cbnz	r4, 800f744 <enet_phy_write_read+0x50>
 800f740:	694a      	ldr	r2, [r1, #20]
 800f742:	801a      	strh	r2, [r3, #0]
 800f744:	bd30      	pop	{r4, r5, pc}
 800f746:	bf00      	nop
 800f748:	40028000 	andmi	r8, r2, r0
 800f74c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0800f750 <enet_phy_config>:
 800f750:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f752:	4d22      	ldr	r5, [pc, #136]	; (800f7dc <enet_phy_config+0x8c>)
 800f754:	2001      	movs	r0, #1
 800f756:	692c      	ldr	r4, [r5, #16]
 800f758:	f000 fc66 	bl	8010028 <rcu_clock_freq_get>
 800f75c:	4b20      	ldr	r3, [pc, #128]	; (800f7e0 <enet_phy_config+0x90>)
 800f75e:	4a21      	ldr	r2, [pc, #132]	; (800f7e4 <enet_phy_config+0x94>)
 800f760:	4403      	add	r3, r0
 800f762:	4293      	cmp	r3, r2
 800f764:	f024 041c 	bic.w	r4, r4, #28
 800f768:	d21f      	bcs.n	800f7aa <enet_phy_config+0x5a>
 800f76a:	f044 0408 	orr.w	r4, r4, #8
 800f76e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f772:	612c      	str	r4, [r5, #16]
 800f774:	2200      	movs	r2, #0
 800f776:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f77a:	2101      	movs	r1, #1
 800f77c:	2002      	movs	r0, #2
 800f77e:	f10d 0306 	add.w	r3, sp, #6
 800f782:	f7ff ffb7 	bl	800f6f4 <enet_phy_write_read>
 800f786:	b310      	cbz	r0, 800f7ce <enet_phy_config+0x7e>
 800f788:	2200      	movs	r2, #0
 800f78a:	4817      	ldr	r0, [pc, #92]	; (800f7e8 <enet_phy_config+0x98>)
 800f78c:	f7ff feaa 	bl	800f4e4 <enet_delay>
 800f790:	2101      	movs	r1, #1
 800f792:	4610      	mov	r0, r2
 800f794:	f10d 0306 	add.w	r3, sp, #6
 800f798:	f7ff ffac 	bl	800f6f4 <enet_phy_write_read>
 800f79c:	b1b8      	cbz	r0, 800f7ce <enet_phy_config+0x7e>
 800f79e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f7a2:	43c0      	mvns	r0, r0
 800f7a4:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800f7a8:	e012      	b.n	800f7d0 <enet_phy_config+0x80>
 800f7aa:	4b10      	ldr	r3, [pc, #64]	; (800f7ec <enet_phy_config+0x9c>)
 800f7ac:	4a10      	ldr	r2, [pc, #64]	; (800f7f0 <enet_phy_config+0xa0>)
 800f7ae:	4403      	add	r3, r0
 800f7b0:	4293      	cmp	r3, r2
 800f7b2:	d802      	bhi.n	800f7ba <enet_phy_config+0x6a>
 800f7b4:	f044 040c 	orr.w	r4, r4, #12
 800f7b8:	e7d9      	b.n	800f76e <enet_phy_config+0x1e>
 800f7ba:	4b0e      	ldr	r3, [pc, #56]	; (800f7f4 <enet_phy_config+0xa4>)
 800f7bc:	4a0e      	ldr	r2, [pc, #56]	; (800f7f8 <enet_phy_config+0xa8>)
 800f7be:	4403      	add	r3, r0
 800f7c0:	4293      	cmp	r3, r2
 800f7c2:	d9d4      	bls.n	800f76e <enet_phy_config+0x1e>
 800f7c4:	4b0d      	ldr	r3, [pc, #52]	; (800f7fc <enet_phy_config+0xac>)
 800f7c6:	4a0e      	ldr	r2, [pc, #56]	; (800f800 <enet_phy_config+0xb0>)
 800f7c8:	4403      	add	r3, r0
 800f7ca:	4293      	cmp	r3, r2
 800f7cc:	d902      	bls.n	800f7d4 <enet_phy_config+0x84>
 800f7ce:	2000      	movs	r0, #0
 800f7d0:	b003      	add	sp, #12
 800f7d2:	bd30      	pop	{r4, r5, pc}
 800f7d4:	f044 0404 	orr.w	r4, r4, #4
 800f7d8:	e7c9      	b.n	800f76e <enet_phy_config+0x1e>
 800f7da:	bf00      	nop
 800f7dc:	40028000 	andmi	r8, r2, r0
 800f7e0:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 800f7e4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800f7e8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 800f7ec:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 800f7f0:	017d783f 	cmneq	sp, pc, lsr r8
 800f7f4:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 800f7f8:	01c9c37f 	biceq	ip, r9, pc, ror r3
 800f7fc:	faa2b580 	blx	68bce04 <__stack_size+0x68bae04>
 800f800:	0112a880 	tsteq	r2, r0, lsl #17

0800f804 <enet_init>:
 800f804:	2300      	movs	r3, #0
 800f806:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f808:	4604      	mov	r4, r0
 800f80a:	460d      	mov	r5, r1
 800f80c:	4616      	mov	r6, r2
 800f80e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f812:	f7ff ff9d 	bl	800f750 <enet_phy_config>
 800f816:	2800      	cmp	r0, #0
 800f818:	d037      	beq.n	800f88a <enet_init+0x86>
 800f81a:	4b3b      	ldr	r3, [pc, #236]	; (800f908 <enet_init+0x104>)
 800f81c:	4a3b      	ldr	r2, [pc, #236]	; (800f90c <enet_init+0x108>)
 800f81e:	6819      	ldr	r1, [r3, #0]
 800f820:	2c01      	cmp	r4, #1
 800f822:	ea02 0201 	and.w	r2, r2, r1
 800f826:	601a      	str	r2, [r3, #0]
 800f828:	f04f 0200 	mov.w	r2, #0
 800f82c:	605a      	str	r2, [r3, #4]
 800f82e:	609a      	str	r2, [r3, #8]
 800f830:	60da      	str	r2, [r3, #12]
 800f832:	6999      	ldr	r1, [r3, #24]
 800f834:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 800f838:	ea4f 4101 	mov.w	r1, r1, lsl #16
 800f83c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 800f840:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800f844:	6199      	str	r1, [r3, #24]
 800f846:	4932      	ldr	r1, [pc, #200]	; (800f910 <enet_init+0x10c>)
 800f848:	61da      	str	r2, [r3, #28]
 800f84a:	6988      	ldr	r0, [r1, #24]
 800f84c:	4b31      	ldr	r3, [pc, #196]	; (800f914 <enet_init+0x110>)
 800f84e:	ea03 0300 	and.w	r3, r3, r0
 800f852:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 800f856:	618b      	str	r3, [r1, #24]
 800f858:	680b      	ldr	r3, [r1, #0]
 800f85a:	4b2f      	ldr	r3, [pc, #188]	; (800f918 <enet_init+0x114>)
 800f85c:	600b      	str	r3, [r1, #0]
 800f85e:	d01e      	beq.n	800f89e <enet_init+0x9a>
 800f860:	08e3      	lsrs	r3, r4, #3
 800f862:	0861      	lsrs	r1, r4, #1
 800f864:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 800f868:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f86c:	430b      	orrs	r3, r1
 800f86e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f872:	2101      	movs	r1, #1
 800f874:	2002      	movs	r0, #2
 800f876:	f10d 0306 	add.w	r3, sp, #6
 800f87a:	f7ff ff3b 	bl	800f6f4 <enet_phy_write_read>
 800f87e:	b158      	cbz	r0, 800f898 <enet_init+0x94>
 800f880:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800f884:	f7ff fe2e 	bl	800f4e4 <enet_delay>
 800f888:	e05d      	b.n	800f946 <enet_init+0x142>
 800f88a:	4824      	ldr	r0, [pc, #144]	; (800f91c <enet_init+0x118>)
 800f88c:	f7ff fe2a 	bl	800f4e4 <enet_delay>
 800f890:	f7ff ff5e 	bl	800f750 <enet_phy_config>
 800f894:	2800      	cmp	r0, #0
 800f896:	d1c0      	bne.n	800f81a <enet_init+0x16>
 800f898:	2000      	movs	r0, #0
 800f89a:	b003      	add	sp, #12
 800f89c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f89e:	4614      	mov	r4, r2
 800f8a0:	4f1f      	ldr	r7, [pc, #124]	; (800f920 <enet_init+0x11c>)
 800f8a2:	2201      	movs	r2, #1
 800f8a4:	2000      	movs	r0, #0
 800f8a6:	4611      	mov	r1, r2
 800f8a8:	f10d 0306 	add.w	r3, sp, #6
 800f8ac:	f7ff ff22 	bl	800f6f4 <enet_phy_write_read>
 800f8b0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800f8b4:	3401      	adds	r4, #1
 800f8b6:	f002 0204 	and.w	r2, r2, #4
 800f8ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f8be:	b912      	cbnz	r2, 800f8c6 <enet_init+0xc2>
 800f8c0:	42bc      	cmp	r4, r7
 800f8c2:	d1ee      	bne.n	800f8a2 <enet_init+0x9e>
 800f8c4:	e7e8      	b.n	800f898 <enet_init+0x94>
 800f8c6:	42bc      	cmp	r4, r7
 800f8c8:	d0e6      	beq.n	800f898 <enet_init+0x94>
 800f8ca:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800f8ce:	2101      	movs	r1, #1
 800f8d0:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f8d4:	2002      	movs	r0, #2
 800f8d6:	2200      	movs	r2, #0
 800f8d8:	f7ff ff0c 	bl	800f6f4 <enet_phy_write_read>
 800f8dc:	2800      	cmp	r0, #0
 800f8de:	d0db      	beq.n	800f898 <enet_init+0x94>
 800f8e0:	2400      	movs	r4, #0
 800f8e2:	4f0f      	ldr	r7, [pc, #60]	; (800f920 <enet_init+0x11c>)
 800f8e4:	2201      	movs	r2, #1
 800f8e6:	2000      	movs	r0, #0
 800f8e8:	4611      	mov	r1, r2
 800f8ea:	f10d 0306 	add.w	r3, sp, #6
 800f8ee:	f7ff ff01 	bl	800f6f4 <enet_phy_write_read>
 800f8f2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800f8f6:	3401      	adds	r4, #1
 800f8f8:	f002 0220 	and.w	r2, r2, #32
 800f8fc:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f900:	b982      	cbnz	r2, 800f924 <enet_init+0x120>
 800f902:	42bc      	cmp	r4, r7
 800f904:	d1ee      	bne.n	800f8e4 <enet_init+0xe0>
 800f906:	e7c7      	b.n	800f898 <enet_init+0x94>
 800f908:	40028000 	andmi	r8, r2, r0
 800f90c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 800f910:	40029000 	andmi	r9, r2, r0
 800f914:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 800f918:	02c16000 	sbceq	r6, r1, #0
 800f91c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 800f920:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 800f924:	42bc      	cmp	r4, r7
 800f926:	d0b7      	beq.n	800f898 <enet_init+0x94>
 800f928:	2101      	movs	r1, #1
 800f92a:	2210      	movs	r2, #16
 800f92c:	2000      	movs	r0, #0
 800f92e:	f7ff fee1 	bl	800f6f4 <enet_phy_write_read>
 800f932:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f936:	f3c3 0480 	ubfx	r4, r3, #2, #1
 800f93a:	0799      	lsls	r1, r3, #30
 800f93c:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 800f940:	d401      	bmi.n	800f946 <enet_init+0x142>
 800f942:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 800f946:	4b63      	ldr	r3, [pc, #396]	; (800fad4 <enet_init+0x2d0>)
 800f948:	681a      	ldr	r2, [r3, #0]
 800f94a:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 800f94e:	4314      	orrs	r4, r2
 800f950:	056a      	lsls	r2, r5, #21
 800f952:	601c      	str	r4, [r3, #0]
 800f954:	d50b      	bpl.n	800f96e <enet_init+0x16a>
 800f956:	681a      	ldr	r2, [r3, #0]
 800f958:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 800f95c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f960:	601a      	str	r2, [r3, #0]
 800f962:	4a5d      	ldr	r2, [pc, #372]	; (800fad8 <enet_init+0x2d4>)
 800f964:	6993      	ldr	r3, [r2, #24]
 800f966:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800f96a:	431d      	orrs	r5, r3
 800f96c:	6195      	str	r5, [r2, #24]
 800f96e:	4959      	ldr	r1, [pc, #356]	; (800fad4 <enet_init+0x2d0>)
 800f970:	684b      	ldr	r3, [r1, #4]
 800f972:	431e      	orrs	r6, r3
 800f974:	4b59      	ldr	r3, [pc, #356]	; (800fadc <enet_init+0x2d8>)
 800f976:	604e      	str	r6, [r1, #4]
 800f978:	681a      	ldr	r2, [r3, #0]
 800f97a:	07d7      	lsls	r7, r2, #31
 800f97c:	d510      	bpl.n	800f9a0 <enet_init+0x19c>
 800f97e:	685a      	ldr	r2, [r3, #4]
 800f980:	680c      	ldr	r4, [r1, #0]
 800f982:	f002 0080 	and.w	r0, r2, #128	; 0x80
 800f986:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 800f98a:	4320      	orrs	r0, r4
 800f98c:	6008      	str	r0, [r1, #0]
 800f98e:	4852      	ldr	r0, [pc, #328]	; (800fad8 <enet_init+0x2d4>)
 800f990:	0892      	lsrs	r2, r2, #2
 800f992:	6981      	ldr	r1, [r0, #24]
 800f994:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 800f998:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800f99c:	430a      	orrs	r2, r1
 800f99e:	6182      	str	r2, [r0, #24]
 800f9a0:	681a      	ldr	r2, [r3, #0]
 800f9a2:	0796      	lsls	r6, r2, #30
 800f9a4:	d508      	bpl.n	800f9b8 <enet_init+0x1b4>
 800f9a6:	494c      	ldr	r1, [pc, #304]	; (800fad8 <enet_init+0x2d4>)
 800f9a8:	6898      	ldr	r0, [r3, #8]
 800f9aa:	680a      	ldr	r2, [r1, #0]
 800f9ac:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800f9b0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800f9b4:	4302      	orrs	r2, r0
 800f9b6:	600a      	str	r2, [r1, #0]
 800f9b8:	681a      	ldr	r2, [r3, #0]
 800f9ba:	0755      	lsls	r5, r2, #29
 800f9bc:	d508      	bpl.n	800f9d0 <enet_init+0x1cc>
 800f9be:	4946      	ldr	r1, [pc, #280]	; (800fad8 <enet_init+0x2d4>)
 800f9c0:	68d8      	ldr	r0, [r3, #12]
 800f9c2:	680a      	ldr	r2, [r1, #0]
 800f9c4:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 800f9c8:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 800f9cc:	4302      	orrs	r2, r0
 800f9ce:	600a      	str	r2, [r1, #0]
 800f9d0:	681a      	ldr	r2, [r3, #0]
 800f9d2:	0714      	lsls	r4, r2, #28
 800f9d4:	d508      	bpl.n	800f9e8 <enet_init+0x1e4>
 800f9d6:	4940      	ldr	r1, [pc, #256]	; (800fad8 <enet_init+0x2d4>)
 800f9d8:	6918      	ldr	r0, [r3, #16]
 800f9da:	680a      	ldr	r2, [r1, #0]
 800f9dc:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800f9e0:	f022 0202 	bic.w	r2, r2, #2
 800f9e4:	4302      	orrs	r2, r0
 800f9e6:	600a      	str	r2, [r1, #0]
 800f9e8:	681a      	ldr	r2, [r3, #0]
 800f9ea:	06d0      	lsls	r0, r2, #27
 800f9ec:	d506      	bpl.n	800f9fc <enet_init+0x1f8>
 800f9ee:	493a      	ldr	r1, [pc, #232]	; (800fad8 <enet_init+0x2d4>)
 800f9f0:	4a3b      	ldr	r2, [pc, #236]	; (800fae0 <enet_init+0x2dc>)
 800f9f2:	6988      	ldr	r0, [r1, #24]
 800f9f4:	4002      	ands	r2, r0
 800f9f6:	6958      	ldr	r0, [r3, #20]
 800f9f8:	4302      	orrs	r2, r0
 800f9fa:	618a      	str	r2, [r1, #24]
 800f9fc:	681a      	ldr	r2, [r3, #0]
 800f9fe:	0691      	lsls	r1, r2, #26
 800fa00:	d508      	bpl.n	800fa14 <enet_init+0x210>
 800fa02:	4935      	ldr	r1, [pc, #212]	; (800fad8 <enet_init+0x2d4>)
 800fa04:	6998      	ldr	r0, [r3, #24]
 800fa06:	698a      	ldr	r2, [r1, #24]
 800fa08:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 800fa0c:	f022 0204 	bic.w	r2, r2, #4
 800fa10:	4302      	orrs	r2, r0
 800fa12:	618a      	str	r2, [r1, #24]
 800fa14:	681a      	ldr	r2, [r3, #0]
 800fa16:	0652      	lsls	r2, r2, #25
 800fa18:	d506      	bpl.n	800fa28 <enet_init+0x224>
 800fa1a:	492e      	ldr	r1, [pc, #184]	; (800fad4 <enet_init+0x2d0>)
 800fa1c:	69d8      	ldr	r0, [r3, #28]
 800fa1e:	69ca      	ldr	r2, [r1, #28]
 800fa20:	0c52      	lsrs	r2, r2, #17
 800fa22:	0452      	lsls	r2, r2, #17
 800fa24:	4302      	orrs	r2, r0
 800fa26:	61ca      	str	r2, [r1, #28]
 800fa28:	681a      	ldr	r2, [r3, #0]
 800fa2a:	0617      	lsls	r7, r2, #24
 800fa2c:	d517      	bpl.n	800fa5e <enet_init+0x25a>
 800fa2e:	4c29      	ldr	r4, [pc, #164]	; (800fad4 <enet_init+0x2d0>)
 800fa30:	6a1a      	ldr	r2, [r3, #32]
 800fa32:	69a0      	ldr	r0, [r4, #24]
 800fa34:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 800fa38:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 800fa3c:	0400      	lsls	r0, r0, #16
 800fa3e:	0c00      	lsrs	r0, r0, #16
 800fa40:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 800fa44:	4301      	orrs	r1, r0
 800fa46:	4824      	ldr	r0, [pc, #144]	; (800fad8 <enet_init+0x2d4>)
 800fa48:	61a1      	str	r1, [r4, #24]
 800fa4a:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 800fa4e:	0a12      	lsrs	r2, r2, #8
 800fa50:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 800fa54:	f002 0277 	and.w	r2, r2, #119	; 0x77
 800fa58:	430a      	orrs	r2, r1
 800fa5a:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 800fa5e:	681a      	ldr	r2, [r3, #0]
 800fa60:	05d6      	lsls	r6, r2, #23
 800fa62:	bf42      	ittt	mi
 800fa64:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 800fa66:	4a1b      	ldrmi	r2, [pc, #108]	; (800fad4 <enet_init+0x2d0>)
 800fa68:	6091      	strmi	r1, [r2, #8]
 800fa6a:	681a      	ldr	r2, [r3, #0]
 800fa6c:	0595      	lsls	r5, r2, #22
 800fa6e:	bf42      	ittt	mi
 800fa70:	4a18      	ldrmi	r2, [pc, #96]	; (800fad4 <enet_init+0x2d0>)
 800fa72:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 800fa74:	60d1      	strmi	r1, [r2, #12]
 800fa76:	681a      	ldr	r2, [r3, #0]
 800fa78:	0554      	lsls	r4, r2, #21
 800fa7a:	d508      	bpl.n	800fa8e <enet_init+0x28a>
 800fa7c:	4915      	ldr	r1, [pc, #84]	; (800fad4 <enet_init+0x2d0>)
 800fa7e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800fa80:	684a      	ldr	r2, [r1, #4]
 800fa82:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 800fa86:	f022 0206 	bic.w	r2, r2, #6
 800fa8a:	4302      	orrs	r2, r0
 800fa8c:	604a      	str	r2, [r1, #4]
 800fa8e:	681a      	ldr	r2, [r3, #0]
 800fa90:	0510      	lsls	r0, r2, #20
 800fa92:	d508      	bpl.n	800faa6 <enet_init+0x2a2>
 800fa94:	490f      	ldr	r1, [pc, #60]	; (800fad4 <enet_init+0x2d0>)
 800fa96:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800fa98:	680a      	ldr	r2, [r1, #0]
 800fa9a:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 800fa9e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800faa2:	4302      	orrs	r2, r0
 800faa4:	600a      	str	r2, [r1, #0]
 800faa6:	681a      	ldr	r2, [r3, #0]
 800faa8:	04d1      	lsls	r1, r2, #19
 800faaa:	d506      	bpl.n	800faba <enet_init+0x2b6>
 800faac:	4909      	ldr	r1, [pc, #36]	; (800fad4 <enet_init+0x2d0>)
 800faae:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800fab0:	680a      	ldr	r2, [r1, #0]
 800fab2:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800fab6:	4302      	orrs	r2, r0
 800fab8:	600a      	str	r2, [r1, #0]
 800faba:	681a      	ldr	r2, [r3, #0]
 800fabc:	0492      	lsls	r2, r2, #18
 800fabe:	d506      	bpl.n	800face <enet_init+0x2ca>
 800fac0:	4904      	ldr	r1, [pc, #16]	; (800fad4 <enet_init+0x2d0>)
 800fac2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fac4:	680a      	ldr	r2, [r1, #0]
 800fac6:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 800faca:	4313      	orrs	r3, r2
 800facc:	600b      	str	r3, [r1, #0]
 800face:	2001      	movs	r0, #1
 800fad0:	e6e3      	b.n	800f89a <enet_init+0x96>
 800fad2:	bf00      	nop
 800fad4:	40028000 	andmi	r8, r2, r0
 800fad8:	40029000 	andmi	r9, r2, r0
 800fadc:	2000a0a8 	andcs	sl, r0, r8, lsr #1
 800fae0:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

0800fae4 <enet_txfifo_flush>:
 800fae4:	4b06      	ldr	r3, [pc, #24]	; (800fb00 <enet_txfifo_flush+0x1c>)
 800fae6:	4807      	ldr	r0, [pc, #28]	; (800fb04 <enet_txfifo_flush+0x20>)
 800fae8:	699a      	ldr	r2, [r3, #24]
 800faea:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800faee:	619a      	str	r2, [r3, #24]
 800faf0:	699a      	ldr	r2, [r3, #24]
 800faf2:	02d2      	lsls	r2, r2, #11
 800faf4:	d502      	bpl.n	800fafc <enet_txfifo_flush+0x18>
 800faf6:	3801      	subs	r0, #1
 800faf8:	d1fa      	bne.n	800faf0 <enet_txfifo_flush+0xc>
 800fafa:	4770      	bx	lr
 800fafc:	2001      	movs	r0, #1
 800fafe:	4770      	bx	lr
 800fb00:	40029000 	andmi	r9, r2, r0
 800fb04:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0800fb08 <enet_tx_enable>:
 800fb08:	4a06      	ldr	r2, [pc, #24]	; (800fb24 <enet_tx_enable+0x1c>)
 800fb0a:	b508      	push	{r3, lr}
 800fb0c:	6813      	ldr	r3, [r2, #0]
 800fb0e:	f043 0308 	orr.w	r3, r3, #8
 800fb12:	6013      	str	r3, [r2, #0]
 800fb14:	f7ff ffe6 	bl	800fae4 <enet_txfifo_flush>
 800fb18:	4a03      	ldr	r2, [pc, #12]	; (800fb28 <enet_tx_enable+0x20>)
 800fb1a:	6993      	ldr	r3, [r2, #24]
 800fb1c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800fb20:	6193      	str	r3, [r2, #24]
 800fb22:	bd08      	pop	{r3, pc}
 800fb24:	40028000 	andmi	r8, r2, r0
 800fb28:	40029000 	andmi	r9, r2, r0

0800fb2c <enet_enable>:
 800fb2c:	b508      	push	{r3, lr}
 800fb2e:	f7ff ffeb 	bl	800fb08 <enet_tx_enable>
 800fb32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fb36:	f7ff bdcf 	b.w	800f6d8 <enet_rx_enable>

0800fb3a <enet_desc_information_get>:
 800fb3a:	2905      	cmp	r1, #5
 800fb3c:	d817      	bhi.n	800fb6e <enet_desc_information_get+0x34>
 800fb3e:	e8df f001 	tbb	[pc, r1]
 800fb42:	03091012 	movweq	r1, #36882	; 0x9012
 800fb46:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 800fb4a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fb4e:	4770      	bx	lr
 800fb50:	88c0      	ldrh	r0, [r0, #6]
 800fb52:	e7fa      	b.n	800fb4a <enet_desc_information_get+0x10>
 800fb54:	8840      	ldrh	r0, [r0, #2]
 800fb56:	f3c0 000d 	ubfx	r0, r0, #0, #14
 800fb5a:	2804      	cmp	r0, #4
 800fb5c:	d90a      	bls.n	800fb74 <enet_desc_information_get+0x3a>
 800fb5e:	3804      	subs	r0, #4
 800fb60:	4770      	bx	lr
 800fb62:	6880      	ldr	r0, [r0, #8]
 800fb64:	4770      	bx	lr
 800fb66:	6800      	ldr	r0, [r0, #0]
 800fb68:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 800fb6c:	4770      	bx	lr
 800fb6e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fb72:	4770      	bx	lr
 800fb74:	2000      	movs	r0, #0
 800fb76:	4770      	bx	lr

0800fb78 <enet_rxframe_drop>:
 800fb78:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800fb7c:	4814      	ldr	r0, [pc, #80]	; (800fbd0 <enet_rxframe_drop+0x58>)
 800fb7e:	b510      	push	{r4, lr}
 800fb80:	6802      	ldr	r2, [r0, #0]
 800fb82:	4914      	ldr	r1, [pc, #80]	; (800fbd4 <enet_rxframe_drop+0x5c>)
 800fb84:	6854      	ldr	r4, [r2, #4]
 800fb86:	6013      	str	r3, [r2, #0]
 800fb88:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 800fb8c:	680b      	ldr	r3, [r1, #0]
 800fb8e:	d009      	beq.n	800fba4 <enet_rxframe_drop+0x2c>
 800fb90:	b12b      	cbz	r3, 800fb9e <enet_rxframe_drop+0x26>
 800fb92:	68da      	ldr	r2, [r3, #12]
 800fb94:	6002      	str	r2, [r0, #0]
 800fb96:	681a      	ldr	r2, [r3, #0]
 800fb98:	b1ba      	cbz	r2, 800fbca <enet_rxframe_drop+0x52>
 800fb9a:	600a      	str	r2, [r1, #0]
 800fb9c:	bd10      	pop	{r4, pc}
 800fb9e:	68d3      	ldr	r3, [r2, #12]
 800fba0:	6003      	str	r3, [r0, #0]
 800fba2:	e7fb      	b.n	800fb9c <enet_rxframe_drop+0x24>
 800fba4:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 800fba8:	4c0b      	ldr	r4, [pc, #44]	; (800fbd8 <enet_rxframe_drop+0x60>)
 800fbaa:	d006      	beq.n	800fbba <enet_rxframe_drop+0x42>
 800fbac:	68e2      	ldr	r2, [r4, #12]
 800fbae:	6002      	str	r2, [r0, #0]
 800fbb0:	2b00      	cmp	r3, #0
 800fbb2:	d0f3      	beq.n	800fb9c <enet_rxframe_drop+0x24>
 800fbb4:	681b      	ldr	r3, [r3, #0]
 800fbb6:	600b      	str	r3, [r1, #0]
 800fbb8:	e7f0      	b.n	800fb9c <enet_rxframe_drop+0x24>
 800fbba:	6824      	ldr	r4, [r4, #0]
 800fbbc:	3210      	adds	r2, #16
 800fbbe:	f3c4 0484 	ubfx	r4, r4, #2, #5
 800fbc2:	4422      	add	r2, r4
 800fbc4:	6002      	str	r2, [r0, #0]
 800fbc6:	2b00      	cmp	r3, #0
 800fbc8:	d0e8      	beq.n	800fb9c <enet_rxframe_drop+0x24>
 800fbca:	3310      	adds	r3, #16
 800fbcc:	e7f3      	b.n	800fbb6 <enet_rxframe_drop+0x3e>
 800fbce:	bf00      	nop
 800fbd0:	2000a0a0 	andcs	sl, r0, r0, lsr #1
 800fbd4:	2000a098 	mulcs	r0, r8, r0
 800fbd8:	40029000 	andmi	r9, r2, r0

0800fbdc <enet_rxframe_size_get>:
 800fbdc:	b508      	push	{r3, lr}
 800fbde:	4b0c      	ldr	r3, [pc, #48]	; (800fc10 <enet_rxframe_size_get+0x34>)
 800fbe0:	681b      	ldr	r3, [r3, #0]
 800fbe2:	6818      	ldr	r0, [r3, #0]
 800fbe4:	2800      	cmp	r0, #0
 800fbe6:	db10      	blt.n	800fc0a <enet_rxframe_size_get+0x2e>
 800fbe8:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 800fbec:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fbf0:	d003      	beq.n	800fbfa <enet_rxframe_size_get+0x1e>
 800fbf2:	f7ff ffc1 	bl	800fb78 <enet_rxframe_drop>
 800fbf6:	2001      	movs	r0, #1
 800fbf8:	bd08      	pop	{r3, pc}
 800fbfa:	f000 0321 	and.w	r3, r0, #33	; 0x21
 800fbfe:	2b21      	cmp	r3, #33	; 0x21
 800fc00:	d0f7      	beq.n	800fbf2 <enet_rxframe_size_get+0x16>
 800fc02:	f3c0 400d 	ubfx	r0, r0, #16, #14
 800fc06:	3804      	subs	r0, #4
 800fc08:	e7f6      	b.n	800fbf8 <enet_rxframe_size_get+0x1c>
 800fc0a:	2000      	movs	r0, #0
 800fc0c:	e7f4      	b.n	800fbf8 <enet_rxframe_size_get+0x1c>
 800fc0e:	bf00      	nop
 800fc10:	2000a0a0 	andcs	sl, r0, r0, lsr #1

0800fc14 <enet_initpara_reset>:
 800fc14:	2200      	movs	r2, #0
 800fc16:	4b08      	ldr	r3, [pc, #32]	; (800fc38 <enet_initpara_reset+0x24>)
 800fc18:	e9c3 2200 	strd	r2, r2, [r3]
 800fc1c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 800fc20:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800fc24:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800fc28:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800fc2c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 800fc30:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 800fc34:	639a      	str	r2, [r3, #56]	; 0x38
 800fc36:	4770      	bx	lr
 800fc38:	2000a0a8 	andcs	sl, r0, r8, lsr #1

0800fc3c <enet_deinit>:
 800fc3c:	b508      	push	{r3, lr}
 800fc3e:	f640 200e 	movw	r0, #2574	; 0xa0e
 800fc42:	f000 f946 	bl	800fed2 <rcu_periph_reset_enable>
 800fc46:	f640 200e 	movw	r0, #2574	; 0xa0e
 800fc4a:	f000 f944 	bl	800fed6 <rcu_periph_reset_disable>
 800fc4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fc52:	f7ff bfdf 	b.w	800fc14 <enet_initpara_reset>
	...

0800fc58 <fmc_bank0_unlock>:
 800fc58:	4b04      	ldr	r3, [pc, #16]	; (800fc6c <fmc_bank0_unlock+0x14>)
 800fc5a:	691a      	ldr	r2, [r3, #16]
 800fc5c:	0612      	lsls	r2, r2, #24
 800fc5e:	bf41      	itttt	mi
 800fc60:	4a03      	ldrmi	r2, [pc, #12]	; (800fc70 <fmc_bank0_unlock+0x18>)
 800fc62:	605a      	strmi	r2, [r3, #4]
 800fc64:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800fc68:	605a      	strmi	r2, [r3, #4]
 800fc6a:	4770      	bx	lr
 800fc6c:	40022000 	andmi	r2, r2, r0
 800fc70:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800fc74 <fmc_bank1_unlock>:
 800fc74:	4b04      	ldr	r3, [pc, #16]	; (800fc88 <fmc_bank1_unlock+0x14>)
 800fc76:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fc78:	0612      	lsls	r2, r2, #24
 800fc7a:	bf41      	itttt	mi
 800fc7c:	4a03      	ldrmi	r2, [pc, #12]	; (800fc8c <fmc_bank1_unlock+0x18>)
 800fc7e:	645a      	strmi	r2, [r3, #68]	; 0x44
 800fc80:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800fc84:	645a      	strmi	r2, [r3, #68]	; 0x44
 800fc86:	4770      	bx	lr
 800fc88:	40022000 	andmi	r2, r2, r0
 800fc8c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800fc90 <fmc_bank0_lock>:
 800fc90:	4a02      	ldr	r2, [pc, #8]	; (800fc9c <fmc_bank0_lock+0xc>)
 800fc92:	6913      	ldr	r3, [r2, #16]
 800fc94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fc98:	6113      	str	r3, [r2, #16]
 800fc9a:	4770      	bx	lr
 800fc9c:	40022000 	andmi	r2, r2, r0

0800fca0 <fmc_bank1_lock>:
 800fca0:	4a02      	ldr	r2, [pc, #8]	; (800fcac <fmc_bank1_lock+0xc>)
 800fca2:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800fca4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fca8:	6513      	str	r3, [r2, #80]	; 0x50
 800fcaa:	4770      	bx	lr
 800fcac:	40022000 	andmi	r2, r2, r0

0800fcb0 <fmc_bank0_state_get>:
 800fcb0:	4b07      	ldr	r3, [pc, #28]	; (800fcd0 <fmc_bank0_state_get+0x20>)
 800fcb2:	68da      	ldr	r2, [r3, #12]
 800fcb4:	07d1      	lsls	r1, r2, #31
 800fcb6:	d407      	bmi.n	800fcc8 <fmc_bank0_state_get+0x18>
 800fcb8:	68da      	ldr	r2, [r3, #12]
 800fcba:	06d2      	lsls	r2, r2, #27
 800fcbc:	d406      	bmi.n	800fccc <fmc_bank0_state_get+0x1c>
 800fcbe:	68d8      	ldr	r0, [r3, #12]
 800fcc0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800fcc4:	0040      	lsls	r0, r0, #1
 800fcc6:	4770      	bx	lr
 800fcc8:	2001      	movs	r0, #1
 800fcca:	4770      	bx	lr
 800fccc:	2003      	movs	r0, #3
 800fcce:	4770      	bx	lr
 800fcd0:	40022000 	andmi	r2, r2, r0

0800fcd4 <fmc_bank1_state_get>:
 800fcd4:	4b07      	ldr	r3, [pc, #28]	; (800fcf4 <fmc_bank1_state_get+0x20>)
 800fcd6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800fcd8:	07d1      	lsls	r1, r2, #31
 800fcda:	d407      	bmi.n	800fcec <fmc_bank1_state_get+0x18>
 800fcdc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800fcde:	06d2      	lsls	r2, r2, #27
 800fce0:	d406      	bmi.n	800fcf0 <fmc_bank1_state_get+0x1c>
 800fce2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fce4:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800fce8:	0040      	lsls	r0, r0, #1
 800fcea:	4770      	bx	lr
 800fcec:	2001      	movs	r0, #1
 800fcee:	4770      	bx	lr
 800fcf0:	2003      	movs	r0, #3
 800fcf2:	4770      	bx	lr
 800fcf4:	40022000 	andmi	r2, r2, r0

0800fcf8 <fwdgt_enable>:
 800fcf8:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800fcfc:	4b01      	ldr	r3, [pc, #4]	; (800fd04 <fwdgt_enable+0xc>)
 800fcfe:	601a      	str	r2, [r3, #0]
 800fd00:	4770      	bx	lr
 800fd02:	bf00      	nop
 800fd04:	40003000 	andmi	r3, r0, r0

0800fd08 <fwdgt_counter_reload>:
 800fd08:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800fd0c:	4b01      	ldr	r3, [pc, #4]	; (800fd14 <fwdgt_counter_reload+0xc>)
 800fd0e:	601a      	str	r2, [r3, #0]
 800fd10:	4770      	bx	lr
 800fd12:	bf00      	nop
 800fd14:	40003000 	andmi	r3, r0, r0

0800fd18 <fwdgt_config>:
 800fd18:	f245 5355 	movw	r3, #21845	; 0x5555
 800fd1c:	4a11      	ldr	r2, [pc, #68]	; (800fd64 <fwdgt_config+0x4c>)
 800fd1e:	b510      	push	{r4, lr}
 800fd20:	4c11      	ldr	r4, [pc, #68]	; (800fd68 <fwdgt_config+0x50>)
 800fd22:	6013      	str	r3, [r2, #0]
 800fd24:	68d3      	ldr	r3, [r2, #12]
 800fd26:	3c01      	subs	r4, #1
 800fd28:	f003 0301 	and.w	r3, r3, #1
 800fd2c:	d013      	beq.n	800fd56 <fwdgt_config+0x3e>
 800fd2e:	2b00      	cmp	r3, #0
 800fd30:	d1f8      	bne.n	800fd24 <fwdgt_config+0xc>
 800fd32:	6051      	str	r1, [r2, #4]
 800fd34:	490c      	ldr	r1, [pc, #48]	; (800fd68 <fwdgt_config+0x50>)
 800fd36:	4a0b      	ldr	r2, [pc, #44]	; (800fd64 <fwdgt_config+0x4c>)
 800fd38:	68d3      	ldr	r3, [r2, #12]
 800fd3a:	3901      	subs	r1, #1
 800fd3c:	f003 0302 	and.w	r3, r3, #2
 800fd40:	d00d      	beq.n	800fd5e <fwdgt_config+0x46>
 800fd42:	2b00      	cmp	r3, #0
 800fd44:	d1f8      	bne.n	800fd38 <fwdgt_config+0x20>
 800fd46:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800fd4a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800fd4e:	6090      	str	r0, [r2, #8]
 800fd50:	2001      	movs	r0, #1
 800fd52:	6013      	str	r3, [r2, #0]
 800fd54:	e002      	b.n	800fd5c <fwdgt_config+0x44>
 800fd56:	2b00      	cmp	r3, #0
 800fd58:	d0eb      	beq.n	800fd32 <fwdgt_config+0x1a>
 800fd5a:	2000      	movs	r0, #0
 800fd5c:	bd10      	pop	{r4, pc}
 800fd5e:	2b00      	cmp	r3, #0
 800fd60:	d1fb      	bne.n	800fd5a <fwdgt_config+0x42>
 800fd62:	e7f0      	b.n	800fd46 <fwdgt_config+0x2e>
 800fd64:	40003000 	andmi	r3, r0, r0
 800fd68:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800fd6c <gpio_init>:
 800fd6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd70:	f04f 0c0f 	mov.w	ip, #15
 800fd74:	06cf      	lsls	r7, r1, #27
 800fd76:	f04f 0400 	mov.w	r4, #0
 800fd7a:	f04f 0701 	mov.w	r7, #1
 800fd7e:	f001 050f 	and.w	r5, r1, #15
 800fd82:	bf48      	it	mi
 800fd84:	4315      	orrmi	r5, r2
 800fd86:	fa23 f204 	lsr.w	r2, r3, r4
 800fd8a:	07d6      	lsls	r6, r2, #31
 800fd8c:	d510      	bpl.n	800fdb0 <gpio_init+0x44>
 800fd8e:	00a2      	lsls	r2, r4, #2
 800fd90:	6806      	ldr	r6, [r0, #0]
 800fd92:	fa0c fe02 	lsl.w	lr, ip, r2
 800fd96:	ea26 060e 	bic.w	r6, r6, lr
 800fd9a:	fa05 f202 	lsl.w	r2, r5, r2
 800fd9e:	2928      	cmp	r1, #40	; 0x28
 800fda0:	ea42 0206 	orr.w	r2, r2, r6
 800fda4:	d128      	bne.n	800fdf8 <gpio_init+0x8c>
 800fda6:	fa07 f604 	lsl.w	r6, r7, r4
 800fdaa:	401e      	ands	r6, r3
 800fdac:	6146      	str	r6, [r0, #20]
 800fdae:	6002      	str	r2, [r0, #0]
 800fdb0:	3401      	adds	r4, #1
 800fdb2:	2c08      	cmp	r4, #8
 800fdb4:	d1e7      	bne.n	800fd86 <gpio_init+0x1a>
 800fdb6:	2600      	movs	r6, #0
 800fdb8:	f04f 0c0f 	mov.w	ip, #15
 800fdbc:	2701      	movs	r7, #1
 800fdbe:	f106 0208 	add.w	r2, r6, #8
 800fdc2:	fa23 f402 	lsr.w	r4, r3, r2
 800fdc6:	07e4      	lsls	r4, r4, #31
 800fdc8:	d511      	bpl.n	800fdee <gpio_init+0x82>
 800fdca:	00b4      	lsls	r4, r6, #2
 800fdcc:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800fdd0:	fa0c f804 	lsl.w	r8, ip, r4
 800fdd4:	ea2e 0e08 	bic.w	lr, lr, r8
 800fdd8:	fa05 f404 	lsl.w	r4, r5, r4
 800fddc:	2928      	cmp	r1, #40	; 0x28
 800fdde:	ea44 040e 	orr.w	r4, r4, lr
 800fde2:	d110      	bne.n	800fe06 <gpio_init+0x9a>
 800fde4:	fa07 f202 	lsl.w	r2, r7, r2
 800fde8:	401a      	ands	r2, r3
 800fdea:	6142      	str	r2, [r0, #20]
 800fdec:	6044      	str	r4, [r0, #4]
 800fdee:	3601      	adds	r6, #1
 800fdf0:	2e08      	cmp	r6, #8
 800fdf2:	d1e4      	bne.n	800fdbe <gpio_init+0x52>
 800fdf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fdf8:	2948      	cmp	r1, #72	; 0x48
 800fdfa:	bf02      	ittt	eq
 800fdfc:	fa07 f604 	lsleq.w	r6, r7, r4
 800fe00:	401e      	andeq	r6, r3
 800fe02:	6106      	streq	r6, [r0, #16]
 800fe04:	e7d3      	b.n	800fdae <gpio_init+0x42>
 800fe06:	2948      	cmp	r1, #72	; 0x48
 800fe08:	bf02      	ittt	eq
 800fe0a:	fa07 f202 	lsleq.w	r2, r7, r2
 800fe0e:	401a      	andeq	r2, r3
 800fe10:	6102      	streq	r2, [r0, #16]
 800fe12:	e7eb      	b.n	800fdec <gpio_init+0x80>

0800fe14 <gpio_pin_remap_config>:
 800fe14:	2800      	cmp	r0, #0
 800fe16:	4a16      	ldr	r2, [pc, #88]	; (800fe70 <gpio_pin_remap_config+0x5c>)
 800fe18:	b530      	push	{r4, r5, lr}
 800fe1a:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800fe1e:	bfb4      	ite	lt
 800fe20:	69d3      	ldrlt	r3, [r2, #28]
 800fe22:	6853      	ldrge	r3, [r2, #4]
 800fe24:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800fe28:	b284      	uxth	r4, r0
 800fe2a:	d110      	bne.n	800fe4e <gpio_pin_remap_config+0x3a>
 800fe2c:	6855      	ldr	r5, [r2, #4]
 800fe2e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800fe32:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800fe36:	6055      	str	r5, [r2, #4]
 800fe38:	b119      	cbz	r1, 800fe42 <gpio_pin_remap_config+0x2e>
 800fe3a:	0d42      	lsrs	r2, r0, #21
 800fe3c:	0112      	lsls	r2, r2, #4
 800fe3e:	4094      	lsls	r4, r2
 800fe40:	4323      	orrs	r3, r4
 800fe42:	4a0b      	ldr	r2, [pc, #44]	; (800fe70 <gpio_pin_remap_config+0x5c>)
 800fe44:	2800      	cmp	r0, #0
 800fe46:	bfb4      	ite	lt
 800fe48:	61d3      	strlt	r3, [r2, #28]
 800fe4a:	6053      	strge	r3, [r2, #4]
 800fe4c:	bd30      	pop	{r4, r5, pc}
 800fe4e:	02c2      	lsls	r2, r0, #11
 800fe50:	bf4d      	iteet	mi
 800fe52:	2203      	movmi	r2, #3
 800fe54:	0d42      	lsrpl	r2, r0, #21
 800fe56:	0112      	lslpl	r2, r2, #4
 800fe58:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 800fe5c:	bf4c      	ite	mi
 800fe5e:	40aa      	lslmi	r2, r5
 800fe60:	fa04 f202 	lslpl.w	r2, r4, r2
 800fe64:	ea23 0302 	bic.w	r3, r3, r2
 800fe68:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 800fe6c:	e7e4      	b.n	800fe38 <gpio_pin_remap_config+0x24>
 800fe6e:	bf00      	nop
 800fe70:	40010000 	andmi	r0, r1, r0

0800fe74 <gpio_ethernet_phy_select>:
 800fe74:	4b04      	ldr	r3, [pc, #16]	; (800fe88 <gpio_ethernet_phy_select+0x14>)
 800fe76:	685a      	ldr	r2, [r3, #4]
 800fe78:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800fe7c:	605a      	str	r2, [r3, #4]
 800fe7e:	685a      	ldr	r2, [r3, #4]
 800fe80:	4302      	orrs	r2, r0
 800fe82:	605a      	str	r2, [r3, #4]
 800fe84:	4770      	bx	lr
 800fe86:	bf00      	nop
 800fe88:	40010000 	andmi	r0, r1, r0

0800fe8c <pmu_backup_write_enable>:
 800fe8c:	4a02      	ldr	r2, [pc, #8]	; (800fe98 <pmu_backup_write_enable+0xc>)
 800fe8e:	6813      	ldr	r3, [r2, #0]
 800fe90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800fe94:	6013      	str	r3, [r2, #0]
 800fe96:	4770      	bx	lr
 800fe98:	40007000 	andmi	r7, r0, r0

0800fe9c <rcu_periph_clock_enable>:
 800fe9c:	2201      	movs	r2, #1
 800fe9e:	0983      	lsrs	r3, r0, #6
 800fea0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800fea4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800fea8:	6819      	ldr	r1, [r3, #0]
 800feaa:	f000 001f 	and.w	r0, r0, #31
 800feae:	4082      	lsls	r2, r0
 800feb0:	430a      	orrs	r2, r1
 800feb2:	601a      	str	r2, [r3, #0]
 800feb4:	4770      	bx	lr

0800feb6 <rcu_periph_clock_disable>:
 800feb6:	2101      	movs	r1, #1
 800feb8:	0983      	lsrs	r3, r0, #6
 800feba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800febe:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800fec2:	681a      	ldr	r2, [r3, #0]
 800fec4:	f000 001f 	and.w	r0, r0, #31
 800fec8:	4081      	lsls	r1, r0
 800feca:	ea22 0201 	bic.w	r2, r2, r1
 800fece:	601a      	str	r2, [r3, #0]
 800fed0:	4770      	bx	lr

0800fed2 <rcu_periph_reset_enable>:
 800fed2:	f7ff bfe3 	b.w	800fe9c <rcu_periph_clock_enable>

0800fed6 <rcu_periph_reset_disable>:
 800fed6:	f7ff bfee 	b.w	800feb6 <rcu_periph_clock_disable>
	...

0800fedc <rcu_ckout0_config>:
 800fedc:	4a03      	ldr	r2, [pc, #12]	; (800feec <rcu_ckout0_config+0x10>)
 800fede:	6853      	ldr	r3, [r2, #4]
 800fee0:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800fee4:	4303      	orrs	r3, r0
 800fee6:	6053      	str	r3, [r2, #4]
 800fee8:	4770      	bx	lr
 800feea:	bf00      	nop
 800feec:	40021000 	andmi	r1, r2, r0

0800fef0 <rcu_pll2_config>:
 800fef0:	4b04      	ldr	r3, [pc, #16]	; (800ff04 <rcu_pll2_config+0x14>)
 800fef2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fef4:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800fef8:	62da      	str	r2, [r3, #44]	; 0x2c
 800fefa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800fefc:	4302      	orrs	r2, r0
 800fefe:	62da      	str	r2, [r3, #44]	; 0x2c
 800ff00:	4770      	bx	lr
 800ff02:	bf00      	nop
 800ff04:	40021000 	andmi	r1, r2, r0

0800ff08 <rcu_adc_clock_config>:
 800ff08:	490c      	ldr	r1, [pc, #48]	; (800ff3c <rcu_adc_clock_config+0x34>)
 800ff0a:	2805      	cmp	r0, #5
 800ff0c:	684b      	ldr	r3, [r1, #4]
 800ff0e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800ff12:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800ff16:	d006      	beq.n	800ff26 <rcu_adc_clock_config+0x1e>
 800ff18:	d803      	bhi.n	800ff22 <rcu_adc_clock_config+0x1a>
 800ff1a:	2804      	cmp	r0, #4
 800ff1c:	d10a      	bne.n	800ff34 <rcu_adc_clock_config+0x2c>
 800ff1e:	604b      	str	r3, [r1, #4]
 800ff20:	4770      	bx	lr
 800ff22:	2807      	cmp	r0, #7
 800ff24:	d1fb      	bne.n	800ff1e <rcu_adc_clock_config+0x16>
 800ff26:	4a06      	ldr	r2, [pc, #24]	; (800ff40 <rcu_adc_clock_config+0x38>)
 800ff28:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 800ff2c:	4313      	orrs	r3, r2
 800ff2e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ff32:	e7f4      	b.n	800ff1e <rcu_adc_clock_config+0x16>
 800ff34:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800ff38:	e7f1      	b.n	800ff1e <rcu_adc_clock_config+0x16>
 800ff3a:	bf00      	nop
 800ff3c:	40021000 	andmi	r1, r2, r0
 800ff40:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0800ff44 <rcu_flag_get>:
 800ff44:	0983      	lsrs	r3, r0, #6
 800ff46:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ff4a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800ff4e:	681a      	ldr	r2, [r3, #0]
 800ff50:	2301      	movs	r3, #1
 800ff52:	f000 001f 	and.w	r0, r0, #31
 800ff56:	4083      	lsls	r3, r0
 800ff58:	4213      	tst	r3, r2
 800ff5a:	bf14      	ite	ne
 800ff5c:	2001      	movne	r0, #1
 800ff5e:	2000      	moveq	r0, #0
 800ff60:	4770      	bx	lr
	...

0800ff64 <rcu_osci_stab_wait>:
 800ff64:	281a      	cmp	r0, #26
 800ff66:	b508      	push	{r3, lr}
 800ff68:	d051      	beq.n	801000e <rcu_osci_stab_wait+0xaa>
 800ff6a:	d806      	bhi.n	800ff7a <rcu_osci_stab_wait+0x16>
 800ff6c:	2810      	cmp	r0, #16
 800ff6e:	d015      	beq.n	800ff9c <rcu_osci_stab_wait+0x38>
 800ff70:	2818      	cmp	r0, #24
 800ff72:	d043      	beq.n	800fffc <rcu_osci_stab_wait+0x98>
 800ff74:	b368      	cbz	r0, 800ffd2 <rcu_osci_stab_wait+0x6e>
 800ff76:	2000      	movs	r0, #0
 800ff78:	bd08      	pop	{r3, pc}
 800ff7a:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800ff7e:	d01c      	beq.n	800ffba <rcu_osci_stab_wait+0x56>
 800ff80:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 800ff84:	d02f      	beq.n	800ffe6 <rcu_osci_stab_wait+0x82>
 800ff86:	281c      	cmp	r0, #28
 800ff88:	d1f5      	bne.n	800ff76 <rcu_osci_stab_wait+0x12>
 800ff8a:	4925      	ldr	r1, [pc, #148]	; (8010020 <rcu_osci_stab_wait+0xbc>)
 800ff8c:	201d      	movs	r0, #29
 800ff8e:	f7ff ffd9 	bl	800ff44 <rcu_flag_get>
 800ff92:	b908      	cbnz	r0, 800ff98 <rcu_osci_stab_wait+0x34>
 800ff94:	3901      	subs	r1, #1
 800ff96:	d1f9      	bne.n	800ff8c <rcu_osci_stab_wait+0x28>
 800ff98:	201d      	movs	r0, #29
 800ff9a:	e008      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 800ff9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ffa0:	2011      	movs	r0, #17
 800ffa2:	f7ff ffcf 	bl	800ff44 <rcu_flag_get>
 800ffa6:	b908      	cbnz	r0, 800ffac <rcu_osci_stab_wait+0x48>
 800ffa8:	3901      	subs	r1, #1
 800ffaa:	d1f9      	bne.n	800ffa0 <rcu_osci_stab_wait+0x3c>
 800ffac:	2011      	movs	r0, #17
 800ffae:	f7ff ffc9 	bl	800ff44 <rcu_flag_get>
 800ffb2:	3800      	subs	r0, #0
 800ffb4:	bf18      	it	ne
 800ffb6:	2001      	movne	r0, #1
 800ffb8:	e7de      	b.n	800ff78 <rcu_osci_stab_wait+0x14>
 800ffba:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 800ffbe:	f640 0001 	movw	r0, #2049	; 0x801
 800ffc2:	f7ff ffbf 	bl	800ff44 <rcu_flag_get>
 800ffc6:	b908      	cbnz	r0, 800ffcc <rcu_osci_stab_wait+0x68>
 800ffc8:	3901      	subs	r1, #1
 800ffca:	d1f8      	bne.n	800ffbe <rcu_osci_stab_wait+0x5a>
 800ffcc:	f640 0001 	movw	r0, #2049	; 0x801
 800ffd0:	e7ed      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 800ffd2:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800ffd6:	2001      	movs	r0, #1
 800ffd8:	f7ff ffb4 	bl	800ff44 <rcu_flag_get>
 800ffdc:	b908      	cbnz	r0, 800ffe2 <rcu_osci_stab_wait+0x7e>
 800ffde:	3901      	subs	r1, #1
 800ffe0:	d1f9      	bne.n	800ffd6 <rcu_osci_stab_wait+0x72>
 800ffe2:	2001      	movs	r0, #1
 800ffe4:	e7e3      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 800ffe6:	490e      	ldr	r1, [pc, #56]	; (8010020 <rcu_osci_stab_wait+0xbc>)
 800ffe8:	f640 1001 	movw	r0, #2305	; 0x901
 800ffec:	f7ff ffaa 	bl	800ff44 <rcu_flag_get>
 800fff0:	b908      	cbnz	r0, 800fff6 <rcu_osci_stab_wait+0x92>
 800fff2:	3901      	subs	r1, #1
 800fff4:	d1f8      	bne.n	800ffe8 <rcu_osci_stab_wait+0x84>
 800fff6:	f640 1001 	movw	r0, #2305	; 0x901
 800fffa:	e7d8      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 800fffc:	4908      	ldr	r1, [pc, #32]	; (8010020 <rcu_osci_stab_wait+0xbc>)
 800fffe:	2019      	movs	r0, #25
 8010000:	f7ff ffa0 	bl	800ff44 <rcu_flag_get>
 8010004:	b908      	cbnz	r0, 801000a <rcu_osci_stab_wait+0xa6>
 8010006:	3901      	subs	r1, #1
 8010008:	d1f9      	bne.n	800fffe <rcu_osci_stab_wait+0x9a>
 801000a:	2019      	movs	r0, #25
 801000c:	e7cf      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 801000e:	4904      	ldr	r1, [pc, #16]	; (8010020 <rcu_osci_stab_wait+0xbc>)
 8010010:	201b      	movs	r0, #27
 8010012:	f7ff ff97 	bl	800ff44 <rcu_flag_get>
 8010016:	b908      	cbnz	r0, 801001c <rcu_osci_stab_wait+0xb8>
 8010018:	3901      	subs	r1, #1
 801001a:	d1f9      	bne.n	8010010 <rcu_osci_stab_wait+0xac>
 801001c:	201b      	movs	r0, #27
 801001e:	e7c6      	b.n	800ffae <rcu_osci_stab_wait+0x4a>
 8010020:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08010024 <rcu_osci_on>:
 8010024:	f7ff bf3a 	b.w	800fe9c <rcu_periph_clock_enable>

08010028 <rcu_clock_freq_get>:
 8010028:	4b3e      	ldr	r3, [pc, #248]	; (8010124 <rcu_clock_freq_get+0xfc>)
 801002a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801002c:	4604      	mov	r4, r0
 801002e:	461f      	mov	r7, r3
 8010030:	b089      	sub	sp, #36	; 0x24
 8010032:	ad04      	add	r5, sp, #16
 8010034:	f103 0610 	add.w	r6, r3, #16
 8010038:	462a      	mov	r2, r5
 801003a:	6818      	ldr	r0, [r3, #0]
 801003c:	6859      	ldr	r1, [r3, #4]
 801003e:	3308      	adds	r3, #8
 8010040:	c203      	stmia	r2!, {r0, r1}
 8010042:	42b3      	cmp	r3, r6
 8010044:	4615      	mov	r5, r2
 8010046:	d1f7      	bne.n	8010038 <rcu_clock_freq_get+0x10>
 8010048:	466b      	mov	r3, sp
 801004a:	6938      	ldr	r0, [r7, #16]
 801004c:	6871      	ldr	r1, [r6, #4]
 801004e:	4a36      	ldr	r2, [pc, #216]	; (8010128 <rcu_clock_freq_get+0x100>)
 8010050:	c303      	stmia	r3!, {r0, r1}
 8010052:	c303      	stmia	r3!, {r0, r1}
 8010054:	6853      	ldr	r3, [r2, #4]
 8010056:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801005a:	2b01      	cmp	r3, #1
 801005c:	d053      	beq.n	8010106 <rcu_clock_freq_get+0xde>
 801005e:	2b02      	cmp	r3, #2
 8010060:	d153      	bne.n	801010a <rcu_clock_freq_get+0xe2>
 8010062:	6853      	ldr	r3, [r2, #4]
 8010064:	03dd      	lsls	r5, r3, #15
 8010066:	d523      	bpl.n	80100b0 <rcu_clock_freq_get+0x88>
 8010068:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 801006a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 801006e:	4b2f      	ldr	r3, [pc, #188]	; (801012c <rcu_clock_freq_get+0x104>)
 8010070:	d00e      	beq.n	8010090 <rcu_clock_freq_get+0x68>
 8010072:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8010074:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8010076:	f3c1 1103 	ubfx	r1, r1, #4, #4
 801007a:	f3c0 2003 	ubfx	r0, r0, #8, #4
 801007e:	3101      	adds	r1, #1
 8010080:	280f      	cmp	r0, #15
 8010082:	f100 0502 	add.w	r5, r0, #2
 8010086:	fbb3 f3f1 	udiv	r3, r3, r1
 801008a:	bf08      	it	eq
 801008c:	2514      	moveq	r5, #20
 801008e:	436b      	muls	r3, r5
 8010090:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8010092:	f001 010f 	and.w	r1, r1, #15
 8010096:	3101      	adds	r1, #1
 8010098:	fbb3 f3f1 	udiv	r3, r3, r1
 801009c:	6851      	ldr	r1, [r2, #4]
 801009e:	6850      	ldr	r0, [r2, #4]
 80100a0:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80100a4:	0080      	lsls	r0, r0, #2
 80100a6:	d505      	bpl.n	80100b4 <rcu_clock_freq_get+0x8c>
 80100a8:	f041 0110 	orr.w	r1, r1, #16
 80100ac:	1c48      	adds	r0, r1, #1
 80100ae:	e007      	b.n	80100c0 <rcu_clock_freq_get+0x98>
 80100b0:	4b1f      	ldr	r3, [pc, #124]	; (8010130 <rcu_clock_freq_get+0x108>)
 80100b2:	e7f3      	b.n	801009c <rcu_clock_freq_get+0x74>
 80100b4:	290f      	cmp	r1, #15
 80100b6:	d0f9      	beq.n	80100ac <rcu_clock_freq_get+0x84>
 80100b8:	290d      	cmp	r1, #13
 80100ba:	f101 0002 	add.w	r0, r1, #2
 80100be:	d01d      	beq.n	80100fc <rcu_clock_freq_get+0xd4>
 80100c0:	4358      	muls	r0, r3
 80100c2:	6853      	ldr	r3, [r2, #4]
 80100c4:	6851      	ldr	r1, [r2, #4]
 80100c6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80100ca:	6852      	ldr	r2, [r2, #4]
 80100cc:	3320      	adds	r3, #32
 80100ce:	446b      	add	r3, sp
 80100d0:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80100d4:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80100d8:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80100dc:	3120      	adds	r1, #32
 80100de:	3220      	adds	r2, #32
 80100e0:	4469      	add	r1, sp
 80100e2:	446a      	add	r2, sp
 80100e4:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80100e8:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80100ec:	fa20 f303 	lsr.w	r3, r0, r3
 80100f0:	2c03      	cmp	r4, #3
 80100f2:	d815      	bhi.n	8010120 <rcu_clock_freq_get+0xf8>
 80100f4:	e8df f004 	tbb	[pc, r4]
 80100f8:	110e0b0c 	tstne	lr, ip, lsl #22
 80100fc:	2006      	movs	r0, #6
 80100fe:	0859      	lsrs	r1, r3, #1
 8010100:	fb00 1003 	mla	r0, r0, r3, r1
 8010104:	e7dd      	b.n	80100c2 <rcu_clock_freq_get+0x9a>
 8010106:	4809      	ldr	r0, [pc, #36]	; (801012c <rcu_clock_freq_get+0x104>)
 8010108:	e7db      	b.n	80100c2 <rcu_clock_freq_get+0x9a>
 801010a:	480a      	ldr	r0, [pc, #40]	; (8010134 <rcu_clock_freq_get+0x10c>)
 801010c:	e7d9      	b.n	80100c2 <rcu_clock_freq_get+0x9a>
 801010e:	4618      	mov	r0, r3
 8010110:	b009      	add	sp, #36	; 0x24
 8010112:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010114:	fa23 f001 	lsr.w	r0, r3, r1
 8010118:	e7fa      	b.n	8010110 <rcu_clock_freq_get+0xe8>
 801011a:	fa23 f002 	lsr.w	r0, r3, r2
 801011e:	e7f7      	b.n	8010110 <rcu_clock_freq_get+0xe8>
 8010120:	2000      	movs	r0, #0
 8010122:	e7f5      	b.n	8010110 <rcu_clock_freq_get+0xe8>
 8010124:	08010f20 	stmdaeq	r1, {r5, r8, r9, sl, fp}
 8010128:	40021000 	andmi	r1, r2, r0
 801012c:	017d7840 	cmneq	sp, r0, asr #16
 8010130:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8010134:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08010138 <timer_deinit>:
 8010138:	b508      	push	{r3, lr}
 801013a:	4b2d      	ldr	r3, [pc, #180]	; (80101f0 <timer_deinit+0xb8>)
 801013c:	4298      	cmp	r0, r3
 801013e:	d048      	beq.n	80101d2 <timer_deinit+0x9a>
 8010140:	d816      	bhi.n	8010170 <timer_deinit+0x38>
 8010142:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010146:	4298      	cmp	r0, r3
 8010148:	d03c      	beq.n	80101c4 <timer_deinit+0x8c>
 801014a:	d807      	bhi.n	801015c <timer_deinit+0x24>
 801014c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8010150:	d02a      	beq.n	80101a8 <timer_deinit+0x70>
 8010152:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8010156:	4298      	cmp	r0, r3
 8010158:	d02d      	beq.n	80101b6 <timer_deinit+0x7e>
 801015a:	bd08      	pop	{r3, pc}
 801015c:	4b25      	ldr	r3, [pc, #148]	; (80101f4 <timer_deinit+0xbc>)
 801015e:	4298      	cmp	r0, r3
 8010160:	d1fb      	bne.n	801015a <timer_deinit+0x22>
 8010162:	f240 4003 	movw	r0, #1027	; 0x403
 8010166:	f7ff feb4 	bl	800fed2 <rcu_periph_reset_enable>
 801016a:	f240 4003 	movw	r0, #1027	; 0x403
 801016e:	e017      	b.n	80101a0 <timer_deinit+0x68>
 8010170:	4b21      	ldr	r3, [pc, #132]	; (80101f8 <timer_deinit+0xc0>)
 8010172:	4298      	cmp	r0, r3
 8010174:	d00e      	beq.n	8010194 <timer_deinit+0x5c>
 8010176:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801017a:	4298      	cmp	r0, r3
 801017c:	d030      	beq.n	80101e0 <timer_deinit+0xa8>
 801017e:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8010182:	4298      	cmp	r0, r3
 8010184:	d1e9      	bne.n	801015a <timer_deinit+0x22>
 8010186:	f240 4005 	movw	r0, #1029	; 0x405
 801018a:	f7ff fea2 	bl	800fed2 <rcu_periph_reset_enable>
 801018e:	f240 4005 	movw	r0, #1029	; 0x405
 8010192:	e005      	b.n	80101a0 <timer_deinit+0x68>
 8010194:	f240 300b 	movw	r0, #779	; 0x30b
 8010198:	f7ff fe9b 	bl	800fed2 <rcu_periph_reset_enable>
 801019c:	f240 300b 	movw	r0, #779	; 0x30b
 80101a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80101a4:	f7ff be97 	b.w	800fed6 <rcu_periph_reset_disable>
 80101a8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80101ac:	f7ff fe91 	bl	800fed2 <rcu_periph_reset_enable>
 80101b0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80101b4:	e7f4      	b.n	80101a0 <timer_deinit+0x68>
 80101b6:	f240 4001 	movw	r0, #1025	; 0x401
 80101ba:	f7ff fe8a 	bl	800fed2 <rcu_periph_reset_enable>
 80101be:	f240 4001 	movw	r0, #1025	; 0x401
 80101c2:	e7ed      	b.n	80101a0 <timer_deinit+0x68>
 80101c4:	f240 4002 	movw	r0, #1026	; 0x402
 80101c8:	f7ff fe83 	bl	800fed2 <rcu_periph_reset_enable>
 80101cc:	f240 4002 	movw	r0, #1026	; 0x402
 80101d0:	e7e6      	b.n	80101a0 <timer_deinit+0x68>
 80101d2:	f240 4004 	movw	r0, #1028	; 0x404
 80101d6:	f7ff fe7c 	bl	800fed2 <rcu_periph_reset_enable>
 80101da:	f240 4004 	movw	r0, #1028	; 0x404
 80101de:	e7df      	b.n	80101a0 <timer_deinit+0x68>
 80101e0:	f240 300d 	movw	r0, #781	; 0x30d
 80101e4:	f7ff fe75 	bl	800fed2 <rcu_periph_reset_enable>
 80101e8:	f240 300d 	movw	r0, #781	; 0x30d
 80101ec:	e7d8      	b.n	80101a0 <timer_deinit+0x68>
 80101ee:	bf00      	nop
 80101f0:	40001000 	andmi	r1, r0, r0
 80101f4:	40000c00 	andmi	r0, r0, r0, lsl #24
 80101f8:	40012c00 	andmi	r2, r1, r0, lsl #24

080101fc <timer_init>:
 80101fc:	880b      	ldrh	r3, [r1, #0]
 80101fe:	6283      	str	r3, [r0, #40]	; 0x28
 8010200:	4b26      	ldr	r3, [pc, #152]	; (801029c <timer_init+0xa0>)
 8010202:	4298      	cmp	r0, r3
 8010204:	d018      	beq.n	8010238 <timer_init+0x3c>
 8010206:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801020a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 801020e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8010212:	d011      	beq.n	8010238 <timer_init+0x3c>
 8010214:	4a22      	ldr	r2, [pc, #136]	; (80102a0 <timer_init+0xa4>)
 8010216:	4290      	cmp	r0, r2
 8010218:	d00e      	beq.n	8010238 <timer_init+0x3c>
 801021a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 801021e:	4290      	cmp	r0, r2
 8010220:	d00a      	beq.n	8010238 <timer_init+0x3c>
 8010222:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8010226:	4293      	cmp	r3, r2
 8010228:	d006      	beq.n	8010238 <timer_init+0x3c>
 801022a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 801022e:	4293      	cmp	r3, r2
 8010230:	d002      	beq.n	8010238 <timer_init+0x3c>
 8010232:	4b1c      	ldr	r3, [pc, #112]	; (80102a4 <timer_init+0xa8>)
 8010234:	4298      	cmp	r0, r3
 8010236:	d10f      	bne.n	8010258 <timer_init+0x5c>
 8010238:	6803      	ldr	r3, [r0, #0]
 801023a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801023e:	6003      	str	r3, [r0, #0]
 8010240:	884b      	ldrh	r3, [r1, #2]
 8010242:	6802      	ldr	r2, [r0, #0]
 8010244:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010248:	4313      	orrs	r3, r2
 801024a:	6003      	str	r3, [r0, #0]
 801024c:	888b      	ldrh	r3, [r1, #4]
 801024e:	6802      	ldr	r2, [r0, #0]
 8010250:	f003 0310 	and.w	r3, r3, #16
 8010254:	4313      	orrs	r3, r2
 8010256:	6003      	str	r3, [r0, #0]
 8010258:	688b      	ldr	r3, [r1, #8]
 801025a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801025c:	4b12      	ldr	r3, [pc, #72]	; (80102a8 <timer_init+0xac>)
 801025e:	4298      	cmp	r0, r3
 8010260:	d003      	beq.n	801026a <timer_init+0x6e>
 8010262:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8010266:	4298      	cmp	r0, r3
 8010268:	d104      	bne.n	8010274 <timer_init+0x78>
 801026a:	6943      	ldr	r3, [r0, #20]
 801026c:	f043 0301 	orr.w	r3, r3, #1
 8010270:	6143      	str	r3, [r0, #20]
 8010272:	4770      	bx	lr
 8010274:	6803      	ldr	r3, [r0, #0]
 8010276:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801027a:	6003      	str	r3, [r0, #0]
 801027c:	898b      	ldrh	r3, [r1, #12]
 801027e:	6802      	ldr	r2, [r0, #0]
 8010280:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8010284:	4313      	orrs	r3, r2
 8010286:	6003      	str	r3, [r0, #0]
 8010288:	4b04      	ldr	r3, [pc, #16]	; (801029c <timer_init+0xa0>)
 801028a:	4298      	cmp	r0, r3
 801028c:	d002      	beq.n	8010294 <timer_init+0x98>
 801028e:	4b04      	ldr	r3, [pc, #16]	; (80102a0 <timer_init+0xa4>)
 8010290:	4298      	cmp	r0, r3
 8010292:	d1ea      	bne.n	801026a <timer_init+0x6e>
 8010294:	7b8b      	ldrb	r3, [r1, #14]
 8010296:	6303      	str	r3, [r0, #48]	; 0x30
 8010298:	e7e7      	b.n	801026a <timer_init+0x6e>
 801029a:	bf00      	nop
 801029c:	40012c00 	andmi	r2, r1, r0, lsl #24
 80102a0:	40013400 	andmi	r3, r1, r0, lsl #8
 80102a4:	40002000 	andmi	r2, r0, r0
 80102a8:	40001000 	andmi	r1, r0, r0

080102ac <timer_enable>:
 80102ac:	6803      	ldr	r3, [r0, #0]
 80102ae:	f043 0301 	orr.w	r3, r3, #1
 80102b2:	6003      	str	r3, [r0, #0]
 80102b4:	4770      	bx	lr

080102b6 <timer_channel_output_mode_config>:
 80102b6:	2903      	cmp	r1, #3
 80102b8:	d81a      	bhi.n	80102f0 <timer_channel_output_mode_config+0x3a>
 80102ba:	e8df f001 	tbb	[pc, r1]
 80102be:	1a120a02 	bne	8492ace <__exidx_end+0x4800ca>
 80102c2:	6983      	ldr	r3, [r0, #24]
 80102c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80102c8:	6183      	str	r3, [r0, #24]
 80102ca:	6983      	ldr	r3, [r0, #24]
 80102cc:	4313      	orrs	r3, r2
 80102ce:	6183      	str	r3, [r0, #24]
 80102d0:	4770      	bx	lr
 80102d2:	6983      	ldr	r3, [r0, #24]
 80102d4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80102d8:	6183      	str	r3, [r0, #24]
 80102da:	6983      	ldr	r3, [r0, #24]
 80102dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80102e0:	e7f5      	b.n	80102ce <timer_channel_output_mode_config+0x18>
 80102e2:	69c3      	ldr	r3, [r0, #28]
 80102e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80102e8:	61c3      	str	r3, [r0, #28]
 80102ea:	69c3      	ldr	r3, [r0, #28]
 80102ec:	4313      	orrs	r3, r2
 80102ee:	61c3      	str	r3, [r0, #28]
 80102f0:	4770      	bx	lr
 80102f2:	69c3      	ldr	r3, [r0, #28]
 80102f4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80102f8:	61c3      	str	r3, [r0, #28]
 80102fa:	69c3      	ldr	r3, [r0, #28]
 80102fc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8010300:	e7f5      	b.n	80102ee <timer_channel_output_mode_config+0x38>

08010302 <timer_channel_output_pulse_value_config>:
 8010302:	2903      	cmp	r1, #3
 8010304:	d80a      	bhi.n	801031c <timer_channel_output_pulse_value_config+0x1a>
 8010306:	e8df f001 	tbb	[pc, r1]
 801030a:	08060402 	stmdaeq	r6, {r1, sl}
 801030e:	6342      	str	r2, [r0, #52]	; 0x34
 8010310:	4770      	bx	lr
 8010312:	6382      	str	r2, [r0, #56]	; 0x38
 8010314:	4770      	bx	lr
 8010316:	63c2      	str	r2, [r0, #60]	; 0x3c
 8010318:	4770      	bx	lr
 801031a:	6402      	str	r2, [r0, #64]	; 0x40
 801031c:	4770      	bx	lr

0801031e <timer_interrupt_enable>:
 801031e:	68c3      	ldr	r3, [r0, #12]
 8010320:	430b      	orrs	r3, r1
 8010322:	60c3      	str	r3, [r0, #12]
 8010324:	4770      	bx	lr

08010326 <timer_interrupt_flag_clear>:
 8010326:	43c9      	mvns	r1, r1
 8010328:	6101      	str	r1, [r0, #16]
 801032a:	4770      	bx	lr

0801032c <timer_flag_clear>:
 801032c:	43c9      	mvns	r1, r1
 801032e:	6101      	str	r1, [r0, #16]
 8010330:	4770      	bx	lr
	...

08010334 <usart_deinit>:
 8010334:	b508      	push	{r3, lr}
 8010336:	4b1d      	ldr	r3, [pc, #116]	; (80103ac <usart_deinit+0x78>)
 8010338:	4298      	cmp	r0, r3
 801033a:	d028      	beq.n	801038e <usart_deinit+0x5a>
 801033c:	d808      	bhi.n	8010350 <usart_deinit+0x1c>
 801033e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010342:	4298      	cmp	r0, r3
 8010344:	d015      	beq.n	8010372 <usart_deinit+0x3e>
 8010346:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801034a:	4298      	cmp	r0, r3
 801034c:	d018      	beq.n	8010380 <usart_deinit+0x4c>
 801034e:	bd08      	pop	{r3, pc}
 8010350:	4b17      	ldr	r3, [pc, #92]	; (80103b0 <usart_deinit+0x7c>)
 8010352:	4298      	cmp	r0, r3
 8010354:	d022      	beq.n	801039c <usart_deinit+0x68>
 8010356:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 801035a:	4298      	cmp	r0, r3
 801035c:	d1f7      	bne.n	801034e <usart_deinit+0x1a>
 801035e:	f240 300e 	movw	r0, #782	; 0x30e
 8010362:	f7ff fdb6 	bl	800fed2 <rcu_periph_reset_enable>
 8010366:	f240 300e 	movw	r0, #782	; 0x30e
 801036a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801036e:	f7ff bdb2 	b.w	800fed6 <rcu_periph_reset_disable>
 8010372:	f240 4011 	movw	r0, #1041	; 0x411
 8010376:	f7ff fdac 	bl	800fed2 <rcu_periph_reset_enable>
 801037a:	f240 4011 	movw	r0, #1041	; 0x411
 801037e:	e7f4      	b.n	801036a <usart_deinit+0x36>
 8010380:	f240 4012 	movw	r0, #1042	; 0x412
 8010384:	f7ff fda5 	bl	800fed2 <rcu_periph_reset_enable>
 8010388:	f240 4012 	movw	r0, #1042	; 0x412
 801038c:	e7ed      	b.n	801036a <usart_deinit+0x36>
 801038e:	f240 4013 	movw	r0, #1043	; 0x413
 8010392:	f7ff fd9e 	bl	800fed2 <rcu_periph_reset_enable>
 8010396:	f240 4013 	movw	r0, #1043	; 0x413
 801039a:	e7e6      	b.n	801036a <usart_deinit+0x36>
 801039c:	f240 4014 	movw	r0, #1044	; 0x414
 80103a0:	f7ff fd97 	bl	800fed2 <rcu_periph_reset_enable>
 80103a4:	f240 4014 	movw	r0, #1044	; 0x414
 80103a8:	e7df      	b.n	801036a <usart_deinit+0x36>
 80103aa:	bf00      	nop
 80103ac:	40004c00 	andmi	r4, r0, r0, lsl #24
 80103b0:	40005000 	andmi	r5, r0, r0

080103b4 <usart_baudrate_set>:
 80103b4:	b538      	push	{r3, r4, r5, lr}
 80103b6:	4b11      	ldr	r3, [pc, #68]	; (80103fc <usart_baudrate_set+0x48>)
 80103b8:	4604      	mov	r4, r0
 80103ba:	4298      	cmp	r0, r3
 80103bc:	460d      	mov	r5, r1
 80103be:	d01b      	beq.n	80103f8 <usart_baudrate_set+0x44>
 80103c0:	d809      	bhi.n	80103d6 <usart_baudrate_set+0x22>
 80103c2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80103c6:	4298      	cmp	r0, r3
 80103c8:	d016      	beq.n	80103f8 <usart_baudrate_set+0x44>
 80103ca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80103ce:	4298      	cmp	r0, r3
 80103d0:	d012      	beq.n	80103f8 <usart_baudrate_set+0x44>
 80103d2:	2000      	movs	r0, #0
 80103d4:	e009      	b.n	80103ea <usart_baudrate_set+0x36>
 80103d6:	4b0a      	ldr	r3, [pc, #40]	; (8010400 <usart_baudrate_set+0x4c>)
 80103d8:	4298      	cmp	r0, r3
 80103da:	d00d      	beq.n	80103f8 <usart_baudrate_set+0x44>
 80103dc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80103e0:	4298      	cmp	r0, r3
 80103e2:	d1f6      	bne.n	80103d2 <usart_baudrate_set+0x1e>
 80103e4:	2003      	movs	r0, #3
 80103e6:	f7ff fe1f 	bl	8010028 <rcu_clock_freq_get>
 80103ea:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80103ee:	fbb1 f1f5 	udiv	r1, r1, r5
 80103f2:	b289      	uxth	r1, r1
 80103f4:	60a1      	str	r1, [r4, #8]
 80103f6:	bd38      	pop	{r3, r4, r5, pc}
 80103f8:	2002      	movs	r0, #2
 80103fa:	e7f4      	b.n	80103e6 <usart_baudrate_set+0x32>
 80103fc:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010400:	40005000 	andmi	r5, r0, r0

08010404 <usart_parity_config>:
 8010404:	68c3      	ldr	r3, [r0, #12]
 8010406:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801040a:	60c3      	str	r3, [r0, #12]
 801040c:	68c3      	ldr	r3, [r0, #12]
 801040e:	430b      	orrs	r3, r1
 8010410:	60c3      	str	r3, [r0, #12]
 8010412:	4770      	bx	lr

08010414 <usart_word_length_set>:
 8010414:	68c3      	ldr	r3, [r0, #12]
 8010416:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801041a:	60c3      	str	r3, [r0, #12]
 801041c:	68c3      	ldr	r3, [r0, #12]
 801041e:	430b      	orrs	r3, r1
 8010420:	60c3      	str	r3, [r0, #12]
 8010422:	4770      	bx	lr

08010424 <usart_stop_bit_set>:
 8010424:	6903      	ldr	r3, [r0, #16]
 8010426:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801042a:	6103      	str	r3, [r0, #16]
 801042c:	6903      	ldr	r3, [r0, #16]
 801042e:	430b      	orrs	r3, r1
 8010430:	6103      	str	r3, [r0, #16]
 8010432:	4770      	bx	lr

08010434 <usart_transmit_config>:
 8010434:	68c3      	ldr	r3, [r0, #12]
 8010436:	f023 0308 	bic.w	r3, r3, #8
 801043a:	430b      	orrs	r3, r1
 801043c:	60c3      	str	r3, [r0, #12]
 801043e:	4770      	bx	lr

08010440 <usart_receive_config>:
 8010440:	68c3      	ldr	r3, [r0, #12]
 8010442:	f023 0304 	bic.w	r3, r3, #4
 8010446:	430b      	orrs	r3, r1
 8010448:	60c3      	str	r3, [r0, #12]
 801044a:	4770      	bx	lr

0801044c <usart_hardware_flow_rts_config>:
 801044c:	6943      	ldr	r3, [r0, #20]
 801044e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010452:	430b      	orrs	r3, r1
 8010454:	6143      	str	r3, [r0, #20]
 8010456:	4770      	bx	lr

08010458 <usart_hardware_flow_cts_config>:
 8010458:	6943      	ldr	r3, [r0, #20]
 801045a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801045e:	430b      	orrs	r3, r1
 8010460:	6143      	str	r3, [r0, #20]
 8010462:	4770      	bx	lr

08010464 <usart_dma_transmit_config>:
 8010464:	6943      	ldr	r3, [r0, #20]
 8010466:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801046a:	430b      	orrs	r3, r1
 801046c:	6143      	str	r3, [r0, #20]
 801046e:	4770      	bx	lr

08010470 <usart_flag_get>:
 8010470:	098b      	lsrs	r3, r1, #6
 8010472:	581a      	ldr	r2, [r3, r0]
 8010474:	2301      	movs	r3, #1
 8010476:	f001 011f 	and.w	r1, r1, #31
 801047a:	408b      	lsls	r3, r1
 801047c:	4213      	tst	r3, r2
 801047e:	bf14      	ite	ne
 8010480:	2001      	movne	r0, #1
 8010482:	2000      	moveq	r0, #0
 8010484:	4770      	bx	lr

08010486 <usart_interrupt_enable>:
 8010486:	2301      	movs	r3, #1
 8010488:	b510      	push	{r4, lr}
 801048a:	f3c1 1289 	ubfx	r2, r1, #6, #10
 801048e:	5814      	ldr	r4, [r2, r0]
 8010490:	f001 011f 	and.w	r1, r1, #31
 8010494:	408b      	lsls	r3, r1
 8010496:	4323      	orrs	r3, r4
 8010498:	5013      	str	r3, [r2, r0]
 801049a:	bd10      	pop	{r4, pc}

0801049c <usart_interrupt_disable>:
 801049c:	2201      	movs	r2, #1
 801049e:	b510      	push	{r4, lr}
 80104a0:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80104a4:	5823      	ldr	r3, [r4, r0]
 80104a6:	f001 011f 	and.w	r1, r1, #31
 80104aa:	408a      	lsls	r2, r1
 80104ac:	ea23 0302 	bic.w	r3, r3, r2
 80104b0:	5023      	str	r3, [r4, r0]
 80104b2:	bd10      	pop	{r4, pc}

080104b4 <usart_interrupt_flag_clear>:
 80104b4:	2201      	movs	r2, #1
 80104b6:	b510      	push	{r4, lr}
 80104b8:	0d8c      	lsrs	r4, r1, #22
 80104ba:	5823      	ldr	r3, [r4, r0]
 80104bc:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80104c0:	408a      	lsls	r2, r1
 80104c2:	ea23 0302 	bic.w	r3, r3, r2
 80104c6:	5023      	str	r3, [r4, r0]
 80104c8:	bd10      	pop	{r4, pc}
	...

080104cc <emac_eth_recv>:
 80104cc:	b538      	push	{r3, r4, r5, lr}
 80104ce:	4605      	mov	r5, r0
 80104d0:	f7ff fb84 	bl	800fbdc <enet_rxframe_size_get>
 80104d4:	4604      	mov	r4, r0
 80104d6:	b138      	cbz	r0, 80104e8 <emac_eth_recv+0x1c>
 80104d8:	4b05      	ldr	r3, [pc, #20]	; (80104f0 <emac_eth_recv+0x24>)
 80104da:	2105      	movs	r1, #5
 80104dc:	6818      	ldr	r0, [r3, #0]
 80104de:	f7ff fb2c 	bl	800fb3a <enet_desc_information_get>
 80104e2:	6028      	str	r0, [r5, #0]
 80104e4:	4620      	mov	r0, r4
 80104e6:	bd38      	pop	{r3, r4, r5, pc}
 80104e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80104ec:	e7fb      	b.n	80104e6 <emac_eth_recv+0x1a>
 80104ee:	bf00      	nop
 80104f0:	2000a0a0 	andcs	sl, r0, r0, lsr #1

080104f4 <emac_free_pkt>:
 80104f4:	2100      	movs	r1, #0
 80104f6:	4608      	mov	r0, r1
 80104f8:	f7ff b85c 	b.w	800f5b4 <enet_frame_receive>

080104fc <emac_eth_send>:
 80104fc:	f7ff b89a 	b.w	800f634 <enet_frame_transmit>

08010500 <gd32_adc_init()>:
 8010500:	b510      	push	{r4, lr}
 8010502:	f240 6009 	movw	r0, #1545	; 0x609
 8010506:	4c21      	ldr	r4, [pc, #132]	; (801058c <gd32_adc_init()+0x8c>)
 8010508:	f7ff fcc8 	bl	800fe9c <rcu_periph_clock_enable>
 801050c:	2005      	movs	r0, #5
 801050e:	f7ff fcfb 	bl	800ff08 <rcu_adc_clock_config>
 8010512:	4620      	mov	r0, r4
 8010514:	2201      	movs	r2, #1
 8010516:	f44f 7180 	mov.w	r1, #256	; 0x100
 801051a:	f000 fb55 	bl	8010bc8 <adc_special_function_config>
 801051e:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8010522:	4620      	mov	r0, r4
 8010524:	2102      	movs	r1, #2
 8010526:	f000 fbee 	bl	8010d06 <adc_external_trigger_source_config>
 801052a:	2100      	movs	r1, #0
 801052c:	4620      	mov	r0, r4
 801052e:	f000 fb73 	bl	8010c18 <adc_data_alignment_config>
 8010532:	2000      	movs	r0, #0
 8010534:	f000 fb38 	bl	8010ba8 <adc_mode_config>
 8010538:	2202      	movs	r2, #2
 801053a:	4620      	mov	r0, r4
 801053c:	4611      	mov	r1, r2
 801053e:	f000 fb97 	bl	8010c70 <adc_channel_length_config>
 8010542:	4620      	mov	r0, r4
 8010544:	2307      	movs	r3, #7
 8010546:	2210      	movs	r2, #16
 8010548:	2100      	movs	r1, #0
 801054a:	f000 fbae 	bl	8010caa <adc_inserted_channel_config>
 801054e:	2307      	movs	r3, #7
 8010550:	4620      	mov	r0, r4
 8010552:	2211      	movs	r2, #17
 8010554:	2101      	movs	r1, #1
 8010556:	f000 fba8 	bl	8010caa <adc_inserted_channel_config>
 801055a:	2201      	movs	r2, #1
 801055c:	2102      	movs	r1, #2
 801055e:	4620      	mov	r0, r4
 8010560:	f000 fbe2 	bl	8010d28 <adc_external_trigger_config>
 8010564:	f000 fb7a 	bl	8010c5c <adc_tempsensor_vrefint_enable>
 8010568:	4620      	mov	r0, r4
 801056a:	f000 fb5e 	bl	8010c2a <adc_enable>
 801056e:	2100      	movs	r1, #0
 8010570:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8010574:	f000 fa58 	bl	8010a28 <udelay(unsigned int, unsigned int)>
 8010578:	4620      	mov	r0, r4
 801057a:	f000 fb5e 	bl	8010c3a <adc_calibration_enable>
 801057e:	4620      	mov	r0, r4
 8010580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010584:	2102      	movs	r1, #2
 8010586:	f000 bbea 	b.w	8010d5e <adc_software_trigger_enable>
 801058a:	bf00      	nop
 801058c:	40012400 	andmi	r2, r1, r0, lsl #8

08010590 <_stop() [clone .isra.0]>:
 8010590:	b508      	push	{r3, lr}
 8010592:	4806      	ldr	r0, [pc, #24]	; (80105ac <_stop() [clone .isra.0]+0x1c>)
 8010594:	f000 fc76 	bl	8010e84 <i2c_stop_on_bus>
 8010598:	f640 73ff 	movw	r3, #4095	; 0xfff
 801059c:	4904      	ldr	r1, [pc, #16]	; (80105b0 <_stop() [clone .isra.0]+0x20>)
 801059e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80105a2:	0592      	lsls	r2, r2, #22
 80105a4:	d501      	bpl.n	80105aa <_stop() [clone .isra.0]+0x1a>
 80105a6:	3b01      	subs	r3, #1
 80105a8:	d1f9      	bne.n	801059e <_stop() [clone .isra.0]+0xe>
 80105aa:	bd08      	pop	{r3, pc}
 80105ac:	40005400 	andmi	r5, r0, r0, lsl #8
 80105b0:	40005000 	andmi	r5, r0, r0

080105b4 <gd32_i2c_begin>:
 80105b4:	b510      	push	{r4, lr}
 80105b6:	f240 7015 	movw	r0, #1813	; 0x715
 80105ba:	f7ff fc6f 	bl	800fe9c <rcu_periph_clock_enable>
 80105be:	4c15      	ldr	r4, [pc, #84]	; (8010614 <gd32_i2c_begin+0x60>)
 80105c0:	f240 6003 	movw	r0, #1539	; 0x603
 80105c4:	f7ff fc6a 	bl	800fe9c <rcu_periph_clock_enable>
 80105c8:	f240 6003 	movw	r0, #1539	; 0x603
 80105cc:	f7ff fc66 	bl	800fe9c <rcu_periph_clock_enable>
 80105d0:	4620      	mov	r0, r4
 80105d2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80105d6:	2203      	movs	r2, #3
 80105d8:	211c      	movs	r1, #28
 80105da:	f7ff fbc7 	bl	800fd6c <gpio_init>
 80105de:	f44f 7300 	mov.w	r3, #512	; 0x200
 80105e2:	2203      	movs	r2, #3
 80105e4:	4620      	mov	r0, r4
 80105e6:	211c      	movs	r1, #28
 80105e8:	f7ff fbc0 	bl	800fd6c <gpio_init>
 80105ec:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 80105f0:	2101      	movs	r1, #1
 80105f2:	2002      	movs	r0, #2
 80105f4:	f7ff fc0e 	bl	800fe14 <gpio_pin_remap_config>
 80105f8:	4620      	mov	r0, r4
 80105fa:	4907      	ldr	r1, [pc, #28]	; (8010618 <gd32_i2c_begin+0x64>)
 80105fc:	2200      	movs	r2, #0
 80105fe:	f000 fbbb 	bl	8010d78 <i2c_clock_config>
 8010602:	4620      	mov	r0, r4
 8010604:	f000 fc34 	bl	8010e70 <i2c_enable>
 8010608:	4620      	mov	r0, r4
 801060a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801060e:	2101      	movs	r1, #1
 8010610:	f000 bc14 	b.w	8010e3c <i2c_ack_config>
 8010614:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010618:	00061a80 	andeq	r1, r6, r0, lsl #21

0801061c <gd32_i2c_set_baudrate>:
 801061c:	4601      	mov	r1, r0
 801061e:	2200      	movs	r2, #0
 8010620:	4801      	ldr	r0, [pc, #4]	; (8010628 <gd32_i2c_set_baudrate+0xc>)
 8010622:	f000 bba9 	b.w	8010d78 <i2c_clock_config>
 8010626:	bf00      	nop
 8010628:	40005400 	andmi	r5, r0, r0, lsl #8

0801062c <gd32_i2c_set_address>:
 801062c:	4b01      	ldr	r3, [pc, #4]	; (8010634 <gd32_i2c_set_address+0x8>)
 801062e:	0040      	lsls	r0, r0, #1
 8010630:	7018      	strb	r0, [r3, #0]
 8010632:	4770      	bx	lr
 8010634:	2000dd0c 	andcs	sp, r0, ip, lsl #26

08010638 <gd32_i2c_write>:
 8010638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801063a:	4604      	mov	r4, r0
 801063c:	460f      	mov	r7, r1
 801063e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010642:	4e2e      	ldr	r6, [pc, #184]	; (80106fc <gd32_i2c_write+0xc4>)
 8010644:	f240 6101 	movw	r1, #1537	; 0x601
 8010648:	4630      	mov	r0, r6
 801064a:	f000 fc25 	bl	8010e98 <i2c_flag_get>
 801064e:	b9b0      	cbnz	r0, 801067e <gd32_i2c_write+0x46>
 8010650:	482a      	ldr	r0, [pc, #168]	; (80106fc <gd32_i2c_write+0xc4>)
 8010652:	f000 fc12 	bl	8010e7a <i2c_start_on_bus>
 8010656:	f640 75ff 	movw	r5, #4095	; 0xfff
 801065a:	4e28      	ldr	r6, [pc, #160]	; (80106fc <gd32_i2c_write+0xc4>)
 801065c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010660:	4630      	mov	r0, r6
 8010662:	f000 fc19 	bl	8010e98 <i2c_flag_get>
 8010666:	b190      	cbz	r0, 801068e <gd32_i2c_write+0x56>
 8010668:	4b25      	ldr	r3, [pc, #148]	; (8010700 <gd32_i2c_write+0xc8>)
 801066a:	f06f 0201 	mvn.w	r2, #1
 801066e:	7819      	ldrb	r1, [r3, #0]
 8010670:	4822      	ldr	r0, [pc, #136]	; (80106fc <gd32_i2c_write+0xc4>)
 8010672:	f000 fbf5 	bl	8010e60 <i2c_master_addressing>
 8010676:	f640 75ff 	movw	r5, #4095	; 0xfff
 801067a:	4e20      	ldr	r6, [pc, #128]	; (80106fc <gd32_i2c_write+0xc4>)
 801067c:	e00c      	b.n	8010698 <gd32_i2c_write+0x60>
 801067e:	3d01      	subs	r5, #1
 8010680:	d1e0      	bne.n	8010644 <gd32_i2c_write+0xc>
 8010682:	f7ff ff85 	bl	8010590 <_stop() [clone .isra.0]>
 8010686:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801068a:	4240      	negs	r0, r0
 801068c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801068e:	3d01      	subs	r5, #1
 8010690:	d1e4      	bne.n	801065c <gd32_i2c_write+0x24>
 8010692:	e7f6      	b.n	8010682 <gd32_i2c_write+0x4a>
 8010694:	3d01      	subs	r5, #1
 8010696:	d0f4      	beq.n	8010682 <gd32_i2c_write+0x4a>
 8010698:	f240 5101 	movw	r1, #1281	; 0x501
 801069c:	4630      	mov	r0, r6
 801069e:	f000 fbfb 	bl	8010e98 <i2c_flag_get>
 80106a2:	2800      	cmp	r0, #0
 80106a4:	d0f6      	beq.n	8010694 <gd32_i2c_write+0x5c>
 80106a6:	f240 5101 	movw	r1, #1281	; 0x501
 80106aa:	4814      	ldr	r0, [pc, #80]	; (80106fc <gd32_i2c_write+0xc4>)
 80106ac:	f000 fbff 	bl	8010eae <i2c_flag_clear>
 80106b0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80106b4:	4e11      	ldr	r6, [pc, #68]	; (80106fc <gd32_i2c_write+0xc4>)
 80106b6:	f240 5107 	movw	r1, #1287	; 0x507
 80106ba:	4630      	mov	r0, r6
 80106bc:	f000 fbec 	bl	8010e98 <i2c_flag_get>
 80106c0:	2801      	cmp	r0, #1
 80106c2:	d107      	bne.n	80106d4 <gd32_i2c_write+0x9c>
 80106c4:	4e0d      	ldr	r6, [pc, #52]	; (80106fc <gd32_i2c_write+0xc4>)
 80106c6:	4427      	add	r7, r4
 80106c8:	42a7      	cmp	r7, r4
 80106ca:	d106      	bne.n	80106da <gd32_i2c_write+0xa2>
 80106cc:	f7ff ff60 	bl	8010590 <_stop() [clone .isra.0]>
 80106d0:	2000      	movs	r0, #0
 80106d2:	e7da      	b.n	801068a <gd32_i2c_write+0x52>
 80106d4:	3d01      	subs	r5, #1
 80106d6:	d1ee      	bne.n	80106b6 <gd32_i2c_write+0x7e>
 80106d8:	e7d3      	b.n	8010682 <gd32_i2c_write+0x4a>
 80106da:	4630      	mov	r0, r6
 80106dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80106e0:	f000 fbd5 	bl	8010e8e <i2c_data_transmit>
 80106e4:	f640 75ff 	movw	r5, #4095	; 0xfff
 80106e8:	f240 5102 	movw	r1, #1282	; 0x502
 80106ec:	4630      	mov	r0, r6
 80106ee:	f000 fbd3 	bl	8010e98 <i2c_flag_get>
 80106f2:	2800      	cmp	r0, #0
 80106f4:	d1e8      	bne.n	80106c8 <gd32_i2c_write+0x90>
 80106f6:	3d01      	subs	r5, #1
 80106f8:	d1f6      	bne.n	80106e8 <gd32_i2c_write+0xb0>
 80106fa:	e7c2      	b.n	8010682 <gd32_i2c_write+0x4a>
 80106fc:	40005400 	andmi	r5, r0, r0, lsl #8
 8010700:	2000dd0c 	andcs	sp, r0, ip, lsl #26

08010704 <gd32_i2c_read>:
 8010704:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010708:	4680      	mov	r8, r0
 801070a:	460c      	mov	r4, r1
 801070c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010710:	4f4b      	ldr	r7, [pc, #300]	; (8010840 <gd32_i2c_read+0x13c>)
 8010712:	f240 6101 	movw	r1, #1537	; 0x601
 8010716:	4638      	mov	r0, r7
 8010718:	f000 fbbe 	bl	8010e98 <i2c_flag_get>
 801071c:	4605      	mov	r5, r0
 801071e:	bb08      	cbnz	r0, 8010764 <gd32_i2c_read+0x60>
 8010720:	2c02      	cmp	r4, #2
 8010722:	d103      	bne.n	801072c <gd32_i2c_read+0x28>
 8010724:	4601      	mov	r1, r0
 8010726:	4846      	ldr	r0, [pc, #280]	; (8010840 <gd32_i2c_read+0x13c>)
 8010728:	f000 fb91 	bl	8010e4e <i2c_ackpos_config>
 801072c:	4844      	ldr	r0, [pc, #272]	; (8010840 <gd32_i2c_read+0x13c>)
 801072e:	f000 fba4 	bl	8010e7a <i2c_start_on_bus>
 8010732:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010736:	4f42      	ldr	r7, [pc, #264]	; (8010840 <gd32_i2c_read+0x13c>)
 8010738:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801073c:	4638      	mov	r0, r7
 801073e:	f000 fbab 	bl	8010e98 <i2c_flag_get>
 8010742:	b1a8      	cbz	r0, 8010770 <gd32_i2c_read+0x6c>
 8010744:	4b3f      	ldr	r3, [pc, #252]	; (8010844 <gd32_i2c_read+0x140>)
 8010746:	2201      	movs	r2, #1
 8010748:	7819      	ldrb	r1, [r3, #0]
 801074a:	483d      	ldr	r0, [pc, #244]	; (8010840 <gd32_i2c_read+0x13c>)
 801074c:	f000 fb88 	bl	8010e60 <i2c_master_addressing>
 8010750:	2c02      	cmp	r4, #2
 8010752:	d803      	bhi.n	801075c <gd32_i2c_read+0x58>
 8010754:	2100      	movs	r1, #0
 8010756:	483a      	ldr	r0, [pc, #232]	; (8010840 <gd32_i2c_read+0x13c>)
 8010758:	f000 fb70 	bl	8010e3c <i2c_ack_config>
 801075c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010760:	4f37      	ldr	r7, [pc, #220]	; (8010840 <gd32_i2c_read+0x13c>)
 8010762:	e00a      	b.n	801077a <gd32_i2c_read+0x76>
 8010764:	3e01      	subs	r6, #1
 8010766:	d1d4      	bne.n	8010712 <gd32_i2c_read+0xe>
 8010768:	f7ff ff12 	bl	8010590 <_stop() [clone .isra.0]>
 801076c:	2504      	movs	r5, #4
 801076e:	e04d      	b.n	801080c <gd32_i2c_read+0x108>
 8010770:	3e01      	subs	r6, #1
 8010772:	d1e1      	bne.n	8010738 <gd32_i2c_read+0x34>
 8010774:	e7f8      	b.n	8010768 <gd32_i2c_read+0x64>
 8010776:	3e01      	subs	r6, #1
 8010778:	d0f6      	beq.n	8010768 <gd32_i2c_read+0x64>
 801077a:	f240 5101 	movw	r1, #1281	; 0x501
 801077e:	4638      	mov	r0, r7
 8010780:	f000 fb8a 	bl	8010e98 <i2c_flag_get>
 8010784:	2800      	cmp	r0, #0
 8010786:	d0f6      	beq.n	8010776 <gd32_i2c_read+0x72>
 8010788:	f240 5101 	movw	r1, #1281	; 0x501
 801078c:	482c      	ldr	r0, [pc, #176]	; (8010840 <gd32_i2c_read+0x13c>)
 801078e:	f000 fb8e 	bl	8010eae <i2c_flag_clear>
 8010792:	2c01      	cmp	r4, #1
 8010794:	d102      	bne.n	801079c <gd32_i2c_read+0x98>
 8010796:	482a      	ldr	r0, [pc, #168]	; (8010840 <gd32_i2c_read+0x13c>)
 8010798:	f000 fb74 	bl	8010e84 <i2c_stop_on_bus>
 801079c:	f640 77ff 	movw	r7, #4095	; 0xfff
 80107a0:	4e27      	ldr	r6, [pc, #156]	; (8010840 <gd32_i2c_read+0x13c>)
 80107a2:	e022      	b.n	80107ea <gd32_i2c_read+0xe6>
 80107a4:	2c03      	cmp	r4, #3
 80107a6:	d134      	bne.n	8010812 <gd32_i2c_read+0x10e>
 80107a8:	f640 79ff 	movw	r9, #4095	; 0xfff
 80107ac:	e002      	b.n	80107b4 <gd32_i2c_read+0xb0>
 80107ae:	f1b9 0901 	subs.w	r9, r9, #1
 80107b2:	d0d9      	beq.n	8010768 <gd32_i2c_read+0x64>
 80107b4:	f240 5102 	movw	r1, #1282	; 0x502
 80107b8:	4630      	mov	r0, r6
 80107ba:	f000 fb6d 	bl	8010e98 <i2c_flag_get>
 80107be:	2800      	cmp	r0, #0
 80107c0:	d0f5      	beq.n	80107ae <gd32_i2c_read+0xaa>
 80107c2:	2100      	movs	r1, #0
 80107c4:	4630      	mov	r0, r6
 80107c6:	f000 fb39 	bl	8010e3c <i2c_ack_config>
 80107ca:	f240 5106 	movw	r1, #1286	; 0x506
 80107ce:	4630      	mov	r0, r6
 80107d0:	f000 fb62 	bl	8010e98 <i2c_flag_get>
 80107d4:	b138      	cbz	r0, 80107e6 <gd32_i2c_read+0xe2>
 80107d6:	4630      	mov	r0, r6
 80107d8:	f000 fb5b 	bl	8010e92 <i2c_data_receive>
 80107dc:	f640 77ff 	movw	r7, #4095	; 0xfff
 80107e0:	f808 0b01 	strb.w	r0, [r8], #1
 80107e4:	3c01      	subs	r4, #1
 80107e6:	3f01      	subs	r7, #1
 80107e8:	d0be      	beq.n	8010768 <gd32_i2c_read+0x64>
 80107ea:	2c00      	cmp	r4, #0
 80107ec:	d1da      	bne.n	80107a4 <gd32_i2c_read+0xa0>
 80107ee:	f640 73ff 	movw	r3, #4095	; 0xfff
 80107f2:	4915      	ldr	r1, [pc, #84]	; (8010848 <gd32_i2c_read+0x144>)
 80107f4:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80107f8:	0592      	lsls	r2, r2, #22
 80107fa:	d41d      	bmi.n	8010838 <gd32_i2c_read+0x134>
 80107fc:	2101      	movs	r1, #1
 80107fe:	4810      	ldr	r0, [pc, #64]	; (8010840 <gd32_i2c_read+0x13c>)
 8010800:	f000 fb1c 	bl	8010e3c <i2c_ack_config>
 8010804:	2101      	movs	r1, #1
 8010806:	480e      	ldr	r0, [pc, #56]	; (8010840 <gd32_i2c_read+0x13c>)
 8010808:	f000 fb21 	bl	8010e4e <i2c_ackpos_config>
 801080c:	4628      	mov	r0, r5
 801080e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010812:	2c02      	cmp	r4, #2
 8010814:	d1d9      	bne.n	80107ca <gd32_i2c_read+0xc6>
 8010816:	f640 79ff 	movw	r9, #4095	; 0xfff
 801081a:	e002      	b.n	8010822 <gd32_i2c_read+0x11e>
 801081c:	f1b9 0901 	subs.w	r9, r9, #1
 8010820:	d0a2      	beq.n	8010768 <gd32_i2c_read+0x64>
 8010822:	f240 5102 	movw	r1, #1282	; 0x502
 8010826:	4630      	mov	r0, r6
 8010828:	f000 fb36 	bl	8010e98 <i2c_flag_get>
 801082c:	2800      	cmp	r0, #0
 801082e:	d0f5      	beq.n	801081c <gd32_i2c_read+0x118>
 8010830:	4630      	mov	r0, r6
 8010832:	f000 fb27 	bl	8010e84 <i2c_stop_on_bus>
 8010836:	e7c8      	b.n	80107ca <gd32_i2c_read+0xc6>
 8010838:	3b01      	subs	r3, #1
 801083a:	d1db      	bne.n	80107f4 <gd32_i2c_read+0xf0>
 801083c:	e796      	b.n	801076c <gd32_i2c_read+0x68>
 801083e:	bf00      	nop
 8010840:	40005400 	andmi	r5, r0, r0, lsl #8
 8010844:	2000dd0c 	andcs	sp, r0, ip, lsl #26
 8010848:	40005000 	andmi	r5, r0, r0

0801084c <gd32_uart_begin>:
 801084c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801084e:	461e      	mov	r6, r3
 8010850:	4b63      	ldr	r3, [pc, #396]	; (80109e0 <gd32_uart_begin+0x194>)
 8010852:	4604      	mov	r4, r0
 8010854:	4298      	cmp	r0, r3
 8010856:	460f      	mov	r7, r1
 8010858:	4615      	mov	r5, r2
 801085a:	d03b      	beq.n	80108d4 <gd32_uart_begin+0x88>
 801085c:	d80a      	bhi.n	8010874 <gd32_uart_begin+0x28>
 801085e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010862:	4298      	cmp	r0, r3
 8010864:	d02f      	beq.n	80108c6 <gd32_uart_begin+0x7a>
 8010866:	f240 7012 	movw	r0, #1810	; 0x712
 801086a:	f7ff fb17 	bl	800fe9c <rcu_periph_clock_enable>
 801086e:	f240 6004 	movw	r0, #1540	; 0x604
 8010872:	e008      	b.n	8010886 <gd32_uart_begin+0x3a>
 8010874:	4b5b      	ldr	r3, [pc, #364]	; (80109e4 <gd32_uart_begin+0x198>)
 8010876:	4298      	cmp	r0, r3
 8010878:	d02f      	beq.n	80108da <gd32_uart_begin+0x8e>
 801087a:	f240 600e 	movw	r0, #1550	; 0x60e
 801087e:	f7ff fb0d 	bl	800fe9c <rcu_periph_clock_enable>
 8010882:	f240 6003 	movw	r0, #1539	; 0x603
 8010886:	f7ff fb09 	bl	800fe9c <rcu_periph_clock_enable>
 801088a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801088e:	f7ff fb05 	bl	800fe9c <rcu_periph_clock_enable>
 8010892:	4b53      	ldr	r3, [pc, #332]	; (80109e0 <gd32_uart_begin+0x194>)
 8010894:	429c      	cmp	r4, r3
 8010896:	f000 8084 	beq.w	80109a2 <gd32_uart_begin+0x156>
 801089a:	d829      	bhi.n	80108f0 <gd32_uart_begin+0xa4>
 801089c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80108a0:	429c      	cmp	r4, r3
 80108a2:	d071      	beq.n	8010988 <gd32_uart_begin+0x13c>
 80108a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80108a8:	2203      	movs	r2, #3
 80108aa:	2118      	movs	r1, #24
 80108ac:	484e      	ldr	r0, [pc, #312]	; (80109e8 <gd32_uart_begin+0x19c>)
 80108ae:	f7ff fa5d 	bl	800fd6c <gpio_init>
 80108b2:	2104      	movs	r1, #4
 80108b4:	484c      	ldr	r0, [pc, #304]	; (80109e8 <gd32_uart_begin+0x19c>)
 80108b6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80108ba:	2203      	movs	r2, #3
 80108bc:	f7ff fa56 	bl	800fd6c <gpio_init>
 80108c0:	2101      	movs	r1, #1
 80108c2:	484a      	ldr	r0, [pc, #296]	; (80109ec <gd32_uart_begin+0x1a0>)
 80108c4:	e025      	b.n	8010912 <gd32_uart_begin+0xc6>
 80108c6:	f240 7011 	movw	r0, #1809	; 0x711
 80108ca:	f7ff fae7 	bl	800fe9c <rcu_periph_clock_enable>
 80108ce:	f240 6002 	movw	r0, #1538	; 0x602
 80108d2:	e7d8      	b.n	8010886 <gd32_uart_begin+0x3a>
 80108d4:	f240 7013 	movw	r0, #1811	; 0x713
 80108d8:	e7c7      	b.n	801086a <gd32_uart_begin+0x1e>
 80108da:	f240 7014 	movw	r0, #1812	; 0x714
 80108de:	f7ff fadd 	bl	800fe9c <rcu_periph_clock_enable>
 80108e2:	f240 6004 	movw	r0, #1540	; 0x604
 80108e6:	f7ff fad9 	bl	800fe9c <rcu_periph_clock_enable>
 80108ea:	f240 6005 	movw	r0, #1541	; 0x605
 80108ee:	e7ca      	b.n	8010886 <gd32_uart_begin+0x3a>
 80108f0:	4b3c      	ldr	r3, [pc, #240]	; (80109e4 <gd32_uart_begin+0x198>)
 80108f2:	429c      	cmp	r4, r3
 80108f4:	d062      	beq.n	80109bc <gd32_uart_begin+0x170>
 80108f6:	2340      	movs	r3, #64	; 0x40
 80108f8:	2203      	movs	r2, #3
 80108fa:	2118      	movs	r1, #24
 80108fc:	483c      	ldr	r0, [pc, #240]	; (80109f0 <gd32_uart_begin+0x1a4>)
 80108fe:	f7ff fa35 	bl	800fd6c <gpio_init>
 8010902:	2104      	movs	r1, #4
 8010904:	483a      	ldr	r0, [pc, #232]	; (80109f0 <gd32_uart_begin+0x1a4>)
 8010906:	2380      	movs	r3, #128	; 0x80
 8010908:	2203      	movs	r2, #3
 801090a:	f7ff fa2f 	bl	800fd6c <gpio_init>
 801090e:	2101      	movs	r1, #1
 8010910:	2004      	movs	r0, #4
 8010912:	f7ff fa7f 	bl	800fe14 <gpio_pin_remap_config>
 8010916:	4620      	mov	r0, r4
 8010918:	f7ff fd0c 	bl	8010334 <usart_deinit>
 801091c:	68e3      	ldr	r3, [r4, #12]
 801091e:	4639      	mov	r1, r7
 8010920:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010924:	4620      	mov	r0, r4
 8010926:	60e3      	str	r3, [r4, #12]
 8010928:	f7ff fd44 	bl	80103b4 <usart_baudrate_set>
 801092c:	f1a5 0309 	sub.w	r3, r5, #9
 8010930:	4259      	negs	r1, r3
 8010932:	4159      	adcs	r1, r3
 8010934:	4620      	mov	r0, r4
 8010936:	0309      	lsls	r1, r1, #12
 8010938:	f7ff fd6c 	bl	8010414 <usart_word_length_set>
 801093c:	9906      	ldr	r1, [sp, #24]
 801093e:	4620      	mov	r0, r4
 8010940:	1e8a      	subs	r2, r1, #2
 8010942:	4251      	negs	r1, r2
 8010944:	4151      	adcs	r1, r2
 8010946:	0349      	lsls	r1, r1, #13
 8010948:	f7ff fd6c 	bl	8010424 <usart_stop_bit_set>
 801094c:	2e01      	cmp	r6, #1
 801094e:	d041      	beq.n	80109d4 <gd32_uart_begin+0x188>
 8010950:	2e02      	cmp	r6, #2
 8010952:	d142      	bne.n	80109da <gd32_uart_begin+0x18e>
 8010954:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010958:	4620      	mov	r0, r4
 801095a:	f7ff fd53 	bl	8010404 <usart_parity_config>
 801095e:	2100      	movs	r1, #0
 8010960:	4620      	mov	r0, r4
 8010962:	f7ff fd73 	bl	801044c <usart_hardware_flow_rts_config>
 8010966:	2100      	movs	r1, #0
 8010968:	4620      	mov	r0, r4
 801096a:	f7ff fd75 	bl	8010458 <usart_hardware_flow_cts_config>
 801096e:	2104      	movs	r1, #4
 8010970:	4620      	mov	r0, r4
 8010972:	f7ff fd65 	bl	8010440 <usart_receive_config>
 8010976:	2108      	movs	r1, #8
 8010978:	4620      	mov	r0, r4
 801097a:	f7ff fd5b 	bl	8010434 <usart_transmit_config>
 801097e:	68e3      	ldr	r3, [r4, #12]
 8010980:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010984:	60e3      	str	r3, [r4, #12]
 8010986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010988:	2304      	movs	r3, #4
 801098a:	2203      	movs	r2, #3
 801098c:	2118      	movs	r1, #24
 801098e:	4819      	ldr	r0, [pc, #100]	; (80109f4 <gd32_uart_begin+0x1a8>)
 8010990:	f7ff f9ec 	bl	800fd6c <gpio_init>
 8010994:	2308      	movs	r3, #8
 8010996:	2203      	movs	r2, #3
 8010998:	2104      	movs	r1, #4
 801099a:	4816      	ldr	r0, [pc, #88]	; (80109f4 <gd32_uart_begin+0x1a8>)
 801099c:	f7ff f9e6 	bl	800fd6c <gpio_init>
 80109a0:	e7b9      	b.n	8010916 <gd32_uart_begin+0xca>
 80109a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80109a6:	2203      	movs	r2, #3
 80109a8:	2118      	movs	r1, #24
 80109aa:	480f      	ldr	r0, [pc, #60]	; (80109e8 <gd32_uart_begin+0x19c>)
 80109ac:	f7ff f9de 	bl	800fd6c <gpio_init>
 80109b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80109b4:	2203      	movs	r2, #3
 80109b6:	2104      	movs	r1, #4
 80109b8:	480b      	ldr	r0, [pc, #44]	; (80109e8 <gd32_uart_begin+0x19c>)
 80109ba:	e7ef      	b.n	801099c <gd32_uart_begin+0x150>
 80109bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80109c0:	2203      	movs	r2, #3
 80109c2:	2118      	movs	r1, #24
 80109c4:	4808      	ldr	r0, [pc, #32]	; (80109e8 <gd32_uart_begin+0x19c>)
 80109c6:	f7ff f9d1 	bl	800fd6c <gpio_init>
 80109ca:	2304      	movs	r3, #4
 80109cc:	2203      	movs	r2, #3
 80109ce:	4619      	mov	r1, r3
 80109d0:	4809      	ldr	r0, [pc, #36]	; (80109f8 <gd32_uart_begin+0x1ac>)
 80109d2:	e7e3      	b.n	801099c <gd32_uart_begin+0x150>
 80109d4:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80109d8:	e7be      	b.n	8010958 <gd32_uart_begin+0x10c>
 80109da:	2100      	movs	r1, #0
 80109dc:	e7bc      	b.n	8010958 <gd32_uart_begin+0x10c>
 80109de:	bf00      	nop
 80109e0:	40004c00 	andmi	r4, r0, r0, lsl #24
 80109e4:	40005000 	andmi	r5, r0, r0
 80109e8:	40011000 	andmi	r1, r1, r0
 80109ec:	00140010 	andseq	r0, r4, r0, lsl r0
 80109f0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80109f4:	40010800 	andmi	r0, r1, r0, lsl #16
 80109f8:	40011400 	andmi	r1, r1, r0, lsl #8

080109fc <micros_init()>:
 80109fc:	4770      	bx	lr
	...

08010a00 <udelay_init()>:
 8010a00:	4a07      	ldr	r2, [pc, #28]	; (8010a20 <udelay_init()+0x20>)
 8010a02:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010a06:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010a0a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8010a0e:	2200      	movs	r2, #0
 8010a10:	4b04      	ldr	r3, [pc, #16]	; (8010a24 <udelay_init()+0x24>)
 8010a12:	605a      	str	r2, [r3, #4]
 8010a14:	681a      	ldr	r2, [r3, #0]
 8010a16:	f042 0201 	orr.w	r2, r2, #1
 8010a1a:	601a      	str	r2, [r3, #0]
 8010a1c:	4770      	bx	lr
 8010a1e:	bf00      	nop
 8010a20:	e000ed00 	and	lr, r0, r0, lsl #26
 8010a24:	e0001000 	and	r1, r0, r0

08010a28 <udelay(unsigned int, unsigned int)>:
 8010a28:	236c      	movs	r3, #108	; 0x6c
 8010a2a:	b530      	push	{r4, r5, lr}
 8010a2c:	4358      	muls	r0, r3
 8010a2e:	b909      	cbnz	r1, 8010a34 <udelay(unsigned int, unsigned int)+0xc>
 8010a30:	4b08      	ldr	r3, [pc, #32]	; (8010a54 <udelay(unsigned int, unsigned int)+0x2c>)
 8010a32:	6859      	ldr	r1, [r3, #4]
 8010a34:	2300      	movs	r3, #0
 8010a36:	4c07      	ldr	r4, [pc, #28]	; (8010a54 <udelay(unsigned int, unsigned int)+0x2c>)
 8010a38:	6862      	ldr	r2, [r4, #4]
 8010a3a:	4291      	cmp	r1, r2
 8010a3c:	d0fc      	beq.n	8010a38 <udelay(unsigned int, unsigned int)+0x10>
 8010a3e:	bf2a      	itet	cs
 8010a40:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8010a44:	189b      	addcc	r3, r3, r2
 8010a46:	195b      	addcs	r3, r3, r5
 8010a48:	1a5b      	subs	r3, r3, r1
 8010a4a:	4283      	cmp	r3, r0
 8010a4c:	d300      	bcc.n	8010a50 <udelay(unsigned int, unsigned int)+0x28>
 8010a4e:	bd30      	pop	{r4, r5, pc}
 8010a50:	4611      	mov	r1, r2
 8010a52:	e7f1      	b.n	8010a38 <udelay(unsigned int, unsigned int)+0x10>
 8010a54:	e0001000 	and	r1, r0, r0

08010a58 <emac_start(unsigned char*)>:
 8010a58:	b538      	push	{r3, r4, r5, lr}
 8010a5a:	4605      	mov	r5, r0
 8010a5c:	f240 6002 	movw	r0, #1538	; 0x602
 8010a60:	f7ff fa1c 	bl	800fe9c <rcu_periph_clock_enable>
 8010a64:	f240 6003 	movw	r0, #1539	; 0x603
 8010a68:	f7ff fa18 	bl	800fe9c <rcu_periph_clock_enable>
 8010a6c:	f240 6004 	movw	r0, #1540	; 0x604
 8010a70:	f7ff fa14 	bl	800fe9c <rcu_periph_clock_enable>
 8010a74:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010a78:	f7ff fa10 	bl	800fe9c <rcu_periph_clock_enable>
 8010a7c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010a80:	2203      	movs	r2, #3
 8010a82:	2118      	movs	r1, #24
 8010a84:	4843      	ldr	r0, [pc, #268]	; (8010b94 <emac_start(unsigned char*)+0x13c>)
 8010a86:	f7ff f971 	bl	800fd6c <gpio_init>
 8010a8a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8010a8e:	f7ff fa2f 	bl	800fef0 <rcu_pll2_config>
 8010a92:	201c      	movs	r0, #28
 8010a94:	f7ff fac6 	bl	8010024 <rcu_osci_on>
 8010a98:	201c      	movs	r0, #28
 8010a9a:	f7ff fa63 	bl	800ff64 <rcu_osci_stab_wait>
 8010a9e:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8010aa2:	f7ff fa1b 	bl	800fedc <rcu_ckout0_config>
 8010aa6:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8010aaa:	f7ff f9e3 	bl	800fe74 <gpio_ethernet_phy_select>
 8010aae:	2302      	movs	r3, #2
 8010ab0:	2203      	movs	r2, #3
 8010ab2:	2104      	movs	r1, #4
 8010ab4:	4837      	ldr	r0, [pc, #220]	; (8010b94 <emac_start(unsigned char*)+0x13c>)
 8010ab6:	f7ff f959 	bl	800fd6c <gpio_init>
 8010aba:	2304      	movs	r3, #4
 8010abc:	2203      	movs	r2, #3
 8010abe:	2118      	movs	r1, #24
 8010ac0:	4834      	ldr	r0, [pc, #208]	; (8010b94 <emac_start(unsigned char*)+0x13c>)
 8010ac2:	f7ff f953 	bl	800fd6c <gpio_init>
 8010ac6:	2380      	movs	r3, #128	; 0x80
 8010ac8:	2203      	movs	r2, #3
 8010aca:	2104      	movs	r1, #4
 8010acc:	4831      	ldr	r0, [pc, #196]	; (8010b94 <emac_start(unsigned char*)+0x13c>)
 8010ace:	f7ff f94d 	bl	800fd6c <gpio_init>
 8010ad2:	2302      	movs	r3, #2
 8010ad4:	2203      	movs	r2, #3
 8010ad6:	2118      	movs	r1, #24
 8010ad8:	482f      	ldr	r0, [pc, #188]	; (8010b98 <emac_start(unsigned char*)+0x140>)
 8010ada:	f7ff f947 	bl	800fd6c <gpio_init>
 8010ade:	2310      	movs	r3, #16
 8010ae0:	2203      	movs	r2, #3
 8010ae2:	2104      	movs	r1, #4
 8010ae4:	482c      	ldr	r0, [pc, #176]	; (8010b98 <emac_start(unsigned char*)+0x140>)
 8010ae6:	f7ff f941 	bl	800fd6c <gpio_init>
 8010aea:	2320      	movs	r3, #32
 8010aec:	2203      	movs	r2, #3
 8010aee:	2104      	movs	r1, #4
 8010af0:	4829      	ldr	r0, [pc, #164]	; (8010b98 <emac_start(unsigned char*)+0x140>)
 8010af2:	f7ff f93b 	bl	800fd6c <gpio_init>
 8010af6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010afa:	2203      	movs	r2, #3
 8010afc:	2118      	movs	r1, #24
 8010afe:	4827      	ldr	r0, [pc, #156]	; (8010b9c <emac_start(unsigned char*)+0x144>)
 8010b00:	f7ff f934 	bl	800fd6c <gpio_init>
 8010b04:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8010b08:	2203      	movs	r2, #3
 8010b0a:	2118      	movs	r1, #24
 8010b0c:	4823      	ldr	r0, [pc, #140]	; (8010b9c <emac_start(unsigned char*)+0x144>)
 8010b0e:	f7ff f92d 	bl	800fd6c <gpio_init>
 8010b12:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010b16:	2203      	movs	r2, #3
 8010b18:	2118      	movs	r1, #24
 8010b1a:	4820      	ldr	r0, [pc, #128]	; (8010b9c <emac_start(unsigned char*)+0x144>)
 8010b1c:	f7ff f926 	bl	800fd6c <gpio_init>
 8010b20:	f240 500e 	movw	r0, #1294	; 0x50e
 8010b24:	f7ff f9ba 	bl	800fe9c <rcu_periph_clock_enable>
 8010b28:	f240 500f 	movw	r0, #1295	; 0x50f
 8010b2c:	f7ff f9b6 	bl	800fe9c <rcu_periph_clock_enable>
 8010b30:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8010b34:	f7ff f9b2 	bl	800fe9c <rcu_periph_clock_enable>
 8010b38:	f7ff f880 	bl	800fc3c <enet_deinit>
 8010b3c:	f7fe fcde 	bl	800f4fc <enet_software_reset>
 8010b40:	4604      	mov	r4, r0
 8010b42:	b138      	cbz	r0, 8010b54 <emac_start(unsigned char*)+0xfc>
 8010b44:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8010b48:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010b4c:	2001      	movs	r0, #1
 8010b4e:	f7fe fe59 	bl	800f804 <enet_init>
 8010b52:	4604      	mov	r4, r0
 8010b54:	4628      	mov	r0, r5
 8010b56:	f000 f9bd 	bl	8010ed4 <mac_address_get(unsigned char*)>
 8010b5a:	4629      	mov	r1, r5
 8010b5c:	2000      	movs	r0, #0
 8010b5e:	f7fe fdb1 	bl	800f6c4 <enet_mac_address_set>
 8010b62:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8010b66:	f7fe fcdd 	bl	800f524 <enet_descriptors_chain_init>
 8010b6a:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8010b6e:	f7fe fcd9 	bl	800f524 <enet_descriptors_chain_init>
 8010b72:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010b76:	480a      	ldr	r0, [pc, #40]	; (8010ba0 <emac_start(unsigned char*)+0x148>)
 8010b78:	f7fe fd9e 	bl	800f6b8 <enet_transmit_checksum_config>
 8010b7c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8010b80:	4808      	ldr	r0, [pc, #32]	; (8010ba4 <emac_start(unsigned char*)+0x14c>)
 8010b82:	f7fe fd99 	bl	800f6b8 <enet_transmit_checksum_config>
 8010b86:	f7fe ffd1 	bl	800fb2c <enet_enable>
 8010b8a:	fab4 f084 	clz	r0, r4
 8010b8e:	0940      	lsrs	r0, r0, #5
 8010b90:	4240      	negs	r0, r0
 8010b92:	bd38      	pop	{r3, r4, r5, pc}
 8010b94:	40010800 	andmi	r0, r1, r0, lsl #16
 8010b98:	40011000 	andmi	r1, r1, r0
 8010b9c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010ba0:	2000dcec 	andcs	sp, r0, ip, ror #25
 8010ba4:	2000dcfc 	strdcs	sp, [r0], -ip

08010ba8 <adc_mode_config>:
 8010ba8:	4b06      	ldr	r3, [pc, #24]	; (8010bc4 <adc_mode_config+0x1c>)
 8010baa:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010bae:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8010bb2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010bb6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010bba:	4302      	orrs	r2, r0
 8010bbc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010bc0:	4770      	bx	lr
 8010bc2:	bf00      	nop
 8010bc4:	40012000 	andmi	r2, r1, r0

08010bc8 <adc_special_function_config>:
 8010bc8:	b510      	push	{r4, lr}
 8010bca:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8010bce:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8010bd2:	f001 0102 	and.w	r1, r1, #2
 8010bd6:	b17a      	cbz	r2, 8010bf8 <adc_special_function_config+0x30>
 8010bd8:	b11b      	cbz	r3, 8010be2 <adc_special_function_config+0x1a>
 8010bda:	6843      	ldr	r3, [r0, #4]
 8010bdc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010be0:	6043      	str	r3, [r0, #4]
 8010be2:	b11c      	cbz	r4, 8010bec <adc_special_function_config+0x24>
 8010be4:	6843      	ldr	r3, [r0, #4]
 8010be6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8010bea:	6043      	str	r3, [r0, #4]
 8010bec:	b119      	cbz	r1, 8010bf6 <adc_special_function_config+0x2e>
 8010bee:	6883      	ldr	r3, [r0, #8]
 8010bf0:	f043 0302 	orr.w	r3, r3, #2
 8010bf4:	6083      	str	r3, [r0, #8]
 8010bf6:	bd10      	pop	{r4, pc}
 8010bf8:	b11b      	cbz	r3, 8010c02 <adc_special_function_config+0x3a>
 8010bfa:	6843      	ldr	r3, [r0, #4]
 8010bfc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010c00:	6043      	str	r3, [r0, #4]
 8010c02:	b11c      	cbz	r4, 8010c0c <adc_special_function_config+0x44>
 8010c04:	6843      	ldr	r3, [r0, #4]
 8010c06:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8010c0a:	6043      	str	r3, [r0, #4]
 8010c0c:	2900      	cmp	r1, #0
 8010c0e:	d0f2      	beq.n	8010bf6 <adc_special_function_config+0x2e>
 8010c10:	6883      	ldr	r3, [r0, #8]
 8010c12:	f023 0302 	bic.w	r3, r3, #2
 8010c16:	e7ed      	b.n	8010bf4 <adc_special_function_config+0x2c>

08010c18 <adc_data_alignment_config>:
 8010c18:	6883      	ldr	r3, [r0, #8]
 8010c1a:	b119      	cbz	r1, 8010c24 <adc_data_alignment_config+0xc>
 8010c1c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010c20:	6083      	str	r3, [r0, #8]
 8010c22:	4770      	bx	lr
 8010c24:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010c28:	e7fa      	b.n	8010c20 <adc_data_alignment_config+0x8>

08010c2a <adc_enable>:
 8010c2a:	6883      	ldr	r3, [r0, #8]
 8010c2c:	07db      	lsls	r3, r3, #31
 8010c2e:	bf5e      	ittt	pl
 8010c30:	6883      	ldrpl	r3, [r0, #8]
 8010c32:	f043 0301 	orrpl.w	r3, r3, #1
 8010c36:	6083      	strpl	r3, [r0, #8]
 8010c38:	4770      	bx	lr

08010c3a <adc_calibration_enable>:
 8010c3a:	6883      	ldr	r3, [r0, #8]
 8010c3c:	f100 0208 	add.w	r2, r0, #8
 8010c40:	f043 0308 	orr.w	r3, r3, #8
 8010c44:	6083      	str	r3, [r0, #8]
 8010c46:	6813      	ldr	r3, [r2, #0]
 8010c48:	0719      	lsls	r1, r3, #28
 8010c4a:	d4fc      	bmi.n	8010c46 <adc_calibration_enable+0xc>
 8010c4c:	6883      	ldr	r3, [r0, #8]
 8010c4e:	f043 0304 	orr.w	r3, r3, #4
 8010c52:	6083      	str	r3, [r0, #8]
 8010c54:	6813      	ldr	r3, [r2, #0]
 8010c56:	075b      	lsls	r3, r3, #29
 8010c58:	d4fc      	bmi.n	8010c54 <adc_calibration_enable+0x1a>
 8010c5a:	4770      	bx	lr

08010c5c <adc_tempsensor_vrefint_enable>:
 8010c5c:	4a03      	ldr	r2, [pc, #12]	; (8010c6c <adc_tempsensor_vrefint_enable+0x10>)
 8010c5e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8010c62:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8010c66:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8010c6a:	4770      	bx	lr
 8010c6c:	40012000 	andmi	r2, r1, r0

08010c70 <adc_channel_length_config>:
 8010c70:	2901      	cmp	r1, #1
 8010c72:	d002      	beq.n	8010c7a <adc_channel_length_config+0xa>
 8010c74:	2902      	cmp	r1, #2
 8010c76:	d00c      	beq.n	8010c92 <adc_channel_length_config+0x22>
 8010c78:	4770      	bx	lr
 8010c7a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010c7c:	3a01      	subs	r2, #1
 8010c7e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8010c82:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010c84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010c86:	0512      	lsls	r2, r2, #20
 8010c88:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8010c8c:	431a      	orrs	r2, r3
 8010c8e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8010c90:	4770      	bx	lr
 8010c92:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010c94:	3a01      	subs	r2, #1
 8010c96:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8010c9a:	6383      	str	r3, [r0, #56]	; 0x38
 8010c9c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010c9e:	0512      	lsls	r2, r2, #20
 8010ca0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8010ca4:	431a      	orrs	r2, r3
 8010ca6:	6382      	str	r2, [r0, #56]	; 0x38
 8010ca8:	4770      	bx	lr

08010caa <adc_inserted_channel_config>:
 8010caa:	b530      	push	{r4, r5, lr}
 8010cac:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8010cae:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010cb0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8010cb4:	1a61      	subs	r1, r4, r1
 8010cb6:	f06f 0404 	mvn.w	r4, #4
 8010cba:	4361      	muls	r1, r4
 8010cbc:	241f      	movs	r4, #31
 8010cbe:	310f      	adds	r1, #15
 8010cc0:	408c      	lsls	r4, r1
 8010cc2:	ea25 0504 	bic.w	r5, r5, r4
 8010cc6:	fa02 f101 	lsl.w	r1, r2, r1
 8010cca:	4329      	orrs	r1, r5
 8010ccc:	2a09      	cmp	r2, #9
 8010cce:	6381      	str	r1, [r0, #56]	; 0x38
 8010cd0:	d80b      	bhi.n	8010cea <adc_inserted_channel_config+0x40>
 8010cd2:	2407      	movs	r4, #7
 8010cd4:	6901      	ldr	r1, [r0, #16]
 8010cd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010cda:	4094      	lsls	r4, r2
 8010cdc:	ea21 0104 	bic.w	r1, r1, r4
 8010ce0:	fa03 f202 	lsl.w	r2, r3, r2
 8010ce4:	430a      	orrs	r2, r1
 8010ce6:	6102      	str	r2, [r0, #16]
 8010ce8:	bd30      	pop	{r4, r5, pc}
 8010cea:	2a11      	cmp	r2, #17
 8010cec:	d8fc      	bhi.n	8010ce8 <adc_inserted_channel_config+0x3e>
 8010cee:	2407      	movs	r4, #7
 8010cf0:	3a0a      	subs	r2, #10
 8010cf2:	68c1      	ldr	r1, [r0, #12]
 8010cf4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010cf8:	4094      	lsls	r4, r2
 8010cfa:	ea21 0104 	bic.w	r1, r1, r4
 8010cfe:	4093      	lsls	r3, r2
 8010d00:	430b      	orrs	r3, r1
 8010d02:	60c3      	str	r3, [r0, #12]
 8010d04:	e7f0      	b.n	8010ce8 <adc_inserted_channel_config+0x3e>

08010d06 <adc_external_trigger_source_config>:
 8010d06:	2901      	cmp	r1, #1
 8010d08:	d002      	beq.n	8010d10 <adc_external_trigger_source_config+0xa>
 8010d0a:	2902      	cmp	r1, #2
 8010d0c:	d008      	beq.n	8010d20 <adc_external_trigger_source_config+0x1a>
 8010d0e:	4770      	bx	lr
 8010d10:	6883      	ldr	r3, [r0, #8]
 8010d12:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8010d16:	6083      	str	r3, [r0, #8]
 8010d18:	6883      	ldr	r3, [r0, #8]
 8010d1a:	4313      	orrs	r3, r2
 8010d1c:	6083      	str	r3, [r0, #8]
 8010d1e:	4770      	bx	lr
 8010d20:	6883      	ldr	r3, [r0, #8]
 8010d22:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8010d26:	e7f6      	b.n	8010d16 <adc_external_trigger_source_config+0x10>

08010d28 <adc_external_trigger_config>:
 8010d28:	f001 0301 	and.w	r3, r1, #1
 8010d2c:	f001 0102 	and.w	r1, r1, #2
 8010d30:	b152      	cbz	r2, 8010d48 <adc_external_trigger_config+0x20>
 8010d32:	b11b      	cbz	r3, 8010d3c <adc_external_trigger_config+0x14>
 8010d34:	6883      	ldr	r3, [r0, #8]
 8010d36:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010d3a:	6083      	str	r3, [r0, #8]
 8010d3c:	b119      	cbz	r1, 8010d46 <adc_external_trigger_config+0x1e>
 8010d3e:	6883      	ldr	r3, [r0, #8]
 8010d40:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010d44:	6083      	str	r3, [r0, #8]
 8010d46:	4770      	bx	lr
 8010d48:	b11b      	cbz	r3, 8010d52 <adc_external_trigger_config+0x2a>
 8010d4a:	6883      	ldr	r3, [r0, #8]
 8010d4c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8010d50:	6083      	str	r3, [r0, #8]
 8010d52:	2900      	cmp	r1, #0
 8010d54:	d0f7      	beq.n	8010d46 <adc_external_trigger_config+0x1e>
 8010d56:	6883      	ldr	r3, [r0, #8]
 8010d58:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8010d5c:	e7f2      	b.n	8010d44 <adc_external_trigger_config+0x1c>

08010d5e <adc_software_trigger_enable>:
 8010d5e:	07ca      	lsls	r2, r1, #31
 8010d60:	bf42      	ittt	mi
 8010d62:	6883      	ldrmi	r3, [r0, #8]
 8010d64:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8010d68:	6083      	strmi	r3, [r0, #8]
 8010d6a:	078b      	lsls	r3, r1, #30
 8010d6c:	bf42      	ittt	mi
 8010d6e:	6883      	ldrmi	r3, [r0, #8]
 8010d70:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8010d74:	6083      	strmi	r3, [r0, #8]
 8010d76:	4770      	bx	lr

08010d78 <i2c_clock_config>:
 8010d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d7a:	4605      	mov	r5, r0
 8010d7c:	2002      	movs	r0, #2
 8010d7e:	460c      	mov	r4, r1
 8010d80:	4617      	mov	r7, r2
 8010d82:	f7ff f951 	bl	8010028 <rcu_clock_freq_get>
 8010d86:	4603      	mov	r3, r0
 8010d88:	4828      	ldr	r0, [pc, #160]	; (8010e2c <i2c_clock_config+0xb4>)
 8010d8a:	4a29      	ldr	r2, [pc, #164]	; (8010e30 <i2c_clock_config+0xb8>)
 8010d8c:	fbb3 f0f0 	udiv	r0, r3, r0
 8010d90:	4293      	cmp	r3, r2
 8010d92:	bf34      	ite	cc
 8010d94:	4601      	movcc	r1, r0
 8010d96:	2136      	movcs	r1, #54	; 0x36
 8010d98:	686e      	ldr	r6, [r5, #4]
 8010d9a:	4a26      	ldr	r2, [pc, #152]	; (8010e34 <i2c_clock_config+0xbc>)
 8010d9c:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8010da0:	430e      	orrs	r6, r1
 8010da2:	4294      	cmp	r4, r2
 8010da4:	606e      	str	r6, [r5, #4]
 8010da6:	d816      	bhi.n	8010dd6 <i2c_clock_config+0x5e>
 8010da8:	3001      	adds	r0, #1
 8010daa:	2835      	cmp	r0, #53	; 0x35
 8010dac:	d90d      	bls.n	8010dca <i2c_clock_config+0x52>
 8010dae:	2236      	movs	r2, #54	; 0x36
 8010db0:	622a      	str	r2, [r5, #32]
 8010db2:	0064      	lsls	r4, r4, #1
 8010db4:	fbb3 f4f4 	udiv	r4, r3, r4
 8010db8:	2c04      	cmp	r4, #4
 8010dba:	bf38      	it	cc
 8010dbc:	2404      	movcc	r4, #4
 8010dbe:	69ea      	ldr	r2, [r5, #28]
 8010dc0:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8010dc4:	4314      	orrs	r4, r2
 8010dc6:	61ec      	str	r4, [r5, #28]
 8010dc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010dca:	2802      	cmp	r0, #2
 8010dcc:	d801      	bhi.n	8010dd2 <i2c_clock_config+0x5a>
 8010dce:	2202      	movs	r2, #2
 8010dd0:	e7ee      	b.n	8010db0 <i2c_clock_config+0x38>
 8010dd2:	6228      	str	r0, [r5, #32]
 8010dd4:	e7ed      	b.n	8010db2 <i2c_clock_config+0x3a>
 8010dd6:	4a18      	ldr	r2, [pc, #96]	; (8010e38 <i2c_clock_config+0xc0>)
 8010dd8:	4294      	cmp	r4, r2
 8010dda:	d8f5      	bhi.n	8010dc8 <i2c_clock_config+0x50>
 8010ddc:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8010de0:	4351      	muls	r1, r2
 8010de2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010de6:	fbb1 f1f2 	udiv	r1, r1, r2
 8010dea:	3101      	adds	r1, #1
 8010dec:	6229      	str	r1, [r5, #32]
 8010dee:	b9a7      	cbnz	r7, 8010e1a <i2c_clock_config+0xa2>
 8010df0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010df4:	fbb3 f4f4 	udiv	r4, r3, r4
 8010df8:	69eb      	ldr	r3, [r5, #28]
 8010dfa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010dfe:	61eb      	str	r3, [r5, #28]
 8010e00:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8010e04:	b90b      	cbnz	r3, 8010e0a <i2c_clock_config+0x92>
 8010e06:	f044 0401 	orr.w	r4, r4, #1
 8010e0a:	69eb      	ldr	r3, [r5, #28]
 8010e0c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010e10:	61eb      	str	r3, [r5, #28]
 8010e12:	69eb      	ldr	r3, [r5, #28]
 8010e14:	4323      	orrs	r3, r4
 8010e16:	61eb      	str	r3, [r5, #28]
 8010e18:	e7d6      	b.n	8010dc8 <i2c_clock_config+0x50>
 8010e1a:	2219      	movs	r2, #25
 8010e1c:	4354      	muls	r4, r2
 8010e1e:	fbb3 f4f4 	udiv	r4, r3, r4
 8010e22:	69eb      	ldr	r3, [r5, #28]
 8010e24:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8010e28:	e7e9      	b.n	8010dfe <i2c_clock_config+0x86>
 8010e2a:	bf00      	nop
 8010e2c:	000f4240 	andeq	r4, pc, r0, asr #4
 8010e30:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8010e34:	000186a0 	andeq	r8, r1, r0, lsr #13
 8010e38:	00061a80 	andeq	r1, r6, r0, lsl #21

08010e3c <i2c_ack_config>:
 8010e3c:	6803      	ldr	r3, [r0, #0]
 8010e3e:	2901      	cmp	r1, #1
 8010e40:	bf0c      	ite	eq
 8010e42:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8010e46:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8010e4a:	6003      	str	r3, [r0, #0]
 8010e4c:	4770      	bx	lr

08010e4e <i2c_ackpos_config>:
 8010e4e:	6803      	ldr	r3, [r0, #0]
 8010e50:	b919      	cbnz	r1, 8010e5a <i2c_ackpos_config+0xc>
 8010e52:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010e56:	6003      	str	r3, [r0, #0]
 8010e58:	4770      	bx	lr
 8010e5a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010e5e:	e7fa      	b.n	8010e56 <i2c_ackpos_config+0x8>

08010e60 <i2c_master_addressing>:
 8010e60:	3202      	adds	r2, #2
 8010e62:	bf0c      	ite	eq
 8010e64:	f021 0101 	biceq.w	r1, r1, #1
 8010e68:	f041 0101 	orrne.w	r1, r1, #1
 8010e6c:	6101      	str	r1, [r0, #16]
 8010e6e:	4770      	bx	lr

08010e70 <i2c_enable>:
 8010e70:	6803      	ldr	r3, [r0, #0]
 8010e72:	f043 0301 	orr.w	r3, r3, #1
 8010e76:	6003      	str	r3, [r0, #0]
 8010e78:	4770      	bx	lr

08010e7a <i2c_start_on_bus>:
 8010e7a:	6803      	ldr	r3, [r0, #0]
 8010e7c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010e80:	6003      	str	r3, [r0, #0]
 8010e82:	4770      	bx	lr

08010e84 <i2c_stop_on_bus>:
 8010e84:	6803      	ldr	r3, [r0, #0]
 8010e86:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8010e8a:	6003      	str	r3, [r0, #0]
 8010e8c:	4770      	bx	lr

08010e8e <i2c_data_transmit>:
 8010e8e:	6101      	str	r1, [r0, #16]
 8010e90:	4770      	bx	lr

08010e92 <i2c_data_receive>:
 8010e92:	6900      	ldr	r0, [r0, #16]
 8010e94:	b2c0      	uxtb	r0, r0
 8010e96:	4770      	bx	lr

08010e98 <i2c_flag_get>:
 8010e98:	098b      	lsrs	r3, r1, #6
 8010e9a:	581a      	ldr	r2, [r3, r0]
 8010e9c:	2301      	movs	r3, #1
 8010e9e:	f001 011f 	and.w	r1, r1, #31
 8010ea2:	408b      	lsls	r3, r1
 8010ea4:	4213      	tst	r3, r2
 8010ea6:	bf14      	ite	ne
 8010ea8:	2001      	movne	r0, #1
 8010eaa:	2000      	moveq	r0, #0
 8010eac:	4770      	bx	lr

08010eae <i2c_flag_clear>:
 8010eae:	f240 5301 	movw	r3, #1281	; 0x501
 8010eb2:	4299      	cmp	r1, r3
 8010eb4:	b510      	push	{r4, lr}
 8010eb6:	d102      	bne.n	8010ebe <i2c_flag_clear+0x10>
 8010eb8:	6943      	ldr	r3, [r0, #20]
 8010eba:	6983      	ldr	r3, [r0, #24]
 8010ebc:	bd10      	pop	{r4, pc}
 8010ebe:	2201      	movs	r2, #1
 8010ec0:	098c      	lsrs	r4, r1, #6
 8010ec2:	5823      	ldr	r3, [r4, r0]
 8010ec4:	f001 011f 	and.w	r1, r1, #31
 8010ec8:	408a      	lsls	r2, r1
 8010eca:	ea23 0302 	bic.w	r3, r3, r2
 8010ece:	5023      	str	r3, [r4, r0]
 8010ed0:	e7f4      	b.n	8010ebc <i2c_flag_clear+0xe>
	...

08010ed4 <mac_address_get(unsigned char*)>:
 8010ed4:	2102      	movs	r1, #2
 8010ed6:	4a07      	ldr	r2, [pc, #28]	; (8010ef4 <mac_address_get(unsigned char*)+0x20>)
 8010ed8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010edc:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010ee0:	7001      	strb	r1, [r0, #0]
 8010ee2:	7042      	strb	r2, [r0, #1]
 8010ee4:	0e1a      	lsrs	r2, r3, #24
 8010ee6:	7082      	strb	r2, [r0, #2]
 8010ee8:	0c1a      	lsrs	r2, r3, #16
 8010eea:	70c2      	strb	r2, [r0, #3]
 8010eec:	0a1a      	lsrs	r2, r3, #8
 8010eee:	7102      	strb	r2, [r0, #4]
 8010ef0:	7143      	strb	r3, [r0, #5]
 8010ef2:	4770      	bx	lr
 8010ef4:	1ffff000 	svcne	0x00fff000

08010ef8 <__popcountsi2>:
 8010ef8:	0843      	lsrs	r3, r0, #1
 8010efa:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8010efe:	1ac0      	subs	r0, r0, r3
 8010f00:	0883      	lsrs	r3, r0, #2
 8010f02:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8010f06:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8010f0a:	4418      	add	r0, r3
 8010f0c:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8010f10:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8010f14:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8010f18:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8010f1c:	0e00      	lsrs	r0, r0, #24
 8010f1e:	4770      	bx	lr

Disassembly of section .rodata:

08010f20 <vtable for DisplayHandler-0xe0>:
	...
 8010f28:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f2c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8010f30:	00000000 	andeq	r0, r0, r0
 8010f34:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f38:	313a3131 	teqcc	sl, r1, lsr r1
 8010f3c:	33353a35 	teqcc	r5, #217088	; 0x35000
 8010f40:	63654400 	cmnvs	r5, #0, 8
 8010f44:	20353220 	eorscs	r3, r5, r0, lsr #4
 8010f48:	32323032 	eorscc	r3, r2, #50	; 0x32
 8010f4c:	335b1b00 	cmpcc	fp, #0, 22
 8010f50:	534f6d32 	movtpl	r6, #64818	; 0xfd32
 8010f54:	65532043 	ldrbvs	r2, [r3, #-67]	; 0xffffffbd
 8010f58:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010f5c:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8010f60:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8010f64:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8010d9c <i2c_clock_config+0x24>
 8010f68:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8010f6c:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8010f70:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8010f74:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8010f78:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8010f7c:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8010f80:	63736f5f 	cmnvs	r3, #380	; 0x17c
 8010f84:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8010f88:	65733d65 	ldrbvs	r3, [r3, #-3429]!	; 0xfffff29b
 8010f8c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010f90:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8010f94:	00707474 	rsbseq	r7, r0, r4, ror r4
 8010f98:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8010f9c:	43534f3d 	cmpmi	r3, #61, 30	; 0xf4
 8010fa0:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010fa4:	00726576 	rsbseq	r6, r2, r6, ror r5
 8010fa8:	2043534f 	subcs	r5, r3, pc, asr #6
 8010fac:	20584d44 	subscs	r4, r8, r4, asr #26
 8010fb0:	44470031 	strbmi	r0, [r7], #-49	; 0xffffffcf
 8010fb4:	31463233 	cmpcc	r6, r3, lsr r2
 8010fb8:	43523730 	cmpmi	r2, #48, 14	; 0xc00000
 8010fbc:	3a504900 	bcc	94233c4 <__exidx_end+0x14109c0>
 8010fc0:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8010fc4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8010fc8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8010fcc:	00632520 	rsbeq	r2, r3, r0, lsr #10
 8010fd0:	203a6e49 	eorscs	r6, sl, r9, asr #28
 8010fd4:	4f006425 	svcmi	0x00006425
 8010fd8:	203a7475 	eorscs	r7, sl, r5, ror r4
 8010fdc:	64006425 	strvs	r6, [r0], #-1061	; 0xfffffbdb
 8010fe0:	0021786d 	eoreq	r7, r1, sp, ror #16
 8010fe4:	61657262 	cmnvs	r5, r2, ror #4
 8010fe8:	6d00236b 	stcvs	3, cr2, [r0, #-428]	; 0xfffffe54
 8010fec:	00236261 	eoreq	r6, r3, r1, ror #4
 8010ff0:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8010ff4:	23687365 	cmncs	r8, #-1811939327	; 0x94000001
 8010ff8:	6f6c7300 	svcvs	0x006c7300
 8010ffc:	00237374 	eoreq	r7, r3, r4, ror r3

08011000 <vtable for DisplayHandler>:
	...
 8011008:	08007e1b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, fp, ip, sp, lr}
 801100c:	08007e41 	stmdaeq	r0, {r0, r6, r9, sl, fp, ip, sp, lr}
 8011010:	08007e85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, lr}

08011014 <CSWTCH.89>:
 8011014:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011018:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08011019 <SOFTWARE_VERSION>:
 8011019:	00342e31 	eorseq	r2, r4, r1, lsr lr
 801101d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011021:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011025:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8011029:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 801102d:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8011031:	0a73252c 	beq	9cda4e9 <__exidx_end+0x1cc7ae5>
 8011035:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8011039:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801103d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8011041:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8011045:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8011049:	4f000a64 	svcmi	0x00000a64
 801104d:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8011051:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8011055:	616c7073 	smcvs	50947	; 0xc703
 8011059:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 801105d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8011061:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8011065:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8011069:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801106d:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8011071:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8011075:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011079:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 801107d:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8011081:	20505446 	subscs	r5, r0, r6, asr #8
 8011085:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8011089:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 801108d:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8011091:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8011095:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8011099:	525b2066 	subspl	r2, fp, #102	; 0x66
 801109d:	6f6f6265 	svcvs	0x006f6265
 80110a1:	00205d74 	eoreq	r5, r0, r4, ror sp
 80110a5:	4f525245 	svcmi	0x00525245
 80110a9:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 80110ad:	000a7465 	andeq	r7, sl, r5, ror #8
 80110b1:	70746674 	rsbsvc	r6, r4, r4, ror r6
 80110b5:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 80110b9:	616c7073 	smcvs	50947	; 0xc703
 80110bd:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 80110c1:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 80110c5:	000a2123 	andeq	r2, sl, r3, lsr #2
 80110c9:	4f525245 	svcmi	0x00525245
 80110cd:	0a3f2352 	beq	8fd9e1d <__exidx_end+0xfc7419>
 80110d1:	62657200 	rsbvs	r7, r5, #0, 4
 80110d5:	23746f6f 	cmncs	r4, #444	; 0x1bc
 80110d9:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 80110dd:	00237473 	eoreq	r7, r3, r3, ror r4
 80110e1:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80110e5:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 80110e9:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80110ed:	76002365 	strvc	r2, [r0], -r5, ror #6
 80110f1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80110f5:	00236e6f 	eoreq	r6, r3, pc, ror #28
 80110f9:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 80110fd:	63616600 	cmnvs	r1, #0, 12
 8011101:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011105:	 	tstmi	r0, r3, lsr #6

08011108 <s_Node>:
 8011108:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801110c:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8011118:	41730000 	cmnmi	r3, r0
 801111c:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8011120:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801112c:	2043534f 	subcs	r5, r3, pc, asr #6
 8011130:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011134:	00007265 	andeq	r7, r0, r5, ror #4
 8011138:	00000000 	andeq	r0, r0, r0
 801113c:	544c0000 	strbpl	r0, [ip], #-0
 8011140:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8011150:	2043534f 	subcs	r5, r3, pc, asr #6
 8011154:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8011158:	0000746e 	andeq	r7, r0, lr, ror #8
 801115c:	00000000 	andeq	r0, r0, r0
 8011160:	44520000 	ldrbmi	r0, [r2], #-0
 8011164:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8011168:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801116c:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8011170:	0000796c 	andeq	r7, r0, ip, ror #18
 8011174:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8011178:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8011184:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8011188:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8011198:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80111a8:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 80111ac:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80111b0:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 80111b4:	00000072 	andeq	r0, r0, r2, ror r0
 80111b8:	00000000 	andeq	r0, r0, r0
 80111bc:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

080111ce <s_Output>:
 80111ce:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80111da:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80111e6:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80111ea:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80111ee:	00000000 	andeq	r0, r0, r0
 80111f2:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80111f6:	0000006c 	andeq	r0, r0, ip, rrx
 80111fa:	00000000 	andeq	r0, r0, r0
 80111fe:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8011202:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8011206:	00000000 	andeq	r0, r0, r0
 801120a:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8011216:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801121a:	00006769 	andeq	r6, r0, r9, ror #14
 801121e:	00000000 	andeq	r0, r0, r0
 8011222:	70657453 	rsbvc	r7, r5, r3, asr r4
 8011226:	00726570 	rsbseq	r6, r2, r0, ror r5
 801122a:	00000000 	andeq	r0, r0, r0
 801122e:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8011232:	00007265 	andeq	r7, r0, r5, ror #4
 8011236:	00000000 	andeq	r0, r0, r0
 801123a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801123e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8011242:	00000000 	andeq	r0, r0, r0
 8011246:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801124a:	00006c61 	andeq	r6, r0, r1, ror #24
 801124e:	00000000 	andeq	r0, r0, r0
 8011252:	20424752 	subcs	r4, r2, r2, asr r7
 8011256:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801125a:	0000006c 	andeq	r0, r0, ip, rrx
	...

08011260 <RemoteConfig::s_GET>:
 8011260:	080096a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, ip, pc}
 8011264:	00000000 	andeq	r0, r0, r0
 8011268:	080110d2 	stmdaeq	r1, {r1, r4, r6, r7, ip}
 801126c:	00000008 	andeq	r0, r0, r8
 8011270:	08008b7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, pc}
 8011274:	00000000 	andeq	r0, r0, r0
 8011278:	080110db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, ip}
 801127c:	00000005 	andeq	r0, r0, r5
 8011280:	08008b7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, pc}
 8011284:	00000000 	andeq	r0, r0, r0
 8011288:	080110e1 	stmdaeq	r1, {r0, r5, r6, r7, ip}
 801128c:	00000006 	andeq	r0, r0, r6
 8011290:	08008d31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp, pc}
 8011294:	00000000 	andeq	r0, r0, r0
 8011298:	080110e8 	stmdaeq	r1, {r3, r5, r6, r7, ip}
 801129c:	00000007 	andeq	r0, r0, r7
 80112a0:	08008cf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, fp, pc}
 80112a4:	00000000 	andeq	r0, r0, r0
 80112a8:	080110f0 	stmdaeq	r1, {r4, r5, r6, r7, ip}
 80112ac:	00000008 	andeq	r0, r0, r8
 80112b0:	08008c4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp, pc}
 80112b4:	00000000 	andeq	r0, r0, r0
 80112b8:	080110b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, ip}
 80112bc:	00000008 	andeq	r0, r0, r8
 80112c0:	08009079 	stmdaeq	r0, {r0, r3, r4, r5, r6, ip, pc}
 80112c4:	00000000 	andeq	r0, r0, r0
 80112c8:	080110f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, ip}
 80112cc:	00010004 	andeq	r0, r1, r4
 80112d0:	08008ca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, pc}
 80112d4:	00000000 	andeq	r0, r0, r0
 80112d8:	080110b1 	stmdaeq	r1, {r0, r4, r5, r7, ip}
 80112dc:	00000005 	andeq	r0, r0, r5
 80112e0:	08009399 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, ip, pc}
 80112e4:	00000000 	andeq	r0, r0, r0
 80112e8:	080110fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, ip}
 80112ec:	00000009 	andeq	r0, r0, r9

080112f0 <RemoteConfig::s_SET>:
 80112f0:	08008e51 	stmdaeq	r0, {r0, r4, r6, r9, sl, fp, pc}
 80112f4:	00000000 	andeq	r0, r0, r0
 80112f8:	080110b1 	stmdaeq	r1, {r0, r4, r5, r7, ip}
 80112fc:	00010005 	andeq	r0, r1, r5
 8011300:	08008e29 	stmdaeq	r0, {r0, r3, r5, r9, sl, fp, pc}
 8011304:	00000000 	andeq	r0, r0, r0
 8011308:	080110b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, ip}
 801130c:	00010008 	andeq	r0, r1, r8
 8011310:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011314:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8011318:	73252300 			; <UNDEFINED> instruction: 0x73252300
 801131c:	0a64253d 	beq	991a818 <__exidx_end+0x1907e14>
 8011320:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8011324:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011328:	002c2273 	eoreq	r2, ip, r3, ror r2
 801132c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8011330:	000a7325 	andeq	r7, sl, r5, lsr #6
 8011334:	6f626552 	svcvs	0x00626552
 8011338:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801133c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8011340:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8011344:	6f6f6265 	svcvs	0x006f6265
 8011348:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801134c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8011350:	6f637200 	svcvs	0x00637200
 8011354:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8011358:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801135c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8011360:	6b726f77 	blvs	9cad144 <__exidx_end+0x1c9a740>
 8011364:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011368:	63736f00 	cmnvs	r3, #0, 30
 801136c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011370:	72617000 	rsbvc	r7, r1, #0
 8011374:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8011378:	00747874 	rsbseq	r7, r4, r4, ror r8

0801137c <RemoteConfig::s_TXT>:
 801137c:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8011380:	00000000 	andeq	r0, r0, r0
 8011384:	080092f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, pc}
 8011388:	00000000 	andeq	r0, r0, r0
 801138c:	08011351 	stmdaeq	r1, {r0, r4, r6, r8, r9, ip}
 8011390:	0000000b 	andeq	r0, r0, fp
 8011394:	0000000c 	andeq	r0, r0, ip
 8011398:	080090ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, ip, pc}
 801139c:	00000000 	andeq	r0, r0, r0
 80113a0:	08009321 	stmdaeq	r0, {r0, r5, r8, r9, ip, pc}
 80113a4:	00000000 	andeq	r0, r0, r0
 80113a8:	0801135d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, ip}
 80113ac:	0000000b 	andeq	r0, r0, fp
 80113b0:	00000000 	andeq	r0, r0, r0
 80113b4:	080090d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, ip, pc}
 80113b8:	00000000 	andeq	r0, r0, r0
 80113bc:	08009349 	stmdaeq	r0, {r0, r3, r6, r8, r9, ip, pc}
 80113c0:	00000000 	andeq	r0, r0, r0
 80113c4:	08011369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip}
 80113c8:	00000007 	andeq	r0, r0, r7
 80113cc:	00000008 	andeq	r0, r0, r8
 80113d0:	08009105 	stmdaeq	r0, {r0, r2, r8, ip, pc}
 80113d4:	00000000 	andeq	r0, r0, r0
 80113d8:	08009371 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, ip, pc}
 80113dc:	00000000 	andeq	r0, r0, r0
 80113e0:	08011371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, ip}
 80113e4:	0000000a 	andeq	r0, r0, sl
 80113e8:	00000002 	andeq	r0, r0, r2
 80113ec:	00544547 	subseq	r4, r4, r7, asr #10
 80113f0:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 80113f4:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 80113f8:	0a200050 	beq	8811540 <__exidx_end+0x7feb3c>
 80113fc:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8011400:	43003a00 	movwmi	r3, #2560	; 0xa00
 8011404:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011408:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 801140c:	00657079 	rsbeq	r7, r5, r9, ror r0
 8011410:	61003b20 	tstvs	r0, r0, lsr #22
 8011414:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8011418:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 801141c:	6a2f6e6f 	bvs	8becde0 <__exidx_end+0xbda3dc>
 8011420:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8011424:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8011428:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 801142c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8011430:	2f006874 	svccs	0x00006874
 8011434:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8011438:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 801143c:	2f006c6d 	svccs	0x00006c6d
 8011440:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8011444:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8011448:	2f007373 	svccs	0x00007373
 801144c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8011450:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8011454:	736a2f00 	cmnvc	sl, #0, 30
 8011458:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 801145c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011460:	72657600 	rsbvc	r7, r5, #0, 12
 8011464:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011468:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 801146c:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8011470:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011474:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8011478:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801147c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011480:	6a2f0079 	bvs	8bd166c <__exidx_end+0xbbec68>
 8011484:	2f6e6f73 	svccs	0x006e6f73
 8011488:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801148c:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8011490:	6f6f6265 	svcvs	0x006f6265
 8011494:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8011498:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 801149c:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 80114a0:	434f4421 	movtmi	r4, #62497	; 0xf421
 80114a4:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 80114a8:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 80114ac:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80114b0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80114b4:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 80114b8:	3e646165 	powccsz	f6, f4, f5
 80114bc:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80114c0:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 80114c4:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 80114c8:	742f3c74 	strtvc	r3, [pc], #-3188	; 80114d0 <RemoteConfig::s_TXT+0x154>
 80114cc:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80114d0:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80114d4:	3e646165 	powccsz	f6, f4, f5
 80114d8:	6f623c0a 	svcvs	0x00623c0a
 80114dc:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 80114e0:	4f3e3168 	svcmi	0x003e3168
 80114e4:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80114e8:	2f3c3e31 	svccs	0x003c3e31
 80114ec:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80114f0:	2f3c0a3e 	svccs	0x003c0a3e
 80114f4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80114f8:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 80114fc:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8011500:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8011504:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8011508:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 801150c:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8011510:	71655200 	cmnvc	r5, r0, lsl #4
 8011514:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8011518:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 801151c:	20797469 	rsbscs	r7, r9, r9, ror #8
 8011520:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8011524:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8011528:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 801152c:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8011530:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8011534:	6f542049 	svcvs	0x00542049
 8011538:	6f4c206f 	svcvs	0x004c206f
 801153c:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8011540:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8011544:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8011548:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801154c:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8011550:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8011554:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8011558:	20646f68 	rsbcs	r6, r4, r8, ror #30
 801155c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8011560:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8011564:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011568:	00646574 	rsbeq	r6, r4, r4, ror r5
 801156c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8011570:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011574:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8011578:	70707553 	rsbsvc	r7, r0, r3, asr r5
 801157c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8011580:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8011584:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8011588:	7245206e 	subvc	r2, r5, #110	; 0x6e
 801158c:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8011590:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8011594:	434f4421 	movtmi	r4, #62497	; 0xf421
 8011598:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801159c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 80115a0:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80115a4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80115a8:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 80115ac:	3e646165 	powccsz	f6, f4, f5
 80115b0:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80115b4:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 80115b8:	73252075 			; <UNDEFINED> instruction: 0x73252075
 80115bc:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80115c0:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 80115c4:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80115c8:	0a3e6461 	beq	8faa754 <__exidx_end+0xf97d50>
 80115cc:	646f623c 	strbtvs	r6, [pc], #-572	; 80115d4 <RemoteConfig::s_TXT+0x258>
 80115d0:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80115d4:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 80115d8:	31682f3c 	cmncc	r8, ip, lsr pc
 80115dc:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 80115e0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80115e4:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80115e8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80115ec:	5448000a 	strbpl	r0, [r8], #-10
 80115f0:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 80115f4:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 80115f8:	73252075 			; <UNDEFINED> instruction: 0x73252075
 80115fc:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8011600:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8011604:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8011608:	6f430a0d 	svcvs	0x00430a0d
 801160c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011610:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8011614:	203a6570 	eorscs	r6, sl, r0, ror r5
 8011618:	0a0d7325 	beq	836e2b4 <__exidx_end+0x35b8b0>
 801161c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8011620:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8011624:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8011628:	203a6874 	eorscs	r6, sl, r4, ror r8
 801162c:	0a0d7525 	beq	836eac8 <__exidx_end+0x35c0c4>
 8011630:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8011634:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8011638:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 801163c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8011640:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8011644:	 	ldrbvs	r0, [r4, #-10]!

08011646 <contentType>:
 8011646:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801164a:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801164e:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8011666:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801166a:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8011686:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801168a:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801168e:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8011692:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80116a6:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80116aa:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80116ae:	2f6e6f69 	svccs	0x006e6f69
 80116b2:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080116c6 <RemoteConfigConst::PARAMS_DISABLE>:
 80116c6:	61736964 	cmnvs	r3, r4, ror #18
 80116ca:	00656c62 	rsbeq	r6, r5, r2, ror #24

080116ce <RemoteConfigConst::PARAMS_FILE_NAME>:
 80116ce:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80116d2:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80116d6:	00747874 	rsbseq	r7, r4, r4, ror r8

080116da <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80116da:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80116de:	5f79616c 	svcpl	0x0079616c
 80116e2:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080116e7 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80116e7:	61736964 	cmnvs	r3, r4, ror #18
 80116eb:	5f656c62 	svcpl	0x00656c62
 80116ef:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80116f3:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080116f5 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80116f5:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80116f9:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80116fd:	6f6f6265 	svcvs	0x006f6265
 8011701:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08011703 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8011703:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8011707:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80111a3 <s_Node+0x9b>
 801170b:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801170f:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08011711 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8011711:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8011715:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8011719:	6f746361 	svcvs	0x00746361
 801171d:	7b007972 	blvc	802fced <__exidx_end+0x1d2e9>
 8011721:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8011725:	7b3a2274 	blvc	8e9a0fd <__exidx_end+0xe876f9>
 8011729:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801172d:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8011731:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8011735:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8011739:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801173d:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011741:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011745:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8011749:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801174d:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8011751:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011755:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8011759:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801175d:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8011761:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8011765:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011769:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801176d:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8011771:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8011775:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8011779:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801177d:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8011781:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011785:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8011789:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801178d:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8011791:	616f6222 	cmnvs	pc, r2, lsr #4
 8011795:	3a226472 	bcc	88aa965 <__exidx_end+0x897f61>
 8011799:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801179d:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80117a1:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80117a5:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80117a9:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80117ad:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80117b1:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80117b5:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80117b9:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80117bd:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80117c1:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80117c5:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80117c9:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80117cd:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80117d1:	7b000a7d 	blvc	80141cd <__exidx_end+0x17c9>
 80117d5:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80117d9:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80117dd:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80117e1:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80117e5:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80117e9:	7b3a2273 	blvc	8e9a1bd <__exidx_end+0xe877b9>
 80117ed:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 80117f1:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80117f5:	4f223a22 	svcmi	0x00223a22
 80117f9:	53204353 			; <UNDEFINED> instruction: 0x53204353
 80117fd:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8011801:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8011805:	61726170 	cmnvs	r2, r0, ror r1
 8011809:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 801180d:	3a227478 	bcc	88ae9f5 <__exidx_end+0x89bff1>
 8011811:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 8011815:	61725420 	cmnvs	r2, r0, lsr #8
 8011819:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801181d:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 8011821:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011825:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8011829:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 801182d:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
 8011831:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8011835:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
 8011839:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 801183d:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8011841:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011845:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
 8011849:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
 801184d:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8011851:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8011855:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8011859:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
 801185d:	 	teqcs	ip, sp, ror r0

0801185f <index_html>:
 801185f:	4f44213c 	svcmi	0x0044213c
 8011863:	50595443 	subspl	r5, r9, r3, asr #8
 8011867:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 801186b:	0a3e6c6d 	beq	8faca27 <__exidx_end+0xf9a023>
 801186f:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8011873:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011877:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801187b:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801187f:	6b6e696c 	blvs	9babe37 <__exidx_end+0x1b99433>
 8011883:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8011887:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 801188b:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801188f:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8011893:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8011897:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801189b:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801189f:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80118a3:	20227373 	eorcs	r7, r2, r3, ror r3
 80118a7:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80118ab:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80118af:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80118b3:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80118b7:	0a3e656c 	beq	8faae6f <__exidx_end+0xf9846b>
 80118bb:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80118bf:	0a3e6461 	beq	8faaa4b <__exidx_end+0xf98047>
 80118c3:	646f623c 	strbtvs	r6, [pc], #-572	; 80118cb <index_html+0x6c>
 80118c7:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80118cb:	6165683c 	cmnvs	r5, ip, lsr r8
 80118cf:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80118d3:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80118d7:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80118db:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80118df:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80118e3:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80118e7:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80118eb:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80118ef:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80118f3:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80118f7:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80118fb:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80118ff:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8011903:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011907:	6f746365 	svcvs	0x00746365
 801190b:	20227972 	eorcs	r7, r2, r2, ror r9
 801190f:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8011913:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8011917:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 801191b:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801191f:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8011923:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8011927:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 801192b:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801192f:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8011933:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8011937:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 801193b:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801193f:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8011943:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011947:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 801194b:	20227478 	eorcs	r7, r2, r8, ror r4
 801194f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011953:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8011957:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 801195b:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801195f:	0a3e656c 	beq	8faaf17 <__exidx_end+0xf98513>
 8011963:	6f663c09 	svcvs	0x00663c09
 8011967:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 801196b:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801196f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011973:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8011977:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801197b:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801197f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011983:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8011987:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801198b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801198f:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8011993:	20747069 	rsbscs	r7, r4, r9, rrx
 8011997:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801199b:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801199f:	6a2e7865 	bvs	8bafb3b <__exidx_end+0xb9d137>
 80119a3:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80119a7:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80119ab:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80119af:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80119b3:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80119b7:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80119bb:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80119bf:	 	svcvs	0x0062000a

080119c1 <styles_css>:
 80119c1:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80119c5:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80119c9:	63616220 	cmnvs	r1, #32, 4
 80119cd:	6f72676b 	svcvs	0x0072676b
 80119d1:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80119d5:	6f6c6f63 	svcvs	0x006c6f63
 80119d9:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80119dd:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80119e1:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80119e5:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80119e9:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80119ed:	6f6c6f63 	svcvs	0x006c6f63
 80119f1:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80119f5:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80119f9:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80119fd:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8011a01:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8011a05:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011a09:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8011a0d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011a11:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011a15:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011a19:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011a1d:	0a3b7865 	beq	8eefbb9 <__exidx_end+0xedd1b5>
 8011a21:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8011a25:	0a7b2069 	beq	9ed9bd1 <__exidx_end+0x1ec71cd>
 8011a29:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8011a2d:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8011a31:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8011a35:	6f6e203a 	svcvs	0x006e203a
 8011a39:	0a3b656e 	beq	8eeaff9 <__exidx_end+0xed85f5>
 8011a3d:	616d2020 	cmnvs	sp, r0, lsr #32
 8011a41:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8011a45:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8011a49:	70352078 	eorsvc	r2, r5, r8, ror r0
 8011a4d:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8011a51:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8011a55:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8011a59:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011a5d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011a61:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011a65:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011a69:	0a3b7865 	beq	8eefc05 <__exidx_end+0xedd201>
 8011a6d:	6f622020 	svcvs	0x00622020
 8011a71:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011a75:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011a79:	3a737569 	bcc	9cef025 <__exidx_end+0x1cdc621>
 8011a7d:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011a81:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011a85:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011a89:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011a8d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011a91:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011a95:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011a99:	0a3b7870 	beq	8eefc61 <__exidx_end+0xedd25d>
 8011a9d:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8011aa1:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011aa5:	0a7b2072 	beq	9ed9c75 <__exidx_end+0x1ec7271>
 8011aa9:	69642020 	stmdbvs	r4!, {r5, sp}^
 8011aad:	616c7073 	smcvs	50947	; 0xc703
 8011ab1:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8011ab5:	3b78656c 	blcc	9e2b06d <__exidx_end+0x1e18669>
 8011ab9:	6a20200a 	bvs	8819ae9 <__exidx_end+0x8070e5>
 8011abd:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8011ac1:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8011ac5:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011ac9:	203a746e 	eorscs	r7, sl, lr, ror #8
 8011acd:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8011ad1:	0a3b7265 	beq	8eee46d <__exidx_end+0xedba69>
 8011ad5:	6f622020 	svcvs	0x00622020
 8011ad9:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011add:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011ae1:	3a737569 	bcc	9cef08d <__exidx_end+0x1cdc689>
 8011ae5:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011ae9:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011aed:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011af1:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011af5:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011af9:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011afd:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011b01:	0a3b7870 	beq	8eefcc9 <__exidx_end+0xedd2c5>
 8011b05:	 	andmi	r0, r0, sp, ror sl

08011b08 <HttpContent>:
 8011b08:	08011440 	stmdaeq	r1, {r6, sl, ip}
 8011b0c:	080119c1 	stmdaeq	r1, {r0, r6, r7, r8, fp, ip}
 8011b10:	0801144c 	stmdaeq	r1, {r2, r3, r6, sl, ip}
 8011b14:	08011b20 	stmdaeq	r1, {r5, r8, r9, fp, ip}
 8011b18:	08011434 	stmdaeq	r1, {r2, r4, r5, sl, ip}
 8011b1c:	0801185f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip}

08011b20 <index_js>:
 8011b20:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011b24:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011b28:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011b2c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011b30:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011b34:	6a284e4f 	bvs	8a25478 <__exidx_end+0xa12a74>
 8011b38:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011b3c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011b40:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011b44:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8011b48:	6a2f273d 	bvs	8bdb844 <__exidx_end+0xbc8e40>
 8011b4c:	2f6e6f73 	svccs	0x006e6f73
 8011b50:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8011b54:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011b58:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011b5c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8011b60:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011b64:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8011b68:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8011b6c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8011b70:	20746961 	rsbscs	r6, r4, r1, ror #18
 8011b74:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8011b78:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8011b7c:	0a3b296c 	beq	8edc134 <__exidx_end+0xec9730>
 8011b80:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011b84:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8011b88:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8011b8c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011b90:	73657220 	cmnvc	r5, #32, 4
 8011b94:	6f736a2e 	svcvs	0x00736a2e
 8011b98:	3b29286e 	blcc	8a5bd58 <__exidx_end+0xa49354>
 8011b9c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011ba0:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8011ba4:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8011ba8:	6f727265 	svcvs	0x00727265
 8011bac:	7b202972 	blvc	881c17c <__exidx_end+0x809778>
 8011bb0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011bb4:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8011bb8:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8011bbc:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8011bc0:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8011bc4:	3b29726f 	blcc	8a6e588 <__exidx_end+0xa5bb84>
 8011bc8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011bcc:	0a0a7d0a 	beq	82b0ffc <__exidx_end+0x29e5f8>
 8011bd0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011bd4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011bd8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011bdc:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8011be0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011be4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011be8:	20292874 	eorcs	r2, r9, r4, ror r8
 8011bec:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011bf0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011bf4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011bf8:	6177613d 	cmnvs	r7, sp, lsr r1
 8011bfc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011c00:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011c04:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011c08:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c0c:	0a3b2927 	beq	8edc0b0 <__exidx_end+0xec96ac>
 8011c10:	6f640909 	svcvs	0x00640909
 8011c14:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011c18:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011c1c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011c20:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011c24:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011c28:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011c2c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8011c30:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011c34:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011c38:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011c3c:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8011c40:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011c44:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8011c48:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8011c4c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8011c50:	2b656d61 	blcs	996d1dc <__exidx_end+0x195a7d8>
 8011c54:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011bd4 <index_js+0xb4>
 8011c58:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011c5c:	2b223e69 	blcs	88a1608 <__exidx_end+0x88ec04>
 8011c60:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c64:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011c68:	6f6e2e74 	svcvs	0x006e2e74
 8011c6c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8011c70:	2b657079 	blcs	996de5c <__exidx_end+0x195b458>
 8011c74:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011bf4 <index_js+0xd4>
 8011c78:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011c7c:	2b223e69 	blcs	88a1628 <__exidx_end+0x88ec24>
 8011c80:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011c84:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011c88:	6f6e2e74 	svcvs	0x006e2e74
 8011c8c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8011c90:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8011c94:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011c98:	2f3c222b 	svccs	0x003c222b
 8011c9c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011ca0:	0a7d0a3b 	beq	9f54594 <__exidx_end+0x1f41b90>
 8011ca4:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8011ca8:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8011cac:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011cb0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011cb4:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011cb8:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011cbc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8011cc0:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8011cc4:	0a7b2029 	beq	9ed9d70 <__exidx_end+0x1ec736c>
 8011cc8:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011ccc:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8011cd0:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011cd4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011cd8:	6177613d 	cmnvs	r7, sp, lsr r1
 8011cdc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011ce0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011ce4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011ce8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011cec:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011cf0:	3b292779 	blcc	8a5badc <__exidx_end+0xa490d8>
 8011cf4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011cf8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011cfc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011d00:	0a22223d 	beq	889a5fc <__exidx_end+0x887bf8>
 8011d04:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011d08:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8011d0c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8011d10:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8011d14:	6a624f3d 	bvs	98a5a10 <__exidx_end+0x189300c>
 8011d18:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8011d1c:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8011d20:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8011d24:	6f746365 	svcvs	0x00746365
 8011d28:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8011d2c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011d30:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8011d34:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011d38:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8011d3c:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8011d40:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8011d44:	6145726f 	cmpvs	r5, pc, ror #4
 8011d48:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8011d4c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011d50:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d54:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8011d58:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011d5c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011d60:	20726176 	rsbscs	r6, r2, r6, ror r1
 8011d64:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8011d68:	203d2065 	eorscs	r2, sp, r5, rrx
 8011d6c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011d70:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011d74:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8011d78:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8011d7c:	6b5b5d22 	blvs	96e920c <__exidx_end+0x16d6808>
 8011d80:	3b5d7965 	blcc	977031c <__exidx_end+0x175d918>
 8011d84:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011d88:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8011d8c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8011d90:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8011d94:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011d98:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8011d9c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8011da0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8011da4:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8011da8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8011dac:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8011db0:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8011db4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011db8:	0a3b223e 	beq	8eda6b8 <__exidx_end+0xec7cb4>
 8011dbc:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8011dc0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011dc4:	6f640909 	svcvs	0x00640909
 8011dc8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011dcc:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011dd0:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011dd4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011dd8:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011ddc:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011de0:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011de4:	6f746365 	svcvs	0x00746365
 8011de8:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8011dec:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8011df0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8011df4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8011df8:	3b6c6d74 	blcc	9b2d3d0 <__exidx_end+0x1b1a9cc>
 8011dfc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011e00:	5f746567 	svcpl	0x00746567
 8011e04:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8011e08:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011e0c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011e10:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8011e14:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011e18:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8011e1c:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8011e20:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8011e24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011e28:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8011e2c:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8011e30:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011e34:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8011e38:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011e3c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011e40:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8011e44:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011e48:	6177613d 	cmnvs	r7, sp, lsr r1
 8011e4c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011e50:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011e54:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011e58:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011e5c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8011e60:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011e64:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8011e68:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8011e6c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8011e70:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8011e74:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8011e78:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8011e7c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8011e80:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8011e84:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8011e88:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8011e8c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8011e90:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8011e94:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8011e98:	2b22563e 	blcs	88a7798 <__exidx_end+0x894d94>
 8011e9c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011ea0:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011ea4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011ea8:	2b6e6f69 	blcs	9badc54 <__exidx_end+0x1b9b250>
 8011eac:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e2c <index_js+0x30c>
 8011eb0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011eb4:	2b223e69 	blcs	88a1860 <__exidx_end+0x88ee5c>
 8011eb8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8011ebc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8011ec0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8011ec4:	61642e64 	cmnvs	r4, r4, ror #28
 8011ec8:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8011ecc:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8011ed0:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8011ed4:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8011ed8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011edc:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8011ee0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8011ee4:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8011ee8:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8011eec:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8011ef0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8011ef4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8011ef8:	6f697372 	svcvs	0x00697372
 8011efc:	6f622e6e 	svcvs	0x00622e6e
 8011f00:	2b647261 	blcs	992e88c <__exidx_end+0x191be88>
 8011f04:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e84 <index_js+0x364>
 8011f08:	3b223e69 	blcc	88a18b4 <__exidx_end+0x88eeb0>
 8011f0c:	0a0a7d0a 	beq	82b133c <__exidx_end+0x29e938>
 8011f10:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011f14:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011f18:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011f1c:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011f20:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8011f28 <index_js+0x408>
 8011f24:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8011f28:	20296c65 	eorcs	r6, r9, r5, ror #24
 8011f2c:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8011f30:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8011f34:	613d7478 	teqvs	sp, r8, ror r4
 8011f38:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011f3c:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8011f40:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8011f44:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8011f48:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8011f4c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011f50:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011f54:	3b22223d 	blcc	889a850 <__exidx_end+0x887e4c>
 8011f58:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8011f5c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8011f60:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8011f64:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8011f68:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8011f6c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8011f70:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8011f74:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8011f78:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8011f7c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011f80:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8011f84:	0a7b2029 	beq	9eda030 <__exidx_end+0x1ec762c>
 8011f88:	61760909 	cmnvs	r6, r9, lsl #18
 8011f8c:	61762072 	cmnvs	r6, r2, ror r0
 8011f90:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8011f94:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8011f98:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8011f9c:	6b5b5d6c 	blvs	96e9554 <__exidx_end+0x16d6b50>
 8011fa0:	3b5d7965 	blcc	977053c <__exidx_end+0x175db38>
 8011fa4:	2009090a 	andcs	r0, r9, sl, lsl #18
 8011fa8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011fac:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8011fb0:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8011fb4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8011fb8:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8011fbc:	2f3c222b 	svccs	0x003c222b
 8011fc0:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8011fc4:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8011fc8:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8011fcc:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8011fd0:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8011fd4:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8011fdc <index_js+0x4bc>
 8011fd8:	3b223e72 	blcc	88a19a8 <__exidx_end+0x88efa4>
 8011fdc:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8011fe0:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8011fe4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8011fe8:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8011fec:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8011ff0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8011ff4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8011ff8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8011ffc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012000:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012004:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012008:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801200c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8012010:	0a3b6c6d 	beq	8eed1cc <__exidx_end+0xeda7c8>
 8012014:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8012018:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801201c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8012020:	3b292874 	blcc	8a5c1f8 <__exidx_end+0xa497f4>
 8012024:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8012028:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 801202c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8012030:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8012034:	0a3b2928 	beq	8edc4dc <__exidx_end+0xec9ad8>
 8012038:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 801203c:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8012040:	6f697372 	svcvs	0x00697372
 8012044:	3b29286e 	blcc	8a5c204 <__exidx_end+0xa49800>
 8012048:	642f000a 	strtvs	r0, [pc], #-10	; 8012050 <index_js+0x530>
 801204c:	0031786d 	eorseq	r7, r1, sp, ror #16
 8012050:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 8012054:	002a2f31 	eoreq	r2, sl, r1, lsr pc
 8012058:	2f00322f 	svccs	0x0000322f
 801205c:	31786d64 	cmncc	r8, r4, ror #26
 8012060:	616c622f 	cmnvs	ip, pc, lsr #4
 8012064:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8011509 <RemoteConfig::s_TXT+0x18d>
 8012068:	2e310074 	mrccs	0, 1, r0, cr1, cr4, {3}
 801206c:	565b0030 			; <UNDEFINED> instruction: 0x565b0030
 8012070:	205d7325 	subscs	r7, sp, r5, lsr #6
 8012074:	47007325 	strmi	r7, [r0, -r5, lsr #6]
 8012078:	46323344 	ldrtmi	r3, [r2], -r4, asr #6
 801207c:	69702f00 	ldmdbvs	r0!, {r8, r9, sl, fp, sp}^
 8012080:	2f00676e 	svccs	0x0000676e
 8012084:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 8012088:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801208c:	6f2f6f66 	svcvs	0x002f6f66
 8012090:	692f0073 	stmdbvs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
 8012094:	2f6f666e 	svccs	0x006f666e
 8012098:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801209c:	692f006c 	stmdbvs	pc!, {r2, r3, r5, r6}	; <UNPREDICTABLE>
 80120a0:	2f6f666e 	svccs	0x006f666e
 80120a4:	00636f73 	rsbeq	r6, r3, r3, ror pc
 80120a8:	00736559 	rsbseq	r6, r3, r9, asr r5
 80120ac:	4f006f4e 	svcmi	0x00006f4e
 80120b0:	53204353 			; <UNDEFINED> instruction: 0x53204353
 80120b4:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 80120b8:	20000a72 	andcs	r0, r0, r2, ror sl
 80120bc:	6f636e49 	svcvs	0x00636e49
 80120c0:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 80120c4:	726f5020 	rsbvc	r5, pc, #32
 80120c8:	20202074 	eorcs	r2, r0, r4, ror r0
 80120cc:	20202020 	eorcs	r2, r0, r0, lsr #32
 80120d0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80120d4:	20000a64 	andcs	r0, r0, r4, ror #20
 80120d8:	6774754f 	ldrbvs	r7, [r4, -pc, asr #10]!
 80120dc:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 80120e0:	726f5020 	rsbvc	r5, pc, #32
 80120e4:	20202074 	eorcs	r2, r0, r4, ror r0
 80120e8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80120ec:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80120f0:	20000a64 	andcs	r0, r0, r4, ror #20
 80120f4:	20584d44 	subscs	r4, r8, r4, asr #26
 80120f8:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 80120fc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012100:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012104:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012108:	5b203a20 	blpl	8820990 <__exidx_end+0x80df8c>
 801210c:	5b5d7325 	blpl	976eda8 <__exidx_end+0x175c3a4>
 8012110:	0a5d7325 	beq	976edac <__exidx_end+0x175c3a8>
 8012114:	42202000 	eormi	r2, r0, #0
 8012118:	6b63616c 	blvs	98ea6d0 <__exidx_end+0x18d7ccc>
 801211c:	2074756f 	rsbscs	r7, r4, pc, ror #10
 8012120:	68746150 	ldmdavs	r4!, {r4, r6, r8, sp, lr}^
 8012124:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012128:	3a202020 	bcc	881a1b0 <__exidx_end+0x8077ac>
 801212c:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8012130:	20000a5d 	andcs	r0, r0, sp, asr sl
 8012134:	74726150 	ldrbtvc	r6, [r2], #-336	; 0xfffffeb0
 8012138:	206c6169 	rsbcs	r6, ip, r9, ror #2
 801213c:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
 8012140:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 8012144:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8012148:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801214c:	 	movwpl	r0, #2675	; 0xa73

0801214f <OscServerMsgConst::START>:
 801214f:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8012153:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8012157:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 801215b:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 801215f:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8012163:	00726576 	rsbseq	r6, r2, r6, ror r5

08012167 <OscServerMsgConst::PARAMS>:
 8012167:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801216b:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801216f:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8012173:	2043534f 	subcs	r5, r3, pc, asr #6
 8012177:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801217b:	 	svcmi	0x00007265

0801217e <OscServerMsgConst::STARTED>:
 801217e:	2043534f 	subcs	r5, r3, pc, asr #6
 8012182:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8012186:	73207265 			; <UNDEFINED> instruction: 0x73207265
 801218a:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801218e:	 	andvc	r6, r0, r5, ror #8

08012191 <OscServerParamsConst::TRANSMISSION>:
 8012191:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 8012195:	5f6c6169 	svcpl	0x006c6169
 8012199:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 801219d:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80121a1:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

080121a6 <OscServerParamsConst::PATH_BLACKOUT>:
 80121a6:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80121aa:	616c625f 	cmnvs	ip, pc, asr r2
 80121ae:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8011653 <contentType+0xd>
 80121b2:	 	cmnvs	r0, r4, ror r0

080121b4 <OscServerParamsConst::PATH>:
 80121b4:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

080121b9 <OscServerParamsConst::FILE_NAME>:
 80121b9:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 80121bd:	00747874 	rsbseq	r7, r4, r4, ror r8

080121c1 <OscServerParamsConst::PATH_INFO>:
 80121c1:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80121c5:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 80121c9:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

080121cb <OscParamsConst::INCOMING_PORT>:
 80121cb:	6f636e69 	svcvs	0x00636e69
 80121cf:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 80121d3:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80121d7:	 	strbvc	r0, [pc, #-116]!	; 801216b <OscServerMsgConst::PARAMS+0x4>

080121d9 <OscParamsConst::OUTGOING_PORT>:
 80121d9:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 80121dd:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 80121e1:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80121e5:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 80121e9:	65532058 	ldrbvs	r2, [r3, #-88]	; 0xffffffa8
 80121ed:	000a646e 	andeq	r6, sl, lr, ror #8
 80121f1:	65724220 	ldrbvs	r4, [r2, #-544]!	; 0xfffffde0
 80121f5:	74206b61 	strtvc	r6, [r0], #-2913	; 0xfffff49f
 80121f9:	20656d69 	rsbcs	r6, r5, r9, ror #26
 80121fd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012201:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012205:	42414d20 	submi	r4, r1, #32, 26	; 0x800
 8012209:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 801220d:	20202065 	eorcs	r2, r0, r5, rrx
 8012211:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012215:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012219:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 801221d:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8012221:	74617220 	strbtvc	r7, [r1], #-544	; 0xfffffde0
 8012225:	203a2065 	eorscs	r2, sl, r5, rrx
 8012229:	000a7525 	andeq	r7, sl, r5, lsr #10
 801222d:	6f6c5320 	svcvs	0x006c5320
 8012231:	20207374 	eorcs	r7, r0, r4, ror r3
 8012235:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012239:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801223d:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012241:	 	andeq	r0, r0, r0

08012244 <vtable for DmxSend>:
	...
 801224c:	0800acf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, sp, pc}
 8012250:	0800addd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, sp, pc}
 8012254:	0800acf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 8012258:	0800ad29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, sp, pc}
 801225c:	0800ad5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, fp, sp, pc}
 8012260:	0800ad6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, pc}
 8012264:	0800ad79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, sp, pc}
 8012268:	0800ad85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, sp, pc}
 801226c:	0800e60d 	stmdaeq	r0, {r0, r2, r3, r9, sl, sp, lr, pc}
 8012270:	0800e603 	stmdaeq	r0, {r0, r1, r9, sl, sp, lr, pc}
 8012274:	0800e607 	stmdaeq	r0, {r0, r1, r2, r9, sl, sp, lr, pc}
 8012278:	0800e611 	stmdaeq	r0, {r0, r4, r9, sl, sp, lr, pc}

0801227c <DmxParamsConst::BREAK_TIME>:
 801227c:	61657262 	cmnvs	r5, r2, ror #4
 8012280:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8012284:	 	movwvc	r6, #1389	; 0x56d

08012287 <DmxParamsConst::SLOTS_COUNT>:
 8012287:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801228f <DmxParamsConst::SLOTS_COUNT+0x8>
 801228b:	6f635f73 	svcvs	0x00635f73
 801228f:	00746e75 	rsbseq	r6, r4, r5, ror lr

08012293 <DmxParamsConst::REFRESH_RATE>:
 8012293:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8012297:	5f687365 	svcpl	0x00687365
 801229b:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080122a0 <DmxParamsConst::MAB_TIME>:
 80122a0:	5f62616d 	svcpl	0x0062616d
 80122a4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080122a9 <DmxParamsConst::FILE_NAME>:
 80122a9:	61726170 	cmnvs	r2, r0, ror r1
 80122ad:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80122b1:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
 80122b5:	625f7063 	subsvs	r7, pc, #99	; 0x63
 80122b9:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
 80122bd:	6f74203a 	svcvs	0x0074203a
 80122c1:	616d206f 	cmnvs	sp, pc, rrx
 80122c5:	6320796e 			; <UNDEFINED> instruction: 0x6320796e
 80122c9:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
 80122cd:	6f697463 	svcvs	0x00697463
 80122d1:	6200736e 	andvs	r7, r0, #-1207959551	; 0xb8000001
 80122d5:	00646e69 	rsbeq	r6, r4, r9, ror #28
 80122d9:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 80122dd:	000a646e 	andeq	r6, sl, lr, ror #8
 80122e1:	20505241 	subscs	r5, r0, r1, asr #4
 80122e5:	6b6f6f6c 	blvs	9bee09d <__exidx_end+0x1bdb699>
 80122e9:	66207075 			; <UNDEFINED> instruction: 0x66207075
 80122ed:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 80122f1:	3e2d2064 	cdpcc	0, 2, cr2, cr13, cr4, {3}
 80122f5:	66656420 	strbtvs	r6, [r5], -r0, lsr #8
 80122f9:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 80122fd:	74616720 	strbtvc	r6, [r1], #-1824	; 0xfffff8e0
 8012301:	79617765 	stmdbvc	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
 8012305:	5241000a 	subpl	r0, r1, #10
 8012309:	6f6c2050 	svcvs	0x006c2050
 801230d:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8012311:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8012315:	0a64656c 	beq	992b8cd <__exidx_end+0x1918ec9>
	...

0801231a <NetworkConst::MSG_MDNS_CONFIG>:
 801231a:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801231e:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8012322:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8012326:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801232b <NetworkConst::MSG_NETWORK_INIT>:
 801232b:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801232f:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8012333:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8012337:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801233b:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801233f:	3135322e 	teqcc	r5, lr, lsr #4
 8012343:	63745f00 	cmnvs	r4, #0, 30
 8012347:	6f6c2e70 	svcvs	0x006c2e70
 801234b:	006c6163 	rsbeq	r6, ip, r3, ror #2
 801234f:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8012353:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8012357:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 801235f <NetworkConst::MSG_NETWORK_INIT+0x34>
 801235b:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 801235f:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8011503 <RemoteConfig::s_TXT+0x187>
 8012363:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8012367:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801236b:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 801236f:	20000a53 	andcs	r0, r0, r3, asr sl
 8012373:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8012377:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801237b:	0a676e69 	beq	99edd27 <__exidx_end+0x19db323>
 801237f:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8012383:	3a20656d 	bcc	882b93f <__exidx_end+0x818f3b>
 8012387:	0a732520 	beq	9cdb80f <__exidx_end+0x1cc8e0b>
 801238b:	73252000 			; <UNDEFINED> instruction: 0x73252000
 801238f:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8012393:	000a7325 	andeq	r7, sl, r5, lsr #6
 8012397:	30687465 	rsbcc	r7, r8, r5, ror #8
 801239b:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801239f:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80123a3:	5f656369 	svcpl	0x00656369
 80123a7:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 80123ab:	6b726f77 	blvs	9cae18f <__exidx_end+0x1c9b78b>
 80123af:	4820000a 	stmdami	r0!, {r1, r3}
 80123b3:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80123b7:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80123bb:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80123bf:	20000a73 	andcs	r0, r0, r3, ror sl
 80123c3:	614e6649 	cmpvs	lr, r9, asr #12
 80123c7:	2020656d 	eorcs	r6, r0, sp, ror #10
 80123cb:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80123cf:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80123d3:	000a7325 	andeq	r7, sl, r5, lsr #6
 80123d7:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80123db:	20202074 	eorcs	r2, r0, r4, ror r0
 80123df:	3a202020 	bcc	881a467 <__exidx_end+0x807a63>
 80123e3:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80123e7:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80123eb:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80123ef:	0a64252f 	beq	991b8b3 <__exidx_end+0x1908eaf>
 80123f3:	654e2000 	strbvs	r2, [lr, #-0]
 80123f7:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80123fb:	2020206b 	eorcs	r2, r0, fp, rrx
 80123ff:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012403:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012407:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801240b:	20000a64 	andcs	r0, r0, r4, ror #20
 801240f:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8012413:	20796177 	rsbscs	r6, r9, r7, ror r1
 8012417:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801241b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801241f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012423:	0a64252e 	beq	991b8e3 <__exidx_end+0x1908edf>
 8012427:	72422000 	subvc	r2, r2, #0
 801242b:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 801242f:	20747361 	rsbscs	r7, r4, r1, ror #6
 8012433:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012437:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801243b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801243f:	20000a64 	andcs	r0, r0, r4, ror #20
 8012443:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8012447:	20202020 	eorcs	r2, r0, r0, lsr #32
 801244b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801244f:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8012453:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8012457:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801245b:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 801245f:	3a78322e 	bcc	9e1ed1f <__exidx_end+0x1e0c31b>
 8012463:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8012467:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801246b:	20000a78 	andcs	r0, r0, r8, ror sl
 801246f:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8012473:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012477:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801247b:	000a6325 	andeq	r6, sl, r5, lsr #6
 801247f:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8012483:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8012487:	 	rsbvc	r0, r9, r0, asr r0

08012489 <NetworkParamsConst::IP_ADDRESS>:
 8012489:	615f7069 	cmpvs	pc, r9, rrx
 801248d:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8012491:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08012494 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8012494:	61666564 	cmnvs	r6, r4, ror #10
 8012498:	5f746c75 	svcpl	0x00746c75
 801249c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80124a0:	00796177 	rsbseq	r6, r9, r7, ror r1

080124a4 <NetworkParamsConst::DHCP_RETRY_TIME>:
 80124a4:	70636864 	rsbvc	r6, r3, r4, ror #16
 80124a8:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80124ac:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80124b4 <NetworkParamsConst::HOSTNAME>
 80124b0:	00656d69 	rsbeq	r6, r5, r9, ror #26

080124b4 <NetworkParamsConst::HOSTNAME>:
 80124b4:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80124b8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080124bd <NetworkParamsConst::NET_MASK>:
 80124bd:	5f74656e 	svcpl	0x0074656e
 80124c1:	6b73616d 	blvs	9ceaa7d <__exidx_end+0x1cd8079>
	...

080124c6 <NetworkParamsConst::USE_DHCP>:
 80124c6:	5f657375 	svcpl	0x00657375
 80124ca:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080124cf <NetworkParamsConst::FILE_NAME>:
 80124cf:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80124d3:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80124d7:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

080124dc <s_aStorSize>:
 80124dc:	00000060 	andeq	r0, r0, r0, rrx
 80124e0:	00000090 	muleq	r0, r0, r0
 80124e4:	00000020 	andeq	r0, r0, r0, lsr #32
 80124e8:	00000040 	andeq	r0, r0, r0, asr #32
 80124ec:	00000060 	andeq	r0, r0, r0, rrx
 80124f0:	00000040 	andeq	r0, r0, r0, asr #32
 80124f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80124f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80124fc:	000001e0 	andeq	r0, r0, r0, ror #3
 8012500:	00000040 	andeq	r0, r0, r0, asr #32
 8012504:	00000020 	andeq	r0, r0, r0, lsr #32
 8012508:	00000060 	andeq	r0, r0, r0, rrx
 801250c:	00000030 	andeq	r0, r0, r0, lsr r0
 8012510:	00000020 	andeq	r0, r0, r0, lsr #32
 8012514:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012518:	00000030 	andeq	r0, r0, r0, lsr r0
 801251c:	00000040 	andeq	r0, r0, r0, asr #32
 8012520:	00000020 	andeq	r0, r0, r0, lsr #32
 8012524:	00000060 	andeq	r0, r0, r0, rrx
 8012528:	00000020 	andeq	r0, r0, r0, lsr #32
 801252c:	00000400 	andeq	r0, r0, r0, lsl #8
 8012530:	00000020 	andeq	r0, r0, r0, lsr #32
 8012534:	00000020 	andeq	r0, r0, r0, lsr #32
 8012538:	00000040 	andeq	r0, r0, r0, asr #32
 801253c:	00000060 	andeq	r0, r0, r0, rrx
 8012540:	00000020 	andeq	r0, r0, r0, lsr #32
 8012544:	00000020 	andeq	r0, r0, r0, lsr #32
 8012548:	000000c0 	andeq	r0, r0, r0, asr #1

0801254c <vtable for StoreDmxSend>:
	...
 8012554:	0800dbad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, fp, ip, lr, pc}
 8012558:	0800dbf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
 801255c:	0800dbd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, ip, lr, pc}
 8012560:	0800dbb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, ip, lr, pc}

08012564 <vtable for StoreNetwork>:
	...
 801256c:	0800dc19 	stmdaeq	r0, {r0, r3, r4, sl, fp, ip, lr, pc}
 8012570:	0800dd2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip, lr, pc}
 8012574:	0800dc21 	stmdaeq	r0, {r0, r5, sl, fp, ip, lr, pc}
 8012578:	0800dd41 	stmdaeq	r0, {r0, r6, r8, sl, fp, ip, lr, pc}
 801257c:	0800dcd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, ip, lr, pc}
 8012580:	0800dca5 	stmdaeq	r0, {r0, r2, r5, r7, sl, fp, ip, lr, pc}
 8012584:	0800dc75 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, fp, ip, lr, pc}
 8012588:	0800dcfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
 801258c:	0800dc45 	stmdaeq	r0, {r0, r2, r6, sl, fp, ip, lr, pc}
 8012590:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8012594:	00000000 	andeq	r0, r0, r0
 8012598:	0800dc1b 	stmdaeq	r0, {r0, r1, r3, r4, sl, fp, ip, lr, pc}
 801259c:	0800dd39 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, fp, ip, lr, pc}
 80125a0:	0800dcf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, ip, lr, pc}
 80125a4:	0800dcc9 	stmdaeq	r0, {r0, r3, r6, r7, sl, fp, ip, lr, pc}
 80125a8:	0800dc9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, ip, lr, pc}
 80125ac:	0800dd25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, ip, lr, pc}
 80125b0:	0800dc6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, ip, lr, pc}

080125b4 <vtable for StoreOscServer>:
	...
 80125bc:	0800dd79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, ip, lr, pc}
 80125c0:	0800ddc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, ip, lr, pc}
 80125c4:	0800dda1 	stmdaeq	r0, {r0, r5, r7, r8, sl, fp, ip, lr, pc}
 80125c8:	0800dd7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, lr, pc}

080125cc <vtable for StoreRemoteConfig>:
	...
 80125d4:	0800dde5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 80125d8:	0800de31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, ip, lr, pc}
 80125dc:	0800de0d 	stmdaeq	r0, {r0, r2, r3, r9, sl, fp, ip, lr, pc}
 80125e0:	0800dde9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 80125e4:	3a434d46 	bcc	90e5b04 <__exidx_end+0x10d3100>
 80125e8:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 80125ec:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 80125f0:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80125f4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80125f8:	6f742068 	svcvs	0x00742068
 80125fc:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8012600:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8012604:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8012608:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801260c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8012610:	2522000a 	strcs	r0, [r2, #-10]!
 8012614:	223a2273 	eorscs	r2, sl, #805306375	; 0x30000007
 8012618:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801261c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012620:	2264252e 	rsbcs	r2, r4, #192937984	; 0xb800000
 8012624:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8012628:	64253d73 	strtvs	r3, [r5], #-3443	; 0xfffff28d
 801262c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012630:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012634:	23000a64 	movwcs	r0, #2660	; 0xa64
 8012638:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801263c:	4e000a23 	vmlami.f32	s0, s0, s7
 8012640:	6964206f 	stmdbvs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
 8012644:	616c7073 	smcvs	50947	; 0xc703
 8012648:	6f662079 	svcvs	0x00662079
 801264c:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8012650:	31314853 	teqcc	r1, r3, asr r8
 8012654:	53003630 	movwpl	r3, #1584	; 0x630
 8012658:	33314453 	teqcc	r1, #1392508928	; 0x53000000
 801265c:	25003630 	strcs	r3, [r0, #-1584]	; 0xfffff9d0
 8012660:	25282073 	strcs	r2, [r8, #-115]!	; 0xffffff8d
 8012664:	64252c64 	strtvs	r2, [r5], #-3172	; 0xfffff39c
 8012668:	40000a29 	andmi	r0, r0, r9, lsr #20
 801266c:	eeaaeeaa 	cdp	14, 10, cr14, cr10, cr10, {5}
 8012670:	00000000 	andeq	r0, r0, r0

08012674 <_OledFont8x6>:
 8012674:	00000040 	andeq	r0, r0, r0, asr #32
 8012678:	40000000 	andmi	r0, r0, r0
 801267c:	005f0000 	subseq	r0, pc, r0
 8012680:	00400000 	subeq	r0, r0, r0
 8012684:	00070007 	andeq	r0, r7, r7
 8012688:	7f144000 	svcvc	0x00144000
 801268c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8012690:	7f2a2440 	svcvc	0x002a2440
 8012694:	4000122a 	andmi	r1, r0, sl, lsr #4
 8012698:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801269c:	36400062 	strbcc	r0, [r0], -r2, rrx
 80126a0:	50205649 	eorpl	r5, r0, r9, asr #12
 80126a4:	08004000 	stmdaeq	r0, {lr}
 80126a8:	00000307 	andeq	r0, r0, r7, lsl #6
 80126ac:	221c0040 	andscs	r0, ip, #64	; 0x40
 80126b0:	40000041 	andmi	r0, r0, r1, asr #32
 80126b4:	1c224100 	stfnes	f4, [r2], #-0
 80126b8:	2a400000 	bcs	90126c0 <__exidx_end+0xfffcbc>
 80126bc:	2a1c7f1c 	bcs	8732334 <__exidx_end+0x71f930>
 80126c0:	08084000 	stmdaeq	r8, {lr}
 80126c4:	0008083e 	andeq	r0, r8, lr, lsr r8
 80126c8:	70800040 	addvc	r0, r0, r0, asr #32
 80126cc:	40000030 	andmi	r0, r0, r0, lsr r0
 80126d0:	08080808 	stmdaeq	r8, {r3, fp}
 80126d4:	00400008 	subeq	r0, r0, r8
 80126d8:	00606000 	rsbeq	r6, r0, r0
 80126dc:	10204000 	eorne	r4, r0, r0
 80126e0:	00020408 	andeq	r0, r2, r8, lsl #8
 80126e4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80126e8:	40003e45 	andmi	r3, r0, r5, asr #28
 80126ec:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80126f0:	72400000 	subvc	r0, r0, #0
 80126f4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80126f8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80126fc:	00334d49 	eorseq	r4, r3, r9, asr #26
 8012700:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8012704:	4000107f 	andmi	r1, r0, pc, ror r0
 8012708:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801270c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8012710:	3149494a 	cmpcc	r9, sl, asr #18
 8012714:	21414000 	mrscs	r4, (UNDEF: 65)
 8012718:	00070911 	andeq	r0, r7, r1, lsl r9
 801271c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8012720:	40003649 	andmi	r3, r0, r9, asr #12
 8012724:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8012728:	0040001e 	subeq	r0, r0, lr, lsl r0
 801272c:	00001400 	andeq	r1, r0, r0, lsl #8
 8012730:	40004000 	andmi	r4, r0, r0
 8012734:	00000034 	andeq	r0, r0, r4, lsr r0
 8012738:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801273c:	40004122 	andmi	r4, r0, r2, lsr #2
 8012740:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8012744:	00400014 	subeq	r0, r0, r4, lsl r0
 8012748:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801274c:	01024000 	mrseq	r4, (UNDEF: 2)
 8012750:	00060959 	andeq	r0, r6, r9, asr r9
 8012754:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8012758:	40004e59 	andmi	r4, r0, r9, asr lr
 801275c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8012760:	7f40007c 	svcvc	0x0040007c
 8012764:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8012768:	413e4000 	teqmi	lr, r0
 801276c:	00224141 	eoreq	r4, r2, r1, asr #2
 8012770:	41417f40 	cmpmi	r1, r0, asr #30
 8012774:	40003e41 	andmi	r3, r0, r1, asr #28
 8012778:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801277c:	7f400041 	svcvc	0x00400041
 8012780:	01090909 	tsteq	r9, r9, lsl #18
 8012784:	413e4000 	teqmi	lr, r0
 8012788:	00735141 	rsbseq	r5, r3, r1, asr #2
 801278c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8012790:	40007f08 	andmi	r7, r0, r8, lsl #30
 8012794:	417f4100 	cmnmi	pc, r0, lsl #2
 8012798:	20400000 	subcs	r0, r0, r0
 801279c:	013f4140 	teqeq	pc, r0, asr #2
 80127a0:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80127a4:	00412214 	subeq	r2, r1, r4, lsl r2
 80127a8:	40407f40 	submi	r7, r0, r0, asr #30
 80127ac:	40004040 	andmi	r4, r0, r0, asr #32
 80127b0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80127b4:	7f40007f 	svcvc	0x0040007f
 80127b8:	7f100804 	svcvc	0x00100804
 80127bc:	413e4000 	teqmi	lr, r0
 80127c0:	003e4141 	eorseq	r4, lr, r1, asr #2
 80127c4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80127c8:	40000609 	andmi	r0, r0, r9, lsl #12
 80127cc:	2151413e 	cmpcs	r1, lr, lsr r1
 80127d0:	7f40005e 	svcvc	0x0040005e
 80127d4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80127d8:	49264000 	stmdbmi	r6!, {lr}
 80127dc:	00324949 	eorseq	r4, r2, r9, asr #18
 80127e0:	7f010340 	svcvc	0x00010340
 80127e4:	40000301 	andmi	r0, r0, r1, lsl #6
 80127e8:	4040403f 	submi	r4, r0, pc, lsr r0
 80127ec:	1f40003f 	svcne	0x0040003f
 80127f0:	1f204020 	svcne	0x00204020
 80127f4:	403f4000 	eorsmi	r4, pc, r0
 80127f8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80127fc:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8012800:	40006314 	andmi	r6, r0, r4, lsl r3
 8012804:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8012808:	61400003 	cmpvs	r0, r3
 801280c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8012810:	7f004000 	svcvc	0x00004000
 8012814:	00414141 	subeq	r4, r1, r1, asr #2
 8012818:	08040240 	stmdaeq	r4, {r6, r9}
 801281c:	40002010 	andmi	r2, r0, r0, lsl r0
 8012820:	41414100 	mrsmi	r4, (UNDEF: 81)
 8012824:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8012828:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801282c:	40404000 	submi	r4, r0, r0
 8012830:	00404040 	subeq	r4, r0, r0, asr #32
 8012834:	07030040 	streq	r0, [r3, -r0, asr #32]
 8012838:	40000008 	andmi	r0, r0, r8
 801283c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8012840:	7f400040 	svcvc	0x00400040
 8012844:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8012848:	44384000 	ldrtmi	r4, [r8], #-0
 801284c:	00284444 	eoreq	r4, r8, r4, asr #8
 8012850:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8012854:	40007f28 	andmi	r7, r0, r8, lsr #30
 8012858:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801285c:	00400018 	subeq	r0, r0, r8, lsl r0
 8012860:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8012864:	a4184000 	ldrge	r4, [r8], #-0
 8012868:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801286c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8012870:	40007804 	andmi	r7, r0, r4, lsl #16
 8012874:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8012878:	20400000 	subcs	r0, r0, r0
 801287c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8012880:	107f4000 	rsbsne	r4, pc, r0
 8012884:	00004428 	andeq	r4, r0, r8, lsr #8
 8012888:	7f410040 	svcvc	0x00410040
 801288c:	40000040 	andmi	r0, r0, r0, asr #32
 8012890:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8012894:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8012898:	78040408 	stmdavc	r4, {r3, sl}
 801289c:	44384000 	ldrtmi	r4, [r8], #-0
 80128a0:	00384444 	eorseq	r4, r8, r4, asr #8
 80128a4:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80128a8:	40001824 	andmi	r1, r0, r4, lsr #16
 80128ac:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80128b0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80128b4:	08040408 	stmdaeq	r4, {r3, sl}
 80128b8:	54484000 	strbpl	r4, [r8], #-0
 80128bc:	00245454 	eoreq	r5, r4, r4, asr r4
 80128c0:	3f040440 	svccc	0x00040440
 80128c4:	40002444 	andmi	r2, r0, r4, asr #8
 80128c8:	2040403c 	subcs	r4, r0, ip, lsr r0
 80128cc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80128d0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80128d4:	403c4000 	eorsmi	r4, ip, r0
 80128d8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80128dc:	10284440 	eorne	r4, r8, r0, asr #8
 80128e0:	40004428 	andmi	r4, r0, r8, lsr #8
 80128e4:	9090904c 	addsls	r9, r0, ip, asr #32
 80128e8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80128ec:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80128f0:	08004000 	stmdaeq	r0, {lr}
 80128f4:	00004136 	andeq	r4, r0, r6, lsr r1
 80128f8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80128fc:	40000000 	andmi	r0, r0, r0
 8012900:	08364100 	ldmdaeq	r6!, {r8, lr}
 8012904:	02400000 	subeq	r0, r0, #0
 8012908:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801290c:	263c4000 	ldrtcs	r4, [ip], -r0
 8012910:	003c2623 	eorseq	r2, ip, r3, lsr #12

08012914 <oled_128x32_init>:
 8012914:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012918:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801291c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012920:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8012924:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012928:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801292c <oled_128x64_init>:
 801292c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012930:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8012934:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012938:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801293c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012940:	a6a440db 	ssatge	r4, #5, fp, asr #1

08012944 <vtable for Ssd1306>:
	...
 801294c:	0800e775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8012950:	0800e7a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, sp, lr, pc}
 8012954:	0800eab1 	stmdaeq	r0, {r0, r4, r5, r7, r9, fp, sp, lr, pc}
 8012958:	0800ea39 	stmdaeq	r0, {r0, r3, r4, r5, r9, fp, sp, lr, pc}
 801295c:	0800e905 	stmdaeq	r0, {r0, r2, r8, fp, sp, lr, pc}
 8012960:	0800e7c1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, sp, lr, pc}
 8012964:	0800e7e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8012968:	0800e8db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, fp, sp, lr, pc}
 801296c:	0800e895 	stmdaeq	r0, {r0, r2, r4, r7, fp, sp, lr, pc}
 8012970:	0800e777 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8012974:	0800e941 	stmdaeq	r0, {r0, r6, r8, fp, sp, lr, pc}
 8012978:	0800e94d 	stmdaeq	r0, {r0, r2, r3, r6, r8, fp, sp, lr, pc}
 801297c:	0800e967 	stmdaeq	r0, {r0, r1, r2, r5, r6, r8, fp, sp, lr, pc}
 8012980:	0800e779 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8012984:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8012988:	5b1b006d 	blpl	86d2b44 <__exidx_end+0x6c0140>
 801298c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8012990:	31335b1b 	teqcc	r3, fp, lsl fp
 8012994:	5b1b006d 	blpl	86d2b50 <__exidx_end+0x6c014c>
 8012998:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801299c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80129a0:	5b1b006d 	blpl	86d2b5c <__exidx_end+0x6c0158>
 80129a4:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80129a8:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80129ac:	205d732a 	subscs	r7, sp, sl, lsr #6
 80129b0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80129b4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80129b8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80129bc:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80129c0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80129c4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80129c8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20

080129cc <days_of_month>:
 80129cc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129d0:	0000001c 	andeq	r0, r0, ip, lsl r0
 80129d4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129d8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80129dc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129e0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80129e4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129e8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129ec:	0000001e 	andeq	r0, r0, lr, lsl r0
 80129f0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80129f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80129f8:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080129fc <__exidx_start>:
 80129fc:	7fff5eb4 	svcvc	0x00ff5eb4
 8012a00:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08012a04 <.ARM.attributes>:
 8012a04:	00002e41 	andeq	r2, r0, r1, asr #28
 8012a08:	61656100 	cmnvs	r5, r0, lsl #2
 8012a0c:	01006962 	tsteq	r0, r2, ror #18
 8012a10:	00000024 	andeq	r0, r0, r4, lsr #32
 8012a14:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8012a18:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8012a1c:	0600334d 	streq	r3, [r0], -sp, asr #6
 8012a20:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8012a24:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8012a28:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8012a2c:	1a011803 	bne	8058a40 <__exidx_end+0x4603c>
 8012a30:	Address 0x0000000008012a30 is out of bounds.


Disassembly of section .data:

20000000 <s_nDmxTransmitPeriod>:
20000000:	000061a8 	andeq	r6, r0, r8, lsr #3

20000004 <s_nDmxTransmitMabTime>:
20000004:	0000000c 	andeq	r0, r0, ip

20000008 <s_nDmxTransmitBreakTime>:
20000008:	0000005c 	andeq	r0, r0, ip, asr r0

2000000c <DmxConfigUdp::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <s_multicast_mac>:
20000010:	005e0001 	subseq	r0, lr, r1
20000014:	00000000 	andeq	r0, r0, r0

20000018 <MDNS::s_nHandle>:
20000018:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000001c <next_block>:
2000001c:	20015800 	andcs	r5, r1, r0, lsl #16

20000020 <s_block_bucket>:
20000020:	00000010 	andeq	r0, r0, r0, lsl r0
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000040 	andeq	r0, r0, r0, asr #32
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000060 	andeq	r0, r0, r0, rrx
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000080 	andeq	r0, r0, r0, lsl #1
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000100 	andeq	r0, r0, r0, lsl #2
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000140 	andeq	r0, r0, r0, asr #2
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000180 	andeq	r0, r0, r0, lsl #3
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000200 	andeq	r0, r0, r0, lsl #4
20000064:	00000000 	andeq	r0, r0, r0
20000068:	00000300 	andeq	r0, r0, r0, lsl #6
2000006c:	00000000 	andeq	r0, r0, r0
20000070:	00000400 	andeq	r0, r0, r0, lsl #8
20000074:	00000000 	andeq	r0, r0, r0
20000078:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000088 <SystemCoreClock>:
20000088:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

20000090 <outptr>:
20000090:	00000000 	andeq	r0, r0, r0

20000094 <RemoteConfig::s_pUdpBuffer>:
20000094:	00000000 	andeq	r0, r0, r0

20000098 <RemoteConfig::s_RemoteConfigListBin>:
	...

200000bc <RemoteConfig::s_pThis>:
200000bc:	00000000 	andeq	r0, r0, r0

200000c0 <HttpDaemon::m_Content>:
	...

20000660 <OscServer::s_aPathInfo>:
	...

200006e0 <OscServer::s_pUdpBuffer>:
200006e0:	00000000 	andeq	r0, r0, r0

200006e4 <OscServer::s_aPathSecond>:
	...

20000764 <OscServer::s_aPathBlackOut>:
	...

200007e4 <OscServer::s_aPath>:
	...

20000864 <OscServer::s_pData>:
	...

20000a64 <OscServer::s_pThis>:
20000a64:	00000000 	andeq	r0, r0, r0

20000a68 <OscSimpleSend::s_Message>:
	...

20000c68 <DmxSend::s_nStarted>:
20000c68:	00000000 	andeq	r0, r0, r0

20000c6c <s_RxBuffer>:
	...

20000e7c <s_TxBuffer>:
	...

20001080 <sv_PortState>:
20001080:	00000000 	andeq	r0, r0, r0

20001084 <sv_nRxDmxPackets>:
	...

20001094 <sv_nUartsSending>:
20001094:	00000000 	andeq	r0, r0, r0

20001098 <Dmx::s_pThis>:
20001098:	00000000 	andeq	r0, r0, r0

2000109c <gv_RdmDataReceiveEnd>:
2000109c:	00000000 	andeq	r0, r0, r0

200010a0 <DmxConfigUdp::s_pUdpBuffer>:
200010a0:	00000000 	andeq	r0, r0, r0

200010a4 <g_ip_info>:
	...

200010b0 <g_mac_address>:
200010b0:	00000000 	andeq	r0, r0, r0
	...

200010b6 <s_is_dhcp>:
	...

200010b8 <s_p>:
200010b8:	00000000 	andeq	r0, r0, r0

200010bc <s_ticker>:
200010bc:	00000000 	andeq	r0, r0, r0

200010c0 <s_mac_address>:
	...

200010c8 <s_mac_address_arp_reply>:
	...

200010d0 <s_id>:
200010d0:	00000000 	andeq	r0, r0, r0

200010d4 <s_recv_queue>:
	...

20001c44 <s_tcb>:
	...

20001c88 <s_tcp>:
	...

20002274 <broadcast_mask>:
20002274:	00000000 	andeq	r0, r0, r0

20002278 <gw_ip>:
20002278:	00000000 	andeq	r0, r0, r0

2000227c <on_network_mask>:
2000227c:	00000000 	andeq	r0, r0, r0

20002280 <s_id>:
20002280:	00000000 	andeq	r0, r0, r0

20002284 <s_ports_allowed>:
	...

200022a4 <s_recv_queue>:
	...

20007f44 <s_send_packet>:
	...

20008530 <MDNS::s_nRemoteIp>:
20008530:	00000000 	andeq	r0, r0, r0

20008534 <MDNS::s_nRemotePort>:
20008534:	00000000 	andeq	r0, r0, r0

20008538 <MDNS::s_nMulticastIp>:
20008538:	00000000 	andeq	r0, r0, r0

2000853c <MDNS::s_AnswerLocalIp>:
	...

20008740 <MDNS::s_ServiceRecords>:
	...

20008760 <MDNS::s_nBytesReceived>:
20008760:	00000000 	andeq	r0, r0, r0

20008764 <MDNS::s_ServiceRecordsData>:
	...

20008968 <MDNS::s_pName>:
20008968:	00000000 	andeq	r0, r0, r0

2000896c <MDNS::s_pBuffer>:
2000896c:	00000000 	andeq	r0, r0, r0

20008970 <Network::s_pThis>:
20008970:	00000000 	andeq	r0, r0, r0

20008974 <s_arp_announce>:
	...

200089a0 <s_arp_reply>:
	...

200089cc <s_arp_request>:
	...

200089f8 <s_arp_records>:
	...

20008b78 <s_entry_current>:
20008b78:	00000000 	andeq	r0, r0, r0

20008b7c <s_dhcp_allocated_gw>:
20008b7c:	00000000 	andeq	r0, r0, r0

20008b80 <s_dhcp_allocated_ip>:
20008b80:	00000000 	andeq	r0, r0, r0

20008b84 <s_dhcp_allocated_netmask>:
20008b84:	00000000 	andeq	r0, r0, r0

20008b88 <s_dhcp_message>:
	...

20008dac <s_dhcp_server_ip>:
20008dac:	00000000 	andeq	r0, r0, r0

20008db0 <s_groups>:
	...

20008ed0 <s_id>:
20008ed0:	00000000 	andeq	r0, r0, r0

20008ed4 <s_joins_allowed_index>:
20008ed4:	00000000 	andeq	r0, r0, r0

20008ed8 <s_leave>:
	...

20008f08 <s_multicast_mac>:
	...

20008f10 <s_report>:
	...

20008f40 <ConfigStore::s_nWaitMillis>:
20008f40:	00000000 	andeq	r0, r0, r0

20008f44 <ConfigStore::s_SpiFlashData>:
	...

20009f44 <ConfigStore::s_nStartAddress>:
20009f44:	00000000 	andeq	r0, r0, r0

20009f48 <ConfigStore::s_bHaveFlashChip>:
20009f48:	00000000 	andeq	r0, r0, r0

20009f4c <ConfigStore::s_nSpiFlashStoreSize>:
20009f4c:	00000000 	andeq	r0, r0, r0

20009f50 <ConfigStore::s_State>:
20009f50:	00000000 	andeq	r0, r0, r0

20009f54 <ConfigStore::s_pThis>:
20009f54:	00000000 	andeq	r0, r0, r0

20009f58 <ConfigStore::s_bIsNew>:
20009f58:	00000000 	andeq	r0, r0, r0

20009f5c <StoreDmxSend::s_pThis>:
20009f5c:	00000000 	andeq	r0, r0, r0

20009f60 <StoreNetwork::s_pThis>:
20009f60:	00000000 	andeq	r0, r0, r0

20009f64 <StoreOscServer::s_pThis>:
20009f64:	00000000 	andeq	r0, r0, r0

20009f68 <StoreRemoteConfig::s_pThis>:
20009f68:	00000000 	andeq	r0, r0, r0

20009f6c <FlashCode::s_pThis>:
20009f6c:	00000000 	andeq	r0, r0, r0

20009f70 <flashcode::s_nAddress>:
20009f70:	00000000 	andeq	r0, r0, r0

20009f74 <flashcode::s_State>:
20009f74:	00000000 	andeq	r0, r0, r0

20009f78 <flashcode::s_nPage>:
20009f78:	00000000 	andeq	r0, r0, r0

20009f7c <flashcode::s_pData>:
20009f7c:	00000000 	andeq	r0, r0, r0

20009f80 <flashcode::s_isBank0>:
20009f80:	00000000 	andeq	r0, r0, r0

20009f84 <flashcode::s_nLength>:
20009f84:	00000000 	andeq	r0, r0, r0

20009f88 <PropertiesConfig::s_Config>:
20009f88:	00000000 	andeq	r0, r0, r0

20009f8c <Display::s_pThis>:
20009f8c:	00000000 	andeq	r0, r0, r0

20009f90 <_ClearBuffer>:
	...

2000a018 <Ssd1306::s_pThis>:
2000a018:	00000000 	andeq	r0, r0, r0

2000a01c <FirmwareVersion::s_FirmwareVersion>:
	...

2000a032 <FirmwareVersion::s_Print>:
	...

2000a074 <FirmwareVersion::s_pThis>:
2000a074:	00000000 	andeq	r0, r0, r0

2000a078 <LedBlink::s_pThis>:
2000a078:	00000000 	andeq	r0, r0, r0

2000a07c <Hardware::s_pThis>:
2000a07c:	00000000 	andeq	r0, r0, r0

2000a080 <last.0>:
	...

2000a088 <s_micros>:
	...

2000a090 <set_timer>:
2000a090:	00000000 	andeq	r0, r0, r0

2000a094 <s_nSysTickMillis>:
2000a094:	00000000 	andeq	r0, r0, r0

2000a098 <dma_current_ptp_rxdesc>:
2000a098:	00000000 	andeq	r0, r0, r0

2000a09c <dma_current_ptp_txdesc>:
2000a09c:	00000000 	andeq	r0, r0, r0

2000a0a0 <dma_current_rxdesc>:
2000a0a0:	00000000 	andeq	r0, r0, r0

2000a0a4 <dma_current_txdesc>:
2000a0a4:	00000000 	andeq	r0, r0, r0

2000a0a8 <enet_initpara>:
	...

2000a0e4 <rx_buff>:
	...

2000d084 <rxdesc_tab>:
	...

2000d104 <tx_buff>:
	...

2000dcec <txdesc_tab>:
	...

2000dd0c <s_nAddress>:
2000dd0c:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

20015800 <heap_low>:
	...

Disassembly of section .stack:

20016000 <_sp-0x2000>:
	...
