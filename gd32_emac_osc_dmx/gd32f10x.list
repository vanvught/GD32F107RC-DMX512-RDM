
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	08007dad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, sp, lr}
 8007008:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800700c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007010:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007014:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007018:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 800702c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007030:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800703c:	0800f281 	stmdaeq	r0, {r0, r7, r9, ip, sp, lr, pc}
 8007040:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007044:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007048:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800704c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007050:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007054:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007058:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800705c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007060:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007064:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007068:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800706c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007070:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007074:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007078:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800707c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007080:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007084:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007088:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800708c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007090:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007094:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007098:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800709c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070a8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ac:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070b0:	08009ec5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, fp, ip, pc}
 80070b4:	08009f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 80070b8:	08009fc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, pc}
 80070bc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070c8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070cc:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070d8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070dc:	08009c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, ip, pc}
 80070e0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070e8:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070ec:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f0:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 80070f4:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
	...
 8007100:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800710c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007110:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007114:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007118:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800711c:	08009fe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 8007120:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007124:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007128:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800712c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007130:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007134:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007138:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800713c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007140:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007144:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8007148:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 800714c:	08007df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9a7 	bl	80074dc <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fd6f 	bl	800dc84 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f005 f88c 	bl	800c2cc <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f883 	bl	80072c4 <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 ff80 	bl	800e0c4 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001bcc 	andcs	r1, r0, ip, asr #23
 80071e8:	20001bc0 	andcs	r1, r0, r0, asr #23
 80071ec:	20001bd2 	ldrdcs	r1, [r0], -r2

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f97e 	bl	80074f2 <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 be48 	b.w	800de94 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001bd2 	ldrdcs	r1, [r0], -r2

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001bdc 	ldrdcs	r1, [r0], -ip

08007224 <tcp_init>:
 8007224:	2206      	movs	r2, #6
 8007226:	b513      	push	{r0, r1, r4, lr}
 8007228:	4c0b      	ldr	r4, [pc, #44]	; (8007258 <tcp_init+0x34>)
 800722a:	490c      	ldr	r1, [pc, #48]	; (800725c <tcp_init+0x38>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f005 f8a7 	bl	800c380 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	81a3      	strh	r3, [r4, #12]
 8007238:	4b09      	ldr	r3, [pc, #36]	; (8007260 <tcp_init+0x3c>)
 800723a:	eb0d 0102 	add.w	r1, sp, r2
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	f104 001a 	add.w	r0, r4, #26
 8007244:	9301      	str	r3, [sp, #4]
 8007246:	f005 f89b 	bl	800c380 <memcpy.isra.0>
 800724a:	2345      	movs	r3, #69	; 0x45
 800724c:	81e3      	strh	r3, [r4, #14]
 800724e:	4b05      	ldr	r3, [pc, #20]	; (8007264 <tcp_init+0x40>)
 8007250:	6163      	str	r3, [r4, #20]
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
 8007256:	bf00      	nop
 8007258:	200027a4 	andcs	r2, r0, r4, lsr #15
 800725c:	20001bcc 	andcs	r1, r0, ip, asr #23
 8007260:	20001bc0 	andcs	r1, r0, r0, asr #23
 8007264:	06400040 	strbeq	r0, [r0], -r0, asr #32

08007268 <udp_init>:
 8007268:	b570      	push	{r4, r5, r6, lr}
 800726a:	2200      	movs	r2, #0
 800726c:	2408      	movs	r4, #8
 800726e:	460e      	mov	r6, r1
 8007270:	4b0d      	ldr	r3, [pc, #52]	; (80072a8 <udp_init+0x40>)
 8007272:	490e      	ldr	r1, [pc, #56]	; (80072ac <udp_init+0x44>)
 8007274:	3c01      	subs	r4, #1
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	805a      	strh	r2, [r3, #2]
 800727a:	f841 2b04 	str.w	r2, [r1], #4
 800727e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8007282:	d1f7      	bne.n	8007274 <udp_init+0xc>
 8007284:	2206      	movs	r2, #6
 8007286:	4d0a      	ldr	r5, [pc, #40]	; (80072b0 <udp_init+0x48>)
 8007288:	4b0a      	ldr	r3, [pc, #40]	; (80072b4 <udp_init+0x4c>)
 800728a:	4601      	mov	r1, r0
 800728c:	18a8      	adds	r0, r5, r2
 800728e:	801c      	strh	r4, [r3, #0]
 8007290:	f005 f9fa 	bl	800c688 <memcpy.isra.0>
 8007294:	4b08      	ldr	r3, [pc, #32]	; (80072b8 <udp_init+0x50>)
 8007296:	4630      	mov	r0, r6
 8007298:	60eb      	str	r3, [r5, #12]
 800729a:	4b08      	ldr	r3, [pc, #32]	; (80072bc <udp_init+0x54>)
 800729c:	616b      	str	r3, [r5, #20]
 800729e:	f005 fa1b 	bl	800c6d8 <udp_set_ip>
 80072a2:	852c      	strh	r4, [r5, #40]	; 0x28
 80072a4:	bd70      	pop	{r4, r5, r6, pc}
 80072a6:	bf00      	nop
 80072a8:	20002dc0 	andcs	r2, r0, r0, asr #27
 80072ac:	20002da0 	andcs	r2, r0, r0, lsr #27
 80072b0:	20008a60 	andcs	r8, r0, r0, ror #20
 80072b4:	20002d9c 	mulcs	r0, ip, sp
 80072b8:	00450008 	subeq	r0, r5, r8
 80072bc:	11400040 	cmpne	r0, r0, asr #32

080072c0 <udp_shutdown>:
 80072c0:	4770      	bx	lr
	...

080072c4 <arp_init>:
 80072c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	f000 f876 	bl	80073bc <arp_cache_init>
 80072d0:	2206      	movs	r2, #6
 80072d2:	4621      	mov	r1, r4
 80072d4:	482e      	ldr	r0, [pc, #184]	; (8007390 <arp_init+0xcc>)
 80072d6:	682f      	ldr	r7, [r5, #0]
 80072d8:	f006 fb58 	bl	800d98c <memcpy.isra.0>
 80072dc:	4b2d      	ldr	r3, [pc, #180]	; (8007394 <arp_init+0xd0>)
 80072de:	2507      	movs	r5, #7
 80072e0:	461e      	mov	r6, r3
 80072e2:	22ff      	movs	r2, #255	; 0xff
 80072e4:	3d01      	subs	r5, #1
 80072e6:	d146      	bne.n	8007376 <arp_init+0xb2>
 80072e8:	4b2b      	ldr	r3, [pc, #172]	; (8007398 <arp_init+0xd4>)
 80072ea:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800739c <arp_init+0xd8>
 80072ee:	2206      	movs	r2, #6
 80072f0:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80072f8:	4621      	mov	r1, r4
 80072fa:	4829      	ldr	r0, [pc, #164]	; (80073a0 <arp_init+0xdc>)
 80072fc:	82b3      	strh	r3, [r6, #20]
 80072fe:	f006 fb45 	bl	800d98c <memcpy.isra.0>
 8007302:	2307      	movs	r3, #7
 8007304:	4a27      	ldr	r2, [pc, #156]	; (80073a4 <arp_init+0xe0>)
 8007306:	61f7      	str	r7, [r6, #28]
 8007308:	3b01      	subs	r3, #1
 800730a:	d137      	bne.n	800737c <arp_init+0xb8>
 800730c:	2206      	movs	r2, #6
 800730e:	4621      	mov	r1, r4
 8007310:	4825      	ldr	r0, [pc, #148]	; (80073a8 <arp_init+0xe4>)
 8007312:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007316:	f006 fb39 	bl	800d98c <memcpy.isra.0>
 800731a:	4a24      	ldr	r2, [pc, #144]	; (80073ac <arp_init+0xe8>)
 800731c:	2306      	movs	r3, #6
 800731e:	4615      	mov	r5, r2
 8007320:	21ff      	movs	r1, #255	; 0xff
 8007322:	3b01      	subs	r3, #1
 8007324:	d22d      	bcs.n	8007382 <arp_init+0xbe>
 8007326:	4b1c      	ldr	r3, [pc, #112]	; (8007398 <arp_init+0xd4>)
 8007328:	2206      	movs	r2, #6
 800732a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800732e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007332:	4621      	mov	r1, r4
 8007334:	481e      	ldr	r0, [pc, #120]	; (80073b0 <arp_init+0xec>)
 8007336:	82ab      	strh	r3, [r5, #20]
 8007338:	f006 fb28 	bl	800d98c <memcpy.isra.0>
 800733c:	2307      	movs	r3, #7
 800733e:	2100      	movs	r1, #0
 8007340:	4a1c      	ldr	r2, [pc, #112]	; (80073b4 <arp_init+0xf0>)
 8007342:	61ef      	str	r7, [r5, #28]
 8007344:	3b01      	subs	r3, #1
 8007346:	d11f      	bne.n	8007388 <arp_init+0xc4>
 8007348:	2206      	movs	r2, #6
 800734a:	4d1b      	ldr	r5, [pc, #108]	; (80073b8 <arp_init+0xf4>)
 800734c:	4621      	mov	r1, r4
 800734e:	18a8      	adds	r0, r5, r2
 8007350:	f006 fb1c 	bl	800d98c <memcpy.isra.0>
 8007354:	4b10      	ldr	r3, [pc, #64]	; (8007398 <arp_init+0xd4>)
 8007356:	4621      	mov	r1, r4
 8007358:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800735c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007360:	f105 0016 	add.w	r0, r5, #22
 8007364:	2206      	movs	r2, #6
 8007366:	82ab      	strh	r3, [r5, #20]
 8007368:	f006 fb10 	bl	800d98c <memcpy.isra.0>
 800736c:	61ef      	str	r7, [r5, #28]
 800736e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007372:	f006 bb15 	b.w	800d9a0 <arp_announce>
 8007376:	f803 2b01 	strb.w	r2, [r3], #1
 800737a:	e7b3      	b.n	80072e4 <arp_init+0x20>
 800737c:	f802 5b01 	strb.w	r5, [r2], #1
 8007380:	e7c2      	b.n	8007308 <arp_init+0x44>
 8007382:	f802 1b01 	strb.w	r1, [r2], #1
 8007386:	e7cc      	b.n	8007322 <arp_init+0x5e>
 8007388:	f802 1b01 	strb.w	r1, [r2], #1
 800738c:	e7da      	b.n	8007344 <arp_init+0x80>
 800738e:	bf00      	nop
 8007390:	200094f6 	strdcs	r9, [r0], -r6
 8007394:	200094f0 	strdcs	r9, [r0], -r0
 8007398:	01000608 	tsteq	r0, r8, lsl #12
 800739c:	04060008 	streq	r0, [r6], #-8
 80073a0:	20009506 	andcs	r9, r0, r6, lsl #10
 80073a4:	20009510 	andcs	r9, r0, r0, lsl r5
 80073a8:	2000954e 	andcs	r9, r0, lr, asr #10
 80073ac:	20009548 	andcs	r9, r0, r8, asr #10
 80073b0:	2000955e 	andcs	r9, r0, lr, asr r5
 80073b4:	20009568 	andcs	r9, r0, r8, ror #10
 80073b8:	2000951c 	andcs	r9, r0, ip, lsl r5

080073bc <arp_cache_init>:
 80073bc:	2300      	movs	r3, #0
 80073be:	4618      	mov	r0, r3
 80073c0:	4a09      	ldr	r2, [pc, #36]	; (80073e8 <arp_cache_init+0x2c>)
 80073c2:	b510      	push	{r4, lr}
 80073c4:	8013      	strh	r3, [r2, #0]
 80073c6:	4a09      	ldr	r2, [pc, #36]	; (80073ec <arp_cache_init+0x30>)
 80073c8:	4611      	mov	r1, r2
 80073ca:	f842 0c04 	str.w	r0, [r2, #-4]
 80073ce:	1d94      	adds	r4, r2, #6
 80073d0:	42a1      	cmp	r1, r4
 80073d2:	d105      	bne.n	80073e0 <arp_cache_init+0x24>
 80073d4:	3303      	adds	r3, #3
 80073d6:	2b60      	cmp	r3, #96	; 0x60
 80073d8:	f102 020c 	add.w	r2, r2, #12
 80073dc:	d1f4      	bne.n	80073c8 <arp_cache_init+0xc>
 80073de:	bd10      	pop	{r4, pc}
 80073e0:	f801 0b01 	strb.w	r0, [r1], #1
 80073e4:	e7f4      	b.n	80073d0 <arp_cache_init+0x14>
 80073e6:	bf00      	nop
 80073e8:	200096f4 	strdcs	r9, [r0], -r4
 80073ec:	20009578 	andcs	r9, r0, r8, ror r5

080073f0 <igmp_init>:
 80073f0:	2200      	movs	r2, #0
 80073f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f6:	4605      	mov	r5, r0
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	4b23      	ldr	r3, [pc, #140]	; (800748c <igmp_init+0x9c>)
 80073fe:	f103 0408 	add.w	r4, r3, #8
 8007402:	42a3      	cmp	r3, r4
 8007404:	d13e      	bne.n	8007484 <igmp_init+0x94>
 8007406:	3201      	adds	r2, #1
 8007408:	2a24      	cmp	r2, #36	; 0x24
 800740a:	d1f8      	bne.n	80073fe <igmp_init+0xe>
 800740c:	2600      	movs	r6, #0
 800740e:	4b20      	ldr	r3, [pc, #128]	; (8007490 <igmp_init+0xa0>)
 8007410:	4c20      	ldr	r4, [pc, #128]	; (8007494 <igmp_init+0xa4>)
 8007412:	601e      	str	r6, [r3, #0]
 8007414:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa8>)
 8007416:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800741a:	801e      	strh	r6, [r3, #0]
 800741c:	f006 fdb2 	bl	800df84 <igmp_set_ip>
 8007420:	2201      	movs	r2, #1
 8007422:	4b1e      	ldr	r3, [pc, #120]	; (800749c <igmp_init+0xac>)
 8007424:	4629      	mov	r1, r5
 8007426:	801a      	strh	r2, [r3, #0]
 8007428:	225e      	movs	r2, #94	; 0x5e
 800742a:	709a      	strb	r2, [r3, #2]
 800742c:	2206      	movs	r2, #6
 800742e:	18a0      	adds	r0, r4, r2
 8007430:	f006 fd5e 	bl	800def0 <memcpy.isra.0>
 8007434:	f240 4394 	movw	r3, #1172	; 0x494
 8007438:	8463      	strh	r3, [r4, #34]	; 0x22
 800743a:	2316      	movs	r3, #22
 800743c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a0 <igmp_init+0xb0>
 8007440:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074a4 <igmp_init+0xb4>
 8007444:	84e3      	strh	r3, [r4, #38]	; 0x26
 8007446:	f8c4 9014 	str.w	r9, [r4, #20]
 800744a:	4b17      	ldr	r3, [pc, #92]	; (80074a8 <igmp_init+0xb8>)
 800744c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007450:	8227      	strh	r7, [r4, #16]
 8007452:	84a6      	strh	r6, [r4, #36]	; 0x24
 8007454:	4c15      	ldr	r4, [pc, #84]	; (80074ac <igmp_init+0xbc>)
 8007456:	2206      	movs	r2, #6
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800745e:	18a0      	adds	r0, r4, r2
 8007460:	80a3      	strh	r3, [r4, #4]
 8007462:	4629      	mov	r1, r5
 8007464:	f006 fd44 	bl	800def0 <memcpy.isra.0>
 8007468:	23e0      	movs	r3, #224	; 0xe0
 800746a:	83e3      	strh	r3, [r4, #30]
 800746c:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007470:	4a0f      	ldr	r2, [pc, #60]	; (80074b0 <igmp_init+0xc0>)
 8007472:	f8c4 9014 	str.w	r9, [r4, #20]
 8007476:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800747a:	f8c4 800c 	str.w	r8, [r4, #12]
 800747e:	8227      	strh	r7, [r4, #16]
 8007480:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007484:	f803 1b01 	strb.w	r1, [r3], #1
 8007488:	e7bb      	b.n	8007402 <igmp_init+0x12>
 800748a:	bf00      	nop
 800748c:	2000992c 	andcs	r9, r0, ip, lsr #18
 8007490:	20009a50 	andcs	r9, r0, r0, asr sl
 8007494:	20009a8c 	andcs	r9, r0, ip, lsl #21
 8007498:	20009a4c 	andcs	r9, r0, ip, asr #20
 800749c:	20009a84 	andcs	r9, r0, r4, lsl #21
 80074a0:	02010040 	andeq	r0, r1, #64	; 0x40
 80074a4:	00460008 	subeq	r0, r6, r8
 80074a8:	005e0001 	subseq	r0, lr, r1
 80074ac:	20009a54 	andcs	r9, r0, r4, asr sl
 80074b0:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074b4 <igmp_shutdown>:
 80074b4:	b570      	push	{r4, r5, r6, lr}
 80074b6:	2500      	movs	r5, #0
 80074b8:	462e      	mov	r6, r5
 80074ba:	4c07      	ldr	r4, [pc, #28]	; (80074d8 <igmp_shutdown+0x24>)
 80074bc:	6820      	ldr	r0, [r4, #0]
 80074be:	b120      	cbz	r0, 80074ca <igmp_shutdown+0x16>
 80074c0:	f006 fdbc 	bl	800e03c <igmp_leave>
 80074c4:	6026      	str	r6, [r4, #0]
 80074c6:	7166      	strb	r6, [r4, #5]
 80074c8:	7126      	strb	r6, [r4, #4]
 80074ca:	3501      	adds	r5, #1
 80074cc:	2d24      	cmp	r5, #36	; 0x24
 80074ce:	f104 0408 	add.w	r4, r4, #8
 80074d2:	d1f3      	bne.n	80074bc <igmp_shutdown+0x8>
 80074d4:	bd70      	pop	{r4, r5, r6, pc}
 80074d6:	bf00      	nop
 80074d8:	2000992c 	andcs	r9, r0, ip, lsr #18

080074dc <ip_init>:
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
 80074e0:	460d      	mov	r5, r1
 80074e2:	f7ff fec1 	bl	8007268 <udp_init>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074ee:	f7ff bf7f 	b.w	80073f0 <igmp_init>

080074f2 <ip_shutdown>:
 80074f2:	b508      	push	{r3, lr}
 80074f4:	f7ff ffde 	bl	80074b4 <igmp_shutdown>
 80074f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80074fc:	f7ff bee0 	b.w	80072c0 <udp_shutdown>

08007500 <console_init>:
 8007500:	b508      	push	{r3, lr}
 8007502:	f007 fe5f 	bl	800f1c4 <uart0_init>
 8007506:	4804      	ldr	r0, [pc, #16]	; (8007518 <console_init+0x18>)
 8007508:	f007 fe8c 	bl	800f224 <uart0_puts>
 800750c:	4803      	ldr	r0, [pc, #12]	; (800751c <console_init+0x1c>)
 800750e:	f007 fe89 	bl	800f224 <uart0_puts>
 8007512:	2000      	movs	r0, #0
 8007514:	bd08      	pop	{r3, pc}
 8007516:	bf00      	nop
 8007518:	08010f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp}
 800751c:	080129b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, sp}

08007520 <net_handle>:
 8007520:	b510      	push	{r4, lr}
 8007522:	4c0c      	ldr	r4, [pc, #48]	; (8007554 <net_handle+0x34>)
 8007524:	4620      	mov	r0, r4
 8007526:	f008 fccd 	bl	800fec4 <emac_eth_recv>
 800752a:	2800      	cmp	r0, #0
 800752c:	dd07      	ble.n	800753e <net_handle+0x1e>
 800752e:	6820      	ldr	r0, [r4, #0]
 8007530:	8983      	ldrh	r3, [r0, #12]
 8007532:	2b08      	cmp	r3, #8
 8007534:	d107      	bne.n	8007546 <net_handle+0x26>
 8007536:	f000 fa6f 	bl	8007a18 <ip_handle>
 800753a:	f008 fcd7 	bl	800feec <emac_free_pkt>
 800753e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007542:	f004 beb3 	b.w	800c2ac <net_timers_run>
 8007546:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800754a:	d1f6      	bne.n	800753a <net_handle+0x1a>
 800754c:	f000 fa08 	bl	8007960 <arp_handle>
 8007550:	e7f3      	b.n	800753a <net_handle+0x1a>
 8007552:	bf00      	nop
 8007554:	20001bd4 	ldrdcs	r1, [r0], -r4

08007558 <tcp_handle>:
 8007558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800755c:	4605      	mov	r5, r0
 800755e:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007560:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 8007564:	ba5b      	rev16	r3, r3
 8007566:	8443      	strh	r3, [r0, #34]	; 0x22
 8007568:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800756a:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 800756e:	ba5b      	rev16	r3, r3
 8007570:	8483      	strh	r3, [r0, #36]	; 0x24
 8007572:	f004 ff0f 	bl	800c394 <_bswap32>
 8007576:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007578:	4ca5      	ldr	r4, [pc, #660]	; (8007810 <tcp_handle+0x2b8>)
 800757a:	ba5b      	rev16	r3, r3
 800757c:	862b      	strh	r3, [r5, #48]	; 0x30
 800757e:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8007580:	8822      	ldrh	r2, [r4, #0]
 8007582:	ba5b      	rev16	r3, r3
 8007584:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007586:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007588:	429a      	cmp	r2, r3
 800758a:	d14d      	bne.n	8007628 <tcp_handle+0xd0>
 800758c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007590:	2b01      	cmp	r3, #1
 8007592:	d00d      	beq.n	80075b0 <tcp_handle+0x58>
 8007594:	2204      	movs	r2, #4
 8007596:	4668      	mov	r0, sp
 8007598:	f105 011a 	add.w	r1, r5, #26
 800759c:	f004 fef0 	bl	800c380 <memcpy.isra.0>
 80075a0:	8862      	ldrh	r2, [r4, #2]
 80075a2:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075a4:	429a      	cmp	r2, r3
 80075a6:	d13f      	bne.n	8007628 <tcp_handle+0xd0>
 80075a8:	6862      	ldr	r2, [r4, #4]
 80075aa:	9b00      	ldr	r3, [sp, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d13b      	bne.n	8007628 <tcp_handle+0xd0>
 80075b0:	2204      	movs	r2, #4
 80075b2:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075b6:	eb0d 0002 	add.w	r0, sp, r2
 80075ba:	f004 fee1 	bl	800c380 <memcpy.isra.0>
 80075be:	2204      	movs	r2, #4
 80075c0:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075c4:	eb0d 0002 	add.w	r0, sp, r2
 80075c8:	9e01      	ldr	r6, [sp, #4]
 80075ca:	f004 fed9 	bl	800c380 <memcpy.isra.0>
 80075ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075d2:	9f01      	ldr	r7, [sp, #4]
 80075d4:	2a01      	cmp	r2, #1
 80075d6:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075da:	d01b      	beq.n	8007614 <tcp_handle+0xbc>
 80075dc:	1ed3      	subs	r3, r2, #3
 80075de:	2b07      	cmp	r3, #7
 80075e0:	d822      	bhi.n	8007628 <tcp_handle+0xd0>
 80075e2:	fa98 f198 	rev16.w	r1, r8
 80075e6:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075ea:	ea4f 1319 	mov.w	r3, r9, lsr #4
 80075ee:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075f2:	4488      	add	r8, r1
 80075f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075f6:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 80075fa:	ea4f 0983 	mov.w	r9, r3, lsl #2
 80075fe:	fa1f f888 	uxth.w	r8, r8
 8007602:	2900      	cmp	r1, #0
 8007604:	d142      	bne.n	800768c <tcp_handle+0x134>
 8007606:	f1b8 0f00 	cmp.w	r8, #0
 800760a:	d16b      	bne.n	80076e4 <tcp_handle+0x18c>
 800760c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800760e:	42bb      	cmp	r3, r7
 8007610:	d168      	bne.n	80076e4 <tcp_handle+0x18c>
 8007612:	e048      	b.n	80076a6 <tcp_handle+0x14e>
 8007614:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007618:	075a      	lsls	r2, r3, #29
 800761a:	d405      	bmi.n	8007628 <tcp_handle+0xd0>
 800761c:	06d8      	lsls	r0, r3, #27
 800761e:	d506      	bpl.n	800762e <tcp_handle+0xd6>
 8007620:	4628      	mov	r0, r5
 8007622:	497b      	ldr	r1, [pc, #492]	; (8007810 <tcp_handle+0x2b8>)
 8007624:	f004 ff82 	bl	800c52c <_send_reset>
 8007628:	b004      	add	sp, #16
 800762a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800762e:	0799      	lsls	r1, r3, #30
 8007630:	d5fa      	bpl.n	8007628 <tcp_handle+0xd0>
 8007632:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007636:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800763a:	4668      	mov	r0, sp
 800763c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007640:	f105 011a 	add.w	r1, r5, #26
 8007644:	2204      	movs	r2, #4
 8007646:	8063      	strh	r3, [r4, #2]
 8007648:	f004 fe9a 	bl	800c380 <memcpy.isra.0>
 800764c:	2206      	movs	r2, #6
 800764e:	9b00      	ldr	r3, [sp, #0]
 8007650:	18a9      	adds	r1, r5, r2
 8007652:	4870      	ldr	r0, [pc, #448]	; (8007814 <tcp_handle+0x2bc>)
 8007654:	6063      	str	r3, [r4, #4]
 8007656:	f004 fe93 	bl	800c380 <memcpy.isra.0>
 800765a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800765c:	1c7b      	adds	r3, r7, #1
 800765e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007662:	6363      	str	r3, [r4, #52]	; 0x34
 8007664:	2312      	movs	r3, #18
 8007666:	486a      	ldr	r0, [pc, #424]	; (8007810 <tcp_handle+0x2b8>)
 8007668:	a901      	add	r1, sp, #4
 800766a:	f88d 300c 	strb.w	r3, [sp, #12]
 800766e:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007672:	63e7      	str	r7, [r4, #60]	; 0x3c
 8007674:	f8c4 a018 	str.w	sl, [r4, #24]
 8007678:	f004 feb2 	bl	800c3e0 <_tcp_send_package>
 800767c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800767e:	1c5a      	adds	r2, r3, #1
 8007680:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8007684:	2303      	movs	r3, #3
 8007686:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800768a:	e7cd      	b.n	8007628 <tcp_handle+0xd0>
 800768c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800768e:	eba3 0c07 	sub.w	ip, r3, r7
 8007692:	f1b8 0f00 	cmp.w	r8, #0
 8007696:	d10d      	bne.n	80076b4 <tcp_handle+0x15c>
 8007698:	f1bc 0f00 	cmp.w	ip, #0
 800769c:	dc22      	bgt.n	80076e4 <tcp_handle+0x18c>
 800769e:	1afb      	subs	r3, r7, r3
 80076a0:	1a5b      	subs	r3, r3, r1
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	da1e      	bge.n	80076e4 <tcp_handle+0x18c>
 80076a6:	0743      	lsls	r3, r0, #29
 80076a8:	d530      	bpl.n	800770c <tcp_handle+0x1b4>
 80076aa:	8821      	ldrh	r1, [r4, #0]
 80076ac:	4858      	ldr	r0, [pc, #352]	; (8007810 <tcp_handle+0x2b8>)
 80076ae:	f004 fe4d 	bl	800c34c <_init_tcb>
 80076b2:	e7b9      	b.n	8007628 <tcp_handle+0xd0>
 80076b4:	f1bc 0f00 	cmp.w	ip, #0
 80076b8:	dc06      	bgt.n	80076c8 <tcp_handle+0x170>
 80076ba:	eba7 0c03 	sub.w	ip, r7, r3
 80076be:	ebac 0c01 	sub.w	ip, ip, r1
 80076c2:	f1bc 0f00 	cmp.w	ip, #0
 80076c6:	dbee      	blt.n	80076a6 <tcp_handle+0x14e>
 80076c8:	eb08 0c07 	add.w	ip, r8, r7
 80076cc:	f103 0e01 	add.w	lr, r3, #1
 80076d0:	ebae 0e0c 	sub.w	lr, lr, ip
 80076d4:	f1be 0f00 	cmp.w	lr, #0
 80076d8:	dc04      	bgt.n	80076e4 <tcp_handle+0x18c>
 80076da:	43db      	mvns	r3, r3
 80076dc:	1a5b      	subs	r3, r3, r1
 80076de:	eb13 0f0c 	cmn.w	r3, ip
 80076e2:	d4e0      	bmi.n	80076a6 <tcp_handle+0x14e>
 80076e4:	0742      	lsls	r2, r0, #29
 80076e6:	d505      	bpl.n	80076f4 <tcp_handle+0x19c>
 80076e8:	8821      	ldrh	r1, [r4, #0]
 80076ea:	4849      	ldr	r0, [pc, #292]	; (8007810 <tcp_handle+0x2b8>)
 80076ec:	f004 fe2e 	bl	800c34c <_init_tcb>
 80076f0:	2301      	movs	r3, #1
 80076f2:	e7c8      	b.n	8007686 <tcp_handle+0x12e>
 80076f4:	6963      	ldr	r3, [r4, #20]
 80076f6:	9301      	str	r3, [sp, #4]
 80076f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076fa:	9302      	str	r3, [sp, #8]
 80076fc:	2310      	movs	r3, #16
 80076fe:	4844      	ldr	r0, [pc, #272]	; (8007810 <tcp_handle+0x2b8>)
 8007700:	a901      	add	r1, sp, #4
 8007702:	f88d 300c 	strb.w	r3, [sp, #12]
 8007706:	f004 fe6b 	bl	800c3e0 <_tcp_send_package>
 800770a:	e78d      	b.n	8007628 <tcp_handle+0xd0>
 800770c:	0781      	lsls	r1, r0, #30
 800770e:	d505      	bpl.n	800771c <tcp_handle+0x1c4>
 8007710:	2a03      	cmp	r2, #3
 8007712:	d0ed      	beq.n	80076f0 <tcp_handle+0x198>
 8007714:	4628      	mov	r0, r5
 8007716:	493e      	ldr	r1, [pc, #248]	; (8007810 <tcp_handle+0x2b8>)
 8007718:	f004 ff08 	bl	800c52c <_send_reset>
 800771c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007720:	06da      	lsls	r2, r3, #27
 8007722:	d581      	bpl.n	8007628 <tcp_handle+0xd0>
 8007724:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007728:	3b03      	subs	r3, #3
 800772a:	2b07      	cmp	r3, #7
 800772c:	d818      	bhi.n	8007760 <tcp_handle+0x208>
 800772e:	e8df f003 	tbb	[pc, r3]
 8007732:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 8007736:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 800773a:	6923      	ldr	r3, [r4, #16]
 800773c:	1b9b      	subs	r3, r3, r6
 800773e:	2b00      	cmp	r3, #0
 8007740:	dc0a      	bgt.n	8007758 <tcp_handle+0x200>
 8007742:	6963      	ldr	r3, [r4, #20]
 8007744:	1af3      	subs	r3, r6, r3
 8007746:	2b00      	cmp	r3, #0
 8007748:	dc06      	bgt.n	8007758 <tcp_handle+0x200>
 800774a:	2304      	movs	r3, #4
 800774c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007750:	f8c4 a018 	str.w	sl, [r4, #24]
 8007754:	6126      	str	r6, [r4, #16]
 8007756:	e796      	b.n	8007686 <tcp_handle+0x12e>
 8007758:	4628      	mov	r0, r5
 800775a:	492d      	ldr	r1, [pc, #180]	; (8007810 <tcp_handle+0x2b8>)
 800775c:	f004 fee6 	bl	800c52c <_send_reset>
 8007760:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007764:	3b04      	subs	r3, #4
 8007766:	2b02      	cmp	r3, #2
 8007768:	d830      	bhi.n	80077cc <tcp_handle+0x274>
 800776a:	f1b8 0f00 	cmp.w	r8, #0
 800776e:	d02d      	beq.n	80077cc <tcp_handle+0x274>
 8007770:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007772:	42bb      	cmp	r3, r7
 8007774:	f040 8091 	bne.w	800789a <tcp_handle+0x342>
 8007778:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800777c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007818 <tcp_handle+0x2c0>
 8007780:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8007784:	f8ba 7000 	ldrh.w	r7, [sl]
 8007788:	4642      	mov	r2, r8
 800778a:	435f      	muls	r7, r3
 800778c:	1d38      	adds	r0, r7, #4
 800778e:	4449      	add	r1, r9
 8007790:	4450      	add	r0, sl
 8007792:	f004 fdf5 	bl	800c380 <memcpy.isra.0>
 8007796:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8007798:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800779a:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800779e:	8722      	strh	r2, [r4, #56]	; 0x38
 80077a0:	6962      	ldr	r2, [r4, #20]
 80077a2:	4443      	add	r3, r8
 80077a4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077a8:	6363      	str	r3, [r4, #52]	; 0x34
 80077aa:	2310      	movs	r3, #16
 80077ac:	4457      	add	r7, sl
 80077ae:	4818      	ldr	r0, [pc, #96]	; (8007810 <tcp_handle+0x2b8>)
 80077b0:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077b4:	a901      	add	r1, sp, #4
 80077b6:	f88d 300c 	strb.w	r3, [sp, #12]
 80077ba:	f004 fe11 	bl	800c3e0 <_tcp_send_package>
 80077be:	f8ba 3000 	ldrh.w	r3, [sl]
 80077c2:	3301      	adds	r3, #1
 80077c4:	f003 0301 	and.w	r3, r3, #1
 80077c8:	f8aa 3000 	strh.w	r3, [sl]
 80077cc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	f67f af29 	bls.w	8007628 <tcp_handle+0xd0>
 80077d6:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077da:	07db      	lsls	r3, r3, #31
 80077dc:	f57f af24 	bpl.w	8007628 <tcp_handle+0xd0>
 80077e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e2:	6962      	ldr	r2, [r4, #20]
 80077e4:	3301      	adds	r3, #1
 80077e6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077ea:	6363      	str	r3, [r4, #52]	; 0x34
 80077ec:	2310      	movs	r3, #16
 80077ee:	4808      	ldr	r0, [pc, #32]	; (8007810 <tcp_handle+0x2b8>)
 80077f0:	a901      	add	r1, sp, #4
 80077f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80077f6:	f004 fdf3 	bl	800c3e0 <_tcp_send_package>
 80077fa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077fe:	2b05      	cmp	r3, #5
 8007800:	d053      	beq.n	80078aa <tcp_handle+0x352>
 8007802:	d84d      	bhi.n	80078a0 <tcp_handle+0x348>
 8007804:	3b03      	subs	r3, #3
 8007806:	2b01      	cmp	r3, #1
 8007808:	f63f af0e 	bhi.w	8007628 <tcp_handle+0xd0>
 800780c:	2307      	movs	r3, #7
 800780e:	e73a      	b.n	8007686 <tcp_handle+0x12e>
 8007810:	20002760 	andcs	r2, r0, r0, ror #14
 8007814:	20002768 	andcs	r2, r0, r8, ror #14
 8007818:	20001bf0 	strdcs	r1, [r0], -r0
 800781c:	6923      	ldr	r3, [r4, #16]
 800781e:	1b99      	subs	r1, r3, r6
 8007820:	d513      	bpl.n	800784a <tcp_handle+0x2f2>
 8007822:	6962      	ldr	r2, [r4, #20]
 8007824:	1ab2      	subs	r2, r6, r2
 8007826:	2a00      	cmp	r2, #0
 8007828:	dc0f      	bgt.n	800784a <tcp_handle+0x2f2>
 800782a:	6126      	str	r6, [r4, #16]
 800782c:	6a23      	ldr	r3, [r4, #32]
 800782e:	1bda      	subs	r2, r3, r7
 8007830:	2a00      	cmp	r2, #0
 8007832:	db05      	blt.n	8007840 <tcp_handle+0x2e8>
 8007834:	42bb      	cmp	r3, r7
 8007836:	d193      	bne.n	8007760 <tcp_handle+0x208>
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	1b9b      	subs	r3, r3, r6
 800783c:	2b00      	cmp	r3, #0
 800783e:	dc8f      	bgt.n	8007760 <tcp_handle+0x208>
 8007840:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007844:	f8c4 a018 	str.w	sl, [r4, #24]
 8007848:	e78a      	b.n	8007760 <tcp_handle+0x208>
 800784a:	1af3      	subs	r3, r6, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	dc06      	bgt.n	800785e <tcp_handle+0x306>
 8007850:	2900      	cmp	r1, #0
 8007852:	dc85      	bgt.n	8007760 <tcp_handle+0x208>
 8007854:	6963      	ldr	r3, [r4, #20]
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc81      	bgt.n	8007760 <tcp_handle+0x208>
 800785c:	e7e6      	b.n	800782c <tcp_handle+0x2d4>
 800785e:	6963      	ldr	r3, [r4, #20]
 8007860:	1b9a      	subs	r2, r3, r6
 8007862:	2a00      	cmp	r2, #0
 8007864:	f6bf af7c 	bge.w	8007760 <tcp_handle+0x208>
 8007868:	e745      	b.n	80076f6 <tcp_handle+0x19e>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	42b3      	cmp	r3, r6
 800786e:	f47f af77 	bne.w	8007760 <tcp_handle+0x208>
 8007872:	8821      	ldrh	r1, [r4, #0]
 8007874:	480f      	ldr	r0, [pc, #60]	; (80078b4 <tcp_handle+0x35c>)
 8007876:	f004 fd69 	bl	800c34c <_init_tcb>
 800787a:	e771      	b.n	8007760 <tcp_handle+0x208>
 800787c:	6963      	ldr	r3, [r4, #20]
 800787e:	42b3      	cmp	r3, r6
 8007880:	f47f af6e 	bne.w	8007760 <tcp_handle+0x208>
 8007884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007886:	480b      	ldr	r0, [pc, #44]	; (80078b4 <tcp_handle+0x35c>)
 8007888:	9302      	str	r3, [sp, #8]
 800788a:	2310      	movs	r3, #16
 800788c:	a901      	add	r1, sp, #4
 800788e:	9601      	str	r6, [sp, #4]
 8007890:	f88d 300c 	strb.w	r3, [sp, #12]
 8007894:	f004 fda4 	bl	800c3e0 <_tcp_send_package>
 8007898:	e762      	b.n	8007760 <tcp_handle+0x208>
 800789a:	6962      	ldr	r2, [r4, #20]
 800789c:	9201      	str	r2, [sp, #4]
 800789e:	e72c      	b.n	80076fa <tcp_handle+0x1a2>
 80078a0:	2b06      	cmp	r3, #6
 80078a2:	f47f aec1 	bne.w	8007628 <tcp_handle+0xd0>
 80078a6:	230a      	movs	r3, #10
 80078a8:	e6ed      	b.n	8007686 <tcp_handle+0x12e>
 80078aa:	6963      	ldr	r3, [r4, #20]
 80078ac:	42b3      	cmp	r3, r6
 80078ae:	d0fa      	beq.n	80078a6 <tcp_handle+0x34e>
 80078b0:	2308      	movs	r3, #8
 80078b2:	e6e8      	b.n	8007686 <tcp_handle+0x12e>
 80078b4:	20002760 	andcs	r2, r0, r0, ror #14

080078b8 <udp_handle>:
 80078b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078bc:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078be:	4607      	mov	r7, r0
 80078c0:	ba5b      	rev16	r3, r3
 80078c2:	b29b      	uxth	r3, r3
 80078c4:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078c8:	2a01      	cmp	r2, #1
 80078ca:	d904      	bls.n	80078d6 <udp_handle+0x1e>
 80078cc:	2b7b      	cmp	r3, #123	; 0x7b
 80078ce:	d002      	beq.n	80078d6 <udp_handle+0x1e>
 80078d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078d4:	d308      	bcc.n	80078e8 <udp_handle+0x30>
 80078d6:	2400      	movs	r4, #0
 80078d8:	4a1f      	ldr	r2, [pc, #124]	; (8007958 <udp_handle+0xa0>)
 80078da:	f852 1b04 	ldr.w	r1, [r2], #4
 80078de:	4299      	cmp	r1, r3
 80078e0:	d005      	beq.n	80078ee <udp_handle+0x36>
 80078e2:	3401      	adds	r4, #1
 80078e4:	2c08      	cmp	r4, #8
 80078e6:	d1f8      	bne.n	80078da <udp_handle+0x22>
 80078e8:	b002      	add	sp, #8
 80078ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078ee:	f640 3394 	movw	r3, #2964	; 0xb94
 80078f2:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 80078f4:	435c      	muls	r4, r3
 80078f6:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80078fa:	ba76      	rev16	r6, r6
 80078fc:	3e08      	subs	r6, #8
 80078fe:	b2b6      	uxth	r6, r6
 8007900:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007904:	bf28      	it	cs
 8007906:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800790a:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800795c <udp_handle+0xa4>
 800790e:	1d20      	adds	r0, r4, #4
 8007910:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007914:	4632      	mov	r2, r6
 8007916:	435d      	muls	r5, r3
 8007918:	4428      	add	r0, r5
 800791a:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800791e:	4440      	add	r0, r8
 8007920:	f004 feb2 	bl	800c688 <memcpy.isra.0>
 8007924:	2204      	movs	r2, #4
 8007926:	f107 011a 	add.w	r1, r7, #26
 800792a:	eb0d 0002 	add.w	r0, sp, r2
 800792e:	f004 feab 	bl	800c688 <memcpy.isra.0>
 8007932:	9a01      	ldr	r2, [sp, #4]
 8007934:	192b      	adds	r3, r5, r4
 8007936:	4443      	add	r3, r8
 8007938:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800793c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800793e:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 8007942:	ba52      	rev16	r2, r2
 8007944:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007948:	f838 3004 	ldrh.w	r3, [r8, r4]
 800794c:	3301      	adds	r3, #1
 800794e:	f003 0301 	and.w	r3, r3, #1
 8007952:	f828 3004 	strh.w	r3, [r8, r4]
 8007956:	e7c7      	b.n	80078e8 <udp_handle+0x30>
 8007958:	20002da0 	andcs	r2, r0, r0, lsr #27
 800795c:	20002dc0 	andcs	r2, r0, r0, asr #27

08007960 <arp_handle>:
 8007960:	8a83      	ldrh	r3, [r0, #20]
 8007962:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007966:	d003      	beq.n	8007970 <arp_handle+0x10>
 8007968:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800796c:	d002      	beq.n	8007974 <arp_handle+0x14>
 800796e:	4770      	bx	lr
 8007970:	f006 b820 	b.w	800d9b4 <arp_handle_request>
 8007974:	f006 b846 	b.w	800da04 <arp_handle_reply>

08007978 <igmp_handle>:
 8007978:	7b83      	ldrb	r3, [r0, #14]
 800797a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800797e:	2b45      	cmp	r3, #69	; 0x45
 8007980:	d116      	bne.n	80079b0 <igmp_handle+0x38>
 8007982:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007986:	2b11      	cmp	r3, #17
 8007988:	d112      	bne.n	80079b0 <igmp_handle+0x38>
 800798a:	4b20      	ldr	r3, [pc, #128]	; (8007a0c <igmp_handle+0x94>)
 800798c:	f100 051e 	add.w	r5, r0, #30
 8007990:	9300      	str	r3, [sp, #0]
 8007992:	466a      	mov	r2, sp
 8007994:	462b      	mov	r3, r5
 8007996:	f100 0622 	add.w	r6, r0, #34	; 0x22
 800799a:	42b3      	cmp	r3, r6
 800799c:	d10b      	bne.n	80079b6 <igmp_handle+0x3e>
 800799e:	2401      	movs	r4, #1
 80079a0:	2100      	movs	r1, #0
 80079a2:	f04f 0c01 	mov.w	ip, #1
 80079a6:	4b1a      	ldr	r3, [pc, #104]	; (8007a10 <igmp_handle+0x98>)
 80079a8:	4a1a      	ldr	r2, [pc, #104]	; (8007a14 <igmp_handle+0x9c>)
 80079aa:	681f      	ldr	r7, [r3, #0]
 80079ac:	428f      	cmp	r7, r1
 80079ae:	d10a      	bne.n	80079c6 <igmp_handle+0x4e>
 80079b0:	b003      	add	sp, #12
 80079b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079b6:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079ba:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079be:	428c      	cmp	r4, r1
 80079c0:	d0eb      	beq.n	800799a <igmp_handle+0x22>
 80079c2:	2400      	movs	r4, #0
 80079c4:	e7ec      	b.n	80079a0 <igmp_handle+0x28>
 80079c6:	6813      	ldr	r3, [r2, #0]
 80079c8:	9301      	str	r3, [sp, #4]
 80079ca:	b924      	cbnz	r4, 80079d6 <igmp_handle+0x5e>
 80079cc:	462b      	mov	r3, r5
 80079ce:	f10d 0e04 	add.w	lr, sp, #4
 80079d2:	42b3      	cmp	r3, r6
 80079d4:	d10e      	bne.n	80079f4 <igmp_handle+0x7c>
 80079d6:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079da:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079de:	f1be 0f01 	cmp.w	lr, #1
 80079e2:	d110      	bne.n	8007a06 <igmp_handle+0x8e>
 80079e4:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079e8:	459e      	cmp	lr, r3
 80079ea:	d909      	bls.n	8007a00 <igmp_handle+0x88>
 80079ec:	085b      	lsrs	r3, r3, #1
 80079ee:	3301      	adds	r3, #1
 80079f0:	7113      	strb	r3, [r2, #4]
 80079f2:	e005      	b.n	8007a00 <igmp_handle+0x88>
 80079f4:	f813 9b01 	ldrb.w	r9, [r3], #1
 80079f8:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80079fc:	45c1      	cmp	r9, r8
 80079fe:	d0e8      	beq.n	80079d2 <igmp_handle+0x5a>
 8007a00:	3101      	adds	r1, #1
 8007a02:	3208      	adds	r2, #8
 8007a04:	e7d2      	b.n	80079ac <igmp_handle+0x34>
 8007a06:	f882 c005 	strb.w	ip, [r2, #5]
 8007a0a:	e7ef      	b.n	80079ec <igmp_handle+0x74>
 8007a0c:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a10:	20009a50 	andcs	r9, r0, r0, asr sl
 8007a14:	2000992c 	andcs	r9, r0, ip, lsr #18

08007a18 <ip_handle>:
 8007a18:	7b82      	ldrb	r2, [r0, #14]
 8007a1a:	7dc3      	ldrb	r3, [r0, #23]
 8007a1c:	2a45      	cmp	r2, #69	; 0x45
 8007a1e:	d003      	beq.n	8007a28 <ip_handle+0x10>
 8007a20:	2b02      	cmp	r3, #2
 8007a22:	d111      	bne.n	8007a48 <ip_handle+0x30>
 8007a24:	f7ff bfa8 	b.w	8007978 <igmp_handle>
 8007a28:	2b06      	cmp	r3, #6
 8007a2a:	d00b      	beq.n	8007a44 <ip_handle+0x2c>
 8007a2c:	d804      	bhi.n	8007a38 <ip_handle+0x20>
 8007a2e:	2b01      	cmp	r3, #1
 8007a30:	d006      	beq.n	8007a40 <ip_handle+0x28>
 8007a32:	2b02      	cmp	r3, #2
 8007a34:	d0f6      	beq.n	8007a24 <ip_handle+0xc>
 8007a36:	4770      	bx	lr
 8007a38:	2b11      	cmp	r3, #17
 8007a3a:	d105      	bne.n	8007a48 <ip_handle+0x30>
 8007a3c:	f7ff bf3c 	b.w	80078b8 <udp_handle>
 8007a40:	f000 b804 	b.w	8007a4c <icmp_handle>
 8007a44:	f7ff bd88 	b.w	8007558 <tcp_handle>
 8007a48:	4770      	bx	lr
	...

08007a4c <icmp_handle>:
 8007a4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a4e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a52:	4604      	mov	r4, r0
 8007a54:	2b08      	cmp	r3, #8
 8007a56:	d13e      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a58:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a5c:	2d00      	cmp	r5, #0
 8007a5e:	d13a      	bne.n	8007ad6 <icmp_handle+0x8a>
 8007a60:	1d86      	adds	r6, r0, #6
 8007a62:	4631      	mov	r1, r6
 8007a64:	2206      	movs	r2, #6
 8007a66:	f006 fb4f 	bl	800e108 <memcpy.isra.0>
 8007a6a:	4630      	mov	r0, r6
 8007a6c:	2206      	movs	r2, #6
 8007a6e:	491b      	ldr	r1, [pc, #108]	; (8007adc <icmp_handle+0x90>)
 8007a70:	f006 fb4a 	bl	800e108 <memcpy.isra.0>
 8007a74:	8a63      	ldrh	r3, [r4, #18]
 8007a76:	f104 061a 	add.w	r6, r4, #26
 8007a7a:	43db      	mvns	r3, r3
 8007a7c:	4631      	mov	r1, r6
 8007a7e:	2204      	movs	r2, #4
 8007a80:	8263      	strh	r3, [r4, #18]
 8007a82:	f104 001e 	add.w	r0, r4, #30
 8007a86:	f006 fb3f 	bl	800e108 <memcpy.isra.0>
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	4b14      	ldr	r3, [pc, #80]	; (8007ae0 <icmp_handle+0x94>)
 8007a8e:	eb0d 0102 	add.w	r1, sp, r2
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4630      	mov	r0, r6
 8007a96:	f104 060e 	add.w	r6, r4, #14
 8007a9a:	9301      	str	r3, [sp, #4]
 8007a9c:	f006 fb34 	bl	800e108 <memcpy.isra.0>
 8007aa0:	2114      	movs	r1, #20
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	7625      	strb	r5, [r4, #24]
 8007aa6:	7665      	strb	r5, [r4, #25]
 8007aa8:	f006 fb15 	bl	800e0d6 <net_chksum>
 8007aac:	8a21      	ldrh	r1, [r4, #16]
 8007aae:	8320      	strh	r0, [r4, #24]
 8007ab0:	ba49      	rev16	r1, r1
 8007ab2:	b289      	uxth	r1, r1
 8007ab4:	4630      	mov	r0, r6
 8007ab6:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007aba:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007abe:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ac2:	f006 fb08 	bl	800e0d6 <net_chksum>
 8007ac6:	8a21      	ldrh	r1, [r4, #16]
 8007ac8:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007aca:	ba49      	rev16	r1, r1
 8007acc:	b289      	uxth	r1, r1
 8007ace:	4620      	mov	r0, r4
 8007ad0:	310e      	adds	r1, #14
 8007ad2:	f008 fa0f 	bl	800fef4 <emac_eth_send>
 8007ad6:	b002      	add	sp, #8
 8007ad8:	bd70      	pop	{r4, r5, r6, pc}
 8007ada:	bf00      	nop
 8007adc:	20001bcc 	andcs	r1, r0, ip, asr #23
 8007ae0:	20001bc0 	andcs	r1, r0, r0, asr #23

08007ae4 <__aeabi_uldivmod>:
 8007ae4:	b953      	cbnz	r3, 8007afc <__aeabi_uldivmod+0x18>
 8007ae6:	b94a      	cbnz	r2, 8007afc <__aeabi_uldivmod+0x18>
 8007ae8:	2900      	cmp	r1, #0
 8007aea:	bf08      	it	eq
 8007aec:	2800      	cmpeq	r0, #0
 8007aee:	bf1c      	itt	ne
 8007af0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007af4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007af8:	f000 b80c 	b.w	8007b14 <__aeabi_idiv0>
 8007afc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b00:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b04:	f000 fec2 	bl	800888c <__udivmoddi4>
 8007b08:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b10:	b004      	add	sp, #16
 8007b12:	4770      	bx	lr

08007b14 <__aeabi_idiv0>:
 8007b14:	4770      	bx	lr
 8007b16:	bf00      	nop

08007b18 <__aeabi_fmul>:
 8007b18:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007b1c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007b20:	bf1e      	ittt	ne
 8007b22:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007b26:	ea92 0f0c 	teqne	r2, ip
 8007b2a:	ea93 0f0c 	teqne	r3, ip
 8007b2e:	d06f      	beq.n	8007c10 <__aeabi_fmul+0xf8>
 8007b30:	441a      	add	r2, r3
 8007b32:	ea80 0c01 	eor.w	ip, r0, r1
 8007b36:	0240      	lsls	r0, r0, #9
 8007b38:	bf18      	it	ne
 8007b3a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007b3e:	d01e      	beq.n	8007b7e <__aeabi_fmul+0x66>
 8007b40:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007b44:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007b48:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007b4c:	fba0 3101 	umull	r3, r1, r0, r1
 8007b50:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007b54:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007b58:	bf3e      	ittt	cc
 8007b5a:	0049      	lslcc	r1, r1, #1
 8007b5c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007b60:	005b      	lslcc	r3, r3, #1
 8007b62:	ea40 0001 	orr.w	r0, r0, r1
 8007b66:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007b6a:	2afd      	cmp	r2, #253	; 0xfd
 8007b6c:	d81d      	bhi.n	8007baa <__aeabi_fmul+0x92>
 8007b6e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b72:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007b76:	bf08      	it	eq
 8007b78:	f020 0001 	biceq.w	r0, r0, #1
 8007b7c:	4770      	bx	lr
 8007b7e:	f090 0f00 	teq	r0, #0
 8007b82:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007b86:	bf08      	it	eq
 8007b88:	0249      	lsleq	r1, r1, #9
 8007b8a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007b8e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007b92:	3a7f      	subs	r2, #127	; 0x7f
 8007b94:	bfc2      	ittt	gt
 8007b96:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007b9a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007b9e:	4770      	bxgt	lr
 8007ba0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007ba4:	f04f 0300 	mov.w	r3, #0
 8007ba8:	3a01      	subs	r2, #1
 8007baa:	dc5d      	bgt.n	8007c68 <__aeabi_fmul+0x150>
 8007bac:	f112 0f19 	cmn.w	r2, #25
 8007bb0:	bfdc      	itt	le
 8007bb2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007bb6:	4770      	bxle	lr
 8007bb8:	f1c2 0200 	rsb	r2, r2, #0
 8007bbc:	0041      	lsls	r1, r0, #1
 8007bbe:	fa21 f102 	lsr.w	r1, r1, r2
 8007bc2:	f1c2 0220 	rsb	r2, r2, #32
 8007bc6:	fa00 fc02 	lsl.w	ip, r0, r2
 8007bca:	ea5f 0031 	movs.w	r0, r1, rrx
 8007bce:	f140 0000 	adc.w	r0, r0, #0
 8007bd2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007bd6:	bf08      	it	eq
 8007bd8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007bdc:	4770      	bx	lr
 8007bde:	f092 0f00 	teq	r2, #0
 8007be2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007be6:	bf02      	ittt	eq
 8007be8:	0040      	lsleq	r0, r0, #1
 8007bea:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007bee:	3a01      	subeq	r2, #1
 8007bf0:	d0f9      	beq.n	8007be6 <__aeabi_fmul+0xce>
 8007bf2:	ea40 000c 	orr.w	r0, r0, ip
 8007bf6:	f093 0f00 	teq	r3, #0
 8007bfa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007bfe:	bf02      	ittt	eq
 8007c00:	0049      	lsleq	r1, r1, #1
 8007c02:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007c06:	3b01      	subeq	r3, #1
 8007c08:	d0f9      	beq.n	8007bfe <__aeabi_fmul+0xe6>
 8007c0a:	ea41 010c 	orr.w	r1, r1, ip
 8007c0e:	e78f      	b.n	8007b30 <__aeabi_fmul+0x18>
 8007c10:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007c14:	ea92 0f0c 	teq	r2, ip
 8007c18:	bf18      	it	ne
 8007c1a:	ea93 0f0c 	teqne	r3, ip
 8007c1e:	d00a      	beq.n	8007c36 <__aeabi_fmul+0x11e>
 8007c20:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007c24:	bf18      	it	ne
 8007c26:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007c2a:	d1d8      	bne.n	8007bde <__aeabi_fmul+0xc6>
 8007c2c:	ea80 0001 	eor.w	r0, r0, r1
 8007c30:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c34:	4770      	bx	lr
 8007c36:	f090 0f00 	teq	r0, #0
 8007c3a:	bf17      	itett	ne
 8007c3c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007c40:	4608      	moveq	r0, r1
 8007c42:	f091 0f00 	teqne	r1, #0
 8007c46:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007c4a:	d014      	beq.n	8007c76 <__aeabi_fmul+0x15e>
 8007c4c:	ea92 0f0c 	teq	r2, ip
 8007c50:	d101      	bne.n	8007c56 <__aeabi_fmul+0x13e>
 8007c52:	0242      	lsls	r2, r0, #9
 8007c54:	d10f      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c56:	ea93 0f0c 	teq	r3, ip
 8007c5a:	d103      	bne.n	8007c64 <__aeabi_fmul+0x14c>
 8007c5c:	024b      	lsls	r3, r1, #9
 8007c5e:	bf18      	it	ne
 8007c60:	4608      	movne	r0, r1
 8007c62:	d108      	bne.n	8007c76 <__aeabi_fmul+0x15e>
 8007c64:	ea80 0001 	eor.w	r0, r0, r1
 8007c68:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c6c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c70:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c74:	4770      	bx	lr
 8007c76:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c7a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007c7e:	4770      	bx	lr

08007c80 <__gesf2>:
 8007c80:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007c84:	e006      	b.n	8007c94 <__cmpsf2+0x4>
 8007c86:	bf00      	nop

08007c88 <__lesf2>:
 8007c88:	f04f 0c01 	mov.w	ip, #1
 8007c8c:	e002      	b.n	8007c94 <__cmpsf2+0x4>
 8007c8e:	bf00      	nop

08007c90 <__cmpsf2>:
 8007c90:	f04f 0c01 	mov.w	ip, #1
 8007c94:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007c98:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007c9c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007ca0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007ca4:	bf18      	it	ne
 8007ca6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007caa:	d011      	beq.n	8007cd0 <__cmpsf2+0x40>
 8007cac:	b001      	add	sp, #4
 8007cae:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007cb2:	bf18      	it	ne
 8007cb4:	ea90 0f01 	teqne	r0, r1
 8007cb8:	bf58      	it	pl
 8007cba:	ebb2 0003 	subspl.w	r0, r2, r3
 8007cbe:	bf88      	it	hi
 8007cc0:	17c8      	asrhi	r0, r1, #31
 8007cc2:	bf38      	it	cc
 8007cc4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007cc8:	bf18      	it	ne
 8007cca:	f040 0001 	orrne.w	r0, r0, #1
 8007cce:	4770      	bx	lr
 8007cd0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cd4:	d102      	bne.n	8007cdc <__cmpsf2+0x4c>
 8007cd6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007cda:	d105      	bne.n	8007ce8 <__cmpsf2+0x58>
 8007cdc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007ce0:	d1e4      	bne.n	8007cac <__cmpsf2+0x1c>
 8007ce2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007ce6:	d0e1      	beq.n	8007cac <__cmpsf2+0x1c>
 8007ce8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007cec:	4770      	bx	lr
 8007cee:	bf00      	nop

08007cf0 <__aeabi_cfrcmple>:
 8007cf0:	4684      	mov	ip, r0
 8007cf2:	4608      	mov	r0, r1
 8007cf4:	4661      	mov	r1, ip
 8007cf6:	e7ff      	b.n	8007cf8 <__aeabi_cfcmpeq>

08007cf8 <__aeabi_cfcmpeq>:
 8007cf8:	b50f      	push	{r0, r1, r2, r3, lr}
 8007cfa:	f7ff ffc9 	bl	8007c90 <__cmpsf2>
 8007cfe:	2800      	cmp	r0, #0
 8007d00:	bf48      	it	mi
 8007d02:	f110 0f00 	cmnmi.w	r0, #0
 8007d06:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007d08 <__aeabi_fcmpeq>:
 8007d08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d0c:	f7ff fff4 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d10:	bf0c      	ite	eq
 8007d12:	2001      	moveq	r0, #1
 8007d14:	2000      	movne	r0, #0
 8007d16:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d1a:	bf00      	nop

08007d1c <__aeabi_fcmplt>:
 8007d1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d20:	f7ff ffea 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d24:	bf34      	ite	cc
 8007d26:	2001      	movcc	r0, #1
 8007d28:	2000      	movcs	r0, #0
 8007d2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d2e:	bf00      	nop

08007d30 <__aeabi_fcmple>:
 8007d30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d34:	f7ff ffe0 	bl	8007cf8 <__aeabi_cfcmpeq>
 8007d38:	bf94      	ite	ls
 8007d3a:	2001      	movls	r0, #1
 8007d3c:	2000      	movhi	r0, #0
 8007d3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d42:	bf00      	nop

08007d44 <__aeabi_fcmpge>:
 8007d44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d48:	f7ff ffd2 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d4c:	bf94      	ite	ls
 8007d4e:	2001      	movls	r0, #1
 8007d50:	2000      	movhi	r0, #0
 8007d52:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d56:	bf00      	nop

08007d58 <__aeabi_fcmpgt>:
 8007d58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007d5c:	f7ff ffc8 	bl	8007cf0 <__aeabi_cfrcmple>
 8007d60:	bf34      	ite	cc
 8007d62:	2001      	movcc	r0, #1
 8007d64:	2000      	movcs	r0, #0
 8007d66:	f85d fb08 	ldr.w	pc, [sp], #8
 8007d6a:	bf00      	nop

08007d6c <__aeabi_f2uiz>:
 8007d6c:	0042      	lsls	r2, r0, #1
 8007d6e:	d20e      	bcs.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d70:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007d74:	d30b      	bcc.n	8007d8e <__aeabi_f2uiz+0x22>
 8007d76:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007d7a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007d7e:	d409      	bmi.n	8007d94 <__aeabi_f2uiz+0x28>
 8007d80:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007d84:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007d88:	fa23 f002 	lsr.w	r0, r3, r2
 8007d8c:	4770      	bx	lr
 8007d8e:	f04f 0000 	mov.w	r0, #0
 8007d92:	4770      	bx	lr
 8007d94:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007d98:	d101      	bne.n	8007d9e <__aeabi_f2uiz+0x32>
 8007d9a:	0242      	lsls	r2, r0, #9
 8007d9c:	d102      	bne.n	8007da4 <__aeabi_f2uiz+0x38>
 8007d9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007da2:	4770      	bx	lr
 8007da4:	f04f 0000 	mov.w	r0, #0
 8007da8:	4770      	bx	lr
 8007daa:	bf00      	nop

08007dac <Reset_Handler>:
 8007dac:	480c      	ldr	r0, [pc, #48]	; (8007de0 <Zerobss+0x10>)
 8007dae:	4685      	mov	sp, r0
 8007db0:	2100      	movs	r1, #0
 8007db2:	e003      	b.n	8007dbc <DataInit>

08007db4 <CopyData>:
 8007db4:	4b0b      	ldr	r3, [pc, #44]	; (8007de4 <Zerobss+0x14>)
 8007db6:	585b      	ldr	r3, [r3, r1]
 8007db8:	5043      	str	r3, [r0, r1]
 8007dba:	3104      	adds	r1, #4

08007dbc <DataInit>:
 8007dbc:	480a      	ldr	r0, [pc, #40]	; (8007de8 <Zerobss+0x18>)
 8007dbe:	4b0b      	ldr	r3, [pc, #44]	; (8007dec <Zerobss+0x1c>)
 8007dc0:	1842      	adds	r2, r0, r1
 8007dc2:	429a      	cmp	r2, r3
 8007dc4:	d3f6      	bcc.n	8007db4 <CopyData>
 8007dc6:	4a0a      	ldr	r2, [pc, #40]	; (8007df0 <Zerobss+0x20>)
 8007dc8:	e002      	b.n	8007dd0 <Zerobss>

08007dca <FillZerobss>:
 8007dca:	2300      	movs	r3, #0
 8007dcc:	f842 3b04 	str.w	r3, [r2], #4

08007dd0 <Zerobss>:
 8007dd0:	4b08      	ldr	r3, [pc, #32]	; (8007df4 <Zerobss+0x24>)
 8007dd2:	429a      	cmp	r2, r3
 8007dd4:	d3f9      	bcc.n	8007dca <FillZerobss>
 8007dd6:	f007 fa5b 	bl	800f290 <SystemInit>
 8007dda:	f000 f8f3 	bl	8007fc4 <main>
 8007dde:	4770      	bx	lr
 8007de0:	20018000 	andcs	r8, r1, r0
 8007de4:	08012ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, sp}
 8007de8:	20000000 	andcs	r0, r0, r0
 8007dec:	200000f8 	strdcs	r0, [r0], -r8
 8007df0:	200000f8 	strdcs	r0, [r0], -r8
 8007df4:	2000c034 	andcs	ip, r0, r4, lsr r0

08007df8 <ADC0_1_IRQHandler>:
 8007df8:	e7fe      	b.n	8007df8 <ADC0_1_IRQHandler>

08007dfa <memcmp>:
 8007dfa:	b510      	push	{r4, lr}
 8007dfc:	3901      	subs	r1, #1
 8007dfe:	4402      	add	r2, r0
 8007e00:	4290      	cmp	r0, r2
 8007e02:	d101      	bne.n	8007e08 <memcmp+0xe>
 8007e04:	2000      	movs	r0, #0
 8007e06:	e005      	b.n	8007e14 <memcmp+0x1a>
 8007e08:	7803      	ldrb	r3, [r0, #0]
 8007e0a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8007e0e:	42a3      	cmp	r3, r4
 8007e10:	d001      	beq.n	8007e16 <memcmp+0x1c>
 8007e12:	1b18      	subs	r0, r3, r4
 8007e14:	bd10      	pop	{r4, pc}
 8007e16:	3001      	adds	r0, #1
 8007e18:	e7f2      	b.n	8007e00 <memcmp+0x6>

08007e1a <DisplayHandler::~DisplayHandler()>:
 8007e1a:	4770      	bx	lr

08007e1c <dmxconfigudp::atoi(char const*, unsigned char)>:
 8007e1c:	b530      	push	{r4, r5, lr}
 8007e1e:	1e42      	subs	r2, r0, #1
 8007e20:	250a      	movs	r5, #10
 8007e22:	2000      	movs	r0, #0
 8007e24:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8007e28:	3b30      	subs	r3, #48	; 0x30
 8007e2a:	b2dc      	uxtb	r4, r3
 8007e2c:	2c09      	cmp	r4, #9
 8007e2e:	d805      	bhi.n	8007e3c <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8007e30:	3901      	subs	r1, #1
 8007e32:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007e36:	fb05 3000 	mla	r0, r5, r0, r3
 8007e3a:	d1f3      	bne.n	8007e24 <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8007e3c:	bd30      	pop	{r4, r5, pc}

08007e3e <DisplayHandler::~DisplayHandler()>:
 8007e3e:	b510      	push	{r4, lr}
 8007e40:	4604      	mov	r4, r0
 8007e42:	f006 ffd1 	bl	800ede8 <operator delete(void*)>
 8007e46:	4620      	mov	r0, r4
 8007e48:	bd10      	pop	{r4, pc}

08007e4a <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8007e4a:	b110      	cbz	r0, 8007e52 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8007e4c:	6803      	ldr	r3, [r0, #0]
 8007e4e:	6a1b      	ldr	r3, [r3, #32]
 8007e50:	4718      	bx	r3
 8007e52:	4770      	bx	lr

08007e54 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8007e54:	b430      	push	{r4, r5}
 8007e56:	b168      	cbz	r0, 8007e74 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8007e58:	2300      	movs	r3, #0
 8007e5a:	7905      	ldrb	r5, [r0, #4]
 8007e5c:	5cd4      	ldrb	r4, [r2, r3]
 8007e5e:	b11c      	cbz	r4, 8007e68 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8007e60:	1c5c      	adds	r4, r3, #1
 8007e62:	429d      	cmp	r5, r3
 8007e64:	4623      	mov	r3, r4
 8007e66:	dcf9      	bgt.n	8007e5c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8007e68:	6804      	ldr	r4, [r0, #0]
 8007e6a:	b2db      	uxtb	r3, r3
 8007e6c:	69e4      	ldr	r4, [r4, #28]
 8007e6e:	46a4      	mov	ip, r4
 8007e70:	bc30      	pop	{r4, r5}
 8007e72:	4760      	bx	ip
 8007e74:	bc30      	pop	{r4, r5}
 8007e76:	4770      	bx	lr

08007e78 <Display::PutChar(int) [clone .isra.0]>:
 8007e78:	b110      	cbz	r0, 8007e80 <Display::PutChar(int) [clone .isra.0]+0x8>
 8007e7a:	6803      	ldr	r3, [r0, #0]
 8007e7c:	695b      	ldr	r3, [r3, #20]
 8007e7e:	4718      	bx	r3
 8007e80:	4770      	bx	lr
	...

08007e84 <DisplayHandler::Print(unsigned int)>:
 8007e84:	b538      	push	{r3, r4, r5, lr}
 8007e86:	7903      	ldrb	r3, [r0, #4]
 8007e88:	b1f3      	cbz	r3, 8007ec8 <DisplayHandler::Print(unsigned int)+0x44>
 8007e8a:	2904      	cmp	r1, #4
 8007e8c:	bf98      	it	ls
 8007e8e:	4b0f      	ldrls	r3, [pc, #60]	; (8007ecc <DisplayHandler::Print(unsigned int)+0x48>)
 8007e90:	4d0f      	ldr	r5, [pc, #60]	; (8007ed0 <DisplayHandler::Print(unsigned int)+0x4c>)
 8007e92:	bf98      	it	ls
 8007e94:	5c5c      	ldrbls	r4, [r3, r1]
 8007e96:	682b      	ldr	r3, [r5, #0]
 8007e98:	bf88      	it	hi
 8007e9a:	2455      	movhi	r4, #85	; 0x55
 8007e9c:	6998      	ldr	r0, [r3, #24]
 8007e9e:	b178      	cbz	r0, 8007ec0 <DisplayHandler::Print(unsigned int)+0x3c>
 8007ea0:	7901      	ldrb	r1, [r0, #4]
 8007ea2:	3901      	subs	r1, #1
 8007ea4:	b2c9      	uxtb	r1, r1
 8007ea6:	b168      	cbz	r0, 8007ec4 <DisplayHandler::Print(unsigned int)+0x40>
 8007ea8:	7942      	ldrb	r2, [r0, #5]
 8007eaa:	3a01      	subs	r2, #1
 8007eac:	b2d2      	uxtb	r2, r2
 8007eae:	f7ff ffcc 	bl	8007e4a <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007eb2:	682b      	ldr	r3, [r5, #0]
 8007eb4:	4621      	mov	r1, r4
 8007eb6:	6998      	ldr	r0, [r3, #24]
 8007eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007ebc:	f7ff bfdc 	b.w	8007e78 <Display::PutChar(int) [clone .isra.0]>
 8007ec0:	4601      	mov	r1, r0
 8007ec2:	e7ee      	b.n	8007ea2 <DisplayHandler::Print(unsigned int)+0x1e>
 8007ec4:	4602      	mov	r2, r0
 8007ec6:	e7f0      	b.n	8007eaa <DisplayHandler::Print(unsigned int)+0x26>
 8007ec8:	bd38      	pop	{r3, r4, r5, pc}
 8007eca:	bf00      	nop
 8007ecc:	08011030 	stmdaeq	r1, {r4, r5, ip}
 8007ed0:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

08007ed4 <Display::SetSleep(bool)>:
 8007ed4:	b538      	push	{r3, r4, r5, lr}
 8007ed6:	4604      	mov	r4, r0
 8007ed8:	6980      	ldr	r0, [r0, #24]
 8007eda:	460d      	mov	r5, r1
 8007edc:	b138      	cbz	r0, 8007eee <Display::SetSleep(bool)+0x1a>
 8007ede:	6803      	ldr	r3, [r0, #0]
 8007ee0:	7421      	strb	r1, [r4, #16]
 8007ee2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ee4:	4798      	blx	r3
 8007ee6:	b915      	cbnz	r5, 8007eee <Display::SetSleep(bool)+0x1a>
 8007ee8:	4b01      	ldr	r3, [pc, #4]	; (8007ef0 <Display::SetSleep(bool)+0x1c>)
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	6063      	str	r3, [r4, #4]
 8007eee:	bd38      	pop	{r3, r4, r5, pc}
 8007ef0:	20009bc4 	andcs	r9, r0, r4, asr #23

08007ef4 <Display::Printf(unsigned char, char const*, ...)>:
 8007ef4:	b40c      	push	{r2, r3}
 8007ef6:	b570      	push	{r4, r5, r6, lr}
 8007ef8:	6984      	ldr	r4, [r0, #24]
 8007efa:	4605      	mov	r5, r0
 8007efc:	460e      	mov	r6, r1
 8007efe:	b08a      	sub	sp, #40	; 0x28
 8007f00:	b174      	cbz	r4, 8007f20 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8007f02:	ab0f      	add	r3, sp, #60	; 0x3c
 8007f04:	2120      	movs	r1, #32
 8007f06:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007f08:	a802      	add	r0, sp, #8
 8007f0a:	9301      	str	r3, [sp, #4]
 8007f0c:	f000 fcae 	bl	800886c <vsnprintf>
 8007f10:	4604      	mov	r4, r0
 8007f12:	69a8      	ldr	r0, [r5, #24]
 8007f14:	4631      	mov	r1, r6
 8007f16:	6803      	ldr	r3, [r0, #0]
 8007f18:	aa02      	add	r2, sp, #8
 8007f1a:	69dd      	ldr	r5, [r3, #28]
 8007f1c:	b2a3      	uxth	r3, r4
 8007f1e:	47a8      	blx	r5
 8007f20:	4620      	mov	r0, r4
 8007f22:	b00a      	add	sp, #40	; 0x28
 8007f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007f28:	b002      	add	sp, #8
 8007f2a:	4770      	bx	lr

08007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8007f2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f30:	4604      	mov	r4, r0
 8007f32:	6980      	ldr	r0, [r0, #24]
 8007f34:	460f      	mov	r7, r1
 8007f36:	4615      	mov	r5, r2
 8007f38:	461e      	mov	r6, r3
 8007f3a:	b1d8      	cbz	r0, 8007f74 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x48>
 8007f3c:	f890 a005 	ldrb.w	sl, [r0, #5]
 8007f40:	2100      	movs	r1, #0
 8007f42:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 8007f46:	fa5f f888 	uxtb.w	r8, r8
 8007f4a:	4642      	mov	r2, r8
 8007f4c:	f890 9004 	ldrb.w	r9, [r0, #4]
 8007f50:	f04f 0b00 	mov.w	fp, #0
 8007f54:	f7ff ff79 	bl	8007e4a <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f58:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8007f5c:	45cb      	cmp	fp, r9
 8007f5e:	69a0      	ldr	r0, [r4, #24]
 8007f60:	d327      	bcc.n	8007fb2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x86>
 8007f62:	4642      	mov	r2, r8
 8007f64:	2100      	movs	r1, #0
 8007f66:	f7ff ff70 	bl	8007e4a <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8007f6a:	463a      	mov	r2, r7
 8007f6c:	4651      	mov	r1, sl
 8007f6e:	69a0      	ldr	r0, [r4, #24]
 8007f70:	f7ff ff70 	bl	8007e54 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8007f74:	7c63      	ldrb	r3, [r4, #17]
 8007f76:	b19b      	cbz	r3, 8007fa0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x74>
 8007f78:	43ea      	mvns	r2, r5
 8007f7a:	2312      	movs	r3, #18
 8007f7c:	7a20      	ldrb	r0, [r4, #8]
 8007f7e:	f88d 3004 	strb.w	r3, [sp, #4]
 8007f82:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8007f86:	f88d 3005 	strb.w	r3, [sp, #5]
 8007f8a:	f88d 2006 	strb.w	r2, [sp, #6]
 8007f8e:	f008 f849 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 8007f92:	68e0      	ldr	r0, [r4, #12]
 8007f94:	f008 f83e 	bl	8010014 <gd32_i2c_set_baudrate(unsigned int)>
 8007f98:	2103      	movs	r1, #3
 8007f9a:	a801      	add	r0, sp, #4
 8007f9c:	f008 f848 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 8007fa0:	1c73      	adds	r3, r6, #1
 8007fa2:	d00c      	beq.n	8007fbe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 8007fa4:	4639      	mov	r1, r7
 8007fa6:	4630      	mov	r0, r6
 8007fa8:	b003      	add	sp, #12
 8007faa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fae:	f006 bdd5 	b.w	800eb5c <console_status>
 8007fb2:	2120      	movs	r1, #32
 8007fb4:	f7ff ff60 	bl	8007e78 <Display::PutChar(int) [clone .isra.0]>
 8007fb8:	f10b 0b01 	add.w	fp, fp, #1
 8007fbc:	e7ce      	b.n	8007f5c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 8007fbe:	b003      	add	sp, #12
 8007fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007fc4 <main>:
 8007fc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007fc8:	f6ad 1d54 	subw	sp, sp, #2388	; 0x954
 8007fcc:	a80d      	add	r0, sp, #52	; 0x34
 8007fce:	f006 fe79 	bl	800ecc4 <Hardware::Hardware()>
 8007fd2:	a842      	add	r0, sp, #264	; 0x108
 8007fd4:	f005 f8cc 	bl	800d170 <Network::Network()>
 8007fd8:	a815      	add	r0, sp, #84	; 0x54
 8007fda:	f006 fe1d 	bl	800ec18 <LedBlink::LedBlink()>
 8007fde:	a81b      	add	r0, sp, #108	; 0x6c
 8007fe0:	f006 fb5e 	bl	800e6a0 <Display::Display()>
 8007fe4:	4aae      	ldr	r2, [pc, #696]	; (80082a0 <main+0x2dc>)
 8007fe6:	4baf      	ldr	r3, [pc, #700]	; (80082a4 <main+0x2e0>)
 8007fe8:	49af      	ldr	r1, [pc, #700]	; (80082a8 <main+0x2e4>)
 8007fea:	a804      	add	r0, sp, #16
 8007fec:	f006 fdce 	bl	800eb8c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8007ff0:	a805      	add	r0, sp, #20
 8007ff2:	f003 ffe3 	bl	800bfbc <FlashRom::FlashRom()>
 8007ff6:	a806      	add	r0, sp, #24
 8007ff8:	f003 fd9a 	bl	800bb30 <SpiFlashStore::SpiFlashStore()>
 8007ffc:	49ab      	ldr	r1, [pc, #684]	; (80082ac <main+0x2e8>)
 8007ffe:	a804      	add	r0, sp, #16
 8008000:	f006 fdfc 	bl	800ebfc <FirmwareVersion::Print(char const*)>
 8008004:	2301      	movs	r3, #1
 8008006:	4eaa      	ldr	r6, [pc, #680]	; (80082b0 <main+0x2ec>)
 8008008:	2008      	movs	r0, #8
 800800a:	6133      	str	r3, [r6, #16]
 800800c:	f006 fef0 	bl	800edf0 <operator new(unsigned int)>
 8008010:	4ba8      	ldr	r3, [pc, #672]	; (80082b4 <main+0x2f0>)
 8008012:	9017      	str	r0, [sp, #92]	; 0x5c
 8008014:	6003      	str	r3, [r0, #0]
 8008016:	4ba8      	ldr	r3, [pc, #672]	; (80082b8 <main+0x2f4>)
 8008018:	681b      	ldr	r3, [r3, #0]
 800801a:	3b00      	subs	r3, #0
 800801c:	bf18      	it	ne
 800801e:	2301      	movne	r3, #1
 8008020:	7103      	strb	r3, [r0, #4]
 8008022:	a808      	add	r0, sp, #32
 8008024:	f003 ff8c 	bl	800bf40 <StoreOscServer::StoreOscServer()>
 8008028:	a908      	add	r1, sp, #32
 800802a:	a874      	add	r0, sp, #464	; 0x1d0
 800802c:	f001 f8ae 	bl	800918c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8008030:	a832      	add	r0, sp, #200	; 0xc8
 8008032:	f000 fdb1 	bl	8008b98 <OscServer::OscServer()>
 8008036:	a874      	add	r0, sp, #464	; 0x1d0
 8008038:	f001 f8b8 	bl	80091ac <OSCServerParams::Load()>
 800803c:	b130      	cbz	r0, 800804c <main+0x88>
 800803e:	a874      	add	r0, sp, #464	; 0x1d0
 8008040:	f001 fa4b 	bl	80094da <OSCServerParams::Dump()>
 8008044:	a932      	add	r1, sp, #200	; 0xc8
 8008046:	a874      	add	r0, sp, #464	; 0x1d0
 8008048:	f001 f95a 	bl	8009300 <OSCServerParams::Set(OscServer*)>
 800804c:	2400      	movs	r4, #0
 800804e:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008052:	2303      	movs	r3, #3
 8008054:	4999      	ldr	r1, [pc, #612]	; (80082bc <main+0x2f8>)
 8008056:	a81b      	add	r0, sp, #108	; 0x6c
 8008058:	f7ff ff68 	bl	8007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800805c:	a80f      	add	r0, sp, #60	; 0x3c
 800805e:	f003 ff39 	bl	800bed4 <StoreNetwork::StoreNetwork()>
 8008062:	ab10      	add	r3, sp, #64	; 0x40
 8008064:	a90f      	add	r1, sp, #60	; 0x3c
 8008066:	a842      	add	r0, sp, #264	; 0x108
 8008068:	936f      	str	r3, [sp, #444]	; 0x1bc
 800806a:	f005 f8d7 	bl	800d21c <Network::Init(NetworkParamsStore*)>
 800806e:	a842      	add	r0, sp, #264	; 0x108
 8008070:	f005 fa08 	bl	800d484 <Network::Print()>
 8008074:	2303      	movs	r3, #3
 8008076:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800807a:	4991      	ldr	r1, [pc, #580]	; (80082c0 <main+0x2fc>)
 800807c:	a81b      	add	r0, sp, #108	; 0x6c
 800807e:	f7ff ff55 	bl	8007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008082:	a807      	add	r0, sp, #28
 8008084:	f004 fcb6 	bl	800c9f4 <MDNS::MDNS()>
 8008088:	a807      	add	r0, sp, #28
 800808a:	f004 fd73 	bl	800cb74 <MDNS::Start()>
 800808e:	4b8d      	ldr	r3, [pc, #564]	; (80082c4 <main+0x300>)
 8008090:	4621      	mov	r1, r4
 8008092:	4a8d      	ldr	r2, [pc, #564]	; (80082c8 <main+0x304>)
 8008094:	9301      	str	r3, [sp, #4]
 8008096:	9400      	str	r4, [sp, #0]
 8008098:	f8bd 30c8 	ldrh.w	r3, [sp, #200]	; 0xc8
 800809c:	a807      	add	r0, sp, #28
 800809e:	f004 fed3 	bl	800ce48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080a2:	4b8a      	ldr	r3, [pc, #552]	; (80082cc <main+0x308>)
 80080a4:	4621      	mov	r1, r4
 80080a6:	9301      	str	r3, [sp, #4]
 80080a8:	2301      	movs	r3, #1
 80080aa:	4a89      	ldr	r2, [pc, #548]	; (80082d0 <main+0x30c>)
 80080ac:	9300      	str	r3, [sp, #0]
 80080ae:	a807      	add	r0, sp, #28
 80080b0:	2350      	movs	r3, #80	; 0x50
 80080b2:	f004 fec9 	bl	800ce48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80080b6:	a807      	add	r0, sp, #28
 80080b8:	f005 f80c 	bl	800d0d4 <MDNS::Print()>
 80080bc:	2303      	movs	r3, #3
 80080be:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80080c2:	4984      	ldr	r1, [pc, #528]	; (80082d4 <main+0x310>)
 80080c4:	a81b      	add	r0, sp, #108	; 0x6c
 80080c6:	f7ff ff31 	bl	8007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80080ca:	a809      	add	r0, sp, #36	; 0x24
 80080cc:	f003 fe56 	bl	800bd7c <StoreDmxSend::StoreDmxSend()>
 80080d0:	a909      	add	r1, sp, #36	; 0x24
 80080d2:	a811      	add	r0, sp, #68	; 0x44
 80080d4:	f001 fc6e 	bl	80099b4 <DmxParams::DmxParams(DmxParamsStore*)>
 80080d8:	a822      	add	r0, sp, #136	; 0x88
 80080da:	f002 f8bf 	bl	800a25c <Dmx::Dmx()>
 80080de:	a811      	add	r0, sp, #68	; 0x44
 80080e0:	f001 fc74 	bl	80099cc <DmxParams::Load()>
 80080e4:	b130      	cbz	r0, 80080f4 <main+0x130>
 80080e6:	a811      	add	r0, sp, #68	; 0x44
 80080e8:	f001 fdbe 	bl	8009c68 <DmxParams::Dump()>
 80080ec:	a922      	add	r1, sp, #136	; 0x88
 80080ee:	a811      	add	r0, sp, #68	; 0x44
 80080f0:	f001 fd90 	bl	8009c14 <DmxParams::Set(Dmx*)>
 80080f4:	4b78      	ldr	r3, [pc, #480]	; (80082d8 <main+0x314>)
 80080f6:	ac0a      	add	r4, sp, #40	; 0x28
 80080f8:	4d78      	ldr	r5, [pc, #480]	; (80082dc <main+0x318>)
 80080fa:	4620      	mov	r0, r4
 80080fc:	930a      	str	r3, [sp, #40]	; 0x28
 80080fe:	f001 fbff 	bl	8009900 <DmxSend::Print()>
 8008102:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008106:	6828      	ldr	r0, [r5, #0]
 8008108:	f005 f862 	bl	800d1d0 <Network::Begin(unsigned short)>
 800810c:	4f74      	ldr	r7, [pc, #464]	; (80082e0 <main+0x31c>)
 800810e:	943f      	str	r4, [sp, #252]	; 0xfc
 8008110:	6038      	str	r0, [r7, #0]
 8008112:	a832      	add	r0, sp, #200	; 0xc8
 8008114:	f000 ffa6 	bl	8009064 <OscServer::Print()>
 8008118:	4620      	mov	r0, r4
 800811a:	f001 fbf1 	bl	8009900 <DmxSend::Print()>
 800811e:	2401      	movs	r4, #1
 8008120:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008122:	b118      	cbz	r0, 800812c <main+0x168>
 8008124:	6803      	ldr	r3, [r0, #0]
 8008126:	4621      	mov	r1, r4
 8008128:	691b      	ldr	r3, [r3, #16]
 800812a:	4798      	blx	r3
 800812c:	3401      	adds	r4, #1
 800812e:	b2e4      	uxtb	r4, r4
 8008130:	2c07      	cmp	r4, #7
 8008132:	d1f5      	bne.n	8008120 <main+0x15c>
 8008134:	2101      	movs	r1, #1
 8008136:	4a6b      	ldr	r2, [pc, #428]	; (80082e4 <main+0x320>)
 8008138:	a81b      	add	r0, sp, #108	; 0x6c
 800813a:	f7ff fedb 	bl	8007ef4 <Display::Printf(unsigned char, char const*, ...)>
 800813e:	2102      	movs	r1, #2
 8008140:	4a69      	ldr	r2, [pc, #420]	; (80082e8 <main+0x324>)
 8008142:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008144:	f7ff fe86 	bl	8007e54 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008148:	f89d 4109 	ldrb.w	r4, [sp, #265]	; 0x109
 800814c:	682b      	ldr	r3, [r5, #0]
 800814e:	2c00      	cmp	r4, #0
 8008150:	bf14      	ite	ne
 8008152:	2444      	movne	r4, #68	; 0x44
 8008154:	2453      	moveq	r4, #83	; 0x53
 8008156:	691b      	ldr	r3, [r3, #16]
 8008158:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800815c:	f3c3 4107 	ubfx	r1, r3, #16, #8
 8008160:	0e18      	lsrs	r0, r3, #24
 8008162:	e9cd 2100 	strd	r2, r1, [sp]
 8008166:	e9cd 0402 	strd	r0, r4, [sp, #8]
 800816a:	2103      	movs	r1, #3
 800816c:	4a5f      	ldr	r2, [pc, #380]	; (80082ec <main+0x328>)
 800816e:	b2db      	uxtb	r3, r3
 8008170:	a81b      	add	r0, sp, #108	; 0x6c
 8008172:	f7ff febf 	bl	8007ef4 <Display::Printf(unsigned char, char const*, ...)>
 8008176:	2104      	movs	r1, #4
 8008178:	f8bd 30c8 	ldrh.w	r3, [sp, #200]	; 0xc8
 800817c:	4a5c      	ldr	r2, [pc, #368]	; (80082f0 <main+0x32c>)
 800817e:	a81b      	add	r0, sp, #108	; 0x6c
 8008180:	f7ff feb8 	bl	8007ef4 <Display::Printf(unsigned char, char const*, ...)>
 8008184:	2105      	movs	r1, #5
 8008186:	f8bd 30ca 	ldrh.w	r3, [sp, #202]	; 0xca
 800818a:	4a5a      	ldr	r2, [pc, #360]	; (80082f4 <main+0x330>)
 800818c:	a81b      	add	r0, sp, #108	; 0x6c
 800818e:	f7ff feb1 	bl	8007ef4 <Display::Printf(unsigned char, char const*, ...)>
 8008192:	2301      	movs	r3, #1
 8008194:	2200      	movs	r2, #0
 8008196:	2102      	movs	r1, #2
 8008198:	a8d8      	add	r0, sp, #864	; 0x360
 800819a:	f002 fafd 	bl	800a798 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 800819e:	a80b      	add	r0, sp, #44	; 0x2c
 80081a0:	f003 ff02 	bl	800bfa8 <StoreRemoteConfig::StoreRemoteConfig()>
 80081a4:	a90b      	add	r1, sp, #44	; 0x2c
 80081a6:	a829      	add	r0, sp, #164	; 0xa4
 80081a8:	f002 fdc8 	bl	800ad3c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80081ac:	a829      	add	r0, sp, #164	; 0xa4
 80081ae:	f002 fdcf 	bl	800ad50 <RemoteConfigParams::Load()>
 80081b2:	b130      	cbz	r0, 80081c2 <main+0x1fe>
 80081b4:	a829      	add	r0, sp, #164	; 0xa4
 80081b6:	a9d8      	add	r1, sp, #864	; 0x360
 80081b8:	f002 fef1 	bl	800af9e <RemoteConfigParams::Set(RemoteConfig*)>
 80081bc:	a829      	add	r0, sp, #164	; 0xa4
 80081be:	f002 ff12 	bl	800afe6 <RemoteConfigParams::Dump()>
 80081c2:	a806      	add	r0, sp, #24
 80081c4:	f003 fd56 	bl	800bc74 <SpiFlashStore::Flash()>
 80081c8:	2800      	cmp	r0, #0
 80081ca:	d1fa      	bne.n	80081c2 <main+0x1fe>
 80081cc:	2303      	movs	r3, #3
 80081ce:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80081d2:	4949      	ldr	r1, [pc, #292]	; (80082f8 <main+0x334>)
 80081d4:	a81b      	add	r0, sp, #108	; 0x6c
 80081d6:	f7ff fea9 	bl	8007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081da:	a832      	add	r0, sp, #200	; 0xc8
 80081dc:	f000 fd46 	bl	8008c6c <OscServer::Start()>
 80081e0:	2302      	movs	r3, #2
 80081e2:	f248 0280 	movw	r2, #32896	; 0x8080
 80081e6:	4945      	ldr	r1, [pc, #276]	; (80082fc <main+0x338>)
 80081e8:	a81b      	add	r0, sp, #108	; 0x6c
 80081ea:	f7ff fe9f 	bl	8007f2c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081ee:	2102      	movs	r1, #2
 80081f0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80081f4:	f007 f9d0 	bl	800f598 <fwdgt_config>
 80081f8:	2801      	cmp	r0, #1
 80081fa:	bf0c      	ite	eq
 80081fc:	2301      	moveq	r3, #1
 80081fe:	2300      	movne	r3, #0
 8008200:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 8008204:	d101      	bne.n	800820a <main+0x246>
 8008206:	f007 f9b7 	bl	800f578 <fwdgt_enable>
 800820a:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8008300 <main+0x33c>
 800820e:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 8008304 <main+0x340>
 8008212:	f007 f9b9 	bl	800f588 <fwdgt_counter_reload>
 8008216:	f7ff f983 	bl	8007520 <net_handle>
 800821a:	a832      	add	r0, sp, #200	; 0xc8
 800821c:	f000 fdd6 	bl	8008dcc <OscServer::Run()>
 8008220:	a8d8      	add	r0, sp, #864	; 0x360
 8008222:	f002 fc53 	bl	800aacc <RemoteConfig::Run()>
 8008226:	a806      	add	r0, sp, #24
 8008228:	f003 fd24 	bl	800bc74 <SpiFlashStore::Flash()>
 800822c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800822e:	b192      	cbz	r2, 8008256 <main+0x292>
 8008230:	f8d9 3000 	ldr.w	r3, [r9]
 8008234:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008236:	1a5b      	subs	r3, r3, r1
 8008238:	429a      	cmp	r2, r3
 800823a:	d80c      	bhi.n	8008256 <main+0x292>
 800823c:	f8d9 3000 	ldr.w	r3, [r9]
 8008240:	931a      	str	r3, [sp, #104]	; 0x68
 8008242:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008244:	2b01      	cmp	r3, #1
 8008246:	f083 0201 	eor.w	r2, r3, #1
 800824a:	bf18      	it	ne
 800824c:	2301      	movne	r3, #1
 800824e:	9219      	str	r2, [sp, #100]	; 0x64
 8008250:	bf14      	ite	ne
 8008252:	6133      	strne	r3, [r6, #16]
 8008254:	6173      	streq	r3, [r6, #20]
 8008256:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8008258:	b16a      	cbz	r2, 8008276 <main+0x2b2>
 800825a:	f89d 307c 	ldrb.w	r3, [sp, #124]	; 0x7c
 800825e:	2b00      	cmp	r3, #0
 8008260:	d178      	bne.n	8008354 <main+0x390>
 8008262:	f8d9 3000 	ldr.w	r3, [r9]
 8008266:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008268:	1a5b      	subs	r3, r3, r1
 800826a:	429a      	cmp	r2, r3
 800826c:	d203      	bcs.n	8008276 <main+0x2b2>
 800826e:	2101      	movs	r1, #1
 8008270:	a81b      	add	r0, sp, #108	; 0x6c
 8008272:	f7ff fe2f 	bl	8007ed4 <Display::SetSleep(bool)>
 8008276:	4d24      	ldr	r5, [pc, #144]	; (8008308 <main+0x344>)
 8008278:	f10d 031e 	add.w	r3, sp, #30
 800827c:	9300      	str	r3, [sp, #0]
 800827e:	2210      	movs	r2, #16
 8008280:	4629      	mov	r1, r5
 8008282:	7838      	ldrb	r0, [r7, #0]
 8008284:	ab0c      	add	r3, sp, #48	; 0x30
 8008286:	f004 fa81 	bl	800c78c <udp_recv>
 800828a:	280a      	cmp	r0, #10
 800828c:	4604      	mov	r4, r0
 800828e:	d95d      	bls.n	800834c <main+0x388>
 8008290:	2204      	movs	r2, #4
 8008292:	4629      	mov	r1, r5
 8008294:	481d      	ldr	r0, [pc, #116]	; (800830c <main+0x348>)
 8008296:	f7ff fdb0 	bl	8007dfa <memcmp>
 800829a:	2800      	cmp	r0, #0
 800829c:	d156      	bne.n	800834c <main+0x388>
 800829e:	e037      	b.n	8008310 <main+0x34c>
 80082a0:	08010f5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, fp}
 80082a4:	08010f54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp}
 80082a8:	08011035 	stmdaeq	r1, {r0, r2, r4, r5, ip}
 80082ac:	08010f69 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, sl, fp}
 80082b0:	40011000 	andmi	r1, r1, r0
 80082b4:	08011024 	stmdaeq	r1, {r2, r5, ip}
 80082b8:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 80082bc:	08012489 	stmdaeq	r1, {r0, r3, r7, sl, sp}
 80082c0:	08012478 	stmdaeq	r1, {r3, r4, r5, r6, sl, sp}
 80082c4:	08010fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp}
 80082c8:	08010f9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, fp}
 80082cc:	08010fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp}
 80082d0:	08010fad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, fp}
 80082d4:	08011156 	stmdaeq	r1, {r1, r2, r4, r6, r8, ip}
 80082d8:	0801125c 	stmdaeq	r1, {r2, r3, r4, r6, r9, ip}
 80082dc:	2000948c 	andcs	r9, r0, ip, lsl #9
 80082e0:	20000004 	andcs	r0, r0, r4
 80082e4:	08010fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp}
 80082e8:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 80082ec:	08010fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp}
 80082f0:	08010feb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, sl, fp}
 80082f4:	08010ff2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, sl, fp}
 80082f8:	0801113e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, ip}
 80082fc:	0801116d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, ip}
 8008300:	20009bc4 	andcs	r9, r0, r4, asr #23
 8008304:	20000000 	andcs	r0, r0, r0
 8008308:	20000705 	andcs	r0, r0, r5, lsl #14
 800830c:	08010ffa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8008310:	4425      	add	r5, r4
 8008312:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8008316:	2b0a      	cmp	r3, #10
 8008318:	d103      	bne.n	8008322 <main+0x35e>
 800831a:	3c01      	subs	r4, #1
 800831c:	b2a4      	uxth	r4, r4
 800831e:	2c0a      	cmp	r4, #10
 8008320:	d054      	beq.n	80083cc <main+0x408>
 8008322:	2c0e      	cmp	r4, #14
 8008324:	d850      	bhi.n	80083c8 <main+0x404>
 8008326:	2206      	movs	r2, #6
 8008328:	f8d8 1000 	ldr.w	r1, [r8]
 800832c:	4833      	ldr	r0, [pc, #204]	; (80083fc <main+0x438>)
 800832e:	f7ff fd64 	bl	8007dfa <memcmp>
 8008332:	2800      	cmp	r0, #0
 8008334:	d14a      	bne.n	80083cc <main+0x408>
 8008336:	2104      	movs	r1, #4
 8008338:	4831      	ldr	r0, [pc, #196]	; (8008400 <main+0x43c>)
 800833a:	f7ff fd6f 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned char)>
 800833e:	285b      	cmp	r0, #91	; 0x5b
 8008340:	4601      	mov	r1, r0
 8008342:	d903      	bls.n	800834c <main+0x388>
 8008344:	4b2f      	ldr	r3, [pc, #188]	; (8008404 <main+0x440>)
 8008346:	6818      	ldr	r0, [r3, #0]
 8008348:	f002 f896 	bl	800a478 <Dmx::SetDmxBreakTime(unsigned int)>
 800834c:	a807      	add	r0, sp, #28
 800834e:	f004 fe9d 	bl	800d08c <MDNS::Run()>
 8008352:	e75e      	b.n	8008212 <main+0x24e>
 8008354:	f006 f9cf 	bl	800e6f6 <display::timeout::gpio_renew()>
 8008358:	2800      	cmp	r0, #0
 800835a:	d08c      	beq.n	8008276 <main+0x2b2>
 800835c:	2100      	movs	r1, #0
 800835e:	e787      	b.n	8008270 <main+0x2ac>
 8008360:	2c0c      	cmp	r4, #12
 8008362:	d916      	bls.n	8008392 <main+0x3ce>
 8008364:	2c0e      	cmp	r4, #14
 8008366:	d82c      	bhi.n	80083c2 <main+0x3fe>
 8008368:	2208      	movs	r2, #8
 800836a:	f8d8 1000 	ldr.w	r1, [r8]
 800836e:	4826      	ldr	r0, [pc, #152]	; (8008408 <main+0x444>)
 8008370:	f7ff fd43 	bl	8007dfa <memcmp>
 8008374:	bb28      	cbnz	r0, 80083c2 <main+0x3fe>
 8008376:	2102      	movs	r1, #2
 8008378:	4824      	ldr	r0, [pc, #144]	; (800840c <main+0x448>)
 800837a:	f7ff fd4f 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned char)>
 800837e:	4601      	mov	r1, r0
 8008380:	b110      	cbz	r0, 8008388 <main+0x3c4>
 8008382:	4b23      	ldr	r3, [pc, #140]	; (8008410 <main+0x44c>)
 8008384:	fbb3 f1f0 	udiv	r1, r3, r0
 8008388:	4b1e      	ldr	r3, [pc, #120]	; (8008404 <main+0x440>)
 800838a:	6818      	ldr	r0, [r3, #0]
 800838c:	f002 f844 	bl	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008390:	e7dc      	b.n	800834c <main+0x388>
 8008392:	2c0a      	cmp	r4, #10
 8008394:	d0da      	beq.n	800834c <main+0x388>
 8008396:	2206      	movs	r2, #6
 8008398:	f8d8 1000 	ldr.w	r1, [r8]
 800839c:	481d      	ldr	r0, [pc, #116]	; (8008414 <main+0x450>)
 800839e:	f7ff fd2c 	bl	8007dfa <memcmp>
 80083a2:	2800      	cmp	r0, #0
 80083a4:	d1d2      	bne.n	800834c <main+0x388>
 80083a6:	2103      	movs	r1, #3
 80083a8:	4815      	ldr	r0, [pc, #84]	; (8008400 <main+0x43c>)
 80083aa:	f7ff fd37 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned char)>
 80083ae:	1e83      	subs	r3, r0, #2
 80083b0:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80083b4:	d8ca      	bhi.n	800834c <main+0x388>
 80083b6:	4b13      	ldr	r3, [pc, #76]	; (8008404 <main+0x440>)
 80083b8:	b281      	uxth	r1, r0
 80083ba:	6818      	ldr	r0, [r3, #0]
 80083bc:	f002 f870 	bl	800a4a0 <Dmx::SetDmxSlots(unsigned short)>
 80083c0:	e7c4      	b.n	800834c <main+0x388>
 80083c2:	2c0d      	cmp	r4, #13
 80083c4:	d0e7      	beq.n	8008396 <main+0x3d2>
 80083c6:	e7c1      	b.n	800834c <main+0x388>
 80083c8:	2c10      	cmp	r4, #16
 80083ca:	d8bf      	bhi.n	800834c <main+0x388>
 80083cc:	2204      	movs	r2, #4
 80083ce:	f8d8 1000 	ldr.w	r1, [r8]
 80083d2:	4811      	ldr	r0, [pc, #68]	; (8008418 <main+0x454>)
 80083d4:	f7ff fd11 	bl	8007dfa <memcmp>
 80083d8:	2800      	cmp	r0, #0
 80083da:	d1c1      	bne.n	8008360 <main+0x39c>
 80083dc:	2107      	movs	r1, #7
 80083de:	480f      	ldr	r0, [pc, #60]	; (800841c <main+0x458>)
 80083e0:	f7ff fd1c 	bl	8007e1c <dmxconfigudp::atoi(char const*, unsigned char)>
 80083e4:	4b0e      	ldr	r3, [pc, #56]	; (8008420 <main+0x45c>)
 80083e6:	f1a0 020c 	sub.w	r2, r0, #12
 80083ea:	429a      	cmp	r2, r3
 80083ec:	4601      	mov	r1, r0
 80083ee:	d8ad      	bhi.n	800834c <main+0x388>
 80083f0:	4b04      	ldr	r3, [pc, #16]	; (8008404 <main+0x440>)
 80083f2:	6818      	ldr	r0, [r3, #0]
 80083f4:	f002 f84a 	bl	800a48c <Dmx::SetDmxMabTime(unsigned int)>
 80083f8:	e7a8      	b.n	800834c <main+0x388>
 80083fa:	bf00      	nop
 80083fc:	08010fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8008400:	2000070f 	andcs	r0, r0, pc, lsl #14
 8008404:	20000b44 	andcs	r0, r0, r4, asr #22
 8008408:	0801100b 	stmdaeq	r1, {r0, r1, r3, ip}
 800840c:	20000711 	andcs	r0, r0, r1, lsl r7
 8008410:	000f4240 	andeq	r4, pc, r0, asr #4
 8008414:	08011014 	stmdaeq	r1, {r2, r4, ip}
 8008418:	08011006 	stmdaeq	r1, {r1, r2, ip}
 800841c:	2000070d 	andcs	r0, r0, sp, lsl #14
 8008420:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08008424 <NetworkDisplay::ShowEmacStart()>:
 8008424:	4770      	bx	lr

08008426 <NetworkDisplay::ShowIp()>:
 8008426:	4770      	bx	lr

08008428 <NetworkDisplay::ShowShutdown()>:
 8008428:	4770      	bx	lr

0800842a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800842a:	4770      	bx	lr

0800842c <_xputch>:
 800842c:	4603      	mov	r3, r0
 800842e:	b410      	push	{r4}
 8008430:	4c08      	ldr	r4, [pc, #32]	; (8008454 <_xputch+0x28>)
 8008432:	68da      	ldr	r2, [r3, #12]
 8008434:	4608      	mov	r0, r1
 8008436:	6821      	ldr	r1, [r4, #0]
 8008438:	3201      	adds	r2, #1
 800843a:	60da      	str	r2, [r3, #12]
 800843c:	b139      	cbz	r1, 800844e <_xputch+0x22>
 800843e:	691b      	ldr	r3, [r3, #16]
 8008440:	429a      	cmp	r2, r3
 8008442:	da02      	bge.n	800844a <_xputch+0x1e>
 8008444:	1c4b      	adds	r3, r1, #1
 8008446:	6023      	str	r3, [r4, #0]
 8008448:	7008      	strb	r0, [r1, #0]
 800844a:	bc10      	pop	{r4}
 800844c:	4770      	bx	lr
 800844e:	bc10      	pop	{r4}
 8008450:	f006 bb4c 	b.w	800eaec <console_putc>
 8008454:	200000f8 	strdcs	r0, [r0], -r8

08008458 <_format_int>:
 8008458:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800845c:	4698      	mov	r8, r3
 800845e:	b091      	sub	sp, #68	; 0x44
 8008460:	ea52 0308 	orrs.w	r3, r2, r8
 8008464:	4606      	mov	r6, r0
 8008466:	4617      	mov	r7, r2
 8008468:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800846c:	d133      	bne.n	80084d6 <_format_int+0x7e>
 800846e:	2330      	movs	r3, #48	; 0x30
 8008470:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008474:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008478:	6833      	ldr	r3, [r6, #0]
 800847a:	07d8      	lsls	r0, r3, #31
 800847c:	d507      	bpl.n	800848e <_format_int+0x36>
 800847e:	466a      	mov	r2, sp
 8008480:	2030      	movs	r0, #48	; 0x30
 8008482:	6871      	ldr	r1, [r6, #4]
 8008484:	1b2f      	subs	r7, r5, r4
 8008486:	428f      	cmp	r7, r1
 8008488:	da01      	bge.n	800848e <_format_int+0x36>
 800848a:	4294      	cmp	r4, r2
 800848c:	d839      	bhi.n	8008502 <_format_int+0xaa>
 800848e:	0699      	lsls	r1, r3, #26
 8008490:	d507      	bpl.n	80084a2 <_format_int+0x4a>
 8008492:	466a      	mov	r2, sp
 8008494:	2030      	movs	r0, #48	; 0x30
 8008496:	68b1      	ldr	r1, [r6, #8]
 8008498:	1b2f      	subs	r7, r5, r4
 800849a:	428f      	cmp	r7, r1
 800849c:	da01      	bge.n	80084a2 <_format_int+0x4a>
 800849e:	4294      	cmp	r4, r2
 80084a0:	d832      	bhi.n	8008508 <_format_int+0xb0>
 80084a2:	071a      	lsls	r2, r3, #28
 80084a4:	bf44      	itt	mi
 80084a6:	222d      	movmi	r2, #45	; 0x2d
 80084a8:	f804 2901 	strbmi.w	r2, [r4], #-1
 80084ac:	065b      	lsls	r3, r3, #25
 80084ae:	d407      	bmi.n	80084c0 <_format_int+0x68>
 80084b0:	466b      	mov	r3, sp
 80084b2:	2120      	movs	r1, #32
 80084b4:	68b2      	ldr	r2, [r6, #8]
 80084b6:	1b28      	subs	r0, r5, r4
 80084b8:	4290      	cmp	r0, r2
 80084ba:	da01      	bge.n	80084c0 <_format_int+0x68>
 80084bc:	429c      	cmp	r4, r3
 80084be:	d826      	bhi.n	800850e <_format_int+0xb6>
 80084c0:	1b2d      	subs	r5, r5, r4
 80084c2:	3401      	adds	r4, #1
 80084c4:	ab10      	add	r3, sp, #64	; 0x40
 80084c6:	429c      	cmp	r4, r3
 80084c8:	d324      	bcc.n	8008514 <_format_int+0xbc>
 80084ca:	68b3      	ldr	r3, [r6, #8]
 80084cc:	42ab      	cmp	r3, r5
 80084ce:	dc27      	bgt.n	8008520 <_format_int+0xc8>
 80084d0:	b011      	add	sp, #68	; 0x44
 80084d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80084d6:	462c      	mov	r4, r5
 80084d8:	46e9      	mov	r9, sp
 80084da:	4638      	mov	r0, r7
 80084dc:	4641      	mov	r1, r8
 80084de:	220a      	movs	r2, #10
 80084e0:	2300      	movs	r3, #0
 80084e2:	f7ff faff 	bl	8007ae4 <__aeabi_uldivmod>
 80084e6:	3230      	adds	r2, #48	; 0x30
 80084e8:	f804 2901 	strb.w	r2, [r4], #-1
 80084ec:	463a      	mov	r2, r7
 80084ee:	4643      	mov	r3, r8
 80084f0:	2a0a      	cmp	r2, #10
 80084f2:	f173 0300 	sbcs.w	r3, r3, #0
 80084f6:	4607      	mov	r7, r0
 80084f8:	4688      	mov	r8, r1
 80084fa:	d3bd      	bcc.n	8008478 <_format_int+0x20>
 80084fc:	454c      	cmp	r4, r9
 80084fe:	d1ec      	bne.n	80084da <_format_int+0x82>
 8008500:	e7ba      	b.n	8008478 <_format_int+0x20>
 8008502:	f804 0901 	strb.w	r0, [r4], #-1
 8008506:	e7bd      	b.n	8008484 <_format_int+0x2c>
 8008508:	f804 0901 	strb.w	r0, [r4], #-1
 800850c:	e7c4      	b.n	8008498 <_format_int+0x40>
 800850e:	f804 1901 	strb.w	r1, [r4], #-1
 8008512:	e7d0      	b.n	80084b6 <_format_int+0x5e>
 8008514:	4630      	mov	r0, r6
 8008516:	f814 1b01 	ldrb.w	r1, [r4], #1
 800851a:	f7ff ff87 	bl	800842c <_xputch>
 800851e:	e7d1      	b.n	80084c4 <_format_int+0x6c>
 8008520:	2120      	movs	r1, #32
 8008522:	4630      	mov	r0, r6
 8008524:	f7ff ff82 	bl	800842c <_xputch>
 8008528:	3501      	adds	r5, #1
 800852a:	e7ce      	b.n	80084ca <_format_int+0x72>

0800852c <_format_hex>:
 800852c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800852e:	b091      	sub	sp, #68	; 0x44
 8008530:	4606      	mov	r6, r0
 8008532:	6804      	ldr	r4, [r0, #0]
 8008534:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008538:	bb61      	cbnz	r1, 8008594 <_format_hex+0x68>
 800853a:	2330      	movs	r3, #48	; 0x30
 800853c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008540:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008544:	07e5      	lsls	r5, r4, #31
 8008546:	d507      	bpl.n	8008558 <_format_hex+0x2c>
 8008548:	4669      	mov	r1, sp
 800854a:	2530      	movs	r5, #48	; 0x30
 800854c:	6870      	ldr	r0, [r6, #4]
 800854e:	1ad7      	subs	r7, r2, r3
 8008550:	4287      	cmp	r7, r0
 8008552:	da01      	bge.n	8008558 <_format_hex+0x2c>
 8008554:	428b      	cmp	r3, r1
 8008556:	d831      	bhi.n	80085bc <_format_hex+0x90>
 8008558:	06a0      	lsls	r0, r4, #26
 800855a:	d507      	bpl.n	800856c <_format_hex+0x40>
 800855c:	4669      	mov	r1, sp
 800855e:	2530      	movs	r5, #48	; 0x30
 8008560:	68b0      	ldr	r0, [r6, #8]
 8008562:	1ad7      	subs	r7, r2, r3
 8008564:	4287      	cmp	r7, r0
 8008566:	da01      	bge.n	800856c <_format_hex+0x40>
 8008568:	428b      	cmp	r3, r1
 800856a:	d82a      	bhi.n	80085c2 <_format_hex+0x96>
 800856c:	0661      	lsls	r1, r4, #25
 800856e:	d407      	bmi.n	8008580 <_format_hex+0x54>
 8008570:	4669      	mov	r1, sp
 8008572:	2420      	movs	r4, #32
 8008574:	68b0      	ldr	r0, [r6, #8]
 8008576:	1ad5      	subs	r5, r2, r3
 8008578:	4285      	cmp	r5, r0
 800857a:	da01      	bge.n	8008580 <_format_hex+0x54>
 800857c:	428b      	cmp	r3, r1
 800857e:	d823      	bhi.n	80085c8 <_format_hex+0x9c>
 8008580:	1ad5      	subs	r5, r2, r3
 8008582:	1c5c      	adds	r4, r3, #1
 8008584:	ab10      	add	r3, sp, #64	; 0x40
 8008586:	429c      	cmp	r4, r3
 8008588:	d321      	bcc.n	80085ce <_format_hex+0xa2>
 800858a:	68b3      	ldr	r3, [r6, #8]
 800858c:	429d      	cmp	r5, r3
 800858e:	db24      	blt.n	80085da <_format_hex+0xae>
 8008590:	b011      	add	sp, #68	; 0x44
 8008592:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008594:	f014 0f02 	tst.w	r4, #2
 8008598:	bf0c      	ite	eq
 800859a:	2757      	moveq	r7, #87	; 0x57
 800859c:	2737      	movne	r7, #55	; 0x37
 800859e:	4613      	mov	r3, r2
 80085a0:	466d      	mov	r5, sp
 80085a2:	f001 000f 	and.w	r0, r1, #15
 80085a6:	2809      	cmp	r0, #9
 80085a8:	bf94      	ite	ls
 80085aa:	3030      	addls	r0, #48	; 0x30
 80085ac:	19c0      	addhi	r0, r0, r7
 80085ae:	0909      	lsrs	r1, r1, #4
 80085b0:	f803 0901 	strb.w	r0, [r3], #-1
 80085b4:	d0c6      	beq.n	8008544 <_format_hex+0x18>
 80085b6:	42ab      	cmp	r3, r5
 80085b8:	d1f3      	bne.n	80085a2 <_format_hex+0x76>
 80085ba:	e7c3      	b.n	8008544 <_format_hex+0x18>
 80085bc:	f803 5901 	strb.w	r5, [r3], #-1
 80085c0:	e7c5      	b.n	800854e <_format_hex+0x22>
 80085c2:	f803 5901 	strb.w	r5, [r3], #-1
 80085c6:	e7cc      	b.n	8008562 <_format_hex+0x36>
 80085c8:	f803 4901 	strb.w	r4, [r3], #-1
 80085cc:	e7d3      	b.n	8008576 <_format_hex+0x4a>
 80085ce:	4630      	mov	r0, r6
 80085d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80085d4:	f7ff ff2a 	bl	800842c <_xputch>
 80085d8:	e7d4      	b.n	8008584 <_format_hex+0x58>
 80085da:	2120      	movs	r1, #32
 80085dc:	4630      	mov	r0, r6
 80085de:	f7ff ff25 	bl	800842c <_xputch>
 80085e2:	3501      	adds	r5, #1
 80085e4:	e7d1      	b.n	800858a <_format_hex+0x5e>
	...

080085e8 <_vprintf>:
 80085e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80085ec:	2700      	movs	r7, #0
 80085ee:	460b      	mov	r3, r1
 80085f0:	4614      	mov	r4, r2
 80085f2:	f04f 080a 	mov.w	r8, #10
 80085f6:	b086      	sub	sp, #24
 80085f8:	e9cd 7004 	strd	r7, r0, [sp, #16]
 80085fc:	7819      	ldrb	r1, [r3, #0]
 80085fe:	b919      	cbnz	r1, 8008608 <_vprintf+0x20>
 8008600:	9804      	ldr	r0, [sp, #16]
 8008602:	b006      	add	sp, #24
 8008604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008608:	2925      	cmp	r1, #37	; 0x25
 800860a:	f103 0601 	add.w	r6, r3, #1
 800860e:	d004      	beq.n	800861a <_vprintf+0x32>
 8008610:	a801      	add	r0, sp, #4
 8008612:	f7ff ff0b 	bl	800842c <_xputch>
 8008616:	4633      	mov	r3, r6
 8008618:	e7f0      	b.n	80085fc <_vprintf+0x14>
 800861a:	785a      	ldrb	r2, [r3, #1]
 800861c:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8008620:	2a30      	cmp	r2, #48	; 0x30
 8008622:	9703      	str	r7, [sp, #12]
 8008624:	d126      	bne.n	8008674 <_vprintf+0x8c>
 8008626:	2220      	movs	r2, #32
 8008628:	9201      	str	r2, [sp, #4]
 800862a:	1c9e      	adds	r6, r3, #2
 800862c:	2200      	movs	r2, #0
 800862e:	4635      	mov	r5, r6
 8008630:	4613      	mov	r3, r2
 8008632:	7829      	ldrb	r1, [r5, #0]
 8008634:	462e      	mov	r6, r5
 8008636:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800863a:	2809      	cmp	r0, #9
 800863c:	f105 0501 	add.w	r5, r5, #1
 8008640:	d91c      	bls.n	800867c <_vprintf+0x94>
 8008642:	b12a      	cbz	r2, 8008650 <_vprintf+0x68>
 8008644:	9303      	str	r3, [sp, #12]
 8008646:	b11b      	cbz	r3, 8008650 <_vprintf+0x68>
 8008648:	9b01      	ldr	r3, [sp, #4]
 800864a:	f043 0310 	orr.w	r3, r3, #16
 800864e:	9301      	str	r3, [sp, #4]
 8008650:	292e      	cmp	r1, #46	; 0x2e
 8008652:	d122      	bne.n	800869a <_vprintf+0xb2>
 8008654:	7873      	ldrb	r3, [r6, #1]
 8008656:	2b2a      	cmp	r3, #42	; 0x2a
 8008658:	d014      	beq.n	8008684 <_vprintf+0x9c>
 800865a:	2100      	movs	r1, #0
 800865c:	460a      	mov	r2, r1
 800865e:	1c70      	adds	r0, r6, #1
 8008660:	7803      	ldrb	r3, [r0, #0]
 8008662:	4606      	mov	r6, r0
 8008664:	3b30      	subs	r3, #48	; 0x30
 8008666:	2b09      	cmp	r3, #9
 8008668:	f100 0001 	add.w	r0, r0, #1
 800866c:	d930      	bls.n	80086d0 <_vprintf+0xe8>
 800866e:	b181      	cbz	r1, 8008692 <_vprintf+0xaa>
 8008670:	9202      	str	r2, [sp, #8]
 8008672:	e00e      	b.n	8008692 <_vprintf+0xaa>
 8008674:	2a2d      	cmp	r2, #45	; 0x2d
 8008676:	d1d9      	bne.n	800862c <_vprintf+0x44>
 8008678:	2240      	movs	r2, #64	; 0x40
 800867a:	e7d5      	b.n	8008628 <_vprintf+0x40>
 800867c:	2201      	movs	r2, #1
 800867e:	fb08 0303 	mla	r3, r8, r3, r0
 8008682:	e7d6      	b.n	8008632 <_vprintf+0x4a>
 8008684:	f854 3b04 	ldr.w	r3, [r4], #4
 8008688:	3602      	adds	r6, #2
 800868a:	2b00      	cmp	r3, #0
 800868c:	bfb8      	it	lt
 800868e:	425b      	neglt	r3, r3
 8008690:	9302      	str	r3, [sp, #8]
 8008692:	9b01      	ldr	r3, [sp, #4]
 8008694:	f043 0301 	orr.w	r3, r3, #1
 8008698:	9301      	str	r3, [sp, #4]
 800869a:	7833      	ldrb	r3, [r6, #0]
 800869c:	2b6c      	cmp	r3, #108	; 0x6c
 800869e:	bf04      	itt	eq
 80086a0:	9b01      	ldreq	r3, [sp, #4]
 80086a2:	3601      	addeq	r6, #1
 80086a4:	7831      	ldrb	r1, [r6, #0]
 80086a6:	bf04      	itt	eq
 80086a8:	f043 0304 	orreq.w	r3, r3, #4
 80086ac:	9301      	streq	r3, [sp, #4]
 80086ae:	2978      	cmp	r1, #120	; 0x78
 80086b0:	d8ae      	bhi.n	8008610 <_vprintf+0x28>
 80086b2:	296f      	cmp	r1, #111	; 0x6f
 80086b4:	d810      	bhi.n	80086d8 <_vprintf+0xf0>
 80086b6:	2963      	cmp	r1, #99	; 0x63
 80086b8:	d048      	beq.n	800874c <_vprintf+0x164>
 80086ba:	d827      	bhi.n	800870c <_vprintf+0x124>
 80086bc:	2958      	cmp	r1, #88	; 0x58
 80086be:	d1a7      	bne.n	8008610 <_vprintf+0x28>
 80086c0:	9b01      	ldr	r3, [sp, #4]
 80086c2:	f043 0302 	orr.w	r3, r3, #2
 80086c6:	9301      	str	r3, [sp, #4]
 80086c8:	4625      	mov	r5, r4
 80086ca:	f855 1b04 	ldr.w	r1, [r5], #4
 80086ce:	e056      	b.n	800877e <_vprintf+0x196>
 80086d0:	2101      	movs	r1, #1
 80086d2:	fb08 3202 	mla	r2, r8, r2, r3
 80086d6:	e7c3      	b.n	8008660 <_vprintf+0x78>
 80086d8:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 80086dc:	2b08      	cmp	r3, #8
 80086de:	d897      	bhi.n	8008610 <_vprintf+0x28>
 80086e0:	a201      	add	r2, pc, #4	; (adr r2, 80086e8 <_vprintf+0x100>)
 80086e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80086e6:	bf00      	nop
 80086e8:	0800875f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, pc}
 80086ec:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 80086f0:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 80086f4:	08008787 	stmdaeq	r0, {r0, r1, r2, r7, r8, r9, sl, pc}
 80086f8:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 80086fc:	080087fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, pc}
 8008700:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 8008704:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 8008708:	080086c9 	stmdaeq	r0, {r0, r3, r6, r7, r9, sl, pc}
 800870c:	2964      	cmp	r1, #100	; 0x64
 800870e:	d002      	beq.n	8008716 <_vprintf+0x12e>
 8008710:	2969      	cmp	r1, #105	; 0x69
 8008712:	f47f af7d 	bne.w	8008610 <_vprintf+0x28>
 8008716:	9901      	ldr	r1, [sp, #4]
 8008718:	074d      	lsls	r5, r1, #29
 800871a:	bf51      	iteee	pl
 800871c:	4625      	movpl	r5, r4
 800871e:	3407      	addmi	r4, #7
 8008720:	f024 0407 	bicmi.w	r4, r4, #7
 8008724:	4625      	movmi	r5, r4
 8008726:	bf55      	itete	pl
 8008728:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800872c:	6863      	ldrmi	r3, [r4, #4]
 800872e:	17d3      	asrpl	r3, r2, #31
 8008730:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8008734:	2b00      	cmp	r3, #0
 8008736:	da05      	bge.n	8008744 <_vprintf+0x15c>
 8008738:	f041 0108 	orr.w	r1, r1, #8
 800873c:	4252      	negs	r2, r2
 800873e:	9101      	str	r1, [sp, #4]
 8008740:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008744:	a801      	add	r0, sp, #4
 8008746:	f7ff fe87 	bl	8008458 <_format_int>
 800874a:	e005      	b.n	8008758 <_vprintf+0x170>
 800874c:	4625      	mov	r5, r4
 800874e:	a801      	add	r0, sp, #4
 8008750:	f855 1b04 	ldr.w	r1, [r5], #4
 8008754:	f7ff fe6a 	bl	800842c <_xputch>
 8008758:	462c      	mov	r4, r5
 800875a:	3601      	adds	r6, #1
 800875c:	e75b      	b.n	8008616 <_vprintf+0x2e>
 800875e:	2308      	movs	r3, #8
 8008760:	4625      	mov	r5, r4
 8008762:	9303      	str	r3, [sp, #12]
 8008764:	2320      	movs	r3, #32
 8008766:	2130      	movs	r1, #48	; 0x30
 8008768:	f855 4b04 	ldr.w	r4, [r5], #4
 800876c:	a801      	add	r0, sp, #4
 800876e:	9301      	str	r3, [sp, #4]
 8008770:	f7ff fe5c 	bl	800842c <_xputch>
 8008774:	2178      	movs	r1, #120	; 0x78
 8008776:	a801      	add	r0, sp, #4
 8008778:	f7ff fe58 	bl	800842c <_xputch>
 800877c:	4621      	mov	r1, r4
 800877e:	a801      	add	r0, sp, #4
 8008780:	f7ff fed4 	bl	800852c <_format_hex>
 8008784:	e7e8      	b.n	8008758 <_vprintf+0x170>
 8008786:	4625      	mov	r5, r4
 8008788:	2400      	movs	r4, #0
 800878a:	f855 9b04 	ldr.w	r9, [r5], #4
 800878e:	f819 3004 	ldrb.w	r3, [r9, r4]
 8008792:	b993      	cbnz	r3, 80087ba <_vprintf+0x1d2>
 8008794:	9b01      	ldr	r3, [sp, #4]
 8008796:	07d9      	lsls	r1, r3, #31
 8008798:	d503      	bpl.n	80087a2 <_vprintf+0x1ba>
 800879a:	9b02      	ldr	r3, [sp, #8]
 800879c:	429c      	cmp	r4, r3
 800879e:	bfa8      	it	ge
 80087a0:	461c      	movge	r4, r3
 80087a2:	9b01      	ldr	r3, [sp, #4]
 80087a4:	f104 0a01 	add.w	sl, r4, #1
 80087a8:	065a      	lsls	r2, r3, #25
 80087aa:	d403      	bmi.n	80087b4 <_vprintf+0x1cc>
 80087ac:	9b03      	ldr	r3, [sp, #12]
 80087ae:	429c      	cmp	r4, r3
 80087b0:	db05      	blt.n	80087be <_vprintf+0x1d6>
 80087b2:	4654      	mov	r4, sl
 80087b4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087b8:	e00d      	b.n	80087d6 <_vprintf+0x1ee>
 80087ba:	3401      	adds	r4, #1
 80087bc:	e7e7      	b.n	800878e <_vprintf+0x1a6>
 80087be:	2120      	movs	r1, #32
 80087c0:	a801      	add	r0, sp, #4
 80087c2:	f7ff fe33 	bl	800842c <_xputch>
 80087c6:	4654      	mov	r4, sl
 80087c8:	e7eb      	b.n	80087a2 <_vprintf+0x1ba>
 80087ca:	a801      	add	r0, sp, #4
 80087cc:	f7ff fe2e 	bl	800842c <_xputch>
 80087d0:	9b02      	ldr	r3, [sp, #8]
 80087d2:	3b01      	subs	r3, #1
 80087d4:	9302      	str	r3, [sp, #8]
 80087d6:	9b01      	ldr	r3, [sp, #4]
 80087d8:	07db      	lsls	r3, r3, #31
 80087da:	d501      	bpl.n	80087e0 <_vprintf+0x1f8>
 80087dc:	9b02      	ldr	r3, [sp, #8]
 80087de:	b11b      	cbz	r3, 80087e8 <_vprintf+0x200>
 80087e0:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80087e4:	2900      	cmp	r1, #0
 80087e6:	d1f0      	bne.n	80087ca <_vprintf+0x1e2>
 80087e8:	9b03      	ldr	r3, [sp, #12]
 80087ea:	42a3      	cmp	r3, r4
 80087ec:	ddb4      	ble.n	8008758 <_vprintf+0x170>
 80087ee:	2120      	movs	r1, #32
 80087f0:	a801      	add	r0, sp, #4
 80087f2:	f7ff fe1b 	bl	800842c <_xputch>
 80087f6:	3401      	adds	r4, #1
 80087f8:	e7f6      	b.n	80087e8 <_vprintf+0x200>
 80087fa:	9b01      	ldr	r3, [sp, #4]
 80087fc:	f013 0304 	ands.w	r3, r3, #4
 8008800:	bf1d      	ittte	ne
 8008802:	3407      	addne	r4, #7
 8008804:	f024 0407 	bicne.w	r4, r4, #7
 8008808:	4625      	movne	r5, r4
 800880a:	4625      	moveq	r5, r4
 800880c:	bf1a      	itte	ne
 800880e:	f855 2b08 	ldrne.w	r2, [r5], #8
 8008812:	6863      	ldrne	r3, [r4, #4]
 8008814:	f855 2b04 	ldreq.w	r2, [r5], #4
 8008818:	e794      	b.n	8008744 <_vprintf+0x15c>
 800881a:	bf00      	nop

0800881c <printf>:
 800881c:	b40f      	push	{r0, r1, r2, r3}
 800881e:	b507      	push	{r0, r1, r2, lr}
 8008820:	aa04      	add	r2, sp, #16
 8008822:	f852 1b04 	ldr.w	r1, [r2], #4
 8008826:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800882a:	9201      	str	r2, [sp, #4]
 800882c:	f7ff fedc 	bl	80085e8 <_vprintf>
 8008830:	b003      	add	sp, #12
 8008832:	f85d eb04 	ldr.w	lr, [sp], #4
 8008836:	b004      	add	sp, #16
 8008838:	4770      	bx	lr
	...

0800883c <snprintf>:
 800883c:	b40c      	push	{r2, r3}
 800883e:	460b      	mov	r3, r1
 8008840:	b513      	push	{r0, r1, r4, lr}
 8008842:	4c09      	ldr	r4, [pc, #36]	; (8008868 <snprintf+0x2c>)
 8008844:	aa04      	add	r2, sp, #16
 8008846:	f852 1b04 	ldr.w	r1, [r2], #4
 800884a:	6020      	str	r0, [r4, #0]
 800884c:	4618      	mov	r0, r3
 800884e:	9201      	str	r2, [sp, #4]
 8008850:	f7ff feca 	bl	80085e8 <_vprintf>
 8008854:	2300      	movs	r3, #0
 8008856:	6822      	ldr	r2, [r4, #0]
 8008858:	6023      	str	r3, [r4, #0]
 800885a:	7013      	strb	r3, [r2, #0]
 800885c:	b002      	add	sp, #8
 800885e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008862:	b002      	add	sp, #8
 8008864:	4770      	bx	lr
 8008866:	bf00      	nop
 8008868:	200000f8 	strdcs	r0, [r0], -r8

0800886c <vsnprintf>:
 800886c:	b538      	push	{r3, r4, r5, lr}
 800886e:	4605      	mov	r5, r0
 8008870:	4c05      	ldr	r4, [pc, #20]	; (8008888 <vsnprintf+0x1c>)
 8008872:	4608      	mov	r0, r1
 8008874:	4611      	mov	r1, r2
 8008876:	461a      	mov	r2, r3
 8008878:	6025      	str	r5, [r4, #0]
 800887a:	f7ff feb5 	bl	80085e8 <_vprintf>
 800887e:	2300      	movs	r3, #0
 8008880:	6822      	ldr	r2, [r4, #0]
 8008882:	6023      	str	r3, [r4, #0]
 8008884:	7013      	strb	r3, [r2, #0]
 8008886:	bd38      	pop	{r3, r4, r5, pc}
 8008888:	200000f8 	strdcs	r0, [r0], -r8

0800888c <__udivmoddi4>:
 800888c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008890:	9e08      	ldr	r6, [sp, #32]
 8008892:	460d      	mov	r5, r1
 8008894:	4604      	mov	r4, r0
 8008896:	468e      	mov	lr, r1
 8008898:	2b00      	cmp	r3, #0
 800889a:	d14c      	bne.n	8008936 <__udivmoddi4+0xaa>
 800889c:	428a      	cmp	r2, r1
 800889e:	4694      	mov	ip, r2
 80088a0:	d967      	bls.n	8008972 <__udivmoddi4+0xe6>
 80088a2:	fab2 f382 	clz	r3, r2
 80088a6:	b153      	cbz	r3, 80088be <__udivmoddi4+0x32>
 80088a8:	fa02 fc03 	lsl.w	ip, r2, r3
 80088ac:	f1c3 0220 	rsb	r2, r3, #32
 80088b0:	fa01 fe03 	lsl.w	lr, r1, r3
 80088b4:	fa20 f202 	lsr.w	r2, r0, r2
 80088b8:	ea42 0e0e 	orr.w	lr, r2, lr
 80088bc:	409c      	lsls	r4, r3
 80088be:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80088c2:	fbbe f1f7 	udiv	r1, lr, r7
 80088c6:	fa1f f58c 	uxth.w	r5, ip
 80088ca:	fb07 ee11 	mls	lr, r7, r1, lr
 80088ce:	fb01 f005 	mul.w	r0, r1, r5
 80088d2:	0c22      	lsrs	r2, r4, #16
 80088d4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80088d8:	4290      	cmp	r0, r2
 80088da:	d90a      	bls.n	80088f2 <__udivmoddi4+0x66>
 80088dc:	eb1c 0202 	adds.w	r2, ip, r2
 80088e0:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80088e4:	f080 8119 	bcs.w	8008b1a <__udivmoddi4+0x28e>
 80088e8:	4290      	cmp	r0, r2
 80088ea:	f240 8116 	bls.w	8008b1a <__udivmoddi4+0x28e>
 80088ee:	3902      	subs	r1, #2
 80088f0:	4462      	add	r2, ip
 80088f2:	1a12      	subs	r2, r2, r0
 80088f4:	fbb2 f0f7 	udiv	r0, r2, r7
 80088f8:	fb07 2210 	mls	r2, r7, r0, r2
 80088fc:	fb00 f505 	mul.w	r5, r0, r5
 8008900:	b2a4      	uxth	r4, r4
 8008902:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8008906:	42a5      	cmp	r5, r4
 8008908:	d90a      	bls.n	8008920 <__udivmoddi4+0x94>
 800890a:	eb1c 0404 	adds.w	r4, ip, r4
 800890e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8008912:	f080 8104 	bcs.w	8008b1e <__udivmoddi4+0x292>
 8008916:	42a5      	cmp	r5, r4
 8008918:	f240 8101 	bls.w	8008b1e <__udivmoddi4+0x292>
 800891c:	4464      	add	r4, ip
 800891e:	3802      	subs	r0, #2
 8008920:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8008924:	2100      	movs	r1, #0
 8008926:	1b64      	subs	r4, r4, r5
 8008928:	b11e      	cbz	r6, 8008932 <__udivmoddi4+0xa6>
 800892a:	40dc      	lsrs	r4, r3
 800892c:	2300      	movs	r3, #0
 800892e:	e9c6 4300 	strd	r4, r3, [r6]
 8008932:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008936:	428b      	cmp	r3, r1
 8008938:	d908      	bls.n	800894c <__udivmoddi4+0xc0>
 800893a:	2e00      	cmp	r6, #0
 800893c:	f000 80ea 	beq.w	8008b14 <__udivmoddi4+0x288>
 8008940:	2100      	movs	r1, #0
 8008942:	e9c6 0500 	strd	r0, r5, [r6]
 8008946:	4608      	mov	r0, r1
 8008948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800894c:	fab3 f183 	clz	r1, r3
 8008950:	2900      	cmp	r1, #0
 8008952:	d148      	bne.n	80089e6 <__udivmoddi4+0x15a>
 8008954:	42ab      	cmp	r3, r5
 8008956:	d302      	bcc.n	800895e <__udivmoddi4+0xd2>
 8008958:	4282      	cmp	r2, r0
 800895a:	f200 80f8 	bhi.w	8008b4e <__udivmoddi4+0x2c2>
 800895e:	1a84      	subs	r4, r0, r2
 8008960:	eb65 0203 	sbc.w	r2, r5, r3
 8008964:	2001      	movs	r0, #1
 8008966:	4696      	mov	lr, r2
 8008968:	2e00      	cmp	r6, #0
 800896a:	d0e2      	beq.n	8008932 <__udivmoddi4+0xa6>
 800896c:	e9c6 4e00 	strd	r4, lr, [r6]
 8008970:	e7df      	b.n	8008932 <__udivmoddi4+0xa6>
 8008972:	b902      	cbnz	r2, 8008976 <__udivmoddi4+0xea>
 8008974:	deff      	udf	#255	; 0xff
 8008976:	fab2 f382 	clz	r3, r2
 800897a:	2b00      	cmp	r3, #0
 800897c:	f040 808e 	bne.w	8008a9c <__udivmoddi4+0x210>
 8008980:	1a88      	subs	r0, r1, r2
 8008982:	2101      	movs	r1, #1
 8008984:	0c17      	lsrs	r7, r2, #16
 8008986:	fa1f fe82 	uxth.w	lr, r2
 800898a:	fbb0 f5f7 	udiv	r5, r0, r7
 800898e:	fb07 0015 	mls	r0, r7, r5, r0
 8008992:	0c22      	lsrs	r2, r4, #16
 8008994:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008998:	fb0e f005 	mul.w	r0, lr, r5
 800899c:	4290      	cmp	r0, r2
 800899e:	d908      	bls.n	80089b2 <__udivmoddi4+0x126>
 80089a0:	eb1c 0202 	adds.w	r2, ip, r2
 80089a4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80089a8:	d202      	bcs.n	80089b0 <__udivmoddi4+0x124>
 80089aa:	4290      	cmp	r0, r2
 80089ac:	f200 80cc 	bhi.w	8008b48 <__udivmoddi4+0x2bc>
 80089b0:	4645      	mov	r5, r8
 80089b2:	1a12      	subs	r2, r2, r0
 80089b4:	fbb2 f0f7 	udiv	r0, r2, r7
 80089b8:	fb07 2210 	mls	r2, r7, r0, r2
 80089bc:	fb0e fe00 	mul.w	lr, lr, r0
 80089c0:	b2a4      	uxth	r4, r4
 80089c2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80089c6:	45a6      	cmp	lr, r4
 80089c8:	d908      	bls.n	80089dc <__udivmoddi4+0x150>
 80089ca:	eb1c 0404 	adds.w	r4, ip, r4
 80089ce:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80089d2:	d202      	bcs.n	80089da <__udivmoddi4+0x14e>
 80089d4:	45a6      	cmp	lr, r4
 80089d6:	f200 80b4 	bhi.w	8008b42 <__udivmoddi4+0x2b6>
 80089da:	4610      	mov	r0, r2
 80089dc:	eba4 040e 	sub.w	r4, r4, lr
 80089e0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80089e4:	e7a0      	b.n	8008928 <__udivmoddi4+0x9c>
 80089e6:	f1c1 0720 	rsb	r7, r1, #32
 80089ea:	408b      	lsls	r3, r1
 80089ec:	fa22 fc07 	lsr.w	ip, r2, r7
 80089f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80089f4:	fa25 fa07 	lsr.w	sl, r5, r7
 80089f8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80089fc:	fbba f8f9 	udiv	r8, sl, r9
 8008a00:	408d      	lsls	r5, r1
 8008a02:	fa20 f307 	lsr.w	r3, r0, r7
 8008a06:	fb09 aa18 	mls	sl, r9, r8, sl
 8008a0a:	fa1f fe8c 	uxth.w	lr, ip
 8008a0e:	432b      	orrs	r3, r5
 8008a10:	fa00 f501 	lsl.w	r5, r0, r1
 8008a14:	fb08 f00e 	mul.w	r0, r8, lr
 8008a18:	0c1c      	lsrs	r4, r3, #16
 8008a1a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8008a1e:	42a0      	cmp	r0, r4
 8008a20:	fa02 f201 	lsl.w	r2, r2, r1
 8008a24:	d90b      	bls.n	8008a3e <__udivmoddi4+0x1b2>
 8008a26:	eb1c 0404 	adds.w	r4, ip, r4
 8008a2a:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008a2e:	f080 8086 	bcs.w	8008b3e <__udivmoddi4+0x2b2>
 8008a32:	42a0      	cmp	r0, r4
 8008a34:	f240 8083 	bls.w	8008b3e <__udivmoddi4+0x2b2>
 8008a38:	f1a8 0802 	sub.w	r8, r8, #2
 8008a3c:	4464      	add	r4, ip
 8008a3e:	1a24      	subs	r4, r4, r0
 8008a40:	b298      	uxth	r0, r3
 8008a42:	fbb4 f3f9 	udiv	r3, r4, r9
 8008a46:	fb09 4413 	mls	r4, r9, r3, r4
 8008a4a:	fb03 fe0e 	mul.w	lr, r3, lr
 8008a4e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8008a52:	45a6      	cmp	lr, r4
 8008a54:	d908      	bls.n	8008a68 <__udivmoddi4+0x1dc>
 8008a56:	eb1c 0404 	adds.w	r4, ip, r4
 8008a5a:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8008a5e:	d26a      	bcs.n	8008b36 <__udivmoddi4+0x2aa>
 8008a60:	45a6      	cmp	lr, r4
 8008a62:	d968      	bls.n	8008b36 <__udivmoddi4+0x2aa>
 8008a64:	3b02      	subs	r3, #2
 8008a66:	4464      	add	r4, ip
 8008a68:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8008a6c:	fba0 9302 	umull	r9, r3, r0, r2
 8008a70:	eba4 040e 	sub.w	r4, r4, lr
 8008a74:	429c      	cmp	r4, r3
 8008a76:	46c8      	mov	r8, r9
 8008a78:	469e      	mov	lr, r3
 8008a7a:	d354      	bcc.n	8008b26 <__udivmoddi4+0x29a>
 8008a7c:	d051      	beq.n	8008b22 <__udivmoddi4+0x296>
 8008a7e:	2e00      	cmp	r6, #0
 8008a80:	d067      	beq.n	8008b52 <__udivmoddi4+0x2c6>
 8008a82:	ebb5 0308 	subs.w	r3, r5, r8
 8008a86:	eb64 040e 	sbc.w	r4, r4, lr
 8008a8a:	40cb      	lsrs	r3, r1
 8008a8c:	fa04 f707 	lsl.w	r7, r4, r7
 8008a90:	431f      	orrs	r7, r3
 8008a92:	40cc      	lsrs	r4, r1
 8008a94:	e9c6 7400 	strd	r7, r4, [r6]
 8008a98:	2100      	movs	r1, #0
 8008a9a:	e74a      	b.n	8008932 <__udivmoddi4+0xa6>
 8008a9c:	fa02 fc03 	lsl.w	ip, r2, r3
 8008aa0:	f1c3 0020 	rsb	r0, r3, #32
 8008aa4:	40c1      	lsrs	r1, r0
 8008aa6:	409d      	lsls	r5, r3
 8008aa8:	fa24 f000 	lsr.w	r0, r4, r0
 8008aac:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8008ab0:	4328      	orrs	r0, r5
 8008ab2:	fbb1 f5f7 	udiv	r5, r1, r7
 8008ab6:	fb07 1115 	mls	r1, r7, r5, r1
 8008aba:	fa1f fe8c 	uxth.w	lr, ip
 8008abe:	0c02      	lsrs	r2, r0, #16
 8008ac0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008ac4:	fb05 f10e 	mul.w	r1, r5, lr
 8008ac8:	4291      	cmp	r1, r2
 8008aca:	fa04 f403 	lsl.w	r4, r4, r3
 8008ace:	d908      	bls.n	8008ae2 <__udivmoddi4+0x256>
 8008ad0:	eb1c 0202 	adds.w	r2, ip, r2
 8008ad4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8008ad8:	d22f      	bcs.n	8008b3a <__udivmoddi4+0x2ae>
 8008ada:	4291      	cmp	r1, r2
 8008adc:	d92d      	bls.n	8008b3a <__udivmoddi4+0x2ae>
 8008ade:	3d02      	subs	r5, #2
 8008ae0:	4462      	add	r2, ip
 8008ae2:	1a52      	subs	r2, r2, r1
 8008ae4:	fbb2 f1f7 	udiv	r1, r2, r7
 8008ae8:	fb07 2211 	mls	r2, r7, r1, r2
 8008aec:	b280      	uxth	r0, r0
 8008aee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8008af2:	fb01 f20e 	mul.w	r2, r1, lr
 8008af6:	4282      	cmp	r2, r0
 8008af8:	d908      	bls.n	8008b0c <__udivmoddi4+0x280>
 8008afa:	eb1c 0000 	adds.w	r0, ip, r0
 8008afe:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8008b02:	d216      	bcs.n	8008b32 <__udivmoddi4+0x2a6>
 8008b04:	4282      	cmp	r2, r0
 8008b06:	d914      	bls.n	8008b32 <__udivmoddi4+0x2a6>
 8008b08:	3902      	subs	r1, #2
 8008b0a:	4460      	add	r0, ip
 8008b0c:	1a80      	subs	r0, r0, r2
 8008b0e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8008b12:	e73a      	b.n	800898a <__udivmoddi4+0xfe>
 8008b14:	4631      	mov	r1, r6
 8008b16:	4630      	mov	r0, r6
 8008b18:	e70b      	b.n	8008932 <__udivmoddi4+0xa6>
 8008b1a:	4671      	mov	r1, lr
 8008b1c:	e6e9      	b.n	80088f2 <__udivmoddi4+0x66>
 8008b1e:	4610      	mov	r0, r2
 8008b20:	e6fe      	b.n	8008920 <__udivmoddi4+0x94>
 8008b22:	454d      	cmp	r5, r9
 8008b24:	d2ab      	bcs.n	8008a7e <__udivmoddi4+0x1f2>
 8008b26:	ebb9 0802 	subs.w	r8, r9, r2
 8008b2a:	eb63 0e0c 	sbc.w	lr, r3, ip
 8008b2e:	3801      	subs	r0, #1
 8008b30:	e7a5      	b.n	8008a7e <__udivmoddi4+0x1f2>
 8008b32:	4641      	mov	r1, r8
 8008b34:	e7ea      	b.n	8008b0c <__udivmoddi4+0x280>
 8008b36:	4603      	mov	r3, r0
 8008b38:	e796      	b.n	8008a68 <__udivmoddi4+0x1dc>
 8008b3a:	4645      	mov	r5, r8
 8008b3c:	e7d1      	b.n	8008ae2 <__udivmoddi4+0x256>
 8008b3e:	46d0      	mov	r8, sl
 8008b40:	e77d      	b.n	8008a3e <__udivmoddi4+0x1b2>
 8008b42:	4464      	add	r4, ip
 8008b44:	3802      	subs	r0, #2
 8008b46:	e749      	b.n	80089dc <__udivmoddi4+0x150>
 8008b48:	3d02      	subs	r5, #2
 8008b4a:	4462      	add	r2, ip
 8008b4c:	e731      	b.n	80089b2 <__udivmoddi4+0x126>
 8008b4e:	4608      	mov	r0, r1
 8008b50:	e70a      	b.n	8008968 <__udivmoddi4+0xdc>
 8008b52:	4631      	mov	r1, r6
 8008b54:	e6ed      	b.n	8008932 <__udivmoddi4+0xa6>
 8008b56:	bf00      	nop

08008b58 <strlen>:
 8008b58:	4603      	mov	r3, r0
 8008b5a:	461a      	mov	r2, r3
 8008b5c:	7811      	ldrb	r1, [r2, #0]
 8008b5e:	3301      	adds	r3, #1
 8008b60:	2900      	cmp	r1, #0
 8008b62:	d1fa      	bne.n	8008b5a <strlen+0x2>
 8008b64:	1a10      	subs	r0, r2, r0
 8008b66:	4770      	bx	lr

08008b68 <strncpy.isra.0>:
 8008b68:	3901      	subs	r1, #1
 8008b6a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008b6e:	b92b      	cbnz	r3, 8008b7c <strncpy.isra.0+0x14>
 8008b70:	4402      	add	r2, r0
 8008b72:	4290      	cmp	r0, r2
 8008b74:	d006      	beq.n	8008b84 <strncpy.isra.0+0x1c>
 8008b76:	f800 3b01 	strb.w	r3, [r0], #1
 8008b7a:	e7fa      	b.n	8008b72 <strncpy.isra.0+0xa>
 8008b7c:	3a01      	subs	r2, #1
 8008b7e:	f800 3b01 	strb.w	r3, [r0], #1
 8008b82:	d1f2      	bne.n	8008b6a <strncpy.isra.0+0x2>
 8008b84:	4770      	bx	lr

08008b86 <strcpy.isra.0>:
 8008b86:	3801      	subs	r0, #1
 8008b88:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008b8c:	f800 3f01 	strb.w	r3, [r0, #1]!
 8008b90:	2b00      	cmp	r3, #0
 8008b92:	d1f9      	bne.n	8008b88 <strcpy.isra.0+0x2>
 8008b94:	4770      	bx	lr
	...

08008b98 <OscServer::OscServer()>:
 8008b98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008b9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b9e:	4a24      	ldr	r2, [pc, #144]	; (8008c30 <OscServer::OscServer()+0x98>)
 8008ba0:	4604      	mov	r4, r0
 8008ba2:	e9c0 2300 	strd	r2, r3, [r0]
 8008ba6:	2300      	movs	r3, #0
 8008ba8:	2581      	movs	r5, #129	; 0x81
 8008baa:	4a22      	ldr	r2, [pc, #136]	; (8008c34 <OscServer::OscServer()+0x9c>)
 8008bac:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 8008bb0:	6010      	str	r0, [r2, #0]
 8008bb2:	4a21      	ldr	r2, [pc, #132]	; (8008c38 <OscServer::OscServer()+0xa0>)
 8008bb4:	6083      	str	r3, [r0, #8]
 8008bb6:	7303      	strb	r3, [r0, #12]
 8008bb8:	3d01      	subs	r5, #1
 8008bba:	d12c      	bne.n	8008c16 <OscServer::OscServer()+0x7e>
 8008bbc:	2281      	movs	r2, #129	; 0x81
 8008bbe:	491f      	ldr	r1, [pc, #124]	; (8008c3c <OscServer::OscServer()+0xa4>)
 8008bc0:	481d      	ldr	r0, [pc, #116]	; (8008c38 <OscServer::OscServer()+0xa0>)
 8008bc2:	f7ff ffe0 	bl	8008b86 <strcpy.isra.0>
 8008bc6:	4b1e      	ldr	r3, [pc, #120]	; (8008c40 <OscServer::OscServer()+0xa8>)
 8008bc8:	3a01      	subs	r2, #1
 8008bca:	d127      	bne.n	8008c1c <OscServer::OscServer()+0x84>
 8008bcc:	491d      	ldr	r1, [pc, #116]	; (8008c44 <OscServer::OscServer()+0xac>)
 8008bce:	481c      	ldr	r0, [pc, #112]	; (8008c40 <OscServer::OscServer()+0xa8>)
 8008bd0:	f7ff ffd9 	bl	8008b86 <strcpy.isra.0>
 8008bd4:	2380      	movs	r3, #128	; 0x80
 8008bd6:	491c      	ldr	r1, [pc, #112]	; (8008c48 <OscServer::OscServer()+0xb0>)
 8008bd8:	3b01      	subs	r3, #1
 8008bda:	d222      	bcs.n	8008c22 <OscServer::OscServer()+0x8a>
 8008bdc:	491b      	ldr	r1, [pc, #108]	; (8008c4c <OscServer::OscServer()+0xb4>)
 8008bde:	481a      	ldr	r0, [pc, #104]	; (8008c48 <OscServer::OscServer()+0xb0>)
 8008be0:	f7ff ffd1 	bl	8008b86 <strcpy.isra.0>
 8008be4:	2380      	movs	r3, #128	; 0x80
 8008be6:	2100      	movs	r1, #0
 8008be8:	4a19      	ldr	r2, [pc, #100]	; (8008c50 <OscServer::OscServer()+0xb8>)
 8008bea:	3b01      	subs	r3, #1
 8008bec:	d21c      	bcs.n	8008c28 <OscServer::OscServer()+0x90>
 8008bee:	4919      	ldr	r1, [pc, #100]	; (8008c54 <OscServer::OscServer()+0xbc>)
 8008bf0:	4817      	ldr	r0, [pc, #92]	; (8008c50 <OscServer::OscServer()+0xb8>)
 8008bf2:	f7ff ffc8 	bl	8008b86 <strcpy.isra.0>
 8008bf6:	4b18      	ldr	r3, [pc, #96]	; (8008c58 <OscServer::OscServer()+0xc0>)
 8008bf8:	211f      	movs	r1, #31
 8008bfa:	9300      	str	r3, [sp, #0]
 8008bfc:	4a17      	ldr	r2, [pc, #92]	; (8008c5c <OscServer::OscServer()+0xc4>)
 8008bfe:	4b18      	ldr	r3, [pc, #96]	; (8008c60 <OscServer::OscServer()+0xc8>)
 8008c00:	f104 000d 	add.w	r0, r4, #13
 8008c04:	f7ff fe1a 	bl	800883c <snprintf>
 8008c08:	4620      	mov	r0, r4
 8008c0a:	4b16      	ldr	r3, [pc, #88]	; (8008c64 <OscServer::OscServer()+0xcc>)
 8008c0c:	63a3      	str	r3, [r4, #56]	; 0x38
 8008c0e:	4b16      	ldr	r3, [pc, #88]	; (8008c68 <OscServer::OscServer()+0xd0>)
 8008c10:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008c12:	b003      	add	sp, #12
 8008c14:	bd30      	pop	{r4, r5, pc}
 8008c16:	f802 3b01 	strb.w	r3, [r2], #1
 8008c1a:	e7cd      	b.n	8008bb8 <OscServer::OscServer()+0x20>
 8008c1c:	f803 5b01 	strb.w	r5, [r3], #1
 8008c20:	e7d2      	b.n	8008bc8 <OscServer::OscServer()+0x30>
 8008c22:	f801 2b01 	strb.w	r2, [r1], #1
 8008c26:	e7d7      	b.n	8008bd8 <OscServer::OscServer()+0x40>
 8008c28:	f802 1b01 	strb.w	r1, [r2], #1
 8008c2c:	e7dd      	b.n	8008bea <OscServer::OscServer()+0x52>
 8008c2e:	bf00      	nop
 8008c30:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 8008c34:	20000500 	andcs	r0, r0, r0, lsl #10
 8008c38:	20000280 	andcs	r0, r0, r0, lsl #5
 8008c3c:	08011039 	stmdaeq	r1, {r0, r3, r4, r5, ip}
 8008c40:	20000180 	andcs	r0, r0, r0, lsl #3
 8008c44:	0801103f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, ip}
 8008c48:	200000fc 	strdcs	r0, [r0], -ip
 8008c4c:	08011047 	stmdaeq	r1, {r0, r1, r2, r6, ip}
 8008c50:	20000200 	andcs	r0, r0, r0, lsl #4
 8008c54:	0801104a 	stmdaeq	r1, {r1, r3, r6, ip}
 8008c58:	08010f5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, fp}
 8008c5c:	0801105d 	stmdaeq	r1, {r0, r2, r3, r4, r6, ip}
 8008c60:	08011059 	stmdaeq	r1, {r0, r3, r4, r6, ip}
 8008c64:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 8008c68:	08011066 	stmdaeq	r1, {r1, r2, r5, r6, ip}

08008c6c <OscServer::Start()>:
 8008c6c:	b530      	push	{r4, r5, lr}
 8008c6e:	4d0e      	ldr	r5, [pc, #56]	; (8008ca8 <OscServer::Start()+0x3c>)
 8008c70:	b085      	sub	sp, #20
 8008c72:	4604      	mov	r4, r0
 8008c74:	8801      	ldrh	r1, [r0, #0]
 8008c76:	6828      	ldr	r0, [r5, #0]
 8008c78:	f004 faaa 	bl	800d1d0 <Network::Begin(unsigned short)>
 8008c7c:	682b      	ldr	r3, [r5, #0]
 8008c7e:	6060      	str	r0, [r4, #4]
 8008c80:	691a      	ldr	r2, [r3, #16]
 8008c82:	4601      	mov	r1, r0
 8008c84:	6998      	ldr	r0, [r3, #24]
 8008c86:	2300      	movs	r3, #0
 8008c88:	9301      	str	r3, [sp, #4]
 8008c8a:	4b08      	ldr	r3, [pc, #32]	; (8008cac <OscServer::Start()+0x40>)
 8008c8c:	ea62 0200 	orn	r2, r2, r0
 8008c90:	9300      	str	r3, [sp, #0]
 8008c92:	a803      	add	r0, sp, #12
 8008c94:	8823      	ldrh	r3, [r4, #0]
 8008c96:	f000 fd95 	bl	80097c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008c9a:	4b05      	ldr	r3, [pc, #20]	; (8008cb0 <OscServer::Start()+0x44>)
 8008c9c:	2102      	movs	r1, #2
 8008c9e:	6818      	ldr	r0, [r3, #0]
 8008ca0:	f005 ffdc 	bl	800ec5c <LedBlink::SetMode(ledblink::Mode)>
 8008ca4:	b005      	add	sp, #20
 8008ca6:	bd30      	pop	{r4, r5, pc}
 8008ca8:	2000948c 	andcs	r9, r0, ip, lsl #9
 8008cac:	0801106c 	stmdaeq	r1, {r2, r3, r5, r6, ip}
 8008cb0:	20009ba8 	andcs	r9, r0, r8, lsr #23

08008cb4 <OscServer::SetPath(char const*)>:
 8008cb4:	b510      	push	{r4, lr}
 8008cb6:	780b      	ldrb	r3, [r1, #0]
 8008cb8:	2b2f      	cmp	r3, #47	; 0x2f
 8008cba:	d11c      	bne.n	8008cf6 <OscServer::SetPath(char const*)+0x42>
 8008cbc:	4c0e      	ldr	r4, [pc, #56]	; (8008cf8 <OscServer::SetPath(char const*)+0x44>)
 8008cbe:	227d      	movs	r2, #125	; 0x7d
 8008cc0:	4620      	mov	r0, r4
 8008cc2:	f7ff ff51 	bl	8008b68 <strncpy.isra.0>
 8008cc6:	4620      	mov	r0, r4
 8008cc8:	f7ff ff46 	bl	8008b58 <strlen>
 8008ccc:	3801      	subs	r0, #1
 8008cce:	5c23      	ldrb	r3, [r4, r0]
 8008cd0:	4909      	ldr	r1, [pc, #36]	; (8008cf8 <OscServer::SetPath(char const*)+0x44>)
 8008cd2:	2b2f      	cmp	r3, #47	; 0x2f
 8008cd4:	bf04      	itt	eq
 8008cd6:	2300      	moveq	r3, #0
 8008cd8:	5423      	strbeq	r3, [r4, r0]
 8008cda:	4c08      	ldr	r4, [pc, #32]	; (8008cfc <OscServer::SetPath(char const*)+0x48>)
 8008cdc:	4620      	mov	r0, r4
 8008cde:	f7ff ff52 	bl	8008b86 <strcpy.isra.0>
 8008ce2:	4620      	mov	r0, r4
 8008ce4:	f7ff ff38 	bl	8008b58 <strlen>
 8008ce8:	232f      	movs	r3, #47	; 0x2f
 8008cea:	5423      	strb	r3, [r4, r0]
 8008cec:	232a      	movs	r3, #42	; 0x2a
 8008cee:	4404      	add	r4, r0
 8008cf0:	7063      	strb	r3, [r4, #1]
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	70a3      	strb	r3, [r4, #2]
 8008cf6:	bd10      	pop	{r4, pc}
 8008cf8:	20000280 	andcs	r0, r0, r0, lsl #5
 8008cfc:	20000180 	andcs	r0, r0, r0, lsl #3

08008d00 <OscServer::SetPathInfo(char const*)>:
 8008d00:	780b      	ldrb	r3, [r1, #0]
 8008d02:	b510      	push	{r4, lr}
 8008d04:	2b2f      	cmp	r3, #47	; 0x2f
 8008d06:	d10d      	bne.n	8008d24 <OscServer::SetPathInfo(char const*)+0x24>
 8008d08:	4c07      	ldr	r4, [pc, #28]	; (8008d28 <OscServer::SetPathInfo(char const*)+0x28>)
 8008d0a:	227f      	movs	r2, #127	; 0x7f
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	f7ff ff2b 	bl	8008b68 <strncpy.isra.0>
 8008d12:	4620      	mov	r0, r4
 8008d14:	f7ff ff20 	bl	8008b58 <strlen>
 8008d18:	3801      	subs	r0, #1
 8008d1a:	5c23      	ldrb	r3, [r4, r0]
 8008d1c:	2b2f      	cmp	r3, #47	; 0x2f
 8008d1e:	bf04      	itt	eq
 8008d20:	2300      	moveq	r3, #0
 8008d22:	5423      	strbeq	r3, [r4, r0]
 8008d24:	bd10      	pop	{r4, pc}
 8008d26:	bf00      	nop
 8008d28:	200000fc 	strdcs	r0, [r0], -ip

08008d2c <OscServer::SetPathBlackOut(char const*)>:
 8008d2c:	780b      	ldrb	r3, [r1, #0]
 8008d2e:	b510      	push	{r4, lr}
 8008d30:	2b2f      	cmp	r3, #47	; 0x2f
 8008d32:	d10d      	bne.n	8008d50 <OscServer::SetPathBlackOut(char const*)+0x24>
 8008d34:	4c07      	ldr	r4, [pc, #28]	; (8008d54 <OscServer::SetPathBlackOut(char const*)+0x28>)
 8008d36:	227f      	movs	r2, #127	; 0x7f
 8008d38:	4620      	mov	r0, r4
 8008d3a:	f7ff ff15 	bl	8008b68 <strncpy.isra.0>
 8008d3e:	4620      	mov	r0, r4
 8008d40:	f7ff ff0a 	bl	8008b58 <strlen>
 8008d44:	3801      	subs	r0, #1
 8008d46:	5c23      	ldrb	r3, [r4, r0]
 8008d48:	2b2f      	cmp	r3, #47	; 0x2f
 8008d4a:	bf04      	itt	eq
 8008d4c:	2300      	moveq	r3, #0
 8008d4e:	5423      	strbeq	r3, [r4, r0]
 8008d50:	bd10      	pop	{r4, pc}
 8008d52:	bf00      	nop
 8008d54:	20000200 	andcs	r0, r0, r0, lsl #4

08008d58 <OscServer::GetChannel(char const*)>:
 8008d58:	b538      	push	{r3, r4, r5, lr}
 8008d5a:	480f      	ldr	r0, [pc, #60]	; (8008d98 <OscServer::GetChannel(char const*)+0x40>)
 8008d5c:	460c      	mov	r4, r1
 8008d5e:	f7ff fefb 	bl	8008b58 <strlen>
 8008d62:	1822      	adds	r2, r4, r0
 8008d64:	4614      	mov	r4, r2
 8008d66:	2000      	movs	r0, #0
 8008d68:	210a      	movs	r1, #10
 8008d6a:	3403      	adds	r4, #3
 8008d6c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8008d70:	b14b      	cbz	r3, 8008d86 <OscServer::GetChannel(char const*)+0x2e>
 8008d72:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8008d76:	2d09      	cmp	r5, #9
 8008d78:	d80b      	bhi.n	8008d92 <OscServer::GetChannel(char const*)+0x3a>
 8008d7a:	fb01 3000 	mla	r0, r1, r0, r3
 8008d7e:	4294      	cmp	r4, r2
 8008d80:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8008d84:	d1f2      	bne.n	8008d6c <OscServer::GetChannel(char const*)+0x14>
 8008d86:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8008d8a:	bfc8      	it	gt
 8008d8c:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 8008d90:	bd38      	pop	{r3, r4, r5, pc}
 8008d92:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008d96:	e7fb      	b.n	8008d90 <OscServer::GetChannel(char const*)+0x38>
 8008d98:	20000280 	andcs	r0, r0, r0, lsl #5

08008d9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 8008d9c:	2000      	movs	r0, #0
 8008d9e:	b570      	push	{r4, r5, r6, lr}
 8008da0:	3a01      	subs	r2, #1
 8008da2:	4c09      	ldr	r4, [pc, #36]	; (8008dc8 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 8008da4:	b292      	uxth	r2, r2
 8008da6:	4414      	add	r4, r2
 8008da8:	4413      	add	r3, r2
 8008daa:	3901      	subs	r1, #1
 8008dac:	429a      	cmp	r2, r3
 8008dae:	d300      	bcc.n	8008db2 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x16>
 8008db0:	bd70      	pop	{r4, r5, r6, pc}
 8008db2:	7826      	ldrb	r6, [r4, #0]
 8008db4:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8008db8:	3201      	adds	r2, #1
 8008dba:	42ae      	cmp	r6, r5
 8008dbc:	bf1c      	itt	ne
 8008dbe:	7025      	strbne	r5, [r4, #0]
 8008dc0:	2001      	movne	r0, #1
 8008dc2:	3401      	adds	r4, #1
 8008dc4:	b292      	uxth	r2, r2
 8008dc6:	e7f1      	b.n	8008dac <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 8008dc8:	20000300 	andcs	r0, r0, r0, lsl #6

08008dcc <OscServer::Run()>:
 8008dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008dce:	4d98      	ldr	r5, [pc, #608]	; (8009030 <OscServer::Run()+0x264>)
 8008dd0:	b097      	sub	sp, #92	; 0x5c
 8008dd2:	4604      	mov	r4, r0
 8008dd4:	4629      	mov	r1, r5
 8008dd6:	7900      	ldrb	r0, [r0, #4]
 8008dd8:	f10d 031a 	add.w	r3, sp, #26
 8008ddc:	aa07      	add	r2, sp, #28
 8008dde:	f003 fd0b 	bl	800c7f8 <udp_recv2>
 8008de2:	4606      	mov	r6, r0
 8008de4:	b1a8      	cbz	r0, 8008e12 <OscServer::Run()+0x46>
 8008de6:	4602      	mov	r2, r0
 8008de8:	6829      	ldr	r1, [r5, #0]
 8008dea:	a808      	add	r0, sp, #32
 8008dec:	f000 fc4d 	bl	800968a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008df0:	4990      	ldr	r1, [pc, #576]	; (8009034 <OscServer::Run()+0x268>)
 8008df2:	6828      	ldr	r0, [r5, #0]
 8008df4:	f000 fb72 	bl	80094dc <lo_pattern_match>
 8008df8:	4607      	mov	r7, r0
 8008dfa:	2800      	cmp	r0, #0
 8008dfc:	d075      	beq.n	8008eea <OscServer::Run()+0x11e>
 8008dfe:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8008e02:	b133      	cbz	r3, 8008e12 <OscServer::Run()+0x46>
 8008e04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008e06:	2e01      	cmp	r6, #1
 8008e08:	d105      	bne.n	8008e16 <OscServer::Run()+0x4a>
 8008e0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e0c:	781b      	ldrb	r3, [r3, #0]
 8008e0e:	2b62      	cmp	r3, #98	; 0x62
 8008e10:	d03e      	beq.n	8008e90 <OscServer::Run()+0xc4>
 8008e12:	b017      	add	sp, #92	; 0x5c
 8008e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e16:	2e02      	cmp	r6, #2
 8008e18:	d1fb      	bne.n	8008e12 <OscServer::Run()+0x46>
 8008e1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e1c:	781b      	ldrb	r3, [r3, #0]
 8008e1e:	2b69      	cmp	r3, #105	; 0x69
 8008e20:	d1f7      	bne.n	8008e12 <OscServer::Run()+0x46>
 8008e22:	2100      	movs	r1, #0
 8008e24:	a808      	add	r0, sp, #32
 8008e26:	f000 fc80 	bl	800972a <OscSimpleMessage::GetInt(unsigned int)>
 8008e2a:	b285      	uxth	r5, r0
 8008e2c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008e30:	d2ef      	bcs.n	8008e12 <OscServer::Run()+0x46>
 8008e32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008e34:	2b01      	cmp	r3, #1
 8008e36:	d9ec      	bls.n	8008e12 <OscServer::Run()+0x46>
 8008e38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e3a:	785b      	ldrb	r3, [r3, #1]
 8008e3c:	2b69      	cmp	r3, #105	; 0x69
 8008e3e:	d148      	bne.n	8008ed2 <OscServer::Run()+0x106>
 8008e40:	2101      	movs	r1, #1
 8008e42:	a808      	add	r0, sp, #32
 8008e44:	f000 fc71 	bl	800972a <OscSimpleMessage::GetInt(unsigned int)>
 8008e48:	3501      	adds	r5, #1
 8008e4a:	b2c0      	uxtb	r0, r0
 8008e4c:	b2ad      	uxth	r5, r5
 8008e4e:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8008e52:	2301      	movs	r3, #1
 8008e54:	462a      	mov	r2, r5
 8008e56:	4620      	mov	r0, r4
 8008e58:	a90f      	add	r1, sp, #60	; 0x3c
 8008e5a:	f7ff ff9f 	bl	8008d9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008e5e:	b910      	cbnz	r0, 8008e66 <OscServer::Run()+0x9a>
 8008e60:	7ae3      	ldrb	r3, [r4, #11]
 8008e62:	2b00      	cmp	r3, #0
 8008e64:	d0d5      	beq.n	8008e12 <OscServer::Run()+0x46>
 8008e66:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008e68:	7aa1      	ldrb	r1, [r4, #10]
 8008e6a:	6803      	ldr	r3, [r0, #0]
 8008e6c:	691e      	ldr	r6, [r3, #16]
 8008e6e:	2900      	cmp	r1, #0
 8008e70:	f040 80a3 	bne.w	8008fba <OscServer::Run()+0x1ee>
 8008e74:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008e78:	4a6f      	ldr	r2, [pc, #444]	; (8009038 <OscServer::Run()+0x26c>)
 8008e7a:	47b0      	blx	r6
 8008e7c:	7b21      	ldrb	r1, [r4, #12]
 8008e7e:	2900      	cmp	r1, #0
 8008e80:	d1c7      	bne.n	8008e12 <OscServer::Run()+0x46>
 8008e82:	2301      	movs	r3, #1
 8008e84:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008e86:	7323      	strb	r3, [r4, #12]
 8008e88:	6803      	ldr	r3, [r0, #0]
 8008e8a:	689b      	ldr	r3, [r3, #8]
 8008e8c:	4798      	blx	r3
 8008e8e:	e7c0      	b.n	8008e12 <OscServer::Run()+0x46>
 8008e90:	2200      	movs	r2, #0
 8008e92:	a908      	add	r1, sp, #32
 8008e94:	a80f      	add	r0, sp, #60	; 0x3c
 8008e96:	f000 fc5c 	bl	8009752 <OscSimpleMessage::GetBlob(unsigned int)>
 8008e9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008e9c:	b29d      	uxth	r5, r3
 8008e9e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008ea2:	d8b6      	bhi.n	8008e12 <OscServer::Run()+0x46>
 8008ea4:	462b      	mov	r3, r5
 8008ea6:	4632      	mov	r2, r6
 8008ea8:	4620      	mov	r0, r4
 8008eaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008eac:	f7ff ff76 	bl	8008d9c <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008eb0:	b910      	cbnz	r0, 8008eb8 <OscServer::Run()+0xec>
 8008eb2:	7ae3      	ldrb	r3, [r4, #11]
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	d0ac      	beq.n	8008e12 <OscServer::Run()+0x46>
 8008eb8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008eba:	6803      	ldr	r3, [r0, #0]
 8008ebc:	691e      	ldr	r6, [r3, #16]
 8008ebe:	7aa3      	ldrb	r3, [r4, #10]
 8008ec0:	b113      	cbz	r3, 8008ec8 <OscServer::Run()+0xfc>
 8008ec2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008ec6:	d178      	bne.n	8008fba <OscServer::Run()+0x1ee>
 8008ec8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008ecc:	2100      	movs	r1, #0
 8008ece:	4a5a      	ldr	r2, [pc, #360]	; (8009038 <OscServer::Run()+0x26c>)
 8008ed0:	e7d3      	b.n	8008e7a <OscServer::Run()+0xae>
 8008ed2:	2b66      	cmp	r3, #102	; 0x66
 8008ed4:	d19d      	bne.n	8008e12 <OscServer::Run()+0x46>
 8008ed6:	2101      	movs	r1, #1
 8008ed8:	a808      	add	r0, sp, #32
 8008eda:	f000 fc12 	bl	8009702 <OscSimpleMessage::GetFloat(unsigned int)>
 8008ede:	4957      	ldr	r1, [pc, #348]	; (800903c <OscServer::Run()+0x270>)
 8008ee0:	f7fe fe1a 	bl	8007b18 <__aeabi_fmul>
 8008ee4:	f7fe ff42 	bl	8007d6c <__aeabi_f2uiz>
 8008ee8:	e7ae      	b.n	8008e48 <OscServer::Run()+0x7c>
 8008eea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008eec:	6828      	ldr	r0, [r5, #0]
 8008eee:	b9b3      	cbnz	r3, 8008f1e <OscServer::Run()+0x152>
 8008ef0:	4953      	ldr	r1, [pc, #332]	; (8009040 <OscServer::Run()+0x274>)
 8008ef2:	6828      	ldr	r0, [r5, #0]
 8008ef4:	f000 faf2 	bl	80094dc <lo_pattern_match>
 8008ef8:	4606      	mov	r6, r0
 8008efa:	2800      	cmp	r0, #0
 8008efc:	d133      	bne.n	8008f66 <OscServer::Run()+0x19a>
 8008efe:	4951      	ldr	r1, [pc, #324]	; (8009044 <OscServer::Run()+0x278>)
 8008f00:	6828      	ldr	r0, [r5, #0]
 8008f02:	f000 faeb 	bl	80094dc <lo_pattern_match>
 8008f06:	2800      	cmp	r0, #0
 8008f08:	d05d      	beq.n	8008fc6 <OscServer::Run()+0x1fa>
 8008f0a:	4b4f      	ldr	r3, [pc, #316]	; (8009048 <OscServer::Run()+0x27c>)
 8008f0c:	9a07      	ldr	r2, [sp, #28]
 8008f0e:	9300      	str	r3, [sp, #0]
 8008f10:	6861      	ldr	r1, [r4, #4]
 8008f12:	8863      	ldrh	r3, [r4, #2]
 8008f14:	9601      	str	r6, [sp, #4]
 8008f16:	a80f      	add	r0, sp, #60	; 0x3c
 8008f18:	f000 fc54 	bl	80097c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008f1c:	e779      	b.n	8008e12 <OscServer::Run()+0x46>
 8008f1e:	494b      	ldr	r1, [pc, #300]	; (800904c <OscServer::Run()+0x280>)
 8008f20:	f000 fadc 	bl	80094dc <lo_pattern_match>
 8008f24:	2800      	cmp	r0, #0
 8008f26:	d0e3      	beq.n	8008ef0 <OscServer::Run()+0x124>
 8008f28:	4632      	mov	r2, r6
 8008f2a:	6829      	ldr	r1, [r5, #0]
 8008f2c:	a80f      	add	r0, sp, #60	; 0x3c
 8008f2e:	f000 fbac 	bl	800968a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008f32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008f34:	2b00      	cmp	r3, #0
 8008f36:	f43f af6c 	beq.w	8008e12 <OscServer::Run()+0x46>
 8008f3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008f3c:	781b      	ldrb	r3, [r3, #0]
 8008f3e:	2b66      	cmp	r3, #102	; 0x66
 8008f40:	f47f af67 	bne.w	8008e12 <OscServer::Run()+0x46>
 8008f44:	4639      	mov	r1, r7
 8008f46:	a80f      	add	r0, sp, #60	; 0x3c
 8008f48:	f000 fbdb 	bl	8009702 <OscSimpleMessage::GetFloat(unsigned int)>
 8008f4c:	2100      	movs	r1, #0
 8008f4e:	f7fe fedb 	bl	8007d08 <__aeabi_fcmpeq>
 8008f52:	4603      	mov	r3, r0
 8008f54:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008f56:	b91b      	cbnz	r3, 8008f60 <OscServer::Run()+0x194>
 8008f58:	6803      	ldr	r3, [r0, #0]
 8008f5a:	689b      	ldr	r3, [r3, #8]
 8008f5c:	4798      	blx	r3
 8008f5e:	e758      	b.n	8008e12 <OscServer::Run()+0x46>
 8008f60:	6803      	ldr	r3, [r0, #0]
 8008f62:	68db      	ldr	r3, [r3, #12]
 8008f64:	e7fa      	b.n	8008f5c <OscServer::Run()+0x190>
 8008f66:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	f43f af51 	beq.w	8008e12 <OscServer::Run()+0x46>
 8008f70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008f72:	2b01      	cmp	r3, #1
 8008f74:	f47f af4d 	bne.w	8008e12 <OscServer::Run()+0x46>
 8008f78:	6829      	ldr	r1, [r5, #0]
 8008f7a:	4620      	mov	r0, r4
 8008f7c:	f7ff feec 	bl	8008d58 <OscServer::GetChannel(char const*)>
 8008f80:	b285      	uxth	r5, r0
 8008f82:	1e6b      	subs	r3, r5, #1
 8008f84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008f88:	f4bf af43 	bcs.w	8008e12 <OscServer::Run()+0x46>
 8008f8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f8e:	781b      	ldrb	r3, [r3, #0]
 8008f90:	2b69      	cmp	r3, #105	; 0x69
 8008f92:	d105      	bne.n	8008fa0 <OscServer::Run()+0x1d4>
 8008f94:	2100      	movs	r1, #0
 8008f96:	a808      	add	r0, sp, #32
 8008f98:	f000 fbc7 	bl	800972a <OscSimpleMessage::GetInt(unsigned int)>
 8008f9c:	b2c0      	uxtb	r0, r0
 8008f9e:	e756      	b.n	8008e4e <OscServer::Run()+0x82>
 8008fa0:	2b66      	cmp	r3, #102	; 0x66
 8008fa2:	f47f af36 	bne.w	8008e12 <OscServer::Run()+0x46>
 8008fa6:	2100      	movs	r1, #0
 8008fa8:	a808      	add	r0, sp, #32
 8008faa:	f000 fbaa 	bl	8009702 <OscSimpleMessage::GetFloat(unsigned int)>
 8008fae:	4923      	ldr	r1, [pc, #140]	; (800903c <OscServer::Run()+0x270>)
 8008fb0:	f7fe fdb2 	bl	8007b18 <__aeabi_fmul>
 8008fb4:	f7fe feda 	bl	8007d6c <__aeabi_f2uiz>
 8008fb8:	e7f0      	b.n	8008f9c <OscServer::Run()+0x1d0>
 8008fba:	8923      	ldrh	r3, [r4, #8]
 8008fbc:	42ab      	cmp	r3, r5
 8008fbe:	bf38      	it	cc
 8008fc0:	462b      	movcc	r3, r5
 8008fc2:	8123      	strh	r3, [r4, #8]
 8008fc4:	e782      	b.n	8008ecc <OscServer::Run()+0x100>
 8008fc6:	4922      	ldr	r1, [pc, #136]	; (8009050 <OscServer::Run()+0x284>)
 8008fc8:	6828      	ldr	r0, [r5, #0]
 8008fca:	f000 fa87 	bl	80094dc <lo_pattern_match>
 8008fce:	2800      	cmp	r0, #0
 8008fd0:	f43f af1f 	beq.w	8008e12 <OscServer::Run()+0x46>
 8008fd4:	f104 030d 	add.w	r3, r4, #13
 8008fd8:	4d1e      	ldr	r5, [pc, #120]	; (8009054 <OscServer::Run()+0x288>)
 8008fda:	9302      	str	r3, [sp, #8]
 8008fdc:	4b1e      	ldr	r3, [pc, #120]	; (8009058 <OscServer::Run()+0x28c>)
 8008fde:	9a07      	ldr	r2, [sp, #28]
 8008fe0:	6861      	ldr	r1, [r4, #4]
 8008fe2:	9300      	str	r3, [sp, #0]
 8008fe4:	9501      	str	r5, [sp, #4]
 8008fe6:	8863      	ldrh	r3, [r4, #2]
 8008fe8:	a805      	add	r0, sp, #20
 8008fea:	f000 fc0f 	bl	800980c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8008fee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008ff0:	9a07      	ldr	r2, [sp, #28]
 8008ff2:	e9cd 5301 	strd	r5, r3, [sp, #4]
 8008ff6:	4b19      	ldr	r3, [pc, #100]	; (800905c <OscServer::Run()+0x290>)
 8008ff8:	6861      	ldr	r1, [r4, #4]
 8008ffa:	9300      	str	r3, [sp, #0]
 8008ffc:	a806      	add	r0, sp, #24
 8008ffe:	8863      	ldrh	r3, [r4, #2]
 8009000:	f000 fc04 	bl	800980c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009004:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009006:	9a07      	ldr	r2, [sp, #28]
 8009008:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800900c:	4b14      	ldr	r3, [pc, #80]	; (8009060 <OscServer::Run()+0x294>)
 800900e:	6861      	ldr	r1, [r4, #4]
 8009010:	9300      	str	r3, [sp, #0]
 8009012:	a80f      	add	r0, sp, #60	; 0x3c
 8009014:	8863      	ldrh	r3, [r4, #2]
 8009016:	f000 fbf9 	bl	800980c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800901a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800901c:	2800      	cmp	r0, #0
 800901e:	f43f aef8 	beq.w	8008e12 <OscServer::Run()+0x46>
 8009022:	6803      	ldr	r3, [r0, #0]
 8009024:	9a07      	ldr	r2, [sp, #28]
 8009026:	691d      	ldr	r5, [r3, #16]
 8009028:	6861      	ldr	r1, [r4, #4]
 800902a:	8863      	ldrh	r3, [r4, #2]
 800902c:	47a8      	blx	r5
 800902e:	e6f0      	b.n	8008e12 <OscServer::Run()+0x46>
 8009030:	2000017c 	andcs	r0, r0, ip, ror r1
 8009034:	20000280 	andcs	r0, r0, r0, lsl #5
 8009038:	20000300 	andcs	r0, r0, r0, lsl #6
 800903c:	437f0000 	cmnmi	pc, #0
 8009040:	20000180 	andcs	r0, r0, r0, lsl #3
 8009044:	0801106c 	stmdaeq	r1, {r2, r3, r5, r6, ip}
 8009048:	08011072 	stmdaeq	r1, {r1, r4, r5, r6, ip}
 800904c:	20000200 	andcs	r0, r0, r0, lsl #4
 8009050:	200000fc 	strdcs	r0, [r0], -ip
 8009054:	08011064 	stmdaeq	r1, {r2, r5, r6, ip}
 8009058:	08011078 	stmdaeq	r1, {r3, r4, r5, r6, ip}
 800905c:	08011081 	stmdaeq	r1, {r0, r7, ip}
 8009060:	0801108d 	stmdaeq	r1, {r0, r2, r3, r7, ip}

08009064 <OscServer::Print()>:
 8009064:	b510      	push	{r4, lr}
 8009066:	4604      	mov	r4, r0
 8009068:	480f      	ldr	r0, [pc, #60]	; (80090a8 <OscServer::Print()+0x44>)
 800906a:	f7ff fbd7 	bl	800881c <printf>
 800906e:	8821      	ldrh	r1, [r4, #0]
 8009070:	480e      	ldr	r0, [pc, #56]	; (80090ac <OscServer::Print()+0x48>)
 8009072:	f7ff fbd3 	bl	800881c <printf>
 8009076:	8861      	ldrh	r1, [r4, #2]
 8009078:	480d      	ldr	r0, [pc, #52]	; (80090b0 <OscServer::Print()+0x4c>)
 800907a:	f7ff fbcf 	bl	800881c <printf>
 800907e:	4a0d      	ldr	r2, [pc, #52]	; (80090b4 <OscServer::Print()+0x50>)
 8009080:	490d      	ldr	r1, [pc, #52]	; (80090b8 <OscServer::Print()+0x54>)
 8009082:	480e      	ldr	r0, [pc, #56]	; (80090bc <OscServer::Print()+0x58>)
 8009084:	f7ff fbca 	bl	800881c <printf>
 8009088:	490d      	ldr	r1, [pc, #52]	; (80090c0 <OscServer::Print()+0x5c>)
 800908a:	480e      	ldr	r0, [pc, #56]	; (80090c4 <OscServer::Print()+0x60>)
 800908c:	f7ff fbc6 	bl	800881c <printf>
 8009090:	7aa1      	ldrb	r1, [r4, #10]
 8009092:	4a0d      	ldr	r2, [pc, #52]	; (80090c8 <OscServer::Print()+0x64>)
 8009094:	4b0d      	ldr	r3, [pc, #52]	; (80090cc <OscServer::Print()+0x68>)
 8009096:	480e      	ldr	r0, [pc, #56]	; (80090d0 <OscServer::Print()+0x6c>)
 8009098:	2900      	cmp	r1, #0
 800909a:	bf14      	ite	ne
 800909c:	4611      	movne	r1, r2
 800909e:	4619      	moveq	r1, r3
 80090a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80090a4:	f7ff bbba 	b.w	800881c <printf>
 80090a8:	0801109e 	stmdaeq	r1, {r1, r2, r3, r4, r7, ip}
 80090ac:	080110aa 	stmdaeq	r1, {r1, r3, r5, r7, ip}
 80090b0:	080110c6 	stmdaeq	r1, {r1, r2, r6, r7, ip}
 80090b4:	20000180 	andcs	r0, r0, r0, lsl #3
 80090b8:	20000280 	andcs	r0, r0, r0, lsl #5
 80090bc:	080110e2 	stmdaeq	r1, {r1, r5, r6, r7, ip}
 80090c0:	20000200 	andcs	r0, r0, r0, lsl #4
 80090c4:	08011104 	stmdaeq	r1, {r2, r8, ip}
 80090c8:	08011097 	stmdaeq	r1, {r0, r1, r2, r4, r7, ip}
 80090cc:	0801109b 	stmdaeq	r1, {r0, r1, r3, r4, r7, ip}
 80090d0:	08011122 	stmdaeq	r1, {r1, r5, r8, ip}

080090d4 <strncpy.constprop.0.isra.0>:
 80090d4:	227f      	movs	r2, #127	; 0x7f
 80090d6:	1e4b      	subs	r3, r1, #1
 80090d8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80090dc:	b909      	cbnz	r1, 80090e2 <strncpy.constprop.0.isra.0+0xe>
 80090de:	f005 bf5d 	b.w	800ef9c <memset>
 80090e2:	3a01      	subs	r2, #1
 80090e4:	f800 1b01 	strb.w	r1, [r0], #1
 80090e8:	d1f6      	bne.n	80090d8 <strncpy.constprop.0.isra.0+0x4>
 80090ea:	4770      	bx	lr

080090ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 80090ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80090ee:	88c6      	ldrh	r6, [r0, #6]
 80090f0:	8885      	ldrh	r5, [r0, #4]
 80090f2:	42ae      	cmp	r6, r5
 80090f4:	d216      	bcs.n	8009124 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 80090f6:	4604      	mov	r4, r0
 80090f8:	6800      	ldr	r0, [r0, #0]
 80090fa:	1bad      	subs	r5, r5, r6
 80090fc:	4430      	add	r0, r6
 80090fe:	7a26      	ldrb	r6, [r4, #8]
 8009100:	b923      	cbnz	r3, 800910c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009102:	b926      	cbnz	r6, 800910e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009104:	9200      	str	r2, [sp, #0]
 8009106:	460b      	mov	r3, r1
 8009108:	4a09      	ldr	r2, [pc, #36]	; (8009130 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800910a:	e003      	b.n	8009114 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800910c:	b166      	cbz	r6, 8009128 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800910e:	460b      	mov	r3, r1
 8009110:	9200      	str	r2, [sp, #0]
 8009112:	4a08      	ldr	r2, [pc, #32]	; (8009134 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009114:	4629      	mov	r1, r5
 8009116:	f7ff fb91 	bl	800883c <snprintf>
 800911a:	4285      	cmp	r5, r0
 800911c:	bfa2      	ittt	ge
 800911e:	88e3      	ldrhge	r3, [r4, #6]
 8009120:	181b      	addge	r3, r3, r0
 8009122:	80e3      	strhge	r3, [r4, #6]
 8009124:	b002      	add	sp, #8
 8009126:	bd70      	pop	{r4, r5, r6, pc}
 8009128:	9200      	str	r2, [sp, #0]
 800912a:	460b      	mov	r3, r1
 800912c:	4a02      	ldr	r2, [pc, #8]	; (8009138 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800912e:	e7f1      	b.n	8009114 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009130:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 8009134:	08011180 	stmdaeq	r1, {r7, r8, ip}
 8009138:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}

0800913c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800913c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800913e:	88c6      	ldrh	r6, [r0, #6]
 8009140:	8885      	ldrh	r5, [r0, #4]
 8009142:	42ae      	cmp	r6, r5
 8009144:	d216      	bcs.n	8009174 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 8009146:	4604      	mov	r4, r0
 8009148:	6800      	ldr	r0, [r0, #0]
 800914a:	1bad      	subs	r5, r5, r6
 800914c:	4430      	add	r0, r6
 800914e:	7a26      	ldrb	r6, [r4, #8]
 8009150:	b923      	cbnz	r3, 800915c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 8009152:	b926      	cbnz	r6, 800915e <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 8009154:	9200      	str	r2, [sp, #0]
 8009156:	460b      	mov	r3, r1
 8009158:	4a09      	ldr	r2, [pc, #36]	; (8009180 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800915a:	e003      	b.n	8009164 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800915c:	b166      	cbz	r6, 8009178 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800915e:	460b      	mov	r3, r1
 8009160:	9200      	str	r2, [sp, #0]
 8009162:	4a08      	ldr	r2, [pc, #32]	; (8009184 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009164:	4629      	mov	r1, r5
 8009166:	f7ff fb69 	bl	800883c <snprintf>
 800916a:	4285      	cmp	r5, r0
 800916c:	bfa2      	ittt	ge
 800916e:	88e3      	ldrhge	r3, [r4, #6]
 8009170:	181b      	addge	r3, r3, r0
 8009172:	80e3      	strhge	r3, [r4, #6]
 8009174:	b002      	add	sp, #8
 8009176:	bd70      	pop	{r4, r5, r6, pc}
 8009178:	9200      	str	r2, [sp, #0]
 800917a:	460b      	mov	r3, r1
 800917c:	4a02      	ldr	r2, [pc, #8]	; (8009188 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800917e:	e7f1      	b.n	8009164 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 8009180:	0801119c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip}
 8009184:	08011191 	stmdaeq	r1, {r0, r4, r7, r8, ip}
 8009188:	0801119d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, ip}

0800918c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 800918c:	b510      	push	{r4, lr}
 800918e:	4604      	mov	r4, r0
 8009190:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009194:	f840 1b04 	str.w	r1, [r0], #4
 8009198:	2100      	movs	r1, #0
 800919a:	f005 feff 	bl	800ef9c <memset>
 800919e:	4b02      	ldr	r3, [pc, #8]	; (80091a8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 80091a0:	4620      	mov	r0, r4
 80091a2:	60a3      	str	r3, [r4, #8]
 80091a4:	bd10      	pop	{r4, pc}
 80091a6:	bf00      	nop
 80091a8:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

080091ac <OSCServerParams::Load()>:
 80091ac:	b508      	push	{r3, lr}
 80091ae:	2300      	movs	r3, #0
 80091b0:	4601      	mov	r1, r0
 80091b2:	6043      	str	r3, [r0, #4]
 80091b4:	6800      	ldr	r0, [r0, #0]
 80091b6:	b120      	cbz	r0, 80091c2 <OSCServerParams::Load()+0x16>
 80091b8:	6803      	ldr	r3, [r0, #0]
 80091ba:	3104      	adds	r1, #4
 80091bc:	68db      	ldr	r3, [r3, #12]
 80091be:	4798      	blx	r3
 80091c0:	2001      	movs	r0, #1
 80091c2:	bd08      	pop	{r3, pc}

080091c4 <OSCServerParams::Load(char const*, unsigned int)>:
 80091c4:	6803      	ldr	r3, [r0, #0]
 80091c6:	b1d3      	cbz	r3, 80091fe <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 80091c8:	2300      	movs	r3, #0
 80091ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091cc:	460d      	mov	r5, r1
 80091ce:	4616      	mov	r6, r2
 80091d0:	4604      	mov	r4, r0
 80091d2:	6043      	str	r3, [r0, #4]
 80091d4:	4602      	mov	r2, r0
 80091d6:	490a      	ldr	r1, [pc, #40]	; (8009200 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 80091d8:	4668      	mov	r0, sp
 80091da:	f005 f8f1 	bl	800e3c0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80091de:	4632      	mov	r2, r6
 80091e0:	4629      	mov	r1, r5
 80091e2:	4668      	mov	r0, sp
 80091e4:	f005 f8f0 	bl	800e3c8 <ReadConfigFile::Read(char const*, unsigned int)>
 80091e8:	4621      	mov	r1, r4
 80091ea:	f851 0b04 	ldr.w	r0, [r1], #4
 80091ee:	6803      	ldr	r3, [r0, #0]
 80091f0:	689b      	ldr	r3, [r3, #8]
 80091f2:	4798      	blx	r3
 80091f4:	4668      	mov	r0, sp
 80091f6:	f005 f8e6 	bl	800e3c6 <ReadConfigFile::~ReadConfigFile()>
 80091fa:	b002      	add	sp, #8
 80091fc:	bd70      	pop	{r4, r5, r6, pc}
 80091fe:	4770      	bx	lr
 8009200:	080092fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, ip, pc}

08009204 <OSCServerParams::callbackFunction(char const*)>:
 8009204:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009206:	460d      	mov	r5, r1
 8009208:	4604      	mov	r4, r0
 800920a:	4937      	ldr	r1, [pc, #220]	; (80092e8 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800920c:	4628      	mov	r0, r5
 800920e:	f10d 0202 	add.w	r2, sp, #2
 8009212:	f005 f967 	bl	800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009216:	b980      	cbnz	r0, 800923a <OSCServerParams::callbackFunction(char const*)+0x36>
 8009218:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800921c:	6863      	ldr	r3, [r4, #4]
 800921e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009222:	bf33      	iteet	cc
 8009224:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 8009228:	8122      	strhcs	r2, [r4, #8]
 800922a:	f043 0301 	orrcs.w	r3, r3, #1
 800922e:	8122      	strhcc	r2, [r4, #8]
 8009230:	bf38      	it	cc
 8009232:	f023 0301 	biccc.w	r3, r3, #1
 8009236:	6063      	str	r3, [r4, #4]
 8009238:	e028      	b.n	800928c <OSCServerParams::callbackFunction(char const*)+0x88>
 800923a:	4628      	mov	r0, r5
 800923c:	492b      	ldr	r1, [pc, #172]	; (80092ec <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800923e:	f10d 0202 	add.w	r2, sp, #2
 8009242:	f005 f94f 	bl	800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009246:	b978      	cbnz	r0, 8009268 <OSCServerParams::callbackFunction(char const*)+0x64>
 8009248:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800924c:	6863      	ldr	r3, [r4, #4]
 800924e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009252:	bf33      	iteet	cc
 8009254:	f242 3228 	movwcc	r2, #9000	; 0x2328
 8009258:	8162      	strhcs	r2, [r4, #10]
 800925a:	f043 0302 	orrcs.w	r3, r3, #2
 800925e:	8162      	strhcc	r2, [r4, #10]
 8009260:	bf38      	it	cc
 8009262:	f023 0302 	biccc.w	r3, r3, #2
 8009266:	e7e6      	b.n	8009236 <OSCServerParams::callbackFunction(char const*)+0x32>
 8009268:	4628      	mov	r0, r5
 800926a:	4921      	ldr	r1, [pc, #132]	; (80092f0 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800926c:	f10d 0201 	add.w	r2, sp, #1
 8009270:	f005 f956 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009274:	b978      	cbnz	r0, 8009296 <OSCServerParams::callbackFunction(char const*)+0x92>
 8009276:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800927a:	6863      	ldr	r3, [r4, #4]
 800927c:	b142      	cbz	r2, 8009290 <OSCServerParams::callbackFunction(char const*)+0x8c>
 800927e:	f043 0308 	orr.w	r3, r3, #8
 8009282:	3a00      	subs	r2, #0
 8009284:	bf18      	it	ne
 8009286:	2201      	movne	r2, #1
 8009288:	6063      	str	r3, [r4, #4]
 800928a:	7362      	strb	r2, [r4, #13]
 800928c:	b002      	add	sp, #8
 800928e:	bd70      	pop	{r4, r5, r6, pc}
 8009290:	f023 0308 	bic.w	r3, r3, #8
 8009294:	e7f5      	b.n	8009282 <OSCServerParams::callbackFunction(char const*)+0x7e>
 8009296:	267f      	movs	r6, #127	; 0x7f
 8009298:	4628      	mov	r0, r5
 800929a:	4916      	ldr	r1, [pc, #88]	; (80092f4 <OSCServerParams::callbackFunction(char const*)+0xf0>)
 800929c:	ab01      	add	r3, sp, #4
 800929e:	f104 020e 	add.w	r2, r4, #14
 80092a2:	9601      	str	r6, [sp, #4]
 80092a4:	f005 f8c4 	bl	800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092a8:	b918      	cbnz	r0, 80092b2 <OSCServerParams::callbackFunction(char const*)+0xae>
 80092aa:	6863      	ldr	r3, [r4, #4]
 80092ac:	f043 0304 	orr.w	r3, r3, #4
 80092b0:	e7c1      	b.n	8009236 <OSCServerParams::callbackFunction(char const*)+0x32>
 80092b2:	4628      	mov	r0, r5
 80092b4:	4910      	ldr	r1, [pc, #64]	; (80092f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 80092b6:	ab01      	add	r3, sp, #4
 80092b8:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 80092bc:	9601      	str	r6, [sp, #4]
 80092be:	f005 f8b7 	bl	800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092c2:	b918      	cbnz	r0, 80092cc <OSCServerParams::callbackFunction(char const*)+0xc8>
 80092c4:	6863      	ldr	r3, [r4, #4]
 80092c6:	f043 0320 	orr.w	r3, r3, #32
 80092ca:	e7b4      	b.n	8009236 <OSCServerParams::callbackFunction(char const*)+0x32>
 80092cc:	4628      	mov	r0, r5
 80092ce:	490a      	ldr	r1, [pc, #40]	; (80092f8 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 80092d0:	ab01      	add	r3, sp, #4
 80092d2:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 80092d6:	9601      	str	r6, [sp, #4]
 80092d8:	f005 f8aa 	bl	800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092dc:	2800      	cmp	r0, #0
 80092de:	d1d5      	bne.n	800928c <OSCServerParams::callbackFunction(char const*)+0x88>
 80092e0:	6863      	ldr	r3, [r4, #4]
 80092e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80092e6:	e7a6      	b.n	8009236 <OSCServerParams::callbackFunction(char const*)+0x32>
 80092e8:	080111de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, ip}
 80092ec:	080111ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, ip}
 80092f0:	080111a4 	stmdaeq	r1, {r2, r5, r7, r8, ip}
 80092f4:	080111c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, ip}
 80092f8:	080111d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, ip}

080092fc <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 80092fc:	f7ff bf82 	b.w	8009204 <OSCServerParams::callbackFunction(char const*)>

08009300 <OSCServerParams::Set(OscServer*)>:
 8009300:	b538      	push	{r3, r4, r5, lr}
 8009302:	460d      	mov	r5, r1
 8009304:	6843      	ldr	r3, [r0, #4]
 8009306:	4604      	mov	r4, r0
 8009308:	07d9      	lsls	r1, r3, #31
 800930a:	bf44      	itt	mi
 800930c:	8902      	ldrhmi	r2, [r0, #8]
 800930e:	802a      	strhmi	r2, [r5, #0]
 8009310:	079a      	lsls	r2, r3, #30
 8009312:	bf44      	itt	mi
 8009314:	8942      	ldrhmi	r2, [r0, #10]
 8009316:	806a      	strhmi	r2, [r5, #2]
 8009318:	0758      	lsls	r0, r3, #29
 800931a:	d504      	bpl.n	8009326 <OSCServerParams::Set(OscServer*)+0x26>
 800931c:	4628      	mov	r0, r5
 800931e:	f104 010e 	add.w	r1, r4, #14
 8009322:	f7ff fcc7 	bl	8008cb4 <OscServer::SetPath(char const*)>
 8009326:	6863      	ldr	r3, [r4, #4]
 8009328:	0699      	lsls	r1, r3, #26
 800932a:	d504      	bpl.n	8009336 <OSCServerParams::Set(OscServer*)+0x36>
 800932c:	4628      	mov	r0, r5
 800932e:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 8009332:	f7ff fce5 	bl	8008d00 <OscServer::SetPathInfo(char const*)>
 8009336:	6863      	ldr	r3, [r4, #4]
 8009338:	065a      	lsls	r2, r3, #25
 800933a:	d504      	bpl.n	8009346 <OSCServerParams::Set(OscServer*)+0x46>
 800933c:	4628      	mov	r0, r5
 800933e:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 8009342:	f7ff fcf3 	bl	8008d2c <OscServer::SetPathBlackOut(char const*)>
 8009346:	6863      	ldr	r3, [r4, #4]
 8009348:	071b      	lsls	r3, r3, #28
 800934a:	bf44      	itt	mi
 800934c:	7b63      	ldrbmi	r3, [r4, #13]
 800934e:	72ab      	strbmi	r3, [r5, #10]
 8009350:	bd38      	pop	{r3, r4, r5, pc}
	...

08009354 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 8009354:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009356:	4604      	mov	r4, r0
 8009358:	4615      	mov	r5, r2
 800935a:	461e      	mov	r6, r3
 800935c:	b087      	sub	sp, #28
 800935e:	3004      	adds	r0, #4
 8009360:	2900      	cmp	r1, #0
 8009362:	d061      	beq.n	8009428 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd4>
 8009364:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009368:	f005 fe01 	bl	800ef6e <memmove>
 800936c:	4633      	mov	r3, r6
 800936e:	462a      	mov	r2, r5
 8009370:	4946      	ldr	r1, [pc, #280]	; (800948c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 8009372:	a803      	add	r0, sp, #12
 8009374:	f004 ff84 	bl	800e280 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009378:	6863      	ldr	r3, [r4, #4]
 800937a:	f104 070e 	add.w	r7, r4, #14
 800937e:	075e      	lsls	r6, r3, #29
 8009380:	d403      	bmi.n	800938a <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 8009382:	4638      	mov	r0, r7
 8009384:	4942      	ldr	r1, [pc, #264]	; (8009490 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 8009386:	f7ff fea5 	bl	80090d4 <strncpy.constprop.0.isra.0>
 800938a:	6863      	ldr	r3, [r4, #4]
 800938c:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 8009390:	069d      	lsls	r5, r3, #26
 8009392:	d403      	bmi.n	800939c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 8009394:	4630      	mov	r0, r6
 8009396:	493f      	ldr	r1, [pc, #252]	; (8009494 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 8009398:	f7ff fe9c 	bl	80090d4 <strncpy.constprop.0.isra.0>
 800939c:	6863      	ldr	r3, [r4, #4]
 800939e:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 80093a2:	0658      	lsls	r0, r3, #25
 80093a4:	d403      	bmi.n	80093ae <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 80093a6:	4628      	mov	r0, r5
 80093a8:	493b      	ldr	r1, [pc, #236]	; (8009498 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 80093aa:	f7ff fe93 	bl	80090d4 <strncpy.constprop.0.isra.0>
 80093ae:	6863      	ldr	r3, [r4, #4]
 80093b0:	8922      	ldrh	r2, [r4, #8]
 80093b2:	493a      	ldr	r1, [pc, #232]	; (800949c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 80093b4:	f003 0301 	and.w	r3, r3, #1
 80093b8:	a803      	add	r0, sp, #12
 80093ba:	f7ff fe97 	bl	80090ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80093be:	6863      	ldr	r3, [r4, #4]
 80093c0:	8962      	ldrh	r2, [r4, #10]
 80093c2:	4937      	ldr	r1, [pc, #220]	; (80094a0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 80093c4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80093c8:	a803      	add	r0, sp, #12
 80093ca:	f7ff fe8f 	bl	80090ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80093ce:	6863      	ldr	r3, [r4, #4]
 80093d0:	463a      	mov	r2, r7
 80093d2:	4934      	ldr	r1, [pc, #208]	; (80094a4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 80093d4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80093d8:	a803      	add	r0, sp, #12
 80093da:	f7ff feaf 	bl	800913c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80093de:	6863      	ldr	r3, [r4, #4]
 80093e0:	4632      	mov	r2, r6
 80093e2:	4931      	ldr	r1, [pc, #196]	; (80094a8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 80093e4:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80093e8:	a803      	add	r0, sp, #12
 80093ea:	f7ff fea7 	bl	800913c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80093ee:	6863      	ldr	r3, [r4, #4]
 80093f0:	462a      	mov	r2, r5
 80093f2:	492e      	ldr	r1, [pc, #184]	; (80094ac <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 80093f4:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80093f8:	a803      	add	r0, sp, #12
 80093fa:	f7ff fe9f 	bl	800913c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 80093fe:	7b63      	ldrb	r3, [r4, #13]
 8009400:	6861      	ldr	r1, [r4, #4]
 8009402:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009406:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800940a:	42a2      	cmp	r2, r4
 800940c:	d221      	bcs.n	8009452 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 800940e:	9803      	ldr	r0, [sp, #12]
 8009410:	0709      	lsls	r1, r1, #28
 8009412:	4410      	add	r0, r2
 8009414:	eba4 0402 	sub.w	r4, r4, r2
 8009418:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800941c:	d40b      	bmi.n	8009436 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800941e:	b95a      	cbnz	r2, 8009438 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe4>
 8009420:	9300      	str	r3, [sp, #0]
 8009422:	4a23      	ldr	r2, [pc, #140]	; (80094b0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 8009424:	4b23      	ldr	r3, [pc, #140]	; (80094b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009426:	e00a      	b.n	800943e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 8009428:	6823      	ldr	r3, [r4, #0]
 800942a:	4601      	mov	r1, r0
 800942c:	681a      	ldr	r2, [r3, #0]
 800942e:	4618      	mov	r0, r3
 8009430:	68d2      	ldr	r2, [r2, #12]
 8009432:	4790      	blx	r2
 8009434:	e79a      	b.n	800936c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 8009436:	b32a      	cbz	r2, 8009484 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x130>
 8009438:	9300      	str	r3, [sp, #0]
 800943a:	4a1f      	ldr	r2, [pc, #124]	; (80094b8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800943c:	4b1d      	ldr	r3, [pc, #116]	; (80094b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800943e:	4621      	mov	r1, r4
 8009440:	f7ff f9fc 	bl	800883c <snprintf>
 8009444:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009448:	4284      	cmp	r4, r0
 800944a:	bfa4      	itt	ge
 800944c:	181b      	addge	r3, r3, r0
 800944e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8009452:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009456:	b17b      	cbz	r3, 8009478 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x124>
 8009458:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800945c:	9b03      	ldr	r3, [sp, #12]
 800945e:	4413      	add	r3, r2
 8009460:	227d      	movs	r2, #125	; 0x7d
 8009462:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009466:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800946a:	9903      	ldr	r1, [sp, #12]
 800946c:	54ca      	strb	r2, [r1, r3]
 800946e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009472:	3301      	adds	r3, #1
 8009474:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009478:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800947c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800947e:	601a      	str	r2, [r3, #0]
 8009480:	b007      	add	sp, #28
 8009482:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009484:	9300      	str	r3, [sp, #0]
 8009486:	4a0d      	ldr	r2, [pc, #52]	; (80094bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 8009488:	4b0a      	ldr	r3, [pc, #40]	; (80094b4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800948a:	e7d8      	b.n	800943e <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xea>
 800948c:	080111cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip}
 8009490:	20000280 	andcs	r0, r0, r0, lsl #5
 8009494:	200000fc 	strdcs	r0, [r0], -ip
 8009498:	20000200 	andcs	r0, r0, r0, lsl #4
 800949c:	080111de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, ip}
 80094a0:	080111ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, ip}
 80094a4:	080111c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, ip}
 80094a8:	080111d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, ip}
 80094ac:	080111b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, ip}
 80094b0:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 80094b4:	080111a4 	stmdaeq	r1, {r2, r5, r7, r8, ip}
 80094b8:	08011180 	stmdaeq	r1, {r7, r8, ip}
 80094bc:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}

080094c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 80094c0:	b513      	push	{r0, r1, r4, lr}
 80094c2:	6804      	ldr	r4, [r0, #0]
 80094c4:	b914      	cbnz	r4, 80094cc <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80094c6:	601c      	str	r4, [r3, #0]
 80094c8:	b002      	add	sp, #8
 80094ca:	bd10      	pop	{r4, pc}
 80094cc:	9300      	str	r3, [sp, #0]
 80094ce:	4613      	mov	r3, r2
 80094d0:	460a      	mov	r2, r1
 80094d2:	2100      	movs	r1, #0
 80094d4:	f7ff ff3e 	bl	8009354 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 80094d8:	e7f6      	b.n	80094c8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

080094da <OSCServerParams::Dump()>:
 80094da:	4770      	bx	lr

080094dc <lo_pattern_match>:
 80094dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094de:	4605      	mov	r5, r0
 80094e0:	460b      	mov	r3, r1
 80094e2:	7819      	ldrb	r1, [r3, #0]
 80094e4:	782a      	ldrb	r2, [r5, #0]
 80094e6:	b919      	cbnz	r1, 80094f0 <lo_pattern_match+0x14>
 80094e8:	fab2 f082 	clz	r0, r2
 80094ec:	0940      	lsrs	r0, r0, #5
 80094ee:	e09f      	b.n	8009630 <lo_pattern_match+0x154>
 80094f0:	b90a      	cbnz	r2, 80094f6 <lo_pattern_match+0x1a>
 80094f2:	292a      	cmp	r1, #42	; 0x2a
 80094f4:	d132      	bne.n	800955c <lo_pattern_match+0x80>
 80094f6:	295b      	cmp	r1, #91	; 0x5b
 80094f8:	f103 0401 	add.w	r4, r3, #1
 80094fc:	d03c      	beq.n	8009578 <lo_pattern_match+0x9c>
 80094fe:	d806      	bhi.n	800950e <lo_pattern_match+0x32>
 8009500:	292a      	cmp	r1, #42	; 0x2a
 8009502:	d012      	beq.n	800952a <lo_pattern_match+0x4e>
 8009504:	293f      	cmp	r1, #63	; 0x3f
 8009506:	d032      	beq.n	800956e <lo_pattern_match+0x92>
 8009508:	4291      	cmp	r1, r2
 800950a:	d032      	beq.n	8009572 <lo_pattern_match+0x96>
 800950c:	e026      	b.n	800955c <lo_pattern_match+0x80>
 800950e:	297b      	cmp	r1, #123	; 0x7b
 8009510:	d1fa      	bne.n	8009508 <lo_pattern_match+0x2c>
 8009512:	7820      	ldrb	r0, [r4, #0]
 8009514:	4626      	mov	r6, r4
 8009516:	1c67      	adds	r7, r4, #1
 8009518:	2800      	cmp	r0, #0
 800951a:	f000 8089 	beq.w	8009630 <lo_pattern_match+0x154>
 800951e:	287d      	cmp	r0, #125	; 0x7d
 8009520:	d161      	bne.n	80095e6 <lo_pattern_match+0x10a>
 8009522:	1c9c      	adds	r4, r3, #2
 8009524:	4628      	mov	r0, r5
 8009526:	785b      	ldrb	r3, [r3, #1]
 8009528:	e06d      	b.n	8009606 <lo_pattern_match+0x12a>
 800952a:	7823      	ldrb	r3, [r4, #0]
 800952c:	4626      	mov	r6, r4
 800952e:	2b2a      	cmp	r3, #42	; 0x2a
 8009530:	f104 0401 	add.w	r4, r4, #1
 8009534:	d0f9      	beq.n	800952a <lo_pattern_match+0x4e>
 8009536:	b1c3      	cbz	r3, 800956a <lo_pattern_match+0x8e>
 8009538:	2b3f      	cmp	r3, #63	; 0x3f
 800953a:	d00b      	beq.n	8009554 <lo_pattern_match+0x78>
 800953c:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8009540:	2a5b      	cmp	r2, #91	; 0x5b
 8009542:	d007      	beq.n	8009554 <lo_pattern_match+0x78>
 8009544:	462a      	mov	r2, r5
 8009546:	4615      	mov	r5, r2
 8009548:	f812 0b01 	ldrb.w	r0, [r2], #1
 800954c:	2800      	cmp	r0, #0
 800954e:	d06f      	beq.n	8009630 <lo_pattern_match+0x154>
 8009550:	4283      	cmp	r3, r0
 8009552:	d1f8      	bne.n	8009546 <lo_pattern_match+0x6a>
 8009554:	4628      	mov	r0, r5
 8009556:	7803      	ldrb	r3, [r0, #0]
 8009558:	3501      	adds	r5, #1
 800955a:	b90b      	cbnz	r3, 8009560 <lo_pattern_match+0x84>
 800955c:	2000      	movs	r0, #0
 800955e:	e067      	b.n	8009630 <lo_pattern_match+0x154>
 8009560:	4631      	mov	r1, r6
 8009562:	f7ff ffbb 	bl	80094dc <lo_pattern_match>
 8009566:	2800      	cmp	r0, #0
 8009568:	d0f4      	beq.n	8009554 <lo_pattern_match+0x78>
 800956a:	2001      	movs	r0, #1
 800956c:	e060      	b.n	8009630 <lo_pattern_match+0x154>
 800956e:	2a00      	cmp	r2, #0
 8009570:	d0f4      	beq.n	800955c <lo_pattern_match+0x80>
 8009572:	4623      	mov	r3, r4
 8009574:	3501      	adds	r5, #1
 8009576:	e7b4      	b.n	80094e2 <lo_pattern_match+0x6>
 8009578:	7859      	ldrb	r1, [r3, #1]
 800957a:	2921      	cmp	r1, #33	; 0x21
 800957c:	bf0a      	itet	eq
 800957e:	2601      	moveq	r6, #1
 8009580:	2600      	movne	r6, #0
 8009582:	1c9c      	addeq	r4, r3, #2
 8009584:	4621      	mov	r1, r4
 8009586:	780b      	ldrb	r3, [r1, #0]
 8009588:	3401      	adds	r4, #1
 800958a:	b1c3      	cbz	r3, 80095be <lo_pattern_match+0xe2>
 800958c:	7848      	ldrb	r0, [r1, #1]
 800958e:	2800      	cmp	r0, #0
 8009590:	d04e      	beq.n	8009630 <lo_pattern_match+0x154>
 8009592:	282d      	cmp	r0, #45	; 0x2d
 8009594:	d11c      	bne.n	80095d0 <lo_pattern_match+0xf4>
 8009596:	7888      	ldrb	r0, [r1, #2]
 8009598:	1c8c      	adds	r4, r1, #2
 800959a:	2800      	cmp	r0, #0
 800959c:	d048      	beq.n	8009630 <lo_pattern_match+0x154>
 800959e:	285d      	cmp	r0, #93	; 0x5d
 80095a0:	d009      	beq.n	80095b6 <lo_pattern_match+0xda>
 80095a2:	429a      	cmp	r2, r3
 80095a4:	d005      	beq.n	80095b2 <lo_pattern_match+0xd6>
 80095a6:	4290      	cmp	r0, r2
 80095a8:	d003      	beq.n	80095b2 <lo_pattern_match+0xd6>
 80095aa:	429a      	cmp	r2, r3
 80095ac:	d9ea      	bls.n	8009584 <lo_pattern_match+0xa8>
 80095ae:	4290      	cmp	r0, r2
 80095b0:	d9e8      	bls.n	8009584 <lo_pattern_match+0xa8>
 80095b2:	2301      	movs	r3, #1
 80095b4:	e003      	b.n	80095be <lo_pattern_match+0xe2>
 80095b6:	429a      	cmp	r2, r3
 80095b8:	bf34      	ite	cc
 80095ba:	2300      	movcc	r3, #0
 80095bc:	2301      	movcs	r3, #1
 80095be:	429e      	cmp	r6, r3
 80095c0:	d0cc      	beq.n	800955c <lo_pattern_match+0x80>
 80095c2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80095c6:	2800      	cmp	r0, #0
 80095c8:	d032      	beq.n	8009630 <lo_pattern_match+0x154>
 80095ca:	285d      	cmp	r0, #93	; 0x5d
 80095cc:	d1f9      	bne.n	80095c2 <lo_pattern_match+0xe6>
 80095ce:	e7d0      	b.n	8009572 <lo_pattern_match+0x96>
 80095d0:	285d      	cmp	r0, #93	; 0x5d
 80095d2:	d103      	bne.n	80095dc <lo_pattern_match+0x100>
 80095d4:	1ad2      	subs	r2, r2, r3
 80095d6:	4253      	negs	r3, r2
 80095d8:	4153      	adcs	r3, r2
 80095da:	e7f0      	b.n	80095be <lo_pattern_match+0xe2>
 80095dc:	4290      	cmp	r0, r2
 80095de:	d0e8      	beq.n	80095b2 <lo_pattern_match+0xd6>
 80095e0:	429a      	cmp	r2, r3
 80095e2:	d1cf      	bne.n	8009584 <lo_pattern_match+0xa8>
 80095e4:	e7e5      	b.n	80095b2 <lo_pattern_match+0xd6>
 80095e6:	463c      	mov	r4, r7
 80095e8:	e793      	b.n	8009512 <lo_pattern_match+0x36>
 80095ea:	2b2c      	cmp	r3, #44	; 0x2c
 80095ec:	d10f      	bne.n	800960e <lo_pattern_match+0x132>
 80095ee:	4639      	mov	r1, r7
 80095f0:	f7ff ff74 	bl	80094dc <lo_pattern_match>
 80095f4:	2800      	cmp	r0, #0
 80095f6:	d1b8      	bne.n	800956a <lo_pattern_match+0x8e>
 80095f8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80095fc:	b1c3      	cbz	r3, 8009630 <lo_pattern_match+0x154>
 80095fe:	462a      	mov	r2, r5
 8009600:	4610      	mov	r0, r2
 8009602:	f814 3b01 	ldrb.w	r3, [r4], #1
 8009606:	2b00      	cmp	r3, #0
 8009608:	d1ef      	bne.n	80095ea <lo_pattern_match+0x10e>
 800960a:	4605      	mov	r5, r0
 800960c:	e7b1      	b.n	8009572 <lo_pattern_match+0x96>
 800960e:	2b7d      	cmp	r3, #125	; 0x7d
 8009610:	7802      	ldrb	r2, [r0, #0]
 8009612:	d104      	bne.n	800961e <lo_pattern_match+0x142>
 8009614:	7823      	ldrb	r3, [r4, #0]
 8009616:	431a      	orrs	r2, r3
 8009618:	d0a7      	beq.n	800956a <lo_pattern_match+0x8e>
 800961a:	1e45      	subs	r5, r0, #1
 800961c:	e7a9      	b.n	8009572 <lo_pattern_match+0x96>
 800961e:	4293      	cmp	r3, r2
 8009620:	d107      	bne.n	8009632 <lo_pattern_match+0x156>
 8009622:	1c42      	adds	r2, r0, #1
 8009624:	7840      	ldrb	r0, [r0, #1]
 8009626:	2800      	cmp	r0, #0
 8009628:	d1ea      	bne.n	8009600 <lo_pattern_match+0x124>
 800962a:	7873      	ldrb	r3, [r6, #1]
 800962c:	2b00      	cmp	r3, #0
 800962e:	d0e7      	beq.n	8009600 <lo_pattern_match+0x124>
 8009630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009632:	4623      	mov	r3, r4
 8009634:	781a      	ldrb	r2, [r3, #0]
 8009636:	461c      	mov	r4, r3
 8009638:	2a2c      	cmp	r2, #44	; 0x2c
 800963a:	f103 0301 	add.w	r3, r3, #1
 800963e:	d004      	beq.n	800964a <lo_pattern_match+0x16e>
 8009640:	2a7d      	cmp	r2, #125	; 0x7d
 8009642:	d08b      	beq.n	800955c <lo_pattern_match+0x80>
 8009644:	2a00      	cmp	r2, #0
 8009646:	d1f5      	bne.n	8009634 <lo_pattern_match+0x158>
 8009648:	e7d9      	b.n	80095fe <lo_pattern_match+0x122>
 800964a:	461c      	mov	r4, r3
 800964c:	e7d7      	b.n	80095fe <lo_pattern_match+0x122>

0800964e <osc::string_validate(void*, unsigned int)>:
 800964e:	b510      	push	{r4, lr}
 8009650:	2200      	movs	r2, #0
 8009652:	4604      	mov	r4, r0
 8009654:	428a      	cmp	r2, r1
 8009656:	d005      	beq.n	8009664 <osc::string_validate(void*, unsigned int)+0x16>
 8009658:	5ca3      	ldrb	r3, [r4, r2]
 800965a:	b933      	cbnz	r3, 800966a <osc::string_validate(void*, unsigned int)+0x1c>
 800965c:	f022 0303 	bic.w	r3, r2, #3
 8009660:	1d18      	adds	r0, r3, #4
 8009662:	d104      	bne.n	800966e <osc::string_validate(void*, unsigned int)+0x20>
 8009664:	f06f 0001 	mvn.w	r0, #1
 8009668:	e00b      	b.n	8009682 <osc::string_validate(void*, unsigned int)+0x34>
 800966a:	3201      	adds	r2, #1
 800966c:	e7f2      	b.n	8009654 <osc::string_validate(void*, unsigned int)+0x6>
 800966e:	4281      	cmp	r1, r0
 8009670:	d205      	bcs.n	800967e <osc::string_validate(void*, unsigned int)+0x30>
 8009672:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009676:	e004      	b.n	8009682 <osc::string_validate(void*, unsigned int)+0x34>
 8009678:	5ca3      	ldrb	r3, [r4, r2]
 800967a:	b91b      	cbnz	r3, 8009684 <osc::string_validate(void*, unsigned int)+0x36>
 800967c:	3201      	adds	r2, #1
 800967e:	4282      	cmp	r2, r0
 8009680:	d3fa      	bcc.n	8009678 <osc::string_validate(void*, unsigned int)+0x2a>
 8009682:	bd10      	pop	{r4, pc}
 8009684:	f06f 0002 	mvn.w	r0, #2
 8009688:	e7fb      	b.n	8009682 <osc::string_validate(void*, unsigned int)+0x34>

0800968a <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 800968a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800968e:	2300      	movs	r3, #0
 8009690:	460d      	mov	r5, r1
 8009692:	e9c0 1200 	strd	r1, r2, [r0]
 8009696:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800969a:	7203      	strb	r3, [r0, #8]
 800969c:	6183      	str	r3, [r0, #24]
 800969e:	4604      	mov	r4, r0
 80096a0:	4611      	mov	r1, r2
 80096a2:	4628      	mov	r0, r5
 80096a4:	4617      	mov	r7, r2
 80096a6:	f7ff ffd2 	bl	800964e <osc::string_validate(void*, unsigned int)>
 80096aa:	f1b0 0800 	subs.w	r8, r0, #0
 80096ae:	db25      	blt.n	80096fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80096b0:	eb05 0608 	add.w	r6, r5, r8
 80096b4:	4630      	mov	r0, r6
 80096b6:	60e6      	str	r6, [r4, #12]
 80096b8:	eba7 0108 	sub.w	r1, r7, r8
 80096bc:	f7ff ffc7 	bl	800964e <osc::string_validate(void*, unsigned int)>
 80096c0:	2800      	cmp	r0, #0
 80096c2:	db1b      	blt.n	80096fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80096c4:	f815 3008 	ldrb.w	r3, [r5, r8]
 80096c8:	2b2c      	cmp	r3, #44	; 0x2c
 80096ca:	d117      	bne.n	80096fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80096cc:	7873      	ldrb	r3, [r6, #1]
 80096ce:	2b73      	cmp	r3, #115	; 0x73
 80096d0:	d001      	beq.n	80096d6 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 80096d2:	2b62      	cmp	r3, #98	; 0x62
 80096d4:	d101      	bne.n	80096da <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 80096d6:	78b3      	ldrb	r3, [r6, #2]
 80096d8:	b983      	cbnz	r3, 80096fc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80096da:	3601      	adds	r6, #1
 80096dc:	4632      	mov	r2, r6
 80096de:	60e6      	str	r6, [r4, #12]
 80096e0:	4613      	mov	r3, r2
 80096e2:	7819      	ldrb	r1, [r3, #0]
 80096e4:	3201      	adds	r2, #1
 80096e6:	2900      	cmp	r1, #0
 80096e8:	d1fa      	bne.n	80096e0 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 80096ea:	1b9b      	subs	r3, r3, r6
 80096ec:	6123      	str	r3, [r4, #16]
 80096ee:	2301      	movs	r3, #1
 80096f0:	4440      	add	r0, r8
 80096f2:	4405      	add	r5, r0
 80096f4:	1a3f      	subs	r7, r7, r0
 80096f6:	6165      	str	r5, [r4, #20]
 80096f8:	61a7      	str	r7, [r4, #24]
 80096fa:	7223      	strb	r3, [r4, #8]
 80096fc:	4620      	mov	r0, r4
 80096fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009702 <OscSimpleMessage::GetFloat(unsigned int)>:
 8009702:	b510      	push	{r4, lr}
 8009704:	6984      	ldr	r4, [r0, #24]
 8009706:	1c4b      	adds	r3, r1, #1
 8009708:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800970c:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8009710:	d309      	bcc.n	8009726 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 8009712:	68c3      	ldr	r3, [r0, #12]
 8009714:	5c5b      	ldrb	r3, [r3, r1]
 8009716:	2b66      	cmp	r3, #102	; 0x66
 8009718:	d105      	bne.n	8009726 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800971a:	6943      	ldr	r3, [r0, #20]
 800971c:	4413      	add	r3, r2
 800971e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8009722:	ba00      	rev	r0, r0
 8009724:	bd10      	pop	{r4, pc}
 8009726:	2000      	movs	r0, #0
 8009728:	e7fc      	b.n	8009724 <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800972a <OscSimpleMessage::GetInt(unsigned int)>:
 800972a:	b510      	push	{r4, lr}
 800972c:	6984      	ldr	r4, [r0, #24]
 800972e:	1c4b      	adds	r3, r1, #1
 8009730:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 8009734:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8009738:	d309      	bcc.n	800974e <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800973a:	68c3      	ldr	r3, [r0, #12]
 800973c:	5c5b      	ldrb	r3, [r3, r1]
 800973e:	2b69      	cmp	r3, #105	; 0x69
 8009740:	d105      	bne.n	800974e <OscSimpleMessage::GetInt(unsigned int)+0x24>
 8009742:	6943      	ldr	r3, [r0, #20]
 8009744:	4413      	add	r3, r2
 8009746:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800974a:	ba00      	rev	r0, r0
 800974c:	bd10      	pop	{r4, pc}
 800974e:	2000      	movs	r0, #0
 8009750:	e7fc      	b.n	800974c <OscSimpleMessage::GetInt(unsigned int)+0x22>

08009752 <OscSimpleMessage::GetBlob(unsigned int)>:
 8009752:	b510      	push	{r4, lr}
 8009754:	68cb      	ldr	r3, [r1, #12]
 8009756:	781b      	ldrb	r3, [r3, #0]
 8009758:	2b62      	cmp	r3, #98	; 0x62
 800975a:	d10a      	bne.n	8009772 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800975c:	694a      	ldr	r2, [r1, #20]
 800975e:	6989      	ldr	r1, [r1, #24]
 8009760:	6813      	ldr	r3, [r2, #0]
 8009762:	ba1b      	rev	r3, r3
 8009764:	1d1c      	adds	r4, r3, #4
 8009766:	428c      	cmp	r4, r1
 8009768:	d803      	bhi.n	8009772 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800976a:	3204      	adds	r2, #4
 800976c:	6002      	str	r2, [r0, #0]
 800976e:	6043      	str	r3, [r0, #4]
 8009770:	bd10      	pop	{r4, pc}
 8009772:	2300      	movs	r3, #0
 8009774:	6003      	str	r3, [r0, #0]
 8009776:	e7fa      	b.n	800976e <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

08009778 <osc::string_size(char const*)>:
 8009778:	4602      	mov	r2, r0
 800977a:	4613      	mov	r3, r2
 800977c:	7819      	ldrb	r1, [r3, #0]
 800977e:	3201      	adds	r2, #1
 8009780:	2900      	cmp	r1, #0
 8009782:	d1fa      	bne.n	800977a <osc::string_size(char const*)+0x2>
 8009784:	1a18      	subs	r0, r3, r0
 8009786:	f020 0003 	bic.w	r0, r0, #3
 800978a:	3004      	adds	r0, #4
 800978c:	4770      	bx	lr
	...

08009790 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 8009790:	b570      	push	{r4, r5, r6, lr}
 8009792:	2400      	movs	r4, #0
 8009794:	480a      	ldr	r0, [pc, #40]	; (80097c0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 8009796:	1f16      	subs	r6, r2, #4
 8009798:	1985      	adds	r5, r0, r6
 800979a:	5584      	strb	r4, [r0, r6]
 800979c:	706c      	strb	r4, [r5, #1]
 800979e:	70ac      	strb	r4, [r5, #2]
 80097a0:	70ec      	strb	r4, [r5, #3]
 80097a2:	4604      	mov	r4, r0
 80097a4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80097a8:	f800 5b01 	strb.w	r5, [r0], #1
 80097ac:	2d00      	cmp	r5, #0
 80097ae:	d1f9      	bne.n	80097a4 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 80097b0:	212c      	movs	r1, #44	; 0x2c
 80097b2:	54a1      	strb	r1, [r4, r2]
 80097b4:	4422      	add	r2, r4
 80097b6:	7053      	strb	r3, [r2, #1]
 80097b8:	7095      	strb	r5, [r2, #2]
 80097ba:	70d5      	strb	r5, [r2, #3]
 80097bc:	bd70      	pop	{r4, r5, r6, pc}
 80097be:	bf00      	nop
 80097c0:	20000504 	andcs	r0, r0, r4, lsl #10

080097c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 80097c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80097c8:	4605      	mov	r5, r0
 80097ca:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 80097ce:	460e      	mov	r6, r1
 80097d0:	4617      	mov	r7, r2
 80097d2:	4698      	mov	r8, r3
 80097d4:	f1ba 0f00 	cmp.w	sl, #0
 80097d8:	d112      	bne.n	8009800 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 80097da:	4648      	mov	r0, r9
 80097dc:	f7ff ffcc 	bl	8009778 <osc::string_size(char const*)>
 80097e0:	4604      	mov	r4, r0
 80097e2:	4602      	mov	r2, r0
 80097e4:	4653      	mov	r3, sl
 80097e6:	4649      	mov	r1, r9
 80097e8:	4628      	mov	r0, r5
 80097ea:	3404      	adds	r4, #4
 80097ec:	f7ff ffd0 	bl	8009790 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 80097f0:	463b      	mov	r3, r7
 80097f2:	4905      	ldr	r1, [pc, #20]	; (8009808 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 80097f4:	f8cd 8000 	str.w	r8, [sp]
 80097f8:	b2a2      	uxth	r2, r4
 80097fa:	b2f0      	uxtb	r0, r6
 80097fc:	f003 f822 	bl	800c844 <udp_send>
 8009800:	4628      	mov	r0, r5
 8009802:	b002      	add	sp, #8
 8009804:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009808:	20000504 	andcs	r0, r0, r4, lsl #10

0800980c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800980c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009810:	b085      	sub	sp, #20
 8009812:	460f      	mov	r7, r1
 8009814:	4699      	mov	r9, r3
 8009816:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800981a:	4606      	mov	r6, r0
 800981c:	4690      	mov	r8, r2
 800981e:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8009822:	b35b      	cbz	r3, 800987c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 8009824:	781b      	ldrb	r3, [r3, #0]
 8009826:	2b73      	cmp	r3, #115	; 0x73
 8009828:	d128      	bne.n	800987c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800982a:	4608      	mov	r0, r1
 800982c:	9303      	str	r3, [sp, #12]
 800982e:	f7ff ffa3 	bl	8009778 <osc::string_size(char const*)>
 8009832:	4604      	mov	r4, r0
 8009834:	4650      	mov	r0, sl
 8009836:	f7ff ff9f 	bl	8009778 <osc::string_size(char const*)>
 800983a:	4622      	mov	r2, r4
 800983c:	1825      	adds	r5, r4, r0
 800983e:	9b03      	ldr	r3, [sp, #12]
 8009840:	990e      	ldr	r1, [sp, #56]	; 0x38
 8009842:	4630      	mov	r0, r6
 8009844:	f7ff ffa4 	bl	8009790 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8009848:	2200      	movs	r2, #0
 800984a:	4b0e      	ldr	r3, [pc, #56]	; (8009884 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800984c:	3403      	adds	r4, #3
 800984e:	1959      	adds	r1, r3, r5
 8009850:	555a      	strb	r2, [r3, r5]
 8009852:	f105 0b04 	add.w	fp, r5, #4
 8009856:	704a      	strb	r2, [r1, #1]
 8009858:	708a      	strb	r2, [r1, #2]
 800985a:	70ca      	strb	r2, [r1, #3]
 800985c:	4423      	add	r3, r4
 800985e:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8009862:	f803 2f01 	strb.w	r2, [r3, #1]!
 8009866:	2a00      	cmp	r2, #0
 8009868:	d1f9      	bne.n	800985e <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 800986a:	4643      	mov	r3, r8
 800986c:	4905      	ldr	r1, [pc, #20]	; (8009884 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800986e:	f8cd 9000 	str.w	r9, [sp]
 8009872:	fa1f f28b 	uxth.w	r2, fp
 8009876:	b2f8      	uxtb	r0, r7
 8009878:	f002 ffe4 	bl	800c844 <udp_send>
 800987c:	4630      	mov	r0, r6
 800987e:	b005      	add	sp, #20
 8009880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009884:	20000504 	andcs	r0, r0, r4, lsl #10

08009888 <LightSet::Blackout(bool)>:
 8009888:	4770      	bx	lr

0800988a <DmxSend::~DmxSend()>:
 800988a:	4770      	bx	lr

0800988c <DmxSend::Start(unsigned int)>:
 800988c:	2301      	movs	r3, #1
 800988e:	b430      	push	{r4, r5}
 8009890:	4c08      	ldr	r4, [pc, #32]	; (80098b4 <DmxSend::Start(unsigned int)+0x28>)
 8009892:	fa03 f001 	lsl.w	r0, r3, r1
 8009896:	7822      	ldrb	r2, [r4, #0]
 8009898:	ea30 0502 	bics.w	r5, r0, r2
 800989c:	d007      	beq.n	80098ae <DmxSend::Start(unsigned int)+0x22>
 800989e:	4302      	orrs	r2, r0
 80098a0:	4805      	ldr	r0, [pc, #20]	; (80098b8 <DmxSend::Start(unsigned int)+0x2c>)
 80098a2:	7022      	strb	r2, [r4, #0]
 80098a4:	6800      	ldr	r0, [r0, #0]
 80098a6:	2200      	movs	r2, #0
 80098a8:	bc30      	pop	{r4, r5}
 80098aa:	f000 bca9 	b.w	800a200 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80098ae:	bc30      	pop	{r4, r5}
 80098b0:	4770      	bx	lr
 80098b2:	bf00      	nop
 80098b4:	20000704 	andcs	r0, r0, r4, lsl #14
 80098b8:	20000b44 	andcs	r0, r0, r4, asr #22

080098bc <DmxSend::Stop(unsigned int)>:
 80098bc:	2201      	movs	r2, #1
 80098be:	b410      	push	{r4}
 80098c0:	4809      	ldr	r0, [pc, #36]	; (80098e8 <DmxSend::Stop(unsigned int)+0x2c>)
 80098c2:	408a      	lsls	r2, r1
 80098c4:	7803      	ldrb	r3, [r0, #0]
 80098c6:	ea03 0402 	and.w	r4, r3, r2
 80098ca:	439a      	bics	r2, r3
 80098cc:	d109      	bne.n	80098e2 <DmxSend::Stop(unsigned int)+0x26>
 80098ce:	ea23 0304 	bic.w	r3, r3, r4
 80098d2:	7003      	strb	r3, [r0, #0]
 80098d4:	2300      	movs	r3, #0
 80098d6:	4805      	ldr	r0, [pc, #20]	; (80098ec <DmxSend::Stop(unsigned int)+0x30>)
 80098d8:	461a      	mov	r2, r3
 80098da:	6800      	ldr	r0, [r0, #0]
 80098dc:	bc10      	pop	{r4}
 80098de:	f000 bc8f 	b.w	800a200 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80098e2:	bc10      	pop	{r4}
 80098e4:	4770      	bx	lr
 80098e6:	bf00      	nop
 80098e8:	20000704 	andcs	r0, r0, r4, lsl #14
 80098ec:	20000b44 	andcs	r0, r0, r4, asr #22

080098f0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 80098f0:	b11b      	cbz	r3, 80098fa <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 80098f2:	4802      	ldr	r0, [pc, #8]	; (80098fc <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 80098f4:	6800      	ldr	r0, [r0, #0]
 80098f6:	f000 bde3 	b.w	800a4c0 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 80098fa:	4770      	bx	lr
 80098fc:	20000b44 	andcs	r0, r0, r4, asr #22

08009900 <DmxSend::Print()>:
 8009900:	b510      	push	{r4, lr}
 8009902:	4c0e      	ldr	r4, [pc, #56]	; (800993c <DmxSend::Print()+0x3c>)
 8009904:	480e      	ldr	r0, [pc, #56]	; (8009940 <DmxSend::Print()+0x40>)
 8009906:	f7fe ff89 	bl	800881c <printf>
 800990a:	6823      	ldr	r3, [r4, #0]
 800990c:	480d      	ldr	r0, [pc, #52]	; (8009944 <DmxSend::Print()+0x44>)
 800990e:	6819      	ldr	r1, [r3, #0]
 8009910:	f7fe ff84 	bl	800881c <printf>
 8009914:	6823      	ldr	r3, [r4, #0]
 8009916:	480c      	ldr	r0, [pc, #48]	; (8009948 <DmxSend::Print()+0x48>)
 8009918:	6859      	ldr	r1, [r3, #4]
 800991a:	f7fe ff7f 	bl	800881c <printf>
 800991e:	6823      	ldr	r3, [r4, #0]
 8009920:	490a      	ldr	r1, [pc, #40]	; (800994c <DmxSend::Print()+0x4c>)
 8009922:	689b      	ldr	r3, [r3, #8]
 8009924:	480a      	ldr	r0, [pc, #40]	; (8009950 <DmxSend::Print()+0x50>)
 8009926:	fbb1 f1f3 	udiv	r1, r1, r3
 800992a:	f7fe ff77 	bl	800881c <printf>
 800992e:	6823      	ldr	r3, [r4, #0]
 8009930:	4808      	ldr	r0, [pc, #32]	; (8009954 <DmxSend::Print()+0x54>)
 8009932:	8a19      	ldrh	r1, [r3, #16]
 8009934:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009938:	f7fe bf70 	b.w	800881c <printf>
 800993c:	20000b44 	andcs	r0, r0, r4, asr #22
 8009940:	080111fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip}
 8009944:	08011204 	stmdaeq	r1, {r2, r9, ip}
 8009948:	08011218 	stmdaeq	r1, {r3, r4, r9, ip}
 800994c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009950:	0801122c 	stmdaeq	r1, {r2, r3, r5, r9, ip}
 8009954:	08011240 	stmdaeq	r1, {r6, r9, ip}

08009958 <DmxSend::~DmxSend()>:
 8009958:	b510      	push	{r4, lr}
 800995a:	4604      	mov	r4, r0
 800995c:	f005 fa44 	bl	800ede8 <operator delete(void*)>
 8009960:	4620      	mov	r0, r4
 8009962:	bd10      	pop	{r4, pc}

08009964 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 8009964:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009966:	88c6      	ldrh	r6, [r0, #6]
 8009968:	8885      	ldrh	r5, [r0, #4]
 800996a:	42ae      	cmp	r6, r5
 800996c:	d216      	bcs.n	800999c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800996e:	4604      	mov	r4, r0
 8009970:	6800      	ldr	r0, [r0, #0]
 8009972:	1bad      	subs	r5, r5, r6
 8009974:	4430      	add	r0, r6
 8009976:	7a26      	ldrb	r6, [r4, #8]
 8009978:	b923      	cbnz	r3, 8009984 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800997a:	b926      	cbnz	r6, 8009986 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800997c:	9200      	str	r2, [sp, #0]
 800997e:	460b      	mov	r3, r1
 8009980:	4a09      	ldr	r2, [pc, #36]	; (80099a8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 8009982:	e003      	b.n	800998c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009984:	b166      	cbz	r6, 80099a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 8009986:	460b      	mov	r3, r1
 8009988:	9200      	str	r2, [sp, #0]
 800998a:	4a08      	ldr	r2, [pc, #32]	; (80099ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800998c:	4629      	mov	r1, r5
 800998e:	f7fe ff55 	bl	800883c <snprintf>
 8009992:	4285      	cmp	r5, r0
 8009994:	bfa2      	ittt	ge
 8009996:	88e3      	ldrhge	r3, [r4, #6]
 8009998:	181b      	addge	r3, r3, r0
 800999a:	80e3      	strhge	r3, [r4, #6]
 800999c:	b002      	add	sp, #8
 800999e:	bd70      	pop	{r4, r5, r6, pc}
 80099a0:	9200      	str	r2, [sp, #0]
 80099a2:	460b      	mov	r3, r1
 80099a4:	4a02      	ldr	r2, [pc, #8]	; (80099b0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 80099a6:	e7f1      	b.n	800998c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 80099a8:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 80099ac:	08011180 	stmdaeq	r1, {r7, r8, ip}
 80099b0:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}

080099b4 <DmxParams::DmxParams(DmxParamsStore*)>:
 80099b4:	6001      	str	r1, [r0, #0]
 80099b6:	2100      	movs	r1, #0
 80099b8:	4a03      	ldr	r2, [pc, #12]	; (80099c8 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 80099ba:	e9c0 1201 	strd	r1, r2, [r0, #4]
 80099be:	f64f 7228 	movw	r2, #65320	; 0xff28
 80099c2:	8182      	strh	r2, [r0, #12]
 80099c4:	4770      	bx	lr
 80099c6:	bf00      	nop
 80099c8:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

080099cc <DmxParams::Load()>:
 80099cc:	b508      	push	{r3, lr}
 80099ce:	2300      	movs	r3, #0
 80099d0:	4601      	mov	r1, r0
 80099d2:	6043      	str	r3, [r0, #4]
 80099d4:	6800      	ldr	r0, [r0, #0]
 80099d6:	b120      	cbz	r0, 80099e2 <DmxParams::Load()+0x16>
 80099d8:	6803      	ldr	r3, [r0, #0]
 80099da:	3104      	adds	r1, #4
 80099dc:	68db      	ldr	r3, [r3, #12]
 80099de:	4798      	blx	r3
 80099e0:	2001      	movs	r0, #1
 80099e2:	bd08      	pop	{r3, pc}

080099e4 <DmxParams::Load(char const*, unsigned int)>:
 80099e4:	6803      	ldr	r3, [r0, #0]
 80099e6:	b1d3      	cbz	r3, 8009a1e <DmxParams::Load(char const*, unsigned int)+0x3a>
 80099e8:	2300      	movs	r3, #0
 80099ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099ec:	460d      	mov	r5, r1
 80099ee:	4616      	mov	r6, r2
 80099f0:	4604      	mov	r4, r0
 80099f2:	6043      	str	r3, [r0, #4]
 80099f4:	4602      	mov	r2, r0
 80099f6:	490a      	ldr	r1, [pc, #40]	; (8009a20 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 80099f8:	4668      	mov	r0, sp
 80099fa:	f004 fce1 	bl	800e3c0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80099fe:	4632      	mov	r2, r6
 8009a00:	4629      	mov	r1, r5
 8009a02:	4668      	mov	r0, sp
 8009a04:	f004 fce0 	bl	800e3c8 <ReadConfigFile::Read(char const*, unsigned int)>
 8009a08:	4621      	mov	r1, r4
 8009a0a:	f851 0b04 	ldr.w	r0, [r1], #4
 8009a0e:	6803      	ldr	r3, [r0, #0]
 8009a10:	689b      	ldr	r3, [r3, #8]
 8009a12:	4798      	blx	r3
 8009a14:	4668      	mov	r0, sp
 8009a16:	f004 fcd6 	bl	800e3c6 <ReadConfigFile::~ReadConfigFile()>
 8009a1a:	b002      	add	sp, #8
 8009a1c:	bd70      	pop	{r4, r5, r6, pc}
 8009a1e:	4770      	bx	lr
 8009a20:	08009af1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip, pc}

08009a24 <DmxParams::callbackFunction(char const*)>:
 8009a24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a26:	460d      	mov	r5, r1
 8009a28:	4604      	mov	r4, r0
 8009a2a:	492d      	ldr	r1, [pc, #180]	; (8009ae0 <DmxParams::callbackFunction(char const*)+0xbc>)
 8009a2c:	4628      	mov	r0, r5
 8009a2e:	f10d 0206 	add.w	r2, sp, #6
 8009a32:	f004 fd57 	bl	800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009a36:	b988      	cbnz	r0, 8009a5c <DmxParams::callbackFunction(char const*)+0x38>
 8009a38:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009a3c:	6863      	ldr	r3, [r4, #4]
 8009a3e:	2a5b      	cmp	r2, #91	; 0x5b
 8009a40:	d907      	bls.n	8009a52 <DmxParams::callbackFunction(char const*)+0x2e>
 8009a42:	2ab0      	cmp	r2, #176	; 0xb0
 8009a44:	d005      	beq.n	8009a52 <DmxParams::callbackFunction(char const*)+0x2e>
 8009a46:	8122      	strh	r2, [r4, #8]
 8009a48:	f043 0301 	orr.w	r3, r3, #1
 8009a4c:	6063      	str	r3, [r4, #4]
 8009a4e:	b003      	add	sp, #12
 8009a50:	bd30      	pop	{r4, r5, pc}
 8009a52:	22b0      	movs	r2, #176	; 0xb0
 8009a54:	f023 0301 	bic.w	r3, r3, #1
 8009a58:	8122      	strh	r2, [r4, #8]
 8009a5a:	e7f7      	b.n	8009a4c <DmxParams::callbackFunction(char const*)+0x28>
 8009a5c:	4628      	mov	r0, r5
 8009a5e:	4921      	ldr	r1, [pc, #132]	; (8009ae4 <DmxParams::callbackFunction(char const*)+0xc0>)
 8009a60:	f10d 0206 	add.w	r2, sp, #6
 8009a64:	f004 fd3e 	bl	800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009a68:	b968      	cbnz	r0, 8009a86 <DmxParams::callbackFunction(char const*)+0x62>
 8009a6a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009a6e:	6863      	ldr	r3, [r4, #4]
 8009a70:	2a0c      	cmp	r2, #12
 8009a72:	bf93      	iteet	ls
 8009a74:	220c      	movls	r2, #12
 8009a76:	8162      	strhhi	r2, [r4, #10]
 8009a78:	f043 0302 	orrhi.w	r3, r3, #2
 8009a7c:	8162      	strhls	r2, [r4, #10]
 8009a7e:	bf98      	it	ls
 8009a80:	f023 0302 	bicls.w	r3, r3, #2
 8009a84:	e7e2      	b.n	8009a4c <DmxParams::callbackFunction(char const*)+0x28>
 8009a86:	4628      	mov	r0, r5
 8009a88:	4917      	ldr	r1, [pc, #92]	; (8009ae8 <DmxParams::callbackFunction(char const*)+0xc4>)
 8009a8a:	f10d 0205 	add.w	r2, sp, #5
 8009a8e:	f004 fd47 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009a92:	b950      	cbnz	r0, 8009aaa <DmxParams::callbackFunction(char const*)+0x86>
 8009a94:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009a98:	6863      	ldr	r3, [r4, #4]
 8009a9a:	2a28      	cmp	r2, #40	; 0x28
 8009a9c:	7322      	strb	r2, [r4, #12]
 8009a9e:	bf14      	ite	ne
 8009aa0:	f043 0304 	orrne.w	r3, r3, #4
 8009aa4:	f023 0304 	biceq.w	r3, r3, #4
 8009aa8:	e7d0      	b.n	8009a4c <DmxParams::callbackFunction(char const*)+0x28>
 8009aaa:	4628      	mov	r0, r5
 8009aac:	490f      	ldr	r1, [pc, #60]	; (8009aec <DmxParams::callbackFunction(char const*)+0xc8>)
 8009aae:	f10d 0206 	add.w	r2, sp, #6
 8009ab2:	f004 fd17 	bl	800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009ab6:	2800      	cmp	r0, #0
 8009ab8:	d1c9      	bne.n	8009a4e <DmxParams::callbackFunction(char const*)+0x2a>
 8009aba:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009abe:	6863      	ldr	r3, [r4, #4]
 8009ac0:	1e91      	subs	r1, r2, #2
 8009ac2:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 8009ac6:	bf2f      	iteee	cs
 8009ac8:	22ff      	movcs	r2, #255	; 0xff
 8009aca:	0852      	lsrcc	r2, r2, #1
 8009acc:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 8009ad0:	7362      	strbcc	r2, [r4, #13]
 8009ad2:	bf32      	itee	cc
 8009ad4:	f043 0308 	orrcc.w	r3, r3, #8
 8009ad8:	7362      	strbcs	r2, [r4, #13]
 8009ada:	f023 0308 	biccs.w	r3, r3, #8
 8009ade:	e7b5      	b.n	8009a4c <DmxParams::callbackFunction(char const*)+0x28>
 8009ae0:	08011288 	stmdaeq	r1, {r3, r7, r9, ip}
 8009ae4:	080112ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip}
 8009ae8:	0801129f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip}
 8009aec:	08011293 	stmdaeq	r1, {r0, r1, r4, r7, r9, ip}

08009af0 <DmxParams::staticCallbackFunction(void*, char const*)>:
 8009af0:	f7ff bf98 	b.w	8009a24 <DmxParams::callbackFunction(char const*)>

08009af4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 8009af4:	b570      	push	{r4, r5, r6, lr}
 8009af6:	4604      	mov	r4, r0
 8009af8:	4615      	mov	r5, r2
 8009afa:	461e      	mov	r6, r3
 8009afc:	b086      	sub	sp, #24
 8009afe:	3004      	adds	r0, #4
 8009b00:	b369      	cbz	r1, 8009b5e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 8009b02:	220a      	movs	r2, #10
 8009b04:	f005 fa33 	bl	800ef6e <memmove>
 8009b08:	462a      	mov	r2, r5
 8009b0a:	4633      	mov	r3, r6
 8009b0c:	4932      	ldr	r1, [pc, #200]	; (8009bd8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 8009b0e:	a803      	add	r0, sp, #12
 8009b10:	f004 fbb6 	bl	800e280 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009b14:	6863      	ldr	r3, [r4, #4]
 8009b16:	8922      	ldrh	r2, [r4, #8]
 8009b18:	4930      	ldr	r1, [pc, #192]	; (8009bdc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 8009b1a:	f003 0301 	and.w	r3, r3, #1
 8009b1e:	a803      	add	r0, sp, #12
 8009b20:	f7ff ff20 	bl	8009964 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009b24:	6863      	ldr	r3, [r4, #4]
 8009b26:	8962      	ldrh	r2, [r4, #10]
 8009b28:	492d      	ldr	r1, [pc, #180]	; (8009be0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 8009b2a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8009b2e:	a803      	add	r0, sp, #12
 8009b30:	f7ff ff18 	bl	8009964 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009b34:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009b38:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009b3c:	7b23      	ldrb	r3, [r4, #12]
 8009b3e:	42aa      	cmp	r2, r5
 8009b40:	6861      	ldr	r1, [r4, #4]
 8009b42:	d221      	bcs.n	8009b88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009b44:	9803      	ldr	r0, [sp, #12]
 8009b46:	0749      	lsls	r1, r1, #29
 8009b48:	4410      	add	r0, r2
 8009b4a:	eba5 0502 	sub.w	r5, r5, r2
 8009b4e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009b52:	d40b      	bmi.n	8009b6c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 8009b54:	b95a      	cbnz	r2, 8009b6e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 8009b56:	9300      	str	r3, [sp, #0]
 8009b58:	4a22      	ldr	r2, [pc, #136]	; (8009be4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009b5a:	4b23      	ldr	r3, [pc, #140]	; (8009be8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009b5c:	e00a      	b.n	8009b74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 8009b5e:	6823      	ldr	r3, [r4, #0]
 8009b60:	4601      	mov	r1, r0
 8009b62:	681a      	ldr	r2, [r3, #0]
 8009b64:	4618      	mov	r0, r3
 8009b66:	68d2      	ldr	r2, [r2, #12]
 8009b68:	4790      	blx	r2
 8009b6a:	e7cd      	b.n	8009b08 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 8009b6c:	b37a      	cbz	r2, 8009bce <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 8009b6e:	9300      	str	r3, [sp, #0]
 8009b70:	4a1e      	ldr	r2, [pc, #120]	; (8009bec <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009b72:	4b1d      	ldr	r3, [pc, #116]	; (8009be8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009b74:	4629      	mov	r1, r5
 8009b76:	f7fe fe61 	bl	800883c <snprintf>
 8009b7a:	4285      	cmp	r5, r0
 8009b7c:	bfa2      	ittt	ge
 8009b7e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009b82:	18c0      	addge	r0, r0, r3
 8009b84:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009b88:	7b62      	ldrb	r2, [r4, #13]
 8009b8a:	6863      	ldr	r3, [r4, #4]
 8009b8c:	3201      	adds	r2, #1
 8009b8e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8009b92:	4917      	ldr	r1, [pc, #92]	; (8009bf0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009b94:	0052      	lsls	r2, r2, #1
 8009b96:	a803      	add	r0, sp, #12
 8009b98:	f7ff fee4 	bl	8009964 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009b9c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009ba0:	b17b      	cbz	r3, 8009bc2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 8009ba2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009ba6:	9b03      	ldr	r3, [sp, #12]
 8009ba8:	4413      	add	r3, r2
 8009baa:	227d      	movs	r2, #125	; 0x7d
 8009bac:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009bb0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009bb4:	9903      	ldr	r1, [sp, #12]
 8009bb6:	54ca      	strb	r2, [r1, r3]
 8009bb8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009bbc:	3301      	adds	r3, #1
 8009bbe:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009bc2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009bc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009bc8:	601a      	str	r2, [r3, #0]
 8009bca:	b006      	add	sp, #24
 8009bcc:	bd70      	pop	{r4, r5, r6, pc}
 8009bce:	9300      	str	r3, [sp, #0]
 8009bd0:	4a08      	ldr	r2, [pc, #32]	; (8009bf4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009bd2:	4b05      	ldr	r3, [pc, #20]	; (8009be8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009bd4:	e7ce      	b.n	8009b74 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 8009bd6:	bf00      	nop
 8009bd8:	080112b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, ip}
 8009bdc:	08011288 	stmdaeq	r1, {r3, r7, r9, ip}
 8009be0:	080112ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip}
 8009be4:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 8009be8:	0801129f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip}
 8009bec:	08011180 	stmdaeq	r1, {r7, r8, ip}
 8009bf0:	08011293 	stmdaeq	r1, {r0, r1, r4, r7, r9, ip}
 8009bf4:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}

08009bf8 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 8009bf8:	b513      	push	{r0, r1, r4, lr}
 8009bfa:	6804      	ldr	r4, [r0, #0]
 8009bfc:	b914      	cbnz	r4, 8009c04 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009bfe:	601c      	str	r4, [r3, #0]
 8009c00:	b002      	add	sp, #8
 8009c02:	bd10      	pop	{r4, pc}
 8009c04:	9300      	str	r3, [sp, #0]
 8009c06:	4613      	mov	r3, r2
 8009c08:	460a      	mov	r2, r1
 8009c0a:	2100      	movs	r1, #0
 8009c0c:	f7ff ff72 	bl	8009af4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 8009c10:	e7f6      	b.n	8009c00 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009c14 <DmxParams::Set(Dmx*)>:
 8009c14:	b538      	push	{r3, r4, r5, lr}
 8009c16:	6843      	ldr	r3, [r0, #4]
 8009c18:	4604      	mov	r4, r0
 8009c1a:	07d8      	lsls	r0, r3, #31
 8009c1c:	460d      	mov	r5, r1
 8009c1e:	d503      	bpl.n	8009c28 <DmxParams::Set(Dmx*)+0x14>
 8009c20:	4628      	mov	r0, r5
 8009c22:	8921      	ldrh	r1, [r4, #8]
 8009c24:	f000 fc28 	bl	800a478 <Dmx::SetDmxBreakTime(unsigned int)>
 8009c28:	6863      	ldr	r3, [r4, #4]
 8009c2a:	0799      	lsls	r1, r3, #30
 8009c2c:	d503      	bpl.n	8009c36 <DmxParams::Set(Dmx*)+0x22>
 8009c2e:	4628      	mov	r0, r5
 8009c30:	8961      	ldrh	r1, [r4, #10]
 8009c32:	f000 fc2b 	bl	800a48c <Dmx::SetDmxMabTime(unsigned int)>
 8009c36:	6863      	ldr	r3, [r4, #4]
 8009c38:	075a      	lsls	r2, r3, #29
 8009c3a:	d507      	bpl.n	8009c4c <DmxParams::Set(Dmx*)+0x38>
 8009c3c:	7b21      	ldrb	r1, [r4, #12]
 8009c3e:	b111      	cbz	r1, 8009c46 <DmxParams::Set(Dmx*)+0x32>
 8009c40:	4b08      	ldr	r3, [pc, #32]	; (8009c64 <DmxParams::Set(Dmx*)+0x50>)
 8009c42:	fbb3 f1f1 	udiv	r1, r3, r1
 8009c46:	4628      	mov	r0, r5
 8009c48:	f000 fbe6 	bl	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009c4c:	6863      	ldr	r3, [r4, #4]
 8009c4e:	071b      	lsls	r3, r3, #28
 8009c50:	d507      	bpl.n	8009c62 <DmxParams::Set(Dmx*)+0x4e>
 8009c52:	7b61      	ldrb	r1, [r4, #13]
 8009c54:	4628      	mov	r0, r5
 8009c56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009c5a:	3101      	adds	r1, #1
 8009c5c:	0049      	lsls	r1, r1, #1
 8009c5e:	f000 bc1f 	b.w	800a4a0 <Dmx::SetDmxSlots(unsigned short)>
 8009c62:	bd38      	pop	{r3, r4, r5, pc}
 8009c64:	000f4240 	andeq	r4, pc, r0, asr #4

08009c68 <DmxParams::Dump()>:
 8009c68:	4770      	bx	lr
	...

08009c6c <USART2_IRQHandler>:
 8009c6c:	b510      	push	{r4, lr}
 8009c6e:	f3bf 8f5f 	dmb	sy
 8009c72:	2408      	movs	r4, #8
 8009c74:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8009c78:	498c      	ldr	r1, [pc, #560]	; (8009eac <USART2_IRQHandler+0x240>)
 8009c7a:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8009c7e:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8009c82:	f013 0f02 	tst.w	r3, #2
 8009c86:	4b8a      	ldr	r3, [pc, #552]	; (8009eb0 <USART2_IRQHandler+0x244>)
 8009c88:	d016      	beq.n	8009cb8 <USART2_IRQHandler+0x4c>
 8009c8a:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 8009c8e:	f020 0002 	bic.w	r0, r0, #2
 8009c92:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 8009c96:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009c9a:	2200      	movs	r2, #0
 8009c9c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009ca0:	2202      	movs	r2, #2
 8009ca2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009ca6:	2310      	movs	r3, #16
 8009ca8:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 8009cac:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8009cb0:	2320      	movs	r3, #32
 8009cb2:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8009cb6:	bd10      	pop	{r4, pc}
 8009cb8:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009cbc:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8009cc0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009cc4:	280a      	cmp	r0, #10
 8009cc6:	f200 80ec 	bhi.w	8009ea2 <USART2_IRQHandler+0x236>
 8009cca:	e8df f010 	tbh	[pc, r0, lsl #1]
 8009cce:	00ea000b 	rsceq	r0, sl, fp
 8009cd2:	00ea0019 	rsceq	r0, sl, r9, lsl r0
 8009cd6:	005c0039 	subseq	r0, ip, r9, lsr r0
 8009cda:	00870077 	addeq	r0, r7, r7, ror r0
 8009cde:	00ba00a8 	adcseq	r0, sl, r8, lsr #1
 8009ce2:	210800ce 	smlabtcs	r8, lr, r0, r0
 8009ce6:	701a      	strb	r2, [r3, #0]
 8009ce8:	2201      	movs	r2, #1
 8009cea:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009cee:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009cf2:	2208      	movs	r2, #8
 8009cf4:	4b6d      	ldr	r3, [pc, #436]	; (8009eac <USART2_IRQHandler+0x240>)
 8009cf6:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009cfa:	f3bf 8f5f 	dmb	sy
 8009cfe:	e7da      	b.n	8009cb6 <USART2_IRQHandler+0x4a>
 8009d00:	b11a      	cbz	r2, 8009d0a <USART2_IRQHandler+0x9e>
 8009d02:	2acc      	cmp	r2, #204	; 0xcc
 8009d04:	d016      	beq.n	8009d34 <USART2_IRQHandler+0xc8>
 8009d06:	2200      	movs	r2, #0
 8009d08:	e065      	b.n	8009dd6 <USART2_IRQHandler+0x16a>
 8009d0a:	701a      	strb	r2, [r3, #0]
 8009d0c:	2201      	movs	r2, #1
 8009d0e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d12:	4a68      	ldr	r2, [pc, #416]	; (8009eb4 <USART2_IRQHandler+0x248>)
 8009d14:	6851      	ldr	r1, [r2, #4]
 8009d16:	3101      	adds	r1, #1
 8009d18:	6051      	str	r1, [r2, #4]
 8009d1a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8009d1e:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 8009d22:	60d1      	str	r1, [r2, #12]
 8009d24:	2204      	movs	r2, #4
 8009d26:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009d2a:	2210      	movs	r2, #16
 8009d2c:	4b5f      	ldr	r3, [pc, #380]	; (8009eac <USART2_IRQHandler+0x240>)
 8009d2e:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8009d32:	e7de      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009d34:	701a      	strb	r2, [r3, #0]
 8009d36:	4a60      	ldr	r2, [pc, #384]	; (8009eb8 <USART2_IRQHandler+0x24c>)
 8009d38:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d3c:	2205      	movs	r2, #5
 8009d3e:	e7f2      	b.n	8009d26 <USART2_IRQHandler+0xba>
 8009d40:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8009d44:	b288      	uxth	r0, r1
 8009d46:	541a      	strb	r2, [r3, r0]
 8009d48:	1c4a      	adds	r2, r1, #1
 8009d4a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009d4e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d52:	d90b      	bls.n	8009d6c <USART2_IRQHandler+0x100>
 8009d54:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009d58:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d5c:	2200      	movs	r2, #0
 8009d5e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009d62:	2210      	movs	r2, #16
 8009d64:	4b51      	ldr	r3, [pc, #324]	; (8009eac <USART2_IRQHandler+0x240>)
 8009d66:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009d6a:	e7c2      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009d6c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009d70:	4850      	ldr	r0, [pc, #320]	; (8009eb4 <USART2_IRQHandler+0x248>)
 8009d72:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8009d76:	68c3      	ldr	r3, [r0, #12]
 8009d78:	60c1      	str	r1, [r0, #12]
 8009d7a:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8009d7e:	3304      	adds	r3, #4
 8009d80:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8009d84:	e7b5      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009d86:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009d8a:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009d8e:	541a      	strb	r2, [r3, r0]
 8009d90:	1c41      	adds	r1, r0, #1
 8009d92:	3817      	subs	r0, #23
 8009d94:	b289      	uxth	r1, r1
 8009d96:	4422      	add	r2, r4
 8009d98:	28e7      	cmp	r0, #231	; 0xe7
 8009d9a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009d9e:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009da2:	d808      	bhi.n	8009db6 <USART2_IRQHandler+0x14a>
 8009da4:	789a      	ldrb	r2, [r3, #2]
 8009da6:	428a      	cmp	r2, r1
 8009da8:	d105      	bne.n	8009db6 <USART2_IRQHandler+0x14a>
 8009daa:	2206      	movs	r2, #6
 8009dac:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009db0:	2220      	movs	r2, #32
 8009db2:	4b3e      	ldr	r3, [pc, #248]	; (8009eac <USART2_IRQHandler+0x240>)
 8009db4:	e7bb      	b.n	8009d2e <USART2_IRQHandler+0xc2>
 8009db6:	29ff      	cmp	r1, #255	; 0xff
 8009db8:	d99b      	bls.n	8009cf2 <USART2_IRQHandler+0x86>
 8009dba:	e7a4      	b.n	8009d06 <USART2_IRQHandler+0x9a>
 8009dbc:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009dc0:	545a      	strb	r2, [r3, r1]
 8009dc2:	3101      	adds	r1, #1
 8009dc4:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009dc8:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8009dcc:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8009dd0:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009dd4:	2207      	movs	r2, #7
 8009dd6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009dda:	e78a      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009ddc:	2020      	movs	r0, #32
 8009dde:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8009de2:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009de6:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009dea:	541a      	strb	r2, [r3, r0]
 8009dec:	1aa2      	subs	r2, r4, r2
 8009dee:	b292      	uxth	r2, r2
 8009df0:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009df4:	b912      	cbnz	r2, 8009dfc <USART2_IRQHandler+0x190>
 8009df6:	785a      	ldrb	r2, [r3, #1]
 8009df8:	2a01      	cmp	r2, #1
 8009dfa:	d003      	beq.n	8009e04 <USART2_IRQHandler+0x198>
 8009dfc:	2200      	movs	r2, #0
 8009dfe:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009e02:	e780      	b.n	8009d06 <USART2_IRQHandler+0x9a>
 8009e04:	3001      	adds	r0, #1
 8009e06:	4a2d      	ldr	r2, [pc, #180]	; (8009ebc <USART2_IRQHandler+0x250>)
 8009e08:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 8009e0c:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 8009e10:	6850      	ldr	r0, [r2, #4]
 8009e12:	4a2b      	ldr	r2, [pc, #172]	; (8009ec0 <USART2_IRQHandler+0x254>)
 8009e14:	6010      	str	r0, [r2, #0]
 8009e16:	2210      	movs	r2, #16
 8009e18:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 8009e1c:	e773      	b.n	8009d06 <USART2_IRQHandler+0x9a>
 8009e1e:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e22:	2aaa      	cmp	r2, #170	; 0xaa
 8009e24:	545a      	strb	r2, [r3, r1]
 8009e26:	f101 0101 	add.w	r1, r1, #1
 8009e2a:	b289      	uxth	r1, r1
 8009e2c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e30:	d002      	beq.n	8009e38 <USART2_IRQHandler+0x1cc>
 8009e32:	2909      	cmp	r1, #9
 8009e34:	f47f af5d 	bne.w	8009cf2 <USART2_IRQHandler+0x86>
 8009e38:	2200      	movs	r2, #0
 8009e3a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e3e:	2209      	movs	r2, #9
 8009e40:	e7c9      	b.n	8009dd6 <USART2_IRQHandler+0x16a>
 8009e42:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e46:	545a      	strb	r2, [r3, r1]
 8009e48:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8009e4c:	3101      	adds	r1, #1
 8009e4e:	3201      	adds	r2, #1
 8009e50:	b292      	uxth	r2, r2
 8009e52:	2a0c      	cmp	r2, #12
 8009e54:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e58:	d002      	beq.n	8009e60 <USART2_IRQHandler+0x1f4>
 8009e5a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e5e:	e748      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009e60:	2200      	movs	r2, #0
 8009e62:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e66:	220a      	movs	r2, #10
 8009e68:	e7b5      	b.n	8009dd6 <USART2_IRQHandler+0x16a>
 8009e6a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e6e:	545a      	strb	r2, [r3, r1]
 8009e70:	1c4a      	adds	r2, r1, #1
 8009e72:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8009e76:	b292      	uxth	r2, r2
 8009e78:	3101      	adds	r1, #1
 8009e7a:	b289      	uxth	r1, r1
 8009e7c:	2904      	cmp	r1, #4
 8009e7e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009e82:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8009e86:	f47f af34 	bne.w	8009cf2 <USART2_IRQHandler+0x86>
 8009e8a:	2100      	movs	r1, #0
 8009e8c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009e90:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009e94:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009e98:	4b08      	ldr	r3, [pc, #32]	; (8009ebc <USART2_IRQHandler+0x250>)
 8009e9a:	685a      	ldr	r2, [r3, #4]
 8009e9c:	4b08      	ldr	r3, [pc, #32]	; (8009ec0 <USART2_IRQHandler+0x254>)
 8009e9e:	601a      	str	r2, [r3, #0]
 8009ea0:	e727      	b.n	8009cf2 <USART2_IRQHandler+0x86>
 8009ea2:	2200      	movs	r2, #0
 8009ea4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009ea8:	e795      	b.n	8009dd6 <USART2_IRQHandler+0x16a>
 8009eaa:	bf00      	nop
 8009eac:	40010000 	andmi	r0, r1, r0
 8009eb0:	20000718 	andcs	r0, r0, r8, lsl r7
 8009eb4:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009eb8:	00cc0001 	sbceq	r0, ip, r1
 8009ebc:	e0001000 	and	r1, r0, r0
 8009ec0:	20000b48 	andcs	r0, r0, r8, asr #22

08009ec4 <TIMER1_IRQHandler>:
 8009ec4:	b538      	push	{r3, r4, r5, lr}
 8009ec6:	f3bf 8f5f 	dmb	sy
 8009eca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009ece:	2008      	movs	r0, #8
 8009ed0:	691c      	ldr	r4, [r3, #16]
 8009ed2:	4923      	ldr	r1, [pc, #140]	; (8009f60 <TIMER1_IRQHandler+0x9c>)
 8009ed4:	4a23      	ldr	r2, [pc, #140]	; (8009f64 <TIMER1_IRQHandler+0xa0>)
 8009ed6:	8813      	ldrh	r3, [r2, #0]
 8009ed8:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8009edc:	07a1      	lsls	r1, r4, #30
 8009ede:	d51b      	bpl.n	8009f18 <TIMER1_IRQHandler+0x54>
 8009ee0:	07dd      	lsls	r5, r3, #31
 8009ee2:	d50d      	bpl.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009ee4:	4d20      	ldr	r5, [pc, #128]	; (8009f68 <TIMER1_IRQHandler+0xa4>)
 8009ee6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009eea:	8013      	strh	r3, [r2, #0]
 8009eec:	2110      	movs	r1, #16
 8009eee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009ef2:	2203      	movs	r2, #3
 8009ef4:	4628      	mov	r0, r5
 8009ef6:	f005 fb79 	bl	800f5ec <gpio_init>
 8009efa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009efe:	616b      	str	r3, [r5, #20]
 8009f00:	4621      	mov	r1, r4
 8009f02:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009f06:	f005 fe5e 	bl	800fbc6 <timer_interrupt_flag_clear>
 8009f0a:	2208      	movs	r2, #8
 8009f0c:	4b14      	ldr	r3, [pc, #80]	; (8009f60 <TIMER1_IRQHandler+0x9c>)
 8009f0e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009f12:	f3bf 8f5f 	dmb	sy
 8009f16:	bd38      	pop	{r3, r4, r5, pc}
 8009f18:	0760      	lsls	r0, r4, #29
 8009f1a:	d509      	bpl.n	8009f30 <TIMER1_IRQHandler+0x6c>
 8009f1c:	05d9      	lsls	r1, r3, #23
 8009f1e:	d5ef      	bpl.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009f20:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009f24:	2203      	movs	r2, #3
 8009f26:	2118      	movs	r1, #24
 8009f28:	480f      	ldr	r0, [pc, #60]	; (8009f68 <TIMER1_IRQHandler+0xa4>)
 8009f2a:	f005 fb5f 	bl	800f5ec <gpio_init>
 8009f2e:	e7e7      	b.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009f30:	0722      	lsls	r2, r4, #28
 8009f32:	d5e5      	bpl.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009f34:	05db      	lsls	r3, r3, #23
 8009f36:	d5e3      	bpl.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009f38:	4b0c      	ldr	r3, [pc, #48]	; (8009f6c <TIMER1_IRQHandler+0xa8>)
 8009f3a:	2180      	movs	r1, #128	; 0x80
 8009f3c:	69da      	ldr	r2, [r3, #28]
 8009f3e:	480c      	ldr	r0, [pc, #48]	; (8009f70 <TIMER1_IRQHandler+0xac>)
 8009f40:	f022 0201 	bic.w	r2, r2, #1
 8009f44:	61da      	str	r2, [r3, #28]
 8009f46:	4a0b      	ldr	r2, [pc, #44]	; (8009f74 <TIMER1_IRQHandler+0xb0>)
 8009f48:	629a      	str	r2, [r3, #40]	; 0x28
 8009f4a:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8009f4e:	621a      	str	r2, [r3, #32]
 8009f50:	69da      	ldr	r2, [r3, #28]
 8009f52:	f042 0201 	orr.w	r2, r2, #1
 8009f56:	61da      	str	r2, [r3, #28]
 8009f58:	f005 fed4 	bl	800fd04 <usart_dma_transmit_config>
 8009f5c:	e7d0      	b.n	8009f00 <TIMER1_IRQHandler+0x3c>
 8009f5e:	bf00      	nop
 8009f60:	40010000 	andmi	r0, r1, r0
 8009f64:	20000b30 	andcs	r0, r0, r0, lsr fp
 8009f68:	40011000 	andmi	r1, r1, r0
 8009f6c:	40020000 	andmi	r0, r2, r0
 8009f70:	40004800 	andmi	r4, r0, r0, lsl #16
 8009f74:	20000928 	andcs	r0, r0, r8, lsr #18

08009f78 <TIMER2_IRQHandler>:
 8009f78:	b508      	push	{r3, lr}
 8009f7a:	f3bf 8f5f 	dmb	sy
 8009f7e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f82:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8009f86:	078b      	lsls	r3, r1, #30
 8009f88:	d511      	bpl.n	8009fae <TIMER2_IRQHandler+0x36>
 8009f8a:	4b0c      	ldr	r3, [pc, #48]	; (8009fbc <TIMER2_IRQHandler+0x44>)
 8009f8c:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009f90:	2a04      	cmp	r2, #4
 8009f92:	d10c      	bne.n	8009fae <TIMER2_IRQHandler+0x36>
 8009f94:	2200      	movs	r2, #0
 8009f96:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009f9a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009f9e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009fa2:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009fa6:	2210      	movs	r2, #16
 8009fa8:	4b05      	ldr	r3, [pc, #20]	; (8009fc0 <TIMER2_IRQHandler+0x48>)
 8009faa:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8009fae:	4805      	ldr	r0, [pc, #20]	; (8009fc4 <TIMER2_IRQHandler+0x4c>)
 8009fb0:	f005 fe09 	bl	800fbc6 <timer_interrupt_flag_clear>
 8009fb4:	f3bf 8f5f 	dmb	sy
 8009fb8:	bd08      	pop	{r3, pc}
 8009fba:	bf00      	nop
 8009fbc:	20000718 	andcs	r0, r0, r8, lsl r7
 8009fc0:	40010000 	andmi	r0, r1, r0
 8009fc4:	40000400 	andmi	r0, r0, r0, lsl #8

08009fc8 <TIMER3_IRQHandler>:
 8009fc8:	b508      	push	{r3, lr}
 8009fca:	f3bf 8f5f 	dmb	sy
 8009fce:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009fd2:	4804      	ldr	r0, [pc, #16]	; (8009fe4 <TIMER3_IRQHandler+0x1c>)
 8009fd4:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8009fd8:	f005 fdf5 	bl	800fbc6 <timer_interrupt_flag_clear>
 8009fdc:	f3bf 8f5f 	dmb	sy
 8009fe0:	bd08      	pop	{r3, pc}
 8009fe2:	bf00      	nop
 8009fe4:	40000800 	andmi	r0, r0, r0, lsl #16

08009fe8 <TIMER6_IRQHandler>:
 8009fe8:	b508      	push	{r3, lr}
 8009fea:	f3bf 8f5f 	dmb	sy
 8009fee:	4b07      	ldr	r3, [pc, #28]	; (800a00c <TIMER6_IRQHandler+0x24>)
 8009ff0:	4807      	ldr	r0, [pc, #28]	; (800a010 <TIMER6_IRQHandler+0x28>)
 8009ff2:	685a      	ldr	r2, [r3, #4]
 8009ff4:	6899      	ldr	r1, [r3, #8]
 8009ff6:	1a52      	subs	r2, r2, r1
 8009ff8:	601a      	str	r2, [r3, #0]
 8009ffa:	685a      	ldr	r2, [r3, #4]
 8009ffc:	2101      	movs	r1, #1
 8009ffe:	609a      	str	r2, [r3, #8]
 800a000:	f005 fde1 	bl	800fbc6 <timer_interrupt_flag_clear>
 800a004:	f3bf 8f5f 	dmb	sy
 800a008:	bd08      	pop	{r3, pc}
 800a00a:	bf00      	nop
 800a00c:	20000b34 	andcs	r0, r0, r4, lsr fp
 800a010:	40001400 	andmi	r1, r0, r0, lsl #8

0800a014 <Dmx::ClearData(unsigned int)>:
 800a014:	f44f 7301 	mov.w	r3, #516	; 0x204
 800a018:	b510      	push	{r4, lr}
 800a01a:	2400      	movs	r4, #0
 800a01c:	4a08      	ldr	r2, [pc, #32]	; (800a040 <Dmx::ClearData(unsigned int)+0x2c>)
 800a01e:	fb03 2301 	mla	r3, r3, r1, r2
 800a022:	f203 2002 	addw	r0, r3, #514	; 0x202
 800a026:	f823 4b02 	strh.w	r4, [r3], #2
 800a02a:	4283      	cmp	r3, r0
 800a02c:	d1fb      	bne.n	800a026 <Dmx::ClearData(unsigned int)+0x12>
 800a02e:	f44f 7301 	mov.w	r3, #516	; 0x204
 800a032:	fb03 2201 	mla	r2, r3, r1, r2
 800a036:	f240 2301 	movw	r3, #513	; 0x201
 800a03a:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800a03e:	bd10      	pop	{r4, pc}
 800a040:	20000928 	andcs	r0, r0, r8, lsr #18

0800a044 <Dmx::StartData(unsigned int, unsigned int)>:
 800a044:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a046:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800a04a:	6943      	ldr	r3, [r0, #20]
 800a04c:	460c      	mov	r4, r1
 800a04e:	4615      	mov	r5, r2
 800a050:	b085      	sub	sp, #20
 800a052:	2b00      	cmp	r3, #0
 800a054:	d16a      	bne.n	800a12c <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800a056:	4e47      	ldr	r6, [pc, #284]	; (800a174 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800a058:	8834      	ldrh	r4, [r6, #0]
 800a05a:	2c00      	cmp	r4, #0
 800a05c:	d15b      	bne.n	800a116 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800a05e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800a062:	f005 fb5b 	bl	800f71c <rcu_periph_clock_enable>
 800a066:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a06a:	f005 fcb5 	bl	800f9d8 <timer_deinit>
 800a06e:	236b      	movs	r3, #107	; 0x6b
 800a070:	9300      	str	r3, [sp, #0]
 800a072:	4b41      	ldr	r3, [pc, #260]	; (800a178 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800a074:	4669      	mov	r1, sp
 800a076:	681b      	ldr	r3, [r3, #0]
 800a078:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a07c:	9302      	str	r3, [sp, #8]
 800a07e:	f8ad 4004 	strh.w	r4, [sp, #4]
 800a082:	f8ad 400c 	strh.w	r4, [sp, #12]
 800a086:	f88d 400e 	strb.w	r4, [sp, #14]
 800a08a:	f005 fd07 	bl	800fa9c <timer_init>
 800a08e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a092:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a096:	f005 fd99 	bl	800fbcc <timer_flag_clear>
 800a09a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a09e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0a2:	f005 fd90 	bl	800fbc6 <timer_interrupt_flag_clear>
 800a0a6:	2210      	movs	r2, #16
 800a0a8:	4621      	mov	r1, r4
 800a0aa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0ae:	f005 fd52 	bl	800fb56 <timer_channel_output_mode_config>
 800a0b2:	2210      	movs	r2, #16
 800a0b4:	2101      	movs	r1, #1
 800a0b6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0ba:	f005 fd4c 	bl	800fb56 <timer_channel_output_mode_config>
 800a0be:	4f2f      	ldr	r7, [pc, #188]	; (800a17c <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800a0c0:	2210      	movs	r2, #16
 800a0c2:	2102      	movs	r1, #2
 800a0c4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0c8:	f005 fd45 	bl	800fb56 <timer_channel_output_mode_config>
 800a0cc:	4622      	mov	r2, r4
 800a0ce:	4621      	mov	r1, r4
 800a0d0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0d4:	f005 fd65 	bl	800fba2 <timer_channel_output_pulse_value_config>
 800a0d8:	2101      	movs	r1, #1
 800a0da:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0de:	883a      	ldrh	r2, [r7, #0]
 800a0e0:	f005 fd5f 	bl	800fba2 <timer_channel_output_pulse_value_config>
 800a0e4:	4b26      	ldr	r3, [pc, #152]	; (800a180 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800a0e6:	683a      	ldr	r2, [r7, #0]
 800a0e8:	681b      	ldr	r3, [r3, #0]
 800a0ea:	2102      	movs	r1, #2
 800a0ec:	441a      	add	r2, r3
 800a0ee:	b292      	uxth	r2, r2
 800a0f0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0f4:	f005 fd55 	bl	800fba2 <timer_channel_output_pulse_value_config>
 800a0f8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0fc:	210e      	movs	r1, #14
 800a0fe:	f005 fd5e 	bl	800fbbe <timer_interrupt_enable>
 800a102:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a106:	4b1f      	ldr	r3, [pc, #124]	; (800a184 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800a108:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a10c:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800a110:	601a      	str	r2, [r3, #0]
 800a112:	f005 fd1b 	bl	800fb4c <timer_enable>
 800a116:	2201      	movs	r2, #1
 800a118:	8831      	ldrh	r1, [r6, #0]
 800a11a:	fa02 f305 	lsl.w	r3, r2, r5
 800a11e:	430b      	orrs	r3, r1
 800a120:	8033      	strh	r3, [r6, #0]
 800a122:	4b19      	ldr	r3, [pc, #100]	; (800a188 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a124:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a128:	b005      	add	sp, #20
 800a12a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a12c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a130:	4b16      	ldr	r3, [pc, #88]	; (800a18c <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800a132:	fb02 3305 	mla	r3, r2, r5, r3
 800a136:	2200      	movs	r2, #0
 800a138:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a13c:	2107      	movs	r1, #7
 800a13e:	4620      	mov	r0, r4
 800a140:	f005 fde6 	bl	800fd10 <usart_flag_get>
 800a144:	2800      	cmp	r0, #0
 800a146:	d0f9      	beq.n	800a13c <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800a148:	4620      	mov	r0, r4
 800a14a:	4911      	ldr	r1, [pc, #68]	; (800a190 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800a14c:	f005 fe02 	bl	800fd54 <usart_interrupt_flag_clear>
 800a150:	f240 3105 	movw	r1, #773	; 0x305
 800a154:	4620      	mov	r0, r4
 800a156:	f005 fde6 	bl	800fd26 <usart_interrupt_enable>
 800a15a:	2202      	movs	r2, #2
 800a15c:	4b0a      	ldr	r3, [pc, #40]	; (800a188 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a15e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a162:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a166:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a16a:	f043 0302 	orr.w	r3, r3, #2
 800a16e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a172:	e7d9      	b.n	800a128 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800a174:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a178:	20000008 	andcs	r0, r0, r8
 800a17c:	20000010 	andcs	r0, r0, r0, lsl r0
 800a180:	2000000c 	andcs	r0, r0, ip
 800a184:	e000e100 	and	lr, r0, r0, lsl #2
 800a188:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a18c:	20000718 	andcs	r0, r0, r8, lsl r7
 800a190:	00050305 	andeq	r0, r5, r5, lsl #6

0800a194 <Dmx::StopData(unsigned int, unsigned int)>:
 800a194:	b538      	push	{r3, r4, r5, lr}
 800a196:	4d17      	ldr	r5, [pc, #92]	; (800a1f4 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 800a198:	4614      	mov	r4, r2
 800a19a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800a19e:	4603      	mov	r3, r0
 800a1a0:	4608      	mov	r0, r1
 800a1a2:	b182      	cbz	r2, 800a1c6 <Dmx::StopData(unsigned int, unsigned int)+0x32>
 800a1a4:	695b      	ldr	r3, [r3, #20]
 800a1a6:	b97b      	cbnz	r3, 800a1c8 <Dmx::StopData(unsigned int, unsigned int)+0x34>
 800a1a8:	2201      	movs	r2, #1
 800a1aa:	4913      	ldr	r1, [pc, #76]	; (800a1f8 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 800a1ac:	f104 0308 	add.w	r3, r4, #8
 800a1b0:	fa02 f303 	lsl.w	r3, r2, r3
 800a1b4:	40a2      	lsls	r2, r4
 800a1b6:	4313      	orrs	r3, r2
 800a1b8:	880a      	ldrh	r2, [r1, #0]
 800a1ba:	ea22 0303 	bic.w	r3, r2, r3
 800a1be:	800b      	strh	r3, [r1, #0]
 800a1c0:	2300      	movs	r3, #0
 800a1c2:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800a1c6:	bd38      	pop	{r3, r4, r5, pc}
 800a1c8:	f240 3105 	movw	r1, #773	; 0x305
 800a1cc:	f005 fdb6 	bl	800fd3c <usart_interrupt_disable>
 800a1d0:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a1d4:	4b09      	ldr	r3, [pc, #36]	; (800a1fc <Dmx::StopData(unsigned int, unsigned int)+0x68>)
 800a1d6:	fb02 3304 	mla	r3, r2, r4, r3
 800a1da:	2200      	movs	r2, #0
 800a1dc:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a1e0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a1e4:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a1e8:	f023 0302 	bic.w	r3, r3, #2
 800a1ec:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a1f0:	e7e6      	b.n	800a1c0 <Dmx::StopData(unsigned int, unsigned int)+0x2c>
 800a1f2:	bf00      	nop
 800a1f4:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a1f8:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a1fc:	20000718 	andcs	r0, r0, r8, lsl r7

0800a200 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800a200:	b570      	push	{r4, r5, r6, lr}
 800a202:	461d      	mov	r5, r3
 800a204:	6943      	ldr	r3, [r0, #20]
 800a206:	4606      	mov	r6, r0
 800a208:	4293      	cmp	r3, r2
 800a20a:	4614      	mov	r4, r2
 800a20c:	d014      	beq.n	800a238 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800a20e:	6142      	str	r2, [r0, #20]
 800a210:	4910      	ldr	r1, [pc, #64]	; (800a254 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a212:	2200      	movs	r2, #0
 800a214:	f7ff ffbe 	bl	800a194 <Dmx::StopData(unsigned int, unsigned int)>
 800a218:	b934      	cbnz	r4, 800a228 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800a21a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a21e:	4b0e      	ldr	r3, [pc, #56]	; (800a258 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a220:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800a224:	b94d      	cbnz	r5, 800a23a <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800a226:	bd70      	pop	{r4, r5, r6, pc}
 800a228:	2c01      	cmp	r4, #1
 800a22a:	d1fb      	bne.n	800a224 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a22c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a230:	4b09      	ldr	r3, [pc, #36]	; (800a258 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a232:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800a236:	e7f5      	b.n	800a224 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a238:	b135      	cbz	r5, 800a248 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800a23a:	4630      	mov	r0, r6
 800a23c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a240:	2200      	movs	r2, #0
 800a242:	4904      	ldr	r1, [pc, #16]	; (800a254 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a244:	f7ff befe 	b.w	800a044 <Dmx::StartData(unsigned int, unsigned int)>
 800a248:	462a      	mov	r2, r5
 800a24a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a24e:	4901      	ldr	r1, [pc, #4]	; (800a254 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a250:	f7ff bfa0 	b.w	800a194 <Dmx::StopData(unsigned int, unsigned int)>
 800a254:	40004800 	andmi	r4, r0, r0, lsl #16
 800a258:	40010000 	andmi	r0, r1, r0

0800a25c <Dmx::Dmx()>:
 800a25c:	225c      	movs	r2, #92	; 0x5c
 800a25e:	230c      	movs	r3, #12
 800a260:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a264:	e9c0 2300 	strd	r2, r3, [r0]
 800a268:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800a26c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800a270:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a274:	2400      	movs	r4, #0
 800a276:	4605      	mov	r5, r0
 800a278:	8203      	strh	r3, [r0, #16]
 800a27a:	4b5d      	ldr	r3, [pc, #372]	; (800a3f0 <Dmx::Dmx()+0x194>)
 800a27c:	b08b      	sub	sp, #44	; 0x2c
 800a27e:	6018      	str	r0, [r3, #0]
 800a280:	4b5c      	ldr	r3, [pc, #368]	; (800a3f4 <Dmx::Dmx()+0x198>)
 800a282:	2203      	movs	r2, #3
 800a284:	801c      	strh	r4, [r3, #0]
 800a286:	2110      	movs	r1, #16
 800a288:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a28c:	485a      	ldr	r0, [pc, #360]	; (800a3f8 <Dmx::Dmx()+0x19c>)
 800a28e:	f005 f9ad 	bl	800f5ec <gpio_init>
 800a292:	4621      	mov	r1, r4
 800a294:	4628      	mov	r0, r5
 800a296:	f7ff febd 	bl	800a014 <Dmx::ClearData(unsigned int)>
 800a29a:	4b58      	ldr	r3, [pc, #352]	; (800a3fc <Dmx::Dmx()+0x1a0>)
 800a29c:	2201      	movs	r2, #1
 800a29e:	4628      	mov	r0, r5
 800a2a0:	601c      	str	r4, [r3, #0]
 800a2a2:	4623      	mov	r3, r4
 800a2a4:	f7ff ffac 	bl	800a200 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800a2a8:	4b55      	ldr	r3, [pc, #340]	; (800a400 <Dmx::Dmx()+0x1a4>)
 800a2aa:	4e56      	ldr	r6, [pc, #344]	; (800a404 <Dmx::Dmx()+0x1a8>)
 800a2ac:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800a2b0:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800a2b4:	f005 fa32 	bl	800f71c <rcu_periph_clock_enable>
 800a2b8:	f240 5001 	movw	r0, #1281	; 0x501
 800a2bc:	f005 fa2e 	bl	800f71c <rcu_periph_clock_enable>
 800a2c0:	4630      	mov	r0, r6
 800a2c2:	2101      	movs	r1, #1
 800a2c4:	f005 f892 	bl	800f3ec <dma_deinit>
 800a2c8:	4b4f      	ldr	r3, [pc, #316]	; (800a408 <Dmx::Dmx()+0x1ac>)
 800a2ca:	2701      	movs	r7, #1
 800a2cc:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800a2d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800a2d4:	9308      	str	r3, [sp, #32]
 800a2d6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a2da:	aa03      	add	r2, sp, #12
 800a2dc:	4639      	mov	r1, r7
 800a2de:	4630      	mov	r0, r6
 800a2e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a2e4:	9406      	str	r4, [sp, #24]
 800a2e6:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a2ea:	f005 f89b 	bl	800f424 <dma_init>
 800a2ee:	4639      	mov	r1, r7
 800a2f0:	4630      	mov	r0, r6
 800a2f2:	f005 f8d1 	bl	800f498 <dma_circulation_disable>
 800a2f6:	4639      	mov	r1, r7
 800a2f8:	4630      	mov	r0, r6
 800a2fa:	f005 f8dd 	bl	800f4b8 <dma_memory_to_memory_disable>
 800a2fe:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800a302:	f240 7001 	movw	r0, #1793	; 0x701
 800a306:	f005 fa09 	bl	800f71c <rcu_periph_clock_enable>
 800a30a:	4630      	mov	r0, r6
 800a30c:	f005 fb64 	bl	800f9d8 <timer_deinit>
 800a310:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800a314:	236b      	movs	r3, #107	; 0x6b
 800a316:	4630      	mov	r0, r6
 800a318:	a903      	add	r1, sp, #12
 800a31a:	9303      	str	r3, [sp, #12]
 800a31c:	f8ad 4010 	strh.w	r4, [sp, #16]
 800a320:	f8cd 9014 	str.w	r9, [sp, #20]
 800a324:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a328:	f88d 401a 	strb.w	r4, [sp, #26]
 800a32c:	f005 fbb6 	bl	800fa9c <timer_init>
 800a330:	4649      	mov	r1, r9
 800a332:	4630      	mov	r0, r6
 800a334:	f005 fc4a 	bl	800fbcc <timer_flag_clear>
 800a338:	4649      	mov	r1, r9
 800a33a:	4630      	mov	r0, r6
 800a33c:	f005 fc43 	bl	800fbc6 <timer_interrupt_flag_clear>
 800a340:	4621      	mov	r1, r4
 800a342:	4630      	mov	r0, r6
 800a344:	2210      	movs	r2, #16
 800a346:	f005 fc06 	bl	800fb56 <timer_channel_output_mode_config>
 800a34a:	4639      	mov	r1, r7
 800a34c:	4630      	mov	r0, r6
 800a34e:	2210      	movs	r2, #16
 800a350:	f005 fc01 	bl	800fb56 <timer_channel_output_mode_config>
 800a354:	4630      	mov	r0, r6
 800a356:	2210      	movs	r2, #16
 800a358:	2102      	movs	r1, #2
 800a35a:	f005 fbfc 	bl	800fb56 <timer_channel_output_mode_config>
 800a35e:	2210      	movs	r2, #16
 800a360:	2103      	movs	r1, #3
 800a362:	4630      	mov	r0, r6
 800a364:	f005 fbf7 	bl	800fb56 <timer_channel_output_mode_config>
 800a368:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800a36c:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800a40c <Dmx::Dmx()+0x1b0>
 800a370:	4630      	mov	r0, r6
 800a372:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800a376:	f8c8 3000 	str.w	r3, [r8]
 800a37a:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800a37e:	f005 fbe5 	bl	800fb4c <timer_enable>
 800a382:	f240 7005 	movw	r0, #1797	; 0x705
 800a386:	f005 f9c9 	bl	800f71c <rcu_periph_clock_enable>
 800a38a:	4630      	mov	r0, r6
 800a38c:	f005 fb24 	bl	800f9d8 <timer_deinit>
 800a390:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800a394:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a398:	f242 7310 	movw	r3, #10000	; 0x2710
 800a39c:	4630      	mov	r0, r6
 800a39e:	a903      	add	r1, sp, #12
 800a3a0:	9305      	str	r3, [sp, #20]
 800a3a2:	f005 fb7b 	bl	800fa9c <timer_init>
 800a3a6:	4649      	mov	r1, r9
 800a3a8:	4630      	mov	r0, r6
 800a3aa:	f005 fc0f 	bl	800fbcc <timer_flag_clear>
 800a3ae:	4649      	mov	r1, r9
 800a3b0:	4630      	mov	r0, r6
 800a3b2:	f005 fc08 	bl	800fbc6 <timer_interrupt_flag_clear>
 800a3b6:	4639      	mov	r1, r7
 800a3b8:	4630      	mov	r0, r6
 800a3ba:	f005 fc00 	bl	800fbbe <timer_interrupt_enable>
 800a3be:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800a3c2:	4630      	mov	r0, r6
 800a3c4:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800a3c8:	f8c8 3004 	str.w	r3, [r8, #4]
 800a3cc:	f005 fbbe 	bl	800fb4c <timer_enable>
 800a3d0:	2302      	movs	r3, #2
 800a3d2:	2208      	movs	r2, #8
 800a3d4:	9300      	str	r3, [sp, #0]
 800a3d6:	490e      	ldr	r1, [pc, #56]	; (800a410 <Dmx::Dmx()+0x1b4>)
 800a3d8:	4623      	mov	r3, r4
 800a3da:	480e      	ldr	r0, [pc, #56]	; (800a414 <Dmx::Dmx()+0x1b8>)
 800a3dc:	f005 ff32 	bl	8010244 <gd32_uart_begin>
 800a3e0:	2380      	movs	r3, #128	; 0x80
 800a3e2:	4628      	mov	r0, r5
 800a3e4:	f8c8 3004 	str.w	r3, [r8, #4]
 800a3e8:	b00b      	add	sp, #44	; 0x2c
 800a3ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3ee:	bf00      	nop
 800a3f0:	20000b44 	andcs	r0, r0, r4, asr #22
 800a3f4:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a3f8:	40010c00 	andmi	r0, r1, r0, lsl #24
 800a3fc:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a400:	20000718 	andcs	r0, r0, r8, lsl r7
 800a404:	40020000 	andmi	r0, r2, r0
 800a408:	40004804 	andmi	r4, r0, r4, lsl #16
 800a40c:	e000e100 	and	lr, r0, r0, lsl #2
 800a410:	0003d090 	muleq	r3, r0, r0
 800a414:	40004800 	andmi	r4, r0, r0, lsl #16

0800a418 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800a418:	4b13      	ldr	r3, [pc, #76]	; (800a468 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800a41a:	b570      	push	{r4, r5, r6, lr}
 800a41c:	60c1      	str	r1, [r0, #12]
 800a41e:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800a422:	232c      	movs	r3, #44	; 0x2c
 800a424:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800a428:	4d10      	ldr	r5, [pc, #64]	; (800a46c <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800a42a:	4c11      	ldr	r4, [pc, #68]	; (800a470 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800a42c:	4358      	muls	r0, r3
 800a42e:	682a      	ldr	r2, [r5, #0]
 800a430:	6823      	ldr	r3, [r4, #0]
 800a432:	4413      	add	r3, r2
 800a434:	4403      	add	r3, r0
 800a436:	42b3      	cmp	r3, r6
 800a438:	d908      	bls.n	800a44c <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800a43a:	2ab0      	cmp	r2, #176	; 0xb0
 800a43c:	4613      	mov	r3, r2
 800a43e:	bf28      	it	cs
 800a440:	23b0      	movcs	r3, #176	; 0xb0
 800a442:	220c      	movs	r2, #12
 800a444:	602b      	str	r3, [r5, #0]
 800a446:	4413      	add	r3, r2
 800a448:	6022      	str	r2, [r4, #0]
 800a44a:	4403      	add	r3, r0
 800a44c:	b109      	cbz	r1, 800a452 <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 800a44e:	428b      	cmp	r3, r1
 800a450:	d906      	bls.n	800a460 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 800a452:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800a456:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800a45a:	4299      	cmp	r1, r3
 800a45c:	bf38      	it	cc
 800a45e:	4619      	movcc	r1, r3
 800a460:	4b04      	ldr	r3, [pc, #16]	; (800a474 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800a462:	6019      	str	r1, [r3, #0]
 800a464:	bd70      	pop	{r4, r5, r6, pc}
 800a466:	bf00      	nop
 800a468:	20000928 	andcs	r0, r0, r8, lsr #18
 800a46c:	20000010 	andcs	r0, r0, r0, lsl r0
 800a470:	2000000c 	andcs	r0, r0, ip
 800a474:	20000008 	andcs	r0, r0, r8

0800a478 <Dmx::SetDmxBreakTime(unsigned int)>:
 800a478:	295c      	cmp	r1, #92	; 0x5c
 800a47a:	bf38      	it	cc
 800a47c:	215c      	movcc	r1, #92	; 0x5c
 800a47e:	4b02      	ldr	r3, [pc, #8]	; (800a488 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800a480:	6019      	str	r1, [r3, #0]
 800a482:	68c1      	ldr	r1, [r0, #12]
 800a484:	f7ff bfc8 	b.w	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a488:	20000010 	andcs	r0, r0, r0, lsl r0

0800a48c <Dmx::SetDmxMabTime(unsigned int)>:
 800a48c:	290c      	cmp	r1, #12
 800a48e:	bf38      	it	cc
 800a490:	210c      	movcc	r1, #12
 800a492:	4b02      	ldr	r3, [pc, #8]	; (800a49c <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800a494:	6019      	str	r1, [r3, #0]
 800a496:	68c1      	ldr	r1, [r0, #12]
 800a498:	f7ff bfbe 	b.w	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a49c:	2000000c 	andcs	r0, r0, ip

0800a4a0 <Dmx::SetDmxSlots(unsigned short)>:
 800a4a0:	1e8b      	subs	r3, r1, #2
 800a4a2:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800a4a6:	d809      	bhi.n	800a4bc <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800a4a8:	6983      	ldr	r3, [r0, #24]
 800a4aa:	8201      	strh	r1, [r0, #16]
 800a4ac:	b11b      	cbz	r3, 800a4b6 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800a4ae:	4299      	cmp	r1, r3
 800a4b0:	bf94      	ite	ls
 800a4b2:	6181      	strls	r1, [r0, #24]
 800a4b4:	6183      	strhi	r3, [r0, #24]
 800a4b6:	68c1      	ldr	r1, [r0, #12]
 800a4b8:	f7ff bfae 	b.w	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4bc:	4770      	bx	lr
	...

0800a4c0 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800a4c0:	b4f0      	push	{r4, r5, r6, r7}
 800a4c2:	8a04      	ldrh	r4, [r0, #16]
 800a4c4:	4d11      	ldr	r5, [pc, #68]	; (800a50c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800a4c6:	42a3      	cmp	r3, r4
 800a4c8:	bf28      	it	cs
 800a4ca:	4623      	movcs	r3, r4
 800a4cc:	f44f 7401 	mov.w	r4, #516	; 0x204
 800a4d0:	434c      	muls	r4, r1
 800a4d2:	1c5f      	adds	r7, r3, #1
 800a4d4:	192e      	adds	r6, r5, r4
 800a4d6:	f892 f000 	pld	[r2]
 800a4da:	3401      	adds	r4, #1
 800a4dc:	442c      	add	r4, r5
 800a4de:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800a4e2:	18d5      	adds	r5, r2, r3
 800a4e4:	4295      	cmp	r5, r2
 800a4e6:	d109      	bne.n	800a4fc <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x3c>
 800a4e8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a4ec:	698a      	ldr	r2, [r1, #24]
 800a4ee:	429a      	cmp	r2, r3
 800a4f0:	d009      	beq.n	800a506 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800a4f2:	bcf0      	pop	{r4, r5, r6, r7}
 800a4f4:	618b      	str	r3, [r1, #24]
 800a4f6:	68c1      	ldr	r1, [r0, #12]
 800a4f8:	f7ff bf8e 	b.w	800a418 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4fc:	f812 6b01 	ldrb.w	r6, [r2], #1
 800a500:	f804 6b01 	strb.w	r6, [r4], #1
 800a504:	e7ee      	b.n	800a4e4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800a506:	bcf0      	pop	{r4, r5, r6, r7}
 800a508:	4770      	bx	lr
 800a50a:	bf00      	nop
 800a50c:	20000928 	andcs	r0, r0, r8, lsr #18

0800a510 <RemoteConfig::HandleList()>:
 800a510:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a514:	6801      	ldr	r1, [r0, #0]
 800a516:	4604      	mov	r4, r0
 800a518:	2012      	movs	r0, #18
 800a51a:	f04f 080c 	mov.w	r8, #12
 800a51e:	4a2b      	ldr	r2, [pc, #172]	; (800a5cc <RemoteConfig::HandleList()+0xbc>)
 800a520:	4b2b      	ldr	r3, [pc, #172]	; (800a5d0 <RemoteConfig::HandleList()+0xc0>)
 800a522:	fb00 2201 	mla	r2, r0, r1, r2
 800a526:	6860      	ldr	r0, [r4, #4]
 800a528:	492a      	ldr	r1, [pc, #168]	; (800a5d4 <RemoteConfig::HandleList()+0xc4>)
 800a52a:	681b      	ldr	r3, [r3, #0]
 800a52c:	fb08 1100 	mla	r1, r8, r0, r1
 800a530:	4e29      	ldr	r6, [pc, #164]	; (800a5d8 <RemoteConfig::HandleList()+0xc8>)
 800a532:	482a      	ldr	r0, [pc, #168]	; (800a5dc <RemoteConfig::HandleList()+0xcc>)
 800a534:	691f      	ldr	r7, [r3, #16]
 800a536:	6835      	ldr	r5, [r6, #0]
 800a538:	f890 9009 	ldrb.w	r9, [r0, #9]
 800a53c:	b2fb      	uxtb	r3, r7
 800a53e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800a542:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800a546:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a54a:	b089      	sub	sp, #36	; 0x24
 800a54c:	3507      	adds	r5, #7
 800a54e:	0e3f      	lsrs	r7, r7, #24
 800a550:	f1b9 0f00 	cmp.w	r9, #0
 800a554:	d020      	beq.n	800a598 <RemoteConfig::HandleList()+0x88>
 800a556:	3009      	adds	r0, #9
 800a558:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a55c:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800a560:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a564:	4628      	mov	r0, r5
 800a566:	e9cd e701 	strd	lr, r7, [sp, #4]
 800a56a:	4a1d      	ldr	r2, [pc, #116]	; (800a5e0 <RemoteConfig::HandleList()+0xd0>)
 800a56c:	f8cd c000 	str.w	ip, [sp]
 800a570:	f7fe f964 	bl	800883c <snprintf>
 800a574:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a578:	2b05      	cmp	r3, #5
 800a57a:	d11a      	bne.n	800a5b2 <RemoteConfig::HandleList()+0xa2>
 800a57c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a580:	9300      	str	r3, [sp, #0]
 800a582:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a586:	b282      	uxth	r2, r0
 800a588:	4629      	mov	r1, r5
 800a58a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a58e:	f002 f959 	bl	800c844 <udp_send>
 800a592:	b009      	add	sp, #36	; 0x24
 800a594:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a598:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800a59c:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800a5a0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a5a4:	4628      	mov	r0, r5
 800a5a6:	e9cd ce00 	strd	ip, lr, [sp]
 800a5aa:	4a0e      	ldr	r2, [pc, #56]	; (800a5e4 <RemoteConfig::HandleList()+0xd4>)
 800a5ac:	f7fe f946 	bl	800883c <snprintf>
 800a5b0:	e7e0      	b.n	800a574 <RemoteConfig::HandleList()+0x64>
 800a5b2:	2b06      	cmp	r3, #6
 800a5b4:	d1ed      	bne.n	800a592 <RemoteConfig::HandleList()+0x82>
 800a5b6:	6833      	ldr	r3, [r6, #0]
 800a5b8:	799b      	ldrb	r3, [r3, #6]
 800a5ba:	2b2a      	cmp	r3, #42	; 0x2a
 800a5bc:	d1e9      	bne.n	800a592 <RemoteConfig::HandleList()+0x82>
 800a5be:	f642 1305 	movw	r3, #10501	; 0x2905
 800a5c2:	9300      	str	r3, [sp, #0]
 800a5c4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a5c8:	e7dd      	b.n	800a586 <RemoteConfig::HandleList()+0x76>
 800a5ca:	bf00      	nop
 800a5cc:	08011386 	stmdaeq	r1, {r1, r2, r7, r8, r9, ip}
 800a5d0:	2000948c 	andcs	r9, r0, ip, lsl #9
 800a5d4:	08011428 	stmdaeq	r1, {r3, r5, sl, ip}
 800a5d8:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a5dc:	20000b50 	andcs	r0, r0, r0, asr fp
 800a5e0:	080112c0 	stmdaeq	r1, {r6, r7, r9, ip}
 800a5e4:	080112d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip}

0800a5e8 <RemoteConfig::HandleDisplayGet()>:
 800a5e8:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a5ec:	2b08      	cmp	r3, #8
 800a5ee:	d11d      	bne.n	800a62c <RemoteConfig::HandleDisplayGet()+0x44>
 800a5f0:	4b0f      	ldr	r3, [pc, #60]	; (800a630 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a5f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a5f4:	681b      	ldr	r3, [r3, #0]
 800a5f6:	4d0f      	ldr	r5, [pc, #60]	; (800a634 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a5f8:	7c19      	ldrb	r1, [r3, #16]
 800a5fa:	4a0f      	ldr	r2, [pc, #60]	; (800a638 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a5fc:	4b0f      	ldr	r3, [pc, #60]	; (800a63c <RemoteConfig::HandleDisplayGet()+0x54>)
 800a5fe:	4604      	mov	r4, r0
 800a600:	2900      	cmp	r1, #0
 800a602:	bf18      	it	ne
 800a604:	4613      	movne	r3, r2
 800a606:	6828      	ldr	r0, [r5, #0]
 800a608:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a60c:	4a0c      	ldr	r2, [pc, #48]	; (800a640 <RemoteConfig::HandleDisplayGet()+0x58>)
 800a60e:	f7fe f915 	bl	800883c <snprintf>
 800a612:	f642 1305 	movw	r3, #10501	; 0x2905
 800a616:	9300      	str	r3, [sp, #0]
 800a618:	b282      	uxth	r2, r0
 800a61a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a61e:	6829      	ldr	r1, [r5, #0]
 800a620:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a624:	f002 f90e 	bl	800c844 <udp_send>
 800a628:	b003      	add	sp, #12
 800a62a:	bd30      	pop	{r4, r5, pc}
 800a62c:	4770      	bx	lr
 800a62e:	bf00      	nop
 800a630:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800a634:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a638:	080112f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, ip}
 800a63c:	080112ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, ip}
 800a640:	080112f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, ip}

0800a644 <RemoteConfig::HandleTftpSet()>:
 800a644:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800a648:	2a06      	cmp	r2, #6
 800a64a:	d109      	bne.n	800a660 <RemoteConfig::HandleTftpSet()+0x1c>
 800a64c:	4a05      	ldr	r2, [pc, #20]	; (800a664 <RemoteConfig::HandleTftpSet()+0x20>)
 800a64e:	6812      	ldr	r2, [r2, #0]
 800a650:	7992      	ldrb	r2, [r2, #6]
 800a652:	3a30      	subs	r2, #48	; 0x30
 800a654:	bf18      	it	ne
 800a656:	2201      	movne	r2, #1
 800a658:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800a65c:	f000 bd7e 	b.w	800b15c <RemoteConfig::PlatformHandleTftpSet()>
 800a660:	4770      	bx	lr
 800a662:	bf00      	nop
 800a664:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a668 <RemoteConfig::HandleTftpGet()>:
 800a668:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a66a:	4604      	mov	r4, r0
 800a66c:	f000 fd7e 	bl	800b16c <RemoteConfig::PlatformHandleTftpGet()>
 800a670:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a674:	2b05      	cmp	r3, #5
 800a676:	d118      	bne.n	800a6aa <RemoteConfig::HandleTftpGet()+0x42>
 800a678:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800a67c:	4d0c      	ldr	r5, [pc, #48]	; (800a6b0 <RemoteConfig::HandleTftpGet()+0x48>)
 800a67e:	4a0d      	ldr	r2, [pc, #52]	; (800a6b4 <RemoteConfig::HandleTftpGet()+0x4c>)
 800a680:	4b0d      	ldr	r3, [pc, #52]	; (800a6b8 <RemoteConfig::HandleTftpGet()+0x50>)
 800a682:	6828      	ldr	r0, [r5, #0]
 800a684:	2900      	cmp	r1, #0
 800a686:	bf08      	it	eq
 800a688:	4613      	moveq	r3, r2
 800a68a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a68e:	4a0b      	ldr	r2, [pc, #44]	; (800a6bc <RemoteConfig::HandleTftpGet()+0x54>)
 800a690:	f7fe f8d4 	bl	800883c <snprintf>
 800a694:	f642 1305 	movw	r3, #10501	; 0x2905
 800a698:	b282      	uxth	r2, r0
 800a69a:	9300      	str	r3, [sp, #0]
 800a69c:	6829      	ldr	r1, [r5, #0]
 800a69e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a6a2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a6a6:	f002 f8cd 	bl	800c844 <udp_send>
 800a6aa:	b003      	add	sp, #12
 800a6ac:	bd30      	pop	{r4, r5, pc}
 800a6ae:	bf00      	nop
 800a6b0:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a6b4:	080112f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, ip}
 800a6b8:	080112ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, ip}
 800a6bc:	08011302 	stmdaeq	r1, {r1, r8, r9, ip}

0800a6c0 <RemoteConfig::HandleVersion()>:
 800a6c0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a6c4:	2b08      	cmp	r3, #8
 800a6c6:	d116      	bne.n	800a6f6 <RemoteConfig::HandleVersion()+0x36>
 800a6c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a6ca:	4d0b      	ldr	r5, [pc, #44]	; (800a6f8 <RemoteConfig::HandleVersion()+0x38>)
 800a6cc:	4604      	mov	r4, r0
 800a6ce:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a6d2:	4b0a      	ldr	r3, [pc, #40]	; (800a6fc <RemoteConfig::HandleVersion()+0x3c>)
 800a6d4:	4a0a      	ldr	r2, [pc, #40]	; (800a700 <RemoteConfig::HandleVersion()+0x40>)
 800a6d6:	6828      	ldr	r0, [r5, #0]
 800a6d8:	f7fe f8b0 	bl	800883c <snprintf>
 800a6dc:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6e0:	9300      	str	r3, [sp, #0]
 800a6e2:	b282      	uxth	r2, r0
 800a6e4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a6e8:	6829      	ldr	r1, [r5, #0]
 800a6ea:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a6ee:	f002 f8a9 	bl	800c844 <udp_send>
 800a6f2:	b003      	add	sp, #12
 800a6f4:	bd30      	pop	{r4, r5, pc}
 800a6f6:	4770      	bx	lr
 800a6f8:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a6fc:	20009b62 	andcs	r9, r0, r2, ror #22
 800a700:	0801130b 	stmdaeq	r1, {r0, r1, r3, r8, r9, ip}

0800a704 <RemoteConfig::HandleUptime()>:
 800a704:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800a708:	b1fb      	cbz	r3, 800a74a <RemoteConfig::HandleUptime()+0x46>
 800a70a:	4b10      	ldr	r3, [pc, #64]	; (800a74c <RemoteConfig::HandleUptime()+0x48>)
 800a70c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a70e:	681a      	ldr	r2, [r3, #0]
 800a710:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a714:	4604      	mov	r4, r0
 800a716:	2b07      	cmp	r3, #7
 800a718:	d115      	bne.n	800a746 <RemoteConfig::HandleUptime()+0x42>
 800a71a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a71e:	4d0c      	ldr	r5, [pc, #48]	; (800a750 <RemoteConfig::HandleUptime()+0x4c>)
 800a720:	fbb2 f3f3 	udiv	r3, r2, r3
 800a724:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a728:	4a0a      	ldr	r2, [pc, #40]	; (800a754 <RemoteConfig::HandleUptime()+0x50>)
 800a72a:	6828      	ldr	r0, [r5, #0]
 800a72c:	f7fe f886 	bl	800883c <snprintf>
 800a730:	f642 1305 	movw	r3, #10501	; 0x2905
 800a734:	9300      	str	r3, [sp, #0]
 800a736:	b282      	uxth	r2, r0
 800a738:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a73c:	6829      	ldr	r1, [r5, #0]
 800a73e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a742:	f002 f87f 	bl	800c844 <udp_send>
 800a746:	b003      	add	sp, #12
 800a748:	bd30      	pop	{r4, r5, pc}
 800a74a:	4770      	bx	lr
 800a74c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800a750:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a754:	08011316 	stmdaeq	r1, {r1, r2, r4, r8, r9, ip}

0800a758 <RemoteConfig::HandleDisplaySet()>:
 800a758:	b538      	push	{r3, r4, r5, lr}
 800a75a:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a75e:	2b09      	cmp	r3, #9
 800a760:	d113      	bne.n	800a78a <RemoteConfig::HandleDisplaySet()+0x32>
 800a762:	4b0a      	ldr	r3, [pc, #40]	; (800a78c <RemoteConfig::HandleDisplaySet()+0x34>)
 800a764:	681c      	ldr	r4, [r3, #0]
 800a766:	4b0a      	ldr	r3, [pc, #40]	; (800a790 <RemoteConfig::HandleDisplaySet()+0x38>)
 800a768:	69a0      	ldr	r0, [r4, #24]
 800a76a:	681b      	ldr	r3, [r3, #0]
 800a76c:	7a5d      	ldrb	r5, [r3, #9]
 800a76e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800a772:	4259      	negs	r1, r3
 800a774:	4159      	adcs	r1, r3
 800a776:	b140      	cbz	r0, 800a78a <RemoteConfig::HandleDisplaySet()+0x32>
 800a778:	6803      	ldr	r3, [r0, #0]
 800a77a:	7421      	strb	r1, [r4, #16]
 800a77c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a77e:	4798      	blx	r3
 800a780:	2d30      	cmp	r5, #48	; 0x30
 800a782:	bf1e      	ittt	ne
 800a784:	4b03      	ldrne	r3, [pc, #12]	; (800a794 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800a786:	681b      	ldrne	r3, [r3, #0]
 800a788:	6063      	strne	r3, [r4, #4]
 800a78a:	bd38      	pop	{r3, r4, r5, pc}
 800a78c:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800a790:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a794:	20009bc4 	andcs	r9, r0, r4, asr #23

0800a798 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a798:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a79c:	f100 0a0c 	add.w	sl, r0, #12
 800a7a0:	4604      	mov	r4, r0
 800a7a2:	e9c0 1200 	strd	r1, r2, [r0]
 800a7a6:	6083      	str	r3, [r0, #8]
 800a7a8:	4650      	mov	r0, sl
 800a7aa:	4690      	mov	r8, r2
 800a7ac:	4689      	mov	r9, r1
 800a7ae:	461f      	mov	r7, r3
 800a7b0:	f000 fd1c 	bl	800b1ec <HttpDaemon::HttpDaemon()>
 800a7b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a7b8:	2500      	movs	r5, #0
 800a7ba:	4e16      	ldr	r6, [pc, #88]	; (800a814 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800a7bc:	f8df b058 	ldr.w	fp, [pc, #88]	; 800a818 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800a7c0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a7c4:	4b15      	ldr	r3, [pc, #84]	; (800a81c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800a7c6:	4631      	mov	r1, r6
 800a7c8:	f8db 0000 	ldr.w	r0, [fp]
 800a7cc:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800a7d0:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800a7d4:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800a7d8:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800a7dc:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800a7e0:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800a7e4:	601c      	str	r4, [r3, #0]
 800a7e6:	f002 fcf9 	bl	800d1dc <Network::MacAddressCopyTo(unsigned char*)>
 800a7ea:	f642 1105 	movw	r1, #10501	; 0x2905
 800a7ee:	f8db 0000 	ldr.w	r0, [fp]
 800a7f2:	f886 9006 	strb.w	r9, [r6, #6]
 800a7f6:	f886 8007 	strb.w	r8, [r6, #7]
 800a7fa:	7237      	strb	r7, [r6, #8]
 800a7fc:	7275      	strb	r5, [r6, #9]
 800a7fe:	f002 fce7 	bl	800d1d0 <Network::Begin(unsigned short)>
 800a802:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a806:	4650      	mov	r0, sl
 800a808:	f000 fd08 	bl	800b21c <HttpDaemon::Start()>
 800a80c:	4620      	mov	r0, r4
 800a80e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a812:	bf00      	nop
 800a814:	20000b50 	andcs	r0, r0, r0, asr fp
 800a818:	2000948c 	andcs	r9, r0, ip, lsl #9
 800a81c:	20000b74 	andcs	r0, r0, r4, ror fp

0800a820 <RemoteConfig::GetStringNode() const>:
 800a820:	2012      	movs	r0, #18
 800a822:	4b03      	ldr	r3, [pc, #12]	; (800a830 <RemoteConfig::GetStringNode() const+0x10>)
 800a824:	799a      	ldrb	r2, [r3, #6]
 800a826:	4b03      	ldr	r3, [pc, #12]	; (800a834 <RemoteConfig::GetStringNode() const+0x14>)
 800a828:	fb00 3002 	mla	r0, r0, r2, r3
 800a82c:	4770      	bx	lr
 800a82e:	bf00      	nop
 800a830:	20000b50 	andcs	r0, r0, r0, asr fp
 800a834:	08011386 	stmdaeq	r1, {r1, r2, r7, r8, r9, ip}

0800a838 <RemoteConfig::GetStringOutput() const>:
 800a838:	200c      	movs	r0, #12
 800a83a:	4b03      	ldr	r3, [pc, #12]	; (800a848 <RemoteConfig::GetStringOutput() const+0x10>)
 800a83c:	79da      	ldrb	r2, [r3, #7]
 800a83e:	4b03      	ldr	r3, [pc, #12]	; (800a84c <RemoteConfig::GetStringOutput() const+0x14>)
 800a840:	fb00 3002 	mla	r0, r0, r2, r3
 800a844:	4770      	bx	lr
 800a846:	bf00      	nop
 800a848:	20000b50 	andcs	r0, r0, r0, asr fp
 800a84c:	08011428 	stmdaeq	r1, {r3, r5, sl, ip}

0800a850 <RemoteConfig::SetDisable(bool)>:
 800a850:	b538      	push	{r3, r4, r5, lr}
 800a852:	4604      	mov	r4, r0
 800a854:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800a858:	b171      	cbz	r1, 800a878 <RemoteConfig::SetDisable(bool)+0x28>
 800a85a:	b963      	cbnz	r3, 800a876 <RemoteConfig::SetDisable(bool)+0x26>
 800a85c:	4b0d      	ldr	r3, [pc, #52]	; (800a894 <RemoteConfig::SetDisable(bool)+0x44>)
 800a85e:	f642 1105 	movw	r1, #10501	; 0x2905
 800a862:	6818      	ldr	r0, [r3, #0]
 800a864:	f002 fcb7 	bl	800d1d6 <Network::End(unsigned short)>
 800a868:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a86c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a870:	2301      	movs	r3, #1
 800a872:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800a876:	bd38      	pop	{r3, r4, r5, pc}
 800a878:	2b00      	cmp	r3, #0
 800a87a:	d0fc      	beq.n	800a876 <RemoteConfig::SetDisable(bool)+0x26>
 800a87c:	4b05      	ldr	r3, [pc, #20]	; (800a894 <RemoteConfig::SetDisable(bool)+0x44>)
 800a87e:	460d      	mov	r5, r1
 800a880:	6818      	ldr	r0, [r3, #0]
 800a882:	f642 1105 	movw	r1, #10501	; 0x2905
 800a886:	f002 fca3 	bl	800d1d0 <Network::Begin(unsigned short)>
 800a88a:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800a88e:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a892:	e7f0      	b.n	800a876 <RemoteConfig::SetDisable(bool)+0x26>
 800a894:	2000948c 	andcs	r9, r0, ip, lsl #9

0800a898 <RemoteConfig::SetDisplayName(char const*)>:
 800a898:	2217      	movs	r2, #23
 800a89a:	4809      	ldr	r0, [pc, #36]	; (800a8c0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a89c:	b508      	push	{r3, lr}
 800a89e:	1e4b      	subs	r3, r1, #1
 800a8a0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a8a4:	b911      	cbnz	r1, 800a8ac <RemoteConfig::SetDisplayName(char const*)+0x14>
 800a8a6:	f004 fb79 	bl	800ef9c <memset>
 800a8aa:	e003      	b.n	800a8b4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a8ac:	3a01      	subs	r2, #1
 800a8ae:	f800 1b01 	strb.w	r1, [r0], #1
 800a8b2:	d1f5      	bne.n	800a8a0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a8b4:	2200      	movs	r2, #0
 800a8b6:	4b03      	ldr	r3, [pc, #12]	; (800a8c4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a8b8:	f883 2020 	strb.w	r2, [r3, #32]
 800a8bc:	bd08      	pop	{r3, pc}
 800a8be:	bf00      	nop
 800a8c0:	20000b59 	andcs	r0, r0, r9, asr fp
 800a8c4:	20000b50 	andcs	r0, r0, r0, asr fp

0800a8c8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800a8c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8ca:	4604      	mov	r4, r0
 800a8cc:	4616      	mov	r6, r2
 800a8ce:	460d      	mov	r5, r1
 800a8d0:	4f2a      	ldr	r7, [pc, #168]	; (800a97c <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a8d2:	b085      	sub	sp, #20
 800a8d4:	b9b9      	cbnz	r1, 800a906 <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800a8d6:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800a8da:	6839      	ldr	r1, [r7, #0]
 800a8dc:	aa03      	add	r2, sp, #12
 800a8de:	3105      	adds	r1, #5
 800a8e0:	9303      	str	r3, [sp, #12]
 800a8e2:	f000 fc11 	bl	800b108 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a8e6:	1e03      	subs	r3, r0, #0
 800a8e8:	da1d      	bge.n	800a926 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a8ea:	f642 1305 	movw	r3, #10501	; 0x2905
 800a8ee:	220b      	movs	r2, #11
 800a8f0:	9300      	str	r3, [sp, #0]
 800a8f2:	4923      	ldr	r1, [pc, #140]	; (800a980 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a8f4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a8f8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a8fc:	f001 ffa2 	bl	800c844 <udp_send>
 800a900:	200c      	movs	r0, #12
 800a902:	b005      	add	sp, #20
 800a904:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a906:	9203      	str	r2, [sp, #12]
 800a908:	aa03      	add	r2, sp, #12
 800a90a:	6039      	str	r1, [r7, #0]
 800a90c:	f000 fbfc 	bl	800b108 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a910:	1e03      	subs	r3, r0, #0
 800a912:	da08      	bge.n	800a926 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a914:	2e0b      	cmp	r6, #11
 800a916:	4632      	mov	r2, r6
 800a918:	4628      	mov	r0, r5
 800a91a:	bf28      	it	cs
 800a91c:	220b      	movcs	r2, #11
 800a91e:	4918      	ldr	r1, [pc, #96]	; (800a980 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a920:	f004 fb1a 	bl	800ef58 <memcpy>
 800a924:	e7ec      	b.n	800a900 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800a926:	221c      	movs	r2, #28
 800a928:	4353      	muls	r3, r2
 800a92a:	4916      	ldr	r1, [pc, #88]	; (800a984 <RemoteConfig::HandleGet(void*, unsigned int)+0xbc>)
 800a92c:	18ca      	adds	r2, r1, r3
 800a92e:	6852      	ldr	r2, [r2, #4]
 800a930:	58cb      	ldr	r3, [r1, r3]
 800a932:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a936:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a93a:	07d2      	lsls	r2, r2, #31
 800a93c:	bf48      	it	mi
 800a93e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a942:	a903      	add	r1, sp, #12
 800a944:	bf48      	it	mi
 800a946:	58d3      	ldrmi	r3, [r2, r3]
 800a948:	4798      	blx	r3
 800a94a:	b96d      	cbnz	r5, 800a968 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800a94c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a950:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a954:	9300      	str	r3, [sp, #0]
 800a956:	6839      	ldr	r1, [r7, #0]
 800a958:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a95c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a960:	f001 ff70 	bl	800c844 <udp_send>
 800a964:	9803      	ldr	r0, [sp, #12]
 800a966:	e7cc      	b.n	800a902 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800a968:	9a03      	ldr	r2, [sp, #12]
 800a96a:	4628      	mov	r0, r5
 800a96c:	42b2      	cmp	r2, r6
 800a96e:	bf28      	it	cs
 800a970:	4632      	movcs	r2, r6
 800a972:	6839      	ldr	r1, [r7, #0]
 800a974:	f004 fafb 	bl	800ef6e <memmove>
 800a978:	e7f4      	b.n	800a964 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800a97a:	bf00      	nop
 800a97c:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a980:	08011323 	stmdaeq	r1, {r0, r1, r5, r8, r9, ip}
 800a984:	080115b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip}

0800a988 <RemoteConfig::HandleGetNoParams()>:
 800a988:	2200      	movs	r2, #0
 800a98a:	4611      	mov	r1, r2
 800a98c:	f7ff bf9c 	b.w	800a8c8 <RemoteConfig::HandleGet(void*, unsigned int)>

0800a990 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800a990:	b510      	push	{r4, lr}
 800a992:	460c      	mov	r4, r1
 800a994:	4b07      	ldr	r3, [pc, #28]	; (800a9b4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800a996:	b08a      	sub	sp, #40	; 0x28
 800a998:	6819      	ldr	r1, [r3, #0]
 800a99a:	a801      	add	r0, sp, #4
 800a99c:	f000 f9ce 	bl	800ad3c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a9a0:	4905      	ldr	r1, [pc, #20]	; (800a9b8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800a9a2:	4623      	mov	r3, r4
 800a9a4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a9a8:	6809      	ldr	r1, [r1, #0]
 800a9aa:	a801      	add	r0, sp, #4
 800a9ac:	f000 faea 	bl	800af84 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800a9b0:	b00a      	add	sp, #40	; 0x28
 800a9b2:	bd10      	pop	{r4, pc}
 800a9b4:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a9b8:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a9bc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800a9bc:	b513      	push	{r0, r1, r4, lr}
 800a9be:	460c      	mov	r4, r1
 800a9c0:	4b07      	ldr	r3, [pc, #28]	; (800a9e0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800a9c2:	a801      	add	r0, sp, #4
 800a9c4:	6819      	ldr	r1, [r3, #0]
 800a9c6:	f002 fde5 	bl	800d594 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a9ca:	4906      	ldr	r1, [pc, #24]	; (800a9e4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800a9cc:	4623      	mov	r3, r4
 800a9ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a9d2:	6809      	ldr	r1, [r1, #0]
 800a9d4:	a801      	add	r0, sp, #4
 800a9d6:	f002 ffcb 	bl	800d970 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800a9da:	b002      	add	sp, #8
 800a9dc:	bd10      	pop	{r4, pc}
 800a9de:	bf00      	nop
 800a9e0:	20001b98 	mulcs	r0, r8, fp
 800a9e4:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a9e8 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 800a9e8:	b510      	push	{r4, lr}
 800a9ea:	460c      	mov	r4, r1
 800a9ec:	4b07      	ldr	r3, [pc, #28]	; (800aa0c <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 800a9ee:	b0e4      	sub	sp, #400	; 0x190
 800a9f0:	6819      	ldr	r1, [r3, #0]
 800a9f2:	4668      	mov	r0, sp
 800a9f4:	f7fe fbca 	bl	800918c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800a9f8:	4905      	ldr	r1, [pc, #20]	; (800aa10 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 800a9fa:	4623      	mov	r3, r4
 800a9fc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa00:	4668      	mov	r0, sp
 800aa02:	6809      	ldr	r1, [r1, #0]
 800aa04:	f7fe fd5c 	bl	80094c0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 800aa08:	b064      	add	sp, #400	; 0x190
 800aa0a:	bd10      	pop	{r4, pc}
 800aa0c:	20001b9c 	mulcs	r0, ip, fp
 800aa10:	20000b4c 	andcs	r0, r0, ip, asr #22

0800aa14 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800aa14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800aa16:	460c      	mov	r4, r1
 800aa18:	4b07      	ldr	r3, [pc, #28]	; (800aa38 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800aa1a:	4668      	mov	r0, sp
 800aa1c:	6819      	ldr	r1, [r3, #0]
 800aa1e:	f7fe ffc9 	bl	80099b4 <DmxParams::DmxParams(DmxParamsStore*)>
 800aa22:	4906      	ldr	r1, [pc, #24]	; (800aa3c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800aa24:	4623      	mov	r3, r4
 800aa26:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800aa2a:	4668      	mov	r0, sp
 800aa2c:	6809      	ldr	r1, [r1, #0]
 800aa2e:	f7ff f8e3 	bl	8009bf8 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800aa32:	b004      	add	sp, #16
 800aa34:	bd10      	pop	{r4, pc}
 800aa36:	bf00      	nop
 800aa38:	20001b94 	mulcs	r0, r4, fp
 800aa3c:	20000b4c 	andcs	r0, r0, ip, asr #22

0800aa40 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800aa40:	b530      	push	{r4, r5, lr}
 800aa42:	b085      	sub	sp, #20
 800aa44:	4604      	mov	r4, r0
 800aa46:	9201      	str	r2, [sp, #4]
 800aa48:	b9d1      	cbnz	r1, 800aa80 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800aa4a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800aa4e:	9303      	str	r3, [sp, #12]
 800aa50:	4b1b      	ldr	r3, [pc, #108]	; (800aac0 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800aa52:	aa03      	add	r2, sp, #12
 800aa54:	6819      	ldr	r1, [r3, #0]
 800aa56:	3101      	adds	r1, #1
 800aa58:	f000 fb56 	bl	800b108 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa5c:	2800      	cmp	r0, #0
 800aa5e:	db0d      	blt.n	800aa7c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800aa60:	221c      	movs	r2, #28
 800aa62:	4b18      	ldr	r3, [pc, #96]	; (800aac4 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800aa64:	fb02 3300 	mla	r3, r2, r0, r3
 800aa68:	68da      	ldr	r2, [r3, #12]
 800aa6a:	689b      	ldr	r3, [r3, #8]
 800aa6c:	1051      	asrs	r1, r2, #1
 800aa6e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aa72:	07d2      	lsls	r2, r2, #31
 800aa74:	bf44      	itt	mi
 800aa76:	5862      	ldrmi	r2, [r4, r1]
 800aa78:	58d3      	ldrmi	r3, [r2, r3]
 800aa7a:	4798      	blx	r3
 800aa7c:	b005      	add	sp, #20
 800aa7e:	bd30      	pop	{r4, r5, pc}
 800aa80:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800aa84:	4613      	mov	r3, r2
 800aa86:	d8f9      	bhi.n	800aa7c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800aa88:	2200      	movs	r2, #0
 800aa8a:	460d      	mov	r5, r1
 800aa8c:	490e      	ldr	r1, [pc, #56]	; (800aac8 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800aa8e:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800aa92:	7809      	ldrb	r1, [r1, #0]
 800aa94:	07c9      	lsls	r1, r1, #31
 800aa96:	d50a      	bpl.n	800aaae <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800aa98:	7829      	ldrb	r1, [r5, #0]
 800aa9a:	297b      	cmp	r1, #123	; 0x7b
 800aa9c:	d107      	bne.n	800aaae <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800aa9e:	3b01      	subs	r3, #1
 800aaa0:	b299      	uxth	r1, r3
 800aaa2:	4628      	mov	r0, r5
 800aaa4:	f003 fb3a 	bl	800e11c <properties::convert_json_file(char*, unsigned short, bool)>
 800aaa8:	1e03      	subs	r3, r0, #0
 800aaaa:	dde7      	ble.n	800aa7c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800aaac:	b29b      	uxth	r3, r3
 800aaae:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800aab2:	4b03      	ldr	r3, [pc, #12]	; (800aac0 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800aab4:	4620      	mov	r0, r4
 800aab6:	601d      	str	r5, [r3, #0]
 800aab8:	aa01      	add	r2, sp, #4
 800aaba:	1c69      	adds	r1, r5, #1
 800aabc:	e7cc      	b.n	800aa58 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800aabe:	bf00      	nop
 800aac0:	20000b4c 	andcs	r0, r0, ip, asr #22
 800aac4:	080115b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip}
 800aac8:	20009aba 			; <UNDEFINED> instruction: 0x20009aba

0800aacc <RemoteConfig::Run()>:
 800aacc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800aad0:	f890 55d4 	ldrb.w	r5, [r0, #1492]	; 0x5d4
 800aad4:	2d00      	cmp	r5, #0
 800aad6:	d15d      	bne.n	800ab94 <RemoteConfig::Run()+0xc8>
 800aad8:	4604      	mov	r4, r0
 800aada:	4e4a      	ldr	r6, [pc, #296]	; (800ac04 <RemoteConfig::Run()+0x138>)
 800aadc:	300c      	adds	r0, #12
 800aade:	f000 fe17 	bl	800b710 <HttpDaemon::Run()>
 800aae2:	4631      	mov	r1, r6
 800aae4:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800aae8:	f10d 030e 	add.w	r3, sp, #14
 800aaec:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800aaf0:	f001 fe82 	bl	800c7f8 <udp_recv2>
 800aaf4:	2803      	cmp	r0, #3
 800aaf6:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800aafa:	d94b      	bls.n	800ab94 <RemoteConfig::Run()+0xc8>
 800aafc:	6831      	ldr	r1, [r6, #0]
 800aafe:	1e43      	subs	r3, r0, #1
 800ab00:	5cca      	ldrb	r2, [r1, r3]
 800ab02:	2a0a      	cmp	r2, #10
 800ab04:	bf18      	it	ne
 800ab06:	4603      	movne	r3, r0
 800ab08:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800ab0c:	7808      	ldrb	r0, [r1, #0]
 800ab0e:	283f      	cmp	r0, #63	; 0x3f
 800ab10:	d135      	bne.n	800ab7e <RemoteConfig::Run()+0xb2>
 800ab12:	483d      	ldr	r0, [pc, #244]	; (800ac08 <RemoteConfig::Run()+0x13c>)
 800ab14:	462a      	mov	r2, r5
 800ab16:	4607      	mov	r7, r0
 800ab18:	3b01      	subs	r3, #1
 800ab1a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800ab1e:	7b86      	ldrb	r6, [r0, #14]
 800ab20:	8985      	ldrh	r5, [r0, #12]
 800ab22:	b176      	cbz	r6, 800ab42 <RemoteConfig::Run()+0x76>
 800ab24:	42ab      	cmp	r3, r5
 800ab26:	d80e      	bhi.n	800ab46 <RemoteConfig::Run()+0x7a>
 800ab28:	3201      	adds	r2, #1
 800ab2a:	2a09      	cmp	r2, #9
 800ab2c:	f100 0010 	add.w	r0, r0, #16
 800ab30:	d1f5      	bne.n	800ab1e <RemoteConfig::Run()+0x52>
 800ab32:	f642 1305 	movw	r3, #10501	; 0x2905
 800ab36:	9300      	str	r3, [sp, #0]
 800ab38:	2208      	movs	r2, #8
 800ab3a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ab3e:	4933      	ldr	r1, [pc, #204]	; (800ac0c <RemoteConfig::Run()+0x140>)
 800ab40:	e052      	b.n	800abe8 <RemoteConfig::Run()+0x11c>
 800ab42:	42ab      	cmp	r3, r5
 800ab44:	d1f0      	bne.n	800ab28 <RemoteConfig::Run()+0x5c>
 800ab46:	6886      	ldr	r6, [r0, #8]
 800ab48:	f101 0c01 	add.w	ip, r1, #1
 800ab4c:	4435      	add	r5, r6
 800ab4e:	42b5      	cmp	r5, r6
 800ab50:	d10b      	bne.n	800ab6a <RemoteConfig::Run()+0x9e>
 800ab52:	0113      	lsls	r3, r2, #4
 800ab54:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800ab58:	6852      	ldr	r2, [r2, #4]
 800ab5a:	58fb      	ldr	r3, [r7, r3]
 800ab5c:	1051      	asrs	r1, r2, #1
 800ab5e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ab62:	07d2      	lsls	r2, r2, #31
 800ab64:	d408      	bmi.n	800ab78 <RemoteConfig::Run()+0xac>
 800ab66:	4798      	blx	r3
 800ab68:	e014      	b.n	800ab94 <RemoteConfig::Run()+0xc8>
 800ab6a:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800ab6e:	f816 eb01 	ldrb.w	lr, [r6], #1
 800ab72:	45f0      	cmp	r8, lr
 800ab74:	d0eb      	beq.n	800ab4e <RemoteConfig::Run()+0x82>
 800ab76:	e7d7      	b.n	800ab28 <RemoteConfig::Run()+0x5c>
 800ab78:	5862      	ldr	r2, [r4, r1]
 800ab7a:	58d3      	ldr	r3, [r2, r3]
 800ab7c:	e7f3      	b.n	800ab66 <RemoteConfig::Run()+0x9a>
 800ab7e:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800ab82:	b93a      	cbnz	r2, 800ab94 <RemoteConfig::Run()+0xc8>
 800ab84:	2823      	cmp	r0, #35	; 0x23
 800ab86:	d108      	bne.n	800ab9a <RemoteConfig::Run()+0xce>
 800ab88:	4611      	mov	r1, r2
 800ab8a:	4620      	mov	r0, r4
 800ab8c:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800ab90:	f7ff ff56 	bl	800aa40 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ab94:	b004      	add	sp, #16
 800ab96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab9a:	2821      	cmp	r0, #33	; 0x21
 800ab9c:	d1fa      	bne.n	800ab94 <RemoteConfig::Run()+0xc8>
 800ab9e:	3b01      	subs	r3, #1
 800aba0:	2b05      	cmp	r3, #5
 800aba2:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800aba6:	d918      	bls.n	800abda <RemoteConfig::Run()+0x10e>
 800aba8:	1c4a      	adds	r2, r1, #1
 800abaa:	4610      	mov	r0, r2
 800abac:	4d18      	ldr	r5, [pc, #96]	; (800ac10 <RemoteConfig::Run()+0x144>)
 800abae:	f101 0c06 	add.w	ip, r1, #6
 800abb2:	4560      	cmp	r0, ip
 800abb4:	d01d      	beq.n	800abf2 <RemoteConfig::Run()+0x126>
 800abb6:	f810 7b01 	ldrb.w	r7, [r0], #1
 800abba:	f815 6b01 	ldrb.w	r6, [r5], #1
 800abbe:	42b7      	cmp	r7, r6
 800abc0:	d0f7      	beq.n	800abb2 <RemoteConfig::Run()+0xe6>
 800abc2:	2b08      	cmp	r3, #8
 800abc4:	d909      	bls.n	800abda <RemoteConfig::Run()+0x10e>
 800abc6:	4b13      	ldr	r3, [pc, #76]	; (800ac14 <RemoteConfig::Run()+0x148>)
 800abc8:	3109      	adds	r1, #9
 800abca:	428a      	cmp	r2, r1
 800abcc:	d017      	beq.n	800abfe <RemoteConfig::Run()+0x132>
 800abce:	f812 5b01 	ldrb.w	r5, [r2], #1
 800abd2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800abd6:	4285      	cmp	r5, r0
 800abd8:	d0f7      	beq.n	800abca <RemoteConfig::Run()+0xfe>
 800abda:	f642 1305 	movw	r3, #10501	; 0x2905
 800abde:	2208      	movs	r2, #8
 800abe0:	9300      	str	r3, [sp, #0]
 800abe2:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800abe6:	490c      	ldr	r1, [pc, #48]	; (800ac18 <RemoteConfig::Run()+0x14c>)
 800abe8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800abec:	f001 fe2a 	bl	800c844 <udp_send>
 800abf0:	e7d0      	b.n	800ab94 <RemoteConfig::Run()+0xc8>
 800abf2:	2300      	movs	r3, #0
 800abf4:	4a09      	ldr	r2, [pc, #36]	; (800ac1c <RemoteConfig::Run()+0x150>)
 800abf6:	011b      	lsls	r3, r3, #4
 800abf8:	4620      	mov	r0, r4
 800abfa:	58d3      	ldr	r3, [r2, r3]
 800abfc:	e7b3      	b.n	800ab66 <RemoteConfig::Run()+0x9a>
 800abfe:	2301      	movs	r3, #1
 800ac00:	e7f8      	b.n	800abf4 <RemoteConfig::Run()+0x128>
 800ac02:	bf00      	nop
 800ac04:	20000b4c 	andcs	r0, r0, ip, asr #22
 800ac08:	080114b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, ip}
 800ac0c:	08011347 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, ip}
 800ac10:	0801132f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, ip}
 800ac14:	08011335 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, ip}
 800ac18:	0801133e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, ip}
 800ac1c:	08011548 	stmdaeq	r1, {r3, r6, r8, sl, ip}

0800ac20 <RemoteConfig::HandleSetRconfig()>:
 800ac20:	b510      	push	{r4, lr}
 800ac22:	4604      	mov	r4, r0
 800ac24:	4b09      	ldr	r3, [pc, #36]	; (800ac4c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800ac26:	b08a      	sub	sp, #40	; 0x28
 800ac28:	6819      	ldr	r1, [r3, #0]
 800ac2a:	a801      	add	r0, sp, #4
 800ac2c:	f000 f886 	bl	800ad3c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ac30:	4b07      	ldr	r3, [pc, #28]	; (800ac50 <RemoteConfig::HandleSetRconfig()+0x30>)
 800ac32:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac36:	6819      	ldr	r1, [r3, #0]
 800ac38:	a801      	add	r0, sp, #4
 800ac3a:	f000 f895 	bl	800ad68 <RemoteConfigParams::Load(char const*, unsigned int)>
 800ac3e:	4621      	mov	r1, r4
 800ac40:	a801      	add	r0, sp, #4
 800ac42:	f000 f9ac 	bl	800af9e <RemoteConfigParams::Set(RemoteConfig*)>
 800ac46:	b00a      	add	sp, #40	; 0x28
 800ac48:	bd10      	pop	{r4, pc}
 800ac4a:	bf00      	nop
 800ac4c:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800ac50:	20000b4c 	andcs	r0, r0, ip, asr #22

0800ac54 <RemoteConfig::HandleSetNetworkTxt()>:
 800ac54:	b513      	push	{r0, r1, r4, lr}
 800ac56:	4604      	mov	r4, r0
 800ac58:	4b06      	ldr	r3, [pc, #24]	; (800ac74 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800ac5a:	a801      	add	r0, sp, #4
 800ac5c:	6819      	ldr	r1, [r3, #0]
 800ac5e:	f002 fc99 	bl	800d594 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ac62:	4b05      	ldr	r3, [pc, #20]	; (800ac78 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800ac64:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac68:	6819      	ldr	r1, [r3, #0]
 800ac6a:	a801      	add	r0, sp, #4
 800ac6c:	f002 fcb2 	bl	800d5d4 <NetworkParams::Load(char const*, unsigned int)>
 800ac70:	b002      	add	sp, #8
 800ac72:	bd10      	pop	{r4, pc}
 800ac74:	20001b98 	mulcs	r0, r8, fp
 800ac78:	20000b4c 	andcs	r0, r0, ip, asr #22

0800ac7c <RemoteConfig::HandleSetOscTxt()>:
 800ac7c:	b510      	push	{r4, lr}
 800ac7e:	4604      	mov	r4, r0
 800ac80:	4b07      	ldr	r3, [pc, #28]	; (800aca0 <RemoteConfig::HandleSetOscTxt()+0x24>)
 800ac82:	b0e4      	sub	sp, #400	; 0x190
 800ac84:	6819      	ldr	r1, [r3, #0]
 800ac86:	4668      	mov	r0, sp
 800ac88:	f7fe fa80 	bl	800918c <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800ac8c:	4b05      	ldr	r3, [pc, #20]	; (800aca4 <RemoteConfig::HandleSetOscTxt()+0x28>)
 800ac8e:	4668      	mov	r0, sp
 800ac90:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac94:	6819      	ldr	r1, [r3, #0]
 800ac96:	f7fe fa95 	bl	80091c4 <OSCServerParams::Load(char const*, unsigned int)>
 800ac9a:	b064      	add	sp, #400	; 0x190
 800ac9c:	bd10      	pop	{r4, pc}
 800ac9e:	bf00      	nop
 800aca0:	20001b9c 	mulcs	r0, ip, fp
 800aca4:	20000b4c 	andcs	r0, r0, ip, asr #22

0800aca8 <RemoteConfig::HandleSetParamsTxt()>:
 800aca8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800acaa:	4604      	mov	r4, r0
 800acac:	4b06      	ldr	r3, [pc, #24]	; (800acc8 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800acae:	4668      	mov	r0, sp
 800acb0:	6819      	ldr	r1, [r3, #0]
 800acb2:	f7fe fe7f 	bl	80099b4 <DmxParams::DmxParams(DmxParamsStore*)>
 800acb6:	4b05      	ldr	r3, [pc, #20]	; (800accc <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800acb8:	4668      	mov	r0, sp
 800acba:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800acbe:	6819      	ldr	r1, [r3, #0]
 800acc0:	f7fe fe90 	bl	80099e4 <DmxParams::Load(char const*, unsigned int)>
 800acc4:	b004      	add	sp, #16
 800acc6:	bd10      	pop	{r4, pc}
 800acc8:	20001b94 	mulcs	r0, r4, fp
 800accc:	20000b4c 	andcs	r0, r0, ip, asr #22

0800acd0 <RemoteConfig::HandleFactory()>:
 800acd0:	b538      	push	{r3, r4, r5, lr}
 800acd2:	2400      	movs	r4, #0
 800acd4:	4d04      	ldr	r5, [pc, #16]	; (800ace8 <RemoteConfig::HandleFactory()+0x18>)
 800acd6:	4621      	mov	r1, r4
 800acd8:	6828      	ldr	r0, [r5, #0]
 800acda:	3401      	adds	r4, #1
 800acdc:	f000 ff4e 	bl	800bb7c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800ace0:	2c1c      	cmp	r4, #28
 800ace2:	d1f8      	bne.n	800acd6 <RemoteConfig::HandleFactory()+0x6>
 800ace4:	bd38      	pop	{r3, r4, r5, pc}
 800ace6:	bf00      	nop
 800ace8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800acec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800acee:	460b      	mov	r3, r1
 800acf0:	8885      	ldrh	r5, [r0, #4]
 800acf2:	88c1      	ldrh	r1, [r0, #6]
 800acf4:	42a9      	cmp	r1, r5
 800acf6:	d214      	bcs.n	800ad22 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800acf8:	4604      	mov	r4, r0
 800acfa:	6800      	ldr	r0, [r0, #0]
 800acfc:	1a6d      	subs	r5, r5, r1
 800acfe:	4408      	add	r0, r1
 800ad00:	7a21      	ldrb	r1, [r4, #8]
 800ad02:	b91a      	cbnz	r2, 800ad0c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800ad04:	b919      	cbnz	r1, 800ad0e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800ad06:	4a0a      	ldr	r2, [pc, #40]	; (800ad30 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800ad08:	9100      	str	r1, [sp, #0]
 800ad0a:	e002      	b.n	800ad12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ad0c:	b159      	cbz	r1, 800ad26 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ad0e:	9200      	str	r2, [sp, #0]
 800ad10:	4a08      	ldr	r2, [pc, #32]	; (800ad34 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ad12:	4629      	mov	r1, r5
 800ad14:	f7fd fd92 	bl	800883c <snprintf>
 800ad18:	4285      	cmp	r5, r0
 800ad1a:	bfa2      	ittt	ge
 800ad1c:	88e3      	ldrhge	r3, [r4, #6]
 800ad1e:	181b      	addge	r3, r3, r0
 800ad20:	80e3      	strhge	r3, [r4, #6]
 800ad22:	b003      	add	sp, #12
 800ad24:	bd30      	pop	{r4, r5, pc}
 800ad26:	2201      	movs	r2, #1
 800ad28:	9200      	str	r2, [sp, #0]
 800ad2a:	4a03      	ldr	r2, [pc, #12]	; (800ad38 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800ad2c:	e7f1      	b.n	800ad12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ad2e:	bf00      	nop
 800ad30:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 800ad34:	08011180 	stmdaeq	r1, {r7, r8, ip}
 800ad38:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}

0800ad3c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800ad3c:	b510      	push	{r4, lr}
 800ad3e:	4604      	mov	r4, r0
 800ad40:	2220      	movs	r2, #32
 800ad42:	f840 1b04 	str.w	r1, [r0], #4
 800ad46:	2100      	movs	r1, #0
 800ad48:	f004 f928 	bl	800ef9c <memset>
 800ad4c:	4620      	mov	r0, r4
 800ad4e:	bd10      	pop	{r4, pc}

0800ad50 <RemoteConfigParams::Load()>:
 800ad50:	b508      	push	{r3, lr}
 800ad52:	2300      	movs	r3, #0
 800ad54:	4601      	mov	r1, r0
 800ad56:	6043      	str	r3, [r0, #4]
 800ad58:	6800      	ldr	r0, [r0, #0]
 800ad5a:	b120      	cbz	r0, 800ad66 <RemoteConfigParams::Load()+0x16>
 800ad5c:	6803      	ldr	r3, [r0, #0]
 800ad5e:	3104      	adds	r1, #4
 800ad60:	68db      	ldr	r3, [r3, #12]
 800ad62:	4798      	blx	r3
 800ad64:	2001      	movs	r0, #1
 800ad66:	bd08      	pop	{r3, pc}

0800ad68 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800ad68:	2300      	movs	r3, #0
 800ad6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad6c:	460d      	mov	r5, r1
 800ad6e:	4616      	mov	r6, r2
 800ad70:	4604      	mov	r4, r0
 800ad72:	6043      	str	r3, [r0, #4]
 800ad74:	4602      	mov	r2, r0
 800ad76:	490a      	ldr	r1, [pc, #40]	; (800ada0 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800ad78:	4668      	mov	r0, sp
 800ad7a:	f003 fb21 	bl	800e3c0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ad7e:	4632      	mov	r2, r6
 800ad80:	4629      	mov	r1, r5
 800ad82:	4668      	mov	r0, sp
 800ad84:	f003 fb20 	bl	800e3c8 <ReadConfigFile::Read(char const*, unsigned int)>
 800ad88:	4621      	mov	r1, r4
 800ad8a:	f851 0b04 	ldr.w	r0, [r1], #4
 800ad8e:	6803      	ldr	r3, [r0, #0]
 800ad90:	689b      	ldr	r3, [r3, #8]
 800ad92:	4798      	blx	r3
 800ad94:	4668      	mov	r0, sp
 800ad96:	f003 fb16 	bl	800e3c6 <ReadConfigFile::~ReadConfigFile()>
 800ad9a:	b002      	add	sp, #8
 800ad9c:	bd70      	pop	{r4, r5, r6, pc}
 800ad9e:	bf00      	nop
 800ada0:	0800ae61 	stmdaeq	r0, {r0, r5, r6, r9, sl, fp, sp, pc}

0800ada4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800ada4:	6843      	ldr	r3, [r0, #4]
 800ada6:	b111      	cbz	r1, 800adae <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800ada8:	4313      	orrs	r3, r2
 800adaa:	6043      	str	r3, [r0, #4]
 800adac:	4770      	bx	lr
 800adae:	ea23 0302 	bic.w	r3, r3, r2
 800adb2:	e7fa      	b.n	800adaa <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800adb4 <RemoteConfigParams::callbackFunction(char const*)>:
 800adb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800adb6:	460d      	mov	r5, r1
 800adb8:	4604      	mov	r4, r0
 800adba:	4923      	ldr	r1, [pc, #140]	; (800ae48 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800adbc:	4628      	mov	r0, r5
 800adbe:	f10d 0203 	add.w	r2, sp, #3
 800adc2:	f003 fbad 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800adc6:	b940      	cbnz	r0, 800adda <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800adc8:	2201      	movs	r2, #1
 800adca:	4620      	mov	r0, r4
 800adcc:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800add0:	b003      	add	sp, #12
 800add2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800add6:	f7ff bfe5 	b.w	800ada4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800adda:	4628      	mov	r0, r5
 800addc:	491b      	ldr	r1, [pc, #108]	; (800ae4c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800adde:	f10d 0203 	add.w	r2, sp, #3
 800ade2:	f003 fb9d 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ade6:	b908      	cbnz	r0, 800adec <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800ade8:	2202      	movs	r2, #2
 800adea:	e7ee      	b.n	800adca <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adec:	4628      	mov	r0, r5
 800adee:	4918      	ldr	r1, [pc, #96]	; (800ae50 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800adf0:	f10d 0203 	add.w	r2, sp, #3
 800adf4:	f003 fb94 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800adf8:	b908      	cbnz	r0, 800adfe <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800adfa:	2204      	movs	r2, #4
 800adfc:	e7e5      	b.n	800adca <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adfe:	4628      	mov	r0, r5
 800ae00:	4914      	ldr	r1, [pc, #80]	; (800ae54 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800ae02:	f10d 0203 	add.w	r2, sp, #3
 800ae06:	f003 fb8b 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ae0a:	b908      	cbnz	r0, 800ae10 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800ae0c:	2208      	movs	r2, #8
 800ae0e:	e7dc      	b.n	800adca <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ae10:	4628      	mov	r0, r5
 800ae12:	4911      	ldr	r1, [pc, #68]	; (800ae58 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800ae14:	f10d 0203 	add.w	r2, sp, #3
 800ae18:	f003 fb82 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ae1c:	b908      	cbnz	r0, 800ae22 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800ae1e:	2220      	movs	r2, #32
 800ae20:	e7d3      	b.n	800adca <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800ae22:	2317      	movs	r3, #23
 800ae24:	4628      	mov	r0, r5
 800ae26:	9301      	str	r3, [sp, #4]
 800ae28:	490c      	ldr	r1, [pc, #48]	; (800ae5c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800ae2a:	ab01      	add	r3, sp, #4
 800ae2c:	f104 020c 	add.w	r2, r4, #12
 800ae30:	f003 fafe 	bl	800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ae34:	b930      	cbnz	r0, 800ae44 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800ae36:	9b01      	ldr	r3, [sp, #4]
 800ae38:	4423      	add	r3, r4
 800ae3a:	7318      	strb	r0, [r3, #12]
 800ae3c:	6863      	ldr	r3, [r4, #4]
 800ae3e:	f043 0310 	orr.w	r3, r3, #16
 800ae42:	6063      	str	r3, [r4, #4]
 800ae44:	b003      	add	sp, #12
 800ae46:	bd30      	pop	{r4, r5, pc}
 800ae48:	080118fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, ip}
 800ae4c:	0801191d 	stmdaeq	r1, {r0, r2, r3, r4, r8, fp, ip}
 800ae50:	0801192b 	stmdaeq	r1, {r0, r1, r3, r5, r8, fp, ip}
 800ae54:	08011939 	stmdaeq	r1, {r0, r3, r4, r5, r8, fp, ip}
 800ae58:	08011947 	stmdaeq	r1, {r0, r1, r2, r6, r8, fp, ip}
 800ae5c:	08011910 	stmdaeq	r1, {r4, r8, fp, ip}

0800ae60 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800ae60:	f7ff bfa8 	b.w	800adb4 <RemoteConfigParams::callbackFunction(char const*)>

0800ae64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800ae64:	b570      	push	{r4, r5, r6, lr}
 800ae66:	4604      	mov	r4, r0
 800ae68:	4615      	mov	r5, r2
 800ae6a:	461e      	mov	r6, r3
 800ae6c:	b086      	sub	sp, #24
 800ae6e:	3004      	adds	r0, #4
 800ae70:	2900      	cmp	r1, #0
 800ae72:	d041      	beq.n	800aef8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800ae74:	2220      	movs	r2, #32
 800ae76:	f004 f87a 	bl	800ef6e <memmove>
 800ae7a:	4633      	mov	r3, r6
 800ae7c:	462a      	mov	r2, r5
 800ae7e:	4937      	ldr	r1, [pc, #220]	; (800af5c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800ae80:	a803      	add	r0, sp, #12
 800ae82:	f003 f9fd 	bl	800e280 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ae86:	6862      	ldr	r2, [r4, #4]
 800ae88:	4935      	ldr	r1, [pc, #212]	; (800af60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800ae8a:	f002 0201 	and.w	r2, r2, #1
 800ae8e:	a803      	add	r0, sp, #12
 800ae90:	f7ff ff2c 	bl	800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae94:	6862      	ldr	r2, [r4, #4]
 800ae96:	4933      	ldr	r1, [pc, #204]	; (800af64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800ae98:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800ae9c:	a803      	add	r0, sp, #12
 800ae9e:	f7ff ff25 	bl	800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aea2:	6862      	ldr	r2, [r4, #4]
 800aea4:	4930      	ldr	r1, [pc, #192]	; (800af68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800aea6:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800aeaa:	a803      	add	r0, sp, #12
 800aeac:	f7ff ff1e 	bl	800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aeb0:	6862      	ldr	r2, [r4, #4]
 800aeb2:	492e      	ldr	r1, [pc, #184]	; (800af6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800aeb4:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800aeb8:	a803      	add	r0, sp, #12
 800aeba:	f7ff ff17 	bl	800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aebe:	6862      	ldr	r2, [r4, #4]
 800aec0:	492b      	ldr	r1, [pc, #172]	; (800af70 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800aec2:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800aec6:	a803      	add	r0, sp, #12
 800aec8:	f7ff ff10 	bl	800acec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800aecc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aed0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aed4:	6862      	ldr	r2, [r4, #4]
 800aed6:	42ab      	cmp	r3, r5
 800aed8:	d223      	bcs.n	800af22 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800aeda:	9803      	ldr	r0, [sp, #12]
 800aedc:	06d2      	lsls	r2, r2, #27
 800aede:	4418      	add	r0, r3
 800aee0:	eba5 0503 	sub.w	r5, r5, r3
 800aee4:	f104 040c 	add.w	r4, r4, #12
 800aee8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aeec:	d40b      	bmi.n	800af06 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800aeee:	b95b      	cbnz	r3, 800af08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800aef0:	4b20      	ldr	r3, [pc, #128]	; (800af74 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800aef2:	4a21      	ldr	r2, [pc, #132]	; (800af78 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800aef4:	9400      	str	r4, [sp, #0]
 800aef6:	e00a      	b.n	800af0e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800aef8:	6823      	ldr	r3, [r4, #0]
 800aefa:	4601      	mov	r1, r0
 800aefc:	681a      	ldr	r2, [r3, #0]
 800aefe:	4618      	mov	r0, r3
 800af00:	68d2      	ldr	r2, [r2, #12]
 800af02:	4790      	blx	r2
 800af04:	e7b9      	b.n	800ae7a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800af06:	b32b      	cbz	r3, 800af54 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800af08:	4b1a      	ldr	r3, [pc, #104]	; (800af74 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800af0a:	4a1c      	ldr	r2, [pc, #112]	; (800af7c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800af0c:	9400      	str	r4, [sp, #0]
 800af0e:	4629      	mov	r1, r5
 800af10:	f7fd fc94 	bl	800883c <snprintf>
 800af14:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af18:	4285      	cmp	r5, r0
 800af1a:	bfa4      	itt	ge
 800af1c:	181b      	addge	r3, r3, r0
 800af1e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800af22:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800af26:	b17b      	cbz	r3, 800af48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800af28:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af2c:	9b03      	ldr	r3, [sp, #12]
 800af2e:	4413      	add	r3, r2
 800af30:	227d      	movs	r2, #125	; 0x7d
 800af32:	f803 2c01 	strb.w	r2, [r3, #-1]
 800af36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af3a:	9903      	ldr	r1, [sp, #12]
 800af3c:	54ca      	strb	r2, [r1, r3]
 800af3e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af42:	3301      	adds	r3, #1
 800af44:	f8ad 3012 	strh.w	r3, [sp, #18]
 800af48:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800af4e:	601a      	str	r2, [r3, #0]
 800af50:	b006      	add	sp, #24
 800af52:	bd70      	pop	{r4, r5, r6, pc}
 800af54:	4b07      	ldr	r3, [pc, #28]	; (800af74 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800af56:	4a0a      	ldr	r2, [pc, #40]	; (800af80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800af58:	9400      	str	r4, [sp, #0]
 800af5a:	e7d8      	b.n	800af0e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800af5c:	08011904 	stmdaeq	r1, {r2, r8, fp, ip}
 800af60:	080118fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, ip}
 800af64:	0801191d 	stmdaeq	r1, {r0, r2, r3, r4, r8, fp, ip}
 800af68:	0801192b 	stmdaeq	r1, {r0, r1, r3, r5, r8, fp, ip}
 800af6c:	08011939 	stmdaeq	r1, {r0, r3, r4, r5, r8, fp, ip}
 800af70:	08011947 	stmdaeq	r1, {r0, r1, r2, r6, r8, fp, ip}
 800af74:	08011910 	stmdaeq	r1, {r4, r8, fp, ip}
 800af78:	0801119c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip}
 800af7c:	08011191 	stmdaeq	r1, {r0, r4, r7, r8, ip}
 800af80:	0801119d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, ip}

0800af84 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800af84:	b513      	push	{r0, r1, r4, lr}
 800af86:	6804      	ldr	r4, [r0, #0]
 800af88:	b914      	cbnz	r4, 800af90 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800af8a:	601c      	str	r4, [r3, #0]
 800af8c:	b002      	add	sp, #8
 800af8e:	bd10      	pop	{r4, pc}
 800af90:	9300      	str	r3, [sp, #0]
 800af92:	4613      	mov	r3, r2
 800af94:	460a      	mov	r2, r1
 800af96:	2100      	movs	r1, #0
 800af98:	f7ff ff64 	bl	800ae64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800af9c:	e7f6      	b.n	800af8c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800af9e <RemoteConfigParams::Set(RemoteConfig*)>:
 800af9e:	b538      	push	{r3, r4, r5, lr}
 800afa0:	460c      	mov	r4, r1
 800afa2:	4605      	mov	r5, r0
 800afa4:	6841      	ldr	r1, [r0, #4]
 800afa6:	4620      	mov	r0, r4
 800afa8:	f001 0101 	and.w	r1, r1, #1
 800afac:	f7ff fc50 	bl	800a850 <RemoteConfig::SetDisable(bool)>
 800afb0:	686b      	ldr	r3, [r5, #4]
 800afb2:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800afb6:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800afba:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800afbe:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800afc2:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800afc6:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800afca:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800afce:	06db      	lsls	r3, r3, #27
 800afd0:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800afd4:	d506      	bpl.n	800afe4 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800afd6:	4620      	mov	r0, r4
 800afd8:	f105 010c 	add.w	r1, r5, #12
 800afdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800afe0:	f7ff bc5a 	b.w	800a898 <RemoteConfig::SetDisplayName(char const*)>
 800afe4:	bd38      	pop	{r3, r4, r5, pc}

0800afe6 <RemoteConfigParams::Dump()>:
 800afe6:	4770      	bx	lr

0800afe8 <Display::TextStatus(char const*)>:
 800afe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800afec:	4604      	mov	r4, r0
 800afee:	6980      	ldr	r0, [r0, #24]
 800aff0:	460d      	mov	r5, r1
 800aff2:	2800      	cmp	r0, #0
 800aff4:	d031      	beq.n	800b05a <Display::TextStatus(char const*)+0x72>
 800aff6:	7947      	ldrb	r7, [r0, #5]
 800aff8:	6803      	ldr	r3, [r0, #0]
 800affa:	1e7e      	subs	r6, r7, #1
 800affc:	b2f6      	uxtb	r6, r6
 800affe:	4632      	mov	r2, r6
 800b000:	2100      	movs	r1, #0
 800b002:	6a1b      	ldr	r3, [r3, #32]
 800b004:	f890 9004 	ldrb.w	r9, [r0, #4]
 800b008:	f04f 0800 	mov.w	r8, #0
 800b00c:	4798      	blx	r3
 800b00e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800b012:	45c1      	cmp	r9, r8
 800b014:	69a0      	ldr	r0, [r4, #24]
 800b016:	d818      	bhi.n	800b04a <Display::TextStatus(char const*)+0x62>
 800b018:	b120      	cbz	r0, 800b024 <Display::TextStatus(char const*)+0x3c>
 800b01a:	6803      	ldr	r3, [r0, #0]
 800b01c:	4632      	mov	r2, r6
 800b01e:	2100      	movs	r1, #0
 800b020:	6a1b      	ldr	r3, [r3, #32]
 800b022:	4798      	blx	r3
 800b024:	69a0      	ldr	r0, [r4, #24]
 800b026:	b1c0      	cbz	r0, 800b05a <Display::TextStatus(char const*)+0x72>
 800b028:	2300      	movs	r3, #0
 800b02a:	7901      	ldrb	r1, [r0, #4]
 800b02c:	5cea      	ldrb	r2, [r5, r3]
 800b02e:	b11a      	cbz	r2, 800b038 <Display::TextStatus(char const*)+0x50>
 800b030:	1c5a      	adds	r2, r3, #1
 800b032:	4299      	cmp	r1, r3
 800b034:	4613      	mov	r3, r2
 800b036:	dcf9      	bgt.n	800b02c <Display::TextStatus(char const*)+0x44>
 800b038:	6802      	ldr	r2, [r0, #0]
 800b03a:	4639      	mov	r1, r7
 800b03c:	69d4      	ldr	r4, [r2, #28]
 800b03e:	b2db      	uxtb	r3, r3
 800b040:	462a      	mov	r2, r5
 800b042:	46a4      	mov	ip, r4
 800b044:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b048:	4760      	bx	ip
 800b04a:	b118      	cbz	r0, 800b054 <Display::TextStatus(char const*)+0x6c>
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	2120      	movs	r1, #32
 800b050:	695b      	ldr	r3, [r3, #20]
 800b052:	4798      	blx	r3
 800b054:	f108 0801 	add.w	r8, r8, #1
 800b058:	e7db      	b.n	800b012 <Display::TextStatus(char const*)+0x2a>
 800b05a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800b060 <RemoteConfig::HandleReboot()>:
 800b060:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800b064:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b066:	2b00      	cmp	r3, #0
 800b068:	d03d      	beq.n	800b0e6 <RemoteConfig::HandleReboot()+0x86>
 800b06a:	2301      	movs	r3, #1
 800b06c:	4c1f      	ldr	r4, [pc, #124]	; (800b0ec <RemoteConfig::HandleReboot()+0x8c>)
 800b06e:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800b072:	6825      	ldr	r5, [r4, #0]
 800b074:	69a8      	ldr	r0, [r5, #24]
 800b076:	b138      	cbz	r0, 800b088 <RemoteConfig::HandleReboot()+0x28>
 800b078:	2100      	movs	r1, #0
 800b07a:	6803      	ldr	r3, [r0, #0]
 800b07c:	7429      	strb	r1, [r5, #16]
 800b07e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b080:	4798      	blx	r3
 800b082:	4b1b      	ldr	r3, [pc, #108]	; (800b0f0 <RemoteConfig::HandleReboot()+0x90>)
 800b084:	681b      	ldr	r3, [r3, #0]
 800b086:	606b      	str	r3, [r5, #4]
 800b088:	4d1a      	ldr	r5, [pc, #104]	; (800b0f4 <RemoteConfig::HandleReboot()+0x94>)
 800b08a:	6828      	ldr	r0, [r5, #0]
 800b08c:	f000 fdf2 	bl	800bc74 <SpiFlashStore::Flash()>
 800b090:	2800      	cmp	r0, #0
 800b092:	d1fa      	bne.n	800b08a <RemoteConfig::HandleReboot()+0x2a>
 800b094:	4b18      	ldr	r3, [pc, #96]	; (800b0f8 <RemoteConfig::HandleReboot()+0x98>)
 800b096:	6818      	ldr	r0, [r3, #0]
 800b098:	f002 f892 	bl	800d1c0 <Network::Shutdown()>
 800b09c:	4817      	ldr	r0, [pc, #92]	; (800b0fc <RemoteConfig::HandleReboot()+0x9c>)
 800b09e:	f7fd fbbd 	bl	800881c <printf>
 800b0a2:	6823      	ldr	r3, [r4, #0]
 800b0a4:	6998      	ldr	r0, [r3, #24]
 800b0a6:	b110      	cbz	r0, 800b0ae <RemoteConfig::HandleReboot()+0x4e>
 800b0a8:	6803      	ldr	r3, [r0, #0]
 800b0aa:	68db      	ldr	r3, [r3, #12]
 800b0ac:	4798      	blx	r3
 800b0ae:	6824      	ldr	r4, [r4, #0]
 800b0b0:	4913      	ldr	r1, [pc, #76]	; (800b100 <RemoteConfig::HandleReboot()+0xa0>)
 800b0b2:	4620      	mov	r0, r4
 800b0b4:	f7ff ff98 	bl	800afe8 <Display::TextStatus(char const*)>
 800b0b8:	7c63      	ldrb	r3, [r4, #17]
 800b0ba:	b183      	cbz	r3, 800b0de <RemoteConfig::HandleReboot()+0x7e>
 800b0bc:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800b0c0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b0c4:	23bf      	movs	r3, #191	; 0xbf
 800b0c6:	7a20      	ldrb	r0, [r4, #8]
 800b0c8:	f88d 3006 	strb.w	r3, [sp, #6]
 800b0cc:	f004 ffaa 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 800b0d0:	68e0      	ldr	r0, [r4, #12]
 800b0d2:	f004 ff9f 	bl	8010014 <gd32_i2c_set_baudrate(unsigned int)>
 800b0d6:	2103      	movs	r1, #3
 800b0d8:	a801      	add	r0, sp, #4
 800b0da:	f004 ffa9 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800b0de:	4b09      	ldr	r3, [pc, #36]	; (800b104 <RemoteConfig::HandleReboot()+0xa4>)
 800b0e0:	6818      	ldr	r0, [r3, #0]
 800b0e2:	f003 fe43 	bl	800ed6c <Hardware::Reboot()>
 800b0e6:	b003      	add	sp, #12
 800b0e8:	bd30      	pop	{r4, r5, pc}
 800b0ea:	bf00      	nop
 800b0ec:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800b0f0:	20009bc4 	andcs	r9, r0, r4, asr #23
 800b0f4:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800b0f8:	2000948c 	andcs	r9, r0, ip, lsl #9
 800b0fc:	08011568 	stmdaeq	r1, {r3, r5, r6, r8, sl, ip}
 800b100:	08011577 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, sl, ip}
 800b104:	20009bac 	andcs	r9, r0, ip, lsr #23

0800b108 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b108:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b10c:	2000      	movs	r0, #0
 800b10e:	4d12      	ldr	r5, [pc, #72]	; (800b158 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b110:	f10d 0c04 	add.w	ip, sp, #4
 800b114:	6814      	ldr	r4, [r2, #0]
 800b116:	7d2b      	ldrb	r3, [r5, #20]
 800b118:	692e      	ldr	r6, [r5, #16]
 800b11a:	42a3      	cmp	r3, r4
 800b11c:	bf34      	ite	cc
 800b11e:	4664      	movcc	r4, ip
 800b120:	4614      	movcs	r4, r2
 800b122:	9301      	str	r3, [sp, #4]
 800b124:	6827      	ldr	r7, [r4, #0]
 800b126:	460c      	mov	r4, r1
 800b128:	3e01      	subs	r6, #1
 800b12a:	440f      	add	r7, r1
 800b12c:	42bc      	cmp	r4, r7
 800b12e:	d101      	bne.n	800b134 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800b130:	6013      	str	r3, [r2, #0]
 800b132:	e00c      	b.n	800b14e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800b134:	f894 8000 	ldrb.w	r8, [r4]
 800b138:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b13c:	45f0      	cmp	r8, lr
 800b13e:	d009      	beq.n	800b154 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b140:	3001      	adds	r0, #1
 800b142:	2804      	cmp	r0, #4
 800b144:	f105 051c 	add.w	r5, r5, #28
 800b148:	d1e4      	bne.n	800b114 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b14a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b14e:	b002      	add	sp, #8
 800b150:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b154:	3401      	adds	r4, #1
 800b156:	e7e9      	b.n	800b12c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b158:	080115b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip}

0800b15c <RemoteConfig::PlatformHandleTftpSet()>:
 800b15c:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800b160:	b109      	cbz	r1, 800b166 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b162:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b166:	2002      	movs	r0, #2
 800b168:	f004 b912 	b.w	800f390 <bkp_data_write>

0800b16c <RemoteConfig::PlatformHandleTftpGet()>:
 800b16c:	b510      	push	{r4, lr}
 800b16e:	4604      	mov	r4, r0
 800b170:	2002      	movs	r0, #2
 800b172:	f004 f923 	bl	800f3bc <bkp_data_read>
 800b176:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b17a:	1ac3      	subs	r3, r0, r3
 800b17c:	4258      	negs	r0, r3
 800b17e:	4158      	adcs	r0, r3
 800b180:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800b184:	bd10      	pop	{r4, pc}

0800b186 <strcmp>:
 800b186:	1e43      	subs	r3, r0, #1
 800b188:	3901      	subs	r1, #1
 800b18a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b18e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b192:	4290      	cmp	r0, r2
 800b194:	d001      	beq.n	800b19a <strcmp+0x14>
 800b196:	1a80      	subs	r0, r0, r2
 800b198:	e001      	b.n	800b19e <strcmp+0x18>
 800b19a:	2800      	cmp	r0, #0
 800b19c:	d1f5      	bne.n	800b18a <strcmp+0x4>
 800b19e:	4770      	bx	lr

0800b1a0 <strcasecmp>:
 800b1a0:	b530      	push	{r4, r5, lr}
 800b1a2:	1e42      	subs	r2, r0, #1
 800b1a4:	3901      	subs	r1, #1
 800b1a6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1aa:	4604      	mov	r4, r0
 800b1ac:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b1b0:	2b19      	cmp	r3, #25
 800b1b2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b1b6:	bf98      	it	ls
 800b1b8:	f100 0420 	addls.w	r4, r0, #32
 800b1bc:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b1c0:	2d19      	cmp	r5, #25
 800b1c2:	bf98      	it	ls
 800b1c4:	3320      	addls	r3, #32
 800b1c6:	42a3      	cmp	r3, r4
 800b1c8:	d001      	beq.n	800b1ce <strcasecmp+0x2e>
 800b1ca:	1ae0      	subs	r0, r4, r3
 800b1cc:	e001      	b.n	800b1d2 <strcasecmp+0x32>
 800b1ce:	2800      	cmp	r0, #0
 800b1d0:	d1e9      	bne.n	800b1a6 <strcasecmp+0x6>
 800b1d2:	bd30      	pop	{r4, r5, pc}

0800b1d4 <PropertiesConfig::EnableJSON(bool)>:
 800b1d4:	4a04      	ldr	r2, [pc, #16]	; (800b1e8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b1d6:	7813      	ldrb	r3, [r2, #0]
 800b1d8:	b118      	cbz	r0, 800b1e2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b1da:	f043 0301 	orr.w	r3, r3, #1
 800b1de:	7013      	strb	r3, [r2, #0]
 800b1e0:	4770      	bx	lr
 800b1e2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b1e6:	e7fa      	b.n	800b1de <PropertiesConfig::EnableJSON(bool)+0xa>
 800b1e8:	20009aba 			; <UNDEFINED> instruction: 0x20009aba

0800b1ec <HttpDaemon::HttpDaemon()>:
 800b1ec:	4a0a      	ldr	r2, [pc, #40]	; (800b218 <HttpDaemon::HttpDaemon()+0x2c>)
 800b1ee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b1f2:	6002      	str	r2, [r0, #0]
 800b1f4:	2200      	movs	r2, #0
 800b1f6:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b1fa:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b1fe:	2102      	movs	r1, #2
 800b200:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b204:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b208:	60c2      	str	r2, [r0, #12]
 800b20a:	8402      	strh	r2, [r0, #32]
 800b20c:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800b210:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800b214:	4770      	bx	lr
 800b216:	bf00      	nop
 800b218:	0801187c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip}

0800b21c <HttpDaemon::Start()>:
 800b21c:	4b04      	ldr	r3, [pc, #16]	; (800b230 <HttpDaemon::Start()+0x14>)
 800b21e:	b510      	push	{r4, lr}
 800b220:	2150      	movs	r1, #80	; 0x50
 800b222:	4604      	mov	r4, r0
 800b224:	6818      	ldr	r0, [r3, #0]
 800b226:	f002 f9a9 	bl	800d57c <Network::TcpBegin(unsigned short)>
 800b22a:	6120      	str	r0, [r4, #16]
 800b22c:	bd10      	pop	{r4, pc}
 800b22e:	bf00      	nop
 800b230:	2000948c 	andcs	r9, r0, ip, lsl #9

0800b234 <HttpDaemon::ParseMethod(char*)>:
 800b234:	b538      	push	{r3, r4, r5, lr}
 800b236:	4604      	mov	r4, r0
 800b238:	4608      	mov	r0, r1
 800b23a:	491a      	ldr	r1, [pc, #104]	; (800b2a4 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b23c:	f003 fed8 	bl	800eff0 <strtok>
 800b240:	4605      	mov	r5, r0
 800b242:	b360      	cbz	r0, 800b29e <HttpDaemon::ParseMethod(char*)+0x6a>
 800b244:	4918      	ldr	r1, [pc, #96]	; (800b2a8 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b246:	f7ff ff9e 	bl	800b186 <strcmp>
 800b24a:	b128      	cbz	r0, 800b258 <HttpDaemon::ParseMethod(char*)+0x24>
 800b24c:	4628      	mov	r0, r5
 800b24e:	4917      	ldr	r1, [pc, #92]	; (800b2ac <HttpDaemon::ParseMethod(char*)+0x78>)
 800b250:	f7ff ff99 	bl	800b186 <strcmp>
 800b254:	bb18      	cbnz	r0, 800b29e <HttpDaemon::ParseMethod(char*)+0x6a>
 800b256:	2001      	movs	r0, #1
 800b258:	61e0      	str	r0, [r4, #28]
 800b25a:	4912      	ldr	r1, [pc, #72]	; (800b2a4 <HttpDaemon::ParseMethod(char*)+0x70>)
 800b25c:	2000      	movs	r0, #0
 800b25e:	f003 fec7 	bl	800eff0 <strtok>
 800b262:	b910      	cbnz	r0, 800b26a <HttpDaemon::ParseMethod(char*)+0x36>
 800b264:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b268:	bd38      	pop	{r3, r4, r5, pc}
 800b26a:	6060      	str	r0, [r4, #4]
 800b26c:	4910      	ldr	r1, [pc, #64]	; (800b2b0 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b26e:	2000      	movs	r0, #0
 800b270:	f003 febe 	bl	800eff0 <strtok>
 800b274:	2800      	cmp	r0, #0
 800b276:	d0f5      	beq.n	800b264 <HttpDaemon::ParseMethod(char*)+0x30>
 800b278:	490e      	ldr	r1, [pc, #56]	; (800b2b4 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b27a:	f7ff ff84 	bl	800b186 <strcmp>
 800b27e:	2800      	cmp	r0, #0
 800b280:	d1f0      	bne.n	800b264 <HttpDaemon::ParseMethod(char*)+0x30>
 800b282:	490d      	ldr	r1, [pc, #52]	; (800b2b8 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b284:	f003 feb4 	bl	800eff0 <strtok>
 800b288:	2800      	cmp	r0, #0
 800b28a:	d0eb      	beq.n	800b264 <HttpDaemon::ParseMethod(char*)+0x30>
 800b28c:	490b      	ldr	r1, [pc, #44]	; (800b2bc <HttpDaemon::ParseMethod(char*)+0x88>)
 800b28e:	f7ff ff7a 	bl	800b186 <strcmp>
 800b292:	2800      	cmp	r0, #0
 800b294:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b298:	bf08      	it	eq
 800b29a:	20c8      	moveq	r0, #200	; 0xc8
 800b29c:	e7e4      	b.n	800b268 <HttpDaemon::ParseMethod(char*)+0x34>
 800b29e:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b2a2:	e7e1      	b.n	800b268 <HttpDaemon::ParseMethod(char*)+0x34>
 800b2a4:	08011620 	stmdaeq	r1, {r5, r9, sl, ip}
 800b2a8:	08011622 	stmdaeq	r1, {r1, r5, r9, sl, ip}
 800b2ac:	08011626 	stmdaeq	r1, {r1, r2, r5, r9, sl, ip}
 800b2b0:	08011690 	stmdaeq	r1, {r4, r7, r9, sl, ip}
 800b2b4:	0801162b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, ip}
 800b2b8:	08011630 	stmdaeq	r1, {r4, r5, r9, sl, ip}
 800b2bc:	08011633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip}

0800b2c0 <HttpDaemon::ParseHeaderField(char*)>:
 800b2c0:	b538      	push	{r3, r4, r5, lr}
 800b2c2:	4605      	mov	r5, r0
 800b2c4:	4608      	mov	r0, r1
 800b2c6:	491d      	ldr	r1, [pc, #116]	; (800b33c <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b2c8:	f003 fe92 	bl	800eff0 <strtok>
 800b2cc:	4604      	mov	r4, r0
 800b2ce:	b910      	cbnz	r0, 800b2d6 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b2d0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b2d4:	bd38      	pop	{r3, r4, r5, pc}
 800b2d6:	491a      	ldr	r1, [pc, #104]	; (800b340 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b2d8:	f7ff ff62 	bl	800b1a0 <strcasecmp>
 800b2dc:	b970      	cbnz	r0, 800b2fc <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b2de:	4919      	ldr	r1, [pc, #100]	; (800b344 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b2e0:	f003 fe86 	bl	800eff0 <strtok>
 800b2e4:	2800      	cmp	r0, #0
 800b2e6:	d0f3      	beq.n	800b2d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b2e8:	4917      	ldr	r1, [pc, #92]	; (800b348 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b2ea:	f7ff ff4c 	bl	800b186 <strcmp>
 800b2ee:	b108      	cbz	r0, 800b2f4 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b2f0:	20c8      	movs	r0, #200	; 0xc8
 800b2f2:	e7ef      	b.n	800b2d4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b2f4:	2301      	movs	r3, #1
 800b2f6:	f885 3020 	strb.w	r3, [r5, #32]
 800b2fa:	e7f9      	b.n	800b2f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b2fc:	4620      	mov	r0, r4
 800b2fe:	4913      	ldr	r1, [pc, #76]	; (800b34c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b300:	f7ff ff4e 	bl	800b1a0 <strcasecmp>
 800b304:	4604      	mov	r4, r0
 800b306:	2800      	cmp	r0, #0
 800b308:	d1f2      	bne.n	800b2f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b30a:	4911      	ldr	r1, [pc, #68]	; (800b350 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b30c:	f003 fe70 	bl	800eff0 <strtok>
 800b310:	2800      	cmp	r0, #0
 800b312:	d0dd      	beq.n	800b2d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b314:	1e42      	subs	r2, r0, #1
 800b316:	4623      	mov	r3, r4
 800b318:	200a      	movs	r0, #10
 800b31a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b31e:	b911      	cbnz	r1, 800b326 <HttpDaemon::ParseHeaderField(char*)+0x66>
 800b320:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800b324:	e7e4      	b.n	800b2f0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b326:	3930      	subs	r1, #48	; 0x30
 800b328:	2909      	cmp	r1, #9
 800b32a:	d8d1      	bhi.n	800b2d0 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b32c:	fb00 1303 	mla	r3, r0, r3, r1
 800b330:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b334:	d9f1      	bls.n	800b31a <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b336:	f240 109d 	movw	r0, #413	; 0x19d
 800b33a:	e7cb      	b.n	800b2d4 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b33c:	08011637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, ip}
 800b340:	08011639 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, ip}
 800b344:	08011646 	stmdaeq	r1, {r1, r2, r6, r9, sl, ip}
 800b348:	08011649 	stmdaeq	r1, {r0, r3, r6, r9, sl, ip}
 800b34c:	0801165a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, ip}
 800b350:	08011620 	stmdaeq	r1, {r5, r9, sl, ip}

0800b354 <HttpDaemon::ParseRequest()>:
 800b354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b356:	2400      	movs	r4, #0
 800b358:	4605      	mov	r5, r0
 800b35a:	4622      	mov	r2, r4
 800b35c:	4626      	mov	r6, r4
 800b35e:	68c1      	ldr	r1, [r0, #12]
 800b360:	f880 4020 	strb.w	r4, [r0, #32]
 800b364:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800b368:	8aab      	ldrh	r3, [r5, #20]
 800b36a:	42a3      	cmp	r3, r4
 800b36c:	d91e      	bls.n	800b3ac <HttpDaemon::ParseRequest()+0x58>
 800b36e:	68eb      	ldr	r3, [r5, #12]
 800b370:	5d18      	ldrb	r0, [r3, r4]
 800b372:	280a      	cmp	r0, #10
 800b374:	d10e      	bne.n	800b394 <HttpDaemon::ParseRequest()+0x40>
 800b376:	4423      	add	r3, r4
 800b378:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b37c:	1c57      	adds	r7, r2, #1
 800b37e:	b962      	cbnz	r2, 800b39a <HttpDaemon::ParseRequest()+0x46>
 800b380:	4628      	mov	r0, r5
 800b382:	f7ff ff57 	bl	800b234 <HttpDaemon::ParseMethod(char*)>
 800b386:	28c8      	cmp	r0, #200	; 0xc8
 800b388:	d111      	bne.n	800b3ae <HttpDaemon::ParseRequest()+0x5a>
 800b38a:	463a      	mov	r2, r7
 800b38c:	68e9      	ldr	r1, [r5, #12]
 800b38e:	3401      	adds	r4, #1
 800b390:	b2a4      	uxth	r4, r4
 800b392:	4421      	add	r1, r4
 800b394:	3401      	adds	r4, #1
 800b396:	b2a4      	uxth	r4, r4
 800b398:	e7e6      	b.n	800b368 <HttpDaemon::ParseRequest()+0x14>
 800b39a:	7808      	ldrb	r0, [r1, #0]
 800b39c:	b970      	cbnz	r0, 800b3bc <HttpDaemon::ParseRequest()+0x68>
 800b39e:	696b      	ldr	r3, [r5, #20]
 800b3a0:	3b01      	subs	r3, #1
 800b3a2:	1b1b      	subs	r3, r3, r4
 800b3a4:	b29b      	uxth	r3, r3
 800b3a6:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800b3aa:	b90b      	cbnz	r3, 800b3b0 <HttpDaemon::ParseRequest()+0x5c>
 800b3ac:	20c8      	movs	r0, #200	; 0xc8
 800b3ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3b0:	68ea      	ldr	r2, [r5, #12]
 800b3b2:	3401      	adds	r4, #1
 800b3b4:	4414      	add	r4, r2
 800b3b6:	60ac      	str	r4, [r5, #8]
 800b3b8:	54e0      	strb	r0, [r4, r3]
 800b3ba:	e7f7      	b.n	800b3ac <HttpDaemon::ParseRequest()+0x58>
 800b3bc:	4628      	mov	r0, r5
 800b3be:	f7ff ff7f 	bl	800b2c0 <HttpDaemon::ParseHeaderField(char*)>
 800b3c2:	e7e0      	b.n	800b386 <HttpDaemon::ParseRequest()+0x32>

0800b3c4 <HttpDaemon::HandleGetTxt()>:
 800b3c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3c8:	6847      	ldr	r7, [r0, #4]
 800b3ca:	4604      	mov	r4, r0
 800b3cc:	1dbd      	adds	r5, r7, #6
 800b3ce:	462b      	mov	r3, r5
 800b3d0:	4618      	mov	r0, r3
 800b3d2:	7802      	ldrb	r2, [r0, #0]
 800b3d4:	3301      	adds	r3, #1
 800b3d6:	2a00      	cmp	r2, #0
 800b3d8:	d1fa      	bne.n	800b3d0 <HttpDaemon::HandleGetTxt()+0xc>
 800b3da:	1b40      	subs	r0, r0, r5
 800b3dc:	2804      	cmp	r0, #4
 800b3de:	d803      	bhi.n	800b3e8 <HttpDaemon::HandleGetTxt()+0x24>
 800b3e0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b3e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3e8:	3804      	subs	r0, #4
 800b3ea:	4914      	ldr	r1, [pc, #80]	; (800b43c <HttpDaemon::HandleGetTxt()+0x78>)
 800b3ec:	4428      	add	r0, r5
 800b3ee:	f7ff feca 	bl	800b186 <strcmp>
 800b3f2:	2800      	cmp	r0, #0
 800b3f4:	d1f4      	bne.n	800b3e0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b3f6:	4b12      	ldr	r3, [pc, #72]	; (800b440 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b3f8:	2001      	movs	r0, #1
 800b3fa:	f893 8000 	ldrb.w	r8, [r3]
 800b3fe:	f7ff fee9 	bl	800b1d4 <PropertiesConfig::EnableJSON(bool)>
 800b402:	4b10      	ldr	r3, [pc, #64]	; (800b444 <HttpDaemon::HandleGetTxt()+0x80>)
 800b404:	f240 529b 	movw	r2, #1435	; 0x59b
 800b408:	4629      	mov	r1, r5
 800b40a:	6818      	ldr	r0, [r3, #0]
 800b40c:	f7ff fa5c 	bl	800a8c8 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b410:	4606      	mov	r6, r0
 800b412:	f008 0801 	and.w	r8, r8, #1
 800b416:	4640      	mov	r0, r8
 800b418:	f7ff fedc 	bl	800b1d4 <PropertiesConfig::EnableJSON(bool)>
 800b41c:	2e00      	cmp	r6, #0
 800b41e:	d0df      	beq.n	800b3e0 <HttpDaemon::HandleGetTxt()+0x1c>
 800b420:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800b424:	3606      	adds	r6, #6
 800b426:	3422      	adds	r4, #34	; 0x22
 800b428:	4437      	add	r7, r6
 800b42a:	42bd      	cmp	r5, r7
 800b42c:	d101      	bne.n	800b432 <HttpDaemon::HandleGetTxt()+0x6e>
 800b42e:	20c8      	movs	r0, #200	; 0xc8
 800b430:	e7d8      	b.n	800b3e4 <HttpDaemon::HandleGetTxt()+0x20>
 800b432:	f815 3b01 	ldrb.w	r3, [r5], #1
 800b436:	f804 3b01 	strb.w	r3, [r4], #1
 800b43a:	e7f6      	b.n	800b42a <HttpDaemon::HandleGetTxt()+0x66>
 800b43c:	080115a0 	stmdaeq	r1, {r5, r7, r8, sl, ip}
 800b440:	20009aba 			; <UNDEFINED> instruction: 0x20009aba
 800b444:	20000b74 	andcs	r0, r0, r4, ror fp

0800b448 <HttpDaemon::HandleGet()>:
 800b448:	b570      	push	{r4, r5, r6, lr}
 800b44a:	6845      	ldr	r5, [r0, #4]
 800b44c:	4604      	mov	r4, r0
 800b44e:	4943      	ldr	r1, [pc, #268]	; (800b55c <HttpDaemon::HandleGet()+0x114>)
 800b450:	4628      	mov	r0, r5
 800b452:	f7ff fe98 	bl	800b186 <strcmp>
 800b456:	b120      	cbz	r0, 800b462 <HttpDaemon::HandleGet()+0x1a>
 800b458:	4628      	mov	r0, r5
 800b45a:	4941      	ldr	r1, [pc, #260]	; (800b560 <HttpDaemon::HandleGet()+0x118>)
 800b45c:	f7ff fe93 	bl	800b186 <strcmp>
 800b460:	b960      	cbnz	r0, 800b47c <HttpDaemon::HandleGet()+0x34>
 800b462:	4621      	mov	r1, r4
 800b464:	4b3f      	ldr	r3, [pc, #252]	; (800b564 <HttpDaemon::HandleGet()+0x11c>)
 800b466:	4840      	ldr	r0, [pc, #256]	; (800b568 <HttpDaemon::HandleGet()+0x120>)
 800b468:	f841 3b22 	str.w	r3, [r1], #34
 800b46c:	f000 fa7a 	bl	800b964 <get_file_content(char const*, char*)>
 800b470:	2800      	cmp	r0, #0
 800b472:	dd33      	ble.n	800b4dc <HttpDaemon::HandleGet()+0x94>
 800b474:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b478:	20c8      	movs	r0, #200	; 0xc8
 800b47a:	bd70      	pop	{r4, r5, r6, pc}
 800b47c:	4628      	mov	r0, r5
 800b47e:	493b      	ldr	r1, [pc, #236]	; (800b56c <HttpDaemon::HandleGet()+0x124>)
 800b480:	f7ff fe81 	bl	800b186 <strcmp>
 800b484:	b928      	cbnz	r0, 800b492 <HttpDaemon::HandleGet()+0x4a>
 800b486:	4621      	mov	r1, r4
 800b488:	4b39      	ldr	r3, [pc, #228]	; (800b570 <HttpDaemon::HandleGet()+0x128>)
 800b48a:	483a      	ldr	r0, [pc, #232]	; (800b574 <HttpDaemon::HandleGet()+0x12c>)
 800b48c:	f841 3b22 	str.w	r3, [r1], #34
 800b490:	e7ec      	b.n	800b46c <HttpDaemon::HandleGet()+0x24>
 800b492:	4628      	mov	r0, r5
 800b494:	4938      	ldr	r1, [pc, #224]	; (800b578 <HttpDaemon::HandleGet()+0x130>)
 800b496:	f7ff fe76 	bl	800b186 <strcmp>
 800b49a:	b198      	cbz	r0, 800b4c4 <HttpDaemon::HandleGet()+0x7c>
 800b49c:	4a37      	ldr	r2, [pc, #220]	; (800b57c <HttpDaemon::HandleGet()+0x134>)
 800b49e:	1e6b      	subs	r3, r5, #1
 800b4a0:	1d69      	adds	r1, r5, #5
 800b4a2:	428b      	cmp	r3, r1
 800b4a4:	d114      	bne.n	800b4d0 <HttpDaemon::HandleGet()+0x88>
 800b4a6:	4b36      	ldr	r3, [pc, #216]	; (800b580 <HttpDaemon::HandleGet()+0x138>)
 800b4a8:	3506      	adds	r5, #6
 800b4aa:	4628      	mov	r0, r5
 800b4ac:	4935      	ldr	r1, [pc, #212]	; (800b584 <HttpDaemon::HandleGet()+0x13c>)
 800b4ae:	6023      	str	r3, [r4, #0]
 800b4b0:	f7ff fe69 	bl	800b186 <strcmp>
 800b4b4:	b9a8      	cbnz	r0, 800b4e2 <HttpDaemon::HandleGet()+0x9a>
 800b4b6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4ba:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4be:	f000 f9d9 	bl	800b874 <remoteconfig::json_get_list(char*, unsigned short)>
 800b4c2:	e7d5      	b.n	800b470 <HttpDaemon::HandleGet()+0x28>
 800b4c4:	4621      	mov	r1, r4
 800b4c6:	4b30      	ldr	r3, [pc, #192]	; (800b588 <HttpDaemon::HandleGet()+0x140>)
 800b4c8:	4830      	ldr	r0, [pc, #192]	; (800b58c <HttpDaemon::HandleGet()+0x144>)
 800b4ca:	f841 3b22 	str.w	r3, [r1], #34
 800b4ce:	e7cd      	b.n	800b46c <HttpDaemon::HandleGet()+0x24>
 800b4d0:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b4d4:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b4d8:	4286      	cmp	r6, r0
 800b4da:	d0e2      	beq.n	800b4a2 <HttpDaemon::HandleGet()+0x5a>
 800b4dc:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b4e0:	e7cb      	b.n	800b47a <HttpDaemon::HandleGet()+0x32>
 800b4e2:	4628      	mov	r0, r5
 800b4e4:	492a      	ldr	r1, [pc, #168]	; (800b590 <HttpDaemon::HandleGet()+0x148>)
 800b4e6:	f7ff fe4e 	bl	800b186 <strcmp>
 800b4ea:	b930      	cbnz	r0, 800b4fa <HttpDaemon::HandleGet()+0xb2>
 800b4ec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4f0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4f4:	f000 f9f2 	bl	800b8dc <remoteconfig::json_get_version(char*, unsigned short)>
 800b4f8:	e7ba      	b.n	800b470 <HttpDaemon::HandleGet()+0x28>
 800b4fa:	4628      	mov	r0, r5
 800b4fc:	4925      	ldr	r1, [pc, #148]	; (800b594 <HttpDaemon::HandleGet()+0x14c>)
 800b4fe:	f7ff fe42 	bl	800b186 <strcmp>
 800b502:	b958      	cbnz	r0, 800b51c <HttpDaemon::HandleGet()+0xd4>
 800b504:	4b24      	ldr	r3, [pc, #144]	; (800b598 <HttpDaemon::HandleGet()+0x150>)
 800b506:	681b      	ldr	r3, [r3, #0]
 800b508:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800b50c:	b31b      	cbz	r3, 800b556 <HttpDaemon::HandleGet()+0x10e>
 800b50e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b512:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b516:	f000 f9fd 	bl	800b914 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b51a:	e7a9      	b.n	800b470 <HttpDaemon::HandleGet()+0x28>
 800b51c:	4628      	mov	r0, r5
 800b51e:	491f      	ldr	r1, [pc, #124]	; (800b59c <HttpDaemon::HandleGet()+0x154>)
 800b520:	f7ff fe31 	bl	800b186 <strcmp>
 800b524:	b930      	cbnz	r0, 800b534 <HttpDaemon::HandleGet()+0xec>
 800b526:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b52a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b52e:	f000 fa01 	bl	800b934 <remoteconfig::json_get_display(char*, unsigned short)>
 800b532:	e79d      	b.n	800b470 <HttpDaemon::HandleGet()+0x28>
 800b534:	4628      	mov	r0, r5
 800b536:	491a      	ldr	r1, [pc, #104]	; (800b5a0 <HttpDaemon::HandleGet()+0x158>)
 800b538:	f7ff fe25 	bl	800b186 <strcmp>
 800b53c:	b930      	cbnz	r0, 800b54c <HttpDaemon::HandleGet()+0x104>
 800b53e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b542:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b546:	f000 fa05 	bl	800b954 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b54a:	e791      	b.n	800b470 <HttpDaemon::HandleGet()+0x28>
 800b54c:	4620      	mov	r0, r4
 800b54e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b552:	f7ff bf37 	b.w	800b3c4 <HttpDaemon::HandleGetTxt()>
 800b556:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b55a:	e78e      	b.n	800b47a <HttpDaemon::HandleGet()+0x32>
 800b55c:	08011690 	stmdaeq	r1, {r4, r7, r9, sl, ip}
 800b560:	08011669 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, ip}
 800b564:	0801187c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip}
 800b568:	0801166a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sl, ip}
 800b56c:	08011675 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, ip}
 800b570:	0801189c 	stmdaeq	r1, {r2, r3, r4, r7, fp, ip}
 800b574:	08011676 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, ip}
 800b578:	08011681 	stmdaeq	r1, {r0, r7, r9, sl, ip}
 800b57c:	0801168b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, ip}
 800b580:	080118dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, fp, ip}
 800b584:	08011692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip}
 800b588:	080118bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, ip}
 800b58c:	08011682 	stmdaeq	r1, {r1, r7, r9, sl, ip}
 800b590:	08011697 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, ip}
 800b594:	0801169f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip}
 800b598:	20000b74 	andcs	r0, r0, r4, ror fp
 800b59c:	080116a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip}
 800b5a0:	080116ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, sl, ip}

0800b5a4 <HttpDaemon::HandlePost(bool)>:
 800b5a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5a6:	4604      	mov	r4, r0
 800b5a8:	2900      	cmp	r1, #0
 800b5aa:	f040 8091 	bne.w	800b6d0 <HttpDaemon::HandlePost(bool)+0x12c>
 800b5ae:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b5b2:	2b00      	cmp	r3, #0
 800b5b4:	d05d      	beq.n	800b672 <HttpDaemon::HandlePost(bool)+0xce>
 800b5b6:	6845      	ldr	r5, [r0, #4]
 800b5b8:	4948      	ldr	r1, [pc, #288]	; (800b6dc <HttpDaemon::HandlePost(bool)+0x138>)
 800b5ba:	4628      	mov	r0, r5
 800b5bc:	f7ff fde3 	bl	800b186 <strcmp>
 800b5c0:	2800      	cmp	r0, #0
 800b5c2:	bf0c      	ite	eq
 800b5c4:	2301      	moveq	r3, #1
 800b5c6:	2300      	movne	r3, #0
 800b5c8:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b5cc:	d055      	beq.n	800b67a <HttpDaemon::HandlePost(bool)+0xd6>
 800b5ce:	4628      	mov	r0, r5
 800b5d0:	4943      	ldr	r1, [pc, #268]	; (800b6e0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800b5d2:	f7ff fdd8 	bl	800b186 <strcmp>
 800b5d6:	2800      	cmp	r0, #0
 800b5d8:	d04f      	beq.n	800b67a <HttpDaemon::HandlePost(bool)+0xd6>
 800b5da:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b5de:	e04a      	b.n	800b676 <HttpDaemon::HandlePost(bool)+0xd2>
 800b5e0:	4940      	ldr	r1, [pc, #256]	; (800b6e4 <HttpDaemon::HandlePost(bool)+0x140>)
 800b5e2:	68a0      	ldr	r0, [r4, #8]
 800b5e4:	f10d 0207 	add.w	r2, sp, #7
 800b5e8:	f002 ff9a 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b5ec:	b9e8      	cbnz	r0, 800b62a <HttpDaemon::HandlePost(bool)+0x86>
 800b5ee:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b5f2:	4b3d      	ldr	r3, [pc, #244]	; (800b6e8 <HttpDaemon::HandlePost(bool)+0x144>)
 800b5f4:	fab6 f186 	clz	r1, r6
 800b5f8:	681d      	ldr	r5, [r3, #0]
 800b5fa:	0949      	lsrs	r1, r1, #5
 800b5fc:	69a8      	ldr	r0, [r5, #24]
 800b5fe:	b138      	cbz	r0, 800b610 <HttpDaemon::HandlePost(bool)+0x6c>
 800b600:	6803      	ldr	r3, [r0, #0]
 800b602:	7429      	strb	r1, [r5, #16]
 800b604:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b606:	4798      	blx	r3
 800b608:	b116      	cbz	r6, 800b610 <HttpDaemon::HandlePost(bool)+0x6c>
 800b60a:	4b38      	ldr	r3, [pc, #224]	; (800b6ec <HttpDaemon::HandlePost(bool)+0x148>)
 800b60c:	681b      	ldr	r3, [r3, #0]
 800b60e:	606b      	str	r3, [r5, #4]
 800b610:	4620      	mov	r0, r4
 800b612:	4b37      	ldr	r3, [pc, #220]	; (800b6f0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800b614:	f240 519f 	movw	r1, #1439	; 0x59f
 800b618:	4a36      	ldr	r2, [pc, #216]	; (800b6f4 <HttpDaemon::HandlePost(bool)+0x150>)
 800b61a:	f840 3b22 	str.w	r3, [r0], #34
 800b61e:	f7fd f90d 	bl	800883c <snprintf>
 800b622:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b626:	20c8      	movs	r0, #200	; 0xc8
 800b628:	e025      	b.n	800b676 <HttpDaemon::HandlePost(bool)+0xd2>
 800b62a:	4933      	ldr	r1, [pc, #204]	; (800b6f8 <HttpDaemon::HandlePost(bool)+0x154>)
 800b62c:	68a0      	ldr	r0, [r4, #8]
 800b62e:	f10d 0207 	add.w	r2, sp, #7
 800b632:	f002 ff75 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b636:	b9e0      	cbnz	r0, 800b672 <HttpDaemon::HandlePost(bool)+0xce>
 800b638:	4b30      	ldr	r3, [pc, #192]	; (800b6fc <HttpDaemon::HandlePost(bool)+0x158>)
 800b63a:	6818      	ldr	r0, [r3, #0]
 800b63c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b640:	b11b      	cbz	r3, 800b64a <HttpDaemon::HandlePost(bool)+0xa6>
 800b642:	2104      	movs	r1, #4
 800b644:	f003 fb0a 	bl	800ec5c <LedBlink::SetMode(ledblink::Mode)>
 800b648:	e7e2      	b.n	800b610 <HttpDaemon::HandlePost(bool)+0x6c>
 800b64a:	2102      	movs	r1, #2
 800b64c:	e7fa      	b.n	800b644 <HttpDaemon::HandlePost(bool)+0xa0>
 800b64e:	4b2c      	ldr	r3, [pc, #176]	; (800b700 <HttpDaemon::HandlePost(bool)+0x15c>)
 800b650:	2001      	movs	r0, #1
 800b652:	781d      	ldrb	r5, [r3, #0]
 800b654:	f7ff fdbe 	bl	800b1d4 <PropertiesConfig::EnableJSON(bool)>
 800b658:	4b2a      	ldr	r3, [pc, #168]	; (800b704 <HttpDaemon::HandlePost(bool)+0x160>)
 800b65a:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800b65e:	6818      	ldr	r0, [r3, #0]
 800b660:	68a1      	ldr	r1, [r4, #8]
 800b662:	f005 0501 	and.w	r5, r5, #1
 800b666:	f7ff f9eb 	bl	800aa40 <RemoteConfig::HandleSet(void*, unsigned int)>
 800b66a:	4628      	mov	r0, r5
 800b66c:	f7ff fdb2 	bl	800b1d4 <PropertiesConfig::EnableJSON(bool)>
 800b670:	e7ce      	b.n	800b610 <HttpDaemon::HandlePost(bool)+0x6c>
 800b672:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b676:	b002      	add	sp, #8
 800b678:	bd70      	pop	{r4, r5, r6, pc}
 800b67a:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800b67e:	6962      	ldr	r2, [r4, #20]
 800b680:	429a      	cmp	r2, r3
 800b682:	dbd0      	blt.n	800b626 <HttpDaemon::HandlePost(bool)+0x82>
 800b684:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d0cc      	beq.n	800b626 <HttpDaemon::HandlePost(bool)+0x82>
 800b68c:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b690:	2b00      	cmp	r3, #0
 800b692:	d0dc      	beq.n	800b64e <HttpDaemon::HandlePost(bool)+0xaa>
 800b694:	2201      	movs	r2, #1
 800b696:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800b69a:	68a0      	ldr	r0, [r4, #8]
 800b69c:	f002 fd3e 	bl	800e11c <properties::convert_json_file(char*, unsigned short, bool)>
 800b6a0:	2800      	cmp	r0, #0
 800b6a2:	dde6      	ble.n	800b672 <HttpDaemon::HandlePost(bool)+0xce>
 800b6a4:	4918      	ldr	r1, [pc, #96]	; (800b708 <HttpDaemon::HandlePost(bool)+0x164>)
 800b6a6:	68a0      	ldr	r0, [r4, #8]
 800b6a8:	f10d 0207 	add.w	r2, sp, #7
 800b6ac:	f002 ff38 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b6b0:	2800      	cmp	r0, #0
 800b6b2:	d195      	bne.n	800b5e0 <HttpDaemon::HandlePost(bool)+0x3c>
 800b6b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b6b8:	2b00      	cmp	r3, #0
 800b6ba:	d0a9      	beq.n	800b610 <HttpDaemon::HandlePost(bool)+0x6c>
 800b6bc:	4b11      	ldr	r3, [pc, #68]	; (800b704 <HttpDaemon::HandlePost(bool)+0x160>)
 800b6be:	681b      	ldr	r3, [r3, #0]
 800b6c0:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800b6c4:	2b00      	cmp	r3, #0
 800b6c6:	d0d4      	beq.n	800b672 <HttpDaemon::HandlePost(bool)+0xce>
 800b6c8:	4b10      	ldr	r3, [pc, #64]	; (800b70c <HttpDaemon::HandlePost(bool)+0x168>)
 800b6ca:	6818      	ldr	r0, [r3, #0]
 800b6cc:	f003 fb4e 	bl	800ed6c <Hardware::Reboot()>
 800b6d0:	68c3      	ldr	r3, [r0, #12]
 800b6d2:	6083      	str	r3, [r0, #8]
 800b6d4:	6943      	ldr	r3, [r0, #20]
 800b6d6:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800b6da:	e7d7      	b.n	800b68c <HttpDaemon::HandlePost(bool)+0xe8>
 800b6dc:	080116b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, ip}
 800b6e0:	08011654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip}
 800b6e4:	080116a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip}
 800b6e8:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800b6ec:	20009bc4 	andcs	r9, r0, r4, asr #23
 800b6f0:	0801187c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip}
 800b6f4:	080116d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip}
 800b6f8:	080116cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip}
 800b6fc:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800b700:	20009aba 			; <UNDEFINED> instruction: 0x20009aba
 800b704:	20000b74 	andcs	r0, r0, r4, ror fp
 800b708:	080116c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, ip}
 800b70c:	20009bac 	andcs	r9, r0, ip, lsr #23

0800b710 <HttpDaemon::Run()>:
 800b710:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b712:	4e4a      	ldr	r6, [pc, #296]	; (800b83c <HttpDaemon::Run()+0x12c>)
 800b714:	4604      	mov	r4, r0
 800b716:	6901      	ldr	r1, [r0, #16]
 800b718:	f100 020c 	add.w	r2, r0, #12
 800b71c:	b085      	sub	sp, #20
 800b71e:	6830      	ldr	r0, [r6, #0]
 800b720:	f001 ff2f 	bl	800d582 <Network::TcpRead(int, unsigned char const**)>
 800b724:	6160      	str	r0, [r4, #20]
 800b726:	2800      	cmp	r0, #0
 800b728:	d061      	beq.n	800b7ee <HttpDaemon::Run()+0xde>
 800b72a:	69a3      	ldr	r3, [r4, #24]
 800b72c:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b730:	d15f      	bne.n	800b7f2 <HttpDaemon::Run()+0xe2>
 800b732:	4620      	mov	r0, r4
 800b734:	f7ff fe0e 	bl	800b354 <HttpDaemon::ParseRequest()>
 800b738:	28c8      	cmp	r0, #200	; 0xc8
 800b73a:	61a0      	str	r0, [r4, #24]
 800b73c:	d106      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b73e:	69e3      	ldr	r3, [r4, #28]
 800b740:	2b00      	cmp	r3, #0
 800b742:	d147      	bne.n	800b7d4 <HttpDaemon::Run()+0xc4>
 800b744:	4620      	mov	r0, r4
 800b746:	f7ff fe7f 	bl	800b448 <HttpDaemon::HandleGet()>
 800b74a:	61a0      	str	r0, [r4, #24]
 800b74c:	69a3      	ldr	r3, [r4, #24]
 800b74e:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800b752:	2bc8      	cmp	r3, #200	; 0xc8
 800b754:	d06f      	beq.n	800b836 <HttpDaemon::Run()+0x126>
 800b756:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b75a:	d062      	beq.n	800b822 <HttpDaemon::Run()+0x112>
 800b75c:	dc52      	bgt.n	800b804 <HttpDaemon::Run()+0xf4>
 800b75e:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b762:	d060      	beq.n	800b826 <HttpDaemon::Run()+0x116>
 800b764:	f240 129d 	movw	r2, #413	; 0x19d
 800b768:	4293      	cmp	r3, r2
 800b76a:	d05e      	beq.n	800b82a <HttpDaemon::Run()+0x11a>
 800b76c:	4d34      	ldr	r5, [pc, #208]	; (800b840 <HttpDaemon::Run()+0x130>)
 800b76e:	4a35      	ldr	r2, [pc, #212]	; (800b844 <HttpDaemon::Run()+0x134>)
 800b770:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b774:	bf18      	it	ne
 800b776:	4615      	movne	r5, r2
 800b778:	4a33      	ldr	r2, [pc, #204]	; (800b848 <HttpDaemon::Run()+0x138>)
 800b77a:	f240 519f 	movw	r1, #1439	; 0x59f
 800b77e:	6022      	str	r2, [r4, #0]
 800b780:	4638      	mov	r0, r7
 800b782:	e9cd 5500 	strd	r5, r5, [sp]
 800b786:	4a31      	ldr	r2, [pc, #196]	; (800b84c <HttpDaemon::Run()+0x13c>)
 800b788:	f7fd f858 	bl	800883c <snprintf>
 800b78c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b790:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b794:	f240 519f 	movw	r1, #1439	; 0x59f
 800b798:	9303      	str	r3, [sp, #12]
 800b79a:	6823      	ldr	r3, [r4, #0]
 800b79c:	4a2c      	ldr	r2, [pc, #176]	; (800b850 <HttpDaemon::Run()+0x140>)
 800b79e:	9302      	str	r3, [sp, #8]
 800b7a0:	4b2c      	ldr	r3, [pc, #176]	; (800b854 <HttpDaemon::Run()+0x144>)
 800b7a2:	68e0      	ldr	r0, [r4, #12]
 800b7a4:	e9cd 5300 	strd	r5, r3, [sp]
 800b7a8:	69a3      	ldr	r3, [r4, #24]
 800b7aa:	f7fd f847 	bl	800883c <snprintf>
 800b7ae:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b7b2:	b283      	uxth	r3, r0
 800b7b4:	6830      	ldr	r0, [r6, #0]
 800b7b6:	f001 fee8 	bl	800d58a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b7ba:	463a      	mov	r2, r7
 800b7bc:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b7c0:	6921      	ldr	r1, [r4, #16]
 800b7c2:	6830      	ldr	r0, [r6, #0]
 800b7c4:	f001 fee1 	bl	800d58a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b7c8:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b7cc:	2302      	movs	r3, #2
 800b7ce:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b7d2:	e00c      	b.n	800b7ee <HttpDaemon::Run()+0xde>
 800b7d4:	2b01      	cmp	r3, #1
 800b7d6:	d1b9      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b7d8:	2100      	movs	r1, #0
 800b7da:	4620      	mov	r0, r4
 800b7dc:	f7ff fee2 	bl	800b5a4 <HttpDaemon::HandlePost(bool)>
 800b7e0:	28c8      	cmp	r0, #200	; 0xc8
 800b7e2:	61a0      	str	r0, [r4, #24]
 800b7e4:	d1b2      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b7e6:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b7ea:	2b00      	cmp	r3, #0
 800b7ec:	d1ae      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b7ee:	b005      	add	sp, #20
 800b7f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7f2:	2bc8      	cmp	r3, #200	; 0xc8
 800b7f4:	d1aa      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b7f6:	69e1      	ldr	r1, [r4, #28]
 800b7f8:	2901      	cmp	r1, #1
 800b7fa:	d1a7      	bne.n	800b74c <HttpDaemon::Run()+0x3c>
 800b7fc:	4620      	mov	r0, r4
 800b7fe:	f7ff fed1 	bl	800b5a4 <HttpDaemon::HandlePost(bool)>
 800b802:	e7a2      	b.n	800b74a <HttpDaemon::Run()+0x3a>
 800b804:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b808:	4293      	cmp	r3, r2
 800b80a:	d010      	beq.n	800b82e <HttpDaemon::Run()+0x11e>
 800b80c:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b810:	4293      	cmp	r3, r2
 800b812:	d00e      	beq.n	800b832 <HttpDaemon::Run()+0x122>
 800b814:	4d10      	ldr	r5, [pc, #64]	; (800b858 <HttpDaemon::Run()+0x148>)
 800b816:	4a0b      	ldr	r2, [pc, #44]	; (800b844 <HttpDaemon::Run()+0x134>)
 800b818:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b81c:	bf18      	it	ne
 800b81e:	4615      	movne	r5, r2
 800b820:	e7aa      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b822:	4d0e      	ldr	r5, [pc, #56]	; (800b85c <HttpDaemon::Run()+0x14c>)
 800b824:	e7a8      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b826:	4d0e      	ldr	r5, [pc, #56]	; (800b860 <HttpDaemon::Run()+0x150>)
 800b828:	e7a6      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b82a:	4d0e      	ldr	r5, [pc, #56]	; (800b864 <HttpDaemon::Run()+0x154>)
 800b82c:	e7a4      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b82e:	4d0e      	ldr	r5, [pc, #56]	; (800b868 <HttpDaemon::Run()+0x158>)
 800b830:	e7a2      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b832:	4d0e      	ldr	r5, [pc, #56]	; (800b86c <HttpDaemon::Run()+0x15c>)
 800b834:	e7a0      	b.n	800b778 <HttpDaemon::Run()+0x68>
 800b836:	4d0e      	ldr	r5, [pc, #56]	; (800b870 <HttpDaemon::Run()+0x160>)
 800b838:	e7aa      	b.n	800b790 <HttpDaemon::Run()+0x80>
 800b83a:	bf00      	nop
 800b83c:	2000948c 	andcs	r9, r0, ip, lsl #9
 800b840:	08011731 	stmdaeq	r1, {r0, r4, r5, r8, r9, sl, ip}
 800b844:	080117b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, ip}
 800b848:	0801187c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip}
 800b84c:	080117c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sl, ip}
 800b850:	08011824 	stmdaeq	r1, {r2, r5, fp, ip}
 800b854:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 800b858:	08011775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, ip}
 800b85c:	08011760 	stmdaeq	r1, {r5, r6, r8, r9, sl, ip}
 800b860:	0801173d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sl, ip}
 800b864:	08011747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip}
 800b868:	0801178b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip}
 800b86c:	080117a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, ip}
 800b870:	080117c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, ip}

0800b874 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b878:	4b14      	ldr	r3, [pc, #80]	; (800b8cc <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b87a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800b8d0 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800b87e:	681b      	ldr	r3, [r3, #0]
 800b880:	b088      	sub	sp, #32
 800b882:	4605      	mov	r5, r0
 800b884:	f8d8 0000 	ldr.w	r0, [r8]
 800b888:	691c      	ldr	r4, [r3, #16]
 800b88a:	460e      	mov	r6, r1
 800b88c:	f7fe ffc8 	bl	800a820 <RemoteConfig::GetStringNode() const>
 800b890:	4607      	mov	r7, r0
 800b892:	f8d8 0000 	ldr.w	r0, [r8]
 800b896:	f7fe ffcf 	bl	800a838 <RemoteConfig::GetStringOutput() const>
 800b89a:	4b0e      	ldr	r3, [pc, #56]	; (800b8d4 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800b89c:	4631      	mov	r1, r6
 800b89e:	7a1a      	ldrb	r2, [r3, #8]
 800b8a0:	3309      	adds	r3, #9
 800b8a2:	9303      	str	r3, [sp, #12]
 800b8a4:	0e23      	lsrs	r3, r4, #24
 800b8a6:	9302      	str	r3, [sp, #8]
 800b8a8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b8ac:	9301      	str	r3, [sp, #4]
 800b8ae:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b8b2:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b8b6:	9300      	str	r3, [sp, #0]
 800b8b8:	4628      	mov	r0, r5
 800b8ba:	4a07      	ldr	r2, [pc, #28]	; (800b8d8 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800b8bc:	9704      	str	r7, [sp, #16]
 800b8be:	b2e3      	uxtb	r3, r4
 800b8c0:	f7fc ffbc 	bl	800883c <snprintf>
 800b8c4:	b280      	uxth	r0, r0
 800b8c6:	b008      	add	sp, #32
 800b8c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8cc:	2000948c 	andcs	r9, r0, ip, lsl #9
 800b8d0:	20000b74 	andcs	r0, r0, r4, ror fp
 800b8d4:	20000b50 	andcs	r0, r0, r0, asr fp
 800b8d8:	08011956 	stmdaeq	r1, {r1, r2, r4, r6, r8, fp, ip}

0800b8dc <remoteconfig::json_get_version(char*, unsigned short)>:
 800b8dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b8de:	2208      	movs	r2, #8
 800b8e0:	4b09      	ldr	r3, [pc, #36]	; (800b908 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b8e2:	9204      	str	r2, [sp, #16]
 800b8e4:	f1a3 020b 	sub.w	r2, r3, #11
 800b8e8:	9203      	str	r2, [sp, #12]
 800b8ea:	220b      	movs	r2, #11
 800b8ec:	9202      	str	r2, [sp, #8]
 800b8ee:	4a07      	ldr	r2, [pc, #28]	; (800b90c <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b8f0:	9305      	str	r3, [sp, #20]
 800b8f2:	3b0e      	subs	r3, #14
 800b8f4:	9201      	str	r2, [sp, #4]
 800b8f6:	9300      	str	r3, [sp, #0]
 800b8f8:	4a05      	ldr	r2, [pc, #20]	; (800b910 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b8fa:	2303      	movs	r3, #3
 800b8fc:	f7fc ff9e 	bl	800883c <snprintf>
 800b900:	b280      	uxth	r0, r0
 800b902:	b007      	add	sp, #28
 800b904:	f85d fb04 	ldr.w	pc, [sp], #4
 800b908:	20009b5a 	andcs	r9, r0, sl, asr fp
 800b90c:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 800b910:	080119b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, fp, ip}

0800b914 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b914:	b508      	push	{r3, lr}
 800b916:	4b05      	ldr	r3, [pc, #20]	; (800b92c <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b918:	681a      	ldr	r2, [r3, #0]
 800b91a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b91e:	fbb2 f3f3 	udiv	r3, r2, r3
 800b922:	4a03      	ldr	r2, [pc, #12]	; (800b930 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b924:	f7fc ff8a 	bl	800883c <snprintf>
 800b928:	b280      	uxth	r0, r0
 800b92a:	bd08      	pop	{r3, pc}
 800b92c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800b930:	080119fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, fp, ip}

0800b934 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b934:	b508      	push	{r3, lr}
 800b936:	4b05      	ldr	r3, [pc, #20]	; (800b94c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b938:	4a05      	ldr	r2, [pc, #20]	; (800b950 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b93a:	681b      	ldr	r3, [r3, #0]
 800b93c:	7c1b      	ldrb	r3, [r3, #16]
 800b93e:	f083 0301 	eor.w	r3, r3, #1
 800b942:	f7fc ff7b 	bl	800883c <snprintf>
 800b946:	b280      	uxth	r0, r0
 800b948:	bd08      	pop	{r3, pc}
 800b94a:	bf00      	nop
 800b94c:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800b950:	08011a0a 	stmdaeq	r1, {r1, r3, r9, fp, ip}

0800b954 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800b954:	b508      	push	{r3, lr}
 800b956:	4a02      	ldr	r2, [pc, #8]	; (800b960 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800b958:	f7fc ff70 	bl	800883c <snprintf>
 800b95c:	b280      	uxth	r0, r0
 800b95e:	bd08      	pop	{r3, pc}
 800b960:	08011a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, ip}

0800b964 <get_file_content(char const*, char*)>:
 800b964:	2300      	movs	r3, #0
 800b966:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b968:	4a18      	ldr	r2, [pc, #96]	; (800b9cc <get_file_content(char const*, char*)+0x68>)
 800b96a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800b96e:	1e47      	subs	r7, r0, #1
 800b970:	1e6e      	subs	r6, r5, #1
 800b972:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b976:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800b97a:	4564      	cmp	r4, ip
 800b97c:	d00b      	beq.n	800b996 <get_file_content(char const*, char*)+0x32>
 800b97e:	3301      	adds	r3, #1
 800b980:	2b03      	cmp	r3, #3
 800b982:	d1f2      	bne.n	800b96a <get_file_content(char const*, char*)+0x6>
 800b984:	2333      	movs	r3, #51	; 0x33
 800b986:	4a12      	ldr	r2, [pc, #72]	; (800b9d0 <get_file_content(char const*, char*)+0x6c>)
 800b988:	4912      	ldr	r1, [pc, #72]	; (800b9d4 <get_file_content(char const*, char*)+0x70>)
 800b98a:	4813      	ldr	r0, [pc, #76]	; (800b9d8 <get_file_content(char const*, char*)+0x74>)
 800b98c:	f7fc ff46 	bl	800881c <printf>
 800b990:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800b994:	e016      	b.n	800b9c4 <get_file_content(char const*, char*)+0x60>
 800b996:	2c00      	cmp	r4, #0
 800b998:	d1eb      	bne.n	800b972 <get_file_content(char const*, char*)+0xe>
 800b99a:	460c      	mov	r4, r1
 800b99c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800b9a0:	6853      	ldr	r3, [r2, #4]
 800b9a2:	3b01      	subs	r3, #1
 800b9a4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800b9a8:	f804 2b01 	strb.w	r2, [r4], #1
 800b9ac:	2a00      	cmp	r2, #0
 800b9ae:	d1f9      	bne.n	800b9a4 <get_file_content(char const*, char*)+0x40>
 800b9b0:	1a64      	subs	r4, r4, r1
 800b9b2:	3c01      	subs	r4, #1
 800b9b4:	232e      	movs	r3, #46	; 0x2e
 800b9b6:	e9cd 5400 	strd	r5, r4, [sp]
 800b9ba:	4a06      	ldr	r2, [pc, #24]	; (800b9d4 <get_file_content(char const*, char*)+0x70>)
 800b9bc:	4904      	ldr	r1, [pc, #16]	; (800b9d0 <get_file_content(char const*, char*)+0x6c>)
 800b9be:	4807      	ldr	r0, [pc, #28]	; (800b9dc <get_file_content(char const*, char*)+0x78>)
 800b9c0:	f7fc ff2c 	bl	800881c <printf>
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	b003      	add	sp, #12
 800b9c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9ca:	bf00      	nop
 800b9cc:	08011d98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip}
 800b9d0:	08011ab4 	stmdaeq	r1, {r2, r4, r5, r7, r9, fp, ip}
 800b9d4:	08011a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, ip}
 800b9d8:	08011ae1 	stmdaeq	r1, {r0, r5, r6, r7, r9, fp, ip}
 800b9dc:	08011ac5 	stmdaeq	r1, {r0, r2, r6, r7, r9, fp, ip}

0800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800b9e0:	2300      	movs	r3, #0
 800b9e2:	2020      	movs	r0, #32
 800b9e4:	b510      	push	{r4, lr}
 800b9e6:	4a04      	ldr	r2, [pc, #16]	; (800b9f8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800b9e8:	428b      	cmp	r3, r1
 800b9ea:	d100      	bne.n	800b9ee <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800b9ec:	bd10      	pop	{r4, pc}
 800b9ee:	f852 4b04 	ldr.w	r4, [r2], #4
 800b9f2:	3301      	adds	r3, #1
 800b9f4:	4420      	add	r0, r4
 800b9f6:	e7f7      	b.n	800b9e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800b9f8:	080122dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp}

0800b9fc <SpiFlashStore::Init()>:
 800b9fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba00:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800bb18 <SpiFlashStore::Init()+0x11c>
 800ba04:	4607      	mov	r7, r0
 800ba06:	b085      	sub	sp, #20
 800ba08:	f8d8 0000 	ldr.w	r0, [r8]
 800ba0c:	f000 faf6 	bl	800bffc <FlashRom::GetSectorSize() const>
 800ba10:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800ba14:	4605      	mov	r5, r0
 800ba16:	d17d      	bne.n	800bb14 <SpiFlashStore::Init()+0x118>
 800ba18:	f8d8 0000 	ldr.w	r0, [r8]
 800ba1c:	f000 fae6 	bl	800bfec <FlashRom::GetSize() const>
 800ba20:	4b3e      	ldr	r3, [pc, #248]	; (800bb1c <SpiFlashStore::Init()+0x120>)
 800ba22:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800ba26:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800ba2a:	6019      	str	r1, [r3, #0]
 800ba2c:	2e00      	cmp	r6, #0
 800ba2e:	d171      	bne.n	800bb14 <SpiFlashStore::Init()+0x118>
 800ba30:	4c3b      	ldr	r4, [pc, #236]	; (800bb20 <SpiFlashStore::Init()+0x124>)
 800ba32:	ab03      	add	r3, sp, #12
 800ba34:	9300      	str	r3, [sp, #0]
 800ba36:	462a      	mov	r2, r5
 800ba38:	4623      	mov	r3, r4
 800ba3a:	f8d8 0000 	ldr.w	r0, [r8]
 800ba3e:	f000 fae0 	bl	800c002 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800ba42:	7823      	ldrb	r3, [r4, #0]
 800ba44:	2b41      	cmp	r3, #65	; 0x41
 800ba46:	bf1c      	itt	ne
 800ba48:	2341      	movne	r3, #65	; 0x41
 800ba4a:	7023      	strbne	r3, [r4, #0]
 800ba4c:	7863      	ldrb	r3, [r4, #1]
 800ba4e:	bf14      	ite	ne
 800ba50:	4635      	movne	r5, r6
 800ba52:	2501      	moveq	r5, #1
 800ba54:	2b76      	cmp	r3, #118	; 0x76
 800ba56:	bf1c      	itt	ne
 800ba58:	2376      	movne	r3, #118	; 0x76
 800ba5a:	7063      	strbne	r3, [r4, #1]
 800ba5c:	78a3      	ldrb	r3, [r4, #2]
 800ba5e:	bf18      	it	ne
 800ba60:	2500      	movne	r5, #0
 800ba62:	2b56      	cmp	r3, #86	; 0x56
 800ba64:	bf1c      	itt	ne
 800ba66:	2356      	movne	r3, #86	; 0x56
 800ba68:	70a3      	strbne	r3, [r4, #2]
 800ba6a:	78e3      	ldrb	r3, [r4, #3]
 800ba6c:	bf18      	it	ne
 800ba6e:	2500      	movne	r5, #0
 800ba70:	2b10      	cmp	r3, #16
 800ba72:	d022      	beq.n	800baba <SpiFlashStore::Init()+0xbe>
 800ba74:	2310      	movs	r3, #16
 800ba76:	70e3      	strb	r3, [r4, #3]
 800ba78:	2201      	movs	r2, #1
 800ba7a:	2500      	movs	r5, #0
 800ba7c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800ba80:	4b28      	ldr	r3, [pc, #160]	; (800bb24 <SpiFlashStore::Init()+0x128>)
 800ba82:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800bb28 <SpiFlashStore::Init()+0x12c>
 800ba86:	701a      	strb	r2, [r3, #0]
 800ba88:	4631      	mov	r1, r6
 800ba8a:	4638      	mov	r0, r7
 800ba8c:	f7ff ffa8 	bl	800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ba90:	1823      	adds	r3, r4, r0
 800ba92:	5425      	strb	r5, [r4, r0]
 800ba94:	705d      	strb	r5, [r3, #1]
 800ba96:	709d      	strb	r5, [r3, #2]
 800ba98:	70dd      	strb	r5, [r3, #3]
 800ba9a:	f858 3b04 	ldr.w	r3, [r8], #4
 800ba9e:	1d02      	adds	r2, r0, #4
 800baa0:	4403      	add	r3, r0
 800baa2:	429a      	cmp	r2, r3
 800baa4:	d332      	bcc.n	800bb0c <SpiFlashStore::Init()+0x110>
 800baa6:	3601      	adds	r6, #1
 800baa8:	2e1c      	cmp	r6, #28
 800baaa:	d1ed      	bne.n	800ba88 <SpiFlashStore::Init()+0x8c>
 800baac:	2501      	movs	r5, #1
 800baae:	4b1f      	ldr	r3, [pc, #124]	; (800bb2c <SpiFlashStore::Init()+0x130>)
 800bab0:	601d      	str	r5, [r3, #0]
 800bab2:	4628      	mov	r0, r5
 800bab4:	b005      	add	sp, #20
 800bab6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800baba:	2d00      	cmp	r5, #0
 800babc:	d0dc      	beq.n	800ba78 <SpiFlashStore::Init()+0x7c>
 800babe:	f04f 0900 	mov.w	r9, #0
 800bac2:	46c8      	mov	r8, r9
 800bac4:	4631      	mov	r1, r6
 800bac6:	4638      	mov	r0, r7
 800bac8:	f7ff ff8a 	bl	800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bacc:	5c23      	ldrb	r3, [r4, r0]
 800bace:	2bff      	cmp	r3, #255	; 0xff
 800bad0:	d112      	bne.n	800baf8 <SpiFlashStore::Init()+0xfc>
 800bad2:	1823      	adds	r3, r4, r0
 800bad4:	785a      	ldrb	r2, [r3, #1]
 800bad6:	2aff      	cmp	r2, #255	; 0xff
 800bad8:	d10e      	bne.n	800baf8 <SpiFlashStore::Init()+0xfc>
 800bada:	789a      	ldrb	r2, [r3, #2]
 800badc:	2aff      	cmp	r2, #255	; 0xff
 800bade:	d10b      	bne.n	800baf8 <SpiFlashStore::Init()+0xfc>
 800bae0:	78da      	ldrb	r2, [r3, #3]
 800bae2:	2aff      	cmp	r2, #255	; 0xff
 800bae4:	d108      	bne.n	800baf8 <SpiFlashStore::Init()+0xfc>
 800bae6:	46a9      	mov	r9, r5
 800bae8:	f804 8000 	strb.w	r8, [r4, r0]
 800baec:	f883 8001 	strb.w	r8, [r3, #1]
 800baf0:	f883 8002 	strb.w	r8, [r3, #2]
 800baf4:	f883 8003 	strb.w	r8, [r3, #3]
 800baf8:	3601      	adds	r6, #1
 800bafa:	2e1c      	cmp	r6, #28
 800bafc:	d1e2      	bne.n	800bac4 <SpiFlashStore::Init()+0xc8>
 800bafe:	f1b9 0f00 	cmp.w	r9, #0
 800bb02:	d0d6      	beq.n	800bab2 <SpiFlashStore::Init()+0xb6>
 800bb04:	2201      	movs	r2, #1
 800bb06:	4b09      	ldr	r3, [pc, #36]	; (800bb2c <SpiFlashStore::Init()+0x130>)
 800bb08:	601a      	str	r2, [r3, #0]
 800bb0a:	e7d2      	b.n	800bab2 <SpiFlashStore::Init()+0xb6>
 800bb0c:	f804 9002 	strb.w	r9, [r4, r2]
 800bb10:	3201      	adds	r2, #1
 800bb12:	e7c6      	b.n	800baa2 <SpiFlashStore::Init()+0xa6>
 800bb14:	2500      	movs	r5, #0
 800bb16:	e7cc      	b.n	800bab2 <SpiFlashStore::Init()+0xb6>
 800bb18:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bb1c:	20001b7c 	andcs	r1, r0, ip, ror fp
 800bb20:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bb24:	20001b90 	mulcs	r0, r0, fp
 800bb28:	080122dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp}
 800bb2c:	20001b88 	andcs	r1, r0, r8, lsl #23

0800bb30 <SpiFlashStore::SpiFlashStore()>:
 800bb30:	b538      	push	{r3, r4, r5, lr}
 800bb32:	4b0d      	ldr	r3, [pc, #52]	; (800bb68 <SpiFlashStore::SpiFlashStore()+0x38>)
 800bb34:	4604      	mov	r4, r0
 800bb36:	6018      	str	r0, [r3, #0]
 800bb38:	4b0c      	ldr	r3, [pc, #48]	; (800bb6c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800bb3a:	4d0d      	ldr	r5, [pc, #52]	; (800bb70 <SpiFlashStore::SpiFlashStore()+0x40>)
 800bb3c:	681b      	ldr	r3, [r3, #0]
 800bb3e:	781b      	ldrb	r3, [r3, #0]
 800bb40:	b113      	cbz	r3, 800bb48 <SpiFlashStore::SpiFlashStore()+0x18>
 800bb42:	f7ff ff5b 	bl	800b9fc <SpiFlashStore::Init()>
 800bb46:	7028      	strb	r0, [r5, #0]
 800bb48:	782b      	ldrb	r3, [r5, #0]
 800bb4a:	b153      	cbz	r3, 800bb62 <SpiFlashStore::SpiFlashStore()+0x32>
 800bb4c:	2320      	movs	r3, #32
 800bb4e:	2200      	movs	r2, #0
 800bb50:	4908      	ldr	r1, [pc, #32]	; (800bb74 <SpiFlashStore::SpiFlashStore()+0x44>)
 800bb52:	f851 0b04 	ldr.w	r0, [r1], #4
 800bb56:	3201      	adds	r2, #1
 800bb58:	2a1c      	cmp	r2, #28
 800bb5a:	4403      	add	r3, r0
 800bb5c:	d1f9      	bne.n	800bb52 <SpiFlashStore::SpiFlashStore()+0x22>
 800bb5e:	4a06      	ldr	r2, [pc, #24]	; (800bb78 <SpiFlashStore::SpiFlashStore()+0x48>)
 800bb60:	6013      	str	r3, [r2, #0]
 800bb62:	4620      	mov	r0, r4
 800bb64:	bd38      	pop	{r3, r4, r5, pc}
 800bb66:	bf00      	nop
 800bb68:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800bb6c:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bb70:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bb74:	080122dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sp}
 800bb78:	20001b84 	andcs	r1, r0, r4, lsl #23

0800bb7c <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800bb7c:	b508      	push	{r3, lr}
 800bb7e:	f7ff ff2f 	bl	800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb82:	2300      	movs	r3, #0
 800bb84:	4904      	ldr	r1, [pc, #16]	; (800bb98 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800bb86:	1842      	adds	r2, r0, r1
 800bb88:	540b      	strb	r3, [r1, r0]
 800bb8a:	7053      	strb	r3, [r2, #1]
 800bb8c:	7093      	strb	r3, [r2, #2]
 800bb8e:	70d3      	strb	r3, [r2, #3]
 800bb90:	2201      	movs	r2, #1
 800bb92:	4b02      	ldr	r3, [pc, #8]	; (800bb9c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800bb94:	601a      	str	r2, [r3, #0]
 800bb96:	bd08      	pop	{r3, pc}
 800bb98:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bb9c:	20001b88 	andcs	r1, r0, r8, lsl #23

0800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800bba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bba4:	461c      	mov	r4, r3
 800bba6:	4b19      	ldr	r3, [pc, #100]	; (800bc0c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800bba8:	4615      	mov	r5, r2
 800bbaa:	781f      	ldrb	r7, [r3, #0]
 800bbac:	9e07      	ldr	r6, [sp, #28]
 800bbae:	b307      	cbz	r7, 800bbf2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbb0:	f7ff ff16 	bl	800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bbb4:	f04f 0c00 	mov.w	ip, #0
 800bbb8:	4a15      	ldr	r2, [pc, #84]	; (800bc10 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800bbba:	1941      	adds	r1, r0, r5
 800bbbc:	1e63      	subs	r3, r4, #1
 800bbbe:	9c06      	ldr	r4, [sp, #24]
 800bbc0:	4411      	add	r1, r2
 800bbc2:	440c      	add	r4, r1
 800bbc4:	42a1      	cmp	r1, r4
 800bbc6:	d116      	bne.n	800bbf6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800bbc8:	f1bc 0f00 	cmp.w	ip, #0
 800bbcc:	d011      	beq.n	800bbf2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbce:	4b11      	ldr	r3, [pc, #68]	; (800bc14 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800bbd0:	6819      	ldr	r1, [r3, #0]
 800bbd2:	b109      	cbz	r1, 800bbd8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800bbd4:	2906      	cmp	r1, #6
 800bbd6:	d101      	bne.n	800bbdc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800bbd8:	2101      	movs	r1, #1
 800bbda:	6019      	str	r1, [r3, #0]
 800bbdc:	4b0e      	ldr	r3, [pc, #56]	; (800bc18 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800bbde:	6819      	ldr	r1, [r3, #0]
 800bbe0:	4b0e      	ldr	r3, [pc, #56]	; (800bc1c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800bbe2:	6019      	str	r1, [r3, #0]
 800bbe4:	b12d      	cbz	r5, 800bbf2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbe6:	b126      	cbz	r6, 800bbf2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbe8:	9b08      	ldr	r3, [sp, #32]
 800bbea:	4418      	add	r0, r3
 800bbec:	5813      	ldr	r3, [r2, r0]
 800bbee:	4333      	orrs	r3, r6
 800bbf0:	5013      	str	r3, [r2, r0]
 800bbf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbf6:	f891 8000 	ldrb.w	r8, [r1]
 800bbfa:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800bbfe:	3101      	adds	r1, #1
 800bc00:	45f0      	cmp	r8, lr
 800bc02:	bf1c      	itt	ne
 800bc04:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800bc08:	46bc      	movne	ip, r7
 800bc0a:	e7db      	b.n	800bbc4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800bc0c:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bc10:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bc14:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bc18:	20009bc4 	andcs	r9, r0, r4, asr #23
 800bc1c:	20000b78 	andcs	r0, r0, r8, ror fp

0800bc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800bc20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bc24:	461d      	mov	r5, r3
 800bc26:	4b11      	ldr	r3, [pc, #68]	; (800bc6c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 800bc28:	4607      	mov	r7, r0
 800bc2a:	781b      	ldrb	r3, [r3, #0]
 800bc2c:	4614      	mov	r4, r2
 800bc2e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800bc32:	b1c3      	cbz	r3, 800bc66 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800bc34:	f7ff fed4 	bl	800b9e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc38:	4a0d      	ldr	r2, [pc, #52]	; (800bc70 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 800bc3a:	eb00 0608 	add.w	r6, r0, r8
 800bc3e:	5990      	ldr	r0, [r2, r6]
 800bc40:	18b3      	adds	r3, r6, r2
 800bc42:	b140      	cbz	r0, 800bc56 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 800bc44:	3c01      	subs	r4, #1
 800bc46:	441d      	add	r5, r3
 800bc48:	429d      	cmp	r5, r3
 800bc4a:	d00c      	beq.n	800bc66 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800bc4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bc50:	f804 2f01 	strb.w	r2, [r4, #1]!
 800bc54:	e7f8      	b.n	800bc48 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 800bc56:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800bc5a:	4623      	mov	r3, r4
 800bc5c:	4642      	mov	r2, r8
 800bc5e:	4638      	mov	r0, r7
 800bc60:	9500      	str	r5, [sp, #0]
 800bc62:	f7ff ff9d 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bc66:	b004      	add	sp, #16
 800bc68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc6c:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bc70:	20000b7c 	andcs	r0, r0, ip, ror fp

0800bc74 <SpiFlashStore::Flash()>:
 800bc74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc76:	4c25      	ldr	r4, [pc, #148]	; (800bd0c <SpiFlashStore::Flash()+0x98>)
 800bc78:	6820      	ldr	r0, [r4, #0]
 800bc7a:	2800      	cmp	r0, #0
 800bc7c:	d043      	beq.n	800bd06 <SpiFlashStore::Flash()+0x92>
 800bc7e:	3801      	subs	r0, #1
 800bc80:	2805      	cmp	r0, #5
 800bc82:	d831      	bhi.n	800bce8 <SpiFlashStore::Flash()+0x74>
 800bc84:	e8df f000 	tbb	[pc, r0]
 800bc88:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800bc8c:	4b203025 	blmi	8817d28 <__exidx_end+0x805278>
 800bc90:	681a      	ldr	r2, [r3, #0]
 800bc92:	4b20      	ldr	r3, [pc, #128]	; (800bd14 <SpiFlashStore::Flash()+0xa0>)
 800bc94:	601a      	str	r2, [r3, #0]
 800bc96:	2302      	movs	r3, #2
 800bc98:	6023      	str	r3, [r4, #0]
 800bc9a:	2001      	movs	r0, #1
 800bc9c:	e033      	b.n	800bd06 <SpiFlashStore::Flash()+0x92>
 800bc9e:	4b1c      	ldr	r3, [pc, #112]	; (800bd10 <SpiFlashStore::Flash()+0x9c>)
 800bca0:	4a1c      	ldr	r2, [pc, #112]	; (800bd14 <SpiFlashStore::Flash()+0xa0>)
 800bca2:	681b      	ldr	r3, [r3, #0]
 800bca4:	6812      	ldr	r2, [r2, #0]
 800bca6:	1a9b      	subs	r3, r3, r2
 800bca8:	2b63      	cmp	r3, #99	; 0x63
 800bcaa:	d9f6      	bls.n	800bc9a <SpiFlashStore::Flash()+0x26>
 800bcac:	2303      	movs	r3, #3
 800bcae:	e7f3      	b.n	800bc98 <SpiFlashStore::Flash()+0x24>
 800bcb0:	4919      	ldr	r1, [pc, #100]	; (800bd18 <SpiFlashStore::Flash()+0xa4>)
 800bcb2:	481a      	ldr	r0, [pc, #104]	; (800bd1c <SpiFlashStore::Flash()+0xa8>)
 800bcb4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bcb8:	6809      	ldr	r1, [r1, #0]
 800bcba:	6800      	ldr	r0, [r0, #0]
 800bcbc:	ab03      	add	r3, sp, #12
 800bcbe:	f000 f9af 	bl	800c020 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bcc2:	2800      	cmp	r0, #0
 800bcc4:	d0e9      	beq.n	800bc9a <SpiFlashStore::Flash()+0x26>
 800bcc6:	4b12      	ldr	r3, [pc, #72]	; (800bd10 <SpiFlashStore::Flash()+0x9c>)
 800bcc8:	681a      	ldr	r2, [r3, #0]
 800bcca:	4b12      	ldr	r3, [pc, #72]	; (800bd14 <SpiFlashStore::Flash()+0xa0>)
 800bccc:	601a      	str	r2, [r3, #0]
 800bcce:	2305      	movs	r3, #5
 800bcd0:	e7e2      	b.n	800bc98 <SpiFlashStore::Flash()+0x24>
 800bcd2:	4b0f      	ldr	r3, [pc, #60]	; (800bd10 <SpiFlashStore::Flash()+0x9c>)
 800bcd4:	4a0f      	ldr	r2, [pc, #60]	; (800bd14 <SpiFlashStore::Flash()+0xa0>)
 800bcd6:	681b      	ldr	r3, [r3, #0]
 800bcd8:	6812      	ldr	r2, [r2, #0]
 800bcda:	1a9b      	subs	r3, r3, r2
 800bcdc:	2b63      	cmp	r3, #99	; 0x63
 800bcde:	d9dc      	bls.n	800bc9a <SpiFlashStore::Flash()+0x26>
 800bce0:	2304      	movs	r3, #4
 800bce2:	e7d9      	b.n	800bc98 <SpiFlashStore::Flash()+0x24>
 800bce4:	2306      	movs	r3, #6
 800bce6:	e7d7      	b.n	800bc98 <SpiFlashStore::Flash()+0x24>
 800bce8:	ab03      	add	r3, sp, #12
 800bcea:	4a0d      	ldr	r2, [pc, #52]	; (800bd20 <SpiFlashStore::Flash()+0xac>)
 800bcec:	490a      	ldr	r1, [pc, #40]	; (800bd18 <SpiFlashStore::Flash()+0xa4>)
 800bcee:	480b      	ldr	r0, [pc, #44]	; (800bd1c <SpiFlashStore::Flash()+0xa8>)
 800bcf0:	9300      	str	r3, [sp, #0]
 800bcf2:	6812      	ldr	r2, [r2, #0]
 800bcf4:	4b0b      	ldr	r3, [pc, #44]	; (800bd24 <SpiFlashStore::Flash()+0xb0>)
 800bcf6:	6809      	ldr	r1, [r1, #0]
 800bcf8:	6800      	ldr	r0, [r0, #0]
 800bcfa:	f000 fa31 	bl	800c160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bcfe:	2800      	cmp	r0, #0
 800bd00:	d0cb      	beq.n	800bc9a <SpiFlashStore::Flash()+0x26>
 800bd02:	2000      	movs	r0, #0
 800bd04:	6020      	str	r0, [r4, #0]
 800bd06:	b004      	add	sp, #16
 800bd08:	bd10      	pop	{r4, pc}
 800bd0a:	bf00      	nop
 800bd0c:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bd10:	20009bc4 	andcs	r9, r0, r4, asr #23
 800bd14:	20000b78 	andcs	r0, r0, r8, ror fp
 800bd18:	20001b7c 	andcs	r1, r0, ip, ror fp
 800bd1c:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bd20:	20001b84 	andcs	r1, r0, r4, lsl #23
 800bd24:	20000b7c 	andcs	r0, r0, ip, ror fp

0800bd28 <StoreDmxSend::~StoreDmxSend()>:
 800bd28:	4770      	bx	lr
	...

0800bd2c <StoreDmxSend::Copy(TDmxParams*)>:
 800bd2c:	2300      	movs	r3, #0
 800bd2e:	b507      	push	{r0, r1, r2, lr}
 800bd30:	4805      	ldr	r0, [pc, #20]	; (800bd48 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800bd32:	9300      	str	r3, [sp, #0]
 800bd34:	460a      	mov	r2, r1
 800bd36:	230a      	movs	r3, #10
 800bd38:	2102      	movs	r1, #2
 800bd3a:	6800      	ldr	r0, [r0, #0]
 800bd3c:	f7ff ff70 	bl	800bc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bd40:	b003      	add	sp, #12
 800bd42:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd46:	bf00      	nop
 800bd48:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bd4c <StoreDmxSend::Update(TDmxParams const*)>:
 800bd4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd4e:	2200      	movs	r2, #0
 800bd50:	460b      	mov	r3, r1
 800bd52:	210a      	movs	r1, #10
 800bd54:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bd58:	4804      	ldr	r0, [pc, #16]	; (800bd6c <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800bd5a:	9100      	str	r1, [sp, #0]
 800bd5c:	6800      	ldr	r0, [r0, #0]
 800bd5e:	2102      	movs	r1, #2
 800bd60:	f7ff ff1e 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd64:	b005      	add	sp, #20
 800bd66:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd6a:	bf00      	nop
 800bd6c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bd70 <StoreDmxSend::~StoreDmxSend()>:
 800bd70:	b510      	push	{r4, lr}
 800bd72:	4604      	mov	r4, r0
 800bd74:	f003 f838 	bl	800ede8 <operator delete(void*)>
 800bd78:	4620      	mov	r0, r4
 800bd7a:	bd10      	pop	{r4, pc}

0800bd7c <StoreDmxSend::StoreDmxSend()>:
 800bd7c:	4a02      	ldr	r2, [pc, #8]	; (800bd88 <StoreDmxSend::StoreDmxSend()+0xc>)
 800bd7e:	6002      	str	r2, [r0, #0]
 800bd80:	4a02      	ldr	r2, [pc, #8]	; (800bd8c <StoreDmxSend::StoreDmxSend()+0x10>)
 800bd82:	6010      	str	r0, [r2, #0]
 800bd84:	4770      	bx	lr
 800bd86:	bf00      	nop
 800bd88:	08012354 	stmdaeq	r1, {r2, r4, r6, r8, r9, sp}
 800bd8c:	20001b94 	mulcs	r0, r4, fp

0800bd90 <StoreNetwork::~StoreNetwork()>:
 800bd90:	4770      	bx	lr

0800bd92 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bd92:	3804      	subs	r0, #4
 800bd94:	4770      	bx	lr
	...

0800bd98 <StoreNetwork::Update(TNetworkParams const*)>:
 800bd98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd9a:	2200      	movs	r2, #0
 800bd9c:	460b      	mov	r3, r1
 800bd9e:	215e      	movs	r1, #94	; 0x5e
 800bda0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bda4:	4804      	ldr	r0, [pc, #16]	; (800bdb8 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800bda6:	9100      	str	r1, [sp, #0]
 800bda8:	6800      	ldr	r0, [r0, #0]
 800bdaa:	4611      	mov	r1, r2
 800bdac:	f7ff fef8 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bdb0:	b005      	add	sp, #20
 800bdb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdb6:	bf00      	nop
 800bdb8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bdbc <StoreNetwork::SaveDhcp(bool)>:
 800bdbc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdbe:	2301      	movs	r3, #1
 800bdc0:	f88d 1017 	strb.w	r1, [sp, #23]
 800bdc4:	2100      	movs	r1, #0
 800bdc6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bdca:	4805      	ldr	r0, [pc, #20]	; (800bde0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800bdcc:	9300      	str	r3, [sp, #0]
 800bdce:	2214      	movs	r2, #20
 800bdd0:	6800      	ldr	r0, [r0, #0]
 800bdd2:	f10d 0317 	add.w	r3, sp, #23
 800bdd6:	f7ff fee3 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bdda:	b007      	add	sp, #28
 800bddc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bde0:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bde4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800bde4:	f1a0 0004 	sub.w	r0, r0, #4
 800bde8:	e7e8      	b.n	800bdbc <StoreNetwork::SaveDhcp(bool)>
 800bdea:	bf00      	nop

0800bdec <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bdec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdee:	2308      	movs	r3, #8
 800bdf0:	9105      	str	r1, [sp, #20]
 800bdf2:	2100      	movs	r1, #0
 800bdf4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bdf8:	2304      	movs	r3, #4
 800bdfa:	4805      	ldr	r0, [pc, #20]	; (800be10 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800bdfc:	9300      	str	r3, [sp, #0]
 800bdfe:	220c      	movs	r2, #12
 800be00:	6800      	ldr	r0, [r0, #0]
 800be02:	ab05      	add	r3, sp, #20
 800be04:	f7ff fecc 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be08:	b007      	add	sp, #28
 800be0a:	f85d fb04 	ldr.w	pc, [sp], #4
 800be0e:	bf00      	nop
 800be10:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be14 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800be14:	f1a0 0004 	sub.w	r0, r0, #4
 800be18:	e7e8      	b.n	800bdec <StoreNetwork::SaveGatewayIp(unsigned int)>
 800be1a:	bf00      	nop

0800be1c <StoreNetwork::SaveNetMask(unsigned int)>:
 800be1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be1e:	2304      	movs	r3, #4
 800be20:	9105      	str	r1, [sp, #20]
 800be22:	2100      	movs	r1, #0
 800be24:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be28:	4804      	ldr	r0, [pc, #16]	; (800be3c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800be2a:	9300      	str	r3, [sp, #0]
 800be2c:	2208      	movs	r2, #8
 800be2e:	6800      	ldr	r0, [r0, #0]
 800be30:	ab05      	add	r3, sp, #20
 800be32:	f7ff feb5 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be36:	b007      	add	sp, #28
 800be38:	f85d fb04 	ldr.w	pc, [sp], #4
 800be3c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be40 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800be40:	f1a0 0004 	sub.w	r0, r0, #4
 800be44:	e7ea      	b.n	800be1c <StoreNetwork::SaveNetMask(unsigned int)>
 800be46:	bf00      	nop

0800be48 <StoreNetwork::SaveIp(unsigned int)>:
 800be48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be4a:	2302      	movs	r3, #2
 800be4c:	9105      	str	r1, [sp, #20]
 800be4e:	2100      	movs	r1, #0
 800be50:	2204      	movs	r2, #4
 800be52:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be56:	4804      	ldr	r0, [pc, #16]	; (800be68 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800be58:	9200      	str	r2, [sp, #0]
 800be5a:	6800      	ldr	r0, [r0, #0]
 800be5c:	ab05      	add	r3, sp, #20
 800be5e:	f7ff fe9f 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be62:	b007      	add	sp, #28
 800be64:	f85d fb04 	ldr.w	pc, [sp], #4
 800be68:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be6c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800be6c:	f1a0 0004 	sub.w	r0, r0, #4
 800be70:	e7ea      	b.n	800be48 <StoreNetwork::SaveIp(unsigned int)>
 800be72:	bf00      	nop

0800be74 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800be74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be76:	460b      	mov	r3, r1
 800be78:	2020      	movs	r0, #32
 800be7a:	2100      	movs	r1, #0
 800be7c:	2a40      	cmp	r2, #64	; 0x40
 800be7e:	bf28      	it	cs
 800be80:	2240      	movcs	r2, #64	; 0x40
 800be82:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800be86:	4804      	ldr	r0, [pc, #16]	; (800be98 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800be88:	9200      	str	r2, [sp, #0]
 800be8a:	6800      	ldr	r0, [r0, #0]
 800be8c:	2215      	movs	r2, #21
 800be8e:	f7ff fe87 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be92:	b005      	add	sp, #20
 800be94:	f85d fb04 	ldr.w	pc, [sp], #4
 800be98:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be9c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800be9c:	f1a0 0004 	sub.w	r0, r0, #4
 800bea0:	e7e8      	b.n	800be74 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800bea2:	bf00      	nop

0800bea4 <StoreNetwork::~StoreNetwork()>:
 800bea4:	b510      	push	{r4, lr}
 800bea6:	4604      	mov	r4, r0
 800bea8:	f002 ff9e 	bl	800ede8 <operator delete(void*)>
 800beac:	4620      	mov	r0, r4
 800beae:	bd10      	pop	{r4, pc}

0800beb0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800beb0:	f1a0 0004 	sub.w	r0, r0, #4
 800beb4:	e7f6      	b.n	800bea4 <StoreNetwork::~StoreNetwork()>
	...

0800beb8 <StoreNetwork::Copy(TNetworkParams*)>:
 800beb8:	b507      	push	{r0, r1, r2, lr}
 800beba:	460a      	mov	r2, r1
 800bebc:	2100      	movs	r1, #0
 800bebe:	4804      	ldr	r0, [pc, #16]	; (800bed0 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800bec0:	9100      	str	r1, [sp, #0]
 800bec2:	235e      	movs	r3, #94	; 0x5e
 800bec4:	6800      	ldr	r0, [r0, #0]
 800bec6:	f7ff feab 	bl	800bc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800beca:	b003      	add	sp, #12
 800becc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bed0:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bed4 <StoreNetwork::StoreNetwork()>:
 800bed4:	4a03      	ldr	r2, [pc, #12]	; (800bee4 <StoreNetwork::StoreNetwork()+0x10>)
 800bed6:	6002      	str	r2, [r0, #0]
 800bed8:	322c      	adds	r2, #44	; 0x2c
 800beda:	6042      	str	r2, [r0, #4]
 800bedc:	4a02      	ldr	r2, [pc, #8]	; (800bee8 <StoreNetwork::StoreNetwork()+0x14>)
 800bede:	6010      	str	r0, [r2, #0]
 800bee0:	4770      	bx	lr
 800bee2:	bf00      	nop
 800bee4:	0801236c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sp}
 800bee8:	20001b98 	mulcs	r0, r8, fp

0800beec <StoreOscServer::~StoreOscServer()>:
 800beec:	4770      	bx	lr
	...

0800bef0 <StoreOscServer::Copy(osc::server::Params*)>:
 800bef0:	2300      	movs	r3, #0
 800bef2:	b507      	push	{r0, r1, r2, lr}
 800bef4:	4805      	ldr	r0, [pc, #20]	; (800bf0c <StoreOscServer::Copy(osc::server::Params*)+0x1c>)
 800bef6:	9300      	str	r3, [sp, #0]
 800bef8:	460a      	mov	r2, r1
 800befa:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800befe:	2108      	movs	r1, #8
 800bf00:	6800      	ldr	r0, [r0, #0]
 800bf02:	f7ff fe8d 	bl	800bc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bf06:	b003      	add	sp, #12
 800bf08:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf0c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf10 <StoreOscServer::Update(osc::server::Params const*)>:
 800bf10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf12:	2200      	movs	r2, #0
 800bf14:	460b      	mov	r3, r1
 800bf16:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800bf1a:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bf1e:	4804      	ldr	r0, [pc, #16]	; (800bf30 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800bf20:	9100      	str	r1, [sp, #0]
 800bf22:	6800      	ldr	r0, [r0, #0]
 800bf24:	2108      	movs	r1, #8
 800bf26:	f7ff fe3b 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf2a:	b005      	add	sp, #20
 800bf2c:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf30:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf34 <StoreOscServer::~StoreOscServer()>:
 800bf34:	b510      	push	{r4, lr}
 800bf36:	4604      	mov	r4, r0
 800bf38:	f002 ff56 	bl	800ede8 <operator delete(void*)>
 800bf3c:	4620      	mov	r0, r4
 800bf3e:	bd10      	pop	{r4, pc}

0800bf40 <StoreOscServer::StoreOscServer()>:
 800bf40:	4a02      	ldr	r2, [pc, #8]	; (800bf4c <StoreOscServer::StoreOscServer()+0xc>)
 800bf42:	6002      	str	r2, [r0, #0]
 800bf44:	4a02      	ldr	r2, [pc, #8]	; (800bf50 <StoreOscServer::StoreOscServer()+0x10>)
 800bf46:	6010      	str	r0, [r2, #0]
 800bf48:	4770      	bx	lr
 800bf4a:	bf00      	nop
 800bf4c:	080123bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sp}
 800bf50:	20001b9c 	mulcs	r0, ip, fp

0800bf54 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bf54:	4770      	bx	lr
	...

0800bf58 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800bf58:	2300      	movs	r3, #0
 800bf5a:	b507      	push	{r0, r1, r2, lr}
 800bf5c:	4805      	ldr	r0, [pc, #20]	; (800bf74 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800bf5e:	9300      	str	r3, [sp, #0]
 800bf60:	460a      	mov	r2, r1
 800bf62:	2320      	movs	r3, #32
 800bf64:	210c      	movs	r1, #12
 800bf66:	6800      	ldr	r0, [r0, #0]
 800bf68:	f7ff fe5a 	bl	800bc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bf6c:	b003      	add	sp, #12
 800bf6e:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf72:	bf00      	nop
 800bf74:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf78 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800bf78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf7a:	2200      	movs	r2, #0
 800bf7c:	460b      	mov	r3, r1
 800bf7e:	2120      	movs	r1, #32
 800bf80:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bf84:	4804      	ldr	r0, [pc, #16]	; (800bf98 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800bf86:	9100      	str	r1, [sp, #0]
 800bf88:	6800      	ldr	r0, [r0, #0]
 800bf8a:	210c      	movs	r1, #12
 800bf8c:	f7ff fe08 	bl	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf90:	b005      	add	sp, #20
 800bf92:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf96:	bf00      	nop
 800bf98:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf9c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bf9c:	b510      	push	{r4, lr}
 800bf9e:	4604      	mov	r4, r0
 800bfa0:	f002 ff22 	bl	800ede8 <operator delete(void*)>
 800bfa4:	4620      	mov	r0, r4
 800bfa6:	bd10      	pop	{r4, pc}

0800bfa8 <StoreRemoteConfig::StoreRemoteConfig()>:
 800bfa8:	4a02      	ldr	r2, [pc, #8]	; (800bfb4 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800bfaa:	6002      	str	r2, [r0, #0]
 800bfac:	4a02      	ldr	r2, [pc, #8]	; (800bfb8 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800bfae:	6010      	str	r0, [r2, #0]
 800bfb0:	4770      	bx	lr
 800bfb2:	bf00      	nop
 800bfb4:	080123d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sp}
 800bfb8:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800bfbc <FlashRom::FlashRom()>:
 800bfbc:	4b07      	ldr	r3, [pc, #28]	; (800bfdc <FlashRom::FlashRom()+0x20>)
 800bfbe:	b510      	push	{r4, lr}
 800bfc0:	6018      	str	r0, [r3, #0]
 800bfc2:	2301      	movs	r3, #1
 800bfc4:	4604      	mov	r4, r0
 800bfc6:	7003      	strb	r3, [r0, #0]
 800bfc8:	4b05      	ldr	r3, [pc, #20]	; (800bfe0 <FlashRom::FlashRom()+0x24>)
 800bfca:	4906      	ldr	r1, [pc, #24]	; (800bfe4 <FlashRom::FlashRom()+0x28>)
 800bfcc:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800bfd0:	4805      	ldr	r0, [pc, #20]	; (800bfe8 <FlashRom::FlashRom()+0x2c>)
 800bfd2:	029a      	lsls	r2, r3, #10
 800bfd4:	f7fc fc22 	bl	800881c <printf>
 800bfd8:	4620      	mov	r0, r4
 800bfda:	bd10      	pop	{r4, pc}
 800bfdc:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bfe0:	1ffff700 	svcne	0x00fff700
 800bfe4:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 800bfe8:	080123e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp}

0800bfec <FlashRom::GetSize() const>:
 800bfec:	4b02      	ldr	r3, [pc, #8]	; (800bff8 <FlashRom::GetSize() const+0xc>)
 800bfee:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800bff2:	0280      	lsls	r0, r0, #10
 800bff4:	4770      	bx	lr
 800bff6:	bf00      	nop
 800bff8:	1ffff700 	svcne	0x00fff700

0800bffc <FlashRom::GetSectorSize() const>:
 800bffc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800c000:	4770      	bx	lr

0800c002 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800c002:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c006:	441a      	add	r2, r3
 800c008:	4293      	cmp	r3, r2
 800c00a:	d104      	bne.n	800c016 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800c00c:	2200      	movs	r2, #0
 800c00e:	9b00      	ldr	r3, [sp, #0]
 800c010:	2001      	movs	r0, #1
 800c012:	601a      	str	r2, [r3, #0]
 800c014:	4770      	bx	lr
 800c016:	f851 0b04 	ldr.w	r0, [r1], #4
 800c01a:	f843 0b04 	str.w	r0, [r3], #4
 800c01e:	e7f3      	b.n	800c008 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800c020 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800c020:	2000      	movs	r0, #0
 800c022:	b538      	push	{r3, r4, r5, lr}
 800c024:	4c47      	ldr	r4, [pc, #284]	; (800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800c026:	6018      	str	r0, [r3, #0]
 800c028:	6823      	ldr	r3, [r4, #0]
 800c02a:	2b04      	cmp	r3, #4
 800c02c:	f200 8082 	bhi.w	800c134 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c030:	e8df f003 	tbb	[pc, r3]
 800c034:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800c038:	4b430080 	blmi	90cc240 <__exidx_end+0x10b9790>
 800c03c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c040:	6019      	str	r1, [r3, #0]
 800c042:	4b42      	ldr	r3, [pc, #264]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c044:	601a      	str	r2, [r3, #0]
 800c046:	4b42      	ldr	r3, [pc, #264]	; (800c150 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800c048:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c04c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c050:	4b40      	ldr	r3, [pc, #256]	; (800c154 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c052:	d807      	bhi.n	800c064 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800c054:	2201      	movs	r2, #1
 800c056:	701a      	strb	r2, [r3, #0]
 800c058:	f003 fa3e 	bl	800f4d8 <fmc_bank0_unlock>
 800c05c:	2301      	movs	r3, #1
 800c05e:	6023      	str	r3, [r4, #0]
 800c060:	2000      	movs	r0, #0
 800c062:	e026      	b.n	800c0b2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c064:	4a3c      	ldr	r2, [pc, #240]	; (800c158 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800c066:	4291      	cmp	r1, r2
 800c068:	d3f4      	bcc.n	800c054 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800c06a:	2200      	movs	r2, #0
 800c06c:	701a      	strb	r2, [r3, #0]
 800c06e:	f003 fa41 	bl	800f4f4 <fmc_bank1_unlock>
 800c072:	e7f3      	b.n	800c05c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c074:	4d37      	ldr	r5, [pc, #220]	; (800c154 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c076:	782b      	ldrb	r3, [r5, #0]
 800c078:	b15b      	cbz	r3, 800c092 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800c07a:	f003 fa59 	bl	800f530 <fmc_bank0_state_get>
 800c07e:	2801      	cmp	r0, #1
 800c080:	d0ee      	beq.n	800c060 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800c082:	7829      	ldrb	r1, [r5, #0]
 800c084:	4b35      	ldr	r3, [pc, #212]	; (800c15c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c086:	b939      	cbnz	r1, 800c098 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800c088:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c08a:	f022 0202 	bic.w	r2, r2, #2
 800c08e:	651a      	str	r2, [r3, #80]	; 0x50
 800c090:	e006      	b.n	800c0a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800c092:	f003 fa5f 	bl	800f554 <fmc_bank1_state_get>
 800c096:	e7f2      	b.n	800c07e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800c098:	691a      	ldr	r2, [r3, #16]
 800c09a:	f022 0202 	bic.w	r2, r2, #2
 800c09e:	611a      	str	r2, [r3, #16]
 800c0a0:	4b2a      	ldr	r3, [pc, #168]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c0a2:	681b      	ldr	r3, [r3, #0]
 800c0a4:	b94b      	cbnz	r3, 800c0ba <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800c0a6:	b129      	cbz	r1, 800c0b4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800c0a8:	f003 fa32 	bl	800f510 <fmc_bank0_lock>
 800c0ac:	2300      	movs	r3, #0
 800c0ae:	2001      	movs	r0, #1
 800c0b0:	6023      	str	r3, [r4, #0]
 800c0b2:	bd38      	pop	{r3, r4, r5, pc}
 800c0b4:	f003 fa34 	bl	800f520 <fmc_bank1_lock>
 800c0b8:	e7f8      	b.n	800c0ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800c0ba:	2302      	movs	r3, #2
 800c0bc:	e7cf      	b.n	800c05e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800c0be:	4923      	ldr	r1, [pc, #140]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c0c0:	680b      	ldr	r3, [r1, #0]
 800c0c2:	2b00      	cmp	r3, #0
 800c0c4:	d0ca      	beq.n	800c05c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c0c6:	4b23      	ldr	r3, [pc, #140]	; (800c154 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c0c8:	4a1f      	ldr	r2, [pc, #124]	; (800c148 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800c0ca:	7818      	ldrb	r0, [r3, #0]
 800c0cc:	4b23      	ldr	r3, [pc, #140]	; (800c15c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c0ce:	b190      	cbz	r0, 800c0f6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800c0d0:	6918      	ldr	r0, [r3, #16]
 800c0d2:	f040 0002 	orr.w	r0, r0, #2
 800c0d6:	6118      	str	r0, [r3, #16]
 800c0d8:	6810      	ldr	r0, [r2, #0]
 800c0da:	6158      	str	r0, [r3, #20]
 800c0dc:	6918      	ldr	r0, [r3, #16]
 800c0de:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800c0e2:	6118      	str	r0, [r3, #16]
 800c0e4:	680b      	ldr	r3, [r1, #0]
 800c0e6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800c0ea:	600b      	str	r3, [r1, #0]
 800c0ec:	6813      	ldr	r3, [r2, #0]
 800c0ee:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c0f2:	6013      	str	r3, [r2, #0]
 800c0f4:	e7b2      	b.n	800c05c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c0f6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c0f8:	f040 0002 	orr.w	r0, r0, #2
 800c0fc:	6518      	str	r0, [r3, #80]	; 0x50
 800c0fe:	6810      	ldr	r0, [r2, #0]
 800c100:	6558      	str	r0, [r3, #84]	; 0x54
 800c102:	69dd      	ldr	r5, [r3, #28]
 800c104:	07ad      	lsls	r5, r5, #30
 800c106:	bf48      	it	mi
 800c108:	6158      	strmi	r0, [r3, #20]
 800c10a:	4814      	ldr	r0, [pc, #80]	; (800c15c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c10c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c10e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c112:	6503      	str	r3, [r0, #80]	; 0x50
 800c114:	680b      	ldr	r3, [r1, #0]
 800c116:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800c11a:	600b      	str	r3, [r1, #0]
 800c11c:	6813      	ldr	r3, [r2, #0]
 800c11e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c122:	e7e6      	b.n	800c0f2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800c124:	4b0b      	ldr	r3, [pc, #44]	; (800c154 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c126:	781a      	ldrb	r2, [r3, #0]
 800c128:	4b0c      	ldr	r3, [pc, #48]	; (800c15c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c12a:	b132      	cbz	r2, 800c13a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800c12c:	691a      	ldr	r2, [r3, #16]
 800c12e:	f022 0201 	bic.w	r2, r2, #1
 800c132:	611a      	str	r2, [r3, #16]
 800c134:	2000      	movs	r0, #0
 800c136:	6020      	str	r0, [r4, #0]
 800c138:	e7bb      	b.n	800c0b2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c13a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c13c:	f022 0201 	bic.w	r2, r2, #1
 800c140:	651a      	str	r2, [r3, #80]	; 0x50
 800c142:	e7f7      	b.n	800c134 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c144:	20001bac 	andcs	r1, r0, ip, lsr #23
 800c148:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800c14c:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800c150:	1ffff700 	svcne	0x00fff700
 800c154:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c158:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c15c:	40022000 	andmi	r2, r2, r0

0800c160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800c160:	b570      	push	{r4, r5, r6, lr}
 800c162:	2400      	movs	r4, #0
 800c164:	9804      	ldr	r0, [sp, #16]
 800c166:	6004      	str	r4, [r0, #0]
 800c168:	4c48      	ldr	r4, [pc, #288]	; (800c28c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800c16a:	6820      	ldr	r0, [r4, #0]
 800c16c:	2804      	cmp	r0, #4
 800c16e:	d848      	bhi.n	800c202 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800c170:	e8df f000 	tbb	[pc, r0]
 800c174:	22847c03 	addcs	r7, r4, #768	; 0x300
 800c178:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800c17c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c180:	6001      	str	r1, [r0, #0]
 800c182:	4844      	ldr	r0, [pc, #272]	; (800c294 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c184:	6003      	str	r3, [r0, #0]
 800c186:	4b44      	ldr	r3, [pc, #272]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c188:	601a      	str	r2, [r3, #0]
 800c18a:	4b44      	ldr	r3, [pc, #272]	; (800c29c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c18c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c190:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c194:	4b42      	ldr	r3, [pc, #264]	; (800c2a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c196:	d807      	bhi.n	800c1a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c198:	2201      	movs	r2, #1
 800c19a:	701a      	strb	r2, [r3, #0]
 800c19c:	f003 f99c 	bl	800f4d8 <fmc_bank0_unlock>
 800c1a0:	2303      	movs	r3, #3
 800c1a2:	6023      	str	r3, [r4, #0]
 800c1a4:	2000      	movs	r0, #0
 800c1a6:	e026      	b.n	800c1f6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c1a8:	4a3e      	ldr	r2, [pc, #248]	; (800c2a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c1aa:	4291      	cmp	r1, r2
 800c1ac:	d3f4      	bcc.n	800c198 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c1ae:	2200      	movs	r2, #0
 800c1b0:	701a      	strb	r2, [r3, #0]
 800c1b2:	f003 f99f 	bl	800f4f4 <fmc_bank1_unlock>
 800c1b6:	e7f3      	b.n	800c1a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c1b8:	4d39      	ldr	r5, [pc, #228]	; (800c2a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c1ba:	782b      	ldrb	r3, [r5, #0]
 800c1bc:	b15b      	cbz	r3, 800c1d6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c1be:	f003 f9b7 	bl	800f530 <fmc_bank0_state_get>
 800c1c2:	2801      	cmp	r0, #1
 800c1c4:	d0ee      	beq.n	800c1a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c1c6:	7829      	ldrb	r1, [r5, #0]
 800c1c8:	4b37      	ldr	r3, [pc, #220]	; (800c2a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c1ca:	b939      	cbnz	r1, 800c1dc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c1cc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c1ce:	f022 0201 	bic.w	r2, r2, #1
 800c1d2:	651a      	str	r2, [r3, #80]	; 0x50
 800c1d4:	e006      	b.n	800c1e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c1d6:	f003 f9bd 	bl	800f554 <fmc_bank1_state_get>
 800c1da:	e7f2      	b.n	800c1c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c1dc:	691a      	ldr	r2, [r3, #16]
 800c1de:	f022 0201 	bic.w	r2, r2, #1
 800c1e2:	611a      	str	r2, [r3, #16]
 800c1e4:	4b2c      	ldr	r3, [pc, #176]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c1e6:	681b      	ldr	r3, [r3, #0]
 800c1e8:	b94b      	cbnz	r3, 800c1fe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c1ea:	b129      	cbz	r1, 800c1f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c1ec:	f003 f990 	bl	800f510 <fmc_bank0_lock>
 800c1f0:	2300      	movs	r3, #0
 800c1f2:	2001      	movs	r0, #1
 800c1f4:	6023      	str	r3, [r4, #0]
 800c1f6:	bd70      	pop	{r4, r5, r6, pc}
 800c1f8:	f003 f992 	bl	800f520 <fmc_bank1_lock>
 800c1fc:	e7f8      	b.n	800c1f0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c1fe:	2304      	movs	r3, #4
 800c200:	e7cf      	b.n	800c1a2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c202:	4a25      	ldr	r2, [pc, #148]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c204:	6813      	ldr	r3, [r2, #0]
 800c206:	2b03      	cmp	r3, #3
 800c208:	d91a      	bls.n	800c240 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c20a:	4b25      	ldr	r3, [pc, #148]	; (800c2a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c20c:	7819      	ldrb	r1, [r3, #0]
 800c20e:	4b26      	ldr	r3, [pc, #152]	; (800c2a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c210:	b189      	cbz	r1, 800c236 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c212:	6919      	ldr	r1, [r3, #16]
 800c214:	f041 0101 	orr.w	r1, r1, #1
 800c218:	6119      	str	r1, [r3, #16]
 800c21a:	4d1e      	ldr	r5, [pc, #120]	; (800c294 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c21c:	481c      	ldr	r0, [pc, #112]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c21e:	6829      	ldr	r1, [r5, #0]
 800c220:	6803      	ldr	r3, [r0, #0]
 800c222:	f851 6b04 	ldr.w	r6, [r1], #4
 800c226:	f843 6b04 	str.w	r6, [r3], #4
 800c22a:	6003      	str	r3, [r0, #0]
 800c22c:	6813      	ldr	r3, [r2, #0]
 800c22e:	6029      	str	r1, [r5, #0]
 800c230:	3b04      	subs	r3, #4
 800c232:	6013      	str	r3, [r2, #0]
 800c234:	e7b4      	b.n	800c1a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c236:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c238:	f041 0101 	orr.w	r1, r1, #1
 800c23c:	6519      	str	r1, [r3, #80]	; 0x50
 800c23e:	e7ec      	b.n	800c21a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c240:	2b00      	cmp	r3, #0
 800c242:	d0ad      	beq.n	800c1a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c244:	4b16      	ldr	r3, [pc, #88]	; (800c2a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c246:	781a      	ldrb	r2, [r3, #0]
 800c248:	4b17      	ldr	r3, [pc, #92]	; (800c2a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c24a:	b152      	cbz	r2, 800c262 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c24c:	691a      	ldr	r2, [r3, #16]
 800c24e:	f042 0201 	orr.w	r2, r2, #1
 800c252:	611a      	str	r2, [r3, #16]
 800c254:	4a0f      	ldr	r2, [pc, #60]	; (800c294 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c256:	4b0e      	ldr	r3, [pc, #56]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c258:	6812      	ldr	r2, [r2, #0]
 800c25a:	681b      	ldr	r3, [r3, #0]
 800c25c:	6812      	ldr	r2, [r2, #0]
 800c25e:	601a      	str	r2, [r3, #0]
 800c260:	e79e      	b.n	800c1a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c262:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c264:	f042 0201 	orr.w	r2, r2, #1
 800c268:	651a      	str	r2, [r3, #80]	; 0x50
 800c26a:	e7f3      	b.n	800c254 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c26c:	4b0c      	ldr	r3, [pc, #48]	; (800c2a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c26e:	781a      	ldrb	r2, [r3, #0]
 800c270:	4b0d      	ldr	r3, [pc, #52]	; (800c2a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c272:	b132      	cbz	r2, 800c282 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c274:	691a      	ldr	r2, [r3, #16]
 800c276:	f022 0202 	bic.w	r2, r2, #2
 800c27a:	611a      	str	r2, [r3, #16]
 800c27c:	2000      	movs	r0, #0
 800c27e:	6020      	str	r0, [r4, #0]
 800c280:	e7b9      	b.n	800c1f6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c282:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c284:	f022 0202 	bic.w	r2, r2, #2
 800c288:	651a      	str	r2, [r3, #80]	; 0x50
 800c28a:	e7f7      	b.n	800c27c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c28c:	20001bac 	andcs	r1, r0, ip, lsr #23
 800c290:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800c294:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800c298:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800c29c:	1ffff700 	svcne	0x00fff700
 800c2a0:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c2a4:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c2a8:	40022000 	andmi	r2, r2, r0

0800c2ac <net_timers_run>:
 800c2ac:	4b05      	ldr	r3, [pc, #20]	; (800c2c4 <net_timers_run+0x18>)
 800c2ae:	4a06      	ldr	r2, [pc, #24]	; (800c2c8 <net_timers_run+0x1c>)
 800c2b0:	681b      	ldr	r3, [r3, #0]
 800c2b2:	6811      	ldr	r1, [r2, #0]
 800c2b4:	4299      	cmp	r1, r3
 800c2b6:	d803      	bhi.n	800c2c0 <net_timers_run+0x14>
 800c2b8:	3364      	adds	r3, #100	; 0x64
 800c2ba:	6013      	str	r3, [r2, #0]
 800c2bc:	f001 be78 	b.w	800dfb0 <igmp_timer>
 800c2c0:	4770      	bx	lr
 800c2c2:	bf00      	nop
 800c2c4:	20009bc4 	andcs	r9, r0, r4, asr #23
 800c2c8:	20001bd8 	ldrdcs	r1, [r0], -r8

0800c2cc <rfc3927>:
 800c2cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2d0:	4606      	mov	r6, r0
 800c2d2:	25ff      	movs	r5, #255	; 0xff
 800c2d4:	4b18      	ldr	r3, [pc, #96]	; (800c338 <rfc3927+0x6c>)
 800c2d6:	4f19      	ldr	r7, [pc, #100]	; (800c33c <rfc3927+0x70>)
 800c2d8:	791a      	ldrb	r2, [r3, #4]
 800c2da:	78dc      	ldrb	r4, [r3, #3]
 800c2dc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c340 <rfc3927+0x74>
 800c2e0:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c2e4:	f8d7 9000 	ldr.w	r9, [r7]
 800c2e8:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c344 <rfc3927+0x78>
 800c2ec:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c348 <rfc3927+0x7c>
 800c2f0:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c2f4:	4659      	mov	r1, fp
 800c2f6:	4620      	mov	r0, r4
 800c2f8:	f001 fbba 	bl	800da70 <arp_cache_lookup>
 800c2fc:	b190      	cbz	r0, 800c324 <rfc3927+0x58>
 800c2fe:	ba24      	rev	r4, r4
 800c300:	3401      	adds	r4, #1
 800c302:	3d01      	subs	r5, #1
 800c304:	ba24      	rev	r4, r4
 800c306:	b2ad      	uxth	r5, r5
 800c308:	4554      	cmp	r4, sl
 800c30a:	bf08      	it	eq
 800c30c:	4644      	moveq	r4, r8
 800c30e:	b18d      	cbz	r5, 800c334 <rfc3927+0x68>
 800c310:	683b      	ldr	r3, [r7, #0]
 800c312:	eba3 0309 	sub.w	r3, r3, r9
 800c316:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c31a:	d3eb      	bcc.n	800c2f4 <rfc3927+0x28>
 800c31c:	2400      	movs	r4, #0
 800c31e:	4623      	mov	r3, r4
 800c320:	4620      	mov	r0, r4
 800c322:	e002      	b.n	800c32a <rfc3927+0x5e>
 800c324:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c328:	2001      	movs	r0, #1
 800c32a:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800c32e:	6034      	str	r4, [r6, #0]
 800c330:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c334:	462c      	mov	r4, r5
 800c336:	e7f2      	b.n	800c31e <rfc3927+0x52>
 800c338:	20001bdc 	ldrdcs	r1, [r0], -ip
 800c33c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800c340:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c344:	20001be4 	andcs	r1, r0, r4, ror #23
 800c348:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c34c <_init_tcb>:
 800c34c:	b510      	push	{r4, lr}
 800c34e:	4603      	mov	r3, r0
 800c350:	2400      	movs	r4, #0
 800c352:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c356:	4293      	cmp	r3, r2
 800c358:	d10d      	bne.n	800c376 <_init_tcb+0x2a>
 800c35a:	4b08      	ldr	r3, [pc, #32]	; (800c37c <_init_tcb+0x30>)
 800c35c:	f640 3268 	movw	r2, #2920	; 0xb68
 800c360:	681b      	ldr	r3, [r3, #0]
 800c362:	8702      	strh	r2, [r0, #56]	; 0x38
 800c364:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c368:	6283      	str	r3, [r0, #40]	; 0x28
 800c36a:	6243      	str	r3, [r0, #36]	; 0x24
 800c36c:	2301      	movs	r3, #1
 800c36e:	8001      	strh	r1, [r0, #0]
 800c370:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c374:	bd10      	pop	{r4, pc}
 800c376:	f803 4b01 	strb.w	r4, [r3], #1
 800c37a:	e7ec      	b.n	800c356 <_init_tcb+0xa>
 800c37c:	20009bc4 	andcs	r9, r0, r4, asr #23

0800c380 <memcpy.isra.0>:
 800c380:	3801      	subs	r0, #1
 800c382:	440a      	add	r2, r1
 800c384:	4291      	cmp	r1, r2
 800c386:	d100      	bne.n	800c38a <memcpy.isra.0+0xa>
 800c388:	4770      	bx	lr
 800c38a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c38e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c392:	e7f7      	b.n	800c384 <memcpy.isra.0+0x4>

0800c394 <_bswap32>:
 800c394:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c396:	2204      	movs	r2, #4
 800c398:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c39c:	4629      	mov	r1, r5
 800c39e:	4604      	mov	r4, r0
 800c3a0:	eb0d 0002 	add.w	r0, sp, r2
 800c3a4:	f7ff ffec 	bl	800c380 <memcpy.isra.0>
 800c3a8:	2204      	movs	r2, #4
 800c3aa:	9b01      	ldr	r3, [sp, #4]
 800c3ac:	eb0d 0102 	add.w	r1, sp, r2
 800c3b0:	ba1b      	rev	r3, r3
 800c3b2:	4628      	mov	r0, r5
 800c3b4:	9301      	str	r3, [sp, #4]
 800c3b6:	f7ff ffe3 	bl	800c380 <memcpy.isra.0>
 800c3ba:	2204      	movs	r2, #4
 800c3bc:	3426      	adds	r4, #38	; 0x26
 800c3be:	eb0d 0002 	add.w	r0, sp, r2
 800c3c2:	4621      	mov	r1, r4
 800c3c4:	f7ff ffdc 	bl	800c380 <memcpy.isra.0>
 800c3c8:	2204      	movs	r2, #4
 800c3ca:	9b01      	ldr	r3, [sp, #4]
 800c3cc:	4620      	mov	r0, r4
 800c3ce:	ba1b      	rev	r3, r3
 800c3d0:	eb0d 0102 	add.w	r1, sp, r2
 800c3d4:	9301      	str	r3, [sp, #4]
 800c3d6:	f7ff ffd3 	bl	800c380 <memcpy.isra.0>
 800c3da:	b003      	add	sp, #12
 800c3dc:	bd30      	pop	{r4, r5, pc}
	...

0800c3e0 <_tcp_send_package>:
 800c3e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c3e4:	7a0b      	ldrb	r3, [r1, #8]
 800c3e6:	4605      	mov	r5, r0
 800c3e8:	f013 0f02 	tst.w	r3, #2
 800c3ec:	bf0c      	ite	eq
 800c3ee:	f04f 0805 	moveq.w	r8, #5
 800c3f2:	f04f 0806 	movne.w	r8, #6
 800c3f6:	f04f 0a00 	mov.w	sl, #0
 800c3fa:	4c47      	ldr	r4, [pc, #284]	; (800c518 <_tcp_send_package+0x138>)
 800c3fc:	460f      	mov	r7, r1
 800c3fe:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c400:	f100 0108 	add.w	r1, r0, #8
 800c404:	2206      	movs	r2, #6
 800c406:	4620      	mov	r0, r4
 800c408:	f7ff ffba 	bl	800c380 <memcpy.isra.0>
 800c40c:	4a43      	ldr	r2, [pc, #268]	; (800c51c <_tcp_send_package+0x13c>)
 800c40e:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800c412:	8813      	ldrh	r3, [r2, #0]
 800c414:	b2b6      	uxth	r6, r6
 800c416:	1c59      	adds	r1, r3, #1
 800c418:	8263      	strh	r3, [r4, #18]
 800c41a:	f105 0904 	add.w	r9, r5, #4
 800c41e:	f106 0314 	add.w	r3, r6, #20
 800c422:	ba5b      	rev16	r3, r3
 800c424:	8011      	strh	r1, [r2, #0]
 800c426:	f104 001e 	add.w	r0, r4, #30
 800c42a:	2204      	movs	r2, #4
 800c42c:	4649      	mov	r1, r9
 800c42e:	8223      	strh	r3, [r4, #16]
 800c430:	f7ff ffa6 	bl	800c380 <memcpy.isra.0>
 800c434:	2114      	movs	r1, #20
 800c436:	f104 000e 	add.w	r0, r4, #14
 800c43a:	f8a4 a018 	strh.w	sl, [r4, #24]
 800c43e:	f001 fe4a 	bl	800e0d6 <net_chksum>
 800c442:	882b      	ldrh	r3, [r5, #0]
 800c444:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800c448:	8463      	strh	r3, [r4, #34]	; 0x22
 800c44a:	886b      	ldrh	r3, [r5, #2]
 800c44c:	8320      	strh	r0, [r4, #24]
 800c44e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c450:	683b      	ldr	r3, [r7, #0]
 800c452:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c454:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c458:	687b      	ldr	r3, [r7, #4]
 800c45a:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800c45e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c462:	7a3b      	ldrb	r3, [r7, #8]
 800c464:	8622      	strh	r2, [r4, #48]	; 0x30
 800c466:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c46a:	079b      	lsls	r3, r3, #30
 800c46c:	bf48      	it	mi
 800c46e:	f240 4302 	movwmi	r3, #1026	; 0x402
 800c472:	8baa      	ldrh	r2, [r5, #28]
 800c474:	bf48      	it	mi
 800c476:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800c478:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c47a:	bf42      	ittt	mi
 800c47c:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c480:	4622      	movmi	r2, r4
 800c482:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c486:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c488:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800c48c:	bf58      	it	pl
 800c48e:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c492:	2b00      	cmp	r3, #0
 800c494:	d13e      	bne.n	800c514 <_tcp_send_package+0x134>
 800c496:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c498:	481f      	ldr	r0, [pc, #124]	; (800c518 <_tcp_send_package+0x138>)
 800c49a:	ba5b      	rev16	r3, r3
 800c49c:	8463      	strh	r3, [r4, #34]	; 0x22
 800c49e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c4a0:	ba5b      	rev16	r3, r3
 800c4a2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c4a4:	f7ff ff76 	bl	800c394 <_bswap32>
 800c4a8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c4aa:	a801      	add	r0, sp, #4
 800c4ac:	ba5b      	rev16	r3, r3
 800c4ae:	8623      	strh	r3, [r4, #48]	; 0x30
 800c4b0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c4b2:	220c      	movs	r2, #12
 800c4b4:	ba5b      	rev16	r3, r3
 800c4b6:	491a      	ldr	r1, [pc, #104]	; (800c520 <_tcp_send_package+0x140>)
 800c4b8:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c4ba:	f7ff ff61 	bl	800c380 <memcpy.isra.0>
 800c4be:	2204      	movs	r2, #4
 800c4c0:	4918      	ldr	r1, [pc, #96]	; (800c524 <_tcp_send_package+0x144>)
 800c4c2:	4817      	ldr	r0, [pc, #92]	; (800c520 <_tcp_send_package+0x140>)
 800c4c4:	f7ff ff5c 	bl	800c380 <memcpy.isra.0>
 800c4c8:	2204      	movs	r2, #4
 800c4ca:	4649      	mov	r1, r9
 800c4cc:	4816      	ldr	r0, [pc, #88]	; (800c528 <_tcp_send_package+0x148>)
 800c4ce:	f7ff ff57 	bl	800c380 <memcpy.isra.0>
 800c4d2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800c4d6:	f106 010c 	add.w	r1, r6, #12
 800c4da:	83e3      	strh	r3, [r4, #30]
 800c4dc:	4810      	ldr	r0, [pc, #64]	; (800c520 <_tcp_send_package+0x140>)
 800c4de:	ba73      	rev16	r3, r6
 800c4e0:	8423      	strh	r3, [r4, #32]
 800c4e2:	f001 fdf8 	bl	800e0d6 <net_chksum>
 800c4e6:	a901      	add	r1, sp, #4
 800c4e8:	4605      	mov	r5, r0
 800c4ea:	220c      	movs	r2, #12
 800c4ec:	480c      	ldr	r0, [pc, #48]	; (800c520 <_tcp_send_package+0x140>)
 800c4ee:	f7ff ff47 	bl	800c380 <memcpy.isra.0>
 800c4f2:	4809      	ldr	r0, [pc, #36]	; (800c518 <_tcp_send_package+0x138>)
 800c4f4:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c4f8:	8665      	strh	r5, [r4, #50]	; 0x32
 800c4fa:	b004      	add	sp, #16
 800c4fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c500:	f003 bcf8 	b.w	800fef4 <emac_eth_send>
 800c504:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c506:	5cc9      	ldrb	r1, [r1, r3]
 800c508:	54d1      	strb	r1, [r2, r3]
 800c50a:	3301      	adds	r3, #1
 800c50c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c50e:	4299      	cmp	r1, r3
 800c510:	d8f8      	bhi.n	800c504 <_tcp_send_package+0x124>
 800c512:	e7c0      	b.n	800c496 <_tcp_send_package+0xb6>
 800c514:	2300      	movs	r3, #0
 800c516:	e7f9      	b.n	800c50c <_tcp_send_package+0x12c>
 800c518:	200027a4 	andcs	r2, r0, r4, lsr #15
 800c51c:	20001bec 	andcs	r1, r0, ip, ror #23
 800c520:	200027ba 			; <UNDEFINED> instruction: 0x200027ba
 800c524:	20001bc0 	andcs	r1, r0, r0, asr #23
 800c528:	200027be 			; <UNDEFINED> instruction: 0x200027be

0800c52c <_send_reset>:
 800c52c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c52e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c532:	4604      	mov	r4, r0
 800c534:	075a      	lsls	r2, r3, #29
 800c536:	460e      	mov	r6, r1
 800c538:	d421      	bmi.n	800c57e <_send_reset+0x52>
 800c53a:	2204      	movs	r2, #4
 800c53c:	f013 0310 	ands.w	r3, r3, #16
 800c540:	f88d 200c 	strb.w	r2, [sp, #12]
 800c544:	d01d      	beq.n	800c582 <_send_reset+0x56>
 800c546:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c54a:	4668      	mov	r0, sp
 800c54c:	f7ff ff18 	bl	800c380 <memcpy.isra.0>
 800c550:	9b00      	ldr	r3, [sp, #0]
 800c552:	9301      	str	r3, [sp, #4]
 800c554:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c558:	4668      	mov	r0, sp
 800c55a:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c55e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c562:	07db      	lsls	r3, r3, #31
 800c564:	f04f 0204 	mov.w	r2, #4
 800c568:	bf48      	it	mi
 800c56a:	3501      	addmi	r5, #1
 800c56c:	f7ff ff08 	bl	800c380 <memcpy.isra.0>
 800c570:	9b00      	ldr	r3, [sp, #0]
 800c572:	4630      	mov	r0, r6
 800c574:	441d      	add	r5, r3
 800c576:	a901      	add	r1, sp, #4
 800c578:	9502      	str	r5, [sp, #8]
 800c57a:	f7ff ff31 	bl	800c3e0 <_tcp_send_package>
 800c57e:	b004      	add	sp, #16
 800c580:	bd70      	pop	{r4, r5, r6, pc}
 800c582:	9301      	str	r3, [sp, #4]
 800c584:	2314      	movs	r3, #20
 800c586:	f88d 300c 	strb.w	r3, [sp, #12]
 800c58a:	e7e3      	b.n	800c554 <_send_reset+0x28>

0800c58c <tcp_begin>:
 800c58c:	b508      	push	{r3, lr}
 800c58e:	4b0a      	ldr	r3, [pc, #40]	; (800c5b8 <tcp_begin+0x2c>)
 800c590:	4601      	mov	r1, r0
 800c592:	881a      	ldrh	r2, [r3, #0]
 800c594:	4282      	cmp	r2, r0
 800c596:	d102      	bne.n	800c59e <tcp_begin+0x12>
 800c598:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c59c:	b130      	cbz	r0, 800c5ac <tcp_begin+0x20>
 800c59e:	b12a      	cbz	r2, 800c5ac <tcp_begin+0x20>
 800c5a0:	4806      	ldr	r0, [pc, #24]	; (800c5bc <tcp_begin+0x30>)
 800c5a2:	f002 fac9 	bl	800eb38 <console_error>
 800c5a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c5aa:	bd08      	pop	{r3, pc}
 800c5ac:	4802      	ldr	r0, [pc, #8]	; (800c5b8 <tcp_begin+0x2c>)
 800c5ae:	8019      	strh	r1, [r3, #0]
 800c5b0:	f7ff fecc 	bl	800c34c <_init_tcb>
 800c5b4:	2000      	movs	r0, #0
 800c5b6:	e7f8      	b.n	800c5aa <tcp_begin+0x1e>
 800c5b8:	20002760 	andcs	r2, r0, r0, ror #14
 800c5bc:	08012412 	stmdaeq	r1, {r1, r4, sl, sp}

0800c5c0 <tcp_write>:
 800c5c0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c5c4:	429a      	cmp	r2, r3
 800c5c6:	bf28      	it	cs
 800c5c8:	461a      	movcs	r2, r3
 800c5ca:	2344      	movs	r3, #68	; 0x44
 800c5cc:	b530      	push	{r4, r5, lr}
 800c5ce:	4c0d      	ldr	r4, [pc, #52]	; (800c604 <tcp_write+0x44>)
 800c5d0:	b085      	sub	sp, #20
 800c5d2:	fb03 4400 	mla	r4, r3, r0, r4
 800c5d6:	6963      	ldr	r3, [r4, #20]
 800c5d8:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c5da:	9301      	str	r3, [sp, #4]
 800c5dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c5de:	4620      	mov	r0, r4
 800c5e0:	9302      	str	r3, [sp, #8]
 800c5e2:	2318      	movs	r3, #24
 800c5e4:	8622      	strh	r2, [r4, #48]	; 0x30
 800c5e6:	a901      	add	r1, sp, #4
 800c5e8:	4615      	mov	r5, r2
 800c5ea:	f88d 300c 	strb.w	r3, [sp, #12]
 800c5ee:	f7ff fef7 	bl	800c3e0 <_tcp_send_package>
 800c5f2:	2300      	movs	r3, #0
 800c5f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c5f6:	8623      	strh	r3, [r4, #48]	; 0x30
 800c5f8:	6963      	ldr	r3, [r4, #20]
 800c5fa:	442b      	add	r3, r5
 800c5fc:	6163      	str	r3, [r4, #20]
 800c5fe:	b005      	add	sp, #20
 800c600:	bd30      	pop	{r4, r5, pc}
 800c602:	bf00      	nop
 800c604:	20002760 	andcs	r2, r0, r0, ror #14

0800c608 <tcp_read>:
 800c608:	2344      	movs	r3, #68	; 0x44
 800c60a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c60c:	4c1c      	ldr	r4, [pc, #112]	; (800c680 <tcp_read+0x78>)
 800c60e:	b085      	sub	sp, #20
 800c610:	fb03 4400 	mla	r4, r3, r0, r4
 800c614:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c618:	2b07      	cmp	r3, #7
 800c61a:	d112      	bne.n	800c642 <tcp_read+0x3a>
 800c61c:	6963      	ldr	r3, [r4, #20]
 800c61e:	4620      	mov	r0, r4
 800c620:	9301      	str	r3, [sp, #4]
 800c622:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c624:	a901      	add	r1, sp, #4
 800c626:	9302      	str	r3, [sp, #8]
 800c628:	2311      	movs	r3, #17
 800c62a:	f88d 300c 	strb.w	r3, [sp, #12]
 800c62e:	f7ff fed7 	bl	800c3e0 <_tcp_send_package>
 800c632:	2309      	movs	r3, #9
 800c634:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c638:	6963      	ldr	r3, [r4, #20]
 800c63a:	3301      	adds	r3, #1
 800c63c:	6163      	str	r3, [r4, #20]
 800c63e:	2000      	movs	r0, #0
 800c640:	e01b      	b.n	800c67a <tcp_read+0x72>
 800c642:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c646:	4358      	muls	r0, r3
 800c648:	4a0e      	ldr	r2, [pc, #56]	; (800c684 <tcp_read+0x7c>)
 800c64a:	1817      	adds	r7, r2, r0
 800c64c:	887b      	ldrh	r3, [r7, #2]
 800c64e:	5a15      	ldrh	r5, [r2, r0]
 800c650:	429d      	cmp	r5, r3
 800c652:	d0f4      	beq.n	800c63e <tcp_read+0x36>
 800c654:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c658:	435d      	muls	r5, r3
 800c65a:	1d06      	adds	r6, r0, #4
 800c65c:	442e      	add	r6, r5
 800c65e:	4416      	add	r6, r2
 800c660:	4405      	add	r5, r0
 800c662:	600e      	str	r6, [r1, #0]
 800c664:	442a      	add	r2, r5
 800c666:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c66a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c66c:	3301      	adds	r3, #1
 800c66e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c672:	f003 0301 	and.w	r3, r3, #1
 800c676:	8722      	strh	r2, [r4, #56]	; 0x38
 800c678:	807b      	strh	r3, [r7, #2]
 800c67a:	b005      	add	sp, #20
 800c67c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c67e:	bf00      	nop
 800c680:	20002760 	andcs	r2, r0, r0, ror #14
 800c684:	20001bf0 	strdcs	r1, [r0], -r0

0800c688 <memcpy.isra.0>:
 800c688:	3801      	subs	r0, #1
 800c68a:	440a      	add	r2, r1
 800c68c:	4291      	cmp	r1, r2
 800c68e:	d100      	bne.n	800c692 <memcpy.isra.0+0xa>
 800c690:	4770      	bx	lr
 800c692:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c696:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c69a:	e7f7      	b.n	800c68c <memcpy.isra.0+0x4>

0800c69c <net_memcpy>:
 800c69c:	ea40 0301 	orr.w	r3, r0, r1
 800c6a0:	079b      	lsls	r3, r3, #30
 800c6a2:	b570      	push	{r4, r5, r6, lr}
 800c6a4:	d108      	bne.n	800c6b8 <net_memcpy+0x1c>
 800c6a6:	f022 0303 	bic.w	r3, r2, #3
 800c6aa:	1f04      	subs	r4, r0, #4
 800c6ac:	18cd      	adds	r5, r1, r3
 800c6ae:	42a9      	cmp	r1, r5
 800c6b0:	d108      	bne.n	800c6c4 <net_memcpy+0x28>
 800c6b2:	1ad2      	subs	r2, r2, r3
 800c6b4:	4403      	add	r3, r0
 800c6b6:	e000      	b.n	800c6ba <net_memcpy+0x1e>
 800c6b8:	4603      	mov	r3, r0
 800c6ba:	3b01      	subs	r3, #1
 800c6bc:	440a      	add	r2, r1
 800c6be:	4291      	cmp	r1, r2
 800c6c0:	d105      	bne.n	800c6ce <net_memcpy+0x32>
 800c6c2:	bd70      	pop	{r4, r5, r6, pc}
 800c6c4:	f851 6b04 	ldr.w	r6, [r1], #4
 800c6c8:	f844 6f04 	str.w	r6, [r4, #4]!
 800c6cc:	e7ef      	b.n	800c6ae <net_memcpy+0x12>
 800c6ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c6d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c6d6:	e7f2      	b.n	800c6be <net_memcpy+0x22>

0800c6d8 <udp_set_ip>:
 800c6d8:	2204      	movs	r2, #4
 800c6da:	b513      	push	{r0, r1, r4, lr}
 800c6dc:	4604      	mov	r4, r0
 800c6de:	6803      	ldr	r3, [r0, #0]
 800c6e0:	eb0d 0102 	add.w	r1, sp, r2
 800c6e4:	4808      	ldr	r0, [pc, #32]	; (800c708 <udp_set_ip+0x30>)
 800c6e6:	9301      	str	r3, [sp, #4]
 800c6e8:	f7ff ffce 	bl	800c688 <memcpy.isra.0>
 800c6ec:	6862      	ldr	r2, [r4, #4]
 800c6ee:	4b07      	ldr	r3, [pc, #28]	; (800c70c <udp_set_ip+0x34>)
 800c6f0:	43d1      	mvns	r1, r2
 800c6f2:	6019      	str	r1, [r3, #0]
 800c6f4:	6823      	ldr	r3, [r4, #0]
 800c6f6:	4013      	ands	r3, r2
 800c6f8:	4a05      	ldr	r2, [pc, #20]	; (800c710 <udp_set_ip+0x38>)
 800c6fa:	6013      	str	r3, [r2, #0]
 800c6fc:	68a2      	ldr	r2, [r4, #8]
 800c6fe:	4b05      	ldr	r3, [pc, #20]	; (800c714 <udp_set_ip+0x3c>)
 800c700:	601a      	str	r2, [r3, #0]
 800c702:	b002      	add	sp, #8
 800c704:	bd10      	pop	{r4, pc}
 800c706:	bf00      	nop
 800c708:	20008a7a 	andcs	r8, r0, sl, ror sl
 800c70c:	20002d90 	mulcs	r0, r0, sp
 800c710:	20002d98 	mulcs	r0, r8, sp
 800c714:	20002d94 	mulcs	r0, r4, sp

0800c718 <udp_bind>:
 800c718:	4a0a      	ldr	r2, [pc, #40]	; (800c744 <udp_bind+0x2c>)
 800c71a:	4603      	mov	r3, r0
 800c71c:	b510      	push	{r4, lr}
 800c71e:	2000      	movs	r0, #0
 800c720:	4614      	mov	r4, r2
 800c722:	f852 1b04 	ldr.w	r1, [r2], #4
 800c726:	4299      	cmp	r1, r3
 800c728:	d008      	beq.n	800c73c <udp_bind+0x24>
 800c72a:	b141      	cbz	r1, 800c73e <udp_bind+0x26>
 800c72c:	3001      	adds	r0, #1
 800c72e:	2808      	cmp	r0, #8
 800c730:	d1f7      	bne.n	800c722 <udp_bind+0xa>
 800c732:	4805      	ldr	r0, [pc, #20]	; (800c748 <udp_bind+0x30>)
 800c734:	f002 fa00 	bl	800eb38 <console_error>
 800c738:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c73c:	bd10      	pop	{r4, pc}
 800c73e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c742:	e7fb      	b.n	800c73c <udp_bind+0x24>
 800c744:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c748:	08012432 	stmdaeq	r1, {r1, r4, r5, sl, sp}

0800c74c <udp_unbind>:
 800c74c:	4a0c      	ldr	r2, [pc, #48]	; (800c780 <udp_unbind+0x34>)
 800c74e:	2300      	movs	r3, #0
 800c750:	4611      	mov	r1, r2
 800c752:	b510      	push	{r4, lr}
 800c754:	f852 4b04 	ldr.w	r4, [r2], #4
 800c758:	4284      	cmp	r4, r0
 800c75a:	d108      	bne.n	800c76e <udp_unbind+0x22>
 800c75c:	2000      	movs	r0, #0
 800c75e:	f640 3294 	movw	r2, #2964	; 0xb94
 800c762:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c766:	4353      	muls	r3, r2
 800c768:	4a06      	ldr	r2, [pc, #24]	; (800c784 <udp_unbind+0x38>)
 800c76a:	50d0      	str	r0, [r2, r3]
 800c76c:	bd10      	pop	{r4, pc}
 800c76e:	3301      	adds	r3, #1
 800c770:	2b08      	cmp	r3, #8
 800c772:	d1ef      	bne.n	800c754 <udp_unbind+0x8>
 800c774:	4804      	ldr	r0, [pc, #16]	; (800c788 <udp_unbind+0x3c>)
 800c776:	f002 f9df 	bl	800eb38 <console_error>
 800c77a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c77e:	e7f5      	b.n	800c76c <udp_unbind+0x20>
 800c780:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c784:	20002dc0 	andcs	r2, r0, r0, asr #27
 800c788:	08012437 	stmdaeq	r1, {r0, r1, r2, r4, r5, sl, sp}

0800c78c <udp_recv>:
 800c78c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c790:	4604      	mov	r4, r0
 800c792:	4698      	mov	r8, r3
 800c794:	f640 3394 	movw	r3, #2964	; 0xb94
 800c798:	435c      	muls	r4, r3
 800c79a:	4608      	mov	r0, r1
 800c79c:	4915      	ldr	r1, [pc, #84]	; (800c7f4 <udp_recv+0x68>)
 800c79e:	190f      	adds	r7, r1, r4
 800c7a0:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c7a4:	5b0b      	ldrh	r3, [r1, r4]
 800c7a6:	4563      	cmp	r3, ip
 800c7a8:	d021      	beq.n	800c7ee <udp_recv+0x62>
 800c7aa:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c7ae:	fb03 fc0c 	mul.w	ip, r3, ip
 800c7b2:	eb0c 0604 	add.w	r6, ip, r4
 800c7b6:	440e      	add	r6, r1
 800c7b8:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c7bc:	3404      	adds	r4, #4
 800c7be:	4295      	cmp	r5, r2
 800c7c0:	bf28      	it	cs
 800c7c2:	4615      	movcs	r5, r2
 800c7c4:	4464      	add	r4, ip
 800c7c6:	462a      	mov	r2, r5
 800c7c8:	4421      	add	r1, r4
 800c7ca:	f7ff ff67 	bl	800c69c <net_memcpy>
 800c7ce:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c7d2:	f8c8 3000 	str.w	r3, [r8]
 800c7d6:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c7da:	9b06      	ldr	r3, [sp, #24]
 800c7dc:	801a      	strh	r2, [r3, #0]
 800c7de:	887b      	ldrh	r3, [r7, #2]
 800c7e0:	3301      	adds	r3, #1
 800c7e2:	f003 0301 	and.w	r3, r3, #1
 800c7e6:	807b      	strh	r3, [r7, #2]
 800c7e8:	4628      	mov	r0, r5
 800c7ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c7ee:	2500      	movs	r5, #0
 800c7f0:	e7fa      	b.n	800c7e8 <udp_recv+0x5c>
 800c7f2:	bf00      	nop
 800c7f4:	20002dc0 	andcs	r2, r0, r0, asr #27

0800c7f8 <udp_recv2>:
 800c7f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7fa:	f640 3594 	movw	r5, #2964	; 0xb94
 800c7fe:	4368      	muls	r0, r5
 800c800:	4c0f      	ldr	r4, [pc, #60]	; (800c840 <udp_recv2+0x48>)
 800c802:	1827      	adds	r7, r4, r0
 800c804:	887d      	ldrh	r5, [r7, #2]
 800c806:	5a26      	ldrh	r6, [r4, r0]
 800c808:	42ae      	cmp	r6, r5
 800c80a:	d017      	beq.n	800c83c <udp_recv2+0x44>
 800c80c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c810:	fb0c f505 	mul.w	r5, ip, r5
 800c814:	1d06      	adds	r6, r0, #4
 800c816:	442e      	add	r6, r5
 800c818:	4405      	add	r5, r0
 800c81a:	4426      	add	r6, r4
 800c81c:	442c      	add	r4, r5
 800c81e:	600e      	str	r6, [r1, #0]
 800c820:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c824:	6011      	str	r1, [r2, #0]
 800c826:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c82a:	801a      	strh	r2, [r3, #0]
 800c82c:	887b      	ldrh	r3, [r7, #2]
 800c82e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c832:	3301      	adds	r3, #1
 800c834:	f003 0301 	and.w	r3, r3, #1
 800c838:	807b      	strh	r3, [r7, #2]
 800c83a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c83c:	2000      	movs	r0, #0
 800c83e:	e7fc      	b.n	800c83a <udp_recv2+0x42>
 800c840:	20002dc0 	andcs	r2, r0, r0, asr #27

0800c844 <udp_send>:
 800c844:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c848:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c97c <udp_send+0x138>
 800c84c:	461c      	mov	r4, r3
 800c84e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c852:	4607      	mov	r7, r0
 800c854:	4688      	mov	r8, r1
 800c856:	4616      	mov	r6, r2
 800c858:	2b00      	cmp	r3, #0
 800c85a:	f000 808b 	beq.w	800c974 <udp_send+0x130>
 800c85e:	1c63      	adds	r3, r4, #1
 800c860:	d141      	bne.n	800c8e6 <udp_send+0xa2>
 800c862:	4a47      	ldr	r2, [pc, #284]	; (800c980 <udp_send+0x13c>)
 800c864:	2307      	movs	r3, #7
 800c866:	4611      	mov	r1, r2
 800c868:	20ff      	movs	r0, #255	; 0xff
 800c86a:	e001      	b.n	800c870 <udp_send+0x2c>
 800c86c:	f802 0b01 	strb.w	r0, [r2], #1
 800c870:	3b01      	subs	r3, #1
 800c872:	d1fb      	bne.n	800c86c <udp_send+0x28>
 800c874:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c878:	83cb      	strh	r3, [r1, #30]
 800c87a:	840b      	strh	r3, [r1, #32]
 800c87c:	2500      	movs	r5, #0
 800c87e:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c984 <udp_send+0x140>
 800c882:	4c3f      	ldr	r4, [pc, #252]	; (800c980 <udp_send+0x13c>)
 800c884:	f8ba 3000 	ldrh.w	r3, [sl]
 800c888:	2114      	movs	r1, #20
 800c88a:	8263      	strh	r3, [r4, #18]
 800c88c:	f106 031c 	add.w	r3, r6, #28
 800c890:	ba5b      	rev16	r3, r3
 800c892:	f104 000e 	add.w	r0, r4, #14
 800c896:	8223      	strh	r3, [r4, #16]
 800c898:	8325      	strh	r5, [r4, #24]
 800c89a:	f001 fc1c 	bl	800e0d6 <net_chksum>
 800c89e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c8a2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c8a6:	ba5b      	rev16	r3, r3
 800c8a8:	8463      	strh	r3, [r4, #34]	; 0x22
 800c8aa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c8ae:	4632      	mov	r2, r6
 800c8b0:	ba5b      	rev16	r3, r3
 800c8b2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c8b4:	f106 0308 	add.w	r3, r6, #8
 800c8b8:	ba5b      	rev16	r3, r3
 800c8ba:	bf28      	it	cs
 800c8bc:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c8c0:	4641      	mov	r1, r8
 800c8c2:	8320      	strh	r0, [r4, #24]
 800c8c4:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c8c8:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c8ca:	f7ff fee7 	bl	800c69c <net_memcpy>
 800c8ce:	4620      	mov	r0, r4
 800c8d0:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c8d4:	f003 fb0e 	bl	800fef4 <emac_eth_send>
 800c8d8:	f8ba 3000 	ldrh.w	r3, [sl]
 800c8dc:	4628      	mov	r0, r5
 800c8de:	3301      	adds	r3, #1
 800c8e0:	f8aa 3000 	strh.w	r3, [sl]
 800c8e4:	e037      	b.n	800c956 <udp_send+0x112>
 800c8e6:	4b28      	ldr	r3, [pc, #160]	; (800c988 <udp_send+0x144>)
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	43a3      	bics	r3, r4
 800c8ec:	d10f      	bne.n	800c90e <udp_send+0xca>
 800c8ee:	2307      	movs	r3, #7
 800c8f0:	21ff      	movs	r1, #255	; 0xff
 800c8f2:	4a23      	ldr	r2, [pc, #140]	; (800c980 <udp_send+0x13c>)
 800c8f4:	e001      	b.n	800c8fa <udp_send+0xb6>
 800c8f6:	f802 1b01 	strb.w	r1, [r2], #1
 800c8fa:	3b01      	subs	r3, #1
 800c8fc:	d1fb      	bne.n	800c8f6 <udp_send+0xb2>
 800c8fe:	2204      	movs	r2, #4
 800c900:	4822      	ldr	r0, [pc, #136]	; (800c98c <udp_send+0x148>)
 800c902:	eb0d 0102 	add.w	r1, sp, r2
 800c906:	9401      	str	r4, [sp, #4]
 800c908:	f7ff febe 	bl	800c688 <memcpy.isra.0>
 800c90c:	e7b6      	b.n	800c87c <udp_send+0x38>
 800c90e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c912:	2be0      	cmp	r3, #224	; 0xe0
 800c914:	d10e      	bne.n	800c934 <udp_send+0xf0>
 800c916:	491e      	ldr	r1, [pc, #120]	; (800c990 <udp_send+0x14c>)
 800c918:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c91c:	70cb      	strb	r3, [r1, #3]
 800c91e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c922:	710b      	strb	r3, [r1, #4]
 800c924:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c928:	2206      	movs	r2, #6
 800c92a:	4815      	ldr	r0, [pc, #84]	; (800c980 <udp_send+0x13c>)
 800c92c:	714b      	strb	r3, [r1, #5]
 800c92e:	f7ff feab 	bl	800c688 <memcpy.isra.0>
 800c932:	e7e4      	b.n	800c8fe <udp_send+0xba>
 800c934:	4b17      	ldr	r3, [pc, #92]	; (800c994 <udp_send+0x150>)
 800c936:	681b      	ldr	r3, [r3, #0]
 800c938:	43a3      	bics	r3, r4
 800c93a:	d00f      	beq.n	800c95c <udp_send+0x118>
 800c93c:	4d16      	ldr	r5, [pc, #88]	; (800c998 <udp_send+0x154>)
 800c93e:	4910      	ldr	r1, [pc, #64]	; (800c980 <udp_send+0x13c>)
 800c940:	6828      	ldr	r0, [r5, #0]
 800c942:	f001 f895 	bl	800da70 <arp_cache_lookup>
 800c946:	682b      	ldr	r3, [r5, #0]
 800c948:	4298      	cmp	r0, r3
 800c94a:	d0d8      	beq.n	800c8fe <udp_send+0xba>
 800c94c:	4813      	ldr	r0, [pc, #76]	; (800c99c <udp_send+0x158>)
 800c94e:	f002 f8f3 	bl	800eb38 <console_error>
 800c952:	f06f 0002 	mvn.w	r0, #2
 800c956:	b002      	add	sp, #8
 800c958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c95c:	4620      	mov	r0, r4
 800c95e:	4908      	ldr	r1, [pc, #32]	; (800c980 <udp_send+0x13c>)
 800c960:	f001 f886 	bl	800da70 <arp_cache_lookup>
 800c964:	42a0      	cmp	r0, r4
 800c966:	d0ca      	beq.n	800c8fe <udp_send+0xba>
 800c968:	480d      	ldr	r0, [pc, #52]	; (800c9a0 <udp_send+0x15c>)
 800c96a:	f002 f8e5 	bl	800eb38 <console_error>
 800c96e:	f06f 0001 	mvn.w	r0, #1
 800c972:	e7f0      	b.n	800c956 <udp_send+0x112>
 800c974:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c978:	e7ed      	b.n	800c956 <udp_send+0x112>
 800c97a:	bf00      	nop
 800c97c:	20002da0 	andcs	r2, r0, r0, lsr #27
 800c980:	20008a60 	andcs	r8, r0, r0, ror #20
 800c984:	20002d9c 	mulcs	r0, ip, sp
 800c988:	20002d90 	mulcs	r0, r0, sp
 800c98c:	20008a7e 	andcs	r8, r0, lr, ror sl
 800c990:	20000014 	andcs	r0, r0, r4, lsl r0
 800c994:	20002d98 	mulcs	r0, r8, sp
 800c998:	20002d94 	mulcs	r0, r4, sp
 800c99c:	0801243f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, sl, sp}
 800c9a0:	08012465 	stmdaeq	r1, {r0, r2, r5, r6, sl, sp}

0800c9a4 <strlen>:
 800c9a4:	4603      	mov	r3, r0
 800c9a6:	461a      	mov	r2, r3
 800c9a8:	7811      	ldrb	r1, [r2, #0]
 800c9aa:	3301      	adds	r3, #1
 800c9ac:	2900      	cmp	r1, #0
 800c9ae:	d1fa      	bne.n	800c9a6 <strlen+0x2>
 800c9b0:	1a10      	subs	r0, r2, r0
 800c9b2:	4770      	bx	lr

0800c9b4 <strcmp>:
 800c9b4:	1e43      	subs	r3, r0, #1
 800c9b6:	3901      	subs	r1, #1
 800c9b8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c9bc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c9c0:	4290      	cmp	r0, r2
 800c9c2:	d001      	beq.n	800c9c8 <strcmp+0x14>
 800c9c4:	1a80      	subs	r0, r0, r2
 800c9c6:	e001      	b.n	800c9cc <strcmp+0x18>
 800c9c8:	2800      	cmp	r0, #0
 800c9ca:	d1f5      	bne.n	800c9b8 <strcmp+0x4>
 800c9cc:	4770      	bx	lr

0800c9ce <strcpy.isra.0>:
 800c9ce:	3801      	subs	r0, #1
 800c9d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c9d4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c9d8:	2b00      	cmp	r3, #0
 800c9da:	d1f9      	bne.n	800c9d0 <strcpy.isra.0+0x2>
 800c9dc:	4770      	bx	lr

0800c9de <strcat.isra.0>:
 800c9de:	b538      	push	{r3, r4, r5, lr}
 800c9e0:	4604      	mov	r4, r0
 800c9e2:	460d      	mov	r5, r1
 800c9e4:	f7ff ffde 	bl	800c9a4 <strlen>
 800c9e8:	4629      	mov	r1, r5
 800c9ea:	4420      	add	r0, r4
 800c9ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9f0:	f7ff bfed 	b.w	800c9ce <strcpy.isra.0>

0800c9f4 <MDNS::MDNS()>:
 800c9f4:	b513      	push	{r0, r1, r4, lr}
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	a901      	add	r1, sp, #4
 800c9fa:	4804      	ldr	r0, [pc, #16]	; (800ca0c <MDNS::MDNS()+0x18>)
 800c9fc:	f002 f9fc 	bl	800edf8 <inet_aton>
 800ca00:	4620      	mov	r0, r4
 800ca02:	4b03      	ldr	r3, [pc, #12]	; (800ca10 <MDNS::MDNS()+0x1c>)
 800ca04:	9a01      	ldr	r2, [sp, #4]
 800ca06:	601a      	str	r2, [r3, #0]
 800ca08:	b002      	add	sp, #8
 800ca0a:	bd10      	pop	{r4, pc}
 800ca0c:	080124a0 	stmdaeq	r1, {r5, r7, sl, sp}
 800ca10:	20009054 	andcs	r9, r0, r4, asr r0

0800ca14 <MDNS::SetName(char const*)>:
 800ca14:	b538      	push	{r3, r4, r5, lr}
 800ca16:	4d0b      	ldr	r5, [pc, #44]	; (800ca44 <MDNS::SetName(char const*)+0x30>)
 800ca18:	460c      	mov	r4, r1
 800ca1a:	6828      	ldr	r0, [r5, #0]
 800ca1c:	b108      	cbz	r0, 800ca22 <MDNS::SetName(char const*)+0xe>
 800ca1e:	f002 f9e5 	bl	800edec <operator delete[](void*)>
 800ca22:	4620      	mov	r0, r4
 800ca24:	f7ff ffbe 	bl	800c9a4 <strlen>
 800ca28:	3007      	adds	r0, #7
 800ca2a:	f002 f9e3 	bl	800edf4 <operator new[](unsigned int)>
 800ca2e:	4621      	mov	r1, r4
 800ca30:	6028      	str	r0, [r5, #0]
 800ca32:	f7ff ffcc 	bl	800c9ce <strcpy.isra.0>
 800ca36:	6828      	ldr	r0, [r5, #0]
 800ca38:	4903      	ldr	r1, [pc, #12]	; (800ca48 <MDNS::SetName(char const*)+0x34>)
 800ca3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca3e:	f7ff bfce 	b.w	800c9de <strcat.isra.0>
 800ca42:	bf00      	nop
 800ca44:	20009484 	andcs	r9, r0, r4, lsl #9
 800ca48:	080124b0 	stmdaeq	r1, {r4, r5, r7, sl, sp}

0800ca4c <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800ca4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca50:	f04f 0e00 	mov.w	lr, #0
 800ca54:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800ca58:	4675      	mov	r5, lr
 800ca5a:	4e1b      	ldr	r6, [pc, #108]	; (800cac8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800ca5c:	4f1b      	ldr	r7, [pc, #108]	; (800cacc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800ca5e:	780b      	ldrb	r3, [r1, #0]
 800ca60:	1c68      	adds	r0, r5, #1
 800ca62:	b913      	cbnz	r3, 800ca6a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800ca64:	7013      	strb	r3, [r2, #0]
 800ca66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca6a:	2b3f      	cmp	r3, #63	; 0x3f
 800ca6c:	d91c      	bls.n	800caa8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800ca6e:	7849      	ldrb	r1, [r1, #1]
 800ca70:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800ca74:	430b      	orrs	r3, r1
 800ca76:	6839      	ldr	r1, [r7, #0]
 800ca78:	f1be 0f00 	cmp.w	lr, #0
 800ca7c:	bf08      	it	eq
 800ca7e:	4605      	moveq	r5, r0
 800ca80:	5ccc      	ldrb	r4, [r1, r3]
 800ca82:	3301      	adds	r3, #1
 800ca84:	4419      	add	r1, r3
 800ca86:	2300      	movs	r3, #0
 800ca88:	42a3      	cmp	r3, r4
 800ca8a:	5cc8      	ldrb	r0, [r1, r3]
 800ca8c:	d309      	bcc.n	800caa2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800ca8e:	f04f 0e01 	mov.w	lr, #1
 800ca92:	4421      	add	r1, r4
 800ca94:	4414      	add	r4, r2
 800ca96:	780b      	ldrb	r3, [r1, #0]
 800ca98:	b10b      	cbz	r3, 800ca9e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800ca9a:	f804 cb01 	strb.w	ip, [r4], #1
 800ca9e:	4622      	mov	r2, r4
 800caa0:	e7dd      	b.n	800ca5e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800caa2:	54d0      	strb	r0, [r2, r3]
 800caa4:	3301      	adds	r3, #1
 800caa6:	e7ef      	b.n	800ca88 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800caa8:	4688      	mov	r8, r1
 800caaa:	18d4      	adds	r4, r2, r3
 800caac:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800cab0:	f802 9b01 	strb.w	r9, [r2], #1
 800cab4:	4294      	cmp	r4, r2
 800cab6:	d1f9      	bne.n	800caac <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800cab8:	1c5a      	adds	r2, r3, #1
 800caba:	4411      	add	r1, r2
 800cabc:	f1be 0f00 	cmp.w	lr, #0
 800cac0:	d1e9      	bne.n	800ca96 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cac2:	181d      	adds	r5, r3, r0
 800cac4:	e7e7      	b.n	800ca96 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800cac6:	bf00      	nop
 800cac8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800cacc:	20009488 	andcs	r9, r0, r8, lsl #9

0800cad0 <MDNS::FindFirstDotFromRight(char const*) const>:
 800cad0:	b510      	push	{r4, lr}
 800cad2:	4608      	mov	r0, r1
 800cad4:	460c      	mov	r4, r1
 800cad6:	f7ff ff65 	bl	800c9a4 <strlen>
 800cada:	4420      	add	r0, r4
 800cadc:	42a0      	cmp	r0, r4
 800cade:	d903      	bls.n	800cae8 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800cae0:	f810 3901 	ldrb.w	r3, [r0], #-1
 800cae4:	2b2e      	cmp	r3, #46	; 0x2e
 800cae6:	d1f9      	bne.n	800cadc <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800cae8:	3001      	adds	r0, #1
 800caea:	bd10      	pop	{r4, pc}

0800caec <MDNS::WriteDnsName(char const*, char*, bool)>:
 800caec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caee:	4614      	mov	r4, r2
 800caf0:	460f      	mov	r7, r1
 800caf2:	1c60      	adds	r0, r4, #1
 800caf4:	463d      	mov	r5, r7
 800caf6:	f817 6b01 	ldrb.w	r6, [r7], #1
 800cafa:	b946      	cbnz	r6, 800cb0e <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800cafc:	1a69      	subs	r1, r5, r1
 800cafe:	7021      	strb	r1, [r4, #0]
 800cb00:	7829      	ldrb	r1, [r5, #0]
 800cb02:	b949      	cbnz	r1, 800cb18 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800cb04:	b10b      	cbz	r3, 800cb0a <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800cb06:	f800 1b01 	strb.w	r1, [r0], #1
 800cb0a:	1a80      	subs	r0, r0, r2
 800cb0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb0e:	2e2e      	cmp	r6, #46	; 0x2e
 800cb10:	d0f4      	beq.n	800cafc <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800cb12:	f800 6b01 	strb.w	r6, [r0], #1
 800cb16:	e7ed      	b.n	800caf4 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800cb18:	4604      	mov	r4, r0
 800cb1a:	1c69      	adds	r1, r5, #1
 800cb1c:	e7e8      	b.n	800caf0 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800cb20 <MDNS::CreateAnswerLocalIpAddress()>:
 800cb20:	2384      	movs	r3, #132	; 0x84
 800cb22:	b510      	push	{r4, lr}
 800cb24:	4c0f      	ldr	r4, [pc, #60]	; (800cb64 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800cb26:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800cb2a:	80e3      	strh	r3, [r4, #6]
 800cb2c:	2300      	movs	r3, #0
 800cb2e:	490e      	ldr	r1, [pc, #56]	; (800cb68 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800cb30:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800cb34:	6809      	ldr	r1, [r1, #0]
 800cb36:	f104 0210 	add.w	r2, r4, #16
 800cb3a:	2301      	movs	r3, #1
 800cb3c:	f7ff ffd6 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cb40:	490a      	ldr	r1, [pc, #40]	; (800cb6c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800cb42:	1813      	adds	r3, r2, r0
 800cb44:	5011      	str	r1, [r2, r0]
 800cb46:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800cb4a:	605a      	str	r2, [r3, #4]
 800cb4c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cb50:	811a      	strh	r2, [r3, #8]
 800cb52:	4a07      	ldr	r2, [pc, #28]	; (800cb70 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800cb54:	6812      	ldr	r2, [r2, #0]
 800cb56:	6912      	ldr	r2, [r2, #16]
 800cb58:	f8c3 200a 	str.w	r2, [r3, #10]
 800cb5c:	1b1b      	subs	r3, r3, r4
 800cb5e:	330a      	adds	r3, #10
 800cb60:	6023      	str	r3, [r4, #0]
 800cb62:	bd10      	pop	{r4, pc}
 800cb64:	20009058 	andcs	r9, r0, r8, asr r0
 800cb68:	20009484 	andcs	r9, r0, r4, lsl #9
 800cb6c:	01800100 	orreq	r0, r0, r0, lsl #2
 800cb70:	2000948c 	andcs	r9, r0, ip, lsl #9

0800cb74 <MDNS::Start()>:
 800cb74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb76:	4c1d      	ldr	r4, [pc, #116]	; (800cbec <MDNS::Start()+0x78>)
 800cb78:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800cb7c:	4605      	mov	r5, r0
 800cb7e:	6820      	ldr	r0, [r4, #0]
 800cb80:	f000 fb26 	bl	800d1d0 <Network::Begin(unsigned short)>
 800cb84:	4e1a      	ldr	r6, [pc, #104]	; (800cbf0 <MDNS::Start()+0x7c>)
 800cb86:	4f1b      	ldr	r7, [pc, #108]	; (800cbf4 <MDNS::Start()+0x80>)
 800cb88:	4601      	mov	r1, r0
 800cb8a:	6030      	str	r0, [r6, #0]
 800cb8c:	683a      	ldr	r2, [r7, #0]
 800cb8e:	6820      	ldr	r0, [r4, #0]
 800cb90:	f000 fb2f 	bl	800d1f2 <Network::JoinGroup(int, unsigned int)>
 800cb94:	4b18      	ldr	r3, [pc, #96]	; (800cbf8 <MDNS::Start()+0x84>)
 800cb96:	681b      	ldr	r3, [r3, #0]
 800cb98:	b923      	cbnz	r3, 800cba4 <MDNS::Start()+0x30>
 800cb9a:	6821      	ldr	r1, [r4, #0]
 800cb9c:	4628      	mov	r0, r5
 800cb9e:	311c      	adds	r1, #28
 800cba0:	f7ff ff38 	bl	800ca14 <MDNS::SetName(char const*)>
 800cba4:	4628      	mov	r0, r5
 800cba6:	f7ff ffbb 	bl	800cb20 <MDNS::CreateAnswerLocalIpAddress()>
 800cbaa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cbae:	4913      	ldr	r1, [pc, #76]	; (800cbfc <MDNS::Start()+0x88>)
 800cbb0:	7830      	ldrb	r0, [r6, #0]
 800cbb2:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cbb6:	9300      	str	r3, [sp, #0]
 800cbb8:	683b      	ldr	r3, [r7, #0]
 800cbba:	f7ff fe43 	bl	800c844 <udp_send>
 800cbbe:	233f      	movs	r3, #63	; 0x3f
 800cbc0:	6820      	ldr	r0, [r4, #0]
 800cbc2:	4c0f      	ldr	r4, [pc, #60]	; (800cc00 <MDNS::Start()+0x8c>)
 800cbc4:	f100 025c 	add.w	r2, r0, #92	; 0x5c
 800cbc8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800cbcc:	b929      	cbnz	r1, 800cbda <MDNS::Start()+0x66>
 800cbce:	4413      	add	r3, r2
 800cbd0:	429a      	cmp	r2, r3
 800cbd2:	d006      	beq.n	800cbe2 <MDNS::Start()+0x6e>
 800cbd4:	f802 1b01 	strb.w	r1, [r2], #1
 800cbd8:	e7fa      	b.n	800cbd0 <MDNS::Start()+0x5c>
 800cbda:	3b01      	subs	r3, #1
 800cbdc:	f802 1b01 	strb.w	r1, [r2], #1
 800cbe0:	d1f2      	bne.n	800cbc8 <MDNS::Start()+0x54>
 800cbe2:	2300      	movs	r3, #0
 800cbe4:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800cbe8:	b003      	add	sp, #12
 800cbea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbec:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cbf0:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cbf4:	20009054 	andcs	r9, r0, r4, asr r0
 800cbf8:	20009484 	andcs	r9, r0, r4, lsl #9
 800cbfc:	20009058 	andcs	r9, r0, r8, asr r0
 800cc00:	080124b0 	stmdaeq	r1, {r4, r5, r7, sl, sp}

0800cc04 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800cc04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc08:	4c1b      	ldr	r4, [pc, #108]	; (800cc78 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800cc0a:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800cc0e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800cc12:	2300      	movs	r3, #0
 800cc14:	f854 100c 	ldr.w	r1, [r4, ip]
 800cc18:	4607      	mov	r7, r0
 800cc1a:	f7ff ff67 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc1e:	2301      	movs	r3, #1
 800cc20:	7bac      	ldrb	r4, [r5, #14]
 800cc22:	4616      	mov	r6, r2
 800cc24:	4915      	ldr	r1, [pc, #84]	; (800cc7c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800cc26:	4402      	add	r2, r0
 800cc28:	4815      	ldr	r0, [pc, #84]	; (800cc80 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800cc2a:	429c      	cmp	r4, r3
 800cc2c:	bf18      	it	ne
 800cc2e:	4601      	movne	r1, r0
 800cc30:	4638      	mov	r0, r7
 800cc32:	f7ff ff5b 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc36:	4b13      	ldr	r3, [pc, #76]	; (800cc84 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800cc38:	1814      	adds	r4, r2, r0
 800cc3a:	5013      	str	r3, [r2, r0]
 800cc3c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cc40:	6063      	str	r3, [r4, #4]
 800cc42:	4b11      	ldr	r3, [pc, #68]	; (800cc88 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800cc44:	f8d3 8000 	ldr.w	r8, [r3]
 800cc48:	4640      	mov	r0, r8
 800cc4a:	f7ff feab 	bl	800c9a4 <strlen>
 800cc4e:	f100 0308 	add.w	r3, r0, #8
 800cc52:	ba5b      	rev16	r3, r3
 800cc54:	8123      	strh	r3, [r4, #8]
 800cc56:	2300      	movs	r3, #0
 800cc58:	f8c4 300a 	str.w	r3, [r4, #10]
 800cc5c:	89ab      	ldrh	r3, [r5, #12]
 800cc5e:	f104 0210 	add.w	r2, r4, #16
 800cc62:	ba5b      	rev16	r3, r3
 800cc64:	81e3      	strh	r3, [r4, #14]
 800cc66:	4641      	mov	r1, r8
 800cc68:	2301      	movs	r3, #1
 800cc6a:	4638      	mov	r0, r7
 800cc6c:	f7ff ff3e 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc70:	4410      	add	r0, r2
 800cc72:	1b80      	subs	r0, r0, r6
 800cc74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc78:	2000925c 	andcs	r9, r0, ip, asr r2
 800cc7c:	080124ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp}
 800cc80:	080124c9 	stmdaeq	r1, {r0, r3, r6, r7, sl, sp}
 800cc84:	01802100 	orreq	r2, r0, r0, lsl #2
 800cc88:	20009484 	andcs	r9, r0, r4, lsl #9

0800cc8c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cc8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc90:	4e19      	ldr	r6, [pc, #100]	; (800ccf8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cc92:	010f      	lsls	r7, r1, #4
 800cc94:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800cc98:	2300      	movs	r3, #0
 800cc9a:	59f1      	ldr	r1, [r6, r7]
 800cc9c:	4604      	mov	r4, r0
 800cc9e:	f7ff ff25 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cca2:	2301      	movs	r3, #1
 800cca4:	7bae      	ldrb	r6, [r5, #14]
 800cca6:	4690      	mov	r8, r2
 800cca8:	4914      	ldr	r1, [pc, #80]	; (800ccfc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800ccaa:	4402      	add	r2, r0
 800ccac:	4814      	ldr	r0, [pc, #80]	; (800cd00 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800ccae:	429e      	cmp	r6, r3
 800ccb0:	bf18      	it	ne
 800ccb2:	4601      	movne	r1, r0
 800ccb4:	4620      	mov	r0, r4
 800ccb6:	f7ff ff19 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccba:	4b12      	ldr	r3, [pc, #72]	; (800cd04 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800ccbc:	1816      	adds	r6, r2, r0
 800ccbe:	5013      	str	r3, [r2, r0]
 800ccc0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ccc4:	68a8      	ldr	r0, [r5, #8]
 800ccc6:	6073      	str	r3, [r6, #4]
 800ccc8:	f106 040b 	add.w	r4, r6, #11
 800cccc:	b938      	cbnz	r0, 800ccde <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800ccce:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ccd2:	72b0      	strb	r0, [r6, #10]
 800ccd4:	8133      	strh	r3, [r6, #8]
 800ccd6:	eba4 0008 	sub.w	r0, r4, r8
 800ccda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccde:	f7ff fe61 	bl	800c9a4 <strlen>
 800cce2:	4607      	mov	r7, r0
 800cce4:	1c43      	adds	r3, r0, #1
 800cce6:	72b0      	strb	r0, [r6, #10]
 800cce8:	ba5b      	rev16	r3, r3
 800ccea:	4620      	mov	r0, r4
 800ccec:	68a9      	ldr	r1, [r5, #8]
 800ccee:	8133      	strh	r3, [r6, #8]
 800ccf0:	f7ff fe6d 	bl	800c9ce <strcpy.isra.0>
 800ccf4:	443c      	add	r4, r7
 800ccf6:	e7ee      	b.n	800ccd6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800ccf8:	2000925c 	andcs	r9, r0, ip, asr r2
 800ccfc:	080124ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp}
 800cd00:	080124c9 	stmdaeq	r1, {r0, r3, r6, r7, sl, sp}
 800cd04:	01801000 	orreq	r1, r0, r0

0800cd08 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800cd08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cd0c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800cd70 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800cd10:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800cd14:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800cd18:	6869      	ldr	r1, [r5, #4]
 800cd1a:	2301      	movs	r3, #1
 800cd1c:	4607      	mov	r7, r0
 800cd1e:	f7ff fee5 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd22:	4b14      	ldr	r3, [pc, #80]	; (800cd74 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800cd24:	f858 8009 	ldr.w	r8, [r8, r9]
 800cd28:	5013      	str	r3, [r2, r0]
 800cd2a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd2e:	1816      	adds	r6, r2, r0
 800cd30:	6073      	str	r3, [r6, #4]
 800cd32:	4640      	mov	r0, r8
 800cd34:	4614      	mov	r4, r2
 800cd36:	f7ff fe35 	bl	800c9a4 <strlen>
 800cd3a:	f100 030d 	add.w	r3, r0, #13
 800cd3e:	ba5b      	rev16	r3, r3
 800cd40:	4641      	mov	r1, r8
 800cd42:	8133      	strh	r3, [r6, #8]
 800cd44:	f106 020a 	add.w	r2, r6, #10
 800cd48:	2300      	movs	r3, #0
 800cd4a:	4638      	mov	r0, r7
 800cd4c:	f7ff fece 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd50:	2301      	movs	r3, #1
 800cd52:	4402      	add	r2, r0
 800cd54:	7bad      	ldrb	r5, [r5, #14]
 800cd56:	4808      	ldr	r0, [pc, #32]	; (800cd78 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800cd58:	4908      	ldr	r1, [pc, #32]	; (800cd7c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800cd5a:	429d      	cmp	r5, r3
 800cd5c:	bf18      	it	ne
 800cd5e:	4601      	movne	r1, r0
 800cd60:	4638      	mov	r0, r7
 800cd62:	f7ff fec3 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd66:	4410      	add	r0, r2
 800cd68:	1b00      	subs	r0, r0, r4
 800cd6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cd6e:	bf00      	nop
 800cd70:	2000925c 	andcs	r9, r0, ip, asr r2
 800cd74:	01000c00 	tsteq	r0, r0, lsl #24
 800cd78:	080124c9 	stmdaeq	r1, {r0, r3, r6, r7, sl, sp}
 800cd7c:	080124ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp}

0800cd80 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800cd80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd82:	460f      	mov	r7, r1
 800cd84:	2301      	movs	r3, #1
 800cd86:	490f      	ldr	r1, [pc, #60]	; (800cdc4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800cd88:	4606      	mov	r6, r0
 800cd8a:	f7ff feaf 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd8e:	4b0e      	ldr	r3, [pc, #56]	; (800cdc8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800cd90:	490e      	ldr	r1, [pc, #56]	; (800cdcc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800cd92:	5013      	str	r3, [r2, r0]
 800cd94:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd98:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800cd9c:	684f      	ldr	r7, [r1, #4]
 800cd9e:	1815      	adds	r5, r2, r0
 800cda0:	606b      	str	r3, [r5, #4]
 800cda2:	4638      	mov	r0, r7
 800cda4:	4614      	mov	r4, r2
 800cda6:	f7ff fdfd 	bl	800c9a4 <strlen>
 800cdaa:	1c83      	adds	r3, r0, #2
 800cdac:	ba5b      	rev16	r3, r3
 800cdae:	812b      	strh	r3, [r5, #8]
 800cdb0:	f105 020a 	add.w	r2, r5, #10
 800cdb4:	2301      	movs	r3, #1
 800cdb6:	4639      	mov	r1, r7
 800cdb8:	4630      	mov	r0, r6
 800cdba:	f7ff fe97 	bl	800caec <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdbe:	4410      	add	r0, r2
 800cdc0:	1b00      	subs	r0, r0, r4
 800cdc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdc4:	080124b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, sp}
 800cdc8:	01000c00 	tsteq	r0, r0, lsl #24
 800cdcc:	2000925c 	andcs	r9, r0, ip, asr r2

0800cdd0 <MDNS::CreateMDNSMessage(unsigned int)>:
 800cdd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdd2:	2384      	movs	r3, #132	; 0x84
 800cdd4:	4d19      	ldr	r5, [pc, #100]	; (800ce3c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800cdd6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800cdda:	80eb      	strh	r3, [r5, #6]
 800cddc:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cde0:	f105 0410 	add.w	r4, r5, #16
 800cde4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800cde8:	4622      	mov	r2, r4
 800cdea:	4606      	mov	r6, r0
 800cdec:	460f      	mov	r7, r1
 800cdee:	f7ff ff09 	bl	800cc04 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800cdf2:	4404      	add	r4, r0
 800cdf4:	4622      	mov	r2, r4
 800cdf6:	4639      	mov	r1, r7
 800cdf8:	4630      	mov	r0, r6
 800cdfa:	f7ff ff47 	bl	800cc8c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800cdfe:	4404      	add	r4, r0
 800ce00:	4622      	mov	r2, r4
 800ce02:	4639      	mov	r1, r7
 800ce04:	4630      	mov	r0, r6
 800ce06:	f7ff ffbb 	bl	800cd80 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ce0a:	4404      	add	r4, r0
 800ce0c:	4622      	mov	r2, r4
 800ce0e:	4639      	mov	r1, r7
 800ce10:	4630      	mov	r0, r6
 800ce12:	f7ff ff79 	bl	800cd08 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800ce16:	4a0a      	ldr	r2, [pc, #40]	; (800ce40 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800ce18:	4404      	add	r4, r0
 800ce1a:	f852 3b10 	ldr.w	r3, [r2], #16
 800ce1e:	1e60      	subs	r0, r4, #1
 800ce20:	3b0c      	subs	r3, #12
 800ce22:	4619      	mov	r1, r3
 800ce24:	3901      	subs	r1, #1
 800ce26:	d204      	bcs.n	800ce32 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800ce28:	441c      	add	r4, r3
 800ce2a:	4b06      	ldr	r3, [pc, #24]	; (800ce44 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800ce2c:	1ae4      	subs	r4, r4, r3
 800ce2e:	602c      	str	r4, [r5, #0]
 800ce30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce32:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ce36:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ce3a:	e7f3      	b.n	800ce24 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800ce3c:	20009280 	andcs	r9, r0, r0, lsl #5
 800ce40:	20009058 	andcs	r9, r0, r8, asr r0
 800ce44:	20009284 	andcs	r9, r0, r4, lsl #5

0800ce48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800ce48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce4c:	4d40      	ldr	r5, [pc, #256]	; (800cf50 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ce4e:	b085      	sub	sp, #20
 800ce50:	682c      	ldr	r4, [r5, #0]
 800ce52:	4680      	mov	r8, r0
 800ce54:	460f      	mov	r7, r1
 800ce56:	4616      	mov	r6, r2
 800ce58:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800ce5c:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800ce60:	b11c      	cbz	r4, 800ce6a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800ce62:	692a      	ldr	r2, [r5, #16]
 800ce64:	2a00      	cmp	r2, #0
 800ce66:	d16e      	bne.n	800cf46 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800ce68:	2401      	movs	r4, #1
 800ce6a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800ce6e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800ce72:	8193      	strh	r3, [r2, #12]
 800ce74:	f882 b00e 	strb.w	fp, [r2, #14]
 800ce78:	2f00      	cmp	r7, #0
 800ce7a:	d154      	bne.n	800cf26 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800ce7c:	4b35      	ldr	r3, [pc, #212]	; (800cf54 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ce7e:	6818      	ldr	r0, [r3, #0]
 800ce80:	301c      	adds	r0, #28
 800ce82:	f7ff fd8f 	bl	800c9a4 <strlen>
 800ce86:	4607      	mov	r7, r0
 800ce88:	4630      	mov	r0, r6
 800ce8a:	f7ff fd8b 	bl	800c9a4 <strlen>
 800ce8e:	4438      	add	r0, r7
 800ce90:	3001      	adds	r0, #1
 800ce92:	f001 ffaf 	bl	800edf4 <operator new[](unsigned int)>
 800ce96:	4b2f      	ldr	r3, [pc, #188]	; (800cf54 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800ce98:	f845 0009 	str.w	r0, [r5, r9]
 800ce9c:	6819      	ldr	r1, [r3, #0]
 800ce9e:	311c      	adds	r1, #28
 800cea0:	f7ff fd95 	bl	800c9ce <strcpy.isra.0>
 800cea4:	f855 0009 	ldr.w	r0, [r5, r9]
 800cea8:	4631      	mov	r1, r6
 800ceaa:	f7ff fd98 	bl	800c9de <strcat.isra.0>
 800ceae:	4631      	mov	r1, r6
 800ceb0:	4640      	mov	r0, r8
 800ceb2:	f7ff fe0d 	bl	800cad0 <MDNS::FindFirstDotFromRight(char const*) const>
 800ceb6:	eb05 0709 	add.w	r7, r5, r9
 800ceba:	4605      	mov	r5, r0
 800cebc:	f7ff fd72 	bl	800c9a4 <strlen>
 800cec0:	300d      	adds	r0, #13
 800cec2:	f001 ff97 	bl	800edf4 <operator new[](unsigned int)>
 800cec6:	4629      	mov	r1, r5
 800cec8:	6078      	str	r0, [r7, #4]
 800ceca:	f7ff fd80 	bl	800c9ce <strcpy.isra.0>
 800cece:	4922      	ldr	r1, [pc, #136]	; (800cf58 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800ced0:	6878      	ldr	r0, [r7, #4]
 800ced2:	f7ff fd84 	bl	800c9de <strcat.isra.0>
 800ced6:	4921      	ldr	r1, [pc, #132]	; (800cf5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ced8:	4b21      	ldr	r3, [pc, #132]	; (800cf60 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800ceda:	6878      	ldr	r0, [r7, #4]
 800cedc:	f1bb 0f01 	cmp.w	fp, #1
 800cee0:	bf18      	it	ne
 800cee2:	4619      	movne	r1, r3
 800cee4:	f7ff fd7b 	bl	800c9de <strcat.isra.0>
 800cee8:	f1ba 0f00 	cmp.w	sl, #0
 800ceec:	d009      	beq.n	800cf02 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800ceee:	4650      	mov	r0, sl
 800cef0:	f7ff fd58 	bl	800c9a4 <strlen>
 800cef4:	3001      	adds	r0, #1
 800cef6:	f001 ff7d 	bl	800edf4 <operator new[](unsigned int)>
 800cefa:	4651      	mov	r1, sl
 800cefc:	60b8      	str	r0, [r7, #8]
 800cefe:	f7ff fd66 	bl	800c9ce <strcpy.isra.0>
 800cf02:	4621      	mov	r1, r4
 800cf04:	4640      	mov	r0, r8
 800cf06:	f7ff ff63 	bl	800cdd0 <MDNS::CreateMDNSMessage(unsigned int)>
 800cf0a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cf0e:	4915      	ldr	r1, [pc, #84]	; (800cf64 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cf10:	4815      	ldr	r0, [pc, #84]	; (800cf68 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800cf12:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cf16:	9300      	str	r3, [sp, #0]
 800cf18:	4b14      	ldr	r3, [pc, #80]	; (800cf6c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800cf1a:	7800      	ldrb	r0, [r0, #0]
 800cf1c:	681b      	ldr	r3, [r3, #0]
 800cf1e:	f7ff fc91 	bl	800c844 <udp_send>
 800cf22:	2001      	movs	r0, #1
 800cf24:	e010      	b.n	800cf48 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800cf26:	4638      	mov	r0, r7
 800cf28:	f7ff fd3c 	bl	800c9a4 <strlen>
 800cf2c:	9003      	str	r0, [sp, #12]
 800cf2e:	4630      	mov	r0, r6
 800cf30:	f7ff fd38 	bl	800c9a4 <strlen>
 800cf34:	9b03      	ldr	r3, [sp, #12]
 800cf36:	4418      	add	r0, r3
 800cf38:	3001      	adds	r0, #1
 800cf3a:	f001 ff5b 	bl	800edf4 <operator new[](unsigned int)>
 800cf3e:	4639      	mov	r1, r7
 800cf40:	f845 0009 	str.w	r0, [r5, r9]
 800cf44:	e7ac      	b.n	800cea0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800cf46:	2000      	movs	r0, #0
 800cf48:	b005      	add	sp, #20
 800cf4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf4e:	bf00      	nop
 800cf50:	2000925c 	andcs	r9, r0, ip, asr r2
 800cf54:	2000948c 	andcs	r9, r0, ip, lsl #9
 800cf58:	08011583 	stmdaeq	r1, {r0, r1, r7, r8, sl, ip}
 800cf5c:	080124ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, sp}
 800cf60:	080124c9 	stmdaeq	r1, {r0, r3, r6, r7, sl, sp}
 800cf64:	20009280 	andcs	r9, r0, r0, lsl #5
 800cf68:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cf6c:	20009054 	andcs	r9, r0, r4, asr r0

0800cf70 <MDNS::HandleRequest(unsigned short)>:
 800cf70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf74:	4605      	mov	r5, r0
 800cf76:	2700      	movs	r7, #0
 800cf78:	f04f 080c 	mov.w	r8, #12
 800cf7c:	b0c5      	sub	sp, #276	; 0x114
 800cf7e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800d040 <MDNS::HandleRequest(unsigned short)+0xd0>
 800cf82:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800d044 <MDNS::HandleRequest(unsigned short)+0xd4>
 800cf86:	9103      	str	r1, [sp, #12]
 800cf88:	9b03      	ldr	r3, [sp, #12]
 800cf8a:	42bb      	cmp	r3, r7
 800cf8c:	d802      	bhi.n	800cf94 <MDNS::HandleRequest(unsigned short)+0x24>
 800cf8e:	b045      	add	sp, #276	; 0x114
 800cf90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf94:	f8da 1000 	ldr.w	r1, [sl]
 800cf98:	aa04      	add	r2, sp, #16
 800cf9a:	4441      	add	r1, r8
 800cf9c:	4628      	mov	r0, r5
 800cf9e:	f7ff fd55 	bl	800ca4c <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800cfa2:	f8da 2000 	ldr.w	r2, [sl]
 800cfa6:	4440      	add	r0, r8
 800cfa8:	1813      	adds	r3, r2, r0
 800cfaa:	885b      	ldrh	r3, [r3, #2]
 800cfac:	f100 0804 	add.w	r8, r0, #4
 800cfb0:	ba5b      	rev16	r3, r3
 800cfb2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800cfb6:	2b01      	cmp	r3, #1
 800cfb8:	d13d      	bne.n	800d036 <MDNS::HandleRequest(unsigned short)+0xc6>
 800cfba:	5a14      	ldrh	r4, [r2, r0]
 800cfbc:	4b22      	ldr	r3, [pc, #136]	; (800d048 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800cfbe:	ba64      	rev16	r4, r4
 800cfc0:	6818      	ldr	r0, [r3, #0]
 800cfc2:	a904      	add	r1, sp, #16
 800cfc4:	b2a4      	uxth	r4, r4
 800cfc6:	f7ff fcf5 	bl	800c9b4 <strcmp>
 800cfca:	b968      	cbnz	r0, 800cfe8 <MDNS::HandleRequest(unsigned short)+0x78>
 800cfcc:	2c01      	cmp	r4, #1
 800cfce:	d10b      	bne.n	800cfe8 <MDNS::HandleRequest(unsigned short)+0x78>
 800cfd0:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cfd4:	491d      	ldr	r1, [pc, #116]	; (800d04c <MDNS::HandleRequest(unsigned short)+0xdc>)
 800cfd6:	481e      	ldr	r0, [pc, #120]	; (800d050 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800cfd8:	f831 2b04 	ldrh.w	r2, [r1], #4
 800cfdc:	9300      	str	r3, [sp, #0]
 800cfde:	4b1d      	ldr	r3, [pc, #116]	; (800d054 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800cfe0:	7800      	ldrb	r0, [r0, #0]
 800cfe2:	681b      	ldr	r3, [r3, #0]
 800cfe4:	f7ff fc2e 	bl	800c844 <udp_send>
 800cfe8:	481b      	ldr	r0, [pc, #108]	; (800d058 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800cfea:	a904      	add	r1, sp, #16
 800cfec:	f7ff fce2 	bl	800c9b4 <strcmp>
 800cff0:	f04f 0900 	mov.w	r9, #0
 800cff4:	4e19      	ldr	r6, [pc, #100]	; (800d05c <MDNS::HandleRequest(unsigned short)+0xec>)
 800cff6:	9002      	str	r0, [sp, #8]
 800cff8:	6833      	ldr	r3, [r6, #0]
 800cffa:	b1c3      	cbz	r3, 800d02e <MDNS::HandleRequest(unsigned short)+0xbe>
 800cffc:	9b02      	ldr	r3, [sp, #8]
 800cffe:	b123      	cbz	r3, 800d00a <MDNS::HandleRequest(unsigned short)+0x9a>
 800d000:	6870      	ldr	r0, [r6, #4]
 800d002:	a904      	add	r1, sp, #16
 800d004:	f7ff fcd6 	bl	800c9b4 <strcmp>
 800d008:	b988      	cbnz	r0, 800d02e <MDNS::HandleRequest(unsigned short)+0xbe>
 800d00a:	2c0c      	cmp	r4, #12
 800d00c:	d10f      	bne.n	800d02e <MDNS::HandleRequest(unsigned short)+0xbe>
 800d00e:	4649      	mov	r1, r9
 800d010:	4628      	mov	r0, r5
 800d012:	f7ff fedd 	bl	800cdd0 <MDNS::CreateMDNSMessage(unsigned int)>
 800d016:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d01a:	480d      	ldr	r0, [pc, #52]	; (800d050 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800d01c:	9300      	str	r3, [sp, #0]
 800d01e:	4b0d      	ldr	r3, [pc, #52]	; (800d054 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d020:	f8bb 2000 	ldrh.w	r2, [fp]
 800d024:	681b      	ldr	r3, [r3, #0]
 800d026:	490e      	ldr	r1, [pc, #56]	; (800d060 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800d028:	7800      	ldrb	r0, [r0, #0]
 800d02a:	f7ff fc0b 	bl	800c844 <udp_send>
 800d02e:	3610      	adds	r6, #16
 800d030:	f1b9 0f00 	cmp.w	r9, #0
 800d034:	d001      	beq.n	800d03a <MDNS::HandleRequest(unsigned short)+0xca>
 800d036:	3701      	adds	r7, #1
 800d038:	e7a6      	b.n	800cf88 <MDNS::HandleRequest(unsigned short)+0x18>
 800d03a:	f04f 0901 	mov.w	r9, #1
 800d03e:	e7db      	b.n	800cff8 <MDNS::HandleRequest(unsigned short)+0x88>
 800d040:	20009488 	andcs	r9, r0, r8, lsl #9
 800d044:	20009280 	andcs	r9, r0, r0, lsl #5
 800d048:	20009484 	andcs	r9, r0, r4, lsl #9
 800d04c:	20009058 	andcs	r9, r0, r8, asr r0
 800d050:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d054:	20009054 	andcs	r9, r0, r4, asr r0
 800d058:	080124b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, sp}
 800d05c:	2000925c 	andcs	r9, r0, ip, asr r2
 800d060:	20009284 	andcs	r9, r0, r4, lsl #5

0800d064 <MDNS::Parse()>:
 800d064:	4b08      	ldr	r3, [pc, #32]	; (800d088 <MDNS::Parse()+0x24>)
 800d066:	681a      	ldr	r2, [r3, #0]
 800d068:	8853      	ldrh	r3, [r2, #2]
 800d06a:	ba5b      	rev16	r3, r3
 800d06c:	b299      	uxth	r1, r3
 800d06e:	041b      	lsls	r3, r3, #16
 800d070:	d408      	bmi.n	800d084 <MDNS::Parse()+0x20>
 800d072:	0b89      	lsrs	r1, r1, #14
 800d074:	d106      	bne.n	800d084 <MDNS::Parse()+0x20>
 800d076:	8891      	ldrh	r1, [r2, #4]
 800d078:	b28b      	uxth	r3, r1
 800d07a:	b11b      	cbz	r3, 800d084 <MDNS::Parse()+0x20>
 800d07c:	ba49      	rev16	r1, r1
 800d07e:	b289      	uxth	r1, r1
 800d080:	f7ff bf76 	b.w	800cf70 <MDNS::HandleRequest(unsigned short)>
 800d084:	4770      	bx	lr
 800d086:	bf00      	nop
 800d088:	20009488 	andcs	r9, r0, r8, lsl #9

0800d08c <MDNS::Run()>:
 800d08c:	b538      	push	{r3, r4, r5, lr}
 800d08e:	4d0c      	ldr	r5, [pc, #48]	; (800d0c0 <MDNS::Run()+0x34>)
 800d090:	4604      	mov	r4, r0
 800d092:	480c      	ldr	r0, [pc, #48]	; (800d0c4 <MDNS::Run()+0x38>)
 800d094:	462b      	mov	r3, r5
 800d096:	4a0c      	ldr	r2, [pc, #48]	; (800d0c8 <MDNS::Run()+0x3c>)
 800d098:	490c      	ldr	r1, [pc, #48]	; (800d0cc <MDNS::Run()+0x40>)
 800d09a:	7800      	ldrb	r0, [r0, #0]
 800d09c:	f7ff fbac 	bl	800c7f8 <udp_recv2>
 800d0a0:	4b0b      	ldr	r3, [pc, #44]	; (800d0d0 <MDNS::Run()+0x44>)
 800d0a2:	882a      	ldrh	r2, [r5, #0]
 800d0a4:	8018      	strh	r0, [r3, #0]
 800d0a6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d0aa:	429a      	cmp	r2, r3
 800d0ac:	d106      	bne.n	800d0bc <MDNS::Run()+0x30>
 800d0ae:	280c      	cmp	r0, #12
 800d0b0:	d904      	bls.n	800d0bc <MDNS::Run()+0x30>
 800d0b2:	4620      	mov	r0, r4
 800d0b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d0b8:	f7ff bfd4 	b.w	800d064 <MDNS::Parse()>
 800d0bc:	bd38      	pop	{r3, r4, r5, pc}
 800d0be:	bf00      	nop
 800d0c0:	20009050 	andcs	r9, r0, r0, asr r0
 800d0c4:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d0c8:	2000904c 	andcs	r9, r0, ip, asr #32
 800d0cc:	20009488 	andcs	r9, r0, r8, lsl #9
 800d0d0:	2000927c 	andcs	r9, r0, ip, ror r2

0800d0d4 <MDNS::Print()>:
 800d0d4:	b510      	push	{r4, lr}
 800d0d6:	4816      	ldr	r0, [pc, #88]	; (800d130 <MDNS::Print()+0x5c>)
 800d0d8:	f7fb fba0 	bl	800881c <printf>
 800d0dc:	4b15      	ldr	r3, [pc, #84]	; (800d134 <MDNS::Print()+0x60>)
 800d0de:	681b      	ldr	r3, [r3, #0]
 800d0e0:	3301      	adds	r3, #1
 800d0e2:	d104      	bne.n	800d0ee <MDNS::Print()+0x1a>
 800d0e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0e8:	4813      	ldr	r0, [pc, #76]	; (800d138 <MDNS::Print()+0x64>)
 800d0ea:	f7fb bb97 	b.w	800881c <printf>
 800d0ee:	4b13      	ldr	r3, [pc, #76]	; (800d13c <MDNS::Print()+0x68>)
 800d0f0:	4c13      	ldr	r4, [pc, #76]	; (800d140 <MDNS::Print()+0x6c>)
 800d0f2:	6819      	ldr	r1, [r3, #0]
 800d0f4:	4813      	ldr	r0, [pc, #76]	; (800d144 <MDNS::Print()+0x70>)
 800d0f6:	f7fb fb91 	bl	800881c <printf>
 800d0fa:	6823      	ldr	r3, [r4, #0]
 800d0fc:	b14b      	cbz	r3, 800d112 <MDNS::Print()+0x3e>
 800d0fe:	4a12      	ldr	r2, [pc, #72]	; (800d148 <MDNS::Print()+0x74>)
 800d100:	68a3      	ldr	r3, [r4, #8]
 800d102:	6861      	ldr	r1, [r4, #4]
 800d104:	2b00      	cmp	r3, #0
 800d106:	bf08      	it	eq
 800d108:	4613      	moveq	r3, r2
 800d10a:	4810      	ldr	r0, [pc, #64]	; (800d14c <MDNS::Print()+0x78>)
 800d10c:	89a2      	ldrh	r2, [r4, #12]
 800d10e:	f7fb fb85 	bl	800881c <printf>
 800d112:	6923      	ldr	r3, [r4, #16]
 800d114:	b15b      	cbz	r3, 800d12e <MDNS::Print()+0x5a>
 800d116:	69a3      	ldr	r3, [r4, #24]
 800d118:	4a0b      	ldr	r2, [pc, #44]	; (800d148 <MDNS::Print()+0x74>)
 800d11a:	6961      	ldr	r1, [r4, #20]
 800d11c:	2b00      	cmp	r3, #0
 800d11e:	bf08      	it	eq
 800d120:	4613      	moveq	r3, r2
 800d122:	480a      	ldr	r0, [pc, #40]	; (800d14c <MDNS::Print()+0x78>)
 800d124:	8ba2      	ldrh	r2, [r4, #28]
 800d126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d12a:	f7fb bb77 	b.w	800881c <printf>
 800d12e:	bd10      	pop	{r4, pc}
 800d130:	080124d4 	stmdaeq	r1, {r2, r4, r6, r7, sl, sp}
 800d134:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d138:	080124da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, sp}
 800d13c:	20009484 	andcs	r9, r0, r4, lsl #9
 800d140:	2000925c 	andcs	r9, r0, ip, asr r2
 800d144:	080124e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, sp}
 800d148:	0801187b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, fp, ip}
 800d14c:	080124f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, sp}

0800d150 <strncpy.constprop.0.isra.0>:
 800d150:	233f      	movs	r3, #63	; 0x3f
 800d152:	3901      	subs	r1, #1
 800d154:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d158:	b92a      	cbnz	r2, 800d166 <strncpy.constprop.0.isra.0+0x16>
 800d15a:	4403      	add	r3, r0
 800d15c:	4298      	cmp	r0, r3
 800d15e:	d006      	beq.n	800d16e <strncpy.constprop.0.isra.0+0x1e>
 800d160:	f800 2b01 	strb.w	r2, [r0], #1
 800d164:	e7fa      	b.n	800d15c <strncpy.constprop.0.isra.0+0xc>
 800d166:	3b01      	subs	r3, #1
 800d168:	f800 2b01 	strb.w	r2, [r0], #1
 800d16c:	d1f2      	bne.n	800d154 <strncpy.constprop.0.isra.0+0x4>
 800d16e:	4770      	bx	lr

0800d170 <Network::Network()>:
 800d170:	4a11      	ldr	r2, [pc, #68]	; (800d1b8 <Network::Network()+0x48>)
 800d172:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800d176:	6010      	str	r0, [r2, #0]
 800d178:	2201      	movs	r2, #1
 800d17a:	2300      	movs	r3, #0
 800d17c:	e9c0 1200 	strd	r1, r2, [r0]
 800d180:	2200      	movs	r2, #0
 800d182:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800d186:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d18a:	490c      	ldr	r1, [pc, #48]	; (800d1bc <Network::Network()+0x4c>)
 800d18c:	60c2      	str	r2, [r0, #12]
 800d18e:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800d192:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800d196:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800d19a:	6083      	str	r3, [r0, #8]
 800d19c:	6183      	str	r3, [r0, #24]
 800d19e:	7703      	strb	r3, [r0, #28]
 800d1a0:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800d1a4:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800d1a8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d1ac:	f802 3b01 	strb.w	r3, [r2], #1
 800d1b0:	2b00      	cmp	r3, #0
 800d1b2:	d1f9      	bne.n	800d1a8 <Network::Network()+0x38>
 800d1b4:	4770      	bx	lr
 800d1b6:	bf00      	nop
 800d1b8:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d1bc:	080124ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, sl, sp}

0800d1c0 <Network::Shutdown()>:
 800d1c0:	b508      	push	{r3, lr}
 800d1c2:	30b8      	adds	r0, #184	; 0xb8
 800d1c4:	f7fb f930 	bl	8008428 <NetworkDisplay::ShowShutdown()>
 800d1c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d1cc:	f7fa b810 	b.w	80071f0 <net_shutdown>

0800d1d0 <Network::Begin(unsigned short)>:
 800d1d0:	4608      	mov	r0, r1
 800d1d2:	f7ff baa1 	b.w	800c718 <udp_bind>

0800d1d6 <Network::End(unsigned short)>:
 800d1d6:	4608      	mov	r0, r1
 800d1d8:	f7ff bab8 	b.w	800c74c <udp_unbind>

0800d1dc <Network::MacAddressCopyTo(unsigned char*)>:
 800d1dc:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800d1e0:	3901      	subs	r1, #1
 800d1e2:	30a2      	adds	r0, #162	; 0xa2
 800d1e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d1e8:	4283      	cmp	r3, r0
 800d1ea:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d1ee:	d1f9      	bne.n	800d1e4 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d1f0:	4770      	bx	lr

0800d1f2 <Network::JoinGroup(int, unsigned int)>:
 800d1f2:	4610      	mov	r0, r2
 800d1f4:	f000 bef6 	b.w	800dfe4 <igmp_join>

0800d1f8 <Network::SetDefaultIp()>:
 800d1f8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d1fc:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800d200:	041b      	lsls	r3, r3, #16
 800d202:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d206:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800d20a:	3302      	adds	r3, #2
 800d20c:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d210:	22ff      	movs	r2, #255	; 0xff
 800d212:	6103      	str	r3, [r0, #16]
 800d214:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800d218:	4770      	bx	lr
	...

0800d21c <Network::Init(NetworkParamsStore*)>:
 800d21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d220:	b08b      	sub	sp, #44	; 0x2c
 800d222:	4604      	mov	r4, r0
 800d224:	a806      	add	r0, sp, #24
 800d226:	f000 f9b5 	bl	800d594 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d22a:	a806      	add	r0, sp, #24
 800d22c:	f000 f9c2 	bl	800d5b4 <NetworkParams::Load()>
 800d230:	b110      	cbz	r0, 800d238 <Network::Init(NetworkParamsStore*)+0x1c>
 800d232:	a806      	add	r0, sp, #24
 800d234:	f000 fba9 	bl	800d98a <NetworkParams::Dump()>
 800d238:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800d23c:	f8df 822c 	ldr.w	r8, [pc, #556]	; 800d46c <Network::Init(NetworkParamsStore*)+0x250>
 800d240:	4628      	mov	r0, r5
 800d242:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800d246:	f7fb f8ed 	bl	8008424 <NetworkDisplay::ShowEmacStart()>
 800d24a:	4638      	mov	r0, r7
 800d24c:	f002 fd8e 	bl	800fd6c <emac_start>
 800d250:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d254:	f104 061c 	add.w	r6, r4, #28
 800d258:	9307      	str	r3, [sp, #28]
 800d25a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d25e:	9308      	str	r3, [sp, #32]
 800d260:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d264:	9309      	str	r3, [sp, #36]	; 0x24
 800d266:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d26a:	7063      	strb	r3, [r4, #1]
 800d26c:	f8d8 3000 	ldr.w	r3, [r8]
 800d270:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d274:	bf18      	it	ne
 800d276:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800d27a:	061b      	lsls	r3, r3, #24
 800d27c:	bf58      	it	pl
 800d27e:	2300      	movpl	r3, #0
 800d280:	60a2      	str	r2, [r4, #8]
 800d282:	bf48      	it	mi
 800d284:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800d288:	60e3      	str	r3, [r4, #12]
 800d28a:	f898 3015 	ldrb.w	r3, [r8, #21]
 800d28e:	2b00      	cmp	r3, #0
 800d290:	f040 80bc 	bne.w	800d40c <Network::Init(NetworkParamsStore*)+0x1f0>
 800d294:	4630      	mov	r0, r6
 800d296:	4976      	ldr	r1, [pc, #472]	; (800d470 <Network::Init(NetworkParamsStore*)+0x254>)
 800d298:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d29c:	f103 0c01 	add.w	ip, r3, #1
 800d2a0:	2a00      	cmp	r2, #0
 800d2a2:	f040 80af 	bne.w	800d404 <Network::Init(NetworkParamsStore*)+0x1e8>
 800d2a6:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800d2aa:	18e1      	adds	r1, r4, r3
 800d2ac:	0910      	lsrs	r0, r2, #4
 800d2ae:	2a9f      	cmp	r2, #159	; 0x9f
 800d2b0:	f002 020f 	and.w	r2, r2, #15
 800d2b4:	bf94      	ite	ls
 800d2b6:	3030      	addls	r0, #48	; 0x30
 800d2b8:	3037      	addhi	r0, #55	; 0x37
 800d2ba:	2a09      	cmp	r2, #9
 800d2bc:	bf94      	ite	ls
 800d2be:	3230      	addls	r2, #48	; 0x30
 800d2c0:	3237      	addhi	r2, #55	; 0x37
 800d2c2:	44a4      	add	ip, r4
 800d2c4:	7708      	strb	r0, [r1, #28]
 800d2c6:	f88c 201c 	strb.w	r2, [ip, #28]
 800d2ca:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800d2ce:	f103 0e02 	add.w	lr, r3, #2
 800d2d2:	0910      	lsrs	r0, r2, #4
 800d2d4:	2a9f      	cmp	r2, #159	; 0x9f
 800d2d6:	f002 020f 	and.w	r2, r2, #15
 800d2da:	bf94      	ite	ls
 800d2dc:	3030      	addls	r0, #48	; 0x30
 800d2de:	3037      	addhi	r0, #55	; 0x37
 800d2e0:	f103 0903 	add.w	r9, r3, #3
 800d2e4:	2a09      	cmp	r2, #9
 800d2e6:	44a6      	add	lr, r4
 800d2e8:	f88e 001c 	strb.w	r0, [lr, #28]
 800d2ec:	bf94      	ite	ls
 800d2ee:	3230      	addls	r2, #48	; 0x30
 800d2f0:	3237      	addhi	r2, #55	; 0x37
 800d2f2:	eb04 0009 	add.w	r0, r4, r9
 800d2f6:	7702      	strb	r2, [r0, #28]
 800d2f8:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d2fc:	f103 0c04 	add.w	ip, r3, #4
 800d300:	0910      	lsrs	r0, r2, #4
 800d302:	2a9f      	cmp	r2, #159	; 0x9f
 800d304:	f002 020f 	and.w	r2, r2, #15
 800d308:	bf94      	ite	ls
 800d30a:	3030      	addls	r0, #48	; 0x30
 800d30c:	3037      	addhi	r0, #55	; 0x37
 800d30e:	3305      	adds	r3, #5
 800d310:	2a09      	cmp	r2, #9
 800d312:	4423      	add	r3, r4
 800d314:	44a4      	add	ip, r4
 800d316:	bf94      	ite	ls
 800d318:	3230      	addls	r2, #48	; 0x30
 800d31a:	3237      	addhi	r2, #55	; 0x37
 800d31c:	f88c 001c 	strb.w	r0, [ip, #28]
 800d320:	771a      	strb	r2, [r3, #28]
 800d322:	2300      	movs	r3, #0
 800d324:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800d328:	7863      	ldrb	r3, [r4, #1]
 800d32a:	2b00      	cmp	r3, #0
 800d32c:	f040 8098 	bne.w	800d460 <Network::Init(NetworkParamsStore*)+0x244>
 800d330:	9b07      	ldr	r3, [sp, #28]
 800d332:	2b00      	cmp	r3, #0
 800d334:	d172      	bne.n	800d41c <Network::Init(NetworkParamsStore*)+0x200>
 800d336:	4620      	mov	r0, r4
 800d338:	f7ff ff5e 	bl	800d1f8 <Network::SetDefaultIp()>
 800d33c:	6923      	ldr	r3, [r4, #16]
 800d33e:	69a2      	ldr	r2, [r4, #24]
 800d340:	9307      	str	r3, [sp, #28]
 800d342:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800d346:	1ce3      	adds	r3, r4, #3
 800d348:	f104 0901 	add.w	r9, r4, #1
 800d34c:	9302      	str	r3, [sp, #8]
 800d34e:	9300      	str	r3, [sp, #0]
 800d350:	4632      	mov	r2, r6
 800d352:	464b      	mov	r3, r9
 800d354:	4638      	mov	r0, r7
 800d356:	a907      	add	r1, sp, #28
 800d358:	f7f9 fefa 	bl	8007150 <net_init>
 800d35c:	78e3      	ldrb	r3, [r4, #3]
 800d35e:	b11b      	cbz	r3, 800d368 <Network::Init(NetworkParamsStore*)+0x14c>
 800d360:	2104      	movs	r1, #4
 800d362:	4628      	mov	r0, r5
 800d364:	f7fb f861 	bl	800842a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d368:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d36c:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800d370:	9304      	str	r3, [sp, #16]
 800d372:	233c      	movs	r3, #60	; 0x3c
 800d374:	fb03 f30a 	mul.w	r3, r3, sl
 800d378:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 800d474 <Network::Init(NetworkParamsStore*)+0x258>
 800d37c:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 800d478 <Network::Init(NetworkParamsStore*)+0x25c>
 800d380:	9303      	str	r3, [sp, #12]
 800d382:	78e3      	ldrb	r3, [r4, #3]
 800d384:	b393      	cbz	r3, 800d3ec <Network::Init(NetworkParamsStore*)+0x1d0>
 800d386:	f1ba 0f00 	cmp.w	sl, #0
 800d38a:	d02f      	beq.n	800d3ec <Network::Init(NetworkParamsStore*)+0x1d0>
 800d38c:	9b04      	ldr	r3, [sp, #16]
 800d38e:	b36b      	cbz	r3, 800d3ec <Network::Init(NetworkParamsStore*)+0x1d0>
 800d390:	2104      	movs	r1, #4
 800d392:	f8d8 0000 	ldr.w	r0, [r8]
 800d396:	f001 fc61 	bl	800ec5c <LedBlink::SetMode(ledblink::Mode)>
 800d39a:	2103      	movs	r1, #3
 800d39c:	4628      	mov	r0, r5
 800d39e:	f7fb f844 	bl	800842a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d3a2:	2000      	movs	r0, #0
 800d3a4:	f001 ff02 	bl	800f1ac <time>
 800d3a8:	9005      	str	r0, [sp, #20]
 800d3aa:	2000      	movs	r0, #0
 800d3ac:	f001 fefe 	bl	800f1ac <time>
 800d3b0:	9b05      	ldr	r3, [sp, #20]
 800d3b2:	4932      	ldr	r1, [pc, #200]	; (800d47c <Network::Init(NetworkParamsStore*)+0x260>)
 800d3b4:	1ac0      	subs	r0, r0, r3
 800d3b6:	9b03      	ldr	r3, [sp, #12]
 800d3b8:	4298      	cmp	r0, r3
 800d3ba:	db37      	blt.n	800d42c <Network::Init(NetworkParamsStore*)+0x210>
 800d3bc:	2101      	movs	r1, #1
 800d3be:	4628      	mov	r0, r5
 800d3c0:	f7fb f833 	bl	800842a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d3c4:	2101      	movs	r1, #1
 800d3c6:	f8d8 0000 	ldr.w	r0, [r8]
 800d3ca:	f001 fc47 	bl	800ec5c <LedBlink::SetMode(ledblink::Mode)>
 800d3ce:	2301      	movs	r3, #1
 800d3d0:	7063      	strb	r3, [r4, #1]
 800d3d2:	2300      	movs	r3, #0
 800d3d4:	70e3      	strb	r3, [r4, #3]
 800d3d6:	9b02      	ldr	r3, [sp, #8]
 800d3d8:	4632      	mov	r2, r6
 800d3da:	9300      	str	r3, [sp, #0]
 800d3dc:	4638      	mov	r0, r7
 800d3de:	464b      	mov	r3, r9
 800d3e0:	a907      	add	r1, sp, #28
 800d3e2:	f7f9 feb5 	bl	8007150 <net_init>
 800d3e6:	7863      	ldrb	r3, [r4, #1]
 800d3e8:	2b00      	cmp	r3, #0
 800d3ea:	d0ca      	beq.n	800d382 <Network::Init(NetworkParamsStore*)+0x166>
 800d3ec:	9b07      	ldr	r3, [sp, #28]
 800d3ee:	4628      	mov	r0, r5
 800d3f0:	6123      	str	r3, [r4, #16]
 800d3f2:	9b08      	ldr	r3, [sp, #32]
 800d3f4:	61a3      	str	r3, [r4, #24]
 800d3f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d3f8:	6163      	str	r3, [r4, #20]
 800d3fa:	f7fb f814 	bl	8008426 <NetworkDisplay::ShowIp()>
 800d3fe:	b00b      	add	sp, #44	; 0x2c
 800d400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d404:	4663      	mov	r3, ip
 800d406:	f800 2b01 	strb.w	r2, [r0], #1
 800d40a:	e745      	b.n	800d298 <Network::Init(NetworkParamsStore*)+0x7c>
 800d40c:	4630      	mov	r0, r6
 800d40e:	491c      	ldr	r1, [pc, #112]	; (800d480 <Network::Init(NetworkParamsStore*)+0x264>)
 800d410:	f7ff fe9e 	bl	800d150 <strncpy.constprop.0.isra.0>
 800d414:	2300      	movs	r3, #0
 800d416:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800d41a:	e785      	b.n	800d328 <Network::Init(NetworkParamsStore*)+0x10c>
 800d41c:	69a1      	ldr	r1, [r4, #24]
 800d41e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800d422:	4053      	eors	r3, r2
 800d424:	420b      	tst	r3, r1
 800d426:	bf18      	it	ne
 800d428:	9209      	strne	r2, [sp, #36]	; 0x24
 800d42a:	e78c      	b.n	800d346 <Network::Init(NetworkParamsStore*)+0x12a>
 800d42c:	f8d8 3000 	ldr.w	r3, [r8]
 800d430:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d434:	f1bc 0f00 	cmp.w	ip, #0
 800d438:	d0b7      	beq.n	800d3aa <Network::Init(NetworkParamsStore*)+0x18e>
 800d43a:	6808      	ldr	r0, [r1, #0]
 800d43c:	695a      	ldr	r2, [r3, #20]
 800d43e:	1a80      	subs	r0, r0, r2
 800d440:	4584      	cmp	ip, r0
 800d442:	d8b2      	bhi.n	800d3aa <Network::Init(NetworkParamsStore*)+0x18e>
 800d444:	6808      	ldr	r0, [r1, #0]
 800d446:	6158      	str	r0, [r3, #20]
 800d448:	6918      	ldr	r0, [r3, #16]
 800d44a:	2801      	cmp	r0, #1
 800d44c:	f080 0201 	eor.w	r2, r0, #1
 800d450:	611a      	str	r2, [r3, #16]
 800d452:	bf16      	itet	ne
 800d454:	2301      	movne	r3, #1
 800d456:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d45a:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d45e:	e7a4      	b.n	800d3aa <Network::Init(NetworkParamsStore*)+0x18e>
 800d460:	2101      	movs	r1, #1
 800d462:	4628      	mov	r0, r5
 800d464:	f7fa ffe1 	bl	800842a <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d468:	e76d      	b.n	800d346 <Network::Init(NetworkParamsStore*)+0x12a>
 800d46a:	bf00      	nop
 800d46c:	20009490 	mulcs	r0, r0, r4
 800d470:	08012504 	stmdaeq	r1, {r2, r8, sl, sp}
 800d474:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800d478:	40011000 	andmi	r1, r1, r0
 800d47c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800d480:	200094a5 	andcs	r9, r0, r5, lsr #9

0800d484 <Network::Print()>:
 800d484:	b530      	push	{r4, r5, lr}
 800d486:	4604      	mov	r4, r0
 800d488:	b085      	sub	sp, #20
 800d48a:	4832      	ldr	r0, [pc, #200]	; (800d554 <Network::Print()+0xd0>)
 800d48c:	f7fb f9c6 	bl	800881c <printf>
 800d490:	f104 011c 	add.w	r1, r4, #28
 800d494:	4830      	ldr	r0, [pc, #192]	; (800d558 <Network::Print()+0xd4>)
 800d496:	f7fb f9c1 	bl	800881c <printf>
 800d49a:	6861      	ldr	r1, [r4, #4]
 800d49c:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800d4a0:	482e      	ldr	r0, [pc, #184]	; (800d55c <Network::Print()+0xd8>)
 800d4a2:	f7fb f9bb 	bl	800881c <printf>
 800d4a6:	69a0      	ldr	r0, [r4, #24]
 800d4a8:	f003 fd34 	bl	8010f14 <__popcountsi2>
 800d4ac:	6925      	ldr	r5, [r4, #16]
 800d4ae:	9001      	str	r0, [sp, #4]
 800d4b0:	0e2b      	lsrs	r3, r5, #24
 800d4b2:	9300      	str	r3, [sp, #0]
 800d4b4:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d4b8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d4bc:	b2e9      	uxtb	r1, r5
 800d4be:	4828      	ldr	r0, [pc, #160]	; (800d560 <Network::Print()+0xdc>)
 800d4c0:	f7fb f9ac 	bl	800881c <printf>
 800d4c4:	69a1      	ldr	r1, [r4, #24]
 800d4c6:	4827      	ldr	r0, [pc, #156]	; (800d564 <Network::Print()+0xe0>)
 800d4c8:	0e0b      	lsrs	r3, r1, #24
 800d4ca:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d4ce:	9300      	str	r3, [sp, #0]
 800d4d0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d4d4:	b2c9      	uxtb	r1, r1
 800d4d6:	f7fb f9a1 	bl	800881c <printf>
 800d4da:	6961      	ldr	r1, [r4, #20]
 800d4dc:	4822      	ldr	r0, [pc, #136]	; (800d568 <Network::Print()+0xe4>)
 800d4de:	0e0b      	lsrs	r3, r1, #24
 800d4e0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d4e4:	9300      	str	r3, [sp, #0]
 800d4e6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d4ea:	b2c9      	uxtb	r1, r1
 800d4ec:	f7fb f996 	bl	800881c <printf>
 800d4f0:	69a3      	ldr	r3, [r4, #24]
 800d4f2:	6921      	ldr	r1, [r4, #16]
 800d4f4:	481d      	ldr	r0, [pc, #116]	; (800d56c <Network::Print()+0xe8>)
 800d4f6:	ea61 0103 	orn	r1, r1, r3
 800d4fa:	0e0b      	lsrs	r3, r1, #24
 800d4fc:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d500:	9300      	str	r3, [sp, #0]
 800d502:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d506:	b2c9      	uxtb	r1, r1
 800d508:	f7fb f988 	bl	800881c <printf>
 800d50c:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800d510:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800d514:	9302      	str	r3, [sp, #8]
 800d516:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800d51a:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800d51e:	9301      	str	r3, [sp, #4]
 800d520:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800d524:	4812      	ldr	r0, [pc, #72]	; (800d570 <Network::Print()+0xec>)
 800d526:	9300      	str	r3, [sp, #0]
 800d528:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800d52c:	f7fb f976 	bl	800881c <printf>
 800d530:	4b10      	ldr	r3, [pc, #64]	; (800d574 <Network::Print()+0xf0>)
 800d532:	681b      	ldr	r3, [r3, #0]
 800d534:	78da      	ldrb	r2, [r3, #3]
 800d536:	b952      	cbnz	r2, 800d54e <Network::Print()+0xca>
 800d538:	785b      	ldrb	r3, [r3, #1]
 800d53a:	2b00      	cmp	r3, #0
 800d53c:	bf14      	ite	ne
 800d53e:	2144      	movne	r1, #68	; 0x44
 800d540:	2153      	moveq	r1, #83	; 0x53
 800d542:	480d      	ldr	r0, [pc, #52]	; (800d578 <Network::Print()+0xf4>)
 800d544:	b005      	add	sp, #20
 800d546:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d54a:	f7fb b967 	b.w	800881c <printf>
 800d54e:	215a      	movs	r1, #90	; 0x5a
 800d550:	e7f7      	b.n	800d542 <Network::Print()+0xbe>
 800d552:	bf00      	nop
 800d554:	08012510 	stmdaeq	r1, {r4, r8, sl, sp}
 800d558:	08012519 	stmdaeq	r1, {r0, r3, r4, r8, sl, sp}
 800d55c:	0801252a 	stmdaeq	r1, {r1, r3, r5, r8, sl, sp}
 800d560:	0801253f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, sp}
 800d564:	0801255c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, sp}
 800d568:	08012576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, sp}
 800d56c:	08012590 	stmdaeq	r1, {r4, r7, r8, sl, sp}
 800d570:	080125aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, sl, sp}
 800d574:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d578:	080125d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, sp}

0800d57c <Network::TcpBegin(unsigned short)>:
 800d57c:	4608      	mov	r0, r1
 800d57e:	f7ff b805 	b.w	800c58c <tcp_begin>

0800d582 <Network::TcpRead(int, unsigned char const**)>:
 800d582:	4608      	mov	r0, r1
 800d584:	4611      	mov	r1, r2
 800d586:	f7ff b83f 	b.w	800c608 <tcp_read>

0800d58a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d58a:	4608      	mov	r0, r1
 800d58c:	4611      	mov	r1, r2
 800d58e:	461a      	mov	r2, r3
 800d590:	f7ff b816 	b.w	800c5c0 <tcp_write>

0800d594 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d594:	4b06      	ldr	r3, [pc, #24]	; (800d5b0 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d596:	b510      	push	{r4, lr}
 800d598:	225e      	movs	r2, #94	; 0x5e
 800d59a:	4604      	mov	r4, r0
 800d59c:	6001      	str	r1, [r0, #0]
 800d59e:	2100      	movs	r1, #0
 800d5a0:	4618      	mov	r0, r3
 800d5a2:	f001 fcfb 	bl	800ef9c <memset>
 800d5a6:	2201      	movs	r2, #1
 800d5a8:	7502      	strb	r2, [r0, #20]
 800d5aa:	4620      	mov	r0, r4
 800d5ac:	bd10      	pop	{r4, pc}
 800d5ae:	bf00      	nop
 800d5b0:	20009490 	mulcs	r0, r0, r4

0800d5b4 <NetworkParams::Load()>:
 800d5b4:	b508      	push	{r3, lr}
 800d5b6:	2300      	movs	r3, #0
 800d5b8:	4905      	ldr	r1, [pc, #20]	; (800d5d0 <NetworkParams::Load()+0x1c>)
 800d5ba:	6800      	ldr	r0, [r0, #0]
 800d5bc:	700b      	strb	r3, [r1, #0]
 800d5be:	704b      	strb	r3, [r1, #1]
 800d5c0:	708b      	strb	r3, [r1, #2]
 800d5c2:	70cb      	strb	r3, [r1, #3]
 800d5c4:	b118      	cbz	r0, 800d5ce <NetworkParams::Load()+0x1a>
 800d5c6:	6803      	ldr	r3, [r0, #0]
 800d5c8:	68db      	ldr	r3, [r3, #12]
 800d5ca:	4798      	blx	r3
 800d5cc:	2001      	movs	r0, #1
 800d5ce:	bd08      	pop	{r3, pc}
 800d5d0:	20009490 	mulcs	r0, r0, r4

0800d5d4 <NetworkParams::Load(char const*, unsigned int)>:
 800d5d4:	6803      	ldr	r3, [r0, #0]
 800d5d6:	b1eb      	cbz	r3, 800d614 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d5d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d5da:	2300      	movs	r3, #0
 800d5dc:	460e      	mov	r6, r1
 800d5de:	4617      	mov	r7, r2
 800d5e0:	4605      	mov	r5, r0
 800d5e2:	4c0d      	ldr	r4, [pc, #52]	; (800d618 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d5e4:	4602      	mov	r2, r0
 800d5e6:	490d      	ldr	r1, [pc, #52]	; (800d61c <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d5e8:	4668      	mov	r0, sp
 800d5ea:	7023      	strb	r3, [r4, #0]
 800d5ec:	7063      	strb	r3, [r4, #1]
 800d5ee:	70a3      	strb	r3, [r4, #2]
 800d5f0:	70e3      	strb	r3, [r4, #3]
 800d5f2:	f000 fee5 	bl	800e3c0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d5f6:	463a      	mov	r2, r7
 800d5f8:	4631      	mov	r1, r6
 800d5fa:	4668      	mov	r0, sp
 800d5fc:	f000 fee4 	bl	800e3c8 <ReadConfigFile::Read(char const*, unsigned int)>
 800d600:	6828      	ldr	r0, [r5, #0]
 800d602:	4621      	mov	r1, r4
 800d604:	6803      	ldr	r3, [r0, #0]
 800d606:	689b      	ldr	r3, [r3, #8]
 800d608:	4798      	blx	r3
 800d60a:	4668      	mov	r0, sp
 800d60c:	f000 fedb 	bl	800e3c6 <ReadConfigFile::~ReadConfigFile()>
 800d610:	b003      	add	sp, #12
 800d612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d614:	4770      	bx	lr
 800d616:	bf00      	nop
 800d618:	20009490 	mulcs	r0, r0, r4
 800d61c:	0800d751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, ip, lr, pc}

0800d620 <NetworkParams::callbackFunction(char const*)>:
 800d620:	b530      	push	{r4, r5, lr}
 800d622:	460c      	mov	r4, r1
 800d624:	b085      	sub	sp, #20
 800d626:	4620      	mov	r0, r4
 800d628:	4942      	ldr	r1, [pc, #264]	; (800d734 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d62a:	f10d 0207 	add.w	r2, sp, #7
 800d62e:	f000 ff77 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d632:	b980      	cbnz	r0, 800d656 <NetworkParams::callbackFunction(char const*)+0x36>
 800d634:	4940      	ldr	r1, [pc, #256]	; (800d738 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d636:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d63a:	680b      	ldr	r3, [r1, #0]
 800d63c:	b142      	cbz	r2, 800d650 <NetworkParams::callbackFunction(char const*)+0x30>
 800d63e:	f023 0301 	bic.w	r3, r3, #1
 800d642:	3a00      	subs	r2, #0
 800d644:	bf18      	it	ne
 800d646:	2201      	movne	r2, #1
 800d648:	600b      	str	r3, [r1, #0]
 800d64a:	750a      	strb	r2, [r1, #20]
 800d64c:	b005      	add	sp, #20
 800d64e:	bd30      	pop	{r4, r5, pc}
 800d650:	f043 0301 	orr.w	r3, r3, #1
 800d654:	e7f5      	b.n	800d642 <NetworkParams::callbackFunction(char const*)+0x22>
 800d656:	4620      	mov	r0, r4
 800d658:	4938      	ldr	r1, [pc, #224]	; (800d73c <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d65a:	f10d 0207 	add.w	r2, sp, #7
 800d65e:	f000 ff5f 	bl	800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d662:	b988      	cbnz	r0, 800d688 <NetworkParams::callbackFunction(char const*)+0x68>
 800d664:	4a34      	ldr	r2, [pc, #208]	; (800d738 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d666:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d66a:	6813      	ldr	r3, [r2, #0]
 800d66c:	1e4d      	subs	r5, r1, #1
 800d66e:	2d04      	cmp	r5, #4
 800d670:	bf97      	itett	ls
 800d672:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d676:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d67a:	6013      	strls	r3, [r2, #0]
 800d67c:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d680:	bf84      	itt	hi
 800d682:	6013      	strhi	r3, [r2, #0]
 800d684:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d688:	4620      	mov	r0, r4
 800d68a:	492d      	ldr	r1, [pc, #180]	; (800d740 <NetworkParams::callbackFunction(char const*)+0x120>)
 800d68c:	aa02      	add	r2, sp, #8
 800d68e:	f000 fee8 	bl	800e462 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d692:	b9d0      	cbnz	r0, 800d6ca <NetworkParams::callbackFunction(char const*)+0xaa>
 800d694:	9b02      	ldr	r3, [sp, #8]
 800d696:	b2d9      	uxtb	r1, r3
 800d698:	29ac      	cmp	r1, #172	; 0xac
 800d69a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d69e:	d00a      	beq.n	800d6b6 <NetworkParams::callbackFunction(char const*)+0x96>
 800d6a0:	29c0      	cmp	r1, #192	; 0xc0
 800d6a2:	d00c      	beq.n	800d6be <NetworkParams::callbackFunction(char const*)+0x9e>
 800d6a4:	290a      	cmp	r1, #10
 800d6a6:	d10d      	bne.n	800d6c4 <NetworkParams::callbackFunction(char const*)+0xa4>
 800d6a8:	4a23      	ldr	r2, [pc, #140]	; (800d738 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d6aa:	6053      	str	r3, [r2, #4]
 800d6ac:	6813      	ldr	r3, [r2, #0]
 800d6ae:	f043 0302 	orr.w	r3, r3, #2
 800d6b2:	6013      	str	r3, [r2, #0]
 800d6b4:	e7ca      	b.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6b6:	3a10      	subs	r2, #16
 800d6b8:	2a0f      	cmp	r2, #15
 800d6ba:	d8c7      	bhi.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6bc:	e7f4      	b.n	800d6a8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6be:	2aa8      	cmp	r2, #168	; 0xa8
 800d6c0:	d1c4      	bne.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6c2:	e7f1      	b.n	800d6a8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6c4:	2b00      	cmp	r3, #0
 800d6c6:	d0ef      	beq.n	800d6a8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6c8:	e7c0      	b.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6ca:	4620      	mov	r0, r4
 800d6cc:	491d      	ldr	r1, [pc, #116]	; (800d744 <NetworkParams::callbackFunction(char const*)+0x124>)
 800d6ce:	aa02      	add	r2, sp, #8
 800d6d0:	f000 fec7 	bl	800e462 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d6d4:	b970      	cbnz	r0, 800d6f4 <NetworkParams::callbackFunction(char const*)+0xd4>
 800d6d6:	9a02      	ldr	r2, [sp, #8]
 800d6d8:	2a00      	cmp	r2, #0
 800d6da:	d0b7      	beq.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6dc:	ba13      	rev	r3, r2
 800d6de:	43d9      	mvns	r1, r3
 800d6e0:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d6e4:	d1b2      	bne.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6e6:	4b14      	ldr	r3, [pc, #80]	; (800d738 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d6e8:	609a      	str	r2, [r3, #8]
 800d6ea:	681a      	ldr	r2, [r3, #0]
 800d6ec:	f042 0204 	orr.w	r2, r2, #4
 800d6f0:	601a      	str	r2, [r3, #0]
 800d6f2:	e7ab      	b.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6f4:	4620      	mov	r0, r4
 800d6f6:	4914      	ldr	r1, [pc, #80]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x128>)
 800d6f8:	aa02      	add	r2, sp, #8
 800d6fa:	f000 feb2 	bl	800e462 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d6fe:	4d0e      	ldr	r5, [pc, #56]	; (800d738 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d700:	b930      	cbnz	r0, 800d710 <NetworkParams::callbackFunction(char const*)+0xf0>
 800d702:	9b02      	ldr	r3, [sp, #8]
 800d704:	60eb      	str	r3, [r5, #12]
 800d706:	682b      	ldr	r3, [r5, #0]
 800d708:	f043 0308 	orr.w	r3, r3, #8
 800d70c:	602b      	str	r3, [r5, #0]
 800d70e:	e79d      	b.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d710:	233f      	movs	r3, #63	; 0x3f
 800d712:	4620      	mov	r0, r4
 800d714:	9303      	str	r3, [sp, #12]
 800d716:	490d      	ldr	r1, [pc, #52]	; (800d74c <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d718:	ab03      	add	r3, sp, #12
 800d71a:	f105 0215 	add.w	r2, r5, #21
 800d71e:	f000 fe87 	bl	800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d722:	2800      	cmp	r0, #0
 800d724:	d192      	bne.n	800d64c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d726:	9b03      	ldr	r3, [sp, #12]
 800d728:	442b      	add	r3, r5
 800d72a:	7558      	strb	r0, [r3, #21]
 800d72c:	682b      	ldr	r3, [r5, #0]
 800d72e:	f043 0320 	orr.w	r3, r3, #32
 800d732:	e7eb      	b.n	800d70c <NetworkParams::callbackFunction(char const*)+0xec>
 800d734:	0801262e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, sp}
 800d738:	20009490 	mulcs	r0, r0, r4
 800d73c:	0801260c 	stmdaeq	r1, {r2, r3, r9, sl, sp}
 800d740:	080125f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl, sp}
 800d744:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}
 800d748:	080125fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, sp}
 800d74c:	0801261c 	stmdaeq	r1, {r2, r3, r4, r9, sl, sp}

0800d750 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d750:	f7ff bf66 	b.w	800d620 <NetworkParams::callbackFunction(char const*)>

0800d754 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d754:	b530      	push	{r4, r5, lr}
 800d756:	4614      	mov	r4, r2
 800d758:	461d      	mov	r5, r3
 800d75a:	b087      	sub	sp, #28
 800d75c:	2900      	cmp	r1, #0
 800d75e:	d02a      	beq.n	800d7b6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x62>
 800d760:	225e      	movs	r2, #94	; 0x5e
 800d762:	4872      	ldr	r0, [pc, #456]	; (800d92c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d764:	f001 fc03 	bl	800ef6e <memmove>
 800d768:	4622      	mov	r2, r4
 800d76a:	462b      	mov	r3, r5
 800d76c:	4970      	ldr	r1, [pc, #448]	; (800d930 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d76e:	a803      	add	r0, sp, #12
 800d770:	f000 fd86 	bl	800e280 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d774:	4c6d      	ldr	r4, [pc, #436]	; (800d92c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d776:	6823      	ldr	r3, [r4, #0]
 800d778:	0799      	lsls	r1, r3, #30
 800d77a:	bf5f      	itttt	pl
 800d77c:	4a6d      	ldrpl	r2, [pc, #436]	; (800d934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d77e:	6812      	ldrpl	r2, [r2, #0]
 800d780:	6912      	ldrpl	r2, [r2, #16]
 800d782:	6062      	strpl	r2, [r4, #4]
 800d784:	075a      	lsls	r2, r3, #29
 800d786:	bf5f      	itttt	pl
 800d788:	4a6a      	ldrpl	r2, [pc, #424]	; (800d934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d78a:	6812      	ldrpl	r2, [r2, #0]
 800d78c:	6992      	ldrpl	r2, [r2, #24]
 800d78e:	60a2      	strpl	r2, [r4, #8]
 800d790:	071d      	lsls	r5, r3, #28
 800d792:	bf5f      	itttt	pl
 800d794:	4a67      	ldrpl	r2, [pc, #412]	; (800d934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d796:	6812      	ldrpl	r2, [r2, #0]
 800d798:	6952      	ldrpl	r2, [r2, #20]
 800d79a:	60e2      	strpl	r2, [r4, #12]
 800d79c:	0698      	lsls	r0, r3, #26
 800d79e:	d417      	bmi.n	800d7d0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x7c>
 800d7a0:	223f      	movs	r2, #63	; 0x3f
 800d7a2:	4b64      	ldr	r3, [pc, #400]	; (800d934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d7a4:	4864      	ldr	r0, [pc, #400]	; (800d938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d7a6:	681b      	ldr	r3, [r3, #0]
 800d7a8:	331b      	adds	r3, #27
 800d7aa:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d7ae:	b941      	cbnz	r1, 800d7c2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x6e>
 800d7b0:	f001 fbf4 	bl	800ef9c <memset>
 800d7b4:	e009      	b.n	800d7ca <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x76>
 800d7b6:	6800      	ldr	r0, [r0, #0]
 800d7b8:	495c      	ldr	r1, [pc, #368]	; (800d92c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d7ba:	6803      	ldr	r3, [r0, #0]
 800d7bc:	68db      	ldr	r3, [r3, #12]
 800d7be:	4798      	blx	r3
 800d7c0:	e7d2      	b.n	800d768 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d7c2:	3a01      	subs	r2, #1
 800d7c4:	f800 1b01 	strb.w	r1, [r0], #1
 800d7c8:	d1ef      	bne.n	800d7aa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d7ca:	2300      	movs	r3, #0
 800d7cc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d7d0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d7d4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d7d8:	7d23      	ldrb	r3, [r4, #20]
 800d7da:	42aa      	cmp	r2, r5
 800d7dc:	6821      	ldr	r1, [r4, #0]
 800d7de:	d21a      	bcs.n	800d816 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc2>
 800d7e0:	9803      	ldr	r0, [sp, #12]
 800d7e2:	07c9      	lsls	r1, r1, #31
 800d7e4:	4410      	add	r0, r2
 800d7e6:	eba5 0502 	sub.w	r5, r5, r2
 800d7ea:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d7ee:	d404      	bmi.n	800d7fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d7f0:	b922      	cbnz	r2, 800d7fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800d7f2:	9300      	str	r3, [sp, #0]
 800d7f4:	4a51      	ldr	r2, [pc, #324]	; (800d93c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d7f6:	4b52      	ldr	r3, [pc, #328]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d7f8:	e003      	b.n	800d802 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 800d7fa:	b312      	cbz	r2, 800d842 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xee>
 800d7fc:	9300      	str	r3, [sp, #0]
 800d7fe:	4a51      	ldr	r2, [pc, #324]	; (800d944 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d800:	4b4f      	ldr	r3, [pc, #316]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d802:	4629      	mov	r1, r5
 800d804:	f7fb f81a 	bl	800883c <snprintf>
 800d808:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d80c:	4285      	cmp	r5, r0
 800d80e:	bfa4      	itt	ge
 800d810:	181b      	addge	r3, r3, r0
 800d812:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d816:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d81a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d81e:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d822:	42aa      	cmp	r2, r5
 800d824:	6821      	ldr	r1, [r4, #0]
 800d826:	d21f      	bcs.n	800d868 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x114>
 800d828:	9803      	ldr	r0, [sp, #12]
 800d82a:	05c9      	lsls	r1, r1, #23
 800d82c:	4410      	add	r0, r2
 800d82e:	eba5 0502 	sub.w	r5, r5, r2
 800d832:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d836:	d408      	bmi.n	800d84a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d838:	b94a      	cbnz	r2, 800d84e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfa>
 800d83a:	9300      	str	r3, [sp, #0]
 800d83c:	4a3f      	ldr	r2, [pc, #252]	; (800d93c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d83e:	4b42      	ldr	r3, [pc, #264]	; (800d948 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d840:	e008      	b.n	800d854 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 800d842:	9300      	str	r3, [sp, #0]
 800d844:	4a41      	ldr	r2, [pc, #260]	; (800d94c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d846:	4b3e      	ldr	r3, [pc, #248]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d848:	e7db      	b.n	800d802 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 800d84a:	2a00      	cmp	r2, #0
 800d84c:	d03e      	beq.n	800d8cc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x178>
 800d84e:	9300      	str	r3, [sp, #0]
 800d850:	4a3c      	ldr	r2, [pc, #240]	; (800d944 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d852:	4b3d      	ldr	r3, [pc, #244]	; (800d948 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d854:	4629      	mov	r1, r5
 800d856:	f7fa fff1 	bl	800883c <snprintf>
 800d85a:	4285      	cmp	r5, r0
 800d85c:	bfa2      	ittt	ge
 800d85e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d862:	18c0      	addge	r0, r0, r3
 800d864:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d868:	4939      	ldr	r1, [pc, #228]	; (800d950 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d86a:	a803      	add	r0, sp, #12
 800d86c:	f000 fd8e 	bl	800e38c <PropertiesBuilder::AddComment(char const*)>
 800d870:	6823      	ldr	r3, [r4, #0]
 800d872:	6862      	ldr	r2, [r4, #4]
 800d874:	4937      	ldr	r1, [pc, #220]	; (800d954 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d876:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d87a:	a803      	add	r0, sp, #12
 800d87c:	f000 fd42 	bl	800e304 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d880:	6823      	ldr	r3, [r4, #0]
 800d882:	68a2      	ldr	r2, [r4, #8]
 800d884:	4934      	ldr	r1, [pc, #208]	; (800d958 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d886:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d88a:	a803      	add	r0, sp, #12
 800d88c:	f000 fd3a 	bl	800e304 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d890:	6823      	ldr	r3, [r4, #0]
 800d892:	68e2      	ldr	r2, [r4, #12]
 800d894:	4931      	ldr	r1, [pc, #196]	; (800d95c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d896:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d89a:	a803      	add	r0, sp, #12
 800d89c:	f000 fd32 	bl	800e304 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d8a0:	6821      	ldr	r1, [r4, #0]
 800d8a2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d8a6:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800d8aa:	42a3      	cmp	r3, r4
 800d8ac:	d220      	bcs.n	800d8f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19c>
 800d8ae:	9803      	ldr	r0, [sp, #12]
 800d8b0:	f011 0f20 	tst.w	r1, #32
 800d8b4:	4418      	add	r0, r3
 800d8b6:	eba4 0403 	sub.w	r4, r4, r3
 800d8ba:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8be:	4b1e      	ldr	r3, [pc, #120]	; (800d938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d8c0:	d108      	bne.n	800d8d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 800d8c2:	b942      	cbnz	r2, 800d8d6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x182>
 800d8c4:	9300      	str	r3, [sp, #0]
 800d8c6:	4a26      	ldr	r2, [pc, #152]	; (800d960 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d8c8:	4b26      	ldr	r3, [pc, #152]	; (800d964 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d8ca:	e007      	b.n	800d8dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 800d8cc:	9300      	str	r3, [sp, #0]
 800d8ce:	4a1f      	ldr	r2, [pc, #124]	; (800d94c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d8d0:	4b1d      	ldr	r3, [pc, #116]	; (800d948 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d8d2:	e7bf      	b.n	800d854 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 800d8d4:	b32a      	cbz	r2, 800d922 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ce>
 800d8d6:	9300      	str	r3, [sp, #0]
 800d8d8:	4a23      	ldr	r2, [pc, #140]	; (800d968 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d8da:	4b22      	ldr	r3, [pc, #136]	; (800d964 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d8dc:	4621      	mov	r1, r4
 800d8de:	f7fa ffad 	bl	800883c <snprintf>
 800d8e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d8e6:	4284      	cmp	r4, r0
 800d8e8:	bfa4      	itt	ge
 800d8ea:	181b      	addge	r3, r3, r0
 800d8ec:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800d8f0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d8f4:	b17b      	cbz	r3, 800d916 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1c2>
 800d8f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d8fa:	9b03      	ldr	r3, [sp, #12]
 800d8fc:	4413      	add	r3, r2
 800d8fe:	227d      	movs	r2, #125	; 0x7d
 800d900:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d904:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d908:	9903      	ldr	r1, [sp, #12]
 800d90a:	54ca      	strb	r2, [r1, r3]
 800d90c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d910:	3301      	adds	r3, #1
 800d912:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d916:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d91a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d91c:	601a      	str	r2, [r3, #0]
 800d91e:	b007      	add	sp, #28
 800d920:	bd30      	pop	{r4, r5, pc}
 800d922:	9300      	str	r3, [sp, #0]
 800d924:	4a11      	ldr	r2, [pc, #68]	; (800d96c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800d926:	4b0f      	ldr	r3, [pc, #60]	; (800d964 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d928:	e7d8      	b.n	800d8dc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 800d92a:	bf00      	nop
 800d92c:	20009490 	mulcs	r0, r0, r4
 800d930:	08012637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp}
 800d934:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d938:	200094a5 	andcs	r9, r0, r5, lsr #9
 800d93c:	08011189 	stmdaeq	r1, {r0, r3, r7, r8, ip}
 800d940:	0801262e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, sp}
 800d944:	08011180 	stmdaeq	r1, {r7, r8, ip}
 800d948:	0801260c 	stmdaeq	r1, {r2, r3, r9, sl, sp}
 800d94c:	0801118a 	stmdaeq	r1, {r1, r3, r7, r8, ip}
 800d950:	080125e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sl, sp}
 800d954:	080125f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl, sp}
 800d958:	08012625 	stmdaeq	r1, {r0, r2, r5, r9, sl, sp}
 800d95c:	080125fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, sp}
 800d960:	0801119c 	stmdaeq	r1, {r2, r3, r4, r7, r8, ip}
 800d964:	0801261c 	stmdaeq	r1, {r2, r3, r4, r9, sl, sp}
 800d968:	08011191 	stmdaeq	r1, {r0, r4, r7, r8, ip}
 800d96c:	0801119d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, ip}

0800d970 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d970:	b513      	push	{r0, r1, r4, lr}
 800d972:	6804      	ldr	r4, [r0, #0]
 800d974:	b914      	cbnz	r4, 800d97c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d976:	601c      	str	r4, [r3, #0]
 800d978:	b002      	add	sp, #8
 800d97a:	bd10      	pop	{r4, pc}
 800d97c:	9300      	str	r3, [sp, #0]
 800d97e:	4613      	mov	r3, r2
 800d980:	460a      	mov	r2, r1
 800d982:	2100      	movs	r1, #0
 800d984:	f7ff fee6 	bl	800d754 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800d988:	e7f6      	b.n	800d978 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d98a <NetworkParams::Dump()>:
 800d98a:	4770      	bx	lr

0800d98c <memcpy.isra.0>:
 800d98c:	3801      	subs	r0, #1
 800d98e:	440a      	add	r2, r1
 800d990:	4291      	cmp	r1, r2
 800d992:	d100      	bne.n	800d996 <memcpy.isra.0+0xa>
 800d994:	4770      	bx	lr
 800d996:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d99a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d99e:	e7f7      	b.n	800d990 <memcpy.isra.0+0x4>

0800d9a0 <arp_announce>:
 800d9a0:	4803      	ldr	r0, [pc, #12]	; (800d9b0 <arp_announce+0x10>)
 800d9a2:	69c3      	ldr	r3, [r0, #28]
 800d9a4:	b113      	cbz	r3, 800d9ac <arp_announce+0xc>
 800d9a6:	212a      	movs	r1, #42	; 0x2a
 800d9a8:	f002 baa4 	b.w	800fef4 <emac_eth_send>
 800d9ac:	4770      	bx	lr
 800d9ae:	bf00      	nop
 800d9b0:	200094f0 	strdcs	r9, [r0], -r0

0800d9b4 <arp_handle_request>:
 800d9b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9b6:	2204      	movs	r2, #4
 800d9b8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d9bc:	4604      	mov	r4, r0
 800d9be:	eb0d 0002 	add.w	r0, sp, r2
 800d9c2:	f7ff ffe3 	bl	800d98c <memcpy.isra.0>
 800d9c6:	4b0d      	ldr	r3, [pc, #52]	; (800d9fc <arp_handle_request+0x48>)
 800d9c8:	9a01      	ldr	r2, [sp, #4]
 800d9ca:	69db      	ldr	r3, [r3, #28]
 800d9cc:	429a      	cmp	r2, r3
 800d9ce:	d113      	bne.n	800d9f8 <arp_handle_request+0x44>
 800d9d0:	2206      	movs	r2, #6
 800d9d2:	4d0b      	ldr	r5, [pc, #44]	; (800da00 <arp_handle_request+0x4c>)
 800d9d4:	18a1      	adds	r1, r4, r2
 800d9d6:	4628      	mov	r0, r5
 800d9d8:	f7ff ffd8 	bl	800d98c <memcpy.isra.0>
 800d9dc:	f104 0116 	add.w	r1, r4, #22
 800d9e0:	f105 0020 	add.w	r0, r5, #32
 800d9e4:	2206      	movs	r2, #6
 800d9e6:	f7ff ffd1 	bl	800d98c <memcpy.isra.0>
 800d9ea:	69e3      	ldr	r3, [r4, #28]
 800d9ec:	212a      	movs	r1, #42	; 0x2a
 800d9ee:	4628      	mov	r0, r5
 800d9f0:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800d9f4:	f002 fa7e 	bl	800fef4 <emac_eth_send>
 800d9f8:	b003      	add	sp, #12
 800d9fa:	bd30      	pop	{r4, r5, pc}
 800d9fc:	200094f0 	strdcs	r9, [r0], -r0
 800da00:	2000951c 	andcs	r9, r0, ip, lsl r5

0800da04 <arp_handle_reply>:
 800da04:	69c1      	ldr	r1, [r0, #28]
 800da06:	3016      	adds	r0, #22
 800da08:	f000 b80a 	b.w	800da20 <arp_cache_update>

0800da0c <arp_send_request>:
 800da0c:	4b03      	ldr	r3, [pc, #12]	; (800da1c <arp_send_request+0x10>)
 800da0e:	212a      	movs	r1, #42	; 0x2a
 800da10:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800da14:	4618      	mov	r0, r3
 800da16:	f002 ba6d 	b.w	800fef4 <emac_eth_send>
 800da1a:	bf00      	nop
 800da1c:	20009548 	andcs	r9, r0, r8, asr #10

0800da20 <arp_cache_update>:
 800da20:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da22:	4e11      	ldr	r6, [pc, #68]	; (800da68 <arp_cache_update+0x48>)
 800da24:	8833      	ldrh	r3, [r6, #0]
 800da26:	2b20      	cmp	r3, #32
 800da28:	d018      	beq.n	800da5c <arp_cache_update+0x3c>
 800da2a:	2400      	movs	r4, #0
 800da2c:	220c      	movs	r2, #12
 800da2e:	4d0f      	ldr	r5, [pc, #60]	; (800da6c <arp_cache_update+0x4c>)
 800da30:	b2a7      	uxth	r7, r4
 800da32:	42bb      	cmp	r3, r7
 800da34:	d80b      	bhi.n	800da4e <arp_cache_update+0x2e>
 800da36:	fb02 5203 	mla	r2, r2, r3, r5
 800da3a:	1d84      	adds	r4, r0, #6
 800da3c:	3203      	adds	r2, #3
 800da3e:	42a0      	cmp	r0, r4
 800da40:	d10d      	bne.n	800da5e <arp_cache_update+0x3e>
 800da42:	220c      	movs	r2, #12
 800da44:	435a      	muls	r2, r3
 800da46:	3301      	adds	r3, #1
 800da48:	50a9      	str	r1, [r5, r2]
 800da4a:	8033      	strh	r3, [r6, #0]
 800da4c:	e006      	b.n	800da5c <arp_cache_update+0x3c>
 800da4e:	3401      	adds	r4, #1
 800da50:	fb02 5704 	mla	r7, r2, r4, r5
 800da54:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800da58:	428f      	cmp	r7, r1
 800da5a:	d1e9      	bne.n	800da30 <arp_cache_update+0x10>
 800da5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da5e:	f810 7b01 	ldrb.w	r7, [r0], #1
 800da62:	f802 7f01 	strb.w	r7, [r2, #1]!
 800da66:	e7ea      	b.n	800da3e <arp_cache_update+0x1e>
 800da68:	200096f4 	strdcs	r9, [r0], -r4
 800da6c:	20009574 	andcs	r9, r0, r4, ror r5

0800da70 <arp_cache_lookup>:
 800da70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800da74:	2200      	movs	r2, #0
 800da76:	4606      	mov	r6, r0
 800da78:	460c      	mov	r4, r1
 800da7a:	200c      	movs	r0, #12
 800da7c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800db04 <arp_cache_lookup+0x94>
 800da80:	fb00 f302 	mul.w	r3, r0, r2
 800da84:	f853 1008 	ldr.w	r1, [r3, r8]
 800da88:	42b1      	cmp	r1, r6
 800da8a:	d10d      	bne.n	800daa8 <arp_cache_lookup+0x38>
 800da8c:	3304      	adds	r3, #4
 800da8e:	4443      	add	r3, r8
 800da90:	3c01      	subs	r4, #1
 800da92:	1d9a      	adds	r2, r3, #6
 800da94:	4293      	cmp	r3, r2
 800da96:	d102      	bne.n	800da9e <arp_cache_lookup+0x2e>
 800da98:	4630      	mov	r0, r6
 800da9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800da9e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800daa2:	f804 1f01 	strb.w	r1, [r4, #1]!
 800daa6:	e7f5      	b.n	800da94 <arp_cache_lookup+0x24>
 800daa8:	b111      	cbz	r1, 800dab0 <arp_cache_lookup+0x40>
 800daaa:	3201      	adds	r2, #1
 800daac:	2a20      	cmp	r2, #32
 800daae:	d1e7      	bne.n	800da80 <arp_cache_lookup+0x10>
 800dab0:	2704      	movs	r7, #4
 800dab2:	f8df a054 	ldr.w	sl, [pc, #84]	; 800db08 <arp_cache_lookup+0x98>
 800dab6:	f8ba 5000 	ldrh.w	r5, [sl]
 800daba:	3f01      	subs	r7, #1
 800dabc:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800dac0:	d101      	bne.n	800dac6 <arp_cache_lookup+0x56>
 800dac2:	463e      	mov	r6, r7
 800dac4:	e7e8      	b.n	800da98 <arp_cache_lookup+0x28>
 800dac6:	4630      	mov	r0, r6
 800dac8:	f7ff ffa0 	bl	800da0c <arp_send_request>
 800dacc:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800dad0:	f1b9 0901 	subs.w	r9, r9, #1
 800dad4:	f8ba 3000 	ldrh.w	r3, [sl]
 800dad8:	d011      	beq.n	800dafe <arp_cache_lookup+0x8e>
 800dada:	429d      	cmp	r5, r3
 800dadc:	d00c      	beq.n	800daf8 <arp_cache_lookup+0x88>
 800dade:	230c      	movs	r3, #12
 800dae0:	fb03 8505 	mla	r5, r3, r5, r8
 800dae4:	3c01      	subs	r4, #1
 800dae6:	1d2b      	adds	r3, r5, #4
 800dae8:	350a      	adds	r5, #10
 800daea:	42ab      	cmp	r3, r5
 800daec:	d0d4      	beq.n	800da98 <arp_cache_lookup+0x28>
 800daee:	f813 2b01 	ldrb.w	r2, [r3], #1
 800daf2:	f804 2f01 	strb.w	r2, [r4, #1]!
 800daf6:	e7f8      	b.n	800daea <arp_cache_lookup+0x7a>
 800daf8:	f7f9 fd12 	bl	8007520 <net_handle>
 800dafc:	e7e8      	b.n	800dad0 <arp_cache_lookup+0x60>
 800dafe:	429d      	cmp	r5, r3
 800db00:	d0db      	beq.n	800daba <arp_cache_lookup+0x4a>
 800db02:	e7ec      	b.n	800dade <arp_cache_lookup+0x6e>
 800db04:	20009574 	andcs	r9, r0, r4, ror r5
 800db08:	200096f4 	strdcs	r9, [r0], -r4

0800db0c <_parse_response>:
 800db0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db10:	2400      	movs	r4, #0
 800db12:	460d      	mov	r5, r1
 800db14:	46a3      	mov	fp, r4
 800db16:	4627      	mov	r7, r4
 800db18:	46a2      	mov	sl, r4
 800db1a:	46a1      	mov	r9, r4
 800db1c:	46a0      	mov	r8, r4
 800db1e:	4e4f      	ldr	r6, [pc, #316]	; (800dc5c <_parse_response+0x150>)
 800db20:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 800db24:	6833      	ldr	r3, [r6, #0]
 800db26:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800db2a:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800db2e:	9009      	str	r0, [sp, #36]	; 0x24
 800db30:	9402      	str	r4, [sp, #8]
 800db32:	9407      	str	r4, [sp, #28]
 800db34:	9308      	str	r3, [sp, #32]
 800db36:	f7f9 fcf3 	bl	8007520 <net_handle>
 800db3a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800db3e:	9300      	str	r3, [sp, #0]
 800db40:	f44f 7209 	mov.w	r2, #548	; 0x224
 800db44:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 800db48:	ab0c      	add	r3, sp, #48	; 0x30
 800db4a:	a90d      	add	r1, sp, #52	; 0x34
 800db4c:	f7fe fe1e 	bl	800c78c <udp_recv>
 800db50:	2800      	cmp	r0, #0
 800db52:	d03e      	beq.n	800dbd2 <_parse_response+0xc6>
 800db54:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800db58:	2b43      	cmp	r3, #67	; 0x43
 800db5a:	d13a      	bne.n	800dbd2 <_parse_response+0xc6>
 800db5c:	aa14      	add	r2, sp, #80	; 0x50
 800db5e:	1e6b      	subs	r3, r5, #1
 800db60:	1d69      	adds	r1, r5, #5
 800db62:	4299      	cmp	r1, r3
 800db64:	d12f      	bne.n	800dbc6 <_parse_response+0xba>
 800db66:	2100      	movs	r1, #0
 800db68:	ab0d      	add	r3, sp, #52	; 0x34
 800db6a:	181d      	adds	r5, r3, r0
 800db6c:	468c      	mov	ip, r1
 800db6e:	460e      	mov	r6, r1
 800db70:	4608      	mov	r0, r1
 800db72:	ab49      	add	r3, sp, #292	; 0x124
 800db74:	42ab      	cmp	r3, r5
 800db76:	d337      	bcc.n	800dbe8 <_parse_response+0xdc>
 800db78:	b141      	cbz	r1, 800db8c <_parse_response+0x80>
 800db7a:	4b39      	ldr	r3, [pc, #228]	; (800dc60 <_parse_response+0x154>)
 800db7c:	9a07      	ldr	r2, [sp, #28]
 800db7e:	f883 8003 	strb.w	r8, [r3, #3]
 800db82:	709a      	strb	r2, [r3, #2]
 800db84:	9a06      	ldr	r2, [sp, #24]
 800db86:	705a      	strb	r2, [r3, #1]
 800db88:	9a05      	ldr	r2, [sp, #20]
 800db8a:	701a      	strb	r2, [r3, #0]
 800db8c:	f1bc 0f00 	cmp.w	ip, #0
 800db90:	d007      	beq.n	800dba2 <_parse_response+0x96>
 800db92:	4b34      	ldr	r3, [pc, #208]	; (800dc64 <_parse_response+0x158>)
 800db94:	9a04      	ldr	r2, [sp, #16]
 800db96:	705c      	strb	r4, [r3, #1]
 800db98:	70da      	strb	r2, [r3, #3]
 800db9a:	9a03      	ldr	r2, [sp, #12]
 800db9c:	709a      	strb	r2, [r3, #2]
 800db9e:	9a02      	ldr	r2, [sp, #8]
 800dba0:	701a      	strb	r2, [r3, #0]
 800dba2:	b13e      	cbz	r6, 800dbb4 <_parse_response+0xa8>
 800dba4:	4b30      	ldr	r3, [pc, #192]	; (800dc68 <_parse_response+0x15c>)
 800dba6:	70df      	strb	r7, [r3, #3]
 800dba8:	f883 a002 	strb.w	sl, [r3, #2]
 800dbac:	f883 9001 	strb.w	r9, [r3, #1]
 800dbb0:	f883 b000 	strb.w	fp, [r3]
 800dbb4:	2802      	cmp	r0, #2
 800dbb6:	d102      	bne.n	800dbbe <_parse_response+0xb2>
 800dbb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dbba:	4b2c      	ldr	r3, [pc, #176]	; (800dc6c <_parse_response+0x160>)
 800dbbc:	601a      	str	r2, [r3, #0]
 800dbbe:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 800dbc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbc6:	f812 cb01 	ldrb.w	ip, [r2], #1
 800dbca:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800dbce:	45e6      	cmp	lr, ip
 800dbd0:	d0c7      	beq.n	800db62 <_parse_response+0x56>
 800dbd2:	6833      	ldr	r3, [r6, #0]
 800dbd4:	9a08      	ldr	r2, [sp, #32]
 800dbd6:	1a9b      	subs	r3, r3, r2
 800dbd8:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800dbdc:	d3ab      	bcc.n	800db36 <_parse_response+0x2a>
 800dbde:	2800      	cmp	r0, #0
 800dbe0:	d1c1      	bne.n	800db66 <_parse_response+0x5a>
 800dbe2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dbe6:	e7ea      	b.n	800dbbe <_parse_response+0xb2>
 800dbe8:	781a      	ldrb	r2, [r3, #0]
 800dbea:	2a35      	cmp	r2, #53	; 0x35
 800dbec:	d011      	beq.n	800dc12 <_parse_response+0x106>
 800dbee:	d808      	bhi.n	800dc02 <_parse_response+0xf6>
 800dbf0:	2a01      	cmp	r2, #1
 800dbf2:	d011      	beq.n	800dc18 <_parse_response+0x10c>
 800dbf4:	2a03      	cmp	r2, #3
 800dbf6:	d019      	beq.n	800dc2c <_parse_response+0x120>
 800dbf8:	b14a      	cbz	r2, 800dc0e <_parse_response+0x102>
 800dbfa:	1c9a      	adds	r2, r3, #2
 800dbfc:	785b      	ldrb	r3, [r3, #1]
 800dbfe:	4413      	add	r3, r2
 800dc00:	e7b8      	b.n	800db74 <_parse_response+0x68>
 800dc02:	2a36      	cmp	r2, #54	; 0x36
 800dc04:	d01f      	beq.n	800dc46 <_parse_response+0x13a>
 800dc06:	2aff      	cmp	r2, #255	; 0xff
 800dc08:	d1f7      	bne.n	800dbfa <_parse_response+0xee>
 800dc0a:	462b      	mov	r3, r5
 800dc0c:	e7b2      	b.n	800db74 <_parse_response+0x68>
 800dc0e:	3301      	adds	r3, #1
 800dc10:	e7b0      	b.n	800db74 <_parse_response+0x68>
 800dc12:	7898      	ldrb	r0, [r3, #2]
 800dc14:	3303      	adds	r3, #3
 800dc16:	e7ad      	b.n	800db74 <_parse_response+0x68>
 800dc18:	f893 b002 	ldrb.w	fp, [r3, #2]
 800dc1c:	f893 9003 	ldrb.w	r9, [r3, #3]
 800dc20:	f893 a004 	ldrb.w	sl, [r3, #4]
 800dc24:	795f      	ldrb	r7, [r3, #5]
 800dc26:	4616      	mov	r6, r2
 800dc28:	3306      	adds	r3, #6
 800dc2a:	e7a3      	b.n	800db74 <_parse_response+0x68>
 800dc2c:	789a      	ldrb	r2, [r3, #2]
 800dc2e:	78dc      	ldrb	r4, [r3, #3]
 800dc30:	9202      	str	r2, [sp, #8]
 800dc32:	791a      	ldrb	r2, [r3, #4]
 800dc34:	f04f 0c01 	mov.w	ip, #1
 800dc38:	9203      	str	r2, [sp, #12]
 800dc3a:	795a      	ldrb	r2, [r3, #5]
 800dc3c:	9204      	str	r2, [sp, #16]
 800dc3e:	785a      	ldrb	r2, [r3, #1]
 800dc40:	4413      	add	r3, r2
 800dc42:	3302      	adds	r3, #2
 800dc44:	e796      	b.n	800db74 <_parse_response+0x68>
 800dc46:	789a      	ldrb	r2, [r3, #2]
 800dc48:	f893 8005 	ldrb.w	r8, [r3, #5]
 800dc4c:	9205      	str	r2, [sp, #20]
 800dc4e:	78da      	ldrb	r2, [r3, #3]
 800dc50:	2101      	movs	r1, #1
 800dc52:	9206      	str	r2, [sp, #24]
 800dc54:	791a      	ldrb	r2, [r3, #4]
 800dc56:	3306      	adds	r3, #6
 800dc58:	9207      	str	r2, [sp, #28]
 800dc5a:	e78b      	b.n	800db74 <_parse_response+0x68>
 800dc5c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800dc60:	20009928 	andcs	r9, r0, r8, lsr #18
 800dc64:	200096f8 	strdcs	r9, [r0], -r8
 800dc68:	20009700 	andcs	r9, r0, r0, lsl #14
 800dc6c:	200096fc 	strdcs	r9, [r0], -ip

0800dc70 <memcpy.isra.0>:
 800dc70:	3801      	subs	r0, #1
 800dc72:	440a      	add	r2, r1
 800dc74:	4291      	cmp	r1, r2
 800dc76:	d100      	bne.n	800dc7a <memcpy.isra.0+0xa>
 800dc78:	4770      	bx	lr
 800dc7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dc7e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dc82:	e7f7      	b.n	800dc74 <memcpy.isra.0+0x4>

0800dc84 <dhcp_client>:
 800dc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc88:	b087      	sub	sp, #28
 800dc8a:	9203      	str	r2, [sp, #12]
 800dc8c:	4a77      	ldr	r2, [pc, #476]	; (800de6c <dhcp_client+0x1e8>)
 800dc8e:	460f      	mov	r7, r1
 800dc90:	4605      	mov	r5, r0
 800dc92:	f44f 7309 	mov.w	r3, #548	; 0x224
 800dc96:	4614      	mov	r4, r2
 800dc98:	2100      	movs	r1, #0
 800dc9a:	3b01      	subs	r3, #1
 800dc9c:	f802 1b01 	strb.w	r1, [r2], #1
 800dca0:	d1fb      	bne.n	800dc9a <dhcp_client+0x16>
 800dca2:	f240 1301 	movw	r3, #257	; 0x101
 800dca6:	2206      	movs	r2, #6
 800dca8:	4629      	mov	r1, r5
 800dcaa:	4871      	ldr	r0, [pc, #452]	; (800de70 <dhcp_client+0x1ec>)
 800dcac:	8023      	strh	r3, [r4, #0]
 800dcae:	70a2      	strb	r2, [r4, #2]
 800dcb0:	f7ff ffde 	bl	800dc70 <memcpy.isra.0>
 800dcb4:	4b6f      	ldr	r3, [pc, #444]	; (800de74 <dhcp_client+0x1f0>)
 800dcb6:	2044      	movs	r0, #68	; 0x44
 800dcb8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dcbc:	f240 1335 	movw	r3, #309	; 0x135
 800dcc0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800dcc4:	f7fe fd28 	bl	800c718 <udp_bind>
 800dcc8:	1e06      	subs	r6, r0, #0
 800dcca:	f2c0 80c9 	blt.w	800de60 <dhcp_client+0x1dc>
 800dcce:	f04f 0915 	mov.w	r9, #21
 800dcd2:	f8df a198 	ldr.w	sl, [pc, #408]	; 800de6c <dhcp_client+0x1e8>
 800dcd6:	f1b9 0901 	subs.w	r9, r9, #1
 800dcda:	d11f      	bne.n	800dd1c <dhcp_client+0x98>
 800dcdc:	464c      	mov	r4, r9
 800dcde:	2044      	movs	r0, #68	; 0x44
 800dce0:	f7fe fd34 	bl	800c74c <udp_unbind>
 800dce4:	2c00      	cmp	r4, #0
 800dce6:	f000 80be 	beq.w	800de66 <dhcp_client+0x1e2>
 800dcea:	2204      	movs	r2, #4
 800dcec:	4962      	ldr	r1, [pc, #392]	; (800de78 <dhcp_client+0x1f4>)
 800dcee:	a805      	add	r0, sp, #20
 800dcf0:	f7ff ffbe 	bl	800dc70 <memcpy.isra.0>
 800dcf4:	9b05      	ldr	r3, [sp, #20]
 800dcf6:	2204      	movs	r2, #4
 800dcf8:	4960      	ldr	r1, [pc, #384]	; (800de7c <dhcp_client+0x1f8>)
 800dcfa:	603b      	str	r3, [r7, #0]
 800dcfc:	a805      	add	r0, sp, #20
 800dcfe:	f7ff ffb7 	bl	800dc70 <memcpy.isra.0>
 800dd02:	9b05      	ldr	r3, [sp, #20]
 800dd04:	a805      	add	r0, sp, #20
 800dd06:	60bb      	str	r3, [r7, #8]
 800dd08:	2204      	movs	r2, #4
 800dd0a:	495d      	ldr	r1, [pc, #372]	; (800de80 <dhcp_client+0x1fc>)
 800dd0c:	f7ff ffb0 	bl	800dc70 <memcpy.isra.0>
 800dd10:	2000      	movs	r0, #0
 800dd12:	9b05      	ldr	r3, [sp, #20]
 800dd14:	607b      	str	r3, [r7, #4]
 800dd16:	b007      	add	sp, #28
 800dd18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd1c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800dd20:	f240 1807 	movw	r8, #263	; 0x107
 800dd24:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800dd28:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800dd2c:	782b      	ldrb	r3, [r5, #0]
 800dd2e:	4a55      	ldr	r2, [pc, #340]	; (800de84 <dhcp_client+0x200>)
 800dd30:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dd34:	786b      	ldrb	r3, [r5, #1]
 800dd36:	fa5f fb86 	uxtb.w	fp, r6
 800dd3a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dd3e:	78ab      	ldrb	r3, [r5, #2]
 800dd40:	4651      	mov	r1, sl
 800dd42:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dd46:	78eb      	ldrb	r3, [r5, #3]
 800dd48:	4658      	mov	r0, fp
 800dd4a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800dd4e:	792b      	ldrb	r3, [r5, #4]
 800dd50:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dd54:	796b      	ldrb	r3, [r5, #5]
 800dd56:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dd5a:	4b4b      	ldr	r3, [pc, #300]	; (800de88 <dhcp_client+0x204>)
 800dd5c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800dd60:	23ff      	movs	r3, #255	; 0xff
 800dd62:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800dd66:	2343      	movs	r3, #67	; 0x43
 800dd68:	f240 1205 	movw	r2, #261	; 0x105
 800dd6c:	9300      	str	r3, [sp, #0]
 800dd6e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dd72:	f7fe fd67 	bl	800c844 <udp_send>
 800dd76:	4629      	mov	r1, r5
 800dd78:	4630      	mov	r0, r6
 800dd7a:	f7ff fec7 	bl	800db0c <_parse_response>
 800dd7e:	2802      	cmp	r0, #2
 800dd80:	d1a9      	bne.n	800dcd6 <dhcp_client+0x52>
 800dd82:	f643 5303 	movw	r3, #15619	; 0x3d03
 800dd86:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800dd8a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800dd8e:	782b      	ldrb	r3, [r5, #0]
 800dd90:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800de8c <dhcp_client+0x208>
 800dd94:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dd98:	786b      	ldrb	r3, [r5, #1]
 800dd9a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dd9e:	78ab      	ldrb	r3, [r5, #2]
 800dda0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dda4:	78eb      	ldrb	r3, [r5, #3]
 800dda6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800ddaa:	792b      	ldrb	r3, [r5, #4]
 800ddac:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800ddb0:	796b      	ldrb	r3, [r5, #5]
 800ddb2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800ddb6:	f240 4332 	movw	r3, #1074	; 0x432
 800ddba:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800ddbe:	4b2e      	ldr	r3, [pc, #184]	; (800de78 <dhcp_client+0x1f4>)
 800ddc0:	881a      	ldrh	r2, [r3, #0]
 800ddc2:	885b      	ldrh	r3, [r3, #2]
 800ddc4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800ddc8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800ddcc:	f240 4336 	movw	r3, #1078	; 0x436
 800ddd0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800ddd4:	4b2e      	ldr	r3, [pc, #184]	; (800de90 <dhcp_client+0x20c>)
 800ddd6:	221e      	movs	r2, #30
 800ddd8:	681b      	ldr	r3, [r3, #0]
 800ddda:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800ddde:	230c      	movs	r3, #12
 800dde0:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800dde4:	9b03      	ldr	r3, [sp, #12]
 800dde6:	1e58      	subs	r0, r3, #1
 800dde8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ddec:	f1a2 0e1e 	sub.w	lr, r2, #30
 800ddf0:	1c51      	adds	r1, r2, #1
 800ddf2:	bb8b      	cbnz	r3, 800de58 <dhcp_client+0x1d4>
 800ddf4:	2037      	movs	r0, #55	; 0x37
 800ddf6:	18a3      	adds	r3, r4, r2
 800ddf8:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800ddfc:	2006      	movs	r0, #6
 800ddfe:	4421      	add	r1, r4
 800de00:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800de04:	2103      	movs	r1, #3
 800de06:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800de0a:	210f      	movs	r1, #15
 800de0c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800de10:	213a      	movs	r1, #58	; 0x3a
 800de12:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800de16:	213b      	movs	r1, #59	; 0x3b
 800de18:	f04f 0801 	mov.w	r8, #1
 800de1c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800de20:	21ff      	movs	r1, #255	; 0xff
 800de22:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800de26:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800de2a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800de2e:	2343      	movs	r3, #67	; 0x43
 800de30:	32f5      	adds	r2, #245	; 0xf5
 800de32:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800de36:	4651      	mov	r1, sl
 800de38:	9300      	str	r3, [sp, #0]
 800de3a:	b292      	uxth	r2, r2
 800de3c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800de40:	4658      	mov	r0, fp
 800de42:	f7fe fcff 	bl	800c844 <udp_send>
 800de46:	4629      	mov	r1, r5
 800de48:	4630      	mov	r0, r6
 800de4a:	f7ff fe5f 	bl	800db0c <_parse_response>
 800de4e:	2805      	cmp	r0, #5
 800de50:	f47f af41 	bne.w	800dcd6 <dhcp_client+0x52>
 800de54:	4644      	mov	r4, r8
 800de56:	e742      	b.n	800dcde <dhcp_client+0x5a>
 800de58:	460a      	mov	r2, r1
 800de5a:	f80c 3b01 	strb.w	r3, [ip], #1
 800de5e:	e7c3      	b.n	800dde8 <dhcp_client+0x164>
 800de60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800de64:	e757      	b.n	800dd16 <dhcp_client+0x92>
 800de66:	f06f 0001 	mvn.w	r0, #1
 800de6a:	e754      	b.n	800dd16 <dhcp_client+0x92>
 800de6c:	20009704 	andcs	r9, r0, r4, lsl #14
 800de70:	20009720 	andcs	r9, r0, r0, lsr #14
 800de74:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800de78:	200096fc 	strdcs	r9, [r0], -ip
 800de7c:	200096f8 	strdcs	r9, [r0], -r8
 800de80:	20009700 	andcs	r9, r0, r0, lsl #14
 800de84:	03010637 	movweq	r0, #5687	; 0x1637
 800de88:	3b3a0f06 	blcc	8e91aa8 <__exidx_end+0xe7eff8>
 800de8c:	2000980e 	andcs	r9, r0, lr, lsl #16
 800de90:	20009928 	andcs	r9, r0, r8, lsr #18

0800de94 <dhcp_client_release>:
 800de94:	b507      	push	{r0, r1, r2, lr}
 800de96:	2044      	movs	r0, #68	; 0x44
 800de98:	f7fe fc3e 	bl	800c718 <udp_bind>
 800de9c:	f243 6307 	movw	r3, #13831	; 0x3607
 800dea0:	4911      	ldr	r1, [pc, #68]	; (800dee8 <dhcp_client_release+0x54>)
 800dea2:	b2c0      	uxtb	r0, r0
 800dea4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800dea8:	2304      	movs	r3, #4
 800deaa:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800deae:	4b0f      	ldr	r3, [pc, #60]	; (800deec <dhcp_client_release+0x58>)
 800deb0:	781a      	ldrb	r2, [r3, #0]
 800deb2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800deb6:	785a      	ldrb	r2, [r3, #1]
 800deb8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800debc:	789a      	ldrb	r2, [r3, #2]
 800debe:	78db      	ldrb	r3, [r3, #3]
 800dec0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800dec4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800dec8:	23ff      	movs	r3, #255	; 0xff
 800deca:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800dece:	2343      	movs	r3, #67	; 0x43
 800ded0:	22fa      	movs	r2, #250	; 0xfa
 800ded2:	9300      	str	r3, [sp, #0]
 800ded4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ded8:	f7fe fcb4 	bl	800c844 <udp_send>
 800dedc:	2044      	movs	r0, #68	; 0x44
 800dede:	b003      	add	sp, #12
 800dee0:	f85d eb04 	ldr.w	lr, [sp], #4
 800dee4:	f7fe bc32 	b.w	800c74c <udp_unbind>
 800dee8:	20009704 	andcs	r9, r0, r4, lsl #14
 800deec:	20009928 	andcs	r9, r0, r8, lsr #18

0800def0 <memcpy.isra.0>:
 800def0:	3801      	subs	r0, #1
 800def2:	440a      	add	r2, r1
 800def4:	4291      	cmp	r1, r2
 800def6:	d100      	bne.n	800defa <memcpy.isra.0+0xa>
 800def8:	4770      	bx	lr
 800defa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800defe:	f800 3f01 	strb.w	r3, [r0, #1]!
 800df02:	e7f7      	b.n	800def4 <memcpy.isra.0+0x4>

0800df04 <_send_report>:
 800df04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800df06:	491c      	ldr	r1, [pc, #112]	; (800df78 <_send_report+0x74>)
 800df08:	4c1c      	ldr	r4, [pc, #112]	; (800df7c <_send_report+0x78>)
 800df0a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800df0e:	9001      	str	r0, [sp, #4]
 800df10:	70cb      	strb	r3, [r1, #3]
 800df12:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800df16:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800df1a:	710b      	strb	r3, [r1, #4]
 800df1c:	7148      	strb	r0, [r1, #5]
 800df1e:	2206      	movs	r2, #6
 800df20:	4620      	mov	r0, r4
 800df22:	f7ff ffe5 	bl	800def0 <memcpy.isra.0>
 800df26:	2204      	movs	r2, #4
 800df28:	2700      	movs	r7, #0
 800df2a:	4d15      	ldr	r5, [pc, #84]	; (800df80 <_send_report+0x7c>)
 800df2c:	eb0d 0102 	add.w	r1, sp, r2
 800df30:	882b      	ldrh	r3, [r5, #0]
 800df32:	f104 001e 	add.w	r0, r4, #30
 800df36:	f104 060e 	add.w	r6, r4, #14
 800df3a:	8263      	strh	r3, [r4, #18]
 800df3c:	f7ff ffd8 	bl	800def0 <memcpy.isra.0>
 800df40:	2118      	movs	r1, #24
 800df42:	4630      	mov	r0, r6
 800df44:	8327      	strh	r7, [r4, #24]
 800df46:	f000 f8c6 	bl	800e0d6 <net_chksum>
 800df4a:	2204      	movs	r2, #4
 800df4c:	8320      	strh	r0, [r4, #24]
 800df4e:	eb0d 0102 	add.w	r1, sp, r2
 800df52:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800df56:	f7ff ffcb 	bl	800def0 <memcpy.isra.0>
 800df5a:	2120      	movs	r1, #32
 800df5c:	4630      	mov	r0, r6
 800df5e:	8527      	strh	r7, [r4, #40]	; 0x28
 800df60:	f000 f8b9 	bl	800e0d6 <net_chksum>
 800df64:	212e      	movs	r1, #46	; 0x2e
 800df66:	8520      	strh	r0, [r4, #40]	; 0x28
 800df68:	4620      	mov	r0, r4
 800df6a:	f001 ffc3 	bl	800fef4 <emac_eth_send>
 800df6e:	882b      	ldrh	r3, [r5, #0]
 800df70:	3301      	adds	r3, #1
 800df72:	802b      	strh	r3, [r5, #0]
 800df74:	b003      	add	sp, #12
 800df76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df78:	20009a84 	andcs	r9, r0, r4, lsl #21
 800df7c:	20009a8c 	andcs	r9, r0, ip, lsl #21
 800df80:	20009a4c 	andcs	r9, r0, ip, asr #20

0800df84 <igmp_set_ip>:
 800df84:	b507      	push	{r0, r1, r2, lr}
 800df86:	2204      	movs	r2, #4
 800df88:	6803      	ldr	r3, [r0, #0]
 800df8a:	eb0d 0102 	add.w	r1, sp, r2
 800df8e:	4806      	ldr	r0, [pc, #24]	; (800dfa8 <igmp_set_ip+0x24>)
 800df90:	9301      	str	r3, [sp, #4]
 800df92:	f7ff ffad 	bl	800def0 <memcpy.isra.0>
 800df96:	2204      	movs	r2, #4
 800df98:	4804      	ldr	r0, [pc, #16]	; (800dfac <igmp_set_ip+0x28>)
 800df9a:	eb0d 0102 	add.w	r1, sp, r2
 800df9e:	f7ff ffa7 	bl	800def0 <memcpy.isra.0>
 800dfa2:	b003      	add	sp, #12
 800dfa4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfa8:	20009aa6 	andcs	r9, r0, r6, lsr #21
 800dfac:	20009a6e 	andcs	r9, r0, lr, ror #20

0800dfb0 <igmp_timer>:
 800dfb0:	b570      	push	{r4, r5, r6, lr}
 800dfb2:	2500      	movs	r5, #0
 800dfb4:	2602      	movs	r6, #2
 800dfb6:	4c0a      	ldr	r4, [pc, #40]	; (800dfe0 <igmp_timer+0x30>)
 800dfb8:	7963      	ldrb	r3, [r4, #5]
 800dfba:	2b01      	cmp	r3, #1
 800dfbc:	d109      	bne.n	800dfd2 <igmp_timer+0x22>
 800dfbe:	7923      	ldrb	r3, [r4, #4]
 800dfc0:	b13b      	cbz	r3, 800dfd2 <igmp_timer+0x22>
 800dfc2:	3b01      	subs	r3, #1
 800dfc4:	b2db      	uxtb	r3, r3
 800dfc6:	7123      	strb	r3, [r4, #4]
 800dfc8:	b91b      	cbnz	r3, 800dfd2 <igmp_timer+0x22>
 800dfca:	6820      	ldr	r0, [r4, #0]
 800dfcc:	f7ff ff9a 	bl	800df04 <_send_report>
 800dfd0:	7166      	strb	r6, [r4, #5]
 800dfd2:	3501      	adds	r5, #1
 800dfd4:	2d24      	cmp	r5, #36	; 0x24
 800dfd6:	f104 0408 	add.w	r4, r4, #8
 800dfda:	d1ed      	bne.n	800dfb8 <igmp_timer+0x8>
 800dfdc:	bd70      	pop	{r4, r5, r6, pc}
 800dfde:	bf00      	nop
 800dfe0:	2000992c 	andcs	r9, r0, ip, lsr #18

0800dfe4 <igmp_join>:
 800dfe4:	b538      	push	{r3, r4, r5, lr}
 800dfe6:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800dfea:	2be0      	cmp	r3, #224	; 0xe0
 800dfec:	d11b      	bne.n	800e026 <igmp_join+0x42>
 800dfee:	4911      	ldr	r1, [pc, #68]	; (800e034 <igmp_join+0x50>)
 800dff0:	680c      	ldr	r4, [r1, #0]
 800dff2:	2c24      	cmp	r4, #36	; 0x24
 800dff4:	d01a      	beq.n	800e02c <igmp_join+0x48>
 800dff6:	2300      	movs	r3, #0
 800dff8:	4a0f      	ldr	r2, [pc, #60]	; (800e038 <igmp_join+0x54>)
 800dffa:	429c      	cmp	r4, r3
 800dffc:	dc0d      	bgt.n	800e01a <igmp_join+0x36>
 800dffe:	f44f 7381 	mov.w	r3, #258	; 0x102
 800e002:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800e006:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800e00a:	8093      	strh	r3, [r2, #4]
 800e00c:	1c63      	adds	r3, r4, #1
 800e00e:	600b      	str	r3, [r1, #0]
 800e010:	f7ff ff78 	bl	800df04 <_send_report>
 800e014:	4623      	mov	r3, r4
 800e016:	4618      	mov	r0, r3
 800e018:	bd38      	pop	{r3, r4, r5, pc}
 800e01a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e01e:	4285      	cmp	r5, r0
 800e020:	d0f9      	beq.n	800e016 <igmp_join+0x32>
 800e022:	3301      	adds	r3, #1
 800e024:	e7e9      	b.n	800dffa <igmp_join+0x16>
 800e026:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e02a:	e7f4      	b.n	800e016 <igmp_join+0x32>
 800e02c:	f06f 0301 	mvn.w	r3, #1
 800e030:	e7f1      	b.n	800e016 <igmp_join+0x32>
 800e032:	bf00      	nop
 800e034:	20009a50 	andcs	r9, r0, r0, asr sl
 800e038:	2000992c 	andcs	r9, r0, ip, lsr #18

0800e03c <igmp_leave>:
 800e03c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e040:	2600      	movs	r6, #0
 800e042:	4f1c      	ldr	r7, [pc, #112]	; (800e0b4 <igmp_leave+0x78>)
 800e044:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800e048:	4283      	cmp	r3, r0
 800e04a:	d007      	beq.n	800e05c <igmp_leave+0x20>
 800e04c:	3601      	adds	r6, #1
 800e04e:	2e24      	cmp	r6, #36	; 0x24
 800e050:	d1f8      	bne.n	800e044 <igmp_leave+0x8>
 800e052:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e056:	b002      	add	sp, #8
 800e058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e05c:	2400      	movs	r4, #0
 800e05e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800e0b8 <igmp_leave+0x7c>
 800e062:	4d16      	ldr	r5, [pc, #88]	; (800e0bc <igmp_leave+0x80>)
 800e064:	f8b8 3000 	ldrh.w	r3, [r8]
 800e068:	2118      	movs	r1, #24
 800e06a:	9001      	str	r0, [sp, #4]
 800e06c:	4814      	ldr	r0, [pc, #80]	; (800e0c0 <igmp_leave+0x84>)
 800e06e:	826b      	strh	r3, [r5, #18]
 800e070:	832c      	strh	r4, [r5, #24]
 800e072:	f000 f830 	bl	800e0d6 <net_chksum>
 800e076:	2204      	movs	r2, #4
 800e078:	8328      	strh	r0, [r5, #24]
 800e07a:	eb0d 0102 	add.w	r1, sp, r2
 800e07e:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800e082:	f7ff ff35 	bl	800def0 <memcpy.isra.0>
 800e086:	2120      	movs	r1, #32
 800e088:	f105 000e 	add.w	r0, r5, #14
 800e08c:	852c      	strh	r4, [r5, #40]	; 0x28
 800e08e:	f000 f822 	bl	800e0d6 <net_chksum>
 800e092:	212e      	movs	r1, #46	; 0x2e
 800e094:	8528      	strh	r0, [r5, #40]	; 0x28
 800e096:	4628      	mov	r0, r5
 800e098:	f001 ff2c 	bl	800fef4 <emac_eth_send>
 800e09c:	f8b8 3000 	ldrh.w	r3, [r8]
 800e0a0:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800e0a4:	3301      	adds	r3, #1
 800e0a6:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 800e0aa:	4620      	mov	r0, r4
 800e0ac:	f8a8 3000 	strh.w	r3, [r8]
 800e0b0:	80bc      	strh	r4, [r7, #4]
 800e0b2:	e7d0      	b.n	800e056 <igmp_leave+0x1a>
 800e0b4:	2000992c 	andcs	r9, r0, ip, lsr #18
 800e0b8:	20009a4c 	andcs	r9, r0, ip, asr #20
 800e0bc:	20009a54 	andcs	r9, r0, r4, asr sl
 800e0c0:	20009a9a 	mulcs	r0, sl, sl

0800e0c4 <ip_set_ip>:
 800e0c4:	b510      	push	{r4, lr}
 800e0c6:	4604      	mov	r4, r0
 800e0c8:	f7fe fb06 	bl	800c6d8 <udp_set_ip>
 800e0cc:	4620      	mov	r0, r4
 800e0ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e0d2:	f7ff bf57 	b.w	800df84 <igmp_set_ip>

0800e0d6 <net_chksum>:
 800e0d6:	2300      	movs	r3, #0
 800e0d8:	f021 0201 	bic.w	r2, r1, #1
 800e0dc:	b530      	push	{r4, r5, lr}
 800e0de:	1884      	adds	r4, r0, r2
 800e0e0:	42a0      	cmp	r0, r4
 800e0e2:	d10b      	bne.n	800e0fc <net_chksum+0x26>
 800e0e4:	4291      	cmp	r1, r2
 800e0e6:	d004      	beq.n	800e0f2 <net_chksum+0x1c>
 800e0e8:	7802      	ldrb	r2, [r0, #0]
 800e0ea:	0212      	lsls	r2, r2, #8
 800e0ec:	ba52      	rev16	r2, r2
 800e0ee:	b292      	uxth	r2, r2
 800e0f0:	4413      	add	r3, r2
 800e0f2:	0c1a      	lsrs	r2, r3, #16
 800e0f4:	d106      	bne.n	800e104 <net_chksum+0x2e>
 800e0f6:	43d8      	mvns	r0, r3
 800e0f8:	b280      	uxth	r0, r0
 800e0fa:	bd30      	pop	{r4, r5, pc}
 800e0fc:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e100:	442b      	add	r3, r5
 800e102:	e7ed      	b.n	800e0e0 <net_chksum+0xa>
 800e104:	b29b      	uxth	r3, r3
 800e106:	e7f3      	b.n	800e0f0 <net_chksum+0x1a>

0800e108 <memcpy.isra.0>:
 800e108:	3801      	subs	r0, #1
 800e10a:	440a      	add	r2, r1
 800e10c:	4291      	cmp	r1, r2
 800e10e:	d100      	bne.n	800e112 <memcpy.isra.0+0xa>
 800e110:	4770      	bx	lr
 800e112:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e116:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e11a:	e7f7      	b.n	800e10c <memcpy.isra.0+0x4>

0800e11c <properties::convert_json_file(char*, unsigned short, bool)>:
 800e11c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e120:	4603      	mov	r3, r0
 800e122:	7800      	ldrb	r0, [r0, #0]
 800e124:	287b      	cmp	r0, #123	; 0x7b
 800e126:	f040 80a2 	bne.w	800e26e <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 800e12a:	b17a      	cbz	r2, 800e14c <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 800e12c:	2401      	movs	r4, #1
 800e12e:	461e      	mov	r6, r3
 800e130:	4620      	mov	r0, r4
 800e132:	2a00      	cmp	r2, #0
 800e134:	bf0c      	ite	eq
 800e136:	f04f 0c0a 	moveq.w	ip, #10
 800e13a:	f04f 0c00 	movne.w	ip, #0
 800e13e:	273d      	movs	r7, #61	; 0x3d
 800e140:	42a1      	cmp	r1, r4
 800e142:	d850      	bhi.n	800e1e6 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e148:	463c      	mov	r4, r7
 800e14a:	e7f2      	b.n	800e132 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e14c:	2023      	movs	r0, #35	; 0x23
 800e14e:	f803 0b01 	strb.w	r0, [r3], #1
 800e152:	461c      	mov	r4, r3
 800e154:	2701      	movs	r7, #1
 800e156:	42b9      	cmp	r1, r7
 800e158:	d811      	bhi.n	800e17e <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 800e15a:	2001      	movs	r0, #1
 800e15c:	461e      	mov	r6, r3
 800e15e:	230a      	movs	r3, #10
 800e160:	4625      	mov	r5, r4
 800e162:	f806 3b01 	strb.w	r3, [r6], #1
 800e166:	3001      	adds	r0, #1
 800e168:	462b      	mov	r3, r5
 800e16a:	781c      	ldrb	r4, [r3, #0]
 800e16c:	3501      	adds	r5, #1
 800e16e:	2c7b      	cmp	r4, #123	; 0x7b
 800e170:	d0ea      	beq.n	800e148 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 800e172:	42b9      	cmp	r1, r7
 800e174:	f107 0401 	add.w	r4, r7, #1
 800e178:	d9db      	bls.n	800e132 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 800e17a:	4627      	mov	r7, r4
 800e17c:	e7f4      	b.n	800e168 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 800e17e:	f814 0b01 	ldrb.w	r0, [r4], #1
 800e182:	2822      	cmp	r0, #34	; 0x22
 800e184:	d119      	bne.n	800e1ba <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 800e186:	46a4      	mov	ip, r4
 800e188:	461d      	mov	r5, r3
 800e18a:	2601      	movs	r6, #1
 800e18c:	f89c e000 	ldrb.w	lr, [ip]
 800e190:	4664      	mov	r4, ip
 800e192:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e196:	462b      	mov	r3, r5
 800e198:	4630      	mov	r0, r6
 800e19a:	f10c 0c01 	add.w	ip, ip, #1
 800e19e:	f105 0501 	add.w	r5, r5, #1
 800e1a2:	f106 0601 	add.w	r6, r6, #1
 800e1a6:	d0d9      	beq.n	800e15c <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e1a8:	3701      	adds	r7, #1
 800e1aa:	42b9      	cmp	r1, r7
 800e1ac:	4664      	mov	r4, ip
 800e1ae:	f805 ec01 	strb.w	lr, [r5, #-1]
 800e1b2:	d8eb      	bhi.n	800e18c <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e1b4:	4630      	mov	r0, r6
 800e1b6:	462b      	mov	r3, r5
 800e1b8:	e7d0      	b.n	800e15c <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 800e1ba:	3701      	adds	r7, #1
 800e1bc:	e7cb      	b.n	800e156 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 800e1be:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e1c2:	d110      	bne.n	800e1e6 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 800e1c4:	eba0 0803 	sub.w	r8, r0, r3
 800e1c8:	461a      	mov	r2, r3
 800e1ca:	eb08 0003 	add.w	r0, r8, r3
 800e1ce:	f813 eb01 	ldrb.w	lr, [r3], #1
 800e1d2:	1c65      	adds	r5, r4, #1
 800e1d4:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e1d8:	d04c      	beq.n	800e274 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 800e1da:	42a1      	cmp	r1, r4
 800e1dc:	d911      	bls.n	800e202 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e1de:	462c      	mov	r4, r5
 800e1e0:	f806 eb01 	strb.w	lr, [r6], #1
 800e1e4:	e7f0      	b.n	800e1c8 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e1e6:	42a1      	cmp	r1, r4
 800e1e8:	461d      	mov	r5, r3
 800e1ea:	f893 e000 	ldrb.w	lr, [r3]
 800e1ee:	f104 0401 	add.w	r4, r4, #1
 800e1f2:	f103 0301 	add.w	r3, r3, #1
 800e1f6:	d8e2      	bhi.n	800e1be <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e1f8:	462b      	mov	r3, r5
 800e1fa:	e7e3      	b.n	800e1c4 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 800e1fc:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 800e200:	d009      	beq.n	800e216 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e202:	42a9      	cmp	r1, r5
 800e204:	4614      	mov	r4, r2
 800e206:	f892 e000 	ldrb.w	lr, [r2]
 800e20a:	f105 0501 	add.w	r5, r5, #1
 800e20e:	f102 0201 	add.w	r2, r2, #1
 800e212:	d8f3      	bhi.n	800e1fc <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 800e214:	4622      	mov	r2, r4
 800e216:	7814      	ldrb	r4, [r2, #0]
 800e218:	4696      	mov	lr, r2
 800e21a:	2c2f      	cmp	r4, #47	; 0x2f
 800e21c:	462b      	mov	r3, r5
 800e21e:	f102 0201 	add.w	r2, r2, #1
 800e222:	f105 0501 	add.w	r5, r5, #1
 800e226:	d81a      	bhi.n	800e25e <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 800e228:	4299      	cmp	r1, r3
 800e22a:	d8f4      	bhi.n	800e216 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 800e22c:	2c22      	cmp	r4, #34	; 0x22
 800e22e:	bf08      	it	eq
 800e230:	4696      	moveq	lr, r2
 800e232:	4673      	mov	r3, lr
 800e234:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e238:	1c6c      	adds	r4, r5, #1
 800e23a:	2a22      	cmp	r2, #34	; 0x22
 800e23c:	d011      	beq.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e23e:	2a2c      	cmp	r2, #44	; 0x2c
 800e240:	d00f      	beq.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e242:	2a7d      	cmp	r2, #125	; 0x7d
 800e244:	d00d      	beq.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 800e246:	42a9      	cmp	r1, r5
 800e248:	d90f      	bls.n	800e26a <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 800e24a:	f1a2 0520 	sub.w	r5, r2, #32
 800e24e:	2d5a      	cmp	r5, #90	; 0x5a
 800e250:	d803      	bhi.n	800e25a <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 800e252:	469e      	mov	lr, r3
 800e254:	f806 2b01 	strb.w	r2, [r6], #1
 800e258:	3001      	adds	r0, #1
 800e25a:	4625      	mov	r5, r4
 800e25c:	e7e9      	b.n	800e232 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e25e:	461d      	mov	r5, r3
 800e260:	e7e7      	b.n	800e232 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 800e262:	462c      	mov	r4, r5
 800e264:	f806 cb01 	strb.w	ip, [r6], #1
 800e268:	3001      	adds	r0, #1
 800e26a:	3401      	adds	r4, #1
 800e26c:	e768      	b.n	800e140 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e26e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e272:	e767      	b.n	800e144 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 800e274:	4625      	mov	r5, r4
 800e276:	f806 7b01 	strb.w	r7, [r6], #1
 800e27a:	3001      	adds	r0, #1
 800e27c:	e7c1      	b.n	800e202 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

0800e280 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e280:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e284:	6002      	str	r2, [r0, #0]
 800e286:	4614      	mov	r4, r2
 800e288:	2200      	movs	r2, #0
 800e28a:	80c2      	strh	r2, [r0, #6]
 800e28c:	4a1c      	ldr	r2, [pc, #112]	; (800e300 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e28e:	4606      	mov	r6, r0
 800e290:	7812      	ldrb	r2, [r2, #0]
 800e292:	8083      	strh	r3, [r0, #4]
 800e294:	f002 0201 	and.w	r2, r2, #1
 800e298:	7202      	strb	r2, [r0, #8]
 800e29a:	4608      	mov	r0, r1
 800e29c:	4605      	mov	r5, r0
 800e29e:	782f      	ldrb	r7, [r5, #0]
 800e2a0:	3001      	adds	r0, #1
 800e2a2:	2f00      	cmp	r7, #0
 800e2a4:	d1fa      	bne.n	800e29c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e2a6:	1a6d      	subs	r5, r5, r1
 800e2a8:	b29b      	uxth	r3, r3
 800e2aa:	b1d2      	cbz	r2, 800e2e2 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e2ac:	1d2f      	adds	r7, r5, #4
 800e2ae:	429f      	cmp	r7, r3
 800e2b0:	d814      	bhi.n	800e2dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e2b2:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e2b6:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e2ba:	462a      	mov	r2, r5
 800e2bc:	f884 8000 	strb.w	r8, [r4]
 800e2c0:	f884 9001 	strb.w	r9, [r4, #1]
 800e2c4:	1ca0      	adds	r0, r4, #2
 800e2c6:	f000 fe52 	bl	800ef6e <memmove>
 800e2ca:	223a      	movs	r2, #58	; 0x3a
 800e2cc:	1963      	adds	r3, r4, r5
 800e2ce:	3505      	adds	r5, #5
 800e2d0:	f883 9002 	strb.w	r9, [r3, #2]
 800e2d4:	70da      	strb	r2, [r3, #3]
 800e2d6:	80f5      	strh	r5, [r6, #6]
 800e2d8:	f804 8007 	strb.w	r8, [r4, r7]
 800e2dc:	4630      	mov	r0, r6
 800e2de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e2e2:	1caf      	adds	r7, r5, #2
 800e2e4:	429f      	cmp	r7, r3
 800e2e6:	d8f9      	bhi.n	800e2dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e2e8:	4620      	mov	r0, r4
 800e2ea:	2323      	movs	r3, #35	; 0x23
 800e2ec:	462a      	mov	r2, r5
 800e2ee:	f800 3b01 	strb.w	r3, [r0], #1
 800e2f2:	f000 fe3c 	bl	800ef6e <memmove>
 800e2f6:	230a      	movs	r3, #10
 800e2f8:	442c      	add	r4, r5
 800e2fa:	7063      	strb	r3, [r4, #1]
 800e2fc:	80f7      	strh	r7, [r6, #6]
 800e2fe:	e7ed      	b.n	800e2dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e300:	20009aba 			; <UNDEFINED> instruction: 0x20009aba

0800e304 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e304:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e306:	469c      	mov	ip, r3
 800e308:	8885      	ldrh	r5, [r0, #4]
 800e30a:	88c3      	ldrh	r3, [r0, #6]
 800e30c:	b085      	sub	sp, #20
 800e30e:	42ab      	cmp	r3, r5
 800e310:	d302      	bcc.n	800e318 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e312:	2000      	movs	r0, #0
 800e314:	b005      	add	sp, #20
 800e316:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e318:	4604      	mov	r4, r0
 800e31a:	6800      	ldr	r0, [r0, #0]
 800e31c:	1aed      	subs	r5, r5, r3
 800e31e:	4418      	add	r0, r3
 800e320:	b2d6      	uxtb	r6, r2
 800e322:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e326:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e32a:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e32e:	0e12      	lsrs	r2, r2, #24
 800e330:	f1bc 0f00 	cmp.w	ip, #0
 800e334:	d109      	bne.n	800e34a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e336:	f1be 0f00 	cmp.w	lr, #0
 800e33a:	d109      	bne.n	800e350 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e33c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e340:	e9cd 6700 	strd	r6, r7, [sp]
 800e344:	460b      	mov	r3, r1
 800e346:	4a0e      	ldr	r2, [pc, #56]	; (800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e348:	e008      	b.n	800e35c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e34a:	f1be 0f00 	cmp.w	lr, #0
 800e34e:	d00f      	beq.n	800e370 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e350:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e354:	460b      	mov	r3, r1
 800e356:	e9cd 6700 	strd	r6, r7, [sp]
 800e35a:	4a0a      	ldr	r2, [pc, #40]	; (800e384 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e35c:	4629      	mov	r1, r5
 800e35e:	f7fa fa6d 	bl	800883c <snprintf>
 800e362:	4285      	cmp	r5, r0
 800e364:	dbd5      	blt.n	800e312 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e366:	88e3      	ldrh	r3, [r4, #6]
 800e368:	4403      	add	r3, r0
 800e36a:	80e3      	strh	r3, [r4, #6]
 800e36c:	2001      	movs	r0, #1
 800e36e:	e7d1      	b.n	800e314 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e370:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e374:	e9cd 6700 	strd	r6, r7, [sp]
 800e378:	460b      	mov	r3, r1
 800e37a:	4a03      	ldr	r2, [pc, #12]	; (800e388 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e37c:	e7ee      	b.n	800e35c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e37e:	bf00      	nop
 800e380:	08012657 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sl, sp}
 800e384:	08012643 	stmdaeq	r1, {r0, r1, r6, r9, sl, sp}
 800e388:	08012658 	stmdaeq	r1, {r3, r4, r6, r9, sl, sp}

0800e38c <PropertiesBuilder::AddComment(char const*)>:
 800e38c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e38e:	7a06      	ldrb	r6, [r0, #8]
 800e390:	b996      	cbnz	r6, 800e3b8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e392:	4604      	mov	r4, r0
 800e394:	88c0      	ldrh	r0, [r0, #6]
 800e396:	88a5      	ldrh	r5, [r4, #4]
 800e398:	42a8      	cmp	r0, r5
 800e39a:	d20d      	bcs.n	800e3b8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e39c:	6827      	ldr	r7, [r4, #0]
 800e39e:	1a2d      	subs	r5, r5, r0
 800e3a0:	460b      	mov	r3, r1
 800e3a2:	4a06      	ldr	r2, [pc, #24]	; (800e3bc <PropertiesBuilder::AddComment(char const*)+0x30>)
 800e3a4:	4629      	mov	r1, r5
 800e3a6:	4438      	add	r0, r7
 800e3a8:	f7fa fa48 	bl	800883c <snprintf>
 800e3ac:	4285      	cmp	r5, r0
 800e3ae:	bfa1      	itttt	ge
 800e3b0:	2601      	movge	r6, #1
 800e3b2:	88e3      	ldrhge	r3, [r4, #6]
 800e3b4:	18c0      	addge	r0, r0, r3
 800e3b6:	80e0      	strhge	r0, [r4, #6]
 800e3b8:	4630      	mov	r0, r6
 800e3ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3bc:	08012668 	stmdaeq	r1, {r3, r5, r6, r9, sl, sp}

0800e3c0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800e3c0:	e9c0 1200 	strd	r1, r2, [r0]
 800e3c4:	4770      	bx	lr

0800e3c6 <ReadConfigFile::~ReadConfigFile()>:
 800e3c6:	4770      	bx	lr

0800e3c8 <ReadConfigFile::Read(char const*, unsigned int)>:
 800e3c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3cc:	4606      	mov	r6, r0
 800e3ce:	460d      	mov	r5, r1
 800e3d0:	4614      	mov	r4, r2
 800e3d2:	f04f 0800 	mov.w	r8, #0
 800e3d6:	b090      	sub	sp, #64	; 0x40
 800e3d8:	b33c      	cbz	r4, 800e42a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e3da:	466b      	mov	r3, sp
 800e3dc:	462a      	mov	r2, r5
 800e3de:	4619      	mov	r1, r3
 800e3e0:	e007      	b.n	800e3f2 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 800e3e2:	f803 7b01 	strb.w	r7, [r3], #1
 800e3e6:	1a58      	subs	r0, r3, r1
 800e3e8:	283f      	cmp	r0, #63	; 0x3f
 800e3ea:	4615      	mov	r5, r2
 800e3ec:	dc1d      	bgt.n	800e42a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e3ee:	3c01      	subs	r4, #1
 800e3f0:	d00f      	beq.n	800e412 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e3f2:	7817      	ldrb	r7, [r2, #0]
 800e3f4:	4610      	mov	r0, r2
 800e3f6:	2f0d      	cmp	r7, #13
 800e3f8:	f102 0201 	add.w	r2, r2, #1
 800e3fc:	d001      	beq.n	800e402 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e3fe:	2f0a      	cmp	r7, #10
 800e400:	d1ef      	bne.n	800e3e2 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 800e402:	4605      	mov	r5, r0
 800e404:	b12c      	cbz	r4, 800e412 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 800e406:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e40a:	2a0d      	cmp	r2, #13
 800e40c:	d00b      	beq.n	800e426 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e40e:	2a0a      	cmp	r2, #10
 800e410:	d009      	beq.n	800e426 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e412:	f89d 2000 	ldrb.w	r2, [sp]
 800e416:	2a60      	cmp	r2, #96	; 0x60
 800e418:	d9de      	bls.n	800e3d8 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e41a:	f883 8000 	strb.w	r8, [r3]
 800e41e:	e9d6 3000 	ldrd	r3, r0, [r6]
 800e422:	4798      	blx	r3
 800e424:	e7d8      	b.n	800e3d8 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e426:	3c01      	subs	r4, #1
 800e428:	e7eb      	b.n	800e402 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 800e42a:	b010      	add	sp, #64	; 0x40
 800e42c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e430 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800e430:	b570      	push	{r4, r5, r6, lr}
 800e432:	4615      	mov	r5, r2
 800e434:	461c      	mov	r4, r3
 800e436:	f000 f890 	bl	800e55a <Sscan::checkName(char const*, char const*)>
 800e43a:	b180      	cbz	r0, 800e45e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 800e43c:	2100      	movs	r1, #0
 800e43e:	5c43      	ldrb	r3, [r0, r1]
 800e440:	6826      	ldr	r6, [r4, #0]
 800e442:	b28a      	uxth	r2, r1
 800e444:	b143      	cbz	r3, 800e458 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e446:	42b2      	cmp	r2, r6
 800e448:	d303      	bcc.n	800e452 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 800e44a:	2b0a      	cmp	r3, #10
 800e44c:	d004      	beq.n	800e458 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 800e44e:	2002      	movs	r0, #2
 800e450:	e004      	b.n	800e45c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 800e452:	546b      	strb	r3, [r5, r1]
 800e454:	3101      	adds	r1, #1
 800e456:	e7f2      	b.n	800e43e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800e458:	2000      	movs	r0, #0
 800e45a:	6022      	str	r2, [r4, #0]
 800e45c:	bd70      	pop	{r4, r5, r6, pc}
 800e45e:	2001      	movs	r0, #1
 800e460:	e7fc      	b.n	800e45c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

0800e462 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800e462:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e464:	4615      	mov	r5, r2
 800e466:	f000 f878 	bl	800e55a <Sscan::checkName(char const*, char const*)>
 800e46a:	bb58      	cbnz	r0, 800e4c4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 800e46c:	2001      	movs	r0, #1
 800e46e:	e027      	b.n	800e4c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e470:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800e474:	2b09      	cmp	r3, #9
 800e476:	d822      	bhi.n	800e4be <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e478:	4603      	mov	r3, r0
 800e47a:	fb0c 2101 	mla	r1, ip, r1, r2
 800e47e:	3930      	subs	r1, #48	; 0x30
 800e480:	4618      	mov	r0, r3
 800e482:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e486:	2a2e      	cmp	r2, #46	; 0x2e
 800e488:	d115      	bne.n	800e4b6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800e48a:	29ff      	cmp	r1, #255	; 0xff
 800e48c:	d817      	bhi.n	800e4be <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e48e:	3401      	adds	r4, #1
 800e490:	2c03      	cmp	r4, #3
 800e492:	f806 1b01 	strb.w	r1, [r6], #1
 800e496:	d119      	bne.n	800e4cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 800e498:	2400      	movs	r4, #0
 800e49a:	260a      	movs	r6, #10
 800e49c:	1d1a      	adds	r2, r3, #4
 800e49e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e4a2:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800e4a6:	d115      	bne.n	800e4d4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 800e4a8:	2cff      	cmp	r4, #255	; 0xff
 800e4aa:	d808      	bhi.n	800e4be <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e4ac:	f88d 4007 	strb.w	r4, [sp, #7]
 800e4b0:	9b01      	ldr	r3, [sp, #4]
 800e4b2:	602b      	str	r3, [r5, #0]
 800e4b4:	e004      	b.n	800e4c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 800e4b6:	2a00      	cmp	r2, #0
 800e4b8:	d0e7      	beq.n	800e48a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e4ba:	42b8      	cmp	r0, r7
 800e4bc:	d1d8      	bne.n	800e470 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 800e4be:	2002      	movs	r0, #2
 800e4c0:	b003      	add	sp, #12
 800e4c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e4c4:	2400      	movs	r4, #0
 800e4c6:	f04f 0c0a 	mov.w	ip, #10
 800e4ca:	ae01      	add	r6, sp, #4
 800e4cc:	4603      	mov	r3, r0
 800e4ce:	2100      	movs	r1, #0
 800e4d0:	1d07      	adds	r7, r0, #4
 800e4d2:	e7d5      	b.n	800e480 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 800e4d4:	4293      	cmp	r3, r2
 800e4d6:	d0f2      	beq.n	800e4be <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e4d8:	3930      	subs	r1, #48	; 0x30
 800e4da:	2909      	cmp	r1, #9
 800e4dc:	d8ef      	bhi.n	800e4be <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 800e4de:	fb06 1404 	mla	r4, r6, r4, r1
 800e4e2:	e7dc      	b.n	800e49e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0800e4e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800e4e4:	b538      	push	{r3, r4, r5, lr}
 800e4e6:	4615      	mov	r5, r2
 800e4e8:	f000 f837 	bl	800e55a <Sscan::checkName(char const*, char const*)>
 800e4ec:	b1a0      	cbz	r0, 800e518 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800e4ee:	4604      	mov	r4, r0
 800e4f0:	2100      	movs	r1, #0
 800e4f2:	220a      	movs	r2, #10
 800e4f4:	7823      	ldrb	r3, [r4, #0]
 800e4f6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e4fa:	2809      	cmp	r0, #9
 800e4fc:	d80e      	bhi.n	800e51c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e4fe:	fb02 3101 	mla	r1, r2, r1, r3
 800e502:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e506:	3930      	subs	r1, #48	; 0x30
 800e508:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e50c:	d1f2      	bne.n	800e4f4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800e50e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e512:	d203      	bcs.n	800e51c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e514:	8029      	strh	r1, [r5, #0]
 800e516:	bd38      	pop	{r3, r4, r5, pc}
 800e518:	2001      	movs	r0, #1
 800e51a:	e7fc      	b.n	800e516 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800e51c:	2002      	movs	r0, #2
 800e51e:	e7fa      	b.n	800e516 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800e520 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800e520:	b538      	push	{r3, r4, r5, lr}
 800e522:	4615      	mov	r5, r2
 800e524:	f000 f819 	bl	800e55a <Sscan::checkName(char const*, char const*)>
 800e528:	b198      	cbz	r0, 800e552 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800e52a:	4604      	mov	r4, r0
 800e52c:	2100      	movs	r1, #0
 800e52e:	220a      	movs	r2, #10
 800e530:	7823      	ldrb	r3, [r4, #0]
 800e532:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e536:	2809      	cmp	r0, #9
 800e538:	d80d      	bhi.n	800e556 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e53a:	fb02 3101 	mla	r1, r2, r1, r3
 800e53e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e542:	3930      	subs	r1, #48	; 0x30
 800e544:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e548:	d1f2      	bne.n	800e530 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800e54a:	29ff      	cmp	r1, #255	; 0xff
 800e54c:	d803      	bhi.n	800e556 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e54e:	7029      	strb	r1, [r5, #0]
 800e550:	bd38      	pop	{r3, r4, r5, pc}
 800e552:	2001      	movs	r0, #1
 800e554:	e7fc      	b.n	800e550 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800e556:	2002      	movs	r0, #2
 800e558:	e7fa      	b.n	800e550 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800e55a <Sscan::checkName(char const*, char const*)>:
 800e55a:	4603      	mov	r3, r0
 800e55c:	b510      	push	{r4, lr}
 800e55e:	3901      	subs	r1, #1
 800e560:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e564:	461c      	mov	r4, r3
 800e566:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e56a:	b120      	cbz	r0, 800e576 <Sscan::checkName(char const*, char const*)+0x1c>
 800e56c:	b10a      	cbz	r2, 800e572 <Sscan::checkName(char const*, char const*)+0x18>
 800e56e:	4290      	cmp	r0, r2
 800e570:	d0f6      	beq.n	800e560 <Sscan::checkName(char const*, char const*)+0x6>
 800e572:	2000      	movs	r0, #0
 800e574:	e006      	b.n	800e584 <Sscan::checkName(char const*, char const*)+0x2a>
 800e576:	2a3d      	cmp	r2, #61	; 0x3d
 800e578:	d104      	bne.n	800e584 <Sscan::checkName(char const*, char const*)+0x2a>
 800e57a:	7860      	ldrb	r0, [r4, #1]
 800e57c:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800e580:	d000      	beq.n	800e584 <Sscan::checkName(char const*, char const*)+0x2a>
 800e582:	1c60      	adds	r0, r4, #1
 800e584:	bd10      	pop	{r4, pc}

0800e586 <LightSet::GetDmxStartAddress()>:
 800e586:	2001      	movs	r0, #1
 800e588:	4770      	bx	lr

0800e58a <LightSet::GetDmxFootprint()>:
 800e58a:	f44f 7000 	mov.w	r0, #512	; 0x200
 800e58e:	4770      	bx	lr

0800e590 <LightSet::SetDmxStartAddress(unsigned short)>:
 800e590:	2000      	movs	r0, #0
 800e592:	4770      	bx	lr

0800e594 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800e594:	2300      	movs	r3, #0
 800e596:	2001      	movs	r0, #1
 800e598:	7093      	strb	r3, [r2, #2]
 800e59a:	8010      	strh	r0, [r2, #0]
 800e59c:	4770      	bx	lr
	...

0800e5a0 <Display::PrintInfo() [clone .isra.0]>:
 800e5a0:	b910      	cbnz	r0, 800e5a8 <Display::PrintInfo() [clone .isra.0]+0x8>
 800e5a2:	4803      	ldr	r0, [pc, #12]	; (800e5b0 <Display::PrintInfo() [clone .isra.0]+0x10>)
 800e5a4:	f000 bd1b 	b.w	800efde <puts>
 800e5a8:	6803      	ldr	r3, [r0, #0]
 800e5aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e5ac:	4718      	bx	r3
 800e5ae:	bf00      	nop
 800e5b0:	08012670 	stmdaeq	r1, {r4, r5, r6, r9, sl, sp}

0800e5b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800e5b4:	b513      	push	{r0, r1, r4, lr}
 800e5b6:	4604      	mov	r4, r0
 800e5b8:	0a13      	lsrs	r3, r2, #8
 800e5ba:	7800      	ldrb	r0, [r0, #0]
 800e5bc:	f88d 1004 	strb.w	r1, [sp, #4]
 800e5c0:	f88d 3005 	strb.w	r3, [sp, #5]
 800e5c4:	f88d 2006 	strb.w	r2, [sp, #6]
 800e5c8:	f001 fd2c 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 800e5cc:	6860      	ldr	r0, [r4, #4]
 800e5ce:	f001 fd21 	bl	8010014 <gd32_i2c_set_baudrate(unsigned int)>
 800e5d2:	2103      	movs	r1, #3
 800e5d4:	a801      	add	r0, sp, #4
 800e5d6:	f001 fd2b 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e5da:	b002      	add	sp, #8
 800e5dc:	bd10      	pop	{r4, pc}

0800e5de <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800e5de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5e0:	460d      	mov	r5, r1
 800e5e2:	4604      	mov	r4, r0
 800e5e4:	f001 fd1e 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 800e5e8:	4628      	mov	r0, r5
 800e5ea:	f001 fd13 	bl	8010014 <gd32_i2c_set_baudrate(unsigned int)>
 800e5ee:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e5f2:	2b07      	cmp	r3, #7
 800e5f4:	d902      	bls.n	800e5fc <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800e5f6:	3c50      	subs	r4, #80	; 0x50
 800e5f8:	2c0f      	cmp	r4, #15
 800e5fa:	d809      	bhi.n	800e610 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800e5fc:	2101      	movs	r1, #1
 800e5fe:	f10d 0007 	add.w	r0, sp, #7
 800e602:	f001 fd7b 	bl	80100fc <gd32_i2c_read(char*, unsigned int)>
 800e606:	fab0 f080 	clz	r0, r0
 800e60a:	0940      	lsrs	r0, r0, #5
 800e60c:	b003      	add	sp, #12
 800e60e:	bd30      	pop	{r4, r5, pc}
 800e610:	2100      	movs	r1, #0
 800e612:	4608      	mov	r0, r1
 800e614:	f001 fd0c 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e618:	e7f5      	b.n	800e606 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800e61a <Display::Detect7Segment()>:
 800e61a:	b538      	push	{r3, r4, r5, lr}
 800e61c:	68c1      	ldr	r1, [r0, #12]
 800e61e:	4604      	mov	r4, r0
 800e620:	7a00      	ldrb	r0, [r0, #8]
 800e622:	f7ff ffdc 	bl	800e5de <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800e626:	7460      	strb	r0, [r4, #17]
 800e628:	b170      	cbz	r0, 800e648 <Display::Detect7Segment()+0x2e>
 800e62a:	2200      	movs	r2, #0
 800e62c:	f104 0508 	add.w	r5, r4, #8
 800e630:	4611      	mov	r1, r2
 800e632:	4628      	mov	r0, r5
 800e634:	f7ff ffbe 	bl	800e5b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e638:	7c63      	ldrb	r3, [r4, #17]
 800e63a:	b12b      	cbz	r3, 800e648 <Display::Detect7Segment()+0x2e>
 800e63c:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800e640:	2112      	movs	r1, #18
 800e642:	4628      	mov	r0, r5
 800e644:	f7ff ffb6 	bl	800e5b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e648:	bd38      	pop	{r3, r4, r5, pc}

0800e64a <Display::Detect(display::Type)>:
 800e64a:	2902      	cmp	r1, #2
 800e64c:	b538      	push	{r3, r4, r5, lr}
 800e64e:	4604      	mov	r4, r0
 800e650:	d014      	beq.n	800e67c <Display::Detect(display::Type)+0x32>
 800e652:	2904      	cmp	r1, #4
 800e654:	d01b      	beq.n	800e68e <Display::Detect(display::Type)+0x44>
 800e656:	69a0      	ldr	r0, [r4, #24]
 800e658:	b168      	cbz	r0, 800e676 <Display::Detect(display::Type)+0x2c>
 800e65a:	6803      	ldr	r3, [r0, #0]
 800e65c:	689b      	ldr	r3, [r3, #8]
 800e65e:	4798      	blx	r3
 800e660:	4603      	mov	r3, r0
 800e662:	69a0      	ldr	r0, [r4, #24]
 800e664:	b9ab      	cbnz	r3, 800e692 <Display::Detect(display::Type)+0x48>
 800e666:	b110      	cbz	r0, 800e66e <Display::Detect(display::Type)+0x24>
 800e668:	6803      	ldr	r3, [r0, #0]
 800e66a:	685b      	ldr	r3, [r3, #4]
 800e66c:	4798      	blx	r3
 800e66e:	2300      	movs	r3, #0
 800e670:	61a3      	str	r3, [r4, #24]
 800e672:	2304      	movs	r3, #4
 800e674:	6023      	str	r3, [r4, #0]
 800e676:	2300      	movs	r3, #0
 800e678:	6163      	str	r3, [r4, #20]
 800e67a:	e010      	b.n	800e69e <Display::Detect(display::Type)+0x54>
 800e67c:	2018      	movs	r0, #24
 800e67e:	f000 fbb7 	bl	800edf0 <operator new(unsigned int)>
 800e682:	4605      	mov	r5, r0
 800e684:	2100      	movs	r1, #0
 800e686:	f000 f8a1 	bl	800e7cc <Ssd1306::Ssd1306(TOledPanel)>
 800e68a:	61a5      	str	r5, [r4, #24]
 800e68c:	e7e3      	b.n	800e656 <Display::Detect(display::Type)+0xc>
 800e68e:	6001      	str	r1, [r0, #0]
 800e690:	e7e1      	b.n	800e656 <Display::Detect(display::Type)+0xc>
 800e692:	6803      	ldr	r3, [r0, #0]
 800e694:	68db      	ldr	r3, [r3, #12]
 800e696:	4798      	blx	r3
 800e698:	69a3      	ldr	r3, [r4, #24]
 800e69a:	2b00      	cmp	r3, #0
 800e69c:	d0eb      	beq.n	800e676 <Display::Detect(display::Type)+0x2c>
 800e69e:	bd38      	pop	{r3, r4, r5, pc}

0800e6a0 <Display::Display()>:
 800e6a0:	2304      	movs	r3, #4
 800e6a2:	b510      	push	{r4, lr}
 800e6a4:	6003      	str	r3, [r0, #0]
 800e6a6:	4b0f      	ldr	r3, [pc, #60]	; (800e6e4 <Display::Display()+0x44>)
 800e6a8:	4604      	mov	r4, r0
 800e6aa:	681b      	ldr	r3, [r3, #0]
 800e6ac:	4a0e      	ldr	r2, [pc, #56]	; (800e6e8 <Display::Display()+0x48>)
 800e6ae:	6043      	str	r3, [r0, #4]
 800e6b0:	2321      	movs	r3, #33	; 0x21
 800e6b2:	7203      	strb	r3, [r0, #8]
 800e6b4:	4b0d      	ldr	r3, [pc, #52]	; (800e6ec <Display::Display()+0x4c>)
 800e6b6:	2102      	movs	r1, #2
 800e6b8:	60c3      	str	r3, [r0, #12]
 800e6ba:	2300      	movs	r3, #0
 800e6bc:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800e6c0:	8203      	strh	r3, [r0, #16]
 800e6c2:	4b0b      	ldr	r3, [pc, #44]	; (800e6f0 <Display::Display()+0x50>)
 800e6c4:	6018      	str	r0, [r3, #0]
 800e6c6:	f7ff ffc0 	bl	800e64a <Display::Detect(display::Type)>
 800e6ca:	4620      	mov	r0, r4
 800e6cc:	f7ff ffa5 	bl	800e61a <Display::Detect7Segment()>
 800e6d0:	69a3      	ldr	r3, [r4, #24]
 800e6d2:	b10b      	cbz	r3, 800e6d8 <Display::Display()+0x38>
 800e6d4:	f000 f80e 	bl	800e6f4 <display::timeout::gpio_init()>
 800e6d8:	69a0      	ldr	r0, [r4, #24]
 800e6da:	f7ff ff61 	bl	800e5a0 <Display::PrintInfo() [clone .isra.0]>
 800e6de:	4620      	mov	r0, r4
 800e6e0:	bd10      	pop	{r4, pc}
 800e6e2:	bf00      	nop
 800e6e4:	20009bc4 	andcs	r9, r0, r4, asr #23
 800e6e8:	000493e0 	andeq	r9, r4, r0, ror #7
 800e6ec:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e6f0:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

0800e6f4 <display::timeout::gpio_init()>:
 800e6f4:	4770      	bx	lr

0800e6f6 <display::timeout::gpio_renew()>:
 800e6f6:	2000      	movs	r0, #0
 800e6f8:	4770      	bx	lr

0800e6fa <Ssd1306::~Ssd1306()>:
 800e6fa:	4770      	bx	lr

0800e6fc <Ssd1306::SetCursor(unsigned int)>:
 800e6fc:	4770      	bx	lr
	...

0800e700 <Ssd1306::PrintInfo()>:
 800e700:	b410      	push	{r4}
 800e702:	4906      	ldr	r1, [pc, #24]	; (800e71c <Ssd1306::PrintInfo()+0x1c>)
 800e704:	7c44      	ldrb	r4, [r0, #17]
 800e706:	7903      	ldrb	r3, [r0, #4]
 800e708:	7942      	ldrb	r2, [r0, #5]
 800e70a:	4805      	ldr	r0, [pc, #20]	; (800e720 <Ssd1306::PrintInfo()+0x20>)
 800e70c:	2c00      	cmp	r4, #0
 800e70e:	bf08      	it	eq
 800e710:	4601      	moveq	r1, r0
 800e712:	4804      	ldr	r0, [pc, #16]	; (800e724 <Ssd1306::PrintInfo()+0x24>)
 800e714:	bc10      	pop	{r4}
 800e716:	f7fa b881 	b.w	800881c <printf>
 800e71a:	bf00      	nop
 800e71c:	08012681 	stmdaeq	r1, {r0, r7, r9, sl, sp}
 800e720:	08012688 	stmdaeq	r1, {r3, r7, r9, sl, sp}
 800e724:	08012690 	stmdaeq	r1, {r4, r7, r9, sl, sp}

0800e728 <Ssd1306::~Ssd1306()>:
 800e728:	b510      	push	{r4, lr}
 800e72a:	4604      	mov	r4, r0
 800e72c:	f000 fb5c 	bl	800ede8 <operator delete(void*)>
 800e730:	4620      	mov	r0, r4
 800e732:	bd10      	pop	{r4, pc}

0800e734 <HAL_I2C::Setup()>:
 800e734:	b510      	push	{r4, lr}
 800e736:	4604      	mov	r4, r0
 800e738:	7800      	ldrb	r0, [r0, #0]
 800e73a:	f001 fc73 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 800e73e:	6860      	ldr	r0, [r4, #4]
 800e740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e744:	f001 bc66 	b.w	8010014 <gd32_i2c_set_baudrate(unsigned int)>

0800e748 <Ssd1306::PutChar(int)>:
 800e748:	b510      	push	{r4, lr}
 800e74a:	f1a1 0420 	sub.w	r4, r1, #32
 800e74e:	2c5f      	cmp	r4, #95	; 0x5f
 800e750:	bf88      	it	hi
 800e752:	2400      	movhi	r4, #0
 800e754:	3008      	adds	r0, #8
 800e756:	f7ff ffed 	bl	800e734 <HAL_I2C::Setup()>
 800e75a:	4804      	ldr	r0, [pc, #16]	; (800e76c <Ssd1306::PutChar(int)+0x24>)
 800e75c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800e760:	4420      	add	r0, r4
 800e762:	2107      	movs	r1, #7
 800e764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e768:	f001 bc62 	b.w	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e76c:	080126a4 	stmdaeq	r1, {r2, r5, r7, r9, sl, sp}

0800e770 <Ssd1306::PutString(char const*)>:
 800e770:	b538      	push	{r3, r4, r5, lr}
 800e772:	4605      	mov	r5, r0
 800e774:	1e4c      	subs	r4, r1, #1
 800e776:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e77a:	b901      	cbnz	r1, 800e77e <Ssd1306::PutString(char const*)+0xe>
 800e77c:	bd38      	pop	{r3, r4, r5, pc}
 800e77e:	4628      	mov	r0, r5
 800e780:	f7ff ffe2 	bl	800e748 <Ssd1306::PutChar(int)>
 800e784:	e7f7      	b.n	800e776 <Ssd1306::PutString(char const*)+0x6>

0800e786 <Ssd1306::Text(char const*, unsigned int)>:
 800e786:	b570      	push	{r4, r5, r6, lr}
 800e788:	7903      	ldrb	r3, [r0, #4]
 800e78a:	4605      	mov	r5, r0
 800e78c:	460c      	mov	r4, r1
 800e78e:	4293      	cmp	r3, r2
 800e790:	bf94      	ite	ls
 800e792:	18ce      	addls	r6, r1, r3
 800e794:	188e      	addhi	r6, r1, r2
 800e796:	42b4      	cmp	r4, r6
 800e798:	d100      	bne.n	800e79c <Ssd1306::Text(char const*, unsigned int)+0x16>
 800e79a:	bd70      	pop	{r4, r5, r6, pc}
 800e79c:	4628      	mov	r0, r5
 800e79e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e7a2:	f7ff ffd1 	bl	800e748 <Ssd1306::PutChar(int)>
 800e7a6:	e7f6      	b.n	800e796 <Ssd1306::Text(char const*, unsigned int)+0x10>

0800e7a8 <Ssd1306::InitMembers()>:
 800e7a8:	7c03      	ldrb	r3, [r0, #16]
 800e7aa:	b14b      	cbz	r3, 800e7c0 <Ssd1306::InitMembers()+0x18>
 800e7ac:	3b01      	subs	r3, #1
 800e7ae:	2b01      	cmp	r3, #1
 800e7b0:	d909      	bls.n	800e7c6 <Ssd1306::InitMembers()+0x1e>
 800e7b2:	2308      	movs	r3, #8
 800e7b4:	2204      	movs	r2, #4
 800e7b6:	2115      	movs	r1, #21
 800e7b8:	7143      	strb	r3, [r0, #5]
 800e7ba:	7101      	strb	r1, [r0, #4]
 800e7bc:	6142      	str	r2, [r0, #20]
 800e7be:	4770      	bx	lr
 800e7c0:	2308      	movs	r3, #8
 800e7c2:	461a      	mov	r2, r3
 800e7c4:	e7f7      	b.n	800e7b6 <Ssd1306::InitMembers()+0xe>
 800e7c6:	2304      	movs	r3, #4
 800e7c8:	e7fb      	b.n	800e7c2 <Ssd1306::InitMembers()+0x1a>
	...

0800e7cc <Ssd1306::Ssd1306(TOledPanel)>:
 800e7cc:	4a08      	ldr	r2, [pc, #32]	; (800e7f0 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800e7ce:	b508      	push	{r3, lr}
 800e7d0:	6002      	str	r2, [r0, #0]
 800e7d2:	227f      	movs	r2, #127	; 0x7f
 800e7d4:	80c2      	strh	r2, [r0, #6]
 800e7d6:	223c      	movs	r2, #60	; 0x3c
 800e7d8:	7202      	strb	r2, [r0, #8]
 800e7da:	4a06      	ldr	r2, [pc, #24]	; (800e7f4 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800e7dc:	7401      	strb	r1, [r0, #16]
 800e7de:	60c2      	str	r2, [r0, #12]
 800e7e0:	2200      	movs	r2, #0
 800e7e2:	7442      	strb	r2, [r0, #17]
 800e7e4:	4a04      	ldr	r2, [pc, #16]	; (800e7f8 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800e7e6:	6010      	str	r0, [r2, #0]
 800e7e8:	f7ff ffde 	bl	800e7a8 <Ssd1306::InitMembers()>
 800e7ec:	bd08      	pop	{r3, pc}
 800e7ee:	bf00      	nop
 800e7f0:	0801297c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, sp}
 800e7f4:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e7f8:	20009b48 	andcs	r9, r0, r8, asr #22

0800e7fc <Ssd1306::SendCommand(unsigned char)>:
 800e7fc:	2300      	movs	r3, #0
 800e7fe:	b507      	push	{r0, r1, r2, lr}
 800e800:	3008      	adds	r0, #8
 800e802:	f88d 3004 	strb.w	r3, [sp, #4]
 800e806:	f88d 1005 	strb.w	r1, [sp, #5]
 800e80a:	f7ff ff93 	bl	800e734 <HAL_I2C::Setup()>
 800e80e:	2102      	movs	r1, #2
 800e810:	a801      	add	r0, sp, #4
 800e812:	f001 fc0d 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e816:	b003      	add	sp, #12
 800e818:	f85d fb04 	ldr.w	pc, [sp], #4

0800e81c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800e81c:	2914      	cmp	r1, #20
 800e81e:	b570      	push	{r4, r5, r6, lr}
 800e820:	4605      	mov	r5, r0
 800e822:	4616      	mov	r6, r2
 800e824:	d81c      	bhi.n	800e860 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e826:	7943      	ldrb	r3, [r0, #5]
 800e828:	4293      	cmp	r3, r2
 800e82a:	d919      	bls.n	800e860 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e82c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e830:	7c43      	ldrb	r3, [r0, #17]
 800e832:	004c      	lsls	r4, r1, #1
 800e834:	b2e4      	uxtb	r4, r4
 800e836:	b10b      	cbz	r3, 800e83c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800e838:	3404      	adds	r4, #4
 800e83a:	b2e4      	uxtb	r4, r4
 800e83c:	4628      	mov	r0, r5
 800e83e:	f004 010e 	and.w	r1, r4, #14
 800e842:	f7ff ffdb 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e846:	0921      	lsrs	r1, r4, #4
 800e848:	4628      	mov	r0, r5
 800e84a:	f041 0110 	orr.w	r1, r1, #16
 800e84e:	f7ff ffd5 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e852:	4628      	mov	r0, r5
 800e854:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800e858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e85c:	f7ff bfce 	b.w	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e860:	bd70      	pop	{r4, r5, r6, pc}

0800e862 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800e862:	b570      	push	{r4, r5, r6, lr}
 800e864:	4604      	mov	r4, r0
 800e866:	4615      	mov	r5, r2
 800e868:	461e      	mov	r6, r3
 800e86a:	b171      	cbz	r1, 800e88a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e86c:	7943      	ldrb	r3, [r0, #5]
 800e86e:	428b      	cmp	r3, r1
 800e870:	d30b      	bcc.n	800e88a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e872:	3901      	subs	r1, #1
 800e874:	b2ca      	uxtb	r2, r1
 800e876:	2100      	movs	r1, #0
 800e878:	f7ff ffd0 	bl	800e81c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e87c:	4632      	mov	r2, r6
 800e87e:	4629      	mov	r1, r5
 800e880:	4620      	mov	r0, r4
 800e882:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e886:	f7ff bf7e 	b.w	800e786 <Ssd1306::Text(char const*, unsigned int)>
 800e88a:	bd70      	pop	{r4, r5, r6, pc}

0800e88c <Ssd1306::ClearLine(unsigned char)>:
 800e88c:	b538      	push	{r3, r4, r5, lr}
 800e88e:	4605      	mov	r5, r0
 800e890:	b1b9      	cbz	r1, 800e8c2 <Ssd1306::ClearLine(unsigned char)+0x36>
 800e892:	7943      	ldrb	r3, [r0, #5]
 800e894:	428b      	cmp	r3, r1
 800e896:	d314      	bcc.n	800e8c2 <Ssd1306::ClearLine(unsigned char)+0x36>
 800e898:	3901      	subs	r1, #1
 800e89a:	b2cc      	uxtb	r4, r1
 800e89c:	4622      	mov	r2, r4
 800e89e:	2100      	movs	r1, #0
 800e8a0:	f7ff ffbc 	bl	800e81c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8a4:	f105 0008 	add.w	r0, r5, #8
 800e8a8:	f7ff ff44 	bl	800e734 <HAL_I2C::Setup()>
 800e8ac:	2181      	movs	r1, #129	; 0x81
 800e8ae:	4805      	ldr	r0, [pc, #20]	; (800e8c4 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800e8b0:	f001 fbbe 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e8b4:	4622      	mov	r2, r4
 800e8b6:	4628      	mov	r0, r5
 800e8b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e8bc:	2100      	movs	r1, #0
 800e8be:	f7ff bfad 	b.w	800e81c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8c2:	bd38      	pop	{r3, r4, r5, pc}
 800e8c4:	20009ac0 	andcs	r9, r0, r0, asr #21

0800e8c8 <Ssd1306::SetSleep(bool)>:
 800e8c8:	b111      	cbz	r1, 800e8d0 <Ssd1306::SetSleep(bool)+0x8>
 800e8ca:	21ae      	movs	r1, #174	; 0xae
 800e8cc:	f7ff bf96 	b.w	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e8d0:	21af      	movs	r1, #175	; 0xaf
 800e8d2:	e7fb      	b.n	800e8cc <Ssd1306::SetSleep(bool)+0x4>

0800e8d4 <Ssd1306::SetContrast(unsigned char)>:
 800e8d4:	b538      	push	{r3, r4, r5, lr}
 800e8d6:	4604      	mov	r4, r0
 800e8d8:	460d      	mov	r5, r1
 800e8da:	7181      	strb	r1, [r0, #6]
 800e8dc:	2181      	movs	r1, #129	; 0x81
 800e8de:	f7ff ff8d 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e8e2:	4629      	mov	r1, r5
 800e8e4:	4620      	mov	r0, r4
 800e8e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e8ea:	f7ff bf87 	b.w	800e7fc <Ssd1306::SendCommand(unsigned char)>

0800e8ee <Ssd1306::SetFlipVertically(bool)>:
 800e8ee:	b510      	push	{r4, lr}
 800e8f0:	4604      	mov	r4, r0
 800e8f2:	71c1      	strb	r1, [r0, #7]
 800e8f4:	b141      	cbz	r1, 800e908 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800e8f6:	21c0      	movs	r1, #192	; 0xc0
 800e8f8:	f7ff ff80 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e8fc:	21a0      	movs	r1, #160	; 0xa0
 800e8fe:	4620      	mov	r0, r4
 800e900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e904:	f7ff bf7a 	b.w	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e908:	21c8      	movs	r1, #200	; 0xc8
 800e90a:	f7ff ff77 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e90e:	21a1      	movs	r1, #161	; 0xa1
 800e910:	e7f5      	b.n	800e8fe <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800e914 <Ssd1306::CheckSH1106()>:
 800e914:	b570      	push	{r4, r5, r6, lr}
 800e916:	4604      	mov	r4, r0
 800e918:	b086      	sub	sp, #24
 800e91a:	2100      	movs	r1, #0
 800e91c:	f7ff ff6e 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e920:	2190      	movs	r1, #144	; 0x90
 800e922:	4620      	mov	r0, r4
 800e924:	f7ff ff6a 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e928:	21b0      	movs	r1, #176	; 0xb0
 800e92a:	4620      	mov	r0, r4
 800e92c:	f7ff ff66 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e930:	4b22      	ldr	r3, [pc, #136]	; (800e9bc <Ssd1306::CheckSH1106()+0xa8>)
 800e932:	f104 0608 	add.w	r6, r4, #8
 800e936:	6818      	ldr	r0, [r3, #0]
 800e938:	791b      	ldrb	r3, [r3, #4]
 800e93a:	ad02      	add	r5, sp, #8
 800e93c:	9002      	str	r0, [sp, #8]
 800e93e:	4630      	mov	r0, r6
 800e940:	712b      	strb	r3, [r5, #4]
 800e942:	f7ff fef7 	bl	800e734 <HAL_I2C::Setup()>
 800e946:	2105      	movs	r1, #5
 800e948:	4628      	mov	r0, r5
 800e94a:	f001 fb71 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e94e:	2100      	movs	r1, #0
 800e950:	4620      	mov	r0, r4
 800e952:	f7ff ff53 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e956:	2190      	movs	r1, #144	; 0x90
 800e958:	4620      	mov	r0, r4
 800e95a:	f7ff ff4f 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e95e:	21b0      	movs	r1, #176	; 0xb0
 800e960:	4620      	mov	r0, r4
 800e962:	f7ff ff4b 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e966:	2300      	movs	r3, #0
 800e968:	9304      	str	r3, [sp, #16]
 800e96a:	f88d 3014 	strb.w	r3, [sp, #20]
 800e96e:	2340      	movs	r3, #64	; 0x40
 800e970:	4630      	mov	r0, r6
 800e972:	f88d 3007 	strb.w	r3, [sp, #7]
 800e976:	f7ff fedd 	bl	800e734 <HAL_I2C::Setup()>
 800e97a:	2101      	movs	r1, #1
 800e97c:	f10d 0007 	add.w	r0, sp, #7
 800e980:	f001 fb56 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800e984:	4630      	mov	r0, r6
 800e986:	f7ff fed5 	bl	800e734 <HAL_I2C::Setup()>
 800e98a:	2105      	movs	r1, #5
 800e98c:	a804      	add	r0, sp, #16
 800e98e:	f001 fbb5 	bl	80100fc <gd32_i2c_read(char*, unsigned int)>
 800e992:	2201      	movs	r2, #1
 800e994:	5cab      	ldrb	r3, [r5, r2]
 800e996:	a904      	add	r1, sp, #16
 800e998:	3201      	adds	r2, #1
 800e99a:	4411      	add	r1, r2
 800e99c:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800e9a0:	428b      	cmp	r3, r1
 800e9a2:	d006      	beq.n	800e9b2 <Ssd1306::CheckSH1106()+0x9e>
 800e9a4:	1a5b      	subs	r3, r3, r1
 800e9a6:	fab3 f383 	clz	r3, r3
 800e9aa:	095b      	lsrs	r3, r3, #5
 800e9ac:	7463      	strb	r3, [r4, #17]
 800e9ae:	b006      	add	sp, #24
 800e9b0:	bd70      	pop	{r4, r5, r6, pc}
 800e9b2:	2a05      	cmp	r2, #5
 800e9b4:	d1ee      	bne.n	800e994 <Ssd1306::CheckSH1106()+0x80>
 800e9b6:	2300      	movs	r3, #0
 800e9b8:	e7f5      	b.n	800e9a6 <Ssd1306::CheckSH1106()+0x92>
 800e9ba:	bf00      	nop
 800e9bc:	0801269c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, sp}

0800e9c0 <Ssd1306::Cls()>:
 800e9c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9c4:	4604      	mov	r4, r0
 800e9c6:	2600      	movs	r6, #0
 800e9c8:	7c45      	ldrb	r5, [r0, #17]
 800e9ca:	00ad      	lsls	r5, r5, #2
 800e9cc:	b2ed      	uxtb	r5, r5
 800e9ce:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800e9d2:	f045 0810 	orr.w	r8, r5, #16
 800e9d6:	b2ff      	uxtb	r7, r7
 800e9d8:	6963      	ldr	r3, [r4, #20]
 800e9da:	4629      	mov	r1, r5
 800e9dc:	42b3      	cmp	r3, r6
 800e9de:	4620      	mov	r0, r4
 800e9e0:	d80b      	bhi.n	800e9fa <Ssd1306::Cls()+0x3a>
 800e9e2:	f7ff ff0b 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e9e6:	4641      	mov	r1, r8
 800e9e8:	4620      	mov	r0, r4
 800e9ea:	f7ff ff07 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e9ee:	4620      	mov	r0, r4
 800e9f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e9f4:	21b0      	movs	r1, #176	; 0xb0
 800e9f6:	f7ff bf01 	b.w	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e9fa:	f7ff feff 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800e9fe:	4641      	mov	r1, r8
 800ea00:	4620      	mov	r0, r4
 800ea02:	f7ff fefb 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800ea06:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800ea0a:	4620      	mov	r0, r4
 800ea0c:	b2c9      	uxtb	r1, r1
 800ea0e:	f7ff fef5 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800ea12:	7c23      	ldrb	r3, [r4, #16]
 800ea14:	b123      	cbz	r3, 800ea20 <Ssd1306::Cls()+0x60>
 800ea16:	3b01      	subs	r3, #1
 800ea18:	2b01      	cmp	r3, #1
 800ea1a:	d901      	bls.n	800ea20 <Ssd1306::Cls()+0x60>
 800ea1c:	3601      	adds	r6, #1
 800ea1e:	e7db      	b.n	800e9d8 <Ssd1306::Cls()+0x18>
 800ea20:	f104 0008 	add.w	r0, r4, #8
 800ea24:	f7ff fe86 	bl	800e734 <HAL_I2C::Setup()>
 800ea28:	4639      	mov	r1, r7
 800ea2a:	4802      	ldr	r0, [pc, #8]	; (800ea34 <Ssd1306::Cls()+0x74>)
 800ea2c:	f001 fb00 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800ea30:	e7f4      	b.n	800ea1c <Ssd1306::Cls()+0x5c>
 800ea32:	bf00      	nop
 800ea34:	20009ac0 	andcs	r9, r0, r0, asr #21

0800ea38 <Ssd1306::Start()>:
 800ea38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ea3a:	7a04      	ldrb	r4, [r0, #8]
 800ea3c:	68c6      	ldr	r6, [r0, #12]
 800ea3e:	4605      	mov	r5, r0
 800ea40:	4620      	mov	r0, r4
 800ea42:	f001 faef 	bl	8010024 <gd32_i2c_set_address(unsigned char)>
 800ea46:	4630      	mov	r0, r6
 800ea48:	f001 fae4 	bl	8010014 <gd32_i2c_set_baudrate(unsigned int)>
 800ea4c:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ea50:	2b07      	cmp	r3, #7
 800ea52:	d902      	bls.n	800ea5a <Ssd1306::Start()+0x22>
 800ea54:	3c50      	subs	r4, #80	; 0x50
 800ea56:	2c0f      	cmp	r4, #15
 800ea58:	d80f      	bhi.n	800ea7a <Ssd1306::Start()+0x42>
 800ea5a:	2101      	movs	r1, #1
 800ea5c:	f10d 0007 	add.w	r0, sp, #7
 800ea60:	f001 fb4c 	bl	80100fc <gd32_i2c_read(char*, unsigned int)>
 800ea64:	fab0 f480 	clz	r4, r0
 800ea68:	0964      	lsrs	r4, r4, #5
 800ea6a:	b35c      	cbz	r4, 800eac4 <Ssd1306::Start()+0x8c>
 800ea6c:	7c2e      	ldrb	r6, [r5, #16]
 800ea6e:	b14e      	cbz	r6, 800ea84 <Ssd1306::Start()+0x4c>
 800ea70:	3e01      	subs	r6, #1
 800ea72:	2e01      	cmp	r6, #1
 800ea74:	d929      	bls.n	800eaca <Ssd1306::Start()+0x92>
 800ea76:	2400      	movs	r4, #0
 800ea78:	e024      	b.n	800eac4 <Ssd1306::Start()+0x8c>
 800ea7a:	2100      	movs	r1, #0
 800ea7c:	4608      	mov	r0, r1
 800ea7e:	f001 fad7 	bl	8010030 <gd32_i2c_write(char const*, unsigned int)>
 800ea82:	e7ef      	b.n	800ea64 <Ssd1306::Start()+0x2c>
 800ea84:	4f16      	ldr	r7, [pc, #88]	; (800eae0 <Ssd1306::Start()+0xa8>)
 800ea86:	4628      	mov	r0, r5
 800ea88:	f817 1b01 	ldrb.w	r1, [r7], #1
 800ea8c:	3601      	adds	r6, #1
 800ea8e:	f7ff feb5 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800ea92:	2e18      	cmp	r6, #24
 800ea94:	d1f7      	bne.n	800ea86 <Ssd1306::Start()+0x4e>
 800ea96:	2300      	movs	r3, #0
 800ea98:	4a12      	ldr	r2, [pc, #72]	; (800eae4 <Ssd1306::Start()+0xac>)
 800ea9a:	4618      	mov	r0, r3
 800ea9c:	4611      	mov	r1, r2
 800ea9e:	3301      	adds	r3, #1
 800eaa0:	2b86      	cmp	r3, #134	; 0x86
 800eaa2:	f802 0b01 	strb.w	r0, [r2], #1
 800eaa6:	d1fa      	bne.n	800ea9e <Ssd1306::Start()+0x66>
 800eaa8:	2340      	movs	r3, #64	; 0x40
 800eaaa:	4628      	mov	r0, r5
 800eaac:	700b      	strb	r3, [r1, #0]
 800eaae:	f7ff ff31 	bl	800e914 <Ssd1306::CheckSH1106()>
 800eab2:	4628      	mov	r0, r5
 800eab4:	f7ff ff84 	bl	800e9c0 <Ssd1306::Cls()>
 800eab8:	21af      	movs	r1, #175	; 0xaf
 800eaba:	4628      	mov	r0, r5
 800eabc:	f7ff fe9e 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800eac0:	2301      	movs	r3, #1
 800eac2:	71eb      	strb	r3, [r5, #7]
 800eac4:	4620      	mov	r0, r4
 800eac6:	b003      	add	sp, #12
 800eac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eaca:	2600      	movs	r6, #0
 800eacc:	4f06      	ldr	r7, [pc, #24]	; (800eae8 <Ssd1306::Start()+0xb0>)
 800eace:	4628      	mov	r0, r5
 800ead0:	f817 1b01 	ldrb.w	r1, [r7], #1
 800ead4:	3601      	adds	r6, #1
 800ead6:	f7ff fe91 	bl	800e7fc <Ssd1306::SendCommand(unsigned char)>
 800eada:	2e18      	cmp	r6, #24
 800eadc:	d1f7      	bne.n	800eace <Ssd1306::Start()+0x96>
 800eade:	e7da      	b.n	800ea96 <Ssd1306::Start()+0x5e>
 800eae0:	0801295c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, sp}
 800eae4:	20009ac0 	andcs	r9, r0, r0, asr #21
 800eae8:	08012944 	stmdaeq	r1, {r2, r6, r8, fp, sp}

0800eaec <console_putc>:
 800eaec:	f000 bb7a 	b.w	800f1e4 <uart0_putc>

0800eaf0 <console_puts>:
 800eaf0:	f000 bb98 	b.w	800f224 <uart0_puts>

0800eaf4 <console_set_fg_color>:
 800eaf4:	2807      	cmp	r0, #7
 800eaf6:	d810      	bhi.n	800eb1a <console_set_fg_color+0x26>
 800eaf8:	e8df f000 	tbb	[pc, r0]
 800eafc:	0b090704 	bleq	8250714 <__exidx_end+0x23dc64>
 800eb00:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800eacc <Ssd1306::Start()+0x94>
 800eb04:	4806      	ldr	r0, [pc, #24]	; (800eb20 <console_set_fg_color+0x2c>)
 800eb06:	f000 bb8d 	b.w	800f224 <uart0_puts>
 800eb0a:	4806      	ldr	r0, [pc, #24]	; (800eb24 <console_set_fg_color+0x30>)
 800eb0c:	e7fb      	b.n	800eb06 <console_set_fg_color+0x12>
 800eb0e:	4806      	ldr	r0, [pc, #24]	; (800eb28 <console_set_fg_color+0x34>)
 800eb10:	e7f9      	b.n	800eb06 <console_set_fg_color+0x12>
 800eb12:	4806      	ldr	r0, [pc, #24]	; (800eb2c <console_set_fg_color+0x38>)
 800eb14:	e7f7      	b.n	800eb06 <console_set_fg_color+0x12>
 800eb16:	4806      	ldr	r0, [pc, #24]	; (800eb30 <console_set_fg_color+0x3c>)
 800eb18:	e7f5      	b.n	800eb06 <console_set_fg_color+0x12>
 800eb1a:	4806      	ldr	r0, [pc, #24]	; (800eb34 <console_set_fg_color+0x40>)
 800eb1c:	e7f3      	b.n	800eb06 <console_set_fg_color+0x12>
 800eb1e:	bf00      	nop
 800eb20:	080129ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, sp}
 800eb24:	080129c0 	stmdaeq	r1, {r6, r7, r8, fp, sp}
 800eb28:	080129c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, fp, sp}
 800eb2c:	080129cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, sp}
 800eb30:	08010f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp}
 800eb34:	080129d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, fp, sp}

0800eb38 <console_error>:
 800eb38:	b510      	push	{r4, lr}
 800eb3a:	4604      	mov	r4, r0
 800eb3c:	4805      	ldr	r0, [pc, #20]	; (800eb54 <console_error+0x1c>)
 800eb3e:	f000 fb71 	bl	800f224 <uart0_puts>
 800eb42:	4620      	mov	r0, r4
 800eb44:	f000 fb6e 	bl	800f224 <uart0_puts>
 800eb48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb4c:	4802      	ldr	r0, [pc, #8]	; (800eb58 <console_error+0x20>)
 800eb4e:	f000 bb69 	b.w	800f224 <uart0_puts>
 800eb52:	bf00      	nop
 800eb54:	080129c0 	stmdaeq	r1, {r6, r7, r8, fp, sp}
 800eb58:	08010f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp}

0800eb5c <console_status>:
 800eb5c:	b510      	push	{r4, lr}
 800eb5e:	460c      	mov	r4, r1
 800eb60:	b280      	uxth	r0, r0
 800eb62:	f7ff ffc7 	bl	800eaf4 <console_set_fg_color>
 800eb66:	4807      	ldr	r0, [pc, #28]	; (800eb84 <console_status+0x28>)
 800eb68:	f000 fb5c 	bl	800f224 <uart0_puts>
 800eb6c:	4620      	mov	r0, r4
 800eb6e:	f000 fb59 	bl	800f224 <uart0_puts>
 800eb72:	200a      	movs	r0, #10
 800eb74:	f000 fb36 	bl	800f1e4 <uart0_putc>
 800eb78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb7c:	4802      	ldr	r0, [pc, #8]	; (800eb88 <console_status+0x2c>)
 800eb7e:	f000 bb51 	b.w	800f224 <uart0_puts>
 800eb82:	bf00      	nop
 800eb84:	080129b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, fp, sp}
 800eb88:	08010f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp}

0800eb8c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800eb8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb90:	4617      	mov	r7, r2
 800eb92:	461e      	mov	r6, r3
 800eb94:	4d14      	ldr	r5, [pc, #80]	; (800ebe8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800eb96:	4b15      	ldr	r3, [pc, #84]	; (800ebec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800eb98:	b086      	sub	sp, #24
 800eb9a:	6018      	str	r0, [r3, #0]
 800eb9c:	4604      	mov	r4, r0
 800eb9e:	f105 0803 	add.w	r8, r5, #3
 800eba2:	2203      	movs	r2, #3
 800eba4:	4628      	mov	r0, r5
 800eba6:	f000 f9e2 	bl	800ef6e <memmove>
 800ebaa:	4639      	mov	r1, r7
 800ebac:	220b      	movs	r2, #11
 800ebae:	4640      	mov	r0, r8
 800ebb0:	f000 f9dd 	bl	800ef6e <memmove>
 800ebb4:	f105 030e 	add.w	r3, r5, #14
 800ebb8:	4631      	mov	r1, r6
 800ebba:	2208      	movs	r2, #8
 800ebbc:	4618      	mov	r0, r3
 800ebbe:	f000 f9d6 	bl	800ef6e <memmove>
 800ebc2:	2308      	movs	r3, #8
 800ebc4:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800ebc8:	230b      	movs	r3, #11
 800ebca:	9302      	str	r3, [sp, #8]
 800ebcc:	4b08      	ldr	r3, [pc, #32]	; (800ebf0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800ebce:	9005      	str	r0, [sp, #20]
 800ebd0:	e9cd 5300 	strd	r5, r3, [sp]
 800ebd4:	213f      	movs	r1, #63	; 0x3f
 800ebd6:	2303      	movs	r3, #3
 800ebd8:	4a06      	ldr	r2, [pc, #24]	; (800ebf4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800ebda:	4807      	ldr	r0, [pc, #28]	; (800ebf8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800ebdc:	f7f9 fe2e 	bl	800883c <snprintf>
 800ebe0:	4620      	mov	r0, r4
 800ebe2:	b006      	add	sp, #24
 800ebe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebe8:	20009b4c 	andcs	r9, r0, ip, asr #22
 800ebec:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800ebf0:	08010fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
 800ebf4:	080129d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, sp}
 800ebf8:	20009b62 	andcs	r9, r0, r2, ror #22

0800ebfc <FirmwareVersion::Print(char const*)>:
 800ebfc:	b510      	push	{r4, lr}
 800ebfe:	460c      	mov	r4, r1
 800ec00:	4804      	ldr	r0, [pc, #16]	; (800ec14 <FirmwareVersion::Print(char const*)+0x18>)
 800ec02:	f000 f9ec 	bl	800efde <puts>
 800ec06:	b124      	cbz	r4, 800ec12 <FirmwareVersion::Print(char const*)+0x16>
 800ec08:	4620      	mov	r0, r4
 800ec0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec0e:	f000 b9e6 	b.w	800efde <puts>
 800ec12:	bd10      	pop	{r4, pc}
 800ec14:	20009b62 	andcs	r9, r0, r2, ror #22

0800ec18 <LedBlink::LedBlink()>:
 800ec18:	b538      	push	{r3, r4, r5, lr}
 800ec1a:	2205      	movs	r2, #5
 800ec1c:	2300      	movs	r3, #0
 800ec1e:	e9c0 3200 	strd	r3, r2, [r0]
 800ec22:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ec26:	6083      	str	r3, [r0, #8]
 800ec28:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800ec2c:	6143      	str	r3, [r0, #20]
 800ec2e:	4b09      	ldr	r3, [pc, #36]	; (800ec54 <LedBlink::LedBlink()+0x3c>)
 800ec30:	4d09      	ldr	r5, [pc, #36]	; (800ec58 <LedBlink::LedBlink()+0x40>)
 800ec32:	4604      	mov	r4, r0
 800ec34:	6018      	str	r0, [r3, #0]
 800ec36:	f240 6004 	movw	r0, #1540	; 0x604
 800ec3a:	f000 fd6f 	bl	800f71c <rcu_periph_clock_enable>
 800ec3e:	4628      	mov	r0, r5
 800ec40:	2301      	movs	r3, #1
 800ec42:	2203      	movs	r2, #3
 800ec44:	2110      	movs	r1, #16
 800ec46:	f000 fcd1 	bl	800f5ec <gpio_init>
 800ec4a:	2301      	movs	r3, #1
 800ec4c:	4620      	mov	r0, r4
 800ec4e:	616b      	str	r3, [r5, #20]
 800ec50:	bd38      	pop	{r3, r4, r5, pc}
 800ec52:	bf00      	nop
 800ec54:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800ec58:	40011000 	andmi	r1, r1, r0

0800ec5c <LedBlink::SetMode(ledblink::Mode)>:
 800ec5c:	6843      	ldr	r3, [r0, #4]
 800ec5e:	428b      	cmp	r3, r1
 800ec60:	d02f      	beq.n	800ecc2 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ec62:	6041      	str	r1, [r0, #4]
 800ec64:	2904      	cmp	r1, #4
 800ec66:	d822      	bhi.n	800ecae <LedBlink::SetMode(ledblink::Mode)+0x52>
 800ec68:	e8df f001 	tbb	[pc, r1]
 800ec6c:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800ec70:	23ff001d 	mvnscs	r0, #29
 800ec74:	6003      	str	r3, [r0, #0]
 800ec76:	2300      	movs	r3, #0
 800ec78:	2201      	movs	r2, #1
 800ec7a:	60c3      	str	r3, [r0, #12]
 800ec7c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ec80:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ec84:	611a      	str	r2, [r3, #16]
 800ec86:	6880      	ldr	r0, [r0, #8]
 800ec88:	b1d8      	cbz	r0, 800ecc2 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ec8a:	6803      	ldr	r3, [r0, #0]
 800ec8c:	689b      	ldr	r3, [r3, #8]
 800ec8e:	4718      	bx	r3
 800ec90:	2301      	movs	r3, #1
 800ec92:	6003      	str	r3, [r0, #0]
 800ec94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ec98:	60c3      	str	r3, [r0, #12]
 800ec9a:	e7f4      	b.n	800ec86 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ec9c:	2303      	movs	r3, #3
 800ec9e:	6003      	str	r3, [r0, #0]
 800eca0:	f240 134d 	movw	r3, #333	; 0x14d
 800eca4:	e7f8      	b.n	800ec98 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800eca6:	2305      	movs	r3, #5
 800eca8:	6003      	str	r3, [r0, #0]
 800ecaa:	23c8      	movs	r3, #200	; 0xc8
 800ecac:	e7f4      	b.n	800ec98 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ecae:	2300      	movs	r3, #0
 800ecb0:	2201      	movs	r2, #1
 800ecb2:	6003      	str	r3, [r0, #0]
 800ecb4:	60c3      	str	r3, [r0, #12]
 800ecb6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ecba:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ecbe:	615a      	str	r2, [r3, #20]
 800ecc0:	e7e1      	b.n	800ec86 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ecc2:	4770      	bx	lr

0800ecc4 <Hardware::Hardware()>:
 800ecc4:	b570      	push	{r4, r5, r6, lr}
 800ecc6:	2400      	movs	r4, #0
 800ecc8:	4b26      	ldr	r3, [pc, #152]	; (800ed64 <Hardware::Hardware()+0xa0>)
 800ecca:	b090      	sub	sp, #64	; 0x40
 800eccc:	6004      	str	r4, [r0, #0]
 800ecce:	7104      	strb	r4, [r0, #4]
 800ecd0:	6018      	str	r0, [r3, #0]
 800ecd2:	4605      	mov	r5, r0
 800ecd4:	f7f8 fc14 	bl	8007500 <console_init>
 800ecd8:	f000 fab4 	bl	800f244 <systick_config>
 800ecdc:	f001 fb8c 	bl	80103f8 <udelay_init()>
 800ece0:	f001 fb88 	bl	80103f4 <micros_init()>
 800ece4:	f240 701b 	movw	r0, #1819	; 0x71b
 800ece8:	f000 fd18 	bl	800f71c <rcu_periph_clock_enable>
 800ecec:	f240 701c 	movw	r0, #1820	; 0x71c
 800ecf0:	f000 fd14 	bl	800f71c <rcu_periph_clock_enable>
 800ecf4:	4e1c      	ldr	r6, [pc, #112]	; (800ed68 <Hardware::Hardware()+0xa4>)
 800ecf6:	f000 fd09 	bl	800f70c <pmu_backup_write_enable>
 800ecfa:	f000 fb41 	bl	800f380 <bkp_deinit>
 800ecfe:	4621      	mov	r1, r4
 800ed00:	2002      	movs	r0, #2
 800ed02:	f000 fb45 	bl	800f390 <bkp_data_write>
 800ed06:	f240 7004 	movw	r0, #1796	; 0x704
 800ed0a:	f000 fd07 	bl	800f71c <rcu_periph_clock_enable>
 800ed0e:	4630      	mov	r0, r6
 800ed10:	f000 fe62 	bl	800f9d8 <timer_deinit>
 800ed14:	236b      	movs	r3, #107	; 0x6b
 800ed16:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ed1a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ed1e:	a903      	add	r1, sp, #12
 800ed20:	4630      	mov	r0, r6
 800ed22:	9305      	str	r3, [sp, #20]
 800ed24:	f000 feba 	bl	800fa9c <timer_init>
 800ed28:	4630      	mov	r0, r6
 800ed2a:	f000 ff0f 	bl	800fb4c <timer_enable>
 800ed2e:	f001 f8e3 	bl	800fef8 <gd32_adc_init()>
 800ed32:	2213      	movs	r2, #19
 800ed34:	2302      	movs	r3, #2
 800ed36:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800ed3a:	237a      	movs	r3, #122	; 0x7a
 800ed3c:	a807      	add	r0, sp, #28
 800ed3e:	930c      	str	r3, [sp, #48]	; 0x30
 800ed40:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800ed44:	9407      	str	r4, [sp, #28]
 800ed46:	940f      	str	r4, [sp, #60]	; 0x3c
 800ed48:	f000 f9a2 	bl	800f090 <mktime>
 800ed4c:	4621      	mov	r1, r4
 800ed4e:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800ed52:	a801      	add	r0, sp, #4
 800ed54:	f000 fa12 	bl	800f17c <settimeofday>
 800ed58:	f001 f928 	bl	800ffac <gd32_i2c_begin()>
 800ed5c:	4628      	mov	r0, r5
 800ed5e:	b010      	add	sp, #64	; 0x40
 800ed60:	bd70      	pop	{r4, r5, r6, pc}
 800ed62:	bf00      	nop
 800ed64:	20009bac 	andcs	r9, r0, ip, lsr #23
 800ed68:	40001000 	andmi	r1, r0, r0

0800ed6c <Hardware::Reboot()>:
 800ed6c:	b508      	push	{r3, lr}
 800ed6e:	6803      	ldr	r3, [r0, #0]
 800ed70:	4604      	mov	r4, r0
 800ed72:	b153      	cbz	r3, 800ed8a <Hardware::Reboot()+0x1e>
 800ed74:	2300      	movs	r3, #0
 800ed76:	2104      	movs	r1, #4
 800ed78:	7103      	strb	r3, [r0, #4]
 800ed7a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ed7e:	f000 fc0b 	bl	800f598 <fwdgt_config>
 800ed82:	6820      	ldr	r0, [r4, #0]
 800ed84:	6803      	ldr	r3, [r0, #0]
 800ed86:	689b      	ldr	r3, [r3, #8]
 800ed88:	4798      	blx	r3
 800ed8a:	2102      	movs	r1, #2
 800ed8c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ed90:	f000 fc02 	bl	800f598 <fwdgt_config>
 800ed94:	2801      	cmp	r0, #1
 800ed96:	bf0c      	ite	eq
 800ed98:	2301      	moveq	r3, #1
 800ed9a:	2300      	movne	r3, #0
 800ed9c:	7123      	strb	r3, [r4, #4]
 800ed9e:	d101      	bne.n	800eda4 <Hardware::Reboot()+0x38>
 800eda0:	f000 fbea 	bl	800f578 <fwdgt_enable>
 800eda4:	2208      	movs	r2, #8
 800eda6:	4b0d      	ldr	r3, [pc, #52]	; (800eddc <Hardware::Reboot()+0x70>)
 800eda8:	2501      	movs	r5, #1
 800edaa:	681b      	ldr	r3, [r3, #0]
 800edac:	480c      	ldr	r0, [pc, #48]	; (800ede0 <Hardware::Reboot()+0x74>)
 800edae:	601a      	str	r2, [r3, #0]
 800edb0:	227d      	movs	r2, #125	; 0x7d
 800edb2:	490c      	ldr	r1, [pc, #48]	; (800ede4 <Hardware::Reboot()+0x78>)
 800edb4:	60da      	str	r2, [r3, #12]
 800edb6:	68dc      	ldr	r4, [r3, #12]
 800edb8:	b904      	cbnz	r4, 800edbc <Hardware::Reboot()+0x50>
 800edba:	e7fe      	b.n	800edba <Hardware::Reboot()+0x4e>
 800edbc:	6802      	ldr	r2, [r0, #0]
 800edbe:	695e      	ldr	r6, [r3, #20]
 800edc0:	1b92      	subs	r2, r2, r6
 800edc2:	4294      	cmp	r4, r2
 800edc4:	d8f8      	bhi.n	800edb8 <Hardware::Reboot()+0x4c>
 800edc6:	6802      	ldr	r2, [r0, #0]
 800edc8:	615a      	str	r2, [r3, #20]
 800edca:	691a      	ldr	r2, [r3, #16]
 800edcc:	2a01      	cmp	r2, #1
 800edce:	f082 0401 	eor.w	r4, r2, #1
 800edd2:	611c      	str	r4, [r3, #16]
 800edd4:	bf14      	ite	ne
 800edd6:	610d      	strne	r5, [r1, #16]
 800edd8:	614a      	streq	r2, [r1, #20]
 800edda:	e7ec      	b.n	800edb6 <Hardware::Reboot()+0x4a>
 800eddc:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800ede0:	20009bc4 	andcs	r9, r0, r4, asr #23
 800ede4:	40011000 	andmi	r1, r1, r0

0800ede8 <operator delete(void*)>:
 800ede8:	f000 b890 	b.w	800ef0c <free>

0800edec <operator delete[](void*)>:
 800edec:	f000 b88e 	b.w	800ef0c <free>

0800edf0 <operator new(unsigned int)>:
 800edf0:	f000 b842 	b.w	800ee78 <malloc>

0800edf4 <operator new[](unsigned int)>:
 800edf4:	f000 b840 	b.w	800ee78 <malloc>

0800edf8 <inet_aton>:
 800edf8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800edfa:	f04f 0c0a 	mov.w	ip, #10
 800edfe:	2500      	movs	r5, #0
 800ee00:	ae01      	add	r6, sp, #4
 800ee02:	4603      	mov	r3, r0
 800ee04:	2200      	movs	r2, #0
 800ee06:	1d07      	adds	r7, r0, #4
 800ee08:	e007      	b.n	800ee1a <inet_aton+0x22>
 800ee0a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee0e:	2b09      	cmp	r3, #9
 800ee10:	d820      	bhi.n	800ee54 <inet_aton+0x5c>
 800ee12:	4603      	mov	r3, r0
 800ee14:	fb0c 4202 	mla	r2, ip, r2, r4
 800ee18:	3a30      	subs	r2, #48	; 0x30
 800ee1a:	4618      	mov	r0, r3
 800ee1c:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ee20:	2c2e      	cmp	r4, #46	; 0x2e
 800ee22:	d111      	bne.n	800ee48 <inet_aton+0x50>
 800ee24:	3501      	adds	r5, #1
 800ee26:	2d03      	cmp	r5, #3
 800ee28:	f806 2b01 	strb.w	r2, [r6], #1
 800ee2c:	d1e9      	bne.n	800ee02 <inet_aton+0xa>
 800ee2e:	2200      	movs	r2, #0
 800ee30:	250a      	movs	r5, #10
 800ee32:	1d1c      	adds	r4, r3, #4
 800ee34:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ee38:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800ee3c:	d10d      	bne.n	800ee5a <inet_aton+0x62>
 800ee3e:	f88d 2007 	strb.w	r2, [sp, #7]
 800ee42:	b9b1      	cbnz	r1, 800ee72 <inet_aton+0x7a>
 800ee44:	2001      	movs	r0, #1
 800ee46:	e006      	b.n	800ee56 <inet_aton+0x5e>
 800ee48:	2c00      	cmp	r4, #0
 800ee4a:	d0eb      	beq.n	800ee24 <inet_aton+0x2c>
 800ee4c:	2c0a      	cmp	r4, #10
 800ee4e:	d0e9      	beq.n	800ee24 <inet_aton+0x2c>
 800ee50:	42b8      	cmp	r0, r7
 800ee52:	d1da      	bne.n	800ee0a <inet_aton+0x12>
 800ee54:	2000      	movs	r0, #0
 800ee56:	b003      	add	sp, #12
 800ee58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee5a:	280a      	cmp	r0, #10
 800ee5c:	d0ef      	beq.n	800ee3e <inet_aton+0x46>
 800ee5e:	42a3      	cmp	r3, r4
 800ee60:	d0f8      	beq.n	800ee54 <inet_aton+0x5c>
 800ee62:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800ee66:	2e09      	cmp	r6, #9
 800ee68:	d8f4      	bhi.n	800ee54 <inet_aton+0x5c>
 800ee6a:	fb05 0202 	mla	r2, r5, r2, r0
 800ee6e:	3a30      	subs	r2, #48	; 0x30
 800ee70:	e7e0      	b.n	800ee34 <inet_aton+0x3c>
 800ee72:	9b01      	ldr	r3, [sp, #4]
 800ee74:	600b      	str	r3, [r1, #0]
 800ee76:	e7e5      	b.n	800ee44 <inet_aton+0x4c>

0800ee78 <malloc>:
 800ee78:	b538      	push	{r3, r4, r5, lr}
 800ee7a:	4604      	mov	r4, r0
 800ee7c:	4601      	mov	r1, r0
 800ee7e:	481c      	ldr	r0, [pc, #112]	; (800eef0 <malloc+0x78>)
 800ee80:	f7f9 fccc 	bl	800881c <printf>
 800ee84:	b17c      	cbz	r4, 800eea6 <malloc+0x2e>
 800ee86:	4b1b      	ldr	r3, [pc, #108]	; (800eef4 <malloc+0x7c>)
 800ee88:	6818      	ldr	r0, [r3, #0]
 800ee8a:	b978      	cbnz	r0, 800eeac <malloc+0x34>
 800ee8c:	4a1a      	ldr	r2, [pc, #104]	; (800eef8 <malloc+0x80>)
 800ee8e:	f104 031b 	add.w	r3, r4, #27
 800ee92:	6811      	ldr	r1, [r2, #0]
 800ee94:	4819      	ldr	r0, [pc, #100]	; (800eefc <malloc+0x84>)
 800ee96:	f023 030f 	bic.w	r3, r3, #15
 800ee9a:	440b      	add	r3, r1
 800ee9c:	4283      	cmp	r3, r0
 800ee9e:	d921      	bls.n	800eee4 <malloc+0x6c>
 800eea0:	4817      	ldr	r0, [pc, #92]	; (800ef00 <malloc+0x88>)
 800eea2:	f7f9 fcbb 	bl	800881c <printf>
 800eea6:	2500      	movs	r5, #0
 800eea8:	4628      	mov	r0, r5
 800eeaa:	bd38      	pop	{r3, r4, r5, pc}
 800eeac:	4284      	cmp	r4, r0
 800eeae:	d80a      	bhi.n	800eec6 <malloc+0x4e>
 800eeb0:	685a      	ldr	r2, [r3, #4]
 800eeb2:	6899      	ldr	r1, [r3, #8]
 800eeb4:	3201      	adds	r2, #1
 800eeb6:	428a      	cmp	r2, r1
 800eeb8:	605a      	str	r2, [r3, #4]
 800eeba:	d900      	bls.n	800eebe <malloc+0x46>
 800eebc:	609a      	str	r2, [r3, #8]
 800eebe:	68d9      	ldr	r1, [r3, #12]
 800eec0:	b919      	cbnz	r1, 800eeca <malloc+0x52>
 800eec2:	4604      	mov	r4, r0
 800eec4:	e7e2      	b.n	800ee8c <malloc+0x14>
 800eec6:	3310      	adds	r3, #16
 800eec8:	e7de      	b.n	800ee88 <malloc+0x10>
 800eeca:	4604      	mov	r4, r0
 800eecc:	688a      	ldr	r2, [r1, #8]
 800eece:	60da      	str	r2, [r3, #12]
 800eed0:	2300      	movs	r3, #0
 800eed2:	f101 050c 	add.w	r5, r1, #12
 800eed6:	608b      	str	r3, [r1, #8]
 800eed8:	4622      	mov	r2, r4
 800eeda:	462b      	mov	r3, r5
 800eedc:	4809      	ldr	r0, [pc, #36]	; (800ef04 <malloc+0x8c>)
 800eede:	f7f9 fc9d 	bl	800881c <printf>
 800eee2:	e7e1      	b.n	800eea8 <malloc+0x30>
 800eee4:	6013      	str	r3, [r2, #0]
 800eee6:	4b08      	ldr	r3, [pc, #32]	; (800ef08 <malloc+0x90>)
 800eee8:	e9c1 3400 	strd	r3, r4, [r1]
 800eeec:	e7f0      	b.n	800eed0 <malloc+0x58>
 800eeee:	bf00      	nop
 800eef0:	080129fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, sp}
 800eef4:	20000024 	andcs	r0, r0, r4, lsr #32
 800eef8:	20000020 	andcs	r0, r0, r0, lsr #32
 800eefc:	20016800 	andcs	r6, r1, r0, lsl #16
 800ef00:	08012a08 	stmdaeq	r1, {r3, r9, fp, sp}
 800ef04:	08012a24 	stmdaeq	r1, {r2, r5, r9, fp, sp}
 800ef08:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800ef0c <free>:
 800ef0c:	b538      	push	{r3, r4, r5, lr}
 800ef0e:	4604      	mov	r4, r0
 800ef10:	b1c8      	cbz	r0, 800ef46 <free+0x3a>
 800ef12:	f1a0 050c 	sub.w	r5, r0, #12
 800ef16:	4602      	mov	r2, r0
 800ef18:	4629      	mov	r1, r5
 800ef1a:	480c      	ldr	r0, [pc, #48]	; (800ef4c <free+0x40>)
 800ef1c:	f7f9 fc7e 	bl	800881c <printf>
 800ef20:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800ef24:	4b0a      	ldr	r3, [pc, #40]	; (800ef50 <free+0x44>)
 800ef26:	429a      	cmp	r2, r3
 800ef28:	d10d      	bne.n	800ef46 <free+0x3a>
 800ef2a:	4b0a      	ldr	r3, [pc, #40]	; (800ef54 <free+0x48>)
 800ef2c:	681a      	ldr	r2, [r3, #0]
 800ef2e:	b152      	cbz	r2, 800ef46 <free+0x3a>
 800ef30:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800ef34:	4291      	cmp	r1, r2
 800ef36:	d107      	bne.n	800ef48 <free+0x3c>
 800ef38:	68da      	ldr	r2, [r3, #12]
 800ef3a:	f844 2c04 	str.w	r2, [r4, #-4]
 800ef3e:	685a      	ldr	r2, [r3, #4]
 800ef40:	60dd      	str	r5, [r3, #12]
 800ef42:	3a01      	subs	r2, #1
 800ef44:	605a      	str	r2, [r3, #4]
 800ef46:	bd38      	pop	{r3, r4, r5, pc}
 800ef48:	3310      	adds	r3, #16
 800ef4a:	e7ef      	b.n	800ef2c <free+0x20>
 800ef4c:	08012a4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, fp, sp}
 800ef50:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800ef54:	20000024 	andcs	r0, r0, r4, lsr #32

0800ef58 <memcpy>:
 800ef58:	b510      	push	{r4, lr}
 800ef5a:	1e43      	subs	r3, r0, #1
 800ef5c:	440a      	add	r2, r1
 800ef5e:	4291      	cmp	r1, r2
 800ef60:	d100      	bne.n	800ef64 <memcpy+0xc>
 800ef62:	bd10      	pop	{r4, pc}
 800ef64:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ef68:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ef6c:	e7f7      	b.n	800ef5e <memcpy+0x6>

0800ef6e <memmove>:
 800ef6e:	4288      	cmp	r0, r1
 800ef70:	b510      	push	{r4, lr}
 800ef72:	eb01 0302 	add.w	r3, r1, r2
 800ef76:	d208      	bcs.n	800ef8a <memmove+0x1c>
 800ef78:	1e42      	subs	r2, r0, #1
 800ef7a:	4299      	cmp	r1, r3
 800ef7c:	d100      	bne.n	800ef80 <memmove+0x12>
 800ef7e:	bd10      	pop	{r4, pc}
 800ef80:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ef84:	f802 4f01 	strb.w	r4, [r2, #1]!
 800ef88:	e7f7      	b.n	800ef7a <memmove+0xc>
 800ef8a:	4601      	mov	r1, r0
 800ef8c:	4402      	add	r2, r0
 800ef8e:	428a      	cmp	r2, r1
 800ef90:	d0f5      	beq.n	800ef7e <memmove+0x10>
 800ef92:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800ef96:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800ef9a:	e7f8      	b.n	800ef8e <memmove+0x20>

0800ef9c <memset>:
 800ef9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef9e:	b1c2      	cbz	r2, 800efd2 <memset+0x36>
 800efa0:	4603      	mov	r3, r0
 800efa2:	b2c9      	uxtb	r1, r1
 800efa4:	075c      	lsls	r4, r3, #29
 800efa6:	d110      	bne.n	800efca <memset+0x2e>
 800efa8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800efac:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800efb0:	463d      	mov	r5, r7
 800efb2:	461e      	mov	r6, r3
 800efb4:	f022 0407 	bic.w	r4, r2, #7
 800efb8:	441c      	add	r4, r3
 800efba:	42a6      	cmp	r6, r4
 800efbc:	d10a      	bne.n	800efd4 <memset+0x38>
 800efbe:	4413      	add	r3, r2
 800efc0:	429c      	cmp	r4, r3
 800efc2:	d006      	beq.n	800efd2 <memset+0x36>
 800efc4:	f804 1b01 	strb.w	r1, [r4], #1
 800efc8:	e7fa      	b.n	800efc0 <memset+0x24>
 800efca:	3a01      	subs	r2, #1
 800efcc:	f803 1b01 	strb.w	r1, [r3], #1
 800efd0:	d1e8      	bne.n	800efa4 <memset+0x8>
 800efd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efd4:	f846 7b08 	str.w	r7, [r6], #8
 800efd8:	f846 5c04 	str.w	r5, [r6, #-4]
 800efdc:	e7ed      	b.n	800efba <memset+0x1e>

0800efde <puts>:
 800efde:	b508      	push	{r3, lr}
 800efe0:	f7ff fd86 	bl	800eaf0 <console_puts>
 800efe4:	200a      	movs	r0, #10
 800efe6:	f7ff fd81 	bl	800eaec <console_putc>
 800efea:	2001      	movs	r0, #1
 800efec:	bd08      	pop	{r3, pc}
	...

0800eff0 <strtok>:
 800eff0:	b530      	push	{r4, r5, lr}
 800eff2:	b910      	cbnz	r0, 800effa <strtok+0xa>
 800eff4:	4b12      	ldr	r3, [pc, #72]	; (800f040 <strtok+0x50>)
 800eff6:	6818      	ldr	r0, [r3, #0]
 800eff8:	b158      	cbz	r0, 800f012 <strtok+0x22>
 800effa:	4603      	mov	r3, r0
 800effc:	460d      	mov	r5, r1
 800effe:	4618      	mov	r0, r3
 800f000:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f004:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f008:	b924      	cbnz	r4, 800f014 <strtok+0x24>
 800f00a:	b94a      	cbnz	r2, 800f020 <strtok+0x30>
 800f00c:	4610      	mov	r0, r2
 800f00e:	4b0c      	ldr	r3, [pc, #48]	; (800f040 <strtok+0x50>)
 800f010:	601a      	str	r2, [r3, #0]
 800f012:	bd30      	pop	{r4, r5, pc}
 800f014:	42a2      	cmp	r2, r4
 800f016:	d1f5      	bne.n	800f004 <strtok+0x14>
 800f018:	e7f0      	b.n	800effc <strtok+0xc>
 800f01a:	4613      	mov	r3, r2
 800f01c:	e00c      	b.n	800f038 <strtok+0x48>
 800f01e:	b914      	cbnz	r4, 800f026 <strtok+0x36>
 800f020:	460d      	mov	r5, r1
 800f022:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f026:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f02a:	42a2      	cmp	r2, r4
 800f02c:	d1f7      	bne.n	800f01e <strtok+0x2e>
 800f02e:	2a00      	cmp	r2, #0
 800f030:	d0f3      	beq.n	800f01a <strtok+0x2a>
 800f032:	2200      	movs	r2, #0
 800f034:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f038:	4a01      	ldr	r2, [pc, #4]	; (800f040 <strtok+0x50>)
 800f03a:	6013      	str	r3, [r2, #0]
 800f03c:	e7e9      	b.n	800f012 <strtok+0x22>
 800f03e:	bf00      	nop
 800f040:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0

0800f044 <isleapyear>:
 800f044:	2264      	movs	r2, #100	; 0x64
 800f046:	fb90 f3f2 	sdiv	r3, r0, r2
 800f04a:	fb02 0313 	mls	r3, r2, r3, r0
 800f04e:	b94b      	cbnz	r3, 800f064 <isleapyear+0x20>
 800f050:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800f054:	fb90 f2f3 	sdiv	r2, r0, r3
 800f058:	fb03 0012 	mls	r0, r3, r2, r0
 800f05c:	fab0 f080 	clz	r0, r0
 800f060:	0940      	lsrs	r0, r0, #5
 800f062:	4770      	bx	lr
 800f064:	f010 0f03 	tst.w	r0, #3
 800f068:	bf0c      	ite	eq
 800f06a:	2001      	moveq	r0, #1
 800f06c:	2000      	movne	r0, #0
 800f06e:	4770      	bx	lr

0800f070 <getdaysofmonth>:
 800f070:	b510      	push	{r4, lr}
 800f072:	4604      	mov	r4, r0
 800f074:	2c01      	cmp	r4, #1
 800f076:	4608      	mov	r0, r1
 800f078:	d102      	bne.n	800f080 <getdaysofmonth+0x10>
 800f07a:	f7ff ffe3 	bl	800f044 <isleapyear>
 800f07e:	b918      	cbnz	r0, 800f088 <getdaysofmonth+0x18>
 800f080:	4b02      	ldr	r3, [pc, #8]	; (800f08c <getdaysofmonth+0x1c>)
 800f082:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800f086:	bd10      	pop	{r4, pc}
 800f088:	201d      	movs	r0, #29
 800f08a:	e7fc      	b.n	800f086 <getdaysofmonth+0x16>
 800f08c:	08012a78 	stmdaeq	r1, {r3, r4, r5, r6, r9, fp, sp}

0800f090 <mktime>:
 800f090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f094:	4604      	mov	r4, r0
 800f096:	2800      	cmp	r0, #0
 800f098:	d043      	beq.n	800f122 <mktime+0x92>
 800f09a:	6941      	ldr	r1, [r0, #20]
 800f09c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800f0a0:	2b45      	cmp	r3, #69	; 0x45
 800f0a2:	d83e      	bhi.n	800f122 <mktime+0x92>
 800f0a4:	2600      	movs	r6, #0
 800f0a6:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800f0aa:	f240 186d 	movw	r8, #365	; 0x16d
 800f0ae:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800f0b2:	42af      	cmp	r7, r5
 800f0b4:	da24      	bge.n	800f100 <mktime+0x70>
 800f0b6:	6927      	ldr	r7, [r4, #16]
 800f0b8:	2f0b      	cmp	r7, #11
 800f0ba:	d832      	bhi.n	800f122 <mktime+0x92>
 800f0bc:	2500      	movs	r5, #0
 800f0be:	42af      	cmp	r7, r5
 800f0c0:	d129      	bne.n	800f116 <mktime+0x86>
 800f0c2:	68e5      	ldr	r5, [r4, #12]
 800f0c4:	2d00      	cmp	r5, #0
 800f0c6:	dd2c      	ble.n	800f122 <mktime+0x92>
 800f0c8:	4638      	mov	r0, r7
 800f0ca:	f7ff ffd1 	bl	800f070 <getdaysofmonth>
 800f0ce:	4285      	cmp	r5, r0
 800f0d0:	dc27      	bgt.n	800f122 <mktime+0x92>
 800f0d2:	2318      	movs	r3, #24
 800f0d4:	3d01      	subs	r5, #1
 800f0d6:	4435      	add	r5, r6
 800f0d8:	435d      	muls	r5, r3
 800f0da:	68a3      	ldr	r3, [r4, #8]
 800f0dc:	2b17      	cmp	r3, #23
 800f0de:	d820      	bhi.n	800f122 <mktime+0x92>
 800f0e0:	213c      	movs	r1, #60	; 0x3c
 800f0e2:	442b      	add	r3, r5
 800f0e4:	fb01 f203 	mul.w	r2, r1, r3
 800f0e8:	6863      	ldr	r3, [r4, #4]
 800f0ea:	2b3b      	cmp	r3, #59	; 0x3b
 800f0ec:	d819      	bhi.n	800f122 <mktime+0x92>
 800f0ee:	6820      	ldr	r0, [r4, #0]
 800f0f0:	4413      	add	r3, r2
 800f0f2:	283b      	cmp	r0, #59	; 0x3b
 800f0f4:	fb01 f303 	mul.w	r3, r1, r3
 800f0f8:	d813      	bhi.n	800f122 <mktime+0x92>
 800f0fa:	4418      	add	r0, r3
 800f0fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f100:	4628      	mov	r0, r5
 800f102:	f7ff ff9f 	bl	800f044 <isleapyear>
 800f106:	2800      	cmp	r0, #0
 800f108:	bf14      	ite	ne
 800f10a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800f10e:	4643      	moveq	r3, r8
 800f110:	3501      	adds	r5, #1
 800f112:	441e      	add	r6, r3
 800f114:	e7cd      	b.n	800f0b2 <mktime+0x22>
 800f116:	4628      	mov	r0, r5
 800f118:	f7ff ffaa 	bl	800f070 <getdaysofmonth>
 800f11c:	3501      	adds	r5, #1
 800f11e:	4406      	add	r6, r0
 800f120:	e7cd      	b.n	800f0be <mktime+0x2e>
 800f122:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f126:	e7e9      	b.n	800f0fc <mktime+0x6c>

0800f128 <gettimeofday>:
 800f128:	b538      	push	{r3, r4, r5, lr}
 800f12a:	4b10      	ldr	r3, [pc, #64]	; (800f16c <gettimeofday+0x44>)
 800f12c:	4a10      	ldr	r2, [pc, #64]	; (800f170 <gettimeofday+0x48>)
 800f12e:	681b      	ldr	r3, [r3, #0]
 800f130:	6814      	ldr	r4, [r2, #0]
 800f132:	6013      	str	r3, [r2, #0]
 800f134:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f138:	429c      	cmp	r4, r3
 800f13a:	bf2c      	ite	cs
 800f13c:	1ae4      	subcs	r4, r4, r3
 800f13e:	1b1c      	subcc	r4, r3, r4
 800f140:	4354      	muls	r4, r2
 800f142:	4b0c      	ldr	r3, [pc, #48]	; (800f174 <gettimeofday+0x4c>)
 800f144:	4605      	mov	r5, r0
 800f146:	e9d3 2100 	ldrd	r2, r1, [r3]
 800f14a:	18a4      	adds	r4, r4, r2
 800f14c:	f141 0100 	adc.w	r1, r1, #0
 800f150:	e9c3 4100 	strd	r4, r1, [r3]
 800f154:	4620      	mov	r0, r4
 800f156:	2300      	movs	r3, #0
 800f158:	4a07      	ldr	r2, [pc, #28]	; (800f178 <gettimeofday+0x50>)
 800f15a:	f7f8 fcc3 	bl	8007ae4 <__aeabi_uldivmod>
 800f15e:	4b06      	ldr	r3, [pc, #24]	; (800f178 <gettimeofday+0x50>)
 800f160:	6028      	str	r0, [r5, #0]
 800f162:	fb03 4410 	mls	r4, r3, r0, r4
 800f166:	2000      	movs	r0, #0
 800f168:	606c      	str	r4, [r5, #4]
 800f16a:	bd38      	pop	{r3, r4, r5, pc}
 800f16c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800f170:	20009bc0 	andcs	r9, r0, r0, asr #23
 800f174:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f178:	000f4240 	andeq	r4, pc, r0, asr #4

0800f17c <settimeofday>:
 800f17c:	4b07      	ldr	r3, [pc, #28]	; (800f19c <settimeofday+0x20>)
 800f17e:	b510      	push	{r4, lr}
 800f180:	681a      	ldr	r2, [r3, #0]
 800f182:	4b07      	ldr	r3, [pc, #28]	; (800f1a0 <settimeofday+0x24>)
 800f184:	6804      	ldr	r4, [r0, #0]
 800f186:	601a      	str	r2, [r3, #0]
 800f188:	6843      	ldr	r3, [r0, #4]
 800f18a:	4806      	ldr	r0, [pc, #24]	; (800f1a4 <settimeofday+0x28>)
 800f18c:	17da      	asrs	r2, r3, #31
 800f18e:	fbc4 3200 	smlal	r3, r2, r4, r0
 800f192:	4905      	ldr	r1, [pc, #20]	; (800f1a8 <settimeofday+0x2c>)
 800f194:	2000      	movs	r0, #0
 800f196:	e9c1 3200 	strd	r3, r2, [r1]
 800f19a:	bd10      	pop	{r4, pc}
 800f19c:	20009bc4 	andcs	r9, r0, r4, asr #23
 800f1a0:	20009bc0 	andcs	r9, r0, r0, asr #23
 800f1a4:	000f4240 	andeq	r4, pc, r0, asr #4
 800f1a8:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8

0800f1ac <time>:
 800f1ac:	b513      	push	{r0, r1, r4, lr}
 800f1ae:	4604      	mov	r4, r0
 800f1b0:	2100      	movs	r1, #0
 800f1b2:	4668      	mov	r0, sp
 800f1b4:	f7ff ffb8 	bl	800f128 <gettimeofday>
 800f1b8:	9800      	ldr	r0, [sp, #0]
 800f1ba:	b104      	cbz	r4, 800f1be <time+0x12>
 800f1bc:	6020      	str	r0, [r4, #0]
 800f1be:	b002      	add	sp, #8
 800f1c0:	bd10      	pop	{r4, pc}
	...

0800f1c4 <uart0_init>:
 800f1c4:	2301      	movs	r3, #1
 800f1c6:	b507      	push	{r0, r1, r2, lr}
 800f1c8:	2208      	movs	r2, #8
 800f1ca:	9300      	str	r3, [sp, #0]
 800f1cc:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800f1d0:	2300      	movs	r3, #0
 800f1d2:	4803      	ldr	r0, [pc, #12]	; (800f1e0 <uart0_init+0x1c>)
 800f1d4:	f001 f836 	bl	8010244 <gd32_uart_begin>
 800f1d8:	b003      	add	sp, #12
 800f1da:	f85d fb04 	ldr.w	pc, [sp], #4
 800f1de:	bf00      	nop
 800f1e0:	40013800 	andmi	r3, r1, r0, lsl #16

0800f1e4 <uart0_putc>:
 800f1e4:	280a      	cmp	r0, #10
 800f1e6:	b538      	push	{r3, r4, r5, lr}
 800f1e8:	4604      	mov	r4, r0
 800f1ea:	d10a      	bne.n	800f202 <uart0_putc+0x1e>
 800f1ec:	4d0b      	ldr	r5, [pc, #44]	; (800f21c <uart0_putc+0x38>)
 800f1ee:	2107      	movs	r1, #7
 800f1f0:	4628      	mov	r0, r5
 800f1f2:	f000 fd8d 	bl	800fd10 <usart_flag_get>
 800f1f6:	2800      	cmp	r0, #0
 800f1f8:	d0f9      	beq.n	800f1ee <uart0_putc+0xa>
 800f1fa:	220d      	movs	r2, #13
 800f1fc:	4b08      	ldr	r3, [pc, #32]	; (800f220 <uart0_putc+0x3c>)
 800f1fe:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800f202:	4d06      	ldr	r5, [pc, #24]	; (800f21c <uart0_putc+0x38>)
 800f204:	2107      	movs	r1, #7
 800f206:	4628      	mov	r0, r5
 800f208:	f000 fd82 	bl	800fd10 <usart_flag_get>
 800f20c:	2800      	cmp	r0, #0
 800f20e:	d0f9      	beq.n	800f204 <uart0_putc+0x20>
 800f210:	4b03      	ldr	r3, [pc, #12]	; (800f220 <uart0_putc+0x3c>)
 800f212:	b2e4      	uxtb	r4, r4
 800f214:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800f218:	bd38      	pop	{r3, r4, r5, pc}
 800f21a:	bf00      	nop
 800f21c:	40013800 	andmi	r3, r1, r0, lsl #16
 800f220:	40013000 	andmi	r3, r1, r0

0800f224 <uart0_puts>:
 800f224:	b510      	push	{r4, lr}
 800f226:	1e44      	subs	r4, r0, #1
 800f228:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800f22c:	b903      	cbnz	r3, 800f230 <uart0_puts+0xc>
 800f22e:	bd10      	pop	{r4, pc}
 800f230:	2b0a      	cmp	r3, #10
 800f232:	d102      	bne.n	800f23a <uart0_puts+0x16>
 800f234:	200d      	movs	r0, #13
 800f236:	f7ff ffd5 	bl	800f1e4 <uart0_putc>
 800f23a:	7820      	ldrb	r0, [r4, #0]
 800f23c:	f7ff ffd2 	bl	800f1e4 <uart0_putc>
 800f240:	e7f2      	b.n	800f228 <uart0_puts+0x4>
	...

0800f244 <systick_config>:
 800f244:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f248:	4b0b      	ldr	r3, [pc, #44]	; (800f278 <systick_config+0x34>)
 800f24a:	681b      	ldr	r3, [r3, #0]
 800f24c:	fbb3 f3f2 	udiv	r3, r3, r2
 800f250:	3b01      	subs	r3, #1
 800f252:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f256:	d20d      	bcs.n	800f274 <systick_config+0x30>
 800f258:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f25c:	21f0      	movs	r1, #240	; 0xf0
 800f25e:	6153      	str	r3, [r2, #20]
 800f260:	4b06      	ldr	r3, [pc, #24]	; (800f27c <systick_config+0x38>)
 800f262:	2007      	movs	r0, #7
 800f264:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f268:	2100      	movs	r1, #0
 800f26a:	6191      	str	r1, [r2, #24]
 800f26c:	6110      	str	r0, [r2, #16]
 800f26e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f272:	4770      	bx	lr
 800f274:	e7fe      	b.n	800f274 <systick_config+0x30>
 800f276:	bf00      	nop
 800f278:	200000f4 	strdcs	r0, [r0], -r4
 800f27c:	e000ed00 	and	lr, r0, r0, lsl #26

0800f280 <SysTick_Handler>:
 800f280:	4a02      	ldr	r2, [pc, #8]	; (800f28c <SysTick_Handler+0xc>)
 800f282:	6813      	ldr	r3, [r2, #0]
 800f284:	3301      	adds	r3, #1
 800f286:	6013      	str	r3, [r2, #0]
 800f288:	4770      	bx	lr
 800f28a:	bf00      	nop
 800f28c:	20009bc4 	andcs	r9, r0, r4, asr #23

0800f290 <SystemInit>:
 800f290:	4b37      	ldr	r3, [pc, #220]	; (800f370 <SystemInit+0xe0>)
 800f292:	4938      	ldr	r1, [pc, #224]	; (800f374 <SystemInit+0xe4>)
 800f294:	681a      	ldr	r2, [r3, #0]
 800f296:	f042 0201 	orr.w	r2, r2, #1
 800f29a:	601a      	str	r2, [r3, #0]
 800f29c:	685a      	ldr	r2, [r3, #4]
 800f29e:	f022 0203 	bic.w	r2, r2, #3
 800f2a2:	605a      	str	r2, [r3, #4]
 800f2a4:	681a      	ldr	r2, [r3, #0]
 800f2a6:	400a      	ands	r2, r1
 800f2a8:	601a      	str	r2, [r3, #0]
 800f2aa:	6858      	ldr	r0, [r3, #4]
 800f2ac:	4a32      	ldr	r2, [pc, #200]	; (800f378 <SystemInit+0xe8>)
 800f2ae:	4002      	ands	r2, r0
 800f2b0:	605a      	str	r2, [r3, #4]
 800f2b2:	681a      	ldr	r2, [r3, #0]
 800f2b4:	400a      	ands	r2, r1
 800f2b6:	601a      	str	r2, [r3, #0]
 800f2b8:	681a      	ldr	r2, [r3, #0]
 800f2ba:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800f2be:	601a      	str	r2, [r3, #0]
 800f2c0:	685a      	ldr	r2, [r3, #4]
 800f2c2:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800f2c6:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800f2ca:	605a      	str	r2, [r3, #4]
 800f2cc:	2200      	movs	r2, #0
 800f2ce:	62da      	str	r2, [r3, #44]	; 0x2c
 800f2d0:	681a      	ldr	r2, [r3, #0]
 800f2d2:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800f2d6:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800f2da:	601a      	str	r2, [r3, #0]
 800f2dc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800f2e0:	609a      	str	r2, [r3, #8]
 800f2e2:	681a      	ldr	r2, [r3, #0]
 800f2e4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f2e8:	601a      	str	r2, [r3, #0]
 800f2ea:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f2ee:	6819      	ldr	r1, [r3, #0]
 800f2f0:	0389      	lsls	r1, r1, #14
 800f2f2:	d401      	bmi.n	800f2f8 <SystemInit+0x68>
 800f2f4:	3a01      	subs	r2, #1
 800f2f6:	d1fa      	bne.n	800f2ee <SystemInit+0x5e>
 800f2f8:	681a      	ldr	r2, [r3, #0]
 800f2fa:	0392      	lsls	r2, r2, #14
 800f2fc:	d400      	bmi.n	800f300 <SystemInit+0x70>
 800f2fe:	e7fe      	b.n	800f2fe <SystemInit+0x6e>
 800f300:	685a      	ldr	r2, [r3, #4]
 800f302:	605a      	str	r2, [r3, #4]
 800f304:	685a      	ldr	r2, [r3, #4]
 800f306:	605a      	str	r2, [r3, #4]
 800f308:	685a      	ldr	r2, [r3, #4]
 800f30a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f30e:	605a      	str	r2, [r3, #4]
 800f310:	685a      	ldr	r2, [r3, #4]
 800f312:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800f316:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800f31a:	605a      	str	r2, [r3, #4]
 800f31c:	685a      	ldr	r2, [r3, #4]
 800f31e:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800f322:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800f326:	605a      	str	r2, [r3, #4]
 800f328:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f32a:	4a14      	ldr	r2, [pc, #80]	; (800f37c <SystemInit+0xec>)
 800f32c:	400a      	ands	r2, r1
 800f32e:	62da      	str	r2, [r3, #44]	; 0x2c
 800f330:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f332:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800f336:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800f33a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f33c:	681a      	ldr	r2, [r3, #0]
 800f33e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800f342:	601a      	str	r2, [r3, #0]
 800f344:	681a      	ldr	r2, [r3, #0]
 800f346:	0110      	lsls	r0, r2, #4
 800f348:	d5fc      	bpl.n	800f344 <SystemInit+0xb4>
 800f34a:	681a      	ldr	r2, [r3, #0]
 800f34c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800f350:	601a      	str	r2, [r3, #0]
 800f352:	681a      	ldr	r2, [r3, #0]
 800f354:	0191      	lsls	r1, r2, #6
 800f356:	d5fc      	bpl.n	800f352 <SystemInit+0xc2>
 800f358:	685a      	ldr	r2, [r3, #4]
 800f35a:	f022 0203 	bic.w	r2, r2, #3
 800f35e:	605a      	str	r2, [r3, #4]
 800f360:	685a      	ldr	r2, [r3, #4]
 800f362:	f042 0202 	orr.w	r2, r2, #2
 800f366:	605a      	str	r2, [r3, #4]
 800f368:	685a      	ldr	r2, [r3, #4]
 800f36a:	0712      	lsls	r2, r2, #28
 800f36c:	d5fc      	bpl.n	800f368 <SystemInit+0xd8>
 800f36e:	4770      	bx	lr
 800f370:	40021000 	andmi	r1, r2, r0
 800f374:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800f378:	e0ff000c 	rscs	r0, pc, ip
 800f37c:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800f380 <bkp_deinit>:
 800f380:	b508      	push	{r3, lr}
 800f382:	f000 f9eb 	bl	800f75c <rcu_bkp_reset_enable>
 800f386:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f38a:	f000 b9ef 	b.w	800f76c <rcu_bkp_reset_disable>
	...

0800f390 <bkp_data_write>:
 800f390:	f1a0 030b 	sub.w	r3, r0, #11
 800f394:	2b1f      	cmp	r3, #31
 800f396:	d804      	bhi.n	800f3a2 <bkp_data_write+0x12>
 800f398:	4b07      	ldr	r3, [pc, #28]	; (800f3b8 <bkp_data_write+0x28>)
 800f39a:	4403      	add	r3, r0
 800f39c:	009b      	lsls	r3, r3, #2
 800f39e:	8019      	strh	r1, [r3, #0]
 800f3a0:	4770      	bx	lr
 800f3a2:	1e43      	subs	r3, r0, #1
 800f3a4:	2b09      	cmp	r3, #9
 800f3a6:	bf9f      	itttt	ls
 800f3a8:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800f3ac:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800f3b0:	0080      	lslls	r0, r0, #2
 800f3b2:	8001      	strhls	r1, [r0, #0]
 800f3b4:	4770      	bx	lr
 800f3b6:	bf00      	nop
 800f3b8:	10001b05 	andne	r1, r0, r5, lsl #22

0800f3bc <bkp_data_read>:
 800f3bc:	f1a0 030b 	sub.w	r3, r0, #11
 800f3c0:	2b1f      	cmp	r3, #31
 800f3c2:	d805      	bhi.n	800f3d0 <bkp_data_read+0x14>
 800f3c4:	4b08      	ldr	r3, [pc, #32]	; (800f3e8 <bkp_data_read+0x2c>)
 800f3c6:	4403      	add	r3, r0
 800f3c8:	009b      	lsls	r3, r3, #2
 800f3ca:	8818      	ldrh	r0, [r3, #0]
 800f3cc:	b280      	uxth	r0, r0
 800f3ce:	4770      	bx	lr
 800f3d0:	1e43      	subs	r3, r0, #1
 800f3d2:	2b09      	cmp	r3, #9
 800f3d4:	d806      	bhi.n	800f3e4 <bkp_data_read+0x28>
 800f3d6:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800f3da:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 800f3de:	0080      	lsls	r0, r0, #2
 800f3e0:	8800      	ldrh	r0, [r0, #0]
 800f3e2:	e7f3      	b.n	800f3cc <bkp_data_read+0x10>
 800f3e4:	2000      	movs	r0, #0
 800f3e6:	4770      	bx	lr
 800f3e8:	10001b05 	andne	r1, r0, r5, lsl #22

0800f3ec <dma_deinit>:
 800f3ec:	4b0c      	ldr	r3, [pc, #48]	; (800f420 <dma_deinit+0x34>)
 800f3ee:	4298      	cmp	r0, r3
 800f3f0:	d102      	bne.n	800f3f8 <dma_deinit+0xc>
 800f3f2:	2904      	cmp	r1, #4
 800f3f4:	d900      	bls.n	800f3f8 <dma_deinit+0xc>
 800f3f6:	e7fe      	b.n	800f3f6 <dma_deinit+0xa>
 800f3f8:	2314      	movs	r3, #20
 800f3fa:	fb03 0301 	mla	r3, r3, r1, r0
 800f3fe:	689a      	ldr	r2, [r3, #8]
 800f400:	0089      	lsls	r1, r1, #2
 800f402:	f022 0201 	bic.w	r2, r2, #1
 800f406:	609a      	str	r2, [r3, #8]
 800f408:	2200      	movs	r2, #0
 800f40a:	609a      	str	r2, [r3, #8]
 800f40c:	60da      	str	r2, [r3, #12]
 800f40e:	611a      	str	r2, [r3, #16]
 800f410:	615a      	str	r2, [r3, #20]
 800f412:	230f      	movs	r3, #15
 800f414:	6842      	ldr	r2, [r0, #4]
 800f416:	408b      	lsls	r3, r1
 800f418:	4313      	orrs	r3, r2
 800f41a:	6043      	str	r3, [r0, #4]
 800f41c:	4770      	bx	lr
 800f41e:	bf00      	nop
 800f420:	40020400 	andmi	r0, r2, r0, lsl #8

0800f424 <dma_init>:
 800f424:	4b1b      	ldr	r3, [pc, #108]	; (800f494 <dma_init+0x70>)
 800f426:	b510      	push	{r4, lr}
 800f428:	4298      	cmp	r0, r3
 800f42a:	d102      	bne.n	800f432 <dma_init+0xe>
 800f42c:	2904      	cmp	r1, #4
 800f42e:	d900      	bls.n	800f432 <dma_init+0xe>
 800f430:	e7fe      	b.n	800f430 <dma_init+0xc>
 800f432:	2314      	movs	r3, #20
 800f434:	fb03 0101 	mla	r1, r3, r1, r0
 800f438:	6813      	ldr	r3, [r2, #0]
 800f43a:	610b      	str	r3, [r1, #16]
 800f43c:	6893      	ldr	r3, [r2, #8]
 800f43e:	614b      	str	r3, [r1, #20]
 800f440:	8a13      	ldrh	r3, [r2, #16]
 800f442:	60cb      	str	r3, [r1, #12]
 800f444:	68d4      	ldr	r4, [r2, #12]
 800f446:	6853      	ldr	r3, [r2, #4]
 800f448:	6888      	ldr	r0, [r1, #8]
 800f44a:	4323      	orrs	r3, r4
 800f44c:	6954      	ldr	r4, [r2, #20]
 800f44e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800f452:	4323      	orrs	r3, r4
 800f454:	4303      	orrs	r3, r0
 800f456:	608b      	str	r3, [r1, #8]
 800f458:	7e13      	ldrb	r3, [r2, #24]
 800f45a:	2b01      	cmp	r3, #1
 800f45c:	688b      	ldr	r3, [r1, #8]
 800f45e:	bf0c      	ite	eq
 800f460:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800f464:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800f468:	608b      	str	r3, [r1, #8]
 800f46a:	7e53      	ldrb	r3, [r2, #25]
 800f46c:	2b01      	cmp	r3, #1
 800f46e:	688b      	ldr	r3, [r1, #8]
 800f470:	bf0c      	ite	eq
 800f472:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800f476:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800f47a:	608b      	str	r3, [r1, #8]
 800f47c:	7e93      	ldrb	r3, [r2, #26]
 800f47e:	b923      	cbnz	r3, 800f48a <dma_init+0x66>
 800f480:	688b      	ldr	r3, [r1, #8]
 800f482:	f023 0310 	bic.w	r3, r3, #16
 800f486:	608b      	str	r3, [r1, #8]
 800f488:	bd10      	pop	{r4, pc}
 800f48a:	688b      	ldr	r3, [r1, #8]
 800f48c:	f043 0310 	orr.w	r3, r3, #16
 800f490:	e7f9      	b.n	800f486 <dma_init+0x62>
 800f492:	bf00      	nop
 800f494:	40020400 	andmi	r0, r2, r0, lsl #8

0800f498 <dma_circulation_disable>:
 800f498:	4b06      	ldr	r3, [pc, #24]	; (800f4b4 <dma_circulation_disable+0x1c>)
 800f49a:	4298      	cmp	r0, r3
 800f49c:	d102      	bne.n	800f4a4 <dma_circulation_disable+0xc>
 800f49e:	2904      	cmp	r1, #4
 800f4a0:	d900      	bls.n	800f4a4 <dma_circulation_disable+0xc>
 800f4a2:	e7fe      	b.n	800f4a2 <dma_circulation_disable+0xa>
 800f4a4:	2314      	movs	r3, #20
 800f4a6:	4359      	muls	r1, r3
 800f4a8:	3008      	adds	r0, #8
 800f4aa:	580b      	ldr	r3, [r1, r0]
 800f4ac:	f023 0320 	bic.w	r3, r3, #32
 800f4b0:	500b      	str	r3, [r1, r0]
 800f4b2:	4770      	bx	lr
 800f4b4:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4b8 <dma_memory_to_memory_disable>:
 800f4b8:	4b06      	ldr	r3, [pc, #24]	; (800f4d4 <dma_memory_to_memory_disable+0x1c>)
 800f4ba:	4298      	cmp	r0, r3
 800f4bc:	d102      	bne.n	800f4c4 <dma_memory_to_memory_disable+0xc>
 800f4be:	2904      	cmp	r1, #4
 800f4c0:	d900      	bls.n	800f4c4 <dma_memory_to_memory_disable+0xc>
 800f4c2:	e7fe      	b.n	800f4c2 <dma_memory_to_memory_disable+0xa>
 800f4c4:	2314      	movs	r3, #20
 800f4c6:	4359      	muls	r1, r3
 800f4c8:	3008      	adds	r0, #8
 800f4ca:	580b      	ldr	r3, [r1, r0]
 800f4cc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800f4d0:	500b      	str	r3, [r1, r0]
 800f4d2:	4770      	bx	lr
 800f4d4:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4d8 <fmc_bank0_unlock>:
 800f4d8:	4b04      	ldr	r3, [pc, #16]	; (800f4ec <fmc_bank0_unlock+0x14>)
 800f4da:	691a      	ldr	r2, [r3, #16]
 800f4dc:	0612      	lsls	r2, r2, #24
 800f4de:	bf41      	itttt	mi
 800f4e0:	4a03      	ldrmi	r2, [pc, #12]	; (800f4f0 <fmc_bank0_unlock+0x18>)
 800f4e2:	605a      	strmi	r2, [r3, #4]
 800f4e4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f4e8:	605a      	strmi	r2, [r3, #4]
 800f4ea:	4770      	bx	lr
 800f4ec:	40022000 	andmi	r2, r2, r0
 800f4f0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f4f4 <fmc_bank1_unlock>:
 800f4f4:	4b04      	ldr	r3, [pc, #16]	; (800f508 <fmc_bank1_unlock+0x14>)
 800f4f6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f4f8:	0612      	lsls	r2, r2, #24
 800f4fa:	bf41      	itttt	mi
 800f4fc:	4a03      	ldrmi	r2, [pc, #12]	; (800f50c <fmc_bank1_unlock+0x18>)
 800f4fe:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f500:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f504:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f506:	4770      	bx	lr
 800f508:	40022000 	andmi	r2, r2, r0
 800f50c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f510 <fmc_bank0_lock>:
 800f510:	4a02      	ldr	r2, [pc, #8]	; (800f51c <fmc_bank0_lock+0xc>)
 800f512:	6913      	ldr	r3, [r2, #16]
 800f514:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f518:	6113      	str	r3, [r2, #16]
 800f51a:	4770      	bx	lr
 800f51c:	40022000 	andmi	r2, r2, r0

0800f520 <fmc_bank1_lock>:
 800f520:	4a02      	ldr	r2, [pc, #8]	; (800f52c <fmc_bank1_lock+0xc>)
 800f522:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800f524:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f528:	6513      	str	r3, [r2, #80]	; 0x50
 800f52a:	4770      	bx	lr
 800f52c:	40022000 	andmi	r2, r2, r0

0800f530 <fmc_bank0_state_get>:
 800f530:	4b07      	ldr	r3, [pc, #28]	; (800f550 <fmc_bank0_state_get+0x20>)
 800f532:	68da      	ldr	r2, [r3, #12]
 800f534:	07d1      	lsls	r1, r2, #31
 800f536:	d407      	bmi.n	800f548 <fmc_bank0_state_get+0x18>
 800f538:	68da      	ldr	r2, [r3, #12]
 800f53a:	06d2      	lsls	r2, r2, #27
 800f53c:	d406      	bmi.n	800f54c <fmc_bank0_state_get+0x1c>
 800f53e:	68d8      	ldr	r0, [r3, #12]
 800f540:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f544:	0040      	lsls	r0, r0, #1
 800f546:	4770      	bx	lr
 800f548:	2001      	movs	r0, #1
 800f54a:	4770      	bx	lr
 800f54c:	2003      	movs	r0, #3
 800f54e:	4770      	bx	lr
 800f550:	40022000 	andmi	r2, r2, r0

0800f554 <fmc_bank1_state_get>:
 800f554:	4b07      	ldr	r3, [pc, #28]	; (800f574 <fmc_bank1_state_get+0x20>)
 800f556:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f558:	07d1      	lsls	r1, r2, #31
 800f55a:	d407      	bmi.n	800f56c <fmc_bank1_state_get+0x18>
 800f55c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f55e:	06d2      	lsls	r2, r2, #27
 800f560:	d406      	bmi.n	800f570 <fmc_bank1_state_get+0x1c>
 800f562:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f564:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800f568:	0040      	lsls	r0, r0, #1
 800f56a:	4770      	bx	lr
 800f56c:	2001      	movs	r0, #1
 800f56e:	4770      	bx	lr
 800f570:	2003      	movs	r0, #3
 800f572:	4770      	bx	lr
 800f574:	40022000 	andmi	r2, r2, r0

0800f578 <fwdgt_enable>:
 800f578:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800f57c:	4b01      	ldr	r3, [pc, #4]	; (800f584 <fwdgt_enable+0xc>)
 800f57e:	601a      	str	r2, [r3, #0]
 800f580:	4770      	bx	lr
 800f582:	bf00      	nop
 800f584:	40003000 	andmi	r3, r0, r0

0800f588 <fwdgt_counter_reload>:
 800f588:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800f58c:	4b01      	ldr	r3, [pc, #4]	; (800f594 <fwdgt_counter_reload+0xc>)
 800f58e:	601a      	str	r2, [r3, #0]
 800f590:	4770      	bx	lr
 800f592:	bf00      	nop
 800f594:	40003000 	andmi	r3, r0, r0

0800f598 <fwdgt_config>:
 800f598:	f245 5355 	movw	r3, #21845	; 0x5555
 800f59c:	4a11      	ldr	r2, [pc, #68]	; (800f5e4 <fwdgt_config+0x4c>)
 800f59e:	b510      	push	{r4, lr}
 800f5a0:	4c11      	ldr	r4, [pc, #68]	; (800f5e8 <fwdgt_config+0x50>)
 800f5a2:	6013      	str	r3, [r2, #0]
 800f5a4:	68d3      	ldr	r3, [r2, #12]
 800f5a6:	3c01      	subs	r4, #1
 800f5a8:	f003 0301 	and.w	r3, r3, #1
 800f5ac:	d013      	beq.n	800f5d6 <fwdgt_config+0x3e>
 800f5ae:	2b00      	cmp	r3, #0
 800f5b0:	d1f8      	bne.n	800f5a4 <fwdgt_config+0xc>
 800f5b2:	6051      	str	r1, [r2, #4]
 800f5b4:	490c      	ldr	r1, [pc, #48]	; (800f5e8 <fwdgt_config+0x50>)
 800f5b6:	4a0b      	ldr	r2, [pc, #44]	; (800f5e4 <fwdgt_config+0x4c>)
 800f5b8:	68d3      	ldr	r3, [r2, #12]
 800f5ba:	3901      	subs	r1, #1
 800f5bc:	f003 0302 	and.w	r3, r3, #2
 800f5c0:	d00d      	beq.n	800f5de <fwdgt_config+0x46>
 800f5c2:	2b00      	cmp	r3, #0
 800f5c4:	d1f8      	bne.n	800f5b8 <fwdgt_config+0x20>
 800f5c6:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800f5ca:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800f5ce:	6090      	str	r0, [r2, #8]
 800f5d0:	2001      	movs	r0, #1
 800f5d2:	6013      	str	r3, [r2, #0]
 800f5d4:	e002      	b.n	800f5dc <fwdgt_config+0x44>
 800f5d6:	2b00      	cmp	r3, #0
 800f5d8:	d0eb      	beq.n	800f5b2 <fwdgt_config+0x1a>
 800f5da:	2000      	movs	r0, #0
 800f5dc:	bd10      	pop	{r4, pc}
 800f5de:	2b00      	cmp	r3, #0
 800f5e0:	d1fb      	bne.n	800f5da <fwdgt_config+0x42>
 800f5e2:	e7f0      	b.n	800f5c6 <fwdgt_config+0x2e>
 800f5e4:	40003000 	andmi	r3, r0, r0
 800f5e8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f5ec <gpio_init>:
 800f5ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5f0:	f04f 0c0f 	mov.w	ip, #15
 800f5f4:	06cf      	lsls	r7, r1, #27
 800f5f6:	f04f 0400 	mov.w	r4, #0
 800f5fa:	f04f 0701 	mov.w	r7, #1
 800f5fe:	f001 050f 	and.w	r5, r1, #15
 800f602:	bf48      	it	mi
 800f604:	4315      	orrmi	r5, r2
 800f606:	fa23 f204 	lsr.w	r2, r3, r4
 800f60a:	07d6      	lsls	r6, r2, #31
 800f60c:	d510      	bpl.n	800f630 <gpio_init+0x44>
 800f60e:	00a2      	lsls	r2, r4, #2
 800f610:	6806      	ldr	r6, [r0, #0]
 800f612:	fa0c fe02 	lsl.w	lr, ip, r2
 800f616:	ea26 060e 	bic.w	r6, r6, lr
 800f61a:	fa05 f202 	lsl.w	r2, r5, r2
 800f61e:	2928      	cmp	r1, #40	; 0x28
 800f620:	ea42 0206 	orr.w	r2, r2, r6
 800f624:	d128      	bne.n	800f678 <gpio_init+0x8c>
 800f626:	fa07 f604 	lsl.w	r6, r7, r4
 800f62a:	401e      	ands	r6, r3
 800f62c:	6146      	str	r6, [r0, #20]
 800f62e:	6002      	str	r2, [r0, #0]
 800f630:	3401      	adds	r4, #1
 800f632:	2c08      	cmp	r4, #8
 800f634:	d1e7      	bne.n	800f606 <gpio_init+0x1a>
 800f636:	2600      	movs	r6, #0
 800f638:	f04f 0c0f 	mov.w	ip, #15
 800f63c:	2701      	movs	r7, #1
 800f63e:	f106 0208 	add.w	r2, r6, #8
 800f642:	fa23 f402 	lsr.w	r4, r3, r2
 800f646:	07e4      	lsls	r4, r4, #31
 800f648:	d511      	bpl.n	800f66e <gpio_init+0x82>
 800f64a:	00b4      	lsls	r4, r6, #2
 800f64c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800f650:	fa0c f804 	lsl.w	r8, ip, r4
 800f654:	ea2e 0e08 	bic.w	lr, lr, r8
 800f658:	fa05 f404 	lsl.w	r4, r5, r4
 800f65c:	2928      	cmp	r1, #40	; 0x28
 800f65e:	ea44 040e 	orr.w	r4, r4, lr
 800f662:	d110      	bne.n	800f686 <gpio_init+0x9a>
 800f664:	fa07 f202 	lsl.w	r2, r7, r2
 800f668:	401a      	ands	r2, r3
 800f66a:	6142      	str	r2, [r0, #20]
 800f66c:	6044      	str	r4, [r0, #4]
 800f66e:	3601      	adds	r6, #1
 800f670:	2e08      	cmp	r6, #8
 800f672:	d1e4      	bne.n	800f63e <gpio_init+0x52>
 800f674:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f678:	2948      	cmp	r1, #72	; 0x48
 800f67a:	bf02      	ittt	eq
 800f67c:	fa07 f604 	lsleq.w	r6, r7, r4
 800f680:	401e      	andeq	r6, r3
 800f682:	6106      	streq	r6, [r0, #16]
 800f684:	e7d3      	b.n	800f62e <gpio_init+0x42>
 800f686:	2948      	cmp	r1, #72	; 0x48
 800f688:	bf02      	ittt	eq
 800f68a:	fa07 f202 	lsleq.w	r2, r7, r2
 800f68e:	401a      	andeq	r2, r3
 800f690:	6102      	streq	r2, [r0, #16]
 800f692:	e7eb      	b.n	800f66c <gpio_init+0x80>

0800f694 <gpio_pin_remap_config>:
 800f694:	2800      	cmp	r0, #0
 800f696:	4a16      	ldr	r2, [pc, #88]	; (800f6f0 <gpio_pin_remap_config+0x5c>)
 800f698:	b530      	push	{r4, r5, lr}
 800f69a:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800f69e:	bfb4      	ite	lt
 800f6a0:	69d3      	ldrlt	r3, [r2, #28]
 800f6a2:	6853      	ldrge	r3, [r2, #4]
 800f6a4:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800f6a8:	b284      	uxth	r4, r0
 800f6aa:	d110      	bne.n	800f6ce <gpio_pin_remap_config+0x3a>
 800f6ac:	6855      	ldr	r5, [r2, #4]
 800f6ae:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f6b2:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800f6b6:	6055      	str	r5, [r2, #4]
 800f6b8:	b119      	cbz	r1, 800f6c2 <gpio_pin_remap_config+0x2e>
 800f6ba:	0d42      	lsrs	r2, r0, #21
 800f6bc:	0112      	lsls	r2, r2, #4
 800f6be:	4094      	lsls	r4, r2
 800f6c0:	4323      	orrs	r3, r4
 800f6c2:	4a0b      	ldr	r2, [pc, #44]	; (800f6f0 <gpio_pin_remap_config+0x5c>)
 800f6c4:	2800      	cmp	r0, #0
 800f6c6:	bfb4      	ite	lt
 800f6c8:	61d3      	strlt	r3, [r2, #28]
 800f6ca:	6053      	strge	r3, [r2, #4]
 800f6cc:	bd30      	pop	{r4, r5, pc}
 800f6ce:	02c2      	lsls	r2, r0, #11
 800f6d0:	bf4d      	iteet	mi
 800f6d2:	2203      	movmi	r2, #3
 800f6d4:	0d42      	lsrpl	r2, r0, #21
 800f6d6:	0112      	lslpl	r2, r2, #4
 800f6d8:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 800f6dc:	bf4c      	ite	mi
 800f6de:	40aa      	lslmi	r2, r5
 800f6e0:	fa04 f202 	lslpl.w	r2, r4, r2
 800f6e4:	ea23 0302 	bic.w	r3, r3, r2
 800f6e8:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 800f6ec:	e7e4      	b.n	800f6b8 <gpio_pin_remap_config+0x24>
 800f6ee:	bf00      	nop
 800f6f0:	40010000 	andmi	r0, r1, r0

0800f6f4 <gpio_ethernet_phy_select>:
 800f6f4:	4b04      	ldr	r3, [pc, #16]	; (800f708 <gpio_ethernet_phy_select+0x14>)
 800f6f6:	685a      	ldr	r2, [r3, #4]
 800f6f8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800f6fc:	605a      	str	r2, [r3, #4]
 800f6fe:	685a      	ldr	r2, [r3, #4]
 800f700:	4302      	orrs	r2, r0
 800f702:	605a      	str	r2, [r3, #4]
 800f704:	4770      	bx	lr
 800f706:	bf00      	nop
 800f708:	40010000 	andmi	r0, r1, r0

0800f70c <pmu_backup_write_enable>:
 800f70c:	4a02      	ldr	r2, [pc, #8]	; (800f718 <pmu_backup_write_enable+0xc>)
 800f70e:	6813      	ldr	r3, [r2, #0]
 800f710:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f714:	6013      	str	r3, [r2, #0]
 800f716:	4770      	bx	lr
 800f718:	40007000 	andmi	r7, r0, r0

0800f71c <rcu_periph_clock_enable>:
 800f71c:	2201      	movs	r2, #1
 800f71e:	0983      	lsrs	r3, r0, #6
 800f720:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f724:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f728:	6819      	ldr	r1, [r3, #0]
 800f72a:	f000 001f 	and.w	r0, r0, #31
 800f72e:	4082      	lsls	r2, r0
 800f730:	430a      	orrs	r2, r1
 800f732:	601a      	str	r2, [r3, #0]
 800f734:	4770      	bx	lr

0800f736 <rcu_periph_clock_disable>:
 800f736:	2101      	movs	r1, #1
 800f738:	0983      	lsrs	r3, r0, #6
 800f73a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f73e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f742:	681a      	ldr	r2, [r3, #0]
 800f744:	f000 001f 	and.w	r0, r0, #31
 800f748:	4081      	lsls	r1, r0
 800f74a:	ea22 0201 	bic.w	r2, r2, r1
 800f74e:	601a      	str	r2, [r3, #0]
 800f750:	4770      	bx	lr

0800f752 <rcu_periph_reset_enable>:
 800f752:	f7ff bfe3 	b.w	800f71c <rcu_periph_clock_enable>

0800f756 <rcu_periph_reset_disable>:
 800f756:	f7ff bfee 	b.w	800f736 <rcu_periph_clock_disable>
	...

0800f75c <rcu_bkp_reset_enable>:
 800f75c:	4a02      	ldr	r2, [pc, #8]	; (800f768 <rcu_bkp_reset_enable+0xc>)
 800f75e:	6a13      	ldr	r3, [r2, #32]
 800f760:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800f764:	6213      	str	r3, [r2, #32]
 800f766:	4770      	bx	lr
 800f768:	40021000 	andmi	r1, r2, r0

0800f76c <rcu_bkp_reset_disable>:
 800f76c:	4a02      	ldr	r2, [pc, #8]	; (800f778 <rcu_bkp_reset_disable+0xc>)
 800f76e:	6a13      	ldr	r3, [r2, #32]
 800f770:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800f774:	6213      	str	r3, [r2, #32]
 800f776:	4770      	bx	lr
 800f778:	40021000 	andmi	r1, r2, r0

0800f77c <rcu_ckout0_config>:
 800f77c:	4a03      	ldr	r2, [pc, #12]	; (800f78c <rcu_ckout0_config+0x10>)
 800f77e:	6853      	ldr	r3, [r2, #4]
 800f780:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f784:	4303      	orrs	r3, r0
 800f786:	6053      	str	r3, [r2, #4]
 800f788:	4770      	bx	lr
 800f78a:	bf00      	nop
 800f78c:	40021000 	andmi	r1, r2, r0

0800f790 <rcu_pll2_config>:
 800f790:	4b04      	ldr	r3, [pc, #16]	; (800f7a4 <rcu_pll2_config+0x14>)
 800f792:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f794:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800f798:	62da      	str	r2, [r3, #44]	; 0x2c
 800f79a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f79c:	4302      	orrs	r2, r0
 800f79e:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7a0:	4770      	bx	lr
 800f7a2:	bf00      	nop
 800f7a4:	40021000 	andmi	r1, r2, r0

0800f7a8 <rcu_adc_clock_config>:
 800f7a8:	490c      	ldr	r1, [pc, #48]	; (800f7dc <rcu_adc_clock_config+0x34>)
 800f7aa:	2805      	cmp	r0, #5
 800f7ac:	684b      	ldr	r3, [r1, #4]
 800f7ae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f7b2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800f7b6:	d006      	beq.n	800f7c6 <rcu_adc_clock_config+0x1e>
 800f7b8:	d803      	bhi.n	800f7c2 <rcu_adc_clock_config+0x1a>
 800f7ba:	2804      	cmp	r0, #4
 800f7bc:	d10a      	bne.n	800f7d4 <rcu_adc_clock_config+0x2c>
 800f7be:	604b      	str	r3, [r1, #4]
 800f7c0:	4770      	bx	lr
 800f7c2:	2807      	cmp	r0, #7
 800f7c4:	d1fb      	bne.n	800f7be <rcu_adc_clock_config+0x16>
 800f7c6:	4a06      	ldr	r2, [pc, #24]	; (800f7e0 <rcu_adc_clock_config+0x38>)
 800f7c8:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 800f7cc:	4313      	orrs	r3, r2
 800f7ce:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800f7d2:	e7f4      	b.n	800f7be <rcu_adc_clock_config+0x16>
 800f7d4:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800f7d8:	e7f1      	b.n	800f7be <rcu_adc_clock_config+0x16>
 800f7da:	bf00      	nop
 800f7dc:	40021000 	andmi	r1, r2, r0
 800f7e0:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0800f7e4 <rcu_flag_get>:
 800f7e4:	0983      	lsrs	r3, r0, #6
 800f7e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f7ea:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f7ee:	681a      	ldr	r2, [r3, #0]
 800f7f0:	2301      	movs	r3, #1
 800f7f2:	f000 001f 	and.w	r0, r0, #31
 800f7f6:	4083      	lsls	r3, r0
 800f7f8:	4213      	tst	r3, r2
 800f7fa:	bf14      	ite	ne
 800f7fc:	2001      	movne	r0, #1
 800f7fe:	2000      	moveq	r0, #0
 800f800:	4770      	bx	lr
	...

0800f804 <rcu_osci_stab_wait>:
 800f804:	281a      	cmp	r0, #26
 800f806:	b508      	push	{r3, lr}
 800f808:	d051      	beq.n	800f8ae <rcu_osci_stab_wait+0xaa>
 800f80a:	d806      	bhi.n	800f81a <rcu_osci_stab_wait+0x16>
 800f80c:	2810      	cmp	r0, #16
 800f80e:	d015      	beq.n	800f83c <rcu_osci_stab_wait+0x38>
 800f810:	2818      	cmp	r0, #24
 800f812:	d043      	beq.n	800f89c <rcu_osci_stab_wait+0x98>
 800f814:	b368      	cbz	r0, 800f872 <rcu_osci_stab_wait+0x6e>
 800f816:	2000      	movs	r0, #0
 800f818:	bd08      	pop	{r3, pc}
 800f81a:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800f81e:	d01c      	beq.n	800f85a <rcu_osci_stab_wait+0x56>
 800f820:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 800f824:	d02f      	beq.n	800f886 <rcu_osci_stab_wait+0x82>
 800f826:	281c      	cmp	r0, #28
 800f828:	d1f5      	bne.n	800f816 <rcu_osci_stab_wait+0x12>
 800f82a:	4925      	ldr	r1, [pc, #148]	; (800f8c0 <rcu_osci_stab_wait+0xbc>)
 800f82c:	201d      	movs	r0, #29
 800f82e:	f7ff ffd9 	bl	800f7e4 <rcu_flag_get>
 800f832:	b908      	cbnz	r0, 800f838 <rcu_osci_stab_wait+0x34>
 800f834:	3901      	subs	r1, #1
 800f836:	d1f9      	bne.n	800f82c <rcu_osci_stab_wait+0x28>
 800f838:	201d      	movs	r0, #29
 800f83a:	e008      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f83c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f840:	2011      	movs	r0, #17
 800f842:	f7ff ffcf 	bl	800f7e4 <rcu_flag_get>
 800f846:	b908      	cbnz	r0, 800f84c <rcu_osci_stab_wait+0x48>
 800f848:	3901      	subs	r1, #1
 800f84a:	d1f9      	bne.n	800f840 <rcu_osci_stab_wait+0x3c>
 800f84c:	2011      	movs	r0, #17
 800f84e:	f7ff ffc9 	bl	800f7e4 <rcu_flag_get>
 800f852:	3800      	subs	r0, #0
 800f854:	bf18      	it	ne
 800f856:	2001      	movne	r0, #1
 800f858:	e7de      	b.n	800f818 <rcu_osci_stab_wait+0x14>
 800f85a:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 800f85e:	f640 0001 	movw	r0, #2049	; 0x801
 800f862:	f7ff ffbf 	bl	800f7e4 <rcu_flag_get>
 800f866:	b908      	cbnz	r0, 800f86c <rcu_osci_stab_wait+0x68>
 800f868:	3901      	subs	r1, #1
 800f86a:	d1f8      	bne.n	800f85e <rcu_osci_stab_wait+0x5a>
 800f86c:	f640 0001 	movw	r0, #2049	; 0x801
 800f870:	e7ed      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f872:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800f876:	2001      	movs	r0, #1
 800f878:	f7ff ffb4 	bl	800f7e4 <rcu_flag_get>
 800f87c:	b908      	cbnz	r0, 800f882 <rcu_osci_stab_wait+0x7e>
 800f87e:	3901      	subs	r1, #1
 800f880:	d1f9      	bne.n	800f876 <rcu_osci_stab_wait+0x72>
 800f882:	2001      	movs	r0, #1
 800f884:	e7e3      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f886:	490e      	ldr	r1, [pc, #56]	; (800f8c0 <rcu_osci_stab_wait+0xbc>)
 800f888:	f640 1001 	movw	r0, #2305	; 0x901
 800f88c:	f7ff ffaa 	bl	800f7e4 <rcu_flag_get>
 800f890:	b908      	cbnz	r0, 800f896 <rcu_osci_stab_wait+0x92>
 800f892:	3901      	subs	r1, #1
 800f894:	d1f8      	bne.n	800f888 <rcu_osci_stab_wait+0x84>
 800f896:	f640 1001 	movw	r0, #2305	; 0x901
 800f89a:	e7d8      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f89c:	4908      	ldr	r1, [pc, #32]	; (800f8c0 <rcu_osci_stab_wait+0xbc>)
 800f89e:	2019      	movs	r0, #25
 800f8a0:	f7ff ffa0 	bl	800f7e4 <rcu_flag_get>
 800f8a4:	b908      	cbnz	r0, 800f8aa <rcu_osci_stab_wait+0xa6>
 800f8a6:	3901      	subs	r1, #1
 800f8a8:	d1f9      	bne.n	800f89e <rcu_osci_stab_wait+0x9a>
 800f8aa:	2019      	movs	r0, #25
 800f8ac:	e7cf      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f8ae:	4904      	ldr	r1, [pc, #16]	; (800f8c0 <rcu_osci_stab_wait+0xbc>)
 800f8b0:	201b      	movs	r0, #27
 800f8b2:	f7ff ff97 	bl	800f7e4 <rcu_flag_get>
 800f8b6:	b908      	cbnz	r0, 800f8bc <rcu_osci_stab_wait+0xb8>
 800f8b8:	3901      	subs	r1, #1
 800f8ba:	d1f9      	bne.n	800f8b0 <rcu_osci_stab_wait+0xac>
 800f8bc:	201b      	movs	r0, #27
 800f8be:	e7c6      	b.n	800f84e <rcu_osci_stab_wait+0x4a>
 800f8c0:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f8c4 <rcu_osci_on>:
 800f8c4:	f7ff bf2a 	b.w	800f71c <rcu_periph_clock_enable>

0800f8c8 <rcu_clock_freq_get>:
 800f8c8:	4b3e      	ldr	r3, [pc, #248]	; (800f9c4 <rcu_clock_freq_get+0xfc>)
 800f8ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8cc:	4604      	mov	r4, r0
 800f8ce:	461f      	mov	r7, r3
 800f8d0:	b089      	sub	sp, #36	; 0x24
 800f8d2:	ad04      	add	r5, sp, #16
 800f8d4:	f103 0610 	add.w	r6, r3, #16
 800f8d8:	462a      	mov	r2, r5
 800f8da:	6818      	ldr	r0, [r3, #0]
 800f8dc:	6859      	ldr	r1, [r3, #4]
 800f8de:	3308      	adds	r3, #8
 800f8e0:	c203      	stmia	r2!, {r0, r1}
 800f8e2:	42b3      	cmp	r3, r6
 800f8e4:	4615      	mov	r5, r2
 800f8e6:	d1f7      	bne.n	800f8d8 <rcu_clock_freq_get+0x10>
 800f8e8:	466b      	mov	r3, sp
 800f8ea:	6938      	ldr	r0, [r7, #16]
 800f8ec:	6871      	ldr	r1, [r6, #4]
 800f8ee:	4a36      	ldr	r2, [pc, #216]	; (800f9c8 <rcu_clock_freq_get+0x100>)
 800f8f0:	c303      	stmia	r3!, {r0, r1}
 800f8f2:	c303      	stmia	r3!, {r0, r1}
 800f8f4:	6853      	ldr	r3, [r2, #4]
 800f8f6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f8fa:	2b01      	cmp	r3, #1
 800f8fc:	d053      	beq.n	800f9a6 <rcu_clock_freq_get+0xde>
 800f8fe:	2b02      	cmp	r3, #2
 800f900:	d153      	bne.n	800f9aa <rcu_clock_freq_get+0xe2>
 800f902:	6853      	ldr	r3, [r2, #4]
 800f904:	03dd      	lsls	r5, r3, #15
 800f906:	d523      	bpl.n	800f950 <rcu_clock_freq_get+0x88>
 800f908:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800f90a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800f90e:	4b2f      	ldr	r3, [pc, #188]	; (800f9cc <rcu_clock_freq_get+0x104>)
 800f910:	d00e      	beq.n	800f930 <rcu_clock_freq_get+0x68>
 800f912:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f914:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800f916:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f91a:	f3c0 2003 	ubfx	r0, r0, #8, #4
 800f91e:	3101      	adds	r1, #1
 800f920:	280f      	cmp	r0, #15
 800f922:	f100 0502 	add.w	r5, r0, #2
 800f926:	fbb3 f3f1 	udiv	r3, r3, r1
 800f92a:	bf08      	it	eq
 800f92c:	2514      	moveq	r5, #20
 800f92e:	436b      	muls	r3, r5
 800f930:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f932:	f001 010f 	and.w	r1, r1, #15
 800f936:	3101      	adds	r1, #1
 800f938:	fbb3 f3f1 	udiv	r3, r3, r1
 800f93c:	6851      	ldr	r1, [r2, #4]
 800f93e:	6850      	ldr	r0, [r2, #4]
 800f940:	f3c1 4183 	ubfx	r1, r1, #18, #4
 800f944:	0080      	lsls	r0, r0, #2
 800f946:	d505      	bpl.n	800f954 <rcu_clock_freq_get+0x8c>
 800f948:	f041 0110 	orr.w	r1, r1, #16
 800f94c:	1c48      	adds	r0, r1, #1
 800f94e:	e007      	b.n	800f960 <rcu_clock_freq_get+0x98>
 800f950:	4b1f      	ldr	r3, [pc, #124]	; (800f9d0 <rcu_clock_freq_get+0x108>)
 800f952:	e7f3      	b.n	800f93c <rcu_clock_freq_get+0x74>
 800f954:	290f      	cmp	r1, #15
 800f956:	d0f9      	beq.n	800f94c <rcu_clock_freq_get+0x84>
 800f958:	290d      	cmp	r1, #13
 800f95a:	f101 0002 	add.w	r0, r1, #2
 800f95e:	d01d      	beq.n	800f99c <rcu_clock_freq_get+0xd4>
 800f960:	4358      	muls	r0, r3
 800f962:	6853      	ldr	r3, [r2, #4]
 800f964:	6851      	ldr	r1, [r2, #4]
 800f966:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800f96a:	6852      	ldr	r2, [r2, #4]
 800f96c:	3320      	adds	r3, #32
 800f96e:	446b      	add	r3, sp
 800f970:	f3c1 2102 	ubfx	r1, r1, #8, #3
 800f974:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800f978:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 800f97c:	3120      	adds	r1, #32
 800f97e:	3220      	adds	r2, #32
 800f980:	4469      	add	r1, sp
 800f982:	446a      	add	r2, sp
 800f984:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800f988:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800f98c:	fa20 f303 	lsr.w	r3, r0, r3
 800f990:	2c03      	cmp	r4, #3
 800f992:	d815      	bhi.n	800f9c0 <rcu_clock_freq_get+0xf8>
 800f994:	e8df f004 	tbb	[pc, r4]
 800f998:	110e0b0c 	tstne	lr, ip, lsl #22
 800f99c:	2006      	movs	r0, #6
 800f99e:	0859      	lsrs	r1, r3, #1
 800f9a0:	fb00 1003 	mla	r0, r0, r3, r1
 800f9a4:	e7dd      	b.n	800f962 <rcu_clock_freq_get+0x9a>
 800f9a6:	4809      	ldr	r0, [pc, #36]	; (800f9cc <rcu_clock_freq_get+0x104>)
 800f9a8:	e7db      	b.n	800f962 <rcu_clock_freq_get+0x9a>
 800f9aa:	480a      	ldr	r0, [pc, #40]	; (800f9d4 <rcu_clock_freq_get+0x10c>)
 800f9ac:	e7d9      	b.n	800f962 <rcu_clock_freq_get+0x9a>
 800f9ae:	4618      	mov	r0, r3
 800f9b0:	b009      	add	sp, #36	; 0x24
 800f9b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9b4:	fa23 f001 	lsr.w	r0, r3, r1
 800f9b8:	e7fa      	b.n	800f9b0 <rcu_clock_freq_get+0xe8>
 800f9ba:	fa23 f002 	lsr.w	r0, r3, r2
 800f9be:	e7f7      	b.n	800f9b0 <rcu_clock_freq_get+0xe8>
 800f9c0:	2000      	movs	r0, #0
 800f9c2:	e7f5      	b.n	800f9b0 <rcu_clock_freq_get+0xe8>
 800f9c4:	08010f3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, fp}
 800f9c8:	40021000 	andmi	r1, r2, r0
 800f9cc:	017d7840 	cmneq	sp, r0, asr #16
 800f9d0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800f9d4:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0800f9d8 <timer_deinit>:
 800f9d8:	b508      	push	{r3, lr}
 800f9da:	4b2d      	ldr	r3, [pc, #180]	; (800fa90 <timer_deinit+0xb8>)
 800f9dc:	4298      	cmp	r0, r3
 800f9de:	d048      	beq.n	800fa72 <timer_deinit+0x9a>
 800f9e0:	d816      	bhi.n	800fa10 <timer_deinit+0x38>
 800f9e2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f9e6:	4298      	cmp	r0, r3
 800f9e8:	d03c      	beq.n	800fa64 <timer_deinit+0x8c>
 800f9ea:	d807      	bhi.n	800f9fc <timer_deinit+0x24>
 800f9ec:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800f9f0:	d02a      	beq.n	800fa48 <timer_deinit+0x70>
 800f9f2:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800f9f6:	4298      	cmp	r0, r3
 800f9f8:	d02d      	beq.n	800fa56 <timer_deinit+0x7e>
 800f9fa:	bd08      	pop	{r3, pc}
 800f9fc:	4b25      	ldr	r3, [pc, #148]	; (800fa94 <timer_deinit+0xbc>)
 800f9fe:	4298      	cmp	r0, r3
 800fa00:	d1fb      	bne.n	800f9fa <timer_deinit+0x22>
 800fa02:	f240 4003 	movw	r0, #1027	; 0x403
 800fa06:	f7ff fea4 	bl	800f752 <rcu_periph_reset_enable>
 800fa0a:	f240 4003 	movw	r0, #1027	; 0x403
 800fa0e:	e017      	b.n	800fa40 <timer_deinit+0x68>
 800fa10:	4b21      	ldr	r3, [pc, #132]	; (800fa98 <timer_deinit+0xc0>)
 800fa12:	4298      	cmp	r0, r3
 800fa14:	d00e      	beq.n	800fa34 <timer_deinit+0x5c>
 800fa16:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800fa1a:	4298      	cmp	r0, r3
 800fa1c:	d030      	beq.n	800fa80 <timer_deinit+0xa8>
 800fa1e:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800fa22:	4298      	cmp	r0, r3
 800fa24:	d1e9      	bne.n	800f9fa <timer_deinit+0x22>
 800fa26:	f240 4005 	movw	r0, #1029	; 0x405
 800fa2a:	f7ff fe92 	bl	800f752 <rcu_periph_reset_enable>
 800fa2e:	f240 4005 	movw	r0, #1029	; 0x405
 800fa32:	e005      	b.n	800fa40 <timer_deinit+0x68>
 800fa34:	f240 300b 	movw	r0, #779	; 0x30b
 800fa38:	f7ff fe8b 	bl	800f752 <rcu_periph_reset_enable>
 800fa3c:	f240 300b 	movw	r0, #779	; 0x30b
 800fa40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fa44:	f7ff be87 	b.w	800f756 <rcu_periph_reset_disable>
 800fa48:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800fa4c:	f7ff fe81 	bl	800f752 <rcu_periph_reset_enable>
 800fa50:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800fa54:	e7f4      	b.n	800fa40 <timer_deinit+0x68>
 800fa56:	f240 4001 	movw	r0, #1025	; 0x401
 800fa5a:	f7ff fe7a 	bl	800f752 <rcu_periph_reset_enable>
 800fa5e:	f240 4001 	movw	r0, #1025	; 0x401
 800fa62:	e7ed      	b.n	800fa40 <timer_deinit+0x68>
 800fa64:	f240 4002 	movw	r0, #1026	; 0x402
 800fa68:	f7ff fe73 	bl	800f752 <rcu_periph_reset_enable>
 800fa6c:	f240 4002 	movw	r0, #1026	; 0x402
 800fa70:	e7e6      	b.n	800fa40 <timer_deinit+0x68>
 800fa72:	f240 4004 	movw	r0, #1028	; 0x404
 800fa76:	f7ff fe6c 	bl	800f752 <rcu_periph_reset_enable>
 800fa7a:	f240 4004 	movw	r0, #1028	; 0x404
 800fa7e:	e7df      	b.n	800fa40 <timer_deinit+0x68>
 800fa80:	f240 300d 	movw	r0, #781	; 0x30d
 800fa84:	f7ff fe65 	bl	800f752 <rcu_periph_reset_enable>
 800fa88:	f240 300d 	movw	r0, #781	; 0x30d
 800fa8c:	e7d8      	b.n	800fa40 <timer_deinit+0x68>
 800fa8e:	bf00      	nop
 800fa90:	40001000 	andmi	r1, r0, r0
 800fa94:	40000c00 	andmi	r0, r0, r0, lsl #24
 800fa98:	40012c00 	andmi	r2, r1, r0, lsl #24

0800fa9c <timer_init>:
 800fa9c:	880b      	ldrh	r3, [r1, #0]
 800fa9e:	6283      	str	r3, [r0, #40]	; 0x28
 800faa0:	4b26      	ldr	r3, [pc, #152]	; (800fb3c <timer_init+0xa0>)
 800faa2:	4298      	cmp	r0, r3
 800faa4:	d018      	beq.n	800fad8 <timer_init+0x3c>
 800faa6:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 800faaa:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800faae:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800fab2:	d011      	beq.n	800fad8 <timer_init+0x3c>
 800fab4:	4a22      	ldr	r2, [pc, #136]	; (800fb40 <timer_init+0xa4>)
 800fab6:	4290      	cmp	r0, r2
 800fab8:	d00e      	beq.n	800fad8 <timer_init+0x3c>
 800faba:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800fabe:	4290      	cmp	r0, r2
 800fac0:	d00a      	beq.n	800fad8 <timer_init+0x3c>
 800fac2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fac6:	4293      	cmp	r3, r2
 800fac8:	d006      	beq.n	800fad8 <timer_init+0x3c>
 800faca:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800face:	4293      	cmp	r3, r2
 800fad0:	d002      	beq.n	800fad8 <timer_init+0x3c>
 800fad2:	4b1c      	ldr	r3, [pc, #112]	; (800fb44 <timer_init+0xa8>)
 800fad4:	4298      	cmp	r0, r3
 800fad6:	d10f      	bne.n	800faf8 <timer_init+0x5c>
 800fad8:	6803      	ldr	r3, [r0, #0]
 800fada:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fade:	6003      	str	r3, [r0, #0]
 800fae0:	884b      	ldrh	r3, [r1, #2]
 800fae2:	6802      	ldr	r2, [r0, #0]
 800fae4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fae8:	4313      	orrs	r3, r2
 800faea:	6003      	str	r3, [r0, #0]
 800faec:	888b      	ldrh	r3, [r1, #4]
 800faee:	6802      	ldr	r2, [r0, #0]
 800faf0:	f003 0310 	and.w	r3, r3, #16
 800faf4:	4313      	orrs	r3, r2
 800faf6:	6003      	str	r3, [r0, #0]
 800faf8:	688b      	ldr	r3, [r1, #8]
 800fafa:	62c3      	str	r3, [r0, #44]	; 0x2c
 800fafc:	4b12      	ldr	r3, [pc, #72]	; (800fb48 <timer_init+0xac>)
 800fafe:	4298      	cmp	r0, r3
 800fb00:	d003      	beq.n	800fb0a <timer_init+0x6e>
 800fb02:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fb06:	4298      	cmp	r0, r3
 800fb08:	d104      	bne.n	800fb14 <timer_init+0x78>
 800fb0a:	6943      	ldr	r3, [r0, #20]
 800fb0c:	f043 0301 	orr.w	r3, r3, #1
 800fb10:	6143      	str	r3, [r0, #20]
 800fb12:	4770      	bx	lr
 800fb14:	6803      	ldr	r3, [r0, #0]
 800fb16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800fb1a:	6003      	str	r3, [r0, #0]
 800fb1c:	898b      	ldrh	r3, [r1, #12]
 800fb1e:	6802      	ldr	r2, [r0, #0]
 800fb20:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800fb24:	4313      	orrs	r3, r2
 800fb26:	6003      	str	r3, [r0, #0]
 800fb28:	4b04      	ldr	r3, [pc, #16]	; (800fb3c <timer_init+0xa0>)
 800fb2a:	4298      	cmp	r0, r3
 800fb2c:	d002      	beq.n	800fb34 <timer_init+0x98>
 800fb2e:	4b04      	ldr	r3, [pc, #16]	; (800fb40 <timer_init+0xa4>)
 800fb30:	4298      	cmp	r0, r3
 800fb32:	d1ea      	bne.n	800fb0a <timer_init+0x6e>
 800fb34:	7b8b      	ldrb	r3, [r1, #14]
 800fb36:	6303      	str	r3, [r0, #48]	; 0x30
 800fb38:	e7e7      	b.n	800fb0a <timer_init+0x6e>
 800fb3a:	bf00      	nop
 800fb3c:	40012c00 	andmi	r2, r1, r0, lsl #24
 800fb40:	40013400 	andmi	r3, r1, r0, lsl #8
 800fb44:	40002000 	andmi	r2, r0, r0
 800fb48:	40001000 	andmi	r1, r0, r0

0800fb4c <timer_enable>:
 800fb4c:	6803      	ldr	r3, [r0, #0]
 800fb4e:	f043 0301 	orr.w	r3, r3, #1
 800fb52:	6003      	str	r3, [r0, #0]
 800fb54:	4770      	bx	lr

0800fb56 <timer_channel_output_mode_config>:
 800fb56:	2903      	cmp	r1, #3
 800fb58:	d81a      	bhi.n	800fb90 <timer_channel_output_mode_config+0x3a>
 800fb5a:	e8df f001 	tbb	[pc, r1]
 800fb5e:	1a120a02 	bne	849236e <__exidx_end+0x47f8be>
 800fb62:	6983      	ldr	r3, [r0, #24]
 800fb64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fb68:	6183      	str	r3, [r0, #24]
 800fb6a:	6983      	ldr	r3, [r0, #24]
 800fb6c:	4313      	orrs	r3, r2
 800fb6e:	6183      	str	r3, [r0, #24]
 800fb70:	4770      	bx	lr
 800fb72:	6983      	ldr	r3, [r0, #24]
 800fb74:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fb78:	6183      	str	r3, [r0, #24]
 800fb7a:	6983      	ldr	r3, [r0, #24]
 800fb7c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800fb80:	e7f5      	b.n	800fb6e <timer_channel_output_mode_config+0x18>
 800fb82:	69c3      	ldr	r3, [r0, #28]
 800fb84:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fb88:	61c3      	str	r3, [r0, #28]
 800fb8a:	69c3      	ldr	r3, [r0, #28]
 800fb8c:	4313      	orrs	r3, r2
 800fb8e:	61c3      	str	r3, [r0, #28]
 800fb90:	4770      	bx	lr
 800fb92:	69c3      	ldr	r3, [r0, #28]
 800fb94:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fb98:	61c3      	str	r3, [r0, #28]
 800fb9a:	69c3      	ldr	r3, [r0, #28]
 800fb9c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800fba0:	e7f5      	b.n	800fb8e <timer_channel_output_mode_config+0x38>

0800fba2 <timer_channel_output_pulse_value_config>:
 800fba2:	2903      	cmp	r1, #3
 800fba4:	d80a      	bhi.n	800fbbc <timer_channel_output_pulse_value_config+0x1a>
 800fba6:	e8df f001 	tbb	[pc, r1]
 800fbaa:	08060402 	stmdaeq	r6, {r1, sl}
 800fbae:	6342      	str	r2, [r0, #52]	; 0x34
 800fbb0:	4770      	bx	lr
 800fbb2:	6382      	str	r2, [r0, #56]	; 0x38
 800fbb4:	4770      	bx	lr
 800fbb6:	63c2      	str	r2, [r0, #60]	; 0x3c
 800fbb8:	4770      	bx	lr
 800fbba:	6402      	str	r2, [r0, #64]	; 0x40
 800fbbc:	4770      	bx	lr

0800fbbe <timer_interrupt_enable>:
 800fbbe:	68c3      	ldr	r3, [r0, #12]
 800fbc0:	430b      	orrs	r3, r1
 800fbc2:	60c3      	str	r3, [r0, #12]
 800fbc4:	4770      	bx	lr

0800fbc6 <timer_interrupt_flag_clear>:
 800fbc6:	43c9      	mvns	r1, r1
 800fbc8:	6101      	str	r1, [r0, #16]
 800fbca:	4770      	bx	lr

0800fbcc <timer_flag_clear>:
 800fbcc:	43c9      	mvns	r1, r1
 800fbce:	6101      	str	r1, [r0, #16]
 800fbd0:	4770      	bx	lr
	...

0800fbd4 <usart_deinit>:
 800fbd4:	b508      	push	{r3, lr}
 800fbd6:	4b1d      	ldr	r3, [pc, #116]	; (800fc4c <usart_deinit+0x78>)
 800fbd8:	4298      	cmp	r0, r3
 800fbda:	d028      	beq.n	800fc2e <usart_deinit+0x5a>
 800fbdc:	d808      	bhi.n	800fbf0 <usart_deinit+0x1c>
 800fbde:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fbe2:	4298      	cmp	r0, r3
 800fbe4:	d015      	beq.n	800fc12 <usart_deinit+0x3e>
 800fbe6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fbea:	4298      	cmp	r0, r3
 800fbec:	d018      	beq.n	800fc20 <usart_deinit+0x4c>
 800fbee:	bd08      	pop	{r3, pc}
 800fbf0:	4b17      	ldr	r3, [pc, #92]	; (800fc50 <usart_deinit+0x7c>)
 800fbf2:	4298      	cmp	r0, r3
 800fbf4:	d022      	beq.n	800fc3c <usart_deinit+0x68>
 800fbf6:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fbfa:	4298      	cmp	r0, r3
 800fbfc:	d1f7      	bne.n	800fbee <usart_deinit+0x1a>
 800fbfe:	f240 300e 	movw	r0, #782	; 0x30e
 800fc02:	f7ff fda6 	bl	800f752 <rcu_periph_reset_enable>
 800fc06:	f240 300e 	movw	r0, #782	; 0x30e
 800fc0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fc0e:	f7ff bda2 	b.w	800f756 <rcu_periph_reset_disable>
 800fc12:	f240 4011 	movw	r0, #1041	; 0x411
 800fc16:	f7ff fd9c 	bl	800f752 <rcu_periph_reset_enable>
 800fc1a:	f240 4011 	movw	r0, #1041	; 0x411
 800fc1e:	e7f4      	b.n	800fc0a <usart_deinit+0x36>
 800fc20:	f240 4012 	movw	r0, #1042	; 0x412
 800fc24:	f7ff fd95 	bl	800f752 <rcu_periph_reset_enable>
 800fc28:	f240 4012 	movw	r0, #1042	; 0x412
 800fc2c:	e7ed      	b.n	800fc0a <usart_deinit+0x36>
 800fc2e:	f240 4013 	movw	r0, #1043	; 0x413
 800fc32:	f7ff fd8e 	bl	800f752 <rcu_periph_reset_enable>
 800fc36:	f240 4013 	movw	r0, #1043	; 0x413
 800fc3a:	e7e6      	b.n	800fc0a <usart_deinit+0x36>
 800fc3c:	f240 4014 	movw	r0, #1044	; 0x414
 800fc40:	f7ff fd87 	bl	800f752 <rcu_periph_reset_enable>
 800fc44:	f240 4014 	movw	r0, #1044	; 0x414
 800fc48:	e7df      	b.n	800fc0a <usart_deinit+0x36>
 800fc4a:	bf00      	nop
 800fc4c:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fc50:	40005000 	andmi	r5, r0, r0

0800fc54 <usart_baudrate_set>:
 800fc54:	b538      	push	{r3, r4, r5, lr}
 800fc56:	4b11      	ldr	r3, [pc, #68]	; (800fc9c <usart_baudrate_set+0x48>)
 800fc58:	4604      	mov	r4, r0
 800fc5a:	4298      	cmp	r0, r3
 800fc5c:	460d      	mov	r5, r1
 800fc5e:	d01b      	beq.n	800fc98 <usart_baudrate_set+0x44>
 800fc60:	d809      	bhi.n	800fc76 <usart_baudrate_set+0x22>
 800fc62:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fc66:	4298      	cmp	r0, r3
 800fc68:	d016      	beq.n	800fc98 <usart_baudrate_set+0x44>
 800fc6a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fc6e:	4298      	cmp	r0, r3
 800fc70:	d012      	beq.n	800fc98 <usart_baudrate_set+0x44>
 800fc72:	2000      	movs	r0, #0
 800fc74:	e009      	b.n	800fc8a <usart_baudrate_set+0x36>
 800fc76:	4b0a      	ldr	r3, [pc, #40]	; (800fca0 <usart_baudrate_set+0x4c>)
 800fc78:	4298      	cmp	r0, r3
 800fc7a:	d00d      	beq.n	800fc98 <usart_baudrate_set+0x44>
 800fc7c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fc80:	4298      	cmp	r0, r3
 800fc82:	d1f6      	bne.n	800fc72 <usart_baudrate_set+0x1e>
 800fc84:	2003      	movs	r0, #3
 800fc86:	f7ff fe1f 	bl	800f8c8 <rcu_clock_freq_get>
 800fc8a:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 800fc8e:	fbb1 f1f5 	udiv	r1, r1, r5
 800fc92:	b289      	uxth	r1, r1
 800fc94:	60a1      	str	r1, [r4, #8]
 800fc96:	bd38      	pop	{r3, r4, r5, pc}
 800fc98:	2002      	movs	r0, #2
 800fc9a:	e7f4      	b.n	800fc86 <usart_baudrate_set+0x32>
 800fc9c:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fca0:	40005000 	andmi	r5, r0, r0

0800fca4 <usart_parity_config>:
 800fca4:	68c3      	ldr	r3, [r0, #12]
 800fca6:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800fcaa:	60c3      	str	r3, [r0, #12]
 800fcac:	68c3      	ldr	r3, [r0, #12]
 800fcae:	430b      	orrs	r3, r1
 800fcb0:	60c3      	str	r3, [r0, #12]
 800fcb2:	4770      	bx	lr

0800fcb4 <usart_word_length_set>:
 800fcb4:	68c3      	ldr	r3, [r0, #12]
 800fcb6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fcba:	60c3      	str	r3, [r0, #12]
 800fcbc:	68c3      	ldr	r3, [r0, #12]
 800fcbe:	430b      	orrs	r3, r1
 800fcc0:	60c3      	str	r3, [r0, #12]
 800fcc2:	4770      	bx	lr

0800fcc4 <usart_stop_bit_set>:
 800fcc4:	6903      	ldr	r3, [r0, #16]
 800fcc6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800fcca:	6103      	str	r3, [r0, #16]
 800fccc:	6903      	ldr	r3, [r0, #16]
 800fcce:	430b      	orrs	r3, r1
 800fcd0:	6103      	str	r3, [r0, #16]
 800fcd2:	4770      	bx	lr

0800fcd4 <usart_transmit_config>:
 800fcd4:	68c3      	ldr	r3, [r0, #12]
 800fcd6:	f023 0308 	bic.w	r3, r3, #8
 800fcda:	430b      	orrs	r3, r1
 800fcdc:	60c3      	str	r3, [r0, #12]
 800fcde:	4770      	bx	lr

0800fce0 <usart_receive_config>:
 800fce0:	68c3      	ldr	r3, [r0, #12]
 800fce2:	f023 0304 	bic.w	r3, r3, #4
 800fce6:	430b      	orrs	r3, r1
 800fce8:	60c3      	str	r3, [r0, #12]
 800fcea:	4770      	bx	lr

0800fcec <usart_hardware_flow_rts_config>:
 800fcec:	6943      	ldr	r3, [r0, #20]
 800fcee:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800fcf2:	430b      	orrs	r3, r1
 800fcf4:	6143      	str	r3, [r0, #20]
 800fcf6:	4770      	bx	lr

0800fcf8 <usart_hardware_flow_cts_config>:
 800fcf8:	6943      	ldr	r3, [r0, #20]
 800fcfa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800fcfe:	430b      	orrs	r3, r1
 800fd00:	6143      	str	r3, [r0, #20]
 800fd02:	4770      	bx	lr

0800fd04 <usart_dma_transmit_config>:
 800fd04:	6943      	ldr	r3, [r0, #20]
 800fd06:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fd0a:	430b      	orrs	r3, r1
 800fd0c:	6143      	str	r3, [r0, #20]
 800fd0e:	4770      	bx	lr

0800fd10 <usart_flag_get>:
 800fd10:	098b      	lsrs	r3, r1, #6
 800fd12:	581a      	ldr	r2, [r3, r0]
 800fd14:	2301      	movs	r3, #1
 800fd16:	f001 011f 	and.w	r1, r1, #31
 800fd1a:	408b      	lsls	r3, r1
 800fd1c:	4213      	tst	r3, r2
 800fd1e:	bf14      	ite	ne
 800fd20:	2001      	movne	r0, #1
 800fd22:	2000      	moveq	r0, #0
 800fd24:	4770      	bx	lr

0800fd26 <usart_interrupt_enable>:
 800fd26:	2301      	movs	r3, #1
 800fd28:	b510      	push	{r4, lr}
 800fd2a:	f3c1 1289 	ubfx	r2, r1, #6, #10
 800fd2e:	5814      	ldr	r4, [r2, r0]
 800fd30:	f001 011f 	and.w	r1, r1, #31
 800fd34:	408b      	lsls	r3, r1
 800fd36:	4323      	orrs	r3, r4
 800fd38:	5013      	str	r3, [r2, r0]
 800fd3a:	bd10      	pop	{r4, pc}

0800fd3c <usart_interrupt_disable>:
 800fd3c:	2201      	movs	r2, #1
 800fd3e:	b510      	push	{r4, lr}
 800fd40:	f3c1 1489 	ubfx	r4, r1, #6, #10
 800fd44:	5823      	ldr	r3, [r4, r0]
 800fd46:	f001 011f 	and.w	r1, r1, #31
 800fd4a:	408a      	lsls	r2, r1
 800fd4c:	ea23 0302 	bic.w	r3, r3, r2
 800fd50:	5023      	str	r3, [r4, r0]
 800fd52:	bd10      	pop	{r4, pc}

0800fd54 <usart_interrupt_flag_clear>:
 800fd54:	2201      	movs	r2, #1
 800fd56:	b510      	push	{r4, lr}
 800fd58:	0d8c      	lsrs	r4, r1, #22
 800fd5a:	5823      	ldr	r3, [r4, r0]
 800fd5c:	f3c1 4104 	ubfx	r1, r1, #16, #5
 800fd60:	408a      	lsls	r2, r1
 800fd62:	ea23 0302 	bic.w	r3, r3, r2
 800fd66:	5023      	str	r3, [r4, r0]
 800fd68:	bd10      	pop	{r4, pc}
	...

0800fd6c <emac_start>:
 800fd6c:	b510      	push	{r4, lr}
 800fd6e:	4604      	mov	r4, r0
 800fd70:	f240 6002 	movw	r0, #1538	; 0x602
 800fd74:	f7ff fcd2 	bl	800f71c <rcu_periph_clock_enable>
 800fd78:	f240 6003 	movw	r0, #1539	; 0x603
 800fd7c:	f7ff fcce 	bl	800f71c <rcu_periph_clock_enable>
 800fd80:	f240 6004 	movw	r0, #1540	; 0x604
 800fd84:	f7ff fcca 	bl	800f71c <rcu_periph_clock_enable>
 800fd88:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fd8c:	2203      	movs	r2, #3
 800fd8e:	2118      	movs	r1, #24
 800fd90:	4846      	ldr	r0, [pc, #280]	; (800feac <emac_start+0x140>)
 800fd92:	f7ff fc2b 	bl	800f5ec <gpio_init>
 800fd96:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800fd9a:	f7ff fcbf 	bl	800f71c <rcu_periph_clock_enable>
 800fd9e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800fda2:	f7ff fcf5 	bl	800f790 <rcu_pll2_config>
 800fda6:	201c      	movs	r0, #28
 800fda8:	f7ff fd8c 	bl	800f8c4 <rcu_osci_on>
 800fdac:	201c      	movs	r0, #28
 800fdae:	f7ff fd29 	bl	800f804 <rcu_osci_stab_wait>
 800fdb2:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 800fdb6:	f7ff fce1 	bl	800f77c <rcu_ckout0_config>
 800fdba:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 800fdbe:	f7ff fc99 	bl	800f6f4 <gpio_ethernet_phy_select>
 800fdc2:	2302      	movs	r3, #2
 800fdc4:	2203      	movs	r2, #3
 800fdc6:	2104      	movs	r1, #4
 800fdc8:	4838      	ldr	r0, [pc, #224]	; (800feac <emac_start+0x140>)
 800fdca:	f7ff fc0f 	bl	800f5ec <gpio_init>
 800fdce:	2304      	movs	r3, #4
 800fdd0:	2203      	movs	r2, #3
 800fdd2:	2118      	movs	r1, #24
 800fdd4:	4835      	ldr	r0, [pc, #212]	; (800feac <emac_start+0x140>)
 800fdd6:	f7ff fc09 	bl	800f5ec <gpio_init>
 800fdda:	2380      	movs	r3, #128	; 0x80
 800fddc:	2203      	movs	r2, #3
 800fdde:	2104      	movs	r1, #4
 800fde0:	4832      	ldr	r0, [pc, #200]	; (800feac <emac_start+0x140>)
 800fde2:	f7ff fc03 	bl	800f5ec <gpio_init>
 800fde6:	2302      	movs	r3, #2
 800fde8:	2203      	movs	r2, #3
 800fdea:	2118      	movs	r1, #24
 800fdec:	4830      	ldr	r0, [pc, #192]	; (800feb0 <emac_start+0x144>)
 800fdee:	f7ff fbfd 	bl	800f5ec <gpio_init>
 800fdf2:	2310      	movs	r3, #16
 800fdf4:	2203      	movs	r2, #3
 800fdf6:	2104      	movs	r1, #4
 800fdf8:	482d      	ldr	r0, [pc, #180]	; (800feb0 <emac_start+0x144>)
 800fdfa:	f7ff fbf7 	bl	800f5ec <gpio_init>
 800fdfe:	2320      	movs	r3, #32
 800fe00:	2203      	movs	r2, #3
 800fe02:	2104      	movs	r1, #4
 800fe04:	482a      	ldr	r0, [pc, #168]	; (800feb0 <emac_start+0x144>)
 800fe06:	f7ff fbf1 	bl	800f5ec <gpio_init>
 800fe0a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800fe0e:	2203      	movs	r2, #3
 800fe10:	2118      	movs	r1, #24
 800fe12:	4828      	ldr	r0, [pc, #160]	; (800feb4 <emac_start+0x148>)
 800fe14:	f7ff fbea 	bl	800f5ec <gpio_init>
 800fe18:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800fe1c:	2203      	movs	r2, #3
 800fe1e:	2118      	movs	r1, #24
 800fe20:	4824      	ldr	r0, [pc, #144]	; (800feb4 <emac_start+0x148>)
 800fe22:	f7ff fbe3 	bl	800f5ec <gpio_init>
 800fe26:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800fe2a:	2203      	movs	r2, #3
 800fe2c:	2118      	movs	r1, #24
 800fe2e:	4821      	ldr	r0, [pc, #132]	; (800feb4 <emac_start+0x148>)
 800fe30:	f7ff fbdc 	bl	800f5ec <gpio_init>
 800fe34:	f240 500e 	movw	r0, #1294	; 0x50e
 800fe38:	f7ff fc70 	bl	800f71c <rcu_periph_clock_enable>
 800fe3c:	f240 500f 	movw	r0, #1295	; 0x50f
 800fe40:	f7ff fc6c 	bl	800f71c <rcu_periph_clock_enable>
 800fe44:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 800fe48:	f7ff fc68 	bl	800f71c <rcu_periph_clock_enable>
 800fe4c:	f000 ffa6 	bl	8010d9c <enet_deinit>
 800fe50:	f000 fc04 	bl	801065c <enet_software_reset>
 800fe54:	b900      	cbnz	r0, 800fe58 <emac_start+0xec>
 800fe56:	e7fe      	b.n	800fe56 <emac_start+0xea>
 800fe58:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800fe5c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800fe60:	2001      	movs	r0, #1
 800fe62:	f000 fd7f 	bl	8010964 <enet_init>
 800fe66:	4b14      	ldr	r3, [pc, #80]	; (800feb8 <emac_start+0x14c>)
 800fe68:	6018      	str	r0, [r3, #0]
 800fe6a:	681b      	ldr	r3, [r3, #0]
 800fe6c:	b903      	cbnz	r3, 800fe70 <emac_start+0x104>
 800fe6e:	e7fe      	b.n	800fe6e <emac_start+0x102>
 800fe70:	4620      	mov	r0, r4
 800fe72:	f000 faed 	bl	8010450 <mac_address_get>
 800fe76:	4621      	mov	r1, r4
 800fe78:	2000      	movs	r0, #0
 800fe7a:	f000 fcd3 	bl	8010824 <enet_mac_address_set>
 800fe7e:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 800fe82:	f000 fbff 	bl	8010684 <enet_descriptors_chain_init>
 800fe86:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 800fe8a:	f000 fbfb 	bl	8010684 <enet_descriptors_chain_init>
 800fe8e:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fe92:	480a      	ldr	r0, [pc, #40]	; (800febc <emac_start+0x150>)
 800fe94:	f000 fcc0 	bl	8010818 <enet_transmit_checksum_config>
 800fe98:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fe9c:	4808      	ldr	r0, [pc, #32]	; (800fec0 <emac_start+0x154>)
 800fe9e:	f000 fcbb 	bl	8010818 <enet_transmit_checksum_config>
 800fea2:	f000 fef3 	bl	8010c8c <enet_enable>
 800fea6:	2001      	movs	r0, #1
 800fea8:	bd10      	pop	{r4, pc}
 800feaa:	bf00      	nop
 800feac:	40010800 	andmi	r0, r1, r0, lsl #16
 800feb0:	40011000 	andmi	r1, r1, r0
 800feb4:	40010c00 	andmi	r0, r1, r0, lsl #24
 800feb8:	20009bc8 	andcs	r9, r0, r8, asr #23
 800febc:	2000c014 	andcs	ip, r0, r4, lsl r0
 800fec0:	2000c024 	andcs	ip, r0, r4, lsr #32

0800fec4 <emac_eth_recv>:
 800fec4:	b538      	push	{r3, r4, r5, lr}
 800fec6:	4605      	mov	r5, r0
 800fec8:	f000 ff38 	bl	8010d3c <enet_rxframe_size_get>
 800fecc:	4604      	mov	r4, r0
 800fece:	b138      	cbz	r0, 800fee0 <emac_eth_recv+0x1c>
 800fed0:	4b05      	ldr	r3, [pc, #20]	; (800fee8 <emac_eth_recv+0x24>)
 800fed2:	2105      	movs	r1, #5
 800fed4:	6818      	ldr	r0, [r3, #0]
 800fed6:	f000 fee0 	bl	8010c9a <enet_desc_information_get>
 800feda:	6028      	str	r0, [r5, #0]
 800fedc:	4620      	mov	r0, r4
 800fede:	bd38      	pop	{r3, r4, r5, pc}
 800fee0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fee4:	e7fb      	b.n	800fede <emac_eth_recv+0x1a>
 800fee6:	bf00      	nop
 800fee8:	20009bd8 	ldrdcs	r9, [r0], -r8

0800feec <emac_free_pkt>:
 800feec:	2100      	movs	r1, #0
 800feee:	4608      	mov	r0, r1
 800fef0:	f000 bc10 	b.w	8010714 <enet_frame_receive>

0800fef4 <emac_eth_send>:
 800fef4:	f000 bc4e 	b.w	8010794 <enet_frame_transmit>

0800fef8 <gd32_adc_init()>:
 800fef8:	b510      	push	{r4, lr}
 800fefa:	f240 6009 	movw	r0, #1545	; 0x609
 800fefe:	4c21      	ldr	r4, [pc, #132]	; (800ff84 <gd32_adc_init()+0x8c>)
 800ff00:	f7ff fc0c 	bl	800f71c <rcu_periph_clock_enable>
 800ff04:	2005      	movs	r0, #5
 800ff06:	f7ff fc4f 	bl	800f7a8 <rcu_adc_clock_config>
 800ff0a:	4620      	mov	r0, r4
 800ff0c:	2201      	movs	r2, #1
 800ff0e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ff12:	f000 fabf 	bl	8010494 <adc_special_function_config>
 800ff16:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 800ff1a:	4620      	mov	r0, r4
 800ff1c:	2102      	movs	r1, #2
 800ff1e:	f000 fb58 	bl	80105d2 <adc_external_trigger_source_config>
 800ff22:	2100      	movs	r1, #0
 800ff24:	4620      	mov	r0, r4
 800ff26:	f000 fadd 	bl	80104e4 <adc_data_alignment_config>
 800ff2a:	2000      	movs	r0, #0
 800ff2c:	f000 faa2 	bl	8010474 <adc_mode_config>
 800ff30:	2202      	movs	r2, #2
 800ff32:	4620      	mov	r0, r4
 800ff34:	4611      	mov	r1, r2
 800ff36:	f000 fb01 	bl	801053c <adc_channel_length_config>
 800ff3a:	4620      	mov	r0, r4
 800ff3c:	2307      	movs	r3, #7
 800ff3e:	2210      	movs	r2, #16
 800ff40:	2100      	movs	r1, #0
 800ff42:	f000 fb18 	bl	8010576 <adc_inserted_channel_config>
 800ff46:	2307      	movs	r3, #7
 800ff48:	4620      	mov	r0, r4
 800ff4a:	2211      	movs	r2, #17
 800ff4c:	2101      	movs	r1, #1
 800ff4e:	f000 fb12 	bl	8010576 <adc_inserted_channel_config>
 800ff52:	2201      	movs	r2, #1
 800ff54:	2102      	movs	r1, #2
 800ff56:	4620      	mov	r0, r4
 800ff58:	f000 fb4c 	bl	80105f4 <adc_external_trigger_config>
 800ff5c:	f000 fae4 	bl	8010528 <adc_tempsensor_vrefint_enable>
 800ff60:	4620      	mov	r0, r4
 800ff62:	f000 fac8 	bl	80104f6 <adc_enable>
 800ff66:	2100      	movs	r1, #0
 800ff68:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800ff6c:	f000 fa58 	bl	8010420 <udelay(unsigned int, unsigned int)>
 800ff70:	4620      	mov	r0, r4
 800ff72:	f000 fac8 	bl	8010506 <adc_calibration_enable>
 800ff76:	4620      	mov	r0, r4
 800ff78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff7c:	2102      	movs	r1, #2
 800ff7e:	f000 bb54 	b.w	801062a <adc_software_trigger_enable>
 800ff82:	bf00      	nop
 800ff84:	40012400 	andmi	r2, r1, r0, lsl #8

0800ff88 <_stop() [clone .isra.0]>:
 800ff88:	b508      	push	{r3, lr}
 800ff8a:	4806      	ldr	r0, [pc, #24]	; (800ffa4 <_stop() [clone .isra.0]+0x1c>)
 800ff8c:	f000 ff9a 	bl	8010ec4 <i2c_stop_on_bus>
 800ff90:	f640 73ff 	movw	r3, #4095	; 0xfff
 800ff94:	4904      	ldr	r1, [pc, #16]	; (800ffa8 <_stop() [clone .isra.0]+0x20>)
 800ff96:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 800ff9a:	0592      	lsls	r2, r2, #22
 800ff9c:	d501      	bpl.n	800ffa2 <_stop() [clone .isra.0]+0x1a>
 800ff9e:	3b01      	subs	r3, #1
 800ffa0:	d1f9      	bne.n	800ff96 <_stop() [clone .isra.0]+0xe>
 800ffa2:	bd08      	pop	{r3, pc}
 800ffa4:	40005400 	andmi	r5, r0, r0, lsl #8
 800ffa8:	40005000 	andmi	r5, r0, r0

0800ffac <gd32_i2c_begin()>:
 800ffac:	b510      	push	{r4, lr}
 800ffae:	f240 7015 	movw	r0, #1813	; 0x715
 800ffb2:	f7ff fbb3 	bl	800f71c <rcu_periph_clock_enable>
 800ffb6:	4c15      	ldr	r4, [pc, #84]	; (801000c <gd32_i2c_begin()+0x60>)
 800ffb8:	f240 6003 	movw	r0, #1539	; 0x603
 800ffbc:	f7ff fbae 	bl	800f71c <rcu_periph_clock_enable>
 800ffc0:	f240 6003 	movw	r0, #1539	; 0x603
 800ffc4:	f7ff fbaa 	bl	800f71c <rcu_periph_clock_enable>
 800ffc8:	4620      	mov	r0, r4
 800ffca:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ffce:	2203      	movs	r2, #3
 800ffd0:	211c      	movs	r1, #28
 800ffd2:	f7ff fb0b 	bl	800f5ec <gpio_init>
 800ffd6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ffda:	2203      	movs	r2, #3
 800ffdc:	4620      	mov	r0, r4
 800ffde:	211c      	movs	r1, #28
 800ffe0:	f7ff fb04 	bl	800f5ec <gpio_init>
 800ffe4:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 800ffe8:	2101      	movs	r1, #1
 800ffea:	2002      	movs	r0, #2
 800ffec:	f7ff fb52 	bl	800f694 <gpio_pin_remap_config>
 800fff0:	4620      	mov	r0, r4
 800fff2:	4907      	ldr	r1, [pc, #28]	; (8010010 <gd32_i2c_begin()+0x64>)
 800fff4:	2200      	movs	r2, #0
 800fff6:	f000 fedf 	bl	8010db8 <i2c_clock_config>
 800fffa:	4620      	mov	r0, r4
 800fffc:	f000 ff58 	bl	8010eb0 <i2c_enable>
 8010000:	4620      	mov	r0, r4
 8010002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010006:	2101      	movs	r1, #1
 8010008:	f000 bf38 	b.w	8010e7c <i2c_ack_config>
 801000c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010010:	00061a80 	andeq	r1, r6, r0, lsl #21

08010014 <gd32_i2c_set_baudrate(unsigned int)>:
 8010014:	4601      	mov	r1, r0
 8010016:	2200      	movs	r2, #0
 8010018:	4801      	ldr	r0, [pc, #4]	; (8010020 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 801001a:	f000 becd 	b.w	8010db8 <i2c_clock_config>
 801001e:	bf00      	nop
 8010020:	40005400 	andmi	r5, r0, r0, lsl #8

08010024 <gd32_i2c_set_address(unsigned char)>:
 8010024:	4b01      	ldr	r3, [pc, #4]	; (801002c <gd32_i2c_set_address(unsigned char)+0x8>)
 8010026:	0040      	lsls	r0, r0, #1
 8010028:	7018      	strb	r0, [r3, #0]
 801002a:	4770      	bx	lr
 801002c:	20009bcc 	andcs	r9, r0, ip, asr #23

08010030 <gd32_i2c_write(char const*, unsigned int)>:
 8010030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010032:	4604      	mov	r4, r0
 8010034:	460f      	mov	r7, r1
 8010036:	f640 75ff 	movw	r5, #4095	; 0xfff
 801003a:	4e2e      	ldr	r6, [pc, #184]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801003c:	f240 6101 	movw	r1, #1537	; 0x601
 8010040:	4630      	mov	r0, r6
 8010042:	f000 ff49 	bl	8010ed8 <i2c_flag_get>
 8010046:	b9b0      	cbnz	r0, 8010076 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8010048:	482a      	ldr	r0, [pc, #168]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801004a:	f000 ff36 	bl	8010eba <i2c_start_on_bus>
 801004e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010052:	4e28      	ldr	r6, [pc, #160]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010054:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010058:	4630      	mov	r0, r6
 801005a:	f000 ff3d 	bl	8010ed8 <i2c_flag_get>
 801005e:	b190      	cbz	r0, 8010086 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8010060:	4b25      	ldr	r3, [pc, #148]	; (80100f8 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8010062:	f06f 0201 	mvn.w	r2, #1
 8010066:	7819      	ldrb	r1, [r3, #0]
 8010068:	4822      	ldr	r0, [pc, #136]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801006a:	f000 ff19 	bl	8010ea0 <i2c_master_addressing>
 801006e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8010072:	4e20      	ldr	r6, [pc, #128]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010074:	e00c      	b.n	8010090 <gd32_i2c_write(char const*, unsigned int)+0x60>
 8010076:	3d01      	subs	r5, #1
 8010078:	d1e0      	bne.n	801003c <gd32_i2c_write(char const*, unsigned int)+0xc>
 801007a:	f7ff ff85 	bl	800ff88 <_stop() [clone .isra.0]>
 801007e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010082:	4240      	negs	r0, r0
 8010084:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010086:	3d01      	subs	r5, #1
 8010088:	d1e4      	bne.n	8010054 <gd32_i2c_write(char const*, unsigned int)+0x24>
 801008a:	e7f6      	b.n	801007a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 801008c:	3d01      	subs	r5, #1
 801008e:	d0f4      	beq.n	801007a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8010090:	f240 5101 	movw	r1, #1281	; 0x501
 8010094:	4630      	mov	r0, r6
 8010096:	f000 ff1f 	bl	8010ed8 <i2c_flag_get>
 801009a:	2800      	cmp	r0, #0
 801009c:	d0f6      	beq.n	801008c <gd32_i2c_write(char const*, unsigned int)+0x5c>
 801009e:	f240 5101 	movw	r1, #1281	; 0x501
 80100a2:	4814      	ldr	r0, [pc, #80]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100a4:	f000 ff23 	bl	8010eee <i2c_flag_clear>
 80100a8:	f640 75ff 	movw	r5, #4095	; 0xfff
 80100ac:	4e11      	ldr	r6, [pc, #68]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100ae:	f240 5107 	movw	r1, #1287	; 0x507
 80100b2:	4630      	mov	r0, r6
 80100b4:	f000 ff10 	bl	8010ed8 <i2c_flag_get>
 80100b8:	2801      	cmp	r0, #1
 80100ba:	d107      	bne.n	80100cc <gd32_i2c_write(char const*, unsigned int)+0x9c>
 80100bc:	4e0d      	ldr	r6, [pc, #52]	; (80100f4 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100be:	4427      	add	r7, r4
 80100c0:	42a7      	cmp	r7, r4
 80100c2:	d106      	bne.n	80100d2 <gd32_i2c_write(char const*, unsigned int)+0xa2>
 80100c4:	f7ff ff60 	bl	800ff88 <_stop() [clone .isra.0]>
 80100c8:	2000      	movs	r0, #0
 80100ca:	e7da      	b.n	8010082 <gd32_i2c_write(char const*, unsigned int)+0x52>
 80100cc:	3d01      	subs	r5, #1
 80100ce:	d1ee      	bne.n	80100ae <gd32_i2c_write(char const*, unsigned int)+0x7e>
 80100d0:	e7d3      	b.n	801007a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 80100d2:	4630      	mov	r0, r6
 80100d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80100d8:	f000 fef9 	bl	8010ece <i2c_data_transmit>
 80100dc:	f640 75ff 	movw	r5, #4095	; 0xfff
 80100e0:	f240 5102 	movw	r1, #1282	; 0x502
 80100e4:	4630      	mov	r0, r6
 80100e6:	f000 fef7 	bl	8010ed8 <i2c_flag_get>
 80100ea:	2800      	cmp	r0, #0
 80100ec:	d1e8      	bne.n	80100c0 <gd32_i2c_write(char const*, unsigned int)+0x90>
 80100ee:	3d01      	subs	r5, #1
 80100f0:	d1f6      	bne.n	80100e0 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 80100f2:	e7c2      	b.n	801007a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 80100f4:	40005400 	andmi	r5, r0, r0, lsl #8
 80100f8:	20009bcc 	andcs	r9, r0, ip, asr #23

080100fc <gd32_i2c_read(char*, unsigned int)>:
 80100fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010100:	4680      	mov	r8, r0
 8010102:	460c      	mov	r4, r1
 8010104:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010108:	4f4b      	ldr	r7, [pc, #300]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801010a:	f240 6101 	movw	r1, #1537	; 0x601
 801010e:	4638      	mov	r0, r7
 8010110:	f000 fee2 	bl	8010ed8 <i2c_flag_get>
 8010114:	4605      	mov	r5, r0
 8010116:	bb08      	cbnz	r0, 801015c <gd32_i2c_read(char*, unsigned int)+0x60>
 8010118:	2c02      	cmp	r4, #2
 801011a:	d103      	bne.n	8010124 <gd32_i2c_read(char*, unsigned int)+0x28>
 801011c:	4601      	mov	r1, r0
 801011e:	4846      	ldr	r0, [pc, #280]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010120:	f000 feb5 	bl	8010e8e <i2c_ackpos_config>
 8010124:	4844      	ldr	r0, [pc, #272]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010126:	f000 fec8 	bl	8010eba <i2c_start_on_bus>
 801012a:	f640 76ff 	movw	r6, #4095	; 0xfff
 801012e:	4f42      	ldr	r7, [pc, #264]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010130:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010134:	4638      	mov	r0, r7
 8010136:	f000 fecf 	bl	8010ed8 <i2c_flag_get>
 801013a:	b1a8      	cbz	r0, 8010168 <gd32_i2c_read(char*, unsigned int)+0x6c>
 801013c:	4b3f      	ldr	r3, [pc, #252]	; (801023c <gd32_i2c_read(char*, unsigned int)+0x140>)
 801013e:	2201      	movs	r2, #1
 8010140:	7819      	ldrb	r1, [r3, #0]
 8010142:	483d      	ldr	r0, [pc, #244]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010144:	f000 feac 	bl	8010ea0 <i2c_master_addressing>
 8010148:	2c02      	cmp	r4, #2
 801014a:	d803      	bhi.n	8010154 <gd32_i2c_read(char*, unsigned int)+0x58>
 801014c:	2100      	movs	r1, #0
 801014e:	483a      	ldr	r0, [pc, #232]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010150:	f000 fe94 	bl	8010e7c <i2c_ack_config>
 8010154:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010158:	4f37      	ldr	r7, [pc, #220]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801015a:	e00a      	b.n	8010172 <gd32_i2c_read(char*, unsigned int)+0x76>
 801015c:	3e01      	subs	r6, #1
 801015e:	d1d4      	bne.n	801010a <gd32_i2c_read(char*, unsigned int)+0xe>
 8010160:	f7ff ff12 	bl	800ff88 <_stop() [clone .isra.0]>
 8010164:	2504      	movs	r5, #4
 8010166:	e04d      	b.n	8010204 <gd32_i2c_read(char*, unsigned int)+0x108>
 8010168:	3e01      	subs	r6, #1
 801016a:	d1e1      	bne.n	8010130 <gd32_i2c_read(char*, unsigned int)+0x34>
 801016c:	e7f8      	b.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x64>
 801016e:	3e01      	subs	r6, #1
 8010170:	d0f6      	beq.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x64>
 8010172:	f240 5101 	movw	r1, #1281	; 0x501
 8010176:	4638      	mov	r0, r7
 8010178:	f000 feae 	bl	8010ed8 <i2c_flag_get>
 801017c:	2800      	cmp	r0, #0
 801017e:	d0f6      	beq.n	801016e <gd32_i2c_read(char*, unsigned int)+0x72>
 8010180:	f240 5101 	movw	r1, #1281	; 0x501
 8010184:	482c      	ldr	r0, [pc, #176]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010186:	f000 feb2 	bl	8010eee <i2c_flag_clear>
 801018a:	2c01      	cmp	r4, #1
 801018c:	d102      	bne.n	8010194 <gd32_i2c_read(char*, unsigned int)+0x98>
 801018e:	482a      	ldr	r0, [pc, #168]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010190:	f000 fe98 	bl	8010ec4 <i2c_stop_on_bus>
 8010194:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010198:	4e27      	ldr	r6, [pc, #156]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801019a:	e022      	b.n	80101e2 <gd32_i2c_read(char*, unsigned int)+0xe6>
 801019c:	2c03      	cmp	r4, #3
 801019e:	d134      	bne.n	801020a <gd32_i2c_read(char*, unsigned int)+0x10e>
 80101a0:	f640 79ff 	movw	r9, #4095	; 0xfff
 80101a4:	e002      	b.n	80101ac <gd32_i2c_read(char*, unsigned int)+0xb0>
 80101a6:	f1b9 0901 	subs.w	r9, r9, #1
 80101aa:	d0d9      	beq.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x64>
 80101ac:	f240 5102 	movw	r1, #1282	; 0x502
 80101b0:	4630      	mov	r0, r6
 80101b2:	f000 fe91 	bl	8010ed8 <i2c_flag_get>
 80101b6:	2800      	cmp	r0, #0
 80101b8:	d0f5      	beq.n	80101a6 <gd32_i2c_read(char*, unsigned int)+0xaa>
 80101ba:	2100      	movs	r1, #0
 80101bc:	4630      	mov	r0, r6
 80101be:	f000 fe5d 	bl	8010e7c <i2c_ack_config>
 80101c2:	f240 5106 	movw	r1, #1286	; 0x506
 80101c6:	4630      	mov	r0, r6
 80101c8:	f000 fe86 	bl	8010ed8 <i2c_flag_get>
 80101cc:	b138      	cbz	r0, 80101de <gd32_i2c_read(char*, unsigned int)+0xe2>
 80101ce:	4630      	mov	r0, r6
 80101d0:	f000 fe7f 	bl	8010ed2 <i2c_data_receive>
 80101d4:	f640 77ff 	movw	r7, #4095	; 0xfff
 80101d8:	f808 0b01 	strb.w	r0, [r8], #1
 80101dc:	3c01      	subs	r4, #1
 80101de:	3f01      	subs	r7, #1
 80101e0:	d0be      	beq.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x64>
 80101e2:	2c00      	cmp	r4, #0
 80101e4:	d1da      	bne.n	801019c <gd32_i2c_read(char*, unsigned int)+0xa0>
 80101e6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80101ea:	4915      	ldr	r1, [pc, #84]	; (8010240 <gd32_i2c_read(char*, unsigned int)+0x144>)
 80101ec:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80101f0:	0592      	lsls	r2, r2, #22
 80101f2:	d41d      	bmi.n	8010230 <gd32_i2c_read(char*, unsigned int)+0x134>
 80101f4:	2101      	movs	r1, #1
 80101f6:	4810      	ldr	r0, [pc, #64]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80101f8:	f000 fe40 	bl	8010e7c <i2c_ack_config>
 80101fc:	2101      	movs	r1, #1
 80101fe:	480e      	ldr	r0, [pc, #56]	; (8010238 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8010200:	f000 fe45 	bl	8010e8e <i2c_ackpos_config>
 8010204:	4628      	mov	r0, r5
 8010206:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801020a:	2c02      	cmp	r4, #2
 801020c:	d1d9      	bne.n	80101c2 <gd32_i2c_read(char*, unsigned int)+0xc6>
 801020e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8010212:	e002      	b.n	801021a <gd32_i2c_read(char*, unsigned int)+0x11e>
 8010214:	f1b9 0901 	subs.w	r9, r9, #1
 8010218:	d0a2      	beq.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x64>
 801021a:	f240 5102 	movw	r1, #1282	; 0x502
 801021e:	4630      	mov	r0, r6
 8010220:	f000 fe5a 	bl	8010ed8 <i2c_flag_get>
 8010224:	2800      	cmp	r0, #0
 8010226:	d0f5      	beq.n	8010214 <gd32_i2c_read(char*, unsigned int)+0x118>
 8010228:	4630      	mov	r0, r6
 801022a:	f000 fe4b 	bl	8010ec4 <i2c_stop_on_bus>
 801022e:	e7c8      	b.n	80101c2 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8010230:	3b01      	subs	r3, #1
 8010232:	d1db      	bne.n	80101ec <gd32_i2c_read(char*, unsigned int)+0xf0>
 8010234:	e796      	b.n	8010164 <gd32_i2c_read(char*, unsigned int)+0x68>
 8010236:	bf00      	nop
 8010238:	40005400 	andmi	r5, r0, r0, lsl #8
 801023c:	20009bcc 	andcs	r9, r0, ip, asr #23
 8010240:	40005000 	andmi	r5, r0, r0

08010244 <gd32_uart_begin>:
 8010244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010246:	461e      	mov	r6, r3
 8010248:	4b63      	ldr	r3, [pc, #396]	; (80103d8 <gd32_uart_begin+0x194>)
 801024a:	4604      	mov	r4, r0
 801024c:	4298      	cmp	r0, r3
 801024e:	460f      	mov	r7, r1
 8010250:	4615      	mov	r5, r2
 8010252:	d03b      	beq.n	80102cc <gd32_uart_begin+0x88>
 8010254:	d80a      	bhi.n	801026c <gd32_uart_begin+0x28>
 8010256:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801025a:	4298      	cmp	r0, r3
 801025c:	d02f      	beq.n	80102be <gd32_uart_begin+0x7a>
 801025e:	f240 7012 	movw	r0, #1810	; 0x712
 8010262:	f7ff fa5b 	bl	800f71c <rcu_periph_clock_enable>
 8010266:	f240 6004 	movw	r0, #1540	; 0x604
 801026a:	e008      	b.n	801027e <gd32_uart_begin+0x3a>
 801026c:	4b5b      	ldr	r3, [pc, #364]	; (80103dc <gd32_uart_begin+0x198>)
 801026e:	4298      	cmp	r0, r3
 8010270:	d02f      	beq.n	80102d2 <gd32_uart_begin+0x8e>
 8010272:	f240 600e 	movw	r0, #1550	; 0x60e
 8010276:	f7ff fa51 	bl	800f71c <rcu_periph_clock_enable>
 801027a:	f240 6003 	movw	r0, #1539	; 0x603
 801027e:	f7ff fa4d 	bl	800f71c <rcu_periph_clock_enable>
 8010282:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8010286:	f7ff fa49 	bl	800f71c <rcu_periph_clock_enable>
 801028a:	4b53      	ldr	r3, [pc, #332]	; (80103d8 <gd32_uart_begin+0x194>)
 801028c:	429c      	cmp	r4, r3
 801028e:	f000 8084 	beq.w	801039a <gd32_uart_begin+0x156>
 8010292:	d829      	bhi.n	80102e8 <gd32_uart_begin+0xa4>
 8010294:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010298:	429c      	cmp	r4, r3
 801029a:	d071      	beq.n	8010380 <gd32_uart_begin+0x13c>
 801029c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80102a0:	2203      	movs	r2, #3
 80102a2:	2118      	movs	r1, #24
 80102a4:	484e      	ldr	r0, [pc, #312]	; (80103e0 <gd32_uart_begin+0x19c>)
 80102a6:	f7ff f9a1 	bl	800f5ec <gpio_init>
 80102aa:	2104      	movs	r1, #4
 80102ac:	484c      	ldr	r0, [pc, #304]	; (80103e0 <gd32_uart_begin+0x19c>)
 80102ae:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80102b2:	2203      	movs	r2, #3
 80102b4:	f7ff f99a 	bl	800f5ec <gpio_init>
 80102b8:	2101      	movs	r1, #1
 80102ba:	484a      	ldr	r0, [pc, #296]	; (80103e4 <gd32_uart_begin+0x1a0>)
 80102bc:	e025      	b.n	801030a <gd32_uart_begin+0xc6>
 80102be:	f240 7011 	movw	r0, #1809	; 0x711
 80102c2:	f7ff fa2b 	bl	800f71c <rcu_periph_clock_enable>
 80102c6:	f240 6002 	movw	r0, #1538	; 0x602
 80102ca:	e7d8      	b.n	801027e <gd32_uart_begin+0x3a>
 80102cc:	f240 7013 	movw	r0, #1811	; 0x713
 80102d0:	e7c7      	b.n	8010262 <gd32_uart_begin+0x1e>
 80102d2:	f240 7014 	movw	r0, #1812	; 0x714
 80102d6:	f7ff fa21 	bl	800f71c <rcu_periph_clock_enable>
 80102da:	f240 6004 	movw	r0, #1540	; 0x604
 80102de:	f7ff fa1d 	bl	800f71c <rcu_periph_clock_enable>
 80102e2:	f240 6005 	movw	r0, #1541	; 0x605
 80102e6:	e7ca      	b.n	801027e <gd32_uart_begin+0x3a>
 80102e8:	4b3c      	ldr	r3, [pc, #240]	; (80103dc <gd32_uart_begin+0x198>)
 80102ea:	429c      	cmp	r4, r3
 80102ec:	d062      	beq.n	80103b4 <gd32_uart_begin+0x170>
 80102ee:	2340      	movs	r3, #64	; 0x40
 80102f0:	2203      	movs	r2, #3
 80102f2:	2118      	movs	r1, #24
 80102f4:	483c      	ldr	r0, [pc, #240]	; (80103e8 <gd32_uart_begin+0x1a4>)
 80102f6:	f7ff f979 	bl	800f5ec <gpio_init>
 80102fa:	2104      	movs	r1, #4
 80102fc:	483a      	ldr	r0, [pc, #232]	; (80103e8 <gd32_uart_begin+0x1a4>)
 80102fe:	2380      	movs	r3, #128	; 0x80
 8010300:	2203      	movs	r2, #3
 8010302:	f7ff f973 	bl	800f5ec <gpio_init>
 8010306:	2101      	movs	r1, #1
 8010308:	2004      	movs	r0, #4
 801030a:	f7ff f9c3 	bl	800f694 <gpio_pin_remap_config>
 801030e:	4620      	mov	r0, r4
 8010310:	f7ff fc60 	bl	800fbd4 <usart_deinit>
 8010314:	68e3      	ldr	r3, [r4, #12]
 8010316:	4639      	mov	r1, r7
 8010318:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801031c:	4620      	mov	r0, r4
 801031e:	60e3      	str	r3, [r4, #12]
 8010320:	f7ff fc98 	bl	800fc54 <usart_baudrate_set>
 8010324:	f1a5 0309 	sub.w	r3, r5, #9
 8010328:	4259      	negs	r1, r3
 801032a:	4159      	adcs	r1, r3
 801032c:	4620      	mov	r0, r4
 801032e:	0309      	lsls	r1, r1, #12
 8010330:	f7ff fcc0 	bl	800fcb4 <usart_word_length_set>
 8010334:	9906      	ldr	r1, [sp, #24]
 8010336:	4620      	mov	r0, r4
 8010338:	1e8a      	subs	r2, r1, #2
 801033a:	4251      	negs	r1, r2
 801033c:	4151      	adcs	r1, r2
 801033e:	0349      	lsls	r1, r1, #13
 8010340:	f7ff fcc0 	bl	800fcc4 <usart_stop_bit_set>
 8010344:	2e01      	cmp	r6, #1
 8010346:	d041      	beq.n	80103cc <gd32_uart_begin+0x188>
 8010348:	2e02      	cmp	r6, #2
 801034a:	d142      	bne.n	80103d2 <gd32_uart_begin+0x18e>
 801034c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010350:	4620      	mov	r0, r4
 8010352:	f7ff fca7 	bl	800fca4 <usart_parity_config>
 8010356:	2100      	movs	r1, #0
 8010358:	4620      	mov	r0, r4
 801035a:	f7ff fcc7 	bl	800fcec <usart_hardware_flow_rts_config>
 801035e:	2100      	movs	r1, #0
 8010360:	4620      	mov	r0, r4
 8010362:	f7ff fcc9 	bl	800fcf8 <usart_hardware_flow_cts_config>
 8010366:	2104      	movs	r1, #4
 8010368:	4620      	mov	r0, r4
 801036a:	f7ff fcb9 	bl	800fce0 <usart_receive_config>
 801036e:	2108      	movs	r1, #8
 8010370:	4620      	mov	r0, r4
 8010372:	f7ff fcaf 	bl	800fcd4 <usart_transmit_config>
 8010376:	68e3      	ldr	r3, [r4, #12]
 8010378:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801037c:	60e3      	str	r3, [r4, #12]
 801037e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010380:	2304      	movs	r3, #4
 8010382:	2203      	movs	r2, #3
 8010384:	2118      	movs	r1, #24
 8010386:	4819      	ldr	r0, [pc, #100]	; (80103ec <gd32_uart_begin+0x1a8>)
 8010388:	f7ff f930 	bl	800f5ec <gpio_init>
 801038c:	2308      	movs	r3, #8
 801038e:	2203      	movs	r2, #3
 8010390:	2104      	movs	r1, #4
 8010392:	4816      	ldr	r0, [pc, #88]	; (80103ec <gd32_uart_begin+0x1a8>)
 8010394:	f7ff f92a 	bl	800f5ec <gpio_init>
 8010398:	e7b9      	b.n	801030e <gd32_uart_begin+0xca>
 801039a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801039e:	2203      	movs	r2, #3
 80103a0:	2118      	movs	r1, #24
 80103a2:	480f      	ldr	r0, [pc, #60]	; (80103e0 <gd32_uart_begin+0x19c>)
 80103a4:	f7ff f922 	bl	800f5ec <gpio_init>
 80103a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80103ac:	2203      	movs	r2, #3
 80103ae:	2104      	movs	r1, #4
 80103b0:	480b      	ldr	r0, [pc, #44]	; (80103e0 <gd32_uart_begin+0x19c>)
 80103b2:	e7ef      	b.n	8010394 <gd32_uart_begin+0x150>
 80103b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80103b8:	2203      	movs	r2, #3
 80103ba:	2118      	movs	r1, #24
 80103bc:	4808      	ldr	r0, [pc, #32]	; (80103e0 <gd32_uart_begin+0x19c>)
 80103be:	f7ff f915 	bl	800f5ec <gpio_init>
 80103c2:	2304      	movs	r3, #4
 80103c4:	2203      	movs	r2, #3
 80103c6:	4619      	mov	r1, r3
 80103c8:	4809      	ldr	r0, [pc, #36]	; (80103f0 <gd32_uart_begin+0x1ac>)
 80103ca:	e7e3      	b.n	8010394 <gd32_uart_begin+0x150>
 80103cc:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80103d0:	e7be      	b.n	8010350 <gd32_uart_begin+0x10c>
 80103d2:	2100      	movs	r1, #0
 80103d4:	e7bc      	b.n	8010350 <gd32_uart_begin+0x10c>
 80103d6:	bf00      	nop
 80103d8:	40004c00 	andmi	r4, r0, r0, lsl #24
 80103dc:	40005000 	andmi	r5, r0, r0
 80103e0:	40011000 	andmi	r1, r1, r0
 80103e4:	00140010 	andseq	r0, r4, r0, lsl r0
 80103e8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80103ec:	40010800 	andmi	r0, r1, r0, lsl #16
 80103f0:	40011400 	andmi	r1, r1, r0, lsl #8

080103f4 <micros_init()>:
 80103f4:	4770      	bx	lr
	...

080103f8 <udelay_init()>:
 80103f8:	4a07      	ldr	r2, [pc, #28]	; (8010418 <udelay_init()+0x20>)
 80103fa:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80103fe:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8010402:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8010406:	2200      	movs	r2, #0
 8010408:	4b04      	ldr	r3, [pc, #16]	; (801041c <udelay_init()+0x24>)
 801040a:	605a      	str	r2, [r3, #4]
 801040c:	681a      	ldr	r2, [r3, #0]
 801040e:	f042 0201 	orr.w	r2, r2, #1
 8010412:	601a      	str	r2, [r3, #0]
 8010414:	4770      	bx	lr
 8010416:	bf00      	nop
 8010418:	e000ed00 	and	lr, r0, r0, lsl #26
 801041c:	e0001000 	and	r1, r0, r0

08010420 <udelay(unsigned int, unsigned int)>:
 8010420:	236c      	movs	r3, #108	; 0x6c
 8010422:	b530      	push	{r4, r5, lr}
 8010424:	4358      	muls	r0, r3
 8010426:	b909      	cbnz	r1, 801042c <udelay(unsigned int, unsigned int)+0xc>
 8010428:	4b08      	ldr	r3, [pc, #32]	; (801044c <udelay(unsigned int, unsigned int)+0x2c>)
 801042a:	6859      	ldr	r1, [r3, #4]
 801042c:	2300      	movs	r3, #0
 801042e:	4c07      	ldr	r4, [pc, #28]	; (801044c <udelay(unsigned int, unsigned int)+0x2c>)
 8010430:	6862      	ldr	r2, [r4, #4]
 8010432:	4291      	cmp	r1, r2
 8010434:	d0fc      	beq.n	8010430 <udelay(unsigned int, unsigned int)+0x10>
 8010436:	bf2a      	itet	cs
 8010438:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 801043c:	189b      	addcc	r3, r3, r2
 801043e:	195b      	addcs	r3, r3, r5
 8010440:	1a5b      	subs	r3, r3, r1
 8010442:	4283      	cmp	r3, r0
 8010444:	d300      	bcc.n	8010448 <udelay(unsigned int, unsigned int)+0x28>
 8010446:	bd30      	pop	{r4, r5, pc}
 8010448:	4611      	mov	r1, r2
 801044a:	e7f1      	b.n	8010430 <udelay(unsigned int, unsigned int)+0x10>
 801044c:	e0001000 	and	r1, r0, r0

08010450 <mac_address_get>:
 8010450:	2102      	movs	r1, #2
 8010452:	4a07      	ldr	r2, [pc, #28]	; (8010470 <mac_address_get+0x20>)
 8010454:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010458:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 801045c:	7001      	strb	r1, [r0, #0]
 801045e:	7042      	strb	r2, [r0, #1]
 8010460:	0e1a      	lsrs	r2, r3, #24
 8010462:	7082      	strb	r2, [r0, #2]
 8010464:	0c1a      	lsrs	r2, r3, #16
 8010466:	70c2      	strb	r2, [r0, #3]
 8010468:	0a1a      	lsrs	r2, r3, #8
 801046a:	7102      	strb	r2, [r0, #4]
 801046c:	7143      	strb	r3, [r0, #5]
 801046e:	4770      	bx	lr
 8010470:	1ffff000 	svcne	0x00fff000

08010474 <adc_mode_config>:
 8010474:	4b06      	ldr	r3, [pc, #24]	; (8010490 <adc_mode_config+0x1c>)
 8010476:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801047a:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 801047e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8010482:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8010486:	4302      	orrs	r2, r0
 8010488:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801048c:	4770      	bx	lr
 801048e:	bf00      	nop
 8010490:	40012000 	andmi	r2, r1, r0

08010494 <adc_special_function_config>:
 8010494:	b510      	push	{r4, lr}
 8010496:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801049a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801049e:	f001 0102 	and.w	r1, r1, #2
 80104a2:	b17a      	cbz	r2, 80104c4 <adc_special_function_config+0x30>
 80104a4:	b11b      	cbz	r3, 80104ae <adc_special_function_config+0x1a>
 80104a6:	6843      	ldr	r3, [r0, #4]
 80104a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80104ac:	6043      	str	r3, [r0, #4]
 80104ae:	b11c      	cbz	r4, 80104b8 <adc_special_function_config+0x24>
 80104b0:	6843      	ldr	r3, [r0, #4]
 80104b2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80104b6:	6043      	str	r3, [r0, #4]
 80104b8:	b119      	cbz	r1, 80104c2 <adc_special_function_config+0x2e>
 80104ba:	6883      	ldr	r3, [r0, #8]
 80104bc:	f043 0302 	orr.w	r3, r3, #2
 80104c0:	6083      	str	r3, [r0, #8]
 80104c2:	bd10      	pop	{r4, pc}
 80104c4:	b11b      	cbz	r3, 80104ce <adc_special_function_config+0x3a>
 80104c6:	6843      	ldr	r3, [r0, #4]
 80104c8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80104cc:	6043      	str	r3, [r0, #4]
 80104ce:	b11c      	cbz	r4, 80104d8 <adc_special_function_config+0x44>
 80104d0:	6843      	ldr	r3, [r0, #4]
 80104d2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80104d6:	6043      	str	r3, [r0, #4]
 80104d8:	2900      	cmp	r1, #0
 80104da:	d0f2      	beq.n	80104c2 <adc_special_function_config+0x2e>
 80104dc:	6883      	ldr	r3, [r0, #8]
 80104de:	f023 0302 	bic.w	r3, r3, #2
 80104e2:	e7ed      	b.n	80104c0 <adc_special_function_config+0x2c>

080104e4 <adc_data_alignment_config>:
 80104e4:	6883      	ldr	r3, [r0, #8]
 80104e6:	b119      	cbz	r1, 80104f0 <adc_data_alignment_config+0xc>
 80104e8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80104ec:	6083      	str	r3, [r0, #8]
 80104ee:	4770      	bx	lr
 80104f0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80104f4:	e7fa      	b.n	80104ec <adc_data_alignment_config+0x8>

080104f6 <adc_enable>:
 80104f6:	6883      	ldr	r3, [r0, #8]
 80104f8:	07db      	lsls	r3, r3, #31
 80104fa:	bf5e      	ittt	pl
 80104fc:	6883      	ldrpl	r3, [r0, #8]
 80104fe:	f043 0301 	orrpl.w	r3, r3, #1
 8010502:	6083      	strpl	r3, [r0, #8]
 8010504:	4770      	bx	lr

08010506 <adc_calibration_enable>:
 8010506:	6883      	ldr	r3, [r0, #8]
 8010508:	f100 0208 	add.w	r2, r0, #8
 801050c:	f043 0308 	orr.w	r3, r3, #8
 8010510:	6083      	str	r3, [r0, #8]
 8010512:	6813      	ldr	r3, [r2, #0]
 8010514:	0719      	lsls	r1, r3, #28
 8010516:	d4fc      	bmi.n	8010512 <adc_calibration_enable+0xc>
 8010518:	6883      	ldr	r3, [r0, #8]
 801051a:	f043 0304 	orr.w	r3, r3, #4
 801051e:	6083      	str	r3, [r0, #8]
 8010520:	6813      	ldr	r3, [r2, #0]
 8010522:	075b      	lsls	r3, r3, #29
 8010524:	d4fc      	bmi.n	8010520 <adc_calibration_enable+0x1a>
 8010526:	4770      	bx	lr

08010528 <adc_tempsensor_vrefint_enable>:
 8010528:	4a03      	ldr	r2, [pc, #12]	; (8010538 <adc_tempsensor_vrefint_enable+0x10>)
 801052a:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801052e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8010532:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8010536:	4770      	bx	lr
 8010538:	40012000 	andmi	r2, r1, r0

0801053c <adc_channel_length_config>:
 801053c:	2901      	cmp	r1, #1
 801053e:	d002      	beq.n	8010546 <adc_channel_length_config+0xa>
 8010540:	2902      	cmp	r1, #2
 8010542:	d00c      	beq.n	801055e <adc_channel_length_config+0x22>
 8010544:	4770      	bx	lr
 8010546:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010548:	3a01      	subs	r2, #1
 801054a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801054e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010550:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010552:	0512      	lsls	r2, r2, #20
 8010554:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8010558:	431a      	orrs	r2, r3
 801055a:	62c2      	str	r2, [r0, #44]	; 0x2c
 801055c:	4770      	bx	lr
 801055e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010560:	3a01      	subs	r2, #1
 8010562:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8010566:	6383      	str	r3, [r0, #56]	; 0x38
 8010568:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801056a:	0512      	lsls	r2, r2, #20
 801056c:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8010570:	431a      	orrs	r2, r3
 8010572:	6382      	str	r2, [r0, #56]	; 0x38
 8010574:	4770      	bx	lr

08010576 <adc_inserted_channel_config>:
 8010576:	b530      	push	{r4, r5, lr}
 8010578:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801057a:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801057c:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8010580:	1a61      	subs	r1, r4, r1
 8010582:	f06f 0404 	mvn.w	r4, #4
 8010586:	4361      	muls	r1, r4
 8010588:	241f      	movs	r4, #31
 801058a:	310f      	adds	r1, #15
 801058c:	408c      	lsls	r4, r1
 801058e:	ea25 0504 	bic.w	r5, r5, r4
 8010592:	fa02 f101 	lsl.w	r1, r2, r1
 8010596:	4329      	orrs	r1, r5
 8010598:	2a09      	cmp	r2, #9
 801059a:	6381      	str	r1, [r0, #56]	; 0x38
 801059c:	d80b      	bhi.n	80105b6 <adc_inserted_channel_config+0x40>
 801059e:	2407      	movs	r4, #7
 80105a0:	6901      	ldr	r1, [r0, #16]
 80105a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80105a6:	4094      	lsls	r4, r2
 80105a8:	ea21 0104 	bic.w	r1, r1, r4
 80105ac:	fa03 f202 	lsl.w	r2, r3, r2
 80105b0:	430a      	orrs	r2, r1
 80105b2:	6102      	str	r2, [r0, #16]
 80105b4:	bd30      	pop	{r4, r5, pc}
 80105b6:	2a11      	cmp	r2, #17
 80105b8:	d8fc      	bhi.n	80105b4 <adc_inserted_channel_config+0x3e>
 80105ba:	2407      	movs	r4, #7
 80105bc:	3a0a      	subs	r2, #10
 80105be:	68c1      	ldr	r1, [r0, #12]
 80105c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80105c4:	4094      	lsls	r4, r2
 80105c6:	ea21 0104 	bic.w	r1, r1, r4
 80105ca:	4093      	lsls	r3, r2
 80105cc:	430b      	orrs	r3, r1
 80105ce:	60c3      	str	r3, [r0, #12]
 80105d0:	e7f0      	b.n	80105b4 <adc_inserted_channel_config+0x3e>

080105d2 <adc_external_trigger_source_config>:
 80105d2:	2901      	cmp	r1, #1
 80105d4:	d002      	beq.n	80105dc <adc_external_trigger_source_config+0xa>
 80105d6:	2902      	cmp	r1, #2
 80105d8:	d008      	beq.n	80105ec <adc_external_trigger_source_config+0x1a>
 80105da:	4770      	bx	lr
 80105dc:	6883      	ldr	r3, [r0, #8]
 80105de:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80105e2:	6083      	str	r3, [r0, #8]
 80105e4:	6883      	ldr	r3, [r0, #8]
 80105e6:	4313      	orrs	r3, r2
 80105e8:	6083      	str	r3, [r0, #8]
 80105ea:	4770      	bx	lr
 80105ec:	6883      	ldr	r3, [r0, #8]
 80105ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80105f2:	e7f6      	b.n	80105e2 <adc_external_trigger_source_config+0x10>

080105f4 <adc_external_trigger_config>:
 80105f4:	f001 0301 	and.w	r3, r1, #1
 80105f8:	f001 0102 	and.w	r1, r1, #2
 80105fc:	b152      	cbz	r2, 8010614 <adc_external_trigger_config+0x20>
 80105fe:	b11b      	cbz	r3, 8010608 <adc_external_trigger_config+0x14>
 8010600:	6883      	ldr	r3, [r0, #8]
 8010602:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010606:	6083      	str	r3, [r0, #8]
 8010608:	b119      	cbz	r1, 8010612 <adc_external_trigger_config+0x1e>
 801060a:	6883      	ldr	r3, [r0, #8]
 801060c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010610:	6083      	str	r3, [r0, #8]
 8010612:	4770      	bx	lr
 8010614:	b11b      	cbz	r3, 801061e <adc_external_trigger_config+0x2a>
 8010616:	6883      	ldr	r3, [r0, #8]
 8010618:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 801061c:	6083      	str	r3, [r0, #8]
 801061e:	2900      	cmp	r1, #0
 8010620:	d0f7      	beq.n	8010612 <adc_external_trigger_config+0x1e>
 8010622:	6883      	ldr	r3, [r0, #8]
 8010624:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8010628:	e7f2      	b.n	8010610 <adc_external_trigger_config+0x1c>

0801062a <adc_software_trigger_enable>:
 801062a:	07ca      	lsls	r2, r1, #31
 801062c:	bf42      	ittt	mi
 801062e:	6883      	ldrmi	r3, [r0, #8]
 8010630:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8010634:	6083      	strmi	r3, [r0, #8]
 8010636:	078b      	lsls	r3, r1, #30
 8010638:	bf42      	ittt	mi
 801063a:	6883      	ldrmi	r3, [r0, #8]
 801063c:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8010640:	6083      	strmi	r3, [r0, #8]
 8010642:	4770      	bx	lr

08010644 <enet_delay>:
 8010644:	2300      	movs	r3, #0
 8010646:	b082      	sub	sp, #8
 8010648:	9301      	str	r3, [sp, #4]
 801064a:	9001      	str	r0, [sp, #4]
 801064c:	9b01      	ldr	r3, [sp, #4]
 801064e:	b90b      	cbnz	r3, 8010654 <enet_delay+0x10>
 8010650:	b002      	add	sp, #8
 8010652:	4770      	bx	lr
 8010654:	9b01      	ldr	r3, [sp, #4]
 8010656:	3b01      	subs	r3, #1
 8010658:	9301      	str	r3, [sp, #4]
 801065a:	e7f7      	b.n	801064c <enet_delay+0x8>

0801065c <enet_software_reset>:
 801065c:	4b07      	ldr	r3, [pc, #28]	; (801067c <enet_software_reset+0x20>)
 801065e:	681a      	ldr	r2, [r3, #0]
 8010660:	f042 0201 	orr.w	r2, r2, #1
 8010664:	601a      	str	r2, [r3, #0]
 8010666:	4a06      	ldr	r2, [pc, #24]	; (8010680 <enet_software_reset+0x24>)
 8010668:	6819      	ldr	r1, [r3, #0]
 801066a:	07c9      	lsls	r1, r1, #31
 801066c:	d501      	bpl.n	8010672 <enet_software_reset+0x16>
 801066e:	3a01      	subs	r2, #1
 8010670:	d1fa      	bne.n	8010668 <enet_software_reset+0xc>
 8010672:	6818      	ldr	r0, [r3, #0]
 8010674:	43c0      	mvns	r0, r0
 8010676:	f000 0001 	and.w	r0, r0, #1
 801067a:	4770      	bx	lr
 801067c:	40029000 	andmi	r9, r2, r0
 8010680:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010684 <enet_descriptors_chain_init>:
 8010684:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8010688:	b5f0      	push	{r4, r5, r6, r7, lr}
 801068a:	4a19      	ldr	r2, [pc, #100]	; (80106f0 <enet_descriptors_chain_init+0x6c>)
 801068c:	d125      	bne.n	80106da <enet_descriptors_chain_init+0x56>
 801068e:	2500      	movs	r5, #0
 8010690:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8010694:	2002      	movs	r0, #2
 8010696:	4b17      	ldr	r3, [pc, #92]	; (80106f4 <enet_descriptors_chain_init+0x70>)
 8010698:	4c17      	ldr	r4, [pc, #92]	; (80106f8 <enet_descriptors_chain_init+0x74>)
 801069a:	6113      	str	r3, [r2, #16]
 801069c:	4a17      	ldr	r2, [pc, #92]	; (80106fc <enet_descriptors_chain_init+0x78>)
 801069e:	6013      	str	r3, [r2, #0]
 80106a0:	2200      	movs	r2, #0
 80106a2:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80106a6:	4916      	ldr	r1, [pc, #88]	; (8010700 <enet_descriptors_chain_init+0x7c>)
 80106a8:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80106ac:	600a      	str	r2, [r1, #0]
 80106ae:	4915      	ldr	r1, [pc, #84]	; (8010704 <enet_descriptors_chain_init+0x80>)
 80106b0:	600a      	str	r2, [r1, #0]
 80106b2:	f103 0110 	add.w	r1, r3, #16
 80106b6:	fb0e 4702 	mla	r7, lr, r2, r4
 80106ba:	f841 7c08 	str.w	r7, [r1, #-8]
 80106be:	4594      	cmp	ip, r2
 80106c0:	bf94      	ite	ls
 80106c2:	461f      	movls	r7, r3
 80106c4:	460f      	movhi	r7, r1
 80106c6:	3201      	adds	r2, #1
 80106c8:	4290      	cmp	r0, r2
 80106ca:	e941 6504 	strd	r6, r5, [r1, #-16]
 80106ce:	f841 7c04 	str.w	r7, [r1, #-4]
 80106d2:	f101 0110 	add.w	r1, r1, #16
 80106d6:	d1ee      	bne.n	80106b6 <enet_descriptors_chain_init+0x32>
 80106d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106da:	4b0b      	ldr	r3, [pc, #44]	; (8010708 <enet_descriptors_chain_init+0x84>)
 80106dc:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80106e0:	60d3      	str	r3, [r2, #12]
 80106e2:	4a0a      	ldr	r2, [pc, #40]	; (801070c <enet_descriptors_chain_init+0x88>)
 80106e4:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80106e8:	2004      	movs	r0, #4
 80106ea:	4c09      	ldr	r4, [pc, #36]	; (8010710 <enet_descriptors_chain_init+0x8c>)
 80106ec:	6013      	str	r3, [r2, #0]
 80106ee:	e7d7      	b.n	80106a0 <enet_descriptors_chain_init+0x1c>
 80106f0:	40029000 	andmi	r9, r2, r0
 80106f4:	2000c014 	andcs	ip, r0, r4, lsl r0
 80106f8:	2000b42c 	andcs	fp, r0, ip, lsr #8
 80106fc:	20009bdc 	ldrdcs	r9, [r0], -ip
 8010700:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010704:	20009bd4 	ldrdcs	r9, [r0], -r4
 8010708:	2000b3ec 	andcs	fp, r0, ip, ror #7
 801070c:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010710:	20009c1c 	andcs	r9, r0, ip, lsl ip

08010714 <enet_frame_receive>:
 8010714:	4a1d      	ldr	r2, [pc, #116]	; (801078c <enet_frame_receive+0x78>)
 8010716:	b510      	push	{r4, lr}
 8010718:	6813      	ldr	r3, [r2, #0]
 801071a:	681b      	ldr	r3, [r3, #0]
 801071c:	2b00      	cmp	r3, #0
 801071e:	db33      	blt.n	8010788 <enet_frame_receive+0x74>
 8010720:	b970      	cbnz	r0, 8010740 <enet_frame_receive+0x2c>
 8010722:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8010726:	6813      	ldr	r3, [r2, #0]
 8010728:	6019      	str	r1, [r3, #0]
 801072a:	4919      	ldr	r1, [pc, #100]	; (8010790 <enet_frame_receive+0x7c>)
 801072c:	6948      	ldr	r0, [r1, #20]
 801072e:	0604      	lsls	r4, r0, #24
 8010730:	d419      	bmi.n	8010766 <enet_frame_receive+0x52>
 8010732:	6859      	ldr	r1, [r3, #4]
 8010734:	0448      	lsls	r0, r1, #17
 8010736:	d51b      	bpl.n	8010770 <enet_frame_receive+0x5c>
 8010738:	68db      	ldr	r3, [r3, #12]
 801073a:	2001      	movs	r0, #1
 801073c:	6013      	str	r3, [r2, #0]
 801073e:	bd10      	pop	{r4, pc}
 8010740:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8010744:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8010748:	d11e      	bne.n	8010788 <enet_frame_receive+0x74>
 801074a:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801074e:	3b04      	subs	r3, #4
 8010750:	428b      	cmp	r3, r1
 8010752:	d819      	bhi.n	8010788 <enet_frame_receive+0x74>
 8010754:	2100      	movs	r1, #0
 8010756:	4299      	cmp	r1, r3
 8010758:	6814      	ldr	r4, [r2, #0]
 801075a:	d2e2      	bcs.n	8010722 <enet_frame_receive+0xe>
 801075c:	68a4      	ldr	r4, [r4, #8]
 801075e:	5d0c      	ldrb	r4, [r1, r4]
 8010760:	5444      	strb	r4, [r0, r1]
 8010762:	3101      	adds	r1, #1
 8010764:	e7f7      	b.n	8010756 <enet_frame_receive+0x42>
 8010766:	2080      	movs	r0, #128	; 0x80
 8010768:	6148      	str	r0, [r1, #20]
 801076a:	2000      	movs	r0, #0
 801076c:	6088      	str	r0, [r1, #8]
 801076e:	e7e0      	b.n	8010732 <enet_frame_receive+0x1e>
 8010770:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8010774:	4906      	ldr	r1, [pc, #24]	; (8010790 <enet_frame_receive+0x7c>)
 8010776:	bf05      	ittet	eq
 8010778:	3310      	addeq	r3, #16
 801077a:	6809      	ldreq	r1, [r1, #0]
 801077c:	68cb      	ldrne	r3, [r1, #12]
 801077e:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010782:	bf08      	it	eq
 8010784:	185b      	addeq	r3, r3, r1
 8010786:	e7d8      	b.n	801073a <enet_frame_receive+0x26>
 8010788:	2000      	movs	r0, #0
 801078a:	e7d8      	b.n	801073e <enet_frame_receive+0x2a>
 801078c:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010790:	40029000 	andmi	r9, r2, r0

08010794 <enet_frame_transmit>:
 8010794:	4a1e      	ldr	r2, [pc, #120]	; (8010810 <enet_frame_transmit+0x7c>)
 8010796:	b530      	push	{r4, r5, lr}
 8010798:	6813      	ldr	r3, [r2, #0]
 801079a:	681b      	ldr	r3, [r3, #0]
 801079c:	2b00      	cmp	r3, #0
 801079e:	db34      	blt.n	801080a <enet_frame_transmit+0x76>
 80107a0:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80107a4:	4299      	cmp	r1, r3
 80107a6:	d830      	bhi.n	801080a <enet_frame_transmit+0x76>
 80107a8:	b9e8      	cbnz	r0, 80107e6 <enet_frame_transmit+0x52>
 80107aa:	6813      	ldr	r3, [r2, #0]
 80107ac:	4819      	ldr	r0, [pc, #100]	; (8010814 <enet_frame_transmit+0x80>)
 80107ae:	6059      	str	r1, [r3, #4]
 80107b0:	6819      	ldr	r1, [r3, #0]
 80107b2:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80107b6:	6019      	str	r1, [r3, #0]
 80107b8:	6941      	ldr	r1, [r0, #20]
 80107ba:	6944      	ldr	r4, [r0, #20]
 80107bc:	f001 0104 	and.w	r1, r1, #4
 80107c0:	f004 0420 	and.w	r4, r4, #32
 80107c4:	4321      	orrs	r1, r4
 80107c6:	d110      	bne.n	80107ea <enet_frame_transmit+0x56>
 80107c8:	6819      	ldr	r1, [r3, #0]
 80107ca:	02c8      	lsls	r0, r1, #11
 80107cc:	d511      	bpl.n	80107f2 <enet_frame_transmit+0x5e>
 80107ce:	68db      	ldr	r3, [r3, #12]
 80107d0:	2001      	movs	r0, #1
 80107d2:	6013      	str	r3, [r2, #0]
 80107d4:	bd30      	pop	{r4, r5, pc}
 80107d6:	5cc5      	ldrb	r5, [r0, r3]
 80107d8:	68a4      	ldr	r4, [r4, #8]
 80107da:	551d      	strb	r5, [r3, r4]
 80107dc:	3301      	adds	r3, #1
 80107de:	428b      	cmp	r3, r1
 80107e0:	6814      	ldr	r4, [r2, #0]
 80107e2:	d1f8      	bne.n	80107d6 <enet_frame_transmit+0x42>
 80107e4:	e7e1      	b.n	80107aa <enet_frame_transmit+0x16>
 80107e6:	2300      	movs	r3, #0
 80107e8:	e7f9      	b.n	80107de <enet_frame_transmit+0x4a>
 80107ea:	6141      	str	r1, [r0, #20]
 80107ec:	2100      	movs	r1, #0
 80107ee:	6041      	str	r1, [r0, #4]
 80107f0:	e7ea      	b.n	80107c8 <enet_frame_transmit+0x34>
 80107f2:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80107f6:	4907      	ldr	r1, [pc, #28]	; (8010814 <enet_frame_transmit+0x80>)
 80107f8:	bf05      	ittet	eq
 80107fa:	3310      	addeq	r3, #16
 80107fc:	6809      	ldreq	r1, [r1, #0]
 80107fe:	690b      	ldrne	r3, [r1, #16]
 8010800:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010804:	bf08      	it	eq
 8010806:	185b      	addeq	r3, r3, r1
 8010808:	e7e2      	b.n	80107d0 <enet_frame_transmit+0x3c>
 801080a:	2000      	movs	r0, #0
 801080c:	e7e2      	b.n	80107d4 <enet_frame_transmit+0x40>
 801080e:	bf00      	nop
 8010810:	20009bdc 	ldrdcs	r9, [r0], -ip
 8010814:	40029000 	andmi	r9, r2, r0

08010818 <enet_transmit_checksum_config>:
 8010818:	6803      	ldr	r3, [r0, #0]
 801081a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801081e:	430b      	orrs	r3, r1
 8010820:	6003      	str	r3, [r0, #0]
 8010822:	4770      	bx	lr

08010824 <enet_mac_address_set>:
 8010824:	888a      	ldrh	r2, [r1, #4]
 8010826:	4b03      	ldr	r3, [pc, #12]	; (8010834 <enet_mac_address_set+0x10>)
 8010828:	50c2      	str	r2, [r0, r3]
 801082a:	680a      	ldr	r2, [r1, #0]
 801082c:	3304      	adds	r3, #4
 801082e:	50c2      	str	r2, [r0, r3]
 8010830:	4770      	bx	lr
 8010832:	bf00      	nop
 8010834:	40028040 	andmi	r8, r2, r0, asr #32

08010838 <enet_rx_enable>:
 8010838:	4a05      	ldr	r2, [pc, #20]	; (8010850 <enet_rx_enable+0x18>)
 801083a:	6813      	ldr	r3, [r2, #0]
 801083c:	f043 0304 	orr.w	r3, r3, #4
 8010840:	6013      	str	r3, [r2, #0]
 8010842:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8010846:	6993      	ldr	r3, [r2, #24]
 8010848:	f043 0302 	orr.w	r3, r3, #2
 801084c:	6193      	str	r3, [r2, #24]
 801084e:	4770      	bx	lr
 8010850:	40028000 	andmi	r8, r2, r0

08010854 <enet_phy_write_read>:
 8010854:	b530      	push	{r4, r5, lr}
 8010856:	4604      	mov	r4, r0
 8010858:	4d13      	ldr	r5, [pc, #76]	; (80108a8 <enet_phy_write_read+0x54>)
 801085a:	0192      	lsls	r2, r2, #6
 801085c:	6928      	ldr	r0, [r5, #16]
 801085e:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8010862:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8010866:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801086a:	4302      	orrs	r2, r0
 801086c:	02c9      	lsls	r1, r1, #11
 801086e:	b289      	uxth	r1, r1
 8010870:	2c02      	cmp	r4, #2
 8010872:	ea42 0204 	orr.w	r2, r2, r4
 8010876:	ea42 0201 	orr.w	r2, r2, r1
 801087a:	bf08      	it	eq
 801087c:	8819      	ldrheq	r1, [r3, #0]
 801087e:	f042 0201 	orr.w	r2, r2, #1
 8010882:	bf08      	it	eq
 8010884:	6169      	streq	r1, [r5, #20]
 8010886:	612a      	str	r2, [r5, #16]
 8010888:	4907      	ldr	r1, [pc, #28]	; (80108a8 <enet_phy_write_read+0x54>)
 801088a:	4a08      	ldr	r2, [pc, #32]	; (80108ac <enet_phy_write_read+0x58>)
 801088c:	6908      	ldr	r0, [r1, #16]
 801088e:	07c0      	lsls	r0, r0, #31
 8010890:	d501      	bpl.n	8010896 <enet_phy_write_read+0x42>
 8010892:	3a01      	subs	r2, #1
 8010894:	d1fa      	bne.n	801088c <enet_phy_write_read+0x38>
 8010896:	690a      	ldr	r2, [r1, #16]
 8010898:	43d2      	mvns	r2, r2
 801089a:	f002 0001 	and.w	r0, r2, #1
 801089e:	b90c      	cbnz	r4, 80108a4 <enet_phy_write_read+0x50>
 80108a0:	694a      	ldr	r2, [r1, #20]
 80108a2:	801a      	strh	r2, [r3, #0]
 80108a4:	bd30      	pop	{r4, r5, pc}
 80108a6:	bf00      	nop
 80108a8:	40028000 	andmi	r8, r2, r0
 80108ac:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080108b0 <enet_phy_config>:
 80108b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80108b2:	4d22      	ldr	r5, [pc, #136]	; (801093c <enet_phy_config+0x8c>)
 80108b4:	2001      	movs	r0, #1
 80108b6:	692c      	ldr	r4, [r5, #16]
 80108b8:	f7ff f806 	bl	800f8c8 <rcu_clock_freq_get>
 80108bc:	4b20      	ldr	r3, [pc, #128]	; (8010940 <enet_phy_config+0x90>)
 80108be:	4a21      	ldr	r2, [pc, #132]	; (8010944 <enet_phy_config+0x94>)
 80108c0:	4403      	add	r3, r0
 80108c2:	4293      	cmp	r3, r2
 80108c4:	f024 041c 	bic.w	r4, r4, #28
 80108c8:	d21f      	bcs.n	801090a <enet_phy_config+0x5a>
 80108ca:	f044 0408 	orr.w	r4, r4, #8
 80108ce:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80108d2:	612c      	str	r4, [r5, #16]
 80108d4:	2200      	movs	r2, #0
 80108d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80108da:	2101      	movs	r1, #1
 80108dc:	2002      	movs	r0, #2
 80108de:	f10d 0306 	add.w	r3, sp, #6
 80108e2:	f7ff ffb7 	bl	8010854 <enet_phy_write_read>
 80108e6:	b310      	cbz	r0, 801092e <enet_phy_config+0x7e>
 80108e8:	2200      	movs	r2, #0
 80108ea:	4817      	ldr	r0, [pc, #92]	; (8010948 <enet_phy_config+0x98>)
 80108ec:	f7ff feaa 	bl	8010644 <enet_delay>
 80108f0:	2101      	movs	r1, #1
 80108f2:	4610      	mov	r0, r2
 80108f4:	f10d 0306 	add.w	r3, sp, #6
 80108f8:	f7ff ffac 	bl	8010854 <enet_phy_write_read>
 80108fc:	b1b8      	cbz	r0, 801092e <enet_phy_config+0x7e>
 80108fe:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010902:	43c0      	mvns	r0, r0
 8010904:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8010908:	e012      	b.n	8010930 <enet_phy_config+0x80>
 801090a:	4b10      	ldr	r3, [pc, #64]	; (801094c <enet_phy_config+0x9c>)
 801090c:	4a10      	ldr	r2, [pc, #64]	; (8010950 <enet_phy_config+0xa0>)
 801090e:	4403      	add	r3, r0
 8010910:	4293      	cmp	r3, r2
 8010912:	d802      	bhi.n	801091a <enet_phy_config+0x6a>
 8010914:	f044 040c 	orr.w	r4, r4, #12
 8010918:	e7d9      	b.n	80108ce <enet_phy_config+0x1e>
 801091a:	4b0e      	ldr	r3, [pc, #56]	; (8010954 <enet_phy_config+0xa4>)
 801091c:	4a0e      	ldr	r2, [pc, #56]	; (8010958 <enet_phy_config+0xa8>)
 801091e:	4403      	add	r3, r0
 8010920:	4293      	cmp	r3, r2
 8010922:	d9d4      	bls.n	80108ce <enet_phy_config+0x1e>
 8010924:	4b0d      	ldr	r3, [pc, #52]	; (801095c <enet_phy_config+0xac>)
 8010926:	4a0e      	ldr	r2, [pc, #56]	; (8010960 <enet_phy_config+0xb0>)
 8010928:	4403      	add	r3, r0
 801092a:	4293      	cmp	r3, r2
 801092c:	d902      	bls.n	8010934 <enet_phy_config+0x84>
 801092e:	2000      	movs	r0, #0
 8010930:	b003      	add	sp, #12
 8010932:	bd30      	pop	{r4, r5, pc}
 8010934:	f044 0404 	orr.w	r4, r4, #4
 8010938:	e7c9      	b.n	80108ce <enet_phy_config+0x1e>
 801093a:	bf00      	nop
 801093c:	40028000 	andmi	r8, r2, r0
 8010940:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8010944:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8010948:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 801094c:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8010950:	017d783f 	cmneq	sp, pc, lsr r8
 8010954:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8010958:	01c9c37f 	biceq	ip, r9, pc, ror r3
 801095c:	faa2b580 	blx	68bdf64 <__stack_size+0x68bc764>
 8010960:	0112a880 	tsteq	r2, r0, lsl #17

08010964 <enet_init>:
 8010964:	2300      	movs	r3, #0
 8010966:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010968:	4604      	mov	r4, r0
 801096a:	460d      	mov	r5, r1
 801096c:	4616      	mov	r6, r2
 801096e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010972:	f7ff ff9d 	bl	80108b0 <enet_phy_config>
 8010976:	2800      	cmp	r0, #0
 8010978:	d037      	beq.n	80109ea <enet_init+0x86>
 801097a:	4b3b      	ldr	r3, [pc, #236]	; (8010a68 <enet_init+0x104>)
 801097c:	4a3b      	ldr	r2, [pc, #236]	; (8010a6c <enet_init+0x108>)
 801097e:	6819      	ldr	r1, [r3, #0]
 8010980:	2c01      	cmp	r4, #1
 8010982:	ea02 0201 	and.w	r2, r2, r1
 8010986:	601a      	str	r2, [r3, #0]
 8010988:	f04f 0200 	mov.w	r2, #0
 801098c:	605a      	str	r2, [r3, #4]
 801098e:	609a      	str	r2, [r3, #8]
 8010990:	60da      	str	r2, [r3, #12]
 8010992:	6999      	ldr	r1, [r3, #24]
 8010994:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8010998:	ea4f 4101 	mov.w	r1, r1, lsl #16
 801099c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80109a0:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80109a4:	6199      	str	r1, [r3, #24]
 80109a6:	4932      	ldr	r1, [pc, #200]	; (8010a70 <enet_init+0x10c>)
 80109a8:	61da      	str	r2, [r3, #28]
 80109aa:	6988      	ldr	r0, [r1, #24]
 80109ac:	4b31      	ldr	r3, [pc, #196]	; (8010a74 <enet_init+0x110>)
 80109ae:	ea03 0300 	and.w	r3, r3, r0
 80109b2:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80109b6:	618b      	str	r3, [r1, #24]
 80109b8:	680b      	ldr	r3, [r1, #0]
 80109ba:	4b2f      	ldr	r3, [pc, #188]	; (8010a78 <enet_init+0x114>)
 80109bc:	600b      	str	r3, [r1, #0]
 80109be:	d01e      	beq.n	80109fe <enet_init+0x9a>
 80109c0:	08e3      	lsrs	r3, r4, #3
 80109c2:	0861      	lsrs	r1, r4, #1
 80109c4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80109c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80109cc:	430b      	orrs	r3, r1
 80109ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109d2:	2101      	movs	r1, #1
 80109d4:	2002      	movs	r0, #2
 80109d6:	f10d 0306 	add.w	r3, sp, #6
 80109da:	f7ff ff3b 	bl	8010854 <enet_phy_write_read>
 80109de:	b158      	cbz	r0, 80109f8 <enet_init+0x94>
 80109e0:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80109e4:	f7ff fe2e 	bl	8010644 <enet_delay>
 80109e8:	e05d      	b.n	8010aa6 <enet_init+0x142>
 80109ea:	4824      	ldr	r0, [pc, #144]	; (8010a7c <enet_init+0x118>)
 80109ec:	f7ff fe2a 	bl	8010644 <enet_delay>
 80109f0:	f7ff ff5e 	bl	80108b0 <enet_phy_config>
 80109f4:	2800      	cmp	r0, #0
 80109f6:	d1c0      	bne.n	801097a <enet_init+0x16>
 80109f8:	2000      	movs	r0, #0
 80109fa:	b003      	add	sp, #12
 80109fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109fe:	4614      	mov	r4, r2
 8010a00:	4f1f      	ldr	r7, [pc, #124]	; (8010a80 <enet_init+0x11c>)
 8010a02:	2201      	movs	r2, #1
 8010a04:	2000      	movs	r0, #0
 8010a06:	4611      	mov	r1, r2
 8010a08:	f10d 0306 	add.w	r3, sp, #6
 8010a0c:	f7ff ff22 	bl	8010854 <enet_phy_write_read>
 8010a10:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a14:	3401      	adds	r4, #1
 8010a16:	f002 0204 	and.w	r2, r2, #4
 8010a1a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a1e:	b912      	cbnz	r2, 8010a26 <enet_init+0xc2>
 8010a20:	42bc      	cmp	r4, r7
 8010a22:	d1ee      	bne.n	8010a02 <enet_init+0x9e>
 8010a24:	e7e8      	b.n	80109f8 <enet_init+0x94>
 8010a26:	42bc      	cmp	r4, r7
 8010a28:	d0e6      	beq.n	80109f8 <enet_init+0x94>
 8010a2a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010a2e:	2101      	movs	r1, #1
 8010a30:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a34:	2002      	movs	r0, #2
 8010a36:	2200      	movs	r2, #0
 8010a38:	f7ff ff0c 	bl	8010854 <enet_phy_write_read>
 8010a3c:	2800      	cmp	r0, #0
 8010a3e:	d0db      	beq.n	80109f8 <enet_init+0x94>
 8010a40:	2400      	movs	r4, #0
 8010a42:	4f0f      	ldr	r7, [pc, #60]	; (8010a80 <enet_init+0x11c>)
 8010a44:	2201      	movs	r2, #1
 8010a46:	2000      	movs	r0, #0
 8010a48:	4611      	mov	r1, r2
 8010a4a:	f10d 0306 	add.w	r3, sp, #6
 8010a4e:	f7ff ff01 	bl	8010854 <enet_phy_write_read>
 8010a52:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a56:	3401      	adds	r4, #1
 8010a58:	f002 0220 	and.w	r2, r2, #32
 8010a5c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a60:	b982      	cbnz	r2, 8010a84 <enet_init+0x120>
 8010a62:	42bc      	cmp	r4, r7
 8010a64:	d1ee      	bne.n	8010a44 <enet_init+0xe0>
 8010a66:	e7c7      	b.n	80109f8 <enet_init+0x94>
 8010a68:	40028000 	andmi	r8, r2, r0
 8010a6c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8010a70:	40029000 	andmi	r9, r2, r0
 8010a74:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8010a78:	02c16000 	sbceq	r6, r1, #0
 8010a7c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8010a80:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010a84:	42bc      	cmp	r4, r7
 8010a86:	d0b7      	beq.n	80109f8 <enet_init+0x94>
 8010a88:	2101      	movs	r1, #1
 8010a8a:	2210      	movs	r2, #16
 8010a8c:	2000      	movs	r0, #0
 8010a8e:	f7ff fee1 	bl	8010854 <enet_phy_write_read>
 8010a92:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010a96:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8010a9a:	0799      	lsls	r1, r3, #30
 8010a9c:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8010aa0:	d401      	bmi.n	8010aa6 <enet_init+0x142>
 8010aa2:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8010aa6:	4b63      	ldr	r3, [pc, #396]	; (8010c34 <enet_init+0x2d0>)
 8010aa8:	681a      	ldr	r2, [r3, #0]
 8010aaa:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8010aae:	4314      	orrs	r4, r2
 8010ab0:	056a      	lsls	r2, r5, #21
 8010ab2:	601c      	str	r4, [r3, #0]
 8010ab4:	d50b      	bpl.n	8010ace <enet_init+0x16a>
 8010ab6:	681a      	ldr	r2, [r3, #0]
 8010ab8:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8010abc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8010ac0:	601a      	str	r2, [r3, #0]
 8010ac2:	4a5d      	ldr	r2, [pc, #372]	; (8010c38 <enet_init+0x2d4>)
 8010ac4:	6993      	ldr	r3, [r2, #24]
 8010ac6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8010aca:	431d      	orrs	r5, r3
 8010acc:	6195      	str	r5, [r2, #24]
 8010ace:	4959      	ldr	r1, [pc, #356]	; (8010c34 <enet_init+0x2d0>)
 8010ad0:	684b      	ldr	r3, [r1, #4]
 8010ad2:	431e      	orrs	r6, r3
 8010ad4:	4b59      	ldr	r3, [pc, #356]	; (8010c3c <enet_init+0x2d8>)
 8010ad6:	604e      	str	r6, [r1, #4]
 8010ad8:	681a      	ldr	r2, [r3, #0]
 8010ada:	07d7      	lsls	r7, r2, #31
 8010adc:	d510      	bpl.n	8010b00 <enet_init+0x19c>
 8010ade:	685a      	ldr	r2, [r3, #4]
 8010ae0:	680c      	ldr	r4, [r1, #0]
 8010ae2:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8010ae6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8010aea:	4320      	orrs	r0, r4
 8010aec:	6008      	str	r0, [r1, #0]
 8010aee:	4852      	ldr	r0, [pc, #328]	; (8010c38 <enet_init+0x2d4>)
 8010af0:	0892      	lsrs	r2, r2, #2
 8010af2:	6981      	ldr	r1, [r0, #24]
 8010af4:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8010af8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8010afc:	430a      	orrs	r2, r1
 8010afe:	6182      	str	r2, [r0, #24]
 8010b00:	681a      	ldr	r2, [r3, #0]
 8010b02:	0796      	lsls	r6, r2, #30
 8010b04:	d508      	bpl.n	8010b18 <enet_init+0x1b4>
 8010b06:	494c      	ldr	r1, [pc, #304]	; (8010c38 <enet_init+0x2d4>)
 8010b08:	6898      	ldr	r0, [r3, #8]
 8010b0a:	680a      	ldr	r2, [r1, #0]
 8010b0c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8010b10:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8010b14:	4302      	orrs	r2, r0
 8010b16:	600a      	str	r2, [r1, #0]
 8010b18:	681a      	ldr	r2, [r3, #0]
 8010b1a:	0755      	lsls	r5, r2, #29
 8010b1c:	d508      	bpl.n	8010b30 <enet_init+0x1cc>
 8010b1e:	4946      	ldr	r1, [pc, #280]	; (8010c38 <enet_init+0x2d4>)
 8010b20:	68d8      	ldr	r0, [r3, #12]
 8010b22:	680a      	ldr	r2, [r1, #0]
 8010b24:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8010b28:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8010b2c:	4302      	orrs	r2, r0
 8010b2e:	600a      	str	r2, [r1, #0]
 8010b30:	681a      	ldr	r2, [r3, #0]
 8010b32:	0714      	lsls	r4, r2, #28
 8010b34:	d508      	bpl.n	8010b48 <enet_init+0x1e4>
 8010b36:	4940      	ldr	r1, [pc, #256]	; (8010c38 <enet_init+0x2d4>)
 8010b38:	6918      	ldr	r0, [r3, #16]
 8010b3a:	680a      	ldr	r2, [r1, #0]
 8010b3c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8010b40:	f022 0202 	bic.w	r2, r2, #2
 8010b44:	4302      	orrs	r2, r0
 8010b46:	600a      	str	r2, [r1, #0]
 8010b48:	681a      	ldr	r2, [r3, #0]
 8010b4a:	06d0      	lsls	r0, r2, #27
 8010b4c:	d506      	bpl.n	8010b5c <enet_init+0x1f8>
 8010b4e:	493a      	ldr	r1, [pc, #232]	; (8010c38 <enet_init+0x2d4>)
 8010b50:	4a3b      	ldr	r2, [pc, #236]	; (8010c40 <enet_init+0x2dc>)
 8010b52:	6988      	ldr	r0, [r1, #24]
 8010b54:	4002      	ands	r2, r0
 8010b56:	6958      	ldr	r0, [r3, #20]
 8010b58:	4302      	orrs	r2, r0
 8010b5a:	618a      	str	r2, [r1, #24]
 8010b5c:	681a      	ldr	r2, [r3, #0]
 8010b5e:	0691      	lsls	r1, r2, #26
 8010b60:	d508      	bpl.n	8010b74 <enet_init+0x210>
 8010b62:	4935      	ldr	r1, [pc, #212]	; (8010c38 <enet_init+0x2d4>)
 8010b64:	6998      	ldr	r0, [r3, #24]
 8010b66:	698a      	ldr	r2, [r1, #24]
 8010b68:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8010b6c:	f022 0204 	bic.w	r2, r2, #4
 8010b70:	4302      	orrs	r2, r0
 8010b72:	618a      	str	r2, [r1, #24]
 8010b74:	681a      	ldr	r2, [r3, #0]
 8010b76:	0652      	lsls	r2, r2, #25
 8010b78:	d506      	bpl.n	8010b88 <enet_init+0x224>
 8010b7a:	492e      	ldr	r1, [pc, #184]	; (8010c34 <enet_init+0x2d0>)
 8010b7c:	69d8      	ldr	r0, [r3, #28]
 8010b7e:	69ca      	ldr	r2, [r1, #28]
 8010b80:	0c52      	lsrs	r2, r2, #17
 8010b82:	0452      	lsls	r2, r2, #17
 8010b84:	4302      	orrs	r2, r0
 8010b86:	61ca      	str	r2, [r1, #28]
 8010b88:	681a      	ldr	r2, [r3, #0]
 8010b8a:	0617      	lsls	r7, r2, #24
 8010b8c:	d517      	bpl.n	8010bbe <enet_init+0x25a>
 8010b8e:	4c29      	ldr	r4, [pc, #164]	; (8010c34 <enet_init+0x2d0>)
 8010b90:	6a1a      	ldr	r2, [r3, #32]
 8010b92:	69a0      	ldr	r0, [r4, #24]
 8010b94:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8010b98:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8010b9c:	0400      	lsls	r0, r0, #16
 8010b9e:	0c00      	lsrs	r0, r0, #16
 8010ba0:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8010ba4:	4301      	orrs	r1, r0
 8010ba6:	4824      	ldr	r0, [pc, #144]	; (8010c38 <enet_init+0x2d4>)
 8010ba8:	61a1      	str	r1, [r4, #24]
 8010baa:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8010bae:	0a12      	lsrs	r2, r2, #8
 8010bb0:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8010bb4:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8010bb8:	430a      	orrs	r2, r1
 8010bba:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8010bbe:	681a      	ldr	r2, [r3, #0]
 8010bc0:	05d6      	lsls	r6, r2, #23
 8010bc2:	bf42      	ittt	mi
 8010bc4:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8010bc6:	4a1b      	ldrmi	r2, [pc, #108]	; (8010c34 <enet_init+0x2d0>)
 8010bc8:	6091      	strmi	r1, [r2, #8]
 8010bca:	681a      	ldr	r2, [r3, #0]
 8010bcc:	0595      	lsls	r5, r2, #22
 8010bce:	bf42      	ittt	mi
 8010bd0:	4a18      	ldrmi	r2, [pc, #96]	; (8010c34 <enet_init+0x2d0>)
 8010bd2:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8010bd4:	60d1      	strmi	r1, [r2, #12]
 8010bd6:	681a      	ldr	r2, [r3, #0]
 8010bd8:	0554      	lsls	r4, r2, #21
 8010bda:	d508      	bpl.n	8010bee <enet_init+0x28a>
 8010bdc:	4915      	ldr	r1, [pc, #84]	; (8010c34 <enet_init+0x2d0>)
 8010bde:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8010be0:	684a      	ldr	r2, [r1, #4]
 8010be2:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8010be6:	f022 0206 	bic.w	r2, r2, #6
 8010bea:	4302      	orrs	r2, r0
 8010bec:	604a      	str	r2, [r1, #4]
 8010bee:	681a      	ldr	r2, [r3, #0]
 8010bf0:	0510      	lsls	r0, r2, #20
 8010bf2:	d508      	bpl.n	8010c06 <enet_init+0x2a2>
 8010bf4:	490f      	ldr	r1, [pc, #60]	; (8010c34 <enet_init+0x2d0>)
 8010bf6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8010bf8:	680a      	ldr	r2, [r1, #0]
 8010bfa:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8010bfe:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8010c02:	4302      	orrs	r2, r0
 8010c04:	600a      	str	r2, [r1, #0]
 8010c06:	681a      	ldr	r2, [r3, #0]
 8010c08:	04d1      	lsls	r1, r2, #19
 8010c0a:	d506      	bpl.n	8010c1a <enet_init+0x2b6>
 8010c0c:	4909      	ldr	r1, [pc, #36]	; (8010c34 <enet_init+0x2d0>)
 8010c0e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010c10:	680a      	ldr	r2, [r1, #0]
 8010c12:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8010c16:	4302      	orrs	r2, r0
 8010c18:	600a      	str	r2, [r1, #0]
 8010c1a:	681a      	ldr	r2, [r3, #0]
 8010c1c:	0492      	lsls	r2, r2, #18
 8010c1e:	d506      	bpl.n	8010c2e <enet_init+0x2ca>
 8010c20:	4904      	ldr	r1, [pc, #16]	; (8010c34 <enet_init+0x2d0>)
 8010c22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010c24:	680a      	ldr	r2, [r1, #0]
 8010c26:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8010c2a:	4313      	orrs	r3, r2
 8010c2c:	600b      	str	r3, [r1, #0]
 8010c2e:	2001      	movs	r0, #1
 8010c30:	e6e3      	b.n	80109fa <enet_init+0x96>
 8010c32:	bf00      	nop
 8010c34:	40028000 	andmi	r8, r2, r0
 8010c38:	40029000 	andmi	r9, r2, r0
 8010c3c:	20009be0 	andcs	r9, r0, r0, ror #23
 8010c40:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08010c44 <enet_txfifo_flush>:
 8010c44:	4b06      	ldr	r3, [pc, #24]	; (8010c60 <enet_txfifo_flush+0x1c>)
 8010c46:	4807      	ldr	r0, [pc, #28]	; (8010c64 <enet_txfifo_flush+0x20>)
 8010c48:	699a      	ldr	r2, [r3, #24]
 8010c4a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8010c4e:	619a      	str	r2, [r3, #24]
 8010c50:	699a      	ldr	r2, [r3, #24]
 8010c52:	02d2      	lsls	r2, r2, #11
 8010c54:	d502      	bpl.n	8010c5c <enet_txfifo_flush+0x18>
 8010c56:	3801      	subs	r0, #1
 8010c58:	d1fa      	bne.n	8010c50 <enet_txfifo_flush+0xc>
 8010c5a:	4770      	bx	lr
 8010c5c:	2001      	movs	r0, #1
 8010c5e:	4770      	bx	lr
 8010c60:	40029000 	andmi	r9, r2, r0
 8010c64:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010c68 <enet_tx_enable>:
 8010c68:	4a06      	ldr	r2, [pc, #24]	; (8010c84 <enet_tx_enable+0x1c>)
 8010c6a:	b508      	push	{r3, lr}
 8010c6c:	6813      	ldr	r3, [r2, #0]
 8010c6e:	f043 0308 	orr.w	r3, r3, #8
 8010c72:	6013      	str	r3, [r2, #0]
 8010c74:	f7ff ffe6 	bl	8010c44 <enet_txfifo_flush>
 8010c78:	4a03      	ldr	r2, [pc, #12]	; (8010c88 <enet_tx_enable+0x20>)
 8010c7a:	6993      	ldr	r3, [r2, #24]
 8010c7c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010c80:	6193      	str	r3, [r2, #24]
 8010c82:	bd08      	pop	{r3, pc}
 8010c84:	40028000 	andmi	r8, r2, r0
 8010c88:	40029000 	andmi	r9, r2, r0

08010c8c <enet_enable>:
 8010c8c:	b508      	push	{r3, lr}
 8010c8e:	f7ff ffeb 	bl	8010c68 <enet_tx_enable>
 8010c92:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010c96:	f7ff bdcf 	b.w	8010838 <enet_rx_enable>

08010c9a <enet_desc_information_get>:
 8010c9a:	2905      	cmp	r1, #5
 8010c9c:	d817      	bhi.n	8010cce <enet_desc_information_get+0x34>
 8010c9e:	e8df f001 	tbb	[pc, r1]
 8010ca2:	03091012 	movweq	r1, #36882	; 0x9012
 8010ca6:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8010caa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010cae:	4770      	bx	lr
 8010cb0:	88c0      	ldrh	r0, [r0, #6]
 8010cb2:	e7fa      	b.n	8010caa <enet_desc_information_get+0x10>
 8010cb4:	8840      	ldrh	r0, [r0, #2]
 8010cb6:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8010cba:	2804      	cmp	r0, #4
 8010cbc:	d90a      	bls.n	8010cd4 <enet_desc_information_get+0x3a>
 8010cbe:	3804      	subs	r0, #4
 8010cc0:	4770      	bx	lr
 8010cc2:	6880      	ldr	r0, [r0, #8]
 8010cc4:	4770      	bx	lr
 8010cc6:	6800      	ldr	r0, [r0, #0]
 8010cc8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8010ccc:	4770      	bx	lr
 8010cce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010cd2:	4770      	bx	lr
 8010cd4:	2000      	movs	r0, #0
 8010cd6:	4770      	bx	lr

08010cd8 <enet_rxframe_drop>:
 8010cd8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8010cdc:	4814      	ldr	r0, [pc, #80]	; (8010d30 <enet_rxframe_drop+0x58>)
 8010cde:	b510      	push	{r4, lr}
 8010ce0:	6802      	ldr	r2, [r0, #0]
 8010ce2:	4914      	ldr	r1, [pc, #80]	; (8010d34 <enet_rxframe_drop+0x5c>)
 8010ce4:	6854      	ldr	r4, [r2, #4]
 8010ce6:	6013      	str	r3, [r2, #0]
 8010ce8:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8010cec:	680b      	ldr	r3, [r1, #0]
 8010cee:	d009      	beq.n	8010d04 <enet_rxframe_drop+0x2c>
 8010cf0:	b12b      	cbz	r3, 8010cfe <enet_rxframe_drop+0x26>
 8010cf2:	68da      	ldr	r2, [r3, #12]
 8010cf4:	6002      	str	r2, [r0, #0]
 8010cf6:	681a      	ldr	r2, [r3, #0]
 8010cf8:	b1ba      	cbz	r2, 8010d2a <enet_rxframe_drop+0x52>
 8010cfa:	600a      	str	r2, [r1, #0]
 8010cfc:	bd10      	pop	{r4, pc}
 8010cfe:	68d3      	ldr	r3, [r2, #12]
 8010d00:	6003      	str	r3, [r0, #0]
 8010d02:	e7fb      	b.n	8010cfc <enet_rxframe_drop+0x24>
 8010d04:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8010d08:	4c0b      	ldr	r4, [pc, #44]	; (8010d38 <enet_rxframe_drop+0x60>)
 8010d0a:	d006      	beq.n	8010d1a <enet_rxframe_drop+0x42>
 8010d0c:	68e2      	ldr	r2, [r4, #12]
 8010d0e:	6002      	str	r2, [r0, #0]
 8010d10:	2b00      	cmp	r3, #0
 8010d12:	d0f3      	beq.n	8010cfc <enet_rxframe_drop+0x24>
 8010d14:	681b      	ldr	r3, [r3, #0]
 8010d16:	600b      	str	r3, [r1, #0]
 8010d18:	e7f0      	b.n	8010cfc <enet_rxframe_drop+0x24>
 8010d1a:	6824      	ldr	r4, [r4, #0]
 8010d1c:	3210      	adds	r2, #16
 8010d1e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8010d22:	4422      	add	r2, r4
 8010d24:	6002      	str	r2, [r0, #0]
 8010d26:	2b00      	cmp	r3, #0
 8010d28:	d0e8      	beq.n	8010cfc <enet_rxframe_drop+0x24>
 8010d2a:	3310      	adds	r3, #16
 8010d2c:	e7f3      	b.n	8010d16 <enet_rxframe_drop+0x3e>
 8010d2e:	bf00      	nop
 8010d30:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010d34:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010d38:	40029000 	andmi	r9, r2, r0

08010d3c <enet_rxframe_size_get>:
 8010d3c:	b508      	push	{r3, lr}
 8010d3e:	4b0c      	ldr	r3, [pc, #48]	; (8010d70 <enet_rxframe_size_get+0x34>)
 8010d40:	681b      	ldr	r3, [r3, #0]
 8010d42:	6818      	ldr	r0, [r3, #0]
 8010d44:	2800      	cmp	r0, #0
 8010d46:	db10      	blt.n	8010d6a <enet_rxframe_size_get+0x2e>
 8010d48:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8010d4c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010d50:	d003      	beq.n	8010d5a <enet_rxframe_size_get+0x1e>
 8010d52:	f7ff ffc1 	bl	8010cd8 <enet_rxframe_drop>
 8010d56:	2001      	movs	r0, #1
 8010d58:	bd08      	pop	{r3, pc}
 8010d5a:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8010d5e:	2b21      	cmp	r3, #33	; 0x21
 8010d60:	d0f7      	beq.n	8010d52 <enet_rxframe_size_get+0x16>
 8010d62:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8010d66:	3804      	subs	r0, #4
 8010d68:	e7f6      	b.n	8010d58 <enet_rxframe_size_get+0x1c>
 8010d6a:	2000      	movs	r0, #0
 8010d6c:	e7f4      	b.n	8010d58 <enet_rxframe_size_get+0x1c>
 8010d6e:	bf00      	nop
 8010d70:	20009bd8 	ldrdcs	r9, [r0], -r8

08010d74 <enet_initpara_reset>:
 8010d74:	2200      	movs	r2, #0
 8010d76:	4b08      	ldr	r3, [pc, #32]	; (8010d98 <enet_initpara_reset+0x24>)
 8010d78:	e9c3 2200 	strd	r2, r2, [r3]
 8010d7c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8010d80:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8010d84:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8010d88:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8010d8c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8010d90:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8010d94:	639a      	str	r2, [r3, #56]	; 0x38
 8010d96:	4770      	bx	lr
 8010d98:	20009be0 	andcs	r9, r0, r0, ror #23

08010d9c <enet_deinit>:
 8010d9c:	b508      	push	{r3, lr}
 8010d9e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010da2:	f7fe fcd6 	bl	800f752 <rcu_periph_reset_enable>
 8010da6:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010daa:	f7fe fcd4 	bl	800f756 <rcu_periph_reset_disable>
 8010dae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010db2:	f7ff bfdf 	b.w	8010d74 <enet_initpara_reset>
	...

08010db8 <i2c_clock_config>:
 8010db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010dba:	4605      	mov	r5, r0
 8010dbc:	2002      	movs	r0, #2
 8010dbe:	460c      	mov	r4, r1
 8010dc0:	4617      	mov	r7, r2
 8010dc2:	f7fe fd81 	bl	800f8c8 <rcu_clock_freq_get>
 8010dc6:	4603      	mov	r3, r0
 8010dc8:	4828      	ldr	r0, [pc, #160]	; (8010e6c <i2c_clock_config+0xb4>)
 8010dca:	4a29      	ldr	r2, [pc, #164]	; (8010e70 <i2c_clock_config+0xb8>)
 8010dcc:	fbb3 f0f0 	udiv	r0, r3, r0
 8010dd0:	4293      	cmp	r3, r2
 8010dd2:	bf34      	ite	cc
 8010dd4:	4601      	movcc	r1, r0
 8010dd6:	2136      	movcs	r1, #54	; 0x36
 8010dd8:	686e      	ldr	r6, [r5, #4]
 8010dda:	4a26      	ldr	r2, [pc, #152]	; (8010e74 <i2c_clock_config+0xbc>)
 8010ddc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8010de0:	430e      	orrs	r6, r1
 8010de2:	4294      	cmp	r4, r2
 8010de4:	606e      	str	r6, [r5, #4]
 8010de6:	d816      	bhi.n	8010e16 <i2c_clock_config+0x5e>
 8010de8:	3001      	adds	r0, #1
 8010dea:	2835      	cmp	r0, #53	; 0x35
 8010dec:	d90d      	bls.n	8010e0a <i2c_clock_config+0x52>
 8010dee:	2236      	movs	r2, #54	; 0x36
 8010df0:	622a      	str	r2, [r5, #32]
 8010df2:	0064      	lsls	r4, r4, #1
 8010df4:	fbb3 f4f4 	udiv	r4, r3, r4
 8010df8:	2c04      	cmp	r4, #4
 8010dfa:	bf38      	it	cc
 8010dfc:	2404      	movcc	r4, #4
 8010dfe:	69ea      	ldr	r2, [r5, #28]
 8010e00:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8010e04:	4314      	orrs	r4, r2
 8010e06:	61ec      	str	r4, [r5, #28]
 8010e08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e0a:	2802      	cmp	r0, #2
 8010e0c:	d801      	bhi.n	8010e12 <i2c_clock_config+0x5a>
 8010e0e:	2202      	movs	r2, #2
 8010e10:	e7ee      	b.n	8010df0 <i2c_clock_config+0x38>
 8010e12:	6228      	str	r0, [r5, #32]
 8010e14:	e7ed      	b.n	8010df2 <i2c_clock_config+0x3a>
 8010e16:	4a18      	ldr	r2, [pc, #96]	; (8010e78 <i2c_clock_config+0xc0>)
 8010e18:	4294      	cmp	r4, r2
 8010e1a:	d8f5      	bhi.n	8010e08 <i2c_clock_config+0x50>
 8010e1c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8010e20:	4351      	muls	r1, r2
 8010e22:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010e26:	fbb1 f1f2 	udiv	r1, r1, r2
 8010e2a:	3101      	adds	r1, #1
 8010e2c:	6229      	str	r1, [r5, #32]
 8010e2e:	b9a7      	cbnz	r7, 8010e5a <i2c_clock_config+0xa2>
 8010e30:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010e34:	fbb3 f4f4 	udiv	r4, r3, r4
 8010e38:	69eb      	ldr	r3, [r5, #28]
 8010e3a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010e3e:	61eb      	str	r3, [r5, #28]
 8010e40:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8010e44:	b90b      	cbnz	r3, 8010e4a <i2c_clock_config+0x92>
 8010e46:	f044 0401 	orr.w	r4, r4, #1
 8010e4a:	69eb      	ldr	r3, [r5, #28]
 8010e4c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010e50:	61eb      	str	r3, [r5, #28]
 8010e52:	69eb      	ldr	r3, [r5, #28]
 8010e54:	4323      	orrs	r3, r4
 8010e56:	61eb      	str	r3, [r5, #28]
 8010e58:	e7d6      	b.n	8010e08 <i2c_clock_config+0x50>
 8010e5a:	2219      	movs	r2, #25
 8010e5c:	4354      	muls	r4, r2
 8010e5e:	fbb3 f4f4 	udiv	r4, r3, r4
 8010e62:	69eb      	ldr	r3, [r5, #28]
 8010e64:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8010e68:	e7e9      	b.n	8010e3e <i2c_clock_config+0x86>
 8010e6a:	bf00      	nop
 8010e6c:	000f4240 	andeq	r4, pc, r0, asr #4
 8010e70:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8010e74:	000186a0 	andeq	r8, r1, r0, lsr #13
 8010e78:	00061a80 	andeq	r1, r6, r0, lsl #21

08010e7c <i2c_ack_config>:
 8010e7c:	6803      	ldr	r3, [r0, #0]
 8010e7e:	2901      	cmp	r1, #1
 8010e80:	bf0c      	ite	eq
 8010e82:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8010e86:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8010e8a:	6003      	str	r3, [r0, #0]
 8010e8c:	4770      	bx	lr

08010e8e <i2c_ackpos_config>:
 8010e8e:	6803      	ldr	r3, [r0, #0]
 8010e90:	b919      	cbnz	r1, 8010e9a <i2c_ackpos_config+0xc>
 8010e92:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010e96:	6003      	str	r3, [r0, #0]
 8010e98:	4770      	bx	lr
 8010e9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010e9e:	e7fa      	b.n	8010e96 <i2c_ackpos_config+0x8>

08010ea0 <i2c_master_addressing>:
 8010ea0:	3202      	adds	r2, #2
 8010ea2:	bf0c      	ite	eq
 8010ea4:	f021 0101 	biceq.w	r1, r1, #1
 8010ea8:	f041 0101 	orrne.w	r1, r1, #1
 8010eac:	6101      	str	r1, [r0, #16]
 8010eae:	4770      	bx	lr

08010eb0 <i2c_enable>:
 8010eb0:	6803      	ldr	r3, [r0, #0]
 8010eb2:	f043 0301 	orr.w	r3, r3, #1
 8010eb6:	6003      	str	r3, [r0, #0]
 8010eb8:	4770      	bx	lr

08010eba <i2c_start_on_bus>:
 8010eba:	6803      	ldr	r3, [r0, #0]
 8010ebc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010ec0:	6003      	str	r3, [r0, #0]
 8010ec2:	4770      	bx	lr

08010ec4 <i2c_stop_on_bus>:
 8010ec4:	6803      	ldr	r3, [r0, #0]
 8010ec6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8010eca:	6003      	str	r3, [r0, #0]
 8010ecc:	4770      	bx	lr

08010ece <i2c_data_transmit>:
 8010ece:	6101      	str	r1, [r0, #16]
 8010ed0:	4770      	bx	lr

08010ed2 <i2c_data_receive>:
 8010ed2:	6900      	ldr	r0, [r0, #16]
 8010ed4:	b2c0      	uxtb	r0, r0
 8010ed6:	4770      	bx	lr

08010ed8 <i2c_flag_get>:
 8010ed8:	098b      	lsrs	r3, r1, #6
 8010eda:	581a      	ldr	r2, [r3, r0]
 8010edc:	2301      	movs	r3, #1
 8010ede:	f001 011f 	and.w	r1, r1, #31
 8010ee2:	408b      	lsls	r3, r1
 8010ee4:	4213      	tst	r3, r2
 8010ee6:	bf14      	ite	ne
 8010ee8:	2001      	movne	r0, #1
 8010eea:	2000      	moveq	r0, #0
 8010eec:	4770      	bx	lr

08010eee <i2c_flag_clear>:
 8010eee:	f240 5301 	movw	r3, #1281	; 0x501
 8010ef2:	4299      	cmp	r1, r3
 8010ef4:	b510      	push	{r4, lr}
 8010ef6:	d102      	bne.n	8010efe <i2c_flag_clear+0x10>
 8010ef8:	6943      	ldr	r3, [r0, #20]
 8010efa:	6983      	ldr	r3, [r0, #24]
 8010efc:	bd10      	pop	{r4, pc}
 8010efe:	2201      	movs	r2, #1
 8010f00:	098c      	lsrs	r4, r1, #6
 8010f02:	5823      	ldr	r3, [r4, r0]
 8010f04:	f001 011f 	and.w	r1, r1, #31
 8010f08:	408a      	lsls	r2, r1
 8010f0a:	ea23 0302 	bic.w	r3, r3, r2
 8010f0e:	5023      	str	r3, [r4, r0]
 8010f10:	e7f4      	b.n	8010efc <i2c_flag_clear+0xe>
	...

08010f14 <__popcountsi2>:
 8010f14:	0843      	lsrs	r3, r0, #1
 8010f16:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8010f1a:	1ac0      	subs	r0, r0, r3
 8010f1c:	0883      	lsrs	r3, r0, #2
 8010f1e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8010f22:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8010f26:	4418      	add	r0, r3
 8010f28:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8010f2c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8010f30:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8010f34:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8010f38:	0e00      	lsrs	r0, r0, #24
 8010f3a:	4770      	bx	lr

Disassembly of section .rodata:

08010f3c <vtable for DisplayHandler-0xe0>:
	...
 8010f44:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f48:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8010f4c:	00000000 	andeq	r0, r0, r0
 8010f50:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f54:	353a3731 	ldrcc	r3, [sl, #-1841]!	; 0xfffff8cf
 8010f58:	37313a32 			; <UNDEFINED> instruction: 0x37313a32
 8010f5c:	72614d00 	rsbvc	r4, r1, #0, 26
 8010f60:	20393120 	eorscs	r3, r9, r0, lsr #2
 8010f64:	32323032 	eorscc	r3, r2, #50	; 0x32
 8010f68:	43534f00 	cmpmi	r3, #0, 30
 8010f6c:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010f70:	20726576 	rsbscs	r6, r2, r6, ror r5
 8010f74:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8010f78:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8010f7c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8010f80:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8010db8 <i2c_clock_config>
 8010f84:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8010f88:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8010f8c:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8010f90:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8010f94:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8010f98:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8010f9c:	63736f5f 	cmnvs	r3, #380	; 0x17c
 8010fa0:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8010fa4:	65733d65 	ldrbvs	r3, [r3, #-3429]!	; 0xfffff29b
 8010fa8:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010fac:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8010fb0:	00707474 	rsbseq	r7, r0, r4, ror r4
 8010fb4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8010fb8:	43534f3d 	cmpmi	r3, #61, 30	; 0xf4
 8010fbc:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010fc0:	00726576 	rsbseq	r6, r2, r6, ror r5
 8010fc4:	2043534f 	subcs	r5, r3, pc, asr #6
 8010fc8:	20584d44 	subscs	r4, r8, r4, asr #26
 8010fcc:	44470031 	strbmi	r0, [r7], #-49	; 0xffffffcf
 8010fd0:	31463233 	cmpcc	r6, r3, lsr r2
 8010fd4:	00523730 	subseq	r3, r2, r0, lsr r7
 8010fd8:	203a5049 	eorscs	r5, sl, r9, asr #32
 8010fdc:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8010fe0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8010fe4:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8010fe8:	49006325 	stmdbmi	r0, {r0, r2, r5, r8, r9, sp, lr}
 8010fec:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
 8010ff0:	754f0064 	strbvc	r0, [pc, #-100]	; 8010f94 <_etext+0x58>
 8010ff4:	25203a74 	strcs	r3, [r0, #-2676]!	; 0xfffff58c
 8010ff8:	6d640064 	stclvs	0, cr0, [r4, #-400]!	; 0xfffffe70
 8010ffc:	62002178 	andvs	r2, r0, #120, 2
 8011000:	6b616572 	blvs	986a5d0 <__exidx_end+0x1857b20>
 8011004:	616d0023 	cmnvs	sp, r3, lsr #32
 8011008:	72002362 	andvc	r2, r0, #-2013265919	; 0x88000001
 801100c:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
 8011010:	00236873 	eoreq	r6, r3, r3, ror r8
 8011014:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801101c <vtable for DisplayHandler>
 8011018:	00002373 	andeq	r2, r0, r3, ror r3

0801101c <vtable for DisplayHandler>:
	...
 8011024:	08007e1b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, fp, ip, sp, lr}
 8011028:	08007e3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}
 801102c:	08007e85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, lr}

08011030 <CSWTCH.85>:
 8011030:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011034:	 	eorcc	r3, lr, #-2147483631	; 0x80000011

08011035 <SOFTWARE_VERSION>:
 8011035:	00322e31 	eorseq	r2, r2, r1, lsr lr
 8011039:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 801103d:	642f0031 	strtvs	r0, [pc], #-49	; 8011045 <SOFTWARE_VERSION+0x10>
 8011041:	2f31786d 	svccs	0x0031786d
 8011045:	322f002a 	eorcc	r0, pc, #42	; 0x2a
 8011049:	6d642f00 	stclvs	15, cr2, [r4, #-0]
 801104d:	622f3178 	eorvs	r3, pc, #120, 2
 8011051:	6b63616c 	blvs	98e9609 <__exidx_end+0x18d6b59>
 8011055:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8011059:	00302e31 	eorseq	r2, r0, r1, lsr lr
 801105d:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
 8011061:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 8011065:	33444700 	movtcc	r4, #18176	; 0x4700
 8011069:	2f004632 	svccs	0x00004632
 801106d:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8011071:	6f702f00 	svcvs	0x00702f00
 8011075:	2f00676e 	svccs	0x0000676e
 8011079:	6f666e69 	svcvs	0x00666e69
 801107d:	00736f2f 	rsbseq	r6, r3, pc, lsr #30
 8011081:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8011085:	6f6d2f6f 	svcvs	0x006d2f6f
 8011089:	006c6564 	rsbeq	r6, ip, r4, ror #10
 801108d:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8011091:	6f732f6f 	svcvs	0x00732f6f
 8011095:	65590063 	ldrbvs	r0, [r9, #-99]	; 0xffffff9d
 8011099:	6f4e0073 	svcvs	0x004e0073
 801109d:	43534f00 	cmpmi	r3, #0, 30
 80110a1:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80110a5:	0a726576 	beq	9caa685 <__exidx_end+0x1c97bd5>
 80110a9:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 80110ad:	696d6f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80110b1:	5020676e 	eorpl	r6, r0, lr, ror #14
 80110b5:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80110b9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110bd:	3a202020 	bcc	8819145 <__exidx_end+0x806695>
 80110c1:	0a642520 	beq	991a549 <__exidx_end+0x1907a99>
 80110c5:	754f2000 	strbvc	r2, [pc, #-0]	; 80110cd <SOFTWARE_VERSION+0x98>
 80110c9:	696f6774 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
 80110cd:	5020676e 	eorpl	r6, r0, lr, ror #14
 80110d1:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80110d5:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110d9:	3a202020 	bcc	8819161 <__exidx_end+0x8066b1>
 80110dd:	0a642520 	beq	991a565 <__exidx_end+0x1907ab5>
 80110e1:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80110e5:	61502058 	cmpvs	r0, r8, asr r0
 80110e9:	20206874 	eorcs	r6, r0, r4, ror r8
 80110ed:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110f1:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110f5:	3a202020 	bcc	881917d <__exidx_end+0x8066cd>
 80110f9:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80110fd:	73255b5d 			; <UNDEFINED> instruction: 0x73255b5d
 8011101:	20000a5d 	andcs	r0, r0, sp, asr sl
 8011105:	616c4220 	cmnvs	ip, r0, lsr #4
 8011109:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 80105ae <adc_inserted_channel_config+0x38>
 801110d:	61502074 	cmpvs	r0, r4, ror r0
 8011111:	20206874 	eorcs	r6, r0, r4, ror r8
 8011115:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011119:	5b203a20 	blpl	881f9a1 <__exidx_end+0x80cef1>
 801111d:	0a5d7325 	beq	976ddb9 <__exidx_end+0x175b309>
 8011121:	61502000 	cmpvs	r0, r0
 8011125:	61697472 	smcvs	38722	; 0x9742
 8011129:	7254206c 	subsvc	r2, r4, #108	; 0x6c
 801112d:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8011131:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8011135:	3a206e6f 	bcc	882caf9 <__exidx_end+0x81a049>
 8011139:	0a732520 	beq	9cda5c1 <__exidx_end+0x1cc7b11>
	...

0801113e <OscServerMsgConst::START>:
 801113e:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8011142:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011146:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 801114a:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 801114e:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8011152:	00726576 	rsbseq	r6, r2, r6, ror r5

08011156 <OscServerMsgConst::PARAMS>:
 8011156:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801115a:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801115e:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8011162:	2043534f 	subcs	r5, r3, pc, asr #6
 8011166:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801116a:	 	svcmi	0x00007265

0801116d <OscServerMsgConst::STARTED>:
 801116d:	2043534f 	subcs	r5, r3, pc, asr #6
 8011171:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011175:	73207265 			; <UNDEFINED> instruction: 0x73207265
 8011179:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801117d:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8011181:	3a227325 	bcc	88ade1d <__exidx_end+0x89b36d>
 8011185:	002c6425 	eoreq	r6, ip, r5, lsr #8
 8011189:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801118d:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011191:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8011195:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 8011199:	23002c22 	movwcs	r2, #3106	; 0xc22
 801119d:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80111a1:	 	andvc	r0, r0, r3, ror sl

080111a4 <OscServerParamsConst::TRANSMISSION>:
 80111a4:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 80111a8:	5f6c6169 	svcpl	0x006c6169
 80111ac:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 80111b0:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80111b4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

080111b9 <OscServerParamsConst::PATH_BLACKOUT>:
 80111b9:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80111bd:	616c625f 	cmnvs	ip, pc, asr r2
 80111c1:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8010666 <enet_software_reset+0xa>
 80111c5:	 	cmnvs	r0, r4, ror r0

080111c7 <OscServerParamsConst::PATH>:
 80111c7:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

080111cc <OscServerParamsConst::FILE_NAME>:
 80111cc:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 80111d0:	00747874 	rsbseq	r7, r4, r4, ror r8

080111d4 <OscServerParamsConst::PATH_INFO>:
 80111d4:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80111d8:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 80111dc:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

080111de <OscParamsConst::INCOMING_PORT>:
 80111de:	6f636e69 	svcvs	0x00636e69
 80111e2:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 80111e6:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80111ea:	 	strbvc	r0, [pc, #-116]!	; 801117e <OscServerMsgConst::STARTED+0x11>

080111ec <OscParamsConst::OUTGOING_PORT>:
 80111ec:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 80111f0:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 80111f4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80111f8:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 80111fc:	65532058 	ldrbvs	r2, [r3, #-88]	; 0xffffffa8
 8011200:	000a646e 	andeq	r6, sl, lr, ror #8
 8011204:	65724220 	ldrbvs	r4, [r2, #-544]!	; 0xfffffde0
 8011208:	74206b61 	strtvc	r6, [r0], #-2913	; 0xfffff49f
 801120c:	20656d69 	rsbcs	r6, r5, r9, ror #26
 8011210:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011214:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011218:	42414d20 	submi	r4, r1, #32, 26	; 0x800
 801121c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8011220:	20202065 	eorcs	r2, r0, r5, rrx
 8011224:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011228:	000a6425 	andeq	r6, sl, r5, lsr #8
 801122c:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 8011230:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8011234:	74617220 	strbtvc	r7, [r1], #-544	; 0xfffffde0
 8011238:	203a2065 	eorscs	r2, sl, r5, rrx
 801123c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011240:	6f6c5320 	svcvs	0x006c5320
 8011244:	20207374 	eorcs	r7, r0, r4, ror r3
 8011248:	20202020 	eorcs	r2, r0, r0, lsr #32
 801124c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011250:	000a6425 	andeq	r6, sl, r5, lsr #8

08011254 <vtable for DmxSend>:
	...
 801125c:	0800988b 	stmdaeq	r0, {r0, r1, r3, r7, fp, ip, pc}
 8011260:	08009959 	stmdaeq	r0, {r0, r3, r4, r6, r8, fp, ip, pc}
 8011264:	0800988d 	stmdaeq	r0, {r0, r2, r3, r7, fp, ip, pc}
 8011268:	080098bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, ip, pc}
 801126c:	080098f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, ip, pc}
 8011270:	08009889 	stmdaeq	r0, {r0, r3, r7, fp, ip, pc}
 8011274:	08009901 	stmdaeq	r0, {r0, r8, fp, ip, pc}
 8011278:	0800e591 	stmdaeq	r0, {r0, r4, r7, r8, sl, sp, lr, pc}
 801127c:	0800e587 	stmdaeq	r0, {r0, r1, r2, r7, r8, sl, sp, lr, pc}
 8011280:	0800e58b 	stmdaeq	r0, {r0, r1, r3, r7, r8, sl, sp, lr, pc}
 8011284:	0800e595 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, sp, lr, pc}

08011288 <DmxParamsConst::BREAK_TIME>:
 8011288:	61657262 	cmnvs	r5, r2, ror #4
 801128c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011290:	 	movwvc	r6, #1389	; 0x56d

08011293 <DmxParamsConst::SLOTS_COUNT>:
 8011293:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801129b <DmxParamsConst::SLOTS_COUNT+0x8>
 8011297:	6f635f73 	svcvs	0x00635f73
 801129b:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801129f <DmxParamsConst::REFRESH_RATE>:
 801129f:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80112a3:	5f687365 	svcpl	0x00687365
 80112a7:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080112ac <DmxParamsConst::MAB_TIME>:
 80112ac:	5f62616d 	svcpl	0x0062616d
 80112b0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080112b5 <DmxParamsConst::FILE_NAME>:
 80112b5:	61726170 	cmnvs	r2, r0, ror r1
 80112b9:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80112bd:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 80112c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80112c5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80112c9:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 80112cd:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 80112d1:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 80112d5:	000a7325 	andeq	r7, sl, r5, lsr #6
 80112d9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80112dd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80112e1:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80112e5:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80112e9:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80112ed:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 80112f1:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 80112f5:	73696400 	cmnvc	r9, #0, 8
 80112f9:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80112fd:	0a73253a 	beq	9cda7ed <__exidx_end+0x1cc7d3d>
 8011301:	74667400 	strbtvc	r7, [r6], #-1024	; 0xfffffc00
 8011305:	73253a70 			; <UNDEFINED> instruction: 0x73253a70
 8011309:	6576000a 	ldrbvs	r0, [r6, #-10]!
 801130d:	6f697372 	svcvs	0x00697372
 8011311:	73253a6e 			; <UNDEFINED> instruction: 0x73253a6e
 8011315:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8011319:	3a656d69 	bcc	996c8c5 <__exidx_end+0x1959e15>
 801131d:	73752520 	cmnvc	r5, #32, 10	; 0x8000000
 8011321:	5245000a 	subpl	r0, r5, #10
 8011325:	23524f52 	cmpcs	r2, #328	; 0x148
 8011329:	7465673f 	strbtvc	r6, [r5], #-1855	; 0xfffff8c1
 801132d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8011331:	00237074 	eoreq	r7, r3, r4, ror r0
 8011335:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011339:	2379616c 	cmncs	r9, #108, 2
 801133d:	52524500 	subspl	r4, r2, #0, 10
 8011341:	2123524f 			; <UNDEFINED> instruction: 0x2123524f
 8011345:	5245000a 	subpl	r0, r5, #10
 8011349:	23524f52 	cmpcs	r2, #328	; 0x148
 801134d:	72000a3f 	andvc	r0, r0, #258048	; 0x3f000
 8011351:	6f6f6265 	svcvs	0x006f6265
 8011355:	00232374 	eoreq	r2, r3, r4, ror r3
 8011359:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801135d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8011361:	2a237473 	bcs	88ee535 <__exidx_end+0x8dba85>
 8011365:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8011369:	23656d69 	cmncs	r5, #6720	; 0x1a40
 801136d:	72657600 	rsbvc	r7, r5, #0, 12
 8011371:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011375:	65670023 	strbvs	r0, [r7, #-35]!	; 0xffffffdd
 8011379:	66002374 			; <UNDEFINED> instruction: 0x66002374
 801137d:	6f746361 	svcvs	0x00746361
 8011381:	23237972 			; <UNDEFINED> instruction: 0x23237972
	...

08011386 <s_Node>:
 8011386:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801138a:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8011396:	41730000 	cmnmi	r3, r0
 801139a:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801139e:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80113aa:	2043534f 	subcs	r5, r3, pc, asr #6
 80113ae:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80113b2:	00007265 	andeq	r7, r0, r5, ror #4
 80113b6:	00000000 	andeq	r0, r0, r0
 80113ba:	544c0000 	strbpl	r0, [ip], #-0
 80113be:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80113ce:	2043534f 	subcs	r5, r3, pc, asr #6
 80113d2:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80113d6:	0000746e 	andeq	r7, r0, lr, ror #8
 80113da:	00000000 	andeq	r0, r0, r0
 80113de:	44520000 	ldrbmi	r0, [r2], #-0
 80113e2:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80113e6:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80113ea:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80113ee:	0000796c 	andeq	r7, r0, ip, ror #18
 80113f2:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80113f6:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8011402:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8011406:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8011416:	00504444 	subseq	r4, r0, r4, asr #8
	...

08011428 <s_Output>:
 8011428:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8011434:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8011440:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8011444:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8011448:	00000000 	andeq	r0, r0, r0
 801144c:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8011450:	0000006c 	andeq	r0, r0, ip, rrx
 8011454:	00000000 	andeq	r0, r0, r0
 8011458:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801145c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8011460:	00000000 	andeq	r0, r0, r0
 8011464:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8011470:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011474:	00006769 	andeq	r6, r0, r9, ror #14
 8011478:	00000000 	andeq	r0, r0, r0
 801147c:	70657453 	rsbvc	r7, r5, r3, asr r4
 8011480:	00726570 	rsbseq	r6, r2, r0, ror r5
 8011484:	00000000 	andeq	r0, r0, r0
 8011488:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801148c:	00007265 	andeq	r7, r0, r5, ror #4
 8011490:	00000000 	andeq	r0, r0, r0
 8011494:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8011498:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801149c:	00000000 	andeq	r0, r0, r0
 80114a0:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80114a4:	00006c61 	andeq	r6, r0, r1, ror #24
 80114a8:	00000000 	andeq	r0, r0, r0
 80114ac:	20424752 	subcs	r4, r2, r2, asr r7
 80114b0:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80114b4:	0000006c 	andeq	r0, r0, ip, rrx

080114b8 <RemoteConfig::s_GET>:
 80114b8:	0800b061 	stmdaeq	r0, {r0, r5, r6, ip, sp, pc}
 80114bc:	00000000 	andeq	r0, r0, r0
 80114c0:	08011350 	stmdaeq	r1, {r4, r6, r8, r9, ip}
 80114c4:	00000008 	andeq	r0, r0, r8
 80114c8:	0800a511 	stmdaeq	r0, {r0, r4, r8, sl, sp, pc}
 80114cc:	00000000 	andeq	r0, r0, r0
 80114d0:	08011359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, ip}
 80114d4:	00000005 	andeq	r0, r0, r5
 80114d8:	0800a511 	stmdaeq	r0, {r0, r4, r8, sl, sp, pc}
 80114dc:	00000000 	andeq	r0, r0, r0
 80114e0:	0801135f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, ip}
 80114e4:	00000006 	andeq	r0, r0, r6
 80114e8:	0800a705 	stmdaeq	r0, {r0, r2, r8, r9, sl, sp, pc}
 80114ec:	00000000 	andeq	r0, r0, r0
 80114f0:	08011366 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, ip}
 80114f4:	00000007 	andeq	r0, r0, r7
 80114f8:	0800a6c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, sp, pc}
 80114fc:	00000000 	andeq	r0, r0, r0
 8011500:	0801136e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, ip}
 8011504:	00000008 	andeq	r0, r0, r8
 8011508:	0800a5e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, sp, pc}
 801150c:	00000000 	andeq	r0, r0, r0
 8011510:	08011335 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, ip}
 8011514:	00000008 	andeq	r0, r0, r8
 8011518:	0800a989 	stmdaeq	r0, {r0, r3, r7, r8, fp, sp, pc}
 801151c:	00000000 	andeq	r0, r0, r0
 8011520:	08011377 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, ip}
 8011524:	00010004 	andeq	r0, r1, r4
 8011528:	0800a669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, sp, pc}
 801152c:	00000000 	andeq	r0, r0, r0
 8011530:	0801132f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, ip}
 8011534:	00000005 	andeq	r0, r0, r5
 8011538:	0800acd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, sp, pc}
 801153c:	00000000 	andeq	r0, r0, r0
 8011540:	0801137c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, ip}
 8011544:	00000009 	andeq	r0, r0, r9

08011548 <RemoteConfig::s_SET>:
 8011548:	0800a645 	stmdaeq	r0, {r0, r2, r6, r9, sl, sp, pc}
 801154c:	00000000 	andeq	r0, r0, r0
 8011550:	0801132f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, ip}
 8011554:	00010005 	andeq	r0, r1, r5
 8011558:	0800a759 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, sp, pc}
 801155c:	00000000 	andeq	r0, r0, r0
 8011560:	08011335 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, ip}
 8011564:	00010008 	andeq	r0, r1, r8
 8011568:	6f626552 	svcvs	0x00626552
 801156c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8011570:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8011574:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8011578:	6f6f6265 	svcvs	0x006f6265
 801157c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011580:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8011584:	6f637200 	svcvs	0x00637200
 8011588:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801158c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011590:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8011594:	6b726f77 	blvs	9cad378 <__exidx_end+0x1c9a8c8>
 8011598:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801159c:	63736f00 	cmnvs	r3, #0, 30
 80115a0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80115a4:	72617000 	rsbvc	r7, r1, #0
 80115a8:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80115ac:	00747874 	rsbseq	r7, r4, r4, ror r8

080115b0 <RemoteConfig::s_TXT>:
 80115b0:	0800a991 	stmdaeq	r0, {r0, r4, r7, r8, fp, sp, pc}
 80115b4:	00000000 	andeq	r0, r0, r0
 80115b8:	0800ac21 	stmdaeq	r0, {r0, r5, sl, fp, sp, pc}
 80115bc:	00000000 	andeq	r0, r0, r0
 80115c0:	08011585 	stmdaeq	r1, {r0, r2, r7, r8, sl, ip}
 80115c4:	0000000b 	andeq	r0, r0, fp
 80115c8:	0000000c 	andeq	r0, r0, ip
 80115cc:	0800a9bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, fp, sp, pc}
 80115d0:	00000000 	andeq	r0, r0, r0
 80115d4:	0800ac55 	stmdaeq	r0, {r0, r2, r4, r6, sl, fp, sp, pc}
 80115d8:	00000000 	andeq	r0, r0, r0
 80115dc:	08011591 	stmdaeq	r1, {r0, r4, r7, r8, sl, ip}
 80115e0:	0000000b 	andeq	r0, r0, fp
 80115e4:	00000000 	andeq	r0, r0, r0
 80115e8:	0800a9e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, sp, pc}
 80115ec:	00000000 	andeq	r0, r0, r0
 80115f0:	0800ac7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, fp, sp, pc}
 80115f4:	00000000 	andeq	r0, r0, r0
 80115f8:	0801159d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, ip}
 80115fc:	00000007 	andeq	r0, r0, r7
 8011600:	00000008 	andeq	r0, r0, r8
 8011604:	0800aa15 	stmdaeq	r0, {r0, r2, r4, r9, fp, sp, pc}
 8011608:	00000000 	andeq	r0, r0, r0
 801160c:	0800aca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, sp, pc}
 8011610:	00000000 	andeq	r0, r0, r0
 8011614:	080115a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, ip}
 8011618:	0000000a 	andeq	r0, r0, sl
 801161c:	00000002 	andeq	r0, r0, r2
 8011620:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8011624:	4f500054 	svcmi	0x00500054
 8011628:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 801162c:	00505454 	subseq	r5, r0, r4, asr r4
 8011630:	31000a20 	tstcc	r0, r0, lsr #20
 8011634:	3a00312e 	bcc	801daf4 <__exidx_end+0xb044>
 8011638:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 801163c:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8011640:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8011644:	3b200065 	blcc	88117e0 <__exidx_end+0x7fed30>
 8011648:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 801164c:	6163696c 	cmnvs	r3, ip, ror #18
 8011650:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011654:	6f736a2f 	svcvs	0x00736a2f
 8011658:	6f43006e 	svcvs	0x0043006e
 801165c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011660:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8011664:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8011668:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801166c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8011670:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011674:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8011678:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801167c:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8011680:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8011684:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8011688:	2f00736a 	svccs	0x0000736a
 801168c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011690:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8011694:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8011698:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801169c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 80116a0:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80116a4:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 80116a8:	616c7073 	smcvs	50947	; 0xc703
 80116ac:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80116b0:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80116b4:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80116b8:	6f736a2f 	svcvs	0x00736a2f
 80116bc:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80116c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80116c4:	62657200 	rsbvs	r7, r5, #0, 4
 80116c8:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80116cc:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80116d0:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80116d4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80116d8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80116dc:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80116e0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80116e4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80116e8:	0a3e6c6d 	beq	8fac8a4 <__exidx_end+0xf99df4>
 80116ec:	6165683c 	cmnvs	r5, ip, lsr r8
 80116f0:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80116f4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80116f8:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 80116fc:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8011700:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8011704:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011708:	6165682f 	cmnvs	r5, pc, lsr #16
 801170c:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8011710:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011714:	31683c3e 	cmncc	r8, lr, lsr ip
 8011718:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 801171c:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8011720:	6f622f3c 	svcvs	0x00622f3c
 8011724:	0a3e7964 	beq	8fafcbc <__exidx_end+0xf9d20c>
 8011728:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 801172c:	0a3e6c6d 	beq	8fac8e8 <__exidx_end+0xf99e38>
 8011730:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 8011734:	71655220 	cmnvc	r5, r0, lsr #4
 8011738:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 801173c:	746f4e00 	strbtvc	r4, [pc], #-3584	; 8011744 <RemoteConfig::s_TXT+0x194>
 8011740:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8011128 <SOFTWARE_VERSION+0xf3>
 8011744:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 8011748:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801174c:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8011750:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8011754:	6f542079 	svcvs	0x00542079
 8011758:	614c206f 	cmpvs	ip, pc, rrx
 801175c:	00656772 	rsbeq	r6, r5, r2, ror r7
 8011760:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8011764:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8011768:	20495255 	subcs	r5, r9, r5, asr r2
 801176c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8011770:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8011774:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8011778:	616e7265 	cmnvs	lr, r5, ror #4
 801177c:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8011780:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8011784:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8011788:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 801178c:	6f687465 	svcvs	0x00687465
 8011790:	6f4e2064 	svcvs	0x004e2064
 8011794:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8011798:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 801179c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80117a0:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 80117a4:	6f697372 	svcvs	0x00697372
 80117a8:	6f4e206e 	svcvs	0x004e206e
 80117ac:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 80117b0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 80117b4:	00646574 	rsbeq	r6, r4, r4, ror r5
 80117b8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80117bc:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80117c0:	6f727245 	svcvs	0x00727245
 80117c4:	4b4f0072 	blmi	93d1994 <__exidx_end+0x13beee4>
 80117c8:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80117cc:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80117d0:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80117d4:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80117d8:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80117dc:	0a3e6c6d 	beq	8fac998 <__exidx_end+0xf99ee8>
 80117e0:	6165683c 	cmnvs	r5, ip, lsr r8
 80117e4:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80117e8:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80117ec:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 80117f0:	2f3c7325 	svccs	0x003c7325
 80117f4:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80117f8:	2f3c3e65 	svccs	0x003c3e65
 80117fc:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011800:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8011804:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011808:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801180c:	2f3c7325 	svccs	0x003c7325
 8011810:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8011814:	646f622f 	strbtvs	r6, [pc], #-559	; 801181c <RemoteConfig::s_TXT+0x26c>
 8011818:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 801181c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8011820:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8011824:	50545448 	subspl	r5, r4, r8, asr #8
 8011828:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 801182c:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8011830:	0a0d7325 	beq	836e4cc <__exidx_end+0x35ba1c>
 8011834:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011838:	203a7265 	eorscs	r7, sl, r5, ror #4
 801183c:	0a0d7325 	beq	836e4d8 <__exidx_end+0x35ba28>
 8011840:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8011844:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8011848:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801184c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8011850:	6f430a0d 	svcvs	0x00430a0d
 8011854:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011858:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 801185c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8011860:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8011864:	6f430a0d 	svcvs	0x00430a0d
 8011868:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801186c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011870:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8011874:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8011878:	000a0d0a 	andeq	r0, sl, sl, lsl #26

0801187c <contentType>:
 801187c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8011880:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8011884:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801189c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80118a0:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80118bc:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80118c0:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80118c4:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80118c8:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80118dc:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80118e0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80118e4:	2f6e6f69 	svccs	0x006e6f69
 80118e8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080118fc <RemoteConfigConst::PARAMS_DISABLE>:
 80118fc:	61736964 	cmnvs	r3, r4, ror #18
 8011900:	00656c62 	rsbeq	r6, r5, r2, ror #24

08011904 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8011904:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011908:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801190c:	00747874 	rsbseq	r7, r4, r4, ror r8

08011910 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8011910:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011914:	5f79616c 	svcpl	0x0079616c
 8011918:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801191d <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801191d:	61736964 	cmnvs	r3, r4, ror #18
 8011921:	5f656c62 	svcpl	0x00656c62
 8011925:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8011929:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801192b <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801192b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801192f:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8011933:	6f6f6265 	svcvs	0x006f6265
 8011937:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08011939 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8011939:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801193d:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80113d9 <s_Node+0x53>
 8011941:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8011945:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08011947 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8011947:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801194b:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801194f:	6f746361 	svcvs	0x00746361
 8011953:	7b007972 	blvc	802ff23 <__exidx_end+0x1d473>
 8011957:	73696c22 	cmnvc	r9, #8704	; 0x2200
 801195b:	7b3a2274 	blvc	8e9a333 <__exidx_end+0xe87883>
 801195f:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8011963:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8011967:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801196b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801196f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8011973:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011977:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801197b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801197f:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8011983:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8011987:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801198b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801198f:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8011993:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8011997:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801199b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801199f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80119a3:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80119a7:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80119ab:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80119af:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80119b3:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80119b7:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80119bb:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80119bf:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80119c3:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80119c7:	616f6222 	cmnvs	pc, r2, lsr #4
 80119cb:	3a226472 	bcc	88aab9b <__exidx_end+0x8980eb>
 80119cf:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80119d3:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80119d7:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80119db:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80119df:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80119e3:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80119e7:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80119eb:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80119ef:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80119f3:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80119f7:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80119fb:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80119ff:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011a03:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8011a07:	7b000a7d 	blvc	8014403 <__exidx_end+0x1953>
 8011a0b:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8011a0f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011a13:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8011a17:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8011a1b:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011a1f:	7b3a2273 	blvc	8e9a3f3 <__exidx_end+0xe87943>
 8011a23:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8011a27:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011a2b:	4f223a22 	svcmi	0x00223a22
 8011a2f:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8011a33:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8011a37:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8011a3b:	61726170 	cmnvs	r2, r0, ror r1
 8011a3f:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8011a43:	3a227478 	bcc	88aec2b <__exidx_end+0x89c17b>
 8011a47:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 8011a4b:	61725420 	cmnvs	r2, r0, lsr #8
 8011a4f:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8011a53:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 8011a57:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011a5b:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8011a5f:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011a63:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
 8011a67:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8011a6b:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
 8011a6f:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011a73:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8011a77:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011a7b:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
 8011a7f:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
 8011a83:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8011a87:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8011a8b:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8011a8f:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
 8011a93:	7273007d 	rsbsvc	r0, r3, #125	; 0x7d
 8011a97:	74682f63 	strbtvc	r2, [r8], #-3939	; 0xfffff09d
 8011a9b:	2f647074 	svccs	0x00647074
 8011a9f:	5f746567 	svcpl	0x00746567
 8011aa3:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011aa7:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8011aab:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8011aaf:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8011ab3:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 8011ab7:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8011abb:	6f635f65 	svcvs	0x00635f65
 8011abf:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011ac3:	73250074 			; <UNDEFINED> instruction: 0x73250074
 8011ac7:	25202928 	strcs	r2, [r0, #-2344]!	; 0xfffff6d8
 8011acb:	6c202c73 	stcvs	12, cr2, [r0], #-460	; 0xfffffe34
 8011acf:	20656e69 	rsbcs	r6, r5, r9, ror #28
 8011ad3:	203a6925 	eorscs	r6, sl, r5, lsr #18
 8011ad7:	2d207325 	stccs	3, cr7, [r0, #-148]!	; 0xffffff6c
 8011adb:	6425203e 	strtvs	r2, [r5], #-62	; 0xffffffc2
 8011adf:	2d3c000a 	ldccs	0, cr0, [ip, #-40]!	; 0xffffffd8
 8011ae3:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 8011ae7:	3a73253a 	bcc	9cdafd7 <__exidx_end+0x1cc8527>
 8011aeb:	000a6425 	andeq	r6, sl, r5, lsr #8

08011aef <index_html>:
 8011aef:	4f44213c 	svcmi	0x0044213c
 8011af3:	50595443 	subspl	r5, r9, r3, asr #8
 8011af7:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8011afb:	0a3e6c6d 	beq	8faccb7 <__exidx_end+0xf9a207>
 8011aff:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8011b03:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011b07:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011b0b:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8011b0f:	6b6e696c 	blvs	9bac0c7 <__exidx_end+0x1b99617>
 8011b13:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8011b17:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8011b1b:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8011b1f:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8011b23:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8011b27:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8011b2b:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8011b2f:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8011b33:	20227373 	eorcs	r7, r2, r3, ror r3
 8011b37:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8011b3b:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8011b3f:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011b43:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8011b47:	0a3e656c 	beq	8fab0ff <__exidx_end+0xf9864f>
 8011b4b:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8011b4f:	0a3e6461 	beq	8faacdb <__exidx_end+0xf9822b>
 8011b53:	646f623c 	strbtvs	r6, [pc], #-572	; 8011b5b <index_html+0x6c>
 8011b57:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8011b5b:	6165683c 	cmnvs	r5, ip, lsr r8
 8011b5f:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8011b63:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8011b67:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8011b6b:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8011b6f:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8011b73:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011b77:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011b7b:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8011b7f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011b83:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8011b87:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8011b8b:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8011b8f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8011b93:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011b97:	6f746365 	svcvs	0x00746365
 8011b9b:	20227972 	eorcs	r7, r2, r2, ror r9
 8011b9f:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8011ba3:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8011ba7:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8011bab:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011baf:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8011bb3:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8011bb7:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8011bbb:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8011bbf:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8011bc3:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8011bc7:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8011bcb:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8011bcf:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8011bd3:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011bd7:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8011bdb:	20227478 	eorcs	r7, r2, r8, ror r4
 8011bdf:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011be3:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8011be7:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8011beb:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8011bef:	0a3e656c 	beq	8fab1a7 <__exidx_end+0xf986f7>
 8011bf3:	6f663c09 	svcvs	0x00663c09
 8011bf7:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8011bfb:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8011bff:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011c03:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8011c07:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011c0b:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8011c0f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011c13:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8011c17:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011c1b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011c1f:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8011c23:	20747069 	rsbscs	r7, r4, r9, rrx
 8011c27:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8011c2b:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8011c2f:	6a2e7865 	bvs	8bafdcb <__exidx_end+0xb9d31b>
 8011c33:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8011c37:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8011c3b:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8011c3f:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8011c43:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011c47:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011c4b:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8011c4f:	 	svcvs	0x0062000a

08011c51 <styles_css>:
 8011c51:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011c55:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011c59:	63616220 	cmnvs	r1, #32, 4
 8011c5d:	6f72676b 	svcvs	0x0072676b
 8011c61:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8011c65:	6f6c6f63 	svcvs	0x006c6f63
 8011c69:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011c6d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011c71:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8011c75:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8011c79:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011c7d:	6f6c6f63 	svcvs	0x006c6f63
 8011c81:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011c85:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011c89:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8011c8d:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8011c91:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8011c95:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011c99:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8011c9d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011ca1:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011ca5:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011ca9:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011cad:	0a3b7865 	beq	8eefe49 <__exidx_end+0xedd399>
 8011cb1:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8011cb5:	0a7b2069 	beq	9ed9e61 <__exidx_end+0x1ec73b1>
 8011cb9:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8011cbd:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8011cc1:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8011cc5:	6f6e203a 	svcvs	0x006e203a
 8011cc9:	0a3b656e 	beq	8eeb289 <__exidx_end+0xed87d9>
 8011ccd:	616d2020 	cmnvs	sp, r0, lsr #32
 8011cd1:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8011cd5:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8011cd9:	70352078 	eorsvc	r2, r5, r8, ror r0
 8011cdd:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8011ce1:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8011ce5:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8011ce9:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011ced:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011cf1:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011cf5:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011cf9:	0a3b7865 	beq	8eefe95 <__exidx_end+0xedd3e5>
 8011cfd:	6f622020 	svcvs	0x00622020
 8011d01:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011d05:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011d09:	3a737569 	bcc	9cef2b5 <__exidx_end+0x1cdc805>
 8011d0d:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011d11:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011d15:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011d19:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011d1d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d21:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011d25:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011d29:	0a3b7870 	beq	8eefef1 <__exidx_end+0xedd441>
 8011d2d:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8011d31:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011d35:	0a7b2072 	beq	9ed9f05 <__exidx_end+0x1ec7455>
 8011d39:	69642020 	stmdbvs	r4!, {r5, sp}^
 8011d3d:	616c7073 	smcvs	50947	; 0xc703
 8011d41:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8011d45:	3b78656c 	blcc	9e2b2fd <__exidx_end+0x1e1884d>
 8011d49:	6a20200a 	bvs	8819d79 <__exidx_end+0x8072c9>
 8011d4d:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8011d51:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8011d55:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011d59:	203a746e 	eorscs	r7, sl, lr, ror #8
 8011d5d:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8011d61:	0a3b7265 	beq	8eee6fd <__exidx_end+0xedbc4d>
 8011d65:	6f622020 	svcvs	0x00622020
 8011d69:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011d6d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011d71:	3a737569 	bcc	9cef31d <__exidx_end+0x1cdc86d>
 8011d75:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011d79:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011d7d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011d81:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011d85:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d89:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011d8d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011d91:	0a3b7870 	beq	8eeff59 <__exidx_end+0xedd4a9>
 8011d95:	 			; <UNDEFINED> instruction: 0x76000a7d

08011d98 <HttpContent>:
 8011d98:	08011676 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, ip}
 8011d9c:	08011c51 	stmdaeq	r1, {r0, r4, r6, sl, fp, ip}
 8011da0:	08011682 	stmdaeq	r1, {r1, r7, r9, sl, ip}
 8011da4:	08011db0 	stmdaeq	r1, {r4, r5, r7, r8, sl, fp, ip}
 8011da8:	0801166a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sl, ip}
 8011dac:	08011aef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, fp, ip}

08011db0 <index_js>:
 8011db0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011db4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011db8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011dbc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011dc0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011dc4:	6a284e4f 	bvs	8a25708 <__exidx_end+0xa12c58>
 8011dc8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011dcc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011dd0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011dd4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8011dd8:	6a2f273d 	bvs	8bdbad4 <__exidx_end+0xbc9024>
 8011ddc:	2f6e6f73 	svccs	0x006e6f73
 8011de0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8011de4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011de8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011dec:	20797274 	rsbscs	r7, r9, r4, ror r2
 8011df0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011df4:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8011df8:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8011dfc:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8011e00:	20746961 	rsbscs	r6, r4, r1, ror #18
 8011e04:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8011e08:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8011e0c:	0a3b296c 	beq	8edc3c4 <__exidx_end+0xec9914>
 8011e10:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011e14:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8011e18:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8011e1c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011e20:	73657220 	cmnvc	r5, #32, 4
 8011e24:	6f736a2e 	svcvs	0x00736a2e
 8011e28:	3b29286e 	blcc	8a5bfe8 <__exidx_end+0xa49538>
 8011e2c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011e30:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8011e34:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8011e38:	6f727265 	svcvs	0x00727265
 8011e3c:	7b202972 	blvc	881c40c <__exidx_end+0x80995c>
 8011e40:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011e44:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8011e48:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8011e4c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8011e50:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8011e54:	3b29726f 	blcc	8a6e818 <__exidx_end+0xa5bd68>
 8011e58:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011e5c:	0a0a7d0a 	beq	82b128c <__exidx_end+0x29e7dc>
 8011e60:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011e64:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011e68:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011e6c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8011e70:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011e74:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011e78:	20292874 	eorcs	r2, r9, r4, ror r8
 8011e7c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011e80:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011e84:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011e88:	6177613d 	cmnvs	r7, sp, lsr r1
 8011e8c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011e90:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011e94:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011e98:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011e9c:	0a3b2927 	beq	8edc340 <__exidx_end+0xec9890>
 8011ea0:	6f640909 	svcvs	0x00640909
 8011ea4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011ea8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011eac:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011eb0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011eb4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011eb8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011ebc:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8011ec0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011ec4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011ec8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011ecc:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8011ed0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011ed4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8011ed8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8011edc:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8011ee0:	2b656d61 	blcs	996d46c <__exidx_end+0x195a9bc>
 8011ee4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e64 <index_js+0xb4>
 8011ee8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011eec:	2b223e69 	blcs	88a1898 <__exidx_end+0x88ede8>
 8011ef0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011ef4:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011ef8:	6f6e2e74 	svcvs	0x006e2e74
 8011efc:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8011f00:	2b657079 	blcs	996e0ec <__exidx_end+0x195b63c>
 8011f04:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e84 <index_js+0xd4>
 8011f08:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011f0c:	2b223e69 	blcs	88a18b8 <__exidx_end+0x88ee08>
 8011f10:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011f14:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011f18:	6f6e2e74 	svcvs	0x006e2e74
 8011f1c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8011f20:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8011f24:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011f28:	2f3c222b 	svccs	0x003c222b
 8011f2c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011f30:	0a7d0a3b 	beq	9f54824 <__exidx_end+0x1f41d74>
 8011f34:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8011f38:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8011f3c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011f40:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011f44:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011f48:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011f4c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8011f50:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8011f54:	0a7b2029 	beq	9eda000 <__exidx_end+0x1ec7550>
 8011f58:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011f5c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8011f60:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011f64:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011f68:	6177613d 	cmnvs	r7, sp, lsr r1
 8011f6c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011f70:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011f74:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011f78:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011f7c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011f80:	3b292779 	blcc	8a5bd6c <__exidx_end+0xa492bc>
 8011f84:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011f88:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011f8c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011f90:	0a22223d 	beq	889a88c <__exidx_end+0x887ddc>
 8011f94:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011f98:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8011f9c:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8011fa0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8011fa4:	6a624f3d 	bvs	98a5ca0 <__exidx_end+0x18931f0>
 8011fa8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8011fac:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8011fb0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8011fb4:	6f746365 	svcvs	0x00746365
 8011fb8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8011fbc:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011fc0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8011fc4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011fc8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8011fcc:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8011fd0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8011fd4:	6145726f 	cmpvs	r5, pc, ror #4
 8011fd8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8011fdc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011fe0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011fe4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8011fe8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011fec:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011ff0:	20726176 	rsbscs	r6, r2, r6, ror r1
 8011ff4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8011ff8:	203d2065 	eorscs	r2, sp, r5, rrx
 8011ffc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012000:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012004:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012008:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801200c:	6b5b5d22 	blvs	96e949c <__exidx_end+0x16d69ec>
 8012010:	3b5d7965 	blcc	97705ac <__exidx_end+0x175dafc>
 8012014:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012018:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801201c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012020:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012024:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012028:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801202c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012030:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012034:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012038:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801203c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012040:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012044:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012048:	0a3b223e 	beq	8eda948 <__exidx_end+0xec7e98>
 801204c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012050:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012054:	6f640909 	svcvs	0x00640909
 8012058:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801205c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012060:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012064:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012068:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801206c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012070:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012074:	6f746365 	svcvs	0x00746365
 8012078:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801207c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012080:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012084:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012088:	3b6c6d74 	blcc	9b2d660 <__exidx_end+0x1b1abb0>
 801208c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012090:	5f746567 	svcpl	0x00746567
 8012094:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8012098:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801209c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80120a0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80120a4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80120a8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80120ac:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80120b0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80120b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80120b8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80120bc:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80120c0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80120c4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80120c8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80120cc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80120d0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80120d4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80120d8:	6177613d 	cmnvs	r7, sp, lsr r1
 80120dc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80120e0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80120e4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80120e8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80120ec:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80120f0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80120f4:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80120f8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80120fc:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012100:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012104:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012108:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801210c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012110:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012114:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012118:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801211c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012120:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012124:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012128:	2b22563e 	blcs	88a7a28 <__exidx_end+0x894f78>
 801212c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012130:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012134:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012138:	2b6e6f69 	blcs	9badee4 <__exidx_end+0x1b9b434>
 801213c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80120bc <index_js+0x30c>
 8012140:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012144:	2b223e69 	blcs	88a1af0 <__exidx_end+0x88f040>
 8012148:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801214c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012150:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012154:	61642e64 	cmnvs	r4, r4, ror #28
 8012158:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801215c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012160:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012164:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012168:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801216c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8012170:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8012174:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8012178:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801217c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8012180:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8012184:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8012188:	6f697372 	svcvs	0x00697372
 801218c:	6f622e6e 	svcvs	0x00622e6e
 8012190:	2b647261 	blcs	992eb1c <__exidx_end+0x191c06c>
 8012194:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012114 <index_js+0x364>
 8012198:	3b223e69 	blcc	88a1b44 <__exidx_end+0x88f094>
 801219c:	0a0a7d0a 	beq	82b15cc <__exidx_end+0x29eb1c>
 80121a0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80121a4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80121a8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80121ac:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80121b0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80121b8 <index_js+0x408>
 80121b4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80121b8:	20296c65 	eorcs	r6, r9, r5, ror #24
 80121bc:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80121c0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80121c4:	613d7478 	teqvs	sp, r8, ror r4
 80121c8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80121cc:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80121d0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80121d4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80121d8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80121dc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80121e0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80121e4:	3b22223d 	blcc	889aae0 <__exidx_end+0x888030>
 80121e8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80121ec:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80121f0:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80121f4:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80121f8:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80121fc:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012200:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012204:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8012208:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801220c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012210:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012214:	0a7b2029 	beq	9eda2c0 <__exidx_end+0x1ec7810>
 8012218:	61760909 	cmnvs	r6, r9, lsl #18
 801221c:	61762072 	cmnvs	r6, r2, ror r0
 8012220:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012224:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8012228:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801222c:	6b5b5d6c 	blvs	96e97e4 <__exidx_end+0x16d6d34>
 8012230:	3b5d7965 	blcc	97707cc <__exidx_end+0x175dd1c>
 8012234:	2009090a 	andcs	r0, r9, sl, lsl #18
 8012238:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801223c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012240:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012244:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012248:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801224c:	2f3c222b 	svccs	0x003c222b
 8012250:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012254:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012258:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801225c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012260:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012264:	742f3c3e 	strtvc	r3, [pc], #-3134	; 801226c <index_js+0x4bc>
 8012268:	3b223e72 	blcc	88a1c38 <__exidx_end+0x88f188>
 801226c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012270:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012274:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8012278:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801227c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012280:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012284:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8012288:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801228c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8012290:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8012294:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8012298:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 801229c:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80122a0:	0a3b6c6d 	beq	8eed45c <__exidx_end+0xeda9ac>
 80122a4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80122a8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80122ac:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80122b0:	3b292874 	blcc	8a5c488 <__exidx_end+0xa499d8>
 80122b4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80122b8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80122bc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80122c0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80122c4:	0a3b2928 	beq	8edc76c <__exidx_end+0xec9cbc>
 80122c8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80122cc:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80122d0:	6f697372 	svcvs	0x00697372
 80122d4:	3b29286e 	blcc	8a5c494 <__exidx_end+0xa499e4>
 80122d8:	0000000a 	andeq	r0, r0, sl

080122dc <s_aStorSize>:
 80122dc:	00000060 	andeq	r0, r0, r0, rrx
 80122e0:	00000090 	muleq	r0, r0, r0
 80122e4:	00000020 	andeq	r0, r0, r0, lsr #32
 80122e8:	00000040 	andeq	r0, r0, r0, asr #32
 80122ec:	00000060 	andeq	r0, r0, r0, rrx
 80122f0:	00000040 	andeq	r0, r0, r0, asr #32
 80122f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80122f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80122fc:	000001e0 	andeq	r0, r0, r0, ror #3
 8012300:	00000040 	andeq	r0, r0, r0, asr #32
 8012304:	00000020 	andeq	r0, r0, r0, lsr #32
 8012308:	00000060 	andeq	r0, r0, r0, rrx
 801230c:	00000030 	andeq	r0, r0, r0, lsr r0
 8012310:	00000020 	andeq	r0, r0, r0, lsr #32
 8012314:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012318:	00000030 	andeq	r0, r0, r0, lsr r0
 801231c:	00000040 	andeq	r0, r0, r0, asr #32
 8012320:	00000020 	andeq	r0, r0, r0, lsr #32
 8012324:	00000060 	andeq	r0, r0, r0, rrx
 8012328:	00000020 	andeq	r0, r0, r0, lsr #32
 801232c:	00000400 	andeq	r0, r0, r0, lsl #8
 8012330:	00000020 	andeq	r0, r0, r0, lsr #32
 8012334:	00000020 	andeq	r0, r0, r0, lsr #32
 8012338:	00000040 	andeq	r0, r0, r0, asr #32
 801233c:	00000060 	andeq	r0, r0, r0, rrx
 8012340:	00000020 	andeq	r0, r0, r0, lsr #32
 8012344:	00000020 	andeq	r0, r0, r0, lsr #32
 8012348:	00000020 	andeq	r0, r0, r0, lsr #32

0801234c <vtable for StoreDmxSend>:
	...
 8012354:	0800bd29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, ip, sp, pc}
 8012358:	0800bd71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 801235c:	0800bd4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, fp, ip, sp, pc}
 8012360:	0800bd2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip, sp, pc}

08012364 <vtable for StoreNetwork>:
	...
 801236c:	0800bd91 	stmdaeq	r0, {r0, r4, r7, r8, sl, fp, ip, sp, pc}
 8012370:	0800bea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, ip, sp, pc}
 8012374:	0800bd99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, ip, sp, pc}
 8012378:	0800beb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 801237c:	0800be49 	stmdaeq	r0, {r0, r3, r6, r9, sl, fp, ip, sp, pc}
 8012380:	0800be1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, fp, ip, sp, pc}
 8012384:	0800bded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 8012388:	0800be75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 801238c:	0800bdbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, sp, pc}
 8012390:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8012394:	00000000 	andeq	r0, r0, r0
 8012398:	0800bd93 	stmdaeq	r0, {r0, r1, r4, r7, r8, sl, fp, ip, sp, pc}
 801239c:	0800beb1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 80123a0:	0800be6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, pc}
 80123a4:	0800be41 	stmdaeq	r0, {r0, r6, r9, sl, fp, ip, sp, pc}
 80123a8:	0800be15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, sp, pc}
 80123ac:	0800be9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 80123b0:	0800bde5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, fp, ip, sp, pc}

080123b4 <vtable for StoreOscServer>:
	...
 80123bc:	0800beed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
 80123c0:	0800bf35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 80123c4:	0800bf11 	stmdaeq	r0, {r0, r4, r8, r9, sl, fp, ip, sp, pc}
 80123c8:	0800bef1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, fp, ip, sp, pc}

080123cc <vtable for StoreRemoteConfig>:
	...
 80123d4:	0800bf55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 80123d8:	0800bf9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 80123dc:	0800bf79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 80123e0:	0800bf59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 80123e4:	3a434d46 	bcc	90e5904 <__exidx_end+0x10d2e54>
 80123e8:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 80123ec:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 80123f0:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80123f4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80123f8:	6f742068 	svcvs	0x00742068
 80123fc:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8012400:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8012404:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8012408:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801240c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8012410:	6374000a 	cmnvs	r4, #10
 8012414:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8012418:	3a6e6967 	bcc	9bac9bc <__exidx_end+0x1b99f0c>
 801241c:	6f6f7420 	svcvs	0x006f7420
 8012420:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8012424:	6f632079 	svcvs	0x00632079
 8012428:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801242c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012430:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8012434:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8012438:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 801243c:	41000a64 	tstmi	r0, r4, ror #20
 8012440:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8012444:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8012448:	61662070 	smcvs	25088	; 0x6200
 801244c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8012450:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8012454:	61666564 	cmnvs	r6, r4, ror #10
 8012458:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801245c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8012460:	0a796177 	beq	9e6aa44 <__exidx_end+0x1e57f94>
 8012464:	50524100 	subspl	r4, r2, r0, lsl #2
 8012468:	6f6f6c20 	svcvs	0x006f6c20
 801246c:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8012470:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8012474:	000a6465 	andeq	r6, sl, r5, ror #8

08012478 <NetworkConst::MSG_MDNS_CONFIG>:
 8012478:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801247c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8012480:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8012484:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08012489 <NetworkConst::MSG_NETWORK_INIT>:
 8012489:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801248d:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8012491:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8012495:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 8012499:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
 801249d:	32006e6f 	andcc	r6, r0, #1776	; 0x6f0
 80124a1:	302e3432 	eorcc	r3, lr, r2, lsr r4
 80124a5:	322e302e 	eorcc	r3, lr, #46	; 0x2e
 80124a9:	5f003135 	svcpl	0x00003135
 80124ad:	2e706374 	mrccs	3, 3, r6, cr0, cr4, {3}
 80124b1:	61636f6c 	cmnvs	r3, ip, ror #30
 80124b5:	735f006c 	cmpvc	pc, #108	; 0x6c
 80124b9:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80124bd:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80124c1:	736e645f 	cmnvc	lr, #1593835520	; 0x5f000000
 80124c5:	2e64732d 	cdpcs	3, 6, cr7, cr4, cr13, {1}
 80124c9:	7064755f 	rsbvc	r7, r4, pc, asr r5
 80124cd:	636f6c2e 	cmnvs	pc, #11776	; 0x2e00
 80124d1:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 80124d5:	0a534e44 	beq	94e5ded <__exidx_end+0x14d333d>
 80124d9:	6f4e2000 	svcvs	0x004e2000
 80124dd:	75722074 	ldrbvc	r2, [r2, #-116]!	; 0xffffff8c
 80124e1:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
 80124e5:	20000a67 	andcs	r0, r0, r7, ror #20
 80124e9:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80124ed:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80124f1:	20000a73 	andcs	r0, r0, r3, ror sl
 80124f5:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 80124f9:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80124fd:	7465000a 	strbtvc	r0, [r5], #-10
 8012501:	67003068 	strvs	r3, [r0, -r8, rrx]
 8012505:	64616769 	strbtvs	r6, [r1], #-1897	; 0xfffff897
 8012509:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801250d:	4e005f65 	cdpmi	15, 0, cr5, cr0, cr5, {3}
 8012511:	6f777465 	svcvs	0x00777465
 8012515:	000a6b72 	andeq	r6, sl, r2, ror fp
 8012519:	736f4820 	cmnvc	pc, #32, 16	; 0x200000
 801251d:	6d616e74 	stclvs	14, cr6, [r1, #-464]!	; 0xfffffe30
 8012521:	3a202065 	bcc	881a6bd <__exidx_end+0x807c0d>
 8012525:	0a732520 	beq	9cdb9ad <__exidx_end+0x1cc8efd>
 8012529:	66492000 	strbvs	r2, [r9], -r0
 801252d:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8012531:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012535:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012539:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801253d:	4920000a 	stmdbmi	r0!, {r1, r3}
 8012541:	2074656e 	rsbscs	r6, r4, lr, ror #10
 8012545:	20202020 	eorcs	r2, r0, r0, lsr #32
 8012549:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801254d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012551:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012555:	252f6425 	strcs	r6, [pc, #-1061]!	; 8012138 <index_js+0x388>
 8012559:	20000a64 	andcs	r0, r0, r4, ror #20
 801255d:	6d74654e 	cfldr64vs	mvdx6, [r4, #-312]!	; 0xfffffec8
 8012561:	206b7361 	rsbcs	r7, fp, r1, ror #6
 8012565:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012569:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801256d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012571:	0a64252e 	beq	991ba31 <__exidx_end+0x1908f81>
 8012575:	61472000 	mrsvs	r2, (UNDEF: 71)
 8012579:	61776574 	cmnvs	r7, r4, ror r5
 801257d:	20202079 	eorcs	r2, r0, r9, ror r0
 8012581:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8012585:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012589:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801258d:	20000a64 	andcs	r0, r0, r4, ror #20
 8012591:	616f7242 	cmnvs	pc, r2, asr #4
 8012595:	73616364 	cmnvc	r1, #100, 6	; 0x90000001
 8012599:	203a2074 	eorscs	r2, sl, r4, ror r0
 801259d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80125a1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80125a5:	0a64252e 	beq	991ba65 <__exidx_end+0x1908fb5>
 80125a9:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80125ad:	20202063 	eorcs	r2, r0, r3, rrx
 80125b1:	20202020 	eorcs	r2, r0, r0, lsr #32
 80125b5:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80125b9:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80125bd:	3a78322e 	bcc	9e1ee7d <__exidx_end+0x1e0c3cd>
 80125c1:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80125c5:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80125c9:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80125cd:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80125d1:	0a78322e 	beq	9e1ee91 <__exidx_end+0x1e0c3e1>
 80125d5:	6f4d2000 	svcvs	0x004d2000
 80125d9:	20206564 	eorcs	r6, r0, r4, ror #10
 80125dd:	20202020 	eorcs	r2, r0, r0, lsr #32
 80125e1:	6325203a 			; <UNDEFINED> instruction: 0x6325203a
 80125e5:	7453000a 	ldrbvc	r0, [r3], #-10
 80125e9:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
 80125ed:	00504920 	subseq	r4, r0, r0, lsr #18

080125f1 <NetworkParamsConst::IP_ADDRESS>:
 80125f1:	615f7069 	cmpvs	pc, r9, rrx
 80125f5:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80125f9:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080125fc <NetworkParamsConst::DEFAULT_GATEWAY>:
 80125fc:	61666564 	cmnvs	r6, r4, ror #10
 8012600:	5f746c75 	svcpl	0x00746c75
 8012604:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8012608:	00796177 	rsbseq	r6, r9, r7, ror r1

0801260c <NetworkParamsConst::DHCP_RETRY_TIME>:
 801260c:	70636864 	rsbvc	r6, r3, r4, ror #16
 8012610:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8012614:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801261c <NetworkParamsConst::HOSTNAME>
 8012618:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801261c <NetworkParamsConst::HOSTNAME>:
 801261c:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8012620:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08012625 <NetworkParamsConst::NET_MASK>:
 8012625:	5f74656e 	svcpl	0x0074656e
 8012629:	6b73616d 	blvs	9ceabe5 <__exidx_end+0x1cd8135>
	...

0801262e <NetworkParamsConst::USE_DHCP>:
 801262e:	5f657375 	svcpl	0x00657375
 8012632:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08012637 <NetworkParamsConst::FILE_NAME>:
 8012637:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801263b:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801263f:	00747874 	rsbseq	r7, r4, r4, ror r8
 8012643:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8012647:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801264b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801264f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012653:	002c2264 	eoreq	r2, ip, r4, ror #4
 8012657:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801265b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801265f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012663:	0a64252e 	beq	991bb23 <__exidx_end+0x1909073>
 8012667:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801266b:	0a232073 	beq	88da83f <__exidx_end+0x8c7d8f>
 801266f:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8012673:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012677:	2079616c 	rsbscs	r6, r9, ip, ror #2
 801267b:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 801267f:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8012683:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8012687:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 801268b:	36303331 			; <UNDEFINED> instruction: 0x36303331
 801268f:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8012693:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8012697:	0a296425 	beq	8a6b733 <__exidx_end+0xa58c83>
 801269b:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 801269f:	0000eeaa 	andeq	lr, r0, sl, lsr #29
	...

080126a4 <_OledFont8x6>:
 80126a4:	00000040 	andeq	r0, r0, r0, asr #32
 80126a8:	40000000 	andmi	r0, r0, r0
 80126ac:	005f0000 	subseq	r0, pc, r0
 80126b0:	00400000 	subeq	r0, r0, r0
 80126b4:	00070007 	andeq	r0, r7, r7
 80126b8:	7f144000 	svcvc	0x00144000
 80126bc:	00147f14 	andseq	r7, r4, r4, lsl pc
 80126c0:	7f2a2440 	svcvc	0x002a2440
 80126c4:	4000122a 	andmi	r1, r0, sl, lsr #4
 80126c8:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80126cc:	36400062 	strbcc	r0, [r0], -r2, rrx
 80126d0:	50205649 	eorpl	r5, r0, r9, asr #12
 80126d4:	08004000 	stmdaeq	r0, {lr}
 80126d8:	00000307 	andeq	r0, r0, r7, lsl #6
 80126dc:	221c0040 	andscs	r0, ip, #64	; 0x40
 80126e0:	40000041 	andmi	r0, r0, r1, asr #32
 80126e4:	1c224100 	stfnes	f4, [r2], #-0
 80126e8:	2a400000 	bcs	90126f0 <__exidx_end+0xfffc40>
 80126ec:	2a1c7f1c 	bcs	8732364 <__exidx_end+0x71f8b4>
 80126f0:	08084000 	stmdaeq	r8, {lr}
 80126f4:	0008083e 	andeq	r0, r8, lr, lsr r8
 80126f8:	70800040 	addvc	r0, r0, r0, asr #32
 80126fc:	40000030 	andmi	r0, r0, r0, lsr r0
 8012700:	08080808 	stmdaeq	r8, {r3, fp}
 8012704:	00400008 	subeq	r0, r0, r8
 8012708:	00606000 	rsbeq	r6, r0, r0
 801270c:	10204000 	eorne	r4, r0, r0
 8012710:	00020408 	andeq	r0, r2, r8, lsl #8
 8012714:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8012718:	40003e45 	andmi	r3, r0, r5, asr #28
 801271c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8012720:	72400000 	subvc	r0, r0, #0
 8012724:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8012728:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801272c:	00334d49 	eorseq	r4, r3, r9, asr #26
 8012730:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8012734:	4000107f 	andmi	r1, r0, pc, ror r0
 8012738:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801273c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8012740:	3149494a 	cmpcc	r9, sl, asr #18
 8012744:	21414000 	mrscs	r4, (UNDEF: 65)
 8012748:	00070911 	andeq	r0, r7, r1, lsl r9
 801274c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8012750:	40003649 	andmi	r3, r0, r9, asr #12
 8012754:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8012758:	0040001e 	subeq	r0, r0, lr, lsl r0
 801275c:	00001400 	andeq	r1, r0, r0, lsl #8
 8012760:	40004000 	andmi	r4, r0, r0
 8012764:	00000034 	andeq	r0, r0, r4, lsr r0
 8012768:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801276c:	40004122 	andmi	r4, r0, r2, lsr #2
 8012770:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8012774:	00400014 	subeq	r0, r0, r4, lsl r0
 8012778:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801277c:	01024000 	mrseq	r4, (UNDEF: 2)
 8012780:	00060959 	andeq	r0, r6, r9, asr r9
 8012784:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8012788:	40004e59 	andmi	r4, r0, r9, asr lr
 801278c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8012790:	7f40007c 	svcvc	0x0040007c
 8012794:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8012798:	413e4000 	teqmi	lr, r0
 801279c:	00224141 	eoreq	r4, r2, r1, asr #2
 80127a0:	41417f40 	cmpmi	r1, r0, asr #30
 80127a4:	40003e41 	andmi	r3, r0, r1, asr #28
 80127a8:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80127ac:	7f400041 	svcvc	0x00400041
 80127b0:	01090909 	tsteq	r9, r9, lsl #18
 80127b4:	413e4000 	teqmi	lr, r0
 80127b8:	00735141 	rsbseq	r5, r3, r1, asr #2
 80127bc:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80127c0:	40007f08 	andmi	r7, r0, r8, lsl #30
 80127c4:	417f4100 	cmnmi	pc, r0, lsl #2
 80127c8:	20400000 	subcs	r0, r0, r0
 80127cc:	013f4140 	teqeq	pc, r0, asr #2
 80127d0:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80127d4:	00412214 	subeq	r2, r1, r4, lsl r2
 80127d8:	40407f40 	submi	r7, r0, r0, asr #30
 80127dc:	40004040 	andmi	r4, r0, r0, asr #32
 80127e0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80127e4:	7f40007f 	svcvc	0x0040007f
 80127e8:	7f100804 	svcvc	0x00100804
 80127ec:	413e4000 	teqmi	lr, r0
 80127f0:	003e4141 	eorseq	r4, lr, r1, asr #2
 80127f4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80127f8:	40000609 	andmi	r0, r0, r9, lsl #12
 80127fc:	2151413e 	cmpcs	r1, lr, lsr r1
 8012800:	7f40005e 	svcvc	0x0040005e
 8012804:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8012808:	49264000 	stmdbmi	r6!, {lr}
 801280c:	00324949 	eorseq	r4, r2, r9, asr #18
 8012810:	7f010340 	svcvc	0x00010340
 8012814:	40000301 	andmi	r0, r0, r1, lsl #6
 8012818:	4040403f 	submi	r4, r0, pc, lsr r0
 801281c:	1f40003f 	svcne	0x0040003f
 8012820:	1f204020 	svcne	0x00204020
 8012824:	403f4000 	eorsmi	r4, pc, r0
 8012828:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801282c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8012830:	40006314 	andmi	r6, r0, r4, lsl r3
 8012834:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8012838:	61400003 	cmpvs	r0, r3
 801283c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8012840:	7f004000 	svcvc	0x00004000
 8012844:	00414141 	subeq	r4, r1, r1, asr #2
 8012848:	08040240 	stmdaeq	r4, {r6, r9}
 801284c:	40002010 	andmi	r2, r0, r0, lsl r0
 8012850:	41414100 	mrsmi	r4, (UNDEF: 81)
 8012854:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8012858:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801285c:	40404000 	submi	r4, r0, r0
 8012860:	00404040 	subeq	r4, r0, r0, asr #32
 8012864:	07030040 	streq	r0, [r3, -r0, asr #32]
 8012868:	40000008 	andmi	r0, r0, r8
 801286c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8012870:	7f400040 	svcvc	0x00400040
 8012874:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8012878:	44384000 	ldrtmi	r4, [r8], #-0
 801287c:	00284444 	eoreq	r4, r8, r4, asr #8
 8012880:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8012884:	40007f28 	andmi	r7, r0, r8, lsr #30
 8012888:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801288c:	00400018 	subeq	r0, r0, r8, lsl r0
 8012890:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8012894:	a4184000 	ldrge	r4, [r8], #-0
 8012898:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801289c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80128a0:	40007804 	andmi	r7, r0, r4, lsl #16
 80128a4:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80128a8:	20400000 	subcs	r0, r0, r0
 80128ac:	003d4040 	eorseq	r4, sp, r0, asr #32
 80128b0:	107f4000 	rsbsne	r4, pc, r0
 80128b4:	00004428 	andeq	r4, r0, r8, lsr #8
 80128b8:	7f410040 	svcvc	0x00410040
 80128bc:	40000040 	andmi	r0, r0, r0, asr #32
 80128c0:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80128c4:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80128c8:	78040408 	stmdavc	r4, {r3, sl}
 80128cc:	44384000 	ldrtmi	r4, [r8], #-0
 80128d0:	00384444 	eorseq	r4, r8, r4, asr #8
 80128d4:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80128d8:	40001824 	andmi	r1, r0, r4, lsr #16
 80128dc:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80128e0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80128e4:	08040408 	stmdaeq	r4, {r3, sl}
 80128e8:	54484000 	strbpl	r4, [r8], #-0
 80128ec:	00245454 	eoreq	r5, r4, r4, asr r4
 80128f0:	3f040440 	svccc	0x00040440
 80128f4:	40002444 	andmi	r2, r0, r4, asr #8
 80128f8:	2040403c 	subcs	r4, r0, ip, lsr r0
 80128fc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8012900:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8012904:	403c4000 	eorsmi	r4, ip, r0
 8012908:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801290c:	10284440 	eorne	r4, r8, r0, asr #8
 8012910:	40004428 	andmi	r4, r0, r8, lsr #8
 8012914:	9090904c 	addsls	r9, r0, ip, asr #32
 8012918:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801291c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8012920:	08004000 	stmdaeq	r0, {lr}
 8012924:	00004136 	andeq	r4, r0, r6, lsr r1
 8012928:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801292c:	40000000 	andmi	r0, r0, r0
 8012930:	08364100 	ldmdaeq	r6!, {r8, lr}
 8012934:	02400000 	subeq	r0, r0, #0
 8012938:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801293c:	263c4000 	ldrtcs	r4, [ip], -r0
 8012940:	003c2623 	eorseq	r2, ip, r3, lsr #12

08012944 <oled_128x32_init>:
 8012944:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012948:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801294c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012950:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8012954:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012958:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801295c <oled_128x64_init>:
 801295c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012960:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8012964:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012968:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801296c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012970:	a6a440db 	ssatge	r4, #5, fp, asr #1

08012974 <vtable for Ssd1306>:
	...
 801297c:	0800e6fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, sl, sp, lr, pc}
 8012980:	0800e729 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, sp, lr, pc}
 8012984:	0800ea39 	stmdaeq	r0, {r0, r3, r4, r5, r9, fp, sp, lr, pc}
 8012988:	0800e9c1 	stmdaeq	r0, {r0, r6, r7, r8, fp, sp, lr, pc}
 801298c:	0800e88d 	stmdaeq	r0, {r0, r2, r3, r7, fp, sp, lr, pc}
 8012990:	0800e749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, sp, lr, pc}
 8012994:	0800e771 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8012998:	0800e863 	stmdaeq	r0, {r0, r1, r5, r6, fp, sp, lr, pc}
 801299c:	0800e81d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp, lr, pc}
 80129a0:	0800e6fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, sp, lr, pc}
 80129a4:	0800e8c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, sp, lr, pc}
 80129a8:	0800e8d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, fp, sp, lr, pc}
 80129ac:	0800e8ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, fp, sp, lr, pc}
 80129b0:	0800e701 	stmdaeq	r0, {r0, r8, r9, sl, sp, lr, pc}
 80129b4:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80129b8:	5b1b006d 	blpl	86d2b74 <__exidx_end+0x6c00c4>
 80129bc:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80129c0:	31335b1b 	teqcc	r3, fp, lsl fp
 80129c4:	5b1b006d 	blpl	86d2b80 <__exidx_end+0x6c00d0>
 80129c8:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80129cc:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80129d0:	5b1b006d 	blpl	86d2b8c <__exidx_end+0x6c00dc>
 80129d4:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80129d8:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80129dc:	205d732a 	subscs	r7, sp, sl, lsr #6
 80129e0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80129e4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80129e8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80129ec:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80129f0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80129f4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80129f8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80129fc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a00:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a04:	000a7525 	andeq	r7, sl, r5, lsr #10
 8012a08:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a0c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a10:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8012a14:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8012a18:	6b636f6c 	blvs	98ee7d0 <__exidx_end+0x18dbd20>
 8012a1c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8012a20:	000a7469 	andeq	r7, sl, r9, ror #8
 8012a24:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a28:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a2c:	6f6c4270 	svcvs	0x006c4270
 8012a30:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8012a34:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012a38:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8012a3c:	7a697320 	bvc	9a6f6c4 <__exidx_end+0x1a5cc14>
 8012a40:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8012a44:	6164202c 	cmnvs	r4, ip, lsr #32
 8012a48:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8012a4c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8012a50:	3a656572 	bcc	996c020 <__exidx_end+0x1959570>
 8012a54:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8012a58:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012a5c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8012a60:	203d2072 	eorscs	r2, sp, r2, ror r0
 8012a64:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8012a68:	6f6c4270 	svcvs	0x006c4270
 8012a6c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8012a70:	0a702520 	beq	9c1bef8 <__exidx_end+0x1c09448>
 8012a74:	00000000 	andeq	r0, r0, r0

08012a78 <days_of_month>:
 8012a78:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a7c:	0000001c 	andeq	r0, r0, ip, lsl r0
 8012a80:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a84:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a88:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a8c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a90:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a94:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a98:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012aa0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012aa4:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08012aa8 <__exidx_start>:
 8012aa8:	7fff5de4 	svcvc	0x00ff5de4
 8012aac:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08012ab0 <.ARM.attributes>:
 8012ab0:	00002e41 	andeq	r2, r0, r1, asr #28
 8012ab4:	61656100 	cmnvs	r5, r0, lsl #2
 8012ab8:	01006962 	tsteq	r0, r2, ror #18
 8012abc:	00000024 	andeq	r0, r0, r4, lsr #32
 8012ac0:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8012ac4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8012ac8:	0600334d 	streq	r3, [r0], -sp, asr #6
 8012acc:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8012ad0:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8012ad4:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8012ad8:	1a011803 	bne	8058aec <__exidx_end+0x4603c>
 8012adc:	Address 0x0000000008012adc is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000709 	andcs	r0, r0, r9, lsl #14

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <OscServer::s_aPathInfo>:
	...

2000017c <OscServer::s_pUdpBuffer>:
2000017c:	00000000 	andeq	r0, r0, r0

20000180 <OscServer::s_aPathSecond>:
	...

20000200 <OscServer::s_aPathBlackOut>:
	...

20000280 <OscServer::s_aPath>:
	...

20000300 <OscServer::s_pData>:
	...

20000500 <OscServer::s_pThis>:
20000500:	00000000 	andeq	r0, r0, r0

20000504 <OscSimpleSend::s_Message>:
	...

20000704 <DmxSend::s_nStarted>:
	...

20000705 <DmxConfigUdp::s_Buffer>:
	...

20000718 <s_RxBuffer>:
	...

20000928 <s_TxBuffer>:
	...

20000b2c <sv_PortState>:
20000b2c:	00000000 	andeq	r0, r0, r0

20000b30 <s_nUartsSending>:
20000b30:	00000000 	andeq	r0, r0, r0

20000b34 <sv_nRxDmxPackets>:
	...

20000b44 <Dmx::s_pThis>:
20000b44:	00000000 	andeq	r0, r0, r0

20000b48 <gv_RdmDataReceiveEnd>:
20000b48:	00000000 	andeq	r0, r0, r0

20000b4c <RemoteConfig::s_pUdpBuffer>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b74 <RemoteConfig::s_pThis>:
20000b74:	00000000 	andeq	r0, r0, r0

20000b78 <SpiFlashStore::s_nWaitMillis>:
20000b78:	00000000 	andeq	r0, r0, r0

20000b7c <SpiFlashStore::s_SpiFlashData>:
	...

20001b7c <SpiFlashStore::s_nStartAddress>:
20001b7c:	00000000 	andeq	r0, r0, r0

20001b80 <SpiFlashStore::s_bHaveFlashChip>:
20001b80:	00000000 	andeq	r0, r0, r0

20001b84 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_State>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_pThis>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_bIsNew>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <StoreDmxSend::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <StoreNetwork::s_pThis>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreOscServer::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreRemoteConfig::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <FlashRom::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <flashrom::s_nAddress>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <flashrom::s_State>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <flashrom::s_nPage>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_pData>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_isBank0>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nLength>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <g_ip_info>:
	...

20001bcc <g_mac_address>:
20001bcc:	00000000 	andeq	r0, r0, r0
	...

20001bd2 <s_is_dhcp>:
	...

20001bd4 <s_p>:
20001bd4:	00000000 	andeq	r0, r0, r0

20001bd8 <s_ticker>:
20001bd8:	00000000 	andeq	r0, r0, r0

20001bdc <s_mac_address>:
	...

20001be4 <s_mac_address_arp_reply>:
	...

20001bec <s_id>:
20001bec:	00000000 	andeq	r0, r0, r0

20001bf0 <s_recv_queue>:
	...

20002760 <s_tcb>:
	...

200027a4 <s_tcp>:
	...

20002d90 <broadcast_mask>:
20002d90:	00000000 	andeq	r0, r0, r0

20002d94 <gw_ip>:
20002d94:	00000000 	andeq	r0, r0, r0

20002d98 <on_network_mask>:
20002d98:	00000000 	andeq	r0, r0, r0

20002d9c <s_id>:
20002d9c:	00000000 	andeq	r0, r0, r0

20002da0 <s_ports_allowed>:
	...

20002dc0 <s_recv_queue>:
	...

20008a60 <s_send_packet>:
	...

2000904c <MDNS::s_nRemoteIp>:
2000904c:	00000000 	andeq	r0, r0, r0

20009050 <MDNS::s_nRemotePort>:
20009050:	00000000 	andeq	r0, r0, r0

20009054 <MDNS::s_nMulticastIp>:
20009054:	00000000 	andeq	r0, r0, r0

20009058 <MDNS::s_AnswerLocalIp>:
	...

2000925c <MDNS::s_ServiceRecords>:
	...

2000927c <MDNS::s_nBytesReceived>:
2000927c:	00000000 	andeq	r0, r0, r0

20009280 <MDNS::s_ServiceRecordsData>:
	...

20009484 <MDNS::s_pName>:
20009484:	00000000 	andeq	r0, r0, r0

20009488 <MDNS::s_pBuffer>:
20009488:	00000000 	andeq	r0, r0, r0

2000948c <Network::s_pThis>:
2000948c:	00000000 	andeq	r0, r0, r0

20009490 <NetworkParams::m_tNetworkParams>:
	...

200094f0 <s_arp_announce>:
	...

2000951c <s_arp_reply>:
	...

20009548 <s_arp_request>:
	...

20009574 <s_arp_records>:
	...

200096f4 <s_entry_current>:
200096f4:	00000000 	andeq	r0, r0, r0

200096f8 <s_dhcp_allocated_gw>:
200096f8:	00000000 	andeq	r0, r0, r0

200096fc <s_dhcp_allocated_ip>:
200096fc:	00000000 	andeq	r0, r0, r0

20009700 <s_dhcp_allocated_netmask>:
20009700:	00000000 	andeq	r0, r0, r0

20009704 <s_dhcp_message>:
	...

20009928 <s_dhcp_server_ip>:
20009928:	00000000 	andeq	r0, r0, r0

2000992c <s_groups>:
	...

20009a4c <s_id>:
20009a4c:	00000000 	andeq	r0, r0, r0

20009a50 <s_joins_allowed_index>:
20009a50:	00000000 	andeq	r0, r0, r0

20009a54 <s_leave>:
	...

20009a84 <s_multicast_mac>:
	...

20009a8c <s_report>:
	...

20009aba <PropertiesConfig::s_Config>:
	...

20009abc <Display::s_pThis>:
20009abc:	00000000 	andeq	r0, r0, r0

20009ac0 <_ClearBuffer>:
	...

20009b48 <Ssd1306::s_pThis>:
20009b48:	00000000 	andeq	r0, r0, r0

20009b4c <FirmwareVersion::s_FirmwareVersion>:
	...

20009b62 <FirmwareVersion::s_Print>:
	...

20009ba4 <FirmwareVersion::s_pThis>:
20009ba4:	00000000 	andeq	r0, r0, r0

20009ba8 <LedBlink::s_pThis>:
20009ba8:	00000000 	andeq	r0, r0, r0

20009bac <Hardware::s_pThis>:
20009bac:	00000000 	andeq	r0, r0, r0

20009bb0 <last.0>:
	...

20009bb8 <s_micros>:
	...

20009bc0 <set_timer>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <s_nSysTickMillis>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <enet_init_status>:
20009bc8:	00000000 	andeq	r0, r0, r0

20009bcc <s_nAddress>:
20009bcc:	00000000 	andeq	r0, r0, r0

20009bd0 <dma_current_ptp_rxdesc>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <dma_current_ptp_txdesc>:
20009bd4:	00000000 	andeq	r0, r0, r0

20009bd8 <dma_current_rxdesc>:
20009bd8:	00000000 	andeq	r0, r0, r0

20009bdc <dma_current_txdesc>:
20009bdc:	00000000 	andeq	r0, r0, r0

20009be0 <enet_initpara>:
	...

20009c1c <rx_buff>:
	...

2000b3ec <rxdesc_tab>:
	...

2000b42c <tx_buff>:
	...

2000c014 <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
