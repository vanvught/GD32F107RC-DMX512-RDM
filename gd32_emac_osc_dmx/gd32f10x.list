
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20018000 	andcs	r8, r1, r0
 8007004:	080080b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, pc}
 8007008:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800700c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007010:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007014:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007018:	08008101 	stmdaeq	r0, {r0, r8, pc}
	...
 800702c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007030:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800703c:	0800f2bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, ip, sp, lr, pc}
 8007040:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007044:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007048:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800704c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007050:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007054:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007058:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800705c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007060:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007064:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007068:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800706c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007070:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007074:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007078:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800707c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007080:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007084:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007088:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800708c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007090:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007094:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007098:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800709c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070a0:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070a4:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070a8:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070ac:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070b0:	08009ea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, ip, pc}
 80070b4:	08009f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, pc}
 80070b8:	08009f85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, ip, pc}
 80070bc:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070c0:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070c4:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070c8:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070cc:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070d0:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070d4:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070d8:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070dc:	08009ca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, ip, pc}
 80070e0:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070e4:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070e8:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070ec:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070f0:	08008101 	stmdaeq	r0, {r0, r8, pc}
 80070f4:	08008101 	stmdaeq	r0, {r0, r8, pc}
	...
 8007100:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007104:	00000000 	andeq	r0, r0, r0
 8007108:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800710c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007110:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007114:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007118:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800711c:	08009fa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip, pc}
 8007120:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007124:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007128:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800712c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007130:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007134:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007138:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800713c:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007140:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007144:	08008101 	stmdaeq	r0, {r0, r8, pc}
 8007148:	08008101 	stmdaeq	r0, {r0, r8, pc}
 800714c:	08008101 	stmdaeq	r0, {r0, r8, pc}

Disassembly of section .text:

08007150 <net_init>:
 8007150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	460c      	mov	r4, r1
 8007156:	4616      	mov	r6, r2
 8007158:	9f06      	ldr	r7, [sp, #24]
 800715a:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <net_init+0x94>)
 800715c:	461d      	mov	r5, r3
 800715e:	1e43      	subs	r3, r0, #1
 8007160:	3005      	adds	r0, #5
 8007162:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007166:	4283      	cmp	r3, r0
 8007168:	f802 1b01 	strb.w	r1, [r2], #1
 800716c:	d1f9      	bne.n	8007162 <net_init+0x12>
 800716e:	4623      	mov	r3, r4
 8007170:	4a1d      	ldr	r2, [pc, #116]	; (80071e8 <net_init+0x98>)
 8007172:	f104 010c 	add.w	r1, r4, #12
 8007176:	f813 0b01 	ldrb.w	r0, [r3], #1
 800717a:	428b      	cmp	r3, r1
 800717c:	f802 0b01 	strb.w	r0, [r2], #1
 8007180:	d1f9      	bne.n	8007176 <net_init+0x26>
 8007182:	f04f 0800 	mov.w	r8, #0
 8007186:	4918      	ldr	r1, [pc, #96]	; (80071e8 <net_init+0x98>)
 8007188:	4816      	ldr	r0, [pc, #88]	; (80071e4 <net_init+0x94>)
 800718a:	f000 f9ab 	bl	80074e4 <ip_init>
 800718e:	4815      	ldr	r0, [pc, #84]	; (80071e4 <net_init+0x94>)
 8007190:	f000 f83c 	bl	800720c <rfc3927_init>
 8007194:	f887 8000 	strb.w	r8, [r7]
 8007198:	782b      	ldrb	r3, [r5, #0]
 800719a:	b163      	cbz	r3, 80071b6 <net_init+0x66>
 800719c:	4632      	mov	r2, r6
 800719e:	4912      	ldr	r1, [pc, #72]	; (80071e8 <net_init+0x98>)
 80071a0:	4810      	ldr	r0, [pc, #64]	; (80071e4 <net_init+0x94>)
 80071a2:	f006 fd87 	bl	800dcb4 <dhcp_client>
 80071a6:	4540      	cmp	r0, r8
 80071a8:	da05      	bge.n	80071b6 <net_init+0x66>
 80071aa:	480f      	ldr	r0, [pc, #60]	; (80071e8 <net_init+0x98>)
 80071ac:	f885 8000 	strb.w	r8, [r5]
 80071b0:	f005 f884 	bl	800c2bc <rfc3927>
 80071b4:	7038      	strb	r0, [r7, #0]
 80071b6:	490c      	ldr	r1, [pc, #48]	; (80071e8 <net_init+0x98>)
 80071b8:	480a      	ldr	r0, [pc, #40]	; (80071e4 <net_init+0x94>)
 80071ba:	f000 f887 	bl	80072cc <arp_init>
 80071be:	480a      	ldr	r0, [pc, #40]	; (80071e8 <net_init+0x98>)
 80071c0:	f006 ff98 	bl	800e0f4 <ip_set_ip>
 80071c4:	f000 f82e 	bl	8007224 <tcp_init>
 80071c8:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <net_init+0x98>)
 80071ca:	1e63      	subs	r3, r4, #1
 80071cc:	340b      	adds	r4, #11
 80071ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80071d2:	f803 1f01 	strb.w	r1, [r3, #1]!
 80071d6:	429c      	cmp	r4, r3
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x7e>
 80071da:	782a      	ldrb	r2, [r5, #0]
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <net_init+0x9c>)
 80071de:	701a      	strb	r2, [r3, #0]
 80071e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80071e4:	20001bcc 	andcs	r1, r0, ip, asr #23
 80071e8:	20001bc0 	andcs	r1, r0, r0, asr #23
 80071ec:	20001bd2 	ldrdcs	r1, [r0], -r2

080071f0 <net_shutdown>:
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f000 f982 	bl	80074fa <ip_shutdown>
 80071f6:	4b04      	ldr	r3, [pc, #16]	; (8007208 <net_shutdown+0x18>)
 80071f8:	781b      	ldrb	r3, [r3, #0]
 80071fa:	b11b      	cbz	r3, 8007204 <net_shutdown+0x14>
 80071fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007200:	f006 be60 	b.w	800dec4 <dhcp_client_release>
 8007204:	bd08      	pop	{r3, pc}
 8007206:	bf00      	nop
 8007208:	20001bd2 	ldrdcs	r1, [r0], -r2

0800720c <rfc3927_init>:
 800720c:	4b04      	ldr	r3, [pc, #16]	; (8007220 <rfc3927_init+0x14>)
 800720e:	1d82      	adds	r2, r0, #6
 8007210:	4290      	cmp	r0, r2
 8007212:	d100      	bne.n	8007216 <rfc3927_init+0xa>
 8007214:	4770      	bx	lr
 8007216:	f810 1b01 	ldrb.w	r1, [r0], #1
 800721a:	f803 1b01 	strb.w	r1, [r3], #1
 800721e:	e7f7      	b.n	8007210 <rfc3927_init+0x4>
 8007220:	20001bdc 	ldrdcs	r1, [r0], -ip

08007224 <tcp_init>:
 8007224:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007226:	2206      	movs	r2, #6
 8007228:	4c0e      	ldr	r4, [pc, #56]	; (8007264 <tcp_init+0x40>)
 800722a:	490f      	ldr	r1, [pc, #60]	; (8007268 <tcp_init+0x44>)
 800722c:	18a0      	adds	r0, r4, r2
 800722e:	f005 f89f 	bl	800c370 <memcpy.isra.0>
 8007232:	2308      	movs	r3, #8
 8007234:	2204      	movs	r2, #4
 8007236:	2500      	movs	r5, #0
 8007238:	7323      	strb	r3, [r4, #12]
 800723a:	4b0c      	ldr	r3, [pc, #48]	; (800726c <tcp_init+0x48>)
 800723c:	eb0d 0102 	add.w	r1, sp, r2
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	f104 001a 	add.w	r0, r4, #26
 8007246:	9301      	str	r3, [sp, #4]
 8007248:	7365      	strb	r5, [r4, #13]
 800724a:	f005 f891 	bl	800c370 <memcpy.isra.0>
 800724e:	2345      	movs	r3, #69	; 0x45
 8007250:	73a3      	strb	r3, [r4, #14]
 8007252:	2340      	movs	r3, #64	; 0x40
 8007254:	7523      	strb	r3, [r4, #20]
 8007256:	75a3      	strb	r3, [r4, #22]
 8007258:	2306      	movs	r3, #6
 800725a:	73e5      	strb	r5, [r4, #15]
 800725c:	7565      	strb	r5, [r4, #21]
 800725e:	75e3      	strb	r3, [r4, #23]
 8007260:	b003      	add	sp, #12
 8007262:	bd30      	pop	{r4, r5, pc}
 8007264:	200027a0 	andcs	r2, r0, r0, lsr #15
 8007268:	20001bcc 	andcs	r1, r0, ip, asr #23
 800726c:	20001bc0 	andcs	r1, r0, r0, asr #23

08007270 <udp_init>:
 8007270:	b570      	push	{r4, r5, r6, lr}
 8007272:	2200      	movs	r2, #0
 8007274:	2408      	movs	r4, #8
 8007276:	460e      	mov	r6, r1
 8007278:	4b0d      	ldr	r3, [pc, #52]	; (80072b0 <udp_init+0x40>)
 800727a:	490e      	ldr	r1, [pc, #56]	; (80072b4 <udp_init+0x44>)
 800727c:	3c01      	subs	r4, #1
 800727e:	801a      	strh	r2, [r3, #0]
 8007280:	805a      	strh	r2, [r3, #2]
 8007282:	f841 2b04 	str.w	r2, [r1], #4
 8007286:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800728a:	d1f7      	bne.n	800727c <udp_init+0xc>
 800728c:	2206      	movs	r2, #6
 800728e:	4d0a      	ldr	r5, [pc, #40]	; (80072b8 <udp_init+0x48>)
 8007290:	4b0a      	ldr	r3, [pc, #40]	; (80072bc <udp_init+0x4c>)
 8007292:	4601      	mov	r1, r0
 8007294:	18a8      	adds	r0, r5, r2
 8007296:	801c      	strh	r4, [r3, #0]
 8007298:	f005 f9f6 	bl	800c688 <memcpy.isra.0>
 800729c:	4b08      	ldr	r3, [pc, #32]	; (80072c0 <udp_init+0x50>)
 800729e:	4630      	mov	r0, r6
 80072a0:	60eb      	str	r3, [r5, #12]
 80072a2:	4b08      	ldr	r3, [pc, #32]	; (80072c4 <udp_init+0x54>)
 80072a4:	616b      	str	r3, [r5, #20]
 80072a6:	f005 fa1b 	bl	800c6e0 <udp_set_ip>
 80072aa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072ac:	bd70      	pop	{r4, r5, r6, pc}
 80072ae:	bf00      	nop
 80072b0:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc
 80072b4:	20002d9c 	mulcs	r0, ip, sp
 80072b8:	20008a5c 	andcs	r8, r0, ip, asr sl
 80072bc:	20002d98 	mulcs	r0, r8, sp
 80072c0:	00450008 	subeq	r0, r5, r8
 80072c4:	11400040 	cmpne	r0, r0, asr #32

080072c8 <udp_shutdown>:
 80072c8:	4770      	bx	lr
	...

080072cc <arp_init>:
 80072cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d0:	4604      	mov	r4, r0
 80072d2:	460d      	mov	r5, r1
 80072d4:	f000 f876 	bl	80073c4 <arp_cache_init>
 80072d8:	2206      	movs	r2, #6
 80072da:	4621      	mov	r1, r4
 80072dc:	482e      	ldr	r0, [pc, #184]	; (8007398 <arp_init+0xcc>)
 80072de:	682f      	ldr	r7, [r5, #0]
 80072e0:	f006 fb5a 	bl	800d998 <memcpy.isra.0>
 80072e4:	4b2d      	ldr	r3, [pc, #180]	; (800739c <arp_init+0xd0>)
 80072e6:	2507      	movs	r5, #7
 80072e8:	461e      	mov	r6, r3
 80072ea:	22ff      	movs	r2, #255	; 0xff
 80072ec:	3d01      	subs	r5, #1
 80072ee:	d146      	bne.n	800737e <arp_init+0xb2>
 80072f0:	4b2b      	ldr	r3, [pc, #172]	; (80073a0 <arp_init+0xd4>)
 80072f2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073a4 <arp_init+0xd8>
 80072f6:	2206      	movs	r2, #6
 80072f8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 80072fc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007300:	4621      	mov	r1, r4
 8007302:	4829      	ldr	r0, [pc, #164]	; (80073a8 <arp_init+0xdc>)
 8007304:	82b3      	strh	r3, [r6, #20]
 8007306:	f006 fb47 	bl	800d998 <memcpy.isra.0>
 800730a:	2307      	movs	r3, #7
 800730c:	4a27      	ldr	r2, [pc, #156]	; (80073ac <arp_init+0xe0>)
 800730e:	61f7      	str	r7, [r6, #28]
 8007310:	3b01      	subs	r3, #1
 8007312:	d137      	bne.n	8007384 <arp_init+0xb8>
 8007314:	2206      	movs	r2, #6
 8007316:	4621      	mov	r1, r4
 8007318:	4825      	ldr	r0, [pc, #148]	; (80073b0 <arp_init+0xe4>)
 800731a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800731e:	f006 fb3b 	bl	800d998 <memcpy.isra.0>
 8007322:	4a24      	ldr	r2, [pc, #144]	; (80073b4 <arp_init+0xe8>)
 8007324:	2306      	movs	r3, #6
 8007326:	4615      	mov	r5, r2
 8007328:	21ff      	movs	r1, #255	; 0xff
 800732a:	3b01      	subs	r3, #1
 800732c:	d22d      	bcs.n	800738a <arp_init+0xbe>
 800732e:	4b1c      	ldr	r3, [pc, #112]	; (80073a0 <arp_init+0xd4>)
 8007330:	2206      	movs	r2, #6
 8007332:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007336:	f44f 7380 	mov.w	r3, #256	; 0x100
 800733a:	4621      	mov	r1, r4
 800733c:	481e      	ldr	r0, [pc, #120]	; (80073b8 <arp_init+0xec>)
 800733e:	82ab      	strh	r3, [r5, #20]
 8007340:	f006 fb2a 	bl	800d998 <memcpy.isra.0>
 8007344:	2307      	movs	r3, #7
 8007346:	2100      	movs	r1, #0
 8007348:	4a1c      	ldr	r2, [pc, #112]	; (80073bc <arp_init+0xf0>)
 800734a:	61ef      	str	r7, [r5, #28]
 800734c:	3b01      	subs	r3, #1
 800734e:	d11f      	bne.n	8007390 <arp_init+0xc4>
 8007350:	2206      	movs	r2, #6
 8007352:	4d1b      	ldr	r5, [pc, #108]	; (80073c0 <arp_init+0xf4>)
 8007354:	4621      	mov	r1, r4
 8007356:	18a8      	adds	r0, r5, r2
 8007358:	f006 fb1e 	bl	800d998 <memcpy.isra.0>
 800735c:	4b10      	ldr	r3, [pc, #64]	; (80073a0 <arp_init+0xd4>)
 800735e:	4621      	mov	r1, r4
 8007360:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007364:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007368:	f105 0016 	add.w	r0, r5, #22
 800736c:	2206      	movs	r2, #6
 800736e:	82ab      	strh	r3, [r5, #20]
 8007370:	f006 fb12 	bl	800d998 <memcpy.isra.0>
 8007374:	61ef      	str	r7, [r5, #28]
 8007376:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800737a:	f006 bb17 	b.w	800d9ac <arp_announce>
 800737e:	f803 2b01 	strb.w	r2, [r3], #1
 8007382:	e7b3      	b.n	80072ec <arp_init+0x20>
 8007384:	f802 5b01 	strb.w	r5, [r2], #1
 8007388:	e7c2      	b.n	8007310 <arp_init+0x44>
 800738a:	f802 1b01 	strb.w	r1, [r2], #1
 800738e:	e7cc      	b.n	800732a <arp_init+0x5e>
 8007390:	f802 1b01 	strb.w	r1, [r2], #1
 8007394:	e7da      	b.n	800734c <arp_init+0x80>
 8007396:	bf00      	nop
 8007398:	200094f2 	strdcs	r9, [r0], -r2
 800739c:	200094ec 	andcs	r9, r0, ip, ror #9
 80073a0:	01000608 	tsteq	r0, r8, lsl #12
 80073a4:	04060008 	streq	r0, [r6], #-8
 80073a8:	20009502 	andcs	r9, r0, r2, lsl #10
 80073ac:	2000950c 	andcs	r9, r0, ip, lsl #10
 80073b0:	2000954a 	andcs	r9, r0, sl, asr #10
 80073b4:	20009544 	andcs	r9, r0, r4, asr #10
 80073b8:	2000955a 	andcs	r9, r0, sl, asr r5
 80073bc:	20009564 	andcs	r9, r0, r4, ror #10
 80073c0:	20009518 	andcs	r9, r0, r8, lsl r5

080073c4 <arp_cache_init>:
 80073c4:	2300      	movs	r3, #0
 80073c6:	4618      	mov	r0, r3
 80073c8:	4a09      	ldr	r2, [pc, #36]	; (80073f0 <arp_cache_init+0x2c>)
 80073ca:	b510      	push	{r4, lr}
 80073cc:	8013      	strh	r3, [r2, #0]
 80073ce:	4a09      	ldr	r2, [pc, #36]	; (80073f4 <arp_cache_init+0x30>)
 80073d0:	4611      	mov	r1, r2
 80073d2:	f842 0c04 	str.w	r0, [r2, #-4]
 80073d6:	1d94      	adds	r4, r2, #6
 80073d8:	42a1      	cmp	r1, r4
 80073da:	d105      	bne.n	80073e8 <arp_cache_init+0x24>
 80073dc:	3303      	adds	r3, #3
 80073de:	2b60      	cmp	r3, #96	; 0x60
 80073e0:	f102 020c 	add.w	r2, r2, #12
 80073e4:	d1f4      	bne.n	80073d0 <arp_cache_init+0xc>
 80073e6:	bd10      	pop	{r4, pc}
 80073e8:	f801 0b01 	strb.w	r0, [r1], #1
 80073ec:	e7f4      	b.n	80073d8 <arp_cache_init+0x14>
 80073ee:	bf00      	nop
 80073f0:	200096f0 	strdcs	r9, [r0], -r0
 80073f4:	20009574 	andcs	r9, r0, r4, ror r5

080073f8 <igmp_init>:
 80073f8:	2200      	movs	r2, #0
 80073fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073fe:	4605      	mov	r5, r0
 8007400:	4608      	mov	r0, r1
 8007402:	4611      	mov	r1, r2
 8007404:	4b23      	ldr	r3, [pc, #140]	; (8007494 <igmp_init+0x9c>)
 8007406:	f103 0408 	add.w	r4, r3, #8
 800740a:	42a3      	cmp	r3, r4
 800740c:	d13e      	bne.n	800748c <igmp_init+0x94>
 800740e:	3201      	adds	r2, #1
 8007410:	2a24      	cmp	r2, #36	; 0x24
 8007412:	d1f8      	bne.n	8007406 <igmp_init+0xe>
 8007414:	2600      	movs	r6, #0
 8007416:	4b20      	ldr	r3, [pc, #128]	; (8007498 <igmp_init+0xa0>)
 8007418:	4c20      	ldr	r4, [pc, #128]	; (800749c <igmp_init+0xa4>)
 800741a:	601e      	str	r6, [r3, #0]
 800741c:	4b20      	ldr	r3, [pc, #128]	; (80074a0 <igmp_init+0xa8>)
 800741e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007422:	801e      	strh	r6, [r3, #0]
 8007424:	f006 fdc6 	bl	800dfb4 <igmp_set_ip>
 8007428:	2201      	movs	r2, #1
 800742a:	4b1e      	ldr	r3, [pc, #120]	; (80074a4 <igmp_init+0xac>)
 800742c:	4629      	mov	r1, r5
 800742e:	801a      	strh	r2, [r3, #0]
 8007430:	225e      	movs	r2, #94	; 0x5e
 8007432:	709a      	strb	r2, [r3, #2]
 8007434:	2206      	movs	r2, #6
 8007436:	18a0      	adds	r0, r4, r2
 8007438:	f006 fd72 	bl	800df20 <memcpy.isra.0>
 800743c:	f240 4394 	movw	r3, #1172	; 0x494
 8007440:	8463      	strh	r3, [r4, #34]	; 0x22
 8007442:	2316      	movs	r3, #22
 8007444:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074a8 <igmp_init+0xb0>
 8007448:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074ac <igmp_init+0xb4>
 800744c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800744e:	f8c4 9014 	str.w	r9, [r4, #20]
 8007452:	4b17      	ldr	r3, [pc, #92]	; (80074b0 <igmp_init+0xb8>)
 8007454:	f8c4 800c 	str.w	r8, [r4, #12]
 8007458:	8227      	strh	r7, [r4, #16]
 800745a:	84a6      	strh	r6, [r4, #36]	; 0x24
 800745c:	4c15      	ldr	r4, [pc, #84]	; (80074b4 <igmp_init+0xbc>)
 800745e:	2206      	movs	r2, #6
 8007460:	6023      	str	r3, [r4, #0]
 8007462:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007466:	18a0      	adds	r0, r4, r2
 8007468:	80a3      	strh	r3, [r4, #4]
 800746a:	4629      	mov	r1, r5
 800746c:	f006 fd58 	bl	800df20 <memcpy.isra.0>
 8007470:	23e0      	movs	r3, #224	; 0xe0
 8007472:	83e3      	strh	r3, [r4, #30]
 8007474:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8007478:	4a0f      	ldr	r2, [pc, #60]	; (80074b8 <igmp_init+0xc0>)
 800747a:	f8c4 9014 	str.w	r9, [r4, #20]
 800747e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8007482:	f8c4 800c 	str.w	r8, [r4, #12]
 8007486:	8227      	strh	r7, [r4, #16]
 8007488:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800748c:	f803 1b01 	strb.w	r1, [r3], #1
 8007490:	e7bb      	b.n	800740a <igmp_init+0x12>
 8007492:	bf00      	nop
 8007494:	20009928 	andcs	r9, r0, r8, lsr #18
 8007498:	20009a4c 	andcs	r9, r0, ip, asr #20
 800749c:	20009a88 	andcs	r9, r0, r8, lsl #21
 80074a0:	20009a48 	andcs	r9, r0, r8, asr #20
 80074a4:	20009a80 	andcs	r9, r0, r0, lsl #21
 80074a8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074ac:	00460008 	subeq	r0, r6, r8
 80074b0:	005e0001 	subseq	r0, lr, r1
 80074b4:	20009a50 	andcs	r9, r0, r0, asr sl
 80074b8:	04940200 	ldreq	r0, [r4], #512	; 0x200

080074bc <igmp_shutdown>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	2500      	movs	r5, #0
 80074c0:	462e      	mov	r6, r5
 80074c2:	4c07      	ldr	r4, [pc, #28]	; (80074e0 <igmp_shutdown+0x24>)
 80074c4:	6820      	ldr	r0, [r4, #0]
 80074c6:	b120      	cbz	r0, 80074d2 <igmp_shutdown+0x16>
 80074c8:	f006 fdd0 	bl	800e06c <igmp_leave>
 80074cc:	6026      	str	r6, [r4, #0]
 80074ce:	7166      	strb	r6, [r4, #5]
 80074d0:	7126      	strb	r6, [r4, #4]
 80074d2:	3501      	adds	r5, #1
 80074d4:	2d24      	cmp	r5, #36	; 0x24
 80074d6:	f104 0408 	add.w	r4, r4, #8
 80074da:	d1f3      	bne.n	80074c4 <igmp_shutdown+0x8>
 80074dc:	bd70      	pop	{r4, r5, r6, pc}
 80074de:	bf00      	nop
 80074e0:	20009928 	andcs	r9, r0, r8, lsr #18

080074e4 <ip_init>:
 80074e4:	b538      	push	{r3, r4, r5, lr}
 80074e6:	4604      	mov	r4, r0
 80074e8:	460d      	mov	r5, r1
 80074ea:	f7ff fec1 	bl	8007270 <udp_init>
 80074ee:	4629      	mov	r1, r5
 80074f0:	4620      	mov	r0, r4
 80074f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80074f6:	f7ff bf7f 	b.w	80073f8 <igmp_init>

080074fa <ip_shutdown>:
 80074fa:	b508      	push	{r3, lr}
 80074fc:	f7ff ffde 	bl	80074bc <igmp_shutdown>
 8007500:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007504:	f7ff bee0 	b.w	80072c8 <udp_shutdown>

08007508 <console_init>:
 8007508:	b508      	push	{r3, lr}
 800750a:	f007 fe79 	bl	800f200 <uart0_init>
 800750e:	4804      	ldr	r0, [pc, #16]	; (8007520 <console_init+0x18>)
 8007510:	f007 fea6 	bl	800f260 <uart0_puts>
 8007514:	4803      	ldr	r0, [pc, #12]	; (8007524 <console_init+0x1c>)
 8007516:	f007 fea3 	bl	800f260 <uart0_puts>
 800751a:	2000      	movs	r0, #0
 800751c:	bd08      	pop	{r3, pc}
 800751e:	bf00      	nop
 8007520:	08010fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp}
 8007524:	080129a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, sp}

08007528 <net_handle>:
 8007528:	b510      	push	{r4, lr}
 800752a:	4c0c      	ldr	r4, [pc, #48]	; (800755c <net_handle+0x34>)
 800752c:	4620      	mov	r0, r4
 800752e:	f008 fce9 	bl	800ff04 <emac_eth_recv>
 8007532:	2800      	cmp	r0, #0
 8007534:	dd07      	ble.n	8007546 <net_handle+0x1e>
 8007536:	6820      	ldr	r0, [r4, #0]
 8007538:	8983      	ldrh	r3, [r0, #12]
 800753a:	2b08      	cmp	r3, #8
 800753c:	d107      	bne.n	800754e <net_handle+0x26>
 800753e:	f000 fa71 	bl	8007a24 <ip_handle>
 8007542:	f008 fcf3 	bl	800ff2c <emac_free_pkt>
 8007546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800754a:	f004 bea7 	b.w	800c29c <net_timers_run>
 800754e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 8007552:	d1f6      	bne.n	8007542 <net_handle+0x1a>
 8007554:	f000 fa0a 	bl	800796c <arp_handle>
 8007558:	e7f3      	b.n	8007542 <net_handle+0x1a>
 800755a:	bf00      	nop
 800755c:	20001bd4 	ldrdcs	r1, [r0], -r4

08007560 <tcp_handle>:
 8007560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007564:	4605      	mov	r5, r0
 8007566:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8007568:	b085      	sub	sp, #20
 800756a:	ba5b      	rev16	r3, r3
 800756c:	8443      	strh	r3, [r0, #34]	; 0x22
 800756e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007570:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 8007574:	ba5b      	rev16	r3, r3
 8007576:	8483      	strh	r3, [r0, #36]	; 0x24
 8007578:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800757c:	f004 ff02 	bl	800c384 <_bswap32>
 8007580:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8007582:	4ca6      	ldr	r4, [pc, #664]	; (800781c <tcp_handle+0x2bc>)
 8007584:	ba5b      	rev16	r3, r3
 8007586:	862b      	strh	r3, [r5, #48]	; 0x30
 8007588:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800758a:	8822      	ldrh	r2, [r4, #0]
 800758c:	ba5b      	rev16	r3, r3
 800758e:	86ab      	strh	r3, [r5, #52]	; 0x34
 8007590:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8007592:	429a      	cmp	r2, r3
 8007594:	d14d      	bne.n	8007632 <tcp_handle+0xd2>
 8007596:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800759a:	2b01      	cmp	r3, #1
 800759c:	d00d      	beq.n	80075ba <tcp_handle+0x5a>
 800759e:	2204      	movs	r2, #4
 80075a0:	4668      	mov	r0, sp
 80075a2:	f105 011a 	add.w	r1, r5, #26
 80075a6:	f004 fee3 	bl	800c370 <memcpy.isra.0>
 80075aa:	8862      	ldrh	r2, [r4, #2]
 80075ac:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075ae:	429a      	cmp	r2, r3
 80075b0:	d13f      	bne.n	8007632 <tcp_handle+0xd2>
 80075b2:	6862      	ldr	r2, [r4, #4]
 80075b4:	9b00      	ldr	r3, [sp, #0]
 80075b6:	429a      	cmp	r2, r3
 80075b8:	d13b      	bne.n	8007632 <tcp_handle+0xd2>
 80075ba:	2204      	movs	r2, #4
 80075bc:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 80075c0:	eb0d 0002 	add.w	r0, sp, r2
 80075c4:	f004 fed4 	bl	800c370 <memcpy.isra.0>
 80075c8:	2204      	movs	r2, #4
 80075ca:	f105 0126 	add.w	r1, r5, #38	; 0x26
 80075ce:	eb0d 0002 	add.w	r0, sp, r2
 80075d2:	9e01      	ldr	r6, [sp, #4]
 80075d4:	f004 fecc 	bl	800c370 <memcpy.isra.0>
 80075d8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80075dc:	9f01      	ldr	r7, [sp, #4]
 80075de:	2a01      	cmp	r2, #1
 80075e0:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 80075e4:	d01b      	beq.n	800761e <tcp_handle+0xbe>
 80075e6:	1ed3      	subs	r3, r2, #3
 80075e8:	2b07      	cmp	r3, #7
 80075ea:	d822      	bhi.n	8007632 <tcp_handle+0xd2>
 80075ec:	ea4f 1318 	mov.w	r3, r8, lsr #4
 80075f0:	f64f 78ec 	movw	r8, #65516	; 0xffec
 80075f4:	fa9b fb9b 	rev16.w	fp, fp
 80075f8:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 80075fc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80075fe:	44d8      	add	r8, fp
 8007600:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007604:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007608:	fa1f f888 	uxth.w	r8, r8
 800760c:	2900      	cmp	r1, #0
 800760e:	d142      	bne.n	8007696 <tcp_handle+0x136>
 8007610:	f1b8 0f00 	cmp.w	r8, #0
 8007614:	d16b      	bne.n	80076ee <tcp_handle+0x18e>
 8007616:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007618:	42bb      	cmp	r3, r7
 800761a:	d168      	bne.n	80076ee <tcp_handle+0x18e>
 800761c:	e048      	b.n	80076b0 <tcp_handle+0x150>
 800761e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007622:	075a      	lsls	r2, r3, #29
 8007624:	d405      	bmi.n	8007632 <tcp_handle+0xd2>
 8007626:	06d8      	lsls	r0, r3, #27
 8007628:	d506      	bpl.n	8007638 <tcp_handle+0xd8>
 800762a:	4628      	mov	r0, r5
 800762c:	497b      	ldr	r1, [pc, #492]	; (800781c <tcp_handle+0x2bc>)
 800762e:	f004 ff7d 	bl	800c52c <_send_reset>
 8007632:	b005      	add	sp, #20
 8007634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007638:	0799      	lsls	r1, r3, #30
 800763a:	d5fa      	bpl.n	8007632 <tcp_handle+0xd2>
 800763c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007640:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007644:	4668      	mov	r0, sp
 8007646:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800764a:	f105 011a 	add.w	r1, r5, #26
 800764e:	2204      	movs	r2, #4
 8007650:	8063      	strh	r3, [r4, #2]
 8007652:	f004 fe8d 	bl	800c370 <memcpy.isra.0>
 8007656:	2206      	movs	r2, #6
 8007658:	9b00      	ldr	r3, [sp, #0]
 800765a:	18a9      	adds	r1, r5, r2
 800765c:	4870      	ldr	r0, [pc, #448]	; (8007820 <tcp_handle+0x2c0>)
 800765e:	6063      	str	r3, [r4, #4]
 8007660:	f004 fe86 	bl	800c370 <memcpy.isra.0>
 8007664:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007666:	1c7b      	adds	r3, r7, #1
 8007668:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800766c:	6363      	str	r3, [r4, #52]	; 0x34
 800766e:	2312      	movs	r3, #18
 8007670:	486a      	ldr	r0, [pc, #424]	; (800781c <tcp_handle+0x2bc>)
 8007672:	a901      	add	r1, sp, #4
 8007674:	f88d 300c 	strb.w	r3, [sp, #12]
 8007678:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800767c:	63e7      	str	r7, [r4, #60]	; 0x3c
 800767e:	f8c4 a018 	str.w	sl, [r4, #24]
 8007682:	f004 fea5 	bl	800c3d0 <_tcp_send_package>
 8007686:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007688:	1c5a      	adds	r2, r3, #1
 800768a:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800768e:	2303      	movs	r3, #3
 8007690:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007694:	e7cd      	b.n	8007632 <tcp_handle+0xd2>
 8007696:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007698:	eba3 0c07 	sub.w	ip, r3, r7
 800769c:	f1b8 0f00 	cmp.w	r8, #0
 80076a0:	d10d      	bne.n	80076be <tcp_handle+0x15e>
 80076a2:	f1bc 0f00 	cmp.w	ip, #0
 80076a6:	dc22      	bgt.n	80076ee <tcp_handle+0x18e>
 80076a8:	1afb      	subs	r3, r7, r3
 80076aa:	1a5b      	subs	r3, r3, r1
 80076ac:	2b00      	cmp	r3, #0
 80076ae:	da1e      	bge.n	80076ee <tcp_handle+0x18e>
 80076b0:	0743      	lsls	r3, r0, #29
 80076b2:	d530      	bpl.n	8007716 <tcp_handle+0x1b6>
 80076b4:	8821      	ldrh	r1, [r4, #0]
 80076b6:	4859      	ldr	r0, [pc, #356]	; (800781c <tcp_handle+0x2bc>)
 80076b8:	f004 fe40 	bl	800c33c <_init_tcb>
 80076bc:	e7b9      	b.n	8007632 <tcp_handle+0xd2>
 80076be:	f1bc 0f00 	cmp.w	ip, #0
 80076c2:	dc06      	bgt.n	80076d2 <tcp_handle+0x172>
 80076c4:	eba7 0c03 	sub.w	ip, r7, r3
 80076c8:	ebac 0c01 	sub.w	ip, ip, r1
 80076cc:	f1bc 0f00 	cmp.w	ip, #0
 80076d0:	dbee      	blt.n	80076b0 <tcp_handle+0x150>
 80076d2:	eb08 0c07 	add.w	ip, r8, r7
 80076d6:	f103 0e01 	add.w	lr, r3, #1
 80076da:	ebae 0e0c 	sub.w	lr, lr, ip
 80076de:	f1be 0f00 	cmp.w	lr, #0
 80076e2:	dc04      	bgt.n	80076ee <tcp_handle+0x18e>
 80076e4:	43db      	mvns	r3, r3
 80076e6:	1a5b      	subs	r3, r3, r1
 80076e8:	eb13 0f0c 	cmn.w	r3, ip
 80076ec:	d4e0      	bmi.n	80076b0 <tcp_handle+0x150>
 80076ee:	0742      	lsls	r2, r0, #29
 80076f0:	d505      	bpl.n	80076fe <tcp_handle+0x19e>
 80076f2:	8821      	ldrh	r1, [r4, #0]
 80076f4:	4849      	ldr	r0, [pc, #292]	; (800781c <tcp_handle+0x2bc>)
 80076f6:	f004 fe21 	bl	800c33c <_init_tcb>
 80076fa:	2301      	movs	r3, #1
 80076fc:	e7c8      	b.n	8007690 <tcp_handle+0x130>
 80076fe:	6963      	ldr	r3, [r4, #20]
 8007700:	9301      	str	r3, [sp, #4]
 8007702:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007704:	9302      	str	r3, [sp, #8]
 8007706:	2310      	movs	r3, #16
 8007708:	4844      	ldr	r0, [pc, #272]	; (800781c <tcp_handle+0x2bc>)
 800770a:	a901      	add	r1, sp, #4
 800770c:	f88d 300c 	strb.w	r3, [sp, #12]
 8007710:	f004 fe5e 	bl	800c3d0 <_tcp_send_package>
 8007714:	e78d      	b.n	8007632 <tcp_handle+0xd2>
 8007716:	0781      	lsls	r1, r0, #30
 8007718:	d505      	bpl.n	8007726 <tcp_handle+0x1c6>
 800771a:	2a03      	cmp	r2, #3
 800771c:	d0ed      	beq.n	80076fa <tcp_handle+0x19a>
 800771e:	4628      	mov	r0, r5
 8007720:	493e      	ldr	r1, [pc, #248]	; (800781c <tcp_handle+0x2bc>)
 8007722:	f004 ff03 	bl	800c52c <_send_reset>
 8007726:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800772a:	06da      	lsls	r2, r3, #27
 800772c:	d581      	bpl.n	8007632 <tcp_handle+0xd2>
 800772e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007732:	3b03      	subs	r3, #3
 8007734:	2b07      	cmp	r3, #7
 8007736:	d818      	bhi.n	800776a <tcp_handle+0x20a>
 8007738:	e8df f003 	tbb	[pc, r3]
 800773c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007740:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 8007744:	6923      	ldr	r3, [r4, #16]
 8007746:	1b9b      	subs	r3, r3, r6
 8007748:	2b00      	cmp	r3, #0
 800774a:	dc0a      	bgt.n	8007762 <tcp_handle+0x202>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	1af3      	subs	r3, r6, r3
 8007750:	2b00      	cmp	r3, #0
 8007752:	dc06      	bgt.n	8007762 <tcp_handle+0x202>
 8007754:	2304      	movs	r3, #4
 8007756:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800775a:	f8c4 a018 	str.w	sl, [r4, #24]
 800775e:	6126      	str	r6, [r4, #16]
 8007760:	e796      	b.n	8007690 <tcp_handle+0x130>
 8007762:	4628      	mov	r0, r5
 8007764:	492d      	ldr	r1, [pc, #180]	; (800781c <tcp_handle+0x2bc>)
 8007766:	f004 fee1 	bl	800c52c <_send_reset>
 800776a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800776e:	3b04      	subs	r3, #4
 8007770:	2b02      	cmp	r3, #2
 8007772:	d830      	bhi.n	80077d6 <tcp_handle+0x276>
 8007774:	f1b8 0f00 	cmp.w	r8, #0
 8007778:	d02d      	beq.n	80077d6 <tcp_handle+0x276>
 800777a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800777c:	42bb      	cmp	r3, r7
 800777e:	f040 8092 	bne.w	80078a6 <tcp_handle+0x346>
 8007782:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8007786:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007824 <tcp_handle+0x2c4>
 800778a:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800778e:	f8ba 7000 	ldrh.w	r7, [sl]
 8007792:	4642      	mov	r2, r8
 8007794:	435f      	muls	r7, r3
 8007796:	1d38      	adds	r0, r7, #4
 8007798:	4449      	add	r1, r9
 800779a:	4450      	add	r0, sl
 800779c:	f004 fde8 	bl	800c370 <memcpy.isra.0>
 80077a0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077a4:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077a8:	8722      	strh	r2, [r4, #56]	; 0x38
 80077aa:	6962      	ldr	r2, [r4, #20]
 80077ac:	4443      	add	r3, r8
 80077ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077b2:	6363      	str	r3, [r4, #52]	; 0x34
 80077b4:	2310      	movs	r3, #16
 80077b6:	4457      	add	r7, sl
 80077b8:	4818      	ldr	r0, [pc, #96]	; (800781c <tcp_handle+0x2bc>)
 80077ba:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 80077be:	a901      	add	r1, sp, #4
 80077c0:	f88d 300c 	strb.w	r3, [sp, #12]
 80077c4:	f004 fe04 	bl	800c3d0 <_tcp_send_package>
 80077c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80077cc:	3301      	adds	r3, #1
 80077ce:	f003 0301 	and.w	r3, r3, #1
 80077d2:	f8aa 3000 	strh.w	r3, [sl]
 80077d6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077da:	2b02      	cmp	r3, #2
 80077dc:	f67f af29 	bls.w	8007632 <tcp_handle+0xd2>
 80077e0:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 80077e4:	07db      	lsls	r3, r3, #31
 80077e6:	f57f af24 	bpl.w	8007632 <tcp_handle+0xd2>
 80077ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ec:	6962      	ldr	r2, [r4, #20]
 80077ee:	3301      	adds	r3, #1
 80077f0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80077f4:	6363      	str	r3, [r4, #52]	; 0x34
 80077f6:	2310      	movs	r3, #16
 80077f8:	4808      	ldr	r0, [pc, #32]	; (800781c <tcp_handle+0x2bc>)
 80077fa:	a901      	add	r1, sp, #4
 80077fc:	f88d 300c 	strb.w	r3, [sp, #12]
 8007800:	f004 fde6 	bl	800c3d0 <_tcp_send_package>
 8007804:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007808:	2b05      	cmp	r3, #5
 800780a:	d054      	beq.n	80078b6 <tcp_handle+0x356>
 800780c:	d84e      	bhi.n	80078ac <tcp_handle+0x34c>
 800780e:	3b03      	subs	r3, #3
 8007810:	2b01      	cmp	r3, #1
 8007812:	f63f af0e 	bhi.w	8007632 <tcp_handle+0xd2>
 8007816:	2307      	movs	r3, #7
 8007818:	e73a      	b.n	8007690 <tcp_handle+0x130>
 800781a:	bf00      	nop
 800781c:	2000275c 	andcs	r2, r0, ip, asr r7
 8007820:	20002764 	andcs	r2, r0, r4, ror #14
 8007824:	20001bec 	andcs	r1, r0, ip, ror #23
 8007828:	6923      	ldr	r3, [r4, #16]
 800782a:	1b99      	subs	r1, r3, r6
 800782c:	d513      	bpl.n	8007856 <tcp_handle+0x2f6>
 800782e:	6962      	ldr	r2, [r4, #20]
 8007830:	1ab2      	subs	r2, r6, r2
 8007832:	2a00      	cmp	r2, #0
 8007834:	dc0f      	bgt.n	8007856 <tcp_handle+0x2f6>
 8007836:	6126      	str	r6, [r4, #16]
 8007838:	6a23      	ldr	r3, [r4, #32]
 800783a:	1bda      	subs	r2, r3, r7
 800783c:	2a00      	cmp	r2, #0
 800783e:	db05      	blt.n	800784c <tcp_handle+0x2ec>
 8007840:	42bb      	cmp	r3, r7
 8007842:	d192      	bne.n	800776a <tcp_handle+0x20a>
 8007844:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007846:	1b9b      	subs	r3, r3, r6
 8007848:	2b00      	cmp	r3, #0
 800784a:	dc8e      	bgt.n	800776a <tcp_handle+0x20a>
 800784c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8007850:	f8c4 a018 	str.w	sl, [r4, #24]
 8007854:	e789      	b.n	800776a <tcp_handle+0x20a>
 8007856:	1af3      	subs	r3, r6, r3
 8007858:	2b00      	cmp	r3, #0
 800785a:	dc06      	bgt.n	800786a <tcp_handle+0x30a>
 800785c:	2900      	cmp	r1, #0
 800785e:	dc84      	bgt.n	800776a <tcp_handle+0x20a>
 8007860:	6963      	ldr	r3, [r4, #20]
 8007862:	1af3      	subs	r3, r6, r3
 8007864:	2b00      	cmp	r3, #0
 8007866:	dc80      	bgt.n	800776a <tcp_handle+0x20a>
 8007868:	e7e6      	b.n	8007838 <tcp_handle+0x2d8>
 800786a:	6963      	ldr	r3, [r4, #20]
 800786c:	1b9a      	subs	r2, r3, r6
 800786e:	2a00      	cmp	r2, #0
 8007870:	f6bf af7b 	bge.w	800776a <tcp_handle+0x20a>
 8007874:	e744      	b.n	8007700 <tcp_handle+0x1a0>
 8007876:	6963      	ldr	r3, [r4, #20]
 8007878:	42b3      	cmp	r3, r6
 800787a:	f47f af76 	bne.w	800776a <tcp_handle+0x20a>
 800787e:	8821      	ldrh	r1, [r4, #0]
 8007880:	480f      	ldr	r0, [pc, #60]	; (80078c0 <tcp_handle+0x360>)
 8007882:	f004 fd5b 	bl	800c33c <_init_tcb>
 8007886:	e770      	b.n	800776a <tcp_handle+0x20a>
 8007888:	6963      	ldr	r3, [r4, #20]
 800788a:	42b3      	cmp	r3, r6
 800788c:	f47f af6d 	bne.w	800776a <tcp_handle+0x20a>
 8007890:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007892:	480b      	ldr	r0, [pc, #44]	; (80078c0 <tcp_handle+0x360>)
 8007894:	9302      	str	r3, [sp, #8]
 8007896:	2310      	movs	r3, #16
 8007898:	a901      	add	r1, sp, #4
 800789a:	9601      	str	r6, [sp, #4]
 800789c:	f88d 300c 	strb.w	r3, [sp, #12]
 80078a0:	f004 fd96 	bl	800c3d0 <_tcp_send_package>
 80078a4:	e761      	b.n	800776a <tcp_handle+0x20a>
 80078a6:	6962      	ldr	r2, [r4, #20]
 80078a8:	9201      	str	r2, [sp, #4]
 80078aa:	e72b      	b.n	8007704 <tcp_handle+0x1a4>
 80078ac:	2b06      	cmp	r3, #6
 80078ae:	f47f aec0 	bne.w	8007632 <tcp_handle+0xd2>
 80078b2:	230a      	movs	r3, #10
 80078b4:	e6ec      	b.n	8007690 <tcp_handle+0x130>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	42b3      	cmp	r3, r6
 80078ba:	d0fa      	beq.n	80078b2 <tcp_handle+0x352>
 80078bc:	2308      	movs	r3, #8
 80078be:	e6e7      	b.n	8007690 <tcp_handle+0x130>
 80078c0:	2000275c 	andcs	r2, r0, ip, asr r7

080078c4 <udp_handle>:
 80078c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80078c8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80078ca:	4607      	mov	r7, r0
 80078cc:	ba5b      	rev16	r3, r3
 80078ce:	b29b      	uxth	r3, r3
 80078d0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 80078d4:	2a01      	cmp	r2, #1
 80078d6:	d904      	bls.n	80078e2 <udp_handle+0x1e>
 80078d8:	2b7b      	cmp	r3, #123	; 0x7b
 80078da:	d002      	beq.n	80078e2 <udp_handle+0x1e>
 80078dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078e0:	d308      	bcc.n	80078f4 <udp_handle+0x30>
 80078e2:	2400      	movs	r4, #0
 80078e4:	4a1f      	ldr	r2, [pc, #124]	; (8007964 <udp_handle+0xa0>)
 80078e6:	f852 1b04 	ldr.w	r1, [r2], #4
 80078ea:	4299      	cmp	r1, r3
 80078ec:	d005      	beq.n	80078fa <udp_handle+0x36>
 80078ee:	3401      	adds	r4, #1
 80078f0:	2c08      	cmp	r4, #8
 80078f2:	d1f8      	bne.n	80078e6 <udp_handle+0x22>
 80078f4:	b002      	add	sp, #8
 80078f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078fa:	f640 3394 	movw	r3, #2964	; 0xb94
 80078fe:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007900:	435c      	muls	r4, r3
 8007902:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007906:	ba76      	rev16	r6, r6
 8007908:	3e08      	subs	r6, #8
 800790a:	b2b6      	uxth	r6, r6
 800790c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007910:	bf28      	it	cs
 8007912:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007916:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8007968 <udp_handle+0xa4>
 800791a:	1d20      	adds	r0, r4, #4
 800791c:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007920:	4632      	mov	r2, r6
 8007922:	435d      	muls	r5, r3
 8007924:	4428      	add	r0, r5
 8007926:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800792a:	4440      	add	r0, r8
 800792c:	f004 feac 	bl	800c688 <memcpy.isra.0>
 8007930:	2204      	movs	r2, #4
 8007932:	f107 011a 	add.w	r1, r7, #26
 8007936:	eb0d 0002 	add.w	r0, sp, r2
 800793a:	f004 fea5 	bl	800c688 <memcpy.isra.0>
 800793e:	9a01      	ldr	r2, [sp, #4]
 8007940:	192b      	adds	r3, r5, r4
 8007942:	4443      	add	r3, r8
 8007944:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007948:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800794a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800794e:	ba52      	rev16	r2, r2
 8007950:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8007954:	f838 3004 	ldrh.w	r3, [r8, r4]
 8007958:	3301      	adds	r3, #1
 800795a:	f003 0301 	and.w	r3, r3, #1
 800795e:	f828 3004 	strh.w	r3, [r8, r4]
 8007962:	e7c7      	b.n	80078f4 <udp_handle+0x30>
 8007964:	20002d9c 	mulcs	r0, ip, sp
 8007968:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800796c <arp_handle>:
 800796c:	8a83      	ldrh	r3, [r0, #20]
 800796e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007972:	d003      	beq.n	800797c <arp_handle+0x10>
 8007974:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007978:	d002      	beq.n	8007980 <arp_handle+0x14>
 800797a:	4770      	bx	lr
 800797c:	f006 b820 	b.w	800d9c0 <arp_handle_request>
 8007980:	f006 b846 	b.w	800da10 <arp_handle_reply>

08007984 <igmp_handle>:
 8007984:	7b83      	ldrb	r3, [r0, #14]
 8007986:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800798a:	2b45      	cmp	r3, #69	; 0x45
 800798c:	d116      	bne.n	80079bc <igmp_handle+0x38>
 800798e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007992:	2b11      	cmp	r3, #17
 8007994:	d112      	bne.n	80079bc <igmp_handle+0x38>
 8007996:	4b20      	ldr	r3, [pc, #128]	; (8007a18 <igmp_handle+0x94>)
 8007998:	f100 051e 	add.w	r5, r0, #30
 800799c:	9300      	str	r3, [sp, #0]
 800799e:	466a      	mov	r2, sp
 80079a0:	462b      	mov	r3, r5
 80079a2:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079a6:	42b3      	cmp	r3, r6
 80079a8:	d10b      	bne.n	80079c2 <igmp_handle+0x3e>
 80079aa:	2401      	movs	r4, #1
 80079ac:	2100      	movs	r1, #0
 80079ae:	f04f 0c01 	mov.w	ip, #1
 80079b2:	4b1a      	ldr	r3, [pc, #104]	; (8007a1c <igmp_handle+0x98>)
 80079b4:	4a1a      	ldr	r2, [pc, #104]	; (8007a20 <igmp_handle+0x9c>)
 80079b6:	681f      	ldr	r7, [r3, #0]
 80079b8:	428f      	cmp	r7, r1
 80079ba:	d10a      	bne.n	80079d2 <igmp_handle+0x4e>
 80079bc:	b003      	add	sp, #12
 80079be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80079c2:	f813 4b01 	ldrb.w	r4, [r3], #1
 80079c6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80079ca:	428c      	cmp	r4, r1
 80079cc:	d0eb      	beq.n	80079a6 <igmp_handle+0x22>
 80079ce:	2400      	movs	r4, #0
 80079d0:	e7ec      	b.n	80079ac <igmp_handle+0x28>
 80079d2:	6813      	ldr	r3, [r2, #0]
 80079d4:	9301      	str	r3, [sp, #4]
 80079d6:	b924      	cbnz	r4, 80079e2 <igmp_handle+0x5e>
 80079d8:	462b      	mov	r3, r5
 80079da:	f10d 0e04 	add.w	lr, sp, #4
 80079de:	42b3      	cmp	r3, r6
 80079e0:	d10e      	bne.n	8007a00 <igmp_handle+0x7c>
 80079e2:	f892 e005 	ldrb.w	lr, [r2, #5]
 80079e6:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80079ea:	f1be 0f01 	cmp.w	lr, #1
 80079ee:	d110      	bne.n	8007a12 <igmp_handle+0x8e>
 80079f0:	f892 e004 	ldrb.w	lr, [r2, #4]
 80079f4:	459e      	cmp	lr, r3
 80079f6:	d909      	bls.n	8007a0c <igmp_handle+0x88>
 80079f8:	085b      	lsrs	r3, r3, #1
 80079fa:	3301      	adds	r3, #1
 80079fc:	7113      	strb	r3, [r2, #4]
 80079fe:	e005      	b.n	8007a0c <igmp_handle+0x88>
 8007a00:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a04:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a08:	45c1      	cmp	r9, r8
 8007a0a:	d0e8      	beq.n	80079de <igmp_handle+0x5a>
 8007a0c:	3101      	adds	r1, #1
 8007a0e:	3208      	adds	r2, #8
 8007a10:	e7d2      	b.n	80079b8 <igmp_handle+0x34>
 8007a12:	f882 c005 	strb.w	ip, [r2, #5]
 8007a16:	e7ef      	b.n	80079f8 <igmp_handle+0x74>
 8007a18:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a1c:	20009a4c 	andcs	r9, r0, ip, asr #20
 8007a20:	20009928 	andcs	r9, r0, r8, lsr #18

08007a24 <ip_handle>:
 8007a24:	7b82      	ldrb	r2, [r0, #14]
 8007a26:	7dc3      	ldrb	r3, [r0, #23]
 8007a28:	2a45      	cmp	r2, #69	; 0x45
 8007a2a:	d003      	beq.n	8007a34 <ip_handle+0x10>
 8007a2c:	2b02      	cmp	r3, #2
 8007a2e:	d111      	bne.n	8007a54 <ip_handle+0x30>
 8007a30:	f7ff bfa8 	b.w	8007984 <igmp_handle>
 8007a34:	2b06      	cmp	r3, #6
 8007a36:	d00b      	beq.n	8007a50 <ip_handle+0x2c>
 8007a38:	d804      	bhi.n	8007a44 <ip_handle+0x20>
 8007a3a:	2b01      	cmp	r3, #1
 8007a3c:	d006      	beq.n	8007a4c <ip_handle+0x28>
 8007a3e:	2b02      	cmp	r3, #2
 8007a40:	d0f6      	beq.n	8007a30 <ip_handle+0xc>
 8007a42:	4770      	bx	lr
 8007a44:	2b11      	cmp	r3, #17
 8007a46:	d105      	bne.n	8007a54 <ip_handle+0x30>
 8007a48:	f7ff bf3c 	b.w	80078c4 <udp_handle>
 8007a4c:	f000 b804 	b.w	8007a58 <icmp_handle>
 8007a50:	f7ff bd86 	b.w	8007560 <tcp_handle>
 8007a54:	4770      	bx	lr
	...

08007a58 <icmp_handle>:
 8007a58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a5a:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007a5e:	4604      	mov	r4, r0
 8007a60:	2b08      	cmp	r3, #8
 8007a62:	d13e      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a64:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007a68:	2d00      	cmp	r5, #0
 8007a6a:	d13a      	bne.n	8007ae2 <icmp_handle+0x8a>
 8007a6c:	1d86      	adds	r6, r0, #6
 8007a6e:	4631      	mov	r1, r6
 8007a70:	2206      	movs	r2, #6
 8007a72:	f006 fb65 	bl	800e140 <memcpy.isra.0>
 8007a76:	4630      	mov	r0, r6
 8007a78:	2206      	movs	r2, #6
 8007a7a:	491b      	ldr	r1, [pc, #108]	; (8007ae8 <icmp_handle+0x90>)
 8007a7c:	f006 fb60 	bl	800e140 <memcpy.isra.0>
 8007a80:	8a63      	ldrh	r3, [r4, #18]
 8007a82:	f104 061a 	add.w	r6, r4, #26
 8007a86:	43db      	mvns	r3, r3
 8007a88:	4631      	mov	r1, r6
 8007a8a:	2204      	movs	r2, #4
 8007a8c:	8263      	strh	r3, [r4, #18]
 8007a8e:	f104 001e 	add.w	r0, r4, #30
 8007a92:	f006 fb55 	bl	800e140 <memcpy.isra.0>
 8007a96:	2204      	movs	r2, #4
 8007a98:	4b14      	ldr	r3, [pc, #80]	; (8007aec <icmp_handle+0x94>)
 8007a9a:	eb0d 0102 	add.w	r1, sp, r2
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	4630      	mov	r0, r6
 8007aa2:	f104 060e 	add.w	r6, r4, #14
 8007aa6:	9301      	str	r3, [sp, #4]
 8007aa8:	f006 fb4a 	bl	800e140 <memcpy.isra.0>
 8007aac:	2114      	movs	r1, #20
 8007aae:	4630      	mov	r0, r6
 8007ab0:	7625      	strb	r5, [r4, #24]
 8007ab2:	7665      	strb	r5, [r4, #25]
 8007ab4:	f006 fb27 	bl	800e106 <net_chksum>
 8007ab8:	8a21      	ldrh	r1, [r4, #16]
 8007aba:	8320      	strh	r0, [r4, #24]
 8007abc:	ba49      	rev16	r1, r1
 8007abe:	b289      	uxth	r1, r1
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007ac6:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007aca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007ace:	f006 fb1a 	bl	800e106 <net_chksum>
 8007ad2:	8a21      	ldrh	r1, [r4, #16]
 8007ad4:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007ad6:	ba49      	rev16	r1, r1
 8007ad8:	b289      	uxth	r1, r1
 8007ada:	4620      	mov	r0, r4
 8007adc:	310e      	adds	r1, #14
 8007ade:	f008 fa29 	bl	800ff34 <emac_eth_send>
 8007ae2:	b002      	add	sp, #8
 8007ae4:	bd70      	pop	{r4, r5, r6, pc}
 8007ae6:	bf00      	nop
 8007ae8:	20001bcc 	andcs	r1, r0, ip, asr #23
 8007aec:	20001bc0 	andcs	r1, r0, r0, asr #23

08007af0 <__aeabi_uldivmod>:
 8007af0:	b953      	cbnz	r3, 8007b08 <__aeabi_uldivmod+0x18>
 8007af2:	b94a      	cbnz	r2, 8007b08 <__aeabi_uldivmod+0x18>
 8007af4:	2900      	cmp	r1, #0
 8007af6:	bf08      	it	eq
 8007af8:	2800      	cmpeq	r0, #0
 8007afa:	bf1c      	itt	ne
 8007afc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007b00:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007b04:	f000 b976 	b.w	8007df4 <__aeabi_idiv0>
 8007b08:	f1ad 0c08 	sub.w	ip, sp, #8
 8007b0c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007b10:	f000 f806 	bl	8007b20 <__udivmoddi4>
 8007b14:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007b18:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007b1c:	b004      	add	sp, #16
 8007b1e:	4770      	bx	lr

08007b20 <__udivmoddi4>:
 8007b20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007b24:	9e08      	ldr	r6, [sp, #32]
 8007b26:	460d      	mov	r5, r1
 8007b28:	4604      	mov	r4, r0
 8007b2a:	4688      	mov	r8, r1
 8007b2c:	2b00      	cmp	r3, #0
 8007b2e:	d14d      	bne.n	8007bcc <__udivmoddi4+0xac>
 8007b30:	428a      	cmp	r2, r1
 8007b32:	4694      	mov	ip, r2
 8007b34:	d968      	bls.n	8007c08 <__udivmoddi4+0xe8>
 8007b36:	fab2 f282 	clz	r2, r2
 8007b3a:	b152      	cbz	r2, 8007b52 <__udivmoddi4+0x32>
 8007b3c:	fa01 f302 	lsl.w	r3, r1, r2
 8007b40:	f1c2 0120 	rsb	r1, r2, #32
 8007b44:	fa20 f101 	lsr.w	r1, r0, r1
 8007b48:	fa0c fc02 	lsl.w	ip, ip, r2
 8007b4c:	ea41 0803 	orr.w	r8, r1, r3
 8007b50:	4094      	lsls	r4, r2
 8007b52:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007b56:	fbb8 f7f1 	udiv	r7, r8, r1
 8007b5a:	fa1f fe8c 	uxth.w	lr, ip
 8007b5e:	fb01 8817 	mls	r8, r1, r7, r8
 8007b62:	fb07 f00e 	mul.w	r0, r7, lr
 8007b66:	0c23      	lsrs	r3, r4, #16
 8007b68:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007b6c:	4298      	cmp	r0, r3
 8007b6e:	d90a      	bls.n	8007b86 <__udivmoddi4+0x66>
 8007b70:	eb1c 0303 	adds.w	r3, ip, r3
 8007b74:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007b78:	f080 811e 	bcs.w	8007db8 <__udivmoddi4+0x298>
 8007b7c:	4298      	cmp	r0, r3
 8007b7e:	f240 811b 	bls.w	8007db8 <__udivmoddi4+0x298>
 8007b82:	3f02      	subs	r7, #2
 8007b84:	4463      	add	r3, ip
 8007b86:	1a1b      	subs	r3, r3, r0
 8007b88:	fbb3 f0f1 	udiv	r0, r3, r1
 8007b8c:	fb01 3310 	mls	r3, r1, r0, r3
 8007b90:	fb00 fe0e 	mul.w	lr, r0, lr
 8007b94:	b2a4      	uxth	r4, r4
 8007b96:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007b9a:	45a6      	cmp	lr, r4
 8007b9c:	d90a      	bls.n	8007bb4 <__udivmoddi4+0x94>
 8007b9e:	eb1c 0404 	adds.w	r4, ip, r4
 8007ba2:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007ba6:	f080 8109 	bcs.w	8007dbc <__udivmoddi4+0x29c>
 8007baa:	45a6      	cmp	lr, r4
 8007bac:	f240 8106 	bls.w	8007dbc <__udivmoddi4+0x29c>
 8007bb0:	4464      	add	r4, ip
 8007bb2:	3802      	subs	r0, #2
 8007bb4:	2100      	movs	r1, #0
 8007bb6:	eba4 040e 	sub.w	r4, r4, lr
 8007bba:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007bbe:	b11e      	cbz	r6, 8007bc8 <__udivmoddi4+0xa8>
 8007bc0:	2300      	movs	r3, #0
 8007bc2:	40d4      	lsrs	r4, r2
 8007bc4:	e9c6 4300 	strd	r4, r3, [r6]
 8007bc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007bcc:	428b      	cmp	r3, r1
 8007bce:	d908      	bls.n	8007be2 <__udivmoddi4+0xc2>
 8007bd0:	2e00      	cmp	r6, #0
 8007bd2:	f000 80ee 	beq.w	8007db2 <__udivmoddi4+0x292>
 8007bd6:	2100      	movs	r1, #0
 8007bd8:	e9c6 0500 	strd	r0, r5, [r6]
 8007bdc:	4608      	mov	r0, r1
 8007bde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007be2:	fab3 f183 	clz	r1, r3
 8007be6:	2900      	cmp	r1, #0
 8007be8:	d14a      	bne.n	8007c80 <__udivmoddi4+0x160>
 8007bea:	42ab      	cmp	r3, r5
 8007bec:	d302      	bcc.n	8007bf4 <__udivmoddi4+0xd4>
 8007bee:	4282      	cmp	r2, r0
 8007bf0:	f200 80fc 	bhi.w	8007dec <__udivmoddi4+0x2cc>
 8007bf4:	1a84      	subs	r4, r0, r2
 8007bf6:	eb65 0303 	sbc.w	r3, r5, r3
 8007bfa:	2001      	movs	r0, #1
 8007bfc:	4698      	mov	r8, r3
 8007bfe:	2e00      	cmp	r6, #0
 8007c00:	d0e2      	beq.n	8007bc8 <__udivmoddi4+0xa8>
 8007c02:	e9c6 4800 	strd	r4, r8, [r6]
 8007c06:	e7df      	b.n	8007bc8 <__udivmoddi4+0xa8>
 8007c08:	b902      	cbnz	r2, 8007c0c <__udivmoddi4+0xec>
 8007c0a:	deff      	udf	#255	; 0xff
 8007c0c:	fab2 f282 	clz	r2, r2
 8007c10:	2a00      	cmp	r2, #0
 8007c12:	f040 8091 	bne.w	8007d38 <__udivmoddi4+0x218>
 8007c16:	eba1 000c 	sub.w	r0, r1, ip
 8007c1a:	2101      	movs	r1, #1
 8007c1c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007c20:	fa1f fe8c 	uxth.w	lr, ip
 8007c24:	fbb0 f3f7 	udiv	r3, r0, r7
 8007c28:	fb07 0013 	mls	r0, r7, r3, r0
 8007c2c:	0c25      	lsrs	r5, r4, #16
 8007c2e:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007c32:	fb0e f003 	mul.w	r0, lr, r3
 8007c36:	42a8      	cmp	r0, r5
 8007c38:	d908      	bls.n	8007c4c <__udivmoddi4+0x12c>
 8007c3a:	eb1c 0505 	adds.w	r5, ip, r5
 8007c3e:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007c42:	d202      	bcs.n	8007c4a <__udivmoddi4+0x12a>
 8007c44:	42a8      	cmp	r0, r5
 8007c46:	f200 80ce 	bhi.w	8007de6 <__udivmoddi4+0x2c6>
 8007c4a:	4643      	mov	r3, r8
 8007c4c:	1a2d      	subs	r5, r5, r0
 8007c4e:	fbb5 f0f7 	udiv	r0, r5, r7
 8007c52:	fb07 5510 	mls	r5, r7, r0, r5
 8007c56:	fb0e fe00 	mul.w	lr, lr, r0
 8007c5a:	b2a4      	uxth	r4, r4
 8007c5c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8007c60:	45a6      	cmp	lr, r4
 8007c62:	d908      	bls.n	8007c76 <__udivmoddi4+0x156>
 8007c64:	eb1c 0404 	adds.w	r4, ip, r4
 8007c68:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007c6c:	d202      	bcs.n	8007c74 <__udivmoddi4+0x154>
 8007c6e:	45a6      	cmp	lr, r4
 8007c70:	f200 80b6 	bhi.w	8007de0 <__udivmoddi4+0x2c0>
 8007c74:	4628      	mov	r0, r5
 8007c76:	eba4 040e 	sub.w	r4, r4, lr
 8007c7a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007c7e:	e79e      	b.n	8007bbe <__udivmoddi4+0x9e>
 8007c80:	f1c1 0720 	rsb	r7, r1, #32
 8007c84:	408b      	lsls	r3, r1
 8007c86:	fa22 fc07 	lsr.w	ip, r2, r7
 8007c8a:	ea4c 0c03 	orr.w	ip, ip, r3
 8007c8e:	fa25 fa07 	lsr.w	sl, r5, r7
 8007c92:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8007c96:	fbba f8f9 	udiv	r8, sl, r9
 8007c9a:	fa20 f307 	lsr.w	r3, r0, r7
 8007c9e:	fb09 aa18 	mls	sl, r9, r8, sl
 8007ca2:	408d      	lsls	r5, r1
 8007ca4:	fa1f fe8c 	uxth.w	lr, ip
 8007ca8:	431d      	orrs	r5, r3
 8007caa:	fa00 f301 	lsl.w	r3, r0, r1
 8007cae:	fb08 f00e 	mul.w	r0, r8, lr
 8007cb2:	0c2c      	lsrs	r4, r5, #16
 8007cb4:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007cb8:	42a0      	cmp	r0, r4
 8007cba:	fa02 f201 	lsl.w	r2, r2, r1
 8007cbe:	d90b      	bls.n	8007cd8 <__udivmoddi4+0x1b8>
 8007cc0:	eb1c 0404 	adds.w	r4, ip, r4
 8007cc4:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007cc8:	f080 8088 	bcs.w	8007ddc <__udivmoddi4+0x2bc>
 8007ccc:	42a0      	cmp	r0, r4
 8007cce:	f240 8085 	bls.w	8007ddc <__udivmoddi4+0x2bc>
 8007cd2:	f1a8 0802 	sub.w	r8, r8, #2
 8007cd6:	4464      	add	r4, ip
 8007cd8:	1a24      	subs	r4, r4, r0
 8007cda:	fbb4 f0f9 	udiv	r0, r4, r9
 8007cde:	fb09 4410 	mls	r4, r9, r0, r4
 8007ce2:	fb00 fe0e 	mul.w	lr, r0, lr
 8007ce6:	b2ad      	uxth	r5, r5
 8007ce8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007cec:	45a6      	cmp	lr, r4
 8007cee:	d908      	bls.n	8007d02 <__udivmoddi4+0x1e2>
 8007cf0:	eb1c 0404 	adds.w	r4, ip, r4
 8007cf4:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007cf8:	d26c      	bcs.n	8007dd4 <__udivmoddi4+0x2b4>
 8007cfa:	45a6      	cmp	lr, r4
 8007cfc:	d96a      	bls.n	8007dd4 <__udivmoddi4+0x2b4>
 8007cfe:	3802      	subs	r0, #2
 8007d00:	4464      	add	r4, ip
 8007d02:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8007d06:	fba0 9502 	umull	r9, r5, r0, r2
 8007d0a:	eba4 040e 	sub.w	r4, r4, lr
 8007d0e:	42ac      	cmp	r4, r5
 8007d10:	46c8      	mov	r8, r9
 8007d12:	46ae      	mov	lr, r5
 8007d14:	d356      	bcc.n	8007dc4 <__udivmoddi4+0x2a4>
 8007d16:	d053      	beq.n	8007dc0 <__udivmoddi4+0x2a0>
 8007d18:	2e00      	cmp	r6, #0
 8007d1a:	d069      	beq.n	8007df0 <__udivmoddi4+0x2d0>
 8007d1c:	ebb3 0208 	subs.w	r2, r3, r8
 8007d20:	eb64 040e 	sbc.w	r4, r4, lr
 8007d24:	fa22 f301 	lsr.w	r3, r2, r1
 8007d28:	fa04 f707 	lsl.w	r7, r4, r7
 8007d2c:	431f      	orrs	r7, r3
 8007d2e:	40cc      	lsrs	r4, r1
 8007d30:	e9c6 7400 	strd	r7, r4, [r6]
 8007d34:	2100      	movs	r1, #0
 8007d36:	e747      	b.n	8007bc8 <__udivmoddi4+0xa8>
 8007d38:	fa0c fc02 	lsl.w	ip, ip, r2
 8007d3c:	f1c2 0120 	rsb	r1, r2, #32
 8007d40:	fa25 f301 	lsr.w	r3, r5, r1
 8007d44:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007d48:	fa20 f101 	lsr.w	r1, r0, r1
 8007d4c:	4095      	lsls	r5, r2
 8007d4e:	430d      	orrs	r5, r1
 8007d50:	fbb3 f1f7 	udiv	r1, r3, r7
 8007d54:	fb07 3311 	mls	r3, r7, r1, r3
 8007d58:	fa1f fe8c 	uxth.w	lr, ip
 8007d5c:	0c28      	lsrs	r0, r5, #16
 8007d5e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007d62:	fb01 f30e 	mul.w	r3, r1, lr
 8007d66:	4283      	cmp	r3, r0
 8007d68:	fa04 f402 	lsl.w	r4, r4, r2
 8007d6c:	d908      	bls.n	8007d80 <__udivmoddi4+0x260>
 8007d6e:	eb1c 0000 	adds.w	r0, ip, r0
 8007d72:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8007d76:	d22f      	bcs.n	8007dd8 <__udivmoddi4+0x2b8>
 8007d78:	4283      	cmp	r3, r0
 8007d7a:	d92d      	bls.n	8007dd8 <__udivmoddi4+0x2b8>
 8007d7c:	3902      	subs	r1, #2
 8007d7e:	4460      	add	r0, ip
 8007d80:	1ac0      	subs	r0, r0, r3
 8007d82:	fbb0 f3f7 	udiv	r3, r0, r7
 8007d86:	fb07 0013 	mls	r0, r7, r3, r0
 8007d8a:	b2ad      	uxth	r5, r5
 8007d8c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007d90:	fb03 f00e 	mul.w	r0, r3, lr
 8007d94:	42a8      	cmp	r0, r5
 8007d96:	d908      	bls.n	8007daa <__udivmoddi4+0x28a>
 8007d98:	eb1c 0505 	adds.w	r5, ip, r5
 8007d9c:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007da0:	d216      	bcs.n	8007dd0 <__udivmoddi4+0x2b0>
 8007da2:	42a8      	cmp	r0, r5
 8007da4:	d914      	bls.n	8007dd0 <__udivmoddi4+0x2b0>
 8007da6:	3b02      	subs	r3, #2
 8007da8:	4465      	add	r5, ip
 8007daa:	1a28      	subs	r0, r5, r0
 8007dac:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007db0:	e738      	b.n	8007c24 <__udivmoddi4+0x104>
 8007db2:	4631      	mov	r1, r6
 8007db4:	4630      	mov	r0, r6
 8007db6:	e707      	b.n	8007bc8 <__udivmoddi4+0xa8>
 8007db8:	462f      	mov	r7, r5
 8007dba:	e6e4      	b.n	8007b86 <__udivmoddi4+0x66>
 8007dbc:	4618      	mov	r0, r3
 8007dbe:	e6f9      	b.n	8007bb4 <__udivmoddi4+0x94>
 8007dc0:	454b      	cmp	r3, r9
 8007dc2:	d2a9      	bcs.n	8007d18 <__udivmoddi4+0x1f8>
 8007dc4:	ebb9 0802 	subs.w	r8, r9, r2
 8007dc8:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007dcc:	3801      	subs	r0, #1
 8007dce:	e7a3      	b.n	8007d18 <__udivmoddi4+0x1f8>
 8007dd0:	4643      	mov	r3, r8
 8007dd2:	e7ea      	b.n	8007daa <__udivmoddi4+0x28a>
 8007dd4:	4628      	mov	r0, r5
 8007dd6:	e794      	b.n	8007d02 <__udivmoddi4+0x1e2>
 8007dd8:	4641      	mov	r1, r8
 8007dda:	e7d1      	b.n	8007d80 <__udivmoddi4+0x260>
 8007ddc:	46d0      	mov	r8, sl
 8007dde:	e77b      	b.n	8007cd8 <__udivmoddi4+0x1b8>
 8007de0:	4464      	add	r4, ip
 8007de2:	3802      	subs	r0, #2
 8007de4:	e747      	b.n	8007c76 <__udivmoddi4+0x156>
 8007de6:	3b02      	subs	r3, #2
 8007de8:	4465      	add	r5, ip
 8007dea:	e72f      	b.n	8007c4c <__udivmoddi4+0x12c>
 8007dec:	4608      	mov	r0, r1
 8007dee:	e706      	b.n	8007bfe <__udivmoddi4+0xde>
 8007df0:	4631      	mov	r1, r6
 8007df2:	e6e9      	b.n	8007bc8 <__udivmoddi4+0xa8>

08007df4 <__aeabi_idiv0>:
 8007df4:	4770      	bx	lr
 8007df6:	bf00      	nop

08007df8 <__aeabi_fmul>:
 8007df8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007dfc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007e00:	bf1e      	ittt	ne
 8007e02:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007e06:	ea92 0f0c 	teqne	r2, ip
 8007e0a:	ea93 0f0c 	teqne	r3, ip
 8007e0e:	d06f      	beq.n	8007ef0 <__aeabi_fmul+0xf8>
 8007e10:	441a      	add	r2, r3
 8007e12:	ea80 0c01 	eor.w	ip, r0, r1
 8007e16:	0240      	lsls	r0, r0, #9
 8007e18:	bf18      	it	ne
 8007e1a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007e1e:	d01e      	beq.n	8007e5e <__aeabi_fmul+0x66>
 8007e20:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007e24:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007e28:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007e2c:	fba0 3101 	umull	r3, r1, r0, r1
 8007e30:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007e34:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007e38:	bf3e      	ittt	cc
 8007e3a:	0049      	lslcc	r1, r1, #1
 8007e3c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007e40:	005b      	lslcc	r3, r3, #1
 8007e42:	ea40 0001 	orr.w	r0, r0, r1
 8007e46:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007e4a:	2afd      	cmp	r2, #253	; 0xfd
 8007e4c:	d81d      	bhi.n	8007e8a <__aeabi_fmul+0x92>
 8007e4e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007e52:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007e56:	bf08      	it	eq
 8007e58:	f020 0001 	biceq.w	r0, r0, #1
 8007e5c:	4770      	bx	lr
 8007e5e:	f090 0f00 	teq	r0, #0
 8007e62:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007e66:	bf08      	it	eq
 8007e68:	0249      	lsleq	r1, r1, #9
 8007e6a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007e6e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007e72:	3a7f      	subs	r2, #127	; 0x7f
 8007e74:	bfc2      	ittt	gt
 8007e76:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007e7a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007e7e:	4770      	bxgt	lr
 8007e80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007e84:	f04f 0300 	mov.w	r3, #0
 8007e88:	3a01      	subs	r2, #1
 8007e8a:	dc5d      	bgt.n	8007f48 <__aeabi_fmul+0x150>
 8007e8c:	f112 0f19 	cmn.w	r2, #25
 8007e90:	bfdc      	itt	le
 8007e92:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007e96:	4770      	bxle	lr
 8007e98:	f1c2 0200 	rsb	r2, r2, #0
 8007e9c:	0041      	lsls	r1, r0, #1
 8007e9e:	fa21 f102 	lsr.w	r1, r1, r2
 8007ea2:	f1c2 0220 	rsb	r2, r2, #32
 8007ea6:	fa00 fc02 	lsl.w	ip, r0, r2
 8007eaa:	ea5f 0031 	movs.w	r0, r1, rrx
 8007eae:	f140 0000 	adc.w	r0, r0, #0
 8007eb2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007eb6:	bf08      	it	eq
 8007eb8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007ebc:	4770      	bx	lr
 8007ebe:	f092 0f00 	teq	r2, #0
 8007ec2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007ec6:	bf02      	ittt	eq
 8007ec8:	0040      	lsleq	r0, r0, #1
 8007eca:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007ece:	3a01      	subeq	r2, #1
 8007ed0:	d0f9      	beq.n	8007ec6 <__aeabi_fmul+0xce>
 8007ed2:	ea40 000c 	orr.w	r0, r0, ip
 8007ed6:	f093 0f00 	teq	r3, #0
 8007eda:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007ede:	bf02      	ittt	eq
 8007ee0:	0049      	lsleq	r1, r1, #1
 8007ee2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007ee6:	3b01      	subeq	r3, #1
 8007ee8:	d0f9      	beq.n	8007ede <__aeabi_fmul+0xe6>
 8007eea:	ea41 010c 	orr.w	r1, r1, ip
 8007eee:	e78f      	b.n	8007e10 <__aeabi_fmul+0x18>
 8007ef0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007ef4:	ea92 0f0c 	teq	r2, ip
 8007ef8:	bf18      	it	ne
 8007efa:	ea93 0f0c 	teqne	r3, ip
 8007efe:	d00a      	beq.n	8007f16 <__aeabi_fmul+0x11e>
 8007f00:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007f04:	bf18      	it	ne
 8007f06:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007f0a:	d1d8      	bne.n	8007ebe <__aeabi_fmul+0xc6>
 8007f0c:	ea80 0001 	eor.w	r0, r0, r1
 8007f10:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007f14:	4770      	bx	lr
 8007f16:	f090 0f00 	teq	r0, #0
 8007f1a:	bf17      	itett	ne
 8007f1c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007f20:	4608      	moveq	r0, r1
 8007f22:	f091 0f00 	teqne	r1, #0
 8007f26:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007f2a:	d014      	beq.n	8007f56 <__aeabi_fmul+0x15e>
 8007f2c:	ea92 0f0c 	teq	r2, ip
 8007f30:	d101      	bne.n	8007f36 <__aeabi_fmul+0x13e>
 8007f32:	0242      	lsls	r2, r0, #9
 8007f34:	d10f      	bne.n	8007f56 <__aeabi_fmul+0x15e>
 8007f36:	ea93 0f0c 	teq	r3, ip
 8007f3a:	d103      	bne.n	8007f44 <__aeabi_fmul+0x14c>
 8007f3c:	024b      	lsls	r3, r1, #9
 8007f3e:	bf18      	it	ne
 8007f40:	4608      	movne	r0, r1
 8007f42:	d108      	bne.n	8007f56 <__aeabi_fmul+0x15e>
 8007f44:	ea80 0001 	eor.w	r0, r0, r1
 8007f48:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007f4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007f50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007f54:	4770      	bx	lr
 8007f56:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007f5a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007f5e:	4770      	bx	lr

08007f60 <__gesf2>:
 8007f60:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007f64:	e006      	b.n	8007f74 <__cmpsf2+0x4>
 8007f66:	bf00      	nop

08007f68 <__lesf2>:
 8007f68:	f04f 0c01 	mov.w	ip, #1
 8007f6c:	e002      	b.n	8007f74 <__cmpsf2+0x4>
 8007f6e:	bf00      	nop

08007f70 <__cmpsf2>:
 8007f70:	f04f 0c01 	mov.w	ip, #1
 8007f74:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007f78:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007f7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007f80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007f84:	bf18      	it	ne
 8007f86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007f8a:	d011      	beq.n	8007fb0 <__cmpsf2+0x40>
 8007f8c:	b001      	add	sp, #4
 8007f8e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007f92:	bf18      	it	ne
 8007f94:	ea90 0f01 	teqne	r0, r1
 8007f98:	bf58      	it	pl
 8007f9a:	ebb2 0003 	subspl.w	r0, r2, r3
 8007f9e:	bf88      	it	hi
 8007fa0:	17c8      	asrhi	r0, r1, #31
 8007fa2:	bf38      	it	cc
 8007fa4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007fa8:	bf18      	it	ne
 8007faa:	f040 0001 	orrne.w	r0, r0, #1
 8007fae:	4770      	bx	lr
 8007fb0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007fb4:	d102      	bne.n	8007fbc <__cmpsf2+0x4c>
 8007fb6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007fba:	d105      	bne.n	8007fc8 <__cmpsf2+0x58>
 8007fbc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007fc0:	d1e4      	bne.n	8007f8c <__cmpsf2+0x1c>
 8007fc2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007fc6:	d0e1      	beq.n	8007f8c <__cmpsf2+0x1c>
 8007fc8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007fcc:	4770      	bx	lr
 8007fce:	bf00      	nop

08007fd0 <__aeabi_cfrcmple>:
 8007fd0:	4684      	mov	ip, r0
 8007fd2:	4608      	mov	r0, r1
 8007fd4:	4661      	mov	r1, ip
 8007fd6:	e7ff      	b.n	8007fd8 <__aeabi_cfcmpeq>

08007fd8 <__aeabi_cfcmpeq>:
 8007fd8:	b50f      	push	{r0, r1, r2, r3, lr}
 8007fda:	f7ff ffc9 	bl	8007f70 <__cmpsf2>
 8007fde:	2800      	cmp	r0, #0
 8007fe0:	bf48      	it	mi
 8007fe2:	f110 0f00 	cmnmi.w	r0, #0
 8007fe6:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007fe8 <__aeabi_fcmpeq>:
 8007fe8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007fec:	f7ff fff4 	bl	8007fd8 <__aeabi_cfcmpeq>
 8007ff0:	bf0c      	ite	eq
 8007ff2:	2001      	moveq	r0, #1
 8007ff4:	2000      	movne	r0, #0
 8007ff6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ffa:	bf00      	nop

08007ffc <__aeabi_fcmplt>:
 8007ffc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008000:	f7ff ffea 	bl	8007fd8 <__aeabi_cfcmpeq>
 8008004:	bf34      	ite	cc
 8008006:	2001      	movcc	r0, #1
 8008008:	2000      	movcs	r0, #0
 800800a:	f85d fb08 	ldr.w	pc, [sp], #8
 800800e:	bf00      	nop

08008010 <__aeabi_fcmple>:
 8008010:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008014:	f7ff ffe0 	bl	8007fd8 <__aeabi_cfcmpeq>
 8008018:	bf94      	ite	ls
 800801a:	2001      	movls	r0, #1
 800801c:	2000      	movhi	r0, #0
 800801e:	f85d fb08 	ldr.w	pc, [sp], #8
 8008022:	bf00      	nop

08008024 <__aeabi_fcmpge>:
 8008024:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008028:	f7ff ffd2 	bl	8007fd0 <__aeabi_cfrcmple>
 800802c:	bf94      	ite	ls
 800802e:	2001      	movls	r0, #1
 8008030:	2000      	movhi	r0, #0
 8008032:	f85d fb08 	ldr.w	pc, [sp], #8
 8008036:	bf00      	nop

08008038 <__aeabi_fcmpgt>:
 8008038:	f84d ed08 	str.w	lr, [sp, #-8]!
 800803c:	f7ff ffc8 	bl	8007fd0 <__aeabi_cfrcmple>
 8008040:	bf34      	ite	cc
 8008042:	2001      	movcc	r0, #1
 8008044:	2000      	movcs	r0, #0
 8008046:	f85d fb08 	ldr.w	pc, [sp], #8
 800804a:	bf00      	nop

0800804c <__aeabi_f2uiz>:
 800804c:	0042      	lsls	r2, r0, #1
 800804e:	d20e      	bcs.n	800806e <__aeabi_f2uiz+0x22>
 8008050:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008054:	d30b      	bcc.n	800806e <__aeabi_f2uiz+0x22>
 8008056:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800805a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800805e:	d409      	bmi.n	8008074 <__aeabi_f2uiz+0x28>
 8008060:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008064:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008068:	fa23 f002 	lsr.w	r0, r3, r2
 800806c:	4770      	bx	lr
 800806e:	f04f 0000 	mov.w	r0, #0
 8008072:	4770      	bx	lr
 8008074:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008078:	d101      	bne.n	800807e <__aeabi_f2uiz+0x32>
 800807a:	0242      	lsls	r2, r0, #9
 800807c:	d102      	bne.n	8008084 <__aeabi_f2uiz+0x38>
 800807e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008082:	4770      	bx	lr
 8008084:	f04f 0000 	mov.w	r0, #0
 8008088:	4770      	bx	lr
 800808a:	bf00      	nop

0800808c <__popcountsi2>:
 800808c:	0843      	lsrs	r3, r0, #1
 800808e:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8008092:	1ac0      	subs	r0, r0, r3
 8008094:	0883      	lsrs	r3, r0, #2
 8008096:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 800809a:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 800809e:	4418      	add	r0, r3
 80080a0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 80080a4:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 80080a8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 80080ac:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 80080b0:	0e00      	lsrs	r0, r0, #24
 80080b2:	4770      	bx	lr

080080b4 <Reset_Handler>:
 80080b4:	480c      	ldr	r0, [pc, #48]	; (80080e8 <Zerobss+0x10>)
 80080b6:	4685      	mov	sp, r0
 80080b8:	2100      	movs	r1, #0
 80080ba:	e003      	b.n	80080c4 <DataInit>

080080bc <CopyData>:
 80080bc:	4b0b      	ldr	r3, [pc, #44]	; (80080ec <Zerobss+0x14>)
 80080be:	585b      	ldr	r3, [r3, r1]
 80080c0:	5043      	str	r3, [r0, r1]
 80080c2:	3104      	adds	r1, #4

080080c4 <DataInit>:
 80080c4:	480a      	ldr	r0, [pc, #40]	; (80080f0 <Zerobss+0x18>)
 80080c6:	4b0b      	ldr	r3, [pc, #44]	; (80080f4 <Zerobss+0x1c>)
 80080c8:	1842      	adds	r2, r0, r1
 80080ca:	429a      	cmp	r2, r3
 80080cc:	d3f6      	bcc.n	80080bc <CopyData>
 80080ce:	4a0a      	ldr	r2, [pc, #40]	; (80080f8 <Zerobss+0x20>)
 80080d0:	e002      	b.n	80080d8 <Zerobss>

080080d2 <FillZerobss>:
 80080d2:	2300      	movs	r3, #0
 80080d4:	f842 3b04 	str.w	r3, [r2], #4

080080d8 <Zerobss>:
 80080d8:	4b08      	ldr	r3, [pc, #32]	; (80080fc <Zerobss+0x24>)
 80080da:	429a      	cmp	r2, r3
 80080dc:	d3f9      	bcc.n	80080d2 <FillZerobss>
 80080de:	f007 f8f5 	bl	800f2cc <SystemInit>
 80080e2:	f000 f8f3 	bl	80082cc <main>
 80080e6:	4770      	bx	lr
 80080e8:	20018000 	andcs	r8, r1, r0
 80080ec:	08012aa0 	stmdaeq	r1, {r5, r7, r9, fp, sp}
 80080f0:	20000000 	andcs	r0, r0, r0
 80080f4:	200000f8 	strdcs	r0, [r0], -r8
 80080f8:	200000f8 	strdcs	r0, [r0], -r8
 80080fc:	2000c02c 	andcs	ip, r0, ip, lsr #32

08008100 <ADC0_1_IRQHandler>:
 8008100:	e7fe      	b.n	8008100 <ADC0_1_IRQHandler>

08008102 <memcmp>:
 8008102:	b510      	push	{r4, lr}
 8008104:	3901      	subs	r1, #1
 8008106:	4402      	add	r2, r0
 8008108:	4290      	cmp	r0, r2
 800810a:	d008      	beq.n	800811e <memcmp+0x1c>
 800810c:	7803      	ldrb	r3, [r0, #0]
 800810e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8008112:	42a3      	cmp	r3, r4
 8008114:	d001      	beq.n	800811a <memcmp+0x18>
 8008116:	1b18      	subs	r0, r3, r4
 8008118:	bd10      	pop	{r4, pc}
 800811a:	3001      	adds	r0, #1
 800811c:	e7f4      	b.n	8008108 <memcmp+0x6>
 800811e:	2000      	movs	r0, #0
 8008120:	e7fa      	b.n	8008118 <memcmp+0x16>

08008122 <DisplayHandler::~DisplayHandler()>:
 8008122:	4770      	bx	lr

08008124 <dmxconfigudp::atoi(char const*, unsigned char)>:
 8008124:	b530      	push	{r4, r5, lr}
 8008126:	1e42      	subs	r2, r0, #1
 8008128:	240a      	movs	r4, #10
 800812a:	2000      	movs	r0, #0
 800812c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8008130:	3b30      	subs	r3, #48	; 0x30
 8008132:	b2dd      	uxtb	r5, r3
 8008134:	2d09      	cmp	r5, #9
 8008136:	d805      	bhi.n	8008144 <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8008138:	3901      	subs	r1, #1
 800813a:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800813e:	fb04 3000 	mla	r0, r4, r0, r3
 8008142:	d1f3      	bne.n	800812c <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8008144:	bd30      	pop	{r4, r5, pc}

08008146 <DisplayHandler::~DisplayHandler()>:
 8008146:	b510      	push	{r4, lr}
 8008148:	4604      	mov	r4, r0
 800814a:	f006 fe67 	bl	800ee1c <operator delete(void*)>
 800814e:	4620      	mov	r0, r4
 8008150:	bd10      	pop	{r4, pc}

08008152 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8008152:	b110      	cbz	r0, 800815a <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8008154:	6803      	ldr	r3, [r0, #0]
 8008156:	6a1b      	ldr	r3, [r3, #32]
 8008158:	4718      	bx	r3
 800815a:	4770      	bx	lr

0800815c <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800815c:	b430      	push	{r4, r5}
 800815e:	b168      	cbz	r0, 800817c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8008160:	2300      	movs	r3, #0
 8008162:	7905      	ldrb	r5, [r0, #4]
 8008164:	5cd4      	ldrb	r4, [r2, r3]
 8008166:	b11c      	cbz	r4, 8008170 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8008168:	1c5c      	adds	r4, r3, #1
 800816a:	429d      	cmp	r5, r3
 800816c:	4623      	mov	r3, r4
 800816e:	dcf9      	bgt.n	8008164 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8008170:	6804      	ldr	r4, [r0, #0]
 8008172:	b2db      	uxtb	r3, r3
 8008174:	69e4      	ldr	r4, [r4, #28]
 8008176:	46a4      	mov	ip, r4
 8008178:	bc30      	pop	{r4, r5}
 800817a:	4760      	bx	ip
 800817c:	bc30      	pop	{r4, r5}
 800817e:	4770      	bx	lr

08008180 <Display::PutChar(int) [clone .isra.0]>:
 8008180:	b110      	cbz	r0, 8008188 <Display::PutChar(int) [clone .isra.0]+0x8>
 8008182:	6803      	ldr	r3, [r0, #0]
 8008184:	695b      	ldr	r3, [r3, #20]
 8008186:	4718      	bx	r3
 8008188:	4770      	bx	lr
	...

0800818c <DisplayHandler::Print(unsigned int)>:
 800818c:	b538      	push	{r3, r4, r5, lr}
 800818e:	7903      	ldrb	r3, [r0, #4]
 8008190:	b1f3      	cbz	r3, 80081d0 <DisplayHandler::Print(unsigned int)+0x44>
 8008192:	2904      	cmp	r1, #4
 8008194:	bf98      	it	ls
 8008196:	4b0f      	ldrls	r3, [pc, #60]	; (80081d4 <DisplayHandler::Print(unsigned int)+0x48>)
 8008198:	4d0f      	ldr	r5, [pc, #60]	; (80081d8 <DisplayHandler::Print(unsigned int)+0x4c>)
 800819a:	bf98      	it	ls
 800819c:	5c5c      	ldrbls	r4, [r3, r1]
 800819e:	682b      	ldr	r3, [r5, #0]
 80081a0:	bf88      	it	hi
 80081a2:	2455      	movhi	r4, #85	; 0x55
 80081a4:	6998      	ldr	r0, [r3, #24]
 80081a6:	b178      	cbz	r0, 80081c8 <DisplayHandler::Print(unsigned int)+0x3c>
 80081a8:	7901      	ldrb	r1, [r0, #4]
 80081aa:	3901      	subs	r1, #1
 80081ac:	b2c9      	uxtb	r1, r1
 80081ae:	b168      	cbz	r0, 80081cc <DisplayHandler::Print(unsigned int)+0x40>
 80081b0:	7942      	ldrb	r2, [r0, #5]
 80081b2:	3a01      	subs	r2, #1
 80081b4:	b2d2      	uxtb	r2, r2
 80081b6:	f7ff ffcc 	bl	8008152 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80081ba:	682b      	ldr	r3, [r5, #0]
 80081bc:	4621      	mov	r1, r4
 80081be:	6998      	ldr	r0, [r3, #24]
 80081c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80081c4:	f7ff bfdc 	b.w	8008180 <Display::PutChar(int) [clone .isra.0]>
 80081c8:	4601      	mov	r1, r0
 80081ca:	e7ee      	b.n	80081aa <DisplayHandler::Print(unsigned int)+0x1e>
 80081cc:	4602      	mov	r2, r0
 80081ce:	e7f0      	b.n	80081b2 <DisplayHandler::Print(unsigned int)+0x26>
 80081d0:	bd38      	pop	{r3, r4, r5, pc}
 80081d2:	bf00      	nop
 80081d4:	08011040 	stmdaeq	r1, {r6, ip}
 80081d8:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8

080081dc <Display::SetSleep(bool)>:
 80081dc:	b538      	push	{r3, r4, r5, lr}
 80081de:	4604      	mov	r4, r0
 80081e0:	6980      	ldr	r0, [r0, #24]
 80081e2:	460d      	mov	r5, r1
 80081e4:	b138      	cbz	r0, 80081f6 <Display::SetSleep(bool)+0x1a>
 80081e6:	6803      	ldr	r3, [r0, #0]
 80081e8:	7421      	strb	r1, [r4, #16]
 80081ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80081ec:	4798      	blx	r3
 80081ee:	b915      	cbnz	r5, 80081f6 <Display::SetSleep(bool)+0x1a>
 80081f0:	4b01      	ldr	r3, [pc, #4]	; (80081f8 <Display::SetSleep(bool)+0x1c>)
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	6063      	str	r3, [r4, #4]
 80081f6:	bd38      	pop	{r3, r4, r5, pc}
 80081f8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

080081fc <Display::Printf(unsigned char, char const*, ...)>:
 80081fc:	b40c      	push	{r2, r3}
 80081fe:	b570      	push	{r4, r5, r6, lr}
 8008200:	6984      	ldr	r4, [r0, #24]
 8008202:	4605      	mov	r5, r0
 8008204:	460e      	mov	r6, r1
 8008206:	b08a      	sub	sp, #40	; 0x28
 8008208:	b174      	cbz	r4, 8008228 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800820a:	ab0f      	add	r3, sp, #60	; 0x3c
 800820c:	2120      	movs	r1, #32
 800820e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008210:	a802      	add	r0, sp, #8
 8008212:	9301      	str	r3, [sp, #4]
 8008214:	f000 fca8 	bl	8008b68 <vsnprintf>
 8008218:	4604      	mov	r4, r0
 800821a:	69a8      	ldr	r0, [r5, #24]
 800821c:	4631      	mov	r1, r6
 800821e:	6803      	ldr	r3, [r0, #0]
 8008220:	aa02      	add	r2, sp, #8
 8008222:	69dd      	ldr	r5, [r3, #28]
 8008224:	b2a3      	uxth	r3, r4
 8008226:	47a8      	blx	r5
 8008228:	4620      	mov	r0, r4
 800822a:	b00a      	add	sp, #40	; 0x28
 800822c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008230:	b002      	add	sp, #8
 8008232:	4770      	bx	lr

08008234 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008234:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008238:	4604      	mov	r4, r0
 800823a:	6980      	ldr	r0, [r0, #24]
 800823c:	460f      	mov	r7, r1
 800823e:	4615      	mov	r5, r2
 8008240:	461e      	mov	r6, r3
 8008242:	b308      	cbz	r0, 8008288 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x54>
 8008244:	f890 a005 	ldrb.w	sl, [r0, #5]
 8008248:	2100      	movs	r1, #0
 800824a:	f10a 38ff 	add.w	r8, sl, #4294967295	; 0xffffffff
 800824e:	fa5f f888 	uxtb.w	r8, r8
 8008252:	4642      	mov	r2, r8
 8008254:	f890 b004 	ldrb.w	fp, [r0, #4]
 8008258:	f04f 0900 	mov.w	r9, #0
 800825c:	f7ff ff79 	bl	8008152 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008260:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008264:	45cb      	cmp	fp, r9
 8008266:	69a0      	ldr	r0, [r4, #24]
 8008268:	d905      	bls.n	8008276 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x42>
 800826a:	2120      	movs	r1, #32
 800826c:	f7ff ff88 	bl	8008180 <Display::PutChar(int) [clone .isra.0]>
 8008270:	f109 0901 	add.w	r9, r9, #1
 8008274:	e7f6      	b.n	8008264 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x30>
 8008276:	4642      	mov	r2, r8
 8008278:	2100      	movs	r1, #0
 800827a:	f7ff ff6a 	bl	8008152 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800827e:	463a      	mov	r2, r7
 8008280:	4651      	mov	r1, sl
 8008282:	69a0      	ldr	r0, [r4, #24]
 8008284:	f7ff ff6a 	bl	800815c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008288:	7c63      	ldrb	r3, [r4, #17]
 800828a:	b19b      	cbz	r3, 80082b4 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x80>
 800828c:	43ed      	mvns	r5, r5
 800828e:	2312      	movs	r3, #18
 8008290:	7a20      	ldrb	r0, [r4, #8]
 8008292:	f88d 3004 	strb.w	r3, [sp, #4]
 8008296:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800829a:	f88d 3005 	strb.w	r3, [sp, #5]
 800829e:	f88d 5006 	strb.w	r5, [sp, #6]
 80082a2:	f007 fedf 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 80082a6:	68e0      	ldr	r0, [r4, #12]
 80082a8:	f007 fed4 	bl	8010054 <gd32_i2c_set_baudrate(unsigned int)>
 80082ac:	2103      	movs	r1, #3
 80082ae:	a801      	add	r0, sp, #4
 80082b0:	f007 fede 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 80082b4:	1c73      	adds	r3, r6, #1
 80082b6:	d006      	beq.n	80082c6 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x92>
 80082b8:	4639      	mov	r1, r7
 80082ba:	4630      	mov	r0, r6
 80082bc:	b003      	add	sp, #12
 80082be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082c2:	f006 bc65 	b.w	800eb90 <console_status>
 80082c6:	b003      	add	sp, #12
 80082c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080082cc <main>:
 80082cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80082d0:	f6ad 1d54 	subw	sp, sp, #2388	; 0x954
 80082d4:	a80d      	add	r0, sp, #52	; 0x34
 80082d6:	f006 fd0f 	bl	800ecf8 <Hardware::Hardware()>
 80082da:	a842      	add	r0, sp, #264	; 0x108
 80082dc:	f004 ff54 	bl	800d188 <Network::Network()>
 80082e0:	a815      	add	r0, sp, #84	; 0x54
 80082e2:	f006 fcb3 	bl	800ec4c <LedBlink::LedBlink()>
 80082e6:	a81b      	add	r0, sp, #108	; 0x6c
 80082e8:	f006 f9f0 	bl	800e6cc <Display::Display()>
 80082ec:	4aad      	ldr	r2, [pc, #692]	; (80085a4 <main+0x2d8>)
 80082ee:	4bae      	ldr	r3, [pc, #696]	; (80085a8 <main+0x2dc>)
 80082f0:	49ae      	ldr	r1, [pc, #696]	; (80085ac <main+0x2e0>)
 80082f2:	a804      	add	r0, sp, #16
 80082f4:	f006 fc64 	bl	800ebc0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80082f8:	a805      	add	r0, sp, #20
 80082fa:	f003 fe57 	bl	800bfac <FlashRom::FlashRom()>
 80082fe:	a806      	add	r0, sp, #24
 8008300:	f003 fc04 	bl	800bb0c <SpiFlashStore::SpiFlashStore()>
 8008304:	49aa      	ldr	r1, [pc, #680]	; (80085b0 <main+0x2e4>)
 8008306:	a804      	add	r0, sp, #16
 8008308:	f006 fc92 	bl	800ec30 <FirmwareVersion::Print(char const*)>
 800830c:	2301      	movs	r3, #1
 800830e:	4ea9      	ldr	r6, [pc, #676]	; (80085b4 <main+0x2e8>)
 8008310:	2008      	movs	r0, #8
 8008312:	6133      	str	r3, [r6, #16]
 8008314:	f006 fd86 	bl	800ee24 <operator new(unsigned int)>
 8008318:	4ba7      	ldr	r3, [pc, #668]	; (80085b8 <main+0x2ec>)
 800831a:	9017      	str	r0, [sp, #92]	; 0x5c
 800831c:	6003      	str	r3, [r0, #0]
 800831e:	4ba7      	ldr	r3, [pc, #668]	; (80085bc <main+0x2f0>)
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	3b00      	subs	r3, #0
 8008324:	bf18      	it	ne
 8008326:	2301      	movne	r3, #1
 8008328:	7103      	strb	r3, [r0, #4]
 800832a:	a808      	add	r0, sp, #32
 800832c:	f003 fe00 	bl	800bf30 <StoreOscServer::StoreOscServer()>
 8008330:	a908      	add	r1, sp, #32
 8008332:	a874      	add	r0, sp, #464	; 0x1d0
 8008334:	f000 ff42 	bl	80091bc <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 8008338:	a832      	add	r0, sp, #200	; 0xc8
 800833a:	f000 fc45 	bl	8008bc8 <OscServer::OscServer()>
 800833e:	a874      	add	r0, sp, #464	; 0x1d0
 8008340:	f000 ff4c 	bl	80091dc <OSCServerParams::Load()>
 8008344:	b130      	cbz	r0, 8008354 <main+0x88>
 8008346:	a874      	add	r0, sp, #464	; 0x1d0
 8008348:	f001 f8df 	bl	800950a <OSCServerParams::Dump()>
 800834c:	a932      	add	r1, sp, #200	; 0xc8
 800834e:	a874      	add	r0, sp, #464	; 0x1d0
 8008350:	f000 ffee 	bl	8009330 <OSCServerParams::Set(OscServer*)>
 8008354:	2400      	movs	r4, #0
 8008356:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800835a:	2303      	movs	r3, #3
 800835c:	4998      	ldr	r1, [pc, #608]	; (80085c0 <main+0x2f4>)
 800835e:	a81b      	add	r0, sp, #108	; 0x6c
 8008360:	f7ff ff68 	bl	8008234 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008364:	a80f      	add	r0, sp, #60	; 0x3c
 8008366:	f003 fdad 	bl	800bec4 <StoreNetwork::StoreNetwork()>
 800836a:	ab10      	add	r3, sp, #64	; 0x40
 800836c:	a90f      	add	r1, sp, #60	; 0x3c
 800836e:	a842      	add	r0, sp, #264	; 0x108
 8008370:	936f      	str	r3, [sp, #444]	; 0x1bc
 8008372:	f004 ff5f 	bl	800d234 <Network::Init(NetworkParamsStore*)>
 8008376:	a842      	add	r0, sp, #264	; 0x108
 8008378:	f005 f88c 	bl	800d494 <Network::Print()>
 800837c:	a807      	add	r0, sp, #28
 800837e:	f004 fb3d 	bl	800c9fc <MDNS::MDNS()>
 8008382:	a807      	add	r0, sp, #28
 8008384:	f004 fbfe 	bl	800cb84 <MDNS::Start()>
 8008388:	4b8e      	ldr	r3, [pc, #568]	; (80085c4 <main+0x2f8>)
 800838a:	4621      	mov	r1, r4
 800838c:	4a8e      	ldr	r2, [pc, #568]	; (80085c8 <main+0x2fc>)
 800838e:	9301      	str	r3, [sp, #4]
 8008390:	9400      	str	r4, [sp, #0]
 8008392:	f8bd 30c8 	ldrh.w	r3, [sp, #200]	; 0xc8
 8008396:	a807      	add	r0, sp, #28
 8008398:	f004 fd60 	bl	800ce5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 800839c:	4b8b      	ldr	r3, [pc, #556]	; (80085cc <main+0x300>)
 800839e:	4621      	mov	r1, r4
 80083a0:	9301      	str	r3, [sp, #4]
 80083a2:	2301      	movs	r3, #1
 80083a4:	4a8a      	ldr	r2, [pc, #552]	; (80085d0 <main+0x304>)
 80083a6:	9300      	str	r3, [sp, #0]
 80083a8:	a807      	add	r0, sp, #28
 80083aa:	2350      	movs	r3, #80	; 0x50
 80083ac:	f004 fd56 	bl	800ce5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80083b0:	a807      	add	r0, sp, #28
 80083b2:	f004 fe99 	bl	800d0e8 <MDNS::Print()>
 80083b6:	2303      	movs	r3, #3
 80083b8:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80083bc:	4985      	ldr	r1, [pc, #532]	; (80085d4 <main+0x308>)
 80083be:	a81b      	add	r0, sp, #108	; 0x6c
 80083c0:	f7ff ff38 	bl	8008234 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80083c4:	a809      	add	r0, sp, #36	; 0x24
 80083c6:	f003 fcd1 	bl	800bd6c <StoreDmxSend::StoreDmxSend()>
 80083ca:	a909      	add	r1, sp, #36	; 0x24
 80083cc:	a811      	add	r0, sp, #68	; 0x44
 80083ce:	f001 fb11 	bl	80099f4 <DmxParams::DmxParams(DmxParamsStore*)>
 80083d2:	a822      	add	r0, sp, #136	; 0x88
 80083d4:	f001 ff1e 	bl	800a214 <Dmx::Dmx()>
 80083d8:	a811      	add	r0, sp, #68	; 0x44
 80083da:	f001 fb17 	bl	8009a0c <DmxParams::Load()>
 80083de:	b130      	cbz	r0, 80083ee <main+0x122>
 80083e0:	a811      	add	r0, sp, #68	; 0x44
 80083e2:	f001 fc5f 	bl	8009ca4 <DmxParams::Dump()>
 80083e6:	a922      	add	r1, sp, #136	; 0x88
 80083e8:	a811      	add	r0, sp, #68	; 0x44
 80083ea:	f001 fc31 	bl	8009c50 <DmxParams::Set(Dmx*)>
 80083ee:	4b7a      	ldr	r3, [pc, #488]	; (80085d8 <main+0x30c>)
 80083f0:	ac0a      	add	r4, sp, #40	; 0x28
 80083f2:	4d7a      	ldr	r5, [pc, #488]	; (80085dc <main+0x310>)
 80083f4:	4620      	mov	r0, r4
 80083f6:	930a      	str	r3, [sp, #40]	; 0x28
 80083f8:	f001 faa2 	bl	8009940 <DmxSend::Print()>
 80083fc:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008400:	6828      	ldr	r0, [r5, #0]
 8008402:	f004 fef1 	bl	800d1e8 <Network::Begin(unsigned short)>
 8008406:	4f76      	ldr	r7, [pc, #472]	; (80085e0 <main+0x314>)
 8008408:	943f      	str	r4, [sp, #252]	; 0xfc
 800840a:	6038      	str	r0, [r7, #0]
 800840c:	a832      	add	r0, sp, #200	; 0xc8
 800840e:	f000 fe41 	bl	8009094 <OscServer::Print()>
 8008412:	4620      	mov	r0, r4
 8008414:	f001 fa94 	bl	8009940 <DmxSend::Print()>
 8008418:	2401      	movs	r4, #1
 800841a:	9821      	ldr	r0, [sp, #132]	; 0x84
 800841c:	b118      	cbz	r0, 8008426 <main+0x15a>
 800841e:	6803      	ldr	r3, [r0, #0]
 8008420:	4621      	mov	r1, r4
 8008422:	691b      	ldr	r3, [r3, #16]
 8008424:	4798      	blx	r3
 8008426:	3401      	adds	r4, #1
 8008428:	b2e4      	uxtb	r4, r4
 800842a:	2c07      	cmp	r4, #7
 800842c:	d1f5      	bne.n	800841a <main+0x14e>
 800842e:	2101      	movs	r1, #1
 8008430:	4a6c      	ldr	r2, [pc, #432]	; (80085e4 <main+0x318>)
 8008432:	a81b      	add	r0, sp, #108	; 0x6c
 8008434:	f7ff fee2 	bl	80081fc <Display::Printf(unsigned char, char const*, ...)>
 8008438:	2102      	movs	r1, #2
 800843a:	4a6b      	ldr	r2, [pc, #428]	; (80085e8 <main+0x31c>)
 800843c:	9821      	ldr	r0, [sp, #132]	; 0x84
 800843e:	f7ff fe8d 	bl	800815c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8008442:	f89d 4109 	ldrb.w	r4, [sp, #265]	; 0x109
 8008446:	682b      	ldr	r3, [r5, #0]
 8008448:	2c00      	cmp	r4, #0
 800844a:	bf14      	ite	ne
 800844c:	2444      	movne	r4, #68	; 0x44
 800844e:	2453      	moveq	r4, #83	; 0x53
 8008450:	691b      	ldr	r3, [r3, #16]
 8008452:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8008456:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800845a:	0e18      	lsrs	r0, r3, #24
 800845c:	e9cd 2100 	strd	r2, r1, [sp]
 8008460:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008464:	2103      	movs	r1, #3
 8008466:	4a61      	ldr	r2, [pc, #388]	; (80085ec <main+0x320>)
 8008468:	b2db      	uxtb	r3, r3
 800846a:	a81b      	add	r0, sp, #108	; 0x6c
 800846c:	f7ff fec6 	bl	80081fc <Display::Printf(unsigned char, char const*, ...)>
 8008470:	2104      	movs	r1, #4
 8008472:	f8bd 30c8 	ldrh.w	r3, [sp, #200]	; 0xc8
 8008476:	4a5e      	ldr	r2, [pc, #376]	; (80085f0 <main+0x324>)
 8008478:	a81b      	add	r0, sp, #108	; 0x6c
 800847a:	f7ff febf 	bl	80081fc <Display::Printf(unsigned char, char const*, ...)>
 800847e:	2105      	movs	r1, #5
 8008480:	f8bd 30ca 	ldrh.w	r3, [sp, #202]	; 0xca
 8008484:	4a5b      	ldr	r2, [pc, #364]	; (80085f4 <main+0x328>)
 8008486:	a81b      	add	r0, sp, #108	; 0x6c
 8008488:	f7ff feb8 	bl	80081fc <Display::Printf(unsigned char, char const*, ...)>
 800848c:	2301      	movs	r3, #1
 800848e:	2200      	movs	r2, #0
 8008490:	2102      	movs	r1, #2
 8008492:	a8d8      	add	r0, sp, #864	; 0x360
 8008494:	f002 f964 	bl	800a760 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008498:	a80b      	add	r0, sp, #44	; 0x2c
 800849a:	f003 fd7d 	bl	800bf98 <StoreRemoteConfig::StoreRemoteConfig()>
 800849e:	a90b      	add	r1, sp, #44	; 0x2c
 80084a0:	a829      	add	r0, sp, #164	; 0xa4
 80084a2:	f002 fc33 	bl	800ad0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80084a6:	a829      	add	r0, sp, #164	; 0xa4
 80084a8:	f002 fc3a 	bl	800ad20 <RemoteConfigParams::Load()>
 80084ac:	b130      	cbz	r0, 80084bc <main+0x1f0>
 80084ae:	a829      	add	r0, sp, #164	; 0xa4
 80084b0:	a9d8      	add	r1, sp, #864	; 0x360
 80084b2:	f002 fd5c 	bl	800af6e <RemoteConfigParams::Set(RemoteConfig*)>
 80084b6:	a829      	add	r0, sp, #164	; 0xa4
 80084b8:	f002 fd7d 	bl	800afb6 <RemoteConfigParams::Dump()>
 80084bc:	a806      	add	r0, sp, #24
 80084be:	f003 fbd1 	bl	800bc64 <SpiFlashStore::Flash()>
 80084c2:	2800      	cmp	r0, #0
 80084c4:	d1fa      	bne.n	80084bc <main+0x1f0>
 80084c6:	2303      	movs	r3, #3
 80084c8:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80084cc:	494a      	ldr	r1, [pc, #296]	; (80085f8 <main+0x32c>)
 80084ce:	a81b      	add	r0, sp, #108	; 0x6c
 80084d0:	f7ff feb0 	bl	8008234 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80084d4:	a832      	add	r0, sp, #200	; 0xc8
 80084d6:	f000 fbe1 	bl	8008c9c <OscServer::Start()>
 80084da:	2302      	movs	r3, #2
 80084dc:	f248 0280 	movw	r2, #32896	; 0x8080
 80084e0:	4946      	ldr	r1, [pc, #280]	; (80085fc <main+0x330>)
 80084e2:	a81b      	add	r0, sp, #108	; 0x6c
 80084e4:	f7ff fea6 	bl	8008234 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80084e8:	2102      	movs	r1, #2
 80084ea:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80084ee:	f007 f875 	bl	800f5dc <fwdgt_config>
 80084f2:	2801      	cmp	r0, #1
 80084f4:	bf0c      	ite	eq
 80084f6:	2301      	moveq	r3, #1
 80084f8:	2300      	movne	r3, #0
 80084fa:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 80084fe:	d101      	bne.n	8008504 <main+0x238>
 8008500:	f007 f85c 	bl	800f5bc <fwdgt_enable>
 8008504:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008600 <main+0x334>
 8008508:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 8008604 <main+0x338>
 800850c:	f007 f85e 	bl	800f5cc <fwdgt_counter_reload>
 8008510:	f7ff f80a 	bl	8007528 <net_handle>
 8008514:	a832      	add	r0, sp, #200	; 0xc8
 8008516:	f000 fc71 	bl	8008dfc <OscServer::Run()>
 800851a:	a8d8      	add	r0, sp, #864	; 0x360
 800851c:	f002 fabc 	bl	800aa98 <RemoteConfig::Run()>
 8008520:	a806      	add	r0, sp, #24
 8008522:	f003 fb9f 	bl	800bc64 <SpiFlashStore::Flash()>
 8008526:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008528:	b192      	cbz	r2, 8008550 <main+0x284>
 800852a:	f8d9 3000 	ldr.w	r3, [r9]
 800852e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008530:	1a5b      	subs	r3, r3, r1
 8008532:	429a      	cmp	r2, r3
 8008534:	d80c      	bhi.n	8008550 <main+0x284>
 8008536:	f8d9 3000 	ldr.w	r3, [r9]
 800853a:	931a      	str	r3, [sp, #104]	; 0x68
 800853c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800853e:	2b01      	cmp	r3, #1
 8008540:	f083 0201 	eor.w	r2, r3, #1
 8008544:	bf18      	it	ne
 8008546:	2301      	movne	r3, #1
 8008548:	9219      	str	r2, [sp, #100]	; 0x64
 800854a:	bf14      	ite	ne
 800854c:	6133      	strne	r3, [r6, #16]
 800854e:	6173      	streq	r3, [r6, #20]
 8008550:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8008552:	b16a      	cbz	r2, 8008570 <main+0x2a4>
 8008554:	f89d 307c 	ldrb.w	r3, [sp, #124]	; 0x7c
 8008558:	2b00      	cmp	r3, #0
 800855a:	d176      	bne.n	800864a <main+0x37e>
 800855c:	f8d9 3000 	ldr.w	r3, [r9]
 8008560:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008562:	1a5b      	subs	r3, r3, r1
 8008564:	429a      	cmp	r2, r3
 8008566:	d203      	bcs.n	8008570 <main+0x2a4>
 8008568:	2101      	movs	r1, #1
 800856a:	a81b      	add	r0, sp, #108	; 0x6c
 800856c:	f7ff fe36 	bl	80081dc <Display::SetSleep(bool)>
 8008570:	4d25      	ldr	r5, [pc, #148]	; (8008608 <main+0x33c>)
 8008572:	f10d 031e 	add.w	r3, sp, #30
 8008576:	9300      	str	r3, [sp, #0]
 8008578:	2210      	movs	r2, #16
 800857a:	4629      	mov	r1, r5
 800857c:	7838      	ldrb	r0, [r7, #0]
 800857e:	ab0c      	add	r3, sp, #48	; 0x30
 8008580:	f004 f908 	bl	800c794 <udp_recv>
 8008584:	280a      	cmp	r0, #10
 8008586:	4604      	mov	r4, r0
 8008588:	d95b      	bls.n	8008642 <main+0x376>
 800858a:	2204      	movs	r2, #4
 800858c:	4629      	mov	r1, r5
 800858e:	481f      	ldr	r0, [pc, #124]	; (800860c <main+0x340>)
 8008590:	f7ff fdb7 	bl	8008102 <memcmp>
 8008594:	2800      	cmp	r0, #0
 8008596:	d154      	bne.n	8008642 <main+0x376>
 8008598:	4425      	add	r5, r4
 800859a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800859e:	2b0a      	cmp	r3, #10
 80085a0:	d13a      	bne.n	8008618 <main+0x34c>
 80085a2:	e035      	b.n	8008610 <main+0x344>
 80085a4:	08010f6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, fp}
 80085a8:	08010f64 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, fp}
 80085ac:	08011045 	stmdaeq	r1, {r0, r2, r6, ip}
 80085b0:	08010f79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, fp}
 80085b4:	40011000 	andmi	r1, r1, r0
 80085b8:	08011034 	stmdaeq	r1, {r2, r4, r5, ip}
 80085bc:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 80085c0:	08012483 	stmdaeq	r1, {r0, r1, r7, sl, sp}
 80085c4:	08010fb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, fp}
 80085c8:	08010fab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, fp}
 80085cc:	08010fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp}
 80085d0:	08010fbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp}
 80085d4:	08011166 	stmdaeq	r1, {r1, r2, r5, r6, r8, ip}
 80085d8:	0801126c 	stmdaeq	r1, {r2, r3, r5, r6, r9, ip}
 80085dc:	20009488 	andcs	r9, r0, r8, lsl #9
 80085e0:	20000004 	andcs	r0, r0, r4
 80085e4:	08010fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp}
 80085e8:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 80085ec:	08010fe8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, fp}
 80085f0:	08010ffb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80085f4:	08011002 	stmdaeq	r1, {r1, ip}
 80085f8:	0801114e 	stmdaeq	r1, {r1, r2, r3, r6, r8, ip}
 80085fc:	0801117d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, ip}
 8008600:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 8008604:	20000000 	andcs	r0, r0, r0
 8008608:	20000705 	andcs	r0, r0, r5, lsl #14
 800860c:	0801100a 	stmdaeq	r1, {r1, r3, ip}
 8008610:	3c01      	subs	r4, #1
 8008612:	b2a4      	uxth	r4, r4
 8008614:	2c0a      	cmp	r4, #10
 8008616:	d054      	beq.n	80086c2 <main+0x3f6>
 8008618:	2c0e      	cmp	r4, #14
 800861a:	d850      	bhi.n	80086be <main+0x3f2>
 800861c:	2206      	movs	r2, #6
 800861e:	f8d8 1000 	ldr.w	r1, [r8]
 8008622:	4833      	ldr	r0, [pc, #204]	; (80086f0 <main+0x424>)
 8008624:	f7ff fd6d 	bl	8008102 <memcmp>
 8008628:	2800      	cmp	r0, #0
 800862a:	d14a      	bne.n	80086c2 <main+0x3f6>
 800862c:	2104      	movs	r1, #4
 800862e:	4831      	ldr	r0, [pc, #196]	; (80086f4 <main+0x428>)
 8008630:	f7ff fd78 	bl	8008124 <dmxconfigudp::atoi(char const*, unsigned char)>
 8008634:	285b      	cmp	r0, #91	; 0x5b
 8008636:	4601      	mov	r1, r0
 8008638:	d903      	bls.n	8008642 <main+0x376>
 800863a:	4b2f      	ldr	r3, [pc, #188]	; (80086f8 <main+0x42c>)
 800863c:	6818      	ldr	r0, [r3, #0]
 800863e:	f001 fef7 	bl	800a430 <Dmx::SetDmxBreakTime(unsigned int)>
 8008642:	a807      	add	r0, sp, #28
 8008644:	f004 fd2c 	bl	800d0a0 <MDNS::Run()>
 8008648:	e760      	b.n	800850c <main+0x240>
 800864a:	f006 f86a 	bl	800e722 <display::timeout::gpio_renew()>
 800864e:	2800      	cmp	r0, #0
 8008650:	d08e      	beq.n	8008570 <main+0x2a4>
 8008652:	2100      	movs	r1, #0
 8008654:	e789      	b.n	800856a <main+0x29e>
 8008656:	2c0c      	cmp	r4, #12
 8008658:	d916      	bls.n	8008688 <main+0x3bc>
 800865a:	2c0e      	cmp	r4, #14
 800865c:	d82c      	bhi.n	80086b8 <main+0x3ec>
 800865e:	2208      	movs	r2, #8
 8008660:	f8d8 1000 	ldr.w	r1, [r8]
 8008664:	4825      	ldr	r0, [pc, #148]	; (80086fc <main+0x430>)
 8008666:	f7ff fd4c 	bl	8008102 <memcmp>
 800866a:	bb28      	cbnz	r0, 80086b8 <main+0x3ec>
 800866c:	2102      	movs	r1, #2
 800866e:	4824      	ldr	r0, [pc, #144]	; (8008700 <main+0x434>)
 8008670:	f7ff fd58 	bl	8008124 <dmxconfigudp::atoi(char const*, unsigned char)>
 8008674:	4601      	mov	r1, r0
 8008676:	b110      	cbz	r0, 800867e <main+0x3b2>
 8008678:	4b22      	ldr	r3, [pc, #136]	; (8008704 <main+0x438>)
 800867a:	fbb3 f1f0 	udiv	r1, r3, r0
 800867e:	4b1e      	ldr	r3, [pc, #120]	; (80086f8 <main+0x42c>)
 8008680:	6818      	ldr	r0, [r3, #0]
 8008682:	f001 fea5 	bl	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008686:	e7dc      	b.n	8008642 <main+0x376>
 8008688:	2c0a      	cmp	r4, #10
 800868a:	d0da      	beq.n	8008642 <main+0x376>
 800868c:	2206      	movs	r2, #6
 800868e:	f8d8 1000 	ldr.w	r1, [r8]
 8008692:	481d      	ldr	r0, [pc, #116]	; (8008708 <main+0x43c>)
 8008694:	f7ff fd35 	bl	8008102 <memcmp>
 8008698:	2800      	cmp	r0, #0
 800869a:	d1d2      	bne.n	8008642 <main+0x376>
 800869c:	2103      	movs	r1, #3
 800869e:	4815      	ldr	r0, [pc, #84]	; (80086f4 <main+0x428>)
 80086a0:	f7ff fd40 	bl	8008124 <dmxconfigudp::atoi(char const*, unsigned char)>
 80086a4:	1e83      	subs	r3, r0, #2
 80086a6:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80086aa:	d8ca      	bhi.n	8008642 <main+0x376>
 80086ac:	4b12      	ldr	r3, [pc, #72]	; (80086f8 <main+0x42c>)
 80086ae:	b281      	uxth	r1, r0
 80086b0:	6818      	ldr	r0, [r3, #0]
 80086b2:	f001 fed1 	bl	800a458 <Dmx::SetDmxSlots(unsigned short)>
 80086b6:	e7c4      	b.n	8008642 <main+0x376>
 80086b8:	2c0d      	cmp	r4, #13
 80086ba:	d0e7      	beq.n	800868c <main+0x3c0>
 80086bc:	e7c1      	b.n	8008642 <main+0x376>
 80086be:	2c10      	cmp	r4, #16
 80086c0:	d8bf      	bhi.n	8008642 <main+0x376>
 80086c2:	2204      	movs	r2, #4
 80086c4:	f8d8 1000 	ldr.w	r1, [r8]
 80086c8:	4810      	ldr	r0, [pc, #64]	; (800870c <main+0x440>)
 80086ca:	f7ff fd1a 	bl	8008102 <memcmp>
 80086ce:	2800      	cmp	r0, #0
 80086d0:	d1c1      	bne.n	8008656 <main+0x38a>
 80086d2:	2107      	movs	r1, #7
 80086d4:	480e      	ldr	r0, [pc, #56]	; (8008710 <main+0x444>)
 80086d6:	f7ff fd25 	bl	8008124 <dmxconfigudp::atoi(char const*, unsigned char)>
 80086da:	4b0e      	ldr	r3, [pc, #56]	; (8008714 <main+0x448>)
 80086dc:	f1a0 020c 	sub.w	r2, r0, #12
 80086e0:	429a      	cmp	r2, r3
 80086e2:	4601      	mov	r1, r0
 80086e4:	d8ad      	bhi.n	8008642 <main+0x376>
 80086e6:	4b04      	ldr	r3, [pc, #16]	; (80086f8 <main+0x42c>)
 80086e8:	6818      	ldr	r0, [r3, #0]
 80086ea:	f001 feab 	bl	800a444 <Dmx::SetDmxMabTime(unsigned int)>
 80086ee:	e7a8      	b.n	8008642 <main+0x376>
 80086f0:	0801100f 	stmdaeq	r1, {r0, r1, r2, r3, ip}
 80086f4:	2000070f 	andcs	r0, r0, pc, lsl #14
 80086f8:	20000b44 	andcs	r0, r0, r4, asr #22
 80086fc:	0801101b 	stmdaeq	r1, {r0, r1, r3, r4, ip}
 8008700:	20000711 	andcs	r0, r0, r1, lsl r7
 8008704:	000f4240 	andeq	r4, pc, r0, asr #4
 8008708:	08011024 	stmdaeq	r1, {r2, r5, ip}
 800870c:	08011016 	stmdaeq	r1, {r1, r2, r4, ip}
 8008710:	2000070d 	andcs	r0, r0, sp, lsl #14
 8008714:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08008718 <NetworkDisplay::ShowEmacStart()>:
 8008718:	4770      	bx	lr

0800871a <NetworkDisplay::ShowIp()>:
 800871a:	4770      	bx	lr

0800871c <NetworkDisplay::ShowShutdown()>:
 800871c:	4770      	bx	lr

0800871e <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800871e:	4770      	bx	lr

08008720 <_xputch>:
 8008720:	4603      	mov	r3, r0
 8008722:	b410      	push	{r4}
 8008724:	4c08      	ldr	r4, [pc, #32]	; (8008748 <_xputch+0x28>)
 8008726:	68da      	ldr	r2, [r3, #12]
 8008728:	4608      	mov	r0, r1
 800872a:	6821      	ldr	r1, [r4, #0]
 800872c:	3201      	adds	r2, #1
 800872e:	60da      	str	r2, [r3, #12]
 8008730:	b139      	cbz	r1, 8008742 <_xputch+0x22>
 8008732:	691b      	ldr	r3, [r3, #16]
 8008734:	429a      	cmp	r2, r3
 8008736:	da02      	bge.n	800873e <_xputch+0x1e>
 8008738:	1c4b      	adds	r3, r1, #1
 800873a:	6023      	str	r3, [r4, #0]
 800873c:	7008      	strb	r0, [r1, #0]
 800873e:	bc10      	pop	{r4}
 8008740:	4770      	bx	lr
 8008742:	bc10      	pop	{r4}
 8008744:	f006 b9ec 	b.w	800eb20 <console_putc>
 8008748:	200000f8 	strdcs	r0, [r0], -r8

0800874c <_format_int>:
 800874c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008750:	461f      	mov	r7, r3
 8008752:	b091      	sub	sp, #68	; 0x44
 8008754:	ea52 0307 	orrs.w	r3, r2, r7
 8008758:	4680      	mov	r8, r0
 800875a:	4616      	mov	r6, r2
 800875c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008760:	d138      	bne.n	80087d4 <_format_int+0x88>
 8008762:	2330      	movs	r3, #48	; 0x30
 8008764:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008768:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800876c:	f8d8 3000 	ldr.w	r3, [r8]
 8008770:	07d8      	lsls	r0, r3, #31
 8008772:	d508      	bpl.n	8008786 <_format_int+0x3a>
 8008774:	466a      	mov	r2, sp
 8008776:	2030      	movs	r0, #48	; 0x30
 8008778:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800877c:	1b2e      	subs	r6, r5, r4
 800877e:	428e      	cmp	r6, r1
 8008780:	da01      	bge.n	8008786 <_format_int+0x3a>
 8008782:	4294      	cmp	r4, r2
 8008784:	d843      	bhi.n	800880e <_format_int+0xc2>
 8008786:	0699      	lsls	r1, r3, #26
 8008788:	d508      	bpl.n	800879c <_format_int+0x50>
 800878a:	466a      	mov	r2, sp
 800878c:	2030      	movs	r0, #48	; 0x30
 800878e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8008792:	1b2e      	subs	r6, r5, r4
 8008794:	428e      	cmp	r6, r1
 8008796:	da01      	bge.n	800879c <_format_int+0x50>
 8008798:	4294      	cmp	r4, r2
 800879a:	d83b      	bhi.n	8008814 <_format_int+0xc8>
 800879c:	071a      	lsls	r2, r3, #28
 800879e:	bf44      	itt	mi
 80087a0:	222d      	movmi	r2, #45	; 0x2d
 80087a2:	f804 2901 	strbmi.w	r2, [r4], #-1
 80087a6:	065b      	lsls	r3, r3, #25
 80087a8:	d408      	bmi.n	80087bc <_format_int+0x70>
 80087aa:	466b      	mov	r3, sp
 80087ac:	2120      	movs	r1, #32
 80087ae:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80087b2:	1b28      	subs	r0, r5, r4
 80087b4:	4290      	cmp	r0, r2
 80087b6:	da01      	bge.n	80087bc <_format_int+0x70>
 80087b8:	429c      	cmp	r4, r3
 80087ba:	d82e      	bhi.n	800881a <_format_int+0xce>
 80087bc:	1b2d      	subs	r5, r5, r4
 80087be:	3401      	adds	r4, #1
 80087c0:	ab10      	add	r3, sp, #64	; 0x40
 80087c2:	429c      	cmp	r4, r3
 80087c4:	d32c      	bcc.n	8008820 <_format_int+0xd4>
 80087c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80087ca:	42ab      	cmp	r3, r5
 80087cc:	dc2e      	bgt.n	800882c <_format_int+0xe0>
 80087ce:	b011      	add	sp, #68	; 0x44
 80087d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80087d4:	462c      	mov	r4, r5
 80087d6:	46eb      	mov	fp, sp
 80087d8:	4630      	mov	r0, r6
 80087da:	4639      	mov	r1, r7
 80087dc:	220a      	movs	r2, #10
 80087de:	2300      	movs	r3, #0
 80087e0:	f7ff f986 	bl	8007af0 <__aeabi_uldivmod>
 80087e4:	46b2      	mov	sl, r6
 80087e6:	3230      	adds	r2, #48	; 0x30
 80087e8:	46b9      	mov	r9, r7
 80087ea:	2300      	movs	r3, #0
 80087ec:	4630      	mov	r0, r6
 80087ee:	4639      	mov	r1, r7
 80087f0:	f804 2901 	strb.w	r2, [r4], #-1
 80087f4:	220a      	movs	r2, #10
 80087f6:	f7ff f97b 	bl	8007af0 <__aeabi_uldivmod>
 80087fa:	f1ba 0f0a 	cmp.w	sl, #10
 80087fe:	f179 0300 	sbcs.w	r3, r9, #0
 8008802:	4606      	mov	r6, r0
 8008804:	460f      	mov	r7, r1
 8008806:	d3b1      	bcc.n	800876c <_format_int+0x20>
 8008808:	455c      	cmp	r4, fp
 800880a:	d1e5      	bne.n	80087d8 <_format_int+0x8c>
 800880c:	e7ae      	b.n	800876c <_format_int+0x20>
 800880e:	f804 0901 	strb.w	r0, [r4], #-1
 8008812:	e7b3      	b.n	800877c <_format_int+0x30>
 8008814:	f804 0901 	strb.w	r0, [r4], #-1
 8008818:	e7bb      	b.n	8008792 <_format_int+0x46>
 800881a:	f804 1901 	strb.w	r1, [r4], #-1
 800881e:	e7c8      	b.n	80087b2 <_format_int+0x66>
 8008820:	4640      	mov	r0, r8
 8008822:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008826:	f7ff ff7b 	bl	8008720 <_xputch>
 800882a:	e7c9      	b.n	80087c0 <_format_int+0x74>
 800882c:	2120      	movs	r1, #32
 800882e:	4640      	mov	r0, r8
 8008830:	f7ff ff76 	bl	8008720 <_xputch>
 8008834:	3501      	adds	r5, #1
 8008836:	e7c6      	b.n	80087c6 <_format_int+0x7a>

08008838 <_format_hex>:
 8008838:	b5f0      	push	{r4, r5, r6, r7, lr}
 800883a:	b091      	sub	sp, #68	; 0x44
 800883c:	4606      	mov	r6, r0
 800883e:	6804      	ldr	r4, [r0, #0]
 8008840:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008844:	bb61      	cbnz	r1, 80088a0 <_format_hex+0x68>
 8008846:	2330      	movs	r3, #48	; 0x30
 8008848:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800884c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008850:	07e5      	lsls	r5, r4, #31
 8008852:	d507      	bpl.n	8008864 <_format_hex+0x2c>
 8008854:	4669      	mov	r1, sp
 8008856:	2530      	movs	r5, #48	; 0x30
 8008858:	6870      	ldr	r0, [r6, #4]
 800885a:	1ad7      	subs	r7, r2, r3
 800885c:	4287      	cmp	r7, r0
 800885e:	da01      	bge.n	8008864 <_format_hex+0x2c>
 8008860:	428b      	cmp	r3, r1
 8008862:	d831      	bhi.n	80088c8 <_format_hex+0x90>
 8008864:	06a0      	lsls	r0, r4, #26
 8008866:	d507      	bpl.n	8008878 <_format_hex+0x40>
 8008868:	4669      	mov	r1, sp
 800886a:	2530      	movs	r5, #48	; 0x30
 800886c:	68b0      	ldr	r0, [r6, #8]
 800886e:	1ad7      	subs	r7, r2, r3
 8008870:	4287      	cmp	r7, r0
 8008872:	da01      	bge.n	8008878 <_format_hex+0x40>
 8008874:	428b      	cmp	r3, r1
 8008876:	d82a      	bhi.n	80088ce <_format_hex+0x96>
 8008878:	0661      	lsls	r1, r4, #25
 800887a:	d407      	bmi.n	800888c <_format_hex+0x54>
 800887c:	4669      	mov	r1, sp
 800887e:	2420      	movs	r4, #32
 8008880:	68b0      	ldr	r0, [r6, #8]
 8008882:	1ad5      	subs	r5, r2, r3
 8008884:	4285      	cmp	r5, r0
 8008886:	da01      	bge.n	800888c <_format_hex+0x54>
 8008888:	428b      	cmp	r3, r1
 800888a:	d823      	bhi.n	80088d4 <_format_hex+0x9c>
 800888c:	1ad5      	subs	r5, r2, r3
 800888e:	1c5c      	adds	r4, r3, #1
 8008890:	ab10      	add	r3, sp, #64	; 0x40
 8008892:	429c      	cmp	r4, r3
 8008894:	d321      	bcc.n	80088da <_format_hex+0xa2>
 8008896:	68b3      	ldr	r3, [r6, #8]
 8008898:	429d      	cmp	r5, r3
 800889a:	db24      	blt.n	80088e6 <_format_hex+0xae>
 800889c:	b011      	add	sp, #68	; 0x44
 800889e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088a0:	f014 0f02 	tst.w	r4, #2
 80088a4:	bf0c      	ite	eq
 80088a6:	2757      	moveq	r7, #87	; 0x57
 80088a8:	2737      	movne	r7, #55	; 0x37
 80088aa:	4613      	mov	r3, r2
 80088ac:	466d      	mov	r5, sp
 80088ae:	f001 000f 	and.w	r0, r1, #15
 80088b2:	2809      	cmp	r0, #9
 80088b4:	bf94      	ite	ls
 80088b6:	3030      	addls	r0, #48	; 0x30
 80088b8:	19c0      	addhi	r0, r0, r7
 80088ba:	0909      	lsrs	r1, r1, #4
 80088bc:	f803 0901 	strb.w	r0, [r3], #-1
 80088c0:	d0c6      	beq.n	8008850 <_format_hex+0x18>
 80088c2:	42ab      	cmp	r3, r5
 80088c4:	d1f3      	bne.n	80088ae <_format_hex+0x76>
 80088c6:	e7c3      	b.n	8008850 <_format_hex+0x18>
 80088c8:	f803 5901 	strb.w	r5, [r3], #-1
 80088cc:	e7c5      	b.n	800885a <_format_hex+0x22>
 80088ce:	f803 5901 	strb.w	r5, [r3], #-1
 80088d2:	e7cc      	b.n	800886e <_format_hex+0x36>
 80088d4:	f803 4901 	strb.w	r4, [r3], #-1
 80088d8:	e7d3      	b.n	8008882 <_format_hex+0x4a>
 80088da:	4630      	mov	r0, r6
 80088dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80088e0:	f7ff ff1e 	bl	8008720 <_xputch>
 80088e4:	e7d4      	b.n	8008890 <_format_hex+0x58>
 80088e6:	2120      	movs	r1, #32
 80088e8:	4630      	mov	r0, r6
 80088ea:	f7ff ff19 	bl	8008720 <_xputch>
 80088ee:	3501      	adds	r5, #1
 80088f0:	e7d1      	b.n	8008896 <_format_hex+0x5e>
	...

080088f4 <_vprintf>:
 80088f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088f8:	2700      	movs	r7, #0
 80088fa:	460b      	mov	r3, r1
 80088fc:	4614      	mov	r4, r2
 80088fe:	f04f 080a 	mov.w	r8, #10
 8008902:	b086      	sub	sp, #24
 8008904:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8008908:	7819      	ldrb	r1, [r3, #0]
 800890a:	b919      	cbnz	r1, 8008914 <_vprintf+0x20>
 800890c:	9804      	ldr	r0, [sp, #16]
 800890e:	b006      	add	sp, #24
 8008910:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008914:	2925      	cmp	r1, #37	; 0x25
 8008916:	f103 0501 	add.w	r5, r3, #1
 800891a:	d004      	beq.n	8008926 <_vprintf+0x32>
 800891c:	a801      	add	r0, sp, #4
 800891e:	f7ff feff 	bl	8008720 <_xputch>
 8008922:	462b      	mov	r3, r5
 8008924:	e7f0      	b.n	8008908 <_vprintf+0x14>
 8008926:	785a      	ldrb	r2, [r3, #1]
 8008928:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800892c:	2a30      	cmp	r2, #48	; 0x30
 800892e:	9703      	str	r7, [sp, #12]
 8008930:	d126      	bne.n	8008980 <_vprintf+0x8c>
 8008932:	2220      	movs	r2, #32
 8008934:	9201      	str	r2, [sp, #4]
 8008936:	1c9d      	adds	r5, r3, #2
 8008938:	2200      	movs	r2, #0
 800893a:	462e      	mov	r6, r5
 800893c:	4613      	mov	r3, r2
 800893e:	7831      	ldrb	r1, [r6, #0]
 8008940:	4635      	mov	r5, r6
 8008942:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008946:	2809      	cmp	r0, #9
 8008948:	f106 0601 	add.w	r6, r6, #1
 800894c:	d91c      	bls.n	8008988 <_vprintf+0x94>
 800894e:	b12a      	cbz	r2, 800895c <_vprintf+0x68>
 8008950:	9303      	str	r3, [sp, #12]
 8008952:	b11b      	cbz	r3, 800895c <_vprintf+0x68>
 8008954:	9b01      	ldr	r3, [sp, #4]
 8008956:	f043 0310 	orr.w	r3, r3, #16
 800895a:	9301      	str	r3, [sp, #4]
 800895c:	292e      	cmp	r1, #46	; 0x2e
 800895e:	d122      	bne.n	80089a6 <_vprintf+0xb2>
 8008960:	786b      	ldrb	r3, [r5, #1]
 8008962:	2b2a      	cmp	r3, #42	; 0x2a
 8008964:	d014      	beq.n	8008990 <_vprintf+0x9c>
 8008966:	2100      	movs	r1, #0
 8008968:	460a      	mov	r2, r1
 800896a:	1c68      	adds	r0, r5, #1
 800896c:	7803      	ldrb	r3, [r0, #0]
 800896e:	4605      	mov	r5, r0
 8008970:	3b30      	subs	r3, #48	; 0x30
 8008972:	2b09      	cmp	r3, #9
 8008974:	f100 0001 	add.w	r0, r0, #1
 8008978:	d92f      	bls.n	80089da <_vprintf+0xe6>
 800897a:	b181      	cbz	r1, 800899e <_vprintf+0xaa>
 800897c:	9202      	str	r2, [sp, #8]
 800897e:	e00e      	b.n	800899e <_vprintf+0xaa>
 8008980:	2a2d      	cmp	r2, #45	; 0x2d
 8008982:	d1d9      	bne.n	8008938 <_vprintf+0x44>
 8008984:	2240      	movs	r2, #64	; 0x40
 8008986:	e7d5      	b.n	8008934 <_vprintf+0x40>
 8008988:	2201      	movs	r2, #1
 800898a:	fb08 0303 	mla	r3, r8, r3, r0
 800898e:	e7d6      	b.n	800893e <_vprintf+0x4a>
 8008990:	f854 3b04 	ldr.w	r3, [r4], #4
 8008994:	3502      	adds	r5, #2
 8008996:	2b00      	cmp	r3, #0
 8008998:	bfb8      	it	lt
 800899a:	425b      	neglt	r3, r3
 800899c:	9302      	str	r3, [sp, #8]
 800899e:	9b01      	ldr	r3, [sp, #4]
 80089a0:	f043 0301 	orr.w	r3, r3, #1
 80089a4:	9301      	str	r3, [sp, #4]
 80089a6:	782b      	ldrb	r3, [r5, #0]
 80089a8:	2b6c      	cmp	r3, #108	; 0x6c
 80089aa:	bf04      	itt	eq
 80089ac:	9b01      	ldreq	r3, [sp, #4]
 80089ae:	3501      	addeq	r5, #1
 80089b0:	7829      	ldrb	r1, [r5, #0]
 80089b2:	bf04      	itt	eq
 80089b4:	f043 0304 	orreq.w	r3, r3, #4
 80089b8:	9301      	streq	r3, [sp, #4]
 80089ba:	2978      	cmp	r1, #120	; 0x78
 80089bc:	d8ae      	bhi.n	800891c <_vprintf+0x28>
 80089be:	296f      	cmp	r1, #111	; 0x6f
 80089c0:	d80f      	bhi.n	80089e2 <_vprintf+0xee>
 80089c2:	2963      	cmp	r1, #99	; 0x63
 80089c4:	d045      	beq.n	8008a52 <_vprintf+0x15e>
 80089c6:	d825      	bhi.n	8008a14 <_vprintf+0x120>
 80089c8:	2958      	cmp	r1, #88	; 0x58
 80089ca:	d1a7      	bne.n	800891c <_vprintf+0x28>
 80089cc:	9b01      	ldr	r3, [sp, #4]
 80089ce:	f043 0302 	orr.w	r3, r3, #2
 80089d2:	9301      	str	r3, [sp, #4]
 80089d4:	f854 1b04 	ldr.w	r1, [r4], #4
 80089d8:	e051      	b.n	8008a7e <_vprintf+0x18a>
 80089da:	2101      	movs	r1, #1
 80089dc:	fb08 3202 	mla	r2, r8, r2, r3
 80089e0:	e7c4      	b.n	800896c <_vprintf+0x78>
 80089e2:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 80089e6:	2b08      	cmp	r3, #8
 80089e8:	d898      	bhi.n	800891c <_vprintf+0x28>
 80089ea:	a201      	add	r2, pc, #4	; (adr r2, 80089f0 <_vprintf+0xfc>)
 80089ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089f0:	08008a61 	stmdaeq	r0, {r0, r5, r6, r9, fp, pc}
 80089f4:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 80089f8:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 80089fc:	08008a87 	stmdaeq	r0, {r0, r1, r2, r7, r9, fp, pc}
 8008a00:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 8008a04:	08008af9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, pc}
 8008a08:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 8008a0c:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 8008a10:	080089d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, pc}
 8008a14:	2964      	cmp	r1, #100	; 0x64
 8008a16:	d002      	beq.n	8008a1e <_vprintf+0x12a>
 8008a18:	2969      	cmp	r1, #105	; 0x69
 8008a1a:	f47f af7f 	bne.w	800891c <_vprintf+0x28>
 8008a1e:	9901      	ldr	r1, [sp, #4]
 8008a20:	074e      	lsls	r6, r1, #29
 8008a22:	bf43      	ittte	mi
 8008a24:	3407      	addmi	r4, #7
 8008a26:	f024 0307 	bicmi.w	r3, r4, #7
 8008a2a:	461c      	movmi	r4, r3
 8008a2c:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8008a30:	bf4a      	itet	mi
 8008a32:	685b      	ldrmi	r3, [r3, #4]
 8008a34:	17d3      	asrpl	r3, r2, #31
 8008a36:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8008a3a:	2b00      	cmp	r3, #0
 8008a3c:	da05      	bge.n	8008a4a <_vprintf+0x156>
 8008a3e:	f041 0108 	orr.w	r1, r1, #8
 8008a42:	4252      	negs	r2, r2
 8008a44:	9101      	str	r1, [sp, #4]
 8008a46:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008a4a:	a801      	add	r0, sp, #4
 8008a4c:	f7ff fe7e 	bl	800874c <_format_int>
 8008a50:	e004      	b.n	8008a5c <_vprintf+0x168>
 8008a52:	f854 1b04 	ldr.w	r1, [r4], #4
 8008a56:	a801      	add	r0, sp, #4
 8008a58:	f7ff fe62 	bl	8008720 <_xputch>
 8008a5c:	3501      	adds	r5, #1
 8008a5e:	e760      	b.n	8008922 <_vprintf+0x2e>
 8008a60:	2308      	movs	r3, #8
 8008a62:	9303      	str	r3, [sp, #12]
 8008a64:	2320      	movs	r3, #32
 8008a66:	2130      	movs	r1, #48	; 0x30
 8008a68:	f854 6b04 	ldr.w	r6, [r4], #4
 8008a6c:	a801      	add	r0, sp, #4
 8008a6e:	9301      	str	r3, [sp, #4]
 8008a70:	f7ff fe56 	bl	8008720 <_xputch>
 8008a74:	2178      	movs	r1, #120	; 0x78
 8008a76:	a801      	add	r0, sp, #4
 8008a78:	f7ff fe52 	bl	8008720 <_xputch>
 8008a7c:	4631      	mov	r1, r6
 8008a7e:	a801      	add	r0, sp, #4
 8008a80:	f7ff feda 	bl	8008838 <_format_hex>
 8008a84:	e7ea      	b.n	8008a5c <_vprintf+0x168>
 8008a86:	2600      	movs	r6, #0
 8008a88:	f854 9b04 	ldr.w	r9, [r4], #4
 8008a8c:	f819 3006 	ldrb.w	r3, [r9, r6]
 8008a90:	b993      	cbnz	r3, 8008ab8 <_vprintf+0x1c4>
 8008a92:	9b01      	ldr	r3, [sp, #4]
 8008a94:	07d9      	lsls	r1, r3, #31
 8008a96:	d503      	bpl.n	8008aa0 <_vprintf+0x1ac>
 8008a98:	9b02      	ldr	r3, [sp, #8]
 8008a9a:	429e      	cmp	r6, r3
 8008a9c:	bfa8      	it	ge
 8008a9e:	461e      	movge	r6, r3
 8008aa0:	9b01      	ldr	r3, [sp, #4]
 8008aa2:	f106 0a01 	add.w	sl, r6, #1
 8008aa6:	065a      	lsls	r2, r3, #25
 8008aa8:	d403      	bmi.n	8008ab2 <_vprintf+0x1be>
 8008aaa:	9b03      	ldr	r3, [sp, #12]
 8008aac:	429e      	cmp	r6, r3
 8008aae:	db05      	blt.n	8008abc <_vprintf+0x1c8>
 8008ab0:	4656      	mov	r6, sl
 8008ab2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008ab6:	e00d      	b.n	8008ad4 <_vprintf+0x1e0>
 8008ab8:	3601      	adds	r6, #1
 8008aba:	e7e7      	b.n	8008a8c <_vprintf+0x198>
 8008abc:	2120      	movs	r1, #32
 8008abe:	a801      	add	r0, sp, #4
 8008ac0:	f7ff fe2e 	bl	8008720 <_xputch>
 8008ac4:	4656      	mov	r6, sl
 8008ac6:	e7eb      	b.n	8008aa0 <_vprintf+0x1ac>
 8008ac8:	a801      	add	r0, sp, #4
 8008aca:	f7ff fe29 	bl	8008720 <_xputch>
 8008ace:	9b02      	ldr	r3, [sp, #8]
 8008ad0:	3b01      	subs	r3, #1
 8008ad2:	9302      	str	r3, [sp, #8]
 8008ad4:	9b01      	ldr	r3, [sp, #4]
 8008ad6:	07db      	lsls	r3, r3, #31
 8008ad8:	d501      	bpl.n	8008ade <_vprintf+0x1ea>
 8008ada:	9b02      	ldr	r3, [sp, #8]
 8008adc:	b11b      	cbz	r3, 8008ae6 <_vprintf+0x1f2>
 8008ade:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008ae2:	2900      	cmp	r1, #0
 8008ae4:	d1f0      	bne.n	8008ac8 <_vprintf+0x1d4>
 8008ae6:	9b03      	ldr	r3, [sp, #12]
 8008ae8:	42b3      	cmp	r3, r6
 8008aea:	ddb7      	ble.n	8008a5c <_vprintf+0x168>
 8008aec:	2120      	movs	r1, #32
 8008aee:	a801      	add	r0, sp, #4
 8008af0:	f7ff fe16 	bl	8008720 <_xputch>
 8008af4:	3601      	adds	r6, #1
 8008af6:	e7f6      	b.n	8008ae6 <_vprintf+0x1f2>
 8008af8:	9b01      	ldr	r3, [sp, #4]
 8008afa:	f013 0304 	ands.w	r3, r3, #4
 8008afe:	bf1d      	ittte	ne
 8008b00:	3407      	addne	r4, #7
 8008b02:	f024 0307 	bicne.w	r3, r4, #7
 8008b06:	461c      	movne	r4, r3
 8008b08:	f854 2b04 	ldreq.w	r2, [r4], #4
 8008b0c:	bf1c      	itt	ne
 8008b0e:	f854 2b08 	ldrne.w	r2, [r4], #8
 8008b12:	685b      	ldrne	r3, [r3, #4]
 8008b14:	e799      	b.n	8008a4a <_vprintf+0x156>
 8008b16:	bf00      	nop

08008b18 <printf>:
 8008b18:	b40f      	push	{r0, r1, r2, r3}
 8008b1a:	b507      	push	{r0, r1, r2, lr}
 8008b1c:	aa04      	add	r2, sp, #16
 8008b1e:	f852 1b04 	ldr.w	r1, [r2], #4
 8008b22:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008b26:	9201      	str	r2, [sp, #4]
 8008b28:	f7ff fee4 	bl	80088f4 <_vprintf>
 8008b2c:	b003      	add	sp, #12
 8008b2e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008b32:	b004      	add	sp, #16
 8008b34:	4770      	bx	lr
	...

08008b38 <snprintf>:
 8008b38:	b40c      	push	{r2, r3}
 8008b3a:	460b      	mov	r3, r1
 8008b3c:	b513      	push	{r0, r1, r4, lr}
 8008b3e:	4c09      	ldr	r4, [pc, #36]	; (8008b64 <snprintf+0x2c>)
 8008b40:	aa04      	add	r2, sp, #16
 8008b42:	f852 1b04 	ldr.w	r1, [r2], #4
 8008b46:	6020      	str	r0, [r4, #0]
 8008b48:	4618      	mov	r0, r3
 8008b4a:	9201      	str	r2, [sp, #4]
 8008b4c:	f7ff fed2 	bl	80088f4 <_vprintf>
 8008b50:	2300      	movs	r3, #0
 8008b52:	6822      	ldr	r2, [r4, #0]
 8008b54:	6023      	str	r3, [r4, #0]
 8008b56:	7013      	strb	r3, [r2, #0]
 8008b58:	b002      	add	sp, #8
 8008b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008b5e:	b002      	add	sp, #8
 8008b60:	4770      	bx	lr
 8008b62:	bf00      	nop
 8008b64:	200000f8 	strdcs	r0, [r0], -r8

08008b68 <vsnprintf>:
 8008b68:	b538      	push	{r3, r4, r5, lr}
 8008b6a:	4605      	mov	r5, r0
 8008b6c:	4c05      	ldr	r4, [pc, #20]	; (8008b84 <vsnprintf+0x1c>)
 8008b6e:	4608      	mov	r0, r1
 8008b70:	4611      	mov	r1, r2
 8008b72:	461a      	mov	r2, r3
 8008b74:	6025      	str	r5, [r4, #0]
 8008b76:	f7ff febd 	bl	80088f4 <_vprintf>
 8008b7a:	2300      	movs	r3, #0
 8008b7c:	6822      	ldr	r2, [r4, #0]
 8008b7e:	6023      	str	r3, [r4, #0]
 8008b80:	7013      	strb	r3, [r2, #0]
 8008b82:	bd38      	pop	{r3, r4, r5, pc}
 8008b84:	200000f8 	strdcs	r0, [r0], -r8

08008b88 <strlen>:
 8008b88:	4603      	mov	r3, r0
 8008b8a:	461a      	mov	r2, r3
 8008b8c:	7811      	ldrb	r1, [r2, #0]
 8008b8e:	3301      	adds	r3, #1
 8008b90:	2900      	cmp	r1, #0
 8008b92:	d1fa      	bne.n	8008b8a <strlen+0x2>
 8008b94:	1a10      	subs	r0, r2, r0
 8008b96:	4770      	bx	lr

08008b98 <strncpy.isra.0>:
 8008b98:	3901      	subs	r1, #1
 8008b9a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008b9e:	b92b      	cbnz	r3, 8008bac <strncpy.isra.0+0x14>
 8008ba0:	4402      	add	r2, r0
 8008ba2:	4290      	cmp	r0, r2
 8008ba4:	d007      	beq.n	8008bb6 <strncpy.isra.0+0x1e>
 8008ba6:	f800 3b01 	strb.w	r3, [r0], #1
 8008baa:	e7fa      	b.n	8008ba2 <strncpy.isra.0+0xa>
 8008bac:	3a01      	subs	r2, #1
 8008bae:	f800 3b01 	strb.w	r3, [r0], #1
 8008bb2:	d1f2      	bne.n	8008b9a <strncpy.isra.0+0x2>
 8008bb4:	4770      	bx	lr
 8008bb6:	4770      	bx	lr

08008bb8 <strcpy.isra.0>:
 8008bb8:	3801      	subs	r0, #1
 8008bba:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008bbe:	f800 3f01 	strb.w	r3, [r0, #1]!
 8008bc2:	2b00      	cmp	r3, #0
 8008bc4:	d1f9      	bne.n	8008bba <strcpy.isra.0+0x2>
 8008bc6:	4770      	bx	lr

08008bc8 <OscServer::OscServer()>:
 8008bc8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008bcc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008bce:	4a24      	ldr	r2, [pc, #144]	; (8008c60 <OscServer::OscServer()+0x98>)
 8008bd0:	4604      	mov	r4, r0
 8008bd2:	e9c0 2300 	strd	r2, r3, [r0]
 8008bd6:	2300      	movs	r3, #0
 8008bd8:	2581      	movs	r5, #129	; 0x81
 8008bda:	4a22      	ldr	r2, [pc, #136]	; (8008c64 <OscServer::OscServer()+0x9c>)
 8008bdc:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 8008be0:	6010      	str	r0, [r2, #0]
 8008be2:	4a21      	ldr	r2, [pc, #132]	; (8008c68 <OscServer::OscServer()+0xa0>)
 8008be4:	6083      	str	r3, [r0, #8]
 8008be6:	7303      	strb	r3, [r0, #12]
 8008be8:	3d01      	subs	r5, #1
 8008bea:	d002      	beq.n	8008bf2 <OscServer::OscServer()+0x2a>
 8008bec:	f802 3b01 	strb.w	r3, [r2], #1
 8008bf0:	e7fa      	b.n	8008be8 <OscServer::OscServer()+0x20>
 8008bf2:	2281      	movs	r2, #129	; 0x81
 8008bf4:	491d      	ldr	r1, [pc, #116]	; (8008c6c <OscServer::OscServer()+0xa4>)
 8008bf6:	481c      	ldr	r0, [pc, #112]	; (8008c68 <OscServer::OscServer()+0xa0>)
 8008bf8:	f7ff ffde 	bl	8008bb8 <strcpy.isra.0>
 8008bfc:	4b1c      	ldr	r3, [pc, #112]	; (8008c70 <OscServer::OscServer()+0xa8>)
 8008bfe:	3a01      	subs	r2, #1
 8008c00:	d002      	beq.n	8008c08 <OscServer::OscServer()+0x40>
 8008c02:	f803 5b01 	strb.w	r5, [r3], #1
 8008c06:	e7fa      	b.n	8008bfe <OscServer::OscServer()+0x36>
 8008c08:	491a      	ldr	r1, [pc, #104]	; (8008c74 <OscServer::OscServer()+0xac>)
 8008c0a:	4819      	ldr	r0, [pc, #100]	; (8008c70 <OscServer::OscServer()+0xa8>)
 8008c0c:	f7ff ffd4 	bl	8008bb8 <strcpy.isra.0>
 8008c10:	2380      	movs	r3, #128	; 0x80
 8008c12:	4919      	ldr	r1, [pc, #100]	; (8008c78 <OscServer::OscServer()+0xb0>)
 8008c14:	3b01      	subs	r3, #1
 8008c16:	d302      	bcc.n	8008c1e <OscServer::OscServer()+0x56>
 8008c18:	f801 2b01 	strb.w	r2, [r1], #1
 8008c1c:	e7fa      	b.n	8008c14 <OscServer::OscServer()+0x4c>
 8008c1e:	4917      	ldr	r1, [pc, #92]	; (8008c7c <OscServer::OscServer()+0xb4>)
 8008c20:	4815      	ldr	r0, [pc, #84]	; (8008c78 <OscServer::OscServer()+0xb0>)
 8008c22:	f7ff ffc9 	bl	8008bb8 <strcpy.isra.0>
 8008c26:	2380      	movs	r3, #128	; 0x80
 8008c28:	2100      	movs	r1, #0
 8008c2a:	4a15      	ldr	r2, [pc, #84]	; (8008c80 <OscServer::OscServer()+0xb8>)
 8008c2c:	3b01      	subs	r3, #1
 8008c2e:	d302      	bcc.n	8008c36 <OscServer::OscServer()+0x6e>
 8008c30:	f802 1b01 	strb.w	r1, [r2], #1
 8008c34:	e7fa      	b.n	8008c2c <OscServer::OscServer()+0x64>
 8008c36:	4913      	ldr	r1, [pc, #76]	; (8008c84 <OscServer::OscServer()+0xbc>)
 8008c38:	4811      	ldr	r0, [pc, #68]	; (8008c80 <OscServer::OscServer()+0xb8>)
 8008c3a:	f7ff ffbd 	bl	8008bb8 <strcpy.isra.0>
 8008c3e:	4b12      	ldr	r3, [pc, #72]	; (8008c88 <OscServer::OscServer()+0xc0>)
 8008c40:	211f      	movs	r1, #31
 8008c42:	9300      	str	r3, [sp, #0]
 8008c44:	4a11      	ldr	r2, [pc, #68]	; (8008c8c <OscServer::OscServer()+0xc4>)
 8008c46:	4b12      	ldr	r3, [pc, #72]	; (8008c90 <OscServer::OscServer()+0xc8>)
 8008c48:	f104 000d 	add.w	r0, r4, #13
 8008c4c:	f7ff ff74 	bl	8008b38 <snprintf>
 8008c50:	4620      	mov	r0, r4
 8008c52:	4b10      	ldr	r3, [pc, #64]	; (8008c94 <OscServer::OscServer()+0xcc>)
 8008c54:	63a3      	str	r3, [r4, #56]	; 0x38
 8008c56:	4b10      	ldr	r3, [pc, #64]	; (8008c98 <OscServer::OscServer()+0xd0>)
 8008c58:	63e3      	str	r3, [r4, #60]	; 0x3c
 8008c5a:	b003      	add	sp, #12
 8008c5c:	bd30      	pop	{r4, r5, pc}
 8008c5e:	bf00      	nop
 8008c60:	23281f40 			; <UNDEFINED> instruction: 0x23281f40
 8008c64:	20000500 	andcs	r0, r0, r0, lsl #10
 8008c68:	20000280 	andcs	r0, r0, r0, lsl #5
 8008c6c:	08011049 	stmdaeq	r1, {r0, r3, r6, ip}
 8008c70:	20000180 	andcs	r0, r0, r0, lsl #3
 8008c74:	0801104f 	stmdaeq	r1, {r0, r1, r2, r3, r6, ip}
 8008c78:	200000fc 	strdcs	r0, [r0], -ip
 8008c7c:	08011057 	stmdaeq	r1, {r0, r1, r2, r4, r6, ip}
 8008c80:	20000200 	andcs	r0, r0, r0, lsl #4
 8008c84:	0801105a 	stmdaeq	r1, {r1, r3, r4, r6, ip}
 8008c88:	08010f6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, fp}
 8008c8c:	0801106d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip}
 8008c90:	08011069 	stmdaeq	r1, {r0, r3, r5, r6, ip}
 8008c94:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 8008c98:	08011076 	stmdaeq	r1, {r1, r2, r4, r5, r6, ip}

08008c9c <OscServer::Start()>:
 8008c9c:	b530      	push	{r4, r5, lr}
 8008c9e:	4d0e      	ldr	r5, [pc, #56]	; (8008cd8 <OscServer::Start()+0x3c>)
 8008ca0:	b085      	sub	sp, #20
 8008ca2:	4604      	mov	r4, r0
 8008ca4:	8801      	ldrh	r1, [r0, #0]
 8008ca6:	6828      	ldr	r0, [r5, #0]
 8008ca8:	f004 fa9e 	bl	800d1e8 <Network::Begin(unsigned short)>
 8008cac:	682b      	ldr	r3, [r5, #0]
 8008cae:	6060      	str	r0, [r4, #4]
 8008cb0:	691a      	ldr	r2, [r3, #16]
 8008cb2:	4601      	mov	r1, r0
 8008cb4:	6998      	ldr	r0, [r3, #24]
 8008cb6:	2300      	movs	r3, #0
 8008cb8:	9301      	str	r3, [sp, #4]
 8008cba:	4b08      	ldr	r3, [pc, #32]	; (8008cdc <OscServer::Start()+0x40>)
 8008cbc:	ea62 0200 	orn	r2, r2, r0
 8008cc0:	9300      	str	r3, [sp, #0]
 8008cc2:	a803      	add	r0, sp, #12
 8008cc4:	8823      	ldrh	r3, [r4, #0]
 8008cc6:	f000 fd9d 	bl	8009804 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008cca:	4b05      	ldr	r3, [pc, #20]	; (8008ce0 <OscServer::Start()+0x44>)
 8008ccc:	2102      	movs	r1, #2
 8008cce:	6818      	ldr	r0, [r3, #0]
 8008cd0:	f005 ffde 	bl	800ec90 <LedBlink::SetMode(ledblink::Mode)>
 8008cd4:	b005      	add	sp, #20
 8008cd6:	bd30      	pop	{r4, r5, pc}
 8008cd8:	20009488 	andcs	r9, r0, r8, lsl #9
 8008cdc:	0801107c 	stmdaeq	r1, {r2, r3, r4, r5, r6, ip}
 8008ce0:	20009ba4 	andcs	r9, r0, r4, lsr #23

08008ce4 <OscServer::SetPath(char const*)>:
 8008ce4:	b510      	push	{r4, lr}
 8008ce6:	780b      	ldrb	r3, [r1, #0]
 8008ce8:	2b2f      	cmp	r3, #47	; 0x2f
 8008cea:	d11c      	bne.n	8008d26 <OscServer::SetPath(char const*)+0x42>
 8008cec:	4c0e      	ldr	r4, [pc, #56]	; (8008d28 <OscServer::SetPath(char const*)+0x44>)
 8008cee:	227d      	movs	r2, #125	; 0x7d
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	f7ff ff51 	bl	8008b98 <strncpy.isra.0>
 8008cf6:	4620      	mov	r0, r4
 8008cf8:	f7ff ff46 	bl	8008b88 <strlen>
 8008cfc:	3801      	subs	r0, #1
 8008cfe:	5c23      	ldrb	r3, [r4, r0]
 8008d00:	4909      	ldr	r1, [pc, #36]	; (8008d28 <OscServer::SetPath(char const*)+0x44>)
 8008d02:	2b2f      	cmp	r3, #47	; 0x2f
 8008d04:	bf04      	itt	eq
 8008d06:	2300      	moveq	r3, #0
 8008d08:	5423      	strbeq	r3, [r4, r0]
 8008d0a:	4c08      	ldr	r4, [pc, #32]	; (8008d2c <OscServer::SetPath(char const*)+0x48>)
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	f7ff ff53 	bl	8008bb8 <strcpy.isra.0>
 8008d12:	4620      	mov	r0, r4
 8008d14:	f7ff ff38 	bl	8008b88 <strlen>
 8008d18:	232f      	movs	r3, #47	; 0x2f
 8008d1a:	5423      	strb	r3, [r4, r0]
 8008d1c:	232a      	movs	r3, #42	; 0x2a
 8008d1e:	4404      	add	r4, r0
 8008d20:	7063      	strb	r3, [r4, #1]
 8008d22:	2300      	movs	r3, #0
 8008d24:	70a3      	strb	r3, [r4, #2]
 8008d26:	bd10      	pop	{r4, pc}
 8008d28:	20000280 	andcs	r0, r0, r0, lsl #5
 8008d2c:	20000180 	andcs	r0, r0, r0, lsl #3

08008d30 <OscServer::SetPathInfo(char const*)>:
 8008d30:	780b      	ldrb	r3, [r1, #0]
 8008d32:	b510      	push	{r4, lr}
 8008d34:	2b2f      	cmp	r3, #47	; 0x2f
 8008d36:	d10d      	bne.n	8008d54 <OscServer::SetPathInfo(char const*)+0x24>
 8008d38:	4c07      	ldr	r4, [pc, #28]	; (8008d58 <OscServer::SetPathInfo(char const*)+0x28>)
 8008d3a:	227f      	movs	r2, #127	; 0x7f
 8008d3c:	4620      	mov	r0, r4
 8008d3e:	f7ff ff2b 	bl	8008b98 <strncpy.isra.0>
 8008d42:	4620      	mov	r0, r4
 8008d44:	f7ff ff20 	bl	8008b88 <strlen>
 8008d48:	3801      	subs	r0, #1
 8008d4a:	5c23      	ldrb	r3, [r4, r0]
 8008d4c:	2b2f      	cmp	r3, #47	; 0x2f
 8008d4e:	bf04      	itt	eq
 8008d50:	2300      	moveq	r3, #0
 8008d52:	5423      	strbeq	r3, [r4, r0]
 8008d54:	bd10      	pop	{r4, pc}
 8008d56:	bf00      	nop
 8008d58:	200000fc 	strdcs	r0, [r0], -ip

08008d5c <OscServer::SetPathBlackOut(char const*)>:
 8008d5c:	780b      	ldrb	r3, [r1, #0]
 8008d5e:	b510      	push	{r4, lr}
 8008d60:	2b2f      	cmp	r3, #47	; 0x2f
 8008d62:	d10d      	bne.n	8008d80 <OscServer::SetPathBlackOut(char const*)+0x24>
 8008d64:	4c07      	ldr	r4, [pc, #28]	; (8008d84 <OscServer::SetPathBlackOut(char const*)+0x28>)
 8008d66:	227f      	movs	r2, #127	; 0x7f
 8008d68:	4620      	mov	r0, r4
 8008d6a:	f7ff ff15 	bl	8008b98 <strncpy.isra.0>
 8008d6e:	4620      	mov	r0, r4
 8008d70:	f7ff ff0a 	bl	8008b88 <strlen>
 8008d74:	3801      	subs	r0, #1
 8008d76:	5c23      	ldrb	r3, [r4, r0]
 8008d78:	2b2f      	cmp	r3, #47	; 0x2f
 8008d7a:	bf04      	itt	eq
 8008d7c:	2300      	moveq	r3, #0
 8008d7e:	5423      	strbeq	r3, [r4, r0]
 8008d80:	bd10      	pop	{r4, pc}
 8008d82:	bf00      	nop
 8008d84:	20000200 	andcs	r0, r0, r0, lsl #4

08008d88 <OscServer::GetChannel(char const*)>:
 8008d88:	b538      	push	{r3, r4, r5, lr}
 8008d8a:	480f      	ldr	r0, [pc, #60]	; (8008dc8 <OscServer::GetChannel(char const*)+0x40>)
 8008d8c:	460c      	mov	r4, r1
 8008d8e:	f7ff fefb 	bl	8008b88 <strlen>
 8008d92:	1823      	adds	r3, r4, r0
 8008d94:	461c      	mov	r4, r3
 8008d96:	2000      	movs	r0, #0
 8008d98:	210a      	movs	r1, #10
 8008d9a:	3403      	adds	r4, #3
 8008d9c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8008da0:	b14a      	cbz	r2, 8008db6 <OscServer::GetChannel(char const*)+0x2e>
 8008da2:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8008da6:	2d09      	cmp	r5, #9
 8008da8:	d80b      	bhi.n	8008dc2 <OscServer::GetChannel(char const*)+0x3a>
 8008daa:	fb01 2000 	mla	r0, r1, r0, r2
 8008dae:	429c      	cmp	r4, r3
 8008db0:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 8008db4:	d1f2      	bne.n	8008d9c <OscServer::GetChannel(char const*)+0x14>
 8008db6:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8008dba:	bfc8      	it	gt
 8008dbc:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
 8008dc0:	bd38      	pop	{r3, r4, r5, pc}
 8008dc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008dc6:	e7fb      	b.n	8008dc0 <OscServer::GetChannel(char const*)+0x38>
 8008dc8:	20000280 	andcs	r0, r0, r0, lsl #5

08008dcc <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 8008dcc:	2000      	movs	r0, #0
 8008dce:	b570      	push	{r4, r5, r6, lr}
 8008dd0:	3a01      	subs	r2, #1
 8008dd2:	4c09      	ldr	r4, [pc, #36]	; (8008df8 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2c>)
 8008dd4:	b292      	uxth	r2, r2
 8008dd6:	4414      	add	r4, r2
 8008dd8:	4413      	add	r3, r2
 8008dda:	3901      	subs	r1, #1
 8008ddc:	429a      	cmp	r2, r3
 8008dde:	d20a      	bcs.n	8008df6 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x2a>
 8008de0:	7826      	ldrb	r6, [r4, #0]
 8008de2:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8008de6:	3201      	adds	r2, #1
 8008de8:	42ae      	cmp	r6, r5
 8008dea:	bf1c      	itt	ne
 8008dec:	7025      	strbne	r5, [r4, #0]
 8008dee:	2001      	movne	r0, #1
 8008df0:	3401      	adds	r4, #1
 8008df2:	b292      	uxth	r2, r2
 8008df4:	e7f2      	b.n	8008ddc <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x10>
 8008df6:	bd70      	pop	{r4, r5, r6, pc}
 8008df8:	20000300 	andcs	r0, r0, r0, lsl #6

08008dfc <OscServer::Run()>:
 8008dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008dfe:	4d98      	ldr	r5, [pc, #608]	; (8009060 <OscServer::Run()+0x264>)
 8008e00:	b097      	sub	sp, #92	; 0x5c
 8008e02:	4604      	mov	r4, r0
 8008e04:	4629      	mov	r1, r5
 8008e06:	7900      	ldrb	r0, [r0, #4]
 8008e08:	f10d 031a 	add.w	r3, sp, #26
 8008e0c:	aa07      	add	r2, sp, #28
 8008e0e:	f003 fcf7 	bl	800c800 <udp_recv2>
 8008e12:	4606      	mov	r6, r0
 8008e14:	b1a8      	cbz	r0, 8008e42 <OscServer::Run()+0x46>
 8008e16:	4602      	mov	r2, r0
 8008e18:	6829      	ldr	r1, [r5, #0]
 8008e1a:	a808      	add	r0, sp, #32
 8008e1c:	f000 fc56 	bl	80096cc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008e20:	4990      	ldr	r1, [pc, #576]	; (8009064 <OscServer::Run()+0x268>)
 8008e22:	6828      	ldr	r0, [r5, #0]
 8008e24:	f000 fb72 	bl	800950c <lo_pattern_match>
 8008e28:	4607      	mov	r7, r0
 8008e2a:	2800      	cmp	r0, #0
 8008e2c:	d074      	beq.n	8008f18 <OscServer::Run()+0x11c>
 8008e2e:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8008e32:	b133      	cbz	r3, 8008e42 <OscServer::Run()+0x46>
 8008e34:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008e36:	2e01      	cmp	r6, #1
 8008e38:	d105      	bne.n	8008e46 <OscServer::Run()+0x4a>
 8008e3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e3c:	781b      	ldrb	r3, [r3, #0]
 8008e3e:	2b62      	cmp	r3, #98	; 0x62
 8008e40:	d03d      	beq.n	8008ebe <OscServer::Run()+0xc2>
 8008e42:	b017      	add	sp, #92	; 0x5c
 8008e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e46:	2e02      	cmp	r6, #2
 8008e48:	d1fb      	bne.n	8008e42 <OscServer::Run()+0x46>
 8008e4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e4c:	781b      	ldrb	r3, [r3, #0]
 8008e4e:	2b69      	cmp	r3, #105	; 0x69
 8008e50:	d1f7      	bne.n	8008e42 <OscServer::Run()+0x46>
 8008e52:	2100      	movs	r1, #0
 8008e54:	a808      	add	r0, sp, #32
 8008e56:	f000 fc89 	bl	800976c <OscSimpleMessage::GetInt(unsigned int)>
 8008e5a:	b285      	uxth	r5, r0
 8008e5c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008e60:	d2ef      	bcs.n	8008e42 <OscServer::Run()+0x46>
 8008e62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008e64:	2b01      	cmp	r3, #1
 8008e66:	d9ec      	bls.n	8008e42 <OscServer::Run()+0x46>
 8008e68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e6a:	785b      	ldrb	r3, [r3, #1]
 8008e6c:	2b69      	cmp	r3, #105	; 0x69
 8008e6e:	d147      	bne.n	8008f00 <OscServer::Run()+0x104>
 8008e70:	2101      	movs	r1, #1
 8008e72:	a808      	add	r0, sp, #32
 8008e74:	f000 fc7a 	bl	800976c <OscSimpleMessage::GetInt(unsigned int)>
 8008e78:	3501      	adds	r5, #1
 8008e7a:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8008e7e:	b2ad      	uxth	r5, r5
 8008e80:	2301      	movs	r3, #1
 8008e82:	462a      	mov	r2, r5
 8008e84:	4620      	mov	r0, r4
 8008e86:	a90f      	add	r1, sp, #60	; 0x3c
 8008e88:	f7ff ffa0 	bl	8008dcc <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008e8c:	b910      	cbnz	r0, 8008e94 <OscServer::Run()+0x98>
 8008e8e:	7ae3      	ldrb	r3, [r4, #11]
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d0d6      	beq.n	8008e42 <OscServer::Run()+0x46>
 8008e94:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008e96:	7aa1      	ldrb	r1, [r4, #10]
 8008e98:	6803      	ldr	r3, [r0, #0]
 8008e9a:	691e      	ldr	r6, [r3, #16]
 8008e9c:	2900      	cmp	r1, #0
 8008e9e:	f040 80a4 	bne.w	8008fea <OscServer::Run()+0x1ee>
 8008ea2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008ea6:	4a70      	ldr	r2, [pc, #448]	; (8009068 <OscServer::Run()+0x26c>)
 8008ea8:	47b0      	blx	r6
 8008eaa:	7b21      	ldrb	r1, [r4, #12]
 8008eac:	2900      	cmp	r1, #0
 8008eae:	d1c8      	bne.n	8008e42 <OscServer::Run()+0x46>
 8008eb0:	2301      	movs	r3, #1
 8008eb2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008eb4:	7323      	strb	r3, [r4, #12]
 8008eb6:	6803      	ldr	r3, [r0, #0]
 8008eb8:	689b      	ldr	r3, [r3, #8]
 8008eba:	4798      	blx	r3
 8008ebc:	e7c1      	b.n	8008e42 <OscServer::Run()+0x46>
 8008ebe:	2200      	movs	r2, #0
 8008ec0:	a908      	add	r1, sp, #32
 8008ec2:	a80f      	add	r0, sp, #60	; 0x3c
 8008ec4:	f000 fc66 	bl	8009794 <OscSimpleMessage::GetBlob(unsigned int)>
 8008ec8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008eca:	b29d      	uxth	r5, r3
 8008ecc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008ed0:	d8b7      	bhi.n	8008e42 <OscServer::Run()+0x46>
 8008ed2:	462b      	mov	r3, r5
 8008ed4:	4632      	mov	r2, r6
 8008ed6:	4620      	mov	r0, r4
 8008ed8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008eda:	f7ff ff77 	bl	8008dcc <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>
 8008ede:	b910      	cbnz	r0, 8008ee6 <OscServer::Run()+0xea>
 8008ee0:	7ae3      	ldrb	r3, [r4, #11]
 8008ee2:	2b00      	cmp	r3, #0
 8008ee4:	d0ad      	beq.n	8008e42 <OscServer::Run()+0x46>
 8008ee6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008ee8:	6803      	ldr	r3, [r0, #0]
 8008eea:	691e      	ldr	r6, [r3, #16]
 8008eec:	7aa3      	ldrb	r3, [r4, #10]
 8008eee:	b113      	cbz	r3, 8008ef6 <OscServer::Run()+0xfa>
 8008ef0:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8008ef4:	d179      	bne.n	8008fea <OscServer::Run()+0x1ee>
 8008ef6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008efa:	2100      	movs	r1, #0
 8008efc:	4a5a      	ldr	r2, [pc, #360]	; (8009068 <OscServer::Run()+0x26c>)
 8008efe:	e7d3      	b.n	8008ea8 <OscServer::Run()+0xac>
 8008f00:	2b66      	cmp	r3, #102	; 0x66
 8008f02:	d19e      	bne.n	8008e42 <OscServer::Run()+0x46>
 8008f04:	2101      	movs	r1, #1
 8008f06:	a808      	add	r0, sp, #32
 8008f08:	f000 fc1c 	bl	8009744 <OscSimpleMessage::GetFloat(unsigned int)>
 8008f0c:	4957      	ldr	r1, [pc, #348]	; (800906c <OscServer::Run()+0x270>)
 8008f0e:	f7fe ff73 	bl	8007df8 <__aeabi_fmul>
 8008f12:	f7ff f89b 	bl	800804c <__aeabi_f2uiz>
 8008f16:	e7af      	b.n	8008e78 <OscServer::Run()+0x7c>
 8008f18:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008f1a:	b9b3      	cbnz	r3, 8008f4a <OscServer::Run()+0x14e>
 8008f1c:	4954      	ldr	r1, [pc, #336]	; (8009070 <OscServer::Run()+0x274>)
 8008f1e:	6828      	ldr	r0, [r5, #0]
 8008f20:	f000 faf4 	bl	800950c <lo_pattern_match>
 8008f24:	4606      	mov	r6, r0
 8008f26:	2800      	cmp	r0, #0
 8008f28:	d134      	bne.n	8008f94 <OscServer::Run()+0x198>
 8008f2a:	4952      	ldr	r1, [pc, #328]	; (8009074 <OscServer::Run()+0x278>)
 8008f2c:	6828      	ldr	r0, [r5, #0]
 8008f2e:	f000 faed 	bl	800950c <lo_pattern_match>
 8008f32:	2800      	cmp	r0, #0
 8008f34:	d05f      	beq.n	8008ff6 <OscServer::Run()+0x1fa>
 8008f36:	4b50      	ldr	r3, [pc, #320]	; (8009078 <OscServer::Run()+0x27c>)
 8008f38:	9a07      	ldr	r2, [sp, #28]
 8008f3a:	9300      	str	r3, [sp, #0]
 8008f3c:	6861      	ldr	r1, [r4, #4]
 8008f3e:	8863      	ldrh	r3, [r4, #2]
 8008f40:	9601      	str	r6, [sp, #4]
 8008f42:	a80f      	add	r0, sp, #60	; 0x3c
 8008f44:	f000 fc5e 	bl	8009804 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 8008f48:	e77b      	b.n	8008e42 <OscServer::Run()+0x46>
 8008f4a:	494c      	ldr	r1, [pc, #304]	; (800907c <OscServer::Run()+0x280>)
 8008f4c:	6828      	ldr	r0, [r5, #0]
 8008f4e:	f000 fadd 	bl	800950c <lo_pattern_match>
 8008f52:	2800      	cmp	r0, #0
 8008f54:	d0e2      	beq.n	8008f1c <OscServer::Run()+0x120>
 8008f56:	4632      	mov	r2, r6
 8008f58:	6829      	ldr	r1, [r5, #0]
 8008f5a:	a80f      	add	r0, sp, #60	; 0x3c
 8008f5c:	f000 fbb6 	bl	80096cc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 8008f60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008f62:	2b00      	cmp	r3, #0
 8008f64:	f43f af6d 	beq.w	8008e42 <OscServer::Run()+0x46>
 8008f68:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008f6a:	781b      	ldrb	r3, [r3, #0]
 8008f6c:	2b66      	cmp	r3, #102	; 0x66
 8008f6e:	f47f af68 	bne.w	8008e42 <OscServer::Run()+0x46>
 8008f72:	4639      	mov	r1, r7
 8008f74:	a80f      	add	r0, sp, #60	; 0x3c
 8008f76:	f000 fbe5 	bl	8009744 <OscSimpleMessage::GetFloat(unsigned int)>
 8008f7a:	2100      	movs	r1, #0
 8008f7c:	f7ff f834 	bl	8007fe8 <__aeabi_fcmpeq>
 8008f80:	4603      	mov	r3, r0
 8008f82:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008f84:	b91b      	cbnz	r3, 8008f8e <OscServer::Run()+0x192>
 8008f86:	6803      	ldr	r3, [r0, #0]
 8008f88:	689b      	ldr	r3, [r3, #8]
 8008f8a:	4798      	blx	r3
 8008f8c:	e759      	b.n	8008e42 <OscServer::Run()+0x46>
 8008f8e:	6803      	ldr	r3, [r0, #0]
 8008f90:	68db      	ldr	r3, [r3, #12]
 8008f92:	e7fa      	b.n	8008f8a <OscServer::Run()+0x18e>
 8008f94:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8008f98:	2b00      	cmp	r3, #0
 8008f9a:	f43f af52 	beq.w	8008e42 <OscServer::Run()+0x46>
 8008f9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008fa0:	2b01      	cmp	r3, #1
 8008fa2:	f47f af4e 	bne.w	8008e42 <OscServer::Run()+0x46>
 8008fa6:	6829      	ldr	r1, [r5, #0]
 8008fa8:	4620      	mov	r0, r4
 8008faa:	f7ff feed 	bl	8008d88 <OscServer::GetChannel(char const*)>
 8008fae:	b285      	uxth	r5, r0
 8008fb0:	1e6b      	subs	r3, r5, #1
 8008fb2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008fb6:	f4bf af44 	bcs.w	8008e42 <OscServer::Run()+0x46>
 8008fba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008fbc:	781b      	ldrb	r3, [r3, #0]
 8008fbe:	2b69      	cmp	r3, #105	; 0x69
 8008fc0:	d106      	bne.n	8008fd0 <OscServer::Run()+0x1d4>
 8008fc2:	2100      	movs	r1, #0
 8008fc4:	a808      	add	r0, sp, #32
 8008fc6:	f000 fbd1 	bl	800976c <OscSimpleMessage::GetInt(unsigned int)>
 8008fca:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 8008fce:	e757      	b.n	8008e80 <OscServer::Run()+0x84>
 8008fd0:	2b66      	cmp	r3, #102	; 0x66
 8008fd2:	f47f af36 	bne.w	8008e42 <OscServer::Run()+0x46>
 8008fd6:	2100      	movs	r1, #0
 8008fd8:	a808      	add	r0, sp, #32
 8008fda:	f000 fbb3 	bl	8009744 <OscSimpleMessage::GetFloat(unsigned int)>
 8008fde:	4923      	ldr	r1, [pc, #140]	; (800906c <OscServer::Run()+0x270>)
 8008fe0:	f7fe ff0a 	bl	8007df8 <__aeabi_fmul>
 8008fe4:	f7ff f832 	bl	800804c <__aeabi_f2uiz>
 8008fe8:	e7ef      	b.n	8008fca <OscServer::Run()+0x1ce>
 8008fea:	8923      	ldrh	r3, [r4, #8]
 8008fec:	42ab      	cmp	r3, r5
 8008fee:	bf38      	it	cc
 8008ff0:	462b      	movcc	r3, r5
 8008ff2:	8123      	strh	r3, [r4, #8]
 8008ff4:	e781      	b.n	8008efa <OscServer::Run()+0xfe>
 8008ff6:	4922      	ldr	r1, [pc, #136]	; (8009080 <OscServer::Run()+0x284>)
 8008ff8:	6828      	ldr	r0, [r5, #0]
 8008ffa:	f000 fa87 	bl	800950c <lo_pattern_match>
 8008ffe:	2800      	cmp	r0, #0
 8009000:	f43f af1f 	beq.w	8008e42 <OscServer::Run()+0x46>
 8009004:	f104 030d 	add.w	r3, r4, #13
 8009008:	4d1e      	ldr	r5, [pc, #120]	; (8009084 <OscServer::Run()+0x288>)
 800900a:	9302      	str	r3, [sp, #8]
 800900c:	4b1e      	ldr	r3, [pc, #120]	; (8009088 <OscServer::Run()+0x28c>)
 800900e:	9a07      	ldr	r2, [sp, #28]
 8009010:	6861      	ldr	r1, [r4, #4]
 8009012:	9300      	str	r3, [sp, #0]
 8009014:	9501      	str	r5, [sp, #4]
 8009016:	8863      	ldrh	r3, [r4, #2]
 8009018:	a805      	add	r0, sp, #20
 800901a:	f000 fc17 	bl	800984c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800901e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009020:	9a07      	ldr	r2, [sp, #28]
 8009022:	e9cd 5301 	strd	r5, r3, [sp, #4]
 8009026:	4b19      	ldr	r3, [pc, #100]	; (800908c <OscServer::Run()+0x290>)
 8009028:	6861      	ldr	r1, [r4, #4]
 800902a:	9300      	str	r3, [sp, #0]
 800902c:	a806      	add	r0, sp, #24
 800902e:	8863      	ldrh	r3, [r4, #2]
 8009030:	f000 fc0c 	bl	800984c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 8009034:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009036:	9a07      	ldr	r2, [sp, #28]
 8009038:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800903c:	4b14      	ldr	r3, [pc, #80]	; (8009090 <OscServer::Run()+0x294>)
 800903e:	6861      	ldr	r1, [r4, #4]
 8009040:	9300      	str	r3, [sp, #0]
 8009042:	a80f      	add	r0, sp, #60	; 0x3c
 8009044:	8863      	ldrh	r3, [r4, #2]
 8009046:	f000 fc01 	bl	800984c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 800904a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800904c:	2800      	cmp	r0, #0
 800904e:	f43f aef8 	beq.w	8008e42 <OscServer::Run()+0x46>
 8009052:	6803      	ldr	r3, [r0, #0]
 8009054:	9a07      	ldr	r2, [sp, #28]
 8009056:	691d      	ldr	r5, [r3, #16]
 8009058:	6861      	ldr	r1, [r4, #4]
 800905a:	8863      	ldrh	r3, [r4, #2]
 800905c:	47a8      	blx	r5
 800905e:	e6f0      	b.n	8008e42 <OscServer::Run()+0x46>
 8009060:	2000017c 	andcs	r0, r0, ip, ror r1
 8009064:	20000280 	andcs	r0, r0, r0, lsl #5
 8009068:	20000300 	andcs	r0, r0, r0, lsl #6
 800906c:	437f0000 	cmnmi	pc, #0
 8009070:	20000180 	andcs	r0, r0, r0, lsl #3
 8009074:	0801107c 	stmdaeq	r1, {r2, r3, r4, r5, r6, ip}
 8009078:	08011082 	stmdaeq	r1, {r1, r7, ip}
 800907c:	20000200 	andcs	r0, r0, r0, lsl #4
 8009080:	200000fc 	strdcs	r0, [r0], -ip
 8009084:	08011074 	stmdaeq	r1, {r2, r4, r5, r6, ip}
 8009088:	08011088 	stmdaeq	r1, {r3, r7, ip}
 800908c:	08011091 	stmdaeq	r1, {r0, r4, r7, ip}
 8009090:	0801109d 	stmdaeq	r1, {r0, r2, r3, r4, r7, ip}

08009094 <OscServer::Print()>:
 8009094:	b510      	push	{r4, lr}
 8009096:	4604      	mov	r4, r0
 8009098:	480f      	ldr	r0, [pc, #60]	; (80090d8 <OscServer::Print()+0x44>)
 800909a:	f7ff fd3d 	bl	8008b18 <printf>
 800909e:	8821      	ldrh	r1, [r4, #0]
 80090a0:	480e      	ldr	r0, [pc, #56]	; (80090dc <OscServer::Print()+0x48>)
 80090a2:	f7ff fd39 	bl	8008b18 <printf>
 80090a6:	8861      	ldrh	r1, [r4, #2]
 80090a8:	480d      	ldr	r0, [pc, #52]	; (80090e0 <OscServer::Print()+0x4c>)
 80090aa:	f7ff fd35 	bl	8008b18 <printf>
 80090ae:	4a0d      	ldr	r2, [pc, #52]	; (80090e4 <OscServer::Print()+0x50>)
 80090b0:	490d      	ldr	r1, [pc, #52]	; (80090e8 <OscServer::Print()+0x54>)
 80090b2:	480e      	ldr	r0, [pc, #56]	; (80090ec <OscServer::Print()+0x58>)
 80090b4:	f7ff fd30 	bl	8008b18 <printf>
 80090b8:	490d      	ldr	r1, [pc, #52]	; (80090f0 <OscServer::Print()+0x5c>)
 80090ba:	480e      	ldr	r0, [pc, #56]	; (80090f4 <OscServer::Print()+0x60>)
 80090bc:	f7ff fd2c 	bl	8008b18 <printf>
 80090c0:	7aa1      	ldrb	r1, [r4, #10]
 80090c2:	4a0d      	ldr	r2, [pc, #52]	; (80090f8 <OscServer::Print()+0x64>)
 80090c4:	4b0d      	ldr	r3, [pc, #52]	; (80090fc <OscServer::Print()+0x68>)
 80090c6:	480e      	ldr	r0, [pc, #56]	; (8009100 <OscServer::Print()+0x6c>)
 80090c8:	2900      	cmp	r1, #0
 80090ca:	bf14      	ite	ne
 80090cc:	4611      	movne	r1, r2
 80090ce:	4619      	moveq	r1, r3
 80090d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80090d4:	f7ff bd20 	b.w	8008b18 <printf>
 80090d8:	080110ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, ip}
 80090dc:	080110ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, ip}
 80090e0:	080110d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, ip}
 80090e4:	20000180 	andcs	r0, r0, r0, lsl #3
 80090e8:	20000280 	andcs	r0, r0, r0, lsl #5
 80090ec:	080110f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, ip}
 80090f0:	20000200 	andcs	r0, r0, r0, lsl #4
 80090f4:	08011114 	stmdaeq	r1, {r2, r4, r8, ip}
 80090f8:	080110a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, ip}
 80090fc:	080110ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, ip}
 8009100:	08011132 	stmdaeq	r1, {r1, r4, r5, r8, ip}

08009104 <strncpy.constprop.0.isra.0>:
 8009104:	227f      	movs	r2, #127	; 0x7f
 8009106:	1e4b      	subs	r3, r1, #1
 8009108:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800910c:	b909      	cbnz	r1, 8009112 <strncpy.constprop.0.isra.0+0xe>
 800910e:	f005 bf5f 	b.w	800efd0 <memset>
 8009112:	3a01      	subs	r2, #1
 8009114:	f800 1b01 	strb.w	r1, [r0], #1
 8009118:	d1f6      	bne.n	8009108 <strncpy.constprop.0.isra.0+0x4>
 800911a:	4770      	bx	lr

0800911c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800911c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800911e:	88c5      	ldrh	r5, [r0, #6]
 8009120:	8886      	ldrh	r6, [r0, #4]
 8009122:	42b5      	cmp	r5, r6
 8009124:	d216      	bcs.n	8009154 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 8009126:	4604      	mov	r4, r0
 8009128:	6800      	ldr	r0, [r0, #0]
 800912a:	4428      	add	r0, r5
 800912c:	1b75      	subs	r5, r6, r5
 800912e:	7a26      	ldrb	r6, [r4, #8]
 8009130:	b923      	cbnz	r3, 800913c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 8009132:	b926      	cbnz	r6, 800913e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 8009134:	9200      	str	r2, [sp, #0]
 8009136:	460b      	mov	r3, r1
 8009138:	4a09      	ldr	r2, [pc, #36]	; (8009160 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800913a:	e003      	b.n	8009144 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800913c:	b166      	cbz	r6, 8009158 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800913e:	460b      	mov	r3, r1
 8009140:	9200      	str	r2, [sp, #0]
 8009142:	4a08      	ldr	r2, [pc, #32]	; (8009164 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 8009144:	4629      	mov	r1, r5
 8009146:	f7ff fcf7 	bl	8008b38 <snprintf>
 800914a:	4285      	cmp	r5, r0
 800914c:	bfa2      	ittt	ge
 800914e:	88e3      	ldrhge	r3, [r4, #6]
 8009150:	181b      	addge	r3, r3, r0
 8009152:	80e3      	strhge	r3, [r4, #6]
 8009154:	b002      	add	sp, #8
 8009156:	bd70      	pop	{r4, r5, r6, pc}
 8009158:	9200      	str	r2, [sp, #0]
 800915a:	460b      	mov	r3, r1
 800915c:	4a02      	ldr	r2, [pc, #8]	; (8009168 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800915e:	e7f1      	b.n	8009144 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 8009160:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 8009164:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 8009168:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}

0800916c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
 800916c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800916e:	88c5      	ldrh	r5, [r0, #6]
 8009170:	8886      	ldrh	r6, [r0, #4]
 8009172:	42b5      	cmp	r5, r6
 8009174:	d216      	bcs.n	80091a4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x38>
 8009176:	4604      	mov	r4, r0
 8009178:	6800      	ldr	r0, [r0, #0]
 800917a:	4428      	add	r0, r5
 800917c:	1b75      	subs	r5, r6, r5
 800917e:	7a26      	ldrb	r6, [r4, #8]
 8009180:	b923      	cbnz	r3, 800918c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x20>
 8009182:	b926      	cbnz	r6, 800918e <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x22>
 8009184:	9200      	str	r2, [sp, #0]
 8009186:	460b      	mov	r3, r1
 8009188:	4a09      	ldr	r2, [pc, #36]	; (80091b0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>)
 800918a:	e003      	b.n	8009194 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 800918c:	b166      	cbz	r6, 80091a8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
 800918e:	460b      	mov	r3, r1
 8009190:	9200      	str	r2, [sp, #0]
 8009192:	4a08      	ldr	r2, [pc, #32]	; (80091b4 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x48>)
 8009194:	4629      	mov	r1, r5
 8009196:	f7ff fccf 	bl	8008b38 <snprintf>
 800919a:	4285      	cmp	r5, r0
 800919c:	bfa2      	ittt	ge
 800919e:	88e3      	ldrhge	r3, [r4, #6]
 80091a0:	181b      	addge	r3, r3, r0
 80091a2:	80e3      	strhge	r3, [r4, #6]
 80091a4:	b002      	add	sp, #8
 80091a6:	bd70      	pop	{r4, r5, r6, pc}
 80091a8:	9200      	str	r2, [sp, #0]
 80091aa:	460b      	mov	r3, r1
 80091ac:	4a02      	ldr	r2, [pc, #8]	; (80091b8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x4c>)
 80091ae:	e7f1      	b.n	8009194 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x28>
 80091b0:	080111ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip}
 80091b4:	080111a1 	stmdaeq	r1, {r0, r5, r7, r8, ip}
 80091b8:	080111ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, ip}

080091bc <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
 80091bc:	b510      	push	{r4, lr}
 80091be:	4604      	mov	r4, r0
 80091c0:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 80091c4:	f840 1b04 	str.w	r1, [r0], #4
 80091c8:	2100      	movs	r1, #0
 80091ca:	f005 ff01 	bl	800efd0 <memset>
 80091ce:	4b02      	ldr	r3, [pc, #8]	; (80091d8 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x1c>)
 80091d0:	4620      	mov	r0, r4
 80091d2:	60a3      	str	r3, [r4, #8]
 80091d4:	bd10      	pop	{r4, pc}
 80091d6:	bf00      	nop
 80091d8:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

080091dc <OSCServerParams::Load()>:
 80091dc:	b508      	push	{r3, lr}
 80091de:	2300      	movs	r3, #0
 80091e0:	4601      	mov	r1, r0
 80091e2:	6043      	str	r3, [r0, #4]
 80091e4:	6800      	ldr	r0, [r0, #0]
 80091e6:	b120      	cbz	r0, 80091f2 <OSCServerParams::Load()+0x16>
 80091e8:	6803      	ldr	r3, [r0, #0]
 80091ea:	3104      	adds	r1, #4
 80091ec:	68db      	ldr	r3, [r3, #12]
 80091ee:	4798      	blx	r3
 80091f0:	2001      	movs	r0, #1
 80091f2:	bd08      	pop	{r3, pc}

080091f4 <OSCServerParams::Load(char const*, unsigned int)>:
 80091f4:	6803      	ldr	r3, [r0, #0]
 80091f6:	b1d3      	cbz	r3, 800922e <OSCServerParams::Load(char const*, unsigned int)+0x3a>
 80091f8:	2300      	movs	r3, #0
 80091fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091fc:	460d      	mov	r5, r1
 80091fe:	4616      	mov	r6, r2
 8009200:	4604      	mov	r4, r0
 8009202:	6043      	str	r3, [r0, #4]
 8009204:	4602      	mov	r2, r0
 8009206:	490a      	ldr	r1, [pc, #40]	; (8009230 <OSCServerParams::Load(char const*, unsigned int)+0x3c>)
 8009208:	4668      	mov	r0, sp
 800920a:	f005 f8f1 	bl	800e3f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800920e:	4632      	mov	r2, r6
 8009210:	4629      	mov	r1, r5
 8009212:	4668      	mov	r0, sp
 8009214:	f005 f8f0 	bl	800e3f8 <ReadConfigFile::Read(char const*, unsigned int)>
 8009218:	4621      	mov	r1, r4
 800921a:	f851 0b04 	ldr.w	r0, [r1], #4
 800921e:	6803      	ldr	r3, [r0, #0]
 8009220:	689b      	ldr	r3, [r3, #8]
 8009222:	4798      	blx	r3
 8009224:	4668      	mov	r0, sp
 8009226:	f005 f8e6 	bl	800e3f6 <ReadConfigFile::~ReadConfigFile()>
 800922a:	b002      	add	sp, #8
 800922c:	bd70      	pop	{r4, r5, r6, pc}
 800922e:	4770      	bx	lr
 8009230:	0800932d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, ip, pc}

08009234 <OSCServerParams::callbackFunction(char const*)>:
 8009234:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009236:	460d      	mov	r5, r1
 8009238:	4604      	mov	r4, r0
 800923a:	4937      	ldr	r1, [pc, #220]	; (8009318 <OSCServerParams::callbackFunction(char const*)+0xe4>)
 800923c:	4628      	mov	r0, r5
 800923e:	f10d 0202 	add.w	r2, sp, #2
 8009242:	f005 f966 	bl	800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009246:	b980      	cbnz	r0, 800926a <OSCServerParams::callbackFunction(char const*)+0x36>
 8009248:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800924c:	6863      	ldr	r3, [r4, #4]
 800924e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009252:	bf33      	iteet	cc
 8009254:	f44f 52fa 	movcc.w	r2, #8000	; 0x1f40
 8009258:	8122      	strhcs	r2, [r4, #8]
 800925a:	f043 0301 	orrcs.w	r3, r3, #1
 800925e:	8122      	strhcc	r2, [r4, #8]
 8009260:	bf38      	it	cc
 8009262:	f023 0301 	biccc.w	r3, r3, #1
 8009266:	6063      	str	r3, [r4, #4]
 8009268:	e028      	b.n	80092bc <OSCServerParams::callbackFunction(char const*)+0x88>
 800926a:	4628      	mov	r0, r5
 800926c:	492b      	ldr	r1, [pc, #172]	; (800931c <OSCServerParams::callbackFunction(char const*)+0xe8>)
 800926e:	f10d 0202 	add.w	r2, sp, #2
 8009272:	f005 f94e 	bl	800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009276:	b978      	cbnz	r0, 8009298 <OSCServerParams::callbackFunction(char const*)+0x64>
 8009278:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800927c:	6863      	ldr	r3, [r4, #4]
 800927e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009282:	bf33      	iteet	cc
 8009284:	f242 3228 	movwcc	r2, #9000	; 0x2328
 8009288:	8162      	strhcs	r2, [r4, #10]
 800928a:	f043 0302 	orrcs.w	r3, r3, #2
 800928e:	8162      	strhcc	r2, [r4, #10]
 8009290:	bf38      	it	cc
 8009292:	f023 0302 	biccc.w	r3, r3, #2
 8009296:	e7e6      	b.n	8009266 <OSCServerParams::callbackFunction(char const*)+0x32>
 8009298:	4628      	mov	r0, r5
 800929a:	4921      	ldr	r1, [pc, #132]	; (8009320 <OSCServerParams::callbackFunction(char const*)+0xec>)
 800929c:	f10d 0201 	add.w	r2, sp, #1
 80092a0:	f005 f955 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80092a4:	b978      	cbnz	r0, 80092c6 <OSCServerParams::callbackFunction(char const*)+0x92>
 80092a6:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80092aa:	6863      	ldr	r3, [r4, #4]
 80092ac:	b142      	cbz	r2, 80092c0 <OSCServerParams::callbackFunction(char const*)+0x8c>
 80092ae:	f043 0308 	orr.w	r3, r3, #8
 80092b2:	3a00      	subs	r2, #0
 80092b4:	bf18      	it	ne
 80092b6:	2201      	movne	r2, #1
 80092b8:	6063      	str	r3, [r4, #4]
 80092ba:	7362      	strb	r2, [r4, #13]
 80092bc:	b002      	add	sp, #8
 80092be:	bd70      	pop	{r4, r5, r6, pc}
 80092c0:	f023 0308 	bic.w	r3, r3, #8
 80092c4:	e7f5      	b.n	80092b2 <OSCServerParams::callbackFunction(char const*)+0x7e>
 80092c6:	267f      	movs	r6, #127	; 0x7f
 80092c8:	4628      	mov	r0, r5
 80092ca:	4916      	ldr	r1, [pc, #88]	; (8009324 <OSCServerParams::callbackFunction(char const*)+0xf0>)
 80092cc:	ab01      	add	r3, sp, #4
 80092ce:	f104 020e 	add.w	r2, r4, #14
 80092d2:	9601      	str	r6, [sp, #4]
 80092d4:	f005 f8c4 	bl	800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092d8:	b918      	cbnz	r0, 80092e2 <OSCServerParams::callbackFunction(char const*)+0xae>
 80092da:	6863      	ldr	r3, [r4, #4]
 80092dc:	f043 0304 	orr.w	r3, r3, #4
 80092e0:	e7c1      	b.n	8009266 <OSCServerParams::callbackFunction(char const*)+0x32>
 80092e2:	4628      	mov	r0, r5
 80092e4:	4910      	ldr	r1, [pc, #64]	; (8009328 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 80092e6:	ab01      	add	r3, sp, #4
 80092e8:	f104 028e 	add.w	r2, r4, #142	; 0x8e
 80092ec:	9601      	str	r6, [sp, #4]
 80092ee:	f005 f8b7 	bl	800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80092f2:	b918      	cbnz	r0, 80092fc <OSCServerParams::callbackFunction(char const*)+0xc8>
 80092f4:	6863      	ldr	r3, [r4, #4]
 80092f6:	f043 0320 	orr.w	r3, r3, #32
 80092fa:	e7b4      	b.n	8009266 <OSCServerParams::callbackFunction(char const*)+0x32>
 80092fc:	4628      	mov	r0, r5
 80092fe:	490a      	ldr	r1, [pc, #40]	; (8009328 <OSCServerParams::callbackFunction(char const*)+0xf4>)
 8009300:	ab01      	add	r3, sp, #4
 8009302:	f504 7287 	add.w	r2, r4, #270	; 0x10e
 8009306:	9601      	str	r6, [sp, #4]
 8009308:	f005 f8aa 	bl	800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800930c:	2800      	cmp	r0, #0
 800930e:	d1d5      	bne.n	80092bc <OSCServerParams::callbackFunction(char const*)+0x88>
 8009310:	6863      	ldr	r3, [r4, #4]
 8009312:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009316:	e7a6      	b.n	8009266 <OSCServerParams::callbackFunction(char const*)+0x32>
 8009318:	080111ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, ip}
 800931c:	080111fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip}
 8009320:	080111b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, ip}
 8009324:	080111d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, ip}
 8009328:	080111e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip}

0800932c <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 800932c:	f7ff bf82 	b.w	8009234 <OSCServerParams::callbackFunction(char const*)>

08009330 <OSCServerParams::Set(OscServer*)>:
 8009330:	b538      	push	{r3, r4, r5, lr}
 8009332:	460d      	mov	r5, r1
 8009334:	6843      	ldr	r3, [r0, #4]
 8009336:	4604      	mov	r4, r0
 8009338:	07d9      	lsls	r1, r3, #31
 800933a:	bf44      	itt	mi
 800933c:	8902      	ldrhmi	r2, [r0, #8]
 800933e:	802a      	strhmi	r2, [r5, #0]
 8009340:	079a      	lsls	r2, r3, #30
 8009342:	bf44      	itt	mi
 8009344:	8942      	ldrhmi	r2, [r0, #10]
 8009346:	806a      	strhmi	r2, [r5, #2]
 8009348:	0758      	lsls	r0, r3, #29
 800934a:	d504      	bpl.n	8009356 <OSCServerParams::Set(OscServer*)+0x26>
 800934c:	4628      	mov	r0, r5
 800934e:	f104 010e 	add.w	r1, r4, #14
 8009352:	f7ff fcc7 	bl	8008ce4 <OscServer::SetPath(char const*)>
 8009356:	6863      	ldr	r3, [r4, #4]
 8009358:	0699      	lsls	r1, r3, #26
 800935a:	d504      	bpl.n	8009366 <OSCServerParams::Set(OscServer*)+0x36>
 800935c:	4628      	mov	r0, r5
 800935e:	f104 018e 	add.w	r1, r4, #142	; 0x8e
 8009362:	f7ff fce5 	bl	8008d30 <OscServer::SetPathInfo(char const*)>
 8009366:	6863      	ldr	r3, [r4, #4]
 8009368:	065a      	lsls	r2, r3, #25
 800936a:	d504      	bpl.n	8009376 <OSCServerParams::Set(OscServer*)+0x46>
 800936c:	4628      	mov	r0, r5
 800936e:	f504 7187 	add.w	r1, r4, #270	; 0x10e
 8009372:	f7ff fcf3 	bl	8008d5c <OscServer::SetPathBlackOut(char const*)>
 8009376:	6863      	ldr	r3, [r4, #4]
 8009378:	071b      	lsls	r3, r3, #28
 800937a:	bf44      	itt	mi
 800937c:	7b63      	ldrbmi	r3, [r4, #13]
 800937e:	72ab      	strbmi	r3, [r5, #10]
 8009380:	bd38      	pop	{r3, r4, r5, pc}
	...

08009384 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>:
 8009384:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009386:	4604      	mov	r4, r0
 8009388:	4615      	mov	r5, r2
 800938a:	461e      	mov	r6, r3
 800938c:	b087      	sub	sp, #28
 800938e:	3004      	adds	r0, #4
 8009390:	2900      	cmp	r1, #0
 8009392:	d060      	beq.n	8009456 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 8009394:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8009398:	f005 fe03 	bl	800efa2 <memmove>
 800939c:	4633      	mov	r3, r6
 800939e:	462a      	mov	r2, r5
 80093a0:	4946      	ldr	r1, [pc, #280]	; (80094bc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x138>)
 80093a2:	a803      	add	r0, sp, #12
 80093a4:	f004 ff84 	bl	800e2b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80093a8:	6863      	ldr	r3, [r4, #4]
 80093aa:	f104 070e 	add.w	r7, r4, #14
 80093ae:	075e      	lsls	r6, r3, #29
 80093b0:	d403      	bmi.n	80093ba <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x36>
 80093b2:	4638      	mov	r0, r7
 80093b4:	4942      	ldr	r1, [pc, #264]	; (80094c0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x13c>)
 80093b6:	f7ff fea5 	bl	8009104 <strncpy.constprop.0.isra.0>
 80093ba:	6863      	ldr	r3, [r4, #4]
 80093bc:	f104 068e 	add.w	r6, r4, #142	; 0x8e
 80093c0:	069d      	lsls	r5, r3, #26
 80093c2:	d403      	bmi.n	80093cc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x48>
 80093c4:	4630      	mov	r0, r6
 80093c6:	493f      	ldr	r1, [pc, #252]	; (80094c4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x140>)
 80093c8:	f7ff fe9c 	bl	8009104 <strncpy.constprop.0.isra.0>
 80093cc:	6863      	ldr	r3, [r4, #4]
 80093ce:	f504 7587 	add.w	r5, r4, #270	; 0x10e
 80093d2:	0658      	lsls	r0, r3, #25
 80093d4:	d403      	bmi.n	80093de <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x5a>
 80093d6:	4628      	mov	r0, r5
 80093d8:	493b      	ldr	r1, [pc, #236]	; (80094c8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x144>)
 80093da:	f7ff fe93 	bl	8009104 <strncpy.constprop.0.isra.0>
 80093de:	6863      	ldr	r3, [r4, #4]
 80093e0:	8922      	ldrh	r2, [r4, #8]
 80093e2:	493a      	ldr	r1, [pc, #232]	; (80094cc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x148>)
 80093e4:	f003 0301 	and.w	r3, r3, #1
 80093e8:	a803      	add	r0, sp, #12
 80093ea:	f7ff fe97 	bl	800911c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80093ee:	6863      	ldr	r3, [r4, #4]
 80093f0:	8962      	ldrh	r2, [r4, #10]
 80093f2:	4937      	ldr	r1, [pc, #220]	; (80094d0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x14c>)
 80093f4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80093f8:	a803      	add	r0, sp, #12
 80093fa:	f7ff fe8f 	bl	800911c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 80093fe:	6863      	ldr	r3, [r4, #4]
 8009400:	463a      	mov	r2, r7
 8009402:	4934      	ldr	r1, [pc, #208]	; (80094d4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x150>)
 8009404:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8009408:	a803      	add	r0, sp, #12
 800940a:	f7ff feaf 	bl	800916c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800940e:	6863      	ldr	r3, [r4, #4]
 8009410:	4632      	mov	r2, r6
 8009412:	4931      	ldr	r1, [pc, #196]	; (80094d8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x154>)
 8009414:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8009418:	a803      	add	r0, sp, #12
 800941a:	f7ff fea7 	bl	800916c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800941e:	6863      	ldr	r3, [r4, #4]
 8009420:	462a      	mov	r2, r5
 8009422:	492e      	ldr	r1, [pc, #184]	; (80094dc <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x158>)
 8009424:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8009428:	a803      	add	r0, sp, #12
 800942a:	f7ff fe9f 	bl	800916c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 800942e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009432:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009436:	42a9      	cmp	r1, r5
 8009438:	d222      	bcs.n	8009480 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xfc>
 800943a:	9803      	ldr	r0, [sp, #12]
 800943c:	1a6d      	subs	r5, r5, r1
 800943e:	4408      	add	r0, r1
 8009440:	6861      	ldr	r1, [r4, #4]
 8009442:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009446:	0709      	lsls	r1, r1, #28
 8009448:	7b63      	ldrb	r3, [r4, #13]
 800944a:	d40b      	bmi.n	8009464 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800944c:	b95a      	cbnz	r2, 8009466 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe2>
 800944e:	9300      	str	r3, [sp, #0]
 8009450:	4a23      	ldr	r2, [pc, #140]	; (80094e0 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x15c>)
 8009452:	4b24      	ldr	r3, [pc, #144]	; (80094e4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 8009454:	e00a      	b.n	800946c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 8009456:	6823      	ldr	r3, [r4, #0]
 8009458:	4601      	mov	r1, r0
 800945a:	681a      	ldr	r2, [r3, #0]
 800945c:	4618      	mov	r0, r3
 800945e:	68d2      	ldr	r2, [r2, #12]
 8009460:	4790      	blx	r2
 8009462:	e79b      	b.n	800939c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x18>
 8009464:	b32a      	cbz	r2, 80094b2 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x12e>
 8009466:	9300      	str	r3, [sp, #0]
 8009468:	4a1f      	ldr	r2, [pc, #124]	; (80094e8 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x164>)
 800946a:	4b1e      	ldr	r3, [pc, #120]	; (80094e4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 800946c:	4629      	mov	r1, r5
 800946e:	f7ff fb63 	bl	8008b38 <snprintf>
 8009472:	4285      	cmp	r5, r0
 8009474:	bfa2      	ittt	ge
 8009476:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800947a:	18c0      	addge	r0, r0, r3
 800947c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009480:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009484:	b17b      	cbz	r3, 80094a6 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x122>
 8009486:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800948a:	9b03      	ldr	r3, [sp, #12]
 800948c:	4413      	add	r3, r2
 800948e:	227d      	movs	r2, #125	; 0x7d
 8009490:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009494:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009498:	9903      	ldr	r1, [sp, #12]
 800949a:	54ca      	strb	r2, [r1, r3]
 800949c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80094a0:	3301      	adds	r3, #1
 80094a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80094a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80094aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80094ac:	601a      	str	r2, [r3, #0]
 80094ae:	b007      	add	sp, #28
 80094b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80094b2:	9300      	str	r3, [sp, #0]
 80094b4:	4a0d      	ldr	r2, [pc, #52]	; (80094ec <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x168>)
 80094b6:	4b0b      	ldr	r3, [pc, #44]	; (80094e4 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0x160>)
 80094b8:	e7d8      	b.n	800946c <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)+0xe8>
 80094ba:	bf00      	nop
 80094bc:	080111dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, ip}
 80094c0:	20000280 	andcs	r0, r0, r0, lsl #5
 80094c4:	200000fc 	strdcs	r0, [r0], -ip
 80094c8:	20000200 	andcs	r0, r0, r0, lsl #4
 80094cc:	080111ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, ip}
 80094d0:	080111fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip}
 80094d4:	080111d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, ip}
 80094d8:	080111e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip}
 80094dc:	080111c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, ip}
 80094e0:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 80094e4:	080111b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, ip}
 80094e8:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 80094ec:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}

080094f0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 80094f0:	b513      	push	{r0, r1, r4, lr}
 80094f2:	6804      	ldr	r4, [r0, #0]
 80094f4:	b914      	cbnz	r4, 80094fc <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80094f6:	601c      	str	r4, [r3, #0]
 80094f8:	b002      	add	sp, #8
 80094fa:	bd10      	pop	{r4, pc}
 80094fc:	9300      	str	r3, [sp, #0]
 80094fe:	4613      	mov	r3, r2
 8009500:	460a      	mov	r2, r1
 8009502:	2100      	movs	r1, #0
 8009504:	f7ff ff3e 	bl	8009384 <OSCServerParams::Builder(osc::server::Params const*, char*, unsigned int, unsigned int&)>
 8009508:	e7f6      	b.n	80094f8 <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800950a <OSCServerParams::Dump()>:
 800950a:	4770      	bx	lr

0800950c <lo_pattern_match>:
 800950c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800950e:	4605      	mov	r5, r0
 8009510:	460b      	mov	r3, r1
 8009512:	7819      	ldrb	r1, [r3, #0]
 8009514:	782a      	ldrb	r2, [r5, #0]
 8009516:	b919      	cbnz	r1, 8009520 <lo_pattern_match+0x14>
 8009518:	fab2 f082 	clz	r0, r2
 800951c:	0940      	lsrs	r0, r0, #5
 800951e:	e0a9      	b.n	8009674 <lo_pattern_match+0x168>
 8009520:	b90a      	cbnz	r2, 8009526 <lo_pattern_match+0x1a>
 8009522:	292a      	cmp	r1, #42	; 0x2a
 8009524:	d132      	bne.n	800958c <lo_pattern_match+0x80>
 8009526:	295b      	cmp	r1, #91	; 0x5b
 8009528:	f103 0401 	add.w	r4, r3, #1
 800952c:	d03c      	beq.n	80095a8 <lo_pattern_match+0x9c>
 800952e:	d806      	bhi.n	800953e <lo_pattern_match+0x32>
 8009530:	292a      	cmp	r1, #42	; 0x2a
 8009532:	d012      	beq.n	800955a <lo_pattern_match+0x4e>
 8009534:	293f      	cmp	r1, #63	; 0x3f
 8009536:	d032      	beq.n	800959e <lo_pattern_match+0x92>
 8009538:	4291      	cmp	r1, r2
 800953a:	d032      	beq.n	80095a2 <lo_pattern_match+0x96>
 800953c:	e026      	b.n	800958c <lo_pattern_match+0x80>
 800953e:	297b      	cmp	r1, #123	; 0x7b
 8009540:	d1fa      	bne.n	8009538 <lo_pattern_match+0x2c>
 8009542:	7820      	ldrb	r0, [r4, #0]
 8009544:	4626      	mov	r6, r4
 8009546:	1c67      	adds	r7, r4, #1
 8009548:	2800      	cmp	r0, #0
 800954a:	f000 8093 	beq.w	8009674 <lo_pattern_match+0x168>
 800954e:	287d      	cmp	r0, #125	; 0x7d
 8009550:	d16b      	bne.n	800962a <lo_pattern_match+0x11e>
 8009552:	1c9c      	adds	r4, r3, #2
 8009554:	4628      	mov	r0, r5
 8009556:	785b      	ldrb	r3, [r3, #1]
 8009558:	e077      	b.n	800964a <lo_pattern_match+0x13e>
 800955a:	7823      	ldrb	r3, [r4, #0]
 800955c:	4626      	mov	r6, r4
 800955e:	2b2a      	cmp	r3, #42	; 0x2a
 8009560:	f104 0401 	add.w	r4, r4, #1
 8009564:	d0f9      	beq.n	800955a <lo_pattern_match+0x4e>
 8009566:	b1c3      	cbz	r3, 800959a <lo_pattern_match+0x8e>
 8009568:	2b3f      	cmp	r3, #63	; 0x3f
 800956a:	d00b      	beq.n	8009584 <lo_pattern_match+0x78>
 800956c:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8009570:	2a5b      	cmp	r2, #91	; 0x5b
 8009572:	d007      	beq.n	8009584 <lo_pattern_match+0x78>
 8009574:	462a      	mov	r2, r5
 8009576:	4615      	mov	r5, r2
 8009578:	f812 0b01 	ldrb.w	r0, [r2], #1
 800957c:	2800      	cmp	r0, #0
 800957e:	d079      	beq.n	8009674 <lo_pattern_match+0x168>
 8009580:	4283      	cmp	r3, r0
 8009582:	d1f8      	bne.n	8009576 <lo_pattern_match+0x6a>
 8009584:	4628      	mov	r0, r5
 8009586:	7803      	ldrb	r3, [r0, #0]
 8009588:	3501      	adds	r5, #1
 800958a:	b90b      	cbnz	r3, 8009590 <lo_pattern_match+0x84>
 800958c:	2000      	movs	r0, #0
 800958e:	e071      	b.n	8009674 <lo_pattern_match+0x168>
 8009590:	4631      	mov	r1, r6
 8009592:	f7ff ffbb 	bl	800950c <lo_pattern_match>
 8009596:	2800      	cmp	r0, #0
 8009598:	d0f4      	beq.n	8009584 <lo_pattern_match+0x78>
 800959a:	2001      	movs	r0, #1
 800959c:	e06a      	b.n	8009674 <lo_pattern_match+0x168>
 800959e:	2a00      	cmp	r2, #0
 80095a0:	d0f4      	beq.n	800958c <lo_pattern_match+0x80>
 80095a2:	4623      	mov	r3, r4
 80095a4:	3501      	adds	r5, #1
 80095a6:	e7b4      	b.n	8009512 <lo_pattern_match+0x6>
 80095a8:	7859      	ldrb	r1, [r3, #1]
 80095aa:	2921      	cmp	r1, #33	; 0x21
 80095ac:	bf06      	itte	eq
 80095ae:	1c9c      	addeq	r4, r3, #2
 80095b0:	2701      	moveq	r7, #1
 80095b2:	2700      	movne	r7, #0
 80095b4:	4621      	mov	r1, r4
 80095b6:	1c8e      	adds	r6, r1, #2
 80095b8:	f816 3c02 	ldrb.w	r3, [r6, #-2]
 80095bc:	4634      	mov	r4, r6
 80095be:	1e71      	subs	r1, r6, #1
 80095c0:	b913      	cbnz	r3, 80095c8 <lo_pattern_match+0xbc>
 80095c2:	460c      	mov	r4, r1
 80095c4:	4618      	mov	r0, r3
 80095c6:	e018      	b.n	80095fa <lo_pattern_match+0xee>
 80095c8:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80095cc:	2800      	cmp	r0, #0
 80095ce:	d051      	beq.n	8009674 <lo_pattern_match+0x168>
 80095d0:	282d      	cmp	r0, #45	; 0x2d
 80095d2:	d11b      	bne.n	800960c <lo_pattern_match+0x100>
 80095d4:	7820      	ldrb	r0, [r4, #0]
 80095d6:	2800      	cmp	r0, #0
 80095d8:	d04c      	beq.n	8009674 <lo_pattern_match+0x168>
 80095da:	285d      	cmp	r0, #93	; 0x5d
 80095dc:	d009      	beq.n	80095f2 <lo_pattern_match+0xe6>
 80095de:	429a      	cmp	r2, r3
 80095e0:	d005      	beq.n	80095ee <lo_pattern_match+0xe2>
 80095e2:	4290      	cmp	r0, r2
 80095e4:	d003      	beq.n	80095ee <lo_pattern_match+0xe2>
 80095e6:	429a      	cmp	r2, r3
 80095e8:	d91d      	bls.n	8009626 <lo_pattern_match+0x11a>
 80095ea:	4290      	cmp	r0, r2
 80095ec:	d91b      	bls.n	8009626 <lo_pattern_match+0x11a>
 80095ee:	2001      	movs	r0, #1
 80095f0:	e003      	b.n	80095fa <lo_pattern_match+0xee>
 80095f2:	429a      	cmp	r2, r3
 80095f4:	bf34      	ite	cc
 80095f6:	2000      	movcc	r0, #0
 80095f8:	2001      	movcs	r0, #1
 80095fa:	4287      	cmp	r7, r0
 80095fc:	d0c6      	beq.n	800958c <lo_pattern_match+0x80>
 80095fe:	f814 0b01 	ldrb.w	r0, [r4], #1
 8009602:	2800      	cmp	r0, #0
 8009604:	d036      	beq.n	8009674 <lo_pattern_match+0x168>
 8009606:	285d      	cmp	r0, #93	; 0x5d
 8009608:	d1f9      	bne.n	80095fe <lo_pattern_match+0xf2>
 800960a:	e7ca      	b.n	80095a2 <lo_pattern_match+0x96>
 800960c:	285d      	cmp	r0, #93	; 0x5d
 800960e:	d104      	bne.n	800961a <lo_pattern_match+0x10e>
 8009610:	1ad3      	subs	r3, r2, r3
 8009612:	4258      	negs	r0, r3
 8009614:	460c      	mov	r4, r1
 8009616:	4158      	adcs	r0, r3
 8009618:	e7ef      	b.n	80095fa <lo_pattern_match+0xee>
 800961a:	4290      	cmp	r0, r2
 800961c:	d001      	beq.n	8009622 <lo_pattern_match+0x116>
 800961e:	429a      	cmp	r2, r3
 8009620:	d1c9      	bne.n	80095b6 <lo_pattern_match+0xaa>
 8009622:	460c      	mov	r4, r1
 8009624:	e7e3      	b.n	80095ee <lo_pattern_match+0xe2>
 8009626:	3602      	adds	r6, #2
 8009628:	e7c6      	b.n	80095b8 <lo_pattern_match+0xac>
 800962a:	463c      	mov	r4, r7
 800962c:	e789      	b.n	8009542 <lo_pattern_match+0x36>
 800962e:	2b2c      	cmp	r3, #44	; 0x2c
 8009630:	d10f      	bne.n	8009652 <lo_pattern_match+0x146>
 8009632:	4639      	mov	r1, r7
 8009634:	f7ff ff6a 	bl	800950c <lo_pattern_match>
 8009638:	2800      	cmp	r0, #0
 800963a:	d1ae      	bne.n	800959a <lo_pattern_match+0x8e>
 800963c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8009640:	b1c3      	cbz	r3, 8009674 <lo_pattern_match+0x168>
 8009642:	462a      	mov	r2, r5
 8009644:	4610      	mov	r0, r2
 8009646:	f814 3b01 	ldrb.w	r3, [r4], #1
 800964a:	2b00      	cmp	r3, #0
 800964c:	d1ef      	bne.n	800962e <lo_pattern_match+0x122>
 800964e:	4605      	mov	r5, r0
 8009650:	e7a7      	b.n	80095a2 <lo_pattern_match+0x96>
 8009652:	2b7d      	cmp	r3, #125	; 0x7d
 8009654:	7802      	ldrb	r2, [r0, #0]
 8009656:	d104      	bne.n	8009662 <lo_pattern_match+0x156>
 8009658:	7823      	ldrb	r3, [r4, #0]
 800965a:	4313      	orrs	r3, r2
 800965c:	d09d      	beq.n	800959a <lo_pattern_match+0x8e>
 800965e:	1e45      	subs	r5, r0, #1
 8009660:	e79f      	b.n	80095a2 <lo_pattern_match+0x96>
 8009662:	4293      	cmp	r3, r2
 8009664:	d107      	bne.n	8009676 <lo_pattern_match+0x16a>
 8009666:	1c42      	adds	r2, r0, #1
 8009668:	7840      	ldrb	r0, [r0, #1]
 800966a:	2800      	cmp	r0, #0
 800966c:	d1ea      	bne.n	8009644 <lo_pattern_match+0x138>
 800966e:	7873      	ldrb	r3, [r6, #1]
 8009670:	2b00      	cmp	r3, #0
 8009672:	d0e7      	beq.n	8009644 <lo_pattern_match+0x138>
 8009674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009676:	4623      	mov	r3, r4
 8009678:	781a      	ldrb	r2, [r3, #0]
 800967a:	461c      	mov	r4, r3
 800967c:	2a2c      	cmp	r2, #44	; 0x2c
 800967e:	f103 0301 	add.w	r3, r3, #1
 8009682:	d004      	beq.n	800968e <lo_pattern_match+0x182>
 8009684:	2a7d      	cmp	r2, #125	; 0x7d
 8009686:	d081      	beq.n	800958c <lo_pattern_match+0x80>
 8009688:	2a00      	cmp	r2, #0
 800968a:	d1f5      	bne.n	8009678 <lo_pattern_match+0x16c>
 800968c:	e7d9      	b.n	8009642 <lo_pattern_match+0x136>
 800968e:	461c      	mov	r4, r3
 8009690:	e7d7      	b.n	8009642 <lo_pattern_match+0x136>

08009692 <osc::string_validate(void*, unsigned int)>:
 8009692:	4602      	mov	r2, r0
 8009694:	2300      	movs	r3, #0
 8009696:	428b      	cmp	r3, r1
 8009698:	d005      	beq.n	80096a6 <osc::string_validate(void*, unsigned int)+0x14>
 800969a:	5cd0      	ldrb	r0, [r2, r3]
 800969c:	b930      	cbnz	r0, 80096ac <osc::string_validate(void*, unsigned int)+0x1a>
 800969e:	f023 0003 	bic.w	r0, r3, #3
 80096a2:	3004      	adds	r0, #4
 80096a4:	d104      	bne.n	80096b0 <osc::string_validate(void*, unsigned int)+0x1e>
 80096a6:	f06f 0001 	mvn.w	r0, #1
 80096aa:	4770      	bx	lr
 80096ac:	3301      	adds	r3, #1
 80096ae:	e7f2      	b.n	8009696 <osc::string_validate(void*, unsigned int)+0x4>
 80096b0:	4281      	cmp	r1, r0
 80096b2:	d305      	bcc.n	80096c0 <osc::string_validate(void*, unsigned int)+0x2e>
 80096b4:	4283      	cmp	r3, r0
 80096b6:	d208      	bcs.n	80096ca <osc::string_validate(void*, unsigned int)+0x38>
 80096b8:	5cd1      	ldrb	r1, [r2, r3]
 80096ba:	b921      	cbnz	r1, 80096c6 <osc::string_validate(void*, unsigned int)+0x34>
 80096bc:	3301      	adds	r3, #1
 80096be:	e7f9      	b.n	80096b4 <osc::string_validate(void*, unsigned int)+0x22>
 80096c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80096c4:	4770      	bx	lr
 80096c6:	f06f 0002 	mvn.w	r0, #2
 80096ca:	4770      	bx	lr

080096cc <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>:
 80096cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80096d0:	2300      	movs	r3, #0
 80096d2:	460d      	mov	r5, r1
 80096d4:	e9c0 1200 	strd	r1, r2, [r0]
 80096d8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80096dc:	7203      	strb	r3, [r0, #8]
 80096de:	6183      	str	r3, [r0, #24]
 80096e0:	4604      	mov	r4, r0
 80096e2:	4611      	mov	r1, r2
 80096e4:	4628      	mov	r0, r5
 80096e6:	4617      	mov	r7, r2
 80096e8:	f7ff ffd3 	bl	8009692 <osc::string_validate(void*, unsigned int)>
 80096ec:	f1b0 0800 	subs.w	r8, r0, #0
 80096f0:	db25      	blt.n	800973e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 80096f2:	eb05 0608 	add.w	r6, r5, r8
 80096f6:	4630      	mov	r0, r6
 80096f8:	60e6      	str	r6, [r4, #12]
 80096fa:	eba7 0108 	sub.w	r1, r7, r8
 80096fe:	f7ff ffc8 	bl	8009692 <osc::string_validate(void*, unsigned int)>
 8009702:	2800      	cmp	r0, #0
 8009704:	db1b      	blt.n	800973e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 8009706:	f815 3008 	ldrb.w	r3, [r5, r8]
 800970a:	2b2c      	cmp	r3, #44	; 0x2c
 800970c:	d117      	bne.n	800973e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800970e:	7873      	ldrb	r3, [r6, #1]
 8009710:	2b73      	cmp	r3, #115	; 0x73
 8009712:	d001      	beq.n	8009718 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x4c>
 8009714:	2b62      	cmp	r3, #98	; 0x62
 8009716:	d101      	bne.n	800971c <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x50>
 8009718:	78b3      	ldrb	r3, [r6, #2]
 800971a:	b983      	cbnz	r3, 800973e <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x72>
 800971c:	3601      	adds	r6, #1
 800971e:	4632      	mov	r2, r6
 8009720:	60e6      	str	r6, [r4, #12]
 8009722:	4613      	mov	r3, r2
 8009724:	7819      	ldrb	r1, [r3, #0]
 8009726:	3201      	adds	r2, #1
 8009728:	2900      	cmp	r1, #0
 800972a:	d1fa      	bne.n	8009722 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)+0x56>
 800972c:	1b9e      	subs	r6, r3, r6
 800972e:	2301      	movs	r3, #1
 8009730:	4440      	add	r0, r8
 8009732:	4405      	add	r5, r0
 8009734:	1a38      	subs	r0, r7, r0
 8009736:	6126      	str	r6, [r4, #16]
 8009738:	6165      	str	r5, [r4, #20]
 800973a:	61a0      	str	r0, [r4, #24]
 800973c:	7223      	strb	r3, [r4, #8]
 800973e:	4620      	mov	r0, r4
 8009740:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009744 <OscSimpleMessage::GetFloat(unsigned int)>:
 8009744:	6983      	ldr	r3, [r0, #24]
 8009746:	1c4a      	adds	r2, r1, #1
 8009748:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800974c:	b510      	push	{r4, lr}
 800974e:	ea4f 0482 	mov.w	r4, r2, lsl #2
 8009752:	d309      	bcc.n	8009768 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 8009754:	68c3      	ldr	r3, [r0, #12]
 8009756:	5c5b      	ldrb	r3, [r3, r1]
 8009758:	2b66      	cmp	r3, #102	; 0x66
 800975a:	d105      	bne.n	8009768 <OscSimpleMessage::GetFloat(unsigned int)+0x24>
 800975c:	6943      	ldr	r3, [r0, #20]
 800975e:	4423      	add	r3, r4
 8009760:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8009764:	ba00      	rev	r0, r0
 8009766:	bd10      	pop	{r4, pc}
 8009768:	2000      	movs	r0, #0
 800976a:	e7fc      	b.n	8009766 <OscSimpleMessage::GetFloat(unsigned int)+0x22>

0800976c <OscSimpleMessage::GetInt(unsigned int)>:
 800976c:	6983      	ldr	r3, [r0, #24]
 800976e:	1c4a      	adds	r2, r1, #1
 8009770:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8009774:	b510      	push	{r4, lr}
 8009776:	ea4f 0482 	mov.w	r4, r2, lsl #2
 800977a:	d309      	bcc.n	8009790 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 800977c:	68c3      	ldr	r3, [r0, #12]
 800977e:	5c5b      	ldrb	r3, [r3, r1]
 8009780:	2b69      	cmp	r3, #105	; 0x69
 8009782:	d105      	bne.n	8009790 <OscSimpleMessage::GetInt(unsigned int)+0x24>
 8009784:	6943      	ldr	r3, [r0, #20]
 8009786:	4423      	add	r3, r4
 8009788:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800978c:	ba00      	rev	r0, r0
 800978e:	bd10      	pop	{r4, pc}
 8009790:	2000      	movs	r0, #0
 8009792:	e7fc      	b.n	800978e <OscSimpleMessage::GetInt(unsigned int)+0x22>

08009794 <OscSimpleMessage::GetBlob(unsigned int)>:
 8009794:	b510      	push	{r4, lr}
 8009796:	68cb      	ldr	r3, [r1, #12]
 8009798:	781b      	ldrb	r3, [r3, #0]
 800979a:	2b62      	cmp	r3, #98	; 0x62
 800979c:	d10a      	bne.n	80097b4 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 800979e:	694a      	ldr	r2, [r1, #20]
 80097a0:	6989      	ldr	r1, [r1, #24]
 80097a2:	6813      	ldr	r3, [r2, #0]
 80097a4:	ba1b      	rev	r3, r3
 80097a6:	1d1c      	adds	r4, r3, #4
 80097a8:	428c      	cmp	r4, r1
 80097aa:	d803      	bhi.n	80097b4 <OscSimpleMessage::GetBlob(unsigned int)+0x20>
 80097ac:	3204      	adds	r2, #4
 80097ae:	6002      	str	r2, [r0, #0]
 80097b0:	6043      	str	r3, [r0, #4]
 80097b2:	bd10      	pop	{r4, pc}
 80097b4:	2300      	movs	r3, #0
 80097b6:	6003      	str	r3, [r0, #0]
 80097b8:	e7fa      	b.n	80097b0 <OscSimpleMessage::GetBlob(unsigned int)+0x1c>

080097ba <osc::string_size(char const*)>:
 80097ba:	4602      	mov	r2, r0
 80097bc:	4613      	mov	r3, r2
 80097be:	7819      	ldrb	r1, [r3, #0]
 80097c0:	3201      	adds	r2, #1
 80097c2:	2900      	cmp	r1, #0
 80097c4:	d1fa      	bne.n	80097bc <osc::string_size(char const*)+0x2>
 80097c6:	1a18      	subs	r0, r3, r0
 80097c8:	f020 0003 	bic.w	r0, r0, #3
 80097cc:	3004      	adds	r0, #4
 80097ce:	4770      	bx	lr

080097d0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>:
 80097d0:	b570      	push	{r4, r5, r6, lr}
 80097d2:	2400      	movs	r4, #0
 80097d4:	480a      	ldr	r0, [pc, #40]	; (8009800 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x30>)
 80097d6:	1f16      	subs	r6, r2, #4
 80097d8:	1985      	adds	r5, r0, r6
 80097da:	5584      	strb	r4, [r0, r6]
 80097dc:	706c      	strb	r4, [r5, #1]
 80097de:	70ac      	strb	r4, [r5, #2]
 80097e0:	70ec      	strb	r4, [r5, #3]
 80097e2:	4604      	mov	r4, r0
 80097e4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80097e8:	f800 5b01 	strb.w	r5, [r0], #1
 80097ec:	2d00      	cmp	r5, #0
 80097ee:	d1f9      	bne.n	80097e4 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)+0x14>
 80097f0:	212c      	movs	r1, #44	; 0x2c
 80097f2:	54a1      	strb	r1, [r4, r2]
 80097f4:	4422      	add	r2, r4
 80097f6:	7053      	strb	r3, [r2, #1]
 80097f8:	7095      	strb	r5, [r2, #2]
 80097fa:	70d5      	strb	r5, [r2, #3]
 80097fc:	bd70      	pop	{r4, r5, r6, pc}
 80097fe:	bf00      	nop
 8009800:	20000504 	andcs	r0, r0, r4, lsl #10

08009804 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>:
 8009804:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8009808:	4605      	mov	r5, r0
 800980a:	e9dd 9a0a 	ldrd	r9, sl, [sp, #40]	; 0x28
 800980e:	460e      	mov	r6, r1
 8009810:	4617      	mov	r7, r2
 8009812:	4698      	mov	r8, r3
 8009814:	f1ba 0f00 	cmp.w	sl, #0
 8009818:	d112      	bne.n	8009840 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x3c>
 800981a:	4648      	mov	r0, r9
 800981c:	f7ff ffcd 	bl	80097ba <osc::string_size(char const*)>
 8009820:	4604      	mov	r4, r0
 8009822:	4602      	mov	r2, r0
 8009824:	4653      	mov	r3, sl
 8009826:	4649      	mov	r1, r9
 8009828:	4628      	mov	r0, r5
 800982a:	3404      	adds	r4, #4
 800982c:	f7ff ffd0 	bl	80097d0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8009830:	463b      	mov	r3, r7
 8009832:	4905      	ldr	r1, [pc, #20]	; (8009848 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)+0x44>)
 8009834:	f8cd 8000 	str.w	r8, [sp]
 8009838:	b2a2      	uxth	r2, r4
 800983a:	b2f0      	uxtb	r0, r6
 800983c:	f003 f806 	bl	800c84c <udp_send>
 8009840:	4628      	mov	r0, r5
 8009842:	b002      	add	sp, #8
 8009844:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009848:	20000504 	andcs	r0, r0, r4, lsl #10

0800984c <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>:
 800984c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009850:	b085      	sub	sp, #20
 8009852:	460f      	mov	r7, r1
 8009854:	4699      	mov	r9, r3
 8009856:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800985a:	4606      	mov	r6, r0
 800985c:	4690      	mov	r8, r2
 800985e:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8009862:	b35b      	cbz	r3, 80098bc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 8009864:	781b      	ldrb	r3, [r3, #0]
 8009866:	2b73      	cmp	r3, #115	; 0x73
 8009868:	d128      	bne.n	80098bc <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x70>
 800986a:	4608      	mov	r0, r1
 800986c:	9303      	str	r3, [sp, #12]
 800986e:	f7ff ffa4 	bl	80097ba <osc::string_size(char const*)>
 8009872:	4604      	mov	r4, r0
 8009874:	4650      	mov	r0, sl
 8009876:	f7ff ffa0 	bl	80097ba <osc::string_size(char const*)>
 800987a:	4622      	mov	r2, r4
 800987c:	1825      	adds	r5, r4, r0
 800987e:	9b03      	ldr	r3, [sp, #12]
 8009880:	990e      	ldr	r1, [sp, #56]	; 0x38
 8009882:	4630      	mov	r0, r6
 8009884:	f7ff ffa4 	bl	80097d0 <OscSimpleSend::UpdateMessage(char const*, unsigned int, char)>
 8009888:	2200      	movs	r2, #0
 800988a:	4b0e      	ldr	r3, [pc, #56]	; (80098c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 800988c:	3403      	adds	r4, #3
 800988e:	1959      	adds	r1, r3, r5
 8009890:	555a      	strb	r2, [r3, r5]
 8009892:	f105 0b04 	add.w	fp, r5, #4
 8009896:	704a      	strb	r2, [r1, #1]
 8009898:	708a      	strb	r2, [r1, #2]
 800989a:	70ca      	strb	r2, [r1, #3]
 800989c:	4423      	add	r3, r4
 800989e:	f81a 2b01 	ldrb.w	r2, [sl], #1
 80098a2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80098a6:	2a00      	cmp	r2, #0
 80098a8:	d1f9      	bne.n	800989e <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x52>
 80098aa:	4643      	mov	r3, r8
 80098ac:	4905      	ldr	r1, [pc, #20]	; (80098c4 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)+0x78>)
 80098ae:	f8cd 9000 	str.w	r9, [sp]
 80098b2:	fa1f f28b 	uxth.w	r2, fp
 80098b6:	b2f8      	uxtb	r0, r7
 80098b8:	f002 ffc8 	bl	800c84c <udp_send>
 80098bc:	4630      	mov	r0, r6
 80098be:	b005      	add	sp, #20
 80098c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80098c4:	20000504 	andcs	r0, r0, r4, lsl #10

080098c8 <LightSet::Blackout(bool)>:
 80098c8:	4770      	bx	lr

080098ca <DmxSend::~DmxSend()>:
 80098ca:	4770      	bx	lr

080098cc <DmxSend::Start(unsigned int)>:
 80098cc:	2301      	movs	r3, #1
 80098ce:	b410      	push	{r4}
 80098d0:	4c08      	ldr	r4, [pc, #32]	; (80098f4 <DmxSend::Start(unsigned int)+0x28>)
 80098d2:	fa03 f001 	lsl.w	r0, r3, r1
 80098d6:	7822      	ldrb	r2, [r4, #0]
 80098d8:	ea30 0c02 	bics.w	ip, r0, r2
 80098dc:	d007      	beq.n	80098ee <DmxSend::Start(unsigned int)+0x22>
 80098de:	4302      	orrs	r2, r0
 80098e0:	4805      	ldr	r0, [pc, #20]	; (80098f8 <DmxSend::Start(unsigned int)+0x2c>)
 80098e2:	7022      	strb	r2, [r4, #0]
 80098e4:	6800      	ldr	r0, [r0, #0]
 80098e6:	2200      	movs	r2, #0
 80098e8:	bc10      	pop	{r4}
 80098ea:	f000 bc65 	b.w	800a1b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80098ee:	bc10      	pop	{r4}
 80098f0:	4770      	bx	lr
 80098f2:	bf00      	nop
 80098f4:	20000704 	andcs	r0, r0, r4, lsl #14
 80098f8:	20000b44 	andcs	r0, r0, r4, asr #22

080098fc <DmxSend::Stop(unsigned int)>:
 80098fc:	2201      	movs	r2, #1
 80098fe:	b410      	push	{r4}
 8009900:	4809      	ldr	r0, [pc, #36]	; (8009928 <DmxSend::Stop(unsigned int)+0x2c>)
 8009902:	408a      	lsls	r2, r1
 8009904:	7803      	ldrb	r3, [r0, #0]
 8009906:	ea03 0402 	and.w	r4, r3, r2
 800990a:	439a      	bics	r2, r3
 800990c:	d109      	bne.n	8009922 <DmxSend::Stop(unsigned int)+0x26>
 800990e:	ea23 0304 	bic.w	r3, r3, r4
 8009912:	7003      	strb	r3, [r0, #0]
 8009914:	2300      	movs	r3, #0
 8009916:	4805      	ldr	r0, [pc, #20]	; (800992c <DmxSend::Stop(unsigned int)+0x30>)
 8009918:	461a      	mov	r2, r3
 800991a:	6800      	ldr	r0, [r0, #0]
 800991c:	bc10      	pop	{r4}
 800991e:	f000 bc4b 	b.w	800a1b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8009922:	bc10      	pop	{r4}
 8009924:	4770      	bx	lr
 8009926:	bf00      	nop
 8009928:	20000704 	andcs	r0, r0, r4, lsl #14
 800992c:	20000b44 	andcs	r0, r0, r4, asr #22

08009930 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 8009930:	b11b      	cbz	r3, 800993a <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 8009932:	4802      	ldr	r0, [pc, #8]	; (800993c <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 8009934:	6800      	ldr	r0, [r0, #0]
 8009936:	f000 bd9f 	b.w	800a478 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800993a:	4770      	bx	lr
 800993c:	20000b44 	andcs	r0, r0, r4, asr #22

08009940 <DmxSend::Print()>:
 8009940:	b510      	push	{r4, lr}
 8009942:	4c0e      	ldr	r4, [pc, #56]	; (800997c <DmxSend::Print()+0x3c>)
 8009944:	480e      	ldr	r0, [pc, #56]	; (8009980 <DmxSend::Print()+0x40>)
 8009946:	f7ff f8e7 	bl	8008b18 <printf>
 800994a:	6823      	ldr	r3, [r4, #0]
 800994c:	480d      	ldr	r0, [pc, #52]	; (8009984 <DmxSend::Print()+0x44>)
 800994e:	6819      	ldr	r1, [r3, #0]
 8009950:	f7ff f8e2 	bl	8008b18 <printf>
 8009954:	6823      	ldr	r3, [r4, #0]
 8009956:	480c      	ldr	r0, [pc, #48]	; (8009988 <DmxSend::Print()+0x48>)
 8009958:	6859      	ldr	r1, [r3, #4]
 800995a:	f7ff f8dd 	bl	8008b18 <printf>
 800995e:	6823      	ldr	r3, [r4, #0]
 8009960:	490a      	ldr	r1, [pc, #40]	; (800998c <DmxSend::Print()+0x4c>)
 8009962:	689b      	ldr	r3, [r3, #8]
 8009964:	480a      	ldr	r0, [pc, #40]	; (8009990 <DmxSend::Print()+0x50>)
 8009966:	fbb1 f1f3 	udiv	r1, r1, r3
 800996a:	f7ff f8d5 	bl	8008b18 <printf>
 800996e:	6823      	ldr	r3, [r4, #0]
 8009970:	4808      	ldr	r0, [pc, #32]	; (8009994 <DmxSend::Print()+0x54>)
 8009972:	8a19      	ldrh	r1, [r3, #16]
 8009974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009978:	f7ff b8ce 	b.w	8008b18 <printf>
 800997c:	20000b44 	andcs	r0, r0, r4, asr #22
 8009980:	0801120a 	stmdaeq	r1, {r1, r3, r9, ip}
 8009984:	08011214 	stmdaeq	r1, {r2, r4, r9, ip}
 8009988:	08011228 	stmdaeq	r1, {r3, r5, r9, ip}
 800998c:	000f4240 	andeq	r4, pc, r0, asr #4
 8009990:	0801123c 	stmdaeq	r1, {r2, r3, r4, r5, r9, ip}
 8009994:	08011250 	stmdaeq	r1, {r4, r6, r9, ip}

08009998 <DmxSend::~DmxSend()>:
 8009998:	b510      	push	{r4, lr}
 800999a:	4604      	mov	r4, r0
 800999c:	f005 fa3e 	bl	800ee1c <operator delete(void*)>
 80099a0:	4620      	mov	r0, r4
 80099a2:	bd10      	pop	{r4, pc}

080099a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 80099a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099a6:	88c5      	ldrh	r5, [r0, #6]
 80099a8:	8886      	ldrh	r6, [r0, #4]
 80099aa:	42b5      	cmp	r5, r6
 80099ac:	d216      	bcs.n	80099dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 80099ae:	4604      	mov	r4, r0
 80099b0:	6800      	ldr	r0, [r0, #0]
 80099b2:	4428      	add	r0, r5
 80099b4:	1b75      	subs	r5, r6, r5
 80099b6:	7a26      	ldrb	r6, [r4, #8]
 80099b8:	b923      	cbnz	r3, 80099c4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 80099ba:	b926      	cbnz	r6, 80099c6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 80099bc:	9200      	str	r2, [sp, #0]
 80099be:	460b      	mov	r3, r1
 80099c0:	4a09      	ldr	r2, [pc, #36]	; (80099e8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 80099c2:	e003      	b.n	80099cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 80099c4:	b166      	cbz	r6, 80099e0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 80099c6:	460b      	mov	r3, r1
 80099c8:	9200      	str	r2, [sp, #0]
 80099ca:	4a08      	ldr	r2, [pc, #32]	; (80099ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 80099cc:	4629      	mov	r1, r5
 80099ce:	f7ff f8b3 	bl	8008b38 <snprintf>
 80099d2:	4285      	cmp	r5, r0
 80099d4:	bfa2      	ittt	ge
 80099d6:	88e3      	ldrhge	r3, [r4, #6]
 80099d8:	181b      	addge	r3, r3, r0
 80099da:	80e3      	strhge	r3, [r4, #6]
 80099dc:	b002      	add	sp, #8
 80099de:	bd70      	pop	{r4, r5, r6, pc}
 80099e0:	9200      	str	r2, [sp, #0]
 80099e2:	460b      	mov	r3, r1
 80099e4:	4a02      	ldr	r2, [pc, #8]	; (80099f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 80099e6:	e7f1      	b.n	80099cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 80099e8:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 80099ec:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 80099f0:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}

080099f4 <DmxParams::DmxParams(DmxParamsStore*)>:
 80099f4:	6001      	str	r1, [r0, #0]
 80099f6:	2100      	movs	r1, #0
 80099f8:	4a03      	ldr	r2, [pc, #12]	; (8009a08 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 80099fa:	e9c0 1201 	strd	r1, r2, [r0, #4]
 80099fe:	f64f 7228 	movw	r2, #65320	; 0xff28
 8009a02:	8182      	strh	r2, [r0, #12]
 8009a04:	4770      	bx	lr
 8009a06:	bf00      	nop
 8009a08:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

08009a0c <DmxParams::Load()>:
 8009a0c:	b508      	push	{r3, lr}
 8009a0e:	2300      	movs	r3, #0
 8009a10:	4601      	mov	r1, r0
 8009a12:	6043      	str	r3, [r0, #4]
 8009a14:	6800      	ldr	r0, [r0, #0]
 8009a16:	b120      	cbz	r0, 8009a22 <DmxParams::Load()+0x16>
 8009a18:	6803      	ldr	r3, [r0, #0]
 8009a1a:	3104      	adds	r1, #4
 8009a1c:	68db      	ldr	r3, [r3, #12]
 8009a1e:	4798      	blx	r3
 8009a20:	2001      	movs	r0, #1
 8009a22:	bd08      	pop	{r3, pc}

08009a24 <DmxParams::Load(char const*, unsigned int)>:
 8009a24:	6803      	ldr	r3, [r0, #0]
 8009a26:	b1d3      	cbz	r3, 8009a5e <DmxParams::Load(char const*, unsigned int)+0x3a>
 8009a28:	2300      	movs	r3, #0
 8009a2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a2c:	460d      	mov	r5, r1
 8009a2e:	4616      	mov	r6, r2
 8009a30:	4604      	mov	r4, r0
 8009a32:	6043      	str	r3, [r0, #4]
 8009a34:	4602      	mov	r2, r0
 8009a36:	490a      	ldr	r1, [pc, #40]	; (8009a60 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 8009a38:	4668      	mov	r0, sp
 8009a3a:	f004 fcd9 	bl	800e3f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009a3e:	4632      	mov	r2, r6
 8009a40:	4629      	mov	r1, r5
 8009a42:	4668      	mov	r0, sp
 8009a44:	f004 fcd8 	bl	800e3f8 <ReadConfigFile::Read(char const*, unsigned int)>
 8009a48:	4621      	mov	r1, r4
 8009a4a:	f851 0b04 	ldr.w	r0, [r1], #4
 8009a4e:	6803      	ldr	r3, [r0, #0]
 8009a50:	689b      	ldr	r3, [r3, #8]
 8009a52:	4798      	blx	r3
 8009a54:	4668      	mov	r0, sp
 8009a56:	f004 fcce 	bl	800e3f6 <ReadConfigFile::~ReadConfigFile()>
 8009a5a:	b002      	add	sp, #8
 8009a5c:	bd70      	pop	{r4, r5, r6, pc}
 8009a5e:	4770      	bx	lr
 8009a60:	08009b31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp, ip, pc}

08009a64 <DmxParams::callbackFunction(char const*)>:
 8009a64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a66:	460d      	mov	r5, r1
 8009a68:	4604      	mov	r4, r0
 8009a6a:	492d      	ldr	r1, [pc, #180]	; (8009b20 <DmxParams::callbackFunction(char const*)+0xbc>)
 8009a6c:	4628      	mov	r0, r5
 8009a6e:	f10d 0206 	add.w	r2, sp, #6
 8009a72:	f004 fd4e 	bl	800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009a76:	b988      	cbnz	r0, 8009a9c <DmxParams::callbackFunction(char const*)+0x38>
 8009a78:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009a7c:	6863      	ldr	r3, [r4, #4]
 8009a7e:	2a5b      	cmp	r2, #91	; 0x5b
 8009a80:	d907      	bls.n	8009a92 <DmxParams::callbackFunction(char const*)+0x2e>
 8009a82:	2ab0      	cmp	r2, #176	; 0xb0
 8009a84:	d005      	beq.n	8009a92 <DmxParams::callbackFunction(char const*)+0x2e>
 8009a86:	8122      	strh	r2, [r4, #8]
 8009a88:	f043 0301 	orr.w	r3, r3, #1
 8009a8c:	6063      	str	r3, [r4, #4]
 8009a8e:	b003      	add	sp, #12
 8009a90:	bd30      	pop	{r4, r5, pc}
 8009a92:	22b0      	movs	r2, #176	; 0xb0
 8009a94:	f023 0301 	bic.w	r3, r3, #1
 8009a98:	8122      	strh	r2, [r4, #8]
 8009a9a:	e7f7      	b.n	8009a8c <DmxParams::callbackFunction(char const*)+0x28>
 8009a9c:	4628      	mov	r0, r5
 8009a9e:	4921      	ldr	r1, [pc, #132]	; (8009b24 <DmxParams::callbackFunction(char const*)+0xc0>)
 8009aa0:	f10d 0206 	add.w	r2, sp, #6
 8009aa4:	f004 fd35 	bl	800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009aa8:	b968      	cbnz	r0, 8009ac6 <DmxParams::callbackFunction(char const*)+0x62>
 8009aaa:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009aae:	6863      	ldr	r3, [r4, #4]
 8009ab0:	2a0c      	cmp	r2, #12
 8009ab2:	bf93      	iteet	ls
 8009ab4:	220c      	movls	r2, #12
 8009ab6:	8162      	strhhi	r2, [r4, #10]
 8009ab8:	f043 0302 	orrhi.w	r3, r3, #2
 8009abc:	8162      	strhls	r2, [r4, #10]
 8009abe:	bf98      	it	ls
 8009ac0:	f023 0302 	bicls.w	r3, r3, #2
 8009ac4:	e7e2      	b.n	8009a8c <DmxParams::callbackFunction(char const*)+0x28>
 8009ac6:	4628      	mov	r0, r5
 8009ac8:	4917      	ldr	r1, [pc, #92]	; (8009b28 <DmxParams::callbackFunction(char const*)+0xc4>)
 8009aca:	f10d 0205 	add.w	r2, sp, #5
 8009ace:	f004 fd3e 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ad2:	b950      	cbnz	r0, 8009aea <DmxParams::callbackFunction(char const*)+0x86>
 8009ad4:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009ad8:	6863      	ldr	r3, [r4, #4]
 8009ada:	2a28      	cmp	r2, #40	; 0x28
 8009adc:	7322      	strb	r2, [r4, #12]
 8009ade:	bf14      	ite	ne
 8009ae0:	f043 0304 	orrne.w	r3, r3, #4
 8009ae4:	f023 0304 	biceq.w	r3, r3, #4
 8009ae8:	e7d0      	b.n	8009a8c <DmxParams::callbackFunction(char const*)+0x28>
 8009aea:	4628      	mov	r0, r5
 8009aec:	490f      	ldr	r1, [pc, #60]	; (8009b2c <DmxParams::callbackFunction(char const*)+0xc8>)
 8009aee:	f10d 0206 	add.w	r2, sp, #6
 8009af2:	f004 fd0e 	bl	800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8009af6:	2800      	cmp	r0, #0
 8009af8:	d1c9      	bne.n	8009a8e <DmxParams::callbackFunction(char const*)+0x2a>
 8009afa:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009afe:	6863      	ldr	r3, [r4, #4]
 8009b00:	1e91      	subs	r1, r2, #2
 8009b02:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 8009b06:	bf2f      	iteee	cs
 8009b08:	22ff      	movcs	r2, #255	; 0xff
 8009b0a:	0852      	lsrcc	r2, r2, #1
 8009b0c:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 8009b10:	7362      	strbcc	r2, [r4, #13]
 8009b12:	bf32      	itee	cc
 8009b14:	f043 0308 	orrcc.w	r3, r3, #8
 8009b18:	7362      	strbcs	r2, [r4, #13]
 8009b1a:	f023 0308 	biccs.w	r3, r3, #8
 8009b1e:	e7b5      	b.n	8009a8c <DmxParams::callbackFunction(char const*)+0x28>
 8009b20:	08011298 	stmdaeq	r1, {r3, r4, r7, r9, ip}
 8009b24:	080112bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, ip}
 8009b28:	080112af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, ip}
 8009b2c:	080112a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, ip}

08009b30 <DmxParams::staticCallbackFunction(void*, char const*)>:
 8009b30:	f7ff bf98 	b.w	8009a64 <DmxParams::callbackFunction(char const*)>

08009b34 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 8009b34:	b570      	push	{r4, r5, r6, lr}
 8009b36:	4604      	mov	r4, r0
 8009b38:	4615      	mov	r5, r2
 8009b3a:	461e      	mov	r6, r3
 8009b3c:	b086      	sub	sp, #24
 8009b3e:	3004      	adds	r0, #4
 8009b40:	b361      	cbz	r1, 8009b9c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 8009b42:	220a      	movs	r2, #10
 8009b44:	f005 fa2d 	bl	800efa2 <memmove>
 8009b48:	462a      	mov	r2, r5
 8009b4a:	4633      	mov	r3, r6
 8009b4c:	4931      	ldr	r1, [pc, #196]	; (8009c14 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 8009b4e:	a803      	add	r0, sp, #12
 8009b50:	f004 fbae 	bl	800e2b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009b54:	6863      	ldr	r3, [r4, #4]
 8009b56:	8922      	ldrh	r2, [r4, #8]
 8009b58:	492f      	ldr	r1, [pc, #188]	; (8009c18 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 8009b5a:	f003 0301 	and.w	r3, r3, #1
 8009b5e:	a803      	add	r0, sp, #12
 8009b60:	f7ff ff20 	bl	80099a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009b64:	6863      	ldr	r3, [r4, #4]
 8009b66:	492d      	ldr	r1, [pc, #180]	; (8009c1c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 8009b68:	8962      	ldrh	r2, [r4, #10]
 8009b6a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8009b6e:	a803      	add	r0, sp, #12
 8009b70:	f7ff ff18 	bl	80099a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009b74:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009b78:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009b7c:	42a9      	cmp	r1, r5
 8009b7e:	d222      	bcs.n	8009bc6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 8009b80:	9803      	ldr	r0, [sp, #12]
 8009b82:	1a6d      	subs	r5, r5, r1
 8009b84:	4408      	add	r0, r1
 8009b86:	6861      	ldr	r1, [r4, #4]
 8009b88:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009b8c:	0749      	lsls	r1, r1, #29
 8009b8e:	7b23      	ldrb	r3, [r4, #12]
 8009b90:	d40b      	bmi.n	8009baa <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 8009b92:	b95a      	cbnz	r2, 8009bac <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 8009b94:	9300      	str	r3, [sp, #0]
 8009b96:	4a22      	ldr	r2, [pc, #136]	; (8009c20 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 8009b98:	4b22      	ldr	r3, [pc, #136]	; (8009c24 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009b9a:	e00a      	b.n	8009bb2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 8009b9c:	6823      	ldr	r3, [r4, #0]
 8009b9e:	4601      	mov	r1, r0
 8009ba0:	681a      	ldr	r2, [r3, #0]
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	68d2      	ldr	r2, [r2, #12]
 8009ba6:	4790      	blx	r2
 8009ba8:	e7ce      	b.n	8009b48 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 8009baa:	b37a      	cbz	r2, 8009c0c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 8009bac:	9300      	str	r3, [sp, #0]
 8009bae:	4a1e      	ldr	r2, [pc, #120]	; (8009c28 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 8009bb0:	4b1c      	ldr	r3, [pc, #112]	; (8009c24 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009bb2:	4629      	mov	r1, r5
 8009bb4:	f7fe ffc0 	bl	8008b38 <snprintf>
 8009bb8:	4285      	cmp	r5, r0
 8009bba:	bfa2      	ittt	ge
 8009bbc:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009bc0:	18c0      	addge	r0, r0, r3
 8009bc2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009bc6:	7b62      	ldrb	r2, [r4, #13]
 8009bc8:	6863      	ldr	r3, [r4, #4]
 8009bca:	3201      	adds	r2, #1
 8009bcc:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8009bd0:	4916      	ldr	r1, [pc, #88]	; (8009c2c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009bd2:	0052      	lsls	r2, r2, #1
 8009bd4:	a803      	add	r0, sp, #12
 8009bd6:	f7ff fee5 	bl	80099a4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 8009bda:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009bde:	b17b      	cbz	r3, 8009c00 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 8009be0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009be4:	9b03      	ldr	r3, [sp, #12]
 8009be6:	4413      	add	r3, r2
 8009be8:	227d      	movs	r2, #125	; 0x7d
 8009bea:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009bee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009bf2:	9903      	ldr	r1, [sp, #12]
 8009bf4:	54ca      	strb	r2, [r1, r3]
 8009bf6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009bfa:	3301      	adds	r3, #1
 8009bfc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009c00:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009c04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009c06:	601a      	str	r2, [r3, #0]
 8009c08:	b006      	add	sp, #24
 8009c0a:	bd70      	pop	{r4, r5, r6, pc}
 8009c0c:	9300      	str	r3, [sp, #0]
 8009c0e:	4a08      	ldr	r2, [pc, #32]	; (8009c30 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009c10:	4b04      	ldr	r3, [pc, #16]	; (8009c24 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 8009c12:	e7ce      	b.n	8009bb2 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 8009c14:	080112c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, ip}
 8009c18:	08011298 	stmdaeq	r1, {r3, r4, r7, r9, ip}
 8009c1c:	080112bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, ip}
 8009c20:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 8009c24:	080112af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, ip}
 8009c28:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 8009c2c:	080112a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, ip}
 8009c30:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}

08009c34 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 8009c34:	b513      	push	{r0, r1, r4, lr}
 8009c36:	6804      	ldr	r4, [r0, #0]
 8009c38:	b914      	cbnz	r4, 8009c40 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009c3a:	601c      	str	r4, [r3, #0]
 8009c3c:	b002      	add	sp, #8
 8009c3e:	bd10      	pop	{r4, pc}
 8009c40:	9300      	str	r3, [sp, #0]
 8009c42:	4613      	mov	r3, r2
 8009c44:	460a      	mov	r2, r1
 8009c46:	2100      	movs	r1, #0
 8009c48:	f7ff ff74 	bl	8009b34 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 8009c4c:	e7f6      	b.n	8009c3c <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

08009c50 <DmxParams::Set(Dmx*)>:
 8009c50:	b538      	push	{r3, r4, r5, lr}
 8009c52:	6843      	ldr	r3, [r0, #4]
 8009c54:	4604      	mov	r4, r0
 8009c56:	07d8      	lsls	r0, r3, #31
 8009c58:	460d      	mov	r5, r1
 8009c5a:	d503      	bpl.n	8009c64 <DmxParams::Set(Dmx*)+0x14>
 8009c5c:	4628      	mov	r0, r5
 8009c5e:	8921      	ldrh	r1, [r4, #8]
 8009c60:	f000 fbe6 	bl	800a430 <Dmx::SetDmxBreakTime(unsigned int)>
 8009c64:	6863      	ldr	r3, [r4, #4]
 8009c66:	0799      	lsls	r1, r3, #30
 8009c68:	d503      	bpl.n	8009c72 <DmxParams::Set(Dmx*)+0x22>
 8009c6a:	4628      	mov	r0, r5
 8009c6c:	8961      	ldrh	r1, [r4, #10]
 8009c6e:	f000 fbe9 	bl	800a444 <Dmx::SetDmxMabTime(unsigned int)>
 8009c72:	6863      	ldr	r3, [r4, #4]
 8009c74:	075a      	lsls	r2, r3, #29
 8009c76:	d507      	bpl.n	8009c88 <DmxParams::Set(Dmx*)+0x38>
 8009c78:	7b21      	ldrb	r1, [r4, #12]
 8009c7a:	b111      	cbz	r1, 8009c82 <DmxParams::Set(Dmx*)+0x32>
 8009c7c:	4b08      	ldr	r3, [pc, #32]	; (8009ca0 <DmxParams::Set(Dmx*)+0x50>)
 8009c7e:	fbb3 f1f1 	udiv	r1, r3, r1
 8009c82:	4628      	mov	r0, r5
 8009c84:	f000 fba4 	bl	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 8009c88:	6863      	ldr	r3, [r4, #4]
 8009c8a:	071b      	lsls	r3, r3, #28
 8009c8c:	d507      	bpl.n	8009c9e <DmxParams::Set(Dmx*)+0x4e>
 8009c8e:	7b61      	ldrb	r1, [r4, #13]
 8009c90:	4628      	mov	r0, r5
 8009c92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009c96:	3101      	adds	r1, #1
 8009c98:	0049      	lsls	r1, r1, #1
 8009c9a:	f000 bbdd 	b.w	800a458 <Dmx::SetDmxSlots(unsigned short)>
 8009c9e:	bd38      	pop	{r3, r4, r5, pc}
 8009ca0:	000f4240 	andeq	r4, pc, r0, asr #4

08009ca4 <DmxParams::Dump()>:
 8009ca4:	4770      	bx	lr
	...

08009ca8 <USART2_IRQHandler>:
 8009ca8:	b510      	push	{r4, lr}
 8009caa:	f3bf 8f5f 	dmb	sy
 8009cae:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8009cb2:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8009cb6:	f013 0f02 	tst.w	r3, #2
 8009cba:	4b74      	ldr	r3, [pc, #464]	; (8009e8c <USART2_IRQHandler+0x1e4>)
 8009cbc:	d00e      	beq.n	8009cdc <USART2_IRQHandler+0x34>
 8009cbe:	f8d2 1800 	ldr.w	r1, [r2, #2048]	; 0x800
 8009cc2:	f021 0102 	bic.w	r1, r1, #2
 8009cc6:	f8c2 1800 	str.w	r1, [r2, #2048]	; 0x800
 8009cca:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009cce:	2200      	movs	r2, #0
 8009cd0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009cd4:	2202      	movs	r2, #2
 8009cd6:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009cda:	bd10      	pop	{r4, pc}
 8009cdc:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8009ce0:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 8009ce4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009ce8:	290a      	cmp	r1, #10
 8009cea:	f200 80ca 	bhi.w	8009e82 <USART2_IRQHandler+0x1da>
 8009cee:	e8df f001 	tbb	[pc, r1]
 8009cf2:	c810c806 	ldmdagt	r0, {r1, r2, fp, lr, pc}
 8009cf6:	6d5f482c 	ldclvs	8, cr4, [pc, #-176]	; 8009c4c <DmxParams::Save(char*, unsigned int, unsigned int&)+0x18>
 8009cfa:	00ac9886 	adceq	r9, ip, r6, lsl #17
 8009cfe:	2108      	movs	r1, #8
 8009d00:	701a      	strb	r2, [r3, #0]
 8009d02:	2201      	movs	r2, #1
 8009d04:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009d08:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009d0c:	f3bf 8f5f 	dmb	sy
 8009d10:	e7e3      	b.n	8009cda <USART2_IRQHandler+0x32>
 8009d12:	b11a      	cbz	r2, 8009d1c <USART2_IRQHandler+0x74>
 8009d14:	2acc      	cmp	r2, #204	; 0xcc
 8009d16:	d012      	beq.n	8009d3e <USART2_IRQHandler+0x96>
 8009d18:	2200      	movs	r2, #0
 8009d1a:	e00d      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009d1c:	701a      	strb	r2, [r3, #0]
 8009d1e:	2201      	movs	r2, #1
 8009d20:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d24:	4a5a      	ldr	r2, [pc, #360]	; (8009e90 <USART2_IRQHandler+0x1e8>)
 8009d26:	6851      	ldr	r1, [r2, #4]
 8009d28:	3101      	adds	r1, #1
 8009d2a:	6051      	str	r1, [r2, #4]
 8009d2c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8009d30:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 8009d34:	60d1      	str	r1, [r2, #12]
 8009d36:	2204      	movs	r2, #4
 8009d38:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009d3c:	e7e6      	b.n	8009d0c <USART2_IRQHandler+0x64>
 8009d3e:	701a      	strb	r2, [r3, #0]
 8009d40:	4a54      	ldr	r2, [pc, #336]	; (8009e94 <USART2_IRQHandler+0x1ec>)
 8009d42:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d46:	2205      	movs	r2, #5
 8009d48:	e7f6      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009d4a:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8009d4e:	b288      	uxth	r0, r1
 8009d50:	541a      	strb	r2, [r3, r0]
 8009d52:	1c4a      	adds	r2, r1, #1
 8009d54:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009d58:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d5c:	d904      	bls.n	8009d68 <USART2_IRQHandler+0xc0>
 8009d5e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009d62:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009d66:	e7d7      	b.n	8009d18 <USART2_IRQHandler+0x70>
 8009d68:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009d6c:	4848      	ldr	r0, [pc, #288]	; (8009e90 <USART2_IRQHandler+0x1e8>)
 8009d6e:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 8009d72:	68c3      	ldr	r3, [r0, #12]
 8009d74:	60c1      	str	r1, [r0, #12]
 8009d76:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 8009d7a:	3304      	adds	r3, #4
 8009d7c:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 8009d80:	e7c4      	b.n	8009d0c <USART2_IRQHandler+0x64>
 8009d82:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8009d86:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 8009d8a:	541a      	strb	r2, [r3, r0]
 8009d8c:	1c41      	adds	r1, r0, #1
 8009d8e:	3817      	subs	r0, #23
 8009d90:	b289      	uxth	r1, r1
 8009d92:	4422      	add	r2, r4
 8009d94:	28e7      	cmp	r0, #231	; 0xe7
 8009d96:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009d9a:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009d9e:	d804      	bhi.n	8009daa <USART2_IRQHandler+0x102>
 8009da0:	789a      	ldrb	r2, [r3, #2]
 8009da2:	428a      	cmp	r2, r1
 8009da4:	d101      	bne.n	8009daa <USART2_IRQHandler+0x102>
 8009da6:	2206      	movs	r2, #6
 8009da8:	e7c6      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009daa:	29ff      	cmp	r1, #255	; 0xff
 8009dac:	d9ae      	bls.n	8009d0c <USART2_IRQHandler+0x64>
 8009dae:	e7b3      	b.n	8009d18 <USART2_IRQHandler+0x70>
 8009db0:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009db4:	545a      	strb	r2, [r3, r1]
 8009db6:	3101      	adds	r1, #1
 8009db8:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009dbc:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 8009dc0:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8009dc4:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009dc8:	2207      	movs	r2, #7
 8009dca:	e7b5      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009dcc:	f8b3 0206 	ldrh.w	r0, [r3, #518]	; 0x206
 8009dd0:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009dd4:	545a      	strb	r2, [r3, r1]
 8009dd6:	1a82      	subs	r2, r0, r2
 8009dd8:	b292      	uxth	r2, r2
 8009dda:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 8009dde:	b912      	cbnz	r2, 8009de6 <USART2_IRQHandler+0x13e>
 8009de0:	785a      	ldrb	r2, [r3, #1]
 8009de2:	2a01      	cmp	r2, #1
 8009de4:	d001      	beq.n	8009dea <USART2_IRQHandler+0x142>
 8009de6:	2200      	movs	r2, #0
 8009de8:	e7bb      	b.n	8009d62 <USART2_IRQHandler+0xba>
 8009dea:	3101      	adds	r1, #1
 8009dec:	4a2a      	ldr	r2, [pc, #168]	; (8009e98 <USART2_IRQHandler+0x1f0>)
 8009dee:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009df2:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009df6:	6851      	ldr	r1, [r2, #4]
 8009df8:	4a28      	ldr	r2, [pc, #160]	; (8009e9c <USART2_IRQHandler+0x1f4>)
 8009dfa:	6011      	str	r1, [r2, #0]
 8009dfc:	e78c      	b.n	8009d18 <USART2_IRQHandler+0x70>
 8009dfe:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e02:	2aaa      	cmp	r2, #170	; 0xaa
 8009e04:	545a      	strb	r2, [r3, r1]
 8009e06:	f101 0101 	add.w	r1, r1, #1
 8009e0a:	b289      	uxth	r1, r1
 8009e0c:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e10:	d002      	beq.n	8009e18 <USART2_IRQHandler+0x170>
 8009e12:	2909      	cmp	r1, #9
 8009e14:	f47f af7a 	bne.w	8009d0c <USART2_IRQHandler+0x64>
 8009e18:	2200      	movs	r2, #0
 8009e1a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e1e:	2209      	movs	r2, #9
 8009e20:	e78a      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009e22:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e26:	545a      	strb	r2, [r3, r1]
 8009e28:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8009e2c:	3101      	adds	r1, #1
 8009e2e:	3201      	adds	r2, #1
 8009e30:	b292      	uxth	r2, r2
 8009e32:	2a0c      	cmp	r2, #12
 8009e34:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8009e38:	d002      	beq.n	8009e40 <USART2_IRQHandler+0x198>
 8009e3a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e3e:	e765      	b.n	8009d0c <USART2_IRQHandler+0x64>
 8009e40:	2200      	movs	r2, #0
 8009e42:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8009e46:	220a      	movs	r2, #10
 8009e48:	e776      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009e4a:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8009e4e:	545a      	strb	r2, [r3, r1]
 8009e50:	1c4a      	adds	r2, r1, #1
 8009e52:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8009e56:	b292      	uxth	r2, r2
 8009e58:	3101      	adds	r1, #1
 8009e5a:	b289      	uxth	r1, r1
 8009e5c:	2904      	cmp	r1, #4
 8009e5e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009e62:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 8009e66:	f47f af51 	bne.w	8009d0c <USART2_IRQHandler+0x64>
 8009e6a:	2100      	movs	r1, #0
 8009e6c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009e70:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8009e74:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 8009e78:	4b07      	ldr	r3, [pc, #28]	; (8009e98 <USART2_IRQHandler+0x1f0>)
 8009e7a:	685a      	ldr	r2, [r3, #4]
 8009e7c:	4b07      	ldr	r3, [pc, #28]	; (8009e9c <USART2_IRQHandler+0x1f4>)
 8009e7e:	601a      	str	r2, [r3, #0]
 8009e80:	e744      	b.n	8009d0c <USART2_IRQHandler+0x64>
 8009e82:	2200      	movs	r2, #0
 8009e84:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009e88:	e756      	b.n	8009d38 <USART2_IRQHandler+0x90>
 8009e8a:	bf00      	nop
 8009e8c:	20000718 	andcs	r0, r0, r8, lsl r7
 8009e90:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009e94:	00cc0001 	sbceq	r0, ip, r1
 8009e98:	e0001000 	and	r1, r0, r0
 8009e9c:	20000b48 	andcs	r0, r0, r8, asr #22

08009ea0 <TIMER1_IRQHandler>:
 8009ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ea2:	f3bf 8f5f 	dmb	sy
 8009ea6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009eaa:	691c      	ldr	r4, [r3, #16]
 8009eac:	4e1f      	ldr	r6, [pc, #124]	; (8009f2c <TIMER1_IRQHandler+0x8c>)
 8009eae:	07a7      	lsls	r7, r4, #30
 8009eb0:	8835      	ldrh	r5, [r6, #0]
 8009eb2:	d518      	bpl.n	8009ee6 <TIMER1_IRQHandler+0x46>
 8009eb4:	4f1e      	ldr	r7, [pc, #120]	; (8009f30 <TIMER1_IRQHandler+0x90>)
 8009eb6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009eba:	2203      	movs	r2, #3
 8009ebc:	2110      	movs	r1, #16
 8009ebe:	4638      	mov	r0, r7
 8009ec0:	f005 fbb6 	bl	800f630 <gpio_init>
 8009ec4:	07ed      	lsls	r5, r5, #31
 8009ec6:	d506      	bpl.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009ec8:	8833      	ldrh	r3, [r6, #0]
 8009eca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009ece:	8033      	strh	r3, [r6, #0]
 8009ed0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009ed4:	617b      	str	r3, [r7, #20]
 8009ed6:	4621      	mov	r1, r4
 8009ed8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8009edc:	f005 fe93 	bl	800fc06 <timer_interrupt_flag_clear>
 8009ee0:	f3bf 8f5f 	dmb	sy
 8009ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009ee6:	0760      	lsls	r0, r4, #29
 8009ee8:	d509      	bpl.n	8009efe <TIMER1_IRQHandler+0x5e>
 8009eea:	05e9      	lsls	r1, r5, #23
 8009eec:	d5f3      	bpl.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009eee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009ef2:	2203      	movs	r2, #3
 8009ef4:	2118      	movs	r1, #24
 8009ef6:	480e      	ldr	r0, [pc, #56]	; (8009f30 <TIMER1_IRQHandler+0x90>)
 8009ef8:	f005 fb9a 	bl	800f630 <gpio_init>
 8009efc:	e7eb      	b.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009efe:	0722      	lsls	r2, r4, #28
 8009f00:	d5e9      	bpl.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009f02:	05eb      	lsls	r3, r5, #23
 8009f04:	d5e7      	bpl.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009f06:	4b0b      	ldr	r3, [pc, #44]	; (8009f34 <TIMER1_IRQHandler+0x94>)
 8009f08:	2180      	movs	r1, #128	; 0x80
 8009f0a:	69da      	ldr	r2, [r3, #28]
 8009f0c:	480a      	ldr	r0, [pc, #40]	; (8009f38 <TIMER1_IRQHandler+0x98>)
 8009f0e:	f022 0201 	bic.w	r2, r2, #1
 8009f12:	61da      	str	r2, [r3, #28]
 8009f14:	4a09      	ldr	r2, [pc, #36]	; (8009f3c <TIMER1_IRQHandler+0x9c>)
 8009f16:	629a      	str	r2, [r3, #40]	; 0x28
 8009f18:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8009f1c:	621a      	str	r2, [r3, #32]
 8009f1e:	69da      	ldr	r2, [r3, #28]
 8009f20:	f042 0201 	orr.w	r2, r2, #1
 8009f24:	61da      	str	r2, [r3, #28]
 8009f26:	f005 ff0d 	bl	800fd44 <usart_dma_transmit_config>
 8009f2a:	e7d4      	b.n	8009ed6 <TIMER1_IRQHandler+0x36>
 8009f2c:	20000b30 	andcs	r0, r0, r0, lsr fp
 8009f30:	40011000 	andmi	r1, r1, r0
 8009f34:	40020000 	andmi	r0, r2, r0
 8009f38:	40004800 	andmi	r4, r0, r0, lsl #16
 8009f3c:	20000928 	andcs	r0, r0, r8, lsr #18

08009f40 <TIMER2_IRQHandler>:
 8009f40:	b508      	push	{r3, lr}
 8009f42:	f3bf 8f5f 	dmb	sy
 8009f46:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f4a:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8009f4e:	078b      	lsls	r3, r1, #30
 8009f50:	d50d      	bpl.n	8009f6e <TIMER2_IRQHandler+0x2e>
 8009f52:	4b0a      	ldr	r3, [pc, #40]	; (8009f7c <TIMER2_IRQHandler+0x3c>)
 8009f54:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8009f58:	2a04      	cmp	r2, #4
 8009f5a:	d108      	bne.n	8009f6e <TIMER2_IRQHandler+0x2e>
 8009f5c:	2200      	movs	r2, #0
 8009f5e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8009f62:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8009f66:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009f6a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8009f6e:	4804      	ldr	r0, [pc, #16]	; (8009f80 <TIMER2_IRQHandler+0x40>)
 8009f70:	f005 fe49 	bl	800fc06 <timer_interrupt_flag_clear>
 8009f74:	f3bf 8f5f 	dmb	sy
 8009f78:	bd08      	pop	{r3, pc}
 8009f7a:	bf00      	nop
 8009f7c:	20000718 	andcs	r0, r0, r8, lsl r7
 8009f80:	40000400 	andmi	r0, r0, r0, lsl #8

08009f84 <TIMER3_IRQHandler>:
 8009f84:	b508      	push	{r3, lr}
 8009f86:	f3bf 8f5f 	dmb	sy
 8009f8a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8009f8e:	4804      	ldr	r0, [pc, #16]	; (8009fa0 <TIMER3_IRQHandler+0x1c>)
 8009f90:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8009f94:	f005 fe37 	bl	800fc06 <timer_interrupt_flag_clear>
 8009f98:	f3bf 8f5f 	dmb	sy
 8009f9c:	bd08      	pop	{r3, pc}
 8009f9e:	bf00      	nop
 8009fa0:	40000800 	andmi	r0, r0, r0, lsl #16

08009fa4 <TIMER6_IRQHandler>:
 8009fa4:	b508      	push	{r3, lr}
 8009fa6:	f3bf 8f5f 	dmb	sy
 8009faa:	4b07      	ldr	r3, [pc, #28]	; (8009fc8 <TIMER6_IRQHandler+0x24>)
 8009fac:	4807      	ldr	r0, [pc, #28]	; (8009fcc <TIMER6_IRQHandler+0x28>)
 8009fae:	685a      	ldr	r2, [r3, #4]
 8009fb0:	6899      	ldr	r1, [r3, #8]
 8009fb2:	1a52      	subs	r2, r2, r1
 8009fb4:	601a      	str	r2, [r3, #0]
 8009fb6:	685a      	ldr	r2, [r3, #4]
 8009fb8:	2101      	movs	r1, #1
 8009fba:	609a      	str	r2, [r3, #8]
 8009fbc:	f005 fe23 	bl	800fc06 <timer_interrupt_flag_clear>
 8009fc0:	f3bf 8f5f 	dmb	sy
 8009fc4:	bd08      	pop	{r3, pc}
 8009fc6:	bf00      	nop
 8009fc8:	20000b34 	andcs	r0, r0, r4, lsr fp
 8009fcc:	40001400 	andmi	r1, r0, r0, lsl #8

08009fd0 <Dmx::ClearData(unsigned int)>:
 8009fd0:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009fd4:	b510      	push	{r4, lr}
 8009fd6:	2400      	movs	r4, #0
 8009fd8:	4a08      	ldr	r2, [pc, #32]	; (8009ffc <Dmx::ClearData(unsigned int)+0x2c>)
 8009fda:	fb03 2301 	mla	r3, r3, r1, r2
 8009fde:	f203 2002 	addw	r0, r3, #514	; 0x202
 8009fe2:	f823 4b02 	strh.w	r4, [r3], #2
 8009fe6:	4283      	cmp	r3, r0
 8009fe8:	d1fb      	bne.n	8009fe2 <Dmx::ClearData(unsigned int)+0x12>
 8009fea:	f44f 7301 	mov.w	r3, #516	; 0x204
 8009fee:	fb03 2201 	mla	r2, r3, r1, r2
 8009ff2:	f240 2301 	movw	r3, #513	; 0x201
 8009ff6:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 8009ffa:	bd10      	pop	{r4, pc}
 8009ffc:	20000928 	andcs	r0, r0, r8, lsr #18

0800a000 <Dmx::StartData(unsigned int, unsigned int)>:
 800a000:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a002:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800a006:	6943      	ldr	r3, [r0, #20]
 800a008:	460c      	mov	r4, r1
 800a00a:	4615      	mov	r5, r2
 800a00c:	b085      	sub	sp, #20
 800a00e:	2b00      	cmp	r3, #0
 800a010:	d16a      	bne.n	800a0e8 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800a012:	4e47      	ldr	r6, [pc, #284]	; (800a130 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 800a014:	8834      	ldrh	r4, [r6, #0]
 800a016:	2c00      	cmp	r4, #0
 800a018:	d15b      	bne.n	800a0d2 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800a01a:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800a01e:	f005 fb9f 	bl	800f760 <rcu_periph_clock_enable>
 800a022:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a026:	f005 fcf7 	bl	800fa18 <timer_deinit>
 800a02a:	236b      	movs	r3, #107	; 0x6b
 800a02c:	9300      	str	r3, [sp, #0]
 800a02e:	4b41      	ldr	r3, [pc, #260]	; (800a134 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 800a030:	4669      	mov	r1, sp
 800a032:	681b      	ldr	r3, [r3, #0]
 800a034:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a038:	9302      	str	r3, [sp, #8]
 800a03a:	f8ad 4004 	strh.w	r4, [sp, #4]
 800a03e:	f8ad 400c 	strh.w	r4, [sp, #12]
 800a042:	f88d 400e 	strb.w	r4, [sp, #14]
 800a046:	f005 fd49 	bl	800fadc <timer_init>
 800a04a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a04e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a052:	f005 fddb 	bl	800fc0c <timer_flag_clear>
 800a056:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a05a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a05e:	f005 fdd2 	bl	800fc06 <timer_interrupt_flag_clear>
 800a062:	2210      	movs	r2, #16
 800a064:	4621      	mov	r1, r4
 800a066:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a06a:	f005 fd94 	bl	800fb96 <timer_channel_output_mode_config>
 800a06e:	2210      	movs	r2, #16
 800a070:	2101      	movs	r1, #1
 800a072:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a076:	f005 fd8e 	bl	800fb96 <timer_channel_output_mode_config>
 800a07a:	4f2f      	ldr	r7, [pc, #188]	; (800a138 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800a07c:	2210      	movs	r2, #16
 800a07e:	2102      	movs	r1, #2
 800a080:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a084:	f005 fd87 	bl	800fb96 <timer_channel_output_mode_config>
 800a088:	4622      	mov	r2, r4
 800a08a:	4621      	mov	r1, r4
 800a08c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a090:	f005 fda7 	bl	800fbe2 <timer_channel_output_pulse_value_config>
 800a094:	2101      	movs	r1, #1
 800a096:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a09a:	883a      	ldrh	r2, [r7, #0]
 800a09c:	f005 fda1 	bl	800fbe2 <timer_channel_output_pulse_value_config>
 800a0a0:	4b26      	ldr	r3, [pc, #152]	; (800a13c <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800a0a2:	683a      	ldr	r2, [r7, #0]
 800a0a4:	681b      	ldr	r3, [r3, #0]
 800a0a6:	2102      	movs	r1, #2
 800a0a8:	441a      	add	r2, r3
 800a0aa:	b292      	uxth	r2, r2
 800a0ac:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0b0:	f005 fd97 	bl	800fbe2 <timer_channel_output_pulse_value_config>
 800a0b4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0b8:	210e      	movs	r1, #14
 800a0ba:	f005 fda0 	bl	800fbfe <timer_interrupt_enable>
 800a0be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a0c2:	4b1f      	ldr	r3, [pc, #124]	; (800a140 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800a0c4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800a0c8:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800a0cc:	601a      	str	r2, [r3, #0]
 800a0ce:	f005 fd5d 	bl	800fb8c <timer_enable>
 800a0d2:	2201      	movs	r2, #1
 800a0d4:	8831      	ldrh	r1, [r6, #0]
 800a0d6:	fa02 f305 	lsl.w	r3, r2, r5
 800a0da:	430b      	orrs	r3, r1
 800a0dc:	8033      	strh	r3, [r6, #0]
 800a0de:	4b19      	ldr	r3, [pc, #100]	; (800a144 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a0e0:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a0e4:	b005      	add	sp, #20
 800a0e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a0e8:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a0ec:	4b16      	ldr	r3, [pc, #88]	; (800a148 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800a0ee:	fb02 3305 	mla	r3, r2, r5, r3
 800a0f2:	2200      	movs	r2, #0
 800a0f4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a0f8:	2107      	movs	r1, #7
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f005 fe28 	bl	800fd50 <usart_flag_get>
 800a100:	2800      	cmp	r0, #0
 800a102:	d0f9      	beq.n	800a0f8 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800a104:	4620      	mov	r0, r4
 800a106:	4911      	ldr	r1, [pc, #68]	; (800a14c <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800a108:	f005 fe43 	bl	800fd92 <usart_interrupt_flag_clear>
 800a10c:	f240 3105 	movw	r1, #773	; 0x305
 800a110:	4620      	mov	r0, r4
 800a112:	f005 fe25 	bl	800fd60 <usart_interrupt_enable>
 800a116:	2202      	movs	r2, #2
 800a118:	4b0a      	ldr	r3, [pc, #40]	; (800a144 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800a11a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a11e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a122:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a126:	f043 0302 	orr.w	r3, r3, #2
 800a12a:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a12e:	e7d9      	b.n	800a0e4 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800a130:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a134:	20000008 	andcs	r0, r0, r8
 800a138:	20000010 	andcs	r0, r0, r0, lsl r0
 800a13c:	2000000c 	andcs	r0, r0, ip
 800a140:	e000e100 	and	lr, r0, r0, lsl #2
 800a144:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a148:	20000718 	andcs	r0, r0, r8, lsl r7
 800a14c:	00050305 	andeq	r0, r5, r5, lsl #6

0800a150 <Dmx::StopData(unsigned int, unsigned int)>:
 800a150:	b538      	push	{r3, r4, r5, lr}
 800a152:	4d16      	ldr	r5, [pc, #88]	; (800a1ac <Dmx::StopData(unsigned int, unsigned int)+0x5c>)
 800a154:	4614      	mov	r4, r2
 800a156:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800a15a:	4603      	mov	r3, r0
 800a15c:	4608      	mov	r0, r1
 800a15e:	b17a      	cbz	r2, 800a180 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 800a160:	695b      	ldr	r3, [r3, #20]
 800a162:	b973      	cbnz	r3, 800a182 <Dmx::StopData(unsigned int, unsigned int)+0x32>
 800a164:	2201      	movs	r2, #1
 800a166:	4912      	ldr	r1, [pc, #72]	; (800a1b0 <Dmx::StopData(unsigned int, unsigned int)+0x60>)
 800a168:	f104 0308 	add.w	r3, r4, #8
 800a16c:	fa02 f303 	lsl.w	r3, r2, r3
 800a170:	40a2      	lsls	r2, r4
 800a172:	4313      	orrs	r3, r2
 800a174:	880a      	ldrh	r2, [r1, #0]
 800a176:	4013      	ands	r3, r2
 800a178:	800b      	strh	r3, [r1, #0]
 800a17a:	2300      	movs	r3, #0
 800a17c:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800a180:	bd38      	pop	{r3, r4, r5, pc}
 800a182:	f240 3105 	movw	r1, #773	; 0x305
 800a186:	f005 fdf7 	bl	800fd78 <usart_interrupt_disable>
 800a18a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800a18e:	4b09      	ldr	r3, [pc, #36]	; (800a1b4 <Dmx::StopData(unsigned int, unsigned int)+0x64>)
 800a190:	fb02 3304 	mla	r3, r2, r4, r3
 800a194:	2200      	movs	r2, #0
 800a196:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800a19a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800a19e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a1a2:	f023 0302 	bic.w	r3, r3, #2
 800a1a6:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800a1aa:	e7e6      	b.n	800a17a <Dmx::StopData(unsigned int, unsigned int)+0x2a>
 800a1ac:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a1b0:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a1b4:	20000718 	andcs	r0, r0, r8, lsl r7

0800a1b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800a1b8:	b570      	push	{r4, r5, r6, lr}
 800a1ba:	461d      	mov	r5, r3
 800a1bc:	6943      	ldr	r3, [r0, #20]
 800a1be:	4606      	mov	r6, r0
 800a1c0:	4293      	cmp	r3, r2
 800a1c2:	4614      	mov	r4, r2
 800a1c4:	d014      	beq.n	800a1f0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800a1c6:	6142      	str	r2, [r0, #20]
 800a1c8:	4910      	ldr	r1, [pc, #64]	; (800a20c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a1ca:	2200      	movs	r2, #0
 800a1cc:	f7ff ffc0 	bl	800a150 <Dmx::StopData(unsigned int, unsigned int)>
 800a1d0:	b934      	cbnz	r4, 800a1e0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 800a1d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a1d6:	4b0e      	ldr	r3, [pc, #56]	; (800a210 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a1d8:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800a1dc:	b94d      	cbnz	r5, 800a1f2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800a1de:	bd70      	pop	{r4, r5, r6, pc}
 800a1e0:	2c01      	cmp	r4, #1
 800a1e2:	d1fb      	bne.n	800a1dc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a1e4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a1e8:	4b09      	ldr	r3, [pc, #36]	; (800a210 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 800a1ea:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800a1ee:	e7f5      	b.n	800a1dc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 800a1f0:	b135      	cbz	r5, 800a200 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 800a1f2:	4630      	mov	r0, r6
 800a1f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1f8:	2200      	movs	r2, #0
 800a1fa:	4904      	ldr	r1, [pc, #16]	; (800a20c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a1fc:	f7ff bf00 	b.w	800a000 <Dmx::StartData(unsigned int, unsigned int)>
 800a200:	462a      	mov	r2, r5
 800a202:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a206:	4901      	ldr	r1, [pc, #4]	; (800a20c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 800a208:	f7ff bfa2 	b.w	800a150 <Dmx::StopData(unsigned int, unsigned int)>
 800a20c:	40004800 	andmi	r4, r0, r0, lsl #16
 800a210:	40010000 	andmi	r0, r1, r0

0800a214 <Dmx::Dmx()>:
 800a214:	225c      	movs	r2, #92	; 0x5c
 800a216:	230c      	movs	r3, #12
 800a218:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a21c:	e9c0 2300 	strd	r2, r3, [r0]
 800a220:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800a224:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800a228:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a22c:	2400      	movs	r4, #0
 800a22e:	4605      	mov	r5, r0
 800a230:	8203      	strh	r3, [r0, #16]
 800a232:	4b5d      	ldr	r3, [pc, #372]	; (800a3a8 <Dmx::Dmx()+0x194>)
 800a234:	b08b      	sub	sp, #44	; 0x2c
 800a236:	6018      	str	r0, [r3, #0]
 800a238:	4b5c      	ldr	r3, [pc, #368]	; (800a3ac <Dmx::Dmx()+0x198>)
 800a23a:	2203      	movs	r2, #3
 800a23c:	801c      	strh	r4, [r3, #0]
 800a23e:	2110      	movs	r1, #16
 800a240:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a244:	485a      	ldr	r0, [pc, #360]	; (800a3b0 <Dmx::Dmx()+0x19c>)
 800a246:	f005 f9f3 	bl	800f630 <gpio_init>
 800a24a:	4621      	mov	r1, r4
 800a24c:	4628      	mov	r0, r5
 800a24e:	f7ff febf 	bl	8009fd0 <Dmx::ClearData(unsigned int)>
 800a252:	4b58      	ldr	r3, [pc, #352]	; (800a3b4 <Dmx::Dmx()+0x1a0>)
 800a254:	2201      	movs	r2, #1
 800a256:	4628      	mov	r0, r5
 800a258:	601c      	str	r4, [r3, #0]
 800a25a:	4623      	mov	r3, r4
 800a25c:	f7ff ffac 	bl	800a1b8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800a260:	4b55      	ldr	r3, [pc, #340]	; (800a3b8 <Dmx::Dmx()+0x1a4>)
 800a262:	4e56      	ldr	r6, [pc, #344]	; (800a3bc <Dmx::Dmx()+0x1a8>)
 800a264:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800a268:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800a26c:	f005 fa78 	bl	800f760 <rcu_periph_clock_enable>
 800a270:	f240 5001 	movw	r0, #1281	; 0x501
 800a274:	f005 fa74 	bl	800f760 <rcu_periph_clock_enable>
 800a278:	4630      	mov	r0, r6
 800a27a:	2101      	movs	r1, #1
 800a27c:	f005 f8d4 	bl	800f428 <dma_deinit>
 800a280:	4b4f      	ldr	r3, [pc, #316]	; (800a3c0 <Dmx::Dmx()+0x1ac>)
 800a282:	2701      	movs	r7, #1
 800a284:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800a288:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800a28c:	9308      	str	r3, [sp, #32]
 800a28e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a292:	aa03      	add	r2, sp, #12
 800a294:	4639      	mov	r1, r7
 800a296:	4630      	mov	r0, r6
 800a298:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a29c:	9406      	str	r4, [sp, #24]
 800a29e:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a2a2:	f005 f8dd 	bl	800f460 <dma_init>
 800a2a6:	4639      	mov	r1, r7
 800a2a8:	4630      	mov	r0, r6
 800a2aa:	f005 f913 	bl	800f4d4 <dma_circulation_disable>
 800a2ae:	4639      	mov	r1, r7
 800a2b0:	4630      	mov	r0, r6
 800a2b2:	f005 f91f 	bl	800f4f4 <dma_memory_to_memory_disable>
 800a2b6:	f5a6 36fe 	sub.w	r6, r6, #130048	; 0x1fc00
 800a2ba:	f240 7001 	movw	r0, #1793	; 0x701
 800a2be:	f005 fa4f 	bl	800f760 <rcu_periph_clock_enable>
 800a2c2:	4630      	mov	r0, r6
 800a2c4:	f005 fba8 	bl	800fa18 <timer_deinit>
 800a2c8:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800a2cc:	236b      	movs	r3, #107	; 0x6b
 800a2ce:	4630      	mov	r0, r6
 800a2d0:	a903      	add	r1, sp, #12
 800a2d2:	9303      	str	r3, [sp, #12]
 800a2d4:	f8ad 4010 	strh.w	r4, [sp, #16]
 800a2d8:	f8cd 9014 	str.w	r9, [sp, #20]
 800a2dc:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a2e0:	f88d 401a 	strb.w	r4, [sp, #26]
 800a2e4:	f005 fbfa 	bl	800fadc <timer_init>
 800a2e8:	4649      	mov	r1, r9
 800a2ea:	4630      	mov	r0, r6
 800a2ec:	f005 fc8e 	bl	800fc0c <timer_flag_clear>
 800a2f0:	4649      	mov	r1, r9
 800a2f2:	4630      	mov	r0, r6
 800a2f4:	f005 fc87 	bl	800fc06 <timer_interrupt_flag_clear>
 800a2f8:	4621      	mov	r1, r4
 800a2fa:	4630      	mov	r0, r6
 800a2fc:	2210      	movs	r2, #16
 800a2fe:	f005 fc4a 	bl	800fb96 <timer_channel_output_mode_config>
 800a302:	4639      	mov	r1, r7
 800a304:	4630      	mov	r0, r6
 800a306:	2210      	movs	r2, #16
 800a308:	f005 fc45 	bl	800fb96 <timer_channel_output_mode_config>
 800a30c:	4630      	mov	r0, r6
 800a30e:	2210      	movs	r2, #16
 800a310:	2102      	movs	r1, #2
 800a312:	f005 fc40 	bl	800fb96 <timer_channel_output_mode_config>
 800a316:	2210      	movs	r2, #16
 800a318:	2103      	movs	r1, #3
 800a31a:	4630      	mov	r0, r6
 800a31c:	f005 fc3b 	bl	800fb96 <timer_channel_output_mode_config>
 800a320:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800a324:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800a3c4 <Dmx::Dmx()+0x1b0>
 800a328:	4630      	mov	r0, r6
 800a32a:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 800a32e:	f8c8 3000 	str.w	r3, [r8]
 800a332:	f506 5680 	add.w	r6, r6, #4096	; 0x1000
 800a336:	f005 fc29 	bl	800fb8c <timer_enable>
 800a33a:	f240 7005 	movw	r0, #1797	; 0x705
 800a33e:	f005 fa0f 	bl	800f760 <rcu_periph_clock_enable>
 800a342:	4630      	mov	r0, r6
 800a344:	f005 fb68 	bl	800fa18 <timer_deinit>
 800a348:	f642 232f 	movw	r3, #10799	; 0x2a2f
 800a34c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a350:	f242 7310 	movw	r3, #10000	; 0x2710
 800a354:	4630      	mov	r0, r6
 800a356:	a903      	add	r1, sp, #12
 800a358:	9305      	str	r3, [sp, #20]
 800a35a:	f005 fbbf 	bl	800fadc <timer_init>
 800a35e:	4649      	mov	r1, r9
 800a360:	4630      	mov	r0, r6
 800a362:	f005 fc53 	bl	800fc0c <timer_flag_clear>
 800a366:	4649      	mov	r1, r9
 800a368:	4630      	mov	r0, r6
 800a36a:	f005 fc4c 	bl	800fc06 <timer_interrupt_flag_clear>
 800a36e:	4639      	mov	r1, r7
 800a370:	4630      	mov	r0, r6
 800a372:	f005 fc44 	bl	800fbfe <timer_interrupt_enable>
 800a376:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800a37a:	4630      	mov	r0, r6
 800a37c:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 800a380:	f8c8 3004 	str.w	r3, [r8, #4]
 800a384:	f005 fc02 	bl	800fb8c <timer_enable>
 800a388:	2302      	movs	r3, #2
 800a38a:	2208      	movs	r2, #8
 800a38c:	9300      	str	r3, [sp, #0]
 800a38e:	490e      	ldr	r1, [pc, #56]	; (800a3c8 <Dmx::Dmx()+0x1b4>)
 800a390:	4623      	mov	r3, r4
 800a392:	480e      	ldr	r0, [pc, #56]	; (800a3cc <Dmx::Dmx()+0x1b8>)
 800a394:	f005 ff72 	bl	801027c <gd32_uart_begin>
 800a398:	2380      	movs	r3, #128	; 0x80
 800a39a:	4628      	mov	r0, r5
 800a39c:	f8c8 3004 	str.w	r3, [r8, #4]
 800a3a0:	b00b      	add	sp, #44	; 0x2c
 800a3a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3a6:	bf00      	nop
 800a3a8:	20000b44 	andcs	r0, r0, r4, asr #22
 800a3ac:	20000b30 	andcs	r0, r0, r0, lsr fp
 800a3b0:	40010c00 	andmi	r0, r1, r0, lsl #24
 800a3b4:	20000b2c 	andcs	r0, r0, ip, lsr #22
 800a3b8:	20000718 	andcs	r0, r0, r8, lsl r7
 800a3bc:	40020000 	andmi	r0, r2, r0
 800a3c0:	40004804 	andmi	r4, r0, r4, lsl #16
 800a3c4:	e000e100 	and	lr, r0, r0, lsl #2
 800a3c8:	0003d090 	muleq	r3, r0, r0
 800a3cc:	40004800 	andmi	r4, r0, r0, lsl #16

0800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800a3d0:	4b13      	ldr	r3, [pc, #76]	; (800a420 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 800a3d2:	b570      	push	{r4, r5, r6, lr}
 800a3d4:	60c1      	str	r1, [r0, #12]
 800a3d6:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800a3da:	232c      	movs	r3, #44	; 0x2c
 800a3dc:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800a3e0:	4d10      	ldr	r5, [pc, #64]	; (800a424 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 800a3e2:	4c11      	ldr	r4, [pc, #68]	; (800a428 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800a3e4:	4358      	muls	r0, r3
 800a3e6:	682a      	ldr	r2, [r5, #0]
 800a3e8:	6823      	ldr	r3, [r4, #0]
 800a3ea:	4413      	add	r3, r2
 800a3ec:	4403      	add	r3, r0
 800a3ee:	42b3      	cmp	r3, r6
 800a3f0:	d908      	bls.n	800a404 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 800a3f2:	2ab0      	cmp	r2, #176	; 0xb0
 800a3f4:	4613      	mov	r3, r2
 800a3f6:	bf28      	it	cs
 800a3f8:	23b0      	movcs	r3, #176	; 0xb0
 800a3fa:	220c      	movs	r2, #12
 800a3fc:	602b      	str	r3, [r5, #0]
 800a3fe:	4413      	add	r3, r2
 800a400:	6022      	str	r2, [r4, #0]
 800a402:	4403      	add	r3, r0
 800a404:	4a09      	ldr	r2, [pc, #36]	; (800a42c <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800a406:	b109      	cbz	r1, 800a40c <Dmx::SetDmxPeriodTime(unsigned int)+0x3c>
 800a408:	428b      	cmp	r3, r1
 800a40a:	d907      	bls.n	800a41c <Dmx::SetDmxPeriodTime(unsigned int)+0x4c>
 800a40c:	f240 41b4 	movw	r1, #1204	; 0x4b4
 800a410:	332c      	adds	r3, #44	; 0x2c
 800a412:	428b      	cmp	r3, r1
 800a414:	bf2c      	ite	cs
 800a416:	6013      	strcs	r3, [r2, #0]
 800a418:	6011      	strcc	r1, [r2, #0]
 800a41a:	e000      	b.n	800a41e <Dmx::SetDmxPeriodTime(unsigned int)+0x4e>
 800a41c:	6011      	str	r1, [r2, #0]
 800a41e:	bd70      	pop	{r4, r5, r6, pc}
 800a420:	20000928 	andcs	r0, r0, r8, lsr #18
 800a424:	20000010 	andcs	r0, r0, r0, lsl r0
 800a428:	2000000c 	andcs	r0, r0, ip
 800a42c:	20000008 	andcs	r0, r0, r8

0800a430 <Dmx::SetDmxBreakTime(unsigned int)>:
 800a430:	295c      	cmp	r1, #92	; 0x5c
 800a432:	bf38      	it	cc
 800a434:	215c      	movcc	r1, #92	; 0x5c
 800a436:	4b02      	ldr	r3, [pc, #8]	; (800a440 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800a438:	6019      	str	r1, [r3, #0]
 800a43a:	68c1      	ldr	r1, [r0, #12]
 800a43c:	f7ff bfc8 	b.w	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a440:	20000010 	andcs	r0, r0, r0, lsl r0

0800a444 <Dmx::SetDmxMabTime(unsigned int)>:
 800a444:	290c      	cmp	r1, #12
 800a446:	bf38      	it	cc
 800a448:	210c      	movcc	r1, #12
 800a44a:	4b02      	ldr	r3, [pc, #8]	; (800a454 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800a44c:	6019      	str	r1, [r3, #0]
 800a44e:	68c1      	ldr	r1, [r0, #12]
 800a450:	f7ff bfbe 	b.w	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a454:	2000000c 	andcs	r0, r0, ip

0800a458 <Dmx::SetDmxSlots(unsigned short)>:
 800a458:	1e8b      	subs	r3, r1, #2
 800a45a:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800a45e:	d809      	bhi.n	800a474 <Dmx::SetDmxSlots(unsigned short)+0x1c>
 800a460:	6983      	ldr	r3, [r0, #24]
 800a462:	8201      	strh	r1, [r0, #16]
 800a464:	b11b      	cbz	r3, 800a46e <Dmx::SetDmxSlots(unsigned short)+0x16>
 800a466:	4299      	cmp	r1, r3
 800a468:	bf94      	ite	ls
 800a46a:	6181      	strls	r1, [r0, #24]
 800a46c:	6183      	strhi	r3, [r0, #24]
 800a46e:	68c1      	ldr	r1, [r0, #12]
 800a470:	f7ff bfae 	b.w	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a474:	4770      	bx	lr
	...

0800a478 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800a478:	b4f0      	push	{r4, r5, r6, r7}
 800a47a:	8a04      	ldrh	r4, [r0, #16]
 800a47c:	4d11      	ldr	r5, [pc, #68]	; (800a4c4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800a47e:	42a3      	cmp	r3, r4
 800a480:	bf28      	it	cs
 800a482:	4623      	movcs	r3, r4
 800a484:	f44f 7401 	mov.w	r4, #516	; 0x204
 800a488:	434c      	muls	r4, r1
 800a48a:	1c5f      	adds	r7, r3, #1
 800a48c:	192e      	adds	r6, r5, r4
 800a48e:	f892 f000 	pld	[r2]
 800a492:	3401      	adds	r4, #1
 800a494:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800a498:	442c      	add	r4, r5
 800a49a:	18d6      	adds	r6, r2, r3
 800a49c:	4296      	cmp	r6, r2
 800a49e:	d004      	beq.n	800a4aa <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 800a4a0:	f812 5b01 	ldrb.w	r5, [r2], #1
 800a4a4:	f804 5b01 	strb.w	r5, [r4], #1
 800a4a8:	e7f8      	b.n	800a49c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800a4aa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a4ae:	698a      	ldr	r2, [r1, #24]
 800a4b0:	429a      	cmp	r2, r3
 800a4b2:	d004      	beq.n	800a4be <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800a4b4:	bcf0      	pop	{r4, r5, r6, r7}
 800a4b6:	618b      	str	r3, [r1, #24]
 800a4b8:	68c1      	ldr	r1, [r0, #12]
 800a4ba:	f7ff bf89 	b.w	800a3d0 <Dmx::SetDmxPeriodTime(unsigned int)>
 800a4be:	bcf0      	pop	{r4, r5, r6, r7}
 800a4c0:	4770      	bx	lr
 800a4c2:	bf00      	nop
 800a4c4:	20000928 	andcs	r0, r0, r8, lsr #18

0800a4c8 <RemoteConfig::HandleList()>:
 800a4c8:	2212      	movs	r2, #18
 800a4ca:	6803      	ldr	r3, [r0, #0]
 800a4cc:	4931      	ldr	r1, [pc, #196]	; (800a594 <RemoteConfig::HandleList()+0xcc>)
 800a4ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a4d2:	fb02 1103 	mla	r1, r2, r3, r1
 800a4d6:	220c      	movs	r2, #12
 800a4d8:	4604      	mov	r4, r0
 800a4da:	6843      	ldr	r3, [r0, #4]
 800a4dc:	482e      	ldr	r0, [pc, #184]	; (800a598 <RemoteConfig::HandleList()+0xd0>)
 800a4de:	4e2f      	ldr	r6, [pc, #188]	; (800a59c <RemoteConfig::HandleList()+0xd4>)
 800a4e0:	fb02 0003 	mla	r0, r2, r3, r0
 800a4e4:	4b2e      	ldr	r3, [pc, #184]	; (800a5a0 <RemoteConfig::HandleList()+0xd8>)
 800a4e6:	4f2f      	ldr	r7, [pc, #188]	; (800a5a4 <RemoteConfig::HandleList()+0xdc>)
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	6835      	ldr	r5, [r6, #0]
 800a4ec:	f8d3 c010 	ldr.w	ip, [r3, #16]
 800a4f0:	f897 9009 	ldrb.w	r9, [r7, #9]
 800a4f4:	fa5f f38c 	uxtb.w	r3, ip
 800a4f8:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 800a4fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 800a500:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800a504:	b089      	sub	sp, #36	; 0x24
 800a506:	3507      	adds	r5, #7
 800a508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 800a50c:	f1b9 0f00 	cmp.w	r9, #0
 800a510:	d023      	beq.n	800a55a <RemoteConfig::HandleList()+0x92>
 800a512:	b2d2      	uxtb	r2, r2
 800a514:	3709      	adds	r7, #9
 800a516:	9201      	str	r2, [sp, #4]
 800a518:	fa5f f28c 	uxtb.w	r2, ip
 800a51c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800a520:	9200      	str	r2, [sp, #0]
 800a522:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a526:	4628      	mov	r0, r5
 800a528:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800a52c:	4a1e      	ldr	r2, [pc, #120]	; (800a5a8 <RemoteConfig::HandleList()+0xe0>)
 800a52e:	f8cd e008 	str.w	lr, [sp, #8]
 800a532:	f7fe fb01 	bl	8008b38 <snprintf>
 800a536:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a53a:	2b05      	cmp	r3, #5
 800a53c:	d11d      	bne.n	800a57a <RemoteConfig::HandleList()+0xb2>
 800a53e:	f642 1305 	movw	r3, #10501	; 0x2905
 800a542:	9300      	str	r3, [sp, #0]
 800a544:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a548:	b282      	uxth	r2, r0
 800a54a:	4629      	mov	r1, r5
 800a54c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a550:	f002 f97c 	bl	800c84c <udp_send>
 800a554:	b009      	add	sp, #36	; 0x24
 800a556:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a55a:	b2d2      	uxtb	r2, r2
 800a55c:	9201      	str	r2, [sp, #4]
 800a55e:	fa5f f28c 	uxtb.w	r2, ip
 800a562:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800a566:	e9cd e102 	strd	lr, r1, [sp, #8]
 800a56a:	9200      	str	r2, [sp, #0]
 800a56c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800a570:	4628      	mov	r0, r5
 800a572:	4a0e      	ldr	r2, [pc, #56]	; (800a5ac <RemoteConfig::HandleList()+0xe4>)
 800a574:	f7fe fae0 	bl	8008b38 <snprintf>
 800a578:	e7dd      	b.n	800a536 <RemoteConfig::HandleList()+0x6e>
 800a57a:	2b06      	cmp	r3, #6
 800a57c:	d1ea      	bne.n	800a554 <RemoteConfig::HandleList()+0x8c>
 800a57e:	6833      	ldr	r3, [r6, #0]
 800a580:	799b      	ldrb	r3, [r3, #6]
 800a582:	2b2a      	cmp	r3, #42	; 0x2a
 800a584:	d1e6      	bne.n	800a554 <RemoteConfig::HandleList()+0x8c>
 800a586:	f642 1305 	movw	r3, #10501	; 0x2905
 800a58a:	9300      	str	r3, [sp, #0]
 800a58c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a590:	e7da      	b.n	800a548 <RemoteConfig::HandleList()+0x80>
 800a592:	bf00      	nop
 800a594:	08011396 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, ip}
 800a598:	08011438 	stmdaeq	r1, {r3, r4, r5, sl, ip}
 800a59c:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a5a0:	20009488 	andcs	r9, r0, r8, lsl #9
 800a5a4:	20000b50 	andcs	r0, r0, r0, asr fp
 800a5a8:	080112d0 	stmdaeq	r1, {r4, r6, r7, r9, ip}
 800a5ac:	080112e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, ip}

0800a5b0 <RemoteConfig::HandleDisplayGet()>:
 800a5b0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a5b4:	2b08      	cmp	r3, #8
 800a5b6:	d11d      	bne.n	800a5f4 <RemoteConfig::HandleDisplayGet()+0x44>
 800a5b8:	4b0f      	ldr	r3, [pc, #60]	; (800a5f8 <RemoteConfig::HandleDisplayGet()+0x48>)
 800a5ba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a5bc:	681b      	ldr	r3, [r3, #0]
 800a5be:	4d0f      	ldr	r5, [pc, #60]	; (800a5fc <RemoteConfig::HandleDisplayGet()+0x4c>)
 800a5c0:	7c19      	ldrb	r1, [r3, #16]
 800a5c2:	4a0f      	ldr	r2, [pc, #60]	; (800a600 <RemoteConfig::HandleDisplayGet()+0x50>)
 800a5c4:	4b0f      	ldr	r3, [pc, #60]	; (800a604 <RemoteConfig::HandleDisplayGet()+0x54>)
 800a5c6:	4604      	mov	r4, r0
 800a5c8:	2900      	cmp	r1, #0
 800a5ca:	bf18      	it	ne
 800a5cc:	4613      	movne	r3, r2
 800a5ce:	6828      	ldr	r0, [r5, #0]
 800a5d0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a5d4:	4a0c      	ldr	r2, [pc, #48]	; (800a608 <RemoteConfig::HandleDisplayGet()+0x58>)
 800a5d6:	f7fe faaf 	bl	8008b38 <snprintf>
 800a5da:	f642 1305 	movw	r3, #10501	; 0x2905
 800a5de:	9300      	str	r3, [sp, #0]
 800a5e0:	b282      	uxth	r2, r0
 800a5e2:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a5e6:	6829      	ldr	r1, [r5, #0]
 800a5e8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a5ec:	f002 f92e 	bl	800c84c <udp_send>
 800a5f0:	b003      	add	sp, #12
 800a5f2:	bd30      	pop	{r4, r5, pc}
 800a5f4:	4770      	bx	lr
 800a5f6:	bf00      	nop
 800a5f8:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800a5fc:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a600:	08011302 	stmdaeq	r1, {r1, r8, r9, ip}
 800a604:	080112ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip}
 800a608:	08011306 	stmdaeq	r1, {r1, r2, r8, r9, ip}

0800a60c <RemoteConfig::HandleTftpSet()>:
 800a60c:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800a610:	2a06      	cmp	r2, #6
 800a612:	d109      	bne.n	800a628 <RemoteConfig::HandleTftpSet()+0x1c>
 800a614:	4a05      	ldr	r2, [pc, #20]	; (800a62c <RemoteConfig::HandleTftpSet()+0x20>)
 800a616:	6812      	ldr	r2, [r2, #0]
 800a618:	7992      	ldrb	r2, [r2, #6]
 800a61a:	3a30      	subs	r2, #48	; 0x30
 800a61c:	bf18      	it	ne
 800a61e:	2201      	movne	r2, #1
 800a620:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800a624:	f000 bd82 	b.w	800b12c <RemoteConfig::PlatformHandleTftpSet()>
 800a628:	4770      	bx	lr
 800a62a:	bf00      	nop
 800a62c:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a630 <RemoteConfig::HandleTftpGet()>:
 800a630:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a632:	4604      	mov	r4, r0
 800a634:	f000 fd82 	bl	800b13c <RemoteConfig::PlatformHandleTftpGet()>
 800a638:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800a63c:	2b05      	cmp	r3, #5
 800a63e:	d118      	bne.n	800a672 <RemoteConfig::HandleTftpGet()+0x42>
 800a640:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800a644:	4d0c      	ldr	r5, [pc, #48]	; (800a678 <RemoteConfig::HandleTftpGet()+0x48>)
 800a646:	4a0d      	ldr	r2, [pc, #52]	; (800a67c <RemoteConfig::HandleTftpGet()+0x4c>)
 800a648:	4b0d      	ldr	r3, [pc, #52]	; (800a680 <RemoteConfig::HandleTftpGet()+0x50>)
 800a64a:	6828      	ldr	r0, [r5, #0]
 800a64c:	2900      	cmp	r1, #0
 800a64e:	bf08      	it	eq
 800a650:	4613      	moveq	r3, r2
 800a652:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a656:	4a0b      	ldr	r2, [pc, #44]	; (800a684 <RemoteConfig::HandleTftpGet()+0x54>)
 800a658:	f7fe fa6e 	bl	8008b38 <snprintf>
 800a65c:	f642 1305 	movw	r3, #10501	; 0x2905
 800a660:	b282      	uxth	r2, r0
 800a662:	9300      	str	r3, [sp, #0]
 800a664:	6829      	ldr	r1, [r5, #0]
 800a666:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a66a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a66e:	f002 f8ed 	bl	800c84c <udp_send>
 800a672:	b003      	add	sp, #12
 800a674:	bd30      	pop	{r4, r5, pc}
 800a676:	bf00      	nop
 800a678:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a67c:	08011302 	stmdaeq	r1, {r1, r8, r9, ip}
 800a680:	080112ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip}
 800a684:	08011312 	stmdaeq	r1, {r1, r4, r8, r9, ip}

0800a688 <RemoteConfig::HandleVersion()>:
 800a688:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a68c:	2b08      	cmp	r3, #8
 800a68e:	d116      	bne.n	800a6be <RemoteConfig::HandleVersion()+0x36>
 800a690:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a692:	4d0b      	ldr	r5, [pc, #44]	; (800a6c0 <RemoteConfig::HandleVersion()+0x38>)
 800a694:	4604      	mov	r4, r0
 800a696:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a69a:	4b0a      	ldr	r3, [pc, #40]	; (800a6c4 <RemoteConfig::HandleVersion()+0x3c>)
 800a69c:	4a0a      	ldr	r2, [pc, #40]	; (800a6c8 <RemoteConfig::HandleVersion()+0x40>)
 800a69e:	6828      	ldr	r0, [r5, #0]
 800a6a0:	f7fe fa4a 	bl	8008b38 <snprintf>
 800a6a4:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6a8:	9300      	str	r3, [sp, #0]
 800a6aa:	b282      	uxth	r2, r0
 800a6ac:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a6b0:	6829      	ldr	r1, [r5, #0]
 800a6b2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a6b6:	f002 f8c9 	bl	800c84c <udp_send>
 800a6ba:	b003      	add	sp, #12
 800a6bc:	bd30      	pop	{r4, r5, pc}
 800a6be:	4770      	bx	lr
 800a6c0:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a6c4:	20009b5e 	andcs	r9, r0, lr, asr fp
 800a6c8:	0801131b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip}

0800a6cc <RemoteConfig::HandleUptime()>:
 800a6cc:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800a6d0:	b1fb      	cbz	r3, 800a712 <RemoteConfig::HandleUptime()+0x46>
 800a6d2:	4b10      	ldr	r3, [pc, #64]	; (800a714 <RemoteConfig::HandleUptime()+0x48>)
 800a6d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a6d6:	681a      	ldr	r2, [r3, #0]
 800a6d8:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a6dc:	4604      	mov	r4, r0
 800a6de:	2b07      	cmp	r3, #7
 800a6e0:	d115      	bne.n	800a70e <RemoteConfig::HandleUptime()+0x42>
 800a6e2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a6e6:	4d0c      	ldr	r5, [pc, #48]	; (800a718 <RemoteConfig::HandleUptime()+0x4c>)
 800a6e8:	fbb2 f3f3 	udiv	r3, r2, r3
 800a6ec:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800a6f0:	4a0a      	ldr	r2, [pc, #40]	; (800a71c <RemoteConfig::HandleUptime()+0x50>)
 800a6f2:	6828      	ldr	r0, [r5, #0]
 800a6f4:	f7fe fa20 	bl	8008b38 <snprintf>
 800a6f8:	f642 1305 	movw	r3, #10501	; 0x2905
 800a6fc:	9300      	str	r3, [sp, #0]
 800a6fe:	b282      	uxth	r2, r0
 800a700:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a704:	6829      	ldr	r1, [r5, #0]
 800a706:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a70a:	f002 f89f 	bl	800c84c <udp_send>
 800a70e:	b003      	add	sp, #12
 800a710:	bd30      	pop	{r4, r5, pc}
 800a712:	4770      	bx	lr
 800a714:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800a718:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a71c:	08011326 	stmdaeq	r1, {r1, r2, r5, r8, r9, ip}

0800a720 <RemoteConfig::HandleDisplaySet()>:
 800a720:	b538      	push	{r3, r4, r5, lr}
 800a722:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800a726:	2b09      	cmp	r3, #9
 800a728:	d113      	bne.n	800a752 <RemoteConfig::HandleDisplaySet()+0x32>
 800a72a:	4b0a      	ldr	r3, [pc, #40]	; (800a754 <RemoteConfig::HandleDisplaySet()+0x34>)
 800a72c:	681c      	ldr	r4, [r3, #0]
 800a72e:	4b0a      	ldr	r3, [pc, #40]	; (800a758 <RemoteConfig::HandleDisplaySet()+0x38>)
 800a730:	69a0      	ldr	r0, [r4, #24]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	7a5d      	ldrb	r5, [r3, #9]
 800a736:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800a73a:	4259      	negs	r1, r3
 800a73c:	4159      	adcs	r1, r3
 800a73e:	b140      	cbz	r0, 800a752 <RemoteConfig::HandleDisplaySet()+0x32>
 800a740:	6803      	ldr	r3, [r0, #0]
 800a742:	7421      	strb	r1, [r4, #16]
 800a744:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a746:	4798      	blx	r3
 800a748:	2d30      	cmp	r5, #48	; 0x30
 800a74a:	bf1e      	ittt	ne
 800a74c:	4b03      	ldrne	r3, [pc, #12]	; (800a75c <RemoteConfig::HandleDisplaySet()+0x3c>)
 800a74e:	681b      	ldrne	r3, [r3, #0]
 800a750:	6063      	strne	r3, [r4, #4]
 800a752:	bd38      	pop	{r3, r4, r5, pc}
 800a754:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800a758:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a75c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800a760 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800a760:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a764:	f100 0a0c 	add.w	sl, r0, #12
 800a768:	4604      	mov	r4, r0
 800a76a:	e9c0 1200 	strd	r1, r2, [r0]
 800a76e:	6083      	str	r3, [r0, #8]
 800a770:	4650      	mov	r0, sl
 800a772:	4690      	mov	r8, r2
 800a774:	4689      	mov	r9, r1
 800a776:	461f      	mov	r7, r3
 800a778:	f000 fd20 	bl	800b1bc <HttpDaemon::HttpDaemon()>
 800a77c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a780:	2500      	movs	r5, #0
 800a782:	4e16      	ldr	r6, [pc, #88]	; (800a7dc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800a784:	f8df b058 	ldr.w	fp, [pc, #88]	; 800a7e0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800a788:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a78c:	4b15      	ldr	r3, [pc, #84]	; (800a7e4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800a78e:	4631      	mov	r1, r6
 800a790:	f8db 0000 	ldr.w	r0, [fp]
 800a794:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800a798:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800a79c:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800a7a0:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800a7a4:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800a7a8:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800a7ac:	601c      	str	r4, [r3, #0]
 800a7ae:	f002 fd21 	bl	800d1f4 <Network::MacAddressCopyTo(unsigned char*)>
 800a7b2:	f642 1105 	movw	r1, #10501	; 0x2905
 800a7b6:	f8db 0000 	ldr.w	r0, [fp]
 800a7ba:	f886 9006 	strb.w	r9, [r6, #6]
 800a7be:	f886 8007 	strb.w	r8, [r6, #7]
 800a7c2:	7237      	strb	r7, [r6, #8]
 800a7c4:	7275      	strb	r5, [r6, #9]
 800a7c6:	f002 fd0f 	bl	800d1e8 <Network::Begin(unsigned short)>
 800a7ca:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a7ce:	4650      	mov	r0, sl
 800a7d0:	f000 fd0c 	bl	800b1ec <HttpDaemon::Start()>
 800a7d4:	4620      	mov	r0, r4
 800a7d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7da:	bf00      	nop
 800a7dc:	20000b50 	andcs	r0, r0, r0, asr fp
 800a7e0:	20009488 	andcs	r9, r0, r8, lsl #9
 800a7e4:	20000b74 	andcs	r0, r0, r4, ror fp

0800a7e8 <RemoteConfig::GetStringNode() const>:
 800a7e8:	2012      	movs	r0, #18
 800a7ea:	4b03      	ldr	r3, [pc, #12]	; (800a7f8 <RemoteConfig::GetStringNode() const+0x10>)
 800a7ec:	799a      	ldrb	r2, [r3, #6]
 800a7ee:	4b03      	ldr	r3, [pc, #12]	; (800a7fc <RemoteConfig::GetStringNode() const+0x14>)
 800a7f0:	fb00 3002 	mla	r0, r0, r2, r3
 800a7f4:	4770      	bx	lr
 800a7f6:	bf00      	nop
 800a7f8:	20000b50 	andcs	r0, r0, r0, asr fp
 800a7fc:	08011396 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, ip}

0800a800 <RemoteConfig::GetStringOutput() const>:
 800a800:	200c      	movs	r0, #12
 800a802:	4b03      	ldr	r3, [pc, #12]	; (800a810 <RemoteConfig::GetStringOutput() const+0x10>)
 800a804:	79da      	ldrb	r2, [r3, #7]
 800a806:	4b03      	ldr	r3, [pc, #12]	; (800a814 <RemoteConfig::GetStringOutput() const+0x14>)
 800a808:	fb00 3002 	mla	r0, r0, r2, r3
 800a80c:	4770      	bx	lr
 800a80e:	bf00      	nop
 800a810:	20000b50 	andcs	r0, r0, r0, asr fp
 800a814:	08011438 	stmdaeq	r1, {r3, r4, r5, sl, ip}

0800a818 <RemoteConfig::SetDisable(bool)>:
 800a818:	b538      	push	{r3, r4, r5, lr}
 800a81a:	4604      	mov	r4, r0
 800a81c:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800a820:	b171      	cbz	r1, 800a840 <RemoteConfig::SetDisable(bool)+0x28>
 800a822:	b963      	cbnz	r3, 800a83e <RemoteConfig::SetDisable(bool)+0x26>
 800a824:	4b0d      	ldr	r3, [pc, #52]	; (800a85c <RemoteConfig::SetDisable(bool)+0x44>)
 800a826:	f642 1105 	movw	r1, #10501	; 0x2905
 800a82a:	6818      	ldr	r0, [r3, #0]
 800a82c:	f002 fcdf 	bl	800d1ee <Network::End(unsigned short)>
 800a830:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a834:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800a838:	2301      	movs	r3, #1
 800a83a:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800a83e:	bd38      	pop	{r3, r4, r5, pc}
 800a840:	2b00      	cmp	r3, #0
 800a842:	d0fc      	beq.n	800a83e <RemoteConfig::SetDisable(bool)+0x26>
 800a844:	4b05      	ldr	r3, [pc, #20]	; (800a85c <RemoteConfig::SetDisable(bool)+0x44>)
 800a846:	460d      	mov	r5, r1
 800a848:	6818      	ldr	r0, [r3, #0]
 800a84a:	f642 1105 	movw	r1, #10501	; 0x2905
 800a84e:	f002 fccb 	bl	800d1e8 <Network::Begin(unsigned short)>
 800a852:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800a856:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800a85a:	e7f0      	b.n	800a83e <RemoteConfig::SetDisable(bool)+0x26>
 800a85c:	20009488 	andcs	r9, r0, r8, lsl #9

0800a860 <RemoteConfig::SetDisplayName(char const*)>:
 800a860:	2217      	movs	r2, #23
 800a862:	4809      	ldr	r0, [pc, #36]	; (800a888 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a864:	b508      	push	{r3, lr}
 800a866:	1e4b      	subs	r3, r1, #1
 800a868:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a86c:	b931      	cbnz	r1, 800a87c <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800a86e:	f004 fbaf 	bl	800efd0 <memset>
 800a872:	2200      	movs	r2, #0
 800a874:	4b05      	ldr	r3, [pc, #20]	; (800a88c <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a876:	f883 2020 	strb.w	r2, [r3, #32]
 800a87a:	bd08      	pop	{r3, pc}
 800a87c:	3a01      	subs	r2, #1
 800a87e:	f800 1b01 	strb.w	r1, [r0], #1
 800a882:	d1f1      	bne.n	800a868 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a884:	e7f5      	b.n	800a872 <RemoteConfig::SetDisplayName(char const*)+0x12>
 800a886:	bf00      	nop
 800a888:	20000b59 	andcs	r0, r0, r9, asr fp
 800a88c:	20000b50 	andcs	r0, r0, r0, asr fp

0800a890 <RemoteConfig::HandleGet(void*, unsigned int)>:
 800a890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a892:	4604      	mov	r4, r0
 800a894:	4616      	mov	r6, r2
 800a896:	460d      	mov	r5, r1
 800a898:	4f29      	ldr	r7, [pc, #164]	; (800a940 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 800a89a:	b085      	sub	sp, #20
 800a89c:	b9b9      	cbnz	r1, 800a8ce <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800a89e:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800a8a2:	6839      	ldr	r1, [r7, #0]
 800a8a4:	aa03      	add	r2, sp, #12
 800a8a6:	3105      	adds	r1, #5
 800a8a8:	9303      	str	r3, [sp, #12]
 800a8aa:	f000 fc15 	bl	800b0d8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a8ae:	1e03      	subs	r3, r0, #0
 800a8b0:	da1d      	bge.n	800a8ee <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a8b2:	f642 1305 	movw	r3, #10501	; 0x2905
 800a8b6:	220b      	movs	r2, #11
 800a8b8:	9300      	str	r3, [sp, #0]
 800a8ba:	4922      	ldr	r1, [pc, #136]	; (800a944 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a8bc:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a8c0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a8c4:	f001 ffc2 	bl	800c84c <udp_send>
 800a8c8:	200c      	movs	r0, #12
 800a8ca:	b005      	add	sp, #20
 800a8cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8ce:	9203      	str	r2, [sp, #12]
 800a8d0:	aa03      	add	r2, sp, #12
 800a8d2:	6039      	str	r1, [r7, #0]
 800a8d4:	f000 fc00 	bl	800b0d8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800a8d8:	1e03      	subs	r3, r0, #0
 800a8da:	da08      	bge.n	800a8ee <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800a8dc:	2e0b      	cmp	r6, #11
 800a8de:	4632      	mov	r2, r6
 800a8e0:	4628      	mov	r0, r5
 800a8e2:	bf28      	it	cs
 800a8e4:	220b      	movcs	r2, #11
 800a8e6:	4917      	ldr	r1, [pc, #92]	; (800a944 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800a8e8:	f004 fb50 	bl	800ef8c <memcpy>
 800a8ec:	e7ec      	b.n	800a8c8 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800a8ee:	201c      	movs	r0, #28
 800a8f0:	4343      	muls	r3, r0
 800a8f2:	4915      	ldr	r1, [pc, #84]	; (800a948 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800a8f4:	18ca      	adds	r2, r1, r3
 800a8f6:	6852      	ldr	r2, [r2, #4]
 800a8f8:	58cb      	ldr	r3, [r1, r3]
 800a8fa:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a8fe:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a902:	07d2      	lsls	r2, r2, #31
 800a904:	bf48      	it	mi
 800a906:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a90a:	a903      	add	r1, sp, #12
 800a90c:	bf48      	it	mi
 800a90e:	58d3      	ldrmi	r3, [r2, r3]
 800a910:	4798      	blx	r3
 800a912:	9a03      	ldr	r2, [sp, #12]
 800a914:	b965      	cbnz	r5, 800a930 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800a916:	f642 1305 	movw	r3, #10501	; 0x2905
 800a91a:	6839      	ldr	r1, [r7, #0]
 800a91c:	9300      	str	r3, [sp, #0]
 800a91e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800a922:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800a926:	b292      	uxth	r2, r2
 800a928:	f001 ff90 	bl	800c84c <udp_send>
 800a92c:	9803      	ldr	r0, [sp, #12]
 800a92e:	e7cc      	b.n	800a8ca <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800a930:	42b2      	cmp	r2, r6
 800a932:	bf28      	it	cs
 800a934:	4632      	movcs	r2, r6
 800a936:	4628      	mov	r0, r5
 800a938:	6839      	ldr	r1, [r7, #0]
 800a93a:	f004 fb32 	bl	800efa2 <memmove>
 800a93e:	e7f5      	b.n	800a92c <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800a940:	20000b4c 	andcs	r0, r0, ip, asr #22
 800a944:	08011333 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, ip}
 800a948:	080115c0 	stmdaeq	r1, {r6, r7, r8, sl, ip}

0800a94c <RemoteConfig::HandleGetNoParams()>:
 800a94c:	2200      	movs	r2, #0
 800a94e:	4611      	mov	r1, r2
 800a950:	f7ff bf9e 	b.w	800a890 <RemoteConfig::HandleGet(void*, unsigned int)>

0800a954 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800a954:	b510      	push	{r4, lr}
 800a956:	460c      	mov	r4, r1
 800a958:	4b07      	ldr	r3, [pc, #28]	; (800a978 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800a95a:	b08a      	sub	sp, #40	; 0x28
 800a95c:	6819      	ldr	r1, [r3, #0]
 800a95e:	a801      	add	r0, sp, #4
 800a960:	f000 f9d4 	bl	800ad0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a964:	4905      	ldr	r1, [pc, #20]	; (800a97c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800a966:	4623      	mov	r3, r4
 800a968:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a96c:	6809      	ldr	r1, [r1, #0]
 800a96e:	a801      	add	r0, sp, #4
 800a970:	f000 faf0 	bl	800af54 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800a974:	b00a      	add	sp, #40	; 0x28
 800a976:	bd10      	pop	{r4, pc}
 800a978:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800a97c:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a980 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800a980:	b513      	push	{r0, r1, r4, lr}
 800a982:	460c      	mov	r4, r1
 800a984:	4b07      	ldr	r3, [pc, #28]	; (800a9a4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800a986:	a801      	add	r0, sp, #4
 800a988:	6819      	ldr	r1, [r3, #0]
 800a98a:	f002 fe0b 	bl	800d5a4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a98e:	4906      	ldr	r1, [pc, #24]	; (800a9a8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800a990:	4623      	mov	r3, r4
 800a992:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a996:	6809      	ldr	r1, [r1, #0]
 800a998:	a801      	add	r0, sp, #4
 800a99a:	f002 ffef 	bl	800d97c <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800a99e:	b002      	add	sp, #8
 800a9a0:	bd10      	pop	{r4, pc}
 800a9a2:	bf00      	nop
 800a9a4:	20001b98 	mulcs	r0, r8, fp
 800a9a8:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a9ac <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
 800a9ac:	b510      	push	{r4, lr}
 800a9ae:	460c      	mov	r4, r1
 800a9b0:	4b07      	ldr	r3, [pc, #28]	; (800a9d0 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x24>)
 800a9b2:	b0e4      	sub	sp, #400	; 0x190
 800a9b4:	6819      	ldr	r1, [r3, #0]
 800a9b6:	4668      	mov	r0, sp
 800a9b8:	f7fe fc00 	bl	80091bc <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800a9bc:	4905      	ldr	r1, [pc, #20]	; (800a9d4 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x28>)
 800a9be:	4623      	mov	r3, r4
 800a9c0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a9c4:	4668      	mov	r0, sp
 800a9c6:	6809      	ldr	r1, [r1, #0]
 800a9c8:	f7fe fd92 	bl	80094f0 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>
 800a9cc:	b064      	add	sp, #400	; 0x190
 800a9ce:	bd10      	pop	{r4, pc}
 800a9d0:	20001b9c 	mulcs	r0, ip, fp
 800a9d4:	20000b4c 	andcs	r0, r0, ip, asr #22

0800a9d8 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800a9d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a9da:	460c      	mov	r4, r1
 800a9dc:	4b07      	ldr	r3, [pc, #28]	; (800a9fc <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800a9de:	4668      	mov	r0, sp
 800a9e0:	6819      	ldr	r1, [r3, #0]
 800a9e2:	f7ff f807 	bl	80099f4 <DmxParams::DmxParams(DmxParamsStore*)>
 800a9e6:	4906      	ldr	r1, [pc, #24]	; (800aa00 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800a9e8:	4623      	mov	r3, r4
 800a9ea:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a9ee:	4668      	mov	r0, sp
 800a9f0:	6809      	ldr	r1, [r1, #0]
 800a9f2:	f7ff f91f 	bl	8009c34 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800a9f6:	b004      	add	sp, #16
 800a9f8:	bd10      	pop	{r4, pc}
 800a9fa:	bf00      	nop
 800a9fc:	20001b94 	mulcs	r0, r4, fp
 800aa00:	20000b4c 	andcs	r0, r0, ip, asr #22

0800aa04 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800aa04:	b530      	push	{r4, r5, lr}
 800aa06:	b085      	sub	sp, #20
 800aa08:	4604      	mov	r4, r0
 800aa0a:	9201      	str	r2, [sp, #4]
 800aa0c:	b9c9      	cbnz	r1, 800aa42 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800aa0e:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800aa12:	9303      	str	r3, [sp, #12]
 800aa14:	4b1d      	ldr	r3, [pc, #116]	; (800aa8c <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800aa16:	aa03      	add	r2, sp, #12
 800aa18:	6819      	ldr	r1, [r3, #0]
 800aa1a:	3101      	adds	r1, #1
 800aa1c:	f000 fb5c 	bl	800b0d8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800aa20:	2800      	cmp	r0, #0
 800aa22:	db24      	blt.n	800aa6e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800aa24:	221c      	movs	r2, #28
 800aa26:	4b1a      	ldr	r3, [pc, #104]	; (800aa90 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 800aa28:	fb02 3300 	mla	r3, r2, r0, r3
 800aa2c:	68da      	ldr	r2, [r3, #12]
 800aa2e:	689b      	ldr	r3, [r3, #8]
 800aa30:	1051      	asrs	r1, r2, #1
 800aa32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800aa36:	07d2      	lsls	r2, r2, #31
 800aa38:	bf44      	itt	mi
 800aa3a:	5862      	ldrmi	r2, [r4, r1]
 800aa3c:	58d3      	ldrmi	r3, [r2, r3]
 800aa3e:	4798      	blx	r3
 800aa40:	e015      	b.n	800aa6e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800aa42:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800aa46:	460d      	mov	r5, r1
 800aa48:	4611      	mov	r1, r2
 800aa4a:	d810      	bhi.n	800aa6e <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800aa4c:	2200      	movs	r2, #0
 800aa4e:	4b11      	ldr	r3, [pc, #68]	; (800aa94 <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 800aa50:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800aa54:	781b      	ldrb	r3, [r3, #0]
 800aa56:	07d8      	lsls	r0, r3, #31
 800aa58:	d50b      	bpl.n	800aa72 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800aa5a:	782b      	ldrb	r3, [r5, #0]
 800aa5c:	2b7b      	cmp	r3, #123	; 0x7b
 800aa5e:	d108      	bne.n	800aa72 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800aa60:	3901      	subs	r1, #1
 800aa62:	4628      	mov	r0, r5
 800aa64:	b289      	uxth	r1, r1
 800aa66:	f003 fb75 	bl	800e154 <properties::convert_json_file(char*, unsigned short, bool)>
 800aa6a:	2800      	cmp	r0, #0
 800aa6c:	dc09      	bgt.n	800aa82 <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 800aa6e:	b005      	add	sp, #20
 800aa70:	bd30      	pop	{r4, r5, pc}
 800aa72:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 800aa76:	4b05      	ldr	r3, [pc, #20]	; (800aa8c <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800aa78:	4620      	mov	r0, r4
 800aa7a:	601d      	str	r5, [r3, #0]
 800aa7c:	aa01      	add	r2, sp, #4
 800aa7e:	1c69      	adds	r1, r5, #1
 800aa80:	e7cc      	b.n	800aa1c <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800aa82:	b280      	uxth	r0, r0
 800aa84:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800aa88:	e7f5      	b.n	800aa76 <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 800aa8a:	bf00      	nop
 800aa8c:	20000b4c 	andcs	r0, r0, ip, asr #22
 800aa90:	080115c0 	stmdaeq	r1, {r6, r7, r8, sl, ip}
 800aa94:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800aa98 <RemoteConfig::Run()>:
 800aa98:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800aa9c:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800aaa0:	2b00      	cmp	r3, #0
 800aaa2:	d15e      	bne.n	800ab62 <RemoteConfig::Run()+0xca>
 800aaa4:	4604      	mov	r4, r0
 800aaa6:	4d4b      	ldr	r5, [pc, #300]	; (800abd4 <RemoteConfig::Run()+0x13c>)
 800aaa8:	300c      	adds	r0, #12
 800aaaa:	f000 fe19 	bl	800b6e0 <HttpDaemon::Run()>
 800aaae:	4629      	mov	r1, r5
 800aab0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800aab4:	f10d 030e 	add.w	r3, sp, #14
 800aab8:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800aabc:	f001 fea0 	bl	800c800 <udp_recv2>
 800aac0:	2803      	cmp	r0, #3
 800aac2:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800aac6:	d94c      	bls.n	800ab62 <RemoteConfig::Run()+0xca>
 800aac8:	682b      	ldr	r3, [r5, #0]
 800aaca:	3801      	subs	r0, #1
 800aacc:	5c1a      	ldrb	r2, [r3, r0]
 800aace:	2a0a      	cmp	r2, #10
 800aad0:	bf08      	it	eq
 800aad2:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800aad6:	7819      	ldrb	r1, [r3, #0]
 800aad8:	293f      	cmp	r1, #63	; 0x3f
 800aada:	d137      	bne.n	800ab4c <RemoteConfig::Run()+0xb4>
 800aadc:	493e      	ldr	r1, [pc, #248]	; (800abd8 <RemoteConfig::Run()+0x140>)
 800aade:	2200      	movs	r2, #0
 800aae0:	460f      	mov	r7, r1
 800aae2:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800aae6:	3801      	subs	r0, #1
 800aae8:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800aaec:	7b8e      	ldrb	r6, [r1, #14]
 800aaee:	898d      	ldrh	r5, [r1, #12]
 800aaf0:	b176      	cbz	r6, 800ab10 <RemoteConfig::Run()+0x78>
 800aaf2:	4285      	cmp	r5, r0
 800aaf4:	d30e      	bcc.n	800ab14 <RemoteConfig::Run()+0x7c>
 800aaf6:	3201      	adds	r2, #1
 800aaf8:	2a09      	cmp	r2, #9
 800aafa:	f101 0110 	add.w	r1, r1, #16
 800aafe:	d1f5      	bne.n	800aaec <RemoteConfig::Run()+0x54>
 800ab00:	f642 1305 	movw	r3, #10501	; 0x2905
 800ab04:	9300      	str	r3, [sp, #0]
 800ab06:	2208      	movs	r2, #8
 800ab08:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ab0c:	4933      	ldr	r1, [pc, #204]	; (800abdc <RemoteConfig::Run()+0x144>)
 800ab0e:	e054      	b.n	800abba <RemoteConfig::Run()+0x122>
 800ab10:	4285      	cmp	r5, r0
 800ab12:	d1f0      	bne.n	800aaf6 <RemoteConfig::Run()+0x5e>
 800ab14:	688e      	ldr	r6, [r1, #8]
 800ab16:	f103 0c01 	add.w	ip, r3, #1
 800ab1a:	4435      	add	r5, r6
 800ab1c:	42b5      	cmp	r5, r6
 800ab1e:	d006      	beq.n	800ab2e <RemoteConfig::Run()+0x96>
 800ab20:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800ab24:	f816 eb01 	ldrb.w	lr, [r6], #1
 800ab28:	45f0      	cmp	r8, lr
 800ab2a:	d0f7      	beq.n	800ab1c <RemoteConfig::Run()+0x84>
 800ab2c:	e7e3      	b.n	800aaf6 <RemoteConfig::Run()+0x5e>
 800ab2e:	0113      	lsls	r3, r2, #4
 800ab30:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800ab34:	6852      	ldr	r2, [r2, #4]
 800ab36:	58fb      	ldr	r3, [r7, r3]
 800ab38:	1051      	asrs	r1, r2, #1
 800ab3a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800ab3e:	07d2      	lsls	r2, r2, #31
 800ab40:	d401      	bmi.n	800ab46 <RemoteConfig::Run()+0xae>
 800ab42:	4798      	blx	r3
 800ab44:	e00d      	b.n	800ab62 <RemoteConfig::Run()+0xca>
 800ab46:	5862      	ldr	r2, [r4, r1]
 800ab48:	58d3      	ldr	r3, [r2, r3]
 800ab4a:	e7fa      	b.n	800ab42 <RemoteConfig::Run()+0xaa>
 800ab4c:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800ab50:	b93a      	cbnz	r2, 800ab62 <RemoteConfig::Run()+0xca>
 800ab52:	2923      	cmp	r1, #35	; 0x23
 800ab54:	d108      	bne.n	800ab68 <RemoteConfig::Run()+0xd0>
 800ab56:	4611      	mov	r1, r2
 800ab58:	4620      	mov	r0, r4
 800ab5a:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800ab5e:	f7ff ff51 	bl	800aa04 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ab62:	b004      	add	sp, #16
 800ab64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab68:	2921      	cmp	r1, #33	; 0x21
 800ab6a:	d1fa      	bne.n	800ab62 <RemoteConfig::Run()+0xca>
 800ab6c:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ab70:	3a01      	subs	r2, #1
 800ab72:	2a05      	cmp	r2, #5
 800ab74:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 800ab78:	d918      	bls.n	800abac <RemoteConfig::Run()+0x114>
 800ab7a:	1c59      	adds	r1, r3, #1
 800ab7c:	4608      	mov	r0, r1
 800ab7e:	4d18      	ldr	r5, [pc, #96]	; (800abe0 <RemoteConfig::Run()+0x148>)
 800ab80:	f103 0c06 	add.w	ip, r3, #6
 800ab84:	4560      	cmp	r0, ip
 800ab86:	d01d      	beq.n	800abc4 <RemoteConfig::Run()+0x12c>
 800ab88:	f810 7b01 	ldrb.w	r7, [r0], #1
 800ab8c:	f815 6b01 	ldrb.w	r6, [r5], #1
 800ab90:	42b7      	cmp	r7, r6
 800ab92:	d0f7      	beq.n	800ab84 <RemoteConfig::Run()+0xec>
 800ab94:	2a08      	cmp	r2, #8
 800ab96:	d909      	bls.n	800abac <RemoteConfig::Run()+0x114>
 800ab98:	4a12      	ldr	r2, [pc, #72]	; (800abe4 <RemoteConfig::Run()+0x14c>)
 800ab9a:	3309      	adds	r3, #9
 800ab9c:	428b      	cmp	r3, r1
 800ab9e:	d017      	beq.n	800abd0 <RemoteConfig::Run()+0x138>
 800aba0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800aba4:	f812 0b01 	ldrb.w	r0, [r2], #1
 800aba8:	4285      	cmp	r5, r0
 800abaa:	d0f7      	beq.n	800ab9c <RemoteConfig::Run()+0x104>
 800abac:	f642 1305 	movw	r3, #10501	; 0x2905
 800abb0:	2208      	movs	r2, #8
 800abb2:	9300      	str	r3, [sp, #0]
 800abb4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800abb8:	490b      	ldr	r1, [pc, #44]	; (800abe8 <RemoteConfig::Run()+0x150>)
 800abba:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800abbe:	f001 fe45 	bl	800c84c <udp_send>
 800abc2:	e7ce      	b.n	800ab62 <RemoteConfig::Run()+0xca>
 800abc4:	2300      	movs	r3, #0
 800abc6:	4a09      	ldr	r2, [pc, #36]	; (800abec <RemoteConfig::Run()+0x154>)
 800abc8:	011b      	lsls	r3, r3, #4
 800abca:	4620      	mov	r0, r4
 800abcc:	58d3      	ldr	r3, [r2, r3]
 800abce:	e7b8      	b.n	800ab42 <RemoteConfig::Run()+0xaa>
 800abd0:	2301      	movs	r3, #1
 800abd2:	e7f8      	b.n	800abc6 <RemoteConfig::Run()+0x12e>
 800abd4:	20000b4c 	andcs	r0, r0, ip, asr #22
 800abd8:	080114c8 	stmdaeq	r1, {r3, r6, r7, sl, ip}
 800abdc:	08011357 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, ip}
 800abe0:	0801133f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip}
 800abe4:	08011345 	stmdaeq	r1, {r0, r2, r6, r8, r9, ip}
 800abe8:	0801134e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip}
 800abec:	08011558 	stmdaeq	r1, {r3, r4, r6, r8, sl, ip}

0800abf0 <RemoteConfig::HandleSetRconfig()>:
 800abf0:	b510      	push	{r4, lr}
 800abf2:	4604      	mov	r4, r0
 800abf4:	4b09      	ldr	r3, [pc, #36]	; (800ac1c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800abf6:	b08a      	sub	sp, #40	; 0x28
 800abf8:	6819      	ldr	r1, [r3, #0]
 800abfa:	a801      	add	r0, sp, #4
 800abfc:	f000 f886 	bl	800ad0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800ac00:	4b07      	ldr	r3, [pc, #28]	; (800ac20 <RemoteConfig::HandleSetRconfig()+0x30>)
 800ac02:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac06:	6819      	ldr	r1, [r3, #0]
 800ac08:	a801      	add	r0, sp, #4
 800ac0a:	f000 f895 	bl	800ad38 <RemoteConfigParams::Load(char const*, unsigned int)>
 800ac0e:	4621      	mov	r1, r4
 800ac10:	a801      	add	r0, sp, #4
 800ac12:	f000 f9ac 	bl	800af6e <RemoteConfigParams::Set(RemoteConfig*)>
 800ac16:	b00a      	add	sp, #40	; 0x28
 800ac18:	bd10      	pop	{r4, pc}
 800ac1a:	bf00      	nop
 800ac1c:	20001ba0 	andcs	r1, r0, r0, lsr #23
 800ac20:	20000b4c 	andcs	r0, r0, ip, asr #22

0800ac24 <RemoteConfig::HandleSetNetworkTxt()>:
 800ac24:	b513      	push	{r0, r1, r4, lr}
 800ac26:	4604      	mov	r4, r0
 800ac28:	4b06      	ldr	r3, [pc, #24]	; (800ac44 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800ac2a:	a801      	add	r0, sp, #4
 800ac2c:	6819      	ldr	r1, [r3, #0]
 800ac2e:	f002 fcb9 	bl	800d5a4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ac32:	4b05      	ldr	r3, [pc, #20]	; (800ac48 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800ac34:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac38:	6819      	ldr	r1, [r3, #0]
 800ac3a:	a801      	add	r0, sp, #4
 800ac3c:	f002 fcd2 	bl	800d5e4 <NetworkParams::Load(char const*, unsigned int)>
 800ac40:	b002      	add	sp, #8
 800ac42:	bd10      	pop	{r4, pc}
 800ac44:	20001b98 	mulcs	r0, r8, fp
 800ac48:	20000b4c 	andcs	r0, r0, ip, asr #22

0800ac4c <RemoteConfig::HandleSetOscTxt()>:
 800ac4c:	b510      	push	{r4, lr}
 800ac4e:	4604      	mov	r4, r0
 800ac50:	4b07      	ldr	r3, [pc, #28]	; (800ac70 <RemoteConfig::HandleSetOscTxt()+0x24>)
 800ac52:	b0e4      	sub	sp, #400	; 0x190
 800ac54:	6819      	ldr	r1, [r3, #0]
 800ac56:	4668      	mov	r0, sp
 800ac58:	f7fe fab0 	bl	80091bc <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>
 800ac5c:	4b05      	ldr	r3, [pc, #20]	; (800ac74 <RemoteConfig::HandleSetOscTxt()+0x28>)
 800ac5e:	4668      	mov	r0, sp
 800ac60:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac64:	6819      	ldr	r1, [r3, #0]
 800ac66:	f7fe fac5 	bl	80091f4 <OSCServerParams::Load(char const*, unsigned int)>
 800ac6a:	b064      	add	sp, #400	; 0x190
 800ac6c:	bd10      	pop	{r4, pc}
 800ac6e:	bf00      	nop
 800ac70:	20001b9c 	mulcs	r0, ip, fp
 800ac74:	20000b4c 	andcs	r0, r0, ip, asr #22

0800ac78 <RemoteConfig::HandleSetParamsTxt()>:
 800ac78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ac7a:	4604      	mov	r4, r0
 800ac7c:	4b06      	ldr	r3, [pc, #24]	; (800ac98 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800ac7e:	4668      	mov	r0, sp
 800ac80:	6819      	ldr	r1, [r3, #0]
 800ac82:	f7fe feb7 	bl	80099f4 <DmxParams::DmxParams(DmxParamsStore*)>
 800ac86:	4b05      	ldr	r3, [pc, #20]	; (800ac9c <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800ac88:	4668      	mov	r0, sp
 800ac8a:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800ac8e:	6819      	ldr	r1, [r3, #0]
 800ac90:	f7fe fec8 	bl	8009a24 <DmxParams::Load(char const*, unsigned int)>
 800ac94:	b004      	add	sp, #16
 800ac96:	bd10      	pop	{r4, pc}
 800ac98:	20001b94 	mulcs	r0, r4, fp
 800ac9c:	20000b4c 	andcs	r0, r0, ip, asr #22

0800aca0 <RemoteConfig::HandleFactory()>:
 800aca0:	b538      	push	{r3, r4, r5, lr}
 800aca2:	2400      	movs	r4, #0
 800aca4:	4d04      	ldr	r5, [pc, #16]	; (800acb8 <RemoteConfig::HandleFactory()+0x18>)
 800aca6:	4621      	mov	r1, r4
 800aca8:	6828      	ldr	r0, [r5, #0]
 800acaa:	3401      	adds	r4, #1
 800acac:	f000 ff54 	bl	800bb58 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800acb0:	2c1c      	cmp	r4, #28
 800acb2:	d1f8      	bne.n	800aca6 <RemoteConfig::HandleFactory()+0x6>
 800acb4:	bd38      	pop	{r3, r4, r5, pc}
 800acb6:	bf00      	nop
 800acb8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800acbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800acbe:	460b      	mov	r3, r1
 800acc0:	8885      	ldrh	r5, [r0, #4]
 800acc2:	88c1      	ldrh	r1, [r0, #6]
 800acc4:	42a9      	cmp	r1, r5
 800acc6:	d214      	bcs.n	800acf2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800acc8:	4604      	mov	r4, r0
 800acca:	6800      	ldr	r0, [r0, #0]
 800accc:	1a6d      	subs	r5, r5, r1
 800acce:	4408      	add	r0, r1
 800acd0:	7a21      	ldrb	r1, [r4, #8]
 800acd2:	b91a      	cbnz	r2, 800acdc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800acd4:	b919      	cbnz	r1, 800acde <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800acd6:	4a0a      	ldr	r2, [pc, #40]	; (800ad00 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800acd8:	9100      	str	r1, [sp, #0]
 800acda:	e002      	b.n	800ace2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800acdc:	b159      	cbz	r1, 800acf6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800acde:	9200      	str	r2, [sp, #0]
 800ace0:	4a08      	ldr	r2, [pc, #32]	; (800ad04 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ace2:	4629      	mov	r1, r5
 800ace4:	f7fd ff28 	bl	8008b38 <snprintf>
 800ace8:	4285      	cmp	r5, r0
 800acea:	bfa2      	ittt	ge
 800acec:	88e3      	ldrhge	r3, [r4, #6]
 800acee:	181b      	addge	r3, r3, r0
 800acf0:	80e3      	strhge	r3, [r4, #6]
 800acf2:	b003      	add	sp, #12
 800acf4:	bd30      	pop	{r4, r5, pc}
 800acf6:	2201      	movs	r2, #1
 800acf8:	9200      	str	r2, [sp, #0]
 800acfa:	4a03      	ldr	r2, [pc, #12]	; (800ad08 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800acfc:	e7f1      	b.n	800ace2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800acfe:	bf00      	nop
 800ad00:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 800ad04:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 800ad08:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}

0800ad0c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800ad0c:	b510      	push	{r4, lr}
 800ad0e:	4604      	mov	r4, r0
 800ad10:	2220      	movs	r2, #32
 800ad12:	f840 1b04 	str.w	r1, [r0], #4
 800ad16:	2100      	movs	r1, #0
 800ad18:	f004 f95a 	bl	800efd0 <memset>
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	bd10      	pop	{r4, pc}

0800ad20 <RemoteConfigParams::Load()>:
 800ad20:	b508      	push	{r3, lr}
 800ad22:	2300      	movs	r3, #0
 800ad24:	4601      	mov	r1, r0
 800ad26:	6043      	str	r3, [r0, #4]
 800ad28:	6800      	ldr	r0, [r0, #0]
 800ad2a:	b120      	cbz	r0, 800ad36 <RemoteConfigParams::Load()+0x16>
 800ad2c:	6803      	ldr	r3, [r0, #0]
 800ad2e:	3104      	adds	r1, #4
 800ad30:	68db      	ldr	r3, [r3, #12]
 800ad32:	4798      	blx	r3
 800ad34:	2001      	movs	r0, #1
 800ad36:	bd08      	pop	{r3, pc}

0800ad38 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800ad38:	2300      	movs	r3, #0
 800ad3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad3c:	460d      	mov	r5, r1
 800ad3e:	4616      	mov	r6, r2
 800ad40:	4604      	mov	r4, r0
 800ad42:	6043      	str	r3, [r0, #4]
 800ad44:	4602      	mov	r2, r0
 800ad46:	490a      	ldr	r1, [pc, #40]	; (800ad70 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800ad48:	4668      	mov	r0, sp
 800ad4a:	f003 fb51 	bl	800e3f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ad4e:	4632      	mov	r2, r6
 800ad50:	4629      	mov	r1, r5
 800ad52:	4668      	mov	r0, sp
 800ad54:	f003 fb50 	bl	800e3f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800ad58:	4621      	mov	r1, r4
 800ad5a:	f851 0b04 	ldr.w	r0, [r1], #4
 800ad5e:	6803      	ldr	r3, [r0, #0]
 800ad60:	689b      	ldr	r3, [r3, #8]
 800ad62:	4798      	blx	r3
 800ad64:	4668      	mov	r0, sp
 800ad66:	f003 fb46 	bl	800e3f6 <ReadConfigFile::~ReadConfigFile()>
 800ad6a:	b002      	add	sp, #8
 800ad6c:	bd70      	pop	{r4, r5, r6, pc}
 800ad6e:	bf00      	nop
 800ad70:	0800ae31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, sp, pc}

0800ad74 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800ad74:	6843      	ldr	r3, [r0, #4]
 800ad76:	b111      	cbz	r1, 800ad7e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800ad78:	4313      	orrs	r3, r2
 800ad7a:	6043      	str	r3, [r0, #4]
 800ad7c:	4770      	bx	lr
 800ad7e:	ea23 0302 	bic.w	r3, r3, r2
 800ad82:	e7fa      	b.n	800ad7a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800ad84 <RemoteConfigParams::callbackFunction(char const*)>:
 800ad84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad86:	460d      	mov	r5, r1
 800ad88:	4604      	mov	r4, r0
 800ad8a:	4923      	ldr	r1, [pc, #140]	; (800ae18 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800ad8c:	4628      	mov	r0, r5
 800ad8e:	f10d 0203 	add.w	r2, sp, #3
 800ad92:	f003 fbdc 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ad96:	b938      	cbnz	r0, 800ada8 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 800ad98:	2201      	movs	r2, #1
 800ad9a:	4620      	mov	r0, r4
 800ad9c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800ada0:	f7ff ffe8 	bl	800ad74 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800ada4:	b003      	add	sp, #12
 800ada6:	bd30      	pop	{r4, r5, pc}
 800ada8:	4628      	mov	r0, r5
 800adaa:	491c      	ldr	r1, [pc, #112]	; (800ae1c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800adac:	f10d 0203 	add.w	r2, sp, #3
 800adb0:	f003 fbcd 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800adb4:	b908      	cbnz	r0, 800adba <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800adb6:	2202      	movs	r2, #2
 800adb8:	e7ef      	b.n	800ad9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adba:	4628      	mov	r0, r5
 800adbc:	4918      	ldr	r1, [pc, #96]	; (800ae20 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800adbe:	f10d 0203 	add.w	r2, sp, #3
 800adc2:	f003 fbc4 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800adc6:	b908      	cbnz	r0, 800adcc <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800adc8:	2204      	movs	r2, #4
 800adca:	e7e6      	b.n	800ad9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adcc:	4628      	mov	r0, r5
 800adce:	4915      	ldr	r1, [pc, #84]	; (800ae24 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800add0:	f10d 0203 	add.w	r2, sp, #3
 800add4:	f003 fbbb 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800add8:	b908      	cbnz	r0, 800adde <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800adda:	2208      	movs	r2, #8
 800addc:	e7dd      	b.n	800ad9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adde:	4628      	mov	r0, r5
 800ade0:	4911      	ldr	r1, [pc, #68]	; (800ae28 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800ade2:	f10d 0203 	add.w	r2, sp, #3
 800ade6:	f003 fbb2 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800adea:	b908      	cbnz	r0, 800adf0 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800adec:	2220      	movs	r2, #32
 800adee:	e7d4      	b.n	800ad9a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800adf0:	2317      	movs	r3, #23
 800adf2:	4628      	mov	r0, r5
 800adf4:	9301      	str	r3, [sp, #4]
 800adf6:	490d      	ldr	r1, [pc, #52]	; (800ae2c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800adf8:	ab01      	add	r3, sp, #4
 800adfa:	f104 020c 	add.w	r2, r4, #12
 800adfe:	f003 fb2f 	bl	800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ae02:	2800      	cmp	r0, #0
 800ae04:	d1ce      	bne.n	800ada4 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800ae06:	9b01      	ldr	r3, [sp, #4]
 800ae08:	4423      	add	r3, r4
 800ae0a:	7318      	strb	r0, [r3, #12]
 800ae0c:	6863      	ldr	r3, [r4, #4]
 800ae0e:	f043 0310 	orr.w	r3, r3, #16
 800ae12:	6063      	str	r3, [r4, #4]
 800ae14:	e7c6      	b.n	800ada4 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800ae16:	bf00      	nop
 800ae18:	0801190c 	stmdaeq	r1, {r2, r3, r8, fp, ip}
 800ae1c:	0801192d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip}
 800ae20:	0801193b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip}
 800ae24:	08011949 	stmdaeq	r1, {r0, r3, r6, r8, fp, ip}
 800ae28:	08011957 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, fp, ip}
 800ae2c:	08011920 	stmdaeq	r1, {r5, r8, fp, ip}

0800ae30 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800ae30:	f7ff bfa8 	b.w	800ad84 <RemoteConfigParams::callbackFunction(char const*)>

0800ae34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800ae34:	b570      	push	{r4, r5, r6, lr}
 800ae36:	4604      	mov	r4, r0
 800ae38:	4615      	mov	r5, r2
 800ae3a:	461e      	mov	r6, r3
 800ae3c:	b086      	sub	sp, #24
 800ae3e:	3004      	adds	r0, #4
 800ae40:	2900      	cmp	r1, #0
 800ae42:	d040      	beq.n	800aec6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 800ae44:	2220      	movs	r2, #32
 800ae46:	f004 f8ac 	bl	800efa2 <memmove>
 800ae4a:	4633      	mov	r3, r6
 800ae4c:	462a      	mov	r2, r5
 800ae4e:	4937      	ldr	r1, [pc, #220]	; (800af2c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800ae50:	a803      	add	r0, sp, #12
 800ae52:	f003 fa2d 	bl	800e2b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ae56:	6862      	ldr	r2, [r4, #4]
 800ae58:	4935      	ldr	r1, [pc, #212]	; (800af30 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800ae5a:	f002 0201 	and.w	r2, r2, #1
 800ae5e:	a803      	add	r0, sp, #12
 800ae60:	f7ff ff2c 	bl	800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae64:	6862      	ldr	r2, [r4, #4]
 800ae66:	4933      	ldr	r1, [pc, #204]	; (800af34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800ae68:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800ae6c:	a803      	add	r0, sp, #12
 800ae6e:	f7ff ff25 	bl	800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae72:	6862      	ldr	r2, [r4, #4]
 800ae74:	4930      	ldr	r1, [pc, #192]	; (800af38 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800ae76:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800ae7a:	a803      	add	r0, sp, #12
 800ae7c:	f7ff ff1e 	bl	800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae80:	6862      	ldr	r2, [r4, #4]
 800ae82:	492e      	ldr	r1, [pc, #184]	; (800af3c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800ae84:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800ae88:	a803      	add	r0, sp, #12
 800ae8a:	f7ff ff17 	bl	800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae8e:	6862      	ldr	r2, [r4, #4]
 800ae90:	492b      	ldr	r1, [pc, #172]	; (800af40 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800ae92:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800ae96:	a803      	add	r0, sp, #12
 800ae98:	f7ff ff10 	bl	800acbc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ae9c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800aea0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aea4:	42a9      	cmp	r1, r5
 800aea6:	d223      	bcs.n	800aef0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 800aea8:	9803      	ldr	r0, [sp, #12]
 800aeaa:	1a6d      	subs	r5, r5, r1
 800aeac:	4408      	add	r0, r1
 800aeae:	6861      	ldr	r1, [r4, #4]
 800aeb0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800aeb4:	06c9      	lsls	r1, r1, #27
 800aeb6:	f104 030c 	add.w	r3, r4, #12
 800aeba:	d40b      	bmi.n	800aed4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800aebc:	b95a      	cbnz	r2, 800aed6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800aebe:	9300      	str	r3, [sp, #0]
 800aec0:	4a20      	ldr	r2, [pc, #128]	; (800af44 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800aec2:	4b21      	ldr	r3, [pc, #132]	; (800af48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800aec4:	e00a      	b.n	800aedc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800aec6:	6823      	ldr	r3, [r4, #0]
 800aec8:	4601      	mov	r1, r0
 800aeca:	681a      	ldr	r2, [r3, #0]
 800aecc:	4618      	mov	r0, r3
 800aece:	68d2      	ldr	r2, [r2, #12]
 800aed0:	4790      	blx	r2
 800aed2:	e7ba      	b.n	800ae4a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800aed4:	b32a      	cbz	r2, 800af22 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 800aed6:	9300      	str	r3, [sp, #0]
 800aed8:	4a1c      	ldr	r2, [pc, #112]	; (800af4c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800aeda:	4b1b      	ldr	r3, [pc, #108]	; (800af48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800aedc:	4629      	mov	r1, r5
 800aede:	f7fd fe2b 	bl	8008b38 <snprintf>
 800aee2:	4285      	cmp	r5, r0
 800aee4:	bfa2      	ittt	ge
 800aee6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800aeea:	18c0      	addge	r0, r0, r3
 800aeec:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800aef0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aef4:	b17b      	cbz	r3, 800af16 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800aef6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aefa:	9b03      	ldr	r3, [sp, #12]
 800aefc:	4413      	add	r3, r2
 800aefe:	227d      	movs	r2, #125	; 0x7d
 800af00:	f803 2c01 	strb.w	r2, [r3, #-1]
 800af04:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af08:	9903      	ldr	r1, [sp, #12]
 800af0a:	54ca      	strb	r2, [r1, r3]
 800af0c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af10:	3301      	adds	r3, #1
 800af12:	f8ad 3012 	strh.w	r3, [sp, #18]
 800af16:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800af1c:	601a      	str	r2, [r3, #0]
 800af1e:	b006      	add	sp, #24
 800af20:	bd70      	pop	{r4, r5, r6, pc}
 800af22:	9300      	str	r3, [sp, #0]
 800af24:	4a0a      	ldr	r2, [pc, #40]	; (800af50 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800af26:	4b08      	ldr	r3, [pc, #32]	; (800af48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800af28:	e7d8      	b.n	800aedc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800af2a:	bf00      	nop
 800af2c:	08011914 	stmdaeq	r1, {r2, r4, r8, fp, ip}
 800af30:	0801190c 	stmdaeq	r1, {r2, r3, r8, fp, ip}
 800af34:	0801192d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip}
 800af38:	0801193b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip}
 800af3c:	08011949 	stmdaeq	r1, {r0, r3, r6, r8, fp, ip}
 800af40:	08011957 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, fp, ip}
 800af44:	080111ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip}
 800af48:	08011920 	stmdaeq	r1, {r5, r8, fp, ip}
 800af4c:	080111a1 	stmdaeq	r1, {r0, r5, r7, r8, ip}
 800af50:	080111ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, ip}

0800af54 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800af54:	b513      	push	{r0, r1, r4, lr}
 800af56:	6804      	ldr	r4, [r0, #0]
 800af58:	b914      	cbnz	r4, 800af60 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800af5a:	601c      	str	r4, [r3, #0]
 800af5c:	b002      	add	sp, #8
 800af5e:	bd10      	pop	{r4, pc}
 800af60:	9300      	str	r3, [sp, #0]
 800af62:	4613      	mov	r3, r2
 800af64:	460a      	mov	r2, r1
 800af66:	2100      	movs	r1, #0
 800af68:	f7ff ff64 	bl	800ae34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800af6c:	e7f6      	b.n	800af5c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800af6e <RemoteConfigParams::Set(RemoteConfig*)>:
 800af6e:	b538      	push	{r3, r4, r5, lr}
 800af70:	460c      	mov	r4, r1
 800af72:	4605      	mov	r5, r0
 800af74:	6841      	ldr	r1, [r0, #4]
 800af76:	4620      	mov	r0, r4
 800af78:	f001 0101 	and.w	r1, r1, #1
 800af7c:	f7ff fc4c 	bl	800a818 <RemoteConfig::SetDisable(bool)>
 800af80:	686b      	ldr	r3, [r5, #4]
 800af82:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800af86:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800af8a:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800af8e:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800af92:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800af96:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800af9a:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800af9e:	06db      	lsls	r3, r3, #27
 800afa0:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800afa4:	d506      	bpl.n	800afb4 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800afa6:	4620      	mov	r0, r4
 800afa8:	f105 010c 	add.w	r1, r5, #12
 800afac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800afb0:	f7ff bc56 	b.w	800a860 <RemoteConfig::SetDisplayName(char const*)>
 800afb4:	bd38      	pop	{r3, r4, r5, pc}

0800afb6 <RemoteConfigParams::Dump()>:
 800afb6:	4770      	bx	lr

0800afb8 <Display::TextStatus(char const*)>:
 800afb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800afbc:	4604      	mov	r4, r0
 800afbe:	6980      	ldr	r0, [r0, #24]
 800afc0:	460d      	mov	r5, r1
 800afc2:	2800      	cmp	r0, #0
 800afc4:	d031      	beq.n	800b02a <Display::TextStatus(char const*)+0x72>
 800afc6:	7947      	ldrb	r7, [r0, #5]
 800afc8:	6803      	ldr	r3, [r0, #0]
 800afca:	1e7e      	subs	r6, r7, #1
 800afcc:	b2f6      	uxtb	r6, r6
 800afce:	4632      	mov	r2, r6
 800afd0:	2100      	movs	r1, #0
 800afd2:	6a1b      	ldr	r3, [r3, #32]
 800afd4:	f890 9004 	ldrb.w	r9, [r0, #4]
 800afd8:	f04f 0800 	mov.w	r8, #0
 800afdc:	4798      	blx	r3
 800afde:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800afe2:	45c1      	cmp	r9, r8
 800afe4:	69a0      	ldr	r0, [r4, #24]
 800afe6:	d907      	bls.n	800aff8 <Display::TextStatus(char const*)+0x40>
 800afe8:	b118      	cbz	r0, 800aff2 <Display::TextStatus(char const*)+0x3a>
 800afea:	6803      	ldr	r3, [r0, #0]
 800afec:	2120      	movs	r1, #32
 800afee:	695b      	ldr	r3, [r3, #20]
 800aff0:	4798      	blx	r3
 800aff2:	f108 0801 	add.w	r8, r8, #1
 800aff6:	e7f4      	b.n	800afe2 <Display::TextStatus(char const*)+0x2a>
 800aff8:	b120      	cbz	r0, 800b004 <Display::TextStatus(char const*)+0x4c>
 800affa:	6803      	ldr	r3, [r0, #0]
 800affc:	4632      	mov	r2, r6
 800affe:	2100      	movs	r1, #0
 800b000:	6a1b      	ldr	r3, [r3, #32]
 800b002:	4798      	blx	r3
 800b004:	69a0      	ldr	r0, [r4, #24]
 800b006:	b180      	cbz	r0, 800b02a <Display::TextStatus(char const*)+0x72>
 800b008:	2300      	movs	r3, #0
 800b00a:	7901      	ldrb	r1, [r0, #4]
 800b00c:	5cea      	ldrb	r2, [r5, r3]
 800b00e:	b11a      	cbz	r2, 800b018 <Display::TextStatus(char const*)+0x60>
 800b010:	1c5a      	adds	r2, r3, #1
 800b012:	4299      	cmp	r1, r3
 800b014:	4613      	mov	r3, r2
 800b016:	dcf9      	bgt.n	800b00c <Display::TextStatus(char const*)+0x54>
 800b018:	6802      	ldr	r2, [r0, #0]
 800b01a:	4639      	mov	r1, r7
 800b01c:	69d4      	ldr	r4, [r2, #28]
 800b01e:	b2db      	uxtb	r3, r3
 800b020:	462a      	mov	r2, r5
 800b022:	46a4      	mov	ip, r4
 800b024:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b028:	4760      	bx	ip
 800b02a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800b030 <RemoteConfig::HandleReboot()>:
 800b030:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800b034:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b036:	2b00      	cmp	r3, #0
 800b038:	d03e      	beq.n	800b0b8 <RemoteConfig::HandleReboot()+0x88>
 800b03a:	2301      	movs	r3, #1
 800b03c:	4c1f      	ldr	r4, [pc, #124]	; (800b0bc <RemoteConfig::HandleReboot()+0x8c>)
 800b03e:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800b042:	6825      	ldr	r5, [r4, #0]
 800b044:	69a8      	ldr	r0, [r5, #24]
 800b046:	b138      	cbz	r0, 800b058 <RemoteConfig::HandleReboot()+0x28>
 800b048:	2100      	movs	r1, #0
 800b04a:	6803      	ldr	r3, [r0, #0]
 800b04c:	7429      	strb	r1, [r5, #16]
 800b04e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b050:	4798      	blx	r3
 800b052:	4b1b      	ldr	r3, [pc, #108]	; (800b0c0 <RemoteConfig::HandleReboot()+0x90>)
 800b054:	681b      	ldr	r3, [r3, #0]
 800b056:	606b      	str	r3, [r5, #4]
 800b058:	4d1a      	ldr	r5, [pc, #104]	; (800b0c4 <RemoteConfig::HandleReboot()+0x94>)
 800b05a:	6828      	ldr	r0, [r5, #0]
 800b05c:	f000 fe02 	bl	800bc64 <SpiFlashStore::Flash()>
 800b060:	2800      	cmp	r0, #0
 800b062:	d1fa      	bne.n	800b05a <RemoteConfig::HandleReboot()+0x2a>
 800b064:	4b18      	ldr	r3, [pc, #96]	; (800b0c8 <RemoteConfig::HandleReboot()+0x98>)
 800b066:	6818      	ldr	r0, [r3, #0]
 800b068:	f002 f8b6 	bl	800d1d8 <Network::Shutdown()>
 800b06c:	4817      	ldr	r0, [pc, #92]	; (800b0cc <RemoteConfig::HandleReboot()+0x9c>)
 800b06e:	f7fd fd53 	bl	8008b18 <printf>
 800b072:	6823      	ldr	r3, [r4, #0]
 800b074:	6998      	ldr	r0, [r3, #24]
 800b076:	b110      	cbz	r0, 800b07e <RemoteConfig::HandleReboot()+0x4e>
 800b078:	6803      	ldr	r3, [r0, #0]
 800b07a:	68db      	ldr	r3, [r3, #12]
 800b07c:	4798      	blx	r3
 800b07e:	6824      	ldr	r4, [r4, #0]
 800b080:	4913      	ldr	r1, [pc, #76]	; (800b0d0 <RemoteConfig::HandleReboot()+0xa0>)
 800b082:	4620      	mov	r0, r4
 800b084:	f7ff ff98 	bl	800afb8 <Display::TextStatus(char const*)>
 800b088:	7c63      	ldrb	r3, [r4, #17]
 800b08a:	b18b      	cbz	r3, 800b0b0 <RemoteConfig::HandleReboot()+0x80>
 800b08c:	2312      	movs	r3, #18
 800b08e:	f88d 3004 	strb.w	r3, [sp, #4]
 800b092:	23bf      	movs	r3, #191	; 0xbf
 800b094:	7a20      	ldrb	r0, [r4, #8]
 800b096:	f88d 3005 	strb.w	r3, [sp, #5]
 800b09a:	f88d 3006 	strb.w	r3, [sp, #6]
 800b09e:	f004 ffe1 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 800b0a2:	68e0      	ldr	r0, [r4, #12]
 800b0a4:	f004 ffd6 	bl	8010054 <gd32_i2c_set_baudrate(unsigned int)>
 800b0a8:	2103      	movs	r1, #3
 800b0aa:	a801      	add	r0, sp, #4
 800b0ac:	f004 ffe0 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800b0b0:	4b08      	ldr	r3, [pc, #32]	; (800b0d4 <RemoteConfig::HandleReboot()+0xa4>)
 800b0b2:	6818      	ldr	r0, [r3, #0]
 800b0b4:	f003 fe74 	bl	800eda0 <Hardware::Reboot()>
 800b0b8:	b003      	add	sp, #12
 800b0ba:	bd30      	pop	{r4, r5, pc}
 800b0bc:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800b0c0:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b0c4:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800b0c8:	20009488 	andcs	r9, r0, r8, lsl #9
 800b0cc:	08011578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip}
 800b0d0:	08011587 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, ip}
 800b0d4:	20009ba8 	andcs	r9, r0, r8, lsr #23

0800b0d8 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800b0d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b0dc:	2000      	movs	r0, #0
 800b0de:	4d12      	ldr	r5, [pc, #72]	; (800b128 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800b0e0:	f10d 0c04 	add.w	ip, sp, #4
 800b0e4:	6814      	ldr	r4, [r2, #0]
 800b0e6:	7d2b      	ldrb	r3, [r5, #20]
 800b0e8:	692e      	ldr	r6, [r5, #16]
 800b0ea:	42a3      	cmp	r3, r4
 800b0ec:	bf34      	ite	cc
 800b0ee:	4664      	movcc	r4, ip
 800b0f0:	4614      	movcs	r4, r2
 800b0f2:	9301      	str	r3, [sp, #4]
 800b0f4:	6827      	ldr	r7, [r4, #0]
 800b0f6:	460c      	mov	r4, r1
 800b0f8:	3e01      	subs	r6, #1
 800b0fa:	440f      	add	r7, r1
 800b0fc:	42bc      	cmp	r4, r7
 800b0fe:	d011      	beq.n	800b124 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800b100:	f894 8000 	ldrb.w	r8, [r4]
 800b104:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800b108:	45f0      	cmp	r8, lr
 800b10a:	d009      	beq.n	800b120 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 800b10c:	3001      	adds	r0, #1
 800b10e:	2804      	cmp	r0, #4
 800b110:	f105 051c 	add.w	r5, r5, #28
 800b114:	d1e6      	bne.n	800b0e4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800b116:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b11a:	b002      	add	sp, #8
 800b11c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b120:	3401      	adds	r4, #1
 800b122:	e7eb      	b.n	800b0fc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800b124:	6013      	str	r3, [r2, #0]
 800b126:	e7f8      	b.n	800b11a <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 800b128:	080115c0 	stmdaeq	r1, {r6, r7, r8, sl, ip}

0800b12c <RemoteConfig::PlatformHandleTftpSet()>:
 800b12c:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800b130:	b109      	cbz	r1, 800b136 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800b132:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800b136:	2002      	movs	r0, #2
 800b138:	f004 b948 	b.w	800f3cc <bkp_data_write>

0800b13c <RemoteConfig::PlatformHandleTftpGet()>:
 800b13c:	b510      	push	{r4, lr}
 800b13e:	4604      	mov	r4, r0
 800b140:	2002      	movs	r0, #2
 800b142:	f004 f959 	bl	800f3f8 <bkp_data_read>
 800b146:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800b14a:	1ac3      	subs	r3, r0, r3
 800b14c:	4258      	negs	r0, r3
 800b14e:	4158      	adcs	r0, r3
 800b150:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800b154:	bd10      	pop	{r4, pc}

0800b156 <strcmp>:
 800b156:	1e43      	subs	r3, r0, #1
 800b158:	3901      	subs	r1, #1
 800b15a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b15e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800b162:	4290      	cmp	r0, r2
 800b164:	d102      	bne.n	800b16c <strcmp+0x16>
 800b166:	2800      	cmp	r0, #0
 800b168:	d1f7      	bne.n	800b15a <strcmp+0x4>
 800b16a:	4770      	bx	lr
 800b16c:	1a80      	subs	r0, r0, r2
 800b16e:	4770      	bx	lr

0800b170 <strcasecmp>:
 800b170:	b530      	push	{r4, r5, lr}
 800b172:	1e42      	subs	r2, r0, #1
 800b174:	3901      	subs	r1, #1
 800b176:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b17a:	4604      	mov	r4, r0
 800b17c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b180:	2b19      	cmp	r3, #25
 800b182:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b186:	bf98      	it	ls
 800b188:	f100 0420 	addls.w	r4, r0, #32
 800b18c:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800b190:	2d19      	cmp	r5, #25
 800b192:	bf98      	it	ls
 800b194:	3320      	addls	r3, #32
 800b196:	42a3      	cmp	r3, r4
 800b198:	d102      	bne.n	800b1a0 <strcasecmp+0x30>
 800b19a:	2800      	cmp	r0, #0
 800b19c:	d1eb      	bne.n	800b176 <strcasecmp+0x6>
 800b19e:	bd30      	pop	{r4, r5, pc}
 800b1a0:	1ae0      	subs	r0, r4, r3
 800b1a2:	e7fc      	b.n	800b19e <strcasecmp+0x2e>

0800b1a4 <PropertiesConfig::EnableJSON(bool)>:
 800b1a4:	4a04      	ldr	r2, [pc, #16]	; (800b1b8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800b1a6:	7813      	ldrb	r3, [r2, #0]
 800b1a8:	b118      	cbz	r0, 800b1b2 <PropertiesConfig::EnableJSON(bool)+0xe>
 800b1aa:	f043 0301 	orr.w	r3, r3, #1
 800b1ae:	7013      	strb	r3, [r2, #0]
 800b1b0:	4770      	bx	lr
 800b1b2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800b1b6:	e7fa      	b.n	800b1ae <PropertiesConfig::EnableJSON(bool)+0xa>
 800b1b8:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800b1bc <HttpDaemon::HttpDaemon()>:
 800b1bc:	4a0a      	ldr	r2, [pc, #40]	; (800b1e8 <HttpDaemon::HttpDaemon()+0x2c>)
 800b1be:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800b1c2:	6002      	str	r2, [r0, #0]
 800b1c4:	2200      	movs	r2, #0
 800b1c6:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800b1ca:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800b1ce:	2102      	movs	r1, #2
 800b1d0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b1d4:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800b1d8:	60c2      	str	r2, [r0, #12]
 800b1da:	8402      	strh	r2, [r0, #32]
 800b1dc:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800b1e0:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800b1e4:	4770      	bx	lr
 800b1e6:	bf00      	nop
 800b1e8:	0801188c 	stmdaeq	r1, {r2, r3, r7, fp, ip}

0800b1ec <HttpDaemon::Start()>:
 800b1ec:	4b04      	ldr	r3, [pc, #16]	; (800b200 <HttpDaemon::Start()+0x14>)
 800b1ee:	b510      	push	{r4, lr}
 800b1f0:	2150      	movs	r1, #80	; 0x50
 800b1f2:	4604      	mov	r4, r0
 800b1f4:	6818      	ldr	r0, [r3, #0]
 800b1f6:	f002 f9c9 	bl	800d58c <Network::TcpBegin(unsigned short)>
 800b1fa:	6120      	str	r0, [r4, #16]
 800b1fc:	bd10      	pop	{r4, pc}
 800b1fe:	bf00      	nop
 800b200:	20009488 	andcs	r9, r0, r8, lsl #9

0800b204 <HttpDaemon::ParseMethod(char*)>:
 800b204:	b538      	push	{r3, r4, r5, lr}
 800b206:	4604      	mov	r4, r0
 800b208:	4608      	mov	r0, r1
 800b20a:	491b      	ldr	r1, [pc, #108]	; (800b278 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b20c:	f003 ff0e 	bl	800f02c <strtok>
 800b210:	4605      	mov	r5, r0
 800b212:	b370      	cbz	r0, 800b272 <HttpDaemon::ParseMethod(char*)+0x6e>
 800b214:	4919      	ldr	r1, [pc, #100]	; (800b27c <HttpDaemon::ParseMethod(char*)+0x78>)
 800b216:	f7ff ff9e 	bl	800b156 <strcmp>
 800b21a:	b940      	cbnz	r0, 800b22e <HttpDaemon::ParseMethod(char*)+0x2a>
 800b21c:	61e0      	str	r0, [r4, #28]
 800b21e:	2000      	movs	r0, #0
 800b220:	4915      	ldr	r1, [pc, #84]	; (800b278 <HttpDaemon::ParseMethod(char*)+0x74>)
 800b222:	f003 ff03 	bl	800f02c <strtok>
 800b226:	b950      	cbnz	r0, 800b23e <HttpDaemon::ParseMethod(char*)+0x3a>
 800b228:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b22c:	bd38      	pop	{r3, r4, r5, pc}
 800b22e:	4628      	mov	r0, r5
 800b230:	4913      	ldr	r1, [pc, #76]	; (800b280 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800b232:	f7ff ff90 	bl	800b156 <strcmp>
 800b236:	b9e0      	cbnz	r0, 800b272 <HttpDaemon::ParseMethod(char*)+0x6e>
 800b238:	2301      	movs	r3, #1
 800b23a:	61e3      	str	r3, [r4, #28]
 800b23c:	e7ef      	b.n	800b21e <HttpDaemon::ParseMethod(char*)+0x1a>
 800b23e:	6060      	str	r0, [r4, #4]
 800b240:	4910      	ldr	r1, [pc, #64]	; (800b284 <HttpDaemon::ParseMethod(char*)+0x80>)
 800b242:	2000      	movs	r0, #0
 800b244:	f003 fef2 	bl	800f02c <strtok>
 800b248:	2800      	cmp	r0, #0
 800b24a:	d0ed      	beq.n	800b228 <HttpDaemon::ParseMethod(char*)+0x24>
 800b24c:	490e      	ldr	r1, [pc, #56]	; (800b288 <HttpDaemon::ParseMethod(char*)+0x84>)
 800b24e:	f7ff ff82 	bl	800b156 <strcmp>
 800b252:	2800      	cmp	r0, #0
 800b254:	d1e8      	bne.n	800b228 <HttpDaemon::ParseMethod(char*)+0x24>
 800b256:	490d      	ldr	r1, [pc, #52]	; (800b28c <HttpDaemon::ParseMethod(char*)+0x88>)
 800b258:	f003 fee8 	bl	800f02c <strtok>
 800b25c:	2800      	cmp	r0, #0
 800b25e:	d0e3      	beq.n	800b228 <HttpDaemon::ParseMethod(char*)+0x24>
 800b260:	490b      	ldr	r1, [pc, #44]	; (800b290 <HttpDaemon::ParseMethod(char*)+0x8c>)
 800b262:	f7ff ff78 	bl	800b156 <strcmp>
 800b266:	2800      	cmp	r0, #0
 800b268:	f240 10f9 	movw	r0, #505	; 0x1f9
 800b26c:	bf08      	it	eq
 800b26e:	20c8      	moveq	r0, #200	; 0xc8
 800b270:	e7dc      	b.n	800b22c <HttpDaemon::ParseMethod(char*)+0x28>
 800b272:	f240 10f5 	movw	r0, #501	; 0x1f5
 800b276:	e7d9      	b.n	800b22c <HttpDaemon::ParseMethod(char*)+0x28>
 800b278:	08011630 	stmdaeq	r1, {r4, r5, r9, sl, ip}
 800b27c:	08011632 	stmdaeq	r1, {r1, r4, r5, r9, sl, ip}
 800b280:	08011636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, ip}
 800b284:	080116a0 	stmdaeq	r1, {r5, r7, r9, sl, ip}
 800b288:	0801163b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, ip}
 800b28c:	08011640 	stmdaeq	r1, {r6, r9, sl, ip}
 800b290:	08011643 	stmdaeq	r1, {r0, r1, r6, r9, sl, ip}

0800b294 <HttpDaemon::ParseHeaderField(char*)>:
 800b294:	b538      	push	{r3, r4, r5, lr}
 800b296:	4605      	mov	r5, r0
 800b298:	4608      	mov	r0, r1
 800b29a:	491d      	ldr	r1, [pc, #116]	; (800b310 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800b29c:	f003 fec6 	bl	800f02c <strtok>
 800b2a0:	4604      	mov	r4, r0
 800b2a2:	b910      	cbnz	r0, 800b2aa <HttpDaemon::ParseHeaderField(char*)+0x16>
 800b2a4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b2a8:	bd38      	pop	{r3, r4, r5, pc}
 800b2aa:	491a      	ldr	r1, [pc, #104]	; (800b314 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800b2ac:	f7ff ff60 	bl	800b170 <strcasecmp>
 800b2b0:	b970      	cbnz	r0, 800b2d0 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800b2b2:	4919      	ldr	r1, [pc, #100]	; (800b318 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800b2b4:	f003 feba 	bl	800f02c <strtok>
 800b2b8:	2800      	cmp	r0, #0
 800b2ba:	d0f3      	beq.n	800b2a4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b2bc:	4917      	ldr	r1, [pc, #92]	; (800b31c <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800b2be:	f7ff ff4a 	bl	800b156 <strcmp>
 800b2c2:	b108      	cbz	r0, 800b2c8 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800b2c4:	20c8      	movs	r0, #200	; 0xc8
 800b2c6:	e7ef      	b.n	800b2a8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b2c8:	2301      	movs	r3, #1
 800b2ca:	f885 3020 	strb.w	r3, [r5, #32]
 800b2ce:	e7f9      	b.n	800b2c4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b2d0:	4620      	mov	r0, r4
 800b2d2:	4913      	ldr	r1, [pc, #76]	; (800b320 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800b2d4:	f7ff ff4c 	bl	800b170 <strcasecmp>
 800b2d8:	4604      	mov	r4, r0
 800b2da:	2800      	cmp	r0, #0
 800b2dc:	d1f2      	bne.n	800b2c4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b2de:	4911      	ldr	r1, [pc, #68]	; (800b324 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800b2e0:	f003 fea4 	bl	800f02c <strtok>
 800b2e4:	2800      	cmp	r0, #0
 800b2e6:	d0dd      	beq.n	800b2a4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b2e8:	1e42      	subs	r2, r0, #1
 800b2ea:	4623      	mov	r3, r4
 800b2ec:	200a      	movs	r0, #10
 800b2ee:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b2f2:	b151      	cbz	r1, 800b30a <HttpDaemon::ParseHeaderField(char*)+0x76>
 800b2f4:	3930      	subs	r1, #48	; 0x30
 800b2f6:	2909      	cmp	r1, #9
 800b2f8:	d8d4      	bhi.n	800b2a4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800b2fa:	fb00 1303 	mla	r3, r0, r3, r1
 800b2fe:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800b302:	d9f4      	bls.n	800b2ee <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800b304:	f240 109d 	movw	r0, #413	; 0x19d
 800b308:	e7ce      	b.n	800b2a8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800b30a:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800b30e:	e7d9      	b.n	800b2c4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800b310:	08011647 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, ip}
 800b314:	08011649 	stmdaeq	r1, {r0, r3, r6, r9, sl, ip}
 800b318:	08011656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, ip}
 800b31c:	08011659 	stmdaeq	r1, {r0, r3, r4, r6, r9, sl, ip}
 800b320:	0801166a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sl, ip}
 800b324:	08011630 	stmdaeq	r1, {r4, r5, r9, sl, ip}

0800b328 <HttpDaemon::ParseRequest()>:
 800b328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b32a:	2400      	movs	r4, #0
 800b32c:	4605      	mov	r5, r0
 800b32e:	4622      	mov	r2, r4
 800b330:	4626      	mov	r6, r4
 800b332:	68c1      	ldr	r1, [r0, #12]
 800b334:	f880 4020 	strb.w	r4, [r0, #32]
 800b338:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800b33c:	8aab      	ldrh	r3, [r5, #20]
 800b33e:	42a3      	cmp	r3, r4
 800b340:	d923      	bls.n	800b38a <HttpDaemon::ParseRequest()+0x62>
 800b342:	68eb      	ldr	r3, [r5, #12]
 800b344:	5d18      	ldrb	r0, [r3, r4]
 800b346:	280a      	cmp	r0, #10
 800b348:	d10e      	bne.n	800b368 <HttpDaemon::ParseRequest()+0x40>
 800b34a:	4423      	add	r3, r4
 800b34c:	f803 6c01 	strb.w	r6, [r3, #-1]
 800b350:	1c57      	adds	r7, r2, #1
 800b352:	b962      	cbnz	r2, 800b36e <HttpDaemon::ParseRequest()+0x46>
 800b354:	4628      	mov	r0, r5
 800b356:	f7ff ff55 	bl	800b204 <HttpDaemon::ParseMethod(char*)>
 800b35a:	28c8      	cmp	r0, #200	; 0xc8
 800b35c:	d116      	bne.n	800b38c <HttpDaemon::ParseRequest()+0x64>
 800b35e:	463a      	mov	r2, r7
 800b360:	68e9      	ldr	r1, [r5, #12]
 800b362:	3401      	adds	r4, #1
 800b364:	b2a4      	uxth	r4, r4
 800b366:	4421      	add	r1, r4
 800b368:	3401      	adds	r4, #1
 800b36a:	b2a4      	uxth	r4, r4
 800b36c:	e7e6      	b.n	800b33c <HttpDaemon::ParseRequest()+0x14>
 800b36e:	7808      	ldrb	r0, [r1, #0]
 800b370:	b968      	cbnz	r0, 800b38e <HttpDaemon::ParseRequest()+0x66>
 800b372:	696b      	ldr	r3, [r5, #20]
 800b374:	3b01      	subs	r3, #1
 800b376:	1b1b      	subs	r3, r3, r4
 800b378:	b29b      	uxth	r3, r3
 800b37a:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800b37e:	b123      	cbz	r3, 800b38a <HttpDaemon::ParseRequest()+0x62>
 800b380:	68ea      	ldr	r2, [r5, #12]
 800b382:	3401      	adds	r4, #1
 800b384:	4414      	add	r4, r2
 800b386:	60ac      	str	r4, [r5, #8]
 800b388:	54e0      	strb	r0, [r4, r3]
 800b38a:	20c8      	movs	r0, #200	; 0xc8
 800b38c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b38e:	4628      	mov	r0, r5
 800b390:	f7ff ff80 	bl	800b294 <HttpDaemon::ParseHeaderField(char*)>
 800b394:	e7e1      	b.n	800b35a <HttpDaemon::ParseRequest()+0x32>
	...

0800b398 <HttpDaemon::HandleGetTxt()>:
 800b398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b39c:	6847      	ldr	r7, [r0, #4]
 800b39e:	4604      	mov	r4, r0
 800b3a0:	1dbd      	adds	r5, r7, #6
 800b3a2:	462b      	mov	r3, r5
 800b3a4:	4618      	mov	r0, r3
 800b3a6:	7802      	ldrb	r2, [r0, #0]
 800b3a8:	3301      	adds	r3, #1
 800b3aa:	2a00      	cmp	r2, #0
 800b3ac:	d1fa      	bne.n	800b3a4 <HttpDaemon::HandleGetTxt()+0xc>
 800b3ae:	1b40      	subs	r0, r0, r5
 800b3b0:	2804      	cmp	r0, #4
 800b3b2:	d925      	bls.n	800b400 <HttpDaemon::HandleGetTxt()+0x68>
 800b3b4:	3804      	subs	r0, #4
 800b3b6:	4915      	ldr	r1, [pc, #84]	; (800b40c <HttpDaemon::HandleGetTxt()+0x74>)
 800b3b8:	4428      	add	r0, r5
 800b3ba:	f7ff fecc 	bl	800b156 <strcmp>
 800b3be:	b9f8      	cbnz	r0, 800b400 <HttpDaemon::HandleGetTxt()+0x68>
 800b3c0:	4b13      	ldr	r3, [pc, #76]	; (800b410 <HttpDaemon::HandleGetTxt()+0x78>)
 800b3c2:	2001      	movs	r0, #1
 800b3c4:	f893 8000 	ldrb.w	r8, [r3]
 800b3c8:	f7ff feec 	bl	800b1a4 <PropertiesConfig::EnableJSON(bool)>
 800b3cc:	4b11      	ldr	r3, [pc, #68]	; (800b414 <HttpDaemon::HandleGetTxt()+0x7c>)
 800b3ce:	f240 529b 	movw	r2, #1435	; 0x59b
 800b3d2:	4629      	mov	r1, r5
 800b3d4:	6818      	ldr	r0, [r3, #0]
 800b3d6:	f7ff fa5b 	bl	800a890 <RemoteConfig::HandleGet(void*, unsigned int)>
 800b3da:	4606      	mov	r6, r0
 800b3dc:	f008 0801 	and.w	r8, r8, #1
 800b3e0:	4640      	mov	r0, r8
 800b3e2:	f7ff fedf 	bl	800b1a4 <PropertiesConfig::EnableJSON(bool)>
 800b3e6:	b15e      	cbz	r6, 800b400 <HttpDaemon::HandleGetTxt()+0x68>
 800b3e8:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800b3ec:	3606      	adds	r6, #6
 800b3ee:	3422      	adds	r4, #34	; 0x22
 800b3f0:	443e      	add	r6, r7
 800b3f2:	42b5      	cmp	r5, r6
 800b3f4:	d008      	beq.n	800b408 <HttpDaemon::HandleGetTxt()+0x70>
 800b3f6:	f815 3b01 	ldrb.w	r3, [r5], #1
 800b3fa:	f804 3b01 	strb.w	r3, [r4], #1
 800b3fe:	e7f8      	b.n	800b3f2 <HttpDaemon::HandleGetTxt()+0x5a>
 800b400:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b408:	20c8      	movs	r0, #200	; 0xc8
 800b40a:	e7fb      	b.n	800b404 <HttpDaemon::HandleGetTxt()+0x6c>
 800b40c:	080115b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip}
 800b410:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6
 800b414:	20000b74 	andcs	r0, r0, r4, ror fp

0800b418 <HttpDaemon::HandleGet()>:
 800b418:	b570      	push	{r4, r5, r6, lr}
 800b41a:	6845      	ldr	r5, [r0, #4]
 800b41c:	4604      	mov	r4, r0
 800b41e:	4943      	ldr	r1, [pc, #268]	; (800b52c <HttpDaemon::HandleGet()+0x114>)
 800b420:	4628      	mov	r0, r5
 800b422:	f7ff fe98 	bl	800b156 <strcmp>
 800b426:	b120      	cbz	r0, 800b432 <HttpDaemon::HandleGet()+0x1a>
 800b428:	4628      	mov	r0, r5
 800b42a:	4941      	ldr	r1, [pc, #260]	; (800b530 <HttpDaemon::HandleGet()+0x118>)
 800b42c:	f7ff fe93 	bl	800b156 <strcmp>
 800b430:	b960      	cbnz	r0, 800b44c <HttpDaemon::HandleGet()+0x34>
 800b432:	4621      	mov	r1, r4
 800b434:	4b3f      	ldr	r3, [pc, #252]	; (800b534 <HttpDaemon::HandleGet()+0x11c>)
 800b436:	4840      	ldr	r0, [pc, #256]	; (800b538 <HttpDaemon::HandleGet()+0x120>)
 800b438:	f841 3b22 	str.w	r3, [r1], #34
 800b43c:	f000 fa7a 	bl	800b934 <get_file_content(char const*, char*)>
 800b440:	2800      	cmp	r0, #0
 800b442:	dd1e      	ble.n	800b482 <HttpDaemon::HandleGet()+0x6a>
 800b444:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b448:	20c8      	movs	r0, #200	; 0xc8
 800b44a:	bd70      	pop	{r4, r5, r6, pc}
 800b44c:	4628      	mov	r0, r5
 800b44e:	493b      	ldr	r1, [pc, #236]	; (800b53c <HttpDaemon::HandleGet()+0x124>)
 800b450:	f7ff fe81 	bl	800b156 <strcmp>
 800b454:	b928      	cbnz	r0, 800b462 <HttpDaemon::HandleGet()+0x4a>
 800b456:	4621      	mov	r1, r4
 800b458:	4b39      	ldr	r3, [pc, #228]	; (800b540 <HttpDaemon::HandleGet()+0x128>)
 800b45a:	483a      	ldr	r0, [pc, #232]	; (800b544 <HttpDaemon::HandleGet()+0x12c>)
 800b45c:	f841 3b22 	str.w	r3, [r1], #34
 800b460:	e7ec      	b.n	800b43c <HttpDaemon::HandleGet()+0x24>
 800b462:	4628      	mov	r0, r5
 800b464:	4938      	ldr	r1, [pc, #224]	; (800b548 <HttpDaemon::HandleGet()+0x130>)
 800b466:	f7ff fe76 	bl	800b156 <strcmp>
 800b46a:	b168      	cbz	r0, 800b488 <HttpDaemon::HandleGet()+0x70>
 800b46c:	4a37      	ldr	r2, [pc, #220]	; (800b54c <HttpDaemon::HandleGet()+0x134>)
 800b46e:	1e6b      	subs	r3, r5, #1
 800b470:	1d6e      	adds	r6, r5, #5
 800b472:	42b3      	cmp	r3, r6
 800b474:	d00e      	beq.n	800b494 <HttpDaemon::HandleGet()+0x7c>
 800b476:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b47a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b47e:	4288      	cmp	r0, r1
 800b480:	d0f7      	beq.n	800b472 <HttpDaemon::HandleGet()+0x5a>
 800b482:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b486:	e7e0      	b.n	800b44a <HttpDaemon::HandleGet()+0x32>
 800b488:	4621      	mov	r1, r4
 800b48a:	4b31      	ldr	r3, [pc, #196]	; (800b550 <HttpDaemon::HandleGet()+0x138>)
 800b48c:	4831      	ldr	r0, [pc, #196]	; (800b554 <HttpDaemon::HandleGet()+0x13c>)
 800b48e:	f841 3b22 	str.w	r3, [r1], #34
 800b492:	e7d3      	b.n	800b43c <HttpDaemon::HandleGet()+0x24>
 800b494:	4b30      	ldr	r3, [pc, #192]	; (800b558 <HttpDaemon::HandleGet()+0x140>)
 800b496:	3506      	adds	r5, #6
 800b498:	4628      	mov	r0, r5
 800b49a:	4930      	ldr	r1, [pc, #192]	; (800b55c <HttpDaemon::HandleGet()+0x144>)
 800b49c:	6023      	str	r3, [r4, #0]
 800b49e:	f7ff fe5a 	bl	800b156 <strcmp>
 800b4a2:	b930      	cbnz	r0, 800b4b2 <HttpDaemon::HandleGet()+0x9a>
 800b4a4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4a8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4ac:	f000 f9ca 	bl	800b844 <remoteconfig::json_get_list(char*, unsigned short)>
 800b4b0:	e7c6      	b.n	800b440 <HttpDaemon::HandleGet()+0x28>
 800b4b2:	4628      	mov	r0, r5
 800b4b4:	492a      	ldr	r1, [pc, #168]	; (800b560 <HttpDaemon::HandleGet()+0x148>)
 800b4b6:	f7ff fe4e 	bl	800b156 <strcmp>
 800b4ba:	b930      	cbnz	r0, 800b4ca <HttpDaemon::HandleGet()+0xb2>
 800b4bc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4c0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4c4:	f000 f9f2 	bl	800b8ac <remoteconfig::json_get_version(char*, unsigned short)>
 800b4c8:	e7ba      	b.n	800b440 <HttpDaemon::HandleGet()+0x28>
 800b4ca:	4628      	mov	r0, r5
 800b4cc:	4925      	ldr	r1, [pc, #148]	; (800b564 <HttpDaemon::HandleGet()+0x14c>)
 800b4ce:	f7ff fe42 	bl	800b156 <strcmp>
 800b4d2:	b958      	cbnz	r0, 800b4ec <HttpDaemon::HandleGet()+0xd4>
 800b4d4:	4b24      	ldr	r3, [pc, #144]	; (800b568 <HttpDaemon::HandleGet()+0x150>)
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800b4dc:	b31b      	cbz	r3, 800b526 <HttpDaemon::HandleGet()+0x10e>
 800b4de:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4e2:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4e6:	f000 f9fd 	bl	800b8e4 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800b4ea:	e7a9      	b.n	800b440 <HttpDaemon::HandleGet()+0x28>
 800b4ec:	4628      	mov	r0, r5
 800b4ee:	491f      	ldr	r1, [pc, #124]	; (800b56c <HttpDaemon::HandleGet()+0x154>)
 800b4f0:	f7ff fe31 	bl	800b156 <strcmp>
 800b4f4:	b930      	cbnz	r0, 800b504 <HttpDaemon::HandleGet()+0xec>
 800b4f6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b4fa:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b4fe:	f000 fa01 	bl	800b904 <remoteconfig::json_get_display(char*, unsigned short)>
 800b502:	e79d      	b.n	800b440 <HttpDaemon::HandleGet()+0x28>
 800b504:	4628      	mov	r0, r5
 800b506:	491a      	ldr	r1, [pc, #104]	; (800b570 <HttpDaemon::HandleGet()+0x158>)
 800b508:	f7ff fe25 	bl	800b156 <strcmp>
 800b50c:	b930      	cbnz	r0, 800b51c <HttpDaemon::HandleGet()+0x104>
 800b50e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800b512:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800b516:	f000 fa05 	bl	800b924 <remoteconfig::json_get_directory(char*, unsigned short)>
 800b51a:	e791      	b.n	800b440 <HttpDaemon::HandleGet()+0x28>
 800b51c:	4620      	mov	r0, r4
 800b51e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b522:	f7ff bf39 	b.w	800b398 <HttpDaemon::HandleGetTxt()>
 800b526:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b52a:	e78e      	b.n	800b44a <HttpDaemon::HandleGet()+0x32>
 800b52c:	080116a0 	stmdaeq	r1, {r5, r7, r9, sl, ip}
 800b530:	08011679 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, ip}
 800b534:	0801188c 	stmdaeq	r1, {r2, r3, r7, fp, ip}
 800b538:	0801167a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, sl, ip}
 800b53c:	08011685 	stmdaeq	r1, {r0, r2, r7, r9, sl, ip}
 800b540:	080118ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip}
 800b544:	08011686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip}
 800b548:	08011691 	stmdaeq	r1, {r0, r4, r7, r9, sl, ip}
 800b54c:	0801169b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, ip}
 800b550:	080118cc 	stmdaeq	r1, {r2, r3, r6, r7, fp, ip}
 800b554:	08011692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip}
 800b558:	080118ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, ip}
 800b55c:	080116a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, ip}
 800b560:	080116a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, sl, ip}
 800b564:	080116af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, ip}
 800b568:	20000b74 	andcs	r0, r0, r4, ror fp
 800b56c:	080116b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, ip}
 800b570:	080116be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, ip}

0800b574 <HttpDaemon::HandlePost(bool)>:
 800b574:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b576:	4604      	mov	r4, r0
 800b578:	2900      	cmp	r1, #0
 800b57a:	f040 8091 	bne.w	800b6a0 <HttpDaemon::HandlePost(bool)+0x12c>
 800b57e:	f890 3020 	ldrb.w	r3, [r0, #32]
 800b582:	2b00      	cmp	r3, #0
 800b584:	d05d      	beq.n	800b642 <HttpDaemon::HandlePost(bool)+0xce>
 800b586:	6845      	ldr	r5, [r0, #4]
 800b588:	4948      	ldr	r1, [pc, #288]	; (800b6ac <HttpDaemon::HandlePost(bool)+0x138>)
 800b58a:	4628      	mov	r0, r5
 800b58c:	f7ff fde3 	bl	800b156 <strcmp>
 800b590:	2800      	cmp	r0, #0
 800b592:	bf0c      	ite	eq
 800b594:	2301      	moveq	r3, #1
 800b596:	2300      	movne	r3, #0
 800b598:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800b59c:	d055      	beq.n	800b64a <HttpDaemon::HandlePost(bool)+0xd6>
 800b59e:	4628      	mov	r0, r5
 800b5a0:	4943      	ldr	r1, [pc, #268]	; (800b6b0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800b5a2:	f7ff fdd8 	bl	800b156 <strcmp>
 800b5a6:	2800      	cmp	r0, #0
 800b5a8:	d04f      	beq.n	800b64a <HttpDaemon::HandlePost(bool)+0xd6>
 800b5aa:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800b5ae:	e04a      	b.n	800b646 <HttpDaemon::HandlePost(bool)+0xd2>
 800b5b0:	4940      	ldr	r1, [pc, #256]	; (800b6b4 <HttpDaemon::HandlePost(bool)+0x140>)
 800b5b2:	68a0      	ldr	r0, [r4, #8]
 800b5b4:	f10d 0207 	add.w	r2, sp, #7
 800b5b8:	f002 ffc9 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b5bc:	b9e8      	cbnz	r0, 800b5fa <HttpDaemon::HandlePost(bool)+0x86>
 800b5be:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b5c2:	4b3d      	ldr	r3, [pc, #244]	; (800b6b8 <HttpDaemon::HandlePost(bool)+0x144>)
 800b5c4:	fab6 f186 	clz	r1, r6
 800b5c8:	681d      	ldr	r5, [r3, #0]
 800b5ca:	0949      	lsrs	r1, r1, #5
 800b5cc:	69a8      	ldr	r0, [r5, #24]
 800b5ce:	b138      	cbz	r0, 800b5e0 <HttpDaemon::HandlePost(bool)+0x6c>
 800b5d0:	6803      	ldr	r3, [r0, #0]
 800b5d2:	7429      	strb	r1, [r5, #16]
 800b5d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5d6:	4798      	blx	r3
 800b5d8:	b116      	cbz	r6, 800b5e0 <HttpDaemon::HandlePost(bool)+0x6c>
 800b5da:	4b38      	ldr	r3, [pc, #224]	; (800b6bc <HttpDaemon::HandlePost(bool)+0x148>)
 800b5dc:	681b      	ldr	r3, [r3, #0]
 800b5de:	606b      	str	r3, [r5, #4]
 800b5e0:	4620      	mov	r0, r4
 800b5e2:	4b37      	ldr	r3, [pc, #220]	; (800b6c0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800b5e4:	f240 519f 	movw	r1, #1439	; 0x59f
 800b5e8:	4a36      	ldr	r2, [pc, #216]	; (800b6c4 <HttpDaemon::HandlePost(bool)+0x150>)
 800b5ea:	f840 3b22 	str.w	r3, [r0], #34
 800b5ee:	f7fd faa3 	bl	8008b38 <snprintf>
 800b5f2:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b5f6:	20c8      	movs	r0, #200	; 0xc8
 800b5f8:	e025      	b.n	800b646 <HttpDaemon::HandlePost(bool)+0xd2>
 800b5fa:	4933      	ldr	r1, [pc, #204]	; (800b6c8 <HttpDaemon::HandlePost(bool)+0x154>)
 800b5fc:	68a0      	ldr	r0, [r4, #8]
 800b5fe:	f10d 0207 	add.w	r2, sp, #7
 800b602:	f002 ffa4 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b606:	b9e0      	cbnz	r0, 800b642 <HttpDaemon::HandlePost(bool)+0xce>
 800b608:	4b30      	ldr	r3, [pc, #192]	; (800b6cc <HttpDaemon::HandlePost(bool)+0x158>)
 800b60a:	6818      	ldr	r0, [r3, #0]
 800b60c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b610:	b11b      	cbz	r3, 800b61a <HttpDaemon::HandlePost(bool)+0xa6>
 800b612:	2104      	movs	r1, #4
 800b614:	f003 fb3c 	bl	800ec90 <LedBlink::SetMode(ledblink::Mode)>
 800b618:	e7e2      	b.n	800b5e0 <HttpDaemon::HandlePost(bool)+0x6c>
 800b61a:	2102      	movs	r1, #2
 800b61c:	e7fa      	b.n	800b614 <HttpDaemon::HandlePost(bool)+0xa0>
 800b61e:	4b2c      	ldr	r3, [pc, #176]	; (800b6d0 <HttpDaemon::HandlePost(bool)+0x15c>)
 800b620:	2001      	movs	r0, #1
 800b622:	781d      	ldrb	r5, [r3, #0]
 800b624:	f7ff fdbe 	bl	800b1a4 <PropertiesConfig::EnableJSON(bool)>
 800b628:	4b2a      	ldr	r3, [pc, #168]	; (800b6d4 <HttpDaemon::HandlePost(bool)+0x160>)
 800b62a:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800b62e:	6818      	ldr	r0, [r3, #0]
 800b630:	68a1      	ldr	r1, [r4, #8]
 800b632:	f005 0501 	and.w	r5, r5, #1
 800b636:	f7ff f9e5 	bl	800aa04 <RemoteConfig::HandleSet(void*, unsigned int)>
 800b63a:	4628      	mov	r0, r5
 800b63c:	f7ff fdb2 	bl	800b1a4 <PropertiesConfig::EnableJSON(bool)>
 800b640:	e7ce      	b.n	800b5e0 <HttpDaemon::HandlePost(bool)+0x6c>
 800b642:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800b646:	b002      	add	sp, #8
 800b648:	bd70      	pop	{r4, r5, r6, pc}
 800b64a:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800b64e:	6962      	ldr	r2, [r4, #20]
 800b650:	429a      	cmp	r2, r3
 800b652:	dbd0      	blt.n	800b5f6 <HttpDaemon::HandlePost(bool)+0x82>
 800b654:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b658:	2b00      	cmp	r3, #0
 800b65a:	d0cc      	beq.n	800b5f6 <HttpDaemon::HandlePost(bool)+0x82>
 800b65c:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800b660:	2b00      	cmp	r3, #0
 800b662:	d0dc      	beq.n	800b61e <HttpDaemon::HandlePost(bool)+0xaa>
 800b664:	2201      	movs	r2, #1
 800b666:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800b66a:	68a0      	ldr	r0, [r4, #8]
 800b66c:	f002 fd72 	bl	800e154 <properties::convert_json_file(char*, unsigned short, bool)>
 800b670:	2800      	cmp	r0, #0
 800b672:	dde6      	ble.n	800b642 <HttpDaemon::HandlePost(bool)+0xce>
 800b674:	4918      	ldr	r1, [pc, #96]	; (800b6d8 <HttpDaemon::HandlePost(bool)+0x164>)
 800b676:	68a0      	ldr	r0, [r4, #8]
 800b678:	f10d 0207 	add.w	r2, sp, #7
 800b67c:	f002 ff67 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b680:	2800      	cmp	r0, #0
 800b682:	d195      	bne.n	800b5b0 <HttpDaemon::HandlePost(bool)+0x3c>
 800b684:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d0a9      	beq.n	800b5e0 <HttpDaemon::HandlePost(bool)+0x6c>
 800b68c:	4b11      	ldr	r3, [pc, #68]	; (800b6d4 <HttpDaemon::HandlePost(bool)+0x160>)
 800b68e:	681b      	ldr	r3, [r3, #0]
 800b690:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800b694:	2b00      	cmp	r3, #0
 800b696:	d0d4      	beq.n	800b642 <HttpDaemon::HandlePost(bool)+0xce>
 800b698:	4b10      	ldr	r3, [pc, #64]	; (800b6dc <HttpDaemon::HandlePost(bool)+0x168>)
 800b69a:	6818      	ldr	r0, [r3, #0]
 800b69c:	f003 fb80 	bl	800eda0 <Hardware::Reboot()>
 800b6a0:	68c3      	ldr	r3, [r0, #12]
 800b6a2:	6083      	str	r3, [r0, #8]
 800b6a4:	6943      	ldr	r3, [r0, #20]
 800b6a6:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800b6aa:	e7d7      	b.n	800b65c <HttpDaemon::HandlePost(bool)+0xe8>
 800b6ac:	080116c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, ip}
 800b6b0:	08011664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip}
 800b6b4:	080116b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, ip}
 800b6b8:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800b6bc:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b6c0:	0801188c 	stmdaeq	r1, {r2, r3, r7, fp, ip}
 800b6c4:	080116e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, ip}
 800b6c8:	080116dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, ip}
 800b6cc:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800b6d0:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6
 800b6d4:	20000b74 	andcs	r0, r0, r4, ror fp
 800b6d8:	080116d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip}
 800b6dc:	20009ba8 	andcs	r9, r0, r8, lsr #23

0800b6e0 <HttpDaemon::Run()>:
 800b6e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b6e2:	4e4a      	ldr	r6, [pc, #296]	; (800b80c <HttpDaemon::Run()+0x12c>)
 800b6e4:	4604      	mov	r4, r0
 800b6e6:	6901      	ldr	r1, [r0, #16]
 800b6e8:	f100 020c 	add.w	r2, r0, #12
 800b6ec:	b085      	sub	sp, #20
 800b6ee:	6830      	ldr	r0, [r6, #0]
 800b6f0:	f001 ff4f 	bl	800d592 <Network::TcpRead(int, unsigned char const**)>
 800b6f4:	6160      	str	r0, [r4, #20]
 800b6f6:	2800      	cmp	r0, #0
 800b6f8:	d061      	beq.n	800b7be <HttpDaemon::Run()+0xde>
 800b6fa:	69a3      	ldr	r3, [r4, #24]
 800b6fc:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800b700:	d15f      	bne.n	800b7c2 <HttpDaemon::Run()+0xe2>
 800b702:	4620      	mov	r0, r4
 800b704:	f7ff fe10 	bl	800b328 <HttpDaemon::ParseRequest()>
 800b708:	28c8      	cmp	r0, #200	; 0xc8
 800b70a:	61a0      	str	r0, [r4, #24]
 800b70c:	d106      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b70e:	69e3      	ldr	r3, [r4, #28]
 800b710:	2b00      	cmp	r3, #0
 800b712:	d147      	bne.n	800b7a4 <HttpDaemon::Run()+0xc4>
 800b714:	4620      	mov	r0, r4
 800b716:	f7ff fe7f 	bl	800b418 <HttpDaemon::HandleGet()>
 800b71a:	61a0      	str	r0, [r4, #24]
 800b71c:	69a3      	ldr	r3, [r4, #24]
 800b71e:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800b722:	2bc8      	cmp	r3, #200	; 0xc8
 800b724:	d06f      	beq.n	800b806 <HttpDaemon::Run()+0x126>
 800b726:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800b72a:	d062      	beq.n	800b7f2 <HttpDaemon::Run()+0x112>
 800b72c:	dc52      	bgt.n	800b7d4 <HttpDaemon::Run()+0xf4>
 800b72e:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800b732:	d060      	beq.n	800b7f6 <HttpDaemon::Run()+0x116>
 800b734:	f240 129d 	movw	r2, #413	; 0x19d
 800b738:	4293      	cmp	r3, r2
 800b73a:	d05e      	beq.n	800b7fa <HttpDaemon::Run()+0x11a>
 800b73c:	4d34      	ldr	r5, [pc, #208]	; (800b810 <HttpDaemon::Run()+0x130>)
 800b73e:	4a35      	ldr	r2, [pc, #212]	; (800b814 <HttpDaemon::Run()+0x134>)
 800b740:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800b744:	bf18      	it	ne
 800b746:	4615      	movne	r5, r2
 800b748:	4a33      	ldr	r2, [pc, #204]	; (800b818 <HttpDaemon::Run()+0x138>)
 800b74a:	f240 519f 	movw	r1, #1439	; 0x59f
 800b74e:	6022      	str	r2, [r4, #0]
 800b750:	4638      	mov	r0, r7
 800b752:	e9cd 5500 	strd	r5, r5, [sp]
 800b756:	4a31      	ldr	r2, [pc, #196]	; (800b81c <HttpDaemon::Run()+0x13c>)
 800b758:	f7fd f9ee 	bl	8008b38 <snprintf>
 800b75c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800b760:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b764:	f240 519f 	movw	r1, #1439	; 0x59f
 800b768:	9303      	str	r3, [sp, #12]
 800b76a:	6823      	ldr	r3, [r4, #0]
 800b76c:	4a2c      	ldr	r2, [pc, #176]	; (800b820 <HttpDaemon::Run()+0x140>)
 800b76e:	9302      	str	r3, [sp, #8]
 800b770:	4b2c      	ldr	r3, [pc, #176]	; (800b824 <HttpDaemon::Run()+0x144>)
 800b772:	68e0      	ldr	r0, [r4, #12]
 800b774:	e9cd 5300 	strd	r5, r3, [sp]
 800b778:	69a3      	ldr	r3, [r4, #24]
 800b77a:	f7fd f9dd 	bl	8008b38 <snprintf>
 800b77e:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800b782:	b283      	uxth	r3, r0
 800b784:	6830      	ldr	r0, [r6, #0]
 800b786:	f001 ff08 	bl	800d59a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b78a:	463a      	mov	r2, r7
 800b78c:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800b790:	6921      	ldr	r1, [r4, #16]
 800b792:	6830      	ldr	r0, [r6, #0]
 800b794:	f001 ff01 	bl	800d59a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800b798:	f44f 7202 	mov.w	r2, #520	; 0x208
 800b79c:	2302      	movs	r3, #2
 800b79e:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800b7a2:	e00c      	b.n	800b7be <HttpDaemon::Run()+0xde>
 800b7a4:	2b01      	cmp	r3, #1
 800b7a6:	d1b9      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b7a8:	2100      	movs	r1, #0
 800b7aa:	4620      	mov	r0, r4
 800b7ac:	f7ff fee2 	bl	800b574 <HttpDaemon::HandlePost(bool)>
 800b7b0:	28c8      	cmp	r0, #200	; 0xc8
 800b7b2:	61a0      	str	r0, [r4, #24]
 800b7b4:	d1b2      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b7b6:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800b7ba:	2b00      	cmp	r3, #0
 800b7bc:	d1ae      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b7be:	b005      	add	sp, #20
 800b7c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7c2:	2bc8      	cmp	r3, #200	; 0xc8
 800b7c4:	d1aa      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b7c6:	69e1      	ldr	r1, [r4, #28]
 800b7c8:	2901      	cmp	r1, #1
 800b7ca:	d1a7      	bne.n	800b71c <HttpDaemon::Run()+0x3c>
 800b7cc:	4620      	mov	r0, r4
 800b7ce:	f7ff fed1 	bl	800b574 <HttpDaemon::HandlePost(bool)>
 800b7d2:	e7a2      	b.n	800b71a <HttpDaemon::Run()+0x3a>
 800b7d4:	f240 12f5 	movw	r2, #501	; 0x1f5
 800b7d8:	4293      	cmp	r3, r2
 800b7da:	d010      	beq.n	800b7fe <HttpDaemon::Run()+0x11e>
 800b7dc:	f240 12f9 	movw	r2, #505	; 0x1f9
 800b7e0:	4293      	cmp	r3, r2
 800b7e2:	d00e      	beq.n	800b802 <HttpDaemon::Run()+0x122>
 800b7e4:	4d10      	ldr	r5, [pc, #64]	; (800b828 <HttpDaemon::Run()+0x148>)
 800b7e6:	4a0b      	ldr	r2, [pc, #44]	; (800b814 <HttpDaemon::Run()+0x134>)
 800b7e8:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b7ec:	bf18      	it	ne
 800b7ee:	4615      	movne	r5, r2
 800b7f0:	e7aa      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b7f2:	4d0e      	ldr	r5, [pc, #56]	; (800b82c <HttpDaemon::Run()+0x14c>)
 800b7f4:	e7a8      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b7f6:	4d0e      	ldr	r5, [pc, #56]	; (800b830 <HttpDaemon::Run()+0x150>)
 800b7f8:	e7a6      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b7fa:	4d0e      	ldr	r5, [pc, #56]	; (800b834 <HttpDaemon::Run()+0x154>)
 800b7fc:	e7a4      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b7fe:	4d0e      	ldr	r5, [pc, #56]	; (800b838 <HttpDaemon::Run()+0x158>)
 800b800:	e7a2      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b802:	4d0e      	ldr	r5, [pc, #56]	; (800b83c <HttpDaemon::Run()+0x15c>)
 800b804:	e7a0      	b.n	800b748 <HttpDaemon::Run()+0x68>
 800b806:	4d0e      	ldr	r5, [pc, #56]	; (800b840 <HttpDaemon::Run()+0x160>)
 800b808:	e7aa      	b.n	800b760 <HttpDaemon::Run()+0x80>
 800b80a:	bf00      	nop
 800b80c:	20009488 	andcs	r9, r0, r8, lsl #9
 800b810:	080117a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, ip}
 800b814:	080117b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, ip}
 800b818:	0801188c 	stmdaeq	r1, {r2, r3, r7, fp, ip}
 800b81c:	080117d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, ip}
 800b820:	08011834 	stmdaeq	r1, {r2, r4, r5, fp, ip}
 800b824:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 800b828:	080117c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, ip}
 800b82c:	08011764 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, ip}
 800b830:	0801175a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip}
 800b834:	08011741 	stmdaeq	r1, {r0, r6, r8, r9, sl, ip}
 800b838:	0801178f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, sl, ip}
 800b83c:	08011779 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, ip}
 800b840:	080117d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sl, ip}

0800b844 <remoteconfig::json_get_list(char*, unsigned short)>:
 800b844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b848:	4b14      	ldr	r3, [pc, #80]	; (800b89c <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800b84a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800b8a0 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800b84e:	681b      	ldr	r3, [r3, #0]
 800b850:	b088      	sub	sp, #32
 800b852:	4605      	mov	r5, r0
 800b854:	f8d8 0000 	ldr.w	r0, [r8]
 800b858:	691c      	ldr	r4, [r3, #16]
 800b85a:	460e      	mov	r6, r1
 800b85c:	f7fe ffc4 	bl	800a7e8 <RemoteConfig::GetStringNode() const>
 800b860:	4607      	mov	r7, r0
 800b862:	f8d8 0000 	ldr.w	r0, [r8]
 800b866:	f7fe ffcb 	bl	800a800 <RemoteConfig::GetStringOutput() const>
 800b86a:	4b0e      	ldr	r3, [pc, #56]	; (800b8a4 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800b86c:	4631      	mov	r1, r6
 800b86e:	7a1a      	ldrb	r2, [r3, #8]
 800b870:	3309      	adds	r3, #9
 800b872:	9303      	str	r3, [sp, #12]
 800b874:	0e23      	lsrs	r3, r4, #24
 800b876:	9302      	str	r3, [sp, #8]
 800b878:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b87c:	9301      	str	r3, [sp, #4]
 800b87e:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b882:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b886:	9300      	str	r3, [sp, #0]
 800b888:	4628      	mov	r0, r5
 800b88a:	4a07      	ldr	r2, [pc, #28]	; (800b8a8 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800b88c:	9704      	str	r7, [sp, #16]
 800b88e:	b2e3      	uxtb	r3, r4
 800b890:	f7fd f952 	bl	8008b38 <snprintf>
 800b894:	b280      	uxth	r0, r0
 800b896:	b008      	add	sp, #32
 800b898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b89c:	20009488 	andcs	r9, r0, r8, lsl #9
 800b8a0:	20000b74 	andcs	r0, r0, r4, ror fp
 800b8a4:	20000b50 	andcs	r0, r0, r0, asr fp
 800b8a8:	08011966 	stmdaeq	r1, {r1, r2, r5, r6, r8, fp, ip}

0800b8ac <remoteconfig::json_get_version(char*, unsigned short)>:
 800b8ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b8ae:	2208      	movs	r2, #8
 800b8b0:	4b09      	ldr	r3, [pc, #36]	; (800b8d8 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800b8b2:	9204      	str	r2, [sp, #16]
 800b8b4:	f1a3 020b 	sub.w	r2, r3, #11
 800b8b8:	9203      	str	r2, [sp, #12]
 800b8ba:	220b      	movs	r2, #11
 800b8bc:	9202      	str	r2, [sp, #8]
 800b8be:	4a07      	ldr	r2, [pc, #28]	; (800b8dc <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800b8c0:	9305      	str	r3, [sp, #20]
 800b8c2:	3b0e      	subs	r3, #14
 800b8c4:	9201      	str	r2, [sp, #4]
 800b8c6:	9300      	str	r3, [sp, #0]
 800b8c8:	4a05      	ldr	r2, [pc, #20]	; (800b8e0 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800b8ca:	2303      	movs	r3, #3
 800b8cc:	f7fd f934 	bl	8008b38 <snprintf>
 800b8d0:	b280      	uxth	r0, r0
 800b8d2:	b007      	add	sp, #28
 800b8d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800b8d8:	20009b56 	andcs	r9, r0, r6, asr fp
 800b8dc:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 800b8e0:	080119c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, fp, ip}

0800b8e4 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800b8e4:	b508      	push	{r3, lr}
 800b8e6:	4b05      	ldr	r3, [pc, #20]	; (800b8fc <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800b8e8:	681a      	ldr	r2, [r3, #0]
 800b8ea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b8ee:	fbb2 f3f3 	udiv	r3, r2, r3
 800b8f2:	4a03      	ldr	r2, [pc, #12]	; (800b900 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800b8f4:	f7fd f920 	bl	8008b38 <snprintf>
 800b8f8:	b280      	uxth	r0, r0
 800b8fa:	bd08      	pop	{r3, pc}
 800b8fc:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800b900:	08011a0b 	stmdaeq	r1, {r0, r1, r3, r9, fp, ip}

0800b904 <remoteconfig::json_get_display(char*, unsigned short)>:
 800b904:	b508      	push	{r3, lr}
 800b906:	4b05      	ldr	r3, [pc, #20]	; (800b91c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800b908:	4a05      	ldr	r2, [pc, #20]	; (800b920 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800b90a:	681b      	ldr	r3, [r3, #0]
 800b90c:	7c1b      	ldrb	r3, [r3, #16]
 800b90e:	f083 0301 	eor.w	r3, r3, #1
 800b912:	f7fd f911 	bl	8008b38 <snprintf>
 800b916:	b280      	uxth	r0, r0
 800b918:	bd08      	pop	{r3, pc}
 800b91a:	bf00      	nop
 800b91c:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8
 800b920:	08011a1a 	stmdaeq	r1, {r1, r3, r4, r9, fp, ip}

0800b924 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800b924:	b508      	push	{r3, lr}
 800b926:	4a02      	ldr	r2, [pc, #8]	; (800b930 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800b928:	f7fd f906 	bl	8008b38 <snprintf>
 800b92c:	b280      	uxth	r0, r0
 800b92e:	bd08      	pop	{r3, pc}
 800b930:	08011a29 	stmdaeq	r1, {r0, r3, r5, r9, fp, ip}

0800b934 <get_file_content(char const*, char*)>:
 800b934:	2300      	movs	r3, #0
 800b936:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b938:	4a18      	ldr	r2, [pc, #96]	; (800b99c <get_file_content(char const*, char*)+0x68>)
 800b93a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800b93e:	1e46      	subs	r6, r0, #1
 800b940:	1e6f      	subs	r7, r5, #1
 800b942:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800b946:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800b94a:	4564      	cmp	r4, ip
 800b94c:	d119      	bne.n	800b982 <get_file_content(char const*, char*)+0x4e>
 800b94e:	2c00      	cmp	r4, #0
 800b950:	d1f7      	bne.n	800b942 <get_file_content(char const*, char*)+0xe>
 800b952:	460c      	mov	r4, r1
 800b954:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b958:	685b      	ldr	r3, [r3, #4]
 800b95a:	3b01      	subs	r3, #1
 800b95c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800b960:	f804 2b01 	strb.w	r2, [r4], #1
 800b964:	2a00      	cmp	r2, #0
 800b966:	d1f9      	bne.n	800b95c <get_file_content(char const*, char*)+0x28>
 800b968:	1a64      	subs	r4, r4, r1
 800b96a:	3c01      	subs	r4, #1
 800b96c:	232e      	movs	r3, #46	; 0x2e
 800b96e:	e9cd 5400 	strd	r5, r4, [sp]
 800b972:	4a0b      	ldr	r2, [pc, #44]	; (800b9a0 <get_file_content(char const*, char*)+0x6c>)
 800b974:	490b      	ldr	r1, [pc, #44]	; (800b9a4 <get_file_content(char const*, char*)+0x70>)
 800b976:	480c      	ldr	r0, [pc, #48]	; (800b9a8 <get_file_content(char const*, char*)+0x74>)
 800b978:	f7fd f8ce 	bl	8008b18 <printf>
 800b97c:	4620      	mov	r0, r4
 800b97e:	b003      	add	sp, #12
 800b980:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b982:	3301      	adds	r3, #1
 800b984:	2b03      	cmp	r3, #3
 800b986:	d1d8      	bne.n	800b93a <get_file_content(char const*, char*)+0x6>
 800b988:	2333      	movs	r3, #51	; 0x33
 800b98a:	4a06      	ldr	r2, [pc, #24]	; (800b9a4 <get_file_content(char const*, char*)+0x70>)
 800b98c:	4904      	ldr	r1, [pc, #16]	; (800b9a0 <get_file_content(char const*, char*)+0x6c>)
 800b98e:	4807      	ldr	r0, [pc, #28]	; (800b9ac <get_file_content(char const*, char*)+0x78>)
 800b990:	f7fd f8c2 	bl	8008b18 <printf>
 800b994:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800b998:	e7f0      	b.n	800b97c <get_file_content(char const*, char*)+0x48>
 800b99a:	bf00      	nop
 800b99c:	08011da8 	stmdaeq	r1, {r3, r5, r7, r8, sl, fp, ip}
 800b9a0:	08011aa5 	stmdaeq	r1, {r0, r2, r5, r7, r9, fp, ip}
 800b9a4:	08011ac4 	stmdaeq	r1, {r2, r6, r7, r9, fp, ip}
 800b9a8:	08011ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp, ip}
 800b9ac:	08011af1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, fp, ip}

0800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800b9b0:	2300      	movs	r3, #0
 800b9b2:	2020      	movs	r0, #32
 800b9b4:	b510      	push	{r4, lr}
 800b9b6:	4a04      	ldr	r2, [pc, #16]	; (800b9c8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800b9b8:	428b      	cmp	r3, r1
 800b9ba:	d004      	beq.n	800b9c6 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800b9bc:	f852 4b04 	ldr.w	r4, [r2], #4
 800b9c0:	3301      	adds	r3, #1
 800b9c2:	4420      	add	r0, r4
 800b9c4:	e7f8      	b.n	800b9b8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800b9c6:	bd10      	pop	{r4, pc}
 800b9c8:	080122ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sp}

0800b9cc <SpiFlashStore::Init()>:
 800b9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9d0:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800baf4 <SpiFlashStore::Init()+0x128>
 800b9d4:	4607      	mov	r7, r0
 800b9d6:	b085      	sub	sp, #20
 800b9d8:	f8d8 0000 	ldr.w	r0, [r8]
 800b9dc:	f000 fb06 	bl	800bfec <FlashRom::GetSectorSize() const>
 800b9e0:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800b9e4:	4605      	mov	r5, r0
 800b9e6:	f040 8083 	bne.w	800baf0 <SpiFlashStore::Init()+0x124>
 800b9ea:	f8d8 0000 	ldr.w	r0, [r8]
 800b9ee:	f000 faf5 	bl	800bfdc <FlashRom::GetSize() const>
 800b9f2:	4b41      	ldr	r3, [pc, #260]	; (800baf8 <SpiFlashStore::Init()+0x12c>)
 800b9f4:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800b9f8:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800b9fc:	6019      	str	r1, [r3, #0]
 800b9fe:	2e00      	cmp	r6, #0
 800ba00:	d176      	bne.n	800baf0 <SpiFlashStore::Init()+0x124>
 800ba02:	4c3e      	ldr	r4, [pc, #248]	; (800bafc <SpiFlashStore::Init()+0x130>)
 800ba04:	ab03      	add	r3, sp, #12
 800ba06:	9300      	str	r3, [sp, #0]
 800ba08:	462a      	mov	r2, r5
 800ba0a:	4623      	mov	r3, r4
 800ba0c:	f8d8 0000 	ldr.w	r0, [r8]
 800ba10:	f000 faef 	bl	800bff2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800ba14:	7823      	ldrb	r3, [r4, #0]
 800ba16:	2b41      	cmp	r3, #65	; 0x41
 800ba18:	bf1c      	itt	ne
 800ba1a:	2341      	movne	r3, #65	; 0x41
 800ba1c:	7023      	strbne	r3, [r4, #0]
 800ba1e:	7863      	ldrb	r3, [r4, #1]
 800ba20:	bf14      	ite	ne
 800ba22:	4635      	movne	r5, r6
 800ba24:	2501      	moveq	r5, #1
 800ba26:	2b76      	cmp	r3, #118	; 0x76
 800ba28:	bf1c      	itt	ne
 800ba2a:	2376      	movne	r3, #118	; 0x76
 800ba2c:	7063      	strbne	r3, [r4, #1]
 800ba2e:	78a3      	ldrb	r3, [r4, #2]
 800ba30:	bf18      	it	ne
 800ba32:	2500      	movne	r5, #0
 800ba34:	2b56      	cmp	r3, #86	; 0x56
 800ba36:	bf1c      	itt	ne
 800ba38:	2356      	movne	r3, #86	; 0x56
 800ba3a:	70a3      	strbne	r3, [r4, #2]
 800ba3c:	78e3      	ldrb	r3, [r4, #3]
 800ba3e:	bf18      	it	ne
 800ba40:	2500      	movne	r5, #0
 800ba42:	2b10      	cmp	r3, #16
 800ba44:	d01c      	beq.n	800ba80 <SpiFlashStore::Init()+0xb4>
 800ba46:	2310      	movs	r3, #16
 800ba48:	70e3      	strb	r3, [r4, #3]
 800ba4a:	2201      	movs	r2, #1
 800ba4c:	2500      	movs	r5, #0
 800ba4e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800ba52:	4b2b      	ldr	r3, [pc, #172]	; (800bb00 <SpiFlashStore::Init()+0x134>)
 800ba54:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800bb04 <SpiFlashStore::Init()+0x138>
 800ba58:	701a      	strb	r2, [r3, #0]
 800ba5a:	4631      	mov	r1, r6
 800ba5c:	4638      	mov	r0, r7
 800ba5e:	f7ff ffa7 	bl	800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ba62:	1823      	adds	r3, r4, r0
 800ba64:	5425      	strb	r5, [r4, r0]
 800ba66:	705d      	strb	r5, [r3, #1]
 800ba68:	709d      	strb	r5, [r3, #2]
 800ba6a:	70dd      	strb	r5, [r3, #3]
 800ba6c:	f858 3b04 	ldr.w	r3, [r8], #4
 800ba70:	1d02      	adds	r2, r0, #4
 800ba72:	4403      	add	r3, r0
 800ba74:	4293      	cmp	r3, r2
 800ba76:	d931      	bls.n	800badc <SpiFlashStore::Init()+0x110>
 800ba78:	f804 9002 	strb.w	r9, [r4, r2]
 800ba7c:	3201      	adds	r2, #1
 800ba7e:	e7f9      	b.n	800ba74 <SpiFlashStore::Init()+0xa8>
 800ba80:	2d00      	cmp	r5, #0
 800ba82:	d0e2      	beq.n	800ba4a <SpiFlashStore::Init()+0x7e>
 800ba84:	f04f 0900 	mov.w	r9, #0
 800ba88:	46c8      	mov	r8, r9
 800ba8a:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800bb08 <SpiFlashStore::Init()+0x13c>
 800ba8e:	f8da b000 	ldr.w	fp, [sl]
 800ba92:	4631      	mov	r1, r6
 800ba94:	4638      	mov	r0, r7
 800ba96:	f7ff ff8b 	bl	800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800ba9a:	5c23      	ldrb	r3, [r4, r0]
 800ba9c:	2bff      	cmp	r3, #255	; 0xff
 800ba9e:	d114      	bne.n	800baca <SpiFlashStore::Init()+0xfe>
 800baa0:	1823      	adds	r3, r4, r0
 800baa2:	785a      	ldrb	r2, [r3, #1]
 800baa4:	2aff      	cmp	r2, #255	; 0xff
 800baa6:	d110      	bne.n	800baca <SpiFlashStore::Init()+0xfe>
 800baa8:	789a      	ldrb	r2, [r3, #2]
 800baaa:	2aff      	cmp	r2, #255	; 0xff
 800baac:	d10d      	bne.n	800baca <SpiFlashStore::Init()+0xfe>
 800baae:	78da      	ldrb	r2, [r3, #3]
 800bab0:	2aff      	cmp	r2, #255	; 0xff
 800bab2:	d10a      	bne.n	800baca <SpiFlashStore::Init()+0xfe>
 800bab4:	46a9      	mov	r9, r5
 800bab6:	f04f 0b01 	mov.w	fp, #1
 800baba:	f804 8000 	strb.w	r8, [r4, r0]
 800babe:	f883 8001 	strb.w	r8, [r3, #1]
 800bac2:	f883 8002 	strb.w	r8, [r3, #2]
 800bac6:	f883 8003 	strb.w	r8, [r3, #3]
 800baca:	3601      	adds	r6, #1
 800bacc:	2e1c      	cmp	r6, #28
 800bace:	d1e0      	bne.n	800ba92 <SpiFlashStore::Init()+0xc6>
 800bad0:	f1b9 0f00 	cmp.w	r9, #0
 800bad4:	d008      	beq.n	800bae8 <SpiFlashStore::Init()+0x11c>
 800bad6:	f8ca b000 	str.w	fp, [sl]
 800bada:	e005      	b.n	800bae8 <SpiFlashStore::Init()+0x11c>
 800badc:	3601      	adds	r6, #1
 800bade:	2e1c      	cmp	r6, #28
 800bae0:	d1bb      	bne.n	800ba5a <SpiFlashStore::Init()+0x8e>
 800bae2:	2501      	movs	r5, #1
 800bae4:	4b08      	ldr	r3, [pc, #32]	; (800bb08 <SpiFlashStore::Init()+0x13c>)
 800bae6:	601d      	str	r5, [r3, #0]
 800bae8:	4628      	mov	r0, r5
 800baea:	b005      	add	sp, #20
 800baec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800baf0:	2500      	movs	r5, #0
 800baf2:	e7f9      	b.n	800bae8 <SpiFlashStore::Init()+0x11c>
 800baf4:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800baf8:	20001b7c 	andcs	r1, r0, ip, ror fp
 800bafc:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bb00:	20001b90 	mulcs	r0, r0, fp
 800bb04:	080122ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sp}
 800bb08:	20001b88 	andcs	r1, r0, r8, lsl #23

0800bb0c <SpiFlashStore::SpiFlashStore()>:
 800bb0c:	b538      	push	{r3, r4, r5, lr}
 800bb0e:	4b0d      	ldr	r3, [pc, #52]	; (800bb44 <SpiFlashStore::SpiFlashStore()+0x38>)
 800bb10:	4604      	mov	r4, r0
 800bb12:	6018      	str	r0, [r3, #0]
 800bb14:	4b0c      	ldr	r3, [pc, #48]	; (800bb48 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800bb16:	4d0d      	ldr	r5, [pc, #52]	; (800bb4c <SpiFlashStore::SpiFlashStore()+0x40>)
 800bb18:	681b      	ldr	r3, [r3, #0]
 800bb1a:	781b      	ldrb	r3, [r3, #0]
 800bb1c:	b113      	cbz	r3, 800bb24 <SpiFlashStore::SpiFlashStore()+0x18>
 800bb1e:	f7ff ff55 	bl	800b9cc <SpiFlashStore::Init()>
 800bb22:	7028      	strb	r0, [r5, #0]
 800bb24:	782b      	ldrb	r3, [r5, #0]
 800bb26:	b153      	cbz	r3, 800bb3e <SpiFlashStore::SpiFlashStore()+0x32>
 800bb28:	2320      	movs	r3, #32
 800bb2a:	2200      	movs	r2, #0
 800bb2c:	4908      	ldr	r1, [pc, #32]	; (800bb50 <SpiFlashStore::SpiFlashStore()+0x44>)
 800bb2e:	f851 0b04 	ldr.w	r0, [r1], #4
 800bb32:	3201      	adds	r2, #1
 800bb34:	2a1c      	cmp	r2, #28
 800bb36:	4403      	add	r3, r0
 800bb38:	d1f9      	bne.n	800bb2e <SpiFlashStore::SpiFlashStore()+0x22>
 800bb3a:	4a06      	ldr	r2, [pc, #24]	; (800bb54 <SpiFlashStore::SpiFlashStore()+0x48>)
 800bb3c:	6013      	str	r3, [r2, #0]
 800bb3e:	4620      	mov	r0, r4
 800bb40:	bd38      	pop	{r3, r4, r5, pc}
 800bb42:	bf00      	nop
 800bb44:	20001b8c 	andcs	r1, r0, ip, lsl #23
 800bb48:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bb4c:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bb50:	080122ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sp}
 800bb54:	20001b84 	andcs	r1, r0, r4, lsl #23

0800bb58 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800bb58:	b508      	push	{r3, lr}
 800bb5a:	f7ff ff29 	bl	800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb5e:	2300      	movs	r3, #0
 800bb60:	4904      	ldr	r1, [pc, #16]	; (800bb74 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800bb62:	1842      	adds	r2, r0, r1
 800bb64:	540b      	strb	r3, [r1, r0]
 800bb66:	7053      	strb	r3, [r2, #1]
 800bb68:	7093      	strb	r3, [r2, #2]
 800bb6a:	70d3      	strb	r3, [r2, #3]
 800bb6c:	2201      	movs	r2, #1
 800bb6e:	4b02      	ldr	r3, [pc, #8]	; (800bb78 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800bb70:	601a      	str	r2, [r3, #0]
 800bb72:	bd08      	pop	{r3, pc}
 800bb74:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bb78:	20001b88 	andcs	r1, r0, r8, lsl #23

0800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800bb7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb80:	461c      	mov	r4, r3
 800bb82:	4b19      	ldr	r3, [pc, #100]	; (800bbe8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800bb84:	4615      	mov	r5, r2
 800bb86:	781f      	ldrb	r7, [r3, #0]
 800bb88:	9e07      	ldr	r6, [sp, #28]
 800bb8a:	b35f      	cbz	r7, 800bbe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bb8c:	f7ff ff10 	bl	800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bb90:	f04f 0c00 	mov.w	ip, #0
 800bb94:	4a15      	ldr	r2, [pc, #84]	; (800bbec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800bb96:	1941      	adds	r1, r0, r5
 800bb98:	1e63      	subs	r3, r4, #1
 800bb9a:	9c06      	ldr	r4, [sp, #24]
 800bb9c:	4411      	add	r1, r2
 800bb9e:	440c      	add	r4, r1
 800bba0:	42a1      	cmp	r1, r4
 800bba2:	d00a      	beq.n	800bbba <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800bba4:	f891 8000 	ldrb.w	r8, [r1]
 800bba8:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800bbac:	3101      	adds	r1, #1
 800bbae:	45f0      	cmp	r8, lr
 800bbb0:	bf1c      	itt	ne
 800bbb2:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800bbb6:	46bc      	movne	ip, r7
 800bbb8:	e7f2      	b.n	800bba0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800bbba:	f1bc 0f00 	cmp.w	ip, #0
 800bbbe:	d011      	beq.n	800bbe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bbc0:	4b0b      	ldr	r3, [pc, #44]	; (800bbf0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800bbc2:	6819      	ldr	r1, [r3, #0]
 800bbc4:	b109      	cbz	r1, 800bbca <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800bbc6:	2906      	cmp	r1, #6
 800bbc8:	d101      	bne.n	800bbce <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800bbca:	2101      	movs	r1, #1
 800bbcc:	6019      	str	r1, [r3, #0]
 800bbce:	4b09      	ldr	r3, [pc, #36]	; (800bbf4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800bbd0:	6819      	ldr	r1, [r3, #0]
 800bbd2:	4b09      	ldr	r3, [pc, #36]	; (800bbf8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800bbd4:	6019      	str	r1, [r3, #0]
 800bbd6:	b12d      	cbz	r5, 800bbe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bbd8:	b126      	cbz	r6, 800bbe4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800bbda:	9b08      	ldr	r3, [sp, #32]
 800bbdc:	4418      	add	r0, r3
 800bbde:	5813      	ldr	r3, [r2, r0]
 800bbe0:	4333      	orrs	r3, r6
 800bbe2:	5013      	str	r3, [r2, r0]
 800bbe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbe8:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bbec:	20000b7c 	andcs	r0, r0, ip, ror fp
 800bbf0:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bbf4:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800bbf8:	20000b78 	andcs	r0, r0, r8, ror fp

0800bbfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800bbfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc00:	461d      	mov	r5, r3
 800bc02:	4b15      	ldr	r3, [pc, #84]	; (800bc58 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800bc04:	b085      	sub	sp, #20
 800bc06:	781b      	ldrb	r3, [r3, #0]
 800bc08:	4607      	mov	r7, r0
 800bc0a:	4688      	mov	r8, r1
 800bc0c:	4614      	mov	r4, r2
 800bc0e:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bc12:	b1eb      	cbz	r3, 800bc50 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800bc14:	f7ff fecc 	bl	800b9b0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800bc18:	4910      	ldr	r1, [pc, #64]	; (800bc5c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800bc1a:	4a11      	ldr	r2, [pc, #68]	; (800bc60 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800bc1c:	7809      	ldrb	r1, [r1, #0]
 800bc1e:	eb00 0309 	add.w	r3, r0, r9
 800bc22:	189e      	adds	r6, r3, r2
 800bc24:	b951      	cbnz	r1, 800bc3c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800bc26:	589b      	ldr	r3, [r3, r2]
 800bc28:	b143      	cbz	r3, 800bc3c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800bc2a:	3c01      	subs	r4, #1
 800bc2c:	4435      	add	r5, r6
 800bc2e:	42b5      	cmp	r5, r6
 800bc30:	d00e      	beq.n	800bc50 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800bc32:	f816 3b01 	ldrb.w	r3, [r6], #1
 800bc36:	f804 3f01 	strb.w	r3, [r4, #1]!
 800bc3a:	e7f8      	b.n	800bc2e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800bc3c:	2300      	movs	r3, #0
 800bc3e:	464a      	mov	r2, r9
 800bc40:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bc44:	4641      	mov	r1, r8
 800bc46:	4623      	mov	r3, r4
 800bc48:	4638      	mov	r0, r7
 800bc4a:	9500      	str	r5, [sp, #0]
 800bc4c:	f7ff ff96 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bc50:	b005      	add	sp, #20
 800bc52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc56:	bf00      	nop
 800bc58:	20001b80 	andcs	r1, r0, r0, lsl #23
 800bc5c:	20001b90 	mulcs	r0, r0, fp
 800bc60:	20000b7c 	andcs	r0, r0, ip, ror fp

0800bc64 <SpiFlashStore::Flash()>:
 800bc64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc66:	4c25      	ldr	r4, [pc, #148]	; (800bcfc <SpiFlashStore::Flash()+0x98>)
 800bc68:	6820      	ldr	r0, [r4, #0]
 800bc6a:	2800      	cmp	r0, #0
 800bc6c:	d043      	beq.n	800bcf6 <SpiFlashStore::Flash()+0x92>
 800bc6e:	3801      	subs	r0, #1
 800bc70:	2805      	cmp	r0, #5
 800bc72:	d831      	bhi.n	800bcd8 <SpiFlashStore::Flash()+0x74>
 800bc74:	e8df f000 	tbb	[pc, r0]
 800bc78:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800bc7c:	4b203025 	blmi	8817d18 <__exidx_end+0x805278>
 800bc80:	681a      	ldr	r2, [r3, #0]
 800bc82:	4b20      	ldr	r3, [pc, #128]	; (800bd04 <SpiFlashStore::Flash()+0xa0>)
 800bc84:	601a      	str	r2, [r3, #0]
 800bc86:	2302      	movs	r3, #2
 800bc88:	6023      	str	r3, [r4, #0]
 800bc8a:	2001      	movs	r0, #1
 800bc8c:	e033      	b.n	800bcf6 <SpiFlashStore::Flash()+0x92>
 800bc8e:	4b1c      	ldr	r3, [pc, #112]	; (800bd00 <SpiFlashStore::Flash()+0x9c>)
 800bc90:	4a1c      	ldr	r2, [pc, #112]	; (800bd04 <SpiFlashStore::Flash()+0xa0>)
 800bc92:	681b      	ldr	r3, [r3, #0]
 800bc94:	6812      	ldr	r2, [r2, #0]
 800bc96:	1a9b      	subs	r3, r3, r2
 800bc98:	2b63      	cmp	r3, #99	; 0x63
 800bc9a:	d9f6      	bls.n	800bc8a <SpiFlashStore::Flash()+0x26>
 800bc9c:	2303      	movs	r3, #3
 800bc9e:	e7f3      	b.n	800bc88 <SpiFlashStore::Flash()+0x24>
 800bca0:	4919      	ldr	r1, [pc, #100]	; (800bd08 <SpiFlashStore::Flash()+0xa4>)
 800bca2:	481a      	ldr	r0, [pc, #104]	; (800bd0c <SpiFlashStore::Flash()+0xa8>)
 800bca4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800bca8:	6809      	ldr	r1, [r1, #0]
 800bcaa:	6800      	ldr	r0, [r0, #0]
 800bcac:	ab03      	add	r3, sp, #12
 800bcae:	f000 f9af 	bl	800c010 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800bcb2:	2800      	cmp	r0, #0
 800bcb4:	d0e9      	beq.n	800bc8a <SpiFlashStore::Flash()+0x26>
 800bcb6:	4b12      	ldr	r3, [pc, #72]	; (800bd00 <SpiFlashStore::Flash()+0x9c>)
 800bcb8:	681a      	ldr	r2, [r3, #0]
 800bcba:	4b12      	ldr	r3, [pc, #72]	; (800bd04 <SpiFlashStore::Flash()+0xa0>)
 800bcbc:	601a      	str	r2, [r3, #0]
 800bcbe:	2305      	movs	r3, #5
 800bcc0:	e7e2      	b.n	800bc88 <SpiFlashStore::Flash()+0x24>
 800bcc2:	4b0f      	ldr	r3, [pc, #60]	; (800bd00 <SpiFlashStore::Flash()+0x9c>)
 800bcc4:	4a0f      	ldr	r2, [pc, #60]	; (800bd04 <SpiFlashStore::Flash()+0xa0>)
 800bcc6:	681b      	ldr	r3, [r3, #0]
 800bcc8:	6812      	ldr	r2, [r2, #0]
 800bcca:	1a9b      	subs	r3, r3, r2
 800bccc:	2b63      	cmp	r3, #99	; 0x63
 800bcce:	d9dc      	bls.n	800bc8a <SpiFlashStore::Flash()+0x26>
 800bcd0:	2304      	movs	r3, #4
 800bcd2:	e7d9      	b.n	800bc88 <SpiFlashStore::Flash()+0x24>
 800bcd4:	2306      	movs	r3, #6
 800bcd6:	e7d7      	b.n	800bc88 <SpiFlashStore::Flash()+0x24>
 800bcd8:	ab03      	add	r3, sp, #12
 800bcda:	4a0d      	ldr	r2, [pc, #52]	; (800bd10 <SpiFlashStore::Flash()+0xac>)
 800bcdc:	490a      	ldr	r1, [pc, #40]	; (800bd08 <SpiFlashStore::Flash()+0xa4>)
 800bcde:	480b      	ldr	r0, [pc, #44]	; (800bd0c <SpiFlashStore::Flash()+0xa8>)
 800bce0:	9300      	str	r3, [sp, #0]
 800bce2:	6812      	ldr	r2, [r2, #0]
 800bce4:	4b0b      	ldr	r3, [pc, #44]	; (800bd14 <SpiFlashStore::Flash()+0xb0>)
 800bce6:	6809      	ldr	r1, [r1, #0]
 800bce8:	6800      	ldr	r0, [r0, #0]
 800bcea:	f000 fa31 	bl	800c150 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800bcee:	2800      	cmp	r0, #0
 800bcf0:	d0cb      	beq.n	800bc8a <SpiFlashStore::Flash()+0x26>
 800bcf2:	2000      	movs	r0, #0
 800bcf4:	6020      	str	r0, [r4, #0]
 800bcf6:	b004      	add	sp, #16
 800bcf8:	bd10      	pop	{r4, pc}
 800bcfa:	bf00      	nop
 800bcfc:	20001b88 	andcs	r1, r0, r8, lsl #23
 800bd00:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800bd04:	20000b78 	andcs	r0, r0, r8, ror fp
 800bd08:	20001b7c 	andcs	r1, r0, ip, ror fp
 800bd0c:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bd10:	20001b84 	andcs	r1, r0, r4, lsl #23
 800bd14:	20000b7c 	andcs	r0, r0, ip, ror fp

0800bd18 <StoreDmxSend::~StoreDmxSend()>:
 800bd18:	4770      	bx	lr
	...

0800bd1c <StoreDmxSend::Copy(TDmxParams*)>:
 800bd1c:	2300      	movs	r3, #0
 800bd1e:	b507      	push	{r0, r1, r2, lr}
 800bd20:	4805      	ldr	r0, [pc, #20]	; (800bd38 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800bd22:	9300      	str	r3, [sp, #0]
 800bd24:	460a      	mov	r2, r1
 800bd26:	230a      	movs	r3, #10
 800bd28:	2102      	movs	r1, #2
 800bd2a:	6800      	ldr	r0, [r0, #0]
 800bd2c:	f7ff ff66 	bl	800bbfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bd30:	b003      	add	sp, #12
 800bd32:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd36:	bf00      	nop
 800bd38:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bd3c <StoreDmxSend::Update(TDmxParams const*)>:
 800bd3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd3e:	2200      	movs	r2, #0
 800bd40:	460b      	mov	r3, r1
 800bd42:	210a      	movs	r1, #10
 800bd44:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bd48:	4804      	ldr	r0, [pc, #16]	; (800bd5c <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800bd4a:	9100      	str	r1, [sp, #0]
 800bd4c:	6800      	ldr	r0, [r0, #0]
 800bd4e:	2102      	movs	r1, #2
 800bd50:	f7ff ff14 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bd54:	b005      	add	sp, #20
 800bd56:	f85d fb04 	ldr.w	pc, [sp], #4
 800bd5a:	bf00      	nop
 800bd5c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bd60 <StoreDmxSend::~StoreDmxSend()>:
 800bd60:	b510      	push	{r4, lr}
 800bd62:	4604      	mov	r4, r0
 800bd64:	f003 f85a 	bl	800ee1c <operator delete(void*)>
 800bd68:	4620      	mov	r0, r4
 800bd6a:	bd10      	pop	{r4, pc}

0800bd6c <StoreDmxSend::StoreDmxSend()>:
 800bd6c:	4a02      	ldr	r2, [pc, #8]	; (800bd78 <StoreDmxSend::StoreDmxSend()+0xc>)
 800bd6e:	6002      	str	r2, [r0, #0]
 800bd70:	4a02      	ldr	r2, [pc, #8]	; (800bd7c <StoreDmxSend::StoreDmxSend()+0x10>)
 800bd72:	6010      	str	r0, [r2, #0]
 800bd74:	4770      	bx	lr
 800bd76:	bf00      	nop
 800bd78:	08012364 	stmdaeq	r1, {r2, r5, r6, r8, r9, sp}
 800bd7c:	20001b94 	mulcs	r0, r4, fp

0800bd80 <StoreNetwork::~StoreNetwork()>:
 800bd80:	4770      	bx	lr

0800bd82 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bd82:	3804      	subs	r0, #4
 800bd84:	4770      	bx	lr
	...

0800bd88 <StoreNetwork::Update(TNetworkParams const*)>:
 800bd88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bd8a:	2200      	movs	r2, #0
 800bd8c:	460b      	mov	r3, r1
 800bd8e:	215e      	movs	r1, #94	; 0x5e
 800bd90:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bd94:	4804      	ldr	r0, [pc, #16]	; (800bda8 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800bd96:	9100      	str	r1, [sp, #0]
 800bd98:	6800      	ldr	r0, [r0, #0]
 800bd9a:	4611      	mov	r1, r2
 800bd9c:	f7ff feee 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bda0:	b005      	add	sp, #20
 800bda2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bda6:	bf00      	nop
 800bda8:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bdac <StoreNetwork::SaveDhcp(bool)>:
 800bdac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdae:	2301      	movs	r3, #1
 800bdb0:	f88d 1017 	strb.w	r1, [sp, #23]
 800bdb4:	2100      	movs	r1, #0
 800bdb6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bdba:	4805      	ldr	r0, [pc, #20]	; (800bdd0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800bdbc:	9300      	str	r3, [sp, #0]
 800bdbe:	2214      	movs	r2, #20
 800bdc0:	6800      	ldr	r0, [r0, #0]
 800bdc2:	f10d 0317 	add.w	r3, sp, #23
 800bdc6:	f7ff fed9 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bdca:	b007      	add	sp, #28
 800bdcc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdd0:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bdd4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800bdd4:	f1a0 0004 	sub.w	r0, r0, #4
 800bdd8:	e7e8      	b.n	800bdac <StoreNetwork::SaveDhcp(bool)>
 800bdda:	bf00      	nop

0800bddc <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800bddc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdde:	2308      	movs	r3, #8
 800bde0:	9105      	str	r1, [sp, #20]
 800bde2:	2100      	movs	r1, #0
 800bde4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bde8:	2304      	movs	r3, #4
 800bdea:	4805      	ldr	r0, [pc, #20]	; (800be00 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800bdec:	9300      	str	r3, [sp, #0]
 800bdee:	220c      	movs	r2, #12
 800bdf0:	6800      	ldr	r0, [r0, #0]
 800bdf2:	ab05      	add	r3, sp, #20
 800bdf4:	f7ff fec2 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bdf8:	b007      	add	sp, #28
 800bdfa:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdfe:	bf00      	nop
 800be00:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be04 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800be04:	f1a0 0004 	sub.w	r0, r0, #4
 800be08:	e7e8      	b.n	800bddc <StoreNetwork::SaveGatewayIp(unsigned int)>
 800be0a:	bf00      	nop

0800be0c <StoreNetwork::SaveNetMask(unsigned int)>:
 800be0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be0e:	2304      	movs	r3, #4
 800be10:	9105      	str	r1, [sp, #20]
 800be12:	2100      	movs	r1, #0
 800be14:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be18:	4804      	ldr	r0, [pc, #16]	; (800be2c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800be1a:	9300      	str	r3, [sp, #0]
 800be1c:	2208      	movs	r2, #8
 800be1e:	6800      	ldr	r0, [r0, #0]
 800be20:	ab05      	add	r3, sp, #20
 800be22:	f7ff feab 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be26:	b007      	add	sp, #28
 800be28:	f85d fb04 	ldr.w	pc, [sp], #4
 800be2c:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be30 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800be30:	f1a0 0004 	sub.w	r0, r0, #4
 800be34:	e7ea      	b.n	800be0c <StoreNetwork::SaveNetMask(unsigned int)>
 800be36:	bf00      	nop

0800be38 <StoreNetwork::SaveIp(unsigned int)>:
 800be38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be3a:	2302      	movs	r3, #2
 800be3c:	9105      	str	r1, [sp, #20]
 800be3e:	2100      	movs	r1, #0
 800be40:	2204      	movs	r2, #4
 800be42:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800be46:	4804      	ldr	r0, [pc, #16]	; (800be58 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800be48:	9200      	str	r2, [sp, #0]
 800be4a:	6800      	ldr	r0, [r0, #0]
 800be4c:	ab05      	add	r3, sp, #20
 800be4e:	f7ff fe95 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be52:	b007      	add	sp, #28
 800be54:	f85d fb04 	ldr.w	pc, [sp], #4
 800be58:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be5c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800be5c:	f1a0 0004 	sub.w	r0, r0, #4
 800be60:	e7ea      	b.n	800be38 <StoreNetwork::SaveIp(unsigned int)>
 800be62:	bf00      	nop

0800be64 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800be64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be66:	460b      	mov	r3, r1
 800be68:	2020      	movs	r0, #32
 800be6a:	2100      	movs	r1, #0
 800be6c:	2a40      	cmp	r2, #64	; 0x40
 800be6e:	bf28      	it	cs
 800be70:	2240      	movcs	r2, #64	; 0x40
 800be72:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800be76:	4804      	ldr	r0, [pc, #16]	; (800be88 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800be78:	9200      	str	r2, [sp, #0]
 800be7a:	6800      	ldr	r0, [r0, #0]
 800be7c:	2215      	movs	r2, #21
 800be7e:	f7ff fe7d 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800be82:	b005      	add	sp, #20
 800be84:	f85d fb04 	ldr.w	pc, [sp], #4
 800be88:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800be8c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800be8c:	f1a0 0004 	sub.w	r0, r0, #4
 800be90:	e7e8      	b.n	800be64 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800be92:	bf00      	nop

0800be94 <StoreNetwork::~StoreNetwork()>:
 800be94:	b510      	push	{r4, lr}
 800be96:	4604      	mov	r4, r0
 800be98:	f002 ffc0 	bl	800ee1c <operator delete(void*)>
 800be9c:	4620      	mov	r0, r4
 800be9e:	bd10      	pop	{r4, pc}

0800bea0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800bea0:	f1a0 0004 	sub.w	r0, r0, #4
 800bea4:	e7f6      	b.n	800be94 <StoreNetwork::~StoreNetwork()>
	...

0800bea8 <StoreNetwork::Copy(TNetworkParams*)>:
 800bea8:	b507      	push	{r0, r1, r2, lr}
 800beaa:	460a      	mov	r2, r1
 800beac:	2100      	movs	r1, #0
 800beae:	4804      	ldr	r0, [pc, #16]	; (800bec0 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800beb0:	9100      	str	r1, [sp, #0]
 800beb2:	235e      	movs	r3, #94	; 0x5e
 800beb4:	6800      	ldr	r0, [r0, #0]
 800beb6:	f7ff fea1 	bl	800bbfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800beba:	b003      	add	sp, #12
 800bebc:	f85d fb04 	ldr.w	pc, [sp], #4
 800bec0:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bec4 <StoreNetwork::StoreNetwork()>:
 800bec4:	4a03      	ldr	r2, [pc, #12]	; (800bed4 <StoreNetwork::StoreNetwork()+0x10>)
 800bec6:	6002      	str	r2, [r0, #0]
 800bec8:	322c      	adds	r2, #44	; 0x2c
 800beca:	6042      	str	r2, [r0, #4]
 800becc:	4a02      	ldr	r2, [pc, #8]	; (800bed8 <StoreNetwork::StoreNetwork()+0x14>)
 800bece:	6010      	str	r0, [r2, #0]
 800bed0:	4770      	bx	lr
 800bed2:	bf00      	nop
 800bed4:	0801237c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sp}
 800bed8:	20001b98 	mulcs	r0, r8, fp

0800bedc <StoreOscServer::~StoreOscServer()>:
 800bedc:	4770      	bx	lr
	...

0800bee0 <StoreOscServer::Copy(osc::server::Params*)>:
 800bee0:	2300      	movs	r3, #0
 800bee2:	b507      	push	{r0, r1, r2, lr}
 800bee4:	4805      	ldr	r0, [pc, #20]	; (800befc <StoreOscServer::Copy(osc::server::Params*)+0x1c>)
 800bee6:	9300      	str	r3, [sp, #0]
 800bee8:	460a      	mov	r2, r1
 800beea:	f44f 73c5 	mov.w	r3, #394	; 0x18a
 800beee:	2108      	movs	r1, #8
 800bef0:	6800      	ldr	r0, [r0, #0]
 800bef2:	f7ff fe83 	bl	800bbfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bef6:	b003      	add	sp, #12
 800bef8:	f85d fb04 	ldr.w	pc, [sp], #4
 800befc:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf00 <StoreOscServer::Update(osc::server::Params const*)>:
 800bf00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf02:	2200      	movs	r2, #0
 800bf04:	460b      	mov	r3, r1
 800bf06:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 800bf0a:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bf0e:	4804      	ldr	r0, [pc, #16]	; (800bf20 <StoreOscServer::Update(osc::server::Params const*)+0x20>)
 800bf10:	9100      	str	r1, [sp, #0]
 800bf12:	6800      	ldr	r0, [r0, #0]
 800bf14:	2108      	movs	r1, #8
 800bf16:	f7ff fe31 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf1a:	b005      	add	sp, #20
 800bf1c:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf20:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf24 <StoreOscServer::~StoreOscServer()>:
 800bf24:	b510      	push	{r4, lr}
 800bf26:	4604      	mov	r4, r0
 800bf28:	f002 ff78 	bl	800ee1c <operator delete(void*)>
 800bf2c:	4620      	mov	r0, r4
 800bf2e:	bd10      	pop	{r4, pc}

0800bf30 <StoreOscServer::StoreOscServer()>:
 800bf30:	4a02      	ldr	r2, [pc, #8]	; (800bf3c <StoreOscServer::StoreOscServer()+0xc>)
 800bf32:	6002      	str	r2, [r0, #0]
 800bf34:	4a02      	ldr	r2, [pc, #8]	; (800bf40 <StoreOscServer::StoreOscServer()+0x10>)
 800bf36:	6010      	str	r0, [r2, #0]
 800bf38:	4770      	bx	lr
 800bf3a:	bf00      	nop
 800bf3c:	080123cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sp}
 800bf40:	20001b9c 	mulcs	r0, ip, fp

0800bf44 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bf44:	4770      	bx	lr
	...

0800bf48 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800bf48:	2300      	movs	r3, #0
 800bf4a:	b507      	push	{r0, r1, r2, lr}
 800bf4c:	4805      	ldr	r0, [pc, #20]	; (800bf64 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800bf4e:	9300      	str	r3, [sp, #0]
 800bf50:	460a      	mov	r2, r1
 800bf52:	2320      	movs	r3, #32
 800bf54:	210c      	movs	r1, #12
 800bf56:	6800      	ldr	r0, [r0, #0]
 800bf58:	f7ff fe50 	bl	800bbfc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800bf5c:	b003      	add	sp, #12
 800bf5e:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf62:	bf00      	nop
 800bf64:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf68 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800bf68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf6a:	2200      	movs	r2, #0
 800bf6c:	460b      	mov	r3, r1
 800bf6e:	2120      	movs	r1, #32
 800bf70:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800bf74:	4804      	ldr	r0, [pc, #16]	; (800bf88 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800bf76:	9100      	str	r1, [sp, #0]
 800bf78:	6800      	ldr	r0, [r0, #0]
 800bf7a:	210c      	movs	r1, #12
 800bf7c:	f7ff fdfe 	bl	800bb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800bf80:	b005      	add	sp, #20
 800bf82:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf86:	bf00      	nop
 800bf88:	20001b8c 	andcs	r1, r0, ip, lsl #23

0800bf8c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800bf8c:	b510      	push	{r4, lr}
 800bf8e:	4604      	mov	r4, r0
 800bf90:	f002 ff44 	bl	800ee1c <operator delete(void*)>
 800bf94:	4620      	mov	r0, r4
 800bf96:	bd10      	pop	{r4, pc}

0800bf98 <StoreRemoteConfig::StoreRemoteConfig()>:
 800bf98:	4a02      	ldr	r2, [pc, #8]	; (800bfa4 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800bf9a:	6002      	str	r2, [r0, #0]
 800bf9c:	4a02      	ldr	r2, [pc, #8]	; (800bfa8 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800bf9e:	6010      	str	r0, [r2, #0]
 800bfa0:	4770      	bx	lr
 800bfa2:	bf00      	nop
 800bfa4:	080123e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp}
 800bfa8:	20001ba0 	andcs	r1, r0, r0, lsr #23

0800bfac <FlashRom::FlashRom()>:
 800bfac:	4b07      	ldr	r3, [pc, #28]	; (800bfcc <FlashRom::FlashRom()+0x20>)
 800bfae:	b510      	push	{r4, lr}
 800bfb0:	6018      	str	r0, [r3, #0]
 800bfb2:	2301      	movs	r3, #1
 800bfb4:	4604      	mov	r4, r0
 800bfb6:	7003      	strb	r3, [r0, #0]
 800bfb8:	4b05      	ldr	r3, [pc, #20]	; (800bfd0 <FlashRom::FlashRom()+0x24>)
 800bfba:	4906      	ldr	r1, [pc, #24]	; (800bfd4 <FlashRom::FlashRom()+0x28>)
 800bfbc:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800bfc0:	4805      	ldr	r0, [pc, #20]	; (800bfd8 <FlashRom::FlashRom()+0x2c>)
 800bfc2:	029a      	lsls	r2, r3, #10
 800bfc4:	f7fc fda8 	bl	8008b18 <printf>
 800bfc8:	4620      	mov	r0, r4
 800bfca:	bd10      	pop	{r4, pc}
 800bfcc:	20001ba4 	andcs	r1, r0, r4, lsr #23
 800bfd0:	1ffff700 	svcne	0x00fff700
 800bfd4:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 800bfd8:	080123f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sp}

0800bfdc <FlashRom::GetSize() const>:
 800bfdc:	4b02      	ldr	r3, [pc, #8]	; (800bfe8 <FlashRom::GetSize() const+0xc>)
 800bfde:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800bfe2:	0280      	lsls	r0, r0, #10
 800bfe4:	4770      	bx	lr
 800bfe6:	bf00      	nop
 800bfe8:	1ffff700 	svcne	0x00fff700

0800bfec <FlashRom::GetSectorSize() const>:
 800bfec:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800bff0:	4770      	bx	lr

0800bff2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800bff2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800bff6:	441a      	add	r2, r3
 800bff8:	4293      	cmp	r3, r2
 800bffa:	d004      	beq.n	800c006 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800bffc:	f851 0b04 	ldr.w	r0, [r1], #4
 800c000:	f843 0b04 	str.w	r0, [r3], #4
 800c004:	e7f8      	b.n	800bff8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800c006:	2200      	movs	r2, #0
 800c008:	9b00      	ldr	r3, [sp, #0]
 800c00a:	2001      	movs	r0, #1
 800c00c:	601a      	str	r2, [r3, #0]
 800c00e:	4770      	bx	lr

0800c010 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800c010:	2000      	movs	r0, #0
 800c012:	b538      	push	{r3, r4, r5, lr}
 800c014:	4c47      	ldr	r4, [pc, #284]	; (800c134 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800c016:	6018      	str	r0, [r3, #0]
 800c018:	6823      	ldr	r3, [r4, #0]
 800c01a:	2b04      	cmp	r3, #4
 800c01c:	f200 8082 	bhi.w	800c124 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c020:	e8df f003 	tbb	[pc, r3]
 800c024:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800c028:	4b430080 	blmi	90cc230 <__exidx_end+0x10b9790>
 800c02c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c030:	6019      	str	r1, [r3, #0]
 800c032:	4b42      	ldr	r3, [pc, #264]	; (800c13c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c034:	601a      	str	r2, [r3, #0]
 800c036:	4b42      	ldr	r3, [pc, #264]	; (800c140 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800c038:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c03c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c040:	4b40      	ldr	r3, [pc, #256]	; (800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c042:	d807      	bhi.n	800c054 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800c044:	2201      	movs	r2, #1
 800c046:	701a      	strb	r2, [r3, #0]
 800c048:	f003 fa64 	bl	800f514 <fmc_bank0_unlock>
 800c04c:	2301      	movs	r3, #1
 800c04e:	6023      	str	r3, [r4, #0]
 800c050:	2000      	movs	r0, #0
 800c052:	e026      	b.n	800c0a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c054:	4a3c      	ldr	r2, [pc, #240]	; (800c148 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800c056:	4291      	cmp	r1, r2
 800c058:	d3f4      	bcc.n	800c044 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800c05a:	2200      	movs	r2, #0
 800c05c:	701a      	strb	r2, [r3, #0]
 800c05e:	f003 fa67 	bl	800f530 <fmc_bank1_unlock>
 800c062:	e7f3      	b.n	800c04c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c064:	4d37      	ldr	r5, [pc, #220]	; (800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c066:	782b      	ldrb	r3, [r5, #0]
 800c068:	b15b      	cbz	r3, 800c082 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800c06a:	f003 fa7f 	bl	800f56c <fmc_bank0_state_get>
 800c06e:	2801      	cmp	r0, #1
 800c070:	d0ee      	beq.n	800c050 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800c072:	7829      	ldrb	r1, [r5, #0]
 800c074:	4b35      	ldr	r3, [pc, #212]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c076:	b939      	cbnz	r1, 800c088 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800c078:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c07a:	f022 0202 	bic.w	r2, r2, #2
 800c07e:	651a      	str	r2, [r3, #80]	; 0x50
 800c080:	e006      	b.n	800c090 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800c082:	f003 fa87 	bl	800f594 <fmc_bank1_state_get>
 800c086:	e7f2      	b.n	800c06e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800c088:	691a      	ldr	r2, [r3, #16]
 800c08a:	f022 0202 	bic.w	r2, r2, #2
 800c08e:	611a      	str	r2, [r3, #16]
 800c090:	4b2a      	ldr	r3, [pc, #168]	; (800c13c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c092:	681b      	ldr	r3, [r3, #0]
 800c094:	b94b      	cbnz	r3, 800c0aa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800c096:	b129      	cbz	r1, 800c0a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800c098:	f003 fa58 	bl	800f54c <fmc_bank0_lock>
 800c09c:	2300      	movs	r3, #0
 800c09e:	2001      	movs	r0, #1
 800c0a0:	6023      	str	r3, [r4, #0]
 800c0a2:	bd38      	pop	{r3, r4, r5, pc}
 800c0a4:	f003 fa5a 	bl	800f55c <fmc_bank1_lock>
 800c0a8:	e7f8      	b.n	800c09c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800c0aa:	2302      	movs	r3, #2
 800c0ac:	e7cf      	b.n	800c04e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800c0ae:	4923      	ldr	r1, [pc, #140]	; (800c13c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800c0b0:	680b      	ldr	r3, [r1, #0]
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d0ca      	beq.n	800c04c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c0b6:	4b23      	ldr	r3, [pc, #140]	; (800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c0b8:	4a1f      	ldr	r2, [pc, #124]	; (800c138 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800c0ba:	7818      	ldrb	r0, [r3, #0]
 800c0bc:	4b23      	ldr	r3, [pc, #140]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c0be:	b190      	cbz	r0, 800c0e6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800c0c0:	6918      	ldr	r0, [r3, #16]
 800c0c2:	f040 0002 	orr.w	r0, r0, #2
 800c0c6:	6118      	str	r0, [r3, #16]
 800c0c8:	6810      	ldr	r0, [r2, #0]
 800c0ca:	6158      	str	r0, [r3, #20]
 800c0cc:	6918      	ldr	r0, [r3, #16]
 800c0ce:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800c0d2:	6118      	str	r0, [r3, #16]
 800c0d4:	680b      	ldr	r3, [r1, #0]
 800c0d6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800c0da:	600b      	str	r3, [r1, #0]
 800c0dc:	6813      	ldr	r3, [r2, #0]
 800c0de:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c0e2:	6013      	str	r3, [r2, #0]
 800c0e4:	e7b2      	b.n	800c04c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800c0e6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c0e8:	f040 0002 	orr.w	r0, r0, #2
 800c0ec:	6518      	str	r0, [r3, #80]	; 0x50
 800c0ee:	6810      	ldr	r0, [r2, #0]
 800c0f0:	6558      	str	r0, [r3, #84]	; 0x54
 800c0f2:	69dd      	ldr	r5, [r3, #28]
 800c0f4:	07ad      	lsls	r5, r5, #30
 800c0f6:	bf48      	it	mi
 800c0f8:	6158      	strmi	r0, [r3, #20]
 800c0fa:	4814      	ldr	r0, [pc, #80]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c0fc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c0fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c102:	6503      	str	r3, [r0, #80]	; 0x50
 800c104:	680b      	ldr	r3, [r1, #0]
 800c106:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800c10a:	600b      	str	r3, [r1, #0]
 800c10c:	6813      	ldr	r3, [r2, #0]
 800c10e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800c112:	e7e6      	b.n	800c0e2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800c114:	4b0b      	ldr	r3, [pc, #44]	; (800c144 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800c116:	781a      	ldrb	r2, [r3, #0]
 800c118:	4b0c      	ldr	r3, [pc, #48]	; (800c14c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800c11a:	b132      	cbz	r2, 800c12a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800c11c:	691a      	ldr	r2, [r3, #16]
 800c11e:	f022 0201 	bic.w	r2, r2, #1
 800c122:	611a      	str	r2, [r3, #16]
 800c124:	2000      	movs	r0, #0
 800c126:	6020      	str	r0, [r4, #0]
 800c128:	e7bb      	b.n	800c0a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800c12a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c12c:	f022 0201 	bic.w	r2, r2, #1
 800c130:	651a      	str	r2, [r3, #80]	; 0x50
 800c132:	e7f7      	b.n	800c124 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800c134:	20001bac 	andcs	r1, r0, ip, lsr #23
 800c138:	20001bb0 			; <UNDEFINED> instruction: 0x20001bb0
 800c13c:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800c140:	1ffff700 	svcne	0x00fff700
 800c144:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c148:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c14c:	40022000 	andmi	r2, r2, r0

0800c150 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800c150:	b570      	push	{r4, r5, r6, lr}
 800c152:	2400      	movs	r4, #0
 800c154:	9804      	ldr	r0, [sp, #16]
 800c156:	6004      	str	r4, [r0, #0]
 800c158:	4c48      	ldr	r4, [pc, #288]	; (800c27c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800c15a:	6820      	ldr	r0, [r4, #0]
 800c15c:	2804      	cmp	r0, #4
 800c15e:	d848      	bhi.n	800c1f2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800c160:	e8df f000 	tbb	[pc, r0]
 800c164:	22847c03 	addcs	r7, r4, #768	; 0x300
 800c168:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800c16c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800c170:	6001      	str	r1, [r0, #0]
 800c172:	4844      	ldr	r0, [pc, #272]	; (800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c174:	6003      	str	r3, [r0, #0]
 800c176:	4b44      	ldr	r3, [pc, #272]	; (800c288 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c178:	601a      	str	r2, [r3, #0]
 800c17a:	4b44      	ldr	r3, [pc, #272]	; (800c28c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800c17c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800c180:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c184:	4b42      	ldr	r3, [pc, #264]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c186:	d807      	bhi.n	800c198 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800c188:	2201      	movs	r2, #1
 800c18a:	701a      	strb	r2, [r3, #0]
 800c18c:	f003 f9c2 	bl	800f514 <fmc_bank0_unlock>
 800c190:	2303      	movs	r3, #3
 800c192:	6023      	str	r3, [r4, #0]
 800c194:	2000      	movs	r0, #0
 800c196:	e026      	b.n	800c1e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c198:	4a3e      	ldr	r2, [pc, #248]	; (800c294 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800c19a:	4291      	cmp	r1, r2
 800c19c:	d3f4      	bcc.n	800c188 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800c19e:	2200      	movs	r2, #0
 800c1a0:	701a      	strb	r2, [r3, #0]
 800c1a2:	f003 f9c5 	bl	800f530 <fmc_bank1_unlock>
 800c1a6:	e7f3      	b.n	800c190 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c1a8:	4d39      	ldr	r5, [pc, #228]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c1aa:	782b      	ldrb	r3, [r5, #0]
 800c1ac:	b15b      	cbz	r3, 800c1c6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800c1ae:	f003 f9dd 	bl	800f56c <fmc_bank0_state_get>
 800c1b2:	2801      	cmp	r0, #1
 800c1b4:	d0ee      	beq.n	800c194 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800c1b6:	7829      	ldrb	r1, [r5, #0]
 800c1b8:	4b37      	ldr	r3, [pc, #220]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c1ba:	b939      	cbnz	r1, 800c1cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800c1bc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c1be:	f022 0201 	bic.w	r2, r2, #1
 800c1c2:	651a      	str	r2, [r3, #80]	; 0x50
 800c1c4:	e006      	b.n	800c1d4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800c1c6:	f003 f9e5 	bl	800f594 <fmc_bank1_state_get>
 800c1ca:	e7f2      	b.n	800c1b2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800c1cc:	691a      	ldr	r2, [r3, #16]
 800c1ce:	f022 0201 	bic.w	r2, r2, #1
 800c1d2:	611a      	str	r2, [r3, #16]
 800c1d4:	4b2c      	ldr	r3, [pc, #176]	; (800c288 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c1d6:	681b      	ldr	r3, [r3, #0]
 800c1d8:	b94b      	cbnz	r3, 800c1ee <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800c1da:	b129      	cbz	r1, 800c1e8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800c1dc:	f003 f9b6 	bl	800f54c <fmc_bank0_lock>
 800c1e0:	2300      	movs	r3, #0
 800c1e2:	2001      	movs	r0, #1
 800c1e4:	6023      	str	r3, [r4, #0]
 800c1e6:	bd70      	pop	{r4, r5, r6, pc}
 800c1e8:	f003 f9b8 	bl	800f55c <fmc_bank1_lock>
 800c1ec:	e7f8      	b.n	800c1e0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800c1ee:	2304      	movs	r3, #4
 800c1f0:	e7cf      	b.n	800c192 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800c1f2:	4a25      	ldr	r2, [pc, #148]	; (800c288 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800c1f4:	6813      	ldr	r3, [r2, #0]
 800c1f6:	2b03      	cmp	r3, #3
 800c1f8:	d91a      	bls.n	800c230 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800c1fa:	4b25      	ldr	r3, [pc, #148]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c1fc:	7819      	ldrb	r1, [r3, #0]
 800c1fe:	4b26      	ldr	r3, [pc, #152]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c200:	b189      	cbz	r1, 800c226 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800c202:	6919      	ldr	r1, [r3, #16]
 800c204:	f041 0101 	orr.w	r1, r1, #1
 800c208:	6119      	str	r1, [r3, #16]
 800c20a:	4d1e      	ldr	r5, [pc, #120]	; (800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c20c:	481c      	ldr	r0, [pc, #112]	; (800c280 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c20e:	6829      	ldr	r1, [r5, #0]
 800c210:	6803      	ldr	r3, [r0, #0]
 800c212:	f851 6b04 	ldr.w	r6, [r1], #4
 800c216:	f843 6b04 	str.w	r6, [r3], #4
 800c21a:	6003      	str	r3, [r0, #0]
 800c21c:	6813      	ldr	r3, [r2, #0]
 800c21e:	6029      	str	r1, [r5, #0]
 800c220:	3b04      	subs	r3, #4
 800c222:	6013      	str	r3, [r2, #0]
 800c224:	e7b4      	b.n	800c190 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c226:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c228:	f041 0101 	orr.w	r1, r1, #1
 800c22c:	6519      	str	r1, [r3, #80]	; 0x50
 800c22e:	e7ec      	b.n	800c20a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800c230:	2b00      	cmp	r3, #0
 800c232:	d0ad      	beq.n	800c190 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c234:	4b16      	ldr	r3, [pc, #88]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c236:	781a      	ldrb	r2, [r3, #0]
 800c238:	4b17      	ldr	r3, [pc, #92]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c23a:	b152      	cbz	r2, 800c252 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800c23c:	691a      	ldr	r2, [r3, #16]
 800c23e:	f042 0201 	orr.w	r2, r2, #1
 800c242:	611a      	str	r2, [r3, #16]
 800c244:	4a0f      	ldr	r2, [pc, #60]	; (800c284 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800c246:	4b0e      	ldr	r3, [pc, #56]	; (800c280 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800c248:	6812      	ldr	r2, [r2, #0]
 800c24a:	681b      	ldr	r3, [r3, #0]
 800c24c:	6812      	ldr	r2, [r2, #0]
 800c24e:	601a      	str	r2, [r3, #0]
 800c250:	e79e      	b.n	800c190 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800c252:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c254:	f042 0201 	orr.w	r2, r2, #1
 800c258:	651a      	str	r2, [r3, #80]	; 0x50
 800c25a:	e7f3      	b.n	800c244 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800c25c:	4b0c      	ldr	r3, [pc, #48]	; (800c290 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800c25e:	781a      	ldrb	r2, [r3, #0]
 800c260:	4b0d      	ldr	r3, [pc, #52]	; (800c298 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800c262:	b132      	cbz	r2, 800c272 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800c264:	691a      	ldr	r2, [r3, #16]
 800c266:	f022 0202 	bic.w	r2, r2, #2
 800c26a:	611a      	str	r2, [r3, #16]
 800c26c:	2000      	movs	r0, #0
 800c26e:	6020      	str	r0, [r4, #0]
 800c270:	e7b9      	b.n	800c1e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800c272:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c274:	f022 0202 	bic.w	r2, r2, #2
 800c278:	651a      	str	r2, [r3, #80]	; 0x50
 800c27a:	e7f7      	b.n	800c26c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800c27c:	20001bac 	andcs	r1, r0, ip, lsr #23
 800c280:	20001ba8 	andcs	r1, r0, r8, lsr #23
 800c284:	20001bb4 			; <UNDEFINED> instruction: 0x20001bb4
 800c288:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 800c28c:	1ffff700 	svcne	0x00fff700
 800c290:	20001bb8 			; <UNDEFINED> instruction: 0x20001bb8
 800c294:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800c298:	40022000 	andmi	r2, r2, r0

0800c29c <net_timers_run>:
 800c29c:	4b05      	ldr	r3, [pc, #20]	; (800c2b4 <net_timers_run+0x18>)
 800c29e:	4a06      	ldr	r2, [pc, #24]	; (800c2b8 <net_timers_run+0x1c>)
 800c2a0:	681b      	ldr	r3, [r3, #0]
 800c2a2:	6811      	ldr	r1, [r2, #0]
 800c2a4:	4299      	cmp	r1, r3
 800c2a6:	d803      	bhi.n	800c2b0 <net_timers_run+0x14>
 800c2a8:	3364      	adds	r3, #100	; 0x64
 800c2aa:	6013      	str	r3, [r2, #0]
 800c2ac:	f001 be98 	b.w	800dfe0 <igmp_timer>
 800c2b0:	4770      	bx	lr
 800c2b2:	bf00      	nop
 800c2b4:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800c2b8:	20001bd8 	ldrdcs	r1, [r0], -r8

0800c2bc <rfc3927>:
 800c2bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2c0:	4605      	mov	r5, r0
 800c2c2:	26ff      	movs	r6, #255	; 0xff
 800c2c4:	4b18      	ldr	r3, [pc, #96]	; (800c328 <rfc3927+0x6c>)
 800c2c6:	4f19      	ldr	r7, [pc, #100]	; (800c32c <rfc3927+0x70>)
 800c2c8:	791a      	ldrb	r2, [r3, #4]
 800c2ca:	78dc      	ldrb	r4, [r3, #3]
 800c2cc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800c330 <rfc3927+0x74>
 800c2d0:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800c2d4:	f8d7 9000 	ldr.w	r9, [r7]
 800c2d8:	f8df b058 	ldr.w	fp, [pc, #88]	; 800c334 <rfc3927+0x78>
 800c2dc:	f8df a058 	ldr.w	sl, [pc, #88]	; 800c338 <rfc3927+0x7c>
 800c2e0:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800c2e4:	4659      	mov	r1, fp
 800c2e6:	4620      	mov	r0, r4
 800c2e8:	f001 fbc8 	bl	800da7c <arp_cache_lookup>
 800c2ec:	b938      	cbnz	r0, 800c2fe <rfc3927+0x42>
 800c2ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c2f2:	2001      	movs	r0, #1
 800c2f4:	602c      	str	r4, [r5, #0]
 800c2f6:	60ac      	str	r4, [r5, #8]
 800c2f8:	606b      	str	r3, [r5, #4]
 800c2fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2fe:	ba24      	rev	r4, r4
 800c300:	3401      	adds	r4, #1
 800c302:	3e01      	subs	r6, #1
 800c304:	ba24      	rev	r4, r4
 800c306:	b2b6      	uxth	r6, r6
 800c308:	4554      	cmp	r4, sl
 800c30a:	bf08      	it	eq
 800c30c:	4644      	moveq	r4, r8
 800c30e:	b12e      	cbz	r6, 800c31c <rfc3927+0x60>
 800c310:	683b      	ldr	r3, [r7, #0]
 800c312:	eba3 0309 	sub.w	r3, r3, r9
 800c316:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c31a:	d3e3      	bcc.n	800c2e4 <rfc3927+0x28>
 800c31c:	2000      	movs	r0, #0
 800c31e:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800c322:	6028      	str	r0, [r5, #0]
 800c324:	e7e9      	b.n	800c2fa <rfc3927+0x3e>
 800c326:	bf00      	nop
 800c328:	20001bdc 	ldrdcs	r1, [r0], -ip
 800c32c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800c330:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800c334:	20001be4 	andcs	r1, r0, r4, ror #23
 800c338:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800c33c <_init_tcb>:
 800c33c:	b510      	push	{r4, lr}
 800c33e:	4603      	mov	r3, r0
 800c340:	2400      	movs	r4, #0
 800c342:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800c346:	4293      	cmp	r3, r2
 800c348:	d10d      	bne.n	800c366 <_init_tcb+0x2a>
 800c34a:	4b08      	ldr	r3, [pc, #32]	; (800c36c <_init_tcb+0x30>)
 800c34c:	f640 3268 	movw	r2, #2920	; 0xb68
 800c350:	681b      	ldr	r3, [r3, #0]
 800c352:	8702      	strh	r2, [r0, #56]	; 0x38
 800c354:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c358:	6283      	str	r3, [r0, #40]	; 0x28
 800c35a:	6243      	str	r3, [r0, #36]	; 0x24
 800c35c:	2301      	movs	r3, #1
 800c35e:	8001      	strh	r1, [r0, #0]
 800c360:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800c364:	bd10      	pop	{r4, pc}
 800c366:	f803 4b01 	strb.w	r4, [r3], #1
 800c36a:	e7ec      	b.n	800c346 <_init_tcb+0xa>
 800c36c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800c370 <memcpy.isra.0>:
 800c370:	3801      	subs	r0, #1
 800c372:	440a      	add	r2, r1
 800c374:	4291      	cmp	r1, r2
 800c376:	d100      	bne.n	800c37a <memcpy.isra.0+0xa>
 800c378:	4770      	bx	lr
 800c37a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c37e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c382:	e7f7      	b.n	800c374 <memcpy.isra.0+0x4>

0800c384 <_bswap32>:
 800c384:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c386:	2204      	movs	r2, #4
 800c388:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800c38c:	4629      	mov	r1, r5
 800c38e:	4604      	mov	r4, r0
 800c390:	eb0d 0002 	add.w	r0, sp, r2
 800c394:	f7ff ffec 	bl	800c370 <memcpy.isra.0>
 800c398:	2204      	movs	r2, #4
 800c39a:	9b01      	ldr	r3, [sp, #4]
 800c39c:	eb0d 0102 	add.w	r1, sp, r2
 800c3a0:	ba1b      	rev	r3, r3
 800c3a2:	4628      	mov	r0, r5
 800c3a4:	9301      	str	r3, [sp, #4]
 800c3a6:	f7ff ffe3 	bl	800c370 <memcpy.isra.0>
 800c3aa:	2204      	movs	r2, #4
 800c3ac:	3426      	adds	r4, #38	; 0x26
 800c3ae:	eb0d 0002 	add.w	r0, sp, r2
 800c3b2:	4621      	mov	r1, r4
 800c3b4:	f7ff ffdc 	bl	800c370 <memcpy.isra.0>
 800c3b8:	2204      	movs	r2, #4
 800c3ba:	9b01      	ldr	r3, [sp, #4]
 800c3bc:	4620      	mov	r0, r4
 800c3be:	ba1b      	rev	r3, r3
 800c3c0:	eb0d 0102 	add.w	r1, sp, r2
 800c3c4:	9301      	str	r3, [sp, #4]
 800c3c6:	f7ff ffd3 	bl	800c370 <memcpy.isra.0>
 800c3ca:	b003      	add	sp, #12
 800c3cc:	bd30      	pop	{r4, r5, pc}
	...

0800c3d0 <_tcp_send_package>:
 800c3d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c3d4:	7a0b      	ldrb	r3, [r1, #8]
 800c3d6:	4605      	mov	r5, r0
 800c3d8:	f013 0f02 	tst.w	r3, #2
 800c3dc:	bf0c      	ite	eq
 800c3de:	f04f 0905 	moveq.w	r9, #5
 800c3e2:	f04f 0906 	movne.w	r9, #6
 800c3e6:	f04f 0800 	mov.w	r8, #0
 800c3ea:	4c4b      	ldr	r4, [pc, #300]	; (800c518 <_tcp_send_package+0x148>)
 800c3ec:	460f      	mov	r7, r1
 800c3ee:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c3f0:	f100 0108 	add.w	r1, r0, #8
 800c3f4:	2206      	movs	r2, #6
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	f7ff ffba 	bl	800c370 <memcpy.isra.0>
 800c3fc:	4a47      	ldr	r2, [pc, #284]	; (800c51c <_tcp_send_package+0x14c>)
 800c3fe:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800c402:	8813      	ldrh	r3, [r2, #0]
 800c404:	b2b6      	uxth	r6, r6
 800c406:	1c59      	adds	r1, r3, #1
 800c408:	8263      	strh	r3, [r4, #18]
 800c40a:	f105 0a04 	add.w	sl, r5, #4
 800c40e:	f106 0314 	add.w	r3, r6, #20
 800c412:	ba5b      	rev16	r3, r3
 800c414:	8011      	strh	r1, [r2, #0]
 800c416:	f104 001e 	add.w	r0, r4, #30
 800c41a:	2204      	movs	r2, #4
 800c41c:	4651      	mov	r1, sl
 800c41e:	8223      	strh	r3, [r4, #16]
 800c420:	f7ff ffa6 	bl	800c370 <memcpy.isra.0>
 800c424:	2114      	movs	r1, #20
 800c426:	f104 000e 	add.w	r0, r4, #14
 800c42a:	f884 8018 	strb.w	r8, [r4, #24]
 800c42e:	f884 8019 	strb.w	r8, [r4, #25]
 800c432:	f001 fe68 	bl	800e106 <net_chksum>
 800c436:	882b      	ldrh	r3, [r5, #0]
 800c438:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800c43c:	8463      	strh	r3, [r4, #34]	; 0x22
 800c43e:	886b      	ldrh	r3, [r5, #2]
 800c440:	8320      	strh	r0, [r4, #24]
 800c442:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c444:	683b      	ldr	r3, [r7, #0]
 800c446:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800c448:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800c44c:	687b      	ldr	r3, [r7, #4]
 800c44e:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800c452:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800c456:	7a3b      	ldrb	r3, [r7, #8]
 800c458:	8622      	strh	r2, [r4, #48]	; 0x30
 800c45a:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c45e:	079b      	lsls	r3, r3, #30
 800c460:	bf48      	it	mi
 800c462:	2302      	movmi	r3, #2
 800c464:	8baa      	ldrh	r2, [r5, #28]
 800c466:	bf44      	itt	mi
 800c468:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800c46c:	2304      	movmi	r3, #4
 800c46e:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c470:	bf41      	itttt	mi
 800c472:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800c476:	4622      	movmi	r2, r4
 800c478:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800c47c:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800c480:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c482:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800c486:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800c48a:	bf58      	it	pl
 800c48c:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800c490:	2b00      	cmp	r3, #0
 800c492:	d13f      	bne.n	800c514 <_tcp_send_package+0x144>
 800c494:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800c496:	4820      	ldr	r0, [pc, #128]	; (800c518 <_tcp_send_package+0x148>)
 800c498:	ba5b      	rev16	r3, r3
 800c49a:	8463      	strh	r3, [r4, #34]	; 0x22
 800c49c:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800c49e:	ba5b      	rev16	r3, r3
 800c4a0:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c4a2:	f7ff ff6f 	bl	800c384 <_bswap32>
 800c4a6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c4a8:	a801      	add	r0, sp, #4
 800c4aa:	ba5b      	rev16	r3, r3
 800c4ac:	8623      	strh	r3, [r4, #48]	; 0x30
 800c4ae:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c4b0:	220c      	movs	r2, #12
 800c4b2:	ba5b      	rev16	r3, r3
 800c4b4:	491a      	ldr	r1, [pc, #104]	; (800c520 <_tcp_send_package+0x150>)
 800c4b6:	86a3      	strh	r3, [r4, #52]	; 0x34
 800c4b8:	f7ff ff5a 	bl	800c370 <memcpy.isra.0>
 800c4bc:	2204      	movs	r2, #4
 800c4be:	4919      	ldr	r1, [pc, #100]	; (800c524 <_tcp_send_package+0x154>)
 800c4c0:	4817      	ldr	r0, [pc, #92]	; (800c520 <_tcp_send_package+0x150>)
 800c4c2:	f7ff ff55 	bl	800c370 <memcpy.isra.0>
 800c4c6:	2204      	movs	r2, #4
 800c4c8:	4651      	mov	r1, sl
 800c4ca:	4817      	ldr	r0, [pc, #92]	; (800c528 <_tcp_send_package+0x158>)
 800c4cc:	f7ff ff50 	bl	800c370 <memcpy.isra.0>
 800c4d0:	2300      	movs	r3, #0
 800c4d2:	77a3      	strb	r3, [r4, #30]
 800c4d4:	2306      	movs	r3, #6
 800c4d6:	f106 010c 	add.w	r1, r6, #12
 800c4da:	77e3      	strb	r3, [r4, #31]
 800c4dc:	4810      	ldr	r0, [pc, #64]	; (800c520 <_tcp_send_package+0x150>)
 800c4de:	ba73      	rev16	r3, r6
 800c4e0:	8423      	strh	r3, [r4, #32]
 800c4e2:	f001 fe10 	bl	800e106 <net_chksum>
 800c4e6:	a901      	add	r1, sp, #4
 800c4e8:	4605      	mov	r5, r0
 800c4ea:	220c      	movs	r2, #12
 800c4ec:	480c      	ldr	r0, [pc, #48]	; (800c520 <_tcp_send_package+0x150>)
 800c4ee:	f7ff ff3f 	bl	800c370 <memcpy.isra.0>
 800c4f2:	4809      	ldr	r0, [pc, #36]	; (800c518 <_tcp_send_package+0x148>)
 800c4f4:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800c4f8:	8665      	strh	r5, [r4, #50]	; 0x32
 800c4fa:	b004      	add	sp, #16
 800c4fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c500:	f003 bd18 	b.w	800ff34 <emac_eth_send>
 800c504:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800c506:	5cc9      	ldrb	r1, [r1, r3]
 800c508:	54d1      	strb	r1, [r2, r3]
 800c50a:	3301      	adds	r3, #1
 800c50c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800c50e:	4299      	cmp	r1, r3
 800c510:	d8f8      	bhi.n	800c504 <_tcp_send_package+0x134>
 800c512:	e7bf      	b.n	800c494 <_tcp_send_package+0xc4>
 800c514:	2300      	movs	r3, #0
 800c516:	e7f9      	b.n	800c50c <_tcp_send_package+0x13c>
 800c518:	200027a0 	andcs	r2, r0, r0, lsr #15
 800c51c:	20001bea 	andcs	r1, r0, sl, ror #23
 800c520:	200027b6 			; <UNDEFINED> instruction: 0x200027b6
 800c524:	20001bc0 	andcs	r1, r0, r0, asr #23
 800c528:	200027ba 			; <UNDEFINED> instruction: 0x200027ba

0800c52c <_send_reset>:
 800c52c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c52e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800c532:	4604      	mov	r4, r0
 800c534:	075a      	lsls	r2, r3, #29
 800c536:	460e      	mov	r6, r1
 800c538:	d421      	bmi.n	800c57e <_send_reset+0x52>
 800c53a:	2204      	movs	r2, #4
 800c53c:	f013 0310 	ands.w	r3, r3, #16
 800c540:	f88d 200c 	strb.w	r2, [sp, #12]
 800c544:	d01d      	beq.n	800c582 <_send_reset+0x56>
 800c546:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800c54a:	4668      	mov	r0, sp
 800c54c:	f7ff ff10 	bl	800c370 <memcpy.isra.0>
 800c550:	9b00      	ldr	r3, [sp, #0]
 800c552:	9301      	str	r3, [sp, #4]
 800c554:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c558:	4668      	mov	r0, sp
 800c55a:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800c55e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800c562:	07db      	lsls	r3, r3, #31
 800c564:	f04f 0204 	mov.w	r2, #4
 800c568:	bf48      	it	mi
 800c56a:	3501      	addmi	r5, #1
 800c56c:	f7ff ff00 	bl	800c370 <memcpy.isra.0>
 800c570:	9b00      	ldr	r3, [sp, #0]
 800c572:	4630      	mov	r0, r6
 800c574:	441d      	add	r5, r3
 800c576:	a901      	add	r1, sp, #4
 800c578:	9502      	str	r5, [sp, #8]
 800c57a:	f7ff ff29 	bl	800c3d0 <_tcp_send_package>
 800c57e:	b004      	add	sp, #16
 800c580:	bd70      	pop	{r4, r5, r6, pc}
 800c582:	9301      	str	r3, [sp, #4]
 800c584:	2314      	movs	r3, #20
 800c586:	f88d 300c 	strb.w	r3, [sp, #12]
 800c58a:	e7e3      	b.n	800c554 <_send_reset+0x28>

0800c58c <tcp_begin>:
 800c58c:	b508      	push	{r3, lr}
 800c58e:	4b0a      	ldr	r3, [pc, #40]	; (800c5b8 <tcp_begin+0x2c>)
 800c590:	4601      	mov	r1, r0
 800c592:	881a      	ldrh	r2, [r3, #0]
 800c594:	4282      	cmp	r2, r0
 800c596:	d102      	bne.n	800c59e <tcp_begin+0x12>
 800c598:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800c59c:	b130      	cbz	r0, 800c5ac <tcp_begin+0x20>
 800c59e:	b12a      	cbz	r2, 800c5ac <tcp_begin+0x20>
 800c5a0:	4806      	ldr	r0, [pc, #24]	; (800c5bc <tcp_begin+0x30>)
 800c5a2:	f002 fae3 	bl	800eb6c <console_error>
 800c5a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c5aa:	bd08      	pop	{r3, pc}
 800c5ac:	4802      	ldr	r0, [pc, #8]	; (800c5b8 <tcp_begin+0x2c>)
 800c5ae:	8019      	strh	r1, [r3, #0]
 800c5b0:	f7ff fec4 	bl	800c33c <_init_tcb>
 800c5b4:	2000      	movs	r0, #0
 800c5b6:	e7f8      	b.n	800c5aa <tcp_begin+0x1e>
 800c5b8:	2000275c 	andcs	r2, r0, ip, asr r7
 800c5bc:	0801241d 	stmdaeq	r1, {r0, r2, r3, r4, sl, sp}

0800c5c0 <tcp_write>:
 800c5c0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800c5c4:	429a      	cmp	r2, r3
 800c5c6:	bf28      	it	cs
 800c5c8:	461a      	movcs	r2, r3
 800c5ca:	2344      	movs	r3, #68	; 0x44
 800c5cc:	b530      	push	{r4, r5, lr}
 800c5ce:	4c0d      	ldr	r4, [pc, #52]	; (800c604 <tcp_write+0x44>)
 800c5d0:	b085      	sub	sp, #20
 800c5d2:	fb03 4400 	mla	r4, r3, r0, r4
 800c5d6:	6963      	ldr	r3, [r4, #20]
 800c5d8:	4615      	mov	r5, r2
 800c5da:	9301      	str	r3, [sp, #4]
 800c5dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c5de:	62e1      	str	r1, [r4, #44]	; 0x2c
 800c5e0:	9302      	str	r3, [sp, #8]
 800c5e2:	2318      	movs	r3, #24
 800c5e4:	8622      	strh	r2, [r4, #48]	; 0x30
 800c5e6:	4620      	mov	r0, r4
 800c5e8:	a901      	add	r1, sp, #4
 800c5ea:	f88d 300c 	strb.w	r3, [sp, #12]
 800c5ee:	f7ff feef 	bl	800c3d0 <_tcp_send_package>
 800c5f2:	2300      	movs	r3, #0
 800c5f4:	6962      	ldr	r2, [r4, #20]
 800c5f6:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c5f8:	442a      	add	r2, r5
 800c5fa:	8623      	strh	r3, [r4, #48]	; 0x30
 800c5fc:	6162      	str	r2, [r4, #20]
 800c5fe:	b005      	add	sp, #20
 800c600:	bd30      	pop	{r4, r5, pc}
 800c602:	bf00      	nop
 800c604:	2000275c 	andcs	r2, r0, ip, asr r7

0800c608 <tcp_read>:
 800c608:	2344      	movs	r3, #68	; 0x44
 800c60a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c60c:	4c1c      	ldr	r4, [pc, #112]	; (800c680 <tcp_read+0x78>)
 800c60e:	b085      	sub	sp, #20
 800c610:	fb03 4400 	mla	r4, r3, r0, r4
 800c614:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c618:	2b07      	cmp	r3, #7
 800c61a:	d112      	bne.n	800c642 <tcp_read+0x3a>
 800c61c:	6963      	ldr	r3, [r4, #20]
 800c61e:	4620      	mov	r0, r4
 800c620:	9301      	str	r3, [sp, #4]
 800c622:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c624:	a901      	add	r1, sp, #4
 800c626:	9302      	str	r3, [sp, #8]
 800c628:	2311      	movs	r3, #17
 800c62a:	f88d 300c 	strb.w	r3, [sp, #12]
 800c62e:	f7ff fecf 	bl	800c3d0 <_tcp_send_package>
 800c632:	2309      	movs	r3, #9
 800c634:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c638:	6963      	ldr	r3, [r4, #20]
 800c63a:	3301      	adds	r3, #1
 800c63c:	6163      	str	r3, [r4, #20]
 800c63e:	2000      	movs	r0, #0
 800c640:	e01b      	b.n	800c67a <tcp_read+0x72>
 800c642:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800c646:	4358      	muls	r0, r3
 800c648:	4a0e      	ldr	r2, [pc, #56]	; (800c684 <tcp_read+0x7c>)
 800c64a:	1817      	adds	r7, r2, r0
 800c64c:	887b      	ldrh	r3, [r7, #2]
 800c64e:	5a15      	ldrh	r5, [r2, r0]
 800c650:	429d      	cmp	r5, r3
 800c652:	d0f4      	beq.n	800c63e <tcp_read+0x36>
 800c654:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800c658:	435d      	muls	r5, r3
 800c65a:	1d06      	adds	r6, r0, #4
 800c65c:	442e      	add	r6, r5
 800c65e:	4416      	add	r6, r2
 800c660:	4428      	add	r0, r5
 800c662:	600e      	str	r6, [r1, #0]
 800c664:	4402      	add	r2, r0
 800c666:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800c66a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c66c:	3301      	adds	r3, #1
 800c66e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800c672:	f003 0301 	and.w	r3, r3, #1
 800c676:	8722      	strh	r2, [r4, #56]	; 0x38
 800c678:	807b      	strh	r3, [r7, #2]
 800c67a:	b005      	add	sp, #20
 800c67c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c67e:	bf00      	nop
 800c680:	2000275c 	andcs	r2, r0, ip, asr r7
 800c684:	20001bec 	andcs	r1, r0, ip, ror #23

0800c688 <memcpy.isra.0>:
 800c688:	3801      	subs	r0, #1
 800c68a:	440a      	add	r2, r1
 800c68c:	4291      	cmp	r1, r2
 800c68e:	d100      	bne.n	800c692 <memcpy.isra.0+0xa>
 800c690:	4770      	bx	lr
 800c692:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c696:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c69a:	e7f7      	b.n	800c68c <memcpy.isra.0+0x4>

0800c69c <net_memcpy>:
 800c69c:	ea41 0300 	orr.w	r3, r1, r0
 800c6a0:	079b      	lsls	r3, r3, #30
 800c6a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6a4:	d115      	bne.n	800c6d2 <net_memcpy+0x36>
 800c6a6:	f022 0303 	bic.w	r3, r2, #3
 800c6aa:	1f04      	subs	r4, r0, #4
 800c6ac:	0895      	lsrs	r5, r2, #2
 800c6ae:	18ce      	adds	r6, r1, r3
 800c6b0:	42b1      	cmp	r1, r6
 800c6b2:	d109      	bne.n	800c6c8 <net_memcpy+0x2c>
 800c6b4:	f06f 0403 	mvn.w	r4, #3
 800c6b8:	fb04 2205 	mla	r2, r4, r5, r2
 800c6bc:	4403      	add	r3, r0
 800c6be:	3b01      	subs	r3, #1
 800c6c0:	440a      	add	r2, r1
 800c6c2:	4291      	cmp	r1, r2
 800c6c4:	d107      	bne.n	800c6d6 <net_memcpy+0x3a>
 800c6c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6c8:	f851 7b04 	ldr.w	r7, [r1], #4
 800c6cc:	f844 7f04 	str.w	r7, [r4, #4]!
 800c6d0:	e7ee      	b.n	800c6b0 <net_memcpy+0x14>
 800c6d2:	4603      	mov	r3, r0
 800c6d4:	e7f3      	b.n	800c6be <net_memcpy+0x22>
 800c6d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c6da:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c6de:	e7f0      	b.n	800c6c2 <net_memcpy+0x26>

0800c6e0 <udp_set_ip>:
 800c6e0:	2204      	movs	r2, #4
 800c6e2:	b513      	push	{r0, r1, r4, lr}
 800c6e4:	4604      	mov	r4, r0
 800c6e6:	6803      	ldr	r3, [r0, #0]
 800c6e8:	eb0d 0102 	add.w	r1, sp, r2
 800c6ec:	4808      	ldr	r0, [pc, #32]	; (800c710 <udp_set_ip+0x30>)
 800c6ee:	9301      	str	r3, [sp, #4]
 800c6f0:	f7ff ffca 	bl	800c688 <memcpy.isra.0>
 800c6f4:	6862      	ldr	r2, [r4, #4]
 800c6f6:	4b07      	ldr	r3, [pc, #28]	; (800c714 <udp_set_ip+0x34>)
 800c6f8:	43d1      	mvns	r1, r2
 800c6fa:	6019      	str	r1, [r3, #0]
 800c6fc:	6823      	ldr	r3, [r4, #0]
 800c6fe:	4013      	ands	r3, r2
 800c700:	4a05      	ldr	r2, [pc, #20]	; (800c718 <udp_set_ip+0x38>)
 800c702:	6013      	str	r3, [r2, #0]
 800c704:	68a2      	ldr	r2, [r4, #8]
 800c706:	4b05      	ldr	r3, [pc, #20]	; (800c71c <udp_set_ip+0x3c>)
 800c708:	601a      	str	r2, [r3, #0]
 800c70a:	b002      	add	sp, #8
 800c70c:	bd10      	pop	{r4, pc}
 800c70e:	bf00      	nop
 800c710:	20008a76 	andcs	r8, r0, r6, ror sl
 800c714:	20002d8c 	andcs	r2, r0, ip, lsl #27
 800c718:	20002d94 	mulcs	r0, r4, sp
 800c71c:	20002d90 	mulcs	r0, r0, sp

0800c720 <udp_bind>:
 800c720:	4a0a      	ldr	r2, [pc, #40]	; (800c74c <udp_bind+0x2c>)
 800c722:	4603      	mov	r3, r0
 800c724:	b510      	push	{r4, lr}
 800c726:	2000      	movs	r0, #0
 800c728:	4614      	mov	r4, r2
 800c72a:	f852 1b04 	ldr.w	r1, [r2], #4
 800c72e:	4299      	cmp	r1, r3
 800c730:	d008      	beq.n	800c744 <udp_bind+0x24>
 800c732:	b141      	cbz	r1, 800c746 <udp_bind+0x26>
 800c734:	3001      	adds	r0, #1
 800c736:	2808      	cmp	r0, #8
 800c738:	d1f7      	bne.n	800c72a <udp_bind+0xa>
 800c73a:	4805      	ldr	r0, [pc, #20]	; (800c750 <udp_bind+0x30>)
 800c73c:	f002 fa16 	bl	800eb6c <console_error>
 800c740:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c744:	bd10      	pop	{r4, pc}
 800c746:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800c74a:	e7fb      	b.n	800c744 <udp_bind+0x24>
 800c74c:	20002d9c 	mulcs	r0, ip, sp
 800c750:	0801243d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, sp}

0800c754 <udp_unbind>:
 800c754:	4a0c      	ldr	r2, [pc, #48]	; (800c788 <udp_unbind+0x34>)
 800c756:	2300      	movs	r3, #0
 800c758:	4611      	mov	r1, r2
 800c75a:	b510      	push	{r4, lr}
 800c75c:	f852 4b04 	ldr.w	r4, [r2], #4
 800c760:	4284      	cmp	r4, r0
 800c762:	d108      	bne.n	800c776 <udp_unbind+0x22>
 800c764:	2000      	movs	r0, #0
 800c766:	f640 3294 	movw	r2, #2964	; 0xb94
 800c76a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800c76e:	4353      	muls	r3, r2
 800c770:	4a06      	ldr	r2, [pc, #24]	; (800c78c <udp_unbind+0x38>)
 800c772:	5098      	str	r0, [r3, r2]
 800c774:	bd10      	pop	{r4, pc}
 800c776:	3301      	adds	r3, #1
 800c778:	2b08      	cmp	r3, #8
 800c77a:	d1ef      	bne.n	800c75c <udp_unbind+0x8>
 800c77c:	4804      	ldr	r0, [pc, #16]	; (800c790 <udp_unbind+0x3c>)
 800c77e:	f002 f9f5 	bl	800eb6c <console_error>
 800c782:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c786:	e7f5      	b.n	800c774 <udp_unbind+0x20>
 800c788:	20002d9c 	mulcs	r0, ip, sp
 800c78c:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc
 800c790:	08012442 	stmdaeq	r1, {r1, r6, sl, sp}

0800c794 <udp_recv>:
 800c794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c798:	4604      	mov	r4, r0
 800c79a:	4698      	mov	r8, r3
 800c79c:	f640 3394 	movw	r3, #2964	; 0xb94
 800c7a0:	435c      	muls	r4, r3
 800c7a2:	4608      	mov	r0, r1
 800c7a4:	4915      	ldr	r1, [pc, #84]	; (800c7fc <udp_recv+0x68>)
 800c7a6:	190f      	adds	r7, r1, r4
 800c7a8:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800c7ac:	5b0b      	ldrh	r3, [r1, r4]
 800c7ae:	4563      	cmp	r3, ip
 800c7b0:	d021      	beq.n	800c7f6 <udp_recv+0x62>
 800c7b2:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800c7b6:	fb03 fc0c 	mul.w	ip, r3, ip
 800c7ba:	eb0c 0604 	add.w	r6, ip, r4
 800c7be:	440e      	add	r6, r1
 800c7c0:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800c7c4:	3404      	adds	r4, #4
 800c7c6:	4295      	cmp	r5, r2
 800c7c8:	bf28      	it	cs
 800c7ca:	4615      	movcs	r5, r2
 800c7cc:	4464      	add	r4, ip
 800c7ce:	462a      	mov	r2, r5
 800c7d0:	4421      	add	r1, r4
 800c7d2:	f7ff ff63 	bl	800c69c <net_memcpy>
 800c7d6:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800c7da:	f8c8 3000 	str.w	r3, [r8]
 800c7de:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800c7e2:	9b06      	ldr	r3, [sp, #24]
 800c7e4:	801a      	strh	r2, [r3, #0]
 800c7e6:	887b      	ldrh	r3, [r7, #2]
 800c7e8:	3301      	adds	r3, #1
 800c7ea:	f003 0301 	and.w	r3, r3, #1
 800c7ee:	807b      	strh	r3, [r7, #2]
 800c7f0:	4628      	mov	r0, r5
 800c7f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c7f6:	2500      	movs	r5, #0
 800c7f8:	e7fa      	b.n	800c7f0 <udp_recv+0x5c>
 800c7fa:	bf00      	nop
 800c7fc:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800c800 <udp_recv2>:
 800c800:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c802:	f640 3594 	movw	r5, #2964	; 0xb94
 800c806:	4368      	muls	r0, r5
 800c808:	4c0f      	ldr	r4, [pc, #60]	; (800c848 <udp_recv2+0x48>)
 800c80a:	1827      	adds	r7, r4, r0
 800c80c:	887d      	ldrh	r5, [r7, #2]
 800c80e:	5a26      	ldrh	r6, [r4, r0]
 800c810:	42ae      	cmp	r6, r5
 800c812:	d017      	beq.n	800c844 <udp_recv2+0x44>
 800c814:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800c818:	fb0c f505 	mul.w	r5, ip, r5
 800c81c:	1d06      	adds	r6, r0, #4
 800c81e:	442e      	add	r6, r5
 800c820:	4405      	add	r5, r0
 800c822:	4426      	add	r6, r4
 800c824:	442c      	add	r4, r5
 800c826:	600e      	str	r6, [r1, #0]
 800c828:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800c82c:	6011      	str	r1, [r2, #0]
 800c82e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800c832:	801a      	strh	r2, [r3, #0]
 800c834:	887b      	ldrh	r3, [r7, #2]
 800c836:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800c83a:	3301      	adds	r3, #1
 800c83c:	f003 0301 	and.w	r3, r3, #1
 800c840:	807b      	strh	r3, [r7, #2]
 800c842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c844:	2000      	movs	r0, #0
 800c846:	e7fc      	b.n	800c842 <udp_recv2+0x42>
 800c848:	20002dbc 			; <UNDEFINED> instruction: 0x20002dbc

0800c84c <udp_send>:
 800c84c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c850:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c984 <udp_send+0x138>
 800c854:	461c      	mov	r4, r3
 800c856:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800c85a:	4607      	mov	r7, r0
 800c85c:	4688      	mov	r8, r1
 800c85e:	4616      	mov	r6, r2
 800c860:	2b00      	cmp	r3, #0
 800c862:	f000 808b 	beq.w	800c97c <udp_send+0x130>
 800c866:	1c63      	adds	r3, r4, #1
 800c868:	d141      	bne.n	800c8ee <udp_send+0xa2>
 800c86a:	4a47      	ldr	r2, [pc, #284]	; (800c988 <udp_send+0x13c>)
 800c86c:	2307      	movs	r3, #7
 800c86e:	4611      	mov	r1, r2
 800c870:	20ff      	movs	r0, #255	; 0xff
 800c872:	e001      	b.n	800c878 <udp_send+0x2c>
 800c874:	f802 0b01 	strb.w	r0, [r2], #1
 800c878:	3b01      	subs	r3, #1
 800c87a:	d1fb      	bne.n	800c874 <udp_send+0x28>
 800c87c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c880:	83cb      	strh	r3, [r1, #30]
 800c882:	840b      	strh	r3, [r1, #32]
 800c884:	2500      	movs	r5, #0
 800c886:	f8df a104 	ldr.w	sl, [pc, #260]	; 800c98c <udp_send+0x140>
 800c88a:	4c3f      	ldr	r4, [pc, #252]	; (800c988 <udp_send+0x13c>)
 800c88c:	f8ba 3000 	ldrh.w	r3, [sl]
 800c890:	2114      	movs	r1, #20
 800c892:	8263      	strh	r3, [r4, #18]
 800c894:	f106 031c 	add.w	r3, r6, #28
 800c898:	ba5b      	rev16	r3, r3
 800c89a:	f104 000e 	add.w	r0, r4, #14
 800c89e:	8223      	strh	r3, [r4, #16]
 800c8a0:	8325      	strh	r5, [r4, #24]
 800c8a2:	f001 fc30 	bl	800e106 <net_chksum>
 800c8a6:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800c8aa:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800c8ae:	ba5b      	rev16	r3, r3
 800c8b0:	8463      	strh	r3, [r4, #34]	; 0x22
 800c8b2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800c8b6:	4632      	mov	r2, r6
 800c8b8:	ba5b      	rev16	r3, r3
 800c8ba:	84a3      	strh	r3, [r4, #36]	; 0x24
 800c8bc:	f106 0308 	add.w	r3, r6, #8
 800c8c0:	ba5b      	rev16	r3, r3
 800c8c2:	bf28      	it	cs
 800c8c4:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800c8c8:	4641      	mov	r1, r8
 800c8ca:	8320      	strh	r0, [r4, #24]
 800c8cc:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800c8d0:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c8d2:	f7ff fee3 	bl	800c69c <net_memcpy>
 800c8d6:	4620      	mov	r0, r4
 800c8d8:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800c8dc:	f003 fb2a 	bl	800ff34 <emac_eth_send>
 800c8e0:	f8ba 3000 	ldrh.w	r3, [sl]
 800c8e4:	4628      	mov	r0, r5
 800c8e6:	3301      	adds	r3, #1
 800c8e8:	f8aa 3000 	strh.w	r3, [sl]
 800c8ec:	e037      	b.n	800c95e <udp_send+0x112>
 800c8ee:	4b28      	ldr	r3, [pc, #160]	; (800c990 <udp_send+0x144>)
 800c8f0:	681b      	ldr	r3, [r3, #0]
 800c8f2:	43a3      	bics	r3, r4
 800c8f4:	d10f      	bne.n	800c916 <udp_send+0xca>
 800c8f6:	2307      	movs	r3, #7
 800c8f8:	21ff      	movs	r1, #255	; 0xff
 800c8fa:	4a23      	ldr	r2, [pc, #140]	; (800c988 <udp_send+0x13c>)
 800c8fc:	e001      	b.n	800c902 <udp_send+0xb6>
 800c8fe:	f802 1b01 	strb.w	r1, [r2], #1
 800c902:	3b01      	subs	r3, #1
 800c904:	d1fb      	bne.n	800c8fe <udp_send+0xb2>
 800c906:	2204      	movs	r2, #4
 800c908:	4822      	ldr	r0, [pc, #136]	; (800c994 <udp_send+0x148>)
 800c90a:	eb0d 0102 	add.w	r1, sp, r2
 800c90e:	9401      	str	r4, [sp, #4]
 800c910:	f7ff feba 	bl	800c688 <memcpy.isra.0>
 800c914:	e7b6      	b.n	800c884 <udp_send+0x38>
 800c916:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800c91a:	2be0      	cmp	r3, #224	; 0xe0
 800c91c:	d10e      	bne.n	800c93c <udp_send+0xf0>
 800c91e:	491e      	ldr	r1, [pc, #120]	; (800c998 <udp_send+0x14c>)
 800c920:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800c924:	70cb      	strb	r3, [r1, #3]
 800c926:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800c92a:	710b      	strb	r3, [r1, #4]
 800c92c:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800c930:	2206      	movs	r2, #6
 800c932:	4815      	ldr	r0, [pc, #84]	; (800c988 <udp_send+0x13c>)
 800c934:	714b      	strb	r3, [r1, #5]
 800c936:	f7ff fea7 	bl	800c688 <memcpy.isra.0>
 800c93a:	e7e4      	b.n	800c906 <udp_send+0xba>
 800c93c:	4b17      	ldr	r3, [pc, #92]	; (800c99c <udp_send+0x150>)
 800c93e:	681b      	ldr	r3, [r3, #0]
 800c940:	43a3      	bics	r3, r4
 800c942:	d00f      	beq.n	800c964 <udp_send+0x118>
 800c944:	4d16      	ldr	r5, [pc, #88]	; (800c9a0 <udp_send+0x154>)
 800c946:	4910      	ldr	r1, [pc, #64]	; (800c988 <udp_send+0x13c>)
 800c948:	6828      	ldr	r0, [r5, #0]
 800c94a:	f001 f897 	bl	800da7c <arp_cache_lookup>
 800c94e:	682b      	ldr	r3, [r5, #0]
 800c950:	4298      	cmp	r0, r3
 800c952:	d0d8      	beq.n	800c906 <udp_send+0xba>
 800c954:	4813      	ldr	r0, [pc, #76]	; (800c9a4 <udp_send+0x158>)
 800c956:	f002 f909 	bl	800eb6c <console_error>
 800c95a:	f06f 0002 	mvn.w	r0, #2
 800c95e:	b002      	add	sp, #8
 800c960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c964:	4620      	mov	r0, r4
 800c966:	4908      	ldr	r1, [pc, #32]	; (800c988 <udp_send+0x13c>)
 800c968:	f001 f888 	bl	800da7c <arp_cache_lookup>
 800c96c:	42a0      	cmp	r0, r4
 800c96e:	d0ca      	beq.n	800c906 <udp_send+0xba>
 800c970:	480d      	ldr	r0, [pc, #52]	; (800c9a8 <udp_send+0x15c>)
 800c972:	f002 f8fb 	bl	800eb6c <console_error>
 800c976:	f06f 0001 	mvn.w	r0, #1
 800c97a:	e7f0      	b.n	800c95e <udp_send+0x112>
 800c97c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c980:	e7ed      	b.n	800c95e <udp_send+0x112>
 800c982:	bf00      	nop
 800c984:	20002d9c 	mulcs	r0, ip, sp
 800c988:	20008a5c 	andcs	r8, r0, ip, asr sl
 800c98c:	20002d98 	mulcs	r0, r8, sp
 800c990:	20002d8c 	andcs	r2, r0, ip, lsl #27
 800c994:	20008a7a 	andcs	r8, r0, sl, ror sl
 800c998:	20000014 	andcs	r0, r0, r4, lsl r0
 800c99c:	20002d94 	mulcs	r0, r4, sp
 800c9a0:	20002d90 	mulcs	r0, r0, sp
 800c9a4:	0801244a 	stmdaeq	r1, {r1, r3, r6, sl, sp}
 800c9a8:	08012470 	stmdaeq	r1, {r4, r5, r6, sl, sp}

0800c9ac <strlen>:
 800c9ac:	4603      	mov	r3, r0
 800c9ae:	461a      	mov	r2, r3
 800c9b0:	7811      	ldrb	r1, [r2, #0]
 800c9b2:	3301      	adds	r3, #1
 800c9b4:	2900      	cmp	r1, #0
 800c9b6:	d1fa      	bne.n	800c9ae <strlen+0x2>
 800c9b8:	1a10      	subs	r0, r2, r0
 800c9ba:	4770      	bx	lr

0800c9bc <strcmp>:
 800c9bc:	1e43      	subs	r3, r0, #1
 800c9be:	3901      	subs	r1, #1
 800c9c0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c9c4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800c9c8:	4290      	cmp	r0, r2
 800c9ca:	d102      	bne.n	800c9d2 <strcmp+0x16>
 800c9cc:	2800      	cmp	r0, #0
 800c9ce:	d1f7      	bne.n	800c9c0 <strcmp+0x4>
 800c9d0:	4770      	bx	lr
 800c9d2:	1a80      	subs	r0, r0, r2
 800c9d4:	4770      	bx	lr

0800c9d6 <strcpy.isra.0>:
 800c9d6:	3801      	subs	r0, #1
 800c9d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c9dc:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	d1f9      	bne.n	800c9d8 <strcpy.isra.0+0x2>
 800c9e4:	4770      	bx	lr

0800c9e6 <strcat.isra.0>:
 800c9e6:	b538      	push	{r3, r4, r5, lr}
 800c9e8:	4604      	mov	r4, r0
 800c9ea:	460d      	mov	r5, r1
 800c9ec:	f7ff ffde 	bl	800c9ac <strlen>
 800c9f0:	4629      	mov	r1, r5
 800c9f2:	4420      	add	r0, r4
 800c9f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9f8:	f7ff bfed 	b.w	800c9d6 <strcpy.isra.0>

0800c9fc <MDNS::MDNS()>:
 800c9fc:	b513      	push	{r0, r1, r4, lr}
 800c9fe:	4604      	mov	r4, r0
 800ca00:	a901      	add	r1, sp, #4
 800ca02:	4804      	ldr	r0, [pc, #16]	; (800ca14 <MDNS::MDNS()+0x18>)
 800ca04:	f002 fa12 	bl	800ee2c <inet_aton>
 800ca08:	4620      	mov	r0, r4
 800ca0a:	4b03      	ldr	r3, [pc, #12]	; (800ca18 <MDNS::MDNS()+0x1c>)
 800ca0c:	9a01      	ldr	r2, [sp, #4]
 800ca0e:	601a      	str	r2, [r3, #0]
 800ca10:	b002      	add	sp, #8
 800ca12:	bd10      	pop	{r4, pc}
 800ca14:	08012490 	stmdaeq	r1, {r4, r7, sl, sp}
 800ca18:	20009050 	andcs	r9, r0, r0, asr r0

0800ca1c <MDNS::SetName(char const*)>:
 800ca1c:	b538      	push	{r3, r4, r5, lr}
 800ca1e:	4d0b      	ldr	r5, [pc, #44]	; (800ca4c <MDNS::SetName(char const*)+0x30>)
 800ca20:	460c      	mov	r4, r1
 800ca22:	6828      	ldr	r0, [r5, #0]
 800ca24:	b108      	cbz	r0, 800ca2a <MDNS::SetName(char const*)+0xe>
 800ca26:	f002 f9fb 	bl	800ee20 <operator delete[](void*)>
 800ca2a:	4620      	mov	r0, r4
 800ca2c:	f7ff ffbe 	bl	800c9ac <strlen>
 800ca30:	3007      	adds	r0, #7
 800ca32:	f002 f9f9 	bl	800ee28 <operator new[](unsigned int)>
 800ca36:	4621      	mov	r1, r4
 800ca38:	6028      	str	r0, [r5, #0]
 800ca3a:	f7ff ffcc 	bl	800c9d6 <strcpy.isra.0>
 800ca3e:	6828      	ldr	r0, [r5, #0]
 800ca40:	4903      	ldr	r1, [pc, #12]	; (800ca50 <MDNS::SetName(char const*)+0x34>)
 800ca42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca46:	f7ff bfce 	b.w	800c9e6 <strcat.isra.0>
 800ca4a:	bf00      	nop
 800ca4c:	20009480 	andcs	r9, r0, r0, lsl #9
 800ca50:	080124a0 	stmdaeq	r1, {r5, r7, sl, sp}

0800ca54 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800ca54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca58:	f04f 0e00 	mov.w	lr, #0
 800ca5c:	262e      	movs	r6, #46	; 0x2e
 800ca5e:	4675      	mov	r5, lr
 800ca60:	4694      	mov	ip, r2
 800ca62:	4f1d      	ldr	r7, [pc, #116]	; (800cad8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800ca64:	4a1d      	ldr	r2, [pc, #116]	; (800cadc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800ca66:	780b      	ldrb	r3, [r1, #0]
 800ca68:	1c68      	adds	r0, r5, #1
 800ca6a:	b383      	cbz	r3, 800cace <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800ca6c:	2b3f      	cmp	r3, #63	; 0x3f
 800ca6e:	d91d      	bls.n	800caac <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800ca70:	f1be 0f00 	cmp.w	lr, #0
 800ca74:	bf08      	it	eq
 800ca76:	4605      	moveq	r5, r0
 800ca78:	2000      	movs	r0, #0
 800ca7a:	7849      	ldrb	r1, [r1, #1]
 800ca7c:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800ca80:	430b      	orrs	r3, r1
 800ca82:	6811      	ldr	r1, [r2, #0]
 800ca84:	5ccc      	ldrb	r4, [r1, r3]
 800ca86:	3301      	adds	r3, #1
 800ca88:	440b      	add	r3, r1
 800ca8a:	42a0      	cmp	r0, r4
 800ca8c:	5c19      	ldrb	r1, [r3, r0]
 800ca8e:	d309      	bcc.n	800caa4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800ca90:	f04f 0e01 	mov.w	lr, #1
 800ca94:	1919      	adds	r1, r3, r4
 800ca96:	4464      	add	r4, ip
 800ca98:	780b      	ldrb	r3, [r1, #0]
 800ca9a:	b10b      	cbz	r3, 800caa0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800ca9c:	f804 6b01 	strb.w	r6, [r4], #1
 800caa0:	46a4      	mov	ip, r4
 800caa2:	e7e0      	b.n	800ca66 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800caa4:	f80c 1000 	strb.w	r1, [ip, r0]
 800caa8:	3001      	adds	r0, #1
 800caaa:	e7ee      	b.n	800ca8a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800caac:	4688      	mov	r8, r1
 800caae:	eb0c 0403 	add.w	r4, ip, r3
 800cab2:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800cab6:	f80c 9b01 	strb.w	r9, [ip], #1
 800caba:	4564      	cmp	r4, ip
 800cabc:	d1f9      	bne.n	800cab2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800cabe:	f103 0c01 	add.w	ip, r3, #1
 800cac2:	4461      	add	r1, ip
 800cac4:	f1be 0f00 	cmp.w	lr, #0
 800cac8:	d1e6      	bne.n	800ca98 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800caca:	18c5      	adds	r5, r0, r3
 800cacc:	e7e4      	b.n	800ca98 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800cace:	f88c 3000 	strb.w	r3, [ip]
 800cad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cad6:	bf00      	nop
 800cad8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800cadc:	20009484 	andcs	r9, r0, r4, lsl #9

0800cae0 <MDNS::FindFirstDotFromRight(char const*) const>:
 800cae0:	b510      	push	{r4, lr}
 800cae2:	4608      	mov	r0, r1
 800cae4:	460c      	mov	r4, r1
 800cae6:	f7ff ff61 	bl	800c9ac <strlen>
 800caea:	4420      	add	r0, r4
 800caec:	42a0      	cmp	r0, r4
 800caee:	d903      	bls.n	800caf8 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800caf0:	f810 3901 	ldrb.w	r3, [r0], #-1
 800caf4:	2b2e      	cmp	r3, #46	; 0x2e
 800caf6:	d1f9      	bne.n	800caec <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800caf8:	3001      	adds	r0, #1
 800cafa:	bd10      	pop	{r4, pc}

0800cafc <MDNS::WriteDnsName(char const*, char*, bool)>:
 800cafc:	4610      	mov	r0, r2
 800cafe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb00:	460f      	mov	r7, r1
 800cb02:	1c44      	adds	r4, r0, #1
 800cb04:	463d      	mov	r5, r7
 800cb06:	f817 6b01 	ldrb.w	r6, [r7], #1
 800cb0a:	b126      	cbz	r6, 800cb16 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800cb0c:	2e2e      	cmp	r6, #46	; 0x2e
 800cb0e:	d002      	beq.n	800cb16 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800cb10:	f804 6b01 	strb.w	r6, [r4], #1
 800cb14:	e7f6      	b.n	800cb04 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800cb16:	1a69      	subs	r1, r5, r1
 800cb18:	7001      	strb	r1, [r0, #0]
 800cb1a:	7829      	ldrb	r1, [r5, #0]
 800cb1c:	b921      	cbnz	r1, 800cb28 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800cb1e:	b10b      	cbz	r3, 800cb24 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800cb20:	f804 1b01 	strb.w	r1, [r4], #1
 800cb24:	1aa0      	subs	r0, r4, r2
 800cb26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb28:	4620      	mov	r0, r4
 800cb2a:	1c69      	adds	r1, r5, #1
 800cb2c:	e7e8      	b.n	800cb00 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800cb30 <MDNS::CreateAnswerLocalIpAddress()>:
 800cb30:	2384      	movs	r3, #132	; 0x84
 800cb32:	b510      	push	{r4, lr}
 800cb34:	4c0f      	ldr	r4, [pc, #60]	; (800cb74 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800cb36:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800cb3a:	80e3      	strh	r3, [r4, #6]
 800cb3c:	2300      	movs	r3, #0
 800cb3e:	490e      	ldr	r1, [pc, #56]	; (800cb78 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800cb40:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800cb44:	6809      	ldr	r1, [r1, #0]
 800cb46:	f104 0210 	add.w	r2, r4, #16
 800cb4a:	2301      	movs	r3, #1
 800cb4c:	f7ff ffd6 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cb50:	490a      	ldr	r1, [pc, #40]	; (800cb7c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800cb52:	1813      	adds	r3, r2, r0
 800cb54:	5011      	str	r1, [r2, r0]
 800cb56:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800cb5a:	605a      	str	r2, [r3, #4]
 800cb5c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cb60:	811a      	strh	r2, [r3, #8]
 800cb62:	4a07      	ldr	r2, [pc, #28]	; (800cb80 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800cb64:	6812      	ldr	r2, [r2, #0]
 800cb66:	6912      	ldr	r2, [r2, #16]
 800cb68:	f8c3 200a 	str.w	r2, [r3, #10]
 800cb6c:	1b1b      	subs	r3, r3, r4
 800cb6e:	330a      	adds	r3, #10
 800cb70:	6023      	str	r3, [r4, #0]
 800cb72:	bd10      	pop	{r4, pc}
 800cb74:	20009054 	andcs	r9, r0, r4, asr r0
 800cb78:	20009480 	andcs	r9, r0, r0, lsl #9
 800cb7c:	01800100 	orreq	r0, r0, r0, lsl #2
 800cb80:	20009488 	andcs	r9, r0, r8, lsl #9

0800cb84 <MDNS::Start()>:
 800cb84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb86:	4c1e      	ldr	r4, [pc, #120]	; (800cc00 <MDNS::Start()+0x7c>)
 800cb88:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800cb8c:	4605      	mov	r5, r0
 800cb8e:	6820      	ldr	r0, [r4, #0]
 800cb90:	f000 fb2a 	bl	800d1e8 <Network::Begin(unsigned short)>
 800cb94:	4e1b      	ldr	r6, [pc, #108]	; (800cc04 <MDNS::Start()+0x80>)
 800cb96:	4f1c      	ldr	r7, [pc, #112]	; (800cc08 <MDNS::Start()+0x84>)
 800cb98:	4601      	mov	r1, r0
 800cb9a:	6030      	str	r0, [r6, #0]
 800cb9c:	683a      	ldr	r2, [r7, #0]
 800cb9e:	6820      	ldr	r0, [r4, #0]
 800cba0:	f000 fb33 	bl	800d20a <Network::JoinGroup(int, unsigned int)>
 800cba4:	4b19      	ldr	r3, [pc, #100]	; (800cc0c <MDNS::Start()+0x88>)
 800cba6:	681b      	ldr	r3, [r3, #0]
 800cba8:	b923      	cbnz	r3, 800cbb4 <MDNS::Start()+0x30>
 800cbaa:	6821      	ldr	r1, [r4, #0]
 800cbac:	4628      	mov	r0, r5
 800cbae:	311c      	adds	r1, #28
 800cbb0:	f7ff ff34 	bl	800ca1c <MDNS::SetName(char const*)>
 800cbb4:	4628      	mov	r0, r5
 800cbb6:	f7ff ffbb 	bl	800cb30 <MDNS::CreateAnswerLocalIpAddress()>
 800cbba:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cbbe:	4914      	ldr	r1, [pc, #80]	; (800cc10 <MDNS::Start()+0x8c>)
 800cbc0:	7830      	ldrb	r0, [r6, #0]
 800cbc2:	f851 2b04 	ldr.w	r2, [r1], #4
 800cbc6:	9300      	str	r3, [sp, #0]
 800cbc8:	b292      	uxth	r2, r2
 800cbca:	683b      	ldr	r3, [r7, #0]
 800cbcc:	f7ff fe3e 	bl	800c84c <udp_send>
 800cbd0:	223f      	movs	r2, #63	; 0x3f
 800cbd2:	6820      	ldr	r0, [r4, #0]
 800cbd4:	4c0f      	ldr	r4, [pc, #60]	; (800cc14 <MDNS::Start()+0x90>)
 800cbd6:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800cbda:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800cbde:	b929      	cbnz	r1, 800cbec <MDNS::Start()+0x68>
 800cbe0:	441a      	add	r2, r3
 800cbe2:	4293      	cmp	r3, r2
 800cbe4:	d006      	beq.n	800cbf4 <MDNS::Start()+0x70>
 800cbe6:	f803 1b01 	strb.w	r1, [r3], #1
 800cbea:	e7fa      	b.n	800cbe2 <MDNS::Start()+0x5e>
 800cbec:	3a01      	subs	r2, #1
 800cbee:	f803 1b01 	strb.w	r1, [r3], #1
 800cbf2:	d1f2      	bne.n	800cbda <MDNS::Start()+0x56>
 800cbf4:	2300      	movs	r3, #0
 800cbf6:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800cbfa:	b003      	add	sp, #12
 800cbfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbfe:	bf00      	nop
 800cc00:	20009488 	andcs	r9, r0, r8, lsl #9
 800cc04:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cc08:	20009050 	andcs	r9, r0, r0, asr r0
 800cc0c:	20009480 	andcs	r9, r0, r0, lsl #9
 800cc10:	20009054 	andcs	r9, r0, r4, asr r0
 800cc14:	080124a0 	stmdaeq	r1, {r5, r7, sl, sp}

0800cc18 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800cc18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc1c:	4c1b      	ldr	r4, [pc, #108]	; (800cc8c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800cc1e:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800cc22:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800cc26:	2300      	movs	r3, #0
 800cc28:	f854 100c 	ldr.w	r1, [r4, ip]
 800cc2c:	4607      	mov	r7, r0
 800cc2e:	f7ff ff65 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc32:	2301      	movs	r3, #1
 800cc34:	7bac      	ldrb	r4, [r5, #14]
 800cc36:	4616      	mov	r6, r2
 800cc38:	4915      	ldr	r1, [pc, #84]	; (800cc90 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800cc3a:	4402      	add	r2, r0
 800cc3c:	4815      	ldr	r0, [pc, #84]	; (800cc94 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800cc3e:	429c      	cmp	r4, r3
 800cc40:	bf18      	it	ne
 800cc42:	4601      	movne	r1, r0
 800cc44:	4638      	mov	r0, r7
 800cc46:	f7ff ff59 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc4a:	4b13      	ldr	r3, [pc, #76]	; (800cc98 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800cc4c:	1814      	adds	r4, r2, r0
 800cc4e:	5013      	str	r3, [r2, r0]
 800cc50:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cc54:	6063      	str	r3, [r4, #4]
 800cc56:	4b11      	ldr	r3, [pc, #68]	; (800cc9c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800cc58:	f8d3 8000 	ldr.w	r8, [r3]
 800cc5c:	4640      	mov	r0, r8
 800cc5e:	f7ff fea5 	bl	800c9ac <strlen>
 800cc62:	f100 0308 	add.w	r3, r0, #8
 800cc66:	ba5b      	rev16	r3, r3
 800cc68:	8123      	strh	r3, [r4, #8]
 800cc6a:	2300      	movs	r3, #0
 800cc6c:	f8c4 300a 	str.w	r3, [r4, #10]
 800cc70:	89ab      	ldrh	r3, [r5, #12]
 800cc72:	f104 0210 	add.w	r2, r4, #16
 800cc76:	ba5b      	rev16	r3, r3
 800cc78:	81e3      	strh	r3, [r4, #14]
 800cc7a:	4641      	mov	r1, r8
 800cc7c:	2301      	movs	r3, #1
 800cc7e:	4638      	mov	r0, r7
 800cc80:	f7ff ff3c 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cc84:	4410      	add	r0, r2
 800cc86:	1b80      	subs	r0, r0, r6
 800cc88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc8c:	20009258 	andcs	r9, r0, r8, asr r2
 800cc90:	0801249c 	stmdaeq	r1, {r2, r3, r4, r7, sl, sp}
 800cc94:	080124b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp}
 800cc98:	01802100 	orreq	r2, r0, r0, lsl #2
 800cc9c:	20009480 	andcs	r9, r0, r0, lsl #9

0800cca0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800cca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cca4:	4e19      	ldr	r6, [pc, #100]	; (800cd0c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800cca6:	010f      	lsls	r7, r1, #4
 800cca8:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800ccac:	2300      	movs	r3, #0
 800ccae:	59f1      	ldr	r1, [r6, r7]
 800ccb0:	4604      	mov	r4, r0
 800ccb2:	f7ff ff23 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccb6:	2301      	movs	r3, #1
 800ccb8:	7bae      	ldrb	r6, [r5, #14]
 800ccba:	4690      	mov	r8, r2
 800ccbc:	4914      	ldr	r1, [pc, #80]	; (800cd10 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800ccbe:	4402      	add	r2, r0
 800ccc0:	4814      	ldr	r0, [pc, #80]	; (800cd14 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800ccc2:	429e      	cmp	r6, r3
 800ccc4:	bf18      	it	ne
 800ccc6:	4601      	movne	r1, r0
 800ccc8:	4620      	mov	r0, r4
 800ccca:	f7ff ff17 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800ccce:	4b12      	ldr	r3, [pc, #72]	; (800cd18 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800ccd0:	1816      	adds	r6, r2, r0
 800ccd2:	5013      	str	r3, [r2, r0]
 800ccd4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800ccd8:	68a8      	ldr	r0, [r5, #8]
 800ccda:	6073      	str	r3, [r6, #4]
 800ccdc:	f106 040b 	add.w	r4, r6, #11
 800cce0:	b938      	cbnz	r0, 800ccf2 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800cce2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cce6:	72b0      	strb	r0, [r6, #10]
 800cce8:	8133      	strh	r3, [r6, #8]
 800ccea:	eba4 0008 	sub.w	r0, r4, r8
 800ccee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccf2:	f7ff fe5b 	bl	800c9ac <strlen>
 800ccf6:	4607      	mov	r7, r0
 800ccf8:	1c43      	adds	r3, r0, #1
 800ccfa:	72b0      	strb	r0, [r6, #10]
 800ccfc:	ba5b      	rev16	r3, r3
 800ccfe:	4620      	mov	r0, r4
 800cd00:	68a9      	ldr	r1, [r5, #8]
 800cd02:	8133      	strh	r3, [r6, #8]
 800cd04:	f7ff fe67 	bl	800c9d6 <strcpy.isra.0>
 800cd08:	443c      	add	r4, r7
 800cd0a:	e7ee      	b.n	800ccea <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800cd0c:	20009258 	andcs	r9, r0, r8, asr r2
 800cd10:	0801249c 	stmdaeq	r1, {r2, r3, r4, r7, sl, sp}
 800cd14:	080124b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp}
 800cd18:	01801000 	orreq	r1, r0, r0

0800cd1c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800cd1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cd20:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800cd84 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800cd24:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800cd28:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800cd2c:	6869      	ldr	r1, [r5, #4]
 800cd2e:	2301      	movs	r3, #1
 800cd30:	4607      	mov	r7, r0
 800cd32:	f7ff fee3 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd36:	4b14      	ldr	r3, [pc, #80]	; (800cd88 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800cd38:	f858 8009 	ldr.w	r8, [r8, r9]
 800cd3c:	5013      	str	r3, [r2, r0]
 800cd3e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cd42:	1816      	adds	r6, r2, r0
 800cd44:	6073      	str	r3, [r6, #4]
 800cd46:	4640      	mov	r0, r8
 800cd48:	4614      	mov	r4, r2
 800cd4a:	f7ff fe2f 	bl	800c9ac <strlen>
 800cd4e:	f100 030d 	add.w	r3, r0, #13
 800cd52:	ba5b      	rev16	r3, r3
 800cd54:	4641      	mov	r1, r8
 800cd56:	8133      	strh	r3, [r6, #8]
 800cd58:	f106 020a 	add.w	r2, r6, #10
 800cd5c:	2300      	movs	r3, #0
 800cd5e:	4638      	mov	r0, r7
 800cd60:	f7ff fecc 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd64:	2301      	movs	r3, #1
 800cd66:	4402      	add	r2, r0
 800cd68:	7bad      	ldrb	r5, [r5, #14]
 800cd6a:	4808      	ldr	r0, [pc, #32]	; (800cd8c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800cd6c:	4908      	ldr	r1, [pc, #32]	; (800cd90 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800cd6e:	429d      	cmp	r5, r3
 800cd70:	bf18      	it	ne
 800cd72:	4601      	movne	r1, r0
 800cd74:	4638      	mov	r0, r7
 800cd76:	f7ff fec1 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cd7a:	4410      	add	r0, r2
 800cd7c:	1b00      	subs	r0, r0, r4
 800cd7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cd82:	bf00      	nop
 800cd84:	20009258 	andcs	r9, r0, r8, asr r2
 800cd88:	01000c00 	tsteq	r0, r0, lsl #24
 800cd8c:	080124b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp}
 800cd90:	0801249c 	stmdaeq	r1, {r2, r3, r4, r7, sl, sp}

0800cd94 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800cd94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd96:	460f      	mov	r7, r1
 800cd98:	2301      	movs	r3, #1
 800cd9a:	490f      	ldr	r1, [pc, #60]	; (800cdd8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800cd9c:	4606      	mov	r6, r0
 800cd9e:	f7ff fead 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cda2:	4b0e      	ldr	r3, [pc, #56]	; (800cddc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800cda4:	490e      	ldr	r1, [pc, #56]	; (800cde0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800cda6:	5013      	str	r3, [r2, r0]
 800cda8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800cdac:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800cdb0:	684f      	ldr	r7, [r1, #4]
 800cdb2:	1815      	adds	r5, r2, r0
 800cdb4:	606b      	str	r3, [r5, #4]
 800cdb6:	4638      	mov	r0, r7
 800cdb8:	4614      	mov	r4, r2
 800cdba:	f7ff fdf7 	bl	800c9ac <strlen>
 800cdbe:	1c83      	adds	r3, r0, #2
 800cdc0:	ba5b      	rev16	r3, r3
 800cdc2:	812b      	strh	r3, [r5, #8]
 800cdc4:	f105 020a 	add.w	r2, r5, #10
 800cdc8:	2301      	movs	r3, #1
 800cdca:	4639      	mov	r1, r7
 800cdcc:	4630      	mov	r0, r6
 800cdce:	f7ff fe95 	bl	800cafc <MDNS::WriteDnsName(char const*, char*, bool)>
 800cdd2:	4410      	add	r0, r2
 800cdd4:	1b00      	subs	r0, r0, r4
 800cdd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdd8:	080124a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp}
 800cddc:	01000c00 	tsteq	r0, r0, lsl #24
 800cde0:	20009258 	andcs	r9, r0, r8, asr r2

0800cde4 <MDNS::CreateMDNSMessage(unsigned int)>:
 800cde4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cde6:	2384      	movs	r3, #132	; 0x84
 800cde8:	4d19      	ldr	r5, [pc, #100]	; (800ce50 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800cdea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800cdee:	80eb      	strh	r3, [r5, #6]
 800cdf0:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cdf4:	f105 0410 	add.w	r4, r5, #16
 800cdf8:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800cdfc:	4622      	mov	r2, r4
 800cdfe:	4606      	mov	r6, r0
 800ce00:	460f      	mov	r7, r1
 800ce02:	f7ff ff09 	bl	800cc18 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800ce06:	4404      	add	r4, r0
 800ce08:	4622      	mov	r2, r4
 800ce0a:	4639      	mov	r1, r7
 800ce0c:	4630      	mov	r0, r6
 800ce0e:	f7ff ff47 	bl	800cca0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800ce12:	4404      	add	r4, r0
 800ce14:	4622      	mov	r2, r4
 800ce16:	4639      	mov	r1, r7
 800ce18:	4630      	mov	r0, r6
 800ce1a:	f7ff ffbb 	bl	800cd94 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800ce1e:	4404      	add	r4, r0
 800ce20:	4622      	mov	r2, r4
 800ce22:	4639      	mov	r1, r7
 800ce24:	4630      	mov	r0, r6
 800ce26:	f7ff ff79 	bl	800cd1c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800ce2a:	4b0a      	ldr	r3, [pc, #40]	; (800ce54 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800ce2c:	4404      	add	r4, r0
 800ce2e:	f853 2b10 	ldr.w	r2, [r3], #16
 800ce32:	1e60      	subs	r0, r4, #1
 800ce34:	3a0c      	subs	r2, #12
 800ce36:	4611      	mov	r1, r2
 800ce38:	3901      	subs	r1, #1
 800ce3a:	d304      	bcc.n	800ce46 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800ce3c:	f813 6b01 	ldrb.w	r6, [r3], #1
 800ce40:	f800 6f01 	strb.w	r6, [r0, #1]!
 800ce44:	e7f8      	b.n	800ce38 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800ce46:	4414      	add	r4, r2
 800ce48:	4a03      	ldr	r2, [pc, #12]	; (800ce58 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800ce4a:	1aa4      	subs	r4, r4, r2
 800ce4c:	602c      	str	r4, [r5, #0]
 800ce4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce50:	2000927c 	andcs	r9, r0, ip, ror r2
 800ce54:	20009054 	andcs	r9, r0, r4, asr r0
 800ce58:	20009280 	andcs	r9, r0, r0, lsl #5

0800ce5c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800ce5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce60:	4d3f      	ldr	r5, [pc, #252]	; (800cf60 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800ce62:	b085      	sub	sp, #20
 800ce64:	682c      	ldr	r4, [r5, #0]
 800ce66:	4680      	mov	r8, r0
 800ce68:	460f      	mov	r7, r1
 800ce6a:	4616      	mov	r6, r2
 800ce6c:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800ce70:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800ce74:	b11c      	cbz	r4, 800ce7e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800ce76:	692a      	ldr	r2, [r5, #16]
 800ce78:	2a00      	cmp	r2, #0
 800ce7a:	d16d      	bne.n	800cf58 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800ce7c:	2401      	movs	r4, #1
 800ce7e:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800ce82:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800ce86:	8193      	strh	r3, [r2, #12]
 800ce88:	f882 b00e 	strb.w	fp, [r2, #14]
 800ce8c:	2f00      	cmp	r7, #0
 800ce8e:	d153      	bne.n	800cf38 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800ce90:	4630      	mov	r0, r6
 800ce92:	f7ff fd8b 	bl	800c9ac <strlen>
 800ce96:	4f33      	ldr	r7, [pc, #204]	; (800cf64 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800ce98:	683b      	ldr	r3, [r7, #0]
 800ce9a:	331c      	adds	r3, #28
 800ce9c:	4418      	add	r0, r3
 800ce9e:	f7ff fd85 	bl	800c9ac <strlen>
 800cea2:	3001      	adds	r0, #1
 800cea4:	f001 ffc0 	bl	800ee28 <operator new[](unsigned int)>
 800cea8:	6839      	ldr	r1, [r7, #0]
 800ceaa:	f845 0009 	str.w	r0, [r5, r9]
 800ceae:	311c      	adds	r1, #28
 800ceb0:	f7ff fd91 	bl	800c9d6 <strcpy.isra.0>
 800ceb4:	f855 0009 	ldr.w	r0, [r5, r9]
 800ceb8:	4631      	mov	r1, r6
 800ceba:	f7ff fd94 	bl	800c9e6 <strcat.isra.0>
 800cebe:	4631      	mov	r1, r6
 800cec0:	4640      	mov	r0, r8
 800cec2:	f7ff fe0d 	bl	800cae0 <MDNS::FindFirstDotFromRight(char const*) const>
 800cec6:	eb05 0709 	add.w	r7, r5, r9
 800ceca:	4605      	mov	r5, r0
 800cecc:	f7ff fd6e 	bl	800c9ac <strlen>
 800ced0:	300d      	adds	r0, #13
 800ced2:	f001 ffa9 	bl	800ee28 <operator new[](unsigned int)>
 800ced6:	4629      	mov	r1, r5
 800ced8:	6078      	str	r0, [r7, #4]
 800ceda:	f7ff fd7c 	bl	800c9d6 <strcpy.isra.0>
 800cede:	4922      	ldr	r1, [pc, #136]	; (800cf68 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800cee0:	6878      	ldr	r0, [r7, #4]
 800cee2:	f7ff fd80 	bl	800c9e6 <strcat.isra.0>
 800cee6:	4921      	ldr	r1, [pc, #132]	; (800cf6c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800cee8:	4b21      	ldr	r3, [pc, #132]	; (800cf70 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800ceea:	6878      	ldr	r0, [r7, #4]
 800ceec:	f1bb 0f01 	cmp.w	fp, #1
 800cef0:	bf18      	it	ne
 800cef2:	4619      	movne	r1, r3
 800cef4:	f7ff fd77 	bl	800c9e6 <strcat.isra.0>
 800cef8:	f1ba 0f00 	cmp.w	sl, #0
 800cefc:	d009      	beq.n	800cf12 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800cefe:	4650      	mov	r0, sl
 800cf00:	f7ff fd54 	bl	800c9ac <strlen>
 800cf04:	3001      	adds	r0, #1
 800cf06:	f001 ff8f 	bl	800ee28 <operator new[](unsigned int)>
 800cf0a:	4651      	mov	r1, sl
 800cf0c:	60b8      	str	r0, [r7, #8]
 800cf0e:	f7ff fd62 	bl	800c9d6 <strcpy.isra.0>
 800cf12:	4621      	mov	r1, r4
 800cf14:	4640      	mov	r0, r8
 800cf16:	f7ff ff65 	bl	800cde4 <MDNS::CreateMDNSMessage(unsigned int)>
 800cf1a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cf1e:	4915      	ldr	r1, [pc, #84]	; (800cf74 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800cf20:	4815      	ldr	r0, [pc, #84]	; (800cf78 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800cf22:	f851 2b04 	ldr.w	r2, [r1], #4
 800cf26:	9300      	str	r3, [sp, #0]
 800cf28:	4b14      	ldr	r3, [pc, #80]	; (800cf7c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800cf2a:	7800      	ldrb	r0, [r0, #0]
 800cf2c:	681b      	ldr	r3, [r3, #0]
 800cf2e:	b292      	uxth	r2, r2
 800cf30:	f7ff fc8c 	bl	800c84c <udp_send>
 800cf34:	2001      	movs	r0, #1
 800cf36:	e010      	b.n	800cf5a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800cf38:	4638      	mov	r0, r7
 800cf3a:	f7ff fd37 	bl	800c9ac <strlen>
 800cf3e:	9003      	str	r0, [sp, #12]
 800cf40:	4630      	mov	r0, r6
 800cf42:	f7ff fd33 	bl	800c9ac <strlen>
 800cf46:	9b03      	ldr	r3, [sp, #12]
 800cf48:	4418      	add	r0, r3
 800cf4a:	3001      	adds	r0, #1
 800cf4c:	f001 ff6c 	bl	800ee28 <operator new[](unsigned int)>
 800cf50:	4639      	mov	r1, r7
 800cf52:	f845 0009 	str.w	r0, [r5, r9]
 800cf56:	e7ab      	b.n	800ceb0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800cf58:	2000      	movs	r0, #0
 800cf5a:	b005      	add	sp, #20
 800cf5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf60:	20009258 	andcs	r9, r0, r8, asr r2
 800cf64:	20009488 	andcs	r9, r0, r8, lsl #9
 800cf68:	08011593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, ip}
 800cf6c:	0801249c 	stmdaeq	r1, {r2, r3, r4, r7, sl, sp}
 800cf70:	080124b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp}
 800cf74:	2000927c 	andcs	r9, r0, ip, ror r2
 800cf78:	2000001c 	andcs	r0, r0, ip, lsl r0
 800cf7c:	20009050 	andcs	r9, r0, r0, asr r0

0800cf80 <MDNS::HandleRequest(unsigned short)>:
 800cf80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf84:	4605      	mov	r5, r0
 800cf86:	2700      	movs	r7, #0
 800cf88:	f04f 080c 	mov.w	r8, #12
 800cf8c:	b0c5      	sub	sp, #276	; 0x114
 800cf8e:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800d054 <MDNS::HandleRequest(unsigned short)+0xd4>
 800cf92:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800d058 <MDNS::HandleRequest(unsigned short)+0xd8>
 800cf96:	9103      	str	r1, [sp, #12]
 800cf98:	9b03      	ldr	r3, [sp, #12]
 800cf9a:	42bb      	cmp	r3, r7
 800cf9c:	d956      	bls.n	800d04c <MDNS::HandleRequest(unsigned short)+0xcc>
 800cf9e:	f8da 1000 	ldr.w	r1, [sl]
 800cfa2:	aa04      	add	r2, sp, #16
 800cfa4:	4441      	add	r1, r8
 800cfa6:	4628      	mov	r0, r5
 800cfa8:	f7ff fd54 	bl	800ca54 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800cfac:	f8da 2000 	ldr.w	r2, [sl]
 800cfb0:	4440      	add	r0, r8
 800cfb2:	1813      	adds	r3, r2, r0
 800cfb4:	885b      	ldrh	r3, [r3, #2]
 800cfb6:	f100 0804 	add.w	r8, r0, #4
 800cfba:	ba5b      	rev16	r3, r3
 800cfbc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800cfc0:	2b01      	cmp	r3, #1
 800cfc2:	d13e      	bne.n	800d042 <MDNS::HandleRequest(unsigned short)+0xc2>
 800cfc4:	5a14      	ldrh	r4, [r2, r0]
 800cfc6:	4b25      	ldr	r3, [pc, #148]	; (800d05c <MDNS::HandleRequest(unsigned short)+0xdc>)
 800cfc8:	ba64      	rev16	r4, r4
 800cfca:	6818      	ldr	r0, [r3, #0]
 800cfcc:	a904      	add	r1, sp, #16
 800cfce:	b2a4      	uxth	r4, r4
 800cfd0:	f7ff fcf4 	bl	800c9bc <strcmp>
 800cfd4:	b970      	cbnz	r0, 800cff4 <MDNS::HandleRequest(unsigned short)+0x74>
 800cfd6:	2c01      	cmp	r4, #1
 800cfd8:	d10c      	bne.n	800cff4 <MDNS::HandleRequest(unsigned short)+0x74>
 800cfda:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800cfde:	4920      	ldr	r1, [pc, #128]	; (800d060 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800cfe0:	4820      	ldr	r0, [pc, #128]	; (800d064 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800cfe2:	f851 2b04 	ldr.w	r2, [r1], #4
 800cfe6:	9300      	str	r3, [sp, #0]
 800cfe8:	4b1f      	ldr	r3, [pc, #124]	; (800d068 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800cfea:	7800      	ldrb	r0, [r0, #0]
 800cfec:	681b      	ldr	r3, [r3, #0]
 800cfee:	b292      	uxth	r2, r2
 800cff0:	f7ff fc2c 	bl	800c84c <udp_send>
 800cff4:	481d      	ldr	r0, [pc, #116]	; (800d06c <MDNS::HandleRequest(unsigned short)+0xec>)
 800cff6:	a904      	add	r1, sp, #16
 800cff8:	f7ff fce0 	bl	800c9bc <strcmp>
 800cffc:	f04f 0900 	mov.w	r9, #0
 800d000:	4e1b      	ldr	r6, [pc, #108]	; (800d070 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800d002:	9002      	str	r0, [sp, #8]
 800d004:	6833      	ldr	r3, [r6, #0]
 800d006:	b1c3      	cbz	r3, 800d03a <MDNS::HandleRequest(unsigned short)+0xba>
 800d008:	9b02      	ldr	r3, [sp, #8]
 800d00a:	b123      	cbz	r3, 800d016 <MDNS::HandleRequest(unsigned short)+0x96>
 800d00c:	6870      	ldr	r0, [r6, #4]
 800d00e:	a904      	add	r1, sp, #16
 800d010:	f7ff fcd4 	bl	800c9bc <strcmp>
 800d014:	b988      	cbnz	r0, 800d03a <MDNS::HandleRequest(unsigned short)+0xba>
 800d016:	2c0c      	cmp	r4, #12
 800d018:	d10f      	bne.n	800d03a <MDNS::HandleRequest(unsigned short)+0xba>
 800d01a:	4649      	mov	r1, r9
 800d01c:	4628      	mov	r0, r5
 800d01e:	f7ff fee1 	bl	800cde4 <MDNS::CreateMDNSMessage(unsigned int)>
 800d022:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d026:	480f      	ldr	r0, [pc, #60]	; (800d064 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800d028:	9300      	str	r3, [sp, #0]
 800d02a:	4b0f      	ldr	r3, [pc, #60]	; (800d068 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800d02c:	f8bb 2000 	ldrh.w	r2, [fp]
 800d030:	681b      	ldr	r3, [r3, #0]
 800d032:	4910      	ldr	r1, [pc, #64]	; (800d074 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800d034:	7800      	ldrb	r0, [r0, #0]
 800d036:	f7ff fc09 	bl	800c84c <udp_send>
 800d03a:	3610      	adds	r6, #16
 800d03c:	f1b9 0f00 	cmp.w	r9, #0
 800d040:	d001      	beq.n	800d046 <MDNS::HandleRequest(unsigned short)+0xc6>
 800d042:	3701      	adds	r7, #1
 800d044:	e7a8      	b.n	800cf98 <MDNS::HandleRequest(unsigned short)+0x18>
 800d046:	f04f 0901 	mov.w	r9, #1
 800d04a:	e7db      	b.n	800d004 <MDNS::HandleRequest(unsigned short)+0x84>
 800d04c:	b045      	add	sp, #276	; 0x114
 800d04e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d052:	bf00      	nop
 800d054:	20009484 	andcs	r9, r0, r4, lsl #9
 800d058:	2000927c 	andcs	r9, r0, ip, ror r2
 800d05c:	20009480 	andcs	r9, r0, r0, lsl #9
 800d060:	20009054 	andcs	r9, r0, r4, asr r0
 800d064:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d068:	20009050 	andcs	r9, r0, r0, asr r0
 800d06c:	080124a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp}
 800d070:	20009258 	andcs	r9, r0, r8, asr r2
 800d074:	20009280 	andcs	r9, r0, r0, lsl #5

0800d078 <MDNS::Parse()>:
 800d078:	4b08      	ldr	r3, [pc, #32]	; (800d09c <MDNS::Parse()+0x24>)
 800d07a:	681a      	ldr	r2, [r3, #0]
 800d07c:	8853      	ldrh	r3, [r2, #2]
 800d07e:	ba5b      	rev16	r3, r3
 800d080:	b299      	uxth	r1, r3
 800d082:	041b      	lsls	r3, r3, #16
 800d084:	d408      	bmi.n	800d098 <MDNS::Parse()+0x20>
 800d086:	0b8b      	lsrs	r3, r1, #14
 800d088:	d106      	bne.n	800d098 <MDNS::Parse()+0x20>
 800d08a:	8891      	ldrh	r1, [r2, #4]
 800d08c:	b28b      	uxth	r3, r1
 800d08e:	b11b      	cbz	r3, 800d098 <MDNS::Parse()+0x20>
 800d090:	ba49      	rev16	r1, r1
 800d092:	b289      	uxth	r1, r1
 800d094:	f7ff bf74 	b.w	800cf80 <MDNS::HandleRequest(unsigned short)>
 800d098:	4770      	bx	lr
 800d09a:	bf00      	nop
 800d09c:	20009484 	andcs	r9, r0, r4, lsl #9

0800d0a0 <MDNS::Run()>:
 800d0a0:	b538      	push	{r3, r4, r5, lr}
 800d0a2:	4d0c      	ldr	r5, [pc, #48]	; (800d0d4 <MDNS::Run()+0x34>)
 800d0a4:	4604      	mov	r4, r0
 800d0a6:	480c      	ldr	r0, [pc, #48]	; (800d0d8 <MDNS::Run()+0x38>)
 800d0a8:	462b      	mov	r3, r5
 800d0aa:	4a0c      	ldr	r2, [pc, #48]	; (800d0dc <MDNS::Run()+0x3c>)
 800d0ac:	490c      	ldr	r1, [pc, #48]	; (800d0e0 <MDNS::Run()+0x40>)
 800d0ae:	7800      	ldrb	r0, [r0, #0]
 800d0b0:	f7ff fba6 	bl	800c800 <udp_recv2>
 800d0b4:	4b0b      	ldr	r3, [pc, #44]	; (800d0e4 <MDNS::Run()+0x44>)
 800d0b6:	882a      	ldrh	r2, [r5, #0]
 800d0b8:	8018      	strh	r0, [r3, #0]
 800d0ba:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800d0be:	429a      	cmp	r2, r3
 800d0c0:	d106      	bne.n	800d0d0 <MDNS::Run()+0x30>
 800d0c2:	280c      	cmp	r0, #12
 800d0c4:	d904      	bls.n	800d0d0 <MDNS::Run()+0x30>
 800d0c6:	4620      	mov	r0, r4
 800d0c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d0cc:	f7ff bfd4 	b.w	800d078 <MDNS::Parse()>
 800d0d0:	bd38      	pop	{r3, r4, r5, pc}
 800d0d2:	bf00      	nop
 800d0d4:	2000904c 	andcs	r9, r0, ip, asr #32
 800d0d8:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d0dc:	20009048 	andcs	r9, r0, r8, asr #32
 800d0e0:	20009484 	andcs	r9, r0, r4, lsl #9
 800d0e4:	20009278 	andcs	r9, r0, r8, ror r2

0800d0e8 <MDNS::Print()>:
 800d0e8:	b510      	push	{r4, lr}
 800d0ea:	4816      	ldr	r0, [pc, #88]	; (800d144 <MDNS::Print()+0x5c>)
 800d0ec:	f7fb fd14 	bl	8008b18 <printf>
 800d0f0:	4b15      	ldr	r3, [pc, #84]	; (800d148 <MDNS::Print()+0x60>)
 800d0f2:	681b      	ldr	r3, [r3, #0]
 800d0f4:	3301      	adds	r3, #1
 800d0f6:	d104      	bne.n	800d102 <MDNS::Print()+0x1a>
 800d0f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0fc:	4813      	ldr	r0, [pc, #76]	; (800d14c <MDNS::Print()+0x64>)
 800d0fe:	f7fb bd0b 	b.w	8008b18 <printf>
 800d102:	4b13      	ldr	r3, [pc, #76]	; (800d150 <MDNS::Print()+0x68>)
 800d104:	4c13      	ldr	r4, [pc, #76]	; (800d154 <MDNS::Print()+0x6c>)
 800d106:	6819      	ldr	r1, [r3, #0]
 800d108:	4813      	ldr	r0, [pc, #76]	; (800d158 <MDNS::Print()+0x70>)
 800d10a:	f7fb fd05 	bl	8008b18 <printf>
 800d10e:	6823      	ldr	r3, [r4, #0]
 800d110:	b14b      	cbz	r3, 800d126 <MDNS::Print()+0x3e>
 800d112:	4a12      	ldr	r2, [pc, #72]	; (800d15c <MDNS::Print()+0x74>)
 800d114:	68a3      	ldr	r3, [r4, #8]
 800d116:	6861      	ldr	r1, [r4, #4]
 800d118:	2b00      	cmp	r3, #0
 800d11a:	bf08      	it	eq
 800d11c:	4613      	moveq	r3, r2
 800d11e:	4810      	ldr	r0, [pc, #64]	; (800d160 <MDNS::Print()+0x78>)
 800d120:	89a2      	ldrh	r2, [r4, #12]
 800d122:	f7fb fcf9 	bl	8008b18 <printf>
 800d126:	6923      	ldr	r3, [r4, #16]
 800d128:	b15b      	cbz	r3, 800d142 <MDNS::Print()+0x5a>
 800d12a:	69a3      	ldr	r3, [r4, #24]
 800d12c:	4a0b      	ldr	r2, [pc, #44]	; (800d15c <MDNS::Print()+0x74>)
 800d12e:	6961      	ldr	r1, [r4, #20]
 800d130:	2b00      	cmp	r3, #0
 800d132:	bf08      	it	eq
 800d134:	4613      	moveq	r3, r2
 800d136:	480a      	ldr	r0, [pc, #40]	; (800d160 <MDNS::Print()+0x78>)
 800d138:	8ba2      	ldrh	r2, [r4, #28]
 800d13a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d13e:	f7fb bceb 	b.w	8008b18 <printf>
 800d142:	bd10      	pop	{r4, pc}
 800d144:	080124c4 	stmdaeq	r1, {r2, r6, r7, sl, sp}
 800d148:	2000001c 	andcs	r0, r0, ip, lsl r0
 800d14c:	080124ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, sp}
 800d150:	20009480 	andcs	r9, r0, r0, lsl #9
 800d154:	20009258 	andcs	r9, r0, r8, asr r2
 800d158:	080124d8 	stmdaeq	r1, {r3, r4, r6, r7, sl, sp}
 800d15c:	0801188b 	stmdaeq	r1, {r0, r1, r3, r7, fp, ip}
 800d160:	080124e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, sp}

0800d164 <strncpy.constprop.0.isra.0>:
 800d164:	233f      	movs	r3, #63	; 0x3f
 800d166:	3901      	subs	r1, #1
 800d168:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800d16c:	b92a      	cbnz	r2, 800d17a <strncpy.constprop.0.isra.0+0x16>
 800d16e:	4403      	add	r3, r0
 800d170:	4298      	cmp	r0, r3
 800d172:	d007      	beq.n	800d184 <strncpy.constprop.0.isra.0+0x20>
 800d174:	f800 2b01 	strb.w	r2, [r0], #1
 800d178:	e7fa      	b.n	800d170 <strncpy.constprop.0.isra.0+0xc>
 800d17a:	3b01      	subs	r3, #1
 800d17c:	f800 2b01 	strb.w	r2, [r0], #1
 800d180:	d1f2      	bne.n	800d168 <strncpy.constprop.0.isra.0+0x4>
 800d182:	4770      	bx	lr
 800d184:	4770      	bx	lr
	...

0800d188 <Network::Network()>:
 800d188:	4a11      	ldr	r2, [pc, #68]	; (800d1d0 <Network::Network()+0x48>)
 800d18a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800d18e:	6010      	str	r0, [r2, #0]
 800d190:	2201      	movs	r2, #1
 800d192:	2300      	movs	r3, #0
 800d194:	e9c0 1200 	strd	r1, r2, [r0]
 800d198:	2200      	movs	r2, #0
 800d19a:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800d19e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d1a2:	490c      	ldr	r1, [pc, #48]	; (800d1d4 <Network::Network()+0x4c>)
 800d1a4:	60c2      	str	r2, [r0, #12]
 800d1a6:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800d1aa:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800d1ae:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800d1b2:	6083      	str	r3, [r0, #8]
 800d1b4:	6183      	str	r3, [r0, #24]
 800d1b6:	7703      	strb	r3, [r0, #28]
 800d1b8:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800d1bc:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800d1c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d1c4:	f802 3b01 	strb.w	r3, [r2], #1
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	d1f9      	bne.n	800d1c0 <Network::Network()+0x38>
 800d1cc:	4770      	bx	lr
 800d1ce:	bf00      	nop
 800d1d0:	20009488 	andcs	r9, r0, r8, lsl #9
 800d1d4:	080124ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sl, sp}

0800d1d8 <Network::Shutdown()>:
 800d1d8:	b508      	push	{r3, lr}
 800d1da:	30b8      	adds	r0, #184	; 0xb8
 800d1dc:	f7fb fa9e 	bl	800871c <NetworkDisplay::ShowShutdown()>
 800d1e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d1e4:	f7fa b804 	b.w	80071f0 <net_shutdown>

0800d1e8 <Network::Begin(unsigned short)>:
 800d1e8:	4608      	mov	r0, r1
 800d1ea:	f7ff ba99 	b.w	800c720 <udp_bind>

0800d1ee <Network::End(unsigned short)>:
 800d1ee:	4608      	mov	r0, r1
 800d1f0:	f7ff bab0 	b.w	800c754 <udp_unbind>

0800d1f4 <Network::MacAddressCopyTo(unsigned char*)>:
 800d1f4:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800d1f8:	3901      	subs	r1, #1
 800d1fa:	30a2      	adds	r0, #162	; 0xa2
 800d1fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d200:	4283      	cmp	r3, r0
 800d202:	f801 2f01 	strb.w	r2, [r1, #1]!
 800d206:	d1f9      	bne.n	800d1fc <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800d208:	4770      	bx	lr

0800d20a <Network::JoinGroup(int, unsigned int)>:
 800d20a:	4610      	mov	r0, r2
 800d20c:	f000 bf02 	b.w	800e014 <igmp_join>

0800d210 <Network::SetDefaultIp()>:
 800d210:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d214:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800d218:	041b      	lsls	r3, r3, #16
 800d21a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d21e:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800d222:	3302      	adds	r3, #2
 800d224:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800d228:	22ff      	movs	r2, #255	; 0xff
 800d22a:	6103      	str	r3, [r0, #16]
 800d22c:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800d230:	4770      	bx	lr
	...

0800d234 <Network::Init(NetworkParamsStore*)>:
 800d234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d238:	b08b      	sub	sp, #44	; 0x2c
 800d23a:	4604      	mov	r4, r0
 800d23c:	a806      	add	r0, sp, #24
 800d23e:	f000 f9b1 	bl	800d5a4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d242:	a806      	add	r0, sp, #24
 800d244:	f000 f9be 	bl	800d5c4 <NetworkParams::Load()>
 800d248:	b110      	cbz	r0, 800d250 <Network::Init(NetworkParamsStore*)+0x1c>
 800d24a:	a806      	add	r0, sp, #24
 800d24c:	f000 fba3 	bl	800d996 <NetworkParams::Dump()>
 800d250:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800d254:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800d47c <Network::Init(NetworkParamsStore*)+0x248>
 800d258:	4628      	mov	r0, r5
 800d25a:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800d25e:	f7fb fa5b 	bl	8008718 <NetworkDisplay::ShowEmacStart()>
 800d262:	4638      	mov	r0, r7
 800d264:	f002 fda2 	bl	800fdac <emac_start>
 800d268:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d26c:	f104 061c 	add.w	r6, r4, #28
 800d270:	9307      	str	r3, [sp, #28]
 800d272:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d276:	9308      	str	r3, [sp, #32]
 800d278:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d27c:	9309      	str	r3, [sp, #36]	; 0x24
 800d27e:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d282:	7063      	strb	r3, [r4, #1]
 800d284:	f8d8 3000 	ldr.w	r3, [r8]
 800d288:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800d28c:	bf18      	it	ne
 800d28e:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800d292:	061b      	lsls	r3, r3, #24
 800d294:	bf58      	it	pl
 800d296:	2300      	movpl	r3, #0
 800d298:	60a2      	str	r2, [r4, #8]
 800d29a:	bf48      	it	mi
 800d29c:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800d2a0:	60e3      	str	r3, [r4, #12]
 800d2a2:	f898 3015 	ldrb.w	r3, [r8, #21]
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	d15e      	bne.n	800d368 <Network::Init(NetworkParamsStore*)+0x134>
 800d2aa:	4632      	mov	r2, r6
 800d2ac:	4874      	ldr	r0, [pc, #464]	; (800d480 <Network::Init(NetworkParamsStore*)+0x24c>)
 800d2ae:	f810 1b01 	ldrb.w	r1, [r0], #1
 800d2b2:	f103 0c01 	add.w	ip, r3, #1
 800d2b6:	b119      	cbz	r1, 800d2c0 <Network::Init(NetworkParamsStore*)+0x8c>
 800d2b8:	4663      	mov	r3, ip
 800d2ba:	f802 1b01 	strb.w	r1, [r2], #1
 800d2be:	e7f6      	b.n	800d2ae <Network::Init(NetworkParamsStore*)+0x7a>
 800d2c0:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800d2c4:	18e1      	adds	r1, r4, r3
 800d2c6:	0910      	lsrs	r0, r2, #4
 800d2c8:	2a9f      	cmp	r2, #159	; 0x9f
 800d2ca:	f002 020f 	and.w	r2, r2, #15
 800d2ce:	bf94      	ite	ls
 800d2d0:	3030      	addls	r0, #48	; 0x30
 800d2d2:	3037      	addhi	r0, #55	; 0x37
 800d2d4:	2a09      	cmp	r2, #9
 800d2d6:	bf94      	ite	ls
 800d2d8:	3230      	addls	r2, #48	; 0x30
 800d2da:	3237      	addhi	r2, #55	; 0x37
 800d2dc:	44a4      	add	ip, r4
 800d2de:	7708      	strb	r0, [r1, #28]
 800d2e0:	f88c 201c 	strb.w	r2, [ip, #28]
 800d2e4:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800d2e8:	f103 0e02 	add.w	lr, r3, #2
 800d2ec:	0910      	lsrs	r0, r2, #4
 800d2ee:	2a9f      	cmp	r2, #159	; 0x9f
 800d2f0:	f002 020f 	and.w	r2, r2, #15
 800d2f4:	bf94      	ite	ls
 800d2f6:	3030      	addls	r0, #48	; 0x30
 800d2f8:	3037      	addhi	r0, #55	; 0x37
 800d2fa:	f103 0903 	add.w	r9, r3, #3
 800d2fe:	2a09      	cmp	r2, #9
 800d300:	44a6      	add	lr, r4
 800d302:	f88e 001c 	strb.w	r0, [lr, #28]
 800d306:	bf94      	ite	ls
 800d308:	3230      	addls	r2, #48	; 0x30
 800d30a:	3237      	addhi	r2, #55	; 0x37
 800d30c:	eb04 0009 	add.w	r0, r4, r9
 800d310:	7702      	strb	r2, [r0, #28]
 800d312:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800d316:	f103 0c04 	add.w	ip, r3, #4
 800d31a:	0910      	lsrs	r0, r2, #4
 800d31c:	2a9f      	cmp	r2, #159	; 0x9f
 800d31e:	f002 020f 	and.w	r2, r2, #15
 800d322:	bf94      	ite	ls
 800d324:	3030      	addls	r0, #48	; 0x30
 800d326:	3037      	addhi	r0, #55	; 0x37
 800d328:	3305      	adds	r3, #5
 800d32a:	2a09      	cmp	r2, #9
 800d32c:	4423      	add	r3, r4
 800d32e:	44a4      	add	ip, r4
 800d330:	bf94      	ite	ls
 800d332:	3230      	addls	r2, #48	; 0x30
 800d334:	3237      	addhi	r2, #55	; 0x37
 800d336:	f88c 001c 	strb.w	r0, [ip, #28]
 800d33a:	771a      	strb	r2, [r3, #28]
 800d33c:	2300      	movs	r3, #0
 800d33e:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800d342:	7863      	ldrb	r3, [r4, #1]
 800d344:	b95b      	cbnz	r3, 800d35e <Network::Init(NetworkParamsStore*)+0x12a>
 800d346:	9b07      	ldr	r3, [sp, #28]
 800d348:	b9b3      	cbnz	r3, 800d378 <Network::Init(NetworkParamsStore*)+0x144>
 800d34a:	4620      	mov	r0, r4
 800d34c:	f7ff ff60 	bl	800d210 <Network::SetDefaultIp()>
 800d350:	6923      	ldr	r3, [r4, #16]
 800d352:	69a2      	ldr	r2, [r4, #24]
 800d354:	9307      	str	r3, [sp, #28]
 800d356:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800d35a:	7863      	ldrb	r3, [r4, #1]
 800d35c:	b19b      	cbz	r3, 800d386 <Network::Init(NetworkParamsStore*)+0x152>
 800d35e:	2101      	movs	r1, #1
 800d360:	4628      	mov	r0, r5
 800d362:	f7fb f9dc 	bl	800871e <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d366:	e00e      	b.n	800d386 <Network::Init(NetworkParamsStore*)+0x152>
 800d368:	4630      	mov	r0, r6
 800d36a:	4946      	ldr	r1, [pc, #280]	; (800d484 <Network::Init(NetworkParamsStore*)+0x250>)
 800d36c:	f7ff fefa 	bl	800d164 <strncpy.constprop.0.isra.0>
 800d370:	2300      	movs	r3, #0
 800d372:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800d376:	e7e4      	b.n	800d342 <Network::Init(NetworkParamsStore*)+0x10e>
 800d378:	69a1      	ldr	r1, [r4, #24]
 800d37a:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800d37e:	4053      	eors	r3, r2
 800d380:	420b      	tst	r3, r1
 800d382:	d000      	beq.n	800d386 <Network::Init(NetworkParamsStore*)+0x152>
 800d384:	9209      	str	r2, [sp, #36]	; 0x24
 800d386:	1ce3      	adds	r3, r4, #3
 800d388:	f104 0901 	add.w	r9, r4, #1
 800d38c:	9302      	str	r3, [sp, #8]
 800d38e:	9300      	str	r3, [sp, #0]
 800d390:	4632      	mov	r2, r6
 800d392:	464b      	mov	r3, r9
 800d394:	4638      	mov	r0, r7
 800d396:	a907      	add	r1, sp, #28
 800d398:	f7f9 feda 	bl	8007150 <net_init>
 800d39c:	78e3      	ldrb	r3, [r4, #3]
 800d39e:	b11b      	cbz	r3, 800d3a8 <Network::Init(NetworkParamsStore*)+0x174>
 800d3a0:	2104      	movs	r1, #4
 800d3a2:	4628      	mov	r0, r5
 800d3a4:	f7fb f9bb 	bl	800871e <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d3a8:	f898 3014 	ldrb.w	r3, [r8, #20]
 800d3ac:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800d3b0:	9304      	str	r3, [sp, #16]
 800d3b2:	233c      	movs	r3, #60	; 0x3c
 800d3b4:	fb03 f30a 	mul.w	r3, r3, sl
 800d3b8:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800d488 <Network::Init(NetworkParamsStore*)+0x254>
 800d3bc:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800d48c <Network::Init(NetworkParamsStore*)+0x258>
 800d3c0:	9303      	str	r3, [sp, #12]
 800d3c2:	78e3      	ldrb	r3, [r4, #3]
 800d3c4:	b95b      	cbnz	r3, 800d3de <Network::Init(NetworkParamsStore*)+0x1aa>
 800d3c6:	9b07      	ldr	r3, [sp, #28]
 800d3c8:	4628      	mov	r0, r5
 800d3ca:	6123      	str	r3, [r4, #16]
 800d3cc:	9b08      	ldr	r3, [sp, #32]
 800d3ce:	61a3      	str	r3, [r4, #24]
 800d3d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d3d2:	6163      	str	r3, [r4, #20]
 800d3d4:	f7fb f9a1 	bl	800871a <NetworkDisplay::ShowIp()>
 800d3d8:	b00b      	add	sp, #44	; 0x2c
 800d3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3de:	f1ba 0f00 	cmp.w	sl, #0
 800d3e2:	d0f0      	beq.n	800d3c6 <Network::Init(NetworkParamsStore*)+0x192>
 800d3e4:	9b04      	ldr	r3, [sp, #16]
 800d3e6:	2b00      	cmp	r3, #0
 800d3e8:	d0ed      	beq.n	800d3c6 <Network::Init(NetworkParamsStore*)+0x192>
 800d3ea:	2104      	movs	r1, #4
 800d3ec:	f8d8 0000 	ldr.w	r0, [r8]
 800d3f0:	f001 fc4e 	bl	800ec90 <LedBlink::SetMode(ledblink::Mode)>
 800d3f4:	2103      	movs	r1, #3
 800d3f6:	4628      	mov	r0, r5
 800d3f8:	f7fb f991 	bl	800871e <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d3fc:	2000      	movs	r0, #0
 800d3fe:	f001 fef3 	bl	800f1e8 <time>
 800d402:	9005      	str	r0, [sp, #20]
 800d404:	2000      	movs	r0, #0
 800d406:	f001 feef 	bl	800f1e8 <time>
 800d40a:	9b05      	ldr	r3, [sp, #20]
 800d40c:	1ac0      	subs	r0, r0, r3
 800d40e:	9b03      	ldr	r3, [sp, #12]
 800d410:	4298      	cmp	r0, r3
 800d412:	da1a      	bge.n	800d44a <Network::Init(NetworkParamsStore*)+0x216>
 800d414:	f8d8 3000 	ldr.w	r3, [r8]
 800d418:	491d      	ldr	r1, [pc, #116]	; (800d490 <Network::Init(NetworkParamsStore*)+0x25c>)
 800d41a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800d41e:	f1bc 0f00 	cmp.w	ip, #0
 800d422:	d0ef      	beq.n	800d404 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d424:	6808      	ldr	r0, [r1, #0]
 800d426:	695a      	ldr	r2, [r3, #20]
 800d428:	1a80      	subs	r0, r0, r2
 800d42a:	4584      	cmp	ip, r0
 800d42c:	d8ea      	bhi.n	800d404 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d42e:	6808      	ldr	r0, [r1, #0]
 800d430:	6158      	str	r0, [r3, #20]
 800d432:	6918      	ldr	r0, [r3, #16]
 800d434:	2801      	cmp	r0, #1
 800d436:	f080 0201 	eor.w	r2, r0, #1
 800d43a:	611a      	str	r2, [r3, #16]
 800d43c:	bf16      	itet	ne
 800d43e:	2301      	movne	r3, #1
 800d440:	f8cb 0014 	streq.w	r0, [fp, #20]
 800d444:	f8cb 3010 	strne.w	r3, [fp, #16]
 800d448:	e7dc      	b.n	800d404 <Network::Init(NetworkParamsStore*)+0x1d0>
 800d44a:	2101      	movs	r1, #1
 800d44c:	4628      	mov	r0, r5
 800d44e:	f7fb f966 	bl	800871e <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800d452:	2101      	movs	r1, #1
 800d454:	f8d8 0000 	ldr.w	r0, [r8]
 800d458:	f001 fc1a 	bl	800ec90 <LedBlink::SetMode(ledblink::Mode)>
 800d45c:	2301      	movs	r3, #1
 800d45e:	7063      	strb	r3, [r4, #1]
 800d460:	2300      	movs	r3, #0
 800d462:	70e3      	strb	r3, [r4, #3]
 800d464:	9b02      	ldr	r3, [sp, #8]
 800d466:	4632      	mov	r2, r6
 800d468:	9300      	str	r3, [sp, #0]
 800d46a:	4638      	mov	r0, r7
 800d46c:	464b      	mov	r3, r9
 800d46e:	a907      	add	r1, sp, #28
 800d470:	f7f9 fe6e 	bl	8007150 <net_init>
 800d474:	7863      	ldrb	r3, [r4, #1]
 800d476:	2b00      	cmp	r3, #0
 800d478:	d0a3      	beq.n	800d3c2 <Network::Init(NetworkParamsStore*)+0x18e>
 800d47a:	e7a4      	b.n	800d3c6 <Network::Init(NetworkParamsStore*)+0x192>
 800d47c:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d480:	080124f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, sp}
 800d484:	200094a1 	andcs	r9, r0, r1, lsr #9
 800d488:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800d48c:	40011000 	andmi	r1, r1, r0
 800d490:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800d494 <Network::Print()>:
 800d494:	b530      	push	{r4, r5, lr}
 800d496:	4604      	mov	r4, r0
 800d498:	b085      	sub	sp, #20
 800d49a:	4832      	ldr	r0, [pc, #200]	; (800d564 <Network::Print()+0xd0>)
 800d49c:	f7fb fb3c 	bl	8008b18 <printf>
 800d4a0:	f104 011c 	add.w	r1, r4, #28
 800d4a4:	4830      	ldr	r0, [pc, #192]	; (800d568 <Network::Print()+0xd4>)
 800d4a6:	f7fb fb37 	bl	8008b18 <printf>
 800d4aa:	6861      	ldr	r1, [r4, #4]
 800d4ac:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800d4b0:	482e      	ldr	r0, [pc, #184]	; (800d56c <Network::Print()+0xd8>)
 800d4b2:	f7fb fb31 	bl	8008b18 <printf>
 800d4b6:	69a0      	ldr	r0, [r4, #24]
 800d4b8:	f7fa fde8 	bl	800808c <__popcountsi2>
 800d4bc:	6925      	ldr	r5, [r4, #16]
 800d4be:	9001      	str	r0, [sp, #4]
 800d4c0:	0e2b      	lsrs	r3, r5, #24
 800d4c2:	9300      	str	r3, [sp, #0]
 800d4c4:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800d4c8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800d4cc:	b2e9      	uxtb	r1, r5
 800d4ce:	4828      	ldr	r0, [pc, #160]	; (800d570 <Network::Print()+0xdc>)
 800d4d0:	f7fb fb22 	bl	8008b18 <printf>
 800d4d4:	69a1      	ldr	r1, [r4, #24]
 800d4d6:	4827      	ldr	r0, [pc, #156]	; (800d574 <Network::Print()+0xe0>)
 800d4d8:	0e0b      	lsrs	r3, r1, #24
 800d4da:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d4de:	9300      	str	r3, [sp, #0]
 800d4e0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d4e4:	b2c9      	uxtb	r1, r1
 800d4e6:	f7fb fb17 	bl	8008b18 <printf>
 800d4ea:	6961      	ldr	r1, [r4, #20]
 800d4ec:	4822      	ldr	r0, [pc, #136]	; (800d578 <Network::Print()+0xe4>)
 800d4ee:	0e0b      	lsrs	r3, r1, #24
 800d4f0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d4f4:	9300      	str	r3, [sp, #0]
 800d4f6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d4fa:	b2c9      	uxtb	r1, r1
 800d4fc:	f7fb fb0c 	bl	8008b18 <printf>
 800d500:	69a3      	ldr	r3, [r4, #24]
 800d502:	6921      	ldr	r1, [r4, #16]
 800d504:	481d      	ldr	r0, [pc, #116]	; (800d57c <Network::Print()+0xe8>)
 800d506:	ea61 0103 	orn	r1, r1, r3
 800d50a:	0e0b      	lsrs	r3, r1, #24
 800d50c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d510:	9300      	str	r3, [sp, #0]
 800d512:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d516:	b2c9      	uxtb	r1, r1
 800d518:	f7fb fafe 	bl	8008b18 <printf>
 800d51c:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800d520:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800d524:	9302      	str	r3, [sp, #8]
 800d526:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800d52a:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800d52e:	9301      	str	r3, [sp, #4]
 800d530:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800d534:	4812      	ldr	r0, [pc, #72]	; (800d580 <Network::Print()+0xec>)
 800d536:	9300      	str	r3, [sp, #0]
 800d538:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800d53c:	f7fb faec 	bl	8008b18 <printf>
 800d540:	4b10      	ldr	r3, [pc, #64]	; (800d584 <Network::Print()+0xf0>)
 800d542:	681b      	ldr	r3, [r3, #0]
 800d544:	78da      	ldrb	r2, [r3, #3]
 800d546:	b952      	cbnz	r2, 800d55e <Network::Print()+0xca>
 800d548:	785b      	ldrb	r3, [r3, #1]
 800d54a:	2b00      	cmp	r3, #0
 800d54c:	bf14      	ite	ne
 800d54e:	2144      	movne	r1, #68	; 0x44
 800d550:	2153      	moveq	r1, #83	; 0x53
 800d552:	480d      	ldr	r0, [pc, #52]	; (800d588 <Network::Print()+0xf4>)
 800d554:	b005      	add	sp, #20
 800d556:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d55a:	f7fb badd 	b.w	8008b18 <printf>
 800d55e:	215a      	movs	r1, #90	; 0x5a
 800d560:	e7f7      	b.n	800d552 <Network::Print()+0xbe>
 800d562:	bf00      	nop
 800d564:	08012500 	stmdaeq	r1, {r8, sl, sp}
 800d568:	08012509 	stmdaeq	r1, {r0, r3, r8, sl, sp}
 800d56c:	0801251a 	stmdaeq	r1, {r1, r3, r4, r8, sl, sp}
 800d570:	0801252f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, sp}
 800d574:	0801254c 	stmdaeq	r1, {r2, r3, r6, r8, sl, sp}
 800d578:	08012566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, sp}
 800d57c:	08012580 	stmdaeq	r1, {r7, r8, sl, sp}
 800d580:	0801259a 	stmdaeq	r1, {r1, r3, r4, r7, r8, sl, sp}
 800d584:	20009488 	andcs	r9, r0, r8, lsl #9
 800d588:	080125c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, sl, sp}

0800d58c <Network::TcpBegin(unsigned short)>:
 800d58c:	4608      	mov	r0, r1
 800d58e:	f7fe bffd 	b.w	800c58c <tcp_begin>

0800d592 <Network::TcpRead(int, unsigned char const**)>:
 800d592:	4608      	mov	r0, r1
 800d594:	4611      	mov	r1, r2
 800d596:	f7ff b837 	b.w	800c608 <tcp_read>

0800d59a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800d59a:	4608      	mov	r0, r1
 800d59c:	4611      	mov	r1, r2
 800d59e:	461a      	mov	r2, r3
 800d5a0:	f7ff b80e 	b.w	800c5c0 <tcp_write>

0800d5a4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800d5a4:	4b06      	ldr	r3, [pc, #24]	; (800d5c0 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800d5a6:	b510      	push	{r4, lr}
 800d5a8:	225e      	movs	r2, #94	; 0x5e
 800d5aa:	4604      	mov	r4, r0
 800d5ac:	6001      	str	r1, [r0, #0]
 800d5ae:	2100      	movs	r1, #0
 800d5b0:	4618      	mov	r0, r3
 800d5b2:	f001 fd0d 	bl	800efd0 <memset>
 800d5b6:	2201      	movs	r2, #1
 800d5b8:	7502      	strb	r2, [r0, #20]
 800d5ba:	4620      	mov	r0, r4
 800d5bc:	bd10      	pop	{r4, pc}
 800d5be:	bf00      	nop
 800d5c0:	2000948c 	andcs	r9, r0, ip, lsl #9

0800d5c4 <NetworkParams::Load()>:
 800d5c4:	b508      	push	{r3, lr}
 800d5c6:	2300      	movs	r3, #0
 800d5c8:	4905      	ldr	r1, [pc, #20]	; (800d5e0 <NetworkParams::Load()+0x1c>)
 800d5ca:	6800      	ldr	r0, [r0, #0]
 800d5cc:	700b      	strb	r3, [r1, #0]
 800d5ce:	704b      	strb	r3, [r1, #1]
 800d5d0:	708b      	strb	r3, [r1, #2]
 800d5d2:	70cb      	strb	r3, [r1, #3]
 800d5d4:	b118      	cbz	r0, 800d5de <NetworkParams::Load()+0x1a>
 800d5d6:	6803      	ldr	r3, [r0, #0]
 800d5d8:	68db      	ldr	r3, [r3, #12]
 800d5da:	4798      	blx	r3
 800d5dc:	2001      	movs	r0, #1
 800d5de:	bd08      	pop	{r3, pc}
 800d5e0:	2000948c 	andcs	r9, r0, ip, lsl #9

0800d5e4 <NetworkParams::Load(char const*, unsigned int)>:
 800d5e4:	6803      	ldr	r3, [r0, #0]
 800d5e6:	b1eb      	cbz	r3, 800d624 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800d5e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d5ea:	2300      	movs	r3, #0
 800d5ec:	460e      	mov	r6, r1
 800d5ee:	4617      	mov	r7, r2
 800d5f0:	4605      	mov	r5, r0
 800d5f2:	4c0d      	ldr	r4, [pc, #52]	; (800d628 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800d5f4:	4602      	mov	r2, r0
 800d5f6:	490d      	ldr	r1, [pc, #52]	; (800d62c <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800d5f8:	4668      	mov	r0, sp
 800d5fa:	7023      	strb	r3, [r4, #0]
 800d5fc:	7063      	strb	r3, [r4, #1]
 800d5fe:	70a3      	strb	r3, [r4, #2]
 800d600:	70e3      	strb	r3, [r4, #3]
 800d602:	f000 fef5 	bl	800e3f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d606:	463a      	mov	r2, r7
 800d608:	4631      	mov	r1, r6
 800d60a:	4668      	mov	r0, sp
 800d60c:	f000 fef4 	bl	800e3f8 <ReadConfigFile::Read(char const*, unsigned int)>
 800d610:	6828      	ldr	r0, [r5, #0]
 800d612:	4621      	mov	r1, r4
 800d614:	6803      	ldr	r3, [r0, #0]
 800d616:	689b      	ldr	r3, [r3, #8]
 800d618:	4798      	blx	r3
 800d61a:	4668      	mov	r0, sp
 800d61c:	f000 feeb 	bl	800e3f6 <ReadConfigFile::~ReadConfigFile()>
 800d620:	b003      	add	sp, #12
 800d622:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d624:	4770      	bx	lr
 800d626:	bf00      	nop
 800d628:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d62c:	0800d761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, ip, lr, pc}

0800d630 <NetworkParams::callbackFunction(char const*)>:
 800d630:	b530      	push	{r4, r5, lr}
 800d632:	460c      	mov	r4, r1
 800d634:	b085      	sub	sp, #20
 800d636:	4620      	mov	r0, r4
 800d638:	4942      	ldr	r1, [pc, #264]	; (800d744 <NetworkParams::callbackFunction(char const*)+0x114>)
 800d63a:	f10d 0207 	add.w	r2, sp, #7
 800d63e:	f000 ff86 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d642:	b980      	cbnz	r0, 800d666 <NetworkParams::callbackFunction(char const*)+0x36>
 800d644:	4940      	ldr	r1, [pc, #256]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d646:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800d64a:	680b      	ldr	r3, [r1, #0]
 800d64c:	b142      	cbz	r2, 800d660 <NetworkParams::callbackFunction(char const*)+0x30>
 800d64e:	f023 0301 	bic.w	r3, r3, #1
 800d652:	3a00      	subs	r2, #0
 800d654:	bf18      	it	ne
 800d656:	2201      	movne	r2, #1
 800d658:	600b      	str	r3, [r1, #0]
 800d65a:	750a      	strb	r2, [r1, #20]
 800d65c:	b005      	add	sp, #20
 800d65e:	bd30      	pop	{r4, r5, pc}
 800d660:	f043 0301 	orr.w	r3, r3, #1
 800d664:	e7f5      	b.n	800d652 <NetworkParams::callbackFunction(char const*)+0x22>
 800d666:	4620      	mov	r0, r4
 800d668:	4938      	ldr	r1, [pc, #224]	; (800d74c <NetworkParams::callbackFunction(char const*)+0x11c>)
 800d66a:	f10d 0207 	add.w	r2, sp, #7
 800d66e:	f000 ff6e 	bl	800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d672:	b988      	cbnz	r0, 800d698 <NetworkParams::callbackFunction(char const*)+0x68>
 800d674:	4a34      	ldr	r2, [pc, #208]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d676:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d67a:	6813      	ldr	r3, [r2, #0]
 800d67c:	1e4d      	subs	r5, r1, #1
 800d67e:	2d04      	cmp	r5, #4
 800d680:	bf97      	itett	ls
 800d682:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d686:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d68a:	6013      	strls	r3, [r2, #0]
 800d68c:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800d690:	bf84      	itt	hi
 800d692:	6013      	strhi	r3, [r2, #0]
 800d694:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800d698:	4620      	mov	r0, r4
 800d69a:	492d      	ldr	r1, [pc, #180]	; (800d750 <NetworkParams::callbackFunction(char const*)+0x120>)
 800d69c:	aa02      	add	r2, sp, #8
 800d69e:	f000 fef8 	bl	800e492 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d6a2:	b9d0      	cbnz	r0, 800d6da <NetworkParams::callbackFunction(char const*)+0xaa>
 800d6a4:	9b02      	ldr	r3, [sp, #8]
 800d6a6:	b2d9      	uxtb	r1, r3
 800d6a8:	29ac      	cmp	r1, #172	; 0xac
 800d6aa:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d6ae:	d00a      	beq.n	800d6c6 <NetworkParams::callbackFunction(char const*)+0x96>
 800d6b0:	29c0      	cmp	r1, #192	; 0xc0
 800d6b2:	d00c      	beq.n	800d6ce <NetworkParams::callbackFunction(char const*)+0x9e>
 800d6b4:	290a      	cmp	r1, #10
 800d6b6:	d10d      	bne.n	800d6d4 <NetworkParams::callbackFunction(char const*)+0xa4>
 800d6b8:	4a23      	ldr	r2, [pc, #140]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d6ba:	6053      	str	r3, [r2, #4]
 800d6bc:	6813      	ldr	r3, [r2, #0]
 800d6be:	f043 0302 	orr.w	r3, r3, #2
 800d6c2:	6013      	str	r3, [r2, #0]
 800d6c4:	e7ca      	b.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6c6:	3a10      	subs	r2, #16
 800d6c8:	2a0f      	cmp	r2, #15
 800d6ca:	d8c7      	bhi.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6cc:	e7f4      	b.n	800d6b8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6ce:	2aa8      	cmp	r2, #168	; 0xa8
 800d6d0:	d1c4      	bne.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6d2:	e7f1      	b.n	800d6b8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6d4:	2b00      	cmp	r3, #0
 800d6d6:	d0ef      	beq.n	800d6b8 <NetworkParams::callbackFunction(char const*)+0x88>
 800d6d8:	e7c0      	b.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6da:	4620      	mov	r0, r4
 800d6dc:	491d      	ldr	r1, [pc, #116]	; (800d754 <NetworkParams::callbackFunction(char const*)+0x124>)
 800d6de:	aa02      	add	r2, sp, #8
 800d6e0:	f000 fed7 	bl	800e492 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d6e4:	b970      	cbnz	r0, 800d704 <NetworkParams::callbackFunction(char const*)+0xd4>
 800d6e6:	9a02      	ldr	r2, [sp, #8]
 800d6e8:	2a00      	cmp	r2, #0
 800d6ea:	d0b7      	beq.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6ec:	ba13      	rev	r3, r2
 800d6ee:	43d9      	mvns	r1, r3
 800d6f0:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800d6f4:	d1b2      	bne.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d6f6:	4b14      	ldr	r3, [pc, #80]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d6f8:	609a      	str	r2, [r3, #8]
 800d6fa:	681a      	ldr	r2, [r3, #0]
 800d6fc:	f042 0204 	orr.w	r2, r2, #4
 800d700:	601a      	str	r2, [r3, #0]
 800d702:	e7ab      	b.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d704:	4620      	mov	r0, r4
 800d706:	4914      	ldr	r1, [pc, #80]	; (800d758 <NetworkParams::callbackFunction(char const*)+0x128>)
 800d708:	aa02      	add	r2, sp, #8
 800d70a:	f000 fec2 	bl	800e492 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800d70e:	4d0e      	ldr	r5, [pc, #56]	; (800d748 <NetworkParams::callbackFunction(char const*)+0x118>)
 800d710:	b930      	cbnz	r0, 800d720 <NetworkParams::callbackFunction(char const*)+0xf0>
 800d712:	9b02      	ldr	r3, [sp, #8]
 800d714:	60eb      	str	r3, [r5, #12]
 800d716:	682b      	ldr	r3, [r5, #0]
 800d718:	f043 0308 	orr.w	r3, r3, #8
 800d71c:	602b      	str	r3, [r5, #0]
 800d71e:	e79d      	b.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d720:	233f      	movs	r3, #63	; 0x3f
 800d722:	4620      	mov	r0, r4
 800d724:	9303      	str	r3, [sp, #12]
 800d726:	490d      	ldr	r1, [pc, #52]	; (800d75c <NetworkParams::callbackFunction(char const*)+0x12c>)
 800d728:	ab03      	add	r3, sp, #12
 800d72a:	f105 0215 	add.w	r2, r5, #21
 800d72e:	f000 fe97 	bl	800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d732:	2800      	cmp	r0, #0
 800d734:	d192      	bne.n	800d65c <NetworkParams::callbackFunction(char const*)+0x2c>
 800d736:	9b03      	ldr	r3, [sp, #12]
 800d738:	442b      	add	r3, r5
 800d73a:	7558      	strb	r0, [r3, #21]
 800d73c:	682b      	ldr	r3, [r5, #0]
 800d73e:	f043 0320 	orr.w	r3, r3, #32
 800d742:	e7eb      	b.n	800d71c <NetworkParams::callbackFunction(char const*)+0xec>
 800d744:	0801261e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, sp}
 800d748:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d74c:	080125fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, sp}
 800d750:	080125e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, sp}
 800d754:	08012615 	stmdaeq	r1, {r0, r2, r4, r9, sl, sp}
 800d758:	080125ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, sp}
 800d75c:	0801260c 	stmdaeq	r1, {r2, r3, r9, sl, sp}

0800d760 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800d760:	f7ff bf66 	b.w	800d630 <NetworkParams::callbackFunction(char const*)>

0800d764 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800d764:	b530      	push	{r4, r5, lr}
 800d766:	4614      	mov	r4, r2
 800d768:	461d      	mov	r5, r3
 800d76a:	b087      	sub	sp, #28
 800d76c:	2900      	cmp	r1, #0
 800d76e:	d040      	beq.n	800d7f2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800d770:	225e      	movs	r2, #94	; 0x5e
 800d772:	4871      	ldr	r0, [pc, #452]	; (800d938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d774:	f001 fc15 	bl	800efa2 <memmove>
 800d778:	4622      	mov	r2, r4
 800d77a:	462b      	mov	r3, r5
 800d77c:	496f      	ldr	r1, [pc, #444]	; (800d93c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d8>)
 800d77e:	a803      	add	r0, sp, #12
 800d780:	f000 fd96 	bl	800e2b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d784:	4c6c      	ldr	r4, [pc, #432]	; (800d938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d786:	6823      	ldr	r3, [r4, #0]
 800d788:	0799      	lsls	r1, r3, #30
 800d78a:	bf5f      	itttt	pl
 800d78c:	4a6c      	ldrpl	r2, [pc, #432]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d78e:	6812      	ldrpl	r2, [r2, #0]
 800d790:	6912      	ldrpl	r2, [r2, #16]
 800d792:	6062      	strpl	r2, [r4, #4]
 800d794:	075a      	lsls	r2, r3, #29
 800d796:	bf5f      	itttt	pl
 800d798:	4a69      	ldrpl	r2, [pc, #420]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d79a:	6812      	ldrpl	r2, [r2, #0]
 800d79c:	6992      	ldrpl	r2, [r2, #24]
 800d79e:	60a2      	strpl	r2, [r4, #8]
 800d7a0:	071d      	lsls	r5, r3, #28
 800d7a2:	bf5f      	itttt	pl
 800d7a4:	4a66      	ldrpl	r2, [pc, #408]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d7a6:	6812      	ldrpl	r2, [r2, #0]
 800d7a8:	6952      	ldrpl	r2, [r2, #20]
 800d7aa:	60e2      	strpl	r2, [r4, #12]
 800d7ac:	0698      	lsls	r0, r3, #26
 800d7ae:	d40c      	bmi.n	800d7ca <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800d7b0:	223f      	movs	r2, #63	; 0x3f
 800d7b2:	4b63      	ldr	r3, [pc, #396]	; (800d940 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1dc>)
 800d7b4:	4863      	ldr	r0, [pc, #396]	; (800d944 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d7b6:	681b      	ldr	r3, [r3, #0]
 800d7b8:	331b      	adds	r3, #27
 800d7ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d7be:	b9f1      	cbnz	r1, 800d7fe <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800d7c0:	f001 fc06 	bl	800efd0 <memset>
 800d7c4:	2300      	movs	r3, #0
 800d7c6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d7ca:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d7ce:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d7d2:	42a9      	cmp	r1, r5
 800d7d4:	d226      	bcs.n	800d824 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800d7d6:	9803      	ldr	r0, [sp, #12]
 800d7d8:	1a6d      	subs	r5, r5, r1
 800d7da:	4408      	add	r0, r1
 800d7dc:	6821      	ldr	r1, [r4, #0]
 800d7de:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d7e2:	07c9      	lsls	r1, r1, #31
 800d7e4:	7d23      	ldrb	r3, [r4, #20]
 800d7e6:	d40f      	bmi.n	800d808 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800d7e8:	b97a      	cbnz	r2, 800d80a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800d7ea:	9300      	str	r3, [sp, #0]
 800d7ec:	4a56      	ldr	r2, [pc, #344]	; (800d948 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d7ee:	4b57      	ldr	r3, [pc, #348]	; (800d94c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d7f0:	e00e      	b.n	800d810 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d7f2:	6800      	ldr	r0, [r0, #0]
 800d7f4:	4950      	ldr	r1, [pc, #320]	; (800d938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1d4>)
 800d7f6:	6803      	ldr	r3, [r0, #0]
 800d7f8:	68db      	ldr	r3, [r3, #12]
 800d7fa:	4798      	blx	r3
 800d7fc:	e7bc      	b.n	800d778 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d7fe:	3a01      	subs	r2, #1
 800d800:	f800 1b01 	strb.w	r1, [r0], #1
 800d804:	d1d9      	bne.n	800d7ba <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800d806:	e7dd      	b.n	800d7c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800d808:	b30a      	cbz	r2, 800d84e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800d80a:	9300      	str	r3, [sp, #0]
 800d80c:	4a50      	ldr	r2, [pc, #320]	; (800d950 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d80e:	4b4f      	ldr	r3, [pc, #316]	; (800d94c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d810:	4629      	mov	r1, r5
 800d812:	f7fb f991 	bl	8008b38 <snprintf>
 800d816:	4285      	cmp	r5, r0
 800d818:	bfa2      	ittt	ge
 800d81a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d81e:	18c0      	addge	r0, r0, r3
 800d820:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d824:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d828:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d82c:	42a9      	cmp	r1, r5
 800d82e:	d221      	bcs.n	800d874 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800d830:	9803      	ldr	r0, [sp, #12]
 800d832:	1a6d      	subs	r5, r5, r1
 800d834:	4408      	add	r0, r1
 800d836:	6821      	ldr	r1, [r4, #0]
 800d838:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d83c:	05c9      	lsls	r1, r1, #23
 800d83e:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800d842:	d408      	bmi.n	800d856 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800d844:	b94a      	cbnz	r2, 800d85a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800d846:	9300      	str	r3, [sp, #0]
 800d848:	4a3f      	ldr	r2, [pc, #252]	; (800d948 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e4>)
 800d84a:	4b42      	ldr	r3, [pc, #264]	; (800d954 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d84c:	e008      	b.n	800d860 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d84e:	9300      	str	r3, [sp, #0]
 800d850:	4a41      	ldr	r2, [pc, #260]	; (800d958 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d852:	4b3e      	ldr	r3, [pc, #248]	; (800d94c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e8>)
 800d854:	e7dc      	b.n	800d810 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800d856:	2a00      	cmp	r2, #0
 800d858:	d03e      	beq.n	800d8d8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800d85a:	9300      	str	r3, [sp, #0]
 800d85c:	4a3c      	ldr	r2, [pc, #240]	; (800d950 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>)
 800d85e:	4b3d      	ldr	r3, [pc, #244]	; (800d954 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d860:	4629      	mov	r1, r5
 800d862:	f7fb f969 	bl	8008b38 <snprintf>
 800d866:	4285      	cmp	r5, r0
 800d868:	bfa2      	ittt	ge
 800d86a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d86e:	18c0      	addge	r0, r0, r3
 800d870:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d874:	4939      	ldr	r1, [pc, #228]	; (800d95c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>)
 800d876:	a803      	add	r0, sp, #12
 800d878:	f000 fda0 	bl	800e3bc <PropertiesBuilder::AddComment(char const*)>
 800d87c:	6823      	ldr	r3, [r4, #0]
 800d87e:	6862      	ldr	r2, [r4, #4]
 800d880:	4937      	ldr	r1, [pc, #220]	; (800d960 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fc>)
 800d882:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d886:	a803      	add	r0, sp, #12
 800d888:	f000 fd54 	bl	800e334 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d88c:	6823      	ldr	r3, [r4, #0]
 800d88e:	68a2      	ldr	r2, [r4, #8]
 800d890:	4934      	ldr	r1, [pc, #208]	; (800d964 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>)
 800d892:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800d896:	a803      	add	r0, sp, #12
 800d898:	f000 fd4c 	bl	800e334 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d89c:	6823      	ldr	r3, [r4, #0]
 800d89e:	4932      	ldr	r1, [pc, #200]	; (800d968 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>)
 800d8a0:	68e2      	ldr	r2, [r4, #12]
 800d8a2:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d8a6:	a803      	add	r0, sp, #12
 800d8a8:	f000 fd44 	bl	800e334 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800d8ac:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d8b0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d8b4:	42a9      	cmp	r1, r5
 800d8b6:	d221      	bcs.n	800d8fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x198>
 800d8b8:	6823      	ldr	r3, [r4, #0]
 800d8ba:	9803      	ldr	r0, [sp, #12]
 800d8bc:	f013 0f20 	tst.w	r3, #32
 800d8c0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d8c4:	4b1f      	ldr	r3, [pc, #124]	; (800d944 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1e0>)
 800d8c6:	4408      	add	r0, r1
 800d8c8:	eba5 0501 	sub.w	r5, r5, r1
 800d8cc:	d108      	bne.n	800d8e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800d8ce:	b942      	cbnz	r2, 800d8e2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 800d8d0:	9300      	str	r3, [sp, #0]
 800d8d2:	4a26      	ldr	r2, [pc, #152]	; (800d96c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x208>)
 800d8d4:	4b26      	ldr	r3, [pc, #152]	; (800d970 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d8d6:	e007      	b.n	800d8e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d8d8:	9300      	str	r3, [sp, #0]
 800d8da:	4a1f      	ldr	r2, [pc, #124]	; (800d958 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>)
 800d8dc:	4b1d      	ldr	r3, [pc, #116]	; (800d954 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>)
 800d8de:	e7bf      	b.n	800d860 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800d8e0:	b32a      	cbz	r2, 800d92e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ca>
 800d8e2:	9300      	str	r3, [sp, #0]
 800d8e4:	4a23      	ldr	r2, [pc, #140]	; (800d974 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d8e6:	4b22      	ldr	r3, [pc, #136]	; (800d970 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d8e8:	4629      	mov	r1, r5
 800d8ea:	f7fb f925 	bl	8008b38 <snprintf>
 800d8ee:	4285      	cmp	r5, r0
 800d8f0:	bfa2      	ittt	ge
 800d8f2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d8f6:	18c0      	addge	r0, r0, r3
 800d8f8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d8fc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d900:	b17b      	cbz	r3, 800d922 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1be>
 800d902:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d906:	9b03      	ldr	r3, [sp, #12]
 800d908:	4413      	add	r3, r2
 800d90a:	227d      	movs	r2, #125	; 0x7d
 800d90c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d910:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d914:	9903      	ldr	r1, [sp, #12]
 800d916:	54ca      	strb	r2, [r1, r3]
 800d918:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d91c:	3301      	adds	r3, #1
 800d91e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d922:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d926:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d928:	601a      	str	r2, [r3, #0]
 800d92a:	b007      	add	sp, #28
 800d92c:	bd30      	pop	{r4, r5, pc}
 800d92e:	9300      	str	r3, [sp, #0]
 800d930:	4a11      	ldr	r2, [pc, #68]	; (800d978 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d932:	4b0f      	ldr	r3, [pc, #60]	; (800d970 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d934:	e7d8      	b.n	800d8e8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 800d936:	bf00      	nop
 800d938:	2000948c 	andcs	r9, r0, ip, lsl #9
 800d93c:	08012627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, sp}
 800d940:	20009488 	andcs	r9, r0, r8, lsl #9
 800d944:	200094a1 	andcs	r9, r0, r1, lsr #9
 800d948:	08011199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip}
 800d94c:	0801261e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, sp}
 800d950:	08011190 	stmdaeq	r1, {r4, r7, r8, ip}
 800d954:	080125fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, sp}
 800d958:	0801119a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip}
 800d95c:	080125d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl, sp}
 800d960:	080125e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, sp}
 800d964:	08012615 	stmdaeq	r1, {r0, r2, r4, r9, sl, sp}
 800d968:	080125ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, sp}
 800d96c:	080111ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip}
 800d970:	0801260c 	stmdaeq	r1, {r2, r3, r9, sl, sp}
 800d974:	080111a1 	stmdaeq	r1, {r0, r5, r7, r8, ip}
 800d978:	080111ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, ip}

0800d97c <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800d97c:	b513      	push	{r0, r1, r4, lr}
 800d97e:	6804      	ldr	r4, [r0, #0]
 800d980:	b914      	cbnz	r4, 800d988 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d982:	601c      	str	r4, [r3, #0]
 800d984:	b002      	add	sp, #8
 800d986:	bd10      	pop	{r4, pc}
 800d988:	9300      	str	r3, [sp, #0]
 800d98a:	4613      	mov	r3, r2
 800d98c:	460a      	mov	r2, r1
 800d98e:	2100      	movs	r1, #0
 800d990:	f7ff fee8 	bl	800d764 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800d994:	e7f6      	b.n	800d984 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d996 <NetworkParams::Dump()>:
 800d996:	4770      	bx	lr

0800d998 <memcpy.isra.0>:
 800d998:	3801      	subs	r0, #1
 800d99a:	440a      	add	r2, r1
 800d99c:	4291      	cmp	r1, r2
 800d99e:	d100      	bne.n	800d9a2 <memcpy.isra.0+0xa>
 800d9a0:	4770      	bx	lr
 800d9a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d9a6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d9aa:	e7f7      	b.n	800d99c <memcpy.isra.0+0x4>

0800d9ac <arp_announce>:
 800d9ac:	4803      	ldr	r0, [pc, #12]	; (800d9bc <arp_announce+0x10>)
 800d9ae:	69c3      	ldr	r3, [r0, #28]
 800d9b0:	b113      	cbz	r3, 800d9b8 <arp_announce+0xc>
 800d9b2:	212a      	movs	r1, #42	; 0x2a
 800d9b4:	f002 babe 	b.w	800ff34 <emac_eth_send>
 800d9b8:	4770      	bx	lr
 800d9ba:	bf00      	nop
 800d9bc:	200094ec 	andcs	r9, r0, ip, ror #9

0800d9c0 <arp_handle_request>:
 800d9c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9c2:	2204      	movs	r2, #4
 800d9c4:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800d9c8:	4604      	mov	r4, r0
 800d9ca:	eb0d 0002 	add.w	r0, sp, r2
 800d9ce:	f7ff ffe3 	bl	800d998 <memcpy.isra.0>
 800d9d2:	4b0d      	ldr	r3, [pc, #52]	; (800da08 <arp_handle_request+0x48>)
 800d9d4:	9a01      	ldr	r2, [sp, #4]
 800d9d6:	69db      	ldr	r3, [r3, #28]
 800d9d8:	429a      	cmp	r2, r3
 800d9da:	d113      	bne.n	800da04 <arp_handle_request+0x44>
 800d9dc:	2206      	movs	r2, #6
 800d9de:	4d0b      	ldr	r5, [pc, #44]	; (800da0c <arp_handle_request+0x4c>)
 800d9e0:	18a1      	adds	r1, r4, r2
 800d9e2:	4628      	mov	r0, r5
 800d9e4:	f7ff ffd8 	bl	800d998 <memcpy.isra.0>
 800d9e8:	f104 0116 	add.w	r1, r4, #22
 800d9ec:	f105 0020 	add.w	r0, r5, #32
 800d9f0:	2206      	movs	r2, #6
 800d9f2:	f7ff ffd1 	bl	800d998 <memcpy.isra.0>
 800d9f6:	69e3      	ldr	r3, [r4, #28]
 800d9f8:	212a      	movs	r1, #42	; 0x2a
 800d9fa:	4628      	mov	r0, r5
 800d9fc:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800da00:	f002 fa98 	bl	800ff34 <emac_eth_send>
 800da04:	b003      	add	sp, #12
 800da06:	bd30      	pop	{r4, r5, pc}
 800da08:	200094ec 	andcs	r9, r0, ip, ror #9
 800da0c:	20009518 	andcs	r9, r0, r8, lsl r5

0800da10 <arp_handle_reply>:
 800da10:	69c1      	ldr	r1, [r0, #28]
 800da12:	3016      	adds	r0, #22
 800da14:	f000 b80a 	b.w	800da2c <arp_cache_update>

0800da18 <arp_send_request>:
 800da18:	4b03      	ldr	r3, [pc, #12]	; (800da28 <arp_send_request+0x10>)
 800da1a:	212a      	movs	r1, #42	; 0x2a
 800da1c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800da20:	4618      	mov	r0, r3
 800da22:	f002 ba87 	b.w	800ff34 <emac_eth_send>
 800da26:	bf00      	nop
 800da28:	20009544 	andcs	r9, r0, r4, asr #10

0800da2c <arp_cache_update>:
 800da2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da2e:	4e11      	ldr	r6, [pc, #68]	; (800da74 <arp_cache_update+0x48>)
 800da30:	8833      	ldrh	r3, [r6, #0]
 800da32:	2b20      	cmp	r3, #32
 800da34:	d018      	beq.n	800da68 <arp_cache_update+0x3c>
 800da36:	2400      	movs	r4, #0
 800da38:	220c      	movs	r2, #12
 800da3a:	4d0f      	ldr	r5, [pc, #60]	; (800da78 <arp_cache_update+0x4c>)
 800da3c:	b2a7      	uxth	r7, r4
 800da3e:	42bb      	cmp	r3, r7
 800da40:	d80b      	bhi.n	800da5a <arp_cache_update+0x2e>
 800da42:	fb02 5203 	mla	r2, r2, r3, r5
 800da46:	1d84      	adds	r4, r0, #6
 800da48:	3203      	adds	r2, #3
 800da4a:	42a0      	cmp	r0, r4
 800da4c:	d10d      	bne.n	800da6a <arp_cache_update+0x3e>
 800da4e:	220c      	movs	r2, #12
 800da50:	435a      	muls	r2, r3
 800da52:	3301      	adds	r3, #1
 800da54:	50a9      	str	r1, [r5, r2]
 800da56:	8033      	strh	r3, [r6, #0]
 800da58:	e006      	b.n	800da68 <arp_cache_update+0x3c>
 800da5a:	3401      	adds	r4, #1
 800da5c:	fb02 5704 	mla	r7, r2, r4, r5
 800da60:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800da64:	428f      	cmp	r7, r1
 800da66:	d1e9      	bne.n	800da3c <arp_cache_update+0x10>
 800da68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da6a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800da6e:	f802 7f01 	strb.w	r7, [r2, #1]!
 800da72:	e7ea      	b.n	800da4a <arp_cache_update+0x1e>
 800da74:	200096f0 	strdcs	r9, [r0], -r0
 800da78:	20009570 	andcs	r9, r0, r0, ror r5

0800da7c <arp_cache_lookup>:
 800da7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800da80:	2200      	movs	r2, #0
 800da82:	4606      	mov	r6, r0
 800da84:	460c      	mov	r4, r1
 800da86:	200c      	movs	r0, #12
 800da88:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800db10 <arp_cache_lookup+0x94>
 800da8c:	fb00 f302 	mul.w	r3, r0, r2
 800da90:	f853 1008 	ldr.w	r1, [r3, r8]
 800da94:	42b1      	cmp	r1, r6
 800da96:	d10d      	bne.n	800dab4 <arp_cache_lookup+0x38>
 800da98:	3304      	adds	r3, #4
 800da9a:	4443      	add	r3, r8
 800da9c:	3c01      	subs	r4, #1
 800da9e:	1d9a      	adds	r2, r3, #6
 800daa0:	4293      	cmp	r3, r2
 800daa2:	d102      	bne.n	800daaa <arp_cache_lookup+0x2e>
 800daa4:	4630      	mov	r0, r6
 800daa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800daaa:	f813 1b01 	ldrb.w	r1, [r3], #1
 800daae:	f804 1f01 	strb.w	r1, [r4, #1]!
 800dab2:	e7f5      	b.n	800daa0 <arp_cache_lookup+0x24>
 800dab4:	b111      	cbz	r1, 800dabc <arp_cache_lookup+0x40>
 800dab6:	3201      	adds	r2, #1
 800dab8:	2a20      	cmp	r2, #32
 800daba:	d1e7      	bne.n	800da8c <arp_cache_lookup+0x10>
 800dabc:	2704      	movs	r7, #4
 800dabe:	f8df a054 	ldr.w	sl, [pc, #84]	; 800db14 <arp_cache_lookup+0x98>
 800dac2:	f8ba 5000 	ldrh.w	r5, [sl]
 800dac6:	3f01      	subs	r7, #1
 800dac8:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800dacc:	d101      	bne.n	800dad2 <arp_cache_lookup+0x56>
 800dace:	463e      	mov	r6, r7
 800dad0:	e7e8      	b.n	800daa4 <arp_cache_lookup+0x28>
 800dad2:	4630      	mov	r0, r6
 800dad4:	f7ff ffa0 	bl	800da18 <arp_send_request>
 800dad8:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800dadc:	f1b9 0901 	subs.w	r9, r9, #1
 800dae0:	f8ba 3000 	ldrh.w	r3, [sl]
 800dae4:	d011      	beq.n	800db0a <arp_cache_lookup+0x8e>
 800dae6:	429d      	cmp	r5, r3
 800dae8:	d00c      	beq.n	800db04 <arp_cache_lookup+0x88>
 800daea:	230c      	movs	r3, #12
 800daec:	fb03 8505 	mla	r5, r3, r5, r8
 800daf0:	3c01      	subs	r4, #1
 800daf2:	1d2b      	adds	r3, r5, #4
 800daf4:	350a      	adds	r5, #10
 800daf6:	42ab      	cmp	r3, r5
 800daf8:	d0d4      	beq.n	800daa4 <arp_cache_lookup+0x28>
 800dafa:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dafe:	f804 2f01 	strb.w	r2, [r4, #1]!
 800db02:	e7f8      	b.n	800daf6 <arp_cache_lookup+0x7a>
 800db04:	f7f9 fd10 	bl	8007528 <net_handle>
 800db08:	e7e8      	b.n	800dadc <arp_cache_lookup+0x60>
 800db0a:	429d      	cmp	r5, r3
 800db0c:	d0db      	beq.n	800dac6 <arp_cache_lookup+0x4a>
 800db0e:	e7ec      	b.n	800daea <arp_cache_lookup+0x6e>
 800db10:	20009570 	andcs	r9, r0, r0, ror r5
 800db14:	200096f0 	strdcs	r9, [r0], -r0

0800db18 <_parse_response>:
 800db18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db1c:	460c      	mov	r4, r1
 800db1e:	4e5b      	ldr	r6, [pc, #364]	; (800dc8c <_parse_response+0x174>)
 800db20:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800db24:	6837      	ldr	r7, [r6, #0]
 800db26:	b2c5      	uxtb	r5, r0
 800db28:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800db2c:	f7f9 fcfc 	bl	8007528 <net_handle>
 800db30:	f44f 7209 	mov.w	r2, #548	; 0x224
 800db34:	4628      	mov	r0, r5
 800db36:	f8cd 8000 	str.w	r8, [sp]
 800db3a:	ab0a      	add	r3, sp, #40	; 0x28
 800db3c:	a90b      	add	r1, sp, #44	; 0x2c
 800db3e:	f7fe fe29 	bl	800c794 <udp_recv>
 800db42:	2800      	cmp	r0, #0
 800db44:	d05f      	beq.n	800dc06 <_parse_response+0xee>
 800db46:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800db4a:	2b43      	cmp	r3, #67	; 0x43
 800db4c:	d15b      	bne.n	800dc06 <_parse_response+0xee>
 800db4e:	aa12      	add	r2, sp, #72	; 0x48
 800db50:	1e63      	subs	r3, r4, #1
 800db52:	1d61      	adds	r1, r4, #5
 800db54:	428b      	cmp	r3, r1
 800db56:	d150      	bne.n	800dbfa <_parse_response+0xe2>
 800db58:	2100      	movs	r1, #0
 800db5a:	ab0b      	add	r3, sp, #44	; 0x2c
 800db5c:	181c      	adds	r4, r3, r0
 800db5e:	4608      	mov	r0, r1
 800db60:	4b4b      	ldr	r3, [pc, #300]	; (800dc90 <_parse_response+0x178>)
 800db62:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800db66:	781a      	ldrb	r2, [r3, #0]
 800db68:	f893 b001 	ldrb.w	fp, [r3, #1]
 800db6c:	f893 c002 	ldrb.w	ip, [r3, #2]
 800db70:	78dd      	ldrb	r5, [r3, #3]
 800db72:	4b48      	ldr	r3, [pc, #288]	; (800dc94 <_parse_response+0x17c>)
 800db74:	9207      	str	r2, [sp, #28]
 800db76:	781a      	ldrb	r2, [r3, #0]
 800db78:	789f      	ldrb	r7, [r3, #2]
 800db7a:	78de      	ldrb	r6, [r3, #3]
 800db7c:	9206      	str	r2, [sp, #24]
 800db7e:	785a      	ldrb	r2, [r3, #1]
 800db80:	4b45      	ldr	r3, [pc, #276]	; (800dc98 <_parse_response+0x180>)
 800db82:	9203      	str	r2, [sp, #12]
 800db84:	f893 a000 	ldrb.w	sl, [r3]
 800db88:	f893 9001 	ldrb.w	r9, [r3, #1]
 800db8c:	f893 8002 	ldrb.w	r8, [r3, #2]
 800db90:	f893 e003 	ldrb.w	lr, [r3, #3]
 800db94:	ab47      	add	r3, sp, #284	; 0x11c
 800db96:	42a3      	cmp	r3, r4
 800db98:	d33f      	bcc.n	800dc1a <_parse_response+0x102>
 800db9a:	9b04      	ldr	r3, [sp, #16]
 800db9c:	b143      	cbz	r3, 800dbb0 <_parse_response+0x98>
 800db9e:	4b3e      	ldr	r3, [pc, #248]	; (800dc98 <_parse_response+0x180>)
 800dba0:	f883 a000 	strb.w	sl, [r3]
 800dba4:	f883 9001 	strb.w	r9, [r3, #1]
 800dba8:	f883 8002 	strb.w	r8, [r3, #2]
 800dbac:	f883 e003 	strb.w	lr, [r3, #3]
 800dbb0:	9b05      	ldr	r3, [sp, #20]
 800dbb2:	b133      	cbz	r3, 800dbc2 <_parse_response+0xaa>
 800dbb4:	4b37      	ldr	r3, [pc, #220]	; (800dc94 <_parse_response+0x17c>)
 800dbb6:	9a06      	ldr	r2, [sp, #24]
 800dbb8:	709f      	strb	r7, [r3, #2]
 800dbba:	701a      	strb	r2, [r3, #0]
 800dbbc:	9a03      	ldr	r2, [sp, #12]
 800dbbe:	70de      	strb	r6, [r3, #3]
 800dbc0:	705a      	strb	r2, [r3, #1]
 800dbc2:	b139      	cbz	r1, 800dbd4 <_parse_response+0xbc>
 800dbc4:	4b32      	ldr	r3, [pc, #200]	; (800dc90 <_parse_response+0x178>)
 800dbc6:	9a07      	ldr	r2, [sp, #28]
 800dbc8:	f883 b001 	strb.w	fp, [r3, #1]
 800dbcc:	701a      	strb	r2, [r3, #0]
 800dbce:	f883 c002 	strb.w	ip, [r3, #2]
 800dbd2:	70dd      	strb	r5, [r3, #3]
 800dbd4:	2802      	cmp	r0, #2
 800dbd6:	d10c      	bne.n	800dbf2 <_parse_response+0xda>
 800dbd8:	4b30      	ldr	r3, [pc, #192]	; (800dc9c <_parse_response+0x184>)
 800dbda:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800dbde:	701a      	strb	r2, [r3, #0]
 800dbe0:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800dbe4:	705a      	strb	r2, [r3, #1]
 800dbe6:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800dbea:	709a      	strb	r2, [r3, #2]
 800dbec:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800dbf0:	70da      	strb	r2, [r3, #3]
 800dbf2:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800dbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbfa:	f812 cb01 	ldrb.w	ip, [r2], #1
 800dbfe:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800dc02:	45e6      	cmp	lr, ip
 800dc04:	d0a6      	beq.n	800db54 <_parse_response+0x3c>
 800dc06:	6833      	ldr	r3, [r6, #0]
 800dc08:	1bdb      	subs	r3, r3, r7
 800dc0a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800dc0e:	d38b      	bcc.n	800db28 <_parse_response+0x10>
 800dc10:	2800      	cmp	r0, #0
 800dc12:	d1a1      	bne.n	800db58 <_parse_response+0x40>
 800dc14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dc18:	e7eb      	b.n	800dbf2 <_parse_response+0xda>
 800dc1a:	781a      	ldrb	r2, [r3, #0]
 800dc1c:	2a35      	cmp	r2, #53	; 0x35
 800dc1e:	d011      	beq.n	800dc44 <_parse_response+0x12c>
 800dc20:	d808      	bhi.n	800dc34 <_parse_response+0x11c>
 800dc22:	2a01      	cmp	r2, #1
 800dc24:	d011      	beq.n	800dc4a <_parse_response+0x132>
 800dc26:	2a03      	cmp	r2, #3
 800dc28:	d01a      	beq.n	800dc60 <_parse_response+0x148>
 800dc2a:	b14a      	cbz	r2, 800dc40 <_parse_response+0x128>
 800dc2c:	1c9a      	adds	r2, r3, #2
 800dc2e:	785b      	ldrb	r3, [r3, #1]
 800dc30:	4413      	add	r3, r2
 800dc32:	e7b0      	b.n	800db96 <_parse_response+0x7e>
 800dc34:	2a36      	cmp	r2, #54	; 0x36
 800dc36:	d01f      	beq.n	800dc78 <_parse_response+0x160>
 800dc38:	2aff      	cmp	r2, #255	; 0xff
 800dc3a:	d1f7      	bne.n	800dc2c <_parse_response+0x114>
 800dc3c:	4623      	mov	r3, r4
 800dc3e:	e7aa      	b.n	800db96 <_parse_response+0x7e>
 800dc40:	3301      	adds	r3, #1
 800dc42:	e7a8      	b.n	800db96 <_parse_response+0x7e>
 800dc44:	7898      	ldrb	r0, [r3, #2]
 800dc46:	3303      	adds	r3, #3
 800dc48:	e7a5      	b.n	800db96 <_parse_response+0x7e>
 800dc4a:	f893 a002 	ldrb.w	sl, [r3, #2]
 800dc4e:	f893 9003 	ldrb.w	r9, [r3, #3]
 800dc52:	f893 8004 	ldrb.w	r8, [r3, #4]
 800dc56:	f893 e005 	ldrb.w	lr, [r3, #5]
 800dc5a:	9204      	str	r2, [sp, #16]
 800dc5c:	3306      	adds	r3, #6
 800dc5e:	e79a      	b.n	800db96 <_parse_response+0x7e>
 800dc60:	789a      	ldrb	r2, [r3, #2]
 800dc62:	791f      	ldrb	r7, [r3, #4]
 800dc64:	9206      	str	r2, [sp, #24]
 800dc66:	78da      	ldrb	r2, [r3, #3]
 800dc68:	795e      	ldrb	r6, [r3, #5]
 800dc6a:	9203      	str	r2, [sp, #12]
 800dc6c:	785a      	ldrb	r2, [r3, #1]
 800dc6e:	4413      	add	r3, r2
 800dc70:	2201      	movs	r2, #1
 800dc72:	3302      	adds	r3, #2
 800dc74:	9205      	str	r2, [sp, #20]
 800dc76:	e78e      	b.n	800db96 <_parse_response+0x7e>
 800dc78:	789a      	ldrb	r2, [r3, #2]
 800dc7a:	f893 b003 	ldrb.w	fp, [r3, #3]
 800dc7e:	f893 c004 	ldrb.w	ip, [r3, #4]
 800dc82:	795d      	ldrb	r5, [r3, #5]
 800dc84:	2101      	movs	r1, #1
 800dc86:	9207      	str	r2, [sp, #28]
 800dc88:	3306      	adds	r3, #6
 800dc8a:	e784      	b.n	800db96 <_parse_response+0x7e>
 800dc8c:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800dc90:	20009924 	andcs	r9, r0, r4, lsr #18
 800dc94:	200096f4 	strdcs	r9, [r0], -r4
 800dc98:	200096fc 	strdcs	r9, [r0], -ip
 800dc9c:	200096f8 	strdcs	r9, [r0], -r8

0800dca0 <memcpy.isra.0>:
 800dca0:	3801      	subs	r0, #1
 800dca2:	440a      	add	r2, r1
 800dca4:	4291      	cmp	r1, r2
 800dca6:	d100      	bne.n	800dcaa <memcpy.isra.0+0xa>
 800dca8:	4770      	bx	lr
 800dcaa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dcae:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dcb2:	e7f7      	b.n	800dca4 <memcpy.isra.0+0x4>

0800dcb4 <dhcp_client>:
 800dcb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcb8:	b087      	sub	sp, #28
 800dcba:	9203      	str	r2, [sp, #12]
 800dcbc:	4a77      	ldr	r2, [pc, #476]	; (800de9c <dhcp_client+0x1e8>)
 800dcbe:	460f      	mov	r7, r1
 800dcc0:	4605      	mov	r5, r0
 800dcc2:	f44f 7309 	mov.w	r3, #548	; 0x224
 800dcc6:	4614      	mov	r4, r2
 800dcc8:	2100      	movs	r1, #0
 800dcca:	3b01      	subs	r3, #1
 800dccc:	f802 1b01 	strb.w	r1, [r2], #1
 800dcd0:	d1fb      	bne.n	800dcca <dhcp_client+0x16>
 800dcd2:	f240 1301 	movw	r3, #257	; 0x101
 800dcd6:	2206      	movs	r2, #6
 800dcd8:	4629      	mov	r1, r5
 800dcda:	4871      	ldr	r0, [pc, #452]	; (800dea0 <dhcp_client+0x1ec>)
 800dcdc:	8023      	strh	r3, [r4, #0]
 800dcde:	70a2      	strb	r2, [r4, #2]
 800dce0:	f7ff ffde 	bl	800dca0 <memcpy.isra.0>
 800dce4:	4b6f      	ldr	r3, [pc, #444]	; (800dea4 <dhcp_client+0x1f0>)
 800dce6:	2044      	movs	r0, #68	; 0x44
 800dce8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800dcec:	f240 1335 	movw	r3, #309	; 0x135
 800dcf0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800dcf4:	f7fe fd14 	bl	800c720 <udp_bind>
 800dcf8:	1e06      	subs	r6, r0, #0
 800dcfa:	f2c0 80c9 	blt.w	800de90 <dhcp_client+0x1dc>
 800dcfe:	f04f 0915 	mov.w	r9, #21
 800dd02:	f8df a198 	ldr.w	sl, [pc, #408]	; 800de9c <dhcp_client+0x1e8>
 800dd06:	f1b9 0901 	subs.w	r9, r9, #1
 800dd0a:	d11f      	bne.n	800dd4c <dhcp_client+0x98>
 800dd0c:	464c      	mov	r4, r9
 800dd0e:	2044      	movs	r0, #68	; 0x44
 800dd10:	f7fe fd20 	bl	800c754 <udp_unbind>
 800dd14:	2c00      	cmp	r4, #0
 800dd16:	f000 80be 	beq.w	800de96 <dhcp_client+0x1e2>
 800dd1a:	2204      	movs	r2, #4
 800dd1c:	4962      	ldr	r1, [pc, #392]	; (800dea8 <dhcp_client+0x1f4>)
 800dd1e:	a805      	add	r0, sp, #20
 800dd20:	f7ff ffbe 	bl	800dca0 <memcpy.isra.0>
 800dd24:	9b05      	ldr	r3, [sp, #20]
 800dd26:	2204      	movs	r2, #4
 800dd28:	4960      	ldr	r1, [pc, #384]	; (800deac <dhcp_client+0x1f8>)
 800dd2a:	603b      	str	r3, [r7, #0]
 800dd2c:	a805      	add	r0, sp, #20
 800dd2e:	f7ff ffb7 	bl	800dca0 <memcpy.isra.0>
 800dd32:	9b05      	ldr	r3, [sp, #20]
 800dd34:	a805      	add	r0, sp, #20
 800dd36:	60bb      	str	r3, [r7, #8]
 800dd38:	2204      	movs	r2, #4
 800dd3a:	495d      	ldr	r1, [pc, #372]	; (800deb0 <dhcp_client+0x1fc>)
 800dd3c:	f7ff ffb0 	bl	800dca0 <memcpy.isra.0>
 800dd40:	2000      	movs	r0, #0
 800dd42:	9b05      	ldr	r3, [sp, #20]
 800dd44:	607b      	str	r3, [r7, #4]
 800dd46:	b007      	add	sp, #28
 800dd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd4c:	f643 5301 	movw	r3, #15617	; 0x3d01
 800dd50:	f240 1807 	movw	r8, #263	; 0x107
 800dd54:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800dd58:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800dd5c:	782b      	ldrb	r3, [r5, #0]
 800dd5e:	4a55      	ldr	r2, [pc, #340]	; (800deb4 <dhcp_client+0x200>)
 800dd60:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800dd64:	786b      	ldrb	r3, [r5, #1]
 800dd66:	fa5f fb86 	uxtb.w	fp, r6
 800dd6a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800dd6e:	78ab      	ldrb	r3, [r5, #2]
 800dd70:	4651      	mov	r1, sl
 800dd72:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800dd76:	78eb      	ldrb	r3, [r5, #3]
 800dd78:	4658      	mov	r0, fp
 800dd7a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800dd7e:	792b      	ldrb	r3, [r5, #4]
 800dd80:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dd84:	796b      	ldrb	r3, [r5, #5]
 800dd86:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dd8a:	4b4b      	ldr	r3, [pc, #300]	; (800deb8 <dhcp_client+0x204>)
 800dd8c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800dd90:	23ff      	movs	r3, #255	; 0xff
 800dd92:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800dd96:	2343      	movs	r3, #67	; 0x43
 800dd98:	f240 1205 	movw	r2, #261	; 0x105
 800dd9c:	9300      	str	r3, [sp, #0]
 800dd9e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dda2:	f7fe fd53 	bl	800c84c <udp_send>
 800dda6:	4629      	mov	r1, r5
 800dda8:	4630      	mov	r0, r6
 800ddaa:	f7ff feb5 	bl	800db18 <_parse_response>
 800ddae:	2802      	cmp	r0, #2
 800ddb0:	d1a9      	bne.n	800dd06 <dhcp_client+0x52>
 800ddb2:	f643 5303 	movw	r3, #15619	; 0x3d03
 800ddb6:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800ddba:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800ddbe:	782b      	ldrb	r3, [r5, #0]
 800ddc0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800debc <dhcp_client+0x208>
 800ddc4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800ddc8:	786b      	ldrb	r3, [r5, #1]
 800ddca:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800ddce:	78ab      	ldrb	r3, [r5, #2]
 800ddd0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800ddd4:	78eb      	ldrb	r3, [r5, #3]
 800ddd6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800ddda:	792b      	ldrb	r3, [r5, #4]
 800dddc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800dde0:	796b      	ldrb	r3, [r5, #5]
 800dde2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800dde6:	f240 4332 	movw	r3, #1074	; 0x432
 800ddea:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800ddee:	4b2e      	ldr	r3, [pc, #184]	; (800dea8 <dhcp_client+0x1f4>)
 800ddf0:	881a      	ldrh	r2, [r3, #0]
 800ddf2:	885b      	ldrh	r3, [r3, #2]
 800ddf4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800ddf8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800ddfc:	f240 4336 	movw	r3, #1078	; 0x436
 800de00:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800de04:	4b2e      	ldr	r3, [pc, #184]	; (800dec0 <dhcp_client+0x20c>)
 800de06:	221e      	movs	r2, #30
 800de08:	681b      	ldr	r3, [r3, #0]
 800de0a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800de0e:	230c      	movs	r3, #12
 800de10:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800de14:	9b03      	ldr	r3, [sp, #12]
 800de16:	1e58      	subs	r0, r3, #1
 800de18:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800de1c:	f1a2 0e1e 	sub.w	lr, r2, #30
 800de20:	1c51      	adds	r1, r2, #1
 800de22:	bb8b      	cbnz	r3, 800de88 <dhcp_client+0x1d4>
 800de24:	2037      	movs	r0, #55	; 0x37
 800de26:	18a3      	adds	r3, r4, r2
 800de28:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800de2c:	2006      	movs	r0, #6
 800de2e:	4421      	add	r1, r4
 800de30:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800de34:	2103      	movs	r1, #3
 800de36:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800de3a:	210f      	movs	r1, #15
 800de3c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800de40:	213a      	movs	r1, #58	; 0x3a
 800de42:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800de46:	213b      	movs	r1, #59	; 0x3b
 800de48:	f04f 0801 	mov.w	r8, #1
 800de4c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800de50:	21ff      	movs	r1, #255	; 0xff
 800de52:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800de56:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800de5a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800de5e:	2343      	movs	r3, #67	; 0x43
 800de60:	32f5      	adds	r2, #245	; 0xf5
 800de62:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800de66:	4651      	mov	r1, sl
 800de68:	9300      	str	r3, [sp, #0]
 800de6a:	b292      	uxth	r2, r2
 800de6c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800de70:	4658      	mov	r0, fp
 800de72:	f7fe fceb 	bl	800c84c <udp_send>
 800de76:	4629      	mov	r1, r5
 800de78:	4630      	mov	r0, r6
 800de7a:	f7ff fe4d 	bl	800db18 <_parse_response>
 800de7e:	2805      	cmp	r0, #5
 800de80:	f47f af41 	bne.w	800dd06 <dhcp_client+0x52>
 800de84:	4644      	mov	r4, r8
 800de86:	e742      	b.n	800dd0e <dhcp_client+0x5a>
 800de88:	460a      	mov	r2, r1
 800de8a:	f80c 3b01 	strb.w	r3, [ip], #1
 800de8e:	e7c3      	b.n	800de18 <dhcp_client+0x164>
 800de90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800de94:	e757      	b.n	800dd46 <dhcp_client+0x92>
 800de96:	f06f 0001 	mvn.w	r0, #1
 800de9a:	e754      	b.n	800dd46 <dhcp_client+0x92>
 800de9c:	20009700 	andcs	r9, r0, r0, lsl #14
 800dea0:	2000971c 	andcs	r9, r0, ip, lsl r7
 800dea4:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800dea8:	200096f8 	strdcs	r9, [r0], -r8
 800deac:	200096f4 	strdcs	r9, [r0], -r4
 800deb0:	200096fc 	strdcs	r9, [r0], -ip
 800deb4:	03010637 	movweq	r0, #5687	; 0x1637
 800deb8:	3b3a0f06 	blcc	8e91ad8 <__exidx_end+0xe7f038>
 800debc:	2000980a 	andcs	r9, r0, sl, lsl #16
 800dec0:	20009924 	andcs	r9, r0, r4, lsr #18

0800dec4 <dhcp_client_release>:
 800dec4:	b507      	push	{r0, r1, r2, lr}
 800dec6:	2044      	movs	r0, #68	; 0x44
 800dec8:	f7fe fc2a 	bl	800c720 <udp_bind>
 800decc:	f243 6307 	movw	r3, #13831	; 0x3607
 800ded0:	4911      	ldr	r1, [pc, #68]	; (800df18 <dhcp_client_release+0x54>)
 800ded2:	b2c0      	uxtb	r0, r0
 800ded4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800ded8:	2304      	movs	r3, #4
 800deda:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800dede:	4b0f      	ldr	r3, [pc, #60]	; (800df1c <dhcp_client_release+0x58>)
 800dee0:	781a      	ldrb	r2, [r3, #0]
 800dee2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800dee6:	785a      	ldrb	r2, [r3, #1]
 800dee8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800deec:	789a      	ldrb	r2, [r3, #2]
 800deee:	78db      	ldrb	r3, [r3, #3]
 800def0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800def4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800def8:	23ff      	movs	r3, #255	; 0xff
 800defa:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800defe:	2343      	movs	r3, #67	; 0x43
 800df00:	22fa      	movs	r2, #250	; 0xfa
 800df02:	9300      	str	r3, [sp, #0]
 800df04:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800df08:	f7fe fca0 	bl	800c84c <udp_send>
 800df0c:	2044      	movs	r0, #68	; 0x44
 800df0e:	b003      	add	sp, #12
 800df10:	f85d eb04 	ldr.w	lr, [sp], #4
 800df14:	f7fe bc1e 	b.w	800c754 <udp_unbind>
 800df18:	20009700 	andcs	r9, r0, r0, lsl #14
 800df1c:	20009924 	andcs	r9, r0, r4, lsr #18

0800df20 <memcpy.isra.0>:
 800df20:	3801      	subs	r0, #1
 800df22:	440a      	add	r2, r1
 800df24:	4291      	cmp	r1, r2
 800df26:	d100      	bne.n	800df2a <memcpy.isra.0+0xa>
 800df28:	4770      	bx	lr
 800df2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800df2e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800df32:	e7f7      	b.n	800df24 <memcpy.isra.0+0x4>

0800df34 <_send_report>:
 800df34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800df36:	491c      	ldr	r1, [pc, #112]	; (800dfa8 <_send_report+0x74>)
 800df38:	4c1c      	ldr	r4, [pc, #112]	; (800dfac <_send_report+0x78>)
 800df3a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800df3e:	9001      	str	r0, [sp, #4]
 800df40:	70cb      	strb	r3, [r1, #3]
 800df42:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800df46:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800df4a:	710b      	strb	r3, [r1, #4]
 800df4c:	7148      	strb	r0, [r1, #5]
 800df4e:	2206      	movs	r2, #6
 800df50:	4620      	mov	r0, r4
 800df52:	f7ff ffe5 	bl	800df20 <memcpy.isra.0>
 800df56:	2204      	movs	r2, #4
 800df58:	2700      	movs	r7, #0
 800df5a:	4d15      	ldr	r5, [pc, #84]	; (800dfb0 <_send_report+0x7c>)
 800df5c:	eb0d 0102 	add.w	r1, sp, r2
 800df60:	882b      	ldrh	r3, [r5, #0]
 800df62:	f104 001e 	add.w	r0, r4, #30
 800df66:	f104 060e 	add.w	r6, r4, #14
 800df6a:	8263      	strh	r3, [r4, #18]
 800df6c:	f7ff ffd8 	bl	800df20 <memcpy.isra.0>
 800df70:	2118      	movs	r1, #24
 800df72:	4630      	mov	r0, r6
 800df74:	8327      	strh	r7, [r4, #24]
 800df76:	f000 f8c6 	bl	800e106 <net_chksum>
 800df7a:	2204      	movs	r2, #4
 800df7c:	8320      	strh	r0, [r4, #24]
 800df7e:	eb0d 0102 	add.w	r1, sp, r2
 800df82:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800df86:	f7ff ffcb 	bl	800df20 <memcpy.isra.0>
 800df8a:	2120      	movs	r1, #32
 800df8c:	4630      	mov	r0, r6
 800df8e:	8527      	strh	r7, [r4, #40]	; 0x28
 800df90:	f000 f8b9 	bl	800e106 <net_chksum>
 800df94:	212e      	movs	r1, #46	; 0x2e
 800df96:	8520      	strh	r0, [r4, #40]	; 0x28
 800df98:	4620      	mov	r0, r4
 800df9a:	f001 ffcb 	bl	800ff34 <emac_eth_send>
 800df9e:	882b      	ldrh	r3, [r5, #0]
 800dfa0:	3301      	adds	r3, #1
 800dfa2:	802b      	strh	r3, [r5, #0]
 800dfa4:	b003      	add	sp, #12
 800dfa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfa8:	20009a80 	andcs	r9, r0, r0, lsl #21
 800dfac:	20009a88 	andcs	r9, r0, r8, lsl #21
 800dfb0:	20009a48 	andcs	r9, r0, r8, asr #20

0800dfb4 <igmp_set_ip>:
 800dfb4:	b507      	push	{r0, r1, r2, lr}
 800dfb6:	2204      	movs	r2, #4
 800dfb8:	6803      	ldr	r3, [r0, #0]
 800dfba:	eb0d 0102 	add.w	r1, sp, r2
 800dfbe:	4806      	ldr	r0, [pc, #24]	; (800dfd8 <igmp_set_ip+0x24>)
 800dfc0:	9301      	str	r3, [sp, #4]
 800dfc2:	f7ff ffad 	bl	800df20 <memcpy.isra.0>
 800dfc6:	2204      	movs	r2, #4
 800dfc8:	4804      	ldr	r0, [pc, #16]	; (800dfdc <igmp_set_ip+0x28>)
 800dfca:	eb0d 0102 	add.w	r1, sp, r2
 800dfce:	f7ff ffa7 	bl	800df20 <memcpy.isra.0>
 800dfd2:	b003      	add	sp, #12
 800dfd4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfd8:	20009aa2 	andcs	r9, r0, r2, lsr #21
 800dfdc:	20009a6a 	andcs	r9, r0, sl, ror #20

0800dfe0 <igmp_timer>:
 800dfe0:	b570      	push	{r4, r5, r6, lr}
 800dfe2:	2500      	movs	r5, #0
 800dfe4:	2602      	movs	r6, #2
 800dfe6:	4c0a      	ldr	r4, [pc, #40]	; (800e010 <igmp_timer+0x30>)
 800dfe8:	7963      	ldrb	r3, [r4, #5]
 800dfea:	2b01      	cmp	r3, #1
 800dfec:	d109      	bne.n	800e002 <igmp_timer+0x22>
 800dfee:	7923      	ldrb	r3, [r4, #4]
 800dff0:	b13b      	cbz	r3, 800e002 <igmp_timer+0x22>
 800dff2:	3b01      	subs	r3, #1
 800dff4:	b2db      	uxtb	r3, r3
 800dff6:	7123      	strb	r3, [r4, #4]
 800dff8:	b91b      	cbnz	r3, 800e002 <igmp_timer+0x22>
 800dffa:	6820      	ldr	r0, [r4, #0]
 800dffc:	f7ff ff9a 	bl	800df34 <_send_report>
 800e000:	7166      	strb	r6, [r4, #5]
 800e002:	3501      	adds	r5, #1
 800e004:	2d24      	cmp	r5, #36	; 0x24
 800e006:	f104 0408 	add.w	r4, r4, #8
 800e00a:	d1ed      	bne.n	800dfe8 <igmp_timer+0x8>
 800e00c:	bd70      	pop	{r4, r5, r6, pc}
 800e00e:	bf00      	nop
 800e010:	20009928 	andcs	r9, r0, r8, lsr #18

0800e014 <igmp_join>:
 800e014:	b538      	push	{r3, r4, r5, lr}
 800e016:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800e01a:	2be0      	cmp	r3, #224	; 0xe0
 800e01c:	d11b      	bne.n	800e056 <igmp_join+0x42>
 800e01e:	4911      	ldr	r1, [pc, #68]	; (800e064 <igmp_join+0x50>)
 800e020:	680c      	ldr	r4, [r1, #0]
 800e022:	2c24      	cmp	r4, #36	; 0x24
 800e024:	d01a      	beq.n	800e05c <igmp_join+0x48>
 800e026:	2300      	movs	r3, #0
 800e028:	4a0f      	ldr	r2, [pc, #60]	; (800e068 <igmp_join+0x54>)
 800e02a:	429c      	cmp	r4, r3
 800e02c:	dc0d      	bgt.n	800e04a <igmp_join+0x36>
 800e02e:	f44f 7381 	mov.w	r3, #258	; 0x102
 800e032:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800e036:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800e03a:	8093      	strh	r3, [r2, #4]
 800e03c:	1c63      	adds	r3, r4, #1
 800e03e:	600b      	str	r3, [r1, #0]
 800e040:	f7ff ff78 	bl	800df34 <_send_report>
 800e044:	4623      	mov	r3, r4
 800e046:	4618      	mov	r0, r3
 800e048:	bd38      	pop	{r3, r4, r5, pc}
 800e04a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e04e:	4285      	cmp	r5, r0
 800e050:	d0f9      	beq.n	800e046 <igmp_join+0x32>
 800e052:	3301      	adds	r3, #1
 800e054:	e7e9      	b.n	800e02a <igmp_join+0x16>
 800e056:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e05a:	e7f4      	b.n	800e046 <igmp_join+0x32>
 800e05c:	f06f 0301 	mvn.w	r3, #1
 800e060:	e7f1      	b.n	800e046 <igmp_join+0x32>
 800e062:	bf00      	nop
 800e064:	20009a4c 	andcs	r9, r0, ip, asr #20
 800e068:	20009928 	andcs	r9, r0, r8, lsr #18

0800e06c <igmp_leave>:
 800e06c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e070:	2600      	movs	r6, #0
 800e072:	4f1c      	ldr	r7, [pc, #112]	; (800e0e4 <igmp_leave+0x78>)
 800e074:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800e078:	4283      	cmp	r3, r0
 800e07a:	d007      	beq.n	800e08c <igmp_leave+0x20>
 800e07c:	3601      	adds	r6, #1
 800e07e:	2e24      	cmp	r6, #36	; 0x24
 800e080:	d1f8      	bne.n	800e074 <igmp_leave+0x8>
 800e082:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e086:	b002      	add	sp, #8
 800e088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e08c:	2400      	movs	r4, #0
 800e08e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800e0e8 <igmp_leave+0x7c>
 800e092:	4d16      	ldr	r5, [pc, #88]	; (800e0ec <igmp_leave+0x80>)
 800e094:	f8b8 3000 	ldrh.w	r3, [r8]
 800e098:	2118      	movs	r1, #24
 800e09a:	9001      	str	r0, [sp, #4]
 800e09c:	4814      	ldr	r0, [pc, #80]	; (800e0f0 <igmp_leave+0x84>)
 800e09e:	826b      	strh	r3, [r5, #18]
 800e0a0:	832c      	strh	r4, [r5, #24]
 800e0a2:	f000 f830 	bl	800e106 <net_chksum>
 800e0a6:	2204      	movs	r2, #4
 800e0a8:	8328      	strh	r0, [r5, #24]
 800e0aa:	eb0d 0102 	add.w	r1, sp, r2
 800e0ae:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800e0b2:	f7ff ff35 	bl	800df20 <memcpy.isra.0>
 800e0b6:	2120      	movs	r1, #32
 800e0b8:	f105 000e 	add.w	r0, r5, #14
 800e0bc:	852c      	strh	r4, [r5, #40]	; 0x28
 800e0be:	f000 f822 	bl	800e106 <net_chksum>
 800e0c2:	212e      	movs	r1, #46	; 0x2e
 800e0c4:	8528      	strh	r0, [r5, #40]	; 0x28
 800e0c6:	4628      	mov	r0, r5
 800e0c8:	f001 ff34 	bl	800ff34 <emac_eth_send>
 800e0cc:	f8b8 3000 	ldrh.w	r3, [r8]
 800e0d0:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800e0d4:	3301      	adds	r3, #1
 800e0d6:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800e0da:	4620      	mov	r0, r4
 800e0dc:	f8a8 3000 	strh.w	r3, [r8]
 800e0e0:	80b4      	strh	r4, [r6, #4]
 800e0e2:	e7d0      	b.n	800e086 <igmp_leave+0x1a>
 800e0e4:	20009928 	andcs	r9, r0, r8, lsr #18
 800e0e8:	20009a48 	andcs	r9, r0, r8, asr #20
 800e0ec:	20009a50 	andcs	r9, r0, r0, asr sl
 800e0f0:	20009a96 	mulcs	r0, r6, sl

0800e0f4 <ip_set_ip>:
 800e0f4:	b510      	push	{r4, lr}
 800e0f6:	4604      	mov	r4, r0
 800e0f8:	f7fe faf2 	bl	800c6e0 <udp_set_ip>
 800e0fc:	4620      	mov	r0, r4
 800e0fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e102:	f7ff bf57 	b.w	800dfb4 <igmp_set_ip>

0800e106 <net_chksum>:
 800e106:	2300      	movs	r3, #0
 800e108:	f021 0201 	bic.w	r2, r1, #1
 800e10c:	b530      	push	{r4, r5, lr}
 800e10e:	4402      	add	r2, r0
 800e110:	084c      	lsrs	r4, r1, #1
 800e112:	4290      	cmp	r0, r2
 800e114:	d10e      	bne.n	800e134 <net_chksum+0x2e>
 800e116:	f06f 0201 	mvn.w	r2, #1
 800e11a:	fb02 1104 	mla	r1, r2, r4, r1
 800e11e:	b121      	cbz	r1, 800e12a <net_chksum+0x24>
 800e120:	7802      	ldrb	r2, [r0, #0]
 800e122:	0212      	lsls	r2, r2, #8
 800e124:	ba52      	rev16	r2, r2
 800e126:	b292      	uxth	r2, r2
 800e128:	4413      	add	r3, r2
 800e12a:	0c1a      	lsrs	r2, r3, #16
 800e12c:	d106      	bne.n	800e13c <net_chksum+0x36>
 800e12e:	43d8      	mvns	r0, r3
 800e130:	b280      	uxth	r0, r0
 800e132:	bd30      	pop	{r4, r5, pc}
 800e134:	f830 5b02 	ldrh.w	r5, [r0], #2
 800e138:	442b      	add	r3, r5
 800e13a:	e7ea      	b.n	800e112 <net_chksum+0xc>
 800e13c:	b29b      	uxth	r3, r3
 800e13e:	e7f3      	b.n	800e128 <net_chksum+0x22>

0800e140 <memcpy.isra.0>:
 800e140:	3801      	subs	r0, #1
 800e142:	440a      	add	r2, r1
 800e144:	4291      	cmp	r1, r2
 800e146:	d100      	bne.n	800e14a <memcpy.isra.0+0xa>
 800e148:	4770      	bx	lr
 800e14a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e14e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e152:	e7f7      	b.n	800e144 <memcpy.isra.0+0x4>

0800e154 <properties::convert_json_file(char*, unsigned short, bool)>:
 800e154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e158:	7803      	ldrb	r3, [r0, #0]
 800e15a:	2b7b      	cmp	r3, #123	; 0x7b
 800e15c:	d170      	bne.n	800e240 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 800e15e:	b322      	cbz	r2, 800e1aa <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 800e160:	2301      	movs	r3, #1
 800e162:	4606      	mov	r6, r0
 800e164:	461c      	mov	r4, r3
 800e166:	2a00      	cmp	r2, #0
 800e168:	bf0c      	ite	eq
 800e16a:	f04f 0c0a 	moveq.w	ip, #10
 800e16e:	f04f 0c00 	movne.w	ip, #0
 800e172:	273d      	movs	r7, #61	; 0x3d
 800e174:	4299      	cmp	r1, r3
 800e176:	d960      	bls.n	800e23a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800e178:	4299      	cmp	r1, r3
 800e17a:	4602      	mov	r2, r0
 800e17c:	f890 e000 	ldrb.w	lr, [r0]
 800e180:	f103 0301 	add.w	r3, r3, #1
 800e184:	f100 0001 	add.w	r0, r0, #1
 800e188:	d846      	bhi.n	800e218 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 800e18a:	1aa0      	subs	r0, r4, r2
 800e18c:	4615      	mov	r5, r2
 800e18e:	1884      	adds	r4, r0, r2
 800e190:	f812 8b01 	ldrb.w	r8, [r2], #1
 800e194:	f103 0e01 	add.w	lr, r3, #1
 800e198:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 800e19c:	d053      	beq.n	800e246 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 800e19e:	4299      	cmp	r1, r3
 800e1a0:	d957      	bls.n	800e252 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e1a2:	4673      	mov	r3, lr
 800e1a4:	f806 8b01 	strb.w	r8, [r6], #1
 800e1a8:	e7f0      	b.n	800e18c <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 800e1aa:	2323      	movs	r3, #35	; 0x23
 800e1ac:	f800 3b01 	strb.w	r3, [r0], #1
 800e1b0:	4605      	mov	r5, r0
 800e1b2:	2301      	movs	r3, #1
 800e1b4:	4299      	cmp	r1, r3
 800e1b6:	d92d      	bls.n	800e214 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 800e1b8:	f815 4b01 	ldrb.w	r4, [r5], #1
 800e1bc:	2c22      	cmp	r4, #34	; 0x22
 800e1be:	d001      	beq.n	800e1c4 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800e1c0:	3301      	adds	r3, #1
 800e1c2:	e7f7      	b.n	800e1b4 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 800e1c4:	46ac      	mov	ip, r5
 800e1c6:	4606      	mov	r6, r0
 800e1c8:	2701      	movs	r7, #1
 800e1ca:	f89c e000 	ldrb.w	lr, [ip]
 800e1ce:	4665      	mov	r5, ip
 800e1d0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e1d4:	4630      	mov	r0, r6
 800e1d6:	463c      	mov	r4, r7
 800e1d8:	f10c 0c01 	add.w	ip, ip, #1
 800e1dc:	f106 0601 	add.w	r6, r6, #1
 800e1e0:	f107 0701 	add.w	r7, r7, #1
 800e1e4:	d007      	beq.n	800e1f6 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e1e6:	3301      	adds	r3, #1
 800e1e8:	4299      	cmp	r1, r3
 800e1ea:	4665      	mov	r5, ip
 800e1ec:	f806 ec01 	strb.w	lr, [r6, #-1]
 800e1f0:	d8eb      	bhi.n	800e1ca <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 800e1f2:	463c      	mov	r4, r7
 800e1f4:	4630      	mov	r0, r6
 800e1f6:	4606      	mov	r6, r0
 800e1f8:	200a      	movs	r0, #10
 800e1fa:	3401      	adds	r4, #1
 800e1fc:	f806 0b01 	strb.w	r0, [r6], #1
 800e200:	4628      	mov	r0, r5
 800e202:	f815 7b01 	ldrb.w	r7, [r5], #1
 800e206:	2f7b      	cmp	r7, #123	; 0x7b
 800e208:	d0ad      	beq.n	800e166 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e20a:	1c5f      	adds	r7, r3, #1
 800e20c:	4299      	cmp	r1, r3
 800e20e:	463b      	mov	r3, r7
 800e210:	d8f6      	bhi.n	800e200 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800e212:	e7a8      	b.n	800e166 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800e214:	2401      	movs	r4, #1
 800e216:	e7ee      	b.n	800e1f6 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800e218:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800e21c:	d1ac      	bne.n	800e178 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800e21e:	4602      	mov	r2, r0
 800e220:	e7b3      	b.n	800e18a <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 800e222:	283a      	cmp	r0, #58	; 0x3a
 800e224:	d115      	bne.n	800e252 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800e226:	462b      	mov	r3, r5
 800e228:	e01b      	b.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e22a:	4686      	mov	lr, r0
 800e22c:	e027      	b.n	800e27e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 800e22e:	4673      	mov	r3, lr
 800e230:	f806 cb01 	strb.w	ip, [r6], #1
 800e234:	3401      	adds	r4, #1
 800e236:	3301      	adds	r3, #1
 800e238:	e79c      	b.n	800e174 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 800e23a:	4620      	mov	r0, r4
 800e23c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e240:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e244:	e7fa      	b.n	800e23c <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 800e246:	4630      	mov	r0, r6
 800e248:	f800 7b01 	strb.w	r7, [r0], #1
 800e24c:	469e      	mov	lr, r3
 800e24e:	4606      	mov	r6, r0
 800e250:	3401      	adds	r4, #1
 800e252:	4571      	cmp	r1, lr
 800e254:	462b      	mov	r3, r5
 800e256:	7828      	ldrb	r0, [r5, #0]
 800e258:	f10e 0e01 	add.w	lr, lr, #1
 800e25c:	f105 0501 	add.w	r5, r5, #1
 800e260:	d8df      	bhi.n	800e222 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 800e262:	781d      	ldrb	r5, [r3, #0]
 800e264:	461a      	mov	r2, r3
 800e266:	2d2f      	cmp	r5, #47	; 0x2f
 800e268:	4670      	mov	r0, lr
 800e26a:	f103 0301 	add.w	r3, r3, #1
 800e26e:	f10e 0e01 	add.w	lr, lr, #1
 800e272:	d8da      	bhi.n	800e22a <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 800e274:	4281      	cmp	r1, r0
 800e276:	d8f4      	bhi.n	800e262 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800e278:	2d22      	cmp	r5, #34	; 0x22
 800e27a:	bf08      	it	eq
 800e27c:	461a      	moveq	r2, r3
 800e27e:	4610      	mov	r0, r2
 800e280:	f810 5b01 	ldrb.w	r5, [r0], #1
 800e284:	f10e 0301 	add.w	r3, lr, #1
 800e288:	2d22      	cmp	r5, #34	; 0x22
 800e28a:	d0d0      	beq.n	800e22e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e28c:	2d2c      	cmp	r5, #44	; 0x2c
 800e28e:	d0ce      	beq.n	800e22e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e290:	2d7d      	cmp	r5, #125	; 0x7d
 800e292:	d0cc      	beq.n	800e22e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800e294:	4571      	cmp	r1, lr
 800e296:	d9ce      	bls.n	800e236 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 800e298:	f1a5 0e20 	sub.w	lr, r5, #32
 800e29c:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 800e2a0:	d803      	bhi.n	800e2aa <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 800e2a2:	4602      	mov	r2, r0
 800e2a4:	f806 5b01 	strb.w	r5, [r6], #1
 800e2a8:	3401      	adds	r4, #1
 800e2aa:	469e      	mov	lr, r3
 800e2ac:	e7e7      	b.n	800e27e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

0800e2b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800e2b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e2b4:	6002      	str	r2, [r0, #0]
 800e2b6:	4614      	mov	r4, r2
 800e2b8:	2200      	movs	r2, #0
 800e2ba:	4606      	mov	r6, r0
 800e2bc:	460f      	mov	r7, r1
 800e2be:	80c2      	strh	r2, [r0, #6]
 800e2c0:	4a1b      	ldr	r2, [pc, #108]	; (800e330 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800e2c2:	8083      	strh	r3, [r0, #4]
 800e2c4:	7810      	ldrb	r0, [r2, #0]
 800e2c6:	f000 0001 	and.w	r0, r0, #1
 800e2ca:	7230      	strb	r0, [r6, #8]
 800e2cc:	463d      	mov	r5, r7
 800e2ce:	782a      	ldrb	r2, [r5, #0]
 800e2d0:	3701      	adds	r7, #1
 800e2d2:	2a00      	cmp	r2, #0
 800e2d4:	d1fa      	bne.n	800e2cc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800e2d6:	1a6d      	subs	r5, r5, r1
 800e2d8:	b29b      	uxth	r3, r3
 800e2da:	b1d0      	cbz	r0, 800e312 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800e2dc:	1d2f      	adds	r7, r5, #4
 800e2de:	429f      	cmp	r7, r3
 800e2e0:	d814      	bhi.n	800e30c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e2e2:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800e2e6:	f04f 0922 	mov.w	r9, #34	; 0x22
 800e2ea:	462a      	mov	r2, r5
 800e2ec:	f884 8000 	strb.w	r8, [r4]
 800e2f0:	f884 9001 	strb.w	r9, [r4, #1]
 800e2f4:	1ca0      	adds	r0, r4, #2
 800e2f6:	f000 fe54 	bl	800efa2 <memmove>
 800e2fa:	223a      	movs	r2, #58	; 0x3a
 800e2fc:	1963      	adds	r3, r4, r5
 800e2fe:	3505      	adds	r5, #5
 800e300:	f883 9002 	strb.w	r9, [r3, #2]
 800e304:	70da      	strb	r2, [r3, #3]
 800e306:	80f5      	strh	r5, [r6, #6]
 800e308:	f804 8007 	strb.w	r8, [r4, r7]
 800e30c:	4630      	mov	r0, r6
 800e30e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e312:	1caf      	adds	r7, r5, #2
 800e314:	429f      	cmp	r7, r3
 800e316:	d8f9      	bhi.n	800e30c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e318:	4620      	mov	r0, r4
 800e31a:	2323      	movs	r3, #35	; 0x23
 800e31c:	462a      	mov	r2, r5
 800e31e:	f800 3b01 	strb.w	r3, [r0], #1
 800e322:	f000 fe3e 	bl	800efa2 <memmove>
 800e326:	230a      	movs	r3, #10
 800e328:	442c      	add	r4, r5
 800e32a:	7063      	strb	r3, [r4, #1]
 800e32c:	80f7      	strh	r7, [r6, #6]
 800e32e:	e7ed      	b.n	800e30c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800e330:	20009ab6 			; <UNDEFINED> instruction: 0x20009ab6

0800e334 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800e334:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e336:	469c      	mov	ip, r3
 800e338:	8885      	ldrh	r5, [r0, #4]
 800e33a:	88c3      	ldrh	r3, [r0, #6]
 800e33c:	b085      	sub	sp, #20
 800e33e:	42ab      	cmp	r3, r5
 800e340:	d302      	bcc.n	800e348 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800e342:	2000      	movs	r0, #0
 800e344:	b005      	add	sp, #20
 800e346:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e348:	4604      	mov	r4, r0
 800e34a:	6800      	ldr	r0, [r0, #0]
 800e34c:	1aed      	subs	r5, r5, r3
 800e34e:	4418      	add	r0, r3
 800e350:	b2d6      	uxtb	r6, r2
 800e352:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e356:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e35a:	f894 e008 	ldrb.w	lr, [r4, #8]
 800e35e:	0e12      	lsrs	r2, r2, #24
 800e360:	f1bc 0f00 	cmp.w	ip, #0
 800e364:	d109      	bne.n	800e37a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800e366:	f1be 0f00 	cmp.w	lr, #0
 800e36a:	d109      	bne.n	800e380 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800e36c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e370:	e9cd 6700 	strd	r6, r7, [sp]
 800e374:	460b      	mov	r3, r1
 800e376:	4a0e      	ldr	r2, [pc, #56]	; (800e3b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800e378:	e008      	b.n	800e38c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e37a:	f1be 0f00 	cmp.w	lr, #0
 800e37e:	d00f      	beq.n	800e3a0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800e380:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e384:	460b      	mov	r3, r1
 800e386:	e9cd 6700 	strd	r6, r7, [sp]
 800e38a:	4a0a      	ldr	r2, [pc, #40]	; (800e3b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800e38c:	4629      	mov	r1, r5
 800e38e:	f7fa fbd3 	bl	8008b38 <snprintf>
 800e392:	4285      	cmp	r5, r0
 800e394:	dbd5      	blt.n	800e342 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800e396:	88e3      	ldrh	r3, [r4, #6]
 800e398:	4403      	add	r3, r0
 800e39a:	80e3      	strh	r3, [r4, #6]
 800e39c:	2001      	movs	r0, #1
 800e39e:	e7d1      	b.n	800e344 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800e3a0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800e3a4:	e9cd 6700 	strd	r6, r7, [sp]
 800e3a8:	460b      	mov	r3, r1
 800e3aa:	4a03      	ldr	r2, [pc, #12]	; (800e3b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800e3ac:	e7ee      	b.n	800e38c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800e3ae:	bf00      	nop
 800e3b0:	08012647 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, sp}
 800e3b4:	08012633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, sp}
 800e3b8:	08012648 	stmdaeq	r1, {r3, r6, r9, sl, sp}

0800e3bc <PropertiesBuilder::AddComment(char const*)>:
 800e3bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e3be:	7a06      	ldrb	r6, [r0, #8]
 800e3c0:	b996      	cbnz	r6, 800e3e8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e3c2:	4604      	mov	r4, r0
 800e3c4:	88c0      	ldrh	r0, [r0, #6]
 800e3c6:	88a5      	ldrh	r5, [r4, #4]
 800e3c8:	42a8      	cmp	r0, r5
 800e3ca:	d20d      	bcs.n	800e3e8 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800e3cc:	6827      	ldr	r7, [r4, #0]
 800e3ce:	1a2d      	subs	r5, r5, r0
 800e3d0:	460b      	mov	r3, r1
 800e3d2:	4a06      	ldr	r2, [pc, #24]	; (800e3ec <PropertiesBuilder::AddComment(char const*)+0x30>)
 800e3d4:	4629      	mov	r1, r5
 800e3d6:	4438      	add	r0, r7
 800e3d8:	f7fa fbae 	bl	8008b38 <snprintf>
 800e3dc:	4285      	cmp	r5, r0
 800e3de:	bfa1      	itttt	ge
 800e3e0:	2601      	movge	r6, #1
 800e3e2:	88e3      	ldrhge	r3, [r4, #6]
 800e3e4:	18c0      	addge	r0, r0, r3
 800e3e6:	80e0      	strhge	r0, [r4, #6]
 800e3e8:	4630      	mov	r0, r6
 800e3ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3ec:	08012658 	stmdaeq	r1, {r3, r4, r6, r9, sl, sp}

0800e3f0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800e3f0:	e9c0 1200 	strd	r1, r2, [r0]
 800e3f4:	4770      	bx	lr

0800e3f6 <ReadConfigFile::~ReadConfigFile()>:
 800e3f6:	4770      	bx	lr

0800e3f8 <ReadConfigFile::Read(char const*, unsigned int)>:
 800e3f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3fc:	4606      	mov	r6, r0
 800e3fe:	460d      	mov	r5, r1
 800e400:	4614      	mov	r4, r2
 800e402:	f04f 0800 	mov.w	r8, #0
 800e406:	b090      	sub	sp, #64	; 0x40
 800e408:	b33c      	cbz	r4, 800e45a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e40a:	466b      	mov	r3, sp
 800e40c:	462a      	mov	r2, r5
 800e40e:	4619      	mov	r1, r3
 800e410:	7817      	ldrb	r7, [r2, #0]
 800e412:	4610      	mov	r0, r2
 800e414:	2f0d      	cmp	r7, #13
 800e416:	f102 0201 	add.w	r2, r2, #1
 800e41a:	d013      	beq.n	800e444 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e41c:	2f0a      	cmp	r7, #10
 800e41e:	d011      	beq.n	800e444 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e420:	f803 7b01 	strb.w	r7, [r3], #1
 800e424:	1a58      	subs	r0, r3, r1
 800e426:	283f      	cmp	r0, #63	; 0x3f
 800e428:	4615      	mov	r5, r2
 800e42a:	dc16      	bgt.n	800e45a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800e42c:	3c01      	subs	r4, #1
 800e42e:	d1ef      	bne.n	800e410 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 800e430:	f89d 2000 	ldrb.w	r2, [sp]
 800e434:	2a60      	cmp	r2, #96	; 0x60
 800e436:	d9e7      	bls.n	800e408 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e438:	f883 8000 	strb.w	r8, [r3]
 800e43c:	e9d6 3000 	ldrd	r3, r0, [r6]
 800e440:	4798      	blx	r3
 800e442:	e7e1      	b.n	800e408 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800e444:	4605      	mov	r5, r0
 800e446:	2c00      	cmp	r4, #0
 800e448:	d0f2      	beq.n	800e430 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800e44a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e44e:	2a0d      	cmp	r2, #13
 800e450:	d001      	beq.n	800e456 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800e452:	2a0a      	cmp	r2, #10
 800e454:	d1ec      	bne.n	800e430 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800e456:	3c01      	subs	r4, #1
 800e458:	e7f4      	b.n	800e444 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800e45a:	b010      	add	sp, #64	; 0x40
 800e45c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e460 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800e460:	b570      	push	{r4, r5, r6, lr}
 800e462:	4615      	mov	r5, r2
 800e464:	461c      	mov	r4, r3
 800e466:	f000 f88f 	bl	800e588 <Sscan::checkName(char const*, char const*)>
 800e46a:	b160      	cbz	r0, 800e486 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 800e46c:	2100      	movs	r1, #0
 800e46e:	5c43      	ldrb	r3, [r0, r1]
 800e470:	6826      	ldr	r6, [r4, #0]
 800e472:	b28a      	uxth	r2, r1
 800e474:	b123      	cbz	r3, 800e480 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800e476:	42b2      	cmp	r2, r6
 800e478:	d207      	bcs.n	800e48a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 800e47a:	546b      	strb	r3, [r5, r1]
 800e47c:	3101      	adds	r1, #1
 800e47e:	e7f6      	b.n	800e46e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800e480:	2000      	movs	r0, #0
 800e482:	6022      	str	r2, [r4, #0]
 800e484:	bd70      	pop	{r4, r5, r6, pc}
 800e486:	2001      	movs	r0, #1
 800e488:	e7fc      	b.n	800e484 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 800e48a:	2b0a      	cmp	r3, #10
 800e48c:	d0f8      	beq.n	800e480 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800e48e:	2002      	movs	r0, #2
 800e490:	e7f8      	b.n	800e484 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0800e492 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 800e492:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e494:	4615      	mov	r5, r2
 800e496:	f000 f877 	bl	800e588 <Sscan::checkName(char const*, char const*)>
 800e49a:	b3c0      	cbz	r0, 800e50e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 800e49c:	2400      	movs	r4, #0
 800e49e:	270a      	movs	r7, #10
 800e4a0:	ae01      	add	r6, sp, #4
 800e4a2:	4603      	mov	r3, r0
 800e4a4:	2100      	movs	r1, #0
 800e4a6:	f100 0c04 	add.w	ip, r0, #4
 800e4aa:	4618      	mov	r0, r3
 800e4ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e4b0:	2a2e      	cmp	r2, #46	; 0x2e
 800e4b2:	d00e      	beq.n	800e4d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800e4b4:	b16a      	cbz	r2, 800e4d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 800e4b6:	4560      	cmp	r0, ip
 800e4b8:	d102      	bne.n	800e4c0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 800e4ba:	2002      	movs	r0, #2
 800e4bc:	b003      	add	sp, #12
 800e4be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e4c0:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800e4c4:	2b09      	cmp	r3, #9
 800e4c6:	d8f8      	bhi.n	800e4ba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e4c8:	fb07 2101 	mla	r1, r7, r1, r2
 800e4cc:	4603      	mov	r3, r0
 800e4ce:	3930      	subs	r1, #48	; 0x30
 800e4d0:	e7eb      	b.n	800e4aa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 800e4d2:	29ff      	cmp	r1, #255	; 0xff
 800e4d4:	d8f1      	bhi.n	800e4ba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e4d6:	3401      	adds	r4, #1
 800e4d8:	2c03      	cmp	r4, #3
 800e4da:	f806 1b01 	strb.w	r1, [r6], #1
 800e4de:	d1e0      	bne.n	800e4a2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 800e4e0:	2400      	movs	r4, #0
 800e4e2:	220a      	movs	r2, #10
 800e4e4:	1d1e      	adds	r6, r3, #4
 800e4e6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e4ea:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 800e4ee:	d007      	beq.n	800e500 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 800e4f0:	429e      	cmp	r6, r3
 800e4f2:	d0e2      	beq.n	800e4ba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e4f4:	3930      	subs	r1, #48	; 0x30
 800e4f6:	2909      	cmp	r1, #9
 800e4f8:	d8df      	bhi.n	800e4ba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e4fa:	fb02 1404 	mla	r4, r2, r4, r1
 800e4fe:	e7f2      	b.n	800e4e6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 800e500:	2cff      	cmp	r4, #255	; 0xff
 800e502:	d8da      	bhi.n	800e4ba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 800e504:	f88d 4007 	strb.w	r4, [sp, #7]
 800e508:	9b01      	ldr	r3, [sp, #4]
 800e50a:	602b      	str	r3, [r5, #0]
 800e50c:	e7d6      	b.n	800e4bc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 800e50e:	2001      	movs	r0, #1
 800e510:	e7d4      	b.n	800e4bc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

0800e512 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 800e512:	b538      	push	{r3, r4, r5, lr}
 800e514:	4615      	mov	r5, r2
 800e516:	f000 f837 	bl	800e588 <Sscan::checkName(char const*, char const*)>
 800e51a:	b1a0      	cbz	r0, 800e546 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 800e51c:	4604      	mov	r4, r0
 800e51e:	2100      	movs	r1, #0
 800e520:	220a      	movs	r2, #10
 800e522:	7823      	ldrb	r3, [r4, #0]
 800e524:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e528:	2809      	cmp	r0, #9
 800e52a:	d80e      	bhi.n	800e54a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e52c:	fb02 3101 	mla	r1, r2, r1, r3
 800e530:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e534:	3930      	subs	r1, #48	; 0x30
 800e536:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e53a:	d1f2      	bne.n	800e522 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 800e53c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e540:	d203      	bcs.n	800e54a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 800e542:	8029      	strh	r1, [r5, #0]
 800e544:	bd38      	pop	{r3, r4, r5, pc}
 800e546:	2001      	movs	r0, #1
 800e548:	e7fc      	b.n	800e544 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 800e54a:	2002      	movs	r0, #2
 800e54c:	e7fa      	b.n	800e544 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0800e54e <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800e54e:	b538      	push	{r3, r4, r5, lr}
 800e550:	4615      	mov	r5, r2
 800e552:	f000 f819 	bl	800e588 <Sscan::checkName(char const*, char const*)>
 800e556:	b198      	cbz	r0, 800e580 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800e558:	4604      	mov	r4, r0
 800e55a:	2100      	movs	r1, #0
 800e55c:	220a      	movs	r2, #10
 800e55e:	7823      	ldrb	r3, [r4, #0]
 800e560:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 800e564:	2809      	cmp	r0, #9
 800e566:	d80d      	bhi.n	800e584 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e568:	fb02 3101 	mla	r1, r2, r1, r3
 800e56c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800e570:	3930      	subs	r1, #48	; 0x30
 800e572:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 800e576:	d1f2      	bne.n	800e55e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 800e578:	29ff      	cmp	r1, #255	; 0xff
 800e57a:	d803      	bhi.n	800e584 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 800e57c:	7029      	strb	r1, [r5, #0]
 800e57e:	bd38      	pop	{r3, r4, r5, pc}
 800e580:	2001      	movs	r0, #1
 800e582:	e7fc      	b.n	800e57e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 800e584:	2002      	movs	r0, #2
 800e586:	e7fa      	b.n	800e57e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0800e588 <Sscan::checkName(char const*, char const*)>:
 800e588:	4603      	mov	r3, r0
 800e58a:	b510      	push	{r4, lr}
 800e58c:	3901      	subs	r1, #1
 800e58e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e592:	461c      	mov	r4, r3
 800e594:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e598:	b120      	cbz	r0, 800e5a4 <Sscan::checkName(char const*, char const*)+0x1c>
 800e59a:	b10a      	cbz	r2, 800e5a0 <Sscan::checkName(char const*, char const*)+0x18>
 800e59c:	4290      	cmp	r0, r2
 800e59e:	d0f6      	beq.n	800e58e <Sscan::checkName(char const*, char const*)+0x6>
 800e5a0:	2000      	movs	r0, #0
 800e5a2:	e006      	b.n	800e5b2 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5a4:	2a3d      	cmp	r2, #61	; 0x3d
 800e5a6:	d104      	bne.n	800e5b2 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5a8:	7860      	ldrb	r0, [r4, #1]
 800e5aa:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800e5ae:	d000      	beq.n	800e5b2 <Sscan::checkName(char const*, char const*)+0x2a>
 800e5b0:	1c60      	adds	r0, r4, #1
 800e5b2:	bd10      	pop	{r4, pc}

0800e5b4 <LightSet::GetDmxStartAddress()>:
 800e5b4:	2001      	movs	r0, #1
 800e5b6:	4770      	bx	lr

0800e5b8 <LightSet::GetDmxFootprint()>:
 800e5b8:	f44f 7000 	mov.w	r0, #512	; 0x200
 800e5bc:	4770      	bx	lr

0800e5be <LightSet::SetDmxStartAddress(unsigned short)>:
 800e5be:	2000      	movs	r0, #0
 800e5c0:	4770      	bx	lr

0800e5c2 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800e5c2:	2300      	movs	r3, #0
 800e5c4:	2001      	movs	r0, #1
 800e5c6:	7093      	strb	r3, [r2, #2]
 800e5c8:	8010      	strh	r0, [r2, #0]
 800e5ca:	4770      	bx	lr

0800e5cc <Display::PrintInfo() [clone .isra.0]>:
 800e5cc:	b910      	cbnz	r0, 800e5d4 <Display::PrintInfo() [clone .isra.0]+0x8>
 800e5ce:	4803      	ldr	r0, [pc, #12]	; (800e5dc <Display::PrintInfo() [clone .isra.0]+0x10>)
 800e5d0:	f000 bd23 	b.w	800f01a <puts>
 800e5d4:	6803      	ldr	r3, [r0, #0]
 800e5d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e5d8:	4718      	bx	r3
 800e5da:	bf00      	nop
 800e5dc:	08012660 	stmdaeq	r1, {r5, r6, r9, sl, sp}

0800e5e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 800e5e0:	b513      	push	{r0, r1, r4, lr}
 800e5e2:	4604      	mov	r4, r0
 800e5e4:	0a13      	lsrs	r3, r2, #8
 800e5e6:	7800      	ldrb	r0, [r0, #0]
 800e5e8:	f88d 1004 	strb.w	r1, [sp, #4]
 800e5ec:	f88d 3005 	strb.w	r3, [sp, #5]
 800e5f0:	f88d 2006 	strb.w	r2, [sp, #6]
 800e5f4:	f001 fd36 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 800e5f8:	6860      	ldr	r0, [r4, #4]
 800e5fa:	f001 fd2b 	bl	8010054 <gd32_i2c_set_baudrate(unsigned int)>
 800e5fe:	2103      	movs	r1, #3
 800e600:	a801      	add	r0, sp, #4
 800e602:	f001 fd35 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e606:	b002      	add	sp, #8
 800e608:	bd10      	pop	{r4, pc}

0800e60a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 800e60a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e60c:	460d      	mov	r5, r1
 800e60e:	4604      	mov	r4, r0
 800e610:	f001 fd28 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 800e614:	4628      	mov	r0, r5
 800e616:	f001 fd1d 	bl	8010054 <gd32_i2c_set_baudrate(unsigned int)>
 800e61a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e61e:	2b07      	cmp	r3, #7
 800e620:	d902      	bls.n	800e628 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 800e622:	3c50      	subs	r4, #80	; 0x50
 800e624:	2c0f      	cmp	r4, #15
 800e626:	d809      	bhi.n	800e63c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 800e628:	2101      	movs	r1, #1
 800e62a:	f10d 0007 	add.w	r0, sp, #7
 800e62e:	f001 fd85 	bl	801013c <gd32_i2c_read(char*, unsigned int)>
 800e632:	fab0 f080 	clz	r0, r0
 800e636:	0940      	lsrs	r0, r0, #5
 800e638:	b003      	add	sp, #12
 800e63a:	bd30      	pop	{r4, r5, pc}
 800e63c:	2100      	movs	r1, #0
 800e63e:	4608      	mov	r0, r1
 800e640:	f001 fd16 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e644:	e7f5      	b.n	800e632 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0800e646 <Display::Detect7Segment()>:
 800e646:	b538      	push	{r3, r4, r5, lr}
 800e648:	68c1      	ldr	r1, [r0, #12]
 800e64a:	4604      	mov	r4, r0
 800e64c:	7a00      	ldrb	r0, [r0, #8]
 800e64e:	f7ff ffdc 	bl	800e60a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 800e652:	7460      	strb	r0, [r4, #17]
 800e654:	b170      	cbz	r0, 800e674 <Display::Detect7Segment()+0x2e>
 800e656:	2200      	movs	r2, #0
 800e658:	f104 0508 	add.w	r5, r4, #8
 800e65c:	4611      	mov	r1, r2
 800e65e:	4628      	mov	r0, r5
 800e660:	f7ff ffbe 	bl	800e5e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e664:	7c63      	ldrb	r3, [r4, #17]
 800e666:	b12b      	cbz	r3, 800e674 <Display::Detect7Segment()+0x2e>
 800e668:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800e66c:	2112      	movs	r1, #18
 800e66e:	4628      	mov	r0, r5
 800e670:	f7ff ffb6 	bl	800e5e0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 800e674:	bd38      	pop	{r3, r4, r5, pc}

0800e676 <Display::Detect(display::Type)>:
 800e676:	2902      	cmp	r1, #2
 800e678:	b538      	push	{r3, r4, r5, lr}
 800e67a:	4604      	mov	r4, r0
 800e67c:	d014      	beq.n	800e6a8 <Display::Detect(display::Type)+0x32>
 800e67e:	2904      	cmp	r1, #4
 800e680:	d01b      	beq.n	800e6ba <Display::Detect(display::Type)+0x44>
 800e682:	69a0      	ldr	r0, [r4, #24]
 800e684:	b168      	cbz	r0, 800e6a2 <Display::Detect(display::Type)+0x2c>
 800e686:	6803      	ldr	r3, [r0, #0]
 800e688:	689b      	ldr	r3, [r3, #8]
 800e68a:	4798      	blx	r3
 800e68c:	4603      	mov	r3, r0
 800e68e:	69a0      	ldr	r0, [r4, #24]
 800e690:	b9ab      	cbnz	r3, 800e6be <Display::Detect(display::Type)+0x48>
 800e692:	b110      	cbz	r0, 800e69a <Display::Detect(display::Type)+0x24>
 800e694:	6803      	ldr	r3, [r0, #0]
 800e696:	685b      	ldr	r3, [r3, #4]
 800e698:	4798      	blx	r3
 800e69a:	2300      	movs	r3, #0
 800e69c:	61a3      	str	r3, [r4, #24]
 800e69e:	2304      	movs	r3, #4
 800e6a0:	6023      	str	r3, [r4, #0]
 800e6a2:	2300      	movs	r3, #0
 800e6a4:	6163      	str	r3, [r4, #20]
 800e6a6:	e010      	b.n	800e6ca <Display::Detect(display::Type)+0x54>
 800e6a8:	2018      	movs	r0, #24
 800e6aa:	f000 fbbb 	bl	800ee24 <operator new(unsigned int)>
 800e6ae:	4605      	mov	r5, r0
 800e6b0:	2100      	movs	r1, #0
 800e6b2:	f000 f8a3 	bl	800e7fc <Ssd1306::Ssd1306(TOledPanel)>
 800e6b6:	61a5      	str	r5, [r4, #24]
 800e6b8:	e7e3      	b.n	800e682 <Display::Detect(display::Type)+0xc>
 800e6ba:	6001      	str	r1, [r0, #0]
 800e6bc:	e7e1      	b.n	800e682 <Display::Detect(display::Type)+0xc>
 800e6be:	6803      	ldr	r3, [r0, #0]
 800e6c0:	68db      	ldr	r3, [r3, #12]
 800e6c2:	4798      	blx	r3
 800e6c4:	69a3      	ldr	r3, [r4, #24]
 800e6c6:	2b00      	cmp	r3, #0
 800e6c8:	d0eb      	beq.n	800e6a2 <Display::Detect(display::Type)+0x2c>
 800e6ca:	bd38      	pop	{r3, r4, r5, pc}

0800e6cc <Display::Display()>:
 800e6cc:	2304      	movs	r3, #4
 800e6ce:	b510      	push	{r4, lr}
 800e6d0:	6003      	str	r3, [r0, #0]
 800e6d2:	4b0f      	ldr	r3, [pc, #60]	; (800e710 <Display::Display()+0x44>)
 800e6d4:	4604      	mov	r4, r0
 800e6d6:	681b      	ldr	r3, [r3, #0]
 800e6d8:	4a0e      	ldr	r2, [pc, #56]	; (800e714 <Display::Display()+0x48>)
 800e6da:	6043      	str	r3, [r0, #4]
 800e6dc:	2321      	movs	r3, #33	; 0x21
 800e6de:	7203      	strb	r3, [r0, #8]
 800e6e0:	4b0d      	ldr	r3, [pc, #52]	; (800e718 <Display::Display()+0x4c>)
 800e6e2:	2102      	movs	r1, #2
 800e6e4:	60c3      	str	r3, [r0, #12]
 800e6e6:	2300      	movs	r3, #0
 800e6e8:	e9c0 2305 	strd	r2, r3, [r0, #20]
 800e6ec:	8203      	strh	r3, [r0, #16]
 800e6ee:	4b0b      	ldr	r3, [pc, #44]	; (800e71c <Display::Display()+0x50>)
 800e6f0:	6018      	str	r0, [r3, #0]
 800e6f2:	f7ff ffc0 	bl	800e676 <Display::Detect(display::Type)>
 800e6f6:	4620      	mov	r0, r4
 800e6f8:	f7ff ffa5 	bl	800e646 <Display::Detect7Segment()>
 800e6fc:	69a3      	ldr	r3, [r4, #24]
 800e6fe:	b10b      	cbz	r3, 800e704 <Display::Display()+0x38>
 800e700:	f000 f80e 	bl	800e720 <display::timeout::gpio_init()>
 800e704:	69a0      	ldr	r0, [r4, #24]
 800e706:	f7ff ff61 	bl	800e5cc <Display::PrintInfo() [clone .isra.0]>
 800e70a:	4620      	mov	r0, r4
 800e70c:	bd10      	pop	{r4, pc}
 800e70e:	bf00      	nop
 800e710:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800e714:	000493e0 	andeq	r9, r4, r0, ror #7
 800e718:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e71c:	20009ab8 			; <UNDEFINED> instruction: 0x20009ab8

0800e720 <display::timeout::gpio_init()>:
 800e720:	4770      	bx	lr

0800e722 <display::timeout::gpio_renew()>:
 800e722:	2000      	movs	r0, #0
 800e724:	4770      	bx	lr

0800e726 <Ssd1306::~Ssd1306()>:
 800e726:	4770      	bx	lr

0800e728 <Ssd1306::SetCursor(unsigned int)>:
 800e728:	4770      	bx	lr
	...

0800e72c <Ssd1306::PrintInfo()>:
 800e72c:	b410      	push	{r4}
 800e72e:	4906      	ldr	r1, [pc, #24]	; (800e748 <Ssd1306::PrintInfo()+0x1c>)
 800e730:	7c44      	ldrb	r4, [r0, #17]
 800e732:	7903      	ldrb	r3, [r0, #4]
 800e734:	7942      	ldrb	r2, [r0, #5]
 800e736:	4805      	ldr	r0, [pc, #20]	; (800e74c <Ssd1306::PrintInfo()+0x20>)
 800e738:	2c00      	cmp	r4, #0
 800e73a:	bf08      	it	eq
 800e73c:	4601      	moveq	r1, r0
 800e73e:	4804      	ldr	r0, [pc, #16]	; (800e750 <Ssd1306::PrintInfo()+0x24>)
 800e740:	bc10      	pop	{r4}
 800e742:	f7fa b9e9 	b.w	8008b18 <printf>
 800e746:	bf00      	nop
 800e748:	08012671 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, sp}
 800e74c:	08012678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, sp}
 800e750:	08012680 	stmdaeq	r1, {r7, r9, sl, sp}

0800e754 <Ssd1306::~Ssd1306()>:
 800e754:	b510      	push	{r4, lr}
 800e756:	4604      	mov	r4, r0
 800e758:	f000 fb60 	bl	800ee1c <operator delete(void*)>
 800e75c:	4620      	mov	r0, r4
 800e75e:	bd10      	pop	{r4, pc}

0800e760 <HAL_I2C::Setup()>:
 800e760:	b510      	push	{r4, lr}
 800e762:	4604      	mov	r4, r0
 800e764:	7800      	ldrb	r0, [r0, #0]
 800e766:	f001 fc7d 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 800e76a:	6860      	ldr	r0, [r4, #4]
 800e76c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e770:	f001 bc70 	b.w	8010054 <gd32_i2c_set_baudrate(unsigned int)>

0800e774 <Ssd1306::PutChar(int)>:
 800e774:	b510      	push	{r4, lr}
 800e776:	f1a1 0420 	sub.w	r4, r1, #32
 800e77a:	2c5f      	cmp	r4, #95	; 0x5f
 800e77c:	bf88      	it	hi
 800e77e:	2400      	movhi	r4, #0
 800e780:	3008      	adds	r0, #8
 800e782:	f7ff ffed 	bl	800e760 <HAL_I2C::Setup()>
 800e786:	4804      	ldr	r0, [pc, #16]	; (800e798 <Ssd1306::PutChar(int)+0x24>)
 800e788:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800e78c:	4420      	add	r0, r4
 800e78e:	2107      	movs	r1, #7
 800e790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e794:	f001 bc6c 	b.w	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e798:	08012694 	stmdaeq	r1, {r2, r4, r7, r9, sl, sp}

0800e79c <Ssd1306::PutString(char const*)>:
 800e79c:	b538      	push	{r3, r4, r5, lr}
 800e79e:	4605      	mov	r5, r0
 800e7a0:	1e4c      	subs	r4, r1, #1
 800e7a2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800e7a6:	b119      	cbz	r1, 800e7b0 <Ssd1306::PutString(char const*)+0x14>
 800e7a8:	4628      	mov	r0, r5
 800e7aa:	f7ff ffe3 	bl	800e774 <Ssd1306::PutChar(int)>
 800e7ae:	e7f8      	b.n	800e7a2 <Ssd1306::PutString(char const*)+0x6>
 800e7b0:	bd38      	pop	{r3, r4, r5, pc}

0800e7b2 <Ssd1306::Text(char const*, unsigned int)>:
 800e7b2:	b570      	push	{r4, r5, r6, lr}
 800e7b4:	7903      	ldrb	r3, [r0, #4]
 800e7b6:	4605      	mov	r5, r0
 800e7b8:	460c      	mov	r4, r1
 800e7ba:	4293      	cmp	r3, r2
 800e7bc:	bf94      	ite	ls
 800e7be:	18ce      	addls	r6, r1, r3
 800e7c0:	188e      	addhi	r6, r1, r2
 800e7c2:	42b4      	cmp	r4, r6
 800e7c4:	d005      	beq.n	800e7d2 <Ssd1306::Text(char const*, unsigned int)+0x20>
 800e7c6:	4628      	mov	r0, r5
 800e7c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e7cc:	f7ff ffd2 	bl	800e774 <Ssd1306::PutChar(int)>
 800e7d0:	e7f7      	b.n	800e7c2 <Ssd1306::Text(char const*, unsigned int)+0x10>
 800e7d2:	bd70      	pop	{r4, r5, r6, pc}

0800e7d4 <Ssd1306::InitMembers()>:
 800e7d4:	7c03      	ldrb	r3, [r0, #16]
 800e7d6:	b12b      	cbz	r3, 800e7e4 <Ssd1306::InitMembers()+0x10>
 800e7d8:	3b01      	subs	r3, #1
 800e7da:	2b01      	cmp	r3, #1
 800e7dc:	d908      	bls.n	800e7f0 <Ssd1306::InitMembers()+0x1c>
 800e7de:	f640 0315 	movw	r3, #2069	; 0x815
 800e7e2:	e007      	b.n	800e7f4 <Ssd1306::InitMembers()+0x20>
 800e7e4:	f640 0315 	movw	r3, #2069	; 0x815
 800e7e8:	8083      	strh	r3, [r0, #4]
 800e7ea:	2308      	movs	r3, #8
 800e7ec:	6143      	str	r3, [r0, #20]
 800e7ee:	4770      	bx	lr
 800e7f0:	f240 4315 	movw	r3, #1045	; 0x415
 800e7f4:	8083      	strh	r3, [r0, #4]
 800e7f6:	2304      	movs	r3, #4
 800e7f8:	e7f8      	b.n	800e7ec <Ssd1306::InitMembers()+0x18>
	...

0800e7fc <Ssd1306::Ssd1306(TOledPanel)>:
 800e7fc:	4a08      	ldr	r2, [pc, #32]	; (800e820 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800e7fe:	b508      	push	{r3, lr}
 800e800:	6002      	str	r2, [r0, #0]
 800e802:	227f      	movs	r2, #127	; 0x7f
 800e804:	80c2      	strh	r2, [r0, #6]
 800e806:	223c      	movs	r2, #60	; 0x3c
 800e808:	7202      	strb	r2, [r0, #8]
 800e80a:	4a06      	ldr	r2, [pc, #24]	; (800e824 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800e80c:	7401      	strb	r1, [r0, #16]
 800e80e:	60c2      	str	r2, [r0, #12]
 800e810:	2200      	movs	r2, #0
 800e812:	7442      	strb	r2, [r0, #17]
 800e814:	4a04      	ldr	r2, [pc, #16]	; (800e828 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 800e816:	6010      	str	r0, [r2, #0]
 800e818:	f7ff ffdc 	bl	800e7d4 <Ssd1306::InitMembers()>
 800e81c:	bd08      	pop	{r3, pc}
 800e81e:	bf00      	nop
 800e820:	0801296c 	stmdaeq	r1, {r2, r3, r5, r6, r8, fp, sp}
 800e824:	00061a80 	andeq	r1, r6, r0, lsl #21
 800e828:	20009b44 	andcs	r9, r0, r4, asr #22

0800e82c <Ssd1306::SendCommand(unsigned char)>:
 800e82c:	2300      	movs	r3, #0
 800e82e:	b507      	push	{r0, r1, r2, lr}
 800e830:	3008      	adds	r0, #8
 800e832:	f88d 3004 	strb.w	r3, [sp, #4]
 800e836:	f88d 1005 	strb.w	r1, [sp, #5]
 800e83a:	f7ff ff91 	bl	800e760 <HAL_I2C::Setup()>
 800e83e:	2102      	movs	r1, #2
 800e840:	a801      	add	r0, sp, #4
 800e842:	f001 fc15 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e846:	b003      	add	sp, #12
 800e848:	f85d fb04 	ldr.w	pc, [sp], #4

0800e84c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 800e84c:	2914      	cmp	r1, #20
 800e84e:	b570      	push	{r4, r5, r6, lr}
 800e850:	4605      	mov	r5, r0
 800e852:	4616      	mov	r6, r2
 800e854:	d81c      	bhi.n	800e890 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e856:	7943      	ldrb	r3, [r0, #5]
 800e858:	4293      	cmp	r3, r2
 800e85a:	d919      	bls.n	800e890 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 800e85c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e860:	7c43      	ldrb	r3, [r0, #17]
 800e862:	004c      	lsls	r4, r1, #1
 800e864:	b2e4      	uxtb	r4, r4
 800e866:	b10b      	cbz	r3, 800e86c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 800e868:	3404      	adds	r4, #4
 800e86a:	b2e4      	uxtb	r4, r4
 800e86c:	4628      	mov	r0, r5
 800e86e:	f004 010e 	and.w	r1, r4, #14
 800e872:	f7ff ffdb 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e876:	0921      	lsrs	r1, r4, #4
 800e878:	4628      	mov	r0, r5
 800e87a:	f041 0110 	orr.w	r1, r1, #16
 800e87e:	f7ff ffd5 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e882:	4628      	mov	r0, r5
 800e884:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 800e888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e88c:	f7ff bfce 	b.w	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e890:	bd70      	pop	{r4, r5, r6, pc}

0800e892 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 800e892:	b570      	push	{r4, r5, r6, lr}
 800e894:	4604      	mov	r4, r0
 800e896:	4615      	mov	r5, r2
 800e898:	461e      	mov	r6, r3
 800e89a:	b171      	cbz	r1, 800e8ba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e89c:	7943      	ldrb	r3, [r0, #5]
 800e89e:	428b      	cmp	r3, r1
 800e8a0:	d30b      	bcc.n	800e8ba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 800e8a2:	3901      	subs	r1, #1
 800e8a4:	b2ca      	uxtb	r2, r1
 800e8a6:	2100      	movs	r1, #0
 800e8a8:	f7ff ffd0 	bl	800e84c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8ac:	4632      	mov	r2, r6
 800e8ae:	4629      	mov	r1, r5
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e8b6:	f7ff bf7c 	b.w	800e7b2 <Ssd1306::Text(char const*, unsigned int)>
 800e8ba:	bd70      	pop	{r4, r5, r6, pc}

0800e8bc <Ssd1306::ClearLine(unsigned char)>:
 800e8bc:	b538      	push	{r3, r4, r5, lr}
 800e8be:	4605      	mov	r5, r0
 800e8c0:	b1b9      	cbz	r1, 800e8f2 <Ssd1306::ClearLine(unsigned char)+0x36>
 800e8c2:	7943      	ldrb	r3, [r0, #5]
 800e8c4:	428b      	cmp	r3, r1
 800e8c6:	d314      	bcc.n	800e8f2 <Ssd1306::ClearLine(unsigned char)+0x36>
 800e8c8:	3901      	subs	r1, #1
 800e8ca:	b2cc      	uxtb	r4, r1
 800e8cc:	4622      	mov	r2, r4
 800e8ce:	2100      	movs	r1, #0
 800e8d0:	f7ff ffbc 	bl	800e84c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8d4:	f105 0008 	add.w	r0, r5, #8
 800e8d8:	f7ff ff42 	bl	800e760 <HAL_I2C::Setup()>
 800e8dc:	2181      	movs	r1, #129	; 0x81
 800e8de:	4805      	ldr	r0, [pc, #20]	; (800e8f4 <Ssd1306::ClearLine(unsigned char)+0x38>)
 800e8e0:	f001 fbc6 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e8e4:	4622      	mov	r2, r4
 800e8e6:	4628      	mov	r0, r5
 800e8e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e8ec:	2100      	movs	r1, #0
 800e8ee:	f7ff bfad 	b.w	800e84c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800e8f2:	bd38      	pop	{r3, r4, r5, pc}
 800e8f4:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

0800e8f8 <Ssd1306::SetSleep(bool)>:
 800e8f8:	b111      	cbz	r1, 800e900 <Ssd1306::SetSleep(bool)+0x8>
 800e8fa:	21ae      	movs	r1, #174	; 0xae
 800e8fc:	f7ff bf96 	b.w	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e900:	21af      	movs	r1, #175	; 0xaf
 800e902:	e7fb      	b.n	800e8fc <Ssd1306::SetSleep(bool)+0x4>

0800e904 <Ssd1306::SetContrast(unsigned char)>:
 800e904:	b538      	push	{r3, r4, r5, lr}
 800e906:	4604      	mov	r4, r0
 800e908:	460d      	mov	r5, r1
 800e90a:	7181      	strb	r1, [r0, #6]
 800e90c:	2181      	movs	r1, #129	; 0x81
 800e90e:	f7ff ff8d 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e912:	4629      	mov	r1, r5
 800e914:	4620      	mov	r0, r4
 800e916:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e91a:	f7ff bf87 	b.w	800e82c <Ssd1306::SendCommand(unsigned char)>

0800e91e <Ssd1306::SetFlipVertically(bool)>:
 800e91e:	b510      	push	{r4, lr}
 800e920:	4604      	mov	r4, r0
 800e922:	71c1      	strb	r1, [r0, #7]
 800e924:	b141      	cbz	r1, 800e938 <Ssd1306::SetFlipVertically(bool)+0x1a>
 800e926:	21c0      	movs	r1, #192	; 0xc0
 800e928:	f7ff ff80 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e92c:	21a0      	movs	r1, #160	; 0xa0
 800e92e:	4620      	mov	r0, r4
 800e930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e934:	f7ff bf7a 	b.w	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e938:	21c8      	movs	r1, #200	; 0xc8
 800e93a:	f7ff ff77 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e93e:	21a1      	movs	r1, #161	; 0xa1
 800e940:	e7f5      	b.n	800e92e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0800e944 <Ssd1306::CheckSH1106()>:
 800e944:	b570      	push	{r4, r5, r6, lr}
 800e946:	4604      	mov	r4, r0
 800e948:	b086      	sub	sp, #24
 800e94a:	2100      	movs	r1, #0
 800e94c:	f7ff ff6e 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e950:	2190      	movs	r1, #144	; 0x90
 800e952:	4620      	mov	r0, r4
 800e954:	f7ff ff6a 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e958:	21b0      	movs	r1, #176	; 0xb0
 800e95a:	4620      	mov	r0, r4
 800e95c:	f7ff ff66 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e960:	4b22      	ldr	r3, [pc, #136]	; (800e9ec <Ssd1306::CheckSH1106()+0xa8>)
 800e962:	f104 0608 	add.w	r6, r4, #8
 800e966:	6818      	ldr	r0, [r3, #0]
 800e968:	791b      	ldrb	r3, [r3, #4]
 800e96a:	ad02      	add	r5, sp, #8
 800e96c:	9002      	str	r0, [sp, #8]
 800e96e:	4630      	mov	r0, r6
 800e970:	712b      	strb	r3, [r5, #4]
 800e972:	f7ff fef5 	bl	800e760 <HAL_I2C::Setup()>
 800e976:	2105      	movs	r1, #5
 800e978:	4628      	mov	r0, r5
 800e97a:	f001 fb79 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e97e:	2100      	movs	r1, #0
 800e980:	4620      	mov	r0, r4
 800e982:	f7ff ff53 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e986:	2190      	movs	r1, #144	; 0x90
 800e988:	4620      	mov	r0, r4
 800e98a:	f7ff ff4f 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e98e:	21b0      	movs	r1, #176	; 0xb0
 800e990:	4620      	mov	r0, r4
 800e992:	f7ff ff4b 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800e996:	2300      	movs	r3, #0
 800e998:	9304      	str	r3, [sp, #16]
 800e99a:	f88d 3014 	strb.w	r3, [sp, #20]
 800e99e:	2340      	movs	r3, #64	; 0x40
 800e9a0:	4630      	mov	r0, r6
 800e9a2:	f88d 3007 	strb.w	r3, [sp, #7]
 800e9a6:	f7ff fedb 	bl	800e760 <HAL_I2C::Setup()>
 800e9aa:	2101      	movs	r1, #1
 800e9ac:	f10d 0007 	add.w	r0, sp, #7
 800e9b0:	f001 fb5e 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800e9b4:	4630      	mov	r0, r6
 800e9b6:	f7ff fed3 	bl	800e760 <HAL_I2C::Setup()>
 800e9ba:	2105      	movs	r1, #5
 800e9bc:	a804      	add	r0, sp, #16
 800e9be:	f001 fbbd 	bl	801013c <gd32_i2c_read(char*, unsigned int)>
 800e9c2:	2201      	movs	r2, #1
 800e9c4:	5cab      	ldrb	r3, [r5, r2]
 800e9c6:	a904      	add	r1, sp, #16
 800e9c8:	3201      	adds	r2, #1
 800e9ca:	4411      	add	r1, r2
 800e9cc:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 800e9d0:	428b      	cmp	r3, r1
 800e9d2:	d006      	beq.n	800e9e2 <Ssd1306::CheckSH1106()+0x9e>
 800e9d4:	1a5b      	subs	r3, r3, r1
 800e9d6:	fab3 f383 	clz	r3, r3
 800e9da:	095b      	lsrs	r3, r3, #5
 800e9dc:	7463      	strb	r3, [r4, #17]
 800e9de:	b006      	add	sp, #24
 800e9e0:	bd70      	pop	{r4, r5, r6, pc}
 800e9e2:	2a05      	cmp	r2, #5
 800e9e4:	d1ee      	bne.n	800e9c4 <Ssd1306::CheckSH1106()+0x80>
 800e9e6:	2300      	movs	r3, #0
 800e9e8:	e7f5      	b.n	800e9d6 <Ssd1306::CheckSH1106()+0x92>
 800e9ea:	bf00      	nop
 800e9ec:	0801268c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp}

0800e9f0 <Ssd1306::Cls()>:
 800e9f0:	7c43      	ldrb	r3, [r0, #17]
 800e9f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9f6:	2b00      	cmp	r3, #0
 800e9f8:	bf0c      	ite	eq
 800e9fa:	2500      	moveq	r5, #0
 800e9fc:	2504      	movne	r5, #4
 800e9fe:	4604      	mov	r4, r0
 800ea00:	2600      	movs	r6, #0
 800ea02:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 800ea06:	f045 0810 	orr.w	r8, r5, #16
 800ea0a:	b2ff      	uxtb	r7, r7
 800ea0c:	6963      	ldr	r3, [r4, #20]
 800ea0e:	4629      	mov	r1, r5
 800ea10:	42b3      	cmp	r3, r6
 800ea12:	4620      	mov	r0, r4
 800ea14:	d91b      	bls.n	800ea4e <Ssd1306::Cls()+0x5e>
 800ea16:	f7ff ff09 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea1a:	4641      	mov	r1, r8
 800ea1c:	4620      	mov	r0, r4
 800ea1e:	f7ff ff05 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea22:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800ea26:	4620      	mov	r0, r4
 800ea28:	b2c9      	uxtb	r1, r1
 800ea2a:	f7ff feff 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea2e:	7c23      	ldrb	r3, [r4, #16]
 800ea30:	b123      	cbz	r3, 800ea3c <Ssd1306::Cls()+0x4c>
 800ea32:	3b01      	subs	r3, #1
 800ea34:	2b01      	cmp	r3, #1
 800ea36:	d901      	bls.n	800ea3c <Ssd1306::Cls()+0x4c>
 800ea38:	3601      	adds	r6, #1
 800ea3a:	e7e7      	b.n	800ea0c <Ssd1306::Cls()+0x1c>
 800ea3c:	f104 0008 	add.w	r0, r4, #8
 800ea40:	f7ff fe8e 	bl	800e760 <HAL_I2C::Setup()>
 800ea44:	4639      	mov	r1, r7
 800ea46:	4808      	ldr	r0, [pc, #32]	; (800ea68 <Ssd1306::Cls()+0x78>)
 800ea48:	f001 fb12 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800ea4c:	e7f4      	b.n	800ea38 <Ssd1306::Cls()+0x48>
 800ea4e:	f7ff feed 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea52:	4641      	mov	r1, r8
 800ea54:	4620      	mov	r0, r4
 800ea56:	f7ff fee9 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea5a:	4620      	mov	r0, r4
 800ea5c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ea60:	21b0      	movs	r1, #176	; 0xb0
 800ea62:	f7ff bee3 	b.w	800e82c <Ssd1306::SendCommand(unsigned char)>
 800ea66:	bf00      	nop
 800ea68:	20009abc 			; <UNDEFINED> instruction: 0x20009abc

0800ea6c <Ssd1306::Start()>:
 800ea6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ea6e:	7a04      	ldrb	r4, [r0, #8]
 800ea70:	68c6      	ldr	r6, [r0, #12]
 800ea72:	4605      	mov	r5, r0
 800ea74:	4620      	mov	r0, r4
 800ea76:	f001 faf5 	bl	8010064 <gd32_i2c_set_address(unsigned char)>
 800ea7a:	4630      	mov	r0, r6
 800ea7c:	f001 faea 	bl	8010054 <gd32_i2c_set_baudrate(unsigned int)>
 800ea80:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ea84:	2b07      	cmp	r3, #7
 800ea86:	d902      	bls.n	800ea8e <Ssd1306::Start()+0x22>
 800ea88:	3c50      	subs	r4, #80	; 0x50
 800ea8a:	2c0f      	cmp	r4, #15
 800ea8c:	d80f      	bhi.n	800eaae <Ssd1306::Start()+0x42>
 800ea8e:	2101      	movs	r1, #1
 800ea90:	f10d 0007 	add.w	r0, sp, #7
 800ea94:	f001 fb52 	bl	801013c <gd32_i2c_read(char*, unsigned int)>
 800ea98:	fab0 f480 	clz	r4, r0
 800ea9c:	0964      	lsrs	r4, r4, #5
 800ea9e:	b35c      	cbz	r4, 800eaf8 <Ssd1306::Start()+0x8c>
 800eaa0:	7c2e      	ldrb	r6, [r5, #16]
 800eaa2:	b14e      	cbz	r6, 800eab8 <Ssd1306::Start()+0x4c>
 800eaa4:	3e01      	subs	r6, #1
 800eaa6:	2e01      	cmp	r6, #1
 800eaa8:	d929      	bls.n	800eafe <Ssd1306::Start()+0x92>
 800eaaa:	2400      	movs	r4, #0
 800eaac:	e024      	b.n	800eaf8 <Ssd1306::Start()+0x8c>
 800eaae:	2100      	movs	r1, #0
 800eab0:	4608      	mov	r0, r1
 800eab2:	f001 fadd 	bl	8010070 <gd32_i2c_write(char const*, unsigned int)>
 800eab6:	e7ef      	b.n	800ea98 <Ssd1306::Start()+0x2c>
 800eab8:	4f16      	ldr	r7, [pc, #88]	; (800eb14 <Ssd1306::Start()+0xa8>)
 800eaba:	4628      	mov	r0, r5
 800eabc:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eac0:	3601      	adds	r6, #1
 800eac2:	f7ff feb3 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800eac6:	2e18      	cmp	r6, #24
 800eac8:	d1f7      	bne.n	800eaba <Ssd1306::Start()+0x4e>
 800eaca:	2300      	movs	r3, #0
 800eacc:	4a12      	ldr	r2, [pc, #72]	; (800eb18 <Ssd1306::Start()+0xac>)
 800eace:	4618      	mov	r0, r3
 800ead0:	4611      	mov	r1, r2
 800ead2:	3301      	adds	r3, #1
 800ead4:	2b86      	cmp	r3, #134	; 0x86
 800ead6:	f802 0b01 	strb.w	r0, [r2], #1
 800eada:	d1fa      	bne.n	800ead2 <Ssd1306::Start()+0x66>
 800eadc:	2340      	movs	r3, #64	; 0x40
 800eade:	4628      	mov	r0, r5
 800eae0:	700b      	strb	r3, [r1, #0]
 800eae2:	f7ff ff2f 	bl	800e944 <Ssd1306::CheckSH1106()>
 800eae6:	4628      	mov	r0, r5
 800eae8:	f7ff ff82 	bl	800e9f0 <Ssd1306::Cls()>
 800eaec:	21af      	movs	r1, #175	; 0xaf
 800eaee:	4628      	mov	r0, r5
 800eaf0:	f7ff fe9c 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800eaf4:	2301      	movs	r3, #1
 800eaf6:	71eb      	strb	r3, [r5, #7]
 800eaf8:	4620      	mov	r0, r4
 800eafa:	b003      	add	sp, #12
 800eafc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eafe:	2600      	movs	r6, #0
 800eb00:	4f06      	ldr	r7, [pc, #24]	; (800eb1c <Ssd1306::Start()+0xb0>)
 800eb02:	4628      	mov	r0, r5
 800eb04:	f817 1b01 	ldrb.w	r1, [r7], #1
 800eb08:	3601      	adds	r6, #1
 800eb0a:	f7ff fe8f 	bl	800e82c <Ssd1306::SendCommand(unsigned char)>
 800eb0e:	2e18      	cmp	r6, #24
 800eb10:	d1f7      	bne.n	800eb02 <Ssd1306::Start()+0x96>
 800eb12:	e7da      	b.n	800eaca <Ssd1306::Start()+0x5e>
 800eb14:	0801294c 	stmdaeq	r1, {r2, r3, r6, r8, fp, sp}
 800eb18:	20009abc 			; <UNDEFINED> instruction: 0x20009abc
 800eb1c:	08012934 	stmdaeq	r1, {r2, r4, r5, r8, fp, sp}

0800eb20 <console_putc>:
 800eb20:	f000 bb7e 	b.w	800f220 <uart0_putc>

0800eb24 <console_puts>:
 800eb24:	f000 bb9c 	b.w	800f260 <uart0_puts>

0800eb28 <console_set_fg_color>:
 800eb28:	2807      	cmp	r0, #7
 800eb2a:	d810      	bhi.n	800eb4e <console_set_fg_color+0x26>
 800eb2c:	e8df f000 	tbb	[pc, r0]
 800eb30:	0b090704 	bleq	8250748 <__exidx_end+0x23dca8>
 800eb34:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 800eb00 <Ssd1306::Start()+0x94>
 800eb38:	4806      	ldr	r0, [pc, #24]	; (800eb54 <console_set_fg_color+0x2c>)
 800eb3a:	f000 bb91 	b.w	800f260 <uart0_puts>
 800eb3e:	4806      	ldr	r0, [pc, #24]	; (800eb58 <console_set_fg_color+0x30>)
 800eb40:	e7fb      	b.n	800eb3a <console_set_fg_color+0x12>
 800eb42:	4806      	ldr	r0, [pc, #24]	; (800eb5c <console_set_fg_color+0x34>)
 800eb44:	e7f9      	b.n	800eb3a <console_set_fg_color+0x12>
 800eb46:	4806      	ldr	r0, [pc, #24]	; (800eb60 <console_set_fg_color+0x38>)
 800eb48:	e7f7      	b.n	800eb3a <console_set_fg_color+0x12>
 800eb4a:	4806      	ldr	r0, [pc, #24]	; (800eb64 <console_set_fg_color+0x3c>)
 800eb4c:	e7f5      	b.n	800eb3a <console_set_fg_color+0x12>
 800eb4e:	4806      	ldr	r0, [pc, #24]	; (800eb68 <console_set_fg_color+0x40>)
 800eb50:	e7f3      	b.n	800eb3a <console_set_fg_color+0x12>
 800eb52:	bf00      	nop
 800eb54:	080129aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp}
 800eb58:	080129b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, sp}
 800eb5c:	080129b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, fp, sp}
 800eb60:	080129bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, fp, sp}
 800eb64:	08010fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp}
 800eb68:	080129c2 	stmdaeq	r1, {r1, r6, r7, r8, fp, sp}

0800eb6c <console_error>:
 800eb6c:	b510      	push	{r4, lr}
 800eb6e:	4604      	mov	r4, r0
 800eb70:	4805      	ldr	r0, [pc, #20]	; (800eb88 <console_error+0x1c>)
 800eb72:	f000 fb75 	bl	800f260 <uart0_puts>
 800eb76:	4620      	mov	r0, r4
 800eb78:	f000 fb72 	bl	800f260 <uart0_puts>
 800eb7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb80:	4802      	ldr	r0, [pc, #8]	; (800eb8c <console_error+0x20>)
 800eb82:	f000 bb6d 	b.w	800f260 <uart0_puts>
 800eb86:	bf00      	nop
 800eb88:	080129b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, sp}
 800eb8c:	08010fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp}

0800eb90 <console_status>:
 800eb90:	b510      	push	{r4, lr}
 800eb92:	460c      	mov	r4, r1
 800eb94:	b280      	uxth	r0, r0
 800eb96:	f7ff ffc7 	bl	800eb28 <console_set_fg_color>
 800eb9a:	4807      	ldr	r0, [pc, #28]	; (800ebb8 <console_status+0x28>)
 800eb9c:	f000 fb60 	bl	800f260 <uart0_puts>
 800eba0:	4620      	mov	r0, r4
 800eba2:	f000 fb5d 	bl	800f260 <uart0_puts>
 800eba6:	200a      	movs	r0, #10
 800eba8:	f000 fb3a 	bl	800f220 <uart0_putc>
 800ebac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebb0:	4802      	ldr	r0, [pc, #8]	; (800ebbc <console_status+0x2c>)
 800ebb2:	f000 bb55 	b.w	800f260 <uart0_puts>
 800ebb6:	bf00      	nop
 800ebb8:	080129a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, sp}
 800ebbc:	08010fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp}

0800ebc0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 800ebc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebc4:	4617      	mov	r7, r2
 800ebc6:	461e      	mov	r6, r3
 800ebc8:	4d14      	ldr	r5, [pc, #80]	; (800ec1c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 800ebca:	4b15      	ldr	r3, [pc, #84]	; (800ec20 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 800ebcc:	b086      	sub	sp, #24
 800ebce:	6018      	str	r0, [r3, #0]
 800ebd0:	4604      	mov	r4, r0
 800ebd2:	f105 0803 	add.w	r8, r5, #3
 800ebd6:	2203      	movs	r2, #3
 800ebd8:	4628      	mov	r0, r5
 800ebda:	f000 f9e2 	bl	800efa2 <memmove>
 800ebde:	4639      	mov	r1, r7
 800ebe0:	220b      	movs	r2, #11
 800ebe2:	4640      	mov	r0, r8
 800ebe4:	f000 f9dd 	bl	800efa2 <memmove>
 800ebe8:	f105 030e 	add.w	r3, r5, #14
 800ebec:	4631      	mov	r1, r6
 800ebee:	2208      	movs	r2, #8
 800ebf0:	4618      	mov	r0, r3
 800ebf2:	f000 f9d6 	bl	800efa2 <memmove>
 800ebf6:	2308      	movs	r3, #8
 800ebf8:	e9cd 8303 	strd	r8, r3, [sp, #12]
 800ebfc:	230b      	movs	r3, #11
 800ebfe:	9302      	str	r3, [sp, #8]
 800ec00:	4b08      	ldr	r3, [pc, #32]	; (800ec24 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 800ec02:	9005      	str	r0, [sp, #20]
 800ec04:	e9cd 5300 	strd	r5, r3, [sp]
 800ec08:	213f      	movs	r1, #63	; 0x3f
 800ec0a:	2303      	movs	r3, #3
 800ec0c:	4a06      	ldr	r2, [pc, #24]	; (800ec28 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 800ec0e:	4807      	ldr	r0, [pc, #28]	; (800ec2c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 800ec10:	f7f9 ff92 	bl	8008b38 <snprintf>
 800ec14:	4620      	mov	r0, r4
 800ec16:	b006      	add	sp, #24
 800ec18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec1c:	20009b48 	andcs	r9, r0, r8, asr #22
 800ec20:	20009ba0 	andcs	r9, r0, r0, lsr #23
 800ec24:	08010fde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, fp}
 800ec28:	080129c8 	stmdaeq	r1, {r3, r6, r7, r8, fp, sp}
 800ec2c:	20009b5e 	andcs	r9, r0, lr, asr fp

0800ec30 <FirmwareVersion::Print(char const*)>:
 800ec30:	b510      	push	{r4, lr}
 800ec32:	460c      	mov	r4, r1
 800ec34:	4804      	ldr	r0, [pc, #16]	; (800ec48 <FirmwareVersion::Print(char const*)+0x18>)
 800ec36:	f000 f9f0 	bl	800f01a <puts>
 800ec3a:	b124      	cbz	r4, 800ec46 <FirmwareVersion::Print(char const*)+0x16>
 800ec3c:	4620      	mov	r0, r4
 800ec3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec42:	f000 b9ea 	b.w	800f01a <puts>
 800ec46:	bd10      	pop	{r4, pc}
 800ec48:	20009b5e 	andcs	r9, r0, lr, asr fp

0800ec4c <LedBlink::LedBlink()>:
 800ec4c:	b538      	push	{r3, r4, r5, lr}
 800ec4e:	2205      	movs	r2, #5
 800ec50:	2300      	movs	r3, #0
 800ec52:	e9c0 3200 	strd	r3, r2, [r0]
 800ec56:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ec5a:	6083      	str	r3, [r0, #8]
 800ec5c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800ec60:	6143      	str	r3, [r0, #20]
 800ec62:	4b09      	ldr	r3, [pc, #36]	; (800ec88 <LedBlink::LedBlink()+0x3c>)
 800ec64:	4d09      	ldr	r5, [pc, #36]	; (800ec8c <LedBlink::LedBlink()+0x40>)
 800ec66:	4604      	mov	r4, r0
 800ec68:	6018      	str	r0, [r3, #0]
 800ec6a:	f240 6004 	movw	r0, #1540	; 0x604
 800ec6e:	f000 fd77 	bl	800f760 <rcu_periph_clock_enable>
 800ec72:	4628      	mov	r0, r5
 800ec74:	2301      	movs	r3, #1
 800ec76:	2203      	movs	r2, #3
 800ec78:	2110      	movs	r1, #16
 800ec7a:	f000 fcd9 	bl	800f630 <gpio_init>
 800ec7e:	2301      	movs	r3, #1
 800ec80:	4620      	mov	r0, r4
 800ec82:	616b      	str	r3, [r5, #20]
 800ec84:	bd38      	pop	{r3, r4, r5, pc}
 800ec86:	bf00      	nop
 800ec88:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800ec8c:	40011000 	andmi	r1, r1, r0

0800ec90 <LedBlink::SetMode(ledblink::Mode)>:
 800ec90:	6843      	ldr	r3, [r0, #4]
 800ec92:	428b      	cmp	r3, r1
 800ec94:	d02f      	beq.n	800ecf6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ec96:	6041      	str	r1, [r0, #4]
 800ec98:	2904      	cmp	r1, #4
 800ec9a:	d822      	bhi.n	800ece2 <LedBlink::SetMode(ledblink::Mode)+0x52>
 800ec9c:	e8df f001 	tbb	[pc, r1]
 800eca0:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 800eca4:	23ff001d 	mvnscs	r0, #29
 800eca8:	6003      	str	r3, [r0, #0]
 800ecaa:	2300      	movs	r3, #0
 800ecac:	2201      	movs	r2, #1
 800ecae:	60c3      	str	r3, [r0, #12]
 800ecb0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ecb4:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ecb8:	611a      	str	r2, [r3, #16]
 800ecba:	6880      	ldr	r0, [r0, #8]
 800ecbc:	b1d8      	cbz	r0, 800ecf6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 800ecbe:	6803      	ldr	r3, [r0, #0]
 800ecc0:	689b      	ldr	r3, [r3, #8]
 800ecc2:	4718      	bx	r3
 800ecc4:	2301      	movs	r3, #1
 800ecc6:	6003      	str	r3, [r0, #0]
 800ecc8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800eccc:	60c3      	str	r3, [r0, #12]
 800ecce:	e7f4      	b.n	800ecba <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ecd0:	2303      	movs	r3, #3
 800ecd2:	6003      	str	r3, [r0, #0]
 800ecd4:	f240 134d 	movw	r3, #333	; 0x14d
 800ecd8:	e7f8      	b.n	800eccc <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ecda:	2305      	movs	r3, #5
 800ecdc:	6003      	str	r3, [r0, #0]
 800ecde:	23c8      	movs	r3, #200	; 0xc8
 800ece0:	e7f4      	b.n	800eccc <LedBlink::SetMode(ledblink::Mode)+0x3c>
 800ece2:	2300      	movs	r3, #0
 800ece4:	2201      	movs	r2, #1
 800ece6:	6003      	str	r3, [r0, #0]
 800ece8:	60c3      	str	r3, [r0, #12]
 800ecea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ecee:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800ecf2:	615a      	str	r2, [r3, #20]
 800ecf4:	e7e1      	b.n	800ecba <LedBlink::SetMode(ledblink::Mode)+0x2a>
 800ecf6:	4770      	bx	lr

0800ecf8 <Hardware::Hardware()>:
 800ecf8:	b570      	push	{r4, r5, r6, lr}
 800ecfa:	2400      	movs	r4, #0
 800ecfc:	4b26      	ldr	r3, [pc, #152]	; (800ed98 <Hardware::Hardware()+0xa0>)
 800ecfe:	b090      	sub	sp, #64	; 0x40
 800ed00:	6004      	str	r4, [r0, #0]
 800ed02:	7104      	strb	r4, [r0, #4]
 800ed04:	4e25      	ldr	r6, [pc, #148]	; (800ed9c <Hardware::Hardware()+0xa4>)
 800ed06:	6018      	str	r0, [r3, #0]
 800ed08:	4605      	mov	r5, r0
 800ed0a:	f7f8 fbfd 	bl	8007508 <console_init>
 800ed0e:	f000 fab7 	bl	800f280 <systick_config>
 800ed12:	f001 fb8d 	bl	8010430 <udelay_init()>
 800ed16:	f001 fb89 	bl	801042c <micros_init()>
 800ed1a:	f240 7004 	movw	r0, #1796	; 0x704
 800ed1e:	f000 fd1f 	bl	800f760 <rcu_periph_clock_enable>
 800ed22:	4630      	mov	r0, r6
 800ed24:	f000 fe78 	bl	800fa18 <timer_deinit>
 800ed28:	236b      	movs	r3, #107	; 0x6b
 800ed2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ed2e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ed32:	a903      	add	r1, sp, #12
 800ed34:	4630      	mov	r0, r6
 800ed36:	9305      	str	r3, [sp, #20]
 800ed38:	f000 fed0 	bl	800fadc <timer_init>
 800ed3c:	4630      	mov	r0, r6
 800ed3e:	f000 ff25 	bl	800fb8c <timer_enable>
 800ed42:	f001 f8f9 	bl	800ff38 <gd32_adc_init()>
 800ed46:	2217      	movs	r2, #23
 800ed48:	2301      	movs	r3, #1
 800ed4a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800ed4e:	237a      	movs	r3, #122	; 0x7a
 800ed50:	a807      	add	r0, sp, #28
 800ed52:	930c      	str	r3, [sp, #48]	; 0x30
 800ed54:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800ed58:	9407      	str	r4, [sp, #28]
 800ed5a:	940f      	str	r4, [sp, #60]	; 0x3c
 800ed5c:	f000 f9b6 	bl	800f0cc <mktime>
 800ed60:	4621      	mov	r1, r4
 800ed62:	e9cd 0401 	strd	r0, r4, [sp, #4]
 800ed66:	a801      	add	r0, sp, #4
 800ed68:	f000 fa26 	bl	800f1b8 <settimeofday>
 800ed6c:	f240 701b 	movw	r0, #1819	; 0x71b
 800ed70:	f000 fcf6 	bl	800f760 <rcu_periph_clock_enable>
 800ed74:	f240 701c 	movw	r0, #1820	; 0x71c
 800ed78:	f000 fcf2 	bl	800f760 <rcu_periph_clock_enable>
 800ed7c:	f000 fce8 	bl	800f750 <pmu_backup_write_enable>
 800ed80:	f000 fb1c 	bl	800f3bc <bkp_deinit>
 800ed84:	4621      	mov	r1, r4
 800ed86:	2002      	movs	r0, #2
 800ed88:	f000 fb20 	bl	800f3cc <bkp_data_write>
 800ed8c:	f001 f92e 	bl	800ffec <gd32_i2c_begin()>
 800ed90:	4628      	mov	r0, r5
 800ed92:	b010      	add	sp, #64	; 0x40
 800ed94:	bd70      	pop	{r4, r5, r6, pc}
 800ed96:	bf00      	nop
 800ed98:	20009ba8 	andcs	r9, r0, r8, lsr #23
 800ed9c:	40001000 	andmi	r1, r0, r0

0800eda0 <Hardware::Reboot()>:
 800eda0:	b508      	push	{r3, lr}
 800eda2:	6803      	ldr	r3, [r0, #0]
 800eda4:	4604      	mov	r4, r0
 800eda6:	b153      	cbz	r3, 800edbe <Hardware::Reboot()+0x1e>
 800eda8:	2300      	movs	r3, #0
 800edaa:	2104      	movs	r1, #4
 800edac:	7103      	strb	r3, [r0, #4]
 800edae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800edb2:	f000 fc13 	bl	800f5dc <fwdgt_config>
 800edb6:	6820      	ldr	r0, [r4, #0]
 800edb8:	6803      	ldr	r3, [r0, #0]
 800edba:	689b      	ldr	r3, [r3, #8]
 800edbc:	4798      	blx	r3
 800edbe:	2102      	movs	r1, #2
 800edc0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800edc4:	f000 fc0a 	bl	800f5dc <fwdgt_config>
 800edc8:	2801      	cmp	r0, #1
 800edca:	bf0c      	ite	eq
 800edcc:	2301      	moveq	r3, #1
 800edce:	2300      	movne	r3, #0
 800edd0:	7123      	strb	r3, [r4, #4]
 800edd2:	d101      	bne.n	800edd8 <Hardware::Reboot()+0x38>
 800edd4:	f000 fbf2 	bl	800f5bc <fwdgt_enable>
 800edd8:	2208      	movs	r2, #8
 800edda:	4b0d      	ldr	r3, [pc, #52]	; (800ee10 <Hardware::Reboot()+0x70>)
 800eddc:	2501      	movs	r5, #1
 800edde:	681b      	ldr	r3, [r3, #0]
 800ede0:	480c      	ldr	r0, [pc, #48]	; (800ee14 <Hardware::Reboot()+0x74>)
 800ede2:	601a      	str	r2, [r3, #0]
 800ede4:	227d      	movs	r2, #125	; 0x7d
 800ede6:	490c      	ldr	r1, [pc, #48]	; (800ee18 <Hardware::Reboot()+0x78>)
 800ede8:	60da      	str	r2, [r3, #12]
 800edea:	68dc      	ldr	r4, [r3, #12]
 800edec:	b904      	cbnz	r4, 800edf0 <Hardware::Reboot()+0x50>
 800edee:	e7fe      	b.n	800edee <Hardware::Reboot()+0x4e>
 800edf0:	6802      	ldr	r2, [r0, #0]
 800edf2:	695e      	ldr	r6, [r3, #20]
 800edf4:	1b92      	subs	r2, r2, r6
 800edf6:	4294      	cmp	r4, r2
 800edf8:	d8f8      	bhi.n	800edec <Hardware::Reboot()+0x4c>
 800edfa:	6802      	ldr	r2, [r0, #0]
 800edfc:	615a      	str	r2, [r3, #20]
 800edfe:	691a      	ldr	r2, [r3, #16]
 800ee00:	2a01      	cmp	r2, #1
 800ee02:	f082 0401 	eor.w	r4, r2, #1
 800ee06:	611c      	str	r4, [r3, #16]
 800ee08:	bf14      	ite	ne
 800ee0a:	610d      	strne	r5, [r1, #16]
 800ee0c:	614a      	streq	r2, [r1, #20]
 800ee0e:	e7ec      	b.n	800edea <Hardware::Reboot()+0x4a>
 800ee10:	20009ba4 	andcs	r9, r0, r4, lsr #23
 800ee14:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800ee18:	40011000 	andmi	r1, r1, r0

0800ee1c <operator delete(void*)>:
 800ee1c:	f000 b890 	b.w	800ef40 <free>

0800ee20 <operator delete[](void*)>:
 800ee20:	f000 b88e 	b.w	800ef40 <free>

0800ee24 <operator new(unsigned int)>:
 800ee24:	f000 b842 	b.w	800eeac <malloc>

0800ee28 <operator new[](unsigned int)>:
 800ee28:	f000 b840 	b.w	800eeac <malloc>

0800ee2c <inet_aton>:
 800ee2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ee2e:	f04f 0c0a 	mov.w	ip, #10
 800ee32:	2500      	movs	r5, #0
 800ee34:	ae01      	add	r6, sp, #4
 800ee36:	4603      	mov	r3, r0
 800ee38:	2200      	movs	r2, #0
 800ee3a:	1d07      	adds	r7, r0, #4
 800ee3c:	e007      	b.n	800ee4e <inet_aton+0x22>
 800ee3e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800ee42:	2b09      	cmp	r3, #9
 800ee44:	d820      	bhi.n	800ee88 <inet_aton+0x5c>
 800ee46:	4603      	mov	r3, r0
 800ee48:	fb0c 4202 	mla	r2, ip, r2, r4
 800ee4c:	3a30      	subs	r2, #48	; 0x30
 800ee4e:	4618      	mov	r0, r3
 800ee50:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ee54:	2c2e      	cmp	r4, #46	; 0x2e
 800ee56:	d111      	bne.n	800ee7c <inet_aton+0x50>
 800ee58:	3501      	adds	r5, #1
 800ee5a:	2d03      	cmp	r5, #3
 800ee5c:	f806 2b01 	strb.w	r2, [r6], #1
 800ee60:	d1e9      	bne.n	800ee36 <inet_aton+0xa>
 800ee62:	2200      	movs	r2, #0
 800ee64:	250a      	movs	r5, #10
 800ee66:	1d1c      	adds	r4, r3, #4
 800ee68:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ee6c:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 800ee70:	d10d      	bne.n	800ee8e <inet_aton+0x62>
 800ee72:	f88d 2007 	strb.w	r2, [sp, #7]
 800ee76:	b9b1      	cbnz	r1, 800eea6 <inet_aton+0x7a>
 800ee78:	2001      	movs	r0, #1
 800ee7a:	e006      	b.n	800ee8a <inet_aton+0x5e>
 800ee7c:	2c00      	cmp	r4, #0
 800ee7e:	d0eb      	beq.n	800ee58 <inet_aton+0x2c>
 800ee80:	2c0a      	cmp	r4, #10
 800ee82:	d0e9      	beq.n	800ee58 <inet_aton+0x2c>
 800ee84:	42b8      	cmp	r0, r7
 800ee86:	d1da      	bne.n	800ee3e <inet_aton+0x12>
 800ee88:	2000      	movs	r0, #0
 800ee8a:	b003      	add	sp, #12
 800ee8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee8e:	280a      	cmp	r0, #10
 800ee90:	d0ef      	beq.n	800ee72 <inet_aton+0x46>
 800ee92:	42a3      	cmp	r3, r4
 800ee94:	d0f8      	beq.n	800ee88 <inet_aton+0x5c>
 800ee96:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 800ee9a:	2e09      	cmp	r6, #9
 800ee9c:	d8f4      	bhi.n	800ee88 <inet_aton+0x5c>
 800ee9e:	fb05 0202 	mla	r2, r5, r2, r0
 800eea2:	3a30      	subs	r2, #48	; 0x30
 800eea4:	e7e0      	b.n	800ee68 <inet_aton+0x3c>
 800eea6:	9b01      	ldr	r3, [sp, #4]
 800eea8:	600b      	str	r3, [r1, #0]
 800eeaa:	e7e5      	b.n	800ee78 <inet_aton+0x4c>

0800eeac <malloc>:
 800eeac:	b538      	push	{r3, r4, r5, lr}
 800eeae:	4604      	mov	r4, r0
 800eeb0:	4601      	mov	r1, r0
 800eeb2:	481c      	ldr	r0, [pc, #112]	; (800ef24 <malloc+0x78>)
 800eeb4:	f7f9 fe30 	bl	8008b18 <printf>
 800eeb8:	b17c      	cbz	r4, 800eeda <malloc+0x2e>
 800eeba:	4b1b      	ldr	r3, [pc, #108]	; (800ef28 <malloc+0x7c>)
 800eebc:	6818      	ldr	r0, [r3, #0]
 800eebe:	b978      	cbnz	r0, 800eee0 <malloc+0x34>
 800eec0:	4a1a      	ldr	r2, [pc, #104]	; (800ef2c <malloc+0x80>)
 800eec2:	f104 031b 	add.w	r3, r4, #27
 800eec6:	6811      	ldr	r1, [r2, #0]
 800eec8:	4819      	ldr	r0, [pc, #100]	; (800ef30 <malloc+0x84>)
 800eeca:	f023 030f 	bic.w	r3, r3, #15
 800eece:	440b      	add	r3, r1
 800eed0:	4283      	cmp	r3, r0
 800eed2:	d921      	bls.n	800ef18 <malloc+0x6c>
 800eed4:	4817      	ldr	r0, [pc, #92]	; (800ef34 <malloc+0x88>)
 800eed6:	f7f9 fe1f 	bl	8008b18 <printf>
 800eeda:	2500      	movs	r5, #0
 800eedc:	4628      	mov	r0, r5
 800eede:	bd38      	pop	{r3, r4, r5, pc}
 800eee0:	4284      	cmp	r4, r0
 800eee2:	d80a      	bhi.n	800eefa <malloc+0x4e>
 800eee4:	685a      	ldr	r2, [r3, #4]
 800eee6:	6899      	ldr	r1, [r3, #8]
 800eee8:	3201      	adds	r2, #1
 800eeea:	428a      	cmp	r2, r1
 800eeec:	605a      	str	r2, [r3, #4]
 800eeee:	d900      	bls.n	800eef2 <malloc+0x46>
 800eef0:	609a      	str	r2, [r3, #8]
 800eef2:	68d9      	ldr	r1, [r3, #12]
 800eef4:	b919      	cbnz	r1, 800eefe <malloc+0x52>
 800eef6:	4604      	mov	r4, r0
 800eef8:	e7e2      	b.n	800eec0 <malloc+0x14>
 800eefa:	3310      	adds	r3, #16
 800eefc:	e7de      	b.n	800eebc <malloc+0x10>
 800eefe:	4604      	mov	r4, r0
 800ef00:	688a      	ldr	r2, [r1, #8]
 800ef02:	60da      	str	r2, [r3, #12]
 800ef04:	2300      	movs	r3, #0
 800ef06:	f101 050c 	add.w	r5, r1, #12
 800ef0a:	608b      	str	r3, [r1, #8]
 800ef0c:	4622      	mov	r2, r4
 800ef0e:	462b      	mov	r3, r5
 800ef10:	4809      	ldr	r0, [pc, #36]	; (800ef38 <malloc+0x8c>)
 800ef12:	f7f9 fe01 	bl	8008b18 <printf>
 800ef16:	e7e1      	b.n	800eedc <malloc+0x30>
 800ef18:	6013      	str	r3, [r2, #0]
 800ef1a:	4b08      	ldr	r3, [pc, #32]	; (800ef3c <malloc+0x90>)
 800ef1c:	e9c1 3400 	strd	r3, r4, [r1]
 800ef20:	e7f0      	b.n	800ef04 <malloc+0x58>
 800ef22:	bf00      	nop
 800ef24:	080129ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, fp, sp}
 800ef28:	20000024 	andcs	r0, r0, r4, lsr #32
 800ef2c:	20000020 	andcs	r0, r0, r0, lsr #32
 800ef30:	20016800 	andcs	r6, r1, r0, lsl #16
 800ef34:	080129f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, fp, sp}
 800ef38:	08012a14 	stmdaeq	r1, {r2, r4, r9, fp, sp}
 800ef3c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800ef40 <free>:
 800ef40:	b538      	push	{r3, r4, r5, lr}
 800ef42:	4604      	mov	r4, r0
 800ef44:	b1c8      	cbz	r0, 800ef7a <free+0x3a>
 800ef46:	f1a0 050c 	sub.w	r5, r0, #12
 800ef4a:	4602      	mov	r2, r0
 800ef4c:	4629      	mov	r1, r5
 800ef4e:	480c      	ldr	r0, [pc, #48]	; (800ef80 <free+0x40>)
 800ef50:	f7f9 fde2 	bl	8008b18 <printf>
 800ef54:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800ef58:	4b0a      	ldr	r3, [pc, #40]	; (800ef84 <free+0x44>)
 800ef5a:	429a      	cmp	r2, r3
 800ef5c:	d10d      	bne.n	800ef7a <free+0x3a>
 800ef5e:	4b0a      	ldr	r3, [pc, #40]	; (800ef88 <free+0x48>)
 800ef60:	681a      	ldr	r2, [r3, #0]
 800ef62:	b152      	cbz	r2, 800ef7a <free+0x3a>
 800ef64:	f854 1c08 	ldr.w	r1, [r4, #-8]
 800ef68:	4291      	cmp	r1, r2
 800ef6a:	d107      	bne.n	800ef7c <free+0x3c>
 800ef6c:	68da      	ldr	r2, [r3, #12]
 800ef6e:	f844 2c04 	str.w	r2, [r4, #-4]
 800ef72:	685a      	ldr	r2, [r3, #4]
 800ef74:	60dd      	str	r5, [r3, #12]
 800ef76:	3a01      	subs	r2, #1
 800ef78:	605a      	str	r2, [r3, #4]
 800ef7a:	bd38      	pop	{r3, r4, r5, pc}
 800ef7c:	3310      	adds	r3, #16
 800ef7e:	e7ef      	b.n	800ef60 <free+0x20>
 800ef80:	08012a3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, fp, sp}
 800ef84:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 800ef88:	20000024 	andcs	r0, r0, r4, lsr #32

0800ef8c <memcpy>:
 800ef8c:	b510      	push	{r4, lr}
 800ef8e:	1e43      	subs	r3, r0, #1
 800ef90:	440a      	add	r2, r1
 800ef92:	4291      	cmp	r1, r2
 800ef94:	d100      	bne.n	800ef98 <memcpy+0xc>
 800ef96:	bd10      	pop	{r4, pc}
 800ef98:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ef9c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800efa0:	e7f7      	b.n	800ef92 <memcpy+0x6>

0800efa2 <memmove>:
 800efa2:	4288      	cmp	r0, r1
 800efa4:	b510      	push	{r4, lr}
 800efa6:	eb01 0302 	add.w	r3, r1, r2
 800efaa:	d208      	bcs.n	800efbe <memmove+0x1c>
 800efac:	1e42      	subs	r2, r0, #1
 800efae:	4299      	cmp	r1, r3
 800efb0:	d100      	bne.n	800efb4 <memmove+0x12>
 800efb2:	bd10      	pop	{r4, pc}
 800efb4:	f811 4b01 	ldrb.w	r4, [r1], #1
 800efb8:	f802 4f01 	strb.w	r4, [r2, #1]!
 800efbc:	e7f7      	b.n	800efae <memmove+0xc>
 800efbe:	4601      	mov	r1, r0
 800efc0:	4402      	add	r2, r0
 800efc2:	428a      	cmp	r2, r1
 800efc4:	d0f5      	beq.n	800efb2 <memmove+0x10>
 800efc6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800efca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800efce:	e7f8      	b.n	800efc2 <memmove+0x20>

0800efd0 <memset>:
 800efd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efd2:	b1e2      	cbz	r2, 800f00e <memset+0x3e>
 800efd4:	4603      	mov	r3, r0
 800efd6:	b2c9      	uxtb	r1, r1
 800efd8:	075c      	lsls	r4, r3, #29
 800efda:	d114      	bne.n	800f006 <memset+0x36>
 800efdc:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800efe0:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800efe4:	463d      	mov	r5, r7
 800efe6:	f022 0407 	bic.w	r4, r2, #7
 800efea:	08d6      	lsrs	r6, r2, #3
 800efec:	441c      	add	r4, r3
 800efee:	42a3      	cmp	r3, r4
 800eff0:	d10e      	bne.n	800f010 <memset+0x40>
 800eff2:	f06f 0307 	mvn.w	r3, #7
 800eff6:	fb03 2206 	mla	r2, r3, r6, r2
 800effa:	4422      	add	r2, r4
 800effc:	4294      	cmp	r4, r2
 800effe:	d006      	beq.n	800f00e <memset+0x3e>
 800f000:	f804 1b01 	strb.w	r1, [r4], #1
 800f004:	e7fa      	b.n	800effc <memset+0x2c>
 800f006:	3a01      	subs	r2, #1
 800f008:	f803 1b01 	strb.w	r1, [r3], #1
 800f00c:	d1e4      	bne.n	800efd8 <memset+0x8>
 800f00e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f010:	f843 7b08 	str.w	r7, [r3], #8
 800f014:	f843 5c04 	str.w	r5, [r3, #-4]
 800f018:	e7e9      	b.n	800efee <memset+0x1e>

0800f01a <puts>:
 800f01a:	b508      	push	{r3, lr}
 800f01c:	f7ff fd82 	bl	800eb24 <console_puts>
 800f020:	200a      	movs	r0, #10
 800f022:	f7ff fd7d 	bl	800eb20 <console_putc>
 800f026:	2001      	movs	r0, #1
 800f028:	bd08      	pop	{r3, pc}
	...

0800f02c <strtok>:
 800f02c:	b530      	push	{r4, r5, lr}
 800f02e:	b910      	cbnz	r0, 800f036 <strtok+0xa>
 800f030:	4b12      	ldr	r3, [pc, #72]	; (800f07c <strtok+0x50>)
 800f032:	6818      	ldr	r0, [r3, #0]
 800f034:	b158      	cbz	r0, 800f04e <strtok+0x22>
 800f036:	4603      	mov	r3, r0
 800f038:	460d      	mov	r5, r1
 800f03a:	4618      	mov	r0, r3
 800f03c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f040:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f044:	b924      	cbnz	r4, 800f050 <strtok+0x24>
 800f046:	b94a      	cbnz	r2, 800f05c <strtok+0x30>
 800f048:	4610      	mov	r0, r2
 800f04a:	4b0c      	ldr	r3, [pc, #48]	; (800f07c <strtok+0x50>)
 800f04c:	601a      	str	r2, [r3, #0]
 800f04e:	bd30      	pop	{r4, r5, pc}
 800f050:	42a2      	cmp	r2, r4
 800f052:	d1f5      	bne.n	800f040 <strtok+0x14>
 800f054:	e7f0      	b.n	800f038 <strtok+0xc>
 800f056:	4613      	mov	r3, r2
 800f058:	e00c      	b.n	800f074 <strtok+0x48>
 800f05a:	b914      	cbnz	r4, 800f062 <strtok+0x36>
 800f05c:	460d      	mov	r5, r1
 800f05e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f062:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f066:	42a2      	cmp	r2, r4
 800f068:	d1f7      	bne.n	800f05a <strtok+0x2e>
 800f06a:	2a00      	cmp	r2, #0
 800f06c:	d0f3      	beq.n	800f056 <strtok+0x2a>
 800f06e:	2200      	movs	r2, #0
 800f070:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f074:	4a01      	ldr	r2, [pc, #4]	; (800f07c <strtok+0x50>)
 800f076:	6013      	str	r3, [r2, #0]
 800f078:	e7e9      	b.n	800f04e <strtok+0x22>
 800f07a:	bf00      	nop
 800f07c:	20009bac 	andcs	r9, r0, ip, lsr #23

0800f080 <isleapyear>:
 800f080:	2264      	movs	r2, #100	; 0x64
 800f082:	fb90 f3f2 	sdiv	r3, r0, r2
 800f086:	fb02 0313 	mls	r3, r2, r3, r0
 800f08a:	b94b      	cbnz	r3, 800f0a0 <isleapyear+0x20>
 800f08c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800f090:	fb90 f2f3 	sdiv	r2, r0, r3
 800f094:	fb03 0012 	mls	r0, r3, r2, r0
 800f098:	fab0 f080 	clz	r0, r0
 800f09c:	0940      	lsrs	r0, r0, #5
 800f09e:	4770      	bx	lr
 800f0a0:	f010 0f03 	tst.w	r0, #3
 800f0a4:	bf0c      	ite	eq
 800f0a6:	2001      	moveq	r0, #1
 800f0a8:	2000      	movne	r0, #0
 800f0aa:	4770      	bx	lr

0800f0ac <getdaysofmonth>:
 800f0ac:	b510      	push	{r4, lr}
 800f0ae:	4604      	mov	r4, r0
 800f0b0:	2c01      	cmp	r4, #1
 800f0b2:	4608      	mov	r0, r1
 800f0b4:	d102      	bne.n	800f0bc <getdaysofmonth+0x10>
 800f0b6:	f7ff ffe3 	bl	800f080 <isleapyear>
 800f0ba:	b918      	cbnz	r0, 800f0c4 <getdaysofmonth+0x18>
 800f0bc:	4b02      	ldr	r3, [pc, #8]	; (800f0c8 <getdaysofmonth+0x1c>)
 800f0be:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800f0c2:	bd10      	pop	{r4, pc}
 800f0c4:	201d      	movs	r0, #29
 800f0c6:	e7fc      	b.n	800f0c2 <getdaysofmonth+0x16>
 800f0c8:	08012a68 	stmdaeq	r1, {r3, r5, r6, r9, fp, sp}

0800f0cc <mktime>:
 800f0cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0d0:	4604      	mov	r4, r0
 800f0d2:	2800      	cmp	r0, #0
 800f0d4:	d042      	beq.n	800f15c <mktime+0x90>
 800f0d6:	6941      	ldr	r1, [r0, #20]
 800f0d8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800f0dc:	2b45      	cmp	r3, #69	; 0x45
 800f0de:	d83d      	bhi.n	800f15c <mktime+0x90>
 800f0e0:	2600      	movs	r6, #0
 800f0e2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 800f0e6:	f240 186d 	movw	r8, #365	; 0x16d
 800f0ea:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800f0ee:	42af      	cmp	r7, r5
 800f0f0:	da23      	bge.n	800f13a <mktime+0x6e>
 800f0f2:	6927      	ldr	r7, [r4, #16]
 800f0f4:	2f0b      	cmp	r7, #11
 800f0f6:	d831      	bhi.n	800f15c <mktime+0x90>
 800f0f8:	2500      	movs	r5, #0
 800f0fa:	42af      	cmp	r7, r5
 800f0fc:	d128      	bne.n	800f150 <mktime+0x84>
 800f0fe:	68e5      	ldr	r5, [r4, #12]
 800f100:	2d00      	cmp	r5, #0
 800f102:	dd2b      	ble.n	800f15c <mktime+0x90>
 800f104:	4638      	mov	r0, r7
 800f106:	f7ff ffd1 	bl	800f0ac <getdaysofmonth>
 800f10a:	4285      	cmp	r5, r0
 800f10c:	dc26      	bgt.n	800f15c <mktime+0x90>
 800f10e:	2318      	movs	r3, #24
 800f110:	3d01      	subs	r5, #1
 800f112:	4435      	add	r5, r6
 800f114:	435d      	muls	r5, r3
 800f116:	68a3      	ldr	r3, [r4, #8]
 800f118:	2b17      	cmp	r3, #23
 800f11a:	d81f      	bhi.n	800f15c <mktime+0x90>
 800f11c:	203c      	movs	r0, #60	; 0x3c
 800f11e:	442b      	add	r3, r5
 800f120:	fb00 f503 	mul.w	r5, r0, r3
 800f124:	6863      	ldr	r3, [r4, #4]
 800f126:	2b3b      	cmp	r3, #59	; 0x3b
 800f128:	d818      	bhi.n	800f15c <mktime+0x90>
 800f12a:	442b      	add	r3, r5
 800f12c:	4343      	muls	r3, r0
 800f12e:	6820      	ldr	r0, [r4, #0]
 800f130:	283b      	cmp	r0, #59	; 0x3b
 800f132:	d813      	bhi.n	800f15c <mktime+0x90>
 800f134:	4418      	add	r0, r3
 800f136:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f13a:	4628      	mov	r0, r5
 800f13c:	f7ff ffa0 	bl	800f080 <isleapyear>
 800f140:	2800      	cmp	r0, #0
 800f142:	bf14      	ite	ne
 800f144:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 800f148:	4643      	moveq	r3, r8
 800f14a:	3501      	adds	r5, #1
 800f14c:	441e      	add	r6, r3
 800f14e:	e7ce      	b.n	800f0ee <mktime+0x22>
 800f150:	4628      	mov	r0, r5
 800f152:	f7ff ffab 	bl	800f0ac <getdaysofmonth>
 800f156:	3501      	adds	r5, #1
 800f158:	4406      	add	r6, r0
 800f15a:	e7ce      	b.n	800f0fa <mktime+0x2e>
 800f15c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f160:	e7e9      	b.n	800f136 <mktime+0x6a>
	...

0800f164 <gettimeofday>:
 800f164:	b538      	push	{r3, r4, r5, lr}
 800f166:	4b10      	ldr	r3, [pc, #64]	; (800f1a8 <gettimeofday+0x44>)
 800f168:	4a10      	ldr	r2, [pc, #64]	; (800f1ac <gettimeofday+0x48>)
 800f16a:	681b      	ldr	r3, [r3, #0]
 800f16c:	6814      	ldr	r4, [r2, #0]
 800f16e:	6013      	str	r3, [r2, #0]
 800f170:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f174:	429c      	cmp	r4, r3
 800f176:	bf2c      	ite	cs
 800f178:	1ae4      	subcs	r4, r4, r3
 800f17a:	1b1c      	subcc	r4, r3, r4
 800f17c:	4354      	muls	r4, r2
 800f17e:	4b0c      	ldr	r3, [pc, #48]	; (800f1b0 <gettimeofday+0x4c>)
 800f180:	4605      	mov	r5, r0
 800f182:	e9d3 2100 	ldrd	r2, r1, [r3]
 800f186:	18a4      	adds	r4, r4, r2
 800f188:	f141 0100 	adc.w	r1, r1, #0
 800f18c:	e9c3 4100 	strd	r4, r1, [r3]
 800f190:	4620      	mov	r0, r4
 800f192:	2300      	movs	r3, #0
 800f194:	4a07      	ldr	r2, [pc, #28]	; (800f1b4 <gettimeofday+0x50>)
 800f196:	f7f8 fcab 	bl	8007af0 <__aeabi_uldivmod>
 800f19a:	4b06      	ldr	r3, [pc, #24]	; (800f1b4 <gettimeofday+0x50>)
 800f19c:	6028      	str	r0, [r5, #0]
 800f19e:	fb03 4410 	mls	r4, r3, r0, r4
 800f1a2:	2000      	movs	r0, #0
 800f1a4:	606c      	str	r4, [r5, #4]
 800f1a6:	bd38      	pop	{r3, r4, r5, pc}
 800f1a8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f1ac:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f1b0:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0
 800f1b4:	000f4240 	andeq	r4, pc, r0, asr #4

0800f1b8 <settimeofday>:
 800f1b8:	4b07      	ldr	r3, [pc, #28]	; (800f1d8 <settimeofday+0x20>)
 800f1ba:	b510      	push	{r4, lr}
 800f1bc:	681a      	ldr	r2, [r3, #0]
 800f1be:	4b07      	ldr	r3, [pc, #28]	; (800f1dc <settimeofday+0x24>)
 800f1c0:	6804      	ldr	r4, [r0, #0]
 800f1c2:	601a      	str	r2, [r3, #0]
 800f1c4:	6843      	ldr	r3, [r0, #4]
 800f1c6:	4806      	ldr	r0, [pc, #24]	; (800f1e0 <settimeofday+0x28>)
 800f1c8:	17da      	asrs	r2, r3, #31
 800f1ca:	fbc4 3200 	smlal	r3, r2, r4, r0
 800f1ce:	4905      	ldr	r1, [pc, #20]	; (800f1e4 <settimeofday+0x2c>)
 800f1d0:	2000      	movs	r0, #0
 800f1d2:	e9c1 3200 	strd	r3, r2, [r1]
 800f1d6:	bd10      	pop	{r4, pc}
 800f1d8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc
 800f1dc:	20009bb8 			; <UNDEFINED> instruction: 0x20009bb8
 800f1e0:	000f4240 	andeq	r4, pc, r0, asr #4
 800f1e4:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0

0800f1e8 <time>:
 800f1e8:	b513      	push	{r0, r1, r4, lr}
 800f1ea:	4604      	mov	r4, r0
 800f1ec:	2100      	movs	r1, #0
 800f1ee:	4668      	mov	r0, sp
 800f1f0:	f7ff ffb8 	bl	800f164 <gettimeofday>
 800f1f4:	9800      	ldr	r0, [sp, #0]
 800f1f6:	b104      	cbz	r4, 800f1fa <time+0x12>
 800f1f8:	6020      	str	r0, [r4, #0]
 800f1fa:	b002      	add	sp, #8
 800f1fc:	bd10      	pop	{r4, pc}
	...

0800f200 <uart0_init>:
 800f200:	2301      	movs	r3, #1
 800f202:	b507      	push	{r0, r1, r2, lr}
 800f204:	2208      	movs	r2, #8
 800f206:	9300      	str	r3, [sp, #0]
 800f208:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 800f20c:	2300      	movs	r3, #0
 800f20e:	4803      	ldr	r0, [pc, #12]	; (800f21c <uart0_init+0x1c>)
 800f210:	f001 f834 	bl	801027c <gd32_uart_begin>
 800f214:	b003      	add	sp, #12
 800f216:	f85d fb04 	ldr.w	pc, [sp], #4
 800f21a:	bf00      	nop
 800f21c:	40013800 	andmi	r3, r1, r0, lsl #16

0800f220 <uart0_putc>:
 800f220:	280a      	cmp	r0, #10
 800f222:	b538      	push	{r3, r4, r5, lr}
 800f224:	4604      	mov	r4, r0
 800f226:	d10a      	bne.n	800f23e <uart0_putc+0x1e>
 800f228:	4d0b      	ldr	r5, [pc, #44]	; (800f258 <uart0_putc+0x38>)
 800f22a:	2107      	movs	r1, #7
 800f22c:	4628      	mov	r0, r5
 800f22e:	f000 fd8f 	bl	800fd50 <usart_flag_get>
 800f232:	2800      	cmp	r0, #0
 800f234:	d0f9      	beq.n	800f22a <uart0_putc+0xa>
 800f236:	220d      	movs	r2, #13
 800f238:	4b08      	ldr	r3, [pc, #32]	; (800f25c <uart0_putc+0x3c>)
 800f23a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 800f23e:	4d06      	ldr	r5, [pc, #24]	; (800f258 <uart0_putc+0x38>)
 800f240:	2107      	movs	r1, #7
 800f242:	4628      	mov	r0, r5
 800f244:	f000 fd84 	bl	800fd50 <usart_flag_get>
 800f248:	2800      	cmp	r0, #0
 800f24a:	d0f9      	beq.n	800f240 <uart0_putc+0x20>
 800f24c:	4b03      	ldr	r3, [pc, #12]	; (800f25c <uart0_putc+0x3c>)
 800f24e:	b2e4      	uxtb	r4, r4
 800f250:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800f254:	bd38      	pop	{r3, r4, r5, pc}
 800f256:	bf00      	nop
 800f258:	40013800 	andmi	r3, r1, r0, lsl #16
 800f25c:	40013000 	andmi	r3, r1, r0

0800f260 <uart0_puts>:
 800f260:	b510      	push	{r4, lr}
 800f262:	1e44      	subs	r4, r0, #1
 800f264:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800f268:	b903      	cbnz	r3, 800f26c <uart0_puts+0xc>
 800f26a:	bd10      	pop	{r4, pc}
 800f26c:	2b0a      	cmp	r3, #10
 800f26e:	d102      	bne.n	800f276 <uart0_puts+0x16>
 800f270:	200d      	movs	r0, #13
 800f272:	f7ff ffd5 	bl	800f220 <uart0_putc>
 800f276:	7820      	ldrb	r0, [r4, #0]
 800f278:	f7ff ffd2 	bl	800f220 <uart0_putc>
 800f27c:	e7f2      	b.n	800f264 <uart0_puts+0x4>
	...

0800f280 <systick_config>:
 800f280:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800f284:	4b0b      	ldr	r3, [pc, #44]	; (800f2b4 <systick_config+0x34>)
 800f286:	681b      	ldr	r3, [r3, #0]
 800f288:	fbb3 f3f2 	udiv	r3, r3, r2
 800f28c:	3b01      	subs	r3, #1
 800f28e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800f292:	d20d      	bcs.n	800f2b0 <systick_config+0x30>
 800f294:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f298:	21f0      	movs	r1, #240	; 0xf0
 800f29a:	6153      	str	r3, [r2, #20]
 800f29c:	4b06      	ldr	r3, [pc, #24]	; (800f2b8 <systick_config+0x38>)
 800f29e:	2007      	movs	r0, #7
 800f2a0:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f2a4:	2100      	movs	r1, #0
 800f2a6:	6191      	str	r1, [r2, #24]
 800f2a8:	6110      	str	r0, [r2, #16]
 800f2aa:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 800f2ae:	4770      	bx	lr
 800f2b0:	e7fe      	b.n	800f2b0 <systick_config+0x30>
 800f2b2:	bf00      	nop
 800f2b4:	200000f4 	strdcs	r0, [r0], -r4
 800f2b8:	e000ed00 	and	lr, r0, r0, lsl #26

0800f2bc <SysTick_Handler>:
 800f2bc:	4a02      	ldr	r2, [pc, #8]	; (800f2c8 <SysTick_Handler+0xc>)
 800f2be:	6813      	ldr	r3, [r2, #0]
 800f2c0:	3301      	adds	r3, #1
 800f2c2:	6013      	str	r3, [r2, #0]
 800f2c4:	4770      	bx	lr
 800f2c6:	bf00      	nop
 800f2c8:	20009bbc 			; <UNDEFINED> instruction: 0x20009bbc

0800f2cc <SystemInit>:
 800f2cc:	4b37      	ldr	r3, [pc, #220]	; (800f3ac <SystemInit+0xe0>)
 800f2ce:	4838      	ldr	r0, [pc, #224]	; (800f3b0 <SystemInit+0xe4>)
 800f2d0:	681a      	ldr	r2, [r3, #0]
 800f2d2:	f042 0201 	orr.w	r2, r2, #1
 800f2d6:	601a      	str	r2, [r3, #0]
 800f2d8:	685a      	ldr	r2, [r3, #4]
 800f2da:	f022 0203 	bic.w	r2, r2, #3
 800f2de:	605a      	str	r2, [r3, #4]
 800f2e0:	6819      	ldr	r1, [r3, #0]
 800f2e2:	4001      	ands	r1, r0
 800f2e4:	6019      	str	r1, [r3, #0]
 800f2e6:	685a      	ldr	r2, [r3, #4]
 800f2e8:	4932      	ldr	r1, [pc, #200]	; (800f3b4 <SystemInit+0xe8>)
 800f2ea:	4011      	ands	r1, r2
 800f2ec:	6059      	str	r1, [r3, #4]
 800f2ee:	681a      	ldr	r2, [r3, #0]
 800f2f0:	4002      	ands	r2, r0
 800f2f2:	601a      	str	r2, [r3, #0]
 800f2f4:	681a      	ldr	r2, [r3, #0]
 800f2f6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800f2fa:	601a      	str	r2, [r3, #0]
 800f2fc:	685a      	ldr	r2, [r3, #4]
 800f2fe:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 800f302:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 800f306:	605a      	str	r2, [r3, #4]
 800f308:	2200      	movs	r2, #0
 800f30a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f30c:	681a      	ldr	r2, [r3, #0]
 800f30e:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 800f312:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 800f316:	601a      	str	r2, [r3, #0]
 800f318:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800f31c:	609a      	str	r2, [r3, #8]
 800f31e:	681a      	ldr	r2, [r3, #0]
 800f320:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f324:	601a      	str	r2, [r3, #0]
 800f326:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f32a:	6819      	ldr	r1, [r3, #0]
 800f32c:	0389      	lsls	r1, r1, #14
 800f32e:	d401      	bmi.n	800f334 <SystemInit+0x68>
 800f330:	3a01      	subs	r2, #1
 800f332:	d1fa      	bne.n	800f32a <SystemInit+0x5e>
 800f334:	681a      	ldr	r2, [r3, #0]
 800f336:	0392      	lsls	r2, r2, #14
 800f338:	d400      	bmi.n	800f33c <SystemInit+0x70>
 800f33a:	e7fe      	b.n	800f33a <SystemInit+0x6e>
 800f33c:	685a      	ldr	r2, [r3, #4]
 800f33e:	605a      	str	r2, [r3, #4]
 800f340:	685a      	ldr	r2, [r3, #4]
 800f342:	605a      	str	r2, [r3, #4]
 800f344:	685a      	ldr	r2, [r3, #4]
 800f346:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800f34a:	605a      	str	r2, [r3, #4]
 800f34c:	685a      	ldr	r2, [r3, #4]
 800f34e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800f352:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800f356:	605a      	str	r2, [r3, #4]
 800f358:	685a      	ldr	r2, [r3, #4]
 800f35a:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 800f35e:	f442 1224 	orr.w	r2, r2, #2686976	; 0x290000
 800f362:	605a      	str	r2, [r3, #4]
 800f364:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f366:	4a14      	ldr	r2, [pc, #80]	; (800f3b8 <SystemInit+0xec>)
 800f368:	400a      	ands	r2, r1
 800f36a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f36c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f36e:	f442 3283 	orr.w	r2, r2, #67072	; 0x10600
 800f372:	f042 0249 	orr.w	r2, r2, #73	; 0x49
 800f376:	62da      	str	r2, [r3, #44]	; 0x2c
 800f378:	681a      	ldr	r2, [r3, #0]
 800f37a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800f37e:	601a      	str	r2, [r3, #0]
 800f380:	681a      	ldr	r2, [r3, #0]
 800f382:	0110      	lsls	r0, r2, #4
 800f384:	d5fc      	bpl.n	800f380 <SystemInit+0xb4>
 800f386:	681a      	ldr	r2, [r3, #0]
 800f388:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800f38c:	601a      	str	r2, [r3, #0]
 800f38e:	681a      	ldr	r2, [r3, #0]
 800f390:	0191      	lsls	r1, r2, #6
 800f392:	d5fc      	bpl.n	800f38e <SystemInit+0xc2>
 800f394:	685a      	ldr	r2, [r3, #4]
 800f396:	f022 0203 	bic.w	r2, r2, #3
 800f39a:	605a      	str	r2, [r3, #4]
 800f39c:	685a      	ldr	r2, [r3, #4]
 800f39e:	f042 0202 	orr.w	r2, r2, #2
 800f3a2:	605a      	str	r2, [r3, #4]
 800f3a4:	685a      	ldr	r2, [r3, #4]
 800f3a6:	0712      	lsls	r2, r2, #28
 800f3a8:	d5fc      	bpl.n	800f3a4 <SystemInit+0xd8>
 800f3aa:	4770      	bx	lr
 800f3ac:	40021000 	andmi	r1, r2, r0
 800f3b0:	fef6ffff 	mrc2	15, 7, pc, cr6, cr15, {7}
 800f3b4:	e0ff000c 	rscs	r0, pc, ip
 800f3b8:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0800f3bc <bkp_deinit>:
 800f3bc:	b508      	push	{r3, lr}
 800f3be:	f000 f9f1 	bl	800f7a4 <rcu_bkp_reset_enable>
 800f3c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f3c6:	f000 b9f5 	b.w	800f7b4 <rcu_bkp_reset_disable>
	...

0800f3cc <bkp_data_write>:
 800f3cc:	f1a0 030b 	sub.w	r3, r0, #11
 800f3d0:	2b1f      	cmp	r3, #31
 800f3d2:	d804      	bhi.n	800f3de <bkp_data_write+0x12>
 800f3d4:	4b07      	ldr	r3, [pc, #28]	; (800f3f4 <bkp_data_write+0x28>)
 800f3d6:	4403      	add	r3, r0
 800f3d8:	009b      	lsls	r3, r3, #2
 800f3da:	8019      	strh	r1, [r3, #0]
 800f3dc:	4770      	bx	lr
 800f3de:	1e43      	subs	r3, r0, #1
 800f3e0:	2b09      	cmp	r3, #9
 800f3e2:	bf9f      	itttt	ls
 800f3e4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 800f3e8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800f3ec:	0080      	lslls	r0, r0, #2
 800f3ee:	8001      	strhls	r1, [r0, #0]
 800f3f0:	4770      	bx	lr
 800f3f2:	bf00      	nop
 800f3f4:	10001b05 	andne	r1, r0, r5, lsl #22

0800f3f8 <bkp_data_read>:
 800f3f8:	f1a0 030b 	sub.w	r3, r0, #11
 800f3fc:	2b1f      	cmp	r3, #31
 800f3fe:	d805      	bhi.n	800f40c <bkp_data_read+0x14>
 800f400:	4b08      	ldr	r3, [pc, #32]	; (800f424 <bkp_data_read+0x2c>)
 800f402:	4403      	add	r3, r0
 800f404:	009b      	lsls	r3, r3, #2
 800f406:	8818      	ldrh	r0, [r3, #0]
 800f408:	b280      	uxth	r0, r0
 800f40a:	4770      	bx	lr
 800f40c:	1e43      	subs	r3, r0, #1
 800f40e:	2b09      	cmp	r3, #9
 800f410:	d806      	bhi.n	800f420 <bkp_data_read+0x28>
 800f412:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 800f416:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 800f41a:	0080      	lsls	r0, r0, #2
 800f41c:	8800      	ldrh	r0, [r0, #0]
 800f41e:	e7f3      	b.n	800f408 <bkp_data_read+0x10>
 800f420:	2000      	movs	r0, #0
 800f422:	4770      	bx	lr
 800f424:	10001b05 	andne	r1, r0, r5, lsl #22

0800f428 <dma_deinit>:
 800f428:	4b0c      	ldr	r3, [pc, #48]	; (800f45c <dma_deinit+0x34>)
 800f42a:	4298      	cmp	r0, r3
 800f42c:	d102      	bne.n	800f434 <dma_deinit+0xc>
 800f42e:	2904      	cmp	r1, #4
 800f430:	d900      	bls.n	800f434 <dma_deinit+0xc>
 800f432:	e7fe      	b.n	800f432 <dma_deinit+0xa>
 800f434:	2314      	movs	r3, #20
 800f436:	fb03 0301 	mla	r3, r3, r1, r0
 800f43a:	689a      	ldr	r2, [r3, #8]
 800f43c:	0089      	lsls	r1, r1, #2
 800f43e:	f022 0201 	bic.w	r2, r2, #1
 800f442:	609a      	str	r2, [r3, #8]
 800f444:	2200      	movs	r2, #0
 800f446:	609a      	str	r2, [r3, #8]
 800f448:	60da      	str	r2, [r3, #12]
 800f44a:	611a      	str	r2, [r3, #16]
 800f44c:	615a      	str	r2, [r3, #20]
 800f44e:	230f      	movs	r3, #15
 800f450:	6842      	ldr	r2, [r0, #4]
 800f452:	fa03 f101 	lsl.w	r1, r3, r1
 800f456:	4311      	orrs	r1, r2
 800f458:	6041      	str	r1, [r0, #4]
 800f45a:	4770      	bx	lr
 800f45c:	40020400 	andmi	r0, r2, r0, lsl #8

0800f460 <dma_init>:
 800f460:	4b1b      	ldr	r3, [pc, #108]	; (800f4d0 <dma_init+0x70>)
 800f462:	b510      	push	{r4, lr}
 800f464:	4298      	cmp	r0, r3
 800f466:	d102      	bne.n	800f46e <dma_init+0xe>
 800f468:	2904      	cmp	r1, #4
 800f46a:	d900      	bls.n	800f46e <dma_init+0xe>
 800f46c:	e7fe      	b.n	800f46c <dma_init+0xc>
 800f46e:	2314      	movs	r3, #20
 800f470:	fb03 0101 	mla	r1, r3, r1, r0
 800f474:	6813      	ldr	r3, [r2, #0]
 800f476:	610b      	str	r3, [r1, #16]
 800f478:	6893      	ldr	r3, [r2, #8]
 800f47a:	614b      	str	r3, [r1, #20]
 800f47c:	8a13      	ldrh	r3, [r2, #16]
 800f47e:	60cb      	str	r3, [r1, #12]
 800f480:	68d4      	ldr	r4, [r2, #12]
 800f482:	6853      	ldr	r3, [r2, #4]
 800f484:	6888      	ldr	r0, [r1, #8]
 800f486:	4323      	orrs	r3, r4
 800f488:	6954      	ldr	r4, [r2, #20]
 800f48a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800f48e:	4323      	orrs	r3, r4
 800f490:	4303      	orrs	r3, r0
 800f492:	608b      	str	r3, [r1, #8]
 800f494:	7e13      	ldrb	r3, [r2, #24]
 800f496:	2b01      	cmp	r3, #1
 800f498:	688b      	ldr	r3, [r1, #8]
 800f49a:	bf0c      	ite	eq
 800f49c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 800f4a0:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 800f4a4:	608b      	str	r3, [r1, #8]
 800f4a6:	7e53      	ldrb	r3, [r2, #25]
 800f4a8:	2b01      	cmp	r3, #1
 800f4aa:	688b      	ldr	r3, [r1, #8]
 800f4ac:	bf0c      	ite	eq
 800f4ae:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 800f4b2:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 800f4b6:	608b      	str	r3, [r1, #8]
 800f4b8:	7e93      	ldrb	r3, [r2, #26]
 800f4ba:	b923      	cbnz	r3, 800f4c6 <dma_init+0x66>
 800f4bc:	688b      	ldr	r3, [r1, #8]
 800f4be:	f023 0310 	bic.w	r3, r3, #16
 800f4c2:	608b      	str	r3, [r1, #8]
 800f4c4:	bd10      	pop	{r4, pc}
 800f4c6:	688b      	ldr	r3, [r1, #8]
 800f4c8:	f043 0310 	orr.w	r3, r3, #16
 800f4cc:	e7f9      	b.n	800f4c2 <dma_init+0x62>
 800f4ce:	bf00      	nop
 800f4d0:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4d4 <dma_circulation_disable>:
 800f4d4:	4b06      	ldr	r3, [pc, #24]	; (800f4f0 <dma_circulation_disable+0x1c>)
 800f4d6:	4298      	cmp	r0, r3
 800f4d8:	d102      	bne.n	800f4e0 <dma_circulation_disable+0xc>
 800f4da:	2904      	cmp	r1, #4
 800f4dc:	d900      	bls.n	800f4e0 <dma_circulation_disable+0xc>
 800f4de:	e7fe      	b.n	800f4de <dma_circulation_disable+0xa>
 800f4e0:	2314      	movs	r3, #20
 800f4e2:	4359      	muls	r1, r3
 800f4e4:	3008      	adds	r0, #8
 800f4e6:	580b      	ldr	r3, [r1, r0]
 800f4e8:	f023 0320 	bic.w	r3, r3, #32
 800f4ec:	500b      	str	r3, [r1, r0]
 800f4ee:	4770      	bx	lr
 800f4f0:	40020400 	andmi	r0, r2, r0, lsl #8

0800f4f4 <dma_memory_to_memory_disable>:
 800f4f4:	4b06      	ldr	r3, [pc, #24]	; (800f510 <dma_memory_to_memory_disable+0x1c>)
 800f4f6:	4298      	cmp	r0, r3
 800f4f8:	d102      	bne.n	800f500 <dma_memory_to_memory_disable+0xc>
 800f4fa:	2904      	cmp	r1, #4
 800f4fc:	d900      	bls.n	800f500 <dma_memory_to_memory_disable+0xc>
 800f4fe:	e7fe      	b.n	800f4fe <dma_memory_to_memory_disable+0xa>
 800f500:	2314      	movs	r3, #20
 800f502:	4359      	muls	r1, r3
 800f504:	3008      	adds	r0, #8
 800f506:	580b      	ldr	r3, [r1, r0]
 800f508:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800f50c:	500b      	str	r3, [r1, r0]
 800f50e:	4770      	bx	lr
 800f510:	40020400 	andmi	r0, r2, r0, lsl #8

0800f514 <fmc_bank0_unlock>:
 800f514:	4b04      	ldr	r3, [pc, #16]	; (800f528 <fmc_bank0_unlock+0x14>)
 800f516:	691a      	ldr	r2, [r3, #16]
 800f518:	0612      	lsls	r2, r2, #24
 800f51a:	bf41      	itttt	mi
 800f51c:	4a03      	ldrmi	r2, [pc, #12]	; (800f52c <fmc_bank0_unlock+0x18>)
 800f51e:	605a      	strmi	r2, [r3, #4]
 800f520:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f524:	605a      	strmi	r2, [r3, #4]
 800f526:	4770      	bx	lr
 800f528:	40022000 	andmi	r2, r2, r0
 800f52c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f530 <fmc_bank1_unlock>:
 800f530:	4b04      	ldr	r3, [pc, #16]	; (800f544 <fmc_bank1_unlock+0x14>)
 800f532:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f534:	0612      	lsls	r2, r2, #24
 800f536:	bf41      	itttt	mi
 800f538:	4a03      	ldrmi	r2, [pc, #12]	; (800f548 <fmc_bank1_unlock+0x18>)
 800f53a:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f53c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 800f540:	645a      	strmi	r2, [r3, #68]	; 0x44
 800f542:	4770      	bx	lr
 800f544:	40022000 	andmi	r2, r2, r0
 800f548:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0800f54c <fmc_bank0_lock>:
 800f54c:	4a02      	ldr	r2, [pc, #8]	; (800f558 <fmc_bank0_lock+0xc>)
 800f54e:	6913      	ldr	r3, [r2, #16]
 800f550:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f554:	6113      	str	r3, [r2, #16]
 800f556:	4770      	bx	lr
 800f558:	40022000 	andmi	r2, r2, r0

0800f55c <fmc_bank1_lock>:
 800f55c:	4a02      	ldr	r2, [pc, #8]	; (800f568 <fmc_bank1_lock+0xc>)
 800f55e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800f560:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f564:	6513      	str	r3, [r2, #80]	; 0x50
 800f566:	4770      	bx	lr
 800f568:	40022000 	andmi	r2, r2, r0

0800f56c <fmc_bank0_state_get>:
 800f56c:	4b08      	ldr	r3, [pc, #32]	; (800f590 <fmc_bank0_state_get+0x24>)
 800f56e:	68da      	ldr	r2, [r3, #12]
 800f570:	07d1      	lsls	r1, r2, #31
 800f572:	d409      	bmi.n	800f588 <fmc_bank0_state_get+0x1c>
 800f574:	68da      	ldr	r2, [r3, #12]
 800f576:	06d2      	lsls	r2, r2, #27
 800f578:	d408      	bmi.n	800f58c <fmc_bank0_state_get+0x20>
 800f57a:	68db      	ldr	r3, [r3, #12]
 800f57c:	f013 0f04 	tst.w	r3, #4
 800f580:	bf0c      	ite	eq
 800f582:	2000      	moveq	r0, #0
 800f584:	2002      	movne	r0, #2
 800f586:	4770      	bx	lr
 800f588:	2001      	movs	r0, #1
 800f58a:	4770      	bx	lr
 800f58c:	2003      	movs	r0, #3
 800f58e:	4770      	bx	lr
 800f590:	40022000 	andmi	r2, r2, r0

0800f594 <fmc_bank1_state_get>:
 800f594:	4b08      	ldr	r3, [pc, #32]	; (800f5b8 <fmc_bank1_state_get+0x24>)
 800f596:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f598:	07d1      	lsls	r1, r2, #31
 800f59a:	d409      	bmi.n	800f5b0 <fmc_bank1_state_get+0x1c>
 800f59c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f59e:	06d2      	lsls	r2, r2, #27
 800f5a0:	d408      	bmi.n	800f5b4 <fmc_bank1_state_get+0x20>
 800f5a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f5a4:	f013 0f04 	tst.w	r3, #4
 800f5a8:	bf0c      	ite	eq
 800f5aa:	2000      	moveq	r0, #0
 800f5ac:	2002      	movne	r0, #2
 800f5ae:	4770      	bx	lr
 800f5b0:	2001      	movs	r0, #1
 800f5b2:	4770      	bx	lr
 800f5b4:	2003      	movs	r0, #3
 800f5b6:	4770      	bx	lr
 800f5b8:	40022000 	andmi	r2, r2, r0

0800f5bc <fwdgt_enable>:
 800f5bc:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800f5c0:	4b01      	ldr	r3, [pc, #4]	; (800f5c8 <fwdgt_enable+0xc>)
 800f5c2:	601a      	str	r2, [r3, #0]
 800f5c4:	4770      	bx	lr
 800f5c6:	bf00      	nop
 800f5c8:	40003000 	andmi	r3, r0, r0

0800f5cc <fwdgt_counter_reload>:
 800f5cc:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800f5d0:	4b01      	ldr	r3, [pc, #4]	; (800f5d8 <fwdgt_counter_reload+0xc>)
 800f5d2:	601a      	str	r2, [r3, #0]
 800f5d4:	4770      	bx	lr
 800f5d6:	bf00      	nop
 800f5d8:	40003000 	andmi	r3, r0, r0

0800f5dc <fwdgt_config>:
 800f5dc:	f245 5355 	movw	r3, #21845	; 0x5555
 800f5e0:	4a11      	ldr	r2, [pc, #68]	; (800f628 <fwdgt_config+0x4c>)
 800f5e2:	b510      	push	{r4, lr}
 800f5e4:	4c11      	ldr	r4, [pc, #68]	; (800f62c <fwdgt_config+0x50>)
 800f5e6:	6013      	str	r3, [r2, #0]
 800f5e8:	68d3      	ldr	r3, [r2, #12]
 800f5ea:	3c01      	subs	r4, #1
 800f5ec:	f003 0301 	and.w	r3, r3, #1
 800f5f0:	d013      	beq.n	800f61a <fwdgt_config+0x3e>
 800f5f2:	2b00      	cmp	r3, #0
 800f5f4:	d1f8      	bne.n	800f5e8 <fwdgt_config+0xc>
 800f5f6:	6051      	str	r1, [r2, #4]
 800f5f8:	490c      	ldr	r1, [pc, #48]	; (800f62c <fwdgt_config+0x50>)
 800f5fa:	4a0b      	ldr	r2, [pc, #44]	; (800f628 <fwdgt_config+0x4c>)
 800f5fc:	68d3      	ldr	r3, [r2, #12]
 800f5fe:	3901      	subs	r1, #1
 800f600:	f003 0302 	and.w	r3, r3, #2
 800f604:	d00d      	beq.n	800f622 <fwdgt_config+0x46>
 800f606:	2b00      	cmp	r3, #0
 800f608:	d1f8      	bne.n	800f5fc <fwdgt_config+0x20>
 800f60a:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800f60e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800f612:	6090      	str	r0, [r2, #8]
 800f614:	2001      	movs	r0, #1
 800f616:	6013      	str	r3, [r2, #0]
 800f618:	e002      	b.n	800f620 <fwdgt_config+0x44>
 800f61a:	2b00      	cmp	r3, #0
 800f61c:	d0eb      	beq.n	800f5f6 <fwdgt_config+0x1a>
 800f61e:	2000      	movs	r0, #0
 800f620:	bd10      	pop	{r4, pc}
 800f622:	2b00      	cmp	r3, #0
 800f624:	d1fb      	bne.n	800f61e <fwdgt_config+0x42>
 800f626:	e7f0      	b.n	800f60a <fwdgt_config+0x2e>
 800f628:	40003000 	andmi	r3, r0, r0
 800f62c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f630 <gpio_init>:
 800f630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f634:	f04f 0c0f 	mov.w	ip, #15
 800f638:	06cf      	lsls	r7, r1, #27
 800f63a:	f04f 0400 	mov.w	r4, #0
 800f63e:	f04f 0701 	mov.w	r7, #1
 800f642:	f001 050f 	and.w	r5, r1, #15
 800f646:	bf48      	it	mi
 800f648:	4315      	orrmi	r5, r2
 800f64a:	fa23 f204 	lsr.w	r2, r3, r4
 800f64e:	07d6      	lsls	r6, r2, #31
 800f650:	d510      	bpl.n	800f674 <gpio_init+0x44>
 800f652:	00a2      	lsls	r2, r4, #2
 800f654:	6806      	ldr	r6, [r0, #0]
 800f656:	fa0c fe02 	lsl.w	lr, ip, r2
 800f65a:	ea26 060e 	bic.w	r6, r6, lr
 800f65e:	fa05 f202 	lsl.w	r2, r5, r2
 800f662:	2928      	cmp	r1, #40	; 0x28
 800f664:	ea42 0206 	orr.w	r2, r2, r6
 800f668:	d128      	bne.n	800f6bc <gpio_init+0x8c>
 800f66a:	fa07 f604 	lsl.w	r6, r7, r4
 800f66e:	401e      	ands	r6, r3
 800f670:	6146      	str	r6, [r0, #20]
 800f672:	6002      	str	r2, [r0, #0]
 800f674:	3401      	adds	r4, #1
 800f676:	2c08      	cmp	r4, #8
 800f678:	d1e7      	bne.n	800f64a <gpio_init+0x1a>
 800f67a:	2600      	movs	r6, #0
 800f67c:	f04f 0c0f 	mov.w	ip, #15
 800f680:	2701      	movs	r7, #1
 800f682:	f106 0208 	add.w	r2, r6, #8
 800f686:	fa23 f402 	lsr.w	r4, r3, r2
 800f68a:	07e4      	lsls	r4, r4, #31
 800f68c:	d511      	bpl.n	800f6b2 <gpio_init+0x82>
 800f68e:	00b4      	lsls	r4, r6, #2
 800f690:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800f694:	fa0c f804 	lsl.w	r8, ip, r4
 800f698:	ea2e 0e08 	bic.w	lr, lr, r8
 800f69c:	fa05 f404 	lsl.w	r4, r5, r4
 800f6a0:	2928      	cmp	r1, #40	; 0x28
 800f6a2:	ea44 040e 	orr.w	r4, r4, lr
 800f6a6:	d110      	bne.n	800f6ca <gpio_init+0x9a>
 800f6a8:	fa07 f202 	lsl.w	r2, r7, r2
 800f6ac:	401a      	ands	r2, r3
 800f6ae:	6142      	str	r2, [r0, #20]
 800f6b0:	6044      	str	r4, [r0, #4]
 800f6b2:	3601      	adds	r6, #1
 800f6b4:	2e08      	cmp	r6, #8
 800f6b6:	d1e4      	bne.n	800f682 <gpio_init+0x52>
 800f6b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6bc:	2948      	cmp	r1, #72	; 0x48
 800f6be:	bf02      	ittt	eq
 800f6c0:	fa07 f604 	lsleq.w	r6, r7, r4
 800f6c4:	401e      	andeq	r6, r3
 800f6c6:	6106      	streq	r6, [r0, #16]
 800f6c8:	e7d3      	b.n	800f672 <gpio_init+0x42>
 800f6ca:	2948      	cmp	r1, #72	; 0x48
 800f6cc:	bf02      	ittt	eq
 800f6ce:	fa07 f202 	lsleq.w	r2, r7, r2
 800f6d2:	401a      	andeq	r2, r3
 800f6d4:	6102      	streq	r2, [r0, #16]
 800f6d6:	e7eb      	b.n	800f6b0 <gpio_init+0x80>

0800f6d8 <gpio_pin_remap_config>:
 800f6d8:	2800      	cmp	r0, #0
 800f6da:	4a16      	ldr	r2, [pc, #88]	; (800f734 <gpio_pin_remap_config+0x5c>)
 800f6dc:	b530      	push	{r4, r5, lr}
 800f6de:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 800f6e2:	bfb4      	ite	lt
 800f6e4:	69d3      	ldrlt	r3, [r2, #28]
 800f6e6:	6853      	ldrge	r3, [r2, #4]
 800f6e8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 800f6ec:	b284      	uxth	r4, r0
 800f6ee:	d110      	bne.n	800f712 <gpio_pin_remap_config+0x3a>
 800f6f0:	6855      	ldr	r5, [r2, #4]
 800f6f2:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f6f6:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 800f6fa:	6055      	str	r5, [r2, #4]
 800f6fc:	b119      	cbz	r1, 800f706 <gpio_pin_remap_config+0x2e>
 800f6fe:	0d42      	lsrs	r2, r0, #21
 800f700:	0112      	lsls	r2, r2, #4
 800f702:	4094      	lsls	r4, r2
 800f704:	4323      	orrs	r3, r4
 800f706:	4a0b      	ldr	r2, [pc, #44]	; (800f734 <gpio_pin_remap_config+0x5c>)
 800f708:	2800      	cmp	r0, #0
 800f70a:	bfb4      	ite	lt
 800f70c:	61d3      	strlt	r3, [r2, #28]
 800f70e:	6053      	strge	r3, [r2, #4]
 800f710:	bd30      	pop	{r4, r5, pc}
 800f712:	02c2      	lsls	r2, r0, #11
 800f714:	bf4d      	iteet	mi
 800f716:	2203      	movmi	r2, #3
 800f718:	0d42      	lsrpl	r2, r0, #21
 800f71a:	0112      	lslpl	r2, r2, #4
 800f71c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 800f720:	bf4c      	ite	mi
 800f722:	40aa      	lslmi	r2, r5
 800f724:	fa04 f202 	lslpl.w	r2, r4, r2
 800f728:	ea23 0302 	bic.w	r3, r3, r2
 800f72c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 800f730:	e7e4      	b.n	800f6fc <gpio_pin_remap_config+0x24>
 800f732:	bf00      	nop
 800f734:	40010000 	andmi	r0, r1, r0

0800f738 <gpio_ethernet_phy_select>:
 800f738:	4b04      	ldr	r3, [pc, #16]	; (800f74c <gpio_ethernet_phy_select+0x14>)
 800f73a:	6859      	ldr	r1, [r3, #4]
 800f73c:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 800f740:	6059      	str	r1, [r3, #4]
 800f742:	685a      	ldr	r2, [r3, #4]
 800f744:	4302      	orrs	r2, r0
 800f746:	605a      	str	r2, [r3, #4]
 800f748:	4770      	bx	lr
 800f74a:	bf00      	nop
 800f74c:	40010000 	andmi	r0, r1, r0

0800f750 <pmu_backup_write_enable>:
 800f750:	4a02      	ldr	r2, [pc, #8]	; (800f75c <pmu_backup_write_enable+0xc>)
 800f752:	6813      	ldr	r3, [r2, #0]
 800f754:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f758:	6013      	str	r3, [r2, #0]
 800f75a:	4770      	bx	lr
 800f75c:	40007000 	andmi	r7, r0, r0

0800f760 <rcu_periph_clock_enable>:
 800f760:	2201      	movs	r2, #1
 800f762:	0983      	lsrs	r3, r0, #6
 800f764:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f768:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f76c:	6819      	ldr	r1, [r3, #0]
 800f76e:	f000 001f 	and.w	r0, r0, #31
 800f772:	fa02 f000 	lsl.w	r0, r2, r0
 800f776:	4308      	orrs	r0, r1
 800f778:	6018      	str	r0, [r3, #0]
 800f77a:	4770      	bx	lr

0800f77c <rcu_periph_clock_disable>:
 800f77c:	2101      	movs	r1, #1
 800f77e:	0983      	lsrs	r3, r0, #6
 800f780:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f784:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f788:	681a      	ldr	r2, [r3, #0]
 800f78a:	f000 001f 	and.w	r0, r0, #31
 800f78e:	fa01 f000 	lsl.w	r0, r1, r0
 800f792:	ea22 0000 	bic.w	r0, r2, r0
 800f796:	6018      	str	r0, [r3, #0]
 800f798:	4770      	bx	lr

0800f79a <rcu_periph_reset_enable>:
 800f79a:	f7ff bfe1 	b.w	800f760 <rcu_periph_clock_enable>

0800f79e <rcu_periph_reset_disable>:
 800f79e:	f7ff bfed 	b.w	800f77c <rcu_periph_clock_disable>
	...

0800f7a4 <rcu_bkp_reset_enable>:
 800f7a4:	4a02      	ldr	r2, [pc, #8]	; (800f7b0 <rcu_bkp_reset_enable+0xc>)
 800f7a6:	6a13      	ldr	r3, [r2, #32]
 800f7a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800f7ac:	6213      	str	r3, [r2, #32]
 800f7ae:	4770      	bx	lr
 800f7b0:	40021000 	andmi	r1, r2, r0

0800f7b4 <rcu_bkp_reset_disable>:
 800f7b4:	4a02      	ldr	r2, [pc, #8]	; (800f7c0 <rcu_bkp_reset_disable+0xc>)
 800f7b6:	6a13      	ldr	r3, [r2, #32]
 800f7b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800f7bc:	6213      	str	r3, [r2, #32]
 800f7be:	4770      	bx	lr
 800f7c0:	40021000 	andmi	r1, r2, r0

0800f7c4 <rcu_ckout0_config>:
 800f7c4:	4a03      	ldr	r2, [pc, #12]	; (800f7d4 <rcu_ckout0_config+0x10>)
 800f7c6:	6853      	ldr	r3, [r2, #4]
 800f7c8:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 800f7cc:	4303      	orrs	r3, r0
 800f7ce:	6053      	str	r3, [r2, #4]
 800f7d0:	4770      	bx	lr
 800f7d2:	bf00      	nop
 800f7d4:	40021000 	andmi	r1, r2, r0

0800f7d8 <rcu_pll2_config>:
 800f7d8:	4b04      	ldr	r3, [pc, #16]	; (800f7ec <rcu_pll2_config+0x14>)
 800f7da:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800f7dc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 800f7e0:	62d9      	str	r1, [r3, #44]	; 0x2c
 800f7e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f7e4:	4302      	orrs	r2, r0
 800f7e6:	62da      	str	r2, [r3, #44]	; 0x2c
 800f7e8:	4770      	bx	lr
 800f7ea:	bf00      	nop
 800f7ec:	40021000 	andmi	r1, r2, r0

0800f7f0 <rcu_adc_clock_config>:
 800f7f0:	490c      	ldr	r1, [pc, #48]	; (800f824 <rcu_adc_clock_config+0x34>)
 800f7f2:	2805      	cmp	r0, #5
 800f7f4:	684b      	ldr	r3, [r1, #4]
 800f7f6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f7fa:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800f7fe:	d006      	beq.n	800f80e <rcu_adc_clock_config+0x1e>
 800f800:	d803      	bhi.n	800f80a <rcu_adc_clock_config+0x1a>
 800f802:	2804      	cmp	r0, #4
 800f804:	d10a      	bne.n	800f81c <rcu_adc_clock_config+0x2c>
 800f806:	604b      	str	r3, [r1, #4]
 800f808:	4770      	bx	lr
 800f80a:	2807      	cmp	r0, #7
 800f80c:	d1fb      	bne.n	800f806 <rcu_adc_clock_config+0x16>
 800f80e:	4a06      	ldr	r2, [pc, #24]	; (800f828 <rcu_adc_clock_config+0x38>)
 800f810:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 800f814:	4303      	orrs	r3, r0
 800f816:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800f81a:	e7f4      	b.n	800f806 <rcu_adc_clock_config+0x16>
 800f81c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 800f820:	e7f1      	b.n	800f806 <rcu_adc_clock_config+0x16>
 800f822:	bf00      	nop
 800f824:	40021000 	andmi	r1, r2, r0
 800f828:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0800f82c <rcu_flag_get>:
 800f82c:	0983      	lsrs	r3, r0, #6
 800f82e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800f832:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800f836:	681b      	ldr	r3, [r3, #0]
 800f838:	f000 001f 	and.w	r0, r0, #31
 800f83c:	fa23 f000 	lsr.w	r0, r3, r0
 800f840:	f000 0001 	and.w	r0, r0, #1
 800f844:	4770      	bx	lr
	...

0800f848 <rcu_osci_stab_wait>:
 800f848:	281a      	cmp	r0, #26
 800f84a:	b508      	push	{r3, lr}
 800f84c:	d051      	beq.n	800f8f2 <rcu_osci_stab_wait+0xaa>
 800f84e:	d806      	bhi.n	800f85e <rcu_osci_stab_wait+0x16>
 800f850:	2810      	cmp	r0, #16
 800f852:	d015      	beq.n	800f880 <rcu_osci_stab_wait+0x38>
 800f854:	2818      	cmp	r0, #24
 800f856:	d043      	beq.n	800f8e0 <rcu_osci_stab_wait+0x98>
 800f858:	b368      	cbz	r0, 800f8b6 <rcu_osci_stab_wait+0x6e>
 800f85a:	2000      	movs	r0, #0
 800f85c:	bd08      	pop	{r3, pc}
 800f85e:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800f862:	d01c      	beq.n	800f89e <rcu_osci_stab_wait+0x56>
 800f864:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 800f868:	d02f      	beq.n	800f8ca <rcu_osci_stab_wait+0x82>
 800f86a:	281c      	cmp	r0, #28
 800f86c:	d1f5      	bne.n	800f85a <rcu_osci_stab_wait+0x12>
 800f86e:	4a25      	ldr	r2, [pc, #148]	; (800f904 <rcu_osci_stab_wait+0xbc>)
 800f870:	201d      	movs	r0, #29
 800f872:	f7ff ffdb 	bl	800f82c <rcu_flag_get>
 800f876:	b908      	cbnz	r0, 800f87c <rcu_osci_stab_wait+0x34>
 800f878:	3a01      	subs	r2, #1
 800f87a:	d1f9      	bne.n	800f870 <rcu_osci_stab_wait+0x28>
 800f87c:	201d      	movs	r0, #29
 800f87e:	e008      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f880:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f884:	2011      	movs	r0, #17
 800f886:	f7ff ffd1 	bl	800f82c <rcu_flag_get>
 800f88a:	b908      	cbnz	r0, 800f890 <rcu_osci_stab_wait+0x48>
 800f88c:	3a01      	subs	r2, #1
 800f88e:	d1f9      	bne.n	800f884 <rcu_osci_stab_wait+0x3c>
 800f890:	2011      	movs	r0, #17
 800f892:	f7ff ffcb 	bl	800f82c <rcu_flag_get>
 800f896:	3800      	subs	r0, #0
 800f898:	bf18      	it	ne
 800f89a:	2001      	movne	r0, #1
 800f89c:	e7de      	b.n	800f85c <rcu_osci_stab_wait+0x14>
 800f89e:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 800f8a2:	f640 0001 	movw	r0, #2049	; 0x801
 800f8a6:	f7ff ffc1 	bl	800f82c <rcu_flag_get>
 800f8aa:	b908      	cbnz	r0, 800f8b0 <rcu_osci_stab_wait+0x68>
 800f8ac:	3a01      	subs	r2, #1
 800f8ae:	d1f8      	bne.n	800f8a2 <rcu_osci_stab_wait+0x5a>
 800f8b0:	f640 0001 	movw	r0, #2049	; 0x801
 800f8b4:	e7ed      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f8b6:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 800f8ba:	2001      	movs	r0, #1
 800f8bc:	f7ff ffb6 	bl	800f82c <rcu_flag_get>
 800f8c0:	b908      	cbnz	r0, 800f8c6 <rcu_osci_stab_wait+0x7e>
 800f8c2:	3a01      	subs	r2, #1
 800f8c4:	d1f9      	bne.n	800f8ba <rcu_osci_stab_wait+0x72>
 800f8c6:	2001      	movs	r0, #1
 800f8c8:	e7e3      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f8ca:	4a0e      	ldr	r2, [pc, #56]	; (800f904 <rcu_osci_stab_wait+0xbc>)
 800f8cc:	f640 1001 	movw	r0, #2305	; 0x901
 800f8d0:	f7ff ffac 	bl	800f82c <rcu_flag_get>
 800f8d4:	b908      	cbnz	r0, 800f8da <rcu_osci_stab_wait+0x92>
 800f8d6:	3a01      	subs	r2, #1
 800f8d8:	d1f8      	bne.n	800f8cc <rcu_osci_stab_wait+0x84>
 800f8da:	f640 1001 	movw	r0, #2305	; 0x901
 800f8de:	e7d8      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f8e0:	4a08      	ldr	r2, [pc, #32]	; (800f904 <rcu_osci_stab_wait+0xbc>)
 800f8e2:	2019      	movs	r0, #25
 800f8e4:	f7ff ffa2 	bl	800f82c <rcu_flag_get>
 800f8e8:	b908      	cbnz	r0, 800f8ee <rcu_osci_stab_wait+0xa6>
 800f8ea:	3a01      	subs	r2, #1
 800f8ec:	d1f9      	bne.n	800f8e2 <rcu_osci_stab_wait+0x9a>
 800f8ee:	2019      	movs	r0, #25
 800f8f0:	e7cf      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f8f2:	4a04      	ldr	r2, [pc, #16]	; (800f904 <rcu_osci_stab_wait+0xbc>)
 800f8f4:	201b      	movs	r0, #27
 800f8f6:	f7ff ff99 	bl	800f82c <rcu_flag_get>
 800f8fa:	b908      	cbnz	r0, 800f900 <rcu_osci_stab_wait+0xb8>
 800f8fc:	3a01      	subs	r2, #1
 800f8fe:	d1f9      	bne.n	800f8f4 <rcu_osci_stab_wait+0xac>
 800f900:	201b      	movs	r0, #27
 800f902:	e7c6      	b.n	800f892 <rcu_osci_stab_wait+0x4a>
 800f904:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0800f908 <rcu_osci_on>:
 800f908:	f7ff bf2a 	b.w	800f760 <rcu_periph_clock_enable>

0800f90c <rcu_clock_freq_get>:
 800f90c:	4b3d      	ldr	r3, [pc, #244]	; (800fa04 <rcu_clock_freq_get+0xf8>)
 800f90e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f910:	4604      	mov	r4, r0
 800f912:	461f      	mov	r7, r3
 800f914:	b089      	sub	sp, #36	; 0x24
 800f916:	ad04      	add	r5, sp, #16
 800f918:	f103 0610 	add.w	r6, r3, #16
 800f91c:	462a      	mov	r2, r5
 800f91e:	6818      	ldr	r0, [r3, #0]
 800f920:	6859      	ldr	r1, [r3, #4]
 800f922:	3308      	adds	r3, #8
 800f924:	c203      	stmia	r2!, {r0, r1}
 800f926:	42b3      	cmp	r3, r6
 800f928:	4615      	mov	r5, r2
 800f92a:	d1f7      	bne.n	800f91c <rcu_clock_freq_get+0x10>
 800f92c:	466b      	mov	r3, sp
 800f92e:	6938      	ldr	r0, [r7, #16]
 800f930:	6871      	ldr	r1, [r6, #4]
 800f932:	4a35      	ldr	r2, [pc, #212]	; (800fa08 <rcu_clock_freq_get+0xfc>)
 800f934:	c303      	stmia	r3!, {r0, r1}
 800f936:	c303      	stmia	r3!, {r0, r1}
 800f938:	6853      	ldr	r3, [r2, #4]
 800f93a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f93e:	2b01      	cmp	r3, #1
 800f940:	d053      	beq.n	800f9ea <rcu_clock_freq_get+0xde>
 800f942:	2b02      	cmp	r3, #2
 800f944:	d153      	bne.n	800f9ee <rcu_clock_freq_get+0xe2>
 800f946:	6853      	ldr	r3, [r2, #4]
 800f948:	03dd      	lsls	r5, r3, #15
 800f94a:	d523      	bpl.n	800f994 <rcu_clock_freq_get+0x88>
 800f94c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800f94e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800f952:	4b2e      	ldr	r3, [pc, #184]	; (800fa0c <rcu_clock_freq_get+0x100>)
 800f954:	d00e      	beq.n	800f974 <rcu_clock_freq_get+0x68>
 800f956:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f958:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 800f95a:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f95e:	f3c0 2003 	ubfx	r0, r0, #8, #4
 800f962:	3101      	adds	r1, #1
 800f964:	280f      	cmp	r0, #15
 800f966:	f100 0502 	add.w	r5, r0, #2
 800f96a:	fbb3 f3f1 	udiv	r3, r3, r1
 800f96e:	bf08      	it	eq
 800f970:	2514      	moveq	r5, #20
 800f972:	436b      	muls	r3, r5
 800f974:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f976:	f001 010f 	and.w	r1, r1, #15
 800f97a:	3101      	adds	r1, #1
 800f97c:	fbb3 f3f1 	udiv	r3, r3, r1
 800f980:	6851      	ldr	r1, [r2, #4]
 800f982:	6850      	ldr	r0, [r2, #4]
 800f984:	f3c1 4183 	ubfx	r1, r1, #18, #4
 800f988:	0080      	lsls	r0, r0, #2
 800f98a:	d505      	bpl.n	800f998 <rcu_clock_freq_get+0x8c>
 800f98c:	f041 0110 	orr.w	r1, r1, #16
 800f990:	1c48      	adds	r0, r1, #1
 800f992:	e007      	b.n	800f9a4 <rcu_clock_freq_get+0x98>
 800f994:	4b1e      	ldr	r3, [pc, #120]	; (800fa10 <rcu_clock_freq_get+0x104>)
 800f996:	e7f3      	b.n	800f980 <rcu_clock_freq_get+0x74>
 800f998:	290f      	cmp	r1, #15
 800f99a:	d0f9      	beq.n	800f990 <rcu_clock_freq_get+0x84>
 800f99c:	290d      	cmp	r1, #13
 800f99e:	f101 0002 	add.w	r0, r1, #2
 800f9a2:	d01d      	beq.n	800f9e0 <rcu_clock_freq_get+0xd4>
 800f9a4:	4343      	muls	r3, r0
 800f9a6:	6851      	ldr	r1, [r2, #4]
 800f9a8:	f3c1 1103 	ubfx	r1, r1, #4, #4
 800f9ac:	3120      	adds	r1, #32
 800f9ae:	4469      	add	r1, sp
 800f9b0:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 800f9b4:	fa23 f001 	lsr.w	r0, r3, r1
 800f9b8:	6851      	ldr	r1, [r2, #4]
 800f9ba:	6852      	ldr	r2, [r2, #4]
 800f9bc:	f3c1 2102 	ubfx	r1, r1, #8, #3
 800f9c0:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800f9c4:	3120      	adds	r1, #32
 800f9c6:	3220      	adds	r2, #32
 800f9c8:	4469      	add	r1, sp
 800f9ca:	446a      	add	r2, sp
 800f9cc:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800f9d0:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 800f9d4:	2c03      	cmp	r4, #3
 800f9d6:	d813      	bhi.n	800fa00 <rcu_clock_freq_get+0xf4>
 800f9d8:	e8df f004 	tbb	[pc, r4]
 800f9dc:	100e0c0b 	andne	r0, lr, fp, lsl #24
 800f9e0:	2006      	movs	r0, #6
 800f9e2:	0859      	lsrs	r1, r3, #1
 800f9e4:	fb00 1303 	mla	r3, r0, r3, r1
 800f9e8:	e7dd      	b.n	800f9a6 <rcu_clock_freq_get+0x9a>
 800f9ea:	4b08      	ldr	r3, [pc, #32]	; (800fa0c <rcu_clock_freq_get+0x100>)
 800f9ec:	e7db      	b.n	800f9a6 <rcu_clock_freq_get+0x9a>
 800f9ee:	4b09      	ldr	r3, [pc, #36]	; (800fa14 <rcu_clock_freq_get+0x108>)
 800f9f0:	e7d9      	b.n	800f9a6 <rcu_clock_freq_get+0x9a>
 800f9f2:	4618      	mov	r0, r3
 800f9f4:	b009      	add	sp, #36	; 0x24
 800f9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9f8:	40c8      	lsrs	r0, r1
 800f9fa:	e7fb      	b.n	800f9f4 <rcu_clock_freq_get+0xe8>
 800f9fc:	40d0      	lsrs	r0, r2
 800f9fe:	e7f9      	b.n	800f9f4 <rcu_clock_freq_get+0xe8>
 800fa00:	2000      	movs	r0, #0
 800fa02:	e7f7      	b.n	800f9f4 <rcu_clock_freq_get+0xe8>
 800fa04:	08010f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp}
 800fa08:	40021000 	andmi	r1, r2, r0
 800fa0c:	017d7840 	cmneq	sp, r0, asr #16
 800fa10:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800fa14:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0800fa18 <timer_deinit>:
 800fa18:	b508      	push	{r3, lr}
 800fa1a:	4b2d      	ldr	r3, [pc, #180]	; (800fad0 <timer_deinit+0xb8>)
 800fa1c:	4298      	cmp	r0, r3
 800fa1e:	d048      	beq.n	800fab2 <timer_deinit+0x9a>
 800fa20:	d816      	bhi.n	800fa50 <timer_deinit+0x38>
 800fa22:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fa26:	4298      	cmp	r0, r3
 800fa28:	d03c      	beq.n	800faa4 <timer_deinit+0x8c>
 800fa2a:	d807      	bhi.n	800fa3c <timer_deinit+0x24>
 800fa2c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800fa30:	d02a      	beq.n	800fa88 <timer_deinit+0x70>
 800fa32:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800fa36:	4298      	cmp	r0, r3
 800fa38:	d02d      	beq.n	800fa96 <timer_deinit+0x7e>
 800fa3a:	bd08      	pop	{r3, pc}
 800fa3c:	4b25      	ldr	r3, [pc, #148]	; (800fad4 <timer_deinit+0xbc>)
 800fa3e:	4298      	cmp	r0, r3
 800fa40:	d1fb      	bne.n	800fa3a <timer_deinit+0x22>
 800fa42:	f240 4003 	movw	r0, #1027	; 0x403
 800fa46:	f7ff fea8 	bl	800f79a <rcu_periph_reset_enable>
 800fa4a:	f240 4003 	movw	r0, #1027	; 0x403
 800fa4e:	e017      	b.n	800fa80 <timer_deinit+0x68>
 800fa50:	4b21      	ldr	r3, [pc, #132]	; (800fad8 <timer_deinit+0xc0>)
 800fa52:	4298      	cmp	r0, r3
 800fa54:	d00e      	beq.n	800fa74 <timer_deinit+0x5c>
 800fa56:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800fa5a:	4298      	cmp	r0, r3
 800fa5c:	d030      	beq.n	800fac0 <timer_deinit+0xa8>
 800fa5e:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 800fa62:	4298      	cmp	r0, r3
 800fa64:	d1e9      	bne.n	800fa3a <timer_deinit+0x22>
 800fa66:	f240 4005 	movw	r0, #1029	; 0x405
 800fa6a:	f7ff fe96 	bl	800f79a <rcu_periph_reset_enable>
 800fa6e:	f240 4005 	movw	r0, #1029	; 0x405
 800fa72:	e005      	b.n	800fa80 <timer_deinit+0x68>
 800fa74:	f240 300b 	movw	r0, #779	; 0x30b
 800fa78:	f7ff fe8f 	bl	800f79a <rcu_periph_reset_enable>
 800fa7c:	f240 300b 	movw	r0, #779	; 0x30b
 800fa80:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fa84:	f7ff be8b 	b.w	800f79e <rcu_periph_reset_disable>
 800fa88:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800fa8c:	f7ff fe85 	bl	800f79a <rcu_periph_reset_enable>
 800fa90:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800fa94:	e7f4      	b.n	800fa80 <timer_deinit+0x68>
 800fa96:	f240 4001 	movw	r0, #1025	; 0x401
 800fa9a:	f7ff fe7e 	bl	800f79a <rcu_periph_reset_enable>
 800fa9e:	f240 4001 	movw	r0, #1025	; 0x401
 800faa2:	e7ed      	b.n	800fa80 <timer_deinit+0x68>
 800faa4:	f240 4002 	movw	r0, #1026	; 0x402
 800faa8:	f7ff fe77 	bl	800f79a <rcu_periph_reset_enable>
 800faac:	f240 4002 	movw	r0, #1026	; 0x402
 800fab0:	e7e6      	b.n	800fa80 <timer_deinit+0x68>
 800fab2:	f240 4004 	movw	r0, #1028	; 0x404
 800fab6:	f7ff fe70 	bl	800f79a <rcu_periph_reset_enable>
 800faba:	f240 4004 	movw	r0, #1028	; 0x404
 800fabe:	e7df      	b.n	800fa80 <timer_deinit+0x68>
 800fac0:	f240 300d 	movw	r0, #781	; 0x30d
 800fac4:	f7ff fe69 	bl	800f79a <rcu_periph_reset_enable>
 800fac8:	f240 300d 	movw	r0, #781	; 0x30d
 800facc:	e7d8      	b.n	800fa80 <timer_deinit+0x68>
 800face:	bf00      	nop
 800fad0:	40001000 	andmi	r1, r0, r0
 800fad4:	40000c00 	andmi	r0, r0, r0, lsl #24
 800fad8:	40012c00 	andmi	r2, r1, r0, lsl #24

0800fadc <timer_init>:
 800fadc:	880b      	ldrh	r3, [r1, #0]
 800fade:	6283      	str	r3, [r0, #40]	; 0x28
 800fae0:	4b26      	ldr	r3, [pc, #152]	; (800fb7c <timer_init+0xa0>)
 800fae2:	4298      	cmp	r0, r3
 800fae4:	d018      	beq.n	800fb18 <timer_init+0x3c>
 800fae6:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 800faea:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800faee:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 800faf2:	d011      	beq.n	800fb18 <timer_init+0x3c>
 800faf4:	4a22      	ldr	r2, [pc, #136]	; (800fb80 <timer_init+0xa4>)
 800faf6:	4290      	cmp	r0, r2
 800faf8:	d00e      	beq.n	800fb18 <timer_init+0x3c>
 800fafa:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 800fafe:	4290      	cmp	r0, r2
 800fb00:	d00a      	beq.n	800fb18 <timer_init+0x3c>
 800fb02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fb06:	4293      	cmp	r3, r2
 800fb08:	d006      	beq.n	800fb18 <timer_init+0x3c>
 800fb0a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 800fb0e:	4293      	cmp	r3, r2
 800fb10:	d002      	beq.n	800fb18 <timer_init+0x3c>
 800fb12:	4b1c      	ldr	r3, [pc, #112]	; (800fb84 <timer_init+0xa8>)
 800fb14:	4298      	cmp	r0, r3
 800fb16:	d10f      	bne.n	800fb38 <timer_init+0x5c>
 800fb18:	6803      	ldr	r3, [r0, #0]
 800fb1a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fb1e:	6003      	str	r3, [r0, #0]
 800fb20:	884b      	ldrh	r3, [r1, #2]
 800fb22:	6802      	ldr	r2, [r0, #0]
 800fb24:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fb28:	4313      	orrs	r3, r2
 800fb2a:	6003      	str	r3, [r0, #0]
 800fb2c:	888b      	ldrh	r3, [r1, #4]
 800fb2e:	6802      	ldr	r2, [r0, #0]
 800fb30:	f003 0310 	and.w	r3, r3, #16
 800fb34:	4313      	orrs	r3, r2
 800fb36:	6003      	str	r3, [r0, #0]
 800fb38:	688b      	ldr	r3, [r1, #8]
 800fb3a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800fb3c:	4b12      	ldr	r3, [pc, #72]	; (800fb88 <timer_init+0xac>)
 800fb3e:	4298      	cmp	r0, r3
 800fb40:	d003      	beq.n	800fb4a <timer_init+0x6e>
 800fb42:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fb46:	4298      	cmp	r0, r3
 800fb48:	d104      	bne.n	800fb54 <timer_init+0x78>
 800fb4a:	6943      	ldr	r3, [r0, #20]
 800fb4c:	f043 0301 	orr.w	r3, r3, #1
 800fb50:	6143      	str	r3, [r0, #20]
 800fb52:	4770      	bx	lr
 800fb54:	6803      	ldr	r3, [r0, #0]
 800fb56:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800fb5a:	6003      	str	r3, [r0, #0]
 800fb5c:	898b      	ldrh	r3, [r1, #12]
 800fb5e:	6802      	ldr	r2, [r0, #0]
 800fb60:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800fb64:	4313      	orrs	r3, r2
 800fb66:	6003      	str	r3, [r0, #0]
 800fb68:	4b04      	ldr	r3, [pc, #16]	; (800fb7c <timer_init+0xa0>)
 800fb6a:	4298      	cmp	r0, r3
 800fb6c:	d002      	beq.n	800fb74 <timer_init+0x98>
 800fb6e:	4b04      	ldr	r3, [pc, #16]	; (800fb80 <timer_init+0xa4>)
 800fb70:	4298      	cmp	r0, r3
 800fb72:	d1ea      	bne.n	800fb4a <timer_init+0x6e>
 800fb74:	7b8b      	ldrb	r3, [r1, #14]
 800fb76:	6303      	str	r3, [r0, #48]	; 0x30
 800fb78:	e7e7      	b.n	800fb4a <timer_init+0x6e>
 800fb7a:	bf00      	nop
 800fb7c:	40012c00 	andmi	r2, r1, r0, lsl #24
 800fb80:	40013400 	andmi	r3, r1, r0, lsl #8
 800fb84:	40002000 	andmi	r2, r0, r0
 800fb88:	40001000 	andmi	r1, r0, r0

0800fb8c <timer_enable>:
 800fb8c:	6803      	ldr	r3, [r0, #0]
 800fb8e:	f043 0301 	orr.w	r3, r3, #1
 800fb92:	6003      	str	r3, [r0, #0]
 800fb94:	4770      	bx	lr

0800fb96 <timer_channel_output_mode_config>:
 800fb96:	2903      	cmp	r1, #3
 800fb98:	d81a      	bhi.n	800fbd0 <timer_channel_output_mode_config+0x3a>
 800fb9a:	e8df f001 	tbb	[pc, r1]
 800fb9e:	1a120a02 	bne	84923ae <__exidx_end+0x47f90e>
 800fba2:	6983      	ldr	r3, [r0, #24]
 800fba4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fba8:	6183      	str	r3, [r0, #24]
 800fbaa:	6983      	ldr	r3, [r0, #24]
 800fbac:	431a      	orrs	r2, r3
 800fbae:	6182      	str	r2, [r0, #24]
 800fbb0:	4770      	bx	lr
 800fbb2:	6983      	ldr	r3, [r0, #24]
 800fbb4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fbb8:	6183      	str	r3, [r0, #24]
 800fbba:	6983      	ldr	r3, [r0, #24]
 800fbbc:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 800fbc0:	e7f5      	b.n	800fbae <timer_channel_output_mode_config+0x18>
 800fbc2:	69c3      	ldr	r3, [r0, #28]
 800fbc4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800fbc8:	61c3      	str	r3, [r0, #28]
 800fbca:	69c3      	ldr	r3, [r0, #28]
 800fbcc:	431a      	orrs	r2, r3
 800fbce:	61c2      	str	r2, [r0, #28]
 800fbd0:	4770      	bx	lr
 800fbd2:	69c3      	ldr	r3, [r0, #28]
 800fbd4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800fbd8:	61c3      	str	r3, [r0, #28]
 800fbda:	69c3      	ldr	r3, [r0, #28]
 800fbdc:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 800fbe0:	e7f5      	b.n	800fbce <timer_channel_output_mode_config+0x38>

0800fbe2 <timer_channel_output_pulse_value_config>:
 800fbe2:	2903      	cmp	r1, #3
 800fbe4:	d80a      	bhi.n	800fbfc <timer_channel_output_pulse_value_config+0x1a>
 800fbe6:	e8df f001 	tbb	[pc, r1]
 800fbea:	08060402 	stmdaeq	r6, {r1, sl}
 800fbee:	6342      	str	r2, [r0, #52]	; 0x34
 800fbf0:	4770      	bx	lr
 800fbf2:	6382      	str	r2, [r0, #56]	; 0x38
 800fbf4:	4770      	bx	lr
 800fbf6:	63c2      	str	r2, [r0, #60]	; 0x3c
 800fbf8:	4770      	bx	lr
 800fbfa:	6402      	str	r2, [r0, #64]	; 0x40
 800fbfc:	4770      	bx	lr

0800fbfe <timer_interrupt_enable>:
 800fbfe:	68c3      	ldr	r3, [r0, #12]
 800fc00:	430b      	orrs	r3, r1
 800fc02:	60c3      	str	r3, [r0, #12]
 800fc04:	4770      	bx	lr

0800fc06 <timer_interrupt_flag_clear>:
 800fc06:	43c9      	mvns	r1, r1
 800fc08:	6101      	str	r1, [r0, #16]
 800fc0a:	4770      	bx	lr

0800fc0c <timer_flag_clear>:
 800fc0c:	43c9      	mvns	r1, r1
 800fc0e:	6101      	str	r1, [r0, #16]
 800fc10:	4770      	bx	lr
	...

0800fc14 <usart_deinit>:
 800fc14:	b508      	push	{r3, lr}
 800fc16:	4b1d      	ldr	r3, [pc, #116]	; (800fc8c <usart_deinit+0x78>)
 800fc18:	4298      	cmp	r0, r3
 800fc1a:	d028      	beq.n	800fc6e <usart_deinit+0x5a>
 800fc1c:	d808      	bhi.n	800fc30 <usart_deinit+0x1c>
 800fc1e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fc22:	4298      	cmp	r0, r3
 800fc24:	d015      	beq.n	800fc52 <usart_deinit+0x3e>
 800fc26:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fc2a:	4298      	cmp	r0, r3
 800fc2c:	d018      	beq.n	800fc60 <usart_deinit+0x4c>
 800fc2e:	bd08      	pop	{r3, pc}
 800fc30:	4b17      	ldr	r3, [pc, #92]	; (800fc90 <usart_deinit+0x7c>)
 800fc32:	4298      	cmp	r0, r3
 800fc34:	d022      	beq.n	800fc7c <usart_deinit+0x68>
 800fc36:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fc3a:	4298      	cmp	r0, r3
 800fc3c:	d1f7      	bne.n	800fc2e <usart_deinit+0x1a>
 800fc3e:	f240 300e 	movw	r0, #782	; 0x30e
 800fc42:	f7ff fdaa 	bl	800f79a <rcu_periph_reset_enable>
 800fc46:	f240 300e 	movw	r0, #782	; 0x30e
 800fc4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fc4e:	f7ff bda6 	b.w	800f79e <rcu_periph_reset_disable>
 800fc52:	f240 4011 	movw	r0, #1041	; 0x411
 800fc56:	f7ff fda0 	bl	800f79a <rcu_periph_reset_enable>
 800fc5a:	f240 4011 	movw	r0, #1041	; 0x411
 800fc5e:	e7f4      	b.n	800fc4a <usart_deinit+0x36>
 800fc60:	f240 4012 	movw	r0, #1042	; 0x412
 800fc64:	f7ff fd99 	bl	800f79a <rcu_periph_reset_enable>
 800fc68:	f240 4012 	movw	r0, #1042	; 0x412
 800fc6c:	e7ed      	b.n	800fc4a <usart_deinit+0x36>
 800fc6e:	f240 4013 	movw	r0, #1043	; 0x413
 800fc72:	f7ff fd92 	bl	800f79a <rcu_periph_reset_enable>
 800fc76:	f240 4013 	movw	r0, #1043	; 0x413
 800fc7a:	e7e6      	b.n	800fc4a <usart_deinit+0x36>
 800fc7c:	f240 4014 	movw	r0, #1044	; 0x414
 800fc80:	f7ff fd8b 	bl	800f79a <rcu_periph_reset_enable>
 800fc84:	f240 4014 	movw	r0, #1044	; 0x414
 800fc88:	e7df      	b.n	800fc4a <usart_deinit+0x36>
 800fc8a:	bf00      	nop
 800fc8c:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fc90:	40005000 	andmi	r5, r0, r0

0800fc94 <usart_baudrate_set>:
 800fc94:	b538      	push	{r3, r4, r5, lr}
 800fc96:	4b11      	ldr	r3, [pc, #68]	; (800fcdc <usart_baudrate_set+0x48>)
 800fc98:	4604      	mov	r4, r0
 800fc9a:	4298      	cmp	r0, r3
 800fc9c:	460d      	mov	r5, r1
 800fc9e:	d01b      	beq.n	800fcd8 <usart_baudrate_set+0x44>
 800fca0:	d809      	bhi.n	800fcb6 <usart_baudrate_set+0x22>
 800fca2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fca6:	4298      	cmp	r0, r3
 800fca8:	d016      	beq.n	800fcd8 <usart_baudrate_set+0x44>
 800fcaa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800fcae:	4298      	cmp	r0, r3
 800fcb0:	d012      	beq.n	800fcd8 <usart_baudrate_set+0x44>
 800fcb2:	2000      	movs	r0, #0
 800fcb4:	e009      	b.n	800fcca <usart_baudrate_set+0x36>
 800fcb6:	4b0a      	ldr	r3, [pc, #40]	; (800fce0 <usart_baudrate_set+0x4c>)
 800fcb8:	4298      	cmp	r0, r3
 800fcba:	d00d      	beq.n	800fcd8 <usart_baudrate_set+0x44>
 800fcbc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800fcc0:	4298      	cmp	r0, r3
 800fcc2:	d1f6      	bne.n	800fcb2 <usart_baudrate_set+0x1e>
 800fcc4:	2003      	movs	r0, #3
 800fcc6:	f7ff fe21 	bl	800f90c <rcu_clock_freq_get>
 800fcca:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 800fcce:	fbb3 f1f5 	udiv	r1, r3, r5
 800fcd2:	b289      	uxth	r1, r1
 800fcd4:	60a1      	str	r1, [r4, #8]
 800fcd6:	bd38      	pop	{r3, r4, r5, pc}
 800fcd8:	2002      	movs	r0, #2
 800fcda:	e7f4      	b.n	800fcc6 <usart_baudrate_set+0x32>
 800fcdc:	40004c00 	andmi	r4, r0, r0, lsl #24
 800fce0:	40005000 	andmi	r5, r0, r0

0800fce4 <usart_parity_config>:
 800fce4:	68c2      	ldr	r2, [r0, #12]
 800fce6:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 800fcea:	60c2      	str	r2, [r0, #12]
 800fcec:	68c3      	ldr	r3, [r0, #12]
 800fcee:	430b      	orrs	r3, r1
 800fcf0:	60c3      	str	r3, [r0, #12]
 800fcf2:	4770      	bx	lr

0800fcf4 <usart_word_length_set>:
 800fcf4:	68c2      	ldr	r2, [r0, #12]
 800fcf6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800fcfa:	60c2      	str	r2, [r0, #12]
 800fcfc:	68c3      	ldr	r3, [r0, #12]
 800fcfe:	430b      	orrs	r3, r1
 800fd00:	60c3      	str	r3, [r0, #12]
 800fd02:	4770      	bx	lr

0800fd04 <usart_stop_bit_set>:
 800fd04:	6902      	ldr	r2, [r0, #16]
 800fd06:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800fd0a:	6102      	str	r2, [r0, #16]
 800fd0c:	6903      	ldr	r3, [r0, #16]
 800fd0e:	430b      	orrs	r3, r1
 800fd10:	6103      	str	r3, [r0, #16]
 800fd12:	4770      	bx	lr

0800fd14 <usart_transmit_config>:
 800fd14:	68c3      	ldr	r3, [r0, #12]
 800fd16:	f023 0308 	bic.w	r3, r3, #8
 800fd1a:	430b      	orrs	r3, r1
 800fd1c:	60c3      	str	r3, [r0, #12]
 800fd1e:	4770      	bx	lr

0800fd20 <usart_receive_config>:
 800fd20:	68c3      	ldr	r3, [r0, #12]
 800fd22:	f023 0304 	bic.w	r3, r3, #4
 800fd26:	430b      	orrs	r3, r1
 800fd28:	60c3      	str	r3, [r0, #12]
 800fd2a:	4770      	bx	lr

0800fd2c <usart_hardware_flow_rts_config>:
 800fd2c:	6943      	ldr	r3, [r0, #20]
 800fd2e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800fd32:	430b      	orrs	r3, r1
 800fd34:	6143      	str	r3, [r0, #20]
 800fd36:	4770      	bx	lr

0800fd38 <usart_hardware_flow_cts_config>:
 800fd38:	6943      	ldr	r3, [r0, #20]
 800fd3a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800fd3e:	430b      	orrs	r3, r1
 800fd40:	6143      	str	r3, [r0, #20]
 800fd42:	4770      	bx	lr

0800fd44 <usart_dma_transmit_config>:
 800fd44:	6943      	ldr	r3, [r0, #20]
 800fd46:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fd4a:	430b      	orrs	r3, r1
 800fd4c:	6143      	str	r3, [r0, #20]
 800fd4e:	4770      	bx	lr

0800fd50 <usart_flag_get>:
 800fd50:	098b      	lsrs	r3, r1, #6
 800fd52:	5818      	ldr	r0, [r3, r0]
 800fd54:	f001 011f 	and.w	r1, r1, #31
 800fd58:	40c8      	lsrs	r0, r1
 800fd5a:	f000 0001 	and.w	r0, r0, #1
 800fd5e:	4770      	bx	lr

0800fd60 <usart_interrupt_enable>:
 800fd60:	2301      	movs	r3, #1
 800fd62:	b510      	push	{r4, lr}
 800fd64:	f3c1 1289 	ubfx	r2, r1, #6, #10
 800fd68:	5814      	ldr	r4, [r2, r0]
 800fd6a:	f001 011f 	and.w	r1, r1, #31
 800fd6e:	fa03 f101 	lsl.w	r1, r3, r1
 800fd72:	4321      	orrs	r1, r4
 800fd74:	5011      	str	r1, [r2, r0]
 800fd76:	bd10      	pop	{r4, pc}

0800fd78 <usart_interrupt_disable>:
 800fd78:	2201      	movs	r2, #1
 800fd7a:	b510      	push	{r4, lr}
 800fd7c:	f3c1 1489 	ubfx	r4, r1, #6, #10
 800fd80:	5823      	ldr	r3, [r4, r0]
 800fd82:	f001 011f 	and.w	r1, r1, #31
 800fd86:	fa02 f101 	lsl.w	r1, r2, r1
 800fd8a:	ea23 0101 	bic.w	r1, r3, r1
 800fd8e:	5021      	str	r1, [r4, r0]
 800fd90:	bd10      	pop	{r4, pc}

0800fd92 <usart_interrupt_flag_clear>:
 800fd92:	2201      	movs	r2, #1
 800fd94:	b510      	push	{r4, lr}
 800fd96:	0d8c      	lsrs	r4, r1, #22
 800fd98:	5823      	ldr	r3, [r4, r0]
 800fd9a:	f3c1 4104 	ubfx	r1, r1, #16, #5
 800fd9e:	fa02 f101 	lsl.w	r1, r2, r1
 800fda2:	ea23 0101 	bic.w	r1, r3, r1
 800fda6:	5021      	str	r1, [r4, r0]
 800fda8:	bd10      	pop	{r4, pc}
	...

0800fdac <emac_start>:
 800fdac:	b510      	push	{r4, lr}
 800fdae:	4604      	mov	r4, r0
 800fdb0:	f240 6002 	movw	r0, #1538	; 0x602
 800fdb4:	f7ff fcd4 	bl	800f760 <rcu_periph_clock_enable>
 800fdb8:	f240 6003 	movw	r0, #1539	; 0x603
 800fdbc:	f7ff fcd0 	bl	800f760 <rcu_periph_clock_enable>
 800fdc0:	f240 6004 	movw	r0, #1540	; 0x604
 800fdc4:	f7ff fccc 	bl	800f760 <rcu_periph_clock_enable>
 800fdc8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fdcc:	2203      	movs	r2, #3
 800fdce:	2118      	movs	r1, #24
 800fdd0:	4846      	ldr	r0, [pc, #280]	; (800feec <emac_start+0x140>)
 800fdd2:	f7ff fc2d 	bl	800f630 <gpio_init>
 800fdd6:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800fdda:	f7ff fcc1 	bl	800f760 <rcu_periph_clock_enable>
 800fdde:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800fde2:	f7ff fcf9 	bl	800f7d8 <rcu_pll2_config>
 800fde6:	201c      	movs	r0, #28
 800fde8:	f7ff fd8e 	bl	800f908 <rcu_osci_on>
 800fdec:	201c      	movs	r0, #28
 800fdee:	f7ff fd2b 	bl	800f848 <rcu_osci_stab_wait>
 800fdf2:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 800fdf6:	f7ff fce5 	bl	800f7c4 <rcu_ckout0_config>
 800fdfa:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 800fdfe:	f7ff fc9b 	bl	800f738 <gpio_ethernet_phy_select>
 800fe02:	2302      	movs	r3, #2
 800fe04:	2203      	movs	r2, #3
 800fe06:	2104      	movs	r1, #4
 800fe08:	4838      	ldr	r0, [pc, #224]	; (800feec <emac_start+0x140>)
 800fe0a:	f7ff fc11 	bl	800f630 <gpio_init>
 800fe0e:	2304      	movs	r3, #4
 800fe10:	2203      	movs	r2, #3
 800fe12:	2118      	movs	r1, #24
 800fe14:	4835      	ldr	r0, [pc, #212]	; (800feec <emac_start+0x140>)
 800fe16:	f7ff fc0b 	bl	800f630 <gpio_init>
 800fe1a:	2380      	movs	r3, #128	; 0x80
 800fe1c:	2203      	movs	r2, #3
 800fe1e:	2104      	movs	r1, #4
 800fe20:	4832      	ldr	r0, [pc, #200]	; (800feec <emac_start+0x140>)
 800fe22:	f7ff fc05 	bl	800f630 <gpio_init>
 800fe26:	2302      	movs	r3, #2
 800fe28:	2203      	movs	r2, #3
 800fe2a:	2118      	movs	r1, #24
 800fe2c:	4830      	ldr	r0, [pc, #192]	; (800fef0 <emac_start+0x144>)
 800fe2e:	f7ff fbff 	bl	800f630 <gpio_init>
 800fe32:	2310      	movs	r3, #16
 800fe34:	2203      	movs	r2, #3
 800fe36:	2104      	movs	r1, #4
 800fe38:	482d      	ldr	r0, [pc, #180]	; (800fef0 <emac_start+0x144>)
 800fe3a:	f7ff fbf9 	bl	800f630 <gpio_init>
 800fe3e:	2320      	movs	r3, #32
 800fe40:	2203      	movs	r2, #3
 800fe42:	2104      	movs	r1, #4
 800fe44:	482a      	ldr	r0, [pc, #168]	; (800fef0 <emac_start+0x144>)
 800fe46:	f7ff fbf3 	bl	800f630 <gpio_init>
 800fe4a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800fe4e:	2203      	movs	r2, #3
 800fe50:	2118      	movs	r1, #24
 800fe52:	4828      	ldr	r0, [pc, #160]	; (800fef4 <emac_start+0x148>)
 800fe54:	f7ff fbec 	bl	800f630 <gpio_init>
 800fe58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800fe5c:	2203      	movs	r2, #3
 800fe5e:	2118      	movs	r1, #24
 800fe60:	4824      	ldr	r0, [pc, #144]	; (800fef4 <emac_start+0x148>)
 800fe62:	f7ff fbe5 	bl	800f630 <gpio_init>
 800fe66:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800fe6a:	2203      	movs	r2, #3
 800fe6c:	2118      	movs	r1, #24
 800fe6e:	4821      	ldr	r0, [pc, #132]	; (800fef4 <emac_start+0x148>)
 800fe70:	f7ff fbde 	bl	800f630 <gpio_init>
 800fe74:	f240 500e 	movw	r0, #1294	; 0x50e
 800fe78:	f7ff fc72 	bl	800f760 <rcu_periph_clock_enable>
 800fe7c:	f240 500f 	movw	r0, #1295	; 0x50f
 800fe80:	f7ff fc6e 	bl	800f760 <rcu_periph_clock_enable>
 800fe84:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 800fe88:	f7ff fc6a 	bl	800f760 <rcu_periph_clock_enable>
 800fe8c:	f000 ffa8 	bl	8010de0 <enet_deinit>
 800fe90:	f000 fc02 	bl	8010698 <enet_software_reset>
 800fe94:	b900      	cbnz	r0, 800fe98 <emac_start+0xec>
 800fe96:	e7fe      	b.n	800fe96 <emac_start+0xea>
 800fe98:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800fe9c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800fea0:	2001      	movs	r0, #1
 800fea2:	f000 fd7d 	bl	80109a0 <enet_init>
 800fea6:	4b14      	ldr	r3, [pc, #80]	; (800fef8 <emac_start+0x14c>)
 800fea8:	6018      	str	r0, [r3, #0]
 800feaa:	681b      	ldr	r3, [r3, #0]
 800feac:	b903      	cbnz	r3, 800feb0 <emac_start+0x104>
 800feae:	e7fe      	b.n	800feae <emac_start+0x102>
 800feb0:	4620      	mov	r0, r4
 800feb2:	f000 fae9 	bl	8010488 <mac_address_get>
 800feb6:	4621      	mov	r1, r4
 800feb8:	2000      	movs	r0, #0
 800feba:	f000 fcd1 	bl	8010860 <enet_mac_address_set>
 800febe:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 800fec2:	f000 fbfd 	bl	80106c0 <enet_descriptors_chain_init>
 800fec6:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 800feca:	f000 fbf9 	bl	80106c0 <enet_descriptors_chain_init>
 800fece:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fed2:	480a      	ldr	r0, [pc, #40]	; (800fefc <emac_start+0x150>)
 800fed4:	f000 fcbe 	bl	8010854 <enet_transmit_checksum_config>
 800fed8:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 800fedc:	4808      	ldr	r0, [pc, #32]	; (800ff00 <emac_start+0x154>)
 800fede:	f000 fcb9 	bl	8010854 <enet_transmit_checksum_config>
 800fee2:	f000 fef5 	bl	8010cd0 <enet_enable>
 800fee6:	2001      	movs	r0, #1
 800fee8:	bd10      	pop	{r4, pc}
 800feea:	bf00      	nop
 800feec:	40010800 	andmi	r0, r1, r0, lsl #16
 800fef0:	40011000 	andmi	r1, r1, r0
 800fef4:	40010c00 	andmi	r0, r1, r0, lsl #24
 800fef8:	20009bc0 	andcs	r9, r0, r0, asr #23
 800fefc:	2000c00c 	andcs	ip, r0, ip
 800ff00:	2000c01c 	andcs	ip, r0, ip, lsl r0

0800ff04 <emac_eth_recv>:
 800ff04:	b538      	push	{r3, r4, r5, lr}
 800ff06:	4605      	mov	r5, r0
 800ff08:	f000 ff3a 	bl	8010d80 <enet_rxframe_size_get>
 800ff0c:	4604      	mov	r4, r0
 800ff0e:	b138      	cbz	r0, 800ff20 <emac_eth_recv+0x1c>
 800ff10:	4b05      	ldr	r3, [pc, #20]	; (800ff28 <emac_eth_recv+0x24>)
 800ff12:	2105      	movs	r1, #5
 800ff14:	6818      	ldr	r0, [r3, #0]
 800ff16:	f000 fee2 	bl	8010cde <enet_desc_information_get>
 800ff1a:	6028      	str	r0, [r5, #0]
 800ff1c:	4620      	mov	r0, r4
 800ff1e:	bd38      	pop	{r3, r4, r5, pc}
 800ff20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ff24:	e7fb      	b.n	800ff1e <emac_eth_recv+0x1a>
 800ff26:	bf00      	nop
 800ff28:	20009bd0 	ldrdcs	r9, [r0], -r0

0800ff2c <emac_free_pkt>:
 800ff2c:	2100      	movs	r1, #0
 800ff2e:	4608      	mov	r0, r1
 800ff30:	f000 bc0e 	b.w	8010750 <enet_frame_receive>

0800ff34 <emac_eth_send>:
 800ff34:	f000 bc4c 	b.w	80107d0 <enet_frame_transmit>

0800ff38 <gd32_adc_init()>:
 800ff38:	b510      	push	{r4, lr}
 800ff3a:	f240 6009 	movw	r0, #1545	; 0x609
 800ff3e:	4c21      	ldr	r4, [pc, #132]	; (800ffc4 <gd32_adc_init()+0x8c>)
 800ff40:	f7ff fc0e 	bl	800f760 <rcu_periph_clock_enable>
 800ff44:	2005      	movs	r0, #5
 800ff46:	f7ff fc53 	bl	800f7f0 <rcu_adc_clock_config>
 800ff4a:	4620      	mov	r0, r4
 800ff4c:	2201      	movs	r2, #1
 800ff4e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ff52:	f000 fabb 	bl	80104cc <adc_special_function_config>
 800ff56:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 800ff5a:	4620      	mov	r0, r4
 800ff5c:	2102      	movs	r1, #2
 800ff5e:	f000 fb55 	bl	801060c <adc_external_trigger_source_config>
 800ff62:	2100      	movs	r1, #0
 800ff64:	4620      	mov	r0, r4
 800ff66:	f000 fad9 	bl	801051c <adc_data_alignment_config>
 800ff6a:	2000      	movs	r0, #0
 800ff6c:	f000 fa9e 	bl	80104ac <adc_mode_config>
 800ff70:	2202      	movs	r2, #2
 800ff72:	4620      	mov	r0, r4
 800ff74:	4611      	mov	r1, r2
 800ff76:	f000 fafd 	bl	8010574 <adc_channel_length_config>
 800ff7a:	4620      	mov	r0, r4
 800ff7c:	2307      	movs	r3, #7
 800ff7e:	2210      	movs	r2, #16
 800ff80:	2100      	movs	r1, #0
 800ff82:	f000 fb14 	bl	80105ae <adc_inserted_channel_config>
 800ff86:	2307      	movs	r3, #7
 800ff88:	4620      	mov	r0, r4
 800ff8a:	2211      	movs	r2, #17
 800ff8c:	2101      	movs	r1, #1
 800ff8e:	f000 fb0e 	bl	80105ae <adc_inserted_channel_config>
 800ff92:	2201      	movs	r2, #1
 800ff94:	2102      	movs	r1, #2
 800ff96:	4620      	mov	r0, r4
 800ff98:	f000 fb49 	bl	801062e <adc_external_trigger_config>
 800ff9c:	f000 fae0 	bl	8010560 <adc_tempsensor_vrefint_enable>
 800ffa0:	4620      	mov	r0, r4
 800ffa2:	f000 fac4 	bl	801052e <adc_enable>
 800ffa6:	2100      	movs	r1, #0
 800ffa8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800ffac:	f000 fa54 	bl	8010458 <udelay(unsigned int, unsigned int)>
 800ffb0:	4620      	mov	r0, r4
 800ffb2:	f000 fac4 	bl	801053e <adc_calibration_enable>
 800ffb6:	4620      	mov	r0, r4
 800ffb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffbc:	2102      	movs	r1, #2
 800ffbe:	f000 bb51 	b.w	8010664 <adc_software_trigger_enable>
 800ffc2:	bf00      	nop
 800ffc4:	40012400 	andmi	r2, r1, r0, lsl #8

0800ffc8 <_stop() [clone .isra.0]>:
 800ffc8:	b508      	push	{r3, lr}
 800ffca:	4806      	ldr	r0, [pc, #24]	; (800ffe4 <_stop() [clone .isra.0]+0x1c>)
 800ffcc:	f000 ff98 	bl	8010f00 <i2c_stop_on_bus>
 800ffd0:	f640 73ff 	movw	r3, #4095	; 0xfff
 800ffd4:	4a04      	ldr	r2, [pc, #16]	; (800ffe8 <_stop() [clone .isra.0]+0x20>)
 800ffd6:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 800ffda:	0589      	lsls	r1, r1, #22
 800ffdc:	d501      	bpl.n	800ffe2 <_stop() [clone .isra.0]+0x1a>
 800ffde:	3b01      	subs	r3, #1
 800ffe0:	d1f9      	bne.n	800ffd6 <_stop() [clone .isra.0]+0xe>
 800ffe2:	bd08      	pop	{r3, pc}
 800ffe4:	40005400 	andmi	r5, r0, r0, lsl #8
 800ffe8:	40005000 	andmi	r5, r0, r0

0800ffec <gd32_i2c_begin()>:
 800ffec:	b510      	push	{r4, lr}
 800ffee:	f240 7015 	movw	r0, #1813	; 0x715
 800fff2:	f7ff fbb5 	bl	800f760 <rcu_periph_clock_enable>
 800fff6:	4c15      	ldr	r4, [pc, #84]	; (801004c <gd32_i2c_begin()+0x60>)
 800fff8:	f240 6003 	movw	r0, #1539	; 0x603
 800fffc:	f7ff fbb0 	bl	800f760 <rcu_periph_clock_enable>
 8010000:	f240 6003 	movw	r0, #1539	; 0x603
 8010004:	f7ff fbac 	bl	800f760 <rcu_periph_clock_enable>
 8010008:	4620      	mov	r0, r4
 801000a:	f44f 7380 	mov.w	r3, #256	; 0x100
 801000e:	2203      	movs	r2, #3
 8010010:	211c      	movs	r1, #28
 8010012:	f7ff fb0d 	bl	800f630 <gpio_init>
 8010016:	f44f 7300 	mov.w	r3, #512	; 0x200
 801001a:	2203      	movs	r2, #3
 801001c:	4620      	mov	r0, r4
 801001e:	211c      	movs	r1, #28
 8010020:	f7ff fb06 	bl	800f630 <gpio_init>
 8010024:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8010028:	2101      	movs	r1, #1
 801002a:	2002      	movs	r0, #2
 801002c:	f7ff fb54 	bl	800f6d8 <gpio_pin_remap_config>
 8010030:	4620      	mov	r0, r4
 8010032:	4907      	ldr	r1, [pc, #28]	; (8010050 <gd32_i2c_begin()+0x64>)
 8010034:	2200      	movs	r2, #0
 8010036:	f000 fee1 	bl	8010dfc <i2c_clock_config>
 801003a:	4620      	mov	r0, r4
 801003c:	f000 ff56 	bl	8010eec <i2c_enable>
 8010040:	4620      	mov	r0, r4
 8010042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010046:	2101      	movs	r1, #1
 8010048:	f000 bf36 	b.w	8010eb8 <i2c_ack_config>
 801004c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010050:	00061a80 	andeq	r1, r6, r0, lsl #21

08010054 <gd32_i2c_set_baudrate(unsigned int)>:
 8010054:	4601      	mov	r1, r0
 8010056:	2200      	movs	r2, #0
 8010058:	4801      	ldr	r0, [pc, #4]	; (8010060 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 801005a:	f000 becf 	b.w	8010dfc <i2c_clock_config>
 801005e:	bf00      	nop
 8010060:	40005400 	andmi	r5, r0, r0, lsl #8

08010064 <gd32_i2c_set_address(unsigned char)>:
 8010064:	4b01      	ldr	r3, [pc, #4]	; (801006c <gd32_i2c_set_address(unsigned char)+0x8>)
 8010066:	0040      	lsls	r0, r0, #1
 8010068:	7018      	strb	r0, [r3, #0]
 801006a:	4770      	bx	lr
 801006c:	20009bc4 	andcs	r9, r0, r4, asr #23

08010070 <gd32_i2c_write(char const*, unsigned int)>:
 8010070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010072:	4604      	mov	r4, r0
 8010074:	460f      	mov	r7, r1
 8010076:	f640 75ff 	movw	r5, #4095	; 0xfff
 801007a:	4e2e      	ldr	r6, [pc, #184]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801007c:	f240 6101 	movw	r1, #1537	; 0x601
 8010080:	4630      	mov	r0, r6
 8010082:	f000 ff47 	bl	8010f14 <i2c_flag_get>
 8010086:	b138      	cbz	r0, 8010098 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8010088:	3d01      	subs	r5, #1
 801008a:	d1f7      	bne.n	801007c <gd32_i2c_write(char const*, unsigned int)+0xc>
 801008c:	f7ff ff9c 	bl	800ffc8 <_stop() [clone .isra.0]>
 8010090:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010094:	4240      	negs	r0, r0
 8010096:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010098:	4826      	ldr	r0, [pc, #152]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801009a:	f000 ff2c 	bl	8010ef6 <i2c_start_on_bus>
 801009e:	f640 75ff 	movw	r5, #4095	; 0xfff
 80100a2:	4e24      	ldr	r6, [pc, #144]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100a4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80100a8:	4630      	mov	r0, r6
 80100aa:	f000 ff33 	bl	8010f14 <i2c_flag_get>
 80100ae:	bb68      	cbnz	r0, 801010c <gd32_i2c_write(char const*, unsigned int)+0x9c>
 80100b0:	3d01      	subs	r5, #1
 80100b2:	d1f7      	bne.n	80100a4 <gd32_i2c_write(char const*, unsigned int)+0x34>
 80100b4:	e7ea      	b.n	801008c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80100b6:	f240 5101 	movw	r1, #1281	; 0x501
 80100ba:	481e      	ldr	r0, [pc, #120]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100bc:	f000 ff32 	bl	8010f24 <i2c_flag_clear>
 80100c0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80100c4:	4e1b      	ldr	r6, [pc, #108]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100c6:	f240 5107 	movw	r1, #1287	; 0x507
 80100ca:	4630      	mov	r0, r6
 80100cc:	f000 ff22 	bl	8010f14 <i2c_flag_get>
 80100d0:	2801      	cmp	r0, #1
 80100d2:	d114      	bne.n	80100fe <gd32_i2c_write(char const*, unsigned int)+0x8e>
 80100d4:	4e17      	ldr	r6, [pc, #92]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80100d6:	4427      	add	r7, r4
 80100d8:	42a7      	cmp	r7, r4
 80100da:	d013      	beq.n	8010104 <gd32_i2c_write(char const*, unsigned int)+0x94>
 80100dc:	4630      	mov	r0, r6
 80100de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80100e2:	f000 ff12 	bl	8010f0a <i2c_data_transmit>
 80100e6:	f640 75ff 	movw	r5, #4095	; 0xfff
 80100ea:	f240 5102 	movw	r1, #1282	; 0x502
 80100ee:	4630      	mov	r0, r6
 80100f0:	f000 ff10 	bl	8010f14 <i2c_flag_get>
 80100f4:	2800      	cmp	r0, #0
 80100f6:	d1ef      	bne.n	80100d8 <gd32_i2c_write(char const*, unsigned int)+0x68>
 80100f8:	3d01      	subs	r5, #1
 80100fa:	d1f6      	bne.n	80100ea <gd32_i2c_write(char const*, unsigned int)+0x7a>
 80100fc:	e7c6      	b.n	801008c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80100fe:	3d01      	subs	r5, #1
 8010100:	d1e1      	bne.n	80100c6 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8010102:	e7c3      	b.n	801008c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010104:	f7ff ff60 	bl	800ffc8 <_stop() [clone .isra.0]>
 8010108:	2000      	movs	r0, #0
 801010a:	e7c3      	b.n	8010094 <gd32_i2c_write(char const*, unsigned int)+0x24>
 801010c:	4b0a      	ldr	r3, [pc, #40]	; (8010138 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 801010e:	f06f 0201 	mvn.w	r2, #1
 8010112:	7819      	ldrb	r1, [r3, #0]
 8010114:	4807      	ldr	r0, [pc, #28]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010116:	f000 fee1 	bl	8010edc <i2c_master_addressing>
 801011a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801011e:	4e05      	ldr	r6, [pc, #20]	; (8010134 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8010120:	f240 5101 	movw	r1, #1281	; 0x501
 8010124:	4630      	mov	r0, r6
 8010126:	f000 fef5 	bl	8010f14 <i2c_flag_get>
 801012a:	2800      	cmp	r0, #0
 801012c:	d1c3      	bne.n	80100b6 <gd32_i2c_write(char const*, unsigned int)+0x46>
 801012e:	3d01      	subs	r5, #1
 8010130:	d1f6      	bne.n	8010120 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8010132:	e7ab      	b.n	801008c <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8010134:	40005400 	andmi	r5, r0, r0, lsl #8
 8010138:	20009bc4 	andcs	r9, r0, r4, asr #23

0801013c <gd32_i2c_read(char*, unsigned int)>:
 801013c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010140:	4680      	mov	r8, r0
 8010142:	460c      	mov	r4, r1
 8010144:	f640 76ff 	movw	r6, #4095	; 0xfff
 8010148:	4f49      	ldr	r7, [pc, #292]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801014a:	f240 6101 	movw	r1, #1537	; 0x601
 801014e:	4638      	mov	r0, r7
 8010150:	f000 fee0 	bl	8010f14 <i2c_flag_get>
 8010154:	4605      	mov	r5, r0
 8010156:	b128      	cbz	r0, 8010164 <gd32_i2c_read(char*, unsigned int)+0x28>
 8010158:	3e01      	subs	r6, #1
 801015a:	d1f6      	bne.n	801014a <gd32_i2c_read(char*, unsigned int)+0xe>
 801015c:	f7ff ff34 	bl	800ffc8 <_stop() [clone .isra.0]>
 8010160:	2504      	movs	r5, #4
 8010162:	e082      	b.n	801026a <gd32_i2c_read(char*, unsigned int)+0x12e>
 8010164:	2c02      	cmp	r4, #2
 8010166:	d103      	bne.n	8010170 <gd32_i2c_read(char*, unsigned int)+0x34>
 8010168:	4601      	mov	r1, r0
 801016a:	4841      	ldr	r0, [pc, #260]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801016c:	f000 fead 	bl	8010eca <i2c_ackpos_config>
 8010170:	483f      	ldr	r0, [pc, #252]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010172:	f000 fec0 	bl	8010ef6 <i2c_start_on_bus>
 8010176:	f640 76ff 	movw	r6, #4095	; 0xfff
 801017a:	4f3d      	ldr	r7, [pc, #244]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801017c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8010180:	4638      	mov	r0, r7
 8010182:	f000 fec7 	bl	8010f14 <i2c_flag_get>
 8010186:	b910      	cbnz	r0, 801018e <gd32_i2c_read(char*, unsigned int)+0x52>
 8010188:	3e01      	subs	r6, #1
 801018a:	d1f7      	bne.n	801017c <gd32_i2c_read(char*, unsigned int)+0x40>
 801018c:	e7e6      	b.n	801015c <gd32_i2c_read(char*, unsigned int)+0x20>
 801018e:	4b39      	ldr	r3, [pc, #228]	; (8010274 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8010190:	2201      	movs	r2, #1
 8010192:	7819      	ldrb	r1, [r3, #0]
 8010194:	4836      	ldr	r0, [pc, #216]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010196:	f000 fea1 	bl	8010edc <i2c_master_addressing>
 801019a:	2c02      	cmp	r4, #2
 801019c:	d803      	bhi.n	80101a6 <gd32_i2c_read(char*, unsigned int)+0x6a>
 801019e:	2100      	movs	r1, #0
 80101a0:	4833      	ldr	r0, [pc, #204]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80101a2:	f000 fe89 	bl	8010eb8 <i2c_ack_config>
 80101a6:	f640 76ff 	movw	r6, #4095	; 0xfff
 80101aa:	4f31      	ldr	r7, [pc, #196]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80101ac:	f240 5101 	movw	r1, #1281	; 0x501
 80101b0:	4638      	mov	r0, r7
 80101b2:	f000 feaf 	bl	8010f14 <i2c_flag_get>
 80101b6:	b910      	cbnz	r0, 80101be <gd32_i2c_read(char*, unsigned int)+0x82>
 80101b8:	3e01      	subs	r6, #1
 80101ba:	d1f7      	bne.n	80101ac <gd32_i2c_read(char*, unsigned int)+0x70>
 80101bc:	e7ce      	b.n	801015c <gd32_i2c_read(char*, unsigned int)+0x20>
 80101be:	f240 5101 	movw	r1, #1281	; 0x501
 80101c2:	482b      	ldr	r0, [pc, #172]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80101c4:	f000 feae 	bl	8010f24 <i2c_flag_clear>
 80101c8:	2c01      	cmp	r4, #1
 80101ca:	d102      	bne.n	80101d2 <gd32_i2c_read(char*, unsigned int)+0x96>
 80101cc:	4828      	ldr	r0, [pc, #160]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80101ce:	f000 fe97 	bl	8010f00 <i2c_stop_on_bus>
 80101d2:	f640 77ff 	movw	r7, #4095	; 0xfff
 80101d6:	4e26      	ldr	r6, [pc, #152]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80101d8:	b3ac      	cbz	r4, 8010246 <gd32_i2c_read(char*, unsigned int)+0x10a>
 80101da:	2c03      	cmp	r4, #3
 80101dc:	d121      	bne.n	8010222 <gd32_i2c_read(char*, unsigned int)+0xe6>
 80101de:	f640 79ff 	movw	r9, #4095	; 0xfff
 80101e2:	f240 5102 	movw	r1, #1282	; 0x502
 80101e6:	4630      	mov	r0, r6
 80101e8:	f000 fe94 	bl	8010f14 <i2c_flag_get>
 80101ec:	b918      	cbnz	r0, 80101f6 <gd32_i2c_read(char*, unsigned int)+0xba>
 80101ee:	f1b9 0901 	subs.w	r9, r9, #1
 80101f2:	d1f6      	bne.n	80101e2 <gd32_i2c_read(char*, unsigned int)+0xa6>
 80101f4:	e7b2      	b.n	801015c <gd32_i2c_read(char*, unsigned int)+0x20>
 80101f6:	2100      	movs	r1, #0
 80101f8:	4630      	mov	r0, r6
 80101fa:	f000 fe5d 	bl	8010eb8 <i2c_ack_config>
 80101fe:	f240 5106 	movw	r1, #1286	; 0x506
 8010202:	4630      	mov	r0, r6
 8010204:	f000 fe86 	bl	8010f14 <i2c_flag_get>
 8010208:	b138      	cbz	r0, 801021a <gd32_i2c_read(char*, unsigned int)+0xde>
 801020a:	4630      	mov	r0, r6
 801020c:	f000 fe7f 	bl	8010f0e <i2c_data_receive>
 8010210:	f640 77ff 	movw	r7, #4095	; 0xfff
 8010214:	f808 0b01 	strb.w	r0, [r8], #1
 8010218:	3c01      	subs	r4, #1
 801021a:	3f01      	subs	r7, #1
 801021c:	2f00      	cmp	r7, #0
 801021e:	dcdb      	bgt.n	80101d8 <gd32_i2c_read(char*, unsigned int)+0x9c>
 8010220:	e79c      	b.n	801015c <gd32_i2c_read(char*, unsigned int)+0x20>
 8010222:	2c02      	cmp	r4, #2
 8010224:	d1eb      	bne.n	80101fe <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010226:	f640 79ff 	movw	r9, #4095	; 0xfff
 801022a:	f240 5102 	movw	r1, #1282	; 0x502
 801022e:	4630      	mov	r0, r6
 8010230:	f000 fe70 	bl	8010f14 <i2c_flag_get>
 8010234:	b918      	cbnz	r0, 801023e <gd32_i2c_read(char*, unsigned int)+0x102>
 8010236:	f1b9 0901 	subs.w	r9, r9, #1
 801023a:	d1f6      	bne.n	801022a <gd32_i2c_read(char*, unsigned int)+0xee>
 801023c:	e78e      	b.n	801015c <gd32_i2c_read(char*, unsigned int)+0x20>
 801023e:	4630      	mov	r0, r6
 8010240:	f000 fe5e 	bl	8010f00 <i2c_stop_on_bus>
 8010244:	e7db      	b.n	80101fe <gd32_i2c_read(char*, unsigned int)+0xc2>
 8010246:	f640 73ff 	movw	r3, #4095	; 0xfff
 801024a:	4a0b      	ldr	r2, [pc, #44]	; (8010278 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801024c:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8010250:	0589      	lsls	r1, r1, #22
 8010252:	d502      	bpl.n	801025a <gd32_i2c_read(char*, unsigned int)+0x11e>
 8010254:	3b01      	subs	r3, #1
 8010256:	d1f9      	bne.n	801024c <gd32_i2c_read(char*, unsigned int)+0x110>
 8010258:	e782      	b.n	8010160 <gd32_i2c_read(char*, unsigned int)+0x24>
 801025a:	2101      	movs	r1, #1
 801025c:	4804      	ldr	r0, [pc, #16]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801025e:	f000 fe2b 	bl	8010eb8 <i2c_ack_config>
 8010262:	2101      	movs	r1, #1
 8010264:	4802      	ldr	r0, [pc, #8]	; (8010270 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8010266:	f000 fe30 	bl	8010eca <i2c_ackpos_config>
 801026a:	4628      	mov	r0, r5
 801026c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010270:	40005400 	andmi	r5, r0, r0, lsl #8
 8010274:	20009bc4 	andcs	r9, r0, r4, asr #23
 8010278:	40005000 	andmi	r5, r0, r0

0801027c <gd32_uart_begin>:
 801027c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801027e:	461d      	mov	r5, r3
 8010280:	4b63      	ldr	r3, [pc, #396]	; (8010410 <gd32_uart_begin+0x194>)
 8010282:	4604      	mov	r4, r0
 8010284:	4298      	cmp	r0, r3
 8010286:	460f      	mov	r7, r1
 8010288:	4616      	mov	r6, r2
 801028a:	d03b      	beq.n	8010304 <gd32_uart_begin+0x88>
 801028c:	d80a      	bhi.n	80102a4 <gd32_uart_begin+0x28>
 801028e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8010292:	4298      	cmp	r0, r3
 8010294:	d02f      	beq.n	80102f6 <gd32_uart_begin+0x7a>
 8010296:	f240 7012 	movw	r0, #1810	; 0x712
 801029a:	f7ff fa61 	bl	800f760 <rcu_periph_clock_enable>
 801029e:	f240 6004 	movw	r0, #1540	; 0x604
 80102a2:	e008      	b.n	80102b6 <gd32_uart_begin+0x3a>
 80102a4:	4b5b      	ldr	r3, [pc, #364]	; (8010414 <gd32_uart_begin+0x198>)
 80102a6:	4298      	cmp	r0, r3
 80102a8:	d02f      	beq.n	801030a <gd32_uart_begin+0x8e>
 80102aa:	f240 600e 	movw	r0, #1550	; 0x60e
 80102ae:	f7ff fa57 	bl	800f760 <rcu_periph_clock_enable>
 80102b2:	f240 6003 	movw	r0, #1539	; 0x603
 80102b6:	f7ff fa53 	bl	800f760 <rcu_periph_clock_enable>
 80102ba:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80102be:	f7ff fa4f 	bl	800f760 <rcu_periph_clock_enable>
 80102c2:	4b53      	ldr	r3, [pc, #332]	; (8010410 <gd32_uart_begin+0x194>)
 80102c4:	429c      	cmp	r4, r3
 80102c6:	f000 8085 	beq.w	80103d4 <gd32_uart_begin+0x158>
 80102ca:	d829      	bhi.n	8010320 <gd32_uart_begin+0xa4>
 80102cc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80102d0:	429c      	cmp	r4, r3
 80102d2:	d072      	beq.n	80103ba <gd32_uart_begin+0x13e>
 80102d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80102d8:	2203      	movs	r2, #3
 80102da:	2118      	movs	r1, #24
 80102dc:	484e      	ldr	r0, [pc, #312]	; (8010418 <gd32_uart_begin+0x19c>)
 80102de:	f7ff f9a7 	bl	800f630 <gpio_init>
 80102e2:	2104      	movs	r1, #4
 80102e4:	484c      	ldr	r0, [pc, #304]	; (8010418 <gd32_uart_begin+0x19c>)
 80102e6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80102ea:	2203      	movs	r2, #3
 80102ec:	f7ff f9a0 	bl	800f630 <gpio_init>
 80102f0:	2101      	movs	r1, #1
 80102f2:	484a      	ldr	r0, [pc, #296]	; (801041c <gd32_uart_begin+0x1a0>)
 80102f4:	e025      	b.n	8010342 <gd32_uart_begin+0xc6>
 80102f6:	f240 7011 	movw	r0, #1809	; 0x711
 80102fa:	f7ff fa31 	bl	800f760 <rcu_periph_clock_enable>
 80102fe:	f240 6002 	movw	r0, #1538	; 0x602
 8010302:	e7d8      	b.n	80102b6 <gd32_uart_begin+0x3a>
 8010304:	f240 7013 	movw	r0, #1811	; 0x713
 8010308:	e7c7      	b.n	801029a <gd32_uart_begin+0x1e>
 801030a:	f240 7014 	movw	r0, #1812	; 0x714
 801030e:	f7ff fa27 	bl	800f760 <rcu_periph_clock_enable>
 8010312:	f240 6004 	movw	r0, #1540	; 0x604
 8010316:	f7ff fa23 	bl	800f760 <rcu_periph_clock_enable>
 801031a:	f240 6005 	movw	r0, #1541	; 0x605
 801031e:	e7ca      	b.n	80102b6 <gd32_uart_begin+0x3a>
 8010320:	4b3c      	ldr	r3, [pc, #240]	; (8010414 <gd32_uart_begin+0x198>)
 8010322:	429c      	cmp	r4, r3
 8010324:	d063      	beq.n	80103ee <gd32_uart_begin+0x172>
 8010326:	2340      	movs	r3, #64	; 0x40
 8010328:	2203      	movs	r2, #3
 801032a:	2118      	movs	r1, #24
 801032c:	483c      	ldr	r0, [pc, #240]	; (8010420 <gd32_uart_begin+0x1a4>)
 801032e:	f7ff f97f 	bl	800f630 <gpio_init>
 8010332:	2104      	movs	r1, #4
 8010334:	483a      	ldr	r0, [pc, #232]	; (8010420 <gd32_uart_begin+0x1a4>)
 8010336:	2380      	movs	r3, #128	; 0x80
 8010338:	2203      	movs	r2, #3
 801033a:	f7ff f979 	bl	800f630 <gpio_init>
 801033e:	2101      	movs	r1, #1
 8010340:	2004      	movs	r0, #4
 8010342:	f7ff f9c9 	bl	800f6d8 <gpio_pin_remap_config>
 8010346:	4620      	mov	r0, r4
 8010348:	f7ff fc64 	bl	800fc14 <usart_deinit>
 801034c:	68e3      	ldr	r3, [r4, #12]
 801034e:	4639      	mov	r1, r7
 8010350:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8010354:	60e3      	str	r3, [r4, #12]
 8010356:	4620      	mov	r0, r4
 8010358:	f7ff fc9c 	bl	800fc94 <usart_baudrate_set>
 801035c:	2e09      	cmp	r6, #9
 801035e:	bf0c      	ite	eq
 8010360:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8010364:	2100      	movne	r1, #0
 8010366:	4620      	mov	r0, r4
 8010368:	f7ff fcc4 	bl	800fcf4 <usart_word_length_set>
 801036c:	9b06      	ldr	r3, [sp, #24]
 801036e:	4620      	mov	r0, r4
 8010370:	2b02      	cmp	r3, #2
 8010372:	bf0c      	ite	eq
 8010374:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8010378:	2100      	movne	r1, #0
 801037a:	f7ff fcc3 	bl	800fd04 <usart_stop_bit_set>
 801037e:	2d01      	cmp	r5, #1
 8010380:	d041      	beq.n	8010406 <gd32_uart_begin+0x18a>
 8010382:	2d02      	cmp	r5, #2
 8010384:	d142      	bne.n	801040c <gd32_uart_begin+0x190>
 8010386:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801038a:	4620      	mov	r0, r4
 801038c:	f7ff fcaa 	bl	800fce4 <usart_parity_config>
 8010390:	2100      	movs	r1, #0
 8010392:	4620      	mov	r0, r4
 8010394:	f7ff fcca 	bl	800fd2c <usart_hardware_flow_rts_config>
 8010398:	2100      	movs	r1, #0
 801039a:	4620      	mov	r0, r4
 801039c:	f7ff fccc 	bl	800fd38 <usart_hardware_flow_cts_config>
 80103a0:	2104      	movs	r1, #4
 80103a2:	4620      	mov	r0, r4
 80103a4:	f7ff fcbc 	bl	800fd20 <usart_receive_config>
 80103a8:	2108      	movs	r1, #8
 80103aa:	4620      	mov	r0, r4
 80103ac:	f7ff fcb2 	bl	800fd14 <usart_transmit_config>
 80103b0:	68e3      	ldr	r3, [r4, #12]
 80103b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80103b6:	60e3      	str	r3, [r4, #12]
 80103b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103ba:	2304      	movs	r3, #4
 80103bc:	2203      	movs	r2, #3
 80103be:	2118      	movs	r1, #24
 80103c0:	4818      	ldr	r0, [pc, #96]	; (8010424 <gd32_uart_begin+0x1a8>)
 80103c2:	f7ff f935 	bl	800f630 <gpio_init>
 80103c6:	2308      	movs	r3, #8
 80103c8:	2203      	movs	r2, #3
 80103ca:	2104      	movs	r1, #4
 80103cc:	4815      	ldr	r0, [pc, #84]	; (8010424 <gd32_uart_begin+0x1a8>)
 80103ce:	f7ff f92f 	bl	800f630 <gpio_init>
 80103d2:	e7b8      	b.n	8010346 <gd32_uart_begin+0xca>
 80103d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80103d8:	2203      	movs	r2, #3
 80103da:	2118      	movs	r1, #24
 80103dc:	480e      	ldr	r0, [pc, #56]	; (8010418 <gd32_uart_begin+0x19c>)
 80103de:	f7ff f927 	bl	800f630 <gpio_init>
 80103e2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80103e6:	2203      	movs	r2, #3
 80103e8:	2104      	movs	r1, #4
 80103ea:	480b      	ldr	r0, [pc, #44]	; (8010418 <gd32_uart_begin+0x19c>)
 80103ec:	e7ef      	b.n	80103ce <gd32_uart_begin+0x152>
 80103ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80103f2:	2203      	movs	r2, #3
 80103f4:	2118      	movs	r1, #24
 80103f6:	4808      	ldr	r0, [pc, #32]	; (8010418 <gd32_uart_begin+0x19c>)
 80103f8:	f7ff f91a 	bl	800f630 <gpio_init>
 80103fc:	2304      	movs	r3, #4
 80103fe:	2203      	movs	r2, #3
 8010400:	4619      	mov	r1, r3
 8010402:	4809      	ldr	r0, [pc, #36]	; (8010428 <gd32_uart_begin+0x1ac>)
 8010404:	e7e3      	b.n	80103ce <gd32_uart_begin+0x152>
 8010406:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 801040a:	e7be      	b.n	801038a <gd32_uart_begin+0x10e>
 801040c:	2100      	movs	r1, #0
 801040e:	e7bc      	b.n	801038a <gd32_uart_begin+0x10e>
 8010410:	40004c00 	andmi	r4, r0, r0, lsl #24
 8010414:	40005000 	andmi	r5, r0, r0
 8010418:	40011000 	andmi	r1, r1, r0
 801041c:	00140010 	andseq	r0, r4, r0, lsl r0
 8010420:	40010c00 	andmi	r0, r1, r0, lsl #24
 8010424:	40010800 	andmi	r0, r1, r0, lsl #16
 8010428:	40011400 	andmi	r1, r1, r0, lsl #8

0801042c <micros_init()>:
 801042c:	4770      	bx	lr
	...

08010430 <udelay_init()>:
 8010430:	4a07      	ldr	r2, [pc, #28]	; (8010450 <udelay_init()+0x20>)
 8010432:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8010436:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801043a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 801043e:	2200      	movs	r2, #0
 8010440:	4b04      	ldr	r3, [pc, #16]	; (8010454 <udelay_init()+0x24>)
 8010442:	605a      	str	r2, [r3, #4]
 8010444:	681a      	ldr	r2, [r3, #0]
 8010446:	f042 0201 	orr.w	r2, r2, #1
 801044a:	601a      	str	r2, [r3, #0]
 801044c:	4770      	bx	lr
 801044e:	bf00      	nop
 8010450:	e000ed00 	and	lr, r0, r0, lsl #26
 8010454:	e0001000 	and	r1, r0, r0

08010458 <udelay(unsigned int, unsigned int)>:
 8010458:	236c      	movs	r3, #108	; 0x6c
 801045a:	b510      	push	{r4, lr}
 801045c:	4358      	muls	r0, r3
 801045e:	b909      	cbnz	r1, 8010464 <udelay(unsigned int, unsigned int)+0xc>
 8010460:	4b08      	ldr	r3, [pc, #32]	; (8010484 <udelay(unsigned int, unsigned int)+0x2c>)
 8010462:	6859      	ldr	r1, [r3, #4]
 8010464:	2300      	movs	r3, #0
 8010466:	4c07      	ldr	r4, [pc, #28]	; (8010484 <udelay(unsigned int, unsigned int)+0x2c>)
 8010468:	6862      	ldr	r2, [r4, #4]
 801046a:	4291      	cmp	r1, r2
 801046c:	d0fc      	beq.n	8010468 <udelay(unsigned int, unsigned int)+0x10>
 801046e:	bf28      	it	cs
 8010470:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8010474:	1a5b      	subs	r3, r3, r1
 8010476:	4413      	add	r3, r2
 8010478:	4283      	cmp	r3, r0
 801047a:	d300      	bcc.n	801047e <udelay(unsigned int, unsigned int)+0x26>
 801047c:	bd10      	pop	{r4, pc}
 801047e:	4611      	mov	r1, r2
 8010480:	e7f2      	b.n	8010468 <udelay(unsigned int, unsigned int)+0x10>
 8010482:	bf00      	nop
 8010484:	e0001000 	and	r1, r0, r0

08010488 <mac_address_get>:
 8010488:	2102      	movs	r1, #2
 801048a:	4a07      	ldr	r2, [pc, #28]	; (80104a8 <mac_address_get+0x20>)
 801048c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8010490:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8010494:	7001      	strb	r1, [r0, #0]
 8010496:	7042      	strb	r2, [r0, #1]
 8010498:	0e1a      	lsrs	r2, r3, #24
 801049a:	7082      	strb	r2, [r0, #2]
 801049c:	0c1a      	lsrs	r2, r3, #16
 801049e:	70c2      	strb	r2, [r0, #3]
 80104a0:	0a1a      	lsrs	r2, r3, #8
 80104a2:	7102      	strb	r2, [r0, #4]
 80104a4:	7143      	strb	r3, [r0, #5]
 80104a6:	4770      	bx	lr
 80104a8:	1ffff000 	svcne	0x00fff000

080104ac <adc_mode_config>:
 80104ac:	4b06      	ldr	r3, [pc, #24]	; (80104c8 <adc_mode_config+0x1c>)
 80104ae:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 80104b2:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 80104b6:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 80104ba:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80104be:	4302      	orrs	r2, r0
 80104c0:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80104c4:	4770      	bx	lr
 80104c6:	bf00      	nop
 80104c8:	40012000 	andmi	r2, r1, r0

080104cc <adc_special_function_config>:
 80104cc:	b510      	push	{r4, lr}
 80104ce:	f401 7380 	and.w	r3, r1, #256	; 0x100
 80104d2:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80104d6:	f001 0102 	and.w	r1, r1, #2
 80104da:	b17a      	cbz	r2, 80104fc <adc_special_function_config+0x30>
 80104dc:	b11b      	cbz	r3, 80104e6 <adc_special_function_config+0x1a>
 80104de:	6843      	ldr	r3, [r0, #4]
 80104e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80104e4:	6043      	str	r3, [r0, #4]
 80104e6:	b11c      	cbz	r4, 80104f0 <adc_special_function_config+0x24>
 80104e8:	6843      	ldr	r3, [r0, #4]
 80104ea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80104ee:	6043      	str	r3, [r0, #4]
 80104f0:	b119      	cbz	r1, 80104fa <adc_special_function_config+0x2e>
 80104f2:	6883      	ldr	r3, [r0, #8]
 80104f4:	f043 0302 	orr.w	r3, r3, #2
 80104f8:	6083      	str	r3, [r0, #8]
 80104fa:	bd10      	pop	{r4, pc}
 80104fc:	b11b      	cbz	r3, 8010506 <adc_special_function_config+0x3a>
 80104fe:	6843      	ldr	r3, [r0, #4]
 8010500:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8010504:	6043      	str	r3, [r0, #4]
 8010506:	b11c      	cbz	r4, 8010510 <adc_special_function_config+0x44>
 8010508:	6843      	ldr	r3, [r0, #4]
 801050a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801050e:	6043      	str	r3, [r0, #4]
 8010510:	2900      	cmp	r1, #0
 8010512:	d0f2      	beq.n	80104fa <adc_special_function_config+0x2e>
 8010514:	6883      	ldr	r3, [r0, #8]
 8010516:	f023 0302 	bic.w	r3, r3, #2
 801051a:	e7ed      	b.n	80104f8 <adc_special_function_config+0x2c>

0801051c <adc_data_alignment_config>:
 801051c:	6883      	ldr	r3, [r0, #8]
 801051e:	b119      	cbz	r1, 8010528 <adc_data_alignment_config+0xc>
 8010520:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010524:	6083      	str	r3, [r0, #8]
 8010526:	4770      	bx	lr
 8010528:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801052c:	e7fa      	b.n	8010524 <adc_data_alignment_config+0x8>

0801052e <adc_enable>:
 801052e:	6883      	ldr	r3, [r0, #8]
 8010530:	07db      	lsls	r3, r3, #31
 8010532:	bf5e      	ittt	pl
 8010534:	6883      	ldrpl	r3, [r0, #8]
 8010536:	f043 0301 	orrpl.w	r3, r3, #1
 801053a:	6083      	strpl	r3, [r0, #8]
 801053c:	4770      	bx	lr

0801053e <adc_calibration_enable>:
 801053e:	6883      	ldr	r3, [r0, #8]
 8010540:	f100 0208 	add.w	r2, r0, #8
 8010544:	f043 0308 	orr.w	r3, r3, #8
 8010548:	6083      	str	r3, [r0, #8]
 801054a:	6813      	ldr	r3, [r2, #0]
 801054c:	0719      	lsls	r1, r3, #28
 801054e:	d4fc      	bmi.n	801054a <adc_calibration_enable+0xc>
 8010550:	6883      	ldr	r3, [r0, #8]
 8010552:	f043 0304 	orr.w	r3, r3, #4
 8010556:	6083      	str	r3, [r0, #8]
 8010558:	6813      	ldr	r3, [r2, #0]
 801055a:	075b      	lsls	r3, r3, #29
 801055c:	d4fc      	bmi.n	8010558 <adc_calibration_enable+0x1a>
 801055e:	4770      	bx	lr

08010560 <adc_tempsensor_vrefint_enable>:
 8010560:	4a03      	ldr	r2, [pc, #12]	; (8010570 <adc_tempsensor_vrefint_enable+0x10>)
 8010562:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8010566:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801056a:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 801056e:	4770      	bx	lr
 8010570:	40012000 	andmi	r2, r1, r0

08010574 <adc_channel_length_config>:
 8010574:	2901      	cmp	r1, #1
 8010576:	d002      	beq.n	801057e <adc_channel_length_config+0xa>
 8010578:	2902      	cmp	r1, #2
 801057a:	d00c      	beq.n	8010596 <adc_channel_length_config+0x22>
 801057c:	4770      	bx	lr
 801057e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010580:	3a01      	subs	r2, #1
 8010582:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8010586:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010588:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801058a:	0512      	lsls	r2, r2, #20
 801058c:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8010590:	431a      	orrs	r2, r3
 8010592:	62c2      	str	r2, [r0, #44]	; 0x2c
 8010594:	4770      	bx	lr
 8010596:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010598:	3a01      	subs	r2, #1
 801059a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801059e:	6383      	str	r3, [r0, #56]	; 0x38
 80105a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80105a2:	0512      	lsls	r2, r2, #20
 80105a4:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80105a8:	431a      	orrs	r2, r3
 80105aa:	6382      	str	r2, [r0, #56]	; 0x38
 80105ac:	4770      	bx	lr

080105ae <adc_inserted_channel_config>:
 80105ae:	b530      	push	{r4, r5, lr}
 80105b0:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80105b2:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80105b4:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80105b8:	1a61      	subs	r1, r4, r1
 80105ba:	f06f 0404 	mvn.w	r4, #4
 80105be:	4361      	muls	r1, r4
 80105c0:	241f      	movs	r4, #31
 80105c2:	310f      	adds	r1, #15
 80105c4:	408c      	lsls	r4, r1
 80105c6:	ea25 0504 	bic.w	r5, r5, r4
 80105ca:	fa02 f101 	lsl.w	r1, r2, r1
 80105ce:	4329      	orrs	r1, r5
 80105d0:	2a09      	cmp	r2, #9
 80105d2:	6381      	str	r1, [r0, #56]	; 0x38
 80105d4:	d80b      	bhi.n	80105ee <adc_inserted_channel_config+0x40>
 80105d6:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 80105da:	2207      	movs	r2, #7
 80105dc:	6904      	ldr	r4, [r0, #16]
 80105de:	408a      	lsls	r2, r1
 80105e0:	ea24 0402 	bic.w	r4, r4, r2
 80105e4:	fa03 f201 	lsl.w	r2, r3, r1
 80105e8:	4322      	orrs	r2, r4
 80105ea:	6102      	str	r2, [r0, #16]
 80105ec:	bd30      	pop	{r4, r5, pc}
 80105ee:	2a11      	cmp	r2, #17
 80105f0:	d8fc      	bhi.n	80105ec <adc_inserted_channel_config+0x3e>
 80105f2:	2407      	movs	r4, #7
 80105f4:	3a0a      	subs	r2, #10
 80105f6:	68c1      	ldr	r1, [r0, #12]
 80105f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80105fc:	4094      	lsls	r4, r2
 80105fe:	ea21 0104 	bic.w	r1, r1, r4
 8010602:	fa03 f202 	lsl.w	r2, r3, r2
 8010606:	430a      	orrs	r2, r1
 8010608:	60c2      	str	r2, [r0, #12]
 801060a:	e7ef      	b.n	80105ec <adc_inserted_channel_config+0x3e>

0801060c <adc_external_trigger_source_config>:
 801060c:	2901      	cmp	r1, #1
 801060e:	d002      	beq.n	8010616 <adc_external_trigger_source_config+0xa>
 8010610:	2902      	cmp	r1, #2
 8010612:	d008      	beq.n	8010626 <adc_external_trigger_source_config+0x1a>
 8010614:	4770      	bx	lr
 8010616:	6883      	ldr	r3, [r0, #8]
 8010618:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 801061c:	6083      	str	r3, [r0, #8]
 801061e:	6883      	ldr	r3, [r0, #8]
 8010620:	431a      	orrs	r2, r3
 8010622:	6082      	str	r2, [r0, #8]
 8010624:	4770      	bx	lr
 8010626:	6883      	ldr	r3, [r0, #8]
 8010628:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801062c:	e7f6      	b.n	801061c <adc_external_trigger_source_config+0x10>

0801062e <adc_external_trigger_config>:
 801062e:	f001 0301 	and.w	r3, r1, #1
 8010632:	f001 0102 	and.w	r1, r1, #2
 8010636:	b152      	cbz	r2, 801064e <adc_external_trigger_config+0x20>
 8010638:	b11b      	cbz	r3, 8010642 <adc_external_trigger_config+0x14>
 801063a:	6883      	ldr	r3, [r0, #8]
 801063c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010640:	6083      	str	r3, [r0, #8]
 8010642:	b119      	cbz	r1, 801064c <adc_external_trigger_config+0x1e>
 8010644:	6883      	ldr	r3, [r0, #8]
 8010646:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801064a:	6083      	str	r3, [r0, #8]
 801064c:	4770      	bx	lr
 801064e:	b11b      	cbz	r3, 8010658 <adc_external_trigger_config+0x2a>
 8010650:	6883      	ldr	r3, [r0, #8]
 8010652:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8010656:	6083      	str	r3, [r0, #8]
 8010658:	2900      	cmp	r1, #0
 801065a:	d0f7      	beq.n	801064c <adc_external_trigger_config+0x1e>
 801065c:	6883      	ldr	r3, [r0, #8]
 801065e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8010662:	e7f2      	b.n	801064a <adc_external_trigger_config+0x1c>

08010664 <adc_software_trigger_enable>:
 8010664:	07ca      	lsls	r2, r1, #31
 8010666:	bf42      	ittt	mi
 8010668:	6883      	ldrmi	r3, [r0, #8]
 801066a:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 801066e:	6083      	strmi	r3, [r0, #8]
 8010670:	078b      	lsls	r3, r1, #30
 8010672:	bf42      	ittt	mi
 8010674:	6883      	ldrmi	r3, [r0, #8]
 8010676:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801067a:	6083      	strmi	r3, [r0, #8]
 801067c:	4770      	bx	lr

0801067e <enet_delay>:
 801067e:	2300      	movs	r3, #0
 8010680:	b082      	sub	sp, #8
 8010682:	9301      	str	r3, [sp, #4]
 8010684:	9001      	str	r0, [sp, #4]
 8010686:	9b01      	ldr	r3, [sp, #4]
 8010688:	b90b      	cbnz	r3, 801068e <enet_delay+0x10>
 801068a:	b002      	add	sp, #8
 801068c:	4770      	bx	lr
 801068e:	9b01      	ldr	r3, [sp, #4]
 8010690:	3b01      	subs	r3, #1
 8010692:	9301      	str	r3, [sp, #4]
 8010694:	e7f7      	b.n	8010686 <enet_delay+0x8>
	...

08010698 <enet_software_reset>:
 8010698:	4b07      	ldr	r3, [pc, #28]	; (80106b8 <enet_software_reset+0x20>)
 801069a:	681a      	ldr	r2, [r3, #0]
 801069c:	f042 0201 	orr.w	r2, r2, #1
 80106a0:	601a      	str	r2, [r3, #0]
 80106a2:	4a06      	ldr	r2, [pc, #24]	; (80106bc <enet_software_reset+0x24>)
 80106a4:	6819      	ldr	r1, [r3, #0]
 80106a6:	07c9      	lsls	r1, r1, #31
 80106a8:	d501      	bpl.n	80106ae <enet_software_reset+0x16>
 80106aa:	3a01      	subs	r2, #1
 80106ac:	d1fa      	bne.n	80106a4 <enet_software_reset+0xc>
 80106ae:	6818      	ldr	r0, [r3, #0]
 80106b0:	43c0      	mvns	r0, r0
 80106b2:	f000 0001 	and.w	r0, r0, #1
 80106b6:	4770      	bx	lr
 80106b8:	40029000 	andmi	r9, r2, r0
 80106bc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080106c0 <enet_descriptors_chain_init>:
 80106c0:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80106c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106c6:	4a19      	ldr	r2, [pc, #100]	; (801072c <enet_descriptors_chain_init+0x6c>)
 80106c8:	d125      	bne.n	8010716 <enet_descriptors_chain_init+0x56>
 80106ca:	2500      	movs	r5, #0
 80106cc:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80106d0:	2002      	movs	r0, #2
 80106d2:	4b17      	ldr	r3, [pc, #92]	; (8010730 <enet_descriptors_chain_init+0x70>)
 80106d4:	4c17      	ldr	r4, [pc, #92]	; (8010734 <enet_descriptors_chain_init+0x74>)
 80106d6:	6113      	str	r3, [r2, #16]
 80106d8:	4a17      	ldr	r2, [pc, #92]	; (8010738 <enet_descriptors_chain_init+0x78>)
 80106da:	6013      	str	r3, [r2, #0]
 80106dc:	2200      	movs	r2, #0
 80106de:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80106e2:	4916      	ldr	r1, [pc, #88]	; (801073c <enet_descriptors_chain_init+0x7c>)
 80106e4:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80106e8:	600a      	str	r2, [r1, #0]
 80106ea:	4915      	ldr	r1, [pc, #84]	; (8010740 <enet_descriptors_chain_init+0x80>)
 80106ec:	600a      	str	r2, [r1, #0]
 80106ee:	f103 0110 	add.w	r1, r3, #16
 80106f2:	fb0e 4702 	mla	r7, lr, r2, r4
 80106f6:	f841 7c08 	str.w	r7, [r1, #-8]
 80106fa:	4594      	cmp	ip, r2
 80106fc:	bf94      	ite	ls
 80106fe:	461f      	movls	r7, r3
 8010700:	460f      	movhi	r7, r1
 8010702:	3201      	adds	r2, #1
 8010704:	4290      	cmp	r0, r2
 8010706:	e941 6504 	strd	r6, r5, [r1, #-16]
 801070a:	f841 7c04 	str.w	r7, [r1, #-4]
 801070e:	f101 0110 	add.w	r1, r1, #16
 8010712:	d1ee      	bne.n	80106f2 <enet_descriptors_chain_init+0x32>
 8010714:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010716:	4b0b      	ldr	r3, [pc, #44]	; (8010744 <enet_descriptors_chain_init+0x84>)
 8010718:	f244 55f4 	movw	r5, #17908	; 0x45f4
 801071c:	60d3      	str	r3, [r2, #12]
 801071e:	4a0a      	ldr	r2, [pc, #40]	; (8010748 <enet_descriptors_chain_init+0x88>)
 8010720:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8010724:	2004      	movs	r0, #4
 8010726:	4c09      	ldr	r4, [pc, #36]	; (801074c <enet_descriptors_chain_init+0x8c>)
 8010728:	6013      	str	r3, [r2, #0]
 801072a:	e7d7      	b.n	80106dc <enet_descriptors_chain_init+0x1c>
 801072c:	40029000 	andmi	r9, r2, r0
 8010730:	2000c00c 	andcs	ip, r0, ip
 8010734:	2000b424 	andcs	fp, r0, r4, lsr #8
 8010738:	20009bd4 	ldrdcs	r9, [r0], -r4
 801073c:	20009bc8 	andcs	r9, r0, r8, asr #23
 8010740:	20009bcc 	andcs	r9, r0, ip, asr #23
 8010744:	2000b3e4 	andcs	fp, r0, r4, ror #7
 8010748:	20009bd0 	ldrdcs	r9, [r0], -r0
 801074c:	20009c14 	andcs	r9, r0, r4, lsl ip

08010750 <enet_frame_receive>:
 8010750:	4a1d      	ldr	r2, [pc, #116]	; (80107c8 <enet_frame_receive+0x78>)
 8010752:	b510      	push	{r4, lr}
 8010754:	6813      	ldr	r3, [r2, #0]
 8010756:	681b      	ldr	r3, [r3, #0]
 8010758:	2b00      	cmp	r3, #0
 801075a:	db33      	blt.n	80107c4 <enet_frame_receive+0x74>
 801075c:	b970      	cbnz	r0, 801077c <enet_frame_receive+0x2c>
 801075e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8010762:	6813      	ldr	r3, [r2, #0]
 8010764:	6019      	str	r1, [r3, #0]
 8010766:	4919      	ldr	r1, [pc, #100]	; (80107cc <enet_frame_receive+0x7c>)
 8010768:	6948      	ldr	r0, [r1, #20]
 801076a:	0604      	lsls	r4, r0, #24
 801076c:	d419      	bmi.n	80107a2 <enet_frame_receive+0x52>
 801076e:	6859      	ldr	r1, [r3, #4]
 8010770:	0448      	lsls	r0, r1, #17
 8010772:	d51b      	bpl.n	80107ac <enet_frame_receive+0x5c>
 8010774:	68db      	ldr	r3, [r3, #12]
 8010776:	2001      	movs	r0, #1
 8010778:	6013      	str	r3, [r2, #0]
 801077a:	bd10      	pop	{r4, pc}
 801077c:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8010780:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8010784:	d11e      	bne.n	80107c4 <enet_frame_receive+0x74>
 8010786:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801078a:	3b04      	subs	r3, #4
 801078c:	428b      	cmp	r3, r1
 801078e:	d819      	bhi.n	80107c4 <enet_frame_receive+0x74>
 8010790:	2100      	movs	r1, #0
 8010792:	4299      	cmp	r1, r3
 8010794:	6814      	ldr	r4, [r2, #0]
 8010796:	d2e2      	bcs.n	801075e <enet_frame_receive+0xe>
 8010798:	68a4      	ldr	r4, [r4, #8]
 801079a:	5d0c      	ldrb	r4, [r1, r4]
 801079c:	5444      	strb	r4, [r0, r1]
 801079e:	3101      	adds	r1, #1
 80107a0:	e7f7      	b.n	8010792 <enet_frame_receive+0x42>
 80107a2:	2080      	movs	r0, #128	; 0x80
 80107a4:	6148      	str	r0, [r1, #20]
 80107a6:	2000      	movs	r0, #0
 80107a8:	6088      	str	r0, [r1, #8]
 80107aa:	e7e0      	b.n	801076e <enet_frame_receive+0x1e>
 80107ac:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 80107b0:	4906      	ldr	r1, [pc, #24]	; (80107cc <enet_frame_receive+0x7c>)
 80107b2:	bf05      	ittet	eq
 80107b4:	3310      	addeq	r3, #16
 80107b6:	6809      	ldreq	r1, [r1, #0]
 80107b8:	68cb      	ldrne	r3, [r1, #12]
 80107ba:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80107be:	bf08      	it	eq
 80107c0:	185b      	addeq	r3, r3, r1
 80107c2:	e7d8      	b.n	8010776 <enet_frame_receive+0x26>
 80107c4:	2000      	movs	r0, #0
 80107c6:	e7d8      	b.n	801077a <enet_frame_receive+0x2a>
 80107c8:	20009bd0 	ldrdcs	r9, [r0], -r0
 80107cc:	40029000 	andmi	r9, r2, r0

080107d0 <enet_frame_transmit>:
 80107d0:	4a1e      	ldr	r2, [pc, #120]	; (801084c <enet_frame_transmit+0x7c>)
 80107d2:	b530      	push	{r4, r5, lr}
 80107d4:	6813      	ldr	r3, [r2, #0]
 80107d6:	681b      	ldr	r3, [r3, #0]
 80107d8:	2b00      	cmp	r3, #0
 80107da:	db34      	blt.n	8010846 <enet_frame_transmit+0x76>
 80107dc:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80107e0:	4299      	cmp	r1, r3
 80107e2:	d830      	bhi.n	8010846 <enet_frame_transmit+0x76>
 80107e4:	b9e8      	cbnz	r0, 8010822 <enet_frame_transmit+0x52>
 80107e6:	6813      	ldr	r3, [r2, #0]
 80107e8:	4819      	ldr	r0, [pc, #100]	; (8010850 <enet_frame_transmit+0x80>)
 80107ea:	6059      	str	r1, [r3, #4]
 80107ec:	6819      	ldr	r1, [r3, #0]
 80107ee:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80107f2:	6019      	str	r1, [r3, #0]
 80107f4:	6941      	ldr	r1, [r0, #20]
 80107f6:	6944      	ldr	r4, [r0, #20]
 80107f8:	f001 0104 	and.w	r1, r1, #4
 80107fc:	f004 0420 	and.w	r4, r4, #32
 8010800:	4321      	orrs	r1, r4
 8010802:	d110      	bne.n	8010826 <enet_frame_transmit+0x56>
 8010804:	6819      	ldr	r1, [r3, #0]
 8010806:	02c8      	lsls	r0, r1, #11
 8010808:	d511      	bpl.n	801082e <enet_frame_transmit+0x5e>
 801080a:	68db      	ldr	r3, [r3, #12]
 801080c:	2001      	movs	r0, #1
 801080e:	6013      	str	r3, [r2, #0]
 8010810:	bd30      	pop	{r4, r5, pc}
 8010812:	5cc5      	ldrb	r5, [r0, r3]
 8010814:	68a4      	ldr	r4, [r4, #8]
 8010816:	551d      	strb	r5, [r3, r4]
 8010818:	3301      	adds	r3, #1
 801081a:	428b      	cmp	r3, r1
 801081c:	6814      	ldr	r4, [r2, #0]
 801081e:	d1f8      	bne.n	8010812 <enet_frame_transmit+0x42>
 8010820:	e7e1      	b.n	80107e6 <enet_frame_transmit+0x16>
 8010822:	2300      	movs	r3, #0
 8010824:	e7f9      	b.n	801081a <enet_frame_transmit+0x4a>
 8010826:	6141      	str	r1, [r0, #20]
 8010828:	2100      	movs	r1, #0
 801082a:	6041      	str	r1, [r0, #4]
 801082c:	e7ea      	b.n	8010804 <enet_frame_transmit+0x34>
 801082e:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8010832:	4907      	ldr	r1, [pc, #28]	; (8010850 <enet_frame_transmit+0x80>)
 8010834:	bf05      	ittet	eq
 8010836:	3310      	addeq	r3, #16
 8010838:	6809      	ldreq	r1, [r1, #0]
 801083a:	690b      	ldrne	r3, [r1, #16]
 801083c:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8010840:	bf08      	it	eq
 8010842:	185b      	addeq	r3, r3, r1
 8010844:	e7e2      	b.n	801080c <enet_frame_transmit+0x3c>
 8010846:	2000      	movs	r0, #0
 8010848:	e7e2      	b.n	8010810 <enet_frame_transmit+0x40>
 801084a:	bf00      	nop
 801084c:	20009bd4 	ldrdcs	r9, [r0], -r4
 8010850:	40029000 	andmi	r9, r2, r0

08010854 <enet_transmit_checksum_config>:
 8010854:	6803      	ldr	r3, [r0, #0]
 8010856:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801085a:	430b      	orrs	r3, r1
 801085c:	6003      	str	r3, [r0, #0]
 801085e:	4770      	bx	lr

08010860 <enet_mac_address_set>:
 8010860:	888a      	ldrh	r2, [r1, #4]
 8010862:	4b03      	ldr	r3, [pc, #12]	; (8010870 <enet_mac_address_set+0x10>)
 8010864:	50c2      	str	r2, [r0, r3]
 8010866:	680a      	ldr	r2, [r1, #0]
 8010868:	3304      	adds	r3, #4
 801086a:	50c2      	str	r2, [r0, r3]
 801086c:	4770      	bx	lr
 801086e:	bf00      	nop
 8010870:	40028040 	andmi	r8, r2, r0, asr #32

08010874 <enet_rx_enable>:
 8010874:	4a05      	ldr	r2, [pc, #20]	; (801088c <enet_rx_enable+0x18>)
 8010876:	6813      	ldr	r3, [r2, #0]
 8010878:	f043 0304 	orr.w	r3, r3, #4
 801087c:	6013      	str	r3, [r2, #0]
 801087e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8010882:	6993      	ldr	r3, [r2, #24]
 8010884:	f043 0302 	orr.w	r3, r3, #2
 8010888:	6193      	str	r3, [r2, #24]
 801088a:	4770      	bx	lr
 801088c:	40028000 	andmi	r8, r2, r0

08010890 <enet_phy_write_read>:
 8010890:	b530      	push	{r4, r5, lr}
 8010892:	4604      	mov	r4, r0
 8010894:	4d13      	ldr	r5, [pc, #76]	; (80108e4 <enet_phy_write_read+0x54>)
 8010896:	0192      	lsls	r2, r2, #6
 8010898:	6928      	ldr	r0, [r5, #16]
 801089a:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801089e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80108a2:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80108a6:	4302      	orrs	r2, r0
 80108a8:	02c9      	lsls	r1, r1, #11
 80108aa:	b289      	uxth	r1, r1
 80108ac:	2c02      	cmp	r4, #2
 80108ae:	ea42 0204 	orr.w	r2, r2, r4
 80108b2:	ea42 0201 	orr.w	r2, r2, r1
 80108b6:	bf08      	it	eq
 80108b8:	8819      	ldrheq	r1, [r3, #0]
 80108ba:	f042 0201 	orr.w	r2, r2, #1
 80108be:	bf08      	it	eq
 80108c0:	6169      	streq	r1, [r5, #20]
 80108c2:	612a      	str	r2, [r5, #16]
 80108c4:	4907      	ldr	r1, [pc, #28]	; (80108e4 <enet_phy_write_read+0x54>)
 80108c6:	4a08      	ldr	r2, [pc, #32]	; (80108e8 <enet_phy_write_read+0x58>)
 80108c8:	6908      	ldr	r0, [r1, #16]
 80108ca:	07c0      	lsls	r0, r0, #31
 80108cc:	d501      	bpl.n	80108d2 <enet_phy_write_read+0x42>
 80108ce:	3a01      	subs	r2, #1
 80108d0:	d1fa      	bne.n	80108c8 <enet_phy_write_read+0x38>
 80108d2:	690a      	ldr	r2, [r1, #16]
 80108d4:	43d2      	mvns	r2, r2
 80108d6:	f002 0001 	and.w	r0, r2, #1
 80108da:	b90c      	cbnz	r4, 80108e0 <enet_phy_write_read+0x50>
 80108dc:	694a      	ldr	r2, [r1, #20]
 80108de:	801a      	strh	r2, [r3, #0]
 80108e0:	bd30      	pop	{r4, r5, pc}
 80108e2:	bf00      	nop
 80108e4:	40028000 	andmi	r8, r2, r0
 80108e8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080108ec <enet_phy_config>:
 80108ec:	4b22      	ldr	r3, [pc, #136]	; (8010978 <enet_phy_config+0x8c>)
 80108ee:	b513      	push	{r0, r1, r4, lr}
 80108f0:	2001      	movs	r0, #1
 80108f2:	691c      	ldr	r4, [r3, #16]
 80108f4:	f7ff f80a 	bl	800f90c <rcu_clock_freq_get>
 80108f8:	4b20      	ldr	r3, [pc, #128]	; (801097c <enet_phy_config+0x90>)
 80108fa:	4a21      	ldr	r2, [pc, #132]	; (8010980 <enet_phy_config+0x94>)
 80108fc:	4403      	add	r3, r0
 80108fe:	4293      	cmp	r3, r2
 8010900:	f024 041c 	bic.w	r4, r4, #28
 8010904:	d220      	bcs.n	8010948 <enet_phy_config+0x5c>
 8010906:	f044 0408 	orr.w	r4, r4, #8
 801090a:	4b1b      	ldr	r3, [pc, #108]	; (8010978 <enet_phy_config+0x8c>)
 801090c:	2200      	movs	r2, #0
 801090e:	611c      	str	r4, [r3, #16]
 8010910:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010914:	2101      	movs	r1, #1
 8010916:	f8ad 3006 	strh.w	r3, [sp, #6]
 801091a:	2002      	movs	r0, #2
 801091c:	f10d 0306 	add.w	r3, sp, #6
 8010920:	f7ff ffb6 	bl	8010890 <enet_phy_write_read>
 8010924:	b310      	cbz	r0, 801096c <enet_phy_config+0x80>
 8010926:	2200      	movs	r2, #0
 8010928:	4816      	ldr	r0, [pc, #88]	; (8010984 <enet_phy_config+0x98>)
 801092a:	f7ff fea8 	bl	801067e <enet_delay>
 801092e:	2101      	movs	r1, #1
 8010930:	4610      	mov	r0, r2
 8010932:	f10d 0306 	add.w	r3, sp, #6
 8010936:	f7ff ffab 	bl	8010890 <enet_phy_write_read>
 801093a:	b1b8      	cbz	r0, 801096c <enet_phy_config+0x80>
 801093c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010940:	43c0      	mvns	r0, r0
 8010942:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8010946:	e012      	b.n	801096e <enet_phy_config+0x82>
 8010948:	4b0f      	ldr	r3, [pc, #60]	; (8010988 <enet_phy_config+0x9c>)
 801094a:	4a10      	ldr	r2, [pc, #64]	; (801098c <enet_phy_config+0xa0>)
 801094c:	4403      	add	r3, r0
 801094e:	4293      	cmp	r3, r2
 8010950:	d802      	bhi.n	8010958 <enet_phy_config+0x6c>
 8010952:	f044 040c 	orr.w	r4, r4, #12
 8010956:	e7d8      	b.n	801090a <enet_phy_config+0x1e>
 8010958:	4b0d      	ldr	r3, [pc, #52]	; (8010990 <enet_phy_config+0xa4>)
 801095a:	4a0e      	ldr	r2, [pc, #56]	; (8010994 <enet_phy_config+0xa8>)
 801095c:	4403      	add	r3, r0
 801095e:	4293      	cmp	r3, r2
 8010960:	d9d3      	bls.n	801090a <enet_phy_config+0x1e>
 8010962:	4b0d      	ldr	r3, [pc, #52]	; (8010998 <enet_phy_config+0xac>)
 8010964:	4a0d      	ldr	r2, [pc, #52]	; (801099c <enet_phy_config+0xb0>)
 8010966:	4403      	add	r3, r0
 8010968:	4293      	cmp	r3, r2
 801096a:	d902      	bls.n	8010972 <enet_phy_config+0x86>
 801096c:	2000      	movs	r0, #0
 801096e:	b002      	add	sp, #8
 8010970:	bd10      	pop	{r4, pc}
 8010972:	f044 0404 	orr.w	r4, r4, #4
 8010976:	e7c8      	b.n	801090a <enet_phy_config+0x1e>
 8010978:	40028000 	andmi	r8, r2, r0
 801097c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8010980:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8010984:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010988:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 801098c:	017d783f 	cmneq	sp, pc, lsr r8
 8010990:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8010994:	01c9c37f 	biceq	ip, r9, pc, ror r3
 8010998:	faa2b580 	blx	68bdfa0 <__stack_size+0x68bc7a0>
 801099c:	0112a880 	tsteq	r2, r0, lsl #17

080109a0 <enet_init>:
 80109a0:	2300      	movs	r3, #0
 80109a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80109a4:	4604      	mov	r4, r0
 80109a6:	460d      	mov	r5, r1
 80109a8:	4616      	mov	r6, r2
 80109aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109ae:	f7ff ff9d 	bl	80108ec <enet_phy_config>
 80109b2:	2800      	cmp	r0, #0
 80109b4:	d037      	beq.n	8010a26 <enet_init+0x86>
 80109b6:	4b3b      	ldr	r3, [pc, #236]	; (8010aa4 <enet_init+0x104>)
 80109b8:	4a3b      	ldr	r2, [pc, #236]	; (8010aa8 <enet_init+0x108>)
 80109ba:	6819      	ldr	r1, [r3, #0]
 80109bc:	2c01      	cmp	r4, #1
 80109be:	ea02 0201 	and.w	r2, r2, r1
 80109c2:	601a      	str	r2, [r3, #0]
 80109c4:	f04f 0200 	mov.w	r2, #0
 80109c8:	605a      	str	r2, [r3, #4]
 80109ca:	609a      	str	r2, [r3, #8]
 80109cc:	60da      	str	r2, [r3, #12]
 80109ce:	6999      	ldr	r1, [r3, #24]
 80109d0:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80109d4:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80109d8:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80109dc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80109e0:	6199      	str	r1, [r3, #24]
 80109e2:	4932      	ldr	r1, [pc, #200]	; (8010aac <enet_init+0x10c>)
 80109e4:	61da      	str	r2, [r3, #28]
 80109e6:	6988      	ldr	r0, [r1, #24]
 80109e8:	4b31      	ldr	r3, [pc, #196]	; (8010ab0 <enet_init+0x110>)
 80109ea:	ea03 0300 	and.w	r3, r3, r0
 80109ee:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80109f2:	618b      	str	r3, [r1, #24]
 80109f4:	680b      	ldr	r3, [r1, #0]
 80109f6:	4b2f      	ldr	r3, [pc, #188]	; (8010ab4 <enet_init+0x114>)
 80109f8:	600b      	str	r3, [r1, #0]
 80109fa:	d01e      	beq.n	8010a3a <enet_init+0x9a>
 80109fc:	08e3      	lsrs	r3, r4, #3
 80109fe:	0861      	lsrs	r1, r4, #1
 8010a00:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8010a04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010a08:	430b      	orrs	r3, r1
 8010a0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010a0e:	2101      	movs	r1, #1
 8010a10:	2002      	movs	r0, #2
 8010a12:	f10d 0306 	add.w	r3, sp, #6
 8010a16:	f7ff ff3b 	bl	8010890 <enet_phy_write_read>
 8010a1a:	b158      	cbz	r0, 8010a34 <enet_init+0x94>
 8010a1c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8010a20:	f7ff fe2d 	bl	801067e <enet_delay>
 8010a24:	e05f      	b.n	8010ae6 <enet_init+0x146>
 8010a26:	4824      	ldr	r0, [pc, #144]	; (8010ab8 <enet_init+0x118>)
 8010a28:	f7ff fe29 	bl	801067e <enet_delay>
 8010a2c:	f7ff ff5e 	bl	80108ec <enet_phy_config>
 8010a30:	2800      	cmp	r0, #0
 8010a32:	d1c0      	bne.n	80109b6 <enet_init+0x16>
 8010a34:	2000      	movs	r0, #0
 8010a36:	b003      	add	sp, #12
 8010a38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a3a:	4614      	mov	r4, r2
 8010a3c:	4f1f      	ldr	r7, [pc, #124]	; (8010abc <enet_init+0x11c>)
 8010a3e:	2201      	movs	r2, #1
 8010a40:	2000      	movs	r0, #0
 8010a42:	4611      	mov	r1, r2
 8010a44:	f10d 0306 	add.w	r3, sp, #6
 8010a48:	f7ff ff22 	bl	8010890 <enet_phy_write_read>
 8010a4c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a50:	3401      	adds	r4, #1
 8010a52:	f002 0204 	and.w	r2, r2, #4
 8010a56:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a5a:	b912      	cbnz	r2, 8010a62 <enet_init+0xc2>
 8010a5c:	42bc      	cmp	r4, r7
 8010a5e:	d1ee      	bne.n	8010a3e <enet_init+0x9e>
 8010a60:	e7e8      	b.n	8010a34 <enet_init+0x94>
 8010a62:	42bc      	cmp	r4, r7
 8010a64:	d0e6      	beq.n	8010a34 <enet_init+0x94>
 8010a66:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010a6a:	2101      	movs	r1, #1
 8010a6c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a70:	2002      	movs	r0, #2
 8010a72:	2200      	movs	r2, #0
 8010a74:	f7ff ff0c 	bl	8010890 <enet_phy_write_read>
 8010a78:	2800      	cmp	r0, #0
 8010a7a:	d0db      	beq.n	8010a34 <enet_init+0x94>
 8010a7c:	2400      	movs	r4, #0
 8010a7e:	4f0f      	ldr	r7, [pc, #60]	; (8010abc <enet_init+0x11c>)
 8010a80:	2201      	movs	r2, #1
 8010a82:	2000      	movs	r0, #0
 8010a84:	4611      	mov	r1, r2
 8010a86:	f10d 0306 	add.w	r3, sp, #6
 8010a8a:	f7ff ff01 	bl	8010890 <enet_phy_write_read>
 8010a8e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010a92:	3401      	adds	r4, #1
 8010a94:	f002 0220 	and.w	r2, r2, #32
 8010a98:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a9c:	b982      	cbnz	r2, 8010ac0 <enet_init+0x120>
 8010a9e:	42bc      	cmp	r4, r7
 8010aa0:	d1ee      	bne.n	8010a80 <enet_init+0xe0>
 8010aa2:	e7c7      	b.n	8010a34 <enet_init+0x94>
 8010aa4:	40028000 	andmi	r8, r2, r0
 8010aa8:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8010aac:	40029000 	andmi	r9, r2, r0
 8010ab0:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8010ab4:	02c16000 	sbceq	r6, r1, #0
 8010ab8:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8010abc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8010ac0:	42bc      	cmp	r4, r7
 8010ac2:	d0b7      	beq.n	8010a34 <enet_init+0x94>
 8010ac4:	2101      	movs	r1, #1
 8010ac6:	2210      	movs	r2, #16
 8010ac8:	2000      	movs	r0, #0
 8010aca:	f7ff fee1 	bl	8010890 <enet_phy_write_read>
 8010ace:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010ad2:	f013 0f04 	tst.w	r3, #4
 8010ad6:	bf14      	ite	ne
 8010ad8:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8010adc:	2400      	moveq	r4, #0
 8010ade:	0799      	lsls	r1, r3, #30
 8010ae0:	d401      	bmi.n	8010ae6 <enet_init+0x146>
 8010ae2:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8010ae6:	4b64      	ldr	r3, [pc, #400]	; (8010c78 <enet_init+0x2d8>)
 8010ae8:	056a      	lsls	r2, r5, #21
 8010aea:	6818      	ldr	r0, [r3, #0]
 8010aec:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8010af0:	ea44 0400 	orr.w	r4, r4, r0
 8010af4:	601c      	str	r4, [r3, #0]
 8010af6:	d50c      	bpl.n	8010b12 <enet_init+0x172>
 8010af8:	681a      	ldr	r2, [r3, #0]
 8010afa:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8010afe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8010b02:	601a      	str	r2, [r3, #0]
 8010b04:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8010b08:	6999      	ldr	r1, [r3, #24]
 8010b0a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8010b0e:	430d      	orrs	r5, r1
 8010b10:	619d      	str	r5, [r3, #24]
 8010b12:	4959      	ldr	r1, [pc, #356]	; (8010c78 <enet_init+0x2d8>)
 8010b14:	4b59      	ldr	r3, [pc, #356]	; (8010c7c <enet_init+0x2dc>)
 8010b16:	684a      	ldr	r2, [r1, #4]
 8010b18:	4316      	orrs	r6, r2
 8010b1a:	604e      	str	r6, [r1, #4]
 8010b1c:	681a      	ldr	r2, [r3, #0]
 8010b1e:	07d7      	lsls	r7, r2, #31
 8010b20:	d510      	bpl.n	8010b44 <enet_init+0x1a4>
 8010b22:	685a      	ldr	r2, [r3, #4]
 8010b24:	680c      	ldr	r4, [r1, #0]
 8010b26:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8010b2a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8010b2e:	4320      	orrs	r0, r4
 8010b30:	6008      	str	r0, [r1, #0]
 8010b32:	4853      	ldr	r0, [pc, #332]	; (8010c80 <enet_init+0x2e0>)
 8010b34:	0892      	lsrs	r2, r2, #2
 8010b36:	6981      	ldr	r1, [r0, #24]
 8010b38:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8010b3c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8010b40:	430a      	orrs	r2, r1
 8010b42:	6182      	str	r2, [r0, #24]
 8010b44:	681a      	ldr	r2, [r3, #0]
 8010b46:	0796      	lsls	r6, r2, #30
 8010b48:	d508      	bpl.n	8010b5c <enet_init+0x1bc>
 8010b4a:	494d      	ldr	r1, [pc, #308]	; (8010c80 <enet_init+0x2e0>)
 8010b4c:	6898      	ldr	r0, [r3, #8]
 8010b4e:	680a      	ldr	r2, [r1, #0]
 8010b50:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8010b54:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8010b58:	4302      	orrs	r2, r0
 8010b5a:	600a      	str	r2, [r1, #0]
 8010b5c:	681a      	ldr	r2, [r3, #0]
 8010b5e:	0755      	lsls	r5, r2, #29
 8010b60:	d508      	bpl.n	8010b74 <enet_init+0x1d4>
 8010b62:	4947      	ldr	r1, [pc, #284]	; (8010c80 <enet_init+0x2e0>)
 8010b64:	68d8      	ldr	r0, [r3, #12]
 8010b66:	680a      	ldr	r2, [r1, #0]
 8010b68:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8010b6c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8010b70:	4302      	orrs	r2, r0
 8010b72:	600a      	str	r2, [r1, #0]
 8010b74:	681a      	ldr	r2, [r3, #0]
 8010b76:	0714      	lsls	r4, r2, #28
 8010b78:	d508      	bpl.n	8010b8c <enet_init+0x1ec>
 8010b7a:	4941      	ldr	r1, [pc, #260]	; (8010c80 <enet_init+0x2e0>)
 8010b7c:	6918      	ldr	r0, [r3, #16]
 8010b7e:	680a      	ldr	r2, [r1, #0]
 8010b80:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8010b84:	f022 0202 	bic.w	r2, r2, #2
 8010b88:	4302      	orrs	r2, r0
 8010b8a:	600a      	str	r2, [r1, #0]
 8010b8c:	681a      	ldr	r2, [r3, #0]
 8010b8e:	06d0      	lsls	r0, r2, #27
 8010b90:	d506      	bpl.n	8010ba0 <enet_init+0x200>
 8010b92:	493b      	ldr	r1, [pc, #236]	; (8010c80 <enet_init+0x2e0>)
 8010b94:	4a3b      	ldr	r2, [pc, #236]	; (8010c84 <enet_init+0x2e4>)
 8010b96:	6988      	ldr	r0, [r1, #24]
 8010b98:	4002      	ands	r2, r0
 8010b9a:	6958      	ldr	r0, [r3, #20]
 8010b9c:	4302      	orrs	r2, r0
 8010b9e:	618a      	str	r2, [r1, #24]
 8010ba0:	681a      	ldr	r2, [r3, #0]
 8010ba2:	0691      	lsls	r1, r2, #26
 8010ba4:	d508      	bpl.n	8010bb8 <enet_init+0x218>
 8010ba6:	4936      	ldr	r1, [pc, #216]	; (8010c80 <enet_init+0x2e0>)
 8010ba8:	6998      	ldr	r0, [r3, #24]
 8010baa:	698a      	ldr	r2, [r1, #24]
 8010bac:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8010bb0:	f022 0204 	bic.w	r2, r2, #4
 8010bb4:	4302      	orrs	r2, r0
 8010bb6:	618a      	str	r2, [r1, #24]
 8010bb8:	681a      	ldr	r2, [r3, #0]
 8010bba:	0652      	lsls	r2, r2, #25
 8010bbc:	d506      	bpl.n	8010bcc <enet_init+0x22c>
 8010bbe:	492e      	ldr	r1, [pc, #184]	; (8010c78 <enet_init+0x2d8>)
 8010bc0:	69d8      	ldr	r0, [r3, #28]
 8010bc2:	69ca      	ldr	r2, [r1, #28]
 8010bc4:	0c52      	lsrs	r2, r2, #17
 8010bc6:	0452      	lsls	r2, r2, #17
 8010bc8:	4302      	orrs	r2, r0
 8010bca:	61ca      	str	r2, [r1, #28]
 8010bcc:	681a      	ldr	r2, [r3, #0]
 8010bce:	0617      	lsls	r7, r2, #24
 8010bd0:	d517      	bpl.n	8010c02 <enet_init+0x262>
 8010bd2:	4c29      	ldr	r4, [pc, #164]	; (8010c78 <enet_init+0x2d8>)
 8010bd4:	6a1a      	ldr	r2, [r3, #32]
 8010bd6:	69a0      	ldr	r0, [r4, #24]
 8010bd8:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8010bdc:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8010be0:	0400      	lsls	r0, r0, #16
 8010be2:	0c00      	lsrs	r0, r0, #16
 8010be4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8010be8:	4301      	orrs	r1, r0
 8010bea:	4825      	ldr	r0, [pc, #148]	; (8010c80 <enet_init+0x2e0>)
 8010bec:	61a1      	str	r1, [r4, #24]
 8010bee:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8010bf2:	0a12      	lsrs	r2, r2, #8
 8010bf4:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8010bf8:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8010bfc:	430a      	orrs	r2, r1
 8010bfe:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8010c02:	681a      	ldr	r2, [r3, #0]
 8010c04:	05d6      	lsls	r6, r2, #23
 8010c06:	bf42      	ittt	mi
 8010c08:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8010c0a:	4a1b      	ldrmi	r2, [pc, #108]	; (8010c78 <enet_init+0x2d8>)
 8010c0c:	6091      	strmi	r1, [r2, #8]
 8010c0e:	681a      	ldr	r2, [r3, #0]
 8010c10:	0595      	lsls	r5, r2, #22
 8010c12:	bf42      	ittt	mi
 8010c14:	4a18      	ldrmi	r2, [pc, #96]	; (8010c78 <enet_init+0x2d8>)
 8010c16:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8010c18:	60d1      	strmi	r1, [r2, #12]
 8010c1a:	681a      	ldr	r2, [r3, #0]
 8010c1c:	0554      	lsls	r4, r2, #21
 8010c1e:	d508      	bpl.n	8010c32 <enet_init+0x292>
 8010c20:	4915      	ldr	r1, [pc, #84]	; (8010c78 <enet_init+0x2d8>)
 8010c22:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8010c24:	684a      	ldr	r2, [r1, #4]
 8010c26:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8010c2a:	f022 0206 	bic.w	r2, r2, #6
 8010c2e:	4302      	orrs	r2, r0
 8010c30:	604a      	str	r2, [r1, #4]
 8010c32:	681a      	ldr	r2, [r3, #0]
 8010c34:	0510      	lsls	r0, r2, #20
 8010c36:	d508      	bpl.n	8010c4a <enet_init+0x2aa>
 8010c38:	490f      	ldr	r1, [pc, #60]	; (8010c78 <enet_init+0x2d8>)
 8010c3a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8010c3c:	680a      	ldr	r2, [r1, #0]
 8010c3e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8010c42:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8010c46:	4302      	orrs	r2, r0
 8010c48:	600a      	str	r2, [r1, #0]
 8010c4a:	681a      	ldr	r2, [r3, #0]
 8010c4c:	04d1      	lsls	r1, r2, #19
 8010c4e:	d506      	bpl.n	8010c5e <enet_init+0x2be>
 8010c50:	4909      	ldr	r1, [pc, #36]	; (8010c78 <enet_init+0x2d8>)
 8010c52:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010c54:	680a      	ldr	r2, [r1, #0]
 8010c56:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8010c5a:	4302      	orrs	r2, r0
 8010c5c:	600a      	str	r2, [r1, #0]
 8010c5e:	681a      	ldr	r2, [r3, #0]
 8010c60:	0492      	lsls	r2, r2, #18
 8010c62:	d506      	bpl.n	8010c72 <enet_init+0x2d2>
 8010c64:	4904      	ldr	r1, [pc, #16]	; (8010c78 <enet_init+0x2d8>)
 8010c66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010c68:	680a      	ldr	r2, [r1, #0]
 8010c6a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8010c6e:	4313      	orrs	r3, r2
 8010c70:	600b      	str	r3, [r1, #0]
 8010c72:	2001      	movs	r0, #1
 8010c74:	e6df      	b.n	8010a36 <enet_init+0x96>
 8010c76:	bf00      	nop
 8010c78:	40028000 	andmi	r8, r2, r0
 8010c7c:	20009bd8 	ldrdcs	r9, [r0], -r8
 8010c80:	40029000 	andmi	r9, r2, r0
 8010c84:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08010c88 <enet_txfifo_flush>:
 8010c88:	4b06      	ldr	r3, [pc, #24]	; (8010ca4 <enet_txfifo_flush+0x1c>)
 8010c8a:	4807      	ldr	r0, [pc, #28]	; (8010ca8 <enet_txfifo_flush+0x20>)
 8010c8c:	699a      	ldr	r2, [r3, #24]
 8010c8e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8010c92:	619a      	str	r2, [r3, #24]
 8010c94:	699a      	ldr	r2, [r3, #24]
 8010c96:	02d2      	lsls	r2, r2, #11
 8010c98:	d502      	bpl.n	8010ca0 <enet_txfifo_flush+0x18>
 8010c9a:	3801      	subs	r0, #1
 8010c9c:	d1fa      	bne.n	8010c94 <enet_txfifo_flush+0xc>
 8010c9e:	4770      	bx	lr
 8010ca0:	2001      	movs	r0, #1
 8010ca2:	4770      	bx	lr
 8010ca4:	40029000 	andmi	r9, r2, r0
 8010ca8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08010cac <enet_tx_enable>:
 8010cac:	4a06      	ldr	r2, [pc, #24]	; (8010cc8 <enet_tx_enable+0x1c>)
 8010cae:	b508      	push	{r3, lr}
 8010cb0:	6813      	ldr	r3, [r2, #0]
 8010cb2:	f043 0308 	orr.w	r3, r3, #8
 8010cb6:	6013      	str	r3, [r2, #0]
 8010cb8:	f7ff ffe6 	bl	8010c88 <enet_txfifo_flush>
 8010cbc:	4a03      	ldr	r2, [pc, #12]	; (8010ccc <enet_tx_enable+0x20>)
 8010cbe:	6993      	ldr	r3, [r2, #24]
 8010cc0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8010cc4:	6193      	str	r3, [r2, #24]
 8010cc6:	bd08      	pop	{r3, pc}
 8010cc8:	40028000 	andmi	r8, r2, r0
 8010ccc:	40029000 	andmi	r9, r2, r0

08010cd0 <enet_enable>:
 8010cd0:	b508      	push	{r3, lr}
 8010cd2:	f7ff ffeb 	bl	8010cac <enet_tx_enable>
 8010cd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010cda:	f7ff bdcb 	b.w	8010874 <enet_rx_enable>

08010cde <enet_desc_information_get>:
 8010cde:	2905      	cmp	r1, #5
 8010ce0:	d817      	bhi.n	8010d12 <enet_desc_information_get+0x34>
 8010ce2:	e8df f001 	tbb	[pc, r1]
 8010ce6:	03091012 	movweq	r1, #36882	; 0x9012
 8010cea:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8010cee:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010cf2:	4770      	bx	lr
 8010cf4:	88c0      	ldrh	r0, [r0, #6]
 8010cf6:	e7fa      	b.n	8010cee <enet_desc_information_get+0x10>
 8010cf8:	8840      	ldrh	r0, [r0, #2]
 8010cfa:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8010cfe:	2804      	cmp	r0, #4
 8010d00:	d90a      	bls.n	8010d18 <enet_desc_information_get+0x3a>
 8010d02:	3804      	subs	r0, #4
 8010d04:	4770      	bx	lr
 8010d06:	6880      	ldr	r0, [r0, #8]
 8010d08:	4770      	bx	lr
 8010d0a:	6800      	ldr	r0, [r0, #0]
 8010d0c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8010d10:	4770      	bx	lr
 8010d12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010d16:	4770      	bx	lr
 8010d18:	2000      	movs	r0, #0
 8010d1a:	4770      	bx	lr

08010d1c <enet_rxframe_drop>:
 8010d1c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8010d20:	4814      	ldr	r0, [pc, #80]	; (8010d74 <enet_rxframe_drop+0x58>)
 8010d22:	b510      	push	{r4, lr}
 8010d24:	6802      	ldr	r2, [r0, #0]
 8010d26:	4914      	ldr	r1, [pc, #80]	; (8010d78 <enet_rxframe_drop+0x5c>)
 8010d28:	6854      	ldr	r4, [r2, #4]
 8010d2a:	6013      	str	r3, [r2, #0]
 8010d2c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8010d30:	680b      	ldr	r3, [r1, #0]
 8010d32:	d009      	beq.n	8010d48 <enet_rxframe_drop+0x2c>
 8010d34:	b12b      	cbz	r3, 8010d42 <enet_rxframe_drop+0x26>
 8010d36:	68da      	ldr	r2, [r3, #12]
 8010d38:	6002      	str	r2, [r0, #0]
 8010d3a:	681a      	ldr	r2, [r3, #0]
 8010d3c:	b1ba      	cbz	r2, 8010d6e <enet_rxframe_drop+0x52>
 8010d3e:	600a      	str	r2, [r1, #0]
 8010d40:	bd10      	pop	{r4, pc}
 8010d42:	68d3      	ldr	r3, [r2, #12]
 8010d44:	6003      	str	r3, [r0, #0]
 8010d46:	e7fb      	b.n	8010d40 <enet_rxframe_drop+0x24>
 8010d48:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8010d4c:	4c0b      	ldr	r4, [pc, #44]	; (8010d7c <enet_rxframe_drop+0x60>)
 8010d4e:	d006      	beq.n	8010d5e <enet_rxframe_drop+0x42>
 8010d50:	68e2      	ldr	r2, [r4, #12]
 8010d52:	6002      	str	r2, [r0, #0]
 8010d54:	2b00      	cmp	r3, #0
 8010d56:	d0f3      	beq.n	8010d40 <enet_rxframe_drop+0x24>
 8010d58:	681b      	ldr	r3, [r3, #0]
 8010d5a:	600b      	str	r3, [r1, #0]
 8010d5c:	e7f0      	b.n	8010d40 <enet_rxframe_drop+0x24>
 8010d5e:	6824      	ldr	r4, [r4, #0]
 8010d60:	3210      	adds	r2, #16
 8010d62:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8010d66:	4422      	add	r2, r4
 8010d68:	6002      	str	r2, [r0, #0]
 8010d6a:	2b00      	cmp	r3, #0
 8010d6c:	d0e8      	beq.n	8010d40 <enet_rxframe_drop+0x24>
 8010d6e:	3310      	adds	r3, #16
 8010d70:	e7f3      	b.n	8010d5a <enet_rxframe_drop+0x3e>
 8010d72:	bf00      	nop
 8010d74:	20009bd0 	ldrdcs	r9, [r0], -r0
 8010d78:	20009bc8 	andcs	r9, r0, r8, asr #23
 8010d7c:	40029000 	andmi	r9, r2, r0

08010d80 <enet_rxframe_size_get>:
 8010d80:	b508      	push	{r3, lr}
 8010d82:	4b0c      	ldr	r3, [pc, #48]	; (8010db4 <enet_rxframe_size_get+0x34>)
 8010d84:	681b      	ldr	r3, [r3, #0]
 8010d86:	6818      	ldr	r0, [r3, #0]
 8010d88:	2800      	cmp	r0, #0
 8010d8a:	db10      	blt.n	8010dae <enet_rxframe_size_get+0x2e>
 8010d8c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8010d90:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010d94:	d003      	beq.n	8010d9e <enet_rxframe_size_get+0x1e>
 8010d96:	f7ff ffc1 	bl	8010d1c <enet_rxframe_drop>
 8010d9a:	2001      	movs	r0, #1
 8010d9c:	bd08      	pop	{r3, pc}
 8010d9e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8010da2:	2b21      	cmp	r3, #33	; 0x21
 8010da4:	d0f7      	beq.n	8010d96 <enet_rxframe_size_get+0x16>
 8010da6:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8010daa:	3804      	subs	r0, #4
 8010dac:	e7f6      	b.n	8010d9c <enet_rxframe_size_get+0x1c>
 8010dae:	2000      	movs	r0, #0
 8010db0:	e7f4      	b.n	8010d9c <enet_rxframe_size_get+0x1c>
 8010db2:	bf00      	nop
 8010db4:	20009bd0 	ldrdcs	r9, [r0], -r0

08010db8 <enet_initpara_reset>:
 8010db8:	2200      	movs	r2, #0
 8010dba:	4b08      	ldr	r3, [pc, #32]	; (8010ddc <enet_initpara_reset+0x24>)
 8010dbc:	e9c3 2200 	strd	r2, r2, [r3]
 8010dc0:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8010dc4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8010dc8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8010dcc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8010dd0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8010dd4:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8010dd8:	639a      	str	r2, [r3, #56]	; 0x38
 8010dda:	4770      	bx	lr
 8010ddc:	20009bd8 	ldrdcs	r9, [r0], -r8

08010de0 <enet_deinit>:
 8010de0:	b508      	push	{r3, lr}
 8010de2:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010de6:	f7fe fcd8 	bl	800f79a <rcu_periph_reset_enable>
 8010dea:	f640 200e 	movw	r0, #2574	; 0xa0e
 8010dee:	f7fe fcd6 	bl	800f79e <rcu_periph_reset_disable>
 8010df2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010df6:	f7ff bfdf 	b.w	8010db8 <enet_initpara_reset>
	...

08010dfc <i2c_clock_config>:
 8010dfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010dfe:	4605      	mov	r5, r0
 8010e00:	2002      	movs	r0, #2
 8010e02:	460c      	mov	r4, r1
 8010e04:	4617      	mov	r7, r2
 8010e06:	f7fe fd81 	bl	800f90c <rcu_clock_freq_get>
 8010e0a:	4927      	ldr	r1, [pc, #156]	; (8010ea8 <i2c_clock_config+0xac>)
 8010e0c:	4a27      	ldr	r2, [pc, #156]	; (8010eac <i2c_clock_config+0xb0>)
 8010e0e:	fbb0 f1f1 	udiv	r1, r0, r1
 8010e12:	4290      	cmp	r0, r2
 8010e14:	bf34      	ite	cc
 8010e16:	460b      	movcc	r3, r1
 8010e18:	2336      	movcs	r3, #54	; 0x36
 8010e1a:	686e      	ldr	r6, [r5, #4]
 8010e1c:	4a24      	ldr	r2, [pc, #144]	; (8010eb0 <i2c_clock_config+0xb4>)
 8010e1e:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8010e22:	431e      	orrs	r6, r3
 8010e24:	4294      	cmp	r4, r2
 8010e26:	606e      	str	r6, [r5, #4]
 8010e28:	d816      	bhi.n	8010e58 <i2c_clock_config+0x5c>
 8010e2a:	3101      	adds	r1, #1
 8010e2c:	2935      	cmp	r1, #53	; 0x35
 8010e2e:	d90d      	bls.n	8010e4c <i2c_clock_config+0x50>
 8010e30:	2336      	movs	r3, #54	; 0x36
 8010e32:	622b      	str	r3, [r5, #32]
 8010e34:	0064      	lsls	r4, r4, #1
 8010e36:	fbb0 f4f4 	udiv	r4, r0, r4
 8010e3a:	2c04      	cmp	r4, #4
 8010e3c:	bf38      	it	cc
 8010e3e:	2404      	movcc	r4, #4
 8010e40:	69e8      	ldr	r0, [r5, #28]
 8010e42:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8010e46:	4304      	orrs	r4, r0
 8010e48:	61ec      	str	r4, [r5, #28]
 8010e4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010e4c:	2902      	cmp	r1, #2
 8010e4e:	d801      	bhi.n	8010e54 <i2c_clock_config+0x58>
 8010e50:	2302      	movs	r3, #2
 8010e52:	e7ee      	b.n	8010e32 <i2c_clock_config+0x36>
 8010e54:	6229      	str	r1, [r5, #32]
 8010e56:	e7ed      	b.n	8010e34 <i2c_clock_config+0x38>
 8010e58:	4a16      	ldr	r2, [pc, #88]	; (8010eb4 <i2c_clock_config+0xb8>)
 8010e5a:	4294      	cmp	r4, r2
 8010e5c:	d8f5      	bhi.n	8010e4a <i2c_clock_config+0x4e>
 8010e5e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8010e62:	4353      	muls	r3, r2
 8010e64:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8010e68:	fbb3 f3f2 	udiv	r3, r3, r2
 8010e6c:	3301      	adds	r3, #1
 8010e6e:	622b      	str	r3, [r5, #32]
 8010e70:	b997      	cbnz	r7, 8010e98 <i2c_clock_config+0x9c>
 8010e72:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010e76:	fbb0 f4f4 	udiv	r4, r0, r4
 8010e7a:	69eb      	ldr	r3, [r5, #28]
 8010e7c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8010e80:	61eb      	str	r3, [r5, #28]
 8010e82:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8010e86:	b90b      	cbnz	r3, 8010e8c <i2c_clock_config+0x90>
 8010e88:	f044 0401 	orr.w	r4, r4, #1
 8010e8c:	69eb      	ldr	r3, [r5, #28]
 8010e8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8010e92:	61eb      	str	r3, [r5, #28]
 8010e94:	69e8      	ldr	r0, [r5, #28]
 8010e96:	e7d6      	b.n	8010e46 <i2c_clock_config+0x4a>
 8010e98:	2119      	movs	r1, #25
 8010e9a:	434c      	muls	r4, r1
 8010e9c:	69eb      	ldr	r3, [r5, #28]
 8010e9e:	fbb0 f4f4 	udiv	r4, r0, r4
 8010ea2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8010ea6:	e7eb      	b.n	8010e80 <i2c_clock_config+0x84>
 8010ea8:	000f4240 	andeq	r4, pc, r0, asr #4
 8010eac:	0337f980 	teqeq	r7, #128, 18	; 0x200000	; <UNPREDICTABLE>
 8010eb0:	000186a0 	andeq	r8, r1, r0, lsr #13
 8010eb4:	00061a80 	andeq	r1, r6, r0, lsl #21

08010eb8 <i2c_ack_config>:
 8010eb8:	6803      	ldr	r3, [r0, #0]
 8010eba:	2901      	cmp	r1, #1
 8010ebc:	bf0c      	ite	eq
 8010ebe:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8010ec2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8010ec6:	6003      	str	r3, [r0, #0]
 8010ec8:	4770      	bx	lr

08010eca <i2c_ackpos_config>:
 8010eca:	6803      	ldr	r3, [r0, #0]
 8010ecc:	b919      	cbnz	r1, 8010ed6 <i2c_ackpos_config+0xc>
 8010ece:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8010ed2:	6003      	str	r3, [r0, #0]
 8010ed4:	4770      	bx	lr
 8010ed6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8010eda:	e7fa      	b.n	8010ed2 <i2c_ackpos_config+0x8>

08010edc <i2c_master_addressing>:
 8010edc:	3202      	adds	r2, #2
 8010ede:	bf0c      	ite	eq
 8010ee0:	f021 0101 	biceq.w	r1, r1, #1
 8010ee4:	f041 0101 	orrne.w	r1, r1, #1
 8010ee8:	6101      	str	r1, [r0, #16]
 8010eea:	4770      	bx	lr

08010eec <i2c_enable>:
 8010eec:	6803      	ldr	r3, [r0, #0]
 8010eee:	f043 0301 	orr.w	r3, r3, #1
 8010ef2:	6003      	str	r3, [r0, #0]
 8010ef4:	4770      	bx	lr

08010ef6 <i2c_start_on_bus>:
 8010ef6:	6803      	ldr	r3, [r0, #0]
 8010ef8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8010efc:	6003      	str	r3, [r0, #0]
 8010efe:	4770      	bx	lr

08010f00 <i2c_stop_on_bus>:
 8010f00:	6803      	ldr	r3, [r0, #0]
 8010f02:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8010f06:	6003      	str	r3, [r0, #0]
 8010f08:	4770      	bx	lr

08010f0a <i2c_data_transmit>:
 8010f0a:	6101      	str	r1, [r0, #16]
 8010f0c:	4770      	bx	lr

08010f0e <i2c_data_receive>:
 8010f0e:	6900      	ldr	r0, [r0, #16]
 8010f10:	b2c0      	uxtb	r0, r0
 8010f12:	4770      	bx	lr

08010f14 <i2c_flag_get>:
 8010f14:	098b      	lsrs	r3, r1, #6
 8010f16:	5818      	ldr	r0, [r3, r0]
 8010f18:	f001 011f 	and.w	r1, r1, #31
 8010f1c:	40c8      	lsrs	r0, r1
 8010f1e:	f000 0001 	and.w	r0, r0, #1
 8010f22:	4770      	bx	lr

08010f24 <i2c_flag_clear>:
 8010f24:	f240 5301 	movw	r3, #1281	; 0x501
 8010f28:	4299      	cmp	r1, r3
 8010f2a:	b510      	push	{r4, lr}
 8010f2c:	d102      	bne.n	8010f34 <i2c_flag_clear+0x10>
 8010f2e:	6943      	ldr	r3, [r0, #20]
 8010f30:	6983      	ldr	r3, [r0, #24]
 8010f32:	bd10      	pop	{r4, pc}
 8010f34:	2201      	movs	r2, #1
 8010f36:	098c      	lsrs	r4, r1, #6
 8010f38:	5823      	ldr	r3, [r4, r0]
 8010f3a:	f001 011f 	and.w	r1, r1, #31
 8010f3e:	fa02 f101 	lsl.w	r1, r2, r1
 8010f42:	ea23 0101 	bic.w	r1, r3, r1
 8010f46:	5021      	str	r1, [r4, r0]
 8010f48:	e7f3      	b.n	8010f32 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08010f4c <vtable for DisplayHandler-0xe0>:
	...
 8010f54:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f58:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8010f5c:	00000000 	andeq	r0, r0, r0
 8010f60:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8010f64:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8010f68:	37333a37 			; <UNDEFINED> instruction: 0x37333a37
 8010f6c:	62654600 	rsbvs	r4, r5, #0, 12
 8010f70:	20333220 	eorscs	r3, r3, r0, lsr #4
 8010f74:	32323032 	eorscc	r3, r2, #50	; 0x32
 8010f78:	43534f00 	cmpmi	r3, #0, 30
 8010f7c:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010f80:	20726576 	rsbscs	r6, r2, r6, ror r5
 8010f84:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8010f88:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8010f8c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8010f90:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8010dc8 <enet_initpara_reset+0x10>
 8010f94:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8010f98:	2078317b 	rsbscs	r3, r8, fp, ror r1
 8010f9c:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8010fa0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8010fa4:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8010fa8:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8010fac:	63736f5f 	cmnvs	r3, #380	; 0x17c
 8010fb0:	70797400 	rsbsvc	r7, r9, r0, lsl #8
 8010fb4:	65733d65 	ldrbvs	r3, [r3, #-3429]!	; 0xfffff29b
 8010fb8:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8010fbc:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8010fc0:	00707474 	rsbseq	r7, r0, r4, ror r4
 8010fc4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8010fc8:	43534f3d 	cmpmi	r3, #61, 30	; 0xf4
 8010fcc:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8010fd0:	00726576 	rsbseq	r6, r2, r6, ror r5
 8010fd4:	2043534f 	subcs	r5, r3, pc, asr #6
 8010fd8:	20584d44 	subscs	r4, r8, r4, asr #26
 8010fdc:	44470031 	strbmi	r0, [r7], #-49	; 0xffffffcf
 8010fe0:	31463233 	cmpcc	r6, r3, lsr r2
 8010fe4:	00523730 	subseq	r3, r2, r0, lsr r7
 8010fe8:	203a5049 	eorscs	r5, sl, r9, asr #32
 8010fec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8010ff0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8010ff4:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8010ff8:	49006325 	stmdbmi	r0, {r0, r2, r5, r8, r9, sp, lr}
 8010ffc:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
 8011000:	754f0064 	strbvc	r0, [pc, #-100]	; 8010fa4 <_etext+0x58>
 8011004:	25203a74 	strcs	r3, [r0, #-2676]!	; 0xfffff58c
 8011008:	6d640064 	stclvs	0, cr0, [r4, #-400]!	; 0xfffffe70
 801100c:	62002178 	andvs	r2, r0, #120, 2
 8011010:	6b616572 	blvs	986a5e0 <__exidx_end+0x1857b40>
 8011014:	616d0023 	cmnvs	sp, r3, lsr #32
 8011018:	72002362 	andvc	r2, r0, #-2013265919	; 0x88000001
 801101c:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
 8011020:	00236873 	eoreq	r6, r3, r3, ror r8
 8011024:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801102c <vtable for DisplayHandler>
 8011028:	00002373 	andeq	r2, r0, r3, ror r3

0801102c <vtable for DisplayHandler>:
	...
 8011034:	08008123 	stmdaeq	r0, {r0, r1, r5, r8, pc}
 8011038:	08008147 	stmdaeq	r0, {r0, r1, r2, r6, r8, pc}
 801103c:	0800818d 	stmdaeq	r0, {r0, r2, r3, r7, r8, pc}

08011040 <CSWTCH.85>:
 8011040:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8011044:	 			; <UNDEFINED> instruction: 0x312e3146

08011045 <SOFTWARE_VERSION>:
 8011045:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8011049:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 801104d:	642f0031 	strtvs	r0, [pc], #-49	; 8011055 <SOFTWARE_VERSION+0x10>
 8011051:	2f31786d 	svccs	0x0031786d
 8011055:	322f002a 	eorcc	r0, pc, #42	; 0x2a
 8011059:	6d642f00 	stclvs	15, cr2, [r4, #-0]
 801105d:	622f3178 	eorvs	r3, pc, #120, 2
 8011061:	6b63616c 	blvs	98e9619 <__exidx_end+0x18d6b79>
 8011065:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8011069:	00302e31 	eorseq	r2, r0, r1, lsr lr
 801106d:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
 8011071:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
 8011075:	33444700 	movtcc	r4, #18176	; 0x4700
 8011079:	2f004632 	svccs	0x00004632
 801107d:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 8011081:	6f702f00 	svcvs	0x00702f00
 8011085:	2f00676e 	svccs	0x0000676e
 8011089:	6f666e69 	svcvs	0x00666e69
 801108d:	00736f2f 	rsbseq	r6, r3, pc, lsr #30
 8011091:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 8011095:	6f6d2f6f 	svcvs	0x006d2f6f
 8011099:	006c6564 	rsbeq	r6, ip, r4, ror #10
 801109d:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
 80110a1:	6f732f6f 	svcvs	0x00732f6f
 80110a5:	65590063 	ldrbvs	r0, [r9, #-99]	; 0xffffff9d
 80110a9:	6f4e0073 	svcvs	0x004e0073
 80110ad:	43534f00 	cmpmi	r3, #0, 30
 80110b1:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80110b5:	0a726576 	beq	9caa695 <__exidx_end+0x1c97bf5>
 80110b9:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 80110bd:	696d6f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80110c1:	5020676e 	eorpl	r6, r0, lr, ror #14
 80110c5:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80110c9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110cd:	3a202020 	bcc	8819155 <__exidx_end+0x8066b5>
 80110d1:	0a642520 	beq	991a559 <__exidx_end+0x1907ab9>
 80110d5:	754f2000 	strbvc	r2, [pc, #-0]	; 80110dd <SOFTWARE_VERSION+0x98>
 80110d9:	696f6774 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, sl, sp, lr}^	; <UNPREDICTABLE>
 80110dd:	5020676e 	eorpl	r6, r0, lr, ror #14
 80110e1:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80110e5:	20202020 	eorcs	r2, r0, r0, lsr #32
 80110e9:	3a202020 	bcc	8819171 <__exidx_end+0x8066d1>
 80110ed:	0a642520 	beq	991a575 <__exidx_end+0x1907ad5>
 80110f1:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80110f5:	61502058 	cmpvs	r0, r8, asr r0
 80110f9:	20206874 	eorcs	r6, r0, r4, ror r8
 80110fd:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011101:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011105:	3a202020 	bcc	881918d <__exidx_end+0x8066ed>
 8011109:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 801110d:	73255b5d 			; <UNDEFINED> instruction: 0x73255b5d
 8011111:	20000a5d 	andcs	r0, r0, sp, asr sl
 8011115:	616c4220 	cmnvs	ip, r0, lsr #4
 8011119:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 80105be <adc_inserted_channel_config+0x10>
 801111d:	61502074 	cmpvs	r0, r4, ror r0
 8011121:	20206874 	eorcs	r6, r0, r4, ror r8
 8011125:	20202020 	eorcs	r2, r0, r0, lsr #32
 8011129:	5b203a20 	blpl	881f9b1 <__exidx_end+0x80cf11>
 801112d:	0a5d7325 	beq	976ddc9 <__exidx_end+0x175b329>
 8011131:	61502000 	cmpvs	r0, r0
 8011135:	61697472 	smcvs	38722	; 0x9742
 8011139:	7254206c 	subsvc	r2, r4, #108	; 0x6c
 801113d:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8011141:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8011145:	3a206e6f 	bcc	882cb09 <__exidx_end+0x81a069>
 8011149:	0a732520 	beq	9cda5d1 <__exidx_end+0x1cc7b31>
	...

0801114e <OscServerMsgConst::START>:
 801114e:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8011152:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011156:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 801115a:	43534f20 	cmpmi	r3, #32, 30	; 0x80
 801115e:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8011162:	00726576 	rsbseq	r6, r2, r6, ror r5

08011166 <OscServerMsgConst::PARAMS>:
 8011166:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801116a:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801116e:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8011172:	2043534f 	subcs	r5, r3, pc, asr #6
 8011176:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801117a:	 	svcmi	0x00007265

0801117d <OscServerMsgConst::STARTED>:
 801117d:	2043534f 	subcs	r5, r3, pc, asr #6
 8011181:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011185:	73207265 			; <UNDEFINED> instruction: 0x73207265
 8011189:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801118d:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8011191:	3a227325 	bcc	88ade2d <__exidx_end+0x89b38d>
 8011195:	002c6425 	eoreq	r6, ip, r5, lsr #8
 8011199:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801119d:	000a6425 	andeq	r6, sl, r5, lsr #8
 80111a1:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80111a5:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 80111a9:	23002c22 	movwcs	r2, #3106	; 0xc22
 80111ad:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80111b1:	 	andvc	r0, r0, r3, ror sl

080111b4 <OscServerParamsConst::TRANSMISSION>:
 80111b4:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
 80111b8:	5f6c6169 	svcpl	0x006c6169
 80111bc:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 80111c0:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
 80111c4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
	...

080111c9 <OscServerParamsConst::PATH_BLACKOUT>:
 80111c9:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80111cd:	616c625f 	cmnvs	ip, pc, asr r2
 80111d1:	756f6b63 	strbvc	r6, [pc, #-2915]!	; 8010676 <adc_software_trigger_enable+0x12>
 80111d5:	 	cmnvs	r0, r4, ror r0

080111d7 <OscServerParamsConst::PATH>:
 80111d7:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
	...

080111dc <OscServerParamsConst::FILE_NAME>:
 80111dc:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
 80111e0:	00747874 	rsbseq	r7, r4, r4, ror r8

080111e4 <OscServerParamsConst::PATH_INFO>:
 80111e4:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
 80111e8:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
 80111ec:	 	cdpvs	0, 6, cr0, cr9, cr15, {3}

080111ee <OscParamsConst::INCOMING_PORT>:
 80111ee:	6f636e69 	svcvs	0x00636e69
 80111f2:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 80111f6:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80111fa:	 	strbvc	r0, [pc, #-116]!	; 801118e <OscServerMsgConst::STARTED+0x11>

080111fc <OscParamsConst::OUTGOING_PORT>:
 80111fc:	6774756f 	ldrbvs	r7, [r4, -pc, ror #10]!
 8011200:	676e696f 	strbvs	r6, [lr, -pc, ror #18]!
 8011204:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8011208:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 801120c:	65532058 	ldrbvs	r2, [r3, #-88]	; 0xffffffa8
 8011210:	000a646e 	andeq	r6, sl, lr, ror #8
 8011214:	65724220 	ldrbvs	r4, [r2, #-544]!	; 0xfffffde0
 8011218:	74206b61 	strtvc	r6, [r0], #-2913	; 0xfffff49f
 801121c:	20656d69 	rsbcs	r6, r5, r9, ror #26
 8011220:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011224:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011228:	42414d20 	submi	r4, r1, #32, 26	; 0x800
 801122c:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8011230:	20202065 	eorcs	r2, r0, r5, rrx
 8011234:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011238:	000a6425 	andeq	r6, sl, r5, lsr #8
 801123c:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 8011240:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8011244:	74617220 	strbtvc	r7, [r1], #-544	; 0xfffffde0
 8011248:	203a2065 	eorscs	r2, sl, r5, rrx
 801124c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8011250:	6f6c5320 	svcvs	0x006c5320
 8011254:	20207374 	eorcs	r7, r0, r4, ror r3
 8011258:	20202020 	eorcs	r2, r0, r0, lsr #32
 801125c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8011260:	000a6425 	andeq	r6, sl, r5, lsr #8

08011264 <vtable for DmxSend>:
	...
 801126c:	080098cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, fp, ip, pc}
 8011270:	08009999 	stmdaeq	r0, {r0, r3, r4, r7, r8, fp, ip, pc}
 8011274:	080098cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, fp, ip, pc}
 8011278:	080098fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, fp, ip, pc}
 801127c:	08009931 	stmdaeq	r0, {r0, r4, r5, r8, fp, ip, pc}
 8011280:	080098c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, ip, pc}
 8011284:	08009941 	stmdaeq	r0, {r0, r6, r8, fp, ip, pc}
 8011288:	0800e5bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, sl, sp, lr, pc}
 801128c:	0800e5b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, sp, lr, pc}
 8011290:	0800e5b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, sp, lr, pc}
 8011294:	0800e5c3 	stmdaeq	r0, {r0, r1, r6, r7, r8, sl, sp, lr, pc}

08011298 <DmxParamsConst::BREAK_TIME>:
 8011298:	61657262 	cmnvs	r5, r2, ror #4
 801129c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80112a0:	 	movwvc	r6, #1389	; 0x56d

080112a3 <DmxParamsConst::SLOTS_COUNT>:
 80112a3:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80112ab <DmxParamsConst::SLOTS_COUNT+0x8>
 80112a7:	6f635f73 	svcvs	0x00635f73
 80112ab:	00746e75 	rsbseq	r6, r4, r5, ror lr

080112af <DmxParamsConst::REFRESH_RATE>:
 80112af:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80112b3:	5f687365 	svcpl	0x00687365
 80112b7:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080112bc <DmxParamsConst::MAB_TIME>:
 80112bc:	5f62616d 	svcpl	0x0062616d
 80112c0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080112c5 <DmxParamsConst::FILE_NAME>:
 80112c5:	61726170 	cmnvs	r2, r0, ror r1
 80112c9:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80112cd:	25007478 	strcs	r7, [r0, #-1144]	; 0xfffffb88
 80112d1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80112d5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80112d9:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 80112dd:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 80112e1:	2c64252c 	cfstr64cs	mvdx2, [r4], #-176	; 0xffffff50
 80112e5:	000a7325 	andeq	r7, sl, r5, lsr #6
 80112e9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80112ed:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80112f1:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80112f5:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80112f9:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80112fd:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 8011301:	66664f00 	strbtvs	r4, [r6], -r0, lsl #30
 8011305:	73696400 	cmnvc	r9, #0, 8
 8011309:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801130d:	0a73253a 	beq	9cda7fd <__exidx_end+0x1cc7d5d>
 8011311:	74667400 	strbtvc	r7, [r6], #-1024	; 0xfffffc00
 8011315:	73253a70 			; <UNDEFINED> instruction: 0x73253a70
 8011319:	6576000a 	ldrbvs	r0, [r6, #-10]!
 801131d:	6f697372 	svcvs	0x00697372
 8011321:	73253a6e 			; <UNDEFINED> instruction: 0x73253a6e
 8011325:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8011329:	3a656d69 	bcc	996c8d5 <__exidx_end+0x1959e35>
 801132d:	73752520 	cmnvc	r5, #32, 10	; 0x8000000
 8011331:	5245000a 	subpl	r0, r5, #10
 8011335:	23524f52 	cmpcs	r2, #328	; 0x148
 8011339:	7465673f 	strbtvc	r6, [r5], #-1855	; 0xfffff8c1
 801133d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8011341:	00237074 	eoreq	r7, r3, r4, ror r0
 8011345:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011349:	2379616c 	cmncs	r9, #108, 2
 801134d:	52524500 	subspl	r4, r2, #0, 10
 8011351:	2123524f 			; <UNDEFINED> instruction: 0x2123524f
 8011355:	5245000a 	subpl	r0, r5, #10
 8011359:	23524f52 	cmpcs	r2, #328	; 0x148
 801135d:	72000a3f 	andvc	r0, r0, #258048	; 0x3f000
 8011361:	6f6f6265 	svcvs	0x006f6265
 8011365:	00232374 	eoreq	r2, r3, r4, ror r3
 8011369:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801136d:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8011371:	2a237473 	bcs	88ee545 <__exidx_end+0x8dbaa5>
 8011375:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8011379:	23656d69 	cmncs	r5, #6720	; 0x1a40
 801137d:	72657600 	rsbvc	r7, r5, #0, 12
 8011381:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011385:	65670023 	strbvs	r0, [r7, #-35]!	; 0xffffffdd
 8011389:	66002374 			; <UNDEFINED> instruction: 0x66002374
 801138d:	6f746361 	svcvs	0x00746361
 8011391:	23237972 			; <UNDEFINED> instruction: 0x23237972
	...

08011396 <s_Node>:
 8011396:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801139a:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80113a6:	41730000 	cmnmi	r3, r0
 80113aa:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80113ae:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80113ba:	2043534f 	subcs	r5, r3, pc, asr #6
 80113be:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80113c2:	00007265 	andeq	r7, r0, r5, ror #4
 80113c6:	00000000 	andeq	r0, r0, r0
 80113ca:	544c0000 	strbpl	r0, [ip], #-0
 80113ce:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80113de:	2043534f 	subcs	r5, r3, pc, asr #6
 80113e2:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80113e6:	0000746e 	andeq	r7, r0, lr, ror #8
 80113ea:	00000000 	andeq	r0, r0, r0
 80113ee:	44520000 	ldrbmi	r0, [r2], #-0
 80113f2:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80113f6:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80113fa:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80113fe:	0000796c 	andeq	r7, r0, ip, ror #18
 8011402:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8011406:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8011412:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8011416:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8011426:	00504444 	subseq	r4, r0, r4, asr #8
	...

08011438 <s_Output>:
 8011438:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8011444:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8011450:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8011454:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8011458:	00000000 	andeq	r0, r0, r0
 801145c:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8011460:	0000006c 	andeq	r0, r0, ip, rrx
 8011464:	00000000 	andeq	r0, r0, r0
 8011468:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801146c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8011470:	00000000 	andeq	r0, r0, r0
 8011474:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8011480:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8011484:	00006769 	andeq	r6, r0, r9, ror #14
 8011488:	00000000 	andeq	r0, r0, r0
 801148c:	70657453 	rsbvc	r7, r5, r3, asr r4
 8011490:	00726570 	rsbseq	r6, r2, r0, ror r5
 8011494:	00000000 	andeq	r0, r0, r0
 8011498:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801149c:	00007265 	andeq	r7, r0, r5, ror #4
 80114a0:	00000000 	andeq	r0, r0, r0
 80114a4:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80114a8:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80114ac:	00000000 	andeq	r0, r0, r0
 80114b0:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80114b4:	00006c61 	andeq	r6, r0, r1, ror #24
 80114b8:	00000000 	andeq	r0, r0, r0
 80114bc:	20424752 	subcs	r4, r2, r2, asr r7
 80114c0:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80114c4:	0000006c 	andeq	r0, r0, ip, rrx

080114c8 <RemoteConfig::s_GET>:
 80114c8:	0800b031 	stmdaeq	r0, {r0, r4, r5, ip, sp, pc}
 80114cc:	00000000 	andeq	r0, r0, r0
 80114d0:	08011360 	stmdaeq	r1, {r5, r6, r8, r9, ip}
 80114d4:	00000008 	andeq	r0, r0, r8
 80114d8:	0800a4c9 	stmdaeq	r0, {r0, r3, r6, r7, sl, sp, pc}
 80114dc:	00000000 	andeq	r0, r0, r0
 80114e0:	08011369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip}
 80114e4:	00000005 	andeq	r0, r0, r5
 80114e8:	0800a4c9 	stmdaeq	r0, {r0, r3, r6, r7, sl, sp, pc}
 80114ec:	00000000 	andeq	r0, r0, r0
 80114f0:	0801136f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, ip}
 80114f4:	00000006 	andeq	r0, r0, r6
 80114f8:	0800a6cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, sp, pc}
 80114fc:	00000000 	andeq	r0, r0, r0
 8011500:	08011376 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, ip}
 8011504:	00000007 	andeq	r0, r0, r7
 8011508:	0800a689 	stmdaeq	r0, {r0, r3, r7, r9, sl, sp, pc}
 801150c:	00000000 	andeq	r0, r0, r0
 8011510:	0801137e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, ip}
 8011514:	00000008 	andeq	r0, r0, r8
 8011518:	0800a5b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, sp, pc}
 801151c:	00000000 	andeq	r0, r0, r0
 8011520:	08011345 	stmdaeq	r1, {r0, r2, r6, r8, r9, ip}
 8011524:	00000008 	andeq	r0, r0, r8
 8011528:	0800a94d 	stmdaeq	r0, {r0, r2, r3, r6, r8, fp, sp, pc}
 801152c:	00000000 	andeq	r0, r0, r0
 8011530:	08011387 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, ip}
 8011534:	00010004 	andeq	r0, r1, r4
 8011538:	0800a631 	stmdaeq	r0, {r0, r4, r5, r9, sl, sp, pc}
 801153c:	00000000 	andeq	r0, r0, r0
 8011540:	0801133f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip}
 8011544:	00000005 	andeq	r0, r0, r5
 8011548:	0800aca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, sp, pc}
 801154c:	00000000 	andeq	r0, r0, r0
 8011550:	0801138c 	stmdaeq	r1, {r2, r3, r7, r8, r9, ip}
 8011554:	00000009 	andeq	r0, r0, r9

08011558 <RemoteConfig::s_SET>:
 8011558:	0800a60d 	stmdaeq	r0, {r0, r2, r3, r9, sl, sp, pc}
 801155c:	00000000 	andeq	r0, r0, r0
 8011560:	0801133f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip}
 8011564:	00010005 	andeq	r0, r1, r5
 8011568:	0800a721 	stmdaeq	r0, {r0, r5, r8, r9, sl, sp, pc}
 801156c:	00000000 	andeq	r0, r0, r0
 8011570:	08011345 	stmdaeq	r1, {r0, r2, r6, r8, r9, ip}
 8011574:	00010008 	andeq	r0, r1, r8
 8011578:	6f626552 	svcvs	0x00626552
 801157c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8011580:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8011584:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8011588:	6f6f6265 	svcvs	0x006f6265
 801158c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8011590:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8011594:	6f637200 	svcvs	0x00637200
 8011598:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801159c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80115a0:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80115a4:	6b726f77 	blvs	9cad388 <__exidx_end+0x1c9a8e8>
 80115a8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80115ac:	63736f00 	cmnvs	r3, #0, 30
 80115b0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80115b4:	72617000 	rsbvc	r7, r1, #0
 80115b8:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80115bc:	00747874 	rsbseq	r7, r4, r4, ror r8

080115c0 <RemoteConfig::s_TXT>:
 80115c0:	0800a955 	stmdaeq	r0, {r0, r2, r4, r6, r8, fp, sp, pc}
 80115c4:	00000000 	andeq	r0, r0, r0
 80115c8:	0800abf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, sp, pc}
 80115cc:	00000000 	andeq	r0, r0, r0
 80115d0:	08011595 	stmdaeq	r1, {r0, r2, r4, r7, r8, sl, ip}
 80115d4:	0000000b 	andeq	r0, r0, fp
 80115d8:	0000000c 	andeq	r0, r0, ip
 80115dc:	0800a981 	stmdaeq	r0, {r0, r7, r8, fp, sp, pc}
 80115e0:	00000000 	andeq	r0, r0, r0
 80115e4:	0800ac25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, pc}
 80115e8:	00000000 	andeq	r0, r0, r0
 80115ec:	080115a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, ip}
 80115f0:	0000000b 	andeq	r0, r0, fp
 80115f4:	00000000 	andeq	r0, r0, r0
 80115f8:	0800a9ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, sp, pc}
 80115fc:	00000000 	andeq	r0, r0, r0
 8011600:	0800ac4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp, sp, pc}
 8011604:	00000000 	andeq	r0, r0, r0
 8011608:	080115ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, ip}
 801160c:	00000007 	andeq	r0, r0, r7
 8011610:	00000008 	andeq	r0, r0, r8
 8011614:	0800a9d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, fp, sp, pc}
 8011618:	00000000 	andeq	r0, r0, r0
 801161c:	0800ac79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, sp, pc}
 8011620:	00000000 	andeq	r0, r0, r0
 8011624:	080115b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, ip}
 8011628:	0000000a 	andeq	r0, r0, sl
 801162c:	00000002 	andeq	r0, r0, r2
 8011630:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8011634:	4f500054 	svcmi	0x00500054
 8011638:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 801163c:	00505454 	subseq	r5, r0, r4, asr r4
 8011640:	31000a20 	tstcc	r0, r0, lsr #20
 8011644:	3a00312e 	bcc	801db04 <__exidx_end+0xb064>
 8011648:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 801164c:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8011650:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8011654:	3b200065 	blcc	88117f0 <__exidx_end+0x7fed50>
 8011658:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 801165c:	6163696c 	cmnvs	r3, ip, ror #18
 8011660:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011664:	6f736a2f 	svcvs	0x00736a2f
 8011668:	6f43006e 	svcvs	0x0043006e
 801166c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011670:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8011674:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8011678:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801167c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8011680:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011684:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8011688:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801168c:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8011690:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8011694:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8011698:	2f00736a 	svccs	0x0000736a
 801169c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80116a0:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 80116a4:	76007473 			; <UNDEFINED> instruction: 0x76007473
 80116a8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80116ac:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 80116b0:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80116b4:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 80116b8:	616c7073 	smcvs	50947	; 0xc703
 80116bc:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80116c0:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80116c4:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80116c8:	6f736a2f 	svcvs	0x00736a2f
 80116cc:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80116d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80116d4:	62657200 	rsbvs	r7, r5, #0, 4
 80116d8:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80116dc:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80116e0:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80116e4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80116e8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80116ec:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80116f0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80116f4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80116f8:	0a3e6c6d 	beq	8fac8b4 <__exidx_end+0xf99e14>
 80116fc:	6165683c 	cmnvs	r5, ip, lsr r8
 8011700:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8011704:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8011708:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 801170c:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8011710:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8011714:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011718:	6165682f 	cmnvs	r5, pc, lsr #16
 801171c:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8011720:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011724:	31683c3e 	cmncc	r8, lr, lsr ip
 8011728:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 801172c:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8011730:	6f622f3c 	svcvs	0x00622f3c
 8011734:	0a3e7964 	beq	8fafccc <__exidx_end+0xf9d22c>
 8011738:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 801173c:	0a3e6c6d 	beq	8fac8f8 <__exidx_end+0xf99e58>
 8011740:	71655200 	cmnvc	r5, r0, lsl #4
 8011744:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8011748:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 801174c:	20797469 	rsbscs	r7, r9, r9, ror #8
 8011750:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8011754:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8011758:	6f4e0065 	svcvs	0x004e0065
 801175c:	6f462074 	svcvs	0x00462074
 8011760:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8011764:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8011768:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 801176c:	20495255 	subcs	r5, r9, r5, asr r2
 8011770:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8011774:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8011778:	72655600 	rsbvc	r5, r5, #0, 12
 801177c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8011780:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8011788 <RemoteConfig::s_TXT+0x1c8>
 8011784:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8011788:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801178c:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8011790:	6f687465 	svcvs	0x00687465
 8011794:	6f4e2064 	svcvs	0x004e2064
 8011798:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 801179c:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 80117a0:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80117a4:	61420064 	cmpvs	r2, r4, rrx
 80117a8:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 80117ac:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80117b0:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 80117b4:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 80117b8:	7245206e 	subvc	r2, r5, #110	; 0x6e
 80117bc:	00726f72 	rsbseq	r6, r2, r2, ror pc
 80117c0:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 80117c4:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 80117c8:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80117cc:	20726576 	rsbscs	r6, r2, r6, ror r5
 80117d0:	6f727245 	svcvs	0x00727245
 80117d4:	4b4f0072 	blmi	93d19a4 <__exidx_end+0x13bef04>
 80117d8:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80117dc:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80117e0:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80117e4:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80117e8:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80117ec:	0a3e6c6d 	beq	8fac9a8 <__exidx_end+0xf99f08>
 80117f0:	6165683c 	cmnvs	r5, ip, lsr r8
 80117f4:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80117f8:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80117fc:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8011800:	2f3c7325 	svccs	0x003c7325
 8011804:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8011808:	2f3c3e65 	svccs	0x003c3e65
 801180c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011810:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8011814:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011818:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801181c:	2f3c7325 	svccs	0x003c7325
 8011820:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8011824:	646f622f 	strbtvs	r6, [pc], #-559	; 801182c <RemoteConfig::s_TXT+0x26c>
 8011828:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 801182c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8011830:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8011834:	50545448 	subspl	r5, r4, r8, asr #8
 8011838:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 801183c:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8011840:	0a0d7325 	beq	836e4dc <__exidx_end+0x35ba3c>
 8011844:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8011848:	203a7265 	eorscs	r7, sl, r5, ror #4
 801184c:	0a0d7325 	beq	836e4e8 <__exidx_end+0x35ba48>
 8011850:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8011854:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8011858:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801185c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8011860:	6f430a0d 	svcvs	0x00430a0d
 8011864:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011868:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 801186c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8011870:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8011874:	6f430a0d 	svcvs	0x00430a0d
 8011878:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801187c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8011880:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8011884:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8011888:	000a0d0a 	andeq	r0, sl, sl, lsl #26

0801188c <contentType>:
 801188c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8011890:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8011894:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80118ac:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80118b0:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80118cc:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80118d0:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80118d4:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80118d8:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80118ec:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80118f0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80118f4:	2f6e6f69 	svccs	0x006e6f69
 80118f8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

0801190c <RemoteConfigConst::PARAMS_DISABLE>:
 801190c:	61736964 	cmnvs	r3, r4, ror #18
 8011910:	00656c62 	rsbeq	r6, r5, r2, ror #24

08011914 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8011914:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011918:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801191c:	00747874 	rsbseq	r7, r4, r4, ror r8

08011920 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8011920:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8011924:	5f79616c 	svcpl	0x0079616c
 8011928:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801192d <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801192d:	61736964 	cmnvs	r3, r4, ror #18
 8011931:	5f656c62 	svcpl	0x00656c62
 8011935:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8011939:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801193b <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801193b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801193f:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8011943:	6f6f6265 	svcvs	0x006f6265
 8011947:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08011949 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8011949:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801194d:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80113e9 <s_Node+0x53>
 8011951:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8011955:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08011957 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8011957:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801195b:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801195f:	6f746361 	svcvs	0x00746361
 8011963:	7b007972 	blvc	802ff33 <__exidx_end+0x1d493>
 8011967:	73696c22 	cmnvc	r9, #8704	; 0x2200
 801196b:	7b3a2274 	blvc	8e9a343 <__exidx_end+0xe878a3>
 801196f:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8011973:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8011977:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801197b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801197f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8011983:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8011987:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801198b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801198f:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8011993:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8011997:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801199b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801199f:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80119a3:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80119a7:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80119ab:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80119af:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80119b3:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80119b7:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80119bb:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80119bf:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80119c3:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80119c7:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80119cb:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80119cf:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80119d3:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80119d7:	616f6222 	cmnvs	pc, r2, lsr #4
 80119db:	3a226472 	bcc	88aabab <__exidx_end+0x89810b>
 80119df:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80119e3:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80119e7:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80119eb:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80119ef:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80119f3:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80119f7:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80119fb:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80119ff:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8011a03:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8011a07:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8011a0b:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8011a0f:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8011a13:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8011a17:	7b000a7d 	blvc	8014413 <__exidx_end+0x1973>
 8011a1b:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8011a1f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011a23:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8011a27:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8011a2b:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011a2f:	7b3a2273 	blvc	8e9a403 <__exidx_end+0xe87963>
 8011a33:	63736f22 	cmnvs	r3, #34, 30	; 0x88
 8011a37:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8011a3b:	4f223a22 	svcmi	0x00223a22
 8011a3f:	53204353 			; <UNDEFINED> instruction: 0x53204353
 8011a43:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8011a47:	222c2272 	eorcs	r2, ip, #536870919	; 0x20000007
 8011a4b:	61726170 	cmnvs	r2, r0, ror r1
 8011a4f:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8011a53:	3a227478 	bcc	88aec3b <__exidx_end+0x89c19b>
 8011a57:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 8011a5b:	61725420 	cmnvs	r2, r0, lsr #8
 8011a5f:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8011a63:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 8011a67:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8011a6b:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8011a6f:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011a73:	654e223a 	strbvs	r2, [lr, #-570]	; 0xfffffdc6
 8011a77:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8011a7b:	222c226b 	eorcs	r2, ip, #-1342177274	; 0xb0000006
 8011a7f:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8011a83:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8011a87:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8011a8b:	6552223a 	ldrbvs	r2, [r2, #-570]	; 0xfffffdc6
 8011a8f:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	; 0xfffff093
 8011a93:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8011a97:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8011a9b:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8011a9f:	7d226e6f 	stcvc	14, cr6, [r2, #-444]!	; 0xfffffe44
 8011aa3:	7273007d 	rsbsvc	r0, r3, #125	; 0x7d
 8011aa7:	74682f63 	strbtvc	r2, [r8], #-3939	; 0xfffff09d
 8011aab:	2f647074 	svccs	0x00647074
 8011aaf:	5f746567 	svcpl	0x00746567
 8011ab3:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011ab7:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8011abb:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8011abf:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8011ac3:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 8011ac7:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8011acb:	6f635f65 	svcvs	0x00635f65
 8011acf:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8011ad3:	73250074 			; <UNDEFINED> instruction: 0x73250074
 8011ad7:	25202928 	strcs	r2, [r0, #-2344]!	; 0xfffff6d8
 8011adb:	6c202c73 	stcvs	12, cr2, [r0], #-460	; 0xfffffe34
 8011adf:	20656e69 	rsbcs	r6, r5, r9, ror #28
 8011ae3:	203a6925 	eorscs	r6, sl, r5, lsr #18
 8011ae7:	2d207325 	stccs	3, cr7, [r0, #-148]!	; 0xffffff6c
 8011aeb:	6425203e 	strtvs	r2, [r5], #-62	; 0xffffffc2
 8011aef:	2d3c000a 	ldccs	0, cr0, [ip, #-40]!	; 0xffffffd8
 8011af3:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 8011af7:	3a73253a 	bcc	9cdafe7 <__exidx_end+0x1cc8547>
 8011afb:	000a6425 	andeq	r6, sl, r5, lsr #8

08011aff <index_html>:
 8011aff:	4f44213c 	svcmi	0x0044213c
 8011b03:	50595443 	subspl	r5, r9, r3, asr #8
 8011b07:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8011b0b:	0a3e6c6d 	beq	8faccc7 <__exidx_end+0xf9a227>
 8011b0f:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8011b13:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8011b17:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8011b1b:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8011b1f:	6b6e696c 	blvs	9bac0d7 <__exidx_end+0x1b99637>
 8011b23:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8011b27:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8011b2b:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8011b2f:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8011b33:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8011b37:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8011b3b:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8011b3f:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8011b43:	20227373 	eorcs	r7, r2, r3, ror r3
 8011b47:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8011b4b:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8011b4f:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8011b53:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8011b57:	0a3e656c 	beq	8fab10f <__exidx_end+0xf9866f>
 8011b5b:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8011b5f:	0a3e6461 	beq	8faaceb <__exidx_end+0xf9824b>
 8011b63:	646f623c 	strbtvs	r6, [pc], #-572	; 8011b6b <index_html+0x6c>
 8011b67:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8011b6b:	6165683c 	cmnvs	r5, ip, lsr r8
 8011b6f:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8011b73:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8011b77:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8011b7b:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8011b7f:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8011b83:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011b87:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011b8b:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8011b8f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011b93:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8011b97:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8011b9b:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8011b9f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8011ba3:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8011ba7:	6f746365 	svcvs	0x00746365
 8011bab:	20227972 	eorcs	r7, r2, r2, ror r9
 8011baf:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8011bb3:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8011bb7:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8011bbb:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8011bbf:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8011bc3:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8011bc7:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8011bcb:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8011bcf:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8011bd3:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8011bd7:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8011bdb:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8011bdf:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8011be3:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011be7:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8011beb:	20227478 	eorcs	r7, r2, r8, ror r4
 8011bef:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011bf3:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8011bf7:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8011bfb:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8011bff:	0a3e656c 	beq	8fab1b7 <__exidx_end+0xf98717>
 8011c03:	6f663c09 	svcvs	0x00663c09
 8011c07:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8011c0b:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8011c0f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8011c13:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8011c17:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011c1b:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8011c1f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8011c23:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8011c27:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011c2b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8011c2f:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8011c33:	20747069 	rsbscs	r7, r4, r9, rrx
 8011c37:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8011c3b:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8011c3f:	6a2e7865 	bvs	8bafddb <__exidx_end+0xb9d33b>
 8011c43:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8011c47:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8011c4b:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8011c4f:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8011c53:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8011c57:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8011c5b:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8011c5f:	 	svcvs	0x0062000a

08011c61 <styles_css>:
 8011c61:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011c65:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011c69:	63616220 	cmnvs	r1, #32, 4
 8011c6d:	6f72676b 	svcvs	0x0072676b
 8011c71:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8011c75:	6f6c6f63 	svcvs	0x006c6f63
 8011c79:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011c7d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011c81:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8011c85:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8011c89:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011c8d:	6f6c6f63 	svcvs	0x006c6f63
 8011c91:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8011c95:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8011c99:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8011c9d:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8011ca1:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8011ca5:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8011ca9:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8011cad:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011cb1:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011cb5:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011cb9:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011cbd:	0a3b7865 	beq	8eefe59 <__exidx_end+0xedd3b9>
 8011cc1:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8011cc5:	0a7b2069 	beq	9ed9e71 <__exidx_end+0x1ec73d1>
 8011cc9:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8011ccd:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8011cd1:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8011cd5:	6f6e203a 	svcvs	0x006e203a
 8011cd9:	0a3b656e 	beq	8eeb299 <__exidx_end+0xed87f9>
 8011cdd:	616d2020 	cmnvs	sp, r0, lsr #32
 8011ce1:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8011ce5:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8011ce9:	70352078 	eorsvc	r2, r5, r8, ror r0
 8011ced:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8011cf1:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8011cf5:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8011cf9:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8011cfd:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8011d01:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8011d05:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8011d09:	0a3b7865 	beq	8eefea5 <__exidx_end+0xedd405>
 8011d0d:	6f622020 	svcvs	0x00622020
 8011d11:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011d15:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011d19:	3a737569 	bcc	9cef2c5 <__exidx_end+0x1cdc825>
 8011d1d:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011d21:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011d25:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011d29:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011d2d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d31:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011d35:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011d39:	0a3b7870 	beq	8eeff01 <__exidx_end+0xedd461>
 8011d3d:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8011d41:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8011d45:	0a7b2072 	beq	9ed9f15 <__exidx_end+0x1ec7475>
 8011d49:	69642020 	stmdbvs	r4!, {r5, sp}^
 8011d4d:	616c7073 	smcvs	50947	; 0xc703
 8011d51:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8011d55:	3b78656c 	blcc	9e2b30d <__exidx_end+0x1e1886d>
 8011d59:	6a20200a 	bvs	8819d89 <__exidx_end+0x8072e9>
 8011d5d:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8011d61:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8011d65:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8011d69:	203a746e 	eorscs	r7, sl, lr, ror #8
 8011d6d:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8011d71:	0a3b7265 	beq	8eee70d <__exidx_end+0xedbc6d>
 8011d75:	6f622020 	svcvs	0x00622020
 8011d79:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8011d7d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8011d81:	3a737569 	bcc	9cef32d <__exidx_end+0x1cdc88d>
 8011d85:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8011d89:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8011d8d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8011d91:	203a7265 	eorscs	r7, sl, r5, ror #4
 8011d95:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011d99:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8011d9d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8011da1:	0a3b7870 	beq	8eeff69 <__exidx_end+0xedd4c9>
 8011da5:	 			; <UNDEFINED> instruction: 0x86000a7d

08011da8 <HttpContent>:
 8011da8:	08011686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip}
 8011dac:	08011c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, ip}
 8011db0:	08011692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip}
 8011db4:	08011dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, ip}
 8011db8:	0801167a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, sl, ip}
 8011dbc:	08011aff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip}

08011dc0 <index_js>:
 8011dc0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011dc4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011dc8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011dcc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8011dd0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011dd4:	6a284e4f 	bvs	8a25718 <__exidx_end+0xa12c78>
 8011dd8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011ddc:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011de0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8011de4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8011de8:	6a2f273d 	bvs	8bdbae4 <__exidx_end+0xbc9044>
 8011dec:	2f6e6f73 	svccs	0x006e6f73
 8011df0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8011df4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8011df8:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011dfc:	20797274 	rsbscs	r7, r9, r4, ror r2
 8011e00:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011e04:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8011e08:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8011e0c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8011e10:	20746961 	rsbscs	r6, r4, r1, ror #18
 8011e14:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8011e18:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8011e1c:	0a3b296c 	beq	8edc3d4 <__exidx_end+0xec9934>
 8011e20:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8011e24:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8011e28:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8011e2c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8011e30:	73657220 	cmnvc	r5, #32, 4
 8011e34:	6f736a2e 	svcvs	0x00736a2e
 8011e38:	3b29286e 	blcc	8a5bff8 <__exidx_end+0xa49558>
 8011e3c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011e40:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8011e44:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8011e48:	6f727265 	svcvs	0x00727265
 8011e4c:	7b202972 	blvc	881c41c <__exidx_end+0x80997c>
 8011e50:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011e54:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8011e58:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8011e5c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8011e60:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8011e64:	3b29726f 	blcc	8a6e828 <__exidx_end+0xa5bd88>
 8011e68:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8011e6c:	0a0a7d0a 	beq	82b129c <__exidx_end+0x29e7fc>
 8011e70:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8011e74:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8011e78:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8011e7c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8011e80:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8011e84:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8011e88:	20292874 	eorcs	r2, r9, r4, ror r8
 8011e8c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8011e90:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011e94:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011e98:	6177613d 	cmnvs	r7, sp, lsr r1
 8011e9c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011ea0:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011ea4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011ea8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011eac:	0a3b2927 	beq	8edc350 <__exidx_end+0xec98b0>
 8011eb0:	6f640909 	svcvs	0x00640909
 8011eb4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8011eb8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8011ebc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8011ec0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8011ec4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8011ec8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8011ecc:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8011ed0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8011ed4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8011ed8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8011edc:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8011ee0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011ee4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8011ee8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8011eec:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8011ef0:	2b656d61 	blcs	996d47c <__exidx_end+0x195a9dc>
 8011ef4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e74 <index_js+0xb4>
 8011ef8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011efc:	2b223e69 	blcs	88a18a8 <__exidx_end+0x88ee08>
 8011f00:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011f04:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011f08:	6f6e2e74 	svcvs	0x006e2e74
 8011f0c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8011f10:	2b657079 	blcs	996e0fc <__exidx_end+0x195b65c>
 8011f14:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8011e94 <index_js+0xd4>
 8011f18:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8011f1c:	2b223e69 	blcs	88a18c8 <__exidx_end+0x88ee28>
 8011f20:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8011f24:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8011f28:	6f6e2e74 	svcvs	0x006e2e74
 8011f2c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8011f30:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8011f34:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8011f38:	2f3c222b 	svccs	0x003c222b
 8011f3c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8011f40:	0a7d0a3b 	beq	9f54834 <__exidx_end+0x1f41d94>
 8011f44:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8011f48:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8011f4c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011f50:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8011f54:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8011f58:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8011f5c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8011f60:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8011f64:	0a7b2029 	beq	9eda010 <__exidx_end+0x1ec7570>
 8011f68:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011f6c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8011f70:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8011f74:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011f78:	6177613d 	cmnvs	r7, sp, lsr r1
 8011f7c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8011f80:	534a7465 	movtpl	r7, #42085	; 0xa465
 8011f84:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8011f88:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8011f8c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8011f90:	3b292779 	blcc	8a5bd7c <__exidx_end+0xa492dc>
 8011f94:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8011f98:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8011f9c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8011fa0:	0a22223d 	beq	889a89c <__exidx_end+0x887dfc>
 8011fa4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8011fa8:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8011fac:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8011fb0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8011fb4:	6a624f3d 	bvs	98a5cb0 <__exidx_end+0x1893210>
 8011fb8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8011fbc:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8011fc0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8011fc4:	6f746365 	svcvs	0x00746365
 8011fc8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8011fcc:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8011fd0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8011fd4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8011fd8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8011fdc:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8011fe0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8011fe4:	6145726f 	cmpvs	r5, pc, ror #4
 8011fe8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8011fec:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8011ff0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8011ff4:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8011ff8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8011ffc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8012000:	20726176 	rsbscs	r6, r2, r6, ror r1
 8012004:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8012008:	203d2065 	eorscs	r2, sp, r5, rrx
 801200c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8012010:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8012014:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8012018:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801201c:	6b5b5d22 	blvs	96e94ac <__exidx_end+0x16d6a0c>
 8012020:	3b5d7965 	blcc	97705bc <__exidx_end+0x175db1c>
 8012024:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8012028:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801202c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8012030:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8012034:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012038:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801203c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8012040:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8012044:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8012048:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801204c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012050:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8012054:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012058:	0a3b223e 	beq	8eda958 <__exidx_end+0xec7eb8>
 801205c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8012060:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012064:	6f640909 	svcvs	0x00640909
 8012068:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801206c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8012070:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8012074:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8012078:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801207c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8012080:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8012084:	6f746365 	svcvs	0x00746365
 8012088:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801208c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8012090:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8012094:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8012098:	3b6c6d74 	blcc	9b2d670 <__exidx_end+0x1b1abd0>
 801209c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80120a0:	5f746567 	svcpl	0x00746567
 80120a4:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80120a8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80120ac:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80120b0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80120b4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80120b8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80120bc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80120c0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80120c4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80120c8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80120cc:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80120d0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80120d4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80120d8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80120dc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80120e0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80120e4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80120e8:	6177613d 	cmnvs	r7, sp, lsr r1
 80120ec:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80120f0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80120f4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80120f8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80120fc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8012100:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8012104:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8012108:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801210c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8012110:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8012114:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8012118:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801211c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8012120:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8012124:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8012128:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801212c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8012130:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8012134:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8012138:	2b22563e 	blcs	88a7a38 <__exidx_end+0x894f98>
 801213c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012140:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012144:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8012148:	2b6e6f69 	blcs	9badef4 <__exidx_end+0x1b9b454>
 801214c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80120cc <index_js+0x30c>
 8012150:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8012154:	2b223e69 	blcs	88a1b00 <__exidx_end+0x88f060>
 8012158:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801215c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8012160:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8012164:	61642e64 	cmnvs	r4, r4, ror #28
 8012168:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801216c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8012170:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8012174:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8012178:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801217c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8012180:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8012184:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8012188:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801218c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8012190:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8012194:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8012198:	6f697372 	svcvs	0x00697372
 801219c:	6f622e6e 	svcvs	0x00622e6e
 80121a0:	2b647261 	blcs	992eb2c <__exidx_end+0x191c08c>
 80121a4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8012124 <index_js+0x364>
 80121a8:	3b223e69 	blcc	88a1b54 <__exidx_end+0x88f0b4>
 80121ac:	0a0a7d0a 	beq	82b15dc <__exidx_end+0x29eb3c>
 80121b0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80121b4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80121b8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80121bc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80121c0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80121c8 <index_js+0x408>
 80121c4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80121c8:	20296c65 	eorcs	r6, r9, r5, ror #24
 80121cc:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80121d0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80121d4:	613d7478 	teqvs	sp, r8, ror r4
 80121d8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80121dc:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80121e0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80121e4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80121e8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80121ec:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80121f0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80121f4:	3b22223d 	blcc	889aaf0 <__exidx_end+0x888050>
 80121f8:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80121fc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8012200:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8012204:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8012208:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801220c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8012210:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8012214:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8012218:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801221c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8012220:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8012224:	0a7b2029 	beq	9eda2d0 <__exidx_end+0x1ec7830>
 8012228:	61760909 	cmnvs	r6, r9, lsl #18
 801222c:	61762072 	cmnvs	r6, r2, ror r0
 8012230:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8012234:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8012238:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 801223c:	6b5b5d6c 	blvs	96e97f4 <__exidx_end+0x16d6d54>
 8012240:	3b5d7965 	blcc	97707dc <__exidx_end+0x175dd3c>
 8012244:	2009090a 	andcs	r0, r9, sl, lsl #18
 8012248:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801224c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8012250:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8012254:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012258:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801225c:	2f3c222b 	svccs	0x003c222b
 8012260:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8012264:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8012268:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801226c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8012270:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8012274:	742f3c3e 	strtvc	r3, [pc], #-3134	; 801227c <index_js+0x4bc>
 8012278:	3b223e72 	blcc	88a1c48 <__exidx_end+0x88f1a8>
 801227c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8012280:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8012284:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8012288:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801228c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8012290:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8012294:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8012298:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 801229c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80122a0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80122a4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80122a8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80122ac:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80122b0:	0a3b6c6d 	beq	8eed46c <__exidx_end+0xeda9cc>
 80122b4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80122b8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80122bc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80122c0:	3b292874 	blcc	8a5c498 <__exidx_end+0xa499f8>
 80122c4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80122c8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80122cc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80122d0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80122d4:	0a3b2928 	beq	8edc77c <__exidx_end+0xec9cdc>
 80122d8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80122dc:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80122e0:	6f697372 	svcvs	0x00697372
 80122e4:	3b29286e 	blcc	8a5c4a4 <__exidx_end+0xa49a04>
 80122e8:	0000000a 	andeq	r0, r0, sl

080122ec <s_aStorSize>:
 80122ec:	00000060 	andeq	r0, r0, r0, rrx
 80122f0:	00000090 	muleq	r0, r0, r0
 80122f4:	00000020 	andeq	r0, r0, r0, lsr #32
 80122f8:	00000040 	andeq	r0, r0, r0, asr #32
 80122fc:	00000060 	andeq	r0, r0, r0, rrx
 8012300:	00000040 	andeq	r0, r0, r0, asr #32
 8012304:	00000020 	andeq	r0, r0, r0, lsr #32
 8012308:	00000020 	andeq	r0, r0, r0, lsr #32
 801230c:	000001e0 	andeq	r0, r0, r0, ror #3
 8012310:	00000040 	andeq	r0, r0, r0, asr #32
 8012314:	00000020 	andeq	r0, r0, r0, lsr #32
 8012318:	00000060 	andeq	r0, r0, r0, rrx
 801231c:	00000030 	andeq	r0, r0, r0, lsr r0
 8012320:	00000020 	andeq	r0, r0, r0, lsr #32
 8012324:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8012328:	00000030 	andeq	r0, r0, r0, lsr r0
 801232c:	00000040 	andeq	r0, r0, r0, asr #32
 8012330:	00000020 	andeq	r0, r0, r0, lsr #32
 8012334:	00000060 	andeq	r0, r0, r0, rrx
 8012338:	00000020 	andeq	r0, r0, r0, lsr #32
 801233c:	00000400 	andeq	r0, r0, r0, lsl #8
 8012340:	00000020 	andeq	r0, r0, r0, lsr #32
 8012344:	00000020 	andeq	r0, r0, r0, lsr #32
 8012348:	00000040 	andeq	r0, r0, r0, asr #32
 801234c:	00000060 	andeq	r0, r0, r0, rrx
 8012350:	00000020 	andeq	r0, r0, r0, lsr #32
 8012354:	00000020 	andeq	r0, r0, r0, lsr #32
 8012358:	00000020 	andeq	r0, r0, r0, lsr #32

0801235c <vtable for StoreDmxSend>:
	...
 8012364:	0800bd19 	stmdaeq	r0, {r0, r3, r4, r8, sl, fp, ip, sp, pc}
 8012368:	0800bd61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, sp, pc}
 801236c:	0800bd3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp, pc}
 8012370:	0800bd1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, fp, ip, sp, pc}

08012374 <vtable for StoreNetwork>:
	...
 801237c:	0800bd81 	stmdaeq	r0, {r0, r7, r8, sl, fp, ip, sp, pc}
 8012380:	0800be95 	stmdaeq	r0, {r0, r2, r4, r7, r9, sl, fp, ip, sp, pc}
 8012384:	0800bd89 	stmdaeq	r0, {r0, r3, r7, r8, sl, fp, ip, sp, pc}
 8012388:	0800bea9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, fp, ip, sp, pc}
 801238c:	0800be39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, ip, sp, pc}
 8012390:	0800be0d 	stmdaeq	r0, {r0, r2, r3, r9, sl, fp, ip, sp, pc}
 8012394:	0800bddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp, pc}
 8012398:	0800be65 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, fp, ip, sp, pc}
 801239c:	0800bdad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, ip, sp, pc}
 80123a0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80123a4:	00000000 	andeq	r0, r0, r0
 80123a8:	0800bd83 	stmdaeq	r0, {r0, r1, r7, r8, sl, fp, ip, sp, pc}
 80123ac:	0800bea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, ip, sp, pc}
 80123b0:	0800be5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp, ip, sp, pc}
 80123b4:	0800be31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, ip, sp, pc}
 80123b8:	0800be05 	stmdaeq	r0, {r0, r2, r9, sl, fp, ip, sp, pc}
 80123bc:	0800be8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, ip, sp, pc}
 80123c0:	0800bdd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp, pc}

080123c4 <vtable for StoreOscServer>:
	...
 80123cc:	0800bedd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 80123d0:	0800bf25 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, fp, ip, sp, pc}
 80123d4:	0800bf01 	stmdaeq	r0, {r0, r8, r9, sl, fp, ip, sp, pc}
 80123d8:	0800bee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, ip, sp, pc}

080123dc <vtable for StoreRemoteConfig>:
	...
 80123e4:	0800bf45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, pc}
 80123e8:	0800bf8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, ip, sp, pc}
 80123ec:	0800bf69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 80123f0:	0800bf49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, ip, sp, pc}
 80123f4:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
 80123f8:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
 80123fc:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8012400:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 8012404:	746f7420 	strbtvc	r7, [pc], #-1056	; 801240c <vtable for StoreRemoteConfig+0x30>
 8012408:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 801240c:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8012410:	20736574 	rsbscs	r6, r3, r4, ror r5
 8012414:	2064255b 	rsbcs	r2, r4, fp, asr r5
 8012418:	0a5d426b 	beq	9762dcc <__exidx_end+0x175032c>
 801241c:	70637400 	rsbvc	r7, r3, r0, lsl #8
 8012420:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8012424:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8012428:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 801242c:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8012430:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8012434:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8012438:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 801243c:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 8012440:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8012444:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8012448:	5241000a 	subpl	r0, r1, #10
 801244c:	6f6c2050 	svcvs	0x006c2050
 8012450:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8012454:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8012458:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801245c:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 8012460:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8012464:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8012468:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 801246c:	000a7961 	andeq	r7, sl, r1, ror #18
 8012470:	20505241 	subscs	r5, r0, r1, asr #4
 8012474:	6b6f6f6c 	blvs	9bee22c <__exidx_end+0x1bdb78c>
 8012478:	66207075 			; <UNDEFINED> instruction: 0x66207075
 801247c:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8012480:	 	vmlsmi.f32	s0, s0, s9

08012483 <NetworkConst::MSG_NETWORK_INIT>:
 8012483:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8012487:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801248b:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801248f:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8012493:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8012497:	3135322e 	teqcc	r5, lr, lsr #4
 801249b:	63745f00 	cmnvs	r4, #0, 30
 801249f:	6f6c2e70 	svcvs	0x006c2e70
 80124a3:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80124a7:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80124ab:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80124af:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80124b7 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80124b3:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80124b7:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801165b <RemoteConfig::s_TXT+0x9b>
 80124bb:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80124bf:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80124c3:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80124c7:	20000a53 	andcs	r0, r0, r3, asr sl
 80124cb:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80124cf:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 80124d3:	0a676e69 	beq	99ede7f <__exidx_end+0x19db3df>
 80124d7:	614e2000 	mrsvs	r2, (UNDEF: 78)
 80124db:	3a20656d 	bcc	882ba97 <__exidx_end+0x818ff7>
 80124df:	0a732520 	beq	9cdb967 <__exidx_end+0x1cc8ec7>
 80124e3:	73252000 			; <UNDEFINED> instruction: 0x73252000
 80124e7:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80124eb:	000a7325 	andeq	r7, sl, r5, lsr #6
 80124ef:	30687465 	rsbcc	r7, r8, r5, ror #8
 80124f3:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 80124f7:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 80124fb:	5f656369 	svcpl	0x00656369
 80124ff:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8012503:	6b726f77 	blvs	9cae2e7 <__exidx_end+0x1c9b847>
 8012507:	4820000a 	stmdami	r0!, {r1, r3}
 801250b:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801250f:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8012513:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8012517:	20000a73 	andcs	r0, r0, r3, ror sl
 801251b:	614e6649 	cmpvs	lr, r9, asr #12
 801251f:	2020656d 	eorcs	r6, r0, sp, ror #10
 8012523:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012527:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801252b:	000a7325 	andeq	r7, sl, r5, lsr #6
 801252f:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8012533:	20202074 	eorcs	r2, r0, r4, ror r0
 8012537:	3a202020 	bcc	881a5bf <__exidx_end+0x807b1f>
 801253b:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801253f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012543:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012547:	0a64252f 	beq	991ba0b <__exidx_end+0x1908f6b>
 801254b:	654e2000 	strbvs	r2, [lr, #-0]
 801254f:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8012553:	2020206b 	eorcs	r2, r0, fp, rrx
 8012557:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801255b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801255f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012563:	20000a64 	andcs	r0, r0, r4, ror #20
 8012567:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801256b:	20796177 	rsbscs	r6, r9, r7, ror r1
 801256f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8012573:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012577:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801257b:	0a64252e 	beq	991ba3b <__exidx_end+0x1908f9b>
 801257f:	72422000 	subvc	r2, r2, #0
 8012583:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8012587:	20747361 	rsbscs	r7, r4, r1, ror #6
 801258b:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801258f:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8012593:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012597:	20000a64 	andcs	r0, r0, r4, ror #20
 801259b:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801259f:	20202020 	eorcs	r2, r0, r0, lsr #32
 80125a3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80125a7:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80125ab:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80125af:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80125b3:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80125b7:	3a78322e 	bcc	9e1ee77 <__exidx_end+0x1e0c3d7>
 80125bb:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80125bf:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80125c3:	20000a78 	andcs	r0, r0, r8, ror sl
 80125c7:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80125cb:	20202020 	eorcs	r2, r0, r0, lsr #32
 80125cf:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80125d3:	000a6325 	andeq	r6, sl, r5, lsr #6
 80125d7:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 80125db:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 80125df:	 	rsbvc	r0, r9, r0, asr r0

080125e1 <NetworkParamsConst::IP_ADDRESS>:
 80125e1:	615f7069 	cmpvs	pc, r9, rrx
 80125e5:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 80125e9:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

080125ec <NetworkParamsConst::DEFAULT_GATEWAY>:
 80125ec:	61666564 	cmnvs	r6, r4, ror #10
 80125f0:	5f746c75 	svcpl	0x00746c75
 80125f4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80125f8:	00796177 	rsbseq	r6, r9, r7, ror r1

080125fc <NetworkParamsConst::DHCP_RETRY_TIME>:
 80125fc:	70636864 	rsbvc	r6, r3, r4, ror #16
 8012600:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8012604:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801260c <NetworkParamsConst::HOSTNAME>
 8012608:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801260c <NetworkParamsConst::HOSTNAME>:
 801260c:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8012610:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08012615 <NetworkParamsConst::NET_MASK>:
 8012615:	5f74656e 	svcpl	0x0074656e
 8012619:	6b73616d 	blvs	9ceabd5 <__exidx_end+0x1cd8135>
	...

0801261e <NetworkParamsConst::USE_DHCP>:
 801261e:	5f657375 	svcpl	0x00657375
 8012622:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08012627 <NetworkParamsConst::FILE_NAME>:
 8012627:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801262b:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801262f:	00747874 	rsbseq	r7, r4, r4, ror r8
 8012633:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8012637:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801263b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801263f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8012643:	002c2264 	eoreq	r2, ip, r4, ror #4
 8012647:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801264b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801264f:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8012653:	0a64252e 	beq	991bb13 <__exidx_end+0x1909073>
 8012657:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801265b:	0a232073 	beq	88da82f <__exidx_end+0x8c7d8f>
 801265f:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8012663:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8012667:	2079616c 	rsbscs	r6, r9, ip, ror #2
 801266b:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 801266f:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8012673:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8012677:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 801267b:	36303331 			; <UNDEFINED> instruction: 0x36303331
 801267f:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8012683:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8012687:	0a296425 	beq	8a6b723 <__exidx_end+0xa58c83>
 801268b:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 801268f:	0000eeaa 	andeq	lr, r0, sl, lsr #29
	...

08012694 <_OledFont8x6>:
 8012694:	00000040 	andeq	r0, r0, r0, asr #32
 8012698:	40000000 	andmi	r0, r0, r0
 801269c:	005f0000 	subseq	r0, pc, r0
 80126a0:	00400000 	subeq	r0, r0, r0
 80126a4:	00070007 	andeq	r0, r7, r7
 80126a8:	7f144000 	svcvc	0x00144000
 80126ac:	00147f14 	andseq	r7, r4, r4, lsl pc
 80126b0:	7f2a2440 	svcvc	0x002a2440
 80126b4:	4000122a 	andmi	r1, r0, sl, lsr #4
 80126b8:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80126bc:	36400062 	strbcc	r0, [r0], -r2, rrx
 80126c0:	50205649 	eorpl	r5, r0, r9, asr #12
 80126c4:	08004000 	stmdaeq	r0, {lr}
 80126c8:	00000307 	andeq	r0, r0, r7, lsl #6
 80126cc:	221c0040 	andscs	r0, ip, #64	; 0x40
 80126d0:	40000041 	andmi	r0, r0, r1, asr #32
 80126d4:	1c224100 	stfnes	f4, [r2], #-0
 80126d8:	2a400000 	bcs	90126e0 <__exidx_end+0xfffc40>
 80126dc:	2a1c7f1c 	bcs	8732354 <__exidx_end+0x71f8b4>
 80126e0:	08084000 	stmdaeq	r8, {lr}
 80126e4:	0008083e 	andeq	r0, r8, lr, lsr r8
 80126e8:	70800040 	addvc	r0, r0, r0, asr #32
 80126ec:	40000030 	andmi	r0, r0, r0, lsr r0
 80126f0:	08080808 	stmdaeq	r8, {r3, fp}
 80126f4:	00400008 	subeq	r0, r0, r8
 80126f8:	00606000 	rsbeq	r6, r0, r0
 80126fc:	10204000 	eorne	r4, r0, r0
 8012700:	00020408 	andeq	r0, r2, r8, lsl #8
 8012704:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8012708:	40003e45 	andmi	r3, r0, r5, asr #28
 801270c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8012710:	72400000 	subvc	r0, r0, #0
 8012714:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8012718:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801271c:	00334d49 	eorseq	r4, r3, r9, asr #26
 8012720:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8012724:	4000107f 	andmi	r1, r0, pc, ror r0
 8012728:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801272c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8012730:	3149494a 	cmpcc	r9, sl, asr #18
 8012734:	21414000 	mrscs	r4, (UNDEF: 65)
 8012738:	00070911 	andeq	r0, r7, r1, lsl r9
 801273c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8012740:	40003649 	andmi	r3, r0, r9, asr #12
 8012744:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8012748:	0040001e 	subeq	r0, r0, lr, lsl r0
 801274c:	00001400 	andeq	r1, r0, r0, lsl #8
 8012750:	40004000 	andmi	r4, r0, r0
 8012754:	00000034 	andeq	r0, r0, r4, lsr r0
 8012758:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801275c:	40004122 	andmi	r4, r0, r2, lsr #2
 8012760:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8012764:	00400014 	subeq	r0, r0, r4, lsl r0
 8012768:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801276c:	01024000 	mrseq	r4, (UNDEF: 2)
 8012770:	00060959 	andeq	r0, r6, r9, asr r9
 8012774:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8012778:	40004e59 	andmi	r4, r0, r9, asr lr
 801277c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8012780:	7f40007c 	svcvc	0x0040007c
 8012784:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8012788:	413e4000 	teqmi	lr, r0
 801278c:	00224141 	eoreq	r4, r2, r1, asr #2
 8012790:	41417f40 	cmpmi	r1, r0, asr #30
 8012794:	40003e41 	andmi	r3, r0, r1, asr #28
 8012798:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801279c:	7f400041 	svcvc	0x00400041
 80127a0:	01090909 	tsteq	r9, r9, lsl #18
 80127a4:	413e4000 	teqmi	lr, r0
 80127a8:	00735141 	rsbseq	r5, r3, r1, asr #2
 80127ac:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80127b0:	40007f08 	andmi	r7, r0, r8, lsl #30
 80127b4:	417f4100 	cmnmi	pc, r0, lsl #2
 80127b8:	20400000 	subcs	r0, r0, r0
 80127bc:	013f4140 	teqeq	pc, r0, asr #2
 80127c0:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80127c4:	00412214 	subeq	r2, r1, r4, lsl r2
 80127c8:	40407f40 	submi	r7, r0, r0, asr #30
 80127cc:	40004040 	andmi	r4, r0, r0, asr #32
 80127d0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80127d4:	7f40007f 	svcvc	0x0040007f
 80127d8:	7f100804 	svcvc	0x00100804
 80127dc:	413e4000 	teqmi	lr, r0
 80127e0:	003e4141 	eorseq	r4, lr, r1, asr #2
 80127e4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80127e8:	40000609 	andmi	r0, r0, r9, lsl #12
 80127ec:	2151413e 	cmpcs	r1, lr, lsr r1
 80127f0:	7f40005e 	svcvc	0x0040005e
 80127f4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80127f8:	49264000 	stmdbmi	r6!, {lr}
 80127fc:	00324949 	eorseq	r4, r2, r9, asr #18
 8012800:	7f010340 	svcvc	0x00010340
 8012804:	40000301 	andmi	r0, r0, r1, lsl #6
 8012808:	4040403f 	submi	r4, r0, pc, lsr r0
 801280c:	1f40003f 	svcne	0x0040003f
 8012810:	1f204020 	svcne	0x00204020
 8012814:	403f4000 	eorsmi	r4, pc, r0
 8012818:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801281c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8012820:	40006314 	andmi	r6, r0, r4, lsl r3
 8012824:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8012828:	61400003 	cmpvs	r0, r3
 801282c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8012830:	7f004000 	svcvc	0x00004000
 8012834:	00414141 	subeq	r4, r1, r1, asr #2
 8012838:	08040240 	stmdaeq	r4, {r6, r9}
 801283c:	40002010 	andmi	r2, r0, r0, lsl r0
 8012840:	41414100 	mrsmi	r4, (UNDEF: 81)
 8012844:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8012848:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801284c:	40404000 	submi	r4, r0, r0
 8012850:	00404040 	subeq	r4, r0, r0, asr #32
 8012854:	07030040 	streq	r0, [r3, -r0, asr #32]
 8012858:	40000008 	andmi	r0, r0, r8
 801285c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8012860:	7f400040 	svcvc	0x00400040
 8012864:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8012868:	44384000 	ldrtmi	r4, [r8], #-0
 801286c:	00284444 	eoreq	r4, r8, r4, asr #8
 8012870:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8012874:	40007f28 	andmi	r7, r0, r8, lsr #30
 8012878:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801287c:	00400018 	subeq	r0, r0, r8, lsl r0
 8012880:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8012884:	a4184000 	ldrge	r4, [r8], #-0
 8012888:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801288c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8012890:	40007804 	andmi	r7, r0, r4, lsl #16
 8012894:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8012898:	20400000 	subcs	r0, r0, r0
 801289c:	003d4040 	eorseq	r4, sp, r0, asr #32
 80128a0:	107f4000 	rsbsne	r4, pc, r0
 80128a4:	00004428 	andeq	r4, r0, r8, lsr #8
 80128a8:	7f410040 	svcvc	0x00410040
 80128ac:	40000040 	andmi	r0, r0, r0, asr #32
 80128b0:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 80128b4:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80128b8:	78040408 	stmdavc	r4, {r3, sl}
 80128bc:	44384000 	ldrtmi	r4, [r8], #-0
 80128c0:	00384444 	eorseq	r4, r8, r4, asr #8
 80128c4:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 80128c8:	40001824 	andmi	r1, r0, r4, lsr #16
 80128cc:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80128d0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80128d4:	08040408 	stmdaeq	r4, {r3, sl}
 80128d8:	54484000 	strbpl	r4, [r8], #-0
 80128dc:	00245454 	eoreq	r5, r4, r4, asr r4
 80128e0:	3f040440 	svccc	0x00040440
 80128e4:	40002444 	andmi	r2, r0, r4, asr #8
 80128e8:	2040403c 	subcs	r4, r0, ip, lsr r0
 80128ec:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80128f0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80128f4:	403c4000 	eorsmi	r4, ip, r0
 80128f8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80128fc:	10284440 	eorne	r4, r8, r0, asr #8
 8012900:	40004428 	andmi	r4, r0, r8, lsr #8
 8012904:	9090904c 	addsls	r9, r0, ip, asr #32
 8012908:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801290c:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8012910:	08004000 	stmdaeq	r0, {lr}
 8012914:	00004136 	andeq	r4, r0, r6, lsr r1
 8012918:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801291c:	40000000 	andmi	r0, r0, r0
 8012920:	08364100 	ldmdaeq	r6!, {r8, lr}
 8012924:	02400000 	subeq	r0, r0, #0
 8012928:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801292c:	263c4000 	ldrtcs	r4, [ip], -r0
 8012930:	003c2623 	eorseq	r2, ip, r3, lsr #12

08012934 <oled_128x32_init>:
 8012934:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012938:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801293c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012940:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8012944:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012948:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801294c <oled_128x64_init>:
 801294c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8012950:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8012954:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8012958:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801295c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8012960:	a6a440db 	ssatge	r4, #5, fp, asr #1

08012964 <vtable for Ssd1306>:
	...
 801296c:	0800e727 	stmdaeq	r0, {r0, r1, r2, r5, r8, r9, sl, sp, lr, pc}
 8012970:	0800e755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, sp, lr, pc}
 8012974:	0800ea6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, sp, lr, pc}
 8012978:	0800e9f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp, sp, lr, pc}
 801297c:	0800e8bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, sp, lr, pc}
 8012980:	0800e775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8012984:	0800e79d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, sp, lr, pc}
 8012988:	0800e893 	stmdaeq	r0, {r0, r1, r4, r7, fp, sp, lr, pc}
 801298c:	0800e84d 	stmdaeq	r0, {r0, r2, r3, r6, fp, sp, lr, pc}
 8012990:	0800e729 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, sp, lr, pc}
 8012994:	0800e8f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp, lr, pc}
 8012998:	0800e905 	stmdaeq	r0, {r0, r2, r8, fp, sp, lr, pc}
 801299c:	0800e91f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, fp, sp, lr, pc}
 80129a0:	0800e72d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, sp, lr, pc}
 80129a4:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80129a8:	5b1b006d 	blpl	86d2b64 <__exidx_end+0x6c00c4>
 80129ac:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80129b0:	31335b1b 	teqcc	r3, fp, lsl fp
 80129b4:	5b1b006d 	blpl	86d2b70 <__exidx_end+0x6c00d0>
 80129b8:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 80129bc:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 80129c0:	5b1b006d 	blpl	86d2b7c <__exidx_end+0x6c00dc>
 80129c4:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 80129c8:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80129cc:	205d732a 	subscs	r7, sp, sl, lsr #6
 80129d0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80129d4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80129d8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80129dc:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80129e0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80129e4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80129e8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80129ec:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80129f0:	203a636f 	eorscs	r6, sl, pc, ror #6
 80129f4:	000a7525 	andeq	r7, sl, r5, lsr #10
 80129f8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80129fc:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a00:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8012a04:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8012a08:	6b636f6c 	blvs	98ee7c0 <__exidx_end+0x18dbd20>
 8012a0c:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8012a10:	000a7469 	andeq	r7, sl, r9, ror #8
 8012a14:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8012a18:	203a636f 	eorscs	r6, sl, pc, ror #6
 8012a1c:	6f6c4270 	svcvs	0x006c4270
 8012a20:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8012a24:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8012a28:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8012a2c:	7a697320 	bvc	9a6f6b4 <__exidx_end+0x1a5cc14>
 8012a30:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8012a34:	6164202c 	cmnvs	r4, ip, lsr #32
 8012a38:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8012a3c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8012a40:	3a656572 	bcc	996c010 <__exidx_end+0x1959570>
 8012a44:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8012a48:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8012a4c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8012a50:	203d2072 	eorscs	r2, sp, r2, ror r0
 8012a54:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8012a58:	6f6c4270 	svcvs	0x006c4270
 8012a5c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8012a60:	0a702520 	beq	9c1bee8 <__exidx_end+0x1c09448>
 8012a64:	00000000 	andeq	r0, r0, r0

08012a68 <days_of_month>:
 8012a68:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a6c:	0000001c 	andeq	r0, r0, ip, lsl r0
 8012a70:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a74:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a78:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a7c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a80:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a84:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a88:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a8c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8012a90:	0000001e 	andeq	r0, r0, lr, lsl r0
 8012a94:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08012a98 <__exidx_start>:
 8012a98:	7fff5088 	svcvc	0x00ff5088
 8012a9c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08012aa0 <.ARM.attributes>:
 8012aa0:	00002e41 	andeq	r2, r0, r1, asr #28
 8012aa4:	61656100 	cmnvs	r5, r0, lsl #2
 8012aa8:	01006962 	tsteq	r0, r2, ror #18
 8012aac:	00000024 	andeq	r0, r0, r4, lsr #32
 8012ab0:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8012ab4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8012ab8:	0600334d 	streq	r3, [r0], -sp, asr #6
 8012abc:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8012ac0:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8012ac4:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8012ac8:	1a011803 	bne	8058adc <__exidx_end+0x4603c>
 8012acc:	Address 0x0000000008012acc is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000709 	andcs	r0, r0, r9, lsl #14

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	20016000 	andcs	r6, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	066ff300 	strbteq	pc, [pc], -r0, lsl #6	; <UNPREDICTABLE>

Disassembly of section .bss:

200000f8 <outptr>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <OscServer::s_aPathInfo>:
	...

2000017c <OscServer::s_pUdpBuffer>:
2000017c:	00000000 	andeq	r0, r0, r0

20000180 <OscServer::s_aPathSecond>:
	...

20000200 <OscServer::s_aPathBlackOut>:
	...

20000280 <OscServer::s_aPath>:
	...

20000300 <OscServer::s_pData>:
	...

20000500 <OscServer::s_pThis>:
20000500:	00000000 	andeq	r0, r0, r0

20000504 <OscSimpleSend::s_Message>:
	...

20000704 <DmxSend::s_nStarted>:
	...

20000705 <DmxConfigUdp::s_Buffer>:
	...

20000718 <s_RxBuffer>:
	...

20000928 <s_TxBuffer>:
	...

20000b2c <sv_PortState>:
20000b2c:	00000000 	andeq	r0, r0, r0

20000b30 <s_nUartsSending>:
20000b30:	00000000 	andeq	r0, r0, r0

20000b34 <sv_nRxDmxPackets>:
	...

20000b44 <Dmx::s_pThis>:
20000b44:	00000000 	andeq	r0, r0, r0

20000b48 <gv_RdmDataReceiveEnd>:
20000b48:	00000000 	andeq	r0, r0, r0

20000b4c <RemoteConfig::s_pUdpBuffer>:
20000b4c:	00000000 	andeq	r0, r0, r0

20000b50 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000b74 <RemoteConfig::s_pThis>:
20000b74:	00000000 	andeq	r0, r0, r0

20000b78 <SpiFlashStore::s_nWaitMillis>:
20000b78:	00000000 	andeq	r0, r0, r0

20000b7c <SpiFlashStore::s_SpiFlashData>:
	...

20001b7c <SpiFlashStore::s_nStartAddress>:
20001b7c:	00000000 	andeq	r0, r0, r0

20001b80 <SpiFlashStore::s_bHaveFlashChip>:
20001b80:	00000000 	andeq	r0, r0, r0

20001b84 <SpiFlashStore::s_nSpiFlashStoreSize>:
20001b84:	00000000 	andeq	r0, r0, r0

20001b88 <SpiFlashStore::s_State>:
20001b88:	00000000 	andeq	r0, r0, r0

20001b8c <SpiFlashStore::s_pThis>:
20001b8c:	00000000 	andeq	r0, r0, r0

20001b90 <SpiFlashStore::s_bIsNew>:
20001b90:	00000000 	andeq	r0, r0, r0

20001b94 <StoreDmxSend::s_pThis>:
20001b94:	00000000 	andeq	r0, r0, r0

20001b98 <StoreNetwork::s_pThis>:
20001b98:	00000000 	andeq	r0, r0, r0

20001b9c <StoreOscServer::s_pThis>:
20001b9c:	00000000 	andeq	r0, r0, r0

20001ba0 <StoreRemoteConfig::s_pThis>:
20001ba0:	00000000 	andeq	r0, r0, r0

20001ba4 <FlashRom::s_pThis>:
20001ba4:	00000000 	andeq	r0, r0, r0

20001ba8 <flashrom::s_nAddress>:
20001ba8:	00000000 	andeq	r0, r0, r0

20001bac <flashrom::s_State>:
20001bac:	00000000 	andeq	r0, r0, r0

20001bb0 <flashrom::s_nPage>:
20001bb0:	00000000 	andeq	r0, r0, r0

20001bb4 <flashrom::s_pData>:
20001bb4:	00000000 	andeq	r0, r0, r0

20001bb8 <flashrom::s_isBank0>:
20001bb8:	00000000 	andeq	r0, r0, r0

20001bbc <flashrom::s_nLength>:
20001bbc:	00000000 	andeq	r0, r0, r0

20001bc0 <g_ip_info>:
	...

20001bcc <g_mac_address>:
20001bcc:	00000000 	andeq	r0, r0, r0
	...

20001bd2 <s_is_dhcp>:
	...

20001bd4 <s_p>:
20001bd4:	00000000 	andeq	r0, r0, r0

20001bd8 <s_ticker>:
20001bd8:	00000000 	andeq	r0, r0, r0

20001bdc <s_mac_address>:
	...

20001be4 <s_mac_address_arp_reply>:
20001be4:	00000000 	andeq	r0, r0, r0
	...

20001bea <s_id>:
	...

20001bec <s_recv_queue>:
	...

2000275c <s_tcb>:
	...

200027a0 <s_tcp>:
	...

20002d8c <broadcast_mask>:
20002d8c:	00000000 	andeq	r0, r0, r0

20002d90 <gw_ip>:
20002d90:	00000000 	andeq	r0, r0, r0

20002d94 <on_network_mask>:
20002d94:	00000000 	andeq	r0, r0, r0

20002d98 <s_id>:
20002d98:	00000000 	andeq	r0, r0, r0

20002d9c <s_ports_allowed>:
	...

20002dbc <s_recv_queue>:
	...

20008a5c <s_send_packet>:
	...

20009048 <MDNS::s_nRemoteIp>:
20009048:	00000000 	andeq	r0, r0, r0

2000904c <MDNS::s_nRemotePort>:
2000904c:	00000000 	andeq	r0, r0, r0

20009050 <MDNS::s_nMulticastIp>:
20009050:	00000000 	andeq	r0, r0, r0

20009054 <MDNS::s_AnswerLocalIp>:
	...

20009258 <MDNS::s_ServiceRecords>:
	...

20009278 <MDNS::s_nBytesReceived>:
20009278:	00000000 	andeq	r0, r0, r0

2000927c <MDNS::s_ServiceRecordsData>:
	...

20009480 <MDNS::s_pName>:
20009480:	00000000 	andeq	r0, r0, r0

20009484 <MDNS::s_pBuffer>:
20009484:	00000000 	andeq	r0, r0, r0

20009488 <Network::s_pThis>:
20009488:	00000000 	andeq	r0, r0, r0

2000948c <NetworkParams::m_tNetworkParams>:
	...

200094ec <s_arp_announce>:
	...

20009518 <s_arp_reply>:
	...

20009544 <s_arp_request>:
	...

20009570 <s_arp_records>:
	...

200096f0 <s_entry_current>:
200096f0:	00000000 	andeq	r0, r0, r0

200096f4 <s_dhcp_allocated_gw>:
200096f4:	00000000 	andeq	r0, r0, r0

200096f8 <s_dhcp_allocated_ip>:
200096f8:	00000000 	andeq	r0, r0, r0

200096fc <s_dhcp_allocated_netmask>:
200096fc:	00000000 	andeq	r0, r0, r0

20009700 <s_dhcp_message>:
	...

20009924 <s_dhcp_server_ip>:
20009924:	00000000 	andeq	r0, r0, r0

20009928 <s_groups>:
	...

20009a48 <s_id>:
20009a48:	00000000 	andeq	r0, r0, r0

20009a4c <s_joins_allowed_index>:
20009a4c:	00000000 	andeq	r0, r0, r0

20009a50 <s_leave>:
	...

20009a80 <s_multicast_mac>:
	...

20009a88 <s_report>:
	...

20009ab6 <PropertiesConfig::s_Config>:
	...

20009ab8 <Display::s_pThis>:
20009ab8:	00000000 	andeq	r0, r0, r0

20009abc <_ClearBuffer>:
	...

20009b44 <Ssd1306::s_pThis>:
20009b44:	00000000 	andeq	r0, r0, r0

20009b48 <FirmwareVersion::s_FirmwareVersion>:
	...

20009b5e <FirmwareVersion::s_Print>:
	...

20009ba0 <FirmwareVersion::s_pThis>:
20009ba0:	00000000 	andeq	r0, r0, r0

20009ba4 <LedBlink::s_pThis>:
20009ba4:	00000000 	andeq	r0, r0, r0

20009ba8 <Hardware::s_pThis>:
20009ba8:	00000000 	andeq	r0, r0, r0

20009bac <last.0>:
20009bac:	00000000 	andeq	r0, r0, r0

20009bb0 <s_micros>:
	...

20009bb8 <set_timer>:
20009bb8:	00000000 	andeq	r0, r0, r0

20009bbc <s_nSysTickMillis>:
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <enet_init_status>:
20009bc0:	00000000 	andeq	r0, r0, r0

20009bc4 <s_nAddress>:
20009bc4:	00000000 	andeq	r0, r0, r0

20009bc8 <dma_current_ptp_rxdesc>:
20009bc8:	00000000 	andeq	r0, r0, r0

20009bcc <dma_current_ptp_txdesc>:
20009bcc:	00000000 	andeq	r0, r0, r0

20009bd0 <dma_current_rxdesc>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <dma_current_txdesc>:
20009bd4:	00000000 	andeq	r0, r0, r0

20009bd8 <enet_initpara>:
	...

20009c14 <rx_buff>:
	...

2000b3e4 <rxdesc_tab>:
	...

2000b424 <tx_buff>:
	...

2000c00c <txdesc_tab>:
	...

Disassembly of section .heap:

20016000 <heap_low>:
	...

Disassembly of section .stack:

20016800 <_sp-0x1800>:
	...
